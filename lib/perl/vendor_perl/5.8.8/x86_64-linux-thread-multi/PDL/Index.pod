
=head1 NAME

PDL::Index - an index of PDL documentation

=head1 DESCRIPTION

A meta document listing the documented PDL modules and
the PDL manual dcouments

=head1 PDL manuals

=over 4

=item *

L<PDL::API|PDL::API> - making piddles from Perl and C/XS code

=item *

L<PDL::BadValues|PDL::BadValues> - Discussion of bad value support in PDL

=item *

L<PDL::Dataflow|PDL::Dataflow> - description of the dataflow philosophy

=item *

L<PDL::Delta|PDL::Delta> - PDL changes between V1.0 and V2.0

=item *

L<PDL::FAQ|PDL::FAQ> - Frequently asked questions about PDL

=item *

L<PDL::Impatient|PDL::Impatient> - PDL for the impatient (quick overview)

=item *

L<PDL::Indexing|PDL::Indexing> - how to index piddles.

=item *

L<PDL::Internals|PDL::Internals> - description of some aspects of the current internals

=item *

L<PDL::Intro|PDL::Intro> - Introduction to the Perl Data Language

=item *

L<PDL::Objects|PDL::Objects> - Object-Orientation, what is it and how to exploit it

=item *

L<PDL::PP|PDL::PP> - Generate PDL routines from concise descriptions

=item *

L<PDL::Philosophy|PDL::Philosophy> - what's behind PDL?

=item *

L<PDL::Tips|PDL::Tips> - Small tidbits of useful arcana. Programming tidbits and such.


=back

=head1 PDL scripts

=over 4

=item *

L<pdldoc|PDL::pdldoc> - shell interface to PDL documentation

=item *

L<perldl|PDL::perldl> - Simple shell for PDL

=item *

L<pptemplate|PDL::pptemplate> - script to generate Makefile.PL and PP file skeleton


=back

=head1 PDL modules

=over 4

=item *

L<PDL::PDL|PDL::PDL> - the Perl Data Language

=item *

L<PDL::AutoLoader|PDL::AutoLoader> - MatLab style AutoLoader for PDL

=item *

L<PDL::Bad|PDL::Bad> - PDL does not process bad values

=item *

L<PDL::Basic|PDL::Basic> - Basic utility functions for PDL

=item *

L<PDL::CallExt|PDL::CallExt> - call functions in external shared libraries

=item *

L<PDL::Char|PDL::Char> - PDL subclass which allows reading and writing of fixed-length character strings as byte PDLs

=item *

L<PDL::Complex|PDL::Complex> - handle complex numbers

=item *

L<PDL::Core|PDL::Core> - fundamental PDL functionality

=item *

L<PDL::Core::Dev|PDL::Core::Dev> - PDL development module

=item *

L<PDL::Dbg|PDL::Dbg> - functions to support debugging of PDL scripts

=item *

L<PDL::DiskCache|PDL::DiskCache> - Non-memory-resident array object

=item *

L<PDL::Doc|PDL::Doc> - support for PDL online documentation

=item *

L<PDL::Doc::Perldl|PDL::Doc::Perldl> - commands for accessing PDL doc database from 'perldl' shell

=item *

L<PDL::Exporter|PDL::Exporter> - PDL export control

=item *

L<PDL::FFT|PDL::FFT> - FFTs for PDL

=item *

L<PDL::FFTW|PDL::FFTW> - PDL interface to the Fastest Fourier Transform in the West v2.x

=item *

L<PDL::Filter::LinPred|PDL::Filter::LinPred> - Linear predictive filtering

=item *

L<PDL::Filter::Linear|PDL::Filter::Linear> - linear filtering for PDL

=item *

L<PDL::Fit::Gaussian|PDL::Fit::Gaussian> - routines for fitting gaussians

=item *

L<PDL::Fit::LM|PDL::Fit::LM> - Levenberg-Marquardt fitting routine for PDL

=item *

L<PDL::Fit::Linfit|PDL::Fit::Linfit> - routines for fitting data with linear combinations of functions.

=item *

L<PDL::Fit::Polynomial|PDL::Fit::Polynomial> - routines for fitting with polynomials

=item *

L<PDL::Func|PDL::Func> - useful functions

=item *

L<PDL::GIS::Proj|PDL::GIS::Proj> - PDL interface to the Proj4 projection library.

=item *

L<PDL::Gaussian|PDL::Gaussian> - Gaussian distributions.

=item *

L<PDL::Graphics2D|PDL::Graphics2D> - An object oriented interface to PDL graphics

=item *

L<PDL::Graphics::IIS|PDL::Graphics::IIS> - Display PDL images on IIS devices (saoimage/ximtool)

=item *

L<PDL::Graphics::LUT|PDL::Graphics::LUT> - provides access to a number of look-up tables

=item *

L<PDL::Graphics::Limits|PDL::Graphics::Limits> - derive limits for display purposes

=item *

L<PDL::Graphics::OpenGLOO|PDL::Graphics::OpenGLOO> - an Object Oriented interface to the interface.

=item *

L<PDL::Graphics::OpenGLQ|PDL::Graphics::OpenGLQ> - quick routines to plot lots of stuff from piddles.

=item *

L<PDL::Graphics::PGPLOT|PDL::Graphics::PGPLOT> - PGPLOT enhanced interface for PDL

=item *

L<PDL::Graphics::PGPLOT::Window|PDL::Graphics::PGPLOT::Window> - A OO interface to PGPLOT windows

=item *

L<PDL::Graphics::PGPLOTOptions|PDL::Graphics::PGPLOTOptions> - Setting PGPLOT options

=item *

L<PDL::Graphics::PLplot|PDL::Graphics::PLplot> - Object-oriented interface from perl/PDL to the PLPLOT plotting library

=item *

L<PDL::Graphics::TriD|PDL::Graphics::TriD> - PDL 3D interface

=item *

L<PDL::Graphics::TriD::ButtonControl|PDL::Graphics::TriD::ButtonControl> - default event handler subroutines

=item *

L<PDL::Graphics::TriD::Contours|PDL::Graphics::TriD::Contours> - 3D Surface contours for TriD

=item *

L<PDL::Graphics::TriD::Labels|PDL::Graphics::TriD::Labels> - Text tools

=item *

L<PDL::Graphics::TriD::MathGraph|PDL::Graphics::TriD::MathGraph> - Mathematical Graph objects for PDL

=item *

L<PDL::Graphics::TriD::Objects|PDL::Graphics::TriD::Objects> - Simple Graph Objects for TriD

=item *

L<PDL::Graphics::TriD::Rout|PDL::Graphics::TriD::Rout> - Helper routines for Three-dimensional graphics

=item *

L<PDL::Graphics::TriD::Tk|PDL::Graphics::TriD::Tk> - A Tk widget interface to the PDL::Graphics::TriD.

=item *

L<PDL::Graphics::TriD::VRML|PDL::Graphics::TriD::VRML> - TriD VRML backend

=item *

L<PDL::IO::Browser|PDL::IO::Browser> - 2D data browser for PDL

=item *

L<PDL::IO::Dumper|PDL::IO::Dumper> - data dumping for structs with PDLs

=item *

L<PDL::IO::FITS|PDL::IO::FITS> - Simple FITS support for PDL

=item *

L<PDL::IO::FastRaw|PDL::IO::FastRaw> - A simple, fast and convenient io format for PerlDL.

=item *

L<PDL::IO::FlexRaw|PDL::IO::FlexRaw> - A flexible binary i/o format for PerlDL.

=item *

L<PDL::IO::GD|PDL::IO::GD> - Interface to the GD image library.

=item *

L<PDL::IO::HDF|PDL::IO::HDF> - A PDL interface to the HDF4 library.

=item *

L<PDL::IO::Misc|PDL::IO::Misc> - misc IO routines for PDL

=item *

L<PDL::IO::NDF|PDL::IO::NDF> - PDL Module for reading and writing Starlink

=item *

L<PDL::IO::Pic|PDL::IO::Pic> - image I/O for PDL

=item *

L<PDL::IO::Pnm|PDL::IO::Pnm> - pnm format I/O for PDL

=item *

L<PDL::IO::Storable|PDL::IO::Storable> - helper functions to make PDL usable with Storable

=item *

L<PDL::Image2D|PDL::Image2D> - Miscellaneous 2D image processing functions

=item *

L<PDL::ImageND|PDL::ImageND> - useful image processing in N dimensions

=item *

L<PDL::ImageRGB|PDL::ImageRGB> - some utility functions for RGB image data handling

=item *

L<PDL::Lite|PDL::Lite> - minimum PDL module OO loader

=item *

L<PDL::LiteF|PDL::LiteF> - minimum PDL module function loader

=item *

L<PDL::Lvalue|PDL::Lvalue> - declare PDL lvalue subs

=item *

L<PDL::Math|PDL::Math> - extended mathematical operations and special functions

=item *

L<PDL::Matrix|PDL::Matrix> - a convenience matrix class for column-major access

=item *

L<PDL::MatrixOps|PDL::MatrixOps> - Some Useful Matrix Operations

=item *

L<PDL::NiceSlice|PDL::NiceSlice> - toward a nicer slicing syntax for PDL

=item *

L<PDL::Ops|PDL::Ops> - Fundamental mathematical operators

=item *

L<PDL::Opt::Simplex|PDL::Opt::Simplex> - Simplex optimization routines

=item *

L<PDL::Options|PDL::Options> - simplifies option passing by hash in PerlDL

=item *

L<PDL::Primitive|PDL::Primitive> - primitive operations for pdl

=item *

L<PDL::Reduce|PDL::Reduce> - a C<reduce> function for PDL

=item *

L<PDL::Slatec|PDL::Slatec> - PDL interface to the slatec numerical programming library

=item *

L<PDL::Slices|PDL::Slices> - Indexing, slicing, and dicing

=item *

L<PDL::Tests|PDL::Tests> - tests for some PP features

=item *

L<PDL::Transform|PDL::Transform> - Coordinate transforms, image warping, and N-D functions

=item *

L<PDL::Transform::Cartography|PDL::Transform::Cartography> - Useful cartographic projections

=item *

L<PDL::Transform::Proj4|PDL::Transform::Proj4> - PDL::Transform interface to the Proj4 projection library

=item *

L<PDL::Types|PDL::Types> - define fundamental PDL Datatypes

=item *

L<PDL::Ufunc|PDL::Ufunc> - primitive ufunc operations for pdl


=back

=head1 HISTORY

Automatically generated by scantree.pl for PDL version 2.4.3.

