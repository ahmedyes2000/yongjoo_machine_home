.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.04)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Clair::Algorithm::LSI 3pm"
.TH Clair::Algorithm::LSI 3pm "2012-07-09" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Clair::Algorithm::LSI
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Provides latent semantic indexing interfacing with Clair::Cluster. The interface provides
functionality for the construction of the index, which consist of the singular value
decomposition of the document-term matrix underlying the cluster, as well as for the
mapping and ranking of terms, documents, and queries into latent semantic space. Envisioned
for this package are further functionalities, as well as their refinements and optimizations.
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
\&\f(CW$index\fR = Clair::Algorithm::LSI\->new(type => \*(L"stem\*(R")
.PP
(public) Instantiates a new latent semantic index (\s-1LSI\s0) from
         either an existing Clair::Cluster object or by loading
         a previously saved index from file. In the latter case,
         the originally associated cluster may have been saved
         together with the index or may not have been so saved.
         In the latter case, the user has the option of specifying
         an existing cluster to be (re\-)associated with the index.
.PP
<B file>
A path to a file containing a previously saved index.
.PP
<B cluster>
A reference to a cluster to be newly associated to the index
to be built or reassociated to the existing index being loaded.
.PP
<B type>
(optional) the type of index (stemmed is the default)
.SS "build_index"
.IX Subsection "build_index"
\&\f(CW$index\fR\->\fIbuild_index()\fR;
.PP
(public) Constructs the latent semantic index, which is defined by
         the singular value decomposition of the associated cluster's
         document-term matrix. Sets the initial approximation to full
         rank (K = N).
.SS "get_approx_rank"
.IX Subsection "get_approx_rank"
\&\f(CW$approx_rank\fR = \f(CW$index\fR\->\fIget_approx_rank()\fR;
.PP
(public) Returns the rank K of the current approximation;
        where K <= N, the full rank of the approximation.
.SS "set_approx_rank"
.IX Subsection "set_approx_rank"
\&\f(CW$index\fR\->set_approx_rank($K);
.PP
(public) Sets the rank K of the current approximation,
         where K <= N, the full rank of the approximation. If some
         K > N is specified, the rank K retains its previous value.
.PP
\&\fBK\fR
The desired rank of the approximation.
.SS "term_to_latent_space"
.IX Subsection "term_to_latent_space"
\&\f(CW$v\fR = \f(CW$index\fR\->term_to_latent_space($term);
.PP
(public) Maps the specified term to its position vector in latent
         semantic space.
.PP
\&\fBterm\fR
The (unstemmed) term.
.SS "query_to_latent_space"
.IX Subsection "query_to_latent_space"
\&\f(CW$v\fR = \f(CW$index\fR\->query_to_latent_space($querystring);
.PP
(public) Maps the specified query to its position vector in latent
         semantic space. The query is treated exactly like a
         document the text of which is precisely the query text.
.PP
\&\fBquery\fR
The (unstemmed) query string.
.SS "doc_to_latent_space"
.IX Subsection "doc_to_latent_space"
\&\f(CW$v\fR = \f(CW$index\fR\->doc_to_latent_space($docref);
.PP
(public) Maps the specified document to its position vector in
         latent semantic space.
.PP
\&\fBdocref\fR
A reference to a Clair::Document object.
.SS "rank_terms"
.IX Subsection "rank_terms"
(public) Compute the distance from the origin term of each of the
         specified terms, in latent semantic space. If no terms
         beside the origin term are specified, then the distance
         of each term occurring in the underlying cluster is computed.
.PP
\&\f(CW%term_distances\fR = \f(CW$index\fR\->rank_terms($origin_term);
.PP
\&\fBorigin_term\fR
The \*(L"origin term\*(R" (from which distances are to be computed).
.PP
\&\fBterms (optional)\fR
A list of (unstemmed) terms.
.SS "rank_queries"
.IX Subsection "rank_queries"
(public) Compute the distance from the origin query of each of the
         specified queries, in latent semantic space.
.PP
\&\f(CW%query_distances\fR = \f(CW$index\fR\->rank_queries($origin_query);
.PP
\&\fBorigin_query\fR
The \*(L"origin query\*(R" (from which distances are to be computed).
.PP
\&\fBqueries\fR
A list of query strings
.SS "rank_docs"
.IX Subsection "rank_docs"
(public) Compute the distance from the origin document of each
         of the specified documents, in latent semantic space.
         If no documents beside the origin document are specified,
         then the distance of each document in the underlying
         cluster is computed.
.PP
\&\fBorigin_docref\fR
A reference to the \*(L"origin document\*(R" (from which distances are to be computed).
.PP
\&\fBdocrefs (optional)\fR
A list of other document references.
.SS "save_to_file"
.IX Subsection "save_to_file"
(public) Dump the latent semantic index to file as a Storable object.
#        Only dump the associated cluster as well if the user so
#        specifies.
.PP
\&\fBfile\fR
Path where the index is to be saved.
.PP
\&\fBsavecluster (optional)\fR
1 if the associated cluster is to be dumped together with the index;
0 if not to be dumped
