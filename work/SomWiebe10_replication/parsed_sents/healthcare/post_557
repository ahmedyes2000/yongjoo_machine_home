(ROOT
  (S
    (NP (NN Everyone))
    (VP (VBZ keeps)
      (S
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (DT these) (CD one) (JJ quick) (NNS fixes))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJ social) (NNS inequalities))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP exist)
                            (PRN (-LRB- -LRB-)
                              (CC and)
                              (VP (VBP are)
                                (VP (VBG increasing)))
                              (-RRB- -RRB-))))))))
                (PP (IN for)
                  (NP (DT the) (JJ American) (NNS people)))))))))
    (. .)))

nsubj(keeps-2, Everyone-1)
root(ROOT-0, keeps-2)
xcomp(keeps-2, trying-3)
aux(have-5, to-4)
xcomp(trying-3, have-5)
det(fixes-9, these-6)
num(fixes-9, one-7)
amod(fixes-9, quick-8)
dobj(have-5, fixes-9)
det(inequalities-13, the-11)
amod(inequalities-13, social-12)
prep_of(fixes-9, inequalities-13)
nsubj(exist-15, inequalities-13)
rcmod(inequalities-13, exist-15)
dep(increasing-19, and-17)
aux(increasing-19, are-18)
dep(exist-15, increasing-19)
det(people-24, the-22)
amod(people-24, American-23)
prep_for(have-5, people-24)

(ROOT
  (S
    (NP (CD One) (JJ big) (NNS stimilus) (NN check))
    (VP (VBZ does) (RB not)
      (VP (VB save)
        (NP (DT a) (JJ bad) (NN business))))
    (. .)))

num(check-4, One-1)
amod(check-4, big-2)
nn(check-4, stimilus-3)
nsubj(save-7, check-4)
aux(save-7, does-5)
neg(save-7, not-6)
root(ROOT-0, save-7)
det(business-10, a-8)
amod(business-10, bad-9)
dobj(save-7, business-10)

(ROOT
  (FRAG (CC But)
    (RB maybe)
    (ADVP (RB not))
    (. .)))

dep(maybe-2, But-1)
root(ROOT-0, maybe-2)
neg(maybe-2, not-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT a) (JJ bad) (NN business)))
    (. .)))

nsubj(business-5, It-1)
cop(business-5, is-2)
det(business-5, a-3)
amod(business-5, bad-4)
root(ROOT-0, business-5)

(ROOT
  (S
    (NP
      (NP (CD One) (NN switch))
      (PP (IN from)
        (NP
          (NP (JJ private))
          (PP (TO to)
            (NP (JJ universal) (NN healthcare))))))
    (VP (VBZ does) (RB not)
      (VP (VB fix)
        (NP (DT the) (NN problem))
        (: :)
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (MD can) (RB not)
              (VP (VB afford)
                (NP (PRP it))
                (SBAR (IN because)
                  (S
                    (NP (PRP they))
                    (VP (VBP are)
                      (ADJP (JJ poor)))))))))))
    (. .)))

num(switch-2, One-1)
nsubj(fix-10, switch-2)
prep_from(switch-2, private-4)
amod(healthcare-7, universal-6)
prep_to(private-4, healthcare-7)
aux(fix-10, does-8)
neg(fix-10, not-9)
root(ROOT-0, fix-10)
det(problem-12, the-11)
dobj(fix-10, problem-12)
complm(afford-18, that-14)
nsubj(afford-18, people-15)
aux(afford-18, can-16)
neg(afford-18, not-17)
ccomp(fix-10, afford-18)
parataxis(fix-10, afford-18)
dobj(afford-18, it-19)
mark(poor-23, because-20)
nsubj(poor-23, they-21)
cop(poor-23, are-22)
advcl(afford-18, poor-23)

(ROOT
  (S
    (NP (NNP Universal) (NNP healthcare))
    (VP (MD could)
      (ADVP (RB actually))
      (VP (VB increase)
        (NP
          (NP (DT the) (NN cost))
          (PP (IN of)
            (NP (NN healthcare))))
        (PP (IN for)
          (NP
            (NP (DT some) (NNS individuals))
            (, ,) (RB particularly)
            (NP (DT the) (JJ middle) (NN class))))))
    (. .)))

nn(healthcare-2, Universal-1)
nsubj(increase-5, healthcare-2)
aux(increase-5, could-3)
advmod(increase-5, actually-4)
root(ROOT-0, increase-5)
det(cost-7, the-6)
dobj(increase-5, cost-7)
prep_of(cost-7, healthcare-9)
det(individuals-12, some-11)
prep_for(increase-5, individuals-12)
advmod(individuals-12, particularly-14)
det(class-17, the-15)
amod(class-17, middle-16)
dep(individuals-12, class-17)

(ROOT
  (S
    (S (RB So)
      (VP (VBG switching)
        (SBAR
          (S
            (NP (DT the) (NN healthcare) (NN system))
            (VP (VBZ does) (RB not)
              (VP (VB solve)
                (NP (DT the) (NN problem))))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB only))
    (VP (VBZ changes)
      (NP (PRP it)))
    (. .)))

advmod(switching-2, So-1)
partmod(changes-14, switching-2)
det(system-5, the-3)
nn(system-5, healthcare-4)
nsubj(solve-8, system-5)
aux(solve-8, does-6)
neg(solve-8, not-7)
ccomp(switching-2, solve-8)
det(problem-10, the-9)
dobj(solve-8, problem-10)
nsubj(changes-14, it-12)
advmod(changes-14, only-13)
root(ROOT-0, changes-14)
dobj(changes-14, it-15)

(ROOT
  (S
    (S
      (SBAR
        (WHNP (WP What))
        (S
          (NP (DT the) (JJ American) (NNS people))
          (VP (VBP need)
            (S
              (VP (TO to)
                (VP (VB focus)
                  (PRT (RP on))))))))
      (VP (VBZ is)
        (NP (NN something)
          (S
            (VP (TO to)
              (VP (VB alter)
                (NP (DT the) (JJ actual) (JJ social) (NN condition))
                (: --)
                (S
                  (VP (TO to)
                    (VP (VB mediate))))
                (, ,)
                (S
                  (VP
                    (VP (TO to)
                      (VP (VB relieve)))
                    (, ,)
                    (CC and)
                    (VP (TO to)
                      (VP (VB solve)
                        (NP (DT the) (VBG growing) (NN poverty) (NNS rates))))))))))))
    (PRN (-LRB- -LRB-)
      (CC and)
      (S
        (VP (TO to)
          (VP (VB make)
            (S
              (NP (NNP America))
              (ADJP
                (ADJP (RB as) (RB economically) (JJ equal))
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (ADJP (RB idealistically) (JJ equal))))))))))
      (-RRB- -RRB-))
    (. .)))

dep(need-5, What-1)
det(people-4, the-2)
amod(people-4, American-3)
nsubj(need-5, people-4)
xsubj(focus-7, people-4)
csubj(something-10, need-5)
aux(focus-7, to-6)
xcomp(need-5, focus-7)
prt(focus-7, on-8)
cop(something-10, is-9)
root(ROOT-0, something-10)
aux(alter-12, to-11)
infmod(something-10, alter-12)
det(condition-16, the-13)
amod(condition-16, actual-14)
amod(condition-16, social-15)
dobj(alter-12, condition-16)
aux(mediate-19, to-18)
parataxis(alter-12, mediate-19)
xcomp(alter-12, mediate-19)
aux(relieve-22, to-21)
dep(alter-12, relieve-22)
aux(solve-26, to-25)
dep(alter-12, solve-26)
conj_and(relieve-22, solve-26)
det(rates-30, the-27)
amod(rates-30, growing-28)
nn(rates-30, poverty-29)
dobj(solve-26, rates-30)
dep(make-34, and-32)
aux(make-34, to-33)
dep(something-10, make-34)
nsubj(equal-38, America-35)
advmod(equal-38, as-36)
advmod(equal-38, economically-37)
xcomp(make-34, equal-38)
mark(equal-43, as-39)
nsubj(equal-43, it-40)
cop(equal-43, is-41)
advmod(equal-43, idealistically-42)
ccomp(equal-38, equal-43)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (MD could)
        (VP (VB do)
          (NP (DT this)))))
    (. ?)))

nsubj(do-3, What-1)
aux(do-3, could-2)
root(ROOT-0, do-3)
dobj(do-3, this-4)

(ROOT
  (S
    (VP (VBG Changing)
      (NP (DT the) (NN healthcare) (NN system)))
    (. ?)))

root(ROOT-0, Changing-1)
det(system-4, the-2)
nn(system-4, healthcare-3)
dobj(Changing-1, system-4)

(ROOT
  (FRAG
    (ADVP (RB Maybe))
    (. .)))

root(ROOT-0, Maybe-1)

