(ROOT
  (S (`` ``)
    (S
      (PP (VBG According)
        (PP (TO to)
          (NP (DT this) (NN source) (NN http:\/\/www.nationmaster.com\/graph\/hea_tot_exp_as_of_gdp-health-total-expenditure-gdp))))
      (NP (DT the) (NNP United) (NNPS States))
      (VP (VBZ spends)
        (NP
          (NP (CD 13.9) (NN %))
          (PP (IN of)
            (NP
              (NP (PRP$ its) (NNP GDP))
              (PP (IN on)
                (NP (NN health) (NN care))))))
        (SBAR (IN whereas)
          (S
            (NP (NNP Canada))
            (VP (VBZ spends)
              (NP (CD 9.6) (NN %)))))))
    (, ,)
    (S
      (NP (NNP Australia))
      (VP (VBZ spends)
        (NP (CD 9.1) (NN %))))
    (CC and)
    (S
      (NP (DT the) (NNP United) (NNP Kingdom))
      (VP (VBZ spends)
        (NP
          (NP
            (QP (RB just) (CD 7.5))
            (NN %))
          (PP (IN of)
            (NP (PRP$ its) (NN GDP))))))
    (. .)))

prepc_according_to(spends-10, to-3)
det(http:\/\/www.nationmaster.com\/graph\/hea_tot_exp_as_of_gdp-health-total-expenditure-gdp-6, this-4)
nn(http:\/\/www.nationmaster.com\/graph\/hea_tot_exp_as_of_gdp-health-total-expenditure-gdp-6, source-5)
pobj(spends-10, http:\/\/www.nationmaster.com\/graph\/hea_tot_exp_as_of_gdp-health-total-expenditure-gdp-6)
det(States-9, the-7)
nn(States-9, United-8)
nsubj(spends-10, States-9)
root(ROOT-0, spends-10)
num(%-12, 13.9-11)
dobj(spends-10, %-12)
poss(GDP-15, its-14)
prep_of(%-12, GDP-15)
nn(care-18, health-17)
prep_on(GDP-15, care-18)
mark(spends-21, whereas-19)
nsubj(spends-21, Canada-20)
advcl(spends-10, spends-21)
num(%-23, 9.6-22)
dobj(spends-21, %-23)
nsubj(spends-26, Australia-25)
conj_and(spends-10, spends-26)
num(%-28, 9.1-27)
dobj(spends-26, %-28)
det(Kingdom-32, the-30)
nn(Kingdom-32, United-31)
nsubj(spends-33, Kingdom-32)
conj_and(spends-10, spends-33)
quantmod(7.5-35, just-34)
num(%-36, 7.5-35)
dobj(spends-33, %-36)
poss(GDP-39, its-38)
prep_of(%-36, GDP-39)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR (IN if)
            (S
              (NP (DT this))
              (VP (VBZ is)
                (PP (IN by)
                  (NP (NN chance)
                    (CC or)
                    (NN design)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (ADVP (RB only))
      (VP (VBP see)
        (NP
          (NP (NNS people))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP associate)
                (NP (PRP themselves))
                (PP (IN with)
                  (NP
                    (NP (DT the) (JJ deep) (NN left))
                    (VP (VBG making)
                      (NP (DT this) (NN error)))))))))))
    (. .)))

nsubj(know-5, I-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
mark(is-8, if-6)
nsubj(is-8, this-7)
advcl(know-5, is-8)
prep_by(is-8, chance-10)
prep_by(is-8, design-12)
conj_or(chance-10, design-12)
nsubj(see-17, I-15)
advmod(see-17, only-16)
conj_but(know-5, see-17)
dobj(see-17, people-18)
nsubj(associate-20, people-18)
rcmod(people-18, associate-20)
dobj(associate-20, themselves-21)
det(left-25, the-23)
amod(left-25, deep-24)
prep_with(associate-20, left-25)
partmod(left-25, making-26)
det(error-28, this-27)
dobj(making-26, error-28)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (MD 'll)
      (ADVP (RB just))
      (VP (VB repeat)
        (NP (DT the) (JJ above) (NNS points))
        (, ,)
        (SBAR (IN since)
          (S
            (NP (DT this) (NN sentence))
            (VP (VBZ is)
              (ADVP (RB just))
              (NP
                (NP (DT a) (NN recap))
                (PP (IN of)
                  (NP (DT the) (JJ first) (CD two) (NNS paragraphs)))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBN typed)
                      (NP (CD :1)))))))))))
    (. .)))

nsubj(repeat-5, I-2)
aux(repeat-5, 'll-3)
advmod(repeat-5, just-4)
root(ROOT-0, repeat-5)
det(points-8, the-6)
amod(points-8, above-7)
dobj(repeat-5, points-8)
mark(recap-16, since-10)
det(sentence-12, this-11)
nsubj(recap-16, sentence-12)
cop(recap-16, is-13)
advmod(recap-16, just-14)
det(recap-16, a-15)
advcl(repeat-5, recap-16)
det(paragraphs-21, the-18)
amod(paragraphs-21, first-19)
num(paragraphs-21, two-20)
prep_of(recap-16, paragraphs-21)
nsubj(typed-23, you-22)
rcmod(recap-16, typed-23)
dobj(typed-23, :1-24)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP
        (VP (VB compare)
          (NP (NNS nations))
          (ADVP (RB strictly))
          (PP (IN by)
            (NP (NNP GDP))))
        (PRN (-LRB- -LRB-)
          (S
            (S
              (NP (PRP they))
              (VP (VBP vary)
                (PP (IN by)
                  (NP (NN nation)))))
            (, ,)
            (CC and)
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP (NN population) (NNS differences))
                  (SBAR
                    (S
                      (VP (TO to)
                        (VP (VB take)
                          (PP (IN into)
                            (NP (NN account)))))))))))
          (-RRB- -RRB-))
        (NP (CD .2))))
    (. .)))

nsubj(compare-4, You-1)
aux(compare-4, ca-2)
neg(compare-4, n't-3)
root(ROOT-0, compare-4)
dobj(compare-4, nations-5)
advmod(compare-4, strictly-6)
prep_by(compare-4, GDP-8)
nsubj(vary-11, they-10)
parataxis(compare-4, vary-11)
prep_by(vary-11, nation-13)
expl(are-17, there-16)
parataxis(compare-4, are-17)
conj_and(vary-11, are-17)
nn(differences-19, population-18)
nsubj(are-17, differences-19)
aux(take-21, to-20)
infmod(differences-19, take-21)
prep_into(take-21, account-23)
dobj(compare-4, .2-25)

(ROOT
  (S
    (NP
      (NP (NNP Distinction))
      (PP (IN between)
        (NP (NNP COST)
          (CC and)
          (NNP SPENDING))))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN made)
              (NP (CD .3)))))))
    (. .)))

nsubj(needs-6, Distinction-1)
xsubj(made-9, Distinction-1)
prep_between(Distinction-1, COST-3)
prep_between(Distinction-1, SPENDING-5)
conj_and(COST-3, SPENDING-5)
root(ROOT-0, needs-6)
aux(made-9, to-7)
auxpass(made-9, be-8)
xcomp(needs-6, made-9)
dobj(made-9, .3-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP are)
          (ADVP (RB already))
          (VP (VBG throwing)
            (NP
              (NP (JJ large) (NNS amounts))
              (PP (IN of)
                (NP (NN money))))
            (PP (IN at)
              (NP (DT the) (NN problem)))))))
    (, ,)
    (ADVP (RB then))
    (NP (EX there))
    (VP (VBZ 's)
      (NP (DT no) (NN reason)
        (S
          (VP (TO to)
            (VP (VB think)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (MD should)
                    (VP (VB switch)
                      (PP (TO to)
                        (NP
                          (NP (DT a) (NN system))
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (MD would)
                                (VP (VB cost\/spend)
                                  (ADVP (RB even))
                                  (ADVP (RBR more)
                                    (NP (CD .4))))))))))))))))))
    (. .)))

mark(throwing-5, If-1)
nsubj(throwing-5, we-2)
aux(throwing-5, are-3)
advmod(throwing-5, already-4)
advcl('s-16, throwing-5)
amod(amounts-7, large-6)
dobj(throwing-5, amounts-7)
prep_of(amounts-7, money-9)
det(problem-12, the-11)
prep_at(throwing-5, problem-12)
advmod('s-16, then-14)
expl('s-16, there-15)
root(ROOT-0, 's-16)
det(reason-18, no-17)
nsubj('s-16, reason-18)
aux(think-20, to-19)
infmod(reason-18, think-20)
nsubj(switch-23, we-21)
aux(switch-23, should-22)
ccomp(think-20, switch-23)
det(system-26, a-25)
prep_to(switch-23, system-26)
nsubj(cost\/spend-29, system-26)
aux(cost\/spend-29, would-28)
rcmod(system-26, cost\/spend-29)
advmod(cost\/spend-29, even-30)
advmod(cost\/spend-29, more-31)
pobj(more-31, .4-32)

(ROOT
  (S
    (NP (DT That) (JJ small) (JJ 2-year) (NN difference))
    (VP (VBZ is)
      (ADJP (RB almost) (VBN guaranteed)
        (S
          (VP (TO to)
            (VP
              (VP (VB be)
                (NP
                  (NP (DT the) (NN result))
                  (PP (IN of)
                    (NP
                      (NP (JJ poor) (NN health) (NNS choices))
                      (PP (IN in)
                        (NP (DT the) (NNP US)))))))
              (CC and)
              (ADVP (RB probably))
              (VP (VB have)
                (NP (NN nothing))
                (ADVP (RB whatsoever))
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (PP (IN with)
                        (NP (NN health) (NN care))))))))))))
    (. .)))

det(difference-4, That-1)
amod(difference-4, small-2)
amod(difference-4, 2-year-3)
nsubjpass(guaranteed-7, difference-4)
auxpass(guaranteed-7, is-5)
advmod(guaranteed-7, almost-6)
root(ROOT-0, guaranteed-7)
aux(result-11, to-8)
cop(result-11, be-9)
det(result-11, the-10)
xcomp(guaranteed-7, result-11)
amod(choices-15, poor-13)
nn(choices-15, health-14)
prep_of(result-11, choices-15)
det(US-18, the-17)
prep_in(choices-15, US-18)
xcomp(guaranteed-7, probably-20)
advmod(result-11, probably-20)
conj_and(result-11, probably-20)
xcomp(guaranteed-7, have-21)
conj_and(result-11, have-21)
dobj(have-21, nothing-22)
advmod(have-21, whatsoever-23)
aux(do-25, to-24)
xcomp(have-21, do-25)
nn(care-28, health-27)
prep_with(do-25, care-28)

(ROOT
  (S ('' '')
    (NP (NNP US) (NNS citizens))
    (ADVP (RB on))
    (VP (VBP average)
      (S
        (NP (JJ live)
          (UCP
            (ADJP
              (NP (CD 2.56) (NNS years))
              (CC or)
              (ADJP
                (ADJP
                  (NP (CD 935) (NNS days))
                  (JJR less))
                (PP (IN than)
                  (NP (NNPS Australians)))))
            (, ,)
            (NP (CD 2.28) (NNS years))
            (CC or)
            (ADJP
              (NP (CD 832) (NNS days))
              (JJR less)
              (PP (IN than)
                (NP (CD Canadians)
                  (CC and)
                  (CD 0.64)))))
          (NNS years))
        (ADJP
          (ADJP
            (NP
              (QP (CC or)
                (CD 233))
              (NNS days))
            (JJR less))
          (PP (IN than)
            (NP (DT the) (NNP British))))))
    (. .)))

nn(citizens-3, US-2)
nsubj(average-5, citizens-3)
advmod(average-5, on-4)
root(ROOT-0, average-5)
amod(years-26, live-6)
num(years-8, 2.56-7)
amod(years-26, years-8)
num(days-11, 935-10)
tmod(less-12, days-11)
conj_or(years-8, less-12)
amod(years-26, less-12)
prep_than(less-12, Australians-14)
num(years-17, 2.28-16)
conj_or(years-8, years-17)
tmod(years-8, years-17)
amod(years-26, years-17)
num(days-20, 832-19)
tmod(less-21, days-20)
conj_or(years-8, less-21)
amod(years-26, less-21)
prep_than(less-21, Canadians-23)
prep_than(less-21, 0.64-25)
conj_and(Canadians-23, 0.64-25)
nsubj(less-30, years-26)
cc(233-28, or-27)
num(days-29, 233-28)
tmod(less-30, days-29)
xcomp(average-5, less-30)
det(British-33, the-32)
prep_than(less-30, British-33)

(ROOT
  (FRAG ('' '')
    (NP (NNP See) (NNP the))
    (PP (IN above)
      (NP
        (NP (NN point))
        (PRN (-LRB- -LRB-)
          (NP
            (QP (# #) (CD 4)))
          (-RRB- -RRB-))))
    (. .)))

nn(the-3, See-2)
root(ROOT-0, the-3)
dep(the-3, above-4)
pobj(above-4, point-5)
number(4-8, #-7)
dep(point-5, 4-8)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (VP (VBG living)
            (ADVP
              (NP
                (QP (CD 7) (TO to) (CD 30))
                (NNS months))
              (JJR longer)))))
      (VP (VBZ is)
        (NP (DT a) (JJ small) (NN difference))))
    (, ,) (RB then)
    (S
      (NP (PRP I))
      (VP (MD 'd)
        (VP (VB like)
          (NP (DT that) (NN difference)
            (S
              (VP (TO to)
                (VP (VB be)
                  (PP (IN in)
                    (NP (PRP$ my) (NN favor))))))))))
    (. .)))

mark(living-3, If-2)
csubj(difference-12, living-3)
number(30-6, 7-4)
dep(30-6, to-5)
num(months-7, 30-6)
npadvmod(longer-8, months-7)
advmod(living-3, longer-8)
cop(difference-12, is-9)
det(difference-12, a-10)
amod(difference-12, small-11)
root(ROOT-0, difference-12)
advmod(difference-12, then-14)
nsubj(like-17, I-15)
aux(like-17, 'd-16)
ccomp(difference-12, like-17)
det(difference-19, that-18)
dobj(like-17, difference-19)
aux(be-21, to-20)
infmod(difference-19, be-21)
poss(favor-24, my-23)
prep_in(be-21, favor-24)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN living))
        (ADVP
          (NP
            (QP (CD 7) (TO to) (CD 30))
            (NNS months))
          (RBR longer))
        (VP (VBZ is)
          (NP
            (NP (DT a) (NN warning))
            (PP (IN for)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ 's)
                    (S
                      (VP (TO to)
                        (VP (VB come))))))))))))
    (, ,)
    (ADVP (RB well))
    (, ,)
    (NP (PRP we))
    (VP (MD might)
      (ADVP (RB just))
      (VP (VB live)
        (ADVP (RB long) (RB enough))
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP it)))))))
    (. !)))

mark(warning-10, If-1)
nsubj(warning-10, living-2)
number(30-5, 7-3)
dep(30-5, to-4)
num(months-6, 30-5)
npadvmod(longer-7, months-6)
advmod(warning-10, longer-7)
cop(warning-10, is-8)
det(warning-10, a-9)
advcl(live-22, warning-10)
nsubj('s-13, what-12)
prepc_for(warning-10, 's-13)
aux(come-15, to-14)
xcomp('s-13, come-15)
advmod(live-22, well-17)
nsubj(live-22, we-19)
xsubj(see-26, we-19)
aux(live-22, might-20)
advmod(live-22, just-21)
root(ROOT-0, live-22)
advmod(enough-24, long-23)
advmod(live-22, enough-24)
aux(see-26, to-25)
xcomp(live-22, see-26)
dobj(see-26, it-27)

(ROOT
  (S (`` ``)
    (VP (VB See)
      (NP
        (NP (DT the) (JJ above) (NN point))
        (PRN (-LRB- -LRB-)
          (ADVP (RB again))
          (-RRB- -RRB-))))
    (. .)))

root(ROOT-0, See-2)
det(point-5, the-3)
amod(point-5, above-4)
dobj(See-2, point-5)
dep(point-5, again-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (ADVP (RB already))
        (VP (VBP spend)
          (NP
            (NP (DT a) (JJ large) (NN amount))
            (PP (IN of)
              (NP (PRP$ our) (JJ gross) (JJ domestic) (NN product))))
          (PP (IN on)
            (NP (NN healthcare)))
          (, ,)
          (SBAR
            (ADVP (RB then))
            (WHNP (WP what))
            (S
              (NP (NN difference))
              (VP (MD would)))))))
    (NP (PRP it))
    (VP (VBP make)
      (SBAR (IN if)
        (S
          (NP (PRP we))
          (VP (VBD switched)
            (PP (TO to)
              (NP
                (NP (DT a) (NN system))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (MD would)
                      (VP (VB require)
                        (SBAR (IN that)
                          (S
                            (NP (PRP we))
                            (VP (VBP spend)
                              (ADJP (RB even) (JJR more)))))))))))))))
    (. ?)))

mark(spend-4, If-1)
nsubj(spend-4, we-2)
advmod(spend-4, already-3)
advcl(make-21, spend-4)
det(amount-7, a-5)
amod(amount-7, large-6)
dobj(spend-4, amount-7)
poss(product-12, our-9)
amod(product-12, gross-10)
amod(product-12, domestic-11)
prep_of(amount-7, product-12)
prep_on(spend-4, healthcare-14)
advmod(would-19, then-16)
dobj(would-19, what-17)
nsubj(would-19, difference-18)
dep(spend-4, would-19)
nsubj(make-21, it-20)
root(ROOT-0, make-21)
mark(switched-24, if-22)
nsubj(switched-24, we-23)
advcl(make-21, switched-24)
det(system-27, a-26)
prep_to(switched-24, system-27)
nsubj(require-30, system-27)
aux(require-30, would-29)
rcmod(system-27, require-30)
complm(spend-33, that-31)
nsubj(spend-33, we-32)
ccomp(require-30, spend-33)
advmod(more-35, even-34)
acomp(spend-33, more-35)

(ROOT
  (S (CC And)
    (VP (VBP do) (RB n't)
      (VP (VB forget)
        (S
          (VP (TO to)
            (VP (VB compensate)
              (PP (IN for)
                (NP (JJ different)
                  (NP (NNP GDP) (POS 's))))
              (PP (IN with)
                (NP
                  (NP (NN respect))
                  (SBAR
                    (WHPP (TO to)
                      (WHNP (WDT what) (NN nation)))
                    (S
                      (NP (PRP you))
                      (VP (VBP 're)
                        (VP (VBG referring)
                          (PP (TO to)))))))))))))
    (. .)))

cc(forget-4, And-1)
aux(forget-4, do-2)
neg(forget-4, n't-3)
root(ROOT-0, forget-4)
aux(compensate-6, to-5)
xcomp(forget-4, compensate-6)
amod(GDP-9, different-8)
prep_for(compensate-6, GDP-9)
possessive(GDP-9, 's-10)
prep_with(compensate-6, respect-12)
det(nation-15, respect-12)
rel(referring-18, nation-15)
nsubj(referring-18, you-16)
aux(referring-18, 're-17)
rcmod(respect-12, referring-18)
prep(referring-18, to-19)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBD said) (, ,) (`` ``)
        (S
          (NP
            (NP (DT the) (JJ universal) (NN health) (NNS schemes))
            (PP (IN of)
              (NP (NNP Canada) (, ,) (NNP Great) (NNP Britain)
                (CC and)
                (NNP Australia))))
          (VP (VB cost)
            (ADJP (JJR less))))))
    (CC and)
    (S
      (NP
        (NP (DT the) (NNS people))
        (PP (IN in)
          (NP (DT these) (NNS countries))))
      (VP (VBP have)
        (NP (DT a) (JJR higher) (JJ average) (NN life) (NN expectancy))
        (PP (IN than)
          (NP (DT the) (NNP USA)))))
    (. .)))

nsubj(said-3, I-2)
root(ROOT-0, said-3)
det(schemes-9, the-6)
amod(schemes-9, universal-7)
nn(schemes-9, health-8)
nsubj(cost-17, schemes-9)
nn(Britain-14, Canada-11)
prep_of(schemes-9, Great-13)
conj_and(Britain-14, Great-13)
prep_of(schemes-9, Britain-14)
prep_of(schemes-9, Australia-16)
conj_and(Britain-14, Australia-16)
ccomp(said-3, cost-17)
acomp(cost-17, less-18)
det(people-21, the-20)
nsubj(have-25, people-21)
det(countries-24, these-23)
prep_in(people-21, countries-24)
conj_and(said-3, have-25)
det(expectancy-30, a-26)
amod(expectancy-30, higher-27)
amod(expectancy-30, average-28)
nn(expectancy-30, life-29)
dobj(have-25, expectancy-30)
det(USA-33, the-32)
prep_than(have-25, USA-33)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (`` ``) (NNP Right))
        (, ,)
        (ADVP (CC but)))
      (VP (VBG comparing)
        (NP (NNS nations))
        (PP (IN by)
          (NP
            (NP (PRP$ their) (NNP GDP))
            (PRN (-LRB- -LRB-)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ varies)
                    (PP (IN of)
                      (NP (NN course)))
                    (PP (VBG depending)
                      (PP (IN on)
                        (NP (DT the) (NN country)))))))
              (-RRB- -RRB-))))))
    (, ,)
    (VP (VBZ is) (RB n't)
      (NP (DT the) (NN way)
        (S
          (VP (TO to)
            (VP (VB prove)
              (NP (DT this)))))))
    (. .)))

nsubj(comparing-6, Right-3)
advmod(Right-3, but-5)
dep(way-25, comparing-6)
dobj(comparing-6, nations-7)
poss(GDP-10, their-9)
prep_by(comparing-6, GDP-10)
nsubj(varies-13, which-12)
dep(GDP-10, varies-13)
prep_of(varies-13, course-15)
prepc_depending_on(varies-13, on-17)
det(country-19, the-18)
pobj(varies-13, country-19)
cop(way-25, is-22)
neg(way-25, n't-23)
det(way-25, the-24)
root(ROOT-0, way-25)
aux(prove-27, to-26)
infmod(way-25, prove-27)
dobj(prove-27, this-28)

(ROOT
  (S ('' '')
    (PP (VBG According)
      (PP (TO to)
        (NP (DT this) (NN source))))
    (VP (VBP http:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy)
      (SBAR
        (S
          (NP
            (NP (DT the) (NN life) (NN expectancy))
            (PP (IN in)
              (NP (DT these) (CD four) (NNS countries))))
          (VP (VBZ is)
            (NP
              (NP (NNP Australia) (CD 80.62) (NNS years))
              (, ,)
              (NP (NNP Canada))
              (, ,)
              (NP (CD 80.34) (NNS years))
              (, ,)
              (NP (NNP United) (NNP Kingdom) (CD 78.7) (NNS years))
              (CC and)
              (NP
                (NP (DT the) (NNP United) (NNPS States))
                (, ,)
                (NP (CD 78.06) (NNS years))))))))
    (. .)))

prepc_according_to(http:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy-6, to-3)
det(source-5, this-4)
pobj(http:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy-6, source-5)
root(ROOT-0, http:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy-6)
det(expectancy-9, the-7)
nn(expectancy-9, life-8)
nsubj(years-17, expectancy-9)
det(countries-13, these-11)
num(countries-13, four-12)
prep_in(expectancy-9, countries-13)
cop(years-17, is-14)
nn(years-17, Australia-15)
num(years-17, 80.62-16)
ccomp(http:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy-6, years-17)
ccomp(http:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy-6, Canada-19)
conj_and(years-17, Canada-19)
num(years-22, 80.34-21)
ccomp(http:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy-6, years-22)
conj_and(years-17, years-22)
nn(years-27, United-24)
nn(years-27, Kingdom-25)
num(years-27, 78.7-26)
ccomp(http:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy-6, years-27)
conj_and(years-17, years-27)
det(States-31, the-29)
nn(States-31, United-30)
ccomp(http:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy-6, States-31)
conj_and(years-17, States-31)
num(years-34, 78.06-33)
appos(States-31, years-34)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHNP (WDT Which))
        (S
          (NP (PRP I))
          (ADVP (RB already))
          (VP (VBD pointed)
            (PRT (RP out))
            (PP (IN in)
              (NP (DT the) (NN comment))))))
      (NP (PRP you))
      (VP (VBP 're)
        (VP (VBG replying)
          (PP (TO to)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB also))
      (VP (VBD pointed)
        (PRT (RP out))
        (SBAR (IN that)
          (S
            (NP (DT the) (JJ 2-year) (NN difference))
            (ADVP (RB probably))
            (VP (VBZ has)))))
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NN healthcare))))))))
    (. .)))

dobj(pointed-5, Which-2)
nsubj(pointed-5, I-3)
advmod(pointed-5, already-4)
dep(replying-12, pointed-5)
prt(pointed-5, out-6)
det(comment-9, the-8)
prep_in(pointed-5, comment-9)
nsubj(replying-12, you-10)
nsubj(pointed-17, you-10)
aux(replying-12, 're-11)
root(ROOT-0, replying-12)
prep(replying-12, to-13)
advmod(pointed-17, also-16)
conj_and(replying-12, pointed-17)
prt(pointed-17, out-18)
complm(has-24, that-19)
det(difference-22, the-20)
amod(difference-22, 2-year-21)
nsubj(has-24, difference-22)
advmod(has-24, probably-23)
ccomp(pointed-17, has-24)
dep(pointed-17, nothing-25)
aux(do-27, to-26)
infmod(nothing-25, do-27)
prep_with(do-27, healthcare-29)

(ROOT
  (S
    (NP
      (NP (NNP Way))
      (PP (TO to)
        (NP (JJ present) (NN something))))
    (NP (PRP we))
    (VP (VBP do) (RB n't)
      (ADVP (RB already))
      (VP (VB know)))
    (. .)))

nsubj(know-9, Way-1)
amod(something-4, present-3)
prep_to(Way-1, something-4)
nsubj(know-9, we-5)
aux(know-9, do-6)
neg(know-9, n't-7)
advmod(know-9, already-8)
root(ROOT-0, know-9)

(ROOT
  (S ('' '')
    (PP (IN With)
      (NP (PRP$ its) (JJ present) (NNS arrangements)))
    (, ,)
    (NP (DT the) (NNP United) (NNPS States))
    (VP
      (VP (VBZ spends)
        (NP
          (NP (DT a) (JJR greater) (NN proportion))
          (PP (IN of)
            (NP (PRP$ its) (NN GDP))))
        (PP (IN on)
          (NP (NN health) (NN care))))
      (CC and)
      (VP (VBZ has)
        (NP
          (NP (DT a) (JJR lower) (NN life) (NN expectancy))
          (PP (IN than)
            (NP (JJ other) (JJ English-speaking) (NNS countries))))))
    (. .)))

poss(arrangements-5, its-3)
amod(arrangements-5, present-4)
prep_with(spends-10, arrangements-5)
det(States-9, the-7)
nn(States-9, United-8)
nsubj(spends-10, States-9)
nsubj(has-21, States-9)
root(ROOT-0, spends-10)
det(proportion-13, a-11)
amod(proportion-13, greater-12)
dobj(spends-10, proportion-13)
poss(GDP-16, its-15)
prep_of(proportion-13, GDP-16)
nn(care-19, health-18)
prep_on(spends-10, care-19)
conj_and(spends-10, has-21)
det(expectancy-25, a-22)
amod(expectancy-25, lower-23)
nn(expectancy-25, life-24)
dobj(has-21, expectancy-25)
amod(countries-29, other-27)
amod(countries-29, English-speaking-28)
prep_than(expectancy-25, countries-29)

