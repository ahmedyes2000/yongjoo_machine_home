(ROOT
  (NP (NN moisturize) (: ...)))

root(ROOT-0, moisturize-1)

(ROOT
  (FRAG (CC but)
    (SBAR (IN with)
      (S
        (NP (JJ olive) (NN oil))
        (ADJP (RB not)
          (PP (IN with)
            (NP (NN handcreme))))))
    (. .)))

dep(not-5, but-1)
mark(not-5, with-2)
amod(oil-4, olive-3)
dep(not-5, oil-4)
root(ROOT-0, not-5)
prep_with(not-5, handcreme-7)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP do) (RB n't))
    (. .)))

nsubj(do-2, i-1)
root(ROOT-0, do-2)
neg(do-2, n't-3)

(ROOT
  (S (CC or)
    (NP (RB else) (PRP it))
    (VP (MD would) (RB n't)
      (VP (VB be)
        (NP (JJ communist) (NN china))))
    (. .)))

cc(china-8, or-1)
advmod(it-3, else-2)
nsubj(china-8, it-3)
aux(china-8, would-4)
neg(china-8, n't-5)
cop(china-8, be-6)
amod(china-8, communist-7)
root(ROOT-0, china-8)

(ROOT
  (SBARQ
    (WHADVP (WRB how))
    (SQ (VBZ does)
      (NP (DT the) (NN u.s.) (RB Not))
      (VP (VB support)
        (NP (NN china))))
    (. ?)))

advmod(support-6, how-1)
aux(support-6, does-2)
det(u.s.-4, the-3)
nsubj(support-6, u.s.-4)
neg(u.s.-4, Not-5)
root(ROOT-0, support-6)
dobj(support-6, china-7)

(ROOT
  (SBARQ
    (WHNP
      (WHNP (WP who))
      (PP (IN in)
        (NP (NN turn))))
    (SQ
      (VP (VB support)
        (NP
          (NP (`` ``) (JJ ethnic) (NN cleansing) ('' ''))
          (CC and)
          (NP (VBG killing) (NNS buddhists)))))
    (. ?)))

nsubj(support-4, who-1)
prep_in(who-1, turn-3)
root(ROOT-0, support-4)
amod(cleansing-7, ethnic-6)
dobj(support-4, cleansing-7)
amod(buddhists-11, killing-10)
dobj(support-4, buddhists-11)
conj_and(cleansing-7, buddhists-11)

(ROOT
  (FRAG
    (SBAR (IN like)
      (S
        (NP (FW i))
        (VP (VBD said)))
      (. .))
    (. .)))

mark(said-3, like-1)
nsubj(said-3, i-2)
root(ROOT-0, said-3)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN distortion))
        (PP (IN of)
          (NP (NN capitalism)))))
    (. .)))

nsubj(distortion-4, it-1)
cop(distortion-4, was-2)
det(distortion-4, a-3)
root(ROOT-0, distortion-4)
prep_of(distortion-4, capitalism-6)

(ROOT
  (NP
    (NP
      (NP (DT the) (NN corruption))
      (PP (IN of)
        (NP
          (NP (NN capitalism))
          (PP (IN by)
            (NP
              (NP (DT the) (JJ will-to) (NN power))
              (SBAR
                (S (-LRB- -LRB-)
                  (NP (FW i))
                  (VP (VBP 've)
                    (VP (VBN been)
                      (ADJP (JJ nietzsche-ized)))))))))))
    (: ...)
    (S
      (NP (FW i))
      (VP (MD ca) (RB n't)
        (VP (VB help)
          (NP (PRP it)))))
    (. .)))

det(corruption-2, the-1)
root(ROOT-0, corruption-2)
prep_of(corruption-2, capitalism-4)
det(power-8, the-6)
amod(power-8, will-to-7)
prep_by(capitalism-4, power-8)
dobj(nietzsche-ized-13, power-8)
nsubj(nietzsche-ized-13, i-10)
aux(nietzsche-ized-13, 've-11)
cop(nietzsche-ized-13, been-12)
rcmod(power-8, nietzsche-ized-13)
nsubj(help-18, i-15)
aux(help-18, ca-16)
neg(help-18, n't-17)
dep(corruption-2, help-18)
dobj(help-18, it-19)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP 've)
      (VP (VBN read)
        (NP
          (NP (CD 4))
          (PP (IN of)
            (NP (PRP$ his) (NNS books))))
        (PP (IN in)
          (NP (DT the) (JJ past) (CD 5) (NNS weeks)))))
    (-RRB- -RRB-) (. .)))

nsubj(read-3, i-1)
aux(read-3, 've-2)
root(ROOT-0, read-3)
dobj(read-3, 4-4)
poss(books-7, his-6)
prep_of(4-4, books-7)
det(weeks-12, the-9)
amod(weeks-12, past-10)
num(weeks-12, 5-11)
prep_in(read-3, weeks-12)

(ROOT
  (S (CC and)
    (NP
      (NP (DT that) (NN revolution))
      (PP (IN of)
        (NP (DT the) (NN worker))))
    (ADVP (RB only))
    (VP (VBD led)
      (PP (TO to)
        (SBAR
          (WHADJP (RB exactly) (WP what))
          (S
            (NP (PRP they))
            (VP (VBD revolutionaried)
              (NP (PRP it))
              (PRT (RP up))
              (PP (IN for)
                (PP (IN in)
                  (NP (DT the) (JJ first) (NN place)))))))))
    (. .)))

cc(led-8, and-1)
det(revolution-3, that-2)
nsubj(led-8, revolution-3)
det(worker-6, the-5)
prep_of(revolution-3, worker-6)
advmod(led-8, only-7)
root(ROOT-0, led-8)
dep(revolutionaried-13, exactly-10)
dep(exactly-10, what-11)
nsubj(revolutionaried-13, they-12)
prepc_to(led-8, revolutionaried-13)
dobj(revolutionaried-13, it-14)
prt(revolutionaried-13, up-15)
prep(revolutionaried-13, for-16)
pcomp(for-16, in-17)
det(place-20, the-18)
amod(place-20, first-19)
prep_in(for-16, place-20)

(ROOT
  (S
    (NP (NN communism))
    (VP (VBZ is) (RB n't)
      (VP (VBN supposed)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ totalitarianistic)))))))
    (. .)))

nsubjpass(supposed-4, communism-1)
xsubj(totalitarianistic-7, communism-1)
auxpass(supposed-4, is-2)
neg(supposed-4, n't-3)
root(ROOT-0, supposed-4)
aux(totalitarianistic-7, to-5)
cop(totalitarianistic-7, be-6)
xcomp(supposed-4, totalitarianistic-7)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (NN lack))
        (: ...)
        (NP (JJ absolute) (NN lack))
        (: ...)
        (PP (IN of)
          (NP (DT any) (NN state)))))
    (. .)))

nsubj(lack-3, it-1)
cop(lack-3, 's-2)
root(ROOT-0, lack-3)
amod(lack-6, absolute-5)
dep(lack-3, lack-6)
det(state-10, any-9)
prep_of(lack-3, state-10)

(ROOT
  (S
    (NP (NN frikking))
    (VP (VBP durh))
    (. .)))

nsubj(durh-2, frikking-1)
root(ROOT-0, durh-2)

(ROOT
  (S
    (NP (PRP you))
    (VP (MD ca) (RB n't)
      (VP (VB have)
        (NP (NN communism))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP 've)
              (NP (DT a) (NN state)))))))
    (. .)))

nsubj(have-4, you-1)
aux(have-4, ca-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
dobj(have-4, communism-5)
mark('ve-8, if-6)
nsubj('ve-8, you-7)
advcl(have-4, 've-8)
det(state-10, a-9)
dobj('ve-8, state-10)

(ROOT
  (S
    (VP (VB know)
      (SBAR (IN if)
        (S
          (NP (PRP$ my) (JJ new) (NNS neighbors))
          (VP (MD will)
            (VP (VB call)
              (NP
                (NP (CD 911))
                (, ,)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is))))))))))
    (. .)))

root(ROOT-0, know-1)
mark(call-7, if-2)
poss(neighbors-5, my-3)
amod(neighbors-5, new-4)
nsubj(call-7, neighbors-5)
aux(call-7, will-6)
advcl(know-1, call-7)
dobj(call-7, 911-8)
nsubj(is-11, 911-8)
rcmod(911-8, is-11)

(ROOT
  (S (CC but)
    (NP (FW i))
    (VP
      (VP (VBP act)
        (ADVP (RB nicely) (RB out))
        (PP (IN of)
          (NP (NN self-interest))))
      (CC and)
      (VP (VBP hope)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ works))))))
    (. .)))

nsubj(act-3, i-2)
nsubj(hope-9, i-2)
root(ROOT-0, act-3)
advmod(act-3, nicely-4)
prep_out_of(act-3, self-interest-7)
conj_and(act-3, hope-9)
nsubj(works-11, it-10)
ccomp(hope-9, works-11)

(ROOT
  (S
    (NP (NN nothing))
    (VP (VBZ is)
      (ADVP (RB ever))
      (NP
        (NP (RB just) (CD one) (NN system))
        (CC and)
        (NP (CD one) (NN system) (RB alone))))
    (. .)))

nsubj(system-6, nothing-1)
cop(system-6, is-2)
advmod(system-6, ever-3)
advmod(system-6, just-4)
num(system-6, one-5)
root(ROOT-0, system-6)
num(system-9, one-8)
conj_and(system-6, system-9)
advmod(system-9, alone-10)

(ROOT
  (S
    (NP (PRP you))
    (ADVP (RB only))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN distortion))
        (PP (IN of)
          (NP (NN communism)))))
    (. .)))

nsubj(have-3, you-1)
advmod(have-3, only-2)
root(ROOT-0, have-3)
det(distortion-5, a-4)
dobj(have-3, distortion-5)
prep_of(distortion-5, communism-7)

(ROOT
  (FRAG
    (ADJP (RB so) (JJ therefore))
    (: ...)))

advmod(therefore-2, so-1)
root(ROOT-0, therefore-2)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP 're)
      (ADVP (RB probably))
      (NP
        (NP (JJR more))
        (PP (IN of)
          (NP (DT a) (NN communist))))
      (SBAR (IN than)
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP do) (RB n't)
                  (VP (VB want)
                    (NP (DT a) (NN state))))))))))
    (. .)))

nsubj(more-4, you-1)
cop(more-4, 're-2)
advmod(more-4, probably-3)
root(ROOT-0, more-4)
det(communist-7, a-6)
prep_of(more-4, communist-7)
mark(think-10, than-8)
nsubj(think-10, you-9)
advcl(more-4, think-10)
mark(want-15, if-11)
nsubj(want-15, you-12)
aux(want-15, do-13)
neg(want-15, n't-14)
advcl(think-10, want-15)
det(state-17, a-16)
dobj(want-15, state-17)

(ROOT
  (S
    (NP
      (NP (NN none))
      (PP (IN of)
        (NP (PRP them))))
    (VP (VBP work)
      (ADVP (RB separately)))
    (. .)))

nsubj(work-4, none-1)
prep_of(none-1, them-3)
root(ROOT-0, work-4)
advmod(work-4, separately-5)

(ROOT
  (S
    (NP (NN nothing))
    (VP (MD may)
      (ADVP (RB ever))
      (VP (VB work)
        (PP (IN except)
          (NP
            (QP (JJR more) (IN than) (CD temporarily))))
        (, ,)
        (PP (IN for)
          (NP (DT that) (NN matter)))))
    (. .)))

nsubj(work-4, nothing-1)
aux(work-4, may-2)
advmod(work-4, ever-3)
root(ROOT-0, work-4)
mwe(than-7, more-6)
quantmod(temporarily-8, than-7)
prep_except(work-4, temporarily-8)
det(matter-12, that-11)
prep_for(work-4, matter-12)

(ROOT
  (FRAG
    (SBAR (IN because)
      (S
        (NP (PRP she))
        (ADVP (RB also))
        (VP (VBD wanted)
          (NP (NN attention)))))
    (. .)))

mark(wanted-4, because-1)
nsubj(wanted-4, she-2)
advmod(wanted-4, also-3)
root(ROOT-0, wanted-4)
dobj(wanted-4, attention-5)

(ROOT
  (SINV
    (PP (IN as))
    (VP (VBP do))
    (NP
      (NP (DT the) (NNS people))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP risk)
            (NP
              (NP (NN death))
              (PP (IN for)
                (NP (DT no) (JJ obvious) (NNS rewards))))))))
    (. .)))

prep(do-2, as-1)
root(ROOT-0, do-2)
det(people-4, the-3)
nsubj(do-2, people-4)
nsubj(risk-6, people-4)
rcmod(people-4, risk-6)
dobj(risk-6, death-7)
det(rewards-11, no-9)
amod(rewards-11, obvious-10)
prep_for(death-7, rewards-11)

(ROOT
  (S
    (NP (DT the) (NN act))
    (VP (MD may)
      (VP (VB be) (`` ``)
        (ADJP (JJ good))
        ('' '')
        (SBAR (CC but)
          (S
            (NP (DT the) (NNS intentions))
            (VP (VBP are)
              (ADVP (RB still))
              (VP (VBN motivated)
                (PP (IN by)
                  (NP (JJ selfish) (NNS reasons)))))))))
    (. .)))

det(act-2, the-1)
nsubj(good-6, act-2)
aux(good-6, may-3)
cop(good-6, be-4)
root(ROOT-0, good-6)
cc(motivated-13, but-8)
det(intentions-10, the-9)
nsubjpass(motivated-13, intentions-10)
auxpass(motivated-13, are-11)
advmod(motivated-13, still-12)
ccomp(good-6, motivated-13)
amod(reasons-16, selfish-15)
agent(motivated-13, reasons-16)

(ROOT
  (S (RB not)
    (ADVP (RB really))
    (, ,)
    (NP (RB because) (PDT all) (DT those) (NNS people))
    (VP (VBP are)
      (PP (IN under)
        (NP
          (NP (DT the) (NN thumb))
          (PP (IN of)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP make)
                    (SBAR
                      (S
                        (NP (NNS OTHERS))
                        (VP (VBP work)
                          (ADVP
                            (ADVP (RBR harder))
                            (SBAR (IN while)
                              (S
                                (NP (PRP they))
                                (VP (VBP receive)
                                  (NP (JJR more) (NN compensation)))))))))))))))))
    (. .)))

neg(are-8, not-1)
advmod(are-8, really-2)
advmod(people-7, because-4)
predet(people-7, all-5)
det(people-7, those-6)
nsubj(are-8, people-7)
root(ROOT-0, are-8)
det(thumb-11, the-10)
prep_under(are-8, thumb-11)
prep_of(thumb-11, those-13)
nsubj(make-15, those-13)
rcmod(those-13, make-15)
nsubj(work-17, OTHERS-16)
ccomp(make-15, work-17)
advmod(work-17, harder-18)
mark(receive-21, while-19)
nsubj(receive-21, they-20)
dep(harder-18, receive-21)
amod(compensation-23, more-22)
dobj(receive-21, compensation-23)

(ROOT
  (S
    (S
      (VP (VB remember)))
    (: ...)
    (S
      (NP (NN china))
      (VP (VBZ is)
        (NP
          (NP (PRP$ your) (NN version))
          (PP (IN of)
            (NP (`` ``) (NN communism) ('' ''))))))
    (. .)))

root(ROOT-0, remember-1)
nsubj(version-6, china-3)
cop(version-6, is-4)
poss(version-6, your-5)
parataxis(remember-1, version-6)
prep_of(version-6, communism-9)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (DT a) (NN choice))))
    (. .)))

nsubj(have-4, they-1)
aux(have-4, do-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
det(choice-6, a-5)
dobj(have-4, choice-6)

