(ROOT
  (FRAG
    (ADVP (RB Really))
    (. ?)))

root(ROOT-0, Really-1)

(ROOT
  (S
    (NP (PRP we))
    (VP (MD ca) (RB n't)
      (VP (VB have)
        (NP (DT both))))
    (. ?)))

nsubj(have-4, we-1)
aux(have-4, ca-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
dobj(have-4, both-5)

(ROOT
  (S
    (NP
      (NP (NNP Wealth))
      (CC and)
      (NP (NN power)))
    (VP (VBP are)
      (VP (VBN kept)
        (PP (IN in)
          (NP
            (NP (DT the) (JJS smallest) (NN number))
            (PP (IN of)
              (NP
                (NP (NNS hands))
                (ADJP (JJ possible))))))))
    (. .)))

nsubjpass(kept-5, Wealth-1)
conj_and(Wealth-1, power-3)
nsubjpass(kept-5, power-3)
auxpass(kept-5, are-4)
root(ROOT-0, kept-5)
det(number-9, the-7)
amod(number-9, smallest-8)
prep_in(kept-5, number-9)
prep_of(number-9, hands-11)
amod(hands-11, possible-12)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (NP (PRP you))
    (VP (VBP pay)
      (ADVP (RBR more))
      (PP (IN in)
        (NP
          (NP (NNS taxes))
          (PP (IN than)
            (NP (JJS most) (NNS billionaires))))))
    (. .)))

advmod(pay-4, Also-1)
nsubj(pay-4, you-3)
root(ROOT-0, pay-4)
advmod(pay-4, more-5)
prep_in(pay-4, taxes-7)
amod(billionaires-10, most-9)
prep_than(taxes-7, billionaires-10)

(ROOT
  (SQ
    (VP (VB Think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's) (RB not)
            (ADJP (JJ true))))))
    (. ?)))

root(ROOT-0, Think-1)
nsubj(true-5, it-2)
cop(true-5, 's-3)
neg(true-5, not-4)
ccomp(Think-1, true-5)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD will)
        (VP (VB end)
          (PRT (RP up))
          (S
            (VP (VBG paying)
              (NP (RBR less) (NN percentage) (JJ wise))
              (PP (IN than)
                (NP (PRP$ their) (NNS secretaries))))))))
    (: ...)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD 'll)
        (ADVP (RB even))
        (VP (VB admit)
          (NP (PRP it)))))
    (. .)))

nsubj(end-3, They-1)
aux(end-3, will-2)
root(ROOT-0, end-3)
prt(end-3, up-4)
xcomp(end-3, paying-5)
advmod(percentage-7, less-6)
dobj(paying-5, percentage-7)
amod(percentage-7, wise-8)
poss(secretaries-11, their-10)
prep_than(paying-5, secretaries-11)
nsubj(admit-17, they-14)
aux(admit-17, 'll-15)
advmod(admit-17, even-16)
conj_and(end-3, admit-17)
dobj(admit-17, it-18)

(ROOT
  (SINV (CC Nor)
    (VBZ does)
    (NP
      (NP (NN being))
      (SBAR
        (S
          (NP (DT the) (JJS biggest) (NN player))
          (VP (VBP mean)
            (S
              (NP (PRP you))
              (VP (VB pay)
                (NP (PRP$ your) (NNS employees))
                (NP (DT the) (JJS highest) (NN salary))))))))
    (. .)))

cc(does-2, Nor-1)
root(ROOT-0, does-2)
nsubj(does-2, being-3)
dobj(mean-7, being-3)
det(player-6, the-4)
amod(player-6, biggest-5)
nsubj(mean-7, player-6)
rcmod(being-3, mean-7)
nsubj(pay-9, you-8)
ccomp(mean-7, pay-9)
poss(employees-11, your-10)
dep(pay-9, employees-11)
det(salary-14, the-12)
amod(salary-14, highest-13)
dobj(pay-9, salary-14)

(ROOT
  (S (CC Or)
    (NP
      (NP (RB am) (NN I) (JJ wrong))
      (CC and)
      (NP (JJ minimum) (NN wage)))
    (VP (VBZ does) (RB not)
      (VP (VB exist)))
    (. ?)))

cc(exist-10, Or-1)
advmod(I-3, am-2)
nsubj(exist-10, I-3)
amod(I-3, wrong-4)
amod(wage-7, minimum-6)
conj_and(I-3, wage-7)
nsubj(exist-10, wage-7)
aux(exist-10, does-8)
neg(exist-10, not-9)
root(ROOT-0, exist-10)

(ROOT
  (S (CC But)
    (ADVP (RB really))
    (: ...)
    (NP
      (NP (DT the) (NN point))
      (PP (IN of)
        (NP
          (NP (DT this))
          (VP (VBZ is)))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP 're)
                  (ADVP
                    (ADVP (RBR better))
                    (PP (IN than)
                      (NP (NN everyone))))
                  (ADJP (RB else)))))))))
    (. .)))

cc(is-9, But-1)
advmod(is-9, really-2)
det(point-5, the-4)
nsubj(is-9, point-5)
prep_of(point-5, this-7)
dep(this-7, is-8)
root(ROOT-0, is-9)
complm(think-12, that-10)
nsubj(think-12, you-11)
ccomp(is-9, think-12)
nsubj(else-18, you-13)
cop(else-18, 're-14)
advmod(else-18, better-15)
prep_than(better-15, everyone-17)
ccomp(think-12, else-18)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're) (RB not))
    (. .)))

nsubj('re-2, You-1)
root(ROOT-0, 're-2)
neg('re-2, not-3)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB be)
          (NP (JJR better) (NNP AT) (NNS things)))))
    (: ...)
    (S
      (NP (PRP you))
      (VP (MD may)
        (ADVP (RB very) (RB well))
        (VP (VB be)
          (NP (DT a) (JJ great) (NN lawyer)))))
    (. .)))

nsubj(things-6, You-1)
aux(things-6, may-2)
cop(things-6, be-3)
amod(things-6, better-4)
nn(things-6, AT-5)
root(ROOT-0, things-6)
nsubj(lawyer-15, you-8)
aux(lawyer-15, may-9)
advmod(well-11, very-10)
advmod(lawyer-15, well-11)
cop(lawyer-15, be-12)
det(lawyer-15, a-13)
amod(lawyer-15, great-14)
parataxis(things-6, lawyer-15)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD could)
      (VP (VB be)
        (NP
          (NP (DT the)
            (ADJP (RBS best) (RB damn) (JJ midget))
            (NN wrestler))
          (SBAR
            (S
              (NP (DT the) (NN world))
              (VP (VBZ has)
                (ADVP (RB ever))
                (VP (VBN seen))))))))
    (. .)))

nsubj(wrestler-8, You-1)
aux(wrestler-8, could-2)
cop(wrestler-8, be-3)
det(wrestler-8, the-4)
advmod(midget-7, best-5)
advmod(midget-7, damn-6)
amod(wrestler-8, midget-7)
root(ROOT-0, wrestler-8)
dobj(seen-13, wrestler-8)
det(world-10, the-9)
nsubj(seen-13, world-10)
aux(seen-13, has-11)
advmod(seen-13, ever-12)
rcmod(wrestler-8, seen-13)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB know)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP you))
          (VP (VBP live)))))
    (. ?)))

aux(know-3, Do-1)
nsubj(know-3, you-2)
root(ROOT-0, know-3)
advmod(live-6, where-4)
nsubj(live-6, you-5)
advcl(know-3, live-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD may)
      (VP (VB be)
        (NP
          (NP (DT the) (NN shiznit))
          (PP (IN at)
            (NP (JJ small) (NN engine) (NN repair))))))
    (. .)))

nsubj(shiznit-5, You-1)
aux(shiznit-5, may-2)
cop(shiznit-5, be-3)
det(shiznit-5, the-4)
root(ROOT-0, shiznit-5)
amod(repair-9, small-7)
nn(repair-9, engine-8)
prep_at(shiznit-5, repair-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG missing)
        (NP (DT the) (NN point))))
    (. .)))

nsubj(missing-3, You-1)
aux(missing-3, 're-2)
root(ROOT-0, missing-3)
det(point-5, the-4)
dobj(missing-3, point-5)

(ROOT
  (S
    (NP (DT This) (NN country))
    (VP (VBZ does) (RB not)
      (VP (VB say)
        (PP (`` ``) (IN by)
          (UCP
            (NP
              (NP (DT the) (NNS corporations))
              (, ,)
              (PP (IN for)
                (NP (DT the) (NNS corporations))))
            (, ,)
            (CC and)
            (PP (IN of)
              (NP (DT the) (NNS corporations) ('' '')))))))
    (. .)))

det(country-2, This-1)
nsubj(say-5, country-2)
aux(say-5, does-3)
neg(say-5, not-4)
root(ROOT-0, say-5)
det(corporations-9, the-8)
prep_by(say-5, corporations-9)
det(corporations-13, the-12)
prep_for(corporations-9, corporations-13)
prep_by(say-5, of-16)
conj_and(corporations-9, of-16)
det(corporations-18, the-17)
prep_of(corporations-9, corporations-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (NP (DT no) (NN duty)
        (S
          (VP (TO to)
            (VP (VB protect)
              (NP
                (NP (DT the) (NN interest))
                (PP (IN of)
                  (NP (JJ private) (NNS companies)))))))))
    (. .)))

nsubj(have-2, We-1)
root(ROOT-0, have-2)
det(duty-4, no-3)
dobj(have-2, duty-4)
aux(protect-6, to-5)
infmod(duty-4, protect-6)
det(interest-8, the-7)
dobj(protect-6, interest-8)
amod(companies-11, private-10)
prep_of(interest-8, companies-11)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD created)
      (NP (DT this) (NN country)
        (S
          (VP (TO to)
            (VP (VB protect)
              (NP
                (NP (DT the) (NNS individuals))
                (: ...)
                (NP
                  (NP (DT all))
                  (PP (IN of)
                    (NP (PRP them))))))))))
    (: ...)))

nsubj(created-2, We-1)
root(ROOT-0, created-2)
det(country-4, this-3)
dobj(created-2, country-4)
aux(protect-6, to-5)
infmod(country-4, protect-6)
det(individuals-8, the-7)
dobj(protect-6, individuals-8)
dep(individuals-8, all-10)
prep_of(all-10, them-12)

(ROOT
  (S
    (VP
      (PP (IN from)
        (NP
          (NP (NN greed)
            (CC and)
            (NN corruption))
          (FRAG
            (ADJP
              (WHADVP (WRB whenever))
              (JJ possible))))))
    (. .)))

root(ROOT-0, from-1)
pobj(from-1, greed-2)
pobj(from-1, corruption-4)
conj_and(greed-2, corruption-4)
advmod(possible-6, whenever-5)
dep(greed-2, possible-6)

(ROOT
  (S
    (NP (NNP True) (NNP conservatism))
    (VP (VBZ does) (RB not)
      (VP (VB hate)
        (NP (NN government))))
    (. .)))

nn(conservatism-2, True-1)
nsubj(hate-5, conservatism-2)
aux(hate-5, does-3)
neg(hate-5, not-4)
root(ROOT-0, hate-5)
dobj(hate-5, government-6)

(ROOT
  (S
    (NP (NNP True) (NNP conservatism))
    (VP (VBZ recognizes)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN need))
              (PP (IN for)
                (NP (NN government))))))))
    (. .)))

nn(conservatism-2, True-1)
nsubj(recognizes-3, conservatism-2)
root(ROOT-0, recognizes-3)
complm(is-6, that-4)
expl(is-6, there-5)
ccomp(recognizes-3, is-6)
det(need-8, a-7)
nsubj(is-6, need-8)
prep_for(need-8, government-10)

(ROOT
  (SBARQ
    (SBAR (IN As)
      (S
        (NP (NN society))
        (VP (VBZ has)
          (VP (VBN gotten)
            (S
              (ADJP (JJR larger)))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB expect)
        (NP (NN government))
        (S
          (VP (TO to)
            (VP (VB stay)
              (NP (DT the) (JJ same) (NN size)))))))
    (. ?)))

mark(gotten-4, As-1)
nsubj(gotten-4, society-2)
aux(gotten-4, has-3)
advcl(expect-10, gotten-4)
acomp(gotten-4, larger-5)
advmod(expect-10, why-7)
aux(expect-10, do-8)
nsubj(expect-10, you-9)
root(ROOT-0, expect-10)
dobj(expect-10, government-11)
aux(size-16, to-12)
cop(size-16, stay-13)
det(size-16, the-14)
amod(size-16, same-15)
xcomp(expect-10, size-16)

(ROOT
  (SBARQ
    (PP (IN As)
      (NP
        (NP (JJR more) (NNS changes))
        (PP (IN in)
          (NP (DT the) (NN world)))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (RB not) (VB expect)
        (S
          (NP (DT the) (NN government))
          (VP (TO to)
            (VP (VB change) (, ,)
              (ADVP (RB as) (RB well)))))))
    (. ?)))

amod(changes-3, more-2)
prep_as(expect-12, changes-3)
det(world-6, the-5)
prep_in(changes-3, world-6)
advmod(expect-12, why-8)
aux(expect-12, do-9)
nsubj(expect-12, you-10)
neg(expect-12, not-11)
root(ROOT-0, expect-12)
det(government-14, the-13)
nsubj(change-16, government-14)
aux(change-16, to-15)
xcomp(expect-12, change-16)
advmod(well-19, as-18)
mwe(well-19, as-18)
advmod(change-16, well-19)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (ADJP
      (ADJP (JJ aware))
      (SBAR (IN that)
        (S
          (NP (NN capitalism)
            (CC and)
            (NN socialism))
          (VP (VBP exist)
            (ADVP (RB together))
            (PP
              (PP (IN in)
                (FRAG (RB not)
                  (NP (RB only) (DT this) (NN country))))
              (, ,)
              (CC but)
              (PP (IN in)
                (NP
                  (NP (DT a) (JJ huge) (NN portion))
                  (PP (IN of)
                    (NP (DT the) (NN world))))))))))
    (. ?)))

cop(aware-3, Are-1)
nsubj(aware-3, you-2)
root(ROOT-0, aware-3)
complm(exist-8, that-4)
nsubj(exist-8, capitalism-5)
conj_and(capitalism-5, socialism-7)
nsubj(exist-8, socialism-7)
ccomp(aware-3, exist-8)
advmod(exist-8, together-9)
prep(exist-8, in-10)
dep(in-10, not-11)
advmod(country-14, only-12)
det(country-14, this-13)
dep(not-11, country-14)
prep(exist-8, in-17)
conj_but(in-10, in-17)
det(portion-20, a-18)
amod(portion-20, huge-19)
pobj(in-17, portion-20)
det(world-23, the-22)
prep_of(portion-20, world-23)

(ROOT
  (S
    (NP (DT The) (NN government))
    (VP (VBZ provides)
      (PP (IN FOR)
        (NP (DT the) (NNS people))))
    (. .)))

det(government-2, The-1)
nsubj(provides-3, government-2)
root(ROOT-0, provides-3)
det(people-6, the-5)
prep_for(provides-3, people-6)

(ROOT
  (NP (NNS People) (. .)))

root(ROOT-0, People-1)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB apparently))
    (VP (VBP do) (RB not)
      (VP (VB like)
        (NP (DT this))))
    (. .)))

nsubj(like-5, You-1)
advmod(like-5, apparently-2)
aux(like-5, do-3)
neg(like-5, not-4)
root(ROOT-0, like-5)
dobj(like-5, this-6)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB like)
            (NP (DT this) (NN idea))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB like)
        (NP
          (NP (DT the) (NNP United) (NNPS States))
          (PP (IN of)
            (NP
              (NP (NNP America))
              (CC and)
              (NP (DT the) (NNS ideals))))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (VP (VBN founded)
                  (PP (RB upon)))))))
        (: ...)
        (ADVP (RB again))
        (: ...)
        (S
          (VP (VBG ignoring)
            (NP (DT the) (NN fact))))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADVP (RB basically))
              (NP
                (NP (DT a) (NN group))
                (PP (IN of)
                  (NP (JJ rich) (JJ white) (NNS guys)))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD did) (RB n't)
                      (VP (VB want)
                        (S
                          (VP (TO to)
                            (VP (VB pay)
                              (NP (NNS taxes)))))))))))))))
    (. .)))

mark(like-5, If-1)
nsubj(like-5, you-2)
aux(like-5, do-3)
neg(like-5, n't-4)
advcl(like-12, like-5)
det(idea-7, this-6)
dobj(like-5, idea-7)
nsubj(like-12, you-9)
aux(like-12, do-10)
neg(like-12, n't-11)
root(ROOT-0, like-12)
det(States-15, the-13)
nn(States-15, United-14)
dobj(like-12, States-15)
prep_of(States-15, America-17)
det(ideals-20, the-19)
prep_of(States-15, ideals-20)
conj_and(America-17, ideals-20)
nsubjpass(founded-23, it-21)
auxpass(founded-23, was-22)
rcmod(States-15, founded-23)
prep(founded-23, upon-24)
advmod(like-12, again-26)
parataxis(like-12, ignoring-28)
xcomp(like-12, ignoring-28)
det(fact-30, the-29)
dobj(ignoring-28, fact-30)
complm(group-36, that-31)
nsubj(group-36, it-32)
cop(group-36, was-33)
advmod(group-36, basically-34)
det(group-36, a-35)
ccomp(like-12, group-36)
nsubj(want-44, group-36)
amod(guys-40, rich-38)
amod(guys-40, white-39)
prep_of(group-36, guys-40)
aux(want-44, did-42)
neg(want-44, n't-43)
rcmod(group-36, want-44)
aux(pay-46, to-45)
xcomp(want-44, pay-46)
dobj(pay-46, taxes-47)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN ignored)
        (ADVP (DT that) (NN fact)
          (SBAR (IN since)
            (S
              (NP (PRP we))
              (VP (MD could)
                (VP
                  (VP (VB print)
                    (NP (NN text) (NNS books)))
                  (CC and)
                  (VP (VB lie)
                    (PP (IN about)
                      (NP (PRP it)))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB why))
                      (S
                        (VP (VB stop)
                          (ADVP (RB now)))))))))))))
    (. ?)))

nsubj(ignored-3, We-1)
aux(ignored-3, 've-2)
root(ROOT-0, ignored-3)
dep(fact-5, that-4)
advmod(ignored-3, fact-5)
mark(print-9, since-6)
nsubj(print-9, we-7)
nsubj(lie-13, we-7)
aux(print-9, could-8)
dep(fact-5, print-9)
nn(books-11, text-10)
dobj(print-9, books-11)
dep(fact-5, lie-13)
conj_and(print-9, lie-13)
prep_about(lie-13, it-15)
advmod(stop-18, why-17)
advcl(lie-13, stop-18)
advmod(stop-18, now-19)

(ROOT
  (INTJ (UH ...)))


(ROOT
  (NP
    (NP (NN well))
    (: ...)
    (NP
      (NP (NN move))
      (PP (TO to)
        (NP (NNP China))))
    (. .)))

root(ROOT-0, well-1)
dep(well-1, move-3)
prep_to(move-3, China-5)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (NN everything))
          (VP (VBZ 's)
            (VP (VBN made)
              (ADVP (RB anyway)))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(made-6, where-3)
nsubjpass(made-6, everything-4)
auxpass(made-6, 's-5)
advcl('s-2, made-6)
advmod(made-6, anyway-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP
                  (VP (VB sit)
                    (ADVP (RB there)))
                  (CC and)
                  (VP (VB say)
                    (SBAR (IN that)
                      (S
                        (NP (PRP you))
                        (VP (VBP think)
                          (SBAR
                            (S
                              (NP (DT a) (NN child))
                              (VP (VBZ does) (RB not)
                                (VP (VB deserve)
                                  (NP (NN health) (NN care))
                                  (SBAR (IN because)
                                    (S
                                      (NP (PRP$ his) (NNS parents))
                                      (VP (VBP work)
                                        (PP (IN at)
                                          (NP (NNP Burger) (NNP King)
                                            (CC and)
                                            (NNP Walmart)))))))))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (RB disgustingly) (JJ wrong)))
    (. .)))

mark(going-4, If-1)
nsubj(going-4, you-2)
xsubj(sit-6, you-2)
aux(going-4, 're-3)
advcl(wrong-33, going-4)
aux(sit-6, to-5)
xcomp(going-4, sit-6)
advmod(sit-6, there-7)
xcomp(going-4, say-9)
conj_and(sit-6, say-9)
complm(think-12, that-10)
nsubj(think-12, you-11)
ccomp(say-9, think-12)
det(child-14, a-13)
nsubj(deserve-17, child-14)
aux(deserve-17, does-15)
neg(deserve-17, not-16)
ccomp(think-12, deserve-17)
nn(care-19, health-18)
dobj(deserve-17, care-19)
mark(work-23, because-20)
poss(parents-22, his-21)
nsubj(work-23, parents-22)
advcl(deserve-17, work-23)
nn(King-26, Burger-25)
prep_at(work-23, King-26)
prep_at(work-23, Walmart-28)
conj_and(King-26, Walmart-28)
nsubj(wrong-33, you-30)
cop(wrong-33, are-31)
advmod(wrong-33, disgustingly-32)
root(ROOT-0, wrong-33)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB say)
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT the) (NN parent))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ works)
                              (PP (IN at)
                                (NP (NNP Burger) (NNP King)
                                  (CC and)
                                  (NNP Walmart)))))))
                      (VP (VBZ does) (RB n't)
                        (VP (VB derserve)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (VP (VBN treated)
                                  (PP (IN for)
                                    (NP (NN illness))))))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (JJ wrong)))
    (. .)))

mark(going-4, If-1)
nsubj(going-4, you-2)
xsubj(say-6, you-2)
aux(going-4, are-3)
advcl(wrong-28, going-4)
aux(say-6, to-5)
xcomp(going-4, say-6)
complm(derserve-19, that-7)
det(parent-9, the-8)
nsubj(works-11, parent-9)
nsubj(derserve-19, parent-9)
xsubj(treated-22, parent-9)
rcmod(parent-9, works-11)
nn(King-14, Burger-13)
prep_at(works-11, King-14)
prep_at(works-11, Walmart-16)
conj_and(King-14, Walmart-16)
aux(derserve-19, does-17)
neg(derserve-19, n't-18)
ccomp(say-6, derserve-19)
aux(treated-22, to-20)
auxpass(treated-22, be-21)
xcomp(derserve-19, treated-22)
prep_for(treated-22, illness-24)
nsubj(wrong-28, you-26)
cop(wrong-28, are-27)
root(ROOT-0, wrong-28)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (VP (VBG saying)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP are) (RB not)
              (NP
                (NP (DT the) (JJ human) (NN equals))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN woman))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ processes)
                          (NP (NN paper) (NN work))
                          (PP (IN at)
                            (NP (PRP$ your) (NN district) (NN court))))))))))))))
    (. .)))

nsubj(saying-3, You-1)
aux(saying-3, are-2)
root(ROOT-0, saying-3)
complm(equals-10, that-4)
nsubj(equals-10, they-5)
cop(equals-10, are-6)
neg(equals-10, not-7)
det(equals-10, the-8)
amod(equals-10, human-9)
ccomp(saying-3, equals-10)
det(woman-13, the-12)
prep_of(equals-10, woman-13)
nsubj(processes-15, woman-13)
rcmod(woman-13, processes-15)
nn(work-17, paper-16)
dobj(processes-15, work-17)
poss(court-21, your-19)
nn(court-21, district-20)
prep_at(processes-15, court-21)

(ROOT
  (S (`` ``)
    (ADVP (RB As)
      (PP (IN for)
        (NP
          (NP (PRP$ your) (JJ apparent) (NN belief))
          (PP (IN that)
            (NP
              (NP (DT the) (JJ wealthy) (NNS people))
              (PP (IN of)
                (NP (DT this) (NN country))))))))
    (VP (VBP try)
      (S
        (VP (TO to)
          (VP (VB hold)
            (PRT (RP on))
            (PP (TO to)
              (NP (PRP$ their) (NN wealth)))))))
    (PRN (, ,)
      (SINV (-LRB- -LRB-) (`` ``)
        (S
          (PP (IN As))
          (NP (PRP it))
          (VP (VBZ stands)))
        (, ,)
        (VP
          (ADVP
            (ADVP
              (NP (DT the) (NN wealth))
              (IN of))
            (NP (DT this) (NN country)))
          (VBZ rests)
          (PP (IN in)
            (NP
              (NP (DT the) (NNS hands))
              (PP (IN of)
                (NP
                  (NP (DT the)
                    (ADJP (RB very) (JJ few)))
                  (, ,)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP exert)
                        (NP (PRP$ their) (NN control)
                          (S
                            (VP (TO to)
                              (VP (VB keep)
                                (NP (PRP it))))))))))))))
        (NP (DT a)
          (ADJP (RB very) (JJ small))
          (NN group))))
    (. .)))

poss(belief-6, your-4)
amod(belief-6, apparent-5)
prep_as_for(try-14, belief-6)
det(people-10, the-8)
amod(people-10, wealthy-9)
prep_that(belief-6, people-10)
det(country-13, this-12)
prep_of(people-10, country-13)
root(ROOT-0, try-14)
aux(hold-16, to-15)
xcomp(try-14, hold-16)
prt(hold-16, on-17)
poss(wealth-20, their-19)
prep_to(hold-16, wealth-20)
prep(stands-26, As-24)
nsubj(stands-26, it-25)
ccomp(rests-33, stands-26)
det(wealth-29, the-28)
npadvmod(of-30, wealth-29)
advmod(rests-33, of-30)
det(country-32, this-31)
dep(of-30, country-32)
parataxis(try-14, rests-33)
det(hands-36, the-35)
prep_in(rests-33, hands-36)
det(few-40, the-38)
advmod(few-40, very-39)
prep_of(hands-36, few-40)
nsubj(exert-43, few-40)
rcmod(few-40, exert-43)
poss(control-45, their-44)
dobj(exert-43, control-45)
aux(keep-47, to-46)
infmod(control-45, keep-47)
dobj(keep-47, it-48)
det(group-52, a-49)
advmod(small-51, very-50)
amod(group-52, small-51)
nsubj(rests-33, group-52)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (VP (VBG saying)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP are) (RB not)
              (NP
                (NP (DT the) (JJ human) (NN equals))
                (PP (IN of)
                  (NP (PRP yourself)))))))))
    (. .)))

nsubj(saying-3, You-1)
aux(saying-3, are-2)
root(ROOT-0, saying-3)
nsubj(equals-9, they-4)
cop(equals-9, are-5)
neg(equals-9, not-6)
det(equals-9, the-7)
amod(equals-9, human-8)
ccomp(saying-3, equals-9)
prep_of(equals-9, yourself-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADVP
        (ADVP (RB no) (RBR less)
          (CC or)
          (RBR more))
        (PP (IN of)
          (NP (DT a) (NN person))))
      (PP (IN for)
        (S
          (VP (VBG wanting)
            (S
              (VP (TO to)
                (VP (VB keep)
                  (NP (PRP$ your) (NN money)))))))))
    (. .)))

nsubj(are-2, You-1)
root(ROOT-0, are-2)
dep(less-4, no-3)
advmod(are-2, less-4)
advmod(are-2, more-6)
conj_or(less-4, more-6)
det(person-9, a-8)
prep_of(less-4, person-9)
prepc_for(are-2, wanting-11)
aux(keep-13, to-12)
xcomp(wanting-11, keep-13)
poss(money-15, your-14)
dobj(keep-13, money-15)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (ADVP (RB gladly))
    (VP (VB give)
      (NP (PRP$ your) (NN money))
      (ADVP (RB up)
        (PP (IN for)
          (NP
            (NP
              (NP (NNS roads))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP do) (RB not)
                    (VP (VB travel)
                      (PRT (RP on)))))))
            (, ,)
            (NP
              (NP (NN water))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP do) (RB not)
                    (VP (VB drink))))))
            (, ,)
            (NP
              (NP (NN garbage))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is) (RB n't)
                    (ADJP (JJ yours))))))
            (, ,)
            (NP
              (NP
                (NP (NNS libraries))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD will)
                      (ADVP (RB never))
                      (VP (VB enter))))))
              (, ,)
              (NP (NN etcetera) (NN etcetera) (NN etcetera)))))))
    (. .)))

cc(give-4, But-1)
nsubj(give-4, you-2)
advmod(give-4, gladly-3)
root(ROOT-0, give-4)
poss(money-6, your-5)
dobj(give-4, money-6)
advmod(give-4, up-7)
prep_for(up-7, roads-9)
dobj(travel-13, roads-9)
nsubj(travel-13, you-10)
aux(travel-13, do-11)
neg(travel-13, not-12)
rcmod(roads-9, travel-13)
prt(travel-13, on-14)
appos(roads-9, water-16)
dobj(drink-20, water-16)
nsubj(drink-20, you-17)
aux(drink-20, do-18)
neg(drink-20, not-19)
rcmod(water-16, drink-20)
appos(roads-9, garbage-22)
nsubj(yours-26, garbage-22)
cop(yours-26, is-24)
neg(yours-26, n't-25)
rcmod(garbage-22, yours-26)
appos(roads-9, libraries-28)
dobj(enter-32, libraries-28)
nsubj(enter-32, you-29)
aux(enter-32, will-30)
neg(enter-32, never-31)
rcmod(libraries-28, enter-32)
nn(etcetera-36, etcetera-34)
nn(etcetera-36, etcetera-35)
appos(libraries-28, etcetera-36)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB gladly))
    (VP (VBP pay)
      (PP (IN for)
        (NP
          (NP (DT the) (NN health) (NN care))
          (PP (IN of)
            (NP
              (NP
                (NP (NNS senators))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP do) (RB n't)
                      (VP (VB give)
                        (NP
                          (NP (DT a) (NN crap))
                          (PP (IN about)
                            (NP (PRP you)))))))))
              (, ,)
              (CC and)
              (NP
                (NP (NNS millions))
                (PP (IN of)
                  (NP (JJ other) (JJ federal) (NNS employees)))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP do) (RB n't)
                      (VP (VB do)
                        (NP
                          (NP (DT a) (JJ damn) (NN thing))
                          (PP (IN for)
                            (NP (PRP you))))))))))))))
    (. .)))

nsubj(pay-3, You-1)
advmod(pay-3, gladly-2)
root(ROOT-0, pay-3)
det(care-7, the-5)
nn(care-7, health-6)
prep_for(pay-3, care-7)
prep_of(care-7, senators-9)
nsubj(give-13, senators-9)
aux(give-13, do-11)
neg(give-13, n't-12)
rcmod(senators-9, give-13)
det(crap-15, a-14)
dobj(give-13, crap-15)
prep_about(crap-15, you-17)
prep_of(care-7, millions-20)
conj_and(senators-9, millions-20)
nsubj(do-28, millions-20)
amod(employees-24, other-22)
amod(employees-24, federal-23)
prep_of(millions-20, employees-24)
aux(do-28, do-26)
neg(do-28, n't-27)
rcmod(millions-20, do-28)
det(thing-31, a-29)
amod(thing-31, damn-30)
dobj(do-28, thing-31)
prep_for(thing-31, you-33)

(ROOT
  (SBARQ
    (WHADVP (WRB Why)
      (NP (RB then)))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB seem)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (PDT such) (DT a) (JJ huge) (NN problem))
              (PP (IN with)
                (S
                  (VP (VBG providing)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (JJ general) (NN welfare))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NNS citizens))
                            (PP (IN of)
                              (NP (DT this) (NN country)))))))))))))))
    (. ?)))

advmod(seem-5, Why-1)
dep(Why-1, then-2)
aux(seem-5, do-3)
nsubj(seem-5, you-4)
xsubj(have-7, you-4)
root(ROOT-0, seem-5)
aux(have-7, to-6)
xcomp(seem-5, have-7)
predet(problem-11, such-8)
det(problem-11, a-9)
amod(problem-11, huge-10)
dobj(have-7, problem-11)
prepc_with(have-7, providing-13)
det(welfare-17, the-15)
amod(welfare-17, general-16)
prep_for(providing-13, welfare-17)
det(citizens-20, the-19)
prep_of(welfare-17, citizens-20)
det(country-23, this-22)
prep_of(citizens-20, country-23)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB apparently))
    (VP (VBP have)
      (NP
        (NP (DT no) (NNS problems))
        (SBAR (IN unless)
          (S
            (NP (PRP it))
            (VP (VBZ involves)
              (S
                (NP (DT the) (NNS words))
                (`` ``)
                (NP (NN health) (NN care))
                ('' '')))))))
    (. .)))

nsubj(have-3, You-1)
advmod(have-3, apparently-2)
root(ROOT-0, have-3)
det(problems-5, no-4)
dobj(have-3, problems-5)
dobj(involves-8, problems-5)
mark(involves-8, unless-6)
nsubj(involves-8, it-7)
dep(problems-5, involves-8)
det(words-10, the-9)
dep(care-13, words-10)
nn(care-13, health-12)
dep(involves-8, care-13)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP you))
      (VP (VBP go)
        (VP ('' '')
          (NP (NNP Hey)))))
    (: ...)
    (S
      (NP (JJ w-w-w-wuh) (NN wuh))
      (VP (VBP WAIT)
        (NP (DT a) (JJ minute) (NN !!!!))))))

advmod(go-3, Then-1)
nsubj(go-3, you-2)
root(ROOT-0, go-3)
dep(go-3, Hey-5)
amod(wuh-8, w-w-w-wuh-7)
nsubj(WAIT-9, wuh-8)
parataxis(go-3, WAIT-9)
det(!!!!-12, a-10)
amod(!!!!-12, minute-11)
dobj(WAIT-9, !!!!-12)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (NN socialism)))
    (. !)))

nsubj(socialism-3, That-1)
cop(socialism-3, 's-2)
root(ROOT-0, socialism-3)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're) (RB not)
      (NP (DT a) (JJ socialist) (NN country) (NN !!!)))))

nsubj(!!!-7, We-1)
cop(!!!-7, 're-2)
neg(!!!-7, not-3)
det(!!!-7, a-4)
amod(!!!-7, socialist-5)
nn(!!!-7, country-6)
root(ROOT-0, !!!-7)

(ROOT
  (S ('' '')
    (S (CC And)
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBP drive)
        (PP (IN on)
          (NP (NNS roads)))))
    (, ,)
    (VP (VBP drink)
      (VP
        (PP (IN from)
          (NP (JJ municipal) (NNS taps)))
        (, ,)
        (NP (FW etc.) (FW etc.) (FW etc.))))
    (. .)))

cc(drive-5, And-2)
advmod(drive-5, then-3)
nsubj(drive-5, you-4)
ccomp(drink-9, drive-5)
prep_on(drive-5, roads-7)
root(ROOT-0, drink-9)
amod(taps-12, municipal-11)
prep_from(etc.-16, taps-12)
nn(etc.-16, etc.-14)
nn(etc.-16, etc.-15)
dep(drink-9, etc.-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (VP (VBZ 's)
            (NP
              (NP (RB just) (RB slightly) (JJ misguided))
              (PRN (-LRB- -LRB-)
                (NP (NNP okay))
                (, ,)
                (NP (JJ very))))))))
    (: ...)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
complm(misguided-7, that-3)
cop(misguided-7, 's-4)
advmod(misguided-7, just-5)
advmod(misguided-7, slightly-6)
ccomp(think-2, misguided-7)
dep(misguided-7, okay-9)
dep(okay-9, very-11)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (DT a) (NN person))
        (VP (VBZ does))))
    (VP (VBZ is) (RB not)
      (NP (DT the) (NN question)))
    (. .)))

dobj(does-4, What-1)
det(person-3, a-2)
nsubj(does-4, person-3)
csubj(question-8, does-4)
cop(question-8, is-5)
neg(question-8, not-6)
det(question-8, the-7)
root(ROOT-0, question-8)

(ROOT
  (S ('' '')
    (NP (RB -RRB-) (DT this))
    (VP (VBZ is)
      (ADJP (RB absolutely) (RB not) (JJ true)))
    (. .)))

nsubj(true-7, this-3)
cop(true-7, is-4)
advmod(true-7, absolutely-5)
neg(true-7, not-6)
root(ROOT-0, true-7)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD ca) (RB n't)
      (ADVP (DT all))
      (VP (VB be)
        (NP (NNS actors))))
    (. .)))

nsubj(actors-6, We-1)
aux(actors-6, ca-2)
neg(actors-6, n't-3)
advmod(actors-6, all-4)
cop(actors-6, be-5)
root(ROOT-0, actors-6)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD ca) (RB n't)
      (ADVP (DT all))
      (VP (VB be)
        (NP
          (NP
            (NP (NNS librarians))
            (, ,)
            (CC or)
            (NP (NNS doctors))
            (, ,))
          (CC or)
          (NP
            (NP (DT the) (NNS guys))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP change)
                  (NP
                    (NP (DT the) (NN oil))
                    (PP (IN in)
                      (NP (PRP$ your) (NN car)))))))))))
    (. .)))

nsubj(librarians-6, We-1)
aux(librarians-6, ca-2)
neg(librarians-6, n't-3)
advmod(librarians-6, all-4)
cop(librarians-6, be-5)
root(ROOT-0, librarians-6)
conj_or(librarians-6, doctors-9)
det(guys-13, the-12)
conj_or(librarians-6, guys-13)
nsubj(change-15, guys-13)
rcmod(guys-13, change-15)
det(oil-17, the-16)
dobj(change-15, oil-17)
poss(car-20, your-19)
prep_in(oil-17, car-20)

(ROOT
  (S
    (ADVP (RB Fortunately))
    (, ,)
    (NP (PRP we))
    (VP (MD ca) (RB n't)
      (ADVP (DT all))
      (VP (VB be)
        (NP (JJ fast) (NN food) (NNS workers))))
    (. .)))

advmod(workers-10, Fortunately-1)
nsubj(workers-10, we-3)
aux(workers-10, ca-4)
neg(workers-10, n't-5)
advmod(workers-10, all-6)
cop(workers-10, be-7)
amod(workers-10, fast-8)
nn(workers-10, food-9)
root(ROOT-0, workers-10)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're) (RB not)
      (ADVP (DT all))
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (NN ambulance) (NNS drivers)))))))
    (. .)))

nsubj(going-5, We-1)
xsubj(drivers-9, We-1)
aux(going-5, 're-2)
neg(going-5, not-3)
advmod(going-5, all-4)
root(ROOT-0, going-5)
aux(drivers-9, to-6)
cop(drivers-9, be-7)
nn(drivers-9, ambulance-8)
xcomp(going-5, drivers-9)

(ROOT
  (NP
    (NP (NNP Society) (NNS functions))
    (PP (IN with)
      (NP (PDT all) (PRP$ its) (NNS parts)))
    (. .)))

nn(functions-2, Society-1)
root(ROOT-0, functions-2)
predet(parts-6, all-4)
poss(parts-6, its-5)
prep_with(functions-2, parts-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS people))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG saying))))))
    (VP (VBP do) (RB n't)
      (VP (VB deserve)
        (S
          (VP (TO to)
            (VP (RB not)
              (VP (VB go)
                (PP (IN into)
                  (NP (NN bankruptcy))))
              (CC and)
              (VP (VB lose)
                (SBAR
                  (S
                    (NP (PRP$ their) (NNS homes))
                    (VP (VBP are)
                      (NP
                        (NP (DT the) (NNS people))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP depend)
                              (PRT (RP on)))))))))))))))
    (. .)))

det(people-2, The-1)
dobj(saying-5, people-2)
nsubj(deserve-8, people-2)
xsubj(go-11, people-2)
nsubj(saying-5, you-3)
aux(saying-5, are-4)
rcmod(people-2, saying-5)
aux(deserve-8, do-6)
neg(deserve-8, n't-7)
root(ROOT-0, deserve-8)
aux(go-11, to-9)
neg(go-11, not-10)
xcomp(deserve-8, go-11)
prep_into(go-11, bankruptcy-13)
xcomp(deserve-8, lose-15)
conj_and(go-11, lose-15)
poss(homes-17, their-16)
nsubj(people-20, homes-17)
cop(people-20, are-18)
det(people-20, the-19)
ccomp(lose-15, people-20)
dobj(depend-22, people-20)
nsubj(depend-22, you-21)
rcmod(people-20, depend-22)
prt(depend-22, on-23)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS people))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (S
                (VP (VBG saying) ('' '')
                  (NP
                    (NP (NN F))
                    (VP (VBG \*\*\*)
                      (NP (PRP you)))))))))))
    (. .)))

nsubj(people-4, These-1)
cop(people-4, are-2)
det(people-4, the-3)
root(ROOT-0, people-4)
nsubj(are-6, you-5)
rcmod(people-4, are-6)
xcomp(are-6, saying-7)
dobj(saying-7, F-9)
partmod(F-9, \*\*\*-10)
dobj(\*\*\*-10, you-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB deserve)
        (NP (NN anything))))
    (. .)))

nsubj(deserve-4, You-1)
aux(deserve-4, do-2)
neg(deserve-4, n't-3)
root(ROOT-0, deserve-4)
dobj(deserve-4, anything-5)

(ROOT
  (S ('' '')
    (NP (PRP They))
    (VP (VBP place)
      (NP (PRP$ your) (NNS calls)))
    (. .)))

nsubj(place-3, They-2)
root(ROOT-0, place-3)
poss(calls-5, your-4)
dobj(place-3, calls-5)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP monitor)
      (NP (PRP$ your) (NNS streets)))
    (. .)))

nsubj(monitor-2, They-1)
root(ROOT-0, monitor-2)
poss(streets-4, your-3)
dobj(monitor-2, streets-4)

(ROOT
  (S
    (NP (PRP They))
    (VP (VB clean)
      (NP (PRP$ your) (NNS toilets)))
    (. .)))

nsubj(clean-2, They-1)
root(ROOT-0, clean-2)
poss(toilets-4, your-3)
dobj(clean-2, toilets-4)

(ROOT
  (S
    (S
      (VP (VB Take)
        (NP (DT a) (NN look))
        (PP (IN at)
          (NP
            (NP (DT some) (NNS statistics))
            (PP (IN on)
              (NP (NNS donations)))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB notice)
          (SBAR (IN that)
            (S
              (NP (DT the) (JJS wealthiest))
              (VP (VBP are)
                (NP (DT the) (RBS most) (JJ charitable))
                (PP (IN by)
                  (ADVP (RB far)))))))))
    (. ...)))

root(ROOT-0, Take-1)
det(look-3, a-2)
dobj(Take-1, look-3)
det(statistics-6, some-5)
prep_at(Take-1, statistics-6)
prep_on(statistics-6, donations-8)
nsubj(notice-12, you-10)
aux(notice-12, 'll-11)
conj_and(Take-1, notice-12)
complm(charitable-19, that-13)
det(wealthiest-15, the-14)
nsubj(charitable-19, wealthiest-15)
cop(charitable-19, are-16)
det(charitable-19, the-17)
advmod(charitable-19, most-18)
ccomp(notice-12, charitable-19)
prep(charitable-19, by-20)
pcomp(by-20, far-21)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP serve)
      (S
        (NP (PRP you))
        (ADJP (NN lunch))))
    (. .)))

nsubj(serve-2, They-1)
root(ROOT-0, serve-2)
nsubj(lunch-4, you-3)
xcomp(serve-2, lunch-4)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP guard)
      (NP (PRP you))
      (SBAR (IN while)
        (S
          (NP (PRP you))
          (VP (VBP sleep)))))
    (. .)))

nsubj(guard-2, They-1)
root(ROOT-0, guard-2)
dobj(guard-2, you-3)
mark(sleep-6, while-4)
nsubj(sleep-6, you-5)
advcl(guard-2, sleep-6)

(ROOT
  (S (CC And)
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (PRP they))
                  (VP (VBP are) (RB not)
                    (NP
                      (NP (DT the) (JJ human) (NN equivalent))
                      (PP (IN of)
                        (NP (PRP you))))))))))))
    (. ?)))

cc(trying-4, And-1)
nsubj(trying-4, you-2)
xsubj(say-6, you-2)
aux(trying-4, are-3)
root(ROOT-0, trying-4)
aux(say-6, to-5)
xcomp(trying-4, say-6)
complm(equivalent-13, that-7)
nsubj(equivalent-13, they-8)
cop(equivalent-13, are-9)
neg(equivalent-13, not-10)
det(equivalent-13, the-11)
amod(equivalent-13, human-12)
ccomp(say-6, equivalent-13)
prep_of(equivalent-13, you-15)

(ROOT
  (SQ (VBD Or)
    (NP (DT the) (JJ entire) (NN 111th))
    (NP (NNP Congress))
    (. ?)))

root(ROOT-0, Or-1)
det(111th-4, the-2)
amod(111th-4, entire-3)
nsubj(Or-1, 111th-4)
dep(Or-1, Congress-5)

(ROOT
  (SQ
    (VP (VB Or)
      (NP (PRP me)))
    (. ?)))

root(ROOT-0, Or-1)
dobj(Or-1, me-2)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are) (RB not)
      (ADVP
        (ADVP (RBR better))
        (PP (IN than)
          (NP (NN anyone))))
      (ADJP (RB else)))
    (. .)))

nsubj(else-7, You-1)
cop(else-7, are-2)
neg(else-7, not-3)
advmod(else-7, better-4)
prep_than(better-4, anyone-6)
root(ROOT-0, else-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (NP (DT another) (NN human)))
    (. .)))

nsubj(human-4, You-1)
cop(human-4, are-2)
det(human-4, another-3)
root(ROOT-0, human-4)

(ROOT
  (S
    (SBAR
      (WHNP (WDT Whatever))
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP (PRP you)))))
    (VP (VBP choose)
      (S
        (VP (TO to)
          (VP (VB do)
            (PP (IN in)
              (NP (NN life)))))))
    (. ...)))

dobj(you-4, Whatever-1)
nsubj(you-4, it-2)
cop(you-4, is-3)
csubj(choose-5, you-4)
root(ROOT-0, choose-5)
aux(do-7, to-6)
xcomp(choose-5, do-7)
prep_in(do-7, life-9)

(ROOT
  (S
    (VP (VB do)
      (NP (PRP it))
      (ADVP (RB well)))
    (. .)))

root(ROOT-0, do-1)
dobj(do-1, it-2)
advmod(do-1, well-3)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VB end)
                (PRT (RP up))
                (NP (NN being)))))
          (PRN (-LRB- -LRB-)
            (ADJP (JJ profession-wise))
            (-RRB- -RRB-)))
        (VP (VBZ is)
          (NP (DT a) (NN janitor)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP deserve)
      (S
        (VP (TO to) (RB not)
          (VP (VB lose)
            (NP
              (NP (DT the) (NN home))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBD worked)
                    (ADJP (RB just) (RB as) (JJ hard))
                    (SBAR (IN as)
                      (S
                        (NP (PRP I))
                        (VP (VBD did)
                          (PP (IN for)
                            (NP
                              (NP (NN mine))
                              (PRN (-LRB- -LRB-)
                                (CC and)
                                (NP
                                  (NP (NNP Bill) (NNP Gates))
                                  (PP (IN for)
                                    (NP (PRP$ his))))
                                (-RRB- -RRB-))))
                          (, ,)
                          (SBAR (IN because)
                            (S
                              (NP (PRP$ your) (NN wife))
                              (VP (VBD fell)
                                (ADJP (JJ ill))))))))))))))))
    (. .)))

cc(deserve-16, But-1)
mark(janitor-13, if-2)
nsubj(janitor-13, all-3)
nsubj(end-5, you-4)
rcmod(all-3, end-5)
prt(end-5, up-6)
dobj(end-5, being-7)
dep(all-3, profession-wise-9)
cop(janitor-13, is-11)
det(janitor-13, a-12)
advcl(deserve-16, janitor-13)
nsubj(deserve-16, you-15)
xsubj(lose-19, you-15)
root(ROOT-0, deserve-16)
aux(lose-19, to-17)
neg(lose-19, not-18)
xcomp(deserve-16, lose-19)
det(home-21, the-20)
dobj(lose-19, home-21)
nsubj(worked-23, you-22)
rcmod(home-21, worked-23)
advmod(hard-26, just-24)
advmod(hard-26, as-25)
acomp(worked-23, hard-26)
mark(did-29, as-27)
nsubj(did-29, I-28)
advcl(worked-23, did-29)
prep_for(did-29, mine-31)
dep(Gates-35, and-33)
nn(Gates-35, Bill-34)
dep(mine-31, Gates-35)
prep_for(Gates-35, his-37)
mark(fell-43, because-40)
poss(wife-42, your-41)
nsubj(fell-43, wife-42)
advcl(did-29, fell-43)
acomp(fell-43, ill-44)

(ROOT
  (FRAG (CC Or)
    (SBAR (IN because)
      (S
        (NP (PRP you))
        (VP (VBD contracted)
          (NP (DT the) (NNP Swine) (NNP Flu)))))
    (. .)))

dep(contracted-4, Or-1)
mark(contracted-4, because-2)
nsubj(contracted-4, you-3)
root(ROOT-0, contracted-4)
det(Flu-7, the-5)
nn(Flu-7, Swine-6)
dobj(contracted-4, Flu-7)

(ROOT
  (S (CC Or)
    (NP (DT the))
    (VP (VBP like))
    (. .)))

cc(like-3, Or-1)
nsubj(like-3, the-2)
root(ROOT-0, like-3)

(ROOT
  (S (: ...)
    (NP (NN blah))
    (VP (VBP blah))
    (. ...)))

nsubj(blah-3, blah-2)
root(ROOT-0, blah-3)

(ROOT
  (S
    (ADVP (RB Personally))
    (, ,)
    (NP (PRP I))
    (VP (VBP want)
      (NP (PRP$ my) (NN employer)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT the) (JJS richest) (NN man))
                (PP (IN in)
                  (NP (DT the) (NN country))))
              (SBAR (IN so)
                (S
                  (NP (PRP he))
                  (VP (MD can)
                    (VP (VB pay)
                      (NP (PRP me))
                      (NP
                        (NP (DT the) (JJS highest) (NN salary))
                        (PP (IN in)
                          (NP (DT the) (NN country)))))))))))))
    (: ...)))

advmod(want-4, Personally-1)
nsubj(want-4, I-3)
root(ROOT-0, want-4)
poss(employer-6, my-5)
dobj(want-4, employer-6)
aux(man-11, to-7)
cop(man-11, be-8)
det(man-11, the-9)
amod(man-11, richest-10)
infmod(employer-6, man-11)
det(country-14, the-13)
prep_in(man-11, country-14)
mark(pay-18, so-15)
nsubj(pay-18, he-16)
aux(pay-18, can-17)
advcl(man-11, pay-18)
iobj(pay-18, me-19)
det(salary-22, the-20)
amod(salary-22, highest-21)
dobj(pay-18, salary-22)
det(country-25, the-24)
prep_in(salary-22, country-25)

(ROOT
  (S ('' '')
    (PP (IN Since)
      (S
        (NP (PRP you))
        (VP
          (ADVP (RB actually))
          (VBN quoted)
          (NP (PRP me)))))
    (PRN (, ,)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (ADJP (JJ funny))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBD did) (RB n't)
                (ADVP (RB really))
                (VP (VB grasp)
                  (NP (WP what)))))))))
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG saying)))
    (. .)))

nsubj(quoted-5, you-3)
advmod(quoted-5, actually-4)
prepc_since(saying-20, quoted-5)
dobj(quoted-5, me-6)
nsubj(funny-10, it-8)
cop(funny-10, 's-9)
parataxis(saying-20, funny-10)
complm(grasp-16, that-11)
nsubj(grasp-16, you-12)
aux(grasp-16, did-13)
neg(grasp-16, n't-14)
advmod(grasp-16, really-15)
ccomp(funny-10, grasp-16)
dobj(grasp-16, what-17)
nsubj(saying-20, I-18)
aux(saying-20, was-19)
root(ROOT-0, saying-20)

