(ROOT
  (NP (NNP #originalTopic) (NNP =) (NNP So_you_still_want_Nationalized_Health_Care)))

nn(So_you_still_want_Nationalized_Health_Care-3, #originalTopic-1)
nn(So_you_still_want_Nationalized_Health_Care-3, =-2)
root(ROOT-0, So_you_still_want_Nationalized_Health_Care-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (MD may)
            (VP (VB be)
              (NP
                (NP (DT an) (VBG underlying) (NN flaw))
                (PP (IN in)
                  (NP (PRP$ your) (NN logic)))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
complm(flaw-9, that-3)
expl(flaw-9, there-4)
aux(flaw-9, may-5)
cop(flaw-9, be-6)
det(flaw-9, an-7)
amod(flaw-9, underlying-8)
ccomp(think-2, flaw-9)
poss(logic-12, your-11)
prep_in(flaw-9, logic-12)

(ROOT
  (SQ (NNP Does)
    (NP (PRP it))
    (VP (VB matter)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (DT some))
            (VP (MD would)
              (VP (VB be)
                (ADJP (JJ poor))))))
        (, ,)
        (CC or)
        (SBAR (IN if)
          (S
            (NP
              (NP (NNS people))
              (PP (IN like)
                (NP (NNP Joe))))
            (VP (VBP hate)
              (NP (PRP them)))))))
    (. ?)))

dep(matter-3, Does-1)
nsubj(matter-3, it-2)
root(ROOT-0, matter-3)
complm(poor-8, that-4)
nsubj(poor-8, some-5)
aux(poor-8, would-6)
cop(poor-8, be-7)
ccomp(matter-3, poor-8)
mark(hate-15, if-11)
nsubj(hate-15, people-12)
prep_like(people-12, Joe-14)
ccomp(matter-3, hate-15)
conj_or(poor-8, hate-15)
dobj(hate-15, them-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're)
      (NP
        (NP (NNS humans))
        (ADVP (RB still))
        (SBAR
          (WHNP (WP who))))
      (SBAR
        (ADVP (RB as) (RB far))
        (IN as)
        (S
          (NP (PRP we))
          (VP (VBP know)
            (VP (VB have)
              (VP (VBN done)
                (S
                  (ADJP (NN nothing) (JJ wrong)))))))))
    (. .)))

nsubj(humans-3, They-1)
cop(humans-3, 're-2)
root(ROOT-0, humans-3)
advmod(humans-3, still-4)
rcmod(humans-3, who-5)
advmod(far-7, as-6)
advmod(know-10, far-7)
dep(know-10, as-8)
nsubj(know-10, we-9)
dep(humans-3, know-10)
aux(done-12, have-11)
dep(know-10, done-12)
dep(wrong-14, nothing-13)
acomp(done-12, wrong-14)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should) (RB n't)
      (NP (PRP they))
      (VP (VB have)
        (ADVP (RB as) (RB much))
        (NP
          (NP (DT a) (NN right))
          (PP
            (PP (TO to)
              (NP (NN life)))
            (, ,)
            (CC and)
            (PP (IN as)
              (NP
                (ADJP (JJ long)
                  (CC and)
                  (JJ healthy))
                (DT a) (NN life)))
            (, ,))
          (PP (IN as)
            (NP (NN anyone) (RB else))))))
    (. ?)))

advmod(have-5, Why-1)
aux(have-5, should-2)
neg(have-5, n't-3)
nsubj(have-5, they-4)
root(ROOT-0, have-5)
advmod(much-7, as-6)
advmod(have-5, much-7)
det(right-9, a-8)
dobj(have-5, right-9)
dobj(have-5, right-9')
conj_and(right-9, right-9')
prep_to(right-9, life-11)
amod(life-19, long-15)
conj_and(long-15, healthy-17)
amod(life-19, healthy-17)
det(life-19, a-18)
prep_as(right-9', life-19)
prep_as(right-9, anyone-22)
advmod(anyone-22, else-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ makes)
      (ADVP
        (ADVP
          (NP (DT no) (NN sense))
          (RB morally))
        (, ,)
        (CC or)
        (ADVP
          (ADVP (RB even) (RB legally))
          (SBAR (IN if)
            (S
              (NP (PRP one))
              (VP (VBZ is)
                (VP (VBG going)
                  (PP (IN by)
                    (NP
                      (NP (DT the) (NN mantra))
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBP use)
                            (NP
                              (NP
                                (ADVP (RB continually))
                                (NP (`` ``) (NN life))
                                (, ,)
                                (NP (NN liberty)))
                              (, ,)
                              (CC and)
                              (NP
                                (NP (DT the) (NN pursuit))
                                (PP (IN of)
                                  (NP (NN happiness)))))))))))))))))
    (. .)))

nsubj(makes-2, It-1)
root(ROOT-0, makes-2)
det(sense-4, no-3)
npadvmod(morally-5, sense-4)
advmod(makes-2, morally-5)
advmod(legally-9, even-8)
advmod(makes-2, legally-9)
conj_or(morally-5, legally-9)
mark(going-13, if-10)
nsubj(going-13, one-11)
aux(going-13, is-12)
dep(legally-9, going-13)
det(mantra-16, the-15)
prep_by(going-13, mantra-16)
nsubj(use-18, you-17)
rcmod(mantra-16, use-18)
advmod(life-21, continually-19)
dobj(use-18, life-21)
appos(life-21, liberty-23)
det(pursuit-27, the-26)
dobj(use-18, pursuit-27)
conj_and(life-21, pursuit-27)
prep_of(pursuit-27, happiness-29)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ afraid)
        (SBAR
          (S
            (NP (DT this) (JJ constitutional) (NN argument))
            (ADVP (RB simply))
            (VP (VBZ falls)
              (ADJP (JJ short)))))))
    (. .)))

nsubj(afraid-4, I-2)
cop(afraid-4, 'm-3)
root(ROOT-0, afraid-4)
det(argument-7, this-5)
amod(argument-7, constitutional-6)
nsubj(falls-9, argument-7)
advmod(falls-9, simply-8)
dep(afraid-4, falls-9)
acomp(falls-9, short-10)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB lead)
              (NP (NN anyone))
              (S
                (VP (TO to)
                  (VP
                    (VP (VB believe)
                      (S
                        (VP (VBG providing)
                          (SBAR
                            (S
                              (NP (NN healthcare))
                              (VP (VBZ is)
                                (ADJP (JJ unconstitutional))))))))
                    (, ,)
                    (NP
                      (NP (RB quite) (DT the) (JJ opposite))
                      (PP (IN in)
                        (NP (NN fact))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nsubj(is-2, nothing-3)
aux(lead-5, to-4)
infmod(nothing-3, lead-5)
dobj(lead-5, anyone-6)
aux(believe-8, to-7)
xcomp(lead-5, believe-8)
xcomp(believe-8, providing-9)
nsubj(unconstitutional-12, healthcare-10)
cop(unconstitutional-12, is-11)
ccomp(providing-9, unconstitutional-12)
advmod(opposite-16, quite-14)
det(opposite-16, the-15)
dobj(believe-8, opposite-16)
prep_in(opposite-16, fact-18)

(ROOT
  (S (-LRB- -LRB-)
    (NP (PRP I))
    (VP (VBP know)
      (NP (DT the) (NNS quotes))
      (PP (IN from)
        (NP
          (NP (DT the) (NN Declaration))
          (PP (IN of)
            (NP (NN Independence))))))
    (, ,)
    (CC but)
    (S
      (S
        (S
          (ADJP (JJ typical)))
        (, ,)
        (NP (DT the) (NN right))
        (VP (VBZ 's)
          (VP (VBG calling)
            (S
              (NP (PRP it))
              (NP (DT a) (JJ constitutional) (NN argument) (-RRB- -RRB-) (NN Okay))))))
      (, ,) (IN so)
      (S
        (S
          (NP (PRP I))
          (ADVP (RB just))
          (VP (VBP do) (RB n't)
            (VP (VB get)
              (NP (DT that) (NN argument))
              (ADVP (IN at) (DT all)))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (VBP find)
            (S
              (NP (PRP it))
              (ADJP (JJ hard)
                (S
                  (VP (TO to)
                    (VP (VB believe)
                      (S
                        (NP (PRP you))
                        (VP
                          (ADVP (RB really))
                          (VB buy)
                          (PP (IN into)
                            (NP (PRP it))))))))))))))
    (. ...)))

conj_but(know-3, I-2)
nsubj(know-3, I-2)
root(ROOT-0, know-3)
det(quotes-5, the-4)
dobj(know-3, quotes-5)
det(Declaration-8, the-7)
prep_from(know-3, Declaration-8)
prep_of(Declaration-8, Independence-10)
ccomp(calling-18, typical-13)
det(right-16, the-15)
nsubj(calling-18, right-16)
aux(calling-18, 's-17)
conj_but(know-3, calling-18)
nsubj(Okay-24, it-19)
det(Okay-24, a-20)
amod(Okay-24, constitutional-21)
nn(Okay-24, argument-22)
xcomp(calling-18, Okay-24)
dep(calling-18, so-26)
nsubj(get-31, I-27)
advmod(get-31, just-28)
aux(get-31, do-29)
neg(get-31, n't-30)
dep(calling-18, get-31)
det(argument-33, that-32)
dobj(get-31, argument-33)
advmod(get-31, at-34)
pobj(at-34, all-35)
nsubj(find-39, I-38)
dep(calling-18, find-39)
conj_and(get-31, find-39)
nsubj(hard-41, it-40)
xcomp(find-39, hard-41)
aux(believe-43, to-42)
xcomp(hard-41, believe-43)
nsubj(buy-46, you-44)
advmod(buy-46, really-45)
ccomp(believe-43, buy-46)
prep_into(buy-46, it-48)

(ROOT
  (S
    (S
      (S
        (ADJP (RB Joe) (JJ okay)))
      (, ,)
      (NP (PRP he))
      (VP (VBZ 's)
        (NP (DT a) (NN moron))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB believe)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP think)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (ADJP (JJ legitimate)))))))))))
    (. .)))

advmod(okay-2, Joe-1)
ccomp(moron-7, okay-2)
nsubj(moron-7, he-4)
cop(moron-7, 's-5)
det(moron-7, a-6)
root(ROOT-0, moron-7)
nsubj(believe-13, I-10)
aux(believe-13, ca-11)
neg(believe-13, n't-12)
conj_but(moron-7, believe-13)
nsubj(think-15, you-14)
ccomp(believe-13, think-15)
nsubj(legitimate-18, it-16)
cop(legitimate-18, 's-17)
ccomp(think-15, legitimate-18)

(ROOT
  (S (CC And)
    (S
      (VP (VBG getting)
        (ADJP (JJ rid)
          (PP (IN of)
            (NP (NN health) (NN insurance))))
        (ADVP (DT all) (RB together))))
    (VP (VBZ seems)
      (NP (DT an)
        (ADJP (RB even) (JJR worse))
        (NN idea)))
    (. .)))

cc(idea-13, And-1)
dep(rid-3, getting-2)
csubj(idea-13, rid-3)
nn(insurance-6, health-5)
prep_of(rid-3, insurance-6)
dep(together-8, all-7)
advmod(rid-3, together-8)
cop(idea-13, seems-9)
det(idea-13, an-10)
advmod(worse-12, even-11)
amod(idea-13, worse-12)
root(ROOT-0, idea-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean) (, ,)
      (ADVP (RB literally))
      (PP (IN at)
        (NP
          (NP (DT the) (JJS most) (CD 1) (NN %))
          (PP (IN of)
            (NP
              (NP (DT the) (NN world) (NN population))
              (SBAR
                (S
                  (VP (MD could)
                    (VP (VB afford)
                      (NP (DT a) (JJ simple) (NN procedure) (NN today))
                      (PP (IN like)
                        (S
                          (VP (VBG removing)
                            (NP (NN breast) (NN cancer))))))))))))))
    (. .)))

nsubj(mean-2, I-1)
root(ROOT-0, mean-2)
advmod(mean-2, literally-4)
det(%-9, the-6)
amod(%-9, most-7)
num(%-9, 1-8)
prep_at(mean-2, %-9)
det(population-13, the-11)
nn(population-13, world-12)
prep_of(%-9, population-13)
aux(afford-15, could-14)
rcmod(population-13, afford-15)
det(today-19, a-16)
amod(today-19, simple-17)
nn(today-19, procedure-18)
tmod(afford-15, today-19)
prepc_like(afford-15, removing-21)
nn(cancer-23, breast-22)
dobj(removing-21, cancer-23)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP seem)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBG assuming)
                (SBAR (IN that)
                  (S
                    (S
                      (VP (VBG allowing)
                        (NP (NN everyone) (NN healthcare))))
                    (VP (MD would)
                      (ADVP (RB somehow))
                      (VP (VB take)
                        (NP (NN healthcare))
                        (PRT (RP away))
                        (PP (IN from)
                          (NP (NN someone)))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would) (`` ``)
      (VP (VB trample)
        (SBAR
          (S
            (NP (NN everyone) (RB else))
            (VP (VBZ s)
              (ADJP (JJ right)
                (PP (IN of)
                  (NP
                    (NP (NNP Life))
                    (, ,)
                    (NP (NNP Liberty))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (DT the) (NN pursuit))
                      (PP (IN of)
                        (NP (NN happiness)))))))
              ('' '')
              (SBAR (IN as)
                (S
                  (NP (PRP you))
                  (VP (MD would)
                    (VP (VB say))))))))))
    (. .)))

nsubj(seem-2, You-1)
xsubj(assuming-5, You-1)
ccomp(trample-21, seem-2)
aux(assuming-5, to-3)
aux(assuming-5, be-4)
xcomp(seem-2, assuming-5)
complm(take-12, that-6)
csubj(take-12, allowing-7)
nn(healthcare-9, everyone-8)
dobj(allowing-7, healthcare-9)
aux(take-12, would-10)
advmod(take-12, somehow-11)
ccomp(assuming-5, take-12)
dobj(take-12, healthcare-13)
prep_away_from(take-12, someone-16)
nsubj(trample-21, it-18)
aux(trample-21, would-19)
root(ROOT-0, trample-21)
nsubj(right-25, everyone-22)
advmod(everyone-22, else-23)
cop(right-25, s-24)
ccomp(trample-21, right-25)
prep_of(right-25, Life-27)
prep_of(right-25, Liberty-29)
conj_and(Life-27, Liberty-29)
det(pursuit-33, the-32)
prep_of(right-25, pursuit-33)
conj_and(Life-27, pursuit-33)
prep_of(pursuit-33, happiness-35)
mark(say-40, as-37)
nsubj(say-40, you-38)
aux(say-40, would-39)
advcl(right-25, say-40)

(ROOT
  (S (CC And)
    (NP (DT that))
    (VP (MD could)
      (VP (VB be)
        (NP
          (NP (DT the) (NN difference))
          (PP (IN between)
            (S
              (VP
                (VP (VBG dying)
                  (PP (IN within)
                    (NP (DT the) (NN year))))
                (, ,)
                (CC and)
                (VP
                  (VP (VBG living)
                    (NP (DT a)
                      (ADJP (RB long) (JJ happy))
                      (NN life)))
                  (CC and)
                  (VP (VBG dying)
                    (PP (IN of)
                      (NP (JJ old) (NN age)))))))))))
    (. .)))

cc(difference-6, And-1)
nsubj(difference-6, that-2)
aux(difference-6, could-3)
cop(difference-6, be-4)
det(difference-6, the-5)
root(ROOT-0, difference-6)
prepc_between(difference-6, dying-8)
det(year-11, the-10)
prep_within(dying-8, year-11)
prepc_between(difference-6, living-14)
conj_and(dying-8, living-14)
det(life-18, a-15)
advmod(happy-17, long-16)
amod(life-18, happy-17)
dobj(living-14, life-18)
conj_and(dying-8, dying-20)
conj_and(living-14, dying-20)
amod(age-23, old-22)
prep_of(dying-20, age-23)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would)
      (NP (PRP we))
      (VP (VB want)
        (NP (DT that))))
    (. ?)))

advmod(want-4, Why-1)
aux(want-4, would-2)
nsubj(want-4, we-3)
root(ROOT-0, want-4)
dobj(want-4, that-5)

(ROOT
  (FRAG (CC And)
    (SBAR
      (WHADJP (WRB how) (JJ many))
      (S
        (NP
          (NP (JJ bright) (NNS people))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (NNS doctors))
              (VP (VBD decided)
                (S
                  (VP (TO to)
                    (VP (VB lower)
                      (NP (NNS costs))
                      (ADVP
                        (ADVP (RB enough) (RB so))
                        (SBAR (IN that)
                          (S
                            (NP
                              (NP (RB maybe) (CD 5) (NN %))
                              (PP (IN of)
                                (NP (DT the) (NN world) (NN population))))
                            (VP (MD can)
                              (VP (VB afford)
                                (NP (DT a)
                                  (ADJP (RB relatively) (JJ simple))
                                  (NNS procedures)))))))))))))
          (, ,))
        (VP (MD would)
          (ADVP (RB still))
          (VP (VB want)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (NNS doctors)))))))))
    (. ?)))

dep(want-32, And-1)
advmod(many-3, how-2)
dep(want-32, many-3)
amod(people-5, bright-4)
dobj(decided-9, people-5)
nsubj(want-32, people-5)
xsubj(doctors-35, people-5)
mark(decided-9, if-7)
nsubj(decided-9, doctors-8)
xsubj(lower-11, doctors-8)
dep(people-5, decided-9)
aux(lower-11, to-10)
xcomp(decided-9, lower-11)
dobj(lower-11, costs-12)
advmod(so-14, enough-13)
advmod(lower-11, so-14)
dep(afford-24, that-15)
advmod(%-18, maybe-16)
num(%-18, 5-17)
nsubj(afford-24, %-18)
det(population-22, the-20)
nn(population-22, world-21)
prep_of(%-18, population-22)
aux(afford-24, can-23)
ccomp(so-14, afford-24)
det(procedures-28, a-25)
advmod(simple-27, relatively-26)
amod(procedures-28, simple-27)
dobj(afford-24, procedures-28)
aux(want-32, would-30)
advmod(want-32, still-31)
root(ROOT-0, want-32)
aux(doctors-35, to-33)
cop(doctors-35, be-34)
xcomp(want-32, doctors-35)

(ROOT
  (S
    (NP
      (NP (CD 7-10) (NNS years))
      (PP (IN of)
        (NP
          (NP (JJR higher) (NN education))
          (, ,)
          (CC and)
          (NP (NN student)))))
    (VP (VBZ loans)
      (ADVP (RB anywhere)
        (PP (IN from)
          (NP (CD 100,000))))
      (PP (TO to)
        (NP
          (QP (RB half) (DT a) (CD million)))))
    (. .)))

num(years-2, 7-10-1)
nsubj(loans-9, years-2)
amod(education-5, higher-4)
prep_of(years-2, education-5)
prep_of(years-2, student-8)
conj_and(education-5, student-8)
root(ROOT-0, loans-9)
advmod(loans-9, anywhere-10)
prep_from(anywhere-10, 100,000-12)
quantmod(million-16, half-14)
quantmod(million-16, a-15)
prep_to(loans-9, million-16)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (MD can)
      (VP (VB afford)
        (NP (DT that))))
    (. ?)))

nsubj(afford-3, Who-1)
aux(afford-3, can-2)
root(ROOT-0, afford-3)
dobj(afford-3, that-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (PP (TO to)
        (S
          (NP (PRP me))
          (VP (VBG getting)
            (NP
              (NP
                (ADJP (JJ rid)
                  (PP (IN of)
                    (NP (DT any) (NN health))))
                (NN insurance))
              (ADVP (IN at) (DT all))
              (SBAR
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (CD one) (NN way) (NN trip))
                      (PP
                        (ADVP (RB back))
                        (TO to)
                        (NP
                          (NP (DT the) (JJ gilded) (NN age))
                          (, ,)
                          (SBAR
                            (WHADVP (WRB where))
                            (S
                              (NP (PRP you))
                              (VP (VBP have)
                                (NP
                                  (NP (DT a) (NN handful))
                                  (PP (IN of)
                                    (NP
                                      (NP (VBG traveling) (NNS doctors)
                                        (SBAR
                                          (WHNP (WP who))
                                          (S
                                            (VP (VBP do) (RB n't)
                                              (VP
                                                (VP (VB know)
                                                  (S
                                                    (NP (DT that))
                                                    (ADJP (JJ much))))
                                                (CC and)
                                                (VP (VB do)
                                                  (NP (PRP it))
                                                  (PRT (RP out))))))))
                                      (PP (IN of)
                                        (NP
                                          (NP (DT the) (NN kindness))
                                          (PP (IN of)
                                            (NP (PRP$ their) (NNS hearts))))))))))))))))))))))
    (: ...)))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
nsubj(getting-5, me-4)
prepc_to(seems-2, getting-5)
amod(insurance-10, rid-6)
det(health-9, any-8)
prep_of(rid-6, health-9)
dobj(getting-5, insurance-10)
advmod(insurance-10, at-11)
pobj(at-11, all-12)
cop(trip-17, is-13)
det(trip-17, a-14)
num(trip-17, one-15)
nn(trip-17, way-16)
rcmod(insurance-10, trip-17)
advmod(trip-17, back-18)
det(age-22, the-20)
amod(age-22, gilded-21)
prep_to(trip-17, age-22)
advmod(have-26, where-24)
nsubj(have-26, you-25)
rcmod(age-22, have-26)
det(handful-28, a-27)
dobj(have-26, handful-28)
amod(doctors-31, traveling-30)
prep_of(handful-28, doctors-31)
nsubj(know-35, who-32)
nsubj(do-39, who-32)
aux(know-35, do-33)
neg(know-35, n't-34)
ccomp(doctors-31, know-35)
nsubj(much-37, that-36)
xcomp(know-35, much-37)
ccomp(doctors-31, do-39)
conj_and(know-35, do-39)
dobj(do-39, it-40)
prt(do-39, out-41)
det(kindness-44, the-43)
prep_of(doctors-31, kindness-44)
poss(hearts-47, their-46)
prep_of(kindness-44, hearts-47)

(ROOT
  (FRAG
    (SBAR (IN unless)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (VP (VBG talking)
            (PP (IN about)
              (NP (JJ single) (NN payer) (JJ national) (NN healthcare)))))))
    (. .)))

mark(talking-4, unless-1)
nsubj(talking-4, you-2)
aux(talking-4, 're-3)
root(ROOT-0, talking-4)
amod(healthcare-9, single-6)
nn(healthcare-9, payer-7)
amod(healthcare-9, national-8)
prep_about(talking-4, healthcare-9)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (WDT which) (NN case)))
      (NP (PRP you))
      (VP (VBP retain)
        (NP (PRP$ your) (NNS genious) (NN status))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (NP
          (NP (DT all))
          (PP (IN for)
            (NP (PRP it))))))
    (. .)))

dep(case-3, which-2)
prep_in(retain-5, case-3)
nsubj(retain-5, you-4)
root(ROOT-0, retain-5)
poss(status-8, your-6)
nn(status-8, genious-7)
dobj(retain-5, status-8)
nsubj(all-12, I-10)
cop(all-12, 'm-11)
conj_and(retain-5, all-12)
prep_for(all-12, it-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB understand)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT this))
            (VP (MD could)
              (VP (VB be)))))))
    (. .)))

nsubj(understand-4, I-1)
aux(understand-4, do-2)
neg(understand-4, n't-3)
root(ROOT-0, understand-4)
advmod(be-8, how-5)
nsubj(be-8, this-6)
aux(be-8, could-7)
ccomp(understand-4, be-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT the) (JJ same) (NN argument))
              (SBAR
                (S
                  (NP (NNP Joe))
                  (ADVP (RB regularly))
                  (VP (VBZ makes)
                    (SBAR (IN that)
                      (S
                        (S
                          (VP (VBG allowing)
                            (NP (NNS gays))
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (VP (VBN married)
                                    (ADVP (RB somehow))))))))
                        (VP (VBZ invalidates)
                          (NP (PRP$ his) (JJ own) (NN marriage)))))))))))))
    (. .)))

nsubj(seems-2, It-1)
xsubj(argument-7, It-1)
root(ROOT-0, seems-2)
aux(argument-7, to-3)
cop(argument-7, be-4)
det(argument-7, the-5)
amod(argument-7, same-6)
xcomp(seems-2, argument-7)
nsubj(makes-10, Joe-8)
advmod(makes-10, regularly-9)
rcmod(argument-7, makes-10)
complm(invalidates-18, that-11)
csubj(invalidates-18, allowing-12)
dobj(allowing-12, gays-13)
aux(married-16, to-14)
auxpass(married-16, be-15)
xcomp(allowing-12, married-16)
advmod(married-16, somehow-17)
ccomp(makes-10, invalidates-18)
poss(marriage-21, his-19)
amod(marriage-21, own-20)
dobj(invalidates-18, marriage-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT a) (JJ fatal) (NN flaw))
              (PP (IN in)
                (NP (NN logic))))))))
    (. .)))

nsubj(seems-2, It-1)
xsubj(flaw-7, It-1)
root(ROOT-0, seems-2)
aux(flaw-7, to-3)
cop(flaw-7, be-4)
det(flaw-7, a-5)
amod(flaw-7, fatal-6)
xcomp(seems-2, flaw-7)
prep_in(flaw-7, logic-9)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB simply))
    (VP (MD can) (RB not)
      (VP (VB comprehend)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (MD would)
              (VP (VB lead)
                (NP (DT a) (NN thinking) (NN person))
                (PP (IN toward)
                  (NP (DT this) (NN conclusion)))))))))
    (. .)))

nsubj(comprehend-5, I-1)
advmod(comprehend-5, simply-2)
aux(comprehend-5, can-3)
neg(comprehend-5, not-4)
root(ROOT-0, comprehend-5)
nsubj(lead-8, what-6)
aux(lead-8, would-7)
ccomp(comprehend-5, lead-8)
det(person-11, a-9)
nn(person-11, thinking-10)
dobj(lead-8, person-11)
det(conclusion-14, this-13)
prep_toward(lead-8, conclusion-14)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (PRP it))
        (VP (VBD did)
          (S
            (VP (VB happen) (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP it))
                  (VP (MD would) (RB not) (, ,)
                    (SBAR (IN that)
                      (S
                        (S
                          (VP (VBG having)
                            (NP (DT a) (JJ public) (NN option))))
                        (VP (MD would)
                          (VP (VB lead)
                            (PP (TO to)
                              (NP
                                (NP (JJR higher) (NNS prices))
                                (PP (IN for)
                                  (NP (DT some)))))))))))))))))
    (, ,)
    (NP (PRP It))
    (VP (VBZ seems)
      (PP (TO to)
        (NP (PRP me)))
      (SBAR
        (S
          (NP
            (NP (DT the) (NN equation))
            (, ,)
            (NP (NNP Life))
            (, ,)
            (NP (NNP Liberty))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NN Pursuit))
              (PP (IN of)
                (NP (NNP Happiness)))
              (, ,)
              (PP (IN in)
                (NP (DT no) (NN way)))))
          (VP (VBZ gaurantees)
            (NP (JJR lower) (NN insurance) (NNS rates))))))
    (. .)))

advmod(did-4, Even-1)
dep(did-4, if-2)
nsubj(did-4, it-3)
advcl(seems-26, did-4)
ccomp(did-4, happen-5)
dep(would-9, which-7)
nsubj(lead-18, which-7)
nsubj(would-9, it-8)
ccomp(happen-5, would-9)
neg(would-9, not-10)
dep(lead-18, that-12)
csubj(lead-18, having-13)
det(option-16, a-14)
amod(option-16, public-15)
dobj(having-13, option-16)
aux(lead-18, would-17)
ccomp(would-9, lead-18)
amod(prices-21, higher-20)
prep_to(lead-18, prices-21)
prep_for(prices-21, some-23)
nsubj(seems-26, It-25)
root(ROOT-0, seems-26)
prep_to(seems-26, me-28)
det(equation-30, the-29)
nsubj(gaurantees-45, equation-30)
conj_and(equation-30, Life-32)
nsubj(gaurantees-45, Life-32)
conj_and(equation-30, Liberty-34)
nsubj(gaurantees-45, Liberty-34)
det(Pursuit-38, the-37)
conj_and(equation-30, Pursuit-38)
nsubj(gaurantees-45, Pursuit-38)
prep_of(Pursuit-38, Happiness-40)
det(way-44, no-43)
prep_in(Pursuit-38, way-44)
ccomp(seems-26, gaurantees-45)
amod(rates-48, lower-46)
nn(rates-48, insurance-47)
dobj(gaurantees-45, rates-48)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP
      (NP (DT the) (NN Life)
        (CC and)
        (NN Pursuit))
      (PP (IN of)
        (NP
          (NP (NNP Happiness) (NNS parts))
          (PP (IN of)
            (NP (DT the) (NN quote))))))
    (PRN
      (S
        (NP (PRP you))
        (VP (VBP use)
          (NP (JJ several) (NNS times))))
      (, ,))
    (VP (MD would)
      (VP (VB imply)
        (SBAR
          (S
            (NP (NN healthcare))
            (VP (MD would)
              (VP (VB be)
                (ADVP
                  (NP (DT a) (NN right))
                  (RB regardless))
                (PP (IN of)
                  (NP (NN cost)))))))))
    (. .)))

prep_in(imply-20, fact-2)
det(Life-5, the-4)
nsubj(imply-20, Life-5)
conj_and(Life-5, Pursuit-7)
nsubj(imply-20, Pursuit-7)
nn(parts-10, Happiness-9)
prep_of(Life-5, parts-10)
det(quote-13, the-12)
prep_of(parts-10, quote-13)
nsubj(use-15, you-14)
parataxis(imply-20, use-15)
amod(times-17, several-16)
dobj(use-15, times-17)
aux(imply-20, would-19)
root(ROOT-0, imply-20)
nsubj(be-23, healthcare-21)
aux(be-23, would-22)
ccomp(imply-20, be-23)
det(right-25, a-24)
npadvmod(be-23, right-25)
prep_regardless_of(be-23, cost-28)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP mean)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ seems)
      (SBAR
        (S
          (NP (NNS people))
          (VP (VBP are)
            (VP (VBG forgetting)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBP are)
                    (VP (VBG talking)
                      (PP (IN about)
                        (NP (JJ human) (NNS lives))))))))))))
    (. .)))

nsubj(mean-2, I-1)
ccomp(seems-5, mean-2)
nsubj(seems-5, it-4)
root(ROOT-0, seems-5)
nsubj(forgetting-8, people-6)
aux(forgetting-8, are-7)
ccomp(seems-5, forgetting-8)
nsubj(talking-11, we-9)
aux(talking-11, are-10)
ccomp(forgetting-8, talking-11)
amod(lives-14, human-13)
prep_about(talking-11, lives-14)

