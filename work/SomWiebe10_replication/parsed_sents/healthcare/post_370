(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP you))
    (ADVP (RB gladly))
    (VP (VBP give)
      (NP (PRP$ your) (NN money))
      (ADVP (RB up)
        (PP (IN for)
          (NP
            (NP
              (NP (NNS roads))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP do) (RB not)
                    (VP (VB travel)
                      (PRT (RP on)))))))
            (, ,)
            (NP
              (NP (NN water))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP do) (RB not)
                    (VP (VB drink))))))
            (, ,)
            (NP
              (NP (NN garbage))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is) (RB n't)
                    (ADJP (JJ yours))))))
            (, ,)
            (NP
              (NP
                (NP (NNS libraries))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD will)
                      (ADVP (RB never))
                      (VP (VB enter))))))
              (, ,)
              (NP (NN etcetera) (NN etcetera) (NN etcetera)))))))
    (. .)))

cc(give-5, But-2)
nsubj(give-5, you-3)
advmod(give-5, gladly-4)
root(ROOT-0, give-5)
poss(money-7, your-6)
dobj(give-5, money-7)
advmod(give-5, up-8)
prep_for(up-8, roads-10)
dobj(travel-14, roads-10)
nsubj(travel-14, you-11)
aux(travel-14, do-12)
neg(travel-14, not-13)
rcmod(roads-10, travel-14)
prt(travel-14, on-15)
appos(roads-10, water-17)
dobj(drink-21, water-17)
nsubj(drink-21, you-18)
aux(drink-21, do-19)
neg(drink-21, not-20)
rcmod(water-17, drink-21)
appos(roads-10, garbage-23)
nsubj(yours-27, garbage-23)
cop(yours-27, is-25)
neg(yours-27, n't-26)
rcmod(garbage-23, yours-27)
appos(roads-10, libraries-29)
dobj(enter-33, libraries-29)
nsubj(enter-33, you-30)
aux(enter-33, will-31)
neg(enter-33, never-32)
rcmod(libraries-29, enter-33)
nn(etcetera-37, etcetera-35)
nn(etcetera-37, etcetera-36)
appos(libraries-29, etcetera-37)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB gladly))
    (VP (VBP pay)
      (PP (IN for)
        (NP
          (NP (DT the) (NN health) (NN care))
          (PP (IN of)
            (NP
              (NP
                (NP (NNS senators))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP do) (RB n't)
                      (VP (VB give)
                        (NP
                          (NP (DT a) (NN crap))
                          (PP (IN about)
                            (NP (PRP you)))))))))
              (, ,)
              (CC and)
              (NP
                (NP (NNS millions))
                (PP (IN of)
                  (NP (JJ other) (JJ federal) (NNS employees)))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP do) (RB n't)
                      (VP (VB do)
                        (NP
                          (NP (DT a) (JJ damn) (NN thing))
                          (PP (IN for)
                            (NP (PRP you))))))))))))))
    (. .)))

nsubj(pay-3, You-1)
advmod(pay-3, gladly-2)
root(ROOT-0, pay-3)
det(care-7, the-5)
nn(care-7, health-6)
prep_for(pay-3, care-7)
prep_of(care-7, senators-9)
nsubj(give-13, senators-9)
aux(give-13, do-11)
neg(give-13, n't-12)
rcmod(senators-9, give-13)
det(crap-15, a-14)
dobj(give-13, crap-15)
prep_about(crap-15, you-17)
prep_of(care-7, millions-20)
conj_and(senators-9, millions-20)
nsubj(do-28, millions-20)
amod(employees-24, other-22)
amod(employees-24, federal-23)
prep_of(millions-20, employees-24)
aux(do-28, do-26)
neg(do-28, n't-27)
rcmod(millions-20, do-28)
det(thing-31, a-29)
amod(thing-31, damn-30)
dobj(do-28, thing-31)
prep_for(thing-31, you-33)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (NP (NN power))
          (PP (IN over)
            (NP (NNS others))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (S
            (NP (NNS others))
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (NN power))
                  (PP (IN over)
                    (NP (PRP me))))))))))
    (. .)))

nsubj(want-4, I-1)
aux(want-4, do-2)
neg(want-4, n't-3)
root(ROOT-0, want-4)
dobj(want-4, power-5)
prep_over(want-4, others-7)
nsubj(want-12, I-9)
aux(want-12, do-10)
neg(want-12, n't-11)
conj_and(want-4, want-12)
nsubj(have-15, others-13)
aux(have-15, to-14)
xcomp(want-12, have-15)
dobj(have-15, power-16)
prep_over(power-16, me-18)

(ROOT
  (S
    (ADVP (RB Unfortunately))
    (, ,)
    (NP (PRP they))
    (VP (VBP do))
    (. .)))

advmod(do-4, Unfortunately-1)
nsubj(do-4, they-3)
root(ROOT-0, do-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ afraid)
        (S
          (VP (TO to)
            (VP (VB speed)
              (PRN (, ,)
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (ADJP (JJ afraid)
                      (S
                        (VP (TO to)
                          (VP (RB not) (VB pay)
                            (NP (NNS taxes))))))))
                (, ,))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (ADJP (JJ afraid)
                      (S
                        (VP (TO to)
                          (VP (VB do)
                            (NP (NNS things))
                            (SBAR (IN that)
                              (S
                                (NP (PRP I))
                                (VP (MD should)
                                  (VP (VB be)
                                    (VP (VBN allowed)
                                      (S
                                        (VP (TO to)
                                          (VP (VB do)
                                            (SBAR (IN because)
                                              (S
                                                (NP (PRP they))
                                                (VP (VBP cause)
                                                  (NP (DT no) (NN harm))
                                                  (PP (TO to)
                                                    (NP (NN anyone) (RB else))))))))))))))))))))))))))
    (. .)))

nsubj(afraid-3, I-1)
cop(afraid-3, am-2)
root(ROOT-0, afraid-3)
aux(speed-5, to-4)
xcomp(afraid-3, speed-5)
nsubj(afraid-9, I-7)
cop(afraid-9, am-8)
parataxis(speed-5, afraid-9)
aux(pay-12, to-10)
neg(pay-12, not-11)
xcomp(afraid-9, pay-12)
dobj(pay-12, taxes-13)
nsubj(afraid-17, I-15)
cop(afraid-17, am-16)
ccomp(speed-5, afraid-17)
aux(do-19, to-18)
xcomp(afraid-17, do-19)
dobj(do-19, things-20)
complm(allowed-25, that-21)
nsubjpass(allowed-25, I-22)
aux(allowed-25, should-23)
auxpass(allowed-25, be-24)
ccomp(do-19, allowed-25)
aux(do-27, to-26)
xcomp(allowed-25, do-27)
mark(cause-30, because-28)
nsubj(cause-30, they-29)
advcl(do-27, cause-30)
det(harm-32, no-31)
dobj(cause-30, harm-32)
prep_to(cause-30, anyone-34)
advmod(anyone-34, else-35)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ afraid)
        (S
          (VP (TO to)
            (VP
              (VP (VB buy)
                (NP (NN marijuana)))
              (CC and)
              (VP (VB sell)
                (NP (NN alcohol))
                (PP (TO to)
                  (NP (CD 20) (NN year) (NNS olds)))))))))
    (. .)))

nsubj(afraid-3, I-1)
cop(afraid-3, am-2)
root(ROOT-0, afraid-3)
aux(buy-5, to-4)
xcomp(afraid-3, buy-5)
dobj(buy-5, marijuana-6)
xcomp(afraid-3, sell-8)
conj_and(buy-5, sell-8)
dobj(sell-8, alcohol-9)
num(olds-13, 20-11)
nn(olds-13, year-12)
prep_to(sell-8, olds-13)

(ROOT
  (S
    (S
      (VP (VBP Do) (RB n't)
        (VP (VB get)
          (S
            (NP (PRP me))
            (ADJP (JJ wrong))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB definitely))
    (VP (VBP believe)
      (PP (IN in)
        (S
          (VP
            (VP (VBG having)
              (NP (NNS laws)))
            (CC and)
            (VP (VBG upholding)
              (NP (PRP them)))))))
    (. .)))

aux(get-3, Do-1)
neg(get-3, n't-2)
ccomp(believe-9, get-3)
nsubj(wrong-5, me-4)
xcomp(get-3, wrong-5)
nsubj(believe-9, I-7)
advmod(believe-9, definitely-8)
root(ROOT-0, believe-9)
prepc_in(believe-9, having-11)
dobj(having-11, laws-12)
prepc_in(believe-9, upholding-14)
conj_and(having-11, upholding-14)
dobj(upholding-14, them-15)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBD was)
            (NP
              (NP (DT a) (NN limit))
              (PP (IN on)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (NNS laws))
                    (VP (MD can)
                      (VP (VB be)
                        (VP (VBN created))))))))))))
    (. .)))

nsubj(wish-3, I-1)
advmod(wish-3, just-2)
root(ROOT-0, wish-3)
expl(was-5, there-4)
ccomp(wish-3, was-5)
det(limit-7, a-6)
nsubj(was-5, limit-7)
dobj(created-13, what-9)
nsubjpass(created-13, laws-10)
aux(created-13, can-11)
auxpass(created-13, be-12)
prepc_on(limit-7, created-13)

(ROOT
  (S ('' '')
    (S (CC But)
      (SBAR (IN if)
        (S
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VB end)
                  (PRT (RP up))
                  (NP (NN being)))))
            (PRN (-LRB- -LRB-)
              (ADJP (JJ profession-wise))
              (-RRB- -RRB-)))
          (VP (VBZ is)
            (NP (DT a) (NN janitor)))))
      (, ,)
      (NP (PRP you))
      (VP (VBP deserve)
        (S
          (VP (TO to) (RB not)
            (VP (VB lose)
              (NP
                (NP (DT the) (NN home))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBD worked)
                      (ADJP (RB just) (RB as) (JJ hard))
                      (SBAR (IN as)
                        (S
                          (NP (PRP I))
                          (VP (VBD did)
                            (PP (IN for)
                              (NP
                                (NP (NN mine))
                                (PRN (-LRB- -LRB-)
                                  (CC and)
                                  (NP
                                    (NP (NNP Bill) (NNP Gates))
                                    (PP (IN for)
                                      (NP (PRP$ his))))
                                  (-RRB- -RRB-)))))))))))))))
      ('' ''))
    (PRN
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (ADJP (JJ sorry))))
      (, ,))
    (S
      (NP (PRP I))
      (ADVP (RB firmly))
      (VP (VBP believe)
        (SBAR (IN that)
          (S
            (NP (NNP Bill) (NNP Gates))
            (VP (VBD worked)
              (NP (PRP$ his) (NN ass))
              (PRT (RP off))
              (S
                (VP (TO to)
                  (VP (VB get))))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP he))
                  (VP (VBZ is)))))))))
    (. .)))

cc(deserve-17, But-2)
mark(janitor-14, if-3)
nsubj(janitor-14, all-4)
nsubj(end-6, you-5)
rcmod(all-4, end-6)
prt(end-6, up-7)
dobj(end-6, being-8)
dep(all-4, profession-wise-10)
cop(janitor-14, is-12)
det(janitor-14, a-13)
advcl(deserve-17, janitor-14)
nsubj(deserve-17, you-16)
xsubj(lose-20, you-16)
root(ROOT-0, deserve-17)
aux(lose-20, to-18)
neg(lose-20, not-19)
xcomp(deserve-17, lose-20)
det(home-22, the-21)
dobj(lose-20, home-22)
nsubj(worked-24, you-23)
rcmod(home-22, worked-24)
advmod(hard-27, just-25)
advmod(hard-27, as-26)
acomp(worked-24, hard-27)
mark(did-30, as-28)
nsubj(did-30, I-29)
advcl(worked-24, did-30)
prep_for(did-30, mine-32)
dep(Gates-36, and-34)
nn(Gates-36, Bill-35)
dep(mine-32, Gates-36)
prep_for(Gates-36, his-38)
nsubj(sorry-43, I-41)
cop(sorry-43, 'm-42)
dep(deserve-17, sorry-43)
nsubj(believe-47, I-45)
advmod(believe-47, firmly-46)
ccomp(deserve-17, believe-47)
complm(worked-51, that-48)
nn(Gates-50, Bill-49)
nsubj(worked-51, Gates-50)
xsubj(get-56, Gates-50)
ccomp(believe-47, worked-51)
poss(ass-53, his-52)
dobj(worked-51, ass-53)
prt(worked-51, off-54)
aux(get-56, to-55)
xcomp(worked-51, get-56)
advmod(is-59, where-57)
nsubj(is-59, he-58)
advcl(worked-51, is-59)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB currently))
      (VP (VBG working)
        (NP (PRP$ my) (NN ass))
        (PP (IN off)
          (NP
            (S
              (VP (TO to)
                (VP (VB get)
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (PRP I))
                      (VP (VBP want)
                        (S
                          (VP (TO to)
                            (VP (VB be))))))))))
            (CC and)
            (NP
              (NP (DT the) (JJ only) (NN way))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD would)
                    (VP (VB be)
                      (NP
                        (NP (DT a) (NN janitor))
                        (SBAR
                          (S
                            (VP (VBZ is)
                              (SBAR (IN if)
                                (S
                                  (NP (PRP I))
                                  (VP
                                    (VP (VBD gave)
                                      (PRT (RP up)))
                                    (CC and)
                                    (VP (VBD stopped)
                                      (S
                                        (VP (VBG trying))))))))))))))))))))
    (. .)))

nsubj(working-4, I-1)
aux(working-4, 'm-2)
advmod(working-4, currently-3)
root(ROOT-0, working-4)
poss(ass-6, my-5)
dobj(working-4, ass-6)
aux(get-9, to-8)
prep_off(working-4, get-9)
advmod(want-12, where-10)
nsubj(want-12, I-11)
xsubj(be-14, I-11)
advcl(get-9, want-12)
aux(be-14, to-13)
xcomp(want-12, be-14)
det(way-18, the-16)
amod(way-18, only-17)
prep_off(working-4, way-18)
conj_and(get-9, way-18)
nsubj(janitor-23, I-19)
aux(janitor-23, would-20)
cop(janitor-23, be-21)
det(janitor-23, a-22)
rcmod(way-18, janitor-23)
rcmod(janitor-23, is-24)
mark(gave-27, if-25)
nsubj(gave-27, I-26)
nsubj(stopped-30, I-26)
advcl(is-24, gave-27)
prt(gave-27, up-28)
advcl(is-24, stopped-30)
conj_and(gave-27, stopped-30)
xcomp(stopped-30, trying-31)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP get)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP they))
          (VP (VBP want)
            (PP (IN in)
              (NP (NN life)))
            (PP (IN by)
              (S
                (VP (VBG putting)
                  (PRT (RP in))
                  (PP (IN as)
                    (NP (JJ much) (NN work)))
                  (SBAR (IN as)
                    (S
                      (NP (PRP they))
                      (VP (VBP 're)
                        (ADJP (JJ willing)
                          (S
                            (VP (TO to)
                              (VP (VB put)
                                (PRT (RP in))))))))))))))))
    (. .)))

nsubj(get-2, People-1)
root(ROOT-0, get-2)
advmod(want-5, where-3)
nsubj(want-5, they-4)
advcl(get-2, want-5)
prep_in(want-5, life-7)
prepc_by(want-5, putting-9)
prt(putting-9, in-10)
amod(work-13, much-12)
prep_as(putting-9, work-13)
mark(willing-17, as-14)
nsubj(willing-17, they-15)
cop(willing-17, 're-16)
advcl(putting-9, willing-17)
aux(put-19, to-18)
xcomp(willing-17, put-19)
prt(put-19, in-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ is)
          (NP (DT a) (NN janitor)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (SBAR (IN because)
        (S
          (NP (PRP he))
          (VP (VBD was) (RB n't)
            (ADJP (JJ willing)
              (S
                (VP (TO to)
                  (VP (VB work)
                    (ADJP (JJ hard) (RB enough)
                      (S
                        (VP (TO to)
                          (VP (VB get)
                            (PP (TO to)
                              (NP (NN carpenter)))))))))))))))
    (. .)))

mark(janitor-5, If-1)
nsubj(janitor-5, someone-2)
cop(janitor-5, is-3)
det(janitor-5, a-4)
advcl('s-8, janitor-5)
nsubj('s-8, it-7)
root(ROOT-0, 's-8)
mark(willing-13, because-9)
nsubj(willing-13, he-10)
cop(willing-13, was-11)
neg(willing-13, n't-12)
advcl('s-8, willing-13)
aux(work-15, to-14)
xcomp(willing-13, work-15)
acomp(work-15, hard-16)
advmod(hard-16, enough-17)
aux(get-19, to-18)
xcomp(hard-16, get-19)
prep_to(get-19, carpenter-21)

(ROOT
  (S ('' '')
    (PP (IN Are)
      (S
        (NP (PRP you))
        (VP (VBG confusing)
          (NP (NN material) (NNS possessions))
          (PP (IN with)
            (NP (WP what))))))
    (VP (VBZ makes)
      (NP (DT a) (NN person))
      (ADVP (RBR better)))
    (. ?)))

nsubj(confusing-4, you-3)
prepc_are(makes-9, confusing-4)
nn(possessions-6, material-5)
dobj(confusing-4, possessions-6)
prep_with(confusing-4, what-8)
root(ROOT-0, makes-9)
det(person-11, a-10)
dobj(makes-9, person-11)
advmod(makes-9, better-12)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB let)
        (S
          (NP (PRP you))
          (VP (VB decide)))))
    (. .)))

nsubj(let-4, I-2)
aux(let-4, 'll-3)
root(ROOT-0, let-4)
nsubj(decide-6, you-5)
ccomp(let-4, decide-6)

(ROOT
  (S
    (NP (NNP ''))
    (VP (VBD NO)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP DO) (RB N'T)
            (VP (VB !!!!))))))))

root(ROOT-0, NO-2)
nsubj(!!!!-6, I-3)
aux(!!!!-6, DO-4)
neg(!!!!-6, N'T-5)
ccomp(NO-2, !!!!-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB earn)
            (NP (JJ enough) (NN money))
            (S
              (VP (TO to)
                (VP (VB send)
                  (NP (PRP$ my) (NNS kids))
                  (PP (TO to)
                    (NP (NN college))))))))))
    (. .)))

nsubj(want-2, I-1)
xsubj(earn-4, I-1)
root(ROOT-0, want-2)
aux(earn-4, to-3)
xcomp(want-2, earn-4)
amod(money-6, enough-5)
dobj(earn-4, money-6)
aux(send-8, to-7)
xcomp(earn-4, send-8)
poss(kids-10, my-9)
dobj(send-8, kids-10)
prep_to(send-8, college-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP (JJ enough) (NN money)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB go)
                      (PP (IN on)
                        (NP (NNS vacations))))
                    (CC and)
                    (VP (VB spend)
                      (NP (NN time))
                      (PP (IN with)
                        (NP (PRP$ my) (JJ future) (NN family))))))))))))
    (. .)))

nsubj(want-2, I-1)
xsubj(have-4, I-1)
root(ROOT-0, want-2)
aux(have-4, to-3)
xcomp(want-2, have-4)
amod(money-6, enough-5)
dobj(have-4, money-6)
aux(go-8, to-7)
infmod(money-6, go-8)
prep_on(go-8, vacations-10)
infmod(money-6, spend-12)
conj_and(go-8, spend-12)
dobj(spend-12, time-13)
poss(family-17, my-15)
amod(family-17, future-16)
prep_with(spend-12, family-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB earn)
            (ADJP (JJ enough)
              (S
                (VP (TO to)
                  (VP (VB buy)
                    (NP (DT the) (JJS best) (NN health) (NN insurance))))))))))
    (. .)))

nsubj(want-2, I-1)
xsubj(earn-4, I-1)
root(ROOT-0, want-2)
aux(earn-4, to-3)
xcomp(want-2, earn-4)
acomp(earn-4, enough-5)
aux(buy-7, to-6)
xcomp(enough-5, buy-7)
det(insurance-11, the-8)
amod(insurance-11, best-9)
nn(insurance-11, health-10)
dobj(buy-7, insurance-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (ADJP (JJ enough)
        (S
          (VP (TO to)
            (VP (VB provide)
              (NP (DT a) (JJ comfortable)
                (ADJP (NN home)
                  (CC and)
                  (JJ nutritional))
                (NN food)))))))
    (. .)))

nsubj(want-2, I-1)
root(ROOT-0, want-2)
acomp(want-2, enough-3)
aux(provide-5, to-4)
xcomp(enough-3, provide-5)
det(food-11, a-6)
amod(food-11, comfortable-7)
amod(food-11, home-8)
conj_and(home-8, nutritional-10)
amod(food-11, nutritional-10)
dobj(provide-5, food-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB earn)
            (NP
              (ADJP (JJ enough)
                (S
                  (VP (TO to)
                    (VP (VB take)
                      (NP (NN time))
                      (PRT (RP off))))))
              (NN work)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB teach)
                      (NP (PRP them))
                      (NP (NNS morals)))
                    (CC and)
                    (VP (VB educate)
                      (NP (PRP them))
                      (PP (IN on)
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (NP
                                  (NP (DT a) (JJR better) (NN person))
                                  (PP
                                    (PP (TO to)
                                      (NP (PRP themselves)))
                                    (CC and)
                                    (PP (TO to)
                                      (NP (NNS others)))))))))))))))))))
    (. .)))

nsubj(want-2, I-1)
xsubj(earn-4, I-1)
root(ROOT-0, want-2)
aux(earn-4, to-3)
xcomp(want-2, earn-4)
amod(work-10, enough-5)
aux(take-7, to-6)
xcomp(enough-5, take-7)
dobj(take-7, time-8)
prt(take-7, off-9)
dobj(earn-4, work-10)
aux(teach-12, to-11)
infmod(work-10, teach-12)
iobj(teach-12, them-13)
dobj(teach-12, morals-14)
infmod(work-10, educate-16)
conj_and(teach-12, educate-16)
dobj(educate-16, them-17)
advmod(person-24, how-19)
aux(person-24, to-20)
cop(person-24, be-21)
det(person-24, a-22)
amod(person-24, better-23)
prepc_on(educate-16, person-24)
prep_to(person-24, themselves-26)
prep_to(person-24, others-29)
conj_and(themselves-26, others-29)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (NP (JJ enough) (NN money))
      (S
        (VP (TO to)
          (VP (VB afford)
            (S
              (VP (TO to)
                (VP (VB donate)
                  (PP (TO to)
                    (NP
                      (NP (NNS organizations))
                      (SBAR
                        (S
                          (NP (PRP I))
                          (VP (VBP think)
                            (SBAR
                              (S
                                (VP (VBP are)
                                  (ADJP
                                    (ADJP (JJ worthy))
                                    (CC and)
                                    (ADJP (RB not) (JJ corrupt))))))))))))))))))
    (. .)))

nsubj(want-2, I-1)
root(ROOT-0, want-2)
amod(money-4, enough-3)
dobj(want-2, money-4)
aux(afford-6, to-5)
xcomp(want-2, afford-6)
aux(donate-8, to-7)
xcomp(afford-6, donate-8)
prep_to(donate-8, organizations-10)
nsubj(think-12, I-11)
rcmod(organizations-10, think-12)
cop(worthy-14, are-13)
ccomp(think-12, worthy-14)
neg(corrupt-17, not-16)
ccomp(think-12, corrupt-17)
conj_and(worthy-14, corrupt-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB earn)
            (NP (JJ enough) (NN money))
            (S
              (VP (TO to)
                (VP (VB buy)
                  (NP (PRP$ my) (NNS kids))
                  (UCP
                    (S
                      (NP (NNS gymnastics))
                      (NP
                        (NP (NNS lessons))
                        (CC or)
                        (NP (NN hockey) (NNS lessons))))
                    (CC or)
                    (SBAR
                      (WHNP (WDT whatever))
                      (S
                        (NP (PRP they))
                        (VP (VBP want)
                          (S
                            (VP (TO to)
                              (VP (VB do)))))))))))))))
    (. .)))

nsubj(want-2, I-1)
xsubj(earn-4, I-1)
root(ROOT-0, want-2)
aux(earn-4, to-3)
xcomp(want-2, earn-4)
amod(money-6, enough-5)
dobj(earn-4, money-6)
aux(buy-8, to-7)
xcomp(earn-4, buy-8)
poss(kids-10, my-9)
dobj(buy-8, kids-10)
dep(lessons-12, gymnastics-11)
dep(buy-8, lessons-12)
nn(lessons-15, hockey-14)
dep(buy-8, lessons-15)
conj_or(lessons-12, lessons-15)
dep(want-19, whatever-17)
nsubj(want-19, they-18)
xsubj(do-21, they-18)
dep(buy-8, want-19)
conj_or(lessons-12, want-19)
aux(do-21, to-20)
xcomp(want-19, do-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB earn)
            (NP (JJ enough) (NN money))
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB have)
                    (S
                      (VP (TO to)
                        (VP (VB keep)
                          (S
                            (VP (VBG struggling)
                              (S
                                (VP (TO to)
                                  (VP (VB find)
                                    (NP (DT a) (JJR better) (NN job))))))))))))))))))
    (: ...)))

nsubj(want-2, I-1)
xsubj(earn-4, I-1)
root(ROOT-0, want-2)
aux(earn-4, to-3)
xcomp(want-2, earn-4)
amod(money-6, enough-5)
dobj(earn-4, money-6)
complm(have-11, that-7)
nsubj(have-11, I-8)
xsubj(keep-13, I-8)
aux(have-11, do-9)
neg(have-11, n't-10)
ccomp(earn-4, have-11)
aux(keep-13, to-12)
xcomp(have-11, keep-13)
xcomp(keep-13, struggling-14)
aux(find-16, to-15)
xcomp(struggling-14, find-16)
det(job-19, a-17)
amod(job-19, better-18)
dobj(find-16, job-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP
            (VP (VB be)
              (NP (DT a) (NN college) (NN professor))
              (ADVP (RB someday)))
            (CC and)
            (VP (VB help)
              (S
                (NP (NNS students))
                (VP (VB achieve)
                  (NP (PRP$ their) (NNS dreams)))))))))
    (. .)))

nsubj(want-2, I-1)
xsubj(professor-7, I-1)
root(ROOT-0, want-2)
aux(professor-7, to-3)
cop(professor-7, be-4)
det(professor-7, a-5)
nn(professor-7, college-6)
xcomp(want-2, professor-7)
advmod(professor-7, someday-8)
xcomp(want-2, help-10)
conj_and(professor-7, help-10)
nsubj(achieve-12, students-11)
ccomp(help-10, achieve-12)
poss(dreams-14, their-13)
dobj(achieve-12, dreams-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT that))
        (VP (VBZ does) (RB n't)
          (VP (VB pay)
            (NP (RB enough))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB strive)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT a) (NN research) (NN director))
                (PP (IN for)
                  (NP (DT a) (JJ biomedical) (NN technology) (NN company)))
                (S
                  (VP (TO to)
                    (VP (VB design)
                      (CC and)
                      (VB test)
                      (NP (JJ biomedical) (NNS devices))
                      (S
                        (VP (TO to)
                          (VP (VB increase)
                            (NP
                              (NP (DT the) (NN quality))
                              (PP (IN of)
                                (NP (NN life))))
                            (PP (IN for)
                              (NP (JJ many) (NNS people)))))))))))))))
    (. .)))

mark(pay-5, If-1)
nsubj(pay-5, that-2)
aux(pay-5, does-3)
neg(pay-5, n't-4)
advcl(strive-10, pay-5)
dobj(pay-5, enough-6)
nsubj(strive-10, I-8)
xsubj(director-15, I-8)
aux(strive-10, will-9)
root(ROOT-0, strive-10)
aux(director-15, to-11)
cop(director-15, be-12)
det(director-15, a-13)
nn(director-15, research-14)
xcomp(strive-10, director-15)
det(company-20, a-17)
amod(company-20, biomedical-18)
nn(company-20, technology-19)
prep_for(director-15, company-20)
aux(design-22, to-21)
infmod(director-15, design-22)
infmod(director-15, test-24)
conj_and(design-22, test-24)
amod(devices-26, biomedical-25)
dobj(design-22, devices-26)
aux(increase-28, to-27)
xcomp(design-22, increase-28)
det(quality-30, the-29)
dobj(increase-28, quality-30)
prep_of(quality-30, life-32)
amod(people-35, many-34)
prep_for(increase-28, people-35)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB buy)
            (NP (DT a)
              (ADJP (RB very) (JJ nice))
              (NN computer) (NN monitor))
            (SBAR (IN so)
              (S
                (NP (PRP$ my) (NN research))
                (VP (VBZ is)
                  (ADJP
                    (ADJP (JJR easier))
                    (CC and)
                    (ADJP (RBR more) (JJ enjoyable))))))))))
    (. .)))

cc(want-3, And-1)
nsubj(want-3, I-2)
xsubj(buy-5, I-2)
root(ROOT-0, want-3)
aux(buy-5, to-4)
xcomp(want-3, buy-5)
det(monitor-10, a-6)
advmod(nice-8, very-7)
amod(monitor-10, nice-8)
nn(monitor-10, computer-9)
dobj(buy-5, monitor-10)
mark(easier-15, so-11)
poss(research-13, my-12)
nsubj(easier-15, research-13)
nsubj(enjoyable-18, research-13)
cop(easier-15, is-14)
advcl(buy-5, easier-15)
advmod(enjoyable-18, more-17)
advcl(buy-5, enjoyable-18)
conj_and(easier-15, enjoyable-18)

(ROOT
  (S
    (PP (IN By)
      (NP (DT the) (NN way)))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (NP (DT a) (NN girl))
      (, ,)
      (SBAR
        (WHADVP (WRB why))
        (S
          (VP (VBZ does)
            (S
              (NP (NN everyone) (NN mistake))
              (NP (PRP me)))
            (PP (IN for)
              (NP (DT a) (NN man)))))))
    (. ?)))

det(way-3, the-2)
prep_by(girl-8, way-3)
nsubj(girl-8, I-5)
cop(girl-8, am-6)
det(girl-8, a-7)
root(ROOT-0, girl-8)
advmod(does-11, why-10)
advcl(girl-8, does-11)
nn(mistake-13, everyone-12)
nsubj(me-14, mistake-13)
xcomp(does-11, me-14)
det(man-17, a-16)
prep_for(does-11, man-17)

(ROOT
  (S (`` ``)
    (VP (VBZ Does)
      (S
        (NP (DT This))
        (VP (VB make)
          (S
            (NP (PRP Me))
            (NP (DT a) (JJR better) (NN person))))))
    (. ?)))

root(ROOT-0, Does-2)
nsubj(make-4, This-3)
ccomp(Does-2, make-4)
nsubj(person-8, Me-5)
det(person-8, a-6)
amod(person-8, better-7)
xcomp(make-4, person-8)

(ROOT
  (S
    (VP (VB '')
      (ADVP (RB Yes)))
    (. .)))


(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB grudgingly))
    (VP (VBP oblige)
      (S
        (VP (TO to)
          (VP (VB pay)
            (NP (PRP$ my) (NNS taxes))
            (NP (DT every) (NN year))
            (SBAR (IN because)
              (S
                (SBAR (IN if)
                  (S
                    (NP (PRP I))
                    (VP (VBP do) (RB n't))))
                (NP (PRP I))
                (VP (VBP go)
                  (PP (TO to)
                    (NP (NN jail))))))))))
    (. .)))

nsubj(oblige-3, I-1)
xsubj(pay-5, I-1)
advmod(oblige-3, grudgingly-2)
root(ROOT-0, oblige-3)
aux(pay-5, to-4)
xcomp(oblige-3, pay-5)
poss(taxes-7, my-6)
dobj(pay-5, taxes-7)
det(year-9, every-8)
tmod(pay-5, year-9)
mark(go-16, because-10)
mark(do-13, if-11)
nsubj(do-13, I-12)
advcl(go-16, do-13)
neg(do-13, n't-14)
nsubj(go-16, I-15)
advcl(pay-5, go-16)
prep_to(go-16, jail-18)

(ROOT
  (FRAG
    (ADJP (RB Compared) (JJ only)
      (PP (TO to)
        (NP (PRP yourself))))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (ADJP (RBR more) (JJ lazy)
            (CC and)
            (JJ greedy)))))
    (. .)))

advmod(only-2, Compared-1)
root(ROOT-0, only-2)
prep_to(only-2, yourself-4)
mark(lazy-9, if-5)
nsubj(lazy-9, you-6)
nsubj(greedy-11, you-6)
cop(lazy-9, were-7)
advmod(lazy-9, more-8)
dep(only-2, lazy-9)
dep(only-2, greedy-11)
conj_and(lazy-9, greedy-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB compare)
          (NP (NNS people))
          (PP (TO to)
            (NP (JJ other) (NNS people))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP compare)
      (NP (PRP them))
      (PP (TO to)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP they))
            (VP (MD could)
              (VP (VB be)))))))
    (. .)))

nsubj(compare-4, I-1)
aux(compare-4, do-2)
neg(compare-4, n't-3)
ccomp(compare-11, compare-4)
dobj(compare-4, people-5)
amod(people-8, other-7)
prep_to(compare-4, people-8)
nsubj(compare-11, I-10)
root(ROOT-0, compare-11)
dobj(compare-11, them-12)
dobj(be-17, what-14)
nsubj(be-17, they-15)
aux(be-17, could-16)
prepc_to(compare-11, be-17)

(ROOT
  (S
    (NP (DT A) (NN murderer))
    (VP (MD could)
      (VP (VB have)
        (VP (VBN been)
          (NP (DT a) (JJR better) (NN person)))))
    (. .)))

det(murderer-2, A-1)
nsubj(person-8, murderer-2)
aux(person-8, could-3)
aux(person-8, have-4)
cop(person-8, been-5)
det(person-8, a-6)
amod(person-8, better-7)
root(ROOT-0, person-8)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (, ,)
    (ADVP (RB off)
      (PP (TO to)))
    (VP (VBP try)
      (S
        (VP (TO to)
          (VP (VB find)
            (NP (DT that) (NN link))))))
    (: ...)))

cc(try-6, And-1)
advmod(try-6, now-2)
advmod(try-6, off-4)
prep(off-4, to-5)
root(ROOT-0, try-6)
aux(find-8, to-7)
xcomp(try-6, find-8)
det(link-10, that-9)
dobj(find-8, link-10)

(ROOT
  (S (CC And)
    (ADVP (RB then))
    (PP (IN of)
      (NP (NN course)))
    (NP (PRP you))
    (VP (VBD continued)
      (S
        (VP (TO to)
          (VP (VB insult)
            (NP (PRP me))
            (PP (VBN based)
              (PP (IN on)
                (NP
                  (NP (DT these) (JJ false) (NNS assumptions))
                  (: ...)
                  (NP (NNS thanks)))))))))
    (. .)))

cc(continued-6, And-1)
advmod(continued-6, then-2)
prep_of(continued-6, course-4)
nsubj(continued-6, you-5)
xsubj(insult-8, you-5)
root(ROOT-0, continued-6)
aux(insult-8, to-7)
xcomp(continued-6, insult-8)
dobj(insult-8, me-9)
prepc_based_on(insult-8, on-11)
det(assumptions-14, these-12)
amod(assumptions-14, false-13)
pobj(insult-8, assumptions-14)
dep(assumptions-14, thanks-16)

(ROOT
  (S (`` ``)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB like)
        (NP
          (NP (DT the) (NNP United) (NNPS States))
          (PP (IN of)
            (NP
              (NP (NNP America))
              (CC and)
              (NP (DT the) (NNS ideals))))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)
                (VP (VBN founded)
                  (PP (RB upon)))))))
        (: ...)
        (ADVP (RB again))
        (: ...)
        (S
          (VP (VBG ignoring)
            (NP (DT the) (NN fact))))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADVP (RB basically))
              (NP
                (NP (DT a) (NN group))
                (PP (IN of)
                  (NP (JJ rich) (JJ white) (NNS guys)))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD did) (RB n't)
                      (VP (VB want)
                        (S
                          (VP (TO to)
                            (VP (VB pay)
                              (NP (NNS taxes)))))))))))))))
    (. .)))

nsubj(like-5, you-2)
aux(like-5, do-3)
neg(like-5, n't-4)
root(ROOT-0, like-5)
det(States-8, the-6)
nn(States-8, United-7)
dobj(like-5, States-8)
prep_of(States-8, America-10)
det(ideals-13, the-12)
prep_of(States-8, ideals-13)
conj_and(America-10, ideals-13)
nsubjpass(founded-16, it-14)
auxpass(founded-16, was-15)
rcmod(States-8, founded-16)
prep(founded-16, upon-17)
advmod(like-5, again-19)
parataxis(like-5, ignoring-21)
xcomp(like-5, ignoring-21)
det(fact-23, the-22)
dobj(ignoring-21, fact-23)
complm(group-29, that-24)
nsubj(group-29, it-25)
cop(group-29, was-26)
advmod(group-29, basically-27)
det(group-29, a-28)
ccomp(like-5, group-29)
nsubj(want-37, group-29)
amod(guys-33, rich-31)
amod(guys-33, white-32)
prep_of(group-29, guys-33)
aux(want-37, did-35)
neg(want-37, n't-36)
rcmod(group-29, want-37)
aux(pay-39, to-38)
xcomp(want-37, pay-39)
dobj(pay-39, taxes-40)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN ignored)
        (ADVP (DT that) (NN fact)
          (SBAR (IN since)
            (S
              (NP (PRP we))
              (VP (MD could)
                (VP
                  (VP (VB print)
                    (NP (NN text) (NNS books)))
                  (CC and)
                  (VP (VB lie)
                    (PP (IN about)
                      (NP (PRP it)))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB why))
                      (S
                        (VP (VB stop)
                          (ADVP (RB now)))))))))))))
    (. ?)))

nsubj(ignored-3, We-1)
aux(ignored-3, 've-2)
root(ROOT-0, ignored-3)
dep(fact-5, that-4)
advmod(ignored-3, fact-5)
mark(print-9, since-6)
nsubj(print-9, we-7)
nsubj(lie-13, we-7)
aux(print-9, could-8)
dep(fact-5, print-9)
nn(books-11, text-10)
dobj(print-9, books-11)
dep(fact-5, lie-13)
conj_and(print-9, lie-13)
prep_about(lie-13, it-15)
advmod(stop-18, why-17)
advcl(lie-13, stop-18)
advmod(stop-18, now-19)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB never))
      (VP (VBN deluded)
        (NP (PRP myself))
        (PP (IN into)
          (S
            (VP (VBG thinking)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (NN anyone))
                    (PP (IN except)
                      (NP (JJ white) (NN tax) (NN hating) (NNS men))))
                  (VP (VBD founded)
                    (NP (DT this) (NN country))))))))))
    (. .)))

nsubj(deluded-5, I-2)
aux(deluded-5, have-3)
neg(deluded-5, never-4)
root(ROOT-0, deluded-5)
dobj(deluded-5, myself-6)
prepc_into(deluded-5, thinking-8)
complm(founded-16, that-9)
nsubj(founded-16, anyone-10)
amod(men-15, white-12)
nn(men-15, tax-13)
nn(men-15, hating-14)
prep_except(anyone-10, men-15)
ccomp(thinking-8, founded-16)
det(country-18, this-17)
dobj(founded-16, country-18)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB completely))
    (VP (VBP agree)
      (PP (IN with)
        (NP (PRP them)))
      (NP (CD 100) (NN %)))
    (. .)))

nsubj(agree-3, I-1)
advmod(agree-3, completely-2)
root(ROOT-0, agree-3)
prep_with(agree-3, them-5)
num(%-7, 100-6)
dobj(agree-3, %-7)

(ROOT
  (S
    (SBAR (RB Even) (IN after)
      (S
        (NP (PDT all) (DT the))
        (VP
          (VP (VBZ checks))
          (CC and)
          (VP (VBZ balances)
            (S
              (NP (PRP they))
              (VP (VBN built)
                (PP (IN into)
                  (NP (DT the) (NN system)))))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB still))
    (VP (VBD managed)
      (S
        (VP (TO to)
          (VP (VB get)
            (PRT (RP out))
            (PP (IN of)
              (NP (NN control)))
            (SBAR (IN because)
              (S
                (NP (NNS people))
                (VP (VBP love)
                  (NP
                    (NP (NN power))
                    (PP (IN over)
                      (NP (NNS others)))))))))))
    (. .)))

advmod(checks-5, Even-1)
dep(checks-5, after-2)
predet(the-4, all-3)
nsubj(checks-5, the-4)
nsubj(balances-7, the-4)
advcl(managed-16, checks-5)
conj_and(checks-5, balances-7)
advcl(managed-16, balances-7)
nsubj(built-9, they-8)
dep(balances-7, built-9)
det(system-12, the-11)
prep_into(built-9, system-12)
nsubj(managed-16, it-14)
xsubj(get-18, it-14)
advmod(managed-16, still-15)
root(ROOT-0, managed-16)
aux(get-18, to-17)
xcomp(managed-16, get-18)
prep_out_of(get-18, control-21)
mark(love-24, because-22)
nsubj(love-24, people-23)
advcl(get-18, love-24)
dobj(love-24, power-25)
prep_over(power-25, others-27)

