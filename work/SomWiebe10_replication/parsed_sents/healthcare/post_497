(ROOT
  (S
    (NP (PRP It))
    (VP (MD should)
      (VP (VB be)
        (ADJP (JJ enough))
        (SBAR (IN if)
          (S
            (NP (PRP they))
            (VP (VBP do) (RB n't)
              (VP (VB have)
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (NP (PRP it))
                      (PRT (RP back))
                      (PP (IN with)
                        (NP (NN interest))))))))))))
    (. .)))

nsubj(enough-4, It-1)
aux(enough-4, should-2)
cop(enough-4, be-3)
root(ROOT-0, enough-4)
mark(have-9, if-5)
nsubj(have-9, they-6)
aux(have-9, do-7)
neg(have-9, n't-8)
advcl(enough-4, have-9)
aux(pay-11, to-10)
xcomp(have-9, pay-11)
dobj(pay-11, it-12)
prt(pay-11, back-13)
prep_with(pay-11, interest-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS things))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP propose)))))
    (VP (VBP are) (RB not)
      (ADJP (RB fail) (JJ safe)))
    (. .)))

det(things-2, The-1)
dobj(propose-4, things-2)
nsubj(safe-8, things-2)
nsubj(propose-4, you-3)
rcmod(things-2, propose-4)
cop(safe-8, are-5)
neg(safe-8, not-6)
advmod(safe-8, fail-7)
root(ROOT-0, safe-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD can)
      (VP (VB cheat)))
    (. .)))

nsubj(cheat-3, They-1)
aux(cheat-3, can-2)
root(ROOT-0, cheat-3)

