(ROOT
  (S
    (S
      (VP (VB See)))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB get)
        (NP (DT that))))
    (. .)))

ccomp(get-6, See-1)
nsubj(get-6, I-3)
aux(get-6, do-4)
neg(get-6, n't-5)
root(ROOT-0, get-6)
dobj(get-6, that-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR
        (S
          (NP
            (NP (NN everything))
            (SBAR
              (S
                (NP (DT the) (NN government))
                (VP (VBZ handles)))))
          (VP (VBZ is)
            (ADJP (JJ terrible))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
dobj(handles-6, everything-3)
nsubj(terrible-8, everything-3)
det(government-5, the-4)
nsubj(handles-6, government-5)
rcmod(everything-3, handles-6)
cop(terrible-8, is-7)
ccomp(say-2, terrible-8)

(ROOT
  (FRAG
    (INTJ (UH God) (UH no))
    (, ,) (RB not)
    (NP (DT the) (NNS media))
    (. .)))

dep(not-4, God-1)
dep(God-1, no-2)
root(ROOT-0, not-4)
det(media-6, the-5)
dep(not-4, media-6)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB ever))
    (VP (VBP wonder)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP they))
          (VP (VBP call)
            (S
              (NP (DT this))
              (NP
                (NP (DT the) (NN age))
                (PP (IN of)
                  (NP (NN apathy)))))))))
    (. ?)))

nsubj(wonder-3, You-1)
advmod(wonder-3, ever-2)
root(ROOT-0, wonder-3)
advmod(call-6, why-4)
nsubj(call-6, they-5)
advcl(wonder-3, call-6)
nsubj(age-9, this-7)
det(age-9, the-8)
xcomp(call-6, age-9)
prep_of(age-9, apathy-11)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN trend))
          (PP (IN with)
            (NP
              (NP (NNS countries))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (ADJP (RBR more) (JJ rich))))))))))
    (, ,)
    (S
      (NP (NNS people))
      (ADVP (RB just))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (ADVP (DT any) (RBR more)))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP 're)
        (VP
          (VP (VBG being)
            (VP (VBN spoon)
              (S
                (VP (VBN fed)
                  (NP
                    (NP (DT the) (JJ same) (NN bullshit) (NN story))
                    (NP (DT every) (NN day)))))))
          (CC and)
          (VP
            (VP (VBG being)
              (VP (VBN told)
                (SBAR (IN that)
                  (S
                    (NP (NN hope))
                    (VP (VBZ is)
                      (ADJP (JJ useless)))))))
            (PRN (-LRB- -LRB-)
              (SBAR (IN unless)
                (S
                  (S
                    (NP (PRP it) (POS 's))
                    (VP (VBP hope)
                      (SBAR (IN that)
                        (S
                          (NP (EX there))
                          (VP (VBZ 's)
                            (NP (DT a) (NN god)))))))
                  (, ,) (RB then)
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (ADJP (RB totally) (JJ cool))
                      (, ,)
                      (SBAR (IN because)
                        (S
                          (NP (NN everything) (RB else))
                          (VP (VBZ is)
                            (ADJP (JJ bogus)))))))))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(trend-4, It-1)
cop(trend-4, 's-2)
det(trend-4, a-3)
root(ROOT-0, trend-4)
prep_with(trend-4, countries-6)
nsubj(rich-10, countries-6)
cop(rich-10, are-8)
advmod(rich-10, more-9)
rcmod(countries-6, rich-10)
nsubj(care-16, people-12)
advmod(care-16, just-13)
aux(care-16, do-14)
neg(care-16, n't-15)
conj_and(trend-4, care-16)
dep(more-18, any-17)
advmod(care-16, more-18)
nsubjpass(spoon-23, they-20)
nsubjpass(told-33, they-20)
aux(spoon-23, 're-21)
auxpass(spoon-23, being-22)
conj_and(trend-4, spoon-23)
dep(spoon-23, fed-24)
det(story-28, the-25)
amod(story-28, same-26)
nn(story-28, bullshit-27)
dobj(fed-24, story-28)
det(day-30, every-29)
dep(story-28, day-30)
auxpass(told-33, being-32)
conj_and(trend-4, told-33)
conj_and(spoon-23, told-33)
complm(useless-37, that-34)
nsubj(useless-37, hope-35)
cop(useless-37, is-36)
ccomp(told-33, useless-37)
mark(hope-42, unless-39)
nsubj(hope-42, it-40)
possessive(it-40, 's-41)
parataxis(told-33, hope-42)
complm('s-45, that-43)
expl('s-45, there-44)
ccomp(hope-42, 's-45)
det(god-47, a-46)
nsubj('s-45, god-47)
advmod(hope-42, then-49)
nsubj(cool-53, it-50)
cop(cool-53, 's-51)
advmod(cool-53, totally-52)
dep(hope-42, cool-53)
mark(bogus-59, because-55)
nsubj(bogus-59, everything-56)
advmod(everything-56, else-57)
cop(bogus-59, is-58)
advcl(cool-53, bogus-59)

(ROOT
  (S
    (S
      (NP (DT The) (NNP School) (NNPS Systems))
      (VP (VBP are) (RB n't)
        (VP (VBG failing))))
    (, ,)
    (NP (PRP they))
    (ADVP (RB just))
    (VP (VBP need)
      (SBAR
        (S
          (NP (NN time)
            (S
              (VP (TO to)
                (VP (VB adapt)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ current) (NN state))
                      (PP (IN of)
                        (NP (NN mind)))))
                  (NP
                    (NP (DT the) (NNS students))
                    (PP (IN in)
                      (NP (DT this) (NN country))))))))
          (VP (VBP have)
            (VP (VBN adapted))))))
    (. .)))

det(Systems-3, The-1)
nn(Systems-3, School-2)
nsubj(failing-6, Systems-3)
aux(failing-6, are-4)
neg(failing-6, n't-5)
ccomp(need-10, failing-6)
nsubj(need-10, they-8)
advmod(need-10, just-9)
root(ROOT-0, need-10)
nsubj(adapted-26, time-11)
aux(adapt-13, to-12)
infmod(time-11, adapt-13)
det(state-17, the-15)
amod(state-17, current-16)
prep_to(adapt-13, state-17)
prep_of(state-17, mind-19)
det(students-21, the-20)
dobj(adapt-13, students-21)
det(country-24, this-23)
prep_in(students-21, country-24)
aux(adapted-26, have-25)
ccomp(need-10, adapted-26)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP (JJ contaminated) (NN food))))
    (, ,)
    (VP (VBZ uh))
    (: ...)))

prepc_as_for(uh-6, for-2)
amod(food-4, contaminated-3)
pobj(uh-6, food-4)
root(ROOT-0, uh-6)

(ROOT
  (S
    (S
      (INTJ (UH Yeah))
      (NP (PRP I))
      (VP (VBP guess)))
    (NP (PRP they))
    (VP (VBP let)
      (NP (DT a) (NN couple) (NN slip)))
    (. .)))

dep(guess-3, Yeah-1)
nsubj(guess-3, I-2)
dep(let-5, guess-3)
nsubj(let-5, they-4)
root(ROOT-0, let-5)
det(slip-8, a-6)
nn(slip-8, couple-7)
dobj(let-5, slip-8)

(ROOT
  (S
    (ADVP (RB Not)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP 've)
            (ADVP (RB ever))
            (VP (VBN heard)
              (NP
                (NP (DT any) (JJ other) (NNS cases))
                (PP (IN in)
                  (NP (DT any) (JJ other) (NNS countries))))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (VP (VBN contaminated)))))))))
    (NP (NN food))
    (VP (VBD got)
      (PRT (RP out)))
    (. .)))

neg(got-17, Not-1)
dep(heard-6, that-2)
nsubj(heard-6, you-3)
aux(heard-6, 've-4)
advmod(heard-6, ever-5)
ccomp(Not-1, heard-6)
det(cases-9, any-7)
amod(cases-9, other-8)
dobj(heard-6, cases-9)
det(countries-13, any-11)
amod(countries-13, other-12)
prep_in(cases-9, countries-13)
advmod(contaminated-15, where-14)
advcl(heard-6, contaminated-15)
nsubj(got-17, food-16)
root(ROOT-0, got-17)
prt(got-17, out-18)

(ROOT
  (FRAG (RB Not)
    (PP
      (ADVP (RB even))
      (IN in)
      (NP (NN china)))
    (. .)))

root(ROOT-0, Not-1)
advmod(in-3, even-2)
dep(Not-1, in-3)
pobj(in-3, china-4)

(ROOT
  (INTJ (UH Nope) (. .)))

root(ROOT-0, Nope-1)

(ROOT
  (FRAG
    (ADVP (RB Never))
    (. .)))

root(ROOT-0, Never-1)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP are)
      (NP (PRP you)))
    (FRAG
      (ADVP (RB still))
      (ADVP (RB here)))
    (. ?)))

advmod(are-2, Why-1)
root(ROOT-0, are-2)
nsubj(are-2, you-3)
dep(are-2, still-4)
dep(still-4, here-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP act)
      (SBAR (IN like)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (VBP do) (RB n't)
                (VP (VB have)
                  (NP (DT a) (JJ perfect) (NN track) (NN record))))))
          (NP (PRP we))
          (VP (MD might)
            (ADVP (RB as) (RB well))
            (VP (VB blow)
              (NP (PRP$ our) (JJ own) (NNS brains))
              (PRT (RP out))))))
      (SBAR (IN because)
        (S
          (NP (PRP we))
          (VP (VBP 're)
            (NP (NNS failures))))))
    (. .)))

nsubj(act-2, You-1)
root(ROOT-0, act-2)
mark(blow-17, like-3)
mark(have-8, if-4)
nsubj(have-8, we-5)
aux(have-8, do-6)
neg(have-8, n't-7)
advcl(blow-17, have-8)
det(record-12, a-9)
amod(record-12, perfect-10)
nn(record-12, track-11)
dobj(have-8, record-12)
nsubj(blow-17, we-13)
aux(blow-17, might-14)
advmod(well-16, as-15)
mwe(well-16, as-15)
advmod(blow-17, well-16)
advcl(act-2, blow-17)
poss(brains-20, our-18)
amod(brains-20, own-19)
dobj(blow-17, brains-20)
prt(blow-17, out-21)
mark(failures-25, because-22)
nsubj(failures-25, we-23)
cop(failures-25, 're-24)
advcl(act-2, failures-25)

(ROOT
  (S
    (S
      (NP (DT The) (NN government))
      (VP (VBZ is)
        (VP (VBN run)
          (PP (IN by)
            (NP (NNS people))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB inherently))
      (ADJP (JJ flawed)
        (SBAR (IN because)
          (FRAG
            (WHPP (IN of)
              (WHNP (WDT that)))))))
    (. .)))

det(government-2, The-1)
nsubjpass(run-4, government-2)
auxpass(run-4, is-3)
ccomp(flawed-11, run-4)
agent(run-4, people-6)
nsubj(flawed-11, it-8)
cop(flawed-11, 's-9)
advmod(flawed-11, inherently-10)
root(ROOT-0, flawed-11)
prep_because_of(flawed-11, that-14)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP 're) (RB not)
      (NP (DT the) (JJS worst)))
    (. .)))

cc(worst-6, But-1)
nsubj(worst-6, we-2)
cop(worst-6, 're-3)
neg(worst-6, not-4)
det(worst-6, the-5)
root(ROOT-0, worst-6)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP (NNP Katrina))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB personally))
    (VP (VBP blame)
      (NP
        (NP (NNP Bush))
        (PP (IN for)
          (S
            (VP (VBG appointing)
              (NP (DT that) (NN weirdo))
              (PP (IN as)
                (NP
                  (NP (DT the) (NN head))
                  (PP (IN of)
                    (NP (NNP FEMA)))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (ADVP (RB probably))
                      (VP (VBD did) (RB n't)
                        (VP (VB have)
                          (NP
                            (NP (DT any) (NN experience))
                            (PP (IN in)
                              (NP (DT that) (NN field))))
                          (ADVP (IN at) (DT all)))))))))))))
    (. .)))

prepc_as_for(blame-7, for-2)
pobj(blame-7, Katrina-3)
nsubj(blame-7, I-5)
advmod(blame-7, personally-6)
root(ROOT-0, blame-7)
dobj(blame-7, Bush-8)
prepc_for(Bush-8, appointing-10)
det(weirdo-12, that-11)
dobj(appointing-10, weirdo-12)
det(head-15, the-14)
prep_as(appointing-10, head-15)
nsubj(have-22, head-15)
prep_of(head-15, FEMA-17)
advmod(have-22, probably-19)
aux(have-22, did-20)
neg(have-22, n't-21)
rcmod(head-15, have-22)
det(experience-24, any-23)
dobj(have-22, experience-24)
det(field-27, that-26)
prep_in(experience-24, field-27)
advmod(have-22, at-28)
pobj(at-28, all-29)

(ROOT
  (S (RB So)
    (VP (VB yeah) (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP one))
          (VP (VBD was)
            (NP
              (NP (DT the) (NNS people) (POS 's))
              (NN fault))
            (PP (IN for)
              (S
                (VP (VBG electing)
                  (NP (NNP Bush)))))))))
    (. .)))

advmod(yeah-2, So-1)
root(ROOT-0, yeah-2)
complm(fault-10, that-4)
nsubj(fault-10, one-5)
cop(fault-10, was-6)
det(people-8, the-7)
poss(fault-10, people-8)
ccomp(yeah-2, fault-10)
prepc_for(fault-10, electing-12)
dobj(electing-12, Bush-13)

(ROOT
  (S
    (S
      (INTJ (UH Yeah))
      (, ,)
      (VP (VB sorry)
        (NP (NN boss))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (ADVP (RB over))
      (VP (VBG exaggerating)
        (NP (NN everything))))
    (. .)))

dep(sorry-3, Yeah-1)
ccomp(exaggerating-9, sorry-3)
dobj(sorry-3, boss-4)
nsubj(exaggerating-9, you-6)
aux(exaggerating-9, 're-7)
advmod(exaggerating-9, over-8)
root(ROOT-0, exaggerating-9)
dobj(exaggerating-9, everything-10)

(ROOT
  (S
    (NP (NNP Go))
    (VP (VBP move)
      (PP (TO to)
        (NP
          (NP (NNP Canada))
          (CC or)
          (NP (NN something))))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (DT the) (NN government))
                (VP (VBZ is)
                  (ADJP (JJ incapable)
                    (PP (IN of)
                      (NP (NN anything)))))))))))
    (. .)))

nsubj(move-2, Go-1)
root(ROOT-0, move-2)
prep_to(move-2, Canada-4)
prep_to(move-2, something-6)
conj_or(Canada-4, something-6)
mark(think-9, if-7)
nsubj(think-9, you-8)
advcl(move-2, think-9)
det(government-11, the-10)
nsubj(incapable-13, government-11)
cop(incapable-13, is-12)
ccomp(think-9, incapable-13)
prep_of(incapable-13, anything-15)

(ROOT
  (S (CC Or)
    (ADVP (RB maybe))
    (NP (PRP you))
    (VP (VBP 're)
      (VP (VBG forgetting)
        (SBAR (IN that)
          (S
            (PP (IN for)
              (NP (DT the) (JJ past) (CD two) (NNS decades)))
            (NP (PRP we))
            (VP (VBP 've)
              (VP (VBN been)
                (VP (VBG fighting)
                  (NP
                    (NP (DT a) (JJ ridiculous) (NN war))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN middle))
                        (ADVP (JJ east))))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ has)
                          (VP (VBN been)
                            (NP
                              (NP (DT a) (JJ constant) (NN drain))
                              (PP (IN on)
                                (NP (PRP$ our) (NN economy))))))))))))))))
    (. .)))

cc(forgetting-5, Or-1)
advmod(forgetting-5, maybe-2)
nsubj(forgetting-5, you-3)
aux(forgetting-5, 're-4)
root(ROOT-0, forgetting-5)
complm(fighting-15, that-6)
det(decades-11, the-8)
amod(decades-11, past-9)
num(decades-11, two-10)
prep_for(fighting-15, decades-11)
nsubj(fighting-15, we-12)
aux(fighting-15, 've-13)
aux(fighting-15, been-14)
ccomp(forgetting-5, fighting-15)
det(war-18, a-16)
amod(war-18, ridiculous-17)
dobj(fighting-15, war-18)
nsubj(drain-28, war-18)
det(middle-21, the-20)
prep_in(war-18, middle-21)
advmod(middle-21, east-22)
aux(drain-28, has-24)
cop(drain-28, been-25)
det(drain-28, a-26)
amod(drain-28, constant-27)
rcmod(war-18, drain-28)
poss(economy-31, our-30)
prep_on(drain-28, economy-31)

(ROOT
  (S
    (NP (NNS Lets))
    (VP (VBP blame)
      (NP (PRP it))
      (PP (DT all) (IN on)
        (NP
          (NP (DT the) (NN government))
          (, ,)
          (ADVP (RB no)
            (NP (RB not) (DT the) (JJ big) (NNS corporations)))))
      (S
        (VP (TO to)
          (VP
            (ADVP (RB continually))
            (VB screw)
            (NP
              (NP (NN everyone) (RB else))
              (PP (RB out) (IN of)
                (NP (PRP$ their) (NN money))))))))
    (. .)))

nsubj(blame-2, Lets-1)
xsubj(screw-16, Lets-1)
root(ROOT-0, blame-2)
dobj(blame-2, it-3)
dep(blame-2, all-4)
det(government-7, the-6)
prep_on(blame-2, government-7)
advmod(government-7, no-9)
neg(corporations-13, not-10)
det(corporations-13, the-11)
amod(corporations-13, big-12)
pobj(no-9, corporations-13)
aux(screw-16, to-14)
advmod(screw-16, continually-15)
xcomp(blame-2, screw-16)
dobj(screw-16, everyone-17)
advmod(everyone-17, else-18)
poss(money-22, their-21)
prep_out_of(everyone-17, money-22)

(ROOT
  (S
    (INTJ (UH Yeah))
    (, ,)
    (ADVP (RB sure))
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN government) (POS 's))
        (NN fault)))
    (. .)))

dep(fault-9, Yeah-1)
advmod(fault-9, sure-3)
nsubj(fault-9, it-4)
cop(fault-9, 's-5)
det(government-7, the-6)
poss(fault-9, government-7)
root(ROOT-0, fault-9)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD screwed)
      (SBAR
        (S
          (NP (NN everyone) (NNP sideways) (NNP THEY))
          (VP (VBD did)))))
    (. .)))

nsubj(screwed-2, They-1)
root(ROOT-0, screwed-2)
nn(THEY-5, everyone-3)
nn(THEY-5, sideways-4)
nsubj(did-6, THEY-5)
ccomp(screwed-2, did-6)

(ROOT
  (S
    (S
      (INTJ (UH No))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (VP (VBG saying)
          (SBAR
            (S
              (NP (DT the) (NN government))
              (VP (VBZ is)
                (ADJP (JJ perfect))))))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP do) (RB n't)
                (VP (VB have)
                  (NP
                    (NP (DT the) (JJS worst) (NN record))
                    (PP (IN in)
                      (NP (DT the) (NN world)))))))))))
    (. .)))

dep(saying-6, No-1)
nsubj(saying-6, I-3)
aux(saying-6, 'm-4)
neg(saying-6, not-5)
root(ROOT-0, saying-6)
det(government-8, the-7)
nsubj(perfect-10, government-8)
cop(perfect-10, is-9)
ccomp(saying-6, perfect-10)
nsubj(sure-14, I-12)
cop(sure-14, 'm-13)
conj_but(saying-6, sure-14)
nsubj(have-18, we-15)
aux(have-18, do-16)
neg(have-18, n't-17)
dep(sure-14, have-18)
det(record-21, the-19)
amod(record-21, worst-20)
dobj(have-18, record-21)
det(world-24, the-23)
prep_in(record-21, world-24)

(ROOT
  (S
    (NP (NNS Lets))
    (VP (VBP blame)
      (NP (PRP it))
      (PP (DT all) (IN on)
        (NP
          (NP (DT the) (NN government))
          (, ,) (RB not)
          (NP (DT the) (NNS media)))))
    (. .)))

nsubj(blame-2, Lets-1)
root(ROOT-0, blame-2)
dobj(blame-2, it-3)
dep(blame-2, all-4)
det(government-7, the-6)
prep_on(blame-2, government-7)
neg(government-7, not-9)
det(media-11, the-10)
dep(government-7, media-11)

