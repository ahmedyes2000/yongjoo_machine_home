(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (VP (VBP see)
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (ADVP (RB fully))
          (VP (VBP understand)
            (SBAR
              (S
                (NP
                  (NP (DT the) (NNS arguments))
                  (PP (IN against)
                    (NP (JJ universal) (NN healthcare) (NNP .1) (-RRB- -RRB-) (NNP Healthcare))))
                (VP (VBZ is) (RB not)
                  (NP (DT a) (`` ``) (NN right) ('' '')))))))))
    (. .)))

nsubj(see-3, Let-1)
possessive(Let-1, 's-2)
root(ROOT-0, see-3)
mark(understand-7, if-4)
nsubj(understand-7, I-5)
advmod(understand-7, fully-6)
advcl(see-3, understand-7)
det(arguments-9, the-8)
nsubj(right-20, arguments-9)
amod(Healthcare-15, universal-11)
nn(Healthcare-15, healthcare-12)
nn(Healthcare-15, .1-13)
prep_against(arguments-9, Healthcare-15)
cop(right-20, is-16)
neg(right-20, not-17)
det(right-20, a-18)
ccomp(understand-7, right-20)

(ROOT
  (S
    (NP
      (NP (NNP Seems))
      (PP (IN like)
        (NP
          (NP (DT the) (JJ whole) ('' '') (NNP Life))
          (, ,)
          (NP (NNP Liberty))
          (CC and)
          (NP
            (NP (DT the) (NN Pursuit))
            (PP (IN of)
              (NP (NNP Happiness) ('' '')))))))
    (VP (MD would)
      (VP (VB cover)
        (NP (DT that))))
    (. .)))

nsubj(cover-16, Seems-1)
det(Life-6, the-3)
amod(Life-6, whole-4)
prep_like(Seems-1, Life-6)
prep_like(Seems-1, Liberty-8)
conj_and(Life-6, Liberty-8)
det(Pursuit-11, the-10)
prep_like(Seems-1, Pursuit-11)
conj_and(Life-6, Pursuit-11)
prep_of(Pursuit-11, Happiness-13)
aux(cover-16, would-15)
root(ROOT-0, cover-16)
dobj(cover-16, that-17)

(ROOT
  (S
    (S
      (LST (LS 3) (-RRB- -RRB-))
      (NP (PRP It))
      (VP (VBZ 's)))
    ('' '')
    (VP (VBD Socialized)
      (NP (NNP Medicine) ('' '')))
    (. .)))

dep('s-4, 3-1)
nsubj('s-4, It-3)
ccomp(Socialized-6, 's-4)
csubj(Socialized-6, 's-4)
root(ROOT-0, Socialized-6)
dobj(Socialized-6, Medicine-7)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN got)
        (NP (JJ socialized) (NN medicine))
        (ADVP (RB now))))
    (. .)))

nsubj(got-3, We-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
amod(medicine-5, socialized-4)
dobj(got-3, medicine-5)
advmod(got-3, now-6)

(ROOT
  (S
    (S
      (NP
        (NP (NN Anyone))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ 's)
              (ADJP (JJ sick))))))
      (VP (MD can)
        (VP (VB go)
          (PP (TO to)
            (NP (DT the) (NN emergency) (NN room))))))
    (CC and)
    (S
      (NP (DT the) (NN hospital))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB treat)
              (NP (PRP them))
              (SBAR (IN whether)
                (S
                  (NP (PRP they))
                  (VP (MD can)
                    (VP (VB pay))))
                (CC or)
                (RB not)))))))
    (. .)))

nsubj(sick-4, Anyone-1)
nsubj(go-6, Anyone-1)
cop(sick-4, 's-3)
rcmod(Anyone-1, sick-4)
aux(go-6, can-5)
root(ROOT-0, go-6)
det(room-10, the-8)
nn(room-10, emergency-9)
prep_to(go-6, room-10)
det(hospital-13, the-12)
nsubj(has-14, hospital-13)
xsubj(treat-16, hospital-13)
conj_and(go-6, has-14)
aux(treat-16, to-15)
xcomp(has-14, treat-16)
dobj(treat-16, them-17)
complm(pay-21, whether-18)
nsubj(pay-21, they-19)
aux(pay-21, can-20)
ccomp(treat-16, pay-21)
ccomp(treat-16, not-23)
conj_or(pay-21, not-23)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN end)))
    (NP (PRP we))
    (ADVP (DT all))
    (VP (VB pay)
      (PP
        (PP (IN for)
          (NP (PRP it)))
        (CC either)
        (PP (IN through)
          (NP (NN government) (NNS payments))))
      (PP (TO to)
        (NP
          (NP (DT the) (NN hospital))
          (, ,)
          (NP (NN insurance))
          (CC or)
          (NP (JJR higher) (JJ medical) (NNS costs)))))
    (. .)))

det(end-3, the-2)
prep_in(pay-6, end-3)
nsubj(pay-6, we-4)
advmod(pay-6, all-5)
root(ROOT-0, pay-6)
prep_for(pay-6, it-8)
dep(pay-6, either-9)
conj(pay-6, through-10)
nn(payments-12, government-11)
pobj(through-10, payments-12)
det(hospital-15, the-14)
prep_to(pay-6, hospital-15)
prep_to(pay-6, insurance-17)
conj_or(hospital-15, insurance-17)
amod(costs-21, higher-19)
amod(costs-21, medical-20)
prep_to(pay-6, costs-21)
conj_or(hospital-15, costs-21)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN everyone))
        (VP (VBD had)
          (NP (NN healthcare)))))
    (NP (PRP they))
    (VP (MD could)
      (VP (VB get)
        (S
          (NP (PRP it))
          (VP (VBN treated)
            (ADVP (RB early))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADVP (RBR more))
                  (ADJP (NN cost) (JJ effective)))))))))
    (. .)))

mark(had-3, If-1)
nsubj(had-3, everyone-2)
advcl(get-7, had-3)
dobj(had-3, healthcare-4)
nsubj(get-7, they-5)
aux(get-7, could-6)
root(ROOT-0, get-7)
nsubj(treated-9, it-8)
dep(get-7, treated-9)
advmod(treated-9, early-10)
advmod(effective-16, when-11)
nsubj(effective-16, it-12)
cop(effective-16, 's-13)
advmod(effective-16, more-14)
dep(effective-16, cost-15)
advcl(treated-9, effective-16)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP are)
      (NP (PRP we))
      (VP
        (ADVP (RB only))
        (VBG paying)
        (PP (IN for)
          (NP
            (NP (DT the) (NN poor) (POS 's))
            (NN healthcare)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP (DT the) (JJS most))
              (ADJP (JJ expensive)))))))
    (. ?)))

advmod(paying-5, Why-1)
aux(paying-5, are-2)
nsubj(paying-5, we-3)
advmod(paying-5, only-4)
root(ROOT-0, paying-5)
det(poor-8, the-7)
poss(healthcare-10, poor-8)
prep_for(paying-5, healthcare-10)
advmod(expensive-16, when-11)
nsubj(expensive-16, it-12)
cop(expensive-16, 's-13)
det(most-15, the-14)
attr(expensive-16, most-15)
advcl(paying-5, expensive-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP 've)
          (VP (VBN got)
            (NP
              (NP (DT a) (NN right))
              (PP (TO to)
                (NP (NN life))))
            (ADVP (RB then))))))
    (NP (PRP we))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP (DT a) (NN right)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB care)
                      (PP (IN for)
                        (NP (DT that) (NN life))))
                    (CC and)
                    (VP (VB keep)
                      (S
                        (NP (PRP it))
                        (VP (VBG going))))))))))))
    (. .)))

mark(got-4, If-1)
nsubj(got-4, we-2)
aux(got-4, 've-3)
advcl(have-11, got-4)
det(right-6, a-5)
dobj(got-4, right-6)
prep_to(right-6, life-8)
advmod(got-4, then-9)
nsubj(have-11, we-10)
xsubj(have-13, we-10)
root(ROOT-0, have-11)
aux(have-13, to-12)
xcomp(have-11, have-13)
det(right-15, a-14)
dobj(have-13, right-15)
aux(care-17, to-16)
infmod(right-15, care-17)
det(life-20, that-19)
prep_for(care-17, life-20)
infmod(right-15, keep-22)
conj_and(care-17, keep-22)
nsubj(going-24, it-23)
dep(keep-22, going-24)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB also))
      (ADJP (JJ hard)
        (PP (TO to)
          (NP (NNP Pursue) (NNPS Happiness))))
      (SBAR (IN if)
        (PRN
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (ADJP (JJ sick)
                (PP (RB due) (TO to)
                  (NP
                    (NP (DT a) (NN lack))
                    (PP (IN of)
                      (NP (JJ medical) (NN treatment)))))
                (NP (CD .2)))))
          (-RRB- -RRB-))
        (S
          (NP (JJ Other) (NNS countries))
          (VP (VBP are) (RB n't)
            (VP (VBG doing)
              (NP (PRP it))
              (SBAR
                (ADVP (RB well))
                (IN so)
                (S
                  (NP (PRP we))
                  (VP (MD should) (RB n't)
                    (VP (VB do)
                      (NP (PRP it))
                      (ADVP (IN at) (DT all)))))))))))
    (. .)))

nsubj(hard-4, It-1)
cop(hard-4, 's-2)
advmod(hard-4, also-3)
root(ROOT-0, hard-4)
nn(Happiness-7, Pursue-6)
prep_to(hard-4, Happiness-7)
mark(doing-25, if-8)
nsubj(sick-11, you-9)
cop(sick-11, 're-10)
dep(doing-25, sick-11)
det(lack-15, a-14)
prep_due_to(sick-11, lack-15)
amod(treatment-18, medical-17)
prep_of(lack-15, treatment-18)
dep(sick-11, .2-19)
amod(countries-22, Other-21)
nsubj(doing-25, countries-22)
aux(doing-25, are-23)
neg(doing-25, n't-24)
advcl(hard-4, doing-25)
dobj(doing-25, it-26)
advmod(do-32, well-27)
dep(do-32, so-28)
nsubj(do-32, we-29)
aux(do-32, should-30)
neg(do-32, n't-31)
dep(doing-25, do-32)
dobj(do-32, it-33)
advmod(do-32, at-34)
pobj(at-34, all-35)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP use)
          (NP
            (NP (DT this))
            (PP (IN as)
              (NP (DT a) (NNS criteria)))))))
    (NP (PRP we))
    (VP (MD should)
      (VP (VB disband)
        (NP (DT the) (NN military))
        (ADVP (RB too))))
    (. .)))

mark(use-3, If-1)
nsubj(use-3, we-2)
advcl(disband-10, use-3)
dobj(use-3, this-4)
det(criteria-7, a-6)
prep_as(this-4, criteria-7)
nsubj(disband-10, we-8)
aux(disband-10, should-9)
root(ROOT-0, disband-10)
det(military-12, the-11)
dobj(disband-10, military-12)
advmod(disband-10, too-13)

(ROOT
  (S
    (NP (JJ Many) (JJ other) (NNS countries))
    (VP (VBP have)
      (NP (DT a) (JJ bad) (NN military)))
    (. .)))

amod(countries-3, Many-1)
amod(countries-3, other-2)
nsubj(have-4, countries-3)
root(ROOT-0, have-4)
det(military-7, a-5)
amod(military-7, bad-6)
dobj(have-4, military-7)

(ROOT
  (S
    (ADVP (RB Clearly))
    (NP (DT that))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD should) (RB n't)
            (VP (VB have)
              (NP (CD one)))))))
    (. .)))

advmod(means-3, Clearly-1)
nsubj(means-3, that-2)
root(ROOT-0, means-3)
nsubj(have-7, we-4)
aux(have-7, should-5)
neg(have-7, n't-6)
ccomp(means-3, have-7)
dobj(have-7, one-8)

(ROOT
  (S
    (NP
      (NP (NNS Lots))
      (PP (IN of)
        (NP (NNS countries))))
    (VP (VBP have)
      (NP
        (NP
          (NP (JJ bad) (NN water) (NN treatment))
          (ADJP (RB too) (RB so) (JJ let))
          (POS 's))
        (NN stop)
        (S
          (VP (VBG doing)
            (NP (DT that))))))
    (. .)))

nsubj(have-4, Lots-1)
prep_of(Lots-1, countries-3)
root(ROOT-0, have-4)
amod(treatment-7, bad-5)
nn(treatment-7, water-6)
poss(stop-12, treatment-7)
advmod(let-10, too-8)
advmod(let-10, so-9)
amod(treatment-7, let-10)
dobj(have-4, stop-12)
dep(stop-12, doing-13)
dobj(doing-13, that-14)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (ADJP (RB really)
      (S
        (VP (VBG telling)
          (NP (PRP me))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP do) (RB n't)
                (VP (VB think)
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP (MD can)
                        (VP
                          (VP (VB learn)
                            (PP (IN from)
                              (NP (JJ other) (NNS countries) (NNS mistakes))))
                          (CC and)
                          (VP (VB improve)
                            (PP (IN on)
                              (NP (PRP$ their) (NN system)))))))))))))))
    (. .)))

cop(really-3, Are-1)
nsubj(really-3, you-2)
root(ROOT-0, really-3)
dep(really-3, telling-4)
dobj(telling-4, me-5)
complm(think-10, that-6)
nsubj(think-10, you-7)
aux(think-10, do-8)
neg(think-10, n't-9)
ccomp(telling-4, think-10)
complm(learn-14, that-11)
nsubj(learn-14, we-12)
nsubj(improve-20, we-12)
aux(learn-14, can-13)
ccomp(think-10, learn-14)
amod(mistakes-18, other-16)
nn(mistakes-18, countries-17)
prep_from(learn-14, mistakes-18)
ccomp(think-10, improve-20)
conj_and(learn-14, improve-20)
poss(system-23, their-22)
prep_on(improve-20, system-23)

(ROOT
  (S
    (PP (IN Are)
      (S
        (NP (PRP you))
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP me))))))))
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD can)
              (VP (VB do)
                (NP (NN something))
                (ADVP (RBR better))
                (PP (IN than)
                  (NP
                    (NP (DT the) (NNPS Canadians))
                    (CC and)
                    (NP (DT the) (JJ French))))))))))
    (. ?)))

nsubj(trying-3, you-2)
xsubj(tell-5, you-2)
prepc_are(think-10, trying-3)
aux(tell-5, to-4)
xcomp(trying-3, tell-5)
dobj(tell-5, me-6)
nsubj(think-10, you-7)
aux(think-10, do-8)
neg(think-10, n't-9)
root(ROOT-0, think-10)
nsubj(do-13, we-11)
aux(do-13, can-12)
ccomp(think-10, do-13)
dobj(do-13, something-14)
advmod(do-13, better-15)
det(Canadians-18, the-17)
prep_than(do-13, Canadians-18)
det(French-21, the-20)
prep_than(do-13, French-21)
conj_and(Canadians-18, French-21)

