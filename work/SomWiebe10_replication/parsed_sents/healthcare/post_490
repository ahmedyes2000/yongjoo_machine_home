(ROOT
  (NP (NNP #originalTopic) (NNP =) (NNP So_you_still_want_Nationalized_Health_Care)))

nn(So_you_still_want_Nationalized_Health_Care-3, #originalTopic-1)
nn(So_you_still_want_Nationalized_Health_Care-3, =-2)
root(ROOT-0, So_you_still_want_Nationalized_Health_Care-3)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (NP (DT a) (JJ former) (NN soldier))))
    (, ,)
    (CC but)
    (S
      (NP (NNP let) (POS 's))
      (ADVP (RB just))
      (VP (VBP say)
        (PP (IN for)
          (NP (DT a) (NN second)))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBD was) (RB n't))))))
    (. .)))

nsubj(soldier-5, I-1)
cop(soldier-5, am-2)
det(soldier-5, a-3)
amod(soldier-5, former-4)
root(ROOT-0, soldier-5)
nsubj(say-11, let-8)
possessive(let-8, 's-9)
advmod(say-11, just-10)
conj_but(soldier-5, say-11)
det(second-14, a-13)
prep_for(say-11, second-14)
complm(was-17, that-15)
nsubj(was-17, I-16)
ccomp(say-11, was-17)
neg(was-17, n't-18)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP
              (VP (VBN been)
                (VP (VBG working)
                  (PP (IN for)
                    (NP
                      (NP (DT a) (NN company))
                      (PP (IN for)
                        (NP (DT the) (JJ past) (CD 12) (NNS years)))))))
              (CC and)
              (VP (VBN got)
                (S
                  (VP (VBN laid)
                    (PRT (RP off))
                    (SBAR (IN because)
                      (S
                        (PP (IN of)
                          (NP (DT this) (NN recession)))
                        (NP (PRP we))
                        (VP (VBP are)
                          (PP (IN in)))))))))))))
    (. .)))

nsubj(say-3, Let-1)
possessive(Let-1, 's-2)
root(ROOT-0, say-3)
nsubj(working-7, I-4)
nsubj(got-17, I-4)
aux(working-7, have-5)
aux(working-7, been-6)
ccomp(say-3, working-7)
det(company-10, a-9)
prep_for(working-7, company-10)
det(years-15, the-12)
amod(years-15, past-13)
num(years-15, 12-14)
prep_for(company-10, years-15)
ccomp(say-3, got-17)
conj_and(working-7, got-17)
dep(got-17, laid-18)
prt(laid-18, off-19)
mark(are-25, because-20)
det(recession-23, this-22)
prep_of(are-25, recession-23)
nsubj(are-25, we-24)
advcl(laid-18, are-25)
prep(are-25, in-26)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (VP (VBG working))))
    (, ,)
    (CC but)
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB get)
        (NP (DT the) (`` ``) (JJ free) (NN money) ('' ''))
        (SBAR
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP refer)
                (PP (TO to)))))
          (CC or)
          (SBAR
            (SINV (MD should)
              (NP (PRP I))
              (VP (VB go)
                (PP (IN without)
                  (SBAR (IN because)
                    (S
                      (PP (IN of)
                        (NP (DT the) (NN turn)))
                      (NP (PRP$ our) (NN economy))
                      (VP (VBZ has)
                        (VP (VBN taken)))))))))))
      (. ?))))

advmod(working-5, Now-1)
nsubj(working-5, I-2)
aux(working-5, 'm-3)
neg(working-5, not-4)
root(ROOT-0, working-5)
aux(get-10, should-8)
nsubj(get-10, I-9)
conj_but(working-5, get-10)
det(money-14, the-11)
amod(money-14, free-13)
dobj(get-10, money-14)
nsubj(refer-17, you-16)
dep(get-10, refer-17)
prep(refer-17, to-18)
aux(go-22, should-20)
nsubj(go-22, I-21)
dep(get-10, go-22)
conj_or(refer-17, go-22)
mark(taken-31, because-24)
det(turn-27, the-26)
prep_of(taken-31, turn-27)
poss(economy-29, our-28)
nsubj(taken-31, economy-29)
aux(taken-31, has-30)
prepc_without(go-22, taken-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ aware)
                (PP (IN of)
                  (NP (DT the) (JJ current) (NN unemployment) (NNS rates)))))))))
    (. .)))

nsubj(sure-3, I-1)
cop(sure-3, 'm-2)
root(ROOT-0, sure-3)
nsubj(aware-6, you-4)
cop(aware-6, are-5)
dep(sure-3, aware-6)
det(rates-11, the-8)
amod(rates-11, current-9)
nn(rates-11, unemployment-10)
prep_of(aware-6, rates-11)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS thousands))
        (PP (IN of)
          (NP
            (NP (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP are) (RB not)
                  (VP (VBG working)
                    (PP (IN from)
                      (NP
                        (NP (DT no) (NN fault))
                        (PP (IN of)
                          (NP (PRP$ their) (JJ own)))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, thousands-3)
prep_of(thousands-3, people-5)
nsubj(working-9, people-5)
aux(working-9, are-7)
neg(working-9, not-8)
rcmod(people-5, working-9)
det(fault-12, no-11)
prep_from(working-9, fault-12)
poss(own-15, their-14)
prep_of(fault-12, own-15)

(ROOT
  (SQ (CC Or)
    (MD should)
    (NP (PRP it))
    (ADVP (RB just))
    (VP (VB be)
      (NP
        (NP (DT the) (NN homeless))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP are)
              (VP (VBN denied)))))))
    (. .)))

cc(homeless-7, Or-1)
aux(homeless-7, should-2)
nsubj(homeless-7, it-3)
advmod(homeless-7, just-4)
cop(homeless-7, be-5)
det(homeless-7, the-6)
root(ROOT-0, homeless-7)
nsubjpass(denied-10, homeless-7)
auxpass(denied-10, are-9)
rcmod(homeless-7, denied-10)

(ROOT
  (SBARQ (RB Exactly)
    (WHNP (WP who))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG referring)
        (PP (TO to)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP do) (RB n't)
                (VP (VB want)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (NP (NN healthcare) (NN sir))))))))))))
    (. ?)))

advmod(referring-5, Exactly-1)
dobj(referring-5, who-2)
aux(referring-5, are-3)
nsubj(referring-5, you-4)
root(ROOT-0, referring-5)
complm(want-11, that-7)
nsubj(want-11, you-8)
xsubj(have-13, you-8)
aux(want-11, do-9)
neg(want-11, n't-10)
prepc_to(referring-5, want-11)
aux(have-13, to-12)
xcomp(want-11, have-13)
nn(sir-15, healthcare-14)
dobj(have-13, sir-15)

