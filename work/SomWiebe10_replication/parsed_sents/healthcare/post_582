(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP mean)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB have)
                (NP (NN insurance))))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN hospital))
                    (PP (IN for)
                      (NP
                        (NP (DT any) (NN type))
                        (PP (IN of)
                          (NP (NN surgery)))))))
                (CC or)
                (PP (JJR more) (IN than)
                  (NP
                    (NP (DT a) (`` ``) (NN doctor) (NN visitation) ('' ''))
                    (SBAR
                      (S
                        (NP (DT the) (NN cost))
                        (ADVP (RB really))
                        (VP (VBZ hurts)
                          (NP
                            (NP (DT those))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBP do) (RB not)
                                  (VP (VB have)
                                    (NP
                                      (NP (DT a) (NN lot))
                                      (PP (IN of)
                                        (NP (NN money))))))))))))))))))))
    (. .)))

nsubj(mean-2, I-1)
root(ROOT-0, mean-2)
advmod(have-7, when-3)
nsubj(have-7, you-4)
aux(have-7, do-5)
neg(have-7, n't-6)
advcl(mean-2, have-7)
dobj(have-7, insurance-8)
nsubj(have-11, you-10)
xsubj(go-13, you-10)
conj_and(mean-2, have-11)
aux(go-13, to-12)
xcomp(have-11, go-13)
xcomp(have-11, go-13')
conj_or(go-13, go-13')
det(hospital-16, the-15)
prep_to(go-13, hospital-16)
det(type-19, any-18)
prep_for(hospital-16, type-19)
prep_of(type-19, surgery-21)
dep(go-13, more-23)
det(visitation-28, a-25)
nn(visitation-28, doctor-27)
prep_than(go-13', visitation-28)
det(cost-31, the-30)
nsubj(hurts-33, cost-31)
advmod(hurts-33, really-32)
rcmod(visitation-28, hurts-33)
dobj(hurts-33, those-34)
nsubj(have-38, those-34)
aux(have-38, do-36)
neg(have-38, not-37)
rcmod(those-34, have-38)
det(lot-40, a-39)
dobj(have-38, lot-40)
prep_of(lot-40, money-42)

(ROOT
  (S
    (S
      (NP (PRP They))
      (ADVP (RB then))
      (VP
        (ADVP (RB either))
        (VBP spend)
        (NP
          (NP (NNS years))
          (VP (VBG struggling)
            (S
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (NP (PRP it))
                      (PRT (RP off)))))))))))
    (CC or)
    (S
      (NP (PRP they))
      (ADVP (RB just))
      (VP (MD ca) (RB n't)
        (VP (VB pay)
          (S
            (NP (PRP it)
              (CC and)
              (PRP it))
            (VP (VBG ruins)
              (NP (PRP$ their) (NN credit))
              (X (NN etc.)))))))
    (. .)))

nsubj(spend-4, They-1)
advmod(spend-4, then-2)
advmod(spend-4, either-3)
root(ROOT-0, spend-4)
dobj(spend-4, years-5)
partmod(years-5, struggling-6)
xcomp(struggling-6, trying-7)
aux(pay-9, to-8)
xcomp(trying-7, pay-9)
dobj(pay-9, it-10)
prt(pay-9, off-11)
nsubj(pay-17, they-13)
advmod(pay-17, just-14)
aux(pay-17, ca-15)
neg(pay-17, n't-16)
conj_or(spend-4, pay-17)
nsubj(ruins-21, it-18)
conj_and(it-18, it-20)
nsubj(ruins-21, it-20)
dep(pay-17, ruins-21)
poss(credit-23, their-22)
dobj(ruins-21, credit-23)
dep(ruins-21, etc.-24)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB pay)
          (NP (NN insurance))
          (PP (IN by)
            (NP (PRP yourself))))))
    (VP (VBZ costs)
      (NP
        (NP
          (QP (RB around) ($ $) (CD 300)))
        (NP (DT a) (NN month))))
    (. .)))

prep_for(costs-9, example-2)
aux(pay-5, to-4)
csubj(costs-9, pay-5)
dobj(pay-5, insurance-6)
prep_by(pay-5, yourself-8)
root(ROOT-0, costs-9)
quantmod($-11, around-10)
dobj(costs-9, $-11)
number($-11, 300-12)
det(month-14, a-13)
dep($-11, month-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (RB very)
        (SBAR
          (S
            (VP (VBD said))))))
    (. .)))

nsubj(very-3, It-1)
cop(very-3, 's-2)
root(ROOT-0, very-3)
dep(very-3, said-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB speak)
        (PP
          (PP (IN with)
            (NP (NNS teens)))
          (CC and)
          (PP (IN over)
            (NP (CD 50) (NN %)))
          (SBAR
            (S
              (ADVP (RB already))
              (VP (VBD had)
                (NP
                  (NP (NNS kids))
                  (PP (IN at)
                    (NP (CD 17)
                      (CC and)
                      (CD 18))))))))))
    (. .)))

nsubj(speak-3, I-1)
nsubj(speak-3', I-1)
aux(speak-3, would-2)
root(ROOT-0, speak-3)
conj_and(speak-3, speak-3')
prep_with(speak-3, teens-5)
num(%-9, 50-8)
prep_over(speak-3', %-9)
advmod(had-11, already-10)
dep(speak-3, had-11)
dobj(had-11, kids-12)
prep_at(kids-12, 17-14)
prep_at(kids-12, 18-16)
conj_and(17-14, 18-16)

(ROOT
  (VP
    (PRN (-LRB- -LRB-)
      (S
        (NP (PRP they))
        (VP (VBD were)
          (ADVP (RB already))
          (ADJP
            (NP
              (QP (CD 1) (TO to) (CD 2))
              (NNS years))
            (JJ old))))
      (-RRB- -RRB-))
    (VB Say)
    (NP (WP what))
    (NP
      (NP (PRP you) (NN will))
      (FRAG (CC but)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ front) (NNS lines))
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (NP (DT a) (JJ different) (NN story))))))))))
        (. .)))))

nsubj(old-9, they-2)
cop(old-9, were-3)
advmod(old-9, already-4)
number(2-7, 1-5)
dep(2-7, to-6)
num(years-8, 2-7)
npadvmod(old-9, years-8)
parataxis(Say-11, old-9)
root(ROOT-0, Say-11)
iobj(Say-11, what-12)
dep(will-14, you-13)
dobj(Say-11, will-14)
dep('re-18, but-15)
advmod('re-18, when-16)
nsubj('re-18, you-17)
dep(will-14, 're-18)
det(lines-22, the-20)
amod(lines-22, front-21)
prep_in('re-18, lines-22)
nsubj(story-27, it-23)
cop(story-27, 's-24)
det(story-27, a-25)
amod(story-27, different-26)
rcmod(lines-22, story-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP
              (NP (JJ many))
              (PP (IN on)
                (NP (DT this) (JJ create) (NN debate) (NN website))))
            (VP (VBP have) (RB n't)
              (VP (VBN lived)
                (PP (IN without)
                  (NP
                    (NP (DT the) (NNS pleasantries))
                    (PP (IN of)
                      (NP (NN life)))))))))))
    (. .)))

nsubj(sure-3, I-1)
cop(sure-3, 'm-2)
root(ROOT-0, sure-3)
nsubj(lived-12, many-4)
det(website-9, this-6)
amod(website-9, create-7)
nn(website-9, debate-8)
prep_on(many-4, website-9)
aux(lived-12, have-10)
neg(lived-12, n't-11)
dep(sure-3, lived-12)
det(pleasantries-15, the-14)
prep_without(lived-12, pleasantries-15)
prep_of(pleasantries-15, life-17)

(ROOT
  (S
    (NP
      (NP (JJ Huge) (NN assumption))
      (PP (CC but)
        (NP (PRP you))))
    (VP (MD can)
      (VP (VB tell)
        (PP (IN by)
          (NP (DT the) (NN way) (NNS people)))
        (S
          (VP (VB present)
            (NP (PRP$ their) (NNS cases))))))
    (. .)))

amod(assumption-2, Huge-1)
nsubj(tell-6, assumption-2)
prep(assumption-2, but-3)
dep(but-3, you-4)
aux(tell-6, can-5)
root(ROOT-0, tell-6)
det(people-10, the-8)
nn(people-10, way-9)
prep_by(tell-6, people-10)
ccomp(tell-6, present-11)
poss(cases-13, their-12)
dobj(present-11, cases-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP
        (VP (VBN been)
          (PP (IN on)
            (NP (DT both) (NNS sides))))
        (, ,)
        (VP (VBN lived)
          (PP (IN with)
            (NP (NN luxury))))
        (CC and)
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN forced)
                  (S
                    (VP (TO to)
                      (VP (VB live)
                        (PP (IN without)
                          (NP (PRP it)))))))))))))
    (. .)))

nsubj(been-3, I-1)
nsubj(lived-8, I-1)
nsubj(had-12, I-1)
xsubj(forced-15, I-1)
aux(been-3, 've-2)
root(ROOT-0, been-3)
det(sides-6, both-5)
prep_on(been-3, sides-6)
conj_and(been-3, lived-8)
prep_with(lived-8, luxury-10)
conj_and(been-3, had-12)
aux(forced-15, to-13)
auxpass(forced-15, be-14)
xcomp(had-12, forced-15)
aux(live-17, to-16)
xcomp(forced-15, live-17)
prep_without(live-17, it-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (NP (DT no) (NN authority))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN seen)
          (ADJP (JJ enough)
            (S
              (VP (TO to)
                (VP (VB say)
                  (SBAR
                    (S
                      (NP (JJ universal))
                      (VP (VBZ is)
                        (NP
                          (NP (DT the) (NN way))
                          (SBAR
                            (S
                              (NP (DT this) (NN country))
                              (VP
                                (VP (MD will)
                                  (VP (VB go)))
                                (CC and)
                                (VP (MD should)
                                  (VP (VB go)))))))))))))))))
    (. .)))

nsubj(authority-4, I-1)
cop(authority-4, 'm-2)
det(authority-4, no-3)
root(ROOT-0, authority-4)
nsubj(seen-8, I-6)
aux(seen-8, 've-7)
conj_but(authority-4, seen-8)
acomp(seen-8, enough-9)
aux(say-11, to-10)
xcomp(enough-9, say-11)
nsubj(way-15, universal-12)
cop(way-15, is-13)
det(way-15, the-14)
ccomp(say-11, way-15)
dobj(go-19, way-15)
det(country-17, this-16)
nsubj(go-19, country-17)
nsubj(go-22, country-17)
aux(go-19, will-18)
rcmod(way-15, go-19)
aux(go-22, should-21)
rcmod(way-15, go-22)
conj_and(go-19, go-22)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (ADVP (RB also))
        (VP (VBN lived)
          (PRT (RP over))
          (PP (IN in)
            (NP (NNP Spain))))))
    (CC and)
    (S
      (NP (PRP$ their) (NN health) (NN care))
      (VP (VBZ is)
        (ADJP (RB very) (JJ good))))
    (. .)))

nsubj(lived-4, I-1)
aux(lived-4, 've-2)
advmod(lived-4, also-3)
root(ROOT-0, lived-4)
prt(lived-4, over-5)
prep_in(lived-4, Spain-7)
poss(care-11, their-9)
nn(care-11, health-10)
nsubj(good-14, care-11)
cop(good-14, is-12)
advmod(good-14, very-13)
conj_and(lived-4, good-14)

(ROOT
  (S
    (LST (-LRB- -LRB-) (NN universal) (-RRB- -RRB-))
    (NP (PRP I))
    (VP (MD 'd)
      (ADVP (RB also))
      (VP (VB be)
        (ADJP (JJ curious)
          (S
            (VP (TO to)
              (VP
                (VP (VB hear)
                  (NP (DT the) (NNS opinions))
                  (PP (IN from)
                    (NP
                      (NP (NNS people))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP live)
                            (PP (IN on)
                              (NP (PRP$ their) (JJ own)))))))))
                (CC or)
                (VP
                  (VP (VB pay)
                    (PP (IN for)
                      (NP (PDT all) (PRP$ their) (NN lifestyle))))
                  (CC and)
                  (VP (VB see)
                    (NP (PRP$ their) (NN background))))))))))
    (. .)))

dep(curious-8, universal-2)
nsubj(curious-8, I-4)
aux(curious-8, 'd-5)
advmod(curious-8, also-6)
cop(curious-8, be-7)
root(ROOT-0, curious-8)
aux(hear-10, to-9)
xcomp(curious-8, hear-10)
det(opinions-12, the-11)
dobj(hear-10, opinions-12)
prep_from(hear-10, people-14)
nsubj(live-16, people-14)
rcmod(people-14, live-16)
poss(own-19, their-18)
prep_on(live-16, own-19)
xcomp(curious-8, pay-21)
conj_or(hear-10, pay-21)
predet(lifestyle-25, all-23)
poss(lifestyle-25, their-24)
prep_for(pay-21, lifestyle-25)
conj_or(hear-10, see-27)
conj_and(pay-21, see-27)
poss(background-29, their-28)
dobj(see-27, background-29)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT that))
    (VP (VBZ 's)
      (PP (IN for)
        (NP (CD one) (NN person))))
    (. .)))

advmod('s-3, Now-1)
nsubj('s-3, that-2)
root(ROOT-0, 's-3)
num(person-6, one-5)
prep_for('s-3, person-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NN reason))
      (SBAR
        (S
          (NP (DT no) (NN one))
          (VP (VBZ is)
            (VP (VBG rolling)
              (PP (IN over)
                (ADJP (JJ dead))))))))
    (VP (VBZ is)
      (SBAR (IN because)
        (S
          (S
            (NP (RB most) (JJR higher) (NN level) (NNS jobs))
            (VP (VBP include)
              (NP (NN insurance))))
          (CC and)
          (S
            (NP (PRP they))
            (VP (VBP cover)
              (NP
                (NP (DT a) (JJ little)
                  (QP (JJR more) (IN than) (PDT half)))
                (PP (IN of)
                  (NP (DT that) (NN cost)))))))))
    (. .)))

det(reason-2, The-1)
dobj(rolling-6, reason-2)
nsubj(is-9, reason-2)
det(one-4, no-3)
nsubj(rolling-6, one-4)
aux(rolling-6, is-5)
rcmod(reason-2, rolling-6)
prep_over(rolling-6, dead-8)
root(ROOT-0, is-9)
mark(include-15, because-10)
advmod(jobs-14, most-11)
amod(jobs-14, higher-12)
nn(jobs-14, level-13)
nsubj(include-15, jobs-14)
advcl(is-9, include-15)
dobj(include-15, insurance-16)
nsubj(cover-19, they-18)
advcl(is-9, cover-19)
conj_and(include-15, cover-19)
det(half-24, a-20)
amod(half-24, little-21)
quantmod(half-24, more-22)
quantmod(half-24, than-23)
dobj(cover-19, half-24)
det(cost-27, that-26)
prep_of(half-24, cost-27)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP you))
          (VP
            (VP (VBP do) (RB n't)
              (VP (VB have)
                (NP (DT the) (JJS best) (NN job))))
            (CC and)
            (VP (VBP are) (RB n't)
              (VP (VBG getting)
                (NP (NN insurance))))))))
    (. .)))

nsubj(say-3, Let-1)
possessive(Let-1, 's-2)
root(ROOT-0, say-3)
nsubj(have-7, you-4)
nsubj(getting-14, you-4)
aux(have-7, do-5)
neg(have-7, n't-6)
ccomp(say-3, have-7)
det(job-10, the-8)
amod(job-10, best-9)
dobj(have-7, job-10)
aux(getting-14, are-12)
neg(getting-14, n't-13)
ccomp(say-3, getting-14)
conj_and(have-7, getting-14)
dobj(getting-14, insurance-15)

(ROOT
  (S
    (VP (VB Add)
      (PP (IN in)
        (NP (NN rent) (, ,) (NN food) (, ,) (NN transportation) (, ,) (NNS bills) (, ,) (FW etc.)))
      (. .))
    (. .)))

root(ROOT-0, Add-1)
nn(bills-9, rent-3)
dep(bills-9, food-5)
dep(bills-9, transportation-7)
prep_in(Add-1, bills-9)
dep(bills-9, etc.-11)

(ROOT
  (SBARQ
    (WHADJP (WRB How) (JJ long))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB take)
                (S
                  (NP (PRP you))
                  (VP (TO to)
                    (VP (VB pay)
                      (NP (DT a) (NN surgery))
                      (SBAR (IN if)
                        (S
                          (NP (DT this))
                          (VP (VBD were)
                            (S
                              (VP (TO to)
                                (VP (VB happen))))))))))))))))
    (. ?)))

advmod(long-2, How-1)
dep(think-5, long-2)
aux(think-5, do-3)
nsubj(think-5, you-4)
root(ROOT-0, think-5)
nsubj(take-8, it-6)
aux(take-8, would-7)
ccomp(think-5, take-8)
nsubj(pay-11, you-9)
aux(pay-11, to-10)
xcomp(take-8, pay-11)
det(surgery-13, a-12)
dobj(pay-11, surgery-13)
mark(were-16, if-14)
nsubj(were-16, this-15)
xsubj(happen-18, this-15)
advcl(pay-11, were-16)
aux(happen-18, to-17)
xcomp(were-16, happen-18)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD would)
      (NP (PRP you))
      (ADVP (RB ever))
      (VP (VB get)
        (ADVP (RB ahead))))
    (. ?)))

advmod(get-5, How-1)
aux(get-5, would-2)
nsubj(get-5, you-3)
advmod(get-5, ever-4)
root(ROOT-0, get-5)
advmod(get-5, ahead-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD struggled)
        (PP (IN with)
          (NP (JJ underprivileged) (NNS students)))
        (PP (IN for)
          (PP (IN over)
            (NP (DT a) (NN year))))))
    (CC and)
    (S
      (NP (DT this))
      (VP (VBD was)
        (NP
          (NP (NN something))
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD would)
                (VP (VB hear))))))))
    (. .)))

nsubj(struggled-2, I-1)
root(ROOT-0, struggled-2)
amod(students-5, underprivileged-4)
prep_with(struggled-2, students-5)
prep(struggled-2, for-6)
pcomp(for-6, over-7)
det(year-9, a-8)
prep_over(for-6, year-9)
nsubj(something-13, this-11)
cop(something-13, was-12)
conj_and(struggled-2, something-13)
dobj(hear-16, something-13)
nsubj(hear-16, I-14)
aux(hear-16, would-15)
rcmod(something-13, hear-16)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD would)
        (ADVP (RB always))
        (VP (VB baffle)
          (NP (PRP me))
          (ADVP (RB as)
            (PP (TO to)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (PRP they))
                  (VP (MD could) (RB n't)
                    (VP (VB get)
                      (PRT (RP out))
                      (PP (IN of)
                        (NP (DT the) (NN situation))))))))))))
    (CC but)
    (S
      (NP (PRP it))
      (ADVP (RB really))
      (VP (VBZ is)
        (ADJP (JJ cyclical))))
    (. .)))

nsubj(baffle-4, It-1)
aux(baffle-4, would-2)
advmod(baffle-4, always-3)
root(ROOT-0, baffle-4)
dobj(baffle-4, me-5)
advmod(get-12, how-8)
nsubj(get-12, they-9)
aux(get-12, could-10)
neg(get-12, n't-11)
prepc_as_to(baffle-4, get-12)
det(situation-16, the-15)
prep_out_of(get-12, situation-16)
nsubj(cyclical-21, it-18)
advmod(cyclical-21, really-19)
cop(cyclical-21, is-20)
conj_but(baffle-4, cyclical-21)

