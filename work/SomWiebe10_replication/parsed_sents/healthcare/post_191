(ROOT
  (S
    (NP (NNS Governments))
    (VP (MD might)
      (VP (VB attempt)
        (S
          (VP (TO to)
            (VP (VB control)
              (NP (NNS costs))
              (PP (IN by)
                (S
                  (VP (VBG gaining)
                    (CC or)
                    (VBG enforcing)
                    (NP (JJ monopsony) (NN power))))))))))
    (. .)))

nsubj(attempt-3, Governments-1)
xsubj(control-5, Governments-1)
aux(attempt-3, might-2)
root(ROOT-0, attempt-3)
aux(control-5, to-4)
xcomp(attempt-3, control-5)
dobj(control-5, costs-6)
prepc_by(control-5, gaining-8)
prepc_by(control-5, enforcing-10)
conj_or(gaining-8, enforcing-10)
amod(power-12, monopsony-11)
dobj(gaining-8, power-12)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP
      (NP (NNS governments))
      (, ,)
      (PP (JJ such) (IN as)
        (NP (NNP Canada)))
      (, ,))
    (VP (VBP have)
      (VP (VBN outlawed)
        (NP (JJ medical) (NN care))
        (SBAR (IN if)
          (S
            (NP (DT the) (NN service))
            (VP (VBZ is)
              (VP (VBN paid)
                (PP (IN for)
                  (PP (IN by)
                    (NP (JJ private) (JJ individual) (NNS funds))))))))))
    (. .)))

prep_for(outlawed-11, example-2)
nsubj(outlawed-11, governments-4)
prep_such_as(governments-4, Canada-8)
aux(outlawed-11, have-10)
root(ROOT-0, outlawed-11)
amod(care-13, medical-12)
dobj(outlawed-11, care-13)
mark(paid-18, if-14)
det(service-16, the-15)
nsubjpass(paid-18, service-16)
auxpass(paid-18, is-17)
advcl(outlawed-11, paid-18)
prep(paid-18, for-19)
pcomp(for-19, by-20)
amod(funds-23, private-21)
amod(funds-23, individual-22)
prep_by(for-19, funds-23)

