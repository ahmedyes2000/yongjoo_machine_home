(ROOT
  (S
    (NP
      (NP (NN Competition))
      (PP (IN in)
        (NP (NN health) (NN care))))
    (VP (VBZ is)
      (ADVP (RB generally))
      (NP
        (NP (DT a) (JJ bad) (NN idea))
        (SBAR
          (S
            (SBAR (IN While)
              (S
                (NP (NN competition))
                (VP (MD can)
                  (VP (VB make)
                    (NP (NN sense))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP it))
                        (VP (VBZ relates)
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN production))
                              (PP (IN of)
                                (NP (NNS goods))))))))))))
            (, ,)
            (NP (PRP it))
            (VP (VBZ is) (RB not)
              (ADJP (JJ good))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP it))
                  (VP (VBZ relates)
                    (PP (TO to)
                      (S
                        (VP (VBG dealing)
                          (PP (IN with)
                            (NP (JJ human) (NN life))))))))))))))
    (. .)))

nsubj(idea-9, Competition-1)
nn(care-4, health-3)
prep_in(Competition-1, care-4)
cop(idea-9, is-5)
advmod(idea-9, generally-6)
det(idea-9, a-7)
amod(idea-9, bad-8)
root(ROOT-0, idea-9)
mark(make-13, While-10)
nsubj(make-13, competition-11)
aux(make-13, can-12)
advcl(good-27, make-13)
dobj(make-13, sense-14)
advmod(relates-17, when-15)
nsubj(relates-17, it-16)
advcl(make-13, relates-17)
det(production-20, the-19)
prep_to(relates-17, production-20)
prep_of(production-20, goods-22)
nsubj(good-27, it-24)
cop(good-27, is-25)
neg(good-27, not-26)
rcmod(idea-9, good-27)
advmod(relates-30, when-28)
nsubj(relates-30, it-29)
advcl(good-27, relates-30)
prepc_to(relates-30, dealing-32)
amod(life-35, human-34)
prep_with(dealing-32, life-35)

(ROOT
  (S
    (NP (DT The) (JJ main) (NN problem))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT a) (JJ primary) (NN means))
            (PP (IN of)
              (NP (`` ``) (NN cost-cutting) ('' ''))))
          (VP (VBZ is)
            (PP (IN by)
              (S
                (VP (VBG skimping)
                  (PP (IN on)
                    (NP (NNS services)))
                  (PP (TO to)
                    (NP
                      (NP (NNS people))
                      (PP (IN in)
                        (NP (NN need))))))))))))
    (. .)))

det(problem-3, The-1)
amod(problem-3, main-2)
nsubj(is-4, problem-3)
root(ROOT-0, is-4)
complm(is-13, that-5)
det(means-8, a-6)
amod(means-8, primary-7)
nsubj(is-13, means-8)
prep_of(means-8, cost-cutting-11)
ccomp(is-4, is-13)
prepc_by(is-13, skimping-15)
prep_on(skimping-15, services-17)
prep_to(skimping-15, people-19)
prep_in(people-19, need-21)

