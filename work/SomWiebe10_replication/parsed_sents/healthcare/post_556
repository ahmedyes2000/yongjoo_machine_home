(ROOT
  (S
    (NP (NNP Government))
    (VP (VBZ is)
      (NP
        (NP (DT a) (CD zero) (NN sum) (NN game))
        (PRN (-LRB- -LRB-)
          (PP (IN in)
            (NP (DT some) (NNS respects)))
          (-RRB- -RRB-))))
    (. .)))

nsubj(game-6, Government-1)
cop(game-6, is-2)
det(game-6, a-3)
num(game-6, zero-4)
nn(game-6, sum-5)
root(ROOT-0, game-6)
dep(game-6, in-8)
det(respects-10, some-9)
pobj(in-8, respects-10)

(ROOT
  (S (IN So) (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NN government))
        (VP (VBZ gives)
          (NP (NNS people))
          (NP
            (NP (NN health) (NN care))
            (, ,)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ does))))))))
    (NP (DT the) (NN government))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB take)))))
    (. ?)))

dep(have-15, So-1)
mark(gives-6, if-3)
det(government-5, the-4)
nsubj(gives-6, government-5)
dep(have-15, gives-6)
iobj(gives-6, people-7)
nn(care-9, health-8)
dobj(gives-6, care-9)
nsubj(does-12, care-9)
rcmod(care-9, does-12)
det(government-14, the-13)
nsubj(have-15, government-14)
xsubj(take-17, government-14)
root(ROOT-0, have-15)
aux(take-17, to-16)
xcomp(have-15, take-17)

(ROOT
  (S
    (NP (DT The) (NN point))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT a) (JJ huge) (NN tradeoff))
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP allow)
                  (S
                    (NP (DT the) (NN government))
                    (VP (TO to)
                      (VP (VB take)
                        (PRT (RP over))
                        (NP (PRP$ your) (NN health) (NN care))))))))))))
    (. .)))

det(point-2, The-1)
nsubj(is-3, point-2)
root(ROOT-0, is-3)
expl(is-6, there-5)
ccomp(is-3, is-6)
det(tradeoff-9, a-7)
amod(tradeoff-9, huge-8)
nsubj(is-6, tradeoff-9)
mark(allow-12, if-10)
nsubj(allow-12, you-11)
advcl(is-6, allow-12)
det(government-14, the-13)
nsubj(take-16, government-14)
aux(take-16, to-15)
xcomp(allow-12, take-16)
prt(take-16, over-17)
poss(care-20, your-18)
nn(care-20, health-19)
dobj(take-16, care-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (PRP$ your) (NN health) (NN care))
      (, ,)
      (S
        (VP (VB do) (RB n't)
          (VP (VB let)
            (S
              (NP (DT a) (NN bureaucrat))
              (VP (VB decide)
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (MD should)
                      (CC or)
                      (MD should) (RB n't)
                      (VP (VB have)
                        (NP (NN access))
                        (PP (TO to)
                          (NP (PRP it)))))))))))))
    (. .)))

nsubj(care-5, It-1)
cop(care-5, is-2)
poss(care-5, your-3)
nn(care-5, health-4)
root(ROOT-0, care-5)
aux(let-9, do-7)
neg(let-9, n't-8)
dep(care-5, let-9)
det(bureaucrat-11, a-10)
nsubj(decide-12, bureaucrat-11)
ccomp(let-9, decide-12)
mark(have-19, if-13)
nsubj(have-19, you-14)
aux(have-19, should-15)
advcl(decide-12, should-17)
aux(have-19, should-17)
conj_or(have-19, should-17)
neg(have-19, n't-18)
advcl(decide-12, have-19)
dobj(have-19, access-20)
prep_to(have-19, it-22)

(ROOT
  (S
    (PP (IN For)
      (NP (CD one)))
    (, ,)
    (NP (PRP they))
    (VP (VBP take)
      (NP (NN money)))
    (. .)))

prep_for(take-5, one-2)
nsubj(take-5, they-4)
root(ROOT-0, take-5)
dobj(take-5, money-6)

(ROOT
  (S
    (NP
      (NP (RB Much) (JJR more) (NN money))
      (PP (IN than)
        (NP (JJ private) (NN health))))
    (VP (VBP care)
      (SBAR (IN if)
        (S
          (NP (PRP they))
          (VP (VBP provide)
            (NP
              (NP (DT the) (JJ same) (NN level))
              (PP (IN of)
                (NP (NN care))))))))
    (. .)))

advmod(money-3, Much-1)
amod(money-3, more-2)
nsubj(care-7, money-3)
amod(health-6, private-5)
prep_than(money-3, health-6)
root(ROOT-0, care-7)
mark(provide-10, if-8)
nsubj(provide-10, they-9)
advcl(care-7, provide-10)
det(level-13, the-11)
amod(level-13, same-12)
dobj(provide-10, level-13)
prep_of(level-13, care-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (VBP provide))))
    (VP (VBD reduced)
      (NP (NN care))
      (VP (-LRB- -LRB-) (VB see)
        (ADVP
          (NP
            (NP (NNP Canada))
            (PRN (, ,)
              (NP (NNP Australia) (, ,) (NNP France))
              (, ,)))
          (RB Great))
        (NP (NNP Britain))))
    (. ...)))

mark(provide-3, If-1)
nsubj(provide-3, they-2)
csubj(reduced-4, provide-3)
root(ROOT-0, reduced-4)
dobj(reduced-4, care-5)
dep(reduced-4, see-7)
npadvmod(Great-14, Canada-8)
nn(France-12, Australia-10)
dep(Canada-8, France-12)
advmod(see-7, Great-14)
dobj(see-7, Britain-15)

(ROOT
  (S
    (NP (NNP -RRB-))
    (RB then)
    (NP (PRP they))
    (VP (MD can)
      (VP (VB do)
        (NP (PRP it))
        (PP (IN for)
          (ADVP (RBR less)))))
    (. .)))

advmod(do-5, then-2)
nsubj(do-5, they-3)
aux(do-5, can-4)
root(ROOT-0, do-5)
dobj(do-5, it-6)
prepc_for(do-5, less-8)

(ROOT
  (S
    (NP (DT The) (NN government))
    (VP (MD will)
      (ADVP (RB also))
      (VP (VB take)
        (NP (NN freedom))))
    (. .)))

det(government-2, The-1)
nsubj(take-5, government-2)
aux(take-5, will-3)
advmod(take-5, also-4)
root(ROOT-0, take-5)
dobj(take-5, freedom-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD wo) (RB n't)
      (VP (VB allow)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB get)
              (NP
                (NP (DT the) (NN treatment))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP need)))))
              (, ,)
              (SBAR (RB rather)
                (S
                  (NP (PRP you))
                  (VP (MD 'll)
                    (VP (VB get)
                      (NP
                        (NP (DT the) (NN treatment))
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (VBP think)
                              (SBAR
                                (S
                                  (NP (PRP you))
                                  (VP (VBP deserve)
                                    (PP (VBN based)
                                      (PP (IN on)
                                        (NP (DT some) (NN chart))))))))))))))))))))
    (. .)))

nsubj(allow-4, They-1)
aux(allow-4, wo-2)
neg(allow-4, n't-3)
root(ROOT-0, allow-4)
nsubj(get-7, you-5)
aux(get-7, to-6)
xcomp(allow-4, get-7)
det(treatment-9, the-8)
dobj(get-7, treatment-9)
dobj(need-11, treatment-9)
nsubj(need-11, you-10)
rcmod(treatment-9, need-11)
advmod(get-16, rather-13)
nsubj(get-16, you-14)
aux(get-16, 'll-15)
dep(get-7, get-16)
det(treatment-18, the-17)
dobj(get-16, treatment-18)
nsubj(think-20, they-19)
rcmod(treatment-18, think-20)
nsubj(deserve-22, you-21)
ccomp(think-20, deserve-22)
prepc_based_on(deserve-22, on-24)
det(chart-26, some-25)
pobj(deserve-22, chart-26)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD 'll)
      (ADVP (RB also))
      (VP (VB take)
        (NP (DT the) (NN freedom)
          (S
            (VP (TO to)
              (VP (VB eat)
                (SBAR (IN as)
                  (S
                    (NP (PRP you))
                    (VP (VBP wish)
                      (PRN (-LRB- -LRB-)
                        (S
                          (VP (VB see)
                            (NP
                              (NP (NNP NY))
                              (CC and)
                              (NP (NNP San) (NNP Francisco)))))
                        (-RRB- -RRB-)))))))))))
    (. .)))

nsubj(take-4, They-1)
aux(take-4, 'll-2)
advmod(take-4, also-3)
root(ROOT-0, take-4)
det(freedom-6, the-5)
dobj(take-4, freedom-6)
aux(eat-8, to-7)
infmod(freedom-6, eat-8)
mark(wish-11, as-9)
nsubj(wish-11, you-10)
advcl(eat-8, wish-11)
parataxis(wish-11, see-13)
dobj(see-13, NY-14)
nn(Francisco-17, San-16)
dobj(see-13, Francisco-17)
conj_and(NY-14, Francisco-17)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD may)
      (ADVP (RB even))
      (VP (VB require)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB exercise)
              (NP
                (NP (JJ x) (NNS hours))
                (PP (IN per)
                  (NP (NN day)))))))))
    (. .)))

nsubj(require-4, They-1)
aux(require-4, may-2)
advmod(require-4, even-3)
root(ROOT-0, require-4)
nsubj(exercise-7, you-5)
aux(exercise-7, to-6)
xcomp(require-4, exercise-7)
amod(hours-9, x-8)
dobj(exercise-7, hours-9)
prep_per(hours-9, day-11)

