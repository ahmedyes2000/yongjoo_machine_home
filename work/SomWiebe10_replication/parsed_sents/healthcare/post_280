(ROOT
  (S
    (NP (PRP You))
    (VP (VBD said) (: :) (`` ``)
      (S
        (ADVP (RB Again))
        (, ,)
        (NP (PRP I))
        (ADVP (RB only))
        (VP (VBP see)
          (NP (NNS people))
          (PP (IN on)
            (NP (DT the) (-LRB- -LRB-) (NN cough) (-RRB- -RRB-)))
          (ADVP (RB deep) (RB left)
            (S
              (VP (VBG misreading)
                (NP (NNS statements)
                  (CC and)
                  (NNS statistics))))))))
    (. .)))

nsubj(said-2, You-1)
root(ROOT-0, said-2)
advmod(see-9, Again-5)
nsubj(see-9, I-7)
advmod(see-9, only-8)
ccomp(said-2, see-9)
dobj(see-9, people-10)
det(cough-14, the-12)
prep_on(see-9, cough-14)
advmod(left-17, deep-16)
advmod(see-9, left-17)
dep(left-17, misreading-18)
dobj(misreading-18, statements-19)
dobj(misreading-18, statistics-21)
conj_and(statements-19, statistics-21)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (NP
                (NP (DT all))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP see))))))))))
    (. .)))

nsubj(sure-4, I-2)
cop(sure-4, 'm-3)
root(ROOT-0, sure-4)
nsubj(all-7, that-5)
cop(all-7, 's-6)
dep(sure-4, all-7)
dobj(see-9, all-7)
nsubj(see-9, you-8)
rcmod(all-7, see-9)

(ROOT
  (NP
    (NP (DT The) (NN difference))
    (PP (IN between)
      (S
        (VP (VBG spending)
          (CC and)
          (VBG costing))))
    (. .)))

det(difference-2, The-1)
root(ROOT-0, difference-2)
prepc_between(difference-2, spending-4)
prepc_between(difference-2, costing-6)
conj_and(spending-4, costing-6)

(ROOT
  (S
    (S
      (NP (DT The) (NNP GDP))
      (VP (VBZ includes)
        (NP (DT both) (JJ private)
          (CC and)
          (NNP Government) (NN expenditure))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (DT this))
            (VP (VBZ answers)
              (NP (PRP$ your) (NN objection)))))))
    (. .)))

det(GDP-2, The-1)
nsubj(includes-3, GDP-2)
root(ROOT-0, includes-3)
det(expenditure-8, both-4)
amod(expenditure-8, private-5)
conj_and(private-5, Government-7)
amod(expenditure-8, Government-7)
dobj(includes-3, expenditure-8)
dep(includes-3, so-10)
nsubj(think-12, I-11)
ccomp(includes-3, think-12)
nsubj(answers-14, this-13)
ccomp(think-12, answers-14)
poss(objection-16, your-15)
dobj(answers-14, objection-16)

(ROOT
  (S
    (INTJ (VB Please))
    (VP
      (VP (VB see)
        (NP (JJ http:\/\/en.wikipedia.org\/wiki\/Gross_domestic_product) (JJ #The) (VBG _) (NN components_of_GDP))
        (`` ``)
        (INTJ (UH Wow)))
      (, ,)
      (NP
        (NP
          (NP
            (NP (CD 80.4))
            (PRN (-LRB- -LRB-)
              (NP (NNP Canada))
              (-RRB- -RRB-)))
          (PP (IN vs.)
            (NP (CD 78.06))))
        (PRN (-LRB- -LRB-)
          (NP (NNP US))
          (-RRB- -RRB-))))
    (. .)))

dep(see-2, Please-1)
root(ROOT-0, see-2)
amod(components_of_GDP-6, http:\/\/en.wikipedia.org\/wiki\/Gross_domestic_product-3)
amod(components_of_GDP-6, #The-4)
amod(components_of_GDP-6, _-5)
dobj(see-2, components_of_GDP-6)
dep(see-2, Wow-8)
dobj(see-2, 80.4-10)
appos(80.4-10, Canada-12)
prep_vs.(80.4-10, 78.06-15)
abbrev(80.4-10, US-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP feel)
      (SBAR
        (S
          (NP (PDT such) (DT a) (JJ small) (NN difference))
          (VP (MD would)
            (VP (VB have)
              (S
                (VP
                  (VP
                    (ADVP (RBR more))
                    (TO to)
                    (VP (VB do)
                      (PP (IN with)
                        (NP
                          (NP (DT the) (NN nature))
                          (PP (IN of)
                            (NP (JJ fast) (NN food) (NNP America)))))))
                  (CC and)
                  (ADVP (RB almost) (NN nothing))
                  (VP (TO to)
                    (VP (VB do)
                      (PP (IN with)
                        (NP (NN healthcare))))))))))))
    (. .)))

nsubj(feel-2, I-1)
root(ROOT-0, feel-2)
predet(difference-6, such-3)
det(difference-6, a-4)
amod(difference-6, small-5)
nsubj(have-8, difference-6)
aux(have-8, would-7)
ccomp(feel-2, have-8)
advmod(do-11, more-9)
aux(do-11, to-10)
ccomp(have-8, do-11)
det(nature-14, the-13)
prep_with(do-11, nature-14)
amod(America-18, fast-16)
nn(America-18, food-17)
prep_of(nature-14, America-18)
ccomp(have-8, almost-20)
advmod(do-11, almost-20)
conj_and(do-11, almost-20)
dep(almost-20, nothing-21)
aux(do-23, to-22)
ccomp(have-8, do-23)
conj_and(do-11, do-23)
prep_with(do-23, healthcare-25)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB Where))
        (S
          (VP (VBZ is)
            (NP (PRP$ your) (NN evidence)))))
      (NP (DT that) (NNP America))
      (VP (VBZ is)
        (NP
          (NP
            (NP (JJR more) (NNS addicted))
            (PRN (-LRB- -LRB-)
              (NP
                (QP (CC or)
                  (JJR less)))
              (-RRB- -RRB-)))
          (PP (TO to)
            (NP
              (NP (JJ fast) (NN food))
              (PP (IN than)
                (NP (NNP Canada) (, ,) (NNP Australia))))))))
    (CC and)
    (S
      (NP (DT the) (NNP United))
      (VP (VBZ Kingdom)))
    (. ?)))

advmod(evidence-5, Where-2)
cop(evidence-5, is-3)
poss(evidence-5, your-4)
advcl(addicted-10, evidence-5)
det(America-7, that-6)
nsubj(addicted-10, America-7)
cop(addicted-10, is-8)
amod(addicted-10, more-9)
root(ROOT-0, addicted-10)
cc(less-13, or-12)
dep(addicted-10, less-13)
amod(food-17, fast-16)
prep_to(addicted-10, food-17)
nn(Australia-21, Canada-19)
prep_than(food-17, Australia-21)
det(United-24, the-23)
nsubj(Kingdom-25, United-24)
conj_and(addicted-10, Kingdom-25)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN guess))
        (PP (IN on)
          (NP (PRP$ your) (NN part)))))
    (. .)))

nsubj(guess-4, This-1)
cop(guess-4, is-2)
det(guess-4, a-3)
root(ROOT-0, guess-4)
poss(part-7, your-6)
prep_on(guess-4, part-7)

(ROOT
  (S
    (INTJ (VB Please))
    (VP (VB present)
      (NP (PRP$ your) (NN evidence)))
    (. .)))

dep(present-2, Please-1)
root(ROOT-0, present-2)
poss(evidence-4, your-3)
dobj(present-2, evidence-4)

(ROOT
  (S ('' '')
    (NP (DT that) (JJ tiny) (NN minute))
    (VP (VBZ 2-year)
      (NP
        (NP (NN difference))
        ('' '')
        (SBAR
          (S
            (NP (DT This))
            (VP (VBZ is)
              (NP (DT a) (JJ curious) (NN value) (NN judgment)))))))
    (. .)))

det(minute-4, that-2)
amod(minute-4, tiny-3)
nsubj(2-year-5, minute-4)
root(ROOT-0, 2-year-5)
dobj(2-year-5, difference-6)
nsubj(judgment-13, This-8)
cop(judgment-13, is-9)
det(judgment-13, a-10)
amod(judgment-13, curious-11)
nn(judgment-13, value-12)
rcmod(difference-6, judgment-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP presume)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP pay)
            (PP (IN for)
              (NP (JJ private) (NN health) (NN insurance)))))))
    (. .)))

nsubj(presume-2, I-1)
root(ROOT-0, presume-2)
complm(pay-5, that-3)
nsubj(pay-5, you-4)
ccomp(presume-2, pay-5)
amod(insurance-9, private-7)
nn(insurance-9, health-8)
prep_for(pay-5, insurance-9)

(ROOT
  (S
    (SBAR (IN If)
      (FRAG
        (ADVP (RB so))))
    (, ,)
    (NP (PRP I))
    (VP (VBP suggest)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP feel)
            (ADVP (DT that) (NN way)
              (SBAR (IN because)
                (S
                  (NP (PRP you))
                  (VP (VBP feel)
                    (SBAR
                      (S
                        (NP (DT the) (NN difference))
                        (VP (VBZ does) (RB n't)
                          (VP (VB apply)
                            (PP (TO to)
                              (NP (PRP you)))))))))))))))
    (. .)))

mark(so-2, If-1)
advcl(suggest-5, so-2)
nsubj(suggest-5, I-4)
root(ROOT-0, suggest-5)
nsubj(feel-7, you-6)
ccomp(suggest-5, feel-7)
dep(way-9, that-8)
advmod(feel-7, way-9)
mark(feel-12, because-10)
nsubj(feel-12, you-11)
dep(way-9, feel-12)
det(difference-14, the-13)
nsubj(apply-17, difference-14)
aux(apply-17, does-15)
neg(apply-17, n't-16)
ccomp(feel-12, apply-17)
prep_to(apply-17, you-19)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (NNP let) (POS 's))
    (VP (VBP look)
      (PP (IN at)
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP (DT the) (NNS things)))))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBD said)))))
    (. .)))

advmod(look-4, Now-1)
nsubj(look-4, let-2)
possessive(let-2, 's-3)
root(ROOT-0, look-4)
prep_at(look-4, some-6)
det(things-9, the-8)
prep_of(some-6, things-9)
complm(said-12, that-10)
nsubj(said-12, you-11)
ccomp(look-4, said-12)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (VBP have)
      (ADVP (RB yet))
      (S
        (VP (TO to)
          (VP
            (VP (VB take)
              (NP (DT those) (NNS factors))
              (PP (IN into)
                (NP (NN account))))
            (CC and)
            (VP (VB prove)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADVP (RB just))
                    (NP
                      (NP (DT the) (NNP UHC))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ gives)
                            (NP (DT that) (JJ tiny) (NN difference))))))))))))))
    (. .)))

nsubj(have-3, You-2)
xsubj(take-6, You-2)
root(ROOT-0, have-3)
advmod(have-3, yet-4)
aux(take-6, to-5)
xcomp(have-3, take-6)
det(factors-8, those-7)
dobj(take-6, factors-8)
prep_into(take-6, account-10)
xcomp(have-3, prove-12)
conj_and(take-6, prove-12)
nsubj(UHC-17, it-13)
cop(UHC-17, 's-14)
advmod(UHC-17, just-15)
det(UHC-17, the-16)
ccomp(prove-12, UHC-17)
nsubj(gives-19, UHC-17)
rcmod(UHC-17, gives-19)
det(difference-22, that-20)
amod(difference-22, tiny-21)
dobj(gives-19, difference-22)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN As)
        (S
          (NP (PRP I))
          (VP (VBP see)
            (NP (PRP it)))))
      (, ,)
      (NP
        (NP (DT the) (NN difference))
        (PP (IN in)
          (NP (NN life) (NN expectancy))))
      (VP (VBZ is)
        (ADJP (JJ certain))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT the) (JJ possible) (NNS differences))))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN absence))
          (PP (IN of)
            (NP
              (NP (DT a) (JJ universal) (NN health) (NN scheme))
              (PP (IN in)
                (NP (DT the) (NNP United) (NNPS States))))))))
    (. .)))

mark(see-4, As-2)
nsubj(see-4, I-3)
advcl(certain-13, see-4)
dobj(see-4, it-5)
det(difference-8, the-7)
nsubj(certain-13, difference-8)
nn(expectancy-11, life-10)
prep_in(difference-8, expectancy-11)
cop(certain-13, is-12)
root(ROOT-0, certain-13)
nsubj(absence-23, one-16)
det(differences-20, the-18)
amod(differences-20, possible-19)
prep_of(one-16, differences-20)
cop(absence-23, is-21)
det(absence-23, the-22)
conj_and(certain-13, absence-23)
det(scheme-28, a-25)
amod(scheme-28, universal-26)
nn(scheme-28, health-27)
prep_of(absence-23, scheme-28)
det(States-32, the-30)
nn(States-32, United-31)
prep_in(scheme-28, States-32)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (SBAR (IN for)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB show)
              (NP (JJ credible) (NN evidence))
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT the) (NN lack))
                    (PP (IN of)
                      (NP (NN health) (NN care))))
                  (VP (VBZ does)
                    (SBAR
                      (S
                        (NP (NNP NOT))
                        (VP (VBP have)
                          (NP (DT a) (NN part)
                            (S
                              (VP (TO to)
                                (VP (VB play))))))))))))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
mark(show-6, for-3)
nsubj(show-6, you-4)
aux(show-6, to-5)
advcl(is-2, show-6)
xcomp(is-2, show-6)
amod(evidence-8, credible-7)
dobj(show-6, evidence-8)
complm(does-15, that-9)
det(lack-11, the-10)
nsubj(does-15, lack-11)
nn(care-14, health-13)
prep_of(lack-11, care-14)
ccomp(show-6, does-15)
nsubj(have-17, NOT-16)
ccomp(does-15, have-17)
det(part-19, a-18)
dobj(have-17, part-19)
aux(play-21, to-20)
infmod(part-19, play-21)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN directed)
        (NP (DT that) (NN label))
        (PP (IN at)
          (NP
            (NP (PRP YOU))
            (, ,)
            (NP (RB not)
              (NP (NNP Canada))
              (CC or)
              (NP
                (NP (DT any))
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJ other) (NNS countries))
                    ('' '')
                    (SBAR
                      (S
                        (ADVP (RB Here))
                        (NP (PRP you))
                        (VP (VBP admit)
                          (PP (TO to)
                            (S
                              (VP (VBG making)
                                (NP (DT an) (NN ad) (NN hominem) (NN attack))))))))))))))))
    (. .)))

nsubjpass(directed-4, I-2)
auxpass(directed-4, was-3)
root(ROOT-0, directed-4)
det(label-6, that-5)
dobj(directed-4, label-6)
prep_at(directed-4, YOU-8)
neg(Canada-11, not-10)
appos(YOU-8, Canada-11)
appos(YOU-8, any-13)
conj_or(Canada-11, any-13)
det(countries-17, the-15)
amod(countries-17, other-16)
prep_of(any-13, countries-17)
dobj(admit-21, countries-17)
advmod(admit-21, Here-19)
nsubj(admit-21, you-20)
rcmod(countries-17, admit-21)
prepc_to(admit-21, making-23)
det(attack-27, an-24)
nn(attack-27, ad-25)
nn(attack-27, hominem-26)
dobj(making-23, attack-27)

(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (NNP A))
    (-RRB- -RRB-)
    (VP (VBP ny)
      (PP (IN of)
        (NP
          (NP (DT the) (JJ other) (NNS countries))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP cite)
                (PP (IN as)
                  (S
                    (VP (VBG having)
                      (NP (DT a)
                        (ADJP (CD 2) (NN year))
                        (NN life) (NN expectancy) (NN difference)))))))))))
    (. .)))

nsubj(ny-5, A-3)
root(ROOT-0, ny-5)
det(countries-9, the-7)
amod(countries-9, other-8)
prep_of(ny-5, countries-9)
dobj(cite-11, countries-9)
nsubj(cite-11, you-10)
rcmod(countries-9, cite-11)
prepc_as(cite-11, having-13)
det(difference-19, a-14)
number(year-16, 2-15)
amod(difference-19, year-16)
nn(difference-19, life-17)
nn(difference-19, expectancy-18)
dobj(having-13, difference-19)

(ROOT
  (S ('' '')
    (NP (DT An) (JJ obvious))
    (VP (VBD misreading))
    (. .)))

det(obvious-3, An-2)
nsubj(misreading-4, obvious-3)
root(ROOT-0, misreading-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB say)
        (NP (DT this))))
    (. .)))

nsubj(say-4, I-1)
aux(say-4, did-2)
neg(say-4, n't-3)
root(ROOT-0, say-4)
dobj(say-4, this-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD pointed)
      (PRT (RP out))
      (NP
        (NP (DT the) (NN difference))
        (PP (IN in)
          (NP (NN life) (NN expectancy))))
      (PP (IN between)
        (NP (DT the) (NNP United) (NNP States) (, ,) (NNP Australia)
          (CC and)
          (NNP Canada))))
    (. .)))

nsubj(pointed-2, I-1)
root(ROOT-0, pointed-2)
prt(pointed-2, out-3)
det(difference-5, the-4)
dobj(pointed-2, difference-5)
nn(expectancy-8, life-7)
prep_in(difference-5, expectancy-8)
det(States-12, the-10)
nn(States-12, United-11)
prep_between(pointed-2, States-12)
prep_between(pointed-2, Australia-14)
conj_and(States-12, Australia-14)
prep_between(pointed-2, Canada-16)
conj_and(States-12, Canada-16)

(ROOT
  (S
    (NP
      (NP (DT The) (NN gap))
      (PP (IN in)
        (NP (NN life) (NN expectancy))))
    (VP (VBZ is)
      (ADJP (JJ different)))
    (. .)))

det(gap-2, The-1)
nsubj(different-7, gap-2)
nn(expectancy-5, life-4)
prep_in(gap-2, expectancy-5)
cop(different-7, is-6)
root(ROOT-0, different-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB preach)
                  (NP (NN misreading)))))))))
    (, ,)
    (VP (VB please)
      (VP (VB read)
        (ADVP (RB carefully))
        (NP (PRP yourself))))
    (. .)))

mark(going-4, If-1)
nsubj(going-4, you-2)
xsubj(preach-6, you-2)
aux(going-4, are-3)
advcl(please-9, going-4)
aux(preach-6, to-5)
xcomp(going-4, preach-6)
dobj(preach-6, misreading-7)
root(ROOT-0, please-9)
xcomp(please-9, read-10)
advmod(read-10, carefully-11)
dobj(read-10, yourself-12)

