(ROOT
  (S
    (NP (NNP Health))
    (VP (VBZ is)
      (ADVP (RB often))
      (PP (RB out) (IN of)
        (NP
          (NP
            (NP (DT an) (NN individual) (POS 's))
            (NN control))
          (: ;)
          (NP (JJ like) (NNS fires)))))
    (. .)))

nsubj(is-2, Health-1)
root(ROOT-0, is-2)
advmod(is-2, often-3)
det(individual-7, an-6)
poss(control-9, individual-7)
prep_out_of(is-2, control-9)
amod(fires-12, like-11)
dep(control-9, fires-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (VP (VB see)
        (SBAR (IN that)
          (S
            (S
              (NP
                (NP (DT the) (JJ other) (NN side))
                (PP (IN of)
                  (NP (DT this) (NN argument))))
              (VP (VBZ makes)
                (NP
                  (NP (DT a) (NN distinction))
                  (PP (IN between)
                    (NP (NNS things))))
                (SBAR (IN that)
                  (S
                    (NP (DT an) (NN individual))
                    (VP (MD can)
                      (VP (VB control)))))))
            (CC and)
            (S
              (NP (DT those) (NN he\/she))
              (VP (MD can) (RB not)))))))
    (. .)))

nsubj(see-3, You-1)
aux(see-3, will-2)
root(ROOT-0, see-3)
complm(makes-11, that-4)
det(side-7, the-5)
amod(side-7, other-6)
nsubj(makes-11, side-7)
det(argument-10, this-9)
prep_of(side-7, argument-10)
ccomp(see-3, makes-11)
det(distinction-13, a-12)
dobj(makes-11, distinction-13)
prep_between(distinction-13, things-15)
complm(control-20, that-16)
det(individual-18, an-17)
nsubj(control-20, individual-18)
aux(control-20, can-19)
ccomp(makes-11, control-20)
det(he\/she-23, those-22)
nsubj(can-24, he\/she-23)
ccomp(see-3, can-24)
conj_and(makes-11, can-24)
neg(can-24, not-25)

(ROOT
  (INTJ (UH .)))


(ROOT
  (X (CC but)
    (VP (VBP are) (RB n't)
      (ADJP (JJ many)
        (SBAR
          (S
            (NP (NNS fires))
            (VP (VBD caused)
              (PP (IN by)
                (NP (DT this)))
              (ADVP (RB as) (RB well)))))))
    (. ?)))

dep(many-4, but-1)
cop(many-4, are-2)
neg(many-4, n't-3)
root(ROOT-0, many-4)
nsubj(caused-6, fires-5)
dep(many-4, caused-6)
prep_by(caused-6, this-8)
advmod(well-10, as-9)
mwe(well-10, as-9)
advmod(caused-6, well-10)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (JJ real) (NN distinction))
      (ADVP (RB here)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(distinction-5, no-3)
amod(distinction-5, real-4)
nsubj(is-2, distinction-5)
advmod(is-2, here-6)

(ROOT
  (S (CC Either)
    (NP (PRP you))
    (VP
      (VP (MD should)
        (VP (VB be)
          (VP (VBN opposed)
            (S
              (VP (TO to)
                (VP (VB fire\/police)
                  (NP
                    (NP (NN protection))
                    (CC and)
                    (NP (JJ universal) (NN healthcare)))))))))
      (, ,)
      (CC or)
      (VP (MD should)
        (VP (VB support)
          (NP (DT both)))))
    (. .)))

dep(opposed-5, Either-1)
nsubjpass(opposed-5, you-2)
nsubj(support-15, you-2)
aux(opposed-5, should-3)
auxpass(opposed-5, be-4)
root(ROOT-0, opposed-5)
aux(fire\/police-7, to-6)
xcomp(opposed-5, fire\/police-7)
dobj(fire\/police-7, protection-8)
amod(healthcare-11, universal-10)
dobj(fire\/police-7, healthcare-11)
conj_and(protection-8, healthcare-11)
aux(support-15, should-14)
conj_or(opposed-5, support-15)
dobj(support-15, both-16)

(ROOT
  (S
    (NP (VBG Picking) (NN one))
    (VP (VBZ is)
      (NP (DT a) (JJ logical) (NN inconsistency)))))

amod(one-2, Picking-1)
nsubj(inconsistency-6, one-2)
cop(inconsistency-6, is-3)
det(inconsistency-6, a-4)
amod(inconsistency-6, logical-5)
root(ROOT-0, inconsistency-6)

(ROOT
  (S
    (NP (PRP$ Their) (NN argument))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NN fire)
            (CC and)
            (NN police) (NN protection))
          (VP (VBP are)
            (NP
              (NP (NNS things))
              (PP (IN beyond)
                (NP
                  (NP (DT the) (NN control))
                  (PP (IN of)
                    (NP (NNS individuals))))))))))
    (. .)))

poss(argument-2, Their-1)
nsubj(is-3, argument-2)
root(ROOT-0, is-3)
complm(things-10, that-4)
nn(protection-8, fire-5)
conj_and(fire-5, police-7)
nn(protection-8, police-7)
nsubj(things-10, protection-8)
cop(things-10, are-9)
ccomp(is-3, things-10)
det(control-13, the-12)
prep_beyond(things-10, control-13)
prep_of(control-13, individuals-15)

(ROOT
  (S (CC But)
    (NP (DT that) (NN healthcare))
    (VP (VBZ is) (RB not))
    (. .)))

cc(is-4, But-1)
det(healthcare-3, that-2)
nsubj(is-4, healthcare-3)
root(ROOT-0, is-4)
neg(is-4, not-5)

(ROOT
  (S
    (NP (DT This) (NN argument))
    (VP (VBZ is)
      (ADVP (RB seriously))
      (ADJP (JJ flawed)))
    (. .)))

det(argument-2, This-1)
nsubj(flawed-5, argument-2)
cop(flawed-5, is-3)
advmod(flawed-5, seriously-4)
root(ROOT-0, flawed-5)

(ROOT
  (S
    (NP (RB Even) (DT a) (JJ young) (NN child))
    (VP (MD can)
      (VP (VB see)
        (SBARQ
          (WHADVP (WRB why)))))
    (. .)))

advmod(child-4, Even-1)
det(child-4, a-2)
amod(child-4, young-3)
nsubj(see-6, child-4)
aux(see-6, can-5)
root(ROOT-0, see-6)
dep(see-6, why-7)

(ROOT
  (S
    (NP (JJ Many) (NN healthcare) (NNS issues))
    (VP (VBP are)
      (ADJP (RB very) (JJ much))
      (PP (RB out) (IN of)
        (NP
          (NP (DT the) (NN control))
          (PP (IN of)
            (NP (NNS individuals))))))
    (. .)))

amod(issues-3, Many-1)
nn(issues-3, healthcare-2)
nsubj(much-6, issues-3)
cop(much-6, are-4)
advmod(much-6, very-5)
root(ROOT-0, much-6)
det(control-10, the-9)
prep_out_of(much-6, control-10)
prep_of(control-10, individuals-12)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (PP (IN in)
            (NP (DT a) (NN bus) (NN accident))))))
    (. ?)))

dep('re-4, What-1)
mark('re-4, if-2)
nsubj('re-4, you-3)
root(ROOT-0, 're-4)
det(accident-8, a-6)
nn(accident-8, bus-7)
prep_in('re-4, accident-8)

(ROOT
  (S
    (NP (JJ Many) (NNS accidents))
    (VP (VBP are)
      (PRT (RP out))
      (PP (IN of)
        (NP
          (NP (DT the) (NN control))
          (PP (IN of)
            (NP (NNS individuals))))))
    (. .)))

amod(accidents-2, Many-1)
nsubj(are-3, accidents-2)
root(ROOT-0, are-3)
det(control-7, the-6)
prep_out_of(are-3, control-7)
prep_of(control-7, individuals-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP (JJ many) (NNS accidents))
          (VP (VBP are)
            (NP
              (NP (DT a) (NN result))
              (PP (IN of)
                (NP
                  (NP (DT an) (NN individual))
                  (VP
                    (VP (VBG being)
                      (ADJP (JJ stupid)))
                    (CC or)
                    (RB not)
                    (VP (VBG being)
                      (ADJP (JJ careful)))))))))))
    (: ...)))

nsubj(agree-2, I-1)
root(ROOT-0, agree-2)
complm(result-8, that-3)
amod(accidents-5, many-4)
nsubj(result-8, accidents-5)
cop(result-8, are-6)
det(result-8, a-7)
ccomp(agree-2, result-8)
det(individual-11, an-10)
prep_of(result-8, individual-11)
cop(stupid-13, being-12)
dep(individual-11, stupid-13)
dep(individual-11, not-15)
conj_or(stupid-13, not-15)
neg(stupid-13, not-15)
cop(careful-17, being-16)
dep(stupid-13, careful-17)

