(ROOT
  (S (`` ``)
    (ADVP (RB Again))
    (, ,)
    (NP (PRP you))
    (VP
      (VP (VBP are)
        (ADJP (JJ young)))
      (CC and)
      (VP (VBP have)
        (ADVP (RB never))
        (VP (VBN worked)
          (PP (IN in)
            (NP (DT the) (JJ professional) (NN world)))
          (ADVP (RB yet)))))
    (. .)))

advmod(young-6, Again-2)
nsubj(young-6, you-4)
nsubj(worked-10, you-4)
cop(young-6, are-5)
root(ROOT-0, young-6)
aux(worked-10, have-8)
neg(worked-10, never-9)
conj_and(young-6, worked-10)
det(world-14, the-12)
amod(world-14, professional-13)
prep_in(worked-10, world-14)
advmod(worked-10, yet-15)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADJP (JJ sure)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP mean)
                (PP (IN by)
                  (NP (JJ professional) (NN world)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN had)
          (NP
            (NP (DT a) (NN job))
            (PP (IN for)
              (NP
                (NP (DT a) (NN while))
                (ADVP (RB now))))))))
    (. .)))

nsubj(sure-5, I-2)
cop(sure-5, 'm-3)
neg(sure-5, not-4)
root(ROOT-0, sure-5)
dobj(mean-8, what-6)
nsubj(mean-8, you-7)
dep(sure-5, mean-8)
amod(world-11, professional-10)
prep_by(mean-8, world-11)
nsubj(had-16, I-14)
aux(had-16, have-15)
conj_but(sure-5, had-16)
det(job-18, a-17)
dobj(had-16, job-18)
det(while-21, a-20)
prep_for(job-18, while-21)
advmod(while-21, now-22)

(ROOT
  (S ('' '')
    (ADVP (RB Actually))
    (, ,)
    (NP
      (NP
        (ADJP (RBS most) (VBN educated))
        (NNS people))
      (PP (IN in)
        (NP (DT the) (NNP US))))
    (VP (VBP agree)
      (PP (IN with)
        (NP (DT the) (JJ universal) (NN option))))
    (. .)))

advmod(agree-10, Actually-2)
advmod(educated-5, most-4)
amod(people-6, educated-5)
nsubj(agree-10, people-6)
det(US-9, the-8)
prep_in(people-6, US-9)
root(ROOT-0, agree-10)
det(option-14, the-12)
amod(option-14, universal-13)
prep_with(agree-10, option-14)

(ROOT
  (S
    (NP (NNP ''))
    (VP (VBP Prove)
      (NP (PRP it)))
    (. .)))

root(ROOT-0, Prove-2)
dobj(Prove-2, it-3)

(ROOT
  (S ('' '')
    (S
      (NP (NNP Nor))
      (VP (VBP have)
        (NP (PRP you))))
    (CC or)
    (S
      (NP (NN altarion))
      (VP (VBD had)
        (NP
          (NP
            (NP (DT the) (NN responsibility))
            (PP (IN of)
              (S
                (VP (VBG maintaining)
                  (NP (PRP yourself))))))
          (CC or)
          (NP
            (NP (DT a) (NN family))
            (PP (IN on)
              (NP
                (NP (NN top))
                (PP (IN of)
                  (NP (DT that)))))))))
    (. .)))

nsubj(have-3, Nor-2)
root(ROOT-0, have-3)
dobj(have-3, you-4)
nsubj(had-7, altarion-6)
conj_or(have-3, had-7)
det(responsibility-9, the-8)
dobj(had-7, responsibility-9)
prepc_of(responsibility-9, maintaining-11)
dobj(maintaining-11, yourself-12)
det(family-15, a-14)
dobj(had-7, family-15)
conj_or(responsibility-9, family-15)
prep_on_top_of(family-15, that-19)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (MD may) (RB not)
        (VP (VB have)
          (NP
            (NP (DT a) (NN wife))
            (CC and)
            (NP (NNS kids))))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB consider)
          (S
            (NP (PRP myself))
            (ADJP (RB as) (JJ responsible))))))
    (. .)))

nsubj(have-5, I-2)
aux(have-5, may-3)
neg(have-5, not-4)
root(ROOT-0, have-5)
det(wife-7, a-6)
dobj(have-5, wife-7)
dobj(have-5, kids-9)
conj_and(wife-7, kids-9)
nsubj(consider-13, I-11)
aux(consider-13, would-12)
conj_but(have-5, consider-13)
nsubj(responsible-16, myself-14)
advmod(responsible-16, as-15)
xcomp(consider-13, responsible-16)

(ROOT
  (S
    (PP (VBG Considering)
      (NP (DT that)))
    (NP (PRP I))
    (VP (VB save)
      (NP
        (NP (NN half))
        (PP (IN of)
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (DT the) (NN money))))))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP earn)))))
    (. .)))

prep_considering(save-4, that-2)
nsubj(save-4, I-3)
root(ROOT-0, save-4)
dobj(save-4, half-5)
prep_of(half-5, all-7)
det(money-10, the-9)
prep_of(all-7, money-10)
complm(earn-13, that-11)
nsubj(earn-13, I-12)
ccomp(save-4, earn-13)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB already))
    (VP (VBP have)
      (NP
        (NP (NN allot))
        (PP (IN of)
          (NP
            (NP (NN money))
            (VP (VBN saved))))))
    (. .)))

nsubj(have-3, I-1)
advmod(have-3, already-2)
root(ROOT-0, have-3)
dobj(have-3, allot-4)
prep_of(allot-4, money-6)
partmod(money-6, saved-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD would)
            (VP (VB get)
              (NP (DT a) (NN head) (NN start))
              (PP (RB instead) (IN of)
                (S
                  (VP (VBG waiting)
                    (SBAR (IN till)
                      (S
                        (NP (NN collage))
                        (VP (TO to)
                          (VP
                            (VP (VB save)
                              (NP (NN money)))
                            (, ,)
                            (CC and)
                            (ADVP (RB then))
                            (VP (VB blame)
                              (NP (DT the) (NN government))
                              (PP (IN for)
                                (S (RB not)
                                  (VP (VBG helping)
                                    (NP (PRP me))))))))))))))))))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(get-5, I-3)
aux(get-5, would-4)
ccomp(thought-2, get-5)
det(start-8, a-6)
nn(start-8, head-7)
dobj(get-5, start-8)
prepc_instead_of(get-5, waiting-11)
mark(save-15, till-12)
nsubj(save-15, collage-13)
nsubj(blame-20, collage-13)
aux(save-15, to-14)
advcl(waiting-11, save-15)
xcomp(waiting-11, save-15)
dobj(save-15, money-16)
advcl(waiting-11, then-19)
xcomp(waiting-11, then-19)
advmod(save-15, then-19)
conj_and(save-15, then-19)
advcl(waiting-11, blame-20)
xcomp(waiting-11, blame-20)
conj_and(save-15, blame-20)
det(government-22, the-21)
dobj(blame-20, government-22)
neg(helping-25, not-24)
prepc_for(blame-20, helping-25)
dobj(helping-25, me-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB not)
      (VP (VB look)
        (PP (IN like)
          (NP (NN fun)))
        (SBAR (IN so)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (VP (VBG choosing)
                (S (RB not)
                  (VP (TO to)
                    (VP (VB participate))))))))))
    (. .)))

nsubj(look-4, It-1)
aux(look-4, does-2)
neg(look-4, not-3)
root(ROOT-0, look-4)
prep_like(look-4, fun-6)
mark(choosing-10, so-7)
nsubj(choosing-10, I-8)
xsubj(participate-13, I-8)
aux(choosing-10, 'm-9)
advcl(look-4, choosing-10)
neg(participate-13, not-11)
aux(participate-13, to-12)
xcomp(choosing-10, participate-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (VP (VBG maintaining)
              (NP (PRP myself))
              (ADVP (RB pretty) (RB well)))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(maintaining-5, I-3)
aux(maintaining-5, 'm-4)
ccomp(think-2, maintaining-5)
dobj(maintaining-5, myself-6)
advmod(well-8, pretty-7)
advmod(maintaining-5, well-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP
              (NP (NN allot))
              (PP (IN of)
                (NP
                  (NP (NNS assumptions))
                  (PP (IN about)
                    (NP (NNS people))))))))))
    (. .)))

nsubj(seem-2, You-1)
xsubj(make-4, You-1)
root(ROOT-0, seem-2)
aux(make-4, to-3)
xcomp(seem-2, make-4)
dobj(make-4, allot-5)
prep_of(allot-5, assumptions-7)
prep_about(assumptions-7, people-9)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP tend)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ false))))))
    (. .)))

nsubj(tend-2, They-1)
xsubj(false-5, They-1)
root(ROOT-0, tend-2)
aux(false-5, to-3)
cop(false-5, be-4)
xcomp(tend-2, false-5)

