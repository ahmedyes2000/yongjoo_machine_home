(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB NOT))
      (VP (VBG enjoying)
        (NP
          (NP (DT the)
            (ADJP (JJ socialised)
              (CC and)
              (JJ paid-through-taxes))
            (NN luxury))
          (PP (IN of)
            (NP (DT a) (NN highway))))
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP
                (NP (JJR more))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN parkway))
                    (PP (IN during)
                      (NP (NN rush) (NN hour) (NN traffic)))))))))))
    (. .)))

nsubj(enjoying-5, I-2)
aux(enjoying-5, am-3)
neg(enjoying-5, NOT-4)
root(ROOT-0, enjoying-5)
det(luxury-10, the-6)
amod(luxury-10, socialised-7)
conj_and(socialised-7, paid-through-taxes-9)
amod(luxury-10, paid-through-taxes-9)
dobj(enjoying-5, luxury-10)
det(highway-13, a-12)
prep_of(luxury-10, highway-13)
mark(more-17, because-14)
nsubj(more-17, it-15)
cop(more-17, is-16)
advcl(enjoying-5, more-17)
det(parkway-20, a-19)
prep_of(more-17, parkway-20)
nn(traffic-24, rush-22)
nn(traffic-24, hour-23)
prep_during(parkway-20, traffic-24)

(ROOT
  (S ('' '')
    (NP (NNP Then))
    (VP
      (VP (VBP stay)
        (PP (IN at)
          (NP (NN home))))
      (CC and)
      (VP (VBP do) (RB n't)
        (VP (VB use)
          (NP (PRP it)))))
    (. .)))

nsubj(stay-3, Then-2)
nsubj(use-9, Then-2)
root(ROOT-0, stay-3)
prep_at(stay-3, home-5)
aux(use-9, do-7)
neg(use-9, n't-8)
conj_and(stay-3, use-9)
dobj(use-9, it-10)

(ROOT
  (S
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB agree)
        (PP (IN with)
          (NP (NNS taxes)))))
    (. .)))

prep_after(agree-7, all-2)
nsubj(agree-7, you-4)
aux(agree-7, do-5)
neg(agree-7, n't-6)
root(ROOT-0, agree-7)
prep_with(agree-7, taxes-9)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP you))
    (VP (MD should)
      (VP (VB spend)
        (NP (DT a) (NN week)
          (S (RB not)
            (VP (VBG using)
              (NP
                (NP (DT any) (NNS services))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP are)
                      (VP (VBN paid)
                        (PP (IN for)
                          (PP (IN through)
                            (NP (NN taxation))))))))))))))
    (. ?)))

advmod(spend-4, Maybe-1)
nsubj(spend-4, you-2)
aux(spend-4, should-3)
root(ROOT-0, spend-4)
det(week-6, a-5)
tmod(spend-4, week-6)
neg(using-8, not-7)
dep(week-6, using-8)
det(services-10, any-9)
dobj(using-8, services-10)
nsubjpass(paid-13, services-10)
auxpass(paid-13, are-12)
rcmod(services-10, paid-13)
prep(paid-13, for-14)
pcomp(for-14, through-15)
prep_through(for-14, taxation-16)

(ROOT
  (S
    (NP (DT That))
    (VP (MD would)
      (VP (VB be)
        (NP (NN fun))))
    (. .)))

nsubj(fun-4, That-1)
aux(fun-4, would-2)
cop(fun-4, be-3)
root(ROOT-0, fun-4)

(ROOT
  (S ('' '')
    (NP (NNP Nor))
    (VP (VBP am)
      (S
        (NP (PRP I))
        (VP (VBG enjoying)
          (NP
            (NP (DT the)
              (ADJP (JJ socialised)
                (CC and)
                (JJ paid-through-taxes))
              (NN police))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP take)
                  (NP
                    (QP (JJR more) (IN than) (DT an) (NN hour)))
                  (S
                    (VP (TO to)
                      (VP (VB respond)
                        (PP (TO to)
                          (NP (NN anything)))))))))))))
    (. .)))

nsubj(am-3, Nor-2)
root(ROOT-0, am-3)
nsubj(enjoying-5, I-4)
dep(am-3, enjoying-5)
det(police-10, the-6)
amod(police-10, socialised-7)
conj_and(socialised-7, paid-through-taxes-9)
amod(police-10, paid-through-taxes-9)
dobj(enjoying-5, police-10)
nsubj(take-12, police-10)
rcmod(police-10, take-12)
mwe(than-14, more-13)
quantmod(hour-16, than-14)
quantmod(hour-16, an-15)
dobj(take-12, hour-16)
aux(respond-18, to-17)
xcomp(take-12, respond-18)
prep_to(respond-18, anything-20)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (DT That))
        (PP (IN because)
          (NP (PRP they))))
      (VP (VBP 're)
        (VP (VBG dealing)
          (PP (IN with)))))
    (RB all)
    (S
      (NP (DT the) (NN gun))
      (VP (VBZ crime)))
    (. .)))

nsubj(dealing-6, That-2)
prep_because(That-2, they-4)
aux(dealing-6, 're-5)
root(ROOT-0, dealing-6)
prep(dealing-6, with-7)
advmod(dealing-6, all-8)
det(gun-10, the-9)
nsubj(crime-11, gun-10)
ccomp(dealing-6, crime-11)

