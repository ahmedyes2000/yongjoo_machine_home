(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is) (RB not)
      (NP (DT a) (JJ taboo) (NN word)))
    (. .)))

nsubj(word-6, This-1)
cop(word-6, is-2)
neg(word-6, not-3)
det(word-6, a-4)
amod(word-6, taboo-5)
root(ROOT-0, word-6)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP it))
            (VP (VBZ is))))))
    (CC and)
    (S
      (NP (DT the) (JJ scary) (NN thing))
      (VP (VBZ is)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (VP (VBG arriving)
                (PP (IN in)
                  (NP (NNP America)))))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
dobj(is-5, what-3)
nsubj(is-5, it-4)
ccomp(is-2, is-5)
det(thing-9, the-7)
amod(thing-9, scary-8)
nsubj(is-10, thing-9)
conj_and(is-2, is-10)
nsubj(arriving-13, it-11)
aux(arriving-13, is-12)
ccomp(is-10, arriving-13)
prep_in(arriving-13, America-15)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB have)
        (S
          (NP (PRP it))
          (NP (DT all)))))
    (. .)))

nsubj(have-4, You-1)
aux(have-4, ca-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
nsubj(all-6, it-5)
xcomp(have-4, all-6)

(ROOT
  (SBARQ
    (PP (IN Besides))
    (, ,)
    (WHADVP (WRB where))
    (SQ (MD will)
      (NP (PDT all) (DT the) (NN Canadians))
      (VP (VB go)
        (S
          (VP (TO to)
            (VP
              (PP (IN for)
                (NP (NN quality) (NN healthcare)))
              (SBAR (IN if)
                (S
                  (NP (PRP it))
                  (VP (VBZ goes)
                    (ADJP (JJ national))
                    (ADVP (RB here))))))))))
    (. ?)))

prep(go-8, Besides-1)
advmod(go-8, where-3)
aux(go-8, will-4)
predet(Canadians-7, all-5)
det(Canadians-7, the-6)
nsubj(go-8, Canadians-7)
xsubj(for-10, Canadians-7)
root(ROOT-0, go-8)
aux(for-10, to-9)
xcomp(go-8, for-10)
nn(healthcare-12, quality-11)
pobj(for-10, healthcare-12)
mark(goes-15, if-13)
nsubj(goes-15, it-14)
advcl(for-10, goes-15)
acomp(goes-15, national-16)
advmod(goes-15, here-17)

(ROOT
  (S
    (NP (NNP Universal) (NNP healthcare))
    (VP (VBZ is)
      (NP
        (NP (JJ socialist))
        (PP (IN in)
          (NP (NN nature)))))
    (. .)))

nn(healthcare-2, Universal-1)
nsubj(socialist-4, healthcare-2)
cop(socialist-4, is-3)
root(ROOT-0, socialist-4)
prep_in(socialist-4, nature-6)

(ROOT
  (S
    (SBAR (RB Rather) (IN than)
      (S
        (VP (VBP go)
          (PP (IN into)
            (NP (PRP it))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB say)
        (NP (CD one) (NN thing))))
    (. .)))

advmod(go-3, Rather-1)
dep(go-3, than-2)
advcl(say-9, go-3)
prep_into(go-3, it-5)
nsubj(say-9, I-7)
aux(say-9, will-8)
root(ROOT-0, say-9)
num(thing-11, one-10)
dobj(say-9, thing-11)

(ROOT
  (S
    (VP
      (VP (VB Look)
        (PP (TO to)
          (NP
            (NP (NNS examples))
            (PP (IN in)
              (NP (JJ other) (NNS countries))))))
      (, ,)
      (VP (VB read)
        (NP (PRP$ your) (NN history) (NNS books))))
    (. .)))

root(ROOT-0, Look-1)
prep_to(Look-1, examples-3)
amod(countries-6, other-5)
prep_in(examples-3, countries-6)
dep(Look-1, read-8)
poss(books-11, your-9)
nn(books-11, history-10)
dobj(read-8, books-11)

(ROOT
  (S
    (NP (NNP Socialism))
    (VP (VBZ does) (RB not)
      (VP (VB work)))
    (. .)))

nsubj(work-4, Socialism-1)
aux(work-4, does-2)
neg(work-4, not-3)
root(ROOT-0, work-4)

(ROOT
  (S
    (NP
      (NP (NNP Healthcare))
      (PP (IN in)
        (NP (NNP Europe))))
    (VP (VBZ does) (RB not)
      (VP (VB work)))
    (. .)))

nsubj(work-6, Healthcare-1)
prep_in(Healthcare-1, Europe-3)
aux(work-6, does-4)
neg(work-6, not-5)
root(ROOT-0, work-6)

(ROOT
  (S
    (S
      (INTJ (RB Sure))
      (, ,)
      (NP (NN everyone))
      (VP (VBZ has)
        (NP (PRP it))))
    (CC but)
    (S
      (NP (DT the) (NN quality))
      (VP (VBZ is)
        (ADJP (JJ poor))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD can) (RB not)
        (VP (VB get)
          (NP (JJ prompt) (NN care))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (VBP are)
                (ADJP (RB really) (JJ sick))))))))
    (. .)))

dep(has-4, Sure-1)
nsubj(has-4, everyone-3)
root(ROOT-0, has-4)
dobj(has-4, it-5)
det(quality-8, the-7)
nsubj(poor-10, quality-8)
cop(poor-10, is-9)
conj_but(has-4, poor-10)
nsubj(get-15, they-12)
aux(get-15, can-13)
neg(get-15, not-14)
conj_and(has-4, get-15)
amod(care-17, prompt-16)
dobj(get-15, care-17)
advmod(sick-22, when-18)
nsubj(sick-22, they-19)
cop(sick-22, are-20)
advmod(sick-22, really-21)
advcl(get-15, sick-22)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB dole)
            (PRT (RP out))
            (NP
              (NP (`` ``) (JJ free) ('' '') (NN healthcare))
              (PP (TO to)
                (NP (DT all))))))))
    (. ?)))

nsubj(want-2, You-1)
xsubj(dole-4, You-1)
root(ROOT-0, want-2)
aux(dole-4, to-3)
xcomp(want-2, dole-4)
prt(dole-4, out-5)
amod(healthcare-9, free-7)
dobj(dole-4, healthcare-9)
prep_to(healthcare-9, all-11)

(ROOT
  (S
    (ADVP (RB Then))
    (NP
      (NP (NN quality) (NN care))
      (PP (IN for)
        (NP (DT the) (JJ major) (NNS illnesses))))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB compromise))))))
    (. .)))

advmod(is-8, Then-1)
nn(care-3, quality-2)
nsubj(is-8, care-3)
det(illnesses-7, the-5)
amod(illnesses-7, major-6)
prep_for(care-3, illnesses-7)
root(ROOT-0, is-8)
dobj(compromise-12, what-9)
nsubj(compromise-12, you-10)
aux(compromise-12, will-11)
ccomp(is-8, compromise-12)

