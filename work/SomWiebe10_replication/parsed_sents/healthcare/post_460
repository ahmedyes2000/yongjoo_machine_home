(ROOT
  (S
    (NP
      (NP (NNP Redistribution))
      (PP (IN of)
        (NP (NN wealth))))
    (VP (VBZ is)
      (NP (NN something))
      (SBAR (IN that)
        (S
          (NP (NNPS Democrats))
          (VP (VBD made)
            (PRT (RP up))))))
    (. .)))

nsubj(something-5, Redistribution-1)
prep_of(Redistribution-1, wealth-3)
cop(something-5, is-4)
root(ROOT-0, something-5)
complm(made-8, that-6)
nsubj(made-8, Democrats-7)
ccomp(something-5, made-8)
prt(made-8, up-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (VP (VBN called) (`` ``)
        (S
          (S
            (VP (VBG taking)
              (PP (IN from)
                (NP (DT the) (JJ rich)))))
          (CC and)
          (S
            (VP (VBG giving)
              (PP (TO to)
                (NP (DT the) (JJ poor))))))
        ('' '')))
    (. .)))

nsubjpass(called-3, It-1)
auxpass(called-3, 's-2)
root(ROOT-0, called-3)
dep(called-3, taking-5)
det(rich-8, the-7)
prep_from(taking-5, rich-8)
dep(called-3, giving-10)
conj_and(taking-5, giving-10)
det(poor-13, the-12)
prep_to(giving-10, poor-13)

(ROOT
  (S (CC And)
    (NP (RB yes))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (ADJP (JJ bad)))
    (. .)))

cc(bad-6, And-1)
nsubj(bad-6, yes-2)
nsubj(bad-6, that-4)
cop(bad-6, 's-5)
root(ROOT-0, bad-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN equivalent))
        (PP (IN of)
          (S
            (VP (VBG stealing))))))
    (. .)))

nsubj(equivalent-4, It-1)
cop(equivalent-4, 's-2)
det(equivalent-4, the-3)
root(ROOT-0, equivalent-4)
prepc_of(equivalent-4, stealing-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP
          (NP (DT no) (NN problem))
          (PP (IN with)
            (NP (JJ Progressive) (NN taxing))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do)
        (VP (VB have)
          (NP (DT a) (NN problem))
          (PP (IN with)
            (S
              (VP (VBG redistributing)
                (NP (PRP it))
                (PP (TO to)
                  (NP (JJ poor) (NNS people)))))))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(problem-4, no-3)
dobj(have-2, problem-4)
amod(taxing-7, Progressive-6)
prep_with(problem-4, taxing-7)
nsubj(have-12, I-10)
aux(have-12, do-11)
conj_but(have-2, have-12)
det(problem-14, a-13)
dobj(have-12, problem-14)
prepc_with(have-12, redistributing-16)
dobj(redistributing-16, it-17)
amod(people-20, poor-19)
prep_to(redistributing-16, people-20)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP (DT the) (NNP Constitution))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB still))
      (ADJP (JJ important)
        (S
          (VP (TO to)
            (VP (VB follow)
              (NP (PRP it)))))))
    (. .)))

prepc_as_for(important-9, for-2)
det(Constitution-4, the-3)
pobj(important-9, Constitution-4)
nsubj(important-9, it-6)
cop(important-9, is-7)
advmod(important-9, still-8)
root(ROOT-0, important-9)
aux(follow-11, to-10)
xcomp(important-9, follow-11)
dobj(follow-11, it-12)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB never))
    (VP (VBD said)
      (PP (IN in)
        (NP (DT the) (NNP Constitution)))
      (SBAR (IN that)
        (S
          (NP (NNS blacks))
          (VP (MD must)
            (VP (VB remain)
              (NP (NNS slaves)))))))
    (. .)))

nsubj(said-3, It-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
det(Constitution-6, the-5)
prep_in(said-3, Constitution-6)
complm(slaves-11, that-7)
nsubj(slaves-11, blacks-8)
aux(slaves-11, must-9)
cop(slaves-11, remain-10)
ccomp(said-3, slaves-11)

(ROOT
  (S (IN So)
    (NP
      (NP (PRP$ your) (NN argument))
      (PP (IN on)
        (S
          (VP (VBG changing)
            (NP (DT the) (NNP Constitution))))))
    (VP (VBZ is)
      (ADJP (JJ moot)))
    (. .)))

dep(moot-9, So-1)
poss(argument-3, your-2)
nsubj(moot-9, argument-3)
prepc_on(argument-3, changing-5)
det(Constitution-7, the-6)
dobj(changing-5, Constitution-7)
cop(moot-9, is-8)
root(ROOT-0, moot-9)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (RB later))
      (VP (VBD added)
        (NP (NNS amendments))
        (SBAR (IN in) (NN order)
          (S
            (VP (TO to)
              (VP (VB assure)
                (NP (NNS blacks) (NNS rights))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ is) (RB not)
        (VP (VBG DELETING)
          (NP
            (NP (NNS things))
            (, ,)
            (PP (JJ such) (IN as)
              (NP (`` ``) (JJ illegal) (NN search)
                (CC and)
                (JJ SEIZURE) ('' '')))))))
    (. .)))

nsubj(added-3, We-1)
advmod(added-3, later-2)
root(ROOT-0, added-3)
dobj(added-3, amendments-4)
mark(assure-8, in-5)
dep(assure-8, order-6)
aux(assure-8, to-7)
purpcl(added-3, assure-8)
nn(rights-10, blacks-9)
dobj(assure-8, rights-10)
nsubj(DELETING-16, that-13)
aux(DELETING-16, is-14)
neg(DELETING-16, not-15)
conj_but(added-3, DELETING-16)
dobj(DELETING-16, things-17)
amod(search-23, illegal-22)
prep_such_as(things-17, search-23)
prep_such_as(things-17, SEIZURE-25)
conj_and(search-23, SEIZURE-25)

