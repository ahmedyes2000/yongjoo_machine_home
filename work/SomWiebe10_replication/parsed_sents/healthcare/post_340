(ROOT
  (S
    (S
      (VP (VBG Being)
        (NP (DT a) (JJ poor) (NN student))))
    (VP (VBZ sucks))
    (. .)))

cop(student-4, Being-1)
det(student-4, a-2)
amod(student-4, poor-3)
csubj(sucks-5, student-4)
root(ROOT-0, sucks-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP agree) (, ,)
        (S
          (NP (PRP I))
          (VP (VB know)
            (NP (DT the) (NN pain))))))
    (, ,)
    (NP (PRP$ my) (NN student) (NNS loans))
    (VP (VBP speak)
      (PP (IN for)
        (NP (PRP themselves))))
    (. .)))

nsubj(agree-2, I-1)
ccomp(speak-12, agree-2)
nsubj(know-5, I-4)
ccomp(agree-2, know-5)
det(pain-7, the-6)
dobj(know-5, pain-7)
poss(loans-11, my-9)
nn(loans-11, student-10)
nsubj(speak-12, loans-11)
root(ROOT-0, speak-12)
prep_for(speak-12, themselves-14)

(ROOT
  (S
    (NP (NNP Maternity))
    (VP (VBP leave)
      (PP (IN for)
        (NP (DT a) (NN year))))
    (. .)))

nsubj(leave-2, Maternity-1)
root(ROOT-0, leave-2)
det(year-5, a-4)
prep_for(leave-2, year-5)

(ROOT
  (S
    (NP (CD Two) (NNS weeks))
    (VP (VBD paid)
      (NP (NN vacation))
      (NP (DT a) (NN year)))
    (. .)))

num(weeks-2, Two-1)
nsubj(paid-3, weeks-2)
root(ROOT-0, paid-3)
dobj(paid-3, vacation-4)
det(year-6, a-5)
tmod(paid-3, year-6)

(ROOT
  (S (IN So)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (VP (VBD added)
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (DT that) (NN stuff))))
          (PP (IN onto)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP pay)
                  (PP (IN in)
                    (NP (NNS taxes))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD 'd)
      (VP (VB find)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (ADVP (RB actually))
            (VP (VBP do) (RB n't)
              (VP (VB pay)
                (ADVP (RB as) (RB much)
                  (PP (IN for)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP you))
                        (VP (VBP get)
                          (SBAR (IN as)
                            (S
                              (NP (DT a) (JJ french) (NN person))
                              (VP (VBZ does)))))))))))))))
    (. .)))

dep(find-18, So-1)
mark(added-4, if-2)
nsubj(added-4, we-3)
advcl(find-18, added-4)
dobj(added-4, all-5)
det(stuff-8, that-7)
prep_of(all-5, stuff-8)
dobj(pay-12, what-10)
nsubj(pay-12, you-11)
prepc_onto(added-4, pay-12)
prep_in(pay-12, taxes-14)
nsubj(find-18, you-16)
aux(find-18, 'd-17)
root(ROOT-0, find-18)
complm(pay-24, that-19)
nsubj(pay-24, you-20)
advmod(pay-24, actually-21)
aux(pay-24, do-22)
neg(pay-24, n't-23)
ccomp(find-18, pay-24)
advmod(much-26, as-25)
advmod(pay-24, much-26)
dep(get-30, what-28)
dobj(does-35, what-28)
nsubj(get-30, you-29)
prepc_for(much-26, get-30)
mark(does-35, as-31)
det(person-34, a-32)
amod(person-34, french-33)
nsubj(does-35, person-34)
advcl(get-30, does-35)

(ROOT
  (S
    (ADVP (RB Now))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (MD can)
          (VP (VB argue)
            (PP (IN against)
              (NP (NNP UHC)))
            (PP (IN on)
              (NP (CD two) (NNS fronts))))))
      (, ,))
    (NP (PRP it))
    (VP (VBZ seems)
      (PP (TO to)
        (NP (PRP me))))
    (. .)))

advmod(seems-13, Now-1)
nsubj(argue-5, you-3)
aux(argue-5, can-4)
parataxis(seems-13, argue-5)
prep_against(argue-5, UHC-7)
num(fronts-10, two-9)
prep_on(argue-5, fronts-10)
nsubj(seems-13, it-12)
root(ROOT-0, seems-13)
prep_to(seems-13, me-15)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ first))
      (SBAR
        (S
          (VP (VBZ is)
            (VP (VBG practical) (, ,)
              (ADVP (CC or))
              ('' '')
              (NP (DT This) (NN plan)))))))
    (VP (MD wo) (RB n't)
      (VP (VB work)))
    (. !)))

det(first-2, The-1)
nsubj(work-12, first-2)
aux(practical-4, is-3)
rcmod(first-2, practical-4)
advmod(practical-4, or-6)
det(plan-9, This-8)
dobj(practical-4, plan-9)
aux(work-12, wo-10)
neg(work-12, n't-11)
root(ROOT-0, work-12)

(ROOT
  (S
    (NP (DT The) (NN second))
    (VP (VBZ is)
      (SBAR
        (SBAR
          (S
            (NP (JJ ideological))
            (, ,)
            (S
              (VP (VB be)
                (NP
                  (NP (DT that))
                  ('' '')
                  (SBAR
                    (S
                      (NP (DT This))
                      (VP (VBZ is)
                        (ADJP (JJ immoral) ('' ''))
                        (ADVP (CC or))))))))
            ('' '')
            (NP (DT This))
            (VP (VBZ is)
              (NP (NNP Unamerican)))))
        ('' '')
        (CC or)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBP have)
              (NP (PRP you)))))))
    (. .)))

det(second-2, The-1)
nsubj(is-3, second-2)
root(ROOT-0, is-3)
nsubj(Unamerican-17, ideological-4)
cop(that-7, be-6)
ccomp(Unamerican-17, that-7)
nsubj(immoral-11, This-9)
cop(immoral-11, is-10)
rcmod(that-7, immoral-11)
advmod(immoral-11, or-13)
nsubj(Unamerican-17, This-15)
cop(Unamerican-17, is-16)
dep(is-3, Unamerican-17)
nsubj(have-21, what-20)
dep(is-3, have-21)
conj_or(Unamerican-17, have-21)
dobj(have-21, you-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB take)
                    (NP (DT the) (JJ latter) (NN side))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(trying-5, you-3)
xsubj(take-7, you-3)
aux(trying-5, 're-4)
ccomp(think-2, trying-5)
aux(take-7, to-6)
xcomp(trying-5, take-7)
det(side-10, the-8)
amod(side-10, latter-9)
dobj(take-7, side-10)

(ROOT
  (S (CC So)
    (NP (PRP$ my) (NN question))
    (VP (VBZ is) (, ,)
      (SBARQ
        (WHADVP (WRB how))
        (SQ (VBZ is)
          (NP
            (NP (DT this) (JJ different))
            (PP (IN than)
              (PRN (, ,)
                (INTJ (VB say))
                (, ,))
              (NP
                (NP (DT the) (NN fire) (NN department))
                (CC or)
                (NP (DT the) (NN army))))))
        (. ?)))))

cc(is-4, So-1)
poss(question-3, my-2)
nsubj(is-4, question-3)
root(ROOT-0, is-4)
advmod(is-7, how-6)
dep(is-4, is-7)
det(different-9, this-8)
nsubj(is-7, different-9)
dep(different-9, say-12)
det(department-16, the-14)
nn(department-16, fire-15)
prep_than(different-9, department-16)
det(army-19, the-18)
prep_than(different-9, army-19)
conj_or(department-16, army-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB never))
      (VP (VBN needed)
        (S
          (VP (TO to)
            (VP (VB call)
              (NP
                (NP (DT either))
                (PP (IN of)
                  (NP (DT those))))
              (PP (IN in))
              (S
                (VP (TO to)
                  (VP (VB rescue)
                    (S
                      (NP (NNP \))
                      (VP (VB invade)
                        (NP (NN something))))))))))))
    (. .)))

nsubj(needed-4, I-1)
xsubj(call-6, I-1)
aux(needed-4, 've-2)
neg(needed-4, never-3)
root(ROOT-0, needed-4)
aux(call-6, to-5)
xcomp(needed-4, call-6)
dobj(call-6, either-7)
prep_of(either-7, those-9)
prep(call-6, in-10)
aux(rescue-12, to-11)
xcomp(call-6, rescue-12)
nsubj(invade-14, \-13)
ccomp(rescue-12, invade-14)
dobj(invade-14, something-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP spend)
      (ADJP (JJ much))
      (, ,)
      (ADJP
        (ADJP (RB much) (JJR more)
          (PP (IN on)
            (NP (DT those))))
        (SBAR (IN than)
          (S
            (NP (PRP I))
            (VP (VBP do)
              (PP (IN on)
                (NP (NN health) (NN care))))))))
    (. .)))

nsubj(spend-2, I-1)
root(ROOT-0, spend-2)
acomp(spend-2, much-3)
advmod(more-6, much-5)
acomp(spend-2, more-6)
prep_on(more-6, those-8)
mark(do-11, than-9)
nsubj(do-11, I-10)
dep(more-6, do-11)
nn(care-14, health-13)
prep_on(do-11, care-14)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP (DT that))
      (ADJP (JJ fair)))
    (. ?)))

advmod(fair-4, How-1)
cop(fair-4, is-2)
nsubj(fair-4, that-3)
root(ROOT-0, fair-4)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (VP (VBP ask)
      (NP (DT a) (JJ valid) (NN question)))
    (. .)))

cc(ask-3, But-1)
nsubj(ask-3, you-2)
root(ROOT-0, ask-3)
det(question-6, a-4)
amod(question-6, valid-5)
dobj(ask-3, question-6)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP we))
      (VP (VB pay)
        (PP (IN for)
          (NP
            (NP (NN something))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP do) (RB n't)
                  (VP (VB ourselves)
                    (NP (NN use))))))))))
    (. ?)))

advmod(pay-4, Why-1)
aux(pay-4, should-2)
nsubj(pay-4, we-3)
root(ROOT-0, pay-4)
prep_for(pay-4, something-6)
nsubj(ourselves-10, we-7)
aux(ourselves-10, do-8)
neg(ourselves-10, n't-9)
rcmod(something-6, ourselves-10)
dobj(ourselves-10, use-11)

(ROOT
  (S
    (NP (DT This))
    (, ,)
    (PP
      (ADVP (RB unfortunately))
      (IN for)
      (NP (PRP us) (RB as) (NNS individuals)))
    (, ,)
    (VP (VBZ is)
      (ADVP (RB just))
      (NP
        (NP (NN sort))
        (PP (IN of)
          (NP
            (NP (DT the) (NN way))
            (SBAR
              (S
                (NP (NNS things))
                (VP (VBP work)
                  (PRT (RP out)))))))))
    (. .)))

nsubj(sort-11, This-1)
advmod(sort-11, unfortunately-3)
dep(individuals-7, us-5)
advmod(individuals-7, as-6)
prep_for(sort-11, individuals-7)
cop(sort-11, is-9)
advmod(sort-11, just-10)
root(ROOT-0, sort-11)
det(way-14, the-13)
prep_of(sort-11, way-14)
dobj(work-16, way-14)
nsubj(work-16, things-15)
rcmod(way-14, work-16)
prt(work-16, out-17)

(ROOT
  (S
    (NP (DT The)
      (ADJP (JJR higher))
      (NNS taxes) (NN thing))
    (VP (VBZ is)
      (ADJP (JJ debatable)))
    (. .)))

det(thing-4, The-1)
amod(thing-4, higher-2)
nn(thing-4, taxes-3)
nsubj(debatable-6, thing-4)
cop(debatable-6, is-5)
root(ROOT-0, debatable-6)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (ADVP
          (ADVP (RB so) (RB much))
          (PP (IN about)
            (NP (NN country) (NNS charges))))
        (NP
          (NP (DT the) (JJS highest) (NN percentage))
          (PP (IN of)
            (NP
              (NP (NN income))
              (PP (IN on)
                (NP
                  (NP (NN average))
                  (PP (IN per)
                    (NP (NN citizen))))))))))
    (, ,)
    (NP (PRP you))
    (ADVP (RB also))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB take)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ 's)
                  (VP (VBN provided)
                    (PP (IN into)
                      (NP (NN account)))))))))))
    (. .)))

nsubj(percentage-11, It-1)
cop(percentage-11, 's-2)
neg(percentage-11, not-3)
advmod(much-5, so-4)
advmod(percentage-11, much-5)
nn(charges-8, country-7)
prep_about(much-5, charges-8)
det(percentage-11, the-9)
amod(percentage-11, highest-10)
ccomp(have-21, percentage-11)
prep_of(percentage-11, income-13)
prep_on(income-13, average-15)
prep_per(average-15, citizen-17)
nsubj(have-21, you-19)
xsubj(take-23, you-19)
advmod(have-21, also-20)
root(ROOT-0, have-21)
aux(take-23, to-22)
xcomp(have-21, take-23)
nsubjpass(provided-26, what-24)
auxpass(provided-26, 's-25)
ccomp(take-23, provided-26)
prep_into(provided-26, account-28)

(ROOT
  (S
    (NP (NNP France))
    (VP (VBZ is)
      (ADVP (RB often))
      (VP (VBN cited)
        (PP (IN as)
          (NP (JJ high) (NN tax) (NN hell)))))
    (. .)))

nsubjpass(cited-4, France-1)
auxpass(cited-4, is-2)
advmod(cited-4, often-3)
root(ROOT-0, cited-4)
amod(hell-8, high-6)
nn(hell-8, tax-7)
prep_as(cited-4, hell-8)

(ROOT
  (S (RB So)
    (VP
      (VP (VB take)
        (NP (PRP$ your) (NNS taxes)))
      (, ,)
      (CC but)
      (VP (VB add)
        (NP (DT this) (NN stuff))
        (PP (TO to)
          (NP (PRP them)))))
    (. .)))

advmod(take-2, So-1)
root(ROOT-0, take-2)
poss(taxes-4, your-3)
dobj(take-2, taxes-4)
conj_but(take-2, add-7)
det(stuff-9, this-8)
dobj(add-7, stuff-9)
prep_to(add-7, them-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NN cost))
      (PP (IN of)
        (NP (NN health))))
    (VP (VBP care))
    (. .)))

det(cost-2, The-1)
nsubj(care-5, cost-2)
prep_of(cost-2, health-4)
root(ROOT-0, care-5)

(ROOT
  (NP
    (NP
      (NP (DT The) (NN cost))
      (PP (IN of)
        (NP (NN university))))
    (: --)
    (SBAR
      (WHNP (WDT whatever) (NN one))
      (S
        (NP (PRP you))
        (VP (MD can)
          (VP (VB get)
            (PP (IN into))
            (, ,)
            (SBAR (RB even)
              (S
                (NP (NNP Yale)
                  (CC or)
                  (NNP Princeton))))))))
    (. .)))

det(cost-2, The-1)
root(ROOT-0, cost-2)
prep_of(cost-2, university-4)
det(one-7, whatever-6)
rel(get-10, one-7)
nsubj(get-10, you-8)
aux(get-10, can-9)
rcmod(cost-2, get-10)
prep(get-10, into-11)
advmod(Yale-14, even-13)
dep(get-10, Yale-14)
dep(get-10, Princeton-16)
conj_or(Yale-14, Princeton-16)

