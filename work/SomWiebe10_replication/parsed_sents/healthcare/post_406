(ROOT
  (S
    (NP (NNP Public) (NN spending))
    (VP (VBZ is)
      (ADVP (RB already))
      (NP
        (NP (CD 50) (NN %))
        (PP (IN of)
          (NP (NN health) (NN care) (JJ related) (NNS costs)))))
    (. .)))

nn(spending-2, Public-1)
nsubj(%-6, spending-2)
cop(%-6, is-3)
advmod(%-6, already-4)
num(%-6, 50-5)
root(ROOT-0, %-6)
nn(costs-11, health-8)
nn(costs-11, care-9)
amod(costs-11, related-10)
prep_of(%-6, costs-11)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ means)
        (S
          (NP (PRP we))
          (VP
            (ADVP (RB already))
            (VB spend)
            (NP
              (NP (JJR more))
              (PP (IN per)
                (NP (NN person))))
            (SBAR (IN than)
              (S
                (NP
                  (NP (NNP France))
                  (, ,)
                  (NP (NNP Canada))
                  (CC or)
                  (NP (DT the) (NNP UK)))
                (VP (VBZ does))))))))
    (: ...)
    (S
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (ADVP (RB only))
      (NP (NNP Germany)
        (CC and)
        (NNP Iceland))
      (VP (VBP spend)
        (ADVP (RBR more)
          (PP (IN per)
            (NP (NN person))))
        (PP (IN than)
          (NP (DT the) (NNP United) (NNPS States)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP it))
            (VP (VBZ comes)
              (PP (TO to)
                (NP (JJ public) (NN funding))))))))
    (. .)))

nsubj(means-2, That-1)
root(ROOT-0, means-2)
nsubj(spend-5, we-3)
advmod(spend-5, already-4)
ccomp(means-2, spend-5)
dobj(spend-5, more-6)
prep_per(more-6, person-8)
mark(does-16, than-9)
nsubj(does-16, France-10)
conj_or(France-10, Canada-12)
nsubj(does-16, Canada-12)
det(UK-15, the-14)
conj_or(France-10, UK-15)
nsubj(does-16, UK-15)
advcl(spend-5, does-16)
prep_in(spend-25, fact-19)
advmod(spend-25, only-21)
nsubj(spend-25, Germany-22)
conj_and(Germany-22, Iceland-24)
nsubj(spend-25, Iceland-24)
parataxis(means-2, spend-25)
advmod(spend-25, more-26)
prep_per(more-26, person-28)
det(States-32, the-30)
nn(States-32, United-31)
prep_than(spend-25, States-32)
advmod(comes-35, when-33)
nsubj(comes-35, it-34)
advcl(spend-25, comes-35)
amod(funding-38, public-37)
prep_to(comes-35, funding-38)

(ROOT
  (S
    (NP (NNP http:\/\/www.nationmaster.com\/graph\/hea_hea_car_fun_pub_per_cap-care-funding-public-per-capita))
    (ADVP (RB So))
    (SBAR (RB even) (IN if)
      (S
        (NP (PRP we))
        (VP (VBP assume)
          (NP (DT the) (NNS metrics) (PRP you))
          (PP (VBD provided)
            (SBAR
              (S
                (VP (VBP are)
                  (ADVP (RB actually))
                  (VP (VBN related)
                    (PP (TO to)
                      (NP (NN health) (NN care))))))))
          (, ,)
          (SBAR (IN as)
            (S
              (VP (VBD opposed)
                (NP
                  (NP (NN something) (RB else))
                  (PP (IN like)
                    (NP (NN lifestyle)
                      (CC and)
                      (NN crime))))))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB simply))
    (VP (VBZ does) (RB n't)
      (VP (VB follow)
        (SBAR (IN that)
          (S
            (NP
              (NP (JJR more) (NN government))
              (VP (VBG funding)))
            (VP (MD will)
              (VP (VB fix)
                (NP (DT the) (NN problem))))))))
    (. .)))

nsubj(follow-31, http:\/\/www.nationmaster.com\/graph\/hea_hea_car_fun_pub_per_cap-care-funding-public-per-capita-1)
advmod(follow-31, So-2)
advmod(assume-6, even-3)
dep(assume-6, if-4)
nsubj(assume-6, we-5)
dep(follow-31, assume-6)
det(metrics-8, the-7)
dobj(assume-6, metrics-8)
dep(metrics-8, you-9)
prep(assume-6, provided-10)
auxpass(related-13, are-11)
advmod(related-13, actually-12)
dep(provided-10, related-13)
nn(care-16, health-15)
prep_to(related-13, care-16)
mark(opposed-19, as-18)
advcl(assume-6, opposed-19)
dobj(opposed-19, something-20)
advmod(something-20, else-21)
prep_like(something-20, lifestyle-23)
prep_like(something-20, crime-25)
conj_and(lifestyle-23, crime-25)
nsubj(follow-31, it-27)
advmod(follow-31, simply-28)
aux(follow-31, does-29)
neg(follow-31, n't-30)
root(ROOT-0, follow-31)
complm(fix-37, that-32)
amod(government-34, more-33)
nsubj(fix-37, government-34)
partmod(government-34, funding-35)
aux(fix-37, will-36)
ccomp(follow-31, fix-37)
det(problem-39, the-38)
dobj(fix-37, problem-39)

