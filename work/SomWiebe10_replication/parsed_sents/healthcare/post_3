(ROOT
  (SINV
    (VP (VBG Choosing)
      (PP (IN between)
        (NP (JJ complicated) (NN health) (NN insurance) (NNS plans))))
    (VP (VBZ is)
      (ADJP (JJ difficult)))
    (NP
      (NP (NNP John) (NNP Holahan))
      (CC and)
      (NP (NNP Linda) (NNP Blumberg)))
    (. .)))

root(ROOT-0, Choosing-1)
amod(plans-6, complicated-3)
nn(plans-6, health-4)
nn(plans-6, insurance-5)
prep_between(Choosing-1, plans-6)
cop(difficult-8, is-7)
aux(Choosing-1, difficult-8)
nn(Holahan-10, John-9)
nsubj(Choosing-1, Holahan-10)
nn(Blumberg-13, Linda-12)
nsubj(Choosing-1, Blumberg-13)
conj_and(Holahan-10, Blumberg-13)

(ROOT
  (NP ('' '')
    (CC Is)
    (NP
      (NP (DT the) (NNP Public) (NNP Plan))
      (VP (VBG Option)
        (NP
          (NP (DT a) (NNP Necessary) (NN Part))
          (PP (IN of)
            (NP (NNP Health) (NNP Reform))))))
    (. ?)))

cc(Plan-5, Is-2)
det(Plan-5, the-3)
nn(Plan-5, Public-4)
root(ROOT-0, Plan-5)
partmod(Plan-5, Option-6)
det(Part-9, a-7)
nn(Part-9, Necessary-8)
dobj(Option-6, Part-9)
nn(Reform-12, Health-11)
prep_of(Part-9, Reform-12)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP
          (NP (NNP Urban) (NNP Institute))
          (: :)
          (S (`` ``)
            (NP (EX there))
            (VP (VBZ is)
              (NP (JJ considerable) (NN variation)))))
        (PP (IN in)
          (NP (NN health) (NN insurance) (NNS products))))
      (VP (VBD sold)))
    (, ,)
    (CC and)
    (S
      (NP (NNS consumers))
      (VP (VBP have)
        (NP
          (NP (JJ great) (NN difficulty))
          (PP (IN in)
            (S
              (VP (VBG making)
                (NP (NN price)
                  (CC and)
                  (NN quality) (NNS comparisons))))))))
    (. .)))

nn(Institute-3, Urban-2)
nsubj(sold-14, Institute-3)
expl(is-7, there-6)
dep(Institute-3, is-7)
amod(variation-9, considerable-8)
nsubj(is-7, variation-9)
nn(products-13, health-11)
nn(products-13, insurance-12)
prep_in(Institute-3, products-13)
root(ROOT-0, sold-14)
nsubj(have-18, consumers-17)
conj_and(sold-14, have-18)
amod(difficulty-20, great-19)
dobj(have-18, difficulty-20)
prepc_in(difficulty-20, making-22)
nn(comparisons-26, price-23)
conj_and(price-23, quality-25)
nn(comparisons-26, quality-25)
dobj(making-22, comparisons-26)

(ROOT
  (S
    (NP (DT This))
    (VP
      (VP (VBZ is)
        (ADJP (RB especially) (JJ true))
        (PP (IN in)
          (NP (DT the) (JJ private) (NN nongroup) (NN insurance) (NN market))))
      (, ,)
      (CC but)
      (VP (VBZ is)
        (ADJP (RB increasingly) (JJ true)
          (PP (IN in)
            (NP (JJ commercial) (NN group) (NN insurance))))
        (PP (IN as)
          (ADVP (RB well)))))
    (. .)))

nsubj(true-4, This-1)
nsubj(true-15, This-1)
cop(true-4, is-2)
advmod(true-4, especially-3)
root(ROOT-0, true-4)
det(market-10, the-6)
amod(market-10, private-7)
nn(market-10, nongroup-8)
nn(market-10, insurance-9)
prep_in(true-4, market-10)
cop(true-15, is-13)
advmod(true-15, increasingly-14)
conj_but(true-4, true-15)
amod(insurance-19, commercial-17)
nn(insurance-19, group-18)
prep_in(true-15, insurance-19)
prep(true-15, as-20)
pcomp(as-20, well-21)

(ROOT
  (S
    (S
      (VP (VBG -RRB-)
        (NP
          (NP (DT The) (NNS products))
          (VP (VBN offered)
            (PP (IN by)
              (NP
                (NP (NNS sellers))
                (PP (IN in)
                  (NP (NN insurance)
                    (CC and)
                    (NN hospital) (NNS markets)))))))))
    (VP (VBP are)
      (ADJP (JJ complex)
        (CC and)
        (JJ difficult)
        (S
          (VP (TO to)
            (VP (VB understand)
              (CC and)
              (VB evaluate))))))
    (. .)))

det(products-3, The-2)
csubj(complex-13, products-3)
csubj(difficult-15, products-3)
partmod(products-3, offered-4)
agent(offered-4, sellers-6)
nn(markets-11, insurance-8)
conj_and(insurance-8, hospital-10)
nn(markets-11, hospital-10)
prep_in(sellers-6, markets-11)
cop(complex-13, are-12)
root(ROOT-0, complex-13)
conj_and(complex-13, difficult-15)
aux(understand-17, to-16)
xcomp(complex-13, understand-17)
xcomp(complex-13, evaluate-19)
conj_and(understand-17, evaluate-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB almost) (JJ impossible))
      (S
        (VP (TO to)
          (VP (VB compare)
            (NP
              (NP (NNS prices))
              (PP (IN of)
                (NP
                  (NP (DT either) (NN insurance) (NNS products)
                    (CC or)
                    (NNS services))
                  (VP (VBN provided)
                    (PP (IN by)
                      (NP
                        (NP (NNS hospitals))
                        (CC and)
                        (NP (JJ other) (NN health) (NNS providers))))))))))))
    (. .)))

nsubj(impossible-4, It-1)
xsubj(compare-6, It-1)
cop(impossible-4, is-2)
advmod(impossible-4, almost-3)
root(ROOT-0, impossible-4)
aux(compare-6, to-5)
xcomp(impossible-4, compare-6)
dobj(compare-6, prices-7)
preconj(products-11, either-9)
nn(products-11, insurance-10)
prep_of(prices-7, products-11)
prep_of(prices-7, services-13)
conj_or(products-11, services-13)
partmod(products-11, provided-14)
agent(provided-14, hospitals-16)
amod(providers-20, other-18)
nn(providers-20, health-19)
agent(provided-14, providers-20)
conj_and(hospitals-16, providers-20)

(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (DT The) (NN status) (NN quo))
    (PRN (, ,)
      (ADVP (RB therefore))
      (, ,))
    (VP (VBZ offers)
      (NP (RB little) (`` ``) (JJ reasoned) (NN choice) ('' '')))
    (. .)))

det(quo-5, The-3)
nn(quo-5, status-4)
nsubj(offers-9, quo-5)
dep(offers-9, therefore-7)
root(ROOT-0, offers-9)
advmod(choice-13, little-10)
amod(choice-13, reasoned-12)
dobj(offers-9, choice-13)

(ROOT
  (S
    (NP (JJ Simple) (JJ public) (NN insurance))
    (VP (MD would)
      (VP (VB make)
        (S
          (NP (PRP it))
          (ADJP (RBR easier)))
        (PP (IN on)
          (NP (NNS consumers)))))
    (. .) (-RRB- -RRB-)))

amod(insurance-3, Simple-1)
amod(insurance-3, public-2)
nsubj(make-5, insurance-3)
aux(make-5, would-4)
root(ROOT-0, make-5)
nsubj(easier-7, it-6)
xcomp(make-5, easier-7)
prep_on(make-5, consumers-9)

