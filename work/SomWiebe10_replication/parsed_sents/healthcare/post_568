(ROOT
  (S
    (NP (PRP I))
    (VP (VBP agree)
      (PP (IN with)
        (NP (PRP$ your) (NN claim)))
      (, ,)
      (SBAR (`` ``)
        (S
          (PP (IN Throughout)
            (NP (DT the) (NNP Constitution)))
          (NP (DT the) (NNS founders))
          (VP (VBP use)
            (NP
              (ADJP (RB very) (JJ specific))
              (NNS terms))
            (S
              (VP (TO to)
                (VP (VB mean)
                  (NP
                    (ADJP (RB very) (JJ specific))
                    (NNS things)))))))))
    (. .)))

nsubj(agree-2, I-1)
root(ROOT-0, agree-2)
poss(claim-5, your-4)
prep_with(agree-2, claim-5)
det(Constitution-10, the-9)
prep_throughout(use-13, Constitution-10)
det(founders-12, the-11)
nsubj(use-13, founders-12)
ccomp(agree-2, use-13)
advmod(specific-15, very-14)
amod(terms-16, specific-15)
dobj(use-13, terms-16)
aux(mean-18, to-17)
xcomp(use-13, mean-18)
advmod(specific-20, very-19)
amod(things-21, specific-20)
dobj(mean-18, things-21)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (ADVP (RB also))
    (VP (VBP claim)
      (SBAR (IN that) (, ,) (`` ``)
        (S
          (S
            (VP (VB Promote)
              (S
                (NP (DT the) (JJ general) (NNP Welfare))
                (VP (SYM =)
                  (NP (DT all) (NNS laws\/regulations))))))
          (VP (MD should) (RB not)
            (VP (VB harm)
              (NP
                (NP (DT the) (NN country))
                ('' '')
                (SBAR
                  (S
                    (NP (NNP Dictionary.com))
                    (VP (VBZ defines)
                      (SBAR
                        (S
                          (NP (DT the) (NN term))
                          (VP (VBP promote) (: :)
                            (NP (CD 1))))))))))))))
    (. .)))

nsubj(claim-4, You-2)
advmod(claim-4, also-3)
root(ROOT-0, claim-4)
complm(harm-17, that-5)
csubj(harm-17, Promote-8)
det(Welfare-11, the-9)
amod(Welfare-11, general-10)
nsubj(laws\/regulations-14, Welfare-11)
dep(laws\/regulations-14, =-12)
det(laws\/regulations-14, all-13)
ccomp(Promote-8, laws\/regulations-14)
aux(harm-17, should-15)
neg(harm-17, not-16)
ccomp(claim-4, harm-17)
det(country-19, the-18)
dobj(harm-17, country-19)
nsubj(defines-22, Dictionary.com-21)
rcmod(country-19, defines-22)
det(term-24, the-23)
nsubj(promote-25, term-24)
ccomp(defines-22, promote-25)
dobj(promote-25, 1-27)

(ROOT
  (S
    (NP (NNP Dictionary.com))
    (VP (VBZ defines)
      (NP
        (NP (DT the) (NN term))
        (ADJP (JJ general)
          (NP (CD :1)))))
    (. .)))

nsubj(defines-2, Dictionary.com-1)
root(ROOT-0, defines-2)
det(term-4, the-3)
dobj(defines-2, term-4)
amod(term-4, general-5)
dep(general-5, :1-6)

(ROOT
  (NP
    (NP
      (PP (IN of)
        (NP
          (QP (CC or)
            (CD pertaining))))
      (PP (TO to)
        (NP
          (NP (DT all) (NNS persons)
            (CC or)
            (NNS things))
          (VP (VBG belonging)
            (PP (TO to)
              (NP (DT a) (NN group)
                (CC or)
                (NN category)))))))
    (: :)
    (NP
      (NP (DT a) (JJ general) (NN meeting))
      (PP (IN of)
        (NP (DT the) (NNS employees))))
    (. .)))

cc(pertaining-3, or-2)
prep_of(to-4, pertaining-3)
root(ROOT-0, to-4)
det(persons-6, all-5)
pobj(to-4, persons-6)
pobj(to-4, things-8)
conj_or(persons-6, things-8)
partmod(persons-6, belonging-9)
det(group-12, a-11)
prep_to(belonging-9, group-12)
prep_to(belonging-9, category-14)
conj_or(group-12, category-14)
det(meeting-18, a-16)
amod(meeting-18, general-17)
dep(to-4, meeting-18)
det(employees-21, the-20)
prep_of(meeting-18, employees-21)

(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))

root(ROOT-0, 2-1)

(ROOT
  (NP
    (NP
      (NP (IN of))
      (, ,)
      (UCP
        (VP (VBG pertaining)
          (PP (TO to)))
        (, ,)
        (CC or)
        (ADJP (JJ true)
          (PP (IN of)
            (NP
              (NP (JJ such) (NNS persons)
                (CC or)
                (NNS things))
              (PP (IN in)
                (NP (DT the) (JJ main)))))
          (, ,)
          (PP (IN with)
            (NP (JJ possible) (NNS exceptions))))))
    (: ;)
    (NP
      (NP (JJ common))
      (TO to)
      (NP (JJS most)))
    (: ;)
    (NP
      (NP (NNP prevalent))
      (: ;)
      (NP (JJ usual)))
    (: :)
    (NP
      (NP (DT the) (JJ general) (NN mood))
      (PP (IN of)
        (NP (DT the) (NNS people))))
    (. .)))

root(ROOT-0, of-1)
dep(of-1, pertaining-3)
prep(pertaining-3, to-4)
dep(of-1, true-7)
conj_or(pertaining-3, true-7)
amod(persons-10, such-9)
prep_of(true-7, persons-10)
prep_of(true-7, things-12)
conj_or(persons-10, things-12)
det(main-15, the-14)
prep_in(persons-10, main-15)
amod(exceptions-19, possible-18)
prep_with(true-7, exceptions-19)
dep(of-1, common-21)
dep(common-21, to-22)
dep(common-21, most-23)
dep(of-1, prevalent-25)
dep(prevalent-25, usual-27)
det(mood-31, the-29)
amod(mood-31, general-30)
dep(of-1, mood-31)
det(people-34, the-33)
prep_of(mood-31, people-34)

(ROOT
  (FRAG
    (NP (CD 3))
    (. .)))

root(ROOT-0, 3-1)

(ROOT
  (FRAG (RB not)
    (ADJP (JJ limited)
      (PP (TO to)
        (NP
          (NP (CD one) (NN class))
          (, ,)
          (NP (NN field))
          (, ,)
          (NP (NN product))
          (, ,)
          (NP
            (NP (NN service))
            (, ,)
            (NP (FW etc.)))
          (: ;)
          (NP (JJ miscellaneous))
          (: :)
          (NP (DT the) (JJ general) (NN public))
          (: ;)
          (NP (JJ general) (NN science)))))
    (. .)))

root(ROOT-0, not-1)
dep(not-1, limited-2)
num(class-5, one-4)
prep_to(limited-2, class-5)
appos(class-5, field-7)
appos(class-5, product-9)
appos(class-5, service-11)
appos(service-11, etc.-13)
dep(class-5, miscellaneous-15)
det(public-19, the-17)
amod(public-19, general-18)
dep(class-5, public-19)
amod(science-22, general-21)
dep(class-5, science-22)

(ROOT
  (FRAG
    (NP (CD 4))
    (. .)))

root(ROOT-0, 4-1)

(ROOT
  (S
    (S
      (VP (VBG considering)
        (CC or)
        (VBG dealing)
        (PP (IN with)
          (NP (JJ overall) (NNS characteristics)))))
    (, ,)
    (NP
      (NP (JJ universal) (NNS aspects))
      (, ,)
      (CC or)
      (NP (JJ important) (NNS elements))
      (, ,))
    (VP (VBP esp))
    (. .)))

partmod(esp-15, considering-1)
conj_or(considering-1, dealing-3)
partmod(esp-15, dealing-3)
amod(characteristics-6, overall-5)
prep_with(considering-1, characteristics-6)
amod(aspects-9, universal-8)
nsubj(esp-15, aspects-9)
amod(elements-13, important-12)
conj_or(aspects-9, elements-13)
nsubj(esp-15, elements-13)
root(ROOT-0, esp-15)

(ROOT
  (PP (IN without)
    (S
      (VP (VBG considering)
        (NP (PDT all)
          (NP
            (NP (NNS details))
            (CC or)
            (NP (JJ specific) (NNS aspects)))
          (: :)
          (NP
            (NP (JJ general) (NNS instructions))
            (: ;)
            (NP (DT a) (JJ general) (NN description)))
          (: ;)
          (NP
            (NP (DT a) (JJ general) (NN resemblance) (NN one))
            (PP (TO to)
              (NP (DT another)))))))
    (. .)))

root(ROOT-0, without-1)
pcomp(without-1, considering-2)
dep(details-4, all-3)
dobj(considering-2, details-4)
amod(aspects-7, specific-6)
dobj(considering-2, aspects-7)
conj_or(details-4, aspects-7)
amod(instructions-10, general-9)
dep(details-4, instructions-10)
det(description-14, a-12)
amod(description-14, general-13)
dep(instructions-10, description-14)
det(one-19, a-16)
amod(one-19, general-17)
nn(one-19, resemblance-18)
dep(details-4, one-19)
prep_to(one-19, another-21)

(ROOT
  (FRAG
    (NP (CD 5))
    (. .)))

root(ROOT-0, 5-1)

(ROOT
  (S
    (FRAG (RB not)
      (ADJP (JJ specific)
        (CC or)
        (JJ definite)))
    (: :)
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB give)
          (NP (PRP them))
          (NP
            (NP (RB only) (DT a) (JJ general) (NN idea))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD was)
                    (VP (VBG going)
                      (PRT (RP on)))))))))))
    (. .)))

dep(give-8, not-1)
dep(not-1, specific-2)
dep(not-1, definite-4)
conj_or(specific-2, definite-4)
nsubj(give-8, I-6)
aux(give-8, could-7)
root(ROOT-0, give-8)
iobj(give-8, them-9)
advmod(idea-13, only-10)
det(idea-13, a-11)
amod(idea-13, general-12)
dobj(give-8, idea-13)
nsubj(going-17, what-15)
aux(going-17, was-16)
prepc_of(idea-13, going-17)
prt(going-17, on-18)

(ROOT
  (S
    (VP (TO To)
      (VP
        (VP (VB help))
        (CC or)
        (VP (VB encourage)
          (S
            (VP (TO to)
              (VP (VB exist)
                (CC or)
                (VB flourish))))
          (: ;)
          (ADVP (RBR further))
          (: :)
          (S
            (VP (TO to)
              (VP (VB promote)
                (NP (NN world) (NN peace) (CD .2))))))))
    (. .)))

aux(help-2, To-1)
root(ROOT-0, help-2)
conj_or(help-2, encourage-4)
aux(exist-6, to-5)
xcomp(encourage-4, exist-6)
xcomp(encourage-4, flourish-8)
conj_or(exist-6, flourish-8)
advmod(encourage-4, further-10)
aux(promote-13, to-12)
parataxis(encourage-4, promote-13)
xcomp(encourage-4, promote-13)
nn(peace-15, world-14)
dobj(promote-13, peace-15)
num(peace-15, .2-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (S
            (VP (VBG promoting)
              (NP (JJ general) (NN welfare))))
          (VP (VBZ is) (RB not)
            (ADJP (JJ intended)
              (PP (IN for)
                (NP (DT the) (JJ federal) (NN government))))
            (ADVP (RB strictly))
            (ADJP (JJ due)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN use))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN term) (NN general))
                      (PP (RB instead) (IN of)
                        (S
                          (VP
                            (ADVP (RB simply))
                            (VBG stating))))
                      ('' '')
                      (VP (VBG Promoting)
                        (NP
                          (NP (DT the) (NN welfare))
                          (PP (IN of)
                            (NP (DT the) (JJ federal) (NN government))))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
complm(intended-9, that-3)
csubj(intended-9, promoting-4)
amod(welfare-6, general-5)
dobj(promoting-4, welfare-6)
cop(intended-9, is-7)
neg(intended-9, not-8)
ccomp(believe-2, intended-9)
det(government-13, the-11)
amod(government-13, federal-12)
prep_for(intended-9, government-13)
advmod(intended-9, strictly-14)
acomp(intended-9, due-15)
det(use-18, the-17)
prep_to(due-15, use-18)
det(general-22, the-20)
nn(general-22, term-21)
prep_of(use-18, general-22)
advmod(stating-26, simply-25)
prepc_instead_of(general-22, stating-26)
partmod(general-22, Promoting-28)
det(welfare-30, the-29)
dobj(Promoting-28, welfare-30)
det(government-34, the-32)
amod(government-34, federal-33)
prep_of(welfare-30, government-34)

(ROOT
  (S ('' '')
    (NP (NNP Promoting) (JJ general) (NN welfare))
    (VP (MD would)
      (VP (VB involve)
        (NP (JJR more))
        (PP (IN than)
          (S
            (ADVP (RB simply))
            (VP (VBG making)
              (ADJP (JJ sure)
                (SBAR
                  (S
                    (NP
                      (NP (DT the) (NNS law\/regulations))
                      (SBAR
                        (S
                          (NP (PRP we))
                          (VP (VBD put)
                            (PP (IN in)
                              (NP (NN place)))))))
                    (VP (VBP do) (`` ``)
                      (S
                        (VP (RB not) (VB harm)
                          (NP (DT the) (NN country)))))))))))))
    (. .)))

nn(welfare-4, Promoting-2)
amod(welfare-4, general-3)
nsubj(involve-6, welfare-4)
aux(involve-6, would-5)
root(ROOT-0, involve-6)
dobj(involve-6, more-7)
advmod(making-10, simply-9)
prepc_than(involve-6, making-10)
acomp(making-10, sure-11)
det(law\/regulations-13, the-12)
dobj(put-15, law\/regulations-13)
nsubj(do-18, law\/regulations-13)
nsubj(put-15, we-14)
rcmod(law\/regulations-13, put-15)
prep_in(put-15, place-17)
dep(sure-11, do-18)
neg(harm-21, not-20)
ccomp(do-18, harm-21)
det(country-23, the-22)
dobj(harm-21, country-23)

(ROOT
  (S ('' '')
    (S
      (NP (PRP You))
      (VP (VBP make)
        (SBAR
          (S
            (NP (DT the) (NN rash))
            (VP (VBP claim)
              (SBAR (IN that) (, ,) (`` ``)
                (S
                  (NP (NNP Everywhere) (NNP Universal) (NNP Health) (NNP Care))
                  (VP (VBZ has)
                    (VP (VBN been)
                      (VP (VBN tried)))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ has)
      (VP (VBN failed)))
    (. .)))

nsubj(make-3, You-2)
ccomp(failed-20, make-3)
det(rash-5, the-4)
nsubj(claim-6, rash-5)
ccomp(make-3, claim-6)
complm(tried-16, that-7)
nn(Care-13, Everywhere-10)
nn(Care-13, Universal-11)
nn(Care-13, Health-12)
nsubjpass(tried-16, Care-13)
aux(tried-16, has-14)
auxpass(tried-16, been-15)
ccomp(claim-6, tried-16)
nsubj(failed-20, it-18)
aux(failed-20, has-19)
root(ROOT-0, failed-20)

(ROOT
  (S
    (NP (NNP UHC))
    (ADVP (RB always))
    (VP (VBZ becomes)
      (NP
        (ADJP (JJ expensive) (, ,) (JJ restrictive)
          (CC and)
          (JJ lacks))
        (NN innovation)))
    (. .)))

nsubj(innovation-9, UHC-1)
advmod(innovation-9, always-2)
cop(innovation-9, becomes-3)
amod(innovation-9, expensive-4)
conj_and(expensive-4, restrictive-6)
amod(innovation-9, restrictive-6)
conj_and(expensive-4, lacks-8)
amod(innovation-9, lacks-8)
root(ROOT-0, innovation-9)

(ROOT
  (S ('' '')
    (NP (NNP Can) (PRP you))
    (VP (VBP expand)
      (PP (IN upon)
        (NP (CD one) (NN example)))
      (SBAR
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP it))
            (VP (VBZ has)
              (VP (VBN failed)))))
        (CC and)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP$ its) (NNS failings))
            (VP (VBD were))))))
    (. ?)))

nsubj(expand-4, Can-2)
dep(Can-2, you-3)
root(ROOT-0, expand-4)
num(example-7, one-6)
prep_upon(expand-4, example-7)
advmod(failed-11, where-8)
nsubj(failed-11, it-9)
aux(failed-11, has-10)
dep(expand-4, failed-11)
dobj(were-16, what-13)
poss(failings-15, its-14)
nsubj(were-16, failings-15)
dep(expand-4, were-16)
conj_and(failed-11, were-16)

(ROOT
  (S
    (VP (TO To)
      (VP (VB contribute)
        (PP (TO to)
          (NP
            (NP (DT the) (NN progress)
              (CC or)
              (NN growth))
            (PP (IN of))))
        (: ;)
        (ADVP (RBR further))))
    (. .)))

aux(contribute-2, To-1)
root(ROOT-0, contribute-2)
det(progress-5, the-4)
prep_to(contribute-2, progress-5)
prep_to(contribute-2, growth-7)
conj_or(progress-5, growth-7)
prep(progress-5, of-8)
advmod(contribute-2, further-10)

(ROOT
  (S
    (VP (VB See)
      (NP (NNS Synonyms))
      (PP (IN at)
        (NP (NN advance))))
    (. .)))

root(ROOT-0, See-1)
dobj(See-1, Synonyms-2)
prep_at(See-1, advance-4)

(ROOT
  (FRAG
    (NP (CD 3))
    (. .)))

root(ROOT-0, 3-1)

(ROOT
  (S
    (VP (TO To)
      (VP (VB urge)
        (S
          (NP
            (NP
              (NP (DT the) (NN adoption))
              (PP (IN of)))
            (: ;)
            (NP (NN advocate))
            (: :))
          (VP (VB promote)
            (NP (DT a) (JJ constitutional) (NN amendment) (CD .4))))))
    (. .)))

aux(urge-2, To-1)
root(ROOT-0, urge-2)
det(adoption-4, the-3)
nsubj(promote-9, adoption-4)
prep(adoption-4, of-5)
dep(adoption-4, advocate-7)
ccomp(urge-2, promote-9)
det(amendment-12, a-10)
amod(amendment-12, constitutional-11)
dobj(promote-9, amendment-12)
num(amendment-12, .4-13)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S
    (VP (TO To)
      (VP (VB contribute)
        (PP (TO to))
        (NP
          (NP
            (NP
              (NP (DT the) (NN growth) (, ,) (NN enlargement) (, ,)
                (CC or)
                (NN prosperity))
              (PP (IN of)))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (DT any) (NN process)
                  (CC or)
                  (NN thing))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (PP (IN in)
                        (NP (NN course)))))))
              (-RRB- -RRB-)))
          (: ;)
          (S
            (S
              (VP (TO to)
                (VP (VB forward))))
            (: ;)
            (S
              (VP (TO to)
                (VP (VB further))))
            (: ;)
            (S
              (VP (TO to)
                (VP (VB encourage))))
            (: ;)
            (S
              (VP (TO to)
                (VP (VB advance))))
            (: ;)
            (S
              (VP (TO to)
                (VP (VB excite)
                  (PRN (: ;)
                    (PP (IN as))
                    (, ,)
                    (S
                      (VP (TO to)
                        (VP (VB promote)
                          (S
                            (VP (VBG learning))))))))))
            (: ;)
            (S
              (VP (TO to)
                (VP (VB promote)
                  (NP (NN disorder)))))
            (: ;)
            (S
              (VP (TO to)
                (VP (VB promote)
                  (NP (DT a) (NN business) (NN venture)))))))))
    (. .)))

aux(contribute-2, To-1)
root(ROOT-0, contribute-2)
prep(contribute-2, to-3)
det(growth-5, the-4)
dobj(contribute-2, growth-5)
dobj(contribute-2, enlargement-7)
conj_or(growth-5, enlargement-7)
dobj(contribute-2, prosperity-10)
conj_or(growth-5, prosperity-10)
prep(growth-5, of-11)
det(process-14, any-13)
dep(growth-5, process-14)
nsubj(is-18, process-14)
dep(growth-5, thing-16)
conj_or(process-14, thing-16)
nsubj(is-18, thing-16)
rcmod(process-14, is-18)
prep_in(is-18, course-20)
aux(forward-24, to-23)
dep(growth-5, forward-24)
aux(further-27, to-26)
parataxis(forward-24, further-27)
aux(encourage-30, to-29)
parataxis(forward-24, encourage-30)
aux(advance-33, to-32)
parataxis(forward-24, advance-33)
aux(excite-36, to-35)
parataxis(forward-24, excite-36)
dep(promote-41, as-38)
aux(promote-41, to-40)
parataxis(excite-36, promote-41)
xcomp(promote-41, learning-42)
aux(promote-45, to-44)
parataxis(forward-24, promote-45)
dobj(promote-45, disorder-46)
aux(promote-49, to-48)
parataxis(forward-24, promote-49)
det(venture-52, a-50)
nn(venture-52, business-51)
dobj(promote-49, venture-52)

(ROOT
  (S ('' '')
    (PP (VBG Born)
      (PP (TO to)))
    (VP (VBP promote)
      (NP (DT all) (NN truth)))
    (. .)))

prep(promote-4, Born-2)
pcomp(Born-2, to-3)
prep(Born-2, to-3)
root(ROOT-0, promote-4)
det(truth-6, all-5)
dobj(promote-4, truth-6)

(ROOT
  (NP (NNP '') (NNP Milton) (. .)))


