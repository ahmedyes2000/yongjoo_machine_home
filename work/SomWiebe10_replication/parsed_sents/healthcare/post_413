(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBZ is)
      (NP
        (NP (DT this) (JJ free) (NN market))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (VP (VBG talking) (IN about)))))))
    (. ?)))

advmod(is-2, Where-1)
root(ROOT-0, is-2)
det(market-5, this-3)
amod(market-5, free-4)
nsubj(is-2, market-5)
dobj(talking-8, market-5)
nsubj(talking-8, you-6)
aux(talking-8, are-7)
rcmod(market-5, talking-8)
dep(talking-8, about-9)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP are) (RB not)
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP (VB buy)
              (NP (NN insurance))
              (PP (IN from)
                (NP
                  (NP (NNS companies))
                  (PP (IN in)
                    (NP (JJ other) (NNS states))))))))))
    (. .)))

nsubjpass(allowed-4, People-1)
xsubj(buy-6, People-1)
auxpass(allowed-4, are-2)
neg(allowed-4, not-3)
root(ROOT-0, allowed-4)
aux(buy-6, to-5)
xcomp(allowed-4, buy-6)
dobj(buy-6, insurance-7)
prep_from(buy-6, companies-9)
amod(states-12, other-11)
prep_in(companies-9, states-12)

(ROOT
  (S
    (NP (NNS People))
    (ADVP (RB also))
    (VP (VBP gain)
      (NP (NNS profits))
      (PP (IN from)
        (NP (NN food)))
      (, ,)
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD was) (RB not)
            (PP (IN for)
              (NP
                (NP (DT that) (NN profit))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD can)
                      (VP (VB be)
                        (ADJP (JJ certain))
                        (SBAR (IN that)
                          (S
                            (NP (NN food))
                            (VP (MD would) (RB not)
                              (VP (VB be)
                                (ADJP (RB so) (RB easily) (JJ available))))))))))))))))
    (. .)))

nsubj(gain-3, People-1)
advmod(gain-3, also-2)
root(ROOT-0, gain-3)
dobj(gain-3, profits-4)
prep_from(gain-3, food-6)
prep_in(gain-3, fact-9)
mark(was-13, if-11)
nsubj(was-13, it-12)
advcl(gain-3, was-13)
neg(was-13, not-14)
det(profit-17, that-16)
prep_for(was-13, profit-17)
dobj(certain-21, profit-17)
nsubj(certain-21, you-18)
aux(certain-21, can-19)
cop(certain-21, be-20)
rcmod(profit-17, certain-21)
complm(available-29, that-22)
nsubj(available-29, food-23)
aux(available-29, would-24)
neg(available-29, not-25)
cop(available-29, be-26)
advmod(available-29, so-27)
advmod(available-29, easily-28)
ccomp(certain-21, available-29)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (NP (DT no) (NN one))
    (VP (VBZ is)
      (VP (VBG denying)
        (NP
          (NP (NNS people) (NN health) (NN care))
          (PP (IN by)
            (S
              (VP (VBG refusing)
                (S
                  (VP (TO to)
                    (VP (VB provide)
                      (NP (PRP it)))))))))))
    (. .)))

advmod(denying-6, Also-1)
det(one-4, no-3)
nsubj(denying-6, one-4)
aux(denying-6, is-5)
root(ROOT-0, denying-6)
nn(care-9, people-7)
nn(care-9, health-8)
dobj(denying-6, care-9)
prepc_by(care-9, refusing-11)
aux(provide-13, to-12)
xcomp(refusing-11, provide-13)
dobj(provide-13, it-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are) (RB n't)
      (VP (VBG denying)
        (S
          (NP (PRP$ your) (NN brother))
          (NP
            (NP (DT the) (NNS services))
            (PP (IN of)
              (NP (DT a) (NN doctor)))))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP refuse)
              (S
                (VP (TO to)
                  (VP (VB pay)
                    (SBAR (IN because)
                      (S
                        (NP (PRP you))
                        (VP (VBP are) (RB n't)
                          (VP (VBG stopping)
                            (NP (PRP me))
                            (PP (IN from)
                              (S
                                (VP (VBG paying)
                                  (PP (IN for)
                                    (NP (PRP him))))))))))))))))))))

nsubj(denying-4, You-1)
aux(denying-4, are-2)
neg(denying-4, n't-3)
root(ROOT-0, denying-4)
poss(brother-6, your-5)
nsubj(services-8, brother-6)
det(services-8, the-7)
xcomp(denying-4, services-8)
det(doctor-11, a-10)
prep_of(services-8, doctor-11)
mark(refuse-14, if-12)
nsubj(refuse-14, you-13)
xsubj(pay-16, you-13)
advcl(denying-4, refuse-14)
aux(pay-16, to-15)
xcomp(refuse-14, pay-16)
mark(stopping-21, because-17)
nsubj(stopping-21, you-18)
aux(stopping-21, are-19)
neg(stopping-21, n't-20)
advcl(pay-16, stopping-21)
dobj(stopping-21, me-22)
prepc_from(stopping-21, paying-24)
prep_for(paying-24, him-26)

(ROOT
  (S
    (NP (NNP Insurance) (NNS companies))
    (VP (VBP have)
      (NP
        (NP (JJ per-state) (NNS mandates))
        (SBAR
          (WHPP (IN on)
            (WHNP (WP what) (NNS services)))
          (S
            (NP (PRP they))
            (VP (MD must)
              (VP (VB cover)))))))
    (. .)))

nn(companies-2, Insurance-1)
nsubj(have-3, companies-2)
root(ROOT-0, have-3)
amod(mandates-5, per-state-4)
dobj(have-3, mandates-5)
det(services-8, mandates-5)
rel(cover-11, services-8)
nsubj(cover-11, they-9)
aux(cover-11, must-10)
rcmod(mandates-5, cover-11)

(ROOT
  (S
    (NP (DT The) (NN tax) (NN code))
    (VP (VBZ ties)
      (NP
        (NP (NNS people) (POS 's))
        (NN health) (NN insurance))
      (PP (TO to)
        (NP (PRP$ their) (NN job)))
      (PP
        (PP (IN by)
          (S (RB not)
            (VP (VBG providing)
              (NP (DT the) (JJ same) (NN tax) (NNS benefits))
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP buy)
                    (NP
                      (NP (NN insurance))
                      (PP (IN on)
                        (NP (PRP$ your) (JJ own))))))))))
        (CC and)
        (PP
          (ADVP (RB also))
          (IN by)
          (S
            (VP (VBG forcing)
              (NP (PRP$ your) (NN employer)
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (NP
                        (NP (DT a) (JJ large) (NN sum))
                        (PP (IN of)
                          (NP (PRP it)))))))))))))
    (. .)))

det(code-3, The-1)
nn(code-3, tax-2)
nsubj(ties-4, code-3)
root(ROOT-0, ties-4)
poss(insurance-8, people-5)
nn(insurance-8, health-7)
dobj(ties-4, insurance-8)
poss(job-11, their-10)
prep_to(ties-4, job-11)
neg(providing-14, not-13)
prepc_by(ties-4, providing-14)
det(benefits-18, the-15)
amod(benefits-18, same-16)
nn(benefits-18, tax-17)
dobj(providing-14, benefits-18)
mark(buy-21, if-19)
nsubj(buy-21, you-20)
advcl(providing-14, buy-21)
dobj(buy-21, insurance-22)
poss(own-25, your-24)
prep_on(insurance-22, own-25)
advmod(ties-4, also-27)
prepc_by(ties-4, forcing-29)
conj_and(providing-14, forcing-29)
poss(employer-31, your-30)
dobj(forcing-29, employer-31)
aux(pay-33, to-32)
infmod(employer-31, pay-33)
det(sum-36, a-34)
amod(sum-36, large-35)
dobj(pay-33, sum-36)
prep_of(sum-36, it-38)

(ROOT
  (S
    (NP (NNP Insurance) (PRP itself))
    (VP (VBZ has)
      (VP (VBN become)
        (NP (DT a) (NN non-market))
        (PP (IN by)
          (S
            (VP (VBG removing)
              (NP
                (NP (DT the) (NN need))
                (PP (IN for)
                  (NP (NNS patients))))
              (S
                (VP (TO to)
                  (VP (VB consider)
                    (NP
                      (NP (DT the) (NNS costs))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN doctor) (POS 's))
                          (NNS services))))))))))))
    (. .)))

nsubj(non-market-6, Insurance-1)
dep(Insurance-1, itself-2)
aux(non-market-6, has-3)
cop(non-market-6, become-4)
det(non-market-6, a-5)
root(ROOT-0, non-market-6)
prepc_by(non-market-6, removing-8)
det(need-10, the-9)
dobj(removing-8, need-10)
prep_for(need-10, patients-12)
aux(consider-14, to-13)
xcomp(removing-8, consider-14)
det(costs-16, the-15)
dobj(consider-14, costs-16)
det(doctor-19, the-18)
poss(services-21, doctor-19)
prep_of(costs-16, services-21)

(ROOT
  (S
    (NP (DT The) (NN government))
    (ADVP (RB already))
    (VP (VBZ pays)
      (PP (IN for)
        (NP
          (NP (CD 50) (NN %))
          (PP (IN of)
            (NP (DT all) (NN health) (NN care) (JJ related) (NNS expenses))))))
    (. .)))

det(government-2, The-1)
nsubj(pays-4, government-2)
advmod(pays-4, already-3)
root(ROOT-0, pays-4)
num(%-7, 50-6)
prep_for(pays-4, %-7)
det(expenses-13, all-9)
nn(expenses-13, health-10)
nn(expenses-13, care-11)
amod(expenses-13, related-12)
prep_of(%-7, expenses-13)

(ROOT
  (SBARQ
    (WHNP (WDT What)
      (NP (NN aspect)
        (PP (IN of)
          (NP
            (NP (DT any))
            (PP (IN of)
              (NP (DT that)))))))
    (SQ
      (VP (VBZ is)
        (ADVP (RB even))
        (ADJP (RB remotely) (JJ similar)
          (PP (TO to)
            (NP (DT a) (JJ free) (NN market))))))
    (. ?)))

det(aspect-2, What-1)
nsubj(similar-10, aspect-2)
prep_of(aspect-2, any-4)
prep_of(any-4, that-6)
cop(similar-10, is-7)
advmod(similar-10, even-8)
advmod(similar-10, remotely-9)
root(ROOT-0, similar-10)
det(market-14, a-12)
amod(market-14, free-13)
prep_to(similar-10, market-14)

(ROOT
  (NP (DT The) (NN fact)
    (SBAR (IN that)
      (S
        (NP (NNS profits)
          (CC and)
          (NN money))
        (VP (VBP are)
          (ADJP (VBN involved)))))
    (. ?)))

det(fact-2, The-1)
root(ROOT-0, fact-2)
complm(involved-8, that-3)
nsubjpass(involved-8, profits-4)
conj_and(profits-4, money-6)
nsubjpass(involved-8, money-6)
auxpass(involved-8, are-7)
ccomp(fact-2, involved-8)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (DT a) (JJ shallow) (NN argument)))
    (. .)))

nsubj(argument-5, That-1)
cop(argument-5, 's-2)
det(argument-5, a-3)
amod(argument-5, shallow-4)
root(ROOT-0, argument-5)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP we))
        (VP (VBP need)
          (PP (TO to)))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB free)
            (NP (DT the) (NN health) (NN care) (NN market))
            (PP (IN by)
              (S
                (VP (VBG removing)
                  (NP
                    (NP (NN government) (NN interference))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP
                          (VP (VBZ limits)
                            (NP (NNS choices)))
                          (CC and)
                          (VP (VBZ encourages)
                            (NP (JJR higher) (NNS costs))
                            (PP (IN by)
                              (S
                                (VP (VBG making)
                                  (S
                                    (NP (PRP them))
                                    (VP (VBN hidden)
                                      (PP (IN from)
                                        (NP (DT the) (NN consumer))))))))))))))))))))
    (. .)))

dobj(need-3, What-1)
nsubj(need-3, we-2)
csubj(is-5, need-3)
prep(need-3, to-4)
root(ROOT-0, is-5)
aux(free-7, to-6)
xcomp(is-5, free-7)
det(market-11, the-8)
nn(market-11, health-9)
nn(market-11, care-10)
dobj(free-7, market-11)
prepc_by(free-7, removing-13)
nn(interference-15, government-14)
dobj(removing-13, interference-15)
nsubj(limits-17, interference-15)
nsubj(encourages-20, interference-15)
rcmod(interference-15, limits-17)
dobj(limits-17, choices-18)
rcmod(interference-15, encourages-20)
conj_and(limits-17, encourages-20)
amod(costs-22, higher-21)
dobj(encourages-20, costs-22)
prepc_by(encourages-20, making-24)
nsubj(hidden-26, them-25)
dep(making-24, hidden-26)
det(consumer-29, the-28)
prep_from(hidden-26, consumer-29)

