(ROOT
  (PP (IN By)
    (NP
      (NP (DT the) (NN way))
      (: ...)
      (PP (IN in)
        (S
          (VP (VBG striving)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJR better))))))))
      (PP (IN than)
        (NP
          (NP (PRP$ your) (NNS neighbors))
          (: ...)
          (SBARQ
            (WHNP (WP what))
            (SQ (VBZ does)
              (NP (DT that))
              (ADVP (RB actually))
              (VP (VB mean)))
            (. ?)))))))

root(ROOT-0, By-1)
det(way-3, the-2)
pobj(By-1, way-3)
prepc_in(way-3, striving-6)
aux(better-9, to-7)
cop(better-9, be-8)
xcomp(striving-6, better-9)
poss(neighbors-12, your-11)
prep_than(way-3, neighbors-12)
dobj(mean-18, what-14)
aux(mean-18, does-15)
nsubj(mean-18, that-16)
advmod(mean-18, actually-17)
dep(neighbors-12, mean-18)

(ROOT
  (S
    (NP (DT That))
    (NP (PRP you))
    (VP (MD can)
      (VP (VB buy)
        (NP (JJR more) (NNS things))))
    (. ?)))

nsubj(buy-4, That-1)
nsubj(buy-4, you-2)
aux(buy-4, can-3)
root(ROOT-0, buy-4)
amod(things-6, more-5)
dobj(buy-4, things-6)

(ROOT
  (FRAG
    (NP (DT A)
      (ADJP (RBR more) (JJ expensive))
      (NN bike))
    (. ?)))

det(bike-4, A-1)
advmod(expensive-3, more-2)
amod(bike-4, expensive-3)
root(ROOT-0, bike-4)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (ADJP
      (ADJP (JJ confusing))
      (SBAR
        (WHNP
          (NP (JJ material) (NNS possessions))
          (WHPP (IN with)
            (WHNP (WP what))))
        (S
          (VP (VBZ makes)
            (NP (DT a) (NN person))
            (ADVP (RBR better))))))
    (. ?)))

cop(confusing-3, Are-1)
nsubj(confusing-3, you-2)
root(ROOT-0, confusing-3)
amod(possessions-5, material-4)
nsubj(makes-8, possessions-5)
prep_with(possessions-5, what-7)
dep(confusing-3, makes-8)
det(person-10, a-9)
dobj(makes-8, person-10)
advmod(makes-8, better-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB buy)
        (NP (DT a) (JJ new) (NN car))
        (NP (DT this) (NN year))))
    (. .)))

nsubj(buy-4, I-1)
aux(buy-4, did-2)
neg(buy-4, n't-3)
root(ROOT-0, buy-4)
det(car-7, a-5)
amod(car-7, new-6)
dobj(buy-4, car-7)
det(year-9, this-8)
tmod(buy-4, year-9)

(ROOT
  (FRAG
    (ADVP (RB Guess))
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP I))
        (VP (VBD did))))
    (. ?)))

root(ROOT-0, Guess-1)
dobj(did-4, what-2)
nsubj(did-4, I-3)
dep(Guess-1, did-4)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB actually))
    (VP (VBD spent)
      (NP (NN time))
      (PP (IN with)
        (NP (PRP$ my) (NN family))))
    (. .)))

nsubj(spent-3, I-1)
advmod(spent-3, actually-2)
root(ROOT-0, spent-3)
dobj(spent-3, time-4)
poss(family-7, my-6)
prep_with(spent-3, family-7)

(ROOT
  (INTJ (UH Wow) (. .)))

root(ROOT-0, Wow-1)

(ROOT
  (FRAG
    (PP (IN On)
      (NP (NN vacation)))
    (. .)))

root(ROOT-0, On-1)
pobj(On-1, vacation-2)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP (PRP we))
        (VP (VBD ate)
          (PP (IN at)
            (NP (NNS restaurants))))))
    (, ,)
    (S
      (VP (VBN bought)
        (NP (JJ crappy) (NNS t-shirts))))
    (, ,)
    (VP
      (VP (VBD over-paid)
        (PP (IN for)
          (NP (JJ silly) (NNS drawings)))
        (PP (IN from)
          (NP (JJ local) (NNS artists))))
      (, ,)
      (CC and)
      (VP (VBD tipped)
        (ADVP (RB generously))))
    (. .)))

advmod(ate-3, Where-1)
nsubj(ate-3, we-2)
advcl(over-paid-11, ate-3)
prep_at(ate-3, restaurants-5)
dep(over-paid-11, bought-7)
amod(t-shirts-9, crappy-8)
dobj(bought-7, t-shirts-9)
root(ROOT-0, over-paid-11)
amod(drawings-14, silly-13)
prep_for(over-paid-11, drawings-14)
amod(artists-17, local-16)
prep_from(over-paid-11, artists-17)
conj_and(over-paid-11, tipped-20)
advmod(tipped-20, generously-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB buy)
        (NP (DT a) (JJ flat) (NN screen))
        (PP (IN from)
          (NP (NNP Best-Buy)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT the) (NN guy))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (MD might)
                    (VP (VB 've)
                      (VP (VBN sold)
                        (NP (PRP it))
                        (PP (TO to)
                          (NP (PRP me)))))))))
            (VP (VBZ is)
              (ADVP (RB barely))
              (VP
                (VP (VBG making)
                  (NP (PRP it)))
                (PRN (-LRB- -LRB-)
                  (FRAG
                    (PP (CC but)
                      (NP (NN hey)))
                    (: ...)
                    (S
                      (NP (DT those) (JJ rich) (NNS guys))
                      (VP (VBP pay)
                        (SBAR
                          (S
                            (NP
                              (NP (DT the) (JJS highest) (NNS salaries))
                              (: ...)
                              (ADVP (CC or))
                              (: ...))
                            (VP (VBP do)
                              (VP (RB n't)
                                (NP (PRP they))))))))
                    (. ?))
                  (-RRB- -RRB-))))))))))

nsubj(buy-4, I-1)
aux(buy-4, did-2)
neg(buy-4, n't-3)
root(ROOT-0, buy-4)
det(screen-7, a-5)
amod(screen-7, flat-6)
dobj(buy-4, screen-7)
prep_from(buy-4, Best-Buy-9)
advmod(making-22, where-10)
det(guy-12, the-11)
nsubj(sold-16, guy-12)
nsubj(making-22, guy-12)
aux(sold-16, might-14)
aux(sold-16, 've-15)
rcmod(guy-12, sold-16)
dobj(sold-16, it-17)
prep_to(sold-16, me-19)
aux(making-22, is-20)
advmod(making-22, barely-21)
advcl(buy-4, making-22)
dobj(making-22, it-23)
dep(pay-31, but-25)
dep(but-25, hey-26)
det(guys-30, those-28)
amod(guys-30, rich-29)
nsubj(pay-31, guys-30)
dep(making-22, pay-31)
det(salaries-34, the-32)
amod(salaries-34, highest-33)
nsubj(they-40, salaries-34)
advmod(salaries-34, or-36)
aux(they-40, do-38)
neg(they-40, n't-39)
ccomp(pay-31, they-40)

(ROOT
  (S
    (NP
      (PRN (, ,)
        (PP (CC but)
          (NP (PRP I)))))
    (VP (VBD bought)
      (NP (NN season) (NNS tickets)))
    (. .)))

nsubj(bought-4, but-2)
dep(but-2, I-3)
root(ROOT-0, bought-4)
nn(tickets-6, season-5)
dobj(bought-4, tickets-6)

(ROOT
  (S (CC And)
    (ADVP (RB everytime))
    (NP (PRP I))
    (VP (VBP go)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD 'll)
            (VP (VB be)
              (NP (VBG spending) (NN money))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP it))
                  (VP (VBZ stays)
                    (NP
                      (UCP (JJ local)
                        (CC and)
                        (NP (JJR more) (NNS people)))
                      (NN benefit))
                    (PP (IN from)
                      (NP (PRP it)))))))))))
    (. .)))

cc(go-4, And-1)
advmod(go-4, everytime-2)
nsubj(go-4, I-3)
root(ROOT-0, go-4)
nsubj(money-9, I-5)
aux(money-9, 'll-6)
cop(money-9, be-7)
amod(money-9, spending-8)
ccomp(go-4, money-9)
advmod(benefit-17, where-10)
nsubj(benefit-17, it-11)
cop(benefit-17, stays-12)
amod(benefit-17, local-13)
amod(people-16, more-15)
conj_and(local-13, people-16)
amod(benefit-17, people-16)
advcl(money-9, benefit-17)
prep_from(benefit-17, it-19)

(ROOT
  (S
    (NP (DT That))
    (NP (PRP you))
    (VP (VBP work)
      (ADVP (RBR harder))
      (S
        (VP (TO to)
          (VP (VB buy)
            (NP (JJR more) (NN stuff))))))
    (. ?)))

nsubj(work-3, That-1)
xsubj(buy-6, That-1)
nsubj(work-3, you-2)
xsubj(buy-6, you-2)
root(ROOT-0, work-3)
advmod(work-3, harder-4)
aux(buy-6, to-5)
xcomp(work-3, buy-6)
amod(stuff-8, more-7)
dobj(buy-6, stuff-8)

(ROOT
  (SQ (NNP Does)
    (NP (DT This))
    (VP (VB make)
      (S
        (NP (PRP Me))
        (NP (DT a) (JJR better) (NN person))))
    (. ?)))

dep(make-3, Does-1)
nsubj(make-3, This-2)
root(ROOT-0, make-3)
nsubj(person-7, Me-4)
det(person-7, a-5)
amod(person-7, better-6)
xcomp(make-3, person-7)

(ROOT
  (S
    (ADJP (VB No.))
    (. .)))

root(ROOT-0, No.-1)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB just))
    (VP (VBZ means)
      (NP
        (NP (DT the) (NN money))
        (SBAR
          (S
            (S
              (NP (PRP I))
              (VP (VBP spend)
                (SBAR
                  (S
                    (VP (VBZ is)
                      (ADVP
                        (NP (DT a) (RB bit))
                        (RBR more))
                      (VP (VBN spread)
                        (PRT (RP out))))))))
            (CC and)
            (S
              (NP (JJR more) (NNS people))
              (VP (VBP benefit)
                (PP (IN from)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(means-3, It-1)
advmod(means-3, just-2)
root(ROOT-0, means-3)
det(money-5, the-4)
dobj(means-3, money-5)
nsubj(spend-7, I-6)
rcmod(money-5, spend-7)
auxpass(spread-12, is-8)
det(bit-10, a-9)
npadvmod(more-11, bit-10)
advmod(spread-12, more-11)
ccomp(spend-7, spread-12)
prt(spread-12, out-13)
amod(people-16, more-15)
nsubj(benefit-17, people-16)
rcmod(money-5, benefit-17)
conj_and(spend-7, benefit-17)
prep_from(benefit-17, it-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're) (RB not)
      (NP (DT a) (JJR better) (NN person))
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (MD can)
            (VP (VB buy)
              (NP (JJR more) (NNS things))
              (PP (IN than)
                (NP (DT another) (NN person))))))))
    (: ...)))

nsubj(person-6, You-1)
cop(person-6, 're-2)
neg(person-6, not-3)
det(person-6, a-4)
amod(person-6, better-5)
root(ROOT-0, person-6)
mark(buy-10, because-7)
nsubj(buy-10, you-8)
aux(buy-10, can-9)
advcl(person-6, buy-10)
amod(things-12, more-11)
dobj(buy-10, things-12)
det(person-15, another-14)
prep_than(buy-10, person-15)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB need)
      (S
        (NP (DT a) (NN plasma) (JJ flat) (NN screen))
        (NP (WDT whatever))))
    (. ?)))

aux(need-3, Do-1)
nsubj(need-3, you-2)
root(ROOT-0, need-3)
det(screen-7, a-4)
nn(screen-7, plasma-5)
amod(screen-7, flat-6)
nsubj(whatever-8, screen-7)
xcomp(need-3, whatever-8)

(ROOT
  (SQ (NNP Does)
    (NP (PRP it))
    (VP (VB make)
      (S
        (NP (PRP you))
        (ADJP (JJR better)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP (PRP it))))))))
    (. ?)))

dep(make-3, Does-1)
nsubj(make-3, it-2)
root(ROOT-0, make-3)
nsubj(better-5, you-4)
xcomp(make-3, better-5)
aux(have-7, to-6)
xcomp(better-5, have-7)
dobj(have-7, it-8)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB need)
      (NP (DT a) (CD 12) (NN man) (NN hottub)))
    (. ?)))

aux(need-3, Do-1)
nsubj(need-3, you-2)
root(ROOT-0, need-3)
det(hottub-7, a-4)
num(hottub-7, 12-5)
nn(hottub-7, man-6)
dobj(need-3, hottub-7)

(ROOT
  (SQ (NNP Does)
    (NP (NNP THIS))
    (VP (VB make)
      (S
        (NP (PRP you))
        (ADJP (JJR better))))
    (. ?)))

dep(make-3, Does-1)
nsubj(make-3, THIS-2)
root(ROOT-0, make-3)
nsubj(better-5, you-4)
xcomp(make-3, better-5)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP (DT a) (JJR bigger) (NN boat)))
    (. ?)))

root(ROOT-0, What-1)
dep(What-1, about-2)
det(boat-5, a-3)
amod(boat-5, bigger-4)
pobj(about-2, boat-5)

(ROOT
  (SQ (NNP Does)
    (NP (DT That))
    (VP (VB make)
      (S
        (NP (PRP you))
        (ADJP (JJR better))))
    (. ?)))

dep(make-3, Does-1)
nsubj(make-3, That-2)
root(ROOT-0, make-3)
nsubj(better-5, you-4)
xcomp(make-3, better-5)

(ROOT
  (FRAG
    (NP (DT A)
      (ADJP (JJR bigger))
      (NN car))
    (. ?)))

det(car-3, A-1)
amod(car-3, bigger-2)
root(ROOT-0, car-3)

