(ROOT
  (S
    (NP (PRP$ My) (NN goal))
    (VP (VBZ is) (RB not)
      (S
        (VP (TO to)
          (VP
            (VP (`` ``) (VB help)
              (NP (DT the) (JJ rich))
              ('' ''))
            (CC nor)
            (VP (VBP do)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP understand)
                    (NP
                      (NP (DT the))
                      ('' '')
                      (SBAR
                        (S
                          (NP (PRP They))
                          (VP (MD can)
                            (VP (VB aford)
                              (NP (PRP it))))))
                      (, ,)
                      (SBAR
                        (S
                          (VP (VBP make)
                            (SBAR
                              (S
                                (NP (PRP them))
                                (VP (VBP pay) ('' '')
                                  (NP (NN argument))
                                  (ADVP (RB either)))))))))))))))))
    (. .)))

poss(goal-2, My-1)
nsubj(is-3, goal-2)
xsubj(help-7, goal-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
aux(help-7, to-5)
xcomp(is-3, help-7)
det(rich-9, the-8)
dobj(help-7, rich-9)
xcomp(is-3, do-12)
conj_nor(help-7, do-12)
nsubj(understand-14, I-13)
ccomp(do-12, understand-14)
dobj(understand-14, the-15)
nsubj(aford-19, They-17)
aux(aford-19, can-18)
rcmod(the-15, aford-19)
dobj(aford-19, it-20)
rcmod(the-15, make-22)
nsubj(pay-24, them-23)
ccomp(make-22, pay-24)
dobj(pay-24, argument-26)
advmod(pay-24, either-27)

(ROOT
  (S
    (NP (PRP$ My) (NN goal))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB improve)
            (NP (DT this) (NN country))))))
    (. .)))

poss(goal-2, My-1)
nsubj(is-3, goal-2)
xsubj(improve-5, goal-2)
root(ROOT-0, is-3)
aux(improve-5, to-4)
xcomp(is-3, improve-5)
det(country-7, this-6)
dobj(improve-5, country-7)

(ROOT
  (S
    (ADVP (RB As) (RB long)
      (SBAR (IN as)
        (S
          (NP (DT a) (NN person))
          (VP (MD can)
            (VP
              (VP (VB go)
                (PP (IN on)
                  (NP (NN unemployment))))
              (CC and)
              (RB not)
              (VP (VB have)
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (NP (DT that) (NN money))
                      (ADVP (RB back)))))))))))
    (, ,)
    (NP (EX there))
    (VP (MD will)
      (VP (VB be)
        (NP
          (NP (NNS people))
          (VP (VBG taking)
            (NP
              (NP (NN advantage))
              (PP (IN of)
                (NP (DT that) (NN situation))))))))
    (. .)))

advmod(long-2, As-1)
advmod(people-22, long-2)
mark(go-7, as-3)
det(person-5, a-4)
nsubj(go-7, person-5)
xsubj(pay-14, person-5)
aux(go-7, can-6)
ccomp(long-2, go-7)
prep_on(go-7, unemployment-9)
ccomp(long-2, not-11)
conj_and(go-7, not-11)
neg(go-7, not-11)
dep(go-7, have-12)
aux(pay-14, to-13)
xcomp(have-12, pay-14)
det(money-16, that-15)
dobj(pay-14, money-16)
advmod(pay-14, back-17)
expl(people-22, there-19)
aux(people-22, will-20)
cop(people-22, be-21)
root(ROOT-0, people-22)
partmod(people-22, taking-23)
dobj(taking-23, advantage-24)
det(situation-27, that-26)
prep_of(advantage-24, situation-27)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP make)
          (NP (PRP it))
          (SBAR (RB so) (IN that)
            (S
              (NP (PRP they))
              (VP (VBP have)
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (NP (PRP it))
                      (ADVP (RB back)))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP give)
      (NP (NNS people))
      (NP (DT the) (NN incentive)
        (S
          (VP (TO to)
            (VP (VB get)
              (PRT (RP back))
              (S
                (VP (TO to)
                  (VP (VB work)))))))))
    (. .)))

mark(make-3, If-1)
nsubj(make-3, you-2)
advcl(give-15, make-3)
dobj(make-3, it-4)
advmod(have-8, so-5)
dep(have-8, that-6)
nsubj(have-8, they-7)
xsubj(pay-10, they-7)
advcl(make-3, have-8)
aux(pay-10, to-9)
xcomp(have-8, pay-10)
dobj(pay-10, it-11)
advmod(pay-10, back-12)
nsubj(give-15, you-14)
root(ROOT-0, give-15)
iobj(give-15, people-16)
det(incentive-18, the-17)
dobj(give-15, incentive-18)
aux(get-20, to-19)
infmod(incentive-18, get-20)
prt(get-20, back-21)
aux(work-23, to-22)
xcomp(get-20, work-23)

(ROOT
  (S
    (NP (JJ Productive) (NNS individuals))
    (VP (VBP are)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ makes)
            (S
              (NP (DT a) (NN country))
              (ADJP (JJ great)))))))
    (. .)))

amod(individuals-2, Productive-1)
nsubj(are-3, individuals-2)
root(ROOT-0, are-3)
nsubj(makes-5, what-4)
ccomp(are-3, makes-5)
det(country-7, a-6)
nsubj(great-8, country-7)
xcomp(makes-5, great-8)

