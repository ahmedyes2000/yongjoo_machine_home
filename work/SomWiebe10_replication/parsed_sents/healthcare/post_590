(ROOT
  (S
    (S
      (NP (JJ Individual) (NN health) (NN care))
      (VP (VBZ is)
        (ADJP (JJR better))
        (SBAR (IN for)
          (S
            (NP (DT all))
            (VP
              (VP (VBD involved))
              (: :)
              (SBAR
                (ADVP (RB First))
                (WHADVP (WRB why))
                (S
                  (NP (NN individual))
                  (VP (VBZ is)
                    (ADJP (JJR better)))))
              (: :))))))
    (: --)
    (S
      (NP (JJ Free) (NN market) (NN system))
      (VP (VBZ allows)
        (PP (IN for)
          (NP (NN innovation)))
        (PP (IN on)
          (NP
            (NP (DT the) (NN part))
            (PP (IN of)
              (NP (DT the) (NN healthcare) (NNS industries)))))
        (, ,)
        (S
          (VP (VBG creating)
            (NP
              (ADJP
                (ADJP (JJ new)
                  (CC and)
                  (JJR better))
                (, ,)
                (CC and)
                (ADJP
                  (ADVP (RBR more) (IN than))
                  (RB likely) (JJR cheaper))
                (, ,))
              (NNS medicines)
              (CC and)
              (NNS procedures))))))
    (. .)))

amod(care-3, Individual-1)
nn(care-3, health-2)
nsubj(better-5, care-3)
cop(better-5, is-4)
root(ROOT-0, better-5)
mark(involved-8, for-6)
nsubj(involved-8, all-7)
advcl(better-5, involved-8)
advmod(better-14, First-10)
advmod(better-14, why-11)
nsubj(better-14, individual-12)
cop(better-14, is-13)
ccomp(involved-8, better-14)
parataxis(involved-8, better-14)
amod(system-19, Free-17)
nn(system-19, market-18)
nsubj(allows-20, system-19)
parataxis(better-5, allows-20)
prep_for(allows-20, innovation-22)
det(part-25, the-24)
prep_on(allows-20, part-25)
det(industries-29, the-27)
nn(industries-29, healthcare-28)
prep_of(part-25, industries-29)
xcomp(allows-20, creating-31)
amod(medicines-42, new-32)
conj_and(new-32, better-34)
amod(medicines-42, better-34)
advmod(than-38, more-37)
advmod(cheaper-40, than-38)
advmod(cheaper-40, likely-39)
conj_and(new-32, cheaper-40)
amod(medicines-42, cheaper-40)
dobj(creating-31, medicines-42)
dobj(creating-31, procedures-44)
conj_and(medicines-42, procedures-44)

(ROOT
  (S
    (NP (DT A) (JJ socialized) (NN system))
    (VP
      (VP (MD will)
        (VP (VB put)
          (NP (DT a) (NN cease))
          (PP (TO to)
            (NP (NN competition)))))
      (, ,)
      (CC and)
      (VP (MD will)
        (ADVP (RB thus))
        (VP (VB end)
          (NP
            (NP (RB almost) (DT all) (NN source))
            (PP (IN of)
              (NP (NN motivation))))
          (PP (IN for)
            (NP (NN innovation))))))
    (. .)))

det(system-3, A-1)
amod(system-3, socialized-2)
nsubj(put-5, system-3)
nsubj(end-14, system-3)
aux(put-5, will-4)
root(ROOT-0, put-5)
det(cease-7, a-6)
dobj(put-5, cease-7)
prep_to(put-5, competition-9)
aux(end-14, will-12)
advmod(end-14, thus-13)
conj_and(put-5, end-14)
advmod(source-17, almost-15)
det(source-17, all-16)
dobj(end-14, source-17)
prep_of(source-17, motivation-19)
prep_for(end-14, innovation-21)

(ROOT
  (S
    (NP (DT Any) (NN government))
    (VP (MD will)
      (VP (VB look)
        (PP (TO to)
          (NP
            (NP (DT the) (JJS cheapest) (NNS options))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (MD will)
                  (ADVP (RBS most) (RB likely))
                  (VP (VB be)
                    (NP
                      (NP (DT the) (JJS lowest))
                      (PP (IN in)
                        (NP (NN quality))))))))))))
    (. .)))

det(government-2, Any-1)
nsubj(look-4, government-2)
aux(look-4, will-3)
root(ROOT-0, look-4)
det(options-8, the-6)
amod(options-8, cheapest-7)
prep_to(look-4, options-8)
nsubj(lowest-16, options-8)
aux(lowest-16, will-11)
advmod(likely-13, most-12)
advmod(lowest-16, likely-13)
cop(lowest-16, be-14)
det(lowest-16, the-15)
rcmod(options-8, lowest-16)
prep_in(lowest-16, quality-18)

(ROOT
  (S
    (ADVP (RB Further))
    (ADJP (JJR more))
    (, ,)
    (NP
      (NP (DT the) (NN amount))
      (PP (IN of)
        (NP
          (NP (NN bureaucracy))
          (ADJP (JJ necessary)
            (S
              (VP (TO to)
                (VP (VB regulate)
                  (CC and)
                  (VB record)
                  (NP (DT these) (JJ new) (NNS industries)))))))))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ incredible))
        (, ,)
        (S
          (VP
            (VP (VBG adding)
              (PP (TO to)
                (NP (DT the) (NN tax) (NN increase))))
            (, ,)
            (CONJP (CC but)
              (RB also))
            (VP (VBG creating)
              (NP
                (NP (DT a) (VBG waiting) (NN period))
                (PP (IN for)
                  (NP (NNS people)))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP need)
                      (NP
                        (NP (DT all) (NNS sorts))
                        (PP (IN of)
                          (NP (NNS medicines)
                            (CC and)
                            (NNS procedures)))))))))))))
    (. .)))

advmod(incredible-18, Further-1)
dep(incredible-18, more-2)
det(amount-5, the-4)
nsubj(incredible-18, amount-5)
prep_of(amount-5, bureaucracy-7)
amod(bureaucracy-7, necessary-8)
aux(regulate-10, to-9)
xcomp(necessary-8, regulate-10)
xcomp(necessary-8, record-12)
conj_and(regulate-10, record-12)
det(industries-15, these-13)
amod(industries-15, new-14)
dobj(regulate-10, industries-15)
aux(incredible-18, will-16)
cop(incredible-18, be-17)
root(ROOT-0, incredible-18)
ccomp(incredible-18, adding-20)
det(increase-24, the-22)
nn(increase-24, tax-23)
prep_to(adding-20, increase-24)
ccomp(incredible-18, creating-28)
conj_and(adding-20, creating-28)
det(period-31, a-29)
amod(period-31, waiting-30)
dobj(creating-28, period-31)
nsubj(need-35, period-31)
prep_for(period-31, people-33)
rcmod(period-31, need-35)
det(sorts-37, all-36)
dobj(need-35, sorts-37)
prep_of(sorts-37, medicines-39)
prep_of(sorts-37, procedures-41)
conj_and(medicines-39, procedures-41)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP you))
        (VP (MD can)
          (VP (VB see)
            (NP (DT a) (JJ free) (NN market))))))
    (, ,)
    (NP (JJ individual) (, ,) (NN health) (NN care))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJR better) (NN system))
        (PP (IN for)
          (NP
            (NP (DT all))
            (VP (VBN involved))))))
    (. .)))

mark(see-4, As-1)
nsubj(see-4, you-2)
aux(see-4, can-3)
advcl(system-16, see-4)
det(market-7, a-5)
amod(market-7, free-6)
dobj(see-4, market-7)
amod(care-12, individual-9)
dep(care-12, health-11)
nsubj(system-16, care-12)
cop(system-16, is-13)
det(system-16, the-14)
amod(system-16, better-15)
root(ROOT-0, system-16)
prep_for(system-16, all-18)
partmod(all-18, involved-19)

(ROOT
  (NP
    (NP (NNS Allows))
    (PP (IN for)
      (NP
        (NP (JJR more) (NNS areas))
        (PP (IN of)
          (NP
            (NP (DT the) (NN economy))
            (PP (IN for)
              (NP (DT the) (NN government)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP (NN tax) (NN income))
                      (PP (IN from)))))))))))
    (. .)))

root(ROOT-0, Allows-1)
amod(areas-4, more-3)
prep_for(Allows-1, areas-4)
det(economy-7, the-6)
prep_of(areas-4, economy-7)
det(government-10, the-9)
prep_for(economy-7, government-10)
aux(have-12, to-11)
infmod(government-10, have-12)
nn(income-14, tax-13)
dobj(have-12, income-14)
prep(have-12, from-15)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR
      (WHADVP (WRB why))
      (S
        (NP (NN socialized))
        (VP (VBZ is)
          (UCP
            (ADJP (JJR worse))
            (: :)
            (NP
              (NP
                (PRN (: --)
                  (NP (NNP Very)))
                (JJ high) (NN tax))
              (VP (VBN hikes)))))))
    (, ,)
    (NP (DT the) (NN government))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB pay)
            (PP (IN for)
              (NP
                (NP (DT the) (NN health) (NN care))
                (PP (IN of)
                  (NP
                    (NP (DT an) (JJ entire) (NN nation))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (MD will)
                          (ADVP (RB inevitably))
                          (VP (VB come)
                            (PP (IN from)
                              (NP (NN tax) (NNS payers) (NNS pockets)))))))))))))))
    (. .)))

advmod(needs-16, Now-1)
advmod(worse-6, why-3)
nsubj(worse-6, socialized-4)
cop(worse-6, is-5)
advcl(needs-16, worse-6)
dep(tax-11, Very-9)
amod(tax-11, high-10)
dep(worse-6, tax-11)
partmod(tax-11, hikes-12)
det(government-15, the-14)
nsubj(needs-16, government-15)
xsubj(pay-18, government-15)
root(ROOT-0, needs-16)
aux(pay-18, to-17)
xcomp(needs-16, pay-18)
det(care-22, the-20)
nn(care-22, health-21)
prep_for(pay-18, care-22)
det(nation-26, an-24)
amod(nation-26, entire-25)
prep_of(care-22, nation-26)
nsubj(come-31, nation-26)
aux(come-31, will-29)
advmod(come-31, inevitably-30)
rcmod(nation-26, come-31)
nn(pockets-35, tax-33)
nn(pockets-35, payers-34)
prep_from(come-31, pockets-35)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP we))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB assume)
            (SBAR (IN that)
              (S
                (NP
                  (NP (NNS people))
                  (, ,)
                  (PP (IN on)
                    (NP (NN average)))
                  (, ,))
                (VP (MD will)
                  (VP (VB use)
                    (NP
                      (NP (JJR more) (NN health) (NN care) (NNS services))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP$ its))
                          (ADJP (RB all) (JJ free))))))))))))
      (, ,)
      (PP (IN than)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN price))
            (VP (VBZ has)
              (S
                (VP (TO to)
                  (VP (VB come)
                    (PP (IN from)
                      (NP (PRP$ their) (JJ own) (NNS pockets)))))))))))
    (. .)))

advmod(have-4, Now-1)
nsubj(have-4, we-3)
xsubj(assume-6, we-3)
root(ROOT-0, have-4)
aux(assume-6, to-5)
xcomp(have-4, assume-6)
complm(use-14, that-7)
nsubj(use-14, people-8)
prep_on(people-8, average-11)
aux(use-14, will-13)
ccomp(assume-6, use-14)
amod(services-18, more-15)
nn(services-18, health-16)
nn(services-18, care-17)
dobj(use-14, services-18)
advmod(free-22, when-19)
dep(free-22, its-20)
advmod(free-22, all-21)
dep(services-18, free-22)
advmod(has-28, when-25)
det(price-27, the-26)
nsubj(has-28, price-27)
xsubj(come-30, price-27)
prepc_than(have-4, has-28)
aux(come-30, to-29)
xcomp(has-28, come-30)
poss(pockets-34, their-32)
amod(pockets-34, own-33)
prep_from(come-30, pockets-34)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP
          (NP (DT all))
          (PP (IN of)
            (NP (DT this))))
        (VP (MD will)
          (VP (VB be)
            (VP (VBN paid)
              (PP (IN for) (IN in)
                (NP
                  (NP (NNS taxes))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD will)
                        (VP (VB be)
                          (VP (VBN spread)
                            (ADVP (IN out) (RB evenly))
                            (PP (IN throughout)
                              (NP (DT the) (JJ social) (NNS classes)))))))))))))))
    (, ,)
    (ADVP (RB thus))
    (NP (DT each) (NN person))
    (VP (MD will) (, ,)
      (PP (IN on)
        (NP (NN average)))
      (, ,)
      (VP (VB be)
        (VP (VBG paying)
          (NP
            (NP
              (QP (RB just) (RB as) (JJ much)))
            (PRN (, ,)
              (SBAR (IN if)
                (FRAG (RB not)
                  (ADJP (JJR more))))
              (, ,))
            (PP (IN for)
              (NP (NN health) (NN care)))))))
    (. .)))

mark(paid-7, Since-1)
nsubjpass(paid-7, all-2)
prep_of(all-2, this-4)
aux(paid-7, will-5)
auxpass(paid-7, be-6)
advcl(paying-32, paid-7)
dep(paid-7, for-8)
prep_in(paid-7, taxes-10)
nsubjpass(spread-15, taxes-10)
aux(spread-15, will-13)
auxpass(spread-15, be-14)
rcmod(taxes-10, spread-15)
advmod(spread-15, out-16)
advmod(out-16, evenly-17)
det(classes-21, the-19)
amod(classes-21, social-20)
prep_throughout(spread-15, classes-21)
advmod(paying-32, thus-23)
det(person-25, each-24)
nsubj(paying-32, person-25)
aux(paying-32, will-26)
prep_on(paying-32, average-29)
aux(paying-32, be-31)
root(ROOT-0, paying-32)
quantmod(much-35, just-33)
quantmod(much-35, as-34)
dobj(paying-32, much-35)
mark(not-38, if-37)
dep(much-35, not-38)
dep(not-38, more-39)
nn(care-43, health-42)
prep_for(much-35, care-43)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (NN everyone))
        (VP (MD will)
          (VP (VB be)
            (VP (VBG using)
              (NP
                (NP (JJ different) (NNS amounts))
                (PP (IN of)
                  (NP (DT this) (NN health) (NN care)))))))))
    (, ,)
    (NP (DT some) (NNS people))
    (VP (MD will)
      (VP (VB be)
        (VP (VBG paying)
          (PP (IN for)
            (NP
              (NP
                (NP (JJR more))
                (SBAR (IN than)
                  (S
                    (NP (PRP they))
                    (VP (VBP are)
                      (VP (VBG using))))))
              (, ,)
              (CC and)
              (NP
                (NP (NNS others))
                (VP (VBG using)
                  (ADVP (RBR more) (IN than))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP they))
                      (VP (VBP are)
                        (VP (VBG paying)
                          (PP (IN for)))))))))))))
    (. .)))

mark(using-5, Since-1)
nsubj(using-5, everyone-2)
aux(using-5, will-3)
aux(using-5, be-4)
advcl(paying-17, using-5)
amod(amounts-7, different-6)
dobj(using-5, amounts-7)
det(care-11, this-9)
nn(care-11, health-10)
prep_of(amounts-7, care-11)
det(people-14, some-13)
nsubj(paying-17, people-14)
aux(paying-17, will-15)
aux(paying-17, be-16)
root(ROOT-0, paying-17)
prep_for(paying-17, more-19)
dobj(using-23, more-19)
mark(using-23, than-20)
nsubj(using-23, they-21)
aux(using-23, are-22)
dep(more-19, using-23)
prep_for(paying-17, others-26)
conj_and(more-19, others-26)
dobj(using-23, others-26)
partmod(others-26, using-27)
advmod(than-29, more-28)
advmod(using-27, than-29)
dep(paying-33, what-30)
nsubj(paying-33, they-31)
aux(paying-33, are-32)
ccomp(using-27, paying-33)
prep(paying-33, for-34)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ goes)
      (PP (IN against)
        (NP
          (NP (DT every) (NN tenet))
          (PP (IN of)
            (NP (DT a) (JJ free) (NN market) (NN system))))))
    (. .)))

nsubj(goes-2, This-1)
root(ROOT-0, goes-2)
det(tenet-5, every-4)
prep_against(goes-2, tenet-5)
det(system-10, a-7)
amod(system-10, free-8)
nn(system-10, market-9)
prep_of(tenet-5, system-10)

(ROOT
  (S
    (NP (NNP Will))
    (ADVP (RB inevitably))
    (VP (VB reduce)
      (NP
        (NP (DT the) (NN quality))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS doctors))
            (, ,)
            (NP (NNS procedures))
            (, ,)
            (CC and)
            (NP (NNS medicines))))))
    (. .)))

nsubj(reduce-3, Will-1)
advmod(reduce-3, inevitably-2)
root(ROOT-0, reduce-3)
det(quality-5, the-4)
dobj(reduce-3, quality-5)
det(doctors-8, the-7)
prep_of(quality-5, doctors-8)
prep_of(quality-5, procedures-10)
conj_and(doctors-8, procedures-10)
prep_of(quality-5, medicines-13)
conj_and(doctors-8, medicines-13)

(ROOT
  (S
    (PP (IN Since)
      (NP (DT all)))
    (NP (NNS governments))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB have)
            (S
              (NP (DT the) (JJS lowest) (NN budget))
              (ADJP (JJ possible)))))))
    (. .)))

prep_since(want-4, all-2)
nsubj(want-4, governments-3)
xsubj(have-6, governments-3)
root(ROOT-0, want-4)
aux(have-6, to-5)
xcomp(want-4, have-6)
det(budget-9, the-7)
amod(budget-9, lowest-8)
nsubj(possible-10, budget-9)
xcomp(have-6, possible-10)

