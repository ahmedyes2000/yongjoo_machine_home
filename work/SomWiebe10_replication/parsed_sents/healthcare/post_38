(ROOT
  (S
    (NP (NNP Public) (NN option))
    (VP (VBZ is)
      (ADVP (RB really))
      (VP (IN about)
        (S
          (VP (VBG making)
            (NP (NN way))
            (PP (IN for)
              (NP (DT a) (JJ single-payer) (NN system) (NNP Gregory) (NNP Mankiw)))))))
    (. .)))

nn(option-2, Public-1)
nsubj(about-5, option-2)
aux(about-5, is-3)
advmod(about-5, really-4)
root(ROOT-0, about-5)
xcomp(about-5, making-6)
dobj(making-6, way-7)
det(Mankiw-13, a-9)
amod(Mankiw-13, single-payer-10)
nn(Mankiw-13, system-11)
nn(Mankiw-13, Gregory-12)
prep_for(making-6, Mankiw-13)

(ROOT
  (FRAG ('' '')
    (NP (DT The) (NNS pitfalls))
    (PP (IN of)
      (NP (DT the) (JJ public) (NN option) ('' '')))
    (. .)))

det(pitfalls-3, The-2)
root(ROOT-0, pitfalls-3)
dep(pitfalls-3, of-4)
det(option-7, the-5)
amod(option-7, public-6)
pobj(of-4, option-7)

(ROOT
  (NP (NNP New) (NNP York) (NNP Times) (. .)))

nn(Times-3, New-1)
nn(Times-3, York-2)
root(ROOT-0, Times-3)

(ROOT
  (NP
    (NP (NNP June) (CD 27) (, ,) (CD 2009))
    (: :)
    (S (`` ``)
      (NP (DT the) (JJ public) (NN plan))
      (VP (MD would)
        (ADVP (RB likely))
        (VP
          (VP (VB undercut)
            (NP (JJ private) (NNS firms)))
          (CC and)
          (VP (VB get)
            (NP
              (NP (DT an) (JJ undue) (NN share))
              (PP (IN of)
                (NP (DT the) (NN market))))))))
    (. .)))

root(ROOT-0, June-1)
num(June-1, 27-2)
num(June-1, 2009-4)
det(plan-9, the-7)
amod(plan-9, public-8)
nsubj(undercut-12, plan-9)
nsubj(get-16, plan-9)
aux(undercut-12, would-10)
advmod(undercut-12, likely-11)
dep(June-1, undercut-12)
amod(firms-14, private-13)
dobj(undercut-12, firms-14)
dep(June-1, get-16)
conj_and(undercut-12, get-16)
det(share-19, an-17)
amod(share-19, undue-18)
dobj(get-16, share-19)
det(market-22, the-21)
prep_of(share-19, market-22)

(ROOT
  (S
    (NP (NNP -RRB-) (NNP President) (NNP Obama))
    (VP (MD might) (RB not)
      (VP (VB be)
        (VP (VBN disappointed)
          (SBAR (IN if)
            (S
              (NP (DT that))
              (VP (VBD turned)
                (PRT (RP out))
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (DT the) (NN case)))))))))))
    (. .)))

nn(Obama-3, President-2)
nsubjpass(disappointed-7, Obama-3)
aux(disappointed-7, might-4)
neg(disappointed-7, not-5)
auxpass(disappointed-7, be-6)
root(ROOT-0, disappointed-7)
mark(turned-10, if-8)
nsubj(turned-10, that-9)
advcl(disappointed-7, turned-10)
prt(turned-10, out-11)
aux(case-15, to-12)
cop(case-15, be-13)
det(case-15, the-14)
xcomp(turned-10, case-15)

(ROOT
  (S
    (PP (IN During)
      (NP (DT the) (JJ presidential) (NN campaign)))
    (, ,)
    (NP (PRP he))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (SBAR (IN If)
          (S
            (NP (PRP I))
            (VP (VBD were)
              (VP (VBG designing)
                (NP (DT a) (NN system))
                (PP (IN from)
                  (NP (NN scratch)))))))
        (, ,)
        (NP (PRP I))
        (VP (MD would)
          (ADVP (RB probably))
          (VP (VB go)
            (ADVP (RB ahead))
            (PP (IN with)
              (NP (DT a) (JJ single-payer) (NN system)))))))
    (. .)))

det(campaign-4, the-2)
amod(campaign-4, presidential-3)
prep_during(said-7, campaign-4)
nsubj(said-7, he-6)
root(ROOT-0, said-7)
mark(designing-13, If-10)
nsubj(designing-13, I-11)
aux(designing-13, were-12)
advcl(go-22, designing-13)
det(system-15, a-14)
dobj(designing-13, system-15)
prep_from(designing-13, scratch-17)
nsubj(go-22, I-19)
aux(go-22, would-20)
advmod(go-22, probably-21)
ccomp(said-7, go-22)
advmod(go-22, ahead-23)
det(system-27, a-25)
amod(system-27, single-payer-26)
prep_with(go-22, system-27)

