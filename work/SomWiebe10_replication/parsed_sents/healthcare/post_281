(ROOT
  (S (`` ``)
    (NP
      (NP (CD 5))
      (NP (PRP We)))
    (DT both)
    (VP
      (VP (VBP know))
      (CC and)
      (VP (VBP agree)
        (SBAR (IN that)
          (S
            (NP
              (NP (NNP Australia))
              (, ,)
              (NP (NNP Canada))
              (CC and)
              (NP (DT the) (NNP UK)))
            (VP (VBP have)
              (NP
                (NP (JJR greater) (NN life) (NNS expectancies))
                (PP (IN than)
                  (NP (DT the) (NNP USA) (CD .6)))
                (SBAR
                  (S
                    (NP (PRP We))
                    (DT both)
                    (VP (VBP know)
                      (CC and)
                      (VBP agree)))))
              (SBAR (IN that)
                (S
                  (S
                    (NP
                      (NP (NNP Australia))
                      (, ,)
                      (NP (NNP Canada))
                      (CC and)
                      (NP (DT the) (NNP UK)))
                    (VP (VBP have)
                      (NP (JJ universal) (NN health) (NNS schemes))))
                  (CC and)
                  (S
                    (NP (DT the) (NNP USA))
                    (VP (VBZ does) (RB not))))))))))
    (. .)))

nsubj(know-5, 5-2)
nsubj(agree-7, 5-2)
dep(5-2, We-3)
dep(know-5, both-4)
root(ROOT-0, know-5)
conj_and(know-5, agree-7)
complm(have-15, that-8)
nsubj(have-15, Australia-9)
conj_and(Australia-9, Canada-11)
nsubj(have-15, Canada-11)
det(UK-14, the-13)
conj_and(Australia-9, UK-14)
nsubj(have-15, UK-14)
ccomp(agree-7, have-15)
amod(expectancies-18, greater-16)
nn(expectancies-18, life-17)
dobj(have-15, expectancies-18)
det(USA-21, the-20)
prep_than(expectancies-18, USA-21)
num(USA-21, .6-22)
nsubj(know-25, We-23)
nsubj(agree-27, We-23)
dep(know-25, both-24)
rcmod(expectancies-18, know-25)
rcmod(expectancies-18, agree-27)
conj_and(know-25, agree-27)
complm(have-35, that-28)
nsubj(have-35, Australia-29)
conj_and(Australia-29, Canada-31)
nsubj(have-35, Canada-31)
det(UK-34, the-33)
conj_and(Australia-29, UK-34)
nsubj(have-35, UK-34)
ccomp(have-15, have-35)
amod(schemes-38, universal-36)
nn(schemes-38, health-37)
dobj(have-35, schemes-38)
det(USA-41, the-40)
nsubj(does-42, USA-41)
ccomp(have-15, does-42)
conj_and(have-35, does-42)
neg(does-42, not-43)

(ROOT
  (FRAG ('' '')
    (NP (NNP See) (NNP the))
    (PP (IN above)
      (NP (NN point)))
    (. .)))

nn(the-3, See-2)
root(ROOT-0, the-3)
dep(the-3, above-4)
pobj(above-4, point-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (VP (VBN presented)
        (NP
          (NP (DT no) (NN evidence))
          (PP (IN for)
            (NP (NNP yours))))))
    (. .)))

nsubj(presented-3, You-1)
aux(presented-3, have-2)
root(ROOT-0, presented-3)
det(evidence-5, no-4)
dobj(presented-3, evidence-5)
prep_for(evidence-5, yours-7)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH 1))
    (. .)))


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD pointed)
      (PRT (RP out))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBD missed)
            (NP
              (NP (DT the) (NN context))
              (PP (IN of)
                (NP (PRP$ my)
                  (ADJP (`` ``) (JJ deep) (NN left) ('' ''))
                  (NN comment))))
            (ADVP (RB completely))))))
    (. .)))

nsubj(pointed-2, I-1)
root(ROOT-0, pointed-2)
prt(pointed-2, out-3)
complm(missed-6, that-4)
nsubj(missed-6, you-5)
ccomp(pointed-2, missed-6)
det(context-8, the-7)
dobj(missed-6, context-8)
poss(comment-15, my-10)
dep(left-13, deep-12)
amod(comment-15, left-13)
prep_of(context-8, comment-15)
advmod(missed-6, completely-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD directed)
            (NP (PRP it))
            (PP (IN at)
              (NP
                (NP (NNP Canada))
                (CC and)
                (NP (JJ other) (NNS nations))))
            (PP (IN with)
              (NP (NNP UHC)))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (PP (IN in)
                  (NP (NN reality)))
                (NP (PRP I))
                (VP (VBD was)
                  (VP (VBG directing)
                    (NP (PRP it))
                    (PP (IN at)
                      (NP (PRP you)))))))))))
    (. .)))

nsubj(said-2, You-1)
root(ROOT-0, said-2)
nsubj(directed-4, I-3)
ccomp(said-2, directed-4)
dobj(directed-4, it-5)
prep_at(directed-4, Canada-7)
amod(nations-10, other-9)
prep_at(directed-4, nations-10)
conj_and(Canada-7, nations-10)
prep_with(directed-4, UHC-12)
advmod(directing-19, when-14)
prep_in(directing-19, reality-16)
nsubj(directing-19, I-17)
aux(directing-19, was-18)
advcl(directed-4, directing-19)
dobj(directing-19, it-20)
prep_at(directing-19, you-22)

(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))

root(ROOT-0, 2-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD explained)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (NNP GDPs))
          (VP
            (VP
              (PP (IN with)
                (NP (DT each) (NN nation)))
              (VBP are)
              (NP (NNP GROSS) (NNS measurements)))
            (CC and)
            (VP
              (ADVP (RB thus))
              (MD would)
              (VP (VB need)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN adjusted)
                        (PP (IN for)
                          (NP
                            (NP (JJ different) (NNS sizes))
                            (PP (IN in)
                              (NP (NNS economies)))))))))
                (SBAR (IN before)
                  (S
                    (NP (PRP you))
                    (VP (MD can)
                      (VP (VB draw)
                        (NP (CD conclusions) (CD .3))))))))))))
    (. .)))

nsubj(explained-2, I-1)
root(ROOT-0, explained-2)
advmod(measurements-10, why-3)
nsubj(measurements-10, GDPs-4)
nsubj(need-14, GDPs-4)
xsubj(adjusted-17, GDPs-4)
det(nation-7, each-6)
prep_with(measurements-10, nation-7)
cop(measurements-10, are-8)
nn(measurements-10, GROSS-9)
advcl(explained-2, measurements-10)
advmod(need-14, thus-12)
aux(need-14, would-13)
advcl(explained-2, need-14)
conj_and(measurements-10, need-14)
aux(adjusted-17, to-15)
auxpass(adjusted-17, be-16)
xcomp(need-14, adjusted-17)
amod(sizes-20, different-19)
prep_for(adjusted-17, sizes-20)
prep_in(sizes-20, economies-22)
mark(draw-26, before-23)
nsubj(draw-26, you-24)
aux(draw-26, can-25)
advcl(need-14, draw-26)
num(.3-28, conclusions-27)
dobj(draw-26, .3-28)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP 've)
        (VP (VBN pointed)
          (PP (IN out)
            (NP
              (QP (JJ several) (NNS times)))
            (ADVP (RB already)))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (JJ tiny) (JJ 2-year) (NN difference))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP keep)
                      (S
                        (VP (VBG touting)))))))
              (VP (VBZ is) (RB not)
                (ADVP (RB only)
                  (PP (TO to)
                    (NP (RB little))))
                (S
                  (VP (TO to)
                    (VP (VB call)
                      (PP (IN for)
                        (S
                          (VP (VBG scrapping)
                            (PRT (RP out))
                            (NP (JJ entire) (NN system)))))))))))))
      (CC but)
      (VP
        (ADVP (RB also))
        (VBP have)
        (VP (VBN pointed)
          (PRT (RP out))
          (SBAR (IN that)
            (S
              (SBAR (IN in)
                (S
                  (NP (DT no) (NN instance))
                  (VP (VBP have)
                    (S
                      (NP (PRP you))
                      (VP
                        (ADVP (RB ever))
                        (VB offset)
                        (NP
                          (NP (JJ other) (NNS factors))
                          (PP (IN of)
                            (NP
                              (NP (DT a) (VBN given) (NN nation))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBP affect)
                                    (NP
                                      (NP (NN life) (NN expectancy))
                                      (SBAR
                                        (WHNP (WDT which))
                                        (S
                                          (VP (VBP include)
                                            (NP
                                              (NP (JJ dietary) (NNS choices))
                                              (, ,)
                                              (SBAR
                                                (WHADVP (WRB how))
                                                (S
                                                  (NP (JJ active) (DT the) (JJ typical) (JJ American) (NN lifestyle))
                                                  (VP (VBZ is)
                                                    (NP
                                                      (NP (, ,)
                                                        (NP
                                                          (NP (NN crime) (NNS rates))
                                                          (PRN (-LRB- -LRB-)
                                                            (PP (IN like)
                                                              (NP (NN murder)))
                                                            (-RRB- -RRB-)))
                                                        (, ,) (JJ accidental) (NNS deaths))
                                                      (PRN (-LRB- -LRB-)
                                                        (NP
                                                          (NP (NN car) (NNS crashes))
                                                          (PP (IN for)
                                                            (NP (NN instance))))
                                                        (-RRB- -RRB-))))))))))))))))))))))
              (, ,)
              (NP (PRP you))
              (VP (VBP name)
                (NP (PRP it))))))))
    (. .)))

nsubj(pointed-3, I-1)
nsubj(pointed-31, I-1)
aux(pointed-3, 've-2)
root(ROOT-0, pointed-3)
quantmod(times-6, several-5)
prep_out(pointed-3, times-6)
advmod(pointed-3, already-7)
complm(is-16, that-8)
det(difference-12, the-9)
amod(difference-12, tiny-10)
amod(difference-12, 2-year-11)
dobj(keep-14, difference-12)
nsubj(is-16, difference-12)
xsubj(call-22, difference-12)
nsubj(keep-14, you-13)
rcmod(difference-12, keep-14)
xcomp(keep-14, touting-15)
ccomp(pointed-3, is-16)
neg(is-16, not-17)
advmod(is-16, only-18)
prep(only-18, to-19)
pobj(to-19, little-20)
aux(call-22, to-21)
xcomp(is-16, call-22)
prepc_for(call-22, scrapping-24)
prt(scrapping-24, out-25)
amod(system-27, entire-26)
dobj(scrapping-24, system-27)
advmod(pointed-31, also-29)
aux(pointed-31, have-30)
conj_but(pointed-3, pointed-31)
prt(pointed-31, out-32)
complm(name-81, that-33)
mark(have-37, in-34)
det(instance-36, no-35)
nsubj(have-37, instance-36)
advcl(name-81, have-37)
nsubj(offset-40, you-38)
advmod(offset-40, ever-39)
ccomp(have-37, offset-40)
amod(factors-42, other-41)
dobj(offset-40, factors-42)
det(nation-46, a-44)
amod(nation-46, given-45)
prep_of(factors-42, nation-46)
nsubj(affect-48, nation-46)
rcmod(nation-46, affect-48)
nn(expectancy-50, life-49)
dobj(affect-48, expectancy-50)
nsubj(include-52, expectancy-50)
rcmod(expectancy-50, include-52)
amod(choices-54, dietary-53)
dobj(include-52, choices-54)
advmod(deaths-72, how-56)
amod(lifestyle-61, active-57)
det(lifestyle-61, the-58)
amod(lifestyle-61, typical-59)
amod(lifestyle-61, American-60)
nsubj(deaths-72, lifestyle-61)
cop(deaths-72, is-62)
nn(rates-65, crime-64)
dep(deaths-72, rates-65)
dep(rates-65, like-67)
pobj(like-67, murder-68)
amod(deaths-72, accidental-71)
dep(choices-54, deaths-72)
nn(crashes-75, car-74)
dep(deaths-72, crashes-75)
prep_for(crashes-75, instance-77)
nsubj(name-81, you-80)
ccomp(pointed-31, name-81)
dobj(name-81, it-82)

(ROOT
  (S
    (PP (IN Despite)
      (NP
        (NP (DT the) (NN fact))
        (SBAR (IN that)
          (S
            (NP (PDT all) (DT these))
            (VP (VBP need)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN taken)
                      (PP (IN into)
                        (NP (NN account))))))))))))
    (NP (PRP you))
    (VP (VBP INSIST)
      (SBAR (IN that)
        (S
          (NP (PRP$ your) (JJ precious) (JJ 2-year) (NN difference))
          (VP (VBZ justifies)
            (NP
              (NP (DT the) (NN government) (NN takeover))
              (PP (IN of)
                (NP (PRP$ our) (JJ entire) (NN healthcare) (NN system))))))))
    (. .)))

det(fact-3, the-2)
dobj(need-7, fact-3)
prep_despite(INSIST-14, fact-3)
complm(need-7, that-4)
predet(these-6, all-5)
nsubj(need-7, these-6)
xsubj(taken-10, these-6)
dep(fact-3, need-7)
aux(taken-10, to-8)
auxpass(taken-10, be-9)
xcomp(need-7, taken-10)
prep_into(taken-10, account-12)
nsubj(INSIST-14, you-13)
root(ROOT-0, INSIST-14)
complm(justifies-20, that-15)
poss(difference-19, your-16)
amod(difference-19, precious-17)
amod(difference-19, 2-year-18)
nsubj(justifies-20, difference-19)
ccomp(INSIST-14, justifies-20)
det(takeover-23, the-21)
nn(takeover-23, government-22)
dobj(justifies-20, takeover-23)
poss(system-28, our-25)
amod(system-28, entire-26)
nn(system-28, healthcare-27)
prep_of(takeover-23, system-28)

(ROOT
  (FRAG
    (NP (CD 4))
    (. .)))

root(ROOT-0, 4-1)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN spite))
        (PP (IN of)
          (NP
            (NP (PDT all) (DT those) (NNS points))
            (VP (VBN mentioned)
              (PP (IN above)))))))
    (, ,)
    (PP (VBG including)
      (NP
        (NP (DT the) (NNS links)
          (CC and)
          (NNS references))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP have)
              (VP (VBN provided)
                (PP (IN in)
                  (NP (JJ other) (NNS comments)))))))
        (PRN (-LRB- -LRB-)
          (S
            (VP (VB like)
              (NP (DT this) (NN one) (: :) (JJ http:\/\/www.opposingviews.com\/comments\/do-you-realize-what-you-just-said))))
          (-RRB- -RRB-))))
    (, ,)
    (NP (PRP you))
    (VP (VBP continue)
      (S
        (VP (TO to)
          (VP (VB say)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP have)
                  (VP (VBN provided)
                    (NP
                      (NP (DT no) (NN evidence) (RB whatsoever))
                      (PP (IN of)
                        (NP (PRP$ my) (NNS claims))))))))))))
    (. .)))

predet(points-6, all-4)
det(points-6, those-5)
prep_in_spite_of(continue-30, points-6)
partmod(points-6, mentioned-7)
prep(mentioned-7, above-8)
det(links-12, the-11)
dobj(provided-17, links-12)
prep_including(continue-30, links-12)
conj_and(links-12, references-14)
dobj(provided-17, references-14)
prep_including(continue-30, references-14)
nsubj(provided-17, I-15)
aux(provided-17, have-16)
rcmod(links-12, provided-17)
amod(comments-20, other-19)
prep_in(provided-17, comments-20)
dep(links-12, like-22)
det(one-24, this-23)
dobj(like-22, one-24)
amod(one-24, http:\/\/www.opposingviews.com\/comments\/do-you-realize-what-you-just-said-26)
nsubj(continue-30, you-29)
xsubj(say-32, you-29)
root(ROOT-0, continue-30)
aux(say-32, to-31)
xcomp(continue-30, say-32)
nsubj(provided-35, I-33)
aux(provided-35, have-34)
ccomp(say-32, provided-35)
det(evidence-37, no-36)
dobj(provided-35, evidence-37)
advmod(evidence-37, whatsoever-38)
poss(claims-41, my-40)
prep_of(evidence-37, claims-41)

(ROOT
  (S (`` ``)
    (NP
      (NP (CD 7))
      (SBAR
        (S
          (NP (PRP We))
          (ADVP (RB also))
          (VP (VBP know)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NN proportion))
                  (PP (IN of)
                    (NP (NNP GDP))))
                (VP (VBD spent)
                  (PP (IN on)
                    (NP (NN health) (NN care)))
                  (PP (IN in)
                    (NP (DT these) (CD three) (NNS countries))))))))))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJR lower))
        (PP (IN than)
          (NP (DT the) (NNP United) (NNPS States)))))
    (. .)))

nsubj(lower-20, 7-2)
nsubj(know-5, We-3)
advmod(know-5, also-4)
rcmod(7-2, know-5)
complm(spent-11, that-6)
det(proportion-8, the-7)
nsubj(spent-11, proportion-8)
prep_of(proportion-8, GDP-10)
ccomp(know-5, spent-11)
nn(care-14, health-13)
prep_on(spent-11, care-14)
det(countries-18, these-16)
num(countries-18, three-17)
prep_in(spent-11, countries-18)
cop(lower-20, is-19)
root(ROOT-0, lower-20)
det(States-24, the-22)
nn(States-24, United-23)
prep_than(lower-20, States-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB let)
        (S
          (NP
            (NP (DT the) (NN hypocrisy))
            (PP (IN of)
              (NP (DT that) (NN statement))))
          (VP (VB speak)
            (PP (IN for)
              (NP (PRP itself)))))))
    (. .)))

nsubj(let-3, I-1)
aux(let-3, will-2)
root(ROOT-0, let-3)
det(hypocrisy-5, the-4)
nsubj(speak-9, hypocrisy-5)
det(statement-8, that-7)
prep_of(hypocrisy-5, statement-8)
ccomp(let-3, speak-9)
prep_for(speak-9, itself-11)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP we))
    (VP (VBP disagree)
      (PRT (RP about))
      (SBAR (IN whether)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP (DT a) (JJ reliable) (NN comparison))))))
    (. .)))

advmod(disagree-4, However-1)
nsubj(disagree-4, we-3)
root(ROOT-0, disagree-4)
prt(disagree-4, about-5)
complm(comparison-11, whether-6)
nsubj(comparison-11, this-7)
cop(comparison-11, is-8)
det(comparison-11, a-9)
amod(comparison-11, reliable-10)
ccomp(disagree-4, comparison-11)

(ROOT
  (S ('' '')
    (S
      (S
        (VP
          (VP (VB See)
            (NP (DT the) (JJ first) (NN point)))
          (, ,)
          (CC and)
          (VP (VB see)
            (NP
              (NP (DT this) (NN article))
              (: :)
              (S
                (NP (NNP http:\/\/www.opposingviews.com\/arguments\/single-payer-systems-do-not-cost-less-than-the-us-health-care-system) (NNP GDP))
                (VP (VBZ is)
                  (UCP
                    (NP (DT a) (NNP GROSS) (NN measurement))
                    (, ,)
                    (CC and)
                    (RB as)
                    (ADJP (VBN seen)
                      (PP (IN in)
                        (NP (DT the) (JJ above) (NN article)))))))))))
      (NP (JJ Canadian) (NNS systems))
      (VP (VBD SPEND)
        (NP
          (QP (JJR less) (IN than) (CD US))
          (NNS systems))))
    (RB yet)
    (S
      (NP (DT this))
      (VP (VBZ does) (RB n't)
        (ADVP (RB even))
        (VP (VB prevent)
          (NP (PRP them))
          (PP (IN from)
            (S
              (VP (VBG COSTING)
                (NP (JJR less))))))))
    (. .)))

dep(SPEND-28, See-2)
det(point-5, the-3)
amod(point-5, first-4)
dobj(See-2, point-5)
conj_and(See-2, see-8)
dep(SPEND-28, see-8)
det(article-10, this-9)
dobj(see-8, article-10)
nn(GDP-13, http:\/\/www.opposingviews.com\/arguments\/single-payer-systems-do-not-cost-less-than-the-us-health-care-system-12)
nsubj(measurement-17, GDP-13)
nsubj(seen-21, GDP-13)
cop(measurement-17, is-14)
det(measurement-17, a-15)
nn(measurement-17, GROSS-16)
dep(article-10, measurement-17)
advmod(seen-21, as-20)
dep(article-10, seen-21)
conj_and(measurement-17, seen-21)
det(article-25, the-23)
amod(article-25, above-24)
prep_in(seen-21, article-25)
amod(systems-27, Canadian-26)
nsubj(SPEND-28, systems-27)
root(ROOT-0, SPEND-28)
mwe(than-30, less-29)
quantmod(US-31, than-30)
num(systems-32, US-31)
dobj(SPEND-28, systems-32)
advmod(SPEND-28, yet-33)
nsubj(prevent-38, this-34)
aux(prevent-38, does-35)
neg(prevent-38, n't-36)
advmod(prevent-38, even-37)
ccomp(SPEND-28, prevent-38)
dobj(prevent-38, them-39)
prepc_from(prevent-38, COSTING-41)
dobj(COSTING-41, less-42)

(ROOT
  (S (`` ``)
    (NP
      (NP (CD 8))
      (SBAR
        (S
          (NP (PRP You))
          (VP (VBP assert)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NNS differences))
                  (PP (IN in)
                    (NP (NN life) (NN expectancy))))
                (VP (VBP have) (`` ``)
                  (NP
                    (ADVP (RB probably) ('' ''))
                    (NN nothing))))))))
      (SBAR
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NN health))))))))
    (VP (VBP care))
    (. .)))

nsubj(care-20, 8-2)
nsubj(assert-4, You-3)
rcmod(8-2, assert-4)
complm(have-11, that-5)
det(differences-7, the-6)
nsubj(have-11, differences-7)
nn(expectancy-10, life-9)
prep_in(differences-7, expectancy-10)
ccomp(assert-4, have-11)
advmod(nothing-15, probably-13)
dobj(have-11, nothing-15)
aux(do-17, to-16)
infmod(8-2, do-17)
prep_with(do-17, health-19)
root(ROOT-0, care-20)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP you))
    (VP (VBP have) (RB not)
      (VP (VBN provided)
        (NP
          (NP (CD one) (NN shred))
          (PP (IN of)
            (NP (NN evidence))))
        (PP (IN for)
          (NP (DT this) (NN claim)))))
    (. .)))

advmod(provided-6, However-1)
nsubj(provided-6, you-3)
aux(provided-6, have-4)
neg(provided-6, not-5)
root(ROOT-0, provided-6)
num(shred-8, one-7)
dobj(provided-6, shred-8)
prep_of(shred-8, evidence-10)
det(claim-13, this-12)
prep_for(provided-6, claim-13)

(ROOT
  (S ('' '')
    (NP (PRP$ Your))
    (VP (VBD rehashing)
      (NP (PRP$ your) (NN argument))
      (PP (IN from)
        (NP (NN point) (NN number) (CD 4))))
    (. .)))

nsubj(rehashing-3, Your-2)
root(ROOT-0, rehashing-3)
poss(argument-5, your-4)
dobj(rehashing-3, argument-5)
nn(number-8, point-7)
prep_from(rehashing-3, number-8)
num(number-8, 4-9)

(ROOT
  (S
    (PP (IN In)
      (NP (DT that) (NN case)))
    (, ,)
    (VP (VB see)
      (NP
        (NP (PRP$ my) (NN response))
        (SBAR
          (WHPP (TO to)
            (WHNP (WDT that) (NN point)))
          (S
            (NP (PRP you))
            (VP (VBD raised))))))
    (. .)))

det(case-3, that-2)
prep_in(see-5, case-3)
root(ROOT-0, see-5)
poss(response-7, my-6)
dobj(see-5, response-7)
det(point-10, response-7)
rel(raised-12, point-10)
nsubj(raised-12, you-11)
rcmod(response-7, raised-12)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN presented)
        (NP
          (NP (NN evidence))
          (PP (IN for)
            (NP (PRP$ my) (NN opinion))))))
    (. .)))

nsubj(presented-4, I-2)
aux(presented-4, have-3)
root(ROOT-0, presented-4)
dobj(presented-4, evidence-5)
poss(opinion-8, my-7)
prep_for(evidence-5, opinion-8)

