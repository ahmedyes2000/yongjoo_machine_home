(ROOT
  (S
    (NP
      (NP (DT The) (JJ flawed) (NN premise))
      (PP (IN behind) (`` ``)
        (NP (JJ universal) (NN health) (NN care))
        ('' '')))
    (VP (VBZ is)
      (VP (VBG regarding)
        (NP (NN health) (NN care))
        (PP (IN as)
          (NP (DT a) (`` ``) (NN right) ('' '')))))
    (. .)))

det(premise-3, The-1)
amod(premise-3, flawed-2)
nsubj(regarding-11, premise-3)
amod(care-8, universal-6)
nn(care-8, health-7)
prep_behind(premise-3, care-8)
aux(regarding-11, is-10)
root(ROOT-0, regarding-11)
nn(care-13, health-12)
dobj(regarding-11, care-13)
det(right-17, a-15)
prep_as(regarding-11, right-17)

(ROOT
  (S
    (NP (NNP Health) (NN care))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN need))
        (, ,)
        (CONJP (CC but)
          (RB not))
        (NP (DT a) (`` ``) (NN right) ('' ''))
        (, ,)
        (CC and)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (NP (DT a) (JJ critical) (NN difference)))))))
    (. .)))

nn(care-2, Health-1)
nsubj(need-5, care-2)
cop(need-5, is-3)
det(need-5, a-4)
root(ROOT-0, need-5)
det(right-11, a-9)
conj_negcc(need-5, right-11)
nsubj(difference-19, that-15)
cop(difference-19, 's-16)
det(difference-19, a-17)
amod(difference-19, critical-18)
conj_and(need-5, difference-19)
rcmod(need-5, difference-19)
rcmod(right-11, difference-19)

(ROOT
  (S
    (NP (DT A) (NN right))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN freedom))
        (PP (IN of)
          (NP (NN action)))
        (, ,)
        (PP (JJ such) (IN as)
          (NP (DT the) (NN right)
            (S
              (VP (TO to)
                (VP (VB free)
                  (NP (NN speech)
                    (CC or)
                    (NN right))
                  (PP (TO to)
                    (NP (NN contract))))))))))
    (. .)))

det(right-2, A-1)
nsubj(freedom-5, right-2)
cop(freedom-5, is-3)
det(freedom-5, a-4)
root(ROOT-0, freedom-5)
prep_of(freedom-5, action-7)
det(right-12, the-11)
prep_such_as(freedom-5, right-12)
aux(free-14, to-13)
infmod(right-12, free-14)
dobj(free-14, speech-15)
dobj(free-14, right-17)
conj_or(speech-15, right-17)
prep_to(free-14, contract-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT an) (JJ unearned) (JJ automatic) (NN claim))
        (PP (IN on)
          (NP
            (NP (DT the) (NNS goods)
              (CC or)
              (NNS services))
            (VP (VBN produced)
              (PP (IN by)
                (NP
                  (NP (DT another) (NN person))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ 's)
                        (ADVP (RB just))
                        (NP (JJ state-sanctioned) (NN theft)
                          (CC or)
                          (NN slavery))))))))))))
    (. .)))

nsubj(claim-7, It-1)
cop(claim-7, is-2)
neg(claim-7, not-3)
det(claim-7, an-4)
amod(claim-7, unearned-5)
amod(claim-7, automatic-6)
root(ROOT-0, claim-7)
det(goods-10, the-9)
prep_on(claim-7, goods-10)
prep_on(claim-7, services-12)
conj_or(goods-10, services-12)
partmod(goods-10, produced-13)
det(person-16, another-15)
agent(produced-13, person-16)
nsubj(theft-21, person-16)
cop(theft-21, 's-18)
advmod(theft-21, just-19)
amod(theft-21, state-sanctioned-20)
rcmod(person-16, theft-21)
rcmod(person-16, slavery-23)
conj_or(theft-21, slavery-23)

(ROOT
  (S
    (SBAR (RB Just) (IN because)
      (S
        (NP (PRP$ my) (NN neighbor))
        (VP (VBZ is)
          (ADJP (JJ hungry)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does) (RB n't)
      (VP (VB give)
        (NP (PRP him))
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP
                  (NP (DT a) (NN can))
                  (PP (IN of)
                    (NP (NN soup))))
                (PP (IN from)
                  (NP (PRP$ my) (NN pantry)))))))))
    (. .)))

advmod(hungry-6, Just-1)
dep(hungry-6, because-2)
poss(neighbor-4, my-3)
nsubj(hungry-6, neighbor-4)
cop(hungry-6, is-5)
advcl(give-11, hungry-6)
nsubj(give-11, it-8)
aux(give-11, does-9)
neg(give-11, n't-10)
root(ROOT-0, give-11)
iobj(give-11, him-12)
det(right-14, the-13)
dobj(give-11, right-14)
aux(take-16, to-15)
infmod(right-14, take-16)
det(can-18, a-17)
dobj(take-16, can-18)
prep_of(can-18, soup-20)
poss(pantry-23, my-22)
prep_from(take-16, pantry-23)

(ROOT
  (S
    (S
      (NP (NNP Rights))
      (ADVP (RB only))
      (VP (VB impose)
        (NP (JJ negative) (NNS obligations))
        (PP (IN on)
          (NP
            (NP (NNS others))
            (PP (IN for)
              (NP (NN instance)))))))
    (, ,)
    (NP (PRP$ my)
      (ADJP (JJ right) (TO to) (JJ free))
      (NN speech))
    (ADVP (RB only))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP
            (NP (NN someone) (RB else))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (PRP$ my) (NN neighbor))
                (CC or)
                (NP (DT the) (NN government)))
              (-RRB- -RRB-)))
          (VP (MD ca) (RB n't)
            (VP (VB stop)
              (NP (PRP me)))))))
    (. .)))

nsubj(impose-3, Rights-1)
advmod(impose-3, only-2)
ccomp(means-17, impose-3)
amod(obligations-5, negative-4)
dobj(impose-3, obligations-5)
prep_on(impose-3, others-7)
prep_for(others-7, instance-9)
poss(speech-15, my-11)
amod(free-14, right-12)
dep(free-14, to-13)
amod(speech-15, free-14)
nsubj(means-17, speech-15)
advmod(means-17, only-16)
root(ROOT-0, means-17)
complm(stop-30, that-18)
nsubj(stop-30, someone-19)
advmod(someone-19, else-20)
poss(neighbor-23, my-22)
dep(someone-19, neighbor-23)
det(government-26, the-25)
dep(someone-19, government-26)
conj_or(neighbor-23, government-26)
aux(stop-30, ca-28)
neg(stop-30, n't-29)
ccomp(means-17, stop-30)
dobj(stop-30, me-31)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ chooses)
          (S
            (VP (TO to)
              (VP (VB leave)
                (NP (PRP me))
                (ADVP (RB alone))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP he))
    (VP (VBZ has) (RB n't)
      (VP (VBD violated)
        (NP (PRP$ my) (NNS rights))))
    (. .)))

mark(chooses-3, If-1)
nsubj(chooses-3, someone-2)
xsubj(leave-5, someone-2)
advcl(violated-13, chooses-3)
aux(leave-5, to-4)
xcomp(chooses-3, leave-5)
dobj(leave-5, me-6)
advmod(leave-5, alone-7)
advmod(violated-13, then-9)
nsubj(violated-13, he-10)
aux(violated-13, has-11)
neg(violated-13, n't-12)
root(ROOT-0, violated-13)
poss(rights-15, my-14)
dobj(violated-13, rights-15)

(ROOT
  (S
    (NP
      (NP (DT Any) (JJ alleged) (`` ``) (NN right) ('' ''))
      (PP (TO to)
        (NP (NN health) (NN care))))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB be)
        (VP (VBN implemented)
          (PP (IN by)
            (S
              (VP (VBG violating)
                (NP
                  (NP (DT the) (JJ actual) (NNS rights))
                  (PP (IN of)
                    (NP
                      (NP (NNS doctors))
                      (CC and)
                      (NP (JJ other) (NN health) (NN care) (NNS providers)))))))))))
    (. .)))

det(right-4, Any-1)
amod(right-4, alleged-2)
nsubjpass(implemented-12, right-4)
nn(care-8, health-7)
prep_to(right-4, care-8)
aux(implemented-12, can-9)
advmod(implemented-12, only-10)
auxpass(implemented-12, be-11)
root(ROOT-0, implemented-12)
agent(implemented-12, violating-14)
det(rights-17, the-15)
amod(rights-17, actual-16)
dobj(violating-14, rights-17)
prep_of(rights-17, doctors-19)
amod(providers-24, other-21)
nn(providers-24, health-22)
nn(providers-24, care-23)
prep_of(rights-17, providers-24)
conj_and(doctors-19, providers-24)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S (`` ``)
          (NP (JJ universal) (NN health) (NN care))
          ('' '')
          (VP (VBZ is)
            (ADVP (JJ such))
            (NP (DT a)
              (ADJP (RB grossly) (JJ immoral))
              (NN policy))
            (, ,)
            (CC and)
            (VP (MD should)
              (VP (VB be)
                (VP (VBN opposed)
                  (PP (IN as)
                    (NP (JJ such))))))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
advmod(policy-14, why-3)
amod(care-7, universal-5)
nn(care-7, health-6)
nsubj(policy-14, care-7)
nsubjpass(opposed-19, care-7)
cop(policy-14, is-9)
advmod(policy-14, such-10)
det(policy-14, a-11)
advmod(immoral-13, grossly-12)
amod(policy-14, immoral-13)
advcl(is-2, policy-14)
aux(opposed-19, should-17)
auxpass(opposed-19, be-18)
advcl(is-2, opposed-19)
conj_and(policy-14, opposed-19)
prep_such_as(opposed-19, such-21)

