(ROOT
  (S (`` ``)
    (SBAR
      (WHNP (WP What))
      (S
        (NP (JJ single) (NN payer) (NNS means))
        (VP (VBZ is))))
    (, ,)
    (NP (PRP you))
    (VP (VBP pick)
      (NP (PRP$ your) (NN doctor)))
    (. .)))

dobj(is-6, What-2)
amod(means-5, single-3)
nn(means-5, payer-4)
nsubj(is-6, means-5)
dep(pick-9, is-6)
nsubj(pick-9, you-8)
root(ROOT-0, pick-9)
poss(doctor-11, your-10)
dobj(pick-9, doctor-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP pick)
      (NP (PRP$ your) (NN hospital)))
    (. .)))

nsubj(pick-2, You-1)
root(ROOT-0, pick-2)
poss(hospital-4, your-3)
dobj(pick-2, hospital-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG paying)
        (PP (IN for)
          (NP (DT some) (JJ old) (NN person)))
        (S
          (VP (TO to)
            (VP (VB live)
              (NP (DT a) (JJ little) (NN bit))
              (ADVP
                (ADVP (RBR longer))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP I))
                    (VP (MD could)
                      (VP (VB be)
                        (VP
                          (VP (VBG buying)
                            (NP (NNS textbooks)))
                          (CC and)
                          (VP (VBG saving)
                            (PP (IN for)
                              (NP (DT a) (NN car)))))))))))))))
    (. .)))

nsubj(paying-3, I-1)
xsubj(live-9, I-1)
aux(paying-3, 'm-2)
root(ROOT-0, paying-3)
det(person-7, some-5)
amod(person-7, old-6)
prep_for(paying-3, person-7)
aux(live-9, to-8)
xcomp(paying-3, live-9)
det(bit-12, a-10)
amod(bit-12, little-11)
dobj(live-9, bit-12)
advmod(live-9, longer-13)
advmod(buying-18, when-14)
nsubj(buying-18, I-15)
nsubj(saving-21, I-15)
aux(buying-18, could-16)
aux(buying-18, be-17)
dep(longer-13, buying-18)
dobj(buying-18, textbooks-19)
dep(longer-13, saving-21)
conj_and(buying-18, saving-21)
det(car-24, a-23)
prep_for(saving-21, car-24)

(ROOT
  (SINV
    (ADVP (RB Even))
    (ADJP (JJR worse))
    (VP (VBZ is)
      (ADJP (JJ social)))
    (NP (NN security)
      (SBAR
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP I))
            (VP (VBD paid)
              (NP (CD 1043))
              (PP (IN in)
                (NP (CD 2008))))))
        (CC and)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP I))
            (VP (VBP expect)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP
                      (NP (NN none))
                      (PP (IN of)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP I))
                            (VP (VBP retire)
                              (SBAR (IN because)
                                (S
                                  (NP (DT the) (NN country))
                                  (VP (VBZ is)
                                    (ADJP (JJ bankrupt))))))))))))))))))
    (. .)))

advmod(social-4, Even-1)
dep(social-4, worse-2)
cop(social-4, is-3)
root(ROOT-0, social-4)
nsubj(social-4, security-5)
dobj(paid-8, which-6)
nsubj(paid-8, I-7)
ccomp(security-5, paid-8)
dobj(paid-8, 1043-9)
prep_in(paid-8, 2008-11)
dep(expect-15, which-13)
nsubj(expect-15, I-14)
xsubj(see-17, I-14)
ccomp(security-5, expect-15)
conj_and(paid-8, expect-15)
aux(see-17, to-16)
xcomp(expect-15, see-17)
dobj(see-17, none-18)
advmod(retire-22, when-20)
nsubj(retire-22, I-21)
prepc_of(none-18, retire-22)
mark(bankrupt-27, because-23)
det(country-25, the-24)
nsubj(bankrupt-27, country-25)
cop(bankrupt-27, is-26)
advcl(retire-22, bankrupt-27)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Total))
        (PP (IN in)
          (NP (NNS taxes)))))
    (, ,)
    (NP (PRP I))
    (VP (VBD paid)
      (NP (CD 3382))
      (PP (IN in)
        (NP (CD 2008))))
    (. .)))

ccomp(paid-6, Total-1)
prep_in(Total-1, taxes-3)
nsubj(paid-6, I-5)
root(ROOT-0, paid-6)
dobj(paid-6, 3382-7)
prep_in(paid-6, 2008-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (NP
          (NP (DT a) (NN model) (NN citizen))
          (PP (IN in)
            (NP (JJ graduate) (NN school)))
          (, ,)
          (VP (VBG planning)
            (PP (IN on)
              (S
                (VP (VBG being)
                  (NP
                    (NP (DT a) (NN college) (NN professor))
                    (, ,)
                    (VP
                      (ADVP (RB never))
                      (VBN broken)
                      (NP (DT the) (NN law)))
                    (, ,)
                    (VP (VBG working)
                      (PP (IN as)
                        (NP (DT a) (JJ full) (NN time) (NN TA)))
                      (S
                        (VP (TO to)
                          (VP (VB get)
                            (PP (IN through)
                              (NP (PRP it)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (PP (IN in)
          (NP (JJ serious) (NN debt)))
        (SBAR
          (ADVP (RB right) (RB now))
          (IN because)
          (S
            (NP (PRP I))
            (VP (MD ca) (RB n't)
              (VP (VB afford)
                (NP (VBG living) (NNS expenses))))))))
    (. .)))

nsubj(citizen-5, I-1)
cop(citizen-5, am-2)
det(citizen-5, a-3)
nn(citizen-5, model-4)
root(ROOT-0, citizen-5)
amod(school-8, graduate-7)
prep_in(citizen-5, school-8)
partmod(citizen-5, planning-10)
cop(professor-15, being-12)
det(professor-15, a-13)
nn(professor-15, college-14)
prepc_on(planning-10, professor-15)
xsubj(get-29, professor-15)
neg(broken-18, never-17)
partmod(professor-15, broken-18)
det(law-20, the-19)
dobj(broken-18, law-20)
partmod(professor-15, working-22)
det(TA-27, a-24)
amod(TA-27, full-25)
nn(TA-27, time-26)
prep_as(working-22, TA-27)
aux(get-29, to-28)
xcomp(working-22, get-29)
prep_through(get-29, it-31)
nsubj(am-35, I-34)
conj_and(citizen-5, am-35)
amod(debt-38, serious-37)
prep_in(am-35, debt-38)
advmod(now-40, right-39)
advmod(afford-45, now-40)
dep(afford-45, because-41)
nsubj(afford-45, I-42)
aux(afford-45, ca-43)
neg(afford-45, n't-44)
ccomp(am-35, afford-45)
amod(expenses-47, living-46)
dobj(afford-45, expenses-47)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is) (RB all)
        (ADJP (JJ easy))
        (SBAR (IN for)
          (S
            (NP (PRP you))
            (VP (TO to)
              (VP (VB say)
                (PRT (RP up))
                (ADVP (RB there))
                (PP (IN in)
                  (NP (NNP Canada)))))))))
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADJP (JJ like))
                  (PP (IN for)
                    (NP (NN college) (NNS kids)
                      (CC and)
                      (NNS grads)))
                  (ADVP
                    (ADVP (RB right) (RB now))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (MD ca) (RB n't)
                          (VP (VB get)
                            (NP (NNS jobs))))))))))
            (CC and)
            (SBAR
              (WHNP (WP$ whose) (NNS parents))
              (S
                (VP (VBP are)
                  (VP (VBG losing)
                    (NP (NNS jobs))))))))))
    (. .)))

nsubj(easy-4, This-1)
cop(easy-4, is-2)
advmod(easy-4, all-3)
root(ROOT-0, easy-4)
mark(say-8, for-5)
nsubj(say-8, you-6)
aux(say-8, to-7)
advcl(easy-4, say-8)
xcomp(easy-4, say-8)
prt(say-8, up-9)
advmod(say-8, there-10)
prep_in(say-8, Canada-12)
nsubj(know-17, you-14)
aux(know-17, do-15)
neg(know-17, n't-16)
conj_but(easy-4, know-17)
dobj(like-21, what-18)
nsubj(like-21, it-19)
cop(like-21, 's-20)
dep(know-17, like-21)
nn(kids-24, college-23)
prep_for(like-21, kids-24)
prep_for(like-21, grads-26)
conj_and(kids-24, grads-26)
advmod(now-28, right-27)
advmod(like-21, now-28)
nsubj(get-32, who-29)
aux(get-32, ca-30)
neg(get-32, n't-31)
dep(now-28, get-32)
dobj(get-32, jobs-33)
poss(parents-36, whose-35)
nsubj(losing-38, parents-36)
aux(losing-38, are-37)
dep(know-17, losing-38)
conj_and(like-21, losing-38)
dobj(losing-38, jobs-39)

(ROOT
  (S
    (NP (VBG Taxing) (NN everyone))
    (ADVP (RBR more))
    (VP (VBZ is) (RB not)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB help))))))
    (. .)))

amod(everyone-2, Taxing-1)
nsubj(going-6, everyone-2)
xsubj(help-8, everyone-2)
advmod(going-6, more-3)
aux(going-6, is-4)
neg(going-6, not-5)
root(ROOT-0, going-6)
aux(help-8, to-7)
xcomp(going-6, help-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd) (RB rather)
      (VP (VB have)
        (NP (DT the) (NN cash)
          (S
            (VP (TO to)
              (VP (VB spend)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP I))
                    (VP (VBP choose)
                      (SBAR (IN than)
                        (S
                          (VP (TO to)
                            (VP (VB have)
                              (NP (JJ public) (NN health) (NN care)))))))))))))))
    (. .)))

nsubj(have-4, I-1)
aux(have-4, 'd-2)
advmod(have-4, rather-3)
root(ROOT-0, have-4)
det(cash-6, the-5)
dobj(have-4, cash-6)
aux(spend-8, to-7)
infmod(cash-6, spend-8)
advmod(choose-11, where-9)
nsubj(choose-11, I-10)
advcl(spend-8, choose-11)
mark(have-14, than-12)
aux(have-14, to-13)
advcl(choose-11, have-14)
xcomp(choose-11, have-14)
amod(care-17, public-15)
nn(care-17, health-16)
dobj(have-14, care-17)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (MD could) (`` ``)
          (VP (VB buy)
            (PP (IN into) ('' '')
              (NP (DT the) (JJ public) (NN option)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB be)
        (NP
          (NP (DT all))
          (PP (IN for)
            (NP (PRP it))))))
    (. .)))

advmod(all-17, Again-1)
mark(buy-7, If-3)
nsubj(buy-7, we-4)
aux(buy-7, could-5)
advcl(all-17, buy-7)
det(option-12, the-10)
amod(option-12, public-11)
prep_into(buy-7, option-12)
nsubj(all-17, I-14)
aux(all-17, 'd-15)
cop(all-17, be-16)
root(ROOT-0, all-17)
prep_for(all-17, it-19)

(ROOT
  (S
    (NP (NNP Government))
    (VP (VBZ picks)
      (PRT (RP up))
      (NP (DT the) (NN bill)))
    (. .)))

nsubj(picks-2, Government-1)
root(ROOT-0, picks-2)
prt(picks-2, up-3)
det(bill-5, the-4)
dobj(picks-2, bill-5)

(ROOT
  (S (`` ``)
    (S
      (NP (NN government) (NNS =))
      (VP (VBD everyoneIf)
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD could) (`` ``)
              (VP (VB buy)
                (PP (IN into) ('' '')
                  (NP (DT the) (JJ public) (NN option)))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB be)
        (NP
          (NP (DT all))
          (PP (IN for)
            (NP (PRP it))))))
    (. .)))

nn(=-3, government-2)
nsubj(everyoneIf-4, =-3)
ccomp(all-18, everyoneIf-4)
nsubj(buy-8, we-5)
aux(buy-8, could-6)
ccomp(everyoneIf-4, buy-8)
det(option-13, the-11)
amod(option-13, public-12)
prep_into(buy-8, option-13)
nsubj(all-18, I-15)
aux(all-18, 'd-16)
cop(all-18, be-17)
root(ROOT-0, all-18)
prep_for(all-18, it-20)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (MD ca) (RB n't))
    (. .)))

cc(ca-3, But-1)
nsubj(ca-3, we-2)
root(ROOT-0, ca-3)
neg(ca-3, n't-4)

(ROOT
  (S
    (NP (PRP We))
    (ADVP (DT all))
    (VP (VB pay)
      (NP (DT no) (NN matter))
      (NP (WP what)))
    (. .)))

nsubj(pay-3, We-1)
advmod(pay-3, all-2)
root(ROOT-0, pay-3)
det(matter-5, no-4)
iobj(pay-3, matter-5)
dobj(pay-3, what-6)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBD checked)
      (NP (PRP$ my) (JJ old) (NN paycheck) (NNS stubs)))
    (: ...)))

nsubj(checked-3, I-1)
advmod(checked-3, just-2)
root(ROOT-0, checked-3)
poss(stubs-7, my-4)
amod(stubs-7, old-5)
nn(stubs-7, paycheck-6)
dobj(checked-3, stubs-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD paid)
      (NP (CD 245))
      (PP (IN for)
        (NP (NN medicare)))
      (PP (IN in)
        (NP (CD 2008))))
    (. .)))

nsubj(paid-2, I-1)
root(ROOT-0, paid-2)
dobj(paid-2, 245-3)
prep_for(paid-2, medicare-5)
prep_in(paid-2, 2008-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (DT no) (NN health) (NN insurance))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (VP (VBG struggling)
            (S
              (VP (TO to)
                (VP (VB pay)
                  (NP (NN rent))))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB afford)
          (NP (NNS textbooks)))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(insurance-5, no-3)
nn(insurance-5, health-4)
dobj(have-2, insurance-5)
nsubj(struggling-9, I-7)
xsubj(pay-11, I-7)
aux(struggling-9, am-8)
dep(have-2, struggling-9)
aux(pay-11, to-10)
xcomp(struggling-9, pay-11)
dobj(pay-11, rent-12)
nsubj(afford-18, I-15)
aux(afford-18, ca-16)
neg(afford-18, n't-17)
conj_and(have-2, afford-18)
dobj(afford-18, textbooks-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP live)
      (PRT (RP off))
      (PP (IN of)
        (NP (NN ramen)
          (CC and)
          (NN pasta)))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP 're)
            (NP
              (NP (DT the) (JJS cheapest))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD can)
                    (VP (VB get))))))))))
    (. .)))

nsubj(live-2, I-1)
root(ROOT-0, live-2)
prep_off_of(live-2, ramen-5)
prep_off_of(live-2, pasta-7)
conj_and(ramen-5, pasta-7)
mark(cheapest-12, because-8)
nsubj(cheapest-12, they-9)
cop(cheapest-12, 're-10)
det(cheapest-12, the-11)
advcl(live-2, cheapest-12)
dobj(get-15, cheapest-12)
nsubj(get-15, I-13)
aux(get-15, can-14)
rcmod(cheapest-12, get-15)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP (DT this) (NN fair)))
    (. ?)))

advmod(is-2, How-1)
root(ROOT-0, is-2)
det(fair-4, this-3)
nsubj(is-2, fair-4)

