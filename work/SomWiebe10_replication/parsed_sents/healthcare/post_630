(ROOT
  (S
    (NP (NNP Healthcare))
    (VP (MD should) (RB not)
      (VP (VB be)
        (ADJP (JJ free))))
    (. .)))

nsubj(free-5, Healthcare-1)
aux(free-5, should-2)
neg(free-5, not-3)
cop(free-5, be-4)
root(ROOT-0, free-5)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (MD ca) (RB n't)
            (VP (VB afford)
              (NP (NN healthcare))))))
      (, ,)
      (NP (DT that))
      (VP (VBZ 's)
        (ADJP (JJ tough))))
    (, ,) (RB then)
    (S
      (NP (PRP you))
      (VP (MD should)
        (VP (VB get)
          (NP
            (NP (DT a) (NN job))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ means)
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (MD can)
                        (VP (VB afford)
                          (NP (PRP it)))))))))))))
    (. .)))

mark(afford-5, If-1)
nsubj(afford-5, you-2)
aux(afford-5, ca-3)
neg(afford-5, n't-4)
advcl(tough-10, afford-5)
dobj(afford-5, healthcare-6)
nsubj(tough-10, that-8)
cop(tough-10, 's-9)
root(ROOT-0, tough-10)
advmod(tough-10, then-12)
nsubj(get-15, you-13)
aux(get-15, should-14)
ccomp(tough-10, get-15)
det(job-17, a-16)
dobj(get-15, job-17)
nsubj(means-19, job-17)
rcmod(job-17, means-19)
nsubj(afford-22, you-20)
aux(afford-22, can-21)
ccomp(means-19, afford-22)
dobj(afford-22, it-23)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ means)
        (NP
          (NP (JJ short) (VBG waiting) (NNS times))
          (PP (IN for)
            (NP (JJ essential) (NN treatment))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBP mean)
        (S
          (VP (VBG being)
            (VP (VBN made)
              (S
                (VP (TO to)
                  (VP (VB feel)
                    (VP (VBN cared)
                      (PP (IN for)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP you))
                            (VP (VBP are)
                              (ADVP (RB there)))))))))))))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
amod(times-5, short-3)
amod(times-5, waiting-4)
dobj(means-2, times-5)
amod(treatment-8, essential-7)
prep_for(times-5, treatment-8)
nsubj(mean-11, it-10)
conj_and(means-2, mean-11)
auxpass(made-13, being-12)
xcomp(mean-11, made-13)
aux(feel-15, to-14)
xcomp(made-13, feel-15)
dep(feel-15, cared-16)
advmod(are-20, when-18)
nsubj(are-20, you-19)
prepc_for(cared-16, are-20)
advmod(are-20, there-21)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (NNS people))
      (VP (VB expect)
        (NP (NN something))
        (PP (IN for)
          (NP (NN nothing)))))
    (. .)))

advmod(expect-4, Why-1)
aux(expect-4, should-2)
nsubj(expect-4, people-3)
root(ROOT-0, expect-4)
dobj(expect-4, something-5)
prep_for(expect-4, nothing-7)

(ROOT
  (SBARQ
    (ADVP (RB Well))
    (WHNP
      (WHNP (WP what))
      (PP (IN about)
        (NP (NNP National))))
    (SQ
      (VP (VBZ Insurance)))
    (. ?)))

advmod(Insurance-5, Well-1)
nsubj(Insurance-5, what-2)
prep_about(what-2, National-4)
root(ROOT-0, Insurance-5)

(ROOT
  (S
    (ADVP (RB Surely))
    (NP (PRP you))
    (VP (VBP pay)
      (NP (DT that)))
    (. .)))

advmod(pay-3, Surely-1)
nsubj(pay-3, you-2)
root(ROOT-0, pay-3)
dobj(pay-3, that-4)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (DT that))
      (VP (VBZ 's)
        (NP (PRP$ your) (NN pension))))
    (CC and)
    (S
      (NP (PRP$ your) (NN health))
      (VP (VBP care)
        (NP
          (NP (DT all))
          (PP (IN in)
            (NP (CD one))))))
    (. .)))

dep(pension-6, Yes-1)
nsubj(pension-6, that-3)
cop(pension-6, 's-4)
poss(pension-6, your-5)
root(ROOT-0, pension-6)
poss(health-9, your-8)
nsubj(care-10, health-9)
conj_and(pension-6, care-10)
dobj(care-10, all-11)
prep_in(all-11, one-13)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NN pittance))
      (SBAR (IN that)
        (S
          (NP (JJS most) (NNS people))
          (VP (VBP pay)))))
    (VP (VBZ is)
      (ADJP (RB ridiculously) (JJ low)))
    (. .)))

cc(low-10, But-1)
det(pittance-3, the-2)
dobj(pay-7, pittance-3)
nsubj(low-10, pittance-3)
complm(pay-7, that-4)
amod(people-6, most-5)
nsubj(pay-7, people-6)
dep(pittance-3, pay-7)
cop(low-10, is-8)
advmod(low-10, ridiculously-9)
root(ROOT-0, low-10)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (NNS employers))
          (VP (VBD offered)
            (NP (NN health) (NN care))
            (PP (IN as)
              (NP (DT a) (NN benefit))))))
      (, ,)
      (NP (NNS people))
      (VP (MD would)
        (ADVP (RB really))
        (VP (VB care)
          (PP (IN about)
            (S
              (VP (VBG keeping)
                (NP (PRP$ their) (NNS jobs))))))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD would) (RB n't)
        (VP (VB have)
          (NP
            (NP (DT a) (NN nation))
            (PP (IN of)
              (NP (JJ disaffected) (NNS people)))
            (, ,)
            (VP (VBG working)
              (PP (IN in)
                (NP
                  (NP (NNS miles)
                    (CC and)
                    (NNS miles))
                  (PP (IN of)
                    (NP (JJ factory-call) (NNS centres)))))
              (PP (IN across)
                (NP (DT the) (NN globe))))))))
    (. .)))

mark(offered-3, If-1)
nsubj(offered-3, employers-2)
advcl(care-13, offered-3)
nn(care-5, health-4)
dobj(offered-3, care-5)
det(benefit-8, a-7)
prep_as(offered-3, benefit-8)
nsubj(care-13, people-10)
aux(care-13, would-11)
advmod(care-13, really-12)
root(ROOT-0, care-13)
prepc_about(care-13, keeping-15)
poss(jobs-17, their-16)
dobj(keeping-15, jobs-17)
nsubj(have-22, we-19)
aux(have-22, would-20)
neg(have-22, n't-21)
conj_and(care-13, have-22)
det(nation-24, a-23)
dobj(have-22, nation-24)
amod(people-27, disaffected-26)
prep_of(nation-24, people-27)
partmod(nation-24, working-29)
prep_in(working-29, miles-31)
prep_in(working-29, miles-33)
conj_and(miles-31, miles-33)
amod(centres-36, factory-call-35)
prep_of(miles-31, centres-36)
det(globe-39, the-38)
prep_across(working-29, globe-39)

(ROOT
  (S
    (FRAG
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-)
        (ADVP (RB No))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB agree)
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB not)
              (VP (VB think)
                (SBAR (IN that)
                  (S
                    (S
                      (NP (NN health) (NN care))
                      (VP (MD should)
                        (VP (VB be)
                          (ADJP (JJ free)
                            (PRN (, ,)
                              (S
                                (NP (PRP I))
                                (VP (VBP think)
                                  (SBAR
                                    (S
                                      (NP (PRP we))
                                      (VP (MD should)
                                        (VP (VB pay)
                                          (PP (IN for)
                                            (NP (PRP it)))))))))
                              (, ,))
                            (S
                              (VP (TO to)
                                (VP (VB require)
                                  (NP (DT a) (JJ high) (NN standard)))))))))
                    (CC and)
                    (S
                      (NP (PRP we))
                      (VP (MD can)
                        (VP (VB get)
                          (NP (NN treatment))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP we))
                              (VP (VBP need)
                                (NP (PRP it)))))))))))))
          (, ,))
        (SBAR
          (WHADVP (RB not) (WRB when))
          (S
            (NP (NN someone))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN squeezed)
                  (PP (IN into)
                    (NP (DT an)
                      (ADJP (RB already) (JJ bursting))
                      (NN schedule)))
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN seen)
                          (PP (IN by)
                            (NP
                              (NP (JJ tired) (NNS doctors))
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (VP (VBP are)
                                    (VP (VBG looking)
                                      (ADVP (RB forward))
                                      (PP (TO to)
                                        (NP
                                          (NP (JJ private) (NN practice)
                                            (CC and)
                                            (CD six) (NN figure) (NNS salaries))
                                          (PP (IN at)
                                            (NP
                                              (NP (DT some) (NN point))
                                              (PP (IN in)
                                                (NP
                                                  (NP (DT the) (NN future))
                                                  (PP (IN as)
                                                    (NP (DT a) (NNP GP))))))))))))))))))))))))))
    (. .)))

dep(agree-10, \/-1)
dobj(\/-1, \/-3)
advmod(\/-1, No-5)
nsubj(agree-10, I-7)
aux(agree-10, do-8)
neg(agree-10, not-9)
root(ROOT-0, agree-10)
nsubj(think-15, I-12)
aux(think-15, do-13)
neg(think-15, not-14)
parataxis(agree-10, think-15)
complm(free-21, that-16)
nn(care-18, health-17)
nsubj(free-21, care-18)
aux(free-21, should-19)
cop(free-21, be-20)
ccomp(think-15, free-21)
nsubj(think-24, I-23)
dep(free-21, think-24)
nsubj(pay-27, we-25)
aux(pay-27, should-26)
ccomp(think-24, pay-27)
prep_for(pay-27, it-29)
aux(require-32, to-31)
xcomp(free-21, require-32)
det(standard-35, a-33)
amod(standard-35, high-34)
dobj(require-32, standard-35)
nsubj(get-39, we-37)
aux(get-39, can-38)
ccomp(think-15, get-39)
conj_and(free-21, get-39)
dobj(get-39, treatment-40)
advmod(need-43, when-41)
nsubj(need-43, we-42)
advcl(get-39, need-43)
dobj(need-43, it-44)
dep(when-47, not-46)
advmod(squeezed-51, when-47)
nsubjpass(squeezed-51, someone-48)
aux(squeezed-51, can-49)
auxpass(squeezed-51, be-50)
advcl(agree-10, squeezed-51)
det(schedule-56, an-53)
advmod(bursting-55, already-54)
amod(schedule-56, bursting-55)
prep_into(squeezed-51, schedule-56)
aux(seen-59, to-57)
auxpass(seen-59, be-58)
xcomp(squeezed-51, seen-59)
amod(doctors-62, tired-61)
agent(seen-59, doctors-62)
nsubj(looking-65, doctors-62)
aux(looking-65, are-64)
rcmod(doctors-62, looking-65)
advmod(looking-65, forward-66)
amod(practice-69, private-68)
prep_to(looking-65, practice-69)
num(salaries-73, six-71)
nn(salaries-73, figure-72)
prep_to(looking-65, salaries-73)
conj_and(practice-69, salaries-73)
det(point-76, some-75)
prep_at(practice-69, point-76)
det(future-79, the-78)
prep_in(point-76, future-79)
det(GP-82, a-81)
prep_as(future-79, GP-82)

(ROOT
  (S
    (S
      (S
        (INTJ (UH Well))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (FRAG
            (PP (IN about)
              (NP (DT the) (JJ poor)))))
        (, ,)
        (NP (DT the) (JJ unemployed) (NN I))
        (VP (VBP hear)
          (S
            (NP (PRP you))
            (ADJP (JJ whine)))))
      (, ,)
      (ADVP (RB well))
      (S
        (NP (PRP they))
        (VP (MD should)
          (VP (VB get)
            (NP (DT a) (NN job))))))
    (PRN (, ,)
      (SINV
        (VP (MD should) (RB n't))
        (NP (PRP they)))
      (, ,))
    (RB then)
    (S
      (NP (PRP they))
      (VP (MD can)
        (VP (VB get)
          (NP (NN health) (NN care))
          (ADVP (RB too)))))
    (. .)))

dep(hear-11, Well-1)
dep(about-4, what-3)
dep(hear-11, about-4)
det(poor-6, the-5)
pobj(about-4, poor-6)
det(I-10, the-8)
amod(I-10, unemployed-9)
nsubj(hear-11, I-10)
root(ROOT-0, hear-11)
nsubj(whine-13, you-12)
xcomp(hear-11, whine-13)
advmod(hear-11, well-15)
nsubj(get-18, they-16)
aux(get-18, should-17)
dep(hear-11, get-18)
det(job-20, a-19)
dobj(get-18, job-20)
dep(hear-11, should-22)
neg(should-22, n't-23)
nsubj(should-22, they-24)
advmod(hear-11, then-26)
nsubj(get-29, they-27)
aux(get-29, can-28)
ccomp(hear-11, get-29)
nn(care-31, health-30)
dobj(get-29, care-31)
advmod(get-29, too-32)

(ROOT
  (S
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-)
        (PP
          (NP (JJ Free) (NN health) (NN care) (NNS drives))
          (IN down)
          (NP (NNS standards))))
      (CC and)
      (VP (VBZ drains)
        (NP
          (NP
            (NP (DT the) (NN government) (POS 's))
            (NNS resources))
          (CC and)
          (NP
            (ADVP (RB therefore))
            (NP
              (NP (DT the) (NN country) (POS 's))
              (NNS resources))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
amod(drives-8, Free-5)
nn(drives-8, health-6)
nn(drives-8, care-7)
npadvmod(\/-1, drives-8)
prep_down(\/-1, standards-10)
conj_and(\/-1, drains-12)
det(government-14, the-13)
poss(resources-16, government-14)
dobj(drains-12, resources-16)
advmod(resources-22, therefore-18)
det(country-20, the-19)
poss(resources-22, country-20)
dobj(drains-12, resources-22)
conj_and(resources-16, resources-22)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP (JJ old) (NNS people)))
    (. ?)))

root(ROOT-0, What-1)
dep(What-1, about-2)
amod(people-4, old-3)
pobj(about-2, people-4)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP they))
        (VP (VBD had)
          (VP (VBN paid)
            (PP (IN into)
              (NP (DT a) (JJ private) (NN health) (NN care) (NN scheme)))
            (NP (DT all) (PRP$ their) (NNS lives))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP they))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN allowed)
          (NP (NN health) (NN care))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (VBP retire)))))))
    (. .)))

advmod(allowed-21, Well-1)
mark(paid-6, if-3)
nsubj(paid-6, they-4)
aux(paid-6, had-5)
advcl(allowed-21, paid-6)
det(scheme-12, a-8)
amod(scheme-12, private-9)
nn(scheme-12, health-10)
nn(scheme-12, care-11)
prep_into(paid-6, scheme-12)
det(lives-15, all-13)
predet(lives-15, all-13)
poss(lives-15, their-14)
dobj(paid-6, lives-15)
advmod(allowed-21, then-17)
nsubjpass(allowed-21, they-18)
aux(allowed-21, should-19)
auxpass(allowed-21, be-20)
root(ROOT-0, allowed-21)
nn(care-23, health-22)
dobj(allowed-21, care-23)
advmod(retire-26, when-24)
nsubj(retire-26, they-25)
advcl(allowed-21, retire-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB understand)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP we))
            (VP (VBP do) (RB n't)
              (VP (VB have)
                (NP
                  (NP (JJ affordable) (NN life) (JJ long) (NN health) (NN care) (NNS schemes))
                  (PP (IN as)
                    (NP (NN standard))))))))))
    (. .)))

nsubj(understand-4, I-1)
aux(understand-4, do-2)
neg(understand-4, n't-3)
root(ROOT-0, understand-4)
advmod(have-9, why-5)
nsubj(have-9, we-6)
aux(have-9, do-7)
neg(have-9, n't-8)
advcl(understand-4, have-9)
amod(schemes-15, affordable-10)
nn(schemes-15, life-11)
amod(schemes-15, long-12)
nn(schemes-15, health-13)
nn(schemes-15, care-14)
dobj(have-9, schemes-15)
prep_as(schemes-15, standard-17)

(ROOT
  (SQ
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-))
      (SBAR
        (WHADVP (WRB Where))
        (S
          (PRN
            (SINV (MD would)
              (NP (PRP you))
              (ADVP (RB rather))))
          (VP (VB be)
            (VP (VBN treated))))))
    (. ?)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
advmod(treated-10, Where-5)
parataxis(treated-10, would-6)
nsubj(would-6, you-7)
advmod(would-6, rather-8)
auxpass(treated-10, be-9)
advcl(\/-1, treated-10)

(ROOT
  (S
    (PP
      (ADVP (RB Quickly))
      (IN by)
      (NP
        (NP (NN expert) (NNS doctors))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBP are)
                (VP (VBN paid)
                  (ADVP (RB really))
                  (ADVP (RB well))))
              (CC and)
              (VP (VBP do) (RB n't)
                (VP (VB work)
                  (NP (PDT all) (DT the) (NNS hours))
                  (SBAR (IN that)
                    (S
                      (NP (NNP God))
                      (VP
                        (VP (VBZ sends))
                        (, ,)
                        (CC or)
                        (VP (MD would))))))))))))
    (NP (PRP you))
    (VP (VBP prefer)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN left)
              (PP (IN on)
                (NP
                  (NP (DT a) (NN trolley))
                  (PP (IN in)
                    (NP
                      (NP (DT a) (NN corridor))
                      (PP (IN for)
                        (NP (NNS hours)))))))
              (S
                (VP (VBG waiting)
                  (SBAR (IN until)
                    (S
                      (NP (NN someone))
                      (VP (VBZ remembers)
                        (SBAR
                          (WHADVP (WRB where))
                          (S
                            (NP (PRP you))
                            (VP
                              (VP (VBP are))
                              (CC and)
                              (VP (VBZ comes)
                                (S
                                  (VP (TO to)
                                    (VP (VB see)
                                      (SBAR (IN if)
                                        (S
                                          (NP (PRP you))
                                          (VP (VBP have) (RB n't)
                                            (VP (VBN died)
                                              (ADVP (RB yet)))))))))))))))))))))))
    (. .)))

advmod(prefer-24, Quickly-1)
nn(doctors-4, expert-3)
nsubjpass(paid-7, doctors-4)
nsubj(work-13, doctors-4)
prep_by(prefer-24, doctors-4)
auxpass(paid-7, are-6)
rcmod(doctors-4, paid-7)
advmod(paid-7, really-8)
advmod(paid-7, well-9)
aux(work-13, do-11)
neg(work-13, n't-12)
rcmod(doctors-4, work-13)
conj_and(paid-7, work-13)
predet(hours-16, all-14)
det(hours-16, the-15)
dobj(work-13, hours-16)
complm(sends-19, that-17)
nsubj(sends-19, God-18)
ccomp(work-13, sends-19)
ccomp(work-13, would-22)
conj_or(sends-19, would-22)
nsubj(prefer-24, you-23)
xsubj(left-27, you-23)
root(ROOT-0, prefer-24)
aux(left-27, to-25)
auxpass(left-27, be-26)
xcomp(prefer-24, left-27)
det(trolley-30, a-29)
prep_on(left-27, trolley-30)
det(corridor-33, a-32)
prep_in(trolley-30, corridor-33)
prep_for(corridor-33, hours-35)
xcomp(left-27, waiting-36)
mark(remembers-39, until-37)
nsubj(remembers-39, someone-38)
advcl(waiting-36, remembers-39)
advmod(are-42, where-40)
nsubj(are-42, you-41)
nsubj(comes-44, you-41)
advcl(remembers-39, are-42)
advcl(remembers-39, comes-44)
conj_and(are-42, comes-44)
aux(see-46, to-45)
xcomp(comes-44, see-46)
mark(died-51, if-47)
nsubj(died-51, you-48)
aux(died-51, have-49)
neg(died-51, n't-50)
advcl(see-46, died-51)
advmod(died-51, yet-52)

(ROOT
  (SINV
    (VP (VB \/) (-RRB- -RRB-)
      (NP (NNS \/))
      (-RRB- -RRB-))
    (NP
      (NP (JJ Private) (NN health) (NN care))
      (SBAR
        (S
          (VP (VBZ means)
            (SBAR
              (S
                (NP (NNP REAL))
                (VP (VBP care))
                (. .)))))))))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
amod(care-7, Private-5)
nn(care-7, health-6)
nsubj(\/-1, care-7)
rcmod(care-7, means-8)
nsubj(care-10, REAL-9)
ccomp(means-8, care-10)

