(ROOT
  (NP (NNP #originalTopic) (NNP =) (NNP So_you_still_want_Nationalized_Health_Care)))

nn(So_you_still_want_Nationalized_Health_Care-3, #originalTopic-1)
nn(So_you_still_want_Nationalized_Health_Care-3, =-2)
root(ROOT-0, So_you_still_want_Nationalized_Health_Care-3)

(ROOT
  (NP
    (NP (`` ``) (NNP Yeah))
    (: ...)))


(ROOT
  (S (CC And)
    (NP (RB yes))
    (, ,)
    (NP (PRP it))
    (VP (VBZ annoys)
      (NP (PRP me))
      (SBAR (IN that)
        (S
          (NP
            (NP (NNS citizens))
            (PP (IN of)
              (NP
                (NP (DT a) (NN country))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (ADVP (RB continually))
                    (VP (VBZ talks)
                      (PP (IN about)
                        (NP (NN freedom)
                          (CC and)
                          (NN liberty)))))))))
          (VP (MD ca) (RB n't)
            (VP (VB be)
              (VP (VBN bothered)
                (S
                  (VP (TO to)
                    (VP (VB give)
                      (NP (DT a) (JJ few) (NNS dollars))
                      (PRT (RP out))
                      (PP (IN of)
                        (NP (PRP$ their) (NN pay) (NN packet))))))
                (PRN (-LRB- -LRB-)
                  (S
                    (S
                      (ADVP (RB though))
                      (, ,)
                      (NP (PRP they))
                      (VP (MD would)
                        (VP (VB be)
                          (VP (VBG paying)
                            (ADJP (JJR less))))))
                    (, ,)
                    (CC but)
                    (S
                      (NP (PRP we))
                      (VP (MD 'll)
                        (VP
                          (VP (VB ignore)
                            (NP
                              (NP (DT that))
                              (PP (IN for)
                                (NP (RB now)))))
                          (CC and)
                          (VP (VB assume)
                            (SBAR (IN that)
                              (S
                                (NP (PRP it))
                                (VP (MD would)
                                  (VP (VB cost)
                                    (S
                                      (NP (PRP you))
                                      (ADJP (DT a) (NN bit) (JJ extra))))))))))))
                  (-RRB- -RRB-))
                (S
                  (VP (TO to)
                    (VP (VB ensure)
                      (SBAR (IN that)
                        (S
                          (NP
                            (NP (NN everyone))
                            (, ,)
                            (ADJP (JJ rich)
                              (CC or)
                              (JJ poor))
                            (, ,))
                          (VP (MD can)
                            (VP (VB get)
                              (NP (NN healthcare) (NN treatment))
                              (SBAR
                                (WHADVP (WRB when))
                                (S
                                  (NP (PRP they))
                                  (VP (VBP need)
                                    (NP (PRP it))))))))))))))))))
    (. .)))

cc(annoys-5, And-1)
nsubj(annoys-5, yes-2)
nsubj(annoys-5, it-4)
root(ROOT-0, annoys-5)
dobj(annoys-5, me-6)
complm(bothered-22, that-7)
nsubjpass(bothered-22, citizens-8)
det(country-11, a-10)
prep_of(citizens-8, country-11)
nsubj(talks-14, country-11)
advmod(talks-14, continually-13)
rcmod(country-11, talks-14)
prep_about(talks-14, freedom-16)
prep_about(talks-14, liberty-18)
conj_and(freedom-16, liberty-18)
aux(bothered-22, ca-19)
neg(bothered-22, n't-20)
auxpass(bothered-22, be-21)
ccomp(annoys-5, bothered-22)
aux(give-24, to-23)
xcomp(bothered-22, give-24)
det(dollars-27, a-25)
amod(dollars-27, few-26)
dobj(give-24, dollars-27)
poss(packet-32, their-30)
nn(packet-32, pay-31)
prep_out_of(give-24, packet-32)
advmod(paying-39, though-34)
nsubj(paying-39, they-36)
aux(paying-39, would-37)
aux(paying-39, be-38)
parataxis(bothered-22, paying-39)
acomp(paying-39, less-40)
nsubj(ignore-45, we-43)
nsubj(assume-50, we-43)
aux(ignore-45, 'll-44)
parataxis(bothered-22, ignore-45)
conj_but(paying-39, ignore-45)
dobj(ignore-45, that-46)
prep(that-46, for-47)
pobj(for-47, now-48)
conj_but(paying-39, assume-50)
conj_and(ignore-45, assume-50)
complm(cost-54, that-51)
nsubj(cost-54, it-52)
aux(cost-54, would-53)
ccomp(assume-50, cost-54)
nsubj(extra-58, you-55)
dep(extra-58, a-56)
dep(extra-58, bit-57)
xcomp(cost-54, extra-58)
aux(ensure-61, to-60)
xcomp(bothered-22, ensure-61)
complm(get-70, that-62)
nsubj(get-70, everyone-63)
amod(everyone-63, rich-65)
amod(everyone-63, poor-67)
conj_or(rich-65, poor-67)
aux(get-70, can-69)
ccomp(ensure-61, get-70)
nn(treatment-72, healthcare-71)
dobj(get-70, treatment-72)
advmod(need-75, when-73)
nsubj(need-75, they-74)
advcl(get-70, need-75)
dobj(need-75, it-76)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP I))
          (VP
            (VP (VBP get)
              (ADJP (JJ involved)))
            (, ,)
            (CC and)
            (VP (VBP try)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (S
                      (NP
                        (NP (PRP$ my) (NN part))
                        (PRN (-LRB- -LRB-)
                          (SBAR
                            (ADVP (RB regardless)
                              (PP (IN of)
                                (NP (DT the) (NN fact))))
                            (IN that)
                            (S
                              (NP (DT no) (NN one))
                              (ADVP (RB really))
                              (VP (VBZ cares)
                                (PP (IN on)
                                  (NP (DT this) (NN site)))
                                (ADVP (DT any) (RBR more)))))
                          (-RRB- -RRB-)))
                      (VP (TO to)
                        (VP
                          (VP (VB get)
                            (VP (VBN involved)
                              (PP (IN in)
                                (NP (DT the) (NN debate)))))
                          (CC and)
                          (VP (VB make)
                            (NP
                              (NP (PRP$ my) (NN view))
                              (VP (VBN heard)))))))))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(involved-6, why-3)
nsubj(involved-6, I-4)
nsubj(try-9, I-4)
xsubj(do-11, I-4)
dep(involved-6, get-5)
advcl('s-2, involved-6)
advcl('s-2, try-9)
conj_and(involved-6, try-9)
aux(do-11, to-10)
xcomp(try-9, do-11)
poss(part-13, my-12)
nsubjpass(involved-32, part-13)
nsubj(make-37, part-13)
det(fact-18, the-17)
prep_regardless_of(cares-23, fact-18)
dep(cares-23, that-19)
det(one-21, no-20)
nsubj(cares-23, one-21)
advmod(cares-23, really-22)
dep(part-13, cares-23)
det(site-26, this-25)
prep_on(cares-23, site-26)
dep(more-28, any-27)
advmod(cares-23, more-28)
aux(involved-32, to-30)
auxpass(involved-32, get-31)
xcomp(do-11, involved-32)
det(debate-35, the-34)
prep_in(involved-32, debate-35)
xcomp(do-11, make-37)
conj_and(involved-32, make-37)
poss(view-39, my-38)
dobj(make-37, view-39)
partmod(view-39, heard-40)

(ROOT
  (S (CC And)
    (ADVP (IN if))
    (NP (PRP you))
    (VP (VBP 're)
      (VP (VBG wondering)))
    (: ...)))

cc(wondering-5, And-1)
advmod(wondering-5, if-2)
nsubj(wondering-5, you-3)
aux(wondering-5, 're-4)
root(ROOT-0, wondering-5)

(ROOT
  (S ('' '')
    (S
      (ADVP (RB Maybe))
      (NP (PRP he))
      (VP (VBZ 's)
        (VP (VBG thinking)
          (PP (IN about)
            (S
              (VP (VBG moving)
                (PP (TO to)
                  (NP (DT the) (NNP U.S.) ('' '') (NNP No)))))))))
    (, ,)
    (NP (PRP he))
    (VP (VBZ 's) (RB not))
    (. .)))

advmod(thinking-5, Maybe-2)
nsubj(thinking-5, he-3)
aux(thinking-5, 's-4)
ccomp('s-15, thinking-5)
prepc_about(thinking-5, moving-7)
det(No-12, the-9)
nn(No-12, U.S.-10)
prep_to(moving-7, No-12)
nsubj('s-15, he-14)
root(ROOT-0, 's-15)
neg('s-15, not-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB live)
              (PP (IN under)
                (NP
                  (NP (PRP$ your) (NN ideal))
                  (PP (IN of)
                    (NP (NN freedom)
                      (CC and)
                      (NN liberty)))))
              (PP (TO to)
                (NP
                  (NP (DT all))
                  (PRN (-LRB- -LRB-)
                    (SBAR (IN if)
                      (S
                        (NP (PRP you))
                        (VP (MD can)
                          (VP (VB afford)
                            (NP (PRP it))))))
                    (-RRB- -RRB-)))))))))
    (. .)))

nsubj(want-4, I-1)
xsubj(live-6, I-1)
aux(want-4, do-2)
neg(want-4, n't-3)
root(ROOT-0, want-4)
aux(live-6, to-5)
xcomp(want-4, live-6)
poss(ideal-9, your-8)
prep_under(live-6, ideal-9)
prep_of(ideal-9, freedom-11)
prep_of(ideal-9, liberty-13)
conj_and(freedom-11, liberty-13)
prep_to(live-6, all-15)
mark(afford-20, if-17)
nsubj(afford-20, you-18)
aux(afford-20, can-19)
dep(all-15, afford-20)
dobj(afford-20, it-21)

(ROOT
  (SBARQ
    (WHADVP (WRB Why)
      (NP (DT the) (NN hell)))
    (SQ (MD would)
      (NP (PRP I))
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB move)
              (PP (TO to)
                (NP
                  (NP (DT a) (NN country))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP
                        (VP (VBZ does) (RB n't)
                          (VP (VB give)
                            (NP
                              (NP (DT a) (NN crap))
                              (PP (IN about)
                                (NP (NN anyone) (RB else))))))
                        (CC and)
                        (ADVP (RB continually))
                        (VP (VBZ tries)
                          (S
                            (VP (TO to)
                              (VP (VB push)
                                (NP
                                  (NP (PRP$ its) (NN form))
                                  (PP (IN of)
                                    (NP (NN government))))
                                (PP (IN down)
                                  (NP
                                    (NP
                                      (NP (NN everyone) (POS 's))
                                      (NN throat))
                                    (, ,)
                                    (SBAR
                                      (WHADVP (RB even) (WRB when))
                                      (S
                                        (NP (PRP they))
                                        (VP (VBP do) (RB n't)
                                          (VP (VB want)
                                            (NP (PRP it))))))))))))))))))))))
    (. ?)))

advmod(want-6, Why-1)
det(hell-3, the-2)
dep(Why-1, hell-3)
aux(want-6, would-4)
nsubj(want-6, I-5)
xsubj(move-8, I-5)
root(ROOT-0, want-6)
aux(move-8, to-7)
xcomp(want-6, move-8)
det(country-11, a-10)
prep_to(move-8, country-11)
nsubj(give-15, country-11)
nsubj(tries-23, country-11)
aux(give-15, does-13)
neg(give-15, n't-14)
rcmod(country-11, give-15)
det(crap-17, a-16)
dobj(give-15, crap-17)
prep_about(crap-17, anyone-19)
advmod(anyone-19, else-20)
rcmod(country-11, continually-22)
advmod(give-15, continually-22)
conj_and(give-15, continually-22)
rcmod(country-11, tries-23)
conj_and(give-15, tries-23)
aux(push-25, to-24)
xcomp(tries-23, push-25)
poss(form-27, its-26)
dobj(push-25, form-27)
prep_of(form-27, government-29)
poss(throat-33, everyone-31)
prep_down(push-25, throat-33)
tmod(want-40, throat-33)
advmod(when-36, even-35)
advmod(want-40, when-36)
nsubj(want-40, they-37)
aux(want-40, do-38)
neg(want-40, n't-39)
dep(throat-33, want-40)
dobj(want-40, it-41)

(ROOT
  (S (CC And)
    (NP (PRP you))
    (VP (VBP know)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ 's)
            (ADJP (RB really) (JJ entertaining))))))
    (. ?)))

cc(know-3, And-1)
nsubj(know-3, you-2)
root(ROOT-0, know-3)
nsubj(entertaining-7, what-4)
cop(entertaining-7, 's-5)
advmod(entertaining-7, really-6)
ccomp(know-3, entertaining-7)

(ROOT
  (S
    (S
      (NP
        (ADVP
          (NP (DT The) (NN fact))
          (RB that))
        (DT every) (NN time))
      (NP (PRP we))
      (VP (VBP enter)
        (PP (IN into)
          (NP (DT an) (NN argument)))))
    (, ,)
    (NP (PRP you))
    (VP
      (VP (VBP fall)
        (ADVP (RB back))
        (PP (IN on)
          (NP (NN comedy))))
      (CONJP (RB rather) (IN than))
      (VP (VBG seeing)
        (PP (IN through)
          (NP (DT the) (JJ actual) (NN debate)))))
    (. .)))

det(fact-2, The-1)
npadvmod(that-3, fact-2)
advmod(time-5, that-3)
det(time-5, every-4)
nsubj(enter-7, time-5)
nsubj(enter-7, we-6)
ccomp(fall-13, enter-7)
det(argument-10, an-9)
prep_into(enter-7, argument-10)
nsubj(fall-13, you-12)
nsubj(seeing-19, you-12)
root(ROOT-0, fall-13)
advmod(fall-13, back-14)
prep_on(fall-13, comedy-16)
conj_negcc(fall-13, seeing-19)
det(debate-23, the-21)
amod(debate-23, actual-22)
prep_through(seeing-19, debate-23)

(ROOT
  (S
    (NP (DT That))
    (ADVP (RB just))
    (VP (VBZ solidifies)
      (PP (IN in)
        (NP (PRP$ my) (NN mind)))
      (, ,)
      (PP (IN with)
        (NP
          (NP (DT every) (JJ single) (NN debate))
          (PP (IN with)
            (ADJP (JJ have)))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP$ my) (NNS views))
              (VP (VBP are)
                (ADJP
                  (ADJP (JJ right))
                  (, ,)
                  (ADJP (JJ moral))
                  (, ,)
                  (CC and)
                  (ADJP (JJ justifiable)))))))))
    (. .)))

nsubj(solidifies-3, That-1)
advmod(solidifies-3, just-2)
root(ROOT-0, solidifies-3)
poss(mind-6, my-5)
prep_in(solidifies-3, mind-6)
det(debate-11, every-9)
amod(debate-11, single-10)
prep_with(solidifies-3, debate-11)
prep_with(debate-11, have-13)
dep(right-19, that-15)
poss(views-17, my-16)
nsubj(right-19, views-17)
nsubj(moral-21, views-17)
nsubj(justifiable-24, views-17)
cop(right-19, are-18)
dep(debate-11, right-19)
dep(debate-11, moral-21)
conj_and(right-19, moral-21)
dep(debate-11, justifiable-24)
conj_and(right-19, justifiable-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP
        (VP (VB back)
          (S
            (NP (PRP mine))
            (ADJP (RB up))
            (SBAR (IN whilst)
              (S
                (NP (PRP you))
                (VP (VBP fall)
                  (ADVP (RB back))
                  (PP (IN into)
                    (NP (DT a) (NN corner))))))))
        (CC and)
        (VP (VB play)
          (NP (DT the) (NN comedian) (NN card)))))
    (. .)))

nsubj(back-3, I-1)
nsubj(play-14, I-1)
aux(back-3, can-2)
root(ROOT-0, back-3)
nsubj(fall-8, mine-4)
dep(fall-8, up-5)
mark(fall-8, whilst-6)
nsubj(fall-8, you-7)
xcomp(back-3, fall-8)
advmod(fall-8, back-9)
det(corner-12, a-11)
prep_into(fall-8, corner-12)
conj_and(back-3, play-14)
det(card-17, the-15)
nn(card-17, comedian-16)
dobj(play-14, card-17)

(ROOT
  (S
    (ADVP (RB ,))
    (NP (PRP I))
    (VP (VBD noticed))
    (. .)))

nsubj(noticed-3, I-2)
root(ROOT-0, noticed-3)

(ROOT
  (S
    (ADVP (IN At) (JJS least))
    (VP
      (VP (VB have)
        (S
          (NP (DT the) (NNS balls))
          (VP (TO to)
            (VP (VB back)
              (PRT (RP up))
              (NP (PRP$ your) (NNS views))))))
      (CC and)
      (VP (VB see)
        (NP (PRP it))
        (PRT (RP through))))
    (. .)))

advmod(have-3, At-1)
pobj(At-1, least-2)
root(ROOT-0, have-3)
det(balls-5, the-4)
nsubj(back-7, balls-5)
aux(back-7, to-6)
ccomp(have-3, back-7)
xcomp(have-3, back-7)
prt(back-7, up-8)
poss(views-10, your-9)
dobj(back-7, views-10)
conj_and(have-3, see-12)
dobj(see-12, it-13)
prt(see-12, through-14)

(ROOT
  (S
    (S
      (S
        (NP (EX There))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN time))
            (PP (IN on)
              (NP
                (NP (DT this) (NN site))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP you))
                    (ADVP (RB actually))
                    (VP (VBD used)
                      (S
                        (VP (TO to)
                          (VP (VB fight)
                            (NP (PRP$ your) (NN corner)))))))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP I))
        (VP
          (VP (VBP suppose))
          (CONJP (RB rather) (IN than))
          (VP (VB modify)
            (NP (PRP$ your) (NNS views))
            (PP (IN in)
              (NP (NN response)))
            (PP (TO to)
              (NP
                (NP (NNS arguments))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP are)
                      (ADVP (RB obviously))
                      (ADJP (RB too) (JJ compelling)
                        (SBAR (IN for)
                          (S
                            (NP (PRP you))
                            (VP (TO to)
                              (VP (VB be)
                                (ADJP (JJ able)
                                  (S
                                    (VP (TO to)
                                      (VP (VB form)
                                        (NP (NNS arguments))
                                        (PP (IN against))))))))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD 'd)
      (ADVP (RB rather) (RB just))
      (ADVP (RB back) (RB down))
      (, ,)
      (VP
        (VP (VB forget)
          (PP (IN about)
            (NP (PRP it))))
        (, ,)
        (CC and)
        (VP (VB continue)
          (S
            (VP (TO to)
              (VP (VB hold)
                (NP
                  (NP (DT the) (NNS views))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP do)
                        (SBAR (RB even) (IN though)
                          (S
                            (NP (PRP they))
                            (VP (VBP 've)
                              (VP (VBN been)
                                (VP
                                  (VP (VBN tested)
                                    (NP (NN time)
                                      (CC and)
                                      (NN time))
                                    (ADVP (RB again)))
                                  (CC and)
                                  (VP (VBN found)
                                    (S
                                      (VP (TO to)
                                        (VP (VB be)
                                          (VP (VBG lacking)))))))))))))))))))))
    (. .)))

expl(was-2, There-1)
ccomp(forget-51, was-2)
det(time-4, a-3)
nsubj(was-2, time-4)
det(site-7, this-6)
prep_on(time-4, site-7)
advmod(used-11, where-8)
nsubj(used-11, you-9)
xsubj(fight-13, you-9)
advmod(used-11, actually-10)
rcmod(site-7, used-11)
aux(fight-13, to-12)
xcomp(used-11, fight-13)
poss(corner-15, your-14)
dobj(fight-13, corner-15)
nsubj(suppose-19, I-18)
nsubj(modify-22, I-18)
conj_but(was-2, suppose-19)
ccomp(forget-51, suppose-19)
conj_but(was-2, modify-22)
conj_negcc(suppose-19, modify-22)
poss(views-24, your-23)
dobj(modify-22, views-24)
prep_in(modify-22, response-26)
prep_to(modify-22, arguments-28)
nsubj(compelling-33, arguments-28)
cop(compelling-33, are-30)
advmod(compelling-33, obviously-31)
advmod(compelling-33, too-32)
rcmod(arguments-28, compelling-33)
mark(able-38, for-34)
nsubj(able-38, you-35)
aux(able-38, to-36)
cop(able-38, be-37)
dep(compelling-33, able-38)
aux(form-40, to-39)
xcomp(able-38, form-40)
dobj(form-40, arguments-41)
prep(form-40, against-42)
nsubj(forget-51, you-44)
nsubj(continue-56, you-44)
xsubj(hold-58, you-44)
aux(forget-51, 'd-45)
advmod(just-47, rather-46)
advmod(forget-51, just-47)
advmod(down-49, back-48)
advmod(forget-51, down-49)
root(ROOT-0, forget-51)
prep_about(forget-51, it-53)
conj_and(forget-51, continue-56)
aux(hold-58, to-57)
xcomp(continue-56, hold-58)
det(views-60, the-59)
dobj(hold-58, views-60)
nsubj(do-62, you-61)
rcmod(views-60, do-62)
advmod(tested-68, even-63)
dep(tested-68, though-64)
nsubjpass(tested-68, they-65)
nsubjpass(found-74, they-65)
xsubj(lacking-77, they-65)
aux(tested-68, 've-66)
auxpass(tested-68, been-67)
ccomp(do-62, tested-68)
dobj(tested-68, time-69)
dobj(tested-68, time-71)
conj_and(time-69, time-71)
advmod(tested-68, again-72)
ccomp(do-62, found-74)
conj_and(tested-68, found-74)
aux(lacking-77, to-75)
aux(lacking-77, be-76)
xcomp(found-74, lacking-77)

(ROOT
  (S
    (NP (NNP Pineapple))
    (VP (VBD had)
      (NP (PRP you))
      (ADVP (RB absolutely))
      (VP (VBN pegged)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP she))
            (VP (VBD said) (: :) (`` ``)
              (S
                (S
                  (PP (VBN Based)
                    (PP (IN on)
                      (NP (JJ previous) (NNS conversations))))
                  (, ,)
                  (NP (PRP I))
                  (VP (VBP am)
                    (ADJP (RB entirely) (JJ convinced)
                      (SBAR (IN that)
                        (S
                          (NP (PRP you))
                          (VP (VBP know)
                            (NP
                              (NP (NN nothing))
                              (PP (IN about)
                                (NP (DT this) (NN bill))))))))))
                (CC or)
                (S
                  (NP
                    (NP (DT the) (NN state))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN country))
                        (CC and)
                        (NP (DT the) (NNS reasons)))))
                  (NP (PRP we))
                  (VP (VBP need)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(pegged-5, Pineapple-1)
aux(pegged-5, had-2)
dobj(pegged-5, you-3)
advmod(pegged-5, absolutely-4)
root(ROOT-0, pegged-5)
advmod(said-8, when-6)
nsubj(said-8, she-7)
advcl(pegged-5, said-8)
prepc_based_on(convinced-19, on-12)
amod(conversations-14, previous-13)
pobj(convinced-19, conversations-14)
nsubj(convinced-19, I-16)
cop(convinced-19, am-17)
advmod(convinced-19, entirely-18)
dep(said-8, convinced-19)
complm(know-22, that-20)
nsubj(know-22, you-21)
ccomp(convinced-19, know-22)
dobj(know-22, nothing-23)
det(bill-26, this-25)
prep_about(nothing-23, bill-26)
det(state-29, the-28)
nsubj(need-37, state-29)
det(country-32, the-31)
prep_of(state-29, country-32)
det(reasons-35, the-34)
prep_of(state-29, reasons-35)
conj_and(country-32, reasons-35)
nsubj(need-37, we-36)
dep(said-8, need-37)
conj_or(convinced-19, need-37)
dobj(need-37, it-38)

(ROOT
  (SINV (CC Nor)
    (VBP do)
    (NP (PRP I))
    (VP (VB feel)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP care)
            (S
              (VP (TO to)
                (VP (VB learn)
                  (PP (IN about)
                    (NP (PRP it))))))))))
    (. .)))

cc(feel-4, Nor-1)
aux(feel-4, do-2)
nsubj(feel-4, I-3)
root(ROOT-0, feel-4)
complm(care-7, that-5)
nsubj(care-7, you-6)
xsubj(learn-9, you-6)
ccomp(feel-4, care-7)
aux(learn-9, to-8)
xcomp(care-7, learn-9)
prep_about(learn-9, it-11)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB accept)
        (NP
          (NP (PRP$ your) (NN opinion))
          (ADJP
            (ADJP (RB as) (VBN educated))
            (CC or)
            (ADJP (JJ valid))))))
    (. .)))

advmod(accept-6, Therefore-1)
nsubj(accept-6, I-3)
aux(accept-6, do-4)
neg(accept-6, n't-5)
root(ROOT-0, accept-6)
poss(opinion-8, your-7)
dobj(accept-6, opinion-8)
advmod(educated-10, as-9)
amod(opinion-8, educated-10)
amod(opinion-8, valid-12)
conj_or(educated-10, valid-12)

(ROOT
  (NP ('' '')
    (CC And)
    (NP
      (NP (PRP it))
      (SBAR
        (S
          (VP (VBZ 's)
            (NP (DT a) (JJ real) (NN shame))))))
    (. .)))

cc(it-3, And-2)
root(ROOT-0, it-3)
cop(shame-7, 's-4)
det(shame-7, a-5)
amod(shame-7, real-6)
rcmod(it-3, shame-7)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ cracks)
          (NP (PRP me))
          (PRT (RP up)))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBD took)
            (NP (DT the) (NN time)
              (S
                (VP (TO to)
                  (VP (VB contribute)
                    (ADJP (JJ content)
                      (PP (TO to)
                        (NP
                          (NP (PRP$ my) (NN debate))
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBZ means)
                                (SBAR (IN that)
                                  (S
                                    (NP (PRP it))
                                    (VP (VBD was)
                                      (ADJP (JJ entertaining) (RB enough)
                                        (SBAR (IN for)
                                          (S
                                            (NP (PRP you))
                                            (VP (TO to)
                                              (VP (VB participate)
                                                (NP
                                                  (NP (NN lol))
                                                  ('' '')
                                                  (SBAR
                                                    (S
                                                      (NP (PRP I))
                                                      (VP (VBP suppose)
                                                        (SBAR
                                                          (S
                                                            (NP (PRP I))
                                                            (VP (VBP do)
                                                              (VP (VB find)
                                                                (NP (DT some) (JJ strange) (NN entertainment) (NN value))
                                                                (PP (IN in)
                                                                  (S
                                                                    (VP (VBG shooting)
                                                                      (PRT (RP down))
                                                                      (NP (PRP$ your) (NNS arguments)))))))))))))))))))))))))))
                    (NP (DT every) (JJ single) (NN time))))))))))
    (. .)))

nsubj(cracks-2, What-1)
csubj(is-5, cracks-2)
dobj(cracks-2, me-3)
prt(cracks-2, up-4)
root(ROOT-0, is-5)
complm(took-8, that-6)
nsubj(took-8, you-7)
ccomp(is-5, took-8)
det(time-10, the-9)
dobj(took-8, time-10)
aux(contribute-12, to-11)
infmod(time-10, contribute-12)
acomp(contribute-12, content-13)
poss(debate-16, my-15)
prep_to(content-13, debate-16)
nsubj(means-18, debate-16)
rcmod(debate-16, means-18)
complm(entertaining-22, that-19)
nsubj(entertaining-22, it-20)
cop(entertaining-22, was-21)
ccomp(means-18, entertaining-22)
advmod(entertaining-22, enough-23)
mark(participate-27, for-24)
nsubj(participate-27, you-25)
aux(participate-27, to-26)
dep(entertaining-22, participate-27)
dobj(participate-27, lol-28)
nsubj(suppose-31, I-30)
rcmod(lol-28, suppose-31)
nsubj(find-34, I-32)
aux(find-34, do-33)
ccomp(suppose-31, find-34)
det(value-38, some-35)
amod(value-38, strange-36)
nn(value-38, entertainment-37)
dobj(find-34, value-38)
prepc_in(find-34, shooting-40)
prt(shooting-40, down-41)
poss(arguments-43, your-42)
dobj(shooting-40, arguments-43)
det(time-46, every-44)
amod(time-46, single-45)
dobj(contribute-12, time-46)

(ROOT
  (S ('' '')
    (NP (NNP Why))
    (VP (MD would)
      (VP
        (NP (DT an) (NNP Englishman) (NN care))
        (NP
          (NP
            (NP (RB enough))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (CD one) (NN way))
                (CC or)
                (NP (DT another)))
              (-RRB- -RRB-)))
          (PP (IN about)
            (NP (NNP U.S.) (NNS politics))))
        (S
          (VP (TO to)
            (VP (VB spend)
              (NP (DT any) (NN time))
              (PP (IN on)
                (NP (PRP it))))))))
    (. ?)))

nsubj(care-6, Why-2)
aux(care-6, would-3)
det(care-6, an-4)
nn(care-6, Englishman-5)
root(ROOT-0, care-6)
dobj(care-6, enough-7)
num(way-10, one-9)
dep(enough-7, way-10)
dep(enough-7, another-12)
conj_or(way-10, another-12)
nn(politics-16, U.S.-15)
prep_about(enough-7, politics-16)
aux(spend-18, to-17)
xcomp(care-6, spend-18)
det(time-20, any-19)
dobj(spend-18, time-20)
prep_on(spend-18, it-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (DT all) (RB very) (JJ interesting))
      (, ,)
      (INTJ (UH no)))
    (. ?)))

nsubj(interesting-5, It-1)
cop(interesting-5, is-2)
dep(interesting-5, all-3)
advmod(interesting-5, very-4)
root(ROOT-0, interesting-5)
dep(interesting-5, no-7)

(ROOT
  (S (`` ``)
    (S
      (NP (DT The) (NN subject) (NN matter))
      (VP (VBZ is)
        (ADJP (JJ interesting))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP (PRP us))))
        (VP (VBP are)
          (ADVP (RB still))
          (ADJP (JJ interested)
            (PP (IN in)
              (S
                (VP (VBG having)
                  (NP
                    (NP (DT an) (JJ actual) (NN debate))
                    (PP (IN about)
                      (NP (DT the) (NN subject))))))))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (NNP America))
              (VP (VBZ is)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP
                      (NP (DT the)
                        (ADJP (RBS most) (JJ powerful))
                        (NNS countries))
                      (PP (IN in)
                        (NP (DT the) (NN world)))))))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB therefore))
        (NP (PRP it))
        (VP (VBZ 's)
          (ADJP (JJ important))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NN example))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ sets)))))
              (VP (VBZ is)
                (NP (DT the) (JJ right) (NN one))))))))
    (. .)))

det(matter-4, The-2)
nn(matter-4, subject-3)
nsubj(interesting-6, matter-4)
cop(interesting-6, is-5)
root(ROOT-0, interesting-6)
nsubj(interested-14, some-9)
prep_of(some-9, us-11)
cop(interested-14, are-12)
advmod(interested-14, still-13)
conj_and(interesting-6, interested-14)
prepc_in(interested-14, having-16)
det(debate-19, an-17)
amod(debate-19, actual-18)
dobj(having-16, debate-19)
det(subject-22, the-21)
prep_about(debate-19, subject-22)
mark(one-27, because-24)
nsubj(one-27, America-25)
cop(one-27, is-26)
advcl(interested-14, one-27)
det(countries-32, the-29)
advmod(powerful-31, most-30)
amod(countries-32, powerful-31)
prep_of(one-27, countries-32)
det(world-35, the-34)
prep_in(countries-32, world-35)
advmod(important-41, therefore-38)
nsubj(important-41, it-39)
cop(important-41, 's-40)
conj_and(interesting-6, important-41)
conj_and(interested-14, important-41)
complm(one-50, that-42)
det(example-44, the-43)
dobj(sets-46, example-44)
nsubj(one-50, example-44)
nsubj(sets-46, it-45)
rcmod(example-44, sets-46)
cop(one-50, is-47)
det(one-50, the-48)
amod(one-50, right-49)
ccomp(important-41, one-50)

(ROOT
  (S (CC And)
    (, ,)
    (S
      (VP (VB believe)
        (NP (PRP it))
        (CC or)
        (RB not)))
    (, ,)
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (NN everyone))
          (VP (MD should)
            (VP (VB be)
              (VP (VBN given)
                (NP (JJ certain) (NNS rights))
                (, ,)
                (SBAR (IN whether)
                  (S
                    (NP (PRP they))
                    (VP (VBP 're)
                      (NP
                        (NP (NNP American) (, ,) (NNP British) (, ,) (NNP Canadian) (, ,) (NNP Indian) (, ,) (NNP etc) (, ,))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ 's)
                              (SBAR
                                (WHADVP (WRB why))
                                (S
                                  (NP
                                    (NP (DT the) (NN fact))
                                    (SBAR (IN that)
                                      (S
                                        (NP (DT this) (NN debate))
                                        (VP (VBZ is)
                                          (VP (VBG occurring)
                                            (PP (IN in)
                                              (NP (NNP America))))))))
                                  (VP (VBZ is)
                                    (ADJP (JJ irrelevant)
                                      (PP (TO to)
                                        (NP (PRP me))))))))))))))))))))
    (. .)))

cc(believe-9, And-1)
ccomp(believe-9, believe-3)
dobj(believe-3, it-4)
conj_or(believe-3, not-6)
neg(believe-3, not-6)
ccomp(believe-9, not-6)
nsubj(believe-9, I-8)
root(ROOT-0, believe-9)
nsubjpass(given-13, everyone-10)
aux(given-13, should-11)
auxpass(given-13, be-12)
ccomp(believe-9, given-13)
amod(rights-15, certain-14)
dobj(given-13, rights-15)
complm(etc-28, whether-17)
nsubj(etc-28, they-18)
cop(etc-28, 're-19)
nn(etc-28, American-20)
appos(etc-28, British-22)
appos(etc-28, Canadian-24)
appos(etc-28, Indian-26)
ccomp(given-13, etc-28)
nsubj('s-31, etc-28)
rcmod(etc-28, 's-31)
advmod(irrelevant-43, why-32)
det(fact-34, the-33)
dobj(occurring-39, fact-34)
nsubj(irrelevant-43, fact-34)
complm(occurring-39, that-35)
det(debate-37, this-36)
nsubj(occurring-39, debate-37)
aux(occurring-39, is-38)
dep(fact-34, occurring-39)
prep_in(occurring-39, America-41)
cop(irrelevant-43, is-42)
advcl('s-31, irrelevant-43)
prep_to(irrelevant-43, me-45)

(ROOT
  (S
    (S
      (NP (NNP America))
      (VP (VBZ is)
        (ADVP (RB wrongly))
        (VP (VBN held)
          (PRT (RP up))
          (PP (IN as)
            (NP
              (NP (DT a) (NN beacon))
              (PP (IN of)
                (NP (NN hope)
                  (CC and)
                  (NN liberty)
                  (CC and)
                  (NN something)))))
          (S
            (VP (TO to)
              (VP (VB strive)
                (PP (IN for) (IN for)
                  (NP (VBG developing) (NNS nations)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ annoys)
        (NP
          (NP (DT the) (NN crap))
          (PP (RB out) (IN of)
            (NP (PRP me))))))
    (. .)))

nsubjpass(held-4, America-1)
xsubj(strive-16, America-1)
auxpass(held-4, is-2)
advmod(held-4, wrongly-3)
root(ROOT-0, held-4)
prt(held-4, up-5)
det(beacon-8, a-7)
prep_as(held-4, beacon-8)
prep_of(beacon-8, hope-10)
prep_of(beacon-8, liberty-12)
conj_and(hope-10, liberty-12)
prep_of(beacon-8, something-14)
conj_and(hope-10, something-14)
aux(strive-16, to-15)
xcomp(held-4, strive-16)
dep(strive-16, for-17)
amod(nations-20, developing-19)
prep_for(strive-16, nations-20)
nsubj(annoys-24, that-23)
conj_and(held-4, annoys-24)
det(crap-26, the-25)
dobj(annoys-24, crap-26)
prep_out_of(crap-26, me-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ annoys)
      (NP (PRP me))
      (SBAR (IN that)
        (S
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (VP (VBN considered)
                  (NP
                    (NP (DT the)
                      (ADJP (RBS most) (JJ powerful)
                        (CC and)
                        (JJ free))
                      (NN country))
                    (PP (IN in)
                      (NP (DT the) (NN world))))
                  (ADVP (RB still))))))
          (VP (VBZ does)
            (NP
              (NP (NNS things))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP defy)
                    (NP (NN belief))))))))))
    (. .)))

nsubj(annoys-2, It-1)
root(ROOT-0, annoys-2)
dobj(annoys-2, me-3)
complm(does-18, that-4)
nsubjpass(considered-7, what-5)
auxpass(considered-7, is-6)
csubj(does-18, considered-7)
det(country-13, the-8)
advmod(powerful-10, most-9)
amod(country-13, powerful-10)
conj_and(powerful-10, free-12)
amod(country-13, free-12)
dobj(considered-7, country-13)
det(world-16, the-15)
prep_in(country-13, world-16)
advmod(considered-7, still-17)
ccomp(annoys-2, does-18)
dobj(does-18, things-19)
nsubj(defy-21, things-19)
rcmod(things-19, defy-21)
dobj(defy-21, belief-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ annoys)
      (NP (PRP me))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP try)
            (S
              (VP (TO to)
                (VP
                  (VP (VB help)
                    (NP
                      (NP (NNP Africa))
                      (PP (IN with)
                        (NP (CD one) (NN hand)))))
                  (, ,)
                  (CC and)
                  (VP (VB implement)
                    (NP
                      (NP (NNS policies))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP cripple)
                            (NP (PRP it))
                            (PP (IN with)
                              (NP (DT the) (JJ other)))))))))))))))
    (. .)))

nsubj(annoys-2, It-1)
root(ROOT-0, annoys-2)
dobj(annoys-2, me-3)
complm(try-6, that-4)
nsubj(try-6, you-5)
xsubj(help-8, you-5)
ccomp(annoys-2, try-6)
aux(help-8, to-7)
xcomp(try-6, help-8)
dobj(help-8, Africa-9)
num(hand-12, one-11)
prep_with(Africa-9, hand-12)
xcomp(try-6, implement-15)
conj_and(help-8, implement-15)
dobj(implement-15, policies-16)
nsubj(cripple-18, policies-16)
rcmod(policies-16, cripple-18)
dobj(cripple-18, it-19)
det(other-22, the-21)
prep_with(cripple-18, other-22)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ annoys)
        (NP (PRP me))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP attempt)
              (S
                (VP (TO to)
                  (VP (VB fight)
                    (NP (NN terrorism))))))))))
    (, ,)
    (S
      (S
        (VP (VBG pulling)
          (NP (PRP us))
          (PP (IN in)
            (PP (IN for)
              (NP (DT the) (NN ride))))))
      (CC and)
      (S
        (VP (VBG causing)
          (NP (DT a) (JJ terrorist) (NN attack))
          (PP (IN in)
            (NP (PRP$ my) (NN city))))))
    (, ,)
    (SBAR (IN whilst)
      (S
        (PP (IN at)
          (NP (DT the) (JJ same) (NN time)))
        (NP (RB nearly) (DT every) (JJ single) (JJ terrorist) (NN organization))
        (VP (VBZ has)
          (VP (VBN been)
            (VP (VBN funded)
              (PP (IN by)
                (NP (DT the) (NNP US))))))))
    (. .)))

nsubj(annoys-2, It-1)
root(ROOT-0, annoys-2)
dobj(annoys-2, me-3)
complm(attempt-6, that-4)
nsubj(attempt-6, you-5)
xsubj(fight-8, you-5)
ccomp(annoys-2, attempt-6)
aux(fight-8, to-7)
xcomp(attempt-6, fight-8)
dobj(fight-8, terrorism-9)
ccomp(annoys-2, pulling-11)
dobj(pulling-11, us-12)
prep(pulling-11, in-13)
pcomp(in-13, for-14)
det(ride-16, the-15)
prep_for(in-13, ride-16)
ccomp(annoys-2, causing-18)
conj_and(pulling-11, causing-18)
det(attack-21, a-19)
amod(attack-21, terrorist-20)
dobj(causing-18, attack-21)
poss(city-24, my-23)
prep_in(causing-18, city-24)
mark(funded-38, whilst-26)
det(time-30, the-28)
amod(time-30, same-29)
prep_at(funded-38, time-30)
advmod(organization-35, nearly-31)
det(organization-35, every-32)
amod(organization-35, single-33)
amod(organization-35, terrorist-34)
nsubjpass(funded-38, organization-35)
aux(funded-38, has-36)
auxpass(funded-38, been-37)
dep(annoys-2, funded-38)
det(US-41, the-40)
agent(funded-38, US-41)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ annoys)
      (NP (PRP me))
      (SBAR (IN that) (, ,)
        (S
          (SBAR (RB even)
            (WHADVP (WRB when))
            (S
              (NP (PRP$ your) (JJ own) (NN country))
              (VP (VBD suffered)
                (NP (DT a) (JJ terrible) (JJ natural) (NN disaster)))))
          (, ,)
          (NP (DT no) (NN one))
          (VP (VBD cared)
            (SBAR (IN because)
              (S
                (NP (PRP it))
                (VP (VBD happened)
                  (PP (TO to)
                    (NP
                      (NP (JJ poor) (NNS people))
                      (PRN (-LRB- -LRB-)
                        (S
                          (NP (PRP I))
                          (VP (VBP 'm)
                            (VP (VBG talking)
                              (PP (IN about)
                                (NP (NNP Katrina))))))
                        (-RRB- -RRB-)))))))))))
    (. .)))

nsubj(annoys-2, It-1)
root(ROOT-0, annoys-2)
dobj(annoys-2, me-3)
complm(cared-19, that-4)
advmod(suffered-11, even-6)
advmod(suffered-11, when-7)
poss(country-10, your-8)
amod(country-10, own-9)
nsubj(suffered-11, country-10)
dep(cared-19, suffered-11)
det(disaster-15, a-12)
amod(disaster-15, terrible-13)
amod(disaster-15, natural-14)
dobj(suffered-11, disaster-15)
det(one-18, no-17)
nsubj(cared-19, one-18)
ccomp(annoys-2, cared-19)
mark(happened-22, because-20)
nsubj(happened-22, it-21)
advcl(cared-19, happened-22)
amod(people-25, poor-24)
prep_to(happened-22, people-25)
nsubj(talking-29, I-27)
aux(talking-29, 'm-28)
dep(people-25, talking-29)
prep_about(talking-29, Katrina-31)

