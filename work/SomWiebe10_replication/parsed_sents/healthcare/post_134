(ROOT
  (SINV
    (ADJP (RBS Most) (JJ uninsured))
    (VP
      (ADVP (RB simply))
      (MD ca) (RB n't)
      (VP (VB afford)
        (NP (PRP it) (: ;)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ 's) (RB not)
                (NP (DT a) (NN choice))))))))
    (NP
      (NP (NNP Kao-Ping) (NNP Chua))
      (, ,)
      (NP (`` ``)
        (NP (NNS Arguments)
          (CC and)
          (NNS counterarguments))
        (PP (IN about)
          (NP (JJ universal) (NN health) (NN care)))
        ('' '')))
    (. .)))

advmod(uninsured-2, Most-1)
dep(afford-6, uninsured-2)
advmod(afford-6, simply-3)
aux(afford-6, ca-4)
neg(afford-6, n't-5)
root(ROOT-0, afford-6)
dobj(afford-6, it-7)
nsubj(choice-13, it-9)
cop(choice-13, 's-10)
neg(choice-13, not-11)
det(choice-13, a-12)
dep(it-7, choice-13)
nn(Chua-15, Kao-Ping-14)
nsubj(afford-6, Chua-15)
appos(Chua-15, Arguments-18)
appos(Chua-15, counterarguments-20)
conj_and(Arguments-18, counterarguments-20)
amod(care-24, universal-22)
nn(care-24, health-23)
prep_about(Arguments-18, care-24)

(ROOT
  (S
    (ADVP (RB AMSA))
    (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJ uninsured) (POS 's))
        (NN fault))
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBP 're)
            (ADJP (JJ uninsured))))))
    (. .)))

advmod(fault-8, AMSA-1)
nsubj(fault-8, It-3)
cop(fault-8, 's-4)
det(uninsured-6, the-5)
poss(fault-8, uninsured-6)
root(ROOT-0, fault-8)
complm(uninsured-12, that-9)
nsubj(uninsured-12, they-10)
cop(uninsured-12, 're-11)
ccomp(fault-8, uninsured-12)

(ROOT
  (S
    (NP
      (NP (CD 8))
      (PP (RB out) (IN of)
        (NP
          (NP (CD 10))
          (PP (IN of)
            (NP (DT the) (JJ uninsured))))))
    (VP (VBP work)
      (CC or)
      (VBP come)
      (PP (IN from)
        (NP (VBG working) (NNS families))))
    (. .)))

nsubj(work-8, 8-1)
nsubj(come-10, 8-1)
prep_out_of(8-1, 10-4)
det(uninsured-7, the-6)
prep_of(10-4, uninsured-7)
root(ROOT-0, work-8)
conj_or(work-8, come-10)
amod(families-13, working-12)
prep_from(work-8, families-13)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP play)
        (PP (IN by)
          (NP (DT the) (NNS rules)))
        (, ,)
        (S
          (VP (VB work)
            (ADVP (RB hard) (RB just))
            (PP (IN like)
              (NP
                (NP (DT the) (NN rest))
                (PP (IN of)
                  (NP (NNPS Americans)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (ADVP (RB yet))
        (NP (PRP they))
        (VP (MD ca) (RB n't)
          (VP (VB get)
            (NP (NN insurance))
            (PP (IN from)
              (NP (DT the) (NN employer)))
            (SBAR (IN because)
              (S
                (NP (PRP it))
                (VP (VBZ 's) (RB not)
                  (VP (VBN offered))))))))
      (, ,)
      (CC or)
      (S
        (NP (PRP they))
        (VP (MD ca) (RB n't)
          (VP (VB afford)
            (NP (PRP it))
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (VP (VBN offered)))))))))
    (. .)))

nsubj(play-2, They-1)
root(ROOT-0, play-2)
det(rules-5, the-4)
prep_by(play-2, rules-5)
ccomp(play-2, work-7)
advmod(just-9, hard-8)
advmod(work-7, just-9)
det(rest-12, the-11)
prep_like(work-7, rest-12)
prep_of(rest-12, Americans-14)
advmod(get-21, yet-17)
nsubj(get-21, they-18)
aux(get-21, ca-19)
neg(get-21, n't-20)
conj_and(play-2, get-21)
dobj(get-21, insurance-22)
det(employer-25, the-24)
prep_from(get-21, employer-25)
mark(offered-30, because-26)
nsubjpass(offered-30, it-27)
auxpass(offered-30, 's-28)
neg(offered-30, not-29)
advcl(get-21, offered-30)
nsubj(afford-36, they-33)
aux(afford-36, ca-34)
neg(afford-36, n't-35)
conj_and(play-2, afford-36)
conj_or(get-21, afford-36)
dobj(afford-36, it-37)
mark(offered-41, if-38)
nsubjpass(offered-41, it-39)
auxpass(offered-41, is-40)
advcl(afford-36, offered-41)

(ROOT
  (SQ (VBZ Is)
    (NP (DT that))
    (NP (PRP$ their) (NN fault))
    (. ?)))

cop(fault-4, Is-1)
nsubj(fault-4, that-2)
poss(fault-4, their-3)
root(ROOT-0, fault-4)

