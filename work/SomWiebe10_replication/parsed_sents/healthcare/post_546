(ROOT
  (S (`` ``)
    (S
      (VP (VB See)))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB get)
        (NP (DT that))))
    (. .)))

ccomp(get-7, See-2)
nsubj(get-7, I-4)
aux(get-7, do-5)
neg(get-7, n't-6)
root(ROOT-0, get-7)
dobj(get-7, that-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR
        (S
          (NP
            (NP (NN everything))
            (SBAR
              (S
                (NP (DT the) (NN government))
                (VP (VBZ handles)))))
          (VP (VBZ is)
            (ADJP (JJ terrible))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
dobj(handles-6, everything-3)
nsubj(terrible-8, everything-3)
det(government-5, the-4)
nsubj(handles-6, government-5)
rcmod(everything-3, handles-6)
cop(terrible-8, is-7)
ccomp(say-2, terrible-8)

(ROOT
  (S
    (INTJ (UH Yeah))
    (, ,)
    (ADVP (RB sure))
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN government) (POS 's))
        (NN fault)))
    (. .)))

dep(fault-9, Yeah-1)
advmod(fault-9, sure-3)
nsubj(fault-9, it-4)
cop(fault-9, 's-5)
det(government-7, the-6)
poss(fault-9, government-7)
root(ROOT-0, fault-9)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD screwed)
      (SBAR
        (S
          (NP (NN everyone) (NNP sideways) (NNP THEY))
          (VP (VBD did)))))
    (. .)))

nsubj(screwed-2, They-1)
root(ROOT-0, screwed-2)
nn(THEY-5, everyone-3)
nn(THEY-5, sideways-4)
nsubj(did-6, THEY-5)
ccomp(screwed-2, did-6)

(ROOT
  (S
    (S
      (INTJ (UH No))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (VP (VBG saying)
          (SBAR
            (S
              (NP (DT the) (NN government))
              (VP (VBZ is)
                (ADJP (JJ perfect))))))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP do) (RB n't)
                (VP (VB have)
                  (NP
                    (NP (DT the) (JJS worst) (NN record))
                    (PP (IN in)
                      (NP (DT the) (NN world)))))))))))
    (. .)))

dep(saying-6, No-1)
nsubj(saying-6, I-3)
aux(saying-6, 'm-4)
neg(saying-6, not-5)
root(ROOT-0, saying-6)
det(government-8, the-7)
nsubj(perfect-10, government-8)
cop(perfect-10, is-9)
ccomp(saying-6, perfect-10)
nsubj(sure-14, I-12)
cop(sure-14, 'm-13)
conj_but(saying-6, sure-14)
nsubj(have-18, we-15)
aux(have-18, do-16)
neg(have-18, n't-17)
dep(sure-14, have-18)
det(record-21, the-19)
amod(record-21, worst-20)
dobj(have-18, record-21)
det(world-24, the-23)
prep_in(record-21, world-24)

(ROOT
  (S ('' '')
    (NP (PRP$ Our) (NN government))
    (VP (VBZ does) (RB n't)
      (VP (VB have)
        (NP
          (NP (DT the) (JJS worst) (NN record))
          (PP (IN in)
            (NP (DT the) (NN world))))))
    (. .)))

poss(government-3, Our-2)
nsubj(have-6, government-3)
aux(have-6, does-4)
neg(have-6, n't-5)
root(ROOT-0, have-6)
det(record-9, the-7)
amod(record-9, worst-8)
dobj(have-6, record-9)
det(world-12, the-11)
prep_in(record-9, world-12)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (S
      (NP (PRP$ our) (NN government))
      (ADVP (RB probably))
      (VP (VBZ has)
        (NP
          (NP (DT the) (JJS best) (NN record))
          (PP (IN in)
            (NP (DT the) (NN world))))))
    (CC and)
    (S
      (ADVP (RB yet))
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB still))
        (ADJP (JJ incapable)
          (PP (IN of)
            (S
              (VP (VBG providing)
                (NP (NNS services))
                (PP (TO to)
                  (NP (DT the) (NN degree)))))))
        (SBAR (IN that)
          (S
            (NP (JJ private) (NNS entities))
            (VP (VBP do))))))
    (. .)))

prep_in(has-7, fact-2)
poss(government-5, our-4)
nsubj(has-7, government-5)
advmod(has-7, probably-6)
root(ROOT-0, has-7)
det(record-10, the-8)
amod(record-10, best-9)
dobj(has-7, record-10)
det(world-13, the-12)
prep_in(record-10, world-13)
advmod(incapable-19, yet-15)
nsubj(incapable-19, it-16)
cop(incapable-19, is-17)
advmod(incapable-19, still-18)
conj_and(has-7, incapable-19)
prepc_of(incapable-19, providing-21)
dobj(providing-21, services-22)
det(degree-25, the-24)
prep_to(providing-21, degree-25)
complm(do-29, that-26)
amod(entities-28, private-27)
nsubj(do-29, entities-28)
ccomp(incapable-19, do-29)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB blame)
          (NP (NNS corporations)))))
    (RB all)
    (S
      (NP (PRP you))
      (VP (VBP want)))
    (. .)))

nsubj(blame-3, You-1)
aux(blame-3, can-2)
root(ROOT-0, blame-3)
dobj(blame-3, corporations-4)
advmod(blame-3, all-5)
nsubj(want-7, you-6)
ccomp(blame-3, want-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (JJ popular)
          (CC and)
          (JJ easy))
        (NN thing)
        (S
          (VP (TO to)
            (VP (VB do))))))
    (. .)))

nsubj(thing-7, It-1)
cop(thing-7, is-2)
det(thing-7, a-3)
amod(thing-7, popular-4)
conj_and(popular-4, easy-6)
amod(thing-7, easy-6)
root(ROOT-0, thing-7)
aux(do-9, to-8)
infmod(thing-7, do-9)

(ROOT
  (S
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (VP (VB control)
          (NP (DT the) (NN corporation)))))
    (CC and)
    (RB so)
    (S
      (NP (PRP you))
      (VP (VBP are) (RB n't)
        (PP (TO to)
          (NP (NN blame)))))
    (. .)))

prep_after(control-7, all-2)
nsubj(control-7, you-4)
aux(control-7, do-5)
neg(control-7, n't-6)
root(ROOT-0, control-7)
det(corporation-9, the-8)
dobj(control-7, corporation-9)
advmod(control-7, so-11)
conj_and(control-7, so-11)
nsubj(are-13, you-12)
ccomp(control-7, are-13)
neg(are-13, n't-14)
prep_to(are-13, blame-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do)
      (VP (VB have)
        (NP
          (NP (DT a) (NN say))
          (PP (IN in)
            (NP (DT the) (NN government))))
        (ADVP (RB though))))
    (. .)))

nsubj(have-3, You-1)
aux(have-3, do-2)
root(ROOT-0, have-3)
det(say-5, a-4)
dobj(have-3, say-5)
det(government-8, the-7)
prep_in(say-5, government-8)
advmod(have-3, though-9)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (ADVP (RB really))
    (VP (VB want)
      (S
        (VP (TO to)
          (VP (VB be)
            (S
              (VP (TO to)
                (VP (VB blame)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP$ our) (NN health) (NN care) (NN system))
                      (VP (VBZ crumbles)
                        (PP (IN at)
                          (NP (PRP$ our) (NNS feet)))))))))))))
    (. ?)))

aux(want-4, Do-1)
nsubj(want-4, you-2)
xsubj(be-6, you-2)
advmod(want-4, really-3)
root(ROOT-0, want-4)
aux(be-6, to-5)
xcomp(want-4, be-6)
aux(blame-8, to-7)
xcomp(be-6, blame-8)
advmod(crumbles-14, when-9)
poss(system-13, our-10)
nn(system-13, health-11)
nn(system-13, care-12)
nsubj(crumbles-14, system-13)
advcl(blame-8, crumbles-14)
poss(feet-17, our-16)
prep_at(crumbles-14, feet-17)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP are)
      (NP (PRP you)))
    (FRAG
      (ADVP (RB still))
      (ADVP (RB here)))
    (. ?)))

advmod(are-2, Why-1)
root(ROOT-0, are-2)
nsubj(are-2, you-3)
dep(are-2, still-4)
dep(still-4, here-5)

(ROOT
  (S (`` ``)
    (NP (NNP Lets))
    (VP (VBP blame)
      (NP (PRP it))
      (PP (DT all) (IN on)
        (NP
          (NP (DT the) (NN government))
          (, ,) (RB not)
          (NP (DT the) (NNS media)))))
    (. .)))

nsubj(blame-3, Lets-2)
root(ROOT-0, blame-3)
dobj(blame-3, it-4)
dep(blame-3, all-5)
det(government-8, the-7)
prep_on(blame-3, government-8)
neg(government-8, not-10)
det(media-12, the-11)
dep(government-8, media-12)

(ROOT
  (FRAG
    (INTJ (UH God) (UH no))
    (, ,) (RB not)
    (NP (DT the) (NNS media))
    (. .)))

dep(not-4, God-1)
dep(God-1, no-2)
root(ROOT-0, not-4)
det(media-6, the-5)
dep(not-4, media-6)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB ever))
    (VP (VBP wonder)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP they))
          (VP (VBP call)
            (S
              (NP (DT this))
              (NP
                (NP (DT the) (NN age))
                (PP (IN of)
                  (NP (NN apathy)))))))))
    (. ?)))

nsubj(wonder-3, You-1)
advmod(wonder-3, ever-2)
root(ROOT-0, wonder-3)
advmod(call-6, why-4)
nsubj(call-6, they-5)
advcl(wonder-3, call-6)
nsubj(age-9, this-7)
det(age-9, the-8)
xcomp(call-6, age-9)
prep_of(age-9, apathy-11)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (NN trend))
          (PP (IN with)
            (NP
              (NP (NNS countries))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (ADJP (RBR more) (JJ rich))))))))))
    (, ,)
    (S
      (NP (NNS people))
      (ADVP (RB just))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (ADVP (DT any) (RBR more)))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP 're)
        (VP
          (VP (VBG being)
            (VP (VBN spoon)
              (S
                (VP (VBN fed)
                  (NP
                    (NP (DT the) (JJ same) (NN bullshit) (NN story))
                    (NP (DT every) (NN day)))))))
          (CC and)
          (VP
            (VP (VBG being)
              (VP (VBN told)
                (SBAR (IN that)
                  (S
                    (NP (NN hope))
                    (VP (VBZ is)
                      (ADJP (JJ useless)))))))
            (PRN (-LRB- -LRB-)
              (SBAR (IN unless)
                (S
                  (S
                    (NP (PRP it) (POS 's))
                    (VP (VBP hope)
                      (SBAR (IN that)
                        (S
                          (NP (EX there))
                          (VP (VBZ 's)
                            (NP (DT a) (NN god)))))))
                  (, ,) (RB then)
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (ADJP (RB totally) (JJ cool))
                      (, ,)
                      (SBAR (IN because)
                        (S
                          (NP (NN everything) (RB else))
                          (VP (VBZ is)
                            (ADJP (JJ bogus)))))))))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(trend-4, It-1)
cop(trend-4, 's-2)
det(trend-4, a-3)
root(ROOT-0, trend-4)
prep_with(trend-4, countries-6)
nsubj(rich-10, countries-6)
cop(rich-10, are-8)
advmod(rich-10, more-9)
rcmod(countries-6, rich-10)
nsubj(care-16, people-12)
advmod(care-16, just-13)
aux(care-16, do-14)
neg(care-16, n't-15)
conj_and(trend-4, care-16)
dep(more-18, any-17)
advmod(care-16, more-18)
nsubjpass(spoon-23, they-20)
nsubjpass(told-33, they-20)
aux(spoon-23, 're-21)
auxpass(spoon-23, being-22)
conj_and(trend-4, spoon-23)
dep(spoon-23, fed-24)
det(story-28, the-25)
amod(story-28, same-26)
nn(story-28, bullshit-27)
dobj(fed-24, story-28)
det(day-30, every-29)
dep(story-28, day-30)
auxpass(told-33, being-32)
conj_and(trend-4, told-33)
conj_and(spoon-23, told-33)
complm(useless-37, that-34)
nsubj(useless-37, hope-35)
cop(useless-37, is-36)
ccomp(told-33, useless-37)
mark(hope-42, unless-39)
nsubj(hope-42, it-40)
possessive(it-40, 's-41)
parataxis(told-33, hope-42)
complm('s-45, that-43)
expl('s-45, there-44)
ccomp(hope-42, 's-45)
det(god-47, a-46)
nsubj('s-45, god-47)
advmod(hope-42, then-49)
nsubj(cool-53, it-50)
cop(cool-53, 's-51)
advmod(cool-53, totally-52)
dep(hope-42, cool-53)
mark(bogus-59, because-55)
nsubj(bogus-59, everything-56)
advmod(everything-56, else-57)
cop(bogus-59, is-58)
advcl(cool-53, bogus-59)

(ROOT
  (S
    (S
      (NP (DT The) (NNP School) (NNPS Systems))
      (VP (VBP are) (RB n't)
        (VP (VBG failing))))
    (, ,)
    (NP (PRP they))
    (ADVP (RB just))
    (VP (VBP need)
      (SBAR
        (S
          (NP (NN time)
            (S
              (VP (TO to)
                (VP (VB adapt)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ current) (NN state))
                      (PP (IN of)
                        (NP (NN mind)))))
                  (NP
                    (NP (DT the) (NNS students))
                    (PP (IN in)
                      (NP (DT this) (NN country))))))))
          (VP (VBP have)
            (VP (VBN adapted))))))
    (. .)))

det(Systems-3, The-1)
nn(Systems-3, School-2)
nsubj(failing-6, Systems-3)
aux(failing-6, are-4)
neg(failing-6, n't-5)
ccomp(need-10, failing-6)
nsubj(need-10, they-8)
advmod(need-10, just-9)
root(ROOT-0, need-10)
nsubj(adapted-26, time-11)
aux(adapt-13, to-12)
infmod(time-11, adapt-13)
det(state-17, the-15)
amod(state-17, current-16)
prep_to(adapt-13, state-17)
prep_of(state-17, mind-19)
det(students-21, the-20)
dobj(adapt-13, students-21)
det(country-24, this-23)
prep_in(students-21, country-24)
aux(adapted-26, have-25)
ccomp(need-10, adapted-26)

(ROOT
  (S ('' '')
    (NP (DT That))
    (VP (VBZ has)
      (VP (VBN got)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT the) (JJ single) (NN lamest) (NN argument))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD can)
                      (VP (VB make)))))))))))
    (. .)))

nsubj(got-4, That-2)
xsubj(argument-10, That-2)
aux(got-4, has-3)
root(ROOT-0, got-4)
aux(argument-10, to-5)
cop(argument-10, be-6)
det(argument-10, the-7)
amod(argument-10, single-8)
nn(argument-10, lamest-9)
xcomp(got-4, argument-10)
dobj(make-13, argument-10)
nsubj(make-13, you-11)
aux(make-13, can-12)
rcmod(argument-10, make-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP understand)
          (S
            (NP (PRP you))
            (ADJP (RB right))))))
    (, ,)
    (NP (NNS schools))
    (VP (VBP have)
      (NP
        (NP (JJ bad) (NNS results))
        (SBAR
          (SBAR (IN because)
            (S
              (NP (NNS kids))
              (VP (VBP do) (RB n't)
                (VP (VB want)
                  (S
                    (VP (TO to)
                      (VP (VB learn))))))))
          (CC and)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (NP
                  (NP (DT the) (NN school) (POS 's))
                  (NN fault)))))))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP have) (RB n't)
            (VP (VBN adapted)
              (PP (TO to)
                (NP (DT that))))))))
    (. ?)))

mark(understand-3, If-1)
nsubj(understand-3, I-2)
advcl(have-8, understand-3)
nsubj(right-5, you-4)
xcomp(understand-3, right-5)
nsubj(have-8, schools-7)
root(ROOT-0, have-8)
amod(results-10, bad-9)
dobj(have-8, results-10)
nsubj(fault-24, results-10)
mark(want-15, because-11)
nsubj(want-15, kids-12)
xsubj(learn-17, kids-12)
aux(want-15, do-13)
neg(want-15, n't-14)
rcmod(results-10, want-15)
aux(learn-17, to-16)
xcomp(want-15, learn-17)
cop(fault-24, is-20)
det(school-22, the-21)
poss(fault-24, school-22)
rcmod(results-10, fault-24)
conj_and(want-15, fault-24)
mark(adapted-29, because-25)
nsubj(adapted-29, they-26)
aux(adapted-29, have-27)
neg(adapted-29, n't-28)
advcl(have-8, adapted-29)
prep_to(adapted-29, that-31)

(ROOT
  (SQ (VBD Did)
    (NP (PRP you))
    (VP
      (ADVP (RB ever))
      (VB wonder)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (NNS kids))
          (VP (VBP do) (RB n't)
            (VP (VB see)
              (NP (DT the) (NN need)
                (S
                  (VP (TO to)
                    (VP (VB learn)
                      (ADVP (DT any) (RBR more)))))))))))
    (. ?)))

aux(wonder-4, Did-1)
nsubj(wonder-4, you-2)
advmod(wonder-4, ever-3)
root(ROOT-0, wonder-4)
advmod(see-9, why-5)
nsubj(see-9, kids-6)
aux(see-9, do-7)
neg(see-9, n't-8)
advcl(wonder-4, see-9)
det(need-11, the-10)
dobj(see-9, need-11)
aux(learn-13, to-12)
infmod(need-11, learn-13)
dep(more-15, any-14)
advmod(learn-13, more-15)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP it))
    (VP (VBZ is)
      (SBAR (IN because)
        (S
          (NP (NNP Obama))
          (VP (VBZ has)
            (VP (VBN promised)
              (S
                (VP (TO to)
                  (VP (VB pay)
                    (PP (IN for)
                      (NP
                        (NP (PRP$ their) (NN gas)
                          (CC and)
                          (NNS utilities))
                        (CC and)
                        (NP (NN home))))))))))))
    (. .)))

advmod(is-3, Maybe-1)
nsubj(is-3, it-2)
root(ROOT-0, is-3)
mark(promised-7, because-4)
nsubj(promised-7, Obama-5)
xsubj(pay-9, Obama-5)
aux(promised-7, has-6)
advcl(is-3, promised-7)
aux(pay-9, to-8)
xcomp(promised-7, pay-9)
poss(gas-12, their-11)
prep_for(pay-9, gas-12)
prep_for(pay-9, utilities-14)
conj_and(gas-12, utilities-14)
prep_for(pay-9, home-16)
conj_and(gas-12, home-16)

(ROOT
  (S ('' '')
    (PP (IN As)
      (PP (IN for)
        (NP (NNP Katrina))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB personally))
    (VP (VBP blame)
      (NP
        (NP (NNP Bush))
        (PP (IN for)
          (S
            (VP (VBG appointing)
              (NP (DT that) (NN weirdo))
              (PP (IN as)
                (NP
                  (NP (DT the) (NN head))
                  (PP (IN of)
                    (NP (NNP FEMA)))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (ADVP (RB probably))
                      (VP (VBD did) (RB n't)
                        (VP (VB have)
                          (NP
                            (NP (DT any) (NN experience))
                            (PP (IN in)
                              (NP (DT that) (NN field))))
                          (ADVP (IN at) (DT all)))))))))))))
    (. .)))

prepc_as_for(blame-8, for-3)
pobj(blame-8, Katrina-4)
nsubj(blame-8, I-6)
advmod(blame-8, personally-7)
root(ROOT-0, blame-8)
dobj(blame-8, Bush-9)
prepc_for(Bush-9, appointing-11)
det(weirdo-13, that-12)
dobj(appointing-11, weirdo-13)
det(head-16, the-15)
prep_as(appointing-11, head-16)
nsubj(have-23, head-16)
prep_of(head-16, FEMA-18)
advmod(have-23, probably-20)
aux(have-23, did-21)
neg(have-23, n't-22)
rcmod(head-16, have-23)
det(experience-25, any-24)
dobj(have-23, experience-25)
det(field-28, that-27)
prep_in(experience-25, field-28)
advmod(have-23, at-29)
pobj(at-29, all-30)

(ROOT
  (S
    (NP (NNP Go))
    (VP (VBP move)
      (PP (TO to)
        (NP
          (NP (NNP Canada))
          (CC or)
          (NP (NN something))))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (DT the) (NN government))
                (VP (VBZ is)
                  (ADJP (JJ incapable)
                    (PP (IN of)
                      (NP (NN anything)))))))))))
    (. .)))

nsubj(move-2, Go-1)
root(ROOT-0, move-2)
prep_to(move-2, Canada-4)
prep_to(move-2, something-6)
conj_or(Canada-4, something-6)
mark(think-9, if-7)
nsubj(think-9, you-8)
advcl(move-2, think-9)
det(government-11, the-10)
nsubj(incapable-13, government-11)
cop(incapable-13, is-12)
ccomp(think-9, incapable-13)
prep_of(incapable-13, anything-15)

(ROOT
  (S (RB So)
    (VP (VB yeah) (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP one))
          (VP (VBD was)
            (NP
              (NP (DT the) (NNS people) (POS 's))
              (NN fault))
            (PP (IN for)
              (S
                (VP (VBG electing)
                  (NP (NNP Bush)))))))))
    (. .)))

advmod(yeah-2, So-1)
root(ROOT-0, yeah-2)
complm(fault-10, that-4)
nsubj(fault-10, one-5)
cop(fault-10, was-6)
det(people-8, the-7)
poss(fault-10, people-8)
ccomp(yeah-2, fault-10)
prepc_for(fault-10, electing-12)
dobj(electing-12, Bush-13)

(ROOT
  (S ('' '')
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB blame)
          (NP (NNP Bush)))))
    (RB all)
    (S
      (S
        (NP (PRP you))
        (VP (VBP want)))
      (, ,)
      (CC but)
      (S
        (NP (PRP I))
        (VP (VBD was)
          (ADVP (RB there))))
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NN response))
              (VP (VBD was)
                (ADJP (JJ like))))))))
    (. .)))

nsubj(blame-4, You-2)
aux(blame-4, can-3)
root(ROOT-0, blame-4)
dobj(blame-4, Bush-5)
advmod(blame-4, all-6)
nsubj(want-8, you-7)
ccomp(blame-4, want-8)
nsubj(was-12, I-11)
ccomp(blame-4, was-12)
conj_but(want-8, was-12)
advmod(was-12, there-13)
nsubj(know-16, I-15)
ccomp(blame-4, know-16)
conj_and(want-8, know-16)
dobj(like-21, what-17)
det(response-19, the-18)
nsubj(like-21, response-19)
cop(like-21, was-20)
ccomp(know-16, like-21)

(ROOT
  (S
    (PP (IN At)
      (NP (NN night)))
    (, ,)
    (NP (PRP they))
    (VP (VBD had)
      (NP
        (NP (CD 5) (NNS miles))
        (PP (IN of)
          (NP
            (NP (NN rescue) (NNS helicopters))
            (VP (VBN lined)
              (PRT (RP up)))))))
    (. .)))

prep_at(had-5, night-2)
nsubj(had-5, they-4)
root(ROOT-0, had-5)
num(miles-7, 5-6)
dobj(had-5, miles-7)
nn(helicopters-10, rescue-9)
prep_of(miles-7, helicopters-10)
partmod(helicopters-10, lined-11)
prt(lined-11, up-12)

(ROOT
  (S
    (PP (IN During)
      (NP (DT the) (NN day)))
    (, ,)
    (NP (DT those) (NNS helicopters))
    (VP (VBD flew)
      (NP (DT every) (NN minute))
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD could))))
      (, ,)
      (S
        (VP (VBG pulling)
          (NP (NNS people))
          (PRT (RP off))
          (PP (IN of)
            (NP (NN roof) (NNS tops))))))
    (. .)))

det(day-3, the-2)
prep_during(flew-7, day-3)
det(helicopters-6, those-5)
nsubj(flew-7, helicopters-6)
root(ROOT-0, flew-7)
det(minute-9, every-8)
dobj(flew-7, minute-9)
nsubj(could-11, they-10)
dep(flew-7, could-11)
xcomp(flew-7, pulling-13)
dobj(pulling-13, people-14)
nn(tops-18, roof-17)
prep_off_of(pulling-13, tops-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NN response))
      (PP (TO to)
        (NP (NNP Katrina))))
    (VP (VBD was)
      (ADJP (JJ astronomical)))
    (. .)))

det(response-2, The-1)
nsubj(astronomical-6, response-2)
prep_to(response-2, Katrina-4)
cop(astronomical-6, was-5)
root(ROOT-0, astronomical-6)

(ROOT
  (S
    (NP (DT The) (NN problem))
    (VP (VBD was) (RB n't)
      (NP (DT the) (NN post) (NN Katrina) (NN response)))
    (. .)))

det(problem-2, The-1)
nsubj(response-8, problem-2)
cop(response-8, was-3)
neg(response-8, n't-4)
det(response-8, the-5)
nn(response-8, post-6)
nn(response-8, Katrina-7)
root(ROOT-0, response-8)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (MD could)
      (VP (VB have)
        (VP (VBN been)
          (ADJP (JJR better)))))
    (. .)))

nsubj(better-5, Nothing-1)
aux(better-5, could-2)
aux(better-5, have-3)
cop(better-5, been-4)
root(ROOT-0, better-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD saw)
      (NP (PRP it))
      (PP (IN with)
        (NP (PRP$ my) (JJ own) (NNS eyes))))
    (. .)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
dobj(saw-2, it-3)
poss(eyes-7, my-5)
amod(eyes-7, own-6)
prep_with(saw-2, eyes-7)

(ROOT
  (NP (NNP BTW) (: ...)))

root(ROOT-0, BTW-1)

(ROOT
  (INTJ (UH .)))


(ROOT
  (SQ (VBD did)
    (NP (PRP you))
    (VP (VB notice)
      (SBAR
        (S
          (NP (PRP you))
          (VP
            (VP (VBD started)
              (PRT (RP out))
              (S
                (VP (VBG disagreeing)
                  (PP (IN with)
                    (NP (PRP$ my) (NN principle))))))
            (CC and)
            (VP (VBD finished)
              (PP (IN in)
                (NP (JJ total) (NN agreement))))))))
    (. ?)))

aux(notice-3, did-1)
nsubj(notice-3, you-2)
root(ROOT-0, notice-3)
nsubj(started-5, you-4)
nsubj(finished-12, you-4)
ccomp(notice-3, started-5)
prt(started-5, out-6)
xcomp(started-5, disagreeing-7)
poss(principle-10, my-9)
prep_with(disagreeing-7, principle-10)
ccomp(notice-3, finished-12)
conj_and(started-5, finished-12)
amod(agreement-15, total-14)
prep_in(finished-12, agreement-15)

(ROOT
  (S (CC Or)
    (ADVP (RB maybe))
    (NP (PRP you))
    (VP (VBP 're)
      (VP (VBG forgetting)
        (SBAR (IN that)
          (S
            (PP (IN for)
              (NP (DT the) (JJ past) (CD two) (NNS decades)))
            (NP (PRP we))
            (VP (VBP 've)
              (VP (VBN been)
                (VP (VBG fighting)
                  (NP
                    (NP (DT a) (JJ ridiculous) (NN war))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN middle))
                        (ADVP (JJ east))))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ has)
                          (VP (VBN been)
                            (NP
                              (NP (DT a) (JJ constant) (NN drain))
                              (PP (IN on)
                                (NP (PRP$ our) (NN economy))))))))))))))))
    (. .)))

cc(forgetting-5, Or-1)
advmod(forgetting-5, maybe-2)
nsubj(forgetting-5, you-3)
aux(forgetting-5, 're-4)
root(ROOT-0, forgetting-5)
complm(fighting-15, that-6)
det(decades-11, the-8)
amod(decades-11, past-9)
num(decades-11, two-10)
prep_for(fighting-15, decades-11)
nsubj(fighting-15, we-12)
aux(fighting-15, 've-13)
aux(fighting-15, been-14)
ccomp(forgetting-5, fighting-15)
det(war-18, a-16)
amod(war-18, ridiculous-17)
dobj(fighting-15, war-18)
nsubj(drain-28, war-18)
det(middle-21, the-20)
prep_in(war-18, middle-21)
advmod(middle-21, east-22)
aux(drain-28, has-24)
cop(drain-28, been-25)
det(drain-28, a-26)
amod(drain-28, constant-27)
rcmod(war-18, drain-28)
poss(economy-31, our-30)
prep_on(drain-28, economy-31)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADJP (JJ right))))
    (, ,)
    (NP (PRP you))
    (VP (VBD agreed)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN government))
          (VP (VBZ is)
            (ADJP (RB too) (JJ inept))
            (S
              (VP (TO to)
                (VP (VB handle)
                  (NP (NN health) (NN care))
                  (PP (IN by)
                    (NP
                      (NP (NN way))
                      (PP (IN of)
                        (S
                          (VP (VBG admitting)
                            (SBAR (IN that)
                              (S
                                (NP (DT the) (NN government))
                                (VP (MD ca) (RB n't)
                                  (VP (VB handle)
                                    (NP
                                      (NP (NNS schools))
                                      (, ,)
                                      (NP (NN food) (NN safety))
                                      (CC or)
                                      (NP (JJ basic) (NN rescue) (NNS operations)))))))))))))))))))
    (. .)))

nsubj(right-3, That-1)
cop(right-3, 's-2)
ccomp(agreed-6, right-3)
nsubj(agreed-6, you-5)
root(ROOT-0, agreed-6)
complm(inept-12, that-7)
det(government-9, the-8)
nsubj(inept-12, government-9)
xsubj(handle-14, government-9)
cop(inept-12, is-10)
advmod(inept-12, too-11)
ccomp(agreed-6, inept-12)
aux(handle-14, to-13)
xcomp(inept-12, handle-14)
nn(care-16, health-15)
dobj(handle-14, care-16)
prep_by(handle-14, way-18)
prepc_of(way-18, admitting-20)
complm(handle-26, that-21)
det(government-23, the-22)
nsubj(handle-26, government-23)
aux(handle-26, ca-24)
neg(handle-26, n't-25)
ccomp(admitting-20, handle-26)
dobj(handle-26, schools-27)
nn(safety-30, food-29)
dobj(handle-26, safety-30)
conj_or(schools-27, safety-30)
amod(operations-34, basic-32)
nn(operations-34, rescue-33)
dobj(handle-26, operations-34)
conj_or(schools-27, operations-34)

(ROOT
  (SBARQ
    (WHADVP (RB '') (WRB How))
    (SQ (VBZ does)
      (NP (DT the) (NN saying))
      (VP (VB go)))
    (. ?)))

advmod(go-6, How-2)
aux(go-6, does-3)
det(saying-5, the-4)
nsubj(go-6, saying-5)
root(ROOT-0, go-6)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Democracy))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJS worst) (NN form))
          (PP (IN of)
            (NP
              (NP (NN government))
              (PP (IN save)
                (NP
                  (NP (DT every) (JJ other) (NN form))
                  (PP (IN of)
                    (NP
                      (NP (NN government))
                      ('' '')
                      (SBAR
                        (S
                          (NP (PRP$ Our) (NN government))
                          (VP (MD may)
                            (VP (VB be)
                              (ADJP (JJ inept)))))))))))))))
    (, ,)
    (CC but)
    (S
      (ADVP (IN at) (JJS least))
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB relatively) (JJ passive)
          (PP (IN in)
            (NP (PRP$ its) (NNS ineptness))))))
    (. .)))

nsubj(form-6, Democracy-2)
cop(form-6, is-3)
det(form-6, the-4)
amod(form-6, worst-5)
root(ROOT-0, form-6)
prep_of(form-6, government-8)
det(form-12, every-10)
amod(form-12, other-11)
prep_save(government-8, form-12)
prep_of(form-12, government-14)
dobj(inept-20, government-14)
poss(government-17, Our-16)
nsubj(inept-20, government-17)
aux(inept-20, may-18)
cop(inept-20, be-19)
rcmod(government-14, inept-20)
advmod(passive-28, at-23)
pobj(at-23, least-24)
nsubj(passive-28, it-25)
cop(passive-28, is-26)
advmod(passive-28, relatively-27)
conj_but(form-6, passive-28)
poss(ineptness-31, its-30)
prep_in(passive-28, ineptness-31)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN government))
        (VP (VBZ becomes)
          (ADJP (JJ controlling)
            (CC and)
            (JJ inept)))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP we))
    (VP (MD 'll)
      (VP (VB see)
        (ADVP (RB just))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (NNP f) (NNP 'd))
              (PP (IN up)
                (NP (NN stuff))))
            (VP (MD can)
              (VP (VB get)))))))
    (. .)))

advmod(controlling-5, When-1)
det(government-3, the-2)
nsubj(controlling-5, government-3)
nsubj(inept-7, government-3)
cop(controlling-5, becomes-4)
advcl(see-12, controlling-5)
conj_and(controlling-5, inept-7)
advcl(see-12, inept-7)
advmod(see-12, then-9)
nsubj(see-12, we-10)
aux(see-12, 'll-11)
root(ROOT-0, see-12)
advmod(see-12, just-13)
advmod(get-20, how-14)
nn('d-16, f-15)
nsubj(get-20, 'd-16)
prep_up('d-16, stuff-18)
aux(get-20, can-19)
ccomp(see-12, get-20)

(ROOT
  (S
    (S
      (VP (VB Go)
        (PP (TO to)
          (NP (NNP Canada)))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB see)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (VP (VBG talking) (IN about))))))))
    (. .)))

root(ROOT-0, Go-1)
prep_to(Go-1, Canada-3)
nsubj(see-7, you-5)
aux(see-7, 'll-6)
conj_and(Go-1, see-7)
dobj(talking-11, what-8)
nsubj(talking-11, I-9)
aux(talking-11, 'm-10)
ccomp(see-7, talking-11)
dep(talking-11, about-12)

(ROOT
  (S ('' '')
    (NP (NNP Lets))
    (VP (VBP blame)
      (NP (PRP it))
      (PP (DT all) (IN on)
        (NP
          (NP (DT the) (NN government))
          (, ,)
          (ADVP (RB no)
            (NP (RB not) (DT the) (JJ big) (NNS corporations)))))
      (S
        (VP (TO to)
          (VP
            (ADVP (RB continually))
            (VB screw)
            (NP
              (NP (NN everyone) (RB else))
              (PP (RB out) (IN of)
                (NP (PRP$ their) (NN money))))))))
    (. .)))

nsubj(blame-3, Lets-2)
xsubj(screw-17, Lets-2)
root(ROOT-0, blame-3)
dobj(blame-3, it-4)
dep(blame-3, all-5)
det(government-8, the-7)
prep_on(blame-3, government-8)
advmod(government-8, no-10)
neg(corporations-14, not-11)
det(corporations-14, the-12)
amod(corporations-14, big-13)
pobj(no-10, corporations-14)
aux(screw-17, to-15)
advmod(screw-17, continually-16)
xcomp(blame-3, screw-17)
dobj(screw-17, everyone-18)
advmod(everyone-18, else-19)
poss(money-23, their-22)
prep_out_of(everyone-18, money-23)

