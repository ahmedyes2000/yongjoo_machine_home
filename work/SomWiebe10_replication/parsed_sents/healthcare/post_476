(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP think)
              (SBAR (IN that)
                (S
                  (VP (VBD left)
                    (PP (TO to)
                      (NP (PRP$ my) (JJ own) (NNS devices)))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (MD would)
                          (VP (VB want)
                            (S
                              (VP (TO to)
                                (VP (VB build)
                                  (S
                                    (NP (DT a) (NN society))
                                    (ADJP (JJ similar)
                                      (PP (TO to)
                                        (NP
                                          (NP (DT the) (NN one))
                                          (SBAR
                                            (S
                                              (NP (PRP we))
                                              (VP (VBP have)))))))))))))))))))))))
    (. ?)))

nsubj(makes-2, What-1)
root(ROOT-0, makes-2)
nsubj(think-4, you-3)
ccomp(makes-2, think-4)
complm(left-6, that-5)
ccomp(think-4, left-6)
poss(devices-10, my-8)
amod(devices-10, own-9)
prep_to(left-6, devices-10)
nsubj(want-13, I-11)
xsubj(build-15, I-11)
aux(want-13, would-12)
ccomp(left-6, want-13)
aux(build-15, to-14)
xcomp(want-13, build-15)
det(society-17, a-16)
nsubj(similar-18, society-17)
xcomp(build-15, similar-18)
det(one-21, the-20)
prep_to(similar-18, one-21)
dobj(have-23, one-21)
nsubj(have-23, we-22)
rcmod(one-21, have-23)

(ROOT
  (SQ
    (PP (RB Just) (IN as)
      (NP (DT an) (NN example)))
    (, ,) (VBP do)
    (NP (PRP you))
    (VP (VB think)
      (NP (PRP I))
      (PP (IN like)
        (S
          (VP (VBG driving)
            (ADVP (RB so) (RB much))
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (VBP want)
                  (NP (NNS roads))
                  (ADVP (RB everywhere)))))))))
    (. ?)))

advmod(think-8, Just-1)
advcl(think-8, as-2)
det(example-4, an-3)
prep_as(think-8, example-4)
aux(think-8, do-6)
nsubj(think-8, you-7)
root(ROOT-0, think-8)
dobj(think-8, I-9)
prepc_like(think-8, driving-11)
advmod(much-13, so-12)
advmod(driving-11, much-13)
complm(want-16, that-14)
nsubj(want-16, I-15)
ccomp(driving-11, want-16)
dobj(want-16, roads-17)
advmod(want-16, everywhere-18)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB think)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD would)
            (VP (VB create)
              (NP (DT a) (NN society))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP I))
                  (VP (VBP have)
                    (S
                      (VP (TO to)
                        (VP (VB get)
                          (PP (IN in)
                            (NP (DT the) (NN car)))
                          (NP (NN everyday)))))))))))))
    (. ?)))

aux(think-3, Do-1)
nsubj(think-3, you-2)
root(ROOT-0, think-3)
complm(create-7, that-4)
nsubj(create-7, I-5)
aux(create-7, would-6)
ccomp(think-3, create-7)
det(society-9, a-8)
dobj(create-7, society-9)
advmod(have-12, where-10)
nsubj(have-12, I-11)
xsubj(get-14, I-11)
advcl(create-7, have-12)
aux(get-14, to-13)
xcomp(have-12, get-14)
det(car-17, the-16)
prep_in(get-14, car-17)
dobj(get-14, everyday-18)

