(ROOT
  (S
    (NP (NNP Universal) (NNP Health) (NNP Care))
    (VP (VBZ is) (RB not)
      (NP (DT an) (JJ evil) (NN institution)))
    (. .)))

nn(Care-3, Universal-1)
nn(Care-3, Health-2)
nsubj(institution-8, Care-3)
cop(institution-8, is-4)
neg(institution-8, not-5)
det(institution-8, an-6)
amod(institution-8, evil-7)
root(ROOT-0, institution-8)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD scanned)
        (PP (IN over)
          (NP
            (NP (DT the) (NN opponent) (POS 's))
            (NNS arguments))))
      (CC and)
      (VP (VBD saw)
        (SBAR
          (S
            (NP (NNS things))
            (VP (VBP like) (, ,) (`` ``)
              (S
                (NP (NNP Universal) (NNP Health) (NNP Care))
                (VP (VBZ is)
                  (NP (NN robbery))))
              ('' ''))))))
    (. .)))

nsubj(scanned-2, I-1)
nsubj(saw-9, I-1)
root(ROOT-0, scanned-2)
det(opponent-5, the-4)
poss(arguments-7, opponent-5)
prep_over(scanned-2, arguments-7)
conj_and(scanned-2, saw-9)
nsubj(like-11, things-10)
ccomp(saw-9, like-11)
nn(Care-16, Universal-14)
nn(Care-16, Health-15)
nsubj(robbery-18, Care-16)
cop(robbery-18, is-17)
ccomp(like-11, robbery-18)

(ROOT
  (SQ (VBZ Is)
    (NP (NN cumpolsory))
    (NP (JJ public) (NN education))
    (ADVP (RB also))
    (NP (NN robbery))
    (. ?)))

cop(robbery-6, Is-1)
nsubj(robbery-6, cumpolsory-2)
amod(education-4, public-3)
attr(robbery-6, education-4)
advmod(robbery-6, also-5)
root(ROOT-0, robbery-6)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP
        (NP (NN fire) (NN protection)
          (CC and)
          (NN police) (NN protection))
        (PP (IN for)
          (NP (DT all)))))
    (. ?)))

root(ROOT-0, What-1)
dep(What-1, about-2)
nn(protection-4, fire-3)
pobj(about-2, protection-4)
nn(protection-7, police-6)
pobj(about-2, protection-7)
conj_and(protection-4, protection-7)
prep_for(protection-4, all-9)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (DT some) (NNS things))
          (SBAR
            (WHPP (TO to)
              (WHNP (WDT which)))
            (S
              (NP (DT all) (NNS people))
              (VP (VBP are)
                (ADJP (VBN entitled)))))
          (, ,)
          (PP (JJ such) (IN as)
            (NP (NN education)
              (CC and)
              (NN healthcare))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP live)
        (PP (IN in)
          (NP
            (NP (DT a) (NN nation)
              (CC and)
              (NN time))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT that))
                (VP (VBZ is)
                  (ADJP (JJ possible)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
det(things-4, some-3)
nsubj(are-2, things-4)
rel(entitled-10, which-6)
det(people-8, all-7)
nsubjpass(entitled-10, people-8)
auxpass(entitled-10, are-9)
rcmod(things-4, entitled-10)
prep_such_as(things-4, education-14)
prep_such_as(things-4, healthcare-16)
conj_and(education-14, healthcare-16)
nsubj(live-20, we-19)
conj_and(are-2, live-20)
det(nation-23, a-22)
prep_in(live-20, nation-23)
prep_in(live-20, time-25)
conj_and(nation-23, time-25)
advmod(possible-29, where-26)
nsubj(possible-29, that-27)
cop(possible-29, is-28)
rcmod(nation-23, possible-29)

(ROOT
  (S
    (NP (DT The) (JJ private) (NNS insurers))
    (VP
      (VP (VBP have)
        (VP (VBN had)
          (NP (JJ ample) (NN opportunity))
          (S
            (VP (TO to)
              (VP (VB update)
                (NP (PRP$ their) (NN business) (NN model))
                (S
                  (VP (TO to)
                    (VP
                      (ADVP (RB actually))
                      (VB care)
                      (PP (IN for)
                        (NP (DT all) (NN insured)))))))))))
      (, ,)
      (CC but)
      (VP (VBP have)
        (VP (VBN chosen)
          (S (RB not)
            (VP (TO to))))))
    (. .)))

det(insurers-3, The-1)
amod(insurers-3, private-2)
nsubj(had-5, insurers-3)
nsubj(chosen-22, insurers-3)
xsubj(to-24, insurers-3)
aux(had-5, have-4)
root(ROOT-0, had-5)
amod(opportunity-7, ample-6)
dobj(had-5, opportunity-7)
aux(update-9, to-8)
xcomp(had-5, update-9)
poss(model-12, their-10)
nn(model-12, business-11)
dobj(update-9, model-12)
aux(care-15, to-13)
advmod(care-15, actually-14)
xcomp(update-9, care-15)
det(insured-18, all-17)
prep_for(care-15, insured-18)
aux(chosen-22, have-21)
conj_but(had-5, chosen-22)
neg(to-24, not-23)
xcomp(chosen-22, to-24)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP prioritize)
      (NP (NNS profits))
      (, ,)
      (S
        (VP (VBG denying)
          (NP
            (NP (NN payment))
            (PP (IN for)
              (NP (NN care))))
          (FRAG
            (ADJP
              (WHADVP (WRB whenever))
              (JJ possible))))))
    (. .)))

nsubj(prioritize-2, They-1)
root(ROOT-0, prioritize-2)
dobj(prioritize-2, profits-3)
partmod(prioritize-2, denying-5)
xcomp(prioritize-2, denying-5)
dobj(denying-5, payment-6)
prep_for(payment-6, care-8)
advmod(possible-10, whenever-9)
dep(denying-5, possible-10)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP deny)
      (NP (NNS people))
      (NP (NN admission))
      (PP (IN into)
        (NP
          (NP (NNS plans))
          (VP (VBN based)
            (PP (IN on)
              (NP
                (NP (`` ``) (JJ pre-existing) (NNS conditions) ('' ''))
                (CC and)
                (NP (DT the) (JJ like))))))))
    (. .)))

nsubj(deny-2, They-1)
root(ROOT-0, deny-2)
iobj(deny-2, people-3)
dobj(deny-2, admission-4)
prep_into(deny-2, plans-6)
partmod(plans-6, based-7)
amod(conditions-11, pre-existing-10)
prep_on(based-7, conditions-11)
det(like-15, the-14)
prep_on(based-7, like-15)
conj_and(conditions-11, like-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP need)
      (NP
        (NP (NN insurance))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP
                (ADVP (RB actually))
                (VBZ covers)
                (NP (PRP us)))
              (CC and)
              (VP (VBZ covers)
                (S
                  (NP (PRP us))
                  (NP (DT all)))))))))
    (. .)))

nsubj(need-2, We-1)
root(ROOT-0, need-2)
dobj(need-2, insurance-3)
nsubj(covers-6, insurance-3)
nsubj(covers-9, insurance-3)
advmod(covers-6, actually-5)
rcmod(insurance-3, covers-6)
dobj(covers-6, us-7)
rcmod(insurance-3, covers-9)
conj_and(covers-6, covers-9)
nsubj(all-11, us-10)
xcomp(covers-9, all-11)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (JJ private) (NN insurance) (NNS companies))
        (ADVP (RB apparently))
        (VP (MD ca) (RB n't)
          (VP (VB step)
            (PRT (RP up))
            (PP (TO to)
              (NP (DT the) (NN plate)
                (S
                  (VP (TO to)
                    (VP (VB fill)
                      (NP (DT this) (NN need)))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP see)
      (NP (DT no) (NN issue))
      (PP (IN with)
        (NP
          (NP (DT the) (NN government))
          (VP (VBG doing)
            (ADVP (RB so))))))
    (. .)))

mark(step-8, Since-1)
amod(companies-4, private-2)
nn(companies-4, insurance-3)
nsubj(step-8, companies-4)
advmod(step-8, apparently-5)
aux(step-8, ca-6)
neg(step-8, n't-7)
advcl(see-19, step-8)
prt(step-8, up-9)
det(plate-12, the-11)
prep_to(step-8, plate-12)
aux(fill-14, to-13)
infmod(plate-12, fill-14)
det(need-16, this-15)
dobj(fill-14, need-16)
nsubj(see-19, I-18)
root(ROOT-0, see-19)
det(issue-21, no-20)
dobj(see-19, issue-21)
det(government-24, the-23)
prep_with(see-19, government-24)
partmod(government-24, doing-25)
advmod(doing-25, so-26)

