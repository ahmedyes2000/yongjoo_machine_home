(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD should) (RB all)
            (VP (VB have)
              (VP
                (ADVP
                  (NP (DT the) (JJ same) (NNS rights))
                  (RB as))
                (VBD did)
                (NP (PRP$ our) (JJ founding) (NNS fathers))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(did-11, we-3)
aux(did-11, should-4)
advmod(did-11, all-5)
aux(did-11, have-6)
det(rights-9, the-7)
amod(rights-9, same-8)
npadvmod(as-10, rights-9)
advmod(did-11, as-10)
ccomp(think-2, did-11)
poss(fathers-14, our-12)
amod(fathers-14, founding-13)
dobj(did-11, fathers-14)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB also))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD should)
            (VP (VB be)
              (VP (VBN entitled)
                (PP (TO to)
                  (NP (DT the) (JJ same) (NNS things)))
                (SBAR (IN as)
                  (S
                    (VP (VBD were)
                      (NP (PRP$ our) (VBG founding) (NNS fathers)))))))))))
    (. .)))

nsubj(think-3, I-1)
advmod(think-3, also-2)
root(ROOT-0, think-3)
nsubjpass(entitled-7, we-4)
aux(entitled-7, should-5)
auxpass(entitled-7, be-6)
ccomp(think-3, entitled-7)
det(things-11, the-9)
amod(things-11, same-10)
prep_to(entitled-7, things-11)
mark(fathers-16, as-12)
cop(fathers-16, were-13)
poss(fathers-16, our-14)
amod(fathers-16, founding-15)
advcl(entitled-7, fathers-16)

(ROOT
  (S
    (S
      (NP (DT This) (NN country))
      (VP (VBD was)
        (VP (VBN founded)
          (PP (IN on)
            (NP
              (NP (DT the) (NNS principles))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD stated) ('' '')))))))))
    (PRN
      (S
        (NP (PRP You))
        (VP (VBP have)
          (NP (DT the) (NN right)
            (S
              (VP (TO to)
                (VP (VB work)
                  (ADJP (JJ hard))))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (VBN entitled)
          (PP (TO to)
            (NP
              (NP (RB exactly) (DT those) (NNS things))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP you))
                  (VP (VBP earn)))))))))
    (. .)))

det(country-2, This-1)
nsubjpass(founded-4, country-2)
auxpass(founded-4, was-3)
root(ROOT-0, founded-4)
det(principles-7, the-6)
prep_on(founded-4, principles-7)
nsubj(stated-9, principles-7)
rcmod(principles-7, stated-9)
nsubj(have-12, You-11)
dep(founded-4, have-12)
det(right-14, the-13)
dobj(have-12, right-14)
aux(work-16, to-15)
infmod(right-14, work-16)
acomp(work-16, hard-17)
nsubjpass(entitled-22, you-20)
auxpass(entitled-22, are-21)
conj_and(founded-4, entitled-22)
advmod(things-26, exactly-24)
det(things-26, those-25)
prep_to(entitled-22, things-26)
dobj(earn-29, things-26)
rel(earn-29, which-27)
nsubj(earn-29, you-28)
rcmod(things-26, earn-29)

(ROOT
  (S
    (S
      (VP (VBG Plymouth)
        (NP
          (NP (NN colony))
          ('' '')
          (SBAR
            (S
              (SBAR (IN If)
                (S
                  (NP (PRP you))
                  (VP (VBP do) (RB n't)
                    (VP (VB work)))))
              (, ,)
              (NP (PRP you))
              (VP (VBP do) (RB n't)
                (VP (VB eat) ('' '')
                  (NP
                    (NP (NNP Guess))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ folks))))))))))))
    (, ,)
    (NP (NN everyone))
    (VP (VBD worked))
    (. .)))

partmod(worked-20, Plymouth-1)
dobj(Plymouth-1, colony-2)
mark(work-8, If-4)
nsubj(work-8, you-5)
aux(work-8, do-6)
neg(work-8, n't-7)
advcl(eat-13, work-8)
nsubj(eat-13, you-10)
aux(eat-13, do-11)
neg(eat-13, n't-12)
rcmod(colony-2, eat-13)
dobj(eat-13, Guess-15)
nsubj(folks-17, Guess-15)
rcmod(Guess-15, folks-17)
nsubj(worked-20, everyone-19)
root(ROOT-0, worked-20)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (INTJ (UH Oh))
        (, ,)
        (NP (PRP I))
        (VP (VBD got)
          (NP
            (NP (DT a) (JJ bad) (NN back)
              (CC and)
              (NN workmans) ('' ''))
            (SBAR
              (S
                (NP
                  (NP (NN compensation))
                  (CC or)
                  (NP (JJ social) (NN security)))
                (VP (MD wo) (RB n't)
                  (VP (VB allow)
                    (S
                      (NP (PRP me))
                      (VP (TO to)
                        (VP (VB work))))))))))
        ('' '')))
    (. .)))

det(one-2, No-1)
nsubj(said-3, one-2)
root(ROOT-0, said-3)
dep(got-9, Oh-6)
nsubj(got-9, I-8)
ccomp(said-3, got-9)
det(back-12, a-10)
amod(back-12, bad-11)
dobj(got-9, back-12)
dobj(allow-22, back-12)
dobj(got-9, workmans-14)
conj_and(back-12, workmans-14)
dobj(allow-22, workmans-14)
nsubj(allow-22, compensation-16)
amod(security-19, social-18)
conj_or(compensation-16, security-19)
nsubj(allow-22, security-19)
aux(allow-22, wo-20)
neg(allow-22, n't-21)
rcmod(back-12, allow-22)
nsubj(work-25, me-23)
aux(work-25, to-24)
xcomp(allow-22, work-25)

(ROOT
  (S
    (S
      (NP (EX there))
      (VP (VBD was)
        (ADVP (RB never))
        (NP
          (NP (DT a) (NN questino))
          (PP (VBG regarding)
            (NP
              (NP (NN abortion)
                (CC or)
                (NN welfare))
              (CC or)
              (`` ``)
              (S
                (NP (JJ universal) (NNS healthcare'i))
                (ADVP (RB just))
                (VP (MD would)
                  (VP (VB remind)
                    (NP (DT all) (NNPS Americans))
                    (PP (IN that) ('' '')
                      (NP
                        (NP (PRP He))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (MD can)
                              (VP (VB regulate)
                                (NP (DT a) (NN thing))))))))))))))))
    (, ,)
    (VP (VBZ controls)
      (NP (DT that) (NN thing)))
    ('' '') (. .)))

expl(was-2, there-1)
ccomp(controls-28, was-2)
neg(was-2, never-3)
det(questino-5, a-4)
nsubj(was-2, questino-5)
prep_regarding(questino-5, abortion-7)
prep_regarding(questino-5, welfare-9)
conj_or(abortion-7, welfare-9)
amod(healthcare'i-13, universal-12)
nsubj(remind-16, healthcare'i-13)
advmod(remind-16, just-14)
aux(remind-16, would-15)
prep_regarding(questino-5, remind-16)
conj_or(abortion-7, remind-16)
det(Americans-18, all-17)
dobj(remind-16, Americans-18)
prep_that(remind-16, He-21)
nsubj(regulate-24, He-21)
aux(regulate-24, can-23)
rcmod(He-21, regulate-24)
det(thing-26, a-25)
dobj(regulate-24, thing-26)
root(ROOT-0, controls-28)
det(thing-30, that-29)
dobj(controls-28, thing-30)

(ROOT
  (SQ
    (VP (VB Be)
      (ADJP (JJ careful))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP wish)
            (PP (IN for))))))
    (. !)))

cop(careful-2, Be-1)
root(ROOT-0, careful-2)
dep(wish-5, what-3)
nsubj(wish-5, you-4)
ccomp(careful-2, wish-5)
prep(wish-5, for-6)

