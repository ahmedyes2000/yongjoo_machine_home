(ROOT
  (S
    (NP
      (NP (NNP First))
      (PP (IN of)
        (NP
          (NP (DT all))
          (, ,)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBD Mike)
                (SBAR
                  (S
                    (NP (NNP Zermack))
                    (VP (VBP are)
                      (VP (VBG doing)))))))))))
    (VP (VBZ is)
      (VP
        (VP (VBG taking)
          (NP (PRP$ my) (NNS words)))
        (CC and)
        (VP (VBG distorting)
          (NP (PRP them))
          (PP (IN by)
            (S
              (VP (VBG putting)
                (NP (PRP them))
                (PP (IN in)
                  (NP
                    (NP (NNS sentences))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (ADVP (RB never))
                        (VP (VBD had)
                          (NP (PRP them))
                          (PP (IN in)))))))))))))
    (. .)))

nsubj(taking-12, First-1)
nsubj(distorting-16, First-1)
prep_of(First-1, all-3)
dobj(doing-10, all-3)
rel(Mike-7, what-5)
nsubj(Mike-7, you-6)
rcmod(all-3, Mike-7)
nsubj(doing-10, Zermack-8)
aux(doing-10, are-9)
ccomp(Mike-7, doing-10)
aux(taking-12, is-11)
root(ROOT-0, taking-12)
poss(words-14, my-13)
dobj(taking-12, words-14)
conj_and(taking-12, distorting-16)
dobj(distorting-16, them-17)
prepc_by(distorting-16, putting-19)
dobj(putting-19, them-20)
prep_in(putting-19, sentences-22)
nsubj(had-25, I-23)
neg(had-25, never-24)
rcmod(sentences-22, had-25)
dobj(had-25, them-26)
prep(had-25, in-27)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ interesting))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP
            (VP
              (VP (MD should))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (VP (VBG distorting)
                      (NP (NNS things)))))))
            (PRN (-LRB- -LRB-)
              (CC and)
              (VP (VBP am)
                (ADJP (JJ wrong)
                  (PP (IN for)
                    (S
                      (VP (VBG doing)
                        (NP (PRP it))
                        (, ,)
                        (SBAR (RB even) (IN though)
                          (S
                            (NP (PRP I))
                            (VP (VBP 'm) (RB not)))))))))
              (-RRB- -RRB-))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP appear)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (NP
                          (NP (DT a) (NN master))
                          (PP (IN at)
                            (NP (DT that))))))))))))))
    (. .)))

dep(interesting-4, So-1)
nsubj(interesting-4, it-2)
cop(interesting-4, 's-3)
root(ROOT-0, interesting-4)
complm(should-7, that-5)
nsubj(should-7, you-6)
ccomp(interesting-4, should-7)
nsubj(distorting-10, I-8)
aux(distorting-10, am-9)
ccomp(should-7, distorting-10)
dobj(distorting-10, things-11)
dep(wrong-15, and-13)
cop(wrong-15, am-14)
dep(should-7, wrong-15)
prepc_for(wrong-15, doing-17)
dobj(doing-17, it-18)
advmod('m-23, even-20)
dep('m-23, though-21)
nsubj('m-23, I-22)
dep(doing-17, 'm-23)
neg('m-23, not-24)
advmod(appear-28, when-26)
nsubj(appear-28, you-27)
xsubj(master-32, you-27)
advcl(should-7, appear-28)
aux(master-32, to-29)
cop(master-32, be-30)
det(master-32, a-31)
xcomp(appear-28, master-32)
prep_at(master-32, that-34)

(ROOT
  (S
    (NP (PRP He))
    (ADVP (RB further))
    (VP (VBZ ignores)
      (NP
        (NP (DT the) (NN part))
        (PP (IN of)
          (NP
            (NP (DT that) (`` ``) (JJ glorious) ('' '') (NN document))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ gives)
                  (NP (PRP us))
                  (NP
                    (NP (DT the) (NNS words))
                    (PRN (-LRB- -LRB-)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (PRP I))
                          (VP (VBP have) (RB not)
                            (VP (VBN mentioned) (, ,)
                              (ADVP (IN at)
                                (NP (DT any) (NN point))
                                (PP (IN until)
                                  (ADVP (RB now))))))))
                      (-RRB- -RRB-))
                    (SBAR
                      (S (`` ``)
                        (NP (DT all) (NNS men))
                        (VP (VBP are)
                          (VP (VBN created)
                            (S
                              (ADJP (JJ equal)))))
                        ('' '')))))))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ ensures)
              (SBAR
                (S
                  (NP (PRP$ our) (NN government))
                  (VP (MD shall)
                    (VP (`` ``) (VB promote)
                      (NP (DT the) (JJ general) (NN welfare))
                      ('' ''))))))))))
    (. .)))

nsubj(ignores-3, He-1)
advmod(ignores-3, further-2)
root(ROOT-0, ignores-3)
det(part-5, the-4)
dobj(ignores-3, part-5)
nsubj(ensures-38, part-5)
det(document-11, that-7)
amod(document-11, glorious-9)
prep_of(part-5, document-11)
nsubj(gives-13, document-11)
rcmod(document-11, gives-13)
iobj(gives-13, us-14)
det(words-16, the-15)
dobj(gives-13, words-16)
dobj(mentioned-22, which-18)
nsubj(mentioned-22, I-19)
aux(mentioned-22, have-20)
neg(mentioned-22, not-21)
dep(words-16, mentioned-22)
advmod(mentioned-22, at-24)
det(point-26, any-25)
pobj(at-24, point-26)
prep(at-24, until-27)
pcomp(until-27, now-28)
det(men-32, all-31)
nsubjpass(created-34, men-32)
auxpass(created-34, are-33)
rcmod(words-16, created-34)
acomp(created-34, equal-35)
rcmod(part-5, ensures-38)
poss(government-40, our-39)
nsubj(promote-43, government-40)
aux(promote-43, shall-41)
ccomp(ensures-38, promote-43)
det(welfare-46, the-44)
amod(welfare-46, general-45)
dobj(promote-43, welfare-46)

(ROOT
  (S
    (S
      (NP (NNP Mike) (NNP Zermack))
      (VP (VBZ fails)
        (S
          (VP (TO to)
            (VP (VB grasp)
              (SBAR
                (S
                  (VP (VBZ is)
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (DT a) (NN government))
                          (PP (`` ``) (IN of)
                            (NP (DT the) (NNS people))))
                        (, ,)
                        (PP
                          (PP (IN by)
                            (NP (DT the) (NNS people)))
                          (, ,)
                          (CC and)
                          (PP (IN for)
                            (NP
                              (NP (DT the) (NNS people))
                              ('' '')
                              (SBAR
                                (S
                                  (VP (VBZ does) (RB not)
                                    (VP (VB promote)
                                      (NP (JJ individual) (NNS rights)))))))))
                        (, ,)
                        (NP (PRP it))
                        (VP (VBZ promotes)
                          (NP
                            (NP (DT the) (NNS rights))
                            (PP (IN of)
                              (NP (NNP ALL))))))))
                  (NP (DT the) (NNS people)))))))))
    (: ...)
    (S
      (SBAR (IN for)
        (S
          (VP (TO to)
            (VP (VB promote)
              (NP (RB only) (JJ individual) (NNS rights))))))
      (VP (VBZ acknowledges)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP are) (RB not)
              (VP (VBN created)
                (S
                  (ADJP (JJ equal)))))))))
    (. .)))

nn(Zermack-2, Mike-1)
nsubj(fails-3, Zermack-2)
xsubj(grasp-5, Zermack-2)
root(ROOT-0, fails-3)
aux(grasp-5, to-4)
xcomp(fails-3, grasp-5)
ccomp(grasp-5, is-6)
complm(promotes-31, that-7)
det(government-9, a-8)
nsubj(promotes-31, government-9)
nsubj(promotes-31', government-9)
det(people-13, the-12)
prep_of(government-9, people-13)
det(people-17, the-16)
prep_by(promotes-31, people-17)
det(people-22, the-21)
prep_for(promotes-31', people-22)
aux(promote-26, does-24)
neg(promote-26, not-25)
rcmod(people-22, promote-26)
amod(rights-28, individual-27)
dobj(promote-26, rights-28)
nsubj(promotes-31, it-30)
ccomp(is-6, promotes-31)
ccomp(is-6, promotes-31')
conj_and(promotes-31, promotes-31')
det(rights-33, the-32)
dobj(promotes-31, rights-33)
prep_of(rights-33, ALL-35)
det(people-37, the-36)
dep(is-6, people-37)
mark(promote-41, for-39)
aux(promote-41, to-40)
csubj(acknowledges-45, promote-41)
advmod(rights-44, only-42)
amod(rights-44, individual-43)
dobj(promote-41, rights-44)
parataxis(fails-3, acknowledges-45)
complm(created-50, that-46)
nsubjpass(created-50, we-47)
auxpass(created-50, are-48)
neg(created-50, not-49)
ccomp(acknowledges-45, created-50)
acomp(created-50, equal-51)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB do)
          (ADVP (RB so)))))
    (VP (MD would)
      (VP (VB be)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN against)
                (NP
                  (NP (DT the) (JJ very) (NN nature))
                  (PP (IN of)
                    (NP (DT those) (NNS words))))))))))
    (. .)))

aux(do-2, To-1)
csubj(be-5, do-2)
advmod(do-2, so-3)
aux(be-5, would-4)
root(ROOT-0, be-5)
aux(go-7, to-6)
xcomp(be-5, go-7)
det(nature-11, the-9)
amod(nature-11, very-10)
prep_against(go-7, nature-11)
det(words-14, those-13)
prep_of(nature-11, words-14)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP (DT no) (NNS rights))
                  (PP (IN OF)
                    (NP (DT the) (NN individual)))))))
          (, ,)
          (CC but)
          (SBAR (IN that)
            (S
              (NP
                (NP (NN promotion))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNS rights))
                    (PP (IN of)
                      (NP (DT all) (NNS people))))))
              (VP (VBZ is)
                (ADJP (JJ equal))))))))
    (. .)))

nsubj(mean-4, This-1)
aux(mean-4, does-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
complm(are-7, that-5)
expl(are-7, there-6)
ccomp(mean-4, are-7)
det(rights-9, no-8)
nsubj(are-7, rights-9)
det(individual-12, the-11)
prep_of(rights-9, individual-12)
complm(equal-24, that-15)
nsubj(equal-24, promotion-16)
det(rights-19, the-18)
prep_of(promotion-16, rights-19)
det(people-22, all-21)
prep_of(rights-19, people-22)
cop(equal-24, is-23)
ccomp(mean-4, equal-24)
conj_but(are-7, equal-24)

(ROOT
  (S ('' '')
    (PP (IN Of)
      (NP (DT the) (NNS people)))
    (, ,)
    (PP
      (PP (IN by)
        (NP (DT the) (NNS people)))
      (, ,)
      (CC and)
      (PP (IN for)
        (NP (DT the) (NNS people) ('' ''))))
    (VP (VBZ requires)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP work)
            (ADJP (JJ COLLECTIVELY))))))
    (. .)))

det(people-4, the-3)
prep_of(requires-15, people-4)
det(people-8, the-7)
prep_by(requires-15, people-8)
det(people-13, the-12)
prep_for(requires-15', people-13)
root(ROOT-0, requires-15)
conj_and(requires-15, requires-15')
complm(work-18, that-16)
nsubj(work-18, we-17)
ccomp(requires-15, work-18)
acomp(work-18, COLLECTIVELY-19)

(ROOT
  (NP (NN TOGETHER) (. .)))

root(ROOT-0, TOGETHER-1)

(ROOT
  (NP
    (NP (NNS Synonymous))
    (PP (IN for)
      (NP (WP what)))
    (. ?)))

root(ROOT-0, Synonymous-1)
prep_for(Synonymous-1, what-3)

(ROOT
  (FRAG
    (NP (NNP United))
    (. ?)))

root(ROOT-0, United-1)

(ROOT
  (S
    (VP (VB Hmm))
    (. .)))

root(ROOT-0, Hmm-1)

(ROOT
  (S
    (VP (VBG Eeenteresting))
    (. .)))

root(ROOT-0, Eeenteresting-1)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT that))
      (VBG called))
    (. ?)))

attr('s-2, What-1)
root(ROOT-0, 's-2)
nsubj('s-2, that-3)
dep('s-2, called-4)

(ROOT
  (S
    (NP (NNP Ze) (NNPS Germans))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN agreed)
          (PRN (-LRB- -LRB-)
            (S
              (ADVP (RB but)
                (SBAR (IN since)
                  (S
                    (NP
                      (NP (JJS most))
                      (PP (IN of)
                        (NP (DT the) (VBG ruling) (NNS families))))
                    (VP (VBP have)
                      (VP (VBN had)
                        (NP (NNS connections))
                        (PP (TO to)
                          (NP (JJ Nazi) (NN ism))))))))
              (, ,)
              (NP (PRP it))
              (VP (VBZ 's) (RB not)
                (ADJP (JJ surprising))))
            (-RRB- -RRB-)))))
    (. .)))

nn(Germans-2, Ze-1)
nsubj(agreed-5, Germans-2)
aux(agreed-5, would-3)
aux(agreed-5, have-4)
root(ROOT-0, agreed-5)
advmod(surprising-24, but-7)
mark(had-15, since-8)
nsubj(had-15, most-9)
det(families-13, the-11)
amod(families-13, ruling-12)
prep_of(most-9, families-13)
aux(had-15, have-14)
dep(but-7, had-15)
dobj(had-15, connections-16)
amod(ism-19, Nazi-18)
prep_to(had-15, ism-19)
nsubj(surprising-24, it-21)
cop(surprising-24, 's-22)
neg(surprising-24, not-23)
parataxis(agreed-5, surprising-24)

(ROOT
  (S
    (NP
      (NP (JJ Further) (JJR more))
      (, ,)
      (PP (IN by)
        (S
          (VP (VBG allowing)
            (NP
              (NP (DT the) (`` ``) (JJ free) (NN market) ('' ''))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (NN everyone))
                  (VP (VBZ agrees)))))))))
    (VP (VBZ does) (RB not)
      (VP (VB work)
        (NP
          (NP (DT the) (NN way))
          (SBAR
            (S
              (S
                (NP (PRP it))
                (VP
                  (VP (MD should))
                  (PRN (-LRB- -LRB-)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (JJ same) (NN reason))
                        (, ,)
                        (ADVP
                          (ADVP (RB incidentally))
                          (, ,)
                          (SBAR (IN that)
                            (S
                              (NP (NN communism))
                              (VP (MD can)
                                (ADVP (RB never))
                                (VP (VB work))))
                            (: ...)))
                        (NP (NN greed)
                          (CC and)
                          (NN corruption))))
                    (-RRB- -RRB-))
                  (S
                    (VP (TO to)
                      (VP (VB provide)
                        (CC and)
                        (VB promote)
                        (PRN (-LRB- -LRB-)
                          (PP (IN in)
                            (NP (DT a)
                              (ADJP (JJ half-assed) (, ,) (JJ greedy)
                                (CC and)
                                (JJ corrupt))
                              (NN manner)))
                          (-RRB- -RRB-))
                        (S
                          (NP
                            (NP (DT the) (JJ general) (NN welfare))
                            (PP (RB instead) (IN of)
                              (NP
                                (NP (DT the) (NN government))
                                (PRN (-LRB- -LRB-)
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (VP (VBZ Is)
                                        (NP (DT the) (NNS people)))))
                                  (-RRB- -RRB-)))))))))))
              (CC and)
              (S
                (NP
                  (NP (DT the) (NN health))
                  (PP (IN of)
                    (NP (NNP ALL) (NNS people))))
                (VP (VBP suffer))))))))
    (. .)))

amod(more-2, Further-1)
nsubj(work-16, more-2)
prepc_by(more-2, allowing-5)
det(market-9, the-6)
amod(market-9, free-8)
dobj(allowing-5, market-9)
dobj(agrees-13, market-9)
rel(agrees-13, which-11)
nsubj(agrees-13, everyone-12)
rcmod(market-9, agrees-13)
aux(work-16, does-14)
neg(work-16, not-15)
root(ROOT-0, work-16)
det(way-18, the-17)
dobj(work-16, way-18)
nsubj(should-20, it-19)
xsubj(provide-40, it-19)
rcmod(way-18, should-20)
dep(should-20, for-22)
det(reason-25, the-23)
amod(reason-25, same-24)
pobj(for-22, reason-25)
advmod(reason-25, incidentally-27)
dep(work-33, that-29)
nsubj(work-33, communism-30)
aux(work-33, can-31)
neg(work-33, never-32)
ccomp(incidentally-27, work-33)
dep(reason-25, greed-35)
dep(reason-25, corruption-37)
conj_and(greed-35, corruption-37)
aux(provide-40, to-39)
xcomp(should-20, provide-40)
xcomp(should-20, promote-42)
conj_and(provide-40, promote-42)
dep(provide-40, in-44)
det(manner-51, a-45)
amod(manner-51, half-assed-46)
conj_and(half-assed-46, greedy-48)
amod(manner-51, greedy-48)
conj_and(half-assed-46, corrupt-50)
amod(manner-51, corrupt-50)
pobj(in-44, manner-51)
det(welfare-55, the-53)
amod(welfare-55, general-54)
xcomp(should-20, welfare-55)
conj_and(provide-40, welfare-55)
xcomp(provide-40, welfare-55)
det(government-59, the-58)
prep_instead_of(welfare-55, government-59)
nsubj(people-64, which-61)
cop(people-64, Is-62)
det(people-64, the-63)
dep(government-59, people-64)
det(health-68, the-67)
nsubj(suffer-72, health-68)
nn(people-71, ALL-70)
prep_of(health-68, people-71)
rcmod(way-18, suffer-72)
conj_and(should-20, suffer-72)

(ROOT
  (S (IN For)
    (NP
      (NP (DT the) (NN right))
      (PP (IN of)
        (NP (DT this))))
    (VP (VBZ is) (RB then)
      (ADJP (VBN limited)
        (PP (TO to)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP Have)
                  (VP (VBN achieved)
                    (NP (NN excess))
                    (PP (IN in)
                      (NP
                        (NP (PRP$ their) (NN pursuit))
                        (PP (IN of)
                          (NP (NN material) (NN success)))))))))))))
    (. .)))

dep(limited-8, For-1)
det(right-3, the-2)
nsubjpass(limited-8, right-3)
prep_of(right-3, this-5)
auxpass(limited-8, is-6)
advmod(limited-8, then-7)
root(ROOT-0, limited-8)
prep_to(limited-8, those-10)
nsubj(achieved-13, those-10)
aux(achieved-13, Have-12)
rcmod(those-10, achieved-13)
dobj(achieved-13, excess-14)
poss(pursuit-17, their-16)
prep_in(achieved-13, pursuit-17)
nn(success-20, material-19)
prep_of(pursuit-17, success-20)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (S
      (SBAR (RB as) (IN though)
        (S
          (NP
            (NP (NN lack))
            (PP (IN of)
              (NP (NN material) (NN success))))
          (VP (VBZ means)
            (SBAR (IN that)
              (S
                (NP (PRP one))
                (ADVP (RB just))
                (VP (VBZ does) (RB n't)
                  (VP (VB have)
                    (NP (NNS accidents)))))))))
      (VP (VBP happen)))
    (, ,)
    (CC or)
    (S
      (NP (NNS emergencies))
      (VP (VBP occur)))
    (. .)))

advmod(happen-17, Again-1)
advmod(means-9, as-3)
dep(means-9, though-4)
nsubj(means-9, lack-5)
nn(success-8, material-7)
prep_of(lack-5, success-8)
advcl(happen-17, means-9)
csubj(happen-17, means-9)
complm(have-15, that-10)
nsubj(have-15, one-11)
advmod(have-15, just-12)
aux(have-15, does-13)
neg(have-15, n't-14)
ccomp(means-9, have-15)
dobj(have-15, accidents-16)
root(ROOT-0, happen-17)
nsubj(occur-21, emergencies-20)
conj_or(happen-17, occur-21)

(ROOT
  (S
    (PP (IN As)
      (ADVP (RB though)))
    (NP
      (NP (NNS people))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP are)
            (ADJP (JJ poor))))))
    (VP (VBP do) (RB n't)
      (VP (VB work)
        (ADJP (JJ hard))))
    (. .)))

prep(work-9, As-1)
pcomp(As-1, though-2)
nsubj(poor-6, people-3)
nsubj(work-9, people-3)
cop(poor-6, are-5)
rcmod(people-3, poor-6)
aux(work-9, do-7)
neg(work-9, n't-8)
root(ROOT-0, work-9)
acomp(work-9, hard-10)

(ROOT
  (S
    (NP (NNP Because) (NNP THAT))
    (VP (VBZ 's) (RB not)
      (NP (DT a) (NN fallacy)))
    (. .)))

nn(THAT-2, Because-1)
nsubj(fallacy-6, THAT-2)
cop(fallacy-6, 's-3)
neg(fallacy-6, not-4)
det(fallacy-6, a-5)
root(ROOT-0, fallacy-6)

(ROOT
  (SINV
    (S
      (INTJ (RB Now))
      (VP (VB thank)
        (NP
          (NP
            (NP (PRP you))
            (, ,)
            (NP (NNP Mike) (NNP Germack))
            (, ,))
          (PP (IN for)
            (S
              (VP
                (VP (RB not)
                  (ADVP (RB only))
                  (VBG attributing)
                  (PP (TO to)
                    (NP (PRP me)))
                  (NP
                    (NP (NNS things))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBD did) (RB not)
                          (VP (VB say)))))))
                (, ,)
                (CONJP (CC but)
                  (RB also))
                (VP (VBG taking)
                  (NP
                    (NP (NNS things))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBD did))))))))))))
    (VP (VBP say)
      (ADVP
        (ADVP (RB completely) (RB out))
        (PP (IN of)
          (NP (NN context))
          (ADVP
            (ADVP (RB so) (RB badly))
            (RB as))))
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (PRP you))))))
    (NP
      (NP (DT a) (NN LIAR))
      (, ,)
      (CC and)
      (NP
        (NP (DT a) (JJ delusional) (NN one))
        (PP (IN at)
          (NP (DT that)))))
    (. .)))

dep(thank-2, Now-1)
dep(say-26, thank-2)
dobj(thank-2, you-3)
nn(Germack-6, Mike-5)
appos(you-3, Germack-6)
neg(attributing-11, not-9)
advmod(attributing-11, only-10)
prepc_for(you-3, attributing-11)
prep_to(attributing-11, me-13)
dobj(attributing-11, things-14)
dobj(say-18, things-14)
nsubj(say-18, I-15)
aux(say-18, did-16)
neg(say-18, not-17)
rcmod(things-14, say-18)
prepc_for(you-3, taking-22)
conj_and(attributing-11, taking-22)
dobj(taking-22, things-23)
dobj(did-25, things-23)
nsubj(did-25, I-24)
rcmod(things-23, did-25)
root(ROOT-0, say-26)
advmod(say-26, completely-27)
prep_out_of(say-26, context-30)
advmod(badly-32, so-31)
advmod(say-26, badly-32)
advmod(badly-32, as-33)
aux(make-35, to-34)
xcomp(say-26, make-35)
dobj(make-35, you-36)
det(LIAR-38, a-37)
nsubj(say-26, LIAR-38)
det(one-43, a-41)
amod(one-43, delusional-42)
nsubj(say-26, one-43)
conj_and(LIAR-38, one-43)
prep_at(one-43, that-45)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP know)
      (SBAR
        (WHADJP (RB exactly) (WP what))
        (S
          (NP (PRP I))
          (VP
            (VP (VBD meant))
            (: ...)
            (CC but)
            (VP (VBP kudos)
              (ADVP (RB again))
              (PP (IN for)
                (S
                  (VP (VBG being)
                    (NP
                      (NP (DT an) (NN ass))
                      (PP (IN about)
                        (NP (PRP it))))))))))))
    (. .)))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
dep(meant-6, exactly-3)
dep(exactly-3, what-4)
nsubj(meant-6, I-5)
nsubj(kudos-9, I-5)
ccomp(know-2, meant-6)
ccomp(know-2, kudos-9)
conj_but(meant-6, kudos-9)
advmod(kudos-9, again-10)
cop(ass-14, being-12)
det(ass-14, an-13)
prepc_for(kudos-9, ass-14)
prep_about(ass-14, it-16)

(ROOT
  (S
    (S
      (NP (JJ Universalised) (NN health) (NN care))
      (VP (VBZ does) (RB n't)
        (VP (VB mean)
          (SBAR
            (S
              (NP (NNS doctors))
              (VP (MD will)
                (VP (VB be)
                  (VP (RB not)
                    (VP (VB be)
                      (VP (VBN paid)))
                    (, ,)
                    (CC or)
                    (VP (VB be)
                      (VP (VBN paid)
                        (S
                          (ADJP (JJR less)))))))))))))
    (: ...)
    (S
      (NP (PRP it))
      (VP (VBZ means)
        (SBAR (IN that)
          (S
            (NP
              (NP (NN anyone))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ needs)
                    (S
                      (VP (TO to)
                        (VP (VB see)
                          (NP (DT a) (NN doctor)))))))))
            (VP (MD can))))))
    (. .)))

amod(care-3, Universalised-1)
nn(care-3, health-2)
nsubj(mean-6, care-3)
aux(mean-6, does-4)
neg(mean-6, n't-5)
root(ROOT-0, mean-6)
nsubjpass(paid-12, doctors-7)
nsubjpass(paid-16, doctors-7)
aux(paid-12, will-8)
aux(paid-12, be-9)
neg(paid-12, not-10)
auxpass(paid-12, be-11)
ccomp(mean-6, paid-12)
auxpass(paid-16, be-15)
ccomp(mean-6, paid-16)
conj_or(paid-12, paid-16)
acomp(paid-16, less-17)
nsubj(means-20, it-19)
parataxis(mean-6, means-20)
complm(can-29, that-21)
nsubj(needs-24, anyone-22)
nsubj(can-29, anyone-22)
rcmod(anyone-22, needs-24)
aux(see-26, to-25)
xcomp(needs-24, see-26)
det(doctor-28, a-27)
dobj(see-26, doctor-28)
ccomp(means-20, can-29)

(ROOT
  (S (IN So)
    (NP (NNS doctors))
    (VP (MD will) (RB not)
      (VP (VB be)
        (VP (VBN enslaved))))
    (. .)))

dep(enslaved-6, So-1)
nsubjpass(enslaved-6, doctors-2)
aux(enslaved-6, will-3)
neg(enslaved-6, not-4)
auxpass(enslaved-6, be-5)
root(ROOT-0, enslaved-6)

(ROOT
  (FRAG
    (ADVP (RB Hypocrisy))
    (. ?)))

root(ROOT-0, Hypocrisy-1)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP it))
        (VP (VBZ stands))))
    (, ,)
    (NP
      (NP (DT the) (NN wealth))
      (PP (IN of)
        (NP (DT this) (NN country))))
    (VP (VBZ rests)
      (PP (IN in)
        (NP
          (NP (DT the) (NNS hands))
          (PP (IN of)
            (NP
              (NP (DT the)
                (ADJP (RB very) (JJ few)))
              (, ,)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP exert)
                    (NP (PRP$ their) (NN control)
                      (S
                        (VP (TO to)
                          (VP (VB keep)
                            (S
                              (NP (PRP it))
                              (NP (DT a)
                                (ADJP (RB very) (JJ small))
                                (NN group)))))))))))))))
    (. .)))

mark(stands-3, As-1)
nsubj(stands-3, it-2)
advcl(rests-10, stands-3)
det(wealth-6, the-5)
nsubj(rests-10, wealth-6)
det(country-9, this-8)
prep_of(wealth-6, country-9)
root(ROOT-0, rests-10)
det(hands-13, the-12)
prep_in(rests-10, hands-13)
det(few-17, the-15)
advmod(few-17, very-16)
prep_of(hands-13, few-17)
nsubj(exert-20, few-17)
rcmod(few-17, exert-20)
poss(control-22, their-21)
dobj(exert-20, control-22)
aux(keep-24, to-23)
infmod(control-22, keep-24)
nsubj(group-29, it-25)
det(group-29, a-26)
advmod(small-28, very-27)
amod(group-29, small-28)
xcomp(keep-24, group-29)

(ROOT
  (S
    (S
      (NP (NNP THAT))
      (VP (VBZ is)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBD meant))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP know)
        (NP (PRP it))))
    (. .)))

nsubj(is-2, THAT-1)
root(ROOT-0, is-2)
dobj(meant-5, what-3)
nsubj(meant-5, I-4)
ccomp(is-2, meant-5)
nsubj(know-9, you-8)
conj_and(is-2, know-9)
dobj(know-9, it-10)

(ROOT
  (S
    (S
      (NP (PRP You))
      (ADVP (RB also))
      (VP (VBP know)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (ADJP (JJ correct)))))))
    (: ...)
    (CC but)
    (S
      (S
        (VP (TO to)
          (VP (VB do)
            (ADVP (RB so)))))
      (VP (MD would)
        (VP (VB be)
          (S
            (VP (TO to)
              (VP (VB acknowledge)
                (PP (TO to)
                  (NP (PRP you)))
                (NP
                  (NP (JJ small) (NN mind))
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (RB perhaps) (DT the) (NN system))
                        (SBAR
                          (S
                            (NP (PRP we))
                            (VP (VBP 've)
                              (VP (VBN been)
                                (VP (VBG operating)
                                  (PP (IN under))))))))
                      (VP (VBZ does) (RB n't)
                        (VP (VB work)
                          (ADJP (RB so) (JJ hot)))))))))))))
    (. .)))

nsubj(know-3, You-1)
advmod(know-3, also-2)
root(ROOT-0, know-3)
nsubj(correct-6, I-4)
cop(correct-6, 'm-5)
ccomp(know-3, correct-6)
aux(do-10, to-9)
csubj(be-13, do-10)
advmod(do-10, so-11)
aux(be-13, would-12)
conj_but(know-3, be-13)
aux(acknowledge-15, to-14)
xcomp(be-13, acknowledge-15)
prep_to(acknowledge-15, you-17)
amod(mind-19, small-18)
dobj(acknowledge-15, mind-19)
dobj(work-31, mind-19)
complm(work-31, that-20)
advmod(system-23, perhaps-21)
det(system-23, the-22)
prep_under(operating-27, system-23)
nsubj(work-31, system-23)
nsubj(operating-27, we-24)
aux(operating-27, 've-25)
aux(operating-27, been-26)
rcmod(system-23, operating-27)
aux(work-31, does-29)
neg(work-31, n't-30)
dep(mind-19, work-31)
advmod(hot-33, so-32)
acomp(work-31, hot-33)

(ROOT
  (S
    (ADVP (RB Further))
    (ADJP (JJR more))
    (, ,)
    (VP (VBP do) (RB n't)
      (VP (VB be)
        (NP (PDT such) (DT a) (JJ presumptuous) (NN ass))
        (SBAR (IN as)
          (S
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (NNS assumptions))
                  (PP (IN about)
                    (NP (NNP MY))))))
            (VP (VBP view)
              (SBAR (IN because)
                (S
                  (NP (PRP I))
                  (VP (VBP do) (RB n't)
                    (VP (VB think)
                      (NP
                        (NP (NNP Socialism))
                        (SBAR
                          (S
                            (VP
                              (VP (VBZ is)
                                (NP (DT a) (JJ dirty) (NN word)))
                              (: ...)
                              (CC but)
                              (VP (VBZ is)
                                (PP (IN in)
                                  (NP (NN fact)))
                                (NP
                                  (NP (DT a) (JJ necessary) (NN component))
                                  (PP (TO to)
                                    (NP (DT a) (JJ capitalistic) (NN society)))))))))
                      (S
                        (VP (TO to)
                          (VP (VB balance)
                            (PRT (RP out))
                            (NP (DT the) (JJ inescapable) (NN fact))
                            (SBAR (IN that)
                              (S
                                (NP (NN capitalism))
                                (VP (VBZ denies)
                                  (NP
                                    (NP (DT the) (NNS rights))
                                    (PP (IN of)
                                      (NP (DT the) (NNS individuals)))))))))))))))))
        (SBAR
          (SBAR (IN because)
            (S
              (NP (PRP it))
              (VP (VBZ promotes)
                (NP
                  (NP (NN power))
                  (PP (IN above)
                    (NP (JJ individual) (NNS rights)))))))
          (: ;)
          (SBAR (IN because)
            (S
              (NP (NN capitalism))
              (ADVP (RB simply))
              (VP (VBD abuses)
                (SBAR
                  (S
                    (NP (JJ human) (NNS rights))
                    (VP (VBD WHENEVER)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (MD can)
                            (VP (VB get)
                              (PRT (RP away))
                              (PP (IN with)
                                (NP (PRP it))))))))))))))))
    (. .)))

advmod(ass-10, Further-1)
dep(ass-10, more-2)
aux(ass-10, do-4)
neg(ass-10, n't-5)
cop(ass-10, be-6)
predet(ass-10, such-7)
det(ass-10, a-8)
amod(ass-10, presumptuous-9)
root(ROOT-0, ass-10)
mark(view-17, as-11)
aux(make-13, to-12)
csubj(view-17, make-13)
dobj(make-13, assumptions-14)
prep_about(make-13, MY-16)
advcl(ass-10, view-17)
mark(think-22, because-18)
nsubj(think-22, I-19)
aux(think-22, do-20)
neg(think-22, n't-21)
advcl(view-17, think-22)
dobj(think-22, Socialism-23)
cop(word-27, is-24)
det(word-27, a-25)
amod(word-27, dirty-26)
rcmod(Socialism-23, word-27)
cop(component-35, is-30)
prep_in(component-35, fact-32)
det(component-35, a-33)
amod(component-35, necessary-34)
rcmod(Socialism-23, component-35)
conj_but(word-27, component-35)
det(society-39, a-37)
amod(society-39, capitalistic-38)
prep_to(component-35, society-39)
aux(balance-41, to-40)
xcomp(think-22, balance-41)
prt(balance-41, out-42)
det(fact-45, the-43)
amod(fact-45, inescapable-44)
dobj(balance-41, fact-45)
complm(denies-48, that-46)
nsubj(denies-48, capitalism-47)
ccomp(balance-41, denies-48)
det(rights-50, the-49)
dobj(denies-48, rights-50)
det(individuals-53, the-52)
prep_of(rights-50, individuals-53)
mark(promotes-56, because-54)
nsubj(promotes-56, it-55)
dep(ass-10, promotes-56)
dobj(promotes-56, power-57)
amod(rights-60, individual-59)
prep_above(power-57, rights-60)
mark(abuses-65, because-62)
nsubj(abuses-65, capitalism-63)
advmod(abuses-65, simply-64)
dep(promotes-56, abuses-65)
amod(rights-67, human-66)
nsubj(WHENEVER-68, rights-67)
ccomp(abuses-65, WHENEVER-68)
nsubj(get-71, it-69)
aux(get-71, can-70)
ccomp(WHENEVER-68, get-71)
prt(get-71, away-72)
prep_with(get-71, it-74)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (PRP it))
        (VP (VBZ is))))
    (VP (VBP NOT)
      (ADJP (RB perfectly) (JJ functioning)))
    (. .)))

mark(is-3, Because-1)
nsubj(is-3, it-2)
csubj(NOT-4, is-3)
root(ROOT-0, NOT-4)
advmod(functioning-6, perfectly-5)
acomp(NOT-4, functioning-6)

(ROOT
  (FRAG (CC Or)
    (RB maybe)
    (NP
      (NP (PRP you))
      (VP (VBN missed)
        (NP
          (NP (DT the) (NN part))
          (PP (IN of)
            (NP (DT that) (NN post))))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP I))
            (VP (VBD said)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD liked)
                    (PP (IN for)
                      (NP (DT the) (JJS most) (NN part) (NN capitalism)))))))))))
    (. ?)))

dep(maybe-2, Or-1)
root(ROOT-0, maybe-2)
dep(maybe-2, you-3)
partmod(you-3, missed-4)
det(part-6, the-5)
dobj(missed-4, part-6)
det(post-9, that-8)
prep_of(part-6, post-9)
advmod(said-12, where-10)
nsubj(said-12, I-11)
advcl(missed-4, said-12)
nsubj(liked-14, I-13)
ccomp(said-12, liked-14)
det(capitalism-19, the-16)
amod(capitalism-19, most-17)
nn(capitalism-19, part-18)
prep_for(liked-14, capitalism-19)

(ROOT
  (FRAG
    (ADJP (RB Not) (JJ surprising))
    (SBAR (IN since)
      (S
        (NP (PRP you))
        (VP (VBP seem)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ delusional)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN point))
                      (PP (IN of)
                        (S
                          (VP (VBG thinking)
                            (SBAR
                              (S
                                (NP (PRP I))
                                (VP (VBP 've)
                                  (VP (VBD said)
                                    (NP
                                      (NP
                                        (NP (NN anything))
                                        (PP (IN about)
                                          (NP (NN equality))))
                                      (CC and)
                                      (NP
                                        (NP (DT that) (`` ``) (JJ glorious) ('' '') (NN nicety))
                                        (PP (IN of)
                                          (NP (DT all) (NNS men)))))
                                    (S
                                      (VP (VBG being)
                                        (ADJP (JJ equal))))))))))))))))))))
    (. .)))

neg(surprising-2, Not-1)
root(ROOT-0, surprising-2)
mark(seem-5, since-3)
nsubj(seem-5, you-4)
xsubj(delusional-8, you-4)
dep(surprising-2, seem-5)
aux(delusional-8, to-6)
cop(delusional-8, be-7)
xcomp(seem-5, delusional-8)
det(point-11, the-10)
prep_to(delusional-8, point-11)
prepc_of(point-11, thinking-13)
nsubj(said-16, I-14)
aux(said-16, 've-15)
ccomp(thinking-13, said-16)
dobj(said-16, anything-17)
prep_about(anything-17, equality-19)
det(nicety-25, that-21)
amod(nicety-25, glorious-23)
dobj(said-16, nicety-25)
conj_and(anything-17, nicety-25)
det(men-28, all-27)
prep_of(nicety-25, men-28)
cop(equal-30, being-29)
xcomp(said-16, equal-30)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NN way))
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD can)
            (ADVP (RB ever))
            (VP
              (VP (VB move)
                (ADVP (RB forward)))
              (CC and)
              (VP (VB progress)
                (PP (IN towards)
                  (NP (DT the)
                    (ADJP (RBR more) (JJ perfect))
                    (NN union)))))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP
            (VP (VB take)
              (NP
                (NP (NNS parts))
                (PP (IN of)
                  (NP (JJ many) (JJ different) (NNS disciplines)))))
            (CC and)
            (VP (VB combine)
              (NP (PRP them)))))))
    (. .)))

det(way-3, The-1)
amod(way-3, only-2)
dobj(move-7, way-3)
nsubj(is-16, way-3)
xsubj(take-18, way-3)
nsubj(move-7, we-4)
nsubj(progress-10, we-4)
aux(move-7, can-5)
advmod(move-7, ever-6)
rcmod(way-3, move-7)
advmod(move-7, forward-8)
rcmod(way-3, progress-10)
conj_and(move-7, progress-10)
det(union-15, the-12)
advmod(perfect-14, more-13)
amod(union-15, perfect-14)
prep_towards(progress-10, union-15)
root(ROOT-0, is-16)
aux(take-18, to-17)
xcomp(is-16, take-18)
dobj(take-18, parts-19)
amod(disciplines-23, many-21)
amod(disciplines-23, different-22)
prep_of(parts-19, disciplines-23)
xcomp(is-16, combine-25)
conj_and(take-18, combine-25)
dobj(combine-25, them-26)

(ROOT
  (S
    (NP (NN Capitalism))
    (ADVP (RB alone))
    (VP (VBZ does) (RB not)
      (VP (VB work)))
    (. .)))

nsubj(work-5, Capitalism-1)
advmod(work-5, alone-2)
aux(work-5, does-3)
neg(work-5, not-4)
root(ROOT-0, work-5)

(ROOT
  (S
    (NP (NNP Socialism))
    (ADVP (RB alone))
    (VP (VBZ does) (RB not)
      (VP (VB work)))
    (. .)))

nsubj(work-5, Socialism-1)
advmod(work-5, alone-2)
aux(work-5, does-3)
neg(work-5, not-4)
root(ROOT-0, work-5)

(ROOT
  (S
    (VP (VB Hmmm))
    (. .)))

root(ROOT-0, Hmmm-1)

(ROOT
  (S
    (NP (NNP Communism))
    (ADVP (RB alone))
    (VP (VBZ does) (RB not)
      (VP (VB work) (-LRB- -LRB-)
        (PP (IN although))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP think)
              (SBAR
                (S
                  (NP (DT this))
                  (VP (VBZ is)
                    (ADJP (RB mostly) (JJ due)
                      (PP (TO to)
                        (NP (NN size))))))))
            (. .)))))
    (. .)))

nsubj(work-5, Communism-1)
advmod(work-5, alone-2)
aux(work-5, does-3)
neg(work-5, not-4)
root(ROOT-0, work-5)
prep(work-5, although-7)
nsubj(think-9, I-8)
ccomp(work-5, think-9)
nsubj(due-13, this-10)
cop(due-13, is-11)
advmod(due-13, mostly-12)
ccomp(think-9, due-13)
prep_to(due-13, size-15)

(ROOT
  (S
    (NP
      (NP (DT the) (NN size))
      (PP (IN of)
        (NP (DT the) (`` ``) (NN community) ('' ''))))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ prohibits)
            (NP (DT the) (JJ proper) (NN functioning))))))
    (-RRB- -RRB-) (. .)))

det(size-2, the-1)
nsubj(is-8, size-2)
det(community-6, the-4)
prep_of(size-2, community-6)
root(ROOT-0, is-8)
nsubj(prohibits-10, what-9)
ccomp(is-8, prohibits-10)
det(functioning-13, the-11)
amod(functioning-13, proper-12)
dobj(prohibits-10, functioning-13)

(ROOT
  (S
    (S
      (VP (VBG Relying)
        (PP (IN on)
          (NP (CD one) (NN system)))))
    (ADVP (RB alone))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS surest) (NN way))
        (PP (TO to)
          (NP (DT a) (JJ dead) (NN civilization)))))
    (. .)))

csubj(way-9, Relying-1)
num(system-4, one-3)
prep_on(Relying-1, system-4)
advmod(way-9, alone-5)
cop(way-9, is-6)
det(way-9, the-7)
amod(way-9, surest-8)
root(ROOT-0, way-9)
det(civilization-13, a-11)
amod(civilization-13, dead-12)
prep_to(way-9, civilization-13)

(ROOT
  (SBARQ
    (PP
      (ADVP (JJ Second))
      (IN of)
      (NP (DT all)))
    (, ,)
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (PRP I))
      (VP (VB distort)
        (NP (DT the) (JJ glorious) (NN phrase))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBP have)
              (VP (VBN made)
                (NP
                  (NP (DT no) (NN mention))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. ?)))

advmod(distort-8, Second-1)
prep_of(distort-8, all-3)
advmod(distort-8, how-5)
aux(distort-8, can-6)
nsubj(distort-8, I-7)
root(ROOT-0, distort-8)
det(phrase-11, the-9)
amod(phrase-11, glorious-10)
dobj(distort-8, phrase-11)
advmod(made-15, when-12)
nsubj(made-15, I-13)
aux(made-15, have-14)
advcl(distort-8, made-15)
det(mention-17, no-16)
dobj(made-15, mention-17)
prep_of(mention-17, it-19)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (NP (NNP Mike) (NNP Zermack))
      (VP (VBZ is)
        (VP (VBG doing)
          (VP (VBZ is)
            (ADVP (RB firstly))
            (VP (VBG putting)
              (S
                (PP
                  (NP (NNS words))
                  (IN into)
                  (NP (PRP$ my) (NN mouth)))
                (-LRB- -LRB-)
                (NP (CC or))
                (: ...)
                (VP (VBZ keyboard))))))))
    (. ?)))

dobj(doing-5, What-1)
nn(Zermack-3, Mike-2)
nsubj(doing-5, Zermack-3)
aux(doing-5, is-4)
root(ROOT-0, doing-5)
aux(putting-8, is-6)
advmod(putting-8, firstly-7)
dep(doing-5, putting-8)
npadvmod(keyboard-16, words-9)
poss(mouth-12, my-11)
prep_into(keyboard-16, mouth-12)
nsubj(keyboard-16, or-14)
ccomp(putting-8, keyboard-16)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD 'll)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB invent)
                (NP (DT a) (JJ new) (NN term))
                (PP (IN for)
                  (NP (DT that)))
                (, ,)
                (PRN
                  (S
                    (NP (PRP I))
                    (VP (VBP think)))
                  (-RRB- -RRB-))))))))
    (CC and)
    (S
      (NP (DT the) (NN informing))
      (NP (PRP himself)))
    (SBAR (IN that)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (ADJP (JJ wrong)
            (PP (IN about)
              (NP
                (NP (NN something))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP have)
                      (ADVP (RB never))
                      (VP (VBN said)))))))))))
    (. .)))

nsubj(have-3, We-1)
xsubj(invent-5, We-1)
aux(have-3, 'll-2)
root(ROOT-0, have-3)
aux(invent-5, to-4)
xcomp(have-3, invent-5)
det(term-8, a-6)
amod(term-8, new-7)
dobj(invent-5, term-8)
prep_for(invent-5, that-10)
nsubj(think-13, I-12)
parataxis(invent-5, think-13)
det(informing-17, the-16)
dep(himself-18, informing-17)
conj_and(have-3, himself-18)
dep(wrong-22, that-19)
nsubj(wrong-22, I-20)
cop(wrong-22, am-21)
dep(have-3, wrong-22)
prep_about(wrong-22, something-24)
dobj(said-28, something-24)
nsubj(said-28, I-25)
aux(said-28, have-26)
neg(said-28, never-27)
rcmod(something-24, said-28)

(ROOT
  (S
    (NP (NNP Mike) (NNP Zermack))
    (VP (VBZ is)
      (ADVP (RBR further))
      (VP (VBG assuming)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP
                (NP (NN lack))
                (PP (IN of)
                  (NP (NN material) (NN success)))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ leads)
                      (PP (TO to)
                        (NP
                          (NP
                            (NP (DT a) (NN person) (POS 's))
                            (NN illness))
                          (, ,)
                          (NP
                            (NP (JJ poor) (NN health))
                            (, ,)
                            (NP (NNS apendicitis))
                            (, ,)
                            (NP (NN pneumonia))
                            (, ,)
                            (CC or)
                            (NP (DT any) (JJ other) (JJ such) (NN thing))))))))))))))
    (. .)))

nn(Zermack-2, Mike-1)
nsubj(assuming-5, Zermack-2)
aux(assuming-5, is-3)
advmod(assuming-5, further-4)
root(ROOT-0, assuming-5)
complm(lack-9, that-6)
nsubj(lack-9, it-7)
cop(lack-9, is-8)
ccomp(assuming-5, lack-9)
nsubj(leads-14, lack-9)
nn(success-12, material-11)
prep_of(lack-9, success-12)
rcmod(lack-9, leads-14)
det(person-17, a-16)
poss(illness-19, person-17)
prep_to(leads-14, illness-19)
amod(health-22, poor-21)
appos(illness-19, health-22)
appos(illness-19, apendicitis-24)
conj_or(health-22, apendicitis-24)
appos(illness-19, pneumonia-26)
conj_or(health-22, pneumonia-26)
det(thing-32, any-29)
amod(thing-32, other-30)
amod(thing-32, such-31)
appos(illness-19, thing-32)
conj_or(health-22, thing-32)

(ROOT
  (S
    (NP (NNP Mike) (NNP Zermack))
    (ADVP (RB further))
    (VP (VBZ leads)
      (S
        (NP (PRP us))
        (VP (TO to)
          (VP (VB believe)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT a) (NN person) (POS 's))
                  (NN health))
                (VP (VBZ is) (RB not)
                  (NP (PRP$ his) (NN welfare)))))))))
    (. .)))

nn(Zermack-2, Mike-1)
nsubj(leads-4, Zermack-2)
advmod(leads-4, further-3)
root(ROOT-0, leads-4)
nsubj(believe-7, us-5)
aux(believe-7, to-6)
xcomp(leads-4, believe-7)
complm(welfare-16, that-8)
det(person-10, a-9)
poss(health-12, person-10)
nsubj(welfare-16, health-12)
cop(welfare-16, is-13)
neg(welfare-16, not-14)
poss(welfare-16, his-15)
ccomp(believe-7, welfare-16)

