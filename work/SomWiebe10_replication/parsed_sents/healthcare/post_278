(ROOT
  (NP
    (NP (CD 1))
    (NP (DT The) (`` ``) (JJ deep) (NN left) ('' '') (NN fallacy))
    (. .)))

root(ROOT-0, 1-1)
det(fallacy-7, The-2)
amod(fallacy-7, deep-4)
nn(fallacy-7, left-5)
dep(1-1, fallacy-7)

(ROOT
  (S
    (NP
      (NP (DT The) (CD three) (NNS countries))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP smear)
            (PP (IN with)
              (NP (DT this) (NN tag)))))))
    (VP (VBP happen)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP
                (NP (DT the) (JJS closest) (NNS allies))
                (PP (IN of)
                  (NP (DT the) (NNP USA))))
              (CC and)
              (NP
                (NP (DT the) (NNS countries))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP are)
                      (ADJP
                        (ADJP (JJS closest))
                        (PP (IN in)
                          (NP (NN culture))))
                      (PP (TO to)
                        (NP (PRP$ your) (NN country))))))))))))
    (. .)))

det(countries-3, The-1)
num(countries-3, three-2)
dobj(smear-6, countries-3)
nsubj(happen-10, countries-3)
xsubj(allies-15, countries-3)
complm(smear-6, that-4)
nsubj(smear-6, you-5)
dep(countries-3, smear-6)
det(tag-9, this-8)
prep_with(smear-6, tag-9)
root(ROOT-0, happen-10)
aux(allies-15, to-11)
cop(allies-15, be-12)
det(allies-15, the-13)
amod(allies-15, closest-14)
xcomp(happen-10, allies-15)
det(USA-18, the-17)
prep_of(allies-15, USA-18)
det(countries-21, the-20)
xcomp(happen-10, countries-21)
conj_and(allies-15, countries-21)
nsubj(closest-24, countries-21)
cop(closest-24, are-23)
rcmod(countries-21, closest-24)
prep_in(closest-24, culture-26)
poss(country-29, your-28)
prep_to(closest-24, country-29)

(ROOT
  (S
    (NP (DT This) (NN assertion))
    (VP (VBZ is)
      (ADJP (JJ baseless)
        (NP (CD .5)))
      (SBAR
        (S
          (NP (PRP We))
          (DT both)
          (VP (VBP know)
            (CC and)
            (VBP agree))))
      (SBAR (IN that)
        (S
          (NP
            (NP (NNP Australia))
            (, ,)
            (NP (NNP Canada))
            (CC and)
            (NP (DT the) (NNP UK)))
          (VP (VBP have)
            (NP (JJR greater) (NN life) (NNS expectancies))
            (PP (IN than)
              (NP (DT the) (NNP USA)))))))
    (. .)))

det(assertion-2, This-1)
nsubj(baseless-4, assertion-2)
cop(baseless-4, is-3)
root(ROOT-0, baseless-4)
dep(baseless-4, .5-5)
nsubj(know-8, We-6)
nsubj(agree-10, We-6)
dep(know-8, both-7)
ccomp(baseless-4, know-8)
ccomp(baseless-4, agree-10)
conj_and(know-8, agree-10)
complm(have-18, that-11)
nsubj(have-18, Australia-12)
conj_and(Australia-12, Canada-14)
nsubj(have-18, Canada-14)
det(UK-17, the-16)
conj_and(Australia-12, UK-17)
nsubj(have-18, UK-17)
ccomp(baseless-4, have-18)
amod(expectancies-21, greater-19)
nn(expectancies-21, life-20)
dobj(have-18, expectancies-21)
det(USA-24, the-23)
prep_than(have-18, USA-24)

(ROOT
  (S
    (NP
      (NP (CD 6))
      (SBAR
        (S
          (NP (PRP We))
          (DT both)
          (VP
            (VP (VBP know))
            (CC and)
            (VP (VBP agree)
              (SBAR (IN that)
                (S
                  (S
                    (NP
                      (NP (NNP Australia))
                      (, ,)
                      (NP (NNP Canada))
                      (CC and)
                      (NP (DT the) (NNP UK)))
                    (VP (VBP have)
                      (NP (JJ universal) (NN health) (NNS schemes))))
                  (CC and)
                  (S
                    (NP (DT the) (NNP USA))
                    (VP (VBZ does)
                      (NP
                        (NP (RB not) (CD .7))
                        (SBAR
                          (S
                            (NP (PRP We))
                            (ADVP (RB also))
                            (VP (VBP know)
                              (SBAR (IN that)
                                (S
                                  (NP
                                    (NP (DT the) (NN proportion))
                                    (PP (IN of)
                                      (NP (NNP GDP))))
                                  (VP (VBD spent)
                                    (PP (IN on)
                                      (NP (NN health) (NN care)))
                                    (PP (IN in)
                                      (NP (DT these) (CD three) (NNS countries)))))))))))))))))))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJR lower))
        (PP (IN than)
          (NP (DT the) (NNP United) (NNPS States)))))
    (. .)))

nsubj(lower-41, 6-1)
nsubj(know-4, We-2)
nsubj(agree-6, We-2)
dep(know-4, both-3)
rcmod(6-1, know-4)
rcmod(6-1, agree-6)
conj_and(know-4, agree-6)
complm(have-14, that-7)
nsubj(have-14, Australia-8)
conj_and(Australia-8, Canada-10)
nsubj(have-14, Canada-10)
det(UK-13, the-12)
conj_and(Australia-8, UK-13)
nsubj(have-14, UK-13)
ccomp(agree-6, have-14)
amod(schemes-17, universal-15)
nn(schemes-17, health-16)
dobj(have-14, schemes-17)
det(USA-20, the-19)
nsubj(does-21, USA-20)
ccomp(agree-6, does-21)
conj_and(have-14, does-21)
neg(.7-23, not-22)
dobj(does-21, .7-23)
nsubj(know-26, We-24)
advmod(know-26, also-25)
rcmod(.7-23, know-26)
complm(spent-32, that-27)
det(proportion-29, the-28)
nsubj(spent-32, proportion-29)
prep_of(proportion-29, GDP-31)
ccomp(know-26, spent-32)
nn(care-35, health-34)
prep_on(spent-32, care-35)
det(countries-39, these-37)
num(countries-39, three-38)
prep_in(spent-32, countries-39)
cop(lower-41, is-40)
root(ROOT-0, lower-41)
det(States-45, the-43)
nn(States-45, United-44)
prep_than(lower-41, States-45)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP we))
    (VP (VBP disagree)
      (PRT (RP about))
      (SBAR (IN whether)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP
              (NP (DT a) (JJ reliable) (NN comparison) (CD .8))
              (SBAR
                (S
                  (NP (PRP You))
                  (VP (VBP assert)
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (DT the) (NNS differences))
                          (PP (IN in)
                            (NP (NN life) (NN expectancy))))
                        (VP (VBP have) (`` ``)
                          (NP
                            (ADVP (RB probably) ('' ''))
                            (NN nothing))))))))
              (S
                (VP (TO to)
                  (VP (VB do)
                    (PP (IN with)
                      (NP (NN health) (NN care)))))))))))
    (. .)))

advmod(disagree-4, However-1)
nsubj(disagree-4, we-3)
root(ROOT-0, disagree-4)
prt(disagree-4, about-5)
complm(comparison-11, whether-6)
nsubj(comparison-11, this-7)
cop(comparison-11, is-8)
det(comparison-11, a-9)
amod(comparison-11, reliable-10)
ccomp(disagree-4, comparison-11)
num(comparison-11, .8-12)
nsubj(assert-14, You-13)
rcmod(comparison-11, assert-14)
complm(have-21, that-15)
det(differences-17, the-16)
nsubj(have-21, differences-17)
nn(expectancy-20, life-19)
prep_in(differences-17, expectancy-20)
ccomp(assert-14, have-21)
advmod(nothing-25, probably-23)
dobj(have-21, nothing-25)
aux(do-27, to-26)
infmod(comparison-11, do-27)
nn(care-30, health-29)
prep_with(do-27, care-30)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP you))
    (VP (VBP have) (RB not)
      (VP (VBN provided)
        (NP
          (NP (CD one) (NN shred))
          (PP (IN of)
            (NP (NN evidence))))
        (PP (IN for)
          (NP (DT this) (NN claim)))))
    (. .)))

advmod(provided-6, However-1)
nsubj(provided-6, you-3)
aux(provided-6, have-4)
neg(provided-6, not-5)
root(ROOT-0, provided-6)
num(shred-8, one-7)
dobj(provided-6, shred-8)
prep_of(shred-8, evidence-10)
det(claim-13, this-12)
prep_for(provided-6, claim-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN presented)
        (NP
          (NP (NN evidence))
          (PP (IN for)
            (NP (PRP$ my) (NN opinion))))))
    (. .)))

nsubj(presented-3, I-1)
aux(presented-3, have-2)
root(ROOT-0, presented-3)
dobj(presented-3, evidence-4)
poss(opinion-7, my-6)
prep_for(evidence-4, opinion-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (VP (VBN presented)
        (NP
          (NP (DT no) (NN evidence))
          (PP (IN for)
            (NP (NNP yours))))))
    (. .)))

nsubj(presented-3, You-1)
aux(presented-3, have-2)
root(ROOT-0, presented-3)
det(evidence-5, no-4)
dobj(presented-3, evidence-5)
prep_for(evidence-5, yours-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (JJ such) (NNS countries))
        (VP (VBP are)
          (ADJP (`` ``) (RB deep) (JJ left) ('' '')
            (PP (IN in)
              (NP (PRP$ your) (NN view))))
          (ADVP (RB then)))))
    (NP (PRP it))
    (VP (VBZ suggests)
      (SBAR (IN that)
        (S
          (NP (PRP$ your) (NNS views))
          (VP (VBP are)
            (ADJP (RB very) (RB far)
              (PP (TO to)
                (NP (DT the) (JJ right) (CD .2))))
            (SBAR (`` ``)
              (S
                (SBAR (IN If)
                  (S
                    (NP (PRP we))
                    (ADVP (RB already))
                    (VP (VBP spend)
                      (NP
                        (NP (DT a) (JJ large) (NN amount))
                        (PP (IN of)
                          (NP (PRP$ our) (JJ gross) (JJ domestic) (NN product))))
                      (PP (IN on)
                        (NP (NN healthcare)))
                      (, ,)
                      (SBAR
                        (ADVP (RB then))
                        (WHNP (WP what))
                        (S
                          (NP (NN difference))
                          (VP (MD would)))))))
                (NP (PRP it))
                (VP (VBP make)
                  (SBAR (IN if)
                    (S
                      (NP (PRP we))
                      (VP (VBD switched)
                        (PP (TO to)
                          (NP
                            (NP (DT a) (NN system))
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (MD would)
                                  (VP (VB require)
                                    (SBAR (IN that)
                                      (S
                                        (NP (PRP we))
                                        (VP (VBP spend)
                                          (ADJP (RB even) (JJR more)))))))))))))))))))))
    (. ?)))

mark(left-7, If-1)
amod(countries-3, such-2)
nsubj(left-7, countries-3)
cop(left-7, are-4)
advmod(left-7, deep-6)
advcl(suggests-14, left-7)
poss(view-11, your-10)
prep_in(left-7, view-11)
advmod(left-7, then-12)
nsubj(suggests-14, it-13)
root(ROOT-0, suggests-14)
complm(far-20, that-15)
poss(views-17, your-16)
nsubj(far-20, views-17)
cop(far-20, are-18)
advmod(far-20, very-19)
ccomp(suggests-14, far-20)
det(.2-24, the-22)
amod(.2-24, right-23)
prep_to(far-20, .2-24)
mark(spend-29, If-26)
nsubj(spend-29, we-27)
advmod(spend-29, already-28)
advcl(make-46, spend-29)
det(amount-32, a-30)
amod(amount-32, large-31)
dobj(spend-29, amount-32)
poss(product-37, our-34)
amod(product-37, gross-35)
amod(product-37, domestic-36)
prep_of(amount-32, product-37)
prep_on(spend-29, healthcare-39)
advmod(would-44, then-41)
dobj(would-44, what-42)
nsubj(would-44, difference-43)
dep(spend-29, would-44)
nsubj(make-46, it-45)
ccomp(far-20, make-46)
mark(switched-49, if-47)
nsubj(switched-49, we-48)
advcl(make-46, switched-49)
det(system-52, a-51)
prep_to(switched-49, system-52)
nsubj(require-55, system-52)
aux(require-55, would-54)
rcmod(system-52, require-55)
complm(spend-58, that-56)
nsubj(spend-58, we-57)
ccomp(require-55, spend-58)
advmod(more-60, even-59)
acomp(spend-58, more-60)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ fallacious)
        (S
          (VP (TO to)
            (VP (VB assume)
              (SBAR (IN that)
                (S
                  (NP (DT a) (JJ universal) (NN health) (NN care) (NN system))
                  (VP (MD must)
                    (VP (VB be)
                      (ADJP (RBR more) (JJ expensive)
                        (PP (IN than)
                          (NP
                            (NP (DT the) (JJ present) (NNS arrangements))
                            (PP (IN in)
                              (NP (DT the) (NNP USA)))))))))))))))
    (. .)))

nsubj(fallacious-4, It-2)
cop(fallacious-4, is-3)
root(ROOT-0, fallacious-4)
aux(assume-6, to-5)
xcomp(fallacious-4, assume-6)
complm(expensive-16, that-7)
det(system-12, a-8)
amod(system-12, universal-9)
nn(system-12, health-10)
nn(system-12, care-11)
nsubj(expensive-16, system-12)
aux(expensive-16, must-13)
cop(expensive-16, be-14)
advmod(expensive-16, more-15)
ccomp(assume-6, expensive-16)
det(arrangements-20, the-18)
amod(arrangements-20, present-19)
prep_than(expensive-16, arrangements-20)
det(USA-23, the-22)
prep_in(arrangements-20, USA-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN presented)
        (NP
          (NP (NN evidence))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ suggests)
                (SBAR (IN that)
                  (S
                    (NP (JJ universal) (NN health) (NNS schemes))
                    (VP (VBP work)
                      (PRT (RP out))
                      (NP (JJR cheaper)))))))))))
    (. .)))

nsubj(presented-3, I-1)
aux(presented-3, have-2)
root(ROOT-0, presented-3)
dobj(presented-3, evidence-4)
nsubj(suggests-6, evidence-4)
rcmod(evidence-4, suggests-6)
complm(work-11, that-7)
amod(schemes-10, universal-8)
nn(schemes-10, health-9)
nsubj(work-11, schemes-10)
ccomp(suggests-6, work-11)
prt(work-11, out-12)
dobj(work-11, cheaper-13)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP dispute)
        (NP (DT the) (NN evidence))))
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP (DT no) (NN reason)
          (S
            (VP (TO to)
              (VP (VB assume)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN opposite))
                    (VP (VBZ is)
                      (ADJP (JJ true)
                        (NP (CD .3)))
                      (SBAR
                        (S
                          (NP (DT The) (NNP GDP))
                          (VP (VBZ is)
                            (NP (DT a) (JJ standard) (NN measure))))))))))))))
    (. .)))

nsubj(dispute-2, You-1)
root(ROOT-0, dispute-2)
det(evidence-4, the-3)
dobj(dispute-2, evidence-4)
nsubj(reason-9, that-6)
cop(reason-9, 's-7)
det(reason-9, no-8)
conj_but(dispute-2, reason-9)
aux(assume-11, to-10)
infmod(reason-9, assume-11)
complm(true-16, that-12)
det(opposite-14, the-13)
nsubj(true-16, opposite-14)
cop(true-16, is-15)
ccomp(assume-11, true-16)
dep(true-16, .3-17)
det(GDP-19, The-18)
nsubj(measure-23, GDP-19)
cop(measure-23, is-20)
det(measure-23, a-21)
amod(measure-23, standard-22)
ccomp(true-16, measure-23)

(ROOT
  (S
    (NP
      (NP
        (NP
          (NP (NNP See))
          (ADJP (JJ http:\/\/en.wikipedia.org\/wiki\/Gross_domestic_product)
            (NP (CD 4))))
        ('' '')
        (PRN (-LRB- -LRB-)
          (NP (NNP T))
          (-RRB- -RRB-))
        (NP
          (ADJP
            (NP (PRP he))
            (JJ 2-year))
          (NN difference)))
      (PRN (-LRB- -LRB-)
        (PP (IN in)
          (NP (NN life) (NN expectancy)))
        (-RRB- -RRB-)))
    (ADVP (RB probably))
    (VP (VBZ has)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NN healthcare))))))))
    (. .)))

nsubj(has-17, See-1)
amod(See-1, http:\/\/en.wikipedia.org\/wiki\/Gross_domestic_product-2)
dep(http:\/\/en.wikipedia.org\/wiki\/Gross_domestic_product-2, 4-3)
appos(See-1, T-6)
npadvmod(2-year-9, he-8)
amod(difference-10, 2-year-9)
dep(See-1, difference-10)
dep(See-1, in-12)
nn(expectancy-14, life-13)
pobj(in-12, expectancy-14)
advmod(has-17, probably-16)
root(ROOT-0, has-17)
dobj(has-17, nothing-18)
aux(do-20, to-19)
infmod(nothing-18, do-20)
prep_with(do-20, healthcare-22)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT a) (NN guess)))
    (. .)))

nsubj(guess-5, This-2)
cop(guess-5, is-3)
det(guess-5, a-4)
root(ROOT-0, guess-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB present)
        (NP (NN evidence))))
    (. .)))

nsubj(present-4, You-1)
aux(present-4, do-2)
neg(present-4, n't-3)
root(ROOT-0, present-4)
dobj(present-4, evidence-5)

