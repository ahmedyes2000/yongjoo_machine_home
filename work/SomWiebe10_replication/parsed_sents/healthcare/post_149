(ROOT
  (S
    (NP (NNP Universal) (NN health) (NN care))
    (VP (VBZ leads)
      (S
        (VP (TO to)
          (VP (VB rationing)))))
    (. .)))

nn(care-3, Universal-1)
nn(care-3, health-2)
nsubj(leads-4, care-3)
xsubj(rationing-6, care-3)
root(ROOT-0, leads-4)
aux(rationing-6, to-5)
xcomp(leads-4, rationing-6)

(ROOT
  (S
    (NP (NNP Medical) (NNS resources))
    (VP (VBP are)
      (VP (VBN rationed)
        (PP (IN in)
          (NP (JJ socialized) (NNS systems)))
        (SBAR (RB so) (IN that)
          (S
            (NP (DT some) (NNS people))
            (VP
              (VP (VBP are) (RB either)
                (VP (VBN denied)
                  (NP (NN care))))
              (CC or)
              (VP (VBP have)
                (S
                  (VP (TO to)
                    (VP (VB wait)
                      (PP (IN for)
                        (NP (PRP it))))))))))))
    (. .)))

nn(resources-2, Medical-1)
nsubjpass(rationed-4, resources-2)
auxpass(rationed-4, are-3)
root(ROOT-0, rationed-4)
amod(systems-7, socialized-6)
prep_in(rationed-4, systems-7)
advmod(denied-14, so-8)
dep(denied-14, that-9)
det(people-11, some-10)
nsubjpass(denied-14, people-11)
nsubj(have-17, people-11)
xsubj(wait-19, people-11)
auxpass(denied-14, are-12)
advmod(denied-14, either-13)
advcl(rationed-4, denied-14)
ccomp(rationed-4, denied-14)
dobj(denied-14, care-15)
advcl(rationed-4, have-17)
ccomp(rationed-4, have-17)
conj_or(denied-14, have-17)
aux(wait-19, to-18)
xcomp(have-17, wait-19)
prep_for(wait-19, it-21)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN person))
        (VP (VBZ is) (`` ``)
          (VP (VBN rationed)
            (PRT (RP out))
            ('' '')
            (PP (IN of)
              (NP (DT the) (JJ public) (NN health) (NN care) (NN service)))))))
    (PRN (-LRB- -LRB-)
      (SBAR
        (ADVP (RB perhaps))
        (IN because)
        (S
          (NP (DT the) (NN treatment))
          (VP (VBZ is) (RB not)
            (VP (VBN considered)
              (NP
                (ADJP (JJ effective)
                  (CC or)
                  (NN cost) (JJ effective))
                (NN enough))
              (PP (TO to)
                (NP (NN warrant) (NN intervention)))))))
      (-RRB- -RRB-))
    (NP (PRP they))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ able))
        (S
          (VP (VB seek)
            (NP (JJ alternative) (NN treatment))
            (PP (IN in)
              (NP (DT the) (JJ private) (NN sector)))))))
    (. .)))

mark(rationed-6, If-1)
det(person-3, a-2)
nsubjpass(rationed-6, person-3)
auxpass(rationed-6, is-4)
advcl(able-35, rationed-6)
prt(rationed-6, out-7)
det(service-14, the-10)
amod(service-14, public-11)
nn(service-14, health-12)
nn(service-14, care-13)
prep_of(rationed-6, service-14)
advmod(considered-22, perhaps-16)
dep(considered-22, because-17)
det(treatment-19, the-18)
nsubjpass(considered-22, treatment-19)
auxpass(considered-22, is-20)
neg(considered-22, not-21)
parataxis(able-35, considered-22)
dep(effective-26, effective-23)
conj_or(effective-26, cost-25)
amod(enough-27, cost-25)
amod(enough-27, effective-26)
dobj(considered-22, enough-27)
nn(intervention-30, warrant-29)
prep_to(considered-22, intervention-30)
nsubj(able-35, they-32)
aux(able-35, will-33)
cop(able-35, be-34)
root(ROOT-0, able-35)
ccomp(able-35, seek-36)
amod(treatment-38, alternative-37)
dobj(seek-36, treatment-38)
det(sector-42, the-40)
amod(sector-42, private-41)
prep_in(seek-36, sector-42)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (MD can) (RB not)
          (VP (VB afford)
            (NP (JJ private) (NN care))))))
    (, ,)
    (NP (PRP they))
    (VP (MD may)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN without)))))))
    (. .)))

mark(afford-5, If-1)
nsubj(afford-5, they-2)
aux(afford-5, can-3)
neg(afford-5, not-4)
advcl(have-11, afford-5)
amod(care-7, private-6)
dobj(afford-5, care-7)
nsubj(have-11, they-9)
xsubj(go-13, they-9)
aux(have-11, may-10)
root(ROOT-0, have-11)
aux(go-13, to-12)
xcomp(have-11, go-13)
prep(go-13, without-14)

