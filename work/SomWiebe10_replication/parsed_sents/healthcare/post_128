(ROOT
  (S
    (NP (NNP Universal) (NN health) (NN care))
    (VP (MD will)
      (VP (VB have)
        (NP
          (NP (NNS rules))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VB decrease)
                (NP (JJ patient) (NN flexibility) ('' ''))
                (SBAR
                  (SINV (MD Should)
                    (NP (DT the) (NN Government))
                    (VP (VB Provide)
                      (NP
                        (NP (NNP Free) (NNP Universal) (NNP Health) (NNP Care))
                        (PP (IN for)
                          (NP (DT All) (NNPS Americans)))))))))))))
    (. ?)))

nn(care-3, Universal-1)
nn(care-3, health-2)
nsubj(have-5, care-3)
aux(have-5, will-4)
root(ROOT-0, have-5)
dobj(have-5, rules-6)
nsubj(decrease-8, rules-6)
rcmod(rules-6, decrease-8)
amod(flexibility-10, patient-9)
dobj(decrease-8, flexibility-10)
aux(Provide-15, Should-12)
det(Government-14, the-13)
nsubj(Provide-15, Government-14)
advcl(decrease-8, Provide-15)
nn(Care-19, Free-16)
nn(Care-19, Universal-17)
nn(Care-19, Health-18)
dobj(Provide-15, Care-19)
det(Americans-22, All-21)
prep_for(Care-19, Americans-22)

(ROOT
  (S ('' '')
    (NP (NNP Balanced) (JJ Politics.org) (`` ``) (JJ Government-controlled) (NN health) (NN care))
    (VP (MD would)
      (VP (VB lead)
        (PP (TO to)
          (NP
            (NP (DT a) (NN decrease))
            (PP (IN in)
              (NP (JJ patient) (NN flexibility)))))))
    (. .)))

nn(care-7, Balanced-2)
amod(care-7, Politics.org-3)
amod(care-7, Government-controlled-5)
nn(care-7, health-6)
nsubj(lead-9, care-7)
aux(lead-9, would-8)
root(ROOT-0, lead-9)
det(decrease-12, a-11)
prep_to(lead-9, decrease-12)
amod(flexibility-15, patient-14)
prep_in(decrease-12, flexibility-15)

(ROOT
  (S
    (PP (IN At)
      (NP (JJ first) (NN glance)))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB appear)
        (SBAR
          (S
            (NP (JJ universal) (NN health) (NN care))
            (VP (MD would)
              (VP (VB increase)
                (NP (NN flexibility))))))))
    (. .)))

amod(glance-3, first-2)
prep_at(appear-7, glance-3)
nsubj(appear-7, it-5)
aux(appear-7, would-6)
root(ROOT-0, appear-7)
amod(care-10, universal-8)
nn(care-10, health-9)
nsubj(increase-12, care-10)
aux(increase-12, would-11)
ccomp(appear-7, increase-12)
dobj(increase-12, flexibility-13)

(ROOT
  (S
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (NN government))
        (VP (VBD paid)
          (PP (IN for)
            (NP (NN everything)))
          (PP (IN under)
            (NP (CD one) (NN plan))))))
    (, ,)
    (NP (PRP you))
    (VP (MD could)
      (PP (IN in)
        (NP (NN theory)))
      (VP (VB go)
        (PP (TO to)
          (NP (DT any) (NN doctor)))))
    (. .)))

prep_after(go-17, all-2)
mark(paid-6, if-4)
nsubj(paid-6, government-5)
advcl(go-17, paid-6)
prep_for(paid-6, everything-8)
num(plan-11, one-10)
prep_under(paid-6, plan-11)
nsubj(go-17, you-13)
aux(go-17, could-14)
prep_in(go-17, theory-16)
root(ROOT-0, go-17)
det(doctor-20, any-19)
prep_to(go-17, doctor-20)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT some) (NNS controls))
    (VP (VBP are)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN put)
                      (PRT (RP in))
                      (S
                        (VP (TO to)
                          (VP (VB keep)
                            (NP (NNS costs))
                            (PP (IN from)
                              (NP (VBG exploding)))))))))))))))
    (. .)))

advmod(going-6, However-1)
det(controls-4, some-3)
nsubj(going-6, controls-4)
xsubj(have-8, controls-4)
aux(going-6, are-5)
root(ROOT-0, going-6)
aux(have-8, to-7)
xcomp(going-6, have-8)
aux(put-11, to-9)
auxpass(put-11, be-10)
xcomp(have-8, put-11)
prt(put-11, in-12)
aux(keep-14, to-13)
xcomp(put-11, keep-14)
dobj(keep-14, costs-15)
prep_from(keep-14, exploding-17)

(ROOT
  (SQ
    (PP (IN For)
      (NP (NN example)))
    (, ,) (MD would)
    (NP
      (NP (`` ``) (JJ elective) ('' '') (NNS surgeries))
      (PP (JJ such) (IN as)
        (NP
          (NP (NN breast) (NNS implants))
          (, ,)
          (NP (NN wart) (NN removal))
          (, ,)
          (NP (NN hair) (NN restoration))
          (, ,)
          (CC and)
          (NP (NN lasik) (NN eye) (NN surgery)))))
    (VP (VB be)
      (VP (VBN covered)))
    (. ?)))

prep_for(covered-25, example-2)
aux(covered-25, would-4)
amod(surgeries-8, elective-6)
nsubjpass(covered-25, surgeries-8)
nn(implants-12, breast-11)
prep_such_as(surgeries-8, implants-12)
nn(removal-15, wart-14)
prep_such_as(surgeries-8, removal-15)
conj_and(implants-12, removal-15)
nn(restoration-18, hair-17)
prep_such_as(surgeries-8, restoration-18)
conj_and(implants-12, restoration-18)
nn(surgery-23, lasik-21)
nn(surgery-23, eye-22)
prep_such_as(surgeries-8, surgery-23)
conj_and(implants-12, surgery-23)
auxpass(covered-25, be-24)
root(ROOT-0, covered-25)

(ROOT
  (S
    (NP (NNP -RRB-) (NNP The))
    (VP (VBZ compromises)
      (SBAR (IN that)
        (S
          (NP (NN result))
          (VP (MD will)
            (VP (VB put)
              (PP (IN in)
                (NP
                  (NP (NNS controls))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP limit)
                        (NP (JJ patient) (NNS options))))))))))))
    (. .)))

nsubj(compromises-3, The-2)
root(ROOT-0, compromises-3)
complm(put-7, that-4)
nsubj(put-7, result-5)
aux(put-7, will-6)
ccomp(compromises-3, put-7)
prep_in(put-7, controls-9)
nsubj(limit-11, controls-9)
rcmod(controls-9, limit-11)
amod(options-13, patient-12)
dobj(limit-11, options-13)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ universal) (NN system))
      (PP (IN in)
        (NP (NNP Canada))))
    (VP (VBZ forces)
      (S
        (NP (NNS patients))
        (VP (TO to)
          (VP (VB wait)
            (PRT (RP over))
            (NP
              (NP (CD 6) (NNS months))
              (PP (IN for)
                (NP (DT a) (JJ routine) (NN pap) (NN smear))))))))
    (. .)))

det(system-3, The-1)
amod(system-3, universal-2)
nsubj(forces-6, system-3)
prep_in(system-3, Canada-5)
root(ROOT-0, forces-6)
nsubj(wait-9, patients-7)
aux(wait-9, to-8)
xcomp(forces-6, wait-9)
prt(wait-9, over-10)
num(months-12, 6-11)
dobj(wait-9, months-12)
det(smear-17, a-14)
amod(smear-17, routine-15)
nn(smear-17, pap-16)
prep_for(months-12, smear-17)

(ROOT
  (S
    (NP (NNP Canada) (NNS residents))
    (VP (MD will)
      (ADVP (RB often))
      (VP
        (VP (VB go)
          (PP (TO to)
            (NP (DT the) (NNP U.S.))))
        (CC or)
        (VP (VB offer)
          (NP (JJ additional) (NN money))
          (S
            (VP (TO to)
              (VP (VB get)
                (NP
                  (NP (PRP$ their) (NN health) (NN care) (NNS needs))
                  (VP (VBN taken)
                    (NP (VB care) (IN of))))))))))
    (. .)))

nn(residents-2, Canada-1)
nsubj(go-5, residents-2)
nsubj(offer-10, residents-2)
aux(go-5, will-3)
advmod(go-5, often-4)
root(ROOT-0, go-5)
det(U.S.-8, the-7)
prep_to(go-5, U.S.-8)
conj_or(go-5, offer-10)
amod(money-12, additional-11)
dobj(offer-10, money-12)
aux(get-14, to-13)
xcomp(offer-10, get-14)
poss(needs-18, their-15)
nn(needs-18, health-16)
nn(needs-18, care-17)
dobj(get-14, needs-18)
partmod(needs-18, taken-19)
dep(of-21, care-20)
dobj(taken-19, of-21)

