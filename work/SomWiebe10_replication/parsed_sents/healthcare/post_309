(ROOT
  (S
    (NP (CD 22,000) (NNS people))
    (VP (VBP die)
      (NP (DT a) (NN year)))
    (. ?)))

num(people-2, 22,000-1)
nsubj(die-3, people-2)
root(ROOT-0, die-3)
det(year-5, a-4)
tmod(die-3, year-5)

(ROOT
  (FRAG
    (ADVP (RB Really))
    (. ?)))

root(ROOT-0, Really-1)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD will)
      (VP (VB steal)
        (NP
          (NP (PRP$ my) (NN freedom))
          (CONJP (RB as) (RB well) (IN as))
          (NP (PRP$ my) (NNS rights)))))
    (. .)))

nsubj(steal-3, They-1)
aux(steal-3, will-2)
root(ROOT-0, steal-3)
poss(freedom-5, my-4)
dobj(steal-3, freedom-5)
poss(rights-10, my-9)
dobj(steal-3, rights-10)
conj_and(freedom-5, rights-10)

(ROOT
  (S ('' '')
    (PP
      (NP (NNP PS))
      (IN With)
      (NP (DT a) (JJ public) (NN option)))
    (, ,)
    (NP
      (NP (DT the) (JJ rich) (NN population))
      (PP (IN of)
        (NP (NNP America))))
    (VP (MD could)
      (ADVP (RB still))
      (VP (VB get)
        (NP (PRP$ their) (JJ pampered) (, ,) (JJ expensive) (NN health) (NN care))
        (SBAR (IN while)
          (S
            (NP
              (NP (DT the) (NN rest))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN population))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBZ is) (RB not)
                        (ADJP (RB so) (JJ fortunate))))))))
            (VP (MD could)
              (VP (VB receive)
                (NP (DT a) (JJ free) (NN option))))))))
    (. .)))

dep(get-15, PS-2)
det(option-6, a-4)
amod(option-6, public-5)
prep_with(get-15, option-6)
det(population-10, the-8)
amod(population-10, rich-9)
nsubj(get-15, population-10)
prep_of(population-10, America-12)
aux(get-15, could-13)
advmod(get-15, still-14)
root(ROOT-0, get-15)
poss(care-21, their-16)
amod(care-21, pampered-17)
amod(care-21, expensive-19)
nn(care-21, health-20)
dobj(get-15, care-21)
mark(receive-34, while-22)
det(rest-24, the-23)
nsubj(receive-34, rest-24)
det(population-27, the-26)
prep_of(rest-24, population-27)
nsubj(fortunate-32, population-27)
cop(fortunate-32, is-29)
neg(fortunate-32, not-30)
advmod(fortunate-32, so-31)
rcmod(population-27, fortunate-32)
aux(receive-34, could-33)
advcl(get-15, receive-34)
det(option-37, a-35)
amod(option-37, free-36)
dobj(receive-34, option-37)

(ROOT
  (S ('' '')
    (NP (NN Nothing))
    (VP (VBZ costs)
      (NP (NN nothing)))
    (. .)))

nsubj(costs-3, Nothing-2)
root(ROOT-0, costs-3)
dobj(costs-3, nothing-4)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ rich) (NN population))
      (PP (IN of)
        (NP (NNP America))))
    (VP (MD will)
      (VP (VB be)
        (VP (VBG paying)
          (PP (IN for)
            (NP
              (NP (DT the) (NN rest))
              (PP (IN of)
                (NP (DT the) (NN population))))))))
    (. .)))

det(population-3, The-1)
amod(population-3, rich-2)
nsubj(paying-8, population-3)
prep_of(population-3, America-5)
aux(paying-8, will-6)
aux(paying-8, be-7)
root(ROOT-0, paying-8)
det(rest-11, the-10)
prep_for(paying-8, rest-11)
det(population-14, the-13)
prep_of(rest-11, population-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD were)
          (ADJP (JJ rich)))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB move)
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NN country)))))
    (. .)))

mark(rich-4, If-1)
nsubj(rich-4, I-2)
cop(rich-4, were-3)
advcl(move-8, rich-4)
nsubj(move-8, I-6)
aux(move-8, would-7)
root(ROOT-0, move-8)
det(country-12, the-11)
prep_out_of(move-8, country-12)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (DT the) (NNP US))
    (VP (MD will)
      (VP (VB copy)
        (NP (NNP California))))
    (. ...)))

advmod(copy-5, Perhaps-1)
det(US-3, the-2)
nsubj(copy-5, US-3)
aux(copy-5, will-4)
root(ROOT-0, copy-5)
dobj(copy-5, California-6)

(ROOT
  (S
    (PP (IN As) (IN for)
      (NP
        (NP (PRP$ your) (NNS comments))
        (VP (VBG comparing)
          (NP (DT the) (NN police))
          (PP (IN with)
            (NP (NN health) (NN coverage))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN difference))
        (PP (IN between)
          (NP
            (NP (NN protection))
            (PP (IN from)
              (NP (NNS others)
                (CC and)
                (NN protection)))))
        (PP (IN from)
          (NP
            (NP (NN death))
            (PP (IN by)
              (NP (JJ natural) (NNS causes)))))))
    (. .)))

poss(comments-4, your-3)
prep_as_for(is-13, comments-4)
partmod(comments-4, comparing-5)
det(police-7, the-6)
dobj(comparing-5, police-7)
nn(coverage-10, health-9)
prep_with(comparing-5, coverage-10)
expl(is-13, there-12)
root(ROOT-0, is-13)
det(difference-15, a-14)
nsubj(is-13, difference-15)
prep_between(difference-15, protection-17)
prep_from(protection-17, others-19)
prep_from(protection-17, protection-21)
conj_and(others-19, protection-21)
prep_from(difference-15, death-23)
amod(causes-26, natural-25)
prep_by(death-23, causes-26)

(ROOT
  (S
    (NP (DT These))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN compared))))
    (. .)))

nsubjpass(compared-5, These-1)
aux(compared-5, can-2)
neg(compared-5, not-3)
auxpass(compared-5, be-4)
root(ROOT-0, compared-5)

(ROOT
  (SQ (VBZ Is)
    (NP
      (NP (DT the) (NN goal))
      (PP (IN for)
        (NP (DT this) (NN figure))))
    (VP (VBG supposed)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (CD 0))))))
    (. ?)))

aux(supposed-7, Is-1)
det(goal-3, the-2)
nsubj(supposed-7, goal-3)
xsubj(0-10, goal-3)
det(figure-6, this-5)
prep_for(goal-3, figure-6)
root(ROOT-0, supposed-7)
aux(0-10, to-8)
cop(0-10, be-9)
xcomp(supposed-7, 0-10)

(ROOT
  (FRAG
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (MD ca) (RB n't)
          (VP (VB afford)
            (S
              (NP (PRP it))
              (ADVP (RB then))
              (ADJP (RB too) (JJ bad)))))))
    (. .)))

mark(afford-5, If-1)
nsubj(afford-5, he-2)
aux(afford-5, ca-3)
neg(afford-5, n't-4)
root(ROOT-0, afford-5)
dep(bad-9, it-6)
advmod(bad-9, then-7)
advmod(bad-9, too-8)
dep(afford-5, bad-9)

(ROOT
  (S (-LRB- -LRB-)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (NN health) (NN care))
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (MD ca) (RB n't)
              (VP (VB afford)
                (NP (PRP it))))))))
    (. .)))

nsubj(have-5, I-2)
aux(have-5, do-3)
neg(have-5, n't-4)
root(ROOT-0, have-5)
nn(care-7, health-6)
dobj(have-5, care-7)
mark(afford-12, because-8)
nsubj(afford-12, I-9)
aux(afford-12, ca-10)
neg(afford-12, n't-11)
advcl(have-5, afford-12)
dobj(afford-12, it-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can) (RB not)
      (VP (VB use)
        (SBAR (IN that) (`` ``)
          (S
            (S (CC but)
              (NP (PRP you))
              (VP (VBP 're)
                (ADJP (JJ rich)))
              ('' ''))
            (VP (VBZ argument))))))
    (. .) (-RRB- -RRB-)))

nsubj(use-4, You-1)
aux(use-4, can-2)
neg(use-4, not-3)
root(ROOT-0, use-4)
complm(argument-12, that-5)
cc(rich-10, but-7)
nsubj(rich-10, you-8)
cop(rich-10, 're-9)
csubj(argument-12, rich-10)
ccomp(use-4, argument-12)

(ROOT
  (S
    (S
      (VP (VBG Forcing)
        (S
          (NP (NN someone) (RB else))
          (VP (TO to)
            (VP (VB pay)
              (S
                (NP (NN someone) (RB else))
                (VP (TO to)
                  (VP (VB take)
                    (NP
                      (NP (NN care))
                      (PP (IN of)
                        (NP (PRP you))))))))))))
    (VP (VBZ is) (RB not)
      (NP (DT a) (NN right)))
    (. .)))

csubj(right-16, Forcing-1)
nsubj(pay-5, someone-2)
advmod(someone-2, else-3)
aux(pay-5, to-4)
xcomp(Forcing-1, pay-5)
nsubj(take-9, someone-6)
advmod(someone-6, else-7)
aux(take-9, to-8)
xcomp(pay-5, take-9)
dobj(take-9, care-10)
prep_of(care-10, you-12)
cop(right-16, is-13)
neg(right-16, not-14)
det(right-16, a-15)
root(ROOT-0, right-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP disagree)
            (PP (`` ``) (IN with)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP (DT the) (RBS most) (JJ basic) (NNS declarations))
                    (PP (IN of)
                      (NP (JJ human) (NNS rights)))))))))))
    (. .)))

nsubj(suppose-2, I-1)
root(ROOT-0, suppose-2)
nsubj(disagree-4, I-3)
ccomp(suppose-2, disagree-4)
prep_with(disagree-4, one-7)
det(declarations-12, the-9)
advmod(declarations-12, most-10)
amod(declarations-12, basic-11)
prep_of(one-7, declarations-12)
amod(rights-15, human-14)
prep_of(declarations-12, rights-15)

(ROOT
  (S ('' '')
    (NP (RB Does) (WDT that))
    (VP (VBP mean)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG going)
              (S
                (VP (TO to)
                  (VP (VB steal)
                    (NP (PRP$ my) (NN money))
                    (PP (IN through)
                      (NP (NNS taxes)))))))))))
    (. ?)))

advmod(that-3, Does-2)
nsubj(mean-4, that-3)
root(ROOT-0, mean-4)
nsubj(going-7, you-5)
xsubj(steal-9, you-5)
aux(going-7, are-6)
ccomp(mean-4, going-7)
aux(steal-9, to-8)
xcomp(going-7, steal-9)
poss(money-11, my-10)
dobj(steal-9, money-11)
prep_through(steal-9, taxes-13)

(ROOT
  (S
    (PP (IN In)
      (NP (NN case)))
    (NP (PRP you))
    (VP (VBD were)
      (SBAR
        (S
          (S
            (ADJP (JJ unaware)))
          (, ,)
          (NP
            (NP (DT the) (NN definition))
            (PP (IN of)
              (S
                (VP (TO to)
                  (VP (VB steal))))))
          (VP (VBZ is))))
      ('' '')
      (S
        (VP (TO To)
          (VP (VB take)
            (PRN (-LRB- -LRB-)
              (NP
                (NP (DT the) (NN property))
                (PP (IN of)
                  (NP (DT another))))
              (-RRB- -RRB-)))))
      (PP (IN without)
        (NP (NN right)
          (CC or)
          (NN permission))))
    (. .)))

prep_in(were-4, case-2)
nsubj(were-4, you-3)
xsubj(take-15, you-3)
root(ROOT-0, were-4)
ccomp(is-12, unaware-5)
det(definition-8, the-7)
nsubj(is-12, definition-8)
aux(steal-11, to-10)
prepc_of(definition-8, steal-11)
ccomp(were-4, is-12)
aux(take-15, To-14)
xcomp(were-4, take-15)
det(property-18, the-17)
dep(take-15, property-18)
prep_of(property-18, another-20)
prep_without(were-4, right-23)
prep_without(were-4, permission-25)
conj_or(right-23, permission-25)

(ROOT
  (S ('' '')
    (NP (-LRB- -LRB-) (NNP http:\/\/education.yahoo.com\/reference\/dictionary\/entry\/steal) (-RRB- -RRB-) (NNP I))
    (VP
      (VP (VBP do) (RB not)
        (VP (VB give)
          (NP (NN permission))))
      (CC nor)
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP have)
              (NP
                (NP (DT a) (NN right))
                (PP (TO to)
                  (NP (PRP$ my) (NN property))))
              (SBAR (IN as)
                (S
                  (VP (VBZ is)
                    (VP (VBN stated)
                      (PP (IN in)
                        (NP (DT the) (NNP Constitution))))))))))))
    (. .)))

nn(I-5, http:\/\/education.yahoo.com\/reference\/dictionary\/entry\/steal-3)
nsubj(give-8, I-5)
nsubj(do-11, I-5)
aux(give-8, do-6)
neg(give-8, not-7)
root(ROOT-0, give-8)
dobj(give-8, permission-9)
conj_nor(give-8, do-11)
nsubj(have-13, you-12)
ccomp(do-11, have-13)
det(right-15, a-14)
dobj(have-13, right-15)
poss(property-18, my-17)
prep_to(right-15, property-18)
mark(stated-21, as-19)
auxpass(stated-21, is-20)
advcl(have-13, stated-21)
det(Constitution-24, the-23)
prep_in(stated-21, Constitution-24)

(ROOT
  (S (CC And)
    (ADVP (RB yet))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (NP (DT a) (NN gun)
            (S
              (VP (TO to)
                (VP (VB defend)
                  (NP (PRP$ my) (NN right))
                  (PP (TO to)
                    (NP (NN property)))
                  (PP (IN from)
                    (NP
                      (NP (DT the) (NN government))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ is)
                            (VP (VBN supposed)
                              (S
                                (VP (TO to)
                                  (VP (VB protect)
                                    (NP (PRP it))))))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB be)
        (VP (VBN arrested))))
    (. .)))

cc(arrested-28, And-1)
advmod(arrested-28, yet-2)
mark(have-6, if-4)
nsubj(have-6, I-5)
advcl(arrested-28, have-6)
det(gun-8, a-7)
dobj(have-6, gun-8)
aux(defend-10, to-9)
infmod(gun-8, defend-10)
poss(right-12, my-11)
dobj(defend-10, right-12)
prep_to(defend-10, property-14)
det(government-17, the-16)
prep_from(defend-10, government-17)
nsubjpass(supposed-20, government-17)
auxpass(supposed-20, is-19)
rcmod(government-17, supposed-20)
aux(protect-22, to-21)
xcomp(supposed-20, protect-22)
dobj(protect-22, it-23)
nsubjpass(arrested-28, I-25)
aux(arrested-28, will-26)
auxpass(arrested-28, be-27)
root(ROOT-0, arrested-28)

