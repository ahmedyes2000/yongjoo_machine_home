(ROOT
  (S
    (NP (PRP I))
    (VP (VBP agree)
      (PP (IN with)
        (NP (PRP you)))
      (PP (IN in)
        (NP (NN principle))))
    (. .)))

nsubj(agree-2, I-1)
root(ROOT-0, agree-2)
prep_with(agree-2, you-4)
prep_in(agree-2, principle-6)

(ROOT
  (S
    (PP (IN In)
      (NP (NN reality)))
    (, ,)
    (S
      (ADVP (RB however))
      (, ,)
      (NP (NNS doctors))
      (VP (VBP do)
        (SBAR
          (S
            (VP (VBP need)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (VP (VBN paid))))))))))
    (PRN (, ,)
      (NP (NN equipment)
        (CC and)
        (NNS supplies))
      (VP (VBD cost)
        (NP (NN money)))
      (, ,))
    (CC and)
    (S
      (NP
        (NP (DT the) (JJ few) (NNS nations))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBN experimented)
              (PP (IN with)
                (NP (JJ socialized) (NN medicine)))))))
      (VP (VBP have)
        (VP (VBN had)
          (NP
            (NP (DT a) (NN mix))
            (PP (IN of)
              (NP (NNS results)))))))
    (. .)))

prep_in(do-7, reality-2)
advmod(do-7, however-4)
nsubj(do-7, doctors-6)
root(ROOT-0, do-7)
ccomp(do-7, need-8)
aux(paid-11, to-9)
auxpass(paid-11, get-10)
xcomp(need-8, paid-11)
nsubj(cost-16, equipment-13)
conj_and(equipment-13, supplies-15)
nsubj(cost-16, supplies-15)
dep(do-7, cost-16)
dobj(cost-16, money-17)
det(nations-22, the-20)
amod(nations-22, few-21)
nsubj(experimented-24, nations-22)
nsubj(had-29, nations-22)
rcmod(nations-22, experimented-24)
amod(medicine-27, socialized-26)
prep_with(experimented-24, medicine-27)
aux(had-29, have-28)
conj_and(do-7, had-29)
det(mix-31, a-30)
dobj(had-29, mix-31)
prep_of(mix-31, results-33)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (ADVP (JJ free)
          (PP (IN for)
            (NP
              (NP (DT all) (NN health) (NN care))
              (VP (VBG happening)
                (ADVP (RB anytime) (RB soon))))))))
    (. .)))

nsubj(see-5, I-1)
advmod(see-5, just-2)
aux(see-5, do-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
advmod(see-5, free-6)
det(care-10, all-8)
nn(care-10, health-9)
prep_for(free-6, care-10)
partmod(care-10, happening-11)
advmod(soon-13, anytime-12)
advmod(happening-11, soon-13)

(ROOT
  (SQ
    (VP (VB \/) (-RRB- -RRB-)
      (NP (NNS \/))
      (-RRB- -RRB-)
      (PP (IN On)
        (NP
          (NP (DT a) (NN side) (NN note))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (VBP consider)
                (NP (JJ medical) (NN care))
                (NP (DT a) (JJ free))
                (SBAR (IN for)
                  (S
                    (NP (DT all) (NN right))
                    (ADVP (RB then))
                    (VP (MD should)
                      (PRN (RB n't)
                        (NP
                          (NP (NN food))
                          (CC and)
                          (NP (NN housing))))
                      (ADVP (RB also))
                      (VP (VB be)
                        (ADJP (JJ free)
                          (PP (IN for)
                            (NP (DT all) (NNS rights))))))))))))))
    (. ?)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
det(note-8, a-6)
nn(note-8, side-7)
prep_on(\/-1, note-8)
mark(consider-12, if-10)
nsubj(consider-12, we-11)
dep(note-8, consider-12)
amod(care-14, medical-13)
iobj(consider-12, care-14)
det(free-16, a-15)
dobj(consider-12, free-16)
mark(free-28, for-17)
det(right-19, all-18)
nsubj(free-28, right-19)
advmod(free-28, then-20)
aux(free-28, should-21)
dep(food-23, n't-22)
dep(free-28, food-23)
conj_and(food-23, housing-25)
dep(free-28, housing-25)
advmod(free-28, also-26)
cop(free-28, be-27)
advcl(consider-12, free-28)
det(rights-31, all-30)
prep_for(free-28, rights-31)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB n't)
      (VP (VB do)
        (S
          (NP (PRP you))
          (ADJP (DT any) (JJ good))
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (PRP$ your) (JJ broken) (NN arm) (NN set))
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBP 're)
                      (VP (IN about)
                        (S
                          (VP (TO to)
                            (VP (VB starve)
                              (CC or)
                              (VB freeze)
                              (PP (TO to)
                                (NP (NN death))))))))))))))))
    (. .)))

nsubj(do-4, It-1)
aux(do-4, does-2)
neg(do-4, n't-3)
root(ROOT-0, do-4)
nsubj(get-9, you-5)
dep(good-7, any-6)
dep(get-9, good-7)
aux(get-9, to-8)
xcomp(do-4, get-9)
poss(set-13, your-10)
amod(set-13, broken-11)
nn(set-13, arm-12)
dobj(get-9, set-13)
mark(about-17, if-14)
nsubj(about-17, you-15)
xsubj(starve-19, you-15)
aux(about-17, 're-16)
advcl(get-9, about-17)
aux(starve-19, to-18)
xcomp(about-17, starve-19)
xcomp(about-17, freeze-21)
conj_or(starve-19, freeze-21)
prep_to(starve-19, death-23)

