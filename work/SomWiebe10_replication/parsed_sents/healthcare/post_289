(ROOT
  (S
    (NP (DT The) (NNP John) (NNP Stossel) (NN show))
    (VP (VBZ reveals)
      (NP
        (NP (JJ many))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS problems))
            (PP (IN of)
              (NP (NN insurance)
                (CC and)
                (NN lack)))))
        (PP (IN of)
          (NP
            (NP (NN insurance))
            (PP (IN in)
              (NP (DT the) (NNP USA))))))
      (PP
        (ADVP (RB together))
        (IN with)
        (NP
          (NP (DT the) (NNS problems))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ national) (NN health) (NNS schemes))
              (PP (IN in)
                (NP (NNP Canada)
                  (CC and)
                  (NNP Great) (NNP Britain))))))))
    (. .)))

det(show-4, The-1)
nn(show-4, John-2)
nn(show-4, Stossel-3)
nsubj(reveals-5, show-4)
root(ROOT-0, reveals-5)
dobj(reveals-5, many-6)
det(problems-9, the-8)
prep_of(many-6, problems-9)
prep_of(problems-9, insurance-11)
prep_of(problems-9, lack-13)
conj_and(insurance-11, lack-13)
prep_of(many-6, insurance-15)
det(USA-18, the-17)
prep_in(insurance-15, USA-18)
det(problems-22, the-21)
prep_together_with(reveals-5, problems-22)
det(schemes-27, the-24)
amod(schemes-27, national-25)
nn(schemes-27, health-26)
prep_of(problems-22, schemes-27)
nn(Britain-32, Canada-29)
conj_and(Canada-29, Great-31)
nn(Britain-32, Great-31)
prep_in(schemes-27, Britain-32)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ serious) (NNS flaws))
        (PP (IN with)
          (NP (DT both) (NNS systems)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(flaws-4, serious-3)
nsubj(are-2, flaws-4)
det(systems-7, both-6)
prep_with(flaws-4, systems-7)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ seems)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD would)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB choose)
                    (PP (IN between)
                      (NP
                        (NP (DT a) (NN system))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP
                              (VP (VBZ rations)
                                (NP (JJ medical) (NN care))
                                (PP (IN on)
                                  (NP
                                    (NP (DT a) (VBG waiting) (NN list))
                                    (PRN (-LRB- -LRB-)
                                      (NP
                                        (NP (NNP Canadian))
                                        (CC and)
                                        (NP (JJ British) (NNS systems)))
                                      (-RRB- -RRB-)))))
                              (CC or)
                              (VP (VBZ rations)
                                (NP (PRP it))
                                (PP (IN by)
                                  (NP
                                    (NP (NN price))
                                    (PRN (-LRB- -LRB-)
                                      (S
                                        (NP (NN user))
                                        (VP (VBZ pays)
                                          (NP (NNS systems))))
                                      (-RRB- -RRB-))))))))))))))))))
    (. .)))

prep_in(seems-5, fact-2)
nsubj(seems-5, it-4)
root(ROOT-0, seems-5)
nsubj(have-8, we-6)
xsubj(choose-10, we-6)
aux(have-8, would-7)
ccomp(seems-5, have-8)
aux(choose-10, to-9)
xcomp(have-8, choose-10)
det(system-13, a-12)
prep_between(choose-10, system-13)
nsubj(rations-15, system-13)
nsubj(rations-29, system-13)
rcmod(system-13, rations-15)
amod(care-17, medical-16)
dobj(rations-15, care-17)
det(list-21, a-19)
amod(list-21, waiting-20)
prep_on(rations-15, list-21)
dep(list-21, Canadian-23)
amod(systems-26, British-25)
dep(list-21, systems-26)
conj_and(Canadian-23, systems-26)
rcmod(system-13, rations-29)
conj_or(rations-15, rations-29)
dobj(rations-29, it-30)
prep_by(rations-29, price-32)
nsubj(pays-35, user-34)
dep(price-32, pays-35)
dobj(pays-35, systems-36)

(ROOT
  (S
    (NP (NNP Australia))
    (VP (VBZ has)
      (NP
        (NP (DT a) (JJ national) (NN health) (NN scheme))
        (CONJP (RB as) (RB well) (IN as))
        (NP
          (NP
            (NP (NN fee))
            (PP (IN for)
              (NP (NN service) (NN medicine))))
          (CC and)
          (NP
            (NP (DT a) (NN tax) (NN system))
            (SBAR
              (WHNP (WDT that))
              (S
                (ADVP (RB strongly))
                (VP (VBZ encourages)
                  (NP (JJ private) (NN health) (NN insurance)))))))))
    (. .)))

nsubj(has-2, Australia-1)
root(ROOT-0, has-2)
det(scheme-6, a-3)
amod(scheme-6, national-4)
nn(scheme-6, health-5)
dobj(has-2, scheme-6)
dobj(has-2, fee-10)
conj_and(scheme-6, fee-10)
nn(medicine-13, service-12)
prep_for(fee-10, medicine-13)
det(system-17, a-15)
nn(system-17, tax-16)
conj_and(scheme-6, system-17)
conj_and(fee-10, system-17)
nsubj(encourages-20, system-17)
advmod(encourages-20, strongly-19)
rcmod(system-17, encourages-20)
amod(insurance-23, private-21)
nn(insurance-23, health-22)
dobj(encourages-20, insurance-23)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (ADVP (RB far)
          (PP (IN from)
            (ADJP (JJ perfect))))
        (, ,)
        (ADVP (RB either))))
    (, ,)
    (CC but)
    (S
      (NP (NNP Australia))
      (VP (VBZ does)
        (VP (VB have)
          (NP
            (NP (DT a) (JJR higher) (NN life) (NN expectancy))
            (PP (IN than)
              (NP
                (NP (DT the) (NNP USA))
                (, ,)
                (NP (NNP Great) (NNP Britain))
                (CC and)
                (NP (NNP Canada))))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
prep_far_from(is-2, perfect-5)
advmod(is-2, either-7)
nsubj(have-12, Australia-10)
aux(have-12, does-11)
conj_but(is-2, have-12)
det(expectancy-16, a-13)
amod(expectancy-16, higher-14)
nn(expectancy-16, life-15)
dobj(have-12, expectancy-16)
det(USA-19, the-18)
prep_than(expectancy-16, USA-19)
nn(Britain-22, Great-21)
prep_than(expectancy-16, Britain-22)
conj_and(USA-19, Britain-22)
prep_than(expectancy-16, Canada-24)
conj_and(USA-19, Canada-24)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (NN course)))
      (, ,)
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT no) (NN proof))
        (SBAR (IN that)
          (S
            (NP (DT this))
            (VP (VBZ is)
              (ADJP (RB wholly) (JJ due)
                (PP (TO to)
                  (NP (DT the) (NN health) (NN care) (NNS arrangements)))))))))
    (, ,)
    (CC but)
    (S
      (PP (IN with)
        (NP
          (NP (DT a) (NN life) (NN expectancy))
          (PP (IN of)
            (NP
              (NP
                (NP
                  (QP (IN over) (CD 2.5))
                  (NNS years))
                (JJR greater))
              (PP (IN than)
                (NP (DT the) (NNP USA)))))))
      (NP (PRP it))
      (VP (MD must)
        (VP (VB be)
          (VP (VBG doing)
            (NP (DT some) (NNS things))
            (ADVP (RBR better))))))
    (. .)))

prep_of(is-5, course-2)
expl(is-5, there-4)
root(ROOT-0, is-5)
det(proof-7, no-6)
nsubj(is-5, proof-7)
complm(due-12, that-8)
nsubj(due-12, this-9)
cop(due-12, is-10)
advmod(due-12, wholly-11)
ccomp(is-5, due-12)
det(arrangements-17, the-14)
nn(arrangements-17, health-15)
nn(arrangements-17, care-16)
prep_to(due-12, arrangements-17)
det(expectancy-23, a-21)
nn(expectancy-23, life-22)
prep_with(doing-35, expectancy-23)
quantmod(2.5-26, over-25)
num(years-27, 2.5-26)
dep(greater-28, years-27)
prep_of(expectancy-23, greater-28)
det(USA-31, the-30)
prep_than(greater-28, USA-31)
nsubj(doing-35, it-32)
aux(doing-35, must-33)
aux(doing-35, be-34)
conj_but(is-5, doing-35)
det(things-37, some-36)
dobj(doing-35, things-37)
advmod(doing-35, better-38)

