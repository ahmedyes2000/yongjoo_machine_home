(ROOT
  (S
    (NP (PRP I))
    (VP (VBP ask) (, ,)
      (SBARQ
        (WHADVP (WRB where))
        (SQ (VBZ does)
          (NP (DT this) (`` ``) (NN right) ('' ''))
          (VP (VB derive)
            (PP (IN from))))
        (. ?)))))

nsubj(ask-2, I-1)
root(ROOT-0, ask-2)
advmod(derive-10, where-4)
aux(derive-10, does-5)
det(right-8, this-6)
nsubj(derive-10, right-8)
dep(ask-2, derive-10)
prep(derive-10, from-11)

(ROOT
  (FRAG
    (SBAR
      (SBAR (IN If)
        (S
          (NP (NN health) (NN care))
          (VP (VBZ is)
            (NP (DT a) (NN right)))))
      (, ,) (WRB why) (RB not)
      (S
        (UCP
          (NP (NN food))
          (, ,)
          (CC or)
          (VP (VBG housing)
            (ADVP (RB too))))))
    (. ?)))

mark(right-6, If-1)
nn(care-3, health-2)
nsubj(right-6, care-3)
cop(right-6, is-4)
det(right-6, a-5)
dep(food-10, right-6)
advmod(food-10, why-8)
dep(food-10, not-9)
root(ROOT-0, food-10)
conj_or(food-10, housing-13)
partmod(food-10, housing-13)
advmod(housing-13, too-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean) (, ,)
      (SBARQ
        (SBAR (IN if)
          (S
            (NP (DT a) (NN right))
            (VP (VBZ is)
              (NP (NN something))
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN Government))
                  (VP (VBZ grants)
                    (NP (PRP us)))))
              (, ,)
              (ADVP (RB then)))))
        (WHNP (WP what))
        (SQ
          (VP (VBZ stops)
            (NP (PRP them))
            (PP (IN from)
              (S
                (VP (VBG revoking)
                  (NP
                    (NP (DT that) (NN right))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP they))
                        (VP (VBP do) (RB n't)
                          (VP (VB feel)
                            (PP (IN like)
                              (S
                                (VP (VBG granting)
                                  (NP (PRP it))
                                  (ADVP (DT any) (RBR longer)))))))))))))))
        (. ?)))))

nsubj(mean-2, I-1)
root(ROOT-0, mean-2)
mark(something-8, if-4)
det(right-6, a-5)
nsubj(something-8, right-6)
cop(something-8, is-7)
dep(stops-17, something-8)
complm(grants-12, that-9)
det(Government-11, the-10)
nsubj(grants-12, Government-11)
ccomp(something-8, grants-12)
dobj(grants-12, us-13)
advmod(something-8, then-15)
nsubj(stops-17, what-16)
dep(mean-2, stops-17)
dobj(stops-17, them-18)
prepc_from(stops-17, revoking-20)
det(right-22, that-21)
dobj(revoking-20, right-22)
tmod(feel-27, right-22)
advmod(feel-27, when-23)
nsubj(feel-27, they-24)
aux(feel-27, do-25)
neg(feel-27, n't-26)
dep(right-22, feel-27)
prepc_like(feel-27, granting-29)
dobj(granting-29, it-30)
dep(longer-32, any-31)
advmod(granting-29, longer-32)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (RB even) (DT the) (NNP Soviet) (NNP Union))
    (VP (VBD had)
      (NP
        (NP (DT a) (NNP Constitution))
        (, ,)
        (SBAR
          (WHADVP (WRB wherein))
          (S
            (NP (DT the) (NN Government))
            (VP (VBD granted)
              (NP (PRP$ its) (NNS citizens))
              (, ,)
              (PP (IN for)
                (NP
                  (NP (DT the) (NN betterment))
                  (PP (IN of)
                    (NP (DT the) (JJ Socialist) (NN state)))))
              (, ,)
              (NP
                (NP (DT the) (NNS freedoms))
                (PP (IN of)
                  (NP (NN speech) (, ,) (NN press) (, ,) (NN assembly)
                    (CC and)
                    (NN protest)))))))))
    (. .)))

prep_for(had-8, example-2)
advmod(Union-7, even-4)
det(Union-7, the-5)
nn(Union-7, Soviet-6)
nsubj(had-8, Union-7)
root(ROOT-0, had-8)
det(Constitution-10, a-9)
dobj(had-8, Constitution-10)
advmod(granted-15, wherein-12)
det(Government-14, the-13)
nsubj(granted-15, Government-14)
rcmod(Constitution-10, granted-15)
poss(citizens-17, its-16)
dobj(granted-15, citizens-17)
det(betterment-21, the-20)
prep_for(granted-15, betterment-21)
det(state-25, the-23)
amod(state-25, Socialist-24)
prep_of(betterment-21, state-25)
det(freedoms-28, the-27)
dobj(granted-15, freedoms-28)
prep_of(freedoms-28, speech-30)
prep_of(freedoms-28, press-32)
conj_and(speech-30, press-32)
prep_of(freedoms-28, assembly-34)
conj_and(speech-30, assembly-34)
prep_of(freedoms-28, protest-36)
conj_and(speech-30, protest-36)

(ROOT
  (S
    (S
      (SBAR
        (ADVP (RB However))
        (IN if)
        (S
          (NP (PRP$ their) (NN Government))
          (VP (VBD felt)
            (NP (PRP$ your) (NN speech)))))
      (, ,)
      (NP (FW etc.))
      (VP (VBD was) (RB n't) (`` ``)
        (PP (IN for)
          (NP
            (NP (DT the) (NN betterment))
            (PP (IN of)
              (NP (DT the) (JJ Socialist) (NN state))))))
      ('' ''))
    (, ,) (RB then)
    (S
      (NP (DT those) (NNS rights))
      (VP (VBD did) (RB n't)
        (VP (VB apply)
          (PP (TO to)
            (NP (PRP you))))))
    (. .)))

advmod(felt-5, However-1)
dep(felt-5, if-2)
poss(Government-4, their-3)
nsubj(felt-5, Government-4)
advcl(was-10, felt-5)
poss(speech-7, your-6)
dobj(felt-5, speech-7)
nsubj(was-10, etc.-9)
root(ROOT-0, was-10)
neg(was-10, n't-11)
det(betterment-15, the-14)
prep_for(was-10, betterment-15)
det(state-19, the-17)
amod(state-19, Socialist-18)
prep_of(betterment-15, state-19)
advmod(was-10, then-22)
det(rights-24, those-23)
nsubj(apply-27, rights-24)
aux(apply-27, did-25)
neg(apply-27, n't-26)
ccomp(was-10, apply-27)
prep_to(apply-27, you-29)

(ROOT
  (S
    (NP (DT The) (NNP United) (NNPS States) (NNP Constitution))
    (VP (VBZ credits)
      (NP (NNS rights))
      (PP (IN as)
        (S
          (VP (VBG being)
            (VP (`` ``) (VBN endowed)
              (PP (IN by)
                (NP (PRP$ our) (NNS Creator) ('' '')))
              (, ,)
              (PP (JJ such))))))
      (SBAR (IN that)
        (S
          (NP (DT no) (NN argument))
          (VP (MD can)
            (VP (VB be)
              (VP
                (ADVP (RB openly))
                (VBN made)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN Government))
                    (VP (MD can)
                      (VP (VB revoke)
                        (NP (PRP them))))))))))))
    (. .)))

det(Constitution-4, The-1)
nn(Constitution-4, United-2)
nn(Constitution-4, States-3)
nsubj(credits-5, Constitution-4)
root(ROOT-0, credits-5)
dobj(credits-5, rights-6)
auxpass(endowed-10, being-8)
prepc_as(credits-5, endowed-10)
poss(Creator-13, our-12)
agent(endowed-10, Creator-13)
prep(endowed-10, such-16)
complm(made-23, that-17)
det(argument-19, no-18)
nsubjpass(made-23, argument-19)
aux(made-23, can-20)
auxpass(made-23, be-21)
advmod(made-23, openly-22)
ccomp(credits-5, made-23)
complm(revoke-28, that-24)
det(Government-26, the-25)
nsubj(revoke-28, Government-26)
aux(revoke-28, can-27)
ccomp(made-23, revoke-28)
dobj(revoke-28, them-29)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB re-define)
          (NP
            (NP (DT the) (NN meaning))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT a) (NN right))
                  (VP (VBZ is) (, ,)
                    (SBAR (RB just) (IN because)
                      (S
                        (NP (PRP we))
                        (VP (VBP think)
                          (SBAR
                            (S
                              (NP (PRP it))
                              (VP (MD 'll)
                                (VP (VB help)
                                  (VP (VB give)
                                    (NP (PRP us))
                                    (NP (NN something))))))))))
                    (SBAR (IN that)
                      (S
                        (NP (PRP we))
                        (VP (VBP want))))))))))))
    (, ,)
    (VP (VBZ puts)
      (NP (PRP us))
      (PP (IN in)
        (NP
          (NP (DT a) (JJ dangerous) (NN position))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP we))
              (VP (MD 'll)
                (VP (VB be)
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN Government) (POS 's))
                      (NN mercy)
                      (S
                        (VP (TO to)
                          (VP (VB grant)
                            (NP (DT those) (NNS rights))))))))))))))
    (. .)))

aux(re-define-2, To-1)
dep(puts-25, re-define-2)
det(meaning-4, the-3)
dobj(re-define-2, meaning-4)
dep(is-9, what-6)
dobj(think-14, what-6)
dobj(want-23, what-6)
det(right-8, a-7)
nsubj(is-9, right-8)
prepc_of(meaning-4, is-9)
advmod(think-14, just-11)
dep(think-14, because-12)
nsubj(think-14, we-13)
ccomp(is-9, think-14)
nsubj(help-17, it-15)
aux(help-17, 'll-16)
ccomp(think-14, help-17)
xcomp(help-17, give-18)
iobj(give-18, us-19)
dobj(give-18, something-20)
complm(want-23, that-21)
nsubj(want-23, we-22)
ccomp(is-9, want-23)
root(ROOT-0, puts-25)
dobj(puts-25, us-26)
det(position-30, a-28)
amod(position-30, dangerous-29)
prep_in(puts-25, position-30)
advmod(be-34, where-31)
nsubj(be-34, we-32)
aux(be-34, 'll-33)
rcmod(position-30, be-34)
det(Government-37, the-36)
poss(mercy-39, Government-37)
prep_at(be-34, mercy-39)
aux(grant-41, to-40)
infmod(mercy-39, grant-41)
det(rights-43, those-42)
dobj(grant-41, rights-43)

(ROOT
  (S
    (S
      (NP (DT The) (NN Government))
      (VP (VBZ does) (RB n't)
        (VP (VB own)
          (NP (PRP us)))))
    (, ,) (IN so)
    (S
      (ADVP (RB therefore))
      (NP (PRP it))
      (VP (MD should) (RB n't)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP
                  (NP (NN care))
                  (PP (IN of)
                    (NP (PRP us)))))))
          (SBAR (IN like)
            (S
              (NP (PRP$ our) (NN mother))
              (VP (VBD did)))))))
    (. .)))

det(Government-2, The-1)
nsubj(own-5, Government-2)
aux(own-5, does-3)
neg(own-5, n't-4)
root(ROOT-0, own-5)
dobj(own-5, us-6)
dep(own-5, so-8)
advmod(have-13, therefore-9)
nsubj(have-13, it-10)
xsubj(take-15, it-10)
aux(have-13, should-11)
neg(have-13, n't-12)
ccomp(own-5, have-13)
aux(take-15, to-14)
xcomp(have-13, take-15)
dobj(take-15, care-16)
prep_of(care-16, us-18)
mark(did-22, like-19)
poss(mother-21, our-20)
nsubj(did-22, mother-21)
advcl(have-13, did-22)

