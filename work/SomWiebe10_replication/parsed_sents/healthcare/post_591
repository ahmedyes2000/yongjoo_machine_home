(ROOT
  (S
    (NP (NNP Universal) (NN health) (NN care))
    (VP (VBZ has)
      (NP
        (NP (DT a) (NN lot))
        (PP (IN of)
          (NP (NNS issues)))))
    (. .)))

nn(care-3, Universal-1)
nn(care-3, health-2)
nsubj(has-4, care-3)
root(ROOT-0, has-4)
det(lot-6, a-5)
dobj(has-4, lot-6)
prep_of(lot-6, issues-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP live)
        (PP (IN in)
          (NP (NNP Canada)))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP (DT these) (NNS issues))))
    (. .)))

nsubj(live-2, I-1)
root(ROOT-0, live-2)
prep_in(live-2, Canada-4)
nsubj(know-7, I-6)
conj_and(live-2, know-7)
det(issues-9, these-8)
dobj(know-7, issues-9)

(ROOT
  (NP
    (NP (NNP Pill))
    (VP
      (VP (VBG pushing)
        (NP
          (NP (NNS doctors))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP do) (RB n't)
                (VP (VB work)
                  (ADJP (JJ hard))))))))
      (, ,)
      (NP
        (NP (DT a) (NN lot))
        (PP (IN of)
          (NP
            (NP (JJ administrative) (NN work))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VB push)
                  (PRT (RP up))
                  (NP
                    (NP (NNS costs))
                    (PP (IN on)
                      (NP
                        (NP (NNS governments))
                        (, ,)
                        (NP (JJ long) (NNS lines))
                        (CC and)
                        (NP
                          (NP
                            (ADJP (RB extremely) (JJ long))
                            (NN wait) (NNS times))
                          (PP (IN for)
                            (NP
                              (NP (NNS surgeries))
                              (CC and)
                              (NP (NN specialty) (JJ medical) (NN attention)))))))))))))))
    (. .)))

root(ROOT-0, Pill-1)
dep(Pill-1, pushing-2)
dobj(pushing-2, doctors-3)
nsubj(work-7, doctors-3)
aux(work-7, do-5)
neg(work-7, n't-6)
rcmod(doctors-3, work-7)
acomp(work-7, hard-8)
det(lot-11, a-10)
dobj(pushing-2, lot-11)
amod(work-14, administrative-13)
prep_of(lot-11, work-14)
nsubj(push-16, work-14)
rcmod(work-14, push-16)
prt(push-16, up-17)
dobj(push-16, costs-18)
prep_on(costs-18, governments-20)
amod(lines-23, long-22)
prep_on(costs-18, lines-23)
conj_and(governments-20, lines-23)
advmod(long-26, extremely-25)
amod(times-28, long-26)
nn(times-28, wait-27)
prep_on(costs-18, times-28)
conj_and(governments-20, times-28)
prep_for(times-28, surgeries-30)
nn(attention-34, specialty-32)
amod(attention-34, medical-33)
prep_for(times-28, attention-34)
conj_and(surgeries-30, attention-34)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD read)
      (NP (DT the) (JJ first) (NN post))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (NNS people))
          (VP (MD should)
            (VP (VB be)
              (ADJP (RB equally) (VBN entitled)
                (PP (IN for)
                  (NP (JJ good) (JJ affordable) (NN health) (NN care)))))))))
    (. .)))

nsubj(read-2, I-1)
root(ROOT-0, read-2)
det(post-5, the-3)
amod(post-5, first-4)
dobj(read-2, post-5)
complm(entitled-12, that-7)
nsubjpass(entitled-12, people-8)
aux(entitled-12, should-9)
auxpass(entitled-12, be-10)
advmod(entitled-12, equally-11)
ccomp(read-2, entitled-12)
amod(care-17, good-14)
amod(care-17, affordable-15)
nn(care-17, health-16)
prep_for(entitled-12, care-17)

(ROOT
  (S
    (NP (DT The) (NN fact))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT a) (JJ free) (NN market) (, ,) (NN capitalist) (, ,) (NN profit) (NN driven) (NN health) (NN care) (NN system))
          (VP
            (VP (VBZ ends)
              (PRT (RP up))
              (S
                (VP (VBG costing)
                  (NP
                    (NP (JJR less))
                    (PP (IN per)
                      (NP (NN person)))))))
            (CC and)
            (VP (VBZ offers)
              (NP
                (NP (DT a) (JJR higher) (NN quality))
                (PP (IN of)
                  (NP (NN service)))))))))
    (. .)))

det(fact-2, The-1)
nsubj(is-3, fact-2)
root(ROOT-0, is-3)
complm(ends-16, that-4)
det(system-15, a-5)
amod(system-15, free-6)
nn(system-15, market-7)
dep(system-15, capitalist-9)
dep(system-15, profit-11)
nn(system-15, driven-12)
nn(system-15, health-13)
nn(system-15, care-14)
nsubj(ends-16, system-15)
nsubj(offers-23, system-15)
ccomp(is-3, ends-16)
prt(ends-16, up-17)
xcomp(ends-16, costing-18)
dobj(costing-18, less-19)
prep_per(less-19, person-21)
ccomp(is-3, offers-23)
conj_and(ends-16, offers-23)
det(quality-26, a-24)
amod(quality-26, higher-25)
dobj(offers-23, quality-26)
prep_of(quality-26, service-28)

(ROOT
  (S
    (NP (NNP Canada))
    (VP (VBZ pays)
      (NP
        (NP
          (ADJP ($ $) (CD 5000))
          (DT a) (NN person))
        (PP (IN per)
          (NP
            (NP (NN year))
            (PP (IN for)
              (NP
                (NP (NN health) (NN care))
                (PP (IN with)
                  (NP (DT an) (NN estimate))))))))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (MD will)
            (VP (VB cost)
              (NP
                (NP ($ $) (CD 7000))
                (PP (IN in)
                  (NP (CD 20) (NNS years)))))))))
    (. .)))

nsubj(pays-2, Canada-1)
root(ROOT-0, pays-2)
amod(person-6, $-3)
number($-3, 5000-4)
det(person-6, a-5)
dobj(pays-2, person-6)
prep_per(person-6, year-8)
nn(care-11, health-10)
prep_for(year-8, care-11)
det(estimate-14, an-13)
prep_with(care-11, estimate-14)
complm(cost-18, that-15)
nsubj(cost-18, it-16)
aux(cost-18, will-17)
ccomp(pays-2, cost-18)
dobj(cost-18, $-19)
num($-19, 7000-20)
num(years-23, 20-22)
prep_in($-19, years-23)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP
            (QP (CD 30) (CD million))
            (NNS people))
          (PP (IN in)
            (NP (NNP Canada))))))
    (CC and)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN reason))
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (NNP Canada))
              (VP (VBZ is) (RB not)
                (ADJP (RB as) (JJ prosperous)
                  (PP (IN as)
                    (NP (JJ other) (JJ capitalist) (NNS countries))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
number(million-4, 30-3)
num(people-5, million-4)
nsubj(are-2, people-5)
prep_in(people-5, Canada-7)
nsubj(reason-12, this-9)
cop(reason-12, is-10)
det(reason-12, the-11)
conj_and(are-2, reason-12)
advmod(prosperous-18, why-13)
nsubj(prosperous-18, Canada-14)
cop(prosperous-18, is-15)
neg(prosperous-18, not-16)
advmod(prosperous-18, as-17)
rcmod(reason-12, prosperous-18)
amod(countries-22, other-20)
amod(countries-22, capitalist-21)
prep_as(prosperous-18, countries-22)

(ROOT
  (S
    (NP (JJ High) (NNS taxes))
    (VP (VBP create)
      (NP
        (NP (JJR less) (NNS jobs))
        (CC and)
        (NP (NNS innovations))))
    (. .)))

amod(taxes-2, High-1)
nsubj(create-3, taxes-2)
root(ROOT-0, create-3)
amod(jobs-5, less-4)
dobj(create-3, jobs-5)
dobj(create-3, innovations-7)
conj_and(jobs-5, innovations-7)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (NNP Canada)))
      (NP (PRP we))
      (VP (VBP pay)
        (NP (JJR more) (NNS taxes))
        (PP (IN than)
          (NP (NNP California)))))
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (NP (DT the) (JJ same) (NNP GDP\/GSP)
          (CC and)
          (JJ same) (NN population))))
    (. .)))

prep_in(pay-4, Canada-2)
nsubj(pay-4, we-3)
root(ROOT-0, pay-4)
amod(taxes-6, more-5)
dobj(pay-4, taxes-6)
prep_than(pay-4, California-8)
nsubj(have-11, we-10)
conj_but(pay-4, have-11)
det(GDP\/GSP-14, the-12)
amod(GDP\/GSP-14, same-13)
dobj(have-11, GDP\/GSP-14)
amod(population-17, same-16)
dobj(have-11, population-17)
conj_and(GDP\/GSP-14, population-17)

(ROOT
  (S
    (NP (NNP Canada))
    (ADVP (RB actually))
    (VP (VBZ pays)
      (NP (CD 40) (NN %))
      (NP (JJR more) (NNS taxes)))
    (. .)))

nsubj(pays-3, Canada-1)
advmod(pays-3, actually-2)
root(ROOT-0, pays-3)
num(%-5, 40-4)
iobj(pays-3, %-5)
amod(taxes-7, more-6)
dobj(pays-3, taxes-7)

