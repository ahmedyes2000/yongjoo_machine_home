(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (ADJP (JJ easy)))
    (. .)))

nsubj(easy-3, That-1)
cop(easy-3, was-2)
root(ROOT-0, easy-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ glad)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP agree)
              (NP (NNP Betty)))))))
    (. .)))

nsubj(glad-3, I-1)
cop(glad-3, 'm-2)
root(ROOT-0, glad-3)
nsubj(agree-5, you-4)
dep(glad-3, agree-5)
dobj(agree-5, Betty-6)

(ROOT
  (S
    (PP (IN Under)
      (NP (NN socialism)))
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (DT no) (NNS individuals) (, ,) (RB only) (JJ meaningless) (NNS cogs))
        (SBAR
          (WHNP (WP$ whose) (NNS obligation))
          (S
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB serve)
                    (NP (DT the) (JJ collective))
                    (SBAR (IN as)
                      (S
                        (VP (VBN prescribed)
                          (PP (IN by)
                            (NP (DT the) (JJ omnipotent) (NN state))))))))))))))
    (. .)))

prep_under(are-4, socialism-2)
expl(are-4, there-3)
root(ROOT-0, are-4)
det(cogs-10, no-5)
nn(cogs-10, individuals-6)
advmod(cogs-10, only-8)
amod(cogs-10, meaningless-9)
nsubj(are-4, cogs-10)
poss(obligation-12, cogs-10)
nsubj(is-13, obligation-12)
rcmod(cogs-10, is-13)
aux(serve-15, to-14)
xcomp(is-13, serve-15)
det(collective-17, the-16)
dobj(serve-15, collective-17)
mark(prescribed-19, as-18)
advcl(serve-15, prescribed-19)
det(state-23, the-21)
amod(state-23, omnipotent-22)
prep_by(prescribed-19, state-23)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP you))
    (VP (MD should)
      (VP (VB think)
        (PP (IN about)
          (S
            (VP (VBG changing)
              (NP (PRP$ your) (NN username)))))))
    (. ?)))

advmod(think-4, Maybe-1)
nsubj(think-4, you-2)
aux(think-4, should-3)
root(ROOT-0, think-4)
prepc_about(think-4, changing-6)
poss(username-8, your-7)
dobj(changing-6, username-8)

(ROOT
  (S (: ;)
    (S
      (S
        (SBAR (IN -RRB-)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB not)
              (VP (VB say)
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP (PRP I))
                      (VP (VBP exist)
                        (PP (IN on)
                          (NP (PRP$ my) (JJ own))))))
                  (, ,)
                  (CC or)
                  (SBAR (IN that)
                    (S
                      (NP (NN society))
                      (VP (VBZ is)
                        (ADJP (JJ evil))))))))))
        (, ,)
        (NP (DT those))
        (VP (VBP are)
          (NP (PRP$ your) (NNS words))))
      (, ,)
      (CC nor)
      (SQ (VBP do)
        (NP (PRP I))
        (VP (VB claim)
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBP do) (RB n't)
                (VP (VB benefit)
                  (PP (IN from)
                    (S
                      (VP (VBG cooperating)
                        (PP (IN with)
                          (NP
                            (NP (NNS others))
                            (PP (IN in)
                              (NP (NN society)))))))))))))))
    (, ,) (IN so)
    (S
      (NP
        (NP (PDT all) (PRP$ your) (NN sarcasm))
        (PP (IN against)
          (NP (DT those) (NNS positions))))
      (VP (VBZ is)
        (VP (VBN misdirected))))
    (. .)))

nsubj(say-6, I-3)
aux(say-6, do-4)
neg(say-6, not-5)
advcl(words-23, say-6)
complm(exist-9, that-7)
nsubj(exist-9, I-8)
ccomp(say-6, exist-9)
poss(own-12, my-11)
prep_on(exist-9, own-12)
complm(evil-18, that-15)
nsubj(evil-18, society-16)
cop(evil-18, is-17)
ccomp(say-6, evil-18)
conj_or(exist-9, evil-18)
nsubj(words-23, those-20)
cop(words-23, are-21)
poss(words-23, your-22)
root(ROOT-0, words-23)
aux(claim-28, do-26)
nsubj(claim-28, I-27)
conj_nor(words-23, claim-28)
complm(benefit-33, that-29)
nsubj(benefit-33, I-30)
aux(benefit-33, do-31)
neg(benefit-33, n't-32)
ccomp(claim-28, benefit-33)
prepc_from(benefit-33, cooperating-35)
prep_with(cooperating-35, others-37)
prep_in(others-37, society-39)
dep(words-23, so-41)
predet(sarcasm-44, all-42)
poss(sarcasm-44, your-43)
nsubjpass(misdirected-49, sarcasm-44)
det(positions-47, those-46)
prep_against(sarcasm-44, positions-47)
auxpass(misdirected-49, is-48)
ccomp(words-23, misdirected-49)

(ROOT
  (S
    (NP (PRP$ My) (NN position))
    (VP (VBZ is)
      (ADVP (RB simply))
      (SBAR (IN that)
        (S
          (NP (DT all) (NNS individuals))
          (VP (MD should)
            (VP (VB be)
              (ADJP (JJ free)
                (PP (IN from)
                  (NP (NN coercion))))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (DT all) (JJ social) (NNS interactions))
                  (VP (MD should)
                    (VP (VB be)
                      (ADJP (JJ voluntary))
                      (PP (RB not)
                        (ADJP (JJ coerced))))))))))))
    (. .)))

poss(position-2, My-1)
nsubj(is-3, position-2)
root(ROOT-0, is-3)
advmod(is-3, simply-4)
complm(free-10, that-5)
det(individuals-7, all-6)
nsubj(free-10, individuals-7)
aux(free-10, should-8)
cop(free-10, be-9)
ccomp(is-3, free-10)
prep_from(free-10, coercion-12)
complm(voluntary-20, that-14)
det(interactions-17, all-15)
amod(interactions-17, social-16)
nsubj(voluntary-20, interactions-17)
aux(voluntary-20, should-18)
cop(voluntary-20, be-19)
ccomp(free-10, voluntary-20)
prep(voluntary-20, not-21)
pobj(not-21, coerced-22)

(ROOT
  (S (-LRB- -LRB-)
    (NP
      (NP
        (NP (DT A) (NN society))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ coercive))))))
      (, ,)
      (NP
        (NP (NNP e.g.) (NNP socialist))
        (, ,)
        (NP (NN islamofascist))
        (, ,) (FW etc.))
      (, ,))
    (VP (VBZ is)
      (ADJP (JJ evil)))
    (. .) (-RRB- -RRB-)))

det(society-3, A-2)
nsubj(coercive-6, society-3)
nsubj(evil-16, society-3)
cop(coercive-6, is-5)
rcmod(society-3, coercive-6)
nn(socialist-9, e.g.-8)
appos(society-3, socialist-9)
appos(socialist-9, islamofascist-11)
dep(socialist-9, etc.-13)
cop(evil-16, is-15)
root(ROOT-0, evil-16)

(ROOT
  (FRAG
    (ADVP (RB So)
      (PP (IN of)
        (NP
          (NP (NN course))
          (SBAR
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP (JJ enormous) (NNS benefits))
                  (PP (TO to)
                    (S
                      (VP (VBG living)
                        (PP (IN in)
                          (NP (DT a) (NN society)))))))))))))
    (, ,)
    (CC but)
    (SBAR (RB only) (IN if)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (RB essentially) (JJ free)))))
    (. .)))

root(ROOT-0, So-1)
prep_of(So-1, course-3)
expl(are-5, there-4)
rcmod(course-3, are-5)
amod(benefits-7, enormous-6)
nsubj(are-5, benefits-7)
prepc_to(benefits-7, living-9)
det(society-12, a-11)
prep_in(living-9, society-12)
dep(So-1, but-14)
advmod(free-20, only-15)
dep(free-20, if-16)
nsubj(free-20, it-17)
cop(free-20, is-18)
advmod(free-20, essentially-19)
dep(So-1, free-20)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (NNS people))
          (ADVP (RB selfishly))
          (VP
            (VP (VB flee)
              (NP (NNP Cuba)))
            (CC and)
            (VP (VB come)
              (PP (TO to)
                (NP (DT the) (NNP United) (NNPS States))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(flee-6, why-3)
nsubj(flee-6, people-4)
nsubj(come-9, people-4)
advmod(flee-6, selfishly-5)
advcl('s-2, flee-6)
dobj(flee-6, Cuba-7)
advcl('s-2, come-9)
conj_and(flee-6, come-9)
det(States-13, the-11)
nn(States-13, United-12)
prep_to(come-9, States-13)

(ROOT
  (S
    (S
      (ADVP (RB Tellingly))
      (, ,)
      (PP (IN under)
        (NP
          (NP (DT a)
            (ADJP (RB fully) (JJ capitalist))
            (NN system))
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD could)
                (VP (VB have)
                  (NP (PRP$ your) (JJ own) (JJ micro) (JJ socialist) (NN system))))))))
      (, ,)
      (VP (VBZ e.g.)
        (NP
          (NP (DT a) (JJ collectivized) (NN farm))
          (PRN (-LRB- -LRB-)
            (NP (NNP kibbutz))
            (-RRB- -RRB-))
          (CC or)
          (NP (DT a) (JJ socialist) (NN healthcare) (NN system)))))
    (: ;)
    (CC but)
    (S
      (PP (IN under)
        (NP (DT a) (RB fully) (JJ socialist) (NN system)))
      (NP (DT a) (JJ micro) (JJ free) (NN market) (NN system))
      (VP (MD would)
        (ADVP (RB never))
        (VP (VB be)
          (VP (VBN tolerated)))))
    (. .)))

advmod(e.g.-17, Tellingly-1)
det(system-7, a-4)
advmod(capitalist-6, fully-5)
amod(system-7, capitalist-6)
prep_under(e.g.-17, system-7)
nsubj(have-10, you-8)
aux(have-10, could-9)
rcmod(system-7, have-10)
poss(system-15, your-11)
amod(system-15, own-12)
amod(system-15, micro-13)
amod(system-15, socialist-14)
dobj(have-10, system-15)
root(ROOT-0, e.g.-17)
det(farm-20, a-18)
amod(farm-20, collectivized-19)
dobj(e.g.-17, farm-20)
appos(farm-20, kibbutz-22)
det(system-28, a-25)
amod(system-28, socialist-26)
nn(system-28, healthcare-27)
dobj(e.g.-17, system-28)
conj_or(farm-20, system-28)
det(system-35, a-32)
advmod(system-35, fully-33)
amod(system-35, socialist-34)
prep_under(tolerated-44, system-35)
det(system-40, a-36)
amod(system-40, micro-37)
amod(system-40, free-38)
nn(system-40, market-39)
nsubjpass(tolerated-44, system-40)
aux(tolerated-44, would-41)
neg(tolerated-44, never-42)
auxpass(tolerated-44, be-43)
conj_but(e.g.-17, tolerated-44)

(ROOT
  (S
    (NP (DT The) (NN reason))
    (VP (VBZ is)
      (SBAR
        (SBAR (IN that)
          (S
            (PP (IN under)
              (NP (NN capitalism)))
            (NP (DT the) (NN individual))
            (VP (VBZ is)
              (ADJP (JJ sovereign)))))
        (, ,)
        (CC and)
        (SBAR
          (SBAR (IN so)
            (S
              (VP (MD can)
                (VP (VB be)
                  (NP
                    (NP (DT a) (NN capitalist))
                    (CC or)
                    (NP (DT a) (NN communist)))))))
          (CC or)
          (SBAR
            (WHADVP (WDT whatever))
            (, ,)
            (S
              (NP (DT the) (NN state))
              (VP (VBZ is)
                (ADVP (RB only))
                (ADVP (RB there))
                (S
                  (VP (TO to)
                    (VP (VB protect)
                      (NP (PRP$ his) (NN freedom)))))))))))
    (. .)))

det(reason-2, The-1)
nsubj(is-3, reason-2)
root(ROOT-0, is-3)
complm(sovereign-10, that-4)
prep_under(sovereign-10, capitalism-6)
det(individual-8, the-7)
nsubj(sovereign-10, individual-8)
cop(sovereign-10, is-9)
ccomp(is-3, sovereign-10)
mark(capitalist-17, so-13)
aux(capitalist-17, can-14)
cop(capitalist-17, be-15)
det(capitalist-17, a-16)
ccomp(is-3, capitalist-17)
conj_and(sovereign-10, capitalist-17)
det(communist-20, a-19)
conj_and(sovereign-10, communist-20)
conj_or(capitalist-17, communist-20)
advmod(is-26, whatever-22)
det(state-25, the-24)
nsubj(is-26, state-25)
xsubj(protect-30, state-25)
conj_and(sovereign-10, is-26)
conj_or(capitalist-17, is-26)
advmod(is-26, only-27)
advmod(is-26, there-28)
aux(protect-30, to-29)
xcomp(is-26, protect-30)
poss(freedom-32, his-31)
dobj(protect-30, freedom-32)

