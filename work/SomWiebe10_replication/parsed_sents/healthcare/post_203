(ROOT
  (S
    (NP (NNP Universal) (NN health) (NN care))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (VP (VBN reversed)
          (SBAR (RB even) (IN if)
            (S
              (NP (NNS costs))
              (VP (VB explode)
                (SBAR
                  (S
                    (NP (NNP Universal) (NN health) (NN care))
                    (, ,)
                    (PP (IN like)
                      (NP (DT any) (NN government) (NN benefit)))
                    (, ,)
                    (VP (VBZ is)
                      (ADVP (RB eventually))
                      (VP (VBG going)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN interpreted)
                                (PP (IN as)
                                  (NP
                                    (NP (DT a) (`` ``) (NN right) ('' ''))
                                    (PP (IN by)
                                      (NP (DT the) (NN public))))))))))))))))
          (, ,)
          (S
            (VP (VBG making)
              (S
                (NP (PRP it))
                (ADJP (RB politically) (JJ impossible))
                (S
                  (VP (TO to)
                    (VP (VB curtail)
                      (NP (DT the) (NN program))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP it))
                          (VP (VBZ becomes)
                            (ADJP (RB too) (JJ costly))))))))))))))
    (. .)))

nn(care-3, Universal-1)
nn(care-3, health-2)
nsubjpass(reversed-7, care-3)
aux(reversed-7, ca-4)
neg(reversed-7, n't-5)
auxpass(reversed-7, be-6)
root(ROOT-0, reversed-7)
advmod(explode-11, even-8)
dep(explode-11, if-9)
nsubj(explode-11, costs-10)
ccomp(reversed-7, explode-11)
nn(care-14, Universal-12)
nn(care-14, health-13)
nsubj(going-23, care-14)
det(benefit-19, any-17)
nn(benefit-19, government-18)
prep_like(going-23, benefit-19)
aux(going-23, is-21)
advmod(going-23, eventually-22)
ccomp(explode-11, going-23)
aux(interpreted-26, to-24)
auxpass(interpreted-26, be-25)
xcomp(going-23, interpreted-26)
det(right-30, a-28)
prep_as(interpreted-26, right-30)
det(public-34, the-33)
prep_by(right-30, public-34)
xcomp(reversed-7, making-36)
nsubj(curtail-41, it-37)
advmod(impossible-39, politically-38)
dep(curtail-41, impossible-39)
aux(curtail-41, to-40)
xcomp(making-36, curtail-41)
det(program-43, the-42)
dobj(curtail-41, program-43)
advmod(costly-48, when-44)
nsubj(costly-48, it-45)
cop(costly-48, becomes-46)
advmod(costly-48, too-47)
advcl(curtail-41, costly-48)

