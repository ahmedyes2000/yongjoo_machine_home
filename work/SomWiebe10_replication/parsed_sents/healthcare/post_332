(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN eaten)))
    (. !)))

cc(eaten-4, And-1)
nsubj(eaten-4, I-2)
aux(eaten-4, 've-3)
root(ROOT-0, eaten-4)

(ROOT
  (FRAG
    (ADJP (JJ OK))
    (, ,)
    (SBAR
      (WHADVP
        (ADVP (RB so))
        (WRB why))
      (S
        (VP (VBP do)
          (S
            (NP (PRP we))
            (RB not)
            (VP (VB like)
              (NP (DT this)))))))
    (. ?)))

root(ROOT-0, OK-1)
advmod(why-4, so-3)
advmod(do-5, why-4)
dep(OK-1, do-5)
nsubj(like-8, we-6)
neg(like-8, not-7)
ccomp(do-5, like-8)
dobj(like-8, this-9)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP
            (NP (DT a) (NN lot))
            (PP (IN of)
              (NP (NN misinformation)))
            (UCP
              (VP (VBG being)
                (VP (VBN thrown)
                  (PRT (RP around))))
              (, ,)
              (CC and)
              (ADJP (RB quite) (RB frankly))))
          (, ,)
          (NP
            (NP (DT a) (NN lot))
            (PP (IN of)
              (NP (NNS lies)))))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB try)
                (CC and)
                (VB correct)
                (NP
                  (NP (DT the) (NNS ones))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBP hear)
                        (ADVP (RBS most) (RB often))))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(lot-4, a-3)
nsubj('s-2, lot-4)
prep_of(lot-4, misinformation-6)
auxpass(thrown-8, being-7)
dep(lot-4, thrown-8)
prt(thrown-8, around-9)
advmod(frankly-13, quite-12)
dep(lot-4, frankly-13)
conj_and(thrown-8, frankly-13)
det(lot-16, a-15)
appos(lot-4, lot-16)
prep_of(lot-16, lies-18)
dep('s-2, so-20)
nsubj(going-23, I-21)
xsubj(try-25, I-21)
aux(going-23, 'm-22)
ccomp('s-2, going-23)
aux(try-25, to-24)
xcomp(going-23, try-25)
xcomp(going-23, correct-27)
conj_and(try-25, correct-27)
det(ones-29, the-28)
dobj(try-25, ones-29)
dobj(hear-31, ones-29)
nsubj(hear-31, I-30)
rcmod(ones-29, hear-31)
advmod(often-33, most-32)
advmod(hear-31, often-33)

(ROOT
  (FRAG
    (ADJP (JJ http:\/\/www.youtube.com\/watch?v=Pmm87LytlgQ))
    (SBAR
      (WHNP (WDT Which))
      (S
        (NP (PRP I))
        (VP (MD 'll)
          (VP (VB summarize)
            (ADVP (RB again))))))
    (. .)))

root(ROOT-0, http:\/\/www.youtube.com\/watch?v=Pmm87LytlgQ-1)
dobj(summarize-5, Which-2)
nsubj(summarize-5, I-3)
aux(summarize-5, 'll-4)
dep(http:\/\/www.youtube.com\/watch?v=Pmm87LytlgQ-1, summarize-5)
advmod(summarize-5, again-6)

(ROOT
  (S
    (NP (NNP Feel))
    (VP (VBP free)
      (S
        (VP (TO to)
          (VP (VB act)
            (NP (DT this))
            (PRT (RP out))
            (PP (IN on)
              (NP (PRP$ your) (JJ own)))))))
    (. .)))

nsubj(free-2, Feel-1)
xsubj(act-4, Feel-1)
root(ROOT-0, free-2)
aux(act-4, to-3)
xcomp(free-2, act-4)
dobj(act-4, this-5)
prt(act-4, out-6)
poss(own-9, your-8)
prep_on(act-4, own-9)

(ROOT
  (S ('' '')
    (S
      (S
        (VP (VB Morris))
        (: :))
      (CC And)
      (S
        (NP (WDT what))
        (NP (NNP 's) (NN going))))
    (IN to)
    (S
      (S
        (VP (VB happen)))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ same) (NN thing))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ goes)
                (PRT (RP on))
                (PP (IN in)
                  (NP (NNP Canada)))))))))
    (. .)))

root(ROOT-0, Morris-2)
dep(going-7, what-5)
nn(going-7, 's-6)
conj_and(Morris-2, going-7)
dep(Morris-2, to-8)
csubj(thing-13, happen-9)
cop(thing-13, is-10)
det(thing-13, the-11)
amod(thing-13, same-12)
ccomp(Morris-2, thing-13)
nsubj(goes-15, thing-13)
rcmod(thing-13, goes-15)
prt(goes-15, on-16)
prep_in(goes-15, Canada-18)

(ROOT
  (S
    (PP (IN Because)
      (PP (IN of)
        (NP
          (NP (DT the) (JJ long) (NN wait))
          (PP (IN for)
            (NP (NNS colonoscopies))))))
    (, ,)
    (NP
      (NP (DT the) (NN incidence))
      (PP (IN of)
        (NP
          (NP (NN colon) (NN cancer))
          (PP (IN in)
            (NP (NNP Canada))))))
    (VP (VBZ is)
      (PP
        (ADVP
          (NP (CD 25) (NN percent))
          (RBR higher))
        (IN than) (IN in)
        (NP (DT the) (NNP US))))
    (. .)))

prepc_because_of(is-16, of-2)
det(wait-5, the-3)
amod(wait-5, long-4)
pobj(is-16, wait-5)
prep_for(wait-5, colonoscopies-7)
det(incidence-10, the-9)
nsubj(is-16, incidence-10)
nn(cancer-13, colon-12)
prep_of(incidence-10, cancer-13)
prep_in(cancer-13, Canada-15)
root(ROOT-0, is-16)
num(percent-18, 25-17)
npadvmod(higher-19, percent-18)
advmod(is-16, higher-19)
dep(is-16, than-20)
det(US-23, the-22)
prep_in(is-16, US-23)

(ROOT
  (S (CC And)
    (SBAR (IN because)
      (S
        (NP
          (NP (DT the) (CD two) (JJ top) (NNS drugs))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP use)
                (PP (IN for)
                  (NP
                    (NP (NN chemotherapy))
                    (PP (IN for)
                      (NP (JJ advanced) (NN stage) (NN colon) (NN cancer)))))))))
        (VP (VBP are) (RB not)
          (ADJP (JJ available)
            (PP (IN in)
              (NP
                (NP (NNP Canada))
                (PP (RB because) (IN of)
                  (NP (NNS costs)))))))))
    (, ,)
    (NP (DT the) (NN death) (NN rate))
    (VP (VBZ is)
      (ADJP
        (NP (CD 2) (NN %))
        (JJR higher)))
    (. .)))

cc(higher-31, And-1)
mark(available-18, because-2)
det(drugs-6, the-3)
num(drugs-6, two-4)
amod(drugs-6, top-5)
dobj(use-8, drugs-6)
nsubj(available-18, drugs-6)
nsubj(use-8, we-7)
rcmod(drugs-6, use-8)
prep_for(use-8, chemotherapy-10)
amod(cancer-15, advanced-12)
nn(cancer-15, stage-13)
nn(cancer-15, colon-14)
prep_for(chemotherapy-10, cancer-15)
cop(available-18, are-16)
neg(available-18, not-17)
advcl(higher-31, available-18)
prep_in(available-18, Canada-20)
prep_because_of(Canada-20, costs-23)
det(rate-27, the-25)
nn(rate-27, death-26)
nsubj(higher-31, rate-27)
cop(higher-31, is-28)
num(%-30, 2-29)
npadvmod(higher-31, %-30)
root(ROOT-0, higher-31)

(ROOT
  (S
    (NP
      (NP (CD 41) (NN percent))
      (PP (IN of)
        (NP (NNPS Canadians))))
    (VP (VBP die)
      (PP (IN of)
        (NP (NN colon) (NN cancer)))
      (PP (VBN compared)
        (PP (TO to)
          (NP
            (NP (CD 32))
            (PP (IN in)
              (NP (DT the) (NNP US)))))))
    (. .)))

num(percent-2, 41-1)
nsubj(die-5, percent-2)
prep_of(percent-2, Canadians-4)
root(ROOT-0, die-5)
nn(cancer-8, colon-7)
prep_of(die-5, cancer-8)
prepc_compared_to(die-5, to-10)
pobj(die-5, 32-11)
det(US-14, the-13)
prep_in(32-11, US-14)

(ROOT
  (S
    (NP
      (NP (NNP O'Reilly))
      (: :)
      (SBAR
        (WHNP (WDT That))
        (S
          (VP (VBZ is)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP
                  (NP (DT the)
                    (ADJP (RBS most) (JJ compelling))
                    (NNS things))
                  (PP (IN about)
                    (NP (PRP$ your) (NN book)))))))))
      (, ,))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VB deliver)
            (NP
              (NP (NNS statistics))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP say)
                    (SBAR
                      (S
                        (NP (NNPS Americans))
                        (VP (VBP are)
                          (NP
                            (NP (DT a) (NN lot))
                            (JJR healthier))
                          (SBAR (IN than)
                            (S
                              (NP (NNPS Canadians))
                              (VP (VBP are)
                                (PP (IN in)
                                  (NP
                                    (NP (DT the) (JJ vital) (NN disease) (NN category) (NN heart) (NN disease))
                                    (, ,)
                                    (NP
                                      (NP (NN cancer))
                                      (, ,)
                                      (NP
                                        (NP (NNS things))
                                        (PP (IN like)
                                          (NP (DT that)))))))))))))))))))))
    (. .)))

nsubj(is-15, O'Reilly-1)
nsubj(one-5, That-3)
cop(one-5, is-4)
rcmod(O'Reilly-1, one-5)
det(things-10, the-7)
advmod(compelling-9, most-8)
amod(things-10, compelling-9)
prep_of(one-5, things-10)
poss(book-13, your-12)
prep_about(things-10, book-13)
root(ROOT-0, is-15)
complm(deliver-18, that-16)
nsubj(deliver-18, you-17)
ccomp(is-15, deliver-18)
dobj(deliver-18, statistics-19)
nsubj(say-21, statistics-19)
rcmod(statistics-19, say-21)
nsubj(healthier-26, Americans-22)
cop(healthier-26, are-23)
det(lot-25, a-24)
dep(healthier-26, lot-25)
ccomp(say-21, healthier-26)
mark(are-29, than-27)
nsubj(are-29, Canadians-28)
advcl(healthier-26, are-29)
det(disease-36, the-31)
amod(disease-36, vital-32)
nn(disease-36, disease-33)
nn(disease-36, category-34)
nn(disease-36, heart-35)
prep_in(are-29, disease-36)
appos(disease-36, cancer-38)
appos(cancer-38, things-40)
prep_like(things-40, that-42)

(ROOT
  (FRAG
    (NP (NNP Morris))
    (: :)
    (S
      (VP (VB Let)
        (S
          (NP (POS 's))
          (VP (VB quantify)
            (NP (PRP it))))))
    (. .)))

root(ROOT-0, Morris-1)
dep(Morris-1, Let-3)
nsubj(quantify-5, 's-4)
ccomp(Let-3, quantify-5)
dobj(quantify-5, it-6)

(ROOT
  (NP
    (NP (CD 6) (NN percent))
    (NP
      (NP (JJR lower) (NN death) (NN rate))
      (PP (IN from)
        (NP
          (NP (NN heart) (NN disease))
          (CC and)
          (NP (DT a) (CD 16) (NN percent)))))
    (NP
      (NP (JJR lower) (NN death) (NN rate))
      (PP (IN from)
        (NP
          (NP (NN cancer))
          (PP (IN in)
            (NP (DT the) (NNP US))))))
    (. .)))

num(percent-2, 6-1)
root(ROOT-0, percent-2)
amod(rate-5, lower-3)
nn(rate-5, death-4)
dep(percent-2, rate-5)
nn(disease-8, heart-7)
prep_from(rate-5, disease-8)
det(percent-12, a-10)
num(percent-12, 16-11)
prep_from(rate-5, percent-12)
conj_and(disease-8, percent-12)
amod(rate-15, lower-13)
nn(rate-15, death-14)
dep(percent-2, rate-15)
prep_from(rate-15, cancer-17)
det(US-20, the-19)
prep_in(cancer-17, US-20)

(ROOT
  (S (CC And)
    (NP (NNP Canada))
    (VP (VBZ has)
      (NP
        (ADJP (RBR more) (JJ poor))
        (NNS people)))
    (. .)))

cc(has-3, And-1)
nsubj(has-3, Canada-2)
root(ROOT-0, has-3)
advmod(poor-5, more-4)
amod(people-6, poor-5)
dobj(has-3, people-6)

(ROOT
  (S ('' '')
    (NP (EX There))
    (VP (VBP are)
      (NP (CD two) (NNS possibilities))
      (ADVP (RB here)))
    (. .)))

expl(are-3, There-2)
root(ROOT-0, are-3)
num(possibilities-5, two-4)
nsubj(are-3, possibilities-5)
advmod(are-3, here-6)

(ROOT
  (S
    (NP (PRP One))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNP Dick) (NNP Morris))
          (VP (VBZ is)
            (VP (VBG telling)
              (NP (DT the) (NN truth)))))))
    (. .)))

nsubj(is-2, One-1)
root(ROOT-0, is-2)
complm(telling-7, that-3)
nn(Morris-5, Dick-4)
nsubj(telling-7, Morris-5)
aux(telling-7, is-6)
ccomp(is-2, telling-7)
det(truth-9, the-8)
dobj(telling-7, truth-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBZ is))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB compare)
            (NP (DT the) (NN survival) (NNS rates))
            (PP (TO to)
              (NP
                (NP (DT the) (NN amount))
                (PP (IN of)
                  (NP
                    (NP (NN money))
                    (VP (VBG going)
                      (PRT (RP in)))))))))))
    (. .)))

mark(is-3, If-1)
nsubj(is-3, he-2)
advcl(have-7, is-3)
advmod(have-7, then-5)
nsubj(have-7, you-6)
xsubj(compare-9, you-6)
root(ROOT-0, have-7)
aux(compare-9, to-8)
xcomp(have-7, compare-9)
det(rates-12, the-10)
nn(rates-12, survival-11)
dobj(compare-9, rates-12)
det(amount-15, the-14)
prep_to(compare-9, amount-15)
prep_of(amount-15, money-17)
partmod(money-17, going-18)
prt(going-18, in-19)

(ROOT
  (S
    (S
      (VP (VB Remember)))
    (, ,)
    (NP (NNPS Canadians))
    (VP (VBP spend)
      (NP
        (NP
          (QP (NN half) (IN as) (JJ much)))
        (PP (IN as)
          (NP (NNPS Americans)))
        (ADJP (IN per) (NN capita)))
      (PP (IN on)
        (NP (NN health) (NN care))))
    (. .)))

ccomp(spend-4, Remember-1)
nsubj(spend-4, Canadians-3)
root(ROOT-0, spend-4)
dobj(spend-4, half-5)
quantmod(half-5, as-6)
quantmod(half-5, much-7)
prep_as(half-5, Americans-9)
dep(capita-11, per-10)
amod(half-5, capita-11)
nn(care-14, health-13)
prep_on(spend-4, care-14)

(ROOT
  (NP
    (NP (CD 6) (NN %))
    (PP (IN for)
      (NP
        (ADJP
          (NP (CD 50) (NN %))
          (JJR less))
        (NN money)))
    (. ?)))

num(%-2, 6-1)
root(ROOT-0, %-2)
num(%-5, 50-4)
npadvmod(less-6, %-5)
amod(money-7, less-6)
prep_for(%-2, money-7)

(ROOT
  (INTJ (UH Okay) (. .)))

root(ROOT-0, Okay-1)

(ROOT
  (S
    (NP (DT The) (JJ other) (NN possibility))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBZ 's) (RB not)
            (VP (VBG telling)
              (NP (DT the) (NN truth)))))))
    (. .)))

det(possibility-3, The-1)
amod(possibility-3, other-2)
nsubj(is-4, possibility-3)
root(ROOT-0, is-4)
complm(telling-9, that-5)
nsubj(telling-9, he-6)
aux(telling-9, 's-7)
neg(telling-9, not-8)
ccomp(is-4, telling-9)
det(truth-11, the-10)
dobj(telling-9, truth-11)

(ROOT
  (S
    (VP (VB Remember)
      (NP
        (NP (DT the) (CD 12,000))
        (, ,)
        (NP (CD 18,000))
        (CC and)
        (NP (CD 100,000) (NNS numbers))))
    (. .)))

root(ROOT-0, Remember-1)
det(12,000-3, the-2)
dobj(Remember-1, 12,000-3)
dobj(Remember-1, 18,000-5)
conj_and(12,000-3, 18,000-5)
num(numbers-8, 100,000-7)
dobj(Remember-1, numbers-8)
conj_and(12,000-3, numbers-8)

(ROOT
  (S
    (NP
      (NP (NNP First))
      (PP (IN of)
        (NP
          (NP (DT all))
          (, ,)
          (NP (NNS people)))))
    (VP (VBP are)
      (VP (VBG calling)
        (NP (PRP it))
        (NP (JJ single) (NN payer))))
    (. .)))

nsubj(calling-7, First-1)
prep_of(First-1, all-3)
appos(all-3, people-5)
aux(calling-7, are-6)
root(ROOT-0, calling-7)
iobj(calling-7, it-8)
amod(payer-10, single-9)
dobj(calling-7, payer-10)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (NP (NN check))
    (VP (VBZ THIS)
      (PRT (RP out)))
    (. .)))

advmod(THIS-4, Also-1)
nsubj(THIS-4, check-3)
root(ROOT-0, THIS-4)
prt(THIS-4, out-5)

(ROOT
  (S
    (NP (DT A) (JJ large) (NN study))
    (VP (VBD found)
      (SBAR (IN that)
        (S
          (NP
            (NP (JJ five-year) (NN survival) (NNS rates))
            (PP (IN for)
              (NP
                (NP (JJ many) (NNS diseases))
                (PP (IN in)
                  (NP (DT this) (NN country))))))
          (VP (VBP are)
            (ADJP
              (ADJP (RB no) (JJR better))
              (SBAR (IN than)
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (PP (IN in)
                      (NP
                        (NP (NNS countries))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBP spend)
                              (ADVP (RB far) (RBR less))
                              (PP (IN on)
                                (NP (NN health) (NN care))))))))))))))))
    (. .)))

det(study-3, A-1)
amod(study-3, large-2)
nsubj(found-4, study-3)
root(ROOT-0, found-4)
complm(better-17, that-5)
amod(rates-8, five-year-6)
nn(rates-8, survival-7)
nsubj(better-17, rates-8)
amod(diseases-11, many-10)
prep_for(rates-8, diseases-11)
det(country-14, this-13)
prep_in(diseases-11, country-14)
cop(better-17, are-15)
advmod(better-17, no-16)
ccomp(found-4, better-17)
mark(are-20, than-18)
nsubj(are-20, they-19)
dep(better-17, are-20)
prep_in(are-20, countries-22)
nsubj(spend-24, countries-22)
rcmod(countries-22, spend-24)
advmod(less-26, far-25)
advmod(spend-24, less-26)
nn(care-29, health-28)
prep_on(spend-24, care-29)

(ROOT
  (S
    (NP (NNS People))
    (ADVP (RB here))
    (VP (VBP are)
      (ADJP (RBR less) (JJ likely)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (JJ long-term) (NN survival))
              (PP (IN after)
                (NP
                  (NP (JJ colorectal) (NN cancer))
                  (, ,)
                  (NP (NN childhood) (NN leukemia))
                  (, ,)
                  (CC or)
                  (NP (DT a) (NN kidney) (NN transplant))))
              (SBAR (IN than)
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (PP (IN in)
                      (NP (NNP Canada)))))))))))
    (. .)))

nsubj(likely-5, People-1)
advmod(likely-5, here-2)
cop(likely-5, are-3)
advmod(likely-5, less-4)
root(ROOT-0, likely-5)
aux(have-7, to-6)
xcomp(likely-5, have-7)
amod(survival-9, long-term-8)
dobj(have-7, survival-9)
amod(cancer-12, colorectal-11)
prep_after(have-7, cancer-12)
nn(leukemia-15, childhood-14)
prep_after(have-7, leukemia-15)
conj_or(cancer-12, leukemia-15)
det(transplant-20, a-18)
nn(transplant-20, kidney-19)
prep_after(have-7, transplant-20)
conj_or(cancer-12, transplant-20)
mark(are-23, than-21)
nsubj(are-23, they-22)
advcl(have-7, are-23)
prep_in(are-23, Canada-25)

(ROOT
  (S
    (S
      (VP (VBG http:\/\/www.nytimes.com\/2009\/06\/17\/business\/economy\/17leonhardt.html?ref=todayspaper)
        (PP (VBG According)
          (PP (TO to)
            (NP
              (NP (DT the) (NNP Organization))
              (PP (IN for)
                (NP (NNP Economic) (NNP Cooperation)
                  (CC and)
                  (NNP Development))))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP spend)
      (NP
        (NP
          (NP ($ $) (CD 412))
          (PP (IN per)
            (NP
              (NP (NN person))
              (PP (IN on)
                (NP (NN health) (NN care) (JJ administrative) (NNS costs))))))
        (, ,)
        (CC versus)
        (NP
          (NP (DT an) (NN average))
          (PP (IN of)
            (NP
              (NP ($ $) (CD 72))
              (PP (IN for)
                (NP (NNP peer) (NNP OECD) (NNS countries))))))))
    (. .)))

partmod(spend-13, http:\/\/www.nytimes.com\/2009\/06\/17\/business\/economy\/17leonhardt.html?ref=todayspaper-1)
prepc_according_to(http:\/\/www.nytimes.com\/2009\/06\/17\/business\/economy\/17leonhardt.html?ref=todayspaper-1, to-3)
det(Organization-5, the-4)
pobj(http:\/\/www.nytimes.com\/2009\/06\/17\/business\/economy\/17leonhardt.html?ref=todayspaper-1, Organization-5)
nn(Cooperation-8, Economic-7)
prep_for(Organization-5, Cooperation-8)
prep_for(Organization-5, Development-10)
conj_and(Cooperation-8, Development-10)
nsubj(spend-13, we-12)
root(ROOT-0, spend-13)
dobj(spend-13, $-14)
num($-14, 412-15)
prep_per($-14, person-17)
nn(costs-22, health-19)
nn(costs-22, care-20)
amod(costs-22, administrative-21)
prep_on(person-17, costs-22)
det(average-26, an-25)
dobj(spend-13, average-26)
conj_versus($-14, average-26)
prep_of(average-26, $-28)
num($-28, 72-29)
nn(countries-33, peer-31)
nn(countries-33, OECD-32)
prep_for($-28, countries-33)

(ROOT
  (NP
    (NP (CD Six) (NNS times))
    (QP (RB as) (JJ much))
    (. .)))

num(times-2, Six-1)
root(ROOT-0, times-2)
quantmod(much-4, as-3)
num(times-2, much-4)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ 's)
      (NP (DT a) (JJ cool) (NN graph) (NN thing)))
    (. .)))

nsubj(thing-6, Here-1)
cop(thing-6, 's-2)
det(thing-6, a-3)
amod(thing-6, cool-4)
nn(thing-6, graph-5)
root(ROOT-0, thing-6)

(ROOT
  (S
    (NP
      (NP
        (NP (NN http:\/\/www.mckinsey.com\/mgi\/publications\/healthcare\/slideshow\/interactive.asp) (NN Something))
        (RB else)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP keep)))))
      (VP (VBG hearing)))
    (VP (VBZ is)
      (NP
        (QP (RB about) (CD wait) (NNS times))))
    (. .)))

nn(Something-2, http:\/\/www.mckinsey.com\/mgi\/publications\/healthcare\/slideshow\/interactive.asp-1)
dobj(keep-5, Something-2)
nsubj(times-10, Something-2)
advmod(Something-2, else-3)
nsubj(keep-5, I-4)
rcmod(Something-2, keep-5)
partmod(Something-2, hearing-6)
cop(times-10, is-7)
quantmod(times-10, about-8)
number(times-10, wait-9)
root(ROOT-0, times-10)

(ROOT
  (S
    (NP
      (NP (NNP Canada))
      (, ,)
      (NP (DT the) (NNP UK))
      (, ,))
    (VP (VBZ oh)
      (NP (DT the) (NNP Wait) (NNP Times)))
    (. .)))

nsubj(oh-6, Canada-1)
det(UK-4, the-3)
appos(Canada-1, UK-4)
root(ROOT-0, oh-6)
det(Times-9, the-7)
nn(Times-9, Wait-8)
dobj(oh-6, Times-9)

(ROOT
  (S
    (ADVP (RB Often))
    (NP (EX there))
    (VP (VBP are)
      (ADJP (JJ anecdotes)))
    (. .)))

advmod(are-3, Often-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
acomp(are-3, anecdotes-4)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBD went)
      (PP (TO to)
        (NP (NNP Business) (NNP Week)))
      (NP
        (NP (NN magazine))
        (, ,)
        (NP (DT the) (NNP INCREDIBLY) (NNP LIBERAL) (NNP SOURCE))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD was)
              (VP (VBG studying)
                (NP (DT the) (NN issue))))))))
    (. .)))

dep(went-3, So-1)
nsubj(went-3, I-2)
root(ROOT-0, went-3)
nn(Week-6, Business-5)
prep_to(went-3, Week-6)
dobj(went-3, magazine-7)
det(SOURCE-12, the-9)
nn(SOURCE-12, INCREDIBLY-10)
nn(SOURCE-12, LIBERAL-11)
appos(magazine-7, SOURCE-12)
nsubj(studying-16, SOURCE-12)
aux(studying-16, was-15)
rcmod(magazine-7, studying-16)
rcmod(SOURCE-12, studying-16)
det(issue-18, the-17)
dobj(studying-16, issue-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
neg('s-2, not-3)

(ROOT
  (S ('' '')
    (PP (IN In)
      (NP (NN reality)))
    (, ,)
    (NP (DT both) (NNS data)
      (CC and)
      (NNS anecdotes))
    (VP (VBP show)
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ American) (NNS people))
          (VP (VBP are)
            (ADVP (RB already))
            (VP (VBG waiting)
              (ADVP (RB as) (RB long)
                (CC or)
                (RB longer))
              (PP (IN than)
                (NP
                  (NP (NNS patients))
                  (VP (VBG living)
                    (PP (IN with)
                      (NP (JJ universal) (NN health) (NN care) (NNS systems)))))))))))
    (. .)))

prep_in(show-9, reality-3)
preconj(data-6, both-5)
nsubj(show-9, data-6)
conj_and(data-6, anecdotes-8)
nsubj(show-9, anecdotes-8)
root(ROOT-0, show-9)
complm(waiting-16, that-10)
det(people-13, the-11)
amod(people-13, American-12)
nsubj(waiting-16, people-13)
aux(waiting-16, are-14)
advmod(waiting-16, already-15)
ccomp(show-9, waiting-16)
dep(long-18, as-17)
advmod(waiting-16, long-18)
advmod(waiting-16, longer-20)
conj_or(long-18, longer-20)
prep_than(waiting-16, patients-22)
partmod(patients-22, living-23)
amod(systems-28, universal-25)
nn(systems-28, health-26)
nn(systems-28, care-27)
prep_with(living-23, systems-28)

(ROOT
  (S ('' '')
    (NP (NNS http:\/\/www.businessweek.com\/magazine\/content\/07_28\/b4042072.htm))
    (ADVP (RB So))
    (VP (VBP remember))
    (. .)))

nsubj(remember-4, http:\/\/www.businessweek.com\/magazine\/content\/07_28\/b4042072.htm-2)
advmod(remember-4, So-3)
root(ROOT-0, remember-4)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP 've)
        (VP (VBN got)
          (NP (DT the) (JJ same) (NN wait) (NNS times)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBP spend)
        (ADVP (RB twice))
        (PP (IN as)
          (NP (JJ much) (NN money)))))
    (. .)))

nsubj(got-3, We-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
det(times-7, the-4)
amod(times-7, same-5)
nn(times-7, wait-6)
dobj(got-3, times-7)
nsubj(spend-11, we-10)
conj_but(got-3, spend-11)
advmod(spend-11, twice-12)
amod(money-15, much-14)
prep_as(spend-11, money-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (NNP Canada) (, ,) (NNP France) (, ,) (NNP GB))
          (, ,)
          (X (NN etc.)))
        (VP (VBD doubled)
          (NP
            (NP (DT the) (NN money))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBD were)
                  (VP (VBG spending)
                    (PP (IN on)
                      (NP (NN health) (NN care)))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ incredible))))
    (. .)))

mark(doubled-9, If-1)
nn(GB-6, Canada-2)
appos(GB-6, France-4)
nsubj(doubled-9, GB-6)
dep(GB-6, etc.-8)
advcl(incredible-22, doubled-9)
det(money-11, the-10)
dobj(doubled-9, money-11)
dobj(spending-14, money-11)
nsubj(spending-14, they-12)
aux(spending-14, were-13)
rcmod(money-11, spending-14)
nn(care-17, health-16)
prep_on(spending-14, care-17)
nsubj(incredible-22, it-19)
aux(incredible-22, would-20)
cop(incredible-22, be-21)
root(ROOT-0, incredible-22)

(ROOT
  (S
    (NP (EX There))
    (VP (MD 'd)
      (VP (VB be)
        (NP (NN house) (NNS calls))))
    (. !)))

expl(calls-5, There-1)
aux(calls-5, 'd-2)
cop(calls-5, be-3)
nn(calls-5, house-4)
root(ROOT-0, calls-5)

(ROOT
  (FRAG
    (NP (JJ Best) (NN hospital) (NN food))
    (ADVP (RB ever))
    (. !)))

amod(food-3, Best-1)
nn(food-3, hospital-2)
root(ROOT-0, food-3)
dep(food-3, ever-4)

(ROOT
  (S
    (NP (JJ Wait) (NNS times))
    (VP (MD would) (RB n't)
      (VP (VB exist)))
    (. !)))

amod(times-2, Wait-1)
nsubj(exist-5, times-2)
aux(exist-5, would-3)
neg(exist-5, n't-4)
root(ROOT-0, exist-5)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (PP (IN in)
          (NP (DT the) (NNP US)))
        (VP (VBD cut)
          (NP (PRP$ our) (JJ medical) (NN expenditure))
          (PP (IN in)
            (NP
              (NP (NN half))
              (, ,)
              (SBAR
                (WHNP (WRB how) (RB long))
                (S
                  (VP (MD would)))))))))
    (NP (PRP$ our) (NN wait) (NNS times))
    (VP (VBP be))
    (. ?)))

advmod(be-21, Now-1)
mark(cut-8, if-3)
nsubj(cut-8, we-4)
det(US-7, the-6)
prep_in(cut-8, US-7)
dep(be-21, cut-8)
poss(expenditure-11, our-9)
amod(expenditure-11, medical-10)
dobj(cut-8, expenditure-11)
prep_in(cut-8, half-13)
advmod(long-16, how-15)
advmod(would-17, long-16)
nsubj(would-17, long-16)
rcmod(half-13, would-17)
poss(times-20, our-18)
nn(times-20, wait-19)
nsubj(be-21, times-20)
root(ROOT-0, be-21)

(ROOT
  (SBARQ
    (WHADJP (WRB How) (JJ bad))
    (SQ (MD would)
      (NP (PRP it))
      (VP (VB get)))
    (. ?)))

advmod(bad-2, How-1)
dep(get-5, bad-2)
aux(get-5, would-3)
nsubj(get-5, it-4)
root(ROOT-0, get-5)

(ROOT
  (SBARQ (RB So)
    (WHADVP (WRB why))
    (SQ (VBP are)
      (NP (NNS people) (JJ ACTUALLY))
      (VP (VBG hating)
        (PP (IN on)
          (NP (DT this)))))
    (. ?)))

advmod(hating-6, So-1)
advmod(hating-6, why-2)
aux(hating-6, are-3)
nsubj(hating-6, people-4)
amod(people-4, ACTUALLY-5)
root(ROOT-0, hating-6)
prep_on(hating-6, this-8)

(ROOT
  (NP
    (NP (NNP Same) (NNP QM) (NNP Time))
    (, ,)
    (NP (NNP Same) (NNP QM) (NNP Channel))
    (. !)))

nn(Time-3, Same-1)
nn(Time-3, QM-2)
root(ROOT-0, Time-3)
nn(Channel-7, Same-5)
nn(Channel-7, QM-6)
appos(Time-3, Channel-7)

(ROOT
  (S
    (NP (DT A) (JJ single) (NN payer) (NN system))
    (VP (VBZ is)
      (NP (CD one))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (NN government))
          (VP (VBZ pays)
            (PP (IN for)
              (NP (NN everything)))
            (PP (IN through)
              (NP (NN tax) (NN revenue))))))
      (, ,)
      (SBAR (IN like)
        (S
          (NP (PRP they))
          (VP (VBP have)
            (VP
              (PP (IN in)
                (NP (NNP Canada))))))))
    (. .)))

det(system-4, A-1)
amod(system-4, single-2)
nn(system-4, payer-3)
nsubj(one-6, system-4)
cop(one-6, is-5)
root(ROOT-0, one-6)
advmod(pays-10, where-7)
det(government-9, the-8)
nsubj(pays-10, government-9)
advcl(one-6, pays-10)
prep_for(pays-10, everything-12)
nn(revenue-15, tax-14)
prep_through(pays-10, revenue-15)
mark(in-20, like-17)
nsubj(in-20, they-18)
aux(in-20, have-19)
advcl(one-6, in-20)
pobj(in-20, Canada-21)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT a) (JJ public) (NN option)))
    (. .)))

nsubj(option-5, This-1)
cop(option-5, is-2)
det(option-5, a-3)
amod(option-5, public-4)
root(ROOT-0, option-5)

(ROOT
  (S
    (LST (JJ Second))
    (PP (IN of)
      (NP (DT all)))
    (, ,)
    (NP (NNS people))
    (VP (VBP are)
      (VP (VBG calling)
        (NP (PRP it))
        (NP (JJ socialized) (NN medicine))))
    (. .)))

dep(calling-7, Second-1)
prep_of(calling-7, all-3)
nsubj(calling-7, people-5)
aux(calling-7, are-6)
root(ROOT-0, calling-7)
iobj(calling-7, it-8)
amod(medicine-10, socialized-9)
dobj(calling-7, medicine-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB also))
      (ADJP (RB very) (RB not)))
    (. .)))

nsubj(not-5, It-1)
cop(not-5, is-2)
advmod(not-5, also-3)
advmod(not-5, very-4)
root(ROOT-0, not-5)

(ROOT
  (S
    (NP (JJ Socialized) (NN medicine))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB where))
        (S
          (S
            (NP (DT the) (NN government))
            (ADVP (RB actually))
            (VP (VBZ owns)
              (NP (DT the) (NNS hospitals))))
          (CC and)
          (S
            (NP (DT the) (NNS doctors))
            (VP (VBP are)
              (NP (NN government) (NNS employees)))))))
    (. .)))

amod(medicine-2, Socialized-1)
nsubj(is-3, medicine-2)
root(ROOT-0, is-3)
advmod(owns-8, where-4)
det(government-6, the-5)
nsubj(owns-8, government-6)
advmod(owns-8, actually-7)
advcl(is-3, owns-8)
det(hospitals-10, the-9)
dobj(owns-8, hospitals-10)
det(doctors-13, the-12)
nsubj(employees-16, doctors-13)
cop(employees-16, are-14)
nn(employees-16, government-15)
advcl(is-3, employees-16)
conj_and(owns-8, employees-16)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP England))
          (VP (VBZ has)))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
dobj(has-5, what-3)
nsubj(has-5, England-4)
ccomp('s-2, has-5)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT the) (NNP VA))
          (VP (VBZ is)))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
dobj(is-6, what-3)
det(VA-5, the-4)
nsubj(is-6, VA-5)
ccomp('s-2, is-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is) (RB not)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT this))
          (VP (VBZ is)))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
neg(is-2, not-3)
dobj(is-6, what-4)
nsubj(is-6, this-5)
ccomp(is-2, is-6)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP oppose)
            (NP (DT this))))))
    (VP (VBP like)
      (S
        (VP (TO to)
          (VP (VB tell)
            (NP (NN horror) (NNS stories))
            (PP (IN about)
              (NP
                (NP (DT the) (JJ other) (NNS countries))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP
                      (VP (VBP have)
                        (NP
                          (NP (NNS systems))
                          (PP (IN like)
                            (NP
                              (NP (DT that))
                              (, ,)
                              (NP (JJ single) (NN payer))))))
                      (CC and)
                      (VP (VBD socialized)))))))))))
    (. .)))

nsubj(oppose-3, People-1)
nsubj(like-5, People-1)
xsubj(tell-7, People-1)
rcmod(People-1, oppose-3)
dobj(oppose-3, this-4)
root(ROOT-0, like-5)
aux(tell-7, to-6)
xcomp(like-5, tell-7)
nn(stories-9, horror-8)
dobj(tell-7, stories-9)
det(countries-13, the-11)
amod(countries-13, other-12)
prep_about(tell-7, countries-13)
nsubj(have-15, countries-13)
nsubj(socialized-23, countries-13)
rcmod(countries-13, have-15)
dobj(have-15, systems-16)
prep_like(systems-16, that-18)
amod(payer-21, single-20)
appos(that-18, payer-21)
rcmod(countries-13, socialized-23)
conj_and(have-15, socialized-23)

(ROOT
  (S
    (NP
      (NP (DT The) (JJS best) (NN example))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB think)
              (PP (IN of)))))))
    (VP (VBZ is)
      (NP (DT this) (NN one)))
    (. .)))

det(example-3, The-1)
amod(example-3, best-2)
prep_of(think-6, example-3)
nsubj(one-10, example-3)
nsubj(think-6, I-4)
aux(think-6, can-5)
rcmod(example-3, think-6)
cop(one-10, is-8)
det(one-10, this-9)
root(ROOT-0, one-10)

