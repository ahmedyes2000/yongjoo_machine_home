(ROOT
  (S
    (NP
      (NP (DT The) (NN thing))
      (PP (IN about)
        (NP (JJ universal) (NN health) (NN care))))
    (, ,)
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADVP (RB definitely))
            (RB not)
            (ADJP (JJ free))))))
    (. .)))

det(thing-2, The-1)
nsubj(is-8, thing-2)
amod(care-6, universal-4)
nn(care-6, health-5)
prep_about(thing-2, care-6)
root(ROOT-0, is-8)
complm(free-14, that-9)
nsubj(free-14, it-10)
cop(free-14, 's-11)
advmod(free-14, definitely-12)
neg(free-14, not-13)
ccomp(is-8, free-14)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN money))
        (PP (IN for)
          (NP (PRP it))))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB come)
              (PP (IN from)
                (NP (RB somewhere))))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (DT that))
          (PP (IN of)
            (NP (NN course))))
        (VP (VBZ is)
          (PP (IN from)
            (NP (NNS taxes)))))
      (: ...)
      (CC and)
      (S
        (SBAR (IN as)
          (S
            (NP
              (NP (NN Government) (NN involvement))
              (PP (IN in)
                (NP (DT the) (NN health) (NN care) (NN industry))))
            (VP (VBZ has)
              (ADVP (RB only))
              (VP (VBN made)
                (S
                  (NP (NNS things))
                  (ADJP
                    (ADJP (JJR worse) (JJ overall))
                    (CC and)
                    (ADJP (RB not) (JJR better))))))))
        (, ,)
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB see)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADJP (JJ possible))
                  (SBAR
                    (SBAR (IN that)
                      (FRAG
                        (VP
                          (LST (LS 1) (-RRB- -RRB-))
                          (VB giving)
                          (NP (PRP them))
                          (S
                            (ADJP (RB even) (RBR more)
                              (SBAR
                                (S
                                  (NP (NN power))
                                  (VP (MD will)
                                    (VP (VB make)
                                      (NP (NN anything))
                                      (ADVP (RBR better)))))))))))
                    (, ,)
                    (CC and)
                    (SBAR
                      (LST (LS 2) (-RRB- -RRB-))
                      (IN that)
                      (S
                        (NP (PRP it))
                        (VP (VBZ 's)
                          (ADJP (JJ justified)
                            (S
                              (VP (TO to)
                                (VP (VB implement)
                                  (NP (DT this) (NN policy))
                                  (PP (IN at)
                                    (NP
                                      (NP (DT the) (NN expense))
                                      (PP (IN of)
                                        (NP (PDT both)
                                          (NP (DT the) (JJ sick))
                                          (CC and)
                                          (NP (DT the) (JJ healthy))))))))))))
                      (. .))))))))))))

det(money-2, The-1)
nsubj(has-5, money-2)
xsubj(come-7, money-2)
prep_for(money-2, it-4)
root(ROOT-0, has-5)
aux(come-7, to-6)
xcomp(has-5, come-7)
prep(come-7, from-8)
pobj(from-8, somewhere-9)
nsubj(is-15, that-12)
prep_of(that-12, course-14)
conj_and(has-5, is-15)
prep_from(is-15, taxes-17)
mark(made-30, as-20)
nn(involvement-22, Government-21)
nsubj(made-30, involvement-22)
det(industry-27, the-24)
nn(industry-27, health-25)
nn(industry-27, care-26)
prep_in(involvement-22, industry-27)
aux(made-30, has-28)
advmod(made-30, only-29)
advcl(see-41, made-30)
nsubj(overall-33, things-31)
nsubj(better-36, things-31)
dep(overall-33, worse-32)
xcomp(made-30, overall-33)
neg(better-36, not-35)
xcomp(made-30, better-36)
conj_and(overall-33, better-36)
nsubj(see-41, I-38)
aux(see-41, do-39)
neg(see-41, n't-40)
conj_and(has-5, see-41)
conj_and(is-15, see-41)
advmod(possible-45, how-42)
nsubj(possible-45, it-43)
cop(possible-45, 's-44)
ccomp(see-41, possible-45)
complm(giving-49, that-46)
dep(giving-49, 1-47)
dep(possible-45, giving-49)
dobj(giving-49, them-50)
advmod(more-52, even-51)
dep(giving-49, more-52)
nsubj(make-55, power-53)
aux(make-55, will-54)
dep(more-52, make-55)
dobj(make-55, anything-56)
advmod(make-55, better-57)
dep(justified-65, 2-60)
dep(justified-65, that-62)
nsubj(justified-65, it-63)
cop(justified-65, 's-64)
dep(possible-45, justified-65)
conj_and(giving-49, justified-65)
aux(implement-67, to-66)
xcomp(justified-65, implement-67)
det(policy-69, this-68)
dobj(implement-67, policy-69)
det(expense-72, the-71)
prep_at(implement-67, expense-72)
preconj(sick-76, both-74)
det(sick-76, the-75)
prep_of(expense-72, sick-76)
det(healthy-79, the-78)
prep_of(expense-72, healthy-79)
conj_and(sick-76, healthy-79)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ chooses)
          (S
            (VP (TO to)
              (VP
                (VP (VB eat)
                  (NP (JJ sugar-frosted) (NN sugar) (NNS lumps))
                  (PP (IN for)
                    (NP (NN breakfast))))
                (CC and)
                (VP (VB drink)
                  (NP
                    (NP (JJ bladder-busting) (NNS bottles))
                    (PP (IN of)
                      (NP (NN cola))))))))
          (, ,)
          (SBAR
            (NP (DT every) (NN day))
            (IN until)
            (S
              (NP (PRP they))
              (VP (VBP get)
                (NP (JJ severe) (NN diabetes))))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (NN everyone) (NN else))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB pay)
              (PP (IN for)
                (NP (PRP$ their) (NN treatment))))))))
    (. ?)))

mark(chooses-3, If-1)
nsubj(chooses-3, someone-2)
xsubj(eat-5, someone-2)
advcl(have-30, chooses-3)
aux(eat-5, to-4)
xcomp(chooses-3, eat-5)
amod(lumps-8, sugar-frosted-6)
nn(lumps-8, sugar-7)
dobj(eat-5, lumps-8)
prep_for(eat-5, breakfast-10)
xcomp(chooses-3, drink-12)
conj_and(eat-5, drink-12)
amod(bottles-14, bladder-busting-13)
dobj(drink-12, bottles-14)
prep_of(bottles-14, cola-16)
det(day-19, every-18)
dep(get-22, day-19)
dep(get-22, until-20)
nsubj(get-22, they-21)
ccomp(chooses-3, get-22)
amod(diabetes-24, severe-23)
dobj(get-22, diabetes-24)
advmod(have-30, why-26)
aux(have-30, should-27)
nn(else-29, everyone-28)
nsubj(have-30, else-29)
xsubj(pay-32, else-29)
root(ROOT-0, have-30)
aux(pay-32, to-31)
xcomp(have-30, pay-32)
poss(treatment-35, their-34)
prep_for(pay-32, treatment-35)

(ROOT
  (S
    (VP (VBZ Takes)
      (PRT (RP away))
      (NP (DT an) (NN incentive)
        (S
          (VP (TO to)
            (VP (VB choose)
              (NP (DT a) (JJ healthy) (NN lifestyle)))))))
    (. .)))

root(ROOT-0, Takes-1)
prt(Takes-1, away-2)
det(incentive-4, an-3)
dobj(Takes-1, incentive-4)
aux(choose-6, to-5)
infmod(incentive-4, choose-6)
det(lifestyle-9, a-7)
amod(lifestyle-9, healthy-8)
dobj(choose-6, lifestyle-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NN system))
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBZ stands)))))
    (ADVP (RB now))
    (VP (VBZ is)
      (ADJP (RB no) (JJ good)
        (PP (IN at)
          (NP (DT all))))
      (, ,)
      (SBAR
        (ADVP (RB largely))
        (IN because)
        (FRAG
          (PP (IN of)
            (NP (NN Government) (NN involvement))))))
    (. .)))

det(system-2, The-1)
dobj(stands-5, system-2)
nsubj(good-9, system-2)
mark(stands-5, as-3)
nsubj(stands-5, it-4)
dep(system-2, stands-5)
advmod(good-9, now-6)
cop(good-9, is-7)
advmod(good-9, no-8)
root(ROOT-0, good-9)
prep_at(good-9, all-11)
advmod(good-9, largely-13)
nn(involvement-17, Government-16)
prep_because_of(good-9, involvement-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (PP (TO to)
        (NP (PRP me)))
      (SBAR (IN that)
        (S
          (NP (DT the) (NNP Insurance\/Pharmaceutical) (NNS industries))
          (VP (VBP have)
            (VP (VBN penetrated)
              (NP
                (NP (NNP Congress))
                (PP (IN with)
                  (NP (PRP$ their) (NNS lobbyists))))
              (PP (TO to)
                (NP (PDT such) (DT an) (NN extent)))
              (SBAR (IN as)
                (S
                  (S
                    (VP (TO to)
                      (VP (VB get)
                        (NP (JJ regulatory) (NNS laws)))))
                  (VP (VBD passed)
                    (SBAR (IN that)
                      (S
                        (S
                          (VP (VB stifle)
                            (NP (JJ fair) (NN competition))))
                        (, ,)
                        (S
                          (VP (VBG giving)
                            (NP (PRP them))
                            (NP
                              (NP (DT the) (NN advantage))
                              (PP (IN of)
                                (NP (DT a) (NN cartel))))))))))))))))
    (. .)))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
prep_to(seems-2, me-4)
complm(penetrated-10, that-5)
det(industries-8, the-6)
nn(industries-8, Insurance\/Pharmaceutical-7)
nsubj(penetrated-10, industries-8)
aux(penetrated-10, have-9)
ccomp(seems-2, penetrated-10)
dobj(penetrated-10, Congress-11)
poss(lobbyists-14, their-13)
prep_with(Congress-11, lobbyists-14)
predet(extent-18, such-16)
det(extent-18, an-17)
prep_to(penetrated-10, extent-18)
mark(passed-24, as-19)
aux(get-21, to-20)
csubj(passed-24, get-21)
amod(laws-23, regulatory-22)
dobj(get-21, laws-23)
advcl(penetrated-10, passed-24)
complm(stifle-26, that-25)
ccomp(passed-24, stifle-26)
amod(competition-28, fair-27)
dobj(stifle-26, competition-28)
dep(stifle-26, giving-30)
iobj(giving-30, them-31)
det(advantage-33, the-32)
dobj(giving-30, advantage-33)
det(cartel-36, a-35)
prep_of(advantage-33, cartel-36)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP do) (RB n't)
        (VP (VB need)
          (PP (TO to)
            (NP (JJR lower) (NNS prices)))
          (SBAR (IN like)
            (S
              (NP (PRP they))
              (VP (MD would)
                (VP
                  (PP (IN in)
                    (NP (DT a) (JJ true) (JJ free) (NN market)))
                  (, ,)
                  (ADVP (NNS thanks)
                    (PP (TO to)
                      (NP
                        (NP (NNP Uncle) (NNP Sam) (POS 's))
                        (NN help)))))))))))
    (: ...)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN system))
          (SBAR
            (S
              (NP (PRP we))
              (VP (MD should)
                (VP (VB be)
                  (VP (VBG fighting)
                    (PP (IN against))))))))))
    (, ,) (RB not)
    (S
      (VP (VBG trusting)
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD caused)
                (NP (DT the) (NN problem)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (NP (JJ universal) (NN control))
                        (PP (IN over)
                          (S
                            (VP (`` ``) (VBG fixing) ('' '')
                              (NP (PRP it)))))))))))))))
    (. .)))

nsubj(need-4, They-1)
aux(need-4, do-2)
neg(need-4, n't-3)
root(ROOT-0, need-4)
amod(prices-7, lower-6)
prep_to(need-4, prices-7)
mark(in-11, like-8)
nsubj(in-11, they-9)
aux(in-11, would-10)
advcl(need-4, in-11)
det(market-15, a-12)
amod(market-15, true-13)
amod(market-15, free-14)
pobj(in-11, market-15)
nn(Sam-20, Uncle-19)
poss(help-22, Sam-20)
prep_thanks_to(in-11, help-22)
nsubj(system-27, that-24)
cop(system-27, 's-25)
det(system-27, the-26)
parataxis(need-4, system-27)
prep_against(fighting-31, system-27)
nsubj(fighting-31, we-28)
aux(fighting-31, should-29)
aux(fighting-31, be-30)
rcmod(system-27, fighting-31)
neg(need-4, not-34)
dep(need-4, trusting-35)
dobj(trusting-35, those-36)
nsubj(caused-38, those-36)
rcmod(those-36, caused-38)
det(problem-40, the-39)
dobj(caused-38, problem-40)
aux(have-42, to-41)
infmod(problem-40, have-42)
amod(control-44, universal-43)
dobj(have-42, control-44)
prepc_over(have-42, fixing-47)
dobj(fixing-47, it-49)

