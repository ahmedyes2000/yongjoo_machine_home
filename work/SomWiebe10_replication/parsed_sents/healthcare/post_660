(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB generally))
      (PP (IN for)
        (NP (JJ private) (NN market) (NN healthcare))))
    (. .)))

nsubj(am-2, I-1)
root(ROOT-0, am-2)
advmod(am-2, generally-3)
amod(healthcare-7, private-5)
nn(healthcare-7, market-6)
prep_for(am-2, healthcare-7)

(ROOT
  (S
    (NP (JJ Private) (NN enterprise))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJR better))
        (PP (IN at)
          (S
            (VP (VBG supplying)
              (NP (NNS goods)
                (CC and)
                (NNS services))
              (PP (IN than) (`` ``)
                (NP (NN government) (NN business))))))))
    (. .)))

amod(enterprise-2, Private-1)
nsubj(better-4, enterprise-2)
cop(better-4, is-3)
root(ROOT-0, better-4)
prepc_at(better-4, supplying-6)
dobj(supplying-6, goods-7)
dobj(supplying-6, services-9)
conj_and(goods-7, services-9)
nn(business-13, government-12)
prep_than(supplying-6, business-13)

(ROOT
  (S ('' '')
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN doubt))
          (SBAR
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP (JJ great) (NNS problems))
                  (PP (IN with)
                    (NP (PRP$ our) (NN healthcare) (NN system))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB hardly))
        (NP
          (NP (NN representative))
          (PP (IN of)
            (NP (DT the) (JJ free) (NN market))))))
    (. .)))

expl(is-3, There-2)
root(ROOT-0, is-3)
det(doubt-5, no-4)
nsubj(is-3, doubt-5)
expl(are-7, there-6)
rcmod(doubt-5, are-7)
amod(problems-9, great-8)
nsubj(are-7, problems-9)
poss(system-13, our-11)
nn(system-13, healthcare-12)
prep_with(problems-9, system-13)
nsubj(representative-19, it-16)
cop(representative-19, is-17)
advmod(representative-19, hardly-18)
conj_but(is-3, representative-19)
det(market-23, the-21)
amod(market-23, free-22)
prep_of(representative-19, market-23)

(ROOT
  (S
    (NP (JJ Free) (NN market))
    (VP (VBD went)
      (SBAR
        (ADVP
          (ADVP (RB away) (IN along) (NN time))
          (RB ago))
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN government))
          (ADVP (RB initially))
          (VP (VBD got)
            (PP (IN in)
              (NP
                (NP (DT the) (NN game))
                (PP (IN of)
                  (S
                    (VP (VBG directing)
                      (NP (JJ huge) (NNS monies)
                        (CC and)
                        (NN regulation))
                      (PP (IN into)
                        (NP (DT the) (NN system))))))))))))
    (. .)))

amod(market-2, Free-1)
nsubj(went-3, market-2)
root(ROOT-0, went-3)
advmod(along-5, away-4)
advmod(got-12, along-5)
dep(along-5, time-6)
advmod(along-5, ago-7)
advmod(got-12, when-8)
det(government-10, the-9)
nsubj(got-12, government-10)
advmod(got-12, initially-11)
ccomp(went-3, got-12)
det(game-15, the-14)
prep_in(got-12, game-15)
prepc_of(game-15, directing-17)
amod(monies-19, huge-18)
dobj(directing-17, monies-19)
dobj(directing-17, regulation-21)
conj_and(monies-19, regulation-21)
det(system-24, the-23)
prep_into(directing-17, system-24)

(ROOT
  (S
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (PRP I))
        (PP
          (NP
            (NP (NN think))
            (SBAR
              (S
                (NP (DT the)
                  (ADJP (RBS most) (JJ sensible))
                  (NN approach))
                (VP (MD would)
                  (VP (VB be)
                    (S
                      (VP (TO to)
                        (VP (VB go)))))))))
          (IN backwards)
          (NP (DT a) (NN bit))))
      (CC and)
      (VP
        (ADVP (RBR better))
        (VB analyze)
        (NP
          (NP (DT the) (`` ``) (NNS whys) ('' ''))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBD ended)
                (PRT (RP up))
                (PP (IN with)
                  (NP
                    (NP (DT some))
                    (PP (IN of)
                      (NP (DT the) (NNS problems)))))))))
        (SBAR
          (S
            (NP (PRP we))
            (ADVP (RB currently))
            (VP (VBP have))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, I-3)
npadvmod(\/-1, think-4)
dobj(be-10, think-4)
det(approach-8, the-5)
advmod(sensible-7, most-6)
amod(approach-8, sensible-7)
nsubj(be-10, approach-8)
aux(be-10, would-9)
rcmod(think-4, be-10)
aux(go-12, to-11)
xcomp(be-10, go-12)
det(bit-15, a-14)
prep_backwards(\/-1, bit-15)
advmod(analyze-18, better-17)
conj_and(\/-1, analyze-18)
det(whys-21, the-19)
dobj(analyze-18, whys-21)
dobj(ended-24, whys-21)
nsubj(ended-24, we-23)
rcmod(whys-21, ended-24)
prt(ended-24, up-25)
prep_with(ended-24, some-27)
det(problems-30, the-29)
prep_of(some-27, problems-30)
nsubj(have-33, we-31)
advmod(have-33, currently-32)
dep(analyze-18, have-33)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP
            (NP (JJ many))
            (PP (IN of)
              (NP (DT the) (NNS whys))))
          (VP (VBP are)
            (ADVP (RB indeed))
            (ADJP (JJ due)
              (PP (TO to)
                (NP (NN government) (NN causation))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(due-9, many-3)
det(whys-6, the-5)
prep_of(many-3, whys-6)
cop(due-9, are-7)
advmod(due-9, indeed-8)
ccomp(know-2, due-9)
nn(causation-12, government-11)
prep_to(due-9, causation-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NN problem))
      (PP (IN with)
        (NP (DT this) (NN approach))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN government))
          (VP (MD will)
            (ADVP (RB never))
            (VP (VB do)
              (NP (PRP it)))))))
    (. .)))

det(problem-2, The-1)
nsubj(is-6, problem-2)
det(approach-5, this-4)
prep_with(problem-2, approach-5)
root(ROOT-0, is-6)
complm(do-12, that-7)
det(government-9, the-8)
nsubj(do-12, government-9)
aux(do-12, will-10)
neg(do-12, never-11)
ccomp(is-6, do-12)
dobj(do-12, it-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (NP (NN self) (NN incrimination))))
    (. .)))

nsubj(incrimination-5, It-1)
aux(incrimination-5, would-2)
cop(incrimination-5, be-3)
nn(incrimination-5, self-4)
root(ROOT-0, incrimination-5)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (NP (PRP we))
    (VP (MD will)
      (ADVP (RB probably))
      (VP (VB end)
        (PRT (RP up))
        (PP (IN with)
          (NP
            (NP (JJ universal) (NN healthcare))
            (CC and)
            (NP (CD twenty) (NNS years))))
        (PP (IN from)
          (NP
            (NP (RB now))
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD will) (RB all)
                  (VP (VB lament)))))
            (, ,)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD happened)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ good) (JJ old) (NNS days))
                      (PP (IN of)
                        (NP (JJ great) (NN healthcare)))))
                  (SBAR (IN like)
                    (S
                      (NP (EX there))
                      (VP (VBD was)
                        (PP (IN in)
                          (NP (CD 2009)))))))))))))
    (. .)))

advmod(end-6, So-1)
nsubj(end-6, we-3)
aux(end-6, will-4)
advmod(end-6, probably-5)
root(ROOT-0, end-6)
prt(end-6, up-7)
amod(healthcare-10, universal-9)
prep_with(end-6, healthcare-10)
num(years-13, twenty-12)
prep_with(end-6, years-13)
conj_and(healthcare-10, years-13)
prep(end-6, from-14)
pobj(from-14, now-15)
dobj(lament-19, now-15)
nsubj(lament-19, we-16)
aux(lament-19, will-17)
advmod(lament-19, all-18)
rcmod(now-15, lament-19)
nsubj(happened-22, what-21)
rcmod(now-15, happened-22)
det(days-27, the-24)
amod(days-27, good-25)
amod(days-27, old-26)
prep_to(happened-22, days-27)
amod(healthcare-30, great-29)
prep_of(days-27, healthcare-30)
mark(was-33, like-31)
expl(was-33, there-32)
advcl(happened-22, was-33)
prep_in(was-33, 2009-35)

