(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))

root(ROOT-0, 1-1)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB do)
        (NP
          (NP (DT the) (NN opposite))
          (PP (IN of)
            (S
              (VP (VBG growing)
                (NP (DT the) (NN economy))))))))
    (. .)))

nsubj(do-3, It-1)
aux(do-3, will-2)
root(ROOT-0, do-3)
det(opposite-5, the-4)
dobj(do-3, opposite-5)
prepc_of(opposite-5, growing-7)
det(economy-9, the-8)
dobj(growing-7, economy-9)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are) (RB n't))
    (. .)))

nsubj(are-2, They-1)
root(ROOT-0, are-2)
neg(are-2, n't-3)

(ROOT
  (S
    (VP (VB Check)
      (NP (PRP$ my) (NN post))
      (PP (IN on)
        (NP
          (NP (DT the) (JJ opposite) (NN side))
          (PP (IN of)
            (NP (DT this) (NN page))))))
    (. .)))

root(ROOT-0, Check-1)
poss(post-3, my-2)
dobj(Check-1, post-3)
det(side-7, the-5)
amod(side-7, opposite-6)
prep_on(Check-1, side-7)
det(page-10, this-9)
prep_of(side-7, page-10)

(ROOT
  (FRAG
    (NP (CD 3))
    (. .)))

root(ROOT-0, 3-1)

(ROOT
  (S
    (NP (DT No) (PRP it))
    (VP (VBZ does) (RB not))
    (. .)))

det(it-2, No-1)
nsubj(does-3, it-2)
root(ROOT-0, does-3)
neg(does-3, not-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ puts)
      (NP (PRP$ our) (NNS businesses))
      (PP (IN at)
        (NP (DT an) (NN advantage))))
    (. .)))

nsubj(puts-2, It-1)
root(ROOT-0, puts-2)
poss(businesses-4, our-3)
dobj(puts-2, businesses-4)
det(advantage-7, an-6)
prep_at(puts-2, advantage-7)

(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB just))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB get)
            (PRT (RP away))
            (PP (IN from)
              (NP (DT this) (NN mentality)))
            (SBAR (IN that)
              (S
                (NP (NN someone) (RB else))
                (VP (MD should)
                  (VP (VB pay)
                    (NP (PRP$ our) (NNS bills))
                    (NP (CD .4))))))))))
    (. .)))

nsubj(have-3, We-1)
xsubj(get-5, We-1)
advmod(have-3, just-2)
root(ROOT-0, have-3)
aux(get-5, to-4)
xcomp(have-3, get-5)
det(mentality-9, this-8)
prep_away_from(get-5, mentality-9)
complm(pay-14, that-10)
nsubj(pay-14, someone-11)
advmod(someone-11, else-12)
aux(pay-14, should-13)
ccomp(get-5, pay-14)
poss(bills-16, our-15)
dep(pay-14, bills-16)
dobj(pay-14, .4-17)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP think))))
      (NP (DT that))
      (VP (VBZ is)
        (NP (NN socialism))
        (, ,)
        (SBAR (IN than)
          (S
            (NP (PRP you))
            (VP (VBP are) (RB either)
              (VP (VBG being)
                (ADJP (RB very) (JJ disingenuous))))))))
    (CC or)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (RB incredibly) (JJ ignorant))))
    (. .)))

mark(think-3, If-1)
nsubj(think-3, you-2)
advcl(socialism-6, think-3)
nsubj(socialism-6, that-4)
cop(socialism-6, is-5)
root(ROOT-0, socialism-6)
mark(disingenuous-14, than-8)
nsubj(disingenuous-14, you-9)
aux(disingenuous-14, are-10)
advmod(disingenuous-14, either-11)
cop(disingenuous-14, being-12)
advmod(disingenuous-14, very-13)
advcl(socialism-6, disingenuous-14)
nsubj(ignorant-19, you-16)
cop(ignorant-19, are-17)
advmod(ignorant-19, incredibly-18)
conj_or(socialism-6, ignorant-19)

(ROOT
  (S
    (VP (VB Do)
      (NP (DT some) (NN reading))
      (PP (IN on)
        (NP (NN socialism))))
    (. .)))

root(ROOT-0, Do-1)
det(reading-3, some-2)
dobj(Do-1, reading-3)
prep_on(Do-1, socialism-5)

(ROOT
  (FRAG
    (NP (CD 5))
    (. .)))

root(ROOT-0, 5-1)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP (VB buy)
        (PP (IN into)
          (NP (DT those) (NNS rankings)))))
    (. .)))

aux(buy-3, Do-1)
neg(buy-3, n't-2)
root(ROOT-0, buy-3)
det(rankings-6, those-5)
prep_into(buy-3, rankings-6)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN government))
        (VP (VBZ puts)
          (NP (NN price) (NNS controls))
          (PP (IN on)
            (NP (NN anything))))))
    (PRN (-LRB- -LRB-)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP they))
          (VP (VBP have)
            (VP (VBN done)
              (PP (IN in)
                (NP (DT the) (NN past)))))))
      (-RRB- -RRB-))
    (NP (PRP you))
    (VP (VBP get)
      (NP (JJ several) (JJ negative) (NNS effects)))
    (. .)))

advmod(puts-4, When-1)
det(government-3, the-2)
nsubj(puts-4, government-3)
advcl(get-19, puts-4)
nn(controls-6, price-5)
dobj(puts-4, controls-6)
prep_on(puts-4, anything-8)
dobj(done-13, which-10)
nsubj(done-13, they-11)
aux(done-13, have-12)
parataxis(get-19, done-13)
det(past-16, the-15)
prep_in(done-13, past-16)
nsubj(get-19, you-18)
root(ROOT-0, get-19)
amod(effects-22, several-20)
amod(effects-22, negative-21)
dobj(get-19, effects-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP France)))
    (PRN (-LRB- -LRB-)
      (VP (VB and)
        (NP (JJ other) (NNS countries)))
      (-RRB- -RRB-))
    (NP (PRP you))
    (ADVP (RB only))
    (VP (VBP get)
      (NP (NN health) (NN care))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBN deemed)
              (S
                (ADJP (JJ worthy))))))))
    (. .)))

prep_in(get-10, France-2)
dep(get-10, and-4)
amod(countries-6, other-5)
dobj(and-4, countries-6)
nsubj(get-10, you-8)
advmod(get-10, only-9)
root(ROOT-0, get-10)
nn(care-12, health-11)
dobj(get-10, care-12)
mark(deemed-16, if-13)
nsubjpass(deemed-16, you-14)
auxpass(deemed-16, are-15)
advcl(get-10, deemed-16)
acomp(deemed-16, worthy-17)

(ROOT
  (S
    (SBAR
      (X (DT The) (JJR older))
      (S
        (NP (PRP you))
        (VP (VBP get))))
    (, ,)
    (X (DT the) (JJR less))
    (NP (PRP they))
    (VP (MD will)
      (VP (VB treat)
        (NP (PRP you))))
    (. .)))

det(older-2, The-1)
dep(get-4, older-2)
nsubj(get-4, you-3)
dep(treat-10, get-4)
det(less-7, the-6)
dep(treat-10, less-7)
nsubj(treat-10, they-8)
aux(treat-10, will-9)
root(ROOT-0, treat-10)
dobj(treat-10, you-11)

(ROOT
  (S
    (S
      (NP (DT A)
        (ADJP (CD 70) (NN year) (JJ old))
        (NN woman))
      (VP (MD can) (RB not)
        (VP (VB get)
          (NP
            (NP (NN treatment))
            (PP (IN for)
              (NP (NNP Cancer))))
          (PP (IN in)
            (NP (NNP France))))))
    (, ,)
    (CC but)
    (S
      (NP (NN anyone))
      (VP (MD can)
        (VP (VB get)
          (NP (NN treatment))
          (PP (IN in)
            (NP (DT the) (NNP US))))))
    (. .)))

det(woman-5, A-1)
number(old-4, 70-2)
dep(old-4, year-3)
amod(woman-5, old-4)
nsubj(get-8, woman-5)
aux(get-8, can-6)
neg(get-8, not-7)
root(ROOT-0, get-8)
dobj(get-8, treatment-9)
prep_for(treatment-9, Cancer-11)
prep_in(get-8, France-13)
nsubj(get-18, anyone-16)
aux(get-18, can-17)
conj_but(get-8, get-18)
dobj(get-18, treatment-19)
det(US-22, the-21)
prep_in(get-18, US-22)

(ROOT
  (SQ (NNP Does)
    (NP (PRP it))
    (VP (VB cost)
      (NP (JJR more)))
    (. ?)))

dep(cost-3, Does-1)
nsubj(cost-3, it-2)
root(ROOT-0, cost-3)
dobj(cost-3, more-4)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (ADVP (CC but))
    (NP (DT that))
    (VP (VBZ has)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (S
                  (VP (VBG being)
                    (VP (VBN socialized))))))))))
    (. .)))

dep(has-5, Yes-1)
advmod(has-5, but-3)
nsubj(has-5, that-4)
root(ROOT-0, has-5)
dobj(has-5, nothing-6)
aux(do-8, to-7)
infmod(nothing-6, do-8)
auxpass(socialized-11, being-10)
prepc_with(do-8, socialized-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB do)
            (PP (IN with)
              (NP (DT this) (NN mentality)))
            (SBAR (IN that)
              (S
                (NP (NN someone) (RB else))
                (VP (MD should)
                  (VP (VB pay)
                    (NP (PRP$ our) (NNS bills))))))))))
    (. .)))

nsubj(has-2, It-1)
xsubj(do-4, It-1)
root(ROOT-0, has-2)
aux(do-4, to-3)
xcomp(has-2, do-4)
det(mentality-7, this-6)
prep_with(do-4, mentality-7)
complm(pay-12, that-8)
nsubj(pay-12, someone-9)
advmod(someone-9, else-10)
aux(pay-12, should-11)
ccomp(do-4, pay-12)
poss(bills-14, our-13)
dobj(pay-12, bills-14)

(ROOT
  (FRAG
    (NP (CD 6))
    (. .)))

root(ROOT-0, 6-1)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (VP (VBN done)
          (ADVP (RB right)))))
    (. .)))

nsubjpass(done-5, It-1)
aux(done-5, ca-2)
neg(done-5, n't-3)
auxpass(done-5, be-4)
root(ROOT-0, done-5)
advmod(done-5, right-6)

(ROOT
  (S
    (NP (DT The) (JJ very) (NN idea))
    (VP (VBZ is)
      (ADJP (JJ immoral)))
    (. .)))

det(idea-3, The-1)
amod(idea-3, very-2)
nsubj(immoral-5, idea-3)
cop(immoral-5, is-4)
root(ROOT-0, immoral-5)

(ROOT
  (S
    (NP (DT The) (JJ first))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ artificial) (NN rise))
        (PP (IN in)
          (NP (NN demand)))))
    (. .)))

det(first-2, The-1)
nsubj(rise-6, first-2)
cop(rise-6, is-3)
det(rise-6, an-4)
amod(rise-6, artificial-5)
root(ROOT-0, rise-6)
prep_in(rise-6, demand-8)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN case))
        (PP (IN of)
          (NP (NNP UHC)))))
    (, ,)
    (NP (DT that))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (DT the) (NN government))
          (VP (MD will)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB ration)
                    (NP (NN care))
                    (PP (IN through)
                      (NP
                        (NP (NNS means))
                        (PP (JJ other) (IN than)
                          (NP (NN money)))))))))))))
    (. .)))

det(case-3, the-2)
prep_in(means-8, case-3)
prep_of(case-3, UHC-5)
nsubj(means-8, that-7)
root(ROOT-0, means-8)
det(government-10, the-9)
nsubj(have-12, government-10)
xsubj(ration-14, government-10)
aux(have-12, will-11)
ccomp(means-8, have-12)
aux(ration-14, to-13)
xcomp(have-12, ration-14)
dobj(ration-14, care-15)
prep_through(ration-14, means-17)
dep(means-17, other-18)
prep_than(means-17, money-20)

(ROOT
  (S
    (NP (DT The) (NN second))
    (VP (VBZ is)
      (S
        (NP (PRP you))
        (VP (VB lose)
          (NP (NN production))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP
                (NP (NNS people))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD had)
                      (VP (VBN made)
                        (NP (DT a) (NN profit))
                        (PRT (RP off))
                        (PP (IN of)
                          (NP (DT the) (NN product))))))))
              (VP (VBP leave)
                (SBAR (IN because)
                  (S
                    (NP (PRP they))
                    (VP (MD ca) (RB n't)
                      (VP (VB earn)
                        (NP (DT a) (NN living))
                        (ADVP (DT any) (RBR more))))))))))))
    (. .)))

det(second-2, The-1)
nsubj(is-3, second-2)
root(ROOT-0, is-3)
nsubj(lose-5, you-4)
ccomp(is-3, lose-5)
dobj(lose-5, production-6)
advmod(leave-18, when-7)
nsubj(made-11, people-8)
nsubj(leave-18, people-8)
aux(made-11, had-10)
rcmod(people-8, made-11)
det(profit-13, a-12)
dobj(made-11, profit-13)
det(product-17, the-16)
prep_off_of(made-11, product-17)
advcl(lose-5, leave-18)
mark(earn-23, because-19)
nsubj(earn-23, they-20)
aux(earn-23, ca-21)
neg(earn-23, n't-22)
advcl(leave-18, earn-23)
det(living-25, a-24)
dobj(earn-23, living-25)
dep(more-27, any-26)
advmod(earn-23, more-27)

(ROOT
  (S
    (ADVP (RB Finally))
    (, ,)
    (NP (NNP UHC))
    (VP (MD would)
      (VP (VB end)
        (NP (NN health) (NN insurance))))
    (. .)))

advmod(end-5, Finally-1)
nsubj(end-5, UHC-3)
aux(end-5, would-4)
root(ROOT-0, end-5)
nn(insurance-7, health-6)
dobj(end-5, insurance-7)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ means)
      (NP
        (NP (DT the) (NN loss))
        (PP (IN of)
          (NP
            (NP
              (QP (NNS hundreds) (IN of) (NNS thousands)))
            (PP (IN of)
              (NP (NNS jobs)))))))
    (. .)))

nsubj(means-2, That-1)
root(ROOT-0, means-2)
det(loss-4, the-3)
dobj(means-2, loss-4)
dep(thousands-8, hundreds-6)
quantmod(thousands-8, of-7)
prep_of(loss-4, thousands-8)
prep_of(thousands-8, jobs-10)

(ROOT
  (NP
    (NP (RB Nearly) (VBG doubling))
    (NP (PRP$ our) (JJ current) (NN unemployment))
    (. .)))

root(ROOT-0, Nearly-1)
amod(Nearly-1, doubling-2)
poss(unemployment-5, our-3)
amod(unemployment-5, current-4)
dep(Nearly-1, unemployment-5)

(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))

root(ROOT-0, 2-1)

