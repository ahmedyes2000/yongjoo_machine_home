(ROOT
  (FRAG
    (PP (IN for)
      (NP (DT the) (VBG spirialing) (NNS costs)))
    (. .)))

root(ROOT-0, for-1)
det(costs-4, the-2)
amod(costs-4, spirialing-3)
pobj(for-1, costs-4)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS demands))
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP place)
            (PP (IN on)
              (NP (NNS providers)))))))
    (VP (VBZ is)
      (ADJP (JJ unbelievable)))
    (. .)))

det(demands-2, The-1)
dobj(place-4, demands-2)
nsubj(unbelievable-8, demands-2)
nsubj(place-4, they-3)
rcmod(demands-2, place-4)
prep_on(place-4, providers-6)
cop(unbelievable-8, is-7)
root(ROOT-0, unbelievable-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD began)
      (S
        (VP (VBG working)
          (PP (IN for)
            (NP
              (NP (DT a) (NN hospital))
              (PP (IN in)
                (NP (NNP MN)))))
          (PP
            (ADVP
              (NP (CD 11) (NNS years))
              (RB ago))
            (IN in)
            (NP (JJ patient) (JJ financial) (NNS services))))))
    (. .)))

nsubj(began-2, I-1)
root(ROOT-0, began-2)
xcomp(began-2, working-3)
det(hospital-6, a-5)
prep_for(working-3, hospital-6)
prep_in(hospital-6, MN-8)
num(years-10, 11-9)
npadvmod(ago-11, years-10)
advmod(working-3, ago-11)
amod(services-15, patient-13)
amod(services-15, financial-14)
prep_in(working-3, services-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD had)
      (NP (CD 20)
        (NX
          (NX
            (NX (NNS employees))
            (PP (IN for)
              (NP (NN coding))))
          (, ,)
          (NX (NN billing))
          (, ,)
          (CC and)
          (NX (NNS collections)))))
    (. .)))

nsubj(had-2, We-1)
root(ROOT-0, had-2)
num(employees-4, 20-3)
dobj(had-2, employees-4)
prep_for(employees-4, coding-6)
dobj(had-2, billing-8)
conj_and(employees-4, billing-8)
dobj(had-2, collections-11)
conj_and(employees-4, collections-11)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP we))
    (VP (VBP have)
      (NP (CD 89)))
    (. .)))

advmod(have-4, Now-1)
nsubj(have-4, we-3)
root(ROOT-0, have-4)
dobj(have-4, 89-5)

(ROOT
  (S
    (NP
      (NP (JJS Most))
      (PP (IN of)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ due)
                (PP (TO to)
                  (NP (DT the) (NNS demands) (NN governement)))))))))
    (VP (VBZ places)
      (PP (IN on)
        (NP (PRP us)))
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP (VB get)
              (NP
                (NP (DT a) (NN claim))
                (VP (VBN paid))))))))
    (. .)))

nsubj(places-10, Most-1)
nsubj(due-5, that-3)
cop(due-5, is-4)
prepc_of(Most-1, due-5)
det(governement-9, the-7)
nn(governement-9, demands-8)
prep_to(due-5, governement-9)
root(ROOT-0, places-10)
prep_on(places-10, us-12)
mark(get-16, in-13)
dep(get-16, order-14)
aux(get-16, to-15)
purpcl(places-10, get-16)
det(claim-18, a-17)
dobj(get-16, claim-18)
partmod(claim-18, paid-19)

(ROOT
  (S
    (NP (DT The) (NN waste))
    (VP (VBZ is)
      (PP (RB not)
        (PP (IN on)
          (NP (DT the) (NN provider) (NN end)))
        (, ,)
        (CC but)
        (PP (IN on)
          (NP (DT the) (NN payer) (NN end)))))
    (. .)))

det(waste-2, The-1)
nsubj(is-3, waste-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
det(end-8, the-6)
nn(end-8, provider-7)
prep_on(is-3, end-8)
det(end-14, the-12)
nn(end-14, payer-13)
prep_on(is-3, end-14)
conj_but(end-8, end-14)

(ROOT
  (S
    (NP (NNP Government))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN problem))
        (, ,) (RB not)
        (NP (DT the) (NN solution))))
    (. .)))

nsubj(problem-4, Government-1)
cop(problem-4, is-2)
det(problem-4, the-3)
root(ROOT-0, problem-4)
neg(problem-4, not-6)
det(solution-8, the-7)
dep(problem-4, solution-8)

