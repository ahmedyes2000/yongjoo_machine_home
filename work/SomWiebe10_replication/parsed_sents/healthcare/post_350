(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ interested)
        (S
          (VP (TO to)
            (VP (VB hear)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (PRP you))
                  (VP (VB define)
                    (ADJP (`` ``) (JJ corrupted) ('' '')
                      (PP (IN in)
                        (NP (NN reference))))
                    (PP (TO to)
                      (NP (NN government)))))))))))
    (. .)))

nsubj(interested-3, I-1)
cop(interested-3, 'm-2)
root(ROOT-0, interested-3)
aux(hear-5, to-4)
xcomp(interested-3, hear-5)
advmod(define-8, how-6)
nsubj(define-8, you-7)
ccomp(hear-5, define-8)
acomp(define-8, corrupted-10)
prep_in(corrupted-10, reference-13)
prep_to(define-8, government-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP
            (NP (DT the) (NN search))
            (PP (IN for)
              (NP
                (NP (JJ personal) (NN gain))
                (PP (IN in)
                  (NP (DT a) (JJ public) (NN field)))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (RB semi) (JJ corrupted))))))
    (. .)))

mark(search-5, If-1)
nsubj(search-5, it-2)
cop(search-5, 's-3)
det(search-5, the-4)
advcl(agree-15, search-5)
amod(gain-8, personal-7)
prep_for(search-5, gain-8)
det(field-12, a-10)
amod(field-12, public-11)
prep_in(gain-8, field-12)
nsubj(agree-15, I-14)
root(ROOT-0, agree-15)
complm(corrupted-20, that-16)
nsubj(corrupted-20, it-17)
cop(corrupted-20, is-18)
advmod(corrupted-20, semi-19)
ccomp(agree-15, corrupted-20)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (NP (NNS corporations))
      (: --)
      (NP (DT that)))
    (VP (VBZ 's)
      (NP (PRP$ their) (NN raison) (NN d'etre)))
    (. .)))

advmod(d'etre-9, However-1)
nsubj(d'etre-9, corporations-3)
dep(corporations-3, that-5)
cop(d'etre-9, 's-6)
poss(d'etre-9, their-7)
nn(d'etre-9, raison-8)
root(ROOT-0, d'etre-9)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're)
      (NP
        (NP (NN profit))
        (VP (VBN driven))))
    (. .)))

nsubj(profit-3, They-1)
cop(profit-3, 're-2)
root(ROOT-0, profit-3)
partmod(profit-3, driven-4)

(ROOT
  (S
    (NP (NNP Fully))
    (VP (VBD corrupted)
      (ADJP (RB as) (VBN opposed)
        (PP (TO to)
          (NP
            (NP (NNS semi))
            (VP (VBN corrupted))))))
    (. .)))

nsubj(corrupted-2, Fully-1)
root(ROOT-0, corrupted-2)
advmod(opposed-4, as-3)
acomp(corrupted-2, opposed-4)
prep_to(opposed-4, semi-6)
partmod(semi-6, corrupted-7)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB believe)
        (NP (DT a) (NN company))
        (PRT (RP out))
        (S
          (VP (TO to)
            (VP (VB make)
              (SBAR
                (S
                  (NP (DT a) (NN buck))
                  (VP (VBZ is)
                    (ADJP (RBR more) (JJ likely)
                      (S
                        (VP (TO to)
                          (VP (VB take)
                            (NP
                              (NP (JJR better) (NN care))
                              (PP (IN of)
                                (NP (PRP you))))
                            (PP (IN than)
                              (NP (DT the) (NN government)))))))))))))))
    (. ?)))

advmod(believe-4, Why-1)
aux(believe-4, do-2)
nsubj(believe-4, you-3)
xsubj(make-9, you-3)
root(ROOT-0, believe-4)
det(company-6, a-5)
dobj(believe-4, company-6)
prt(believe-4, out-7)
aux(make-9, to-8)
xcomp(believe-4, make-9)
det(buck-11, a-10)
nsubj(likely-14, buck-11)
cop(likely-14, is-12)
advmod(likely-14, more-13)
ccomp(make-9, likely-14)
aux(take-16, to-15)
xcomp(likely-14, take-16)
amod(care-18, better-17)
dobj(take-16, care-18)
prep_of(care-18, you-20)
det(government-23, the-22)
prep_than(take-16, government-23)

(ROOT
  (NP
    (NP
      (NP (JJ Same) (NN thing))
      (PP (IN with)
        (NP (NN efficiency))))
    (: --)
    (S
      (NP (NNP Insurance) (NNS companies))
      (VP (VBP have)
        (NP
          (NP
            (NP (NN marketing) (NNS departments))
            (, ,)
            (NP (NN CEO) (NNS salaries))
            (, ,) (FW etc.))
          (SBAR
            (S
              (VP (TO to)
                (VP (VB cover)
                  (PP (IN with)
                    (NP
                      (NP (DT the) (NN money))
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBD put)
                            (PRT (RP in))))))))))))))
    (. .)))

amod(thing-2, Same-1)
root(ROOT-0, thing-2)
prep_with(thing-2, efficiency-4)
nn(companies-7, Insurance-6)
nsubj(have-8, companies-7)
dep(thing-2, have-8)
nn(departments-10, marketing-9)
dobj(have-8, departments-10)
nn(salaries-13, CEO-12)
appos(departments-10, salaries-13)
dep(departments-10, etc.-15)
aux(cover-17, to-16)
infmod(departments-10, cover-17)
det(money-20, the-19)
prep_with(cover-17, money-20)
dobj(put-22, money-20)
nsubj(put-22, you-21)
rcmod(money-20, put-22)
prt(put-22, in-23)

(ROOT
  (S
    (NP (NNP UHC))
    (VP (MD would)
      (VP (VB have)
        (NP
          (NP (NN none))
          (PP (IN of)
            (NP (DT that))))))
    (. .)))

nsubj(have-3, UHC-1)
aux(have-3, would-2)
root(ROOT-0, have-3)
dobj(have-3, none-4)
prep_of(none-4, that-6)

