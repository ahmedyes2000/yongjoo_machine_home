(ROOT
  (S
    (S
      (NP
        (NP (NNP First))
        (PP (IN of)
          (NP
            (NP (DT all))
            (, ,)
            (NP (NN capitalism))
            (CC and)
            (NP (NN socialism)))))
      (VP (VBP are)
        (NP (JJ complete) (NNS opposites))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD can) (RB not)
        (VP (VB have)
          (NP (DT both)))))
    (. .)))

nsubj(opposites-10, First-1)
prep_of(First-1, all-3)
prep_of(First-1, capitalism-5)
conj_and(all-3, capitalism-5)
prep_of(First-1, socialism-7)
conj_and(all-3, socialism-7)
cop(opposites-10, are-8)
amod(opposites-10, complete-9)
root(ROOT-0, opposites-10)
nsubj(have-15, you-12)
aux(have-15, can-13)
neg(have-15, not-14)
conj_and(opposites-10, have-15)
dobj(have-15, both-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (NP
        (NP (JJ opposite) (NNS concepts))
        (PP (IN of)
          (NP (JJ societal) (JJ economic) (NNS policies)))))
    (. .)))

nsubj(concepts-4, They-1)
cop(concepts-4, are-2)
amod(concepts-4, opposite-3)
root(ROOT-0, concepts-4)
amod(policies-8, societal-6)
amod(policies-8, economic-7)
prep_of(concepts-4, policies-8)

(ROOT
  (S
    (ADVP (RB Next))
    (, ,)
    (PP (IN as)
      (NP
        (NP (DT an) (NN outsider))
        (PP (IN of)
          (NP (DT this) (NN conversation)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB believe)
        (NP
          (NP (NNP Mike))
          (VP (VBN made)
            (NP (DT any) (JJ huge) (NNS distortions))
            (PP (IN on)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP you))
                  (VP (VBD said)))))))))
    (. .)))

advmod(believe-13, Next-1)
det(outsider-5, an-4)
prep_as(believe-13, outsider-5)
det(conversation-8, this-7)
prep_of(outsider-5, conversation-8)
nsubj(believe-13, I-10)
aux(believe-13, do-11)
neg(believe-13, not-12)
root(ROOT-0, believe-13)
dobj(believe-13, Mike-14)
partmod(Mike-14, made-15)
det(distortions-18, any-16)
amod(distortions-18, huge-17)
dobj(made-15, distortions-18)
dobj(said-22, what-20)
nsubj(said-22, you-21)
prepc_on(made-15, said-22)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (VBD did) (RB not)
      (VP (VB say)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBD meant)
              (SBAR (CC but)
                (S
                  (NP (PRP he))
                  (VP (VBD replied)
                    (ADVP (RB objectively)
                      (CC and)
                      (RB directly))
                    (PP (TO to)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP you))
                          (VP (VBD posted)))))))))))))
    (. .)))

advmod(say-5, Perhaps-1)
nsubj(say-5, you-2)
aux(say-5, did-3)
neg(say-5, not-4)
root(ROOT-0, say-5)
dep(meant-8, what-6)
dobj(replied-11, what-6)
nsubj(meant-8, you-7)
ccomp(say-5, meant-8)
cc(replied-11, but-9)
nsubj(replied-11, he-10)
ccomp(meant-8, replied-11)
advmod(replied-11, objectively-12)
advmod(replied-11, directly-14)
conj_and(objectively-12, directly-14)
dobj(posted-18, what-16)
nsubj(posted-18, you-17)
prepc_to(replied-11, posted-18)

(ROOT
  (S
    (NP (PRP$ My) (NN suggestion))
    (VP (MD would)
      (VP (VB be)
        (S
          (VP (TO to)
            (VP (VB try)
              (S
                (VP (TO to)
                  (VP (VB clarify)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP you))
                        (VP (VBP mean)
                          (PP (RB instead) (IN of)
                            (S
                              (VP (VBG getting)
                                (VP (VBN insulted)
                                  (PP (IN by)
                                    (NP
                                      (NP (DT a) (JJ direct) (NN response))
                                      (SBAR
                                        (WHPP (TO to)
                                          (WHNP (WP what)))
                                        (S
                                          (NP (PRP you))
                                          (VP (VBD said)))))))))))))))))))))
    (. .)))

poss(suggestion-2, My-1)
nsubj(be-4, suggestion-2)
aux(be-4, would-3)
root(ROOT-0, be-4)
aux(try-6, to-5)
xcomp(be-4, try-6)
aux(clarify-8, to-7)
xcomp(try-6, clarify-8)
dobj(mean-11, what-9)
nsubj(mean-11, you-10)
ccomp(clarify-8, mean-11)
auxpass(insulted-15, getting-14)
prepc_instead_of(mean-11, insulted-15)
det(response-19, a-17)
amod(response-19, direct-18)
agent(insulted-15, response-19)
rel(said-23, what-21)
nsubj(said-23, you-22)
rcmod(response-19, said-23)

(ROOT
  (PP (RB As) (IN for)
    (NP
      (NP (PRP$ your) (JJ apparent) (NN belief))
      (SBAR
        (WHNP (WDT that))
        (S
          (S
            (NP
              (NP (DT the) (JJ wealthy) (NNS people))
              (PP (IN of)
                (NP (DT this) (NN country))))
            (VP (VBP try)
              (S
                (VP (TO to)
                  (VP (VB hold)
                    (PRT (RP on))
                    (PP (TO to)
                      (NP (PRP$ their) (NN wealth))))))))
          (PRN (, ,)
            (SINV (-LRB- -LRB-) (`` ``)
              (S
                (PP (IN As))
                (NP (PRP it))
                (VP (VBZ stands)))
              (, ,)
              (PP
                (NP (DT the) (NN wealth))
                (PP (IN of)
                  (NP (DT this) (NN country))))
              (VP (VBZ rests)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NNS hands))
                    (PP (IN of)
                      (NP
                        (NP (DT the)
                          (ADJP (RB very) (JJ few)))
                        (, ,)
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBP exert)
                              (NP (PRP$ their) (NN control)
                                (S
                                  (VP (TO to)
                                    (VP (VB keep)
                                      (NP (PRP it))))))))))))))
              (NP (DT a)
                (ADJP (RB very) (JJ small))
                (NN group))
              (. .))))))))

advmod(for-2, As-1)
root(ROOT-0, for-2)
poss(belief-5, your-3)
amod(belief-5, apparent-4)
pobj(for-2, belief-5)
dep(try-13, belief-5)
det(people-9, the-7)
amod(people-9, wealthy-8)
nsubj(try-13, people-9)
xsubj(hold-15, people-9)
det(country-12, this-11)
prep_of(people-9, country-12)
rcmod(belief-5, try-13)
aux(hold-15, to-14)
xcomp(try-13, hold-15)
prt(hold-15, on-16)
poss(wealth-19, their-18)
prep_to(hold-15, wealth-19)
prep(stands-25, As-23)
nsubj(stands-25, it-24)
ccomp(rests-32, stands-25)
det(wealth-28, the-27)
dep(rests-32, wealth-28)
det(country-31, this-30)
prep_of(rests-32, country-31)
dep(try-13, rests-32)
det(hands-35, the-34)
prep_in(rests-32, hands-35)
det(few-39, the-37)
advmod(few-39, very-38)
prep_of(hands-35, few-39)
nsubj(exert-42, few-39)
rcmod(few-39, exert-42)
poss(control-44, their-43)
dobj(exert-42, control-44)
aux(keep-46, to-45)
infmod(control-44, keep-46)
dobj(keep-46, it-47)
det(group-51, a-48)
advmod(small-50, very-49)
amod(group-51, small-50)
nsubj(rests-32, group-51)

(ROOT
  (S ('' '')
    (NP (RB -RRB-) (DT this))
    (VP (VBZ is)
      (ADJP (RB absolutely) (RB not) (JJ true)))
    (. .)))

nsubj(true-7, this-3)
cop(true-7, is-4)
advmod(true-7, absolutely-5)
neg(true-7, not-6)
root(ROOT-0, true-7)

(ROOT
  (S
    (S
      (VP (VB Take)
        (NP (DT a) (NN look))
        (PP (IN at)
          (NP
            (NP (DT some) (NNS statistics))
            (PP (IN on)
              (NP (NNS donations)))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD 'll)
        (VP (VB notice)
          (SBAR (IN that)
            (S
              (NP (DT the) (JJS wealthiest))
              (VP (VBP are)
                (NP (DT the) (RBS most) (JJ charitable))
                (PP (IN by)
                  (ADVP (RB far)))))))))
    (. .)))

root(ROOT-0, Take-1)
det(look-3, a-2)
dobj(Take-1, look-3)
det(statistics-6, some-5)
prep_at(Take-1, statistics-6)
prep_on(statistics-6, donations-8)
nsubj(notice-12, you-10)
aux(notice-12, 'll-11)
conj_and(Take-1, notice-12)
complm(charitable-19, that-13)
det(wealthiest-15, the-14)
nsubj(charitable-19, wealthiest-15)
cop(charitable-19, are-16)
det(charitable-19, the-17)
advmod(charitable-19, most-18)
ccomp(notice-12, charitable-19)
prep(charitable-19, by-20)
pcomp(by-20, far-21)

(ROOT
  (S
    (ADVP (RB Also))
    (PRN (, ,)
      (S
        (NP (DT the) (JJS wealthiest))
        (VP (VBP provide)
          (NP (DT the) (JJS most) (NNS jobs))))
      (, ,))
    (VP
      (VP (VB consume)
        (NP (DT the) (JJS most) (NNS goods)))
      (, ,)
      (VP (VB buy)
        (NP (DT the) (JJS most) (NNS cars)))
      (, ,)
      (CC and)
      (VP (VB pay)
        (ADVP (RB far) (RBR more))
        (PP (IN than)
          (NP
            (NP (PRP$ their) (NN share))
            (PP (IN of)
              (NP (NNS taxes)))))))
    (. .)))

advmod(consume-10, Also-1)
det(wealthiest-4, the-3)
nsubj(provide-5, wealthiest-4)
parataxis(consume-10, provide-5)
det(jobs-8, the-6)
amod(jobs-8, most-7)
dobj(provide-5, jobs-8)
root(ROOT-0, consume-10)
det(goods-13, the-11)
amod(goods-13, most-12)
dobj(consume-10, goods-13)
conj_and(consume-10, buy-15)
det(cars-18, the-16)
amod(cars-18, most-17)
dobj(buy-15, cars-18)
conj_and(consume-10, pay-21)
advmod(more-23, far-22)
advmod(pay-21, more-23)
poss(share-26, their-25)
prep_than(pay-21, share-26)
prep_of(share-26, taxes-28)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (DT this))
      (VP (VBZ is)
        (SBAR (IN because)
          (S
            (NP (PRP they))
            (VP (VBP have)
              (NP (JJR more) (NN money)))))))
    (, ,)
    (CC but)
    (SQ (VBP do) (RB n't)
      (NP (PRP you))
      (VP (VB want)
        (NP (PRP$ your) (NN employer)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP (JJR more) (NN money))
                (PP (IN than)
                  (NP (PRP you)))
                (SBAR (IN so)
                  (S
                    (NP (PRP they))
                    (VP (MD can)
                      (VP (VB afford)
                        (S
                          (VP (TO to)
                            (VP (VB pay)
                              (NP (PRP you)))))))))))))))
    (. ?)))

dep(is-4, Yes-1)
nsubj(is-4, this-3)
root(ROOT-0, is-4)
mark(have-7, because-5)
nsubj(have-7, they-6)
advcl(is-4, have-7)
amod(money-9, more-8)
dobj(have-7, money-9)
aux(want-15, do-12)
neg(want-15, n't-13)
nsubj(want-15, you-14)
conj_but(is-4, want-15)
poss(employer-17, your-16)
dobj(want-15, employer-17)
aux(have-19, to-18)
infmod(employer-17, have-19)
amod(money-21, more-20)
dobj(have-19, money-21)
prep_than(have-19, you-23)
mark(afford-27, so-24)
nsubj(afford-27, they-25)
xsubj(pay-29, they-25)
aux(afford-27, can-26)
advcl(have-19, afford-27)
aux(pay-29, to-28)
xcomp(afford-27, pay-29)
dobj(pay-29, you-30)

(ROOT
  (S
    (ADVP (RB Personally))
    (, ,)
    (NP (PRP I))
    (VP (VBP want)
      (NP (PRP$ my) (NN employer)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT the) (JJS richest) (NN man))
                (PP (IN in)
                  (NP (DT the) (NN country))))
              (SBAR (IN so)
                (S
                  (NP (PRP he))
                  (VP (MD can)
                    (VP (VB pay)
                      (NP (PRP me))
                      (NP
                        (NP (DT the) (JJS highest) (NN salary))
                        (PP (IN in)
                          (NP (DT the) (NN country)))))))))))))
    (: ...)))

advmod(want-4, Personally-1)
nsubj(want-4, I-3)
root(ROOT-0, want-4)
poss(employer-6, my-5)
dobj(want-4, employer-6)
aux(man-11, to-7)
cop(man-11, be-8)
det(man-11, the-9)
amod(man-11, richest-10)
infmod(employer-6, man-11)
det(country-14, the-13)
prep_in(man-11, country-14)
mark(pay-18, so-15)
nsubj(pay-18, he-16)
aux(pay-18, can-17)
advcl(man-11, pay-18)
iobj(pay-18, me-19)
det(salary-22, the-20)
amod(salary-22, highest-21)
dobj(pay-18, salary-22)
det(country-25, the-24)
prep_in(salary-22, country-25)

(ROOT
  (S
    (NP
      (NP (JJ Last) (NN point))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB make))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (S
            (VP (VBG seeking)
              (NP (NN health) (NN care))))
          (VP (VBZ is)
            (ADVP (RB indeed))
            (NP (DT a) (NN right))))))
    (. .)))

amod(point-2, Last-1)
dobj(want-4, point-2)
nsubj(is-7, point-2)
nsubj(want-4, I-3)
xsubj(make-6, I-3)
rcmod(point-2, want-4)
aux(make-6, to-5)
xcomp(want-4, make-6)
root(ROOT-0, is-7)
complm(right-15, that-8)
csubj(right-15, seeking-9)
nn(care-11, health-10)
dobj(seeking-9, care-11)
cop(right-15, is-12)
advmod(right-15, indeed-13)
det(right-15, a-14)
ccomp(is-7, right-15)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (NP (PRP it))))
    (VP (VBZ is)
      (NP (DT a) (NN right))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP provide)
            (NP (PRP it))
            (PP (TO to)
              (NP (PRP yourself)))))))
    (. .)))

csubj(right-5, Having-1)
dobj(Having-1, it-2)
cop(right-5, is-3)
det(right-5, a-4)
root(ROOT-0, right-5)
mark(provide-8, if-6)
nsubj(provide-8, you-7)
advcl(right-5, provide-8)
dobj(provide-8, it-9)
prep_to(provide-8, yourself-11)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (SBAR (IN since)
      (S
        (NP (PRP you))
        (ADVP (RB obviously))
        (VP (VBP lean)
          (PP (IN toward)
            (NP
              (NP (NN socialism))
              (PP (IN in)
                (NP (PRP$ your) (NNS opinions))))))))
    (, ,)
    (NP
      (NP (DT the) (NN fact))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP say)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP love)
                  (NP (NN capitalism)))))))))
    (VP (VBZ is)
      (ADJP (RB completely) (JJ hypocritical)))
    (. .)))

advmod(hypocritical-23, Therefore-1)
mark(lean-6, since-3)
nsubj(lean-6, you-4)
advmod(lean-6, obviously-5)
advcl(hypocritical-23, lean-6)
prep_toward(lean-6, socialism-8)
poss(opinions-11, your-10)
prep_in(socialism-8, opinions-11)
det(fact-14, the-13)
nsubj(hypocritical-23, fact-14)
complm(say-17, that-15)
nsubj(say-17, you-16)
dep(fact-14, say-17)
nsubj(love-19, you-18)
ccomp(say-17, love-19)
dobj(love-19, capitalism-20)
cop(hypocritical-23, is-21)
advmod(hypocritical-23, completely-22)
root(ROOT-0, hypocritical-23)

(ROOT
  (S
    (S
      (VP (VBG Making)
        (S
          (NP (NN someone) (RB else))
          (VP (VB pay)
            (S
              (NP (NN someone) (RB else))
              (VP (TO to)
                (VP (VB provide)
                  (NP (PRP you)))))))))
    (NP (NN health) (NN care))
    (VP (VBZ is) (RB not)
      (NP (DT a) (NN right)))
    (. .)))

dep(right-15, Making-1)
nsubj(pay-4, someone-2)
advmod(someone-2, else-3)
ccomp(Making-1, pay-4)
nsubj(provide-8, someone-5)
advmod(someone-5, else-6)
aux(provide-8, to-7)
xcomp(pay-4, provide-8)
dobj(provide-8, you-9)
nn(care-11, health-10)
nsubj(right-15, care-11)
cop(right-15, is-12)
neg(right-15, not-13)
det(right-15, a-14)
root(ROOT-0, right-15)

(ROOT
  (S
    (NP
      (NP (DT The)
        (ADJP (JJ right)
          (PP (TO to)
            (NP (NN life) (NNS means))))
        (NN nobody))
      (ADJP (RB else)))
    (VP (MD can)
      (VP (VB murder)
        (NP (PRP you))))
    (. .)))

det(nobody-6, The-1)
amod(nobody-6, right-2)
nn(means-5, life-4)
prep_to(right-2, means-5)
nsubj(murder-9, nobody-6)
amod(nobody-6, else-7)
aux(murder-9, can-8)
root(ROOT-0, murder-9)
dobj(murder-9, you-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB not)
      (VP (VB mean)
        (SBAR
          (S
            (NP (NN someone) (RB else))
            (VP (MD must)
              (VP (VB take)
                (NP
                  (NP (NN care))
                  (PP (IN of)
                    (NP (PRP you))))))))))
    (. .)))

nsubj(mean-4, It-1)
aux(mean-4, does-2)
neg(mean-4, not-3)
root(ROOT-0, mean-4)
nsubj(take-8, someone-5)
advmod(someone-5, else-6)
aux(take-8, must-7)
ccomp(mean-4, take-8)
dobj(take-8, care-9)
prep_of(care-9, you-11)

(ROOT
  (S
    (NP (NNS People))
    (VP (NN die)
      (ADVP
        (NP (DT every) (NN day))
        (CC and)
        (ADVP (RB as) (RB long)))
      (SBAR (IN as)
        (S
          (NP (NNS people))
          (VP (VBP are)
            (VP (VBG being)
              (VP (VBN born)
                (NP
                  (NP (DT every) (NN day))
                  (, ,)
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD will)
                        (VP (VB continue))))))))))))
    (. .)))

nsubj(die-2, People-1)
root(ROOT-0, die-2)
det(day-4, every-3)
advmod(die-2, day-4)
advmod(long-7, as-6)
advmod(die-2, long-7)
conj_and(day-4, long-7)
mark(born-12, as-8)
nsubjpass(born-12, people-9)
aux(born-12, are-10)
auxpass(born-12, being-11)
advcl(die-2, born-12)
det(day-14, every-13)
dobj(born-12, day-14)
nsubj(continue-18, day-14)
aux(continue-18, will-17)
rcmod(day-14, continue-18)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ matters))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NN everyone))
          (VP (VBZ has)
            (NP (DT the) (NN freedom)
              (S
                (VP (TO to)
                  (VP (VB seek)
                    (NP
                      (NP (DT a) (JJR better) (NN quality))
                      (PP (IN of)
                        (NP (NN life))))))))))))
    (. .)))

nsubj(matters-2, What-1)
csubj(is-3, matters-2)
root(ROOT-0, is-3)
complm(has-6, that-4)
nsubj(has-6, everyone-5)
ccomp(is-3, has-6)
det(freedom-8, the-7)
dobj(has-6, freedom-8)
aux(seek-10, to-9)
infmod(freedom-8, seek-10)
det(quality-13, a-11)
amod(quality-13, better-12)
dobj(seek-10, quality-13)
prep_of(quality-13, life-15)

(ROOT
  (S
    (NP (DT Each) (NN individual))
    (VP (MD can)
      (VP (VB choose)
        (NP (PRP$ their) (JJ own) (NN path))
        (S
          (VP (TO to)
            (VP (VB pursue)
              (NP (NN happiness))
              (SBAR (IN because)
                (S
                  (NP
                    (NP (NN nobody) (POS 's))
                    (NN path))
                  (VP (VBZ is)
                    (NP (DT the) (JJ same))))))))))
    (. .)))

det(individual-2, Each-1)
nsubj(choose-4, individual-2)
aux(choose-4, can-3)
root(ROOT-0, choose-4)
poss(path-7, their-5)
amod(path-7, own-6)
dobj(choose-4, path-7)
aux(pursue-9, to-8)
xcomp(choose-4, pursue-9)
dobj(pursue-9, happiness-10)
mark(same-17, because-11)
poss(path-14, nobody-12)
nsubj(same-17, path-14)
cop(same-17, is-15)
det(same-17, the-16)
advcl(pursue-9, same-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP treat)
          (NP (NNS individuals))
          (PP (IN as)
            (NP (DT a) (NN group))))))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (VP (VBG assuming)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP are) (RB not)
              (ADJP (RB just) (JJ equal))
              (PP (CC but)
                (NP (DT THE) (NNP SAME))))))))
    (. .)))

mark(treat-3, If-1)
nsubj(treat-3, you-2)
advcl(assuming-11, treat-3)
dobj(treat-3, individuals-4)
det(group-7, a-6)
prep_as(treat-3, group-7)
nsubj(assuming-11, that-9)
aux(assuming-11, is-10)
root(ROOT-0, assuming-11)
complm(equal-17, that-12)
nsubj(equal-17, they-13)
cop(equal-17, are-14)
neg(equal-17, not-15)
advmod(equal-17, just-16)
ccomp(assuming-11, equal-17)
prep(equal-17, but-18)
det(SAME-20, THE-19)
dep(but-18, SAME-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP strive)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJR better))
            (PP (IN than)
              (NP (PRP$ my) (NNS neighbors)))
            (SBAR (IN because)
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (ADJP (JJ greedy\/motivated\/whateveryouwanttocallit)))))))))
    (. .)))

nsubj(strive-2, I-1)
xsubj(better-5, I-1)
root(ROOT-0, strive-2)
aux(better-5, to-3)
cop(better-5, be-4)
xcomp(strive-2, better-5)
poss(neighbors-8, my-7)
prep_than(better-5, neighbors-8)
mark(greedy\/motivated\/whateveryouwanttocallit-12, because-9)
nsubj(greedy\/motivated\/whateveryouwanttocallit-12, I-10)
cop(greedy\/motivated\/whateveryouwanttocallit-12, am-11)
advcl(better-5, greedy\/motivated\/whateveryouwanttocallit-12)

(ROOT
  (S
    (NP (PRP$ My) (NN motivation))
    (VP
      (VP (VBZ makes)
        (S
          (NP (PRP me))
          (ADJP (JJR better))))
      (CC and)
      (VP (VBZ makes)
        (S
          (NP (PRP me))
          (VP (VB work)
            (ADVP (RBR harder))))))
    (. .)))

poss(motivation-2, My-1)
nsubj(makes-3, motivation-2)
nsubj(makes-7, motivation-2)
root(ROOT-0, makes-3)
nsubj(better-5, me-4)
xcomp(makes-3, better-5)
conj_and(makes-3, makes-7)
nsubj(work-9, me-8)
ccomp(makes-7, work-9)
advmod(work-9, harder-10)

(ROOT
  (S
    (PP (IN In)
      (S
        (VP (VBG working)
          (ADVP (RBR harder)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP contribute)
      (ADVP (RBR more))
      (PP (TO to)
        (NP (NN society)))
      (SBAR (IN while)
        (S
          (NP (PRP I))
          (VP (VBP get)
            (ADVP (RBR more) (IN out))
            (PP (IN of)
              (NP (PRP it)))))))
    (. .)))

prepc_in(contribute-6, working-2)
advmod(working-2, harder-3)
nsubj(contribute-6, I-5)
root(ROOT-0, contribute-6)
advmod(contribute-6, more-7)
prep_to(contribute-6, society-9)
mark(get-12, while-10)
nsubj(get-12, I-11)
advcl(contribute-6, get-12)
advmod(get-12, more-13)
prep_out_of(get-12, it-16)

(ROOT
  (S
    (NP (DT The) (NN reason) (NN capitalism))
    (VP (VBZ works)
      (ADVP
        (ADVP (RBR better))
        (SBAR (IN than)
          (S
            (NP (DT any) (JJ other) (JJ economic) (NN policy))
            (VP (VBZ is)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBZ benefits)
                    (ADVP (RBR more)
                      (PP (IN from)
                        (NP (NN greed))))
                    (PP (IN than)
                      (NP (DT any) (JJ other)))))))))))
    (. .)))

det(capitalism-3, The-1)
nn(capitalism-3, reason-2)
nsubj(works-4, capitalism-3)
root(ROOT-0, works-4)
advmod(works-4, better-5)
mark(is-11, than-6)
det(policy-10, any-7)
amod(policy-10, other-8)
amod(policy-10, economic-9)
nsubj(is-11, policy-10)
dep(better-5, is-11)
mark(benefits-14, because-12)
nsubj(benefits-14, it-13)
advcl(is-11, benefits-14)
advmod(benefits-14, more-15)
prep_from(more-15, greed-17)
det(other-20, any-19)
prep_than(benefits-14, other-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT a) (NN win-win))
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP do)
            (SBAR
              (S
                (NP
                  (NP (JJR better))
                  (CC and)
                  (NP (NN society)))
                (VP (VBZ does)
                  (ADJP (JJR better)))))))))
    (. .)))

nsubj(win-win-4, It-1)
cop(win-win-4, 's-2)
det(win-win-4, a-3)
root(ROOT-0, win-win-4)
mark(do-7, because-5)
nsubj(do-7, I-6)
advcl(win-win-4, do-7)
nsubj(better-12, better-8)
conj_and(better-8, society-10)
nsubj(better-12, society-10)
dep(better-12, does-11)
ccomp(do-7, better-12)

(ROOT
  (S
    (NP (NNP THAT))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN essence))
        (PP (IN of)
          (NP (NN capitalism)))))
    (. .)))

nsubj(essence-4, THAT-1)
cop(essence-4, is-2)
det(essence-4, the-3)
root(ROOT-0, essence-4)
prep_of(essence-4, capitalism-6)

(ROOT
  (S
    (S
      (NP (NNP Greed))
      (VP (VBZ causes)
        (S
          (NP (NNS people))
          (VP (TO to)
            (VP
              (VP (VB work)
                (ADJP (JJ hard)))
              (CC and)
              (VP (VB earn)
                (NP (PRP$ their) (NN share))
                (PP (IN in)
                  (NP
                    (NP (DT a) (JJ capitalist) (NN society))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ benefits)
                          (SBAR (IN because)
                            (S
                              (NP (NNS products))
                              (VP (VBP are)
                                (VP (VBN made))))))))))))))))
    (CC and)
    (S
      (NP (NNS services))
      (VP (VBP are)
        (VP (VBN provided)
          (S
            (VP (TO to)
              (VP (VB earn)
                (SBAR (IN that)
                  (S
                    (NP (NN money) (NNS people))
                    (ADVP (RB greedily))
                    (VP (VBP strive)
                      (PP (IN for)))))))))))
    (. .)))

nsubj(causes-2, Greed-1)
root(ROOT-0, causes-2)
nsubj(work-5, people-3)
nsubj(earn-8, people-3)
aux(work-5, to-4)
xcomp(causes-2, work-5)
acomp(work-5, hard-6)
xcomp(causes-2, earn-8)
conj_and(work-5, earn-8)
poss(share-10, their-9)
dobj(earn-8, share-10)
det(society-14, a-12)
amod(society-14, capitalist-13)
prep_in(earn-8, society-14)
nsubj(benefits-16, society-14)
rcmod(society-14, benefits-16)
mark(made-20, because-17)
nsubjpass(made-20, products-18)
auxpass(made-20, are-19)
advcl(benefits-16, made-20)
nsubjpass(provided-24, services-22)
xsubj(earn-26, services-22)
auxpass(provided-24, are-23)
conj_and(causes-2, provided-24)
aux(earn-26, to-25)
xcomp(provided-24, earn-26)
complm(strive-31, that-27)
nn(people-29, money-28)
nsubj(strive-31, people-29)
advmod(strive-31, greedily-30)
ccomp(earn-26, strive-31)
prep(strive-31, for-32)

(ROOT
  (S
    (S
      (NP (NNP Socialism))
      (VP (VBZ enslaves)
        (NP (JJ greedy) (NNS people))
        (SBAR (IN because)
          (S
            (NP (PRP they))
            (VP (VBP do) (RB not)
              (VP (VB have)
                (NP (DT the) (NN freedom)
                  (S
                    (VP (TO to)
                      (VP (VB keep)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP they))
                            (VP (VBP earn))))))))))))))
    (CC and)
    (S
      (ADVP (RB therefore))
      (NP (PRP they))
      (VP (VBP detest)
        (NP (NN society))))
    (. .)))

nsubj(enslaves-2, Socialism-1)
root(ROOT-0, enslaves-2)
amod(people-4, greedy-3)
dobj(enslaves-2, people-4)
mark(have-9, because-5)
nsubj(have-9, they-6)
aux(have-9, do-7)
neg(have-9, not-8)
advcl(enslaves-2, have-9)
det(freedom-11, the-10)
dobj(have-9, freedom-11)
aux(keep-13, to-12)
infmod(freedom-11, keep-13)
dobj(earn-16, what-14)
nsubj(earn-16, they-15)
ccomp(keep-13, earn-16)
advmod(detest-20, therefore-18)
nsubj(detest-20, they-19)
conj_and(enslaves-2, detest-20)
dobj(detest-20, society-21)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP begin)
      (S
        (VP (TO to)
          (VP (VB lose)
            (NP (NN motivation))
            (SBAR (IN because)
              (S
                (NP (PRP they))
                (VP (MD can) (RB not)
                  (VP
                    (VP (VB keep)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP they))
                          (VP (VBP earn)))))
                    (CC and)
                    (ADVP (RB therefore))
                    (, ,)
                    (SBAR
                      (WHADVP (WRB why))
                      (S
                        (VP (VBP work)
                          (ADJP (JJ hard)))))))))))))
    (. ?)))

nsubj(begin-2, They-1)
xsubj(lose-4, They-1)
root(ROOT-0, begin-2)
aux(lose-4, to-3)
xcomp(begin-2, lose-4)
dobj(lose-4, motivation-5)
mark(keep-10, because-6)
nsubj(keep-10, they-7)
aux(keep-10, can-8)
neg(keep-10, not-9)
advcl(lose-4, keep-10)
dobj(earn-13, what-11)
nsubj(earn-13, they-12)
ccomp(keep-10, earn-13)
advcl(lose-4, therefore-15)
advmod(keep-10, therefore-15)
conj_and(keep-10, therefore-15)
advmod(work-18, why-17)
advcl(keep-10, work-18)
acomp(work-18, hard-19)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN point)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(point-4, no-3)
nsubj(is-2, point-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJR easier))
      (S
        (VP (TO to)
          (VP
            (VP (VB do)
              (NP (NN nothing)))
            (CC and)
            (VP (VB mooch)
              (PRT (RP off))
              (NP (DT the) (NN system))))))
      (SBAR (IN because)
        (S
          (NP (DT that))
          (VP (VBZ 's)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (JJ other) (NNS people))
                (VP (VBP get)
                  (S
                    (VP (TO to)
                      (VP (VB do)))))))))))
    (. .)))

nsubj(easier-3, It-1)
xsubj(do-5, It-1)
cop(easier-3, is-2)
root(ROOT-0, easier-3)
aux(do-5, to-4)
xcomp(easier-3, do-5)
dobj(do-5, nothing-6)
xcomp(easier-3, mooch-8)
conj_and(do-5, mooch-8)
prt(mooch-8, off-9)
det(system-11, the-10)
dobj(mooch-8, system-11)
mark('s-14, because-12)
nsubj('s-14, that-13)
advcl(easier-3, 's-14)
dep(get-18, what-15)
amod(people-17, other-16)
nsubj(get-18, people-17)
xsubj(do-20, people-17)
ccomp('s-14, get-18)
aux(do-20, to-19)
xcomp(get-18, do-20)

(ROOT
  (S
    (S
      (NP (NNP Greed))
      (VP (VBZ is)
        (ADJP (JJ natural))))
    (CC and)
    (S
      (NP (NN capitalism) (NNS suits))
      (NP (PRP it)))
    (. .)))

nsubj(natural-3, Greed-1)
cop(natural-3, is-2)
root(ROOT-0, natural-3)
nn(suits-6, capitalism-5)
dep(it-7, suits-6)
conj_and(natural-3, it-7)

