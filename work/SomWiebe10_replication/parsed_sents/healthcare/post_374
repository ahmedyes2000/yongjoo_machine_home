(ROOT
  (INTJ (UH ...)))


(ROOT
  (INTJ (UH .)))


(ROOT
  (FRAG
    (NP (NNS thanks))
    (, ,)
    (CC but)
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBZ 's) (RB not)
          (NP (NN communism)))))
    (. .)))

root(ROOT-0, thanks-1)
dep(thanks-1, but-3)
nsubj(communism-7, that-4)
cop(communism-7, 's-5)
neg(communism-7, not-6)
dep(thanks-1, communism-7)

(ROOT
  (S (CC and)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (DT a)
            (ADJP (RB very) (JJ easy))
            (NN argument))
          (SBAR
            (S
              (VP (TO to)
                (VP (VB make))))))
        (CC and)
        (NP (DT a) (JJ hard) (NN one)
          (S
            (VP (TO to)
              (VP (VB argue)
                (PP (IN against))))))))
    (. .)))

nsubj(argument-7, it-2)
cop(argument-7, 's-3)
det(argument-7, a-4)
advmod(easy-6, very-5)
amod(argument-7, easy-6)
root(ROOT-0, argument-7)
aux(make-9, to-8)
infmod(argument-7, make-9)
det(one-13, a-11)
amod(one-13, hard-12)
conj_and(argument-7, one-13)
aux(argue-15, to-14)
infmod(one-13, argue-15)
prep(argue-15, against-16)

(ROOT
  (FRAG (CC But)
    (WP what) (IN about)
    (NP (NNP Mother) (NNP Theresa))
    (. ?)))

dep(about-3, But-1)
dep(about-3, what-2)
root(ROOT-0, about-3)
nn(Theresa-5, Mother-4)
dep(about-3, Theresa-5)

(ROOT
  (NP (: ...)
    (NP (IN but)
      (NP (WP what)))
    (PP (IN about)
      (NP (DT some) (JJ regular) (NN person)))
    (. ?)))

amod(what-3, but-2)
root(ROOT-0, what-3)
det(person-7, some-5)
amod(person-7, regular-6)
prep_about(what-3, person-7)

(ROOT
  (NP (JJ Greater) (NN reward) (: ...)))

amod(reward-2, Greater-1)
root(ROOT-0, reward-2)

(ROOT
  (S
    (NP (DT that))
    (VP (VBZ 's)
      (FRAG
        (WHADVP (WRB why))))
    (. .)))

nsubj('s-2, that-1)
root(ROOT-0, 's-2)
dep('s-2, why-3)

(ROOT
  (S
    (NP (NNP Mother) (NNP Theresa))
    (VP (VBD did)
      (NP
        (NP (PDT all) (DT those) (NNS things))
        (PP (RB because) (IN of)
          (NP
            (NP (DT the) (JJ ultimate))
            (, ,)
            (CC and)
            (RB purely)
            (NP (JJ selfish) (NN act))))
        (PP (IN of)
          (S
            (VP (VBG getting)
              (PP (IN into)
                (NP (NN heaven))))))))
    (. .)))

nn(Theresa-2, Mother-1)
nsubj(did-3, Theresa-2)
root(ROOT-0, did-3)
predet(things-6, all-4)
det(things-6, those-5)
dobj(did-3, things-6)
det(ultimate-10, the-9)
prep_because_of(things-6, ultimate-10)
prep_because_of(things-6, purely-13)
advmod(ultimate-10, purely-13)
conj_and(ultimate-10, purely-13)
amod(act-15, selfish-14)
dep(ultimate-10, act-15)
prepc_of(things-6, getting-17)
prep_into(getting-17, heaven-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB appreciate)
                (NP (JJ human) (NN life))))))))
    (: ...)))

nsubj(mean-4, It-1)
aux(mean-4, does-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
nsubj(appreciate-8, you-5)
aux(appreciate-8, do-6)
neg(appreciate-8, n't-7)
ccomp(mean-4, appreciate-8)
amod(life-10, human-9)
dobj(appreciate-8, life-10)

(ROOT
  (S (CC but)
    (S
      (VP (VBG acting)
        (PP (IN in)
          (NP (NN self-interest)))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN reason))
        (PP (IN behind)
          (NP (JJS most) (NNS actions)))))
    (. .)))

cc(reason-7, but-1)
csubj(reason-7, acting-2)
prep_in(acting-2, self-interest-4)
cop(reason-7, is-5)
det(reason-7, the-6)
root(ROOT-0, reason-7)
amod(actions-10, most-9)
prep_behind(reason-7, actions-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD made)
        (SBAR
          (S
            (NP (PRP$ my) (JJ new) (NNS neighbors) (NN vegan))
            (VP (VBZ brownies)
              (SBAR (IN because)
                (S
                  (NP (PRP I))
                  (VP (VBP want)
                    (S
                      (NP (PRP them))
                      (VP (TO to)
                        (VP (VB like)
                          (NP (PRP me)))))))))))))
    (: ...)
    (S
      (ADVP (DT that) (NN way))
      (NP (PRP they))
      (VP (MD 'll)
        (VP (VB call)
          (NP (CD 911))
          (SBAR (IN if)
            (S
              (NP (PRP$ my) (NN house))
              (VP (VBZ is)
                (PP (IN on)
                  (NP (NN fire)))))))))
    (. .)))

nsubj(made-2, I-1)
root(ROOT-0, made-2)
poss(vegan-6, my-3)
amod(vegan-6, new-4)
nn(vegan-6, neighbors-5)
nsubj(brownies-7, vegan-6)
ccomp(made-2, brownies-7)
mark(want-10, because-8)
nsubj(want-10, I-9)
advcl(brownies-7, want-10)
nsubj(like-13, them-11)
aux(like-13, to-12)
xcomp(want-10, like-13)
dobj(like-13, me-14)
dep(way-17, that-16)
advmod(call-20, way-17)
nsubj(call-20, they-18)
aux(call-20, 'll-19)
parataxis(made-2, call-20)
dobj(call-20, 911-21)
mark(is-25, if-22)
poss(house-24, my-23)
nsubj(is-25, house-24)
advcl(call-20, is-25)
prep_on(is-25, fire-27)

(ROOT
  (NP (NNP Purely) (NNP selfish) (: ...)))

nn(selfish-2, Purely-1)
root(ROOT-0, selfish-2)

(ROOT
  (S (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do)
        (SBAR
          (S
            (VP (VBP think)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP 're)
                    (NP (JJ nice) (NNS people))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP hope)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP enjoy)
              (NP
                (NP (DT the) (NNS brownies))
                (PRN (-LRB- -LRB-)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD were) (RB Not)
                        (ADJP (JJ goopy))
                        (, ,)
                        (ADJP (JJ amazingly)))))
                  (-RRB- -RRB-))))))))
    (. .)))

nsubj(do-3, I-2)
root(ROOT-0, do-3)
ccomp(do-3, think-4)
nsubj(people-8, they-5)
cop(people-8, 're-6)
amod(people-8, nice-7)
ccomp(think-4, people-8)
nsubj(hope-11, I-10)
conj_and(do-3, hope-11)
nsubj(enjoy-13, they-12)
ccomp(hope-11, enjoy-13)
det(brownies-15, the-14)
dobj(enjoy-13, brownies-15)
nsubj(goopy-20, which-17)
cop(goopy-20, were-18)
neg(goopy-20, Not-19)
dep(brownies-15, goopy-20)
acomp(goopy-20, amazingly-22)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT a) (NN distortion)))
    (. .)))

nsubj(distortion-4, It-1)
cop(distortion-4, 's-2)
det(distortion-4, a-3)
root(ROOT-0, distortion-4)

(ROOT
  (SBARQ
    (WHNP
      (WHADJP (WRB How) (JJ many))
      (NNS people))
    (SQ
      (VP (VBD died)
        (PP (IN under)
          (NP
            (NP (DT the) (NN distortion))
            (PP (IN of)
              (NP (NN capitalism)))))))
    (. ?)))

advmod(many-2, How-1)
amod(people-3, many-2)
nsubj(died-4, people-3)
root(ROOT-0, died-4)
det(distortion-7, the-6)
prep_under(died-4, distortion-7)
prep_of(distortion-7, capitalism-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know))))
    (: ...)
    (FRAG (CC but)
      (NP (RB quite) (DT a) (NN lot)))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
dep(lot-9, but-6)
advmod(lot-9, quite-7)
det(lot-9, a-8)
dep(know-4, lot-9)

(ROOT
  (S
    (NP (NNS People))
    (ADVP (RB still))
    (VP (VBP do)
      (SBAR (IN because)
        (S
          (NP (`` ``) (NN capitalism) ('' ''))
          (VP (VBZ supports)
            (NP (`` ``) (NN communism) ('' ''))))))
    (. .)))

nsubj(do-3, People-1)
advmod(do-3, still-2)
root(ROOT-0, do-3)
mark(supports-8, because-4)
nsubj(supports-8, capitalism-6)
advcl(do-3, supports-8)
dobj(supports-8, communism-10)

(ROOT
  (S (CC Or)
    (, ,)
    (ADVP (RB maybe))
    (NP (PRP you))
    (VP (VBP have) (RB n't)
      (VP (VBN noticed)
        (SBAR (IN that)
          (S
            (NP (NN production))
            (VP
              (VP (VBZ has)
                (ADVP (DT all)
                  (CC but))
                (VP (VBN ceased)
                  (ADVP (RB here))))
              (CC and)
              (VP (VBZ has)
                (VP (VBN been)
                  (VP (VBN moved)
                    (PP (TO to)
                      (NP
                        (NP (NNS places))
                        (SBAR
                          (WHADVP (WRB where))
                          (S
                            (NP (NN profit))
                            (VP (VBZ is)
                              (VP (VBN maximized)
                                (PP (CC but)
                                  (PP (IN at)
                                    (NP (DT a) (JJ human) (NN cost))))))))))))))))))
    (. ?)))

cc(noticed-7, Or-1)
advmod(noticed-7, maybe-3)
nsubj(noticed-7, you-4)
aux(noticed-7, have-5)
neg(noticed-7, n't-6)
root(ROOT-0, noticed-7)
complm(ceased-13, that-8)
nsubj(ceased-13, production-9)
nsubjpass(moved-18, production-9)
aux(ceased-13, has-10)
dep(but-12, all-11)
advmod(ceased-13, but-12)
ccomp(noticed-7, ceased-13)
advmod(ceased-13, here-14)
aux(moved-18, has-16)
auxpass(moved-18, been-17)
ccomp(noticed-7, moved-18)
conj_and(ceased-13, moved-18)
prep_to(moved-18, places-20)
advmod(maximized-24, where-21)
nsubjpass(maximized-24, profit-22)
auxpass(maximized-24, is-23)
rcmod(places-20, maximized-24)
cc(maximized-24, but-25)
det(cost-29, a-27)
amod(cost-29, human-28)
prep_at(maximized-24, cost-29)

(ROOT
  (S
    (ADVP (RB Now))
    (: ...)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (DT a) (JJ common) (NN idea))
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP
              (NP (DT no) (JJ such) (NN thing))
              (PP (IN as)
                (NP (NN altruism))))))))
    (. .)))

advmod(idea-7, Now-1)
nsubj(idea-7, it-3)
cop(idea-7, 's-4)
det(idea-7, a-5)
amod(idea-7, common-6)
root(ROOT-0, idea-7)
complm('s-10, that-8)
expl('s-10, there-9)
ccomp(idea-7, 's-10)
det(thing-13, no-11)
amod(thing-13, such-12)
nsubj('s-10, thing-13)
prep_as(thing-13, altruism-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT an) (NN argument)))
    (. .)))

nsubj(argument-4, It-1)
cop(argument-4, 's-2)
det(argument-4, an-3)
root(ROOT-0, argument-4)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (DT all)))
    (: ...)))

nsubj(all-3, That-1)
cop(all-3, 's-2)
root(ROOT-0, all-3)

