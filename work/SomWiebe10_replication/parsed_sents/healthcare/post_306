(ROOT
  (S
    (S
      (VP (VBN SkipTN)))
    (, ,)
    (NP (PRP You))
    (VP (VBP have)
      (NP
        (NP (DT the) (JJ right) (NN idea))
        (SBAR (IN that)
          (S
            (NP (NNP UHC))
            (VP (MD would)
              (VP (VB increase)
                (NP (NN wait) (NN time)
                  (CC and)
                  (NN pressure))
                (PP (IN on)
                  (NP
                    (NP (NN emergency) (NNS rooms))
                    (, ,)
                    (NP (FW etc.))))))))))
    (. .)))

partmod(have-4, SkipTN-1)
nsubj(have-4, You-3)
root(ROOT-0, have-4)
det(idea-7, the-5)
amod(idea-7, right-6)
dobj(have-4, idea-7)
complm(increase-11, that-8)
nsubj(increase-11, UHC-9)
aux(increase-11, would-10)
dep(idea-7, increase-11)
nn(time-13, wait-12)
dobj(increase-11, time-13)
dobj(increase-11, pressure-15)
conj_and(time-13, pressure-15)
nn(rooms-18, emergency-17)
prep_on(increase-11, rooms-18)
appos(rooms-18, etc.-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NN solution))
      (PP (TO to)
        (NP (DT this) (NN problem))))
    (VP (VBZ is) (RB not)
      (S
        (VP (TO to)
          (VP (VB pressure)
            (NP (NN insurance) (NNS companies))
            (S
              (VP (TO to)
                (VP (VB cover)
                  (NP (NN everyone)))))))))
    (. .)))

det(solution-2, The-1)
nsubj(is-6, solution-2)
xsubj(pressure-9, solution-2)
det(problem-5, this-4)
prep_to(solution-2, problem-5)
root(ROOT-0, is-6)
neg(is-6, not-7)
aux(pressure-9, to-8)
xcomp(is-6, pressure-9)
nn(companies-11, insurance-10)
dobj(pressure-9, companies-11)
aux(cover-13, to-12)
xcomp(pressure-9, cover-13)
dobj(cover-13, everyone-14)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD would)
        (VP (VB go)
          (PRT (RP out))
          (PP (IN of)
            (NP (NN business))))))
    (CC and)
    (RB then)
    (S
      (NP (PRP we))
      (VP (VBP 're) (RB all)
        (VP (VBN screwed))))
    (. .)))

nsubj(go-3, They-1)
aux(go-3, would-2)
root(ROOT-0, go-3)
prep_out_of(go-3, business-6)
advmod(go-3, then-8)
conj_and(go-3, then-8)
nsubjpass(screwed-12, we-9)
auxpass(screwed-12, 're-10)
advmod(screwed-12, all-11)
ccomp(go-3, screwed-12)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN basis))
        (PP (IN of)
          (NP
            (NP (DT this) (NN country))
            (SBAR
              (S
                (VP (VBZ is) (RB n't)
                  (NP (PRP it)))))))))
    (. ?)))

nsubj(basis-4, That-1)
cop(basis-4, is-2)
det(basis-4, the-3)
root(ROOT-0, basis-4)
det(country-7, this-6)
prep_of(basis-4, country-7)
cop(it-10, is-8)
neg(it-10, n't-9)
rcmod(country-7, it-10)

(ROOT
  (S
    (NP (DT The) (NN solution))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP
            (VP (VB reduce)
              (NP (DT the) (NNS regulations))
              (ADVP (RB already))
              (PP (IN on)
                (NP (NN insurance) (NNS companies))))
            (CONJP (RB as) (RB well) (IN as))
            (VP (VB encourage)
              (NP (JJ true) (NN competition))
              (PP (IN for)
                (NP (NN health) (NN coverage))))))))
    (. .)))

det(solution-2, The-1)
nsubj(is-3, solution-2)
xsubj(reduce-5, solution-2)
root(ROOT-0, is-3)
aux(reduce-5, to-4)
xcomp(is-3, reduce-5)
det(regulations-7, the-6)
dobj(reduce-5, regulations-7)
advmod(reduce-5, already-8)
nn(companies-11, insurance-10)
prep_on(reduce-5, companies-11)
xcomp(is-3, encourage-15)
conj_and(reduce-5, encourage-15)
amod(competition-17, true-16)
dobj(encourage-15, competition-17)
nn(coverage-20, health-19)
prep_for(encourage-15, coverage-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ true))
      (SBAR (IN that)
        (S
          (NP (RB not) (NN everyone))
          (VP (MD would)
            (VP (VB have)
              (NP (NN coverage)))))))
    (. .)))

nsubj(true-3, It-1)
cop(true-3, 's-2)
root(ROOT-0, true-3)
complm(have-8, that-4)
neg(everyone-6, not-5)
nsubj(have-8, everyone-6)
aux(have-8, would-7)
ccomp(true-3, have-8)
dobj(have-8, coverage-9)

(ROOT
  (S
    (NP (NNP Health) (NN coverage))
    (VP (MD would)
      (VP (VB cost)
        (NP (JJR more))
        (PP (IN for)
          (NP (NN unhealthier) (NNS people)))))
    (. .)))

nn(coverage-2, Health-1)
nsubj(cost-4, coverage-2)
aux(cost-4, would-3)
root(ROOT-0, cost-4)
dobj(cost-4, more-5)
nn(people-8, unhealthier-7)
prep_for(cost-4, people-8)

(ROOT
  (SQ (MD Would) (RB n't)
    (NP (DT this))
    (VP (VB encourage)
      (S
        (NP (NNS people))
        (VP (TO to)
          (VP (VB take)
            (NP
              (NP (NN care))
              (PP (IN of)
                (NP (PRP themselves))))))))
    (. ?)))

aux(encourage-4, Would-1)
neg(encourage-4, n't-2)
nsubj(encourage-4, this-3)
root(ROOT-0, encourage-4)
nsubj(take-7, people-5)
aux(take-7, to-6)
xcomp(encourage-4, take-7)
dobj(take-7, care-8)
prep_of(care-8, themselves-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would) (RB rather)
      (VP (VB encourage)
        (S
          (NP (NNS people))
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ 's)
                    (ADVP (RB right)
                      (PP (IN for)
                        (NP (PRP them))))
                    (VP (IN than)
                      (S
                        (VP (TO to)
                          (VP (VB force)
                            (NP (PRP it))
                            (PP (IN with)
                              (NP
                                (NP (NNS taxes))
                                (PP (IN on)
                                  (NP (JJ unhealthy) (NN food) (, ,) (NNS cigarettes) (, ,) (FW etc.)))))
                            (SBAR (IN while)
                              (S
                                (ADVP (RB still))
                                (VP (VBG paying)
                                  (PP (IN for)
                                    (NP (PRP$ their) (JJ continued)
                                      (PRN (-LRB- -LRB-)
                                        (ADJP (RBR more) (JJ expensive))
                                        (-RRB- -RRB-))
                                      (JJ unhealthy) (NN habits))))))))))))))))))
    (. .)))

nsubj(encourage-4, I-1)
aux(encourage-4, would-2)
advmod(encourage-4, rather-3)
root(ROOT-0, encourage-4)
nsubj(do-7, people-5)
aux(do-7, to-6)
xcomp(encourage-4, do-7)
nsubj(than-13, what-8)
aux(than-13, 's-9)
advmod(than-13, right-10)
prep_for(right-10, them-12)
ccomp(do-7, than-13)
aux(force-15, to-14)
xcomp(than-13, force-15)
dobj(force-15, it-16)
prep_with(force-15, taxes-18)
amod(cigarettes-23, unhealthy-20)
nn(cigarettes-23, food-21)
prep_on(taxes-18, cigarettes-23)
dep(cigarettes-23, etc.-25)
mark(paying-28, while-26)
advmod(paying-28, still-27)
advcl(force-15, paying-28)
poss(habits-37, their-30)
amod(habits-37, continued-31)
advmod(expensive-34, more-33)
dep(habits-37, expensive-34)
amod(habits-37, unhealthy-36)
prep_for(paying-28, habits-37)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB also))
    (ADVP (RB strongly))
    (VP (VBP disagree)
      (PP (IN with)
        (NP
          (NP (DT the) (NN idea))
          (PP (IN of)
            (NP
              (NP (DT a) (JJ few) (NNS people))
              (VP (VBG making)
                (NP
                  (NP (DT a) (NN decision))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD will)
                        (VP (VB affect)
                          (NP (NN everybody)))))))))))))
    (. .)))

nsubj(disagree-4, I-1)
advmod(disagree-4, also-2)
advmod(disagree-4, strongly-3)
root(ROOT-0, disagree-4)
det(idea-7, the-6)
prep_with(disagree-4, idea-7)
det(people-11, a-9)
amod(people-11, few-10)
prep_of(idea-7, people-11)
partmod(people-11, making-12)
det(decision-14, a-13)
dobj(making-12, decision-14)
nsubj(affect-17, decision-14)
aux(affect-17, will-16)
rcmod(decision-14, affect-17)
dobj(affect-17, everybody-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN everyone))
        (VP (VBD was)
          (ADJP (JJ unanimous)
            (PP (IN in)
              (NP (DT this) (NN decision)))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB have)
        (NP
          (NP
            (ADJP (RB much) (JJR higher))
            (NN chance))
          (PP (IN of)
            (NP (NN success))))))
    (. .)))

mark(unanimous-4, If-1)
nsubj(unanimous-4, everyone-2)
cop(unanimous-4, was-3)
advcl(have-11, unanimous-4)
det(decision-7, this-6)
prep_in(unanimous-4, decision-7)
nsubj(have-11, it-9)
aux(have-11, would-10)
root(ROOT-0, have-11)
advmod(higher-13, much-12)
amod(chance-14, higher-13)
dobj(have-11, chance-14)
prep_of(chance-14, success-16)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ simple) (NN fact))
      (SBAR (IN that)
        (S
          (NP (NNS people))
          (VP (VBP are)
            (VP (VBN divided)
              (S
                (NP (NNS means))
                (VP (VB live)
                  (CC and)
                  (VB let))))))))
    (VP (VBP live))
    (. .)))

det(fact-3, The-1)
amod(fact-3, simple-2)
nsubj(live-12, fact-3)
complm(divided-7, that-4)
nsubjpass(divided-7, people-5)
auxpass(divided-7, are-6)
dep(fact-3, divided-7)
nsubj(live-9, means-8)
nsubj(let-11, means-8)
ccomp(divided-7, live-9)
ccomp(divided-7, let-11)
conj_and(live-9, let-11)
root(ROOT-0, live-12)

