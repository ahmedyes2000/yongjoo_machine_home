(ROOT
  (S
    (NP (NNS People))
    (VP (VBP have)
      (NP (DT a) (NN right)
        (S
          (VP (TO to)
            (VP (VB pay)
              (NP (JJR more))
              (PP (IN for)
                (NP
                  (NP (JJR better) (NN health) (NN care))
                  (NP (NNP Froma) (NNP Harrop)))))))))
    (. .)))

nsubj(have-2, People-1)
root(ROOT-0, have-2)
det(right-4, a-3)
dobj(have-2, right-4)
aux(pay-6, to-5)
infmod(right-4, pay-6)
dobj(pay-6, more-7)
amod(care-11, better-9)
nn(care-11, health-10)
prep_for(pay-6, care-11)
nn(Harrop-13, Froma-12)
dep(care-11, Harrop-13)

(ROOT
  (S ('' '')
    (NP (NNP Canada))
    (VP (VBZ 's)
      (NP (DT the) (JJ wrong) (NN model)
        (PP (IN for)
          (NP (JJ universal) (NN health) (NN care)))
        ('' '')))
    (. .)))

nsubj(model-6, Canada-2)
cop(model-6, 's-3)
det(model-6, the-4)
amod(model-6, wrong-5)
root(ROOT-0, model-6)
amod(care-10, universal-8)
nn(care-10, health-9)
prep_for(model-6, care-10)

(ROOT
  (NP (NNP Seattle) (NNP Times) (. .)))

nn(Times-2, Seattle-1)
root(ROOT-0, Times-2)

(ROOT
  (NP
    (NP (NNP February) (NNP 28th))
    (, ,)
    (NP
      (NP (CD 2007))
      (SBAR (`` ``)
        (S
          (NP (EX There))
          (VP (VBZ 's)
            (ADVP (RB also))
            (NP (DT the) (NN freedom) (NN argument))))))
    (. .)))

nn(28th-2, February-1)
root(ROOT-0, 28th-2)
appos(28th-2, 2007-4)
expl('s-7, There-6)
dep(2007-4, 's-7)
advmod('s-7, also-8)
det(argument-11, the-9)
nn(argument-11, freedom-10)
nsubj('s-7, argument-11)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN told)
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP (PRP they))
                      (VP (MD ca) (RB n't)
                        (VP (VB spend)
                          (NP (PRP$ their) (JJ own) (NN money))
                          (PP (IN on)
                            (NP
                              (NP (NNS goods))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (MD would)
                                    (VP (VB benefit)
                                      (NP (PRP them))))))))))))
                  (CC and)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (MD can)
                        (VP (VB blame)
                          (NP (PRP them)))))))))))))
    (. ?)))

nsubj(want-4, People-1)
xsubj(told-7, People-1)
aux(want-4, do-2)
neg(want-4, n't-3)
root(ROOT-0, want-4)
aux(told-7, to-5)
auxpass(told-7, be-6)
xcomp(want-4, told-7)
complm(spend-12, that-8)
nsubj(spend-12, they-9)
aux(spend-12, ca-10)
neg(spend-12, n't-11)
ccomp(told-7, spend-12)
poss(money-15, their-13)
amod(money-15, own-14)
dobj(spend-12, money-15)
prep_on(spend-12, goods-17)
nsubj(benefit-20, goods-17)
aux(benefit-20, would-19)
rcmod(goods-17, benefit-20)
dobj(benefit-20, them-21)
nsubj(blame-25, who-23)
aux(blame-25, can-24)
ccomp(told-7, blame-25)
conj_and(spend-12, blame-25)
dobj(blame-25, them-26)

