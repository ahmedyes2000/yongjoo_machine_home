(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (ADVP (RB really))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT a) (NN follower))
                  (PP (IN of)
                    (NP (NNP Ayn) (NNP Rand))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD might)
      (VP (VB be)
        (ADJP
          (ADJP (JJR better))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (ADVP (RB \*))
              (VP (VBP think)
                (PP (IN for)
                  (NP
                    (NP (PRP yourself))
                    (X (SYM \*))))))))))
    (. .)))

mark(want-4, If-1)
nsubj(want-4, you-2)
xsubj(follower-8, you-2)
advmod(want-4, really-3)
advcl(better-16, want-4)
aux(follower-8, to-5)
cop(follower-8, be-6)
det(follower-8, a-7)
xcomp(want-4, follower-8)
nn(Rand-11, Ayn-10)
prep_of(follower-8, Rand-11)
nsubj(better-16, it-13)
aux(better-16, might-14)
cop(better-16, be-15)
root(ROOT-0, better-16)
mark(think-20, if-17)
nsubj(think-20, you-18)
advmod(think-20, \*-19)
ccomp(better-16, think-20)
prep_for(think-20, yourself-22)
dep(yourself-22, \*-23)

(ROOT
  (S
    (NP (NN Reason)
      (CC and)
      (NN observation))
    (VP (VBP are)
      (NP
        (NP (JJ key) (NNS elements))
        (PP (TO to)
          (NP (PRP$ her) (NN philosophy)))))
    (. .)))

nsubj(elements-6, Reason-1)
conj_and(Reason-1, observation-3)
nsubj(elements-6, observation-3)
cop(elements-6, are-4)
amod(elements-6, key-5)
root(ROOT-0, elements-6)
poss(philosophy-9, her-8)
prep_to(elements-6, philosophy-9)

(ROOT
  (S
    (NP
      (NP (DT That) (NN socialism))
      (PP (IN in)
        (NP (DT any) (NN shape)
          (CC or)
          (NN form))))
    (VP (VBZ is)
      (ADJP (JJ wrong)))
    (. .)))

det(socialism-2, That-1)
nsubj(wrong-9, socialism-2)
det(shape-5, any-4)
prep_in(socialism-2, shape-5)
prep_in(socialism-2, form-7)
conj_or(shape-5, form-7)
cop(wrong-9, is-8)
root(ROOT-0, wrong-9)

(ROOT
  (S
    (NP (NN Capitalism))
    (VP (VBZ is)
      (ADJP (JJ fine)
        (PP (IN for)
          (NP (DT the) (NNS things))))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP
            (VP (VBP want))
            (, ,)
            (CC but)
            (VP (VBP do) (RB not)
              (VP (VB need)))))))
    (. .)))

nsubj(fine-3, Capitalism-1)
cop(fine-3, is-2)
root(ROOT-0, fine-3)
det(things-6, the-5)
prep_for(fine-3, things-6)
complm(want-9, that-7)
nsubj(want-9, we-8)
nsubj(need-14, we-8)
ccomp(fine-3, want-9)
aux(need-14, do-12)
neg(need-14, not-13)
ccomp(fine-3, need-14)
conj_but(want-9, need-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ promotes)
            (NP (DT the) (JJ middle) (NN class)
              (CC and)
              (NNS tears))
            (PP (TO to)
              (NP
                (NP (NNP pieces) (NNP Marx) (POS 's))
                (NN theory)))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
nsubj(promotes-4, what-3)
ccomp(is-2, promotes-4)
det(class-7, the-5)
amod(class-7, middle-6)
dobj(promotes-4, class-7)
dobj(promotes-4, tears-9)
conj_and(class-7, tears-9)
nn(Marx-12, pieces-11)
poss(theory-14, Marx-12)
prep_to(promotes-4, theory-14)

(ROOT
  (S (CC But)
    (NP (NN history))
    (VP (VBZ has)
      (VP (VBN shown)
        (NP
          (NP (PRP us))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ occurs)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (NNS humans))
                        (VP (VBP need))))
                    (VP (VBZ is)
                      (VP (VBN held)
                        (PRT (RP up))
                        (PP (IN for)
                          (NP (NN sale)))
                        (PP (TO to)
                          (NP
                            (NP (DT the) (JJS highest) (NN bidder))
                            (CC and)
                            (NP
                              (NP (DT those))
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (VP (MD can)
                                    (VP (VB afford)
                                      (NP (PRP it)))))))))))))))))))
    (. .)))

cc(shown-4, But-1)
nsubj(shown-4, history-2)
aux(shown-4, has-3)
root(ROOT-0, shown-4)
dobj(shown-4, us-5)
nsubj(occurs-7, us-5)
nsubjpass(held-13, us-5)
rcmod(us-5, occurs-7)
advmod(held-13, when-8)
dobj(need-11, what-9)
nsubj(need-11, humans-10)
csubjpass(held-13, need-11)
auxpass(held-13, is-12)
advcl(occurs-7, held-13)
prt(held-13, up-14)
prep_for(held-13, sale-16)
det(bidder-20, the-18)
amod(bidder-20, highest-19)
prep_to(held-13, bidder-20)
prep_to(held-13, those-22)
conj_and(bidder-20, those-22)
nsubj(afford-25, those-22)
aux(afford-25, can-24)
rcmod(those-22, afford-25)
dobj(afford-25, it-26)

(ROOT
  (S
    (S
      (NP (NN History))
      (VP (VBZ has)
        (ADVP (RB also))
        (VP (VBN shown)
          (NP (PRP us))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP control)
                      (NP
                        (NP (DT those) (JJ supposed) (`` ``) (NNS markets) ('' ''))
                        (PP (IN of)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (VP (VBZ is)
                                (ADVP (RB strictly))
                                (NP (DT a) (NN need)))))))))))
              (VP (VBP are)
                (ADVP (RB also))
                (NP
                  (NP (DT the) (NNS ones))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (MD can)
                        (VP (VB afford)
                          (S
                            (VP (TO to)
                              (VP (VB exert)
                                (NP
                                  (NP (JJ such) (NN power))
                                  (CC and)
                                  (NP (DT the) (NN abuse)))))))))))))))))
    (NP (PRP they))
    (VP (VBP reek)
      (PP (IN upon)
        (NP
          (NP (DT the) (NN rest))
          (PP (IN of)
            (NP (NNP SOCIETY))))))
    (. .)))

nsubj(shown-4, History-1)
aux(shown-4, has-2)
advmod(shown-4, also-3)
dep(reek-36, shown-4)
dobj(shown-4, us-5)
complm(ones-24, that-6)
nsubj(control-9, those-7)
nsubj(ones-24, those-7)
rcmod(those-7, control-9)
det(markets-13, those-10)
amod(markets-13, supposed-11)
dobj(control-9, markets-13)
nsubj(need-20, what-16)
cop(need-20, is-17)
advmod(need-20, strictly-18)
det(need-20, a-19)
prepc_of(markets-13, need-20)
cop(ones-24, are-21)
advmod(ones-24, also-22)
det(ones-24, the-23)
ccomp(shown-4, ones-24)
nsubj(afford-27, ones-24)
aux(afford-27, can-26)
rcmod(ones-24, afford-27)
aux(exert-29, to-28)
xcomp(afford-27, exert-29)
amod(power-31, such-30)
dobj(exert-29, power-31)
det(abuse-34, the-33)
dobj(exert-29, abuse-34)
conj_and(power-31, abuse-34)
nsubj(reek-36, they-35)
root(ROOT-0, reek-36)
det(rest-39, the-38)
prep_upon(reek-36, rest-39)
prep_of(rest-39, SOCIETY-41)

(ROOT
  (S
    (VP (VB En)
      (NP (NN mass)))
    (. .)))

root(ROOT-0, En-1)
dobj(En-1, mass-2)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (CD one) (JJ small) (NN group))
          (VP (VBZ holds)
            (NP (NN power))
            (PP (IN over)
              (NP
                (NP (DT the) (NNS needs))
                (PP (IN of)
                  (NP (DT the) (NNS masses))))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT the) (NNS masses))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (VP (VBG enslaving)
                  (S
                    (NP (PRP themselves))
                    (VP (TO to)
                      (VP (VB make)
                        (NP
                          (NP (DT the) (`` ``) (NN need) ('' ''))
                          (ADJP (JJ available)
                            (PP (TO to)
                              (NP (DT all)))))))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ small) (NN group))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ holds)
                (NP
                  (NP (DT the) (NN power))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBZ holds)
                        (NP
                          (NP (DT the) (NNS masses))
                          (VP (VBN enslaved)
                            (PP (TO to)
                              (NP (PRP$ their) (JJ own) (NNS desires)))))))))))))))
    (. .)))

advmod(holds-5, When-1)
num(group-4, one-2)
amod(group-4, small-3)
nsubj(holds-5, group-4)
advcl(masses-18, holds-5)
dobj(holds-5, power-6)
det(needs-9, the-8)
prep_over(holds-5, needs-9)
det(masses-12, the-11)
prep_of(needs-9, masses-12)
nsubj(masses-18, it-14)
cop(masses-18, is-15)
neg(masses-18, not-16)
det(masses-18, the-17)
root(ROOT-0, masses-18)
nsubj(enslaving-21, masses-18)
aux(enslaving-21, are-20)
rcmod(masses-18, enslaving-21)
nsubj(make-24, themselves-22)
aux(make-24, to-23)
xcomp(enslaving-21, make-24)
det(need-27, the-25)
dobj(make-24, need-27)
amod(need-27, available-29)
prep_to(available-29, all-31)
nsubj(group-37, it-33)
cop(group-37, is-34)
det(group-37, the-35)
amod(group-37, small-36)
parataxis(masses-18, group-37)
nsubj(holds-39, group-37)
rcmod(group-37, holds-39)
det(power-41, the-40)
dobj(holds-39, power-41)
nsubj(holds-43, power-41)
rcmod(power-41, holds-43)
det(masses-45, the-44)
dobj(holds-43, masses-45)
partmod(masses-45, enslaved-46)
poss(desires-50, their-48)
amod(desires-50, own-49)
prep_to(enslaved-46, desires-50)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (NN slavery))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ small) (, ,) (JJ controlling) (NN power))
            (PP (IN over)
              (NP (DT the) (JJ general) (NN public)))))))
    (. .)))

nsubj(slavery-3, It-1)
cop(slavery-3, is-2)
root(ROOT-0, slavery-3)
det(power-9, the-5)
amod(power-9, small-6)
amod(power-9, controlling-8)
prep_of(slavery-3, power-9)
det(public-13, the-11)
amod(public-13, general-12)
prep_over(power-9, public-13)

(ROOT
  (FRAG (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (DT those) (NNS powers))
        (VP (VBP exist)
          (PP (IN in)
            (NP
              (NP (DT a) (JJ capitalist) (NN society))
              (, ,)
              (NP (DT the) (NN desire)
                (S
                  (VP (TO to)
                    (VP (VB obtain)
                      (NP (JJR more)))))))))))
    (. .)))

dep(exist-5, And-1)
advmod(exist-5, when-2)
det(powers-4, those-3)
nsubj(exist-5, powers-4)
root(ROOT-0, exist-5)
det(society-9, a-7)
amod(society-9, capitalist-8)
prep_in(exist-5, society-9)
det(desire-12, the-11)
appos(society-9, desire-12)
aux(obtain-14, to-13)
infmod(desire-12, obtain-14)
dobj(obtain-14, more-15)

(ROOT
  (S
    (NP (NN Capitalism))
    (VP (VBZ breeds)
      (NP (NN excess)))
    (. .)))

nsubj(breeds-2, Capitalism-1)
root(ROOT-0, breeds-2)
dobj(breeds-2, excess-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP love)
      (NP (NN capitalism)))
    (. .)))

nsubj(love-2, I-1)
root(ROOT-0, love-2)
dobj(love-2, capitalism-3)

(ROOT
  (S (RB So)
    (VP (VB let)
      (S
        (NP (POS 's))
        (VP (VB use)
          (NP (PRP them)))))
    (. .)))

advmod(let-2, So-1)
root(ROOT-0, let-2)
nsubj(use-4, 's-3)
ccomp(let-2, use-4)
dobj(use-4, them-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (VP (VBN given)
        (NP (JJR more) (NN opportunity))
        (PP (TO to)
          (NP (JJR more) (NNS people)))
        (PP (IN than)
          (PP (IN in)
            (NP (DT any) (JJ other) (NN system))))))
    (. .)))

nsubj(given-3, It-1)
aux(given-3, has-2)
root(ROOT-0, given-3)
amod(opportunity-5, more-4)
dobj(given-3, opportunity-5)
amod(people-8, more-7)
prep_to(given-3, people-8)
prep(given-3, than-9)
pcomp(than-9, in-10)
det(system-13, any-11)
amod(system-13, other-12)
prep_in(than-9, system-13)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (ADJP (JJ perfect)))
    (. .)))

cc(perfect-5, But-1)
nsubj(perfect-5, it-2)
cop(perfect-5, is-3)
neg(perfect-5, not-4)
root(ROOT-0, perfect-5)

(ROOT
  (S
    (NP (EX There))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN balances)
          (PP (TO to)
            (NP (DT this))))))
    (. .)))

expl(balances-4, There-1)
aux(balances-4, must-2)
auxpass(balances-4, be-3)
root(ROOT-0, balances-4)
prep_to(balances-4, this-6)

(ROOT
  (S
    (NP (DT These) (NNS balances))
    (VP (MD must)
      (VP (VB occur)
        (PP (IN in)
          (NP
            (NP (DT the) (NNS needs))
            (PP (IN of)
              (NP (NNS men)))))))
    (. .)))

det(balances-2, These-1)
nsubj(occur-4, balances-2)
aux(occur-4, must-3)
root(ROOT-0, occur-4)
det(needs-7, the-6)
prep_in(occur-4, needs-7)
prep_of(needs-7, men-9)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (VP (VB balance)
        (PRT (RP out))
        (NP
          (NP (NN capitalism))
          (PP (IN with)
            (NP (DT the) (NN knowledge))))
        (SBAR (IN that)
          (S
            (NP (NN history))
            (VP (VBZ has)
              (VP (VBN given)
                (NP (PRP us))
                (NP
                  (NP (DT the) (NNS needs))
                  (PP (IN of)
                    (NP
                      (NP (NNS men))
                      (SBAR
                        (S
                          (VP (VBP are) (RB not)
                            (PP (IN for)
                              (NP (NN sale)))))))))))))))
    (. .)))

nsubj(balance-3, We-1)
aux(balance-3, must-2)
root(ROOT-0, balance-3)
prt(balance-3, out-4)
dobj(balance-3, capitalism-5)
det(knowledge-8, the-7)
prep_with(capitalism-5, knowledge-8)
complm(given-12, that-9)
nsubj(given-12, history-10)
aux(given-12, has-11)
ccomp(balance-3, given-12)
iobj(given-12, us-13)
det(needs-15, the-14)
dobj(given-12, needs-15)
prep_of(needs-15, men-17)
rcmod(men-17, are-18)
neg(are-18, not-19)
prep_for(are-18, sale-21)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ available)
          (PP (TO to)
            (NP (DT all) (NNS people))))))
    (. .)))

nsubj(available-4, They-1)
aux(available-4, must-2)
cop(available-4, be-3)
root(ROOT-0, available-4)
det(people-7, all-6)
prep_to(available-4, people-7)

(ROOT
  (S
    (NP (NNP Food) (, ,) (NNP Water) (, ,)
      (CC and)
      (NNP yes))
    (, ,)
    (NP (NNP Health))
    (VP (VBP care))
    (. .)))

nsubj(care-9, Food-1)
conj_and(Food-1, Water-3)
nsubj(care-9, Water-3)
conj_and(Food-1, yes-6)
nsubj(care-9, yes-6)
nsubj(care-9, Health-8)
root(ROOT-0, care-9)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are)
      (NP (JJ basic) (NNS rights)))
    (. .)))

nsubj(rights-4, These-1)
cop(rights-4, are-2)
amod(rights-4, basic-3)
root(ROOT-0, rights-4)

(ROOT
  (NP
    (NP
      (NP (DT The) (NN denial))
      (PP (IN of)
        (NP
          (NP (DT these) (NNS rights))
          (PP (IN by)
            (NP (DT the) (NNS people)))))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP control)
            (SBAR
              (S
                (NP (PRP them))
                (VP (VBP have)
                  (VP (VBN led)
                    (PP (TO to)
                      (NP (NN revolution)))
                    (PP (IN after)
                      (NP (NN revolution)))))))))))
    (: ...)
    (NP
      (NP (DT some) (JJ violent))
      (CC and)
      (NP
        (NP (DT some) (JJR more))
        (PP (IN of)
          (NP
            (NP (DT an) (NN evolution))
            (PP (IN than)
              (NP (DT a) (NN revolution)))))))
    (. .)))

det(denial-2, The-1)
root(ROOT-0, denial-2)
nsubj(control-10, denial-2)
det(rights-5, these-4)
prep_of(denial-2, rights-5)
det(people-8, the-7)
prep_by(rights-5, people-8)
rcmod(denial-2, control-10)
nsubj(led-13, them-11)
aux(led-13, have-12)
ccomp(control-10, led-13)
prep_to(led-13, revolution-15)
prep_after(led-13, revolution-17)
det(violent-20, some-19)
dep(denial-2, violent-20)
det(more-23, some-22)
dep(denial-2, more-23)
conj_and(violent-20, more-23)
det(evolution-26, an-25)
prep_of(more-23, evolution-26)
det(revolution-29, a-28)
prep_than(evolution-26, revolution-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ reasonable)
        (S
          (VP (TO to)
            (VP (VB assume)
              (SBAR (IN that)
                (S
                  (NP (NN health) (NN care))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (NN need))
                      (CC and)
                      (NP (DT a) (NN right)))))))))))
    (. .)))

nsubj(reasonable-3, It-1)
cop(reasonable-3, is-2)
root(ROOT-0, reasonable-3)
aux(assume-5, to-4)
xcomp(reasonable-3, assume-5)
complm(need-11, that-6)
nn(care-8, health-7)
nsubj(need-11, care-8)
cop(need-11, is-9)
det(need-11, a-10)
ccomp(assume-5, need-11)
det(right-14, a-13)
ccomp(assume-5, right-14)
conj_and(need-11, right-14)

(ROOT
  (S
    (VP (VB Look)
      (PP (IN at)
        (NP (NN history))))
    (. .)))

root(ROOT-0, Look-1)
prep_at(Look-1, history-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ reasonable)
        (S
          (VP (TO to)
            (VP (VB assume)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (UCP
                      (ADJP (JJ affordable))
                      (, ,)
                      (CC and)
                      (RB well)
                      (PP (IN within)
                        (NP (PRP$ our) (JJ collective) (NNS means))))))))))))
    (. .)))

nsubj(reasonable-3, It-1)
cop(reasonable-3, is-2)
root(ROOT-0, reasonable-3)
aux(assume-5, to-4)
xcomp(reasonable-3, assume-5)
complm(affordable-9, that-6)
nsubj(affordable-9, it-7)
cop(affordable-9, is-8)
ccomp(assume-5, affordable-9)
ccomp(assume-5, well-12)
advmod(affordable-9, well-12)
conj_and(affordable-9, well-12)
poss(means-16, our-14)
amod(means-16, collective-15)
prep_within(affordable-9, means-16)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (VP (VBN survived)
        (PP (IN as)
          (NP (DT a) (NN species)))
        (PP (IN by)
          (S
            (VP (VBG working)
              (ADVP (RB collectively)))))))
    (. .)))

nsubj(survived-3, We-1)
aux(survived-3, have-2)
root(ROOT-0, survived-3)
det(species-6, a-5)
prep_as(survived-3, species-6)
prepc_by(survived-3, working-8)
advmod(working-8, collectively-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB n't)
      (NP (NN altruism)))
    (. .) (. .)))

nsubj(altruism-4, It-1)
cop(altruism-4, is-2)
neg(altruism-4, n't-3)
root(ROOT-0, altruism-4)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBD was)
      (ADJP (JJ necessary)
        (PP (IN for)
          (NP (NN survival)))))
    (. .)))

nsubj(necessary-3, it-1)
cop(necessary-3, was-2)
root(ROOT-0, necessary-3)
prep_for(necessary-3, survival-5)

(ROOT
  (S
    (S
      (VP (VBG Looking)
        (PRT (RP out))
        (SBAR (IN for)
          (S
            (NP (PRP$ your) (NN neighbor))
            (VP (VBZ means)
              (SBAR
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (MD will)
                      (VP (VB look)
                        (PRT (RP out))
                        (PP (IN for)
                          (NP (PRP you)))))))
                (: ...)
                (CC and)
                (SBAR (IN if)
                  (S
                    (NP (PRP he))
                    (VP (VBZ does) (RB n't))))))))))
    (, ,)
    (NP
      (NP (DT the) (NN guy))
      (PP (IN on)
        (NP (DT the) (JJ other) (NN side))))
    (VP (MD will))
    (. .)))

partmod(will-27, Looking-1)
prt(Looking-1, out-2)
mark(means-6, for-3)
poss(neighbor-5, your-4)
nsubj(means-6, neighbor-5)
advcl(Looking-1, means-6)
complm(look-10, that-7)
nsubj(look-10, he-8)
aux(look-10, will-9)
ccomp(means-6, look-10)
prt(look-10, out-11)
prep_for(look-10, you-13)
mark(does-18, if-16)
nsubj(does-18, he-17)
ccomp(means-6, does-18)
conj_and(look-10, does-18)
neg(does-18, n't-19)
det(guy-22, the-21)
nsubj(will-27, guy-22)
det(side-26, the-24)
amod(side-26, other-25)
prep_on(guy-22, side-26)
root(ROOT-0, will-27)

(ROOT
  (S
    (ADVP (RB Provided))
    (NP (PRP you))
    (VP (VBP 're) (RB not)
      (NP
        (NP (DT a) (JJ complete) (NN douche))
        (PRN (-LRB- -LRB-)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is)
                (NP
                  (NP (DT the) (NN point))
                  (PP (IN of)
                    (SBAR
                      (WHADVP (WRB why))
                      (S
                        (NP (PRP it))
                        (VP
                          (VP (VBZ 's) (RB not)
                            (ADJP (JJ altruism)
                              (S
                                (VP (TO to)
                                  (VP (VB look)
                                    (PRT (RP out))
                                    (PP (IN for)
                                      (NP (PRP$ your) (NN neighbor))))))))
                          (, ,)
                          (CC but)
                          (VP (VBZ is)
                            (ADVP (RB actually))
                            (VP (VBN done)
                              (PP (IN in)
                                (NP (NN self-interest)))))))))))))
          (-RRB- -RRB-))))
    (. .)))

advmod(douche-7, Provided-1)
nsubj(douche-7, you-2)
cop(douche-7, 're-3)
neg(douche-7, not-4)
det(douche-7, a-5)
amod(douche-7, complete-6)
root(ROOT-0, douche-7)
nsubj(point-12, which-9)
cop(point-12, is-10)
det(point-12, the-11)
dep(douche-7, point-12)
advmod(altruism-18, why-14)
nsubj(altruism-18, it-15)
nsubjpass(done-29, it-15)
cop(altruism-18, 's-16)
neg(altruism-18, not-17)
prepc_of(point-12, altruism-18)
aux(look-20, to-19)
xcomp(altruism-18, look-20)
prt(look-20, out-21)
poss(neighbor-24, your-23)
prep_for(look-20, neighbor-24)
auxpass(done-29, is-27)
advmod(done-29, actually-28)
prepc_of(point-12, done-29)
conj_but(altruism-18, done-29)
prep_in(done-29, self-interest-31)

(ROOT
  (S
    (NP (NN Reason)
      (CC and)
      (NN observation))
    (VP (MD will)
      (ADVP (RB also))
      (VP (VB show)
        (NP (PRP you))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP (DT a) (JJ good) (NN idea)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP (DT a) (JJ healthy) (`` ``) (NN herd) ('' '')))))))))))
    (. .)))

nsubj(show-6, Reason-1)
conj_and(Reason-1, observation-3)
nsubj(show-6, observation-3)
aux(show-6, will-4)
advmod(show-6, also-5)
root(ROOT-0, show-6)
dobj(show-6, you-7)
advmod(idea-13, why-8)
nsubj(idea-13, it-9)
cop(idea-13, 's-10)
det(idea-13, a-11)
amod(idea-13, good-12)
advcl(show-6, idea-13)
aux(have-15, to-14)
infmod(idea-13, have-15)
det(herd-19, a-16)
amod(herd-19, healthy-17)
dobj(have-15, herd-19)

(ROOT
  (S
    (VP (VB Observe)
      (NP (DT the) (NN past)))
    (. .)))

root(ROOT-0, Observe-1)
det(past-3, the-2)
dobj(Observe-1, past-3)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBD did)
      (NP (PRP we))
      (ADVP (RB even))
      (VP (VB get)
        (S
          (VP (TO to)
            (VP (VB be)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP we))
                  (VP (VBP are)
                    (ADVP (NN today))
                    (PP (IN in)
                      (NP (DT this) (NN nation)))))))))))
    (. ?)))

advmod(get-5, How-1)
aux(get-5, did-2)
nsubj(get-5, we-3)
xsubj(be-7, we-3)
advmod(get-5, even-4)
root(ROOT-0, get-5)
aux(be-7, to-6)
xcomp(get-5, be-7)
advmod(are-10, where-8)
nsubj(are-10, we-9)
advcl(be-7, are-10)
advmod(are-10, today-11)
det(nation-14, this-13)
prep_in(are-10, nation-14)

(ROOT
  (SQ (VBZ Is) (RB not)
    (NP (DT the) (NN notion))
    (NP
      (NP (DT that))
      (SBAR
        (S
          (NP (DT all) (NNS men))
          (VP (VBP are)
            (VP (VBN created)
              (S
                (VP (JJ equal)
                  (NP
                    (NP (DT a) (JJ direct) (NN affront))
                    (PP (TO to)
                      (NP (JJ anti) (NNS socialists)))))))))))
    (. ?)))

cop(that-5, Is-1)
neg(that-5, not-2)
det(notion-4, the-3)
nsubj(that-5, notion-4)
root(ROOT-0, that-5)
det(men-7, all-6)
nsubjpass(created-9, men-7)
auxpass(created-9, are-8)
rcmod(that-5, created-9)
ccomp(created-9, equal-10)
det(affront-13, a-11)
amod(affront-13, direct-12)
dobj(equal-10, affront-13)
amod(socialists-16, anti-15)
prep_to(affront-13, socialists-16)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ does)
      (NP (DT any) (NN nation))
      (VP (VB overcome)
        (NP
          (NP (DT the) (NN tyranny))
          (PP (IN of)
            (NP (DT the) (NN ruling) (NN class)))
          (SBAR
            (WHPP (IN under)
              (WHNP (WDT which)))
            (S
              (NP (DT the) (NNS masses))
              (VP (VBD suffered)))))))
    (. ?)))

advmod(overcome-5, How-1)
aux(overcome-5, does-2)
det(nation-4, any-3)
nsubj(overcome-5, nation-4)
root(ROOT-0, overcome-5)
det(tyranny-7, the-6)
dobj(overcome-5, tyranny-7)
det(class-11, the-9)
nn(class-11, ruling-10)
prep_of(tyranny-7, class-11)
rel(suffered-16, which-13)
det(masses-15, the-14)
nsubj(suffered-16, masses-15)
rcmod(tyranny-7, suffered-16)

(ROOT
  (S
    (VP (VB Look)
      (UCP
        (PP (IN at)
          (NP
            (NP (DT the) (NN history))
            (PP (IN of)
              (NP (NN man)))))
        (CC and)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP we))
            (VP (VBN gotten)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (PRP we))
                        (VP (VBP are)
                          (NP (NN today)))))))))))))
    (. .)))

root(ROOT-0, Look-1)
dep(Look-1, at-2)
det(history-4, the-3)
pobj(at-2, history-4)
prep_of(history-4, man-6)
advmod(gotten-10, how-8)
nsubj(gotten-10, we-9)
xsubj(be-12, we-9)
dep(Look-1, gotten-10)
conj_and(at-2, gotten-10)
aux(be-12, to-11)
xcomp(gotten-10, be-12)
advmod(today-16, where-13)
nsubj(today-16, we-14)
cop(today-16, are-15)
advcl(be-12, today-16)

(ROOT
  (S
    (NP (NN History))
    (VP (VBZ keeps)
      (S
        (VP (VBG repeating)
          (NP (PRP itself))
          (SBAR (IN because)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (DT this) (NN lie))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ has)
                        (VP (VBN been)
                          (VP (VBN believed)
                            (SBAR (IN that)
                              (S
                                (NP (PRP it))
                                (VP (VBZ is)
                                  (ADJP (JJ wrong)
                                    (S
                                      (VP (TO to)
                                        (VP (VB accept)
                                          (NP
                                            (NP (DT the) (NN enslavement))
                                            (PP (IN of)
                                              (NP
                                                (NP (DT a) (JJ small) (NN group))
                                                (SBAR
                                                  (WHNP (WP who))
                                                  (S
                                                    (VP
                                                      (VP (VBZ holds)
                                                        (NP (NN power))
                                                        (PP (IN over)
                                                          (NP (DT the) (NNS needs))))
                                                      (: ...) (RB not)
                                                      (VP (VBZ wants) (: ...)
                                                        (FRAG
                                                          (PP (IN of)
                                                            (NP (DT all) (NN society)))
                                                          (NP (DT all) (NNS men)))))))))))))))))))))))))))))
    (. .)))

nsubj(keeps-2, History-1)
root(ROOT-0, keeps-2)
xcomp(keeps-2, repeating-3)
dobj(repeating-3, itself-4)
mark(is-7, because-5)
expl(is-7, there-6)
advcl(repeating-3, is-7)
det(lie-9, this-8)
nsubj(is-7, lie-9)
nsubjpass(believed-13, lie-9)
aux(believed-13, has-11)
auxpass(believed-13, been-12)
rcmod(lie-9, believed-13)
complm(wrong-17, that-14)
nsubj(wrong-17, it-15)
cop(wrong-17, is-16)
ccomp(believed-13, wrong-17)
aux(accept-19, to-18)
xcomp(wrong-17, accept-19)
det(enslavement-21, the-20)
dobj(accept-19, enslavement-21)
det(group-25, a-23)
amod(group-25, small-24)
prep_of(enslavement-21, group-25)
nsubj(holds-27, group-25)
rcmod(group-25, holds-27)
dobj(holds-27, power-28)
det(needs-31, the-30)
prep_over(holds-27, needs-31)
neg(holds-27, not-33)
dep(holds-27, wants-34)
dep(men-40, of-36)
det(society-38, all-37)
pobj(of-36, society-38)
det(men-40, all-39)
dep(wants-34, men-40)

