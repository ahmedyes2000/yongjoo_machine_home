(ROOT
  (NP (NNP #originalTopic) (NNP =) (NNP So_you_still_want_Nationalized_Health_Care)))

nn(So_you_still_want_Nationalized_Health_Care-3, #originalTopic-1)
nn(So_you_still_want_Nationalized_Health_Care-3, =-2)
root(ROOT-0, So_you_still_want_Nationalized_Health_Care-3)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Well))
      (ADVP (RB actually))
      (NP (PRP I))
      (VP (MD can)
        (SBAR (IN because)
          (S
            (NP (PRP$ my) (NN tax) (NNS dollars))
            (VP (VBD went)
              (PP (IN towards)
                (NP (PRP it))))))))
    (, ,)
    (VP (VBZ whoops))
    (. .)))

advmod(can-5, Well-2)
advmod(can-5, actually-3)
nsubj(can-5, I-4)
ccomp(whoops-14, can-5)
mark(went-10, because-6)
poss(dollars-9, my-7)
nn(dollars-9, tax-8)
nsubj(went-10, dollars-9)
advcl(can-5, went-10)
prep_towards(went-10, it-12)
root(ROOT-0, whoops-14)

(ROOT
  (S (: ;)
    (S
      (VP (VBG -RRB-)
        (SBAR
          (SINV (VBD Had)
            (NP (JJ my) (NN tax) (NNS dollars))
            (RB not)
            (VP (VBN gone)
              (PP (IN towards)
                (NP
                  (NP (PRP it))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (MD would)
                        (VP (VB have)
                          (VP (VBN paid)
                            (PP (IN for)
                              (NP (DT the) (NN service)))
                            (, ,)
                            (SBAR (RB just) (IN like)
                              (S
                                (NP (PRP I))
                                (VP (VBP 'm)
                                  (VP (VBG doing)
                                    (ADVP (RB now))))))))))))))))))
    (, ,)
    (VP (VBZ whoops))
    (. .)))

aux(gone-8, Had-3)
amod(dollars-6, my-4)
nn(dollars-6, tax-5)
nsubj(gone-8, dollars-6)
dep(gone-8, not-7)
parataxis(whoops-26, gone-8)
prep_towards(gone-8, it-10)
dobj(paid-14, it-10)
nsubj(paid-14, I-11)
aux(paid-14, would-12)
aux(paid-14, have-13)
rcmod(it-10, paid-14)
det(service-17, the-16)
prep_for(paid-14, service-17)
advmod(doing-23, just-19)
dep(doing-23, like-20)
nsubj(doing-23, I-21)
aux(doing-23, 'm-22)
ccomp(paid-14, doing-23)
advmod(doing-23, now-24)
root(ROOT-0, whoops-26)

(ROOT
  (S (CC ;)
    (S
      (VP (VBG -RRB-) ('' '')
        (NP (PRP I))))
    (VP (VBD was)
      (ADVP (RB clearly))
      (VP (VBG referencing)
        (NP (PRP$ my) (NN challenge)
          (S
            (VP (TO to)
              (VP (VB spend)))))
        (NP (DT a) (NN week))
        (S (RB not)
          (VP (VBG using)
            (NP
              (NP (DT any) (NNS services))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD were)
                    (VP (VBN provided)
                      (PP (IN for)
                        (CC or)
                        (IN by)
                        (PP (IN through)
                          (NP (NN taxation)))))))))))))
    (. .)))

csubj(referencing-7, I-4)
aux(referencing-7, was-5)
advmod(referencing-7, clearly-6)
root(ROOT-0, referencing-7)
poss(challenge-9, my-8)
dobj(referencing-7, challenge-9)
aux(spend-11, to-10)
infmod(challenge-9, spend-11)
det(week-13, a-12)
tmod(referencing-7, week-13)
neg(using-15, not-14)
xcomp(referencing-7, using-15)
det(services-17, any-16)
dobj(using-15, services-17)
nsubjpass(provided-20, services-17)
auxpass(provided-20, were-19)
rcmod(services-17, provided-20)
prep(provided-20, for-21)
prep(provided-20, by-23)
conj_or(for-21, by-23)
pcomp(for-21, through-24)
pobj(through-24, taxation-25)

(ROOT
  (S
    (PP (IN Without)
      (NP (NN taxation)))
    (PRN (, ,)
      (S
        (NP (EX there))
        (VP (MD would)
          (VP (VB be)
            (NP (DT no) (NNS roads)
              (S
                (VP (TO to)
                  (VP (VB drive)
                    (PRT (RP on))
                    (S
                      (VP (TO to)
                        (VP (VB get)
                          (S
                            (VP (TO to)
                              (VP (VB work))))))))))))))
      (, ,))
    (NP (EX there))
    (VP (MD would)
      (VP (VB be)
        (NP (DT no) (NN internet)
          (S
            (VP (TO to)
              (VP (VB work)
                (PP (IN from)
                  (NP (NN home)))))))))
    (. .)))

prep_without(internet-21, taxation-2)
expl(roads-8, there-4)
aux(roads-8, would-5)
cop(roads-8, be-6)
det(roads-8, no-7)
parataxis(internet-21, roads-8)
aux(drive-10, to-9)
infmod(roads-8, drive-10)
prt(drive-10, on-11)
aux(get-13, to-12)
xcomp(drive-10, get-13)
aux(work-15, to-14)
xcomp(get-13, work-15)
expl(internet-21, there-17)
aux(internet-21, would-18)
cop(internet-21, be-19)
det(internet-21, no-20)
root(ROOT-0, internet-21)
aux(work-23, to-22)
infmod(internet-21, work-23)
prep_from(work-23, home-25)

(ROOT
  (S (CC And)
    (NP (PRP you))
    (VP (MD would) (RB n't)
      (VP (VB be)
        (VP (VBG paying)
          (PP (IN for)
            (NP (DT the) (NN service)))
          (SBAR (IN because)
            (S
              (NP (DT the) (NN service))
              (ADVP (RB only))
              (VP (VBD existed)
                (PP (RB because) (IN of)
                  (NP
                    (NP (DT the) (VBG pulling))
                    (PP
                      (ADVP (RB together))
                      (IN of)
                      (NP (NNS funds)))))))))))
    (. .)))

cc(paying-6, And-1)
nsubj(paying-6, you-2)
aux(paying-6, would-3)
neg(paying-6, n't-4)
aux(paying-6, be-5)
root(ROOT-0, paying-6)
det(service-9, the-8)
prep_for(paying-6, service-9)
mark(existed-14, because-10)
det(service-12, the-11)
nsubj(existed-14, service-12)
advmod(existed-14, only-13)
advcl(paying-6, existed-14)
prep_because_of(existed-14, the-17)
amod(the-17, pulling-18)
advmod(the-17, together-19)
prep_of(the-17, funds-21)

(ROOT
  (S
    (ADVP (DT No) (NN matter)
      (SBAR
        (WHADJP (WRB how) (JJ much))
        (S
          (NP (PRP you))
          (VP (MD may)
            (VP (VB like)
              (S
                (VP (TO to)
                  (VP (VB think)
                    (ADVP (RB otherwise))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD could) (RB not)
      (ADVP (RB individually))
      (VP (VB pay)
        (PP (IN for)
          (NP
            (NP (DT the)
              (ADJP (RB all) (DT the))
              (NNS things))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP make)
                  (NP
                    (NP
                      (NP (PRP$ your) (NN life))
                      (NP (DT the) (NN way)))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ is))))))))))))
    (. .)))

dep(matter-2, No-1)
advmod(pay-16, matter-2)
advmod(much-4, how-3)
dep(like-7, much-4)
nsubj(like-7, you-5)
xsubj(think-9, you-5)
aux(like-7, may-6)
dep(matter-2, like-7)
aux(think-9, to-8)
xcomp(like-7, think-9)
advmod(think-9, otherwise-10)
nsubj(pay-16, you-12)
aux(pay-16, could-13)
neg(pay-16, not-14)
advmod(pay-16, individually-15)
root(ROOT-0, pay-16)
det(things-21, the-18)
advmod(the-20, all-19)
amod(things-21, the-20)
prep_for(pay-16, things-21)
nsubj(make-23, things-21)
rcmod(things-21, make-23)
poss(life-25, your-24)
dobj(make-23, life-25)
det(way-27, the-26)
dep(life-25, way-27)
nsubj(is-29, it-28)
rcmod(life-25, is-29)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (JJ continued) (NN insistence))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD could)
            (VP (VB survive)
              (CC and)
              (VB build)
              (NP
                (NP (DT a) (NN society))
                (ADJP (JJ similar)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN one))
                      (SBAR
                        (S
                          (NP (PRP we))
                          (VP (VBP have)
                            (VP
                              (PP (IN without)
                                (NP (NN taxation))))))))))))))))
    (VP (VBZ is)
      (ADJP (RB incredibly) (JJ naive)))
    (. .)))

poss(insistence-3, Your-1)
amod(insistence-3, continued-2)
nsubj(naive-22, insistence-3)
complm(survive-7, that-4)
nsubj(survive-7, you-5)
nsubj(build-9, you-5)
aux(survive-7, could-6)
dep(insistence-3, survive-7)
dep(insistence-3, build-9)
conj_and(survive-7, build-9)
det(society-11, a-10)
dobj(survive-7, society-11)
amod(society-11, similar-12)
det(one-15, the-14)
prep_to(similar-12, one-15)
dobj(without-18, one-15)
nsubj(without-18, we-16)
aux(without-18, have-17)
rcmod(one-15, without-18)
pobj(without-18, taxation-19)
cop(naive-22, is-20)
advmod(naive-22, incredibly-21)
root(ROOT-0, naive-22)

