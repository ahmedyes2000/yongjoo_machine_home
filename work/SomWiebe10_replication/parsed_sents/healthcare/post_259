(ROOT
  (S
    (NP (NNP JohnInOhio))
    (VP (VBD wrote) (: :) (`` ``)
      (S
        (NP (PRP It))
        (VP (VBZ is)
          (ADJP (JJ foolish)
            (S
              (VP (TO to)
                (VP (VB think)
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT all) (NNS aspects))
                        (PP (IN of)
                          (NP (NN society))))
                      (VP (VBP are)
                        (VP (RBS best) (VBN served)
                          (PP (IN by)
                            (NP (DT the) (JJ open) (NN market))))))))))))))
    (. .)))

nsubj(wrote-2, JohnInOhio-1)
root(ROOT-0, wrote-2)
nsubj(foolish-7, It-5)
cop(foolish-7, is-6)
ccomp(wrote-2, foolish-7)
aux(think-9, to-8)
xcomp(foolish-7, think-9)
complm(served-17, that-10)
det(aspects-12, all-11)
nsubjpass(served-17, aspects-12)
prep_of(aspects-12, society-14)
auxpass(served-17, are-15)
advmod(served-17, best-16)
ccomp(think-9, served-17)
det(market-21, the-19)
amod(market-21, open-20)
agent(served-17, market-21)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (VP (VBN surrendered)
        (NP
          (NP (PRP$ our) (NNS prisons))
          (CC and)
          (NP (NN health) (NN care) (NNS systems)))
        (PP (TO to))
        (PP (IN for)
          (NP (NN profit) (NNS organizations)))))
    (. .)))

nsubj(surrendered-3, We-1)
aux(surrendered-3, have-2)
root(ROOT-0, surrendered-3)
poss(prisons-5, our-4)
dobj(surrendered-3, prisons-5)
nn(systems-9, health-7)
nn(systems-9, care-8)
dobj(surrendered-3, systems-9)
conj_and(prisons-5, systems-9)
prep(surrendered-3, to-10)
nn(organizations-13, profit-12)
prep_for(surrendered-3, organizations-13)

(ROOT
  (S
    (ADVP
      (NP (CD 42) (NNS years))
      (RB ago))
    (PRN (, ,)
      (NP ($ $) (CD 5))
      (VP (VBZ equates)
        (PP (TO to)
          (NP
            (QP (RB about) ($ $) (CD 20-30)))))
      (, ,))
    (NP (WDT which))
    (VP (VBZ is)
      (PP (IN about)
        (NP
          (NP (DT the) (NN cost))
          (PP (IN of)
            (NP (NN co-pay))))))
    (. .)))

num(years-2, 42-1)
npadvmod(ago-3, years-2)
advmod(is-14, ago-3)
nsubj(equates-7, $-5)
num($-5, 5-6)
parataxis(is-14, equates-7)
quantmod($-10, about-9)
prep_to(equates-7, $-10)
number($-10, 20-30-11)
nsubj(is-14, which-13)
root(ROOT-0, is-14)
det(cost-17, the-16)
prep_about(is-14, cost-17)
prep_of(cost-17, co-pay-19)

(ROOT
  (S
    (ADVP (RB Yet))
    (, ,)
    (NP (NN insurance) (NNS companies))
    (VP (VBP pay)
      (NP (NNS hundreds) (RBR more))
      (PP (IN for)
        (NP (DT that) (NN office) (NN visit))))
    (. .)))

advmod(pay-5, Yet-1)
nn(companies-4, insurance-3)
nsubj(pay-5, companies-4)
root(ROOT-0, pay-5)
dobj(pay-5, hundreds-6)
advmod(hundreds-6, more-7)
det(visit-11, that-9)
nn(visit-11, office-10)
prep_for(pay-5, visit-11)

(ROOT
  (S
    (NP (NNP Therein))
    (VP (VBZ lies)
      (NP (DT the) (NN problem)))
    (. .)))

nsubj(lies-2, Therein-1)
root(ROOT-0, lies-2)
det(problem-4, the-3)
dobj(lies-2, problem-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (RB quite) (JJ simple))
      (, ,)
      (ADVP (RB really)))
    (. .)))

nsubj(simple-4, It-1)
cop(simple-4, 's-2)
advmod(simple-4, quite-3)
root(ROOT-0, simple-4)
advmod(simple-4, really-6)

(ROOT
  (S
    (NP (NNP Government))
    (VP (VBZ has)
      (VP (VBN mandated)
        (ADVP (RB too) (RB damn) (RB much))))
    (. .)))

nsubj(mandated-3, Government-1)
aux(mandated-3, has-2)
root(ROOT-0, mandated-3)
advmod(much-6, too-4)
advmod(much-6, damn-5)
advmod(mandated-3, much-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (VP (VBN run)
        (PRT (RP up))
        (NP
          (NP (DT the) (NN cost))
          (PP (IN of)
            (NP (DT the) (NN health) (NN insurance))))))
    (. .)))

nsubj(run-3, It-1)
aux(run-3, has-2)
root(ROOT-0, run-3)
prt(run-3, up-4)
det(cost-6, the-5)
dobj(run-3, cost-6)
det(insurance-10, the-8)
nn(insurance-10, health-9)
prep_of(cost-6, insurance-10)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP I))
      (VP (VB need)
        (NP (JJ maternity) (NN coverage))
        (PP (IN for))))
    (. ?)))

prep_for(need-4, What-1)
aux(need-4, do-2)
nsubj(need-4, I-3)
root(ROOT-0, need-4)
amod(coverage-6, maternity-5)
dobj(need-4, coverage-6)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NN wife))
      (VP (VBZ is)
        (ADJP
          (NP (CD 50) (NNS years))
          (JJ old))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (NP (CD 49))))
    (. .)))

poss(wife-2, My-1)
nsubj(old-6, wife-2)
cop(old-6, is-3)
num(years-5, 50-4)
npadvmod(old-6, years-5)
root(ROOT-0, old-6)
nsubj(49-11, I-9)
cop(49-11, am-10)
conj_and(old-6, 49-11)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are) (RB n't)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (DT a) (NN baby))
              (ADVP
                (NP (DT any) (NN time))
                (RB soon)))))))
    (. .)))

nsubj(going-4, We-1)
xsubj(have-6, We-1)
aux(going-4, are-2)
neg(going-4, n't-3)
root(ROOT-0, going-4)
aux(have-6, to-5)
xcomp(going-4, have-6)
det(baby-8, a-7)
dobj(have-6, baby-8)
det(time-10, any-9)
npadvmod(soon-11, time-10)
advmod(have-6, soon-11)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB also))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP
          (NP (DT any) (JJ mental) (NN health) (NNS issues))
          (, ,)
          (CC or)
          (NP (NN substance) (NN abuse) (NNS issues)))))
    (. .)))

nsubj(have-5, I-1)
advmod(have-5, also-2)
aux(have-5, do-3)
neg(have-5, n't-4)
root(ROOT-0, have-5)
det(issues-9, any-6)
amod(issues-9, mental-7)
nn(issues-9, health-8)
dobj(have-5, issues-9)
nn(issues-14, substance-12)
nn(issues-14, abuse-13)
dobj(have-5, issues-14)
conj_or(issues-9, issues-14)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (ADVP (RB currently))
      (VP (VBG working)
        (ADVP
          (ADVP (RBR harder))
          (SBAR (IN than)
            (S
              (NP (JJS most) (NNS people))
              (VP (VBP realize)
                (S
                  (VP (TO to)
                    (VP (VB privatize)
                      (NP (PRP$ our) (NN law) (NN enforcement)
                        (CC and)
                        (NN military)))))))))))
    (. .)))

nsubj(working-4, We-1)
aux(working-4, are-2)
advmod(working-4, currently-3)
root(ROOT-0, working-4)
advmod(working-4, harder-5)
mark(realize-9, than-6)
amod(people-8, most-7)
nsubj(realize-9, people-8)
xsubj(privatize-11, people-8)
dep(harder-5, realize-9)
aux(privatize-11, to-10)
xcomp(realize-9, privatize-11)
poss(enforcement-14, our-12)
nn(enforcement-14, law-13)
dobj(privatize-11, enforcement-14)
dobj(privatize-11, military-16)
conj_and(enforcement-14, military-16)

(ROOT
  (S
    (NP (DT Neither))
    (VP (VBZ does)
      (NP (PRP$ my) (NN wife)))
    (. .)))

nsubj(does-2, Neither-1)
root(ROOT-0, does-2)
poss(wife-4, my-3)
dobj(does-2, wife-4)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB need)
        (NP (NNP Mental) (NNP Health) (NN parity))))
    (. ?)))

advmod(need-4, Why-1)
aux(need-4, do-2)
nsubj(need-4, we-3)
root(ROOT-0, need-4)
nn(parity-7, Mental-5)
nn(parity-7, Health-6)
dobj(need-4, parity-7)

(ROOT
  (S
    (NP (DT The) (JJ free) (NN market))
    (VP (MD would)
      (VP (VB allow)
        (S
          (NP
            (NP (NNS consumers))
            (PRN (-LRB- -LRB-)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (NP
                      (NP (PRP us))
                      (, ,)
                      (NP (NNP John))))))
              (-RRB- -RRB-)))
          (VP (TO to)
            (VP (VB select)
              (NP
                (NP (DT the) (NN coverage))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBP desire)
                      (CC or)
                      (VBP need)))))
              (, ,)
              (ADVP (IN if) (DT any)))))))
    (. .)))

det(market-3, The-1)
amod(market-3, free-2)
nsubj(allow-5, market-3)
aux(allow-5, would-4)
root(ROOT-0, allow-5)
nsubj(select-15, consumers-6)
nsubj(us-10, that-8)
cop(us-10, 's-9)
dep(consumers-6, us-10)
appos(us-10, John-12)
aux(select-15, to-14)
xcomp(allow-5, select-15)
det(coverage-17, the-16)
dobj(select-15, coverage-17)
dobj(desire-19, coverage-17)
nsubj(desire-19, they-18)
nsubj(need-21, they-18)
rcmod(coverage-17, desire-19)
rcmod(coverage-17, need-21)
conj_or(desire-19, need-21)
advmod(select-15, if-23)
dep(if-23, any-24)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD could)
      (VP (VB bargain)
        (PP (IN with)
          (NP (NNS companies)))
        (S
          (VP (TO to)
            (VP (VB get)
              (NP
                (NP (DT the) (JJS best) (NN coverage))
                (PP (IN for)
                  (NP (DT the) (JJS best) (NN price)))))))))
    (. .)))

nsubj(bargain-3, We-1)
xsubj(get-7, We-1)
aux(bargain-3, could-2)
root(ROOT-0, bargain-3)
prep_with(bargain-3, companies-5)
aux(get-7, to-6)
xcomp(bargain-3, get-7)
det(coverage-10, the-8)
amod(coverage-10, best-9)
dobj(get-7, coverage-10)
det(price-14, the-12)
amod(price-14, best-13)
prep_for(coverage-10, price-14)

(ROOT
  (S
    (NP (NNP Consumer) (NNP Reports))
    (VP (MD could)
      (VP (VB tell)
        (NP (PRP us))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (NN insurance) (NNS companies))
            (VP (MD would)
              (VP (VB do)
                (NP (DT that))))))))
    (. .)))

nn(Reports-2, Consumer-1)
nsubj(tell-4, Reports-2)
aux(tell-4, could-3)
root(ROOT-0, tell-4)
dobj(tell-4, us-5)
dobj(do-10, which-6)
nn(companies-8, insurance-7)
nsubj(do-10, companies-8)
aux(do-10, would-9)
dep(tell-4, do-10)
dobj(do-10, that-11)

(ROOT
  (S
    (ADVP (RB Then))
    (NP
      (NP (PRP we))
      (, ,)
      (NP (DT the) (NN consumer))
      (, ,))
    (VP (MD could)
      (VP (VB decide)
        (NP
          (NP
            (WHNP (WDT which) (NN company))
            (S
              (VP (TO to)
                (VP (VB buy)
                  (PP (IN from))))))
          (, ,)
          (CC and)
          (NP
            (NP (WP what) (NN coverage))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP need)
                  (SBAR
                    (S (-LRB- -LRB-)
                      (NP (NN cafeteria) (NN style))
                      (VP (VBP ring)
                        (NP (DT a) (NN bell))))))))))))
    (. ?) (-RRB- -RRB-)))

advmod(decide-8, Then-1)
nsubj(decide-8, we-2)
det(consumer-5, the-4)
appos(we-2, consumer-5)
aux(decide-8, could-7)
root(ROOT-0, decide-8)
det(company-10, which-9)
dep(buy-12, company-10)
aux(buy-12, to-11)
dobj(decide-8, buy-12)
prep(buy-12, from-13)
dep(coverage-17, what-16)
dobj(decide-8, coverage-17)
conj_and(buy-12, coverage-17)
nsubj(need-19, we-18)
rcmod(coverage-17, need-19)
nn(style-22, cafeteria-21)
nsubj(ring-23, style-22)
ccomp(need-19, ring-23)
det(bell-25, a-24)
dobj(ring-23, bell-25)

(ROOT
  (S
    (VP (VB ,)
      (ADVP (IN if) (DT any)))
    (. .)))

root(ROOT-0, if-2)
dep(if-2, any-3)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN beauty))
          (PP (IN of)
            (NP (DT the) (JJ free) (NN market))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ gives)
      (NP (PRP us))
      (NP (NN freedom))
      (S
        (VP (TO to)
          (VP (VB choose)
            (NP
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ 's)
                    (NP
                      (NP (JJS best))
                      (PP (IN for)
                        (NP (PRP ourselves)))))))
              (CC and)
              (NP (PRP$ our) (NN family)))))))
    (. .)))

nsubj(beauty-4, That-1)
cop(beauty-4, 's-2)
det(beauty-4, the-3)
ccomp(gives-11, beauty-4)
det(market-8, the-6)
amod(market-8, free-7)
prep_of(beauty-4, market-8)
nsubj(gives-11, it-10)
root(ROOT-0, gives-11)
iobj(gives-11, us-12)
dobj(gives-11, freedom-13)
aux(choose-15, to-14)
xcomp(gives-11, choose-15)
nsubj(best-18, what-16)
cop(best-18, 's-17)
dobj(choose-15, best-18)
prep_for(best-18, ourselves-20)
poss(family-23, our-22)
dobj(choose-15, family-23)
conj_and(best-18, family-23)

(ROOT
  (S
    (NP (NNP Government))
    (VP (MD can) (RB not)
      (VP (VB do)
        (NP (DT that))))
    (. .)))

nsubj(do-4, Government-1)
aux(do-4, can-2)
neg(do-4, not-3)
root(ROOT-0, do-4)
dobj(do-4, that-5)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP do) (RB not)
      (VP
        (VP (VB have)
          (NP (DT the) (NN omnipresence)))
        (, ,)
        (CC or)
        (VP (VB omniscience)
          (S
            (VP (TO to)
              (VP (VB do)
                (ADVP (RB so))))))))
    (. .)))

nsubj(have-4, They-1)
nsubj(omniscience-9, They-1)
xsubj(do-11, They-1)
aux(have-4, do-2)
neg(have-4, not-3)
root(ROOT-0, have-4)
det(omnipresence-6, the-5)
dobj(have-4, omnipresence-6)
conj_or(have-4, omniscience-9)
aux(do-11, to-10)
xcomp(omniscience-9, do-11)
advmod(do-11, so-12)

(ROOT
  (S
    (NP (NNP Mr.) (NNP Obama))
    (VP
      (VP (VBZ has)
        (ADVP (RB never))
        (VP (VBN met)
          (NP (PRP me))))
      (, ,)
      (CC and)
      (VP (VBZ has)
        (NP
          (NP (DT no) (NN idea))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP$ my) (NN family))
              (VP (VBZ needs)))))))
    (. .)))

nn(Obama-2, Mr.-1)
nsubj(met-5, Obama-2)
nsubj(has-9, Obama-2)
aux(met-5, has-3)
neg(met-5, never-4)
root(ROOT-0, met-5)
dobj(met-5, me-6)
conj_and(met-5, has-9)
det(idea-11, no-10)
dobj(has-9, idea-11)
dobj(needs-15, idea-11)
rel(needs-15, what-12)
poss(family-14, my-13)
nsubj(needs-15, family-14)
rcmod(idea-11, needs-15)

(ROOT
  (FRAG ('' '')
    (NP (NNP Apples))
    (PP (CC and)
      (NP (NNS oranges)))
    (. .)))

root(ROOT-0, Apples-2)
dep(Apples-2, and-3)
dep(and-3, oranges-4)

(ROOT
  (S
    (NP (DT Neither))
    (VP (VBP do)
      (S
        (NP (PRP you))
        (NP (NNP John))))
    (. .)))

nsubj(do-2, Neither-1)
root(ROOT-0, do-2)
nsubj(John-4, you-3)
xcomp(do-2, John-4)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (NP (PRP I))
    (VP (VBP thank)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP
            (VP (VB mind)
              (NP (PRP$ your) (JJ own) (NN business)))
            (, ,)
            (VP (VB keep)
              (NP (PRP$ your) (NN hand))
              (PRT (RP out))
              (PP (IN of)
                (NP
                  (NP (PRP$ my) (NN loved) (NN one) (POS 's))
                  (NNS pockets))))
            (, ,)
            (CC and)
            (VP (VB pay)
              (PP (IN for)
                (NP (PRP$ your) (JJ own) (JJ damn) (NN insurance))))))))
    (. .)))

advmod(thank-4, So-1)
nsubj(thank-4, I-3)
root(ROOT-0, thank-4)
nsubj(mind-7, you-5)
nsubj(keep-12, you-5)
nsubj(pay-24, you-5)
aux(mind-7, to-6)
xcomp(thank-4, mind-7)
poss(business-10, your-8)
amod(business-10, own-9)
dobj(mind-7, business-10)
xcomp(thank-4, keep-12)
conj_and(mind-7, keep-12)
poss(hand-14, your-13)
dobj(keep-12, hand-14)
poss(one-19, my-17)
nn(one-19, loved-18)
poss(pockets-21, one-19)
prep_out_of(keep-12, pockets-21)
xcomp(thank-4, pay-24)
conj_and(mind-7, pay-24)
poss(insurance-29, your-26)
amod(insurance-29, own-27)
amod(insurance-29, damn-28)
prep_for(pay-24, insurance-29)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD continued) (: :) (`` ``)
      (S
        (ADVP (RB Just))
        (VP
          (VP (VB stop)
            (S
              (VP (VBG thinking)
                (PP (IN about)
                  (NP
                    (NP (NN money))
                    (PP (IN for)
                      (NP (DT a) (NN minute))))))))
          (CC and)
          (VP (VB think)
            (PP (IN about)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP we))
                  (VP (VBP are)
                    (VP (VBG doing))))))))))
    (. !)))

nsubj(continued-2, He-1)
root(ROOT-0, continued-2)
advmod(stop-6, Just-5)
ccomp(continued-2, stop-6)
xcomp(stop-6, thinking-7)
prep_about(thinking-7, money-9)
det(minute-12, a-11)
prep_for(money-9, minute-12)
ccomp(continued-2, think-14)
conj_and(stop-6, think-14)
dobj(doing-19, what-16)
nsubj(doing-19, we-17)
aux(doing-19, are-18)
prepc_about(think-14, doing-19)

(ROOT
  (S
    (S
      (VP
        (VP (VBN Deregulation))
        (CC and)
        (VP (VBG opening)
          (PRT (RP up))
          (NP (DT every) (NN problem)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN solved)
                    (PP (IN by)
                      (NP
                        (NP (NNS people))
                        (VP (VBG seeking)
                          (NP (NN profit)))))))))))))
    (VP (VBZ is) (RB not)
      (NP (DT the) (NN answer))
      (PP (TO to)
        (NP (PRP$ our)
          (ADJP (RBS most) (JJ important))
          (NNS problems))))
    (. .)))

csubj(answer-17, Deregulation-1)
conj_and(Deregulation-1, opening-3)
csubj(answer-17, opening-3)
prt(opening-3, up-4)
det(problem-6, every-5)
dobj(opening-3, problem-6)
aux(solved-9, to-7)
auxpass(solved-9, be-8)
infmod(problem-6, solved-9)
agent(solved-9, people-11)
partmod(people-11, seeking-12)
dobj(seeking-12, profit-13)
cop(answer-17, is-14)
neg(answer-17, not-15)
det(answer-17, the-16)
root(ROOT-0, answer-17)
poss(problems-22, our-19)
advmod(important-21, most-20)
amod(problems-22, important-21)
prep_to(answer-17, problems-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would) (RB rather)
      (VP (VB take)
        (NP (PRP$ my) (NN cancer)
          (CC or)
          (JJ other) (NN life))
        (S
          (VP (VBG threatening)
            (NP (NN health) (NN issue))
            (PP (TO to)
              (NP (DT a) (NNP SHAMAN)))
            (PP (IN than)
              (PP (TO to)
                (NP
                  (NP (NN someone))
                  (SBAR
                    (WHNP (WP$ whose) (JJ primary) (NN interest))
                    (S
                      (VP (VBZ is)
                        (NP
                          (NP (JJ personal) (NN profit))
                          (CC or)
                          (NP
                            (NP (DT the) (NN survival))
                            (PP (IN of)
                              (NP (DT a) (NN corporation)))))))))))))))
    (. .)))

nsubj(take-4, I-1)
aux(take-4, would-2)
advmod(take-4, rather-3)
root(ROOT-0, take-4)
poss(cancer-6, my-5)
dobj(take-4, cancer-6)
amod(life-9, other-8)
dobj(take-4, life-9)
conj_or(cancer-6, life-9)
xcomp(take-4, threatening-10)
nn(issue-12, health-11)
dobj(threatening-10, issue-12)
det(SHAMAN-15, a-14)
prep_to(threatening-10, SHAMAN-15)
prep(threatening-10, than-16)
pcomp(than-16, to-17)
prep_to(than-16, someone-18)
poss(interest-21, someone-18)
amod(interest-21, primary-20)
nsubj(profit-24, interest-21)
cop(profit-24, is-22)
amod(profit-24, personal-23)
rcmod(someone-18, profit-24)
det(survival-27, the-26)
rcmod(someone-18, survival-27)
conj_or(profit-24, survival-27)
det(corporation-30, a-29)
prep_of(survival-27, corporation-30)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP (VB control)
        (NP (DT a) (JJ Democratic) (NN Republic))
        (ADVP (RB somewhat))
        (PP (IN through)
          (NP (DT the) (JJ democratic) (NN process)))))
    (. .)))

nsubj(control-3, We-1)
aux(control-3, can-2)
root(ROOT-0, control-3)
det(Republic-6, a-4)
amod(Republic-6, Democratic-5)
dobj(control-3, Republic-6)
advmod(control-3, somewhat-7)
det(process-11, the-9)
amod(process-11, democratic-10)
prep_through(control-3, process-11)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD can) (RB not)
        (VP (VB control)
          (NP (DT a) (NN corporation))
          (PP (IN without)
            (NP (NN regulation))))))
    (CC and)
    (RB then)
    (S
      (NP (PRP we))
      (VP (MD can) (RB not)
        (VP (VB force)
          (S
            (NP (PRP it))
            (VP (TO to)
              (VP (VB provide)
                (PP (IN for)
                  (NP (PRP$ our) (NNS needs)))))))))
    (. .)))

nsubj(control-4, We-1)
aux(control-4, can-2)
neg(control-4, not-3)
root(ROOT-0, control-4)
det(corporation-6, a-5)
dobj(control-4, corporation-6)
prep_without(control-4, regulation-8)
advmod(control-4, then-10)
conj_and(control-4, then-10)
nsubj(force-14, we-11)
aux(force-14, can-12)
neg(force-14, not-13)
ccomp(control-4, force-14)
nsubj(provide-17, it-15)
aux(provide-17, to-16)
xcomp(force-14, provide-17)
poss(needs-20, our-19)
prep_for(provide-17, needs-20)

(ROOT
  (S (CC And)
    (NP (PRP we))
    (ADVP (RB once))
    (VP (VBD had)
      (S
        (NP
          (NP (DT a)
            (ADJP (JJ right)
              (PP (TO to)
                (NP (NN health))))
            (NN care))
          (PP (IN via)
            (NP (DT the) (NNP Public) (NNP Health) (NNP Service))))
        (ADJP (RB however) (JJ bad)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBD was)))))))
    (. .)))

cc(had-4, And-1)
nsubj(had-4, we-2)
advmod(had-4, once-3)
root(ROOT-0, had-4)
det(care-9, a-5)
amod(care-9, right-6)
prep_to(right-6, health-8)
nsubj(bad-16, care-9)
det(Service-14, the-11)
nn(Service-14, Public-12)
nn(Service-14, Health-13)
prep_via(care-9, Service-14)
advmod(bad-16, however-15)
xcomp(had-4, bad-16)
nsubj(was-18, it-17)
dep(bad-16, was-18)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP we))
    (VP (VBP are)
      (VP (VBN told)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP
                (NP (DT a) (NN privilege))
                (PP (IN of)
                  (NP
                    (NP (DT those))
                    (PP (IN with)
                      (NP (NN money)))))))))))
    (. .)))

advmod(told-4, Now-1)
nsubjpass(told-4, we-2)
auxpass(told-4, are-3)
root(ROOT-0, told-4)
complm(privilege-9, that-5)
nsubj(privilege-9, it-6)
cop(privilege-9, is-7)
det(privilege-9, a-8)
ccomp(told-4, privilege-9)
prep_of(privilege-9, those-11)
prep_with(those-11, money-13)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBG sorry)
          (NP (NNP John)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (ADVP (RB digitally))
      (VP (VBD signed)
        (NP (DT the) (NN agreement)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ nice)
                  (PP (IN on)
                    (NP (DT this) (NN site))))))))))
    (. .)))

nsubj(sorry-4, I-2)
aux(sorry-4, 'm-3)
root(ROOT-0, sorry-4)
dobj(sorry-4, John-5)
nsubj(signed-10, I-8)
advmod(signed-10, digitally-9)
conj_but(sorry-4, signed-10)
det(agreement-12, the-11)
dobj(signed-10, agreement-12)
aux(nice-15, to-13)
cop(nice-15, be-14)
infmod(agreement-12, nice-15)
det(site-18, this-17)
prep_on(nice-15, site-18)

(ROOT
  (S
    (S
      (NP
        (NP (NN Law) (NN enforcement))
        (, ,)
        (NP (NN military))
        (, ,)
        (CC and)
        (NP (NNS prisons)))
      (VP (VBP are)
        (ADJP (JJ constitutional))))
    (, ,)
    (NP (NN health) (NN care))
    (VP (VBZ is) (RB not))
    (. .)))

nn(enforcement-2, Law-1)
nsubj(constitutional-9, enforcement-2)
conj_and(enforcement-2, military-4)
nsubj(constitutional-9, military-4)
conj_and(enforcement-2, prisons-7)
nsubj(constitutional-9, prisons-7)
cop(constitutional-9, are-8)
ccomp(is-13, constitutional-9)
nn(care-12, health-11)
nsubj(is-13, care-12)
root(ROOT-0, is-13)
neg(is-13, not-14)

(ROOT
  (S
    (ADVP (RB Otherwise))
    (NP (PRP I))
    (VP (MD would)
      (VP (VB answer)
        (NP (DT this) (NN balderdash))
        (PP (IN with)
          (NP
            (NP (NNS words))
            (ADJP (RB not) (JJ appropriate))
            (PP (IN for)
              (NP (JJ polite) (NN company)))))))
    (. .)))

advmod(answer-4, Otherwise-1)
nsubj(answer-4, I-2)
aux(answer-4, would-3)
root(ROOT-0, answer-4)
det(balderdash-6, this-5)
dobj(answer-4, balderdash-6)
prep_with(answer-4, words-8)
neg(appropriate-10, not-9)
amod(words-8, appropriate-10)
amod(company-13, polite-12)
prep_for(words-8, company-13)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (NP
            (NP (DT a) (NN man))
            (PP (IN of)
              (NP (PRP$ my) (NN word)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB leave)
        (NP (PRP$ your) (NNS comments))
        (S
          (VP (TO to)
            (VP (VB speak)
              (PP (IN for)
                (NP (PRP themselves))))))))
    (. .)))

mark(man-5, Since-1)
nsubj(man-5, I-2)
cop(man-5, am-3)
det(man-5, a-4)
advcl(leave-12, man-5)
poss(word-8, my-7)
prep_of(man-5, word-8)
nsubj(leave-12, I-10)
aux(leave-12, 'll-11)
root(ROOT-0, leave-12)
poss(comments-14, your-13)
dobj(leave-12, comments-14)
aux(speak-16, to-15)
xcomp(leave-12, speak-16)
prep_for(speak-16, themselves-18)

(ROOT
  (S
    (NP
      (NP (NN Anyone))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ has)
            (ADVP (RB ever))
            (VP
              (VP (VBN stood)
                (PP (IN in)
                  (NP (NN line)))
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN mercy))
                    (PP (IN of)
                      (NP (DT a) (NN bureaucrat))))))
              (, ,)
              (CC and)
              (VP (VBN compared)
                (NP (DT the) (NN service))
                (PP (TO to)
                  (NP
                    (NP (DT that))
                    (VP (VBN provided)
                      (PP (IN at)
                        (NP (DT the) (JJ local) (JJ retail) (NN store))))))))))))
    (VP (VBZ knows)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP
            (NP (DT the) (JJR better) (NN service))
            (, ,)
            (PP (IN with)
              (NP (JJ superior) (NN product))))
          (VP (VBZ lies)))))
    (. .)))

nsubj(stood-5, Anyone-1)
nsubj(compared-16, Anyone-1)
nsubj(knows-27, Anyone-1)
aux(stood-5, has-3)
advmod(stood-5, ever-4)
rcmod(Anyone-1, stood-5)
prep_in(stood-5, line-7)
det(mercy-10, the-9)
prep_at(stood-5, mercy-10)
det(bureaucrat-13, a-12)
prep_of(mercy-10, bureaucrat-13)
rcmod(Anyone-1, compared-16)
conj_and(stood-5, compared-16)
det(service-18, the-17)
dobj(compared-16, service-18)
prep_to(compared-16, that-20)
partmod(that-20, provided-21)
det(store-26, the-23)
amod(store-26, local-24)
amod(store-26, retail-25)
prep_at(provided-21, store-26)
root(ROOT-0, knows-27)
advmod(lies-36, where-28)
det(service-31, the-29)
amod(service-31, better-30)
nsubj(lies-36, service-31)
amod(product-35, superior-34)
prep_with(service-31, product-35)
advcl(knows-27, lies-36)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB give)
        (NP (PRP you))
        (NP
          (NP (DT a) (NN hint))
          (: :)
          (S
            (NP (PRP it))
            (VP (VBP ai) (RB n't)
              (NP
                (NP (DT the) (NN bureaucrat))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ gives)
                      (NP (PRP me))
                      (NP (DT the) (NN service)))))))))))
    (: ...)))

nsubj(give-3, I-1)
aux(give-3, 'll-2)
root(ROOT-0, give-3)
iobj(give-3, you-4)
det(hint-6, a-5)
dobj(give-3, hint-6)
nsubj(ai-9, it-8)
dep(hint-6, ai-9)
neg(ai-9, n't-10)
det(bureaucrat-12, the-11)
attr(ai-9, bureaucrat-12)
nsubj(gives-14, bureaucrat-12)
rcmod(bureaucrat-12, gives-14)
iobj(gives-14, me-15)
det(service-17, the-16)
dobj(gives-14, service-17)

(ROOT
  (S (`` ``)
    (NP (NN nuff))
    (VP (VBD said))
    (. .)))

nsubj(said-3, nuff-2)
root(ROOT-0, said-3)

(ROOT
  (S
    (PP (IN For)
      (NP (NNS decades)))
    (NP (JJ free) (NN market) (NN health))
    (VP (VBP care)
      (SBAR
        (S
          (NP (NN delivery))
          (VP (VBD worked)
            (ADJP (RB just) (JJ fine))))))
    (. .)))

prep_for(care-6, decades-2)
amod(health-5, free-3)
nn(health-5, market-4)
nsubj(care-6, health-5)
root(ROOT-0, care-6)
nsubj(worked-8, delivery-7)
ccomp(care-6, worked-8)
advmod(fine-10, just-9)
acomp(worked-8, fine-10)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN lad))
            (PP (IN of)
              (NP
                (NP (CD 7))
                (PRN (-LRB- -LRB-)
                  (ADVP
                    (NP (CD 42) (NNS years))
                    (RB ago))
                  (-RRB- -RRB-))))))))
    (, ,)
    (NP (PRP$ my) (NN mother)
      (CC and)
      (NN father))
    (VP (VBD took)
      (NP (PRP me))
      (PP
        (PP (TO to)
          (NP
            (NP (DT a) (JJ local) (NN doctor))
            (, ,)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP they))
                (VP (VBD paid)
                  (NP
                    (NP ($ $) (CD 5))
                    (PP (IN for)
                      (NP (DT the) (NN visit)))))))))
        (, ,)
        (CC and)
        (PP (IN at)
          (NP
            (NP (DT the) (NN time))
            (PP (IN of)
              (NP (DT the) (NN visit)))))))
    (. .)))

advmod(lad-5, When-1)
nsubj(lad-5, I-2)
cop(lad-5, was-3)
det(lad-5, a-4)
advcl(took-18, lad-5)
prep_of(lad-5, 7-7)
num(years-10, 42-9)
npadvmod(ago-11, years-10)
dep(7-7, ago-11)
poss(mother-15, my-14)
nsubj(took-18, mother-15)
nsubj(took-18', mother-15)
conj_and(mother-15, father-17)
nsubj(took-18, father-17)
root(ROOT-0, took-18)
conj_and(took-18, took-18')
dobj(took-18, me-19)
det(doctor-23, a-21)
amod(doctor-23, local-22)
prep_to(took-18, doctor-23)
advmod(paid-27, where-25)
nsubj(paid-27, they-26)
rcmod(doctor-23, paid-27)
dobj(paid-27, $-28)
num($-28, 5-29)
det(visit-32, the-31)
prep_for($-28, visit-32)
det(time-37, the-36)
prep_at(took-18', time-37)
det(visit-40, the-39)
prep_of(time-37, visit-40)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD was)
      (NP (DT no) (NN billing))
      (, ,)
      (PP (CC either)
        (PP (TO to)
          (NP (PRP$ my) (NNS parents)))
        (CC or)
        (PP (TO to)
          (NP (DT a) (JJ third) (NN party)))))
    (. .)))

expl(was-2, There-1)
root(ROOT-0, was-2)
det(billing-4, no-3)
nsubj(was-2, billing-4)
preconj(was-2, either-6)
poss(parents-9, my-8)
prep_to(was-2, parents-9)
det(party-14, a-12)
amod(party-14, third-13)
prep_to(was-2, party-14)
conj_or(parents-9, party-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD had)
      (NP
        (NP (DT a) (NN nurse))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD worked)
              (PP (IN for)
                (NP
                  (NP (PRP him))
                  (, ,)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (ADVP (RB also))
                      (VP (VBN doubled)
                        (PP (IN as)
                          (NP (DT a) (NN receptionist)))))))))))))
    (. .)))

nsubj(had-2, He-1)
root(ROOT-0, had-2)
det(nurse-4, a-3)
dobj(had-2, nurse-4)
nsubj(worked-6, nurse-4)
rcmod(nurse-4, worked-6)
prep_for(worked-6, him-8)
nsubj(doubled-12, him-8)
advmod(doubled-12, also-11)
rcmod(him-8, doubled-12)
det(receptionist-15, a-14)
prep_as(doubled-12, receptionist-15)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Today) (POS 's))
        (NN doctor) (POS 's))
      (NN office))
    (VP (VBZ is)
      (VP (VBN filled)
        (PP (IN with)
          (NP
            (NP (JJ extra) (NN billing) (NNS people))
            (, ,)
            (NP (NN filing) (NNS people))
            (, ,) (FW etc.) (, ,))
          (ADVP (RB just)))
        (S
          (VP (TO to)
            (VP (VB fulfill)
              (NP (DT the) (NN insurance) (NNS requirements))
              (PP (IN for)
                (NP
                  (NP (NN billing))
                  (PP (IN for)
                    (NP (NNS services))))))))))
    (. .)))

poss(doctor-3, Today-1)
poss(office-5, doctor-3)
nsubjpass(filled-7, office-5)
xsubj(fulfill-20, office-5)
auxpass(filled-7, is-6)
root(ROOT-0, filled-7)
amod(people-11, extra-9)
nn(people-11, billing-10)
prep_with(filled-7, people-11)
nn(people-14, filing-13)
appos(people-11, people-14)
dep(people-11, etc.-16)
advmod(filled-7, just-18)
aux(fulfill-20, to-19)
xcomp(filled-7, fulfill-20)
det(requirements-23, the-21)
nn(requirements-23, insurance-22)
dobj(fulfill-20, requirements-23)
prep_for(fulfill-20, billing-25)
prep_for(billing-25, services-27)

