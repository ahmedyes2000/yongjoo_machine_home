(ROOT
  (S
    (NP
      (NP (DT The) (NN flaw))
      (PP (IN in)
        (NP (PRP$ your) (NN logic))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR (IN that)
              (S
                (NP (NN health) (NN insurance))
                (VP (VBZ is)
                  (NP (DT the)
                    (ADJP (JJS best)
                      (CC and)
                      (JJS cheapest))
                    (NN way)
                    (S
                      (VP (TO to)
                        (VP (VB provide)
                          (NP (NN health) (NN care)))))))))))))
    (. .)))

det(flaw-2, The-1)
nsubj(is-6, flaw-2)
poss(logic-5, your-4)
prep_in(flaw-2, logic-5)
root(ROOT-0, is-6)
complm(think-9, that-7)
nsubj(think-9, you-8)
ccomp(is-6, think-9)
complm(way-18, that-10)
nn(insurance-12, health-11)
nsubj(way-18, insurance-12)
cop(way-18, is-13)
det(way-18, the-14)
amod(way-18, best-15)
conj_and(best-15, cheapest-17)
amod(way-18, cheapest-17)
ccomp(think-9, way-18)
aux(provide-20, to-19)
infmod(way-18, provide-20)
nn(care-22, health-21)
dobj(provide-20, care-22)

(ROOT
  (S
    (NP (NNP Health) (NN care) (NN insurance))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG paying)
              (PP (IN for)
                (PRN (-LRB- -LRB-)
                  (SBAR (RB not)
                    (S
                      (NP
                        (NP (RB only) (DT the) (NNS doctors))
                        (, ,)
                        (NP
                          (NP (DT the) (NN hospital) (POS 's))
                          (NN overhead))
                        (, ,))
                      (VP (VBZ etc.)
                        (SBAR (CC but)
                          (S
                            (NP (PRP you))
                            (VP (VBP are)
                              (ADVP (RB also))
                              (VP (VBG paying)
                                (PP (IN for)))))))))
                  (-RRB- -RRB-))
                (NP (NN everyone) (RB else)))
              (SBAR (IN that)
                (S
                  (VP (VBZ works)
                    (PP (IN for)
                      (NP (DT the) (NN insurance) (NN company)))))))))))
    (. .)))

nn(insurance-3, Health-1)
nn(insurance-3, care-2)
nsubj(means-4, insurance-3)
root(ROOT-0, means-4)
complm(paying-8, that-5)
nsubj(paying-8, you-6)
aux(paying-8, are-7)
ccomp(means-4, paying-8)
dep(etc.-21, not-11)
advmod(doctors-14, only-12)
det(doctors-14, the-13)
nsubj(etc.-21, doctors-14)
det(hospital-17, the-16)
poss(overhead-19, hospital-17)
appos(doctors-14, overhead-19)
dep(paying-8, etc.-21)
cc(paying-26, but-22)
nsubj(paying-26, you-23)
aux(paying-26, are-24)
advmod(paying-26, also-25)
ccomp(etc.-21, paying-26)
prep(paying-26, for-27)
prep_for(paying-8, everyone-29)
advmod(everyone-29, else-30)
complm(works-32, that-31)
ccomp(paying-8, works-32)
det(company-36, the-34)
nn(company-36, insurance-35)
prep_for(works-32, company-36)

(ROOT
  (NP
    (NP (JJ Oh) (NN yeah))
    (, ,)
    (NP (DT the) (NNS people))
    (. .)))

amod(yeah-2, Oh-1)
root(ROOT-0, yeah-2)
det(people-5, the-4)
appos(yeah-2, people-5)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (ADVP (RB now))
    (VP (VBD cost)
      (NP (JJR more) (NN money))
      (S
        (VP (TO to)
          (VP (VB feed)
            (NP
              (NP (DT the) (JJ same) (NN amount))
              (PP (IN of)
                (NP (NNS people))))
            (SBAR (IN because)
              (S
                (NP (PRP we))
                (ADVP (RB now))
                (VP (VBP have)
                  (S
                    (VP (TO to)
                      (VP (VB pay)
                        (PP (IN for)
                          (NP (DT the) (NNP NIG)))))))))))))
    (. .)))

cc(cost-4, But-1)
nsubj(cost-4, it-2)
advmod(cost-4, now-3)
root(ROOT-0, cost-4)
amod(money-6, more-5)
dobj(cost-4, money-6)
aux(feed-8, to-7)
xcomp(cost-4, feed-8)
det(amount-11, the-9)
amod(amount-11, same-10)
dobj(feed-8, amount-11)
prep_of(amount-11, people-13)
mark(have-17, because-14)
nsubj(have-17, we-15)
xsubj(pay-19, we-15)
advmod(have-17, now-16)
advcl(feed-8, have-17)
aux(pay-19, to-18)
xcomp(have-17, pay-19)
det(NIG-22, the-21)
prep_for(pay-19, NIG-22)

(ROOT
  (S
    (NP (DT No) (NN problem))
    (, ,)
    (NP (PRP we))
    (VP (VBD cut)
      (ADVP (RB back))
      (PP
        (PP (IN on)
          (NP
            (NP (PRP$ their) (NNS rations))
            (PRN (-LRB- -LRB-)
              (S
                (NP (PRP they))
                (VP (VBP 're)
                  (ADJP (RB too) (JJ fat))
                  (ADVP (RB anyway))))
              (-RRB- -RRB-))))
        (CC and)
        (PP (IN on)
          (NP
            (NP (DT the) (NN quality))
            (PP (IN of)
              (NP (DT the) (NN food)))))))
    (. .)))

det(problem-2, No-1)
nsubj(cut-5, problem-2)
nsubj(cut-5, we-4)
root(ROOT-0, cut-5)
advmod(cut-5, back-6)
poss(rations-9, their-8)
prep_on(cut-5, rations-9)
nsubj(fat-14, they-11)
cop(fat-14, 're-12)
advmod(fat-14, too-13)
dep(rations-9, fat-14)
advmod(fat-14, anyway-15)
det(quality-20, the-19)
prep_on(cut-5, quality-20)
conj_and(rations-9, quality-20)
det(food-23, the-22)
prep_of(quality-20, food-23)

(ROOT
  (S
    (SBAR (RB Now) (IN once)
      (S
        (NP (NNS people))
        (VP (VBP get)
          (VP (VBN used)
            (PP (TO to)
              (NP
                (NP (DT the) (NN idea))
                (PP (IN of)
                  (NP (NNP NIG)))))))))
    (PRN (, ,)
      (S
        (NP (PRP we))
        (VP (MD can)
          (VP (VB raise)
            (NP
              (NP (DT the) (NN price))
              (PP (IN of)
                (NP (NN food))))
            (PP (IN because)))))
      (, ,))
    (`` ``)
    (VP (VBP Do) (RB n't)
      (VP (VB worry)
        (PP (IN about)
          (NP (PRP it)))))
    (. .)))

advmod(used-5, Now-1)
dep(used-5, once-2)
nsubjpass(used-5, people-3)
auxpass(used-5, get-4)
advcl(worry-24, used-5)
csubj(worry-24, used-5)
det(idea-8, the-7)
prep_to(used-5, idea-8)
prep_of(idea-8, NIG-10)
nsubj(raise-14, we-12)
aux(raise-14, can-13)
parataxis(worry-24, raise-14)
det(price-16, the-15)
dobj(raise-14, price-16)
prep_of(price-16, food-18)
prep(raise-14, because-19)
aux(worry-24, Do-22)
neg(worry-24, n't-23)
root(ROOT-0, worry-24)
prep_about(worry-24, it-26)

(ROOT
  (S
    (NP (DT The) (NN insurance))
    (VP (MD will)
      (VP (VB take)
        (NP
          (NP (NN care))
          (PP (IN of)
            (NP (PRP it))))))
    (. .)))

det(insurance-2, The-1)
nsubj(take-4, insurance-2)
aux(take-4, will-3)
root(ROOT-0, take-4)
dobj(take-4, care-5)
prep_of(care-5, it-7)

(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (PRP I))
    (PRN
      (S
        (VP (VBD was)
          (ADVP (RB literally)))))
    (VP (VBD told)
      (NP (DT this))
      (PP (IN by)
        (NP
          (NP (DT a) (NN doctor))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD wanted)
                (S
                  (VP (TO to)
                    (VP (VB perform)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP I))
                          (VP (VBD considered)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (NP (DT a) (JJ questionable) (NN procedure)))))))))))))))))
    (. .)))

nsubj(told-6, I-3)
parataxis(told-6, was-4)
advmod(was-4, literally-5)
root(ROOT-0, told-6)
dobj(told-6, this-7)
det(doctor-10, a-9)
prep_by(told-6, doctor-10)
nsubj(wanted-12, doctor-10)
rcmod(doctor-10, wanted-12)
aux(perform-14, to-13)
xcomp(wanted-12, perform-14)
dep(considered-17, what-15)
nsubj(considered-17, I-16)
xsubj(procedure-22, I-16)
ccomp(perform-14, considered-17)
aux(procedure-22, to-18)
cop(procedure-22, be-19)
det(procedure-22, a-20)
amod(procedure-22, questionable-21)
xcomp(considered-17, procedure-22)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (ADJP (JJ adamant))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (JJ necessary))
            (SBAR (IN until)
              (S
                (NP (PRP I))
                (VP (VBD mentioned)
                  (SBAR (IN that)
                    (S
                      (NP (PRP I))
                      (VP (VBD did) (RB not)
                        (VP (VB have)
                          (NP (NN insurance)))))))))))))
    (. .) (-RRB- -RRB-)))

nsubj(adamant-3, He-1)
cop(adamant-3, was-2)
root(ROOT-0, adamant-3)
complm(necessary-7, that-4)
nsubj(necessary-7, it-5)
cop(necessary-7, was-6)
ccomp(adamant-3, necessary-7)
mark(mentioned-10, until-8)
nsubj(mentioned-10, I-9)
advcl(necessary-7, mentioned-10)
complm(have-15, that-11)
nsubj(have-15, I-12)
aux(have-15, did-13)
neg(have-15, not-14)
ccomp(mentioned-10, have-15)
dobj(have-15, insurance-16)

(ROOT
  (S (CC Or)
    (NP (PRP we))
    (VP (MD can)
      (VP (VB leave)
        (NP (PRP it))
        (PRN (-LRB- -LRB-)
          (S
            (VP (VB conserve)
              (NP (PRP it))))
          (-RRB- -RRB-))
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (PRN (-LRB- -LRB-)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (SBAR
                        (WHADVP (WRB why))
                        (S
                          (NP (PRP we))
                          (VP (VBP call)
                            (S
                              (NP (PRP ourselves))
                              (NP (NNS conservatives)))))))))
                (-RRB- -RRB-)))))))
    (. .)))

cc(leave-4, Or-1)
nsubj(leave-4, we-2)
aux(leave-4, can-3)
root(ROOT-0, leave-4)
dobj(leave-4, it-5)
parataxis(leave-4, conserve-7)
dobj(conserve-7, it-8)
mark(is-12, as-10)
nsubj(is-12, it-11)
advcl(leave-4, is-12)
nsubj(is-15, which-14)
parataxis(is-12, is-15)
advmod(call-18, why-16)
nsubj(call-18, we-17)
advcl(is-15, call-18)
nsubj(conservatives-20, ourselves-19)
xcomp(call-18, conservatives-20)

(ROOT
  (S
    (S
      (NP (DT A) (JJ pan) (NN handler))
      (VP (MD can)
        (VP
          (VP (VB get)
            (NP
              (NP
                (QP (IN at) (JJS least) ($ $) (CD 15)))
              (NP (DT a) (NN day))))
          (CC and)
          (VP (VB get)
            (PRN
              (NP
                (NP
                  (ADJP (CD 3) (JJ happy))
                  (NNS meals))
                (PP (IN at)
                  (NP
                    (NP (NNP Mickey) (NNP D) (NNP 's))
                    (: ;))))
              (-RRB- -RRB-))))))
    (CC And)
    (S
      (INTJ (UH no))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB hate)
          (NP (DT the) (JJ poor)))))
    (. .)))

det(handler-3, A-1)
amod(handler-3, pan-2)
nsubj(get-5, handler-3)
nsubj(get-13, handler-3)
aux(get-5, can-4)
root(ROOT-0, get-5)
quantmod($-8, at-6)
quantmod($-8, least-7)
dobj(get-5, $-8)
number($-8, 15-9)
det(day-11, a-10)
dep($-8, day-11)
conj_and(get-5, get-13)
number(happy-15, 3-14)
amod(meals-16, happy-15)
dep(get-13, meals-16)
nn('s-20, Mickey-18)
nn('s-20, D-19)
prep_at(meals-16, 's-20)
dep(hate-29, no-24)
nsubj(hate-29, I-26)
aux(hate-29, do-27)
neg(hate-29, n't-28)
conj_and(get-5, hate-29)
det(poor-31, the-30)
dobj(hate-29, poor-31)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP hate)
      (NP (DT the) (NN fact))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (VP (VBN forced)
              (S
                (VP (TO to)
                  (VP (VB provide)
                    (PP (IN for)
                      (NP (PRP them)))))))))))
    (. .)))

nsubj(hate-3, I-1)
advmod(hate-3, just-2)
root(ROOT-0, hate-3)
det(fact-5, the-4)
dobj(hate-3, fact-5)
complm(forced-9, that-6)
nsubjpass(forced-9, I-7)
xsubj(provide-11, I-7)
auxpass(forced-9, am-8)
ccomp(hate-3, forced-9)
aux(provide-11, to-10)
xcomp(forced-9, provide-11)
prep_for(provide-11, them-13)

(ROOT
  (NP (DT A) (NN company)
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBZ 's)
          (PP (IN in)
            (NP (NN business)))
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (NN money))))))))
    (. .)))

det(company-2, A-1)
root(ROOT-0, company-2)
nsubj('s-4, that-3)
ccomp(company-2, 's-4)
prep_in('s-4, business-6)
aux(make-8, to-7)
xcomp('s-4, make-8)
dobj(make-8, money-9)

(ROOT
  (S
    (NP (NNP Poor) (NNS people))
    (VP (MD should)
      (VP (DT either)
        (VP (VB provide)
          (PP (IN for)
            (NP (PRP themselves))))
        (CC or)
        (VP (VB force)
          (S
            (NP (DT the) (NNS Liberals))
            (VP (TO to)
              (VP (VB provide)
                (PP (IN for)
                  (NP
                    (NP (PRP them))
                    (PRN (-LRB- -LRB-)
                      (PP (IN without)
                        (NP
                          (NP (DT any) (NN help))
                          (PP (IN from)
                            (NP (NNS conservatives))))
                        (: ;))
                      (-RRB- -RRB-))))))))))
    (. .)))

nn(people-2, Poor-1)
nsubj(provide-5, people-2)
nsubj(force-9, people-2)
aux(provide-5, should-3)
preconj(provide-5, either-4)
root(ROOT-0, provide-5)
prep_for(provide-5, themselves-7)
conj_or(provide-5, force-9)
det(Liberals-11, the-10)
nsubj(provide-13, Liberals-11)
aux(provide-13, to-12)
xcomp(force-9, provide-13)
prep_for(provide-13, them-15)
dep(them-15, without-17)
det(help-19, any-18)
pobj(without-17, help-19)
prep_from(help-19, conservatives-21)

(ROOT
  (S
    (NP
      (NP (NNP Money))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD could)
            (VP (VB go)
              (PP (IN towards)
                (NP (JJ actual) (NN health))))))))
    (VP (VBP care)
      (ADVP (RB instead))
      (PP (IN of)
        (NP
          (NP (DT the) (NN insurance) (POS 's))
          (NNS pockets))))
    (. .)))

nsubj(go-4, Money-1)
nsubj(care-8, Money-1)
aux(go-4, could-3)
rcmod(Money-1, go-4)
amod(health-7, actual-6)
prep_towards(go-4, health-7)
root(ROOT-0, care-8)
det(insurance-12, the-11)
poss(pockets-14, insurance-12)
prep_instead_of(care-8, pockets-14)

(ROOT
  (S (CC But)
    (VP (VBZ lets)
      (VP
        (VP (VB follow)
          (NP (PRP$ your) (NN logic)))
        (CC and)
        (VP (VB see)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP it))
              (VP (VBZ leads)))))))
    (. .)))

cc(lets-2, But-1)
root(ROOT-0, lets-2)
dep(lets-2, follow-3)
poss(logic-5, your-4)
dobj(follow-3, logic-5)
dep(lets-2, see-7)
conj_and(follow-3, see-7)
advmod(leads-10, where-8)
nsubj(leads-10, it-9)
advcl(see-7, leads-10)

(ROOT
  (S
    (NP (JJS Most) (NNS people))
    (VP (VBP do) (RB n't)
      (VP (VB require)
        (NP
          (NP (NN health) (NN care))
          (NP (DT every) (NN day)))))
    (. .)))

amod(people-2, Most-1)
nsubj(require-5, people-2)
aux(require-5, do-3)
neg(require-5, n't-4)
root(ROOT-0, require-5)
nn(care-7, health-6)
dobj(require-5, care-7)
det(day-9, every-8)
dep(care-7, day-9)

(ROOT
  (S (CC But)
    (NP (DT the))
    (VP (VBP do)
      (VP (VB require)
        (NP
          (NP (NN food))
          (NP (DT every) (NN day)))))
    (. .)))

cc(require-4, But-1)
nsubj(require-4, the-2)
aux(require-4, do-3)
root(ROOT-0, require-4)
dobj(require-4, food-5)
det(day-7, every-6)
dep(food-5, day-7)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR (IN since)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (JJ inhumane)
            (S
              (VP (TO to)
                (VP (VB let)
                  (S
                    (NP (NNS people))
                    (VP (VB go)
                      (ADJP (JJ hungry)))))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD should)
      (VP (VB have)
        (VP (VBN nationalized)
          (NP
            (NP (NNS meals))
            (PP (IN for)
              (NP
                (NP (DT every) (NN citizen))
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP (DT a) (NN roast))
                    (PP (IN in)
                      (NP (DT every) (NN pot))))
                  (-RRB- -RRB-))))))))
    (. .)))

advmod(nationalized-16, Now-1)
mark(inhumane-6, since-3)
nsubj(inhumane-6, it-4)
cop(inhumane-6, is-5)
advcl(nationalized-16, inhumane-6)
aux(let-8, to-7)
xcomp(inhumane-6, let-8)
nsubj(go-10, people-9)
ccomp(let-8, go-10)
acomp(go-10, hungry-11)
nsubj(nationalized-16, we-13)
aux(nationalized-16, should-14)
aux(nationalized-16, have-15)
root(ROOT-0, nationalized-16)
dobj(nationalized-16, meals-17)
det(citizen-20, every-19)
prep_for(meals-17, citizen-20)
det(roast-23, a-22)
dep(citizen-20, roast-23)
det(pot-26, every-25)
prep_in(roast-23, pot-26)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP need)
      (S
        (NP
          (NP (NNS people))
          (PP (IN in)
            (NP (NN place))))
        (VP (TO to)
          (VP
            (VP (VB collect)
              (NP (DT the) (NN money)))
            (CC and)
            (VP (VB distribute)
              (NP
                (NP (DT the) (NN money))
                (, ,)
                (NP (FW etc.))))))))
    (. .)))

cc(need-3, But-1)
nsubj(need-3, we-2)
root(ROOT-0, need-3)
nsubj(collect-8, people-4)
nsubj(distribute-12, people-4)
prep_in(people-4, place-6)
aux(collect-8, to-7)
xcomp(need-3, collect-8)
det(money-10, the-9)
dobj(collect-8, money-10)
xcomp(need-3, distribute-12)
conj_and(collect-8, distribute-12)
det(money-14, the-13)
dobj(distribute-12, money-14)
appos(money-14, etc.-16)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD 'll)
      (VP (VB call)
        (S
          (NP (PRP them))
          (NP
            (NP (DT the) (NNP Nutrition) (NNP Insurance) (NNP Group))
            (PRN (-LRB- -LRB-)
              (NP (NNP NIG))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(call-3, We-1)
aux(call-3, 'll-2)
root(ROOT-0, call-3)
nsubj(Group-8, them-4)
det(Group-8, the-5)
nn(Group-8, Nutrition-6)
nn(Group-8, Insurance-7)
xcomp(call-3, Group-8)
abbrev(Group-8, NIG-10)

(ROOT
  (S
    (ADVP (RB now))
    (, ,)
    (NP (PRP they))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB get)
            (SBAR
              (SBAR
                (S
                  (VP (VBN paid)
                    (PP (IN for)
                      (NP (PRP$ their) (NNS services))))))
              (CC but)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT that) (NN money))
                      (VP (VBG coming)
                        (PP (IN from))))))))))))
    (. ?)))

advmod(need-4, now-1)
nsubj(need-4, they-3)
xsubj(get-6, they-3)
root(ROOT-0, need-4)
aux(get-6, to-5)
xcomp(need-4, get-6)
dep(get-6, paid-7)
poss(services-10, their-9)
prep_for(paid-7, services-10)
advmod(money-15, where-12)
cop(money-15, is-13)
det(money-15, that-14)
dep(get-6, money-15)
conj_but(paid-7, money-15)
partmod(money-15, coming-16)
prep(coming-16, from-17)

