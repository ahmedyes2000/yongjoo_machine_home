(ROOT
  (S
    (NP (NNS Employers))
    (VP (MD may)
      (VP (VB dump)
        (NP (PRP$ their) (NNS employees))
        (PP (IN into)
          (NP (JJ public) (NN insurance)))))
    (. .)))

nsubj(dump-3, Employers-1)
aux(dump-3, may-2)
root(ROOT-0, dump-3)
poss(employees-5, their-4)
dobj(dump-3, employees-5)
amod(insurance-8, public-7)
prep_into(dump-3, insurance-8)

(ROOT
  (NP (NNP Stuart) (NNP Butler) (. .)))

nn(Butler-2, Stuart-1)
root(ROOT-0, Butler-2)

(ROOT
  (S (CC Or)
    (, ,)
    (NP (PRP it))
    (VP (MD may)
      (ADVP (RB just) (RB entirely))
      (VP (VB negate)
        (NP (PRP itself))
        (PP (IN by)
          (S
            (ADVP (RB simply))
            (VP (VBG transferring)
              (NP (VBN insured) (NNS individuals))
              (PP (IN from)
                (NP (JJ private) (NNS plans)))
              (PP (TO to)
                (NP (DT a) (JJ public) (NN one)))
              (, ,)
              (S
                (VP (VBG leaving)
                  (NP
                    (NP (JJ little) (NN room))
                    (PP (IN for)
                      (NP (DT the) (VBG remaining) (NN uninsured)))))))))))
    (. .)))

cc(negate-7, Or-1)
nsubj(negate-7, it-3)
aux(negate-7, may-4)
advmod(entirely-6, just-5)
advmod(negate-7, entirely-6)
root(ROOT-0, negate-7)
dobj(negate-7, itself-8)
advmod(transferring-11, simply-10)
prepc_by(negate-7, transferring-11)
amod(individuals-13, insured-12)
dobj(transferring-11, individuals-13)
amod(plans-16, private-15)
prep_from(transferring-11, plans-16)
det(one-20, a-18)
amod(one-20, public-19)
prep_to(transferring-11, one-20)
partmod(transferring-11, leaving-22)
xcomp(transferring-11, leaving-22)
amod(room-24, little-23)
dobj(leaving-22, room-24)
det(uninsured-28, the-26)
amod(uninsured-28, remaining-27)
prep_for(room-24, uninsured-28)

(ROOT
  (S ('' '')
    (S
      (NP (DT The) (NN Case))
      (VP (VBZ Against)))
    (: :)
    (S
      (NP (DT The) (JJ public) (NN plan))
      (VP (MD will)
        (ADVP (RB unfairly))
        (VP (VBP crowd)
          (PRT (RP out))
          (NP
            (ADJP (JJ private))
            (NN coverage))
          ('' ''))))
    (. .)))

det(Case-3, The-2)
nsubj(Against-4, Case-3)
root(ROOT-0, Against-4)
det(plan-8, The-6)
amod(plan-8, public-7)
nsubj(crowd-11, plan-8)
aux(crowd-11, will-9)
advmod(crowd-11, unfairly-10)
parataxis(Against-4, crowd-11)
prt(crowd-11, out-12)
amod(coverage-14, private-13)
dobj(crowd-11, coverage-14)

(ROOT
  (NP (NNP Heritage) (NNP Foundation) (. .)))

nn(Foundation-2, Heritage-1)
root(ROOT-0, Foundation-2)

(ROOT
  (S
    (S
      (NP (NNP July))
      (NP
        (NP (CD 28))
        (, ,)
        (VP (VBN 2009))))
    (: :) ('' '')
    (S
      (SBAR
        (PRN (-LRB- -LRB-)
          (PP (IN With)
            (NP (JJ public) (NN insurance)))
          (-RRB- -RRB-))
        (S
          (NP (EX there))
          (VP (MD would)
            (ADVP (RB actually))
            (VP (VB be)
              (ADJP (JJ big))))))
      (VP (VBZ changes)
        (PP (IN for)
          (NP (JJ many)
            (ADJP (RB already) (VBN insured))
            (NNS people)))))
    (. .)))

dep(28-2, July-1)
root(ROOT-0, 28-2)
partmod(28-2, 2009-4)
dep(big-16, With-8)
amod(insurance-10, public-9)
pobj(With-8, insurance-10)
expl(big-16, there-12)
aux(big-16, would-13)
advmod(big-16, actually-14)
cop(big-16, be-15)
csubj(changes-17, big-16)
ccomp(28-2, changes-17)
amod(people-22, many-19)
advmod(insured-21, already-20)
amod(people-22, insured-21)
prep_for(changes-17, people-22)

(ROOT
  (S
    (S
      (VP (VBN Faced)
        (PP (IN with)
          (NP (DT a) (JJ low-cost) (JJ public) (NN option)))))
    (, ,)
    (NP (JJ many) (NNS employers))
    (VP (MD would)
      (ADVP (RB simply))
      (VP
        (VP (VB close)
          (PRT (RP down))
          (NP (PRP$ their) (VBG existing) (NN plan)))
        (CC and)
        (VP (VB push)
          (NP (PRP$ their) (NNS employees))
          (PP (IN into)
            (NP (DT the) (JJ public) (NN plan))))))
    (. .)))

partmod(close-12, Faced-1)
det(option-6, a-3)
amod(option-6, low-cost-4)
amod(option-6, public-5)
prep_with(Faced-1, option-6)
amod(employers-9, many-8)
nsubj(close-12, employers-9)
nsubj(push-18, employers-9)
aux(close-12, would-10)
advmod(close-12, simply-11)
root(ROOT-0, close-12)
prt(close-12, down-13)
poss(plan-16, their-14)
amod(plan-16, existing-15)
dobj(close-12, plan-16)
conj_and(close-12, push-18)
poss(employees-20, their-19)
dobj(push-18, employees-20)
det(plan-24, the-22)
amod(plan-24, public-23)
prep_into(push-18, plan-24)

(ROOT
  (S
    (VP (VB Remember)
      (SBAR (IN that)
        (S
          (NP (NNP Wal-Mart))
          (VP (VBD encouraged)
            (NP (JJ eligible) (NNS employees))
            (S
              (VP (TO to)
                (VP (VB sign)
                  (PRT (RP up))
                  (PP (IN for)
                    (NP (NNP Medicaid))))))
            (, ,)
            (SBAR (IN until)
              (S
                (NP (NNS states)
                  (CC and)
                  (NNS unions))
                (VP (VBD thwarted)
                  (NP (PRP them)))))))))
    (. .)))

root(ROOT-0, Remember-1)
complm(encouraged-4, that-2)
nsubj(encouraged-4, Wal-Mart-3)
ccomp(Remember-1, encouraged-4)
amod(employees-6, eligible-5)
dobj(encouraged-4, employees-6)
aux(sign-8, to-7)
xcomp(encouraged-4, sign-8)
prt(sign-8, up-9)
prep_for(sign-8, Medicaid-11)
mark(thwarted-17, until-13)
nsubj(thwarted-17, states-14)
conj_and(states-14, unions-16)
nsubj(thwarted-17, unions-16)
advcl(encouraged-4, thwarted-17)
dobj(thwarted-17, them-18)

(ROOT
  (S
    (NP (DT All) (JJ serious) (NNS analysts))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP (JJ many) (NNPS Americans))
          (VP (MD would)
            (VP (VB find)
              (S
                (NP (PRP themselves))
                (VP (VBN dumped)
                  (PP (IN into)
                    (NP (DT the) (JJ public) (NN plan))))))))))
    (. .)))

det(analysts-3, All-1)
amod(analysts-3, serious-2)
nsubj(agree-4, analysts-3)
root(ROOT-0, agree-4)
complm(find-9, that-5)
amod(Americans-7, many-6)
nsubj(find-9, Americans-7)
aux(find-9, would-8)
ccomp(agree-4, find-9)
nsubj(dumped-11, themselves-10)
dep(find-9, dumped-11)
det(plan-15, the-13)
amod(plan-15, public-14)
prep_into(dumped-11, plan-15)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN Because)
        (S
          (NP (DT a) (JJ public) (NN plan))
          (VP (MD would)
            (VP (VB have)
              (NP (JJ limited) (NN insurance))))))
      (, ,)
      (NP (DT the) (JJ public) (NN plan))
      (VP (MD may) (RB not)
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB cover))))))))
    (RB all)
    (S
      (NP (DT these) (NNS people))
      (VP (VBD dumped)
        (PP (IN by)
          (NP (PRP$ their) (NNS employers)))))
    (. .)))

mark(have-7, Because-2)
det(plan-5, a-3)
amod(plan-5, public-4)
nsubj(have-7, plan-5)
aux(have-7, would-6)
advcl(able-17, have-7)
amod(insurance-9, limited-8)
dobj(have-7, insurance-9)
det(plan-13, the-11)
amod(plan-13, public-12)
nsubj(able-17, plan-13)
aux(able-17, may-14)
neg(able-17, not-15)
cop(able-17, be-16)
root(ROOT-0, able-17)
aux(cover-19, to-18)
xcomp(able-17, cover-19)
advmod(able-17, all-20)
det(people-22, these-21)
nsubj(dumped-23, people-22)
ccomp(able-17, dumped-23)
poss(employers-26, their-25)
prep_by(dumped-23, employers-26)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN end)))
    (, ,)
    (ADVP (RB therefore))
    (, ,)
    (NP (DT a) (JJ public) (NN plan))
    (VP (MD may)
      (VP (VB leave)
        (NP (JJR more) (NNS people))
        (PP (IN without)
          (NP (NN insurance)))
        (, ,)
        (ADJP (JJ employer-provided)
          (CC or)
          (RB otherwise))))
    (. .)))

det(end-3, the-2)
prep_in(leave-11, end-3)
advmod(leave-11, therefore-5)
det(plan-9, a-7)
amod(plan-9, public-8)
nsubj(leave-11, plan-9)
aux(leave-11, may-10)
root(ROOT-0, leave-11)
amod(people-13, more-12)
dobj(leave-11, people-13)
prep_without(leave-11, insurance-15)
dep(leave-11, employer-provided-17)
dep(leave-11, otherwise-19)
advmod(employer-provided-17, otherwise-19)
conj_or(employer-provided-17, otherwise-19)

