(ROOT
  (S
    (NP (NNP Rights))
    (VP (VBP confer)
      (NP
        (NP (RB only) (DT a) (JJ negative) (NN requirement))
        (PP (IN on)
          (NP (NNS others)))))
    (. .)))

nsubj(confer-2, Rights-1)
root(ROOT-0, confer-2)
advmod(requirement-6, only-3)
det(requirement-6, a-4)
amod(requirement-6, negative-5)
dobj(confer-2, requirement-6)
prep_on(requirement-6, others-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD can)
      (PP (IN in)
        (NP (DT no) (NN way)))
      (VP (VB force)
        (S
          (NP (PRP them))
          (VP (TO to)
            (VP (VB act)
              (NP (DT a) (JJ certain) (NN way)))))))
    (. .)))

nsubj(force-6, They-1)
aux(force-6, can-2)
det(way-5, no-4)
prep_in(force-6, way-5)
root(ROOT-0, force-6)
nsubj(act-9, them-7)
aux(act-9, to-8)
xcomp(force-6, act-9)
det(way-12, a-10)
amod(way-12, certain-11)
dobj(act-9, way-12)

(ROOT
  (S
    (INTJ (DT That) (VBZ is))
    (VP
      (VP (VB use)
        (NP
          (NP (JJ physical) (NN force))
          (PP (IN against)
            (NP (PRP me))))
        (, ,)
        (S
          (NP (PRP they))
          (RB not)
          (VP (VB steal)
            (NP (PRP$ my) (NN property)))))
      (, ,)
      (VP (VB imprison))
      (CC or)
      (VP (VB kill)
        (NP (PRP me))))
    (. .)))

dep(use-3, That-1)
dep(That-1, is-2)
root(ROOT-0, use-3)
amod(force-5, physical-4)
dobj(use-3, force-5)
prep_against(force-5, me-7)
nsubj(steal-11, they-9)
neg(steal-11, not-10)
dep(use-3, steal-11)
poss(property-13, my-12)
dobj(steal-11, property-13)
conj_or(use-3, imprison-15)
conj_or(use-3, kill-17)
dobj(kill-17, me-18)

(ROOT
  (S
    (NP
      (NP (RB Much) (JJR more))
      (PP (IN on)
        (NP (DT this) (NN line))))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN understood)
          (S
            (VP (VBG reading)
              (NP
                (NP
                  (NP (NNP Ayn) (NNP Rand) (POS 's))
                  (NN article) ('' '') (NN Man))
                (SBAR
                  (S
                    (VP (VBZ 's)
                      (ADJP
                        (ADJP (JJ Rights))
                        (, ,) ('' '')
                        (ADJP (JJ available)
                          (PP (IN for)
                            (ADJP (JJ free)))))
                      (ADVP (RB here))
                      (: :)
                      (FRAG
                        (VP (VBZ http:\/\/www.aynrand.org\/site\/PageServer?pagename=arc_ayn_rand_man_rights))))))))))))))

advmod(more-2, Much-1)
nsubjpass(understood-8, more-2)
det(line-5, this-4)
prep_on(more-2, line-5)
aux(understood-8, can-6)
auxpass(understood-8, be-7)
root(ROOT-0, understood-8)
xcomp(understood-8, reading-9)
nn(Rand-11, Ayn-10)
poss(Man-15, Rand-11)
nn(Man-15, article-13)
dobj(reading-9, Man-15)
cop(Rights-17, 's-16)
rcmod(Man-15, Rights-17)
dep(Rights-17, available-20)
prep_for(available-20, free-22)
advmod(Rights-17, here-23)
dep(Rights-17, http:\/\/www.aynrand.org\/site\/PageServer?pagename=arc_ayn_rand_man_rights-25)

(ROOT
  (S
    (NP
      (NP (PRP$ My) (NN right))
      (PP (TO to)
        (NP
          (NP (NN life))
          (PP (IN in)
            (NP (DT no) (NN way))))))
    (VP
      (VP (VBZ infringes))
      (CC or)
      (VP
        (NP (NNS conflicts))
        (PP (IN with)
          (NP
            (NP (DT any) (JJ other) (`` ``) (JJ real) ('' '') (NN right))
            (VP (VBN held)
              (PP (IN by)
                (NP (DT any) (JJ other) (NN person))))))))
    (. .)))

poss(right-2, My-1)
nsubj(infringes-8, right-2)
prep_to(right-2, life-4)
det(way-7, no-6)
prep_in(life-4, way-7)
root(ROOT-0, infringes-8)
conj_or(infringes-8, conflicts-10)
det(right-17, any-12)
amod(right-17, other-13)
amod(right-17, real-15)
prep_with(conflicts-10, right-17)
partmod(right-17, held-18)
det(person-22, any-20)
amod(person-22, other-21)
agent(held-18, person-22)

(ROOT
  (SINV
    (PP (IN Under)
      (NP (DT no) (JJ possible) (JJ moral) (JJ social) (NN system)))
    (VBD did)
    (NP (DT any) (JJ other))
    (VP (VB have)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB murder)
              (NP (PRP me))))))
      (, ,)
      (SBAR (IN so)
        (S
          (NP (PRP I))
          (VP (MD can) (RB not)
            (VP (VB be)
              (VP (VBG forcing)
                (NP (PRP them))
                (PP (IN by)
                  (S
                    (VP (VBG requiring)
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (RB not)
                          (VP (VB murder)
                            (NP (PRP me))))))))))))))
    (. .)))

det(system-6, no-2)
amod(system-6, possible-3)
amod(system-6, moral-4)
amod(system-6, social-5)
prep_under(have-10, system-6)
aux(have-10, did-7)
det(other-9, any-8)
nsubj(have-10, other-9)
root(ROOT-0, have-10)
det(right-12, the-11)
dobj(have-10, right-12)
aux(murder-14, to-13)
infmod(right-12, murder-14)
dobj(murder-14, me-15)
mark(forcing-22, so-17)
nsubj(forcing-22, I-18)
aux(forcing-22, can-19)
neg(forcing-22, not-20)
aux(forcing-22, be-21)
advcl(have-10, forcing-22)
dobj(forcing-22, them-23)
prepc_by(forcing-22, requiring-25)
complm(murder-29, that-26)
nsubj(murder-29, they-27)
neg(murder-29, not-28)
ccomp(requiring-25, murder-29)
dobj(murder-29, me-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG imposing)
        (NP
          (NP (NN nothing))
          (PP (IN on)
            (NP (DT a) (NN crook))))
        (PP (IN by)
          (S
            (VP (`` ``) (VBG forcing) ('' '')
              (NP
                (NP (PRP them))
                (S (RB not)
                  (VP (TO to)
                    (VP (VB steal)
                      (NP (PRP$ my) (NN property)))))))))))
    (. .)))

nsubj(imposing-3, I-1)
aux(imposing-3, am-2)
root(ROOT-0, imposing-3)
dobj(imposing-3, nothing-4)
det(crook-7, a-6)
prep_on(nothing-4, crook-7)
prepc_by(imposing-3, forcing-10)
dobj(forcing-10, them-12)
neg(steal-15, not-13)
aux(steal-15, to-14)
infmod(them-12, steal-15)
poss(property-17, my-16)
dobj(steal-15, property-17)

(ROOT
  (S
    (ADVP (RB Just))
    (PP (IN like)
      (NP
        (NP (DT the) (NN military))
        (CC and)
        (NP (DT those))))
    (PP (IN in)
      (NP (DT the) (NN justice) (NN system)))
    (VP (VBP are) (RB not)
      (ADJP (`` ``) (JJ forced) ('' '')
        (S
          (VP (TO to)
            (VP (VB act)
              (PP (IN on)
                (NP (PRP$ my) (NN behalf))))))))
    (. .)))

advmod(forced-14, Just-1)
det(military-4, the-3)
prep_like(forced-14, military-4)
conj_and(military-4, those-6)
prep_like(forced-14, those-6)
det(system-10, the-8)
nn(system-10, justice-9)
prep_in(forced-14, system-10)
cop(forced-14, are-11)
neg(forced-14, not-12)
root(ROOT-0, forced-14)
aux(act-17, to-16)
xcomp(forced-14, act-17)
poss(behalf-20, my-19)
prep_on(act-17, behalf-20)

(ROOT
  (S
    (S
      (VP (VBG Using)
        (NP (PRP$ their) (JJ own) (JJ free) (NN will)
          (CC and)
          (PRP$ their) (JJ own) (NN right))
        (PP (TO to)
          (NP (PRP$ their) (JJ own) (NN life)))))
    (NP (PRP they))
    (VP (VBD decided)
      (S
        (VP (TO to)
          (VP (VB work)
            (PP (IN in)
              (NP (DT that) (NN line)))))))
    (. .)))

dep(decided-15, Using-1)
poss(will-5, their-2)
amod(will-5, own-3)
amod(will-5, free-4)
dobj(Using-1, will-5)
poss(right-9, their-7)
amod(right-9, own-8)
dobj(Using-1, right-9)
conj_and(will-5, right-9)
poss(life-13, their-11)
amod(life-13, own-12)
prep_to(Using-1, life-13)
nsubj(decided-15, they-14)
xsubj(work-17, they-14)
root(ROOT-0, decided-15)
aux(work-17, to-16)
xcomp(decided-15, work-17)
det(line-20, that-19)
prep_in(work-17, line-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (VBD had) (RB all)
          (VP (VBN decided)
            (ADVP (RB otherwise))
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD would)
                  (VP (VB have)
                    (S
                      (NP (DT no) (`` ``) (NN right) ('' ''))
                      (VP (TO to)
                        (VP (VB compel)
                          (NP (PRP them))
                          (ADVP (RB otherwise)))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB simply))
      (VP (VB have)
        (NP (DT the) (NN decision)
          (S
            (VP (TO to)
              (VP (VB defend)
                (FRAG
                  (NP (PRP myself))
                  (CC or)
                  (RB not))))))))
    (. .)))

mark(decided-5, If-1)
nsubj(decided-5, they-2)
aux(decided-5, had-3)
advmod(decided-5, all-4)
advcl(have-22, decided-5)
advmod(decided-5, otherwise-6)
nsubj(have-9, I-7)
aux(have-9, would-8)
ccomp(decided-5, have-9)
det(right-12, no-10)
nsubj(compel-15, right-12)
aux(compel-15, to-14)
ccomp(have-9, compel-15)
xcomp(have-9, compel-15)
dobj(compel-15, them-16)
advmod(compel-15, otherwise-17)
nsubj(have-22, I-19)
aux(have-22, would-20)
advmod(have-22, simply-21)
root(ROOT-0, have-22)
det(decision-24, the-23)
dobj(have-22, decision-24)
aux(defend-26, to-25)
infmod(decision-24, defend-26)
dep(defend-26, myself-27)
dep(myself-27, or-28)
neg(myself-27, not-29)

(ROOT
  (S
    (PP
      (ADVP (RB Fortunately))
      (IN for)
      (NP (PRP me)))
    (, ,)
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN born)
        (PP (IN into)
          (NP
            (NP (DT a) (NN society))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was)
                  (VP (VBN founded)
                    (PP (IN on)
                      (NP
                        (NP (JJ individual) (NNS rights))
                        (VP (VBN populated)
                          (PP (IN by)
                            (NP
                              (NP (JJ many))
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (VP (VBP are) (RB not)
                                    (ADJP (JJ willing)
                                      (S
                                        (VP (TO to)
                                          (VP (VB live)
                                            (PP (IN under)
                                              (NP (DT any) (JJ other) (NN system)))
                                            (SBAR (IN so)
                                              (S
                                                (NP (PRP they))
                                                (VP (VBD chose)
                                                  (S
                                                    (VP (TO to)
                                                      (VP (VB defend)
                                                        (NP
                                                          (NP (PRP$ their) (NNS rights))
                                                          (, ,)
                                                          (ADJP (RB physically) (IN if) (JJ necessary)))))))))))))))))))))))))))))
    (. .)))

advmod(born-7, Fortunately-1)
prep_for(born-7, me-3)
nsubjpass(born-7, I-5)
auxpass(born-7, was-6)
root(ROOT-0, born-7)
det(society-10, a-9)
prep_into(born-7, society-10)
nsubjpass(founded-13, society-10)
auxpass(founded-13, was-12)
rcmod(society-10, founded-13)
amod(rights-16, individual-15)
prep_on(founded-13, rights-16)
partmod(rights-16, populated-17)
agent(populated-17, many-19)
nsubj(willing-23, many-19)
cop(willing-23, are-21)
neg(willing-23, not-22)
rcmod(many-19, willing-23)
aux(live-25, to-24)
xcomp(willing-23, live-25)
det(system-29, any-27)
amod(system-29, other-28)
prep_under(live-25, system-29)
mark(chose-32, so-30)
nsubj(chose-32, they-31)
xsubj(defend-34, they-31)
advcl(live-25, chose-32)
aux(defend-34, to-33)
xcomp(chose-32, defend-34)
poss(rights-36, their-35)
dobj(defend-34, rights-36)
advmod(necessary-40, physically-38)
dep(necessary-40, if-39)
amod(rights-36, necessary-40)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP suggest)
      (S
        (NP (PRP you))
        (VP (VB review)
          (NP
            (NP
              (NP (DT the) (JJ fundamental) (NN right))
              (PP (TO to)
                (NP (NN life))))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (JJ derivative) (NNS rights) (NN liberty))
              (, ,)
              (NP (NN property))
              (CC and)
              (NP
                (NP (DT the) (NN pursuit))
                (PP (IN of)
                  (NP (NN happiness)))))))))
    (. .)))

nsubj(suggest-2, I-1)
root(ROOT-0, suggest-2)
nsubj(review-4, you-3)
ccomp(suggest-2, review-4)
det(right-7, the-5)
amod(right-7, fundamental-6)
dobj(review-4, right-7)
prep_to(right-7, life-9)
det(liberty-15, the-12)
amod(liberty-15, derivative-13)
nn(liberty-15, rights-14)
dobj(review-4, liberty-15)
conj_and(right-7, liberty-15)
conj_and(right-7, property-17)
conj_and(liberty-15, property-17)
det(pursuit-20, the-19)
conj_and(right-7, pursuit-20)
conj_and(liberty-15, pursuit-20)
prep_of(pursuit-20, happiness-22)

(ROOT
  (S
    (S (CC And)
      (VP (VB ensure)
        (NP (PRP yourself))
        (SBAR (IN that)
          (S
            (NP
              (NP (PRP$ my))
              (VP (VBG having)
                (NP
                  (NP (DT these) (NNS rights))
                  (PP (IN in)
                    (NP (DT no) (NN way))))))
            (VP (VBZ imposes)
              (S
                (NP
                  (NP (DT any) (NN action)
                    (CC or)
                    (NN duty))
                  (CC or)
                  (NP
                    (NP (NNS requirements))
                    (PP (IN on)
                      (NP (NN anyone)))))
                (ADJP (RB else))))))))
    (, ,)
    (NP
      (NP (DT the) (JJ only) (NN thing))
      (VP (`` ``) (VBN imposed) ('' '')
        (PP (IN on)
          (NP (PRP them)))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (RB not)
          (VP (VB violate)
            (NP (PRP$ my) (NNS rights))))))
    (. .)))

cc(ensure-2, And-1)
ccomp(is-31, ensure-2)
dobj(ensure-2, yourself-3)
complm(imposes-12, that-4)
nsubj(imposes-12, my-5)
partmod(my-5, having-6)
det(rights-8, these-7)
dobj(having-6, rights-8)
det(way-11, no-10)
prep_in(rights-8, way-11)
ccomp(ensure-2, imposes-12)
det(action-14, any-13)
nsubj(else-21, action-14)
conj_or(action-14, duty-16)
nsubj(else-21, duty-16)
conj_or(action-14, requirements-18)
nsubj(else-21, requirements-18)
prep_on(requirements-18, anyone-20)
xcomp(imposes-12, else-21)
det(thing-25, the-23)
amod(thing-25, only-24)
nsubj(is-31, thing-25)
partmod(thing-25, imposed-27)
prep_on(imposed-27, them-30)
root(ROOT-0, is-31)
complm(violate-35, that-32)
nsubj(violate-35, they-33)
neg(violate-35, not-34)
ccomp(is-31, violate-35)
poss(rights-37, my-36)
dobj(violate-35, rights-37)

