(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (JJ such) (NN thing))
        (PP (IN as) (`` ``)
          (NP (JJ free) (NN health) (NN care))
          ('' ''))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(thing-5, no-3)
amod(thing-5, such-4)
nsubj(is-2, thing-5)
amod(care-10, free-8)
nn(care-10, health-9)
prep_as(thing-5, care-10)

(ROOT
  (S
    (ADVP (RB Somehow))
    (, ,)
    (NP (PRP we))
    (VP (MD will)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB pay)
              (PP (IN for)
                (NP (PRP it)))
              (PP (IN by)
                (NP (PRP$ our) (NNS taxes)
                  (CC or)
                  (NN insurance))))))))
    (. .)))

advmod(have-5, Somehow-1)
nsubj(have-5, we-3)
xsubj(pay-7, we-3)
aux(have-5, will-4)
root(ROOT-0, have-5)
aux(pay-7, to-6)
xcomp(have-5, pay-7)
prep_for(pay-7, it-9)
poss(taxes-12, our-11)
prep_by(pay-7, taxes-12)
prep_by(pay-7, insurance-14)
conj_or(taxes-12, insurance-14)

(ROOT
  (S
    (NP (DT The) (JJ poor))
    (VP (MD should)
      (VP (VB get)
        (NP (PRP it))
        (ADVP (JJ free))
        (, ,)
        (ADVP (RB though))))
    (. .)))

det(poor-2, The-1)
nsubj(get-4, poor-2)
aux(get-4, should-3)
root(ROOT-0, get-4)
dobj(get-4, it-5)
advmod(get-4, free-6)
advmod(get-4, though-8)

