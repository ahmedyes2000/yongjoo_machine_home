(ROOT
  (S
    (ADVP (RB Merlinda))
    (, ,)
    (NP (PRP You))
    (VP (VBP do)
      (VP (VB bring)
        (PRT (RP up))
        (NP (JJ good) (NNS points))
        (SBAR (IN that)
          (S
            (NP (JJ small) (NNS businesses))
            (VP (MD would)
              (VP (VB benefit)))))))
    (. .)))

advmod(bring-5, Merlinda-1)
nsubj(bring-5, You-3)
aux(bring-5, do-4)
root(ROOT-0, bring-5)
prt(bring-5, up-6)
amod(points-8, good-7)
dobj(bring-5, points-8)
complm(benefit-13, that-9)
amod(businesses-11, small-10)
nsubj(benefit-13, businesses-11)
aux(benefit-13, would-12)
ccomp(bring-5, benefit-13)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (NP (DT the) (NN rest))
      (PP (IN of)
        (NP
          (NP (PRP$ your) (NN argument))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP believe)))))))
    (VP (VBZ is)
      (ADJP (JJ false)))
    (. .)))

advmod(false-11, However-1)
det(rest-4, the-3)
nsubj(false-11, rest-4)
poss(argument-7, your-6)
prep_of(rest-4, argument-7)
dobj(believe-9, argument-7)
nsubj(believe-9, I-8)
rcmod(argument-7, believe-9)
cop(false-11, is-10)
root(ROOT-0, false-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB hope)
          (SBAR (IN that)
            (S
              (NP (NNS people))
              (VP (MD would)
                (VP (VB be)
                  (ADJP (RBR more) (JJ likely)
                    (S
                      (VP (TO to)
                        (VP (VB see)
                          (NP
                            (NP (DT a) (NN doctor))
                            (PP (IN for)
                              (NP (JJ preventative) (NN care)))))))))))))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB believe)
          (SBAR
            (S
              (NP (DT this))
              (VP (MD will)
                (VP (VB happen))))))))
    (. .)))

nsubj(hope-3, I-1)
aux(hope-3, would-2)
root(ROOT-0, hope-3)
complm(likely-9, that-4)
nsubj(likely-9, people-5)
aux(likely-9, would-6)
cop(likely-9, be-7)
advmod(likely-9, more-8)
ccomp(hope-3, likely-9)
aux(see-11, to-10)
xcomp(likely-9, see-11)
det(doctor-13, a-12)
dobj(see-11, doctor-13)
amod(care-16, preventative-15)
prep_for(doctor-13, care-16)
nsubj(believe-21, I-18)
aux(believe-21, do-19)
neg(believe-21, not-20)
conj_but(hope-3, believe-21)
nsubj(happen-24, this-22)
aux(happen-24, will-23)
ccomp(believe-21, happen-24)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (DT a) (NN person))
        (VP (VBZ knows)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBP have)
                (NP (NN health) (NN coverage))
                (NP (RB then))))))))
    (WHNP (WP what))
    (SQ
      (VP (VBZ encourages)
        (S
          (NP (PRP them))
          (VP (TO to)
            (VP (VB take)
              (NP
                (NP (NN care))
                (PP (IN of)
                  (NP (PRP themselves)))))))))
    (. ?)))

mark(knows-4, If-1)
det(person-3, a-2)
nsubj(knows-4, person-3)
dep(encourages-12, knows-4)
complm(have-7, that-5)
nsubj(have-7, they-6)
ccomp(knows-4, have-7)
nn(coverage-9, health-8)
iobj(have-7, coverage-9)
dobj(have-7, then-10)
nsubj(encourages-12, what-11)
root(ROOT-0, encourages-12)
nsubj(take-15, them-13)
aux(take-15, to-14)
xcomp(encourages-12, take-15)
dobj(take-15, care-16)
prep_of(care-16, themselves-18)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD wo) (RB n't)
        (VP (VB matter)
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (VP (VB skip)
                (NP (DT an) (NN appointment))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP 're)
      (VP (VBN covered)
        (SBAR (IN if)
          (S
            (NP (NN something) (JJ bad))
            (VP (VBZ happens))))))
    (. .)))

nsubj(matter-4, It-1)
aux(matter-4, wo-2)
neg(matter-4, n't-3)
ccomp(covered-13, matter-4)
mark(skip-7, if-5)
nsubj(skip-7, they-6)
advcl(matter-4, skip-7)
det(appointment-9, an-8)
dobj(skip-7, appointment-9)
nsubjpass(covered-13, they-11)
auxpass(covered-13, 're-12)
root(ROOT-0, covered-13)
mark(happens-17, if-14)
nsubj(happens-17, something-15)
amod(something-15, bad-16)
advcl(covered-13, happens-17)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (JJ other) (NN hand)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT a) (NN person))
        (VP (VBZ knows)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP
                (VP (VBP are) (RB not)
                  (VP (VBN covered)))
                (CC and)
                (VP (MD will)
                  (VP (VB have)
                    (S
                      (VP (TO to)
                        (VP (VB pay)
                          (NP
                            (NP (JJ ridiculous) (NNS amounts))
                            (PP (IN of)
                              (NP (NN money)))))))
                    (SBAR (IN if)
                      (S
                        (NP (NN something) (JJ bad))
                        (VP (VBZ happens))))))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD will)
      (VP (VB try)
        (S
          (VP (TO to)
            (VP (VB prevent)
              (NP (DT that))
              (PP (IN from)
                (S
                  (VP (VBG happening)))))))))
    (. .)))

det(hand-4, the-2)
amod(hand-4, other-3)
prep_on(try-31, hand-4)
mark(knows-9, if-6)
det(person-8, a-7)
nsubj(knows-9, person-8)
advcl(try-31, knows-9)
complm(covered-14, that-10)
nsubjpass(covered-14, they-11)
nsubj(have-17, they-11)
xsubj(pay-19, they-11)
auxpass(covered-14, are-12)
neg(covered-14, not-13)
ccomp(knows-9, covered-14)
aux(have-17, will-16)
ccomp(knows-9, have-17)
conj_and(covered-14, have-17)
aux(pay-19, to-18)
xcomp(have-17, pay-19)
amod(amounts-21, ridiculous-20)
dobj(pay-19, amounts-21)
prep_of(amounts-21, money-23)
mark(happens-27, if-24)
nsubj(happens-27, something-25)
amod(something-25, bad-26)
advcl(have-17, happens-27)
nsubj(try-31, they-29)
xsubj(prevent-33, they-29)
aux(try-31, will-30)
root(ROOT-0, try-31)
aux(prevent-33, to-32)
xcomp(try-31, prevent-33)
dobj(prevent-33, that-34)
prepc_from(prevent-33, happening-36)

(ROOT
  (S
    (ADVP (RB Overall))
    (, ,)
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP
            (NP (DT a) (JJR better) (NN solution))
            (PP (TO to)
              (NP (DT this) (NN problem))))
          (VP (MD would)
            (VP (VB be)
              (S
                (VP (TO to)
                  (VP (VB increase)
                    (NP (NN competition))
                    (PP (IN by)
                      (S
                        (VP (VBG eliminating)
                          (NP (NN tax) (NNS benefits))
                          (PP (IN for)
                            (NP
                              (NP (JJ bulk) (NN purchase))
                              (PP (IN of)
                                (NP (NN health) (NN coverage))))))))))))))))
    (. .)))

advmod(believe-4, Overall-1)
nsubj(believe-4, I-3)
root(ROOT-0, believe-4)
det(solution-7, a-5)
amod(solution-7, better-6)
nsubj(be-12, solution-7)
det(problem-10, this-9)
prep_to(solution-7, problem-10)
aux(be-12, would-11)
ccomp(believe-4, be-12)
aux(increase-14, to-13)
xcomp(be-12, increase-14)
dobj(increase-14, competition-15)
prepc_by(increase-14, eliminating-17)
nn(benefits-19, tax-18)
dobj(eliminating-17, benefits-19)
amod(purchase-22, bulk-21)
prep_for(eliminating-17, purchase-22)
nn(coverage-25, health-24)
prep_of(purchase-22, coverage-25)

(ROOT
  (S
    (S
      (VP (VBG Reducing)
        (NP
          (NP (DT the) (NN employer))
          (VP (VBN based)
            (NP (NN system))))))
    (VP (MD will)
      (VP (VB increase)
        (NP
          (NP (DT the) (NN number))
          (PP (IN of)
            (NP (NNS buyers))))
        (SBAR (IN because)
          (S
            (NP (NNS people))
            (VP (MD will)
              (VP (VB buy)
                (UCP
                  (ADVP (RB individually))
                  (CC or)
                  (PP (IN for)
                    (NP (PRP$ their) (NNS families))))))))))
    (. .)))

csubj(increase-7, Reducing-1)
det(employer-3, the-2)
dobj(Reducing-1, employer-3)
partmod(employer-3, based-4)
dobj(based-4, system-5)
aux(increase-7, will-6)
root(ROOT-0, increase-7)
det(number-9, the-8)
dobj(increase-7, number-9)
prep_of(number-9, buyers-11)
mark(buy-15, because-12)
nsubj(buy-15, people-13)
aux(buy-15, will-14)
advcl(increase-7, buy-15)
dep(buy-15, individually-16)
dep(buy-15, for-18)
conj_or(individually-16, for-18)
poss(families-20, their-19)
pobj(for-18, families-20)

(ROOT
  (S
    (NP
      (NP (VBG Increasing) (NN competition))
      (PP (IN between)
        (NP (NN insurance) (NNS companies))))
    (VP (MD will)
      (VP (VB force)
        (S
          (NP (PRP them))
          (VP (TO to)
            (VP
              (VP (VB reduce)
                (NP (NN spending)))
              (CC and)
              (VP (VB maximize)
                (NP (NN customer) (NN base))))))))
    (. .)))

amod(competition-2, Increasing-1)
nsubj(force-7, competition-2)
nn(companies-5, insurance-4)
prep_between(competition-2, companies-5)
aux(force-7, will-6)
root(ROOT-0, force-7)
nsubj(reduce-10, them-8)
nsubj(maximize-13, them-8)
aux(reduce-10, to-9)
xcomp(force-7, reduce-10)
dobj(reduce-10, spending-11)
xcomp(force-7, maximize-13)
conj_and(reduce-10, maximize-13)
nn(base-15, customer-14)
dobj(maximize-13, base-15)

(ROOT
  (S
    (NP (NNP AKA))
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP 's))
          (VP (VBP bring)
            (PRT (RP back))
            (NP (DT a) (JJ free) (NN market))
            (SBAR (IN because)
              (S
                (NP (NN capitalism))
                (VP (VBZ works)
                  (ADVP (RBS best))
                  (PP (IN while)
                    (S
                      (VP (VBG retaining)
                        (NP (JJ individual) (NNS rights)
                          (CC and)
                          (NNS freedoms))))))))))))
    (. .)))

nsubj(let-2, AKA-1)
root(ROOT-0, let-2)
nsubj(bring-4, 's-3)
ccomp(let-2, bring-4)
prt(bring-4, back-5)
det(market-8, a-6)
amod(market-8, free-7)
dobj(bring-4, market-8)
mark(works-11, because-9)
nsubj(works-11, capitalism-10)
advcl(bring-4, works-11)
advmod(works-11, best-12)
prepc_while(works-11, retaining-14)
amod(rights-16, individual-15)
dobj(retaining-14, rights-16)
dobj(retaining-14, freedoms-18)
conj_and(rights-16, freedoms-18)

(ROOT
  (S
    (NP (NNP AKA) (NN capitalism))
    (VP (VBZ benefits)
      (NP
        (NP (DT the) (NN majority))
        (PP (IN of)
          (NP
            (NP (NNS people))
            (PRN (-LRB- -LRB-)
              (CC and)
              (S
                (NP (DT that))
                (VP (VBZ 's)
                  (NP
                    (NP (DT the) (JJS best))
                    (SBAR
                      (S
                        (NP (PRP we))
                        (VP (MD can)
                          (VP (VB hope)
                            (PP (IN for)))))))))
              (-RRB- -RRB-))))))
    (. .)))

nn(capitalism-2, AKA-1)
nsubj(benefits-3, capitalism-2)
root(ROOT-0, benefits-3)
det(majority-5, the-4)
dobj(benefits-3, majority-5)
prep_of(majority-5, people-7)
dep(best-13, and-9)
nsubj(best-13, that-10)
cop(best-13, 's-11)
det(best-13, the-12)
dep(people-7, best-13)
prep_for(hope-16, best-13)
nsubj(hope-16, we-14)
aux(hope-16, can-15)
rcmod(best-13, hope-16)

(ROOT
  (S
    (NP (NNP UHC))
    (VP (MD would) (RB not)
      (VP (VB benefit)
        (NP
          (NP (DT the) (NN majority))
          (PP (IN of)
            (NP (NNS people))))))
    (. .)))

nsubj(benefit-4, UHC-1)
aux(benefit-4, would-2)
neg(benefit-4, not-3)
root(ROOT-0, benefit-4)
det(majority-6, the-5)
dobj(benefit-4, majority-6)
prep_of(majority-6, people-8)

(ROOT
  (S
    (NP (JJS Most) (NNPS Americans))
    (VP (VBP have)
      (NP (NN health) (NN insurance)))
    (. .)))

amod(Americans-2, Most-1)
nsubj(have-3, Americans-2)
root(ROOT-0, have-3)
nn(insurance-5, health-4)
dobj(have-3, insurance-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP
        (NP (DT a) (RB little))
        (VBN confused)
        (PP (IN with)
          (NP
            (NP (PRP$ your) (NN point))
            (PP (IN on)
              (NP (DT the) (JJ single) (NN buyer)
                (CC and)
                (NN competition)))))))
    (. .)))

nsubjpass(confused-5, I-1)
auxpass(confused-5, am-2)
det(little-4, a-3)
dep(confused-5, little-4)
root(ROOT-0, confused-5)
poss(point-8, your-7)
prep_with(confused-5, point-8)
det(buyer-12, the-10)
amod(buyer-12, single-11)
prep_on(point-8, buyer-12)
prep_on(point-8, competition-14)
conj_and(buyer-12, competition-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG referring)
            (PP (TO to)
              (NP (NN insurance) (NNS companies)))
            (PP (IN as)
              (NP
                (NP (DT the) (NNS sellers))
                (PP (IN than)
                  (NP (PRP you)))))))))
    (VP (MD may) (RB not)
      (VP (VB understand)
        (NP (DT the) (NNP UHC) (NN bill))))
    (. .)))

mark(referring-4, If-1)
nsubj(referring-4, you-2)
aux(referring-4, are-3)
csubj(understand-15, referring-4)
nn(companies-7, insurance-6)
prep_to(referring-4, companies-7)
det(sellers-10, the-9)
prep_as(referring-4, sellers-10)
prep_than(sellers-10, you-12)
aux(understand-15, may-13)
neg(understand-15, not-14)
root(ROOT-0, understand-15)
det(bill-18, the-16)
nn(bill-18, UHC-17)
dobj(understand-15, bill-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG referring)
            (PP (TO to)
              (NP
                (NP (NN health) (NN equipment) (NNS providers))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP I))
                    (VP (VBP assume)
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBP are)))))))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBN mistaken)
        (SBAR (IN that)
          (S
            (NP (DT this))
            (VP (MD would)
              (VP (VB create)
                (NP (JJR more) (NN competition))))))))
    (. .)))

mark(referring-4, If-1)
nsubj(referring-4, you-2)
aux(referring-4, are-3)
advcl(mistaken-19, referring-4)
nn(providers-8, health-6)
nn(providers-8, equipment-7)
prep_to(referring-4, providers-8)
dobj(are-14, providers-8)
rel(assume-12, which-10)
nsubj(assume-12, I-11)
rcmod(providers-8, assume-12)
nsubj(are-14, you-13)
ccomp(assume-12, are-14)
advmod(mistaken-19, then-16)
nsubjpass(mistaken-19, you-17)
auxpass(mistaken-19, are-18)
root(ROOT-0, mistaken-19)
complm(create-23, that-20)
nsubj(create-23, this-21)
aux(create-23, would-22)
ccomp(mistaken-19, create-23)
amod(competition-25, more-24)
dobj(create-23, competition-25)

(ROOT
  (S
    (NP (NN Competition))
    (VP (VBZ increases)
      (PP (IN with)
        (NP
          (NP (JJR more) (NNS buyers))
          (CC and)
          (NP (JJR more) (NNS sellers)))))
    (. .)))

nsubj(increases-2, Competition-1)
root(ROOT-0, increases-2)
amod(buyers-5, more-4)
prep_with(increases-2, buyers-5)
amod(sellers-8, more-7)
prep_with(increases-2, sellers-8)
conj_and(buyers-5, sellers-8)

(ROOT
  (NP
    (NP (DT The)
      (ADJP (RBR more) (JJ diverse)))
    (NP
      (NP (DT the) (NN market))
      (, ,)
      (NP (DT the) (JJR more) (NN competition)))
    (. .)))

det(diverse-3, The-1)
advmod(diverse-3, more-2)
root(ROOT-0, diverse-3)
det(market-5, the-4)
dep(diverse-3, market-5)
det(competition-9, the-7)
amod(competition-9, more-8)
appos(market-5, competition-9)

(ROOT
  (S
    (S
      (NP (NN Competition))
      (VP (VBZ is)
        (ADVP (RB already))
        (NP
          (NP (DT a) (JJ big) (NN part))
          (PP (IN of)
            (NP (NN health) (NN equipment) (NNS providers)))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT that)))
            (S
              (NP (DT a) (NN doctor))
              (VP (MD can)
                (VP (VB choose)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (TO to)
                        (VP (VB prescribe)
                          (PRN (-LRB- -LRB-)
                            (S
                              (ADVP (RB usually))
                              (NP (PRP they))
                              (VP (VBP recommend)
                                (NP
                                  (NP (NNS generics))
                                  (PP (RB because) (IN of)
                                    (NP (NN price))))))
                            (-RRB- -RRB-)))))))))))))
    (, ,)
    (NP (DT a) (JJ physical) (NN therapist))
    (VP (MD can)
      (VP (VB choose)
        (NP
          (SBAR
            (WHNP (WP what) (JJ wheelchair) (NN brand))
            (S
              (VP (TO to)
                (VP (VB prescribe)))))
          (, ,)
          (NP (FW etc.)))))
    (. .)))

nsubj(part-6, Competition-1)
cop(part-6, is-2)
advmod(part-6, already-3)
det(part-6, a-4)
amod(part-6, big-5)
ccomp(choose-34, part-6)
nn(providers-10, health-8)
nn(providers-10, equipment-9)
prep_of(part-6, providers-10)
rel(choose-16, that-12)
det(doctor-14, a-13)
nsubj(choose-16, doctor-14)
aux(choose-16, can-15)
rcmod(part-6, choose-16)
nsubj(prescribe-19, what-17)
aux(prescribe-19, to-18)
ccomp(choose-16, prescribe-19)
xcomp(choose-16, prescribe-19)
advmod(recommend-23, usually-21)
nsubj(recommend-23, they-22)
parataxis(prescribe-19, recommend-23)
dobj(recommend-23, generics-24)
prep_because_of(generics-24, price-27)
det(therapist-32, a-30)
amod(therapist-32, physical-31)
nsubj(choose-34, therapist-32)
aux(choose-34, can-33)
root(ROOT-0, choose-34)
det(brand-37, what-35)
amod(brand-37, wheelchair-36)
nsubj(prescribe-39, brand-37)
aux(prescribe-39, to-38)
dep(etc.-41, prescribe-39)
dobj(choose-34, etc.-41)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD will)
      (NP
        (ADJP (RBR more) (JJ qualified))
        (NN healthcare) (NNS workers))
      (VP (VB be)
        (VP (VBN selected))))
    (. ?)))

advmod(selected-8, Why-1)
aux(selected-8, will-2)
advmod(qualified-4, more-3)
amod(workers-6, qualified-4)
nn(workers-6, healthcare-5)
nsubjpass(selected-8, workers-6)
auxpass(selected-8, be-7)
root(ROOT-0, selected-8)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD will)
        (VP (VB be)
          (VP (VBN paid)
            (S
              (ADJP (JJR less)))))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB assume)
          (SBAR (IN that)
            (S
              (NP
                (ADJP (RBR less) (JJ qualified))
                (NNS people))
              (VP (MD would)
                (VP (VB apply)
                  (PP (IN for)
                    (NP (DT the) (NNS jobs))))))))))
    (. .)))

nsubjpass(paid-4, They-1)
aux(paid-4, will-2)
auxpass(paid-4, be-3)
root(ROOT-0, paid-4)
acomp(paid-4, less-5)
dep(paid-4, so-7)
nsubj(assume-10, I-8)
aux(assume-10, would-9)
ccomp(paid-4, assume-10)
complm(apply-16, that-11)
advmod(qualified-13, less-12)
amod(people-14, qualified-13)
nsubj(apply-16, people-14)
aux(apply-16, would-15)
ccomp(assume-10, apply-16)
det(jobs-19, the-18)
prep_for(apply-16, jobs-19)

(ROOT
  (S
    (NP (DT The)
      (ADJP (RBR more) (VBN qualified))
      (NNS people))
    (VP (MD will)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB get)
              (VP (VBN paid)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP they))
                    (VP (VBP 're)
                      (ADJP (JJ worth)))))))))))
    (. .)))

det(people-4, The-1)
advmod(qualified-3, more-2)
amod(people-4, qualified-3)
nsubj(want-6, people-4)
xsubj(paid-9, people-4)
aux(want-6, will-5)
root(ROOT-0, want-6)
aux(paid-9, to-7)
auxpass(paid-9, get-8)
xcomp(want-6, paid-9)
dobj(worth-13, what-10)
nsubj(worth-13, they-11)
cop(worth-13, 're-12)
ccomp(paid-9, worth-13)

