(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (NP (PRP$ my) (NN obligation)
        (S
          (VP (TO to)
            (VP (VB pay)
              (PP (IN for)
                (NP
                  (NP (DT the) (NN healthcare))
                  (PP (IN of)
                    (NP (NNS others))))))))))
    (. .)))

nsubj(obligation-5, It-1)
cop(obligation-5, is-2)
neg(obligation-5, not-3)
poss(obligation-5, my-4)
root(ROOT-0, obligation-5)
aux(pay-7, to-6)
infmod(obligation-5, pay-7)
det(healthcare-10, the-9)
prep_for(pay-7, healthcare-10)
prep_of(healthcare-10, others-12)

(ROOT
  (S
    (S
      (PP (IN As)
        (NP (DT a) (NNP Christian)))
      (, ,)
      (NP (PRP I))
      (VP
        (VP (VBP am)
          (NP
            (NP (DT all))
            (PP (IN for)
              (NP (NN charity)))))
        (CC and)
        (VP (VBP think)
          (SBAR
            (S
              (NP (DT the) (NN church))
              (VP (VBZ needs)
                (S
                  (VP (TO to)
                    (VP (VB step)
                      (PRT (RP up))
                      (PP (TO to)
                        (NP
                          (NP (DT that))
                          (ADJP (RB far) (JJR better))))
                      (SBAR (IN than)
                        (S
                          (NP (PRP it))
                          (VP (VBZ has)
                            (VP (VBN done)
                              (ADVP (RB so)))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (JJ forced) (NN payment))
        (PP (IN on)
          (NP (PRP$ my) (NN part))))
      (VP (VBZ removes)
        (NP (DT that) (NN possibility))))
    (. .)))

det(Christian-3, a-2)
prep_as(all-7, Christian-3)
nsubj(all-7, I-5)
nsubj(think-11, I-5)
cop(all-7, am-6)
root(ROOT-0, all-7)
prep_for(all-7, charity-9)
conj_and(all-7, think-11)
det(church-13, the-12)
nsubj(needs-14, church-13)
xsubj(step-16, church-13)
ccomp(think-11, needs-14)
aux(step-16, to-15)
xcomp(needs-14, step-16)
prt(step-16, up-17)
prep_to(step-16, that-19)
advmod(better-21, far-20)
amod(that-19, better-21)
mark(done-25, than-22)
nsubj(done-25, it-23)
aux(done-25, has-24)
advcl(step-16, done-25)
advmod(done-25, so-26)
amod(payment-30, forced-29)
nsubj(removes-34, payment-30)
poss(part-33, my-32)
prep_on(payment-30, part-33)
conj_but(all-7, removes-34)
det(possibility-36, that-35)
dobj(removes-34, possibility-36)

(ROOT
  (S
    (S
      (S (RB Not)
        (VP (TO to)
          (VP (VB mention))))
      (, ,)
      (NP (NN government) (NNS programs))
      (VP (VBP are)
        (ADVP (RB always))
        (NP (DT a) (NN mess))))
    (CC and)
    (S
      (NP (PRP$ our) (NN constitution))
      (VP (VBZ is)
        (VP (VBN designed)
          (S
            (VP (TO to)
              (VP (VB limit)
                (NP (JJ governmental) (NN power))
                (PP (IN for)
                  (NP (DT that) (NN reason)))))))))
    (. .)))

neg(mention-3, Not-1)
aux(mention-3, to-2)
purpcl(mess-10, mention-3)
nn(programs-6, government-5)
nsubj(mess-10, programs-6)
cop(mess-10, are-7)
advmod(mess-10, always-8)
det(mess-10, a-9)
root(ROOT-0, mess-10)
poss(constitution-13, our-12)
nsubjpass(designed-15, constitution-13)
xsubj(limit-17, constitution-13)
auxpass(designed-15, is-14)
conj_and(mess-10, designed-15)
aux(limit-17, to-16)
xcomp(designed-15, limit-17)
amod(power-19, governmental-18)
dobj(limit-17, power-19)
det(reason-22, that-21)
prep_for(limit-17, reason-22)

