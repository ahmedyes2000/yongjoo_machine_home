(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (NN time)
        (PP (IN for)
          (NP
            (NP (JJ Universal) (NN health) (NN care))
            (PP (IN for)
              (NP (JJ several) (NNS reasons))))))
      (NP (CD .1)))
    (. .)))

nsubj(.1-11, It-1)
cop(.1-11, is-2)
advmod(.1-11, time-3)
amod(care-7, Universal-5)
nn(care-7, health-6)
prep_for(time-3, care-7)
amod(reasons-10, several-9)
prep_for(care-7, reasons-10)
root(ROOT-0, .1-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (VP (VB grow)
        (NP (DT the) (NN economy))
        (, ,)
        (PP (IN by)
          (S
            (VP (VBG letting)
              (S
                (NP (NNS consumers)
                  (CC and)
                  (NN business))
                (VP (VB keep)
                  (NP
                    (NP (JJR more))
                    (PP (IN of)
                      (NP (PRP$ their) (NN money)))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ goes)
                          (S
                            (VP (TO to)
                              (VP (VB pay)
                                (NP
                                  (NP (NN health) (NN care) (NNS premiums))
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (VP (VBZ amounts)
                                        (PP (TO to)
                                          (NP (DT a) (JJ hidden) (NN tax) (NN .2)))))))))))))))))))))
    (. .)))

nsubj(grow-3, It-1)
aux(grow-3, will-2)
root(ROOT-0, grow-3)
det(economy-5, the-4)
dobj(grow-3, economy-5)
prepc_by(grow-3, letting-8)
nsubj(keep-12, consumers-9)
conj_and(consumers-9, business-11)
nsubj(keep-12, business-11)
ccomp(letting-8, keep-12)
dobj(keep-12, more-13)
nsubj(goes-18, more-13)
poss(money-16, their-15)
prep_of(more-13, money-16)
rcmod(more-13, goes-18)
aux(pay-20, to-19)
xcomp(goes-18, pay-20)
nn(premiums-23, health-21)
nn(premiums-23, care-22)
dobj(pay-20, premiums-23)
nsubj(amounts-25, premiums-23)
rcmod(premiums-23, amounts-25)
det(.2-30, a-27)
amod(.2-30, hidden-28)
nn(.2-30, tax-29)
prep_to(amounts-25, .2-30)

(ROOT
  (S (CC And)
    (NP (NNP Freedom))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT this) (NN country))
          (VP (VBZ is)
            (NP
              (NP (DT all))
              (PP (IN about)
                (NP (NN baby))))))))
    (. !)))

cc(is-3, And-1)
nsubj(is-3, Freedom-2)
root(ROOT-0, is-3)
dobj(all-8, what-4)
det(country-6, this-5)
nsubj(all-8, country-6)
cop(all-8, is-7)
ccomp(is-3, all-8)
prep_about(all-8, baby-10)

(ROOT
  (S
    (NP (NNPS Americans))
    (VP (MD should) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN forced)
                (S
                  (VP (TO to)
                    (VP (VB lose)
                      (NP
                        (NP (NN everything))
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (VBD worked)
                              (NP (PRP$ their) (JJ entire) (NN life))
                              (PP (IN for)
                                (ADVP (RB just)))
                              (SBAR (IN because)
                                (S
                                  (NP (PRP they))
                                  (VP
                                    (VP (VBD got)
                                      (S
                                        (ADJP (JJ sick))))
                                    (, ,)
                                    (CC and)
                                    (VP (MD can) (RB not)
                                      (VP (VB afford)
                                        (S
                                          (VP (TO to)
                                            (VP (VB pay)
                                              (NP (PRP$ their) (NN hospital) (NN bill))
                                              (NP (CD .3)))))))))))))))))))))))
    (. .)))

nsubj(have-4, Americans-1)
xsubj(forced-7, Americans-1)
aux(have-4, should-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
aux(forced-7, to-5)
auxpass(forced-7, be-6)
xcomp(have-4, forced-7)
aux(lose-9, to-8)
xcomp(forced-7, lose-9)
dobj(lose-9, everything-10)
nsubj(worked-12, they-11)
rcmod(everything-10, worked-12)
poss(life-15, their-13)
amod(life-15, entire-14)
dobj(worked-12, life-15)
prep(worked-12, for-16)
pcomp(for-16, just-17)
mark(got-20, because-18)
nsubj(got-20, they-19)
nsubj(afford-26, they-19)
advcl(worked-12, got-20)
acomp(got-20, sick-21)
aux(afford-26, can-24)
neg(afford-26, not-25)
advcl(worked-12, afford-26)
conj_and(got-20, afford-26)
aux(pay-28, to-27)
xcomp(afford-26, pay-28)
poss(bill-31, their-29)
nn(bill-31, hospital-30)
dep(pay-28, bill-31)
dobj(pay-28, .3-32)

(ROOT
  (S
    (NP (DT Every) (JJ other) (JJ industrialized) (NN nation))
    (VP (VBZ has)
      (NP
        (NP (PRP it))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ puts)
              (NP (PRP$ our) (NN business))
              (PP (IN at)
                (NP (DT a) (NN disadvantage) (CD .4))))))))
    (. .)))

det(nation-4, Every-1)
amod(nation-4, other-2)
amod(nation-4, industrialized-3)
nsubj(has-5, nation-4)
root(ROOT-0, has-5)
dobj(has-5, it-6)
nsubj(puts-9, it-6)
rcmod(it-6, puts-9)
poss(business-11, our-10)
dobj(puts-9, business-11)
det(disadvantage-14, a-13)
prep_at(puts-9, disadvantage-14)
num(disadvantage-14, .4-15)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ current) (NN system)))
    (, ,)
    (NP
      (NP (DT those))
      (PP (IN of)
        (NP (PRP us)))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP have)
            (NP (NN health))))))
    (VP (VBP care)
      (NP (NN insurance) (NN end))
      (PP (IN up)
        (S
          (VP (VBG paying)
            (PP (IN for)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP do) (RB n't)
                      (VP
                        (PP (IN because)
                          (NP (NNS hospitals)))
                        (VB pass)
                        (NP (DT the) (NN cost))
                        (PP (IN onto)
                          (NP
                            (NP (DT the) (NN insurance) (NNS companies))
                            (PP (IN in)
                              (NP (JJR higher) (NNS costs))))))))))))))
      (S
        (VP (TO to)
          (VP (VB recover)
            (PP (IN for)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP do) (RB n't)
                      (VP (VB pay)))))))))))
    (. .)))

det(system-4, the-2)
amod(system-4, current-3)
prep_in(care-12, system-4)
nsubj(have-10, those-6)
nsubj(care-12, those-6)
xsubj(recover-35, those-6)
prep_of(those-6, us-8)
rcmod(those-6, have-10)
dobj(have-10, health-11)
root(ROOT-0, care-12)
nn(end-14, insurance-13)
dobj(care-12, end-14)
prepc_up(care-12, paying-16)
prep_for(paying-16, those-18)
nsubj(pass-24, those-18)
aux(pass-24, do-20)
neg(pass-24, n't-21)
prep_because(pass-24, hospitals-23)
rcmod(those-18, pass-24)
det(cost-26, the-25)
dobj(pass-24, cost-26)
det(companies-30, the-28)
nn(companies-30, insurance-29)
prep_onto(pass-24, companies-30)
amod(costs-33, higher-32)
prep_in(companies-30, costs-33)
aux(recover-35, to-34)
xcomp(care-12, recover-35)
prep_for(recover-35, those-37)
nsubj(pay-41, those-37)
aux(pay-41, do-39)
neg(pay-41, n't-40)
rcmod(those-37, pay-41)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB already))
      (NP (NN socialism) (CD .5)))
    (. .)))

dep(socialism-5, So-1)
nsubj(socialism-5, it-2)
cop(socialism-5, is-3)
advmod(socialism-5, already-4)
root(ROOT-0, socialism-5)
num(socialism-5, .5-6)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP spend)
        (NP
          (NP
            (QP (JJR more) (IN than)
              (NP (DT any) (JJ other) (NN country))))
          (PP (IN in)
            (NP
              (NP (DT the) (NN world))
              (PP (IN on)
                (NP (NN health) (NN care))))))))
    (CC and)
    (S
      (S
        (ADVP (RB yet))
        (NP (PRP we))
        (VP (VBP have)
          (NP
            (NP
              (QP (CD 49) (CD million))
              (NNS Americans))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP are) (RB n't)
                  (VP (VBN covered))))))))
      (CC and)
      (S
        (NP (PRP we))
        (VP (VBP rank)
          (NP
            (NP (JJ 33rd))
            (PP (IN in)
              (NP
                (NP (DT the) (NN world))
                (PP (IN in)
                  (NP (NN care)))))))))
    (. .)))

nsubj(spend-2, We-1)
root(ROOT-0, spend-2)
quantmod(than-4, more-3)
dobj(spend-2, than-4)
det(country-7, any-5)
amod(country-7, other-6)
dep(than-4, country-7)
det(world-10, the-9)
prep_in(than-4, world-10)
nn(care-13, health-12)
prep_on(world-10, care-13)
advmod(have-17, yet-15)
nsubj(have-17, we-16)
conj_and(spend-2, have-17)
number(million-19, 49-18)
num(Americans-20, million-19)
dobj(have-17, Americans-20)
nsubjpass(covered-24, Americans-20)
auxpass(covered-24, are-22)
neg(covered-24, n't-23)
rcmod(Americans-20, covered-24)
nsubj(rank-27, we-26)
conj_and(spend-2, rank-27)
conj_and(have-17, rank-27)
dobj(rank-27, 33rd-28)
det(world-31, the-30)
prep_in(33rd-28, world-31)
prep_in(world-31, care-33)

(ROOT
  (S
    (NP (NNP France))
    (VP (VBZ spends)
      (NP
        (NP
          (QP (RB about) (PDT half)))
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP we))
              (VP
                (VP (VBP do))
                (CC and)
                (VP (VBP are)
                  (VP (VBN ranked)
                    (NP (CD 1st) (CD .6))))))))))
    (. .)))

nsubj(spends-2, France-1)
root(ROOT-0, spends-2)
quantmod(half-4, about-3)
dobj(spends-2, half-4)
dobj(do-8, what-6)
nsubj(do-8, we-7)
nsubjpass(ranked-11, we-7)
prepc_of(half-4, do-8)
auxpass(ranked-11, are-10)
prepc_of(half-4, ranked-11)
conj_and(do-8, ranked-11)
num(.6-13, 1st-12)
dobj(ranked-11, .6-13)

(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (VP (VBN done)
            (ADVP (RB right))))))
    (NP (PRP it))
    (VP (MD will)
      (VP
        (VP (VB be)
          (NP
            (NP (DT a) (NN system))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ offers)
                  (NP (NNPS Americans))
                  (NP
                    (NP (DT another) (NN choice))
                    (PP (IN in)
                      (NP (NN care)))))))))
        (, ,)
        (CC and)
        (VP (VB provide)
          (NP (NN competition))
          (PP (IN for)
            (NP
              (NP (DT the) (JJ private) (NN sector))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (MD should)
                    (VP (VB drive)
                      (PRT (RP down))
                      (NP (DT the) (NN cost))
                      (ADVP (RB overall)))))))))))
    (. .)))

mark(done-4, if-1)
nsubjpass(done-4, it-2)
auxpass(done-4, is-3)
advcl(system-10, done-4)
advmod(done-4, right-5)
nsubj(system-10, it-6)
nsubj(provide-20, it-6)
aux(system-10, will-7)
cop(system-10, be-8)
det(system-10, a-9)
root(ROOT-0, system-10)
nsubj(offers-12, system-10)
rcmod(system-10, offers-12)
iobj(offers-12, Americans-13)
det(choice-15, another-14)
dobj(offers-12, choice-15)
prep_in(choice-15, care-17)
conj_and(system-10, provide-20)
nsubj(offers-12, provide-20)
dobj(provide-20, competition-21)
det(sector-25, the-23)
amod(sector-25, private-24)
prep_for(provide-20, sector-25)
nsubj(drive-28, sector-25)
aux(drive-28, should-27)
rcmod(sector-25, drive-28)
prt(drive-28, down-29)
det(cost-31, the-30)
dobj(drive-28, cost-31)
advmod(drive-28, overall-32)

(ROOT
  (S
    (NP (JJR More) (NN choice))
    (VP (VBZ equals)
      (NP (JJR more) (NN freedom)))
    (. .)))

amod(choice-2, More-1)
nsubj(equals-3, choice-2)
root(ROOT-0, equals-3)
amod(freedom-5, more-4)
dobj(equals-3, freedom-5)

