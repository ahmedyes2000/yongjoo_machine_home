(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (NP
          (NP (JJ military) (JJ structured) (NN health) (NN care))
          (SBAR
            (S
              (VP (VBZ is)
                (NP (DT an)
                  (ADJP (JJ equitable))
                  (NN comparison))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
amod(care-8, military-5)
amod(care-8, structured-6)
nn(care-8, health-7)
dobj(think-4, care-8)
cop(comparison-12, is-9)
det(comparison-12, an-10)
amod(comparison-12, equitable-11)
rcmod(care-8, comparison-12)

(ROOT
  (S
    (NP (RBS Most) (JJ European) (JJ universal) (NN health) (NN care) (NNS systems))
    (VP
      (VP (VBP allow)
        (NP (JJ public) (NN choice))
        (PP (IN in)
          (NP (NNS institutions)
            (CC and)
            (NNS doctors))))
      (CC and)
      (VP
        (ADVP (RB even))
        (VBP allow)
        (NP
          (NP (VBN privatized) (NNS specialists))
          (PP (IN for)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP want))))))))
      (, ,)
      (CC and)
      (VP (VBP are)
        (ADJP (JJ able)))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB spend)
            (PRT (RP out))
            (PP (IN of)
              (NP (PRP$ their) (JJ own) (NN pocket)))))))
    (. .)))

advmod(systems-6, Most-1)
amod(systems-6, European-2)
amod(systems-6, universal-3)
nn(systems-6, health-4)
nn(systems-6, care-5)
nsubj(allow-7, systems-6)
nsubj(allow-16, systems-6)
nsubj(able-26, systems-6)
nsubj(spend-29, systems-6)
xsubj(spend-29, systems-6)
root(ROOT-0, allow-7)
amod(choice-9, public-8)
dobj(allow-7, choice-9)
prep_in(allow-7, institutions-11)
prep_in(allow-7, doctors-13)
conj_and(institutions-11, doctors-13)
advmod(allow-16, even-15)
conj_and(allow-7, allow-16)
amod(specialists-18, privatized-17)
dobj(allow-16, specialists-18)
prep_for(specialists-18, those-20)
nsubj(want-22, those-20)
rcmod(those-20, want-22)
cop(able-26, are-25)
conj_and(allow-7, able-26)
aux(spend-29, to-28)
conj_and(allow-7, spend-29)
xcomp(allow-7, spend-29)
poss(pocket-34, their-32)
amod(pocket-34, own-33)
prep_out_of(spend-29, pocket-34)

(ROOT
  (S
    (NP (NNP Universal))
    (VP (VBZ does) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB mean)
              (NP (JJ single) (NN option)))))))
    (. .)))

nsubj(have-4, Universal-1)
xsubj(mean-6, Universal-1)
aux(have-4, does-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
aux(mean-6, to-5)
xcomp(have-4, mean-6)
amod(option-8, single-7)
dobj(mean-6, option-8)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (POS 's))
        (VP
          (VP (VB be)
            (ADJP (JJ creative)))
          (CC and)
          (VP
            (VP (VB allow)
              (NP (NN privatization)))
            (, ,)
            (CONJP (CC but)
              (RB not))
            (VP
              (PP (TO to)
                (NP (DT the) (NN point)))
              (SBAR
                (SBAR (IN that)
                  (S
                    (NP (PRP we))
                    (VP (VBP have)
                      (VP (VBN become)))))
                (, ,)
                (CC so)
                (SBAR (IN that)
                  (S
                    (NP (NN health) (NN care))
                    (VP (VBZ is)
                      (ADVP (RB exclusively))
                      (PP (IN for)
                        (NP (DT the) (JJ wealthy))))))))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(creative-4, 's-2)
nsubj(allow-6, 's-2)
cop(creative-4, be-3)
ccomp(Let-1, creative-4)
ccomp(Let-1, allow-6)
conj_and(creative-4, allow-6)
dobj(allow-6, privatization-7)
conj_and(creative-4, to-11)
conj_negcc(allow-6, to-11)
det(point-13, the-12)
pobj(to-11, point-13)
dep(become-17, that-14)
nsubj(become-17, we-15)
aux(become-17, have-16)
ccomp(to-11, become-17)
dep(is-23, that-20)
nn(care-22, health-21)
nsubj(is-23, care-22)
ccomp(to-11, is-23)
conj_so(become-17, is-23)
advmod(is-23, exclusively-24)
det(wealthy-27, the-26)
prep_for(is-23, wealthy-27)

(ROOT
  (S
    (NP
      (NP (DT A) (NN system))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP
            (VP (VBZ leaves)
              (NP (NNS people))
              (PP (IN on)
                (NP (DT the) (NN street))))
            (CONJP (RB rather) (IN than))
            (VP (VBG meeting)
              (NP (PRP$ their) (JJ basic) (JJ human) (NNS needs)))))))
    (VP
      (VP (VBZ is)
        (ADJP (JJ tragic)))
      (CC and)
      (VP (MD should)
        (VP (VB be)
          (VP (VBN condemned)
            (PP (IN for)
              (NP (JJ such) (NN treatment)))))))
    (. .)))

det(system-2, A-1)
nsubj(leaves-4, system-2)
nsubj(meeting-11, system-2)
nsubj(tragic-17, system-2)
nsubjpass(condemned-21, system-2)
rcmod(system-2, leaves-4)
dobj(leaves-4, people-5)
det(street-8, the-7)
prep_on(leaves-4, street-8)
rcmod(system-2, meeting-11)
conj_negcc(leaves-4, meeting-11)
poss(needs-15, their-12)
amod(needs-15, basic-13)
amod(needs-15, human-14)
dobj(meeting-11, needs-15)
cop(tragic-17, is-16)
root(ROOT-0, tragic-17)
aux(condemned-21, should-19)
auxpass(condemned-21, be-20)
conj_and(tragic-17, condemned-21)
amod(treatment-24, such-23)
prep_for(condemned-21, treatment-24)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT a) (NN citizen))
        (VP (VBZ 's)
          (ADVP (RB only))
          (NP
            (NP (`` ``) (NN health) (NN care) ('' ''))
            (SBAR
              (S
                (VP (VBZ is)
                  (NP (NN emergency) (NN aid)))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN care))
        (PP (IN at)
          (NP (DT all)))))
    (. .)))

advmod(care-8, When-1)
det(citizen-3, a-2)
nsubj(care-8, citizen-3)
cop(care-8, 's-4)
advmod(care-8, only-5)
nn(care-8, health-7)
advcl(is-15, care-8)
cop(aid-12, is-10)
nn(aid-12, emergency-11)
rcmod(care-8, aid-12)
expl(is-15, there-14)
root(ROOT-0, is-15)
det(care-17, no-16)
nsubj(is-15, care-17)
prep_at(care-17, all-19)

