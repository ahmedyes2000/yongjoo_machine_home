(ROOT
  (S
    (S
      (VP (VBG Being)
        (PP (IN from)
          (NP (NNP Canada)))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP
        (VP (VB tell)
          (NP (PRP you))
          (ADVP (RB first)))
        (VP (NN hand)
          (NP (DT the) (NNS pros))
          (PRN (-LRB- -LRB-)
            (CC and)
            (VB cons) (-RRB- -RRB-))
          (PP (IN of)
            (NP (NNP Public) (NNP Health) (NNP Care))))))
    (. .)))

partmod(tell-7, Being-1)
prep_from(Being-1, Canada-3)
nsubj(tell-7, I-5)
aux(tell-7, can-6)
root(ROOT-0, tell-7)
dobj(tell-7, you-8)
advmod(tell-7, first-9)
dep(tell-7, hand-10)
det(pros-12, the-11)
dobj(hand-10, pros-12)
dep(hand-10, and-14)
dep(and-14, cons-15)
nn(Care-20, Public-18)
nn(Care-20, Health-19)
prep_of(hand-10, Care-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP
        (VP (VB tell)
          (NP (PRP you))
          (SBAR (IN that)
            (S
              (SBAR (IN because)
                (S
                  (NP (NNP Health) (NNP Care))
                  (VP (VBZ is)
                    (ADJP (JJ free)
                      (PP (IN for)
                        (NP
                          (NP
                            (NP (NN everyone))
                            (PRN (-LRB- -LRB-)
                              (S
                                (NP (DT this))
                                (VP (VBZ is)
                                  (NP
                                    (NP (DT a) (JJ generalization) (, ,) (JJ actual) (NNS costs))
                                    (SBAR
                                      (S
                                        (VP
                                          (VP (VBP vary)
                                            (PP (IN by)
                                              (NP (NN province))))
                                          (PRN (-LRB- -LRB-)
                                            (CC or)
                                            (VB territory) (-RRB- -RRB-))))))))
                              (-RRB- -RRB-)))
                          (, ,)
                          (NP (CD one))))))))
              (, ,)
              (NP (PRP I))
              (VP (VBP break)
                (NP (PRP$ my) (NN arm))))))
        (CC and)
        (VP (VB call)
          (NP (DT an) (NN ambulance))
          (PP (IN without)
            (NP
              (NP (DT a)
                (ADJP (RB very) (JJ strange))
                (NN bill))
              (VP (VBG appearing)
                (ADVP (RB later))))))))
    (. .)))

nsubj(tell-3, I-1)
nsubj(call-37, I-1)
aux(tell-3, can-2)
root(ROOT-0, tell-3)
dobj(tell-3, you-4)
complm(break-33, that-5)
mark(free-10, because-6)
nn(Care-8, Health-7)
nsubj(free-10, Care-8)
cop(free-10, is-9)
advcl(break-33, free-10)
prep_for(free-10, everyone-12)
nsubj(costs-20, this-14)
cop(costs-20, is-15)
det(costs-20, a-16)
amod(costs-20, generalization-17)
amod(costs-20, actual-19)
dep(everyone-12, costs-20)
rcmod(costs-20, vary-21)
prep_by(vary-21, province-23)
dep(vary-21, or-25)
dep(or-25, territory-26)
appos(everyone-12, one-30)
nsubj(break-33, I-32)
ccomp(tell-3, break-33)
poss(arm-35, my-34)
dobj(break-33, arm-35)
conj_and(tell-3, call-37)
det(ambulance-39, an-38)
dobj(call-37, ambulance-39)
det(bill-44, a-41)
advmod(strange-43, very-42)
amod(bill-44, strange-43)
prep_without(call-37, bill-44)
partmod(bill-44, appearing-45)
advmod(appearing-45, later-46)

(ROOT
  (S
    (S
      (ADVP (RB Often))
      (NP (DT the) (NN budget))
      (VP (VBZ does) (RB n't)
        (VP (VB allow)
          (PP (IN for)
            (NP
              (NP (JJ many))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS things))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP are)
                        (VP (VBN required)
                          (PP (IN by)
                            (NP
                              (NP (DT the) (NNP Ministry))
                              (PP (IN of)
                                (NP (NNP Health))))))))))))))))
    (, ,)
    (CC or)
    (S
      (NP
        (NP (DT the) (NNS politicans))
        (VP (VBN charged)
          (PP (IN with)
            (S
              (VP (VBG making)
                (NP (NN decision)))))))
      (VP (VBP do) (RB n't)
        (VP (VB understand)
          (NP (DT the) (NNS pros)
            (CC and)
            (NNS cons)))))
    (. .)))

advmod(allow-6, Often-1)
det(budget-3, the-2)
nsubj(allow-6, budget-3)
aux(allow-6, does-4)
neg(allow-6, n't-5)
root(ROOT-0, allow-6)
prep_for(allow-6, many-8)
det(things-11, the-10)
prep_of(many-8, things-11)
nsubjpass(required-14, things-11)
auxpass(required-14, are-13)
rcmod(things-11, required-14)
det(Ministry-17, the-16)
agent(required-14, Ministry-17)
prep_of(Ministry-17, Health-19)
det(politicans-23, the-22)
nsubj(understand-30, politicans-23)
partmod(politicans-23, charged-24)
prepc_with(charged-24, making-26)
dobj(making-26, decision-27)
aux(understand-30, do-28)
neg(understand-30, n't-29)
conj_or(allow-6, understand-30)
det(pros-32, the-31)
dobj(understand-30, pros-32)
dobj(understand-30, cons-34)
conj_and(pros-32, cons-34)

(ROOT
  (S
    (ADVP (DT All)
      (PP (IN in)
        (NP (DT all))))
    (, ,)
    (NP (PRP I))
    (VP (MD would) (RB not)
      (VP
        (VP (VB change)
          (NP (DT the) (NN system)))
        (, ,)
        (ADVP (RB just))
        (VP (VB amend)
          (NP (PRP it)))))
    (. .)))

advmod(change-8, All-1)
prep_in(All-1, all-3)
nsubj(change-8, I-5)
aux(change-8, would-6)
neg(change-8, not-7)
root(ROOT-0, change-8)
det(system-10, the-9)
dobj(change-8, system-10)
advmod(change-8, just-12)
dep(change-8, amend-13)
dobj(amend-13, it-14)

(ROOT
  (S
    (NP
      (NP (NNP Socialism))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP (DT the) (VBG governing) (NNS philosophies))
              (PP (IN in)
                (NP (JJ Canadian) (NNS politics))))))
        (-RRB- -RRB-)))
    (, ,)
    (VP (VBZ allows)
      (PP (IN for)
        (NP
          (NP (DT the) (NN freedom))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ individual) (NN while))
              (VP (VBG taking)
                (NP
                  (NP (NN care))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NNS needs))
                      (PP (IN of)
                        (NP (DT the) (NN community))))))))))))
    (. .)))

nsubj(allows-13, Socialism-1)
dep(Socialism-1, one-3)
det(philosophies-7, the-5)
amod(philosophies-7, governing-6)
prep_of(one-3, philosophies-7)
amod(politics-10, Canadian-9)
prep_in(philosophies-7, politics-10)
root(ROOT-0, allows-13)
det(freedom-16, the-15)
prep_for(allows-13, freedom-16)
det(while-20, the-18)
amod(while-20, individual-19)
prep_of(freedom-16, while-20)
partmod(while-20, taking-21)
dobj(taking-21, care-22)
det(needs-25, the-24)
prep_of(care-22, needs-25)
det(community-28, the-27)
prep_of(needs-25, community-28)

(ROOT
  (S
    (NP
      (NP
        (NP (DT Any) (NN person))
        (PP (IN in)
          (NP
            (NP (DT the) (NNP Province))
            (PP (IN of)
              (NP (NNP Ontario))))))
      (PRN (-LRB- -LRB-)
        (PP (IN for)
          (NP (NN example)))
        (-RRB- -RRB-)))
    (VP (VBZ has)
      (NP (DT the) (NN right))
      (PP (TO to)
        (NP
          (NP (NN education))
          (, ,)
          (NP
            (NP (NN health) (NN care))
            (, ,)
            (NP (FW etc.) (. .))))))
    (. .)))

det(person-2, Any-1)
nsubj(has-12, person-2)
det(Province-5, the-4)
prep_in(person-2, Province-5)
prep_of(Province-5, Ontario-7)
dep(person-2, for-9)
pobj(for-9, example-10)
root(ROOT-0, has-12)
det(right-14, the-13)
dobj(has-12, right-14)
prep_to(has-12, education-16)
nn(care-19, health-18)
appos(education-16, care-19)
appos(care-19, etc.-21)

(ROOT
  (S (CC And)
    (NP (DT the) (NN province))
    (VP (VBZ provides)
      (NP (DT these) (NNS rights))
      (PP (TO to)
        (NP (DT the) (NN province))))
    (. .)))

cc(provides-4, And-1)
det(province-3, the-2)
nsubj(provides-4, province-3)
root(ROOT-0, provides-4)
det(rights-6, these-5)
dobj(provides-4, rights-6)
det(province-9, the-8)
prep_to(provides-4, province-9)

(ROOT
  (S
    (S
      (NP (NNP Education))
      (VP (VBZ is)
        (ADJP (JJ free)
          (PP (IN until)
            (NP (NNP Grade) (CD 12))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP Health) (NNP Care))
      (VP (VBZ is)
        (ADJP (RB almost) (RB always) (JJ free))))
    (. .)))

nsubj(free-3, Education-1)
cop(free-3, is-2)
root(ROOT-0, free-3)
prep_until(free-3, Grade-5)
num(Grade-5, 12-6)
nn(Care-10, Health-9)
nsubj(free-14, Care-10)
cop(free-14, is-11)
advmod(free-14, almost-12)
advmod(free-14, always-13)
conj_and(free-3, free-14)

(ROOT
  (S
    (NP
      (NP (CD Two))
      (, ,)
      (NP
        (NP (DT the) (JJ financial) (NN burden))
        (PP (IN of)
          (NP (NNP Health) (NNP Insurance)))))
    (VP (VBZ is)
      (VP (VBN taken)
        (PRT (RP off))
        (NP (DT the) (NNS plates))
        (PP (IN on)
          (NP
            (NP (DT the) (JJ individual) (NNS families))
            (, ,)
            (SBAR
              (WHNP (DT many)
                (WHPP (IN of)
                  (WHNP (WP whom))))
              (S
                (VP (MD could) (RB not)
                  (VP (VB afford)
                    (NP (PRP it))))))))))
    (. .)))

nsubjpass(taken-10, Two-1)
det(burden-5, the-3)
amod(burden-5, financial-4)
appos(Two-1, burden-5)
nn(Insurance-8, Health-7)
prep_of(burden-5, Insurance-8)
auxpass(taken-10, is-9)
root(ROOT-0, taken-10)
prt(taken-10, off-11)
det(plates-13, the-12)
dobj(taken-10, plates-13)
det(families-17, the-15)
amod(families-17, individual-16)
prep_on(taken-10, families-17)
pobj(of-20, families-17)
dep(of-20, many-19)
nsubj(afford-24, of-20)
aux(afford-24, could-22)
neg(afford-24, not-23)
rcmod(families-17, afford-24)
dobj(afford-24, it-25)

(ROOT
  (S
    (ADVP (RB Instead))
    (NP (NNP Health) (NNP Care))
    (VP (VBZ is)
      (VP (VBN paid)
        (PP (IN for) (IN through)
          (NP
            (NP (DT the) (NN province))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP (PRP you))
                (VP (VB reside))))))))
    (. .)))

advmod(paid-5, Instead-1)
nn(Care-3, Health-2)
nsubjpass(paid-5, Care-3)
auxpass(paid-5, is-4)
root(ROOT-0, paid-5)
dep(paid-5, for-6)
det(province-9, the-8)
prep_through(paid-5, province-9)
rel(reside-13, which-11)
nsubj(reside-13, you-12)
rcmod(province-9, reside-13)

(ROOT
  (S
    (SINV (MD Should)
      (NP (PRP you))
      (VP (VB want)
        (NP (NNP Private) (NNP Health) (NNP Care))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ available)))
    (. .)))

aux(want-3, Should-1)
nsubj(want-3, you-2)
dep(available-10, want-3)
nn(Care-6, Private-4)
nn(Care-6, Health-5)
dobj(want-3, Care-6)
nsubj(available-10, it-8)
cop(available-10, is-9)
root(ROOT-0, available-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB also))
      (VP (VB tell)
        (NP (PRP you))
        (SBAR (IN that)
          (S
            (NP (RB often) (NNPS Hospitals))
            (VP (VBP are)
              (VP (VBN backed)
                (PRT (RP up))))))))
    (. .)))

nsubj(tell-4, I-1)
aux(tell-4, can-2)
advmod(tell-4, also-3)
root(ROOT-0, tell-4)
dobj(tell-4, you-5)
complm(backed-10, that-6)
advmod(Hospitals-8, often-7)
nsubjpass(backed-10, Hospitals-8)
auxpass(backed-10, are-9)
ccomp(tell-4, backed-10)
prt(backed-10, up-11)

(ROOT
  (S
    (NP (RB Not) (JJ enough) (NN staff))
    (VP (VBZ is)
      (ADVP (RB usually))
      (NP (DT the) (NN case)))
    (. .)))

neg(staff-3, Not-1)
amod(staff-3, enough-2)
nsubj(case-7, staff-3)
cop(case-7, is-4)
advmod(case-7, usually-5)
det(case-7, the-6)
root(ROOT-0, case-7)

(ROOT
  (S
    (VP (VB Lots)
      (PP (IN of)
        (NP
          (NP (DT the) (NN infrastructure))
          (-LRB- -LRB-)
          (NP (NNS buildings))
          (, ,) (FW etc.)))
      (. .))
    (. .)))

root(ROOT-0, Lots-1)
det(infrastructure-4, the-3)
prep_of(Lots-1, infrastructure-4)
nn(infrastructure-4, buildings-6)
dep(infrastructure-4, etc.-8)

(ROOT
  (S
    (NP (NNP -RRB-))
    (VP
      (VP (VBP are)
        (VP (VBG getting)
          (ADJP (JJR older))))
      (, ,)
      (CC and)
      (VP (MD may) (RB not)
        (VP (VB be)
          (VP (VBG being)
            (VP (VBN maintained)
              (ADVP (RB effectively)))))))
    (. .)))

aux(older-4, are-2)
dep(older-4, getting-3)
root(ROOT-0, older-4)
aux(maintained-11, may-7)
neg(maintained-11, not-8)
aux(maintained-11, be-9)
auxpass(maintained-11, being-10)
conj_and(older-4, maintained-11)
advmod(maintained-11, effectively-12)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ typical) (NN effect))
        (PP (IN of)
          (NP
            (NP
              (NP (NN placing))
              (, ,)
              (NP (CD one)))
            (, ,)
            (NP
              (NP (NN health) (NN care) (NNS costs))
              (PP (IN on)
                (NP (DT a) (JJ single) (NN party))))
            (CC and)
            (, ,)
            (NP
              (NP (CD two))
              (, ,)
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS hands))
                  (PP (IN of)
                    (NP (VBN elected) (NNS officials))))))))))
    (. .)))

nsubj(effect-5, This-1)
cop(effect-5, is-2)
det(effect-5, a-3)
amod(effect-5, typical-4)
root(ROOT-0, effect-5)
prep_of(effect-5, placing-7)
appos(placing-7, one-9)
nn(costs-13, health-11)
nn(costs-13, care-12)
prep_of(effect-5, costs-13)
conj_and(placing-7, costs-13)
det(party-17, a-15)
amod(party-17, single-16)
prep_on(costs-13, party-17)
prep_of(effect-5, two-20)
conj_and(placing-7, two-20)
det(hands-24, the-23)
prep_in(two-20, hands-24)
amod(officials-27, elected-26)
prep_of(hands-24, officials-27)

