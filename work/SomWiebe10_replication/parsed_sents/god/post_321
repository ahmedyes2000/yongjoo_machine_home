(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (NP (DT a) (JJ correct) (NN observation)))
    (. .)))

dep(observation-7, Yes-1)
nsubj(observation-7, that-3)
cop(observation-7, is-4)
det(observation-7, a-5)
amod(observation-7, correct-6)
root(ROOT-0, observation-7)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB merely))
      (NP (DT an) (NN observation)))
    (. .)))

cc(observation-6, But-1)
nsubj(observation-6, it-2)
cop(observation-6, is-3)
advmod(observation-6, merely-4)
det(observation-6, an-5)
root(ROOT-0, observation-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN key))
        (PP (TO to)
          (NP (NN decision)))))
    (. .)))

nsubj(key-4, That-1)
cop(key-4, is-2)
det(key-4, the-3)
root(ROOT-0, key-4)
prep_to(key-4, decision-6)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB how))
    (SQ (VBZ does)
      (NP (PRP one))
      (VP (VB acquire)
        (NP (DT that) (NN faith))))
    (. ?)))

cc(acquire-5, But-1)
advmod(acquire-5, how-2)
aux(acquire-5, does-3)
nsubj(acquire-5, one-4)
root(ROOT-0, acquire-5)
det(faith-7, that-6)
dobj(acquire-5, faith-7)

(ROOT
  (S
    (NP (DT The) (JJ only) (NN way)
      (S
        (VP (TO to)
          (VP (VB acquire)
            (NP (NN faith))
            (PP (IN in)
              (NP (DT either) (NN direction)))))))
    (VP (VBZ is) (RB either)
      (S
        (VP (TO to)
          (VP
            (VP (VB close)
              (NP (PRP$ your) (NN mind)))
            (CC and)
            (VP
              (VP (VB convince)
                (NP (PRP yourself)))
              (, ,)
              (CC or)
              (VP (VB open)
                (NP (PRP$ your) (NN mind)))
              (, ,)
              (CC and)
              (VP (VB ask)))))))
    (. .)))

det(way-3, The-1)
amod(way-3, only-2)
nsubj(is-10, way-3)
xsubj(close-13, way-3)
aux(acquire-5, to-4)
infmod(way-3, acquire-5)
dobj(acquire-5, faith-6)
det(direction-9, either-8)
prep_in(acquire-5, direction-9)
root(ROOT-0, is-10)
advmod(is-10, either-11)
aux(close-13, to-12)
xcomp(is-10, close-13)
poss(mind-15, your-14)
dobj(close-13, mind-15)
xcomp(is-10, convince-17)
conj_and(close-13, convince-17)
dobj(convince-17, yourself-18)
conj_and(close-13, open-21)
conj_or(convince-17, open-21)
poss(mind-23, your-22)
dobj(open-21, mind-23)
conj_and(close-13, ask-26)
conj_and(convince-17, ask-26)

(ROOT
  (S (-LRB- -LRB-)
    (NP (DT this))
    (VP (VBZ is)
      (VP (VBG presupposing)
        (NP (DT the) (NN assumption))
        (SBAR (IN that)
          (S
            (SBAR (IN if)
              (S
                (NP (NNP God))
                (VP (VBZ exists))))
            (, ,)
            (NP (PRP he))
            (VP (VBZ is)
              (NP (DT a) (JJ personal) (NN God)))))))
    (. .) (-RRB- -RRB-)))

nsubj(presupposing-4, this-2)
aux(presupposing-4, is-3)
root(ROOT-0, presupposing-4)
det(assumption-6, the-5)
dobj(presupposing-4, assumption-6)
complm(God-16, that-7)
mark(exists-10, if-8)
nsubj(exists-10, God-9)
advcl(God-16, exists-10)
nsubj(God-16, he-12)
cop(God-16, is-13)
det(God-16, a-14)
amod(God-16, personal-15)
ccomp(presupposing-4, God-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP (VBZ is)
          (ADVP (RB there)))))
    (, ,)
    (NP (PRP he))
    (VP (MD will)
      (VP (VB answer)))
    (. .)))

mark(is-3, If-1)
nsubj(is-3, God-2)
advcl(answer-8, is-3)
advmod(is-3, there-4)
nsubj(answer-8, he-6)
aux(answer-8, will-7)
root(ROOT-0, answer-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBZ is) (RB n't))))
    (, ,)
    (NP (PRP he))
    (VP (MD wo) (RB n't))
    (. .)))

mark(is-3, If-1)
nsubj(is-3, he-2)
advcl(wo-7, is-3)
neg(is-3, n't-4)
nsubj(wo-7, he-6)
root(ROOT-0, wo-7)
neg(wo-7, n't-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT the) (JJ only) (NN way)))
    (. .)))

nsubj(way-5, It-1)
cop(way-5, 's-2)
det(way-5, the-3)
amod(way-5, only-4)
root(ROOT-0, way-5)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (NP (NN everyone))
    (VP (VBZ has)
      (NP (NNS dreams)))
    (. .)))

prep_for(has-4, example-2)
nsubj(has-4, everyone-3)
root(ROOT-0, has-4)
dobj(has-4, dreams-5)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NNS dreams))
      (VP (VBP are)
        (ADJP (RB completely) (JJ different)
          (PP (IN than)
            (NP (NN anyone) (NNS elses))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN way) (NN I) (NN dream))
      (VP (VBZ is)
        (ADJP (RB completely) (JJ different))))
    (. .)))

poss(dreams-2, My-1)
nsubj(different-5, dreams-2)
cop(different-5, are-3)
advmod(different-5, completely-4)
root(ROOT-0, different-5)
nn(elses-8, anyone-7)
prep_than(different-5, elses-8)
det(dream-14, the-11)
nn(dream-14, way-12)
nn(dream-14, I-13)
nsubj(different-17, dream-14)
cop(different-17, is-15)
advmod(different-17, completely-16)
conj_and(different-5, different-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD may)
        (VP (VB think)
          (SBAR (IN that)
            (S
              (NP (PRP$ my) (NNS dreams))
              (VP (VBP are)
                (NP
                  (NP (DT another) (NN portion))
                  (PP (IN of)
                    (NP (NN reality))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD may)
      (VP (VB disagree)))
    (. .)))

nsubj(think-3, I-1)
aux(think-3, may-2)
ccomp(disagree-15, think-3)
complm(portion-9, that-4)
poss(dreams-6, my-5)
nsubj(portion-9, dreams-6)
cop(portion-9, are-7)
det(portion-9, another-8)
ccomp(think-3, portion-9)
prep_of(portion-9, reality-11)
nsubj(disagree-15, you-13)
aux(disagree-15, may-14)
root(ROOT-0, disagree-15)

(ROOT
  (SQ (VBZ Does)
    (NP (DT all))
    (ADVP (IN of) (DT this))
    (VP (VB disprove)
      (NP
        (NP (DT the) (NN existence))
        (PP (IN of)
          (NP (NNS dreams)))))
    (. ?)))

aux(disprove-5, Does-1)
nsubj(disprove-5, all-2)
advmod(disprove-5, of-3)
dep(of-3, this-4)
root(ROOT-0, disprove-5)
det(existence-7, the-6)
dobj(disprove-5, existence-7)
prep_of(existence-7, dreams-9)

(ROOT
  (S
    (S
      (NP (CD One) (NN person))
      (VP (MD may)
        (ADVP (RB never)
          (PP (IN in)
            (NP (PRP$ their) (JJ entire) (NN life))))
        (VP (VB dream))))
    (: ...)
    (SQ (VBZ does)
      (NP (DT this))
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (DT no) (NN one))
            (VP (VBZ dreams))))))
    (. ?)))

num(person-2, One-1)
nsubj(dream-9, person-2)
aux(dream-9, may-3)
neg(dream-9, never-4)
poss(life-8, their-6)
amod(life-8, entire-7)
prep_in(never-4, life-8)
root(ROOT-0, dream-9)
aux(mean-13, does-11)
nsubj(mean-13, this-12)
parataxis(dream-9, mean-13)
complm(dreams-17, that-14)
det(one-16, no-15)
nsubj(dreams-17, one-16)
ccomp(mean-13, dreams-17)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN truth))
        (PP (TO to)
          (NP (DT this) (JJ entire) (NN debate))))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP (DT every) (NN argument))
            (VP (MD can)
              (VP
                (VP (VB be)
                  (VP (VBN answered)
                    (ADVP (RB logically))))
                (CC and)
                (VP (VB infinitely))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB therefore))
      (NP (DT no) (JJ logical) (NN decision))
      (VP (MD can)
        (ADVP (RB ever))
        (VP (VB be)
          (VP (VBN made)))))
    (. .)))

det(truth-2, The-1)
nsubj(is-7, truth-2)
det(debate-6, this-4)
amod(debate-6, entire-5)
prep_to(truth-2, debate-6)
root(ROOT-0, is-7)
complm(answered-13, that-8)
det(argument-10, every-9)
nsubjpass(answered-13, argument-10)
nsubj(infinitely-16, argument-10)
aux(answered-13, can-11)
auxpass(answered-13, be-12)
ccomp(is-7, answered-13)
advmod(answered-13, logically-14)
ccomp(is-7, infinitely-16)
conj_and(answered-13, infinitely-16)
advmod(made-26, therefore-19)
det(decision-22, no-20)
amod(decision-22, logical-21)
nsubjpass(made-26, decision-22)
aux(made-26, can-23)
advmod(made-26, ever-24)
auxpass(made-26, be-25)
conj_and(is-7, made-26)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (DT all))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB come)
            (PRT (RP down))
            (PP (TO to)
              (NP (NN faith)))))))
    (. .)))

nsubj(has-3, It-1)
xsubj(come-5, It-1)
advmod(has-3, all-2)
root(ROOT-0, has-3)
aux(come-5, to-4)
xcomp(has-3, come-5)
prt(come-5, down-6)
prep_to(come-5, faith-8)

(ROOT
  (NP
    (NP (DT Either) (NN faith))
    (PP (IN in)
      (NP
        (NP (NN atheism))
        (, ,)
        (CC or)
        (NP (NN faith))))
    (PP (IN in)
      (NP (NN theism)))
    (. .)))

det(faith-2, Either-1)
root(ROOT-0, faith-2)
prep_in(faith-2, atheism-4)
prep_in(faith-2, faith-7)
conj_or(atheism-4, faith-7)
prep_in(faith-2, theism-9)

