(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR (IN that)
        (S
          (PP (IN on)
            (NP (DT the) (CD one) (NN hand)))
          (NP (PRP we))
          (VP (VBP are)
            (VP (VBN created)
              (PP (IN in)
                (NP
                  (NP (NNP God) (POS 's))
                  (NN likeness))))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
complm(created-10, that-3)
det(hand-7, the-5)
num(hand-7, one-6)
prep_on(created-10, hand-7)
nsubjpass(created-10, we-8)
auxpass(created-10, are-9)
ccomp(say-2, created-10)
poss(likeness-14, God-12)
prep_in(created-10, likeness-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP point)
      (PRT (RP out))
      (NP (DT an) (JJ important) (NN problem))
      (PP (IN in)
        (NP
          (NP (PRP$ our) (NNS definitions))
          (PP (IN of)
            (ADJP (JJ good)
              (CC and)
              (JJ evil)))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD would)
                (VP (VB make)
                  (NP
                    (NP (DT a) (NN benevolent))
                    (SBAR
                      (S
                        (NP (NNP God))
                        (VP (VBP seem)
                          (ADJP (RB very) (JJ confusing))))))))))))
      (, ,)
      (SBAR (IN if)
        (FRAG (RB not)
          (ADVP (RB actually))
          (ADJP (JJ impossible)))))
    (. .)))

nsubj(point-2, You-1)
root(ROOT-0, point-2)
prt(point-2, out-3)
det(problem-6, an-4)
amod(problem-6, important-5)
dobj(point-2, problem-6)
poss(definitions-9, our-8)
prep_in(point-2, definitions-9)
nsubj(make-17, definitions-9)
prep_of(definitions-9, good-11)
prep_of(definitions-9, evil-13)
conj_and(good-11, evil-13)
aux(make-17, would-16)
rcmod(definitions-9, make-17)
det(benevolent-19, a-18)
dobj(make-17, benevolent-19)
nsubj(confusing-23, God-20)
cop(confusing-23, seem-21)
advmod(confusing-23, very-22)
rcmod(benevolent-19, confusing-23)
mark(not-26, if-25)
advcl(point-2, not-26)
dep(not-26, actually-27)
dep(not-26, impossible-28)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (ADVP (RB so))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
advmod(think-4, so-5)

(ROOT
  (S (-LRB- -LRB-)
    (NP (PRP We))
    (VP (MD can)
      (ADVP (RB also))
      (VP (VB acknowledge)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP (JJ many) (, ,) (JJ many) (NNS concepts))
                  (PP (IN of)
                    (NP
                      (NP (NNP God))
                      (, ,)
                      (SBAR
                        (WHNP (JJS most)
                          (WHPP (IN of)
                            (WHNP (WDT which))))
                        (S
                          (VP (VBP are)
                            (ADJP (NN contradictory)
                              (PP (IN with)
                                (NP (DT each) (JJ other)))))))))))))
          (, ,)
          (CC and)
          (SBAR
            (WHNP (DT all)
              (WHPP (IN of)
                (WHNP (WDT which))))
            (S
              (VP (VBP are)
                (NP
                  (ADJP (RB equally) (JJ arbitrary))
                  (NNS definitions))))))))
    (. .)))

nsubj(acknowledge-5, We-2)
aux(acknowledge-5, can-3)
advmod(acknowledge-5, also-4)
root(ROOT-0, acknowledge-5)
complm(are-8, that-6)
expl(are-8, there-7)
ccomp(acknowledge-5, are-8)
amod(concepts-12, many-9)
amod(concepts-12, many-11)
nsubj(are-8, concepts-12)
prep_of(concepts-12, God-14)
prep_of(most-16, God-14)
nsubj(contradictory-20, most-16)
cop(contradictory-20, are-19)
rcmod(God-14, contradictory-20)
det(other-23, each-22)
prep_with(contradictory-20, other-23)
dep(of-27, all-26)
nsubj(definitions-32, of-27)
pobj(of-27, which-28)
cop(definitions-32, are-29)
advmod(arbitrary-31, equally-30)
amod(definitions-32, arbitrary-31)
ccomp(acknowledge-5, definitions-32)
conj_and(are-8, definitions-32)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB How))
        (S
          (VP (MD can))))
      (NP (PRP we))
      (VP (VBP pick)
        (NP (CD one))))
    (CC and)
    (S
      (INTJ (VB say))
      (NP (PRP it))
      (VP (MD must)
        (VP (VB be)
          (ADJP (JJ true)))))
    (. ?) (-RRB- -RRB-)))

advmod(can-2, How-1)
dep(pick-4, can-2)
nsubj(pick-4, we-3)
root(ROOT-0, pick-4)
dobj(pick-4, one-5)
dep(true-11, say-7)
nsubj(true-11, it-8)
aux(true-11, must-9)
cop(true-11, be-10)
conj_and(pick-4, true-11)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (JJ other) (NN hand)))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP say)))
      (, ,))
    (NP (PRP we))
    (VP (VBD evolved)
      (PP (IN from)
        (NP (NNS apes))))
    (. .)))

det(hand-4, the-2)
amod(hand-4, other-3)
prep_on(evolved-10, hand-4)
nsubj(say-7, you-6)
parataxis(evolved-10, say-7)
nsubj(evolved-10, we-9)
root(ROOT-0, evolved-10)
prep_from(evolved-10, apes-12)

(ROOT
  (S (-LRB- -LRB-)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB set)
        (PRT (RP aside))
        (NP (DT the) (NN fact))
        (SBAR (IN that)
          (S
            (NP (JJ evolutionary) (NN biology))
            (ADVP (RB actually))
            (VP (VBZ says)
              (SBAR (IN that)
                (S
                  (NP (NNS apes)
                    (CC and)
                    (NNS humans))
                  (VP (VBD evolved)
                    (PP (IN from)
                      (NP (DT a) (JJ common) (NN ancestor)))))))))))
    (. .) (-RRB- -RRB-)))

nsubj(set-4, I-2)
aux(set-4, 'll-3)
root(ROOT-0, set-4)
prt(set-4, aside-5)
det(fact-7, the-6)
dobj(set-4, fact-7)
complm(says-12, that-8)
amod(biology-10, evolutionary-9)
nsubj(says-12, biology-10)
advmod(says-12, actually-11)
ccomp(set-4, says-12)
complm(evolved-17, that-13)
nsubj(evolved-17, apes-14)
conj_and(apes-14, humans-16)
nsubj(evolved-17, humans-16)
ccomp(says-12, evolved-17)
det(ancestor-21, a-19)
amod(ancestor-21, common-20)
prep_from(evolved-17, ancestor-21)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is) (`` ``)
              (NP (JJ strong) (VBG supporting) (NN evidence)))))
        (, ,) ('' '')
        (CC but)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD would)
              (SBAR (RB just)
                (S (`` ``)
                  (S
                    (VP (VBP hate)
                      (S
                        (VP (TO to)
                          (VP (VB think))))))
                  ('' '')
                  (NP (PRP it))
                  (VP (VBD was)
                    (ADJP (JJ true))))))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
complm(is-5, that-3)
expl(is-5, there-4)
ccomp(say-2, is-5)
amod(evidence-9, strong-7)
amod(evidence-9, supporting-8)
nsubj(is-5, evidence-9)
complm(would-15, that-13)
nsubj(would-15, you-14)
ccomp(say-2, would-15)
conj_but(is-5, would-15)
advmod(true-24, just-16)
ccomp(true-24, hate-18)
aux(think-20, to-19)
xcomp(hate-18, think-20)
nsubj(true-24, it-22)
cop(true-24, was-23)
ccomp(would-15, true-24)

(ROOT
  (S
    (S
      (VP (VBG Seeing)
        (S
          (NP (PRP you))
          (VP (VB cite)
            (NP (JJ logical) (NNS problems))
            (PP (IN on)
              (NP
                (NP (CD one) (JJ side)
                  (CC and)
                  (JJ strong) (NN evidence))
                (PP (IN on)
                  (NP (DT the) (JJ other)))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (VBN surprised)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP opt)
              (PP (IN for)
                (NP (NN indifference))))))))
    (. .)))

partmod(surprised-18, Seeing-1)
nsubj(cite-3, you-2)
ccomp(Seeing-1, cite-3)
amod(problems-5, logical-4)
dobj(cite-3, problems-5)
number(side-8, one-7)
prep_on(cite-3, side-8)
amod(evidence-11, strong-10)
prep_on(cite-3, evidence-11)
conj_and(side-8, evidence-11)
det(other-14, the-13)
prep_on(side-8, other-14)
nsubjpass(surprised-18, I-16)
auxpass(surprised-18, 'm-17)
root(ROOT-0, surprised-18)
complm(opt-21, that-19)
nsubj(opt-21, you-20)
ccomp(surprised-18, opt-21)
prep_for(opt-21, indifference-23)

(ROOT
  (S
    (NP
      (NP (DT The) (NN fact))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP are) (RB n't)
            (ADJP (JJ happy)
              (PP (IN with)
                (NP (DT a) (NN conclusion))))))))
    (VP (VBZ does) (RB n't)
      (VP (VB make)
        (S
          (NP (PRP it))
          (ADJP (JJ false)))))
    (. .)))

det(fact-2, The-1)
nsubj(make-13, fact-2)
complm(happy-7, that-3)
nsubj(happy-7, you-4)
cop(happy-7, are-5)
neg(happy-7, n't-6)
dep(fact-2, happy-7)
det(conclusion-10, a-9)
prep_with(happy-7, conclusion-10)
aux(make-13, does-11)
neg(make-13, n't-12)
root(ROOT-0, make-13)
nsubj(false-15, it-14)
xcomp(make-13, false-15)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP you))
    (VP
      (ADVP (RB just))
      (VBP need)
      (S
        (VP (TO to)
          (VP (VB reflect)
            (PP (IN on)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (PP (IN about)
                      (S
                        (VP (VBG sharing)
                          (NP (DT an) (NN ancestor))
                          (PP (IN with)
                            (NP
                              (NP (NNS apes))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBZ makes)
                                    (S
                                      (NP (PRP you))
                                      (ADJP (JJ sad)))))))))))))))))))
    (. .)))

advmod(need-4, Maybe-1)
nsubj(need-4, you-2)
xsubj(reflect-6, you-2)
advmod(need-4, just-3)
root(ROOT-0, need-4)
aux(reflect-6, to-5)
xcomp(need-4, reflect-6)
dobj(is-10, what-8)
nsubj(is-10, it-9)
prepc_on(reflect-6, is-10)
prepc_about(is-10, sharing-12)
det(ancestor-14, an-13)
dobj(sharing-12, ancestor-14)
prep_with(sharing-12, apes-16)
nsubj(makes-18, apes-16)
rcmod(apes-16, makes-18)
nsubj(sad-20, you-19)
xcomp(makes-18, sad-20)

(ROOT
  (SQ (VBZ Is)
    (NP
      (NP (DT a) (NN world))
      (PP (IN with)
        (NP
          (NP (NN evolution)
            (CC and)
            (JJ natural) (NN selection))
          (ADVP (RB really)))))
    (ADJP (DT that)
      (ADJP (RB much) (RBR less) (JJ amazing))
      (CC and)
      (ADJP (JJ awe-inspiring)))
    (. ?)))

cop(amazing-13, Is-1)
det(world-3, a-2)
nsubj(amazing-13, world-3)
nsubj(awe-inspiring-15, world-3)
nn(selection-8, evolution-5)
conj_and(evolution-5, natural-7)
nn(selection-8, natural-7)
prep_with(world-3, selection-8)
advmod(selection-8, really-9)
dep(amazing-13, that-10)
advmod(amazing-13, much-11)
advmod(amazing-13, less-12)
root(ROOT-0, amazing-13)
conj_and(amazing-13, awe-inspiring-15)

