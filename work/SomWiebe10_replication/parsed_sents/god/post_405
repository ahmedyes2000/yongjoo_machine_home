(ROOT
  (FRAG
    (ADJP (FW '') (. .))
    (. .)))


(ROOT
  (S
    (ADVP (RB regardless)
      (SBAR
        (WHPP (IN of)
          (WHNP (WDT which) (NN side)))
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (PP (IN on))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (ADVP (RB there))
      (VP (VBN based)
        (PP (IN on)
          (NP (NN faith)))))
    (. .)))

advmod(based-12, regardless-1)
dep('re-6, of-2)
det(side-4, which-3)
pobj(of-2, side-4)
nsubj('re-6, you-5)
dep(regardless-1, 're-6)
prep('re-6, on-7)
nsubjpass(based-12, you-9)
auxpass(based-12, 're-10)
advmod(based-12, there-11)
root(ROOT-0, based-12)
prep_on(based-12, faith-14)

(ROOT
  (S (`` ``)
    (S
      (NP (DT No) (NN faith))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN belief))
          (PP (IN in)
            (NP
              (NP (NN something))
              (PP (IN with)
                (NP (JJ inadequate) (NN evidence))))))))
    (CC and)
    (S
      (PP (IN in)
        (NP
          (NP (DT the) (NN case))
          (PP (IN of)
            (NP (NNP God)))))
      (, ,)
      (NP
        (NP (NNS lots))
        (PP (IN of)
          (NP
            (NP (NN evidence))
            (PP (TO to)
              (NP (DT the) (NN contrary)))))))
    (. .)))

det(faith-3, No-2)
nsubj(belief-6, faith-3)
cop(belief-6, is-4)
det(belief-6, the-5)
root(ROOT-0, belief-6)
prep_in(belief-6, something-8)
amod(evidence-11, inadequate-10)
prep_with(something-8, evidence-11)
dep(lots-19, in-13)
det(case-15, the-14)
pobj(in-13, case-15)
prep_of(case-15, God-17)
conj_and(belief-6, lots-19)
prep_of(lots-19, evidence-21)
det(contrary-24, the-23)
prep_to(evidence-21, contrary-24)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (NP (PRP$ your) (NN assumption)))
    (. .)))

nsubj(assumption-5, That-2)
cop(assumption-5, 's-3)
poss(assumption-5, your-4)
root(ROOT-0, assumption-5)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ akin)
        (PP (TO to)
          (NP
            (NP (DT a) (JJ 10th) (NN century) (NN peasant))
            (VP (VBG saying) (`` ``)
              (ADVP (RB never))
              ('' '')
              (SBAR
                (WHADVP (WRB when))
                (S
                  (VP (VBG conteplating)
                    (NP (DT the) (NN lunar) (NNS landings))))))))))
    (. .)))

advmod(akin-4, Perhaps-1)
nsubj(akin-4, it-2)
cop(akin-4, 's-3)
root(ROOT-0, akin-4)
det(peasant-9, a-6)
amod(peasant-9, 10th-7)
nn(peasant-9, century-8)
prep_to(akin-4, peasant-9)
partmod(peasant-9, saying-10)
neg(saying-10, never-12)
advmod(conteplating-15, when-14)
advcl(saying-10, conteplating-15)
det(landings-18, the-16)
nn(landings-18, lunar-17)
dobj(conteplating-15, landings-18)

(ROOT
  (S (`` ``)
    (NP (DT A) (NN time))
    (VP (VBD came)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD realized)
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (MD would)
                  (ADVP (RB ALWAYS))
                  (VP (VB be)
                    (NP (NN something)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN discovered))))))))))))))
    (. .) (. .)))

det(time-3, A-2)
nsubj(came-4, time-3)
root(ROOT-0, came-4)
advmod(realized-7, when-5)
nsubj(realized-7, I-6)
advcl(came-4, realized-7)
complm(something-13, that-8)
expl(something-13, there-9)
aux(something-13, would-10)
advmod(something-13, ALWAYS-11)
cop(something-13, be-12)
ccomp(realized-7, something-13)
aux(discovered-16, to-14)
auxpass(discovered-16, be-15)
infmod(something-13, discovered-16)

(ROOT
  (FRAG (`` ``)
    (INTJ (RB So))
    (. ?)))


(ROOT
  (S
    (NP (PRP I))
    (VP (VBD put)
      (NP (PRP$ my) (NN faith))
      (PP (IN in)
        (NP (NNP God))))
    (. .) (. .)))

nsubj(put-2, I-1)
root(ROOT-0, put-2)
poss(faith-4, my-3)
dobj(put-2, faith-4)
prep_in(put-2, God-6)

(ROOT
  (S (`` ``)
    (ADVP (CC But))
    (VP (VB why))
    (. ?)))

advmod(why-3, But-2)
root(ROOT-0, why-3)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (VP (VBN based)
        (PP (IN on)
          (NP (NN evidence)))))
    (. .)))

nsubjpass(based-3, Science-1)
auxpass(based-3, is-2)
root(ROOT-0, based-3)
prep_on(based-3, evidence-5)

(ROOT
  (S
    (NP (`` ``)
      (NP (NNP Science))
      (CC and)
      (NP
        (NP (DT a) (NN belief))
        (PP (IN in)
          (NP (NNP God)))))
    (VP (VBP do) (RB not)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (RB mutually) (JJ exclusive)
                (PP (IN of)
                  (NP (DT each) (JJ other)))))))))
    (. .)))

nsubj(have-10, Science-2)
xsubj(exclusive-14, Science-2)
det(belief-5, a-4)
conj_and(Science-2, belief-5)
nsubj(have-10, belief-5)
xsubj(exclusive-14, belief-5)
prep_in(belief-5, God-7)
aux(have-10, do-8)
neg(have-10, not-9)
root(ROOT-0, have-10)
aux(exclusive-14, to-11)
cop(exclusive-14, be-12)
advmod(exclusive-14, mutually-13)
xcomp(have-10, exclusive-14)
det(other-17, each-16)
prep_of(exclusive-14, other-17)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Indeed))
    (. .)))


(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ scientific) (NNS reasons))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (NNS people))
            (VP (VBP believe)
              (PP (IN in)
                (NP (NNS gods))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(reasons-4, scientific-3)
nsubj(are-2, reasons-4)
advmod(believe-7, why-5)
nsubj(believe-7, people-6)
rcmod(reasons-4, believe-7)
prep_in(believe-7, gods-9)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (NNP God))
          (VP (VBD intended)
            (S
              (NP (PRP us))
              (VP
                (VP (VB seek)
                  (NP (NN knowledge)
                    (CC and)
                    (NN question) (NNS things)))
                (: ...)
                (VP
                  (ADVP (RB even))
                  (NP (PRP Him)))))))))
    (. .)))

nsubj(believe-3, I-2)
root(ROOT-0, believe-3)
nsubj(intended-5, God-4)
ccomp(believe-3, intended-5)
nsubj(seek-7, us-6)
ccomp(intended-5, seek-7)
nn(things-11, knowledge-8)
conj_and(knowledge-8, question-10)
nn(things-11, question-10)
dobj(seek-7, things-11)
advmod(Him-14, even-13)
dep(seek-7, Him-14)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB believe)
          (SBAR
            (SBAR
              (WHNP (WDT whatever))
              (S
                (NP (PRP you))
                (VP (VBP want))))
            (CC but)
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (ADVP (RB adversely))
                (VP (VBZ affects)
                  (NP
                    (NP (DT the) (NNS lives))
                    (PP (IN of)
                      (NP (NNS others)))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN held)
          (ADJP (JJ accountable))
          (PP (IN with)
            (NP (JJ reasoned) (NN inquiry))))))
    (. .)))

nsubj(believe-4, You-2)
aux(believe-4, can-3)
ccomp(held-21, believe-4)
dobj(want-7, whatever-5)
nsubj(want-7, you-6)
dep(believe-4, want-7)
mark(affects-12, if-9)
nsubj(affects-12, it-10)
advmod(affects-12, adversely-11)
dep(believe-4, affects-12)
conj_but(want-7, affects-12)
det(lives-14, the-13)
dobj(affects-12, lives-14)
prep_of(lives-14, others-16)
nsubjpass(held-21, you-18)
aux(held-21, should-19)
auxpass(held-21, be-20)
root(ROOT-0, held-21)
acomp(held-21, accountable-22)
amod(inquiry-25, reasoned-24)
prep_with(held-21, inquiry-25)

(ROOT
  (S
    (ADVP (RB E.g.))
    (NP (PRP I))
    (VP (MD may)
      (VP (VB believe)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN sun))
            (VP (VBZ sets)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ Indian) (NN ocean))
                  (NP (DT every) (NN night))
                  (SBAR
                    (SBAR (IN because)
                      (S
                        (NP
                          (NP (PRP$ my) (NNS parents))
                          (CC and)
                          (NP (NN community)))
                        (VP (VBP say)
                          (ADVP (RB so)))))
                    (CC but)
                    (SBAR (IN if)
                      (S
                        (NP (PRP I))
                        (VP (VBP punch)
                          (NP
                            (NP (DT those))
                            (SBAR
                              (WHNP (WP who) (NN dissent)
                                (PP (IN from)
                                  (NP (PRP$ my) (NN belief))))
                              (S
                                (NP (PRP I))
                                (VP (MD should)
                                  (VP (VB be)
                                    (VP (VBN forced)
                                      (S
                                        (VP (TO to)
                                          (VP (VB face)
                                            (NP (NN reason))
                                            (PP (IN with)
                                              (NP (NN evidence)))))))))))))))))))))))
    (. .)))

advmod(believe-4, E.g.-1)
nsubj(believe-4, I-2)
aux(believe-4, may-3)
root(ROOT-0, believe-4)
complm(sets-8, that-5)
det(sun-7, the-6)
nsubj(sets-8, sun-7)
ccomp(believe-4, sets-8)
det(ocean-12, the-10)
amod(ocean-12, Indian-11)
prep_in(sets-8, ocean-12)
det(night-14, every-13)
dep(ocean-12, night-14)
mark(say-20, because-15)
poss(parents-17, my-16)
nsubj(say-20, parents-17)
conj_and(parents-17, community-19)
nsubj(say-20, community-19)
dep(ocean-12, say-20)
advmod(say-20, so-21)
mark(punch-25, if-23)
nsubj(punch-25, I-24)
dep(ocean-12, punch-25)
conj_but(say-20, punch-25)
dobj(punch-25, those-26)
det(dissent-28, those-26)
dobj(forced-35, dissent-28)
rel(forced-35, dissent-28)
poss(belief-31, my-30)
prep_from(dissent-28, belief-31)
nsubjpass(forced-35, I-32)
aux(forced-35, should-33)
auxpass(forced-35, be-34)
rcmod(those-26, forced-35)
aux(face-37, to-36)
xcomp(forced-35, face-37)
dobj(face-37, reason-38)
prep_with(face-37, evidence-40)

(ROOT
  (S (`` ``)
    (SBAR (IN For)
      (S
        (NP (NN everything) (NN science))
        (VP (VBZ brings)
          (PP (TO to)
            (NP (DT the) (NN table))))))
    (, ,)
    (NP (PRP it))
    (VP (MD wo) (RB n't)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB prove)
                (NP (`` ``) (FW scientifically) ('' ''))
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT the) (NN universe)
                        (CC and)
                        (NN everything))
                      (PP (IN in)
                        (NP (PRP it))))
                    (, ,)
                    (VP (VBZ is)
                      (NP
                        (NP (DT a) (NN result))
                        (PP (IN of)
                          (NP (JJ random) (NN happenstance)))))))))))))
    (. .)))

mark(brings-5, For-2)
nn(science-4, everything-3)
nsubj(brings-5, science-4)
advcl(able-14, brings-5)
det(table-8, the-7)
prep_to(brings-5, table-8)
nsubj(able-14, it-10)
aux(able-14, wo-11)
neg(able-14, n't-12)
cop(able-14, be-13)
root(ROOT-0, able-14)
aux(prove-16, to-15)
xcomp(able-14, prove-16)
dobj(prove-16, scientifically-18)
complm(result-30, that-20)
det(universe-22, the-21)
nsubj(result-30, universe-22)
conj_and(universe-22, everything-24)
nsubj(result-30, everything-24)
prep_in(universe-22, it-26)
cop(result-30, is-28)
det(result-30, a-29)
ccomp(prove-16, result-30)
amod(happenstance-33, random-32)
prep_of(result-30, happenstance-33)

