(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (NP (DT an) (NNS hypothesis))
      (ADVP (RB as) (RB well)))
    (. .)))

nsubj(hypothesis-4, Science-1)
cop(hypothesis-4, is-2)
det(hypothesis-4, an-3)
root(ROOT-0, hypothesis-4)
advmod(well-6, as-5)
mwe(well-6, as-5)
advmod(hypothesis-4, well-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (VP (VBN based)
        (PP (IN on)
          (NP (DT the) (NN perception)))
        (SBAR (IN that)
          (S
            (NP (DT the) (NN universe))
            (VP (VBZ is)
              (ADJP (VBN limited)
                (PP (TO to)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP we))
                      (VP (MD can)
                        (VP (VB sense)
                          (PP (IN with)
                            (NP
                              (NP (PRP$ our) (CD 5) (NNS senses))
                              (CC and)
                              (NP
                                (NP (NN instrumentation))
                                (VP (VBN designed)
                                  (S
                                    (VP (TO to)
                                      (VP (VB augment)
                                        (NP (DT those) (CD five) (NNS senses))))))))))))))))))))
    (. .)))

nsubjpass(based-3, It-1)
auxpass(based-3, is-2)
root(ROOT-0, based-3)
det(perception-6, the-5)
prep_on(based-3, perception-6)
complm(limited-11, that-7)
det(universe-9, the-8)
nsubjpass(limited-11, universe-9)
auxpass(limited-11, is-10)
ccomp(based-3, limited-11)
dobj(sense-16, what-13)
nsubj(sense-16, we-14)
aux(sense-16, can-15)
prepc_to(limited-11, sense-16)
poss(senses-20, our-18)
num(senses-20, 5-19)
prep_with(sense-16, senses-20)
prep_with(sense-16, instrumentation-22)
conj_and(senses-20, instrumentation-22)
xsubj(augment-25, instrumentation-22)
partmod(instrumentation-22, designed-23)
aux(augment-25, to-24)
xcomp(designed-23, augment-25)
det(senses-28, those-26)
num(senses-28, five-27)
dobj(augment-25, senses-28)

(ROOT
  (S
    (S
      (ADVP (RB Right) (RB now))
      (NP (EX there))
      (VP (VBP are)
        (NP
          (NP (NNS thousands))
          (PP (IN of)
            (NP (NN radio)
              (CC and)
              (NN tv))))))
    (CC and)
    (S
      (NP (NNS wireless))
      (VP (VBZ signals)
        (S
          (VP (VBG going)
            (PP (IN past)
              (NP (PRP$ my) (NN head)))))))
    (CC but)
    (S
      (NP (PRP I))
      (ADVP (RB cant))
      (VP
        (VP (VB see)
          (CC or)
          (VB hear))
        (CC or)
        (VP
          (ADVP (RB even))
          (VB feel)
          (NP (PRP them))
          (SBAR (IN because)
            (S
              (NP (JJ i) (NN dont))
              (VP (VBP have)
                (NP
                  (NP (DT the) (NN receiver))
                  (VP (VBN turned)
                    (PRT (RP on))
                    (PRN (CC or)
                      (ADJP (VBN tuned)))
                    (PP (TO to)
                      (NP (DT the) (JJ proper) (NN frequency)))))))))))
    (. .)))

advmod(now-2, Right-1)
advmod(are-4, now-2)
expl(are-4, there-3)
root(ROOT-0, are-4)
nsubj(are-4, thousands-5)
prep_of(thousands-5, radio-7)
prep_of(thousands-5, tv-9)
conj_and(radio-7, tv-9)
nsubj(signals-12, wireless-11)
conj_and(are-4, signals-12)
xcomp(signals-12, going-13)
poss(head-16, my-15)
prep_past(going-13, head-16)
nsubj(see-20, I-18)
nsubj(hear-22, I-18)
nsubj(feel-25, I-18)
advmod(see-20, cant-19)
conj_but(are-4, see-20)
conj_but(are-4, hear-22)
conj_or(see-20, hear-22)
advmod(feel-25, even-24)
conj_but(are-4, feel-25)
conj_or(see-20, feel-25)
dobj(feel-25, them-26)
mark(have-30, because-27)
amod(dont-29, i-28)
nsubj(have-30, dont-29)
advcl(feel-25, have-30)
det(receiver-32, the-31)
dobj(have-30, receiver-32)
partmod(receiver-32, turned-33)
prt(turned-33, on-34)
dep(tuned-36, or-35)
dep(turned-33, tuned-36)
det(frequency-40, the-38)
amod(frequency-40, proper-39)
prep_to(turned-33, frequency-40)

(ROOT
  (S (CC But)
    (ADVP (RB regardless)
      (PP (IN of)
        (NP (DT that))))
    (NP (DT those) (NNS signals))
    (VP (VBP are)
      (ADVP (RB there)))
    (. .)))

cc(are-7, But-1)
prep_regardless_of(are-7, that-4)
det(signals-6, those-5)
nsubj(are-7, signals-6)
root(ROOT-0, are-7)
advmod(are-7, there-8)

(ROOT
  (S
    (NP (NN WHat) (RB else))
    (VP (VBZ is)
      (ADVP (RB there))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP
            (VP
              (ADVP (RB simply))
              (VBP do) (RB not)
              (VP (VB have)
                (NP (DT a) (NN receiver))
                (PP (IN for))))
            (CC or)
            (VP (VBP am) (RB not)
              (ADJP (VBN tuned)
                (PP (IN into))))))))
    (. .)))

nsubj(is-3, WHat-1)
advmod(WHat-1, else-2)
root(ROOT-0, is-3)
advmod(is-3, there-4)
complm(have-10, that-5)
nsubj(have-10, I-6)
nsubjpass(tuned-17, I-6)
advmod(have-10, simply-7)
aux(have-10, do-8)
neg(have-10, not-9)
ccomp(is-3, have-10)
det(receiver-12, a-11)
dobj(have-10, receiver-12)
prep(have-10, for-13)
auxpass(tuned-17, am-15)
neg(tuned-17, not-16)
ccomp(is-3, tuned-17)
conj_or(have-10, tuned-17)
prep(tuned-17, into-18)

(ROOT
  (SQ (VBZ Is)
    (NP (EX there))
    (NP
      (NP (DT a) (`` ``) (NN spirit))
      (PP (IN of)
        (NP
          (NP (NN truth)
            (CC and)
            (NNS righteousness))
          ('' '')
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ requires)
                (NP
                  (NP
                    (NP (DT a) (NN mind))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD can)
                          (VP (VB receive)
                            (NP (PRP it)))))))
                  (CC and)
                  (NP
                    (NP (DT a) (NN mind))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ is)
                          (ADJP (VBN tuned)
                            (PP (IN into)
                              (NP
                                (NP (DT the) (NN frequency))
                                (SBAR
                                  (S
                                    (NP (PRP it))
                                    (VP (VBZ broadcasts)
                                      (PRT (RP on)))))))))))))))))))
    (. ?)))

root(ROOT-0, Is-1)
expl(Is-1, there-2)
det(spirit-5, a-3)
nsubj(Is-1, spirit-5)
prep_of(spirit-5, truth-7)
prep_of(spirit-5, righteousness-9)
conj_and(truth-7, righteousness-9)
nsubj(requires-12, that-11)
rcmod(truth-7, requires-12)
det(mind-14, a-13)
dobj(requires-12, mind-14)
nsubj(receive-17, mind-14)
aux(receive-17, can-16)
rcmod(mind-14, receive-17)
dobj(receive-17, it-18)
det(mind-21, a-20)
conj_and(mind-14, mind-21)
nsubjpass(tuned-24, mind-21)
auxpass(tuned-24, is-23)
rcmod(mind-21, tuned-24)
det(frequency-27, the-26)
prep_into(tuned-24, frequency-27)
dobj(broadcasts-29, frequency-27)
nsubj(broadcasts-29, it-28)
rcmod(frequency-27, broadcasts-29)
prt(broadcasts-29, on-30)

(ROOT
  (S
    (NP (JJ Many) (NNS people))
    (VP (VBP have)
      (NP
        (NP (DT a) (`` ``) (NN gut) (NN feeling) ('' ''))
        (PP (IN about)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (ADJP (JJ right)
                  (CC and)
                  (JJ wrong))
                (, ,)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (VP (VBZ does)
                      (S
                        (NP (PRP it))
                        (VP (VB come)
                          (PP (IN from)))))))))))))
    (. .)))

amod(people-2, Many-1)
nsubj(have-3, people-2)
root(ROOT-0, have-3)
det(feeling-7, a-4)
nn(feeling-7, gut-6)
dobj(have-3, feeling-7)
nsubj(right-12, what-10)
nsubj(wrong-14, what-10)
nsubj(does-17, what-10)
cop(right-12, is-11)
prepc_about(feeling-7, right-12)
prepc_about(feeling-7, wrong-14)
conj_and(right-12, wrong-14)
advmod(does-17, where-16)
advcl(right-12, does-17)
nsubj(come-19, it-18)
ccomp(does-17, come-19)
prep(come-19, from-20)

(ROOT
  (S
    (NP (JJ Last) (NNS nights))
    (S
      (NP
        (NP (NNP Spaghetti))
        (: :)
        (VP (VBN -))
        (-RRB- -RRB-))
      (ADVP (RB Or))
      (VP (VBZ is)
        (ADVP (RB there))
        (NP
          (NP (DT a) (`` ``) (NN spirit))
          (PP (IN of)
            (NP (NN truth))))))
    (CC and)
    (S
      (NP (NNS righteousness))
      ('' '')
      (VP (VBZ is)
        (ADVP (RB there))
        (NP
          (NP (DT a) (NNS concious)
            (CC or)
            (NNS subconcious) (NN concience))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (SBAR
                  (QP (JJR more) (IN than) (RB just))
                  (WHNP (WP what))
                  (S
                    (NP (PRP we))
                    (VP (VBP have)
                      (VP (VBD reasoned)
                        (PP (IN from)
                          (NP (PRP$ our) (NN life) (NN experience)))
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (NP (DT the) (JJ correct) (NN thing)
                                (S
                                  (VP (TO to)
                                    (VP (VB do))))))))))))))))))
    (. .)))

amod(nights-2, Last-1)
dep(spirit-12, nights-2)
nsubj(spirit-12, Spaghetti-3)
advmod(spirit-12, Or-7)
cop(spirit-12, is-8)
advmod(spirit-12, there-9)
det(spirit-12, a-10)
root(ROOT-0, spirit-12)
prep_of(spirit-12, truth-14)
nsubj(concious-21, righteousness-16)
cop(concious-21, is-18)
advmod(concious-21, there-19)
det(concious-21, a-20)
conj_and(spirit-12, concious-21)
nsubj(is-26, concious-21)
nn(concience-24, subconcious-23)
conj_and(spirit-12, concience-24)
conj_or(concious-21, concience-24)
nsubj(is-26, concience-24)
rcmod(concious-21, is-26)
quantmod(than-28, more-27)
dep(reasoned-33, than-28)
quantmod(than-28, just-29)
dobj(reasoned-33, what-30)
nsubj(reasoned-33, we-31)
xsubj(thing-42, we-31)
aux(reasoned-33, have-32)
ccomp(is-26, reasoned-33)
poss(experience-37, our-35)
nn(experience-37, life-36)
prep_from(reasoned-33, experience-37)
aux(thing-42, to-38)
cop(thing-42, be-39)
det(thing-42, the-40)
amod(thing-42, correct-41)
xcomp(reasoned-33, thing-42)
aux(do-44, to-43)
infmod(thing-42, do-44)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (ADJP (RB really) (JJ good)
        (PP (IN at)
          (S
            (VP (VBG justifying)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP we) (DT some))
                  (ADVP (WRB how))
                  (VP (VBP know)
                    (SBAR
                      (S
                        (VP (VBZ is)
                          (ADJP (JJ wrong)))))))))))))
    (. .)))

nsubj(good-4, We-1)
cop(good-4, are-2)
advmod(good-4, really-3)
root(ROOT-0, good-4)
prepc_at(good-4, justifying-6)
dep(know-11, what-7)
nsubj(wrong-13, what-7)
nsubj(know-11, we-8)
dep(we-8, some-9)
advmod(know-11, how-10)
ccomp(justifying-6, know-11)
cop(wrong-13, is-12)
ccomp(know-11, wrong-13)

(ROOT
  (NP (NNP IMHO)))

root(ROOT-0, IMHO-1)

