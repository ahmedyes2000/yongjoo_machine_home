(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NN God))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VB disprove)
            (PP (IN with)
              (NP (PRP$ your) (NNS arguments)))))))
    (VP (VBZ is)
      (NP (DT the) (NN one))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN created)
              (PP (IN within)
                (NP (PRP$ your) (JJ own) (NN mind))))))))
    (. .)))

det(God-3, The-1)
amod(God-3, only-2)
dobj(disprove-5, God-3)
nsubj(one-11, God-3)
nsubj(disprove-5, you-4)
rcmod(God-3, disprove-5)
poss(arguments-8, your-7)
prep_with(disprove-5, arguments-8)
cop(one-11, is-9)
det(one-11, the-10)
root(ROOT-0, one-11)
complm(created-15, that-12)
nsubj(created-15, you-13)
aux(created-15, have-14)
ccomp(one-11, created-15)
poss(mind-19, your-17)
amod(mind-19, own-18)
prep_within(created-15, mind-19)

(ROOT
  (S
    (S
      (SBAR (IN In) (NN order)
        (S
          (VP (TO to)
            (VP (VB disprove)
              (NP
                (NP (DT any) (NN framework))
                (PP (IN of)
                  (NP (NN belief))))))))
      (, ,)
      (NP (PRP you))
      (VP (MD must)
        (VP
          (VP (VB adopt)
            (NP (DT that) (NN framework)))
          (CC and)
          (VP (VB disprove)
            (NP (PRP it))
            (PP (IN within)
              (NP (PRP itself)))))))
    (: ;)
    (S
      (ADVP (RB therefore))
      (, ,)
      (NP (PRP you))
      (VP (MD can) (RB not)
        (VP (VB define)
          (NP (NNP God)))))
    (. .)))

mark(disprove-4, In-1)
dep(disprove-4, order-2)
aux(disprove-4, to-3)
dep(adopt-12, disprove-4)
det(framework-6, any-5)
dobj(disprove-4, framework-6)
prep_of(framework-6, belief-8)
nsubj(adopt-12, you-10)
nsubj(disprove-16, you-10)
aux(adopt-12, must-11)
root(ROOT-0, adopt-12)
det(framework-14, that-13)
dobj(adopt-12, framework-14)
conj_and(adopt-12, disprove-16)
dobj(disprove-16, it-17)
prep_within(disprove-16, itself-19)
advmod(define-26, therefore-21)
nsubj(define-26, you-23)
aux(define-26, can-24)
neg(define-26, not-25)
parataxis(adopt-12, define-26)
dobj(define-26, God-27)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (VP (VBN failed)
            (S
              (VP (TO to)
                (VP (VB disprove)
                  (NP
                    (NP (NNP God))
                    (PP (IN in)
                      (NP
                        (NP (DT every) (NN sense))
                        (PP (IN of)
                          (NP (DT the) (NN term)))))))))))))
    (, ,)
    (NP (PRP$ your) (NNS arguments))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP (JJ valid))))
    (. .)))

mark(failed-4, Because-1)
nsubj(failed-4, you-2)
xsubj(disprove-6, you-2)
aux(failed-4, have-3)
advcl(valid-20, failed-4)
aux(disprove-6, to-5)
xcomp(failed-4, disprove-6)
dobj(disprove-6, God-7)
det(sense-10, every-9)
prep_in(God-7, sense-10)
det(term-13, the-12)
prep_of(sense-10, term-13)
poss(arguments-16, your-15)
nsubj(valid-20, arguments-16)
aux(valid-20, can-17)
neg(valid-20, not-18)
cop(valid-20, be-19)
root(ROOT-0, valid-20)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (: :)
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN failed)
        (S
          (VP (TO to)
            (VP (VB disprove)
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP
                    (NP
                      (NP (NN philosophy) (POS 's))
                      (ADJP (RBS most) (JJ famous))
                      (NNS examples))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (NNP God) (NNP Plato) (POS 's))
                          (NNP God))
                        (PP (IN of)
                          (NP (DT the) (NNS forms)))))))))))))
    (. .)))

prep_for(failed-6, example-2)
nsubj(failed-6, you-4)
xsubj(disprove-8, you-4)
aux(failed-6, have-5)
root(ROOT-0, failed-6)
aux(disprove-8, to-7)
xcomp(failed-6, disprove-8)
dobj(disprove-8, one-9)
poss(examples-15, philosophy-11)
advmod(famous-14, most-13)
amod(examples-15, famous-14)
prep_of(one-9, examples-15)
nn(Plato-18, God-17)
poss(God-20, Plato-18)
prep_of(examples-15, God-20)
det(forms-23, the-22)
prep_of(God-20, forms-23)

(ROOT
  (S
    (NP (NNP Plato))
    (VP (VBD believed)
      (SBAR (IN that)
        (S
          (NP (DT this) (NNP God))
          (VP (VBD ruled)
            (PP (IN by)
              (NP
                (NP (JJ transcendent) (NNS laws))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP
                      (VP (VBD existed)
                        (ADVP (RB already)))
                      (, ,)
                      (CC and)
                      (VP (VBD transcended)
                        (S
                          (NP (RB even) (NNP God))
                          (NP (PRP himself)))))))))))))
    (. .)))

nsubj(believed-2, Plato-1)
root(ROOT-0, believed-2)
complm(ruled-6, that-3)
det(God-5, this-4)
nsubj(ruled-6, God-5)
ccomp(believed-2, ruled-6)
amod(laws-9, transcendent-8)
prep_by(ruled-6, laws-9)
nsubj(existed-11, laws-9)
nsubj(transcended-15, laws-9)
rcmod(laws-9, existed-11)
advmod(existed-11, already-12)
rcmod(laws-9, transcended-15)
conj_and(existed-11, transcended-15)
advmod(God-17, even-16)
nsubj(himself-18, God-17)
xcomp(transcended-15, himself-18)

(ROOT
  (S
    (S
      (NP (DT This) (NN definition))
      (VP (VBZ meets)
        (NP (PRP$ your) (NN argument))))
    (, ,)
    (CC and)
    (ADVP (RB therefore))
    (S
      (NP (PRP$ your) (NN argument))
      (ADVP (RB inherently))
      (VP
        (VP (VBZ fails)
          (S
            (VP (TO to)
              (VP (VB provide)
                (NP (DT any) (NN offense))))))
        (, ,)
        (CC and)
        (VP (VBZ disproves)
          (NP (NN nothing)))))
    (. .)))

det(definition-2, This-1)
nsubj(meets-3, definition-2)
root(ROOT-0, meets-3)
poss(argument-5, your-4)
dobj(meets-3, argument-5)
advmod(meets-3, therefore-8)
conj_and(meets-3, therefore-8)
poss(argument-10, your-9)
nsubj(fails-12, argument-10)
xsubj(provide-14, argument-10)
nsubj(disproves-19, argument-10)
advmod(fails-12, inherently-11)
ccomp(meets-3, fails-12)
conj_and(meets-3, fails-12)
aux(provide-14, to-13)
xcomp(fails-12, provide-14)
det(offense-16, any-15)
dobj(provide-14, offense-16)
ccomp(meets-3, disproves-19)
conj_and(meets-3, disproves-19)
conj_and(fails-12, disproves-19)
dobj(disproves-19, nothing-20)

