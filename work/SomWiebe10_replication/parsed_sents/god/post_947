(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN evidence))
        (CC or)
        (RB even)
        (NP
          (NP (DT any) (NN suggestion))
          (PP (IN of)
            (S
              (NP (EX there))
              (VP (VBG being)
                (NP (DT a) (NN god))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(evidence-4, no-3)
nsubj(is-2, evidence-4)
nsubj(is-2, even-6)
advmod(evidence-4, even-6)
conj_or(evidence-4, even-6)
det(suggestion-8, any-7)
dep(evidence-4, suggestion-8)
expl(being-11, there-10)
prepc_of(suggestion-8, being-11)
det(god-13, a-12)
nsubj(being-11, god-13)

(ROOT
  (S
    (SBAR (IN Until)
      (S
        (S
          (NP (DT some))
          (VP (VBZ is)
            (VP (VBN presented))))
        (, ,)
        (CC and)
        (S
          (NP (DT that))
          (VP (VBZ does) (RB not)
            (VP (VB include)
              (S (`` ``)
                (S
                  (VP (VBZ is) (RB n't)
                    (ADJP (RB everything) (JJ amazing))))
                (, ,)
                (NP (PRP it))
                (VP (MD must)
                  (VP (VB be)
                    (NP (NN god) ('' ''))))))))))
    (, ,)
    (NP (RB then))
    (VP (VBZ is)
      (NP (PRP it))
      (PP (RB not)
        (ADJP (JJ fair) (RB enough)
          (PP (IN for)
            (NP (PRP us)))
          (S
            (VP (RB not) (TO to)
              (VP (VB believe)
                (PP (IN in)
                  (NP (NN his\/her) (NN existence)))))))))
    (. ?)))

mark(presented-4, Until-1)
nsubjpass(presented-4, some-2)
auxpass(presented-4, is-3)
advcl(it-25, presented-4)
nsubj(include-10, that-7)
aux(include-10, does-8)
neg(include-10, not-9)
conj_and(presented-4, include-10)
advcl(it-25, include-10)
cop(amazing-15, is-12)
neg(amazing-15, n't-13)
advmod(amazing-15, everything-14)
ccomp(god-20, amazing-15)
nsubj(god-20, it-17)
aux(god-20, must-18)
cop(god-20, be-19)
ccomp(include-10, god-20)
nsubj(it-25, then-23)
cop(it-25, is-24)
root(ROOT-0, it-25)
prep(it-25, not-26)
pobj(not-26, fair-27)
advmod(fair-27, enough-28)
prep_for(fair-27, us-30)
neg(believe-33, not-31)
aux(believe-33, to-32)
dep(fair-27, believe-33)
nn(existence-36, his\/her-35)
prep_in(believe-33, existence-36)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBD were)
      (NP (PRP$ your) (NNS encounters)))
    (. ?)))

attr(were-2, What-1)
root(ROOT-0, were-2)
poss(encounters-4, your-3)
nsubj(were-2, encounters-4)

