(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP label)
            (NP (PRP myself))))))
    (. .)))

dep(is-4, Yes-1)
nsubj(is-4, that-3)
root(ROOT-0, is-4)
dobj(label-7, what-5)
nsubj(label-7, I-6)
ccomp(is-4, label-7)
dobj(label-7, myself-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (NP
        (NP (DT a)
          (ADJP (RB fairly) (VBN devout))
          (JJ Christian))
        (PRN (-LRB- -LRB-)
          (NP (NNP Episcopalian))
          (-RRB- -RRB-))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ attends)
                (NP (NN church))
                (ADVP (RB regularly)))
              (CC and)
              (VP (VBZ prays)
                (ADVP (RB often))))))))
    (. .)))

nsubj(devout-5, I-1)
cop(devout-5, am-2)
det(devout-5, a-3)
advmod(devout-5, fairly-4)
root(ROOT-0, devout-5)
nsubj(attends-11, devout-5)
nsubj(prays-15, devout-5)
amod(devout-5, Christian-6)
appos(devout-5, Episcopalian-8)
rcmod(devout-5, attends-11)
dobj(attends-11, church-12)
advmod(attends-11, regularly-13)
rcmod(devout-5, prays-15)
conj_and(attends-11, prays-15)
advmod(prays-15, often-16)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)))
    (, ,)
    (CC and)
    (S
      (S
        (NP (NN nobody))
        (VP (MD can)
          (PRN (, ,)
            (S
              (VP (VB say)
                (PP (IN with)
                  (NP
                    (ADJP (CD 100) (NN %))
                    (NN certainty)))
                (SBAR (IN that)
                  (S
                    (NP (EX there))
                    (VP (VBZ does)))))))
          (VP (VB exist)
            (NP (DT a) (NNPS God\/Gods)))))
      (, ,) (RB thus)
      (S
        (NP (PRP I))
        (VP (VBP do)
          (VP (VB have)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (MD would)
                  (VP (VB call)
                    (NP
                      (NP (DT a) (JJ little) (NN bit))
                      (PP (IN of)
                        (NP (NN doubt))))
                    (ADVP (RB as) (RB well))))))))))
    (. .)))

advmod(can-4, However-1)
nsubj(can-4, I-3)
root(ROOT-0, can-4)
neg(can-4, not-5)
nsubj(exist-19, nobody-8)
aux(exist-19, can-9)
parataxis(exist-19, say-11)
number(%-14, 100-13)
amod(certainty-15, %-14)
prep_with(say-11, certainty-15)
complm(does-18, that-16)
expl(does-18, there-17)
ccomp(say-11, does-18)
conj_and(can-4, exist-19)
det(God\/Gods-21, a-20)
dobj(exist-19, God\/Gods-21)
advmod(exist-19, thus-23)
nsubj(have-26, I-24)
aux(have-26, do-25)
dep(exist-19, have-26)
dobj(call-30, what-27)
nsubj(call-30, you-28)
aux(call-30, would-29)
ccomp(have-26, call-30)
det(bit-33, a-31)
amod(bit-33, little-32)
dobj(call-30, bit-33)
prep_of(bit-33, doubt-35)
advmod(well-37, as-36)
mwe(well-37, as-36)
advmod(call-30, well-37)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (DT all))
      (VP (VBP do)))
    (, ,)
    (NP (PRP we))
    (VP (VBP 're)
      (VP (VBG being)
        (VP (VBN dishonest)
          (PP (IN with)
            (NP (PRP ourselves)))
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (VBP say)
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP do) (RB n't))))))))))
    (. .)))

nsubj(do-3, We-1)
advmod(do-3, all-2)
ccomp(dishonest-8, do-3)
nsubjpass(dishonest-8, we-5)
aux(dishonest-8, 're-6)
auxpass(dishonest-8, being-7)
root(ROOT-0, dishonest-8)
prep_with(dishonest-8, ourselves-10)
mark(say-13, if-11)
nsubj(say-13, we-12)
advcl(dishonest-8, say-13)
nsubj(do-15, we-14)
ccomp(say-13, do-15)
neg(do-15, n't-16)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP DO)
              (SBAR
                (S
                  (NP (NNP NOT))
                  (VP (VBP believe)))))))))
    (: :)
    (S
      (NP (NN earth))
      (VP (VBZ is)
        (ADJP
          (NP (CD 6,000) (NNS years))
          (JJ old))))
    (. .)))

nsubj('s-2, Here-1)
root(ROOT-0, 's-2)
dep(DO-5, what-3)
dobj(believe-7, what-3)
nsubj(DO-5, I-4)
ccomp('s-2, DO-5)
nsubj(believe-7, NOT-6)
ccomp(DO-5, believe-7)
nsubj(old-13, earth-9)
cop(old-13, is-10)
num(years-12, 6,000-11)
npadvmod(old-13, years-12)
parataxis('s-2, old-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NNP ANYONE))
            (VP (MD can)
              (VP (VB believe)
                (NP (DT that) (NN nonsense))))))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, do-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
advmod(believe-8, how-5)
nsubj(believe-8, ANYONE-6)
aux(believe-8, can-7)
ccomp(see-4, believe-8)
det(nonsense-10, that-9)
dobj(believe-8, nonsense-10)

(ROOT
  (NP (DT The) (JJ watchmaker) (NN argument) (. .)))

det(argument-3, The-1)
amod(argument-3, watchmaker-2)
root(ROOT-0, argument-3)

(ROOT
  (S
    (NP (NNP Pretty) (JJ much) (NN anything))
    (VP (VBP put)
      (PRT (RP out))
      (UCP
        (PP (IN by)
          (NP (NNP CSE)))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (JJ tax-evading) (NN conman) (NNP Kent) (NNP Hovind))
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN disregarded)
                      (PP (IN as)
                        (NP (JJ utter) (NNS bogus))))))))))))
    (. .)))

nn(anything-3, Pretty-1)
amod(anything-3, much-2)
nsubj(put-4, anything-3)
root(ROOT-0, put-4)
prt(put-4, out-5)
dep(put-4, by-6)
pobj(by-6, CSE-7)
complm(is-14, that-9)
amod(Hovind-13, tax-evading-10)
nn(Hovind-13, conman-11)
nn(Hovind-13, Kent-12)
nsubj(is-14, Hovind-13)
xsubj(disregarded-17, Hovind-13)
dep(put-4, is-14)
conj_and(by-6, is-14)
aux(disregarded-17, to-15)
auxpass(disregarded-17, be-16)
xcomp(is-14, disregarded-17)
amod(bogus-20, utter-19)
prep_as(disregarded-17, bogus-20)

