(ROOT
  (S
    (NP
      (NP (DT The) (NN weight))
      (PP (IN of)
        (NP
          (NP (NN evidence))
          (PP (IN since)
            (NP (DT the) (JJ big) (NN bang))))))
    (VP (VBZ has)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB say)
              (PP (IN about)
                (NP (NNS conditions)))
              (PP (IN before)
                (NP (DT the) (JJ big) (NN bang))))))))
    (. .)))

det(weight-2, The-1)
nsubj(has-9, weight-2)
prep_of(weight-2, evidence-4)
det(bang-8, the-6)
amod(bang-8, big-7)
prep_since(evidence-4, bang-8)
root(ROOT-0, has-9)
dobj(has-9, nothing-10)
aux(say-12, to-11)
infmod(nothing-10, say-12)
prep_about(say-12, conditions-14)
det(bang-18, the-16)
amod(bang-18, big-17)
prep_before(say-12, bang-18)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (NNS laws))
        (VP (VBD governed))))
    (VP (VBP are)
      (NP
        (NP (DT the) (NN subject))
        (PP (IN of)
          (NP (JJ mere) (NN speculation)))))
    (. .)))

dobj(governed-3, What-1)
nsubj(governed-3, laws-2)
csubj(subject-6, governed-3)
cop(subject-6, are-4)
det(subject-6, the-5)
root(ROOT-0, subject-6)
amod(speculation-9, mere-8)
prep_of(subject-6, speculation-9)

(ROOT
  (S
    (NP (EX There))
    (ADVP (RB simply))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN experience))
        (CC and)
        (NP
          (NP (DT no) (JJ empirical) (NN evidence))
          (PP (IN from)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (TO to)
                  (VP (VB draw)
                    (NP (NNS conclusions))))))))))
    (. .)))

expl(is-3, There-1)
advmod(is-3, simply-2)
root(ROOT-0, is-3)
det(experience-5, no-4)
nsubj(is-3, experience-5)
det(evidence-9, no-7)
amod(evidence-9, empirical-8)
nsubj(is-3, evidence-9)
conj_and(experience-5, evidence-9)
nsubj(draw-13, which-11)
aux(draw-13, to-12)
prepc_from(evidence-9, draw-13)
dobj(draw-13, conclusions-14)

(ROOT
  (S
    (PP (IN As) (IN for)
      (NP
        (NP (NNS laws))
        (SBAR (IN as)
          (S
            (NP (PRP we))
            (VP (VBP know)
              (NP (PRP them)))))))
    (, ,)
    (NP (DT no) (NN one))
    (VP (VBZ has)
      (VP (VBN claimed)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (MD should)
              (VP (VB doubt)
                (NP (PRP them))))))))
    (. .)))

prep_as_for(claimed-12, laws-3)
mark(know-6, as-4)
nsubj(know-6, we-5)
dep(laws-3, know-6)
dobj(know-6, them-7)
det(one-10, no-9)
nsubj(claimed-12, one-10)
aux(claimed-12, has-11)
root(ROOT-0, claimed-12)
complm(doubt-16, that-13)
nsubj(doubt-16, we-14)
aux(doubt-16, should-15)
ccomp(claimed-12, doubt-16)
dobj(doubt-16, them-17)

(ROOT
  (S
    (ADVP (RB Certainly))
    (NP
      (NP (DT the) (NN possibility))
      (PP (IN of)
        (NP (DT a) (NNP God))))
    (VP (VBZ does) (RB not)
      (VP (VB preclude)
        (S
          (NP (PRP them))
          (ADJP (JJ fron))
          (S
            (VP (VBG functioning)
              (SBAR (RB just) (IN as)
                (S
                  (NP (PRP we))
                  (VP (VBP expect)
                    (S
                      (NP (PRP them))
                      (VP (TO to)))))))))))
    (. .)))

advmod(preclude-9, Certainly-1)
det(possibility-3, the-2)
nsubj(preclude-9, possibility-3)
det(God-6, a-5)
prep_of(possibility-3, God-6)
aux(preclude-9, does-7)
neg(preclude-9, not-8)
root(ROOT-0, preclude-9)
nsubj(functioning-12, them-10)
dep(functioning-12, fron-11)
xcomp(preclude-9, functioning-12)
advmod(expect-16, just-13)
dep(expect-16, as-14)
nsubj(expect-16, we-15)
ccomp(functioning-12, expect-16)
nsubj(to-18, them-17)
xcomp(expect-16, to-18)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD could)
        (VP (VB go)
          (ADVP (RB back)
            (CC and)
            (RB forth))
          (PP (IN with)
            (NP (DT a) (`` ``)
              (S
                (VP (VBD yes)
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP are))))
                  ('' '')
                  (SBAR (`` ``)
                    (S
                      (NP (DT no) (NN I))
                      (VP (VBP 'm) (RB not))))))
              ('' '') (NN conversation))))))
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ serves)
        (NP (DT no) (NN purpose))))
    (. .)))

nsubj(go-3, We-1)
aux(go-3, could-2)
root(ROOT-0, go-3)
advmod(go-3, back-4)
advmod(go-3, forth-6)
conj_and(back-4, forth-6)
det(conversation-20, a-8)
dep(conversation-20, yes-10)
nsubj(are-12, you-11)
ccomp(yes-10, are-12)
det(I-16, no-15)
nsubj('m-17, I-16)
ccomp(yes-10, 'm-17)
neg('m-17, not-18)
prep_with(go-3, conversation-20)
nsubj(serves-23, that-22)
conj_but(go-3, serves-23)
det(purpose-25, no-24)
dobj(serves-23, purpose-25)

(ROOT
  (S
    (S
      (VP (VBG Baring)
        (NP
          (NP (NN anything))
          (SBAR
            (WHNP (WDT that))
            (S
              (ADVP (RB actually))
              (VP (VBZ supports)
                (NP (DT the) (NN position))
                (SBAR (IN that)
                  (S
                    (NP (DT a) (NNP God))
                    (VP (MD would)
                      (VP (VB invalidate)
                        (NP (DT all) (JJ physical) (NNS laws))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ 's)
              (ADJP (RB much) (JJR more))
              (S
                (VP (TO to)
                  (VP (VB discuss)))))))))
    (. .)))

partmod(think-20, Baring-1)
dobj(Baring-1, anything-2)
nsubj(supports-5, anything-2)
advmod(supports-5, actually-4)
rcmod(anything-2, supports-5)
det(position-7, the-6)
dobj(supports-5, position-7)
complm(invalidate-12, that-8)
det(God-10, a-9)
nsubj(invalidate-12, God-10)
aux(invalidate-12, would-11)
ccomp(supports-5, invalidate-12)
det(laws-15, all-13)
amod(laws-15, physical-14)
dobj(invalidate-12, laws-15)
nsubj(think-20, I-17)
aux(think-20, do-18)
neg(think-20, n't-19)
root(ROOT-0, think-20)
expl('s-22, there-21)
xsubj(discuss-26, there-21)
ccomp(think-20, 's-22)
advmod(more-24, much-23)
acomp('s-22, more-24)
aux(discuss-26, to-25)
xcomp('s-22, discuss-26)

