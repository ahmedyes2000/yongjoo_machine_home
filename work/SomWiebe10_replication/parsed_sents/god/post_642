(ROOT
  (FRAG
    (ADVP (RB no) (RB no) (RB no))
    (NP (DT no) (NN no.))))

advmod(no-3, no-1)
advmod(no-3, no-2)
dep(no.-5, no-3)
det(no.-5, no-4)
root(ROOT-0, no.-5)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ perfect) (NN example))
        (PP (IN of)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP it))
              (VP (VBZ 's) (RB not)
                (NP
                  (NP (RB just) (JJ religious) (NNS people))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP
                        (VP (VBZ debating))
                        (CC but)
                        (VP (VBP do) (RB n't)
                          (VP
                            (VP (VB argue)
                              (CC and)
                              (VB change)
                              (NP (PRP$ their) (NNS minds)))
                            (CC and)
                            (VP (VB grow))))))))))))))
    (. .)))

nsubj(example-5, Here-1)
cop(example-5, is-2)
det(example-5, a-3)
amod(example-5, perfect-4)
root(ROOT-0, example-5)
advmod(people-13, how-7)
nsubj(people-13, it-8)
cop(people-13, 's-9)
neg(people-13, not-10)
advmod(people-13, just-11)
amod(people-13, religious-12)
prepc_of(example-5, people-13)
nsubj(debating-15, people-13)
nsubj(argue-19, people-13)
rcmod(people-13, debating-15)
aux(argue-19, do-17)
neg(argue-19, n't-18)
rcmod(people-13, argue-19)
conj_but(debating-15, argue-19)
conj_but(debating-15, change-21)
conj_and(argue-19, change-21)
poss(minds-23, their-22)
dobj(argue-19, minds-23)
conj_but(debating-15, grow-25)
conj_and(argue-19, grow-25)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do))))
    (, ,)
    (NP (PRP$ your) (NN judgement))
    (VP (VBZ is)
      (ADJP (RBR more) (JJ likely)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (VBN flawed)
                (PP (IN than)
                  (SBAR (IN if)
                    (S
                      (NP (PRP you))
                      (VP (VBD allowed)
                        (NP (PRP yourself))
                        (S
                          (VP (TO to)
                            (VP (VB listen)
                              (PP (TO to)
                                (NP (DT the) (JJ other) (NN side))))))))))))))))
    (. .)))

mark(do-3, If-1)
nsubj(do-3, you-2)
advcl(likely-9, do-3)
poss(judgement-6, your-5)
nsubj(likely-9, judgement-6)
cop(likely-9, is-7)
advmod(likely-9, more-8)
root(ROOT-0, likely-9)
aux(flawed-12, to-10)
auxpass(flawed-12, be-11)
xcomp(likely-9, flawed-12)
mark(allowed-16, if-14)
nsubj(allowed-16, you-15)
prepc_than(flawed-12, allowed-16)
dobj(allowed-16, yourself-17)
aux(listen-19, to-18)
xcomp(allowed-16, listen-19)
det(side-23, the-21)
amod(side-23, other-22)
prep_to(listen-19, side-23)

(ROOT
  (S
    (SBAR
      (X
        (X (DT The) (JJR more))
        (NP (NN evidence)))
      (S
        (NP (PRP you))
        (VP (VBP have))))
    (, ,)
    (X
      (X (DT the) (JJR better))
      (NP (DT the) (NN choice)))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB make)))
    (. .)))

det(more-2, The-1)
dep(evidence-3, more-2)
dep(have-5, evidence-3)
nsubj(have-5, you-4)
dep(make-13, have-5)
det(better-8, the-7)
dep(choice-10, better-8)
det(choice-10, the-9)
dep(make-13, choice-10)
nsubj(make-13, you-11)
aux(make-13, will-12)
root(ROOT-0, make-13)

(ROOT
  (SBARQ (RB So)
    (WHNP (WP what))
    (SQ (VBZ 's)
      (NP (PRP$ your) (NN point)))
    (. ?)))

advmod('s-3, So-1)
attr('s-3, what-2)
root(ROOT-0, 's-3)
poss(point-5, your-4)
nsubj('s-3, point-5)

(ROOT
  (S
    (NP (DT That) (NN everybody))
    (VP (MD should)
      (VP (VB hear)
        (NP (CD two) (NNS sides))
        (PP (TO to)
          (NP
            (NP (DT every) (JJ single) (NN story))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP hear))))))))
    (. ?)))

det(everybody-2, That-1)
nsubj(hear-4, everybody-2)
aux(hear-4, should-3)
root(ROOT-0, hear-4)
num(sides-6, two-5)
dobj(hear-4, sides-6)
det(story-10, every-8)
amod(story-10, single-9)
prep_to(hear-4, story-10)
dobj(hear-12, story-10)
nsubj(hear-12, they-11)
rcmod(story-10, hear-12)

(ROOT
  (S
    (ADVP (RB Ideally))
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ great))
        (PRN (, ,)
          (CC but)
          (ADVP (RB practically)))))
    (. ?)))

advmod(great-5, Ideally-1)
nsubj(great-5, it-2)
aux(great-5, would-3)
cop(great-5, be-4)
root(ROOT-0, great-5)
dep(practically-8, but-7)
dep(great-5, practically-8)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP (DT every) (JJ single) (NN person))
          (VP (MD should)
            (VP (VB know)
              (NP
                (NP (DT both) (NNS sides))
                (PP (IN of)
                  (NP (DT the) (NN story)))))))
        (. .)))
    (. .)))

nsubj(means-2, That-1)
root(ROOT-0, means-2)
complm(know-8, that-3)
det(person-6, every-4)
amod(person-6, single-5)
nsubj(know-8, person-6)
aux(know-8, should-7)
ccomp(means-2, know-8)
det(sides-10, both-9)
dobj(know-8, sides-10)
det(story-13, the-12)
prep_of(sides-10, story-13)

(ROOT
  (SQ (CC but)
    (VBZ does)
    (NP (NN everyone))
    (VP (VB know)
      (NP (DT both) (NNS sides)))
    (. ?)))

cc(know-4, but-1)
aux(know-4, does-2)
nsubj(know-4, everyone-3)
root(ROOT-0, know-4)
det(sides-6, both-5)
dobj(know-4, sides-6)

(ROOT
  (S
    (NP (DT Neither) (NNS theists)
      (CC or)
      (NNS atheists))
    (VP (VBP know)
      (NP
        (NP (DT both) (NNS sides))
        (PP (IN of)
          (NP (DT the) (NN story)))))
    (. .) (. .)))

preconj(theists-2, Neither-1)
nsubj(know-5, theists-2)
conj_or(theists-2, atheists-4)
nsubj(know-5, atheists-4)
root(ROOT-0, know-5)
det(sides-7, both-6)
dobj(know-5, sides-7)
det(story-10, the-9)
prep_of(sides-7, story-10)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP tend)
      (S
        (VP (TO to)
          (VP (VB know)
            (NP
              (NP (JJ little) (NNS parts))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN story))
                  (, ,)
                  (ADVP (RB mostly)))))
            (PP (IN on)
              (NP (PRP$ their) (NN side)))))))
    (. .)))

nsubj(tend-2, they-1)
xsubj(know-4, they-1)
root(ROOT-0, tend-2)
aux(know-4, to-3)
xcomp(tend-2, know-4)
amod(parts-6, little-5)
dobj(know-4, parts-6)
det(story-9, the-8)
prep_of(parts-6, story-9)
advmod(story-9, mostly-11)
poss(side-14, their-13)
prep_on(know-4, side-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP tell)
      (NP (PRP me))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (DT every) (JJ single) (NN person))
          (VP (MD would)
            (VP (VB learn)
              (NP (DT every) (JJ single) (NN story))
              (PP (IN on)
                (NP
                  (NP (DT every) (JJ single) (NN side))
                  (SBAR
                    (S
                      (NP (EX there))
                      (VP (VBZ is)))))))))))
    (. ?)))

nsubj(tell-2, You-1)
root(ROOT-0, tell-2)
dobj(tell-2, me-3)
advmod(learn-9, how-4)
det(person-7, every-5)
amod(person-7, single-6)
nsubj(learn-9, person-7)
aux(learn-9, would-8)
dep(tell-2, learn-9)
det(story-12, every-10)
amod(story-12, single-11)
dobj(learn-9, story-12)
det(side-16, every-14)
amod(side-16, single-15)
prep_on(learn-9, side-16)
expl(is-18, there-17)
rcmod(side-16, is-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBD listened)
        (PP (TO to)
          (NP
            (NP (DT both) (NNS sides))
            (PP (IN of)
              (NP (DT the) (NN story)))))))
    (. .)))

nsubj(listened-3, I-1)
aux(listened-3, have-2)
root(ROOT-0, listened-3)
det(sides-6, both-5)
prep_to(listened-3, sides-6)
det(story-9, the-8)
prep_of(sides-6, story-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (JJ true))
          (SBAR (IN that)
            (S
              (NP (JJ religious) (NNS people))
              (VP (VBP are) (RB n't)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB communicate))
                        (CONJP (RB as) (RB well) (IN as))
                        (VP
                          (NP (NNS politicians))
                          (ADVP (RB then)))))))))))))
    (NP (PRP you))
    (VP (MD would) (RB n't)
      (VP (VB have)
        (NP (DT any) (NNS converts))))
    (. .)))

mark(true-4, If-1)
nsubj(true-4, it-2)
cop(true-4, was-3)
advcl(have-21, true-4)
complm(able-10, that-5)
amod(people-7, religious-6)
nsubj(able-10, people-7)
cop(able-10, are-8)
neg(able-10, n't-9)
ccomp(true-4, able-10)
aux(communicate-12, to-11)
xcomp(able-10, communicate-12)
xcomp(able-10, politicians-16)
conj_and(communicate-12, politicians-16)
advmod(politicians-16, then-17)
nsubj(have-21, you-18)
aux(have-21, would-19)
neg(have-21, n't-20)
root(ROOT-0, have-21)
det(converts-23, any-22)
dobj(have-21, converts-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN been)
        (PP (IN on)
          (NP
            (NP (DT both) (NNS sides))
            (PP (IN of)
              (NP (DT the) (NN story)))))))
    (. .)))

nsubj(been-3, I-1)
aux(been-3, have-2)
root(ROOT-0, been-3)
det(sides-6, both-5)
prep_on(been-3, sides-6)
det(story-9, the-8)
prep_of(sides-6, story-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB now))
      (NP (DT a) (NN theist)))
    (. .)))

nsubj(theist-5, I-1)
cop(theist-5, am-2)
advmod(theist-5, now-3)
det(theist-5, a-4)
root(ROOT-0, theist-5)

(ROOT
  (S (CC But)
    (S
      (NP (NNP INFORMED) (NNS judgments))
      (VP (VBP come)
        (PP (IN from)
          (NP (JJR more) (NN evidence)))))
    (CC and)
    (S
      (ADVP (RB knowledgeOnly))
      (NP (DT the) (NNP INFORMED) (NN part))
      (VP (VBZ comes)
        (PP (IN from)
          (NP (NN evidence)
            (CC and)
            (NN knowledge)))))
    (. .)))

nn(judgments-3, INFORMED-2)
nsubj(come-4, judgments-3)
root(ROOT-0, come-4)
amod(evidence-7, more-6)
prep_from(come-4, evidence-7)
advmod(comes-13, knowledgeOnly-9)
det(part-12, the-10)
nn(part-12, INFORMED-11)
nsubj(comes-13, part-12)
conj_and(come-4, comes-13)
prep_from(comes-13, evidence-15)
prep_from(comes-13, knowledge-17)
conj_and(evidence-15, knowledge-17)

(ROOT
  (S
    (NP (NNP Judgement))
    (VP (VBZ is)
      (ADVP (RB always))
      (ADJP (JJ subjective)))
    (. .)))

nsubj(subjective-4, Judgement-1)
cop(subjective-4, is-2)
advmod(subjective-4, always-3)
root(ROOT-0, subjective-4)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBP hear) (`` ``)
          (NP (NN homosexuality)))))
    (VP (VBZ is)
      (ADJP (JJ wrong)))
    (. !)))

advmod(hear-3, When-1)
nsubj(hear-3, I-2)
advcl(wrong-7, hear-3)
csubj(wrong-7, hear-3)
dobj(hear-3, homosexuality-5)
cop(wrong-7, is-6)
root(ROOT-0, wrong-7)

(ROOT
  (S ('' '')
    (PP (IN from)
      (NP (DT a) (JJ religious) (NN person)))
    (, ,)
    (NP (DT no) (NN one))
    (VP (VBZ is)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB give)
              (NP (PRP me))
              (NP
                (NP (CD one) (NN reason))
                (PP (IN between)
                  (S
                    (VP (VBG stuttering)
                      (SBAR (IN that)
                        (S
                          (VP (VBZ does) (RB n't)
                            (VP (VB boil)
                              (PRT (RP down))
                              (PP (TO to) (`` ``)
                                (NP
                                  (NP (DT the) (NN word))
                                  (PP (IN of)
                                    (NP (NN god) ('' ''))))))))))))))))))
    (. .)))

det(person-5, a-3)
amod(person-5, religious-4)
prep_from(able-10, person-5)
det(one-8, no-7)
nsubj(able-10, one-8)
cop(able-10, is-9)
root(ROOT-0, able-10)
aux(give-12, to-11)
xcomp(able-10, give-12)
iobj(give-12, me-13)
num(reason-15, one-14)
dobj(give-12, reason-15)
prepc_between(reason-15, stuttering-17)
complm(boil-21, that-18)
aux(boil-21, does-19)
neg(boil-21, n't-20)
ccomp(stuttering-17, boil-21)
prt(boil-21, down-22)
det(word-26, the-25)
prep_to(boil-21, word-26)
prep_of(word-26, god-28)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN exampled))
        (PP (IN of)
          (NP
            (NP (DT a) (JJ moral) (NN judgement))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (ADJP (JJ uninformed)
                    (CC and)
                    (JJ inaccurate)))))))))
    (. .)))

nsubj(exampled-4, This-1)
cop(exampled-4, is-2)
det(exampled-4, an-3)
root(ROOT-0, exampled-4)
det(judgement-8, a-6)
amod(judgement-8, moral-7)
prep_of(exampled-4, judgement-8)
nsubj(uninformed-11, judgement-8)
nsubj(inaccurate-13, judgement-8)
cop(uninformed-11, is-10)
rcmod(judgement-8, uninformed-11)
rcmod(judgement-8, inaccurate-13)
conj_and(uninformed-11, inaccurate-13)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (VP (VBG talking)
              (PP (TO to)
                (NP (JJ religious) (NNS people)))
              (S
                (VP (VBG using)
                  (NP (JJ religious) (NNS answers)))))))))
    (. !)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
mark(talking-6, because-3)
nsubj(talking-6, you-4)
aux(talking-6, 're-5)
advcl('s-2, talking-6)
amod(people-9, religious-8)
prep_to(talking-6, people-9)
xcomp(talking-6, using-10)
amod(answers-12, religious-11)
dobj(using-10, answers-12)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB expect)
        (NP (NNS ?!))))))

dep(expect-4, What-1)
aux(expect-4, would-2)
nsubj(expect-4, you-3)
root(ROOT-0, expect-4)
dobj(expect-4, ?!-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (VBP are)
          (NP (NN reasoning))
          (ADVP (RB then)))))
    (NP (PRP they))
    (VP (VBP are)
      (ADJP (JJ informed)
        (CC and)
        (JJ accurate)))
    (. .)))

mark(reasoning-4, If-1)
nsubj(reasoning-4, they-2)
cop(reasoning-4, are-3)
advcl(informed-8, reasoning-4)
advmod(reasoning-4, then-5)
nsubj(informed-8, they-6)
nsubj(accurate-10, they-6)
cop(informed-8, are-7)
root(ROOT-0, informed-8)
conj_and(informed-8, accurate-10)

(ROOT
  (S
    (NP (NNS THIS))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP$ your) (JJ warped) (NN reality))
          (VP (VBZ is)
            (PP (IN in)
              (NP (NN play)))))))
    (. .)))

nsubj(is-2, THIS-1)
root(ROOT-0, is-2)
advmod(is-7, where-3)
poss(reality-6, your-4)
amod(reality-6, warped-5)
nsubj(is-7, reality-6)
advcl(is-2, is-7)
prep_in(is-7, play-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (ADVP (RB just))
          (VP (VBG talking)
            (NP (NN nonsense))
            (ADVP (RB then))))))
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJ same))
        (PP (IN as)
          (NP (DT an) (NN atheist) (VBG talking) (NN nonsense)))))
    (. .)))

mark(talking-5, If-1)
nsubj(talking-5, they-2)
aux(talking-5, 're-3)
advmod(talking-5, just-4)
advcl(same-11, talking-5)
dobj(talking-5, nonsense-6)
advmod(talking-5, then-7)
nsubj(same-11, it-8)
cop(same-11, 's-9)
det(same-11, the-10)
root(ROOT-0, same-11)
det(nonsense-16, an-13)
nn(nonsense-16, atheist-14)
amod(nonsense-16, talking-15)
prep_as(same-11, nonsense-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD wanted)
          (NP (DT an) (NN answer))
          (PP (IN without)
            (NP (NNP God)))
          (PP (IN in)
            (NP (PRP it))))))
    (, ,)
    (NP (PRP you))
    (VP (MD should)
      (VP
        (VP (VB pose)
          (NP (DT the) (NN question)))
        (CC and)
        (VP (VB say)
          (ADVP (RB so)))))
    (. .)))

mark(wanted-3, If-1)
nsubj(wanted-3, you-2)
advcl(pose-13, wanted-3)
det(answer-5, an-4)
dobj(wanted-3, answer-5)
prep_without(wanted-3, God-7)
prep_in(wanted-3, it-9)
nsubj(pose-13, you-11)
nsubj(say-17, you-11)
aux(pose-13, should-12)
root(ROOT-0, pose-13)
det(question-15, the-14)
dobj(pose-13, question-15)
conj_and(pose-13, say-17)
advmod(say-17, so-18)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ religious))))
    (CC but)
    (S
      (NP (PRP I))
      (ADVP (RB always))
      (VP (VBP try)
        (S
          (VP (TO to)
            (VP (VB give)
              (NP (DT a) (JJ non-religious) (NN answer))
              (SBAR (IN as)
                (S
                  (NP (PRP you))
                  (VP (VBP 've)
                    (VP (VBN seen)
                      (SBAR
                        (S
                          (NP (PRP me))
                          (VP (VBP do)))))))))))))
    (. .)))

nsubj(religious-3, I-1)
cop(religious-3, am-2)
root(ROOT-0, religious-3)
nsubj(try-7, I-5)
xsubj(give-9, I-5)
advmod(try-7, always-6)
conj_but(religious-3, try-7)
aux(give-9, to-8)
xcomp(try-7, give-9)
det(answer-12, a-10)
amod(answer-12, non-religious-11)
dobj(give-9, answer-12)
mark(seen-16, as-13)
nsubj(seen-16, you-14)
aux(seen-16, 've-15)
advcl(give-9, seen-16)
nsubj(do-18, me-17)
ccomp(seen-16, do-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NN problem))
      (PP (IN with)
        (NP (PRP you))))
    (VP (VBZ is)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP expect)
              (NP (JJ abnormal) (NNS responses)))))
        (CC and)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBP do) (RB n't)
              (VP (VB come)
                (S
                  (NP (PRP you))
                  (VP (VB blame)
                    (NP (PRP it))
                    (PP (IN on)
                      (NP (PRP$ their) (NN ignorance)))))))))))
    (. .)))

det(problem-2, The-1)
nsubj(is-5, problem-2)
prep_with(problem-2, you-4)
root(ROOT-0, is-5)
complm(expect-8, that-6)
nsubj(expect-8, you-7)
ccomp(is-5, expect-8)
amod(responses-10, abnormal-9)
dobj(expect-8, responses-10)
advmod(come-16, when-12)
nsubj(come-16, they-13)
aux(come-16, do-14)
neg(come-16, n't-15)
ccomp(is-5, come-16)
conj_and(expect-8, come-16)
nsubj(blame-18, you-17)
ccomp(come-16, blame-18)
dobj(blame-18, it-19)
poss(ignorance-22, their-21)
prep_on(blame-18, ignorance-22)

(ROOT
  (S
    (NP (NNP Questioning))
    (VP (VBZ does) (RB n't)
      (ADVP (RB just))
      (VP (VB mean)
        (S
          (VP (VBG going)
            (PP (IN against))))))
    (. .)))

nsubj(mean-5, Questioning-1)
aux(mean-5, does-2)
neg(mean-5, n't-3)
advmod(mean-5, just-4)
root(ROOT-0, mean-5)
xcomp(mean-5, going-6)
prep(going-6, against-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (S
        (VP
          (VP (TO to)
            (VP (VB question)))
          (CC and)
          (VP (TO to)
            (VP (VB be)
              (VP (VBN answered)))))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
aux(question-4, to-3)
ccomp(means-2, question-4)
aux(answered-8, to-6)
auxpass(answered-8, be-7)
ccomp(means-2, answered-8)
conj_and(question-4, answered-8)

(ROOT
  (SBARQ
    (WHADVP
      (ADVP (RB Question))
      (WRB Why))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB pray)))
    (. ?)))

advmod(Why-2, Question-1)
advmod(pray-5, Why-2)
aux(pray-5, do-3)
nsubj(pray-5, we-4)
root(ROOT-0, pray-5)

(ROOT
  (S
    (VP (VB Answer)
      (S
        (VP (TO To)
          (VP (VB show)
            (NP (PRP$ our) (NN faith))
            (PP (TO to)
              (NP (NNP God)))))))
    (. .)))

root(ROOT-0, Answer-1)
aux(show-3, To-2)
xcomp(Answer-1, show-3)
poss(faith-5, our-4)
dobj(show-3, faith-5)
prep_to(show-3, God-7)

(ROOT
  (FRAG
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP you))
              (VP (VBP 're)
                (PP (IN from))))))))
    (: ...)
    (FRAG (CC but)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (PP (IN from))
            (, ,)
            (S
              (VP (VBG questioning)
                (SBAR
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ normal))))))))))
      (. .))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
dep('m-13, know-4)
advmod('re-7, where-5)
nsubj('re-7, you-6)
advcl(know-4, 're-7)
prep('re-7, from-8)
dep('m-13, but-10)
advmod('m-13, where-11)
nsubj('m-13, I-12)
root(ROOT-0, 'm-13)
prep('m-13, from-14)
xcomp('m-13, questioning-16)
cop(normal-18, is-17)
ccomp(questioning-16, normal-18)

(ROOT
  (FRAG (RB not)
    (NP
      (NP (DT an) (NN attack))
      (PP (IN from)
        (NP (DT a) (NNP devil) (NNP lolololololLOL) (. !))))
    (. .)))

root(ROOT-0, not-1)
det(attack-3, an-2)
dep(not-1, attack-3)
det(lolololololLOL-7, a-5)
nn(lolololololLOL-7, devil-6)
prep_from(attack-3, lolololololLOL-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP mean)
            (PP (IN by)
              (S
                (VP (VBG questioning)
                  (SBAR
                    (S
                      (VP (VBZ is)
                        (S
                          (VP (TO to)
                            (VP (VB go)
                              (PP (IN against)))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
dobj(mean-5, what-3)
nsubj(mean-5, you-4)
ccomp(think-2, mean-5)
prepc_by(mean-5, questioning-7)
ccomp(questioning-7, is-8)
aux(go-10, to-9)
xcomp(is-8, go-10)
prep(go-10, against-11)

(ROOT
  (S
    (NP (NNP Religion))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ same))
        (PP (IN as)
          (NP
            (NP (NNS politics))
            (PP (IN in)
              (NP (DT this) (NN sense)))))))
    (. .)))

nsubj(same-4, Religion-1)
cop(same-4, is-2)
det(same-4, the-3)
root(ROOT-0, same-4)
prep_as(same-4, politics-6)
det(sense-9, this-8)
prep_in(politics-6, sense-9)

(ROOT
  (S
    (ADVP (RB Well))
    (NP (JJ obviously) (JJ religious) (NNS people))
    (VP (MD would) (RB n't)
      (VP (VB like)
        (NP (DT that))))
    (. .)))

advmod(like-7, Well-1)
amod(people-4, obviously-2)
amod(people-4, religious-3)
nsubj(like-7, people-4)
aux(like-7, would-5)
neg(like-7, n't-6)
root(ROOT-0, like-7)
dobj(like-7, that-8)

(ROOT
  (NP
    (NP
      (NP (DT The) (JJ same))
      (PP (IN as)
        (NP (NN somebody))))
    (VP (VBG questioning)
      (PP (IN within)
        (NP (DT a) (JJ political) (NN party))))
    (. .)))

det(same-2, The-1)
root(ROOT-0, same-2)
prep_as(same-2, somebody-4)
partmod(same-2, questioning-5)
det(party-9, a-7)
amod(party-9, political-8)
prep_within(questioning-5, party-9)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN overcome))))
    (. .) (. .)))

cc(overcome-5, And-1)
nsubjpass(overcome-5, it-2)
aux(overcome-5, should-3)
auxpass(overcome-5, be-4)
root(ROOT-0, overcome-5)

(ROOT
  (FRAG
    (WHADVP (WRB why))
    (NP (RB not))
    (. ?)))

dep(not-2, why-1)
root(ROOT-0, not-2)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR (IN that)
            (S
              (NP (NN science))
              (VP (VBZ does)
                (NP (NN nothing))))))))
    (, ,)
    (NP (PRP you))
    (VP (VB sound)
      (PP (IN like)
        (NP (DT a) (RB very) (JJ religious) (JJ uneducated) (NN person))))
    (. .)))

advmod(say-3, When-1)
nsubj(say-3, you-2)
advcl(sound-10, say-3)
complm(does-6, that-4)
nsubj(does-6, science-5)
ccomp(say-3, does-6)
dobj(does-6, nothing-7)
nsubj(sound-10, you-9)
root(ROOT-0, sound-10)
det(person-16, a-12)
advmod(person-16, very-13)
amod(person-16, religious-14)
amod(person-16, uneducated-15)
prep_like(sound-10, person-16)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ does)
      (NP (NN nothing) (NNS ?!)))))

nsubj(does-2, Science-1)
root(ROOT-0, does-2)
nn(?!-4, nothing-3)
dobj(does-2, ?!-4)

(ROOT
  (NP
    (NP (NN geez))
    (, ,)
    (NP
      (NP (RB now))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ sounds)
            (ADJP (RB close) (JJ minded))))))
    (. ?)))

root(ROOT-0, geez-1)
appos(geez-1, now-3)
nsubj(sounds-5, now-3)
rcmod(now-3, sounds-5)
advmod(minded-7, close-6)
acomp(sounds-5, minded-7)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (JJ scientific) (NN method))
        (PP (IN of)
          (NP (NN reasoning))))
      (ADVP (RB actually))
      (VP (VBZ tells)
        (S
          (NP (PRP us))
          (VP (TO to)
            (VP (VB start)
              (NP (DT all) (NNS inquiries))
              (PP (IN with)
                (NP (DT the) (NN premise)))
              (SBAR (IN that)
                (S
                  (NP (PRP we))
                  (VP (VBP do) (RB not)
                    (VP (VB know))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB thus))
      (, ,)
      (NP (PRP we))
      (VP (VBP keep)
        (PP (IN on)
          (S
            (VP (VBG searching))))))
    (. .)))

det(method-3, A-1)
amod(method-3, scientific-2)
nsubj(tells-7, method-3)
prep_of(method-3, reasoning-5)
advmod(tells-7, actually-6)
root(ROOT-0, tells-7)
nsubj(start-10, us-8)
aux(start-10, to-9)
xcomp(tells-7, start-10)
det(inquiries-12, all-11)
dobj(start-10, inquiries-12)
det(premise-15, the-14)
prep_with(start-10, premise-15)
complm(know-20, that-16)
nsubj(know-20, we-17)
aux(know-20, do-18)
neg(know-20, not-19)
ccomp(start-10, know-20)
advmod(keep-26, thus-23)
nsubj(keep-26, we-25)
conj_and(tells-7, keep-26)
prepc_on(keep-26, searching-28)

(ROOT
  (S
    (NP (NNP Hmmmm))
    (VP (VBP are)
      (S
        (NP (PRP you))
        (ADJP (JJ sure))
        (SBAR
          (S
            (NP
              (NP (DT all))
              (PP (IN of)
                (NP (PRP$ your) (NN brain) (NNS cells))))
            (VP (VBP are)
              (VP (VBN connected)
                (S
                  (VP (VBG ??)
                    (SBAR
                      (SBARQ
                        (WHNP (WP What))
                        (SQ (VBZ does)
                          (NP (NN science))
                          (VP (VB do)))
                        (. ?)))))))))))))

nsubj(are-2, Hmmmm-1)
root(ROOT-0, are-2)
nsubjpass(connected-11, you-3)
dep(connected-11, sure-4)
nsubjpass(connected-11, all-5)
poss(cells-9, your-7)
nn(cells-9, brain-8)
prep_of(all-5, cells-9)
auxpass(connected-11, are-10)
xcomp(are-2, connected-11)
xcomp(connected-11, ??-12)
dobj(do-16, What-13)
aux(do-16, does-14)
nsubj(do-16, science-15)
dep(??-12, do-16)

(ROOT
  (NP (NN Nothing) (. .)))

root(ROOT-0, Nothing-1)

(ROOT
  (S
    (NP
      (NP (NN Everything))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD said)
            (PP (IN about)
              (NP (NN religion)))))))
    (VP (VBZ is)
      (ADJP (JJ applicable)
        (PP (TO to)
          (NP
            (NP (NNS politics))
            (PP (IN in)
              (NP (DT that)
                (NX
                  (NX (NN paragraph))
                  (CC and)
                  (NX (NN vice) (NNS versa)))))))))
    (. .)))

dobj(said-3, Everything-1)
nsubj(applicable-7, Everything-1)
nsubj(said-3, you-2)
rcmod(Everything-1, said-3)
prep_about(said-3, religion-5)
cop(applicable-7, is-6)
root(ROOT-0, applicable-7)
prep_to(applicable-7, politics-9)
det(paragraph-12, that-11)
prep_in(politics-9, paragraph-12)
nn(versa-15, vice-14)
prep_in(politics-9, versa-15)
conj_and(paragraph-12, versa-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN APPLICATION))
        (PP (IN of)
          (NP (NN science)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ does)
              (NP (NN something)))))))
    (. .)))

nsubj(APPLICATION-4, It-1)
cop(APPLICATION-4, 's-2)
det(APPLICATION-4, the-3)
root(ROOT-0, APPLICATION-4)
nsubj(does-8, APPLICATION-4)
prep_of(APPLICATION-4, science-6)
rcmod(APPLICATION-4, does-8)
dobj(does-8, something-9)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP
        (VP (VB use)
          (NP (NN science))
          (PP (TO to)
            (NP (NNS oppress))))
        (CC or)
        (VP (VB free) (, ,) (VB heal)
          (CC or)
          (VB harm) (, ,) (VB build)
          (CC or)
          (VB destroy))))
    (. .)))

nsubj(use-3, We-1)
nsubj(free-8, We-1)
aux(use-3, can-2)
root(ROOT-0, use-3)
dobj(use-3, science-4)
prep_to(use-3, oppress-6)
conj_or(use-3, free-8)
conj_or(use-3, heal-10)
conj_or(free-8, heal-10)
conj_or(use-3, harm-12)
conj_or(free-8, harm-12)
conj_or(use-3, build-14)
conj_or(free-8, build-14)
conj_or(use-3, destroy-16)
conj_or(free-8, destroy-16)

(ROOT
  (S
    (S
      (NP (NNP Science))
      (VP (VBZ does)
        (NP (NN jack) (NN shit))))
    (, ,)
    (CC but)
    (S
      (S
        (NP
          (NP
            (NP (DT the) (NN application)
              (CC or)
              (NN use))
            (PP (IN of)
              (NP (NN science))))
          (PRN (-LRB- -LRB-)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (NP
                    (NP (DT the) (NN umbrella) (NN term))
                    (PP (IN for)
                      (NP (NN knowledge)))))))
            (-RRB- -RRB-)))
        (VP (VBZ does)
          (NP (NN something))))
      (CC and)
      (S
        (ADVP (RB ultimately))
        (NP (DT that))
        (VP (VBZ 's)
          (VP (VBN based)
            (PP (IN on)
              (NP
                (NP (NNS people) (POS 's))
                (NNS actions)
                (CC and)
                (NNS judgements)))))))
    (. .)))

nsubj(does-2, Science-1)
root(ROOT-0, does-2)
nn(shit-4, jack-3)
dobj(does-2, shit-4)
det(application-8, the-7)
nsubj(does-22, application-8)
conj_or(application-8, use-10)
nsubj(does-22, use-10)
prep_of(application-8, science-12)
nsubj(term-18, which-14)
cop(term-18, is-15)
det(term-18, the-16)
nn(term-18, umbrella-17)
dep(application-8, term-18)
prep_for(term-18, knowledge-20)
conj_but(does-2, does-22)
dobj(does-22, something-23)
advmod(based-28, ultimately-25)
nsubjpass(based-28, that-26)
auxpass(based-28, 's-27)
conj_but(does-2, based-28)
conj_and(does-22, based-28)
poss(actions-32, people-30)
prep_on(based-28, actions-32)
prep_on(based-28, judgements-34)
conj_and(actions-32, judgements-34)

(ROOT
  (S
    (NP (NNP Faith))
    (VP (VBZ is) (RB not)
      (VP (VBN based)
        (PP (IN on)
          (NP
            (NP (NN lack))
            (PP (IN of)
              (NP (NN evidence)))))))
    (. .)))

nsubjpass(based-4, Faith-1)
auxpass(based-4, is-2)
neg(based-4, not-3)
root(ROOT-0, based-4)
prep_on(based-4, lack-6)
prep_of(lack-6, evidence-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (ADJP (JJ true)
            (NP (RB then) (DT every) (JJ religious) (NN person)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (VP (VBN confronted)))))))
    (VP (MD would)
      (VP (VB say)))
    (. ...)))

mark(true-4, If-1)
nsubj(true-4, it-2)
cop(true-4, was-3)
csubj(say-12, true-4)
advmod(person-8, then-5)
det(person-8, every-6)
amod(person-8, religious-7)
dep(true-4, person-8)
advmod(confronted-10, when-9)
advcl(true-4, confronted-10)
aux(say-12, would-11)
root(ROOT-0, say-12)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBZ is)
      (ADJP (JJ real))
      (ADVP (DT no) (NN matter)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP say))))))
    (. .)))

nsubj(real-3, God-1)
cop(real-3, is-2)
root(ROOT-0, real-3)
dep(matter-5, no-4)
advmod(real-3, matter-5)
dobj(say-8, what-6)
nsubj(say-8, you-7)
dep(matter-5, say-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP do) (RB n't))
    (. .) (. .)))

nsubj(do-2, They-1)
root(ROOT-0, do-2)
neg(do-2, n't-3)

(ROOT
  (S
    (S
      (NP (PRP they))
      (VP (VBP have)
        (NP (NNS arguments))))
    (PRN (, ,)
      (S
        (NP (NNS debates))
        (VP (VBZ etc.)
          (SBAR (IN if)
            (S
              (NP (PRP$ your) (NN judgement))
              (VP (VBZ is)
                (VP (VBN based)
                  (PP (IN on)
                    (NP (DT the) (JJ unfounded) (NN belief)))
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (NNS people))
                        (PP (IN from)
                          (NP (JJ other) (NNS countries))))
                      (VP (VBP are)
                        (ADJP (JJ inferior)))))))))))
      (, ,))
    (RB then)
    (S
      (NP (PRP$ your) (NN judgement))
      (VP (MD will)
        (VP (VB be)
          (NP
            (NP (JJ wrongWait) (NN wait) (NN wait))
            (NP (DT a) (NN minute))))))
    (. .)))

nsubj(have-2, they-1)
root(ROOT-0, have-2)
dobj(have-2, arguments-3)
nsubj(etc.-6, debates-5)
dep(have-2, etc.-6)
mark(based-11, if-7)
poss(judgement-9, your-8)
nsubjpass(based-11, judgement-9)
auxpass(based-11, is-10)
advcl(etc.-6, based-11)
det(belief-15, the-13)
amod(belief-15, unfounded-14)
prep_on(based-11, belief-15)
complm(inferior-22, that-16)
nsubj(inferior-22, people-17)
amod(countries-20, other-19)
prep_from(people-17, countries-20)
cop(inferior-22, are-21)
ccomp(based-11, inferior-22)
advmod(have-2, then-24)
poss(judgement-26, your-25)
nsubj(wait-31, judgement-26)
aux(wait-31, will-27)
cop(wait-31, be-28)
amod(wait-31, wrongWait-29)
nn(wait-31, wait-30)
ccomp(have-2, wait-31)
det(minute-33, a-32)
dep(wait-31, minute-33)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (VP (VBZ 's)
              (ADJP (RB wrong) (JJ ??)))))))))

nsubj(said-2, Who-1)
root(ROOT-0, said-2)
complm(??-6, that-3)
cop(??-6, 's-4)
advmod(??-6, wrong-5)
ccomp(said-2, ??-6)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ is)
      (NP (PRP it))
      (ADJP (JJ wrong)
        (S
          (VP (TO to)
            (VP (VB believe)
              (SBAR
                (S
                  (NP
                    (NP (NNS people))
                    (PP (IN from)
                      (NP (JJ other) (NNS countries))))
                  (VP (VBP are)
                    (ADJP (JJ inferior))))))))))
    (. ?)))

advmod(wrong-4, Why-1)
cop(wrong-4, is-2)
nsubj(wrong-4, it-3)
root(ROOT-0, wrong-4)
aux(believe-6, to-5)
xcomp(wrong-4, believe-6)
nsubj(inferior-12, people-7)
amod(countries-10, other-9)
prep_from(people-7, countries-10)
cop(inferior-12, are-11)
ccomp(believe-6, inferior-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADVP (RB still))
      (VP (VBG hoping)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN god))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP believe)
                    (PRT (RP in))))))
            (VP (VBZ is)
              (ADJP (JJ real))
              (SBAR (IN in) (NN order)
                (S
                  (VP (TO to)
                    (VP (VB base)
                      (NP (PRP$ your) (NN morality))
                      (PP (IN on)
                        (NP
                          (NP
                            (NP (PRP it))
                            (PRN (-LRB- -LRB-)
                              (X (NN etc.))
                              (-RRB- -RRB-)))
                          (SBAR
                            (S
                              (NP (PRP You))
                              (VP (VBD did)
                                (NP (PRP it))
                                (ADVP (RB again))))))))))))))))
    (. .)))

nsubj(hoping-4, You-1)
aux(hoping-4, are-2)
advmod(hoping-4, still-3)
root(ROOT-0, hoping-4)
complm(real-12, that-5)
det(god-7, the-6)
dobj(believe-9, god-7)
nsubj(real-12, god-7)
nsubj(believe-9, you-8)
rcmod(god-7, believe-9)
prt(believe-9, in-10)
cop(real-12, is-11)
ccomp(hoping-4, real-12)
mark(base-16, in-13)
dep(base-16, order-14)
aux(base-16, to-15)
purpcl(real-12, base-16)
poss(morality-18, your-17)
dobj(base-16, morality-18)
prep_on(base-16, it-20)
dep(it-20, etc.-22)
nsubj(did-25, You-24)
rcmod(it-20, did-25)
dobj(did-25, it-26)
advmod(did-25, again-27)

(ROOT
  (S
    (NP (PRP YOU))
    (VP (VBD said)
      (SBAR
        (S
          (NP
            (NP (DT that))
            (CC and)
            (NP (DT that)))
          (VP (VBZ 's)
            (VP (VBN based)
              (PP (IN on)
                (NP (JJ YOUR) (NN opinion))))))))
    (. .)))

nsubj(said-2, YOU-1)
root(ROOT-0, said-2)
nsubjpass(based-7, that-3)
conj_and(that-3, that-5)
nsubjpass(based-7, that-5)
auxpass(based-7, 's-6)
ccomp(said-2, based-7)
amod(opinion-10, YOUR-9)
prep_on(based-7, opinion-10)

(ROOT
  (SBARQ
    (WHADVP
      (ADVP (RB However))
      (WRB where))
    (SQ (VBD did)
      (NP (PRP I))
      (VP (VB mention)
        (NP (DT this) (NN ??))))))

advmod(where-2, However-1)
advmod(mention-5, where-2)
aux(mention-5, did-3)
nsubj(mention-5, I-4)
root(ROOT-0, mention-5)
det(??-7, this-6)
dobj(mention-5, ??-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG wasting)
        (NP (JJ internet) (NN space))
        (PP (IN by)
          (S
            (VP (VBG talking)
              (PP (IN about)
                (NP
                  (ADJP (RB completely) (JJ non))
                  (JJ related) (NN crap))))))))
    (. .)))

nsubj(wasting-3, You-1)
aux(wasting-3, 're-2)
root(ROOT-0, wasting-3)
amod(space-5, internet-4)
dobj(wasting-3, space-5)
prepc_by(wasting-3, talking-7)
advmod(non-10, completely-9)
amod(crap-12, non-10)
amod(crap-12, related-11)
prep_about(talking-7, crap-12)

(ROOT
  (S
    (PP (IN For)
      (NP (DT a) (NN judgement)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN made)))))))
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP (DT a) (NN target))))))
    (. .)))

det(judgement-3, a-2)
prep_for(have-8, judgement-3)
aux(made-6, to-4)
auxpass(made-6, be-5)
infmod(judgement-3, made-6)
nsubj(have-8, you-7)
xsubj(have-10, you-7)
root(ROOT-0, have-8)
aux(have-10, to-9)
xcomp(have-8, have-10)
det(target-12, a-11)
dobj(have-10, target-12)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN case)))
    (NP (NNP let) (POS 's))
    (VP (VBP use)
      (NP
        (NP (DT a) (NN nation))
        (PP (IN as)
          (NP (DT an) (NN example)))))
    (. .)))

det(case-3, this-2)
prep_in(use-6, case-3)
nsubj(use-6, let-4)
possessive(let-4, 's-5)
root(ROOT-0, use-6)
det(nation-8, a-7)
dobj(use-6, nation-8)
det(example-11, an-10)
prep_as(nation-8, example-11)

(ROOT
  (S
    (NP
      (NP (NNP A) (POS 's))
      (NN target))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP
              (NP (PRP$ his) (NN nation))
              (SBAR
                (S
                  (NP (DT a) (JJ religious) (, ,)
                    (ADJP (JJ clean) (, ,) (JJ fair))
                    (, ,) (NN community))
                  (VP (VBN based)
                    (NP
                      (NP (NN society))
                      (PP (IN for)
                        (NP
                          (NP (PRP it) (POS 's))
                          (JJ own) (NNS people))))))))))))
    (. .)))

poss(target-3, A-1)
nsubj(is-4, target-3)
xsubj(make-6, target-3)
root(ROOT-0, is-4)
aux(make-6, to-5)
xcomp(is-4, make-6)
poss(nation-8, his-7)
dobj(make-6, nation-8)
det(community-16, a-9)
amod(community-16, religious-10)
amod(fair-14, clean-12)
amod(community-16, fair-14)
nsubj(based-17, community-16)
rcmod(nation-8, based-17)
dobj(based-17, society-18)
poss(people-23, it-20)
amod(people-23, own-22)
prep_for(society-18, people-23)

(ROOT
  (S
    (NP
      (NP (NNP B) (POS 's))
      (NN target))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (PRP$ his) (NN nation))
            (NP
              (NP (DT an) (JJ industrial))
              (, ,)
              (NP
                (NP (NN superpower))
                (VP (VBN based)
                  (PP (IN on)
                    (NP (NN capital)))
                  (ADVP (RB regardless)
                    (PP (IN of)
                      (NP (NNS costs)))))))))))
    (. .)))

poss(target-3, B-1)
nsubj(is-4, target-3)
xsubj(make-6, target-3)
root(ROOT-0, is-4)
aux(make-6, to-5)
xcomp(is-4, make-6)
poss(nation-8, his-7)
dep(make-6, nation-8)
det(industrial-10, an-9)
dobj(make-6, industrial-10)
appos(industrial-10, superpower-12)
partmod(superpower-12, based-13)
prep_on(based-13, capital-15)
prep_regardless_of(based-13, costs-18)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (NNP A))
    (VP (MD would) (RB not)
      (VP (VB allow)
        (NP (NNS immigrants))))
    (. .)))

advmod(allow-6, Now-1)
nsubj(allow-6, A-3)
aux(allow-6, would-4)
neg(allow-6, not-5)
root(ROOT-0, allow-6)
dobj(allow-6, immigrants-7)

(ROOT
  (FRAG
    (SBAR (RB Not) (IN because)
      (S
        (NP (PRP he))
        (VP (VBZ does) (RB n't)
          (VP (VB have)
            (NP
              (NP (NN information)
                (CC or)
                (NN knowledge))
              (PP (IN about)
                (NP (PRP them)))))))
      (. .))
    (. .)))

dep(have-6, Not-1)
dep(have-6, because-2)
nsubj(have-6, he-3)
aux(have-6, does-4)
neg(have-6, n't-5)
root(ROOT-0, have-6)
dobj(have-6, information-7)
dobj(have-6, knowledge-9)
conj_or(information-7, knowledge-9)
prep_about(information-7, them-11)

(ROOT
  (FRAG (CC but)
    (SBAR (IN because)
      (S
        (NP (PRP it))
        (VP (VBZ does) (RB n't)
          (VP (VB agree)
            (PP (IN with)
              (NP (PRP$ his) (NN goal)))))))
    (. .)))

dep(agree-6, but-1)
mark(agree-6, because-2)
nsubj(agree-6, it-3)
aux(agree-6, does-4)
neg(agree-6, n't-5)
root(ROOT-0, agree-6)
poss(goal-9, his-8)
prep_with(agree-6, goal-9)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP I))
      (VP (VB argue)
        (PP (IN with)
          (NP (PRP you)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (S
              (ADVP (RB either))
              (NP (PRP you))
              (VP (VBP do) (RB n't)
                (VP (VB read)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP I))
                      (VP (VBD wrote)))))))
            (CC or)
            (S
              (NP (PRP you))
              (VP (VBP do) (RB n't)
                (VP (VB understand)
                  (NP (PRP it)))))))))
    (. .)))

advmod(argue-4, How-1)
aux(argue-4, can-2)
nsubj(argue-4, I-3)
root(ROOT-0, argue-4)
prep_with(argue-4, you-6)
advmod(read-12, when-7)
advmod(read-12, either-8)
nsubj(read-12, you-9)
aux(read-12, do-10)
neg(read-12, n't-11)
advcl(argue-4, read-12)
dobj(wrote-15, what-13)
nsubj(wrote-15, I-14)
ccomp(read-12, wrote-15)
nsubj(understand-20, you-17)
aux(understand-20, do-18)
neg(understand-20, n't-19)
advcl(argue-4, understand-20)
conj_or(read-12, understand-20)
dobj(understand-20, it-21)

(ROOT
  (S (-LRB- -LRB-)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB mean)
        (NP (NN asylum) (NNS seekers))))
    (, ,)
    (S
      (S
        (NP (RB simply) (NNS people))
        (VP (VBG moving)
          (PRT (RP over))
          (NP (DT the) (NN border))
          (PP (IN for)
            (NP
              (NP (NNS jobs))
              (, ,)
              (NP (FW lifestyle) (FW etc.))))
          (-RRB- -RRB-)))
      (CC Or)
      (S
        (NP (PRP he))
        (VP (MD might)
          (VP (VB allow)
            (NP (DT a) (JJ few))
            (SBAR (IN if)
              (S
                (NP (PRP they))
                (VP (VBD were)
                  (ADJP (JJ similar)
                    (PP (TO to)
                      (NP (PRP$ his) (NN model) (NN society)))))))))))
    (. .)))

nsubj(mean-5, I-2)
aux(mean-5, do-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
nn(seekers-7, asylum-6)
dobj(mean-5, seekers-7)
advmod(people-10, simply-9)
nsubj(moving-11, people-10)
ccomp(mean-5, moving-11)
prt(moving-11, over-12)
det(border-14, the-13)
dobj(moving-11, border-14)
prep_for(moving-11, jobs-16)
nn(etc.-19, lifestyle-18)
appos(jobs-16, etc.-19)
nsubj(allow-24, he-22)
aux(allow-24, might-23)
ccomp(mean-5, allow-24)
conj_or(moving-11, allow-24)
det(few-26, a-25)
dobj(allow-24, few-26)
mark(similar-30, if-27)
nsubj(similar-30, they-28)
cop(similar-30, were-29)
advcl(allow-24, similar-30)
poss(society-34, his-32)
nn(society-34, model-33)
prep_to(similar-30, society-34)

(ROOT
  (S
    (NP (NNP B))
    (VP (MD would)
      (VP (VB allow)
        (NP (NNS immigrants))
        (SBAR (IN as)
          (S
            (NP (DT that))
            (VP (MD would)
              (VP (VB provide)
                (NP (DT a) (JJ quick) (NN solution))
                (PP (TO to)
                  (NP
                    (NP (NN workforce))
                    (, ,)
                    (NP
                      (NP (JJ cheap) (NN labor))
                      (, ,)
                      (NP (JJ manual) (NN labor) (NN etc.)))))))))))
    (. .)))

nsubj(allow-3, B-1)
aux(allow-3, would-2)
root(ROOT-0, allow-3)
dobj(allow-3, immigrants-4)
mark(provide-8, as-5)
nsubj(provide-8, that-6)
aux(provide-8, would-7)
advcl(allow-3, provide-8)
det(solution-11, a-9)
amod(solution-11, quick-10)
dobj(provide-8, solution-11)
prep_to(provide-8, workforce-13)
amod(labor-16, cheap-15)
appos(workforce-13, labor-16)
amod(etc.-20, manual-18)
nn(etc.-20, labor-19)
appos(labor-16, etc.-20)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD might) (RB not)
      (VP (VB use)
        (NP (NN information)
          (CC or)
          (NN knowledge))
        (PP (IN about)
          (NP (PRP them)))))
    (. .) (. .)))

nsubj(use-4, He-1)
aux(use-4, might-2)
neg(use-4, not-3)
root(ROOT-0, use-4)
dobj(use-4, information-5)
dobj(use-4, knowledge-7)
conj_or(information-5, knowledge-7)
prep_about(use-4, them-9)

(ROOT
  (S (CC but)
    (SBAR (IN if)
      (S
        (NP (PRP he))
        (VP (VBZ wants)
          (NP (PRP them)))))
    (NP (PRP he))
    (VP (MD will)
      (VP (VB go)
        (PP (IN for)
          (NP (PRP them)))))
    (. .)))

cc(go-8, but-1)
mark(wants-4, if-2)
nsubj(wants-4, he-3)
dep(go-8, wants-4)
dobj(wants-4, them-5)
nsubj(go-8, he-6)
aux(go-8, will-7)
root(ROOT-0, go-8)
prep_for(go-8, them-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can) (RB not)
      (VP (VB say)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP one))
            (VP (VBZ has)
              (VP (VBN made)
                (NP (DT the) (JJR better) (NN law))
                (SBAR (RB just) (IN because)
                  (S
                    (NP (PRP it))
                    (VP (VBZ goes)
                      (PP (IN against)
                        (NP (PRP$ your) (JJ own) (NN ideology))))))))))))
    (. .)))

nsubj(say-4, You-1)
aux(say-4, can-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
dobj(made-8, which-5)
nsubj(made-8, one-6)
aux(made-8, has-7)
ccomp(say-4, made-8)
det(law-11, the-9)
amod(law-11, better-10)
dobj(made-8, law-11)
advmod(goes-15, just-12)
dep(goes-15, because-13)
nsubj(goes-15, it-14)
dep(made-8, goes-15)
poss(ideology-19, your-17)
amod(ideology-19, own-18)
prep_against(goes-15, ideology-19)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNS countries))
        (VP (VBP ban)
          (NP
            (NP (NN homosexuality))
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ is)
                  (NP (PRP it))
                  (SBAR (IN for)
                    (S
                      (NP (PRP you))
                      (VP (TO to)
                        (VP (VB say))))))))))))
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ right)
        (CC or)
        (JJ wrong)))
    (. ?)))

mark(ban-3, If-1)
nsubj(ban-3, countries-2)
advcl(right-14, ban-3)
dobj(ban-3, homosexuality-4)
nsubj(it-7, homosexuality-4)
cop(it-7, is-6)
rcmod(homosexuality-4, it-7)
mark(say-11, for-8)
nsubj(say-11, you-9)
aux(say-11, to-10)
advcl(it-7, say-11)
xcomp(it-7, say-11)
nsubj(right-14, it-12)
nsubj(wrong-16, it-12)
cop(right-14, 's-13)
root(ROOT-0, right-14)
conj_or(right-14, wrong-16)

(ROOT
  (S
    (NP
      (NP (DT The) (NN majority))
      (PP (IN of)
        (NP
          (NP (NNS people))
          (PP (IN in)
            (NP (DT this) (NN world))))))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (NP (NNS gays))))
    (. .)))

det(majority-2, The-1)
nsubj(want-10, majority-2)
prep_of(majority-2, people-4)
det(world-7, this-6)
prep_in(people-4, world-7)
aux(want-10, do-8)
neg(want-10, n't-9)
root(ROOT-0, want-10)
dobj(want-10, gays-11)

(ROOT
  (SQ (NNP Does)
    (NP (DT that))
    (VP (VB mean)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (JJ wrong)
              (PP (IN for)
                (NP (DT a) (NN country))))
            (S
              (VP (TO to)
                (VP (VB ban)
                  (NP (PRP it)))))))))
    (. ?)))

dep(mean-3, Does-1)
nsubj(mean-3, that-2)
root(ROOT-0, mean-3)
nsubj(wrong-6, it-4)
xsubj(ban-11, it-4)
cop(wrong-6, 's-5)
ccomp(mean-3, wrong-6)
det(country-9, a-8)
prep_for(wrong-6, country-9)
aux(ban-11, to-10)
xcomp(wrong-6, ban-11)
dobj(ban-11, it-12)

(ROOT
  (S
    (NP (NN Evidence))
    (VP (VBZ is)
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB argue)
              (PP (IN for)
                (CC and)
                (IN against)
                (NP (NN religion))))))))
    (. .)))

nsubjpass(used-3, Evidence-1)
xsubj(argue-5, Evidence-1)
auxpass(used-3, is-2)
root(ROOT-0, used-3)
aux(argue-5, to-4)
xcomp(used-3, argue-5)
xcomp(used-3, argue-5')
conj_and(argue-5, argue-5')
prep_against(argue-5', religion-9)
prep_for(argue-5, religion-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP think)
      (SBAR
        (S
          (NP (NN science)
            (CC and)
            (NN religion))
          (VP (VBZ is)
            (ADJP (RB mutually) (JJ exclusive))))))
    (. .)))

nsubj(think-2, You-1)
root(ROOT-0, think-2)
nsubj(exclusive-8, science-3)
conj_and(science-3, religion-5)
nsubj(exclusive-8, religion-5)
cop(exclusive-8, is-6)
advmod(exclusive-8, mutually-7)
ccomp(think-2, exclusive-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG basing)
        (NP
          (NP (DT this))
          (PP (IN on)
            (NP
              (NP (NN lack))
              (PP (IN of)
                (NP (NN evidence))))))))
    (. .)))

nsubj(basing-3, You-1)
aux(basing-3, 're-2)
root(ROOT-0, basing-3)
dobj(basing-3, this-4)
prep_on(this-4, lack-6)
prep_of(lack-6, evidence-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD did)
          (NP (DT both))
          (ADVP (RB then)))))
    (NP (PRP you))
    (VP (MD would) (RB n't)
      (VP (VB have)
        (VP (VBN put)
          (ADVP (RB that) (RB down)))))
    (. .)))

mark(did-3, If-1)
nsubj(did-3, you-2)
advcl(put-10, did-3)
dobj(did-3, both-4)
advmod(did-3, then-5)
nsubj(put-10, you-6)
aux(put-10, would-7)
neg(put-10, n't-8)
aux(put-10, have-9)
root(ROOT-0, put-10)
advmod(down-12, that-11)
advmod(put-10, down-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (S
          (NP
            (NP (CD two) (NNS friends))
            (PP (IN of)
              (NP (NNP yours))))
          (VP (VBP get)
            (PP (IN into)
              (NP (DT a) (NN fight)))))
        (CC and)
        (S
          (NP (PRP one))
          (VP (VBZ comes)
            (S
              (VP (TO to)
                (VP (VB tell)
                  (NP (PRP you))
                  (PP (IN about)
                    (NP (DT the) (NN situation))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (NP (DT the) (NN choice)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (DT a) (NN judgement))
              (PP (IN without)
                (S
                  (VP (VBG listening)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (JJ other) (NN side))
                        (PP (IN of)
                          (NP (DT the) (NN story)))))))))))))
    (. .)))

advmod(get-6, When-1)
num(friends-3, two-2)
nsubj(get-6, friends-3)
prep_of(friends-3, yours-5)
advcl(have-21, get-6)
det(fight-9, a-8)
prep_into(get-6, fight-9)
nsubj(comes-12, one-11)
xsubj(tell-14, one-11)
conj_and(get-6, comes-12)
advcl(have-21, comes-12)
aux(tell-14, to-13)
xcomp(comes-12, tell-14)
dobj(tell-14, you-15)
det(situation-18, the-17)
prep_about(tell-14, situation-18)
nsubj(have-21, you-20)
root(ROOT-0, have-21)
det(choice-23, the-22)
dobj(have-21, choice-23)
aux(make-25, to-24)
infmod(choice-23, make-25)
det(judgement-27, a-26)
dobj(make-25, judgement-27)
prepc_without(make-25, listening-29)
det(side-33, the-31)
amod(side-33, other-32)
prep_to(listening-29, side-33)
det(story-36, the-35)
prep_of(side-33, story-36)

