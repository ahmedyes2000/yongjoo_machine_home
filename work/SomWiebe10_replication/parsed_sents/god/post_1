(ROOT
  (S
    (VP (VB Keep)
      (PP (IN in)
        (NP (NN mind)))
      (SBAR (IN that)
        (S
          (NP
            (ADJP (`` ``) (JJ good) ('' '')
              (CC and)
              (`` ``) (JJ not-good) ('' ''))
            (NN I))
          (VP (VBP reject)
            (SBAR
              (S
                (NP
                  (NP (DT the) (NN notion))
                  (PP (IN of)
                    (ADJP (`` ``) (JJ evil) ('' ''))))
                (VP (VBP are)
                  (ADJP (RB completely) (RB context) (JJ dependent)))))))))
    (. .)))

root(ROOT-0, Keep-1)
prep_in(Keep-1, mind-3)
complm(reject-13, that-4)
conj_and(not-good-10, good-6)
amod(I-12, good-6)
amod(I-12, not-good-10)
nsubj(reject-13, I-12)
ccomp(Keep-1, reject-13)
det(notion-15, the-14)
nsubj(dependent-23, notion-15)
prep_of(notion-15, evil-18)
cop(dependent-23, are-20)
advmod(dependent-23, completely-21)
advmod(dependent-23, context-22)
ccomp(reject-13, dependent-23)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no)
          (ADJP (`` ``) (JJ good) ('' '')
            (CC or)
            (`` ``) (JJ not-good) ('' '')))
        (PP (IN without)
          (NP
            (NP (NN point))
            (PP (IN of)
              (NP (NN view)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(not-good-9, no-3)
nsubj(is-2, good-5)
conj_or(not-good-9, good-5)
nsubj(is-2, not-good-9)
prep_without(not-good-9, point-12)
prep_of(point-12, view-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NN suggestion))
      (SBAR (IN that)
        (S
          (NP (NN anything))
          (VP (VBZ is)
            (NP
              (NP
                (ADJP (`` ``) (JJ good) ('' '')
                  (CC or)
                  (`` ``) (JJ not-good) ('' ''))
                (JJ inherently) (NN outside))
              (PP (IN of)
                (NP
                  (NP (NN point))
                  (PP (IN of)
                    (NP (NN view))))))))))
    (VP (VBZ is)
      (NP (DT the) (JJ same) (JJ mistaken) (NN suggestion))
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (NN meaning)
              (CC or)
              (NN purpose))
            (ADVP (IN behind) (DT all))))))
    (. .)))

det(suggestion-2, The-1)
nsubj(suggestion-23, suggestion-2)
complm(suggestion-2, that-3)
nsubj(suggestion-2, anything-4)
cop(suggestion-2, is-5)
amod(suggestion-2, good-7)
conj_or(not-good-11, good-7)
amod(suggestion-2, not-good-11)
amod(suggestion-2, inherently-13)
prep_outside_of(suggestion-2, point-16)
prep_of(point-16, view-18)
cop(suggestion-23, is-19)
det(suggestion-23, the-20)
amod(suggestion-23, same-21)
amod(suggestion-23, mistaken-22)
root(ROOT-0, suggestion-23)
complm(is-26, that-24)
expl(is-26, there-25)
ccomp(suggestion-23, is-26)
nsubj(is-26, meaning-27)
nsubj(is-26, purpose-29)
conj_or(meaning-27, purpose-29)
advmod(is-26, behind-30)
dep(behind-30, all-31)

(ROOT
  (S
    (NP (DT The) (NN fact))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP
            (NP (DT the) (NN meaning))
            (PP (IN of)
              (NP (DT a) (NN thing))))
          (VP (VBZ is)
            (ADVP (RB individually))
            (VP (VBN determined))))))
    (. .)))

det(fact-2, The-1)
nsubj(is-3, fact-2)
root(ROOT-0, is-3)
det(meaning-6, the-5)
nsubjpass(determined-12, meaning-6)
det(thing-9, a-8)
prep_of(meaning-6, thing-9)
auxpass(determined-12, is-10)
advmod(determined-12, individually-11)
ccomp(is-3, determined-12)

(ROOT
  (S
    (PP (IN Without)
      (NP
        (NP (NN point))
        (PP (IN of)
          (NP (NN view)))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT no) (NN meaning)))
    (. .)))

prep_without(is-7, point-2)
prep_of(point-2, view-4)
expl(is-7, there-6)
root(ROOT-0, is-7)
det(meaning-9, no-8)
nsubj(is-7, meaning-9)

(ROOT
  (S
    (NP
      (NP (NN Meaning))
      (CC and)
      (NP (DT the) (NN word) (`` ``) (NN meaning) ('' '')))
    (VP (VBP are)
      (NP (JJ human) (NN invention)))
    (. .)))

nsubj(invention-10, Meaning-1)
det(meaning-6, the-3)
nn(meaning-6, word-4)
conj_and(Meaning-1, meaning-6)
nsubj(invention-10, meaning-6)
cop(invention-10, are-8)
amod(invention-10, human-9)
root(ROOT-0, invention-10)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD must)
      (CC and)
      (MD can) (RB only)
      (VP (VB act)
        (PP (IN from)
          (NP
            (NP
              (NP (CD one) (POS 's))
              (JJ own) (NN point))
            (PP (IN of)
              (NP (NN view)))))
        (PP (IN in)
          (NP (JJ specific) (NN context)))))
    (. .)))

nsubj(act-6, One-1)
aux(act-6, must-2)
aux(act-6, can-4)
conj_and(act-6, can-4)
advmod(act-6, only-5)
root(ROOT-0, act-6)
poss(point-11, one-8)
amod(point-11, own-10)
prep_from(act-6, point-11)
prep_of(point-11, view-13)
amod(context-16, specific-15)
prep_in(act-6, context-16)

(ROOT
  (S
    (NP (DT The) (`` ``) (NN good) ('' ''))
    (VP (MD can)
      (VP (VB be)
        (NP (NN anything))))
    (. .)))

det(good-3, The-1)
nsubj(anything-7, good-3)
aux(anything-7, can-5)
cop(anything-7, be-6)
root(ROOT-0, anything-7)

(ROOT
  (S
    (NP (DT The) (`` ``) (NN not-good) ('' ''))
    (VP (MD can)
      (VP (VB be)
        (NP (NN anything))))
    (. .)))

det(not-good-3, The-1)
nsubj(anything-7, not-good-3)
aux(anything-7, can-5)
cop(anything-7, be-6)
root(ROOT-0, anything-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must)
      (VP (VB answer)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP it))
            (VP
              (VP (VBZ is)
                (ADJP (`` ``) (JJ good) ('' '')
                  (CC or)
                  (`` ``) (JJ not-good)))
              ('' '')
              (CC and)
              (VP
                (PP (TO to)
                  (NP (WP whom)))
                (ADVP (DT every) (NN time))))))))
    (. .)))

nsubj(answer-3, You-1)
aux(answer-3, must-2)
root(ROOT-0, answer-3)
advmod(not-good-12, why-4)
nsubj(good-8, it-5)
nsubj(not-good-12, it-5)
cop(not-good-12, is-6)
advcl(answer-3, good-8)
conj_or(not-good-12, good-8)
advcl(answer-3, not-good-12)
advcl(answer-3, to-15)
conj_and(not-good-12, to-15)
pobj(to-15, whom-16)
dep(time-18, every-17)
advmod(to-15, time-18)

