(ROOT
  (S
    (NP (DT The) (JJ real))
    (VP (VBP question)
      (S
        (VP (TO to)
          (VP (VB ask)
            (PP (IN about)
              (NP
                (NP (DT any) (VBN proposed) (NN god))
                (UCP
                  (NP
                    (NP (NNP Allah))
                    (, ,)
                    (NP (DT The) (NNP Christian) (NNP God))
                    (, ,)
                    (NP (NNP Thor))
                    (, ,)
                    (NP (NNP Zeus)))
                  (CC or)
                  (SBAR
                    (WHNP (WP whoever))
                    (S
                      (VP (VBZ is))))))))))
      ('' '')
      (SBAR
        (WHNP (WP What))
        (S
          (NP (NN evidence))
          (VP (VBZ is)
            (ADVP (RB there))
            (PP (IN for)
              (NP
                (NP (DT the) (NN existence))
                (PP (IN of)
                  (NP (DT this) (NN being)))))))))
    (. ?)))

det(real-2, The-1)
nsubj(question-3, real-2)
xsubj(ask-5, real-2)
root(ROOT-0, question-3)
aux(ask-5, to-4)
xcomp(question-3, ask-5)
det(god-9, any-7)
amod(god-9, proposed-8)
prep_about(ask-5, god-9)
dep(god-9, Allah-10)
det(God-14, The-12)
nn(God-14, Christian-13)
appos(Allah-10, God-14)
appos(Allah-10, Thor-16)
appos(Allah-10, Zeus-18)
nsubj(is-21, whoever-20)
dep(god-9, is-21)
conj_or(Allah-10, is-21)
rcmod(Allah-10, is-21)
dobj(is-25, What-23)
nsubj(is-25, evidence-24)
ccomp(question-3, is-25)
advmod(is-25, there-26)
det(existence-29, the-28)
prep_for(is-25, existence-29)
det(being-32, this-31)
prep_of(existence-29, being-32)

(ROOT
  (S (`` ``)
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB exactly))
      (NP (DT the) (JJ same) (NN question))
      (SBAR (IN that)
        (S
          (NP (PRP one))
          (VP (MD could)
            (VP (VB ask)
              (PP (IN about)
                (NP
                  (NP (NNS unicorns))
                  (, ,)
                  (NP (NNS fairies))
                  (, ,)
                  (NP (NNP Steve) (NNP Jobs))
                  (CC or)
                  (NP (NNP Paris) (NNP Hilton)))))))))
    (. .)))

nsubj(question-7, This-2)
cop(question-7, is-3)
advmod(question-7, exactly-4)
det(question-7, the-5)
amod(question-7, same-6)
root(ROOT-0, question-7)
complm(ask-11, that-8)
nsubj(ask-11, one-9)
aux(ask-11, could-10)
ccomp(question-7, ask-11)
prep_about(ask-11, unicorns-13)
prep_about(ask-11, fairies-15)
conj_or(unicorns-13, fairies-15)
nn(Jobs-18, Steve-17)
prep_about(ask-11, Jobs-18)
conj_or(unicorns-13, Jobs-18)
nn(Hilton-21, Paris-20)
prep_about(ask-11, Hilton-21)
conj_or(unicorns-13, Hilton-21)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN case))
        (PP (IN of)
          (NP (DT the) (JJ last) (CD two)))))
    (NP (DT the))
    (VP (VBZ is)
      (NP
        (NP (JJ testable) (JJ empirical) (NN evidence))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (MD can)
              (VP (VB be)
                (VP (VBN pointed)
                  (S
                    (VP (TO to))))))))))
    (. .)))

det(case-3, the-2)
prep_in(evidence-12, case-3)
det(two-7, the-5)
amod(two-7, last-6)
prep_of(case-3, two-7)
nsubj(evidence-12, the-8)
cop(evidence-12, is-9)
amod(evidence-12, testable-10)
amod(evidence-12, empirical-11)
root(ROOT-0, evidence-12)
nsubjpass(pointed-16, evidence-12)
aux(pointed-16, can-14)
auxpass(pointed-16, be-15)
rcmod(evidence-12, pointed-16)
xcomp(pointed-16, to-17)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN case))
        (PP (IN of)
          (NP
            (NP (NNP Zeus))
            (CC and)
            (NP (DT the) (NN unicorn))))))
    (NP (DT this) (NN evidence))
    (VP (VBZ is)
      (VP (VBG lacking)))
    (. .)))

det(case-3, the-2)
prep_in(lacking-12, case-3)
prep_of(case-3, Zeus-5)
det(unicorn-8, the-7)
prep_of(case-3, unicorn-8)
conj_and(Zeus-5, unicorn-8)
det(evidence-10, this-9)
nsubj(lacking-12, evidence-10)
aux(lacking-12, is-11)
root(ROOT-0, lacking-12)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (ADJP (RB quite) (JJ happy)
        (S
          (VP (TO to)
            (VP (VB accept)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (JJ such) (NN lack))
                    (PP (IN of)
                      (NP (NN evidence))))
                  (VP (VBZ is)
                    (ADJP (JJ sufficient)
                      (PP (IN for)
                        (NP (PRP us))))
                    (S
                      (VP (TO to)
                        (VP (VB dismiss)
                          (NP
                            (NP (DT the) (NN existence))
                            (PP (IN of)
                              (NP (NNS Thor)
                                (CC and)
                                (NNS fairies)))))))))))))))
    (. .)))

nsubj(happy-4, We-1)
cop(happy-4, are-2)
advmod(happy-4, quite-3)
root(ROOT-0, happy-4)
aux(accept-6, to-5)
xcomp(happy-4, accept-6)
complm(sufficient-13, that-7)
amod(lack-9, such-8)
nsubj(sufficient-13, lack-9)
xsubj(dismiss-17, lack-9)
prep_of(lack-9, evidence-11)
cop(sufficient-13, is-12)
ccomp(accept-6, sufficient-13)
prep_for(sufficient-13, us-15)
aux(dismiss-17, to-16)
xcomp(sufficient-13, dismiss-17)
det(existence-19, the-18)
dobj(dismiss-17, existence-19)
prep_of(existence-19, Thor-21)
prep_of(existence-19, fairies-23)
conj_and(Thor-21, fairies-23)

(ROOT
  (S
    (ADVP (RB Logically))
    (NP (PRP we))
    (VP (MD should)
      (VP (VB take)
        (NP
          (NP (DT the) (JJ same) (NN lack))
          (PP (IN of)
            (NP (JJ positive) (NN evidence))))
        (S
          (VP (TO to)
            (VP (VB dismiss)
              (NP
                (NP (DT the) (NN existence))
                (PP (IN of)
                  (NP
                    (NP (NNP Allah))
                    (CC and)
                    (NP (DT the) (NNP Christian) (NNP God)))))
              (ADVP (RB as) (RB well)))))))
    (. .)))

advmod(take-4, Logically-1)
nsubj(take-4, we-2)
aux(take-4, should-3)
root(ROOT-0, take-4)
det(lack-7, the-5)
amod(lack-7, same-6)
dobj(take-4, lack-7)
amod(evidence-10, positive-9)
prep_of(lack-7, evidence-10)
aux(dismiss-12, to-11)
xcomp(take-4, dismiss-12)
det(existence-14, the-13)
dobj(dismiss-12, existence-14)
prep_of(existence-14, Allah-16)
det(God-20, the-18)
nn(God-20, Christian-19)
prep_of(existence-14, God-20)
conj_and(Allah-16, God-20)
advmod(well-22, as-21)
mwe(well-22, as-21)
advmod(dismiss-12, well-22)

