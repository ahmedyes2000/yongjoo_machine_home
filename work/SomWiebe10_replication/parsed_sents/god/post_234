(ROOT
  (S
    (S
      (NP
        (NP (DT That) (NN law))
        (, ,)
        (NP
          (NP (DT the) (NN conservation))
          (PP (IN of)
            (NP (NN mass-energy)))))
      (VP (VBZ exhibits)
        (NP (PRP itself))
        (PP (IN in)
          (NP (CD two) (NNS ways)))))
    (: :)
    (S
      (NP (PRP one))
      (, ,)
      (ADVP (RB therefore))
      (NP (PRP$ their))
      (VP (MD can) (RB not)
        (VP (VB be)
          (NP
            (NP (JJ absolute) (NN contingency))
            (SBAR
              (S
                (NP
                  (NP (DT no) (NN Esistence))
                  (PP (IN as)
                    (NP (DT the) (NN contingency) (NN argument))))
                (ADVP (RB so))
                (VP (VBZ requires))))))))
    (: ;)
    (S
      (NP (CD two))
      (PRN (, ,)
        (S
          (NP (PRP it))
          (VP (VBZ exhibits)
            (NP (PRP itself))
            (PP (IN in)
              (NP (NN quantum) (NN energy)))))
        (, ,))
      (NP (NN whence))
      (VP (VBZ comes)
        (ADJP (JJ matter-energy))))
    (. .)))

det(law-2, That-1)
nsubj(exhibits-8, law-2)
det(conservation-5, the-4)
appos(law-2, conservation-5)
prep_of(conservation-5, mass-energy-7)
root(ROOT-0, exhibits-8)
dobj(exhibits-8, itself-9)
num(ways-12, two-11)
prep_in(exhibits-8, ways-12)
nsubj(contingency-22, one-14)
advmod(contingency-22, therefore-16)
nsubj(contingency-22, their-17)
aux(contingency-22, can-18)
neg(contingency-22, not-19)
cop(contingency-22, be-20)
amod(contingency-22, absolute-21)
parataxis(exhibits-8, contingency-22)
dobj(requires-30, contingency-22)
det(Esistence-24, no-23)
nsubj(requires-30, Esistence-24)
det(argument-28, the-26)
nn(argument-28, contingency-27)
prep_as(Esistence-24, argument-28)
advmod(requires-30, so-29)
rcmod(contingency-22, requires-30)
nsubj(comes-42, two-32)
nsubj(exhibits-35, it-34)
parataxis(comes-42, exhibits-35)
dobj(exhibits-35, itself-36)
nn(energy-39, quantum-38)
prep_in(exhibits-35, energy-39)
nsubj(comes-42, whence-41)
parataxis(exhibits-8, comes-42)
acomp(comes-42, matter-energy-43)

(ROOT
  (SINV
    (S
      (ADVP (IN So) (RB here))
      (, ,)
      (NP (NN science))
      (ADVP (RB indeed))
      (VP (VBZ does)
        (VP (VB exhibit)
          (NP (DT no) (NN reason)
            (S
              (VP (TO to)
                (VP (VB posit)
                  (NP (DT a) (JJ dvine) (NN creator) (NN Science)))))))))
    (VP (VBZ finds)
      (NP (DT no) (JJ cosmic) (NN teleology)))
    (NP
      (NP (DT no) (JJ preordained) (NNS plans))
      (PP (IN for)
        (NP
          (NP (NNS events))
          (PP (IN in)
            (NP (NNP Existence))))))
    (. .)))

advmod(exhibit-7, So-1)
advmod(So-1, here-2)
nsubj(exhibit-7, science-4)
advmod(exhibit-7, indeed-5)
aux(exhibit-7, does-6)
dep(finds-16, exhibit-7)
det(reason-9, no-8)
dobj(exhibit-7, reason-9)
aux(posit-11, to-10)
infmod(reason-9, posit-11)
det(Science-15, a-12)
amod(Science-15, dvine-13)
nn(Science-15, creator-14)
dobj(posit-11, Science-15)
root(ROOT-0, finds-16)
det(teleology-19, no-17)
amod(teleology-19, cosmic-18)
dobj(finds-16, teleology-19)
det(plans-22, no-20)
amod(plans-22, preordained-21)
nsubj(finds-16, plans-22)
prep_for(plans-22, events-24)
prep_in(events-24, Existence-26)

(ROOT
  (SINV
    (ADVP (RB Thus))
    (VP (VBZ arises))
    (NP (DT the) (JJ atelic) (NN argument))
    (SBAR (IN that)
      (S
        (ADVP (RB therefore))
        (NP (PRP one))
        (VP (MD can) (RB not)
          (VP (VB posit)
            (NP (NNP God))
            (PP (IN as)
              (PP (IN behind)
                (NP (NNS events))))))))
    (. .)))

advmod(arises-2, Thus-1)
root(ROOT-0, arises-2)
det(argument-5, the-3)
amod(argument-5, atelic-4)
nsubj(arises-2, argument-5)
complm(posit-11, that-6)
advmod(posit-11, therefore-7)
nsubj(posit-11, one-8)
aux(posit-11, can-9)
neg(posit-11, not-10)
dep(arises-2, posit-11)
dobj(posit-11, God-12)
prep(posit-11, as-13)
pcomp(as-13, behind-14)
prep_behind(as-13, events-15)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB posit)
          (NP (NNP God))
          (PP (IN as)
            (S
              (VP
                (ADVP (RB somehow))
                (JJ involved)))))))
    (VP (MD would)
      (VP (VB be)
        (NP (DT the) (JJ new) (NNP Omphalos) (NN argument))
        (SBAR (IN that)
          (S
            (NP (NNP God) (NNS hides))
            (VP (VBZ Himself)
              (SBAR (IN as)
                (S
                  (NP (DT the) (JJ epistemic) (NN distance) (NN argument))
                  (VP (MD would)
                    (VP (VB endorse)
                      (PP (IN in)
                        (NP (NN effect))))))))))))
    (. .)))

aux(posit-2, To-1)
csubj(argument-12, posit-2)
dobj(posit-2, God-3)
advmod(involved-6, somehow-5)
prepc_as(posit-2, involved-6)
aux(argument-12, would-7)
cop(argument-12, be-8)
det(argument-12, the-9)
amod(argument-12, new-10)
nn(argument-12, Omphalos-11)
root(ROOT-0, argument-12)
complm(Himself-16, that-13)
nn(hides-15, God-14)
nsubj(Himself-16, hides-15)
ccomp(argument-12, Himself-16)
mark(endorse-23, as-17)
det(argument-21, the-18)
amod(argument-21, epistemic-19)
nn(argument-21, distance-20)
nsubj(endorse-23, argument-21)
aux(endorse-23, would-22)
advcl(Himself-16, endorse-23)
prep_in(endorse-23, effect-25)

(ROOT
  (S
    (NP (NNP John) (NNP L.) (NNP Schellenberg))
    (VP (VBZ observes)
      (SBAR (IN that)
        (S
          (NP (DT that) (NN distance))
          (VP (VBZ reflects)
            (NP (PRP$ His) (NNS hiddenness))
            (ADVP
              (ADVP (RB so) (RB much))
              (SBAR (IN that)
                (S
                  (NP (PRP He))
                  (ADVP (RB probably))
                  (VP (VBZ does) (RB n't)
                    (VP (VB exist))))))))))
    (. !)))

nn(Schellenberg-3, John-1)
nn(Schellenberg-3, L.-2)
nsubj(observes-4, Schellenberg-3)
root(ROOT-0, observes-4)
complm(reflects-8, that-5)
det(distance-7, that-6)
nsubj(reflects-8, distance-7)
ccomp(observes-4, reflects-8)
poss(hiddenness-10, His-9)
dobj(reflects-8, hiddenness-10)
advmod(much-12, so-11)
advmod(reflects-8, much-12)
dep(exist-18, that-13)
nsubj(exist-18, He-14)
advmod(exist-18, probably-15)
aux(exist-18, does-16)
neg(exist-18, n't-17)
ccomp(much-12, exist-18)

