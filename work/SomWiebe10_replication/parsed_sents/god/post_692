(ROOT
  (S
    (VP (VB Lol))
    (. .)))

root(ROOT-0, Lol-1)

(ROOT
  (S
    (NP (DT No) (NN I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (ADJP (JJ sick)
              (PP (IN in)
                (NP (DT the) (NN head))))))))
    (. .)))

det(I-2, No-1)
nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(sick-6, you-4)
cop(sick-6, 're-5)
ccomp(think-3, sick-6)
det(head-9, the-8)
prep_in(sick-6, head-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does)
      (ADJP (JJ right)))
    (. ?)))

nsubj(right-3, It-1)
dep(right-3, does-2)
root(ROOT-0, right-3)

(ROOT
  (NP (JJ ...) (NN hmmmm) (: ...)))


(ROOT
  (SBARQ
    (WHADVP (RB So))
    (SQ (VBZ does) (RB n't)
      (NP (DT that))
      (VP (VB mean)
        (PP (IN by)
          (NP (VBG following) (NN somebody)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ knows)
                  (SBAR
                    (S
                      (NP (DT all))
                      (VP (VBZ is)
                        (NP
                          (NP (DT the) (JJ right) (NN way))
                          (PP (IN in)
                            (NP (NN life))))))))))))))
    (. ?)))

advmod(mean-5, So-1)
aux(mean-5, does-2)
neg(mean-5, n't-3)
nsubj(mean-5, that-4)
root(ROOT-0, mean-5)
amod(somebody-8, following-7)
prep_by(mean-5, somebody-8)
nsubj(knows-10, who-9)
ccomp(somebody-8, knows-10)
nsubj(way-15, all-11)
cop(way-15, is-12)
det(way-15, the-13)
amod(way-15, right-14)
ccomp(knows-10, way-15)
prep_in(way-15, life-17)

(ROOT
  (INTJ (UH ...)))


(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (PP (IN about)
            (NP (PRP you))))))
    (, ,)
    (CC but)
    (S
      (PP (TO to)
        (NP (PRP me)))
      (NP (PRP I))
      (VP (MD would)
        (VP (VB follow)
          (NP (NN somebody))
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBD knew)
                  (NP (NN everything)))
                (CC and)
                (VP (MD would)
                  (VP (VB do)
                    (NP
                      (NP (DT the) (JJS best))
                      (PP (IN for)
                        (NP (PRP me)))))))))
          (FRAG
            (CONJP (RB rather) (IN than))
            (S
              (VP (TO to)
                (VP (VB follow)
                  (NP
                    (NP (NN somebody))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP
                          (VP (VBD knew)
                            (ADVP (RB quite)
                              (NP (DT a) (RB bit))))
                          (CC and)
                          (VP (MD would)
                            (VP (VB do)
                              (NP
                                (NP (DT the) (JJS best))
                                (PP (IN for)
                                  (NP (PRP me)))))))))))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
prep_about(know-4, you-6)
prep_to(follow-13, me-10)
nsubj(follow-13, I-11)
aux(follow-13, would-12)
conj_but(know-4, follow-13)
dobj(follow-13, somebody-14)
nsubj(knew-16, who-15)
nsubj(do-20, who-15)
dep(follow-13, knew-16)
dobj(knew-16, everything-17)
aux(do-20, would-19)
dep(follow-13, do-20)
conj_and(knew-16, do-20)
det(best-22, the-21)
dobj(do-20, best-22)
prep_for(best-22, me-24)
dep(follow-28, rather-25)
mwe(rather-25, than-26)
aux(follow-28, to-27)
dep(follow-13, follow-28)
dobj(follow-28, somebody-29)
nsubj(knew-31, somebody-29)
nsubj(do-37, somebody-29)
rcmod(somebody-29, knew-31)
advmod(knew-31, quite-32)
det(bit-34, a-33)
pobj(quite-32, bit-34)
aux(do-37, would-36)
rcmod(somebody-29, do-37)
conj_and(knew-31, do-37)
det(best-39, the-38)
dobj(do-37, best-39)
prep_for(best-39, me-41)

(ROOT
  (FRAG
    (ADVP (RB ANYday))
    (. .)))

root(ROOT-0, ANYday-1)

(ROOT
  (S
    (NP (JJ Ofcourse) (NNS People))
    (VP (VBP need)
      (S
        (NP (JJ other) (NNS people))
        (VP (TO to)
          (VP (VB guide)
            (NP (PRP them))))))
    (. .)))

amod(People-2, Ofcourse-1)
nsubj(need-3, People-2)
root(ROOT-0, need-3)
amod(people-5, other-4)
nsubj(guide-7, people-5)
aux(guide-7, to-6)
xcomp(need-3, guide-7)
dobj(guide-7, them-8)

(ROOT
  (S
    (NP (NNP THAT))
    (VP (VBZ IS)
      (SBAR
        (WHADVP (WRB WHY))
        (S
          (NP (NNP GOD) (NNP SENDS) (NNP DOWN))
          (VP (VBZ PROPHETS)))))
    (. .)))

nsubj(IS-2, THAT-1)
root(ROOT-0, IS-2)
advmod(PROPHETS-7, WHY-3)
nn(DOWN-6, GOD-4)
nn(DOWN-6, SENDS-5)
nsubj(PROPHETS-7, DOWN-6)
advcl(IS-2, PROPHETS-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (ADVP (RB there))
      (S
        (VP (TO to)
          (VP (VB tell)
            (NP (NNS people))
            (NP
              (NP (NNP God) (POS 's))
              (NN word))))))
    (. .)))

nsubj(are-2, They-1)
xsubj(tell-5, They-1)
root(ROOT-0, are-2)
advmod(are-2, there-3)
aux(tell-5, to-4)
xcomp(are-2, tell-5)
iobj(tell-5, people-6)
poss(word-9, God-7)
dobj(tell-5, word-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP think)
          (NP
            (NP (DT the) (NN world) (NNS works))
            (PP (IN without)
              (NP (NN police) (, ,) (NN army) (, ,) (NNS governments) (, ,) (NNS courts) (, ,) (NNS laws) (, ,) (NNS teachers) (, ,) (FW doctors))))
          (FRAG
            (X (NN etc.))
            (NP (RB then))))))
    (NP (PRP you))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN locked)
              (PRT (RP up)))))))
    (. .)))

mark(think-3, If-1)
nsubj(think-3, you-2)
advcl(need-24, think-3)
det(works-6, the-4)
nn(works-6, world-5)
dobj(think-3, works-6)
nn(teachers-18, police-8)
dep(teachers-18, army-10)
dep(teachers-18, governments-12)
dep(teachers-18, courts-14)
dep(teachers-18, laws-16)
prep_without(works-6, teachers-18)
dep(teachers-18, doctors-20)
dep(then-22, etc.-21)
dep(think-3, then-22)
nsubj(need-24, you-23)
xsubj(locked-27, you-23)
root(ROOT-0, need-24)
aux(locked-27, to-25)
auxpass(locked-27, be-26)
xcomp(need-24, locked-27)
prt(locked-27, up-28)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP me))
        (VP (VB repeat)
          (S
            (NP (NNP GOD) (NNP IS) (NNP NOT) (NNP JUST) (NNP THE) (NNP ULTIMATE))
            (`` ``)
            (NP (NNP PUNISHMENT))
            ('' '')))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(repeat-3, me-2)
ccomp(Let-1, repeat-3)
nn(ULTIMATE-9, GOD-4)
nn(ULTIMATE-9, IS-5)
nn(ULTIMATE-9, NOT-6)
nn(ULTIMATE-9, JUST-7)
nn(ULTIMATE-9, THE-8)
dep(PUNISHMENT-11, ULTIMATE-9)
dep(repeat-3, PUNISHMENT-11)

(ROOT
  (S
    (NP (PRP HE))
    (VP (VBZ IS)
      (NP (NNP ALL)))
    (. .)))

nsubj(ALL-3, HE-1)
cop(ALL-3, IS-2)
root(ROOT-0, ALL-3)

(ROOT
  (S
    (S
      (NP (PRP HE))
      (VP (VBZ LOVES)
        (S
          (NP (PRP YOU))
          (NP (DT THE) (JJS MOST)))))
    (, ,)
    (S
      (NP (PRP HE))
      (VP (VBZ GUIDES)
        (S
          (NP (PRP YOU))
          (NP (DT THE) (NN BEST)))))
    (, ,)
    (S
      (NP (PRP HE))
      (VP (VBZ DOES)
        (NP
          (NP (NNP EVERYTHING) (NNP BETTER) (NNP THAN) (NNP ANYBODY))
          (PP (IN IN)
            (NP (NNP REAL) (NNP LIFE) (NNP CAN))))))
    (. .)))

nsubj(LOVES-2, HE-1)
root(ROOT-0, LOVES-2)
nsubj(MOST-5, YOU-3)
det(MOST-5, THE-4)
xcomp(LOVES-2, MOST-5)
nsubj(GUIDES-8, HE-7)
ccomp(LOVES-2, GUIDES-8)
nsubj(BEST-11, YOU-9)
det(BEST-11, THE-10)
xcomp(GUIDES-8, BEST-11)
nsubj(DOES-14, HE-13)
ccomp(LOVES-2, DOES-14)
nn(ANYBODY-18, EVERYTHING-15)
nn(ANYBODY-18, BETTER-16)
nn(ANYBODY-18, THAN-17)
dobj(DOES-14, ANYBODY-18)
nn(CAN-22, REAL-20)
nn(CAN-22, LIFE-21)
prep_in(ANYBODY-18, CAN-22)

(ROOT
  (S
    (NP (NNP THAT))
    (VP (VBZ IS)
      (SBAR
        (WHADVP (WRB WHY))
        (S
          (NP (PRP HE))
          (VP (VBZ IS)
            (NP (NNP GOD))))))
    (. .)))

nsubj(IS-2, THAT-1)
root(ROOT-0, IS-2)
advmod(GOD-6, WHY-3)
nsubj(GOD-6, HE-4)
cop(GOD-6, IS-5)
advcl(IS-2, GOD-6)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP
            (NP (DT an) (NNP IQ))
            (PP (IN above)
              (NP (CD 50)))))))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB understand)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (VP (VBG saying)))))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(understand-10, have-3)
det(IQ-5, an-4)
dobj(have-3, IQ-5)
prep_above(IQ-5, 50-7)
nsubj(understand-10, you-8)
aux(understand-10, would-9)
root(ROOT-0, understand-10)
dobj(saying-14, what-11)
nsubj(saying-14, I-12)
aux(saying-14, 'm-13)
ccomp(understand-10, saying-14)

(ROOT
  (S
    (ADVP (IN So) (RB far))
    (NP (PRP you))
    (VP (VBP have) (RB n't))
    (. .)))

advmod(have-4, So-1)
advmod(So-1, far-2)
nsubj(have-4, you-3)
root(ROOT-0, have-4)
neg(have-4, n't-5)

(ROOT
  (S
    (INTJ (VB Please))
    (VP (VB explain)
      (PP (TO to)
        (NP (PRP me)))
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (NP (DT the) (NN definition))
            (PP (IN of)
              (NP (NNP God))))
          (VP (VBZ is)))))
    (. ?)))

dep(explain-2, Please-1)
root(ROOT-0, explain-2)
prep_to(explain-2, me-4)
dobj(is-10, what-5)
det(definition-7, the-6)
nsubj(is-10, definition-7)
prep_of(definition-7, God-9)
ccomp(explain-2, is-10)

(ROOT
  (S (RB Then)
    (VP (VB tell)
      (NP (PRP me))
      (SBAR (IN whether)
        (CC or)
        (RB not)
        (S
          (NP (DT that) (NN definition))
          (VP (VBZ means)
            (SBAR
              (S
                (NP (PRP He))
                (VP (VBZ is)
                  (ADVP (RBR better) (IN than))
                  (ADJP (DT any) (JJ human) (JJ alive)))))))))
    (. .)))

advmod(tell-2, Then-1)
root(ROOT-0, tell-2)
dobj(tell-2, me-3)
complm(means-9, whether-4)
ccomp(tell-2, not-6)
conj_or(means-9, not-6)
det(definition-8, that-7)
nsubj(means-9, definition-8)
ccomp(tell-2, means-9)
nsubj(alive-16, He-10)
cop(alive-16, is-11)
advmod(than-13, better-12)
advmod(alive-16, than-13)
dep(alive-16, any-14)
amod(alive-16, human-15)
ccomp(means-9, alive-16)

