(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (MD 'll)
        (VP (VB pass)
          (PP (IN on)
            (NP (DT the) (NN book)))))
      (, ,)
      (CC but)
      (VP (VBP thank)
        (NP (PRP you))))
    (. .)))

nsubj(pass-3, I-1)
nsubj(thank-9, I-1)
aux(pass-3, 'll-2)
root(ROOT-0, pass-3)
det(book-6, the-5)
prep_on(pass-3, book-6)
conj_but(pass-3, thank-9)
dobj(thank-9, you-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP read)
        (NP (PRP$ his) (NN bio))
        (ADVP (RB though))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (ADJP (JJ interesting))))
    (. .)))

nsubj(read-2, I-1)
root(ROOT-0, read-2)
poss(bio-4, his-3)
dobj(read-2, bio-4)
advmod(read-2, though-5)
nsubj(interesting-9, it-7)
cop(interesting-9, was-8)
conj_and(read-2, interesting-9)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN Since)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP (DT an) (NN ephemeral)))))
      (VP (VBD thought)))
    (, ,)
    (CC and)
    (S
      (S
        (PP (IN in)
          (NP (PRP itself)))
        (NP (PRP it))
        (VP (MD would)
          (VP (VB seem)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ untraceable))))))))
      (, ,)
      (NP (NN man))
      (VP (MD must)
        (PP (IN on)
          (NP (DT some) (NN level)))
        (VP (VB have)
          (NP
            (NP (NN experience))
            (PP (IN of)
              (NP (PRP it)))))))
    (. .)))

mark(ephemeral-6, Since-2)
nsubj(ephemeral-6, this-3)
cop(ephemeral-6, is-4)
det(ephemeral-6, an-5)
csubj(thought-7, ephemeral-6)
root(ROOT-0, thought-7)
prep_in(seem-14, itself-11)
nsubj(seem-14, it-12)
xsubj(untraceable-17, it-12)
aux(seem-14, would-13)
ccomp(have-24, seem-14)
aux(untraceable-17, to-15)
cop(untraceable-17, be-16)
xcomp(seem-14, untraceable-17)
nsubj(have-24, man-19)
aux(have-24, must-20)
det(level-23, some-22)
prep_on(have-24, level-23)
conj_and(thought-7, have-24)
dobj(have-24, experience-25)
prep_of(experience-25, it-27)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP
      (NP (`` ``) (NN something))
      (PP (IN than)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (NN nothing) (RB else))
            (VP (MD can)
              (VP (VB exist) ('' '')))))))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ real))))
    (. .)))

advmod(real-14, Therefore-1)
nsubj(real-14, something-4)
dobj(exist-10, which-6)
nsubj(exist-10, nothing-7)
advmod(nothing-7, else-8)
aux(exist-10, can-9)
prepc_than(something-4, exist-10)
aux(real-14, must-12)
cop(real-14, be-13)
root(ROOT-0, real-14)

(ROOT
  (S (CC And)
    (S
      (NP (DT this) (PRP we))
      (VP (VBP call)
        (NP
          (NP (NN god))
          (, ,)
          (CC and)
          (ADVP (RB then))
          (PP (IN of)
            (NP
              (NP (NN course) (RB there) (POS 's))
              (QP (DT a) (CD million))
              (NNS definitions)
              (CC and)
              (NNS theories))))
        (PP (IN about)
          (NP (DT this) (NN being)))))
    (, ,)
    (CC but)
    (S
      (PP (IN at)
        (NP (DT the) (NN center)))
      (NP (PRP it))
      (VP (MD must)
        (VP (VB be)
          (VP (VBN based)
            (PP (IN on)
              (NP (DT some) (JJ unknowable) (NN truth)))))))
    (. .)))

det(we-3, this-2)
nsubj(call-4, we-3)
root(ROOT-0, call-4)
dobj(call-4, god-5)
dobj(call-4, then-8)
conj_and(god-5, then-8)
poss(definitions-15, course-10)
advmod(course-10, there-11)
quantmod(million-14, a-13)
num(definitions-15, million-14)
prep_of(then-8, definitions-15)
prep_of(then-8, theories-17)
conj_and(definitions-15, theories-17)
det(being-20, this-19)
prep_about(call-4, being-20)
det(center-25, the-24)
prep_at(based-29, center-25)
nsubjpass(based-29, it-26)
aux(based-29, must-27)
auxpass(based-29, be-28)
conj_but(call-4, based-29)
det(truth-33, some-31)
amod(truth-33, unknowable-32)
prep_on(based-29, truth-33)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBD studied)
          (NP
            (NP (JJ philosophical) (NNS works))
            (, ,) (RB especially)
            (NP
              (NP (NNP Socrates)
                (CC and)
                (NNP Plato))
              (PP (IN of)
                (NP (NN course))))))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB very) (RB much))
          (VBD seemed)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN influenced)
                  (PP (IN by)
                    (NP (DT the)
                      (ADJP (RB very) (JJ persuasive))
                      (NN argument)))
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP (VBP exist)
                        (PP (IN with)
                          (NP
                            (NP (DT all) (NN knowledge))
                            (PP (IN in)
                              (NP
                                (NP (DT some) (NN form))
                                (PP
                                  (PP (IN before)
                                    (NP (NN birth)))
                                  (, ,)
                                  (CC and)
                                  (PP (IN at)
                                    (NP (NN birth))))))))))))))))))
    (, ,)
    (S
      (NP (PRP we))
      (ADVP (RB somehow))
      (VP (VB forget)))
    (, ,)
    (CC and)
    (S
      (NP (NN learning))
      (VP (VBZ is)
        (ADVP (RB simply))
        (NP (NN memory))))
    (. .)))

nsubj(studied-2, He-1)
nsubj(seemed-16, He-1)
xsubj(influenced-19, He-1)
root(ROOT-0, studied-2)
amod(works-4, philosophical-3)
dobj(studied-2, works-4)
advmod(works-4, especially-6)
dep(works-4, Socrates-7)
dep(works-4, Plato-9)
conj_and(Socrates-7, Plato-9)
prep_of(Socrates-7, course-11)
advmod(much-15, very-14)
advmod(seemed-16, much-15)
conj_and(studied-2, seemed-16)
aux(influenced-19, to-17)
auxpass(influenced-19, be-18)
xcomp(seemed-16, influenced-19)
det(argument-24, the-21)
advmod(persuasive-23, very-22)
amod(argument-24, persuasive-23)
agent(influenced-19, argument-24)
complm(exist-27, that-25)
nsubj(exist-27, we-26)
ccomp(influenced-19, exist-27)
det(knowledge-30, all-29)
prep_with(exist-27, knowledge-30)
det(form-33, some-32)
prep_in(knowledge-30, form-33)
prep_in(knowledge-30, form-33')
conj_and(form-33, form-33')
prep_before(form-33, birth-35)
prep_at(form-33', birth-39)
nsubj(forget-43, we-41)
advmod(forget-43, somehow-42)
ccomp(studied-2, forget-43)
conj_and(studied-2, forget-43)
nsubj(memory-49, learning-46)
cop(memory-49, is-47)
advmod(memory-49, simply-48)
conj_and(studied-2, memory-49)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT the) (JJ same) (NN kind))
              (PP (IN of)
                (NP (NN thought) (NN process))))))))
    (. .)))

nsubj(seems-2, It-1)
xsubj(kind-7, It-1)
root(ROOT-0, seems-2)
aux(kind-7, to-3)
cop(kind-7, be-4)
det(kind-7, the-5)
amod(kind-7, same-6)
xcomp(seems-2, kind-7)
nn(process-10, thought-9)
prep_of(kind-7, process-10)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ is)
      (ADJP (JJ interesting)))
    (. .)))

nsubj(interesting-3, Which-1)
cop(interesting-3, is-2)
root(ROOT-0, interesting-3)

(ROOT
  (S (CC But)
    (NP (PRP$ my) (NN reply))
    (VP (VBZ is)
      (ADVP (RB simply)))
    (. .)))

cc(is-4, But-1)
poss(reply-3, my-2)
nsubj(is-4, reply-3)
root(ROOT-0, is-4)
advmod(is-4, simply-5)

(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))

root(ROOT-0, 1-1)

(ROOT
  (S
    (PP (IN in)
      (NP
        (NP (NN response))
        (PP (TO to)
          (NP (NNP St.) (NNP Anselm)))))
    (, ,)
    (NP (PRP we))
    (VP (MD can) (RB not)
      (ADVP (RB really))
      (VP
        (VP (VB imagine) (`` ``)
          (NP
            (NP (NN something))
            (PP (IN than)
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP
                    (NP (NN nothing))
                    (ADJP (JJR greater)))
                  (VP (MD can)
                    (VP (VB exist) ('' '')
                      (NP (PRP we)))))))
            (S
              (ADVP (RB simply))
              (VP (VB exaggerate)
                (PRT (RP on))
                (PP (TO to)
                  (NP (NN infinity)))))))
        (, ,)
        (CC and)
        (VP (VB describe)
          (S
            (NP (PRP it))
            (ADJP (RB as) (JJ such))))))
    (. .)))

prep_in(imagine-11, response-2)
nn(Anselm-5, St.-4)
prep_to(response-2, Anselm-5)
nsubj(imagine-11, we-7)
nsubj(describe-29, we-7)
aux(imagine-11, can-8)
neg(imagine-11, not-9)
advmod(imagine-11, really-10)
root(ROOT-0, imagine-11)
dobj(imagine-11, something-13)
dobj(exist-19, which-15)
nsubj(exist-19, nothing-16)
amod(nothing-16, greater-17)
aux(exist-19, can-18)
prepc_than(something-13, exist-19)
dobj(exist-19, we-21)
advmod(exaggerate-23, simply-22)
dep(something-13, exaggerate-23)
prt(exaggerate-23, on-24)
prep_to(exaggerate-23, infinity-26)
conj_and(imagine-11, describe-29)
nsubj(such-32, it-30)
advmod(such-32, as-31)
xcomp(describe-29, such-32)

(ROOT
  (S
    (VP (VB Ex))
    (. .)))

root(ROOT-0, Ex-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP find)
      (S
        (NP
          (NP (DT the) (JJ deist) (NN point))
          (PP (IN of)
            (NP (NN view))))
        (ADJP (RBR more) (JJ rational)
          (PP (IN than)
            (NP
              (NP (DT the) (NN majority))
              (PP (IN of)
                (NP (JJ theist) (NNS thoughts))))))))
    (. .)))

nsubj(find-2, I-1)
root(ROOT-0, find-2)
det(point-5, the-3)
amod(point-5, deist-4)
nsubj(rational-9, point-5)
prep_of(point-5, view-7)
advmod(rational-9, more-8)
xcomp(find-2, rational-9)
det(majority-12, the-11)
prep_than(rational-9, majority-12)
amod(thoughts-15, theist-14)
prep_of(majority-12, thoughts-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP (VB say) (`` ``)
        (ADVP (RB infinity))
        ('' '')
        (S
          (VP (VBG referring)
            (S
              (VP (TO to)
                (VP (VB say)
                  (NP (RB just) (NNS numbers)))))))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, can-2)
root(ROOT-0, say-3)
advmod(say-3, infinity-5)
xcomp(say-3, referring-7)
aux(say-9, to-8)
xcomp(referring-7, say-9)
advmod(numbers-11, just-10)
dobj(say-9, numbers-11)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT no) (JJ such) (NN thing))
            (SBAR (IN because)
              (S
                (NP (PRP one))
                (VP (MD can)
                  (ADVP (RB always))
                  (VP (VB add)
                    (NP (DT a) (NN 0))
                    (PP (IN at)
                      (NP (DT the) (NN end)))))))))))
    (. .)))

cc(know-3, But-1)
nsubj(know-3, I-2)
root(ROOT-0, know-3)
complm(is-6, that-4)
expl(is-6, there-5)
ccomp(know-3, is-6)
det(thing-9, no-7)
amod(thing-9, such-8)
nsubj(is-6, thing-9)
mark(add-14, because-10)
nsubj(add-14, one-11)
aux(add-14, can-12)
advmod(add-14, always-13)
advcl(is-6, add-14)
det(0-16, a-15)
dobj(add-14, 0-16)
det(end-19, the-18)
prep_at(add-14, end-19)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (, ,)
    (SBAR (IN while)
      (S
        (NP (PRP I))
        (VP
          (VP (MD can)
            (VP (VB say)
              (ADVP (RB infinity))))
          (, ,)
          (CC and)
          (VP (MD can)
            (VP (VB have)
              (NP
                (NP (DT a) (JJ general) (NN concept))
                (PP (IN of)
                  (NP (DT the) (NN idea))))
              (SBAR (IN while)
                (S
                  (PP (IN at)
                    (NP
                      (NP (DT the) (JJ same) (NN time))
                      (VP (VBG knowing))))
                  (NP (PRP it))
                  (VP (VBZ is) (RB not)
                    (NP (DT a) (JJ real) (NN thing))))))))))
    (, ,)
    (ADVP (RB really))
    (NP (PRP I))
    (VP (MD can) (RB not)
      (ADVP (RB even))
      (VP (VB begin)
        (S
          (VP (TO to)
            (VP (VB imagine)
              (NP
                (ADJP (RB really) (JJ large))
                (NNS numbers)))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(begin-39, time-4)
mark(say-9, while-6)
nsubj(say-9, I-7)
nsubj(have-14, I-7)
aux(say-9, can-8)
advcl(begin-39, say-9)
advmod(say-9, infinity-10)
aux(have-14, can-13)
conj_and(say-9, have-14)
advcl(begin-39, have-14)
det(concept-17, a-15)
amod(concept-17, general-16)
dobj(have-14, concept-17)
det(idea-20, the-19)
prep_of(concept-17, idea-20)
mark(thing-32, while-21)
det(time-25, the-23)
amod(time-25, same-24)
prep_at(thing-32, time-25)
partmod(time-25, knowing-26)
nsubj(thing-32, it-27)
cop(thing-32, is-28)
neg(thing-32, not-29)
det(thing-32, a-30)
amod(thing-32, real-31)
advcl(have-14, thing-32)
advmod(begin-39, really-34)
nsubj(begin-39, I-35)
xsubj(imagine-41, I-35)
aux(begin-39, can-36)
neg(begin-39, not-37)
advmod(begin-39, even-38)
root(ROOT-0, begin-39)
aux(imagine-41, to-40)
xcomp(begin-39, imagine-41)
advmod(large-43, really-42)
amod(numbers-44, large-43)
dobj(imagine-41, numbers-44)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (MD can)
      (ADVP (RB really))
      (VP (VB imagine)
        (PP (IN for)
          (NP (NN example)))
        (SBAR
          (WHADJP (WRB how) (JJ many))
          (S
            (NP (DT a) (NN trillion))
            (VP (VBZ is))))))
    (. .)))

det(one-2, No-1)
nsubj(imagine-5, one-2)
aux(imagine-5, can-3)
advmod(imagine-5, really-4)
root(ROOT-0, imagine-5)
prep_for(imagine-5, example-7)
advmod(many-9, how-8)
dep(is-12, many-9)
det(trillion-11, a-10)
nsubj(is-12, trillion-11)
ccomp(imagine-5, is-12)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP hear)
        (NP (DT that) (NN number))
        (NP (PDT all) (DT the) (NN time))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN reality))
      (VP (VBZ is)
        (PP (IN beyond)
          (NP (PRP$ our) (NN comprehension)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (VP (VBN converted)
              (PP (TO to)
                (NP (NN anything) (JJ real))))))))
    (. .)))

nsubj(hear-2, We-1)
root(ROOT-0, hear-2)
det(number-4, that-3)
iobj(hear-2, number-4)
predet(time-7, all-5)
det(time-7, the-6)
dobj(hear-2, time-7)
det(reality-11, the-10)
nsubj(is-12, reality-11)
conj_but(hear-2, is-12)
poss(comprehension-15, our-14)
prep_beyond(is-12, comprehension-15)
advmod(converted-17, when-16)
advcl(is-12, converted-17)
prep_to(converted-17, anything-19)
amod(anything-19, real-20)

(ROOT
  (S (RB Yet)
    (PRN (, ,)
      (S
        (NP (DT a) (NN trillion))
        (VP (VBZ does) (RB not)
          (ADVP (RB even))
          (VP (VB begin)
            (PP
              (PP (TO to)
                (NP (NN approach) (`` ``) (NN infinity) ('' '')))
              (CC and)
              (PP (IN in)
                (NP (NN fact)))))))
      (, ,))
    (NP (PRP we))
    (VP (VB run)
      (PP (IN into)
        (NP (DT the) (NN number) (`` ``) (NNP trillion) ('' '')))
      (NP (PDT all) (DT the) (NN time))
      (, ,)
      (PP (IN in)
        (NP
          (NP (DT the) (NN deficit))
          (, ,)
          (NP
            (NP (DT the) (NN number))
            (PP (IN of)
              (NP
                (NP (NNS stars))
                (, ,)
                (NP
                  (NP (NN sand))
                  (PP (IN on)
                    (NP (DT the) (NN beach)))
                  (, ,) (FW etc.))))))))
    (. .)))

advmod(run-19, Yet-1)
det(trillion-4, a-3)
nsubj(begin-8, trillion-4)
nsubj(begin-8', trillion-4)
aux(begin-8, does-5)
neg(begin-8, not-6)
advmod(begin-8, even-7)
conj_and(begin-8, begin-8')
parataxis(run-19, begin-8)
parataxis(run-19, begin-8')
nn(infinity-12, approach-10)
prep_to(begin-8, infinity-12)
prep_in(begin-8', fact-16)
nsubj(run-19, we-18)
root(ROOT-0, run-19)
det(trillion-24, the-21)
nn(trillion-24, number-22)
prep_into(run-19, trillion-24)
predet(time-28, all-26)
det(time-28, the-27)
dobj(run-19, time-28)
det(deficit-32, the-31)
prep_in(run-19, deficit-32)
det(number-35, the-34)
appos(deficit-32, number-35)
prep_of(number-35, stars-37)
appos(stars-37, sand-39)
det(beach-42, the-41)
prep_on(sand-39, beach-42)
dep(sand-39, etc.-44)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB everywhere)))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod('s-2, everywhere-3)

(ROOT
  (S (CC But)
    (VP (VB beyond)
      (NP (PRP$ our) (NN comprehension) (NN none))
      (ADVP (DT the) (RBR less)))
    (. .)))

cc(beyond-2, But-1)
root(ROOT-0, beyond-2)
poss(none-5, our-3)
nn(none-5, comprehension-4)
dobj(beyond-2, none-5)
dep(less-7, the-6)
advmod(beyond-2, less-7)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT that))
    (ADVP (RB obviously))
    (VP (MD could)
      (VP (VB be)
        (VP (VBN turned)
          (PP (IN into)
            (NP
              (NP (DT a) (JJ pretty) (NN sermon))
              (PP (IN about)
                (NP
                  (NP (NN god))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (NN something))
                      (VP (MD can)
                        (VP (VB be)
                          (PP (IN in)
                            (NP
                              (NP (NN front))
                              (PP (IN of)
                                (NP (PRP us)))))
                          (, ,)
                          (SBAR (IN while)
                            (S
                              (NP (PRP we))
                              (VP (VBP do) (RB not)
                                (VP (VB comprehend)
                                  (NP (PRP it)))))))))))))))))
    (. .)))

advmod(turned-6, Now-1)
nsubjpass(turned-6, that-2)
advmod(turned-6, obviously-3)
aux(turned-6, could-4)
auxpass(turned-6, be-5)
root(ROOT-0, turned-6)
det(sermon-10, a-8)
amod(sermon-10, pretty-9)
prep_into(turned-6, sermon-10)
prep_about(sermon-10, god-12)
advmod(be-17, how-14)
nsubj(be-17, something-15)
aux(be-17, can-16)
dep(god-12, be-17)
prep_in_front_of(be-17, us-21)
mark(comprehend-27, while-23)
nsubj(comprehend-27, we-24)
aux(comprehend-27, do-25)
neg(comprehend-27, not-26)
advcl(be-17, comprehend-27)
dobj(comprehend-27, it-28)

(ROOT
  (FRAG
    (NP (NN lol))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (ADVP (RB just))
      (VP (VBD realized)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (VBZ cute)
              (NP
                (NP (DT a) (NN point))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD would)
                      (VP (VB be)))))))))))
    (. .)))

root(ROOT-0, lol-1)
dep(lol-1, and-3)
nsubj(realized-6, I-4)
advmod(realized-6, just-5)
dep(lol-1, realized-6)
advmod(cute-8, how-7)
ccomp(realized-6, cute-8)
det(point-10, a-9)
dobj(cute-8, point-10)
nsubj(be-13, point-10)
aux(be-13, would-12)
rcmod(point-10, be-13)

(ROOT
  (S
    (S
      (ADVP (RB Probably))
      (VP (VB make)
        (NP
          (NP
            (QP (DT a) (CD million)))
          (VP (VBG turning)
            (NP (PRP it))
            (PP (IN into)
              (NP
                (NP (DT a) (JJ little) (NN poem)
                  (CC or)
                  (NN something))
                (SBAR
                  (S (`` ``)
                    (NP
                      (NP
                        (NP (NN foot) (NNS prints))
                        (PP (IN in)
                          (NP (DT the) (NN sand))))
                      ('' '')
                      (CC and)
                      (NP
                        (NP (DT all))
                        (NP (DT that)))
                      (: :))
                    (-RRB- -RRB-)
                    (VP
                      (ADVP (RB but)
                        (NP (DT the) (NN point)))
                      (VP (VBZ is)))))))))))
    (, ,)
    (NP (PRP$ our) (NN ability)
      (S
        (VP (TO to)
          (VP (VB have)
            (VP
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBP seem)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (NP
                            (NP (JJ higher-level) (NNS thoughts))
                            (, ,)
                            (NP (`` ``) (NN reason))
                            (, ,)
                            (NP (NN logic))
                            (, ,)
                            (NP (PRP$ your) (NN mind))
                            (, ,)
                            (NP (NN thought))
                            (, ,)
                            (NP (NN reflection))
                            (, ,)
                            (NP (JJ moral) (NNS assessments) (NN etc.))
                            (CC and)
                            (NP (DT the) (NN morality) (, ,) (NNS ethics) (, ,) (NNS rules) (NN etc) ('' '')))
                          (SBAR (IN as)
                            (S
                              (NP (PRP you))
                              (VP (VBP say))))))))))
              (, ,)
              (VP (VBP are)
                (NP
                  (NP
                    (ADJP (RB very) (JJ much))
                    (NNS characteristics))
                  (PP (IN of)
                    (NP (NN matter)))))
              (CC and)
              (VP (VBP are)
                (NP (PRP I))))))))
    (VP (VBP believe)
      (PP (IN of)
        (NP (DT a) (JJ physical) (NN nature))))
    (. .)))

advmod(make-2, Probably-1)
ccomp(believe-78, make-2)
quantmod(million-4, a-3)
dobj(make-2, million-4)
partmod(million-4, turning-5)
dobj(turning-5, it-6)
det(poem-10, a-8)
amod(poem-10, little-9)
prep_into(turning-5, poem-10)
prep_into(turning-5, something-12)
conj_or(poem-10, something-12)
nn(prints-15, foot-14)
nsubj(is-28, prints-15)
det(sand-18, the-17)
prep_in(prints-15, sand-18)
conj_and(prints-15, all-21)
nsubj(is-28, all-21)
dep(all-21, that-22)
advmod(is-28, but-25)
det(point-27, the-26)
pobj(but-25, point-27)
rcmod(poem-10, is-28)
poss(ability-31, our-30)
nsubj(believe-78, ability-31)
aux(characteristics-72, to-32)
aux(characteristics-72, have-33)
nsubj(seem-35, what-34)
ccomp(characteristics-72, seem-35)
aux(thoughts-39, to-36)
cop(thoughts-39, be-37)
amod(thoughts-39, higher-level-38)
xcomp(seem-35, thoughts-39)
xcomp(seem-35, reason-42)
conj_and(thoughts-39, reason-42)
xcomp(seem-35, logic-44)
conj_and(thoughts-39, logic-44)
poss(mind-47, your-46)
xcomp(seem-35, mind-47)
conj_and(thoughts-39, mind-47)
xcomp(seem-35, thought-49)
conj_and(thoughts-39, thought-49)
xcomp(seem-35, reflection-51)
conj_and(thoughts-39, reflection-51)
amod(etc.-55, moral-53)
nn(etc.-55, assessments-54)
xcomp(seem-35, etc.-55)
conj_and(thoughts-39, etc.-55)
det(etc-63, the-57)
nn(etc-63, morality-58)
dep(etc-63, ethics-60)
dep(etc-63, rules-62)
xcomp(seem-35, etc-63)
conj_and(thoughts-39, etc-63)
mark(say-67, as-65)
nsubj(say-67, you-66)
advcl(thoughts-39, say-67)
cop(characteristics-72, are-69)
advmod(much-71, very-70)
amod(characteristics-72, much-71)
infmod(ability-31, characteristics-72)
prep_of(characteristics-72, matter-74)
cop(I-77, are-76)
infmod(ability-31, I-77)
conj_and(characteristics-72, I-77)
root(ROOT-0, believe-78)
det(nature-82, a-80)
amod(nature-82, physical-81)
prep_of(believe-78, nature-82)

(ROOT
  (FRAG
    (ADVP (RB So))
    (, ,)
    (NP (CD 2))
    (. .)))

dep(2-3, So-1)
root(ROOT-0, 2-3)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN response))
        (PP (TO to)
          (NP (PRP$ your) (NN point)))))
    (NP (PRP I))
    (VP (MD would)
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP (DT these) (NNS things))
            (VP (VBP are)
              (NP
                (NP (DT a) (NN part))
                (PP (IN of)
                  (NP (DT the) (JJ natural) (NN world)))))))))
    (. .)))

prep_in(say-8, response-2)
poss(point-5, your-4)
prep_to(response-2, point-5)
nsubj(say-8, I-6)
aux(say-8, would-7)
root(ROOT-0, say-8)
complm(part-14, that-9)
det(things-11, these-10)
nsubj(part-14, things-11)
cop(part-14, are-12)
det(part-14, a-13)
ccomp(say-8, part-14)
det(world-18, the-16)
amod(world-18, natural-17)
prep_of(part-14, world-18)

(ROOT
  (S
    (S
      (NP (DT The) (NN problem))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP
              (NP (PDT all) (DT the) (NNS devices))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP use)))))
            (VP (VBP do)
              (NP (PRP it)))))))
    (: ;)
    (S
      (NP
        (NP (NN reason))
        (, ,)
        (NP (NN logic))
        (, ,)
        (NP
          (NP (PRP$ your) (NN mind))
          (, ,)
          (NP (NN thought))
          (, ,)
          (NP (NN reflection))
          (, ,)
          (NP
            (NP (JJ moral) (NNS assessments))
            (NP (FW etc.)))
          (CC and)
          (NP (DT the) (NN morality)))
        (, ,)
        (NP (NNS ethics))
        (, ,))
      (VP (VBZ rules)
        (NP
          (NP (FW etc))
          (SBAR
            (S
              (NP (PRP you))
              (VP
                (VP (VBP come)
                  (PRT (RP up))
                  (SBAR (IN with)
                    (S
                      (VP (VBP are) (RB not)
                        (NP
                          (NP (NNS characteristics))
                          (PP (IN of)
                            (NP (NN matter))))))))
                (CC nor)
                (VP (VBP are)
                  (ADJP
                    (NP (PRP they))
                    (JJ physical))
                  (PP (IN in)
                    (NP (NN nature))))))))))
    (. .)))

det(problem-2, The-1)
nsubj(is-3, problem-2)
root(ROOT-0, is-3)
complm(do-10, that-4)
predet(devices-7, all-5)
det(devices-7, the-6)
dobj(use-9, devices-7)
nsubj(do-10, devices-7)
nsubj(use-9, you-8)
rcmod(devices-7, use-9)
ccomp(is-3, do-10)
dobj(do-10, it-11)
nsubj(rules-33, reason-13)
appos(reason-13, logic-15)
poss(mind-18, your-17)
appos(reason-13, mind-18)
appos(reason-13, thought-20)
conj_and(mind-18, thought-20)
appos(reason-13, reflection-22)
conj_and(mind-18, reflection-22)
amod(assessments-25, moral-24)
appos(reason-13, assessments-25)
conj_and(mind-18, assessments-25)
dep(assessments-25, etc.-26)
det(morality-29, the-28)
appos(reason-13, morality-29)
conj_and(mind-18, morality-29)
appos(reason-13, ethics-31)
parataxis(is-3, rules-33)
dobj(rules-33, etc-34)
dobj(come-36, etc-34)
nsubj(come-36, you-35)
nsubj(physical-47, you-35)
rcmod(etc-34, come-36)
prt(come-36, up-37)
mark(characteristics-41, with-38)
cop(characteristics-41, are-39)
neg(characteristics-41, not-40)
advcl(come-36, characteristics-41)
prep_of(characteristics-41, matter-43)
cop(physical-47, are-45)
npadvmod(physical-47, they-46)
rcmod(etc-34, physical-47)
conj_nor(come-36, physical-47)
prep_in(physical-47, nature-49)

(ROOT
  (S
    (NP
      (NP (NN reason))
      (, ,)
      (NP
        (NP (NN logic))
        (, ,)
        (NP (NN reflection))
        (, ,)
        (NP
          (NP (NNS ethics))
          (, ,) (RB even)
          (NP
            (NP (DT the) (NN morality))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD began)
                  (NP (DT this) (JJ entire) (NN sideline))
                  (PP (TO to)
                    (NP (DT the) (NN debate)))))))))
      (, ,))
    (VP (VBP are)
      (NP
        (NP (DT all) (NNS things))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP believe)
              (SBAR (IN that)
                (S
                  (VP (VBD developed)
                    (ADVP (RB naturally))
                    (PP (IN in)
                      (NP
                        (NP (NNS humans))
                        (, ,)
                        (CC and)
                        (NP
                          (NP (JJ many) (JJ many) (NNS mammals))
                          (PP (IN with)
                            (NP
                              (ADJP (RB relatively) (JJ large))
                              (NNS brains))))))
                    (, ,)
                    (PP (IN from)
                      (S
                        (VP (VBG observing)
                          (NP
                            (NP (DT the) (NNS benefits))
                            (PP (IN of)
                              (NP
                                (NP (DT this) (NN kind))
                                (PP (IN of)
                                  (NP (JJ social) (NN behavior)))))))))))))))))
    (. .)))

nsubj(things-23, reason-1)
appos(reason-1, logic-3)
appos(logic-3, reflection-5)
appos(logic-3, ethics-7)
advmod(ethics-7, even-9)
det(morality-11, the-10)
dep(ethics-7, morality-11)
nsubj(began-13, morality-11)
rcmod(morality-11, began-13)
det(sideline-16, this-14)
amod(sideline-16, entire-15)
dobj(began-13, sideline-16)
det(debate-19, the-18)
prep_to(began-13, debate-19)
cop(things-23, are-21)
det(things-23, all-22)
root(ROOT-0, things-23)
nsubj(believe-25, I-24)
rcmod(things-23, believe-25)
complm(developed-27, that-26)
ccomp(believe-25, developed-27)
advmod(developed-27, naturally-28)
prep_in(developed-27, humans-30)
amod(mammals-35, many-33)
amod(mammals-35, many-34)
prep_in(developed-27, mammals-35)
conj_and(humans-30, mammals-35)
advmod(large-38, relatively-37)
amod(brains-39, large-38)
prep_with(mammals-35, brains-39)
prepc_from(developed-27, observing-42)
det(benefits-44, the-43)
dobj(observing-42, benefits-44)
det(kind-47, this-46)
prep_of(benefits-44, kind-47)
amod(behavior-50, social-49)
prep_of(kind-47, behavior-50)

(ROOT
  (S
    (NP (DT A) (NN chimpanzee))
    (VP (MD can)
      (VP (VB learn)
        (NP
          (NP (-LRB- -LRB-) (NNP From) ('' '') (NNP Bonobo))
          (: :)
          (NP (DT the) (JJ forgotten) (NN ape) ('' ''))
          (-RRB- -RRB-))
        (PP (IN for)
          (NP (NN example)))
        (, ,)
        (SBAR (IN that)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP he))
                (VP (VBZ brings)
                  (NP (DT a) (NN lover) (NN food)))))
            (, ,)
            (NP (PRP she))
            (VP (MD will)
              (VP (VB have)
                (NP
                  (NP (NN sex))
                  (PP (IN with)
                    (NP (PRP him))))
                (ADVP (RB later))))))))
    (. .)))

det(chimpanzee-2, A-1)
nsubj(learn-4, chimpanzee-2)
aux(learn-4, can-3)
root(ROOT-0, learn-4)
nn(Bonobo-8, From-6)
dobj(learn-4, Bonobo-8)
det(ape-12, the-10)
amod(ape-12, forgotten-11)
dep(Bonobo-8, ape-12)
prep_for(learn-4, example-16)
complm(have-28, that-18)
mark(brings-21, if-19)
nsubj(brings-21, he-20)
advcl(have-28, brings-21)
det(food-24, a-22)
nn(food-24, lover-23)
dobj(brings-21, food-24)
nsubj(have-28, she-26)
aux(have-28, will-27)
ccomp(learn-4, have-28)
dobj(have-28, sex-29)
prep_with(sex-29, him-31)
advmod(have-28, later-32)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP he))
        (VP (VBZ does) (RB not))))
    (, ,)
    (NP (PRP she))
    (VP (VBZ does) (RB not))
    (. .)))

advmod(does-3, When-1)
nsubj(does-3, he-2)
advcl(does-7, does-3)
neg(does-3, not-4)
nsubj(does-7, she-6)
root(ROOT-0, does-7)
neg(does-7, not-8)

(ROOT
  (S (IN So)
    (NP (PRP they))
    (VP (VBD learned)
      (S
        (VP (TO to)
          (VP (VB share)))))
    (. .)))

dep(learned-3, So-1)
nsubj(learned-3, they-2)
xsubj(share-5, they-2)
root(ROOT-0, learned-3)
aux(share-5, to-4)
xcomp(learned-3, share-5)

(ROOT
  (S
    (PP (RB Even) (IN in)
      (NP (PRP them)))
    (, ,)
    (NP (DT this))
    (VP (VBD took)
      (NP
        (NP (DT a) (JJ certain) (NN amount))
        (PP (IN of)
          (NP (NN reflection)))))
    (. .)))

advmod(took-6, Even-1)
advcl(took-6, in-2)
prep_in(took-6, them-3)
nsubj(took-6, this-5)
root(ROOT-0, took-6)
det(amount-9, a-7)
amod(amount-9, certain-8)
dobj(took-6, amount-9)
prep_of(amount-9, reflection-11)

(ROOT
  (S
    (S
      (NP (DT These) (NNS primates))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB look)
              (PP (IN at)
                (NP (PRP them)))
              (ADVP (RB self)))))))
    (, ,)
    (CC and)
    (S
      (PP (IN on)
        (NP
          (NP (DT some) (NN level))
          (SBAR
            (S
              (VP (VBP say) ('' ''))))))
      (NP (PRP I))
      (VP (VBP want)
        (NP
          (NP (NN sex))
          ('' '')
          (SBAR
            (S
              (ADVP (RB then))
              (, ,)
              (NP
                (NP (PRP$ their) (NNS actions))
                (PP (IN in)
                  (NP
                    (NP (NN pursuit))
                    (PP (IN of)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP they))
                          (VP (VBN determined)
                            (PP (IN through)
                              (NP (NN self-reflection))))))))))
              (VP
                (VP (VBZ appears))
                (, ,)
                (CC and)
                (VP (MD may)
                  (ADVP (RB well))
                  (VP (VB be))))))
          (, ,)
          (NP (NN morality)))))
    (. .)))

det(primates-2, These-1)
nsubj(had-3, primates-2)
xsubj(look-5, primates-2)
root(ROOT-0, had-3)
aux(look-5, to-4)
xcomp(had-3, look-5)
prep_at(look-5, them-7)
advmod(look-5, self-8)
det(level-13, some-12)
prep_on(want-17, level-13)
rcmod(level-13, say-14)
nsubj(want-17, I-16)
conj_and(had-3, want-17)
dobj(want-17, sex-18)
dobj(appears-32, sex-18)
advmod(appears-32, then-20)
poss(actions-23, their-22)
nsubj(appears-32, actions-23)
nsubj(be-37, actions-23)
prep_in(actions-23, pursuit-25)
dobj(determined-29, what-27)
nsubj(determined-29, they-28)
prepc_of(pursuit-25, determined-29)
prep_through(determined-29, self-reflection-31)
rcmod(sex-18, appears-32)
aux(be-37, may-35)
advmod(be-37, well-36)
rcmod(sex-18, be-37)
conj_and(appears-32, be-37)
appos(sex-18, morality-39)

(ROOT
  (S
    (PP (IN Through)
      (NP (NN time)))
    (, ,)
    (NP (PRP we))
    (VP (VBP observe)
      (NP
        (NP (DT the) (NNS fruits))
        (PP (IN of)
          (NP (PRP$ our) (NNS actions))))
      (PP
        (PP
          (ADVP (DT both))
          (IN from)
          (NP (PRP$ our) (JJ own) (NN experience)))
        (, ,)
        (CC and)
        (PP (IN with)
          (NP (PRP$ our) (NN capacity)
            (S
              (VP (TO to)
                (VP (VB imagine)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (NNS others))
                      (VP (VBP have)
                        (VP (VBN experienced))))))))))))
    (. .)))

prep_through(observe-5, time-2)
nsubj(observe-5, we-4)
nsubj(observe-5', we-4)
root(ROOT-0, observe-5)
conj_and(observe-5, observe-5')
det(fruits-7, the-6)
dobj(observe-5, fruits-7)
poss(actions-10, our-9)
prep_of(fruits-7, actions-10)
advmod(observe-5, both-11)
poss(experience-15, our-13)
amod(experience-15, own-14)
prep_from(observe-5, experience-15)
poss(capacity-20, our-19)
prep_with(observe-5', capacity-20)
aux(imagine-22, to-21)
infmod(capacity-20, imagine-22)
dobj(experienced-26, what-23)
nsubj(experienced-26, others-24)
aux(experienced-26, have-25)
ccomp(imagine-22, experienced-26)

(ROOT
  (NP
    (NP (DT This) (NNS leads))
    (PP (IN over)
      (NP
        (NP
          (QP (NNS hundreds) (IN of) (NNS thousands)))
        (PP (IN of)
          (NP
            (NP (NNS years))
            (PP (IN of)
              (NP (NN evolution)))))))
    (, ,)
    (NP (NN experience))
    (, ,)
    (S
      (S
        (VP (VBG breeding)
          (PP (IN with)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP act)
                    (PP (IN in)
                      (NP (DT a) (JJ similar) (NN way))))))))))
      (, ,) (FW etc) (, ,)
      (S
        (VP (VBN generation)
          (PP (IN after)
            (NP (NN generation)))
          (, ,)
          (PP (TO to)
            (NP
              (NP (DT a) (NNS people))
              (PRN (-LRB- -LRB-)
                (NP (PRP us))
                (-RRB- -RRB-))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP appear)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP
                            (NP (DT a) (NN capacity))
                            (PP (IN for)
                              (NP (NN morality)))))))))))))))
    (, ,)
    (NP (NN reflection))
    (, ,)
    (NP (JJ moral) (NN judgment))
    (, ,)
    (S
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP
              (NP (DT the) (NNS hundreds))
              (PP (IN of)
                (NP
                  (NP (NNS thousands))
                  (PP (IN of)
                    (NP
                      (NP (NNS years))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN trial)
                            (CC and)
                            (NN error))
                          (PP (IN of)
                            (NP (NN evolution))))))))))
            (VP (VBP are) (RB not)
              (VP (VBN taken)
                (PP (IN into)
                  (NP (NN consideration)))))))
        (, ,)
        (NP (PRP I))
        (VP (VBP admit)
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD can)
                (VP (VB appear)
                  (ADJP (RB quite) (JJ miraculous))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB see)
            (S
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (PRP one))
                  (VP (MD may)
                    (VP (VB feel)
                      (S
                        (NP (NN something))
                        (`` ``)
                        (ADJP (JJR greater))
                        ('' ''))))))
              (VP (MD must)
                (VP (VB be)
                  (NP
                    (NP (DT an) (NN architect))
                    (PP (IN of)
                      (NP (NNS sorts)))))))))))
    (. .)))

det(leads-2, This-1)
root(ROOT-0, leads-2)
dep(thousands-6, hundreds-4)
quantmod(thousands-6, of-5)
prep_over(leads-2, thousands-6)
prep_of(thousands-6, years-8)
prep_of(years-8, evolution-10)
appos(leads-2, experience-12)
dep(leads-2, breeding-14)
prep_with(breeding-14, those-16)
nsubj(act-18, those-16)
rcmod(those-16, act-18)
det(way-22, a-20)
amod(way-22, similar-21)
prep_in(act-18, way-22)
dep(breeding-14, etc-24)
dep(breeding-14, generation-26)
prep_after(generation-26, generation-28)
det(people-32, a-31)
prep_to(generation-26, people-32)
nsubj(appear-37, people-32)
dep(people-32, us-34)
rcmod(people-32, appear-37)
aux(have-39, to-38)
xcomp(appear-37, have-39)
det(capacity-41, a-40)
dobj(have-39, capacity-41)
prep_for(capacity-41, morality-43)
appos(leads-2, reflection-45)
amod(judgment-48, moral-47)
appos(leads-2, judgment-48)
advmod(taken-66, when-50)
det(hundreds-52, the-51)
nsubjpass(taken-66, hundreds-52)
prep_of(hundreds-52, thousands-54)
prep_of(thousands-54, years-56)
det(trial-59, the-58)
prep_of(years-56, trial-59)
prep_of(years-56, error-61)
conj_and(trial-59, error-61)
prep_of(trial-59, evolution-63)
auxpass(taken-66, are-64)
neg(taken-66, not-65)
advcl(admit-71, taken-66)
prep_into(taken-66, consideration-68)
nsubj(admit-71, I-70)
dep(leads-2, admit-71)
nsubj(miraculous-76, it-72)
aux(miraculous-76, can-73)
cop(miraculous-76, appear-74)
advmod(miraculous-76, quite-75)
ccomp(admit-71, miraculous-76)
nsubj(see-81, I-79)
aux(see-81, can-80)
dep(leads-2, see-81)
conj_and(admit-71, see-81)
advmod(feel-85, how-82)
nsubj(feel-85, one-83)
aux(feel-85, may-84)
csubj(architect-93, feel-85)
dep(greater-88, something-86)
dep(feel-85, greater-88)
aux(architect-93, must-90)
cop(architect-93, be-91)
det(architect-93, an-92)
ccomp(see-81, architect-93)
prep_of(architect-93, sorts-95)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (DT this) (NN architect))
        (VP (VBZ is) (RB n't)
          (ADVP (RB really))
          (ADJP (IN around)
            (S
              (VP (TO to)
                (VP (VB talk)
                  (S
                    (VP (TO to)
                      (VP (VB like)
                        (NP (NNS deists))))))))))))
    (VP (VBP believe))
    (. .)))

advmod(around-8, Even-1)
dep(around-8, if-2)
det(architect-4, this-3)
nsubj(around-8, architect-4)
cop(around-8, is-5)
neg(around-8, n't-6)
advmod(around-8, really-7)
advcl(believe-14, around-8)
csubj(believe-14, around-8)
aux(talk-10, to-9)
xcomp(around-8, talk-10)
aux(like-12, to-11)
xcomp(talk-10, like-12)
dobj(like-12, deists-13)
root(ROOT-0, believe-14)

(ROOT
  (S (CC But)
    (S
      (VP (VBN given)
        (ADVP
          (NP (DT the) (NN progression))
          (RB over))))
    (VP (VBZ generations))
    (. .)))

cc(generations-6, But-1)
csubj(generations-6, given-2)
det(progression-4, the-3)
npadvmod(over-5, progression-4)
advmod(given-2, over-5)
root(ROOT-0, generations-6)

(ROOT
  (S
    (INTJ (UH Okay))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (PP (IN like)
        (NP
          (NP (NNP St.) (NNP Anselm) (POS 's))
          (NNP Ontological) (NN theory))))
    (. .)))

dep(is-4, Okay-1)
nsubj(is-4, this-3)
root(ROOT-0, is-4)
nn(Anselm-7, St.-6)
poss(theory-10, Anselm-7)
nn(theory-10, Ontological-9)
prep_like(is-4, theory-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB feel)
        (S
          (NP (DT these) (JJ higher-level) (JJ human) (NNS characteristics))
          (VP (VB necessitate)
            (NP
              (NP (DT the) (NN existence))
              (PP (IN of)
                (NP (DT a) (JJR greater) (NN being))))))))
    (. .)))

nsubj(feel-4, I-1)
aux(feel-4, do-2)
neg(feel-4, n't-3)
root(ROOT-0, feel-4)
det(characteristics-8, these-5)
amod(characteristics-8, higher-level-6)
amod(characteristics-8, human-7)
nsubj(necessitate-9, characteristics-8)
ccomp(feel-4, necessitate-9)
det(existence-11, the-10)
dobj(necessitate-9, existence-11)
det(being-15, a-13)
amod(being-15, greater-14)
prep_of(existence-11, being-15)

(ROOT
  (S
    (INTJ (RB Sure))
    (, ,)
    (NP (PRP they))
    (VP (VBP are) (RB not)
      (NP
        (NP (`` ``) (NNS characteristics))
        (PP (IN of)
          (S
            (VP (NN matter)
              (SBAR
                (SINV (CC nor)
                  (VBP are)
                  (NP (PRP they))
                  (ADJP (JJ physical)
                    (PP (IN in)
                      (NP (NN nature)))))))))))
    (. .)))

dep(characteristics-7, Sure-1)
nsubj(characteristics-7, they-3)
cop(characteristics-7, are-4)
neg(characteristics-7, not-5)
root(ROOT-0, characteristics-7)
prepc_of(characteristics-7, matter-9)
cc(physical-13, nor-10)
cop(physical-13, are-11)
nsubj(physical-13, they-12)
dep(matter-9, physical-13)
prep_in(physical-13, nature-15)

(ROOT
  (S ('' '')
    (S (CC But)
      (NP (PRP they))
      (VP (VBP are)
        (NP
          (NP (NNS results))
          (PP (IN of)
            (NP (JJ physical) (NN nature))))))
    (, ,)
    (VP (VBZ hundreds)
      (PP (IN of)
        (NP
          (NP (NNS thousands))
          (PP (IN of)
            (NP
              (NP (NNS years))
              (PP (IN of)
                (NP (JJ physical) (NN nature))))))))
    (. .)))

cc(results-5, But-2)
nsubj(results-5, they-3)
cop(results-5, are-4)
ccomp(hundreds-10, results-5)
amod(nature-8, physical-7)
prep_of(results-5, nature-8)
root(ROOT-0, hundreds-10)
prep_of(hundreds-10, thousands-12)
prep_of(thousands-12, years-14)
amod(nature-17, physical-16)
prep_of(years-14, nature-17)

(ROOT
  (FRAG
    (NP (RB Now))
    (, ,)
    (PP (TO to)
      (NP (DT the) (NN debate)))
    (. .)))

root(ROOT-0, Now-1)
dep(Now-1, to-3)
det(debate-5, the-4)
pobj(to-3, debate-5)

(ROOT
  (FRAG ('' '')
    (NP (JJ Is) (NN belief))
    (PP (IN in)
      (NP
        (NP (NNP God))
        (PP (IN for)
          (NP (DT the) (NNP GREATER) (NNP GOOD)))))
    (. .)))

amod(belief-3, Is-2)
root(ROOT-0, belief-3)
dep(belief-3, in-4)
pobj(in-4, God-5)
det(GOOD-9, the-7)
nn(GOOD-9, GREATER-8)
prep_for(God-5, GOOD-9)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB believe)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is))))))
    (. .)))

nsubj(believe-5, I-2)
aux(believe-5, do-3)
neg(believe-5, not-4)
root(ROOT-0, believe-5)
nsubj(is-7, it-6)
ccomp(believe-5, is-7)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (ADJP (JJ capable)
        (PP (IN of)
          (NP
            (NP (PDT all) (DT the) (NN good))
            (, ,)
            (CC and)
            (NP
              (NP (PDT all) (DT the) (NN evil))
              (PP (IN on)
                (NP (PRP$ our) (JJ own))))
            (, ,))))
      (PP (IN with)
        (CC or)
        (IN without)
        (NP (DT a) (NN god))))
    (. .)))

nsubj(capable-3, We-1)
nsubj(capable-3', We-1)
cop(capable-3, are-2)
root(ROOT-0, capable-3)
conj_or(capable-3, capable-3')
predet(good-7, all-5)
det(good-7, the-6)
prep_of(capable-3, good-7)
predet(evil-12, all-10)
det(evil-12, the-11)
prep_of(capable-3, evil-12)
conj_and(good-7, evil-12)
poss(own-15, our-14)
prep_on(evil-12, own-15)
det(god-21, a-20)
prep_with(capable-3, god-21)
prep_without(capable-3', god-21)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB like)
        (NP (CD one))
        (S
          (VP (VBG using)
            (NP (NN god))
            (PP
              (PP (IN as)
                (NP
                  (NP (DT an) (NN excuse))
                  (PP (IN for)
                    (ADJP (JJ good)))))
              (CC or)
              (PP (IN for)
                (NP (NN evil))))))))
    (. .)))

cc(like-5, And-1)
nsubj(like-5, I-2)
aux(like-5, do-3)
neg(like-5, not-4)
root(ROOT-0, like-5)
dobj(like-5, one-6)
xcomp(like-5, using-7)
xcomp(like-5, using-7')
conj_or(using-7, using-7')
dobj(using-7, god-8)
det(excuse-11, an-10)
prep_as(using-7, excuse-11)
prep_for(excuse-11, good-13)
prep_for(using-7', evil-16)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (SBAR
                (S
                  (NP (NNS people))
                  (, ,)
                  (ADVP (RB always))
                  (VP (VBD was)
                    (NP (NNS people))))
                (, ,)
                (CC and)
                (S
                  (ADVP (RB always))
                  (VP (MD will)
                    (VP (VB be)
                      (NP (NNS people)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJR better))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ aware)
                (WHPP (IN of)
                  (WHNP (WDT that))))
              (SBAR (RB even) (IN if)
                (S
                  (NP (PRP it))
                  (VP (MD should)
                    (VP (VB be)
                      (NP (DT the) (NN case)))))))))
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (MD could) (RB n't)
              (VP (VB handle)
                (NP (DT this) (NN idea))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
nsubj(is-4, it-3)
ccomp(believe-2, is-4)
nsubj(people-9, people-5)
advmod(people-9, always-7)
cop(people-9, was-8)
ccomp(is-4, people-9)
advmod(people-15, always-12)
aux(people-15, will-13)
cop(people-15, be-14)
ccomp(is-4, people-15)
conj_and(people-9, people-15)
nsubj(better-20, it-18)
xsubj(aware-23, it-18)
cop(better-20, is-19)
conj_and(believe-2, better-20)
aux(aware-23, to-21)
cop(aware-23, be-22)
xcomp(better-20, aware-23)
prep_of(aware-23, that-25)
advmod(case-32, even-26)
dep(case-32, if-27)
nsubj(case-32, it-28)
aux(case-32, should-29)
cop(case-32, be-30)
det(case-32, the-31)
ccomp(aware-23, case-32)
complm(handle-37, that-33)
nsubj(handle-37, people-34)
aux(handle-37, could-35)
neg(handle-37, n't-36)
ccomp(better-20, handle-37)
det(idea-39, this-38)
dobj(handle-37, idea-39)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR (IN though)
        (S
          (NP (PRP they))
          (VP (MD could)
            (VP (VB handle)
              (S
                (NP (PRP it))
                (ADJP (RB just) (JJ fine))
                (SBAR (RB though) (IN if)
                  (S
                    (NP (NN t) (NN hey))
                    (VP (VBD tried))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
mark(handle-6, though-3)
nsubj(handle-6, they-4)
aux(handle-6, could-5)
advcl(think-2, handle-6)
nsubj(tried-14, it-7)
advmod(fine-9, just-8)
dep(tried-14, fine-9)
advmod(tried-14, though-10)
dep(tried-14, if-11)
nn(hey-13, t-12)
nsubj(tried-14, hey-13)
xcomp(handle-6, tried-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (VP (VBN supposed)
        (S
          (VP (TO to)
            (ADVP (RB basically))
            (VP (VB be)
              (NP
                (NP (DT a)
                  (NAC
                    (NP (CD one) (NN page))
                    (ADVP (RB strictly)))
                  (JJ cerebral) (NN proof))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN existence))
                    (PP (IN of)
                      (NP (DT some) (NN god)))))))))))
    (. .)))

nsubjpass(supposed-3, It-1)
xsubj(proof-12, It-1)
auxpass(supposed-3, was-2)
root(ROOT-0, supposed-3)
aux(proof-12, to-4)
advmod(proof-12, basically-5)
cop(proof-12, be-6)
det(proof-12, a-7)
num(page-9, one-8)
dep(proof-12, page-9)
dep(page-9, strictly-10)
amod(proof-12, cerebral-11)
xcomp(supposed-3, proof-12)
det(existence-15, the-14)
prep_of(proof-12, existence-15)
det(god-18, some-17)
prep_of(existence-15, god-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ takes)
      (SBAR
        (S
          (NP
            (NP (DT a) (JJ similar) (NN premise))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP I))
                (VP (VBP think)))))
          (VP (VBZ is)
            (ADJP (JJ provable))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (NNS humans))
                (VP (VBP are)
                  (ADJP (JJ incapable)
                    (PP (IN of)
                      (NP (NN creation)))))))))))
    (. .)))

nsubj(takes-2, It-1)
root(ROOT-0, takes-2)
det(premise-5, a-3)
amod(premise-5, similar-4)
dobj(think-8, premise-5)
nsubj(provable-10, premise-5)
rel(think-8, which-6)
nsubj(think-8, I-7)
rcmod(premise-5, think-8)
cop(provable-10, is-9)
ccomp(takes-2, provable-10)
complm(incapable-15, that-12)
nsubj(incapable-15, humans-13)
cop(incapable-15, are-14)
ccomp(provable-10, incapable-15)
prep_of(incapable-15, creation-17)

(ROOT
  (S
    (S
      (NP
        (NP (DT Every) (NN idea))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP have)
              (VP (VBZ comes)
                (PP (IN from)
                  (NP (NN something))))))))
      (NP (PRP we))
      (VP (VBP observe)))
    (: ;)
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB try)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP like)
                  (PRN (, ,)
                    (S
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (NP
                          (NP (NN kind))
                          (PP (IN of)
                            (NP
                              (NP (NN fun))
                              (, ,)
                              (NP (NN attempt)
                                (S
                                  (VP (TO to)
                                    (VP (VB imagine)
                                      (NP (NN something) (JJ new)))))))))))
                    (, ,))
                  (NP (DT a) (JJ new) (JJ fantastic) (NN creature))
                  (ADVP (RB perhaps)))))
            (, ,)
            (NP (PRP you))
            (VP (MD 'll)
              (VP (VB find)
                (ADVP (DT no) (NN matter)
                  (SBAR
                    (WHADVP (WRB how)
                      (ADJP (JJ crazy)))
                    (S
                      (NP
                        (NP (DT an) (NN idea))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP come)
                              (PRT (RP up))
                              (SBAR (IN with) (, ,)
                                (S
                                  (NP (PRP it))
                                  (VP (MD can)
                                    (VP (VB be)
                                      (VP (VBN traced)
                                        (PP (TO to)
                                          (NP (NNS things))))))))))))
                      (VP (VBD observed)
                        (NP (NN piece))
                        (PP (IN by)
                          (NP (NN piece)))))))))))))
    (. .)))

det(idea-2, Every-1)
dobj(comes-5, idea-2)
nsubj(observe-9, idea-2)
nsubj(comes-5, we-3)
aux(comes-5, have-4)
rcmod(idea-2, comes-5)
prep_from(comes-5, something-7)
nsubj(observe-9, we-8)
root(ROOT-0, observe-9)
nsubj(try-14, you-12)
aux(try-14, can-13)
conj_and(observe-9, try-14)
mark(like-17, if-15)
nsubj(like-17, you-16)
advcl(find-39, like-17)
nsubj(kind-21, it-19)
cop(kind-21, 's-20)
parataxis(like-17, kind-21)
prep_of(kind-21, fun-23)
appos(fun-23, attempt-25)
aux(imagine-27, to-26)
infmod(attempt-25, imagine-27)
dobj(imagine-27, something-28)
amod(something-28, new-29)
det(creature-34, a-31)
amod(creature-34, new-32)
amod(creature-34, fantastic-33)
dobj(like-17, creature-34)
advmod(like-17, perhaps-35)
nsubj(find-39, you-37)
aux(find-39, 'll-38)
ccomp(try-14, find-39)
dep(matter-41, no-40)
advmod(find-39, matter-41)
advmod(observed-57, how-42)
dep(how-42, crazy-43)
det(idea-45, an-44)
nsubj(observed-57, idea-45)
nsubj(come-47, you-46)
rcmod(idea-45, come-47)
prt(come-47, up-48)
mark(traced-54, with-49)
nsubjpass(traced-54, it-51)
aux(traced-54, can-52)
auxpass(traced-54, be-53)
advcl(come-47, traced-54)
prep_to(traced-54, things-56)
dep(matter-41, observed-57)
dobj(observed-57, piece-58)
prep_by(observed-57, piece-60)

(ROOT
  (S
    (S
      (NP (NNP Everything))
      (VP (VBZ is)
        (NP
          (NP (DT an) (NN exaggeration))
          (, ,)
          (CC or)
          (NP
            (NP (DT a) (NN combination))
            (PP (IN of)
              (NP (NNS things) (NN etc)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ 's) (RB all)
        (ADJP (JJ traceable)
          (PP (TO to)
            (NP (DT the) (JJ real) (NN world))))))
    (. .)))

nsubj(exaggeration-4, Everything-1)
cop(exaggeration-4, is-2)
det(exaggeration-4, an-3)
root(ROOT-0, exaggeration-4)
det(combination-8, a-7)
conj_or(exaggeration-4, combination-8)
nn(etc-11, things-10)
prep_of(combination-8, etc-11)
nsubj(traceable-17, it-14)
cop(traceable-17, 's-15)
advmod(traceable-17, all-16)
conj_but(exaggeration-4, traceable-17)
det(world-21, the-19)
amod(world-21, real-20)
prep_to(traceable-17, world-21)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBD took)
        (NP
          (NP (DT this) (JJ basic) (NN fact))
          (PP (IN of)
            (NP (DT the) (JJ human) (NN mind)))))
      (, ,)
      (CC and)
      (VP (VBD put)
        (ADVP (RB forth)
          (NP (DT the) (NN idea)))
        (SBAR (IN that)
          (S
            (NP (NN man))
            (ADVP (RB long) (RB ago))
            (VP (VBD came)
              (PRT (RP up))
              (PP (IN with)
                (NP
                  (NP (DT this) (NN idea))
                  (PP (IN of)
                    (NP (NN something)))
                  (`` ``)
                  (ADJP (JJR greater)
                    (PP (IN than)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (NN nothing) (RB else))
                          (VP (MD can)
                            (VP (VB exist))))))))))))))
    (. .)))

nsubj(took-2, He-1)
nsubj(put-12, He-1)
root(ROOT-0, took-2)
det(fact-5, this-3)
amod(fact-5, basic-4)
dobj(took-2, fact-5)
det(mind-9, the-7)
amod(mind-9, human-8)
prep_of(fact-5, mind-9)
conj_and(took-2, put-12)
advmod(put-12, forth-13)
det(idea-15, the-14)
pobj(forth-13, idea-15)
complm(came-20, that-16)
nsubj(came-20, man-17)
advmod(ago-19, long-18)
advmod(came-20, ago-19)
ccomp(put-12, came-20)
prt(came-20, up-21)
det(idea-24, this-23)
prep_with(came-20, idea-24)
prep_of(idea-24, something-26)
amod(idea-24, greater-28)
dobj(exist-34, which-30)
nsubj(exist-34, nothing-31)
advmod(nothing-31, else-32)
aux(exist-34, can-33)
prepc_than(greater-28, exist-34)

