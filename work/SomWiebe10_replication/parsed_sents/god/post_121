(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP
        (NP (DT a) (RB bit))
        (VBN disappointed)
        (PP (IN in)
          (NP (DT the) (JJ human) (NN race)))))
    (. .)))

nsubjpass(disappointed-5, I-1)
auxpass(disappointed-5, am-2)
det(bit-4, a-3)
dep(disappointed-5, bit-4)
root(ROOT-0, disappointed-5)
det(race-9, the-7)
amod(race-9, human-8)
prep_in(disappointed-5, race-9)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ human) (NN race))
      (PP (IN as)
        (NP (DT a) (NN whole))))
    (VP (VBZ has)
      (VP (VBN tried)
        (PP (IN for)
          (NP
            (NP (NNS centuries))
            (PP (TO to)
              (NP (NNP X)))))
        (PP (IN out)
          (NP
            (NP (NNP God))
            (CC and)
            (NP (DT any) (JJ religious) (NNS ideas)
              (CC and)
              (NNS characteristics))))))
    (. .)))

det(race-3, The-1)
amod(race-3, human-2)
nsubj(tried-8, race-3)
det(whole-6, a-5)
prep_as(race-3, whole-6)
aux(tried-8, has-7)
root(ROOT-0, tried-8)
prep_for(tried-8, centuries-10)
prep_to(centuries-10, X-12)
prep_out(tried-8, God-14)
det(ideas-18, any-16)
amod(ideas-18, religious-17)
prep_out(tried-8, ideas-18)
conj_and(God-14, ideas-18)
conj_and(God-14, characteristics-20)
conj_and(ideas-18, characteristics-20)

(ROOT
  (SBARQ
    (SBAR (RB Just)
      (S
        (NP (DT a) (NN simple))
        (VP (VBP point)
          (S
            (VP (TO to)
              (VP (VB leave)
                (NP (PRP you))
                (PP (IN with))))
            (: :)
            (SBAR (IN If)
              (S
                (NP (NNP God))
                (VP (VBD did) (RB n't)
                  (VP (VB create)
                    (NP
                      (NP (DT the) (NN world)
                        (CC and)
                        (NN everything))
                      (PP (IN in)
                        (NP (PRP it)))))))))
          (, ,)
          (ADVP (RB then)))))
    (WHNP (WP who))
    (SQ
      (VP (VBD did)))
    (. ?)))

advmod(point-4, Just-1)
det(simple-3, a-2)
nsubj(point-4, simple-3)
xsubj(leave-6, simple-3)
dep(did-24, point-4)
aux(leave-6, to-5)
xcomp(point-4, leave-6)
dobj(leave-6, you-7)
prep(leave-6, with-8)
mark(create-14, If-10)
nsubj(create-14, God-11)
aux(create-14, did-12)
neg(create-14, n't-13)
parataxis(leave-6, create-14)
det(world-16, the-15)
dobj(create-14, world-16)
dobj(create-14, everything-18)
conj_and(world-16, everything-18)
prep_in(world-16, it-20)
advmod(point-4, then-22)
nsubj(did-24, who-23)
root(ROOT-0, did-24)

(ROOT
  (S
    (VP (VB Are)
      (NP (PRP we))
      (ADVP (RB seriously))
      (, ,)
      (PP (IN as)
        (NP
          (NP (`` ``) (VBN educated) ('' '') (NNS men))
          (CC and)
          (NP
            (NP (NNS women))
            (VP (VBG suggesting)
              (SBAR (IN that)
                (S
                  (NP (PRP we))
                  (RB all)
                  (VP (VB derive)
                    (PP (IN from)
                      (NP (NNP monkeys) (NNP ??!!)))))))))))))

cop(we-2, Are-1)
root(ROOT-0, we-2)
advmod(we-2, seriously-3)
amod(men-9, educated-7)
prep_as(we-2, men-9)
prep_as(we-2, women-11)
conj_and(men-9, women-11)
partmod(women-11, suggesting-12)
complm(derive-16, that-13)
nsubj(derive-16, we-14)
advmod(derive-16, all-15)
ccomp(suggesting-12, derive-16)
nn(??!!-19, monkeys-18)
prep_from(derive-16, ??!!-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB hope)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (`` ``)
            (VP (VBN educated) ('' '')
              (NP (NNS people))
              (PP
                (ADVP (RB no) (JJR better))
                (IN than)
                (NP (DT this))))))))
    (. .)))

nsubj(hope-3, I-1)
aux(hope-3, would-2)
root(ROOT-0, hope-3)
complm(educated-7, that-4)
nsubj(educated-7, we-5)
ccomp(hope-3, educated-7)
dobj(educated-7, people-9)
advmod(better-11, no-10)
advmod(educated-7, better-11)
prep_than(educated-7, this-13)

(ROOT
  (S
    (NP (NNP God))
    (VP
      (VP (VBZ is))
      (, ,)
      (VP (VBD was))
      (, ,)
      (CC and)
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB come))))))
    (. .)))

nsubj(is-2, God-1)
nsubj(was-4, God-1)
nsubj(is-7, God-1)
xsubj(come-9, God-1)
root(ROOT-0, is-2)
conj_and(is-2, was-4)
conj_and(is-2, is-7)
aux(come-9, to-8)
xcomp(is-7, come-9)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBZ Bless)
      (NP (DT every) (NN reader)))
    (. .)))

nsubj(Bless-2, God-1)
root(ROOT-0, Bless-2)
det(reader-4, every-3)
dobj(Bless-2, reader-4)

(ROOT
  (SINV
    (VP (VBN :)
      (S
        (VP (VBG -RRB-)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (ADVP (RB still))
                (ADJP (JJ disappointed)
                  (PP (IN at)
                    (NP (PRP$ our) (NN ignorance))))
                (ADVP (RB though))))))))
    (: :)
    (NP (NNP -LRB-))))

nsubj(disappointed-6, I-3)
cop(disappointed-6, 'm-4)
advmod(disappointed-6, still-5)
root(ROOT-0, disappointed-6)
poss(ignorance-9, our-8)
prep_at(disappointed-6, ignorance-9)
advmod(disappointed-6, though-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB rather))
      (VP (VBN embarrased)
        (PP (IN of)
          (NP
            (NP (DT the) (NN ignorance))
            (PP (IN of)
              (NP (NNS men)))))))
    (. .)))

nsubjpass(embarrased-4, I-1)
auxpass(embarrased-4, am-2)
advmod(embarrased-4, rather-3)
root(ROOT-0, embarrased-4)
det(ignorance-7, the-6)
prep_of(embarrased-4, ignorance-7)
prep_of(ignorance-7, men-9)

(ROOT
  (S
    (ADVP (RB Anyways))
    (, ,)
    (NP (DT this))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP
            (VP (VB be)
              (NP
                (NP (DT the)
                  (ADJP (RBS most) (JJ silly))
                  (NN question))
                (PP (IN in)
                  (NP (NN history-if)))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP 're)
                      (ADJP (VBN educated)))))))
            (CC and)
            (VP (VB have)
              (NP
                (NP (DT any) (NN sense))
                (PP (IN of)
                  (NP (JJ moral) (NN sense)))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD would)
                      (VP (VB agree)))))))))))
    (. .)))

advmod(has-4, Anyways-1)
nsubj(has-4, this-3)
xsubj(question-10, this-3)
root(ROOT-0, has-4)
aux(question-10, to-5)
cop(question-10, be-6)
det(question-10, the-7)
advmod(silly-9, most-8)
amod(question-10, silly-9)
xcomp(has-4, question-10)
prep_in(question-10, history-if-12)
nsubjpass(educated-15, you-13)
auxpass(educated-15, 're-14)
rcmod(question-10, educated-15)
xcomp(has-4, have-17)
conj_and(question-10, have-17)
det(sense-19, any-18)
dobj(have-17, sense-19)
dobj(agree-25, sense-19)
amod(sense-22, moral-21)
prep_of(sense-19, sense-22)
nsubj(agree-25, you-23)
aux(agree-25, would-24)
rcmod(sense-19, agree-25)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN world))
        (VP (VBD was) (RB n't)
          (VP (VBN created)
            (PP (IN by)
              (NP
                (NP (DT the) (NNP Supreme) (NNP Being))
                (PRN (-LRB- -LRB-)
                  (NP (NNP GOD))
                  (-RRB- -RRB-))))
            (, ,)
            (PP (IN than)
              (SBAR
                (WHNP (WRB how) (RB else))
                (S
                  (VP (MD would)))))))))
    (NP (PRP it))
    (VP (VBP have)
      (VP (VBN gotten)
        (ADVP (RB here))))
    (. .)))

mark(created-6, If-1)
det(world-3, the-2)
nsubjpass(created-6, world-3)
auxpass(created-6, was-4)
neg(created-6, n't-5)
advcl(gotten-21, created-6)
det(Being-10, the-8)
nn(Being-10, Supreme-9)
agent(created-6, Being-10)
abbrev(Being-10, GOD-12)
advmod(else-17, how-16)
advmod(would-18, else-17)
nsubj(would-18, else-17)
prepc_than(created-6, would-18)
nsubj(gotten-21, it-19)
aux(gotten-21, have-20)
root(ROOT-0, gotten-21)
advmod(gotten-21, here-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT any) (CD one) (NN person))
          (-LRB- -LRB-)
          (CC or)
          (NP (NN organization))
          (-RRB- -RRB-))
        (VP (VBP expect)
          (S
            (NP (PRP me))
            (VP (TO to)
              (ADVP (RB ever))
              (VP (VB believe)
                (FRAG
                  (SBARQ
                    (WHNP (WDT that) (NNP Earth) (CD one) (NN day))
                    (ADVP (RB just))))))))))
    (VP (VBD decided)
      (S
        (VP (TO to)
          (VP
            (VP (VB appear)
              (PP (IN in)
                (NP (NN space))))
            (CC and)
            (VP
              (VP (VB isolate)
                (NP (DT the) (NN water))
                (PP (IN from)
                  (NP (NN land))))
              (CC and)
              (VP (VB create)
                (NP
                  (NP (PRP it) (POS 's))
                  (JJ own) (NN self)))
              (NP (DT a) (NN moon)))
            (CC and)
            (VP
              (VP (VB set)
                (NP (DT the) (NN sun) (NN impeccably))
                (PP (IN in)
                  (NP
                    (NP (PRP it) (POS 's))
                    (NN place)
                    (CC and)
                    (NN everything) (NNS revolve))))
              (CC and)
              (VP (VB correlate)
                (PP (IN in)
                  (NP
                    (NP (PRP it) (POS 's))
                    (JJ proper) (NN manner))))
              (NP (DT every) (JJ morning-day-season-year) (NN etc.)))
            (, ,))))
      (, ,)
      (SBAR (IN Than)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (ADJP (DT the)
              (ADJP (RBS most) (JJ foolish))
              (, ,)
              (ADJP (RB silly) (JJ alive)))))))
    (. .)))

mark(expect-9, If-1)
det(person-4, any-2)
num(person-4, one-3)
nsubj(expect-9, person-4)
conj_or(person-4, organization-7)
nsubj(expect-9, organization-7)
csubj(decided-19, expect-9)
nsubj(believe-13, me-10)
aux(believe-13, to-11)
advmod(believe-13, ever-12)
xcomp(expect-9, believe-13)
det(day-17, that-14)
nn(day-17, Earth-15)
num(day-17, one-16)
dep(believe-13, day-17)
advmod(day-17, just-18)
root(ROOT-0, decided-19)
aux(appear-21, to-20)
xcomp(decided-19, appear-21)
prep_in(appear-21, space-23)
xcomp(decided-19, isolate-25)
conj_and(appear-21, isolate-25)
det(water-27, the-26)
dobj(isolate-25, water-27)
prep_from(isolate-25, land-29)
conj_and(appear-21, create-31)
conj_and(isolate-25, create-31)
poss(self-35, it-32)
amod(self-35, own-34)
dobj(create-31, self-35)
det(moon-37, a-36)
dobj(isolate-25, moon-37)
xcomp(decided-19, set-39)
conj_and(appear-21, set-39)
det(impeccably-42, the-40)
nn(impeccably-42, sun-41)
dobj(set-39, impeccably-42)
poss(place-46, it-44)
prep_in(set-39, place-46)
nn(revolve-49, everything-48)
prep_in(set-39, revolve-49)
conj_and(place-46, revolve-49)
conj_and(appear-21, correlate-51)
conj_and(set-39, correlate-51)
poss(manner-56, it-53)
amod(manner-56, proper-55)
prep_in(correlate-51, manner-56)
det(etc.-59, every-57)
amod(etc.-59, morning-day-season-year-58)
dobj(set-39, etc.-59)
mark(foolish-67, Than-62)
nsubj(foolish-67, they-63)
cop(foolish-67, are-64)
dep(foolish-67, the-65)
advmod(foolish-67, most-66)
advcl(decided-19, foolish-67)
advmod(alive-70, silly-69)
dep(foolish-67, alive-70)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (CC but)
      (NP
        (NP (CD one) (NN explaination))
        (PP (IN of)
          (NP
            (NP
              (NP (DT the) (NN being))
              (PP (IN of)
                (NP (NNP Earth))))
            (CC and)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ 's)
                  (PP (IN through)
                    (NP (NNP Jesus) (NNP Chridst) (PRP himself))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
num(explaination-5, one-4)
conj_but(is-2, explaination-5)
nsubj(is-2, explaination-5)
det(being-8, the-7)
prep_of(explaination-5, being-8)
prep_of(being-8, Earth-10)
nsubj('s-13, that-12)
prep_of(explaination-5, 's-13)
conj_and(being-8, 's-13)
rcmod(being-8, 's-13)
nn(Chridst-16, Jesus-15)
prep_through('s-13, Chridst-16)
dep(Chridst-16, himself-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (VP (VBG typing)
        (S
          (NP (DT this))
          (VP (TO to)
            (VP (VB reprimand) (, ,) (VB discourage)
              (CC or)
              (VB convert)
              (PRN (CC but)
                (S (RB simply)
                  (VP (TO to)
                    (VP (VB make)
                      (NP (DT a) (`` ``) (JJ common) (NN sensed) ('' '') (NN point))))))
              (PP (TO to)
                (NP
                  (NP
                    (ADJP (DT any)
                      (CC and)
                      (DT all))
                    (NNS readers))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBN come)
                        (PP (IN across)
                          (NP (DT this) (NN comment)))))))))))))
    (. .)))

nsubj(typing-4, I-1)
aux(typing-4, am-2)
neg(typing-4, not-3)
root(ROOT-0, typing-4)
nsubj(reprimand-7, this-5)
nsubj(discourage-9, this-5)
nsubj(convert-11, this-5)
aux(reprimand-7, to-6)
xcomp(typing-4, reprimand-7)
xcomp(typing-4, discourage-9)
conj_or(reprimand-7, discourage-9)
xcomp(typing-4, convert-11)
conj_or(reprimand-7, convert-11)
dep(make-15, but-12)
advmod(make-15, simply-13)
aux(make-15, to-14)
parataxis(reprimand-7, make-15)
det(point-21, a-16)
amod(point-21, common-18)
nn(point-21, sensed-19)
dobj(make-15, point-21)
xcomp(typing-4, to-22)
conj_or(reprimand-7, to-22)
amod(readers-26, any-23)
conj_and(any-23, all-25)
amod(readers-26, all-25)
prep_to(reprimand-7, readers-26)
nsubj(come-28, readers-26)
rcmod(readers-26, come-28)
det(comment-31, this-30)
prep_across(come-28, comment-31)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (DT the) (JJ literary) (NNP C.S.) (NNP Lewis))
        (ADVP (RB once))
        (VP (VBD said))))
    (, ,) (`` ``)
    (NP (PRP You))
    (ADVP (RB either))
    (VP
      (VP (VBP believe)
        (PP (IN in)
          (NP (NNP God))))
      (CC or)
      (VP (VBP do) (RB n't)))
    (: ...)))

mark(said-7, As-1)
det(Lewis-5, the-2)
amod(Lewis-5, literary-3)
nn(Lewis-5, C.S.-4)
nsubj(said-7, Lewis-5)
advmod(said-7, once-6)
advcl(believe-12, said-7)
nsubj(believe-12, You-10)
nsubj(do-16, You-10)
advmod(believe-12, either-11)
root(ROOT-0, believe-12)
prep_in(believe-12, God-14)
conj_or(believe-12, do-16)
neg(do-16, n't-17)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (PRP He))
        (SBAR
          (S
            (NP (PRP himself))
            (VP (VBD gave)
              (NP (JJ numerous) (NNS reasons))
              (PP (IN as)
                (PP (TO to)
                  (NP (DT the) (NN reason))))
              (SBAR (IN that)
                (S
                  (NP (NNP God))
                  (VP (VBZ does))))))))
      (VP (VBP exist)))
    (CC and)
    (S
      (ADVP (WRB how))
      (NP (PRP He))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN creator))
          (PP (IN of)
            (NP
              (NP (DT all) (NNS things) (NN living)
                (CC and)
                (NN non) (NN living))
              (: ;)
              (ADJP (JJ dead)
                (CC and)
                (JJ alive)))))))
    (. .)))

nsubj(exist-14, He-2)
nsubj(gave-4, himself-3)
rcmod(He-2, gave-4)
amod(reasons-6, numerous-5)
dobj(gave-4, reasons-6)
prepc_as_to(gave-4, to-8)
det(reason-10, the-9)
pobj(gave-4, reason-10)
complm(does-13, that-11)
nsubj(does-13, God-12)
ccomp(gave-4, does-13)
root(ROOT-0, exist-14)
advmod(creator-20, how-16)
nsubj(creator-20, He-17)
cop(creator-20, is-18)
det(creator-20, the-19)
conj_and(exist-14, creator-20)
det(living-24, all-22)
nn(living-24, things-23)
prep_of(creator-20, living-24)
nn(living-27, non-26)
prep_of(creator-20, living-27)
conj_and(living-24, living-27)
amod(living-24, dead-29)
amod(living-24, alive-31)
conj_and(dead-29, alive-31)

