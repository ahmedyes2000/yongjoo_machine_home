(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB never))
      (VP (VBN been)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB justify)
                (NP (DT a) (NN belief))
                (PP (IN in)
                  (NP
                    (NP (DT any) (NN sort))
                    (PP (IN of)
                      (NP
                        (NP (JJR higher) (NN power))
                        (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-))))))))))))
    (. .)))

nsubj(able-5, I-1)
aux(able-5, 've-2)
neg(able-5, never-3)
cop(able-5, been-4)
root(ROOT-0, able-5)
aux(justify-7, to-6)
xcomp(able-5, justify-7)
det(belief-9, a-8)
dobj(justify-7, belief-9)
det(sort-12, any-11)
prep_in(justify-7, sort-12)
amod(power-15, higher-14)
prep_of(sort-12, power-15)
dep(power-15, s-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB also))
      (RB not)
      (ADJP (JJ comfortable)
        (S
          (VP (VBG admitting)
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB know)
                    (NP (DT either) (NN way))
                    (PP (IN about)
                      (NP
                        (NP (DT the) (NN existence))
                        (PP (IN of)
                          (NP (DT a) (NN deity)))))
                    (, ,)
                    (SBAR (IN because)
                      (S
                        (NP (PRP I))
                        (VP (VBP do) (RB n't)
                          (ADVP (RB really))
                          (VP (VB see)
                            (NP (DT any) (JJ logical) (NN reason))
                            (S
                              (VP (TO to)
                                (VP (VB leave)
                                  (NP
                                    (NP (DT the) (NN possibility))
                                    (PP (IN of)
                                      (NP (NN belief))))
                                  (PP (IN on)
                                    (NP (DT the) (NN table))))))))))))))))))
    (. .)))

nsubj(comfortable-5, I-1)
cop(comfortable-5, 'm-2)
advmod(comfortable-5, also-3)
neg(comfortable-5, not-4)
root(ROOT-0, comfortable-5)
dep(comfortable-5, admitting-6)
complm(know-11, that-7)
nsubj(know-11, I-8)
aux(know-11, do-9)
neg(know-11, n't-10)
ccomp(admitting-6, know-11)
det(way-13, either-12)
dobj(know-11, way-13)
det(existence-16, the-15)
prep_about(know-11, existence-16)
det(deity-19, a-18)
prep_of(existence-16, deity-19)
mark(see-26, because-21)
nsubj(see-26, I-22)
aux(see-26, do-23)
neg(see-26, n't-24)
advmod(see-26, really-25)
advcl(know-11, see-26)
det(reason-29, any-27)
amod(reason-29, logical-28)
dobj(see-26, reason-29)
aux(leave-31, to-30)
xcomp(see-26, leave-31)
det(possibility-33, the-32)
dobj(leave-31, possibility-33)
prep_of(possibility-33, belief-35)
det(table-38, the-37)
prep_on(leave-31, table-38)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (NN moment)))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ inclined)
        (S
          (VP (TO to)
            (VP (VB believe)
              (ADVP (RBR more)
                (PP (IN in)
                  (NP
                    (NP (DT these))
                    (PP (IN than)
                      (NP
                        (NP (DT the) (NN existence))
                        (PP (IN of)
                          (NP (DT a) (NN god))))))))
              (ADVP (RB simply))
              (SBAR (IN because)
                (FRAG
                  (PP (IN of)
                    (NP (JJ certain) (NNS proofs))))))))))
    (. .)))

det(moment-3, the-2)
prep_at(inclined-7, moment-3)
nsubj(inclined-7, I-5)
cop(inclined-7, am-6)
root(ROOT-0, inclined-7)
aux(believe-9, to-8)
xcomp(inclined-7, believe-9)
advmod(believe-9, more-10)
prep_in(more-10, these-12)
det(existence-15, the-14)
prep_than(these-12, existence-15)
det(god-18, a-17)
prep_of(existence-15, god-18)
advmod(believe-9, simply-19)
mark(of-21, because-20)
advcl(believe-9, of-21)
amod(proofs-23, certain-22)
pobj(of-21, proofs-23)

(ROOT
  (S
    (NP
      (NP (NNP Notice))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP say)
            (VP (`` ``) (VB believe)
              (ADVP (RBR more))
              ('' '')
              (PP (IN than)))))))
    (VP (`` ``) (VB believe)
      (ADVP (RB completely))
      ('' ''))
    (. .)))

prep_than(believe-6, Notice-1)
nsubj(believe-11, Notice-1)
complm(say-4, that-2)
nsubj(say-4, I-3)
dep(Notice-1, say-4)
dep(say-4, believe-6)
advmod(believe-6, more-7)
root(ROOT-0, believe-11)
advmod(believe-11, completely-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (JJ complete) (NN faith))
        (PP (IN in)
          (NP (DT neither))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP
            (NP (NNS parts))
            (PP (IN of)
              (NP (DT both) (NNS theories))))
          (VP (VBP have)
            (VP (VBN been)
              (VP (VBN proven)
                (ADJP (JJ wrong))
                (PP (IN by)
                  (NP
                    (NP (DT the) (JJ very) (NNS scientists))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBN formulated)
                          (NP (PRP$ their) (NN creation)))))))))))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
amod(faith-4, complete-3)
dobj(have-2, faith-4)
prep_in(faith-4, neither-6)
mark(proven-15, as-8)
nsubjpass(proven-15, parts-9)
det(theories-12, both-11)
prep_of(parts-9, theories-12)
aux(proven-15, have-13)
auxpass(proven-15, been-14)
advcl(have-2, proven-15)
acomp(proven-15, wrong-16)
det(scientists-20, the-18)
amod(scientists-20, very-19)
agent(proven-15, scientists-20)
nsubj(formulated-22, scientists-20)
rcmod(scientists-20, formulated-22)
poss(creation-24, their-23)
dobj(formulated-22, creation-24)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP have)
      (VP (VBN been)
        (VP
          (VP (VBN changed)
            (CC and)
            (VBN tested))
          (PRN (-LRB- -LRB-)
            (CC and)
            (VP (VBP continue)
              (S
                (VP (TO to)
                  (VP (VB be)))))
            (-RRB- -RRB-))
          (PP (IN by)
            (NP (DT the) (JJ international) (JJ scientific) (NN community))))))
    (. .)))

nsubj(changed-4, They-1)
nsubj(tested-6, They-1)
aux(changed-4, have-2)
aux(changed-4, been-3)
root(ROOT-0, changed-4)
conj_and(changed-4, tested-6)
dep(continue-9, and-8)
dep(changed-4, continue-9)
aux(be-11, to-10)
xcomp(continue-9, be-11)
det(community-17, the-14)
amod(community-17, international-15)
amod(community-17, scientific-16)
prep_by(changed-4, community-17)

(ROOT
  (S
    (S
      (NP (NNS Theories))
      (VP (VBP do) (RB n't)
        (VP (VB claim)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (DT all))
                  (PP (IN of)
                    (NP (DT the) (NNS answers))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP do)
        (SBAR
          (S
            (VP (VBP stand)
              (PRT (RP up))
              (PP (TO to)
                (NP (NN logic)))
              (PRN (-LRB- -LRB-)
                (S
                  (VP (VB and)
                    (S
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP
                            (NP (NNS aspects))
                            (PP (IN of)
                              (NP (PRP them))))
                          (VP (VBP do) (RB n't))))
                      (NP (PRP they))
                      (VP (VBP are)
                        (VP (VBN thrown)
                          (PP (IN out)
                            (NP (DT the) (NN window))))))))
                (-RRB- -RRB-)))))))
    (. .)))

nsubj(claim-4, Theories-1)
xsubj(have-6, Theories-1)
aux(claim-4, do-2)
neg(claim-4, n't-3)
root(ROOT-0, claim-4)
aux(have-6, to-5)
xcomp(claim-4, have-6)
dobj(have-6, all-7)
det(answers-10, the-9)
prep_of(all-7, answers-10)
nsubj(do-14, they-13)
conj_but(claim-4, do-14)
ccomp(do-14, stand-15)
prt(stand-15, up-16)
prep_to(stand-15, logic-18)
parataxis(stand-15, and-20)
advmod(do-25, when-21)
nsubj(do-25, aspects-22)
prep_of(aspects-22, them-24)
advcl(thrown-29, do-25)
neg(do-25, n't-26)
nsubjpass(thrown-29, they-27)
auxpass(thrown-29, are-28)
ccomp(and-20, thrown-29)
det(window-32, the-31)
prep_out(thrown-29, window-32)

(ROOT
  (S
    (NP
      (NP (DT The) (NN concept))
      (PP (IN of)
        (NP (DT a) (JJR higher) (NN power))))
    (VP (VBZ does)
      (NP (DT the) (NN opposite)))
    (. .)))

det(concept-2, The-1)
nsubj(does-7, concept-2)
det(power-6, a-4)
amod(power-6, higher-5)
prep_of(concept-2, power-6)
root(ROOT-0, does-7)
det(opposite-9, the-8)
dobj(does-7, opposite-9)

(ROOT
  (S
    (FRAG
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-)
        (ADVP (RB Basically))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'd) (RB rather)
      (VP (VB admit)
        (S
          (VP (TO to)
            (VP (RB not)
              (S
                (VP (VBG knowing)
                  (PP (IN about)
                    (NP
                      (NP (PRP$ my) (NNS origins))
                      (PRN (-LRB- -LRB-)
                        (PP
                          (PP (IN as)
                            (NP (DT a) (NN human)))
                          (CC and)
                          (PP (IN as)
                            (NP
                              (NP (DT a) (NN resident))
                              (PP (IN in)
                                (NP (PRP$ our) (JJ solar) (NN system))))))
                        (-RRB- -RRB-))
                      (SBAR (IN than)
                        (S
                          (VP (VBP believe)
                            (PP (IN in)
                              (NP
                                (NP (NN something))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBZ is) (RB n't)
                                      (ADJP (JJ logical))))))))))))))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (SBAR
                      (WHADVP (WRB why))
                      (S
                        (NP (NN god))
                        (VP (VBZ does) (RB n't)
                          (VP (VB exist)
                            (PP (IN in)
                              (NP (PRP$ my) (NN life)))))))))))))))
    (. .)))

dep(admit-10, \/-1)
dobj(\/-1, \/-3)
advmod(\/-1, Basically-5)
nsubj(admit-10, I-7)
xsubj(not-12, I-7)
aux(admit-10, 'd-8)
advmod(admit-10, rather-9)
root(ROOT-0, admit-10)
aux(not-12, to-11)
xcomp(admit-10, not-12)
xcomp(not-12, knowing-13)
poss(origins-16, my-15)
prep_about(knowing-13, origins-16)
dep(origins-16, as-18)
det(human-20, a-19)
pobj(as-18, human-20)
dep(origins-16, as-22)
conj_and(as-18, as-22)
det(resident-24, a-23)
pobj(as-22, resident-24)
poss(system-28, our-26)
amod(system-28, solar-27)
prep_in(resident-24, system-28)
mark(believe-31, than-30)
dep(origins-16, believe-31)
prep_in(believe-31, something-33)
nsubj(logical-37, something-33)
cop(logical-37, is-35)
neg(logical-37, n't-36)
rcmod(something-33, logical-37)
nsubj(is-40, which-39)
ccomp(not-12, is-40)
advmod(exist-45, why-41)
nsubj(exist-45, god-42)
aux(exist-45, does-43)
neg(exist-45, n't-44)
advcl(is-40, exist-45)
poss(life-48, my-47)
prep_in(exist-45, life-48)

(ROOT
  (SQ
    (VP (VB \/) (-RRB- -RRB-)
      (NP (NNS \/))
      (-RRB- -RRB-)
      (ADVP (RB P.S.)))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
advmod(\/-1, P.S.-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN anyone))
        (VP (VBZ has)
          (NP
            (NP (NN evidence))
            (PP (IN against)
              (NP
                (NP (DT the) (NN theory))
                (PP (IN of)
                  (NP (NN evolution)))))))))
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB plenty))
      (ADJP (JJ open)
        (PP (TO to)
          (NP (PRP it)))))
    (. .)))

mark(has-3, If-1)
nsubj(has-3, anyone-2)
advcl(open-13, has-3)
dobj(has-3, evidence-4)
det(theory-7, the-6)
prep_against(evidence-4, theory-7)
prep_of(theory-7, evolution-9)
nsubj(open-13, I-10)
cop(open-13, 'm-11)
advmod(open-13, plenty-12)
root(ROOT-0, open-13)
prep_to(open-13, it-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB completely))
      (VP (VB accept)
        (NP (NN microevolution))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADVP (RB still))
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB find)
                (NP (JJR more) (NNS proofs))
                (PP (IN for)
                  (NP (NN macro)))
                (SBAR (RB so) (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBP have)
                      (S
                        (NP (DT any) (NNS thoughts))
                        (VP (VB please)
                          (NP (NN share)))))))))))))
    (. .)))

nsubj(accept-3, I-1)
advmod(accept-3, completely-2)
root(ROOT-0, accept-3)
dobj(accept-3, microevolution-4)
nsubj(trying-9, I-6)
xsubj(find-11, I-6)
aux(trying-9, 'm-7)
advmod(trying-9, still-8)
conj_but(accept-3, trying-9)
aux(find-11, to-10)
xcomp(trying-9, find-11)
amod(proofs-13, more-12)
dobj(find-11, proofs-13)
prep_for(find-11, macro-15)
advmod(have-19, so-16)
dep(have-19, if-17)
nsubj(have-19, you-18)
dep(find-11, have-19)
det(thoughts-21, any-20)
nsubj(please-22, thoughts-21)
ccomp(have-19, please-22)
dobj(please-22, share-23)

(ROOT
  (INTJ (UH Thanks) (. !)))

root(ROOT-0, Thanks-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP see)
      (NP (NNS people))
      (PP (IN on)
        (S
          (ADVP (RB here))
          (VP (VBG saying)
            (ADVP (RB roughly))
            (ADVP
              (NP (DT the) (NN equivalent))
              (IN of))
            ('' '')
            (SBAR
              (WHADVP (WRB How))
              (S
                (VP (VBP do)
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP know)))))))))))
    (. ?)))

nsubj(see-2, I-1)
root(ROOT-0, see-2)
dobj(see-2, people-3)
advmod(saying-6, here-5)
prepc_on(see-2, saying-6)
advmod(saying-6, roughly-7)
det(equivalent-9, the-8)
npadvmod(of-10, equivalent-9)
advmod(saying-6, of-10)
advmod(do-13, How-12)
ccomp(saying-6, do-13)
nsubj(know-15, you-14)
ccomp(do-13, know-15)

(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP (VBN done)
      (SBAR
        (S
          (NP
            (NP (DT a) (JJ complete) (NN search))
            (PP (IN of)
              (NP (DT the) (NN universe)
                (CC and)
                (RB not))))
          (VP (VBD found)
            (NP (DT a) (NN god))))))
    (. ?)))

aux(done-3, Have-1)
nsubj(done-3, you-2)
root(ROOT-0, done-3)
det(search-6, a-4)
amod(search-6, complete-5)
nsubj(found-12, search-6)
det(universe-9, the-8)
prep_of(search-6, universe-9)
prep_of(search-6, not-11)
conj_and(universe-9, not-11)
neg(universe-9, not-11)
ccomp(done-3, found-12)
det(god-14, a-13)
dobj(found-12, god-14)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (ADVP (RB also))
      (NP
        (NP (DT the) (NN common))
        ('' '')
        (SBAR
          (S
            (NP (PRP You))
            (VP (MD ca) (RB n't)
              (VP (VB prove)
                (SBAR
                  (S
                    (NP (DT a) (NN god))
                    (VP (VBZ DOES) (RB N'T)
                      (VP (VB exist)))))))))))
    (. !)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
advmod('s-2, also-3)
det(common-5, the-4)
nsubj('s-2, common-5)
dobj(prove-10, common-5)
nsubj(prove-10, You-7)
aux(prove-10, ca-8)
neg(prove-10, n't-9)
rcmod(common-5, prove-10)
det(god-12, a-11)
nsubj(exist-15, god-12)
aux(exist-15, DOES-13)
neg(exist-15, N'T-14)
ccomp(prove-10, exist-15)

(ROOT
  (NP (JJ '') (NN argument) (. .)))


(ROOT
  (S
    (NP (DT These) (CD two) (NNS arguments))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN used)
          (PP (IN against)
            (NP
              (NP (DT any) (NN sort))
              (PP (IN of)
                (NP (JJ mythical\/hypothetical) (NN thing))))))))
    (. .)))

det(arguments-3, These-1)
num(arguments-3, two-2)
nsubjpass(used-6, arguments-3)
aux(used-6, can-4)
auxpass(used-6, be-5)
root(ROOT-0, used-6)
det(sort-9, any-8)
prep_against(used-6, sort-9)
amod(thing-12, mythical\/hypothetical-11)
prep_of(sort-9, thing-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD questioned)
          (NP (NN everything))
          (PP (IN in)
            (NP
              (NP (PRP$ my) (NN life))
              (NP (DT this) (NN way)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB be)
        (VP (VBG leaving)
          (NP (NN room))
          (PP (IN in)
            (NP
              (NP (PRP$ my) (NN mind))
              (PP (IN for)
                (NP
                  (NP (DT every) (JJ Bigfoot-esque) (NN concept))
                  (PP (IN in)
                    (NP (NN existence))))))))))
    (. .)))

mark(questioned-3, If-1)
nsubj(questioned-3, I-2)
advcl(leaving-14, questioned-3)
dobj(questioned-3, everything-4)
poss(life-7, my-6)
prep_in(questioned-3, life-7)
det(way-9, this-8)
dep(life-7, way-9)
nsubj(leaving-14, I-11)
aux(leaving-14, would-12)
aux(leaving-14, be-13)
root(ROOT-0, leaving-14)
dobj(leaving-14, room-15)
poss(mind-18, my-17)
prep_in(leaving-14, mind-18)
det(concept-22, every-20)
amod(concept-22, Bigfoot-esque-21)
prep_for(mind-18, concept-22)
prep_in(concept-22, existence-24)

(ROOT
  (S
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-)
        (ADVP (RB Frankly))
        (, ,)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP am)
              (ADJP (JJ comfortable)
                (PP (IN with)
                  (S
                    (ADVP (RB just))
                    (VP (RB not) (VBG knowing)
                      (NP (JJ certain) (NNS things))
                      (PP (IN about)
                        (NP
                          (NP (DT the) (NNS beginnings))
                          (PP (IN of)
                            (NP (PRP$ our) (NN universe)))))))))))))
      (CC and)
      (VP (VBD humankind)))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
advmod(\/-1, Frankly-5)
nsubj(comfortable-9, I-7)
cop(comfortable-9, am-8)
dep(\/-1, comfortable-9)
advmod(knowing-13, just-11)
neg(knowing-13, not-12)
prepc_with(comfortable-9, knowing-13)
amod(things-15, certain-14)
dobj(knowing-13, things-15)
det(beginnings-18, the-17)
prep_about(knowing-13, beginnings-18)
poss(universe-21, our-20)
prep_of(beginnings-18, universe-21)
conj_and(\/-1, humankind-23)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP me)))
    (NP
      (NP (DT the) (NN existence))
      (PP (IN of)
        (NP
          (NP (DT a) (JJ supernatural) (NN power))
          (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-)))))
    (VP (VBZ is)
      (SBAR (RB just)
        (S
          (NP (DT another) (NN theory) (NNS humans))
          (VP (VBP have)
            (VP (VBN come)
              (PRT (RP up))
              (PP (IN with)
                (S
                  (VP (VBG regarding)
                    (NP
                      (NP (DT the) (NN genesis))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN world))
                          (, ,)
                          (NP (DT the) (NN universe))
                          (, ,)
                          (CC and)
                          (NP (NN man)))))))))))))
    (. .)))

prep_to(is-12, me-2)
det(existence-4, the-3)
nsubj(is-12, existence-4)
det(power-8, a-6)
amod(power-8, supernatural-7)
prep_of(existence-4, power-8)
dep(power-8, s-10)
root(ROOT-0, is-12)
advmod(come-18, just-13)
det(humans-16, another-14)
nn(humans-16, theory-15)
nsubj(come-18, humans-16)
aux(come-18, have-17)
ccomp(is-12, come-18)
prt(come-18, up-19)
prepc_with(come-18, regarding-21)
det(genesis-23, the-22)
dobj(regarding-21, genesis-23)
det(world-26, the-25)
prep_of(genesis-23, world-26)
det(universe-29, the-28)
prep_of(genesis-23, universe-29)
conj_and(world-26, universe-29)
prep_of(genesis-23, man-32)
conj_and(world-26, man-32)

(ROOT
  (S
    (NP (DT A) (JJ few) (NNS others))
    (VP (VBP include)
      (NP
        (NP (DT the) (NNP Big) (NNP Bang))
        (CC and)
        (NP (NN evolution))))
    (. .)))

det(others-3, A-1)
amod(others-3, few-2)
nsubj(include-4, others-3)
root(ROOT-0, include-4)
det(Bang-7, the-5)
nn(Bang-7, Big-6)
dobj(include-4, Bang-7)
dobj(include-4, evolution-9)
conj_and(Bang-7, evolution-9)

