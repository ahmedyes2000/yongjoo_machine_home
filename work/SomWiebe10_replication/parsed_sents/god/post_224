(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN assertion))
        (, ,) (RB not)
        (NP (DT an) (NN argument))))
    (. .)))

nsubj(assertion-4, It-1)
cop(assertion-4, is-2)
det(assertion-4, an-3)
root(ROOT-0, assertion-4)
neg(assertion-4, not-6)
det(argument-8, an-7)
dep(assertion-4, argument-8)

(ROOT
  (S
    (ADVP (RB Regardless)
      (PP (IN of)
        (SBAR (IN whether)
          (S
            (NP (PRP one))
            (VP (VBZ is)
              (ADJP (JJ open)
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN possiblity))
                    (PP (IN of)
                      (NP
                        (NP (NNP God) (POS 's))
                        (NN existence)))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (RB quite) (DT a) (NN stretch)
        (S
          (VP (TO to)
            (VP (VB assert)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (ADJP (JJ clear))
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (DT a) (NN being))
                          (PP (IN with)
                            (NP
                              (NP (DT those) (NN god))
                              (PP (IN like)
                                (NP (NNS characteristics))))))
                        (VP (VBZ does) (RB not)
                          (VP (VB exist)))))))))))))
    (. .)))

complm(open-6, whether-3)
nsubj(open-6, one-4)
cop(open-6, is-5)
prepc_regardless_of(stretch-19, open-6)
det(possiblity-9, the-8)
prep_to(open-6, possiblity-9)
poss(existence-13, God-11)
prep_of(possiblity-9, existence-13)
nsubj(stretch-19, it-15)
cop(stretch-19, is-16)
advmod(stretch-19, quite-17)
det(stretch-19, a-18)
root(ROOT-0, stretch-19)
aux(assert-21, to-20)
infmod(stretch-19, assert-21)
complm(clear-25, that-22)
nsubj(clear-25, it-23)
cop(clear-25, is-24)
ccomp(assert-21, clear-25)
complm(exist-36, that-26)
det(being-28, a-27)
nsubj(exist-36, being-28)
det(god-31, those-30)
prep_with(being-28, god-31)
prep_like(god-31, characteristics-33)
aux(exist-36, does-34)
neg(exist-36, not-35)
ccomp(clear-25, exist-36)

