(ROOT
  (S
    (VP (VB Hmmmm))
    (. .)))

root(ROOT-0, Hmmmm-1)

(ROOT
  (S
    (PP (IN After)
      (NP (NN reading)))
    (S
      (NP (DT this))
      (CONJP (RB not) (JJ only))
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP think)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP do) (RB n't)
                    (VP (VB know)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP you))
                          (VP (VBP 're)
                            (VP (VBG talking) (IN about))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBP 've)
        (VP
          (ADVP (RB also))
          (VBN got)
          (NP
            (NP (DT a) (JJ warped) (NN sense))
            (PP (IN of)
              (NP (NN reality))))
          (, ,)
          (SBAR
            (WHADVP (RB especially) (WRB when))
            (S
              (NP (PRP it))
              (VP (VBZ comes)
                (PP (TO to)
                  (NP (NN religion)))))))))
    (. .)))

prep_after(this-3, reading-2)
root(ROOT-0, this-3)
neg(only-5, not-4)
dep(this-3, only-5)
conj_but(this-3, do-6)
nsubj(think-8, I-7)
ccomp(do-6, think-8)
nsubj(know-12, you-9)
aux(know-12, do-10)
neg(know-12, n't-11)
ccomp(think-8, know-12)
dobj(talking-16, what-13)
nsubj(talking-16, you-14)
aux(talking-16, 're-15)
ccomp(know-12, talking-16)
dep(talking-16, about-17)
nsubj(got-23, you-20)
aux(got-23, 've-21)
advmod(got-23, also-22)
conj_but(this-3, got-23)
det(sense-26, a-24)
amod(sense-26, warped-25)
dobj(got-23, sense-26)
prep_of(sense-26, reality-28)
advmod(when-31, especially-30)
advmod(comes-33, when-31)
nsubj(comes-33, it-32)
advcl(got-23, comes-33)
prep_to(comes-33, religion-35)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNS people))
          (VP (VBP do)
            (PP (IN with)
              (NP (NNS differences)))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
dobj(do-5, what-3)
nsubj(do-5, people-4)
ccomp(is-2, do-5)
prep_with(do-5, differences-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBZ clash))
    (. .)))

nsubj(clash-2, They-1)
root(ROOT-0, clash-2)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (ADVP (RB just))
      (NP (NN religion)))
    (. .) (. .)))

nsubj(religion-5, It-1)
cop(religion-5, 's-2)
neg(religion-5, not-3)
advmod(religion-5, just-4)
root(ROOT-0, religion-5)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (NN race) (, ,) (NN ideology) (, ,) (NN philosophy) (, ,) (NN politics) (NN etc.)))
    (. .)))

nsubj(etc.-10, it-1)
cop(etc.-10, 's-2)
nn(etc.-10, race-3)
dep(etc.-10, ideology-5)
dep(etc.-10, philosophy-7)
dep(etc.-10, politics-9)
root(ROOT-0, etc.-10)

(ROOT
  (S
    (VP (VBG EVERYTHING))
    (. .)))

root(ROOT-0, EVERYTHING-1)

(ROOT
  (SBARQ (RB So)
    (WHNP (WP what))
    (SQ
      (VP (VBZ 's)
        (ADJP (JJ wrong)
          (PP (IN with)
            (NP (DT this) (`` ``) (JJ soul) (NN saving) (NN excercise) ('' ''))))))
    (. ?)))

advmod(wrong-4, So-1)
nsubj(wrong-4, what-2)
cop(wrong-4, 's-3)
root(ROOT-0, wrong-4)
det(excercise-10, this-6)
amod(excercise-10, soul-8)
nn(excercise-10, saving-9)
prep_with(wrong-4, excercise-10)

(ROOT
  (S
    (VP (VB Give)
      (S
        (NP (DT some) (NNS examples))
        (VP (VB cause)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP do) (RB n't)
                (VP (VB know)
                  (NP
                    (NP (NN wtf))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP 're)
                          (VP (VBG chatting)))))))))))))
    (. .)))

root(ROOT-0, Give-1)
det(examples-3, some-2)
nsubj(cause-4, examples-3)
ccomp(Give-1, cause-4)
nsubj(know-8, I-5)
aux(know-8, do-6)
neg(know-8, n't-7)
ccomp(cause-4, know-8)
dobj(know-8, wtf-9)
dobj(chatting-12, wtf-9)
nsubj(chatting-12, you-10)
aux(chatting-12, 're-11)
rcmod(wtf-9, chatting-12)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP we))
        (VP (VBP are)
          (VP (VBG talking)
            (PP (IN about)
              (NP (NN society)))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (NNS laws))
            (PP (VBN based)
              (PP (IN on)
                (NP
                  (NP (JJ factual) (NN evidence))
                  (, ,)
                  (NP
                    (NP
                      (ADJP (RB not) (JJ subjective))
                      (NNS feelings))
                    (PP (IN about)
                      (NP (NNS things)))))))))))
    (. .)))

advmod(have-11, However-1)
advmod(talking-6, when-3)
nsubj(talking-6, we-4)
aux(talking-6, are-5)
advcl(have-11, talking-6)
prep_about(talking-6, society-8)
nsubj(have-11, we-10)
xsubj(make-13, we-10)
root(ROOT-0, have-11)
aux(make-13, to-12)
xcomp(have-11, make-13)
dobj(make-13, laws-14)
prepc_based_on(make-13, on-16)
amod(evidence-18, factual-17)
pobj(make-13, evidence-18)
neg(subjective-21, not-20)
amod(feelings-22, subjective-21)
appos(evidence-18, feelings-22)
prep_about(feelings-22, things-24)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (NP (NNS people))
      (VP (VBP make)
        (NP
          (NP (DT a) (`` ``) (JJ moral) ('' '') (NN choice))
          (PP (IN about)
            (NP (NNS things))))))
    (, ,)
    (CC but)
    (S
      (NP (DT this) (NN choice) (NN doesnt))
      (ADVP (RB necessarily))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN based)
                (PP (IN on)
                  (NP (NN fairy) (NNS tales)))))))))
    (. .)))

dep(make-3, Yes-1)
nsubj(make-3, people-2)
root(ROOT-0, make-3)
det(choice-8, a-4)
amod(choice-8, moral-6)
dobj(make-3, choice-8)
prep_about(choice-8, things-10)
det(doesnt-15, this-13)
nn(doesnt-15, choice-14)
nsubj(have-17, doesnt-15)
xsubj(based-20, doesnt-15)
advmod(have-17, necessarily-16)
conj_but(make-3, have-17)
aux(based-20, to-18)
auxpass(based-20, be-19)
xcomp(have-17, based-20)
nn(tales-23, fairy-22)
prep_on(based-20, tales-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN based)
          (PP (IN on)
            (NP (JJ scientific) (NN evidence))))))
    (. .)))

nsubjpass(based-4, It-1)
aux(based-4, can-2)
auxpass(based-4, be-3)
root(ROOT-0, based-4)
amod(evidence-7, scientific-6)
prep_on(based-4, evidence-7)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ comes)
      (NP
        (NP (PRP$ your) (JJ warped) (NNS ideas))
        (PP (IN about)
          (NP (NNS people))))
      (ADVP (RB again)))
    (. .)))

nsubj(comes-2, Here-1)
root(ROOT-0, comes-2)
poss(ideas-5, your-3)
amod(ideas-5, warped-4)
dobj(comes-2, ideas-5)
prep_about(ideas-5, people-7)
advmod(comes-2, again-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG telling)
        (NP (PRP me))
        (NP
          (NP (JJ moral) (NNS choices))
          (VP
            (ADVP (RB only))
            (VBN come)
            (PP (IN from)
              (NP (NN fairy) (NNS tales)))))))
    (. .)))

nsubj(telling-3, You-1)
aux(telling-3, 're-2)
root(ROOT-0, telling-3)
iobj(telling-3, me-4)
amod(choices-6, moral-5)
dobj(telling-3, choices-6)
advmod(come-8, only-7)
partmod(choices-6, come-8)
nn(tales-11, fairy-10)
prep_from(come-8, tales-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (NP
        (NP (NN ideology))
        (SBAR
          (S
            (VP (VBZ is)
              (NP
                (NP (JJ complete) (NN freedom))
                (PP (IN for)
                  (NP (PRP oneself)))))))))
    (. .)))

nsubj(ideology-3, You-1)
cop(ideology-3, 're-2)
root(ROOT-0, ideology-3)
cop(freedom-6, is-4)
amod(freedom-6, complete-5)
rcmod(ideology-3, freedom-6)
prep_for(freedom-6, oneself-8)

(ROOT
  (S
    (S
      (VP (VBG Seeing)
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB believe)
                (PP (IN in)
                  (NP (NNS fairies)))))))))
    (: ...)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (VP (VB have)
          (NP (DT an) (NNS morals)))))
    (. .)))

root(ROOT-0, Seeing-1)
mark(believe-6, as-2)
nsubj(believe-6, you-3)
aux(believe-6, do-4)
neg(believe-6, n't-5)
advcl(Seeing-1, believe-6)
prep_in(believe-6, fairies-8)
nsubj(have-13, you-10)
aux(have-13, do-11)
neg(have-13, n't-12)
parataxis(Seeing-1, have-13)
det(morals-15, an-14)
dobj(have-13, morals-15)

(ROOT
  (FRAG
    (PP (VBG According)
      (PP (TO to)
        (NP (PRP you))))
    (. .)))

root(ROOT-0, According-1)
pcomp(According-1, to-2)
prep_to(According-1, you-3)

(ROOT
  (S
    (NP
      (NP (NNS People) (POS 's))
      (JJ moral) (NNS choices))
    (VP (VBP are) (RB n't)
      (VP (VBN based)
        (PP (IN on)
          (NP (NN fairy) (NNS tales)))))
    (. .)))

poss(choices-4, People-1)
amod(choices-4, moral-3)
nsubjpass(based-7, choices-4)
auxpass(based-7, are-5)
neg(based-7, n't-6)
root(ROOT-0, based-7)
nn(tales-10, fairy-9)
prep_on(based-7, tales-10)

(ROOT
  (S
    (NP (JJ Fairy) (NNS tales))
    (VP (VBP are)
      (PP (IN in)
        (NP (NN accordance)))
      (PP (TO to)
        (NP (PRP$ their) (JJ moral) (NNS choices))))
    (. .)))

amod(tales-2, Fairy-1)
nsubj(are-3, tales-2)
root(ROOT-0, are-3)
prep_in(are-3, accordance-5)
poss(choices-9, their-7)
amod(choices-9, moral-8)
prep_to(are-3, choices-9)

(ROOT
  (S (-LRB- -LRB-)
    (VP (VB Remember)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD said)
            (ADVP (DT this) (RBR earlier))))))
    (: ...)))

root(ROOT-0, Remember-2)
nsubj(said-4, I-3)
ccomp(Remember-2, said-4)
dep(earlier-6, this-5)
advmod(said-4, earlier-6)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP are)
      (ADVP (RB generally))
      (PP (IN against)
        (NP (NN murder))))
    (. .)))

nsubj(are-2, People-1)
root(ROOT-0, are-2)
advmod(are-2, generally-3)
prep_against(are-2, murder-5)

(ROOT
  (S
    (NP (DT These) (NN fairy) (NNS tales))
    (VP (VBP are)
      (PP (IN against)
        (NP (NN murder))))
    (. .)))

det(tales-3, These-1)
nn(tales-3, fairy-2)
nsubj(are-4, tales-3)
root(ROOT-0, are-4)
prep_against(are-4, murder-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP 're) (DT both)
      (PP (IN against)
        (NP (NN murder))))
    (. .)))

nsubj('re-2, They-1)
root(ROOT-0, 're-2)
dep('re-2, both-3)
prep_against('re-2, murder-5)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP are) (RB n't)
      (PP (IN against)
        (NP (NN murder)))
      (SBAR (IN because)
        (S
          (NP (NN fairy) (NNS tales))
          (VP (VBP are)
            (PP (IN against)
              (NP (NN murder)))))))
    (. .)))

nsubj(are-2, People-1)
root(ROOT-0, are-2)
neg(are-2, n't-3)
prep_against(are-2, murder-5)
mark(are-9, because-6)
nn(tales-8, fairy-7)
nsubj(are-9, tales-8)
advcl(are-2, are-9)
prep_against(are-9, murder-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can) (RB not)
      (VP (VB make)
        (NP
          (NP (DT a) (NN law))
          (VP (VBN based)
            (PP (IN on)
              (NP (NN science)))
            (PP (IN without)
              (NP
                (NP (JJ judgement) (NN outside))
                (PP (IN of)
                  (NP (NN science)))))))))
    (. .)))

nsubj(make-4, You-1)
aux(make-4, can-2)
neg(make-4, not-3)
root(ROOT-0, make-4)
det(law-6, a-5)
dobj(make-4, law-6)
partmod(law-6, based-7)
prep_on(based-7, science-9)
amod(outside-12, judgement-11)
prep_without(based-7, outside-12)
prep_of(outside-12, science-14)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN epitome))
          (PP (IN of)
            (NP (NNS selfishness))))))
    (: ...)
    (S
      (S
        (VP (VBG doing)
          (SBAR
            (WHNP (WDT whatever))
            (S
              (NP (PRP you))
              (VP (VBP want)
                (ADVP
                  (ADVP (RB as) (RB long))
                  (SBAR (IN as)
                    (S
                      (NP (PRP you))
                      (VP (VBP do) (RB n't)
                        (VP (VB think)
                          (NP (PRP it))))))))))))
      (VP (VBZ affects)
        (S
          (NP (NN anybody))
          (ADJP (RB else)))))
    (. .)))

nsubj(epitome-4, This-1)
cop(epitome-4, is-2)
det(epitome-4, the-3)
root(ROOT-0, epitome-4)
prep_of(epitome-4, selfishness-6)
csubj(affects-20, doing-8)
dobj(want-11, whatever-9)
nsubj(want-11, you-10)
ccomp(doing-8, want-11)
advmod(long-13, as-12)
advmod(want-11, long-13)
mark(think-18, as-14)
nsubj(think-18, you-15)
aux(think-18, do-16)
neg(think-18, n't-17)
ccomp(long-13, think-18)
dobj(think-18, it-19)
parataxis(epitome-4, affects-20)
nsubj(else-22, anybody-21)
xcomp(affects-20, else-22)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN written)
          (SBAR
            (WHADVP (WRB why))
            (FRAG
              (ADVP (RB before)))))))
    (: ...)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBD did) (RB n't)
            (VP (VB understand)
              (NP (PRP it))))))
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB explain)
          (NP (CD one) (JJ last) (NN time)))))
    (. .)))

nsubj(written-3, I-1)
aux(written-3, 've-2)
root(ROOT-0, written-3)
advmod(before-5, why-4)
advcl(written-3, before-5)
mark(understand-11, if-7)
nsubj(understand-11, you-8)
aux(understand-11, did-9)
neg(understand-11, n't-10)
advcl(explain-15, understand-11)
dobj(understand-11, it-12)
nsubj(explain-15, I-13)
aux(explain-15, 'll-14)
parataxis(written-3, explain-15)
num(time-18, one-16)
amod(time-18, last-17)
dobj(explain-15, time-18)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (VP (VBP have)
      (VP (VBN immigration)
        (PP (IN as)
          (NP (DT an) (NN example)))))
    (. .)))

nsubj(immigration-4, Let-1)
possessive(Let-1, 's-2)
aux(immigration-4, have-3)
root(ROOT-0, immigration-4)
det(example-7, an-6)
prep_as(immigration-4, example-7)

(ROOT
  (S
    (NP (NNP Law))
    (VP (VBZ requires)
      (NP (JJ legal) (NNS migrants)))
    (. .) (. .)))

nsubj(requires-2, Law-1)
root(ROOT-0, requires-2)
amod(migrants-4, legal-3)
dobj(requires-2, migrants-4)

(ROOT
  (FRAG (RB not)
    (ADJP (JJ illegal) (NN immigrants))
    (. .)))

root(ROOT-0, not-1)
dep(immigrants-3, illegal-2)
dep(not-1, immigrants-3)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ tells)
      (NP (PRP us))
      (NP
        (NP (DT the) (NNS positives)
          (CC and)
          (NNS negatives))
        (PP (IN of)
          (NP (NN immigration)))))
    (. .)))

nsubj(tells-2, Science-1)
root(ROOT-0, tells-2)
iobj(tells-2, us-3)
det(positives-5, the-4)
dobj(tells-2, positives-5)
dobj(tells-2, negatives-7)
conj_and(positives-5, negatives-7)
prep_of(positives-5, immigration-9)

(ROOT
  (S
    (NP (NNP OUR) (NNP OWN) (NNP JUDGEMENT))
    (VP (MD will)
      (VP (VB decide)
        (SBAR (IN whether)
          (CC or)
          (RB not)
          (S
            (NP (PRP we))
            (VP
              (VP (VBP want)
                (NP (NN immigration)))
              (CC and)
              (VP
                (PP (TO to)
                  (NP (WDT what) (NN degree)))))))))
    (. .)))

nn(JUDGEMENT-3, OUR-1)
nn(JUDGEMENT-3, OWN-2)
nsubj(decide-5, JUDGEMENT-3)
aux(decide-5, will-4)
root(ROOT-0, decide-5)
complm(want-10, whether-6)
ccomp(decide-5, not-8)
conj_or(want-10, not-8)
nsubj(want-10, we-9)
ccomp(decide-5, want-10)
dobj(want-10, immigration-11)
ccomp(decide-5, to-13)
conj_and(want-10, to-13)
dep(degree-15, what-14)
pobj(to-13, degree-15)

(ROOT
  (S
    (NP (DT This) (NN judgement))
    (VP (VBZ is)
      (ADVP
        (ADVP (IN outside)
          (PP (IN of)
            (NP (NN science))))
        (SBAR (IN as)
          (S
            (NP (NN science))
            (VP (MD can) (RB not)
              (VP (VB make)
                (NP (NNS decisions)))))
          (. .))))
    (. .)))

det(judgement-2, This-1)
nsubj(is-3, judgement-2)
root(ROOT-0, is-3)
prep_outside_of(is-3, science-6)
mark(make-11, as-7)
nsubj(make-11, science-8)
aux(make-11, can-9)
neg(make-11, not-10)
ccomp(is-3, make-11)
dobj(make-11, decisions-12)

(ROOT
  (S
    (ADVP (RB only))
    (VP (VB explain)
      (NP (PRP them))
      (PP (TO to)
        (NP (DT a) (JJ certain) (NN degree))))
    (. .)))

advmod(explain-2, only-1)
root(ROOT-0, explain-2)
dobj(explain-2, them-3)
det(degree-7, a-5)
amod(degree-7, certain-6)
prep_to(explain-2, degree-7)

(ROOT
  (S (IN So)
    (NP (NN drug) (NNS dealers))
    (VP (VBP are)
      (ADJP (JJ bad)
        (PP (RB because) (IN of)
          (NP (PRP$ your) (NN reason)))))
    (. ?)))

dep(bad-5, So-1)
nn(dealers-3, drug-2)
nsubj(bad-5, dealers-3)
cop(bad-5, are-4)
root(ROOT-0, bad-5)
poss(reason-9, your-8)
prep_because_of(bad-5, reason-9)

(ROOT
  (S
    (SBAR (RB Not) (IN because)
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (VP (VBG selling)
            (NP
              (NP (NNS substances))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP harm)
                    (NP (PRP$ your) (NN body))
                    (PP (IN in)
                      (NP (DT the) (JJ long) (NN term)))))))))))
    (, ,)
    (VP (VB cause)
      (NP
        (NP (NNS addictions))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ leads)
              (PP (IN into)
                (NP (JJ other) (NN trouble))))))))
    (. .)))

dep(selling-5, Not-1)
dep(selling-5, because-2)
nsubj(selling-5, they-3)
aux(selling-5, 're-4)
advcl(cause-16, selling-5)
dobj(selling-5, substances-6)
nsubj(harm-8, substances-6)
rcmod(substances-6, harm-8)
poss(body-10, your-9)
dobj(harm-8, body-10)
det(term-14, the-12)
amod(term-14, long-13)
prep_in(harm-8, term-14)
root(ROOT-0, cause-16)
dobj(cause-16, addictions-17)
nsubj(leads-19, addictions-17)
rcmod(addictions-17, leads-19)
amod(trouble-22, other-21)
prep_into(leads-19, trouble-22)

(ROOT
  (S
    (NP
      (NP (DT This) (JJ whole) (NN delusion))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 've)
            (VP (VBN got)
              (PP (IN about)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (DT all) (JJ religious) (NNS people))
                    (VP (VBP follow)
                      (NP (NNP God) (NNP blindly)))))))))))
    (VP (VBZ is)
      (ADVP (RB again))
      (ADJP (JJ wrong)))
    (. .)))

det(delusion-3, This-1)
amod(delusion-3, whole-2)
dobj(got-6, delusion-3)
nsubj(wrong-17, delusion-3)
nsubj(got-6, you-4)
aux(got-6, 've-5)
rcmod(delusion-3, got-6)
advmod(follow-12, how-8)
det(people-11, all-9)
amod(people-11, religious-10)
nsubj(follow-12, people-11)
prepc_about(got-6, follow-12)
nn(blindly-14, God-13)
dobj(follow-12, blindly-14)
cop(wrong-17, is-15)
advmod(wrong-17, again-16)
root(ROOT-0, wrong-17)

(ROOT
  (FRAG (RB Not)
    (PP (RB because) (IN of)
      (NP (DT that)))
    (. .)))

root(ROOT-0, Not-1)
prep_because_of(Not-1, that-4)

(ROOT
  (FRAG
    (ADVP (RB Only))
    (SBAR (IN because)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP
            (NP (RB outside))
            (PP (IN of)
              (NP
                (NP (DT the) (NN government) (POS 's))
                (NN economy)))))))
    (. .)))

root(ROOT-0, Only-1)
mark(Only-1, because-2)
nsubj(Only-1, it-3)
cop(Only-1, 's-4)
det(government-8, the-7)
poss(economy-10, government-8)
prep_outside_of(Only-1, economy-10)

(ROOT
  (INTJ (UH NO) (. !)))

root(ROOT-0, NO-1)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Belief))
        (PP (IN in)
          (NP (NN god))))
      (VP (VBZ entails)
        (NP (NN faith))))
    (, ,)
    (CC and)
    (S
      (NP (NN faith))
      (VP (VBZ is)
        (NP (DT the) (NN ability)
          (S
            (VP (TO to)
              (VP (VB believe)
                (PP (IN in)
                  (NP (NN something)))
                (PP (IN without)
                  (NP (NN evidence)))))))))
    (. .)))

nsubj(entails-4, Belief-1)
prep_in(Belief-1, god-3)
root(ROOT-0, entails-4)
dobj(entails-4, faith-5)
nsubj(ability-11, faith-8)
cop(ability-11, is-9)
det(ability-11, the-10)
conj_and(entails-4, ability-11)
aux(believe-13, to-12)
infmod(ability-11, believe-13)
prep_in(believe-13, something-15)
prep_without(believe-13, evidence-17)

(ROOT
  (S (-LRB- -LRB-)
    (NP
      (ADJP (JJR more)
        (CC and)
        (JJR more))
      (NN bs) (NNS i))
    (VP (VBP 've)
      (ADVP (RB already))
      (VP (VBN talked)
        (PP (IN about))))
    (: ...)))

amod(i-6, more-2)
conj_and(more-2, more-4)
amod(i-6, more-4)
nn(i-6, bs-5)
nsubj(talked-9, i-6)
aux(talked-9, 've-7)
advmod(talked-9, already-8)
root(ROOT-0, talked-9)
prep(talked-9, about-10)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP you))
    (VP (VBP are)
      (ADVP (RB just))
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB hold)
              (PRT (RP on))
              (PP (TO to)
                (NP (PRP$ your)
                  (ADJP (JJ subjective)
                    (SBAR
                      (S
                        (VP (VBP believe)
                          (SBAR (IN that)
                            (S
                              (NP (PRP you))
                              (VP (VBP need))))))))
                  (NN god)
                  (S
                    (VP (TO to)
                      (VP (VB know)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (VBZ is)
                              (ADJP (JJ good)
                                (CC or)
                                (JJ bad))
                              (PP (IN for)
                                (NP (PRP you))))))))))))))))
    (. .)))

advmod(trying-5, Maybe-1)
nsubj(trying-5, you-2)
xsubj(hold-7, you-2)
aux(trying-5, are-3)
advmod(trying-5, just-4)
root(ROOT-0, trying-5)
aux(hold-7, to-6)
xcomp(trying-5, hold-7)
prt(hold-7, on-8)
poss(god-16, your-10)
amod(god-16, subjective-11)
dep(subjective-11, believe-12)
complm(need-15, that-13)
nsubj(need-15, you-14)
ccomp(believe-12, need-15)
prep_to(hold-7, god-16)
aux(know-18, to-17)
infmod(god-16, know-18)
nsubj(good-21, what-19)
nsubj(bad-23, what-19)
cop(good-21, is-20)
ccomp(know-18, good-21)
ccomp(know-18, bad-23)
conj_or(good-21, bad-23)
prep_for(good-21, you-25)

(ROOT
  (S
    (ADVP (RB Firstly))
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB already))
      (VP (VBN said)
        (PP (TO to)
          (NP
            (NP (NN question))
            (SBAR
              (S
                (VP (VBZ is)
                  (ADJP (JJ good)))))))))
    (. .)))

advmod(said-5, Firstly-1)
nsubj(said-5, I-2)
aux(said-5, 've-3)
advmod(said-5, already-4)
root(ROOT-0, said-5)
prep_to(said-5, question-7)
cop(good-9, is-8)
rcmod(question-7, good-9)

(ROOT
  (S
    (ADVP (RB However))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 've)
              (VP (VBN got)))))))
    (NP
      (NP (DT the) (JJ right) (NNS answers))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBZ goes)
            (PP (IN against)
              (NP (PRP$ your) (NN religion)))))))
    (. .)))

advmod(mean-4, However-1)
aux(mean-4, does-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
nsubj(got-7, you-5)
aux(got-7, 've-6)
ccomp(mean-4, got-7)
det(answers-10, the-8)
amod(answers-10, right-9)
dep(mean-4, answers-10)
tmod(goes-13, answers-10)
advmod(goes-13, when-11)
nsubj(goes-13, it-12)
dep(answers-10, goes-13)
poss(religion-16, your-15)
prep_against(goes-13, religion-16)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD might)
        (ADVP (RB sometimes))))
    (: ...)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP doubt)
        (NP (PRP it))))
    (. .)))

nsubj(might-2, You-1)
root(ROOT-0, might-2)
advmod(might-2, sometimes-3)
nsubj(doubt-7, I-6)
conj_but(might-2, doubt-7)
dobj(doubt-7, it-8)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB question))))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (S
          (VP (TO to)
            (VP (VB go)
              (PP (IN against)))))))
    (. .)))

aux(question-2, To-1)
csubj(mean-5, question-2)
aux(mean-5, does-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
aux(go-7, to-6)
xcomp(mean-5, go-7)
prep(go-7, against-8)

(ROOT
  (FRAG
    (ADVP (RB So))
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (PP (IN in)
            (NP (NNP God)))))
      (. .))
    (. .)))

root(ROOT-0, So-1)
advmod(believe-4, when-2)
nsubj(believe-4, you-3)
dep(So-1, believe-4)
prep_in(believe-4, God-6)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NNS people))
        (VP (VBD did) (RB n't)
          (VP (VB know)
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP (PRP they))
                (VP (VBD followed)
                  (NP (NNP God))
                  (, ,)
                  (SBAR (IN if)
                    (S
                      (NP (PRP they))
                      (VP (VBD were)
                        (NP
                          (ADJP (RB just) (JJ mindless))
                          (NNS zombies))))))))))))
    (WHNP (WP who))
    (SQ
      (VP (VBD had)
        (NP
          (NP (DT no) (NNS senses))
          (SBAR
            (WHADVP
              (ADVP (PRP themselves) (RB then))
              (WRB why))
            (S
              (VP (VBZ is)
                (NP (PRP it))
                (SBAR (IN that)
                  (S
                    (NP (NNS theists))
                    (VP (VBP are)
                      (ADJP (JJ able)
                        (S
                          (VP (TO to)
                            (VP (VB argue)
                              (PP (IN for)
                                (NP (PRP$ their) (NN religion))))))))))))))))
    (. ?)))

mark(know-5, If-1)
nsubj(know-5, people-2)
aux(know-5, did-3)
neg(know-5, n't-4)
dep(had-18, know-5)
advmod(followed-8, why-6)
nsubj(followed-8, they-7)
advcl(know-5, followed-8)
dobj(followed-8, God-9)
mark(zombies-16, if-11)
nsubj(zombies-16, they-12)
cop(zombies-16, were-13)
advmod(mindless-15, just-14)
amod(zombies-16, mindless-15)
advcl(followed-8, zombies-16)
nsubj(had-18, who-17)
root(ROOT-0, had-18)
det(senses-20, no-19)
dobj(had-18, senses-20)
dep(then-22, themselves-21)
advmod(why-23, then-22)
advmod(it-25, why-23)
cop(it-25, is-24)
rcmod(senses-20, it-25)
complm(able-29, that-26)
nsubj(able-29, theists-27)
cop(able-29, are-28)
ccomp(it-25, able-29)
aux(argue-31, to-30)
xcomp(able-29, argue-31)
poss(religion-34, their-33)
prep_for(argue-31, religion-34)

(ROOT
  (S
    (S
      (VP (VBZ does) (RB n't)
        (VP (VB mean)
          (NP (PRP you)))))
    (VP (VBP believe)
      (SBAR
        (WHNP (WDT whatever))
        (S
          (NP (NN anyone) (RB else))
          (VP (VBZ tells)
            (NP (PRP you))))))
    (. .)))

aux(mean-3, does-1)
neg(mean-3, n't-2)
csubj(believe-5, mean-3)
dobj(mean-3, you-4)
root(ROOT-0, believe-5)
dobj(tells-9, whatever-6)
nsubj(tells-9, anyone-7)
advmod(anyone-7, else-8)
ccomp(believe-5, tells-9)
dobj(tells-9, you-10)

(ROOT
  (FRAG
    (ADVP (RB Maybe))
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBD happened)
          (PP (TO to)
            (NP
              (NP (PRP you))
              (CC or)
              (NP (NN somebody))))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBD knew))))))
      (. .))
    (. .)))

root(ROOT-0, Maybe-1)
nsubj(happened-3, that-2)
dep(Maybe-1, happened-3)
prep_to(happened-3, you-5)
prep_to(happened-3, somebody-7)
conj_or(you-5, somebody-7)
nsubj(knew-9, you-8)
ccomp(happened-3, knew-9)

(ROOT
  (FRAG (CC but)
    (RB not)
    (NP
      (NP (RB in) (DT the) (NN majority))
      (PP (IN of)
        (NP (VBN educated) (JJ religious) (NNS people))))
    (. .)))

dep(not-2, but-1)
root(ROOT-0, not-2)
advmod(majority-5, in-3)
det(majority-5, the-4)
dep(not-2, majority-5)
amod(people-9, educated-7)
amod(people-9, religious-8)
prep_of(majority-5, people-9)

(ROOT
  (S
    (NP
      (NP (NNP Science))
      (PP (IN on)
        (NP (DT the) (JJ other) (NN hand))))
    (VP (VBZ does) (RB n't)
      (VP (VB teach)
        (NP (NN anything))))
    (. .)))

nsubj(teach-8, Science-1)
det(hand-5, the-3)
amod(hand-5, other-4)
prep_on(Science-1, hand-5)
aux(teach-8, does-6)
neg(teach-8, n't-7)
root(ROOT-0, teach-8)
dobj(teach-8, anything-9)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ does)
      (NP (NN nothing)))
    (. .)))

nsubj(does-2, Science-1)
root(ROOT-0, does-2)
dobj(does-2, nothing-3)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (ADVP (RB basically))
      (NP (NN theory)))
    (. .)))

nsubj(theory-4, Science-1)
cop(theory-4, is-2)
advmod(theory-4, basically-3)
root(ROOT-0, theory-4)

(ROOT
  (S
    (S
      (NP (NNP Theory))
      (VP (VBN based)
        (PP (IN on)
          (NP
            (NP (NN logic))
            (, ,)
            (NP (NN evidence))
            (, ,)
            (NP (NNS statistics))
            (, ,)
            (NP (NNS solutions) (NN etc))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (NN theory))))
    (. .)))

nsubj(based-2, Theory-1)
root(ROOT-0, based-2)
prep_on(based-2, logic-4)
appos(logic-4, evidence-6)
appos(logic-4, statistics-8)
nn(etc-11, solutions-10)
appos(logic-4, etc-11)
nsubj(theory-16, it-14)
cop(theory-16, is-15)
conj_but(based-2, theory-16)

(ROOT
  (S
    (NP (DT The) (NN problem))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNS people))
          (VP (VBP assume)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (VP (VBN meant)
                    (PP (IN for)
                      (NP (NN societyNO)))))))))))
    (. !)))

det(problem-2, The-1)
nsubj(is-3, problem-2)
root(ROOT-0, is-3)
complm(assume-6, that-4)
nsubj(assume-6, people-5)
ccomp(is-3, assume-6)
complm(meant-10, that-7)
nsubjpass(meant-10, it-8)
auxpass(meant-10, was-9)
ccomp(assume-6, meant-10)
prep_for(meant-10, societyNO-12)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP see)
      (SBAR (IN that)
        (S
          (VP (VBZ is)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (ADJP (JJ wrong)))))))))
    (. .)))

nsubj(see-2, you-1)
root(ROOT-0, see-2)
complm(is-4, that-3)
ccomp(see-2, is-4)
advmod(wrong-8, where-5)
nsubj(wrong-8, you-6)
cop(wrong-8, are-7)
advcl(is-4, wrong-8)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNS people))
        (VP (VBP are)
          (ADJP
            (ADJP (JJ happy))
            (, ,)
            (ADJP
              (ADJP (JJ good))
              (PRN (-LRB- -LRB-)
                (PP (IN on)
                  (NP (DT a) (JJ personal) (NN level)))
                (-RRB- -RRB-)))
            (ADVP (RB then))))))
    (NP (PRP it))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (NN society))
          (VP (MD will)
            (VP (VB be)
              (ADJP (JJ happy)
                (CC and)
                (JJ good))
              (PP (IN on)
                (NP (DT a) (JJ personal) (NN level))))))))
    (. .)))

advmod(happy-4, When-1)
nsubj(happy-4, people-2)
cop(happy-4, are-3)
advcl(means-15, happy-4)
dep(happy-4, good-6)
dep(good-6, on-8)
det(level-11, a-9)
amod(level-11, personal-10)
pobj(on-8, level-11)
advmod(happy-4, then-13)
nsubj(means-15, it-14)
root(ROOT-0, means-15)
nsubj(happy-19, society-16)
nsubj(good-21, society-16)
aux(happy-19, will-17)
cop(happy-19, be-18)
ccomp(means-15, happy-19)
ccomp(means-15, good-21)
conj_and(happy-19, good-21)
det(level-25, a-23)
amod(level-25, personal-24)
prep_on(happy-19, level-25)

(ROOT
  (S
    (S
      (NP (DT Some))
      (ADVP (RB even))
      (VP (VB give)
        (NP (DT a) (JJ different) (NN interpretation))))
    (: ...)
    (S
      (NP (DT some))
      (VP (VBP change)
        (NP (NNS things))
        (ADVP (RB altogether))))
    (. .)))

nsubj(give-3, Some-1)
advmod(give-3, even-2)
root(ROOT-0, give-3)
det(interpretation-6, a-4)
amod(interpretation-6, different-5)
dobj(give-3, interpretation-6)
nsubj(change-9, some-8)
parataxis(give-3, change-9)
dobj(change-9, things-10)
advmod(change-9, altogether-11)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP (JJ plain) (NN logic)))
    (. .)))

nsubj(logic-4, That-1)
cop(logic-4, is-2)
amod(logic-4, plain-3)
root(ROOT-0, logic-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 've)
      (VP (VBN got)
        (S
          (NP (PRP it))
          (ADJP (JJ wrong)
            (PP (IN about)
              (NP (DT the) (NNPS Jews)
                (CC and)
                (NNPS Jesus)))))))
    (. .)))

nsubj(got-3, You-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
nsubj(wrong-5, it-4)
xcomp(got-3, wrong-5)
det(Jews-8, the-7)
prep_about(wrong-5, Jews-8)
prep_about(wrong-5, Jesus-10)
conj_and(Jews-8, Jesus-10)

(ROOT
  (FRAG (CC Or)
    (SBAR (IN that)
      (FRAG
        (NP (JJ Satan) (NN story))))
    (. .)))

dep(story-4, Or-1)
dep(story-4, that-2)
amod(story-4, Satan-3)
root(ROOT-0, story-4)

(ROOT
  (S
    (NP (DT That) (NNP Satan) (NN story))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (UCP
          (NP
            (NP (NN shit))
            (PP (IN about)
              (NP (NNP God))))
          (CC or)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN world))
              (VP (VBZ does) (RB n't)
                (VP (VB belong)
                  (PP (TO to)
                    (NP (NNP God))))))))))
    (. .)))

det(story-3, That-1)
nn(story-3, Satan-2)
nsubj(mean-6, story-3)
aux(mean-6, does-4)
neg(mean-6, n't-5)
root(ROOT-0, mean-6)
dobj(mean-6, shit-7)
prep_about(shit-7, God-9)
complm(belong-16, that-11)
det(world-13, the-12)
nsubj(belong-16, world-13)
aux(belong-16, does-14)
neg(belong-16, n't-15)
dobj(mean-6, belong-16)
conj_or(shit-7, belong-16)
prep_to(belong-16, God-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJ same))
        (PP (IN as)
          (S
            (VP
              (VP (VBG being)
                (VP
                  (NP (DT a) (NN customer))
                  (PP (IN in)
                    (NP (DT a) (NN shop)))))
              (CC and)
              (VP (VBG telling)
                (NP (NN somebody))
                (S
                  (VP (TO to)
                    (VP (VB steal)
                      (NP (NN something)))))))))))
    (. .)))

nsubj(same-4, It-1)
cop(same-4, 's-2)
det(same-4, the-3)
root(ROOT-0, same-4)
aux(customer-8, being-6)
det(customer-8, a-7)
prepc_as(same-4, customer-8)
det(shop-11, a-10)
prep_in(customer-8, shop-11)
prepc_as(same-4, telling-13)
conj_and(customer-8, telling-13)
dobj(telling-13, somebody-14)
aux(steal-16, to-15)
xcomp(telling-13, steal-16)
dobj(steal-16, something-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (NN temptation)))
    (. .) (. .)))

nsubj(temptation-3, It-1)
cop(temptation-3, 's-2)
root(ROOT-0, temptation-3)

(ROOT
  (NP (RB not) (DT a) (NN bargain) (. .)))

neg(bargain-3, not-1)
det(bargain-3, a-2)
root(ROOT-0, bargain-3)

(ROOT
  (INTJ (UH LOL) (. !)))

root(ROOT-0, LOL-1)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (NP
        (NP (JJ such) (DT an)
          (ADJP (RB amazingly) (JJ smart) (, ,) (JJ good) (, ,) (RB morally) (JJ absolute))
          (NN person))
        (ADVP (RB yet))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (ADVP (RB even))
              (VP (VB understand)
                (NP
                  (NP (DT the) (JJS simplest))
                  (PP (IN of)
                    (NP (NNS stories))))))))))
    (. .)))

nsubj(person-12, You-1)
cop(person-12, 're-2)
amod(person-12, such-3)
det(person-12, an-4)
advmod(absolute-11, amazingly-5)
amod(absolute-11, smart-6)
amod(absolute-11, good-8)
advmod(absolute-11, morally-10)
amod(person-12, absolute-11)
root(ROOT-0, person-12)
advmod(person-12, yet-13)
nsubj(understand-18, you-14)
aux(understand-18, do-15)
neg(understand-18, n't-16)
advmod(understand-18, even-17)
rcmod(person-12, understand-18)
det(simplest-20, the-19)
dobj(understand-18, simplest-20)
prep_of(simplest-20, stories-22)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADJP (RB even) (JJ Christian))))
    (, ,)
    (CC nor)
    (SQ (VBP do)
      (NP (PRP I))
      (VP (VB agree)
        (PP (IN with)
          (NP
            (NP (DT a) (NN lot))
            (PP (IN of)
              (NP
                (NP (PRP it) (POS 's))
                (NNS practices)))))
        (PP
          (ADVP (RB yet))
          (IN at)
          (NP
            (NP (DT the) (JJS least))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP understand)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP I))
                      (VP (VBP disagree)
                        (PP (IN with))))))))))))
    (. .)))

nsubj(Christian-5, I-1)
cop(Christian-5, 'm-2)
neg(Christian-5, not-3)
advmod(Christian-5, even-4)
root(ROOT-0, Christian-5)
aux(agree-10, do-8)
nsubj(agree-10, I-9)
conj_nor(Christian-5, agree-10)
det(lot-13, a-12)
prep_with(agree-10, lot-13)
poss(practices-17, it-15)
prep_of(lot-13, practices-17)
advmod(agree-10, yet-18)
det(least-21, the-20)
prep_at(agree-10, least-21)
nsubj(understand-23, I-22)
rcmod(least-21, understand-23)
dep(disagree-26, what-24)
nsubj(disagree-26, I-25)
ccomp(understand-23, disagree-26)
prep(disagree-26, with-27)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP (JJ many) (NN ignorant) (NNS theists))
        (ADVP (IN out) (RB there))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP tend)
        (S
          (VP (TO to)
            (VP (VB be)
              (PP (IN from)
                (NP
                  (NP (JJ poor) (NNS countries))
                  (, ,)
                  (NP (JJ limited) (NN education))
                  (CC and)
                  (NP (JJ live) (JJ simple) (NNS lives)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(theists-5, many-3)
nn(theists-5, ignorant-4)
nsubj(are-2, theists-5)
advmod(are-2, out-6)
advmod(out-6, there-7)
nsubj(tend-11, they-10)
xsubj(be-13, they-10)
conj_but(are-2, tend-11)
aux(be-13, to-12)
xcomp(tend-11, be-13)
amod(countries-16, poor-15)
prep_from(be-13, countries-16)
amod(education-19, limited-18)
prep_from(be-13, education-19)
conj_and(countries-16, education-19)
amod(lives-23, live-21)
amod(lives-23, simple-22)
prep_from(be-13, lives-23)
conj_and(countries-16, lives-23)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ shows)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB understand)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP you))
                  (VP (VBP stand)))))))))
    (. .)))

nsubj(shows-2, This-1)
root(ROOT-0, shows-2)
complm(understand-7, that-3)
nsubj(understand-7, you-4)
aux(understand-7, do-5)
neg(understand-7, n't-6)
ccomp(shows-2, understand-7)
advmod(stand-10, where-8)
nsubj(stand-10, you-9)
advcl(understand-7, stand-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 've)
      (VP (VBN got)
        (NP
          (NP (DT a) (JJ deluded) (NN idea))
          (PP (IN about)
            (NP (JJ religious) (NNS people))))
        (PP (VBN based)
          (PP (IN on)
            (NP (PRP$ your) (JJ own) (JJ personal) (, ,) (JJ limited) (NNS experiences))))))
    (. .)))

nsubj(got-3, You-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
det(idea-6, a-4)
amod(idea-6, deluded-5)
dobj(got-3, idea-6)
amod(people-9, religious-8)
prep_about(idea-6, people-9)
prepc_based_on(got-3, on-11)
poss(experiences-17, your-12)
amod(experiences-17, own-13)
amod(experiences-17, personal-14)
amod(experiences-17, limited-16)
pobj(got-3, experiences-17)

(ROOT
  (S
    (S
      (VP (VBG Saying)
        (NP (PRP you))))
    (PRN
      (S
        (NP (NN cant))
        (VP (VBP smoke)
          (NP (DT a) (NN joint))
          (SBAR (IN because)
            (S
              (NP (NN god))
              (VP (MD would) (RB n't)
                (VP (VB like)
                  (NP (PRP it))))))))
      (, ,))
    (VP (VBZ is)
      (ADJP (JJ retarded)))
    (. .)))

csubj(retarded-15, Saying-1)
dobj(Saying-1, you-2)
nsubj(smoke-4, cant-3)
parataxis(retarded-15, smoke-4)
det(joint-6, a-5)
dobj(smoke-4, joint-6)
mark(like-11, because-7)
nsubj(like-11, god-8)
aux(like-11, would-9)
neg(like-11, n't-10)
advcl(smoke-4, like-11)
dobj(like-11, it-12)
cop(retarded-15, is-14)
root(ROOT-0, retarded-15)

(ROOT
  (S
    (S
      (VP (VBG Saying)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD should) (RB n't)
              (VP (VB smoke)
                (S
                  (NP (PRP it))
                  (VP (VB cause)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ kills)
                          (NP (NN brain) (NNS cells)))))))))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ different) (NN kind))
        (PP (IN of)
          (NP (NN choice)))))
    (. .)))

csubj(kind-16, Saying-1)
complm(smoke-6, that-2)
nsubj(smoke-6, you-3)
aux(smoke-6, should-4)
neg(smoke-6, n't-5)
ccomp(Saying-1, smoke-6)
nsubj(cause-8, it-7)
ccomp(smoke-6, cause-8)
nsubj(kills-10, it-9)
ccomp(cause-8, kills-10)
nn(cells-12, brain-11)
dobj(kills-10, cells-12)
cop(kind-16, is-13)
det(kind-16, a-14)
amod(kind-16, different-15)
root(ROOT-0, kind-16)
prep_of(kind-16, choice-18)

(ROOT
  (NP (DT NO) (NNP !!!!)))

det(!!!!-2, NO-1)
root(ROOT-0, !!!!-2)

(ROOT
  (FRAG
    (NP
      (NP (NNP Again))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (ADJP (RB wrong) (JJ !!))))))))

root(ROOT-0, Again-1)
nsubj(!!-5, you-2)
cop(!!-5, 're-3)
advmod(!!-5, wrong-4)
rcmod(Again-1, !!-5)

(ROOT
  (S
    (SBAR (RB Even) (IN though)
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB understand)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP you))
                (VP (VBP 're)
                  (VP (VBG coming)
                    (PP (IN from))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP (JJ wrong)))
    (. .)))

advmod(understand-5, Even-1)
dep(understand-5, though-2)
nsubj(understand-5, I-3)
aux(understand-5, can-4)
advcl(wrong-14, understand-5)
advmod(coming-9, where-6)
nsubj(coming-9, you-7)
aux(coming-9, 're-8)
advcl(understand-5, coming-9)
prep(coming-9, from-10)
nsubj(wrong-14, you-12)
cop(wrong-14, 're-13)
root(ROOT-0, wrong-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP believe))))
    (, ,)
    (VP
      (VP (VB trust))
      (CC and)
      (VP (VB have)
        (NP
          (NP (NN faith))
          (PP (IN in)
            (NP (NN someone)))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP follow)
                (NP (PRP them))))))))
    (. .)))

mark(believe-3, If-1)
nsubj(believe-3, you-2)
advcl(trust-5, believe-3)
root(ROOT-0, trust-5)
conj_and(trust-5, have-7)
dobj(have-7, faith-8)
prep_in(faith-8, someone-10)
nsubj(follow-12, you-11)
rcmod(faith-8, follow-12)
dobj(follow-12, them-13)

(ROOT
  (S
    (SBAR (RB Even) (IN though)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (ADVP (RB always))
          (VP (VB know)
            (SBARQ
              (WHADVP (WRB why)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP follow)
      (NP (PRP$ their) (NN reasoning))
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP know)
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (VBP 're)
                  (ADJP (JJ right)))))))))
    (. .)))

advmod(know-7, Even-1)
dep(know-7, though-2)
nsubj(know-7, you-3)
aux(know-7, do-4)
neg(know-7, n't-5)
advmod(know-7, always-6)
advcl(follow-11, know-7)
dep(know-7, why-8)
nsubj(follow-11, you-10)
root(ROOT-0, follow-11)
poss(reasoning-13, their-12)
dobj(follow-11, reasoning-13)
mark(know-16, because-14)
nsubj(know-16, you-15)
advcl(follow-11, know-16)
complm(right-20, that-17)
nsubj(right-20, they-18)
cop(right-20, 're-19)
ccomp(know-16, right-20)

(ROOT
  (S (CC So)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (NNS people))
        (VP (VBP say)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (SBAR (IN because)
                  (S
                    (NP (NNP God))
                    (VP (MD would) (RB n't)
                      (VP (VB like)
                        (NP (PRP it))))))))))))
    (: ...)
    (NP (PRP it))
    (VP (VBZ 's)
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP
            (VP
              (ADVP (RB truly))
              (VBP trust)
              (NP (NNP God)))
            (CC and)
            (VP (VBP think)
              (SBAR (IN that)
                (S
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP He))
                      (VP (VBD said))))
                  (VP (VBZ is)
                    (ADJP (JJ right))))))))))
    (. .)))

cc('s-15, So-1)
advmod(say-4, when-2)
nsubj(say-4, people-3)
advcl('s-15, say-4)
nsubj('s-6, it-5)
ccomp(say-4, 's-6)
mark(like-11, because-7)
nsubj(like-11, God-8)
aux(like-11, would-9)
neg(like-11, n't-10)
advcl('s-6, like-11)
dobj(like-11, it-12)
nsubj('s-15, it-14)
root(ROOT-0, 's-15)
mark(trust-19, because-16)
nsubj(trust-19, they-17)
nsubj(think-22, they-17)
advmod(trust-19, truly-18)
advcl('s-15, trust-19)
dobj(trust-19, God-20)
advcl('s-15, think-22)
conj_and(trust-19, think-22)
complm(right-28, that-23)
dobj(said-26, what-24)
nsubj(said-26, He-25)
csubj(right-28, said-26)
cop(right-28, is-27)
ccomp(think-22, right-28)

(ROOT
  (S
    (ADVP (RB Apart))
    (PP (IN from)
      (NP (PRP them)))
    (NP (DT all) (NNS theists))
    (VP (VBP follow)
      (NP (JJ such) (NNS laws))
      (PP (IN after)
        (S
          (VP (VBG thinking)
            (NP (PRP them))
            (PP (IN through))))))
    (. .)))

prep_apart_from(follow-6, them-3)
det(theists-5, all-4)
nsubj(follow-6, theists-5)
root(ROOT-0, follow-6)
amod(laws-8, such-7)
dobj(follow-6, laws-8)
prepc_after(follow-6, thinking-10)
dobj(thinking-10, them-11)
prep(thinking-10, through-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB ask)
              (S
                (NP (PRP them))
                (VP (TO to)
                  (VP (VB question)
                    (NP (NNP God))))))))))
    (. .)))

nsubj(trying-3, You-1)
xsubj(ask-5, You-1)
aux(trying-3, 're-2)
root(ROOT-0, trying-3)
aux(ask-5, to-4)
xcomp(trying-3, ask-5)
nsubj(question-8, them-6)
aux(question-8, to-7)
xcomp(ask-5, question-8)
dobj(question-8, God-9)

(ROOT
  (SBARQ
    (WHADVP (WRB How)
      (NP (DT the) (NN fuck)))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB do)
        (NP (DT that))))
    (. ?)))

advmod(do-6, How-1)
det(fuck-3, the-2)
dep(How-1, fuck-3)
aux(do-6, can-4)
nsubj(do-6, you-5)
root(ROOT-0, do-6)
dobj(do-6, that-7)

(ROOT
  (S
    (NP (NN lol))
    (VP (VBZ ?!?!)
      (S
        (NP (PRP I))
        (VP
          (VP (VB have)
            (NP (DT no) (NN problem))
            (PP (IN with)
              (S
                (NP (PRP you))
                (VP (VBG being)
                  (ADJP (JJ atheist))))))
          (: ...)
          (VP
            (ADVP (RB only))
            (NP (PRP$ your) (NN reasoning))))))
    (. .)))

nsubj(?!?!-2, lol-1)
root(ROOT-0, ?!?!-2)
nsubj(have-4, I-3)
ccomp(?!?!-2, have-4)
det(problem-6, no-5)
dobj(have-4, problem-6)
nsubj(atheist-10, you-8)
cop(atheist-10, being-9)
prepc_with(have-4, atheist-10)
advmod(reasoning-14, only-12)
poss(reasoning-14, your-13)
dep(have-4, reasoning-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (NP
        (NP (DT a) (JJ very) (JJ limited) (NN imagintion) (, ,) (NN perspective) (, ,) (NN experience) (, ,) (NN narrow)
          (CC and)
          (NN understanding))
        (PP (IN of)
          (NP (NNS matters)))))
    (. .)))

nsubj(have-2, You-1)
root(ROOT-0, have-2)
det(imagintion-6, a-3)
amod(imagintion-6, very-4)
amod(imagintion-6, limited-5)
dobj(have-2, imagintion-6)
dobj(have-2, perspective-8)
conj_and(imagintion-6, perspective-8)
dobj(have-2, experience-10)
conj_and(imagintion-6, experience-10)
dobj(have-2, narrow-12)
conj_and(imagintion-6, narrow-12)
dobj(have-2, understanding-14)
conj_and(imagintion-6, understanding-14)
prep_of(imagintion-6, matters-16)

(ROOT
  (S
    (CONJP (RB Not) (JJ only))
    (SINV (VBZ does)
      (NP (DT this))
      (VP (VB make)
        (S
          (NP (PRP it))
          (ADJP (JJ hard)
            (S
              (VP (TO to)
                (VP (VB argue)
                  (CC and)
                  (VB explain)
                  (PP (IN with)
                    (NP (PRP you))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ makes)
        (S
          (NP
            (NP (JJS most))
            (PP (IN of)
              (NP (PRP$ your) (NNS points))))
          (ADJP (JJ invalid)))))
    (. .)))

neg(only-2, Not-1)
preconj(make-5, only-2)
aux(make-5, does-3)
nsubj(make-5, this-4)
root(ROOT-0, make-5)
nsubj(hard-7, it-6)
xcomp(make-5, hard-7)
aux(argue-9, to-8)
xcomp(hard-7, argue-9)
xcomp(hard-7, explain-11)
conj_and(argue-9, explain-11)
prep_with(argue-9, you-13)
nsubj(makes-17, it-16)
conj_but(make-5, makes-17)
nsubj(invalid-22, most-18)
poss(points-21, your-20)
prep_of(most-18, points-21)
xcomp(makes-17, invalid-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP feel)
      (PP (IN like)
        (S
          (VP (VBG stopping)
            (NP (DT this))
            (ADVP (RB too))))))
    (. .)))

nsubj(feel-2, I-1)
root(ROOT-0, feel-2)
prepc_like(feel-2, stopping-4)
dobj(stopping-4, this-5)
advmod(stopping-4, too-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP get)
        (ADJP (VBN annoyed)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP (VBP do) (RB n't)
                (VP (VB understand)
                  (NP
                    (NP (DT the) (NNS points))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBP make))))))))))))
    (CC and)
    (S
      (NP (PRP you))
      (ADVP (RB probably))
      (VP (VBP feel)
        (NP (DT the) (JJ same) (NN way))))
    (. .)))

nsubjpass(annoyed-3, I-1)
auxpass(annoyed-3, get-2)
root(ROOT-0, annoyed-3)
advmod(understand-8, when-4)
nsubj(understand-8, you-5)
aux(understand-8, do-6)
neg(understand-8, n't-7)
dep(annoyed-3, understand-8)
det(points-10, the-9)
dobj(understand-8, points-10)
dobj(make-12, points-10)
nsubj(make-12, I-11)
rcmod(points-10, make-12)
nsubj(feel-16, you-14)
advmod(feel-16, probably-15)
conj_and(annoyed-3, feel-16)
det(way-19, the-17)
amod(way-19, same-18)
dobj(feel-16, way-19)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD started)
        (PRT (RP off))
        (ADJP (JJ great))
        (ADVP (RB though))))
    (CC and)
    (S
      (ADVP (RB tbh))
      (NP (PRP I))
      (VP (VBP tihnk)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (ADJP
                  (ADJP (JJR better))
                  (SBAR (IN if)
                    (S
                      (NP (PRP you))
                      (VP (VBD made)
                        (NP (DT a) (NN debate))
                        (PP (IN about)
                          (NP
                            (NP (DT a) (JJ single) (NN subject))
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (NP (PRP you))
                                (VP (VBP do) (RB n't)
                                  (VP (VB agree)
                                    (PP (IN with))))))))))
                    (. .)))))))))
    (. .)))

nsubj(started-2, You-1)
root(ROOT-0, started-2)
prt(started-2, off-3)
acomp(started-2, great-4)
advmod(started-2, though-5)
advmod(tihnk-9, tbh-7)
nsubj(tihnk-9, I-8)
conj_and(started-2, tihnk-9)
nsubj(better-13, it-10)
aux(better-13, would-11)
cop(better-13, be-12)
ccomp(tihnk-9, better-13)
mark(made-16, if-14)
nsubj(made-16, you-15)
ccomp(better-13, made-16)
det(debate-18, a-17)
dobj(made-16, debate-18)
det(subject-22, a-20)
amod(subject-22, single-21)
prep_about(made-16, subject-22)
rel(agree-27, which-23)
nsubj(agree-27, you-24)
aux(agree-27, do-25)
neg(agree-27, n't-26)
rcmod(subject-22, agree-27)
prep(agree-27, with-28)

(ROOT
  (S
    (NP (IN as) (DT this))
    (VP (VBZ is)
      (ADJP (RB definately) (RB too) (JJ broad)))
    (. .)))

amod(this-2, as-1)
nsubj(broad-6, this-2)
cop(broad-6, is-3)
advmod(broad-6, definately-4)
advmod(broad-6, too-5)
root(ROOT-0, broad-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG saying)
        (S
          (VP (VBG arguing)
            (SBAR
              (WHNP (WDT which) (NN religion))
              (S
                (VP (VBZ is)
                  (ADJP (JJ right)
                    (SBAR
                      (S
                        (VP (VBZ is)
                          (NP (JJ absurd) (NNS ?!??!)))))))))))))))

nsubj(saying-3, You-1)
aux(saying-3, 're-2)
root(ROOT-0, saying-3)
xcomp(saying-3, arguing-4)
det(religion-6, which-5)
nsubj(right-8, religion-6)
cop(right-8, is-7)
ccomp(arguing-4, right-8)
cop(?!??!-11, is-9)
amod(?!??!-11, absurd-10)
dep(right-8, ?!??!-11)

