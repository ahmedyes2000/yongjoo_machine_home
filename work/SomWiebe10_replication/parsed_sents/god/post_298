(ROOT
  (S
    (S
      (VP (VBG Saying)
        (NP (DT that) (NN science) (NNS disproves) (NN god))))
    (VP (VBZ is)
      (NP (DT an) (JJ asinine) (NN statement)))
    (. .)))

csubj(statement-9, Saying-1)
det(god-5, that-2)
nn(god-5, science-3)
nn(god-5, disproves-4)
dobj(Saying-1, god-5)
cop(statement-9, is-6)
det(statement-9, an-7)
amod(statement-9, asinine-8)
root(ROOT-0, statement-9)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ has)
      (NP (NN science))
      (VP (VBN proven)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (DT the) (NN earth))
              (VP (VBZ revolves)
                (PP (IN around)
                  (NP (DT the) (NN sun))))))
          (CC and)
          (SBAR (IN that)
            (S
              (NP (DT all) (VBG living) (NNS things))
              (VP (VBP are)
                (VP (VBN made)
                  (PP (IN of)
                    (NP
                      (NP (NNS atoms))
                      (CC and)
                      (NP (JJ such)))))))))))
    (. .)))

dobj(proven-4, What-1)
aux(proven-4, has-2)
nsubj(proven-4, science-3)
root(ROOT-0, proven-4)
complm(revolves-8, that-5)
det(earth-7, the-6)
nsubj(revolves-8, earth-7)
ccomp(proven-4, revolves-8)
det(sun-11, the-10)
prep_around(revolves-8, sun-11)
complm(made-18, that-13)
det(things-16, all-14)
amod(things-16, living-15)
nsubjpass(made-18, things-16)
auxpass(made-18, are-17)
ccomp(proven-4, made-18)
conj_and(revolves-8, made-18)
prep_of(made-18, atoms-20)
prep_of(made-18, such-22)
conj_and(atoms-20, such-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NN computer))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG using)
              (S
                (VP (TO to)
                  (VP (VB read)
                    (NP (DT this))))))))))
    (VP
      (VP (VBD was)
        (VP (VBN built)))
      (CC and)
      (VP (VBZ operates)
        (PP (IN on)
          (NP (NNP Scientific) (NNS principals)))))
    (. .)))

det(computer-2, The-1)
dobj(using-6, computer-2)
nsubjpass(built-11, computer-2)
nsubj(operates-13, computer-2)
complm(using-6, that-3)
nsubj(using-6, you-4)
xsubj(read-8, you-4)
aux(using-6, are-5)
dep(computer-2, using-6)
aux(read-8, to-7)
xcomp(using-6, read-8)
dobj(read-8, this-9)
auxpass(built-11, was-10)
root(ROOT-0, built-11)
conj_and(built-11, operates-13)
nn(principals-16, Scientific-15)
prep_on(operates-13, principals-16)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (VP (VBD speculated))))
    (PRN (-LRB- -LRB-)
      (CC and)
      (S
        (NP (FW i))
        (VP (VBP mean)
          (NP
            (NP (DT a) (NN theory))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (ADVP (RB currently))
                  (VP (VBG trying)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN proven))))))))))))
      (-RRB- -RRB-))
    (NP (DT the) (NN universe))
    (VP (VBZ is)
      (VP (VBG moving)
        (ADVP (RB apart))))
    (. .)))

mark(speculated-2, As-1)
advcl(moving-20, speculated-2)
dep(mean-6, and-4)
nsubj(mean-6, i-5)
parataxis(moving-20, mean-6)
det(theory-8, a-7)
dobj(mean-6, theory-8)
nsubj(trying-12, theory-8)
aux(trying-12, is-10)
advmod(trying-12, currently-11)
rcmod(theory-8, trying-12)
aux(proven-15, to-13)
auxpass(proven-15, be-14)
xcomp(trying-12, proven-15)
det(universe-18, the-17)
nsubj(moving-20, universe-18)
aux(moving-20, is-19)
root(ROOT-0, moving-20)
advmod(moving-20, apart-21)

(ROOT
  (S
    (S
      (NP (NNP Scientist))
      (VP (VBP have)
        (VP (VBN known)
          (NP
            (NP (DT this))
            (PP (IN for)
              (NP
                (NP (DT a) (JJ long) (NN time))
                (SBAR
                  (S
                    (NP (DT the) (NN universe))
                    (VP (VBZ is)
                      (VP (VBG expanding)
                        (ADVP (RB right) (RB now))))))))))))
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD assumed)
        (NP (DT that) (NN one))
        (NP (NN day))
        (SBAR (IN that)
          (S
            (NP (DT the) (NN universe))
            (VP (MD would)
              (VP (VB collapse)
                (PRT (RP in))
                (PP (IN on)
                  (NP (PRP itself)))))))))
    (. .)))

nsubj(known-3, Scientist-1)
aux(known-3, have-2)
root(ROOT-0, known-3)
dobj(known-3, this-4)
det(time-8, a-6)
amod(time-8, long-7)
prep_for(this-4, time-8)
dobj(expanding-12, time-8)
det(universe-10, the-9)
nsubj(expanding-12, universe-10)
aux(expanding-12, is-11)
rcmod(time-8, expanding-12)
advmod(now-14, right-13)
advmod(expanding-12, now-14)
nsubj(assumed-17, they-16)
conj_but(known-3, assumed-17)
det(one-19, that-18)
dobj(assumed-17, one-19)
tmod(assumed-17, day-20)
complm(collapse-25, that-21)
det(universe-23, the-22)
nsubj(collapse-25, universe-23)
aux(collapse-25, would-24)
ccomp(assumed-17, collapse-25)
prt(collapse-25, in-26)
prep_on(collapse-25, itself-28)

(ROOT
  (S
    (ADVP (RB Actually))
    (NP (DT that))
    (VP (VBD was)
      (ADVP (RB never))
      (NP (DT the) (NN consensus)))
    (. .)))

advmod(consensus-6, Actually-1)
nsubj(consensus-6, that-2)
cop(consensus-6, was-3)
neg(consensus-6, never-4)
det(consensus-6, the-5)
root(ROOT-0, consensus-6)

(ROOT
  (S
    (NP (DT The) (VBG collapsing) (NN universe))
    (VP (VBD was)
      (NP
        (NP
          (QP (RB only) (CD one)))
        (PP (IN of)
          (NP
            (NP (CD three) (JJ considered) (NNS outcomes))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (DT the) (JJ other) (CD two) (JJ being) (NN equilibrium))
                (CC and)
                (NP (JJ infinite) (JJ linear) (NN expansion)))
              (-RRB- -RRB-))))))
    (. .)))

det(universe-3, The-1)
amod(universe-3, collapsing-2)
nsubj(one-6, universe-3)
cop(one-6, was-4)
quantmod(one-6, only-5)
root(ROOT-0, one-6)
num(outcomes-10, three-8)
amod(outcomes-10, considered-9)
prep_of(one-6, outcomes-10)
det(equilibrium-16, the-12)
amod(equilibrium-16, other-13)
num(equilibrium-16, two-14)
amod(equilibrium-16, being-15)
dep(outcomes-10, equilibrium-16)
amod(expansion-20, infinite-18)
amod(expansion-20, linear-19)
dep(outcomes-10, expansion-20)
conj_and(equilibrium-16, expansion-20)

(ROOT
  (S
    (NP (NNS Scientists))
    (ADVP (RB now))
    (VP
      (VP (VBP believe)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN universe))
            (VP (VBZ is)
              (VP (VBG expanding))))))
      (CC and)
      (VP (MD will))
      (S
        (VP (VBG continuing)
          (S
            (VP (VBG expanding)
              (PP (IN for)
                (NP (NN eternity)))
              (SBAR (IN since)
                (S
                  (NP (NN gravity))
                  (VP (VBZ loses)
                    (NP
                      (NP (PRP$ its) (NN strength))
                      (SBAR
                        (S
                          (NP (DT the) (JJ farther) (NNS objects))
                          (VP (VBP get)
                            (PP (IN from)
                              (NP (DT each) (JJ other) (-LRB- -LRB-) (NN duh) (-RRB- -RRB-)))))))))))))))
    (. .)))

nsubj(believe-3, Scientists-1)
advmod(believe-3, now-2)
root(ROOT-0, believe-3)
complm(expanding-8, that-4)
det(universe-6, the-5)
nsubj(expanding-8, universe-6)
aux(expanding-8, is-7)
ccomp(believe-3, expanding-8)
conj_and(believe-3, will-10)
xcomp(believe-3, continuing-11)
xcomp(continuing-11, expanding-12)
prep_for(expanding-12, eternity-14)
mark(loses-17, since-15)
nsubj(loses-17, gravity-16)
advcl(expanding-12, loses-17)
poss(strength-19, its-18)
dobj(loses-17, strength-19)
dobj(get-23, strength-19)
det(objects-22, the-20)
amod(objects-22, farther-21)
nsubj(get-23, objects-22)
rcmod(strength-19, get-23)
det(duh-28, each-25)
amod(duh-28, other-26)
prep_from(get-23, duh-28)

(ROOT
  (S
    (NP (DT The) (JJ current) (NN theory))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN rate))
            (PP (IN of)
              (NP (NN expansion))))
          (VP (VBZ is)
            (VP (VBG increasing))))))
    (. .)))

det(theory-3, The-1)
amod(theory-3, current-2)
nsubj(is-4, theory-3)
root(ROOT-0, is-4)
complm(increasing-11, that-5)
det(rate-7, the-6)
nsubj(increasing-11, rate-7)
prep_of(rate-7, expansion-9)
aux(increasing-11, is-10)
ccomp(is-4, increasing-11)

(ROOT
  (S (IN So)
    (NP (DT this))
    (VP (VBZ puts)
      (NP
        (NP (DT a) (JJ big) (NN question))
        (PP (IN on)
          (NP (DT the) (JJ big) (NN bang) (NN theory)))))
    (. .)))

dep(puts-3, So-1)
nsubj(puts-3, this-2)
root(ROOT-0, puts-3)
det(question-6, a-4)
amod(question-6, big-5)
dobj(puts-3, question-6)
det(theory-11, the-8)
amod(theory-11, big-9)
nn(theory-11, bang-10)
prep_on(question-6, theory-11)

(ROOT
  (S
    (NP (NNS Scientists))
    (VP (VBD believed)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN mass))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD existed)
                  (PP (IN before)
                    (NP (DT the) (JJ big) (NN bang)))))))
          (VP (VBD was)
            (PP (IN from)
              (NP (DT the) (NN universe)))
            (SBAR (IN before)
              (CC and)
              (IN that)
              (S
                (NP (PRP it))
                (VP (VBD collapsed)
                  (PRT (RP in))
                  (PP (IN on)
                    (NP (PRP itself))))))))))
    (. .)))

nsubj(believed-2, Scientists-1)
root(ROOT-0, believed-2)
complm(was-12, that-3)
det(mass-5, the-4)
nsubj(existed-7, mass-5)
nsubj(was-12, mass-5)
rcmod(mass-5, existed-7)
det(bang-11, the-9)
amod(bang-11, big-10)
prep_before(existed-7, bang-11)
ccomp(believed-2, was-12)
det(universe-15, the-14)
prep_from(was-12, universe-15)
mark(collapsed-20, before-16)
advcl(was-12, that-18)
conj_and(collapsed-20, that-18)
nsubj(collapsed-20, it-19)
advcl(was-12, collapsed-20)
prt(collapsed-20, in-21)
prep_on(collapsed-20, itself-23)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ cyclical) (NN universe) (NNS hypothesis))
      (VP
        (ADVP (RB never))
        (VBN moved)
        (PP (IN beyond)
          (NP (PRP it)))))
    (VP
      (VP (VBZ s)
        (NP (JJ preliminary) (NNS stages)))
      (CC and)
      (VP (VBD was) (RB not)
        (ADVP (RB universally))
        (VP (VBN accepted)
          (PRN (-LRB- -LRB-)
            (SBAR (IN though)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (VP (VBN seen)
                    (PP (IN as)
                      (NP (DT a) (NN possibility)))))))
            (-RRB- -RRB-)))))
    (. .)))

det(hypothesis-4, The-1)
amod(hypothesis-4, cyclical-2)
nn(hypothesis-4, universe-3)
nsubj(stages-11, hypothesis-4)
nsubjpass(accepted-16, hypothesis-4)
neg(moved-6, never-5)
partmod(hypothesis-4, moved-6)
prep_beyond(moved-6, it-8)
cop(stages-11, s-9)
amod(stages-11, preliminary-10)
root(ROOT-0, stages-11)
auxpass(accepted-16, was-13)
neg(accepted-16, not-14)
advmod(accepted-16, universally-15)
conj_and(stages-11, accepted-16)
mark(seen-21, though-18)
nsubjpass(seen-21, it-19)
auxpass(seen-21, was-20)
parataxis(accepted-16, seen-21)
det(possibility-24, a-23)
prep_as(seen-21, possibility-24)

(ROOT
  (S (CC But)
    (S
      (VP (VBG saying)
        (NP (DT that))
        (ADVP (RB there))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ scientific) (NN explanation))
        (CC and)
        (RB only)
        (NP (DT a) (JJ scientific) (NN explanation))))
    (. .)))

csubj(explanation-8, saying-2)
dobj(saying-2, that-3)
advmod(saying-2, there-4)
cop(explanation-8, is-5)
det(explanation-8, a-6)
amod(explanation-8, scientific-7)
root(ROOT-0, explanation-8)
advmod(explanation-8, only-10)
conj_and(explanation-8, only-10)
det(explanation-13, a-11)
amod(explanation-13, scientific-12)
dep(explanation-8, explanation-13)

(ROOT
  (S
    (VP (VBZ Is)
      (PP (IN like)
        (S
          (VP (VBG saying)
            (SBAR (IN that) (IN since)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP
                    (NP (NN life))
                    (PP (IN on)
                      (NP (NN earth))))
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBD came)
                        (PP (IN from)
                          (NP (DT a) (NN meteor)))))))))
            (PRN (-LRB- -LRB-)
              (S
                (NP (FW i))
                (VP (VBP 'm) (RB not)
                  (ADJP (JJ sure)
                    (SBAR
                      (S
                        (S
                          (NP (DT this))
                          (VP (VBZ is)
                            (NP (DT a) (JJ good) (NN analogy))))
                        (CC but)
                        (S
                          (NP (FW i))
                          (VP (MD could) (RB n't)
                            (VP (VB think)
                              (PP (IN of)
                                (NP (DT a) (JJR better) (NN one)))))))))))
              (-RRB- -RRB-))))))
    (. .)))

root(ROOT-0, Is-1)
prepc_like(Is-1, saying-3)
complm(is-7, that-4)
dep(is-7, since-5)
expl(is-7, there-6)
ccomp(saying-3, is-7)
nsubj(is-7, life-8)
prep_on(life-8, earth-10)
complm(came-13, that-11)
nsubj(came-13, it-12)
ccomp(is-7, came-13)
det(meteor-16, a-15)
prep_from(came-13, meteor-16)
nsubj(sure-21, i-18)
cop(sure-21, 'm-19)
neg(sure-21, not-20)
parataxis(saying-3, sure-21)
nsubj(analogy-26, this-22)
cop(analogy-26, is-23)
det(analogy-26, a-24)
amod(analogy-26, good-25)
dep(sure-21, analogy-26)
nsubj(think-31, i-28)
aux(think-31, could-29)
neg(think-31, n't-30)
dep(sure-21, think-31)
conj_but(analogy-26, think-31)
det(one-35, a-33)
amod(one-35, better-34)
prep_of(think-31, one-35)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB have)
      (NP
        (NP (DT another) (NN explanation))
        (, ,)
        (NP
          (NP (CD one))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ has)
                (NP (DT some) (JJ physical) (NN evidence)
                  (S
                    (VP (TO to)
                      (VP (VB back)
                        (NP (PRP it))
                        (PRT (RP up))))))))))))
    (. ?)))

aux(have-3, Do-1)
nsubj(have-3, you-2)
root(ROOT-0, have-3)
det(explanation-5, another-4)
dobj(have-3, explanation-5)
appos(explanation-5, one-7)
nsubj(has-9, one-7)
rcmod(one-7, has-9)
det(evidence-12, some-10)
amod(evidence-12, physical-11)
dobj(has-9, evidence-12)
aux(back-14, to-13)
infmod(evidence-12, back-14)
dobj(back-14, it-15)
prt(back-14, up-16)

(ROOT
  (S (CC Or)
    (VBP do)
    (NP (PRP you))
    (VP (VB have)
      (NP
        (NP (NN evidence))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ falsifies)
                (NP (JJ current) (NNS theories)))
              (CC but)
              (VP (VBZ supports)
                (NP (PRP$ your) (JJ own))))))))
    (. .)))

cc(have-4, Or-1)
dep(have-4, do-2)
nsubj(have-4, you-3)
root(ROOT-0, have-4)
dobj(have-4, evidence-5)
nsubj(falsifies-7, evidence-5)
nsubj(supports-11, evidence-5)
rcmod(evidence-5, falsifies-7)
amod(theories-9, current-8)
dobj(falsifies-7, theories-9)
rcmod(evidence-5, supports-11)
conj_but(falsifies-7, supports-11)
poss(own-13, your-12)
dobj(supports-11, own-13)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP know)
      (ADJP (RB so) (JJ little)
        (PP (IN about)
          (NP
            (NP (DT the) (NN world))
            (PP (IN around)
              (NP (PRP us))))))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ stupid)
              (S
                (VP (TO to)
                  (VP (VB say)
                    (SBAR (IN that)
                      (S
                        (PP (IN on)
                          (NP (DT the) (JJ little) (NN information)))
                        (NP (PRP we))
                        (VP (VBP have))))))))
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP (JJ definite) (NN proof))
                  (SBAR (IN that)
                    (S
                      (NP (NN god))
                      (VP (VBZ does) (RB n't)
                        (VP (VB exist)
                          (S
                            (SBAR (IN As)
                              (S
                                (NP (PRP I))
                                (VP (VBD stated)
                                  (PP (IN above)
                                    (S
                                      (VP (VBG using)
                                        (NP (DT that) (NN logic))))))))
                            (NP (PRP I))
                            (VP (MD could)
                              (VP (VB claim)
                                (SBAR (IN that)
                                  (S
                                    (NP (NNS elves))
                                    (VP (VBD existed) (RB then)
                                      (VP (VB demand)
                                        (SBAR (IN that)
                                          (S
                                            (NP (PRP you))
                                            (VP (VBP prove)
                                              (S
                                                (NP (PRP they))
                                                (VP (VB don)
                                                  (NP (NN t.)))))))))))))))))))))))))))

nsubj(know-2, We-1)
root(ROOT-0, know-2)
advmod(little-4, so-3)
acomp(know-2, little-4)
det(world-7, the-6)
prep_about(little-4, world-7)
prep_around(world-7, us-9)
complm(stupid-13, that-10)
nsubj(stupid-13, it-11)
cop(stupid-13, is-12)
ccomp(know-2, stupid-13)
aux(say-15, to-14)
xcomp(stupid-13, say-15)
complm(have-22, that-16)
det(information-20, the-18)
amod(information-20, little-19)
prep_on(have-22, information-20)
nsubj(have-22, we-21)
ccomp(say-15, have-22)
complm(is-25, that-23)
expl(is-25, there-24)
ccomp(stupid-13, is-25)
amod(proof-27, definite-26)
nsubj(is-25, proof-27)
complm(exist-32, that-28)
nsubj(exist-32, god-29)
aux(exist-32, does-30)
neg(exist-32, n't-31)
ccomp(is-25, exist-32)
mark(stated-35, As-33)
nsubj(stated-35, I-34)
advcl(claim-42, stated-35)
prepc_above(stated-35, using-37)
det(logic-39, that-38)
dobj(using-37, logic-39)
nsubj(claim-42, I-40)
aux(claim-42, could-41)
ccomp(exist-32, claim-42)
complm(existed-45, that-43)
nsubj(existed-45, elves-44)
ccomp(claim-42, existed-45)
advmod(existed-45, then-46)
dep(existed-45, demand-47)
complm(prove-50, that-48)
nsubj(prove-50, you-49)
ccomp(demand-47, prove-50)
nsubj(don-52, they-51)
ccomp(prove-50, don-52)
dobj(don-52, t.-53)

(ROOT
  (S
    (NP (NN religion))
    (VP (VBZ has)
      (ADVP (RB never))
      (VP (VBN claimed)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT the) (NNS answers))
                (PP (IN of)
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (NNS things))
                      (VP (VBP are)
                        (NP
                          (NP (DT the) (NN way))
                          (SBAR
                            (S
                              (NP (PRP they))
                              (VP (VBP are)))))))))))))))
    (. .)))

nsubj(claimed-4, religion-1)
xsubj(have-6, religion-1)
aux(claimed-4, has-2)
neg(claimed-4, never-3)
root(ROOT-0, claimed-4)
aux(have-6, to-5)
xcomp(claimed-4, have-6)
det(answers-8, the-7)
dobj(have-6, answers-8)
advmod(way-14, why-10)
nsubj(way-14, things-11)
cop(way-14, are-12)
det(way-14, the-13)
prepc_of(answers-8, way-14)
nsubj(are-16, they-15)
rcmod(way-14, are-16)

(ROOT
  (S
    (S
      (VP (VBG Explaining)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (NNS things))
            (VP (VBP are))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ huge) (NN part))
        (PP (IN of)
          (NP (NN religion)))))
    (. .)))

csubj(part-8, Explaining-1)
advmod(are-4, why-2)
nsubj(are-4, things-3)
advcl(Explaining-1, are-4)
cop(part-8, is-5)
det(part-8, a-6)
amod(part-8, huge-7)
root(ROOT-0, part-8)
prep_of(part-8, religion-10)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ entire) (JJ first) (NN book))
      (PP (IN of)
        (NP (DT the) (NNP Bible))))
    (VP (VBZ is)
      (ADJP (VBN devoted)
        (PP (TO to)
          (S
            (VP (VBG explaining)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (NNS things))
                  (VP (VBP are)
                    (NP
                      (NP (DT the) (NN way))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBP are)
                            (PP (IN on)
                              (NP (NN earth)))))))))))))))
    (. .)))

det(book-4, The-1)
amod(book-4, entire-2)
amod(book-4, first-3)
nsubjpass(devoted-9, book-4)
det(Bible-7, the-6)
prep_of(book-4, Bible-7)
auxpass(devoted-9, is-8)
root(ROOT-0, devoted-9)
prepc_to(devoted-9, explaining-11)
advmod(way-16, why-12)
nsubj(way-16, things-13)
cop(way-16, are-14)
det(way-16, the-15)
advcl(explaining-11, way-16)
nsubj(are-18, they-17)
rcmod(way-16, are-18)
prep_on(are-18, earth-20)

(ROOT
  (S
    (S
      (NP (JJ Holy) (NNS scriptures))
      (VP (VBP are)
        (VP (VBN written)
          (PP (IN by)
            (NP (NN man))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VB transform)
        (NP (PRP it))
        (SBAR (IN as)
          (S
            (NP (PRP they))
            (VP (VBP see)
              (ADJP (JJ fit)))))))
    (. .)))

amod(scriptures-2, Holy-1)
nsubjpass(written-4, scriptures-2)
auxpass(written-4, are-3)
root(ROOT-0, written-4)
agent(written-4, man-6)
nsubj(transform-9, they-8)
conj_and(written-4, transform-9)
dobj(transform-9, it-10)
mark(see-13, as-11)
nsubj(see-13, they-12)
advcl(transform-9, see-13)
acomp(see-13, fit-14)

(ROOT
  (S (CC But)
    (NP (DT this))
    (VP (VBZ is) (RB not)
      (NP (JJ definite) (NN proof))
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT no) (NN god))))))
    (. .)))

cc(proof-6, But-1)
nsubj(proof-6, this-2)
cop(proof-6, is-3)
neg(proof-6, not-4)
amod(proof-6, definite-5)
root(ROOT-0, proof-6)
complm(is-9, that-7)
expl(is-9, there-8)
ccomp(proof-6, is-9)
det(god-11, no-10)
nsubj(is-9, god-11)

(ROOT
  (S
    (NP (NN science))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB prove)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is)
              (VP (VBN seen)))))))
    (. .)))

nsubj(prove-4, science-1)
aux(prove-4, can-2)
advmod(prove-4, only-3)
root(ROOT-0, prove-4)
nsubjpass(seen-7, what-5)
auxpass(seen-7, is-6)
ccomp(prove-4, seen-7)

(ROOT
  (S
    (NP
      (NP (DT The) (NN burden))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ is)
      (PP (IN on)
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP believe)
                (PP (IN in)
                  (NP (NNP God))))))
          (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-))))
      (ADVP (RB not)
        (PP (IN on)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP do) (RB not)
                  (VP (VB believe)))))))))
    (. .)))

det(burden-2, The-1)
nsubj(is-5, burden-2)
prep_of(burden-2, proof-4)
root(ROOT-0, is-5)
prep_on(is-5, those-7)
nsubj(believe-9, those-7)
rcmod(those-7, believe-9)
prep_in(believe-9, God-11)
dep(those-7, s-13)
neg(is-5, not-15)
prep_on(not-15, those-17)
nsubj(believe-21, those-17)
aux(believe-21, do-19)
neg(believe-21, not-20)
rcmod(those-17, believe-21)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP tell)
          (NP (PRP you))
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP (JJ magic) (NNS unicorns))
                  (VP (VBG running)
                    (PRT (RP around))))))))))
    (VP (VBP do)
      (S
        (NP (PRP you))
        (VP (VB accept)
          (NP (DT that) (NN statement))
          (SBAR (RB just) (IN because)
            (S
              (NP (PRP you))
              (VP (MD can) (RB not)
                (VP (VB disprove)
                  (NP (PRP it)))))))))
    (. ?)))

mark(tell-3, If-1)
nsubj(tell-3, I-2)
csubj(do-12, tell-3)
dobj(tell-3, you-4)
complm(are-7, that-5)
expl(are-7, there-6)
ccomp(tell-3, are-7)
amod(unicorns-9, magic-8)
nsubj(are-7, unicorns-9)
partmod(unicorns-9, running-10)
prt(running-10, around-11)
root(ROOT-0, do-12)
nsubj(accept-14, you-13)
ccomp(do-12, accept-14)
det(statement-16, that-15)
dobj(accept-14, statement-16)
advmod(disprove-22, just-17)
dep(disprove-22, because-18)
nsubj(disprove-22, you-19)
aux(disprove-22, can-20)
neg(disprove-22, not-21)
dep(accept-14, disprove-22)
dobj(disprove-22, it-23)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (JJ many) (NNS things))
          (VP (VBG going)
            (PP (IN on) (IN in)
              (NP
                (NP (DT the) (NN universe))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP are)
                      (ADJP (JJ unseen)
                        (SBAR
                          (S
                            (VP (VBP look)
                              (PP (IN at)
                                (NP
                                  (NP (JJ black) (NNS holes))
                                  (SBAR
                                    (S
                                      (NP (PRP we))
                                      (VP (VBP know)
                                        (SBAR
                                          (S
                                            (NP (PRP they))
                                            (VP (VBP are)
                                              (ADVP (RB there)))))))))))))))))))))))
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD can)
        (ADVP (RB only))
        (VP (VB speculate)
          (PP (IN on)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP they))
                (VP (VBP function))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(things-4, many-3)
nsubj(are-2, things-4)
partmod(things-4, going-5)
dep(going-5, on-6)
det(universe-9, the-8)
prep_in(going-5, universe-9)
nsubj(unseen-12, universe-9)
cop(unseen-12, are-11)
rcmod(universe-9, unseen-12)
dep(unseen-12, look-13)
amod(holes-16, black-15)
prep_at(look-13, holes-16)
nsubj(know-18, we-17)
rcmod(holes-16, know-18)
nsubj(are-20, they-19)
ccomp(know-18, are-20)
advmod(are-20, there-21)
nsubj(speculate-26, we-23)
aux(speculate-26, can-24)
advmod(speculate-26, only-25)
conj_but(are-2, speculate-26)
advmod(function-30, how-28)
nsubj(function-30, they-29)
prepc_on(speculate-26, function-30)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (NP
        (NP (DT some)
          (ADJP (RB very) (JJ strong))
          (NN math))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ describes)
              (NP (JJ black) (NNS holes)))))))
    (. .)))

nsubj(have-2, We-1)
root(ROOT-0, have-2)
det(math-6, some-3)
advmod(strong-5, very-4)
amod(math-6, strong-5)
dobj(have-2, math-6)
nsubj(describes-8, math-6)
rcmod(math-6, describes-8)
amod(holes-10, black-9)
dobj(describes-8, holes-10)

(ROOT
  (S
    (ADVP (RB As) (RB far)
      (SBAR (IN as)
        (S
          (NP (NN science))
          (VP (VBZ has)
            (VP (VBN gone))))))
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (RB really) (JJ only)
        (PP (IN within)
          (NP
            (NP (DT the) (NN scope))
            (PP (IN of)
              (NP
                (NP (PRP$ our) (NN corner))
                (PP (IN of)
                  (NP (PRP$ our) (NN galaxy)))))))))
    (. .)))

advmod(far-2, As-1)
advmod(only-10, far-2)
mark(gone-6, as-3)
nsubj(gone-6, science-4)
aux(gone-6, has-5)
ccomp(far-2, gone-6)
nsubj(only-10, it-7)
cop(only-10, is-8)
advmod(only-10, really-9)
root(ROOT-0, only-10)
det(scope-13, the-12)
prep_within(only-10, scope-13)
poss(corner-16, our-15)
prep_of(scope-13, corner-16)
poss(galaxy-19, our-18)
prep_of(corner-16, galaxy-19)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ tiny) (NN fraction))
        (PP (IN of)
          (NP (DT the) (JJ whole) (NN universe)))))
    (. .)))

nsubj(fraction-5, Which-1)
cop(fraction-5, is-2)
det(fraction-5, a-3)
amod(fraction-5, tiny-4)
root(ROOT-0, fraction-5)
det(universe-9, the-7)
amod(universe-9, whole-8)
prep_of(fraction-5, universe-9)

(ROOT
  (S
    (NP (NNP Science))
    (VP (MD can)
      (VP (VB observe)
        (UCP
          (NP (DT the) (JJ entire) (JJ observable) (NN universe))
          (CC and)
          (PP (IN in)
            (S
              (VP (VBG doing)
                (SBAR (IN so)
                  (S
                    (NP (PRP we))
                    (VP (VBP see)
                      (SBAR (IN that)
                        (S
                          (NP (DT the) (NNS laws))
                          (VP (VBP are)
                            (ADJP (JJ consistent))))))))))))))
    (. .)))

nsubj(observe-3, Science-1)
aux(observe-3, can-2)
root(ROOT-0, observe-3)
det(universe-7, the-4)
amod(universe-7, entire-5)
amod(universe-7, observable-6)
dobj(observe-3, universe-7)
dobj(observe-3, in-9)
conj_and(universe-7, in-9)
prepc_in(universe-7, doing-10)
mark(see-13, so-11)
nsubj(see-13, we-12)
advcl(doing-10, see-13)
complm(consistent-18, that-14)
det(laws-16, the-15)
nsubj(consistent-18, laws-16)
cop(consistent-18, are-17)
ccomp(see-13, consistent-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP
        (VP (VB observe)
          (NP
            (NP (DT the) (JJ chemical) (NN composition))
            (PP (IN of)
              (NP (JJ distant) (NNS stars)))))
        (, ,)
        (CC and)
        (ADVP (RB even))
        (VP (VB observe)
          (NP
            (NP (DT the) (NN motion))
            (PP (IN of)
              (NP (NNS planets))))
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VB orbit)
                (NP (JJ other) (NNS stars))))))))
    (. .)))

nsubj(observe-3, We-1)
nsubj(observe-13, We-1)
aux(observe-3, can-2)
root(ROOT-0, observe-3)
det(composition-6, the-4)
amod(composition-6, chemical-5)
dobj(observe-3, composition-6)
amod(stars-9, distant-8)
prep_of(composition-6, stars-9)
advmod(observe-3, even-12)
conj_and(observe-3, even-12)
conj_and(observe-3, observe-13)
det(motion-15, the-14)
dobj(observe-13, motion-15)
prep_of(motion-15, planets-17)
mark(orbit-20, as-18)
nsubj(orbit-20, they-19)
advcl(observe-13, orbit-20)
amod(stars-22, other-21)
dobj(orbit-20, stars-22)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP see)
      (NP (NNS things))
      (PP (IN on)
        (NP (PDT such) (DT a) (JJ small) (NN scale)))
      (SBAR (IN that)
        (S
          (NP
            (NP (JJS most))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS things))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP have)
                      (VP (VBN proven))))))))
          (VP (MD may) (RB not)
            (VP (VB conform)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN rest))
                  (PP (IN of)
                    (NP (DT the) (NN universe))))))))))
    (. .)))

nsubj(see-2, We-1)
root(ROOT-0, see-2)
dobj(see-2, things-3)
predet(scale-8, such-5)
det(scale-8, a-6)
amod(scale-8, small-7)
prep_on(see-2, scale-8)
complm(conform-19, that-9)
nsubj(conform-19, most-10)
det(things-13, the-12)
prep_of(most-10, things-13)
dobj(proven-16, things-13)
nsubj(proven-16, we-14)
aux(proven-16, have-15)
rcmod(things-13, proven-16)
aux(conform-19, may-17)
neg(conform-19, not-18)
ccomp(see-2, conform-19)
det(rest-22, the-21)
prep_to(conform-19, rest-22)
det(universe-25, the-24)
prep_of(rest-22, universe-25)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (S
          (VP (VBN stated)
            (PP (IN above)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP we))
                  (VP (VBP observe)))))))
        (VP (VBZ is)
          (ADJP (JJ consistent)))))
    (, ,)
    (NP
      (NP (DT the) (NNS laws))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP see)
            (ADVP (RB here))
            (PP (IN on)
              (NP (NN earth)))))))
    (VP (VBP are)
      (NP
        (NP (DT the) (JJ same) (NNS laws))
        (VP (VBN found)
          (PP (IN in)
            (NP (DT the) (JJ Andromeda) (NN galaxy)
              (CC and)
              (RB beyond))))))
    (. .)))

mark(consistent-8, As-1)
csubj(consistent-8, stated-2)
dobj(observe-6, what-4)
nsubj(observe-6, we-5)
prepc_above(stated-2, observe-6)
cop(consistent-8, is-7)
advcl(laws-20, consistent-8)
det(laws-11, the-10)
dobj(see-13, laws-11)
nsubj(laws-20, laws-11)
nsubj(see-13, we-12)
rcmod(laws-11, see-13)
advmod(see-13, here-14)
prep_on(see-13, earth-16)
cop(laws-20, are-17)
det(laws-20, the-18)
amod(laws-20, same-19)
root(ROOT-0, laws-20)
partmod(laws-20, found-21)
det(galaxy-25, the-23)
amod(galaxy-25, Andromeda-24)
prep_in(found-21, galaxy-25)
prep_in(found-21, beyond-27)
advmod(galaxy-25, beyond-27)
conj_and(galaxy-25, beyond-27)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP do) (RB n't)
        (ADVP (RB even))
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (PP (IN at)
                  (NP
                    (NP (DT the) (JJ very) (NN bottom))
                    (PP (IN of)
                      (NP (PRP$ our) (JJ own) (NNS oceans)))))
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (VP (MD can))))))))))
    (NP (PRP we))
    (VP (VBP claim)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP know)
            (SBAR (IN if)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP
                    (NP (DT a) (NN divine))
                    (VP (VBG being)))))
              (CC or)
              (RB not))))))
    (. .)))

nsubj(know-5, We-1)
aux(know-5, do-2)
neg(know-5, n't-3)
advmod(know-5, even-4)
dep(claim-19, know-5)
nsubj(is-7, what-6)
nsubj(can-17, what-6)
ccomp(know-5, is-7)
det(bottom-11, the-9)
amod(bottom-11, very-10)
prep_at(is-7, bottom-11)
poss(oceans-15, our-13)
amod(oceans-15, own-14)
prep_of(bottom-11, oceans-15)
advmod(can-17, how-16)
ccomp(is-7, can-17)
nsubj(claim-19, we-18)
root(ROOT-0, claim-19)
complm(know-22, that-20)
nsubj(know-22, we-21)
ccomp(claim-19, know-22)
mark(is-25, if-23)
expl(is-25, there-24)
advcl(know-22, is-25)
det(divine-27, a-26)
nsubj(is-25, divine-27)
partmod(divine-27, being-28)
advcl(know-22, not-30)
conj_or(is-25, not-30)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (CC but)
      (NP (DT that) (JJ same) (NN logic))
      (VP (VBZ says)))
    (NP (PRP we))
    (VP (MD can) (RB not)
      (VP (VB claim)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBP are)
              (NP (DT no) (NNS elves)))))))
    (. .)))

dep(says-7, Yes-1)
det(logic-6, that-4)
amod(logic-6, same-5)
conj_but(says-7, logic-6)
nsubj(says-7, logic-6)
dep(claim-11, logic-6)
dep(claim-11, says-7)
nsubj(claim-11, we-8)
aux(claim-11, can-9)
neg(claim-11, not-10)
root(ROOT-0, claim-11)
complm(are-14, that-12)
expl(are-14, there-13)
ccomp(claim-11, are-14)
det(elves-16, no-15)
nsubj(are-14, elves-16)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN proof))
        (PP (IN on)
          (NP (DT either) (NN side))))
      (SBAR (RB just) (IN because)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN god))
              (SBAR
                (S
                  (VP (VBZ does) (RB not)
                    (VP (VB disprove)
                      (NP (NN science)
                        (CC and)
                        (NN vice-versa)))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(proof-4, no-3)
nsubj(is-2, proof-4)
det(side-7, either-6)
prep_on(proof-4, side-7)
advmod(is-11, just-8)
dep(is-11, because-9)
expl(is-11, there-10)
dep(is-2, is-11)
det(god-13, a-12)
nsubj(is-11, god-13)
aux(disprove-16, does-14)
neg(disprove-16, not-15)
rcmod(god-13, disprove-16)
dobj(disprove-16, science-17)
dobj(disprove-16, vice-versa-19)
conj_and(science-17, vice-versa-19)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (NP (RB just)
        (NP (DT a) (NN process))
        (, ,)
        (CONJP (RB not) (RB really))
        (NP
          (NP (NN something))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (VP (VB be)
                  (VP (VBN proven)
                    (CC or)
                    (VBN disproved)))))))))
    (. .)))

nsubj(process-5, Science-1)
cop(process-5, is-2)
advmod(process-5, just-3)
det(process-5, a-4)
root(ROOT-0, process-5)
conj_really(process-5, something-9)
nsubjpass(proven-13, something-9)
nsubjpass(disproved-15, something-9)
aux(proven-13, can-11)
auxpass(proven-13, be-12)
rcmod(something-9, proven-13)
rcmod(something-9, disproved-15)
conj_or(proven-13, disproved-15)

(ROOT
  (S
    (ADVP (RB However))
    (NP
      (NP (DT the) (NN evidence))
      (PP (IN of)
        (NP (PRP it))))
    (VP (VBZ s)
      (NP
        (NP (NN accuracy))
        (SBAR
          (S
            (VP (VBZ is)
              (ADJP (JJ right)
                (PP (IN in)
                  (NP
                    (NP (NN front))
                    (PP (IN of)
                      (NP (PRP you)))))))))))
    (. .)))

advmod(accuracy-7, However-1)
det(evidence-3, the-2)
nsubj(accuracy-7, evidence-3)
prep_of(evidence-3, it-5)
cop(accuracy-7, s-6)
root(ROOT-0, accuracy-7)
cop(right-9, is-8)
rcmod(accuracy-7, right-9)
prep_in_front_of(right-9, you-13)

