(ROOT
  (S
    (VP (VBN Agreed)
      (PP (IN on)
        (NP
          (NP (DT the) (NNP Pascal) (POS 's))
          (NNP Wager) (NN argument))))
    (. .)))

root(ROOT-0, Agreed-1)
det(Pascal-4, the-3)
poss(argument-7, Pascal-4)
nn(argument-7, Wager-6)
prep_on(Agreed-1, argument-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB also))
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB add)
              (SBAR (IN that) (IN if)
                (S
                  (NP (EX there))
                  (VP (VBZ is) (RB n't)
                    (NP
                      (NP (NN anything))
                      (PP (IN in)
                        (NP (DT this) (NN life))))
                    (ADVP (IN after))
                    (, ,)
                    (SBAR (IN than)
                      (S
                        (NP (PRP you))
                        (VP (VBP have)
                          (VP (VBN wasted)
                            (NP (PRP$ your) (NN one)
                              (CC and)
                              (JJ only) (NN life))
                            (PP (IN in)
                              (NP
                                (NP (NN fear))
                                (PP (IN of)
                                  (NP (DT some)
                                    (ADJP (RB spooky) (JJ invisible))
                                    (NN being)))))))))))))))))
    (. .)))

nsubj(like-4, I-1)
xsubj(add-6, I-1)
aux(like-4, would-2)
advmod(like-4, also-3)
root(ROOT-0, like-4)
aux(add-6, to-5)
xcomp(like-4, add-6)
complm(is-10, that-7)
dep(is-10, if-8)
expl(is-10, there-9)
ccomp(add-6, is-10)
neg(is-10, n't-11)
nsubj(is-10, anything-12)
det(life-15, this-14)
prep_in(anything-12, life-15)
advmod(is-10, after-16)
mark(wasted-21, than-18)
nsubj(wasted-21, you-19)
aux(wasted-21, have-20)
advcl(is-10, wasted-21)
poss(one-23, your-22)
dobj(wasted-21, one-23)
amod(life-26, only-25)
dobj(wasted-21, life-26)
conj_and(one-23, life-26)
prep_in(wasted-21, fear-28)
det(being-33, some-30)
advmod(invisible-32, spooky-31)
amod(being-33, invisible-32)
prep_of(fear-28, being-33)

(ROOT
  (S
    (NP (DT That))
    (ADVP (RB right) (RB there))
    (VP (VBZ is)
      (NP (DT the) (JJS biggest) (NN loss)))
    (. .)))

nsubj(loss-7, That-1)
advmod(there-3, right-2)
advmod(loss-7, there-3)
cop(loss-7, is-4)
det(loss-7, the-5)
amod(loss-7, biggest-6)
root(ROOT-0, loss-7)

