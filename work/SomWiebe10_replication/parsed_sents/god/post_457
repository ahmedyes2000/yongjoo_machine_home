(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (PP (IN in)
        (NP
          (NP (NNS gods))
          (CONJP (CC but)
            (RB not))
          (NP
            (NP (DT a) (JJ absolute) (NN god))
            (PP (JJ such) (IN as)
              (NP (NNP Jesus) (NNP christ)
                (CC or)
                (NNP Allah))))))
      (SBAR (IN that)
        (S
          (NP (VBN created) (NN everything))
          (VP (VBP inclusive)
            (S
              (NP (PRP us))
              (NP (JJ human) (NNS beings)))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
prep_in(believe-2, gods-4)
det(god-9, a-7)
amod(god-9, absolute-8)
prep_in(believe-2, god-9)
conj_negcc(gods-4, god-9)
nn(christ-13, Jesus-12)
prep_such_as(god-9, christ-13)
prep_such_as(god-9, Allah-15)
conj_or(christ-13, Allah-15)
complm(inclusive-19, that-16)
amod(everything-18, created-17)
nsubj(inclusive-19, everything-18)
ccomp(believe-2, inclusive-19)
nsubj(beings-22, us-20)
amod(beings-22, human-21)
xcomp(inclusive-19, beings-22)

(ROOT
  (S
    (S
      (NP
        (NP (NNS Gods))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP create)
              (NP (NN everything))))))
      (ADVP (RB just))
      (VP (VBD did) (RB n't)
        (VP (VB exist)
          (PP (IN in)
            (NP (PRP me))))))
    (CC and)
    (S
      (NP (DT the) (NN reason))
      (VP (VBZ is)
        (ADJP (RB very) (JJ simple))))
    (. .)))

nsubj(create-3, Gods-1)
nsubj(exist-8, Gods-1)
rcmod(Gods-1, create-3)
dobj(create-3, everything-4)
advmod(exist-8, just-5)
aux(exist-8, did-6)
neg(exist-8, n't-7)
root(ROOT-0, exist-8)
prep_in(exist-8, me-10)
det(reason-13, the-12)
nsubj(simple-16, reason-13)
cop(simple-16, is-14)
advmod(simple-16, very-15)
conj_and(exist-8, simple-16)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB why))
    (SQ (VBD did)
      (NP (PRP he))
      (VP (VB give)
        (NP (NNS animals))
        (NP (NNS feelings))))
    (. ?)))

cc(give-5, But-1)
advmod(give-5, why-2)
aux(give-5, did-3)
nsubj(give-5, he-4)
root(ROOT-0, give-5)
iobj(give-5, animals-6)
dobj(give-5, feelings-7)

(ROOT
  (S (CC And)
    (NP (FW i))
    (ADVP (RB strongly))
    (VP (VBP feel)
      (SBAR (IN that)
        (S
          (NP (PRP we) (NNS humans))
          (VP (VBP are) (RB n't)
            (ADJP (JJ suppose)
              (S
                (VP (TO to)
                  (VP (VB consume)
                    (NP (NNS animals))))))))))
    (. .)))

cc(feel-4, And-1)
nsubj(feel-4, i-2)
advmod(feel-4, strongly-3)
root(ROOT-0, feel-4)
complm(suppose-10, that-5)
dep(humans-7, we-6)
nsubj(suppose-10, humans-7)
cop(suppose-10, are-8)
neg(suppose-10, n't-9)
ccomp(feel-4, suppose-10)
aux(consume-12, to-11)
xcomp(suppose-10, consume-12)
dobj(consume-12, animals-13)

(ROOT
  (S
    (S
      (NP (PRP$ Our) (NNS teeth))
      (VP (VBP are)
        (ADJP (JJ harbivourous))))
    (CC and)
    (S
      (NP (PRP$ our) (JJ digestive) (NN system))
      (VP (VBP are)
        (NP
          (NP (DT that))
          (PP (IN of)
            (NP (DT a) (NN vegetarian))))
        (PP (RB not)
          (NP (DT a) (NN meat) (NN eater)))))
    (. .)))

poss(teeth-2, Our-1)
nsubj(harbivourous-4, teeth-2)
cop(harbivourous-4, are-3)
root(ROOT-0, harbivourous-4)
poss(system-8, our-6)
amod(system-8, digestive-7)
nsubj(that-10, system-8)
cop(that-10, are-9)
conj_and(harbivourous-4, that-10)
det(vegetarian-13, a-12)
prep_of(that-10, vegetarian-13)
prep(that-10, not-14)
det(eater-17, a-15)
nn(eater-17, meat-16)
pobj(not-14, eater-17)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP (VB eat)
        (NP
          (NP (NN meat) (RB yes))
          (CONJP (CC but)
            (RB not))
          (NP (RB too) (RB much)))
        (SBAR (IN as)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP die))))
            (, ,)
            (NP
              (NP (NN waste) (NNS materials))
              (PP (IN in)
                (NP
                  (NP (DT the) (NNS animals))
                  (PP (JJ such) (IN as)
                    (NP (NNP Urea))))))
            (VP (MD will)
              (VP (VB be)
                (VP (VBN sstored)
                  (PP (IN inside)
                    (NP (PRP them))))))))))
    (. .)))

nsubj(eat-3, We-1)
aux(eat-3, can-2)
root(ROOT-0, eat-3)
dobj(eat-3, meat-4)
advmod(meat-4, yes-5)
advmod(much-9, too-8)
dobj(eat-3, much-9)
conj_negcc(meat-4, much-9)
mark(sstored-25, as-10)
advmod(die-13, when-11)
nsubj(die-13, they-12)
advcl(sstored-25, die-13)
nn(materials-16, waste-15)
nsubjpass(sstored-25, materials-16)
det(animals-19, the-18)
prep_in(materials-16, animals-19)
prep_such_as(animals-19, Urea-22)
aux(sstored-25, will-23)
auxpass(sstored-25, be-24)
advcl(eat-3, sstored-25)
prep_inside(sstored-25, them-27)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP we))
        (VP (VBP eat)
          (NP (PRP them)))))
    (NP (PRP we))
    (VP (VBP eat)
      (NP (PRP$ their) (NN waste) (NNS materials)))
    (. .)))

advmod(eat-3, When-1)
nsubj(eat-3, we-2)
advcl(eat-6, eat-3)
dobj(eat-3, them-4)
nsubj(eat-6, we-5)
root(ROOT-0, eat-6)
poss(materials-9, their-7)
nn(materials-9, waste-8)
dobj(eat-6, materials-9)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (ADVP (RB so))
        (NP
          (NP (JJ many) (NNS inperfections))
          (PP (IN of)
            (NP (NNP God))))))
    (CC and)
    (S
      (NP (FW i))
      (VP (MD can)
        (ADVP (RB hardly))
        (VP (VB name)
          (S
            (NP (PRP them))
            (ADVP (DT all)
              (PP (IN in)
                (NP (CD one))))
            (VP (VB go))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
advmod(are-2, so-3)
amod(inperfections-5, many-4)
nsubj(are-2, inperfections-5)
prep_of(inperfections-5, God-7)
nsubj(name-12, i-9)
aux(name-12, can-10)
advmod(name-12, hardly-11)
conj_and(are-2, name-12)
nsubj(go-17, them-13)
advmod(go-17, all-14)
prep_in(all-14, one-16)
ccomp(name-12, go-17)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ is)
      (NP
        (NP (PRP$ my) (NN point)
          (CC and)
          (NN question))
        (PP (IN towards)
          (NP (DT those)))
        (S
          (VP (TO to)
            (VP (VB believe)
              (PP (IN in)
                (NP (NN god))))))))
    (. .)))

nsubj(point-4, Here-1)
cop(point-4, is-2)
poss(point-4, my-3)
root(ROOT-0, point-4)
conj_and(point-4, question-6)
prep_towards(point-4, those-8)
aux(believe-10, to-9)
infmod(point-4, believe-10)
prep_in(believe-10, god-12)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBD did)
      (NP (PRP$ your) (JJ beloved) (NN god))
      (VP (VB create)
        (NP (PRP you))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (MD could)
              (ADVP (RB just))
              (VP (RB not)
                (VP (VB create)
                  (NP (PRP you)))
                (CC and)
                (RB not)
                (VP (VB make)
                  (S
                    (NP (PRP you))
                    (VP (VB suffer))))))))))
    (. .)))

advmod(create-6, Why-1)
aux(create-6, did-2)
poss(god-5, your-3)
amod(god-5, beloved-4)
nsubj(create-6, god-5)
root(ROOT-0, create-6)
dobj(create-6, you-7)
advmod(create-13, when-8)
nsubj(create-13, he-9)
aux(create-13, could-10)
advmod(create-13, just-11)
neg(create-13, not-12)
advcl(create-6, create-13)
dobj(create-13, you-14)
advcl(create-6, not-16)
conj_and(create-13, not-16)
neg(create-13, not-16)
dep(create-13, make-17)
nsubj(suffer-19, you-18)
ccomp(make-17, suffer-19)

(ROOT
  (FRAG
    (NP (DT Another))
    (VP (VB question) (: :)
      (SBARQ
        (WHADVP (WRB Why))
        (SQ (VBD did)
          (NP (NN god))
          (VP (VB create)
            (NP (PRP us))
            (PP (IN in)
              (NP (DT the) (JJ first) (NN place)))))
        (. ?)))))

root(ROOT-0, Another-1)
dep(Another-1, question-2)
advmod(create-7, Why-4)
aux(create-7, did-5)
nsubj(create-7, god-6)
parataxis(question-2, create-7)
dobj(create-7, us-8)
det(place-12, the-10)
amod(place-12, first-11)
prep_in(create-7, place-12)

(ROOT
  (S
    (VP (TO To)
      (VP (VB be)
        (NP (PRP$ his) (NNS puppets))))
    (. ?)))

aux(puppets-4, To-1)
cop(puppets-4, be-2)
poss(puppets-4, his-3)
root(ROOT-0, puppets-4)

(ROOT
  (FRAG
    (PP (IN For)
      (NP (NN fun)))
    (. ?)))

root(ROOT-0, For-1)
pobj(For-1, fun-2)

(ROOT
  (SBARQ (RB So)
    (WHNP (WDT that) (NN god))
    (SQ
      (VP (MD will) (RB not)
        (VP (VB feel)
          (ADJP (JJ lonely)))))
    (. ?)))

advmod(feel-6, So-1)
det(god-3, that-2)
nsubj(feel-6, god-3)
aux(feel-6, will-4)
neg(feel-6, not-5)
root(ROOT-0, feel-6)
acomp(feel-6, lonely-7)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD heard)
        (S
          (NP (JJ many) (JJ weird) (NNS debaters))
          (ADJP (JJ insulting))
          (NP (PRP me))
          (PP (IN as)
            (NP (DT an) (NN idoit)))))
      (CC and)
      (VP
        (ADVP (RB so)
          (PP (IN on)
            (SBAR (CC but)
              (S
                (NP (DT this))
                (VP (VBZ is)
                  (ADVP (RB just))
                  (NP
                    (NP (PRP$ my) (NNS views))
                    (PP (IN on)
                      (NP (NN christianity)
                        (CC and)
                        (NNS gods)))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP create)
                          (NP (NN everything)))))))))))))
    (. .)))

nsubj(heard-2, I-1)
root(ROOT-0, heard-2)
amod(debaters-5, many-3)
amod(debaters-5, weird-4)
nsubj(insulting-6, debaters-5)
xcomp(heard-2, insulting-6)
dep(insulting-6, me-7)
dep(insulting-6, as-8)
det(idoit-10, an-9)
pobj(as-8, idoit-10)
conj_and(heard-2, so-12)
cc(views-19, but-14)
nsubj(views-19, this-15)
cop(views-19, is-16)
advmod(views-19, just-17)
poss(views-19, my-18)
prepc_on(so-12, views-19)
nsubj(create-25, views-19)
prep_on(views-19, christianity-21)
prep_on(views-19, gods-23)
conj_and(christianity-21, gods-23)
rcmod(views-19, create-25)
dobj(create-25, everything-26)

(ROOT
  (S
    (NP (DT This) (NN argument))
    (VP
      (VP (VBD meant)
        (NP (DT no) (NN offense))
        (PP (TO to)
          (NP (NN anybody))))
      (CC but)
      (VP (VBZ is)
        (ADJP (RB just)
          (S
            (VP (TO to)
              (VP (VB express)
                (NP (PRP$ my) (NNS opinions)
                  (CC and)
                  (NNS beliefs))))))))
    (. .)))

det(argument-2, This-1)
nsubj(meant-3, argument-2)
root(ROOT-0, meant-3)
det(offense-5, no-4)
dobj(meant-3, offense-5)
prep_to(meant-3, anybody-7)
cop(just-10, is-9)
conj_but(meant-3, just-10)
aux(express-12, to-11)
xcomp(just-10, express-12)
poss(opinions-14, my-13)
dobj(express-12, opinions-14)
dobj(express-12, beliefs-16)
conj_and(opinions-14, beliefs-16)

(ROOT
  (S
    (NP (NNS Gods))
    (VP (VBP are)
      (VP (VBN said)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (JJ supernatural) (NNS powers))
                (PP (IN of)
                  (NP
                    (NP (NN everykind))
                    (PP (JJ such) (IN as)
                      (S
                        (VP
                          (VP (VBG looking)
                            (PP (IN into)
                              (NP (DT the) (NN future))))
                          (CC and)
                          (VP (VBG reading)
                            (NP
                              (NP (NNS people) (NNS thoughts))
                              (CC and)
                              (NP (FW etc.)))))))))))))))
    (. .)))

nsubjpass(said-3, Gods-1)
xsubj(have-5, Gods-1)
auxpass(said-3, are-2)
root(ROOT-0, said-3)
aux(have-5, to-4)
xcomp(said-3, have-5)
amod(powers-7, supernatural-6)
dobj(have-5, powers-7)
prep_of(powers-7, everykind-9)
prepc_such_as(everykind-9, looking-12)
det(future-15, the-14)
prep_into(looking-12, future-15)
prepc_such_as(everykind-9, reading-17)
conj_and(looking-12, reading-17)
nn(thoughts-19, people-18)
dobj(reading-17, thoughts-19)
dobj(reading-17, etc.-21)
conj_and(thoughts-19, etc.-21)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN point))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (FW i))
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP (VB raise)
                    (PP (VBG regarding)
                      (NP
                        (NP (DT the) (NN genuity))
                        (PP (IN of)
                          (NP
                            (NP (NNP Jesus))
                            (VP (VBN professed)
                              (NP
                                (NP (NN love))
                                (PP (IN for)
                                  (NP (NN everyone)))))))))))))))))
    (. .)))

nsubj(point-4, Here-1)
cop(point-4, is-2)
det(point-4, a-3)
root(ROOT-0, point-4)
rel(wanted-7, which-5)
nsubj(wanted-7, i-6)
xsubj(raise-9, i-6)
rcmod(point-4, wanted-7)
aux(raise-9, to-8)
xcomp(wanted-7, raise-9)
det(genuity-12, the-11)
prep_regarding(raise-9, genuity-12)
prep_of(genuity-12, Jesus-14)
partmod(Jesus-14, professed-15)
dobj(professed-15, love-16)
prep_for(love-16, everyone-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP (VBP have)
          (NP (DT the) (NN power)
            (S
              (VP (TO to)
                (VP (VB see)
                  (S
                    (S
                      (UCP
                        (NP (DT the) (NN future))
                        (CC and)
                        (SBAR (IN if)
                          (S
                            (NP (PRP he))
                            (VP (VBP love)
                              (NP (PRP us)))))))
                    (SBARQ
                      (WHADVP (WRB why))
                      (SQ (VBD did)
                        (NP (PRP he))
                        (VP (VB create)
                          (NP (NNP Adam)
                            (CC and)
                            (NNP Mary))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (PRP he))
                              (VP (VBD knew)
                                (SBAR (IN that) (IN if)
                                  (S
                                    (NP (NNP Adam))
                                    (VP (VBD ate)
                                      (NP (DT the) (NN apple))
                                      (PP (IN from)
                                        (NP (DT the) (NN tree))))))))))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN betrayed)
          (NP (NN god)))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, God-2)
advcl(betrayed-38, have-3)
det(power-5, the-4)
dobj(have-3, power-5)
aux(see-7, to-6)
infmod(power-5, see-7)
det(future-9, the-8)
dep(see-7, future-9)
mark(love-13, if-11)
nsubj(love-13, he-12)
dep(see-7, love-13)
conj_and(future-9, love-13)
dobj(love-13, us-14)
advmod(create-18, why-15)
aux(create-18, did-16)
nsubj(create-18, he-17)
dep(future-9, create-18)
dobj(create-18, Adam-19)
dobj(create-18, Mary-21)
conj_and(Adam-19, Mary-21)
advmod(knew-24, when-22)
nsubj(knew-24, he-23)
advcl(create-18, knew-24)
complm(ate-28, that-25)
dep(ate-28, if-26)
nsubj(ate-28, Adam-27)
ccomp(knew-24, ate-28)
det(apple-30, the-29)
dobj(ate-28, apple-30)
det(tree-33, the-32)
prep_from(ate-28, tree-33)
nsubj(betrayed-38, he-35)
aux(betrayed-38, would-36)
aux(betrayed-38, have-37)
root(ROOT-0, betrayed-38)
dobj(betrayed-38, god-39)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP
          (VP (VBZ loves)
            (NP (PRP us)))
          (CC and)
          (VP (VBP have)
            (NP (DT the) (NN abilty)
              (S
                (VP (TO to)
                  (VP (VB see)
                    (NP (DT the) (NN future))))))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBD did)
      (NP (PRP he))
      (VP (VB create)
        (S
          (NP (PRP us))
          (NP
            (NP (NNS humans))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (VP (VBD knew)
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP (MD would)
                        (ADVP (RB eventually))
                        (VP
                          (VP (VB become)
                            (ADJP (JJ bad)))
                          (CC and)
                          (VP (VB punish)
                            (NP (DT those) (JJ bad) (NNS humans))
                            (PP (IN by)
                              (S
                                (VP (VBG flooding)
                                  (NP (DT the) (NN land)))))))))))))))))
    (. ?)))

mark(loves-3, If-1)
nsubj(loves-3, God-2)
nsubj(have-6, God-2)
advcl(create-17, loves-3)
dobj(loves-3, us-4)
conj_and(loves-3, have-6)
advcl(create-17, have-6)
det(abilty-8, the-7)
dobj(have-6, abilty-8)
aux(see-10, to-9)
infmod(abilty-8, see-10)
det(future-12, the-11)
dobj(see-10, future-12)
advmod(create-17, why-14)
aux(create-17, did-15)
nsubj(create-17, he-16)
root(ROOT-0, create-17)
nsubj(humans-19, us-18)
xcomp(create-17, humans-19)
tmod(knew-22, humans-19)
advmod(knew-22, when-20)
nsubj(knew-22, he-21)
dep(humans-19, knew-22)
complm(bad-28, that-23)
nsubj(bad-28, we-24)
nsubj(punish-30, we-24)
aux(bad-28, would-25)
advmod(bad-28, eventually-26)
cop(bad-28, become-27)
ccomp(knew-22, bad-28)
ccomp(knew-22, punish-30)
conj_and(bad-28, punish-30)
det(humans-33, those-31)
amod(humans-33, bad-32)
dobj(punish-30, humans-33)
prepc_by(punish-30, flooding-35)
det(land-37, the-36)
dobj(flooding-35, land-37)

(ROOT
  (SBAR (IN If)
    (S
      (NP (NNP God))
      (VP (VBP have)
        (NP (DT the) (NN ability)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (DT the) (NN future))
                (SBAR
                  (SBARQ
                    (WHADVP (WRB why))
                    (SQ (VBD did)
                      (NP (PRP he))
                      (VP (VB create)
                        (NP (NN lucifer))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP he))
                            (VP (VBD knew)
                              (SBAR (IN that)
                                (S
                                  (S
                                    (NP (JJ lucifer) (CD one) (NN day))
                                    (VP (MD will)
                                      (VP (VB betray)
                                        (NP (PRP him)))))
                                  (CC and)
                                  (S
                                    (NP (NN god))
                                    (VP (MD will)
                                      (VP (VB punish)
                                        (NP (PRP him))
                                        (PP (IN by)
                                          (S
                                            (VP (VBG banishing)
                                              (PP (TO to)
                                                (NP (NN hell))))))))))))))))
                    (. ?)))))))))))

mark(have-3, If-1)
nsubj(have-3, God-2)
root(ROOT-0, have-3)
det(ability-5, the-4)
dobj(have-3, ability-5)
aux(see-7, to-6)
infmod(ability-5, see-7)
det(future-9, the-8)
dobj(see-7, future-9)
advmod(create-13, why-10)
aux(create-13, did-11)
nsubj(create-13, he-12)
dep(see-7, create-13)
dobj(create-13, lucifer-14)
advmod(knew-17, when-15)
nsubj(knew-17, he-16)
advcl(create-13, knew-17)
complm(betray-23, that-18)
amod(day-21, lucifer-19)
num(day-21, one-20)
nsubj(betray-23, day-21)
aux(betray-23, will-22)
ccomp(knew-17, betray-23)
dobj(betray-23, him-24)
nsubj(punish-28, god-26)
aux(punish-28, will-27)
ccomp(knew-17, punish-28)
conj_and(betray-23, punish-28)
dobj(punish-28, him-29)
prepc_by(punish-28, banishing-31)
prep_to(banishing-31, hell-33)

(ROOT
  (SBARQ (CC And)
    (WHADVP (WRB why))
    (SQ (VBD did)
      (NP (NN god))
      (VP (VB put)
        (NP
          (NP (DT the) (NN tree))
          (PP (IN of)
            (ADJP (`` ``) (RB not) (JJ sure)))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBD called) (`` `)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN garden))
                          (PP (IN of)
                            (NP (NNP Eden)))))
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (NNP Adam)
                            (CC and)
                            (NNP Mary))
                          (VP (VBD lived)))))))))))))
    (. .)))

cc(put-5, And-1)
advmod(put-5, why-2)
aux(put-5, did-3)
nsubj(put-5, god-4)
root(ROOT-0, put-5)
det(tree-7, the-6)
dobj(put-5, tree-7)
nsubj(is-13, tree-7)
neg(sure-11, not-10)
prep_of(tree-7, sure-11)
rcmod(tree-7, is-13)
nsubj(called-15, it-14)
ccomp(is-13, called-15)
det(garden-19, the-18)
prep_in(called-15, garden-19)
prep_of(garden-19, Eden-21)
advmod(lived-26, where-22)
nsubj(lived-26, Adam-23)
conj_and(Adam-23, Mary-25)
nsubj(lived-26, Mary-25)
advcl(called-15, lived-26)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBZ owns)
          (NP (DT the) (NN power)
            (S
              (VP (TO to)
                (VP (VB create)
                  (NP (DT the) (NN universe))
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (VP (VBZ is)
                        (S
                          (NP (PRP he))
                          (ADJP (RB so) (JJ unwise))
                          (S
                            (VP (TO to)
                              (VP (VB put)
                                (NP
                                  (NP (NN something))
                                  (SBAR
                                    (WHNP (WDT that))
                                    (S
                                      (VP (MD would)
                                        (VP (VB cause)
                                          (S
                                            (NP (NNP Adam))
                                            (VP (TO to)
                                              (VP (VB become)
                                                (NP (DT a) (RB so))))))))))))))))))))))))
    (VP (VBD called)
      (NP (`` ``) (JJ normal) (`` `) (JJ human) (NN being)))
    (. ?)))

mark(owns-3, If-1)
nsubj(owns-3, he-2)
csubj(called-26, owns-3)
det(power-5, the-4)
dobj(owns-3, power-5)
aux(create-7, to-6)
infmod(power-5, create-7)
det(universe-9, the-8)
dobj(create-7, universe-9)
advmod(is-11, why-10)
advcl(create-7, is-11)
nsubj(put-16, he-12)
advmod(unwise-14, so-13)
dep(put-16, unwise-14)
aux(put-16, to-15)
xcomp(is-11, put-16)
dobj(put-16, something-17)
nsubj(cause-20, something-17)
aux(cause-20, would-19)
rcmod(something-17, cause-20)
nsubj(so-25, Adam-21)
aux(so-25, to-22)
cop(so-25, become-23)
det(so-25, a-24)
xcomp(cause-20, so-25)
root(ROOT-0, called-26)
amod(being-31, normal-28)
amod(being-31, human-30)
dobj(called-26, being-31)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN god))
        (VP (VBZ cares)
          (PP (IN for)
            (NP (NN everyone)))
          (, ,)
          (SBAR
            (WHADVP (WRB why))
            (S
              (VP (VBD did)
                (NP (PRP he))
                (PP (IN in)
                  (NP (DT the) (NN bible)))))))))
    (VP (VBP say)
      (SBAR (IN that)
        (S
          (NP (NNS animals))
          (VP (VBP are)
            (PP (IN for)
              (NP (NNS humans)))
            (S
              (VP (TO to)
                (VP
                  (VP (VB consume)
                    (PP (IN for)
                      (NP (NN food))))
                  (CC but)
                  (RB not)
                  (VP (VB kill)
                    (PP (IN for)
                      (NP (NN fun)))))))))))
    (. .)))

mark(cares-3, If-1)
nsubj(cares-3, god-2)
csubj(say-13, cares-3)
prep_for(cares-3, everyone-5)
advmod(did-8, why-7)
advcl(cares-3, did-8)
dobj(did-8, he-9)
det(bible-12, the-11)
prep_in(did-8, bible-12)
root(ROOT-0, say-13)
complm(are-16, that-14)
nsubj(are-16, animals-15)
xsubj(consume-20, animals-15)
ccomp(say-13, are-16)
prep_for(are-16, humans-18)
aux(consume-20, to-19)
xcomp(are-16, consume-20)
prep_for(consume-20, food-22)
xcomp(are-16, not-24)
conj_but(consume-20, not-24)
neg(consume-20, not-24)
dep(consume-20, kill-25)
prep_for(kill-25, fun-27)

(ROOT
  (S
    (S
      (ADVP (RB Indirectly))
      (NP (PRP he))
      (VP (VBZ is)
        (VP (VBG saying)
          (SBAR (IN that)
            (S
              (NP (NNS animals))
              (VP (VBP are)
                (NP
                  (NP (NN something))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD created)))))))))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD can)
        (VP (VB kill)
          (PP (IN for)
            (NP (PRP$ our) (JJ own) (NN advantage))))))
    (. .)))

advmod(saying-4, Indirectly-1)
nsubj(saying-4, he-2)
aux(saying-4, is-3)
root(ROOT-0, saying-4)
complm(something-8, that-5)
nsubj(something-8, animals-6)
cop(something-8, are-7)
ccomp(saying-4, something-8)
dobj(created-10, something-8)
nsubj(created-10, he-9)
rcmod(something-8, created-10)
nsubj(kill-14, we-12)
aux(kill-14, can-13)
conj_and(saying-4, kill-14)
poss(advantage-18, our-16)
amod(advantage-18, own-17)
prep_for(kill-14, advantage-18)

(ROOT
  (S (CC But)
    (ADVP (RB apparently))
    (NP (NNS animals))
    (VP (VBP are)
      (ADJP (JJ similar)
        (PP (TO to)
          (NP (PRP us))))
      (ADVP
        (NP (JJ human) (NNS beings))
        (RB too)))
    (. .)))

cc(similar-5, But-1)
advmod(similar-5, apparently-2)
nsubj(similar-5, animals-3)
cop(similar-5, are-4)
root(ROOT-0, similar-5)
prep_to(similar-5, us-7)
amod(beings-9, human-8)
npadvmod(too-10, beings-9)
advmod(similar-5, too-10)

(ROOT
  (S
    (S
      (NP (NNS Animals))
      (VP (VBP have)
        (NP
          (NP (NNS feelings))
          (PP (IN like)
            (NP (PRP us))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP feel)
        (NP (NN pain))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (NN chopper))
            (VP (VBZ is)
              (VP (VBN brought)
                (PRT (RP down))
                (PP (TO to)
                  (NP (PRP$ their) (NN neck)))))))))
    (. .)))

nsubj(have-2, Animals-1)
root(ROOT-0, have-2)
dobj(have-2, feelings-3)
prep_like(feelings-3, us-5)
nsubj(feel-8, they-7)
conj_and(have-2, feel-8)
dobj(feel-8, pain-9)
advmod(brought-14, when-10)
det(chopper-12, the-11)
nsubjpass(brought-14, chopper-12)
auxpass(brought-14, is-13)
advcl(feel-8, brought-14)
prt(brought-14, down-15)
poss(neck-18, their-17)
prep_to(brought-14, neck-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP (VBZ is)
          (ADJP (RB really) (JJ benevolant)
            (PP (TO to)
              (NP (DT all) (VBG living) (NNS things)))))))
    (NP (PRP he))
    (VP (MD could)
      (ADVP (RB just))
      (VP
        (VP (VB invoke)
          (NP (PRP$ his) (JJ magic) (NNS powers)))
        (CC and)
        (VP (VB let)
          (S
            (NP (DT the) (NNS animals))
            (VP (VB feel)
              (NP (DT no) (NN pain))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (VP (VBG being)
                      (VP (VBN slaughtererd)))))))))))
    (. .)))

mark(benevolant-5, If-1)
nsubj(benevolant-5, God-2)
cop(benevolant-5, is-3)
advmod(benevolant-5, really-4)
advcl(invoke-13, benevolant-5)
det(things-9, all-7)
amod(things-9, living-8)
prep_to(benevolant-5, things-9)
nsubj(invoke-13, he-10)
nsubj(let-18, he-10)
aux(invoke-13, could-11)
advmod(invoke-13, just-12)
root(ROOT-0, invoke-13)
poss(powers-16, his-14)
amod(powers-16, magic-15)
dobj(invoke-13, powers-16)
conj_and(invoke-13, let-18)
det(animals-20, the-19)
nsubj(feel-21, animals-20)
ccomp(let-18, feel-21)
det(pain-23, no-22)
dobj(feel-21, pain-23)
advmod(slaughtererd-28, when-24)
nsubjpass(slaughtererd-28, they-25)
aux(slaughtererd-28, are-26)
auxpass(slaughtererd-28, being-27)
advcl(feel-21, slaughtererd-28)

