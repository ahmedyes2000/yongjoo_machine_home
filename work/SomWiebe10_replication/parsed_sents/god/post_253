(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN existence))
      (PP (IN of)
        (NP (DT a) (NN god))))
    (VP (MD would)
      (VP (VB invalidate)
        (NP
          (NP (DT the)
            (ADJP (RBS most) (JJ essential))
            (NNS laws))
          (PP (IN of)
            (NP (NN science))))))
    (. ...)))

det(existence-3, The-2)
nsubj(invalidate-8, existence-3)
det(god-6, a-5)
prep_of(existence-3, god-6)
aux(invalidate-8, would-7)
root(ROOT-0, invalidate-8)
det(laws-12, the-9)
advmod(essential-11, most-10)
amod(laws-12, essential-11)
dobj(invalidate-8, laws-12)
prep_of(laws-12, science-14)

(ROOT
  (S ('' '')
    (NP (DT An) (JJ interesting) (NN argument))
    (VP (VBZ indeed))
    (. .)))

det(argument-4, An-2)
amod(argument-4, interesting-3)
nsubj(indeed-5, argument-4)
root(ROOT-0, indeed-5)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ does)
      (NP (NN science))
      (VP (VB have)
        (NP (NNS laws))))
    (. ?)))

advmod(have-4, Why-1)
aux(have-4, does-2)
nsubj(have-4, science-3)
root(ROOT-0, have-4)
dobj(have-4, laws-5)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB accept)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT a) (JJ natural) (NN order))
                (PRN (-LRB- -LRB-)
                  (NP (NN design) (. ?))
                  (-RRB- -RRB-))))))))
    (. .)))

advmod(accept-4, Why-1)
aux(accept-4, do-2)
nsubj(accept-4, we-3)
root(ROOT-0, accept-4)
complm(is-7, that-5)
expl(is-7, there-6)
ccomp(accept-4, is-7)
det(order-10, a-8)
amod(order-10, natural-9)
nsubj(is-7, order-10)
appos(order-10, design-12)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (NNS is)
      (NP (PRP it))
      (NP
        (NP (DT an) (JJ accepted) (NN proposition))
        (SBAR (IN that)
          (S
            (NP (DT those) (NNS laws))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN depended)
                  (PP (RB upon)))))))))
    (. ?)))

advmod(is-2, Why-1)
root(ROOT-0, is-2)
dep(is-2, it-3)
det(proposition-6, an-4)
amod(proposition-6, accepted-5)
dep(is-2, proposition-6)
complm(depended-12, that-7)
det(laws-9, those-8)
nsubjpass(depended-12, laws-9)
aux(depended-12, can-10)
auxpass(depended-12, be-11)
dep(proposition-6, depended-12)
prep(depended-12, upon-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB believe)
                (PP (IN in)
                  (NP (DT a) (NN designer)))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB expect)
        (NP (DT a) (NN design))))
    (. .)))

mark(were-3, If-1)
nsubj(were-3, I-2)
xsubj(believe-5, I-2)
advcl(expect-12, were-3)
aux(believe-5, to-4)
xcomp(were-3, believe-5)
det(designer-8, a-7)
prep_in(believe-5, designer-8)
nsubj(expect-12, I-10)
aux(expect-12, would-11)
root(ROOT-0, expect-12)
det(design-14, a-13)
dobj(expect-12, design-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB expect)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN universe))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD created)))))
            (VP (MD would)
              (VP (VB have)
                (NP
                  (NP (NN evidence))
                  (PP (IN of)
                    (NP (PRP$ his) (NN design))))))))))
    (. .)))

nsubj(expect-3, I-1)
aux(expect-3, would-2)
root(ROOT-0, expect-3)
complm(have-10, that-4)
det(universe-6, the-5)
dobj(created-8, universe-6)
nsubj(have-10, universe-6)
nsubj(created-8, he-7)
rcmod(universe-6, created-8)
aux(have-10, would-9)
ccomp(expect-3, have-10)
dobj(have-10, evidence-11)
poss(design-14, his-13)
prep_of(evidence-11, design-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP
                  (NP (PRP$ your) (NN side))
                  (PP (IN of)
                    (NP (DT the) (NN argument))))))))))
    (NP (PRP I))
    (VP (MD would)
      (VP (VB wonder)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (DT any) (NNS laws)
              (CC or)
              (NNS formulas))
            (VP (MD would)
              (VP (VB exist)
                (ADVP (IN at) (DT all))))))))
    (. ?)))

mark(were-3, If-1)
nsubj(were-3, I-2)
xsubj(take-5, I-2)
advcl(wonder-13, were-3)
aux(take-5, to-4)
xcomp(were-3, take-5)
poss(side-7, your-6)
dobj(take-5, side-7)
det(argument-10, the-9)
prep_of(side-7, argument-10)
nsubj(wonder-13, I-11)
aux(wonder-13, would-12)
root(ROOT-0, wonder-13)
advmod(exist-20, why-14)
det(laws-16, any-15)
nsubj(exist-20, laws-16)
conj_or(laws-16, formulas-18)
nsubj(exist-20, formulas-18)
aux(exist-20, would-19)
advcl(wonder-13, exist-20)
advmod(exist-20, at-21)
pobj(at-21, all-22)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (VP (VBG speaking)
        (PRT (RP out))
        (PP (IN of)
          (NP
            (NP (DT both) (NNS sides))
            (PP (IN of)
              (NP (PRP$ your) (NN mouth)))))
        (S
          (VP
            (VP (VBG arguing)
              (PP (IN from)
                (NP
                  (NP (DT the) (NN perspective))
                  (PP (IN of)
                    (NP
                      (NP (DT a)
                        (ADJP (RB highly) (JJ ordered))
                        (NN universe))
                      (PP (RB out) (IN of)
                        (NP (DT the) (CD one) (NN side))))))))
            (, ,)
            (CC and)
            (VP (VBG denying)
              (NP
                (NP (DT the) (NN source))
                (PP (IN of)
                  (NP
                    (NP (DT that) (NN order))
                    (PP (RB out) (IN of)
                      (NP (DT the) (JJ other)))))))))))
    (. .)))

nsubj(speaking-3, You-1)
aux(speaking-3, are-2)
root(ROOT-0, speaking-3)
det(sides-7, both-6)
prep_out_of(speaking-3, sides-7)
poss(mouth-10, your-9)
prep_of(sides-7, mouth-10)
ccomp(speaking-3, arguing-11)
det(perspective-14, the-13)
prep_from(arguing-11, perspective-14)
det(universe-19, a-16)
advmod(ordered-18, highly-17)
amod(universe-19, ordered-18)
prep_of(perspective-14, universe-19)
det(side-24, the-22)
num(side-24, one-23)
prep_out_of(universe-19, side-24)
ccomp(speaking-3, denying-27)
conj_and(arguing-11, denying-27)
det(source-29, the-28)
dobj(denying-27, source-29)
det(order-32, that-31)
prep_of(source-29, order-32)
det(other-36, the-35)
prep_out_of(order-32, other-36)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN universe))
        (VP (VBZ has)
          (NP
            (NP (NNS laws))
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (VBP say))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (MD must)
      (VP (VB be)
        (ADJP (RB intellectually) (JJ honest) (RB enough))
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (DT those) (NNS laws))
                  (VP (VBD had)
                    (S
                      (VP (TO to)
                        (VP (VB come)
                          (PP (IN from)
                            (NP (RB somewhere))))))))))))))
    (. .)))

mark(has-4, If-1)
det(universe-3, the-2)
nsubj(has-4, universe-3)
advcl(honest-15, has-4)
dobj(has-4, laws-5)
dobj(say-8, laws-5)
mark(say-8, as-6)
nsubj(say-8, you-7)
dep(laws-5, say-8)
advmod(honest-15, then-10)
nsubj(honest-15, you-11)
aux(honest-15, must-12)
cop(honest-15, be-13)
advmod(honest-15, intellectually-14)
root(ROOT-0, honest-15)
advmod(honest-15, enough-16)
aux(say-18, to-17)
xcomp(honest-15, say-18)
complm(had-22, that-19)
det(laws-21, those-20)
nsubj(had-22, laws-21)
ccomp(say-18, had-22)
aux(come-24, to-23)
xcomp(had-22, come-24)
prep(come-24, from-25)
pobj(from-25, somewhere-26)

