(ROOT
  (S
    (NP (NNP Objection) (NN number) (CD 1))
    (: :)
    (VP (VBD Did) (RB n't)
      (VP (VB say)
        (S
          (S
            (NP (PRP you))
            (VP (MD could) (RB n't)
              (VP (VB be)
                (ADJP (JJ good))
                (SBAR (RB only) (IN that)
                  (S
                    (NP (PRP you))
                    (VP (MD ca) (RB n't)
                      (VP (VB account)
                        (PP (IN for)
                          (NP (PRP it))))))))))
          (, ,)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP (DT the) (NN grounding) (NN question)))))))
    (. .)))

nn(number-2, Objection-1)
nsubj(say-7, number-2)
num(number-2, 1-3)
aux(say-7, Did-5)
neg(say-7, n't-6)
root(ROOT-0, say-7)
nsubj(good-12, you-8)
aux(good-12, could-9)
neg(good-12, n't-10)
cop(good-12, be-11)
dep(say-7, good-12)
advmod(account-18, only-13)
dep(account-18, that-14)
nsubj(account-18, you-15)
aux(account-18, ca-16)
neg(account-18, n't-17)
ccomp(good-12, account-18)
prep_for(account-18, it-20)
nsubj(question-26, it-22)
cop(question-26, 's-23)
det(question-26, the-24)
nn(question-26, grounding-25)
dep(good-12, question-26)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB account)
        (PP (IN for)
          (ADJP (JJ good)
            (CC or)
            (JJ evil)))
        (PP (IN in)
          (NP (DT a) (RB purely) (JJ naturalistic) (NN world)))))
    (. .)))

nsubj(account-4, You-1)
aux(account-4, ca-2)
neg(account-4, n't-3)
root(ROOT-0, account-4)
prep_for(account-4, good-6)
prep_for(account-4, evil-8)
conj_or(good-6, evil-8)
det(world-13, a-10)
advmod(world-13, purely-11)
amod(world-13, naturalistic-12)
prep_in(account-4, world-13)

(ROOT
  (S
    (S
      (NP (NNS Ideas))
      (VP (VBP have)
        (NP (NNS consequences))))
    (CC and)
    (S
      (NP (NNP Darwin) (POS 's))
      (VP (VBD produced)
        (NP (DT the) (JJ bloodiest) (NN century))
        (PP (IN in)
          (NP (JJ human) (NN history)))))
    (. .)))

nsubj(have-2, Ideas-1)
root(ROOT-0, have-2)
dobj(have-2, consequences-3)
nsubj(produced-7, Darwin-5)
possessive(Darwin-5, 's-6)
conj_and(have-2, produced-7)
det(century-10, the-8)
amod(century-10, bloodiest-9)
dobj(produced-7, century-10)
amod(history-13, human-12)
prep_in(produced-7, history-13)

(ROOT
  (S (CC And)
    (NP
      (NP (NNP Darwin) (POS 's))
      (NN theory))
    (VP (VBD was)
      (ADJP (JJ atheistic)
        (PP (TO to)
          (NP (DT the) (NN core)))))
    (. .)))

cc(atheistic-6, And-1)
poss(theory-4, Darwin-2)
nsubj(atheistic-6, theory-4)
cop(atheistic-6, was-5)
root(ROOT-0, atheistic-6)
det(core-9, the-8)
prep_to(atheistic-6, core-9)

(ROOT
  (FRAG
    (NP (CD Objection) (CD 4))
    (: :)
    (S
      (S
        (ADVP (RB Again))
        (, ,)
        (NP (PRP you))
        (ADVP (RBS most) (RB certainly))
        (VP (MD can)))
      (, ,)
      (CC but)
      (S
        (NP (PRP you))
        (VP (MD ca) (RB n't)
          (VP (VB ground)
            (NP (PRP it))))))
    (. .)))

num(4-2, Objection-1)
root(ROOT-0, 4-2)
advmod(can-9, Again-4)
nsubj(can-9, you-6)
advmod(certainly-8, most-7)
advmod(can-9, certainly-8)
dep(4-2, can-9)
nsubj(ground-15, you-12)
aux(ground-15, ca-13)
neg(ground-15, n't-14)
dep(4-2, ground-15)
conj_but(can-9, ground-15)
dobj(ground-15, it-16)

(ROOT
  (X
    (NP (NN Objection) (CD 5))
    (: :)
    (FRAG
      (VP
        (VP (VB See)
          (NP (DT the) (NN answer))
          (PP (TO to)
            (NP
              (QP (CD objection) (CD 3)))))
        (CC and)
        (VP (VB go)
          (VP (VB look)
            (PRT (RP up))
            (NP
              (NP (DT the) (JJS greatest) (NN mass) (NNS murderers))
              (PP (IN in)
                (NP
                  (NP (DT the) (NNP Guinness) (NNP Book))
                  (PP (IN of)
                    (NP (NNP World) (NNPS Records))))))))))
    (. .)))

root(ROOT-0, Objection-1)
num(Objection-1, 5-2)
dep(Objection-1, See-4)
det(answer-6, the-5)
dobj(See-4, answer-6)
number(3-9, objection-8)
prep_to(See-4, 3-9)
dep(Objection-1, go-11)
conj_and(See-4, go-11)
xcomp(go-11, look-12)
prt(look-12, up-13)
det(murderers-17, the-14)
amod(murderers-17, greatest-15)
nn(murderers-17, mass-16)
dobj(look-12, murderers-17)
det(Book-21, the-19)
nn(Book-21, Guinness-20)
prep_in(murderers-17, Book-21)
nn(Records-24, World-23)
prep_of(Book-21, Records-24)

(ROOT
  (FRAG
    (NP (CD Objection) (CD 6))
    (: :)
    (S
      (NP (DT The) (NN evidence))
      (VP (VBZ does) (RB n't)
        (VP (VB support)
          (NP (PRP$ your) (NN assertion)))))
    (. .)))

num(6-2, Objection-1)
root(ROOT-0, 6-2)
det(evidence-5, The-4)
nsubj(support-8, evidence-5)
aux(support-8, does-6)
neg(support-8, n't-7)
dep(6-2, support-8)
poss(assertion-10, your-9)
dobj(support-8, assertion-10)

(ROOT
  (FRAG
    (NP (CD Objection) (CD 7))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG driving)
          (PP (IN at)
            (NP (DT the) (NN point)))
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (ADVP (RB even))
              (VP (VBP violate)
                (NP (DT each) (JJ other))))))))
    (. .)))

num(7-2, Objection-1)
root(ROOT-0, 7-2)
nsubj(driving-6, I-4)
aux(driving-6, was-5)
dep(7-2, driving-6)
det(point-9, the-8)
prep_at(driving-6, point-9)
complm(violate-13, that-10)
nsubj(violate-13, we-11)
advmod(violate-13, even-12)
ccomp(driving-6, violate-13)
det(other-15, each-14)
dobj(violate-13, other-15)

(ROOT
  (S
    (SBAR (IN that)
      (S
        (NP (PRP we))
        (VP (VBP do)
          (NP (PRP it))
          (ADVP (IN at) (DT all)))))
    (VP (VBZ is)
      (NP (DT the) (JJR greater) (NN problem)))
    (. .)))

dep(do-3, that-1)
nsubj(do-3, we-2)
csubj(problem-10, do-3)
dobj(do-3, it-4)
advmod(do-3, at-5)
pobj(at-5, all-6)
cop(problem-10, is-7)
det(problem-10, the-8)
amod(problem-10, greater-9)
root(ROOT-0, problem-10)

(ROOT
  (S
    (S (CC But)
      (ADVP (RB again))
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (VB account)
          (PP (IN for)
            (ADJP (JJ Good)
              (CC or)
              (JJ evil))))))
    (, ,)
    (S
      (NP (DT Those))
      (VP (VBP are)
        (NP (JJ moral) (NNS judgments))))
    (CC and)
    (S
      (S
        (VP (VBG making)
          (NP (JJ moral) (NNS judgments))))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT a) (NN characteristic))
          (PP (IN of)
            (NP (NN matter))))))
    (. .)))

advmod(account-6, again-2)
nsubj(account-6, you-3)
aux(account-6, ca-4)
neg(account-6, n't-5)
root(ROOT-0, account-6)
prep_for(account-6, Good-8)
prep_for(account-6, evil-10)
conj_or(Good-8, evil-10)
nsubj(judgments-15, Those-12)
cop(judgments-15, are-13)
amod(judgments-15, moral-14)
conj_but(account-6, judgments-15)
csubj(characteristic-23, making-17)
amod(judgments-19, moral-18)
dobj(making-17, judgments-19)
cop(characteristic-23, is-20)
neg(characteristic-23, not-21)
det(characteristic-23, a-22)
conj_and(account-6, characteristic-23)
prep_of(characteristic-23, matter-25)

(ROOT
  (S
    (S
      (NP (NNP Objection) (NNPS 8If))
      (ADVP (RB there))
      (VP (VBZ is)
        (NP (DT a) (NNP God))))
    (, ,) (RB then)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (NP (NN hope))))
    (. .)))

nn(8If-2, Objection-1)
nsubj(God-6, 8If-2)
advmod(God-6, there-3)
cop(God-6, is-4)
det(God-6, a-5)
root(ROOT-0, God-6)
advmod(God-6, then-8)
nsubj(have-10, we-9)
ccomp(God-6, have-10)
dobj(have-10, hope-11)

(ROOT
  (S
    (PP (IN Because)
      (SBAR
        (WHADVP (WRB when))
        (S
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBN been)
                (VP (VBN caught)
                  (PP (IN in)
                    (NP (DT the) (NN rip) (NN tide)))))))
          (CC and)
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (VP (VBG drowning)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB save)
        (NP (PRP yourself))))
    (. .)))

dep(save-19, Because-1)
advmod(caught-6, when-2)
nsubjpass(caught-6, you-3)
aux(caught-6, have-4)
auxpass(caught-6, been-5)
pcomp(Because-1, caught-6)
det(tide-10, the-8)
nn(tide-10, rip-9)
prep_in(caught-6, tide-10)
nsubj(drowning-14, you-12)
aux(drowning-14, 're-13)
pcomp(Because-1, drowning-14)
conj_and(caught-6, drowning-14)
nsubj(save-19, you-16)
aux(save-19, do-17)
neg(save-19, n't-18)
root(ROOT-0, save-19)
dobj(save-19, yourself-20)

(ROOT
  (S
    (S
      (NP (DT Those))
      (VP (VBP are)
        (NP (JJ moral) (NNS judgments))))
    (CC and)
    (S
      (S
        (VP (VBG making)
          (NP (JJ moral) (NNS judgments))))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT a) (NN characteristic))
          (PP (IN of)
            (NP (NN matter))))))
    (. .)))

nsubj(judgments-4, Those-1)
cop(judgments-4, are-2)
amod(judgments-4, moral-3)
root(ROOT-0, judgments-4)
csubj(characteristic-12, making-6)
amod(judgments-8, moral-7)
dobj(making-6, judgments-8)
cop(characteristic-12, is-9)
neg(characteristic-12, not-10)
det(characteristic-12, a-11)
conj_and(judgments-4, characteristic-12)
prep_of(characteristic-12, matter-14)

(ROOT
  (S (CC And)
    (SBAR (IN unless)
      (S
        (NP (NN someone))
        (VP (VBZ jumps)
          (PP (IN into)
            (S
              (VP (VBG rescue)
                (NP (PRP you))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (RB as) (JJ good)
        (PP (IN as)
          (ADJP (JJ dead)))))
    (. .)))

cc(good-12, And-1)
mark(jumps-4, unless-2)
nsubj(jumps-4, someone-3)
advcl(good-12, jumps-4)
prepc_into(jumps-4, rescue-6)
dobj(rescue-6, you-7)
nsubj(good-12, you-9)
cop(good-12, are-10)
advmod(good-12, as-11)
root(ROOT-0, good-12)
prep_as(good-12, dead-14)

(ROOT
  (S
    (PP (IN In)
      (NP (NN atheism)))
    (PRN (, ,)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT no)
              (ADJP (JJ lifeguard)
                (CC and)
                (DT no))
              (NN one))
            (PP (IN on)
              (NP (NN shore))))))
      (, ,))
    (NP (PRP you))
    (VP (VBP are) (RB all)
      (ADJP (RB alone)))
    (. .)))

prep_in(are-15, atheism-2)
expl(is-5, there-4)
parataxis(are-15, is-5)
det(one-10, no-6)
amod(one-10, lifeguard-7)
conj_and(lifeguard-7, no-9)
amod(one-10, no-9)
nsubj(is-5, one-10)
prep_on(one-10, shore-12)
nsubj(are-15, you-14)
root(ROOT-0, are-15)
advmod(are-15, all-16)
acomp(are-15, alone-17)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (NNP Christianity)))
      (S
        (NP (DT the) (NN lifeguard))
        (VP (VBZ is)
          (PP (IN on)
            (NP (NN duty)))))
      (CC and)
      (S
        (NP (PRP He))
        (VP (VBZ is)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB save))))))))
    (CC and)
    (S
      (NP (PRP He))
      (VP (VBZ does)))
    (. .)))

prep_in(is-5, Christianity-2)
det(lifeguard-4, the-3)
nsubj(is-5, lifeguard-4)
root(ROOT-0, is-5)
prep_on(is-5, duty-7)
nsubj(able-11, He-9)
cop(able-11, is-10)
conj_and(is-5, able-11)
aux(save-13, to-12)
xcomp(able-11, save-13)
nsubj(does-16, He-15)
conj_and(is-5, does-16)

(ROOT
  (SBARQ
    (WHADJP (WRB How) (JJ differently))
    (SQ (MD will)
      (NP (PRP you))
      (VP (VB live)
        (NP (PRP$ your) (NN life))
        (SBAR (IN once)
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBN been)
                (VP (VBN taken)
                  (PRT (RP out))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN mouth))
                      (PP (IN of)
                        (NP (NN death)))))
                  (SBAR (IN as)
                    (S
                      (NP (PRP it))
                      (VP (VBN swallowed)
                        (NP (PRP you))))))))))))
    (. ?)))

advmod(differently-2, How-1)
dep(live-5, differently-2)
aux(live-5, will-3)
nsubj(live-5, you-4)
root(ROOT-0, live-5)
poss(life-7, your-6)
dobj(live-5, life-7)
mark(taken-12, once-8)
nsubjpass(taken-12, you-9)
aux(taken-12, have-10)
auxpass(taken-12, been-11)
advcl(live-5, taken-12)
det(mouth-16, the-15)
prep_out_of(taken-12, mouth-16)
prep_of(mouth-16, death-18)
mark(swallowed-21, as-19)
nsubj(swallowed-21, it-20)
advcl(taken-12, swallowed-21)
dobj(swallowed-21, you-22)

(ROOT
  (SBARQ
    (WHPP (IN In)
      (WHNP (WP what)))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB have)
        (NP (NN hope))))
    (. ?)))

prep_in(have-5, what-2)
aux(have-5, do-3)
nsubj(have-5, you-4)
root(ROOT-0, have-5)
dobj(have-5, hope-6)

(ROOT
  (S
    (FRAG (CC and)
      (RB not)
      (NP (DT the) (JJ wishful) (NN thinking) (NN kind)))
    (, ,)
    (NP (DT that))
    (VP (VBZ does)
      (S
        (NP (DT no) (NN one))
        (ADJP (DT any) (JJ good))))
    (. .)))

dep(not-2, and-1)
dep(does-9, not-2)
det(kind-6, the-3)
amod(kind-6, wishful-4)
nn(kind-6, thinking-5)
dep(not-2, kind-6)
nsubj(does-9, that-8)
root(ROOT-0, does-9)
det(one-11, no-10)
nsubj(good-13, one-11)
dep(good-13, any-12)
xcomp(does-9, good-13)

(ROOT
  (NP
    (NP
      (NP (DT The)
        (ADJP (JJ confident) (JJ certain))
        (NN kind))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD can)
            (VP (VB stand)
              (PRT (RP on)))))))
    (. .)))

det(kind-4, The-1)
amod(certain-3, confident-2)
amod(kind-4, certain-3)
root(ROOT-0, kind-4)
dobj(stand-8, kind-4)
complm(stand-8, that-5)
nsubj(stand-8, you-6)
aux(stand-8, can-7)
dep(kind-4, stand-8)
prt(stand-8, on-9)

(ROOT
  (FRAG
    (PP (IN About)
      (S
        (VP (VBG crossing)
          (NP (NNS fingers)))))
    (. .)))

root(ROOT-0, About-1)
pcomp(About-1, crossing-2)
dobj(crossing-2, fingers-3)

(ROOT
  (S
    (VP (VB Take)
      (NP (DT the) (NN time)
        (S
          (VP (TO to)
            (VP (VB read)
              (NP
                (NP (NNP Pascal) (POS 's))
                (NN Wager)))))))
    (. .)))

root(ROOT-0, Take-1)
det(time-3, the-2)
dobj(Take-1, time-3)
aux(read-5, to-4)
infmod(time-3, read-5)
poss(Wager-8, Pascal-6)
dobj(read-5, Wager-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (NP
        (NP (DT the) (NN way))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD characterized)
              (SBAR
                (S
                  (NP (NN atheism))
                  (VP (VBZ is)
                    (ADJP (RB pretty) (JJ accurate))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
det(way-4, the-3)
dobj(think-2, way-4)
nsubj(characterized-6, I-5)
rcmod(way-4, characterized-6)
nsubj(accurate-10, atheism-7)
cop(accurate-10, is-8)
advmod(accurate-10, pretty-9)
ccomp(characterized-6, accurate-10)

(ROOT
  (S
    (NP (DT The) (JJ smart) (NN money))
    (VP (VBZ is)
      (PP (IN on)
        (NP (NNP Jesus))))
    (. .)))

det(money-3, The-1)
amod(money-3, smart-2)
nsubj(is-4, money-3)
root(ROOT-0, is-4)
prep_on(is-4, Jesus-6)

(ROOT
  (FRAG
    (ADVP (RB Hence))
    (NP (DT the) (NN saying))
    (. .)))

dep(saying-3, Hence-1)
det(saying-3, the-2)
root(ROOT-0, saying-3)

(ROOT
  (NP
    (NP (NNP Objection) (CD 9))
    (: :)
    (S
      (NP (PRP You))
      (VP
        (VP (VB presuppose)
          (NP
            (NP (DT the) (NN descent))
            (PP (IN of)
              (NP (NN Man)))))
        (CC and)
        (VP
          (ADVP (RB then))
          (VB use)
          (NP (DT that) (NN paradigm)
            (S
              (VP (TO to)
                (VP (VB interpret)
                  (NP (DT the) (NNS facts)))))))))
    (. .)))

root(ROOT-0, Objection-1)
num(Objection-1, 9-2)
nsubj(presuppose-5, You-4)
nsubj(use-12, You-4)
dep(Objection-1, presuppose-5)
det(descent-7, the-6)
dobj(presuppose-5, descent-7)
prep_of(descent-7, Man-9)
advmod(use-12, then-11)
dep(Objection-1, use-12)
conj_and(presuppose-5, use-12)
det(paradigm-14, that-13)
dobj(use-12, paradigm-14)
aux(interpret-16, to-15)
infmod(paradigm-14, interpret-16)
det(facts-18, the-17)
dobj(interpret-16, facts-18)

(ROOT
  (S
    (NP (NNP Might) (NNP I))
    (VP (VBP suggest)
      (SBAR
        (S
          (NP (EX there))
          (VP (MD might)
            (VP (VB be)
              (NP (DT another) (NN way)
                (S
                  (VP (TO to)
                    (VP (VB account)
                      (PP (IN for)
                        (NP (NN religion))))))))))))
    (. .)))

nn(I-2, Might-1)
nsubj(suggest-3, I-2)
root(ROOT-0, suggest-3)
expl(way-8, there-4)
aux(way-8, might-5)
cop(way-8, be-6)
det(way-8, another-7)
ccomp(suggest-3, way-8)
aux(account-10, to-9)
infmod(way-8, account-10)
prep_for(account-10, religion-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NN trouble))
      (PP (IN with)
        (NP (PRP$ your) (NN explanation))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP
            (VP (VBZ is)
              (ADJP (RB far)
                (PP (TO to)
                  (ADJP (JJ simple)))))
            (CC and)
            (VP (VBZ fails)
              (S
                (VP (TO to)
                  (VP (VB account)
                    (PP (IN for)
                      (NP
                        (NP (DT a) (JJ great) (NN deal))
                        (PP (IN of)
                          (NP
                            (NP (NNS factors))
                            (: ;)
                            (PP (JJ such) (IN as)
                              (NP
                                (NP (DT the) (NN reality))
                                (SBAR (IN that)
                                  (S
                                    (NP (NNS men))
                                    (VP (VBP do) (RB n't)
                                      (NP
                                        (NP (NN event) (NNS things))
                                        (PP (RB far) (IN for)
                                          (ADJP (JJ terrible)
                                            (PP (IN than)
                                              (SBAR
                                                (WHNP (WP what))
                                                (S
                                                  (NP (PRP they))
                                                  (VP (VBP know)))))))))))))))))))))))))
    (. .)))

det(trouble-2, The-1)
nsubj(is-6, trouble-2)
poss(explanation-5, your-4)
prep_with(trouble-2, explanation-5)
root(ROOT-0, is-6)
complm(far-10, that-7)
nsubj(far-10, it-8)
nsubj(fails-14, it-8)
xsubj(account-16, it-8)
cop(far-10, is-9)
ccomp(is-6, far-10)
prep_to(far-10, simple-12)
ccomp(is-6, fails-14)
conj_and(far-10, fails-14)
aux(account-16, to-15)
xcomp(fails-14, account-16)
det(deal-20, a-18)
amod(deal-20, great-19)
prep_for(account-16, deal-20)
prep_of(deal-20, factors-22)
det(reality-27, the-26)
prep_such_as(factors-22, reality-27)
complm(do-30, that-28)
nsubj(do-30, men-29)
dep(reality-27, do-30)
neg(do-30, n't-31)
nn(things-33, event-32)
dobj(do-30, things-33)
advmod(things-33, far-34)
prep_for(things-33, terrible-36)
dobj(know-40, what-38)
nsubj(know-40, they-39)
prepc_than(terrible-36, know-40)

(ROOT
  (S
    (S
      (NP (DT The) (NN idea))
      (VP (VBZ is)
        (ADVP (RB always))
        (S
          (VP (TO to)
            (VP (VB appease)
              (NP
                (NP (DT the) (NNS gods))
                (, ,)
                (NP
                  (NP (NN aka) (NNS forces))
                  (PP (IN of)
                    (NP (NN nature))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB make)
        (NP (NN something))
        (ADVP (RP up)
          (ADJP (RB vastly) (JJ superior)
            (PP (TO to)
              (NP (DT the) (JJ natural) (NN world)))))))
    (. .)))

det(idea-2, The-1)
nsubj(is-3, idea-2)
xsubj(appease-6, idea-2)
ccomp(make-18, is-3)
advmod(is-3, always-4)
aux(appease-6, to-5)
xcomp(is-3, appease-6)
det(gods-8, the-7)
dobj(appease-6, gods-8)
nn(forces-11, aka-10)
appos(gods-8, forces-11)
prep_of(forces-11, nature-13)
nsubj(make-18, you-15)
aux(make-18, do-16)
neg(make-18, n't-17)
root(ROOT-0, make-18)
dobj(make-18, something-19)
dep(superior-22, up-20)
advmod(superior-22, vastly-21)
advmod(make-18, superior-22)
det(world-26, the-24)
amod(world-26, natural-25)
prep_to(superior-22, world-26)

(ROOT
  (S (CC And)
    (ADVP (RB again))
    (NP (PRP you))
    (VP (VBP mis-characterize)
      (NP (NN history)))
    (. .)))

cc(mis-characterize-4, And-1)
advmod(mis-characterize-4, again-2)
nsubj(mis-characterize-4, you-3)
root(ROOT-0, mis-characterize-4)
dobj(mis-characterize-4, history-5)

(ROOT
  (S
    (FRAG
      (ADJP (JJ dumb)
        (PP (IN as)
          (NP
            (NP (DT a) (NN box))
            (PP (IN of)
              (NP (NN rocksObjection) (CD 2)))))))
    (: :)
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP you))
          (VP (VBP make)
            (NP
              (NP (NN something))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADVP (RB usually))
                    (PP (IN for)
                      (NP (DT a) (NN purpose))))))))))
      (S
        (NP (PRP you))
        (VP (VBP have)
          (VP
            (PP (IN in)
              (NP (NN mind))))))
      (, ,)
      (S
        (SBAR (RB even) (IN if)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADVP (RB just))
              (S
                (VP (TO to)
                  (VP (VB amuse)
                    (NP (PRP yourself))))))))
        (, ,)
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT a) (NN reason))
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP (PRP you))
                (VP (VBP do)
                  (NP (PRP it)))))))))
    (. .)))

dep(in-21, dumb-1)
det(box-4, a-3)
prep_as(dumb-1, box-4)
prep_of(box-4, rocksObjection-6)
num(rocksObjection-6, 2-7)
advmod(make-11, When-9)
nsubj(make-11, you-10)
advcl(in-21, make-11)
dobj(make-11, something-12)
nsubj('s-14, it-13)
rcmod(something-12, 's-14)
advmod('s-14, usually-15)
det(purpose-18, a-17)
prep_for('s-14, purpose-18)
nsubj(in-21, you-19)
aux(in-21, have-20)
root(ROOT-0, in-21)
pobj(in-21, mind-22)
advmod('s-27, even-24)
dep('s-27, if-25)
nsubj('s-27, it-26)
xsubj(amuse-30, it-26)
advcl(is-34, 's-27)
advmod('s-27, just-28)
aux(amuse-30, to-29)
xcomp('s-27, amuse-30)
dobj(amuse-30, yourself-31)
expl(is-34, there-33)
dep(in-21, is-34)
det(reason-36, a-35)
nsubj(is-34, reason-36)
advmod(do-39, why-37)
nsubj(do-39, you-38)
rcmod(reason-36, do-39)
dobj(do-39, it-40)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP Intelligent) (NNP Design))
        (VP (VBZ is)
          (ADJP (JJ correct)))))
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ wise)
          (S
            (VP (TO to)
              (VP (VB find)
                (PRT (RP out))
                (NP
                  (SBAR
                    (WHPP (IN for)
                      (WHNP (WDT what) (NN purpose)))
                    (S
                      (NP (PRP we))
                      (VP (VBD were)
                        (VP (VBN createdObjection)
                          (NP (CD 3))))))
                  (: :)
                  (NP
                    (NP (NNP Explain))
                    (PP (TO to)
                      (NP (PRP me)))))))))
        (SBAR
          (ADVP (RB then))
          (WHADVP (WRB how))
          (S
            (NP (NN justice))
            (VP (VBZ is)
              (VP (VBN established)))))))
    (. ?)))

mark(correct-5, If-1)
nn(Design-3, Intelligent-2)
nsubj(correct-5, Design-3)
cop(correct-5, is-4)
advcl(wise-9, correct-5)
nsubj(wise-9, it-6)
aux(wise-9, would-7)
cop(wise-9, be-8)
root(ROOT-0, wise-9)
aux(find-11, to-10)
xcomp(wise-9, find-11)
prt(find-11, out-12)
det(purpose-15, what-14)
rel(createdObjection-18, purpose-15)
nsubjpass(createdObjection-18, we-16)
auxpass(createdObjection-18, were-17)
dep(Explain-21, createdObjection-18)
dobj(createdObjection-18, 3-19)
dobj(find-11, Explain-21)
prep_to(Explain-21, me-23)
advmod(established-28, then-24)
advmod(established-28, how-25)
nsubjpass(established-28, justice-26)
auxpass(established-28, is-27)
ccomp(wise-9, established-28)

(ROOT
  (S
    (PP (IN For)
      (NP (DT the) (NN record)))
    (: ;)
    (NP (JJ Atheistic) (NNS regimes))
    (VP (VBP have)
      (VP (VBN slaughtered)
        (NP
          (NP (NNS upwards))
          (PP (IN of)
            (NP
              (QP (CD 100) (CD million))
              (NNS people))))))
    (. .)))

det(record-3, the-2)
prep_for(slaughtered-8, record-3)
amod(regimes-6, Atheistic-5)
nsubj(slaughtered-8, regimes-6)
aux(slaughtered-8, have-7)
root(ROOT-0, slaughtered-8)
dobj(slaughtered-8, upwards-9)
number(million-12, 100-11)
num(people-13, million-12)
prep_of(upwards-9, people-13)

(ROOT
  (S
    (NP
      (NP (DT All) (JJ other) (NNS atrocities))
      (VP (VBN combined)))
    (VP (VBP do) (RB n't)
      (ADVP (RB even))
      (VP (VB come)
        (NP (NN close))))
    (. .)))

det(atrocities-3, All-1)
amod(atrocities-3, other-2)
nsubj(come-8, atrocities-3)
partmod(atrocities-3, combined-4)
aux(come-8, do-5)
neg(come-8, n't-6)
advmod(come-8, even-7)
root(ROOT-0, come-8)
dobj(come-8, close-9)

(ROOT
  (S (CC But)
    (VP (VBP do) (RB n't)
      (VP (VB take)
        (NP (PRP$ my) (NN word))
        (PP (IN for)
          (NP (PRP it)))))
    (. .)))

cc(take-4, But-1)
aux(take-4, do-2)
neg(take-4, n't-3)
root(ROOT-0, take-4)
poss(word-6, my-5)
dobj(take-4, word-6)
prep_for(take-4, it-8)

(ROOT
  (S
    (VP (VB check)
      (NP (DT the) (NNS records)))
    (. .)))

root(ROOT-0, check-1)
det(records-3, the-2)
dobj(check-1, records-3)

