(ROOT
  (S
    (NP (PRP$ Your) (NN argument))
    (VP (VBZ fails)
      (S
        (VP (TO to)
          (VP (VB disprove)
            (PP (IN at)
              (NP
                (NP (PDT all) (DT the) (NN existence))
                (PP (IN of)
                  (NP (DT a) (NNP God)))))
            (SBAR
              (WHNP (WP who))
              (S
                (NP (NNS rules))
                (VP (VBP BY)
                  (NP (DT those) (NNS laws)))))))))
    (. .)))

poss(argument-2, Your-1)
nsubj(fails-3, argument-2)
xsubj(disprove-5, argument-2)
root(ROOT-0, fails-3)
aux(disprove-5, to-4)
xcomp(fails-3, disprove-5)
predet(existence-9, all-7)
det(existence-9, the-8)
prep_at(disprove-5, existence-9)
det(God-12, a-11)
prep_of(existence-9, God-12)
dobj(BY-15, who-13)
nsubj(BY-15, rules-14)
ccomp(disprove-5, BY-15)
det(laws-17, those-16)
dobj(BY-15, laws-17)

(ROOT
  (S
    (ADVP
      (ADVP (RB Also))
      (SBAR (IN whereas)
        (S
          (NP
            (NP (NN science))
            (ADVP (PRP itself)))
          (VP (VBZ claims)
            (S
              (NP (PRP itself))
              (ADJP (JJ incomplete)))))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (ADVP (RB never))
      (VP
        (ADVP (RB absolutely))
        (VB claim)
        (SBAR (IN that)
          (S
            (NP (DT all) (NNS laws))
            (VP (VBP are)
              (VP
                (ADVP (RB ever))
                (VBN violated) (, ,)
                (SBAR (IN because)
                  (S
                    (NP (JJ many) (NNS laws))
                    (VP (VBD lay)
                      (ADJP (JJ undiscovered)))))))))))
    (. .)))

advmod(claim-13, Also-1)
mark(claims-5, whereas-2)
nsubj(claims-5, science-3)
advmod(science-3, itself-4)
dep(Also-1, claims-5)
nsubj(incomplete-7, itself-6)
xcomp(claims-5, incomplete-7)
nsubj(claim-13, you-9)
aux(claim-13, can-10)
neg(claim-13, never-11)
advmod(claim-13, absolutely-12)
root(ROOT-0, claim-13)
complm(violated-19, that-14)
det(laws-16, all-15)
nsubjpass(violated-19, laws-16)
auxpass(violated-19, are-17)
advmod(violated-19, ever-18)
ccomp(claim-13, violated-19)
mark(lay-24, because-21)
amod(laws-23, many-22)
nsubj(lay-24, laws-23)
advcl(violated-19, lay-24)
acomp(lay-24, undiscovered-25)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (NP (PRP you))
    (VP (VBP fail)
      (NP (NN claim))
      (PP (TO to)
        (NP (DT the) (JJ petitio) (NN principi) (NN fallacy))))
    (. .)))

advmod(fail-4, Also-1)
nsubj(fail-4, you-3)
root(ROOT-0, fail-4)
dobj(fail-4, claim-5)
det(fallacy-10, the-7)
amod(fallacy-10, petitio-8)
nn(fallacy-10, principi-9)
prep_to(fail-4, fallacy-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADVP (RB only))
      (VP (VBG disproving)
        (NP
          (NP
            (NP (DT a) (NNP God))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ breaks)
                  (NP (JJ natural) (NNS laws))))))
          (, ,)
          (NP
            (NP (RB not) (DT the) (NNP God))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD created)
                  (NP (JJ natural) (NNS laws))))))
          (, ,)
          (CC or)
          (NP
            (NP (DT the) (NNP God))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ rules)
                  (PP (IN by)
                    (NP (PRP them))))))))))
    (. .)))

nsubj(disproving-4, You-1)
aux(disproving-4, are-2)
advmod(disproving-4, only-3)
root(ROOT-0, disproving-4)
det(God-6, a-5)
dobj(disproving-4, God-6)
nsubj(breaks-8, God-6)
rcmod(God-6, breaks-8)
amod(laws-10, natural-9)
dobj(breaks-8, laws-10)
neg(God-14, not-12)
det(God-14, the-13)
conj_or(God-6, God-14)
nsubj(created-16, God-14)
rcmod(God-14, created-16)
amod(laws-18, natural-17)
dobj(created-16, laws-18)
det(God-22, the-21)
conj_or(God-6, God-22)
nsubj(rules-24, God-22)
rcmod(God-22, rules-24)
prep_by(rules-24, them-26)

(ROOT
  (S
    (ADVP (RB Also))
    (NP (PRP$ your) (NN definition))
    (VP
      (ADVP (RB inherently))
      (VBZ contradicts)
      (NP
        (NP (DT this) (NN argument))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP you))
            (VP (VBP allow)
              (PP (IN for)
                (NP
                  (NP (DT a) (NNP God))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ has)
                        (VP (VBN been) (`` ``)
                          (VP (VBN created)))))))))))
        (, ,) ('' '')
        (VP
          (ADVP (RB therefore))
          (VBG allowing)
          (PP (IN for)
            (NP
              (NP (DT a) (NNP God))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBD did) (RB not)
                    (VP (VB creat)
                      (NP
                        (NP (DT the) (NN matter))
                        (PP (IN of)
                          (NP (DT the) (NN universe)))))))))))))
    (. .)))

advmod(contradicts-5, Also-1)
poss(definition-3, your-2)
nsubj(contradicts-5, definition-3)
advmod(contradicts-5, inherently-4)
root(ROOT-0, contradicts-5)
det(argument-7, this-6)
dobj(contradicts-5, argument-7)
dobj(allow-11, argument-7)
mark(allow-11, because-9)
nsubj(allow-11, you-10)
dep(argument-7, allow-11)
det(God-14, a-13)
prep_for(allow-11, God-14)
nsubjpass(created-19, God-14)
aux(created-19, has-16)
auxpass(created-19, been-17)
rcmod(God-14, created-19)
advmod(allowing-23, therefore-22)
partmod(argument-7, allowing-23)
det(God-26, a-25)
prep_for(allowing-23, God-26)
nsubj(creat-30, God-26)
aux(creat-30, did-28)
neg(creat-30, not-29)
rcmod(God-26, creat-30)
det(matter-32, the-31)
dobj(creat-30, matter-32)
det(universe-35, the-34)
prep_of(matter-32, universe-35)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (ADVP (RB basically))
      (VP (VBG falling)
        (NP (NN prey))
        (PP (TO to)
          (NP (JJ giant) (JJ straw-man) (NN fallacy)))))
    (. .)))

nsubj(falling-4, You-1)
aux(falling-4, 're-2)
advmod(falling-4, basically-3)
root(ROOT-0, falling-4)
dobj(falling-4, prey-5)
amod(fallacy-9, giant-7)
amod(fallacy-9, straw-man-8)
prep_to(falling-4, fallacy-9)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP build)
        (NP (DT a) (NNP God))))
    (, ,)
    (CC and)
    (RB then)
    (S
      (VP (VB disprove)
        (NP (DT that) (NNP God))))
    (. .)))

nsubj(build-2, You-1)
root(ROOT-0, build-2)
det(God-4, a-3)
dobj(build-2, God-4)
advmod(build-2, then-7)
conj_and(build-2, then-7)
ccomp(build-2, disprove-8)
det(God-10, that-9)
dobj(disprove-8, God-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD defined)
          (NP (NN atheism))
          (PP (IN as) (`` ``)
            (NP (NN belief)))
          (SBAR (IN that)
            (S
              (NP (NN nothing))
              (VP (VBZ exists)
                (NP
                  (NP (RB outside))
                  (PP (IN of)
                    (NP (DT the) (NN self)))
                  (, ,) ('' ''))
                (ADVP (RB then))
                (, ,)
                (PP (VBG depending)
                  (PP (IN on)
                    (NP (PRP$ your) (NNS metaphysics))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD could)
      (ADVP (RB easily))
      (VP (VB disprove)
        (NP (DT that))))
    (. .)))

mark(defined-3, If-1)
nsubj(defined-3, I-2)
advcl(disprove-27, defined-3)
dobj(defined-3, atheism-4)
prep_as(defined-3, belief-7)
complm(exists-10, that-8)
nsubj(exists-10, nothing-9)
ccomp(defined-3, exists-10)
dobj(exists-10, outside-11)
det(self-14, the-13)
prep_of(outside-11, self-14)
advmod(exists-10, then-17)
prepc_depending_on(exists-10, on-20)
poss(metaphysics-22, your-21)
pobj(exists-10, metaphysics-22)
nsubj(disprove-27, I-24)
aux(disprove-27, could-25)
advmod(disprove-27, easily-26)
root(ROOT-0, disprove-27)
dobj(disprove-27, that-28)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP do) (RB not))
    (. .)))

cc(do-3, But-1)
nsubj(do-3, I-2)
root(ROOT-0, do-3)
neg(do-3, not-4)

(ROOT
  (S
    (S
      (PP (IN As)
        (ADVP (RB long) (RB as)))
      (NP (DT the) (NN theist))
      (VP (MD must)
        (VP (VB disprove)
          (NP
            (NP
              (NP (DT the) (NN atheist) (POS 's))
              (NN definition))
            (PP (IN of)
              (NP (NN atheism)))))))
    (, ,) (IN so)
    (S
      (ADVP (RB also))
      (VP (MD must))
      (NP (DT the) (NN atheist)
        (S
          (VP (VB disprove)
            (NP
              (NP (DT the) (NN theist) (POS 's))
              (NN God))))))
    (. .)))

prep(disprove-7, As-1)
advmod(as-3, long-2)
pcomp(As-1, as-3)
det(theist-5, the-4)
nsubj(disprove-7, theist-5)
aux(disprove-7, must-6)
root(ROOT-0, disprove-7)
det(atheist-9, the-8)
poss(definition-11, atheist-9)
dobj(disprove-7, definition-11)
prep_of(definition-11, atheism-13)
dep(disprove-7, so-15)
advmod(must-17, also-16)
ccomp(disprove-7, must-17)
det(atheist-19, the-18)
dep(must-17, atheist-19)
dep(atheist-19, disprove-20)
det(theist-22, the-21)
poss(God-24, theist-22)
dobj(disprove-20, God-24)

