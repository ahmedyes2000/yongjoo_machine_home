(ROOT
  (S
    (NP (DT The) (NN way) (NN I) (NN view) (NN religion))
    (VP (VBZ is))
    (: ...)))

det(religion-5, The-1)
nn(religion-5, way-2)
nn(religion-5, I-3)
nn(religion-5, view-4)
nsubj(is-6, religion-5)
root(ROOT-0, is-6)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP need)
      (NP (NN proof)))
    (. .)))

nsubj(need-3, I-1)
advmod(need-3, just-2)
root(ROOT-0, need-3)
dobj(need-3, proof-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (SBAR
            (S
              (NP (DT any) (NN religion))
              (VP (VBZ is)
                (ADJP (RB specifically) (JJ wrong))))))))
    (: ...)
    (S
      (S
        (VP (VBP do) (RB n't)
          (VP (VB think)
            (NP (DT any)))))
      (VP (VBP are)
        (ADJP (JJ right))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
det(religion-6, any-5)
nsubj(wrong-9, religion-6)
cop(wrong-9, is-7)
advmod(wrong-9, specifically-8)
ccomp(think-4, wrong-9)
aux(think-13, do-11)
neg(think-13, n't-12)
csubj(right-16, think-13)
dobj(think-13, any-14)
cop(right-16, are-15)
parataxis(think-4, right-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR (IN that)
          (S
            (NP (NN science))
            (VP (VBZ is)
              (ADJP (JJ right)))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
complm(right-8, that-5)
nsubj(right-8, science-6)
cop(right-8, is-7)
ccomp(think-4, right-8)

(ROOT
  (S
    (SBAR (IN Until)
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB see)
            (PP (IN for)
              (NP
                (NP (PRP myself))
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ lies)
                      (PP (IN in)
                        (NP (DT the) (NN afterlife))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will) (RB not)
      (VP (VB believe)
        (NP
          (NP (CD one) (NN way))
          (CC or)
          (NP (DT the) (JJ other)))))
    (. .)))

mark(see-4, Until-1)
nsubj(see-4, I-2)
aux(see-4, can-3)
advcl(believe-16, see-4)
prep_for(see-4, myself-6)
nsubj(lies-8, myself-6)
rcmod(myself-6, lies-8)
det(afterlife-11, the-10)
prep_in(lies-8, afterlife-11)
nsubj(believe-16, I-13)
aux(believe-16, will-14)
neg(believe-16, not-15)
root(ROOT-0, believe-16)
num(way-18, one-17)
dobj(believe-16, way-18)
det(other-21, the-20)
dobj(believe-16, other-21)
conj_or(way-18, other-21)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP
        (ADJP
          (ADJP (RB not) (JJ worth)
            (NP (PRP it)))
          (SBAR
            (SBAR (IN because)
              (S
                (NP (PRP I))
                (VP (MD would)
                  (ADVP (RBS most) (RB likely))
                  (VP (VB be)
                    (ADJP (JJ wrong))))))
            (CC and)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD would)
                  (VP (VB be)
                    (NP
                      (NP (DT a) (NN waste))
                      (PP (IN of)
                        (NP (NN life)))))))
              (: ...))))
        (CC and)
        (ADJP (RB very) (JJ disappointing))))
    (. .)))

advmod(worth-6, Therefore-1)
nsubj(worth-6, it-3)
nsubj(disappointing-26, it-3)
cop(worth-6, is-4)
neg(worth-6, not-5)
root(ROOT-0, worth-6)
dep(worth-6, it-7)
mark(wrong-14, because-8)
nsubj(wrong-14, I-9)
aux(wrong-14, would-10)
advmod(likely-12, most-11)
advmod(wrong-14, likely-12)
cop(wrong-14, be-13)
dep(worth-6, wrong-14)
nsubj(waste-20, that-16)
aux(waste-20, would-17)
cop(waste-20, be-18)
det(waste-20, a-19)
dep(worth-6, waste-20)
conj_and(wrong-14, waste-20)
prep_of(waste-20, life-22)
advmod(disappointing-26, very-25)
conj_and(worth-6, disappointing-26)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB believe)
            (PP (IN in)
              (NP (NN anything)))
            (PP (IN without)
              (S
                (VP
                  (ADVP (RB specifically))
                  (VBG turning)
                  (ADVP (RB away))
                  (PP (IN from)
                    (NP (NN anything))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP figure)
      (SBAR
        (S
          (NP (NNS things))
          (VP (MD will)
            (VP (VB turn)
              (PRT (RP out))
              (PP (IN for)
                (NP (DT the) (JJS best))))))))
    (. .)))

mark(believe-5, If-1)
nsubj(believe-5, I-2)
aux(believe-5, do-3)
neg(believe-5, n't-4)
advcl(figure-16, believe-5)
prep_in(believe-5, anything-7)
advmod(turning-10, specifically-9)
prepc_without(believe-5, turning-10)
prep_away_from(turning-10, anything-13)
nsubj(figure-16, I-15)
root(ROOT-0, figure-16)
nsubj(turn-19, things-17)
aux(turn-19, will-18)
ccomp(figure-16, turn-19)
prt(turn-19, out-20)
det(best-23, the-22)
prep_for(turn-19, best-23)

