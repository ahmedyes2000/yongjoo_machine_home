(ROOT
  (NP (FW .) (. .)))


(ROOT
  (S
    (NP
      (NP (DT the) (NN fact))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP yourargument)))))
    (VP (VBZ states)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN universe))
          (VP (VBD did) (RB n't)
            (VP (VB exist)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN potency))
                  (PP (IN of)
                    (NP (DT a) (JJ former) (NN state)))))
              (S
                (VP (TO to)
                  (VP (VB become)
                    (NP (DT this) (NN one))))))))))
    (. .)))

det(fact-2, the-1)
nsubj(yourargument-4, fact-2)
nsubj(states-5, fact-2)
rcmod(fact-2, yourargument-4)
root(ROOT-0, states-5)
complm(exist-11, that-6)
det(universe-8, the-7)
nsubj(exist-11, universe-8)
xsubj(one-22, universe-8)
aux(exist-11, did-9)
neg(exist-11, n't-10)
ccomp(states-5, exist-11)
det(potency-14, the-13)
prep_in(exist-11, potency-14)
det(state-18, a-16)
amod(state-18, former-17)
prep_of(potency-14, state-18)
aux(one-22, to-19)
cop(one-22, become-20)
det(one-22, this-21)
xcomp(exist-11, one-22)

(ROOT
  (S
    (VP (VB Nice)
      (SBAR (IN that)
        (S
          (S
            (NP (PRP you))
            (VP (VBP think)
              (NP (DT that))))
          (, ,)
          (CC but)
          (S
            (NP (PRP it) (POS 's))
            (VP (VBZ seems)
              (NP (NNS presumptuous)))))))
    (. .)))

root(ROOT-0, Nice-1)
complm(think-4, that-2)
nsubj(think-4, you-3)
ccomp(Nice-1, think-4)
dobj(think-4, that-5)
nsubj(presumptuous-11, it-8)
possessive(it-8, 's-9)
cop(presumptuous-11, seems-10)
ccomp(Nice-1, presumptuous-11)
conj_but(think-4, presumptuous-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 've)
              (ADVP (RB ever))
              (VP (VBN considered)
                (NP (DT that))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
nsubj(considered-8, you-5)
aux(considered-8, 've-6)
advmod(considered-8, ever-7)
ccomp(think-4, considered-8)
dobj(considered-8, that-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP
              (NP (DT the)
                (ADJP (RBS most) (JJ blatantly))
                (JJ profound) (NN truth))
              (PP (IN in)
                (NP (NN existence))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(truth-9, it-3)
cop(truth-9, 's-4)
det(truth-9, the-5)
advmod(blatantly-7, most-6)
amod(truth-9, blatantly-7)
amod(truth-9, profound-8)
ccomp(think-2, truth-9)
prep_in(truth-9, existence-11)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (PRP$ our) (JJ limited) (NN understanding))
        (PP (IN of)
          (NP (JJ physical) (NN science)))))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (NP (DT an) (NN impossibility)))
    (. .)))

poss(understanding-4, our-2)
amod(understanding-4, limited-3)
prep_with(impossibility-12, understanding-4)
amod(science-7, physical-6)
prep_of(understanding-4, science-7)
nsubj(impossibility-12, this-9)
cop(impossibility-12, is-10)
det(impossibility-12, an-11)
root(ROOT-0, impossibility-12)

(ROOT
  (S (CC So)
    (NP (DT this) (JJ big) (JJ mysterious) (NN factor))
    (ADVP (RB even))
    (VP (VBZ fits)
      (PP (IN with)
        (NP (PRP$ your) (NNS terms)))
      (, ,)
      (SBAR (IN so)
        (S
          (NP (PRP one))
          (VP (MD must)
            (VP (VB conclude)
              (NP (DT the) (JJ likely) (NN hood))
              (SBAR (IN that)
                (S
                  (NP (PRP$ your) (NN conclusion))
                  (VP (VBZ is)
                    (ADJP (RB absolutely) (JJ wrong))))))))))
    (. .)))

cc(fits-7, So-1)
det(factor-5, this-2)
amod(factor-5, big-3)
amod(factor-5, mysterious-4)
nsubj(fits-7, factor-5)
advmod(fits-7, even-6)
root(ROOT-0, fits-7)
poss(terms-10, your-9)
prep_with(fits-7, terms-10)
mark(conclude-15, so-12)
nsubj(conclude-15, one-13)
aux(conclude-15, must-14)
advcl(fits-7, conclude-15)
det(hood-18, the-16)
amod(hood-18, likely-17)
dobj(conclude-15, hood-18)
complm(wrong-24, that-19)
poss(conclusion-21, your-20)
nsubj(wrong-24, conclusion-21)
cop(wrong-24, is-22)
advmod(wrong-24, absolutely-23)
ccomp(conclude-15, wrong-24)

(ROOT
  (S
    (NP (PRP$ Our) (NN sceince))
    (VP (VBZ says)
      (SBAR
        (S
          (NP (NN something))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP (PRP it)))))))))
    (. .)))

poss(sceince-2, Our-1)
nsubj(says-3, sceince-2)
root(ROOT-0, says-3)
nsubj(had-5, something-4)
xsubj(do-7, something-4)
ccomp(says-3, had-5)
aux(do-7, to-6)
xcomp(had-5, do-7)
dobj(do-7, it-8)

(ROOT
  (NP
    (NP
      (NP (NN brain) (NNS waves))
      (, ,)
      (NP
        (NP (DT the) (NN fabric))
        (PP (IN of)
          (NP (NN time))))
      (, ,))
    (: ...)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (NP
          (NP (DT a) (NN lot))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP do) (RB n't)
                (VP (VB understand)))
              (. .))))))
    (. .)))

nn(waves-2, brain-1)
root(ROOT-0, waves-2)
det(fabric-5, the-4)
appos(waves-2, fabric-5)
prep_of(fabric-5, time-7)
nsubj(have-11, we-10)
dep(waves-2, have-11)
det(lot-13, a-12)
dobj(have-11, lot-13)
dobj(understand-17, lot-13)
nsubj(understand-17, we-14)
aux(understand-17, do-15)
neg(understand-17, n't-16)
rcmod(lot-13, understand-17)

(ROOT
  (S (CC but)
    (ADVP (RB evidently))
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT a) (NN something)))
    (. .)))

cc(is-4, but-1)
advmod(is-4, evidently-2)
expl(is-4, there-3)
root(ROOT-0, is-4)
det(something-6, a-5)
nsubj(is-4, something-6)

(ROOT
  (FRAG
    (ADVP (RB ever))
    (NP
      (NP (NN dream))
      (PP (IN of)
        (NP (NN something)))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD did) (RB n't)
            (VP (VB happen)
              (ADVP (RB yet)))))))
    (. ?)))

dep(dream-2, ever-1)
root(ROOT-0, dream-2)
nsubj(happen-8, dream-2)
prep_of(dream-2, something-4)
aux(happen-8, did-6)
neg(happen-8, n't-7)
rcmod(dream-2, happen-8)
advmod(happen-8, yet-9)

(ROOT
  (S
    (VP (VBZ happens)
      (PP (TO to)
        (NP (NNS people)))
      (NP (NN everyday)))
    (. .)))

root(ROOT-0, happens-1)
prep_to(happens-1, people-3)
dobj(happens-1, everyday-4)

(ROOT
  (S
    (ADVP (RB apparently))
    (, ,)
    (NP (DT the) (JJ physical) (NN world))
    (VP (VBZ is)
      (ADVP (RB just))
      (VP (VBG scratching)
        (NP (DT the) (NN surface))
        (PP (TO to)
          (NP (NN reality)))))
    (. .)))

advmod(scratching-8, apparently-1)
det(world-5, the-3)
amod(world-5, physical-4)
nsubj(scratching-8, world-5)
aux(scratching-8, is-6)
advmod(scratching-8, just-7)
root(ROOT-0, scratching-8)
det(surface-10, the-9)
dobj(scratching-8, surface-10)
prep_to(scratching-8, reality-12)

(ROOT
  (S
    (ADVP (RB now))
    (VP (VB consider)
      (NP
        (NP (DT the) (NN reality))
        (PP (IN of)
          (NP (JJ metaphysical) (NNS ideas)))))
    (. .)))

advmod(consider-2, now-1)
root(ROOT-0, consider-2)
det(reality-4, the-3)
dobj(consider-2, reality-4)
amod(ideas-7, metaphysical-6)
prep_of(reality-4, ideas-7)

(ROOT
  (SQ (VBZ makes)
    (NP (PRP me))
    (VP
      (VP (VB wonder))
      (, ,)
      (VP (VB do)
        (S
          (NP (PRP you))
          (VP (VB possess))))
      (CC and)
      (VP (VB t-shirts)
        (PP (IN with)
          (NP
            (NP (DT a) (JJ large) (NN capital) (NN A))
            (PP (IN on)
              (NP (PRP it)))))))
    (. ?)))

aux(wonder-3, makes-1)
nsubj(wonder-3, me-2)
nsubj(do-5, me-2)
nsubj(t-shirts-9, me-2)
root(ROOT-0, wonder-3)
conj_and(wonder-3, do-5)
nsubj(possess-7, you-6)
ccomp(do-5, possess-7)
conj_and(wonder-3, t-shirts-9)
det(A-14, a-11)
amod(A-14, large-12)
nn(A-14, capital-13)
prep_with(t-shirts-9, A-14)
prep_on(A-14, it-16)

(ROOT
  (S
    (NP (DT These))
    (VP (VBD ideas) (, ,)
      (S
        (VP (VBG being)
          (ADJP (JJ substantial)))))
    (. .) (. .)))

nsubj(ideas-2, These-1)
root(ROOT-0, ideas-2)
cop(substantial-5, being-4)
xcomp(ideas-2, substantial-5)

(ROOT
  (SBARQ
    (WHADVP (RB now))
    (SQ (VBP do)
      (NP (NNS things))
      (VP (VB make)
        (NP (JJR more) (NN sense))))
    (. ?)))

advmod(make-4, now-1)
aux(make-4, do-2)
nsubj(make-4, things-3)
root(ROOT-0, make-4)
amod(sense-6, more-5)
dobj(make-4, sense-6)

(ROOT
  (S
    (S
      (NP (DT A)
        (NP
          (NP (DT the) (NN scene))
          (PP (IN of)
            (NP (DT an) (NN accident))))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (VP (VB rush)
        (PRT (RP forward))
        (NP (NN rip))
        (PP (IN off)
          (NP
            (NP (PRP$ your)
              (ADJP (JJ buttoned)
                (PRT (RP up)))
              (NN shirt))
            (CC and)
            (NP (NNP proclaim) (. .))))))
    (. .)))

det(scene-3, A-1)
det(scene-3, the-2)
ccomp(rush-10, scene-3)
det(accident-6, an-5)
prep_of(scene-3, accident-6)
nsubj(rush-10, you-8)
aux(rush-10, can-9)
root(ROOT-0, rush-10)
prt(rush-10, forward-11)
dobj(rush-10, rip-12)
poss(shirt-17, your-14)
amod(shirt-17, buttoned-15)
dep(buttoned-15, up-16)
prep_off(rush-10, shirt-17)
prep_off(rush-10, proclaim-19)
conj_and(shirt-17, proclaim-19)

(ROOT
  (S (`` ``)
    (SBAR (IN if)
      (S
        (NP (NN he\/she))
        (VP (VBZ dies))))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN end))
        (PP (IN of)
          (NP (DT the) (NN road)))))
    (. .) (. .)))

mark(dies-4, if-2)
nsubj(dies-4, he\/she-3)
advcl(end-9, dies-4)
nsubj(end-9, that-6)
cop(end-9, 's-7)
det(end-9, the-8)
root(ROOT-0, end-9)
det(road-12, the-11)
prep_of(end-9, road-12)

(ROOT
  (S (`` ``)
    (ADVP (RB back)
      (PP (TO to)
        (NP (DT the) (NN point))))
    (, ,) (-LRB- -LRB-)
    (NP (FW i))
    (VP
      (ADVP (RB really))
      (VBP think)
      (NP (DT an) (JJ accompanied) (NN video))
      (PP (IN with)
        (S
          (NP (PRP you))
          (VP (VBG blowing)
            (SBAR
              (S
                (NP (NNS bubbles))
                (VP (MD could)
                  (VP (VB have)
                    (VP (VBN added)
                      (NP (DT some) (NN ground))
                      (PP (TO to)
                        (NP (PRP$ your) (NN argument))))))))))))
    (. .) (-RRB- -RRB-)))

advmod(think-10, back-2)
det(point-5, the-4)
prep_to(back-2, point-5)
nsubj(think-10, i-8)
advmod(think-10, really-9)
root(ROOT-0, think-10)
det(video-13, an-11)
amod(video-13, accompanied-12)
dobj(think-10, video-13)
nsubj(blowing-16, you-15)
prepc_with(think-10, blowing-16)
nsubj(added-20, bubbles-17)
aux(added-20, could-18)
aux(added-20, have-19)
ccomp(blowing-16, added-20)
det(ground-22, some-21)
dobj(added-20, ground-22)
poss(argument-25, your-24)
prep_to(added-20, argument-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP
            (NP (DT the)
              (ADJP (RBS most) (JJ direct)
                (CC and)
                (JJ clear))
              (NN paradox))
            (PP (IN of)
              (NP (NN life))))
          (VP (VBZ is))
          (. .))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
det(paradox-8, the-3)
advmod(direct-5, most-4)
amod(paradox-8, direct-5)
conj_and(direct-5, clear-7)
amod(paradox-8, clear-7)
nsubj(is-11, paradox-8)
prep_of(paradox-8, life-10)
ccomp(think-2, is-11)

(ROOT
  (NP
    (NP (DT the) (NN lack))
    (PP (IN of)
      (NP (NN entropy)))
    (. .)))

det(lack-2, the-1)
root(ROOT-0, lack-2)
prep_of(lack-2, entropy-4)

(ROOT
  (NP
    (NP (DT The) (JJ perpetual) (NN state))
    (PP (IN of)
      (NP (NNS dynamics)))
    (, ,)
    (PP (IN of)
      (NP (NN life)))
    (. .)))

det(state-3, The-1)
amod(state-3, perpetual-2)
root(ROOT-0, state-3)
prep_of(state-3, dynamics-5)
prep_of(state-3, life-8)

(ROOT
  (FRAG
    (PP (IN in)
      (NP (DT the) (JJ very) (NN universe) (PRP itself)))
    (. .)))

root(ROOT-0, in-1)
det(universe-4, the-2)
amod(universe-4, very-3)
pobj(in-1, universe-4)
dep(universe-4, itself-5)

