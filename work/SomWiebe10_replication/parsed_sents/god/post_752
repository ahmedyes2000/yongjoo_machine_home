(ROOT
  (S
    (SBAR (IN If)
      (S (`` ``)
        (NP (PRP it))
        ('' '')
        (VP (VBZ is)
          (VP (VBN used)
            (ADVP (RB properly))))))
    (NP (PRP it))
    (VP (MD could) (RB either)
      (VP (VB mean) (, ,)
        (NP (NN life)
          (CC or)
          (NN believing))
        (PP (IN in)
          (NP (NNP God)))))
    (. .)))

mark(used-6, If-1)
nsubjpass(used-6, it-3)
auxpass(used-6, is-5)
advcl(mean-11, used-6)
advmod(used-6, properly-7)
nsubj(mean-11, it-8)
aux(mean-11, could-9)
advmod(mean-11, either-10)
root(ROOT-0, mean-11)
dobj(mean-11, life-13)
dobj(mean-11, believing-15)
conj_or(life-13, believing-15)
prep_in(mean-11, God-17)

(ROOT
  (S (CC So)
    (NP (EX there))
    (VP (VBP are)
      (NP (CD two) (JJ different) (NNS questions))
      (ADVP (RB here)))
    (: ...)))

cc(are-3, So-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
num(questions-6, two-4)
amod(questions-6, different-5)
nsubj(are-3, questions-6)
advmod(are-3, here-7)

(ROOT
  (S
    (NP
      (NP (NNP Life))
      (PP (IN with)
        (CC or)
        (IN without)
        (NP
          (NP (DT the) (NN belief))
          (PP (IN in)
            (NP (DT a) (NN god))))))
    (VP (VBZ is)
      (ADVP (RB still))
      (NP (NN life)))
    (. .)))

conj_or(Life-1, Life-1')
nsubj(life-12, Life-1)
nsubj(life-12, Life-1')
det(belief-6, the-5)
prep_with(Life-1, belief-6)
prep_without(Life-1', belief-6)
det(god-9, a-8)
prep_in(belief-6, god-9)
cop(life-12, is-10)
advmod(life-12, still-11)
root(ROOT-0, life-12)

(ROOT
  (S
    (S
      (NP
        (NP (NN Anything))
        (WHPP (IN beyond)
          (WHNP (WDT that))))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN value) (NN comparison))
          (PP (IN with)
            (NP (DT no) (NN way)
              (S
                (VP (TO to)
                  (VP (VB evaluate)
                    (NP
                      (NP (DT each) (NN way))
                      (PP (IN of)
                        (NP (NN life))))))))))))
    (, ,) (IN so)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP$ your) (NN argument))
          (VP (VBZ lays)
            (NP (NN claim))
            (PP (TO to)
              (NP
                (NP (DT any) (NN idea))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN life)
                      (CC or)
                      (NN life) (NN style) (POS 's))
                    (NN value))))))))
      (NP (PRP it))
      (VP (VBZ becomes)
        (ADJP (IN about) (RB as) (JJ valid))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP see)
              (NP
                (NP (DT the) (NN belief))
                (PP (IN in)
                  (NP (NNP God)))))))))
    (. .)))

nsubj(comparison-7, Anything-1)
prep_beyond(Anything-1, that-3)
cop(comparison-7, is-4)
det(comparison-7, a-5)
nn(comparison-7, value-6)
root(ROOT-0, comparison-7)
det(way-10, no-9)
prep_with(comparison-7, way-10)
aux(evaluate-12, to-11)
infmod(way-10, evaluate-12)
det(way-14, each-13)
dobj(evaluate-12, way-14)
prep_of(way-14, life-16)
dep(comparison-7, so-18)
mark(lays-22, if-19)
poss(argument-21, your-20)
nsubj(lays-22, argument-21)
advcl(valid-39, lays-22)
dobj(lays-22, claim-23)
det(idea-26, any-25)
prep_to(lays-22, idea-26)
det(life-29, a-28)
poss(value-34, life-29)
nn(style-32, life-31)
conj_or(life-29, style-32)
poss(value-34, style-32)
prep_of(idea-26, value-34)
nsubj(valid-39, it-35)
cop(valid-39, becomes-36)
dep(valid-39, about-37)
advmod(valid-39, as-38)
ccomp(comparison-7, valid-39)
mark(see-42, as-40)
nsubj(see-42, you-41)
advcl(valid-39, see-42)
det(belief-44, the-43)
dobj(see-42, belief-44)
prep_in(belief-44, God-46)

(ROOT
  (SBARQ
    (WHNP (WP -RRB-))
    (SQ (VBZ Is)
      (NP (NN life))
      (VP (VBN spent)
        (S
          (VP (VBG believing)
            (PP (IN in)
              (NP (NNP God)))
            (PP (IN worth)
              (NP
                (NP (DT the) (NN belief))
                (PP (IN in)
                  (NP (NNP God)))))))))
    (. ?)))

auxpass(spent-4, Is-2)
nsubjpass(spent-4, life-3)
root(ROOT-0, spent-4)
xcomp(spent-4, believing-5)
prep_in(believing-5, God-7)
det(belief-10, the-9)
prep_worth(believing-5, belief-10)
prep_in(belief-10, God-12)

(ROOT
  (SBARQ (CC or)
    (WHADVP (WRB -RRB-))
    (SQ (VBZ Is)
      (NP (NN life))
      (VP (VBN spent)
        (S
          (VP (VBG believing)
            (PP (IN in)
              (NP (NNP God) (NN worth) (NN life)))))))
    (. ?)))

cc(spent-5, or-1)
auxpass(spent-5, Is-3)
nsubjpass(spent-5, life-4)
root(ROOT-0, spent-5)
xcomp(spent-5, believing-6)
nn(life-10, God-8)
nn(life-10, worth-9)
prep_in(believing-6, life-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB stick)
        (PP (IN with)
          (NP (DT the) (NN latter)))))
    (: ...)))

nsubj(stick-3, I-1)
aux(stick-3, 'll-2)
root(ROOT-0, stick-3)
det(latter-6, the-5)
prep_with(stick-3, latter-6)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN value) (NN comparison))
          (ADVP (RB essentially))
          (PP (IN between)
            (NP (DT a) (NNS persons) (NN life)))
          (, ,)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP they))
              (VP (VBP do)
                (VP (VB believe))))))
        (, ,)
        (CC and)
        (NP
          (NP
            (NP (DT a) (NN person) (POS 's))
            (NN life))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP they))
              (VP (VBP do) (RB n't)
                (VP (VB believe))))))))
    (. .)))

nsubj(comparison-5, This-1)
cop(comparison-5, is-2)
det(comparison-5, a-3)
nn(comparison-5, value-4)
root(ROOT-0, comparison-5)
advmod(comparison-5, essentially-6)
det(life-10, a-8)
nn(life-10, persons-9)
prep_between(comparison-5, life-10)
advmod(believe-15, where-12)
nsubj(believe-15, they-13)
aux(believe-15, do-14)
rcmod(comparison-5, believe-15)
det(person-19, a-18)
poss(life-21, person-19)
conj_and(comparison-5, life-21)
advmod(believe-26, where-22)
nsubj(believe-26, they-23)
aux(believe-26, do-24)
neg(believe-26, n't-25)
rcmod(life-21, believe-26)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN way)
        (S
          (VP (TO to)
            (VP
              (ADVP (RB qualitatively))
              (VB measure)
              (NP
                (NP (DT the) (NN worth))
                (PP (IN of)
                  (NP
                    (NP (NN someone) (POS 's))
                    (NN life))))
              (PP (IN without)
                (S
                  (VP (VBG factoring)
                    (PP (IN in)
                      (NP (NN happiness)
                        (CC and)
                        (NN suffering)))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(way-4, no-3)
nsubj(is-2, way-4)
aux(measure-7, to-5)
advmod(measure-7, qualitatively-6)
infmod(way-4, measure-7)
det(worth-9, the-8)
dobj(measure-7, worth-9)
poss(life-13, someone-11)
prep_of(worth-9, life-13)
prepc_without(measure-7, factoring-15)
prep_in(factoring-15, happiness-17)
prep_in(factoring-15, suffering-19)
conj_and(happiness-17, suffering-19)

(ROOT
  (SQ (MD Would)
    (NP
      (NP (DT the) (NN person))
      (PP (IN with)
        (NP
          (NP (DT no) (NN belief))
          (PP (IN in)
            (NP (NNP God))))))
    (VP (VB suffer)
      (NP
        (NP
          (QP (JJR less) (IN than)
            (NP (DT the) (NN person))))
        (PP (IN with)
          (NP (NN faith)))))
    (. ?)))

aux(suffer-9, Would-1)
det(person-3, the-2)
nsubj(suffer-9, person-3)
det(belief-6, no-5)
prep_with(person-3, belief-6)
prep_in(belief-6, God-8)
root(ROOT-0, suffer-9)
quantmod(than-11, less-10)
dobj(suffer-9, than-11)
det(person-13, the-12)
dep(than-11, person-13)
prep_with(than-11, faith-15)

(ROOT
  (SQ (MD Would)
    (NP
      (NP (DT the) (NN person))
      (PP (IN with)
        (NP (DT no) (NN faith))))
    (VP (VB be)
      (ADJP (JJR happier))
      (, ,)
      (ADVP (IN over) (DT all)))
    (. ?)))

aux(happier-8, Would-1)
det(person-3, the-2)
nsubj(happier-8, person-3)
det(faith-6, no-5)
prep_with(person-3, faith-6)
cop(happier-8, be-7)
root(ROOT-0, happier-8)
advmod(happier-8, over-10)
dep(over-10, all-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (DT the) (NN question))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN answered))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
det(question-6, the-5)
nsubjpass(answered-9, question-6)
aux(answered-9, can-7)
auxpass(answered-9, be-8)
ccomp(think-4, answered-9)

(ROOT
  (S
    (S
      (SBAR
        (ADVP (DT No) (NN matter))
        (WHADVP (WDT which) (NN way))
        (S
          (NP (PRP you))
          (VP (VBP look)
            (PP (IN at)
              (NP (PRP it))))))
      (, ,)
      (ADVP (RB though))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (NN life))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (ADJP
          (ADJP (NN nothing) (JJR greater))
          (PP (IN than)
            (NP (NN life))))))
    (: ...)))

dep(matter-2, No-1)
advmod(look-6, matter-2)
dep(way-4, which-3)
advmod(look-6, way-4)
nsubj(look-6, you-5)
dep(life-14, look-6)
prep_at(look-6, it-8)
advmod(life-14, though-10)
nsubj(life-14, it-12)
nsubj('s-18, it-12)
cop(life-14, 's-13)
root(ROOT-0, life-14)
expl('s-18, there-17)
conj_and(life-14, 's-18)
acomp('s-18, nothing-19)
dep(nothing-19, greater-20)
prep_than(nothing-19, life-22)

