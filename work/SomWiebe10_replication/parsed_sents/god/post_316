(ROOT
  (S
    (NP (PRP$ Your) (NN argument))
    (VP (VBZ is)
      (VP (VBN based)
        (PP (IN on)
          (NP
            (NP (DT a) (JJ flawed) (NN conception))
            (PP (IN of)
              (NP (NN omnipotence)))))))
    (. .)))

poss(argument-2, Your-1)
nsubjpass(based-4, argument-2)
auxpass(based-4, is-3)
root(ROOT-0, based-4)
det(conception-8, a-6)
amod(conception-8, flawed-7)
prep_on(based-4, conception-8)
prep_of(conception-8, omnipotence-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR (IN that)
        (S
          (NP
            (NP
              (NP (NNP God) (POS 's))
              (NN omniscience))
            (, ,)
            (VP (VBG being)
              (NP
                (NP (DT all))
                (VP (VBG knowing))))
            (, ,))
          (VP (VBZ proves)
            (SBAR (IN that)
              (S
                (NP (NNP God))
                (VP (MD ca) (RB n't)
                  (VP (VB change)
                    (NP (NNS things))
                    (PP (IN from)
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (NP (PRP he))
                          (VP (VBZ knows)
                            (S
                              (NP (PRP them))
                              (VP (TO to)
                                (VP (VB be))))))))))))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
complm(proves-12, that-3)
poss(omniscience-6, God-4)
nsubj(proves-12, omniscience-6)
cop(all-9, being-8)
partmod(omniscience-6, all-9)
partmod(all-9, knowing-10)
ccomp(say-2, proves-12)
complm(change-17, that-13)
nsubj(change-17, God-14)
aux(change-17, ca-15)
neg(change-17, n't-16)
ccomp(proves-12, change-17)
dobj(change-17, things-18)
advmod(knows-22, how-20)
nsubj(knows-22, he-21)
prepc_from(change-17, knows-22)
nsubj(be-25, them-23)
aux(be-25, to-24)
xcomp(knows-22, be-25)

(ROOT
  (S
    (ADVP (RB Hence))
    (, ,)
    (NP (NNP God))
    (VP (MD can) (RB not)
      (VP (VB contradict)
        (NP (PRP himself))))
    (. .)))

advmod(contradict-6, Hence-1)
nsubj(contradict-6, God-3)
aux(contradict-6, can-4)
neg(contradict-6, not-5)
root(ROOT-0, contradict-6)
dobj(contradict-6, himself-7)

(ROOT
  (S
    (NP (PRP$ Your) (JJ own) (NN argument))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN contradiction))
        (, ,) (RB not)
        (NP (NNP God))))
    (. .)))

poss(argument-3, Your-1)
amod(argument-3, own-2)
nsubj(contradiction-6, argument-3)
cop(contradiction-6, is-4)
det(contradiction-6, a-5)
root(ROOT-0, contradiction-6)
neg(contradiction-6, not-8)
dep(contradiction-6, God-9)

(ROOT
  (S
    (ADVP (RB Essentially))
    (, ,)
    (NP (NNP God))
    (VP (MD ca) (RB n't)
      (VP (VB change)
        (S
          (NP (NNS things))
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (NN difference))
                (PP (IN from)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP they))
                      (VP (VBP are)))))))))))
    (. .)))

advmod(change-6, Essentially-1)
nsubj(change-6, God-3)
aux(change-6, ca-4)
neg(change-6, n't-5)
root(ROOT-0, change-6)
nsubj(difference-10, things-7)
aux(difference-10, to-8)
cop(difference-10, be-9)
xcomp(change-6, difference-10)
dobj(are-14, what-12)
nsubj(are-14, they-13)
prepc_from(difference-10, are-14)

(ROOT
  (S
    (ADVP (RB Now))
    (PRN
      (S
        (NP (PRP you))
        (VP (VBP say)))
      (, ,))
    (`` ``)
    (ADVP (RB therefore))
    (NP (NNP God))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP (RB all) (JJ powerful))
        (PP (RB because) (IN in)
          (S
            (VP (VBG contradicts)
              (NP (PRP$ his) (NN omniscience)))))))
    (. .)))

advmod(powerful-12, Now-1)
nsubj(say-3, you-2)
parataxis(powerful-12, say-3)
advmod(powerful-12, therefore-6)
nsubj(powerful-12, God-7)
aux(powerful-12, can-8)
neg(powerful-12, not-9)
cop(powerful-12, be-10)
advmod(powerful-12, all-11)
root(ROOT-0, powerful-12)
advmod(powerful-12, because-13)
prepc_in(powerful-12, contradicts-15)
poss(omniscience-17, his-16)
dobj(contradicts-15, omniscience-17)

(ROOT
  (S ('' '')
    (ADVP (RB So))
    (, ,)
    (NP (PRP$ your) (NN argument))
    (VP (VBZ is)
      (ADVP (RB essentially))
      (SBAR (IN that)
        (S
          (NP (NNP God))
          (VP (VBZ is)
            (NP (DT a) (NN contradiction))
            (ADVP (RB precisely))
            (SBAR (IN because)
              (S
                (NP (PRP he))
                (VP (MD can) (RB not)
                  (VP (VB contradict)
                    (NP (PRP himself))))))))))
    (. .)))

advmod(is-6, So-2)
poss(argument-5, your-4)
nsubj(is-6, argument-5)
root(ROOT-0, is-6)
advmod(is-6, essentially-7)
complm(contradiction-12, that-8)
nsubj(contradiction-12, God-9)
cop(contradiction-12, is-10)
det(contradiction-12, a-11)
ccomp(is-6, contradiction-12)
advmod(contradiction-12, precisely-13)
mark(contradict-18, because-14)
nsubj(contradict-18, he-15)
aux(contradict-18, can-16)
neg(contradict-18, not-17)
advcl(contradiction-12, contradict-18)
dobj(contradict-18, himself-19)

(ROOT
  (S
    (NP (DT This) (NN argument))
    (VP (VBZ is)
      (ADJP
        (ADVP (RB clearly) (RB logically))
        (VBN flawed)))
    (. .)))

det(argument-2, This-1)
nsubjpass(flawed-6, argument-2)
auxpass(flawed-6, is-3)
advmod(logically-5, clearly-4)
advmod(flawed-6, logically-5)
root(ROOT-0, flawed-6)

(ROOT
  (S
    (NP
      (NP (NNP God) (POS 's))
      (NN omnipotence))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (MD can)
            (VP (VB do)
              (NP
                (NP (DT all) (NNS things))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP are)
                      (ADJP (JJ possible)))))))))))
    (. .)))

poss(omnipotence-3, God-1)
nsubj(means-4, omnipotence-3)
root(ROOT-0, means-4)
complm(do-8, that-5)
nsubj(do-8, he-6)
aux(do-8, can-7)
ccomp(means-4, do-8)
det(things-10, all-9)
dobj(do-8, things-10)
nsubj(possible-13, things-10)
cop(possible-13, are-12)
rcmod(things-10, possible-13)

(ROOT
  (S
    (NP
      (NP (DT That) (NN fact))
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBZ is) (RB all)
            (ADJP (JJ powerful))))))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBP are)
            (NP
              (NP (NNS things))
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (MD can) (RB not)
                    (VP (VB do))))))))))
    (. .)))

det(fact-2, That-1)
nsubj(means-8, fact-2)
complm(powerful-7, that-3)
nsubj(powerful-7, he-4)
cop(powerful-7, is-5)
advmod(powerful-7, all-6)
dep(fact-2, powerful-7)
root(ROOT-0, means-8)
complm(are-11, that-9)
expl(are-11, there-10)
ccomp(means-8, are-11)
nsubj(are-11, things-12)
dobj(do-17, things-12)
complm(do-17, that-13)
nsubj(do-17, he-14)
aux(do-17, can-15)
neg(do-17, not-16)
dep(things-12, do-17)

(ROOT
  (S
    (NP (NNP God))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP (JJ wrong))))
    (. .)))

nsubj(wrong-5, God-1)
aux(wrong-5, can-2)
neg(wrong-5, not-3)
cop(wrong-5, be-4)
root(ROOT-0, wrong-5)

(ROOT
  (S
    (NP (NNP God))
    (VP (MD can) (RB not)
      (VP (VB make)
        (S
          (NP (PRP himself))
          (VP (VB cease)
            (S
              (VP (TO to)
                (VP (VB exist))))))))
    (. .)))

nsubj(make-4, God-1)
aux(make-4, can-2)
neg(make-4, not-3)
root(ROOT-0, make-4)
nsubj(cease-6, himself-5)
xsubj(exist-8, himself-5)
ccomp(make-4, cease-6)
aux(exist-8, to-7)
xcomp(cease-6, exist-8)

