(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP one))
        (VP (VBZ is)
          (VP (VBG thinking)
            (ADVP (RB logically)
              (NP (CD one)))))))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB assume)
            (SBAR (IN that)
              (S
                (NP (NNP God))
                (VP (VBZ does) (RB n't)
                  (VP (VB exist)
                    (SBAR (IN until)
                      (S
                        (NP (EX there))
                        (VP (VBP dependable)
                          (NP (NN evidence))
                          (SBAR (IN that)
                            (S
                              (NP (PRP He))
                              (VP (VBZ does)))))))))))))))
    (. .)))

mark(thinking-4, If-1)
nsubj(thinking-4, one-2)
aux(thinking-4, is-3)
csubj(has-7, thinking-4)
advmod(thinking-4, logically-5)
pobj(logically-5, one-6)
root(ROOT-0, has-7)
aux(assume-9, to-8)
xcomp(has-7, assume-9)
complm(exist-14, that-10)
nsubj(exist-14, God-11)
aux(exist-14, does-12)
neg(exist-14, n't-13)
ccomp(assume-9, exist-14)
mark(dependable-17, until-15)
expl(dependable-17, there-16)
advcl(exist-14, dependable-17)
dobj(dependable-17, evidence-18)
nsubj(dependable-17, evidence-18)
complm(does-21, that-19)
nsubj(does-21, He-20)
ccomp(dependable-17, does-21)

(ROOT
  (S
    (SBAR (RB Just) (IN as)
      (S
        (NP (DT the) (JJ old) (NN axiom))
        (VP (VBZ goes)
          (S (`` ``)
            (ADJP (JJ Innocent)
              (PP (IN until)
                (FRAG
                  (VP (VBN proven)
                    (S
                      (ADJP (JJ guilty)))))))
            ('' '')))))
    (, ,)
    (NP (PRP one))
    (VP (MD must)
      (VP (VB follow)
        (NP
          (NP (DT the) (NN rule))
          (PP (IN of) (`` ``)
            (NP
              (NP (RB not) (VBG existing))
              (PP (IN until)
                (NP (JJ proven) (VBG existing))))
            ('' '')))))
    (. .)))

advmod(goes-6, Just-1)
dep(goes-6, as-2)
det(axiom-5, the-3)
amod(axiom-5, old-4)
nsubj(goes-6, axiom-5)
advcl(follow-16, goes-6)
acomp(goes-6, Innocent-8)
prep(Innocent-8, until-9)
dep(until-9, proven-10)
acomp(proven-10, guilty-11)
nsubj(follow-16, one-14)
aux(follow-16, must-15)
root(ROOT-0, follow-16)
det(rule-18, the-17)
dobj(follow-16, rule-18)
prep(rule-18, of-19)
pobj(of-19, not-21)
amod(not-21, existing-22)
prep_until(not-21, proven-24)
amod(proven-24, existing-25)

