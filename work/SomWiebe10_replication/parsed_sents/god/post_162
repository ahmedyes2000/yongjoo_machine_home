(ROOT
  (S
    (S
      (NP
        (NP (NNP Absence))
        (PP (IN of)
          (NP (NN proof)))
        (, ,)
        (ADJP (JJ true))
        (, ,))
      (VP (VBZ is) (RB not)
        (NP
          (NP (NN proof))
          (PP (IN of)
            (NP (NN absence))))
        (, ,)
        (ADVP (RB however))))
    (, ,)
    (NP
      (NP (DT the) (NN absence))
      (PP (IN of)
        (NP (NN proof)
          (S
            (VP (TO to)
              (VP (VB support)
                (NP
                  (NP (CD one) (POS 's))
                  (JJ extraordinary) (NNS claims))))))))
    (VP (VBZ is)
      (NP (NN proof))
      (SBAR (IN that)
        (S
          (NP (PRP one))
          (VP
            (VP (VBZ has) (RB n't)
              (VP (VBN done)
                (NP
                  (NP (CD one) (POS 's))
                  (JJ factual) (NN homework))))
            (CC nor)
            (VP (VBZ does)
              (SBAR
                (S
                  (NP (PRP one))
                  (VP (VBP appear)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ interested)
                            (PP (IN in)
                              (NP
                                (ADJP (RB consistently) (JJ logical))
                                (NN reasoning)))))))))))))))
    (. .)))

nsubj(proof-9, Absence-1)
prep_of(Absence-1, proof-3)
amod(Absence-1, true-5)
cop(proof-9, is-7)
neg(proof-9, not-8)
ccomp(proof-26, proof-9)
prep_of(proof-9, absence-11)
advmod(proof-9, however-13)
det(absence-16, the-15)
nsubj(proof-26, absence-16)
prep_of(absence-16, proof-18)
aux(support-20, to-19)
infmod(proof-18, support-20)
poss(claims-24, one-21)
amod(claims-24, extraordinary-23)
dobj(support-20, claims-24)
cop(proof-26, is-25)
root(ROOT-0, proof-26)
complm(done-31, that-27)
nsubj(done-31, one-28)
nsubj(does-37, one-28)
aux(done-31, has-29)
neg(done-31, n't-30)
ccomp(proof-26, done-31)
poss(homework-35, one-32)
amod(homework-35, factual-34)
dobj(done-31, homework-35)
ccomp(proof-26, does-37)
conj_nor(done-31, does-37)
nsubj(appear-39, one-38)
xsubj(interested-42, one-38)
ccomp(does-37, appear-39)
aux(interested-42, to-40)
cop(interested-42, be-41)
xcomp(appear-39, interested-42)
advmod(logical-45, consistently-44)
amod(reasoning-46, logical-45)
prep_in(interested-42, reasoning-46)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (VP (VBD said)
            (NP
              (QP (JJ many) (NNS times)))
            (PP (RB before) (IN in)
              (NP
                (NP (NNS debates))
                (PP (JJ such) (IN as)
                  (NP (DT this)))))))))
    (, ,)
    (NP (PRP one))
    (VP (VBP need) (RB not)
      (VP (VB disprove)
        (NP
          (NP (DT any) (JJ so-called) (`` ``) (NN god) ('' '')
            (CC or)
            (`` ``) (NN goddess) ('' ''))
          (CC or)
          (NP (JJ other) (VBN claimed) (JJ related) (NN entity)))))
    (. .)))

mark(said-4, As-1)
nsubj(said-4, I-2)
aux(said-4, 've-3)
advcl(need-15, said-4)
quantmod(times-6, many-5)
dobj(said-4, times-6)
advmod(said-4, before-7)
prep_in(said-4, debates-9)
prep_such_as(debates-9, this-12)
nsubj(need-15, one-14)
root(ROOT-0, need-15)
neg(need-15, not-16)
dep(need-15, disprove-17)
det(god-21, any-18)
amod(god-21, so-called-19)
dobj(disprove-17, god-21)
dobj(disprove-17, goddess-25)
conj_or(god-21, goddess-25)
amod(entity-31, other-28)
amod(entity-31, claimed-29)
amod(entity-31, related-30)
dobj(disprove-17, entity-31)
conj_or(god-21, entity-31)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD can) (RB not)
      (VP (VB prove)
        (NP (DT a) (JJ negative) (, ,) (JJ i.e.) (NN non-existence))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP one))
            (VP (MD can) (RB not)
              (VP (VB possess)
                (NP
                  (NP (DT all))
                  (SBAR
                    (S
                      (NP (EX there))
                      (VP (VBZ is)
                        (UCP
                          (S
                            (VP (TO to)
                              (VP (VB know)
                                (ADVP (RB everywhere)))))
                          (CC and)
                          (PP (IN for)
                            (NP
                              (NP (DT all))
                              (PP (IN of)
                                (NP (NN time))))))))))))))))
    (. .)))

nsubj(prove-4, One-1)
aux(prove-4, can-2)
neg(prove-4, not-3)
root(ROOT-0, prove-4)
det(non-existence-9, a-5)
amod(non-existence-9, negative-6)
amod(non-existence-9, i.e.-8)
dobj(prove-4, non-existence-9)
mark(possess-15, because-11)
nsubj(possess-15, one-12)
aux(possess-15, can-13)
neg(possess-15, not-14)
advcl(prove-4, possess-15)
dobj(possess-15, all-16)
expl(is-18, there-17)
rcmod(all-16, is-18)
aux(know-20, to-19)
dep(is-18, know-20)
advmod(know-20, everywhere-21)
dep(is-18, for-23)
conj_and(know-20, for-23)
pobj(for-23, all-24)
prep_of(all-24, time-26)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP one))
        (VP
          (VP (MD can)
            (VP (VB do)))
          (CC and)
          (VP (MD must)
            (VP (VB do))))))
    (VP (VBZ is)
      (VP (VB check)
        (NP
          (NP (DT the) (NNS facts)
            (CC and)
            (NN logic))
          (PP (IN of)
            (NP
              (NP (DT those))
              (VP (VBG claiming)
                (NP
                  (NP (DT the) (NN existence))
                  (PP (IN of)
                    (NP (JJ such) (JJ assumed) (NNS entities))))))))))
    (. .)))

dobj(do-4, What-1)
nsubj(do-4, one-2)
nsubj(do-7, one-2)
aux(do-4, can-3)
csubj(check-9, do-4)
aux(do-7, must-6)
conj_and(do-4, do-7)
csubj(check-9, do-7)
aux(check-9, is-8)
root(ROOT-0, check-9)
det(facts-11, the-10)
dobj(check-9, facts-11)
dobj(check-9, logic-13)
conj_and(facts-11, logic-13)
prep_of(facts-11, those-15)
partmod(those-15, claiming-16)
det(existence-18, the-17)
dobj(claiming-16, existence-18)
amod(entities-22, such-20)
amod(entities-22, assumed-21)
prep_of(existence-18, entities-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (S
          (NP (PRP$ their) (NNS facts))
          (VP (VBP are)
            (ADJP (JJ incorrect) (, ,) (JJ incomplete)
              (CC or)
              (JJ inconsistent))))
        (CC and)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP$ their) (NN logic))
              (VP (VBZ is)
                (ADJP (JJ poor)))))
          (, ,)
          (NP (PRP one))
          (VP (MD can)
            (PP (IN in)
              (NP (DT the) (JJS least)))
            (VP (VB show)
              (NP (DT the) (NNS claimants)))))))
    (NP (NNS arguments))
    (VP (VBP do) (RB not)
      (VP (VB support)
        (NP (PRP$ their) (NNS claims))))
    (. .)))

mark(incorrect-5, If-1)
poss(facts-3, their-2)
nsubj(incorrect-5, facts-3)
nsubj(incomplete-7, facts-3)
nsubj(inconsistent-9, facts-3)
cop(incorrect-5, are-4)
advcl(support-28, incorrect-5)
conj_or(incorrect-5, incomplete-7)
advcl(support-28, incomplete-7)
conj_or(incorrect-5, inconsistent-9)
advcl(support-28, inconsistent-9)
mark(poor-15, if-11)
poss(logic-13, their-12)
nsubj(poor-15, logic-13)
cop(poor-15, is-14)
advcl(show-22, poor-15)
nsubj(show-22, one-17)
aux(show-22, can-18)
det(least-21, the-20)
prep_in(show-22, least-21)
conj_and(incorrect-5, show-22)
advcl(support-28, show-22)
det(claimants-24, the-23)
dobj(show-22, claimants-24)
nsubj(support-28, arguments-25)
aux(support-28, do-26)
neg(support-28, not-27)
root(ROOT-0, support-28)
poss(claims-30, their-29)
dobj(support-28, claims-30)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD can)
      (VP (VB show)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN claimant))
            (VP (VBZ has)
              (ADVP (RB only))
              (S
                (ADJP (RB very) (JJ poor)
                  (PP (TO to)
                    (NP (DT no) (NN reason)
                      (S
                        (VP (TO to)
                          (VP (VB believe)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP they))
                                (VP (VBP do))))))))))))))))
    (. .)))

nsubj(show-3, One-1)
aux(show-3, can-2)
root(ROOT-0, show-3)
complm(has-7, that-4)
det(claimant-6, the-5)
nsubj(has-7, claimant-6)
ccomp(show-3, has-7)
advmod(has-7, only-8)
advmod(poor-10, very-9)
dep(has-7, poor-10)
det(reason-13, no-12)
prep_to(poor-10, reason-13)
aux(believe-15, to-14)
infmod(reason-13, believe-15)
dobj(do-18, what-16)
nsubj(do-18, they-17)
ccomp(believe-15, do-18)

(ROOT
  (S
    (NP (PRP One))
    (VP (VBP need) (RB only)
      (VP (VB prove)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN claimant))
            (VP (VBZ has)
              (VP (VBN proven)
                (NP (NN nothing))
                (ADVP (IN at) (DT all))))))))
    (. .)))

nsubj(need-2, One-1)
root(ROOT-0, need-2)
advmod(need-2, only-3)
dep(need-2, prove-4)
complm(proven-9, that-5)
det(claimant-7, the-6)
nsubj(proven-9, claimant-7)
aux(proven-9, has-8)
ccomp(prove-4, proven-9)
dobj(proven-9, nothing-10)
advmod(proven-9, at-11)
pobj(at-11, all-12)

(ROOT
  (S
    (NP
      (NP (NNP Absence))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ is)
      (NP
        (NP (NN proof))
        (SBAR
          (S
            (NP
              (NP
                (NP (DT the) (NN claimant) (POS 's))
                (NNS arguments))
              (PP (IN from)
                (S
                  (VP (VBG beginning)
                    (PP (TO to)
                      (NP (PRP$ their) (NNS conclusions)))))))
            (VP (VBP are)
              (ADJP (JJ wrong)))))))
    (. .)))

nsubj(proof-5, Absence-1)
prep_of(Absence-1, proof-3)
cop(proof-5, is-4)
root(ROOT-0, proof-5)
det(claimant-7, the-6)
poss(arguments-9, claimant-7)
nsubj(wrong-16, arguments-9)
prepc_from(arguments-9, beginning-11)
poss(conclusions-14, their-13)
prep_to(beginning-11, conclusions-14)
cop(wrong-16, are-15)
rcmod(proof-5, wrong-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ makes)
      (NP
        (NP (DT no) (NN statement))
        (PP (IN about)
          (NP (DT the) (NN unknown)
            (CC or)
            (NN unknowable)))))
    (. .)))

nsubj(makes-2, It-1)
root(ROOT-0, makes-2)
det(statement-4, no-3)
dobj(makes-2, statement-4)
det(unknown-7, the-6)
prep_about(statement-4, unknown-7)
prep_about(statement-4, unknowable-9)
conj_or(unknown-7, unknowable-9)

