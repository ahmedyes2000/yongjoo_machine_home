(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB believe)
        (PP (IN in)
          (NP
            (NP (DT any) (NN god))
            (CC or)
            (NP (NNS gods))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
det(god-7, any-6)
prep_in(believe-4, god-7)
prep_in(believe-4, gods-9)
conj_or(god-7, gods-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (NP (DT a) (JJ strong) (NN atheist))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (ADVP (RB never))
            (VP (VBN come)
              (PP (IN across)
                (NP
                  (NP (DT a) (NN definition))
                  (PP (IN of)
                    (NP (NN god)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD could)
                        (ADVP (RB possibly))
                        (VP (VB exist))))))))))))
    (. .)))

nsubj(atheist-5, I-1)
cop(atheist-5, am-2)
det(atheist-5, a-3)
amod(atheist-5, strong-4)
root(ROOT-0, atheist-5)
mark(come-11, because-7)
nsubj(come-11, I-8)
aux(come-11, have-9)
neg(come-11, never-10)
advcl(atheist-5, come-11)
det(definition-14, a-13)
prep_across(come-11, definition-14)
nsubj(exist-20, definition-14)
prep_of(definition-14, god-16)
aux(exist-20, could-18)
advmod(exist-20, possibly-19)
rcmod(definition-14, exist-20)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN reason)
          (S
            (VP (TO to)
              (VP (VB believe)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT the) (NNS gods))
                      (PP (IN of)
                        (NP (DT any) (NNS bibles))))
                    (VP (VBP are)
                      (ADJP (JJ real)))))))))
        (, ,)
        (CC and)
        (NP
          (NP (JJ many) (NNS reasons))
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (PRP we))
              (VP (VBP know)
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBP are) (RB n't))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(reason-4, no-3)
nsubj(is-2, reason-4)
aux(believe-6, to-5)
infmod(reason-4, believe-6)
complm(real-14, that-7)
det(gods-9, the-8)
nsubj(real-14, gods-9)
det(bibles-12, any-11)
prep_of(gods-9, bibles-12)
cop(real-14, are-13)
ccomp(believe-6, real-14)
amod(reasons-18, many-17)
nsubj(is-2, reasons-18)
conj_and(reason-4, reasons-18)
advmod(know-21, why-19)
nsubj(know-21, we-20)
rcmod(reasons-18, know-21)
nsubj(are-23, they-22)
ccomp(know-21, are-23)
neg(are-23, n't-24)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ being) (NN outside))
      (PP (IN of)
        (NP (NN existence))))
    (VP (VBZ is)
      (PP (IN by)
        (NP (NN definition) (NN non-existent))))
    (. .)))

det(outside-3, A-1)
amod(outside-3, being-2)
nsubj(is-6, outside-3)
prep_of(outside-3, existence-5)
root(ROOT-0, is-6)
nn(non-existent-9, definition-8)
prep_by(is-6, non-existent-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN being))
        (VP (VBZ is)
          (ADJP (VBG existing)))))
    (, ,)
    (NP (PRP it))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ detectable))))
    (. .)))

mark(existing-5, If-1)
det(being-3, a-2)
nsubj(existing-5, being-3)
cop(existing-5, is-4)
advcl(detectable-10, existing-5)
nsubj(detectable-10, it-7)
aux(detectable-10, must-8)
cop(detectable-10, be-9)
root(ROOT-0, detectable-10)

(ROOT
  (S
    (SBAR (IN In) (NN order)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ detectable))))))
    (, ,)
    (NP (PRP it))
    (VP (MD must)
      (VP (VB be)
        (ADJP
          (ADVP (RB logically))
          (JJ consistent))))
    (. .)))

mark(detectable-5, In-1)
dep(detectable-5, order-2)
aux(detectable-5, to-3)
cop(detectable-5, be-4)
dep(consistent-11, detectable-5)
nsubj(consistent-11, it-7)
aux(consistent-11, must-8)
cop(consistent-11, be-9)
advmod(consistent-11, logically-10)
root(ROOT-0, consistent-11)

