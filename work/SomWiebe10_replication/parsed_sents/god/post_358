(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Where))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB go)
        (PP (IN from)
          (NP (RB there)))))
    (. ?)))

advmod(go-5, Where-2)
aux(go-5, do-3)
nsubj(go-5, you-4)
root(ROOT-0, go-5)
prep(go-5, from-6)
pobj(from-6, there-7)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (NP (PRP it)))
    (. .)))

nsubj(it-4, That-2)
cop(it-4, 's-3)
root(ROOT-0, it-4)

(ROOT
  (S
    (S
      (SBAR (IN Once)
        (S
          (NP (NN somebody))
          (VP (VBZ accepts)
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP (DT an) (JJ initial) (NN force))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB realize)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (NN supernatural))
                      (VP (VBG being)))))))))))
    (PRN (-LRB- -LRB-)
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (MD can) (RB not)
            (ADVP (RB logically))
            (VP (VB be)
              (NP (DT a) (JJ natural) (NN being))))))
      (-RRB- -RRB-))
    (CC and)
    (S
      (NP
        (NP (DT a) (NN god))
        (CC or)
        (NP (NNS gods)))
      (VP (MD will)
        (VP (VB follow)
          (NP (NN suit)))))
    (. .)))

mark(accepts-3, Once-1)
nsubj(accepts-3, somebody-2)
advcl(has-12, accepts-3)
complm(is-6, that-4)
expl(is-6, there-5)
ccomp(accepts-3, is-6)
det(force-9, an-7)
amod(force-9, initial-8)
nsubj(is-6, force-9)
nsubj(has-12, he-11)
xsubj(realize-14, he-11)
root(ROOT-0, has-12)
aux(realize-14, to-13)
xcomp(has-12, realize-14)
nsubj(supernatural-18, it-15)
cop(supernatural-18, is-16)
det(supernatural-18, a-17)
ccomp(realize-14, supernatural-18)
partmod(supernatural-18, being-19)
mark(being-29, because-21)
nsubj(being-29, it-22)
aux(being-29, can-23)
neg(being-29, not-24)
advmod(being-29, logically-25)
cop(being-29, be-26)
det(being-29, a-27)
amod(being-29, natural-28)
dep(has-12, being-29)
det(god-33, a-32)
nsubj(follow-37, god-33)
conj_or(god-33, gods-35)
nsubj(follow-37, gods-35)
aux(follow-37, will-36)
conj_and(has-12, follow-37)
dobj(follow-37, suit-38)

(ROOT
  (S
    (NP (JJ Thus) (`` ``) (JJ initial) (NN force))
    (VP (SYM =)
      (NP (NNS god\/gods) ('' '')))
    (. .)))

amod(force-4, Thus-1)
amod(force-4, initial-3)
nsubj(god\/gods-6, force-4)
dep(god\/gods-6, =-5)
root(ROOT-0, god\/gods-6)

