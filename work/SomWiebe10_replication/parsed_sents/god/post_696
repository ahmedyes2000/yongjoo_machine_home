(ROOT
  (S (IN So)
    (SBAR (IN if)
      (S
        (NP (NNS people))
        (VP (VBP are)
          (ADJP (JJ good)
            (PP (IN in)
              (ADJP (JJ general)))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP they))
    (VP (MD should)
      (ADVP (RB probably))
      (VP (VB make)
        (NP (JJ good) (NNS choices))))
    (. .)))

dep(make-13, So-1)
mark(good-5, if-2)
nsubj(good-5, people-3)
cop(good-5, are-4)
advcl(make-13, good-5)
prep_in(good-5, general-7)
advmod(make-13, then-9)
nsubj(make-13, they-10)
aux(make-13, should-11)
advmod(make-13, probably-12)
root(ROOT-0, make-13)
amod(choices-15, good-14)
dobj(make-13, choices-15)

(ROOT
  (SINV
    (S
      (SBAR (IN If)
        (S
          (NP (PRP they))
          (VP (VBP 're) (RB not)
            (VP (VBG making)
              (NP (JJ good) (NNS choices))))))
      (, ,) (RB then)
      (NP (PRP they))
      (VP (VBP 're) (RB not)
        (ADJP (RB really) (JJ good)
          (PP (IN in)
            (ADJP (JJ general))))))
    (, ,)
    (ADVP (RB now))
    (VP (VBP are))
    (NP (PRP they))
    (. ?)))

mark(making-5, If-1)
nsubj(making-5, they-2)
aux(making-5, 're-3)
neg(making-5, not-4)
advcl(good-14, making-5)
amod(choices-7, good-6)
dobj(making-5, choices-7)
advmod(good-14, then-9)
nsubj(good-14, they-10)
cop(good-14, 're-11)
neg(good-14, not-12)
advmod(good-14, really-13)
ccomp(are-19, good-14)
prep_in(good-14, general-16)
advmod(are-19, now-18)
root(ROOT-0, are-19)
nsubj(are-19, they-20)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (SBAR
        (S
          (NP (DT a) (JJ personal) (NN choice) (NN thing))
          (ADVP (RB now))
          (VP (VBZ is) (RB n't)
            (NP (PRP it))))))
    (. .)))

dep('s-4, Well-1)
nsubj('s-4, that-3)
root(ROOT-0, 's-4)
det(thing-8, a-5)
amod(thing-8, personal-6)
nn(thing-8, choice-7)
nsubj(it-12, thing-8)
advmod(it-12, now-9)
cop(it-12, is-10)
neg(it-12, n't-11)
ccomp('s-4, it-12)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (NP
          (QP (CC or)
            (RB not))
          (NN someone))
        (VP (VBZ chooses)
          (S
            (VP (TO to)
              (VP (VB care)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (NP (PRP$ their) (NN mate))
                    (VP (VBZ has)
                      (NP (NN sex))
                      (PP (IN with)))))))))))
    (VP (VBZ is)
      (ADVP (RB up)
        (PP (TO to)
          (NP (PRP them)))))
    (. .)))

complm(chooses-5, Whether-1)
cc(not-3, or-2)
num(someone-4, not-3)
nsubj(chooses-5, someone-4)
xsubj(care-7, someone-4)
csubj(is-14, chooses-5)
aux(care-7, to-6)
xcomp(chooses-5, care-7)
dep(has-11, who-8)
poss(mate-10, their-9)
nsubj(has-11, mate-10)
ccomp(care-7, has-11)
dobj(has-11, sex-12)
prep(has-11, with-13)
root(ROOT-0, is-14)
advmod(is-14, up-15)
prep_to(up-15, them-17)

(ROOT
  (S
    (NP
      (NP (JJS Most))
      (PP (IN of)
        (NP (DT the) (NN time) (NNS people))))
    (VP (VBP get)
      (ADVP (RB really))
      (VP (VBN pissed)
        (PRT (RP off))
        (PP (IN at)
          (NP (DT that) (NN thing)))))
    (. .)))

nsubjpass(pissed-8, Most-1)
det(people-5, the-3)
nn(people-5, time-4)
prep_of(Most-1, people-5)
auxpass(pissed-8, get-6)
advmod(pissed-8, really-7)
root(ROOT-0, pissed-8)
prt(pissed-8, off-9)
det(thing-12, that-11)
prep_at(pissed-8, thing-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP enter)
          (NP
            (NP (DT a) (NN relationship))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP$ your) (NN mate))
                (VP (MD would)
                  (VP (VB care)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB probably))
      (NP (DT a) (JJ bad) (NN idea)
        (S
          (VP (TO to)
            (VP (VB go)
              (S
                (VP (VBG fooling)
                  (PRT (RP around)))))))))
    (. .)))

mark(enter-3, If-1)
nsubj(enter-3, you-2)
advcl(idea-17, enter-3)
det(relationship-5, a-4)
dobj(enter-3, relationship-5)
advmod(care-10, where-6)
poss(mate-8, your-7)
nsubj(care-10, mate-8)
aux(care-10, would-9)
rcmod(relationship-5, care-10)
nsubj(idea-17, it-12)
cop(idea-17, 's-13)
advmod(idea-17, probably-14)
det(idea-17, a-15)
amod(idea-17, bad-16)
root(ROOT-0, idea-17)
aux(go-19, to-18)
infmod(idea-17, go-19)
xcomp(go-19, fooling-20)
prt(fooling-20, around-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB honestly))
      (VP (VBP do)
        (VP (VB understand)
          (NP
            (NP (NN everything))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (VP (VBG saying)))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (VP (VBG being)
        (VP
          (ADVP (JJ thick))
          (VBN headed))))
    (. .)))

nsubj(understand-4, I-1)
advmod(understand-4, honestly-2)
aux(understand-4, do-3)
ccomp(headed-14, understand-4)
dobj(understand-4, everything-5)
dobj(saying-8, everything-5)
nsubj(saying-8, you-6)
aux(saying-8, are-7)
rcmod(everything-5, saying-8)
nsubjpass(headed-14, you-10)
aux(headed-14, 're-11)
auxpass(headed-14, being-12)
advmod(headed-14, thick-13)
root(ROOT-0, headed-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP give)
          (NP (DT a) (NN man))
          (NP
            (NP (DT a) (NN knowledge))
            (PP (IN of)
              (ADJP (JJ good)
                (CC and)
                (JJ evil)))))))
    (, ,)
    (ADVP (RB regardless)
      (PP (IN of)
        (NP (PRP$ his) (NNS beliefs))))
    (, ,)
    (NP (PRP he))
    (VP (MD 'll)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (ADJP (JJ good)
              (CC and)
              (JJ evil))
            (VP (VBP are))))))
    (. .)))

mark(give-3, If-1)
nsubj(give-3, you-2)
advcl(know-20, give-3)
det(man-5, a-4)
iobj(give-3, man-5)
det(knowledge-7, a-6)
dobj(give-3, knowledge-7)
prep_of(knowledge-7, good-9)
prep_of(knowledge-7, evil-11)
conj_and(good-9, evil-11)
poss(beliefs-16, his-15)
prep_regardless_of(know-20, beliefs-16)
nsubj(know-20, he-18)
aux(know-20, 'll-19)
root(ROOT-0, know-20)
nsubj(are-25, what-21)
dep(are-25, good-22)
conj_and(good-22, evil-24)
dep(are-25, evil-24)
ccomp(know-20, are-25)

(ROOT
  (SINV
    (S
      (SBAR (IN Whether)
        (S
          (NP
            (NP
              (QP (CC or)
                (RB not))
              (PRP$ his) (NN concept))
            (PP (IN of)
              (ADJP (JJ good)
                (CC and)
                (JJ evil))))
          (VP (VBP are)
            (NP (DT the) (JJ same)))))
      (VP (VBZ is)
        (ADVP (RB up)
          (PP (TO to)
            (NP (PRP him))))))
    (, ,)
    (VP (VBZ is) (RB n't))
    (NP (PRP it))
    (. ?)))

complm(same-12, Whether-1)
cc(not-3, or-2)
num(concept-5, not-3)
poss(concept-5, his-4)
nsubj(same-12, concept-5)
prep_of(concept-5, good-7)
prep_of(concept-5, evil-9)
conj_and(good-7, evil-9)
cop(same-12, are-10)
det(same-12, the-11)
csubj(is-13, same-12)
ccomp(is-18, is-13)
advmod(is-13, up-14)
prep_to(up-14, him-16)
root(ROOT-0, is-18)
neg(is-18, n't-19)
nsubj(is-18, it-20)

(ROOT
  (S
    (ADVP (RB Society))
    (ADVP (RB however))
    (, ,)
    (VP (VBZ has)
      (NP (DT the) (NN power)
        (S
          (VP (TO to)
            (VP (VB control)
              (NP
                (NP (DT the) (NNS outliers)
                  (CC and)
                  (NNS people))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (ADVP (RB just))
                    (VP (VBP do) (RB n't)
                      (VP (VB get)
                        (NP (PRP it))))))))))))
    (. .)))

advmod(has-4, Society-1)
advmod(has-4, however-2)
root(ROOT-0, has-4)
det(power-6, the-5)
dobj(has-4, power-6)
aux(control-8, to-7)
infmod(power-6, control-8)
det(outliers-10, the-9)
dobj(control-8, outliers-10)
nsubj(get-17, outliers-10)
dobj(control-8, people-12)
conj_and(outliers-10, people-12)
nsubj(get-17, people-12)
advmod(get-17, just-14)
aux(get-17, do-15)
neg(get-17, n't-16)
rcmod(outliers-10, get-17)
dobj(get-17, it-18)

(ROOT
  (S
    (ADVP
      (ADVP
        (ADVP (RB Well))
        (RB as) (RB far))
      (SBAR (IN as)
        (S
          (NP
            (NP (NN murder))
            (CC and)
            (NP (JJ other)
              (ADJP (RB really) (JJ dumb))
              (NN shit)))
          (VP (TO to)
            (VP (VB pull))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB usually))
      (VP (VBN considered)
        (ADJP (JJ bad))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (VP
                (VP (VBG ending)
                  (PRT (RP up))
                  (S
                    (VP (VBG hurting)
                      (NP (NNS people)))))
                (CC and\/or)
                (VP
                  (NP
                    (NP (DT the) (NN community))
                    (PP (IN in)
                      (NP
                        (NP (NN general))
                        (PP (IN by)
                          (S
                            (VP (VBG doing)
                              (NP (PRP it)))))))))))))))
    (. .)))

advmod(considered-17, Well-1)
advmod(Well-1, as-2)
advmod(Well-1, far-3)
mark(pull-12, as-4)
nsubj(pull-12, murder-5)
amod(shit-10, other-7)
advmod(dumb-9, really-8)
amod(shit-10, dumb-9)
conj_and(murder-5, shit-10)
nsubj(pull-12, shit-10)
aux(pull-12, to-11)
dep(Well-1, pull-12)
nsubjpass(considered-17, it-14)
auxpass(considered-17, 's-15)
advmod(considered-17, usually-16)
root(ROOT-0, considered-17)
acomp(considered-17, bad-18)
mark(ending-22, if-19)
nsubj(ending-22, you-20)
aux(ending-22, 're-21)
advcl(considered-17, ending-22)
prt(ending-22, up-23)
xcomp(ending-22, hurting-24)
dobj(hurting-24, people-25)
det(community-28, the-27)
advcl(considered-17, community-28)
conj_and\/or(ending-22, community-28)
prep_in(community-28, general-30)
prepc_by(general-30, doing-32)
dobj(doing-32, it-33)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB need)
        (NP (DT a) (NN god)
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP me))
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP (JJ shooting) (NN someone))
                      (VP (VBZ is)
                        (NP (DT a) (JJ bad) (NN idea)))))
                  (, ,)
                  (CC or)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (VP (VBG going)
                          (S
                            (VP (TO to)
                              (VP (VB hurt)
                                (NP (NN somebody))))))))))))))))
    (. .)))

nsubj(need-4, I-1)
aux(need-4, do-2)
neg(need-4, n't-3)
root(ROOT-0, need-4)
det(god-6, a-5)
dobj(need-4, god-6)
aux(tell-8, to-7)
infmod(god-6, tell-8)
dobj(tell-8, me-9)
complm(idea-16, that-10)
amod(someone-12, shooting-11)
nsubj(idea-16, someone-12)
cop(idea-16, is-13)
det(idea-16, a-14)
amod(idea-16, bad-15)
ccomp(tell-8, idea-16)
complm(going-22, that-19)
nsubj(going-22, it-20)
xsubj(hurt-24, it-20)
aux(going-22, 's-21)
ccomp(tell-8, going-22)
conj_or(idea-16, going-22)
aux(hurt-24, to-23)
xcomp(going-22, hurt-24)
dobj(hurt-24, somebody-25)

(ROOT
  (S (CC And)
    (ADVP (RB yeah))
    (, ,)
    (ADVP (RB sometimes))
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ justified)))
    (. .)))

cc(justified-7, And-1)
advmod(justified-7, yeah-2)
advmod(justified-7, sometimes-4)
nsubj(justified-7, it-5)
cop(justified-7, is-6)
root(ROOT-0, justified-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (DT some) (NNS people))
        (PP (IN in)
          (NP
            (NP (DT this) (NN world))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP need)
                  (S
                    (VP (TO to)
                      (VP (VB die)
                        (SBAR (IN because)
                          (S
                            (NP (PRP they))
                            (VP (VBP 're)
                              (NP (DT a) (NN cancer)))))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
det(people-4, some-3)
nsubj(are-2, people-4)
det(world-7, this-6)
prep_in(people-4, world-7)
nsubj(need-9, world-7)
rcmod(world-7, need-9)
aux(die-11, to-10)
xcomp(need-9, die-11)
mark(cancer-16, because-12)
nsubj(cancer-16, they-13)
cop(cancer-16, 're-14)
det(cancer-16, a-15)
advcl(die-11, cancer-16)

(ROOT
  (FRAG
    (ADVP (RB Adultery))
    (. ?)))

root(ROOT-0, Adultery-1)

