(ROOT
  (S
    (S
      (ADVP (RB er))
      (, ,)
      (NP (PRP I))
      (VP (VBP realize)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN been)
                (VP
                  (ADVP (RB down))
                  (VBN voted)
                  (PP (TO to)
                    (NP
                      (NP (RB nearly) (NN oblivion))
                      (PP (IN in)
                        (NP (DT this) (NN debate))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it) (POS 's))
      (ADVP (RB certainly))
      (VP (VBZ is) (RB not)
        (PP (IN for)
          (NP
            (NP (DT a) (NN lack))
            (PP (IN of)
              (NP (DT a) (JJ good) (NN arguememt)))))))
    (. .)))

advmod(realize-4, er-1)
nsubj(realize-4, I-3)
root(ROOT-0, realize-4)
complm(voted-10, that-5)
nsubjpass(voted-10, I-6)
aux(voted-10, 've-7)
auxpass(voted-10, been-8)
advmod(voted-10, down-9)
ccomp(realize-4, voted-10)
advmod(oblivion-13, nearly-12)
prep_to(voted-10, oblivion-13)
det(debate-16, this-15)
prep_in(oblivion-13, debate-16)
nsubj(is-22, it-19)
possessive(it-19, 's-20)
advmod(is-22, certainly-21)
conj_but(realize-4, is-22)
neg(is-22, not-23)
det(lack-26, a-25)
prep_for(is-22, lack-26)
det(arguememt-30, a-28)
amod(arguememt-30, good-29)
prep_of(lack-26, arguememt-30)

(ROOT
  (S
    (NP (DT The) (NN point))
    (VP (VBZ is) (RB not)
      (SBAR (IN that)
        (S
          (NP (DT a) (JJ blind) (NN man))
          (VP (MD must)
            (VP (VB rely)
              (PP (IN on)
                (NP (NNS others)))
              (S
                (VP (TO to)
                  (VP (VB tell)
                    (NP (PRP him))
                    (NP
                      (NP (DT the) (NN sky))
                      (SBAR
                        (S
                          (VP (VBZ is)
                            (ADJP (JJ blue))))))))))))))
    (. .)))

det(point-2, The-1)
nsubj(is-3, point-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
complm(rely-10, that-5)
det(man-8, a-6)
amod(man-8, blind-7)
nsubj(rely-10, man-8)
xsubj(tell-14, man-8)
aux(rely-10, must-9)
ccomp(is-3, rely-10)
prep_on(rely-10, others-12)
aux(tell-14, to-13)
xcomp(rely-10, tell-14)
iobj(tell-14, him-15)
det(sky-17, the-16)
dobj(tell-14, sky-17)
cop(blue-19, is-18)
rcmod(sky-17, blue-19)

(ROOT
  (S (CC And)
    (RB then)
    (VP (VBZ assuming)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (ADVP (RB never))
          (VP (VBD claimed)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP
                    (NP (DT the) (NN son))
                    (PP (IN of)
                      (NP (NN god)))))))))))
    (. .)))

cc(assuming-3, And-1)
advmod(assuming-3, then-2)
root(ROOT-0, assuming-3)
complm(claimed-7, that-4)
nsubj(claimed-7, he-5)
xsubj(son-11, he-5)
neg(claimed-7, never-6)
ccomp(assuming-3, claimed-7)
aux(son-11, to-8)
cop(son-11, be-9)
det(son-11, the-10)
xcomp(claimed-7, son-11)
prep_of(son-11, god-13)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ is)
      (ADJP (JJ debatable)))
    (. .)))

nsubj(debatable-3, Which-1)
cop(debatable-3, is-2)
root(ROOT-0, debatable-3)

(ROOT
  (S (CC And)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (VBZ assumes)
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was)
            (ADJP (JJ great))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (PP (IN of)
                  (NP
                    (NP (NN course))
                    (VP (VBG giving)
                      (NP
                        (NP (DT the) (JJ debatable) (NN nature))
                        (PP (IN of)
                          (NP (DT the) (NN subject)))))))
                (, ,)
                (VP (VBZ is)
                  (ADJP (JJ debatable)))))))))
    (. .)))

cc(assumes-4, And-1)
advmod(assumes-4, then-2)
nsubj(assumes-4, it-3)
root(ROOT-0, assumes-4)
nsubj(great-7, he-5)
cop(great-7, was-6)
ccomp(assumes-4, great-7)
nsubj(debatable-21, which-9)
prep_of(debatable-21, course-11)
partmod(course-11, giving-12)
det(nature-15, the-13)
amod(nature-15, debatable-14)
dobj(giving-12, nature-15)
det(subject-18, the-17)
prep_of(nature-15, subject-18)
cop(debatable-21, is-20)
ccomp(great-7, debatable-21)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (NNP Messenger))
    (, ,)
    (PP (IN by)
      (NP
        (NP (NN his\/her))
        (PP (IN near)
          (NP
            (NP
              (ADJP (JJ retarded))
              (NN statement) (NNS skips))
            (PP (IN over)
              (NP
                (NP (DT every) (NN step))
                (PP (IN of)
                  (NP (NN logic)))))
            (SBAR
              (S
                (NP (DT a) (JJ third) (NNS grader))
                (VP
                  (VP (MD would)
                    (ADVP (RB accidently))
                    (VP (VB use)))
                  (, ,)
                  (CC and)
                  (VP (VBZ goes)
                    (ADVP (RB straight))
                    (PP (TO to))))))))
        ('' '')
        (SBAR
          (S
            (NP (NNP Jesus))
            (VP (VBD did)
              (SBAR
                (S
                  (S
                    (INTJ (VB say))
                    (NP (PRP he))
                    (VP (VBD was)
                      (NP
                        (NP (DT the) (NN son))
                        (PP (IN of)
                          (NP (NN god)))
                        (, ,)
                        (PRN (-LRB- -LRB-)
                          (VP (VBG ignoring)
                            (SBAR
                              (SBAR (IN whether)
                                (S
                                  (NP (PRP he))
                                  (ADVP (RB ever))
                                  (VP (VBD lived))))
                              (, ,)
                              (CC and)
                              (SBAR (IN whether)
                                (S
                                  (NP (PRP he))
                                  (ADVP (RB ever))
                                  (VP (VBD said)
                                    (NP (DT that)))))))
                          (-RRB- -RRB-)))))
                  (CC and)
                  (S
                    (S
                      (ADVP (RB therefore))
                      (, ,)
                      (NP (PRP he))
                      (ADVP (RB either))
                      (VP (MD must)
                        (VP (VB be)
                          (NP
                            (NP (DT the) (NN son))
                            (PP (IN of)
                              (NP (NN god)))))))
                    (, ,)
                    (CC or)
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (ADJP (JJ crazy)
                          (PP (IN for)
                            (S
                              (VP
                                (VP (VBG saying)
                                  (NP (PRP it)))
                                (-LRB- -LRB-)
                                (SBAR
                                  (SBAR (RB even) (IN though)
                                    (S
                                      (NP (PRP he))
                                      (VP (MD may)
                                        (CC or)
                                        (MD may) (RB not)
                                        (VP (VB have)
                                          (VP (VBD said)
                                            (NP (PRP it)))))))
                                  (, ,)
                                  (CC and)
                                  (SBAR
                                    (S
                                      (VP (MD may)
                                        (CC or)
                                        (MD may) (RB not)
                                        (VP (VB have)
                                          (VP (VBN existed)))))))
                                (-RRB- -RRB-))))))))
                  (ADVP (RB therefore)))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD could) (RB not)
      (VP
        (VP (VB have)
          (VP
            (VP (VBN said)
              (NP (PRP it)))
            (CC and)
            (ADVP (RB not))
            (VP (VBN been)
              (NP
                (NP (DT the) (NN son))
                (PP (IN of)
                  (NP (NN god)))))))
        (CC and)
        (VP (VB be)
          (NP (DT a) (JJ great) (NN man)))))
    (. .) ('' '')))

advmod(said-97, Now-1)
nsubj(said-97, Messenger-3)
prep_by(said-97, his\/her-6)
amod(skips-10, retarded-8)
nn(skips-10, statement-9)
prep_near(his\/her-6, skips-10)
dobj(use-21, skips-10)
prep_to(goes-24, skips-10)
det(step-13, every-12)
prep_over(skips-10, step-13)
prep_of(step-13, logic-15)
det(grader-18, a-16)
amod(grader-18, third-17)
nsubj(use-21, grader-18)
nsubj(goes-24, grader-18)
aux(use-21, would-19)
advmod(use-21, accidently-20)
rcmod(skips-10, use-21)
rcmod(skips-10, goes-24)
conj_and(use-21, goes-24)
advmod(goes-24, straight-25)
nsubj(did-29, Jesus-28)
rcmod(his\/her-6, did-29)
dep(son-34, say-30)
nsubj(son-34, he-31)
cop(son-34, was-32)
det(son-34, the-33)
dep(did-29, son-34)
prep_of(son-34, god-36)
dep(son-34, ignoring-39)
complm(lived-43, whether-40)
nsubj(lived-43, he-41)
advmod(lived-43, ever-42)
ccomp(ignoring-39, lived-43)
complm(said-49, whether-46)
nsubj(said-49, he-47)
advmod(said-49, ever-48)
ccomp(ignoring-39, said-49)
conj_and(lived-43, said-49)
dobj(said-49, that-50)
advmod(son-60, therefore-53)
nsubj(son-60, he-55)
advmod(son-60, either-56)
aux(son-60, must-57)
cop(son-60, be-58)
det(son-60, the-59)
dep(did-29, son-60)
conj_and(son-34, son-60)
prep_of(son-60, god-62)
nsubj(crazy-67, he-65)
cop(crazy-67, was-66)
conj_and(son-34, crazy-67)
conj_or(son-60, crazy-67)
prepc_for(crazy-67, saying-69)
dobj(saying-69, it-70)
advmod(said-80, even-72)
dep(said-80, though-73)
nsubj(said-80, he-74)
nsubj(existed-89, he-74)
aux(said-80, may-75)
dep(saying-69, may-77)
aux(said-80, may-77)
conj_or(said-80, may-77)
neg(said-80, not-78)
aux(said-80, have-79)
dep(saying-69, said-80)
dobj(said-80, it-81)
aux(existed-89, may-84)
conj_and(said-80, may-86)
aux(existed-89, may-86)
conj_or(existed-89, may-86)
neg(existed-89, not-87)
aux(existed-89, have-88)
dep(saying-69, existed-89)
conj_and(said-80, existed-89)
advmod(son-34, therefore-91)
nsubj(said-97, he-93)
aux(said-97, could-94)
neg(said-97, not-95)
aux(said-97, have-96)
root(ROOT-0, said-97)
dobj(said-97, it-98)
advmod(said-97, not-100)
conj_and(said-97, not-100)
neg(said-97, not-100)
cop(son-103, been-101)
det(son-103, the-102)
conj_and(said-97, son-103)
prep_of(son-103, god-105)
cop(man-110, be-107)
det(man-110, a-108)
amod(man-110, great-109)
conj_and(said-97, man-110)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (PP (VBG according)
      (PP (TO to)
        (NP
          (NP (NNP Messenger) (POS 's))
          (JJ infintile) (NN logic))))
    (, ,)
    (NP (NNP Jesus))
    (VP (VBZ is)
      (ADVP (RB either))
      (NP
        (NP
          (NP (DT the) (NN son))
          (PP (IN of)
            (NP (NN god))))
        (, ,)
        (CC or)
        (NP (DT a)
          (ADJP (JJ crazy))
          (NN person))))
    (. .)))

advmod(son-14, So-1)
prepc_according_to(son-14, to-4)
poss(logic-8, Messenger-5)
amod(logic-8, infintile-7)
pobj(son-14, logic-8)
nsubj(son-14, Jesus-10)
cop(son-14, is-11)
advmod(son-14, either-12)
det(son-14, the-13)
root(ROOT-0, son-14)
prep_of(son-14, god-16)
det(person-21, a-19)
amod(person-21, crazy-20)
conj_or(son-14, person-21)

(ROOT
  (NP
    (NP (NN Nothing))
    (PP (IN in)
      (NP (IN between)))
    (. .)))

root(ROOT-0, Nothing-1)
prep(Nothing-1, in-2)
pobj(in-2, between-3)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBP like)
      (SBAR (IN so)
        (S
          (NP
            (NP (RB much))
            (PP (IN of)
              (NP
                (NP (NNP Messenger) (POS 's))
                (ADJP (JJ insane))
                (NNS rantings) (, ,))))
          (VP (VBZ is)
            (ADJP (RB completely) (JJ insane))))))
    (. .)))

nsubj(like-2, Which-1)
root(ROOT-0, like-2)
mark(insane-13, so-3)
nsubj(insane-13, much-4)
poss(rantings-9, Messenger-6)
amod(rantings-9, insane-8)
prep_of(much-4, rantings-9)
cop(insane-13, is-11)
advmod(insane-13, completely-12)
advcl(like-2, insane-13)

(ROOT
  (S
    (PP (VBN Given)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (CD 0) (NN evidence))
              (PP (IN of)
                (NP (NN anything))))))))
    (, ,)
    (NP (DT every) (NN option))
    (VP (VBZ is)
      (ADVP (RB just) (RB as))
      (ADJP (`` ``) (JJ logical) ('' '')
        (PP (IN as)
          (NP (DT the) (JJ next)))))
    (. .)))

dep(is-12, Given-1)
complm(is-4, that-2)
expl(is-4, there-3)
pcomp(Given-1, is-4)
num(evidence-6, 0-5)
nsubj(is-4, evidence-6)
prep_of(evidence-6, anything-8)
det(option-11, every-10)
nsubj(is-12, option-11)
root(ROOT-0, is-12)
advmod(as-14, just-13)
advmod(is-12, as-14)
acomp(is-12, logical-16)
det(next-20, the-19)
prep_as(logical-16, next-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG making)
        (NP
          (NP (NN fun))
          (PP (IN of)
            (NP (NN him\/her)))
          (, ,)
          (VP (VBG attempting)
            (S
              (VP (TO to)
                (VP (VB use)
                  (NP (NN logic))
                  (S
                    (VP (TO to)
                      (VP (VB support)
                        (NP (DT an)
                          (UCP
                            (ADVP (RB inherently))
                            (CC and)
                            (ADJP (RB obviously) (JJ illogical)))
                          (NN arguement))))))))))))
    (. .)))

nsubj(making-3, I-1)
aux(making-3, was-2)
root(ROOT-0, making-3)
dobj(making-3, fun-4)
xsubj(use-10, fun-4)
prep_of(fun-4, him\/her-6)
partmod(fun-4, attempting-8)
aux(use-10, to-9)
xcomp(attempting-8, use-10)
dobj(use-10, logic-11)
aux(support-13, to-12)
xcomp(use-10, support-13)
det(arguement-19, an-14)
dep(arguement-19, inherently-15)
advmod(illogical-18, obviously-17)
conj_and(inherently-15, illogical-18)
dep(arguement-19, illogical-18)
dobj(support-13, arguement-19)

(ROOT
  (FRAG (CC Or)
    (SBAR (IN that)
      (S
        (NP
          (NP (DT the) (NN analogy))
          (PP (IN of)
            (NP (DT the) (JJ blind) (NN mind))))
        (VP (VBZ is)
          (ADJP (JJ innaccurate))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (NP
                  (NP
                    (NP (DT a) (NN matter))
                    (PP (IN of)
                      (NP
                        (NP (NN everyone))
                        (VP (VBG being)
                          (ADJP (JJ blind))))))
                  (, ,)
                  (CONJP (RB not) (RB just))
                  (NP (DT the) (CD one) (NN man)))))))))
    (. .)))

dep(innaccurate-10, Or-1)
dep(innaccurate-10, that-2)
det(analogy-4, the-3)
nsubj(innaccurate-10, analogy-4)
det(mind-8, the-6)
amod(mind-8, blind-7)
prep_of(analogy-4, mind-8)
cop(innaccurate-10, is-9)
root(ROOT-0, innaccurate-10)
mark(matter-16, because-12)
nsubj(matter-16, it-13)
cop(matter-16, 's-14)
det(matter-16, a-15)
advcl(innaccurate-10, matter-16)
prep_of(matter-16, everyone-18)
cop(blind-20, being-19)
partmod(everyone-18, blind-20)
neg(just-23, not-22)
dep(matter-16, just-23)
det(man-26, the-24)
num(man-26, one-25)
conj(matter-16, man-26)

(ROOT
  (S
    (S
      (NP (DT The) (NN point))
      (VP (VBZ is) (, ,)
        (SBAR (IN that) (IN if)
          (S
            (NP (PRP one))
            (ADVP (RB even))
            (VP (VBZ excepts)
              (SBAR (IN that)
                (S
                  (NP (NNP Jesus))
                  (VP (VBD was)
                    (ADJP (RB ever) (JJ alive))))))))))
    (, ,) (RB then)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP
            (NP (NN nothing))
            (ADJP (JJ illogical)
              (PP (IN about)
                (NP (DT this) (NN person)
                  (S
                    (VP (VBG having)
                      (VP (VBN been) (`` ``)
                        (ADJP (JJ great))
                        ('' ''))))))))
          (CONJP (CC but)
            (RB not))
          (NP
            (NP (DT the) (NN son))
            (PP (IN of)
              (NP (NNP God)))))))
    (. .)))

det(point-2, The-1)
nsubj(is-3, point-2)
root(ROOT-0, is-3)
complm(excepts-9, that-5)
dep(excepts-9, if-6)
nsubj(excepts-9, one-7)
advmod(excepts-9, even-8)
ccomp(is-3, excepts-9)
complm(alive-14, that-10)
nsubj(alive-14, Jesus-11)
cop(alive-14, was-12)
advmod(alive-14, ever-13)
ccomp(excepts-9, alive-14)
advmod(is-3, then-16)
expl(is-18, there-17)
ccomp(is-3, is-18)
nsubj(is-18, nothing-19)
amod(nothing-19, illogical-20)
det(person-23, this-22)
prep_about(illogical-20, person-23)
aux(great-27, having-24)
cop(great-27, been-25)
dep(person-23, great-27)
det(son-32, the-31)
nsubj(is-18, son-32)
conj_negcc(nothing-19, son-32)
prep_of(son-32, God-34)

(ROOT
  (S
    (S
      (NP (NNP Messenger))
      (VP (VBZ is)
        (VP (VBG assuming)
          (ADVP (RB so) (RB much)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ boggles)
                  (NP (DT the) (NN mind)))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS things))
            (ADJP (JJ specific)
              (PP (TO to)
                (NP
                  (NP (DT this) (NN arguement))
                  (SBAR (IN that)
                    (S
                      (NP (NN he\/she))
                      (VP (VBZ is)
                        (VP (VBG assuming))))))))))
        (, ,))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP
              (NP (NNP Jesus))
              (PP (IN at)
                (NP (DT some) (NN time))))
            (VP (VBD said)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD was)
                    (NP
                      (NP (DT the) (NN son))
                      (PP (IN of)
                        (NP (NN god))))))))))))
    (. .)))

nsubj(assuming-3, Messenger-1)
aux(assuming-3, is-2)
root(ROOT-0, assuming-3)
advmod(much-5, so-4)
advmod(assuming-3, much-5)
nsubj(boggles-7, it-6)
dep(much-5, boggles-7)
det(mind-9, the-8)
dobj(boggles-7, mind-9)
nsubj(is-25, one-12)
det(things-15, the-14)
prep_of(one-12, things-15)
amod(things-15, specific-16)
det(arguement-19, this-18)
prep_to(specific-16, arguement-19)
dobj(assuming-23, arguement-19)
complm(assuming-23, that-20)
nsubj(assuming-23, he\/she-21)
aux(assuming-23, is-22)
dep(arguement-19, assuming-23)
conj_but(assuming-3, is-25)
complm(said-31, that-26)
nsubj(said-31, Jesus-27)
det(time-30, some-29)
prep_at(Jesus-27, time-30)
ccomp(is-25, said-31)
nsubj(son-35, he-32)
cop(son-35, was-33)
det(son-35, the-34)
ccomp(said-31, son-35)
prep_of(son-35, god-37)

(ROOT
  (S
    (S
      (VP (VBG Ignoring)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ 's)
              (NP
                (NP (DT no) (NN evidence))
                (NP (DT this) (NN person))))))))
    (ADVP (RB ever))
    (VP (VBD existed))
    (. .)))

csubj(existed-10, Ignoring-1)
complm('s-4, that-2)
expl('s-4, there-3)
ccomp(Ignoring-1, 's-4)
det(evidence-6, no-5)
iobj('s-4, evidence-6)
nsubj('s-4, evidence-6)
det(person-8, this-7)
dep(evidence-6, person-8)
advmod(existed-10, ever-9)
root(ROOT-0, existed-10)

(ROOT
  (S
    (VP (VBG Ignoring)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP (DT no) (NN evidence))
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (VBZ is)
                  (NP
                    (NP (DT the) (NN son))
                    (PP (IN of)
                      (NP (NN god)))))))))))
    (. .)))

root(ROOT-0, Ignoring-1)
complm('s-4, that-2)
expl('s-4, there-3)
ccomp(Ignoring-1, 's-4)
det(evidence-6, no-5)
nsubj('s-4, evidence-6)
complm(son-11, that-7)
nsubj(son-11, he-8)
cop(son-11, is-9)
det(son-11, the-10)
ccomp('s-4, son-11)
prep_of(son-11, god-13)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN evidence))
        (SBAR
          (S
            (NP (PRP he))
            (ADVP (RB ever))
            (VP (VBD claimed)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP
                      (NP (DT the) (NN son))
                      (PP (IN of)
                        (NP (NN god))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(evidence-4, no-3)
nsubj(is-2, evidence-4)
dobj(claimed-7, evidence-4)
nsubj(claimed-7, he-5)
xsubj(son-11, he-5)
advmod(claimed-7, ever-6)
rcmod(evidence-4, claimed-7)
aux(son-11, to-8)
cop(son-11, be-9)
det(son-11, the-10)
xcomp(claimed-7, son-11)
prep_of(son-11, god-13)

(ROOT
  (S
    (ADVP (RB So))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP (DT a) (NN statement))))
      (, ,))
    (`` ``)
    (NP (NNP Jesus))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ great) (NN man))
        (, ,)
        (CONJP (CC but)
          (RB not))
        (NP
          (NP (DT the) (NN son))
          (PP (IN of)
            (NP (NN god))))))
    (. .)))

advmod(man-13, So-1)
nsubj(have-4, you-3)
parataxis(man-13, have-4)
det(statement-6, a-5)
dobj(have-4, statement-6)
nsubj(man-13, Jesus-9)
cop(man-13, was-10)
det(man-13, a-11)
amod(man-13, great-12)
root(ROOT-0, man-13)
det(son-18, the-17)
conj_negcc(man-13, son-18)
prep_of(son-18, god-20)

(ROOT
  (S ('' '')
    (NP (DT This) (NN statement))
    (VP (VBZ is)
      (VP (VBG assuming)
        (SBAR
          (S
            (NP (PRP he))
            (VP (VBD existed))))))
    (. .)))

det(statement-3, This-2)
nsubj(assuming-5, statement-3)
aux(assuming-5, is-4)
root(ROOT-0, assuming-5)
nsubj(existed-7, he-6)
ccomp(assuming-5, existed-7)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ is)
      (ADJP (JJ debatable)))
    (. .)))

nsubj(debatable-3, Which-1)
cop(debatable-3, is-2)
root(ROOT-0, debatable-3)

