(ROOT
  (S
    (PP (IN As)
      (NP
        (NP (DT a) (NN scientist)
          (CC and)
          (NN skeptic))
        (PP (IN of)
          (NP (NN religion)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBN offended)
        (PP (IN by)
          (NP (DT this) (JJ inane) (NN post)))))
    (. .)))

det(scientist-3, a-2)
prep_as(offended-11, scientist-3)
conj_and(scientist-3, skeptic-5)
prep_as(offended-11, skeptic-5)
prep_of(scientist-3, religion-7)
nsubjpass(offended-11, I-9)
auxpass(offended-11, am-10)
root(ROOT-0, offended-11)
det(post-15, this-13)
amod(post-15, inane-14)
agent(offended-11, post-15)

(ROOT
  (FRAG
    (SBAR
      (WHADVP (WRB Where))
      (S
        (VP (TO to)
          (VP (VB start)))))
    (. ?)))

advmod(start-3, Where-1)
aux(start-3, to-2)
root(ROOT-0, start-3)

(ROOT
  (S
    (ADVP (RB Even)
      (PP (IN with)
        (NP (PDT such) (DT an) (JJ easy) (NN target))))
    (NP (PRP you))
    (VP (VBP have)
      (VP
        (VP (VBN mishandled)
          (NP (DT the) (NN argument)))
        (CC and)
        (VP (VBN discredited)
          (NP (PRP$ your) (JJ own) (NN side))
          (PP (IN with)
            (NP (PRP$ your) (JJ fallacious) (NNS appeals)))
          (PP (TO to)
            (NP (NN authority))))))
    (. .)))

advmod(mishandled-9, Even-1)
predet(target-6, such-3)
det(target-6, an-4)
amod(target-6, easy-5)
prep_with(Even-1, target-6)
nsubj(mishandled-9, you-7)
nsubj(discredited-13, you-7)
aux(mishandled-9, have-8)
root(ROOT-0, mishandled-9)
det(argument-11, the-10)
dobj(mishandled-9, argument-11)
conj_and(mishandled-9, discredited-13)
poss(side-16, your-14)
amod(side-16, own-15)
dobj(discredited-13, side-16)
poss(appeals-20, your-18)
amod(appeals-20, fallacious-19)
prep_with(discredited-13, appeals-20)
prep_to(discredited-13, authority-22)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (ADVP (RB even))
      (VP (VB preach)
        (PP (TO to)
          (NP (DT the) (JJ converted)))))
    (. .)))

nsubj(preach-5, You-1)
aux(preach-5, ca-2)
neg(preach-5, n't-3)
advmod(preach-5, even-4)
root(ROOT-0, preach-5)
det(converted-8, the-7)
prep_to(preach-5, converted-8)

(ROOT
  (S (`` ``)
    (SBAR (IN everything)
      (S
        (NP (PRP we))
        (VP (VBP know)
          (SBAR
            (S
              (NP (RB about) (NN science))
              (VP (MD would)
                (VP (VB have)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ wrong) ('' ''))
                        (ADVP (RB First))))))))))))
    (, ,)
    (NP
      (NP
        (NP (DT the) (NNS areas))
        (PP (IN of)
          (NP (NN science))))
      (CC and)
      (NP
        (NP (DT the) (JJ scientific) (NN method))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD would)
              (VP (VB be)
                (VP (VBN affected)
                  (PP (IN by)
                    (NP (DT a) (NN revelation))))))))))
    (VP (VB depend)
      (ADVP (RB entirely))
      (PP (IN on)
        (NP
          (NP (DT the) (JJ specific) (NNS powers))
          (PP (IN of)
            (NP
              (NP (DT the) (NN g))
              (PRN (-LRB- -LRB-)
                (NP (NNP G))
                (-RRB- -RRB-))
              (VP (VBN od)
                (PP (IN in)
                  (NP (NN question)))))))))
    (. .)))

mark(know-4, everything-2)
nsubj(know-4, we-3)
advcl(depend-30, know-4)
advmod(science-6, about-5)
nsubj(have-8, science-6)
xsubj(wrong-11, science-6)
aux(have-8, would-7)
ccomp(know-4, have-8)
aux(wrong-11, to-9)
cop(wrong-11, be-10)
xcomp(have-8, wrong-11)
advmod(wrong-11, First-13)
det(areas-16, the-15)
nsubj(depend-30, areas-16)
prep_of(areas-16, science-18)
det(method-22, the-20)
amod(method-22, scientific-21)
conj_and(areas-16, method-22)
nsubjpass(affected-26, method-22)
nsubj(depend-30, method-22)
aux(affected-26, would-24)
auxpass(affected-26, be-25)
rcmod(method-22, affected-26)
det(revelation-29, a-28)
agent(affected-26, revelation-29)
root(ROOT-0, depend-30)
advmod(depend-30, entirely-31)
det(powers-35, the-33)
amod(powers-35, specific-34)
prep_on(depend-30, powers-35)
det(g-38, the-37)
prep_of(powers-35, g-38)
appos(g-38, G-40)
partmod(g-38, od-42)
prep_in(od-42, question-44)

(ROOT
  (S
    (ADVP (LS Second))
    (, ,)
    (NP
      (NP (JJS most))
      (PP (IN of)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP we))
            (ADVP (RB currently))
            (VP (`` ``) (VBP know) ('' '')
              (PP (IN as)
                (NP (NNS scientists))))))))
    (VP (VBZ is)
      (ADJP (JJ wrong)
        (PP (TO to)
          (NP (DT some) (NN degree)))))
    (. .)))

advmod(wrong-14, Second-1)
nsubj(wrong-14, most-3)
dobj(know-9, what-5)
nsubj(know-9, we-6)
advmod(know-9, currently-7)
prepc_of(most-3, know-9)
prep_as(know-9, scientists-12)
cop(wrong-14, is-13)
root(ROOT-0, wrong-14)
det(degree-17, some-16)
prep_to(wrong-14, degree-17)

(ROOT
  (S
    (S
      (NP (NNP Science))
      (VP
        (VP (VBZ is)
          (NP
            (NP (DT a) (NN path))
            (PP (TO to)
              (NP (NN understanding)))))
        (, ,)
        (CC but)
        (VP (VBP do) (RB n't)
          (VP (VB get)
            (PP (IN on)
              (NP
                (NP (DT a) (JJ high) (NN horse))
                (PP (IN about)
                  (NP (WRB how) (JJ great)))))))))
    (NP (PRP we))
    (VP (VBP are))
    (. .)))

nsubj(path-4, Science-1)
nsubj(get-11, Science-1)
cop(path-4, is-2)
det(path-4, a-3)
dep(are-20, path-4)
prep_to(path-4, understanding-6)
aux(get-11, do-9)
neg(get-11, n't-10)
conj_but(path-4, get-11)
dep(are-20, get-11)
det(horse-15, a-13)
amod(horse-15, high-14)
prep_on(get-11, horse-15)
advmod(great-18, how-17)
prep_about(horse-15, great-18)
nsubj(are-20, we-19)
root(ROOT-0, are-20)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (ADVP (RB just))
      (VP (VBG getting)
        (S
          (VP (VBN started)))))
    (. .)))

nsubj(getting-4, We-1)
aux(getting-4, are-2)
advmod(getting-4, just-3)
root(ROOT-0, getting-4)
dep(getting-4, started-5)

(ROOT
  (S ('' '')
    (S
      (NP (NNP Absent))
      (VP (VBZ proof)
        (SBAR (IN that)
          (S
            (NP
              (NP (NN matter))
              (CC and)
              (NP (NNP Energy)))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN created))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT no) (NN reason)
        (S
          (VP (TO to)
            (VP (VB doubt)
              (NP (NN science))
              (PP (IN in)
                (NP
                  (NP (NN favor))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (NN wish))
                      ('' '')
                      (SBAR
                        (S
                          (NP (PRP We))
                          (VP (VBP know)
                            (SBAR (IN that)
                              (S
                                (NP (NN matter)
                                  (CC and)
                                  (NN energy))
                                (VP (MD can)
                                  (VP (VB interconvert)))))))))))))))))
    (. .)))

nsubj(proof-3, Absent-2)
ccomp(is-13, proof-3)
complm(created-10, that-4)
nsubjpass(created-10, matter-5)
conj_and(matter-5, Energy-7)
nsubjpass(created-10, Energy-7)
aux(created-10, can-8)
auxpass(created-10, be-9)
ccomp(proof-3, created-10)
expl(is-13, there-12)
root(ROOT-0, is-13)
det(reason-15, no-14)
nsubj(is-13, reason-15)
aux(doubt-17, to-16)
infmod(reason-15, doubt-17)
dobj(doubt-17, science-18)
prep_in(doubt-17, favor-20)
det(wish-23, a-22)
prep_of(favor-20, wish-23)
nsubj(know-26, We-25)
rcmod(wish-23, know-26)
complm(interconvert-32, that-27)
nsubj(interconvert-32, matter-28)
conj_and(matter-28, energy-30)
nsubj(interconvert-32, energy-30)
aux(interconvert-32, can-31)
ccomp(know-26, interconvert-32)

(ROOT
  (S
    (NP
      (NP (DT A) (NN lot))
      (PP (IN of)
        (NP (NNS miracles))))
    (VP (MD could)
      (VP (VB happen)
        (NP (DT that) (NN way))))
    (. .)))

det(lot-2, A-1)
nsubj(happen-6, lot-2)
prep_of(lot-2, miracles-4)
aux(happen-6, could-5)
root(ROOT-0, happen-6)
det(way-8, that-7)
dobj(happen-6, way-8)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (VP (VBD pointed)
          (PRT (RP out))
          (PP (IN by)
            (NP (NN jdefriez))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (DT a) (JJ false) (NN premise)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (NN god))
                  (VP (VBZ is)
                    (ADJP (JJ equivalent)
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN creation))
                          (PP (IN of)
                            (NP (NN matter)
                              (CC and)
                              (NN energy))))))))))))))
    (. .)))

mark(pointed-2, As-1)
advcl(premise-11, pointed-2)
prt(pointed-2, out-3)
prep_by(pointed-2, jdefriez-5)
nsubj(premise-11, it-7)
cop(premise-11, is-8)
det(premise-11, a-9)
amod(premise-11, false-10)
root(ROOT-0, premise-11)
aux(say-13, to-12)
infmod(premise-11, say-13)
complm(equivalent-17, that-14)
nsubj(equivalent-17, god-15)
cop(equivalent-17, is-16)
ccomp(say-13, equivalent-17)
det(creation-20, the-19)
prep_to(equivalent-17, creation-20)
prep_of(creation-20, matter-22)
prep_of(creation-20, energy-24)
conj_and(matter-22, energy-24)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (VP (VBG refuting)
                (NP (DT a) (JJ specific) (NN God))))))))
    (, ,)
    (ADVP (RB perhaps))
    (S
      (NP (DT the) (NNP God))
      (VP (VBD required)
        (S
          (VP (TO to)
            (VP (VB accomplish)
              (NP
                (NP (DT the) (JJ literal) (NN word))
                (PP (IN of)
                  (NP (DT the) (NN bible)))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
nsubj(refuting-5, you-3)
aux(refuting-5, are-4)
ccomp(believe-2, refuting-5)
det(God-8, a-6)
amod(God-8, specific-7)
dobj(refuting-5, God-8)
advmod(believe-2, perhaps-10)
det(God-12, the-11)
nsubj(required-13, God-12)
xsubj(accomplish-15, God-12)
ccomp(believe-2, required-13)
aux(accomplish-15, to-14)
xcomp(required-13, accomplish-15)
det(word-18, the-16)
amod(word-18, literal-17)
dobj(accomplish-15, word-18)
det(bible-21, the-20)
prep_of(word-18, bible-21)

