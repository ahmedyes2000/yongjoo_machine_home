(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP
        (ADVP (RB possibly))
        (VB state)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN existence))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN universe))
                  (ADVP (PRP itself)))))
            (VP (VBZ is)
              (NP
                (NP (NN reason))
                (ADJP (JJ enough)
                  (S
                    (VP (TO to)
                      (VP (VB believe)
                        (PP (IN in)
                          (NP (DT a) (JJ powerful) (, ,) (JJ supernatural) (NN being)))))))))))))
    (. .)))

advmod(state-5, How-1)
aux(state-5, can-2)
nsubj(state-5, you-3)
advmod(state-5, possibly-4)
root(ROOT-0, state-5)
complm(reason-14, that-6)
det(existence-8, the-7)
nsubj(reason-14, existence-8)
det(universe-11, the-10)
prep_of(existence-8, universe-11)
advmod(universe-11, itself-12)
cop(reason-14, is-13)
ccomp(state-5, reason-14)
amod(reason-14, enough-15)
aux(believe-17, to-16)
xcomp(enough-15, believe-17)
det(being-23, a-19)
amod(being-23, powerful-20)
amod(being-23, supernatural-22)
prep_in(believe-17, being-23)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD stated)
        (PP (IN in)
          (NP (DT a) (NN comment)))
        (SBAR (IN that) (`` ``)
          (S
            (NP
              (NP (NN everything))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ begins)
                    (S
                      (VP (TO to)
                        (VP (VB exist))))))))
            (VP (VBZ has)
              (NP (DT a) (NN cause))))
          ('' ''))))
    (, ,) (IN so)
    (S
      (NP (WDT what))
      (VP (VBD caused)
        (NP (NN god))
        (S
          (VP (TO to)
            (VP (VB exist))))))
    (. ?)))

nsubj(stated-2, You-1)
root(ROOT-0, stated-2)
det(comment-5, a-4)
prep_in(stated-2, comment-5)
complm(has-13, that-6)
nsubj(begins-10, everything-8)
nsubj(has-13, everything-8)
rcmod(everything-8, begins-10)
aux(exist-12, to-11)
xcomp(begins-10, exist-12)
ccomp(stated-2, has-13)
det(cause-15, a-14)
dobj(has-13, cause-15)
dep(stated-2, so-18)
nsubj(caused-20, what-19)
ccomp(stated-2, caused-20)
dobj(caused-20, god-21)
aux(exist-23, to-22)
xcomp(caused-20, exist-23)

(ROOT
  (S
    (S (, ,)
      (SBAR (IN Unless)
        (S
          (NP (PRP you))
          (VP (VBP mean)
            (SBAR
              (S
                (NP (PRP he))
                (VP
                  (VP (VBZ is)
                    (NP (DT an) (`` ``) (JJ actual) (NN infinite) ('' '')))
                  (, ,)
                  (CC but)
                  (VP (VBP wait))))))))
      (, ,)
      (NP (PRP you))
      (ADVP (RB also))
      (VP (VBD stated)
        (SBAR (IN that) (`` ``)
          (S
            (NP (DT an) (JJ actual) (NN infinite))
            (VP (MD ca) (RB n't)
              (VP (VB exist))))
          ('' ''))))
    (. .)))

mark(mean-4, Unless-2)
nsubj(mean-4, you-3)
advcl(stated-18, mean-4)
nsubj(infinite-10, he-5)
nsubj(wait-14, he-5)
cop(infinite-10, is-6)
det(infinite-10, an-7)
amod(infinite-10, actual-9)
ccomp(mean-4, infinite-10)
ccomp(mean-4, wait-14)
conj_but(infinite-10, wait-14)
nsubj(stated-18, you-16)
advmod(stated-18, also-17)
root(ROOT-0, stated-18)
complm(exist-26, that-19)
det(infinite-23, an-21)
amod(infinite-23, actual-22)
nsubj(exist-26, infinite-23)
aux(exist-26, ca-24)
neg(exist-26, n't-25)
ccomp(stated-18, exist-26)

(ROOT
  (SINV
    (ADVP (PRP You) (RB even))
    (VP (VBD defined)
      (NP (NNP God))
      (PP (IN as) ('' '')
        (NP (NNP Infinitely))))
    (NP
      (NP (JJ perfect) (NN creator)
        (CC and)
        (NN sustainer))
      (PP (IN of)
        (NP (DT the) (NN universe))))
    (: ...)))

dep(even-2, You-1)
advmod(defined-3, even-2)
root(ROOT-0, defined-3)
dobj(defined-3, God-4)
prep_as(defined-3, Infinitely-7)
amod(creator-9, perfect-8)
nsubj(defined-3, creator-9)
nsubj(defined-3, sustainer-11)
conj_and(creator-9, sustainer-11)
det(universe-14, the-13)
prep_of(creator-9, universe-14)

(ROOT
  (S ('' '')
    (S
      (NP
        (SBAR
          (SBAR
            (SINV
              (VP (VB \/) (-RRB- -RRB-)
                (NP (NNS \/))
                (-RRB- -RRB-))
              (NP
                (NP (PRP It))
                (SBAR
                  (S
                    (VP (VBZ appears)))))))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP are)
                (VP (VBG contradicting)
                  (NP (PRP yourself))))))))
      (VP (VBZ whilst)
        (NP (VBG stumbling))))
    (IN over)
    (S
      (NP (PRP$ your))
      (VP (VBZ pathetic)
        (NP (NNS arguments))))
    (. .)))

nsubj(whilst-13, \/-2)
dobj(\/-2, \/-4)
nsubj(\/-2, It-6)
rcmod(It-6, appears-7)
dep(contradicting-11, that-8)
nsubj(contradicting-11, you-9)
aux(contradicting-11, are-10)
dep(\/-2, contradicting-11)
dobj(contradicting-11, yourself-12)
root(ROOT-0, whilst-13)
dobj(whilst-13, stumbling-14)
dep(whilst-13, over-15)
nsubj(pathetic-17, your-16)
ccomp(whilst-13, pathetic-17)
dobj(pathetic-17, arguments-18)

(ROOT
  (S
    (FRAG
      (VP
        (VP (VB \/) (-RRB- -RRB-)
          (NP (NNS \/))
          (-RRB- -RRB-))
        (SBAR
          (WHADVP (WRB How))
          (S
            (VP (VBP do)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP know)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (VP (VBN god)
                            (SBAR (IN that)
                              (S
                                (NP (PRP you))
                                (VP (VBD had)
                                  (NP (DT an) (NN encounter))
                                  (PP (IN with)))))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD could)
      (VP (VB have)
        (VP (VBN been)
          (NP
            (NP (DT a) (NN state))
            (PP (IN of)
              (NP
                (NP (NN semi) (NN consciousness))
                (VP (VBN brought)
                  (PP (IN on) (IN by)
                    (NP
                      (NP (DT a) (NN range))
                      (PP (IN of)
                        (NP (JJ physiological) (NNS causes))))))))))))
    (. .)))

dep(state-24, \/-1)
dobj(\/-1, \/-3)
advmod(do-6, How-5)
ccomp(\/-1, do-6)
nsubj(know-8, you-7)
ccomp(do-6, know-8)
nsubjpass(god-11, it-9)
auxpass(god-11, was-10)
ccomp(know-8, god-11)
complm(had-14, that-12)
nsubj(had-14, you-13)
ccomp(god-11, had-14)
det(encounter-16, an-15)
dobj(had-14, encounter-16)
prep(had-14, with-17)
nsubj(state-24, it-19)
aux(state-24, could-20)
aux(state-24, have-21)
cop(state-24, been-22)
det(state-24, a-23)
root(ROOT-0, state-24)
nn(consciousness-27, semi-26)
prep_of(state-24, consciousness-27)
partmod(consciousness-27, brought-28)
dep(brought-28, on-29)
det(range-32, a-31)
agent(brought-28, range-32)
amod(causes-35, physiological-34)
prep_of(range-32, causes-35)

(ROOT
  (S
    (SINV
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-)
        (ADVP (RB Then)))
      (NP
        (NP (RB there))
        (SBAR
          (S
            (VP (VBZ is)
              (NP (PRP$ your) (NN argument))
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN universe))
                  (VP (VBZ is)
                    (ADJP (JJ complex))))))))))
    (, ,)
    (ADVP (RB therefore))
    (S
      (NP (NN god))
      (VP (VBD made)
        (NP (PRP it))))
    (. .)))

dep(made-18, \/-1)
dobj(\/-1, \/-3)
advmod(\/-1, Then-5)
nsubj(\/-1, there-6)
cop(argument-9, is-7)
poss(argument-9, your-8)
rcmod(there-6, argument-9)
complm(complex-14, that-10)
det(universe-12, the-11)
nsubj(complex-14, universe-12)
cop(complex-14, is-13)
ccomp(argument-9, complex-14)
advmod(made-18, therefore-16)
nsubj(made-18, god-17)
root(ROOT-0, made-18)
dobj(made-18, it-19)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ perfect) (NN example))
          (PP (IN of)
            (NP (JJ imperfect) (NN logic))))))
    (, ,)
    (S
      (NP (RB here))
      (VP (VBZ 's)
        (NP (DT an) (NN analogy))
        (: :)
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (NNP Ben))
            (VP (VBZ sleeps)
              (PRT (RP in)))))))
    (, ,)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (ADJP (JJ late)
          (PP (IN for)
            (NP (NN school))))))
    (, ,)
    (S
      (NP (NNP Ben))
      (VP (VBZ is)
        (ADJP (JJ late)
          (PP (IN for)
            (NP (NN school))))))
    (, ,)
    (S
      (ADVP (RB therefore))
      (, ,)
      (NP (PRP he))
      (VP (MD must)
        (VP (VB have)
          (VP (VBD slept)
            (PRT (RP in))))))
    (. .)))

nsubj(example-5, This-1)
cop(example-5, is-2)
det(example-5, a-3)
amod(example-5, perfect-4)
root(ROOT-0, example-5)
amod(logic-8, imperfect-7)
prep_of(example-5, logic-8)
nsubj(analogy-13, here-10)
cop(analogy-13, 's-11)
det(analogy-13, an-12)
ccomp(example-5, analogy-13)
advmod(sleeps-17, When-15)
nsubj(sleeps-17, Ben-16)
advcl(analogy-13, sleeps-17)
parataxis(analogy-13, sleeps-17)
prt(sleeps-17, in-18)
nsubj(late-22, he-20)
cop(late-22, is-21)
ccomp(example-5, late-22)
prep_for(late-22, school-24)
nsubj(late-28, Ben-26)
cop(late-28, is-27)
ccomp(example-5, late-28)
prep_for(late-28, school-30)
advmod(slept-37, therefore-32)
nsubj(slept-37, he-34)
aux(slept-37, must-35)
aux(slept-37, have-36)
ccomp(example-5, slept-37)
prt(slept-37, in-38)

(ROOT
  (S
    (NP
      (NP (DT This) (NN kind))
      (PP (IN of)
        (NP (NN logic))))
    (VP (VBZ is)
      (VP (VBN stated)
        (PP
          (PP (IN without)
            (NP
              (NP (JJ first) (NN thinking))
              (PP (IN about)
                (NP (JJ other) (NNS possibilities)))))
          (CC and)
          (PP (IN without)
            (S
              (VP (VBG thinking)
                (NP (PRP it))
                (ADVP (RB through))
                (, ,)
                (ADVP (RB just))
                (PP (IN like)
                  (NP (PRP$ your) (NN argument)))))))))))

det(kind-2, This-1)
nsubjpass(stated-6, kind-2)
prep_of(kind-2, logic-4)
auxpass(stated-6, is-5)
root(ROOT-0, stated-6)
amod(thinking-9, first-8)
prep_without(stated-6, thinking-9)
amod(possibilities-12, other-11)
prep_about(thinking-9, possibilities-12)
prep_without(stated-6, thinking-15)
conj_and(thinking-9, thinking-15)
dobj(thinking-15, it-16)
advmod(thinking-15, through-17)
advmod(thinking-15, just-19)
poss(argument-22, your-21)
prep_like(thinking-15, argument-22)

