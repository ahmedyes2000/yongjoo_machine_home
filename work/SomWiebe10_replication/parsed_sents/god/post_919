(ROOT
  (S
    (NP (NNP GOD))
    (VP (VBZ does)
      (VP (VB exist)))
    (. !)))

nsubj(exist-3, GOD-1)
aux(exist-3, does-2)
root(ROOT-0, exist-3)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (S
          (NP (PRP you))
          (ADJP (JJ pray)
            (PP (IN for)
              (NP (NN something)))))
        (CC and)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB get)
              (UCP
                (PP (IN at)
                  (NP (DT all)))
                (CC or)
                (ADVP (RB right) (RB away))))))))
    (, ,) (VBZ does)
    (NP (DT that))
    (VP (VB mean)
      (SBAR (IN that)
        (S
          (NP (NNP God))
          (VP (VBP do) (RB n't)
            (VP (VB exist) (, ,)
              (NP (NNP No)))))))
    (. !)))

mark(pray-3, If-1)
dep(pray-3, you-2)
advcl(mean-19, pray-3)
prep_for(pray-3, something-5)
nsubj(get-10, you-7)
aux(get-10, do-8)
neg(get-10, n't-9)
conj_and(pray-3, get-10)
advcl(mean-19, get-10)
dep(get-10, at-11)
pobj(at-11, all-12)
advmod(away-15, right-14)
dep(get-10, away-15)
conj_or(at-11, away-15)
aux(mean-19, does-17)
nsubj(mean-19, that-18)
root(ROOT-0, mean-19)
complm(exist-24, that-20)
nsubj(exist-24, God-21)
aux(exist-24, do-22)
neg(exist-24, n't-23)
ccomp(mean-19, exist-24)
dobj(exist-24, No-26)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB just))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (ADVP (RB maybe))
          (NP (PRP you))
          (VP (VBP are) (RB not)
            (VP (VBN supposed)
              (UCP
                (S
                  (VP (TO to)
                    (VP (VB receive)
                      (NP (PRP it)))))
                (CC or)
                (PP (RB not) (IN at)
                  (NP (DT the) (NN moment)))))))))
    (. .)))

nsubj(means-3, It-1)
advmod(means-3, just-2)
root(ROOT-0, means-3)
complm(supposed-9, that-4)
advmod(supposed-9, maybe-5)
nsubjpass(supposed-9, you-6)
auxpass(supposed-9, are-7)
neg(supposed-9, not-8)
ccomp(means-3, supposed-9)
aux(receive-11, to-10)
dep(supposed-9, receive-11)
dobj(receive-11, it-12)
neg(at-15, not-14)
dep(supposed-9, at-15)
conj_or(receive-11, at-15)
det(moment-17, the-16)
pobj(at-15, moment-17)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (SBAR (IN like)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (S
                  (NP (PRP you))
                  (VP (VBD were)
                    (ADJP (JJ little))))
                (CC and)
                (S
                  (S
                    (NP (PRP you))
                    (VP (VBD asked)
                      (NP (PRP$ your) (NNS parents))
                      (PP (IN for)
                        (NP (NN something)))))
                  (CC and)
                  (S
                    (NP (PRP they))
                    (VP (VBD said)
                      (ADVP (RB no)
                        (CC or)
                        (RB not))
                      (ADVP (RB yet))
                      (PP
                        (ADVP (RB maybe))
                        (IN for)
                        (NP (NNP Christmas))))))))
            (, ,)
            (VP (VBZ does)
              (SBAR (IN that)
                (S
                  (S
                    (VP (VB mean)
                      (NP (PRP$ your) (NNS parents))))
                  (VP (VBP are) (RB n't)
                    (ADJP (JJ real))))))))))
    (, ,)
    (FRAG
      (INTJ (UH No)))
    (. !)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
mark(does-26, like-3)
advmod(little-7, when-4)
nsubj(little-7, you-5)
cop(little-7, were-6)
advcl(does-26, little-7)
nsubj(asked-10, you-9)
conj_and(little-7, asked-10)
advcl(does-26, asked-10)
poss(parents-12, your-11)
dobj(asked-10, parents-12)
prep_for(asked-10, something-14)
nsubj(said-17, they-16)
conj_and(little-7, said-17)
conj_and(asked-10, said-17)
advmod(said-17, no-18)
advmod(said-17, not-20)
conj_or(no-18, not-20)
advmod(said-17, yet-21)
advmod(said-17, maybe-22)
prep_for(said-17, Christmas-24)
advcl('s-2, does-26)
complm(real-33, that-27)
csubj(real-33, mean-28)
poss(parents-30, your-29)
dobj(mean-28, parents-30)
cop(real-33, are-31)
neg(real-33, n't-32)
ccomp(does-26, real-33)
dep('s-2, No-35)

(ROOT
  (S
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNP K9))
        (, ,)
        (S
          (NP
            (NP (NNP God))
            (SBAR
              (S
                (VP (MD can)
                  (VP (VB raise)
                    (NP (NN someone))
                    (PP (IN from)
                      (NP (DT the) (NN dead))))))))))
      (CC and)
      (VP (VBZ has)
        (S
          (ADVP (RB before))
          (, ,)
          (NP (PRP He))
          (VP (VBZ has)
            (ADVP (RB also))
            (VP (VBN healed)
              (NP (NNS people))
              (PP (IN from)
                (NP
                  (NP (DT all) (NNS sorts))
                  (PP (IN of)
                    (NP (NNS things))))))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, K9-3)
xcomp(\/-1, God-5)
aux(raise-7, can-6)
rcmod(God-5, raise-7)
dobj(raise-7, someone-8)
det(dead-11, the-10)
prep_from(raise-7, dead-11)
conj_and(\/-1, has-13)
advmod(healed-19, before-14)
nsubj(healed-19, He-16)
aux(healed-19, has-17)
advmod(healed-19, also-18)
ccomp(has-13, healed-19)
dobj(healed-19, people-20)
det(sorts-23, all-22)
prep_from(healed-19, sorts-23)
prep_of(sorts-23, things-25)

(ROOT
  (S
    (NP (NNP Believing))
    (VP (VBZ is) (RB not)
      (VP (VBG seeing)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN evidence))
                (PP (IN of)
                  (NP
                    (NP (NNS things))
                    (ADJP (RB not) (VBN seen))))))))))
    (. !)))

nsubj(seeing-4, Believing-1)
aux(seeing-4, is-2)
neg(seeing-4, not-3)
root(ROOT-0, seeing-4)
nsubj(evidence-8, it-5)
cop(evidence-8, is-6)
det(evidence-8, the-7)
ccomp(seeing-4, evidence-8)
prep_of(evidence-8, things-10)
neg(seen-12, not-11)
amod(things-10, seen-12)

(ROOT
  (S
    (VP (VB Pray)
      (CC and)
      (VB ask)
      (NP (NNP God))
      (S
        (VP (TO to)
          (VP
            (VP (VB reveal)
              (NP (PRP Himself))
              (PP (TO to)
                (NP (PRP you))))
            (CC and)
            (VP (VB see)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ happens)))))))))
    (. !)))

root(ROOT-0, Pray-1)
conj_and(Pray-1, ask-3)
dobj(Pray-1, God-4)
aux(reveal-6, to-5)
xcomp(Pray-1, reveal-6)
dobj(reveal-6, Himself-7)
prep_to(reveal-6, you-9)
xcomp(Pray-1, see-11)
conj_and(reveal-6, see-11)
nsubj(happens-13, what-12)
ccomp(see-11, happens-13)

