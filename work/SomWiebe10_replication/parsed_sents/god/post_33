(ROOT
  (S
    (NP (NNP Truth))
    (VP (VBZ is)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD ca) (RB n't)
            (VP (VB prove)
              (NP (PRP it)))))))
    (. .)))

nsubj(is-2, Truth-1)
root(ROOT-0, is-2)
nsubj(prove-6, you-3)
aux(prove-6, ca-4)
neg(prove-6, n't-5)
ccomp(is-2, prove-6)
dobj(prove-6, it-7)

(ROOT
  (S
    (VP (VB Ask)
      (NP (DT any) (NN scientist)))
    (. .)))

root(ROOT-0, Ask-1)
det(scientist-3, any-2)
dobj(Ask-1, scientist-3)

(ROOT
  (S
    (S
      (S (RB Not)
        (VP (VBG saying)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ is) (RB n't)
                (NP (DT a)
                  (ADJP (RB very) (JJ good))
                  (NN theory)))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP mean)
        (SBAR
          (S
            (NP (RB even) (NN gravity))
            (VP (VBZ is)
              (ADVP (RB just))
              (NP (DT a) (NN theory)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB still))
        (ADVP (RB just)
          (NP (DT a) (NN theory)))
        (, ,)
        (FRAG (RB not)
          (NP (NN fact)))))
    (. .)))

neg(saying-2, Not-1)
partmod(mean-12, saying-2)
nsubj(theory-9, it-3)
cop(theory-9, is-4)
neg(theory-9, n't-5)
det(theory-9, a-6)
advmod(good-8, very-7)
amod(theory-9, good-8)
ccomp(saying-2, theory-9)
nsubj(mean-12, I-11)
root(ROOT-0, mean-12)
advmod(gravity-14, even-13)
nsubj(theory-18, gravity-14)
cop(theory-18, is-15)
advmod(theory-18, just-16)
det(theory-18, a-17)
ccomp(mean-12, theory-18)
nsubj(is-22, it-21)
conj_but(mean-12, is-22)
advmod(is-22, still-23)
advmod(is-22, just-24)
det(theory-26, a-25)
pobj(just-24, theory-26)
dep(is-22, not-28)
dep(not-28, fact-29)

(ROOT
  (S
    (ADVP (RB Secondly))
    (, ,)
    (NP
      (NP (DT the) (NN existence))
      (PP (IN of)
        (NP
          (NP (DT a) (JJ diving) (NN being))
          (CC or)
          (NP (NNS beings)))))
    (VP (VBZ does) (RB not)
      (VP (VB require)
        (S
          (NP (PRP it))
          (VP (TO to)
            (VP (VB be)
              (UCP
                (NP (DT a) (JJ Christian) (NN god))
                (, ,)
                (CC or)
                (SBAR (IN for)
                  (S
                    (NP (DT the) (NNP Bible))
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP
                          (ADJP (NN anything) (JJR more))
                          (PP (IN than)
                            (NP (DT a) (NN book))))))))))))))
    (. .)))

advmod(require-13, Secondly-1)
det(existence-4, the-3)
nsubj(require-13, existence-4)
det(being-8, a-6)
amod(being-8, diving-7)
prep_of(existence-4, being-8)
prep_of(existence-4, beings-10)
conj_or(being-8, beings-10)
aux(require-13, does-11)
neg(require-13, not-12)
root(ROOT-0, require-13)
nsubj(god-19, it-14)
aux(god-19, to-15)
cop(god-19, be-16)
det(god-19, a-17)
amod(god-19, Christian-18)
xcomp(require-13, god-19)
mark(anything-27, for-22)
det(Bible-24, the-23)
nsubj(anything-27, Bible-24)
aux(anything-27, to-25)
cop(anything-27, be-26)
xcomp(require-13, anything-27)
conj_or(god-19, anything-27)
infmod(god-19, anything-27)
dep(anything-27, more-28)
det(book-31, a-30)
prep_than(anything-27, book-31)

(ROOT
  (S
    (ADVP (RB Furthermore))
    (, ,)
    (NP
      (ADJP (JJR more)
        (CC and)
        (JJR more))
      (NNS scientists))
    (VP (VBP are)
      (VP (VBG beginning)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (PP (IN for)
                    (NP (DT the) (NN universe)
                      (S
                        (VP (TO to)
                          (VP (VB have)
                            (VP (VBN occured)))))))
                  (, ,)
                  (NP (EX there))
                  (VP (MD would)
                    (VP (VB have)
                      (VP (VBN had)
                        (S
                          (VP (TO to)
                            (VP (VB have)
                              (VP (VBN been)
                                (NP
                                  (NP (DT a) (NN cause))
                                  (PP (IN for)
                                    (NP (DT the) (NNP Big) (NNP Bang))))))))))))))))))
    (. .)))

advmod(beginning-8, Furthermore-1)
amod(scientists-6, more-3)
conj_and(more-3, more-5)
amod(scientists-6, more-5)
nsubj(beginning-8, scientists-6)
xsubj(say-10, scientists-6)
aux(beginning-8, are-7)
root(ROOT-0, beginning-8)
aux(say-10, to-9)
xcomp(beginning-8, say-10)
complm(had-22, that-11)
det(universe-14, the-13)
prep_for(had-22, universe-14)
aux(occured-17, to-15)
aux(occured-17, have-16)
infmod(universe-14, occured-17)
expl(had-22, there-19)
xsubj(cause-27, there-19)
aux(had-22, would-20)
aux(had-22, have-21)
ccomp(say-10, had-22)
aux(cause-27, to-23)
aux(cause-27, have-24)
cop(cause-27, been-25)
det(cause-27, a-26)
xcomp(had-22, cause-27)
det(Bang-31, the-29)
nn(Bang-31, Big-30)
prep_for(cause-27, Bang-31)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (SBAR (IN while)
      (S
        (NP (NNS experiments))
        (VP (VBP have)
          (VP (VBN shown)
            (SBAR (IN that)
              (S
                (PP (IN in)
                  (NP
                    (NP (NNS stimulations))
                    (PP (IN of)
                      (NP
                        (NP (NNP Earth) (POS 's))
                        (JJ early) (NNS conditions)))))
                (, ,)
                (NP
                  (NP (JJ simple) (JJ amino) (NNS acids))
                  (, ,)
                  (NP
                    (NP (DT the) (NN building) (NNS blocks))
                    (PP (IN of)
                      (NP (NN life))))
                  (, ,))
                (VP (MD will)
                  (ADVP (RB indeed))
                  (VP (VB form)))))))))
    (, ,)
    (NP (NNS statistics))
    (VP (VBP have)
      (VP (VBN demonstrated)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NNS chances))
              (PP (IN of)
                (NP
                  (NP (DT these) (JJ amino) (NNS acids))
                  (VP (VBG happening)
                    (S
                      (VP (TO to)
                        (VP (VB line)
                          (PRT (RP up))
                          (PP (IN in)
                            (NP (RB just) (DT the) (JJ right) (NN way)))
                          (S
                            (VP (TO to)
                              (VP (VB form)
                                (NP (DT a) (NN protein))))))))))))
            (VP (VBP are)
              (ADJP (RB so) (JJ small)
                (SBAR (IN as)
                  (S
                    (VP (TO to)
                      (VP (VB make)
                        (S
                          (NP (PRP it))
                          (ADJP (RB virtually) (JJ impossible)))))))))))))
    (. .)))

advmod(demonstrated-32, Also-1)
mark(shown-6, while-3)
nsubj(shown-6, experiments-4)
aux(shown-6, have-5)
advcl(demonstrated-32, shown-6)
complm(form-28, that-7)
prep_in(form-28, stimulations-9)
poss(conditions-14, Earth-11)
amod(conditions-14, early-13)
prep_of(stimulations-9, conditions-14)
amod(acids-18, simple-16)
amod(acids-18, amino-17)
nsubj(form-28, acids-18)
det(blocks-22, the-20)
nn(blocks-22, building-21)
appos(acids-18, blocks-22)
prep_of(blocks-22, life-24)
aux(form-28, will-26)
advmod(form-28, indeed-27)
ccomp(shown-6, form-28)
nsubj(demonstrated-32, statistics-30)
aux(demonstrated-32, have-31)
root(ROOT-0, demonstrated-32)
complm(small-55, that-33)
det(chances-35, the-34)
nsubj(small-55, chances-35)
det(acids-39, these-37)
amod(acids-39, amino-38)
prep_of(chances-35, acids-39)
xsubj(line-42, acids-39)
partmod(acids-39, happening-40)
aux(line-42, to-41)
xcomp(happening-40, line-42)
prt(line-42, up-43)
advmod(way-48, just-45)
det(way-48, the-46)
amod(way-48, right-47)
prep_in(line-42, way-48)
aux(form-50, to-49)
xcomp(line-42, form-50)
det(protein-52, a-51)
dobj(form-50, protein-52)
cop(small-55, are-53)
advmod(small-55, so-54)
ccomp(demonstrated-32, small-55)
mark(make-58, as-56)
aux(make-58, to-57)
dep(small-55, make-58)
nsubj(impossible-61, it-59)
advmod(impossible-61, virtually-60)
xcomp(make-58, impossible-61)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is) (RB n't)
        (NP (NN opinion))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ has)
            (VP (VBN been)
              (VP (VBN shown)
                (PP (IN in)
                  (NP (NNS experiments)
                    (CC and)
                    (NNS calculations)))
                (PP (IN by)
                  (NP (JJ real) (NNS scientists)))))))))
    (. .)))

nsubj(opinion-4, This-1)
cop(opinion-4, is-2)
neg(opinion-4, n't-3)
ccomp(is-7, opinion-4)
nsubj(is-7, it-6)
root(ROOT-0, is-7)
nsubjpass(shown-11, what-8)
aux(shown-11, has-9)
auxpass(shown-11, been-10)
ccomp(is-7, shown-11)
prep_in(shown-11, experiments-13)
prep_in(shown-11, calculations-15)
conj_and(experiments-13, calculations-15)
amod(scientists-18, real-17)
agent(shown-11, scientists-18)

(ROOT
  (S
    (NP (NNP Intelligent) (NNP Design))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP (DT a) (NN theory))
        (, ,) (RB not)
        (NP (DT some) (NN mumbo) (JJ jumbo))))
    (. .)))

nn(Design-2, Intelligent-1)
nsubj(theory-6, Design-2)
cop(theory-6, is-3)
advmod(theory-6, also-4)
det(theory-6, a-5)
root(ROOT-0, theory-6)
neg(theory-6, not-8)
det(mumbo-10, some-9)
dep(theory-6, mumbo-10)
amod(mumbo-10, jumbo-11)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is) (RB not)
        (NP (DT an) (JJ invented) (NN explaination))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ does)
        (VP (VB have)
          (NP (NN evidence)))))
    (. .)))

nsubj(explaination-6, It-1)
cop(explaination-6, is-2)
neg(explaination-6, not-3)
det(explaination-6, an-4)
amod(explaination-6, invented-5)
root(ROOT-0, explaination-6)
nsubj(have-11, it-9)
aux(have-11, does-10)
conj_and(explaination-6, have-11)
dobj(have-11, evidence-12)

