(ROOT
  (NP
    (NP (RB Just) (DT a) (NN flaw))
    (PP (IN with)
      (NP (PRP$ your) (JJ initial) (NN argument)))
    (. .)))

advmod(flaw-3, Just-1)
det(flaw-3, a-2)
root(ROOT-0, flaw-3)
poss(argument-7, your-5)
amod(argument-7, initial-6)
prep_with(flaw-3, argument-7)

(ROOT
  (S ('' '')
    (NP (NNP Suppose) (PRP they))
    (VP (VBP are))
    (. .)))

nsubj(are-4, Suppose-2)
dep(Suppose-2, they-3)
root(ROOT-0, are-4)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (VP (VBP suppose)
            (SBAR
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP
                    (NP (DT no) (NNP Uncaused) (NNP Being))
                    (, ,)
                    (NP (DT no) (NNP God))))))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
ccomp(is-2, suppose-4)
expl(is-6, there-5)
ccomp(suppose-4, is-6)
det(Being-9, no-7)
nn(Being-9, Uncaused-8)
nsubj(is-6, Being-9)
det(God-12, no-11)
appos(Being-9, God-12)

(ROOT
  (S (RB Then)
    (NP (NN nothing))
    (VP (MD could)
      (VP (VB exist)
        (ADVP (RB right) (RB now))))
    (. .)))

advmod(exist-4, Then-1)
nsubj(exist-4, nothing-2)
aux(exist-4, could-3)
root(ROOT-0, exist-4)
advmod(now-6, right-5)
advmod(exist-4, now-6)

(ROOT
  (S
    (PP (IN For)
      (NP (NNP remember)))
    (, ,)
    (PP (IN on)
      (NP (DT the) (JJ no-God) (NNS hypothesis)))
    (, ,)
    (NP (DT all) (NNS things))
    (VP (VBP need)
      (NP
        (NP (DT a) (JJ present) (NN cause) (NN outside))
        (PP (IN of)
          (NP (PRP themselves))))
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP (VB exist))))))
    (. .)))

prep_for(need-11, remember-2)
det(hypothesis-7, the-5)
amod(hypothesis-7, no-God-6)
prep_on(need-11, hypothesis-7)
det(things-10, all-9)
nsubj(need-11, things-10)
root(ROOT-0, need-11)
det(outside-15, a-12)
amod(outside-15, present-13)
nn(outside-15, cause-14)
dobj(need-11, outside-15)
prep_of(outside-15, themselves-17)
mark(exist-21, in-18)
dep(exist-21, order-19)
aux(exist-21, to-20)
purpcl(need-11, exist-21)

(ROOT
  (S ('' '')
    (NP (DT That))
    (VP (VBZ 's)
      (VP (VBG assuming)
        (NP
          (NP (NN time))
          (SBAR
            (S
              (VP (VBZ has)
                (NP (DT a) (JJ finite) (NN beginning))))))))
    (. .)))

nsubj(assuming-4, That-2)
aux(assuming-4, 's-3)
root(ROOT-0, assuming-4)
dobj(assuming-4, time-5)
rcmod(time-5, has-6)
det(beginning-9, a-7)
amod(beginning-9, finite-8)
dobj(has-6, beginning-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (UCP
            (SBAR (IN that)
              (S
                (NP (NNP God))
                (VP
                  (VP (VBZ is))
                  (CC and)
                  (ADVP (RB always))
                  (VP (VBD was)))))
            (, ,)
            (CC and)
            (S
              (VP (VBG considering)
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP (VBP do) (RB n't)
                        (VP (VB see)
                          (NP
                            (NP (NN time))
                            (VP (VBG having)
                              (NP (DT an) (NN end))))))))
                  (, ,)
                  (ADVP (RB then))
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (VP (VBZ does)
                        (NP (NN time))
                        (PRN (-LRB- -LRB-)
                          (NP
                            (NP (DT an) (JJ infinite) (NN dimension))
                            (, ,)
                            (ADVP (RB therefore)))
                          (-RRB- -RRB-))))))))))))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP (DT a) (NN beginning))))))
    (. ?)))

mark(believe-3, If-1)
nsubj(believe-3, you-2)
csubj(have-34, believe-3)
complm(is-6, that-4)
nsubj(is-6, God-5)
nsubj(was-9, God-5)
nsubj(considering-12, God-5)
dep(believe-3, is-6)
dep(believe-3, always-8)
advmod(is-6, always-8)
conj_and(is-6, always-8)
dep(believe-3, was-9)
conj_and(is-6, was-9)
dep(believe-3, considering-12)
conj_and(is-6, considering-12)
dep(see-17, that-13)
nsubj(see-17, we-14)
aux(see-17, do-15)
neg(see-17, n't-16)
dep(considering-12, see-17)
dobj(see-17, time-18)
partmod(time-18, having-19)
det(end-21, an-20)
dobj(having-19, end-21)
advmod(see-17, then-23)
advmod(does-25, why-24)
dep(see-17, does-25)
dobj(does-25, time-26)
det(dimension-30, an-28)
amod(dimension-30, infinite-29)
dep(does-25, dimension-30)
advmod(dimension-30, therefore-32)
root(ROOT-0, have-34)
aux(have-36, to-35)
xcomp(have-34, have-36)
det(beginning-38, a-37)
dobj(have-36, beginning-38)

