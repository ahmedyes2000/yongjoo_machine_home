(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ
      (VP (VBZ evidence)))
    (. ?)))

nsubj(evidence-3, What-2)
root(ROOT-0, evidence-3)

(ROOT
  (S (`` ``)
    (PP (IN In)
      (NP (JJ broad) (NNS terms)))
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (JJ fossil) (NN record))
          (, ,)
          (NP
            (NP (JJ genetic) (NN analysis))
            (PP (IN of)
              (NP (JJ modern) (NNS species)))))
        (, ,)
        (NP
          (NP (DT the) (NN result))
          (PP (IN of)
            (NP (JJ biological) (NN experimentation))))
        (, ,)
        (NP
          (NP (DT the) (NN emergence))
          (PP (IN of)
            (NP
              (NP (JJ new) (NNS species))
              (PP (IN in)
                (NP
                  (NP (NNS environments))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP have)
                        (ADVP (RB only))
                        (VP (VBN existed)
                          (PP (IN for)
                            (NP
                              (NP (DT a) (JJ short) (NN period))
                              (PP (IN of)
                                (NP (NN time))))))))))))))))
    (. .)))

amod(terms-4, broad-3)
prep_in(is-6, terms-4)
expl(is-6, there-5)
root(ROOT-0, is-6)
det(record-9, the-7)
amod(record-9, fossil-8)
nsubj(is-6, record-9)
amod(analysis-12, genetic-11)
appos(record-9, analysis-12)
amod(species-15, modern-14)
prep_of(analysis-12, species-15)
det(result-18, the-17)
appos(record-9, result-18)
amod(experimentation-21, biological-20)
prep_of(result-18, experimentation-21)
det(emergence-24, the-23)
appos(record-9, emergence-24)
amod(species-27, new-26)
prep_of(emergence-24, species-27)
prep_in(species-27, environments-29)
nsubj(existed-33, environments-29)
aux(existed-33, have-31)
advmod(existed-33, only-32)
rcmod(environments-29, existed-33)
det(period-37, a-35)
amod(period-37, short-36)
prep_for(existed-33, period-37)
prep_of(period-37, time-39)

(ROOT
  (S ('' '')
    (ADVP
      (ADVP (RB Supporter))
      (CC or)
      (ADVP (RB not)))
    (, ,)
    (NP (DT the) (NN evidence))
    (VP (VBZ is)
      (ADVP (RB there)))
    (. .)))

advmod(is-8, Supporter-2)
conj_or(Supporter-2, not-4)
advmod(is-8, not-4)
det(evidence-7, the-6)
nsubj(is-8, evidence-7)
root(ROOT-0, is-8)
advmod(is-8, there-9)

(ROOT
  (S ('' '')
    (S
      (NP (PRP$ Our) (NNS observations))
      (VP (VBP are)
        (ADVP (RB far)
          (PP (TO to)))
        (ADJP (JJ limited)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (DT that) (NN assumption))))))))
    (, ,)
    (CC but)
    (S
      (S
        (PP (VBN given)
          (NP
            (NP (DT the) (NN number))
            (PP (IN of)
              (NP
                (NP (NNS planets))
                (VP (VBN observed)
                  (ADVP (RB so) (RB far)))))))
        (NP (PRP it))
        (VP (VBZ seems)
          (ADJP (RB quite) (JJ likely))
          (SBAR (IN that)
            (S
              (NP (JJS most) (NNS stars))
              (VP (VBP have)
                (NP (NNS planets)))))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB thus))
        (NP (PRP it))
        (VP (VBZ seems)
          (ADJP (RB quite) (JJ likely))
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (MD would)
                (VP (VB be)
                  (NP
                    (NP (JJ other) (NNS planets))
                    (ADJP (JJ capable)
                      (PP (IN of)
                        (S
                          (VP (VBG supporting)
                            (NP (NN life)))))))
                  (PRN (-LRB- -LRB-)
                    (S
                      (VP (VBG assuming)
                        (SBAR (IN that)
                          (S
                            (NP (NN life))
                            (VP (VBZ needs)
                              (S
                                (NP
                                  (NP (DT a) (JJ narrow) (NN set))
                                  (PP (IN of)
                                    (NP (NNS parameters))))
                                (VP (TO to)
                                  (VP (VB survive)))))))))
                    (-RRB- -RRB-)))))))))
    (. .)))

poss(observations-3, Our-2)
nsubj(limited-7, observations-3)
cop(limited-7, are-4)
advmod(limited-7, far-5)
prep(far-5, to-6)
root(ROOT-0, limited-7)
aux(make-9, to-8)
xcomp(limited-7, make-9)
det(assumption-11, that-10)
dobj(make-9, assumption-11)
prep(likely-25, given-14)
det(number-16, the-15)
dep(given-14, number-16)
prep_of(number-16, planets-18)
partmod(planets-18, observed-19)
advmod(far-21, so-20)
advmod(observed-19, far-21)
nsubj(likely-25, it-22)
cop(likely-25, seems-23)
advmod(likely-25, quite-24)
conj_but(limited-7, likely-25)
complm(have-29, that-26)
amod(stars-28, most-27)
nsubj(have-29, stars-28)
ccomp(likely-25, have-29)
dobj(have-29, planets-30)
advmod(likely-37, thus-33)
nsubj(likely-37, it-34)
cop(likely-37, seems-35)
advmod(likely-37, quite-36)
conj_but(limited-7, likely-37)
conj_and(likely-25, likely-37)
complm(planets-43, that-38)
expl(planets-43, there-39)
aux(planets-43, would-40)
cop(planets-43, be-41)
amod(planets-43, other-42)
ccomp(likely-37, planets-43)
amod(planets-43, capable-44)
prepc_of(capable-44, supporting-46)
dobj(supporting-46, life-47)
parataxis(planets-43, assuming-49)
complm(needs-52, that-50)
nsubj(needs-52, life-51)
ccomp(assuming-49, needs-52)
det(set-55, a-53)
amod(set-55, narrow-54)
nsubj(survive-59, set-55)
prep_of(set-55, parameters-57)
aux(survive-59, to-58)
xcomp(needs-52, survive-59)

(ROOT
  (S (`` ``)
    (CC and)
    (ADVP (RB finally))
    (NP (SYM a))
    (VP (VBP challenge)
      (PP (TO to)
        (NP (PRP you))))
    (. .)))

cc(challenge-5, and-2)
advmod(challenge-5, finally-3)
nsubj(challenge-5, a-4)
root(ROOT-0, challenge-5)
prep_to(challenge-5, you-7)

(ROOT
  (SQ
    (VP (VB Tell)
      (NP (PRP me))
      (NP
        (NP (WP what))
        (PP (IN of)
          (NP
            (NP (NN life) (POS 's))
            (NNS origins)))))
    (. ?)))

root(ROOT-0, Tell-1)
iobj(Tell-1, me-2)
dobj(Tell-1, what-3)
poss(origins-7, life-5)
prep_of(what-3, origins-7)

(ROOT
  (SBARQ
    (WHADVP (WRB Where)
      (CC and)
      (WRB how))
    (SQ (VBD did)
      (NP (NN life))
      (VP (VB com)
        (PRT (RP about))))
    (. ?)))

advmod(com-6, Where-1)
dep(Where-1, and-2)
dep(Where-1, how-3)
aux(com-6, did-4)
nsubj(com-6, life-5)
root(ROOT-0, com-6)
prt(com-6, about-7)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBP are)
        (ADVP (RB still))
        (NP
          (NP (DT a) (JJ good) (NN number))
          (PP (IN of)
            (NP
              (NP (NNS theories))
              (VP
                (ADVP (IN out) (RB there))
                (VBG being)
                (VP (VBN researched))))))))
    (: ...)
    (CC but)
    (S
      (NP (DT a) (`` ``) (JJ rough) ('' '') (NN description))
      (VP (MD would)
        (VP (VB be)
          (SBAR (IN as)
            (S
              (VP (VBZ follows)))))))
    (. .)))

expl(are-3, There-2)
root(ROOT-0, are-3)
advmod(are-3, still-4)
det(number-7, a-5)
amod(number-7, good-6)
nsubj(are-3, number-7)
prep_of(number-7, theories-9)
advmod(researched-13, out-10)
advmod(out-10, there-11)
auxpass(researched-13, being-12)
partmod(theories-9, researched-13)
det(description-20, a-16)
amod(description-20, rough-18)
nsubj(be-22, description-20)
aux(be-22, would-21)
conj_but(are-3, be-22)
mark(follows-24, as-23)
advcl(be-22, follows-24)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ early) (NNS oceans))
      (PP (IN of)
        (NP (DT the) (NN world))))
    (VP (VBD were)
      (ADJP (JJ rich)
        (PP (IN in)
          (NP
            (NP (DT a) (JJ wide) (NN variety))
            (PP (IN of)
              (NP
                (NP (JJ complex) (NNS chemicals))
                (, ,)
                (NP
                  (NP (DT the) (NN byproduct))
                  (PP (IN of)
                    (NP (NN chemical) (NNS reactions)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD had)
                        (VP (VBN started)
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (DT the) (NN earth))
                              (VP (VBD was)
                                (ADVP (RB still))
                                (NP
                                  (NP (DT a) (NN cloud))
                                  (PP (IN of)
                                    (NP (NN interstellar) (NN dust))))))))))))))))))
    (. .)))

det(oceans-3, The-1)
amod(oceans-3, early-2)
nsubj(rich-8, oceans-3)
det(world-6, the-5)
prep_of(oceans-3, world-6)
cop(rich-8, were-7)
root(ROOT-0, rich-8)
det(variety-12, a-10)
amod(variety-12, wide-11)
prep_in(rich-8, variety-12)
amod(chemicals-15, complex-14)
prep_of(variety-12, chemicals-15)
det(byproduct-18, the-17)
appos(chemicals-15, byproduct-18)
nsubj(started-24, byproduct-18)
nn(reactions-21, chemical-20)
prep_of(byproduct-18, reactions-21)
aux(started-24, had-23)
rcmod(byproduct-18, started-24)
advmod(cloud-31, when-25)
det(earth-27, the-26)
nsubj(cloud-31, earth-27)
cop(cloud-31, was-28)
advmod(cloud-31, still-29)
det(cloud-31, a-30)
advcl(started-24, cloud-31)
nn(dust-34, interstellar-33)
prep_of(cloud-31, dust-34)

(ROOT
  (SINV
    (PP (IN Among)
      (NP (DT these) (NNS chemicals)))
    (VP (VBD were))
    (NP
      (NP (NN replicator) (NNS molecules))
      (, ,)
      (NP
        (NP (JJ complex) (NNS organics))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP react)
              (PP (IN with)
                (NP
                  (NP (DT the) (NNS chemicals))
                  (PP (IN around)
                    (NP (PRP them)))))
              (S
                (VP (TO to)
                  (VP (VB form)
                    (NP (JJ other) (NN replicator) (NNS molecules))))))))))
    (. .)))

det(chemicals-3, these-2)
prep_among(were-4, chemicals-3)
root(ROOT-0, were-4)
nn(molecules-6, replicator-5)
nsubj(were-4, molecules-6)
amod(organics-9, complex-8)
appos(molecules-6, organics-9)
nsubj(react-11, organics-9)
rcmod(organics-9, react-11)
det(chemicals-14, the-13)
prep_with(react-11, chemicals-14)
prep_around(chemicals-14, them-16)
aux(form-18, to-17)
xcomp(react-11, form-18)
amod(molecules-21, other-19)
nn(molecules-21, replicator-20)
dobj(form-18, molecules-21)

(ROOT
  (S
    (S
      (S
        (NP (DT This) (NN replication))
        (VP (VBD was) (RB not)
          (ADJP (JJ perfect))))
      (, ,)
      (CC and)
      (RB so)
      (S
        (NP (DT the) (NNS replicators))
        (ADJP (JJ changed)))
      (: ...)
      (S
        (NP (DT some) (NNS changes))
        (VP (VBD led)
          (PP (TO to)
            (NP
              (NP (VBN improved) (NN replication))
              (PRN (-LRB- -LRB-)
                (ADJP
                  (ADVP (RBR faster)
                    (CC or)
                    (RBR more))
                  (JJ accurate))
                (-RRB- -RRB-)))))))
    (CC and)
    (S
      (ADVP (RB thus))
      (NP (DT those) (NN replicator) (NNS molecules))
      (VP (VBD became)
        (NP (DT the) (JJ dominant) (NN form))))
    (. .)))

det(replication-2, This-1)
nsubj(perfect-5, replication-2)
cop(perfect-5, was-3)
neg(perfect-5, not-4)
root(ROOT-0, perfect-5)
advmod(perfect-5, so-8)
conj_and(perfect-5, so-8)
det(replicators-10, the-9)
dep(changed-11, replicators-10)
dep(perfect-5, changed-11)
det(changes-14, some-13)
nsubj(led-15, changes-14)
conj_and(perfect-5, led-15)
parataxis(perfect-5, led-15)
amod(replication-18, improved-17)
prep_to(led-15, replication-18)
advmod(accurate-23, faster-20)
conj_or(faster-20, more-22)
advmod(accurate-23, more-22)
dep(replication-18, accurate-23)
advmod(form-33, thus-26)
det(molecules-29, those-27)
nn(molecules-29, replicator-28)
nsubj(form-33, molecules-29)
cop(form-33, became-30)
det(form-33, the-31)
amod(form-33, dominant-32)
conj_and(perfect-5, form-33)

(ROOT
  (S
    (PP (IN Over)
      (NP (NN time)))
    (NP (DT these) (NNS replicators))
    (VP (VBD reacted)
      (PP (IN with)
        (NP
          (NP (JJ other) (JJ environmental) (NNS elements))
          (PP (JJ such) (IN as)
            (NP (DT the) (NNS lipids)))))
      (SBAR (IN that)
        (S
          (NP (NN form) (NN cell) (NNS walls))
          (VP (TO to)
            (VP (VB form)
              (NP (DT the) (JJS earliest) (NNS cells)))))))
    (. .)))

prep_over(reacted-5, time-2)
det(replicators-4, these-3)
nsubj(reacted-5, replicators-4)
root(ROOT-0, reacted-5)
amod(elements-9, other-7)
amod(elements-9, environmental-8)
prep_with(reacted-5, elements-9)
det(lipids-13, the-12)
prep_such_as(elements-9, lipids-13)
complm(form-19, that-14)
nn(walls-17, form-15)
nn(walls-17, cell-16)
nsubj(form-19, walls-17)
aux(form-19, to-18)
ccomp(reacted-5, form-19)
xcomp(reacted-5, form-19)
det(cells-22, the-20)
amod(cells-22, earliest-21)
dobj(form-19, cells-22)

(ROOT
  (SQ (VBD '')
    (NP (NNPS Whats))
    (NP (PRP$ your) (NN point))
    (. ?)))

nsubj(point-4, Whats-2)
poss(point-4, your-3)
root(ROOT-0, point-4)

(ROOT
  (S (`` ``)
    (NP (DT the) (NN flagellum))
    (VP
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBN shown)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (`` ``) (JJ reducibility) (NN complex) ('' ''))))))))
      (CC and)
      (ADVP (RB thus))
      (VP (VBZ does) (RB not)
        (VP (VB serve)
          (PP (IN as)
            (NP
              (NP (DT an) (NN example))
              (PP (IN of)
                (NP (`` ``) (JJ irreducible) (NN complexity) ('' ''))))))))
    (. .) ('' '')))

det(flagellum-3, the-2)
nsubjpass(shown-6, flagellum-3)
xsubj(complex-11, flagellum-3)
nsubj(serve-17, flagellum-3)
aux(shown-6, has-4)
auxpass(shown-6, been-5)
root(ROOT-0, shown-6)
aux(complex-11, to-7)
cop(complex-11, be-8)
amod(complex-11, reducibility-10)
xcomp(shown-6, complex-11)
advmod(shown-6, thus-14)
conj_and(shown-6, thus-14)
aux(serve-17, does-15)
neg(serve-17, not-16)
conj_and(shown-6, serve-17)
det(example-20, an-19)
prep_as(serve-17, example-20)
amod(complexity-24, irreducible-23)
prep_of(example-20, complexity-24)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (VP (VB fantastic)
      (SBAR (IN so)
        (S
          (NP (PRP we))
          (VP (VBP agree)))))
    (. .)))

dep(fantastic-3, Yes-1)
root(ROOT-0, fantastic-3)
mark(agree-6, so-4)
nsubj(agree-6, we-5)
advcl(fantastic-3, agree-6)

(ROOT
  (S
    (NP (NNP Gravity))
    (VP (VBZ is)
      (NP
        (NP
          (QP (RB only) (CD one)))
        (PP (IN of)
          (NP (DT the) (JJ many) (NNS examples)))))
    (. .)))

nsubj(one-4, Gravity-1)
cop(one-4, is-2)
quantmod(one-4, only-3)
root(ROOT-0, one-4)
det(examples-8, the-6)
amod(examples-8, many-7)
prep_of(one-4, examples-8)

(ROOT
  (S (CC And)
    (NP
      (NP (PRP$ your) (NN argument))
      (PP (IN on)
        (NP (NN gravitation))))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP Collins))
          (VP (VBZ is)
            (VP (VBG saying))))))
    (. .)))

cc(is-6, And-1)
poss(argument-3, your-2)
nsubj(is-6, argument-3)
prep_on(argument-3, gravitation-5)
root(ROOT-0, is-6)
dobj(saying-10, what-7)
nsubj(saying-10, Collins-8)
aux(saying-10, is-9)
ccomp(is-6, saying-10)

(ROOT
  (S
    (S
      (NP (NNP Gravity))
      (VP (VBZ has)
        (NP (PRP$ its) (JJ exact) (NN value))))
    (, ,)
    (ADVP (RB Therefore))
    (S
      (NP (PRP we))
      (VP (VBP exist)))
    (. .)))

nsubj(has-2, Gravity-1)
root(ROOT-0, has-2)
poss(value-5, its-3)
amod(value-5, exact-4)
dobj(has-2, value-5)
advmod(has-2, Therefore-7)
nsubj(exist-9, we-8)
ccomp(has-2, exist-9)

(ROOT
  (S
    (VP (VB Its)
      (NP (DT a) (JJ measurable) (NN parameter)))
    (. .)))

root(ROOT-0, Its-1)
det(parameter-4, a-2)
amod(parameter-4, measurable-3)
dobj(Its-1, parameter-4)

(ROOT
  (S ('' '')
    (NP (DT That))
    (VP (VBZ does) (RB not)
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (NN gravity))
            (VP (VBD was)
              (VP (VBN set)
                (PP (IN at)
                  (NP (DT that) (NN value)))
                (PP (IN by)
                  (NP (DT a) (NN designer)))))))))
    (. ...)))

nsubj(mean-5, That-2)
aux(mean-5, does-3)
neg(mean-5, not-4)
root(ROOT-0, mean-5)
complm(set-9, that-6)
nsubjpass(set-9, gravity-7)
auxpass(set-9, was-8)
ccomp(mean-5, set-9)
det(value-12, that-11)
prep_at(set-9, value-12)
det(designer-15, a-14)
agent(set-9, designer-15)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP exist)
        (SBAR (IN because)
          (S
            (NP (NN gravity))
            (VP (VBZ has)
              (NP (DT that) (NN value)))))))
    (, ,)
    (NP (NN gravity))
    (VP (VBZ does) (RB not)
      (VP (VB have)
        (NP (DT that) (NN value))
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP we))
            (VP (MD can)
              (VP (VB exist)))))))
    (. .)))

nsubj(exist-2, We-1)
ccomp(have-12, exist-2)
mark(has-5, because-3)
nsubj(has-5, gravity-4)
advcl(exist-2, has-5)
det(value-7, that-6)
dobj(has-5, value-7)
nsubj(have-12, gravity-9)
aux(have-12, does-10)
neg(have-12, not-11)
root(ROOT-0, have-12)
det(value-14, that-13)
dobj(have-12, value-14)
advmod(exist-19, so-15)
dep(exist-19, that-16)
nsubj(exist-19, we-17)
aux(exist-19, can-18)
advcl(have-12, exist-19)

