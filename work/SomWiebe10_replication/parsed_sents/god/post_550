(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN evidence)
        (S
          (VP (TO to)
            (VP (VB support)
              (NP (DT any) (NN god)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(evidence-4, no-3)
nsubj(is-2, evidence-4)
aux(support-6, to-5)
infmod(evidence-4, support-6)
det(god-8, any-7)
dobj(support-6, god-8)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (DT that) (JJ plain)
        (CC and)
        (JJ simple)))
    (. .)))

nsubj(plain-4, it-1)
nsubj(simple-6, it-1)
cop(plain-4, is-2)
dep(plain-4, that-3)
root(ROOT-0, plain-4)
conj_and(plain-4, simple-6)

(ROOT
  (S
    (S
      (PP (IN Like)
        (NP
          (NP (NNP Carol) (NNP Sagan))
          (VP (VBN said) ('' '')
            (NP (JJ Extraordinary) (NNS claims)
              (S
                (VP (VB require)
                  (NP (JJ extraordinary) (NN evidence))
                  ('' '')
                  (PP (IN For)
                    (NP (DT the) (NN claim))))))
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP (DT an) (JJ almighty) (JJ supreme) (NN being))))))))
      (NP (EX there))
      (VP (MD should)
        (VP (VB be)
          (NP
            (NP (DT all) (NNS kinds))
            (PP (IN of)
              (NP (NN evidence)))))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is) (RB n't)
        (NP
          (NP (DT a) (NN shred))
          (PP (IN of)
            (NP (NN evidence))))))
    (. .)))

nn(Sagan-3, Carol-2)
prep_like(kinds-26, Sagan-3)
partmod(Sagan-3, said-4)
amod(claims-7, Extraordinary-6)
dobj(said-4, claims-7)
dep(claims-7, require-8)
amod(evidence-10, extraordinary-9)
dobj(require-8, evidence-10)
det(claim-14, the-13)
prep_for(require-8, claim-14)
complm(is-17, that-15)
expl(is-17, there-16)
ccomp(said-4, is-17)
det(being-21, an-18)
amod(being-21, almighty-19)
amod(being-21, supreme-20)
nsubj(is-17, being-21)
expl(kinds-26, there-22)
aux(kinds-26, should-23)
cop(kinds-26, be-24)
det(kinds-26, all-25)
root(ROOT-0, kinds-26)
prep_of(kinds-26, evidence-28)
expl(is-32, there-31)
conj_but(kinds-26, is-32)
neg(is-32, n't-33)
det(shred-35, a-34)
nsubj(is-32, shred-35)
prep_of(shred-35, evidence-37)

