(ROOT
  (S
    (NP (PRP$ Your) (NN argument))
    (VP (VBZ is)
      (ADVP (RB logically))
      (ADJP (JJ inconsistent)
        (CC and)
        (JJ bordering))
      (PP (IN on)
        (ADJP (JJ incoherent))))
    (. .)))

poss(argument-2, Your-1)
nsubj(inconsistent-5, argument-2)
nsubj(bordering-7, argument-2)
cop(inconsistent-5, is-3)
advmod(inconsistent-5, logically-4)
root(ROOT-0, inconsistent-5)
conj_and(inconsistent-5, bordering-7)
prep_on(inconsistent-5, incoherent-9)

(ROOT
  (S
    (S
      (VP (VBG Benching)
        (NP (CD 300))))
    (VP (VBZ is)
      (ADVP (RB NOT))
      (ADJP (JJ impossible)))
    (. .)))

csubj(impossible-5, Benching-1)
dobj(Benching-1, 300-2)
cop(impossible-5, is-3)
neg(impossible-5, NOT-4)
root(ROOT-0, impossible-5)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB just))
    (VP (VBP do) (RB not)
      (VP (VB have)
        (NP (DT the) (NN power)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (PRP it))))))))
    (. .)))

nsubj(have-5, You-1)
advmod(have-5, just-2)
aux(have-5, do-3)
neg(have-5, not-4)
root(ROOT-0, have-5)
det(power-7, the-6)
dobj(have-5, power-7)
aux(do-9, to-8)
infmod(power-7, do-9)
dobj(do-9, it-10)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (RB very) (JJ clear)
          (CC and)
          (JJ obvious))
        (NN difference)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(difference-8, a-3)
advmod(clear-5, very-4)
amod(difference-8, clear-5)
conj_and(clear-5, obvious-7)
amod(difference-8, obvious-7)
nsubj(is-2, difference-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB say)
              (NP
                (NP
                  (NP (NNS things))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP are)
                        (ADJP (NN contradictory))))))
                (, ,)
                (NP
                  (NP (NN ergo))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP are)
                        (ADJP
                          (ADJP (JJR greater))
                          (PP (IN than)
                            (NP
                              (NP (DT a) (NN being))
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (VP (MD can) (RB not)))))))))))))))))
    (. .)))

nsubj(able-3, You-1)
cop(able-3, are-2)
root(ROOT-0, able-3)
aux(say-5, to-4)
xcomp(able-3, say-5)
dobj(say-5, things-6)
nsubj(contradictory-9, things-6)
cop(contradictory-9, are-8)
rcmod(things-6, contradictory-9)
appos(things-6, ergo-11)
nsubj(greater-14, you-12)
cop(greater-14, are-13)
rcmod(ergo-11, greater-14)
det(being-17, a-16)
prep_than(greater-14, being-17)
nsubj(can-19, being-17)
rcmod(being-17, can-19)
neg(can-19, not-20)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (ADJP (JJ similar)
        (PP (TO to)
          (S
            (VP (VBG saying)
              (SBAR (IN that) (IN because)
                (S
                  (NP (PRP you))
                  (VP (MD will)
                    (VP (VB die)
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBP are)
                            (ADJP (JJR greater))
                            (PP (IN than)
                              (NP (DT an) (NN immortal) (VBG being)))))))))))))))
    (. .)))

nsubj(similar-3, That-1)
cop(similar-3, is-2)
root(ROOT-0, similar-3)
prepc_to(similar-3, saying-5)
complm(die-10, that-6)
dep(die-10, because-7)
nsubj(die-10, you-8)
aux(die-10, will-9)
ccomp(saying-5, die-10)
nsubj(greater-13, you-11)
cop(greater-13, are-12)
ccomp(die-10, greater-13)
det(immortal-16, an-15)
prep_than(greater-13, immortal-16)
amod(immortal-16, being-17)

(ROOT
  (S
    (S
      (NP
        (NP (NNP God))
        (CC and)
        (NP (JJ human)))
      (VP (VBP are)
        (ADJP
          (ADJP (RB so) (RB ontologically) (JJ different))
          (SBAR (IN that)
            (S
              (NP (DT each))
              (VP (MD would)
                (ADVP (RB logically))
                (VP (VB have)
                  (VP (VBZ attributes)))))))
        (SBAR (IN that)
          (S
            (NP (DT the) (JJ other))
            (VP (VBZ does)
              (PP (RB not) (IN by)
                (NP
                  (NP (NN virtue))
                  (PP (IN of)
                    (S
                      (VP (VBG being)
                        (NP
                          (NP (NN opposite))
                          (, ,)
                          (NP (NNP i.e.) (NNP immortal) (NNP God))
                          (CC and)
                          (NP (JJ mortal) (NN man)))))))))))))
    (, ,)
    (NP (NNP omniscient) (NNP God))
    (VP (VBP vs)
      (NP
        (NP (DT a) (NN man))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD can)
              (VP (VB be)
                (ADJP (JJ ignorant))))))))
    (. .)))

nsubj(different-7, God-1)
conj_and(God-1, human-3)
nsubj(different-7, human-3)
cop(different-7, are-4)
advmod(different-7, so-5)
advmod(different-7, ontologically-6)
ccomp(vs-34, different-7)
complm(attributes-13, that-8)
nsubj(attributes-13, each-9)
aux(attributes-13, would-10)
advmod(attributes-13, logically-11)
aux(attributes-13, have-12)
ccomp(different-7, attributes-13)
complm(does-17, that-14)
det(other-16, the-15)
nsubj(does-17, other-16)
ccomp(different-7, does-17)
neg(does-17, not-18)
prep_by(does-17, virtue-20)
cop(opposite-23, being-22)
prepc_of(virtue-20, opposite-23)
nn(God-27, i.e.-25)
nn(God-27, immortal-26)
prepc_of(virtue-20, God-27)
conj_and(opposite-23, God-27)
amod(man-30, mortal-29)
prepc_of(virtue-20, man-30)
conj_and(opposite-23, man-30)
nn(God-33, omniscient-32)
nsubj(vs-34, God-33)
root(ROOT-0, vs-34)
det(man-36, a-35)
dobj(vs-34, man-36)
nsubj(ignorant-40, man-36)
aux(ignorant-40, can-38)
cop(ignorant-40, be-39)
rcmod(man-36, ignorant-40)

(ROOT
  (S
    (NP
      (NP (DT The) (NN nature))
      (PP (IN of)
        (NP
          (NP (PRP$ your) (NN argument))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP are)
                (ADJP (JJ superior)
                  (PP (IN by)
                    (NP
                      (NP (NN virtue))
                      (PP (IN of)
                        (NP (PRP$ your) (NN ignorance))))))))))))
    (VP (VBZ is)
      (ADJP
        (ADJP (RB quite) (JJ silly))
        (CC and)
        (ADJP (RB potentially) (JJ dangerous))))
    (. .)))

det(nature-2, The-1)
nsubj(silly-17, nature-2)
nsubj(dangerous-20, nature-2)
poss(argument-5, your-4)
prep_of(nature-2, argument-5)
complm(superior-9, that-6)
nsubj(superior-9, you-7)
cop(superior-9, are-8)
dep(argument-5, superior-9)
prep_by(superior-9, virtue-11)
poss(ignorance-14, your-13)
prep_of(virtue-11, ignorance-14)
cop(silly-17, is-15)
advmod(silly-17, quite-16)
root(ROOT-0, silly-17)
advmod(dangerous-20, potentially-19)
conj_and(silly-17, dangerous-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADVP (RB here))
        (S
          (VP (TO to)
            (VP (VB attack)
              (NP (PRP$ your) (NNS beliefs)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (NP (DT the) (NN freedom)
        (S
          (VP (TO to)
            (VP (VB believe)
              (SBAR
                (WHNP (WDT whatever))
                (S
                  (NP (PRP you))
                  (VP (VBP like)))))))))
    (. .)))

nsubj('m-2, I-1)
xsubj(attack-6, I-1)
ccomp(have-11, 'm-2)
neg('m-2, not-3)
advmod('m-2, here-4)
aux(attack-6, to-5)
xcomp('m-2, attack-6)
poss(beliefs-8, your-7)
dobj(attack-6, beliefs-8)
nsubj(have-11, you-10)
root(ROOT-0, have-11)
det(freedom-13, the-12)
dobj(have-11, freedom-13)
aux(believe-15, to-14)
infmod(freedom-13, believe-15)
dobj(like-18, whatever-16)
nsubj(like-18, you-17)
ccomp(believe-15, like-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB just))
      (VP
        (VP (VBG clarifying)
          (NP (JJ incorrect) (NNS arguments))
          (S
            (VP (VBG attacking)
              (NP (NN mine)))))
        (CC and)
        (VP (VBG showing)
          (SBAR (IN that)
            (S
              (NP
                (NP (NN belief))
                (PP (IN in)
                  (NP (NNP God))))
              (VP (VBZ is)
                (NP (DT a) (JJ rational) (NN belief))))))
        (CC and)
        (VP
          (ADJP
            (ADVP (RB not) (RB logically))
            (JJ inconsistent))
          (SBAR (IN like)
            (S
              (NP (DT some) (NNS people))
              (VP (VBP try)
                (S
                  (VP (TO to)
                    (VP (VB say))))))))))
    (. .)))

nsubj(clarifying-4, I-1)
nsubj(showing-10, I-1)
nsubj(inconsistent-22, I-1)
aux(clarifying-4, 'm-2)
advmod(clarifying-4, just-3)
root(ROOT-0, clarifying-4)
amod(arguments-6, incorrect-5)
dobj(clarifying-4, arguments-6)
xcomp(clarifying-4, attacking-7)
dobj(attacking-7, mine-8)
conj_and(clarifying-4, showing-10)
complm(belief-18, that-11)
nsubj(belief-18, belief-12)
prep_in(belief-12, God-14)
cop(belief-18, is-15)
det(belief-18, a-16)
amod(belief-18, rational-17)
ccomp(showing-10, belief-18)
dep(logically-21, not-20)
advmod(inconsistent-22, logically-21)
conj_and(clarifying-4, inconsistent-22)
mark(try-26, like-23)
det(people-25, some-24)
nsubj(try-26, people-25)
xsubj(say-28, people-25)
advcl(inconsistent-22, try-26)
aux(say-28, to-27)
xcomp(try-26, say-28)

