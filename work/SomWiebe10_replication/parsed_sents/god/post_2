(ROOT
  (S
    (NP (CD 29) (NNP May) (CD 2009) (NN I))
    (VP (VBP like)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB say)
                  (PP (IN about)
                    (NP (NNP God))))))))))
    (. .)))

num(I-4, 29-1)
nn(I-4, May-2)
num(I-4, 2009-3)
nsubj(like-5, I-4)
root(ROOT-0, like-5)
dep(had-8, what-6)
nsubj(had-8, you-7)
xsubj(say-10, you-7)
ccomp(like-5, had-8)
aux(say-10, to-9)
xcomp(had-8, say-10)
prep_about(say-10, God-12)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP you))
        (VP (VBP need)
          (S
            (VP (TO to)
              (VP (VB understand)))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (JJ many) (NNS people))
          (ADVP (RB really))
          (VP (VBP do) (RB not)
            (VP (VB want)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (NP (DT the) (NN truth))
                    (SBAR (IN because)
                      (S
                        (NP (PRP it))
                        (VP (MD would)
                          (VP (VB require)
                            (S
                              (NP (PRP them))
                              (VP (TO to)
                                (VP (VB do)
                                  (NP
                                    (NP (DT some) (NN soul))
                                    (VP (VBG searching)
                                      (PP (IN of)
                                        (NP (PRP$ their) (JJ own))))))))))))))))))))
    (. .)))

dep(need-3, What-1)
nsubj(need-3, you-2)
xsubj(understand-5, you-2)
csubj(is-6, need-3)
aux(understand-5, to-4)
xcomp(need-3, understand-5)
root(ROOT-0, is-6)
complm(want-13, that-7)
amod(people-9, many-8)
nsubj(want-13, people-9)
xsubj(know-15, people-9)
advmod(want-13, really-10)
aux(want-13, do-11)
neg(want-13, not-12)
ccomp(is-6, want-13)
aux(know-15, to-14)
xcomp(want-13, know-15)
det(truth-17, the-16)
dobj(know-15, truth-17)
mark(require-21, because-18)
nsubj(require-21, it-19)
aux(require-21, would-20)
advcl(know-15, require-21)
nsubj(do-24, them-22)
aux(do-24, to-23)
xcomp(require-21, do-24)
det(soul-26, some-25)
dobj(do-24, soul-26)
partmod(soul-26, searching-27)
poss(own-30, their-29)
prep_of(searching-27, own-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBP are)
            (NP
              (NP (NNS millions))
              (PP (IN of)
                (NP
                  (NP (NNS tragedies))
                  (PP (IN in)
                    (NP
                      (NP (DT this) (NN world))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD could)
                            (VP (VB be)
                              (VP
                                (ADVP (RB easily))
                                (VBN laid)
                                (PP (IN at)
                                  (NP
                                    (NP (NNP Satan) (POS 's))
                                    (NN door)))))))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
complm(are-5, that-3)
expl(are-5, there-4)
ccomp(believe-2, are-5)
nsubj(are-5, millions-6)
prep_of(millions-6, tragedies-8)
det(world-11, this-10)
prep_in(tragedies-8, world-11)
nsubjpass(laid-16, world-11)
aux(laid-16, could-13)
auxpass(laid-16, be-14)
advmod(laid-16, easily-15)
rcmod(world-11, laid-16)
poss(door-20, Satan-18)
prep_at(laid-16, door-20)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ loves)
        (S
          (VP (TO to)
            (VP (VB see)
              (S
                (NP (NNS people))
                (VP (VB ponder)
                  (PRT (RP over))
                  (SBAR (IN whether)
                    (S
                      (NP (EX there))
                      (VP (VBZ is)
                        (NP (DT a) (NNP God))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (PRP$ his) (NN mission)))
    (. .)))

nsubj(loves-2, He-1)
xsubj(see-4, He-1)
ccomp(is-15, loves-2)
aux(see-4, to-3)
xcomp(loves-2, see-4)
nsubj(ponder-6, people-5)
ccomp(see-4, ponder-6)
prt(ponder-6, over-7)
complm(is-10, whether-8)
expl(is-10, there-9)
ccomp(ponder-6, is-10)
det(God-12, a-11)
nsubj(is-10, God-12)
nsubj(is-15, it-14)
root(ROOT-0, is-15)
poss(mission-17, his-16)
attr(is-15, mission-17)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBP do)
        (VP (VB have)
          (NP
            (NP (NNS choices))
            (PP (IN in)
              (NP (DT this) (NN world))))
          (, ,)
          (SBAR (IN whether)
            (CC or)
            (RB not)
            (S
              (NP (NNS people))
              (VP (VBP see)
                (SBAR (IN that)
                  (S
                    (VP (VBP have)
                      (NP (NNS choices))))))))))
      (CC or)
      (RB not)
      (VP (VBZ is)
        (NP (DT another) (NN story))))
    (. .)))

nsubj(have-3, We-1)
aux(have-3, do-2)
root(ROOT-0, have-3)
dobj(have-3, choices-4)
det(world-7, this-6)
prep_in(choices-4, world-7)
complm(see-13, whether-9)
ccomp(have-3, not-11)
conj_or(see-13, not-11)
nsubj(see-13, people-12)
ccomp(have-3, see-13)
complm(have-15, that-14)
ccomp(see-13, have-15)
dobj(have-15, choices-16)
conj_or(have-3, not-18)
neg(have-3, not-18)
cop(story-21, is-19)
det(story-21, another-20)
dep(have-3, story-21)

(ROOT
  (S
    (S
      (S
        (VP (TO To)
          (VP
            (ADVP (RB simply))
            (VB do)
            (NP (NN nothing)))))
      (VP (VBZ is)
        (NP (DT a) (NN choice))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (NNP Satan))
          (VP (MD can)
            (VP (VB keep)
              (S
                (NP (PRP us))
                (VP
                  (VP (VBG reacting))
                  (CONJP (RB instead) (IN of))
                  (VP (VBG acting))))))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ has)
        (NP (PRP us))
        (PP (IN on)
          (NP (DT the) (NN fence) (NN post)))))
    (. .)))

aux(do-3, To-1)
advmod(do-3, simply-2)
csubj(choice-7, do-3)
dobj(do-3, nothing-4)
cop(choice-7, is-5)
det(choice-7, a-6)
root(ROOT-0, choice-7)
mark(keep-13, if-10)
nsubj(keep-13, Satan-11)
aux(keep-13, can-12)
advcl(has-21, keep-13)
nsubj(reacting-15, us-14)
nsubj(acting-18, us-14)
ccomp(keep-13, reacting-15)
ccomp(keep-13, acting-18)
conj_negcc(reacting-15, acting-18)
nsubj(has-21, he-20)
conj_and(choice-7, has-21)
dobj(has-21, us-22)
det(post-26, the-24)
nn(post-26, fence-25)
prep_on(has-21, post-26)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (PRP me)))
      (NP (NNP God))
      (VP (VBZ does)
        (VP (VB exist)
          (PP (IN because)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP I))
                (VP (VBP look)
                  (ADVP (RB back))
                  (PP (IN over)
                    (NP (PRP$ my) (NN life))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP see)
        (SBAR
          (S
            (NP (DT the) (JJ many) (NNS times) (NN God))
            (VP (VBD was)
              (ADVP (RB there))
              (PP (IN for)
                (NP (PRP me)))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (DT no) (NN one) (RB else))
                  (VP (VBD was)))))))))
    (. .)))

prep_for(exist-5, me-2)
nsubj(exist-5, God-3)
aux(exist-5, does-4)
root(ROOT-0, exist-5)
advmod(look-9, when-7)
nsubj(look-9, I-8)
prepc_because(exist-5, look-9)
advmod(look-9, back-10)
poss(life-13, my-12)
prep_over(look-9, life-13)
nsubj(see-17, I-16)
conj_and(exist-5, see-17)
det(God-21, the-18)
amod(God-21, many-19)
nn(God-21, times-20)
nsubj(was-22, God-21)
ccomp(see-17, was-22)
advmod(was-22, there-23)
prep_for(was-22, me-25)
advmod(was-30, when-26)
det(one-28, no-27)
nsubj(was-30, one-28)
advmod(one-28, else-29)
advcl(was-22, was-30)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would) (RB not)
      (VP (VB have)
        (VP (VBN mattered)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD had)
                (NP
                  (NP (DT a) (NN lot))
                  (CC or)
                  (NP (NN money)
                    (CC or)
                    (NN none)))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (PRP I))
                    (VP (VBD was)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN hospital))
                          (PP (IN on)
                            (NP (NN machine)))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD was)
                                (VP (VBG breathing)
                                  (PP (IN for)
                                    (NP (PRP me))))))))))))))))))
    (. .)))

nsubj(mattered-5, It-1)
aux(mattered-5, would-2)
neg(mattered-5, not-3)
aux(mattered-5, have-4)
root(ROOT-0, mattered-5)
mark(had-8, if-6)
nsubj(had-8, I-7)
advcl(mattered-5, had-8)
det(lot-10, a-9)
dobj(had-8, lot-10)
dobj(had-8, money-12)
conj_or(lot-10, money-12)
conj_or(lot-10, none-14)
conj_or(money-12, none-14)
mark(was-18, because-16)
nsubj(was-18, I-17)
advcl(had-8, was-18)
det(hospital-21, the-20)
prep_in(was-18, hospital-21)
nsubj(breathing-26, hospital-21)
prep_on(hospital-21, machine-23)
aux(breathing-26, was-25)
rcmod(hospital-21, breathing-26)
prep_for(breathing-26, me-28)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (VP (VBG pumping)
        (S
          (NP (PRP me))
          (ADJP (JJ full)
            (PP (IN of)
              (NP (JJ morphine\/paralytic) (NNS drugs)))))
        (SBAR (IN so)
          (S
            (NP (PRP I))
            (VP (MD would)
              (VP (VB remain)
                (ADVP (RB still))
                (SBAR (IN because)
                  (S
                    (NP (PRP I))
                    (VP (VBD was)
                      (VP (VBN told)
                        (SBAR
                          (S
                            (NP (PRP I))
                            (VP (VBD was)
                              (VP (VBG fighting)
                                (NP (DT the) (NN machine))
                                (PP (TO to)
                                  (NP
                                    (NP (NN breath))
                                    (PP (IN on)
                                      (NP (PRP$ my) (JJ own)))))))))))))))))))
    (. .)))

nsubj(pumping-3, They-1)
aux(pumping-3, were-2)
root(ROOT-0, pumping-3)
nsubj(full-5, me-4)
xcomp(pumping-3, full-5)
amod(drugs-8, morphine\/paralytic-7)
prep_of(full-5, drugs-8)
mark(remain-12, so-9)
nsubj(remain-12, I-10)
aux(remain-12, would-11)
advcl(pumping-3, remain-12)
advmod(remain-12, still-13)
mark(told-17, because-14)
nsubjpass(told-17, I-15)
auxpass(told-17, was-16)
advcl(remain-12, told-17)
nsubj(fighting-20, I-18)
aux(fighting-20, was-19)
ccomp(told-17, fighting-20)
det(machine-22, the-21)
dobj(fighting-20, machine-22)
prep_to(fighting-20, breath-24)
poss(own-27, my-26)
prep_on(breath-24, own-27)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD took)
      (NP (PRP me))
      (NP (CD 3) (NNS months))
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (NP
                      (NP (PRP$ my) (NNS arms))
                      (, ,)
                      (NP (NNS legs))
                      (, ,)
                      (CC and)
                      (NP (NNS hands)))
                    (S
                      (VP (TO to)
                        (VP (VB function)
                          (ADVP (RB properly)))))))))))))
    (. .)))

nsubj(took-2, It-1)
root(ROOT-0, took-2)
dobj(took-2, me-3)
num(months-5, 3-4)
tmod(took-2, months-5)
aux(able-8, to-6)
cop(able-8, be-7)
xcomp(took-2, able-8)
aux(get-10, to-9)
xcomp(able-8, get-10)
poss(arms-12, my-11)
dobj(get-10, arms-12)
dobj(get-10, legs-14)
conj_and(arms-12, legs-14)
dobj(get-10, hands-17)
conj_and(arms-12, hands-17)
aux(function-19, to-18)
xcomp(get-10, function-19)
advmod(function-19, properly-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP remember)
      (S
        (VP (VBG walking)
          (PRT (RP around))
          (PP (IN in)
            (NP (NNP Walmart)))
          (PP (IN for)
            (NP
              (NP (CD 3) (NNS hours))
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB gain)
                      (NP (NN strengh))
                      (PP (IN in)
                        (NP (PRP$ my) (NNS legs))))))))))))
    (. .)))

nsubj(remember-2, I-1)
root(ROOT-0, remember-2)
xcomp(remember-2, walking-3)
prt(walking-3, around-4)
prep_in(walking-3, Walmart-6)
num(hours-9, 3-8)
prep_for(walking-3, hours-9)
xsubj(gain-12, hours-9)
partmod(hours-9, trying-10)
aux(gain-12, to-11)
xcomp(trying-10, gain-12)
dobj(gain-12, strengh-13)
poss(legs-16, my-15)
prep_in(gain-12, legs-16)

(ROOT
  (S
    (NP
      (NP (DT The) (NN wonder))
      (PP (IN of)
        (NP (PRP it)))
      (SBAR
        (S
          (NP (DT all))
          (VP (VBD was)
            (NP (PRP I))))))
    (VP (VBD did) (RB n't)
      (VP (VB remember)
        (ADVP (RB hardly))
        (NP
          (NP (DT any))
          (PP (IN of)
            (NP (PRP it))))
        (, ,)
        (SBAR (IN until)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBN told)))))))
    (. .)))

det(wonder-2, The-1)
nsubj(remember-10, wonder-2)
prep_of(wonder-2, it-4)
nsubj(I-7, all-5)
cop(I-7, was-6)
rcmod(wonder-2, I-7)
aux(remember-10, did-8)
neg(remember-10, n't-9)
root(ROOT-0, remember-10)
advmod(remember-10, hardly-11)
dobj(remember-10, any-12)
prep_of(any-12, it-14)
mark(told-19, until-16)
nsubjpass(told-19, I-17)
auxpass(told-19, was-18)
advcl(remember-10, told-19)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBD remembered))))
    (VP (VBD was)
      (VP (VBG praying)
        (PP (IN in)
          (NP
            (NP (DT a) (JJ safe) (NN place))
            (PP (IN within)
              (NP (PRP myself)))))))
    (. .)))

dobj(remembered-3, What-1)
nsubj(remembered-3, I-2)
csubj(praying-5, remembered-3)
aux(praying-5, was-4)
root(ROOT-0, praying-5)
det(place-9, a-7)
amod(place-9, safe-8)
prep_in(praying-5, place-9)
prep_within(place-9, myself-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJR easier))
      (S
        (VP (TO to)
          (VP (VB blame)
            (NP
              (NP (NNP God))
              (PP (IN for)
                (NP
                  (NP (DT the) (NNS ills))
                  (PP (IN of)
                    (NP (DT the) (NN world)))))))))
      (SBAR (IN than)
        (S
          (VP (TO to)
            (VP
              (VP (VB research)
                (NP
                  (NP (CD one) (POS 's))
                  (NN soul)))
              (CC and)
              (VP (VB take)
                (NP (DT a) (JJ good) (JJ hard) (NN look))
                (PP (IN at)
                  (NP (PRP ourselves)))))))))
    (. .)))

nsubj(easier-3, It-1)
xsubj(blame-5, It-1)
cop(easier-3, is-2)
root(ROOT-0, easier-3)
aux(blame-5, to-4)
xcomp(easier-3, blame-5)
dobj(blame-5, God-6)
det(ills-9, the-8)
prep_for(God-6, ills-9)
det(world-12, the-11)
prep_of(ills-9, world-12)
mark(research-15, than-13)
aux(research-15, to-14)
advcl(easier-3, research-15)
xcomp(easier-3, research-15)
poss(soul-18, one-16)
dobj(research-15, soul-18)
advcl(easier-3, take-20)
xcomp(easier-3, take-20)
conj_and(research-15, take-20)
det(look-24, a-21)
amod(look-24, good-22)
amod(look-24, hard-23)
dobj(take-20, look-24)
prep_at(take-20, ourselves-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD saw)
      (SBAR
        (SBAR
          (S
            (NP
              (NP (PRP$ my) (NN life))
              (CC and)
              (NP (PRP$ my) (NN loved) (NNS ones)))
            (VP (VBZ lives))))
        (CC and)
        (SBAR
          (WHADJP (WRB how) (JJ much))
          (S
            (NP (PRP I))
            (VP (VBD loved)
              (NP (PRP them)))))))
    (. .)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
poss(life-4, my-3)
nsubj(lives-9, life-4)
poss(ones-8, my-6)
nn(ones-8, loved-7)
conj_and(life-4, ones-8)
nsubj(lives-9, ones-8)
dep(saw-2, lives-9)
advmod(much-12, how-11)
dep(loved-14, much-12)
nsubj(loved-14, I-13)
dep(saw-2, loved-14)
conj_and(lives-9, loved-14)
dobj(loved-14, them-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD spoke)
        (PP (IN with)
          (NP (DT a) (NN woman)))
        (SBAR
          (WHNP (WP whom))
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (VP (VBN told)
                (SBAR
                  (S
                    (NP (DT no) (NN one))
                    (ADVP (RB ever))
                    (VP (VBD saw)
                      (PP (IN in)
                        (NP (PRP$ my) (NN room))))))))))))
    (, ,)
    (CC yet)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (PP (IN with)
          (NP (PRP me)))
        (NP (PDT all) (DT the) (NN time))))
    (. .)))

nsubj(spoke-2, I-1)
root(ROOT-0, spoke-2)
det(woman-5, a-4)
prep_with(spoke-2, woman-5)
dobj(told-9, whom-6)
nsubjpass(told-9, I-7)
auxpass(told-9, 'm-8)
ccomp(spoke-2, told-9)
det(one-11, no-10)
nsubj(saw-13, one-11)
advmod(saw-13, ever-12)
ccomp(told-9, saw-13)
poss(room-16, my-15)
prep_in(saw-13, room-16)
nsubj(time-25, she-19)
cop(time-25, was-20)
prep_with(time-25, me-22)
predet(time-25, all-23)
det(time-25, the-24)
conj_yet(spoke-2, time-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD saw)
      (NP
        (NP
          (NP
            (NP (JJ good) (NNS times))
            (CC and)
            (NP (JJ sad) (NNS times)))
          (, ,)
          (CC and)
          (NP
            (NP (NNS things))
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD could)
                  (VP (VB have)
                    (VP (VBN done)
                      (ADVP (RB differently))
                      (PP (IN in)
                        (NP (PRP$ my) (NN past))))))))))
        (, ,)
        (CC and)
        (NP (DT a) (NN chance)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (PRP them))
                (ADVP (RB differently))
                (PP (IN in)
                  (NP (DT the) (NN future)))))))))
    (. .)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
amod(times-4, good-3)
dobj(saw-2, times-4)
amod(times-7, sad-6)
dobj(saw-2, times-7)
conj_and(times-4, times-7)
dobj(saw-2, things-10)
conj_and(times-4, things-10)
dobj(done-14, things-10)
nsubj(done-14, I-11)
aux(done-14, could-12)
aux(done-14, have-13)
rcmod(things-10, done-14)
advmod(done-14, differently-15)
poss(past-18, my-17)
prep_in(done-14, past-18)
det(chance-22, a-21)
dobj(saw-2, chance-22)
conj_and(times-4, chance-22)
aux(do-24, to-23)
infmod(chance-22, do-24)
dobj(do-24, them-25)
advmod(do-24, differently-26)
det(future-29, the-28)
prep_in(do-24, future-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD saw)
        (NP
          (NP (NN violence)
            (CC and)
            (NN dispair))
          (CC and)
          (NP (NN death) (NN whirl)))
        (PP (IN around)
          (NP (PRP me)))))
    (CC yet)
    (S
      (NP (PRP I))
      (VP (VBD was) (RB not)
        (ADJP (JJ afraid))))
    (. .)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
dobj(saw-2, violence-3)
dobj(saw-2, dispair-5)
conj_and(violence-3, dispair-5)
nn(whirl-8, death-7)
dobj(saw-2, whirl-8)
conj_and(violence-3, whirl-8)
prep_around(saw-2, me-10)
nsubj(afraid-15, I-12)
cop(afraid-15, was-13)
neg(afraid-15, not-14)
conj_yet(saw-2, afraid-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ okay)
        (PP (IN with)
          (NP (PRP me))))
      (SBAR (IN if)
        (S
          (NP (NNS others))
          (VP (VBP choose)
            (S
              (VP (TO to)
                (VP (VB believe)
                  (SBAR
                    (S
                      (NP (NNP God))
                      (VP
                        (VP (VBZ does) (RB not)
                          (VP (VB exist)))
                        (, ,)
                        (ADVP (RB probably))
                        (VP (MD would) (RB n't)
                          (VP (VB be)
                            (ADJP (JJ able)
                              (S
                                (VP (TO to)
                                  (VP (VB change)
                                    (NP (PRP$ their) (NNS minds))
                                    (ADVP (DT no) (NN matter)
                                      (SBAR
                                        (WHNP (WP what))
                                        (S
                                          (NP (PRP I))
                                          (VP (VBD said)))))))))))))))))))))
    (. .)))

nsubj(okay-3, It-1)
cop(okay-3, is-2)
root(ROOT-0, okay-3)
prep_with(okay-3, me-5)
mark(choose-8, if-6)
nsubj(choose-8, others-7)
xsubj(believe-10, others-7)
advcl(okay-3, choose-8)
aux(believe-10, to-9)
xcomp(choose-8, believe-10)
nsubj(exist-14, God-11)
aux(exist-14, does-12)
neg(exist-14, not-13)
ccomp(believe-10, exist-14)
advmod(exist-14, probably-16)
aux(able-20, would-17)
neg(able-20, n't-18)
cop(able-20, be-19)
dep(exist-14, able-20)
aux(change-22, to-21)
xcomp(able-20, change-22)
poss(minds-24, their-23)
dobj(change-22, minds-24)
dep(matter-26, no-25)
advmod(change-22, matter-26)
dobj(said-29, what-27)
nsubj(said-29, I-28)
dep(matter-26, said-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB have)
          (VP
            (ADVP (RB easily))
            (VBN died)
            (PP (IN in)
              (NP (DT that) (NN hospital)))))))
    (, ,)
    (CC but)
    (S
      (NP (NNP God))
      (VP (VBD had)
        (NP
          (NP (JJ other) (NNS plans))
          (, ,)
          (NP (PRP$ my) (NN daughter))
          (CC and)
          (NP
            (NP (PRP$ my) (NNS grandchildren))
            (VP (VBN needed)
              (S
                (NP (PRP me))
                (VP (TO to)
                  (VP (VB be)
                    (ADVP (RB here))
                    (PP (IN for)
                      (NP (PRP them)))))))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP I))
                (VP (VBP am))))))))
    (. .)))

nsubj(died-5, I-1)
aux(died-5, could-2)
aux(died-5, have-3)
advmod(died-5, easily-4)
root(ROOT-0, died-5)
det(hospital-8, that-7)
prep_in(died-5, hospital-8)
nsubj(had-12, God-11)
conj_but(died-5, had-12)
amod(plans-14, other-13)
dobj(had-12, plans-14)
poss(daughter-17, my-16)
dobj(had-12, daughter-17)
conj_and(plans-14, daughter-17)
poss(grandchildren-20, my-19)
dobj(had-12, grandchildren-20)
conj_and(plans-14, grandchildren-20)
partmod(grandchildren-20, needed-21)
nsubj(be-24, me-22)
aux(be-24, to-23)
xcomp(needed-21, be-24)
advmod(be-24, here-25)
prep_for(be-24, them-27)
dobj(am-31, which-29)
rel(am-31, which-29)
nsubj(am-31, I-30)
rcmod(grandchildren-20, am-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (PP
        (PP (IN with)
          (NP (PRP$ my) (NN family)))
        (, ,)
        (CC and)
        (PP (TO to)
          (NP
            (NP (PRP me))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (ADJP
                    (ADJP (NN worth) (JJR more))
                    (PP (IN than)
                      (NP (DT any) (NN dollar) (NN value)))))))))))
    (. .)))

nsubj(am-2, I-1)
nsubj(am-2', I-1)
root(ROOT-0, am-2)
conj_and(am-2, am-2')
poss(family-5, my-4)
prep_with(am-2, family-5)
prep_to(am-2', me-9)
nsubj(worth-12, me-9)
cop(worth-12, is-11)
rcmod(me-9, worth-12)
dep(worth-12, more-13)
det(value-17, any-15)
nn(value-17, dollar-16)
prep_than(worth-12, value-17)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP are)
        (ADJP (RB not) (JJ rich)
          (PRN (, ,)
            (S
              (NP (PRP we))
              (VP (VBP are) (RB not)
                (ADJP (JJ poor))))
            (, ,))
          (SBAR
            (ADVP (RB however))
            (IN that)
            (S
              (VP (VBZ is)
                (PP (IN in)
                  (NP
                    (NP (NNS terms))
                    (PP (IN of)
                      (NP (NNS dollars)
                        (CC and)
                        (NNS cents)))))))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP are)
      (ADJP (JJ rich)
        (PP (IN in)
          (NP (JJ many) (JJ other) (NNS ways)))))
    (. .)))

nsubj(rich-4, We-1)
cop(rich-4, are-2)
neg(rich-4, not-3)
ccomp(rich-23, rich-4)
nsubj(poor-9, we-6)
cop(poor-9, are-7)
neg(poor-9, not-8)
dep(rich-4, poor-9)
advmod(is-13, however-11)
dep(is-13, that-12)
ccomp(rich-4, is-13)
prep_in(is-13, terms-15)
prep_of(terms-15, dollars-17)
prep_of(terms-15, cents-19)
conj_and(dollars-17, cents-19)
nsubj(rich-23, we-21)
cop(rich-23, are-22)
root(ROOT-0, rich-23)
amod(ways-27, many-25)
amod(ways-27, other-26)
prep_in(rich-23, ways-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR (IN that)
        (S
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP have)
                (VP (VBN shared)
                  (SBAR (IN with)
                    (S
                      (NP (PRP you))
                      (VP (MD will)
                        (VP (VB make)
                          (S
                            (NP (PRP you))
                            (VP (VB think)
                              (PRT (RP back))
                              (PP (IN over)
                                (NP (PRP$ your) (NNS lives)))))))))))))
          (, ,)
          (VP (VBP wonder)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (MD might)
                  (VP (VB find)))))))))
    (. .)))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
complm(wonder-19, that-3)
dobj(shared-7, what-4)
nsubj(shared-7, I-5)
aux(shared-7, have-6)
dep(wonder-19, shared-7)
mark(make-11, with-8)
nsubj(make-11, you-9)
aux(make-11, will-10)
advcl(shared-7, make-11)
nsubj(think-13, you-12)
ccomp(make-11, think-13)
prt(think-13, back-14)
poss(lives-17, your-16)
prep_over(think-13, lives-17)
ccomp(hope-2, wonder-19)
dobj(find-23, what-20)
nsubj(find-23, you-21)
aux(find-23, might-22)
ccomp(wonder-19, find-23)

(ROOT
  (S
    (S
      (VP (VB Thank)
        (NP (PRP you))
        (PP (IN for)
          (S
            (VP (VBG reading)
              (NP (PRP$ my) (NN missive)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJR longer))
      (SBAR (IN than)
        (S
          (NP (PRP I))
          (VP (VBD had)
            (VP (VBN planned)
              (S
                (NP (PRP it))
                (VP (TO to)
                  (VP (VB be)))))))))
    (. .)))

ccomp(longer-10, Thank-1)
dobj(Thank-1, you-2)
prepc_for(Thank-1, reading-4)
poss(missive-6, my-5)
dobj(reading-4, missive-6)
nsubj(longer-10, it-8)
cop(longer-10, is-9)
root(ROOT-0, longer-10)
mark(planned-14, than-11)
nsubj(planned-14, I-12)
aux(planned-14, had-13)
advcl(longer-10, planned-14)
nsubj(be-17, it-15)
aux(be-17, to-16)
xcomp(planned-14, be-17)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (EX there))
      (VP (VB be)
        (NP (JJ good) (JJ w\/o)
          (ADJP (JJ bad) (, ,) (RB right) (RB w\/o) (JJ wrong) (, ,))
          (NN life) (NN w\/o) (NN death))))
    (. ?)))

advmod(be-4, How-1)
aux(be-4, could-2)
expl(be-4, there-3)
root(ROOT-0, be-4)
amod(death-15, good-5)
amod(death-15, w\/o-6)
amod(wrong-11, bad-7)
advmod(wrong-11, right-9)
advmod(wrong-11, w\/o-10)
amod(death-15, wrong-11)
nn(death-15, life-13)
nn(death-15, w\/o-14)
dep(be-4, death-15)

(ROOT
  (NP (JJ Sincerely) (NN lfschrawyer)))

amod(lfschrawyer-2, Sincerely-1)
root(ROOT-0, lfschrawyer-2)

(ROOT
  (S
    (S
      (VP (VB Remember)
        (SBAR
          (WHADVP (WRB whenever))
          (S
            (NP (PRP we))
            (VP (VBP become)
              (NP
                (NP (JJ full))
                (PP (IN of)
                  (NP (PRP ourselves)))))))))
    (NP (PRP we))
    (VP (VBP open)
      (NP (DT the) (NN door))
      (PP (TO to)
        (NP
          (NP (JJ true) (NN evil))
          (, ,)
          (NP (NNP Satan)))))
    (. .)))

dep(open-9, Remember-1)
advmod(full-5, whenever-2)
nsubj(full-5, we-3)
cop(full-5, become-4)
advcl(Remember-1, full-5)
prep_of(full-5, ourselves-7)
nsubj(open-9, we-8)
root(ROOT-0, open-9)
det(door-11, the-10)
dobj(open-9, door-11)
amod(evil-14, true-13)
prep_to(open-9, evil-14)
appos(evil-14, Satan-16)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBZ wants)
      (S
        (NP (PRP us))
        (VP (TO to)
          (VP (VB love)
            (NP (PRP him))
            (SBAR (IN because)
              (S
                (NP (PRP we))
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (PRN (, ,)
                        (SBAR (RB not) (IN because)
                          (S
                            (NP (PRP we))
                            (VP (VBP have)
                              (S
                                (VP (TO to))))))
                        (, ,))
                      (VP (VB ie)
                        (NP (JJ free) (NN will))))))))))))
    (. .)))

nsubj(wants-2, God-1)
root(ROOT-0, wants-2)
nsubj(love-5, us-3)
aux(love-5, to-4)
xcomp(wants-2, love-5)
dobj(love-5, him-6)
mark(want-9, because-7)
nsubj(want-9, we-8)
xsubj(ie-18, we-8)
advcl(love-5, want-9)
aux(ie-18, to-10)
dep(have-15, not-12)
dep(have-15, because-13)
nsubj(have-15, we-14)
xsubj(to-16, we-14)
parataxis(ie-18, have-15)
xcomp(have-15, to-16)
xcomp(want-9, ie-18)
amod(will-20, free-19)
dobj(ie-18, will-20)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN today) (POS 's))
        (NN society)))
    (NP
      (ADJP (RB too) (JJ much))
      (NN importance))
    (VP (VBZ is)
      (VP (VBN put)
        (PP (IN on)
          (NP (NN money)
            (CC and)
            (NN material) (NNS things)))
        (PP (IN in)
          (NP (PRP$ my) (JJ humble) (NN opinion)))))
    (. .)))

poss(society-4, today-2)
prep_in(put-9, society-4)
advmod(much-6, too-5)
amod(importance-7, much-6)
nsubjpass(put-9, importance-7)
auxpass(put-9, is-8)
root(ROOT-0, put-9)
nn(things-14, money-11)
conj_and(money-11, material-13)
nn(things-14, material-13)
prep_on(put-9, things-14)
poss(opinion-18, my-16)
amod(opinion-18, humble-17)
prep_in(put-9, opinion-18)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP do) (RB not)
              (VP (VB consider)
                (S
                  (NP (PRP themselves))
                  (ADJP (JJ poor)))
                (, ,)
                (SBAR (IN although)
                  (S
                    (PP (IN by)
                      (NP (NNS others)))
                    (NP
                      (NP (NNS standards))
                      (ADJP (RBS most) (JJ likely)))
                    (VP (MD would)
                      (VP (VB be)
                        (VP (VBN considered)
                          (S
                            (ADJP (JJ poor))))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, people-3)
nsubj(consider-7, people-3)
aux(consider-7, do-5)
neg(consider-7, not-6)
rcmod(people-3, consider-7)
nsubj(poor-9, themselves-8)
xcomp(consider-7, poor-9)
mark(considered-19, although-11)
agent(considered-19, others-13)
nsubjpass(considered-19, standards-14)
advmod(likely-16, most-15)
amod(standards-14, likely-16)
aux(considered-19, would-17)
auxpass(considered-19, be-18)
advcl(consider-7, considered-19)
acomp(considered-19, poor-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (PP (IN in)
            (NP (NNP God))))))
    (, ,)
    (NP (PRP you))
    (VP
      (VP (MD must)
        (ADVP (RB also))
        (VP (VB know)
          (SBAR (IN that)
            (S
              (NP (NNP Satan))
              (VP (VBZ is)
                (NP (PRP$ his) (NN rival)))))))
      (, ,)
      (CC and)
      (VP (MD will)
        (VP (VB do)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBZ takes)
                (S
                  (VP (TO to)
                    (VP (VB attempt)
                      (S
                        (VP (TO to)
                          (VP (VB dehumanize)
                            (NP (NNS humans))
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NNS eyes))
                                (PP (IN of)
                                  (NP (JJ other) (NNS humans)))))))))))))))))
    (. .)))

mark(believe-3, If-1)
nsubj(believe-3, you-2)
advcl(know-10, believe-3)
prep_in(believe-3, God-5)
nsubj(know-10, you-7)
nsubj(do-19, you-7)
aux(know-10, must-8)
advmod(know-10, also-9)
root(ROOT-0, know-10)
complm(rival-15, that-11)
nsubj(rival-15, Satan-12)
cop(rival-15, is-13)
poss(rival-15, his-14)
ccomp(know-10, rival-15)
aux(do-19, will-18)
conj_and(know-10, do-19)
dep(takes-22, what-20)
nsubj(takes-22, it-21)
xsubj(attempt-24, it-21)
ccomp(do-19, takes-22)
aux(attempt-24, to-23)
xcomp(takes-22, attempt-24)
aux(dehumanize-26, to-25)
xcomp(attempt-24, dehumanize-26)
dobj(dehumanize-26, humans-27)
det(eyes-30, the-29)
prep_in(dehumanize-26, eyes-30)
amod(humans-33, other-32)
prep_of(eyes-30, humans-33)

(ROOT
  (S
    (NP (NNP God))
    (VP (MD wo) (RB n't)
      (VP (VB fall)
        (PP (IN for)
          (NP (PRP it)))
        (SBAR
          (WHADVP (RB however))
          (S
            (NP (JJ many) (NNS humans))
            (VP
              (VP (MD will))
              (CC and)
              (VP (VBP do)))))))
    (. .)))

nsubj(fall-4, God-1)
aux(fall-4, wo-2)
neg(fall-4, n't-3)
root(ROOT-0, fall-4)
prep_for(fall-4, it-6)
advmod(will-10, however-7)
amod(humans-9, many-8)
nsubj(will-10, humans-9)
nsubj(do-12, humans-9)
dep(fall-4, will-10)
dep(fall-4, do-12)
conj_and(will-10, do-12)

