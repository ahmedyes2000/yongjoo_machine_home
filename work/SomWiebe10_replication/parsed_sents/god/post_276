(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP want)
        (S
          (NP (EX there))
          (VP (TO to)
            (VP (VB be)
              (NP (DT a) (NN god)))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP
          (NP (NN order))
          (PP (IN for)
            (NP (DT a) (NN god)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ real)))))))))
      (, ,)
      (NP
        (NP (NN everything))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP know)
              (PP (IN about)
                (NP (NN science)))))))
      (VP (MD would)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ wrong))))))))
    (. .)))

nsubj(want-3, We-2)
root(ROOT-0, want-3)
expl(god-8, there-4)
aux(god-8, to-5)
cop(god-8, be-6)
det(god-8, a-7)
xcomp(want-3, god-8)
prep_in(have-26, order-12)
det(god-15, a-14)
prep_for(order-12, god-15)
aux(real-18, to-16)
cop(real-18, be-17)
infmod(god-15, real-18)
dobj(know-22, everything-20)
nsubj(have-26, everything-20)
xsubj(wrong-29, everything-20)
nsubj(know-22, we-21)
rcmod(everything-20, know-22)
prep_about(know-22, science-24)
aux(have-26, would-25)
conj_but(want-3, have-26)
aux(wrong-29, to-27)
cop(wrong-29, be-28)
xcomp(have-26, wrong-29)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB simply))
      (NP
        (NP (DT a) (NN restatement))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ previous) (NN argument))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (ADJP
                    (ADJP (NN nothing) (JJR more))
                    (PP (IN than)
                      (NP (DT an) (JJ unsupported) (NN assertion)))))))))))
    (. .)))

nsubj(restatement-6, This-2)
cop(restatement-6, is-3)
advmod(restatement-6, simply-4)
det(restatement-6, a-5)
root(ROOT-0, restatement-6)
det(argument-10, the-8)
amod(argument-10, previous-9)
prep_of(restatement-6, argument-10)
nsubj(nothing-14, argument-10)
cop(nothing-14, is-13)
rcmod(argument-10, nothing-14)
dep(nothing-14, more-15)
det(assertion-19, an-17)
amod(assertion-19, unsupported-18)
prep_than(nothing-14, assertion-19)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN reason)
        (S
          (VP (TO to)
            (VP (VB suppose)
              (SBAR (IN that)
                (S
                  (NP (NN science))
                  (VP (MD would)
                    (VP (VB have)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN dropped)
                              (SBAR (IN if)
                                (S
                                  (NP (NNP God))
                                  (VP (VBZ is)
                                    (ADJP (JJ real))))))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(reason-4, no-3)
nsubj(is-2, reason-4)
aux(suppose-6, to-5)
infmod(reason-4, suppose-6)
complm(have-10, that-7)
nsubj(have-10, science-8)
xsubj(dropped-13, science-8)
aux(have-10, would-9)
ccomp(suppose-6, have-10)
aux(dropped-13, to-11)
auxpass(dropped-13, be-12)
xcomp(have-10, dropped-13)
mark(real-17, if-14)
nsubj(real-17, God-15)
cop(real-17, is-16)
advcl(dropped-13, real-17)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (NP (JJ modern) (NN science))
    (VP (VBZ exists)
      (ADVP (RB precisely))
      (PP (IN because)
        (NP
          (NP (JJ early) (NNS scientists))
          (VP (VBN believed)
            (PP (IN in)
              (NP (NNP God)))))))
    (. .)))

advmod(exists-5, Indeed-1)
amod(science-4, modern-3)
nsubj(exists-5, science-4)
root(ROOT-0, exists-5)
advmod(exists-5, precisely-6)
amod(scientists-9, early-8)
prep_because(exists-5, scientists-9)
partmod(scientists-9, believed-10)
prep_in(believed-10, God-12)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD believed)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN world))
              (, ,)
              (CC and)
              (ADVP (IN by) (JJS extension))
              (NP (DT the) (NN universe))
              (, ,))
            (VP (VBD was)
              (ADJP (JJ rational))))))
      (, ,)
      (VP (VBD ordered))
      (CC and)
      (VP (VBP knowable)
        (SBAR
          (ADVP (RB precisely))
          (IN because)
          (S
            (NP (NNP God))
            (VP (VBD created)
              (S
                (NP (PRP it))
                (NP (DT that) (NN way))))))))
    (. .)))

nsubj(believed-2, They-1)
nsubj(ordered-16, They-1)
nsubj(knowable-18, They-1)
root(ROOT-0, believed-2)
complm(rational-14, that-3)
det(world-5, the-4)
nsubj(rational-14, world-5)
advmod(world-5, by-8)
conj_and(world-5, by-8)
nsubj(rational-14, by-8)
dep(by-8, extension-9)
det(universe-11, the-10)
conj_and(world-5, universe-11)
nsubj(rational-14, universe-11)
cop(rational-14, was-13)
ccomp(believed-2, rational-14)
conj_and(believed-2, ordered-16)
conj_and(believed-2, knowable-18)
advmod(created-22, precisely-19)
dep(created-22, because-20)
nsubj(created-22, God-21)
ccomp(knowable-18, created-22)
nsubj(way-25, it-23)
det(way-25, that-24)
xcomp(created-22, way-25)

(ROOT
  (S
    (S
      (NP (PRP One))
      (VP (MD may)
        (ADVP (RB well))
        (VP (VB reject)
          (NP
            (NP (DT the) (NN idea))
            (PP (IN of)
              (NP (NNP God)))))))
    (CC but)
    (S
      (NP (DT the) (-LRB- -LRB-) (NN non) (-RRB- -RRB-) (NN argument))
      (ADVP (RB above))
      (VP (VBZ does) (RB not)
        (VP (VB provide)
          (NP (NN support))
          (PP (IN for)
            (S
              (VP (VBG doing)
                (ADVP (RB so))))))))
    (. .)))

nsubj(reject-4, One-1)
aux(reject-4, may-2)
advmod(reject-4, well-3)
root(ROOT-0, reject-4)
det(idea-6, the-5)
dobj(reject-4, idea-6)
prep_of(idea-6, God-8)
det(argument-14, the-10)
nn(argument-14, non-12)
nsubj(provide-18, argument-14)
advmod(provide-18, above-15)
aux(provide-18, does-16)
neg(provide-18, not-17)
conj_but(reject-4, provide-18)
dobj(provide-18, support-19)
prepc_for(provide-18, doing-21)
advmod(doing-21, so-22)

