(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN proof))
        (PP (IN for)
          (NP
            (NP (DT the) (NN existance))
            (PP (IN of)
              (NP (NNP God)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(proof-4, no-3)
nsubj(is-2, proof-4)
det(existance-7, the-6)
prep_for(proof-4, existance-7)
prep_of(existance-7, God-9)

(ROOT
  (FRAG
    (ADJP (JJ \/))
    (S (CC And)
      (NP (PRP you))
      (VP (MD can) (RB not)
        (VP (VB prove)
          (NP (DT a) (JJ negative)))))
    (. .)))

root(ROOT-0, \/-1)
cc(prove-6, And-2)
nsubj(prove-6, you-3)
aux(prove-6, can-4)
neg(prove-6, not-5)
dep(\/-1, prove-6)
det(negative-8, a-7)
dobj(prove-6, negative-8)

(ROOT
  (S
    (VP (VBD \/) (-RRB- -RRB-)
      (NP (CC And)
        (NP
          (NP (JJ given))
          (PP (IN that)
            (NP
              (NP (DT the) (NN burden))
              (PP (IN of)
                (NP (NN proof))))))
        (CC lies)
        (ADVP (RP with))
        (NP
          (NP (DT the) (NN person))
          (NP (JJ claiming) (NN something))))
      (, ,)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD should) (RB n't)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB prove)
                    (NP (NN anything))))))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, given-4)
det(burden-7, the-6)
prep_that(given-4, burden-7)
prep_of(burden-7, proof-9)
dobj(\/-1, with-11)
advmod(given-4, with-11)
conj_lies(given-4, with-11)
det(person-13, the-12)
dobj(\/-1, person-13)
conj_lies(given-4, person-13)
amod(something-15, claiming-14)
dep(person-13, something-15)
nsubj(have-20, we-17)
xsubj(prove-22, we-17)
aux(have-20, should-18)
neg(have-20, n't-19)
dep(\/-1, have-20)
aux(prove-22, to-21)
xcomp(have-20, prove-22)
dobj(prove-22, anything-23)

(ROOT
  (S
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNP Logical))
        (PP
          (NP
            (NP (NN reason))
            (SBAR
              (S
                (VP (VBZ is) (: :)
                  (S
                    (VP (VBD \/) (-RRB- -RRB-)
                      (NP
                        (NP (NN Person) (CD 1))
                        (: :) (`` ``)
                        (NP
                          (NP (PRP I))
                          (ADJP
                            (ADJP
                              (ADJP (JJ have))
                              (PRN
                                (NP
                                  (NP (DT a) (NN baseball) ('' ''))
                                  (NP (NNP \/)))
                                (-RRB- -RRB-)))
                            (PRN
                              (NP
                                (NP (NN Person))
                                (NP
                                  (NP (CD 2))
                                  (: :)
                                  (NP (`` ``)
                                    (ADJP (JJ Prove)
                                      (NP (PRP it)))
                                    ('' '') (NNS \/))))
                              (-RRB- -RRB-)))))
                      (PP (NN Person)
                        (NP (CD 1) (NNS pulls)))))))))
          (IN out)
          (NP (DT a) (NN baseball))))
      (CC and)
      (VP
        (ADVP (RB thus))
        (VBZ proves)
        (NP (PRP himself))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, Logical-3)
npadvmod(\/-1, reason-4)
rcmod(reason-4, is-5)
ccomp(is-5, \/-7)
parataxis(is-5, \/-7)
dobj(\/-7, Person-9)
num(Person-9, 1-10)
dep(Person-9, I-13)
amod(I-13, have-14)
det(baseball-16, a-15)
dep(have-14, baseball-16)
dep(baseball-16, \/-18)
dep(have-14, Person-20)
dep(Person-20, 2-21)
amod(\/-27, Prove-24)
dep(Prove-24, it-25)
dep(2-21, \/-27)
prep(\/-7, Person-29)
num(pulls-31, 1-30)
dep(Person-29, pulls-31)
det(baseball-34, a-33)
prep_out(\/-1, baseball-34)
advmod(proves-37, thus-36)
conj_and(\/-1, proves-37)
dobj(proves-37, himself-38)

(ROOT
  (S
    (S
      (VP (VBD \/) (-RRB- -RRB-)
        (NP
          (NP (NN Person) (CD 2))
          (: :) (`` ``)
          (NP (NNP Awesome)))
        (, ,)
        (PRN
          (S
            (NP (NNP let))
            (VP (VBZ 's)
              (VP
                (VP (VB go)
                  (S
                    (VP (VB play)
                      (NP (NN catch) ('' ''))
                      (VP (VB \/) (-RRB- -RRB-)
                        (NP (NNS \/))
                        (-RRB- -RRB-))))
                  (PRN
                    (S
                      (NP (NNP Religious) (NN reason) (NNS \/) (-RRB- -RRB-))
                      (VP (VBD Person)
                        (NP (CD 1))
                        (: :) (`` ``)
                        (S
                          (NP (PRP I))
                          (VP (VB have)
                            (NP (DT a) (NN baseball) ('' '') (NN \/))))))
                    (-RRB- -RRB-))
                  (NP
                    (NP (NN Person) (CD 2))
                    (: :) (`` ``)
                    (NP
                      (NP (NNP Prove))
                      (NP (PRP it))))
                  ('' '')
                  (NP (NNS \/))
                  (-RRB- -RRB-)
                  (PP (NN Person)
                    (NP (CD 1))))
                (: :)
                (NP (`` ``)
                  (S
                    (NP (PRP You))
                    (VP (MD ca) (RB n't)
                      (VP (VB prove)
                        (SBAR
                          (S
                            (NP (PRP I))
                            (VP (VBP do) (RB n't)))))))
                  ('' '') (NN \/)))))
          (-RRB- -RRB-))))
    (NP (NN Person) (CD 2))
    (VP (VBZ walks)
      (PRT (RP away))
      (SBAR (IN because)
        (S
          (NP (DT that) (NN argument))
          (VP (VBZ is)
            (ADVP (RB nowhere))
            (ADJP (RB near) (JJ substantial))))))
    (. .)))

dep(walks-59, \/-1)
dobj(\/-1, Person-3)
num(Person-3, 2-4)
dep(Person-3, Awesome-7)
nsubj(go-11, let-9)
aux(go-11, 's-10)
parataxis(\/-1, go-11)
ccomp(go-11, play-12)
dobj(play-12, catch-13)
dep(play-12, \/-15)
dobj(\/-15, \/-17)
nn(\/-21, Religious-19)
nn(\/-21, reason-20)
nsubj(Person-23, \/-21)
parataxis(go-11, Person-23)
dobj(Person-23, 1-24)
nsubj(have-28, I-27)
dep(Person-23, have-28)
det(\/-32, a-29)
nn(\/-32, baseball-30)
dobj(have-28, \/-32)
dobj(go-11, Person-34)
num(Person-34, 2-35)
dep(Person-34, Prove-38)
dep(Prove-38, it-39)
dobj(go-11, \/-41)
prep(go-11, Person-43)
dep(Person-43, 1-44)
nsubj(prove-50, You-47)
aux(prove-50, ca-48)
neg(prove-50, n't-49)
dep(\/-55, prove-50)
nsubj(do-52, I-51)
ccomp(prove-50, do-52)
neg(do-52, n't-53)
dobj(go-11, \/-55)
nsubj(walks-59, Person-57)
num(Person-57, 2-58)
root(ROOT-0, walks-59)
prt(walks-59, away-60)
mark(substantial-67, because-61)
det(argument-63, that-62)
nsubj(substantial-67, argument-63)
cop(substantial-67, is-64)
advmod(substantial-67, nowhere-65)
advmod(substantial-67, near-66)
advcl(walks-59, substantial-67)

(ROOT
  (S
    (VP (VBD \/) (-RRB- -RRB-)
      (NP
        (NP (PRP It) (POS 's))
        (PP (IN as)
          (NP (JJ substantial))))
      (ADVP (RB as)
        (S
          (VP (VBG eating)
            (NP (DT a) (NN seed))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, It-3)
possessive(It-3, 's-4)
prep_as(It-3, substantial-6)
advmod(\/-1, as-7)
dep(as-7, eating-8)
det(seed-10, a-9)
dobj(eating-8, seed-10)

(ROOT
  (SQ
    (VP (VB \/) (-RRB- -RRB-)
      (NP (DT A) (JJ single))
      (ADVP (RB seed)))
    (. .)))

root(ROOT-0, \/-1)
det(single-4, A-3)
dobj(\/-1, single-4)
advmod(\/-1, seed-5)

(ROOT
  (FRAG
    (X (SYM \/))
    (: -RRB-)
    (NP
      (NP (DT Neither))
      (SBAR
        (S
          (VP (VBP are)
            (ADJP (JJ substanital))))))
    (. .)))

dep(Neither-3, \/-1)
root(ROOT-0, Neither-3)
cop(substanital-5, are-4)
rcmod(Neither-3, substanital-5)

