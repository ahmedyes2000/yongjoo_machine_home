(ROOT
  (SINV
    (ADVP (RB so))
    (VP (VBZ whats))
    (NP (PRP$ your) (NN point))
    (. ?)))

advmod(whats-2, so-1)
root(ROOT-0, whats-2)
poss(point-4, your-3)
nsubj(whats-2, point-4)

(ROOT
  (S
    (NP (DT that) (NN everybody))
    (VP (MD should)
      (VP (VB hear)
        (NP (CD two) (NNS sides))
        (PP (TO to)
          (NP
            (NP (DT every) (JJ single) (NN story))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP hear))))))))
    (. ?)))

det(everybody-2, that-1)
nsubj(hear-4, everybody-2)
aux(hear-4, should-3)
root(ROOT-0, hear-4)
num(sides-6, two-5)
dobj(hear-4, sides-6)
det(story-10, every-8)
amod(story-10, single-9)
prep_to(hear-4, story-10)
dobj(hear-12, story-10)
nsubj(hear-12, they-11)
rcmod(story-10, hear-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (JJ religious) (NNS people))
        (VP (MD would)
          (ADVP (RB really))
          (VP (VB look)
            (PP (IN for)
              (NP (NNS answers)))))))
    (NP (PRP they))
    (VP (MD would)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB start)
              (PP (IN by)
                (S
                  (VP
                    (VP
                      (ADVP (RB first))
                      (VBG questioning)
                      (NP
                        (NP (DT the) (JJ very) (NN existence))
                        (PP (IN of)
                          (NP (NN god)))))
                    (, ,)
                    (CC and)
                    (VP (VBG requiring)
                      (NP (NN proof)))))))))))
    (. .)))

mark(look-6, If-1)
amod(people-3, religious-2)
nsubj(look-6, people-3)
aux(look-6, would-4)
advmod(look-6, really-5)
advcl(have-11, look-6)
prep_for(look-6, answers-8)
nsubj(have-11, they-9)
xsubj(start-13, they-9)
aux(have-11, would-10)
root(ROOT-0, have-11)
aux(start-13, to-12)
xcomp(have-11, start-13)
advmod(questioning-16, first-15)
prepc_by(start-13, questioning-16)
det(existence-19, the-17)
amod(existence-19, very-18)
dobj(questioning-16, existence-19)
prep_of(existence-19, god-21)
prepc_by(start-13, requiring-24)
conj_and(questioning-16, requiring-24)
dobj(requiring-24, proof-25)

(ROOT
  (S
    (NP (PRP you))
    (VP (MD can) (RB not)
      (VP (VB say)
        (NP
          (NP (CD one))
          (VP (VBZ has)
            (NP (DT a) (JJR better) (NN law))
            (SBAR (RB just) (IN because)
              (S
                (NP (PRP it))
                (VP (VBZ does) (RB n't)
                  (VP (VB agree)
                    (PP (IN with)
                      (NP (PRP$ your) (NN ideologyOf) (NN course))))))))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJ possible)
                  (S
                    (VP (TO to)
                      (VP (VB judge)
                        (SBAR (IN whether)
                          (S
                            (NP (DT an) (NN ideology))
                            (VP (VBZ is)
                              (ADJP (JJ right)
                                (CC or)
                                (JJ wrong)))))))))
                (, ,)
                (SBAR (RB just) (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (ADJP (JJ possible)
                        (S
                          (VP (TO to)
                            (VP (VB judge)
                              (NP
                                (NP (DT the) (NN morality))
                                (PP (IN of)
                                  (NP (NN anything) (RB else)))))))))))))))))
    (. .)))

nsubj(say-4, you-1)
aux(say-4, can-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
dobj(say-4, one-5)
dep(one-5, has-6)
det(law-9, a-7)
amod(law-9, better-8)
dobj(has-6, law-9)
advmod(agree-15, just-10)
dep(agree-15, because-11)
nsubj(agree-15, it-12)
aux(agree-15, does-13)
neg(agree-15, n't-14)
dep(has-6, agree-15)
poss(course-19, your-17)
nn(course-19, ideologyOf-18)
prep_with(agree-15, course-19)
nsubj(possible-22, it-20)
cop(possible-22, is-21)
rcmod(one-5, possible-22)
aux(judge-24, to-23)
xcomp(possible-22, judge-24)
complm(right-29, whether-25)
det(ideology-27, an-26)
nsubj(right-29, ideology-27)
nsubj(wrong-31, ideology-27)
cop(right-29, is-28)
ccomp(judge-24, right-29)
ccomp(judge-24, wrong-31)
conj_or(right-29, wrong-31)
advmod(possible-37, just-33)
dep(possible-37, as-34)
nsubj(possible-37, it-35)
cop(possible-37, is-36)
ccomp(possible-22, possible-37)
aux(judge-39, to-38)
xcomp(possible-37, judge-39)
det(morality-41, the-40)
dobj(judge-39, morality-41)
prep_of(morality-41, anything-43)
advmod(anything-43, else-44)

(ROOT
  (S
    (NP
      (NP (NNS Laws))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP do) (RB not)
            (VP (VB give)
              (NP (JJ equal) (NN treatment))
              (PP (TO to)
                (NP
                  (NP (PRP it) (POS 's))
                  (NN inhabitants))))))))
    (, ,)
    (VP (VBP are)
      (NP
        (NP (NNS laws))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP lack)
              (NP (DT a) (JJ good) (NN morality)))))))
    (. .)))

nsubj(give-5, Laws-1)
nsubj(laws-14, Laws-1)
aux(give-5, do-3)
neg(give-5, not-4)
rcmod(Laws-1, give-5)
amod(treatment-7, equal-6)
dobj(give-5, treatment-7)
poss(inhabitants-11, it-9)
prep_to(give-5, inhabitants-11)
cop(laws-14, are-13)
root(ROOT-0, laws-14)
nsubj(lack-16, laws-14)
rcmod(laws-14, lack-16)
det(morality-19, a-17)
amod(morality-19, good-18)
dobj(lack-16, morality-19)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NN slavery))
        (VP (VBD was)
          (VP (VBN accepted)))))
    (, ,)
    (PP (IN for)
      (NP (NN example)))
    (, ,)
    (NP
      (NP (DT the) (NN definition))
      (PP (IN of)
        (NP (NN citizen))))
    (VP (VBD was) (RB not)
      (ADJP (JJ applicable)
        (PP (TO to)
          (NP (DT the) (NNS slaves))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP they))
          (VP (VBD were) (RB not)
            (VP (VBN awarded)
              (NP (DT the) (JJ same) (NNS rights)))))))
    (. .)))

advmod(accepted-4, When-1)
nsubjpass(accepted-4, slavery-2)
auxpass(accepted-4, was-3)
advcl(applicable-15, accepted-4)
prep_for(applicable-15, example-7)
det(definition-10, the-9)
nsubj(applicable-15, definition-10)
prep_of(definition-10, citizen-12)
cop(applicable-15, was-13)
neg(applicable-15, not-14)
root(ROOT-0, applicable-15)
det(slaves-18, the-17)
prep_to(applicable-15, slaves-18)
mark(awarded-24, as-20)
nsubjpass(awarded-24, they-21)
auxpass(awarded-24, were-22)
neg(awarded-24, not-23)
advcl(applicable-15, awarded-24)
det(rights-27, the-25)
amod(rights-27, same-26)
dobj(awarded-24, rights-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB agree)
        (PP (IN with)
          (NP
            (NP (PRP it))
            (, ,)
            (PP (RB not) (RB because) (IN of)
              (NP (DT some) (`` ``) (JJ personal) (NN ideology) ('' '')))))
        (PRN (CC but)
          (SBAR (IN because)
            (S
              (NP (PRP I))
              (VP (VBP believe)
                (S
                  (NP (DT all) (JJ human) (NNS beings))
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ equal)))))))))))
    (. .)))

nsubj(agree-4, I-1)
aux(agree-4, do-2)
neg(agree-4, not-3)
root(ROOT-0, agree-4)
prep_with(agree-4, it-6)
neg(it-6, not-8)
det(ideology-14, some-11)
amod(ideology-14, personal-13)
prep_because_of(it-6, ideology-14)
dep(believe-19, but-16)
mark(believe-19, because-17)
nsubj(believe-19, I-18)
parataxis(agree-4, believe-19)
det(beings-22, all-20)
amod(beings-22, human-21)
nsubj(equal-25, beings-22)
aux(equal-25, to-23)
cop(equal-25, be-24)
xcomp(believe-19, equal-25)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (PRP$ your) (NN example))
        (PP (IN of)
          (NP
            (NP (DT a) (NN country))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ bans)
                  (ADVP (RB homosexuality)))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP
        (ADVP (RB also))
        (VB find)
        (NP (DT that))
        (PP (RB rather)
          (ADJP (JJ disgusting)))
        (SBAR
          (SBARQ
            (WHADVP (WRB how))
            (SQ (MD can)
              (NP (PRP it))
              (VP (VB be)
                (ADJP (JJ right)
                  (S
                    (VP (TO to)
                      (VP (VB judge)
                        (NP (DT a) (NN person))
                        (PP (IN by)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (NN he\/she))
                              (VP (VBZ does)
                                (PP (IN in)
                                  (NP (NN bed)))))))))))))
            (. ?)))))))

poss(example-3, your-2)
prep_in(find-14, example-3)
det(country-6, a-5)
prep_of(example-3, country-6)
nsubj(bans-8, country-6)
rcmod(country-6, bans-8)
advmod(bans-8, homosexuality-9)
nsubj(find-14, I-11)
aux(find-14, would-12)
advmod(find-14, also-13)
root(ROOT-0, find-14)
dobj(find-14, that-15)
prep(find-14, rather-16)
pobj(rather-16, disgusting-17)
advmod(right-22, how-18)
aux(right-22, can-19)
nsubj(right-22, it-20)
cop(right-22, be-21)
dep(find-14, right-22)
aux(judge-24, to-23)
xcomp(right-22, judge-24)
det(person-26, a-25)
dobj(judge-24, person-26)
dobj(does-30, what-28)
nsubj(does-30, he\/she-29)
prepc_by(judge-24, does-30)
prep_in(does-30, bed-32)

(ROOT
  (SQ (VBP are)
    (NP (PRP they))
    (ADJP (JJ harmful)
      (S
        (VP (TO to)
          (VP (VB society)))))
    (. ?)))

cop(harmful-3, are-1)
nsubj(harmful-3, they-2)
root(ROOT-0, harmful-3)
aux(society-5, to-4)
xcomp(harmful-3, society-5)

(ROOT
  (FRAG (WRB how) (. ?)))

root(ROOT-0, how-1)

(ROOT
  (S
    (ADVP (RB Anyway))
    (, ,)
    (VP (VB thank)
      (NP (PRP you))
      (PP (IN for)
        (S
          (VP (VBG showing)
            (NP
              (NP (PRP$ your) (JJ low) (NN level))
              (PP (IN of)
                (NP (NN maturity))))))))
    (. .)))

advmod(thank-3, Anyway-1)
root(ROOT-0, thank-3)
dobj(thank-3, you-4)
prepc_for(thank-3, showing-6)
poss(level-9, your-7)
amod(level-9, low-8)
dobj(showing-6, level-9)
prep_of(level-9, maturity-11)

(ROOT
  (S
    (PP (IN With)
      (NP (DT this)))
    (, ,)
    (NP (PRP I))
    (VP (VBP abstain)
      (PP (IN from)
        (NP (DT the) (JJ ridiculous) (NN debate)))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN created))))))
    (. .)))

prep_with(abstain-5, this-2)
nsubj(abstain-5, I-4)
root(ROOT-0, abstain-5)
det(debate-9, the-7)
amod(debate-9, ridiculous-8)
prep_from(abstain-5, debate-9)
complm(created-13, that-10)
nsubj(created-13, you-11)
aux(created-13, have-12)
ccomp(abstain-5, created-13)

(ROOT
  (S
    (NP (DT The) (NN point))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB illustrate)
            (SBAR (IN that)
              (S
                (NP
                  (NP (JJR more) (NN information))
                  (PP (IN about)
                    (NP (DT a) (NN subject))))
                (VP (VBZ leads)
                  (PP (TO to)
                    (NP
                      (NP (JJR better) (NN judgment))
                      (PP (IN on)
                        (NP (PRP it))))))))))))
    (. .)))

det(point-2, The-1)
nsubj(is-3, point-2)
xsubj(illustrate-5, point-2)
root(ROOT-0, is-3)
aux(illustrate-5, to-4)
xcomp(is-3, illustrate-5)
complm(leads-12, that-6)
amod(information-8, more-7)
nsubj(leads-12, information-8)
det(subject-11, a-10)
prep_about(information-8, subject-11)
ccomp(illustrate-5, leads-12)
amod(judgment-15, better-14)
prep_to(leads-12, judgment-15)
prep_on(judgment-15, it-17)

(ROOT
  (S (CC But)
    (ADVP (RB again))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (JJ enough) (NN information)
          (S
            (VP (TO to)
              (VP (VB judge)
                (NP (PRP you))
                (PP (IN as)
                  (NP (DT a)
                    (ADJP (JJ good)
                      (CC or)
                      (JJ bad))
                    (NN person)))
                (SBAR (IN as)
                  (S
                    (NP (PRP I))
                    (VP (VBP lack)
                      (NP
                        (NP (DT the) (NN information))
                        (PP (IN about)
                          (NP
                            (NP (PRP$ your) (NN age))
                            (, ,)
                            (NP (PRP$ your) (JJ educational) (NN level))
                            (, ,)
                            (CC and)
                            (NP
                              (NP (DT the) (NN degree))
                              (PP (IN of)
                                (NP (PRP$ your) (NN faith))))))))))))))))
    (. .)))

cc(have-7, But-1)
advmod(have-7, again-2)
nsubj(have-7, I-4)
aux(have-7, do-5)
neg(have-7, n't-6)
root(ROOT-0, have-7)
amod(information-9, enough-8)
dobj(have-7, information-9)
aux(judge-11, to-10)
infmod(information-9, judge-11)
dobj(judge-11, you-12)
det(person-18, a-14)
amod(person-18, good-15)
conj_or(good-15, bad-17)
amod(person-18, bad-17)
prep_as(judge-11, person-18)
mark(lack-21, as-19)
nsubj(lack-21, I-20)
advcl(judge-11, lack-21)
det(information-23, the-22)
dobj(lack-21, information-23)
poss(age-26, your-25)
prep_about(information-23, age-26)
poss(level-30, your-28)
amod(level-30, educational-29)
prep_about(information-23, level-30)
conj_and(age-26, level-30)
det(degree-34, the-33)
prep_about(information-23, degree-34)
conj_and(age-26, degree-34)
poss(faith-37, your-36)
prep_of(degree-34, faith-37)

(ROOT
  (NP (: ;) (JJ -RRB-) (NNS cheers) (. .)))


(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB need)
        (NP (NN god))
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP (PRP me))
              (SBAR (IN that)
                (S
                  (NP (JJ pre-judging) (DT a) (NN person))
                  (VP (VBZ is)
                    (ADJP (JJ bad))))))))))
    (: ...)))

cc(need-5, And-1)
nsubj(need-5, I-2)
aux(need-5, did-3)
neg(need-5, n't-4)
root(ROOT-0, need-5)
dobj(need-5, god-6)
aux(tell-8, to-7)
xcomp(need-5, tell-8)
dobj(tell-8, me-9)
complm(bad-15, that-10)
amod(person-13, pre-judging-11)
det(person-13, a-12)
nsubj(bad-15, person-13)
cop(bad-15, is-14)
ccomp(tell-8, bad-15)

(ROOT
  (S (CC Or)
    (SBAR
      (ADVP (RB maybe))
      (IN if)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (VP (VBN god)
            (ADVP (RB then))))))
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB make)
          (NP (DT a) (JJ quick) (NN prejudgment)))))
    (CC and)
    (S
      (INTJ (VB say))
      (NP (PRP you))
      (VP (VBP are)
        (NP (DT a) (NN bigot))))
    (. .)))

advmod(god-6, maybe-2)
dep(god-6, if-3)
nsubj(god-6, I-4)
aux(god-6, had-5)
dep(make-10, god-6)
advmod(god-6, then-7)
nsubj(make-10, I-8)
aux(make-10, could-9)
root(ROOT-0, make-10)
det(prejudgment-13, a-11)
amod(prejudgment-13, quick-12)
dobj(make-10, prejudgment-13)
dep(bigot-19, say-15)
nsubj(bigot-19, you-16)
cop(bigot-19, are-17)
det(bigot-19, a-18)
conj_and(make-10, bigot-19)

(ROOT
  (S
    (ADVP (RB Ideally))
    (NP (PRP we))
    (VP (MD should)
      (VP (VB refrain)
        (PP (IN from)
          (S
            (VP (VBG emitting)
              (NP (JJ moral) (NNS judgments))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP we))
                  (VP (VBP do) (RB n't)
                    (VP (VB have)
                      (NP (JJ enough) (NN information)))))))))))
    (. .)))

advmod(refrain-4, Ideally-1)
nsubj(refrain-4, we-2)
aux(refrain-4, should-3)
root(ROOT-0, refrain-4)
prepc_from(refrain-4, emitting-6)
amod(judgments-8, moral-7)
dobj(emitting-6, judgments-8)
advmod(have-13, when-9)
nsubj(have-13, we-10)
aux(have-13, do-11)
neg(have-13, n't-12)
advcl(emitting-6, have-13)
amod(information-15, enough-14)
dobj(have-13, information-15)

(ROOT
  (S
    (NP (DT The) (NN point))
    (VP (VBD was)
      (PP (IN on)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (NN information))
              (, ,)
              (NP
                (NP (RB not) (DT the) (NN subjectivity))
                (PP (IN of)
                  (NP (NN religion))))
              (, ,))
            (VP (VBZ leads)
              (PP (TO to)
                (NP (JJR better) (NNS judgments))))))))
    (. .)))

det(point-2, The-1)
nsubj(was-3, point-2)
root(ROOT-0, was-3)
advmod(leads-14, how-5)
nsubj(leads-14, information-6)
neg(subjectivity-10, not-8)
det(subjectivity-10, the-9)
appos(information-6, subjectivity-10)
prep_of(subjectivity-10, religion-12)
prepc_on(was-3, leads-14)
amod(judgments-17, better-16)
prep_to(leads-14, judgments-17)

(ROOT
  (S
    (S
      (VP (VBZ thats)
        (SBAR (IN because)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (VP (VBG talking)
                (PP (TO to)
                  (NP (JJ religious) (NNS people)))
                (S
                  (VP (VBG using)
                    (NP (JJ religious) (NNS answers))
                    (ADVP (RB Evidently))))))))))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (NP (PRP$ your) (NN case))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB pose)
                    (NP
                      (NP (DT a) (NN defense))
                      (PP (IN for)
                        (NP (NN god))))))))))))
    (. .)))

ccomp(case-17, thats-1)
mark(talking-5, because-2)
nsubj(talking-5, you-3)
aux(talking-5, are-4)
advcl(thats-1, talking-5)
amod(people-8, religious-7)
prep_to(talking-5, people-8)
xcomp(talking-5, using-9)
amod(answers-11, religious-10)
dobj(using-9, answers-11)
advmod(using-9, Evidently-12)
nsubj(case-17, this-14)
cop(case-17, is-15)
poss(case-17, your-16)
root(ROOT-0, case-17)
mark(trying-22, as-19)
nsubj(trying-22, you-20)
xsubj(pose-24, you-20)
aux(trying-22, are-21)
advcl(case-17, trying-22)
aux(pose-24, to-23)
xcomp(trying-22, pose-24)
det(defense-26, a-25)
dobj(pose-24, defense-26)
prep_for(defense-26, god-28)

(ROOT
  (FRAG
    (PP (IN On)
      (S
        (VP (VBG questioning))))
    (. .)))

root(ROOT-0, On-1)
pcomp(On-1, questioning-2)

(ROOT
  (S
    (NP (NNP Questioning))
    (VP (MD should) (RB not)
      (VP (VB be) (`` ``)
        (ADJP (JJ overcome))
        ('' '')
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (NP (DT an) (NN obstacle)))))))
    (. .)))

nsubj(overcome-6, Questioning-1)
aux(overcome-6, should-2)
neg(overcome-6, not-3)
cop(overcome-6, be-4)
root(ROOT-0, overcome-6)
advmod(obstacle-13, as-8)
dep(obstacle-13, if-9)
nsubj(obstacle-13, it-10)
cop(obstacle-13, was-11)
det(obstacle-13, an-12)
ccomp(overcome-6, obstacle-13)

(ROOT
  (S
    (NP (NNS Questions))
    (ADVP (RB just))
    (VP (VBP need)
      (NP (NNS answers)))
    (. .)))

nsubj(need-3, Questions-1)
advmod(need-3, just-2)
root(ROOT-0, need-3)
dobj(need-3, answers-4)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (JJ religious) (NNS people))
        (VP (VBP seek)
          (NP
            (NP (NNS answers))
            (PP (IN in)
              (NP (NN prayer)))))))
    (, ,)
    (NP (DT the) (NN answer))
    (VP (VBZ has)
      (NP
        (NP (DT a) (JJ high) (NN chance))
        (PP (IN of)
          (S
            (ADVP (RB just))
            (VP (VBG being)
              (NP (DT a) (JJ subjective) (JJ personal) (NN intuition)))))))
    (. .)))

advmod(seek-4, When-1)
amod(people-3, religious-2)
nsubj(seek-4, people-3)
advcl(has-11, seek-4)
dobj(seek-4, answers-5)
prep_in(answers-5, prayer-7)
det(answer-10, the-9)
nsubj(has-11, answer-10)
root(ROOT-0, has-11)
det(chance-14, a-12)
amod(chance-14, high-13)
dobj(has-11, chance-14)
advmod(intuition-21, just-16)
cop(intuition-21, being-17)
det(intuition-21, a-18)
amod(intuition-21, subjective-19)
amod(intuition-21, personal-20)
prepc_of(chance-14, intuition-21)

