(ROOT
  (S
    (PP (VBG Regarding)
      (NP (DT the) (NNS cults)))
    (, ,)
    (NP
      (NP (DT the) (NN reason))
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP I))
          (VP (VBP find)
            (S
              (NP (PRP them))
              (ADJP (JJ relevant)))))))
    (VP (VBZ is)
      (SBAR (IN because)
        (S
          (NP
            (NP (NNS followers))
            (PP (IN of)
              (NP (DT the) (JJ abrahamic) (NNS religions))))
          (VP (VB dismiss)
            (NP (PRP them))
            (PP (IN as)
              (S
                (VP (VBG being)
                  (ADJP (RB completely) (`` ``) (JJ crazy) ('' '')))))
            (SBAR
              (WHADVP (WRB when))
              (S
                (PP (IN in)
                  (NP (PRP$ my) (NN opinion)))
                (, ,)
                (NP
                  (NP (DT the) (JJ abrahamic) (NNS religions))
                  (PP (IN in)
                    (NP (PRP themselves))))
                (VP (VBP are)
                  (ADJP (RB as) (JJ deranged)
                    (PP (IN as)
                      (NP (NNS cults)))))))))))
    (. .)))

det(cults-3, the-2)
prep_regarding(is-12, cults-3)
det(reason-6, the-5)
nsubj(is-12, reason-6)
advmod(find-9, why-7)
nsubj(find-9, I-8)
rcmod(reason-6, find-9)
nsubj(relevant-11, them-10)
xcomp(find-9, relevant-11)
root(ROOT-0, is-12)
mark(dismiss-19, because-13)
nsubj(dismiss-19, followers-14)
det(religions-18, the-16)
amod(religions-18, abrahamic-17)
prep_of(followers-14, religions-18)
advcl(is-12, dismiss-19)
dobj(dismiss-19, them-20)
cop(crazy-25, being-22)
advmod(crazy-25, completely-23)
prepc_as(dismiss-19, crazy-25)
advmod(deranged-39, when-27)
poss(opinion-30, my-29)
prep_in(deranged-39, opinion-30)
det(religions-34, the-32)
amod(religions-34, abrahamic-33)
nsubj(deranged-39, religions-34)
prep_in(religions-34, themselves-36)
cop(deranged-39, are-37)
advmod(deranged-39, as-38)
advcl(dismiss-19, deranged-39)
prep_as(deranged-39, cults-41)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBP find)
      (S
        (NP (PRP them))
        (ADJP (JJ relevant))
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBZ shows)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ happens)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (NNS people))
                        (VP (VBP try)
                          (S
                            (VP (TO to)
                              (VP (VB say)
                                (SBAR (IN that)
                                  (S
                                    (NP (PRP they))
                                    (VP
                                      (VP (VBP have)
                                        (NP
                                          (NP (NN access))
                                          (PP (TO to) (`` ``)
                                            (NP (NN god))
                                            ('' ''))))
                                      (CC or)
                                      (VP (MD can)
                                        (ADVP (RB possibly))
                                        (VP (VB know)
                                          (NP (NN his\/her) (NN mind)))))))))))))))))))))
    (. .)))

dep(find-3, So-1)
nsubj(find-3, I-2)
root(ROOT-0, find-3)
nsubj(shows-8, them-4)
dep(shows-8, relevant-5)
mark(shows-8, because-6)
nsubj(shows-8, it-7)
xcomp(find-3, shows-8)
nsubj(happens-10, what-9)
ccomp(shows-8, happens-10)
advmod(try-13, when-11)
nsubj(try-13, people-12)
xsubj(say-15, people-12)
advcl(happens-10, try-13)
aux(say-15, to-14)
xcomp(try-13, say-15)
complm(have-18, that-16)
nsubj(have-18, they-17)
nsubj(know-27, they-17)
ccomp(say-15, have-18)
dobj(have-18, access-19)
prep_to(access-19, god-22)
aux(know-27, can-25)
advmod(know-27, possibly-26)
ccomp(say-15, know-27)
conj_or(have-18, know-27)
nn(mind-29, his\/her-28)
dobj(know-27, mind-29)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP point)
          (PRT (RP out))
          (NP
            (NP (NN something))
            (PP (IN in)
              (NP (NN science)))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB agree)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP need)
              (S
                (NP
                  (NP (NN education))
                  (, ,)
                  (NP (JJ scientific) (NNS facts))
                  (, ,))
                (VP (TO to)
                  (VP (VB help)
                    (S
                      (NP (PRP us))
                      (VP (VB make)
                        (NP
                          (NP (NNS desicions))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBP are) (RB not)
                                (ADJP (JJ bad)
                                  (PP (IN for)
                                    (NP (PRP us))))))))))))))))))
    (. .)))

mark(point-3, If-1)
nsubj(point-3, you-2)
advcl(agree-12, point-3)
prt(point-3, out-4)
dobj(point-3, something-5)
prep_in(something-5, science-7)
advmod(agree-12, then-9)
nsubj(agree-12, you-10)
aux(agree-12, will-11)
root(ROOT-0, agree-12)
complm(need-15, that-13)
nsubj(need-15, we-14)
ccomp(agree-12, need-15)
nsubj(help-22, education-16)
amod(facts-19, scientific-18)
appos(education-16, facts-19)
aux(help-22, to-21)
xcomp(need-15, help-22)
nsubj(make-24, us-23)
ccomp(help-22, make-24)
dobj(make-24, desicions-25)
nsubj(bad-29, desicions-25)
cop(bad-29, are-27)
neg(bad-29, not-28)
rcmod(desicions-25, bad-29)
prep_for(bad-29, us-31)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (ADVP (RB just))
        (`` ``)
        (VP (VBP think) ('' ''))))
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ bad)
          (PP (IN for)
            (NP
              (NP (DT no) (NN reason))
              (ADVP (IN at) (DT all)))))))
    (: ...) (RB then)
    (S
      (NP (PRP it))
      (VP (VBZ makes)
        (NP (DT no) (NN sense))))
    (. .)))

cc(bad-10, But-1)
mark(think-6, if-2)
nsubj(think-6, you-3)
advmod(think-6, just-4)
dep(bad-10, think-6)
nsubj(bad-10, it-8)
cop(bad-10, is-9)
root(ROOT-0, bad-10)
det(reason-13, no-12)
prep_for(bad-10, reason-13)
advmod(reason-13, at-14)
pobj(at-14, all-15)
advmod(bad-10, then-17)
nsubj(makes-19, it-18)
ccomp(bad-10, makes-19)
det(sense-21, no-20)
dobj(makes-19, sense-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP dont)
      (VP (VB understand)
        (NP (PRP$ your) (NN argument))
        (PP (IN about)
          (S
            (VP (VBG being)
              (NP (NN part) (NN lion) (NN part) (NN tiger)))))))
    (. .)))

nsubj(dont-2, I-1)
root(ROOT-0, dont-2)
xcomp(dont-2, understand-3)
poss(argument-5, your-4)
dobj(understand-3, argument-5)
cop(tiger-11, being-7)
nn(tiger-11, part-8)
nn(tiger-11, lion-9)
nn(tiger-11, part-10)
prepc_about(understand-3, tiger-11)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN girl))
        (PP (IN of)
          (NP (CD 12))))
      (VP (VBG consenting)
        (PP (TO to)
          (NP (NN sex)))
        (PP (IN with)
          (NP
            (NP (DT a) (CD 90) (NN year))
            (ADJP (JJ old))))))
    (: ...)
    (S
      (NP (FW i))
      (VP (VBP think)
        (SBAR
          (S
            (SBAR (IN if)
              (S
                (NP (PRP we))
                (VP (VBP continue)
                  (PP (IN with)
                    (NP (DT this) (NN god) (NN bullshit))))))
            (, ,)
            (NP (NNS children))
            (VP (VBP CAN)
              (VP (VB be)
                (VP (VBN brainwashed)
                  (PP (IN into)
                    (S
                      (VP (VBG doing)
                        (NP (NNS things))
                        (PP (IN without)
                          (S
                            (VP (VBG questioning)
                              (NP (PRP them)))))))))))))))
    (. .)))

det(girl-2, A-1)
nsubj(consenting-5, girl-2)
prep_of(girl-2, 12-4)
root(ROOT-0, consenting-5)
prep_to(consenting-5, sex-7)
det(year-11, a-9)
num(year-11, 90-10)
prep_with(consenting-5, year-11)
amod(year-11, old-12)
nsubj(think-15, i-14)
parataxis(consenting-5, think-15)
mark(continue-18, if-16)
nsubj(continue-18, we-17)
advcl(brainwashed-27, continue-18)
det(bullshit-22, this-20)
nn(bullshit-22, god-21)
prep_with(continue-18, bullshit-22)
nsubjpass(brainwashed-27, children-24)
aux(brainwashed-27, CAN-25)
auxpass(brainwashed-27, be-26)
ccomp(think-15, brainwashed-27)
prepc_into(brainwashed-27, doing-29)
dobj(doing-29, things-30)
prepc_without(doing-29, questioning-32)
dobj(questioning-32, them-33)

(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP (VBN watched)
      (NP (DT the) (NNS videos))
      (PP (IN about)
        (NP (NNP Jesus) (NNP Camp))))
    (. ?)))

aux(watched-3, Have-1)
nsubj(watched-3, you-2)
root(ROOT-0, watched-3)
det(videos-5, the-4)
dobj(watched-3, videos-5)
nn(Camp-8, Jesus-7)
prep_about(watched-3, Camp-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (RB very) (JJ close)
          (PP (TO to)
            (NP (DT the) (JJ same) (NN brainwashing))))
        (SBAR (IN that)
          (S
            (NP (NN cult) (NNS leaders))
            (VP (VBP do))))))
    (: ...)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP know)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ makes)
              (S
                (NP (PRP it))
                (ADJP (RB so) (JJ wrong))))))))
    (. ?)))

nsubj(close-4, It-1)
cop(close-4, is-2)
advmod(close-4, very-3)
root(ROOT-0, close-4)
det(brainwashing-8, the-6)
amod(brainwashing-8, same-7)
prep_to(close-4, brainwashing-8)
complm(do-12, that-9)
nn(leaders-11, cult-10)
nsubj(do-12, leaders-11)
ccomp(close-4, do-12)
nsubj(know-16, you-15)
conj_and(close-4, know-16)
nsubj(makes-18, what-17)
ccomp(know-16, makes-18)
nsubj(wrong-21, it-19)
advmod(wrong-21, so-20)
xcomp(makes-18, wrong-21)

(ROOT
  (FRAG
    (SBAR (IN that)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (VP (VBN targetted)
            (PP (IN at)
              (NP
                (NP (NNS children))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP are)
                      (ADJP (JJ suceptible)))))))))))
    (. .)))

dep(targetted-4, that-1)
nsubjpass(targetted-4, it-2)
auxpass(targetted-4, is-3)
root(ROOT-0, targetted-4)
prep_at(targetted-4, children-6)
nsubj(suceptible-10, children-6)
cop(suceptible-10, are-9)
rcmod(children-6, suceptible-10)

(ROOT
  (S
    (PP (RB Just)
      (PP (IN as)
        (NP
          (NP (DT a) (NN girl))
          (PP (IN of)
            (NP (CD 12))))))
    (, ,)
    (S
      (NP (PRP we))
      (PRN
        (S
          (NP (DT both))
          (VP (MD would)
            (VP (VB agree))))
        (, ,))
      (VP (VBZ has) (RB not)
        (VP (VBN reached)
          (NP
            (NP (DT the) (NN age))
            (PP (IN of)
              (NP (NN consent))))
          (S
            (VP (TO to)
              (VP (VB have)
                (NP (NN sex))))))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NNS children))
        (PP (IN from)
          (NP (JJ jesus) (NN camp))))
      (ADVP (RB also))
      (VP (VBP have) (RB not)
        (VP (VBN reached)
          (NP
            (NP (DT the) (NN age))
            (PP (IN of)
              (NP (NN consent))))
          (S
            (VP (TO to)
              (VP (VB accept)
                (CC or)
                (VB reject)
                (NP (NNS ideas))
                (ADVP (RB independently))))))))
    (. .)))

advmod(reached-15, Just-1)
advcl(reached-15, as-2)
det(girl-4, a-3)
prep_as(reached-15, girl-4)
prep_of(girl-4, 12-6)
nsubj(reached-15, we-8)
nsubj(agree-11, both-9)
aux(agree-11, would-10)
parataxis(reached-15, agree-11)
aux(reached-15, has-13)
neg(reached-15, not-14)
root(ROOT-0, reached-15)
det(age-17, the-16)
dobj(reached-15, age-17)
prep_of(age-17, consent-19)
aux(have-21, to-20)
xcomp(reached-15, have-21)
dobj(have-21, sex-22)
det(children-25, the-24)
nsubj(reached-32, children-25)
amod(camp-28, jesus-27)
prep_from(children-25, camp-28)
advmod(reached-32, also-29)
aux(reached-32, have-30)
neg(reached-32, not-31)
parataxis(reached-15, reached-32)
det(age-34, the-33)
dobj(reached-32, age-34)
prep_of(age-34, consent-36)
aux(accept-38, to-37)
xcomp(reached-32, accept-38)
xcomp(reached-32, reject-40)
conj_or(accept-38, reject-40)
dobj(accept-38, ideas-41)
advmod(accept-38, independently-42)

(ROOT
  (FRAG (WRB why) (. ?)))

root(ROOT-0, why-1)

(ROOT
  (FRAG
    (SBAR (IN because)
      (S
        (NP (PRP they))
        (VP (VBP have) (RB not)
          (VP (VBN been)
            (VP (VBN exposed)
              (PP (TO to)
                (NP
                  (NP (JJR more) (NN information))
                  (PP (IN about)
                    (NP (DT the) (NN world))))))))))
    (. .)))

mark(exposed-6, because-1)
nsubjpass(exposed-6, they-2)
aux(exposed-6, have-3)
neg(exposed-6, not-4)
auxpass(exposed-6, been-5)
root(ROOT-0, exposed-6)
amod(information-9, more-8)
prep_to(exposed-6, information-9)
det(world-12, the-11)
prep_about(information-9, world-12)

(ROOT
  (SBARQ
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (NN god))
      (VP (VB be)
        (PP (IN for)
          (NP
            (NP (DT the) (JJR greater) (NN good))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP it))
                (VP (VBZ inhibits)
                  (NP (PRP$ our) (NN ability)
                    (S
                      (VP (TO to)
                        (VP (VB decide)
                          (PP (IN for)
                            (NP (PRP ourselves))))))))))))))
    (. ?)))

advmod(be-4, how-1)
aux(be-4, can-2)
nsubj(be-4, god-3)
root(ROOT-0, be-4)
det(good-8, the-6)
amod(good-8, greater-7)
prep_for(be-4, good-8)
tmod(inhibits-11, good-8)
advmod(inhibits-11, when-9)
nsubj(inhibits-11, it-10)
dep(good-8, inhibits-11)
poss(ability-13, our-12)
dobj(inhibits-11, ability-13)
aux(decide-15, to-14)
infmod(ability-13, decide-15)
prep_for(decide-15, ourselves-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS people))
        (PP (IN out)
          (NP (RB there)))
        (SBAR
          (WHNP (WP who))
          (S
            (ADVP (RB still))
            (VP (VBP believe)
              (PP (IN in)
                (S
                  (VP (VBG talking)
                    (NP (NNS snakes))))))))))
    (: ...)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, people-3)
nsubj(believe-8, people-3)
prep(people-3, out-4)
pobj(out-4, there-5)
advmod(believe-8, still-7)
rcmod(people-3, believe-8)
prepc_in(believe-8, talking-10)
dobj(talking-10, snakes-11)

(ROOT
  (FRAG
    (PP (IN About)
      (NP (NNS drugs)))
    (. .)))

root(ROOT-0, About-1)
pobj(About-1, drugs-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP are)
            (ADJP (JJ bad)
              (SBAR (IN because)
                (S
                  (NP (NNP Ive))
                  (VP (VBP read)
                    (ADVP (RB enough)
                      (PP (IN about)
                        (NP (PRP$ their) (NNS effects))))
                    (PP (IN on)
                      (NP (DT the) (NN body)))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
nsubj(bad-5, they-3)
cop(bad-5, are-4)
ccomp(believe-2, bad-5)
mark(read-8, because-6)
nsubj(read-8, Ive-7)
ccomp(bad-5, read-8)
advmod(read-8, enough-9)
poss(effects-12, their-11)
prep_about(enough-9, effects-12)
det(body-15, the-14)
prep_on(read-8, body-15)

(ROOT
  (S
    (S
      (ADVP (RB Thus))
      (NP (PRP I))
      (VP (MD can)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP are)
                (ADJP (JJ bad))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP (NN evidence)))
    (. .)))

advmod(say-4, Thus-1)
nsubj(say-4, I-2)
aux(say-4, can-3)
ccomp(is-10, say-4)
nsubj(bad-7, they-5)
cop(bad-7, are-6)
ccomp(say-4, bad-7)
expl(is-10, there-9)
root(ROOT-0, is-10)
nsubj(is-10, evidence-11)

(ROOT
  (S (CC But)
    (S
      (VP (VBG saying)
        (SBAR
          (S
            (NP (NNS things))
            (VP (VBP are)
              (ADJP (JJ bad))
              (PP
                (ADVP (RB just))
                (IN because) (IN of)
                (NP
                  (NP (DT some) (NN intuition))
                  (PP (IN about)
                    (NP (NN god))))))))))
    (, ,)
    (VP (VBZ is)
      (ADVP (RB just))
      (NP (JJ plain) (NN ignorance)))
    (. .)))

cc(ignorance-17, But-1)
dep(ignorance-17, saying-2)
nsubj(bad-5, things-3)
cop(bad-5, are-4)
ccomp(saying-2, bad-5)
advmod(bad-5, just-6)
det(intuition-10, some-9)
prep_because_of(bad-5, intuition-10)
prep_about(intuition-10, god-12)
cop(ignorance-17, is-14)
advmod(ignorance-17, just-15)
amod(ignorance-17, plain-16)
root(ROOT-0, ignorance-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP admit)
        (NP (PRP$ your) (NN point))
        (PP (IN in)
          (S
            (VP (VBG saying)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (MD can)
                    (ADVP (RB never))
                    (VP (VB know)
                      (NP (`` ``) (NN everything) ('' '')))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP
          (VP (VB admit)
            (SBAR (IN that)
              (S
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP you))
                    (VP (VBP make)
                      (NP
                        (NP (DT a) (NN desicion))
                        (, ,)
                        (ADJP
                          (ADJP (RB even) (RB as) (JJ simple))
                          (PP (IN as)
                            (S
                              (VP (VBG buying)
                                (NP (DT a) (JJ new) (NN computer))))))))))
                (, ,)
                (NP (PRP you))
                (VP (VBP do)
                  (NP (NN research))))))
          (CC and)
          (VP (VB try)
            (S
              (VP (TO to)
                (VP (VB find)
                  (PRT (RP out))
                  (ADVP
                    (ADVP (RB as) (RB much))
                    (SBAR (IN as)
                      (S
                        (NP (PRP you))
                        (VP (MD can))))))))
            (SBAR (RB so) (IN that)
              (S
                (NP (PRP you))
                (VP (MD will)
                  (VP (VB be)
                    (ADJP (RBR better) (VBN equipped)
                      (PP (IN for)
                        (S
                          (VP (VBG making)
                            (NP (DT a) (NN decision))))))))))))))
    (. .)))

nsubj(admit-2, I-1)
root(ROOT-0, admit-2)
poss(point-4, your-3)
dobj(admit-2, point-4)
prepc_in(admit-2, saying-6)
nsubj(know-10, we-7)
aux(know-10, can-8)
neg(know-10, never-9)
ccomp(saying-6, know-10)
dobj(know-10, everything-12)
nsubj(admit-18, you-16)
nsubj(try-39, you-16)
xsubj(find-41, you-16)
aux(admit-18, must-17)
conj_but(admit-2, admit-18)
complm(do-36, that-19)
advmod(make-22, when-20)
nsubj(make-22, you-21)
advcl(do-36, make-22)
det(desicion-24, a-23)
dobj(make-22, desicion-24)
advmod(simple-28, even-26)
advmod(simple-28, as-27)
amod(desicion-24, simple-28)
prepc_as(simple-28, buying-30)
det(computer-33, a-31)
amod(computer-33, new-32)
dobj(buying-30, computer-33)
nsubj(do-36, you-35)
ccomp(admit-18, do-36)
dobj(do-36, research-37)
conj_but(admit-2, try-39)
conj_and(admit-18, try-39)
aux(find-41, to-40)
xcomp(try-39, find-41)
prt(find-41, out-42)
advmod(much-44, as-43)
advmod(find-41, much-44)
mark(can-47, as-45)
nsubj(can-47, you-46)
ccomp(much-44, can-47)
advmod(equipped-54, so-48)
dep(equipped-54, that-49)
nsubjpass(equipped-54, you-50)
aux(equipped-54, will-51)
auxpass(equipped-54, be-52)
advmod(equipped-54, better-53)
advcl(try-39, equipped-54)
ccomp(try-39, equipped-54)
prepc_for(equipped-54, making-56)
det(decision-58, a-57)
dobj(making-56, decision-58)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADJP (RB as) (JJ simple)
          (PP (IN as)
            (NP (DT that))))))
    (: ...)
    (S
      (NP (PRP we))
      (VP (VBP become)
        (ADJP
          (ADJP (RBR more) (VBN educated))
          (SBAR (IN so)
            (S
              (NP (PRP we))
              (VP (MD can)
                (VP (VB make)
                  (NP (JJR better) (NNS decisions)))))))))
    (. .)))

nsubj(simple-4, It-1)
cop(simple-4, 's-2)
advmod(simple-4, as-3)
root(ROOT-0, simple-4)
prep_as(simple-4, that-6)
nsubj(educated-11, we-8)
cop(educated-11, become-9)
advmod(educated-11, more-10)
parataxis(simple-4, educated-11)
mark(make-15, so-12)
nsubj(make-15, we-13)
aux(make-15, can-14)
ccomp(educated-11, make-15)
amod(decisions-17, better-16)
dobj(make-15, decisions-17)

(ROOT
  (S
    (S
      (NP (WDT Which))
      (VP (VBZ leads)
        (PP (TO to)
          (NP (DT the) (JJ final) (NN point)))))
    (: ...)
    (S
      (NP (JJ religious) (NNS people))
      (VP (VBP do) (RB not)
        (VP (VB do)
          (NP (NNS things))
          (ADVP (RB just))
          (SBAR
            (SBAR
              (S
                (VP (TO to)
                  (VP (VB please)
                    (NP (NN god))))))
            (, ,)
            (CC but)
            (SBAR (IN because)
              (S
                (NP (PRP they))
                (ADVP (RB also))
                (VP (VBP think)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (NP
                          (NP (DT the) (JJ right) (NN way))
                          (PP (IN of)
                            (NP (VBG living))))))))))))))
    (. .)))

nsubj(leads-2, Which-1)
root(ROOT-0, leads-2)
det(point-6, the-4)
amod(point-6, final-5)
prep_to(leads-2, point-6)
amod(people-9, religious-8)
nsubj(do-12, people-9)
aux(do-12, do-10)
neg(do-12, not-11)
parataxis(leads-2, do-12)
dobj(do-12, things-13)
advmod(do-12, just-14)
aux(please-16, to-15)
dep(do-12, please-16)
dobj(please-16, god-17)
mark(think-23, because-20)
nsubj(think-23, they-21)
advmod(think-23, also-22)
dep(do-12, think-23)
conj_but(please-16, think-23)
nsubj(way-28, it-24)
cop(way-28, 's-25)
det(way-28, the-26)
amod(way-28, right-27)
ccomp(think-23, way-28)
prep_of(way-28, living-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP are) (RB all)
            (ADJP (VBN entitled)
              (PP (TO to)
                (NP
                  (NP (DT the) (JJ same) (NN freedom))
                  (SBAR
                    (S
                      (NP (JJ religious) (NNS people))
                      (VP (VBP want)
                        (PP (IN of)
                          (S
                            (VP (VBG choosing)
                              (NP
                                (NP (DT the) (JJS best) (NN way))
                                (PP (IN of)
                                  (S
                                    (VP (VBG living)
                                      (SBAR (IN if)
                                        (S
                                          (NP (DT this) (NN behavior))
                                          (VP (VBZ is) (RB not)
                                            (VP (VBG going)
                                              (S
                                                (VP (TO to)
                                                  (VP (VB harm)
                                                    (S
                                                      (NP (NN anyone))
                                                      (ADJP (RB else)))))))))))))))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubjpass(entitled-6, we-3)
auxpass(entitled-6, are-4)
advmod(entitled-6, all-5)
ccomp(think-2, entitled-6)
det(freedom-10, the-8)
amod(freedom-10, same-9)
prep_to(entitled-6, freedom-10)
dobj(want-13, freedom-10)
amod(people-12, religious-11)
nsubj(want-13, people-12)
rcmod(freedom-10, want-13)
prepc_of(want-13, choosing-15)
det(way-18, the-16)
amod(way-18, best-17)
dobj(choosing-15, way-18)
prepc_of(way-18, living-20)
mark(going-26, if-21)
det(behavior-23, this-22)
nsubj(going-26, behavior-23)
xsubj(harm-28, behavior-23)
aux(going-26, is-24)
neg(going-26, not-25)
advcl(living-20, going-26)
aux(harm-28, to-27)
xcomp(going-26, harm-28)
nsubj(else-30, anyone-29)
xcomp(harm-28, else-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB never))
      (VP (VBN come)
        (PP (IN across)
          (NP
            (NP (DT any) (JJ scientific) (NN evidence))
            (PP (IN as) (TO to)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (NN sodomy))
                  (VP (VBZ is)
                    (ADJP (JJ bad)
                      (PP (IN for)
                        (NP (PRP you))))))))))))
    (. .)))

nsubj(come-4, I-1)
aux(come-4, 've-2)
neg(come-4, never-3)
root(ROOT-0, come-4)
det(evidence-8, any-6)
amod(evidence-8, scientific-7)
prep_across(come-4, evidence-8)
advmod(bad-14, why-11)
nsubj(bad-14, sodomy-12)
cop(bad-14, is-13)
prepc_as_to(evidence-8, bad-14)
prep_for(bad-14, you-16)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN basis))
        (PP (IN for)
          (S
            (VP (VBG saying)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ is) (`` ``)
                    (ADJP (JJ bad))
                    ('' '')))))))))
    (. .)))

advmod(have-4, Therefore-1)
nsubj(have-4, I-3)
root(ROOT-0, have-4)
det(basis-6, no-5)
dobj(have-4, basis-6)
prepc_for(basis-6, saying-8)
nsubj(bad-12, it-9)
cop(bad-12, is-10)
ccomp(saying-8, bad-12)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ is)
      (NP (PRP it))
      (ADJP (JJ bad)))
    (. ?)))

advmod(bad-4, Why-1)
cop(bad-4, is-2)
nsubj(bad-4, it-3)
root(ROOT-0, bad-4)

