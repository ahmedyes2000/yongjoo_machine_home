(ROOT
  (S
    (NP
      (NP (NN Everything))
      (PP (IN in)
        (NP (PRP$ our) (NN world))))
    (VP (VBZ is)
      (VP (VBN made)
        (PRT (RP up))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP think)
              (PP (IN about)
                (NP
                  (NP (PRP it))
                  (, ,)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBD thought)
                        (PP (IN of)
                          (NP
                            (NP (DT the) (JJ different) (NNS languages))
                            (, ,)
                            (NP (DT the) (NN alphabet))))
                        (, ,)
                        (S
                          (S
                            (INTJ (UH yes))
                            (NP (DT each) (NN word))
                            (VP (VBZ is)
                              (VP (VBN derived)
                                (PP (IN from)
                                  (NP (JJ different) (NNS roots))))))
                          (CC but)
                          (SBARQ
                            (WHADVP (WRB where))
                            (SQ (VBD did)
                              (NP (PRP it))
                              (VP
                                (ADVP (DT all))
                                (VB come)
                                (PP (IN from)
                                  (NP
                                    (NP (NN everything))
                                    (SBAR
                                      (S
                                        (NP (PRP we))
                                        (VP (VBP know)
                                          (SBAR
                                            (S
                                              (VP (VBZ is)
                                                (VP (VBN based)
                                                  (PP (IN on)
                                                    (NP (NNS definitions))))))))))))
                                (SBAR (IN that)
                                  (S
                                    (NP (PRP we))
                                    (VP (VBD were)
                                      (VP (VBN taught)
                                        (PP (IN as)
                                          (NP (DT a) (NN child)))))))))))))))))))))
    (. .)))

nsubjpass(made-6, Everything-1)
poss(world-4, our-3)
prep_in(Everything-1, world-4)
auxpass(made-6, is-5)
root(ROOT-0, made-6)
prt(made-6, up-7)
mark(think-10, if-8)
nsubj(think-10, you-9)
advcl(made-6, think-10)
prep_about(think-10, it-12)
nsubj(thought-15, it-12)
rcmod(it-12, thought-15)
det(languages-19, the-17)
amod(languages-19, different-18)
prep_of(thought-15, languages-19)
det(alphabet-22, the-21)
appos(languages-19, alphabet-22)
dep(derived-28, yes-24)
det(word-26, each-25)
nsubjpass(derived-28, word-26)
auxpass(derived-28, is-27)
dep(thought-15, derived-28)
amod(roots-31, different-30)
prep_from(derived-28, roots-31)
advmod(come-37, where-33)
aux(come-37, did-34)
nsubj(come-37, it-35)
advmod(come-37, all-36)
dep(thought-15, come-37)
conj_but(derived-28, come-37)
prep_from(come-37, everything-39)
nsubj(know-41, we-40)
rcmod(everything-39, know-41)
auxpass(based-43, is-42)
ccomp(know-41, based-43)
prep_on(based-43, definitions-45)
complm(taught-49, that-46)
nsubjpass(taught-49, we-47)
auxpass(taught-49, were-48)
ccomp(come-37, taught-49)
det(child-52, a-51)
prep_as(taught-49, child-52)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ includes)
        (NP (NN religion))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (VBN made)
          (PRT (RP up)))
        (NN story))
      (SBAR (IN that)
        (S
          (NP (NN someone))
          (VP (VBD thought)
            (PRT (RP up))
            (NP (DT a) (JJ long) (NN time))
            (ADVP (RB ago)
              (PP (IN before)
                (NP
                  (NP
                    (NP (DT the) (NN theory))
                    (PP (IN of)
                      (NP (DT the) (JJ big) (NN bang))))
                  (CC or)
                  (NP
                    (NP (DT the) (NN theory))
                    (PP (IN of)
                      (NP (NN evolution)))))))
            (S
              (VP (TO to)
                (VP (VB explain)
                  (S
                    (SBAR
                      (WHADVP (WRB why))
                      (S
                        (NP (PRP we))
                        (VP (VBP are) (RB all)
                          (ADVP (RB here)))))
                    (, ,)
                    (NP (PRP they))
                    (VP (VBD did)
                      (SBAR (RB so) (IN because)
                        (S
                          (NP
                            (NP (JJS most) (NNS people))
                            (PP (IN in)
                              (NP (JJR earlier) (NNS times))))
                          (VP (VBD were)
                            (ADJP (JJ simple)
                              (SBAR
                                (S
                                  (VP
                                    (VP (VBD minded))
                                    (CC and)
                                    (VP (MD could) (RB not)
                                      (VP (VB understand)
                                        (NP
                                          (NP (DT the) (JJ scientific) (NNS terms))
                                          (PP (IN for)
                                            (SBAR
                                              (WHADVP (WRB why))
                                              (S
                                                (NP (PRP we))
                                                (ADVP (DT all))
                                                (VP (VBP exist))))))))))))))))))))))))
    (. .)))

nsubj(includes-2, This-1)
ccomp(story-10, includes-2)
dobj(includes-2, religion-3)
nsubj(story-10, it-5)
cop(story-10, is-6)
det(story-10, a-7)
amod(story-10, made-8)
dep(made-8, up-9)
root(ROOT-0, story-10)
complm(thought-13, that-11)
nsubj(thought-13, someone-12)
xsubj(explain-32, someone-12)
ccomp(story-10, thought-13)
prt(thought-13, up-14)
det(time-17, a-15)
amod(time-17, long-16)
dobj(thought-13, time-17)
advmod(thought-13, ago-18)
det(theory-21, the-20)
prep_before(ago-18, theory-21)
det(bang-25, the-23)
amod(bang-25, big-24)
prep_of(theory-21, bang-25)
det(theory-28, the-27)
prep_before(ago-18, theory-28)
conj_or(theory-21, theory-28)
prep_of(theory-28, evolution-30)
aux(explain-32, to-31)
xcomp(thought-13, explain-32)
advmod(are-35, why-33)
nsubj(are-35, we-34)
advcl(did-40, are-35)
advmod(are-35, all-36)
advmod(are-35, here-37)
nsubj(did-40, they-39)
ccomp(explain-32, did-40)
advmod(simple-49, so-41)
dep(simple-49, because-42)
amod(people-44, most-43)
nsubj(simple-49, people-44)
amod(times-47, earlier-46)
prep_in(people-44, times-47)
cop(simple-49, were-48)
ccomp(did-40, simple-49)
dep(simple-49, minded-50)
aux(understand-54, could-52)
neg(understand-54, not-53)
dep(simple-49, understand-54)
conj_and(minded-50, understand-54)
det(terms-57, the-55)
amod(terms-57, scientific-56)
dobj(understand-54, terms-57)
advmod(exist-62, why-59)
nsubj(exist-62, we-60)
advmod(exist-62, all-61)
prepc_for(terms-57, exist-62)

(ROOT
  (S
    (S
      (VP (VBG Assuming)
        (S
          (NP (PRP we))
          (VP (VB exist)
            (ADVP (RB regardless)
              (PP (IN of)
                (NP
                  (NP (PRP$ our) (NN lack))
                  (PP (IN of)
                    (NP (NN understanding))))))))))
    (PRN (, ,)
      (S
        (NP
          (NP (NN everything))
          (PP (IN in)
            (NP (PRP$ our) (NN world))))
        (VP (VBZ is)
          (ADJP (JJ flawed))
          (, ,)
          (INTJ (UH man)))))
    (`` ``)
    (VP (VBZ s)
      (NP
        (NP (JJ ultimate) (NN flaw))
        (SBAR
          (S
            (VP (VBZ is)
              (SBAR
                (WHADVP (WRB how)
                  (ADJP (JJ naive)))
                (S
                  (NP (PRP he))
                  (VP (VBZ is)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN environment))
                        (SBAR
                          (WHPP (IN in)
                            (WHNP (WDT which)))
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (VP (VBN placed)))))))))))))))
    (. .)))

csubj(flaw-22, Assuming-1)
nsubj(exist-3, we-2)
ccomp(Assuming-1, exist-3)
poss(lack-7, our-6)
prep_regardless_of(exist-3, lack-7)
prep_of(lack-7, understanding-9)
nsubj(flawed-16, everything-11)
poss(world-14, our-13)
prep_in(everything-11, world-14)
cop(flawed-16, is-15)
parataxis(flaw-22, flawed-16)
dep(flawed-16, man-18)
cop(flaw-22, s-20)
amod(flaw-22, ultimate-21)
root(ROOT-0, flaw-22)
rcmod(flaw-22, is-23)
advmod(is-27, how-24)
dep(how-24, naive-25)
nsubj(is-27, he-26)
ccomp(is-23, is-27)
det(environment-30, the-29)
prep_to(is-27, environment-30)
rel(placed-35, which-32)
nsubjpass(placed-35, he-33)
auxpass(placed-35, was-34)
rcmod(environment-30, placed-35)

(ROOT
  (S
    (S
      (S
        (VP (TO To)
          (VP (VB be)
            (ADJP (JJ honest)))))
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT no) (NN way)
          (S
            (VP (TO to)
              (VP (VB prove)
                (SBAR (IN that)
                  (S
                    (NP (NN god))
                    (VP (VBZ exists))))))))))
    (, ,)
    (CC but)
    (S
      (NP (NN someone))
      (ADVP (RB once))
      (VP (VBD told)
        (NP (PRP me))
        (SBAR (IN that)
          (S
            (NP (NN life))
            (VP (VBZ is)
              (ADJP (RB much) (JJR easier))
              (S
                (VP (TO to)
                  (VP (VB live)
                    (SBAR (IN if)
                      (S
                        (NP (PRP you))
                        (VP (VBP have)
                          (VP (VBN faith)
                            (PP (IN in)
                              (NP
                                (NP (DT some) (NN thing))
                                (ADJP (RB much) (JJR bigger))))
                            (PP (IN than)
                              (NP (PRP$ your) (JJ own) (NN existence)))))))))))))))
    (. .)))

aux(honest-3, To-1)
cop(honest-3, be-2)
dep(is-5, honest-3)
expl(is-5, there-4)
root(ROOT-0, is-5)
det(way-7, no-6)
nsubj(is-5, way-7)
aux(prove-9, to-8)
infmod(way-7, prove-9)
complm(exists-12, that-10)
nsubj(exists-12, god-11)
ccomp(prove-9, exists-12)
nsubj(told-17, someone-15)
advmod(told-17, once-16)
conj_but(is-5, told-17)
dobj(told-17, me-18)
complm(easier-23, that-19)
nsubj(easier-23, life-20)
xsubj(live-25, life-20)
cop(easier-23, is-21)
advmod(easier-23, much-22)
ccomp(told-17, easier-23)
aux(live-25, to-24)
xcomp(easier-23, live-25)
mark(faith-29, if-26)
nsubj(faith-29, you-27)
aux(faith-29, have-28)
advcl(live-25, faith-29)
det(thing-32, some-31)
prep_in(faith-29, thing-32)
advmod(bigger-34, much-33)
amod(thing-32, bigger-34)
poss(existence-38, your-36)
amod(existence-38, own-37)
prep_than(faith-29, existence-38)

(ROOT
  (S
    (NP (NNP God))
    (ADVP (RB only))
    (VP (VBZ exists)
      (SBAR (IN because)
        (S
          (NP (NNS people))
          (VP (VBP believe)
            (PP (IN in)
              (NP (PRP him)))))))
    (. .)))

nsubj(exists-3, God-1)
advmod(exists-3, only-2)
root(ROOT-0, exists-3)
mark(believe-6, because-4)
nsubj(believe-6, people-5)
advcl(exists-3, believe-6)
prep_in(believe-6, him-8)

(ROOT
  (S
    (S
      (NP
        (NP (JJ Other))
        (PP (IN than)
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (DT no) (JJ solid) (NN proof))
                  (, ,)
                  (NP (FW i))))))))
      (ADVP (RB personally))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (NP
            (NP (DT the) (NN evidence))
            (PP (IN of)
              (NP (PRP$ his) (NN existence))))
          (ADVP (RB anywhere)))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (NN something) (RB else))
                (PP (IN out)
                  (NP (RB there)))))))
        (S
          (VP (TO to)
            (VP (VB explain)
              (NP
                (NP (DT the) (JJ strange) (NN fate))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP are)
                      (NP
                        (NP (DT all))
                        (PP (IN on)
                          (NP (DT the) (NN path)
                            (S
                              (VP (TO to)
                                (VP (VB meet))))))))))))))))
    (. .)))

nsubj(see-14, Other-1)
nsubj(has-24, Other-1)
complm(is-5, that-3)
expl(is-5, there-4)
prepc_than(Other-1, is-5)
det(proof-8, no-6)
amod(proof-8, solid-7)
nsubj(is-5, proof-8)
appos(proof-8, i-10)
advmod(see-14, personally-11)
aux(see-14, do-12)
neg(see-14, n't-13)
root(ROOT-0, see-14)
det(evidence-16, the-15)
dobj(see-14, evidence-16)
poss(existence-19, his-18)
prep_of(evidence-16, existence-19)
advmod(see-14, anywhere-20)
expl(has-24, there-23)
xsubj(something-27, there-23)
xsubj(explain-32, there-23)
conj_but(see-14, has-24)
aux(something-27, to-25)
cop(something-27, be-26)
xcomp(has-24, something-27)
advmod(something-27, else-28)
prep(something-27, out-29)
pobj(out-29, there-30)
aux(explain-32, to-31)
xcomp(has-24, explain-32)
det(fate-35, the-33)
amod(fate-35, strange-34)
dobj(explain-32, fate-35)
nsubj(all-38, we-36)
cop(all-38, are-37)
rcmod(fate-35, all-38)
det(path-41, the-40)
prep_on(all-38, path-41)
aux(meet-43, to-42)
infmod(path-41, meet-43)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (NN god))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBZ is)
                        (ADJP (JJ cruel))
                        (, ,)
                        (SBAR (IN that)
                          (S
                            (NP (PRP he))
                            (VP (VBD placed)
                              (NP (PDT such) (DT a) (JJ flawed) (NN creature))
                              (PP (IN in)
                                (NP (DT this) (NN environment)))
                              (PP (TO to))))))))))))
          (, ,)
          (VP (VB watch)
            (S
              (NP (PRP it))
              (VP (VB react)
                (ADJP (RB purely)
                  (PP (IN for)
                    (NP (PRP$ his) (JJ own) (NN entertainment))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
complm(watch-25, that-3)
mark(is-6, if-4)
expl(is-6, there-5)
advcl(watch-25, is-6)
det(god-8, a-7)
nsubj(is-6, god-8)
nsubj(cruel-11, he-9)
cop(cruel-11, is-10)
rcmod(god-8, cruel-11)
complm(placed-15, that-13)
nsubj(placed-15, he-14)
ccomp(cruel-11, placed-15)
predet(creature-19, such-16)
det(creature-19, a-17)
amod(creature-19, flawed-18)
dobj(placed-15, creature-19)
det(environment-22, this-21)
prep_in(placed-15, environment-22)
prep(placed-15, to-23)
ccomp(believe-2, watch-25)
nsubj(react-27, it-26)
ccomp(watch-25, react-27)
acomp(react-27, purely-28)
poss(entertainment-32, his-30)
amod(entertainment-32, own-31)
prep_for(purely-28, entertainment-32)

(ROOT
  (S
    (S
      (NP (NNP Man))
      (VP (VBZ is)
        (ADJP (JJ ignorant))))
    (, ,)
    (NP (NN therefor) (NN man))
    (VP (VBZ is)
      (NP (PRP$ his) (JJ own) (NN downfall)))
    (. .)))

nsubj(ignorant-3, Man-1)
cop(ignorant-3, is-2)
ccomp(downfall-10, ignorant-3)
nn(man-6, therefor-5)
nsubj(downfall-10, man-6)
cop(downfall-10, is-7)
poss(downfall-10, his-8)
amod(downfall-10, own-9)
root(ROOT-0, downfall-10)

