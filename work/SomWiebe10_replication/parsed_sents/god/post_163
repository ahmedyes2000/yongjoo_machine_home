(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB just))
    (VP (VBZ is) (RB n't)
      (NP (DT the) (NN case))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD ca) (RB n't)
            (VP (VB prove)
              (NP (DT a) (JJ negative)))))))
    (. .)))

nsubj(case-6, It-1)
advmod(case-6, just-2)
cop(case-6, is-3)
neg(case-6, n't-4)
det(case-6, the-5)
root(ROOT-0, case-6)
complm(prove-11, that-7)
nsubj(prove-11, you-8)
aux(prove-11, ca-9)
neg(prove-11, n't-10)
ccomp(case-6, prove-11)
det(negative-13, a-12)
dobj(prove-11, negative-13)

(ROOT
  (S
    (NP (JJ Impossibility) (NNS proofs))
    (VP (VBP are)
      (ADJP (JJ common)
        (PP (IN in)
          (NP (NNS mathematics)))))
    (. .)))

amod(proofs-2, Impossibility-1)
nsubj(common-4, proofs-2)
cop(common-4, are-3)
root(ROOT-0, common-4)
prep_in(common-4, mathematics-6)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS lots))
        (PP (IN of)
          (NP (PRP them)))
        (PP (IN in)
          (NP (NNP Euclid)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, lots-3)
prep_of(lots-3, them-5)
prep_in(lots-3, Euclid-7)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ particular) (NN concept))
      (PP (IN of)
        (NP (NNP God))))
    (VP (MD could)
      (ADVP (RB indeed))
      (VP (VB be)
        (VP (VBN proven)
          (ADJP
            (ADJP (JJ self-contradictory))
            (CC and)
            (ADJP
              (ADVP (RB therefore))
              (JJ impossible)))
          (SBAR (IN if)
            (S
              (NP (RB only) (NN anybody))
              (VP (VBD were)
                (ADJP (JJ willing)
                  (S
                    (VP (TO to)
                      (VP
                        (ADVP (RB adequately))
                        (VB define)
                        (NP (DT a) (NNP God) (NN concept))))))))))))
    (. .)))

det(concept-3, A-1)
amod(concept-3, particular-2)
nsubjpass(proven-9, concept-3)
prep_of(concept-3, God-5)
aux(proven-9, could-6)
advmod(proven-9, indeed-7)
auxpass(proven-9, be-8)
root(ROOT-0, proven-9)
acomp(proven-9, self-contradictory-10)
advmod(impossible-13, therefore-12)
acomp(proven-9, impossible-13)
conj_and(self-contradictory-10, impossible-13)
mark(willing-18, if-14)
advmod(anybody-16, only-15)
nsubj(willing-18, anybody-16)
cop(willing-18, were-17)
advcl(proven-9, willing-18)
aux(define-21, to-19)
advmod(define-21, adequately-20)
xcomp(willing-18, define-21)
det(concept-24, a-22)
nn(concept-24, God-23)
dobj(define-21, concept-24)

(ROOT
  (S
    (S
      (ADVP (RB Formerly))
      (, ,)
      (NP (NNS philosophers)
        (CC and)
        (NNS theologians))
      (VP (VBD were)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB specify)
                (SBAR
                  (WHNP (WP what) (DT the) (NN hell))
                  (S
                    (NP (PRP they))
                    (VP (VBD were)
                      (VP (VBG talking) (IN about)))))))))))
    (: ;)
    (S (CC but)
      (S
        (NP (NN god) (NN talk))
        (VP (VBZ is)
          (ADVP (RB now))
          (NP
            (ADJP (RB merely) (JJ emotional))
            (NN blather))))
      (CC and)
      (S
        (NP (NNS theologies))
        (VP (MD ca) (RB n't)
          (ADVP (RB even))
          (VP
            (ADVP (RB properly))
            (VB be)
            (VP (VBN said)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ wrong))))))))))
    (. .)))

advmod(able-7, Formerly-1)
nsubj(able-7, philosophers-3)
conj_and(philosophers-3, theologians-5)
nsubj(able-7, theologians-5)
cop(able-7, were-6)
root(ROOT-0, able-7)
aux(specify-9, to-8)
xcomp(able-7, specify-9)
det(hell-12, what-10)
det(hell-12, the-11)
dobj(talking-15, hell-12)
nsubj(talking-15, they-13)
aux(talking-15, were-14)
ccomp(specify-9, talking-15)
dep(talking-15, about-16)
nn(talk-20, god-19)
nsubj(blather-25, talk-20)
cop(blather-25, is-21)
advmod(blather-25, now-22)
advmod(emotional-24, merely-23)
amod(blather-25, emotional-24)
parataxis(able-7, blather-25)
nsubjpass(said-33, theologies-27)
aux(said-33, ca-28)
neg(said-33, n't-29)
advmod(said-33, even-30)
advmod(said-33, properly-31)
auxpass(said-33, be-32)
parataxis(able-7, said-33)
conj_and(blather-25, said-33)
aux(wrong-36, to-34)
cop(wrong-36, be-35)
xcomp(said-33, wrong-36)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP make)
        (NP
          (NP (DT an) (NN exception))
          (PP (IN for)
            (NP
              (NP (DT the) (NNP God) (NN concept))
              (PP (IN of)
                (NP
                  (NP (NNS sects))
                  (PP (IN like)
                    (NP
                      (NP (NNP Jehovah) (POS 's))
                      (NNP Witness)))))))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP represent)
                (NP
                  (NP (NNP God))
                  (PP (IN as)
                    (NP
                      (NP (DT a) (JJ big) (, ,) (JJ powerful) (NN animal))
                      (PP (IN in)
                        (NP (DT the) (NN sky))))))))))))
    (, ,)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADVP (RB goofy))
        (NP (NN science) (NN fiction))))
    (: ;)
    (S (CC but)
      (ADVP (IN at) (JJS least))
      (NP (PRP it))
      (VP (VBZ makes)
        (NP (NN sense))))
    (: ;)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN argument))
        (PP (IN against)
          (NP (JJ negative) (NNS arguments))))
      (VP (VBZ does)
        (VP (VB hold)
          (PP (IN in)
            (NP (PRP$ its) (NN favor))))))
    (. .)))

nsubj(make-2, I-1)
root(ROOT-0, make-2)
det(exception-4, an-3)
dobj(make-2, exception-4)
nsubj(represent-16, exception-4)
det(concept-8, the-6)
nn(concept-8, God-7)
prep_for(exception-4, concept-8)
prep_of(concept-8, sects-10)
poss(Witness-14, Jehovah-12)
prep_like(sects-10, Witness-14)
rcmod(exception-4, represent-16)
dobj(represent-16, God-17)
det(animal-23, a-19)
amod(animal-23, big-20)
amod(animal-23, powerful-22)
prep_as(God-17, animal-23)
det(sky-26, the-25)
prep_in(animal-23, sky-26)
nsubj(fiction-32, That-28)
cop(fiction-32, 's-29)
advmod(fiction-32, goofy-30)
nn(fiction-32, science-31)
conj_and(make-2, fiction-32)
cc(makes-38, but-34)
advmod(makes-38, at-35)
pobj(at-35, least-36)
nsubj(makes-38, it-37)
conj_and(make-2, makes-38)
parataxis(make-2, makes-38)
dobj(makes-38, sense-39)
det(argument-43, the-42)
nsubj(hold-48, argument-43)
amod(arguments-46, negative-45)
prep_against(argument-43, arguments-46)
aux(hold-48, does-47)
conj_and(make-2, hold-48)
poss(favor-51, its-50)
prep_in(hold-48, favor-51)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (DT a) (JJ giant) (JJ bearded) (NN tyrant))
    (VP (MD will)
      (VP (VB turn)
        (PRT (RP up))
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT these) (NNS days))))))
    (. .)))

advmod(turn-7, Maybe-1)
det(tyrant-5, a-2)
amod(tyrant-5, giant-3)
amod(tyrant-5, bearded-4)
nsubj(turn-7, tyrant-5)
aux(turn-7, will-6)
root(ROOT-0, turn-7)
prt(turn-7, up-8)
dobj(turn-7, one-9)
det(days-12, these-11)
prep_of(one-9, days-12)

