(ROOT
  (NP (NN No.)))

root(ROOT-0, No.-1)

(ROOT
  (S
    (S
      (NP (JJ Many) (NNS people))
      (VP (VBP believe)
        (SBAR (IN that)
          (S
            (NP (NNS Gods))
            (VP (VBP do)
              (VP (VB exist)))))))
    (CC but)
    (S
      (PP (IN till)
        (NP (NN date)))
      (, ,)
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (JJ definite) (NN answer))
          (PP (TO to)
            (NP (DT this) (NN question))))))
    (. .)))

amod(people-2, Many-1)
nsubj(believe-3, people-2)
root(ROOT-0, believe-3)
complm(exist-7, that-4)
nsubj(exist-7, Gods-5)
aux(exist-7, do-6)
ccomp(believe-3, exist-7)
prep_till(is-13, date-10)
expl(is-13, there-12)
conj_but(believe-3, is-13)
det(answer-16, no-14)
amod(answer-16, definite-15)
nsubj(is-13, answer-16)
det(question-19, this-18)
prep_to(answer-16, question-19)

(ROOT
  (S
    (NP (DT Any) (NN one))
    (VP (MD can)
      (ADVP (RB just))
      (VP (VB make)
        (PRT (RP up))
        (NP
          (NP (NNS stories))
          (PP (IN with)
            (NP (DT no) (NN prove)
              (CC and)
              (NN evidence))))))
    (. .)))

det(one-2, Any-1)
nsubj(make-5, one-2)
aux(make-5, can-3)
advmod(make-5, just-4)
root(ROOT-0, make-5)
prt(make-5, up-6)
dobj(make-5, stories-7)
det(prove-10, no-9)
prep_with(stories-7, prove-10)
prep_with(stories-7, evidence-12)
conj_and(prove-10, evidence-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ depends)
      (PP (IN on)
        (UCP
          (FRAG
            (WHADJP (WRB how) (JJ much)))
          (CC or)
          (SBAR
            (WHADVP (WRB how) (RB far))
            (S
              (NP (PRP one))
              (VP (VBZ believes)
                (PP (IN in)
                  (NP (DT that) (JJ so-called) (NN story)))))))))
    (. .)))

nsubj(depends-2, It-1)
root(ROOT-0, depends-2)
prep(depends-2, on-3)
advmod(much-5, how-4)
dep(on-3, much-5)
advmod(far-8, how-7)
advmod(believes-10, far-8)
nsubj(believes-10, one-9)
dep(on-3, believes-10)
conj_or(much-5, believes-10)
det(story-14, that-12)
amod(story-14, so-called-13)
prep_in(believes-10, story-14)

(ROOT
  (S
    (PP (IN For)
      (NP (PRP me)))
    (, ,)
    (NP (PRP I))
    (VP (VBP feel)
      (SBAR (IN that)
        (S
          (NP (NNP Science))
          (VP (VBZ explains)
            (NP (RB almost) (NN everything))))))
    (. .)))

prep_for(feel-5, me-2)
nsubj(feel-5, I-4)
root(ROOT-0, feel-5)
complm(explains-8, that-6)
nsubj(explains-8, Science-7)
ccomp(feel-5, explains-8)
advmod(everything-10, almost-9)
dobj(explains-8, everything-10)

(ROOT
  (S
    (PP (IN Without)
      (NP (NNP Science)))
    (, ,)
    (NP (PRP one))
    (VP (MD will) (RB not)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB why)
            (CC or)
            (WRB how))
          (S
            (NP (NNS things))
            (VP (VBP work))))))
    (. .)))

prep_without(know-7, Science-2)
nsubj(know-7, one-4)
aux(know-7, will-5)
neg(know-7, not-6)
root(ROOT-0, know-7)
advmod(work-12, why-8)
dep(why-8, or-9)
dep(why-8, how-10)
nsubj(work-12, things-11)
advcl(know-7, work-12)
ccomp(know-7, work-12)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD would) (RB all)
      (VP (VB be)
        (NP
          (NP (DT a) (NN bunch))
          (PP (IN of)
            (NP (NNS morons))))
        (, ,)
        (S
          (VP (VBG obeying)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (NNS others))
                (VP (VBP say)
                  (CC or)
                  (VBP do))))))))
    (. .)))

nsubj(bunch-6, We-1)
aux(bunch-6, would-2)
advmod(bunch-6, all-3)
cop(bunch-6, be-4)
det(bunch-6, a-5)
root(ROOT-0, bunch-6)
prep_of(bunch-6, morons-8)
partmod(bunch-6, obeying-10)
xcomp(bunch-6, obeying-10)
dobj(say-13, what-11)
nsubj(say-13, others-12)
nsubj(do-15, others-12)
ccomp(obeying-10, say-13)
ccomp(obeying-10, do-15)
conj_or(say-13, do-15)

(ROOT
  (S (CC And)
    (SBAR (IN because)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT no) (NN explanation))
            (PP (TO to)
              (NP (DT this)))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (MD would) (RB rather)
          (VP (VB choose)
            (S (RB not)
              (VP (TO to)
                (VP (VB believe)
                  (PP (IN in)
                    (NP
                      (NP (DT this))
                      (PRN (-LRB- -LRB-)
                        (PP (TO to)
                          (NP (DT a) (JJ certain) (NN extent)))
                        (-RRB- -RRB-))))
                  (ADVP (RB Therefore))))))))
      (, ,))
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB go)
        (PP (IN with)
          (NP
            (NP (DT the) (NN motion))
            (VP (VBG agreeing)
              (SBAR (IN that)
                (S
                  (NP (NNP God))
                  (VP (VBP do)
                    (VP (VB exist))))))))))
    (. .)))

cc(go-30, And-1)
mark(is-4, because-2)
expl(is-4, there-3)
dep(go-30, is-4)
det(explanation-6, no-5)
nsubj(is-4, explanation-6)
prep_to(explanation-6, this-8)
nsubj(choose-13, I-10)
xsubj(believe-16, I-10)
aux(choose-13, would-11)
advmod(choose-13, rather-12)
parataxis(go-30, choose-13)
neg(believe-16, not-14)
aux(believe-16, to-15)
xcomp(choose-13, believe-16)
prep_in(believe-16, this-18)
dep(this-18, to-20)
det(extent-23, a-21)
amod(extent-23, certain-22)
pobj(to-20, extent-23)
advmod(believe-16, Therefore-25)
nsubj(go-30, I-27)
aux(go-30, do-28)
neg(go-30, not-29)
root(ROOT-0, go-30)
det(motion-33, the-32)
prep_with(go-30, motion-33)
partmod(motion-33, agreeing-34)
complm(exist-38, that-35)
nsubj(exist-38, God-36)
aux(exist-38, do-37)
ccomp(agreeing-34, exist-38)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ has)
      (VP (VBN been)
        (NP
          (NP (DT a) (NN myth))
          (PP (IN for)
            (NP (NNS centuries))))))
    (. .)))

nsubj(myth-5, This-1)
aux(myth-5, has-2)
cop(myth-5, been-3)
det(myth-5, a-4)
root(ROOT-0, myth-5)
prep_for(myth-5, centuries-7)

(ROOT
  (S
    (VP (VB Be)
      (NP
        (NP (PRP it))
        (VP
          (ADVP
            (NP (NNS Christians)
              (CC or)
              (NNS Buddhists))
            (RB there))
          (VBN bound)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT some) (NN kind))
                  (PP (IN of)
                    (NP (NNP God))))
                (SBAR (IN that)
                  (S
                    (NP (DT these) (NNS people))
                    (VP (VBP believe)
                      (PRT (RP in)))))))))))
    (. .)))

cop(it-2, Be-1)
root(ROOT-0, it-2)
xsubj(kind-11, it-2)
npadvmod(there-6, Christians-3)
conj_or(Christians-3, Buddhists-5)
npadvmod(there-6, Buddhists-5)
advmod(bound-7, there-6)
partmod(it-2, bound-7)
aux(kind-11, to-8)
cop(kind-11, be-9)
det(kind-11, some-10)
xcomp(bound-7, kind-11)
prep_of(kind-11, God-13)
complm(believe-17, that-14)
det(people-16, these-15)
nsubj(believe-17, people-16)
ccomp(kind-11, believe-17)
prt(believe-17, in-18)

(ROOT
  (S
    (ADVP (RB Sadly))
    (, ,)
    (NP (DT this))
    (VP (VBZ has) (RB not)
      (VP (VBN been)
        (VP
          (ADVP (RB scientifically))
          (VBN proved)
          (SBAR (IN that)
            (S
              (NP (NNS Gods))
              (VP (VBP do)
                (VP (VB exist))))))))
    (. .)))

advmod(proved-8, Sadly-1)
nsubjpass(proved-8, this-3)
aux(proved-8, has-4)
neg(proved-8, not-5)
auxpass(proved-8, been-6)
advmod(proved-8, scientifically-7)
root(ROOT-0, proved-8)
complm(exist-12, that-9)
nsubj(exist-12, Gods-10)
aux(exist-12, do-11)
ccomp(proved-8, exist-12)

(ROOT
  (S
    (NP
      (NP (DT No) (NN offense))
      (PP (CC but)
        (NP (PRP I))))
    (VP (VBP feel)
      (SBAR (IN that)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP (DT a) (NN propaganda)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP
                      (NP (NNS people))
                      (VP (VBN devoted)
                        (PP (TO to)
                          (NP
                            (NP (CD one) (POS 's))
                            (NN religion)))))))))))))
    (. .)))

det(offense-2, No-1)
nsubj(feel-5, offense-2)
prep(offense-2, but-3)
dep(but-3, I-4)
root(ROOT-0, feel-5)
complm(propaganda-10, that-6)
nsubj(propaganda-10, this-7)
cop(propaganda-10, is-8)
det(propaganda-10, a-9)
ccomp(feel-5, propaganda-10)
aux(make-12, to-11)
infmod(propaganda-10, make-12)
dobj(make-12, people-13)
partmod(people-13, devoted-14)
poss(religion-18, one-16)
prep_to(devoted-14, religion-18)

(ROOT
  (S
    (S
      (VP (VB See)))
    (, ,)
    (NP (PRP you))
    (VP (VBP go)
      (PP (TO to)
        (NP
          (NP
            (NP (NNP Churches))
            (CC or)
            (NP (DT the) (NNS temples)))
          (CC and)
          (ADVP (RB pray))
          (, ,)
          (NP
            (NP (NN study))
            (NP (DT the) (NN bible))
            (, ,) (FW etc.)))))
    (. .)))

ccomp(go-4, See-1)
nsubj(go-4, you-3)
root(ROOT-0, go-4)
prep_to(go-4, Churches-6)
det(temples-9, the-8)
prep_to(go-4, temples-9)
conj_or(Churches-6, temples-9)
prep_to(go-4, pray-11)
advmod(Churches-6, pray-11)
conj_and(Churches-6, pray-11)
prep_to(go-4, study-13)
conj_and(Churches-6, study-13)
det(bible-15, the-14)
nn(study-13, bible-15)
dep(study-13, etc.-17)

(ROOT
  (SBARQ (CC But)
    (SQ (VBP are)
      (NP (PRP they))
      (ADJP (RB really) (JJ true)))
    (. ?)))

cc(true-5, But-1)
cop(true-5, are-2)
nsubj(true-5, they-3)
advmod(true-5, really-4)
root(ROOT-0, true-5)

(ROOT
  (S
    (PP (RB Just)
      (PP (IN like)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (JJ many) (NNS people))
            (VP (VBP say)
              (PP (IN about)
                (NP (NNP Jesus))))))))
    (NP (PRP he))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB save)
            (NP (PRP$ his) (NNS villagers))
            (SBAR (IN so)
              (S
                (NP (PRP he))
                (VP
                  (VP (VBD sacrificed)
                    (NP (PRP himself)))
                  (CC and)
                  (VP (VBD got)
                    (VP (VBN pinned)))))))))
      (PRN (-LRB- -LRB-)
        (ADVP (RB literally)
          (S
            (VP (VBG hammering)
              (NP (PRP$ his) (NNS hands)
                (CC and)
                (NNS feet)))))
        (-RRB- -RRB-))
      (PP (IN onto)
        (NP
          (NP (NNP logs))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP
                (VP (VBP make)
                  (PRT (RP up))
                  (NP (DT the) (NN letter) (`` ``) (NN t) ('' '')))
                (CC and)
                (VP (VBD was)
                  (VP (VBN left)
                    (S
                      (NP (EX there))
                      (VP (TO to)
                        (VP (VB bleed)
                          (PP (TO to)
                            (NP (NN death))))))))))))))
    (. .)))

advmod(wanted-10, Just-1)
advcl(wanted-10, like-2)
dobj(say-6, what-3)
amod(people-5, many-4)
nsubj(say-6, people-5)
prepc_like(wanted-10, say-6)
prep_about(say-6, Jesus-8)
nsubj(wanted-10, he-9)
xsubj(save-12, he-9)
root(ROOT-0, wanted-10)
aux(save-12, to-11)
xcomp(wanted-10, save-12)
poss(villagers-14, his-13)
dobj(save-12, villagers-14)
mark(sacrificed-17, so-15)
nsubj(sacrificed-17, he-16)
nsubjpass(pinned-21, he-16)
advcl(save-12, sacrificed-17)
dobj(sacrificed-17, himself-18)
auxpass(pinned-21, got-20)
advcl(save-12, pinned-21)
conj_and(sacrificed-17, pinned-21)
dep(wanted-10, literally-23)
dep(literally-23, hammering-24)
poss(hands-26, his-25)
dobj(hammering-24, hands-26)
dobj(hammering-24, feet-28)
conj_and(hands-26, feet-28)
prep_onto(wanted-10, logs-31)
nsubj(make-33, logs-31)
nsubjpass(left-42, logs-31)
rcmod(logs-31, make-33)
prt(make-33, up-34)
det(t-38, the-35)
nn(t-38, letter-36)
dobj(make-33, t-38)
auxpass(left-42, was-41)
rcmod(logs-31, left-42)
conj_and(make-33, left-42)
expl(bleed-45, there-43)
aux(bleed-45, to-44)
xcomp(left-42, bleed-45)
prep_to(bleed-45, death-47)

(ROOT
  (S (-LRB- -LRB-)
    (NP
      (NP (NNP Sorry))
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBD got)
            (S
              (NP
                (NP (DT the) (JJ wrong) (NN story))
                (PP
                  (PP (IN but))
                  (PRN
                    (S
                      (NP (PRP it))
                      (VP (MD should)
                        (VP (VB be)
                          (NP
                            (NP (NN something))
                            (PP (IN like)
                              (NP (DT that)))))))
                    (-RRB- -RRB-))))
              (ADJP (WRB How) (JJ true)))))))
    (VP (VBZ is)
      (NP (DT this)))
    (. ?)))

dobj(got-5, Sorry-2)
nsubj(this-20, Sorry-2)
mark(got-5, if-3)
nsubj(got-5, I-4)
dep(Sorry-2, got-5)
det(story-8, the-6)
amod(story-8, wrong-7)
nsubj(true-18, story-8)
prep(story-8, but-9)
nsubj(something-13, it-10)
aux(something-13, should-11)
cop(something-13, be-12)
dep(but-9, something-13)
prep_like(something-13, that-15)
advmod(true-18, How-17)
xcomp(got-5, true-18)
cop(this-20, is-19)
root(ROOT-0, this-20)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (MD can)
      (VP (VB reassure)))
    (. .)))

det(one-2, No-1)
nsubj(reassure-4, one-2)
aux(reassure-4, can-3)
root(ROOT-0, reassure-4)

