(ROOT
  (FRAG
    (ADVP (RB pbeaird))
    (, ,)
    (ADVP (RB indeed))
    (. .)))

root(ROOT-0, pbeaird-1)
dep(pbeaird-1, indeed-3)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN argument))
          (PP (IN from)
            (NP (NN ignoracne))))))
    (CC but)
    (S
      (NP (PRP one))
      (VP (VBG acknowledging)
        (NP
          (NP (PDT all) (DT the) (VBN failed) (NNS arguments))
          (PP (IN for)
            (NP (NNP God)))
          (PP (IN in)
            (NP
              (NP (NN line))
              (PP (IN with)
                (NP (DT the) (JJ auto-epistemic) (NN rule))))))))
    (. .)))

nsubj(argument-4, That-1)
cop(argument-4, is-2)
det(argument-4, no-3)
root(ROOT-0, argument-4)
prep_from(argument-4, ignoracne-6)
nsubj(acknowledging-9, one-8)
conj_but(argument-4, acknowledging-9)
predet(arguments-13, all-10)
det(arguments-13, the-11)
amod(arguments-13, failed-12)
dobj(acknowledging-9, arguments-13)
prep_for(arguments-13, God-15)
prep_in(arguments-13, line-17)
det(rule-21, the-19)
amod(rule-21, auto-epistemic-20)
prep_with(line-17, rule-21)

(ROOT
  (S
    (NP
      (NP (DT The) (NN presumption))
      (PP (IN of)
        (NP (NN naturalism))))
    (VP (VBZ reflects)
      (SBAR (IN that)
        (S
          (NP (RB not) (JJ only))
          (VP (VBP are)
            (NP
              (NP (JJ natural) (NNS causes)
                (CC and)
                (NNS explanations))
              (ADJP (JJ efficient)
                (CONJP (CC but)
                  (RB also))
                (JJ necessary))
              (, ,)
              (ADJP (JJ primary)
                (CC and)
                (JJ sufficient)))))))
    (. .)))

det(presumption-2, The-1)
nsubj(reflects-5, presumption-2)
prep_of(presumption-2, naturalism-4)
root(ROOT-0, reflects-5)
complm(causes-11, that-6)
neg(only-8, not-7)
nsubj(causes-11, only-8)
cop(causes-11, are-9)
amod(causes-11, natural-10)
ccomp(reflects-5, causes-11)
ccomp(reflects-5, explanations-13)
conj_and(causes-11, explanations-13)
amod(causes-11, efficient-14)
amod(causes-11, necessary-17)
conj_and(efficient-14, necessary-17)
amod(causes-11, primary-19)
amod(causes-11, sufficient-21)
conj_and(primary-19, sufficient-21)

(ROOT
  (S
    (NP (PRP They))
    (, ,)
    (ADVP (JJ contrary)
      (PP (TO to)
        (NP (NNP Gottfried) (NNP Wilhem) (NNP Leibniz))))
    (, ,)
    (VP (VBP are)
      (NP (DT the) (JJ sufficient) (NN reason)))
    (. .)))

nsubj(reason-12, They-1)
nn(Leibniz-7, Gottfried-5)
nn(Leibniz-7, Wilhem-6)
prep_contrary_to(reason-12, Leibniz-7)
cop(reason-12, are-9)
det(reason-12, the-10)
amod(reason-12, sufficient-11)
root(ROOT-0, reason-12)

(ROOT
  (S
    (NP
      (NP (DT This)
        (UCP (CC neither)
          (ADJP (JJ sanbags) (JJ theist))
          (CC nor)
          (ADJP (JJ begs)
            (NP (DT the) (NN question)))
          (CC but)
          (NP (NNS demands)))
        (NN evidence))
      (PP (IN as)
        (NP (NNP Einstein))))
    (ADVP (RB so))
    (VP (VBD did)
      (S
        (VP (TO to)
          (VP (VB overcome)
            (NP (NNP Newton))))))
    (. .)))

det(evidence-11, This-1)
dep(evidence-11, neither-2)
amod(theist-4, sanbags-3)
dep(neither-2, theist-4)
conj_nor(neither-2, begs-6)
dep(evidence-11, begs-6)
det(question-8, the-7)
dep(begs-6, question-8)
conj_but(neither-2, demands-10)
dep(evidence-11, demands-10)
nsubj(did-15, evidence-11)
xsubj(overcome-17, evidence-11)
prep_as(evidence-11, Einstein-13)
advmod(did-15, so-14)
root(ROOT-0, did-15)
aux(overcome-17, to-16)
xcomp(did-15, overcome-17)
dobj(overcome-17, Newton-18)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ explains)
      (NP (DT the))
      (FRAG
        (WHADVP (WRB how))
        (PP (CC and)
          (NP (DT the) (NN why)))))
    (. .)))

nsubj(explains-2, Science-1)
root(ROOT-0, explains-2)
dobj(explains-2, the-3)
dep(explains-2, how-4)
dep(how-4, and-5)
det(why-7, the-6)
dep(and-5, why-7)

(ROOT
  (S
    (S
      (NP (DT The) (NN why))
      (VP (VBZ is) (RB not)
        (PP (VBG according)
          (PP (TO to)
            (NP
              (NP (DT a) (JJ pre-arranged) (NN plan))
              (PRN (-LRB- -LRB-)
                (NP (DT the) (JJ atelic) (NN challenge))
                (-RRB- -RRB-)))))))
    (CC but)
    (S
      (PP (VBG according)
        (PP (TO to)
          (NP
            (NP (JJ natural) (NNS forces))
            (, ,)
            (PP (VBG including)
              (NP (DT those) (JJ random) (NNS ones)))))))
    (. .)))

det(why-2, The-1)
nsubj(is-3, why-2)
nsubj(according-16, why-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
prep(is-3, according-5)
pcomp(according-5, to-6)
det(plan-9, a-7)
amod(plan-9, pre-arranged-8)
prep_to(according-5, plan-9)
det(challenge-13, the-11)
amod(challenge-13, atelic-12)
appos(plan-9, challenge-13)
conj_but(is-3, according-16)
pcomp(according-16, to-17)
amod(forces-19, natural-18)
prep_to(according-16, forces-19)
det(ones-24, those-22)
amod(ones-24, random-23)
prep_including(forces-19, ones-24)

(ROOT
  (S (IN So)
    (NP (DT those))
    (VP (VBP are)
      (ADVP (RB indeed))
      (NP
        (NP (JJ primary) (NNS causes))
        (: ;)
        (S
          (NP (PRP one))
          (VP (MD can) (RB not)
            (ADVP (RB then))
            (VP (VB declare)
              (S
                (S
                  (NP (NNP God))
                  (NP (DT the) (JJ primary) (NN cause)))
                (CC and)
                (S
                  (NP (PRP them))
                  (NP (DT the) (JJ secondary) (NNS ones)))))))))
    (. .)))

dep(causes-6, So-1)
nsubj(causes-6, those-2)
cop(causes-6, are-3)
advmod(causes-6, indeed-4)
amod(causes-6, primary-5)
root(ROOT-0, causes-6)
nsubj(declare-12, one-8)
aux(declare-12, can-9)
neg(declare-12, not-10)
advmod(declare-12, then-11)
dep(causes-6, declare-12)
dep(cause-16, God-13)
det(cause-16, the-14)
amod(cause-16, primary-15)
dep(declare-12, cause-16)
dep(ones-21, them-18)
det(ones-21, the-19)
amod(ones-21, secondary-20)
dep(declare-12, ones-21)
conj_and(cause-16, ones-21)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP$ our) (NN naturalist) (NNS arguments))
        (VP (VBP are)
          (ADJP (JJ defeasible)))))
    (, ,)
    (ADVP (RB then))
    (NP (EX there))
    (VP (VBZ is)
      (ADVP (RB probably))
      (NP (DT no) (NNP God)))
    (. .)))

mark(defeasible-6, As-1)
poss(arguments-4, our-2)
nn(arguments-4, naturalist-3)
nsubj(defeasible-6, arguments-4)
cop(defeasible-6, are-5)
advcl(is-10, defeasible-6)
advmod(is-10, then-8)
expl(is-10, there-9)
root(ROOT-0, is-10)
advmod(is-10, probably-11)
det(God-13, no-12)
nsubj(is-10, God-13)

