(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (NP (RB not))
    (NP
      (NP (RB also) (PDT quite) (DT a) (NN stretch))
      (S
        (VP (TO to)
          (VP (VB assert)
            (NP
              (NP (DT that) (NN something))
              (PP (IN of)
                (SBAR (IN that)
                  (S
                    (NP (NN nature) (NNS DOES))
                    (VP (VBP exist))))))))))
    (. ?)))

cop(stretch-7, Is-1)
nsubj(stretch-7, it-2)
attr(stretch-7, not-3)
advmod(stretch-7, also-4)
predet(stretch-7, quite-5)
det(stretch-7, a-6)
root(ROOT-0, stretch-7)
aux(assert-9, to-8)
infmod(stretch-7, assert-9)
det(something-11, that-10)
dobj(assert-9, something-11)
complm(exist-16, that-13)
nn(DOES-15, nature-14)
nsubj(exist-16, DOES-15)
prepc_of(something-11, exist-16)

(ROOT
  (S
    (NP (DT Any) (NN concept))
    (VP
      (VP (MD could)
        (VP (VB be)
          (VP (VBN concocted))))
      (CC and)
      (VP
        (ADVP (RB then))
        (VBD defended)
        (PP (IN on)
          (NP
            (NP (DT the) (NN basis))
            (PP (IN of)
              (NP (JJ insufficient) (NN evidence)))))
        (PP (TO to)
          (NP (DT the) (NN contrary))))
      (, ,)
      (CC but)
      (VP
        (PP (IN without)
          (NP (NN evidence) (NN backing)))
        (VBD said)
        (NP
          (NP
            (NP (NN concoction))
            (PRN (-LRB- -LRB-)
              (S
                (VP (VB save)
                  (PP (IN for)
                    (NP
                      (NP (NNS gaps))
                      (PP (IN in)
                        (NP (JJ human) (NN understanding)))))))
              (-RRB- -RRB-)))
          (, ,)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ 's)
                (S
                  (VP (TO to)
                    (VP (VB say)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (ADJP
                              (ADJP (JJ valid))
                              (CC or)
                              (ADJP (RB even) (JJ worth)
                                (NP (VBG considering))))))))))))))))
    (. ?)))

det(concept-2, Any-1)
nsubjpass(concocted-5, concept-2)
nsubjpass(defended-8, concept-2)
nsubjpass(said-23, concept-2)
aux(concocted-5, could-3)
auxpass(concocted-5, be-4)
root(ROOT-0, concocted-5)
advmod(defended-8, then-7)
conj_and(concocted-5, defended-8)
det(basis-11, the-10)
prep_on(defended-8, basis-11)
amod(evidence-14, insufficient-13)
prep_of(basis-11, evidence-14)
det(contrary-17, the-16)
prep_to(defended-8, contrary-17)
nn(backing-22, evidence-21)
prep_without(said-23, backing-22)
conj_but(concocted-5, said-23)
dobj(said-23, concoction-24)
nsubj('s-35, concoction-24)
dep(concoction-24, save-26)
prep_for(save-26, gaps-28)
amod(understanding-31, human-30)
prep_in(gaps-28, understanding-31)
rcmod(concoction-24, 's-35)
aux(say-37, to-36)
xcomp('s-35, say-37)
complm(valid-41, that-38)
nsubj(valid-41, it-39)
nsubj(worth-44, it-39)
cop(valid-41, 's-40)
ccomp(say-37, valid-41)
advmod(worth-44, even-43)
ccomp(say-37, worth-44)
conj_or(valid-41, worth-44)
dep(worth-44, considering-45)

