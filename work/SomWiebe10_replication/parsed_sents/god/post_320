(ROOT
  (S
    (NP
      (NP (DT The) (JJ fundamental) (NN failure))
      (PP (IN of)
        (NP (DT this) (NN argument))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is) (RB not)
            (NP (DT an) (NN argument))
            (ADVP (IN at) (DT all))))))
    (. .)))

det(failure-3, The-1)
amod(failure-3, fundamental-2)
nsubj(is-7, failure-3)
det(argument-6, this-5)
prep_of(failure-3, argument-6)
root(ROOT-0, is-7)
complm(argument-13, that-8)
nsubj(argument-13, it-9)
cop(argument-13, is-10)
neg(argument-13, not-11)
det(argument-13, an-12)
ccomp(is-7, argument-13)
advmod(argument-13, at-14)
pobj(at-14, all-15)

(ROOT
  (S
    (S
      (NP (DT The) (NN theist))
      (VP (MD can)
        (VP (VB accept)
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP (JJ natural) (NNS laws))
                  (SBAR
                    (WHPP (IN by)
                      (WHNP (WDT which)))
                    (S
                      (NP (NNP God) (NNS functions))
                      (VP
                        (ADVP (IN that))
                        (VBD transcend)
                        (NP (PRP him))
                        (PP (IN without)
                          (S
                            (VP (VBG being)
                              (ADJP (JJ self-contradictory)))))))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (ADVP (DT all))
      (VP (VBZ depends)
        (PP (IN on)
          (NP (PRP$ your) (NN definition)))))
    (. .)))

det(theist-2, The-1)
nsubj(accept-4, theist-2)
aux(accept-4, can-3)
root(ROOT-0, accept-4)
complm(are-7, that-5)
expl(are-7, there-6)
ccomp(accept-4, are-7)
amod(laws-9, natural-8)
nsubj(are-7, laws-9)
rel(transcend-15, which-11)
nn(functions-13, God-12)
nsubj(transcend-15, functions-13)
advmod(transcend-15, that-14)
rcmod(laws-9, transcend-15)
dobj(transcend-15, him-16)
cop(self-contradictory-19, being-18)
prepc_without(transcend-15, self-contradictory-19)
nsubj(depends-23, it-21)
advmod(depends-23, all-22)
parataxis(accept-4, depends-23)
poss(definition-26, your-25)
prep_on(depends-23, definition-26)

(ROOT
  (S
    (NP (NNP Atheism))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN proved)
          (SBAR (IN until)
            (S
              (NP
                (NP (DT every) (NN view))
                (PP (IN of)
                  (NP (NNP God))))
              (VP (VBZ is)
                (ADJP (JJ disproved))
                (, ,)
                (SBAR (IN whereas)
                  (S
                    (NP (DT the) (NN theist))
                    (ADVP (RB only))
                    (VP (VBZ has)
                      (S
                        (VP (TO to)
                          (VP (VB disprove)
                            (NP
                              (NP (RB only) (CD one) (JJ atheistic) (NN view))
                              (SBAR (IN that)
                                (S
                                  (NP (DT no) (JJR higher) (NN power))
                                  (VP (VBZ exists)))))))))))))))))
    (. .)))

nsubjpass(proved-5, Atheism-1)
aux(proved-5, can-2)
neg(proved-5, not-3)
auxpass(proved-5, be-4)
root(ROOT-0, proved-5)
mark(disproved-12, until-6)
det(view-8, every-7)
nsubj(disproved-12, view-8)
prep_of(view-8, God-10)
cop(disproved-12, is-11)
advcl(proved-5, disproved-12)
mark(has-18, whereas-14)
det(theist-16, the-15)
nsubj(has-18, theist-16)
advmod(has-18, only-17)
advcl(disproved-12, has-18)
aux(disprove-20, to-19)
xcomp(has-18, disprove-20)
advmod(view-24, only-21)
num(view-24, one-22)
amod(view-24, atheistic-23)
dobj(disprove-20, view-24)
dobj(exists-29, view-24)
complm(exists-29, that-25)
det(power-28, no-26)
amod(power-28, higher-27)
nsubj(exists-29, power-28)
dep(view-24, exists-29)

