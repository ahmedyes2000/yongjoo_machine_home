(ROOT
  (INTJ (UH LOL) (. !)))

root(ROOT-0, LOL-1)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBD said)
        (S
          (VP (TO to)
            (VP (VB tell)
              (SBAR
                (S
                  (NP (DT the) (NN truth))
                  (VP (VBZ is)
                    (NP (DT the) (JJR greater) (NN good))))))))))
    (. ?)))

nsubj(said-2, Who-1)
root(ROOT-0, said-2)
aux(tell-4, to-3)
xcomp(said-2, tell-4)
det(truth-6, the-5)
nsubj(good-10, truth-6)
cop(good-10, is-7)
det(good-10, the-8)
amod(good-10, greater-9)
ccomp(tell-4, good-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG assuming)
        (SBAR (IN that)
          (S
            (VP (VBG telling)
              (NP (DT the) (NN truth))
              (ADVP (RB always)))
            (NP
              (NP (NNS results))
              (PP (IN in)
                (NP (DT the) (JJR greater) (JJ good) (NN huh))))))))
    (. ?)))

nsubj(assuming-3, You-1)
aux(assuming-3, 're-2)
root(ROOT-0, assuming-3)
complm(telling-5, that-4)
ccomp(assuming-3, telling-5)
det(truth-7, the-6)
dobj(telling-5, truth-7)
advmod(telling-5, always-8)
dep(telling-5, results-9)
det(huh-14, the-11)
amod(huh-14, greater-12)
amod(huh-14, good-13)
prep_in(results-9, huh-14)

(ROOT
  (S
    (NP
      (NP (DT A) (NN fanatic))
      (PP (IN in)
        (NP (NNP ANYTHING))))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB result)
        (PP (IN in)
          (NP (JJ extreme) (NNS actions)))))
    (. .)))

det(fanatic-2, A-1)
nsubj(result-7, fanatic-2)
prep_in(fanatic-2, ANYTHING-4)
aux(result-7, will-5)
advmod(result-7, always-6)
root(ROOT-0, result-7)
amod(actions-10, extreme-9)
prep_in(result-7, actions-10)

(ROOT
  (S
    (VP (VB Take)
      (NP
        (NP (NNP PETA))
        (PP (IN for)
          (NP (NN example)))))
    (. .)))

root(ROOT-0, Take-1)
dobj(Take-1, PETA-2)
prep_for(PETA-2, example-4)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP are) (RB not)
        (ADJP (JJ religious))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (MD can)
        (ADVP (RB definately))
        (VP (VB take)
          (NP
            (NP (DT a) (NN lot))
            (PP (IN of)
              (NP (NN shi))))
          (ADVP (RB far)))))
    (. .)))

nsubj(religious-4, They-1)
cop(religious-4, are-2)
neg(religious-4, not-3)
root(ROOT-0, religious-4)
nsubj(take-10, they-7)
aux(take-10, can-8)
advmod(take-10, definately-9)
conj_but(religious-4, take-10)
det(lot-12, a-11)
dobj(take-10, lot-12)
prep_of(lot-12, shi-14)
advmod(take-10, far-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (ADVP (RB also))
      (VP (VBN allowed)
        (NP (NNS governments))
        (S
          (VP (TO to)
            (VP (VB control)
              (NP (NNS populations))
              (PP (IN through)
                (NP
                  (NP (DT the) (NN use))
                  (PP (IN of)
                    (NP (DT those) (NNS beliefs))))))))))
    (. .)))

nsubj(allowed-4, It-1)
aux(allowed-4, has-2)
advmod(allowed-4, also-3)
root(ROOT-0, allowed-4)
dobj(allowed-4, governments-5)
aux(control-7, to-6)
xcomp(allowed-4, control-7)
dobj(control-7, populations-8)
det(use-11, the-10)
prep_through(control-7, use-11)
det(beliefs-14, those-13)
prep_of(use-11, beliefs-14)

(ROOT
  (S
    (NP (NNS Governments))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB control)
        (NP (NNS populations))))
    (. .)))

nsubj(control-4, Governments-1)
aux(control-4, will-2)
advmod(control-4, always-3)
root(ROOT-0, control-4)
dobj(control-4, populations-5)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP they))
          (VP (VBP do)))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
dobj(do-5, what-3)
nsubj(do-5, they-4)
ccomp(is-2, do-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ 's) (RB not)
          (NP
            (NP (NN religion))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP 're)
                  (VP (VBG using)))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB be)
        (NP (NN something) (RB else))))
    (. .)))

mark(religion-5, If-1)
nsubj(religion-5, it-2)
cop(religion-5, 's-3)
neg(religion-5, not-4)
dobj(using-8, religion-5)
advcl(something-13, religion-5)
nsubj(using-8, they-6)
aux(using-8, 're-7)
rcmod(religion-5, using-8)
nsubj(something-13, it-10)
aux(something-13, will-11)
cop(something-13, be-12)
root(ROOT-0, something-13)
advmod(something-13, else-14)

(ROOT
  (S
    (NP (DT The) (NN GOVERNMENT))
    (VP (VBZ is)
      (ADJP (JJ RESPONSIBLE)
        (PP (IN for)
          (NP
            (NP (NNP USING) (NNP RELIGION))
            (, ,)
            (NP (NNP NOT) (NNP RELIGION) (NNP ITSELF))))))
    (. !)))

det(GOVERNMENT-2, The-1)
nsubj(RESPONSIBLE-4, GOVERNMENT-2)
cop(RESPONSIBLE-4, is-3)
root(ROOT-0, RESPONSIBLE-4)
nn(RELIGION-7, USING-6)
prep_for(RESPONSIBLE-4, RELIGION-7)
nn(ITSELF-11, NOT-9)
nn(ITSELF-11, RELIGION-10)
appos(RELIGION-7, ITSELF-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (ADVP (RB also))
      (VP (VBN fostered)
        (NP
          (NP (JJ artificial) (NNS divisions))
          (PP (IN between)
            (NP (JJ different) (NNS cultures))))
        (, ,)
        (S
          (ADVP (RB eventualy))
          (VP (VBG leading)
            (PP (TO to)
              (NP (NNS wars)))))))
    (. .)))

nsubj(fostered-4, It-1)
aux(fostered-4, has-2)
advmod(fostered-4, also-3)
root(ROOT-0, fostered-4)
amod(divisions-6, artificial-5)
dobj(fostered-4, divisions-6)
amod(cultures-9, different-8)
prep_between(divisions-6, cultures-9)
advmod(leading-12, eventualy-11)
partmod(fostered-4, leading-12)
xcomp(fostered-4, leading-12)
prep_to(leading-12, wars-14)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (NP (PRP you))
        (VP (VB like)
          (NP (PRP it))
          (CC or)
          (RB not))))
    (, ,)
    (NP (NNS people))
    (VP (VBP are)
      (NP
        (NP (NNS ALWAYS))
        (VP (VBG GOING)
          (S
            (VP (TO TO)
              (VP (VB HAVE)
                (NP (NNS DIFFERENCES))))))))
    (. .)))

complm(like-3, Whether-1)
nsubj(like-3, you-2)
ccomp(ALWAYS-10, like-3)
dobj(like-3, it-4)
conj_or(like-3, not-6)
neg(like-3, not-6)
ccomp(ALWAYS-10, not-6)
nsubj(ALWAYS-10, people-8)
cop(ALWAYS-10, are-9)
root(ROOT-0, ALWAYS-10)
xsubj(HAVE-13, ALWAYS-10)
partmod(ALWAYS-10, GOING-11)
aux(HAVE-13, TO-12)
xcomp(GOING-11, HAVE-13)
dobj(HAVE-13, DIFFERENCES-14)

(ROOT
  (S
    (NP (DT These) (NNS differences))
    (VP (VBP are)
      (NP
        (NP (NNS ALWAYS))
        (VP (VBG GOING)
          (S
            (VP (TO TO)
              (VP (VB BE)
                (VP (VBN USED)
                  (PP (IN by)
                    (NP
                      (NP (NNP PEOPLE))
                      (PP (IN OF)
                        (NP (NNP POWER)))))
                  (PP (IN for)
                    (NP (NNP THEIR) (NNP OWN) (NNP OBJECTIVES))))))))))
    (. .)))

det(differences-2, These-1)
nsubj(ALWAYS-4, differences-2)
cop(ALWAYS-4, are-3)
root(ROOT-0, ALWAYS-4)
xsubj(USED-8, ALWAYS-4)
partmod(ALWAYS-4, GOING-5)
aux(USED-8, TO-6)
auxpass(USED-8, BE-7)
xcomp(GOING-5, USED-8)
agent(USED-8, PEOPLE-10)
prep_of(PEOPLE-10, POWER-12)
nn(OBJECTIVES-16, THEIR-14)
nn(OBJECTIVES-16, OWN-15)
prep_for(USED-8, OBJECTIVES-16)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB get)
      (NP (DT the) (NN picture)))
    (. ?)))

aux(get-3, Do-1)
nsubj(get-3, you-2)
root(ROOT-0, get-3)
det(picture-5, the-4)
dobj(get-3, picture-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD bet)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD can)
            (VP (VB think)
              (PP (IN of)
                (NP
                  (NP
                    (QP (CD 1) (CD billion))
                    (NNS ways))
                  (SBAR
                    (WHPP (IN in)
                      (WHNP (WDT which)))
                    (S
                      (NP (DT a) (NN lie))
                      (VP (MD can)
                        (VP (VB work)
                          (ADVP (RBR better)))))))))))))
    (. .)))

nsubj(bet-2, I-1)
root(ROOT-0, bet-2)
nsubj(think-5, you-3)
aux(think-5, can-4)
ccomp(bet-2, think-5)
number(billion-8, 1-7)
num(ways-9, billion-8)
prep_of(think-5, ways-9)
rel(work-15, which-11)
det(lie-13, a-12)
nsubj(work-15, lie-13)
aux(work-15, can-14)
rcmod(ways-9, work-15)
advmod(work-15, better-16)

(ROOT
  (S
    (NP (NNP Religion))
    (VP (MD should) (RB not)
      (VP (VB be)
        (VP (VBG taking)
          (NP (DT the) (NN blame)))))
    (. .)))

nsubj(taking-5, Religion-1)
aux(taking-5, should-2)
neg(taking-5, not-3)
aux(taking-5, be-4)
root(ROOT-0, taking-5)
det(blame-7, the-6)
dobj(taking-5, blame-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (S
          (NP (PRP we))
          (VP (VB need)
            (S
              (NP (NNP God))
              (ADVP (RB anymore))
              (VP (TO to)
                (VP (VB know)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (ADJP (JJ good)
                          (CC or)
                          (JJ bad))))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
nsubj(need-6, we-5)
ccomp(think-4, need-6)
nsubj(know-10, God-7)
advmod(know-10, anymore-8)
aux(know-10, to-9)
xcomp(need-6, know-10)
nsubj(good-13, what-11)
nsubj(bad-15, what-11)
cop(good-13, is-12)
ccomp(know-10, good-13)
ccomp(know-10, bad-15)
conj_or(good-13, bad-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (NNS people))
          (VP (VBP are)
            (ADJP (JJ capable)
              (S
                (VP (TO to)
                  (VP (VB figure)
                    (NP (NNS things))
                    (PRT (RP out))
                    (PP (IN on)
                      (NP (PRP$ their) (JJ own)))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(capable-5, people-3)
cop(capable-5, are-4)
ccomp(think-2, capable-5)
aux(figure-7, to-6)
xcomp(capable-5, figure-7)
dobj(figure-7, things-8)
prt(figure-7, out-9)
poss(own-12, their-11)
prep_on(figure-7, own-12)

(ROOT
  (S
    (INTJ (UH Well))
    (VP (VB atleast)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 've)
            (VP (VBN answered)
              (NP (DT the) (NN question)))))))
    (. .)))

dep(atleast-2, Well-1)
root(ROOT-0, atleast-2)
nsubj(answered-5, you-3)
aux(answered-5, 've-4)
ccomp(atleast-2, answered-5)
det(question-7, the-6)
dobj(answered-5, question-7)

(ROOT
  (S
    (ADVP (RB However))
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (ADVP (RB really))
      (NP (DT an) (NN argument)))
    (. .)))

advmod(argument-7, However-1)
nsubj(argument-7, it-2)
cop(argument-7, 's-3)
neg(argument-7, not-4)
advmod(argument-7, really-5)
det(argument-7, an-6)
root(ROOT-0, argument-7)

(ROOT
  (S
    (NP
      (NP (DT The) (NN point))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP 've)
            (ADVP (RB CONSISTENTLY))
            (VP (VBN made))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNS people))
          (VP (VBP are)
            (ADVP (RB NOT))
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB figure)
                    (PRT (RP out))
                    (NP
                      (NP (NNS things))
                      (PP (IN on)
                        (NP (PRP$ their) (JJ own))))))))))))
    (. .)))

det(point-2, The-1)
dobj(made-6, point-2)
nsubj(is-7, point-2)
nsubj(made-6, I-3)
aux(made-6, 've-4)
advmod(made-6, CONSISTENTLY-5)
rcmod(point-2, made-6)
root(ROOT-0, is-7)
complm(able-12, that-8)
nsubj(able-12, people-9)
cop(able-12, are-10)
neg(able-12, NOT-11)
ccomp(is-7, able-12)
aux(figure-14, to-13)
xcomp(able-12, figure-14)
prt(figure-14, out-15)
dobj(figure-14, things-16)
poss(own-19, their-18)
prep_on(things-16, own-19)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP we))
          (VP (VBP have)
            (NP (NNS laws)
              (CC and)
              (NNS rules))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
advmod(have-5, why-3)
nsubj(have-5, we-4)
advcl(is-2, have-5)
dobj(have-5, laws-6)
dobj(have-5, rules-8)
conj_and(laws-6, rules-8)

(ROOT
  (S
    (NP (PRP$ My) (NN point))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNP God))
          (VP (VBZ is)
            (ADVP
              (ADVP (RBR better))
              (PP (IN at)
                (NP
                  (NP (DT this))
                  (PP (IN than)
                    (NP (DT any) (NN human))))))
            (ADJP (JJ alive))))))
    (. .)))

poss(point-2, My-1)
nsubj(is-3, point-2)
root(ROOT-0, is-3)
complm(alive-13, that-4)
nsubj(alive-13, God-5)
cop(alive-13, is-6)
advmod(alive-13, better-7)
prep_at(better-7, this-9)
det(human-12, any-11)
prep_than(this-9, human-12)
ccomp(is-3, alive-13)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (VP (VBG saying)
        (SBAR
          (S
            (NP (NNP God))
            (VP (VBZ is)
              (NP (DT a) (NN lie)))))))
    (. .)))

advmod(saying-6, Again-1)
nsubj(saying-6, I-3)
aux(saying-6, am-4)
neg(saying-6, not-5)
root(ROOT-0, saying-6)
nsubj(lie-10, God-7)
cop(lie-10, is-8)
det(lie-10, a-9)
ccomp(saying-6, lie-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB first))
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB state)
              (SBAR (IN whether)
                (CC or)
                (RB not)
                (S
                  (NP
                    (NP (NN belief))
                    (PP (IN in)
                      (NP
                        (NP (NNP God))
                        (PP (IN for)
                          (NP (DT the) (NNS masses))))))
                  (VP (VBZ is)
                    (ADJP
                      (ADJP (JJR better)
                        (PP (IN than)
                          (NP
                            (NP (NN lack))
                            (PP (IN of)
                              (NP (NN belief))))))
                      (: ...)
                      (CC and)
                      (ADVP (RB then)))
                    (SBAR (IN whether)
                      (S
                        (NP (DT that) (NN belief))
                        (VP (MD should)
                          (VP (VB be)
                            (VP (VBN promoted))))))))))))))
    (. .)))

nsubj(trying-4, I-1)
xsubj(state-6, I-1)
aux(trying-4, am-2)
advmod(trying-4, first-3)
root(ROOT-0, trying-4)
aux(state-6, to-5)
xcomp(trying-4, state-6)
complm(better-17, whether-7)
ccomp(state-6, not-9)
conj_or(better-17, not-9)
nsubj(better-17, belief-10)
prep_in(belief-10, God-12)
det(masses-15, the-14)
prep_for(God-12, masses-15)
cop(better-17, is-16)
ccomp(state-6, better-17)
prep_than(better-17, lack-19)
prep_of(lack-19, belief-21)
ccomp(state-6, then-24)
advmod(better-17, then-24)
conj_and(better-17, then-24)
complm(promoted-30, whether-25)
det(belief-27, that-26)
nsubjpass(promoted-30, belief-27)
aux(promoted-30, should-28)
auxpass(promoted-30, be-29)
ccomp(better-17, promoted-30)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (ADVP (RB now))
      (VP (VBG bringing)
        (NP (NN religion))
        (PP (IN into)
          (NP (DT the) (NN argument)))))
    (. .)))

nsubj(bringing-4, You-1)
aux(bringing-4, 're-2)
advmod(bringing-4, now-3)
root(ROOT-0, bringing-4)
dobj(bringing-4, religion-5)
det(argument-8, the-7)
prep_into(bringing-4, argument-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP
        (ADVP (NN kind) (IN of))
        (JJ annoying))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NNS people))
          (VP (VBP do)
            (SBAR (IN that)
              (WHADVP (WRB when))
              (S
                (NP (PRP it))
                (ADVP (RB completely))
                (VP (VBZ misses)
                  (NP (DT the) (NN point)))))))))
    (. .)))

nsubj(annoying-5, It-1)
cop(annoying-5, 's-2)
dep(of-4, kind-3)
advmod(annoying-5, of-4)
root(ROOT-0, annoying-5)
advmod(do-8, when-6)
nsubj(do-8, people-7)
advcl(annoying-5, do-8)
complm(misses-13, that-9)
advmod(misses-13, when-10)
nsubj(misses-13, it-11)
advmod(misses-13, completely-12)
ccomp(do-8, misses-13)
det(point-15, the-14)
dobj(misses-13, point-15)

(ROOT
  (S (CC But)
    (ADVP (RB just)
      (PP (IN for)
        (NP
          (NP (DT the) (NN sake))
          (PP (IN of)
            (NP (PRP it))))))
    (: ...)
    (VP (VBP let)
      (S
        (NP (PRP me))
        (VP (VB destroy)
          (NP (PRP it)))))
    (. .)))

cc(let-9, But-1)
advmod(let-9, just-2)
det(sake-5, the-4)
prep_for(just-2, sake-5)
prep_of(sake-5, it-7)
root(ROOT-0, let-9)
nsubj(destroy-11, me-10)
ccomp(let-9, destroy-11)
dobj(destroy-11, it-12)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ has)
      (VP (VBN given)
        (ADVP (RB way)
          (PP (TO to)
            (NP (JJ horrible) (NNS things))))
        (PP (IN through)
          (NP (JJ fanatismThe) (JJ key) (NN word)))
        (SBAR (IN in)
          (S
            (NP (DT this))
            (VP (VBZ is)
              (ADJP (JJ FANATISM)))))))
    (. .)))

nsubj(given-3, it-1)
aux(given-3, has-2)
root(ROOT-0, given-3)
advmod(given-3, way-4)
amod(things-7, horrible-6)
prep_to(way-4, things-7)
amod(word-11, fanatismThe-9)
amod(word-11, key-10)
prep_through(given-3, word-11)
mark(FANATISM-15, in-12)
nsubj(FANATISM-15, this-13)
cop(FANATISM-15, is-14)
advcl(given-3, FANATISM-15)

(ROOT
  (NP (NNP NOT) (NNP RELIGION) (. .)))

nn(RELIGION-2, NOT-1)
root(ROOT-0, RELIGION-2)

