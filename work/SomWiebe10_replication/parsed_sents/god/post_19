(ROOT
  (S
    (NP (PRP You))
    (VP (VBP compare)
      (NP (NNP God))
      (PP (TO to)
        (NP
          (NP (NNP Santa) (NNP Claus))
          (CC and)
          (NP (DT the) (NNP Tooth) (NNP Fairy)))))
    (. .)))

nsubj(compare-2, You-1)
root(ROOT-0, compare-2)
dobj(compare-2, God-3)
nn(Claus-6, Santa-5)
prep_to(compare-2, Claus-6)
det(Fairy-10, the-8)
nn(Fairy-10, Tooth-9)
prep_to(compare-2, Fairy-10)
conj_and(Claus-6, Fairy-10)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB think)
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD might)
            (VP (VB exist) (, ,)
              (ADVP (RB too)))))))
    (. ?)))

aux(think-3, Do-1)
nsubj(think-3, you-2)
root(ROOT-0, think-3)
nsubj(exist-6, they-4)
aux(exist-6, might-5)
ccomp(think-3, exist-6)
advmod(exist-6, too-8)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ does) (RB n't)
      (VP (VB make)
        (S
          (NP (DT the) (NNS fairies))
          (ADJP (JJ real)))))
    (. .)))

nsubj(make-4, That-1)
aux(make-4, does-2)
neg(make-4, n't-3)
root(ROOT-0, make-4)
det(fairies-6, the-5)
nsubj(real-7, fairies-6)
xcomp(make-4, real-7)

(ROOT
  (S
    (SBAR (IN Whether)
      (PRN (CC or)
        (ADJP (RB not)
          (SBAR
            (S
              (NP (EX there))
              (VP (VBZ is))))))
      (S
        (NP (DT a) (NNP God))
        (VP (VBZ is)
          (ADJP (RB just) (RB as) (JJ much))
          (ADVP
            (NP (DT an) (NN issue))
            (RB as))
          (SBAR (IN whether)
            (CC or)
            (RB not)
            (S
              (NP (EX there))
              (VP (VBP are)
                (ADJP (JJ invisible))))))))
    (VP (VBZ fairies)
      (PRT (RP around))
      (NP (PRP us))
      (NP (PDT all) (DT the) (NN time)))
    (. .)))

complm(much-11, Whether-1)
dep(not-3, or-2)
dep(much-11, not-3)
expl(is-5, there-4)
dep(not-3, is-5)
det(God-7, a-6)
nsubj(much-11, God-7)
cop(much-11, is-8)
advmod(much-11, just-9)
advmod(much-11, as-10)
csubj(fairies-21, much-11)
det(issue-13, an-12)
npadvmod(as-14, issue-13)
advmod(much-11, as-14)
complm(are-19, whether-15)
ccomp(much-11, not-17)
conj_or(are-19, not-17)
expl(are-19, there-18)
ccomp(much-11, are-19)
acomp(are-19, invisible-20)
root(ROOT-0, fairies-21)
prt(fairies-21, around-22)
iobj(fairies-21, us-23)
predet(time-26, all-24)
det(time-26, the-25)
dobj(fairies-21, time-26)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP (DT no) (JJ good) (NN reason)
            (S
              (VP (TO to)
                (VP (VB think)
                  (SBAR
                    (S
                      (NP (NN something))
                      (VP (VBZ exists)))))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD should)
      (VP (VB default)
        (PP (TO to)
          (NP (`` ``)
            (NP (RB no))
            (, ,) ('' '')
            (NP
              (NP
                (QP (IN at) (RBS least)))
              (PP (IN for)
                (NP (DT the) (NN time) (VBG being))))))))
    (. .)))

mark('s-3, If-1)
expl('s-3, there-2)
advcl(default-14, 's-3)
det(reason-6, no-4)
amod(reason-6, good-5)
nsubj('s-3, reason-6)
aux(think-8, to-7)
infmod(reason-6, think-8)
nsubj(exists-10, something-9)
ccomp(think-8, exists-10)
nsubj(default-14, we-12)
aux(default-14, should-13)
root(ROOT-0, default-14)
prep(default-14, to-15)
pobj(to-15, no-17)
dep(no-17, at-20)
quantmod(at-20, least-21)
det(time-24, the-23)
prep_for(at-20, time-24)
amod(time-24, being-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB claim)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (NN proof))
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP (DT no) (NNP God))))))))))
    (. .)))

nsubj(claim-4, I-1)
xsubj(have-6, I-1)
aux(claim-4, do-2)
neg(claim-4, n't-3)
root(ROOT-0, claim-4)
aux(have-6, to-5)
xcomp(claim-4, have-6)
dobj(have-6, proof-7)
complm(is-10, that-8)
expl(is-10, there-9)
ccomp(have-6, is-10)
det(God-12, no-11)
nsubj(is-10, God-12)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB just))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP (DT an)
                (ADJP (JJ arbitrary))
                (NN concept)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (PRT (RP up)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP
              (NP (DT the) (NN burden))
              (PP (IN of)
                (NP (NN proof))))
            (VP (VBZ lies)
              (PP (IN with)
                (NP
                  (NP (DT the) (NN person))
                  (VP (VBG making)
                    (NP (DT the) (JJ outlandish) (NN claim))))))))))
    (. .)))

nsubj(think-3, I-1)
advmod(think-3, just-2)
root(ROOT-0, think-3)
nsubj(concept-8, it-4)
cop(concept-8, 's-5)
det(concept-8, an-6)
amod(concept-8, arbitrary-7)
ccomp(think-3, concept-8)
aux(make-10, to-9)
infmod(concept-8, make-10)
prt(make-10, up-11)
nsubj(think-15, I-14)
conj_and(think-3, think-15)
det(burden-17, the-16)
nsubj(lies-20, burden-17)
prep_of(burden-17, proof-19)
ccomp(think-15, lies-20)
det(person-23, the-22)
prep_with(lies-20, person-23)
partmod(person-23, making-24)
det(claim-27, the-25)
amod(claim-27, outlandish-26)
dobj(making-24, claim-27)

(ROOT
  (S
    (ADVP (RB Somehow))
    (NP (PRP I))
    (VP (VBP doubt)
      (NP (PRP it)))
    (. .)))

advmod(doubt-3, Somehow-1)
nsubj(doubt-3, I-2)
root(ROOT-0, doubt-3)
dobj(doubt-3, it-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (ADJP (JJ right)
        (SBAR (IN that)
          (S
            (S
              (VP (RB not) (VBG having)
                (NP (JJ experienced) (NN something))))
            (VP (VBZ does) (RB not)
              (VP (VB prove)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN thing))
                    (VP (VBZ does) (RB n't)
                      (VP (VB exist)))))))))))
    (. .)))

nsubj(right-3, You-1)
cop(right-3, 're-2)
root(ROOT-0, right-3)
complm(prove-11, that-4)
neg(having-6, not-5)
csubj(prove-11, having-6)
amod(something-8, experienced-7)
dobj(having-6, something-8)
aux(prove-11, does-9)
neg(prove-11, not-10)
ccomp(right-3, prove-11)
complm(exist-17, that-12)
det(thing-14, the-13)
nsubj(exist-17, thing-14)
aux(exist-17, does-15)
neg(exist-17, n't-16)
ccomp(prove-11, exist-17)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP it))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBD had)
            (ADVP (RBR better))
            (VP (VB be)
              (NP
                (NP (DT a)
                  (ADJP (RB pretty) (JJ good))
                  (NN reason))
                (PP (IN for)
                  (S
                    (VP (VBG assuming)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBZ does)))))))))))))
    (. .)))

advmod(means-4, However-1)
nsubj(means-4, it-3)
root(ROOT-0, means-4)
expl(reason-12, there-5)
aux(reason-12, had-6)
advmod(reason-12, better-7)
cop(reason-12, be-8)
det(reason-12, a-9)
advmod(good-11, pretty-10)
amod(reason-12, good-11)
ccomp(means-4, reason-12)
prepc_for(reason-12, assuming-14)
complm(does-17, that-15)
nsubj(does-17, it-16)
ccomp(assuming-14, does-17)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD told)
          (NP (PRP you))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NN air))
                (PP (IN around)
                  (NP (PRP us))))
              (VP (VBD was)
                (ADJP (JJ full)
                  (PP (IN of)
                    (NP
                      (NP (JJ tiny) (JJ invisible) (NNS fairies))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBP are)
                            (ADJP (JJ undetectable)
                              (PP (IN in)
                                (NP (DT any) (NN way))))))))))))))))
    (, ,) (MD would)
    (NP (PRP you))
    (VP (VB say) (, ,)
      (INTJ (`` ``) (UH Yeah))
      (, ,)
      (ADVP (RB maybe) ('' '')))
    (. ?)))

mark(told-3, If-1)
nsubj(told-3, I-2)
advcl(say-25, told-3)
dobj(told-3, you-4)
complm(full-11, that-5)
det(air-7, the-6)
nsubj(full-11, air-7)
prep_around(air-7, us-9)
cop(full-11, was-10)
ccomp(told-3, full-11)
amod(fairies-15, tiny-13)
amod(fairies-15, invisible-14)
prep_of(full-11, fairies-15)
nsubj(undetectable-18, fairies-15)
cop(undetectable-18, are-17)
rcmod(fairies-15, undetectable-18)
det(way-21, any-20)
prep_in(undetectable-18, way-21)
aux(say-25, would-23)
nsubj(say-25, you-24)
root(ROOT-0, say-25)
dep(say-25, Yeah-28)
advmod(say-25, maybe-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD 'd)
            (VP (VB say) (, ,) (`` ``)
              (S
                (VP (VB Get)
                  (NP
                    (NP (JJ real))
                    (, ,)
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ does) (RB n't)
                          (VP (VB make)
                            (NP (DT any) (NN sense))))))))))))))
    (. .)))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
nsubj(say-5, you-3)
aux(say-5, 'd-4)
ccomp(hope-2, say-5)
ccomp(say-5, Get-8)
dobj(Get-8, real-9)
nsubj(make-14, real-9)
aux(make-14, does-12)
neg(make-14, n't-13)
rcmod(real-9, make-14)
det(sense-16, any-15)
dobj(make-14, sense-16)

(ROOT
  (S ('' '')
    (S (CC But)
      (NP
        (NP (PRP$ my) (NN positing))
        (PP (IN of)
          (NP (JJ invisible) (NNS fairies))))
      (VP (VBZ is)
        (ADVP (RB just))
        (ADJP (RB as) (JJ arbitrary)
          (PP (IN as)
            (S
              (VP (VBG positing)
                (NP
                  (NP
                    (NP (DT the) (NN existence))
                    (PP (IN of)
                      (NP (NNP God))))
                  (, ,)
                  (CC or)
                  (NP (NNP Santa) (NNP Claus)))))))))
    (, ,)
    (CC or)
    (S
      (NP (DT the) (NNP Tooth))
      (VP (VBZ Fairy)))
    (. .)))

poss(positing-4, my-3)
nsubj(arbitrary-11, positing-4)
amod(fairies-7, invisible-6)
prep_of(positing-4, fairies-7)
cop(arbitrary-11, is-8)
advmod(arbitrary-11, just-9)
advmod(arbitrary-11, as-10)
root(ROOT-0, arbitrary-11)
prepc_as(arbitrary-11, positing-13)
det(existence-15, the-14)
dobj(positing-13, existence-15)
prep_of(existence-15, God-17)
nn(Claus-21, Santa-20)
dobj(positing-13, Claus-21)
conj_or(existence-15, Claus-21)
det(Tooth-25, the-24)
nsubj(Fairy-26, Tooth-25)
conj_or(arbitrary-11, Fairy-26)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD might)
      (VP (VB make)
        (S
          (NP (PRP me))
          (ADJP (JJ happy)
            (S
              (VP (TO to)
                (VP (VB believe)
                  (PP (IN in)
                    (NP (DT the) (NNS fairies))))))))))
    (. .)))

nsubj(make-3, It-1)
aux(make-3, might-2)
root(ROOT-0, make-3)
nsubj(happy-5, me-4)
xcomp(make-3, happy-5)
aux(believe-7, to-6)
xcomp(happy-5, believe-7)
det(fairies-10, the-9)
prep_in(believe-7, fairies-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD might)
      (ADVP (RB even))
      (VP (VB have)
        (NP
          (NP (DT some) (JJ complex) (NN belief) (NN system))
          (PP (IN about)
            (NP (PRP them)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ causes)
                (S
                  (NP (PRP me))
                  (VP (TO to)
                    (VP (VB be)
                      (NP (DT a)
                        (ADJP (JJR nicer))
                        (NN person)))))))))))
    (. .)))

nsubj(have-4, I-1)
aux(have-4, might-2)
advmod(have-4, even-3)
root(ROOT-0, have-4)
det(system-8, some-5)
amod(system-8, complex-6)
nn(system-8, belief-7)
dobj(have-4, system-8)
nsubj(causes-12, system-8)
prep_about(system-8, them-10)
rcmod(system-8, causes-12)
nsubj(person-18, me-13)
aux(person-18, to-14)
cop(person-18, be-15)
det(person-18, a-16)
amod(person-18, nicer-17)
xcomp(causes-12, person-18)

