(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))

root(ROOT-0, 1-1)

(ROOT
  (S
    (NP (DT These))
    (VP (VBZ prophets) (RB MAY)
      (ADVP (RB just))
      (VP (VB be)
        (NP (JJ intelligent) (NNS people))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBD said))))))
    (. .)))

nsubj(prophets-2, These-1)
root(ROOT-0, prophets-2)
advmod(prophets-2, MAY-3)
advmod(prophets-2, just-4)
cop(people-7, be-5)
amod(people-7, intelligent-6)
dep(prophets-2, people-7)
mark(said-10, as-8)
nsubj(said-10, you-9)
advcl(people-7, said-10)

(ROOT
  (S
    (S
      (NP (DT The) (NN mother))
      (VP (VBZ does) (RB not)
        (VP (VB explain)
          (PP (TO to)
            (NP (DT the) (NN child)))
          (SBAR (IN because)
            (S
              (NP (DT the) (NN child))
              (VP (MD will) (RB not)
                (VP (VB understand))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (ADVP (RB just))
      (VP (VB continue)
        (S
          (VP (TO to)
            (VP (VB cry)
              (CC and)
              (VB beg))))))
    (. .)))

det(mother-2, The-1)
nsubj(explain-5, mother-2)
aux(explain-5, does-3)
neg(explain-5, not-4)
ccomp(continue-19, explain-5)
det(child-8, the-7)
prep_to(explain-5, child-8)
mark(understand-14, because-9)
det(child-11, the-10)
nsubj(understand-14, child-11)
aux(understand-14, will-12)
neg(understand-14, not-13)
advcl(explain-5, understand-14)
nsubj(continue-19, it-16)
xsubj(cry-21, it-16)
aux(continue-19, will-17)
advmod(continue-19, just-18)
root(ROOT-0, continue-19)
aux(cry-21, to-20)
xcomp(continue-19, cry-21)
xcomp(continue-19, beg-23)
conj_and(cry-21, beg-23)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT the) (JJ same) (NN way)))
      (NP (PRP we))
      (VP (VBP do) (RB not)
        (VP (VB understand)
          (NP
            (NP (NNP God) (POS 's))
            (NN word)))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (DT both) (NNS circumstances)))
      (NP
        (NP (DT the) (NN child))
        (CC and)
        (NP (PRP us) (NNS people)))
      (VP (MD will)
        (VP (VB benefit)
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (VBP follow)
                (NP
                  (NP (NNP God) (POS 's))
                  (JJ \/) (NN mother))))))))
    (. .)))

det(way-4, the-2)
amod(way-4, same-3)
prep_in(understand-8, way-4)
nsubj(understand-8, we-5)
aux(understand-8, do-6)
neg(understand-8, not-7)
root(ROOT-0, understand-8)
poss(word-11, God-9)
dobj(understand-8, word-11)
det(circumstances-16, both-15)
prep_in(benefit-23, circumstances-16)
det(child-18, the-17)
nsubj(benefit-23, child-18)
dep(people-21, us-20)
conj_and(child-18, people-21)
nsubj(benefit-23, people-21)
aux(benefit-23, will-22)
conj_but(understand-8, benefit-23)
mark(follow-26, if-24)
nsubj(follow-26, we-25)
advcl(benefit-23, follow-26)
poss(mother-30, God-27)
amod(mother-30, \/-29)
dobj(follow-26, mother-30)

(ROOT
  (S
    (NP (PRP we))
    (VP (VBP know)
      (SBAR (IN that)
        (SINV
          (S
            (NP (PRP we))
            (VP (VBP shouldnt)))
          (VP (VBP kill)
            (SBAR (IN because)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (NP (JJ common) (NN senseSomeone) (NNS rapes))))))
          (NP (DT a) (NN child))
          (. .))))
    (. .)))

nsubj(know-2, we-1)
root(ROOT-0, know-2)
complm(kill-6, that-3)
nsubj(shouldnt-5, we-4)
dep(kill-6, shouldnt-5)
dep(know-2, kill-6)
mark(rapes-12, because-7)
nsubj(rapes-12, it-8)
cop(rapes-12, is-9)
amod(rapes-12, common-10)
nn(rapes-12, senseSomeone-11)
advcl(kill-6, rapes-12)
det(child-14, a-13)
nsubj(kill-6, child-14)

(ROOT
  (SQ (MD should)
    (NP (PRP he))
    (VP (VB be)
      (VP (VBN killed)))
    (. ?)))

aux(killed-4, should-1)
nsubjpass(killed-4, he-2)
auxpass(killed-4, be-3)
root(ROOT-0, killed-4)

(ROOT
  (SQ
    (S
      (NP (PRP You))
      (VP (VBP go)
        (PP (TO to)
          (NP (NN war)))))
    (, ,)
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB kill)))
    (. ?)))

nsubj(go-2, You-1)
dep(kill-8, go-2)
prep_to(go-2, war-4)
aux(kill-8, should-6)
nsubj(kill-8, you-7)
root(ROOT-0, kill-8)

(ROOT
  (SQ
    (S
      (NP (PRP You))
      (VP (VBZ loose)
        (NP (PRP$ your) (NN temper))))
    (, ,)
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB kill)))
    (. ?)))

nsubj(loose-2, You-1)
dep(kill-8, loose-2)
poss(temper-4, your-3)
dobj(loose-2, temper-4)
aux(kill-8, should-6)
nsubj(kill-8, you-7)
root(ROOT-0, kill-8)

(ROOT
  (SQ
    (S
      (NP (NN Someone))
      (VP (VBZ is)
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB kill)
                (NP (PRP you))))))))
    (, ,)
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB kill)))
    (. ?)))

nsubj(trying-3, Someone-1)
xsubj(kill-5, Someone-1)
aux(trying-3, is-2)
dep(kill-10, trying-3)
aux(kill-5, to-4)
xcomp(trying-3, kill-5)
dobj(kill-5, you-6)
aux(kill-10, should-8)
nsubj(kill-10, you-9)
root(ROOT-0, kill-10)

(ROOT
  (SQ
    (S
      (NP (PRP You))
      (VP (VBP 've)
        (VP (VBN had)
          (NP
            (NP (RB enough))
            (PP (IN of)
              (NP (NN life)))))))
    (, ,)
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB kill)
        (NP (PRP yourself))))
    (. ?)))

nsubj(had-3, You-1)
aux(had-3, 've-2)
dep(kill-10, had-3)
dobj(had-3, enough-4)
prep_of(enough-4, life-6)
aux(kill-10, should-8)
nsubj(kill-10, you-9)
root(ROOT-0, kill-10)
dobj(kill-10, yourself-11)

(ROOT
  (SQ
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (PP (IN in)
          (NP (DT a) (JJ vegetative) (NN state)))))
    (, ,)
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB be)
        (VP (VBN killed))))
    (. ?)))

nsubj('re-2, You-1)
dep(killed-11, 're-2)
det(state-6, a-4)
amod(state-6, vegetative-5)
prep_in('re-2, state-6)
aux(killed-11, should-8)
nsubjpass(killed-11, you-9)
auxpass(killed-11, be-10)
root(ROOT-0, killed-11)

(ROOT
  (S
    (NP (NNP God))
    (VP (MD will)
      (VP (VB tell)
        (S
          (NP (PRP us))
          (NP
            (NP (DT the) (JJ right) (NN answer))
            (RRC
              (ADVP (DT no) (NN matter))
              (NP (WP what)))))))
    (. .)))

nsubj(tell-3, God-1)
aux(tell-3, will-2)
root(ROOT-0, tell-3)
nsubj(answer-7, us-4)
det(answer-7, the-5)
amod(answer-7, right-6)
xcomp(tell-3, answer-7)
dep(matter-9, no-8)
advmod(what-10, matter-9)
rcmod(answer-7, what-10)

(ROOT
  (S
    (S
      (ADVP (RB However))
      (NP (NNS people))
      (VP (VBP have)
        (NP
          (NP (JJ different) (NNS opinions))
          (PP (IN on)
            (NP (DT those) (NNS questions))))))
    (CC and)
    (S
      (NP (DT both))
      (VP (MD will)
        (VP (VB argue)
          (NP (PRP$ their) (NN side)))))
    (. .)))

advmod(have-3, However-1)
nsubj(have-3, people-2)
root(ROOT-0, have-3)
amod(opinions-5, different-4)
dobj(have-3, opinions-5)
det(questions-8, those-7)
prep_on(opinions-5, questions-8)
nsubj(argue-12, both-10)
aux(argue-12, will-11)
conj_and(have-3, argue-12)
poss(side-14, their-13)
dobj(argue-12, side-14)

(ROOT
  (S (CC But)
    (NP (PRP they))
    (VP (VBP have)
      (ADVP (RB ALL))
      (VP (VBN claimed)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN related)
                (PP (TO to)
                  (NP (NNP God)))
                (PP (IN in)
                  (NP (DT some) (NN way)))))))))
    (. .)))

cc(claimed-5, But-1)
nsubj(claimed-5, they-2)
xsubj(related-8, they-2)
aux(claimed-5, have-3)
advmod(claimed-5, ALL-4)
root(ROOT-0, claimed-5)
aux(related-8, to-6)
auxpass(related-8, be-7)
xcomp(claimed-5, related-8)
prep_to(related-8, God-10)
det(way-13, some-12)
prep_in(related-8, way-13)

(ROOT
  (FRAG
    (SBAR
      (SBAR
        (WHNP (WP Who))
        (S
          (VP (VBZ 's)
            (ADJP (JJ right)))))
      (CC and)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ 's)
            (ADJP (JJ wrong))))))
    (. .)))

nsubj(right-3, Who-1)
cop(right-3, 's-2)
root(ROOT-0, right-3)
nsubj(wrong-7, who-5)
cop(wrong-7, 's-6)
conj_and(right-3, wrong-7)

(ROOT
  (S
    (NP
      (NP (NN Nobody))
      (PP (IN on)
        (NP (NN earth))))
    (ADVP (RB truly))
    (VP (VBZ knows)
      (NP
        (NP (DT the) (NN impact))
        (PP (IN of)
          (NP
            (NP (DT the) (NN decision))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP 've)
                  (VP (VBN made)))))))))
    (. .)))

nsubj(knows-5, Nobody-1)
prep_on(Nobody-1, earth-3)
advmod(knows-5, truly-4)
root(ROOT-0, knows-5)
det(impact-7, the-6)
dobj(knows-5, impact-7)
det(decision-10, the-9)
prep_of(impact-7, decision-10)
dobj(made-13, decision-10)
nsubj(made-13, they-11)
aux(made-13, 've-12)
rcmod(decision-10, made-13)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ goes)
      (PP (TO to)
        (NP (PRP$ your) (NN education) (NN point)))
      (ADVP (RB too)))
    (. .)))

nsubj(goes-2, This-1)
root(ROOT-0, goes-2)
poss(point-6, your-4)
nn(point-6, education-5)
prep_to(goes-2, point-6)
advmod(goes-2, too-7)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (VP (VBG telling)
          (NP (PRP me))
          (NP (PDT all) (DT the) (JJS finest)))))
    (, ,)
    (NP
      (NP
        (ADJP (RBS most) (VBN educated))
        (NNS people))
      (PP (IN on)
        (NP (DT the) (NN planet))))
    (VP (VBP make)
      (NP (DT the) (NNS choices)))
    (. ?)))

nsubj(telling-3, You-1)
aux(telling-3, 're-2)
ccomp(make-15, telling-3)
iobj(telling-3, me-4)
predet(finest-7, all-5)
det(finest-7, the-6)
dobj(telling-3, finest-7)
advmod(educated-10, most-9)
amod(people-11, educated-10)
nsubj(make-15, people-11)
det(planet-14, the-13)
prep_on(people-11, planet-14)
root(ROOT-0, make-15)
det(choices-17, the-16)
dobj(make-15, choices-17)

(ROOT
  (FRAG
    (PP (IN in)
      (NP
        (NP (NNS terms))
        (PP (IN of)
          (NP (NNS ethics)))))
    (, ,)
    (NP (NN religion) (NN etc))
    (. ?)))

dep(etc-7, in-1)
pobj(in-1, terms-2)
prep_of(terms-2, ethics-4)
nn(etc-7, religion-6)
root(ROOT-0, etc-7)

(ROOT
  (FRAG
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (VBP ARE)
          (NP
            (NP (NNS followers))
            (PP (IN of)
              (NP (NNP God)))))))
    (, ,)
    (ADVP (RB then) (JJ great))
    (. .)))

mark(followers-4, If-1)
nsubj(followers-4, they-2)
cop(followers-4, ARE-3)
dep(great-9, followers-4)
prep_of(followers-4, God-6)
advmod(great-9, then-8)
root(ROOT-0, great-9)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (NP (NNP NOT)))))
    (, ,)
    (WHADVP
      (ADVP (RB then))
      (WRB why))
    (SQ (VBP have)
      (NP (PRP they))
      (VP (`` ``) (VBN used) ('' '')
        (PP (NN God))))
    (. ?)))

mark(NOT-4, If-1)
nsubj(NOT-4, they-2)
cop(NOT-4, 're-3)
advcl(used-11, NOT-4)
advmod(why-7, then-6)
advmod(used-11, why-7)
aux(used-11, have-8)
nsubj(used-11, they-9)
root(ROOT-0, used-11)
prep(used-11, God-13)

(ROOT
  (S
    (NP (NNP THAT))
    (VP (VBD was)
      (NP (PRP$ my) (JJ original) (NN argument)))
    (. .) (. .)))

nsubj(argument-5, THAT-1)
cop(argument-5, was-2)
poss(argument-5, my-3)
amod(argument-5, original-4)
root(ROOT-0, argument-5)

(ROOT
  (NP
    (NP (DT the) (NNS reasons))
    (PP (IN for)
      (S
        (VP (VBG having)
          (NP (NNP God)))))
    (. .)))

det(reasons-2, the-1)
root(ROOT-0, reasons-2)
prepc_for(reasons-2, having-4)
dobj(having-4, God-5)

(ROOT
  (S (-LRB- -LRB-)
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN been)
        (VP (VB completely)
          (NP (NN sidetracked))
          (-RRB- -RRB-)
          (ADVP (RB .2)))))
    (. .)))

nsubj(completely-5, I-2)
aux(completely-5, 've-3)
aux(completely-5, been-4)
root(ROOT-0, completely-5)
dobj(completely-5, sidetracked-6)
advmod(completely-5, .2-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN reason))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP do) (RB not)
            (VP (VB want)
              (S
                (VP (TO to)
                  (VP (VB bring)
                    (PP (IN in)
                      (NP (NN religion)))))))))))
    (VP (VBZ is)
      (PP (IN for)
        (NP
          (NP (DT the) (NNS reasons))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP 've)
                (VP (VBN stated))))))))
    (. .)))

det(reason-2, The-1)
dobj(want-6, reason-2)
nsubj(is-11, reason-2)
nsubj(want-6, I-3)
xsubj(bring-8, I-3)
aux(want-6, do-4)
neg(want-6, not-5)
rcmod(reason-2, want-6)
aux(bring-8, to-7)
xcomp(want-6, bring-8)
prep_in(bring-8, religion-10)
root(ROOT-0, is-11)
det(reasons-14, the-13)
prep_for(is-11, reasons-14)
dobj(stated-17, reasons-14)
nsubj(stated-17, you-15)
aux(stated-17, 've-16)
rcmod(reasons-14, stated-17)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (JJ several) (JJ different) (NNS religions))
          (VP (RB all) (VBG doing)
            (NP (JJ different) (NNS things))))))
    (CC and)
    (S
      (ADVP (RB as) (RB soon)
        (SBAR (IN as)
          (S
            (NP (PRP we))
            (VP (VBP start)
              (S
                (VP (VBG discussing)
                  (NP
                    (NP
                      (NP (NNP God) (POS 's))
                      (NN word))
                    (ADJP (RB as) (JJ interpretted)))
                  (PP (IN by)
                    (NP (DT these) (NNS religions)))))))))
      (, ,)
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB be)
          (VP (VBG arguing)
            (PP (IN about)
              (NP
                (NP (NNS religions))
                (CC and)
                (NP (RB not) (NNP God))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(religions-5, several-3)
amod(religions-5, different-4)
nsubj(are-2, religions-5)
advmod(doing-7, all-6)
partmod(religions-5, doing-7)
amod(things-9, different-8)
dobj(doing-7, things-9)
advmod(soon-12, as-11)
advmod(arguing-29, soon-12)
mark(start-15, as-13)
nsubj(start-15, we-14)
ccomp(soon-12, start-15)
xcomp(start-15, discussing-16)
poss(word-19, God-17)
dobj(discussing-16, word-19)
advmod(interpretted-21, as-20)
amod(word-19, interpretted-21)
det(religions-24, these-23)
prep_by(discussing-16, religions-24)
nsubj(arguing-29, we-26)
aux(arguing-29, 'll-27)
aux(arguing-29, be-28)
conj_and(are-2, arguing-29)
prep_about(arguing-29, religions-31)
neg(God-34, not-33)
prep_about(arguing-29, God-34)
conj_and(religions-31, God-34)

