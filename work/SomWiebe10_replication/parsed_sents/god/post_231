(ROOT
  (S (`` ``)
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB see) (, ,) (VB measure) (, ,)
              (CC and)
              (VB know))))))
    (VP (VBZ shows)
      (NP (PRP us))
      (SBAR (IN that)
        (S
          (NP (NN matter)
            (CC and)
            (NN energy))
          (VP (VBP have)
            (ADVP (RB always))
            (VP (VBN existed))))))
    (. .)))

dobj(see-5, All-2)
nsubj(shows-11, All-2)
nsubj(see-5, we-3)
nsubj(measure-7, we-3)
nsubj(know-10, we-3)
aux(see-5, can-4)
rcmod(All-2, see-5)
rcmod(All-2, measure-7)
conj_and(see-5, measure-7)
rcmod(All-2, know-10)
conj_and(see-5, know-10)
root(ROOT-0, shows-11)
dobj(shows-11, us-12)
complm(existed-19, that-13)
nsubj(existed-19, matter-14)
conj_and(matter-14, energy-16)
nsubj(existed-19, energy-16)
aux(existed-19, have-17)
advmod(existed-19, always-18)
ccomp(shows-11, existed-19)

(ROOT
  (S ('' '')
    (NP (DT The) (NN author))
    (VP (VBZ 's)
      (NP
        (NP (NN statement))
        (PP (IN above)
          (SBAR
            (S
              (ADVP (RB simply))
              (VP (VBZ is) (RB not)
                (ADJP (JJ accurate))))))))
    (. .)))

det(author-3, The-2)
nsubj(statement-5, author-3)
cop(statement-5, 's-4)
root(ROOT-0, statement-5)
advmod(accurate-10, simply-7)
cop(accurate-10, is-8)
neg(accurate-10, not-9)
prepc_above(statement-5, accurate-10)

(ROOT
  (S
    (NP (NNP Big) (NNP Bag) (NN theory))
    (, ,)
    (SBAR (IN while)
      (FRAG
        (PP
          (ADVP (RB certainly))
          (RB not)
          (NP (DT an) (JJ established) (NN fact)))))
    (, ,)
    (VP (VBZ is)
      (ADVP (RB widely))
      (VP (VBN accepted)))
    (. .)))

nn(theory-3, Big-1)
nn(theory-3, Bag-2)
nsubjpass(accepted-14, theory-3)
mark(certainly-6, while-5)
dep(accepted-14, certainly-6)
neg(certainly-6, not-7)
det(fact-10, an-8)
amod(fact-10, established-9)
pobj(certainly-6, fact-10)
auxpass(accepted-14, is-12)
advmod(accepted-14, widely-13)
root(ROOT-0, accepted-14)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP (DT that) (NN theory))))
    (, ,)
    (VP (VB matter)
      (SBAR (IN as)
        (S
          (NP (PRP we))
          (VP (VBP know)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD did) (RB not)
                  (VP (VB exist)
                    (ADVP (RB prior)
                      (PP (TO to)
                        (NP (DT the) (NNP Big) (NNP Bang))))))))))))
    (. .)))

prepc_according_to(matter-6, to-2)
det(theory-4, that-3)
pobj(matter-6, theory-4)
root(ROOT-0, matter-6)
mark(know-9, as-7)
nsubj(know-9, we-8)
advcl(matter-6, know-9)
nsubj(exist-13, it-10)
aux(exist-13, did-11)
neg(exist-13, not-12)
ccomp(know-9, exist-13)
det(Bang-18, the-16)
nn(Bang-18, Big-17)
prep_prior_to(exist-13, Bang-18)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (NP
      (NP (DT the) (JJ physical) (NNS laws))
      (PP (IN of)
        (NP
          (NP (DT the) (NN universe))
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (VBP are)
                (ADJP (RB so) (JJ familiar)
                  (PP (IN with)))))))))
    (VP (VBD did) (RB not)
      (VP (VB exist)))
    (. .)))

advmod(exist-17, Indeed-1)
det(laws-5, the-3)
amod(laws-5, physical-4)
nsubj(exist-17, laws-5)
det(universe-8, the-7)
prep_of(laws-5, universe-8)
complm(familiar-13, that-9)
nsubj(familiar-13, we-10)
cop(familiar-13, are-11)
advmod(familiar-13, so-12)
dep(universe-8, familiar-13)
prep(familiar-13, with-14)
aux(exist-17, did-15)
neg(exist-17, not-16)
root(ROOT-0, exist-17)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can) (RB not)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNS laws))
            (VP (VBD prevailed)
              (SBAR (IN because)
                (S
                  (S
                    (NP (DT the) (NNS conditions))
                    (ADVP (RB prior)
                      (PP (TO to)
                        (NP (DT the) (NNP Big) (NNP Bang))))
                    (VP (VBP are)
                      (PP (IN beyond)
                        (NP (DT all) (NN experience)))))
                  (CC and)
                  (S
                    (NP
                      (PRN (, ,)
                        (ADVP (RB so) (RB far))
                        (ADVP (IN at) (JJS least))
                        (, ,)))
                    (VP (VBP are)
                      (ADJP (JJ untestable)))))))))))
    (. .)))

nsubj(know-4, We-1)
aux(know-4, can-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
dep(prevailed-7, what-5)
nsubj(are-16, what-5)
nsubj(prevailed-7, laws-6)
ccomp(know-4, prevailed-7)
mark(are-16, because-8)
det(conditions-10, the-9)
nsubj(are-16, conditions-10)
det(Bang-15, the-13)
nn(Bang-15, Big-14)
prep_prior_to(are-16, Bang-15)
advcl(prevailed-7, are-16)
det(experience-19, all-18)
prep_beyond(are-16, experience-19)
advmod(far-23, so-22)
nsubj(untestable-28, far-23)
dep(far-23, at-24)
pobj(at-24, least-25)
cop(untestable-28, are-27)
advcl(prevailed-7, untestable-28)
conj_and(are-16, untestable-28)

(ROOT
  (S
    (S
      (S
        (NP (PRP One))
        (VP (MD may)
          (ADVP (RB well))
          (VP (VB deny)
            (NP (DT the) (NNP Big) (NNP Bang)))))
      (CC and)
      (S
        (NP (DT that))
        (VP (VBZ 's)
          (ADJP (JJ fine)))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT the) (NN statement))
        (SBAR (IN that)
          (S
            (NP (NN matter)
              (CC and)
              (NN energy))
            (VP (VBP have)
              (ADVP (RB always))
              (VP (VBN existed))))))
      (VP (VBZ is) (RB not)
        (VP (VBN supported))))
    (. .)))

nsubj(deny-4, One-1)
aux(deny-4, may-2)
advmod(deny-4, well-3)
root(ROOT-0, deny-4)
det(Bang-7, the-5)
nn(Bang-7, Big-6)
dobj(deny-4, Bang-7)
nsubj(fine-11, that-9)
cop(fine-11, 's-10)
conj_and(deny-4, fine-11)
det(statement-15, the-14)
dobj(existed-22, statement-15)
nsubjpass(supported-25, statement-15)
complm(existed-22, that-16)
nsubj(existed-22, matter-17)
conj_and(matter-17, energy-19)
nsubj(existed-22, energy-19)
aux(existed-22, have-20)
advmod(existed-22, always-21)
dep(statement-15, existed-22)
auxpass(supported-25, is-23)
neg(supported-25, not-24)
conj_but(deny-4, supported-25)

