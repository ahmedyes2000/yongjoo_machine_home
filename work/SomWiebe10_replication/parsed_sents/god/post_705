(ROOT
  (S
    (VP (VB Thank)
      (NP (PRP you))
      (PP (IN for)
        (NP (DT this) (NN post))))
    (. .)))

root(ROOT-0, Thank-1)
dobj(Thank-1, you-2)
det(post-5, this-4)
prep_for(Thank-1, post-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN been)
        (VP (VBG waiting)
          (PP (IN for)
            (NP
              (NP (NN something))
              (PP (IN like)
                (NP (DT this))))))))
    (. .)))

nsubj(waiting-4, I-1)
aux(waiting-4, 've-2)
aux(waiting-4, been-3)
root(ROOT-0, waiting-4)
prep_for(waiting-4, something-6)
prep_like(something-6, this-8)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ first) (NN mother) (POS 's))
        (NN child))
      (ADVP (RB never))
      (VP (VBZ learns)
        (S
          (VP (TO to)
            (VP (VB pick)
              (NP (PRP itself))
              (PRT (RP up)))))))
    (CC and)
    (S
      (PP
        (NP (CD one) (NN day))
        (IN on)
        (NP (PRP$ its) (JJ own)))
      (, ,)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBD fell))))
      (, ,)
      (NP (PRP it))
      (ADVP (RB never))
      (VP (VBD got)
        (ADVP (RB back) (RB up))))
    (. .)))

det(mother-3, The-1)
amod(mother-3, first-2)
poss(child-5, mother-3)
nsubj(learns-7, child-5)
xsubj(pick-9, child-5)
neg(learns-7, never-6)
root(ROOT-0, learns-7)
aux(pick-9, to-8)
xcomp(learns-7, pick-9)
dobj(pick-9, itself-10)
prt(pick-9, up-11)
num(day-14, one-13)
npadvmod(got-25, day-14)
poss(own-17, its-16)
prep_on(got-25, own-17)
advmod(fell-21, when-19)
nsubj(fell-21, it-20)
advcl(got-25, fell-21)
nsubj(got-25, it-23)
neg(got-25, never-24)
conj_and(learns-7, got-25)
advmod(up-27, back-26)
advmod(got-25, up-27)

(ROOT
  (S
    (NP (DT The) (JJ second) (NN child))
    (ADVP (RB however))
    (VP (VBD had)
      (VP (VBN learned)
        (SBAR
          (WHADVP (WRB how))
          (S
            (S
              (VP (TO to)
                (VP (VB get)
                  (ADVP
                    (ADVP (RB back) (RB up))
                    (CC and)
                    (PP (IN on)
                      (NP (PRP$ its) (JJ own)))))))
            (VP (VBD was)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB continue)
                      (PP (IN in)
                        (NP (NN life))))))))))))
    (. .)))

det(child-3, The-1)
amod(child-3, second-2)
nsubj(learned-6, child-3)
advmod(learned-6, however-4)
aux(learned-6, had-5)
root(ROOT-0, learned-6)
advmod(able-17, how-7)
aux(get-9, to-8)
csubj(able-17, get-9)
advmod(up-11, back-10)
advmod(get-9, up-11)
advmod(get-9, on-13)
conj_and(up-11, on-13)
poss(own-15, its-14)
prep_on(up-11, own-15)
cop(able-17, was-16)
ccomp(learned-6, able-17)
aux(continue-19, to-18)
xcomp(able-17, continue-19)
prep_in(continue-19, life-21)

(ROOT
  (S
    (NP (DT The) (JJ second) (NN one))
    (VP (VBZ is)
      (NP (DT the) (JJR greater) (NN good)))
    (. .)))

det(one-3, The-1)
amod(one-3, second-2)
nsubj(good-7, one-3)
cop(good-7, is-4)
det(good-7, the-5)
amod(good-7, greater-6)
root(ROOT-0, good-7)

(ROOT
  (S
    (S
      (NP (DT The) (NN mother))
      (VP (MD may)
        (VP (VB seem)
          (ADJP (JJ insensitive)
            (CC and)
            (JJ harsh))
          (PP (IN at)
            (NP (JJ first))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (DT the) (JJ long) (NN run)))
      (, ,)
      (NP (DT the) (NN outcome))
      (VP (VBD led)
        (PP (TO to)
          (NP
            (NP (DT the) (NN child) (POS 's))
            (NN survival)))))
    (. .)))

det(mother-2, The-1)
nsubj(insensitive-5, mother-2)
nsubj(harsh-7, mother-2)
aux(insensitive-5, may-3)
cop(insensitive-5, seem-4)
root(ROOT-0, insensitive-5)
conj_and(insensitive-5, harsh-7)
prep_at(insensitive-5, first-9)
det(run-15, the-13)
amod(run-15, long-14)
prep_in(led-19, run-15)
det(outcome-18, the-17)
nsubj(led-19, outcome-18)
conj_but(insensitive-5, led-19)
det(child-22, the-21)
poss(survival-24, child-22)
prep_to(led-19, survival-24)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (MD may)
        (VP (VB seem)
          (PP (IN like)
            (NP (DT an)
              (UCP
                (ADJP (JJ obvious))
                (CC and)
                (ADVP (RB maybe))
                (ADJP (RB even) (JJ biased)))
              (NN example))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP mean)
              (PP (IN by)
                (NP (DT the) (JJR greater) (NN good))))))))
    (. .)))

nsubj(seem-3, This-1)
aux(seem-3, may-2)
root(ROOT-0, seem-3)
det(example-11, an-5)
amod(example-11, obvious-6)
advmod(obvious-6, maybe-8)
conj_and(obvious-6, maybe-8)
amod(example-11, maybe-8)
advmod(biased-10, even-9)
conj_and(obvious-6, biased-10)
amod(example-11, biased-10)
prep_like(seem-3, example-11)
nsubj(is-15, that-14)
conj_but(seem-3, is-15)
dobj(mean-18, what-16)
nsubj(mean-18, I-17)
ccomp(is-15, mean-18)
det(good-22, the-20)
amod(good-22, greater-21)
prep_by(mean-18, good-22)

(ROOT
  (S
    (VP (VB explain)
      (SBAR
        (WHADVP (WRB why))
        (S
          (PP (IN on)
            (NP
              (NP (PRP$ your) (NN introduction))
              (PP (TO to)
                (NP (DT the) (NN debate)))))
          (NP (PRP you))
          (VP (VBP have)
            (S
              (NP (PRP us))
              (VP (VB imagine)
                (SBAR (IN that)
                  (S
                    (NP (PRP we))
                    (VP (VBP are)
                      (VP (VBG creating)
                        (NP (DT a) (NN religion))))))))))))
    (. .)))

root(ROOT-0, explain-1)
advmod(have-10, why-2)
poss(introduction-5, your-4)
prep_on(have-10, introduction-5)
det(debate-8, the-7)
prep_to(introduction-5, debate-8)
nsubj(have-10, you-9)
advcl(explain-1, have-10)
nsubj(imagine-12, us-11)
ccomp(have-10, imagine-12)
complm(creating-16, that-13)
nsubj(creating-16, we-14)
aux(creating-16, are-15)
ccomp(imagine-12, creating-16)
det(religion-18, a-17)
dobj(creating-16, religion-18)

(ROOT
  (S
    (VP (VB Read)
      (NP (PRP it)))
    (. .)))

root(ROOT-0, Read-1)
dobj(Read-1, it-2)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD said)
      (NP (NN look))
      (PP (IN at)
        (NP (PRP it)))
      (PP (IN from)
        (NP
          (NP (DT this) (NN point))
          (PP (IN of)
            (NP (NN view))))))
    (. .)))

nsubj(said-2, It-1)
root(ROOT-0, said-2)
dobj(said-2, look-3)
prep_at(said-2, it-5)
det(point-8, this-7)
prep_from(said-2, point-8)
prep_of(point-8, view-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have) (RB n't)
      (VP (VBN brought)
        (NP
          (NP (NN religion))
          (, ,)
          (NP (PRP$ its) (NNS values))
          (, ,)
          (NP (PRP$ its) (NN history))
          (CC or)
          (NP (PRP$ its) (NNS rules)
            (CC or)
            (NNS stories)))))
    (. .)))

nsubj(brought-4, I-1)
aux(brought-4, have-2)
neg(brought-4, n't-3)
root(ROOT-0, brought-4)
dobj(brought-4, religion-5)
poss(values-8, its-7)
dobj(brought-4, values-8)
conj_or(religion-5, values-8)
poss(history-11, its-10)
dobj(brought-4, history-11)
conj_or(religion-5, history-11)
poss(rules-14, its-13)
dobj(brought-4, rules-14)
conj_or(religion-5, rules-14)
conj_or(religion-5, stories-16)
conj_or(rules-14, stories-16)

(ROOT
  (NP
    (NP (RB Just) (CD one))
    (PP (IN of)
      (NP
        (NP (NNP God) (POS 's))
        (NNS roles)))
    (. .)))

advmod(one-2, Just-1)
root(ROOT-0, one-2)
poss(roles-6, God-4)
prep_of(one-2, roles-6)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN benefit))
    (SQ (MD can)
      (NP (EX there))
      (VP (VB be)
        (PP (TO to)
          (NP (NN society)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NNS people))
            (VP (VBP are)
              (VP (VBG creating)
                (NP (PRP$ their) (JJ own) (NNS guidelines))
                (S
                  (VP (TO to)
                    (VP (VB follow)
                      (PP (VBN based)
                        (PP (IN on)
                          (NP
                            (NP (DT a) (JJ subjective) (NN understanding))
                            (PP (IN of)
                              (NP (DT a) (NNP God)))))))))))))))
    (. ?)))

det(benefit-2, What-1)
dobj(be-5, benefit-2)
aux(be-5, can-3)
expl(be-5, there-4)
root(ROOT-0, be-5)
prep_to(be-5, society-7)
advmod(creating-11, where-8)
nsubj(creating-11, people-9)
aux(creating-11, are-10)
advcl(be-5, creating-11)
poss(guidelines-14, their-12)
amod(guidelines-14, own-13)
dobj(creating-11, guidelines-14)
aux(follow-16, to-15)
xcomp(creating-11, follow-16)
prepc_based_on(follow-16, on-18)
det(understanding-21, a-19)
amod(understanding-21, subjective-20)
pobj(follow-16, understanding-21)
det(God-24, a-23)
prep_of(understanding-21, God-24)

(ROOT
  (FRAG (: :)
    (VP (VBZ Dperhaps)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD can)
            (VP (VB clarify) (, ,)
              (SBAR
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (DT the) (JJR greater) (NN good))
                    (VP (VBZ is))))
                (CC and)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP we))
                    (VP (MD can)
                      (VP (VB identify)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP it))
                            (VP (VBZ is))))))))))))))
    (. .)))

root(ROOT-0, Dperhaps-2)
nsubj(clarify-5, you-3)
aux(clarify-5, can-4)
ccomp(Dperhaps-2, clarify-5)
dobj(is-11, what-7)
det(good-10, the-8)
amod(good-10, greater-9)
nsubj(is-11, good-10)
dep(clarify-5, is-11)
advmod(identify-16, how-13)
nsubj(identify-16, we-14)
aux(identify-16, can-15)
dep(clarify-5, identify-16)
conj_and(is-11, identify-16)
dobj(is-19, what-17)
nsubj(is-19, it-18)
ccomp(identify-16, is-19)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (VP (VBD put)
      (NP (PRP it))
      (PP (IN like)
        (NP (DT this))))
    (. .)))

nsubj(put-3, Let-1)
possessive(Let-1, 's-2)
root(ROOT-0, put-3)
dobj(put-3, it-4)
prep_like(put-3, this-6)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP me))
        (VP (VB name)
          (S
            (NP (PRP you))
            (ADJP (CD 5) (JJ prophets))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(name-3, me-2)
ccomp(Let-1, name-3)
nsubj(prophets-6, you-4)
number(prophets-6, 5-5)
xcomp(name-3, prophets-6)

(ROOT
  (NP
    (NP (NNP Krishna))
    (, ,)
    (NP (NNP Moses) (, ,) (NNP Buddha) (, ,) (NNP Jesus) (, ,) (NNP Muhammed))
    (. .)))

root(ROOT-0, Krishna-1)
nn(Muhammed-9, Moses-3)
appos(Muhammed-9, Buddha-5)
appos(Muhammed-9, Jesus-7)
appos(Krishna-1, Muhammed-9)

(ROOT
  (S
    (NP (DT These) (NNS people))
    (VP
      (VP (VBP are) (RB not)
        (VP (VBG creating)
          (NP (PRP$ their) (JJ own) (NNS guidelines))))
      (, ,)
      (CC but)
      (VP (VBP are)
        (VP (VBG taking)
          (NP
            (NP (NNP God) (POS 's))
            (NN Word)))))
    (. .)))

det(people-2, These-1)
nsubj(creating-5, people-2)
nsubj(taking-12, people-2)
aux(creating-5, are-3)
neg(creating-5, not-4)
root(ROOT-0, creating-5)
poss(guidelines-8, their-6)
amod(guidelines-8, own-7)
dobj(creating-5, guidelines-8)
aux(taking-12, are-11)
conj_but(creating-5, taking-12)
poss(Word-15, God-13)
dobj(taking-12, Word-15)

(ROOT
  (FRAG (RB Not)
    (NP (PRP$ their) (NN understanding))
    (, ,)
    (PP (CC but)
      (NP
        (NP (NN word))
        (PP (IN for)
          (NP (NN word)))))
    (, ,)
    (NP (NNP God) (NNP 's) (NNPS Words))
    (. .)))

root(ROOT-0, Not-1)
poss(understanding-3, their-2)
dep(Not-1, understanding-3)
dep(Not-1, but-5)
dep(but-5, word-6)
prep_for(word-6, word-8)
nn(Words-12, God-10)
nn(Words-12, 's-11)
dep(Not-1, Words-12)

(ROOT
  (S
    (PP (IN Over)
      (NP
        (NP (NN time))
        (ADVP (RB however))))
    (NP
      (NP (NNP Jesus) (POS 's))
      (NNS words))
    (VP (VBP have)
      (VP (VBN been)
        (ADJP (JJ distorted)
          (PRN (-LRB- -LRB-)
            (PP (IN as)
              (NP (DT an) (NN example)))
            (-RRB- -RRB-))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is) (RB not)
                (NP
                  (NP
                    (NP (NNP God)
                      (CC or)
                      (NNP Jesus) (POS 's))
                    (NN fault))
                  (PP (CC but)
                    (NP
                      (NP (DT those))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBP have)
                            (VP (VBN distorted)
                              (NP (PRP$ their) (NN word)))))))))))))))
    (. .)))

prep_over(distorted-9, time-2)
advmod(time-2, however-3)
poss(words-6, Jesus-4)
nsubj(distorted-9, words-6)
aux(distorted-9, have-7)
cop(distorted-9, been-8)
root(ROOT-0, distorted-9)
dep(distorted-9, as-11)
det(example-13, an-12)
pobj(as-11, example-13)
nsubj(fault-22, which-15)
cop(fault-22, is-16)
neg(fault-22, not-17)
poss(fault-22, God-18)
conj_or(God-18, Jesus-20)
poss(fault-22, Jesus-20)
dep(distorted-9, fault-22)
prep(fault-22, but-23)
dep(but-23, those-24)
nsubj(distorted-27, those-24)
aux(distorted-27, have-26)
rcmod(those-24, distorted-27)
poss(word-29, their-28)
dobj(distorted-27, word-29)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (NP (DT the) (JJ true) (NNS prophets)))
    (. .)))

nsubj(prophets-5, They-1)
cop(prophets-5, are-2)
det(prophets-5, the-3)
amod(prophets-5, true-4)
root(ROOT-0, prophets-5)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP (JJ several) (NNS others))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD would) (RB n't)
        (VP (VB have)
          (VP (VBN heard)
            (PP (IN of)
              (NP (PRP them)))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(others-4, several-3)
nsubj(are-2, others-4)
nsubj(heard-11, you-7)
aux(heard-11, would-8)
neg(heard-11, n't-9)
aux(heard-11, have-10)
conj_but(are-2, heard-11)
prep_of(heard-11, them-13)

(ROOT
  (S
    (S
      (NP (NNP Elron) (NNP Hubbard))
      (VP (VBZ is) (RB not)
        (NP (DT a) (NN prophet))))
    (, ,) (IN so)
    (S
      (NP (PRP$ his) (NNS followers))
      (ADVP (RB DO))
      (VP
        (VP (VBP believe)
          (PP (IN in)
            (NP (NN crap))))
        (CC and)
        (VP (VBP are)
          (VP (VBG NOT)
            (NP (DT a) (NN benefit))
            (PP (TO to)
              (NP (NN society)))))))
    (. .)))

nn(Hubbard-2, Elron-1)
nsubj(prophet-6, Hubbard-2)
cop(prophet-6, is-3)
neg(prophet-6, not-4)
det(prophet-6, a-5)
root(ROOT-0, prophet-6)
dep(prophet-6, so-8)
poss(followers-10, his-9)
nsubj(believe-12, followers-10)
nsubj(NOT-17, followers-10)
advmod(believe-12, DO-11)
ccomp(prophet-6, believe-12)
prep_in(believe-12, crap-14)
aux(NOT-17, are-16)
ccomp(prophet-6, NOT-17)
conj_and(believe-12, NOT-17)
det(benefit-19, a-18)
dobj(NOT-17, benefit-19)
prep_to(NOT-17, society-21)

(ROOT
  (S (CC But)
    (ADVP (RB realistically))
    (, ,)
    (S
      (NP (DT all))
      (VP (VBZ religions) (RB all)
        (ADVP (IN in) (DT all))
        (VP (VB follow)
          (NP (JJ similar) (NNS rules)))))
    (CC and)
    (S
      (NP (DT these) (JJ similar) (NNS rules))
      (VP (VBP have)
        (S
          (NP (NN nothing))
          (ADJP (JJ stupid)))))
    (. .)))

advmod(religions-5, realistically-2)
nsubj(religions-5, all-4)
root(ROOT-0, religions-5)
advmod(religions-5, all-6)
advmod(religions-5, in-7)
dep(in-7, all-8)
dep(religions-5, follow-9)
amod(rules-11, similar-10)
dobj(follow-9, rules-11)
det(rules-15, these-13)
amod(rules-15, similar-14)
nsubj(have-16, rules-15)
conj_and(religions-5, have-16)
nsubj(stupid-18, nothing-17)
xcomp(have-16, stupid-18)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (JJ systematized) (NNS rules))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP mention)))))
      (, ,)
      (VP (VBN come)
        (PP (IN from)
          (NP (NN religion))))
      (, ,))
    (VP (VBP NOT)
      (NP
        (NP (DT a) (NN belief))
        (PP (IN in)
          (NP (NN god)))))
    (. .)))

det(rules-3, The-1)
amod(rules-3, systematized-2)
dobj(mention-6, rules-3)
nsubj(NOT-12, rules-3)
complm(mention-6, that-4)
nsubj(mention-6, you-5)
dep(rules-3, mention-6)
partmod(rules-3, come-8)
prep_from(come-8, religion-10)
root(ROOT-0, NOT-12)
det(belief-14, a-13)
dobj(NOT-12, belief-14)
prep_in(belief-14, god-16)

(ROOT
  (NP
    (NP (DT A) (NN mother))
    (VP (VBG taking)
      (NP (PRP$ her) (NN kid))
      (PP (IN for)
        (NP (DT a) (NN walk))))
    (. .)))

det(mother-2, A-1)
root(ROOT-0, mother-2)
partmod(mother-2, taking-3)
poss(kid-5, her-4)
dobj(taking-3, kid-5)
det(walk-8, a-7)
prep_for(taking-3, walk-8)

(ROOT
  (S
    (VP (VB Ok)
      (NP (JJ good) (NN point)))
    (. .)))

root(ROOT-0, Ok-1)
amod(point-3, good-2)
dobj(Ok-1, point-3)

(ROOT
  (S
    (VP (VB Especially)
      (PP (IN with)
        (NP (DT the) (JJ Agnostic) (NN part))))
    (. .)))

root(ROOT-0, Especially-1)
det(part-5, the-3)
amod(part-5, Agnostic-4)
prep_with(Especially-1, part-5)

(ROOT
  (S
    (ADVP (RB However))
    (NP (RB earlier) (PRP I))
    (VP (VBP 've)
      (VP (VBN explained)
        (ADVP
          (ADVP (RBR earlier))
          (SBAR (IN that)
            (S
              (NP (DT the) (JJ systematized) (NNS rules))
              (VP (VBP come)
                (PP (IN from)
                  (NP (NNP God)))))))))
    (. .)))

advmod(explained-5, However-1)
advmod(I-3, earlier-2)
nsubj(explained-5, I-3)
aux(explained-5, 've-4)
root(ROOT-0, explained-5)
advmod(explained-5, earlier-6)
dep(come-11, that-7)
det(rules-10, the-8)
amod(rules-10, systematized-9)
nsubj(come-11, rules-10)
ccomp(earlier-6, come-11)
prep_from(come-11, God-13)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP 're) (RB not)
      (ADVP (RB here))
      (S
        (VP (TO to)
          (VP (VB talk)
            (PP (IN about)
              (NP
                (NP (DT the) (NNS differences))
                (PP (IN in)
                  (NP (DT those) (NNS rules)))))))))
    (. .)))

cc('re-3, But-1)
nsubj('re-3, we-2)
xsubj(talk-7, we-2)
root(ROOT-0, 're-3)
neg('re-3, not-4)
advmod('re-3, here-5)
aux(talk-7, to-6)
xcomp('re-3, talk-7)
det(differences-10, the-9)
prep_about(talk-7, differences-10)
det(rules-13, those-12)
prep_in(differences-10, rules-13)

(ROOT
  (FRAG
    (ADVP (RB Just))
    (SBAR (IN that)
      (S
        (NP (NNP God))
        (VP (VBZ HAS)
          (VP (VBN given)
            (NP (NNS Rules))
            (PP (TO to)
              (NP (PRP us)))))))
    (. .)))

root(ROOT-0, Just-1)
dep(given-5, that-2)
nsubj(given-5, God-3)
aux(given-5, HAS-4)
dep(Just-1, given-5)
dobj(given-5, Rules-6)
prep_to(given-5, us-8)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (ADVP (RB not))
    (VP (VBP argue)
      (FRAG (IN about)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP one))
            (VP (VBZ is)
              (ADJP (JJ correct)))))
        (. .)))
    (. .)))

nsubj(argue-4, Let-1)
possessive(Let-1, 's-2)
neg(argue-4, not-3)
root(ROOT-0, argue-4)
dep(argue-4, about-5)
dobj(correct-9, which-6)
nsubj(correct-9, one-7)
cop(correct-9, is-8)
dep(about-5, correct-9)

(ROOT
  (S
    (NP (DT that))
    (VP (VBZ is)
      (PP (IN for)
        (NP (DT a) (JJ different) (NN debate))))
    (. .)))

nsubj(is-2, that-1)
root(ROOT-0, is-2)
det(debate-6, a-4)
amod(debate-6, different-5)
prep_for(is-2, debate-6)

(ROOT
  (S
    (NP (DT These) (NNS rules))
    (VP (VBP are)
      (PP (IN for)
        (NP (PRP us)))
      (S
        (VP (TO to)
          (VP (VB follow)
            (PP (IN for)
              (NP
                (NP (DT the) (NN good))
                (PP (IN of)
                  (NP (NN mankind)))))))))
    (. .)))

det(rules-2, These-1)
nsubj(are-3, rules-2)
xsubj(follow-7, rules-2)
root(ROOT-0, are-3)
prep_for(are-3, us-5)
aux(follow-7, to-6)
xcomp(are-3, follow-7)
det(good-10, the-9)
prep_for(follow-7, good-10)
prep_of(good-10, mankind-12)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB know)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (PP (IN for)
                (NP
                  (NP (DT the) (NN good))
                  (PP (IN of)
                    (NP (NN mankind))))))))))
    (. ?)))

advmod(know-4, How-1)
aux(know-4, do-2)
nsubj(know-4, we-3)
root(ROOT-0, know-4)
nsubj('s-6, it-5)
ccomp(know-4, 's-6)
det(good-9, the-8)
prep_for('s-6, good-9)
prep_of(good-9, mankind-11)

(ROOT
  (S
    (NP (NNP Because) (NNP God))
    (VP (VBD gave)
      (NP (PRP it))
      (PP (TO to)
        (NP (PRP us))))
    (. .)))

nn(God-2, Because-1)
nsubj(gave-3, God-2)
root(ROOT-0, gave-3)
dobj(gave-3, it-4)
prep_to(gave-3, us-6)

(ROOT
  (S
    (NP (DT The) (NN kid))
    (VP
      (VP (VBZ keeps)
        (S
          (VP (VBG falling)
            (PRT (RP over)))))
      (CC and)
      (VP (VBZ cries)
        (SBAR (IN until)
          (S
            (NP (DT the) (NN mother))
            (VP
              (VP (VBZ picks)
                (NP (DT the) (NN kid))
                (PRT (RP up)))
              (CC and)
              (VP (VBZ lets)
                (SBAR
                  (S
                    (NP (PRP her))
                    (VP (VBP continue)
                      (S
                        (VP (TO to)
                          (VP (VB walk)))))))))))))
    (. .)))

det(kid-2, The-1)
nsubj(keeps-3, kid-2)
nsubj(cries-7, kid-2)
root(ROOT-0, keeps-3)
xcomp(keeps-3, falling-4)
prt(falling-4, over-5)
conj_and(keeps-3, cries-7)
mark(picks-11, until-8)
det(mother-10, the-9)
nsubj(picks-11, mother-10)
nsubj(lets-16, mother-10)
advcl(cries-7, picks-11)
det(kid-13, the-12)
dobj(picks-11, kid-13)
prt(picks-11, up-14)
advcl(cries-7, lets-16)
conj_and(picks-11, lets-16)
nsubj(continue-18, her-17)
xsubj(walk-20, her-17)
ccomp(lets-16, continue-18)
aux(walk-20, to-19)
xcomp(continue-18, walk-20)

(ROOT
  (S
    (NP
      (NP (NNP God))
      (, ,)
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ is) (RB all)
            (VP (VBG knowing)))))
      (, ,))
    (VP (RB all)
      (NP (JJ powerful) (NN etc.)))
    (. .)))

nsubj(knowing-6, God-1)
nsubj(etc.-10, God-1)
aux(knowing-6, is-4)
advmod(knowing-6, all-5)
rcmod(God-1, knowing-6)
advmod(etc.-10, all-8)
amod(etc.-10, powerful-9)
root(ROOT-0, etc.-10)

(ROOT
  (S
    (S
      (NP (NNP THAT))
      (VP (VBZ is)
        (SBAR
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (PRP we))
              (VP (VBP know)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (ADJP (JJ right))))))))
          (CC and)
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (VBD followed)
                (NP (PRP them))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD would)
      (VP (VB be)
        (VP (VBG living)
          (PP (IN in)
            (NP (NN paradise))))))
    (. .)))

nsubj(is-2, THAT-1)
ccomp(living-18, is-2)
advmod(know-5, why-3)
nsubj(know-5, we-4)
dep(is-2, know-5)
nsubj(right-8, it-6)
cop(right-8, is-7)
ccomp(know-5, right-8)
mark(followed-12, if-10)
nsubj(followed-12, we-11)
dep(is-2, followed-12)
conj_and(know-5, followed-12)
dobj(followed-12, them-13)
nsubj(living-18, we-15)
aux(living-18, would-16)
aux(living-18, be-17)
root(ROOT-0, living-18)
prep_in(living-18, paradise-20)

(ROOT
  (S
    (NP (NNP IMO) (NNS agnostics))
    (VP (VBP are)
      (ADJP (RB just) (VBN confused)))
    (. .)))

nn(agnostics-2, IMO-1)
nsubjpass(confused-5, agnostics-2)
auxpass(confused-5, are-3)
advmod(confused-5, just-4)
root(ROOT-0, confused-5)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are) (RB n't)
      (ADJP (JJ sure)
        (PP (IN on)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (NNP God))
              (VP (VBZ wants)
                (NP (FW etc.))))))))
    (. .)))

nsubj(sure-4, They-1)
cop(sure-4, are-2)
neg(sure-4, n't-3)
root(ROOT-0, sure-4)
dobj(wants-8, what-6)
nsubj(wants-8, God-7)
prepc_on(sure-4, wants-8)
dobj(wants-8, etc.-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB come)
        (PP (TO to)
          (NP (DT this)))
        (ADVP (RB later))))
    (. .)))

nsubj(come-3, I-1)
aux(come-3, 'll-2)
root(ROOT-0, come-3)
prep_to(come-3, this-5)
advmod(come-3, later-6)

(ROOT
  (S (-LRB- -LRB-)
    (VP (VB Remind)
      (S
        (NP (PRP me))
        (ADJP (JJ -RRB-))))
    (: ...)))

nsubj(-RRB--4, me-3)

(ROOT
  (S
    (NP (NNP May))
    (NP (PRP I))
    (VP (VBP ask)
      (NP (PRP you))
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP you))
          (VP (VBP believe)
            (SBAR (IN that)
              (S
                (NP (NNS people))
                (VP (VBP are) (RB not)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB figure)
                          (NP (NNS things))
                          (PRT (RP out))
                          (PP (IN on)
                            (NP (PRP$ their) (JJ own))))))))))))))
    (. ?)))

tmod(ask-3, May-1)
nsubj(ask-3, I-2)
root(ROOT-0, ask-3)
dobj(ask-3, you-4)
advmod(believe-7, why-5)
nsubj(believe-7, you-6)
advcl(ask-3, believe-7)
complm(able-12, that-8)
nsubj(able-12, people-9)
cop(able-12, are-10)
neg(able-12, not-11)
ccomp(believe-7, able-12)
aux(figure-14, to-13)
xcomp(able-12, figure-14)
dobj(figure-14, things-15)
prt(figure-14, out-16)
poss(own-19, their-18)
prep_on(figure-14, own-19)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNS people))
        (VP (VBD were)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB figure)
                  (NP (NNS things))
                  (PRT (RP out))
                  (PP (IN on)
                    (NP (PRP$ their) (JJ own))))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD would) (RB n't)
      (VP (VB have)
        (NP (DT any) (NNS rules) (NN etc.))))
    (. .)))

mark(able-4, If-1)
nsubj(able-4, people-2)
cop(able-4, were-3)
advcl(have-16, able-4)
aux(figure-6, to-5)
xcomp(able-4, figure-6)
dobj(figure-6, things-7)
prt(figure-6, out-8)
poss(own-11, their-10)
prep_on(figure-6, own-11)
nsubj(have-16, we-13)
aux(have-16, would-14)
neg(have-16, n't-15)
root(ROOT-0, have-16)
det(etc.-19, any-17)
nn(etc.-19, rules-18)
dobj(have-16, etc.-19)

(ROOT
  (S
    (NP
      (NP (DT The) (NN reason))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP have)
            (NP (DT the) (NN law))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB guide)
            (NP (NNS people))))))
    (. .)))

det(reason-2, The-1)
nsubj(is-7, reason-2)
xsubj(guide-9, reason-2)
nsubj(have-4, we-3)
rcmod(reason-2, have-4)
det(law-6, the-5)
dobj(have-4, law-6)
root(ROOT-0, is-7)
aux(guide-9, to-8)
xcomp(is-7, guide-9)
dobj(guide-9, people-10)

(ROOT
  (NP (DT The) (NN MAJORITY) (. .)))

det(MAJORITY-2, The-1)
root(ROOT-0, MAJORITY-2)

(ROOT
  (SBARQ
    (WHNP
      (WHADJP (WRB How) (JJ many))
      (NNS people))
    (SQ
      (VP
        (ADVP (IN out) (RB there))
        (VBP CAN)
        (S
          (VP
            (VP
              (ADVP (RB actually))
              (VB run)
              (NP (DT the) (NN country)))
            (, ,)
            (VP (VB make)
              (NP (PDT all) (DT the) (JJ perfect) (NNS laws)))
            (NP (FW etc))))))
    (. ?)))

advmod(many-2, How-1)
amod(people-3, many-2)
nsubj(CAN-6, people-3)
advmod(CAN-6, out-4)
advmod(out-4, there-5)
root(ROOT-0, CAN-6)
advmod(run-8, actually-7)
ccomp(CAN-6, run-8)
det(country-10, the-9)
dobj(run-8, country-10)
dep(run-8, make-12)
predet(laws-16, all-13)
det(laws-16, the-14)
amod(laws-16, perfect-15)
dobj(make-12, laws-16)
dobj(run-8, etc-17)

(ROOT
  (S (RB Only)
    (NP
      (NP (NNP God) (POS 's))
      (NN word))
    (VP (VBZ is)
      (ADJP (JJ right))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (NNP God))
          (VP (VBZ is)
            (ADJP (JJ perfect))
            (SBAR (RB only)
              (S
                (NP (PRP He))
                (VP (MD can)
                  (VP (VB make)
                    (NP (DT the) (JJ correct) (NN decision))))))))))
    (. .)))

advmod(right-6, Only-1)
poss(word-4, God-2)
nsubj(right-6, word-4)
cop(right-6, is-5)
root(ROOT-0, right-6)
mark(perfect-11, because-8)
nsubj(perfect-11, God-9)
cop(perfect-11, is-10)
advcl(right-6, perfect-11)
advmod(make-15, only-12)
nsubj(make-15, He-13)
aux(make-15, can-14)
ccomp(perfect-11, make-15)
det(decision-18, the-16)
amod(decision-18, correct-17)
dobj(make-15, decision-18)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP say)
        (SBAR (IN that)
          (S
            (NP (NN religion))
            (VP
              (VP (MD should) (RB not)
                (VP (VB take)
                  (NP (DT the) (NN blame))
                  (PP (IN for)
                    (NP
                      (NP (DT a) (NN lot))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NNS ills))
                          (PP (IN in)
                            (NP (NN society)))))))))
              (, ,)
              (CC but)
              (VP (VBP look)
                (SBAR
                  (WHADVP (WRB how) (RB far))
                  (S
                    (NP (NN religion))
                    (VP (VBZ has)
                      (VP (VBN come)))))))))))
    (CC and)
    (S
      (ADVP (RB yet))
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (VP (VB seem)
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP are)
                (VP (VBG learning)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (VP (TO to)
                        (VP (VB get)
                          (PRT (RP along)))))))))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
complm(take-7, that-3)
nsubj(take-7, religion-4)
nsubj(look-20, religion-4)
aux(take-7, should-5)
neg(take-7, not-6)
ccomp(say-2, take-7)
det(blame-9, the-8)
dobj(take-7, blame-9)
det(lot-12, a-11)
prep_for(take-7, lot-12)
det(ills-15, the-14)
prep_of(lot-12, ills-15)
prep_in(ills-15, society-17)
ccomp(say-2, look-20)
conj_but(take-7, look-20)
advmod(far-22, how-21)
advmod(come-25, far-22)
nsubj(come-25, religion-23)
aux(come-25, has-24)
ccomp(look-20, come-25)
advmod(seem-31, yet-27)
nsubj(seem-31, it-28)
aux(seem-31, does-29)
neg(seem-31, n't-30)
conj_and(say-2, seem-31)
nsubj(learning-34, we-32)
aux(learning-34, are-33)
ccomp(seem-31, learning-34)
advmod(get-37, how-35)
aux(get-37, to-36)
ccomp(learning-34, get-37)
xcomp(learning-34, get-37)
prt(get-37, along-38)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP it))
    (VP (VBZ is)
      (NP (NN time)
        (S
          (VP (TO to)
            (VP (VB let)
              (S
                (NP (NNS people))
                (VP
                  (VP (VB figure)
                    (NP (NNS things))
                    (PRT (RP out)))
                  (, ,)
                  (CC and)
                  (VP (VB see)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ happens)
                          (PP (RB instead) (IN of)
                            (S
                              (VP (VBG getting)
                                (ADJP (JJ stuck)
                                  (PP (IN in)
                                    (NP (DT the) (NN idea))))
                                (SBAR (IN that)
                                  (S
                                    (NP (NNS people))
                                    (VP (VBP need)
                                      (NP (DT some) (JJ mythical) (NN being)
                                        (S
                                          (VP (TO to)
                                            (VP (VB tell)
                                              (NP (PRP them))
                                              (SBAR
                                                (WHNP (WP what))
                                                (S
                                                  (VP (TO to)
                                                    (VP (VB do))))))))))))))))))))))))))
    (. .)))

advmod(time-4, Maybe-1)
nsubj(time-4, it-2)
cop(time-4, is-3)
root(ROOT-0, time-4)
aux(let-6, to-5)
infmod(time-4, let-6)
nsubj(figure-8, people-7)
nsubj(see-13, people-7)
ccomp(let-6, figure-8)
dobj(figure-8, things-9)
prt(figure-8, out-10)
ccomp(let-6, see-13)
conj_and(figure-8, see-13)
nsubj(happens-15, what-14)
ccomp(see-13, happens-15)
dep(stuck-19, getting-18)
prepc_instead_of(happens-15, stuck-19)
det(idea-22, the-21)
prep_in(stuck-19, idea-22)
complm(need-25, that-23)
nsubj(need-25, people-24)
ccomp(stuck-19, need-25)
det(being-28, some-26)
amod(being-28, mythical-27)
dobj(need-25, being-28)
aux(tell-30, to-29)
infmod(being-28, tell-30)
dobj(tell-30, them-31)
nsubj(do-34, what-32)
aux(do-34, to-33)
xcomp(tell-30, do-34)

(ROOT
  (S
    (S
      (NP (DT The) (NN mother)
        (CC and)
        (NN child))
      (VP
        (VP (VBP are) (DT both)
          (ADJP (JJ happy)))
        (CC and)
        (VP (VBP everytime)
          (SBAR
            (S
              (NP (DT the) (NN child))
              (VP (VBZ falls)))))))
    (, ,)
    (NP (DT the) (NN mother))
    (VP (VBZ picks)
      (NP (DT the) (NN child))
      (PRT (RP up)))
    (. .)))

det(mother-2, The-1)
nsubj(happy-7, mother-2)
nsubj(everytime-9, mother-2)
conj_and(mother-2, child-4)
nsubj(happy-7, child-4)
cop(happy-7, are-5)
dep(happy-7, both-6)
ccomp(picks-16, happy-7)
conj_and(happy-7, everytime-9)
ccomp(picks-16, everytime-9)
det(child-11, the-10)
nsubj(falls-12, child-11)
ccomp(everytime-9, falls-12)
det(mother-15, the-14)
nsubj(picks-16, mother-15)
root(ROOT-0, picks-16)
det(child-18, the-17)
dobj(picks-16, child-18)
prt(picks-16, up-19)

(ROOT
  (S
    (ADVP (RB Again))
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (NP
        (NP (NN religion))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (PP (IN in)
                (NP (DT the) (JJ wrong))))))))
    (. .)))

advmod(religion-5, Again-1)
nsubj(religion-5, it-2)
cop(religion-5, is-3)
neg(religion-5, not-4)
root(ROOT-0, religion-5)
nsubj(is-7, religion-5)
rcmod(religion-5, is-7)
det(wrong-10, the-9)
prep_in(is-7, wrong-10)

(ROOT
  (S
    (S
      (NP (NNP Religion))
      (VP (VBZ does)
        (VP (VB say)
          (S (RB not)
            (VP (TO to)
              (VP (VB kill)))))))
    (, ,)
    (NP
      (NP (NN drink) (NN etc.))
      (ADVP (RB yet))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ is)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP 're)
                  (VP (VBG saying)))))))))
    (VP (VBZ is)
      (ADJP (JJ wrong)))
    (. .)))

nsubj(say-3, Religion-1)
xsubj(kill-6, Religion-1)
aux(say-3, does-2)
ccomp(wrong-18, say-3)
neg(kill-6, not-4)
aux(kill-6, to-5)
xcomp(say-3, kill-6)
nn(etc.-9, drink-8)
nsubj(wrong-18, etc.-9)
advmod(etc.-9, yet-10)
nsubj(is-12, that-11)
rcmod(etc.-9, is-12)
dobj(saying-16, what-13)
nsubj(saying-16, you-14)
aux(saying-16, 're-15)
ccomp(is-12, saying-16)
cop(wrong-18, is-17)
root(ROOT-0, wrong-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (NN religion))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD caused)
              (NP (NNS crusades)))))))
    (. .)))

nsubj(religion-4, It-1)
cop(religion-4, 's-2)
neg(religion-4, not-3)
root(ROOT-0, religion-4)
nsubj(caused-6, religion-4)
rcmod(religion-4, caused-6)
dobj(caused-6, crusades-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (NN religion))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD was)
              (VP (VBN USED)))))))
    (. .)))

nsubj(religion-3, It-1)
cop(religion-3, was-2)
root(ROOT-0, religion-3)
nsubjpass(USED-6, religion-3)
auxpass(USED-6, was-5)
rcmod(religion-3, USED-6)

(ROOT
  (S
    (NP (JJS Most) (NNS wars))
    (ADVP (RB etc.))
    (VP
      (VP (VBP are) (RB n't)
        (VP (VBN fought)
          (PP (IN for)
            (PP (IN over)
              (NP (NN religion))))))
      (, ,)
      (CC but)
      (VP
        (ADVP (RB merely))
        (VBP use)
        (NP
          (NP (NN religion))
          (PP (IN as)
            (NP (DT an) (NN excuse)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (NP
                      (NP (NNS people))
                      (VP (VBN drawn)
                        (PP (IN into)
                          (NP (PRP it)))))))))))))
    (. .)))

amod(wars-2, Most-1)
nsubjpass(fought-6, wars-2)
nsubj(use-13, wars-2)
advmod(fought-6, etc.-3)
auxpass(fought-6, are-4)
neg(fought-6, n't-5)
root(ROOT-0, fought-6)
prep(fought-6, for-7)
pcomp(for-7, over-8)
prep_over(for-7, religion-9)
advmod(use-13, merely-12)
conj_but(fought-6, use-13)
dobj(use-13, religion-14)
det(excuse-17, an-16)
prep_as(religion-14, excuse-17)
aux(get-19, to-18)
infmod(excuse-17, get-19)
dobj(get-19, people-20)
partmod(people-20, drawn-21)
prep_into(drawn-21, it-23)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP it))
    (VP (VBZ is)
      (NP (NN time)
        (S
          (VP (TO to)
            (VP (VB let)
              (S
                (NP (NNS people))
                (VP
                  (VP (VB figure)
                    (NP (NNS things))
                    (PRT (RP out)))
                  (, ,)
                  (CC and)
                  (VP (VB see)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ happens)
                          (PP (RB instead) (IN of)
                            (S
                              (VP (VBG getting)
                                (ADJP (JJ stuck)
                                  (PP (IN in)
                                    (NP (DT the) (NN idea))))
                                (SBAR (IN that)
                                  (S
                                    (NP (NNS people))
                                    (VP (VBP need)
                                      (NP (DT some) (JJ mythical) (NN being)
                                        (S
                                          (VP (TO to)
                                            (VP (VB tell)
                                              (NP (PRP them))
                                              (SBAR
                                                (WHNP (WP what))
                                                (S
                                                  (VP (TO to)
                                                    (VP (VB do))))))))))))))))))))))))))
    (. .)))

advmod(time-4, Maybe-1)
nsubj(time-4, it-2)
cop(time-4, is-3)
root(ROOT-0, time-4)
aux(let-6, to-5)
infmod(time-4, let-6)
nsubj(figure-8, people-7)
nsubj(see-13, people-7)
ccomp(let-6, figure-8)
dobj(figure-8, things-9)
prt(figure-8, out-10)
ccomp(let-6, see-13)
conj_and(figure-8, see-13)
nsubj(happens-15, what-14)
ccomp(see-13, happens-15)
dep(stuck-19, getting-18)
prepc_instead_of(happens-15, stuck-19)
det(idea-22, the-21)
prep_in(stuck-19, idea-22)
complm(need-25, that-23)
nsubj(need-25, people-24)
ccomp(stuck-19, need-25)
det(being-28, some-26)
amod(being-28, mythical-27)
dobj(need-25, being-28)
aux(tell-30, to-29)
infmod(being-28, tell-30)
dobj(tell-30, them-31)
nsubj(do-34, what-32)
aux(do-34, to-33)
xcomp(tell-30, do-34)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (PRP$ my) (NN problem)))
    (. .)))

nsubj(problem-4, This-1)
cop(problem-4, is-2)
poss(problem-4, my-3)
root(ROOT-0, problem-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN seen)
        (NP
          (NP (DT all))
          (PP (IN around)
            (NP (PRP me)))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ has)
                (VP (VBN happened)
                  (PP (JJ due) (TO to)
                    (NP
                      (NP (DT the) (NN lack))
                      (PP (IN of)
                        (NP (NN religion))))))))))))
    (. .)))

nsubj(seen-3, I-1)
aux(seen-3, have-2)
root(ROOT-0, seen-3)
dobj(seen-3, all-4)
nsubj(happened-9, all-4)
prep_around(all-4, me-6)
aux(happened-9, has-8)
rcmod(all-4, happened-9)
det(lack-13, the-12)
prep_due_to(happened-9, lack-13)
prep_of(lack-13, religion-15)

(ROOT
  (S
    (NP (PRP You))
    (VP
      (VP (VBP tell)
        (S
          (NP (PRP me))
          (NP
            (NP (DT the) (NNS problems))
            (PP (IN in)
              (NP (JJ todays) (NNS societies))))))
      (CC and)
      (ADVP (RB then))
      (VP (VBP tell)
        (SBAR
          (S
            (NP (PRP me))
            (VP (VBZ is)
              (ADJP (RB that) (JJ due))
              (PP
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN lack))
                    (PP (IN of)
                      (NP (NN religion)))))
                (CC or)
                (RB because)
                (PP (IN of)
                  (NP (NN religion)))))))))
    (. .)))

nsubj(tell-2, You-1)
nsubj(tell-11, You-1)
root(ROOT-0, tell-2)
nsubj(problems-5, me-3)
det(problems-5, the-4)
xcomp(tell-2, problems-5)
amod(societies-8, todays-7)
prep_in(problems-5, societies-8)
advmod(tell-2, then-10)
conj_and(tell-2, then-10)
conj_and(tell-2, tell-11)
nsubj(due-15, me-12)
cop(due-15, is-13)
advmod(due-15, that-14)
ccomp(tell-11, due-15)
prep(due-15, to-16)
det(lack-18, the-17)
pobj(to-16, lack-18)
prep_of(lack-18, religion-20)
prep(due-15, because-22)
advmod(to-16, because-22)
conj_or(to-16, because-22)
dep(to-16, of-23)
pobj(of-23, religion-24)

(ROOT
  (NP (NNS Examples) (. ?)))

root(ROOT-0, Examples-1)

(ROOT
  (NP
    (NP (DT A) (NN mother))
    (VP (VBG taking)
      (NP (PRP$ her) (NN kid))
      (PP (IN for)
        (NP (DT a) (NN walk))))
    (. .)))

det(mother-2, A-1)
root(ROOT-0, mother-2)
partmod(mother-2, taking-3)
poss(kid-5, her-4)
dobj(taking-3, kid-5)
det(walk-8, a-7)
prep_for(taking-3, walk-8)

(ROOT
  (NP
    (NP (JJ Underage) (NN sex) (, ,) (NN alcohol) (, ,) (NN tobacco) (, ,) (NNS drugs) (, ,) (NN rape) (, ,) (NN murder) (, ,) (NN violence) (, ,) (NN greed) (, ,) (NN lust) (, ,) (NNS intoxicants) (, ,) (NN envy))
    (NP (FW etc.))
    (. .)))

amod(envy-22, Underage-1)
nn(envy-22, sex-2)
dep(envy-22, alcohol-4)
dep(envy-22, tobacco-6)
dep(envy-22, drugs-8)
dep(envy-22, rape-10)
dep(envy-22, murder-12)
dep(envy-22, violence-14)
dep(envy-22, greed-16)
dep(envy-22, lust-18)
dep(envy-22, intoxicants-20)
root(ROOT-0, envy-22)
dep(envy-22, etc.-23)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (SBAR
          (WHNP (WDT that) (NN religion))
          (S
            (VP (VBZ says)
              (PP (IN about)
                (NP (DT those) (NNS issues))))))))
    (. ?)))

attr(is-2, What-1)
root(ROOT-0, is-2)
nsubj(is-2, it-3)
det(religion-5, it-3)
nsubj(says-6, religion-5)
rcmod(it-3, says-6)
det(issues-9, those-8)
prep_about(says-6, issues-9)

(ROOT
  (S
    (S
      (NP (DT The) (NN kid))
      (VP
        (VP (VBZ keeps)
          (S
            (VP (VBG falling)
              (PRT (RP over)))))
        (CC and)
        (VP (VBZ cries))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NN mother))
      (VP (VBZ does) (RB not)
        (VP (VB pick)
          (NP (DT the) (NN kid))
          (PRT (RP up)))))
    (. .)))

det(kid-2, The-1)
nsubj(keeps-3, kid-2)
nsubj(cries-7, kid-2)
root(ROOT-0, keeps-3)
xcomp(keeps-3, falling-4)
prt(falling-4, over-5)
conj_and(keeps-3, cries-7)
det(mother-11, the-10)
nsubj(pick-14, mother-11)
aux(pick-14, does-12)
neg(pick-14, not-13)
conj_but(keeps-3, pick-14)
det(kid-16, the-15)
dobj(pick-14, kid-16)
prt(pick-14, up-17)

(ROOT
  (S
    (NP
      (NP (PRP$ Its) (NN cold)
        (CC and)
        (NN unloving))
      (, ,)
      (PP (CC but)
        (NP (DT the) (NN mother))))
    (VP (MD will) (RB not)
      (VP (VB help)))
    (. .)))

poss(cold-2, Its-1)
nsubj(help-11, cold-2)
conj_and(cold-2, unloving-4)
nsubj(help-11, unloving-4)
prep(cold-2, but-6)
det(mother-8, the-7)
dep(but-6, mother-8)
aux(help-11, will-9)
neg(help-11, not-10)
root(ROOT-0, help-11)

(ROOT
  (S
    (S
      (NP (RB Everytime))
      (NP (DT the) (NN child))
      (VP (VBZ falls)))
    (, ,)
    (NP (DT the) (NN mother))
    (ADVP (RB only))
    (VP (VBZ watches))
    (. .)))

nsubj(falls-4, Everytime-1)
det(child-3, the-2)
nsubj(falls-4, child-3)
ccomp(watches-9, falls-4)
det(mother-7, the-6)
nsubj(watches-9, mother-7)
advmod(watches-9, only-8)
root(ROOT-0, watches-9)

