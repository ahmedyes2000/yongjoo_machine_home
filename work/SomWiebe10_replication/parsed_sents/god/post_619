(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN been)
          (VP (VBG debating)
            (NP (NNS theists))
            (ADVP
              (ADVP (RB quite) (RB aggressively))
              (PP (IN for)
                (NP (DT a) (JJ few) (NNS days))
                (ADVP (RB now))))
            (PP (IN on)
              (NP (DT this) (NN site)))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB frankly))
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP
          (NP (DT a) (RB little))
          (JJ worn)
          (PP (IN out)
            (PP (IN from)
              (NP (PRP it)))))))
    (. .)))

dep(debating-6, Well-1)
nsubj(debating-6, I-3)
aux(debating-6, 've-4)
aux(debating-6, been-5)
root(ROOT-0, debating-6)
dobj(debating-6, theists-7)
advmod(aggressively-9, quite-8)
advmod(debating-6, aggressively-9)
det(days-13, a-11)
amod(days-13, few-12)
prep_for(aggressively-9, days-13)
advmod(aggressively-9, now-14)
det(site-17, this-16)
prep_on(debating-6, site-17)
advmod(worn-25, frankly-20)
nsubj(worn-25, I-21)
cop(worn-25, 'm-22)
det(little-24, a-23)
npadvmod(worn-25, little-24)
conj_and(debating-6, worn-25)
prep(worn-25, out-26)
pcomp(out-26, from-27)
prep_from(out-26, it-28)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB try)
            (S
              (VP (TO to)
                (VP (VB understand))))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (VP (VBG looking)
                    (PP (IN at)
                      (NP
                        (NP (DT the) (NN world))
                        (PP (IN from)
                          (NP (DT a)
                            (ADJP (RB completely) (JJ different))
                            (NN perspective)))))
                    (SBAR (IN than)
                      (S
                        (NP (PRP I))
                        (VP (VBP am))))))))))))
    (. .)))

nsubj(need-2, You-1)
xsubj(try-4, You-1)
root(ROOT-0, need-2)
aux(try-4, to-3)
xcomp(need-2, try-4)
aux(understand-6, to-5)
xcomp(try-4, understand-6)
complm(looking-11, that-8)
nsubj(looking-11, you-9)
aux(looking-11, are-10)
ccomp(try-4, looking-11)
det(world-14, the-13)
prep_at(looking-11, world-14)
det(perspective-19, a-16)
advmod(different-18, completely-17)
amod(perspective-19, different-18)
prep_from(world-14, perspective-19)
mark(am-22, than-20)
nsubj(am-22, I-21)
advcl(looking-11, am-22)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP
        (VP (VB believe)
          (PP (IN in)
            (NP (JJ intelligent) (NN design)))
          (ADVP (RB either)))
        (, ,)
        (ADJP
          (ADJP (RB so) (RB not) (JJ sure))
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT that))
              (VP (VBZ pertains)
                (PP (TO to)
                  (NP (PRP$ my) (JJ arguement) (NN .3)))))))))
    (. .)))

cc(believe-5, But-1)
nsubj(believe-5, I-2)
aux(believe-5, do-3)
neg(believe-5, n't-4)
root(ROOT-0, believe-5)
amod(design-8, intelligent-7)
prep_in(believe-5, design-8)
advmod(believe-5, either-9)
advmod(sure-13, so-11)
neg(sure-13, not-12)
acomp(believe-5, sure-13)
advmod(pertains-16, how-14)
nsubj(pertains-16, that-15)
dep(sure-13, pertains-16)
poss(.3-20, my-18)
amod(.3-20, arguement-19)
prep_to(pertains-16, .3-20)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (NN justice))
    (VP (VBZ is)
      (VP (VBN established)
        (S
          (VP (VBG using)
            (NP
              (NP (PRP$ our)
                (ADJP (JJ general)
                  (CC and)
                  (JJ natural))
                (NN idea))
              (PP (IN of)
                (NP (NN empathy))))))))
    (. .)))

advmod(established-5, Again-1)
nsubjpass(established-5, justice-3)
auxpass(established-5, is-4)
root(ROOT-0, established-5)
xcomp(established-5, using-6)
poss(idea-11, our-7)
amod(idea-11, general-8)
conj_and(general-8, natural-10)
amod(idea-11, natural-10)
dobj(using-6, idea-11)
prep_of(idea-11, empathy-13)

(ROOT
  (FRAG (CC And)
    (SBAR (IN as)
      (S
        (NP (PRP we))
        (VP (VBP see)
          (SBAR
            (S
              (NP (DT this))
              (VP
                (VP (VBZ is) (RB not)
                  (NP (DT a) (JJ constant)))
                (, ,)
                (CC but)
                (VP (VBZ shifts)
                  (PP (IN with)
                    (NP (NN time)))
                  (SBAR (IN as)
                    (S
                      (NP (PRP we))
                      (VP (VB evolve)))))))))))
    (. .)))

dep(see-4, And-1)
mark(see-4, as-2)
nsubj(see-4, we-3)
root(ROOT-0, see-4)
nsubj(constant-9, this-5)
nsubj(shifts-12, this-5)
cop(constant-9, is-6)
neg(constant-9, not-7)
det(constant-9, a-8)
ccomp(see-4, constant-9)
ccomp(see-4, shifts-12)
conj_but(constant-9, shifts-12)
prep_with(shifts-12, time-14)
mark(evolve-17, as-15)
nsubj(evolve-17, we-16)
advcl(shifts-12, evolve-17)

(ROOT
  (S
    (NP (NNP Empathy))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a)
            (ADJP (RB very) (JJ natural))
            (NN instinct))
          (SBAR
            (S
              (NP (JJS most) (NNS humans))
              (VP (VBP are)
                (VP (VBN born)
                  (PP (IN with)))))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ has)
              (VP (VBN developed)
                (SBAR (IN because)
                  (S
                    (NP (PRP it))
                    (VP (VBZ does)
                      (VP (VB serve)
                        (PP
                          (PP (IN for)
                            (NP
                              (NP (DT the) (JJR greater) (NN good))
                              (PP (IN of)
                                (NP (NNS humans)))))
                          (, ,) (RB even)
                          (PP (IN in)
                            (NP (DT the) (NN circumstance))))
                        (SBAR (IN that)
                          (S
                            (NP (PRP it))
                            (VP (MD should) (RB not)
                              (VP (VB be)
                                (PP (IN in)
                                  (NP
                                    (NP (CD one) (NN instance))
                                    (CC or)
                                    (NP (DT another))))
                                (NP
                                  (NP (DT the) (JJR greater) (NN good))
                                  (PP (IN for)
                                    (NP (PRP oneself))))))))))))))))))
    (. .)))

nsubj(instinct-6, Empathy-1)
cop(instinct-6, is-2)
det(instinct-6, a-3)
advmod(natural-5, very-4)
amod(instinct-6, natural-5)
root(ROOT-0, instinct-6)
prep_with(born-10, instinct-6)
nsubj(developed-15, instinct-6)
amod(humans-8, most-7)
nsubjpass(born-10, humans-8)
auxpass(born-10, are-9)
rcmod(instinct-6, born-10)
aux(developed-15, has-14)
rcmod(instinct-6, developed-15)
mark(serve-19, because-16)
nsubj(serve-19, it-17)
aux(serve-19, does-18)
advcl(developed-15, serve-19)
det(good-23, the-21)
amod(good-23, greater-22)
prep_for(serve-19, good-23)
prep_of(good-23, humans-25)
advmod(serve-19, even-27)
det(circumstance-30, the-29)
prep_in(serve-19, circumstance-30)
complm(good-43, that-31)
nsubj(good-43, it-32)
aux(good-43, should-33)
neg(good-43, not-34)
cop(good-43, be-35)
num(instance-38, one-37)
prep_in(good-43, instance-38)
conj_or(instance-38, another-40)
prep_in(good-43, another-40)
det(good-43, the-41)
amod(good-43, greater-42)
ccomp(serve-19, good-43)
prep_for(good-43, oneself-45)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (PP (IN from)
        (S
          (NP (PRP us)
            (PRN (-LRB- -LRB-)
              (ADVP (RB again))
              (-RRB- -RRB-)))
          (VP (VBG being)
            (NP (DT a) (NN pack) (NN animal))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
nsubj(animal-11, us-4)
dep(us-4, again-6)
cop(animal-11, being-8)
det(animal-11, a-9)
nn(animal-11, pack-10)
prepc_from(is-2, animal-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD 'll)
            (VP (VB find)
              (SBAR (IN that)
                (S
                  (SBAR (IN if)
                    (S
                      (NP (PRP you))
                      (VP (VB take)
                        (PRT (RP away))
                        (NP (PRP$ our) (JJ big) (NNS brains)))))
                  (, ,)
                  (NP (PRP we))
                  (ADVP (RB really))
                  (VP (VBP are)
                    (NP
                      (NP (DT a)
                        (ADJP (JJ pathetic)
                          (CC and)
                          (NN week))
                        (NN creature))
                      (PP (VBN compared)
                        (PP (TO to)
                          (NP (JJS most) (NNS mamals)))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(find-5, you-3)
aux(find-5, 'll-4)
ccomp(think-2, find-5)
complm(creature-22, that-6)
mark(take-9, if-7)
nsubj(take-9, you-8)
advcl(creature-22, take-9)
prt(take-9, away-10)
poss(brains-13, our-11)
amod(brains-13, big-12)
dobj(take-9, brains-13)
nsubj(creature-22, we-15)
advmod(creature-22, really-16)
cop(creature-22, are-17)
det(creature-22, a-18)
amod(creature-22, pathetic-19)
conj_and(pathetic-19, week-21)
amod(creature-22, week-21)
ccomp(find-5, creature-22)
prepc_compared_to(creature-22, to-24)
amod(mamals-26, most-25)
pobj(creature-22, mamals-26)

(ROOT
  (S
    (NP
      (NP (NNS Minus))
      (NP (PRP$ our) (JJ big) (NN brain)))
    (, ,)
    (PP (IN without)
      (NP
        (NP (DT the) (NN abilty)
          (S
            (VP (TO to)
              (VP (VB work)
                (ADVP (RB together))
                (PP (IN as)
                  (NP (DT a) (NN whole)))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT this) (NN means))
          (VP (VBG establishing)
            (NP
              (NP (NNS rules))
              (CC and)
              (NP
                (NP (DT a) (NN sense))
                (PP (IN of)
                  (NP (NN justice)))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB quite) (JJ extinct))
        (ADVP (RB right) (RB now))
        (, ,)
        (S
          (VP (VBG having)
            (S
              (NP (DT all))
              (VP
                (VP (VBN been)
                  (VP (VBN eaten)
                    (PP (IN by)
                      (NP (NNS lions)
                        (CC and)
                        (NN tiger)))))
                (CC and)
                (VP (VBZ bears)
                  (NP
                    (INTJ (UH oh))
                    (NP (PRP$ my) (NN .4))))))))))
    (. .)))

nsubj(extinct-31, Minus-1)
poss(brain-4, our-2)
amod(brain-4, big-3)
dep(Minus-1, brain-4)
det(abilty-8, the-7)
prep_without(extinct-31, abilty-8)
aux(work-10, to-9)
infmod(abilty-8, work-10)
advmod(work-10, together-11)
det(whole-14, a-13)
prep_as(work-10, whole-14)
det(means-18, this-17)
conj_and(abilty-8, means-18)
prep_without(extinct-31, means-18)
partmod(means-18, establishing-19)
dobj(establishing-19, rules-20)
det(sense-23, a-22)
dobj(establishing-19, sense-23)
conj_and(rules-20, sense-23)
prep_of(sense-23, justice-25)
nsubj(extinct-31, we-27)
aux(extinct-31, would-28)
cop(extinct-31, be-29)
advmod(extinct-31, quite-30)
root(ROOT-0, extinct-31)
advmod(now-33, right-32)
advmod(extinct-31, now-33)
xcomp(extinct-31, having-35)
nsubjpass(eaten-38, all-36)
nsubj(bears-44, all-36)
auxpass(eaten-38, been-37)
ccomp(having-35, eaten-38)
agent(eaten-38, lions-40)
agent(eaten-38, tiger-42)
conj_and(lions-40, tiger-42)
ccomp(having-35, bears-44)
conj_and(eaten-38, bears-44)
dep(.4-47, oh-45)
poss(.4-47, my-46)
dobj(bears-44, .4-47)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB argue)
        (S
          (NP (DT no) (NN one))
          (`` ``)
          (NP
            (NP (NNS grounds))
            (NP (PRP it)))
          ('' ''))
        (, ,)
        (NP (RB even) (DT the) (JJ religious))))
    (. .)))

nsubj(argue-3, I-1)
aux(argue-3, would-2)
root(ROOT-0, argue-3)
det(one-5, no-4)
dep(grounds-7, one-5)
dep(argue-3, grounds-7)
dep(grounds-7, it-8)
advmod(religious-13, even-11)
det(religious-13, the-12)
dobj(argue-3, religious-13)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN difference))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB make)
        (SBAR
          (WHNP (WP what))
          (S
            (NP
              (NP (CD one) (POS 's))
              (NNS morals))
            (VP (VBP are)
              (VP (VBN grounded)
                (PP (IN in)
                  (SBAR (IN if)
                    (S
                      (NP (PRP they))
                      (VP (VBP have)
                        (NP
                          (NP
                            (NP (PRP them))
                            (NP (NN none)))
                          (X (DT the) (JJR less)))))))))))))
    (. ?)))

det(difference-2, What-1)
dobj(make-5, difference-2)
aux(make-5, does-3)
nsubj(make-5, it-4)
root(ROOT-0, make-5)
dobj(grounded-11, what-6)
poss(morals-9, one-7)
nsubjpass(grounded-11, morals-9)
auxpass(grounded-11, are-10)
ccomp(make-5, grounded-11)
mark(have-15, if-13)
nsubj(have-15, they-14)
prepc_in(grounded-11, have-15)
dobj(have-15, them-16)
dep(them-16, none-17)
det(less-19, the-18)
dep(them-16, less-19)

(ROOT
  (S
    (NP (DT The) (JJ only) (NN relevent) (NN point))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT a) (NN god))
          (VP (VBZ is)
            (ADJP (JJ unnecessary)
              (PP (IN for)
                (NP (CD one))))
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP
                    (NP (DT a) (NN reason)
                      (S
                        (VP (TO to)
                          (VP (VB live)))))
                    (CC or)
                    (NP (DT a) (JJ moral) (NN compass)
                      (S
                        (VP (TO to)
                          (VP (VB live)
                            (PP (IN by))))))))))))))
    (. .)))

det(point-4, The-1)
amod(point-4, only-2)
nn(point-4, relevent-3)
nsubj(is-5, point-4)
root(ROOT-0, is-5)
complm(unnecessary-10, that-6)
det(god-8, a-7)
nsubj(unnecessary-10, god-8)
xsubj(have-14, god-8)
cop(unnecessary-10, is-9)
ccomp(is-5, unnecessary-10)
prep_for(unnecessary-10, one-12)
aux(have-14, to-13)
xcomp(unnecessary-10, have-14)
det(reason-16, a-15)
dobj(have-14, reason-16)
aux(live-18, to-17)
infmod(reason-16, live-18)
det(compass-22, a-20)
amod(compass-22, moral-21)
dobj(have-14, compass-22)
conj_or(reason-16, compass-22)
aux(live-24, to-23)
infmod(compass-22, live-24)
prep(live-24, by-25)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)))
    (, ,)
    (S
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (ADJP (RB very) (JJ religious))
            (PP (IN until)
              (NP (PRP$ my) (JJ early) (NNS twenties))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP
          (NP (CD 2))
          (RB completely))
        (NP (JJ separate) (NNS mindsets))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (ADVP (RB almost)
            (PP (IN like)
              (NP (CD two) (JJ different) (NNS languages))
              (NP (CD one))))
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB communicate)
                  (PP (IN with)
                    (NP (DT the) (JJ other)))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP I))
        (VP (MD will)
          (VP (VB go)
            (PP (IN through)
              (NP
                (NP (PRP$ your) (NNS objections))
                (PP (IN from)
                  (NP
                    (NP (PRP$ my) (NN point))
                    (PP (IN of)
                      (NP (NN view)))))))
            (NP
              (NP (DT the) (JJS best))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD can)
                    (VP (VB .1))))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
mark(religious-8, because-4)
nsubj(religious-8, I-5)
cop(religious-8, was-6)
advmod(religious-8, very-7)
advcl(mindsets-19, religious-8)
poss(twenties-12, my-10)
amod(twenties-12, early-11)
prep_until(religious-8, twenties-12)
nsubj(mindsets-19, it-14)
cop(mindsets-19, 's-15)
npadvmod(completely-17, 2-16)
advmod(mindsets-19, completely-17)
amod(mindsets-19, separate-18)
ccomp(know-2, mindsets-19)
conj_and(know-2, mindsets-19)
nsubj(trying-30, it-22)
xsubj(communicate-32, it-22)
aux(trying-30, 's-23)
advmod(trying-30, almost-24)
num(languages-28, two-26)
amod(languages-28, different-27)
prep_like(almost-24, languages-28)
dep(almost-24, one-29)
conj_and(know-2, trying-30)
aux(communicate-32, to-31)
xcomp(trying-30, communicate-32)
det(other-35, the-34)
prep_with(communicate-32, other-35)
nsubj(go-40, I-38)
aux(go-40, will-39)
conj_and(know-2, go-40)
conj_but(trying-30, go-40)
poss(objections-43, your-42)
prep_through(go-40, objections-43)
poss(point-46, my-45)
prep_from(objections-43, point-46)
prep_of(point-46, view-48)
det(best-50, the-49)
dobj(go-40, best-50)
dobj(.1-53, best-50)
nsubj(.1-53, I-51)
aux(.1-53, can-52)
rcmod(best-50, .1-53)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD said)
        (SBAR
          (S
            (NP (DT the) (JJ religious))
            (VP (VBP do) (RB n't)
              (VP (VB feel)
                (SBAR
                  (S
                    (NP (PRP$ their) (NNS morals))
                    (VP (VBP are)
                      (VP (VBN grounded)
                        (PRN (, ,)
                          (S
                            (NP (PRP I))
                            (ADVP (RB simply))
                            (VP (VBP offer)
                              (NP (PRP myself))
                              (PP (IN as)
                                (NP (NN proof)))
                              (SBAR (IN that)
                                (S
                                  (NP
                                    (NP (DT the) (NN idea) (JJ many))
                                    (PP (IN of)
                                      (NP (DT the) (JJ religious))))
                                  (VP (VBP have))))))
                          (, ,))
                        (SBAR (IN that)
                          (S
                            (NP
                              (NP (NN life))
                              (PP (IN without)
                                (NP (DT a) (NN god))))
                            (VP (VBZ is)
                              (ADVP (RB somehow))
                              (ADJP (JJ empty)))))))))))))))
    (, ,)
    (VP (VBZ is)
      (ADJP (RB quite) (JJ incorrect)))
    (NP (CD .5))
    (. .)))

nsubj(said-3, I-1)
neg(said-3, never-2)
ccomp(incorrect-40, said-3)
det(religious-5, the-4)
nsubj(feel-8, religious-5)
aux(feel-8, do-6)
neg(feel-8, n't-7)
ccomp(said-3, feel-8)
poss(morals-10, their-9)
nsubjpass(grounded-12, morals-10)
auxpass(grounded-12, are-11)
ccomp(feel-8, grounded-12)
nsubj(offer-16, I-14)
advmod(offer-16, simply-15)
parataxis(grounded-12, offer-16)
dobj(offer-16, myself-17)
prep_as(offer-16, proof-19)
complm(have-27, that-20)
det(idea-22, the-21)
nsubj(have-27, idea-22)
amod(idea-22, many-23)
det(religious-26, the-25)
prep_of(idea-22, religious-26)
ccomp(offer-16, have-27)
complm(empty-36, that-29)
nsubj(empty-36, life-30)
det(god-33, a-32)
prep_without(life-30, god-33)
cop(empty-36, is-34)
advmod(empty-36, somehow-35)
ccomp(grounded-12, empty-36)
cop(incorrect-40, is-38)
advmod(incorrect-40, quite-39)
root(ROOT-0, incorrect-40)
nsubj(incorrect-40, .5-41)

(ROOT
  (S
    (NP (JJ mass) (NN murder))
    (VP
      (VP (VBD read)
        (NP (PRP it)))
      (, ,)
      (NP
        (NP (NNS tons))
        (PP (IN of)
          (NP (NNS examples)))))
    (. .)))

amod(murder-2, mass-1)
nsubj(read-3, murder-2)
root(ROOT-0, read-3)
dobj(read-3, it-4)
dobj(read-3, tons-6)
prep_of(tons-6, examples-8)

(ROOT
  (SBAR (RB Just) (IN as)
    (NP
      (NP (JJ many) (NNS examples))
      (PP (IN of)
        (NP
          (NP (DT the) (JJ religious) (VBG killing) (RB as))
          (PP (IN of)
            (NP (DT the) (JJ non-religious) (NN killing))))))
    (. .)))

advmod(as-2, Just-1)
root(ROOT-0, as-2)
amod(examples-4, many-3)
dep(as-2, examples-4)
prep(examples-4, of-5)
det(as-9, the-6)
amod(as-9, religious-7)
amod(as-9, killing-8)
pobj(of-5, as-9)
det(killing-13, the-11)
amod(killing-13, non-religious-12)
prep_of(as-9, killing-13)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN proof)
        (S
          (VP (TO to)
            (VP (VB back)
              (PRT (RP up))
              (NP
                (NP (DT the) (NN idea))
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT a) (NN person))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ does) (RB n't)
                              (VP (VB believe)
                                (PP (IN in)
                                  (NP (DT a) (NN god))))))))
                      (VP (VBZ is)
                        (ADJP
                          (ADJP (JJR more))
                          (CC or)
                          (ADJP (RBR less) (JJ likely)
                            (S
                              (VP (TO to)
                                (VP (VB kill))))))
                        (, ,)
                        (PP (IN than)
                          (NP
                            (NP (CD one))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP
                                  (VP (VBZ believes)
                                    (PP (IN in)
                                      (NP (DT a) (NN god))))
                                  (, ,)
                                  (CC and)
                                  (VP
                                    (ADVP (RB somehow))
                                    (VBZ twists)
                                    (NP (PRP it)))))))))))
                  (CC so)
                  (SBAR (IN that)
                    (S
                      (NP (PRP$ their) (NN god))
                      (VP (VBZ encourages)
                        (NP
                          (NP (DT the) (NN act))
                          (PP (IN of)
                            (NP (VBG killing))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(proof-4, no-3)
nsubj(is-2, proof-4)
aux(back-6, to-5)
infmod(proof-4, back-6)
prt(back-6, up-7)
det(idea-9, the-8)
dobj(back-6, idea-9)
dep(more-21, that-10)
det(person-12, a-11)
nsubj(believe-16, person-12)
nsubj(more-21, person-12)
nsubj(likely-24, person-12)
aux(believe-16, does-14)
neg(believe-16, n't-15)
rcmod(person-12, believe-16)
det(god-19, a-18)
prep_in(believe-16, god-19)
cop(more-21, is-20)
dep(idea-9, more-21)
advmod(likely-24, less-23)
dep(idea-9, likely-24)
conj_or(more-21, likely-24)
aux(kill-26, to-25)
xcomp(likely-24, kill-26)
prep_than(more-21, one-29)
nsubj(believes-31, one-29)
nsubj(twists-38, one-29)
rcmod(one-29, believes-31)
det(god-34, a-33)
prep_in(believes-31, god-34)
advmod(twists-38, somehow-37)
rcmod(one-29, twists-38)
conj_and(believes-31, twists-38)
dobj(twists-38, it-39)
dep(encourages-44, that-41)
poss(god-43, their-42)
nsubj(encourages-44, god-43)
dep(idea-9, encourages-44)
conj_so(more-21, encourages-44)
det(act-46, the-45)
dobj(encourages-44, act-46)
prep_of(act-46, killing-48)

(ROOT
  (S
    (NP (PRP$ Your) (NN arguement))
    (VP (VBZ holds)
      (NP (DT no) (NN water) (CD .6)))
    (. .)))

poss(arguement-2, Your-1)
nsubj(holds-3, arguement-2)
root(ROOT-0, holds-3)
det(water-5, no-4)
dobj(holds-3, water-5)
num(water-5, .6-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP 're)
                (VP (VBG refering)
                  (PP (TO to)))))))))
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG numbering)
              (NP (DT this))
              (PP (VBG according)
                (PP (TO to)
                  (NP (PRP$ my) (JJ highlighted) (NNS points))))))))
      (, ,)
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN evidence))
          (NP (DT either) (NN way)))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP (PRP$ my) (NN point))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, do-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
dobj(refering-8, what-5)
nsubj(refering-8, you-6)
aux(refering-8, 're-7)
ccomp(see-4, refering-8)
prep(refering-8, to-9)
mark(numbering-14, if-11)
nsubj(numbering-14, you-12)
aux(numbering-14, are-13)
advcl(is-23, numbering-14)
dobj(numbering-14, this-15)
prepc_according_to(numbering-14, to-17)
poss(points-20, my-18)
amod(points-20, highlighted-19)
pobj(numbering-14, points-20)
expl(is-23, there-22)
ccomp(see-4, is-23)
conj_and(see-4, is-23)
det(evidence-25, no-24)
iobj(is-23, evidence-25)
nsubj(is-23, evidence-25)
det(way-27, either-26)
dep(evidence-25, way-27)
nsubj(point-33, that-30)
cop(point-33, 's-31)
poss(point-33, my-32)
conj_and(see-4, point-33)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN lack))
        (PP (IN of)
          (NP (NN evidence))))
      (ADVP (RB here)
        (NP (CD .7))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(lack-4, a-3)
nsubj('s-2, lack-4)
prep_of(lack-4, evidence-6)
advmod('s-2, here-7)
pobj(here-7, .7-8)

(ROOT
  (S (CC But)
    (NP (DT this))
    (VP (VBZ is)
      (NP (DT the) (NN point)))
    (. .)))

cc(point-5, But-1)
nsubj(point-5, this-2)
cop(point-5, is-3)
det(point-5, the-4)
root(ROOT-0, point-5)

(ROOT
  (S
    (NP (PRP$ Your) (JJ original) (NN arguement))
    (VP (VBZ puts)
      (PRT (RP forth))
      (SBAR (IN that) (, ,)
        (S
          (NP (DT the) (JJ religious))
          (VP (VBP are)
            (ADJP
              (ADJP (RBR more) (JJ moral))
              (SBAR (IN because)
                (S
                  (NP (PRP they))
                  (VP (VBP have)
                    (ADVP (RB specifically))
                    (VP (VBN religion)
                      (S
                        (VP (TO to)
                          (VP (VB guide)
                            (NP (PRP them))))))))))))))
    (. .)))

poss(arguement-3, Your-1)
amod(arguement-3, original-2)
nsubj(puts-4, arguement-3)
root(ROOT-0, puts-4)
prt(puts-4, forth-5)
complm(moral-12, that-6)
det(religious-9, the-8)
nsubj(moral-12, religious-9)
cop(moral-12, are-10)
advmod(moral-12, more-11)
ccomp(puts-4, moral-12)
mark(religion-17, because-13)
nsubj(religion-17, they-14)
xsubj(guide-19, they-14)
aux(religion-17, have-15)
advmod(religion-17, specifically-16)
ccomp(moral-12, religion-17)
aux(guide-19, to-18)
xcomp(religion-17, guide-19)
dobj(guide-19, them-20)

(ROOT
  (S
    (NP (PRP$ My) (NN point))
    (VP (VBZ is)
      (ADVP (RB again))
      (, ,)
      (SBAR (IN while)
        (S
          (NP
            (NP (NN religion) (NNS guides))
            (SBAR
              (S
                (NP
                  (NP
                    (NP (DT the) (JJ vast) (NN majority))
                    (PP (IN of)
                      (NP (DT the) (JJ human) (NN population))))
                  (PRN (-LRB- -LRB-)
                    (NP
                      (NP (CD 82) (NN %))
                      (VP (VBN apx)))
                    (-RRB- -RRB-))
                  (NP (DT those)))
                (VP (RB not) (VBN guided)
                  (PP (IN by)
                    (NP (DT a) (NN religion)))))))
          (VP (VBP are)
            (ADVP (RB just))
            (ADJP (RB as) (JJ likely)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP
                      (ADJP (`` ``) (JJ good) ('' ''))
                      (CC or)
                      (ADJP (`` ``) (JJ evil) ('' '')))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (MD would)
                          (VP (VB appear)
                            (S
                              (VP (TO to)
                                (VP (VB make)
                                  (S
                                    (NP
                                      (NP (DT the) (NN belief))
                                      (PP (IN in)
                                        (NP (DT a) (NN god))))
                                    (ADJP (JJ unnecessary))))))))))))))
            (SBAR (IN in) (NN order)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (`` ``) (VBG moral) (`` ``)
                      (NP (CD 8)))))))))))
    (. .)))

poss(point-2, My-1)
nsubj(is-3, point-2)
root(ROOT-0, is-3)
advmod(is-3, again-4)
mark(likely-30, while-6)
nn(guides-8, religion-7)
dobj(guided-23, guides-8)
nsubj(likely-30, guides-8)
det(majority-11, the-9)
amod(majority-11, vast-10)
nsubj(guided-23, majority-11)
det(population-15, the-13)
amod(population-15, human-14)
prep_of(majority-11, population-15)
num(%-18, 82-17)
dep(majority-11, %-18)
partmod(%-18, apx-19)
dep(majority-11, those-21)
neg(guided-23, not-22)
rcmod(guides-8, guided-23)
det(religion-26, a-25)
prep_by(guided-23, religion-26)
cop(likely-30, are-27)
advmod(likely-30, just-28)
advmod(likely-30, as-29)
advcl(is-3, likely-30)
aux(good-34, to-31)
cop(good-34, be-32)
xcomp(likely-30, good-34)
xcomp(likely-30, evil-38)
conj_or(good-34, evil-38)
nsubj(appear-42, which-40)
aux(appear-42, would-41)
ccomp(good-34, appear-42)
aux(make-44, to-43)
xcomp(appear-42, make-44)
det(belief-46, the-45)
nsubj(unnecessary-50, belief-46)
det(god-49, a-48)
prep_in(belief-46, god-49)
xcomp(make-44, unnecessary-50)
mark(moral-56, in-51)
dep(moral-56, order-52)
aux(moral-56, to-53)
aux(moral-56, be-54)
purpcl(likely-30, moral-56)
dobj(moral-56, 8-58)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (PRP one))
          (VP (MD can)
            (VP (VB account)
              (PP (IN for)
                (NP (PRP$ their) (NN perspective)))
              (PP (IN on)
                (ADJP (JJ good)
                  (CC and)
                  (JJ evil)))
              (PP (IN in)
                (NP (NNS humans))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
nsubj(account-5, one-3)
aux(account-5, can-4)
ccomp(believe-2, account-5)
poss(perspective-8, their-7)
prep_for(account-5, perspective-8)
prep_on(account-5, good-10)
prep_on(account-5, evil-12)
conj_and(good-10, evil-12)
prep_in(account-5, humans-14)

(ROOT
  (S
    (ADVP (RB lol))
    (, ,)
    (NP (DT this))
    (VP (VBD was)
      (ADJP (JJ hard)
        (S
          (VP (TO to)
            (VP (VB read))))))
    (. .)))

advmod(hard-5, lol-1)
nsubj(hard-5, this-3)
cop(hard-5, was-4)
root(ROOT-0, hard-5)
aux(read-7, to-6)
xcomp(hard-5, read-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBN impressed)
        (PP (IN by)
          (NP (JJ pretty) (NNS words)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (VP (VBG discussing)
              (NP (NN theology)))))))
    (. .)))

nsubjpass(impressed-4, I-1)
auxpass(impressed-4, 'm-2)
neg(impressed-4, not-3)
root(ROOT-0, impressed-4)
amod(words-7, pretty-6)
agent(impressed-4, words-7)
advmod(discussing-9, when-8)
advcl(impressed-4, discussing-9)
dobj(discussing-9, theology-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBN swayed)
        (PP (IN by)
          (NP (JJ mindless) (NNS examples)))))
    (. .)))

nsubjpass(swayed-4, I-1)
auxpass(swayed-4, 'm-2)
neg(swayed-4, not-3)
root(ROOT-0, swayed-4)
amod(examples-7, mindless-6)
agent(swayed-4, examples-7)

(ROOT
  (S
    (NP (PRP$ My) (NN belief))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (VP (VBN caught)
          (PP (IN in)
            (NP
              (NP (DT a) (NN rip-tide))
              (SBAR
                (S
                  (VP (VBZ is)
                    (ADVP (RB just))
                    (ADJP (RB as) (JJ likely))
                    (S
                      (VP (TO to)
                        (VP (VB drown)
                          (SBAR (IN whether)
                            (S
                              (NP (PRP they))
                              (VP (VBP believe)
                                (PP (IN in)
                                  (NP (NN god)))))
                            (CC or)
                            (RB not)))))))))))))
    (. .)))

poss(belief-2, My-1)
nsubj(one-4, belief-2)
cop(one-4, is-3)
root(ROOT-0, one-4)
partmod(one-4, caught-5)
det(rip-tide-8, a-7)
prep_in(caught-5, rip-tide-8)
cop(likely-12, is-9)
advmod(likely-12, just-10)
advmod(likely-12, as-11)
rcmod(rip-tide-8, likely-12)
aux(drown-14, to-13)
xcomp(likely-12, drown-14)
complm(believe-17, whether-15)
nsubj(believe-17, they-16)
ccomp(drown-14, believe-17)
prep_in(believe-17, god-19)
ccomp(drown-14, not-21)
conj_or(believe-17, not-21)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB be)
            (PP (IN under)
              (NP (DT the) (NN impression)))
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP
                    (NP (NN something))
                    (PP (IN in)
                      (NP (NN life)))
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN saved)
                            (PP (IN from))))))))))))))
    (. .)))

nsubj(seem-2, You-1)
xsubj(be-4, You-1)
root(ROOT-0, seem-2)
aux(be-4, to-3)
xcomp(seem-2, be-4)
det(impression-7, the-6)
prep_under(be-4, impression-7)
complm(is-10, that-8)
expl(is-10, there-9)
ccomp(be-4, is-10)
nsubj(is-10, something-11)
prep_in(something-11, life-13)
aux(saved-16, to-14)
auxpass(saved-16, be-15)
infmod(something-11, saved-16)
prep(saved-16, from-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB see)
        (S
          (NP (PRP it))
          (NP (DT this) (NN way)))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, do-2)
neg(see-4, not-3)
root(ROOT-0, see-4)
nsubj(way-7, it-5)
det(way-7, this-6)
xcomp(see-4, way-7)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (VP (VBG talking)
              (PP (IN about)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (PRP I))
                    (VP (VBP say)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (PP (IN like)
                              (NP
                                (NP (CD two) (NNS people))
                                (VP (VBG trying)
                                  (S
                                    (VP (TO to)
                                      (VP (VB communicate)
                                        (PP (IN in)
                                          (NP (CD two) (JJ different) (NNS languages)))))))))))))))))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
dobj(talking-6, what-3)
nsubj(talking-6, I-4)
aux(talking-6, 'm-5)
ccomp(is-2, talking-6)
advmod(say-10, when-8)
nsubj(say-10, I-9)
prepc_about(talking-6, say-10)
complm('s-13, that-11)
nsubj('s-13, it-12)
ccomp(say-10, 's-13)
num(people-16, two-15)
prep_like('s-13, people-16)
xsubj(communicate-19, people-16)
partmod(people-16, trying-17)
aux(communicate-19, to-18)
xcomp(trying-17, communicate-19)
num(languages-23, two-21)
amod(languages-23, different-22)
prep_in(communicate-19, languages-23)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP do) (RB not)
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP (VB understand)
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (VBP do) (RB not)
                      (VP (VB believe)
                        (SBAR
                          (S
                            (NP (EX there))
                            (VP (VBZ is)
                              (NP (NN anything)
                                (S
                                  (VP (TO to)
                                    (VP (VB be)
                                      (VP (VBN saved)
                                        (PP (IN from)
                                          (PP (IN in)
                                            (NP (DT the) (JJ general) (NN sense))))))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (DT the) (JJ literal) (NN sense)))
      (, ,)
      (NP (PRP I))
      (VP (VBP 've)
        (ADVP (RB never))
        (VP (VBN seen)
          (CC or)
          (VBN heard)
          (PP (IN of)
            (NP
              (NP (NN god) (VBG saving) (NN anyone))
              (SBAR
                (WHNP (WP$ whose) (NN life))
                (S
                  (VP (VBD was)
                    (PP (IN in)
                      (NP (JJ mortal) (NN danger)))))))))))
    (. .)))

nsubj(seem-4, You-1)
xsubj(understand-6, You-1)
aux(seem-4, do-2)
neg(seem-4, not-3)
root(ROOT-0, seem-4)
aux(understand-6, to-5)
xcomp(seem-4, understand-6)
complm(believe-11, that-7)
nsubj(believe-11, I-8)
aux(believe-11, do-9)
neg(believe-11, not-10)
ccomp(understand-6, believe-11)
expl(is-13, there-12)
ccomp(believe-11, is-13)
nsubj(is-13, anything-14)
aux(saved-17, to-15)
auxpass(saved-17, be-16)
infmod(anything-14, saved-17)
prep(saved-17, from-18)
pcomp(from-18, in-19)
det(sense-22, the-20)
amod(sense-22, general-21)
prep_in(from-18, sense-22)
det(sense-28, the-26)
amod(sense-28, literal-27)
prep_in(seen-33, sense-28)
nsubj(seen-33, I-30)
nsubj(heard-35, I-30)
aux(seen-33, 've-31)
neg(seen-33, never-32)
conj_and(seem-4, seen-33)
conj_and(seem-4, heard-35)
conj_or(seen-33, heard-35)
nn(anyone-39, god-37)
amod(anyone-39, saving-38)
prep_of(seen-33, anyone-39)
poss(life-41, anyone-39)
nsubj(was-42, life-41)
rcmod(anyone-39, was-42)
amod(danger-45, mortal-44)
prep_in(was-42, danger-45)

(ROOT
  (S
    (NP (DT Some))
    (VP (VBP live)
      (SBAR
        (S
          (PRN (, ,)
            (S
              (NP (DT some))
              (VP (VBP die)))
            (, ,))
          (NP
            (NP (NN belief))
            (PP (IN in)
              (NP (NN god))))
          (VP (VBZ does) (RB not)
            (VP (VB change)
              (NP (DT these) (NNS odds))
              (ADVP (IN at) (DT all)))))))
    (. .)))

nsubj(live-2, Some-1)
root(ROOT-0, live-2)
nsubj(die-5, some-4)
parataxis(change-12, die-5)
nsubj(change-12, belief-7)
prep_in(belief-7, god-9)
aux(change-12, does-10)
neg(change-12, not-11)
ccomp(live-2, change-12)
det(odds-14, these-13)
dobj(change-12, odds-14)
advmod(change-12, at-15)
pobj(at-15, all-16)

(ROOT
  (S
    (SQ
      (NP (DT The) (JJ religious))
      (VP (VB listen)
        (PP (TO to)
          (NP (NN example)))
        (SBAR (IN after)
          (S
            (NP
              (NP (NN example))
              (PP (IN of)
                (S
                  (NP (NNS people))
                  (VP (VBG saying) ('' '')
                    (NP (PRP I))))))
            (VP (VBD was)
              (VP (VBN saved)))))))
    ('' '')
    (NP (PRP it))
    (VP (VBZ 's)
      (VP (VBN indoctrinated)
        (PP (IN into)
          (NP
            (NP (DT the) (NN fiber))
            (PP (IN of)
              (NP (PRP$ your) (NN being)))))))
    (. .)))

det(religious-2, The-1)
nsubj(listen-3, religious-2)
dep(indoctrinated-18, listen-3)
prep_to(listen-3, example-5)
mark(saved-14, after-6)
nsubjpass(saved-14, example-7)
nsubj(saying-10, people-9)
prepc_of(example-7, saying-10)
dobj(saying-10, I-12)
auxpass(saved-14, was-13)
advcl(listen-3, saved-14)
nsubjpass(indoctrinated-18, it-16)
auxpass(indoctrinated-18, 's-17)
root(ROOT-0, indoctrinated-18)
det(fiber-21, the-20)
prep_into(indoctrinated-18, fiber-21)
poss(being-24, your-23)
prep_of(fiber-21, being-24)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (NP (DT a) (NN pack) (NN animal))
      (, ,)
      (S
        (ADVP (RB always))
        (VP (VB have)
          (VP (VBN been)))))
    (. .)))

nsubj(animal-5, We-1)
cop(animal-5, are-2)
det(animal-5, a-3)
nn(animal-5, pack-4)
root(ROOT-0, animal-5)
advmod(been-9, always-7)
aux(been-9, have-8)
dep(animal-5, been-9)

(ROOT
  (S
    (PP (IN From)
      (NP (DT the) (NN outside)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ looks)
      (PP (IN like)
        (NP
          (NP (JJ silly) (NNS people))
          (VP (VBG looking)
            (PP (IN for)
              (NP (DT an) (JJ easy) (NN way)))
            (ADVP (RB out))))))
    (. .)))

det(outside-3, the-2)
prep_from(looks-6, outside-3)
nsubj(looks-6, it-5)
root(ROOT-0, looks-6)
amod(people-9, silly-8)
prep_like(looks-6, people-9)
partmod(people-9, looking-10)
det(way-14, an-12)
amod(way-14, easy-13)
prep_for(looking-10, way-14)
advmod(looking-10, out-15)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ is)
      (VP (VBN saved) (, ,)
        (SBAR (IN because)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (NN nothing)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN saved)
                        (PP (IN from))))))))))))
    (. .)))

det(one-2, No-1)
nsubjpass(saved-4, one-2)
auxpass(saved-4, is-3)
root(ROOT-0, saved-4)
mark(is-8, because-6)
expl(is-8, there-7)
advcl(saved-4, is-8)
nsubj(is-8, nothing-9)
aux(saved-12, to-10)
auxpass(saved-12, be-11)
infmod(nothing-9, saved-12)
prep(saved-12, from-13)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP live) (, ,)
        (S
          (NP (PRP we))
          (VP (VB die)))))
    (, ,)
    (NP (PRP we))
    (VP (VBP make)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP we))
          (VP (VB make)
            (PRT (RP out))
            (PP (IN of)
              (NP (PRP it)))
            (PP (IN in)
              (NP
                (NP (DT the) (NN time))
                (PP (IN in)
                  (NP (IN between)))))))))
    (. .)))

nsubj(live-2, We-1)
ccomp(make-8, live-2)
nsubj(die-5, we-4)
ccomp(live-2, die-5)
nsubj(make-8, we-7)
root(ROOT-0, make-8)
dobj(make-11, what-9)
nsubj(make-11, we-10)
ccomp(make-8, make-11)
prep_out_of(make-11, it-14)
det(time-17, the-16)
prep_in(make-11, time-17)
prep(time-17, in-18)
pobj(in-18, between-19)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBZ plays)
      (NP (DT no) (NN role)))
    (. .)))

nsubj(plays-2, God-1)
root(ROOT-0, plays-2)
det(role-4, no-3)
dobj(plays-2, role-4)

(ROOT
  (S
    (S
      (NP (DT Some))
      (VP (VBP choose)
        (S
          (VP (TO to)
            (VP (VB believe)
              (PP (IN in)
                (NP (DT a) (NN god))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP do) (RB not)))))
      (VP (VBP are)
        (ADJP
          (ADJP (RB just) (RB as) (JJ happy))
          (, ,)
          (CC and)
          (ADVP (RB quite) (RB often) (RBR more)))
        (ADVP (RB so))
        (, ,)
        (PP (IN than)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP do))))))))
    (. .)))

nsubj(choose-2, Some-1)
xsubj(believe-4, Some-1)
root(ROOT-0, choose-2)
aux(believe-4, to-3)
xcomp(choose-2, believe-4)
det(god-7, a-6)
prep_in(believe-4, god-7)
nsubj(do-12, those-10)
nsubj(happy-17, those-10)
rcmod(those-10, do-12)
neg(do-12, not-13)
cop(happy-17, are-14)
advmod(happy-17, just-15)
advmod(happy-17, as-16)
conj_but(choose-2, happy-17)
advmod(more-22, quite-20)
advmod(more-22, often-21)
conj_but(choose-2, more-22)
advmod(happy-17, more-22)
conj_and(happy-17, more-22)
advmod(happy-17, so-23)
prep_than(happy-17, those-26)
nsubj(do-28, those-26)
rcmod(those-26, do-28)

(ROOT
  (S (CC And)
    (PP (IN in)
      (NP (DT the) (NN end)))
    (, ,)
    (SBAR (IN whether)
      (S
        (NP (NN someone))
        (VP (VBZ believes)
          (PP (IN in)
            (NP (DT a) (NN god)
              (CC or)
              (RB not))))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP die)))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (VP (VBG lights)
          (PRT (RP out)))))
    (. .)))

det(end-4, the-3)
prep_in(die-16, end-4)
dep(believes-8, whether-6)
nsubj(believes-8, someone-7)
dep(die-16, believes-8)
det(god-11, a-10)
prep_in(believes-8, god-11)
prep_in(believes-8, not-13)
conj_or(god-11, not-13)
neg(god-11, not-13)
nsubj(die-16, they-15)
root(ROOT-0, die-16)
nsubj(lights-20, it-18)
aux(lights-20, 's-19)
conj_and(die-16, lights-20)
prt(lights-20, out-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (DT a) (JJ religious) (NN person))
            (VP (MD will) (`` ``)
              (VP (VB live)
                (ADVP (RB forever))
                ('' '')
                (ADVP (DT any) (RBR more))
                (SBAR (IN than)
                  (S
                    (NP (PRP I))
                    (VP (VBP believe)
                      (SBAR
                        (S
                          (NP (PRP I))
                          (MD will)
                          (VP (`` ``) (VB live)
                            (ADVP (RB forever))
                            ('' '')))))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
det(person-7, a-5)
amod(person-7, religious-6)
nsubj(live-10, person-7)
aux(live-10, will-8)
ccomp(think-4, live-10)
advmod(live-10, forever-11)
dep(more-14, any-13)
advmod(live-10, more-14)
mark(believe-17, than-15)
nsubj(believe-17, I-16)
advcl(live-10, believe-17)
nsubj(live-21, I-18)
dep(live-21, will-19)
ccomp(believe-17, live-21)
advmod(live-21, forever-22)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP one))
        (VP (VBZ believes))))
    (VP (VBZ is)
      (ADJP (JJ irrelevant))
      (PP
        (ADVP (RB ultimately))
        (IN outside) (IN of)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP they))
            (VP (VBP do)
              (PP (IN with)
                (NP (PRP it)))
              (PP
                (ADVP (RB here))
                (IN on)
                (NP
                  (NP (NN earth))
                  (SBAR (IN while)
                    (FRAG
                      (ADJP (JJ alive)))))))))))
    (. .)))

dobj(believes-3, What-1)
nsubj(believes-3, one-2)
csubj(irrelevant-5, believes-3)
cop(irrelevant-5, is-4)
root(ROOT-0, irrelevant-5)
advmod(irrelevant-5, ultimately-6)
dobj(do-11, what-9)
nsubj(do-11, they-10)
prepc_outside_of(irrelevant-5, do-11)
prep_with(do-11, it-13)
advmod(do-11, here-14)
prep_on(do-11, earth-16)
mark(alive-18, while-17)
dep(earth-16, alive-18)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (DT the) (JJ religious))
    (VP (MD can)
      (ADVP (RB hardly))
      (PRN (-LRB- -LRB-)
        (FRAG (IN if)
          (ADVP (IN at) (DT all)))
        (-RRB- -RRB-))
      (VP (VB wrap)
        (NP (PRP$ their) (NNS heads))
        (PP (IN around)
          (NP
            (NP (DT the) (NN concept))
            (PP (IN of)
              (S
                (ADVP (RB simply))
                (VP (VBG being)
                  (ADJP (JJ dead)))))))))
    (. .)))

advmod(wrap-12, Now-1)
det(religious-4, the-3)
nsubj(wrap-12, religious-4)
aux(wrap-12, can-5)
advmod(wrap-12, hardly-6)
dep(wrap-12, if-8)
dep(if-8, at-9)
pobj(at-9, all-10)
root(ROOT-0, wrap-12)
poss(heads-14, their-13)
dobj(wrap-12, heads-14)
det(concept-17, the-16)
prep_around(wrap-12, concept-17)
advmod(dead-21, simply-19)
cop(dead-21, being-20)
prepc_of(concept-17, dead-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (SBAR (IN like)
        (S
          (NP (PRP they))
          (VP (VBP have)
            (S
              (VP (TO to)
                (VP (VB believe)
                  (SBAR
                    (S
                      (NP (EX there))
                      (VP (VBZ is)
                        (NP (DT an) (NN after-life))))
                    (, ,)
                    (CC and)
                    (S
                      (PP (IN by)
                        (NP (NN default)))
                      (, ,)
                      (VP (VBP have)
                        (S
                          (VP (TO to)
                            (VP (VB believe)
                              (SBAR (IN that)
                                (S
                                  (NP (NN everyone) (RB else))
                                  (VP (MD must)
                                    (PP (IN on)
                                      (NP
                                        (NP (DT some) (NN level))
                                        (ADVP (IN at) (JJS least))))
                                    (VP (VB want)
                                      (S
                                        (VP (TO to)
                                          (VP (VB believe)
                                            (SBAR
                                              (S
                                                (NP (EX there))
                                                (VP (VBZ is)
                                                  (NP (DT an) (NN afterlife)))))))))))))))))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
mark(have-5, like-3)
nsubj(have-5, they-4)
xsubj(believe-7, they-4)
advcl('s-2, have-5)
aux(believe-7, to-6)
xcomp(have-5, believe-7)
expl(is-9, there-8)
ccomp(believe-7, is-9)
det(after-life-11, an-10)
nsubj(is-9, after-life-11)
nsubj(have-17, after-life-11)
prep_by(have-17, default-15)
ccomp(believe-7, have-17)
conj_and(is-9, have-17)
aux(believe-19, to-18)
xcomp(have-17, believe-19)
complm(want-29, that-20)
nsubj(want-29, everyone-21)
xsubj(believe-31, everyone-21)
advmod(everyone-21, else-22)
aux(want-29, must-23)
det(level-26, some-25)
prep_on(want-29, level-26)
advmod(level-26, at-27)
pobj(at-27, least-28)
ccomp(believe-19, want-29)
aux(believe-31, to-30)
xcomp(want-29, believe-31)
expl(is-33, there-32)
ccomp(believe-31, is-33)
det(afterlife-35, an-34)
nsubj(is-33, afterlife-35)

(ROOT
  (S
    (NP
      (NP (RB Even) (NN dog) (POS 's))
      (, ,)
      (RRC
        (PP (IN with)
          (NP (CD 0) (NN knowledge)))
        (PP (IN of)
          (NP (DT any) (NN religion))))
      (, ,))
    (VP (VBP know)
      (S
        (VP (TO to)
          (VP
            (VP (VB protect))
            (CC and)
            (`` ``)
            (VP (VB be)
              (ADJP (JJ kind) ('' '')
                (PP (TO to)
                  (NP
                    (NP (NNS others))
                    (PP (IN in)
                      (NP (PRP$ their) (NN pack)))
                    (, ,)
                    (PP (VBG including)
                      (NP
                        (NP (PRP$ their) (NN owner))
                        (SBAR
                          (WHNP (WP whom))
                          (S
                            (NP (PRP they))
                            (VP (VBP see)
                              (PP (IN as)
                                (NP (DT the) (NN pack) (NN leader))))))))))))))))
    (. .)))

advmod(dog-2, Even-1)
nsubj(know-12, dog-2)
xsubj(protect-14, dog-2)
possessive(dog-2, 's-3)
dep(of-8, with-5)
num(knowledge-7, 0-6)
pobj(with-5, knowledge-7)
rcmod(dog-2, of-8)
det(religion-10, any-9)
pobj(of-8, religion-10)
root(ROOT-0, know-12)
aux(protect-14, to-13)
xcomp(know-12, protect-14)
cop(kind-18, be-17)
xcomp(know-12, kind-18)
conj_and(protect-14, kind-18)
prep_to(kind-18, others-21)
poss(pack-24, their-23)
prep_in(others-21, pack-24)
poss(owner-28, their-27)
prep_including(others-21, owner-28)
dobj(see-31, owner-28)
rel(see-31, whom-29)
nsubj(see-31, they-30)
rcmod(owner-28, see-31)
det(leader-35, the-33)
nn(leader-35, pack-34)
prep_as(see-31, leader-35)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VB assure)
        (NP (PRP you))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (ADVP (IN on)
        (NP (DT any) (NN level)))
      (VP (VB believe)
        (PP (IN in)
          (NP (DT an) (NN afterlife)))))
    (. .)))

nsubj(assure-2, I-1)
ccomp(believe-11, assure-2)
dobj(assure-2, you-3)
nsubj(believe-11, I-5)
aux(believe-11, do-6)
neg(believe-11, not-7)
advmod(believe-11, on-8)
det(level-10, any-9)
pobj(on-8, level-10)
root(ROOT-0, believe-11)
det(afterlife-14, an-13)
prep_in(believe-11, afterlife-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP
              (PP (IN on)
                (NP (DT any) (NN level)))
              (VB trick)
              (NP (PRP myself)))))
        (PP (IN into)
          (S
            (VP (VBG believing)
              (PP (IN in)
                (NP (DT an) (NN afterlife))))))))
    (. .)))

nsubj(want-4, I-1)
xsubj(trick-9, I-1)
aux(want-4, do-2)
neg(want-4, not-3)
root(ROOT-0, want-4)
aux(trick-9, to-5)
det(level-8, any-7)
prep_on(trick-9, level-8)
xcomp(want-4, trick-9)
dobj(trick-9, myself-10)
prepc_into(want-4, believing-12)
det(afterlife-15, an-14)
prep_in(believing-12, afterlife-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ self-destructive)
              (S
                (VP (TO to)
                  (VP (VB fool)
                    (NP (PRP oneself))
                    (PP (IN in)
                      (NP
                        (NP (PDT such) (DT a) (NN way))
                        (NP (CD .9))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
nsubj(self-destructive-5, it-3)
cop(self-destructive-5, is-4)
ccomp(believe-2, self-destructive-5)
aux(fool-7, to-6)
xcomp(self-destructive-5, fool-7)
dobj(fool-7, oneself-8)
predet(way-12, such-10)
det(way-12, a-11)
prep_in(fool-7, way-12)
dep(way-12, .9-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (NP
        (NP (DT some) (NNS typos))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP make)
              (S
                (NP (DT this))
                (ADJP (JJ hard)
                  (S
                    (VP (TO to)
                      (VP (VB understand)))))))))))
    (. .)))

nsubj(have-2, You-1)
root(ROOT-0, have-2)
det(typos-4, some-3)
dobj(have-2, typos-4)
nsubj(make-6, typos-4)
rcmod(typos-4, make-6)
nsubj(hard-8, this-7)
xcomp(make-6, hard-8)
aux(understand-10, to-9)
xcomp(hard-8, understand-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP$ your) (NN saying))
          (VP (VBZ is)
            (SBAR (IN that)
              (S
                (NP
                  (NP (PRP$ my) (NN account))
                  (PP (IN of)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (NN religion))
                        (VP (VBD started))))))
                (VP (VBZ is)
                  (ADJP (RP off))))))))
      (PRN (, ,)
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which) (NN case)))
          (S
            (NP (DT the) (NN point))
            (VP (VBD flew)
              (ADJP (JJ clear))
              (PP (IN over)
                (NP (PRP you))))))
        (, ,))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP it))
          (ADVP (RB always))
          (VP (VBZ does)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP I))
                (VP (VBP get)
                  (PP (IN into)
                    (NP (DT these) (NNS discussions))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
dep(is-6, what-3)
dobj(off-15, what-3)
poss(saying-5, your-4)
nsubj(is-6, saying-5)
ccomp(think-2, is-6)
complm(off-15, that-7)
poss(account-9, my-8)
nsubj(off-15, account-9)
advmod(started-13, how-11)
nsubj(started-13, religion-12)
prepc_of(account-9, started-13)
cop(off-15, is-14)
ccomp(is-6, off-15)
dep(flew-22, in-17)
det(case-19, which-18)
pobj(in-17, case-19)
det(point-21, the-20)
nsubj(flew-22, point-21)
parataxis(think-2, flew-22)
acomp(flew-22, clear-23)
prep_over(flew-22, you-25)
dep(does-30, which-27)
nsubj(does-30, it-28)
advmod(does-30, always-29)
ccomp(think-2, does-30)
advmod(get-33, when-31)
nsubj(get-33, I-32)
advcl(does-30, get-33)
det(discussions-36, these-35)
prep_into(get-33, discussions-36)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (RB nearly) (JJ impossible))
      (S
        (VP (TO to)
          (VP (VB explain)
            (PP (TO to)
              (NP
                (NP (CD one))
                (PP (JJ such) (IN as)
                  (NP (PRP yourself)))))))))
    (. .)))

advmod(impossible-6, Again-1)
nsubj(impossible-6, it-3)
xsubj(explain-8, it-3)
cop(impossible-6, 's-4)
advmod(impossible-6, nearly-5)
root(ROOT-0, impossible-6)
aux(explain-8, to-7)
xcomp(impossible-6, explain-8)
prep_to(explain-8, one-10)
prep_such_as(one-10, yourself-13)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB explain)
              (SBAR
                (WHADVP (RB exactly) (WRB how))
                (S
                  (NP (NN religion))
                  (VP (VBD began)))))))))
    (. .)))

cc(trying-5, But-1)
nsubj(trying-5, I-2)
xsubj(explain-7, I-2)
aux(trying-5, 'm-3)
neg(trying-5, not-4)
root(ROOT-0, trying-5)
aux(explain-7, to-6)
xcomp(trying-5, explain-7)
advmod(how-9, exactly-8)
advmod(began-11, how-9)
nsubj(began-11, religion-10)
ccomp(explain-7, began-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (ADVP (RB simply))
      (VP (VBG giving)
        (NP (DT an) (JJ alternative) (NN example))
        (SBAR (IN in) (NN order)
          (S
            (VP (TO to)
              (VP (VB point)
                (PRT (RP out))
                (NP
                  (NP (PRP$ my) (NN opinion) (NN thatreligion))
                  (SBAR
                    (S
                      (VP (VBZ is)
                        (ADJP (RB quite) (JJ unnecessary))))))))))))
    (. .)))

nsubj(giving-4, I-1)
aux(giving-4, was-2)
advmod(giving-4, simply-3)
root(ROOT-0, giving-4)
det(example-7, an-5)
amod(example-7, alternative-6)
dobj(giving-4, example-7)
mark(point-11, in-8)
dep(point-11, order-9)
aux(point-11, to-10)
purpcl(giving-4, point-11)
prt(point-11, out-12)
poss(thatreligion-15, my-13)
nn(thatreligion-15, opinion-14)
dobj(point-11, thatreligion-15)
cop(unnecessary-18, is-16)
advmod(unnecessary-18, quite-17)
rcmod(thatreligion-15, unnecessary-18)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NN th) (NN point))
          (VP (VBD was)))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
dobj(was-6, what-3)
nn(point-5, th-4)
nsubj(was-6, point-5)
ccomp(is-2, was-6)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN point))
          (PP (IN in)
            (S
              (NP (PRP me))
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB guess)
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (NP (PRP it))
                          (ADVP (DT all))
                          (VP (VBD started))))))))))))
      (PRN (-LRB- -LRB-)
        (S
          (S
            (SBAR (IN though)
              (S
                (NP (PRP I))
                (VP (VBP imagine)
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (PP (IN from)
                          (NP (DT an) (JJ inherent) (NN need)))
                        (PP (IN within)
                          (S
                            (VP (VBN born)
                              (PP (IN of)
                                (NP (NN self-realization)))
                              (S
                                (VP (TO to) (RB not)
                                  (VP (VB cease)
                                    (S
                                      (VP (TO to)
                                        (VP (VB exist)
                                          (PP (IN at)
                                            (NP
                                              (NP (DT some) (NN point))
                                              (, ,)
                                              (SBAR
                                                (WHNP (WDT which))
                                                (S
                                                  (VP (VBZ is) (RB not)
                                                    (ADVP (RB even))
                                                    (NP (DT the) (NN theory))))))))))))))))))))))
            (NP (PRP I))
            (VP (VBD put)
              (ADVP (RB forth))))
          (, ,)
          (CC but)
          (S
            (ADVP (RB there))
            (NP (PRP you))
            (VP (VBP go))))
        (-RRB- -RRB-))
      (SBAR (IN As)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP (VBG saying))))))
    (PRN (, ,)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT no) (NN point))
            (PP (IN for)
              (S
                (NP (PRP me))
                (VP (VBG trying)
                  (S
                    (VP (TO to)
                      (VP (VB guess)
                        (ADVP (RB though))
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (NP (PRP it))
                            (ADVP (DT all))
                            (VP (VBD started)))))))))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (SBAR
            (WHADVP (WRB how)
              (CC or)
              (WRB why))
            (S
              (NP (PRP it))
              (ADVP (DT all))
              (VP (VBD started)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(point-4, no-3)
nsubj(is-2, point-4)
nsubj(trying-7, me-6)
xsubj(guess-9, me-6)
prepc_in(point-4, trying-7)
aux(guess-9, to-8)
xcomp(trying-7, guess-9)
advmod(started-13, how-10)
nsubj(started-13, it-11)
advmod(started-13, all-12)
ccomp(guess-9, started-13)
mark(imagine-17, though-15)
nsubj(imagine-17, I-16)
advcl(put-44, imagine-17)
nsubj(was-19, it-18)
ccomp(imagine-17, was-19)
det(need-23, an-21)
amod(need-23, inherent-22)
prep_from(was-19, need-23)
prepc_within(was-19, born-25)
prep_of(born-25, self-realization-27)
aux(cease-30, to-28)
neg(cease-30, not-29)
xcomp(born-25, cease-30)
aux(exist-32, to-31)
xcomp(cease-30, exist-32)
det(point-35, some-34)
prep_at(exist-32, point-35)
nsubj(theory-42, point-35)
cop(theory-42, is-38)
neg(theory-42, not-39)
advmod(theory-42, even-40)
det(theory-42, the-41)
rcmod(point-35, theory-42)
nsubj(put-44, I-43)
parataxis(is-2, put-44)
advmod(put-44, forth-45)
advmod(go-50, there-48)
nsubj(go-50, you-49)
parataxis(is-2, go-50)
conj_but(put-44, go-50)
mark(saying-55, As-52)
nsubj(saying-55, I-53)
aux(saying-55, was-54)
dep(is-2, saying-55)
expl(is-58, there-57)
dep(is-2, is-58)
det(point-60, no-59)
nsubj(is-58, point-60)
nsubj(trying-63, me-62)
xsubj(guess-65, me-62)
prepc_for(point-60, trying-63)
aux(guess-65, to-64)
xcomp(trying-63, guess-65)
advmod(guess-65, though-66)
advmod(started-70, how-67)
nsubj(started-70, it-68)
advmod(started-70, all-69)
ccomp(guess-65, started-70)
nsubj(care-76, I-73)
aux(care-76, do-74)
neg(care-76, n't-75)
conj_and(is-2, care-76)
advmod(started-82, how-77)
dep(how-77, or-78)
dep(how-77, why-79)
nsubj(started-82, it-80)
advmod(started-82, all-81)
advcl(care-76, started-82)
ccomp(care-76, started-82)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (JJ same) (NN way))
        (, ,)
        (NP
          (NP (PRP we))
          (PP (IN as)
            (NP (NNS humans))))))
    (NP (PRP I))
    (VP (VBP believe) (RB naturally)
      (VP (VB act)
        (PP (IN in)
          (NP
            (NP (DT a) (NN manner))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ serves)
                  (NP (DT the) (`` ``) (NN pack) ('' ''))
                  (ADVP
                    (ADVP (RB even) (RB often))
                    (PP (IN at)
                      (NP (NN expense))))
                  (PP (TO to)
                    (NP (PRP ourselves))))))))))
    (. .)))

det(way-4, the-2)
amod(way-4, same-3)
prep_in(believe-10, way-4)
appos(way-4, we-6)
prep_as(we-6, humans-8)
nsubj(believe-10, I-9)
root(ROOT-0, believe-10)
advmod(believe-10, naturally-11)
dep(believe-10, act-12)
det(manner-15, a-14)
prep_in(act-12, manner-15)
nsubj(serves-17, manner-15)
rcmod(manner-15, serves-17)
det(pack-20, the-18)
dobj(serves-17, pack-20)
advmod(often-23, even-22)
advmod(serves-17, often-23)
prep_at(often-23, expense-25)
prep_to(serves-17, ourselves-27)

(ROOT
  (S
    (NP (PRP$ My) (JJ only) (NN point))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ unnecessary))))))
    (. .)))

poss(point-3, My-1)
amod(point-3, only-2)
nsubj(is-4, point-3)
root(ROOT-0, is-4)
complm(unnecessary-8, that-5)
nsubj(unnecessary-8, it-6)
cop(unnecessary-8, is-7)
ccomp(is-4, unnecessary-8)

(ROOT
  (S
    (NP
      (NP (DT Those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP remain)
            (SBAR
              (S
                (PP (IN within)
                  (NP
                    (NP (DT this) (NN norm))
                    (PP (IN of)
                      (NP (NN pack) (NN behavior)))))
                (NP (PRP we))
                (VP (VBP call)
                  (S
                    (ADJP (`` ``) (JJ good) ('' ''))
                    (NP
                      (NP (DT those))
                      (PP (IN without)
                        (NP (PRP we))))))))))))
    (VP (VBP call)
      (ADJP (`` ``) (JJ evil) ('' '')))
    (. .)))

nsubj(remain-3, Those-1)
nsubj(call-18, Those-1)
rcmod(Those-1, remain-3)
det(norm-6, this-5)
prep_within(call-11, norm-6)
nn(behavior-9, pack-8)
prep_of(norm-6, behavior-9)
nsubj(call-11, we-10)
ccomp(remain-3, call-11)
acomp(call-11, good-13)
dep(good-13, those-15)
prep_without(those-15, we-17)
root(ROOT-0, call-18)
acomp(call-18, evil-20)

(ROOT
  (S
    (S
      (VP (VBG Being)
        (ADJP
          (ADJP (JJ brighter))
          (CC and)
          (ADJP (RBR more) (JJ complex)))
        (PP (IN than)
          (NP
            (NP
              (NP (NNS dogs))
              (CC or)
              (NP (DT any) (JJ other) (NN pack) (NN animal)))
            (, ,)
            (PP (IN of)
              (NP (NN course)))))))
    (NP (DT this) (NN instinct))
    (PP (IN within)
      (NP (PRP ourselves)))
    (VP (VBZ becomes)
      (ADJP (JJ complex)))
    (. .)))

cop(brighter-2, Being-1)
dep(complex-21, brighter-2)
advmod(complex-5, more-4)
conj_and(brighter-2, complex-5)
dep(complex-21, complex-5)
prep_than(brighter-2, dogs-7)
det(animal-12, any-9)
amod(animal-12, other-10)
nn(animal-12, pack-11)
prep_than(brighter-2, animal-12)
conj_or(dogs-7, animal-12)
prep_of(dogs-7, course-15)
det(instinct-17, this-16)
nsubj(complex-21, instinct-17)
prep_within(complex-21, ourselves-19)
cop(complex-21, becomes-20)
root(ROOT-0, complex-21)

(ROOT
  (S (CC But)
    (NP (JJ natural)
      (CC and)
      (NN observable))
    (VP (VBD none)
      (NP (DT the) (JJR less))
      (PP (IN with)
        (CC or)
        (IN without)
        (NP
          (NP (DT any) (NN type))
          (PP (IN of)
            (NP (NN creator) (CD .2))))))
    (. .)))

cc(none-5, But-1)
nsubj(none-5, natural-2)
nsubj(none-5', natural-2)
conj_and(natural-2, observable-4)
nsubj(none-5, observable-4)
root(ROOT-0, none-5)
conj_or(none-5, none-5')
det(less-7, the-6)
dobj(none-5, less-7)
det(type-12, any-11)
prep_with(none-5, type-12)
prep_without(none-5', type-12)
prep_of(type-12, creator-14)
num(creator-14, .2-15)

(ROOT
  (S
    (ADVP (JJ True))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP (DT a) (NN creator)))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB make)
        (NP (NN sense))
        (S
          (VP (TO to)
            (VP (VB find)
              (NP
                (NP (PRP$ our) (NN purpose))
                (PP (IN of)
                  (NP (NN creation))))
              (, ,)
              (SBAR (RB even) (IN if)
                (S
                  (NP
                    (NP (PRP$ our) (NN purpose))
                    (PP (IN for)
                      (S
                        (VP (VBG being)
                          (VP (VBN created))))))
                  (VP (VBD was)
                    (ADVP (RB strictly))
                    (PP (IN for)
                      (NP (PRP$ his) (NN amusement)))))))))))
    (. .)))

advmod(make-11, True-1)
mark(was-5, if-3)
expl(was-5, there-4)
advcl(make-11, was-5)
det(creator-7, a-6)
nsubj(was-5, creator-7)
nsubj(make-11, it-9)
aux(make-11, would-10)
root(ROOT-0, make-11)
dobj(make-11, sense-12)
aux(find-14, to-13)
xcomp(make-11, find-14)
poss(purpose-16, our-15)
dobj(find-14, purpose-16)
prep_of(purpose-16, creation-18)
advmod(was-27, even-20)
dep(was-27, if-21)
poss(purpose-23, our-22)
nsubj(was-27, purpose-23)
auxpass(created-26, being-25)
prepc_for(purpose-23, created-26)
dep(find-14, was-27)
advmod(was-27, strictly-28)
poss(amusement-31, his-30)
prep_for(was-27, amusement-31)

