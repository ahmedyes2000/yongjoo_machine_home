(ROOT
  (S
    (SBAR (RB Even) (IN though)
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (PP (IN against)
            (NP (JJ abrahimic) (NNS religions))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB still))
    (VP
      (VP (VB respect)
        (NP (PRP them)))
      (CC and)
      (VP (VB find)
        (S
          (NP (PRP it))
          (ADJP (JJ insulting)))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP 're)
              (VP (VBN thought)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (RB as) (JJ deranged)
                        (PP (IN as)
                          (NP (NNS cults)))))))))))))
    (. .)))

advmod('m-4, Even-1)
dep('m-4, though-2)
nsubj('m-4, I-3)
advcl(respect-11, 'm-4)
amod(religions-7, abrahimic-6)
prep_against('m-4, religions-7)
nsubj(respect-11, I-9)
nsubj(find-14, I-9)
advmod(respect-11, still-10)
root(ROOT-0, respect-11)
dobj(respect-11, them-12)
conj_and(respect-11, find-14)
nsubj(insulting-16, it-15)
xcomp(find-14, insulting-16)
complm(thought-20, that-17)
nsubjpass(thought-20, they-18)
xsubj(deranged-24, they-18)
auxpass(thought-20, 're-19)
ccomp(find-14, thought-20)
aux(deranged-24, to-21)
cop(deranged-24, be-22)
advmod(deranged-24, as-23)
xcomp(thought-20, deranged-24)
prep_as(deranged-24, cults-26)

(ROOT
  (S
    (ADVP (RB Obviously))
    (NP (PRP you))
    (VP (MD should)
      (VP (VB do)
        (NP (DT the) (JJ same))
        (SBAR
          (WHADVP (WRB when))
          (S
            (VP (VBG choosing)
              (NP (PRP$ your) (NN religion)))))))
    (. .)))

advmod(do-4, Obviously-1)
nsubj(do-4, you-2)
aux(do-4, should-3)
root(ROOT-0, do-4)
det(same-6, the-5)
dobj(do-4, same-6)
advmod(choosing-8, when-7)
advcl(do-4, choosing-8)
poss(religion-10, your-9)
dobj(choosing-8, religion-10)

(ROOT
  (NP (NNS transvestites) (. ?)))

root(ROOT-0, transvestites-1)

(ROOT
  (NP (NNS transexuals) (. ?)))

root(ROOT-0, transexuals-1)

(ROOT
  (FRAG
    (NP (NN zoophilia))
    (. ?)))

root(ROOT-0, zoophilia-1)

(ROOT
  (FRAG
    (NP (NN necrophilia))
    (. ?)))

root(ROOT-0, necrophilia-1)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB stop)
        (NP (NNS ??))))))

advmod(stop-4, Where-1)
aux(stop-4, does-2)
nsubj(stop-4, it-3)
root(ROOT-0, stop-4)
dobj(stop-4, ??-5)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is) (RB n't)
        (NP (DT a) (NN limit))
        (SBAR (IN because)
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (VP (VBG loosing)
                (NP (NNS morals))
                (PP (TO to) (`` ``)
                  (NP (NN science))
                  ('' ''))))))))
    (CC or)
    (S
      (NP (FW i))
      (VP (MD would)
        (VP (VB say)
          (NP (`` ``) (NN freedom) ('' '')))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(is-2, n't-3)
det(limit-5, a-4)
nsubj(is-2, limit-5)
mark(loosing-9, because-6)
nsubj(loosing-9, we-7)
aux(loosing-9, 're-8)
advcl(is-2, loosing-9)
dobj(loosing-9, morals-10)
prep_to(loosing-9, science-13)
nsubj(say-18, i-16)
aux(say-18, would-17)
conj_or(is-2, say-18)
dobj(say-18, freedom-20)

(ROOT
  (S
    (ADVP (RB Right) (RB now))
    (, ,)
    (S
      (NP (NN zoophilia))
      (VP (MD might)
        (VP
          (VP (VB be)
            (VP (VBN looked)
              (PRT (RP down))
              (PP (RB upon))))
          (, ,)
          (CC but)
          (VP (VB give)
            (NP (PRP it))
            (NP (DT a) (JJ few) (NNS years))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD will)
        (VP (VB be)
          (NP
            (NP (NN today) (POS 's))
            (NN transexuality)))))
    (. .)))

advmod(now-2, Right-1)
advmod(looked-7, now-2)
nsubjpass(looked-7, zoophilia-4)
nsubj(give-12, zoophilia-4)
aux(looked-7, might-5)
auxpass(looked-7, be-6)
root(ROOT-0, looked-7)
prt(looked-7, down-8)
prep(looked-7, upon-9)
conj_but(looked-7, give-12)
dobj(give-12, it-13)
det(years-16, a-14)
amod(years-16, few-15)
tmod(give-12, years-16)
nsubj(transexuality-23, it-18)
aux(transexuality-23, will-19)
cop(transexuality-23, be-20)
poss(transexuality-23, today-21)
conj_and(looked-7, transexuality-23)

(ROOT
  (S
    (NP (JJ Understand) (DT that) (NN freedom))
    (VP (VBZ is) (RB n't)
      (ADVP (RB always))
      (NP (DT a) (JJ good) (NN thing)))
    (. .)))

amod(freedom-3, Understand-1)
det(freedom-3, that-2)
nsubj(thing-9, freedom-3)
cop(thing-9, is-4)
neg(thing-9, n't-5)
advmod(thing-9, always-6)
det(thing-9, a-7)
amod(thing-9, good-8)
root(ROOT-0, thing-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ comes)
      (PP (IN with)
        (NP
          (NP (PRP it) (POS 's))
          (NNS negatives))))
    (. .)))

nsubj(comes-2, It-1)
root(ROOT-0, comes-2)
poss(negatives-6, it-4)
prep_with(comes-2, negatives-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (ADJP (JJ right)
        (PP (IN about)
          (NP (DT that) (NNP Jesus) (NN camp) (NN thing)))))
    (. .)))

nsubj(right-3, You-1)
cop(right-3, 're-2)
root(ROOT-0, right-3)
det(thing-8, that-5)
nn(thing-8, Jesus-6)
nn(thing-8, camp-7)
prep_about(right-3, thing-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have) (RB n't)
      (ADVP (RB really))
      (VP (VBN got)
        (NP (DT a) (NN problem))
        (PP (IN with)
          (NP
            (NP (NNS athiests))
            (PP (IN except)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP they))
                  (VP (VBP think)
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (VBP 're)
                          (ADJP (RB intellectually) (JJ superior)
                            (SBAR (IN because)
                              (S
                                (NP (PRP they))
                                (VP (VBP 're)
                                  (ADJP (JJ athiest)))))))))))))))))
    (. .)))

nsubj(got-5, I-1)
aux(got-5, have-2)
neg(got-5, n't-3)
advmod(got-5, really-4)
root(ROOT-0, got-5)
det(problem-7, a-6)
dobj(got-5, problem-7)
prep_with(got-5, athiests-9)
advmod(think-13, when-11)
nsubj(think-13, they-12)
prepc_except(athiests-9, think-13)
nsubj(superior-17, they-14)
cop(superior-17, 're-15)
advmod(superior-17, intellectually-16)
ccomp(think-13, superior-17)
mark(athiest-21, because-18)
nsubj(athiest-21, they-19)
cop(athiest-21, 're-20)
ccomp(superior-17, athiest-21)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ is)
        (VP (VBG brainwashing))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP
              (NP (DT a) (NN lot))
              (PP (IN of)
                (NP (NNS Christians))))
            (S
              (S
                (NP (PRP themselves))
                (VP (MD would)
                  (VP (VB be)
                    (PP (IN against)
                      (NP (PRP it))))))
              (, ,)
              (CC but)
              (S
                (S
                  (NP (PRP it))
                  (VP (VBZ is) (RB not)
                    (NP
                      (NP (NNP God))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBZ inhibits)
                            (NP (DT the) (NN ability)
                              (S
                                (VP (TO to)
                                  (VP (VB decide)
                                    (PP (IN for)
                                      (NP (NNS yourselves)))))))))))))
                (, ,)
                (CC but)
                (S
                  (NP (PRP he))
                  (ADVP (RB definately))
                  (VP (VBZ gives)
                    (NP (DT the) (JJS best) (NN path))))))
            (CC and)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (SBAR (IN for)
                  (S
                    (NP (PRP us))
                    (VP (TO to)
                      (VP (VB decide)
                        (SBAR (IN whether)
                          (CC or)
                          (RB not)
                          (S
                            (S
                              (VP (TO to)
                                (VP
                                  (VP (VB take)
                                    (NP (PRP it)))
                                  (, ,)
                                  (CC but)
                                  (VP
                                    (PP (IN in)
                                      (NP (DT the) (NN end) (NN karma)))))))
                            (ADVP (RB always))
                            (VP (VBZ comes)
                              (ADVP (RB back) (RB around)))))))))))))))
    (. .)))

nsubj(brainwashing-3, That-1)
aux(brainwashing-3, is-2)
root(ROOT-0, brainwashing-3)
nsubj(think-6, I-5)
conj_and(brainwashing-3, think-6)
det(lot-8, a-7)
dep(be-13, lot-8)
prep_of(lot-8, Christians-10)
nsubj(be-13, themselves-11)
aux(be-13, would-12)
dep(think-6, be-13)
prep_against(be-13, it-15)
nsubj(God-21, it-18)
cop(God-21, is-19)
neg(God-21, not-20)
dep(think-6, God-21)
conj_but(be-13, God-21)
nsubj(inhibits-23, God-21)
rcmod(God-21, inhibits-23)
det(ability-25, the-24)
dobj(inhibits-23, ability-25)
aux(decide-27, to-26)
infmod(ability-25, decide-27)
prep_for(decide-27, yourselves-29)
nsubj(gives-34, he-32)
advmod(gives-34, definately-33)
conj_but(be-13, gives-34)
conj_but(God-21, gives-34)
nsubj(inhibits-23, gives-34)
det(path-37, the-35)
amod(path-37, best-36)
dobj(gives-34, path-37)
nsubj(is-40, it-39)
dep(think-6, is-40)
conj_and(be-13, is-40)
mark(decide-44, for-41)
nsubj(decide-44, us-42)
aux(decide-44, to-43)
advcl(is-40, decide-44)
xcomp(is-40, decide-44)
complm(comes-58, whether-45)
ccomp(decide-44, not-47)
conj_or(comes-58, not-47)
aux(take-49, to-48)
csubj(comes-58, take-49)
dobj(take-49, it-50)
conj_but(take-49, in-53)
csubj(comes-58, in-53)
det(karma-56, the-54)
nn(karma-56, end-55)
pobj(in-53, karma-56)
advmod(comes-58, always-57)
ccomp(decide-44, comes-58)
advmod(around-60, back-59)
advmod(comes-58, around-60)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (VP (VBN lived)
            (NP (DT a) (JJ good) (NN life))))))
    (PRN (-LRB- -LRB-)
      (PP (IN whether))
      (PRN (CC or)
        (ADJP (RB not)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP believe)
                (PP (IN in)
                  (NP (NNP God))))))))
      (-RRB- -RRB-))
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB be)
          (VP (VBN rewarded)))))
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN lived)
              (NP (DT a) (JJ bad) (NN life))))))
      (PRN (-LRB- -LRB-)
        (PP (IN whether))
        (PRN (CC or)
          (ADJP (RB not)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP believe)
                  (PP (IN in)
                    (NP (NNP God))))))))
        (-RRB- -RRB-))
      (NP (PRP you))
      (VP (MD will)
        (VP (VB be)
          (VP (VBN punished)))))
    (. .)))

mark(lived-4, If-1)
nsubj(lived-4, you-2)
aux(lived-4, have-3)
advcl(rewarded-20, lived-4)
det(life-7, a-5)
amod(life-7, good-6)
dobj(lived-4, life-7)
dep(rewarded-20, whether-9)
dep(not-11, or-10)
dep(whether-9, not-11)
nsubj(believe-13, you-12)
dep(not-11, believe-13)
prep_in(believe-13, God-15)
nsubjpass(rewarded-20, you-17)
aux(rewarded-20, will-18)
auxpass(rewarded-20, be-19)
root(ROOT-0, rewarded-20)
mark(lived-25, if-22)
nsubj(lived-25, you-23)
aux(lived-25, have-24)
advcl(punished-41, lived-25)
det(life-28, a-26)
amod(life-28, bad-27)
dobj(lived-25, life-28)
dep(punished-41, whether-30)
dep(not-32, or-31)
dep(whether-30, not-32)
nsubj(believe-34, you-33)
dep(not-32, believe-34)
prep_in(believe-34, God-36)
nsubjpass(punished-41, you-38)
aux(punished-41, will-39)
auxpass(punished-41, be-40)
conj_and(rewarded-20, punished-41)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP (NN ignorance))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP agree)
            (UCP
              (PP (IN with)
                (NP (NNP God)))
              (CC or)
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP
                      (NP (NN faith))
                      (PP (IN in)
                        (NP
                          (NP (NNP God) (POS 's))
                          (NN word))))))))))))
    (. .)))

nsubj(ignorance-4, It-1)
cop(ignorance-4, 's-2)
neg(ignorance-4, not-3)
root(ROOT-0, ignorance-4)
mark(agree-7, if-5)
nsubj(agree-7, you-6)
advcl(ignorance-4, agree-7)
dep(agree-7, with-8)
pobj(with-8, God-9)
aux(have-12, to-11)
dep(agree-7, have-12)
conj_or(with-8, have-12)
dobj(have-12, faith-13)
poss(word-17, God-15)
prep_in(faith-13, word-17)

(ROOT
  (S
    (VP (VB Take)
      (NP (PRP me))
      (PP (IN for)
        (NP (NN example))))
    (. .)))

root(ROOT-0, Take-1)
dobj(Take-1, me-2)
prep_for(Take-1, example-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (MD would)
              (VP (VB live)
                (PP (IN in)
                  (NP
                    (NP (DT a)
                      (ADJP (RB much) (JJR better))
                      (NN world))
                    (PP (IN without)
                      (NP (NN alcohol)))))))))))
    (, ,)
    (CC yet)
    (S
      (NP (PRP I))
      (VP (VBP drink)
        (S
          (NP (PRP it))
          (NP (PRP myself)))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
complm(live-6, that-3)
nsubj(live-6, we-4)
aux(live-6, would-5)
ccomp(know-2, live-6)
det(world-11, a-8)
advmod(better-10, much-9)
amod(world-11, better-10)
prep_in(live-6, world-11)
prep_without(world-11, alcohol-13)
nsubj(drink-17, I-16)
conj_yet(know-2, drink-17)
nsubj(myself-19, it-18)
xcomp(drink-17, myself-19)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP argue)
      (PP (IN against)
        (S
          (VP (VBG drinking)
            (NP (PRP it))))))
    (. .)))

nsubj(argue-2, People-1)
root(ROOT-0, argue-2)
prepc_against(argue-2, drinking-4)
dobj(drinking-4, it-5)

(ROOT
  (S
    (ADVP (IN At) (JJS best))
    (NP (NNS people))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD should)
            (VP (VB be)
              (ADJP (JJ drunk))
              (ADVP (RB responsibly)))))))
    (. .)))

advmod(say-4, At-1)
pobj(At-1, best-2)
nsubj(say-4, people-3)
root(ROOT-0, say-4)
nsubj(drunk-8, it-5)
aux(drunk-8, should-6)
cop(drunk-8, be-7)
ccomp(say-4, drunk-8)
advmod(drunk-8, responsibly-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB personally))
      (VP (VBP agree)
        (PP (IN with)
          (NP (DT that)))))
    (, ,)
    (CC yet)
    (S
      (PP (IN in)
        (NP (PRP$ my) (NN religion)))
      (NP (PRP you))
      (VP (MD should) (RB n't)
        (VP (VB drink)
          (NP (DT any)))))
    (. .)))

nsubj(agree-3, I-1)
advmod(agree-3, personally-2)
root(ROOT-0, agree-3)
prep_with(agree-3, that-5)
poss(religion-10, my-9)
prep_in(drink-14, religion-10)
nsubj(drink-14, you-11)
aux(drink-14, should-12)
neg(drink-14, n't-13)
conj_yet(agree-3, drink-14)
dobj(drink-14, any-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN had)
        (NP (JJ many) (JJ bad) (NNS experiences))
        (PP (IN with)
          (NP (NN alcohol)))))
    (. .) (. .)))

nsubj(had-3, I-1)
aux(had-3, 've-2)
root(ROOT-0, had-3)
amod(experiences-6, many-4)
amod(experiences-6, bad-5)
dobj(had-3, experiences-6)
prep_with(had-3, alcohol-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (NP
        (ADJP (RB pretty) (JJ sure))
        (NN everybody)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ has)
              (VP (VBN drunk)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ has))))))))))
    (. .)))

nsubj(everybody-5, I-1)
cop(everybody-5, 'm-2)
advmod(sure-4, pretty-3)
amod(everybody-5, sure-4)
root(ROOT-0, everybody-5)
nsubj(drunk-8, who-6)
aux(drunk-8, has-7)
ccomp(everybody-5, drunk-8)
nsubj(has-10, it-9)
ccomp(drunk-8, has-10)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (VP (VBP think)
          (SBAR (IN that)
            (S
              (NP (JJ only)
                (ADJP (JJ ignorant)
                  (CC and)
                  (JJ stupid))
                (NNS people))
              (VP (VBP believe)
                (PP (IN in)
                  (NP (NNP God))))))))
      (, ,)
      (CC and)
      (S
        (NP (JJ smart) (NN person))
        (VP (VBZ knows)
          (SBAR (IN that)
            (S
              (VP (VBZ holds)
                (NP (DT no) (NN basis))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ different)
          (S
            (VP (TO to)
              (VP (VB say)
                (S (`` ``)
                  (NP (EX there))
                  (VP (VBZ is)
                    (ADJP (DT no) (JJ God) ('' '')
                      (PP (IN than)
                        (S
                          (VP (VBG saying)
                            (S (`` ``)
                              (NP (PRP I))
                              (VP (VBP do) (RB not)
                                (VP (VB believe)
                                  (PP (IN in)
                                    (NP (NNP God)))))
                              ('' ''))))))))))))))
    (. .)))

nsubj(think-2, They-1)
root(ROOT-0, think-2)
complm(believe-9, that-3)
amod(people-8, only-4)
amod(people-8, ignorant-5)
conj_and(ignorant-5, stupid-7)
amod(people-8, stupid-7)
nsubj(believe-9, people-8)
ccomp(think-2, believe-9)
prep_in(believe-9, God-11)
amod(person-15, smart-14)
nsubj(knows-16, person-15)
conj_and(think-2, knows-16)
complm(holds-18, that-17)
ccomp(knows-16, holds-18)
det(basis-20, no-19)
dobj(holds-18, basis-20)
nsubj(different-25, it-23)
cop(different-25, 's-24)
conj_but(think-2, different-25)
aux(say-27, to-26)
xcomp(different-25, say-27)
expl(is-30, there-29)
ccomp(say-27, is-30)
dep(God-32, no-31)
acomp(is-30, God-32)
prepc_than(God-32, saying-35)
nsubj(believe-40, I-37)
aux(believe-40, do-38)
neg(believe-40, not-39)
ccomp(saying-35, believe-40)
prep_in(believe-40, God-42)

(ROOT
  (SQ
    (INTJ (RB Now))
    (, ,) (MD would)
    (NP (PRP you))
    (VP (VB be)
      (ADJP (JJR better) (RP off))
      (PP
        (PP (IN without)
          (NP (NN alcohol)))
        (CC or)
        (PP (IN with)
          (NP (PRP it)))))
    (. ?)))

dep(better-6, Now-1)
aux(better-6, would-3)
nsubj(better-6, you-4)
nsubj(better-6', you-4)
cop(better-6, be-5)
root(ROOT-0, better-6)
conj_or(better-6, better-6')
dep(better-6, off-7)
prep_without(better-6, alcohol-9)
prep_with(better-6', it-12)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP SAY)
        (PP (IN without)
          (NP (PRP it))))
      (, ,)
      (CC yet)
      (VP (VBP ACT)
        (PP (IN with)
          (NP (PRP it)))))
    (. .)))

nsubj(SAY-2, I-1)
nsubj(ACT-7, I-1)
root(ROOT-0, SAY-2)
prep_without(SAY-2, it-4)
conj_yet(SAY-2, ACT-7)
prep_with(ACT-7, it-9)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (ADVP (RB just))
        (SBAR
          (S
            (NP (NNP God))
            (VP (VBD said)
              (ADVP (RB so)))))))
    (: ...)
    (CC but)
    (S
      (NP (PRP He))
      (VP (VBZ is)
        (ADJP (JJ right))))
    (. ?)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
neg('s-2, not-3)
advmod('s-2, just-4)
nsubj(said-6, God-5)
ccomp('s-2, said-6)
advmod(said-6, so-7)
nsubj(right-12, He-10)
cop(right-12, is-11)
conj_but('s-2, right-12)

(ROOT
  (NP
    (NP (JJ Same))
    (PP (IN with)
      (NP
        (NP (NN smoking))
        (PRN (-LRB- -LRB-)
          (SBAR (IN except)
            (S
              (NP (PRP I))
              (VP (VBP do) (RB n't)
                (ADVP (RB really))
                (VP (VB smoke)))))
          (-RRB- -RRB-))))
    (. .)))

root(ROOT-0, Same-1)
prep_with(Same-1, smoking-3)
mark(smoke-10, except-5)
nsubj(smoke-10, I-6)
aux(smoke-10, do-7)
neg(smoke-10, n't-8)
advmod(smoke-10, really-9)
dep(smoking-3, smoke-10)

(ROOT
  (S
    (NP (JJ Same))
    (VP (VBZ goes)
      (PP
        (PP (TO to)
          (NP
            (NP (NNS theists))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP say)
                  (S (`` ``)
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP (NNP God)))
                    ('' '')))))))
        (RB rather) (IN than)
        (S
          (VP (VBG saying)
            (S (`` ``)
              (NP (PRP I))
              (VP (VBP believe)
                (PP (IN in)
                  (NP (NNP God))))
              ('' ''))))))
    (. .)))

nsubj(goes-2, Same-1)
root(ROOT-0, goes-2)
prep_to(goes-2, theists-4)
nsubj(say-6, theists-4)
rcmod(theists-4, say-6)
expl(is-9, there-8)
ccomp(say-6, is-9)
nsubj(is-9, God-10)
advmod(goes-2, rather-12)
prepc_than(goes-2, saying-14)
nsubj(believe-17, I-16)
ccomp(saying-14, believe-17)
prep_in(believe-17, God-19)

(ROOT
  (S
    (ADVP (RB Thing)
      (PP (IN about)
        (S
          (VP (VBG being)
            (ADJP (RBR more) (VBN educated))))))
    (PRN (, ,)
      (S
        (NP (PRP it))
        (VP (VBZ does) (RB n't)
          (VP (VB mean)
            (NP
              (NP (JJR more) (JJ common) (NN sense))
              (, ,)
              (SBAR
                (WHNP
                  (WHNP (WDT which))
                  (WHPP (IN in)
                    (WHNP (WDT that) (NN video))))
                (S
                  (NP (PRP you))
                  (VP (VBD showed)
                    (NP (PRP yourself)))))))))
      (, ,))
    (NP (NNS people))
    (VP (VBP are)
      (VP (VBG loosing)
        (NP (DT these) (NNS days))))
    (. .)))

advmod(loosing-25, Thing-1)
auxpass(educated-5, being-3)
advmod(educated-5, more-4)
prepc_about(Thing-1, educated-5)
nsubj(mean-10, it-7)
aux(mean-10, does-8)
neg(mean-10, n't-9)
parataxis(loosing-25, mean-10)
amod(sense-13, more-11)
amod(sense-13, common-12)
dobj(mean-10, sense-13)
det(video-18, sense-13)
dobj(showed-20, sense-13)
rel(showed-20, which-15)
prep_in(which-15, video-18)
nsubj(showed-20, you-19)
rcmod(sense-13, showed-20)
dobj(showed-20, yourself-21)
nsubj(loosing-25, people-23)
aux(loosing-25, are-24)
root(ROOT-0, loosing-25)
det(days-27, these-26)
tmod(loosing-25, days-27)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB say)
          (PP (IN in)
            (NP
              (NP (NN general))
              (SBAR
                (S
                  (NP (DT the) (NN way) (NNS people))
                  (VP (VBP are)
                    (ADJP (VBN educated)))))
              (, ,)
              (VP (VBN raised)
                (NP (DT these) (NNS days))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP
          (ADJP (RB much) (JJ common))
          (NN sense))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, would-2)
ccomp(have-19, say-3)
prep_in(say-3, general-5)
det(people-8, the-6)
nn(people-8, way-7)
nsubjpass(educated-10, people-8)
auxpass(educated-10, are-9)
rcmod(general-5, educated-10)
partmod(general-5, raised-12)
det(days-14, these-13)
tmod(raised-12, days-14)
nsubj(have-19, they-16)
aux(have-19, do-17)
neg(have-19, n't-18)
root(ROOT-0, have-19)
advmod(common-21, much-20)
amod(sense-22, common-21)
dobj(have-19, sense-22)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP (PRP I))
        (VP (MD would)
          (VP (VB say)))))
    (VP (VBZ is)
      (ADJP (RBR more) (JJ important)
        (PP (IN than)
          (NP
            (NP (DT any) (NN education))
            (PP (IN in)
              (NP (DT the) (NN world)))))))
    (. .)))

complm(say-4, That-1)
nsubj(say-4, I-2)
aux(say-4, would-3)
csubj(important-7, say-4)
cop(important-7, is-5)
advmod(important-7, more-6)
root(ROOT-0, important-7)
det(education-10, any-9)
prep_than(important-7, education-10)
det(world-13, the-12)
prep_in(education-10, world-13)

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ My) (NN argument))
        (PP (IN about)
          (NP
            (NP (DT the) (JJ extra) (JJ inter-species) (NN breeding))
            (, ,)
            (NP (NN part) (NN lion) (NN shit)))))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP
                  (NP
                    (NP (NN today) (POS 's))
                    (NN mentality))
                  (PP (IN of) (`` ``)
                    (SBAR (IN if)
                      (S
                        (S
                          (NP (PRP he))
                          (VP (VBZ wants)
                            (PP (TO to))))
                        (, ,) (RB then)
                        (S
                          (NP (PRP he))
                          (VP (MD should)))))
                    ('' '')))))))))
    (CC or)
    (`` ``)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBZ does) (RB n't))))
      (VP (VBP hurt)
        (NP (NN anybody))))
    (: ...)))

poss(argument-2, My-1)
nsubj(is-12, argument-2)
xsubj(do-14, argument-2)
det(breeding-7, the-4)
amod(breeding-7, extra-5)
amod(breeding-7, inter-species-6)
prep_about(argument-2, breeding-7)
nn(shit-11, part-9)
nn(shit-11, lion-10)
appos(breeding-7, shit-11)
root(ROOT-0, is-12)
aux(do-14, to-13)
xcomp(is-12, do-14)
poss(mentality-18, today-16)
prep_with(do-14, mentality-18)
prep(mentality-18, of-19)
mark(wants-23, if-21)
nsubj(wants-23, he-22)
dep(of-19, wants-23)
prep(wants-23, to-24)
advmod(wants-23, then-26)
nsubj(should-28, he-27)
dep(wants-23, should-28)
mark(does-34, if-32)
nsubj(does-34, it-33)
csubj(hurt-36, does-34)
neg(does-34, n't-35)
conj_or(is-12, hurt-36)
dobj(hurt-36, anybody-37)

(ROOT
  (S
    (VP (VB '')
      (NP (FW etc.)))
    (. .)))


(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ downward) (NN spiral))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD will)
              (ADVP (RB only))
              (VP (VB lead)
                (ADVP
                  (ADVP (RBR further))
                  (CC and)
                  (ADVP (RBR further)))
                (PP (IN from)
                  (NP (DT the) (JJ strict)))
                (`` ``)
                (SQ
                  (NP (NN man)
                    (CC and)
                    (NN woman))
                  (VP (VB have)
                    (NP
                      (NP (NN sex))
                      (PP (IN for)
                        (NP (NNS kids))))))
                ('' '')))))))
    (. .)))

nsubj(spiral-5, It-1)
cop(spiral-5, 's-2)
det(spiral-5, a-3)
amod(spiral-5, downward-4)
root(ROOT-0, spiral-5)
nsubj(lead-9, spiral-5)
aux(lead-9, will-7)
advmod(lead-9, only-8)
rcmod(spiral-5, lead-9)
advmod(lead-9, further-10)
advmod(lead-9, further-12)
conj_and(further-10, further-12)
det(strict-15, the-14)
prep_from(lead-9, strict-15)
nsubj(have-20, man-17)
conj_and(man-17, woman-19)
nsubj(have-20, woman-19)
dep(lead-9, have-20)
dobj(have-20, sex-21)
prep_for(sex-21, kids-23)

(ROOT
  (S
    (NP
      (NP (DT A) (NN bit))
      (PP (IN of)
        (NP (NN leeway))))
    (VP (VBZ is)
      (ADJP (JJ ok)))
    (. .)))

det(bit-2, A-1)
nsubj(ok-6, bit-2)
prep_of(bit-2, leeway-4)
cop(ok-6, is-5)
root(ROOT-0, ok-6)

(ROOT
  (FRAG
    (FRAG (CC But)
      (PP (IN in)
        (NP (JJ todays) (NN society))))
    (: ...)
    (FRAG (RB homosexuals))
    (. ?)))

root(ROOT-0, But-1)
dep(But-1, in-2)
amod(society-4, todays-3)
pobj(in-2, society-4)
dep(But-1, homosexuals-6)

