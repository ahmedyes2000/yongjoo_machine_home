(ROOT
  (S
    (S
      (NP (NNP God))
      (VP (MD can) (RB not)
        (VP
          (VP (VB help)
            (NP (PRP you)))
          (CC and)
          (VP (VB bring)
            (NP (PRP you))
            (PP (TO to)
              (NP (NN heaven)))))))
    (, ,)
    (NP (PRP he))
    (VP (MD can)
      (ADVP (RB only))
      (VP
        (VP (VB guide)
          (NP (PRP you)))
        (CC and)
        (VP (VB show)
          (NP (PRP you)))
        (NP (DT the) (NN path))))
    (. .)))

nsubj(help-4, God-1)
nsubj(bring-7, God-1)
aux(help-4, can-2)
neg(help-4, not-3)
ccomp(guide-15, help-4)
dobj(help-4, you-5)
conj_and(help-4, bring-7)
ccomp(guide-15, bring-7)
dobj(bring-7, you-8)
prep_to(bring-7, heaven-10)
nsubj(guide-15, he-12)
nsubj(show-18, he-12)
aux(guide-15, can-13)
advmod(guide-15, only-14)
root(ROOT-0, guide-15)
dobj(guide-15, you-16)
conj_and(guide-15, show-18)
dobj(show-18, you-19)
det(path-21, the-20)
dobj(guide-15, path-21)

(ROOT
  (S
    (NP (NNP Guidance))
    (VP (MD will)
      (ADVP (RB only))
      (VP (VB be)
        (VP (VB help)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP do)
                (NP
                  (NP (NN something))
                  (PP (IN about)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(help-5, Guidance-1)
aux(help-5, will-2)
advmod(help-5, only-3)
aux(help-5, be-4)
root(ROOT-0, help-5)
mark(do-8, if-6)
nsubj(do-8, you-7)
advcl(help-5, do-8)
dobj(do-8, something-9)
prep_about(something-9, it-11)

(ROOT
  (S
    (FRAG (IN If) (RB not))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (NP
        (NP (NN help))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP (RB just) (DT some) (NNS instructions)
                (CC or)
                (NNS ways))
              (S
                (VP (TO to)
                  (VP (VB go)
                    (PP (TO to)
                      (NP (NN heaven)))))))))))
    (. .)))

dep(help-7, If-1)
neg(If-1, not-2)
nsubj(help-7, it-4)
cop(help-7, is-5)
neg(help-7, not-6)
root(ROOT-0, help-7)
nsubj(instructions-12, it-8)
cop(instructions-12, is-9)
advmod(instructions-12, just-10)
det(instructions-12, some-11)
rcmod(help-7, instructions-12)
rcmod(help-7, ways-14)
conj_or(instructions-12, ways-14)
aux(go-16, to-15)
xcomp(instructions-12, go-16)
prep_to(go-16, heaven-18)

(ROOT
  (S
    (NP
      (NP (NNP God))
      (VP (VBG bringing)
        (NP (PRP you))
        (PP (TO to)
          (NP (NN heaven)))))
    (VP (VBZ is)
      (VP (VBN called)
        (NP (JJ direct) (NN help))
        (SBAR (IN whereas)
          (S
            (NP
              (NP (NN god))
              (VP (VBG showing)
                (NP (PRP you))
                (NP
                  (NP (NNS directions))
                  (PP (TO to)
                    (NP (NN heaven))))))
            (VP (VBZ is)
              (VP (VBN called)
                (NP (JJ indirect) (NN help))))))))
    (. .)))

nsubjpass(called-7, God-1)
partmod(God-1, bringing-2)
dobj(bringing-2, you-3)
prep_to(bringing-2, heaven-5)
auxpass(called-7, is-6)
root(ROOT-0, called-7)
amod(help-9, direct-8)
dobj(called-7, help-9)
mark(called-18, whereas-10)
nsubjpass(called-18, god-11)
partmod(god-11, showing-12)
iobj(showing-12, you-13)
dobj(showing-12, directions-14)
prep_to(directions-14, heaven-16)
auxpass(called-18, is-17)
advcl(called-7, called-18)
amod(help-20, indirect-19)
dobj(called-18, help-20)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT a) (NN difference)))
    (. .) (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(difference-4, a-3)
nsubj(is-2, difference-4)

