(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (`` ``) (VB god) ('' '')))
    (. ?)))

nsubj(god-3, What-1)
root(ROOT-0, god-3)

(ROOT
  (S
    (NP
      (NP (NNP \/) (NNP \/) (-RRB- -RRB-) (NNP Prove))
      (NP (CD one)))
    (VP (VBZ exists))
    (. .)))

nn(Prove-4, \/-1)
nn(Prove-4, \/-2)
nsubj(exists-6, Prove-4)
dep(Prove-4, one-5)
root(ROOT-0, exists-6)

(ROOT
  (S
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-)
        (ADVP (RB Okay)))
      (, ,)
      (SBAR (IN that)
        (S
          (VP (MD must)
            (VP (VB mean)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP are)
                    (NP (DT a) (NN pedophile))))))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
advmod(\/-1, Okay-5)
dep(mean-9, that-7)
aux(mean-9, must-8)
ccomp(\/-1, mean-9)
nsubj(pedophile-13, you-10)
cop(pedophile-13, are-11)
det(pedophile-13, a-12)
ccomp(mean-9, pedophile-13)

(ROOT
  (S
    (NP
      (NP
        (NP (`` \/) (JJ -RRB-) (NNS \/) (-RRB- -RRB-))
        (PRN (: \/)
          (NP (NNP -RRB-))
          (: \/))
        (-RRB- -RRB-))
      (ADVP (RB Now)))
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP see)
            (SBAR
              (WHADVP (WRB how)
                (ADJP (JJ stupid)))
              (S
                (NP (PRP$ your) (NN argument))
                (VP (VBZ is))))))))
    (. ?)))

punct(\/-3, \/-1)
nsubj(do-10, \/-3)
punct(-RRB--6, \/-5)
punct(-RRB--6, \/-7)
advmod(\/-3, Now-9)
root(ROOT-0, do-10)
nsubj(see-12, you-11)
ccomp(do-10, see-12)
advmod(is-17, how-13)
dep(how-13, stupid-14)
poss(argument-16, your-15)
nsubj(is-17, argument-16)
ccomp(see-12, is-17)

(ROOT
  (S
    (NP (DT All) (NNS propositions))
    (VP (VBP are)
      (ADJP (JJ false)
        (SBAR (IN until)
          (S
            (VP (VBN proven)
              (S
                (ADJP (JJ true)))
              (, ,)
              (PP (VBG including)
                (NP (PRP$ your) (NN mythical) (`` ``) (NN god) ('' ''))))))))
    (. .)))

det(propositions-2, All-1)
nsubj(false-4, propositions-2)
cop(false-4, are-3)
root(ROOT-0, false-4)
mark(proven-6, until-5)
ccomp(false-4, proven-6)
acomp(proven-6, true-7)
poss(god-13, your-10)
nn(god-13, mythical-11)
prep_including(proven-6, god-13)

(ROOT
  (S
    (SINV
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-))
      (NP
        (NP (PRP You))
        (SBAR
          (S
            (VP (VBP 're)
              (ADJP (JJ free)
                (S
                  (VP (TO to)
                    (VP (VB believe)
                      (NP (PRP it))
                      (SBAR
                        (WHNP (DT all))
                        (S
                          (NP (PRP you))
                          (VP (VBP want)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (NN nobody))
      (VP (VBZ has)
        (ADVP (RB ever))
        (VP (VBN proven)
          (NP (PRP it)))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
nsubj(\/-1, You-5)
cop(free-7, 're-6)
rcmod(You-5, free-7)
aux(believe-9, to-8)
xcomp(free-7, believe-9)
dobj(believe-9, it-10)
dobj(want-13, all-11)
nsubj(want-13, you-12)
dep(believe-9, want-13)
nsubj(proven-19, nobody-16)
aux(proven-19, has-17)
advmod(proven-19, ever-18)
conj_but(\/-1, proven-19)
dobj(proven-19, it-20)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (ADVP (RB just))
      (NP
        (NP
          (NP (DT a) (NN believer))
          (PP (IN in)
            (NP (JJ regurgitated) (NN fairy) (NNS tales))))
        (, ,) (RB not)
        (NP
          (NP (DT a) (NN viewer))
          (PP (IN of)
            (NP (JJ first) (NN hand) (NN experience))))))
    (. .)))

nsubj(believer-5, You-1)
cop(believer-5, 're-2)
advmod(believer-5, just-3)
det(believer-5, a-4)
root(ROOT-0, believer-5)
amod(tales-9, regurgitated-7)
nn(tales-9, fairy-8)
prep_in(believer-5, tales-9)
neg(believer-5, not-11)
det(viewer-13, a-12)
dep(believer-5, viewer-13)
amod(experience-17, first-15)
nn(experience-17, hand-16)
prep_of(viewer-13, experience-17)

(ROOT
  (S
    (PP (VBN Come)
      (PP (TO to)
        (NP
          (NP (DT the) (NN city))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP I))
              (VP
                (VP (VB live))
                (, ,)
                (VP (VB let)
                  (S
                    (NP (POS 's))
                    (VP (VB go)
                      (PP (TO to)
                        (NP (DT a) (NN hospital))))))
                (CC and)
                (VP (VB find)
                  (S
                    (NP (NN someone))
                    (ADJP (JJ dead))))))))))
    (, ,)
    (NP
      (NP (RB perhaps) (JJ decapitated) (NN <i>))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN head))
          (VP (VBN cut)
            (PRT (RP off))))
        (-RRB- -RRB-)))
    (VP (VBZ </i>)
      (PP (IN in)
        (NP (DT a) (NN car) (NN accident))))
    (. .)))

prep(</i>-28, Come-1)
pcomp(Come-1, to-2)
det(city-4, the-3)
prep_to(Come-1, city-4)
advmod(live-7, where-5)
nsubj(live-7, I-6)
nsubj(let-9, I-6)
nsubj(find-16, I-6)
rcmod(city-4, live-7)
rcmod(city-4, let-9)
conj_and(live-7, let-9)
nsubj(go-11, 's-10)
ccomp(let-9, go-11)
det(hospital-14, a-13)
prep_to(go-11, hospital-14)
rcmod(city-4, find-16)
conj_and(live-7, find-16)
nsubj(dead-18, someone-17)
xcomp(find-16, dead-18)
advmod(<i>-22, perhaps-20)
amod(<i>-22, decapitated-21)
nsubj(</i>-28, <i>-22)
dep(<i>-22, head-24)
partmod(head-24, cut-25)
prt(cut-25, off-26)
root(ROOT-0, </i>-28)
det(accident-32, a-30)
nn(accident-32, car-31)
prep_in(</i>-28, accident-32)

(ROOT
  (S
    (FRAG
      (VP
        (VP (VB \/) (-RRB- -RRB-)
          (NP (NNS \/))
          (-RRB- -RRB-))
        (SBAR (IN If)
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB bring)
                (NP (DT the) (JJ dead) (NN guy))
                (PRT (RP back))
                (PP (TO to)
                  (NP (NN life)))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB believe)))
    (. .)))

dep(believe-18, \/-1)
dobj(\/-1, \/-3)
mark(bring-8, If-5)
nsubj(bring-8, you-6)
aux(bring-8, can-7)
advcl(\/-1, bring-8)
det(guy-11, the-9)
amod(guy-11, dead-10)
dobj(bring-8, guy-11)
prt(bring-8, back-12)
prep_to(bring-8, life-14)
nsubj(believe-18, I-16)
aux(believe-18, 'll-17)
root(ROOT-0, believe-18)

(ROOT
  (S
    (VP
      (VP
        (VP (VB \/) (-RRB- -RRB-)
          (NP (NNS \/))
          (-RRB- -RRB-))
        (SBAR (IN If)
          (S
            (NP (PRP you))
            (VP (MD ca) (RB n't)
              (VP (VB bring)
                (NP (DT the) (JJ dead) (NN guy))
                (ADVP (RB back)))))))
      (, ,)
      (VP (VB get)
        (S
          (NP (PRP$ your) (`` ``) (NN god) ('' ''))
          (VP (TO to)
            (VP (VB do)
              (NP (PRP it)))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
mark(bring-9, If-5)
nsubj(bring-9, you-6)
aux(bring-9, ca-7)
neg(bring-9, n't-8)
advcl(\/-1, bring-9)
det(guy-12, the-10)
amod(guy-12, dead-11)
dobj(bring-9, guy-12)
advmod(bring-9, back-13)
dep(\/-1, get-15)
poss(god-18, your-16)
nsubj(do-21, god-18)
aux(do-21, to-20)
xcomp(get-15, do-21)
dobj(do-21, it-22)

(ROOT
  (S
    (FRAG
      (VP
        (VP (VB \/) (-RRB- -RRB-)
          (NP (NNS \/))
          (-RRB- -RRB-))
        (SBAR (IN If)
          (S
            (NP (PRP you))
            (VP (MD ca) (RB n't)
              (VP (VB get)
                (S
                  (NP (PRP$ your) (`` ``) (NN god) ('' ''))
                  (VP (TO to)
                    (VP (VB do)
                      (NP (PRP it)))))))))))
    (, ,)
    (S
      (ADVP (RB then))
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (VP (VB exist))))
    (. .)))

dep(exist-22, \/-1)
dobj(\/-1, \/-3)
mark(get-9, If-5)
nsubj(get-9, you-6)
aux(get-9, ca-7)
neg(get-9, n't-8)
advcl(\/-1, get-9)
poss(god-12, your-10)
nsubj(do-15, god-12)
aux(do-15, to-14)
xcomp(get-9, do-15)
dobj(do-15, it-16)
advmod(exist-22, then-18)
nsubj(exist-22, it-19)
aux(exist-22, does-20)
neg(exist-22, n't-21)
root(ROOT-0, exist-22)

(ROOT
  (S
    (SINV
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-))
      (NP
        (NP (PRP You))
        (SBAR
          (S
            (VP (VBP 're)
              (NP
                (NP (DT the) (NN one))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ says)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (ADJP (JJ possible))))))))))))))
    (, ,)
    (CC so)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB prove)
              (NP (PRP it)))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
nsubj(\/-1, You-5)
cop(one-8, 're-6)
det(one-8, the-7)
rcmod(You-5, one-8)
nsubj(says-10, one-8)
rcmod(one-8, says-10)
nsubj(possible-13, it-11)
cop(possible-13, 's-12)
ccomp(says-10, possible-13)
nsubj(have-17, you-16)
xsubj(prove-19, you-16)
conj_so(\/-1, have-17)
aux(prove-19, to-18)
xcomp(have-17, prove-19)
dobj(prove-19, it-20)

(ROOT
  (S
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-)
        (ADVP
          (ADVP (RB <b>))
          (PRN
            (NP
              (NP (NNP Edit))
              (: :)
              (NP (NNP </b>) (NNP \/) (-RRB- -RRB-) (NNP \/)))
            (-RRB- -RRB-)))
        (VB Hey) (, ,)
        (NP (NNP Mabak)))
      (: :)
      (NP
        (NP (NNP Prove))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 're) (RB not)
              (NP (DT a) (NN pedophile)))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
advmod(\/-1, <b>-5)
dep(<b>-5, Edit-6)
nn(\/-11, </b>-8)
nn(\/-11, \/-9)
dep(Edit-6, \/-11)
dep(\/-1, Hey-13)
dobj(\/-1, Mabak-15)
dobj(\/-1, Prove-17)
nsubj(pedophile-22, you-18)
cop(pedophile-22, 're-19)
neg(pedophile-22, not-20)
det(pedophile-22, a-21)
rcmod(Prove-17, pedophile-22)

(ROOT
  (SQ
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-))
      (SBAR
        (WHNP (WP What))
        (S
          (VP (VBZ 's)
            (NP (DT that))))))
    (. ?)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
nsubj(that-7, What-5)
cop(that-7, 's-6)
ccomp(\/-1, that-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB disprove)
                    (NP (PRP it)))))
              (, ,)
              (SBAR (RB just) (IN as)
                (S
                  (NP (PRP you))
                  (VP (VBP say)
                    (SBAR
                      (S
                        (NP (`` ``) (NN god) ('' ''))
                        (VP (VBZ does) (RB n't)
                          (VP (VB have)
                            (S
                              (VP (TO to)
                                (VP (VB prove)
                                  (NP (PRP itself)))))))))))))))))
    (. ?)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
nsubj(have-6, you-3)
xsubj(disprove-8, you-3)
aux(have-6, do-4)
neg(have-6, n't-5)
ccomp(say-2, have-6)
aux(disprove-8, to-7)
xcomp(have-6, disprove-8)
dobj(disprove-8, it-9)
advmod(say-14, just-11)
dep(say-14, as-12)
nsubj(say-14, you-13)
ccomp(have-6, say-14)
nsubj(have-20, god-16)
xsubj(prove-22, god-16)
aux(have-20, does-18)
neg(have-20, n't-19)
ccomp(say-14, have-20)
aux(prove-22, to-21)
xcomp(have-20, prove-22)
dobj(prove-22, itself-23)

