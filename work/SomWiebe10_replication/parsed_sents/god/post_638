(ROOT
  (S
    (VP (VB See)
      (SBAR
        (S
          (NP (DT the) (NN problem))
          (ADVP (RB here))
          (VP (VBZ is)
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP 're)
                  (VP (VBG going)
                    (PP (IN in)
                      (NP (NNS circles)))))))))))
    (. .)))

root(ROOT-0, See-1)
det(problem-3, the-2)
nsubj(is-5, problem-3)
advmod(is-5, here-4)
ccomp(See-1, is-5)
nsubj(going-8, we-6)
aux(going-8, 're-7)
ccomp(is-5, going-8)
prep_in(going-8, circles-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (ADVP (RB already))
        (VP (VBD said)
          (SBAR
            (S
              (NP (JJ inherintly) (NNS people))
              (VP
                (VP (VBP are)
                  (ADJP (JJ good)
                    (PP (IN in)
                      (ADJP (JJ general)))))
                (CC and)
                (ADVP (RB naturally))
                (VP (VBP know)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (ADJP (JJ wrong)
                          (CC and)
                          (JJ right))))))))))))
    (CC and)
    (S
      (NP (NN religion))
      (VP (VBZ tends)
        (S
          (VP (TO to)
            (VP (VB go)
              (NP (NN side))
              (PP (IN by)
                (NP
                  (NP (NN side))
                  (PP (IN with)
                    (NP (DT that))))))))))
    (. .)))

nsubj(said-4, I-1)
aux(said-4, 've-2)
advmod(said-4, already-3)
root(ROOT-0, said-4)
amod(people-6, inherintly-5)
nsubj(good-8, people-6)
nsubj(know-13, people-6)
cop(good-8, are-7)
ccomp(said-4, good-8)
prep_in(good-8, general-10)
ccomp(said-4, naturally-12)
advmod(good-8, naturally-12)
conj_and(good-8, naturally-12)
ccomp(said-4, know-13)
conj_and(good-8, know-13)
nsubj(wrong-16, what-14)
nsubj(right-18, what-14)
cop(wrong-16, is-15)
ccomp(know-13, wrong-16)
ccomp(know-13, right-18)
conj_and(wrong-16, right-18)
nsubj(tends-21, religion-20)
xsubj(go-23, religion-20)
conj_and(said-4, tends-21)
aux(go-23, to-22)
xcomp(tends-21, go-23)
dobj(go-23, side-24)
prep_by(go-23, side-26)
prep_with(side-26, that-28)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN stated)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (MD 'll)
                (ADVP (RB never))
                (VP (VB understand)
                  (NP
                    (NP (DT the) (JJ full) (NN extent))
                    (PP (IN of)
                      (NP (PRP$ our) (NNS actions))))))))
          (CC and)
          (SBAR (RB even) (IN if)
            (S
              (NP (PRP we))
              (VP (VBP understand)
                (NP
                  (NP (DT some))
                  (PP (IN of)
                    (NP (PRP them))))))
            (. .)))))
    (. .)))

nsubj(stated-3, I-1)
aux(stated-3, 've-2)
root(ROOT-0, stated-3)
complm(understand-8, that-4)
nsubj(understand-8, we-5)
aux(understand-8, 'll-6)
neg(understand-8, never-7)
ccomp(stated-3, understand-8)
det(extent-11, the-9)
amod(extent-11, full-10)
dobj(understand-8, extent-11)
poss(actions-14, our-13)
prep_of(extent-11, actions-14)
advmod(understand-19, even-16)
dep(understand-19, if-17)
nsubj(understand-19, we-18)
ccomp(stated-3, understand-19)
conj_and(understand-8, understand-19)
dobj(understand-19, some-20)
prep_of(some-20, them-22)

(ROOT
  (SQ (VBZ is)
    (NP (PRP it))
    (ADJP (RB truly) (JJ right))
    (. ?)))

cop(right-4, is-1)
nsubj(right-4, it-2)
advmod(right-4, truly-3)
root(ROOT-0, right-4)

(ROOT
  (S
    (NP (NNP Science) (PRP itself))
    (VP (VBZ is)
      (ADJP (RB continously)
        (S
          (VP (VBG debating)
            (NP (PRP itself))))))
    (. .)))

nsubj(continously-4, Science-1)
dep(Science-1, itself-2)
cop(continously-4, is-3)
root(ROOT-0, continously-4)
dep(continously-4, debating-5)
dobj(debating-5, itself-6)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (PRP you))
        (VP (MD could)
          (VP (VB hit)
            (NP (PRP$ your) (NNS kids))))))
    (, ,)
    (S
      (ADVP (RB then))
      (NP (PRP we))
      (VP (VBP 're)
        (VP (VBN taught)
          (S (RB not)
            (VP (TO to))))))
    (: ...)
    (CC and)
    (ADVP (RB now))
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (VP (VBG growing)
          (NP (NN debate))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (MD should)
                (VP (VB hit)
                  (NP
                    (NP (PRP$ your) (NNS kids))
                    (PRN
                      (S (-LRB- -LRB-)
                        (ADVP (RB not))
                        (VP (VBZ abuse))
                        (. .)))))))))))
    (. .)))

mark(hit-4, Before-1)
nsubj(hit-4, you-2)
aux(hit-4, could-3)
advcl(taught-11, hit-4)
poss(kids-6, your-5)
dobj(hit-4, kids-6)
advmod(taught-11, then-8)
nsubjpass(taught-11, we-9)
xsubj(to-13, we-9)
auxpass(taught-11, 're-10)
root(ROOT-0, taught-11)
neg(to-13, not-12)
xcomp(taught-11, to-13)
advmod(taught-11, now-16)
conj_and(taught-11, now-16)
expl(growing-19, there-17)
aux(growing-19, 's-18)
ccomp(taught-11, growing-19)
conj_and(taught-11, growing-19)
dobj(growing-19, debate-20)
nsubj(growing-19, debate-20)
complm(hit-24, that-21)
nsubj(hit-24, you-22)
aux(hit-24, should-23)
ccomp(growing-19, hit-24)
poss(kids-26, your-25)
dobj(hit-24, kids-26)
neg(abuse-29, not-28)
dep(kids-26, abuse-29)

(ROOT
  (S
    (VP (VB hit)
      (NP (NNS -RRB-)))
    (. .)))

root(ROOT-0, hit-1)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (NN science)))
    (. .)))

nsubj(science-3, This-1)
cop(science-3, is-2)
root(ROOT-0, science-3)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (RB always))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP know)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP we))
                  (VP (VBP 're)
                    (VP (VBG doing))))))))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP know)
        (NP
          (NP (DT the) (NNS results))
          (PP (IN of)
            (NP (PRP$ our) (NNS actions))))))
    (, ,)
    (S
      (ADVP (RB however))
      (NP (PRP we))
      (VP (VBP do) (RB n't)))
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP (DT no) (NN way))
          (PP (IN of)
            (S
              (VP (VBG telling)))))))
    (. .)))

nsubj(think-3, We-1)
advmod(think-3, always-2)
root(ROOT-0, think-3)
nsubj(know-5, we-4)
ccomp(think-3, know-5)
dobj(doing-9, what-6)
nsubj(doing-9, we-7)
aux(doing-9, 're-8)
ccomp(know-5, doing-9)
nsubj(know-12, we-11)
conj_and(think-3, know-12)
det(results-14, the-13)
dobj(know-12, results-14)
poss(actions-17, our-16)
prep_of(results-14, actions-17)
advmod(do-21, however-19)
nsubj(do-21, we-20)
conj_and(think-3, do-21)
neg(do-21, n't-22)
expl('s-25, there-24)
conj_and(think-3, 's-25)
det(way-27, no-26)
nsubj('s-25, way-27)
prepc_of(way-27, telling-29)

(ROOT
  (S
    (VP
      (VP (VB Look)
        (PP (IN at)
          (NP
            (NP (DT the) (NN core))
            (PP (IN of)
              (NP (PDT all) (DT the) (NNS religions))))))
      (CC and)
      (VP (VB tell)
        (NP (PRP me))
        (SBAR (IN whether)
          (CC or)
          (RB not)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (ADJP (JJ harmful)
                (PP (TO to)
                  (NP (PRP you)
                    (CC or)
                    (NNS others))))
              (PP (IN around)
                (NP (PRP you))))))))
    (. .)))

root(ROOT-0, Look-1)
det(core-4, the-3)
prep_at(Look-1, core-4)
predet(religions-8, all-6)
det(religions-8, the-7)
prep_of(core-4, religions-8)
conj_and(Look-1, tell-10)
dobj(tell-10, me-11)
complm(harmful-17, whether-12)
ccomp(tell-10, not-14)
conj_or(harmful-17, not-14)
nsubj(harmful-17, they-15)
cop(harmful-17, are-16)
ccomp(tell-10, harmful-17)
prep_to(harmful-17, you-19)
prep_to(harmful-17, others-21)
conj_or(you-19, others-21)
prep_around(harmful-17, you-23)

(ROOT
  (SINV
    (ADVP (RB Even))
    (ADJP (JJR worse))
    (VP (VBZ is))
    (NP (DT the) (NN fact)
      (SBAR (IN that)
        (S
          (ADVP (RB again))
          (NP (PRP you))
          (VP (VBP 're)
            (NP
              (NP (DT this) (NN example))
              (PP (IN of)
                (NP
                  (NP (DT this) (NN pastor))
                  (PP (IN as)
                    (NP
                      (NP (NN something))
                      (PP (IN against)
                        (NP (NN religion))))))))))))
    (. .)))

advmod(is-3, Even-1)
dep(is-3, worse-2)
root(ROOT-0, is-3)
det(fact-5, the-4)
nsubj(is-3, fact-5)
complm(example-11, that-6)
advmod(example-11, again-7)
nsubj(example-11, you-8)
cop(example-11, 're-9)
det(example-11, this-10)
ccomp(fact-5, example-11)
det(pastor-14, this-13)
prep_of(example-11, pastor-14)
prep_as(pastor-14, something-16)
prep_against(something-16, religion-18)

(ROOT
  (SBARQ
    (WHADVP (WRB Where)
      (PP (IN in)
        (NP (DT the) (NNP Bible))))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB say)
        (S
          (VP (VB go)
            (VP (VB kill)
              (NP (DT the) (NN abortionist)))))))
    (. ?)))

advmod(say-7, Where-1)
det(Bible-4, the-3)
prep_in(Where-1, Bible-4)
aux(say-7, does-5)
nsubj(say-7, it-6)
root(ROOT-0, say-7)
ccomp(say-7, go-8)
xcomp(go-8, kill-9)
det(abortionist-11, the-10)
dobj(kill-9, abortionist-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG saying)
        (SBAR
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (PP (RB because) (IN of)
                  (NP (NN religion))))))
          (, ,)
          (CC but)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBP 're)
                (VP (VBN intwined))))))))
    (. .)))

nsubj(saying-4, I-1)
aux(saying-4, 'm-2)
neg(saying-4, not-3)
root(ROOT-0, saying-4)
nsubj('s-6, it-5)
ccomp(saying-4, 's-6)
prep_because_of('s-6, religion-9)
complm(intwined-15, that-12)
nsubjpass(intwined-15, they-13)
auxpass(intwined-15, 're-14)
ccomp(saying-4, intwined-15)
conj_but('s-6, intwined-15)

(ROOT
  (SQ (MD Would)
    (NP
      (NP (DT the) (NN majority))
      (PP (IN of)
        (NP (NNS people))))
    (VP (VB condemn)
      (NP (PRP$ his) (NNS actions)))
    (. ?)))

aux(condemn-6, Would-1)
det(majority-3, the-2)
nsubj(condemn-6, majority-3)
prep_of(majority-3, people-5)
root(ROOT-0, condemn-6)
poss(actions-8, his-7)
dobj(condemn-6, actions-8)

(ROOT
  (SQ (VBD Was)
    (NP (PRP it))
    (VP
      (VP (VBN truly)
        (PP (IN in)
          (NP
            (NP (DT the) (NN name))
            (PP (IN of)
              (NP (NNP God))))))
      (CC or)
      (VP (VBD was)
        (NP (PRP it))
        (PP (IN through)
          (NP (NN frustration)
            (CC and)
            (NN anger)))))
    (. ?)))

aux(truly-3, Was-1)
nsubj(truly-3, it-2)
root(ROOT-0, truly-3)
det(name-6, the-5)
prep_in(truly-3, name-6)
prep_of(name-6, God-8)
cop(it-11, was-10)
conj_or(truly-3, it-11)
prep_through(it-11, frustration-13)
prep_through(it-11, anger-15)
conj_and(frustration-13, anger-15)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP do)
            (S
              (NP (DT these) (NNS things))
              (NP
                (NP (NN Drug) (NNS dealers))
                (, ,)
                (VP (VBG murderers) (, ,)
                  (PRN (-LRB- -LRB-)
                    (ADVP (RB maybe))
                    (ADJP (JJ homos))
                    (-RRB- -RRB-)))
                (, ,)))))))
    (VP (VBZ gangsters)
      (NP (FW etc.)))
    (. .)))

nsubj(do-3, People-1)
nsubj(gangsters-16, People-1)
rcmod(People-1, do-3)
det(things-5, these-4)
nsubj(dealers-7, things-5)
nn(dealers-7, Drug-6)
xcomp(do-3, dealers-7)
partmod(dealers-7, murderers-9)
dep(homos-13, maybe-12)
dep(murderers-9, homos-13)
root(ROOT-0, gangsters-16)
dobj(gangsters-16, etc.-17)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB ALL))
    (VP (VBP know)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP they))
          (VP (VBP 're)
            (VP (VBG doing)
              (VP (VBZ is)
                (ADJP (JJ wrong))))))))
    (. .)))

nsubj(know-3, They-1)
advmod(know-3, ALL-2)
root(ROOT-0, know-3)
dobj(doing-7, what-4)
nsubj(doing-7, they-5)
aux(doing-7, 're-6)
ccomp(know-3, doing-7)
cop(wrong-9, is-8)
dep(doing-7, wrong-9)

(ROOT
  (NP
    (NP (DT All))
    (PP (IN of)
      (NP (PRP them)))
    (. .)))

root(ROOT-0, All-1)
prep_of(All-1, them-3)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Unless) (PRP they))
    (VP (VBP 've)
      (VP (VBN got)
        (NP (DT a) (JJ mental) (NN issue))))
    (-RRB- -RRB-) (. .)))

nsubj(got-5, Unless-2)
dep(Unless-2, they-3)
aux(got-5, 've-4)
root(ROOT-0, got-5)
det(issue-8, a-6)
amod(issue-8, mental-7)
dobj(got-5, issue-8)

(ROOT
  (S
    (NP (DT That) (NN pastor))
    (VP (VBZ knows)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP he))
          (VP (VBZ 's)
            (ADJP (VBN done)
              (SBAR
                (S
                  (VP
                    (VP (VBZ is)
                      (ADJP (JJ wrong)))
                    (: ...)
                    (CC but)
                    (VP (MD will)
                      (VP (VB defend)
                        (S
                          (NP (PRP himself))
                          (ADJP (JJ nontheless)))))))))))))
    (. .)))

det(pastor-2, That-1)
nsubj(knows-3, pastor-2)
root(ROOT-0, knows-3)
dobj(done-7, what-4)
nsubjpass(done-7, he-5)
auxpass(done-7, 's-6)
ccomp(knows-3, done-7)
cop(wrong-9, is-8)
dep(done-7, wrong-9)
aux(defend-13, will-12)
dep(done-7, defend-13)
conj_but(wrong-9, defend-13)
nsubj(nontheless-15, himself-14)
xcomp(defend-13, nontheless-15)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (MD will)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (S
                (VP (VBG killing)
                  (NP (DT the) (NN doctor))))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (NN step))
                  (PP (IN towards)
                    (S
                      (VP (VBG stopping)
                        (NP (NNS abortions))))))))))))
    (, ,)
    (ADVP (RB however))
    (S
      (NP (PRP he))
      (VP (VBZ knows)
        (SBAR (IN that)
          (S
            (S
              (VP (VBG killing)
                (NP (DT a) (NN man))))
            (VP (VBZ is)
              (ADJP (JJ wrong)))))))
    (. .)))

nsubj(say-3, He-1)
aux(say-3, will-2)
root(ROOT-0, say-3)
complm(step-10, that-4)
csubj(step-10, killing-5)
det(doctor-7, the-6)
dobj(killing-5, doctor-7)
cop(step-10, is-8)
det(step-10, a-9)
ccomp(say-3, step-10)
prepc_towards(step-10, stopping-12)
dobj(stopping-12, abortions-13)
advmod(say-3, however-15)
nsubj(knows-17, he-16)
ccomp(say-3, knows-17)
complm(wrong-23, that-18)
csubj(wrong-23, killing-19)
det(man-21, a-20)
dobj(killing-19, man-21)
cop(wrong-23, is-22)
ccomp(knows-17, wrong-23)

(ROOT
  (S
    (S
      (NP
        (NP (DT All))
        (PP (IN of)
          (NP (DT these) (NNS people))))
      (VP
        (VP (VBP know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (VBP do)
                (SBAR
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ wrong)))))))))
        (, ,)
        (CC but)
        (VP (VBP do)
          (NP (PRP it))
          (ADVP (RB anyway)))))
    (CC and)
    (S
      (NP
        (NP (JJS most))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBP say)
        (SBAR
          (S
            (NP (PRP they))
            (VP
              (VP (VBP 're)
                (ADJP (JJ religious)))
              (CC but)
              (VP (VBP do) (RB not)
                (VP (VB follow)
                  (NP (DT the) (NN religion)))))))))
    (. .)))

nsubj(know-5, All-1)
nsubj(do-13, All-1)
det(people-4, these-3)
prep_of(All-1, people-4)
root(ROOT-0, know-5)
dep(do-8, what-6)
nsubj(wrong-10, what-6)
nsubj(do-8, they-7)
ccomp(know-5, do-8)
cop(wrong-10, is-9)
ccomp(do-8, wrong-10)
conj_but(know-5, do-13)
dobj(do-13, it-14)
advmod(do-13, anyway-15)
nsubj(say-20, most-17)
prep_of(most-17, them-19)
conj_and(know-5, say-20)
nsubj(religious-23, they-21)
nsubj(follow-27, they-21)
cop(religious-23, 're-22)
ccomp(say-20, religious-23)
aux(follow-27, do-25)
neg(follow-27, not-26)
ccomp(say-20, follow-27)
conj_but(religious-23, follow-27)
det(religion-29, the-28)
dobj(follow-27, religion-29)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBP drink)
          (NP (NN alcohol)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's) (RB not)
            (ADJP (JJ right))))))
    (. .)))

advmod(drink-3, When-1)
nsubj(drink-3, I-2)
advcl(know-7, drink-3)
dobj(drink-3, alcohol-4)
nsubj(know-7, I-6)
root(ROOT-0, know-7)
nsubj(right-11, it-8)
cop(right-11, 's-9)
neg(right-11, not-10)
ccomp(know-7, right-11)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ does) (RB n't)
        (VP (VB bother)
          (NP (PRP me)))))
    (: ...)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP
                (VP (VB need)
                  (PP (TO to)))
                (, ,)
                (VP (VB have)
                  (PP (TO to)
                    (NP (FW etc.)))))))))
      (. .))
    (. .)))

nsubj(bother-4, It-1)
aux(bother-4, does-2)
neg(bother-4, n't-3)
root(ROOT-0, bother-4)
dobj(bother-4, me-5)
nsubj(know-9, I-8)
conj_but(bother-4, know-9)
complm(need-14, that-10)
nsubj(need-14, I-11)
aux(need-14, do-12)
neg(need-14, n't-13)
ccomp(know-9, need-14)
prep(need-14, to-15)
dep(need-14, have-17)
prep_to(have-17, etc.-19)

(ROOT
  (S (CC but)
    (NP (PRP I))
    (VP (VBP do))
    (. .) (. .)))

cc(do-3, but-1)
nsubj(do-3, I-2)
root(ROOT-0, do-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB also))
      (VP (VBN said)
        (PRN (-LRB- -LRB-)
          (ADVP (RB maybe))
          (ADJP (RB not)
            (PP (IN on)
              (NP (DT this) (NN debate))))
          (-RRB- -RRB-))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (JJ wrong))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (NNS people))
                  (VP (VBP do)
                    (NP (NNS things))
                    (PP (IN without)
                      (S
                        (VP
                          (VP (VBG questioning)
                            (SBAR
                              (WHADVP (RB however))
                              (S
                                (NP (PRP it))
                                (VP (VBZ does) (RB n't)
                                  (VP (VB mean)
                                    (NP (PRP you))
                                    (ADVP (RB always)))))))
                          (CC and)
                          (VP (VBG continously)
                            (NP (NN question) (NN everything))))))))))))))
    (. .)))

nsubj(said-4, I-1)
aux(said-4, 've-2)
advmod(said-4, also-3)
root(ROOT-0, said-4)
dep(not-7, maybe-6)
dep(said-4, not-7)
det(debate-10, this-9)
prep_on(not-7, debate-10)
complm(wrong-15, that-12)
nsubj(wrong-15, it-13)
cop(wrong-15, 's-14)
ccomp(said-4, wrong-15)
advmod(do-18, when-16)
nsubj(do-18, people-17)
advcl(wrong-15, do-18)
dobj(do-18, things-19)
prepc_without(do-18, questioning-21)
advmod(mean-26, however-22)
nsubj(mean-26, it-23)
aux(mean-26, does-24)
neg(mean-26, n't-25)
dep(questioning-21, mean-26)
dobj(mean-26, you-27)
advmod(mean-26, always-28)
prepc_without(do-18, continously-30)
conj_and(questioning-21, continously-30)
nn(everything-32, question-31)
dobj(continously-30, everything-32)

(ROOT
  (FRAG
    (PP (IN for)
      (NP (PRP$ my) (JJ own) (JJ selfish) (NNS reasons)))
    (. .)))

root(ROOT-0, for-1)
poss(reasons-5, my-2)
amod(reasons-5, own-3)
amod(reasons-5, selfish-4)
pobj(for-1, reasons-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (NN something))
        (SBAR (IN that)
          (FRAG
            (NP (NNS bugs))
            (NP (PRP me))
            (. .)))))
    (. .)))

nsubj(something-4, It-1)
cop(something-4, 's-2)
neg(something-4, not-3)
root(ROOT-0, something-4)
complm(bugs-6, that-5)
dep(something-4, bugs-6)
dep(bugs-6, me-7)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (RB just) (NN something) (JJ small))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP know)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD should) (RB n't)
                    (VP (VB do))))))))))
    (. .)))

nsubj(something-4, it-1)
cop(something-4, 's-2)
advmod(something-4, just-3)
root(ROOT-0, something-4)
amod(something-4, small-5)
complm(know-8, that-6)
nsubj(know-8, I-7)
dep(something-4, know-8)
nsubj(do-12, I-9)
aux(do-12, should-10)
neg(do-12, n't-11)
ccomp(know-8, do-12)

(ROOT
  (FRAG
    (NP
      (NP (JJ Same))
      (PP (IN as)
        (NP (NNS people)))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP smoke)))))
    (: ...)
    (S
      (S
        (NP (PRP they))
        (VP (VBP know)
          (SBAR
            (S
              (NP (PRP they))
              (VP (MD should) (RB n't)
                (VP (VB smoke)))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP they))
        (VP (VBP do))))
    (. .)))

root(ROOT-0, Same-1)
nsubj(smoke-5, Same-1)
prep_as(Same-1, people-3)
rcmod(Same-1, smoke-5)
nsubj(know-8, they-7)
dep(Same-1, know-8)
nsubj(smoke-12, they-9)
aux(smoke-12, should-10)
neg(smoke-12, n't-11)
ccomp(know-8, smoke-12)
nsubj(do-16, they-15)
dep(Same-1, do-16)
conj_but(know-8, do-16)

(ROOT
  (S
    (S
      (NP (NNS Atheists))
      (VP (VBP smoke)))
    (: ...)
    (S
      (ADVP (RB technically))
      (S
        (PP (VBG according)
          (PP (TO to)
            (NP (PRP you))))
        (, ,)
        (NP (PRP they))
        (VP (MD should) (RB n't)
          (PP (IN because)
            (NP (PRP they)))
          (VP (VB know)
            (NP (DT the) (NN harm))
            (SBAR
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ does)
                    (PP (TO to)
                      (NP (PRP them))))))
              (CC and)
              (SBAR (IN because)
                (S
                  (NP (PRP they))
                  (VP (VBP use)
                    (ADVP
                      (NP (JJ scientific) (NN reasoning))
                      (RB objectively)))))))))
      (, ,)
      (S
        (NP (PRP they))
        (VP (MD would) (RB n't)
          (VP (VB smoke)))))
    (. .)))

nsubj(smoke-2, Atheists-1)
root(ROOT-0, smoke-2)
advmod(know-14, technically-4)
prepc_according_to(know-14, to-6)
pobj(know-14, you-7)
nsubj(know-14, they-9)
aux(know-14, should-10)
neg(know-14, n't-11)
prep_because(know-14, they-13)
parataxis(smoke-2, know-14)
det(harm-16, the-15)
dobj(know-14, harm-16)
nsubj(does-18, it-17)
dep(know-14, does-18)
prep_to(does-18, them-20)
mark(use-24, because-22)
nsubj(use-24, they-23)
dep(know-14, use-24)
conj_and(does-18, use-24)
amod(reasoning-26, scientific-25)
npadvmod(objectively-27, reasoning-26)
advmod(use-24, objectively-27)
nsubj(smoke-32, they-29)
aux(smoke-32, would-30)
neg(smoke-32, n't-31)
dep(know-14, smoke-32)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP do))
    (. .)))

nsubj(do-2, They-1)
root(ROOT-0, do-2)

(ROOT
  (NP
    (NP (JJ Same))
    (PP (IN as)
      (NP (NNS theists)))
    (. .)))

root(ROOT-0, Same-1)
prep_as(Same-1, theists-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ hard)
        (PP (IN for)
          (NP (PRP me))))
      (S
        (VP (TO to)
          (VP (VB explain)
            (NP (JJ other) (JJ religious) (NNS communities))
            (ADVP (RB accurately)))))
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP have) (RB n't)
            (VP (VBN lived)
              (PP (IN in)
                (NP (PRP them)))
              (. .))))))
    (. .)))

nsubj(hard-3, It-1)
xsubj(explain-7, It-1)
cop(hard-3, 's-2)
root(ROOT-0, hard-3)
prep_for(hard-3, me-5)
aux(explain-7, to-6)
xcomp(hard-3, explain-7)
amod(communities-10, other-8)
amod(communities-10, religious-9)
dobj(explain-7, communities-10)
advmod(explain-7, accurately-11)
mark(lived-16, because-12)
nsubj(lived-16, I-13)
aux(lived-16, have-14)
neg(lived-16, n't-15)
advcl(hard-3, lived-16)
prep_in(lived-16, them-18)

(ROOT
  (S (CC but)
    (NP (PRP$ my))
    (VP (VBP own))
    (. .)))

cc(own-3, but-1)
nsubj(own-3, my-2)
root(ROOT-0, own-3)

(ROOT
  (S
    (S
      (NP (NNP Relgion))
      (VP (VBZ IS)
        (ADJP (JJ subjective))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP keep)
        (S
          (VP (VBG missing)
            (NP (DT that))))))
    (. .)))

nsubj(subjective-3, Relgion-1)
cop(subjective-3, IS-2)
root(ROOT-0, subjective-3)
nsubj(keep-6, you-5)
conj_and(subjective-3, keep-6)
xcomp(keep-6, missing-7)
dobj(missing-7, that-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can) (RB not)
      (VP (VB use)
        (NP (JJ scientific) (NN method))
        (SBAR (IN unless)
          (S
            (NP (PRP you))
            (ADVP (RB already))
            (VP (VBP have)
              (NP (DT a) (JJ moral) (NN view)))))))
    (. .)))

nsubj(use-4, You-1)
aux(use-4, can-2)
neg(use-4, not-3)
root(ROOT-0, use-4)
amod(method-6, scientific-5)
dobj(use-4, method-6)
mark(have-10, unless-7)
nsubj(have-10, you-8)
advmod(have-10, already-9)
advcl(use-4, have-10)
det(view-13, a-11)
amod(view-13, moral-12)
dobj(have-10, view-13)

(ROOT
  (S
    (NP (DT The) (NNS priests))
    (VP (VBP teach\/lecture\/explain)
      (NP
        (NP (DT the) (NN philosophy))
        (PP (IN of)
          (NP
            (NP (DT the) (NN religion))
            (, ,)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (NP (PRP$ their) (NN purpose)))))))))
    (. .)))

det(priests-2, The-1)
nsubj(teach\/lecture\/explain-3, priests-2)
root(ROOT-0, teach\/lecture\/explain-3)
det(philosophy-5, the-4)
dobj(teach\/lecture\/explain-3, philosophy-5)
det(religion-8, the-7)
prep_of(philosophy-5, religion-8)
nsubj(purpose-13, religion-8)
cop(purpose-13, is-11)
poss(purpose-13, their-12)
rcmod(religion-8, purpose-13)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB really))
    (VP (VBP wonder)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (NNP God))
          (VP (VBZ is)
            (VP (VBG speaking)
              (PP (TO to)
                (NP (PDT all) (DT these) (NNS people)))
              (ADVP (RB directly))
              (PP (IN in)
                (NP
                  (NP (NNS ways))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VB contradict)
                        (NP (DT each) (JJ other))))))))))))
    (. .)))

nsubj(wonder-3, I-1)
advmod(wonder-3, really-2)
root(ROOT-0, wonder-3)
advmod(speaking-7, how-4)
nsubj(speaking-7, God-5)
aux(speaking-7, is-6)
ccomp(wonder-3, speaking-7)
predet(people-11, all-9)
det(people-11, these-10)
prep_to(speaking-7, people-11)
advmod(speaking-7, directly-12)
prep_in(speaking-7, ways-14)
nsubj(contradict-16, ways-14)
rcmod(ways-14, contradict-16)
det(other-18, each-17)
dobj(contradict-16, other-18)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT an) (NN argument))
        (SBAR
          (WHPP (IN for)
            (WHNP (WDT which) (NN religion)))
          (S
            (VP (VBZ is)
              (ADJP (JJ right)))))))
    (. .)))

nsubj(argument-4, That-1)
cop(argument-4, 's-2)
det(argument-4, an-3)
root(ROOT-0, argument-4)
det(religion-7, argument-4)
rel(right-9, religion-7)
cop(right-9, is-8)
rcmod(argument-4, right-9)

(ROOT
  (S
    (S
      (NP (NNP Science))
      (VP (VBZ gives)
        (NP (PRP us))
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP
              (NP (DT the) (NNS harms))
              (PP (IN of)
                (S
                  (VP (VBG using)
                    (NP (NNS drugs))))))))))
    (, ,)
    (ADVP (RB however))
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (VP (VBG upto)
          (NP (PRP us))
          (SBAR (IN whether)
            (CC or)
            (RB not)
            (S
              (NP (DT that))
              (VP (VBZ is)
                (ADJP (JJ good)
                  (CC or)
                  (JJ bad))))))))
    (. .)))

nsubj(gives-2, Science-1)
root(ROOT-0, gives-2)
iobj(gives-2, us-3)
dobj(gives-2, some-4)
det(harms-7, the-6)
prep_of(some-4, harms-7)
prepc_of(harms-7, using-9)
dobj(using-9, drugs-10)
advmod(gives-2, however-12)
nsubj(upto-15, it-13)
aux(upto-15, is-14)
ccomp(gives-2, upto-15)
dobj(upto-15, us-16)
complm(good-22, whether-17)
ccomp(upto-15, not-19)
conj_or(good-22, not-19)
nsubj(good-22, that-20)
nsubj(bad-24, that-20)
cop(good-22, is-21)
ccomp(upto-15, good-22)
ccomp(upto-15, bad-24)
conj_or(good-22, bad-24)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ says)
      (SBAR (IN that)
        (S
          (NP (NNS drugs))
          (VP (VBP do)
            (NP (JJ blah) (NN blah))
            (PP (TO to)
              (NP (PRP$ your) (NN body)
                (CC and)
                (NN mind)))))))
    (. .)))

nsubj(says-2, Science-1)
root(ROOT-0, says-2)
complm(do-5, that-3)
nsubj(do-5, drugs-4)
ccomp(says-2, do-5)
amod(blah-7, blah-6)
dobj(do-5, blah-7)
poss(body-10, your-9)
prep_to(do-5, body-10)
prep_to(do-5, mind-12)
conj_and(body-10, mind-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ gives)
      (NP
        (NP (NNS statistics))
        (VP (VBG linking)
          (NP (NN drug) (NN abuse))
          (PP (TO to)
            (NP (NN crime))))))
    (. .)))

nsubj(gives-2, It-1)
root(ROOT-0, gives-2)
dobj(gives-2, statistics-3)
partmod(statistics-3, linking-4)
nn(abuse-6, drug-5)
dobj(linking-4, abuse-6)
prep_to(linking-4, crime-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (NNS people))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP say)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADJP (JJ wrong))))))))))
    (. .)))

nsubj(people-3, It-1)
cop(people-3, is-2)
root(ROOT-0, people-3)
nsubj(say-5, people-3)
rcmod(people-3, say-5)
nsubj(wrong-8, it-6)
cop(wrong-8, 's-7)
ccomp(say-5, wrong-8)

(ROOT
  (S
    (NP (NNP Science))
    (VP (MD can) (RB not)
      (VP (VB say)
        (SBAR (IN whether)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (UCP
                (ADJP (JJ good))
                (CC or)
                (PP (RB not) (IN for)
                  (NP (NN society)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP (NN crime) (NN etc.)))))))))))))
    (. .)))

nsubj(say-4, Science-1)
aux(say-4, can-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
complm(good-8, whether-5)
nsubj(good-8, it-6)
cop(good-8, is-7)
ccomp(say-4, good-8)
neg(good-8, not-10)
ccomp(say-4, for-11)
conj_or(good-8, for-11)
prep_for(good-8, society-12)
aux(have-14, to-13)
infmod(society-12, have-14)
nn(etc.-16, crime-15)
dobj(have-14, etc.-16)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD can)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (NN drug) (NN abuse))
              (VP (VBZ affects)
                (NP
                  (NP (DT the) (NN country))
                  (PP (IN in)
                    (NP
                      (NP (DT this))
                      (CC or)
                      (NP (DT that) (NN way)))))))))))
    (: ...)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD can) (RB not)
        (VP (VB say)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJ wrong))))))))
    (. .)))

nsubj(say-3, It-1)
aux(say-3, can-2)
root(ROOT-0, say-3)
complm(affects-7, that-4)
nn(abuse-6, drug-5)
nsubj(affects-7, abuse-6)
ccomp(say-3, affects-7)
det(country-9, the-8)
dobj(affects-7, country-9)
prep_in(country-9, this-11)
det(way-14, that-13)
prep_in(country-9, way-14)
conj_or(this-11, way-14)
nsubj(say-20, it-17)
aux(say-20, can-18)
neg(say-20, not-19)
conj_but(say-3, say-20)
nsubj(wrong-23, it-21)
cop(wrong-23, is-22)
ccomp(say-20, wrong-23)

