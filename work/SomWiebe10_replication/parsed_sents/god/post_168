(ROOT
  (NP
    (NP (PRP$ Your) (NN point))
    (VP (VBG being))
    (. ?)))

poss(point-2, Your-1)
root(ROOT-0, point-2)
partmod(point-2, being-3)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (VP (VBG making)
        (NP
          (NP (DT a) (NN claim))
          (SBAR
            (S
              (NP (DT an) (JJ illogical) (NN god))
              (VP (VBZ exists)
                (PP (IN without)
                  (NP (DT any) (NN evidence)
                    (S
                      (VP (TO to)
                        (VP (VB support)
                          (NP (PRP$ your) (NN claim)))))))))))))
    (. .)))

nsubj(making-3, You-1)
aux(making-3, are-2)
root(ROOT-0, making-3)
det(claim-5, a-4)
dobj(making-3, claim-5)
dobj(exists-9, claim-5)
det(god-8, an-6)
amod(god-8, illogical-7)
nsubj(exists-9, god-8)
rcmod(claim-5, exists-9)
det(evidence-12, any-11)
prep_without(exists-9, evidence-12)
aux(support-14, to-13)
infmod(evidence-12, support-14)
poss(claim-16, your-15)
dobj(support-14, claim-16)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (VP (VBN called)
          (NP
            (NP (NN burden))
            (PP (IN of)
              (NP (NN proof)))))))
    (: --)
    (S
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (ADVP (RB simply))
        (VP
          (VP (VB claim)
            (SBAR
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP (DT a) (NN god))))))
          (CC and)
          (VP (VB follow)
            (PRT (RP up))
            (PP (IN with) ('' '')
              (NP
                (NP (PRP You))
                (SBAR
                  (S
                    (VP (MD ca) (RB n't)
                      (VP (VB prove)
                        (S
                          (NP (PRP me))
                          (ADJP (JJ wrong)))))))))))))
    (. !)))

nsubjpass(called-3, It-1)
auxpass(called-3, 's-2)
root(ROOT-0, called-3)
dobj(called-3, burden-4)
prep_of(burden-4, proof-6)
nsubj(claim-12, you-8)
nsubj(follow-18, you-8)
aux(claim-12, ca-9)
neg(claim-12, n't-10)
advmod(claim-12, simply-11)
parataxis(called-3, claim-12)
expl(is-14, there-13)
ccomp(claim-12, is-14)
det(god-16, a-15)
nsubj(is-14, god-16)
parataxis(called-3, follow-18)
conj_and(claim-12, follow-18)
prt(follow-18, up-19)
prep_with(follow-18, You-22)
aux(prove-25, ca-23)
neg(prove-25, n't-24)
rcmod(You-22, prove-25)
nsubj(wrong-27, me-26)
xcomp(prove-25, wrong-27)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ right))))
    (. !)))

dep(right-5, So-1)
nsubj(right-5, I-2)
aux(right-5, must-3)
cop(right-5, be-4)
root(ROOT-0, right-5)

(ROOT
  (S (`` ``)
    (PP (IN By)
      (NP (DT the) (NN way)))
    (, ,)
    (NP (PRP I))
    (ADVP (RB only))
    (VP (VBP vote)
      (SBAR
        (S
          (NP (`` ``)
            (NP (RB no))
            ('' '')
            (SBAR (IN because)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (ADJP (RB very) (JJ likely))))))
          (VP (RB not)
            (NP (CD one))))))
    (. .)))

det(way-4, the-3)
prep_by(vote-8, way-4)
nsubj(vote-8, I-6)
advmod(vote-8, only-7)
root(ROOT-0, vote-8)
nsubj(one-18, no-10)
mark(is-14, because-12)
expl(is-14, there-13)
dep(no-10, is-14)
advmod(likely-16, very-15)
acomp(is-14, likely-16)
neg(one-18, not-17)
ccomp(vote-8, one-18)

(ROOT
  (S
    (S
      (NP (JJ Few) (NNS atheists))
      (ADVP (RB really))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT no) (NN god)))))))
    (, ,)
    (NP (PRP we))
    (ADVP (RB simply))
    (VP (VBP do) (RB n't)
      (VP (VB believe)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (CD one)))))))
    (. .)))

amod(atheists-2, Few-1)
nsubj(believe-4, atheists-2)
advmod(believe-4, really-3)
ccomp(believe-14, believe-4)
expl(is-6, there-5)
ccomp(believe-4, is-6)
det(god-8, no-7)
nsubj(is-6, god-8)
nsubj(believe-14, we-10)
advmod(believe-14, simply-11)
aux(believe-14, do-12)
neg(believe-14, n't-13)
root(ROOT-0, believe-14)
expl(is-16, there-15)
ccomp(believe-14, is-16)
nsubj(is-16, one-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT a) (NN difference)))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(difference-4, a-3)
nsubj('s-2, difference-4)

