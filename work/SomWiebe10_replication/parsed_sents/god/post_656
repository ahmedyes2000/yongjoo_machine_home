(ROOT
  (S
    (ADVP (RB Actually))
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (ADJP (JJ funny)))
    (. .)))

advmod(funny-5, Actually-1)
nsubj(funny-5, it-2)
cop(funny-5, 's-3)
neg(funny-5, not-4)
root(ROOT-0, funny-5)

(ROOT
  (S
    (NP
      (NP (DT The) (NN case))
      (PP (IN in)
        (NP
          (NP (NNP Florida))
          (FRAG
            (WHADVP (WRB where))))))
    (VP (NN school)
      (NP
        (NP (NNS kids))
        (SBAR
          (WHADVP (WRB where))
          (S
            (S
              (VP (VBG raising)
                (NP (NN money))
                (PP (IN for)
                  (NP (DT a) (NN benefit)))))
            (CC and)
            (S
              (NP (EX there))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (NNS teachers))
                  (VP (VBP present)))))))))
    (. .)))

det(case-2, The-1)
nsubj(school-6, case-2)
prep_in(case-2, Florida-4)
dep(Florida-4, where-5)
root(ROOT-0, school-6)
dobj(school-6, kids-7)
advmod(raising-9, where-8)
rcmod(kids-7, raising-9)
dobj(raising-9, money-10)
det(benefit-13, a-12)
prep_for(raising-9, benefit-13)
expl(present-18, there-15)
advmod(present-18, where-16)
nsubj(present-18, teachers-17)
rcmod(kids-7, present-18)
conj_and(raising-9, present-18)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ numerous) (NN scientist))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBP believe)
                (PP (IN in)
                  (NP (JJ intelligent) (NN design))))
              (CC and)
              (VP (VBP go)
                (ADVP (RB as) (RB far))
                (PP (IN as)
                  (NP
                    (NP (NNP Micro) (NN evolution))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (PRP I))
                        (VP
                          (VP (VBP believe)
                            (PRT (RP in)))
                          (CC and)
                          (VP (VBZ is)
                            (ADJP (JJ in-line)
                              (PP (IN with)
                                (NP (NN creation))))))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(scientist-4, numerous-3)
nsubj(are-2, scientist-4)
nsubj(believe-6, scientist-4)
nsubj(go-11, scientist-4)
rcmod(scientist-4, believe-6)
amod(design-9, intelligent-8)
prep_in(believe-6, design-9)
rcmod(scientist-4, go-11)
conj_and(believe-6, go-11)
advmod(far-13, as-12)
advmod(go-11, far-13)
nn(evolution-16, Micro-15)
prep_as(go-11, evolution-16)
dobj(believe-19, evolution-16)
rel(believe-19, which-17)
nsubj(believe-19, I-18)
nsubj(in-line-23, I-18)
rcmod(evolution-16, believe-19)
prt(believe-19, in-20)
cop(in-line-23, is-22)
rcmod(evolution-16, in-line-23)
conj_and(believe-19, in-line-23)
prep_with(in-line-23, creation-25)

(ROOT
  (S
    (NP
      (NP (NNP Macro) (NN evolution))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT a) (NNP Giraffe) (CD one) (NN day))
          (VP (VBD came)
            (PP (IN from)
              (NP (DT the)))))))
    (VP (VBP see)
      (SBAR
        (S
          (VP (VBZ is)
            (ADJP (RB as) (JJ unlikely))
            (PP (IN as)
              (S
                (NP (PRP you)
                  (CC or)
                  (PRP I))
                (VP (VBG beating)
                  (NP
                    (NP (NNP Tiger) (NNP Woods))
                    (PP (IN in)
                      (NP (DT a) (NN golf) (NN match)))))))))))
    (. .)))

nn(evolution-2, Macro-1)
nsubj(see-11, evolution-2)
advmod(came-8, where-3)
det(day-7, a-4)
nn(day-7, Giraffe-5)
num(day-7, one-6)
nsubj(came-8, day-7)
rcmod(evolution-2, came-8)
prep_from(came-8, the-10)
root(ROOT-0, see-11)
cop(unlikely-14, is-12)
advmod(unlikely-14, as-13)
ccomp(see-11, unlikely-14)
nsubj(beating-19, you-16)
conj_or(you-16, I-18)
nsubj(beating-19, I-18)
prepc_as(unlikely-14, beating-19)
nn(Woods-21, Tiger-20)
dobj(beating-19, Woods-21)
det(match-25, a-23)
nn(match-25, golf-24)
prep_in(Woods-21, match-25)

(ROOT
  (S
    (VP (RB Not)
      (S
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB happen)))))))
    (. .)))

root(ROOT-0, Not-1)
xcomp(Not-1, going-2)
aux(happen-4, to-3)
xcomp(going-2, happen-4)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBZ says)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP are)
            (VP (VBN created)
              (SBAR (IN in)
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (JJ own) (NN image))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is)
                            (SBAR
                              (WHADVP (WRB why))
                              (S
                                (NP (PRP$ our) (NNS minds))
                                (VP (VBP are)
                                  (ADJP (JJ godlike)))))))))))))))))
    (. .)))

nsubj(says-2, God-1)
root(ROOT-0, says-2)
complm(created-6, that-3)
nsubjpass(created-6, we-4)
auxpass(created-6, are-5)
ccomp(says-2, created-6)
mark(image-10, in-7)
cop(image-10, is-8)
amod(image-10, own-9)
advcl(created-6, image-10)
nsubj(is-12, image-10)
rcmod(image-10, is-12)
advmod(godlike-17, why-13)
poss(minds-15, our-14)
nsubj(godlike-17, minds-15)
cop(godlike-17, are-16)
advcl(is-12, godlike-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN evolution))
        (VP (VBZ is)
          (ADJP (JJ true)
            (PP (IN than)
              (NP (RB there)))))))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (JJR more) (NNS species))
          (PP (IN with)
            (NP (PRP$ our) (NN capability)
              (S
                (VP
                  (VP (TO to)
                    (VP (VB think)))
                  (CC and)
                  (VP (TO to)
                    (VP (VB rationalize))))))))))
    (. .)))

mark(true-4, If-1)
nsubj(true-4, evolution-2)
cop(true-4, is-3)
csubj(species-10, true-4)
prep(true-4, than-5)
pobj(than-5, there-6)
aux(species-10, would-7)
cop(species-10, be-8)
amod(species-10, more-9)
root(ROOT-0, species-10)
poss(capability-13, our-12)
prep_with(species-10, capability-13)
aux(think-15, to-14)
dep(capability-13, think-15)
aux(rationalize-18, to-17)
dep(capability-13, rationalize-18)
conj_and(think-15, rationalize-18)

(ROOT
  (S
    (NP (DT This) (NN fact))
    (ADVP (RB alone))
    (VP (VBZ baffles)
      (NP (JJ many) (JJ evolutionary) (NN theorist))
      (SBAR (IN for)
        (S
          (NP (PRP they))
          (VP (VBP do) (RB n't)
            (VP (VB have)
              (NP (DT an) (NN answer))
              (PP (IN for)))))))
    (. .)))

det(fact-2, This-1)
nsubj(baffles-4, fact-2)
advmod(baffles-4, alone-3)
root(ROOT-0, baffles-4)
amod(theorist-7, many-5)
amod(theorist-7, evolutionary-6)
dobj(baffles-4, theorist-7)
mark(have-12, for-8)
nsubj(have-12, they-9)
aux(have-12, do-10)
neg(have-12, n't-11)
advcl(baffles-4, have-12)
det(answer-14, an-13)
dobj(have-12, answer-14)
prep(have-12, for-15)

(ROOT
  (S (IN So)
    (NP (PRP they))
    (VP (VBP do)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP Darwin))
          (VP (VBD did)
            (ADVP (RB just))
            (VP
              (VP (VB make)
                (NP (NN stuff))
                (PRT (RP up)))
              (CC and)
              (VP (VB throw)
                (NP (NN clay))
                (PP (IN at)
                  (NP (DT a) (JJ human) (NN skull)))
                (S
                  (VP (TO to)
                    (VP (VB fill)
                      (NP (DT the) (NNS gaps)))))))))))
    (. .)))

dep(do-3, So-1)
nsubj(do-3, they-2)
root(ROOT-0, do-3)
dobj(make-8, what-4)
nsubj(make-8, Darwin-5)
nsubj(throw-12, Darwin-5)
xsubj(fill-19, Darwin-5)
aux(make-8, did-6)
advmod(make-8, just-7)
ccomp(do-3, make-8)
dobj(make-8, stuff-9)
prt(make-8, up-10)
ccomp(do-3, throw-12)
conj_and(make-8, throw-12)
dobj(throw-12, clay-13)
det(skull-17, a-15)
amod(skull-17, human-16)
prep_at(throw-12, skull-17)
aux(fill-19, to-18)
xcomp(throw-12, fill-19)
det(gaps-21, the-20)
dobj(fill-19, gaps-21)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ makes)
          (S
            (NP (PRP it))
            (ADJP (RBR worse))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (S
            (NP (PRP it))
            (VP (VBD was)
              (PP (IN in)
                (NP
                  (NP (DT a) (NN church))
                  (PP (IN off)
                    (NP (NN school) (NN property)))))))
          (CC and)
          (S
            (ADVP (RB spontaneously))
            (NP (NN someone))
            (VP (VBD said)
              (SBAR
                (S
                  (NP (NNP lets))
                  (VP (VBP say)
                    (S
                      (NP (DT a) (NN prayer))
                      (VP (TO to)
                        (VP (VB bless)
                          (NP (DT this) (NN food)))))))))))))
    (. .)))

nsubj(makes-2, What-1)
csubj(is-5, makes-2)
nsubj(worse-4, it-3)
xcomp(makes-2, worse-4)
root(ROOT-0, is-5)
complm(was-8, that-6)
nsubj(was-8, it-7)
ccomp(is-5, was-8)
det(church-11, a-10)
prep_in(was-8, church-11)
nn(property-14, school-13)
prep_off(church-11, property-14)
advmod(said-18, spontaneously-16)
nsubj(said-18, someone-17)
ccomp(is-5, said-18)
conj_and(was-8, said-18)
nsubj(say-20, lets-19)
ccomp(said-18, say-20)
det(prayer-22, a-21)
nsubj(bless-24, prayer-22)
aux(bless-24, to-23)
xcomp(say-20, bless-24)
det(food-26, this-25)
dobj(bless-24, food-26)

(ROOT
  (SINV
    (S
      (INTJ (UH Well))
      (VP (VB do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP know)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD happened)
                    (NP
                      (NP (NN board) (NN member))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP
                            (VP (VBD was)
                              (ADVP (RB there))
                              (PP (IN at)
                                (NP (DT the) (NN church))))
                            (CC but)
                            (VP
                              (ADVP (RB obviously))
                              (RB not)
                              (NP (DT a) (NNP Christian)))))))))))))))
    (VP (VBD was)
      (VP
        (VP (VBN offended))
        (CC and)
        (VP (VBN reported)
          (NP
            (NP (DT those) (NNS teachers))
            (CC and)
            (NP (PRP they)))
          (SBAR
            (WHADVP (WRB where))
            (S
              (VP (VBG looking)
                (PP (IN at)
                  (NP
                    (NP (NNS fines))
                    (PP (IN in)
                      (NP (DT the) (NNS thousands)))))))))))
    (NP
      (NP (IN plus) (CD 6) (NNS months))
      (PP (IN in)
        (NP (NN jail))))
    (. .)))

dep(do-2, Well-1)
dep(offended-21, do-2)
nsubj(know-4, you-3)
ccomp(do-2, know-4)
nsubj(happened-6, what-5)
ccomp(know-4, happened-6)
nn(member-8, board-7)
dobj(happened-6, member-8)
nsubj(was-10, member-8)
rcmod(member-8, was-10)
advmod(was-10, there-11)
det(church-14, the-13)
prep_at(was-10, church-14)
advmod(Christian-19, obviously-16)
neg(Christian-19, not-17)
det(Christian-19, a-18)
rcmod(member-8, Christian-19)
conj_but(was-10, Christian-19)
auxpass(offended-21, was-20)
root(ROOT-0, offended-21)
conj_and(offended-21, reported-23)
det(teachers-25, those-24)
dobj(reported-23, teachers-25)
dobj(reported-23, they-27)
conj_and(teachers-25, they-27)
advmod(looking-29, where-28)
advcl(reported-23, looking-29)
prep_at(looking-29, fines-31)
det(thousands-34, the-33)
prep_in(fines-31, thousands-34)
amod(months-37, plus-35)
num(months-37, 6-36)
nsubjpass(offended-21, months-37)
nsubjpass(reported-23, months-37)
prep_in(months-37, jail-39)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD went)
      (PP (TO to)
        (NP (DT the) (NNP Florida) (NNP St) (JJ supreme) (NN court)))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (NN judge))
          (ADVP (RB smartly))
          (VP (VBD ruled)
            (PP (IN against)
              (NP
                (NP (DT the) (NN claim))
                (CC and)
                (NP (PRP they))))
            (SBAR
              (WHADVP (WRB where))
              (S
                (VP (VBD found)
                  (S (RB not)
                    (VP (TO to)
                      (VP (VB be)
                        (PP (IN in)
                          (NP (NN violation)))))))))))))
    (. .)))

nsubj(went-2, It-1)
root(ROOT-0, went-2)
det(court-8, the-4)
nn(court-8, Florida-5)
nn(court-8, St-6)
amod(court-8, supreme-7)
prep_to(went-2, court-8)
advmod(ruled-13, where-9)
det(judge-11, the-10)
nsubj(ruled-13, judge-11)
advmod(ruled-13, smartly-12)
advcl(went-2, ruled-13)
det(claim-16, the-15)
prep_against(ruled-13, claim-16)
prep_against(ruled-13, they-18)
conj_and(claim-16, they-18)
advmod(found-20, where-19)
advcl(ruled-13, found-20)
neg(be-23, not-21)
aux(be-23, to-22)
xcomp(found-20, be-23)
prep_in(be-23, violation-25)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (RB just) (CD one) (NN case))
        (PP (IN of)
          (NP (JJ many)))))
    (. .)))

nsubj(case-5, This-1)
cop(case-5, is-2)
advmod(case-5, just-3)
num(case-5, one-4)
root(ROOT-0, case-5)
prep_of(case-5, many-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBP are)
              (NP
                (NP (JJ other) (NNS religions))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (ADJP (RB pray)
                      (SBAR (CC but)
                        (WHADVP (WRB why) (RB only))
                        (S
                          (VP (VBP are)
                            (NP
                              (NP (DT the) (NNS Christians))
                              (NP (DT the) (NNS ones))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBP are)
                                    (VP (VBG being)
                                      (VP (VBN persecuted)))))))))
                        (. ?)))))))))))))

nsubj(sure-3, I-1)
cop(sure-3, 'm-2)
root(ROOT-0, sure-3)
complm(are-6, that-4)
expl(are-6, there-5)
ccomp(sure-3, are-6)
amod(religions-8, other-7)
nsubj(are-6, religions-8)
dep(pray-10, religions-8)
rcmod(religions-8, pray-10)
cc(Christians-16, but-11)
advmod(only-13, why-12)
advmod(Christians-16, only-13)
cop(Christians-16, are-14)
det(Christians-16, the-15)
dep(pray-10, Christians-16)
det(ones-18, the-17)
dep(Christians-16, ones-18)
nsubjpass(persecuted-22, ones-18)
aux(persecuted-22, are-20)
auxpass(persecuted-22, being-21)
rcmod(Christians-16, persecuted-22)
rcmod(ones-18, persecuted-22)

(ROOT
  (S
    (ADVP (RB Agnostic))
    (NP (PRP it))
    (VP (VBZ 's)
      (VP (VBN biased)
        (S
          (S
            (NP (DT the) (JJ whole) (NN system))
            (VP (VBZ is)
              (VP (VBG Agnostic)
                (S
                  (NP (PRP we))
                  (VP (VB abide)
                    (PP (IN by)
                      (NP (JJ Agnostic) (NNS rules)))
                    (PP (IN in)
                      (NP (JJ everyday) (NN life)))
                    (ADVP (RB especially))
                    (PP (IN in)
                      (NP (NNS schools))))))))
          (, ,)
          (ADVP (RB essentially))
          (S
            (NP (PRP we))
            (VP (VB practice)
              (NP (PRP$ your) (NN religion))
              (SBAR
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP (DT no) (NN belief)))))
                (CC and)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (EX there))
                    (VP (VBZ 's)
                      (NP
                        (NP (DT a)
                          (ADJP (JJ crazy))
                          (NN wig) (NN nut) (NNP Agnostic))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ wants)
                              (S
                                (VP (TO to)
                                  (VP (VB throw)
                                    (NP
                                      (NP (NNS teachers))
                                      (PP (IN in)
                                        (NP (NN jail))))
                                    (PP (IN for)
                                      (NP
                                        (NP (CD six) (NNS months))
                                        (PP (RB because) (IN of)
                                          (NP (PRP$ their) (JJ inherent) (NNS freedoms))))))))))))))))))
          (S
            (NP (PRP you))
            (VP (VBP go)
              (ADJP (JJ crazy)))))))
    (. .)))

advmod(biased-4, Agnostic-1)
nsubjpass(biased-4, it-2)
auxpass(biased-4, 's-3)
root(ROOT-0, biased-4)
det(system-7, the-5)
amod(system-7, whole-6)
nsubj(Agnostic-9, system-7)
aux(Agnostic-9, is-8)
dep(biased-4, Agnostic-9)
nsubj(abide-11, we-10)
ccomp(Agnostic-9, abide-11)
amod(rules-14, Agnostic-13)
prep_by(abide-11, rules-14)
amod(life-17, everyday-16)
prep_in(abide-11, life-17)
advmod(abide-11, especially-18)
prep_in(abide-11, schools-20)
advmod(Agnostic-9, essentially-22)
nsubj(practice-24, we-23)
dep(Agnostic-9, practice-24)
poss(religion-26, your-25)
dobj(practice-24, religion-26)
advmod(is-29, where-27)
expl(is-29, there-28)
dep(practice-24, is-29)
det(belief-31, no-30)
nsubj(is-29, belief-31)
advmod('s-35, when-33)
expl('s-35, there-34)
dep(practice-24, 's-35)
conj_and(is-29, 's-35)
det(Agnostic-40, a-36)
amod(Agnostic-40, crazy-37)
nn(Agnostic-40, wig-38)
nn(Agnostic-40, nut-39)
nsubj('s-35, Agnostic-40)
nsubj(wants-42, Agnostic-40)
rcmod(Agnostic-40, wants-42)
aux(throw-44, to-43)
xcomp(wants-42, throw-44)
dobj(throw-44, teachers-45)
prep_in(teachers-45, jail-47)
num(months-50, six-49)
prep_for(throw-44, months-50)
poss(freedoms-55, their-53)
amod(freedoms-55, inherent-54)
prep_because_of(months-50, freedoms-55)
nsubj(go-57, you-56)
dep(Agnostic-9, go-57)
acomp(go-57, crazy-58)

(ROOT
  (S
    (NP (NNP Evolution))
    (VP (VBZ has) (RB not)
      (VP (VBN been)
        (VP (VBN proved)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (PP
                  (ADVP
                    (NP (DT a) (NN theory))
                    (RB nowhere))
                  (IN except) (IN for)
                  (NP
                    (NP (DT a)
                      (ADJP (RB completely) (JJ biased))
                      (NN person))
                    (SBAR
                      (S
                        (VP (MD would)
                          (VP (VB say)
                            (SBAR (IN that)
                              (S
                                (NP (NN evolution))
                                (VP (VBZ has)
                                  (VP (VBN been)
                                    (VP (VBN proved))))))))))))))))))
    (. .)))

nsubjpass(proved-5, Evolution-1)
aux(proved-5, has-2)
neg(proved-5, not-3)
auxpass(proved-5, been-4)
root(ROOT-0, proved-5)
nsubj('s-7, it-6)
ccomp(proved-5, 's-7)
det(theory-9, a-8)
npadvmod(nowhere-10, theory-9)
advmod('s-7, nowhere-10)
det(person-16, a-13)
advmod(biased-15, completely-14)
amod(person-16, biased-15)
prep_except_for('s-7, person-16)
aux(say-18, would-17)
rcmod(person-16, say-18)
complm(proved-23, that-19)
nsubjpass(proved-23, evolution-20)
aux(proved-23, has-21)
auxpass(proved-23, been-22)
ccomp(say-18, proved-23)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ whole) (NN debate))
        (WHPP (IN on)
          (WHNP (WDT that))))
      (ADVP (RB alone)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(debate-5, a-3)
amod(debate-5, whole-4)
nsubj(is-2, debate-5)
prep_on(debate-5, that-7)
advmod(is-2, alone-8)

