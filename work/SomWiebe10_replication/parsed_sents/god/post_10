(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN lot))
        (PP (IN of)
          (NP
            (NP (NNS arguments))
            (PP (IN about)
              (NP
                (NP (DT the) (NN existence))
                (PP (IN of)
                  (NP (NNP GOD)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
det(lot-4, a-3)
nsubj(are-2, lot-4)
prep_of(lot-4, arguments-6)
det(existence-9, the-8)
prep_about(arguments-6, existence-9)
prep_of(existence-9, GOD-11)

(ROOT
  (S
    (NP (DT Some))
    (VP (VBP try)
      (S
        (VP (TO to)
          (VP (VB prove)
            (ADVP (RB scientifically)
              (CC and)
              (RB logically))))))
    (. .)))

nsubj(try-2, Some-1)
xsubj(prove-4, Some-1)
root(ROOT-0, try-2)
aux(prove-4, to-3)
xcomp(try-2, prove-4)
advmod(prove-4, scientifically-5)
advmod(prove-4, logically-7)
conj_and(scientifically-5, logically-7)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB explain)
          (PP (IN about)
            (NP (DT this))))))
    (NP (PRP we))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB refer)
            (PP (TO to)
              (NP
                (NP (DT the) (JJ original) (NN sin))
                (PRN (-LRB- -LRB-)
                  (PP (IN as)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ is)
                          (VP (VBN written)
                            (PP (IN in)
                              (NP (DT the) (NNP Bible)))
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NN book))
                                (PP (IN of)
                                  (NP (NNP Genesis))))))))))
                  (-RRB- -RRB-))))))))
    (. .)))

aux(explain-2, To-1)
dep(need-6, explain-2)
prep_about(explain-2, this-4)
nsubj(need-6, we-5)
xsubj(refer-8, we-5)
root(ROOT-0, need-6)
aux(refer-8, to-7)
xcomp(need-6, refer-8)
det(sin-12, the-10)
amod(sin-12, original-11)
prep_to(refer-8, sin-12)
dep(sin-12, as-14)
nsubjpass(written-17, what-15)
auxpass(written-17, is-16)
pcomp(as-14, written-17)
det(Bible-20, the-19)
prep_in(written-17, Bible-20)
det(book-23, the-22)
prep_in(written-17, book-23)
prep_of(book-23, Genesis-25)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP we))
        (VP (VBP know))))
    (, ,)
    (NP (NNP GOD))
    (ADVP (RB so))
    (VP (VBZ loves)
      (NP (DT the) (NN world))
      (SBAR (IN that)
        (S
          (NP (PRP HE))
          (VP (VBZ has)
            (VP (VBN given)
              (NP (PRP$ HIS) (JJ only) (NN begotten))
              (NP
                (NP (NNP Son))
                (SBAR
                  (S
                    (VP (TO to)
                      (VP (VB die)
                        (PP (IN for)
                          (NP (NN humankind)))))))))))))
    (. .)))

mark(know-3, As-1)
nsubj(know-3, we-2)
advcl(loves-7, know-3)
nsubj(loves-7, GOD-5)
advmod(loves-7, so-6)
root(ROOT-0, loves-7)
det(world-9, the-8)
dobj(loves-7, world-9)
complm(given-13, that-10)
nsubj(given-13, HE-11)
aux(given-13, has-12)
ccomp(loves-7, given-13)
poss(begotten-16, HIS-14)
amod(begotten-16, only-15)
dep(given-13, begotten-16)
dobj(given-13, Son-17)
aux(die-19, to-18)
infmod(Son-17, die-19)
prep_for(die-19, humankind-21)

(ROOT
  (S
    (PP (IN From)
      (NP (RB here)))
    (NP (PRP we))
    (VP (MD can)
      (VP (VB see)
        (SBAR (IN that)
          (S
            (NP (NNP GOD))
            (VP (VBZ wants)
              (S
                (NP (DT every) (JJ single) (NN human) (VBG being))
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN saved)
                      (PP (IN from)
                        (NP (`` ``)
                          (NP (DT the) (NN dead))
                          ('' '')
                          (PRN (-LRB- -LRB-)
                            (NP
                              (NP (JJ eternal) (NN separation))
                              (PP (IN from)
                                (NP (NNP GOD))))
                            (-RRB- -RRB-)))))))))))))
    (. .)))

prep(see-5, From-1)
pobj(From-1, here-2)
nsubj(see-5, we-3)
aux(see-5, can-4)
root(ROOT-0, see-5)
complm(wants-8, that-6)
nsubj(wants-8, GOD-7)
ccomp(see-5, wants-8)
det(human-11, every-9)
amod(human-11, single-10)
nsubjpass(saved-15, human-11)
amod(human-11, being-12)
aux(saved-15, to-13)
auxpass(saved-15, be-14)
xcomp(wants-8, saved-15)
det(dead-19, the-18)
prep_from(saved-15, dead-19)
amod(separation-23, eternal-22)
dep(dead-19, separation-23)
prep_from(separation-23, GOD-25)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP GOD))
        (VP (VBD walked)
          (PP (IN on)
            (NP
              (NP (DT this) (NN earth))
              (PP (IN in)
                (NP
                  (NP (NN form))
                  (PP (IN of)
                    (NP (NN humankind)))))))
          (PP (IN like)
            (NP (PRP us))))))
    (, ,)
    (NP (PRP HE))
    (ADVP (RB also))
    (VP (VBD experienced)
      (NP
        (NP (PDT all) (DT the) (NNS sufferings))
        (VP (VBN known)
          (PP (TO to)
            (NP (DT this) (NN world))))))
    (. .)))

advmod(walked-3, When-1)
nsubj(walked-3, GOD-2)
advcl(experienced-16, walked-3)
det(earth-6, this-5)
prep_on(walked-3, earth-6)
prep_in(earth-6, form-8)
prep_of(form-8, humankind-10)
prep_like(walked-3, us-12)
nsubj(experienced-16, HE-14)
advmod(experienced-16, also-15)
root(ROOT-0, experienced-16)
predet(sufferings-19, all-17)
det(sufferings-19, the-18)
dobj(experienced-16, sufferings-19)
partmod(sufferings-19, known-20)
det(world-23, this-22)
prep_to(known-20, world-23)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (NP (PRP HE))
    (ADVP (RB perfectly))
    (VP (VBZ knows)
      (PP (IN about)
        (NP (DT this))))
    (. .)))

advmod(knows-5, So-1)
nsubj(knows-5, HE-3)
advmod(knows-5, perfectly-4)
root(ROOT-0, knows-5)
prep_about(knows-5, this-7)

(ROOT
  (S
    (NP
      (NP (DT Another) (NN thing))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP need)
            (S
              (VP (TO to)
                (VP (VB know))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NN life))
          (VP (VBZ is)
            (ADJP
              (ADJP (JJR more))
              (PP (IN than)
                (S
                  (VP (`` ``) (VBG walking) ('' '')
                    (PP (IN on)
                      (NP (DT this) (NN planet)))))))
            (PRN (-LRB- -LRB-)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (ADVP (RB only))
                    (NP
                      (NP (DT a)
                        (ADJP (RB very) (JJ small))
                        (NN fraction))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (`` ``) (JJ real) ('' '') (NN life))
                          (PP (IN in)
                            (NP (DT the) (NN life))))))
                    (PP (IN after)))))
              (-RRB- -RRB-))))))
    (. .)))

det(thing-2, Another-1)
dobj(need-4, thing-2)
nsubj(is-7, thing-2)
nsubj(need-4, we-3)
xsubj(know-6, we-3)
rcmod(thing-2, need-4)
aux(know-6, to-5)
xcomp(need-4, know-6)
root(ROOT-0, is-7)
complm(more-11, that-8)
nsubj(more-11, life-9)
cop(more-11, is-10)
ccomp(is-7, more-11)
prepc_than(more-11, walking-14)
det(planet-18, this-17)
prep_on(walking-14, planet-18)
nsubj(fraction-26, which-20)
cop(fraction-26, is-21)
advmod(fraction-26, only-22)
det(fraction-26, a-23)
advmod(small-25, very-24)
amod(fraction-26, small-25)
parataxis(more-11, fraction-26)
det(life-32, the-28)
amod(life-32, real-30)
prep_of(fraction-26, life-32)
det(life-35, the-34)
prep_in(life-32, life-35)
prep(fraction-26, after-36)

(ROOT
  (S
    (PP (IN After)
      (NP
        (NP (DT all))
        (SBAR (IN if)
          (S
            (NP (PRP we))
            (ADVP (RB really))
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (PP (IN about)
                      (NP (NNP GOD)))))))))))
    (, ,)
    (NP (PRP we))
    (ADVP (RB simply))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB ask)
            (S
              (NP (NNP GOD))
              (VP (TO to)
                (VP (VB reveal)
                  (NP (NNP HIMSELF))
                  (PP (TO to)
                    (NP (PRP us)))
                  (SBAR (RB so) (IN that)
                    (S
                      (NP (PRP we))
                      (VP (MD can)
                        (VP (VB understand)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (VP (VBZ is)
                                (PP (IN beyond)
                                  (NP (PRP$ our)
                                    (PRN (-LRB- -LRB-)
                                      (NP (JJ limited)
                                        (CC and)
                                        (JJ simple))
                                      (-RRB- -RRB-))
                                    (NNS mind)))))))))))))))))
    (. .)))

dobj(want-6, all-2)
prep_after(need-14, all-2)
mark(want-6, if-3)
nsubj(want-6, we-4)
xsubj(know-8, we-4)
advmod(want-6, really-5)
dep(all-2, want-6)
aux(know-8, to-7)
xcomp(want-6, know-8)
prep_about(know-8, GOD-10)
nsubj(need-14, we-12)
xsubj(ask-16, we-12)
advmod(need-14, simply-13)
root(ROOT-0, need-14)
aux(ask-16, to-15)
xcomp(need-14, ask-16)
nsubj(reveal-19, GOD-17)
aux(reveal-19, to-18)
xcomp(ask-16, reveal-19)
dobj(reveal-19, HIMSELF-20)
prep_to(reveal-19, us-22)
advmod(understand-27, so-23)
dep(understand-27, that-24)
nsubj(understand-27, we-25)
aux(understand-27, can-26)
advcl(reveal-19, understand-27)
nsubj(is-29, what-28)
ccomp(understand-27, is-29)
poss(mind-37, our-31)
dep(mind-37, limited-33)
conj_and(limited-33, simple-35)
dep(mind-37, simple-35)
prep_beyond(is-29, mind-37)

(ROOT
  (S
    (PP (IN By)
      (NP (DT the) (NN way)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (JJ interested)
            (PP (IN in)
              (S
                (VP (VBG knowing)
                  (PP (IN about)
                    (NP
                      (NP (DT this) (NN futher))
                      (, ,)
                      (VP (VBN based)
                        (PP (IN on)
                          (NP (PRP$ my) (NN experience)))))))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ excellent) (NN book))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP explain)
              (ADVP (RB clearly)))))))
    (. .)))

det(way-3, the-2)
prep_by(is-21, way-3)
mark(interested-8, if-5)
nsubj(interested-8, you-6)
cop(interested-8, are-7)
advcl(is-21, interested-8)
prepc_in(interested-8, knowing-10)
det(futher-13, this-12)
prep_about(knowing-10, futher-13)
partmod(futher-13, based-15)
poss(experience-18, my-17)
prep_on(based-15, experience-18)
expl(is-21, there-20)
root(ROOT-0, is-21)
det(book-24, an-22)
amod(book-24, excellent-23)
nsubj(is-21, book-24)
nsubj(explain-26, book-24)
rcmod(book-24, explain-26)
advmod(explain-26, clearly-27)

(ROOT
  (S
    (NP
      (NP (DT The) (NN name))
      (PP (IN of)
        (NP (DT the) (NN book))))
    (VP
      (VP (VBZ is)
        (VP
          (VP ('' '')
            (NP (DT The) (NN Progress)))
          (PP (IN of)
            (NP (NNP Redemption)))))
      (: :)
      (NP
        (NP (DT The) (NNP Story))
        (PP (IN of)
          (S
            (VP (VBG Salvation)
              (PP (IN from)
                (NP (NN Creation)))
              (PP (TO to)
                (NP
                  (NP (DT the) (NNP New) (NNP Jerusalem))
                  ('' '')
                  (PP (IN by)
                    (NP (NNP Willem) (NNP Vangemeren)))))
              (PRN (-LRB- -LRB-)
                (S
                  (NP (PRP you))
                  (VP (MD can)
                    (VP (VB look)
                      (PP (IN at)
                        (NP (DT the) (NN internet))))))
                (-RRB- -RRB-)))))))
    (. .)))

det(name-2, The-1)
nsubj(Progress-9, name-2)
det(book-5, the-4)
prep_of(name-2, book-5)
aux(Progress-9, is-6)
det(Progress-9, The-8)
root(ROOT-0, Progress-9)
prep_of(Progress-9, Redemption-11)
det(Story-14, The-13)
dobj(Progress-9, Story-14)
prepc_of(Story-14, Salvation-16)
prep_from(Salvation-16, Creation-18)
det(Jerusalem-22, the-20)
nn(Jerusalem-22, New-21)
prep_to(Salvation-16, Jerusalem-22)
nn(Vangemeren-26, Willem-25)
prep_by(Jerusalem-22, Vangemeren-26)
nsubj(look-30, you-28)
aux(look-30, can-29)
parataxis(Salvation-16, look-30)
det(internet-33, the-32)
prep_at(look-30, internet-33)

(ROOT
  (S
    (ADVP (RB Finally))
    (, ,)
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB say)))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (ADVP (RB really))
        (VP (VBP ask)
          (CC and)
          (VBP humble)
          (NP (PRP ourselves)))))
    (, ,)
    (NP (NNP GOD))
    (VP (MD will)
      (ADVP (RB definitely))
      (VP (VB reveal)
        (NP
          (NP (NNP HIMSELF))
          (PP (TO to)
            (NP (PRP us))))
        (PP (IN in)
          (NP (PRP$ HIS) (JJ own) (NN way)))))
    (. .)))

advmod(reveal-19, Finally-1)
dobj(say-6, what-3)
nsubj(say-6, I-4)
aux(say-6, can-5)
dep(reveal-19, say-6)
mark(ask-11, if-8)
nsubj(ask-11, we-9)
nsubj(humble-13, we-9)
advmod(ask-11, really-10)
advcl(reveal-19, ask-11)
conj_and(ask-11, humble-13)
advcl(reveal-19, humble-13)
dobj(ask-11, ourselves-14)
nsubj(reveal-19, GOD-16)
aux(reveal-19, will-17)
advmod(reveal-19, definitely-18)
root(ROOT-0, reveal-19)
dobj(reveal-19, HIMSELF-20)
prep_to(HIMSELF-20, us-22)
poss(way-26, HIS-24)
amod(way-26, own-25)
prep_in(reveal-19, way-26)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP we))
        (VP (VBP need)
          (S
            (VP (TO to)
              (VP (VB know)))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNP GOD))
          (VP (VBZ is)
            (ADJP
              (ADJP
                (ADJP
                  (ADVP (RB so) (RB much))
                  (RB much) (JJR bigger))
                (PRN (-LRB- -LRB-)
                  (PP (IN beyond)
                    (NP (PRP$ our) (NN imagination)))
                  (-RRB- -RRB-)))
              (PP (IN than)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP we))
                    (VP (MD can)
                      (VP (VB think)
                        (PP (IN of))))))))))))
    (. .)))

dep(need-3, What-1)
nsubj(need-3, we-2)
xsubj(know-5, we-2)
csubj(is-6, need-3)
aux(know-5, to-4)
xcomp(need-3, know-5)
root(ROOT-0, is-6)
complm(bigger-13, that-7)
nsubj(bigger-13, GOD-8)
cop(bigger-13, is-9)
advmod(much-11, so-10)
advmod(bigger-13, much-11)
advmod(bigger-13, much-12)
ccomp(is-6, bigger-13)
dep(bigger-13, beyond-15)
poss(imagination-17, our-16)
pobj(beyond-15, imagination-17)
dep(think-23, what-20)
nsubj(think-23, we-21)
aux(think-23, can-22)
prepc_than(bigger-13, think-23)
prep(think-23, of-24)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can) (RB not)
      (VP (VB limit)
        (NP
          (NP (NNP GOD))
          (PP (IN with)
            (NP (PRP$ our)
              (PRN (-LRB- -LRB-)
                (NP (JJ limited)
                  (CC and)
                  (JJ simple))
                (-RRB- -RRB-))
              (NNS mind))))))
    (. .)))

nsubj(limit-4, We-1)
aux(limit-4, can-2)
neg(limit-4, not-3)
root(ROOT-0, limit-4)
dobj(limit-4, GOD-5)
poss(mind-13, our-7)
dep(mind-13, limited-9)
conj_and(limited-9, simple-11)
dep(mind-13, simple-11)
prep_with(GOD-5, mind-13)

(ROOT
  (S
    (S
      (NP (NNP GOD))
      (VP (VBZ creates)
        (NP (NN everything))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (ADVP (DT no) (NN way)
        (SBAR (IN that)
          (S
            (NP (DT the) (VBN created) (NN being))
            (VP (MD can)
              (VP (VB think)
                (PP (IN about)
                  (NP (DT the) (NN CREATOR)))))))))
    (. .)))

nsubj(creates-2, GOD-1)
ccomp(is-6, creates-2)
dobj(creates-2, everything-3)
expl(is-6, there-5)
root(ROOT-0, is-6)
dep(way-8, no-7)
advmod(is-6, way-8)
complm(think-14, that-9)
det(being-12, the-10)
amod(being-12, created-11)
nsubj(think-14, being-12)
aux(think-14, can-13)
ccomp(way-8, think-14)
det(CREATOR-17, the-16)
prep_about(think-14, CREATOR-17)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT a) (JJ simple) (NN analogy)))
      (NP (PRP we))
      (VP (MD can)
        (VP (VB put)
          (S
            (NP (PRP it))
            (NP (DT this) (NN way))))))
    (, ,)
    (NP (DT a) (NN computer) (NN program))
    (VP (MD can) (RB not)
      (VP (VB explain)
        (PP (IN about)
          (NP (DT the) (NN programmer)))
        (SBAR (IN unless)
          (S
            (NP (DT the) (NN programmer))
            (VP (VBD put)
              (NP (PRP it))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN program))
                  (SBAR
                    (S
                      (NP (PRP he)
                        (CC or)
                        (PRP she))
                      (VP (VBD wrote)))))))))))
    (. .)))

det(analogy-4, a-2)
amod(analogy-4, simple-3)
prep_in(put-7, analogy-4)
nsubj(put-7, we-5)
aux(put-7, can-6)
ccomp(explain-17, put-7)
nsubj(way-10, it-8)
det(way-10, this-9)
xcomp(put-7, way-10)
det(program-14, a-12)
nn(program-14, computer-13)
nsubj(explain-17, program-14)
aux(explain-17, can-15)
neg(explain-17, not-16)
root(ROOT-0, explain-17)
det(programmer-20, the-19)
prep_about(explain-17, programmer-20)
mark(put-24, unless-21)
det(programmer-23, the-22)
nsubj(put-24, programmer-23)
advcl(explain-17, put-24)
dobj(put-24, it-25)
det(program-28, the-27)
prep_in(put-24, program-28)
dobj(wrote-32, program-28)
nsubj(wrote-32, he-29)
conj_or(he-29, she-31)
nsubj(wrote-32, she-31)
rcmod(program-28, wrote-32)

(ROOT
  (S
    (S
      (NP (DT The) (JJ same) (NN way))
      (VP (VBZ is)
        (PP (IN with)
          (NP (PRP$ our) (NN GOD)))
        (, ,)
        (SBAR (IN unless)
          (S
            (NP (NNP GOD))
            (VP (VBZ reveals)
              (PP (TO to)
                (NP
                  (NP (PRP us))
                  (PRN (-LRB- -LRB-)
                    (VP (VBN humankind))
                    (-RRB- -RRB-)))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN way))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP know)
              (CC or)
              (VBP understand)
              (PP (IN about)
                (NP (NNP GOD))))))))
    (. .)))

det(way-3, The-1)
amod(way-3, same-2)
nsubj(is-4, way-3)
ccomp(is-19, is-4)
poss(GOD-7, our-6)
prep_with(is-4, GOD-7)
mark(reveals-11, unless-9)
nsubj(reveals-11, GOD-10)
advcl(is-4, reveals-11)
prep_to(reveals-11, us-13)
dep(us-13, humankind-15)
expl(is-19, there-18)
root(ROOT-0, is-19)
det(way-21, no-20)
nsubj(is-19, way-21)
dobj(know-23, way-21)
nsubj(know-23, we-22)
nsubj(understand-25, we-22)
rcmod(way-21, know-23)
rcmod(way-21, understand-25)
conj_or(know-23, understand-25)
prep_about(know-23, GOD-27)

(ROOT
  (S
    (SBAR
      (NP (DT The) (JJ other) (NN thing))
      (IN that)
      (S
        (NP (PRP we))
        (VP (VBP need)
          (S
            (VP (TO to)
              (VP (VB know)))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP live)
      (PP (IN in)
        (NP
          (NP (DT a) (JJ different) (NN dimension))
          (PP (IN from)
            (NP (NNP GOD))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, other-2)
dep(need-6, thing-3)
dep(need-6, that-4)
nsubj(need-6, we-5)
xsubj(know-8, we-5)
dep(live-11, need-6)
aux(know-8, to-7)
xcomp(need-6, know-8)
nsubj(live-11, we-10)
root(ROOT-0, live-11)
det(dimension-15, a-13)
amod(dimension-15, different-14)
prep_in(live-11, dimension-15)
prep_from(dimension-15, GOD-17)

(ROOT
  (S
    (PP (IN For)
      (NP (DT this) (NN reason)))
    (NP (PRP we))
    (VP (MD can) (RB not)
      (VP (VB enter)
        (NP (DT the) (JJ other) (NNS dimensions))))
    (. .)))

det(reason-3, this-2)
prep_for(enter-7, reason-3)
nsubj(enter-7, we-4)
aux(enter-7, can-5)
neg(enter-7, not-6)
root(ROOT-0, enter-7)
det(dimensions-10, the-8)
amod(dimensions-10, other-9)
dobj(enter-7, dimensions-10)

(ROOT
  (S
    (S
      (VP (VBG Talking)
        (PP (IN about)
          (NP
            (NP (NN poverty))
            (, ,)
            (NP (NN sickness))
            (CC and)
            (NP (PDT all) (DT the) (NNS problems))))
        (PP (IN in)
          (NP (DT this) (NN world)))))
    (NP (PRP we))
    (VP (MD can) (RB not)
      (VP (VB avoid)
        (S (RB not)
          (VP (TO to)
            (VP (VB talk)
              (PP (IN about)
                (NP (NNS sins))))))))
    (. .)))

dep(avoid-16, Talking-1)
prep_about(Talking-1, poverty-3)
prep_about(Talking-1, sickness-5)
conj_and(poverty-3, sickness-5)
predet(problems-9, all-7)
det(problems-9, the-8)
prep_about(Talking-1, problems-9)
conj_and(poverty-3, problems-9)
det(world-12, this-11)
prep_in(Talking-1, world-12)
nsubj(avoid-16, we-13)
xsubj(talk-19, we-13)
aux(avoid-16, can-14)
neg(avoid-16, not-15)
root(ROOT-0, avoid-16)
neg(talk-19, not-17)
aux(talk-19, to-18)
xcomp(avoid-16, talk-19)
prep_about(talk-19, sins-21)

