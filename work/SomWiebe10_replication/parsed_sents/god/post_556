(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (VP (VBN called)
        (NP
          (NP (DT the) (NN argument))
          (PP (IN for)
            (NP
              (NP (DT the) (JJS best))
              (PP (IN of)
                (NP (DT both) (JJ possible) (NNS worlds))))))))
    (. .)))

nsubjpass(called-3, It-1)
auxpass(called-3, 's-2)
root(ROOT-0, called-3)
det(argument-5, the-4)
dobj(called-3, argument-5)
det(best-8, the-7)
prep_for(argument-5, best-8)
det(worlds-12, both-10)
amod(worlds-12, possible-11)
prep_of(best-8, worlds-12)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Either))
        (PRN (-LRB- -LRB-)
          (X (SYM a))
          (-RRB- -RRB-))))
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (VP
        (VP (VB have)
          (NP
            (NP (DT a) (NN world))
            (PP (IN with)
              (NP (DT no) (JJ free) (NN will)))))
        (, ,)
        (CC but)
        (VP
          (PP (IN at)
            (NP (DT the) (JJ same) (NN time))
            (NP (DT no) (NN violence) (, ,) (NN war) (, ,) (NN crime) (, ,) (NNS sins) (, ,) (FW etc.))))))
    (. .)))

ccomp(have-8, Either-1)
dep(Either-1, a-3)
nsubj(have-8, we-6)
aux(have-8, can-7)
root(ROOT-0, have-8)
det(world-10, a-9)
dobj(have-8, world-10)
det(will-14, no-12)
amod(will-14, free-13)
prep_with(world-10, will-14)
conj_but(have-8, at-17)
det(time-20, the-18)
amod(time-20, same-19)
pobj(at-17, time-20)
det(sins-28, no-21)
nn(sins-28, violence-22)
dep(sins-28, war-24)
dep(sins-28, crime-26)
dep(at-17, sins-28)
dep(sins-28, etc.-30)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP OR))
        (PRN (-LRB- -LRB-)
          (X (SYM b))
          (-RRB- -RRB-)))
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB have)
              (NP
                (NP (DT a) (NN world))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP we))
                    (VP (VBP have)
                      (S
                        (ADJP (JJ free))))))))))))
    (VP (MD will)
      (S
        (VP (TO to)
          (VP (VB do)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP we))
                (VP (VBP want)))))))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ leads)
            (PP (TO to)
              (NP
                (NP (DT some) (NNS people))
                (SBAR
                  (WHNP (WP whom))
                  (S
                    (VP (VBD abuse)
                      (NP (PRP$ their) (JJ free) (NN will))
                      (S
                        (VP (TO to)
                          (VP (VB do)
                            (ADJP (JJ bad))))))))))))))
    (. .)))

nsubj(will-14, OR-1)
xsubj(do-16, OR-1)
dep(OR-1, b-3)
nsubj(have-7, we-5)
aux(have-7, can-6)
rcmod(OR-1, have-7)
det(world-9, a-8)
dobj(have-7, world-9)
advmod(have-12, where-10)
nsubj(have-12, we-11)
rcmod(world-9, have-12)
acomp(have-12, free-13)
root(ROOT-0, will-14)
aux(do-16, to-15)
xcomp(will-14, do-16)
dobj(want-19, what-17)
nsubj(want-19, we-18)
ccomp(do-16, want-19)
nsubj(leads-22, which-21)
ccomp(will-14, leads-22)
det(people-25, some-24)
prep_to(leads-22, people-25)
nsubj(abuse-27, people-25)
rcmod(people-25, abuse-27)
poss(will-30, their-28)
amod(will-30, free-29)
dobj(abuse-27, will-30)
aux(bad-33, to-31)
dep(bad-33, do-32)
xcomp(abuse-27, bad-33)

(ROOT
  (SBARQ
    (WHNP (WP Which))
    (SQ (MD would)
      (NP (PRP you))
      (VP
        (ADVP (RB rather))
        (VB live)
        (PRT (RP in))))
    (. ?)))

dep(live-5, Which-1)
pobj(in-6, Which-1)
aux(live-5, would-2)
nsubj(live-5, you-3)
advmod(live-5, rather-4)
root(ROOT-0, live-5)
prt(live-5, in-6)

