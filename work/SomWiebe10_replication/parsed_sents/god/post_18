(ROOT
  (S
    (NP (NNP Ahh))
    (PRN
      (S
        (NP
          (NP (DT The) (NNP Problem))
          (PP (IN of)
            (NP (NNP Pain))))
        (ADVP (RB However))
        (VP (VB keep)
          (PP (IN in)
            (NP (NN mind)))))
      (, ,))
    (`` ``)
    (NP (NNP Science))
    (VP (VBZ does) (RB n't)
      (VP (VB provide)
        (NP (PRP us))
        (PP (IN with)
          (NP (NN truth)))))
    (. .)))

nsubj(provide-15, Ahh-1)
det(Problem-3, The-2)
nsubj(keep-7, Problem-3)
prep_of(Problem-3, Pain-5)
advmod(keep-7, However-6)
parataxis(provide-15, keep-7)
prep_in(keep-7, mind-9)
nsubj(provide-15, Science-12)
aux(provide-15, does-13)
neg(provide-15, n't-14)
root(ROOT-0, provide-15)
dobj(provide-15, us-16)
prep_with(provide-15, truth-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NN practice))
      (PP (IN of)
        (NP (JJ scientific) (NN investigation))))
    (VP (VBZ involves)
      (NP
        (NP (NNS tools))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP help)
              (SBAR
                (S
                  (NP (PRP us))
                  (VP (VBP explain)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (DT the) (JJ physical) (NN world))
                        (VP (MD might)
                          (VP (VB work)))))))))))))
    (. .)))

det(practice-2, The-1)
nsubj(involves-6, practice-2)
amod(investigation-5, scientific-4)
prep_of(practice-2, investigation-5)
root(ROOT-0, involves-6)
dobj(involves-6, tools-7)
nsubj(help-9, tools-7)
rcmod(tools-7, help-9)
nsubj(explain-11, us-10)
ccomp(help-9, explain-11)
advmod(work-17, how-12)
det(world-15, the-13)
amod(world-15, physical-14)
nsubj(work-17, world-15)
aux(work-17, might-16)
ccomp(explain-11, work-17)

(ROOT
  (S
    (NP (DT The) (NN explanation))
    (VP (VBZ does) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ true)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ useful) (, ,) (RB just) (JJ consistent))
                      (PP (IN with)
                        (NP
                          (NP (JJS most))
                          (PP (IN of)
                            (NP (DT the) (NN evidence))))))))))))))
    (. .)))

det(explanation-2, The-1)
nsubj(have-5, explanation-2)
xsubj(true-8, explanation-2)
aux(have-5, does-3)
neg(have-5, n't-4)
root(ROOT-0, have-5)
aux(true-8, to-6)
cop(true-8, be-7)
xcomp(have-5, true-8)
aux(consistent-14, to-9)
cop(consistent-14, be-10)
amod(consistent-14, useful-11)
advmod(consistent-14, just-13)
xcomp(true-8, consistent-14)
prep_with(consistent-14, most-16)
det(evidence-19, the-18)
prep_of(most-16, evidence-19)

(ROOT
  (NP
    (NP (NNP ''))
    (PRN (-LRB- -LRB-)
      (NP (NNP Spencer))
      (-RRB- -RRB-))
    (. .)))

appos(''-1, Spencer-3)

(ROOT
  (S (CC Yet)
    (NP (NN religion))
    (VP (VBZ does) (RB not)
      (VP (VB provide)
        (NP (PRP us))
        (PP (IN with)
          (NP
            (NP (DT the) (NN truth))
            (PP (CC either)
              (NP (DT The) (NN evidence)))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (VP (VBN studied)
              (PP
                (NP (RB just) (CD facts) (NNS points))
                (IN towards)
                (NP (DT a) (NN designer))))))))
    (. .)))

cc(provide-5, Yet-1)
nsubj(provide-5, religion-2)
aux(provide-5, does-3)
neg(provide-5, not-4)
root(ROOT-0, provide-5)
dobj(provide-5, us-6)
det(truth-9, the-8)
prep_with(provide-5, truth-9)
prep(truth-9, either-10)
det(evidence-12, The-11)
dep(either-10, evidence-12)
advmod(studied-14, when-13)
advcl(provide-5, studied-14)
advmod(points-17, just-15)
num(points-17, facts-16)
npadvmod(studied-14, points-17)
det(designer-20, a-19)
prep_towards(studied-14, designer-20)

(ROOT
  (S
    (INTJ (UH Actually))
    (INTJ (UH no))
    (, ,)
    (NP (EX there))
    (VP (VBZ has)
      (VP (VBN been)
        (NP
          (NP (DT no) (JJ demonstrated) (NN evidence))
          (SBAR
            (WHNP (WDT that))
            (S
              (ADVP (RB even))
              (VP (VBZ suggests)
                (NP (DT a) (NN designer))))))))
    (. .)))

dep(evidence-9, Actually-1)
dep(evidence-9, no-2)
expl(evidence-9, there-4)
aux(evidence-9, has-5)
cop(evidence-9, been-6)
det(evidence-9, no-7)
amod(evidence-9, demonstrated-8)
root(ROOT-0, evidence-9)
nsubj(suggests-12, evidence-9)
advmod(suggests-12, even-11)
rcmod(evidence-9, suggests-12)
det(designer-14, a-13)
dobj(suggests-12, designer-14)

(ROOT
  (S
    (NP (NN Chance))
    (VP (VBZ is)
      (VP (VBN ruled)
        (PRT (RP out))
        (PP (IN through)
          (NP (JJ mathematical) (NN probability)))))
    (. .)))

nsubjpass(ruled-3, Chance-1)
auxpass(ruled-3, is-2)
root(ROOT-0, ruled-3)
prt(ruled-3, out-4)
amod(probability-7, mathematical-6)
prep_through(ruled-3, probability-7)

(ROOT
  (S
    (NP (JJ Blind) (NN chance))
    (, ,)
    (NP (NNP yes)
      (CC but)
      (NNP Evolution))
    (VP (VBZ is) (RB not)
      (PP (IN about)
        (NP (JJ blind) (NN chance))))
    (. .)))

amod(chance-2, Blind-1)
nsubj(is-7, chance-2)
nsubj(is-7, yes-4)
conj_but(yes-4, Evolution-6)
nsubj(is-7, Evolution-6)
root(ROOT-0, is-7)
neg(is-7, not-8)
amod(chance-11, blind-10)
prep_about(is-7, chance-11)

(ROOT
  (S
    (NP (NNP Evolution))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN process))
        (SBAR
          (WHPP (IN by)
            (WHNP (WDT which)))
          (S
            (NP (NN life) (NNS forms))
            (VP (VBP change)
              (PP (IN from)
                (NP (NN generation)))
              (, ,)
              (PP (IN with)
                (NP
                  (NP (DT those) (NNS changes))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP benefit)
                        (NP
                          (NP (NN reproduction))
                          (VP (VBG having)
                            (NP
                              (NP (DT a) (JJR greater) (NN chance))
                              (PP (IN of)
                                (S
                                  (VP (VBG being)
                                    (VP (VBN passed)
                                      (PRT (RP down))
                                      (PP (TO to)
                                        (NP (JJ successive) (NNS generations))))))))))))))))))))
    (. .)))

nsubj(process-4, Evolution-1)
cop(process-4, is-2)
det(process-4, the-3)
root(ROOT-0, process-4)
rel(change-9, which-6)
nn(forms-8, life-7)
nsubj(change-9, forms-8)
rcmod(process-4, change-9)
prep_from(change-9, generation-11)
det(changes-15, those-14)
prep_with(change-9, changes-15)
nsubj(benefit-17, changes-15)
rcmod(changes-15, benefit-17)
dobj(benefit-17, reproduction-18)
partmod(reproduction-18, having-19)
det(chance-22, a-20)
amod(chance-22, greater-21)
dobj(having-19, chance-22)
auxpass(passed-25, being-24)
prepc_of(chance-22, passed-25)
prt(passed-25, down-26)
amod(generations-29, successive-28)
prep_to(passed-25, generations-29)

(ROOT
  (S (IN For)
    (ADVP (RBR more) (IN on))
    (NP (DT this))
    (VP (VBP read)
      (NP
        (NP (NNP Robert) (NNP Collins))
        (, ,)
        (NP (NNP Jay) (NNP W.) (NNP Richards))
        (, ,)
        (CC or)
        (NP (NNP Guillermo) (NNP Gonzalez))))
    (. .)))

dep(read-5, For-1)
advmod(on-3, more-2)
advmod(read-5, on-3)
nsubj(read-5, this-4)
root(ROOT-0, read-5)
nn(Collins-7, Robert-6)
dobj(read-5, Collins-7)
nn(Richards-11, Jay-9)
nn(Richards-11, W.-10)
dobj(read-5, Richards-11)
conj_or(Collins-7, Richards-11)
nn(Gonzalez-15, Guillermo-14)
dobj(read-5, Gonzalez-15)
conj_or(Collins-7, Gonzalez-15)

(ROOT
  (S (IN For)
    (NP
      (NP (JJ scientific) (NN evidence))
      (PP (IN in)
        (NP (JJ molecular) (NN biology))))
    (VP (VBP read)
      (NP
        (NP (NNP Michael) (NNP Behe))
        (, ,)
        (CC and)
        (NP (NNP Johnathan) (NNP Wells))))
    (. .)))

dep(read-7, For-1)
amod(evidence-3, scientific-2)
nsubj(read-7, evidence-3)
amod(biology-6, molecular-5)
prep_in(evidence-3, biology-6)
root(ROOT-0, read-7)
nn(Behe-9, Michael-8)
dobj(read-7, Behe-9)
nn(Wells-13, Johnathan-12)
dobj(read-7, Wells-13)
conj_and(Behe-9, Wells-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB encourage)
        (S
          (VP (VBG reading)
            (NP (JJ opposing) (NN view))
            (PP (IN from)
              (NP (NN evolution) (NN scientist)))
            (PP (JJ such)
              (NP (DT a) (NNP Ruse)))))))
    (. .)))

nsubj(encourage-3, I-1)
aux(encourage-3, would-2)
root(ROOT-0, encourage-3)
xcomp(encourage-3, reading-4)
amod(view-6, opposing-5)
dobj(reading-4, view-6)
nn(scientist-9, evolution-8)
prep_from(reading-4, scientist-9)
prep(reading-4, such-10)
det(Ruse-12, a-11)
dep(such-10, Ruse-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ good)
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (PRP you))
                  (VP (VBP choose)
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBZ evidences))))))))))))
    (. .)))

nsubj(good-3, It-1)
cop(good-3, is-2)
root(ROOT-0, good-3)
aux(know-5, to-4)
xcomp(good-3, know-5)
advmod(choose-8, why-6)
nsubj(choose-8, you-7)
advcl(know-5, choose-8)
nsubj(evidences-10, you-9)
ccomp(choose-8, evidences-10)

(ROOT
  (FRAG
    (SBAR
      (WHPP (TO To)
        (WHNP (WDT which)))
      (S
        (NP (PRP I))
        (VP (MD d)
          (VP (VB add)
            (NP
              (NP (NNP Richard) (NNP Dawkins))
              (, ,)
              (NP (NNP Ken) (NNP Miller))
              (, ,)
              (NP (NNP Sean) (NNP Carroll))
              (, ,)
              (CC and)
              (NP (NNP Stephen) (NNP Gould)))))))
    (. .)))

dep(d-4, To-1)
pobj(To-1, which-2)
nsubj(d-4, I-3)
root(ROOT-0, d-4)
dep(d-4, add-5)
nn(Dawkins-7, Richard-6)
dobj(add-5, Dawkins-7)
nn(Miller-10, Ken-9)
dobj(add-5, Miller-10)
conj_and(Dawkins-7, Miller-10)
nn(Carroll-13, Sean-12)
dobj(add-5, Carroll-13)
conj_and(Dawkins-7, Carroll-13)
nn(Gould-17, Stephen-16)
dobj(add-5, Gould-17)
conj_and(Dawkins-7, Gould-17)

(ROOT
  (S
    (NP (DT The) (NN argument))
    (VP (VBZ is)
      (NP
        (NP (NN evolution))
        (SBAR
          (S
            (VP (VBZ believes)
              (SBAR (IN that)
                (S
                  (NP (NN nothing))
                  (VP (VBD came)
                    (PP (IN from)
                      (NP (NN nothing)))
                    (S
                      (VP (TO to)
                        (VP (VB create)
                          (NP (NN something))
                          (PP (IN over)
                            (NP
                              (NP (NNS billions))
                              (PP (IN of)
                                (NP (NNS years))))))))))))))))
    (. .)))

det(argument-2, The-1)
nsubj(evolution-4, argument-2)
cop(evolution-4, is-3)
root(ROOT-0, evolution-4)
rcmod(evolution-4, believes-5)
complm(came-8, that-6)
nsubj(came-8, nothing-7)
xsubj(create-12, nothing-7)
ccomp(believes-5, came-8)
prep_from(came-8, nothing-10)
aux(create-12, to-11)
xcomp(came-8, create-12)
dobj(create-12, something-13)
prep_over(create-12, billions-15)
prep_of(billions-15, years-17)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is) (RB not)
      (ADJP (RB quite) (JJ accurate)
        (SBAR
          (S
            (NP (NN everything))
            (VP (VBD came)
              (PP (IN from)
                (NP (DT the) (JJ original) (NN singularity)))
              (, ,)
              (PP (VBG including)
                (NP (NN space-time))))))))
    (. .)))

nsubj(accurate-5, That-1)
cop(accurate-5, is-2)
neg(accurate-5, not-3)
advmod(accurate-5, quite-4)
root(ROOT-0, accurate-5)
nsubj(came-7, everything-6)
dep(accurate-5, came-7)
det(singularity-11, the-9)
amod(singularity-11, original-10)
prep_from(came-7, singularity-11)
prep_including(came-7, space-time-14)

(ROOT
  (S
    (NP (DT The) (NN bang))
    (VP (VBZ has)
      (NP (DT a) (NN cause)))
    (. .)))

det(bang-2, The-1)
nsubj(has-3, bang-2)
root(ROOT-0, has-3)
det(cause-5, a-4)
dobj(has-3, cause-5)

(ROOT
  (S
    (NP
      (NP (NNP Yes))
      (, ,)
      (CC and)
      (NP (DT that)))
    (VP (VBZ is)
      (ADVP (RB currently))
      (NP
        (NP (DT an) (NN area))
        (PP (IN of)
          (NP (JJ much) (NNP Scientific) (NN investigation)))))
    (. .)))

nsubj(area-8, Yes-1)
conj_and(Yes-1, that-4)
nsubj(area-8, that-4)
cop(area-8, is-5)
advmod(area-8, currently-6)
det(area-8, an-7)
root(ROOT-0, area-8)
amod(investigation-12, much-10)
nn(investigation-12, Scientific-11)
prep_of(area-8, investigation-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NN idea))
      (SBAR (IN that)
        (S
          (NP (NN something))
          (VP (VBZ comes)
            (PP (IN into)
              (NP (NN existence) (NN un-caused)))))))
    (VP (VBZ is)
      (ADJP (JJ absurd)))
    (. .)))

det(idea-2, The-1)
dobj(comes-5, idea-2)
nsubj(absurd-10, idea-2)
complm(comes-5, that-3)
nsubj(comes-5, something-4)
dep(idea-2, comes-5)
nn(un-caused-8, existence-7)
prep_into(comes-5, un-caused-8)
cop(absurd-10, is-9)
root(ROOT-0, absurd-10)

(ROOT
  (ADJP
    (ADJP (RB Very) (JJ true))
    (SBAR (CC so)
      (WHNP (WP what))
      (SQ
        (VP (VBD caused)
          (NP (DT the) (NN designer))))
      (. ?))))

advmod(true-2, Very-1)
root(ROOT-0, true-2)
cc(caused-5, so-3)
dep(caused-5, what-4)
dep(true-2, caused-5)
det(designer-7, the-6)
dobj(caused-5, designer-7)

