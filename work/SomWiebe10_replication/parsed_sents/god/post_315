(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (EX there))
        (VP (VBP are)
          (NP
            (NP (DT an) (JJ enormous) (NN number))
            (PP (IN of)
              (NP
                (NP (NNP God) (NNS concepts))
                (VP (VBG floating)
                  (PRT (RP around)))))))))
    (, ,)
    (NP (PRP one))
    (VP (MD could)
      (ADVP (RB hardly))
      (VP (VB disprove)
        (S
          (NP (PRP them))
          (NP (DT all)))))
    (. .)))

mark(are-3, Since-1)
expl(are-3, there-2)
advcl(disprove-16, are-3)
det(number-6, an-4)
amod(number-6, enormous-5)
nsubj(are-3, number-6)
nn(concepts-9, God-8)
prep_of(number-6, concepts-9)
partmod(concepts-9, floating-10)
prt(floating-10, around-11)
nsubj(disprove-16, one-13)
aux(disprove-16, could-14)
advmod(disprove-16, hardly-15)
root(ROOT-0, disprove-16)
nsubj(all-18, them-17)
xcomp(disprove-16, all-18)

(ROOT
  (S
    (PP (IN For)
      (NP (DT that) (NN matter)))
    (, ,)
    (NP (DT some) (NNS people))
    (VP (VB define)
      (NP (NNP God))
      (PP (IN as)
        (S
          (VP (VBG having)
            (NP
              (NP (DT a) (JJ positive) (NN attitude))
              (PP (IN towards)
                (NP (NN lile))))))))
    (. .)))

det(matter-3, that-2)
prep_for(define-7, matter-3)
det(people-6, some-5)
nsubj(define-7, people-6)
root(ROOT-0, define-7)
dobj(define-7, God-8)
prepc_as(define-7, having-10)
det(attitude-13, a-11)
amod(attitude-13, positive-12)
dobj(having-10, attitude-13)
prep_towards(attitude-13, lile-15)

(ROOT
  (S
    (VP (MD Ca) (RB n't)
      (VP (VB disagree)
        (PP (IN with)
          (NP (DT that)))))
    (. !)))

aux(disagree-3, Ca-1)
neg(disagree-3, n't-2)
root(ROOT-0, disagree-3)
prep_with(disagree-3, that-5)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR (IN If)
      (S
        (PP (IN by)
          (NP (NNP God)))
        (, ,)
        (NP (PRP you))
        (VP (VBP refer)
          (PP (TO to)
            (NP
              (NP (DT a) (NN being))
              (ADJP (JJR greater)
                (PP (IN than)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (PRP one))
                      (VP (MD can) (RB not)
                        (VP (VB conceive))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP argue)
      (SBAR (IN that)
        (S
          (NP (PDT such) (DT a) (NN being))
          (VP (VBZ does) (RB not)
            (VP (VB exist))))))
    (. .)))

advmod(argue-21, However-1)
mark(refer-8, If-3)
prep_by(refer-8, God-5)
nsubj(refer-8, you-7)
advcl(argue-21, refer-8)
det(being-11, a-10)
prep_to(refer-8, being-11)
amod(being-11, greater-12)
dobj(conceive-18, which-14)
nsubj(conceive-18, one-15)
aux(conceive-18, can-16)
neg(conceive-18, not-17)
prepc_than(greater-12, conceive-18)
nsubj(argue-21, I-20)
root(ROOT-0, argue-21)
complm(exist-28, that-22)
predet(being-25, such-23)
det(being-25, a-24)
nsubj(exist-28, being-25)
aux(exist-28, does-26)
neg(exist-28, not-27)
ccomp(argue-21, exist-28)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (VBZ is)
      (ADVP (RB ever))
      (ADJP (RB as) (JJ good))
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (VBP think)
            (SBAR
              (S
                (NP (PRP it))
                (VP (MD will)
                  (VP (VB be)))))))))
    (. .)))

nsubj(good-5, Nothing-1)
cop(good-5, is-2)
advmod(good-5, ever-3)
advmod(good-5, as-4)
root(ROOT-0, good-5)
mark(think-8, as-6)
nsubj(think-8, you-7)
advcl(good-5, think-8)
nsubj(be-11, it-9)
aux(be-11, will-10)
ccomp(think-8, be-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ follows)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN being))
            (ADJP (JJR greater)
              (PP (IN than)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP one))
                    (VP (MD can) (RB not)
                      (VP (VB conceive))))))))
          (VP (MD can) (RB not)
            (ADVP (RB actually))
            (VP (VB exist)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (MD would)
                    (ADVP (RB therefore))
                    (VP (VB be)
                      (ADJP
                        (ADJP (JJR less))
                        (PP (IN than)
                          (NP
                            (NP (DT another) (NN being))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBD was)
                                  (PP (IN like)
                                    (NP (DT the)
                                      (ADJP (JJ first)
                                        (CC but)
                                        (JJ non))
                                      (JJ existent))))))))))))))))))
    (. .)))

nsubj(follows-2, It-1)
root(ROOT-0, follows-2)
complm(exist-16, that-3)
det(being-5, the-4)
nsubj(exist-16, being-5)
amod(being-5, greater-6)
dobj(conceive-12, which-8)
nsubj(conceive-12, one-9)
aux(conceive-12, can-10)
neg(conceive-12, not-11)
prepc_than(greater-6, conceive-12)
aux(exist-16, can-13)
neg(exist-16, not-14)
advmod(exist-16, actually-15)
ccomp(follows-2, exist-16)
mark(less-22, because-17)
nsubj(less-22, it-18)
aux(less-22, would-19)
advmod(less-22, therefore-20)
cop(less-22, be-21)
advcl(exist-16, less-22)
det(being-25, another-24)
prep_than(less-22, being-25)
nsubj(was-27, being-25)
rcmod(being-25, was-27)
det(first-30, the-29)
prep_like(was-27, first-30)
prep_like(was-27, non-32)
conj_but(first-30, non-32)
amod(first-30, existent-33)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT no) (NNP God)))
    (. .)))

advmod(is-3, Therefore-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
det(God-5, no-4)
nsubj(is-3, God-5)

