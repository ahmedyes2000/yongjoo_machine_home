(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VB apologize)))
    (, ,)
    (NP (DT this))
    (VP (VBZ is) (RB not)
      (ADJP (JJ much)
        (PP (IN of)
          (NP (DT a) (NN response))))
      (PP (TO to)
        (NP (PRP$ your) (NN work))))
    (. .)))

nsubj(apologize-2, I-1)
ccomp(much-7, apologize-2)
nsubj(much-7, this-4)
cop(much-7, is-5)
neg(much-7, not-6)
root(ROOT-0, much-7)
det(response-10, a-9)
prep_of(much-7, response-10)
poss(work-13, your-12)
prep_to(much-7, work-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ tired)))
    (. .)))

nsubj(tired-3, I-1)
cop(tired-3, am-2)
root(ROOT-0, tired-3)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (MD would) (RB not)
      (VP (VB make)
        (NP
          (NP (DT a) (JJ blind) (NN bit))
          (PP (IN of)
            (NP (NN difference))))
        (SBAR (RB even) (IN if)
          (S
            (S
              (NP (PRP he))
              (NP (PRP she)))
            (CC or)
            (S
              (S
                (NP (PRP it))
                (VP (VBD did)
                  (VP (VB exist))))
              (: ...)
              (S
                (NP (DT the) (NN world))
                (VP (VBZ is)
                  (NP (RB just) (DT the) (JJ same)))))))))
    (: ...)))

cc(make-5, And-1)
nsubj(make-5, it-2)
aux(make-5, would-3)
neg(make-5, not-4)
root(ROOT-0, make-5)
det(bit-8, a-6)
amod(bit-8, blind-7)
dobj(make-5, bit-8)
prep_of(bit-8, difference-10)
advmod(she-14, even-11)
dep(she-14, if-12)
dep(she-14, he-13)
dep(make-5, she-14)
nsubj(exist-18, it-16)
aux(exist-18, did-17)
dep(make-5, exist-18)
conj_or(she-14, exist-18)
det(world-21, the-20)
nsubj(same-25, world-21)
cop(same-25, is-22)
advmod(same-25, just-23)
det(same-25, the-24)
parataxis(exist-18, same-25)

(ROOT
  (S
    (S
      (INTJ (NN Hamas) (, ,) (NN Al-Qaeda))
      (, ,)
      (NP (DT the) (NNP US) (NN military))
      (ADVP (DT all))
      (ADVP (RB still))
      (VP (VBP exist)))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (VP (RB all)
        (ADVP (RB still))
        (VBG torturing)
        (CC and)
        (VBG killing)
        (NP (DT each) (JJ other))))
    (. .)))

dep(exist-10, Hamas-1)
dep(Hamas-1, Al-Qaeda-3)
det(military-7, the-5)
nn(military-7, US-6)
nsubj(exist-10, military-7)
advmod(exist-10, all-8)
advmod(exist-10, still-9)
ccomp(torturing-16, exist-10)
nsubj(torturing-16, they-12)
nsubj(killing-18, they-12)
aux(torturing-16, are-13)
advmod(torturing-16, all-14)
advmod(torturing-16, still-15)
root(ROOT-0, torturing-16)
conj_and(torturing-16, killing-18)
det(other-20, each-19)
dobj(torturing-16, other-20)

(ROOT
  (S
    (NP
      (NP (PDT All) (DT the) (NNS people))
      (VP (VBG doing)
        (NP
          (NP (JJ compassionate) (JJ loving) (JJ helpful) (NNS things))
          (PP (IN in)
            (NP (DT the) (NN world))))))
    (VP (VBP are) (RB also)
      (ADVP (RB still))
      (ADVP (RB there)))
    (. .)))

predet(people-3, All-1)
det(people-3, the-2)
nsubj(are-12, people-3)
partmod(people-3, doing-4)
amod(things-8, compassionate-5)
amod(things-8, loving-6)
amod(things-8, helpful-7)
dobj(doing-4, things-8)
det(world-11, the-10)
prep_in(things-8, world-11)
root(ROOT-0, are-12)
advmod(are-12, also-13)
advmod(are-12, still-14)
advmod(are-12, there-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN god))
        (VP (VBZ is)
          (UCP
            (NP (RB there))
            (CC or)
            (SBAR (IN if)
              (S
                (NP (NN god))
                (VP (VBZ is) (RB not)
                  (NP (RB there)))))))))
    (: ...)
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT no) (NN difference)))
    (. .)))

mark(there-4, If-1)
nsubj(there-4, god-2)
cop(there-4, is-3)
advcl(is-13, there-4)
mark(there-10, if-6)
nsubj(there-10, god-7)
cop(there-10, is-8)
neg(there-10, not-9)
conj_or(there-4, there-10)
advcl(is-13, there-10)
expl(is-13, there-12)
root(ROOT-0, is-13)
det(difference-15, no-14)
nsubj(is-13, difference-15)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (PRN (, ,)
      (S
        (NP (DT the) (JJ new) (NNP US) (NNP President))
        (VP (MD will)
          (VP (VB help)
            (VP (VB bring)
              (NP (DT some) (NN peace))
              (PP (IN into)
                (NP (DT this) (NN world)))))))
      (, ,))
    (S
      (NP (PRP I))
      (ADVP (RB certainly))
      (VP (VBP hope)
        (ADVP (RB so))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB even))
      (NP (PRP he))
      (VP (MD can) (RB not)
        (VP (VB bring)
          (NP (DT a) (JJ non-existent) (NN god))
          (PP (IN into)
            (NP (NN existence))))))
    (. .)))

advmod(hope-18, Perhaps-1)
det(President-6, the-3)
amod(President-6, new-4)
nn(President-6, US-5)
nsubj(help-8, President-6)
aux(help-8, will-7)
dep(hope-18, help-8)
xcomp(help-8, bring-9)
det(peace-11, some-10)
dobj(bring-9, peace-11)
det(world-14, this-13)
prep_into(bring-9, world-14)
nsubj(hope-18, I-16)
advmod(hope-18, certainly-17)
root(ROOT-0, hope-18)
advmod(hope-18, so-19)
advmod(bring-26, even-22)
nsubj(bring-26, he-23)
aux(bring-26, can-24)
neg(bring-26, not-25)
conj_but(hope-18, bring-26)
det(god-29, a-27)
amod(god-29, non-existent-28)
dobj(bring-26, god-29)
prep_into(bring-26, existence-31)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD should) (RB not)
        (ADVP (RB really))
        (VP (VB be)
          (VP (VBG writing)
            (ADVP (RB now))))))
    (: ...)
    (S (CC but)
      (NP (PRP I))
      (ADVP (RB just))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB say)
              (NP
                (NP (DT a) (NN couple))
                (PP (IN of)
                  (NP (NNS things)))))))))
    (: ...)
    (S
      (NP
        (NP
          (NP (DT the) (NN belief))
          (PP (IN in)
            (NP (NNP God))))
        (CC or)
        (NP
          (NP (DT a) (NN god))
          (CC or)
          (NP (NNS gods))))
      (VP (VBZ is)
        (ADJP (JJ quaint))))
    (. .)))

nsubj(writing-6, I-1)
aux(writing-6, should-2)
neg(writing-6, not-3)
advmod(writing-6, really-4)
aux(writing-6, be-5)
root(ROOT-0, writing-6)
advmod(writing-6, now-7)
cc(want-12, but-9)
nsubj(want-12, I-10)
xsubj(say-14, I-10)
advmod(want-12, just-11)
parataxis(writing-6, want-12)
aux(say-14, to-13)
xcomp(want-12, say-14)
det(couple-16, a-15)
dobj(say-14, couple-16)
prep_of(couple-16, things-18)
det(belief-21, the-20)
nsubj(quaint-30, belief-21)
prep_in(belief-21, God-23)
det(god-26, a-25)
conj_or(belief-21, god-26)
nsubj(quaint-30, god-26)
conj_or(belief-21, gods-28)
conj_or(god-26, gods-28)
cop(quaint-30, is-29)
parataxis(writing-6, quaint-30)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADVP (RB now))
        (NP (JJ extensive) (JJ neuroscientific) (`` ``) (NN evidence) ('' ''))
        (PP (IN for)
          (NP (`` ``)
            (NP
              (NP (NN god))
              (PP (IN on)
                (NP (DT the) (NN brain))))
            ('' '')
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (DT neither))
                (VP
                  (VP (VBZ proves))
                  (CC nor)
                  (VP (VBZ disproves)
                    (NP (NN anything))
                    (ADVP (RB much))))))))))
    (: ...)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ interesting)
          (S
            (VP (TO to)
              (VP (VB see)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (DT the) (NN brain))
                    (VP (VBZ functions))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(is-2, now-3)
amod(evidence-7, extensive-4)
amod(evidence-7, neuroscientific-5)
nsubj(is-2, evidence-7)
prep_for(is-2, god-11)
det(brain-14, the-13)
prep_on(god-11, brain-14)
dobj(proves-18, which-16)
rel(proves-18, which-16)
nsubj(proves-18, neither-17)
nsubj(disproves-20, neither-17)
rcmod(god-11, proves-18)
rcmod(god-11, disproves-20)
conj_nor(proves-18, disproves-20)
dobj(disproves-20, anything-21)
advmod(disproves-20, much-22)
nsubj(interesting-27, it-25)
cop(interesting-27, is-26)
conj_but(is-2, interesting-27)
aux(see-29, to-28)
xcomp(interesting-27, see-29)
advmod(functions-33, how-30)
det(brain-32, the-31)
nsubj(functions-33, brain-32)
ccomp(see-29, functions-33)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP take)
      (NP (DT all) (JJ human) (NN knowledge)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (JJ human) (NNS constructions))))))
      (PRN (-LRB- -LRB-)
        (S
          (NP (PRP we))
          (VP (MD can)
            (ADVP (RB only))
            (VP (VB see)
              (SBAR
                (WHNP (WP what))
                (S
                  (S
                    (NP (NNS humans))
                    (VP (MD can)
                      (VP (VB see))))
                  (: ;)
                  (S
                    (NP (PRP we))
                    (VP (MD can)
                      (ADVP (RB only))
                      (VP (VB hear)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (NNS humans))
                            (VP (MD can)
                              (VP (VB hear)
                                (NP (FW etc) (FW etc))))))))))))))
        (-RRB- -RRB-)))
    (. .)))

nsubj(take-2, I-1)
root(ROOT-0, take-2)
det(knowledge-5, all-3)
amod(knowledge-5, human-4)
dobj(take-2, knowledge-5)
aux(constructions-9, to-6)
cop(constructions-9, be-7)
amod(constructions-9, human-8)
infmod(knowledge-5, constructions-9)
nsubj(see-14, we-11)
aux(see-14, can-12)
advmod(see-14, only-13)
parataxis(take-2, see-14)
dep(see-18, what-15)
nsubj(see-18, humans-16)
aux(see-18, can-17)
dep(see-14, see-18)
nsubj(hear-23, we-20)
aux(hear-23, can-21)
advmod(hear-23, only-22)
parataxis(see-18, hear-23)
dobj(hear-27, what-24)
nsubj(hear-27, humans-25)
aux(hear-27, can-26)
ccomp(hear-23, hear-27)
nn(etc-29, etc-28)
dobj(hear-27, etc-29)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP
        (ADVP (RB only))
        (VB think)
        (CC or)
        (VB imagine)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NNS humans))
            (VP (MD can)
              (VP (VB think)
                (CC or)
                (VB imagine)))))))
    (. .)))

nsubj(think-4, We-1)
nsubj(imagine-6, We-1)
aux(think-4, can-2)
advmod(think-4, only-3)
root(ROOT-0, think-4)
conj_or(think-4, imagine-6)
dobj(think-10, what-7)
nsubj(think-10, humans-8)
nsubj(imagine-12, humans-8)
aux(think-10, can-9)
ccomp(think-4, think-10)
ccomp(think-4, imagine-12)
conj_or(think-10, imagine-12)

(ROOT
  (S
    (NP
      (NP (NN Anything))
      (PP (IN beyond)
        (NP
          (NP (DT the) (NN scope))
          (PP (IN of)
            (NP (PRP$ our) (NNS brains))))))
    (VP (VBZ is)
      (PP (IN by)
        (NP (NN definition) (NN unknowable))))
    (. .)))

nsubj(is-8, Anything-1)
det(scope-4, the-3)
prep_beyond(Anything-1, scope-4)
poss(brains-7, our-6)
prep_of(scope-4, brains-7)
root(ROOT-0, is-8)
nn(unknowable-11, definition-10)
prep_by(is-8, unknowable-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP (DT a) (NN god)))))
    (NP (PRP we))
    (VP (MD could) (RB not)
      (ADVP (RB possibly))
      (VP (VB know)
        (NP (PRP it))))
    (. .)))

mark(was-3, If-1)
expl(was-3, there-2)
advcl(know-10, was-3)
det(god-5, a-4)
nsubj(was-3, god-5)
nsubj(know-10, we-6)
aux(know-10, could-7)
neg(know-10, not-8)
advmod(know-10, possibly-9)
root(ROOT-0, know-10)
dobj(know-10, it-11)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (JJ same) (NN sense))
        (SBAR (IN that)
          (S
            (NP (DT no) (JJ human) (NN being))
            (VP (MD can)
              (ADVP (RB possibly))
              (VP (VB know)
                (NP (NN everything))))))))
    (NP (DT that))
    (VP (VBZ is)
      (VP (VBG going)
        (PRT (RP on))
        (PP (IN in)
          (NP (DT the) (NN universe)))))
    (. .)))

det(sense-4, the-2)
amod(sense-4, same-3)
prep_in(going-15, sense-4)
complm(know-11, that-5)
det(being-8, no-6)
amod(being-8, human-7)
nsubj(know-11, being-8)
aux(know-11, can-9)
advmod(know-11, possibly-10)
dep(sense-4, know-11)
dobj(know-11, everything-12)
nsubj(going-15, that-13)
aux(going-15, is-14)
root(ROOT-0, going-15)
prt(going-15, on-16)
det(universe-19, the-18)
prep_in(going-15, universe-19)

(ROOT
  (S
    (S
      (NP (NNP God) (, ,))
      (VP (VBZ is)
        (ADVP (RB apparently))))
    (, ,)
    (S
      (S
        (ADJP
          (ADJP (JJR bigger))
          (PP (IN than)
            (NP (DT the) (NN universe))))
        (, ,)
        (SBAR (IN after)
          (S
            (NP (DT all))
            (NP (PRP he))))
        (, ,)
        (NP (PRP she)
          (CC or)
          (PRP it))
        (VP (VBD made)
          (NP (DT the) (NN universe))))
      (, ,) (RB so)
      (S
        (NP (PRP he))
        (NP (PRP she)))
      (CC or)
      (S
        (NP (PRP it))
        (VP (MD must)
          (VP (VB be)
            (ADJP (JJR bigger))
            (PRN (-LRB- -LRB-)
              (PP (IN in)
                (NP (DT some) (NN sense)))
              (-RRB- -RRB-))))))
    (CC and)
    (S
      (ADVP (RB therefore))
      (PP (IN as)
        (NP (DT a) (JJ mere) (NN humanoid)))
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB know)
          (S
            (NP (PRP him))
            (NP (PRP her)
              (CC or)
              (PRP it))))))
    (. .)))

nsubj(is-3, God-1)
root(ROOT-0, is-3)
advmod(is-3, apparently-4)
dep(made-18, bigger-6)
det(universe-9, the-8)
prep_than(bigger-6, universe-9)
mark(he-13, after-11)
dep(he-13, all-12)
advcl(made-18, he-13)
nsubj(made-18, she-15)
conj_or(she-15, it-17)
nsubj(made-18, it-17)
conj_and(is-3, made-18)
det(universe-20, the-19)
dobj(made-18, universe-20)
conj_and(is-3, so-22)
advmod(made-18, so-22)
conj_or(made-18, so-22)
dep(she-24, he-23)
dep(made-18, she-24)
nsubj(bigger-29, it-26)
aux(bigger-29, must-27)
cop(bigger-29, be-28)
conj_and(is-3, bigger-29)
conj_or(made-18, bigger-29)
dep(bigger-29, in-31)
det(sense-33, some-32)
pobj(in-31, sense-33)
advmod(know-44, therefore-36)
det(humanoid-40, a-38)
amod(humanoid-40, mere-39)
prep_as(know-44, humanoid-40)
nsubj(know-44, I-41)
aux(know-44, can-42)
neg(know-44, not-43)
conj_and(is-3, know-44)
nsubj(her-46, him-45)
xcomp(know-44, her-46)
xcomp(know-44, it-48)
conj_or(her-46, it-48)

