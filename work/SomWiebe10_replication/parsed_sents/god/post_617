(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (EX there))
    (VP (MD can)
      (VP (VB be)
        (ADJP (RB no) (JJ good)
          (PP (IN without)
            (NP (NNP God))))))
    (. .)))

dep(good-7, Yes-1)
expl(good-7, there-3)
aux(good-7, can-4)
cop(good-7, be-5)
advmod(good-7, no-6)
root(ROOT-0, good-7)
prep_without(good-7, God-9)

(ROOT
  (S
    (PP (IN With)
      (PP (IN out)
        (NP (DT an) (NN author))))
    (, ,)
    (NP (NN everything))
    (ADVP (RB then))
    (VP (VBZ becomes)
      (NP
        (NP (DT a) (NN matter))
        (PP (IN of)
          (NP (JJ personal) (NN preference)
            (CC and)
            (NN interpretation)))))
    (. .)))

prep(matter-10, With-1)
pcomp(With-1, out-2)
det(author-4, an-3)
prep_out(With-1, author-4)
nsubj(matter-10, everything-6)
advmod(matter-10, then-7)
cop(matter-10, becomes-8)
det(matter-10, a-9)
root(ROOT-0, matter-10)
amod(preference-13, personal-12)
prep_of(matter-10, preference-13)
prep_of(matter-10, interpretation-15)
conj_and(preference-13, interpretation-15)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ means)
        (SBAR
          (S
            (NP (NN man))
            (VP (VBZ has)
              (NP
                (NP (DT no) (NN purpose))
                (SBAR
                  (WHPP (IN for)
                    (WHNP (WDT which)))
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (VP (VBN made)))))))))))
    (CC and)
    (S
      (ADVP (RB therefore))
      (NP (EX there))
      (VP (MD can)
        (VP (VB be)
          (NP
            (NP (DT no) (NN deviation))
            (PP (IN from)
              (NP (DT a) (NN norm)))))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
nsubj(has-4, man-3)
ccomp(means-2, has-4)
det(purpose-6, no-5)
dobj(has-4, purpose-6)
rel(made-11, which-8)
nsubjpass(made-11, he-9)
auxpass(made-11, was-10)
rcmod(purpose-6, made-11)
advmod(deviation-18, therefore-13)
expl(deviation-18, there-14)
aux(deviation-18, can-15)
cop(deviation-18, be-16)
det(deviation-18, no-17)
conj_and(means-2, deviation-18)
det(norm-21, a-20)
prep_from(deviation-18, norm-21)

(ROOT
  (SBARQ
    (WHNP (WDT Which) (NN product))
    (SQ (VBZ has)
      (NP
        (NP (DT any) (NN god))
        (PP (IN in)
          (NP
            (NP (DT the) (NN history))
            (PP (IN of)
              (NP (NN mankind))))))
      (VP (VBN shown)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB use)))))))
    (. ?)))

det(product-2, Which-1)
dobj(shown-11, product-2)
aux(shown-11, has-3)
det(god-5, any-4)
nsubj(shown-11, god-5)
det(history-8, the-7)
prep_in(god-5, history-8)
prep_of(history-8, mankind-10)
root(ROOT-0, shown-11)
advmod(use-14, how-12)
aux(use-14, to-13)
ccomp(shown-11, use-14)
xcomp(shown-11, use-14)

(ROOT
  (SBARQ (CC And)
    (WHNP (WP what))
    (SQ (VBZ is)
      (NP
        (NP (DT this) (NN purpose))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP speak)
              (PP (IN of)))))))
    (. ?)))

cc(is-3, And-1)
attr(is-3, what-2)
root(ROOT-0, is-3)
det(purpose-5, this-4)
nsubj(is-3, purpose-5)
prep_of(speak-7, purpose-5)
nsubj(speak-7, you-6)
rcmod(purpose-5, speak-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP mean)))
    (, ,)
    (S
      (NP (NN everyone))
      (VP (VBZ has)
        (NP (PRP$ their) (JJ own) (`` ``) (NN purpose) ('' ''))))
    (CC and)
    (S
      (NP (DT the) (NN world))
      (VP (VBZ has) (RB n't)
        (VP (VBN ended)
          (PP (IN in)
            (NP (NN fire)
              (CC and)
              (NN brimstone)))
          (ADVP (RB thus) (RB far)))))
    (. .)))

nsubj(mean-2, I-1)
root(ROOT-0, mean-2)
nsubj(has-5, everyone-4)
conj_and(mean-2, has-5)
poss(purpose-9, their-6)
amod(purpose-9, own-7)
dobj(has-5, purpose-9)
det(world-13, the-12)
nsubj(ended-16, world-13)
aux(ended-16, has-14)
neg(ended-16, n't-15)
conj_and(mean-2, ended-16)
prep_in(ended-16, fire-18)
prep_in(ended-16, brimstone-20)
conj_and(fire-18, brimstone-20)
advmod(far-22, thus-21)
advmod(ended-16, far-22)

(ROOT
  (S (CC But)
    (ADVP
      (ADVP (RBR worse))
      (SBAR (IN than)
        (S
          (NP (DT that))
          (VP (VBZ is)
            (SBAR (IN if)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP
                    (NP (DT no) (NN life))
                    (PP (IN after)
                      (NP (NN death)))))))))))
    (, ,)
    (NP (RB then) (NN justice))
    (VP (VBZ becomes)
      (NP (DT a) (NN sham)))
    (. .)))

cc(becomes-16, But-1)
advmod(becomes-16, worse-2)
mark(is-5, than-3)
nsubj(is-5, that-4)
dep(worse-2, is-5)
mark(is-8, if-6)
expl(is-8, there-7)
advcl(is-5, is-8)
det(life-10, no-9)
nsubj(is-8, life-10)
prep_after(life-10, death-12)
advmod(justice-15, then-14)
nsubj(becomes-16, justice-15)
root(ROOT-0, becomes-16)
det(sham-18, a-17)
attr(becomes-16, sham-18)

(ROOT
  (S
    (NP
      (NP (DT Those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP
            (VP (VB go)
              (PP (IN on)
                (NP (JJ shooting) (NNS sprees))))
            (CC and)
            (VP
              (ADVP (RB then))
              (VB take)
              (NP (PRP$ their) (NNS lives)))))))
    (VP (VB escape)
      (NP (NN justice)))
    (. .)))

nsubj(go-3, Those-1)
nsubj(take-9, Those-1)
nsubj(escape-12, Those-1)
rcmod(Those-1, go-3)
amod(sprees-6, shooting-5)
prep_on(go-3, sprees-6)
advmod(take-9, then-8)
rcmod(Those-1, take-9)
conj_and(go-3, take-9)
poss(lives-11, their-10)
dobj(take-9, lives-11)
root(ROOT-0, escape-12)
dobj(escape-12, justice-13)

(ROOT
  (S
    (NP (NNP Hitler))
    (VP
      (VP (VBD escaped)
        (NP (NN justice)))
      (CC and)
      (VP (VBD got)
        (PRT (RP off))))
    (. .)))

nsubj(escaped-2, Hitler-1)
nsubj(got-5, Hitler-1)
root(ROOT-0, escaped-2)
dobj(escaped-2, justice-3)
conj_and(escaped-2, got-5)
prt(got-5, off-6)

(ROOT
  (S (CC Or)
    (, ,)
    (SBAR (IN if)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT no) (NN life))
            (PP (IN after)
              (NP (NN death)))))))
    (, ,)
    (NP (NN life))
    (VP (VBZ becomes)
      (ADJP (RB even) (RBR more) (JJ important)))
    (. .)))

cc(becomes-12, Or-1)
mark(is-5, if-3)
expl(is-5, there-4)
advcl(becomes-12, is-5)
det(life-7, no-6)
nsubj(is-5, life-7)
prep_after(life-7, death-9)
nsubj(becomes-12, life-11)
root(ROOT-0, becomes-12)
advmod(important-15, even-13)
advmod(important-15, more-14)
acomp(becomes-12, important-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB submit)
          (SBAR (IN that)
            (S
              (NP
                (NP (RB most) (DT every) (JJ mass) (NN murderer))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN history))
                    (PP (IN of)
                      (NP (DT the) (NN world))))))
              (VP (VBD had)
                (NP
                  (NP (DT some) (NN belief))
                  (PP (IN in)
                    (NP (DT some) (NN god))))))))))
    (, ,) (IN so)
    (S
      (NP (DT this) (JJ entire) (NN statement))
      (VP (VBZ is)
        (ADVP (RB simply))
        (ADJP (JJ incorrect))))
    (. .)))

nsubj(submit-3, I-1)
aux(submit-3, would-2)
root(ROOT-0, submit-3)
complm(had-15, that-4)
advmod(murderer-8, most-5)
det(murderer-8, every-6)
amod(murderer-8, mass-7)
nsubj(had-15, murderer-8)
det(history-11, the-10)
prep_in(murderer-8, history-11)
det(world-14, the-13)
prep_of(history-11, world-14)
ccomp(submit-3, had-15)
det(belief-17, some-16)
dobj(had-15, belief-17)
det(god-20, some-19)
prep_in(belief-17, god-20)
dep(submit-3, so-22)
det(statement-25, this-23)
amod(statement-25, entire-24)
nsubj(incorrect-28, statement-25)
cop(incorrect-28, is-26)
advmod(incorrect-28, simply-27)
ccomp(submit-3, incorrect-28)

(ROOT
  (S (CC But)
    (NP (DT the) (JJS worst) (NN thing))
    (VP (VBZ is)
      (UCP
        (SBAR (IN that)
          (S
            (NP (PRP$ our) (NNS lives))
            (VP (VBP become)
              (ADJP (JJ pointless)))))
        (CC and)
        (PP (IN without)
          (NP (NN meaning)
            (CC or)
            (NN value)))))
    (. .)))

cc(is-5, But-1)
det(thing-4, the-2)
amod(thing-4, worst-3)
nsubj(is-5, thing-4)
root(ROOT-0, is-5)
complm(pointless-10, that-6)
poss(lives-8, our-7)
nsubj(pointless-10, lives-8)
cop(pointless-10, become-9)
dep(is-5, pointless-10)
dep(is-5, without-12)
conj_and(pointless-10, without-12)
pobj(without-12, meaning-13)
pobj(without-12, value-15)
conj_or(meaning-13, value-15)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (JJ objective) (NN standard))
        (PP (IN by)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (TO to)
                (VP (VB judge)
                  (NP (NNS things)))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(standard-5, no-3)
amod(standard-5, objective-4)
nsubj(is-2, standard-5)
nsubj(judge-9, which-7)
aux(judge-9, to-8)
prepc_by(standard-5, judge-9)
dobj(judge-9, things-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP come)
          (PP (IN from)
            (NP (NN nothing)
              (CC and)
              (NN return)))
          (PP (TO to)
            (NP
              (NP (NN nothing))
              (, ,)
              (NP (NNS folks)))))))
    (NP (PRP we))
    (VP (VBP are)
      (NP (NN nothing)))
    (. .)))

mark(come-3, If-1)
nsubj(come-3, we-2)
advcl(nothing-14, come-3)
prep_from(come-3, nothing-5)
prep_from(come-3, return-7)
conj_and(nothing-5, return-7)
prep_to(come-3, nothing-9)
appos(nothing-9, folks-11)
nsubj(nothing-14, we-12)
cop(nothing-14, are-13)
root(ROOT-0, nothing-14)

(ROOT
  (S
    (NP (PRP$ Our) (NNS lives))
    (VP (VBP have)
      (NP (DT no) (NN value)))
    (. .)))

poss(lives-2, Our-1)
nsubj(have-3, lives-2)
root(ROOT-0, have-3)
det(value-5, no-4)
dobj(have-3, value-5)

(ROOT
  (S (RB Then)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN difference))
        (PP (IN between)
          (S
            (VP
              (VP (VBG gassing)
                (NP (NNS termites)))
              (CC and)
              (VP (VBG gassing)
                (NP
                  (QP (CD 6) (CD million))
                  (NNPS Jews))))))))
    (. .)))

advmod(is-3, Then-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
det(difference-5, no-4)
nsubj(is-3, difference-5)
prepc_between(difference-5, gassing-7)
dobj(gassing-7, termites-8)
prepc_between(difference-5, gassing-10)
conj_and(gassing-7, gassing-10)
number(million-12, 6-11)
num(Jews-13, million-12)
dobj(gassing-10, Jews-13)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (PP (IN as)
      (NP
        (NP (CD one))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ does) (RB not)
              (VP (VB believe)
                (PP (IN in)
                  (NP (DT any) (NN god)))
                (ADVP (RB whatsoever))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB promise)
        (PP (IN from)
          (NP (NN experience)))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP
              (ADVP (RB still))
              (VBP find)
              (NP
                (NP (RB plenty))
                (PP (IN of)
                  (NP (NNS points))))
              (S
                (VP (TO to)
                  (VP (VB continue)
                    (NP (NN living))))))))))
    (. .)))

advmod(promise-16, Again-1)
nsubj(believe-8, one-4)
prep_as(promise-16, one-4)
aux(believe-8, does-6)
neg(believe-8, not-7)
rcmod(one-4, believe-8)
det(god-11, any-10)
prep_in(believe-8, god-11)
advmod(believe-8, whatsoever-12)
nsubj(promise-16, I-14)
aux(promise-16, can-15)
root(ROOT-0, promise-16)
prep_from(promise-16, experience-18)
complm(find-22, that-19)
nsubj(find-22, I-20)
advmod(find-22, still-21)
ccomp(promise-16, find-22)
dobj(find-22, plenty-23)
prep_of(plenty-23, points-25)
aux(continue-27, to-26)
xcomp(find-22, continue-27)
dobj(continue-27, living-28)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB again))
      (, ,)
      (NP (PRP it))
      (VP (VBZ makes)
        (SBAR
          (S
            (NP (DT those) (NNS lives))
            (VP (VBD lost)
              (ADJP (RB even) (RBR more) (JJ tragic))
              (SBAR (IN as)
                (S
                  (NP (PRP I))
                  (VP (VBP 'm)
                    (ADJP (RB pretty) (JJ sure)
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBP 're)
                            (ADJP (RB just) (JJ dead))))))))))))))
    (, ,)
    (CC and)
    (RB not)
    (S
      (VP (VBG floating)
        (ADVP (IN around) (RB somewhere))
        (PP (IN as)
          (NP (JJ magical) (NNS spirits)))))
    (. .)))

advmod(makes-5, again-2)
nsubj(makes-5, it-4)
root(ROOT-0, makes-5)
det(lives-7, those-6)
nsubj(lost-8, lives-7)
ccomp(makes-5, lost-8)
advmod(tragic-11, even-9)
advmod(tragic-11, more-10)
acomp(lost-8, tragic-11)
mark(sure-16, as-12)
nsubj(sure-16, I-13)
cop(sure-16, 'm-14)
advmod(sure-16, pretty-15)
advcl(lost-8, sure-16)
nsubj(dead-20, they-17)
cop(dead-20, 're-18)
advmod(dead-20, just-19)
dep(sure-16, dead-20)
conj_and(makes-5, not-23)
neg(makes-5, not-23)
dep(makes-5, floating-24)
advmod(floating-24, around-25)
advmod(around-25, somewhere-26)
amod(spirits-29, magical-28)
prep_as(floating-24, spirits-29)

(ROOT
  (S
    (NP (DT That))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB scare)
            (NP (DT any) (JJ sane) (NN person))))))
    (. .)))

nsubj(ought-2, That-1)
xsubj(scare-4, That-1)
root(ROOT-0, ought-2)
aux(scare-4, to-3)
xcomp(ought-2, scare-4)
det(person-7, any-5)
amod(person-7, sane-6)
dobj(scare-4, person-7)

(ROOT
  (S
    (PP (IN Because)
      (NP (RB then)))
    (NP (PRP you))
    (VP (VBP become)
      (NP
        (NP (DT a) (NN commodity))
        (PP (IN for)
          (NP (DT the) (NN state)
            (S
              (VP (TO to)
                (VP (VB use)
                  (CC and)
                  (VB consume)
                  (PP (IN for)
                    (NP
                      (NP (PRP it) (POS 's))
                      (NNS purposes))))))))))
    (. .)))

prep(commodity-6, Because-1)
pobj(Because-1, then-2)
nsubj(commodity-6, you-3)
cop(commodity-6, become-4)
det(commodity-6, a-5)
root(ROOT-0, commodity-6)
det(state-9, the-8)
prep_for(commodity-6, state-9)
aux(use-11, to-10)
infmod(state-9, use-11)
infmod(state-9, consume-13)
conj_and(use-11, consume-13)
poss(purposes-17, it-15)
prep_for(use-11, purposes-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN correlation))
        (PP (IN between)
          (NP (NNP Communism)
            (CC and)
            (NNP atheism)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(correlation-4, a-3)
nsubj(is-2, correlation-4)
prep_between(correlation-4, Communism-6)
prep_between(correlation-4, atheism-8)
conj_and(Communism-6, atheism-8)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (JJ further) (NN proof)))
      (VP
        (VP (VB pick)
          (PRT (RP up))
          (NP
            (NP (DT a) (NN copy))
            (PP (IN of)
              (NP
                (NP (DT The) (NNP Guinness) (NNP Book))
                (PP (IN of)
                  (NP (NNP World) (NNPS Records)))))))
        (CC and)
        (VP (VB check)
          (PRT (RP out))
          (NP
            (NP (DT the) (JJS greatest) (NN mass) (NNS murderers))
            (PP (IN of)
              (NP (DT all) (NN time)))))))
    (: :)
    (S
      (NP
        (NP (JJ Atheistic) (NNS regimes))
        (, ,)
        (NP (NNP Stalin))
        (, ,))
      (VP (VBZ Mao)
        (NP (FW etc) (FW etc.))))
    (. .)))

amod(proof-3, further-2)
prep_for(pick-4, proof-3)
root(ROOT-0, pick-4)
prt(pick-4, up-5)
det(copy-7, a-6)
dobj(pick-4, copy-7)
det(Book-11, The-9)
nn(Book-11, Guinness-10)
prep_of(copy-7, Book-11)
nn(Records-14, World-13)
prep_of(Book-11, Records-14)
conj_and(pick-4, check-16)
prt(check-16, out-17)
det(murderers-21, the-18)
amod(murderers-21, greatest-19)
nn(murderers-21, mass-20)
dobj(check-16, murderers-21)
det(time-24, all-23)
prep_of(murderers-21, time-24)
amod(regimes-27, Atheistic-26)
nsubj(Mao-31, regimes-27)
appos(regimes-27, Stalin-29)
parataxis(pick-4, Mao-31)
nn(etc.-33, etc-32)
dobj(Mao-31, etc.-33)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN reason))
        (SBAR
          (S
            (NP (NNP Russia))
            (VP (VBZ is)
              (VP (VBG experiencing)
                (NP
                  (NP (DT a) (NN surge))
                  (PP (IN in)
                    (NP (NN religion))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(reason-4, a-3)
nsubj(is-2, reason-4)
nsubj(experiencing-7, Russia-5)
aux(experiencing-7, is-6)
rcmod(reason-4, experiencing-7)
det(surge-9, a-8)
dobj(experiencing-7, surge-9)
prep_in(surge-9, religion-11)

(ROOT
  (S
    (S
      (NP (DT This) (NN question))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT a) (JJ theoretical) (NN one))
          (PP (IN for)
            (NP (PRP them))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP know)
        (NP (DT the) (NN answer))
        (PP (IN from)
          (NP (JJ first) (NN hand) (NN experience)))))
    (. .)))

det(question-2, This-1)
nsubj(one-7, question-2)
cop(one-7, is-3)
neg(one-7, not-4)
det(one-7, a-5)
amod(one-7, theoretical-6)
root(ROOT-0, one-7)
prep_for(one-7, them-9)
nsubj(know-12, they-11)
parataxis(one-7, know-12)
det(answer-14, the-13)
dobj(know-12, answer-14)
amod(experience-18, first-16)
nn(experience-18, hand-17)
prep_from(know-12, experience-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP disagree))
    (. .)))

nsubj(disagree-2, I-1)
root(ROOT-0, disagree-2)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (ADJP (RB just) (JJ dumb)))
    (. .)))

nsubj(dumb-4, That-1)
cop(dumb-4, 's-2)
advmod(dumb-4, just-3)
root(ROOT-0, dumb-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB firmly))
      (PP (IN against)
        (NP (NN communism)))
      (, ,)
      (ADJP (RB as) (JJ atheist))
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBP am)))))
    (. .)))

nsubj(atheist-8, I-1)
cop(atheist-8, am-2)
advmod(atheist-8, firmly-3)
prep_against(atheist-8, communism-5)
advmod(atheist-8, as-7)
root(ROOT-0, atheist-8)
mark(am-11, as-9)
nsubj(am-11, I-10)
advcl(atheist-8, am-11)

(ROOT
  (S (RBR Further) (, ,)
    (NP (NNP Hitler))
    (VP (VBD referred)
      (PP (TO to)
        (NP (PRP himself)))
      (PP (IN as)
        (NP
          (NP (DT an) (NN Evangelical))
          (PP (IN in)
            (NP (PRP$ his) (NNS speeches)))))
      (PP (IN on)
        (NP (NNP Mien) (NNP Kempf))))
    (. .)))

advmod(referred-4, Further-1)
nsubj(referred-4, Hitler-3)
root(ROOT-0, referred-4)
prep_to(referred-4, himself-6)
det(Evangelical-9, an-8)
prep_as(referred-4, Evangelical-9)
poss(speeches-12, his-11)
prep_in(Evangelical-9, speeches-12)
nn(Kempf-15, Mien-14)
prep_on(referred-4, Kempf-15)

(ROOT
  (S
    (NP (DT The) (NNS crusades))
    (VP (VBN killed)
      (PP (IN around)
        (NP
          (NP
            (QP (CD 6) (CD million))
            (NNS people))
          (PRN (-LRB- -LRB-)
            (NP
              (NP
                (NP
                  (QP (CD 5) (CD million)))
                (PP (IN in)
                  (NP (DT the) (JJ first) (CD four))))
              (CC and)
              (NP
                (NP (DT another)
                  (QP (CD 1) (CD million)))
                (PP (IN in)
                  (NP (DT the) (NNP Albigensian) (NN Crusade)))))
            (. .) (-RRB- -RRB-)))))))

det(crusades-2, The-1)
nsubj(killed-3, crusades-2)
root(ROOT-0, killed-3)
number(million-6, 6-5)
num(people-7, million-6)
prep_around(killed-3, people-7)
number(million-10, 5-9)
dep(people-7, million-10)
det(four-14, the-12)
amod(four-14, first-13)
prep_in(million-10, four-14)
det(million-18, another-16)
number(million-18, 1-17)
dep(people-7, million-18)
conj_and(million-10, million-18)
det(Crusade-22, the-20)
nn(Crusade-22, Albigensian-21)
prep_in(million-18, Crusade-22)

(ROOT
  (S
    (NP
      (NP (NNP Terrorism))
      (PP (IN from)
        (NP (DT the) (NN middle))))
    (ADVP (RB east))
    (VP (VBZ is)
      (PP (IN under)
        (NP
          (NP (DT the) (NN banner))
          (PP (IN of)
            (NP (NN religion)))))
      (, ,)
      (SBAR (IN as)
        (S
          (VP (VBZ is)
            (NP
              (NP (RB much))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ ethnic) (NN cleansing))
                  (PP (IN in)
                    (NP (NNP Africa))))))))))
    (. .)))

nsubj(is-6, Terrorism-1)
det(middle-4, the-3)
prep_from(Terrorism-1, middle-4)
advmod(is-6, east-5)
root(ROOT-0, is-6)
det(banner-9, the-8)
prep_under(is-6, banner-9)
prep_of(banner-9, religion-11)
mark(much-15, as-13)
cop(much-15, is-14)
advcl(is-6, much-15)
det(cleansing-19, the-17)
amod(cleansing-19, ethnic-18)
prep_of(much-15, cleansing-19)
prep_in(cleansing-19, Africa-21)

(ROOT
  (S
    (FRAG
      (PP (IN Of)
        (NP (DT the) (CD two))))
    (: ;)
    (S
      (NP
        (NP (NN god) (POS 's))
        (NNS hands))
      (VP (VBP are)
        (ADJP (RB far) (JJ bloodier)
          (PP (IN than)
            (NP (DT any) (NN atheist) (POS 's))))))
    (. .)))

dep(bloodier-10, Of-1)
det(two-3, the-2)
pobj(Of-1, two-3)
poss(hands-7, god-5)
nsubj(bloodier-10, hands-7)
cop(bloodier-10, are-8)
advmod(bloodier-10, far-9)
root(ROOT-0, bloodier-10)
det(atheist-13, any-12)
prep_than(bloodier-10, atheist-13)
possessive(atheist-13, 's-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do)
      (ADVP (RB however))
      (VP (VB think)
        (NP
          (NP (DT the) (JJR greater) (NN question))
          (SBAR
            (S
              (VP (VBZ is)
                (SBARQ
                  (WHADVP (WRB why))
                  (SQ (VBP do)
                    (NP (PRP we))
                    (VP (VB have)
                      (S
                        (VP (TO to)
                          (VP (VB protect)
                            (NP (PRP ourselves))
                            (PP (IN from)
                              (NP (PRP ourselves)))))))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
advmod(think-4, however-3)
root(ROOT-0, think-4)
det(question-7, the-5)
amod(question-7, greater-6)
dobj(think-4, question-7)
rcmod(question-7, is-8)
advmod(have-12, why-9)
aux(have-12, do-10)
nsubj(have-12, we-11)
xsubj(protect-14, we-11)
dep(is-8, have-12)
aux(protect-14, to-13)
xcomp(have-12, protect-14)
dobj(protect-14, ourselves-15)
prep_from(protect-14, ourselves-17)

(ROOT
  (S
    (S
      (VP (VB Take)
        (NP (DT the) (CD Ten) (NNS Commandments))))
    (, ,)
    (NP (PRP it))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB stagger)
            (NP (PRP us))
            (SBAR (IN that)
              (S
                (NP (NNP God))
                (VP (VBZ has)
                  (S
                    (VP (TO to)
                      (VP (VB tell)
                        (S
                          (NP (PRP us))
                          (RB not)
                          (VP (TO to)
                            (VP (VB murder)
                              (CC and)
                              (VB steal))))))))))))))
    (. .)))

ccomp(ought-7, Take-1)
det(Commandments-4, the-2)
num(Commandments-4, Ten-3)
dobj(Take-1, Commandments-4)
nsubj(ought-7, it-6)
xsubj(stagger-9, it-6)
root(ROOT-0, ought-7)
aux(stagger-9, to-8)
xcomp(ought-7, stagger-9)
dobj(stagger-9, us-10)
complm(has-13, that-11)
nsubj(has-13, God-12)
xsubj(tell-15, God-12)
ccomp(stagger-9, has-13)
aux(tell-15, to-14)
xcomp(has-13, tell-15)
nsubj(murder-19, us-16)
nsubj(steal-21, us-16)
neg(murder-19, not-17)
aux(murder-19, to-18)
xcomp(tell-15, murder-19)
xcomp(tell-15, steal-21)
conj_and(murder-19, steal-21)

(ROOT
  (S
    (INTJ (UH Wow))
    (VP (VB !!)
      (NP (NNP Agreed)))
    (. .)))

dep(!!-2, Wow-1)
root(ROOT-0, !!-2)
dobj(!!-2, Agreed-3)

(ROOT
  (SQ (VBD Did)
    (NP (PRP it))
    (VP
      (ADVP (RB ever))
      (VB occur)
      (PP (TO to)
        (NP (PRP you)))
      (SBAR (IN that)
        (S
          (NP (NN god))
          (VP (VBD had)
            (NP (NN nothing)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (PP (IN with)
                      (NP (DT the) (CD ten) (NNS commandments)))))))))))
    (. ?)))

aux(occur-4, Did-1)
nsubj(occur-4, it-2)
advmod(occur-4, ever-3)
root(ROOT-0, occur-4)
prep_to(occur-4, you-6)
complm(had-9, that-7)
nsubj(had-9, god-8)
ccomp(occur-4, had-9)
dobj(had-9, nothing-10)
aux(do-12, to-11)
infmod(nothing-10, do-12)
det(commandments-16, the-14)
num(commandments-16, ten-15)
prep_with(do-12, commandments-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP
          (NP (DT a) (NN god))
          (, ,)
          (CC and)
          (NP
            (NP (RB am) (RB quite))
            (NP (DT an) (JJ exceptional) (NN person))))
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBP do)
              (VP (VB say)
                (ADVP (RB so))
                (NP (PRP myself))))))))
    (. .)))

nsubj(have-4, I-1)
aux(have-4, do-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
det(god-6, a-5)
dobj(have-4, god-6)
advmod(quite-10, am-9)
dobj(have-4, quite-10)
conj_and(god-6, quite-10)
det(person-13, an-11)
amod(person-13, exceptional-12)
dep(quite-10, person-13)
mark(say-17, if-14)
nsubj(say-17, I-15)
aux(say-17, do-16)
advcl(have-4, say-17)
advmod(say-17, so-18)
dobj(say-17, myself-19)

(ROOT
  (S (CC But)
    (SBAR (IN that)
      (S
        (NP (DT some) (JJ smart) (NN person))
        (VP (VBD said) (, ,) (`` ``)
          (S
            (NP (DT these) (NNS people))
            (VP (VBP are)
              (NP (NNS idiots)))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB figure)
            (PRT (RP out))
            (NP (DT some) (NN way)
              (S
                (VP (TO to)
                  (VP (VB control)
                    (NP (PRP them))))))))))
    (. .)))

cc(need-15, But-1)
dep(said-6, that-2)
det(person-5, some-3)
amod(person-5, smart-4)
nsubj(said-6, person-5)
dep(need-15, said-6)
det(people-10, these-9)
nsubj(idiots-12, people-10)
cop(idiots-12, are-11)
ccomp(said-6, idiots-12)
nsubj(need-15, we-14)
xsubj(figure-17, we-14)
root(ROOT-0, need-15)
aux(figure-17, to-16)
xcomp(need-15, figure-17)
prt(figure-17, out-18)
det(way-20, some-19)
dobj(figure-17, way-20)
aux(control-22, to-21)
infmod(way-20, control-22)
dobj(control-22, them-23)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ sounds)
      (ADVP (RBR more)
        (PP (IN like)
          (NP
            (NP (DT an) (NN argument))
            (PP (IN for)
              (NP (NN education))))))
      (PP (IN than)
        (PP (IN against)
          (NP (NN atheism)))))
    (. .)))

nsubj(sounds-3, This-2)
root(ROOT-0, sounds-3)
advmod(sounds-3, more-4)
det(argument-7, an-6)
prep_like(more-4, argument-7)
prep_for(argument-7, education-9)
prep(sounds-3, than-10)
pcomp(than-10, against-11)
prep_against(than-10, atheism-12)

(ROOT
  (S
    (NP (DT that))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (DT a) (JJ given))))))
    (. .)))

nsubj(ought-2, that-1)
xsubj(given-6, that-1)
root(ROOT-0, ought-2)
aux(given-6, to-3)
cop(given-6, be-4)
det(given-6, a-5)
xcomp(ought-2, given-6)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD should) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN told)
                (S (RB not)
                  (VP (TO to)
                    (VP (VB do)
                      (NP (DT those) (NNS things)))))))))))
    (. .)))

nsubj(have-4, We-1)
xsubj(told-7, We-1)
aux(have-4, should-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
aux(told-7, to-5)
auxpass(told-7, be-6)
xcomp(have-4, told-7)
neg(do-10, not-8)
aux(do-10, to-9)
xcomp(told-7, do-10)
det(things-12, those-11)
dobj(do-10, things-12)

(ROOT
  (S (CC And)
    (NP
      (NP (RB then))
      (SBAR
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN threatened)
                (PP (IN with)
                  (NP (NN punishment))))))))
      (VP (VBG knowing)
        (NP (PRP we))))
    (VP (MD will)
      (VP (VB do)
        (NP (DT those) (NNS things))))
    (. .)))

cc(do-11, And-1)
nsubj(do-11, then-2)
aux(threatened-5, to-3)
auxpass(threatened-5, be-4)
infmod(then-2, threatened-5)
prep_with(threatened-5, punishment-7)
partmod(then-2, knowing-8)
dobj(knowing-8, we-9)
aux(do-11, will-10)
root(ROOT-0, do-11)
det(things-13, those-12)
dobj(do-11, things-13)

(ROOT
  (S
    (VP (VBN Agreed))
    (. .)))

root(ROOT-0, Agreed-1)

(ROOT
  (S (CC And)
    (ADVP (RB again))
    (, ,)
    (PP (IN of)
      (NP
        (NP (DT the) (CD 18) (NN %))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ human) (NN population))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ identifies)
                  (SBAR
                    (S
                      (NP (PRP them))
                      (VP (VBZ self)
                        (ADJP (RB as) (JJ atheist)
                          (CC or)
                          (JJ agnostic))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB find)
        (PP (IN about)
          (NP
            (NP (DT the) (JJ same) (NN proportion))
            (PP (IN within)
              (NP (DT that) (NN population)))))
        (PP (RB as) (IN in)
          (NP
            (NP (DT the) (JJ religious) (NN population))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP follow)
                  (S
                    (NP (DT the) (JJ relevant) (NNS commandments))
                    (ADJP (JJ such))
                    (SBAR (IN as)
                      (S
                        (VP (VBP do) (RB n't)
                          (VP (VB kill)
                            (CC and)
                            (VB steal))))))))))
          (, ,)
          (NP
            (NP (DT all))
            (PP (IN without)
              (NP
                (NP (DT the) (NN fear))
                (PP (IN of)
                  (NP (JJ eternal) (NN damnation)))))))))
    (. .)))

cc(find-23, And-1)
advmod(find-23, again-2)
det(%-7, the-5)
num(%-7, 18-6)
prep_of(find-23, %-7)
det(population-11, the-9)
amod(population-11, human-10)
prep_of(%-7, population-11)
nsubj(identifies-13, population-11)
rcmod(population-11, identifies-13)
nsubj(self-15, them-14)
ccomp(identifies-13, self-15)
advmod(atheist-17, as-16)
acomp(self-15, atheist-17)
acomp(self-15, agnostic-19)
conj_or(atheist-17, agnostic-19)
nsubj(find-23, you-21)
aux(find-23, will-22)
root(ROOT-0, find-23)
det(proportion-27, the-25)
amod(proportion-27, same-26)
prep_about(find-23, proportion-27)
det(population-30, that-29)
prep_within(proportion-27, population-30)
advmod(find-23, as-31)
det(population-35, the-33)
amod(population-35, religious-34)
prep_in(find-23, population-35)
nsubj(follow-37, population-35)
rcmod(population-35, follow-37)
det(commandments-40, the-38)
amod(commandments-40, relevant-39)
nsubj(kill-45, commandments-40)
nsubj(steal-47, commandments-40)
dep(kill-45, such-41)
mark(kill-45, as-42)
aux(kill-45, do-43)
neg(kill-45, n't-44)
xcomp(follow-37, kill-45)
xcomp(follow-37, steal-47)
conj_and(kill-45, steal-47)
prep_in(find-23, all-49)
det(fear-52, the-51)
prep_without(all-49, fear-52)
amod(damnation-55, eternal-54)
prep_of(fear-52, damnation-55)

(ROOT
  (S
    (NP (NN Something))
    (VP (VBZ is)
      (ADJP (JJ amiss)
        (PP (IN at)
          (NP
            (NP (DT the) (JJ very) (NN core))
            (PP (IN of)
              (SBAR
                (WHNP (WP who))
                (S
                  (NP (PRP we))
                  (VP (VBP are)))))))))
    (. .)))

nsubj(amiss-3, Something-1)
cop(amiss-3, is-2)
root(ROOT-0, amiss-3)
det(core-7, the-5)
amod(core-7, very-6)
prep_at(amiss-3, core-7)
dobj(are-11, who-9)
nsubj(are-11, we-10)
prepc_of(core-7, are-11)

(ROOT
  (S
    (NP (NNS Laws))
    (VP (MD ca) (RB n't)
      (VP (VB help)
        (NP (PRP us))
        (SBAR (IN because)
          (S
            (SBAR (RB as) (RB soon) (IN as)
              (S
                (NP (PRP they))
                (VP (VBP get)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN way))
                      (PP (IN of)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP we))
                            (VP (VBP want))))))))))
            (, ,)
            (NP (PRP they))
            (VP (VBP get)
              (ADVP (RB broke)))))))
    (. .)))

nsubj(help-4, Laws-1)
aux(help-4, ca-2)
neg(help-4, n't-3)
root(ROOT-0, help-4)
dobj(help-4, us-5)
mark(get-21, because-6)
advmod(get-11, as-7)
advmod(get-11, soon-8)
dep(get-11, as-9)
nsubj(get-11, they-10)
dep(get-21, get-11)
det(way-14, the-13)
prep_in(get-11, way-14)
dobj(want-18, what-16)
nsubj(want-18, we-17)
prepc_of(way-14, want-18)
nsubj(get-21, they-20)
advcl(help-4, get-21)
advmod(get-21, broke-22)

(ROOT
  (S
    (S (CC And)
      (NP
        (NP (PRP it) (POS 's))
        (ADJP (RB painfully) (JJ obvious))
        (NN religion))
      (VP (MD ca) (RB n't)
        (VP (VB help)
          (ADVP (RB either)))))
    (: ;)
    (S
      (NP (PRP it))
      (ADVP (RB just))
      (VP (VBZ becomes)
        (NP
          (NP (DT a) (NN facade))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VB hide)
                (PRT (RP behind))
                (S
                  (VP (TO to)
                    (VP (VB justify)
                      (NP (PRP$ our) (NNS actions)))))))))))
    (. .)))

cc(help-9, And-1)
poss(religion-6, it-2)
advmod(obvious-5, painfully-4)
amod(religion-6, obvious-5)
nsubj(help-9, religion-6)
aux(help-9, ca-7)
neg(help-9, n't-8)
root(ROOT-0, help-9)
advmod(help-9, either-10)
nsubj(facade-16, it-12)
advmod(facade-16, just-13)
cop(facade-16, becomes-14)
det(facade-16, a-15)
parataxis(help-9, facade-16)
dobj(hide-18, facade-16)
nsubj(hide-18, we-17)
xsubj(justify-21, we-17)
rcmod(facade-16, hide-18)
prt(hide-18, behind-19)
aux(justify-21, to-20)
xcomp(hide-18, justify-21)
poss(actions-23, our-22)
dobj(justify-21, actions-23)

(ROOT
  (S
    (NP (NNS Others))
    (ADVP (RB simply))
    (VP (VBP turn)
      (S
        (VP (TO to)
          (VP (VB atheism)
            (PRN (, ,)
              (S
                (NP (PRP they))
                (VP
                  (VP (VB close)
                    (NP (PRP$ their) (NNS eyes)))
                  (, ,)
                  (VP (VB cross)
                    (NP (PRP$ their) (NNS fingers)))
                  (CC and)
                  (VP
                    (VP (VB hope)
                      (SBAR
                        (S
                          (NP (DT no) (NN one))
                          (VP (VBZ is)
                            (NP
                              (NP (NN home))
                              (PP (IN in)
                                (NP (DT the) (NN universe))))))))
                    (CC and)
                    (VP (VB proceed)
                      (S
                        (VP (TO to)
                          (VP (VB do)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP they))
                                (VP (VBP want)))))))))))
              (, ,))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP want))))))))
    (. .)))

nsubj(turn-3, Others-1)
xsubj(atheism-5, Others-1)
advmod(turn-3, simply-2)
root(ROOT-0, turn-3)
aux(atheism-5, to-4)
xcomp(turn-3, atheism-5)
nsubj(close-8, they-7)
nsubj(cross-12, they-7)
nsubj(hope-16, they-7)
xsubj(do-27, they-7)
parataxis(atheism-5, close-8)
poss(eyes-10, their-9)
dobj(close-8, eyes-10)
parataxis(atheism-5, cross-12)
conj_and(close-8, cross-12)
poss(fingers-14, their-13)
dobj(cross-12, fingers-14)
parataxis(atheism-5, hope-16)
conj_and(close-8, hope-16)
det(one-18, no-17)
nsubj(home-20, one-18)
cop(home-20, is-19)
ccomp(hope-16, home-20)
det(universe-23, the-22)
prep_in(home-20, universe-23)
conj_and(close-8, proceed-25)
conj_and(hope-16, proceed-25)
aux(do-27, to-26)
xcomp(proceed-25, do-27)
dobj(want-30, what-28)
nsubj(want-30, they-29)
ccomp(do-27, want-30)
advmod(want-34, when-32)
nsubj(want-34, they-33)
advcl(atheism-5, want-34)

(ROOT
  (S
    (NP (PRP$ My) (JJ objective) (NN standard))
    (VP (VBZ is)
      (NP (CD 1)))
    (. .)))

poss(standard-3, My-1)
amod(standard-3, objective-2)
nsubj(1-5, standard-3)
cop(1-5, is-4)
root(ROOT-0, 1-5)

(ROOT
  (S
    (S
      (NP (NNS Others))
      (ADVP (RB still))
      (VP (MD will)
        (VP (VB try)
          (S
            (VP (TO to)
              (VP (VB plead)
                (NP (NN ignorance))))))))
    (: :) ('' '')
    (PRN
      (S
        (S
          (NP (PRP I))
          (ADVP (RB really))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP (DT this)))))))
        (CC and)
        (S
          (SBAR (IN If)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT a) (NNP God)))))
          (S
            (NP (PRP I))
            (VP (MD 'll)
              (ADVP (RB just))
              (VP (VB tell)
                (NP (PRP Him))
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (VBD did) (RB n't)
                      (VP (VB know)
                        (SBAR (IN that)
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (ADJP (JJ wrong) ('' ''))))))))))))
          (IN So)
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (VP (VBG saying)))))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (VP (VB matter)
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP (VBZ believes)
                (PP (IN in)
                  (NP (DT a) (NN god)))))
            (CC or)
            (RB not)))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP 're)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB do)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP they))
                    (VP (VBP do))))))))))
    (. .)))

nsubj(try-4, Others-1)
xsubj(plead-6, Others-1)
advmod(try-4, still-2)
aux(try-4, will-3)
root(ROOT-0, try-4)
aux(plead-6, to-5)
xcomp(try-4, plead-6)
dobj(plead-6, ignorance-7)
nsubj(want-12, I-10)
xsubj(do-14, I-10)
advmod(want-12, really-11)
dep(try-4, want-12)
aux(do-14, to-13)
xcomp(want-12, do-14)
dobj(do-14, this-15)
mark(is-19, If-17)
expl(is-19, there-18)
advcl(tell-25, is-19)
det(God-21, a-20)
nsubj(is-19, God-21)
nsubj(tell-25, I-22)
aux(tell-25, 'll-23)
advmod(tell-25, just-24)
dep(try-4, tell-25)
conj_and(want-12, tell-25)
dobj(tell-25, Him-26)
complm(know-31, that-27)
nsubj(know-31, I-28)
aux(know-31, did-29)
neg(know-31, n't-30)
ccomp(tell-25, know-31)
complm(wrong-35, that-32)
nsubj(wrong-35, it-33)
cop(wrong-35, was-34)
ccomp(know-31, wrong-35)
dep(tell-25, So-37)
nsubj(saying-40, you-38)
aux(saying-40, 're-39)
dep(tell-25, saying-40)
nsubj(matter-45, it-42)
aux(matter-45, does-43)
neg(matter-45, n't-44)
ccomp(try-4, matter-45)
mark(believes-48, if-46)
nsubj(believes-48, someone-47)
advcl(matter-45, believes-48)
det(god-51, a-50)
prep_in(believes-48, god-51)
advcl(matter-45, not-53)
conj_or(believes-48, not-53)
nsubj(going-57, they-55)
xsubj(do-59, they-55)
aux(going-57, 're-56)
ccomp(try-4, going-57)
aux(do-59, to-58)
xcomp(going-57, do-59)
dobj(do-62, what-60)
nsubj(do-62, they-61)
ccomp(do-59, do-62)

(ROOT
  (S
    (VP (VBN Agreed)
      (ADVP (RB again))
      (, ,)
      (SBAR (RB so)
        (WHADVP (WRB how))
        (S
          (VP (VBZ is)
            (VP
              (NP (DT this))
              (NP
                (NP (DT an) (NN argument))
                (PP (IN for)
                  (NP (NN god))))
              (S
                (VP (VBG being)
                  (PP (IN for)
                    (NP (DT the) (JJR greater) (NN good))))))))))
    (. ?)))

root(ROOT-0, Agreed-1)
advmod(Agreed-1, again-2)
advmod(this-7, so-4)
advmod(this-7, how-5)
aux(this-7, is-6)
ccomp(Agreed-1, this-7)
det(argument-9, an-8)
dobj(this-7, argument-9)
prep_for(argument-9, god-11)
xcomp(this-7, being-12)
det(good-16, the-14)
amod(good-16, greater-15)
prep_for(being-12, good-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB seem)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT an) (NN argument))
                (PP (IN for)
                  (NP
                    (NP (PRP it))
                    (VP (RB not) (VBG mattering))))
                (: ...)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ happens)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (NP
                              (NP (DT a)
                                (ADJP (RB very) (JJ atheist)
                                  (CC and)
                                  (JJ free-thinking))
                                (NN argument))
                              (PP (IN by)
                                (NP (DT the) (NN way))))))))))))))))
    (. .)))

nsubj(seem-3, It-1)
xsubj(argument-7, It-1)
aux(seem-3, would-2)
root(ROOT-0, seem-3)
aux(argument-7, to-4)
cop(argument-7, be-5)
det(argument-7, an-6)
xcomp(seem-3, argument-7)
prep_for(argument-7, it-9)
neg(mattering-11, not-10)
partmod(it-9, mattering-11)
nsubj(happens-14, which-13)
rcmod(argument-7, happens-14)
aux(argument-22, to-15)
cop(argument-22, be-16)
det(argument-22, a-17)
advmod(atheist-19, very-18)
amod(argument-22, atheist-19)
conj_and(atheist-19, free-thinking-21)
amod(argument-22, free-thinking-21)
xcomp(happens-14, argument-22)
det(way-25, the-24)
prep_by(argument-22, way-25)

(ROOT
  (FRAG
    (NP (NNP Odd))
    (: ...)
    (S
      (ADVP (RB btw))
      (, ,)
      (S
        (NP (PRP I))
        (VP (VBP 'm) (RB not)
          (VP (VBG crossing)
            (NP (PRP$ my) (NNS fingers)))))
      (CC and)
      (S
        (S
          (VP (VBG hoping)
            (NP (DT no) (NN one))))
        (VP (VBZ is)
          (NP (NN home)))))
    (. .)))

root(ROOT-0, Odd-1)
advmod(crossing-8, btw-3)
nsubj(crossing-8, I-5)
aux(crossing-8, 'm-6)
neg(crossing-8, not-7)
dep(Odd-1, crossing-8)
poss(fingers-10, my-9)
dobj(crossing-8, fingers-10)
csubj(home-16, hoping-12)
det(one-14, no-13)
dobj(hoping-12, one-14)
cop(home-16, is-15)
dep(Odd-1, home-16)
conj_and(crossing-8, home-16)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ ridiculous) (NN view))
        (PP (IN of)
          (NP (NN atheism)))))
    (. .)))

nsubj(view-5, That-1)
cop(view-5, 's-2)
det(view-5, a-3)
amod(view-5, ridiculous-4)
root(ROOT-0, view-5)
prep_of(view-5, atheism-7)

(ROOT
  (S
    (ADVP (RB Folks))
    (PRN (, ,)
      (S
        (NP (PRP we))
        (VP (VBP need)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN saved)
                  (PP (IN from)
                    (NP (PRP ourselves)))))))))
      (, ,))
    (NP (PRP we))
    (VP (VBP are)
      (NP (DT the) (NN problem)))
    (. .)))

advmod(problem-14, Folks-1)
nsubj(need-4, we-3)
xsubj(saved-7, we-3)
parataxis(problem-14, need-4)
aux(saved-7, to-5)
auxpass(saved-7, be-6)
xcomp(need-4, saved-7)
prep_from(saved-7, ourselves-9)
nsubj(problem-14, we-11)
cop(problem-14, are-12)
det(problem-14, the-13)
root(ROOT-0, problem-14)

(ROOT
  (S (CC And)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBN lost)
            (PP (IN in)
              (NP (DT the) (NN forest)))
            (NP
              (NP (DT the) (JJS worst) (NN thing))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (MD can)
                    (VP (VB do))))))))))
    (VP (VBZ is)
      (VP (VB ask)
        (NP (PRP yourself))
        (PP (IN for)
          (NP (NNS directions)))))
    (. .)))

cc(ask-16, And-1)
advmod(lost-5, when-2)
nsubjpass(lost-5, you-3)
auxpass(lost-5, are-4)
advcl(ask-16, lost-5)
csubj(ask-16, lost-5)
det(forest-8, the-7)
prep_in(lost-5, forest-8)
det(thing-11, the-9)
amod(thing-11, worst-10)
dobj(lost-5, thing-11)
dobj(do-14, thing-11)
nsubj(do-14, you-12)
aux(do-14, can-13)
rcmod(thing-11, do-14)
aux(ask-16, is-15)
root(ROOT-0, ask-16)
dobj(ask-16, yourself-17)
prep_for(ask-16, directions-19)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NN man))
        (VP (VBD began))))
    (, ,)
    (NP (PRP we))
    (VP
      (VP (VBD lived)
        (PP (IN in)
          (NP (NNS caves))))
      (, ,)
      (VP (VBD died)
        (SBAR
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP we))
                (VP (VBD were)
                  (PP (IN in)
                    (NP
                      (NP (PRP$ our) (JJ mid) (NNS twenties))
                      (PP (IN of)
                        (NP (NN violence)
                          (CC or)
                          (NN hideous) (NNS diseases)))
                      (, ,)
                      (VP (VBN spent)
                        (NP
                          (NP (DT all))
                          (PP (IN of)
                            (NP
                              (NP (PRP$ our) (NN time) (VBG starving) (NN half))
                              (PP (TO to)
                                (NP (NN death))))))))))))
            (PRN (, ,)
              (S
                (NP (NN rape))
                (VP (VBD was)
                  (NP (DT the) (JJ general) (NN family) (NN structure))))
              (, ,))
            (NP (PRP we))
            (VP (VBD smelled)
              (ADJP (JJ bad))))))
      (CC and)
      (VP (VBD were)
        (ADJP (RB exceedingly) (JJ harry))))
    (. .)))

advmod(began-3, When-1)
nsubj(began-3, man-2)
advcl(lived-6, began-3)
nsubj(lived-6, we-5)
nsubj(died-10, we-5)
nsubj(harry-47, we-5)
root(ROOT-0, lived-6)
prep_in(lived-6, caves-8)
conj_and(lived-6, died-10)
advmod(were-13, when-11)
nsubj(were-13, we-12)
advcl(smelled-42, were-13)
poss(twenties-17, our-15)
amod(twenties-17, mid-16)
prep_in(were-13, twenties-17)
nn(diseases-22, violence-19)
conj_or(violence-19, hideous-21)
nn(diseases-22, hideous-21)
prep_of(twenties-17, diseases-22)
partmod(twenties-17, spent-24)
dobj(spent-24, all-25)
poss(half-30, our-27)
nn(half-30, time-28)
amod(half-30, starving-29)
prep_of(all-25, half-30)
prep_to(half-30, death-32)
nsubj(structure-39, rape-34)
cop(structure-39, was-35)
det(structure-39, the-36)
amod(structure-39, general-37)
nn(structure-39, family-38)
parataxis(smelled-42, structure-39)
nsubj(smelled-42, we-41)
ccomp(died-10, smelled-42)
acomp(smelled-42, bad-43)
cop(harry-47, were-45)
advmod(harry-47, exceedingly-46)
conj_and(lived-6, harry-47)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBD was)
      (NP
        (NP (NN god))
        (ADVP (RB then))))
    (. ?)))

advmod(was-2, Where-1)
root(ROOT-0, was-2)
nsubj(was-2, god-3)
advmod(god-3, then-4)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP (JJS most))
        (VP (VBP have)
          (VP
            (PP (IN since)
              (NP
                (NP (PRP$ our) (JJ short) (NN advancement))
                (PP (IN from)
                  (NP (DT that) (JJ brutish) (NN existence)))))
            (, ,) (VBD used)
            (NP
              (NP (NN religion))
              (PP (IN in)
                (NP
                  (NP (CD one) (NN way))
                  (CC or)
                  (NP (DT another)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ seems)
      (PP (TO to)
        (NP (PRP me)))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP 've)
            (VP (VBN come)
              (PP
                (ADVP (DT this) (RB far) (RB quite))
                (IN on)
                (NP (PRP$ our) (JJ own))))))))
    (. .)))

complm(used-13, That-1)
nsubj(used-13, most-2)
aux(used-13, have-3)
poss(advancement-7, our-5)
amod(advancement-7, short-6)
prep_since(used-13, advancement-7)
det(existence-11, that-9)
amod(existence-11, brutish-10)
prep_from(advancement-7, existence-11)
ccomp(seems-22, used-13)
dobj(used-13, religion-14)
num(way-17, one-16)
prep_in(religion-14, way-17)
prep_in(religion-14, another-19)
conj_or(way-17, another-19)
nsubj(seems-22, it-21)
root(ROOT-0, seems-22)
prep_to(seems-22, me-24)
nsubj(come-27, we-25)
aux(come-27, 've-26)
ccomp(seems-22, come-27)
dep(quite-30, this-28)
advmod(quite-30, far-29)
advmod(come-27, quite-30)
poss(own-33, our-32)
prep_on(come-27, own-33)

(ROOT
  (S
    (ADVP (RB empathy))
    (, ,)
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP I))
        (VP (MD would)
          (VP (VB like)
            (SBAR (IN for)
              (S
                (NP (PRP myself))
                (VP (VBN given))))))))
    (NP (PRP I))
    (VP (VBD were)
      (PP (IN in)
        (NP (DT another) (NNP 's) (NN situation)))
      (NP
        (NP (DT a)
          (ADJP
            (ADJP (RB perfectly) (JJ natural))
            (, ,)
            (CC and)
            (ADJP (RB completely) (JJ human)))
          (NN emotion))
        (SBAR
          (WHNP (WDT which))
          (S
            (PP (IN in)
              (NP (DT no) (NN way)))
            (VP (VBZ depends)
              (PP (IN on)
                (NP (DT a) (NN creator))))))))
    (. .)))

advmod(emotion-23, empathy-1)
dobj(like-6, what-3)
nsubj(like-6, I-4)
aux(like-6, would-5)
dep(emotion-23, like-6)
mark(given-9, for-7)
nsubj(given-9, myself-8)
advcl(like-6, given-9)
nsubj(emotion-23, I-10)
cop(emotion-23, were-11)
det(situation-15, another-13)
nn(situation-15, 's-14)
prep_in(emotion-23, situation-15)
det(emotion-23, a-16)
advmod(natural-18, perfectly-17)
amod(emotion-23, natural-18)
advmod(human-22, completely-21)
conj_and(natural-18, human-22)
amod(emotion-23, human-22)
root(ROOT-0, emotion-23)
nsubj(depends-28, emotion-23)
det(way-27, no-26)
prep_in(depends-28, way-27)
rcmod(emotion-23, depends-28)
det(creator-31, a-30)
prep_on(depends-28, creator-31)

(ROOT
  (S
    (NP
      (NP
        (NP (DT Every) (NN advance))
        (PP
          (PP (IN in)
            (NP (PRP$ our) (NN existence)))
          (, ,)
          (PP (IN from)
            (NP (NN medicine)))
          (, ,)
          (PP (TO to)
            (NP
              (NP (NN exploration))
              (PP (IN of)
                (NP (DT a) (NN round) (NN world)))))))
      (PRN (-LRB- -LRB-)
        (SBAR (IN as)
          (S
            (VP (VBD opposed)
              (ADJP (JJ flat)))))
        (-RRB- -RRB-)))
    (VP (VBZ has)
      (VP (VBN been)
        (VP (VBN fought)
          (PP (IN by)
            (NP
              (NP
                (NP (NN religion) (NN nail))
                (, ,)
                (ADVP (NN tooth)))
              (, ,)
              (NP
                (NP (NN stake))
                (PP (IN in)
                  (NP (DT the) (NN ground))))
              (, ,)
              (CC and)
              (NP (NN fire)))))))
    (. .)))

det(advance-2, Every-1)
nsubjpass(fought-23, advance-2)
poss(existence-5, our-4)
prep_in(advance-2, existence-5)
prep_from(advance-2, medicine-8)
prep_to(advance-2, exploration-11)
det(world-15, a-13)
nn(world-15, round-14)
prep_of(exploration-11, world-15)
mark(opposed-18, as-17)
dep(advance-2, opposed-18)
acomp(opposed-18, flat-19)
aux(fought-23, has-21)
auxpass(fought-23, been-22)
root(ROOT-0, fought-23)
nn(nail-26, religion-25)
agent(fought-23, nail-26)
advmod(nail-26, tooth-28)
agent(fought-23, stake-30)
conj_and(nail-26, stake-30)
det(ground-33, the-32)
prep_in(stake-30, ground-33)
agent(fought-23, fire-36)
conj_and(nail-26, fire-36)

(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))

root(ROOT-0, 2-1)

(ROOT
  (S
    (NP
      (NP (WP what) (NN knowledge))
      (CC and)
      (NP (JJ empirical) (NN evidence)))
    (VP (VBZ has)
      (VP (VBN shown)
        (S
          (NP (PRP us))
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT the) (NN nature))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN world))
                    (SBAR
                      (WHPP (IN in)
                        (WHNP (WDT which)))
                      (S
                        (NP (PRP we))
                        (VP (VBP live)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (ADVP (RB again))
                              (VP (VBZ is)
                                (PP (IN in)
                                  (NP (DT no) (NN way)))
                                (ADJP (JJ dependent)
                                  (PP (IN on)
                                    (NP (DT a) (NN creator))))))))))))))))))
    (. .)))

dep(knowledge-2, what-1)
nsubj(shown-7, knowledge-2)
amod(evidence-5, empirical-4)
conj_and(knowledge-2, evidence-5)
nsubj(shown-7, evidence-5)
aux(shown-7, has-6)
root(ROOT-0, shown-7)
nsubj(nature-12, us-8)
aux(nature-12, to-9)
cop(nature-12, be-10)
det(nature-12, the-11)
xcomp(shown-7, nature-12)
det(world-15, the-14)
prep_of(nature-12, world-15)
rel(live-19, which-17)
nsubj(live-19, we-18)
rcmod(world-15, live-19)
nsubj(dependent-26, which-20)
advmod(dependent-26, again-21)
cop(dependent-26, is-22)
det(way-25, no-24)
prep_in(dependent-26, way-25)
ccomp(live-19, dependent-26)
det(creator-29, a-28)
prep_on(dependent-26, creator-29)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB ask)
        (NP
          (NP (DT the) (NN maker))
          (PP (IN of)
            (NP (DT the) (NN product))))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP it))
            (VP (MD should)
              (VP (VB be)
                (VP (VBN used))))))))
    (. .)))

nsubj(ask-4, You-1)
aux(ask-4, ca-2)
neg(ask-4, n't-3)
root(ROOT-0, ask-4)
det(maker-6, the-5)
dobj(ask-4, maker-6)
det(product-9, the-8)
prep_of(maker-6, product-9)
advmod(used-14, how-10)
nsubjpass(used-14, it-11)
aux(used-14, should-12)
auxpass(used-14, be-13)
dep(ask-4, used-14)

