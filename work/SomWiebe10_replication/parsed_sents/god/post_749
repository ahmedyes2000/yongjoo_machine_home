(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN cop)
          (PRT (RP out)))
        (PP (IN of)
          (NP (DT the) (JJ old) (NN question)))
        (SBAR
          (S
            (VP (TO to)))))
      (SBAR (IN whether)
        (S
          (NP (NN god))
          (VP (VBZ exists)))
        (CC or)
        (RB not)))
    (. .)))

nsubj(cop-4, This-1)
cop(cop-4, is-2)
det(cop-4, a-3)
root(ROOT-0, cop-4)
det(question-9, the-7)
amod(question-9, old-8)
prep_out_of(cop-4, question-9)
infmod(cop-4, to-10)
complm(exists-13, whether-11)
nsubj(exists-13, god-12)
ccomp(cop-4, exists-13)
ccomp(cop-4, not-15)
conj_or(exists-13, not-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (S
          (NP (PRP you))
          (VP (VBP want)
            (NP
              (NP (PRP$ your) (NN history) (NNS books))
              (VP (VBN forged)))))
        (CC and)
        (S
          (NP (PRP you))
          (VP (VBZ ability)
            (S
              (VP (TO to)
                (VP (VB think)
                  (SBAR (IN for)
                    (S
                      (NP (PRP yourself))
                      (VP (VBD stripped)
                        (PP (IN of)
                          (NP (PRP you)))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP suggest)
      (S
        (VP (VBG moving)
          (PP (TO to)
            (NP (NNP North) (NNP Korea))))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
advcl(suggest-20, want-3)
poss(books-6, your-4)
nn(books-6, history-5)
dobj(want-3, books-6)
partmod(books-6, forged-7)
nsubj(ability-10, you-9)
xsubj(think-12, you-9)
conj_and(want-3, ability-10)
advcl(suggest-20, ability-10)
aux(think-12, to-11)
xcomp(ability-10, think-12)
mark(stripped-15, for-13)
nsubj(stripped-15, yourself-14)
advcl(think-12, stripped-15)
prep_of(stripped-15, you-17)
nsubj(suggest-20, I-19)
root(ROOT-0, suggest-20)
xcomp(suggest-20, moving-21)
nn(Korea-24, North-23)
prep_to(moving-21, Korea-24)

(ROOT
  (SINV
    (ADVP (RB Would))
    (VP (VBG believing)
      (PP (IN in)
        (NP
          (NP (NNP Santa) (NNP Claus))
          (NP (PRP$ your) (JJ whole) (NN life)))))
    (VP (VBP make)
      (NP (PRP you)))
    (NP
      (NP (DT a) (JJR better) (NN person))
      (, ,)
      (NP
        (NP (WP what))
        (NP (DT a) (JJ stupid) (NN proposition))))
    (. .)))

advmod(believing-2, Would-1)
root(ROOT-0, believing-2)
nn(Claus-5, Santa-4)
prep_in(believing-2, Claus-5)
poss(life-8, your-6)
amod(life-8, whole-7)
dep(Claus-5, life-8)
dep(believing-2, make-9)
dobj(make-9, you-10)
det(person-13, a-11)
amod(person-13, better-12)
nsubj(believing-2, person-13)
appos(person-13, what-15)
det(proposition-18, a-16)
amod(proposition-18, stupid-17)
dep(what-15, proposition-18)

(ROOT
  (S
    (NP (NNP Kids))
    (VP (VBP do) (RB n't)
      (VP (VB start)
        (S
          (VP (VBG stealing)
            (CC and)
            (VBG killing)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP find)
                  (PRT (RP out))
                  (NP
                    (NP (NNP Santa) (NNP Claus))
                    (SBAR
                      (S
                        (VP (VBZ is) (RB n't)
                          (ADJP (JJ real)))))))))))))
    (. .)))

nsubj(start-4, Kids-1)
aux(start-4, do-2)
neg(start-4, n't-3)
root(ROOT-0, start-4)
xcomp(start-4, stealing-5)
xcomp(start-4, killing-7)
conj_and(stealing-5, killing-7)
advmod(find-10, when-8)
nsubj(find-10, they-9)
advcl(stealing-5, find-10)
prt(find-10, out-11)
nn(Claus-13, Santa-12)
dobj(find-10, Claus-13)
cop(real-16, is-14)
neg(real-16, n't-15)
rcmod(Claus-13, real-16)

(ROOT
  (S
    (S
      (NP (DT The)
        (ADJP (RB only) (JJ surprising))
        (NN part))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN child))
          (SBAR
            (S
              (VP (MD can)
                (ADVP (RB easily))
                (VP (VB fathom)
                  (NP
                    (NP (NNP Santa))
                    (ADJP (RB not) (VBG existing))))))))))
    (, ,)
    (CC yet)
    (S
      (NP (JJ grown) (NNS adults))
      (VP (MD ca) (RB n't)
        (VP (VB do)
          (NP (DT the) (JJ same))
          (PP (IN with)
            (NP (NN god))))))
    (. .)))

det(part-4, The-1)
advmod(surprising-3, only-2)
amod(part-4, surprising-3)
nsubj(child-7, part-4)
cop(child-7, is-5)
det(child-7, a-6)
root(ROOT-0, child-7)
aux(fathom-10, can-8)
advmod(fathom-10, easily-9)
rcmod(child-7, fathom-10)
dobj(fathom-10, Santa-11)
neg(existing-13, not-12)
amod(Santa-11, existing-13)
amod(adults-17, grown-16)
nsubj(do-20, adults-17)
aux(do-20, ca-18)
neg(do-20, n't-19)
conj_yet(child-7, do-20)
det(same-22, the-21)
dobj(do-20, same-22)
prep_with(do-20, god-24)

(ROOT
  (S
    (S
      (VP (VB Imagine)
        (SBAR (IN if)
          (S
            (NP (DT a) (NN child))
            (VP (VBD demanded)
              (NP (NN proof))
              (SBAR (IN that)
                (S
                  (NP (NNP Santa))
                  (VP
                    (VP (VBD did) (RB n't)
                      (VP (VB exist)))
                    (, ,)
                    (CC and)
                    (VP (VBD claimed)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBZ is)
                            (ADJP (JJR better))
                            (S
                              (VP (TO to)
                                (VP
                                  (ADVP (RB just))
                                  (VB believe)
                                  (PRT (RP in))
                                  (NP (PRP him)))))))))))))))))
    (: ...)
    (S
      (NP (DT no) (FW i))
      (VP (VBD bet)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD ca) (RB n't)
              (VP (VB imagine)
                (NP (PDT such) (DT a) (JJ stupid) (NN child))))))))
    (: ...)
    (S
      (NP (JJ only) (NNS adults))
      (VP (VBP seem)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB defend)
                      (NP (PDT such) (DT an) (JJ idiotic) (NN concept)))))))))))
    (. .)))

root(ROOT-0, Imagine-1)
mark(demanded-5, if-2)
det(child-4, a-3)
nsubj(demanded-5, child-4)
advcl(Imagine-1, demanded-5)
dobj(demanded-5, proof-6)
complm(exist-11, that-7)
nsubj(exist-11, Santa-8)
nsubj(claimed-14, Santa-8)
aux(exist-11, did-9)
neg(exist-11, n't-10)
ccomp(demanded-5, exist-11)
ccomp(demanded-5, claimed-14)
conj_and(exist-11, claimed-14)
complm(better-18, that-15)
nsubj(better-18, it-16)
xsubj(believe-21, it-16)
cop(better-18, is-17)
ccomp(claimed-14, better-18)
aux(believe-21, to-19)
advmod(believe-21, just-20)
xcomp(better-18, believe-21)
prt(believe-21, in-22)
dobj(believe-21, him-23)
det(i-26, no-25)
nsubj(bet-27, i-26)
parataxis(Imagine-1, bet-27)
nsubj(imagine-31, you-28)
aux(imagine-31, ca-29)
neg(imagine-31, n't-30)
ccomp(bet-27, imagine-31)
predet(child-35, such-32)
det(child-35, a-33)
amod(child-35, stupid-34)
dobj(imagine-31, child-35)
amod(adults-38, only-37)
nsubj(seem-39, adults-38)
xsubj(able-42, adults-38)
parataxis(Imagine-1, seem-39)
aux(able-42, to-40)
cop(able-42, be-41)
xcomp(seem-39, able-42)
aux(defend-44, to-43)
xcomp(able-42, defend-44)
predet(concept-48, such-45)
det(concept-48, an-46)
amod(concept-48, idiotic-47)
dobj(defend-44, concept-48)

