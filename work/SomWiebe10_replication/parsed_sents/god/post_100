(ROOT
  (S (`` ``)
    (PP (IN For)
      (NP (NN life)
        (S
          (VP (TO to)
            (VP (VB exist))))))
    (, ,)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB have)
        (NP (DT this) (JJ metabolic) (NN motor))))
    (. .)))

prep_for(have-9, life-3)
aux(exist-5, to-4)
infmod(life-3, exist-5)
nsubj(have-9, you-7)
aux(have-9, must-8)
root(ROOT-0, have-9)
det(motor-12, this-10)
amod(motor-12, metabolic-11)
dobj(have-9, motor-12)

(ROOT
  (S (CC But)
    (NP (DT this) (JJ metabolic) (NN motor))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB be)
        (VP (VBN produced)
          (PP (IN by)
            (NP (NN life))))))
    (. .)))

cc(produced-8, But-1)
det(motor-4, this-2)
amod(motor-4, metabolic-3)
nsubjpass(produced-8, motor-4)
aux(produced-8, can-5)
advmod(produced-8, only-6)
auxpass(produced-8, be-7)
root(ROOT-0, produced-8)
agent(produced-8, life-10)

(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (NNP Dr.) (NNP Ron) (NNP Carlson))
    (-RRB- -RRB-)
    (VP (VBD '')
      (SBAR
        (S
          (NP (DT The) (`` ``) (JJ complex) (NN metabolic) (NN motor) ('' ''))
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN end) (NN result))
              (PP (IN of)
                (NP
                  (NP
                    (QP (CD 3.5) (CD billion))
                    (NNS years))
                  (PP (JJ worth) (IN of)
                    (NP (NN evolution))))))))))
    (. .) ('' '')))

nn(Carlson-5, Dr.-3)
nn(Carlson-5, Ron-4)
nsubj(result-17, Carlson-5)
det(motor-12, The-8)
amod(motor-12, complex-10)
nn(motor-12, metabolic-11)
nsubj(result-17, motor-12)
cop(result-17, is-14)
det(result-17, the-15)
nn(result-17, end-16)
root(ROOT-0, result-17)
number(billion-20, 3.5-19)
num(years-21, billion-20)
prep_of(result-17, years-21)
dep(years-21, worth-22)
prep_of(years-21, evolution-24)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJ same))
        (PP (IN for)
          (NP (NNP DNA)))))
    (. .)))

nsubj(same-4, It-1)
cop(same-4, 's-2)
det(same-4, the-3)
root(ROOT-0, same-4)
prep_for(same-4, DNA-6)

(ROOT
  (FRAG (RB So) (: ...)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (SBAR (IN in)
            (S
              (NP (NNP Spontaneous) (NNP Generation))
              (VP (VBP are) (RB n't)
                (NP (PRP you))
                (S
                  (VP (VBG going)
                    (S
                      (PP (IN against)
                        (NP
                          (NP (DT the) (JJ basic) (NN rule))
                          (PP (IN of)
                            (NP (NN biology)))))
                      (-LRB- -LRB-)
                      (NP (NNP Biogenesis) (NN life))
                      (ADVP (RB only))
                      (VP (VBZ arises)
                        (PP (IN from)
                          (NP (NN life)))))))))))))
    (. .)))

root(ROOT-0, So-1)
mark(believe-5, if-3)
nsubj(believe-5, you-4)
dep(So-1, believe-5)
mark(you-11, in-6)
nn(Generation-8, Spontaneous-7)
nsubj(you-11, Generation-8)
cop(you-11, are-9)
neg(you-11, n't-10)
advcl(believe-5, you-11)
xcomp(you-11, going-12)
det(rule-16, the-14)
amod(rule-16, basic-15)
prep_against(arises-23, rule-16)
prep_of(rule-16, biology-18)
nn(life-21, Biogenesis-20)
nsubj(arises-23, life-21)
advmod(arises-23, only-22)
ccomp(going-12, arises-23)
prep_from(arises-23, life-25)

(ROOT
  (SINV
    (S
      (NP (PRP It))
      (VP (VBZ does) (RB not)
        (VP (VB come)
          (PP (IN from)
            (NP (JJ nonliving) (NN matter) (-RRB- -RRB-) (NNS Or))))))
    (VP (VBZ is))
    (NP
      (NP (NN nitrogen))
      (, ,)
      (NP
        (NP (NN ammonia))
        (, ,)
        (NP (NNS salts))
        (, ,)
        (CC and)
        (NP (NN carbon) (NN dioxide) (NN living) (NN matter))))
    (. ?)))

nsubj(come-4, It-1)
aux(come-4, does-2)
neg(come-4, not-3)
dep(is-10, come-4)
amod(Or-9, nonliving-6)
nn(Or-9, matter-7)
prep_from(come-4, Or-9)
root(ROOT-0, is-10)
nsubj(is-10, nitrogen-11)
appos(nitrogen-11, ammonia-13)
appos(nitrogen-11, salts-15)
conj_and(ammonia-13, salts-15)
nn(matter-21, carbon-18)
nn(matter-21, dioxide-19)
nn(matter-21, living-20)
appos(nitrogen-11, matter-21)
conj_and(ammonia-13, matter-21)

(ROOT
  (S (`` ``)
    (NP (NNP Biology) (NNP dose))
    (VP (VBP say)
      (SBAR (IN that)
        (S
          (NP (JJ modern) (NN life))
          (VP (MD can) (RB not)
            (VP (VB arise)
              (PP (IN from) (`` ``)
                (ADJP (JJ non-life))
                ('' ''))
              (SBAR
                (WHADVP (RB however))
                (S
                  (NP (DT the) (JJ same))
                  (VP (VBZ is) (RB not)
                    (ADJP (JJ true)
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJS oldest) (NNS forms))
                          (PP (IN of)
                            (NP (NN life)))
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBD did)
                                (VP (VB arise)
                                  (PP (IN from)
                                    (NP
                                      (NP (NN self))
                                      (VP (VBG replicating)
                                        (NP (NNS protens))))))))))))))))))))
    (. .)))

nn(dose-3, Biology-2)
nsubj(say-4, dose-3)
root(ROOT-0, say-4)
complm(arise-10, that-5)
amod(life-7, modern-6)
nsubj(arise-10, life-7)
aux(arise-10, can-8)
neg(arise-10, not-9)
ccomp(say-4, arise-10)
prep_from(arise-10, non-life-13)
advmod(true-20, however-15)
det(same-17, the-16)
nsubj(true-20, same-17)
cop(true-20, is-18)
neg(true-20, not-19)
dep(arise-10, true-20)
det(forms-24, the-22)
amod(forms-24, oldest-23)
prep_of(true-20, forms-24)
nsubj(arise-29, forms-24)
prep_of(forms-24, life-26)
aux(arise-29, did-28)
rcmod(forms-24, arise-29)
prep_from(arise-29, self-31)
partmod(self-31, replicating-32)
dobj(replicating-32, protens-33)

