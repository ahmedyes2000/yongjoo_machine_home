(ROOT
  (S
    (S
      (ADVP (RB weedonald))
      (NP (PRP you))
      (VP (VBD said)))
    (: :) (`` ``)
    (S
      (NP (DT A) (JJ supreme) (NN Being))
      (VP (VBZ is)
        (ADJP (RB totally) (JJ perfect))
        (ADVP (RB therefore))
        (SBAR
          (SBAR
            (S
              (VP (MD can) (RB not)
                (VP (VB be)
                  (VP
                    (VP (VBN measured))
                    (, ,)
                    (VP (VBN defined))
                    (CC or)
                    (VP
                      (ADVP (RB even) ('' ''))
                      (VBN sampled) ('' '')
                      (PP (IN as)
                        (PP (IN per)
                          (NP (DT the) (JJ scientific) (NN method))))))))))
          (, ,)
          (CC but)
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (MD could)))))))
    (: ...)))

advmod(said-3, weedonald-1)
nsubj(said-3, you-2)
root(ROOT-0, said-3)
det(Being-8, A-6)
amod(Being-8, supreme-7)
nsubj(perfect-11, Being-8)
cop(perfect-11, is-9)
advmod(perfect-11, totally-10)
dep(said-3, perfect-11)
advmod(perfect-11, therefore-12)
aux(measured-16, can-13)
neg(measured-16, not-14)
auxpass(measured-16, be-15)
dep(perfect-11, measured-16)
dep(perfect-11, defined-18)
conj_or(measured-16, defined-18)
advmod(sampled-22, even-20)
dep(perfect-11, sampled-22)
conj_or(measured-16, sampled-22)
prepc_as_per(sampled-22, per-25)
det(method-28, the-26)
amod(method-28, scientific-27)
pobj(sampled-22, method-28)
mark(could-33, if-31)
nsubj(could-33, we-32)
dep(perfect-11, could-33)
conj_but(measured-16, could-33)

(ROOT
  (NP ('' '')
    (CC Is)
    (NP
      (NP (RB n't) (PRP$ your) (NN assumption))
      (VP (VBN based) (, ,)
        (PP (IN in)
          (NP (NN part)))
        (, ,)
        (PP (IN on)
          (NP
            (NP (DT the) (JJ subjective) (NN concept))
            (PP (IN of)
              (NP (NN perfection)))))))
    (. ?)))

cc(assumption-5, Is-2)
neg(assumption-5, n't-3)
poss(assumption-5, your-4)
root(ROOT-0, assumption-5)
partmod(assumption-5, based-6)
prep_in(based-6, part-9)
det(concept-14, the-12)
amod(concept-14, subjective-13)
prep_on(based-6, concept-14)
prep_of(concept-14, perfection-16)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG removing)
          (NP (NNP God))
          (PP (IN from)
            (NP
              (NP (NN man) (POS 's))
              (NN capability)
              (S
                (VP (TO to)
                  (VP (VB define)
                    (NP (NN god))))))))))
    (NP (PRP you))
    (VP (MD can) (RB not)
      (VP (DT both) (VB say)
        (SBAR
          (SBAR
            (S
              (NP (NNP God))
              (VP (VBZ exists))))
          (CC and)
          (SBAR
            (S
              (NP (NNP God))
              (VP (VBZ does) (RB not)
                (VP (VB exist))))))))
    (. .)))

prepc_by(say-15, removing-2)
dobj(removing-2, God-3)
poss(capability-7, man-5)
prep_from(removing-2, capability-7)
aux(define-9, to-8)
infmod(capability-7, define-9)
dobj(define-9, god-10)
nsubj(say-15, you-11)
aux(say-15, can-12)
neg(say-15, not-13)
dep(say-15, both-14)
root(ROOT-0, say-15)
nsubj(exists-17, God-16)
dep(say-15, exists-17)
nsubj(exist-22, God-19)
aux(exist-22, does-20)
neg(exist-22, not-21)
dep(say-15, exist-22)
conj_and(exists-17, exist-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NN essence)))
    (, ,)
    (NP (PRP you))
    (VP (VBP 've)
      (VP (VBN defined)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP state)
              (SBAR
                (S
                  (VP (MD can) (RB not)
                    (VP (VB be)
                      (VP (VBN defined)
                        (PP (IN by)
                          (S
                            (VP (VBG creating)
                              (NP (DT a) (NN definition)))))))))))))))
    (. .)))

prep_in(defined-6, essence-2)
nsubj(defined-6, you-4)
aux(defined-6, 've-5)
root(ROOT-0, defined-6)
dep(state-9, what-7)
nsubjpass(defined-13, what-7)
nsubj(state-9, you-8)
ccomp(defined-6, state-9)
aux(defined-13, can-10)
neg(defined-13, not-11)
auxpass(defined-13, be-12)
ccomp(state-9, defined-13)
agent(defined-13, creating-15)
det(definition-17, a-16)
dobj(creating-15, definition-17)

(ROOT
  (S ('' '')
    (ADVP (RB God))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP he)
          (CC or)
          (PRP she))
        (VP (VBZ exists))))
    (, ,)
    (VP (VBZ is)
      (PP (IN above)
        (NP (JJ dimensional) (NN space)
          (CC and)
          (NN time))))
    (: ...)))

advmod(is-10, God-2)
mark(exists-8, if-4)
nsubj(exists-8, he-5)
conj_or(he-5, she-7)
nsubj(exists-8, she-7)
dep(is-10, exists-8)
root(ROOT-0, is-10)
amod(space-13, dimensional-12)
prep_above(is-10, space-13)
prep_above(is-10, time-15)
conj_and(space-13, time-15)

(ROOT
  (S ('' '')
    (ADVP (RB Again))
    (, ,)
    (NP (DT this))
    (VP (VBZ creates)
      (NP (DT the) (JJ same) (NN loop))
      (PP (IN as)
        (PP (IN above)
          (CC but)
          (NP
            (NP (DT this) (NN time))
            (VP (VBN resting)
              (PP (IN on)
                (NP (DT the) (NN assumption)))
              (SBAR (IN that)
                (S
                  (NP
                    (NP (JJ extra-dimensional) (NN space))
                    (CC and)
                    (NP (NN time)))
                  (VP (VBP exist)
                    (S
                      (VP (TO to)
                        (VP (VB support)
                          (NP (DT the) (NN position))
                          (SBAR (IN that)
                            (S
                              (NP (NNP God))
                              (VP (VBZ exists)))))))))))))))
    (. .)))

advmod(creates-5, Again-2)
nsubj(creates-5, this-4)
root(ROOT-0, creates-5)
det(loop-8, the-6)
amod(loop-8, same-7)
dobj(creates-5, loop-8)
prep(creates-5, as-9)
pcomp(as-9, above-10)
prep(as-9, above-10)
det(time-13, this-12)
pcomp(as-9, time-13)
prep(as-9, time-13)
conj_but(above-10, time-13)
pobj(above-10, time-13)
partmod(time-13, resting-14)
det(assumption-17, the-16)
prep_on(resting-14, assumption-17)
complm(exist-23, that-18)
amod(space-20, extra-dimensional-19)
nsubj(exist-23, space-20)
xsubj(support-25, space-20)
conj_and(space-20, time-22)
nsubj(exist-23, time-22)
xsubj(support-25, time-22)
ccomp(resting-14, exist-23)
aux(support-25, to-24)
xcomp(exist-23, support-25)
det(position-27, the-26)
dobj(support-25, position-27)
complm(exists-30, that-28)
nsubj(exists-30, God-29)
ccomp(support-25, exists-30)

(ROOT
  (S ('' '')
    (NP (PRP We))
    (VP (MD can) (RB not) (, ,)
      (SBAR (IN by)
        (S
          (NP (NN definition))
          (ADVP (RB ever))
          (VP (VBP understand)
            (CC or)
            (VBP know)
            (NP
              (NP (DT The) (NNP First) (NNP Cause))
              (PRN (-LRB- -LRB-)
                (NP (NNP God))
                (-RRB- -RRB-))
              (SBAR (IN because)
                (S
                  (NP (PRP we))
                  (VP (VBP are)
                    (ADJP (RB only) (JJ capable)
                      (PP (IN of)
                        (S
                          (VP (VBG anthropomorphizing)
                            (NP
                              (NP (DT any) (NNP Creator)
                                (CC or)
                                (NNP Force))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBZ is)
                                    (ADVP (RB metaphysically))
                                    (PP (IN beyond)
                                      (NP (PRP us)))))))))))))))))))
    (. .)))

nsubj(can-3, We-2)
root(ROOT-0, can-3)
neg(can-3, not-4)
mark(understand-9, by-6)
nsubj(understand-9, definition-7)
nsubj(know-11, definition-7)
advmod(understand-9, ever-8)
advcl(can-3, understand-9)
advcl(can-3, know-11)
conj_or(understand-9, know-11)
det(Cause-14, The-12)
nn(Cause-14, First-13)
dobj(understand-9, Cause-14)
appos(Cause-14, God-16)
mark(capable-22, because-18)
nsubj(capable-22, we-19)
cop(capable-22, are-20)
advmod(capable-22, only-21)
dep(Cause-14, capable-22)
prepc_of(capable-22, anthropomorphizing-24)
det(Creator-26, any-25)
dobj(anthropomorphizing-24, Creator-26)
nsubj(is-30, Creator-26)
dobj(anthropomorphizing-24, Force-28)
conj_or(Creator-26, Force-28)
nsubj(is-30, Force-28)
rcmod(Creator-26, is-30)
advmod(is-30, metaphysically-31)
prep_beyond(is-30, us-33)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB defer)
        (PP (TO to)
          (NP (PRP$ my) (JJ prior) (NNS arguments)
            (CC and)
            (NN note)))
        (SBAR (IN that)
          (S
            (NP (DT this) (NN point))
            (VP (VBZ is)
              (SBAR
                (WHNP (WP what))
                (S
                  (ADVP (RB paradoxically))
                  (VP (VBZ refutes)
                    (NP (PRP$ your) (JJ own) (NNS arguments))))))))))
    (. .)))

nsubj(defer-4, I-2)
aux(defer-4, 'll-3)
root(ROOT-0, defer-4)
poss(arguments-8, my-6)
amod(arguments-8, prior-7)
prep_to(defer-4, arguments-8)
prep_to(defer-4, note-10)
conj_and(arguments-8, note-10)
complm(is-14, that-11)
det(point-13, this-12)
nsubj(is-14, point-13)
ccomp(defer-4, is-14)
nsubj(refutes-17, what-15)
advmod(refutes-17, paradoxically-16)
ccomp(is-14, refutes-17)
poss(arguments-20, your-18)
amod(arguments-20, own-19)
dobj(refutes-17, arguments-20)

