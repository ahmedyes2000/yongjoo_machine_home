(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ tells)
      (NP (PRP us))
      (PP
        (ADVP (RB accurately))
        (IN about)
        (NP
          (NP (DT the) (NNS effects))
          (PP (IN of)
            (NP (JJ certain) (NNS actions))))))
    (. .)))

nsubj(tells-2, Science-1)
root(ROOT-0, tells-2)
dobj(tells-2, us-3)
advmod(tells-2, accurately-4)
det(effects-7, the-6)
prep_about(tells-2, effects-7)
amod(actions-10, certain-9)
prep_of(effects-7, actions-10)

(ROOT
  (S
    (VP (VBG E.g.)
      (NP (NN smoking) (, ,) (NNS drugs) (, ,) (NN alcohol) (, ,) (JJ homosexuality) (, ,) (JJ unprotected) (NN sex)))
    (: ...)))

root(ROOT-0, E.g.-1)
nn(sex-11, smoking-2)
dep(sex-11, drugs-4)
dep(sex-11, alcohol-6)
amod(sex-11, homosexuality-8)
amod(sex-11, unprotected-10)
dobj(E.g.-1, sex-11)

(ROOT
  (SBARQ
    (WHNP (WDT which))
    (SQ
      (VP (VBZ god)))
    (. ?)))

nsubj(god-2, which-1)
root(ROOT-0, god-2)

(ROOT
  (S
    (PP (IN Because)
      (PP (IN of)
        (NP (NN religion))))
    (NP (PRP we))
    (VP (VBP are)
      (ADVP (RB always))
      (VP (VBN focused)
        (PP (IN on)
          (NP
            (NP (DT some) (NN sort))
            (PP (IN of)
              (NP
                (ADJP (JJ afterlife)
                  (CC and)
                  (NN soul))
                (NN saving) (NNS exercises)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP take)
                  (NP (PRP$ our) (NN attention))
                  (PP (IN from)
                    (S
                      (VP (VBG establishing)
                        (NP (DT a) (JJR better) (NN society))
                        (PP (IN for)
                          (NP
                            (NP (DT all))
                            (PP (IN of)
                              (NP (PRP us)))))))))))))))
    (. .)))

prepc_because_of(focused-7, of-2)
pobj(focused-7, religion-3)
nsubjpass(focused-7, we-4)
auxpass(focused-7, are-5)
advmod(focused-7, always-6)
root(ROOT-0, focused-7)
det(sort-10, some-9)
prep_on(focused-7, sort-10)
nsubj(take-18, sort-10)
amod(exercises-16, afterlife-12)
conj_and(afterlife-12, soul-14)
amod(exercises-16, soul-14)
nn(exercises-16, saving-15)
prep_of(sort-10, exercises-16)
rcmod(sort-10, take-18)
poss(attention-20, our-19)
dobj(take-18, attention-20)
prepc_from(take-18, establishing-22)
det(society-25, a-23)
amod(society-25, better-24)
dobj(establishing-22, society-25)
prep_for(establishing-22, all-27)
prep_of(all-27, us-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP (DT an) (JJ unnecessary) (NN distraction)))))))
    (, ,)
    (NP (PDT all) (DT this) (NN god))
    (VP (VBP talk))
    (. .)))

nsubj(think-2, I-1)
ccomp(talk-12, think-2)
nsubj(distraction-7, it-3)
cop(distraction-7, is-4)
det(distraction-7, an-5)
amod(distraction-7, unnecessary-6)
ccomp(think-2, distraction-7)
predet(god-11, all-9)
det(god-11, this-10)
nsubj(talk-12, god-11)
root(ROOT-0, talk-12)

(ROOT
  (S
    (VP
      (ADVP (RB Now))
      (VBG going)
      (ADVP (RB back))
      (PP (TO to)
        (NP (NN science))))
    (. .)))

advmod(going-2, Now-1)
root(ROOT-0, going-2)
advmod(going-2, back-3)
prep_to(going-2, science-5)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP are)
      (ADVP (RB still))
      (ADJP (JJ free)
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WDT whatever))
                (S
                  (NP (PRP they))
                  (VP (VBP want)
                    (PP (TO to)
                      (NP (PRP$ their) (NNS bodies)))
                    (, ,)
                    (SBAR (IN because)
                      (S
                        (NP (PRP they))
                        (VP (VBP own)
                          (NP (PRP them)))))))))))))
    (. .)))

nsubj(free-4, People-1)
cop(free-4, are-2)
advmod(free-4, still-3)
root(ROOT-0, free-4)
aux(do-6, to-5)
xcomp(free-4, do-6)
dep(want-9, whatever-7)
dobj(own-16, whatever-7)
nsubj(want-9, they-8)
ccomp(do-6, want-9)
poss(bodies-12, their-11)
prep_to(want-9, bodies-12)
mark(own-16, because-14)
nsubj(own-16, they-15)
advcl(want-9, own-16)
dobj(own-16, them-17)

(ROOT
  (S
    (ADVP (RB However))
    (NP (PRP they))
    (VP (VBP are) (RB not)
      (ADJP (JJ free)
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WDT whatever))
                (S
                  (NP (PRP they))
                  (VP (VBP want)
                    (PP (TO to)
                      (NP (PRP$ their) (NNS neighbors) (NN body)))))))))))
    (. .)))

advmod(free-5, However-1)
nsubj(free-5, they-2)
cop(free-5, are-3)
neg(free-5, not-4)
root(ROOT-0, free-5)
aux(do-7, to-6)
xcomp(free-5, do-7)
dobj(want-10, whatever-8)
nsubj(want-10, they-9)
ccomp(do-7, want-10)
poss(body-14, their-12)
nn(body-14, neighbors-13)
prep_to(want-10, body-14)

(ROOT
  (S
    (ADVP (RB Thus))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ absurd)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT a) (NN doctor))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBZ is)
                            (VP (VBG smoking)
                              (PP (IN in)
                                (NP (PRP$ his) (NN bedroom))))))))
                    (VP (VBZ is)
                      (VP (VBG breaking)
                        (NP (DT a) (NN law))))))))))))
    (. .)))

advmod(absurd-6, Thus-1)
nsubj(absurd-6, it-3)
aux(absurd-6, would-4)
cop(absurd-6, be-5)
root(ROOT-0, absurd-6)
aux(say-8, to-7)
xcomp(absurd-6, say-8)
complm(breaking-19, that-9)
det(doctor-11, a-10)
nsubj(smoking-14, doctor-11)
nsubj(breaking-19, doctor-11)
aux(smoking-14, is-13)
rcmod(doctor-11, smoking-14)
poss(bedroom-17, his-16)
prep_in(smoking-14, bedroom-17)
aux(breaking-19, is-18)
ccomp(say-8, breaking-19)
det(law-21, a-20)
dobj(breaking-19, law-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ absurd)
          (S
            (VP (TO to)
              (VP (VB impose)
                (NP
                  (NP (DT that))
                  (PP (IN on)
                    (NP (PRP him))))))))))
    (. .)))

nsubj(absurd-4, It-1)
aux(absurd-4, would-2)
cop(absurd-4, be-3)
root(ROOT-0, absurd-4)
aux(impose-6, to-5)
xcomp(absurd-4, impose-6)
dobj(impose-6, that-7)
prep_on(that-7, him-9)

(ROOT
  (NP
    (NP (JJ Same))
    (PP (IN with)
      (NP (NN drinking)))
    (. .)))

root(ROOT-0, Same-1)
prep_with(Same-1, drinking-3)

(ROOT
  (S
    (NP (RB Only) (NN religion))
    (VP (VBZ imposes)
      (NP
        (NP (DT some) (NN sort))
        (PP (IN of)
          (NP (JJ virtual) (NN punishment))))
      (PP (TO to)
        (NP
          (NP
            (NP (DT these) (NNS people))
            (PRN (-LRB- -LRB-)
              (UCP
                (ADVP (RB here))
                (CC or)
                (PP (IN in)
                  (NP (DT the) (NN afterlife)))))
            (-RRB- -RRB-))
          (VP (VBG taking)
            (PRT (RP away))
            (NP (PRP$ their) (JJ personal) (NNS freedoms))))))
    (. .)))

advmod(religion-2, Only-1)
nsubj(imposes-3, religion-2)
root(ROOT-0, imposes-3)
det(sort-5, some-4)
dobj(imposes-3, sort-5)
amod(punishment-8, virtual-7)
prep_of(sort-5, punishment-8)
det(people-11, these-10)
prep_to(imposes-3, people-11)
dep(people-11, here-13)
dep(people-11, in-15)
conj_or(here-13, in-15)
det(afterlife-17, the-16)
pobj(in-15, afterlife-17)
partmod(people-11, taking-19)
prt(taking-19, away-20)
poss(freedoms-23, their-21)
amod(freedoms-23, personal-22)
dobj(taking-19, freedoms-23)

(ROOT
  (NP (FW etc.) (. .)))

root(ROOT-0, etc.-1)

(ROOT
  (S (CC But)
    (NP (NNS people))
    (VP (VBP are)
      (ADVP (RB still))
      (ADJP (JJ free)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (NNS decisions)))))))
    (. .)))

cc(free-5, But-1)
nsubj(free-5, people-2)
cop(free-5, are-3)
advmod(free-5, still-4)
root(ROOT-0, free-5)
aux(make-7, to-6)
xcomp(free-5, make-7)
dobj(make-7, decisions-8)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP we))
        (VP (VBP are)
          (VP (VBG talking)
            (PP (IN about)
              (NP (NN society)))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (NNS laws))
            (PP (VBN based)
              (PP (IN on)
                (NP
                  (NP (JJ factual) (NN evidence))
                  (, ,)
                  (NP
                    (NP
                      (ADJP (RB not) (JJ subjective))
                      (NNS feelings))
                    (PP (IN about)
                      (NP (NNS things)))))))))))
    (. .)))

advmod(have-11, However-1)
advmod(talking-6, when-3)
nsubj(talking-6, we-4)
aux(talking-6, are-5)
advcl(have-11, talking-6)
prep_about(talking-6, society-8)
nsubj(have-11, we-10)
xsubj(make-13, we-10)
root(ROOT-0, have-11)
aux(make-13, to-12)
xcomp(have-11, make-13)
dobj(make-13, laws-14)
prepc_based_on(make-13, on-16)
amod(evidence-18, factual-17)
pobj(make-13, evidence-18)
neg(subjective-21, not-20)
amod(feelings-22, subjective-21)
appos(evidence-18, feelings-22)
prep_about(feelings-22, things-24)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (NP (NNS people))
      (VP (VBP make)
        (NP
          (NP (DT a) (`` ``) (JJ moral) ('' '') (NN choice))
          (PP (IN about)
            (NP (NNS things))))))
    (, ,)
    (CC but)
    (S
      (NP (DT this) (NN choice) (NN doesnt))
      (ADVP (RB necessarily))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN based)
                (PP (IN on)
                  (NP (NN fairy) (NNS tales)))))))))
    (. .)))

dep(make-3, Yes-1)
nsubj(make-3, people-2)
root(ROOT-0, make-3)
det(choice-8, a-4)
amod(choice-8, moral-6)
dobj(make-3, choice-8)
prep_about(choice-8, things-10)
det(doesnt-15, this-13)
nn(doesnt-15, choice-14)
nsubj(have-17, doesnt-15)
xsubj(based-20, doesnt-15)
advmod(have-17, necessarily-16)
conj_but(make-3, have-17)
aux(based-20, to-18)
auxpass(based-20, be-19)
xcomp(have-17, based-20)
nn(tales-23, fairy-22)
prep_on(based-20, tales-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN based)
          (PP (IN on)
            (NP (JJ scientific) (NN evidence))))))
    (. .)))

nsubjpass(based-4, It-1)
aux(based-4, can-2)
auxpass(based-4, be-3)
root(ROOT-0, based-4)
amod(evidence-7, scientific-6)
prep_on(based-4, evidence-7)

(ROOT
  (PRN
    (ADVP (RB However))
    (, ,)
    (SBAR (WP what) (IN if)
      (S
        (NP (DT the) (NN doctor))
        (VP (VBD was)
          (VP (VBG smoking)
            (PP (IN in)
              (NP (DT a) (JJ public) (NN place))))))
      (. ?))))

dep(smoking-8, However-1)
dep(smoking-8, what-3)
dep(smoking-8, if-4)
det(doctor-6, the-5)
nsubj(smoking-8, doctor-6)
aux(smoking-8, was-7)
root(ROOT-0, smoking-8)
det(place-12, a-10)
amod(place-12, public-11)
prep_in(smoking-8, place-12)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Japan)))
    (NP (PRP they))
    (VP (VBP are)
      (ADVP (RB already))
      (VP (VBG passing)
        (NP (NNS laws))
        (PP (IN against)
          (NP
            (NP (NN smoking))
            (PP (IN in)
              (NP
                (NP (JJ public) (NNS places))
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP (NN train) (NNS stations))
                    (PP (IN for)
                      (NP (NN example))))
                  (-RRB- -RRB-))))))))
    (. .)))

prep_in(passing-6, Japan-2)
nsubj(passing-6, they-3)
aux(passing-6, are-4)
advmod(passing-6, already-5)
root(ROOT-0, passing-6)
dobj(passing-6, laws-7)
prep_against(passing-6, smoking-9)
amod(places-12, public-11)
prep_in(smoking-9, places-12)
nn(stations-15, train-14)
dep(places-12, stations-15)
prep_for(stations-15, example-17)

(ROOT
  (FRAG (WRB Why) (. ?)))

root(ROOT-0, Why-1)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (PRP we))
        (VP (VBP know)
          (SBAR
            (SBAR (IN that)
              (S
                (NP (JJ second-hand) (NN smoke))
                (VP (VBZ is)
                  (ADJP (JJ harmful)))))
            (, ,)
            (CC and)
            (SBAR (IN so)
              (S
                (NP (PRP it))
                (VP (VBZ makes))))))))
    (VP (VBP sense)
      (S
        (VP (TO to)
          (VP (VB sanction)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP want)
                    (S
                      (VP (TO to)
                        (VP (VB harm)
                          (NP (NNS others))
                          (PP (IN with)
                            (NP (PRP$ their) (NN behavior))))))))))))))
    (. .)))

mark(know-3, Because-1)
nsubj(know-3, we-2)
csubj(sense-14, know-3)
complm(harmful-8, that-4)
amod(smoke-6, second-hand-5)
nsubj(harmful-8, smoke-6)
cop(harmful-8, is-7)
ccomp(know-3, harmful-8)
mark(makes-13, so-11)
nsubj(makes-13, it-12)
ccomp(know-3, makes-13)
conj_and(harmful-8, makes-13)
root(ROOT-0, sense-14)
aux(sanction-16, to-15)
xcomp(sense-14, sanction-16)
dobj(sanction-16, those-17)
nsubj(want-19, those-17)
rcmod(those-17, want-19)
aux(harm-21, to-20)
xcomp(want-19, harm-21)
dobj(harm-21, others-22)
poss(behavior-25, their-24)
prep_with(harm-21, behavior-25)

(ROOT
  (S
    (NP (NNS Murderers))
    (ADVP (RB also))
    (VP (VBP do)
      (NP
        (NP (NNS things))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBP are)
                (ADJP (JJ harmful)
                  (PP (TO to)
                    (NP (NNS others)))))
              (CC and)
              (VP (MD should)
                (VP (VB go)
                  (PP (TO to)
                    (NP (NN jail))))))))))
    (. .)))

nsubj(do-3, Murderers-1)
advmod(do-3, also-2)
root(ROOT-0, do-3)
dobj(do-3, things-4)
nsubj(harmful-7, things-4)
nsubj(go-12, things-4)
cop(harmful-7, are-6)
rcmod(things-4, harmful-7)
prep_to(harmful-7, others-9)
aux(go-12, should-11)
rcmod(things-4, go-12)
conj_and(harmful-7, go-12)
prep_to(go-12, jail-14)

(ROOT
  (S
    (NP
      (NP (NN Drug) (NNS dealers))
      (, ,)
      (NP
        (NP (DT the) (JJ only) (NN reason))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP are)
              (VP (VBG doing)
                (S
                  (NP (NN something))
                  (ADJP (JJ wrong)))))))))
    (VP (VBZ is)
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ entails)
            (NP
              (NP (DT an) (JJ economic) (NN transaction) (NN outside))
              (PP (IN of)
                (NP (NN government) (NN regulation))))))))
    (. .)))

nn(dealers-2, Drug-1)
nsubj(is-12, dealers-2)
det(reason-6, the-4)
amod(reason-6, only-5)
appos(dealers-2, reason-6)
dobj(doing-9, reason-6)
nsubj(doing-9, they-7)
aux(doing-9, are-8)
rcmod(reason-6, doing-9)
nsubj(wrong-11, something-10)
xcomp(doing-9, wrong-11)
root(ROOT-0, is-12)
mark(entails-15, because-13)
nsubj(entails-15, it-14)
advcl(is-12, entails-15)
det(outside-19, an-16)
amod(outside-19, economic-17)
nn(outside-19, transaction-18)
dobj(entails-15, outside-19)
nn(regulation-22, government-21)
prep_of(outside-19, regulation-22)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Amsterdam)))
    (, ,)
    (S
      (NP (NN marijuana))
      (VP (VBZ is)
        (ADJP (JJ legalized))
        (, ,)
        (PP (VBN based)
          (PP (IN on)
            (NP
              (NP (DT the) (JJ scientific) (NN study))
              (PP (IN of)
                (NP (DT the) (NNS effects))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT no) (NN one))
      (VP (VBZ is)
        (VP (VBG prosecuting)
          (NP
            (NP (DT the) (NNS owners))
            (PP (IN of)
              (NP (NN coffee) (NNS houses))))
          (PP (IN for)
            (S
              (VP (VBG selling)
                (NP (PRP it))
                (PP (TO to)
                  (NP (NNS costumers)))))))))
    (. .)))

prep_in(legalized-6, Amsterdam-2)
nsubj(legalized-6, marijuana-4)
cop(legalized-6, is-5)
root(ROOT-0, legalized-6)
prepc_based_on(legalized-6, on-9)
det(study-12, the-10)
amod(study-12, scientific-11)
pobj(legalized-6, study-12)
det(effects-15, the-14)
prep_of(study-12, effects-15)
det(one-19, no-18)
nsubj(prosecuting-21, one-19)
aux(prosecuting-21, is-20)
conj_and(legalized-6, prosecuting-21)
det(owners-23, the-22)
dobj(prosecuting-21, owners-23)
nn(houses-26, coffee-25)
prep_of(owners-23, houses-26)
prepc_for(prosecuting-21, selling-28)
dobj(selling-28, it-29)
prep_to(selling-28, costumers-31)

(ROOT
  (S (RB So)
    (ADVP (RB sometimes))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (NP
        (NP (DT the) (JJ contradictory) (NNS cases))
        (PP (IN of)
          (NP
            (NP (NNS doctors))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP know)
                  (SBAR
                    (WHADVP (WRB how)
                      (ADJP (JJ harmful)))
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (S
                          (VP (TO to)
                            (VP
                              (VP (VB smoke))
                              (, ,)
                              (CC but)
                              (ADVP (RB still))
                              (VP (VB do)
                                (NP (PRP it))
                                (PP (TO to)
                                  (NP (PRP themselves)))))))))))))))))
    (. .)))

advmod(have-5, So-1)
advmod(have-5, sometimes-2)
nsubj(have-5, you-4)
root(ROOT-0, have-5)
det(cases-8, the-6)
amod(cases-8, contradictory-7)
dobj(have-5, cases-8)
prep_of(cases-8, doctors-10)
nsubj(know-12, doctors-10)
rcmod(doctors-10, know-12)
advmod(is-16, how-13)
dep(how-13, harmful-14)
nsubj(is-16, it-15)
xsubj(smoke-18, it-15)
ccomp(know-12, is-16)
aux(smoke-18, to-17)
xcomp(is-16, smoke-18)
xcomp(is-16, still-21)
advmod(smoke-18, still-21)
conj_but(smoke-18, still-21)
xcomp(is-16, do-22)
conj_but(smoke-18, do-22)
dobj(do-22, it-23)
prep_to(do-22, themselves-25)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN lot))
        (PP (IN of)
          (NP
            (NP (JJ moral) (NNS laws))
            (PP (IN of)
              (NP (NN religion))))))
      (VP (VBP overlap)
        (PP (IN with)
          (NP
            (NP (JJ common) (NN sense))
            (PRN (-LRB- -LRB-)
              (PP
                (ADVP (IN at) (JJS least))
                (IN in)
                (NP (DT the) (NN christian) (NN religion)))
              (-RRB- -RRB-))))))
    (CC but)
    (S
      (S
        (NP (DT a) (NN lot))
        (VP (VBP do) (RB not)))
      (, ,)
      (CC and)
      (S
        (NP (PRP they))
        (VP (VBP lead)
          (PP (TO to)
            (NP
              (NP (NN hatred)
                (CC and)
                (NN discrimination))
              (VP (VBN based)
                (PP (IN on)
                  (NP (NN nothing))
                  (NP
                    (QP (JJR more) (IN than) (CD subjective))
                    (NNS claims)))
                (SBAR (IN that) (`` ``)
                  (S
                    (NP (NN god))
                    (VP (VBZ does) (RB n't)
                      (VP (VB like)
                        (NP (PRP it)))))
                  ('' ''))))))))
    (. .)))

det(lot-2, A-1)
nsubj(overlap-8, lot-2)
amod(laws-5, moral-4)
prep_of(lot-2, laws-5)
prep_of(laws-5, religion-7)
root(ROOT-0, overlap-8)
amod(sense-11, common-10)
prep_with(overlap-8, sense-11)
advmod(in-15, at-13)
pobj(at-13, least-14)
dep(sense-11, in-15)
det(religion-18, the-16)
nn(religion-18, christian-17)
pobj(in-15, religion-18)
det(lot-22, a-21)
nsubj(do-23, lot-22)
conj_but(overlap-8, do-23)
neg(do-23, not-24)
nsubj(lead-28, they-27)
conj_but(overlap-8, lead-28)
conj_and(do-23, lead-28)
prep_to(lead-28, hatred-30)
prep_to(lead-28, discrimination-32)
conj_and(hatred-30, discrimination-32)
partmod(hatred-30, based-33)
prep_on(based-33, nothing-35)
mwe(than-37, more-36)
quantmod(subjective-38, than-37)
num(claims-39, subjective-38)
dep(based-33, claims-39)
complm(like-45, that-40)
nsubj(like-45, god-42)
aux(like-45, does-43)
neg(like-45, n't-44)
ccomp(based-33, like-45)
dobj(like-45, it-46)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ is)
      (ADJP (RB homosexuality) (JJ wrong)))
    (. ?)))

advmod(wrong-4, Why-1)
cop(wrong-4, is-2)
advmod(wrong-4, homosexuality-3)
root(ROOT-0, wrong-4)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Belief))
        (PP (IN in)
          (NP (NN god))))
      (VP (VBZ entails)
        (NP (NN faith))))
    (, ,)
    (CC and)
    (S
      (NP (NN faith))
      (VP (VBZ is)
        (NP (DT the) (NN ability)
          (S
            (VP (TO to)
              (VP (VB believe)
                (PP (IN in)
                  (NP (NN something)))
                (PP (IN without)
                  (NP (NN evidence)))))))))
    (. .)))

nsubj(entails-4, Belief-1)
prep_in(Belief-1, god-3)
root(ROOT-0, entails-4)
dobj(entails-4, faith-5)
nsubj(ability-11, faith-8)
cop(ability-11, is-9)
det(ability-11, the-10)
conj_and(entails-4, ability-11)
aux(believe-13, to-12)
infmod(ability-11, believe-13)
prep_in(believe-13, something-15)
prep_without(believe-13, evidence-17)

(ROOT
  (S
    (S
      (SBAR (IN Once)
        (S
          (NP (PRP you))
          (VP (VBP believe)
            (PP (IN in)
              (NP (NN god))))))
      (NP (PRP you))
      (VP (VBP start)
        (S
          (VP
            (VP (TO to)
              (VP (VB believe)
                (SBAR
                  (WHNP (WDT whatever))
                  (S
                    (NP (RB else) (NN anyone))
                    (VP (VBZ tells)
                      (NP (PRP you)))))))
            (PRN (-LRB- -LRB-)
              (PP (VBG including)
                (NP
                  (NP (DT the) (NNS voices))
                  (PP (IN in)
                    (NP (PRP$ your) (NN head)))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBP are) (RB not)
                        (ADVP (RB always))
                        (ADJP (JJ good)))))))
              (-RRB- -RRB-))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP we))
      (VP (VBP are)
        (NP (NNS steps))
        (PP (RB away) (IN from)
          (S
            (VP (VBG becoming)
              (NP (NN sheep)))))))
    (. .)))

mark(believe-3, Once-1)
nsubj(believe-3, you-2)
advcl(start-7, believe-3)
prep_in(believe-3, god-5)
nsubj(start-7, you-6)
root(ROOT-0, start-7)
aux(believe-9, to-8)
ccomp(start-7, believe-9)
dobj(tells-13, whatever-10)
advmod(anyone-12, else-11)
nsubj(tells-13, anyone-12)
ccomp(believe-9, tells-13)
dobj(tells-13, you-14)
dep(believe-9, including-16)
det(voices-18, the-17)
pobj(including-16, voices-18)
nsubj(good-26, voices-18)
poss(head-21, your-20)
prep_in(voices-18, head-21)
cop(good-26, are-23)
neg(good-26, not-24)
advmod(good-26, always-25)
rcmod(voices-18, good-26)
advmod(steps-33, then-30)
nsubj(steps-33, we-31)
cop(steps-33, are-32)
conj_and(start-7, steps-33)
prepc_away_from(steps-33, becoming-36)
attr(becoming-36, sheep-37)

(ROOT
  (S
    (NP
      (NP (NNP Science))
      (PP (IN on)
        (NP (DT the) (JJ other) (NN hand))))
    (VP (VBZ teaches)
      (S
        (NP (PRP us))
        (VP (TO to)
          (VP (VB question)))))
    (. .)))

nsubj(teaches-6, Science-1)
det(hand-5, the-3)
amod(hand-5, other-4)
prep_on(Science-1, hand-5)
root(ROOT-0, teaches-6)
nsubj(question-9, us-7)
aux(question-9, to-8)
xcomp(teaches-6, question-9)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ gives)
        (NP (PRP us))
        (NP (NNS facts))))
    (CC and)
    (RB then)
    (S
      (NP (PRP we))
      (VP (MD can)
        (VP (VB know)
          (SBAR
            (WHNP (WP what) (NNS effects))
            (S
              (NP (PRP it))
              (VP (MD will)
                (VP (VB have)
                  (PP (IN for)
                    (NP (NN society))))))))))
    (. .)))

nsubj(gives-2, It-1)
root(ROOT-0, gives-2)
iobj(gives-2, us-3)
dobj(gives-2, facts-4)
advmod(gives-2, then-6)
conj_and(gives-2, then-6)
nsubj(know-9, we-7)
aux(know-9, can-8)
ccomp(gives-2, know-9)
det(effects-11, what-10)
dobj(have-14, effects-11)
nsubj(have-14, it-12)
aux(have-14, will-13)
ccomp(know-9, have-14)
prep_for(have-14, society-16)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (NN science))
    (VP (MD can)
      (VP (VB say)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NN drug) (NN abuse))
            (VP (VBZ affects)
              (NP (DT a) (NN country)))))))
    (. !)))

prep_of(say-5, course-2)
nsubj(say-5, science-3)
aux(say-5, can-4)
root(ROOT-0, say-5)
advmod(affects-9, how-6)
nn(abuse-8, drug-7)
nsubj(affects-9, abuse-8)
ccomp(say-5, affects-9)
det(country-11, a-10)
dobj(affects-9, country-11)

(ROOT
  (S
    (VP (VB Im)
      (S
        (VP (VBG talking)
          (PP (IN about)
            (NP
              (NP (DT the) (JJ scientific) (NN method))
              (PP (IN of)
                (NP (NN reasoning))))))))
    (. .)))

root(ROOT-0, Im-1)
xcomp(Im-1, talking-2)
det(method-6, the-4)
amod(method-6, scientific-5)
prep_about(talking-2, method-6)
prep_of(method-6, reasoning-8)

(ROOT
  (S
    (NP (NNP Social) (NNS sciences))
    (VP (VBN based)
      (PP (IN on)
        (NP
          (NP (NNS statistics))
          (CC and)
          (NP
            (NP (JJ other) (NNS forms))
            (PP (IN of)
              (NP (NN study) (NN deal))))))
      (PP (IN with)
        (NP
          (NP (DT these) (NNS problems) (JJ everyday))
          (PP (IN in)
            (NP (DT every) (NN university))))))
    (. .)))

nn(sciences-2, Social-1)
nsubj(based-3, sciences-2)
root(ROOT-0, based-3)
prep_on(based-3, statistics-5)
amod(forms-8, other-7)
prep_on(based-3, forms-8)
conj_and(statistics-5, forms-8)
nn(deal-11, study-10)
prep_of(forms-8, deal-11)
det(problems-14, these-13)
prep_with(based-3, problems-14)
amod(problems-14, everyday-15)
det(university-18, every-17)
prep_in(problems-14, university-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG underestimating)
              (NP
                (NP (DT the) (NN value))
                (PP (IN of)
                  (NP (NN inquiry)
                    (CC and)
                    (JJ critical) (NN thinking)))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(underestimating-5, you-3)
aux(underestimating-5, are-4)
ccomp(think-2, underestimating-5)
det(value-7, the-6)
dobj(underestimating-5, value-7)
nn(thinking-12, inquiry-9)
conj_and(inquiry-9, critical-11)
nn(thinking-12, critical-11)
prep_of(value-7, thinking-12)

(ROOT
  (S
    (PP (IN In)
      (NP (NN religion)))
    (, ,)
    (NP (PRP you))
    (VP (VBP run)
      (PP (IN into)
        (NP (DT the) (JJ same) (NNS contradictions)))
      (NP (PDT all) (DT the) (NN time))
      (, ,)
      (PP (RB especially) (IN in)
        (NP
          (NP (NNS cases))
          (SBAR
            (WHNP (WDT that))
            (S
              (PP (IN in)
                (NP (PRP$ my) (NN opinion)))
              (VP (VBP are)
                (ADJP
                  (ADJP (RBR more) (JJ delicate)
                    (PP (IN in)
                      (NP
                        (NP (NNS terms))
                        (PP (IN of)
                          (NP (NN morality))))))
                  (SBAR (IN because)
                    (S
                      (NP (PRP they))
                      (VP (VBP are)
                        (ADJP (RBR more) (JJ fragile))))))))))))
    (. .)))

prep_in(run-5, religion-2)
nsubj(run-5, you-4)
root(ROOT-0, run-5)
det(contradictions-9, the-7)
amod(contradictions-9, same-8)
prep_into(run-5, contradictions-9)
predet(time-12, all-10)
det(time-12, the-11)
dobj(run-5, time-12)
advmod(run-5, especially-14)
prep_in(run-5, cases-16)
nsubj(delicate-23, cases-16)
poss(opinion-20, my-19)
prep_in(delicate-23, opinion-20)
cop(delicate-23, are-21)
advmod(delicate-23, more-22)
rcmod(cases-16, delicate-23)
prep_in(delicate-23, terms-25)
prep_of(terms-25, morality-27)
mark(fragile-32, because-28)
nsubj(fragile-32, they-29)
cop(fragile-32, are-30)
advmod(fragile-32, more-31)
ccomp(delicate-23, fragile-32)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP you))
    (VP (VBP are)
      (ADVP (RB just))
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB hold)
              (PRT (RP on))
              (PP (TO to)
                (NP (PRP$ your)
                  (ADJP (JJ subjective)
                    (SBAR
                      (S
                        (VP (VBP believe)
                          (SBAR (IN that)
                            (S
                              (NP (PRP you))
                              (VP (VBP need))))))))
                  (NN god)
                  (S
                    (VP (TO to)
                      (VP (VB know)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (VBZ is)
                              (ADJP (JJ good)
                                (CC or)
                                (JJ bad))
                              (PP (IN for)
                                (NP (PRP you))))))))))))))))
    (. .)))

advmod(trying-5, Maybe-1)
nsubj(trying-5, you-2)
xsubj(hold-7, you-2)
aux(trying-5, are-3)
advmod(trying-5, just-4)
root(ROOT-0, trying-5)
aux(hold-7, to-6)
xcomp(trying-5, hold-7)
prt(hold-7, on-8)
poss(god-16, your-10)
amod(god-16, subjective-11)
dep(subjective-11, believe-12)
complm(need-15, that-13)
nsubj(need-15, you-14)
ccomp(believe-12, need-15)
prep_to(hold-7, god-16)
aux(know-18, to-17)
infmod(god-16, know-18)
nsubj(good-21, what-19)
nsubj(bad-23, what-19)
cop(good-21, is-20)
ccomp(know-18, good-21)
ccomp(know-18, bad-23)
conj_or(good-21, bad-23)
prep_for(good-21, you-25)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ my) (NN opinion)))
    (NP
      (NP (NN belief))
      (PP (IN in)
        (NP (NN god))))
    (VP (VBZ does)
      (NP
        (NP (NN nothing))
        (PP (IN for)
          (NP (NN society)))))
    (. .)))

poss(opinion-3, my-2)
prep_in(does-7, opinion-3)
nsubj(does-7, belief-4)
prep_in(belief-4, god-6)
root(ROOT-0, does-7)
dobj(does-7, nothing-8)
prep_for(nothing-8, society-10)

(ROOT
  (S
    (VP (VBG NOTHING))
    (. .)))

root(ROOT-0, NOTHING-1)

(ROOT
  (S
    (NP (NNP Religion))
    (VP (VBZ puts)
      (NP (DT a) (NN focus))
      (PP (IN on)
        (NP
          (NP (NNS things))
          (PP (RB out) (IN of)
            (NP (DT this) (NN world)))))
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP (VB give)
              (NP (NNS people))
              (NP (DT a) (NN drive)))))))
    (. .)))

nsubj(puts-2, Religion-1)
root(ROOT-0, puts-2)
det(focus-4, a-3)
dobj(puts-2, focus-4)
prep_on(puts-2, things-6)
det(world-10, this-9)
prep_out_of(things-6, world-10)
mark(give-14, in-11)
dep(give-14, order-12)
aux(give-14, to-13)
purpcl(puts-2, give-14)
iobj(give-14, people-15)
det(drive-17, a-16)
dobj(give-14, drive-17)

(ROOT
  (SQ (VBZ Is)
    (NP (DT this))
    (ADJP (JJ good))
    (. ?)))

cop(good-3, Is-1)
nsubj(good-3, this-2)
root(ROOT-0, good-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is))
    (, ,)
    (X
      (PP (IN on)
        (NP (DT a)
          (ADJP (RB very) (JJ personal))
          (NN level))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
dep(is-2, on-4)
det(level-8, a-5)
advmod(personal-7, very-6)
amod(level-8, personal-7)
pobj(on-4, level-8)

(ROOT
  (S
    (NP (DT The) (NN problem))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNS people))
          (VP (VBP assume)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (VP (VBN meant)
                    (PP (IN for)
                      (NP (NN society)))))))))))
    (. .)))

det(problem-2, The-1)
nsubj(is-3, problem-2)
root(ROOT-0, is-3)
complm(assume-6, that-4)
nsubj(assume-6, people-5)
ccomp(is-3, assume-6)
complm(meant-10, that-7)
nsubjpass(meant-10, it-8)
auxpass(meant-10, was-9)
ccomp(assume-6, meant-10)
prep_for(meant-10, society-12)

(ROOT
  (S
    (NP (NNS Thats))
    (SBAR
      (WHADVP (WRB where))
      (S
        (NP (DT the) (JJ Jewish))
        (VP (VBD had)
          (S
            (NP (PRP it))
            (ADJP (JJ right)
              (PP (IN in)
                (S
                  (VP (VBG wanting)
                    (NP
                      (NP (DT a) (NN messiah))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (MD would)
                            (VP (VB come)
                              (CC and)
                              (VB liberate)
                              (NP (PRP them))
                              (PP (IN from)
                                (NP (DT the) (JJ political) (NN oppression))))))))))))))))
    (. .)))

dep(had-5, Thats-1)
advmod(had-5, where-2)
det(Jewish-4, the-3)
nsubj(had-5, Jewish-4)
root(ROOT-0, had-5)
nsubj(right-7, it-6)
xcomp(had-5, right-7)
prepc_in(right-7, wanting-9)
det(messiah-11, a-10)
dobj(wanting-9, messiah-11)
nsubj(come-14, messiah-11)
nsubj(liberate-16, messiah-11)
aux(come-14, would-13)
rcmod(messiah-11, come-14)
rcmod(messiah-11, liberate-16)
conj_and(come-14, liberate-16)
dobj(come-14, them-17)
det(oppression-21, the-19)
amod(oppression-21, political-20)
prep_from(come-14, oppression-21)

(ROOT
  (S (CC And)
    (NP (PRP they))
    (VP (VBD got)
      (SBAR
        (S
          (NP (NN rightfully))
          (VP (VBD pissed)
            (PRT (RP off))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBD realized)
                  (SBAR (IN that)
                    (S
                      (NP (DT this) (JJ great) (NNP Jesus))
                      (VP (VBD did) (RB not)
                        (VP (VB give)
                          (NP
                            (NP (DT a) (NN damn))
                            (PP (IN about)
                              (NP (DT the) (NN world))))
                          (ADVP (RB here)))))))))))))
    (. .)))

cc(got-3, And-1)
nsubj(got-3, they-2)
root(ROOT-0, got-3)
nsubj(pissed-5, rightfully-4)
ccomp(got-3, pissed-5)
prt(pissed-5, off-6)
advmod(realized-9, when-7)
nsubj(realized-9, they-8)
advcl(pissed-5, realized-9)
complm(give-16, that-10)
det(Jesus-13, this-11)
amod(Jesus-13, great-12)
nsubj(give-16, Jesus-13)
aux(give-16, did-14)
neg(give-16, not-15)
ccomp(realized-9, give-16)
det(damn-18, a-17)
dobj(give-16, damn-18)
det(world-21, the-20)
prep_about(damn-18, world-21)
advmod(give-16, here-22)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD cared)
      (PP (IN about)
        (NP (NNS souls))))
    (. .)))

nsubj(cared-2, He-1)
root(ROOT-0, cared-2)
prep_about(cared-2, souls-4)

(ROOT
  (S
    (S
      (NP (DT The) (NN difference))
      (VP (VBZ is) (, ,)
        (SBAR (IN that)
          (S
            (NP (JJ religious) (NNS people))
            (VP (VBP have)
              (NP (DT no) (NN way)
                (S
                  (VP (TO to)
                    (VP (VB argue)
                      (PP (IN for)
                        (SBAR
                          (WHADVP (WRB why))
                          (S
                            (NP (PRP they))
                            (VP (MD should)
                              (VP (VB do)
                                (ADVP (RB right))))))))))))))
        (, ,)
        (ADVP (JJ other)
          (PP (IN than)
            (PP (TO to) (`` ``)
              (NP (NN praise) (NN god))
              ('' ''))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP they))
      (VP (VBP try)
        (S
          (VP (TO to)
            (VP (VB impose)
              (NP (PRP it)))))))
    (. .)))

det(difference-2, The-1)
nsubj(is-3, difference-2)
root(ROOT-0, is-3)
complm(have-8, that-5)
amod(people-7, religious-6)
nsubj(have-8, people-7)
ccomp(is-3, have-8)
det(way-10, no-9)
dobj(have-8, way-10)
aux(argue-12, to-11)
infmod(way-10, argue-12)
advmod(do-17, why-14)
nsubj(do-17, they-15)
aux(do-17, should-16)
prepc_for(argue-12, do-17)
advmod(do-17, right-18)
advmod(is-3, other-20)
prep(other-20, than-21)
pcomp(than-21, to-22)
nn(god-25, praise-24)
prep_to(than-21, god-25)
advmod(try-31, then-29)
nsubj(try-31, they-30)
xsubj(impose-33, they-30)
conj_and(is-3, try-31)
aux(impose-33, to-32)
xcomp(try-31, impose-33)
dobj(impose-33, it-34)

(ROOT
  (S
    (NP (NNP Jesus))
    (VP (VBD did) (RB not)
      (VP (VB accept)
        (NP
          (NP (DT the) (NN temptation))
          (PP (IN of)
            (NP (NN satan))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD offered)
              (NP
                (NP (PDT all) (DT the) (NNS kingdoms))
                (PP (IN of)
                  (NP (DT the) (NN world)))))))))
    (. .)))

nsubj(accept-4, Jesus-1)
aux(accept-4, did-2)
neg(accept-4, not-3)
root(ROOT-0, accept-4)
det(temptation-6, the-5)
dobj(accept-4, temptation-6)
prep_of(temptation-6, satan-8)
advmod(offered-11, when-9)
nsubj(offered-11, he-10)
advcl(accept-4, offered-11)
predet(kingdoms-14, all-12)
det(kingdoms-14, the-13)
dobj(offered-11, kingdoms-14)
det(world-17, the-16)
prep_of(kingdoms-14, world-17)

(ROOT
  (SQ
    (VP (VB remember)
      (NP (DT that) (NN story)))
    (. ?)))

root(ROOT-0, remember-1)
det(story-3, that-2)
dobj(remember-1, story-3)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ does)
      (NP (DT that))
      (VP (VB tell)
        (NP (PRP you))))
    (. ?)))

dep(tell-4, What-1)
aux(tell-4, does-2)
nsubj(tell-4, that-3)
root(ROOT-0, tell-4)
dobj(tell-4, you-5)

(ROOT
  (FRAG
    (SBAR (IN that)
      (S
        (NP (DT the) (NN world))
        (VP (VBZ belongs)
          (PP (TO to)
            (NP
              (NP (NN someone) (JJ other))
              (PP (IN than)
                (NP (NN god))))))))
    (. .)))

dep(belongs-4, that-1)
det(world-3, the-2)
nsubj(belongs-4, world-3)
root(ROOT-0, belongs-4)
prep_to(belongs-4, someone-6)
amod(someone-6, other-7)
prep_than(someone-6, god-9)

(ROOT
  (S
    (NP
      (NP (DT that) (NN god) (POS 's))
      (NNS laws))
    (VP (VBP do) (RB not)
      (VP (VB apply)
        (PP (TO to)
          (NP (DT this) (NN world)))))
    (. .)))

det(god-2, that-1)
poss(laws-4, god-2)
nsubj(apply-7, laws-4)
aux(apply-7, do-5)
neg(apply-7, not-6)
root(ROOT-0, apply-7)
det(world-10, this-9)
prep_to(apply-7, world-10)

(ROOT
  (FRAG
    (SBAR (IN that)
      (S
        (NP (DT this) (NN world))
        (VP (VBZ is)
          (ADVP (RBR better))
          (VP (VBN run)
            (PP (IN without)
              (NP (JJ religious) (NNS beliefs)))))))
    (. .)))

dep(run-6, that-1)
det(world-3, this-2)
nsubjpass(run-6, world-3)
auxpass(run-6, is-4)
advmod(run-6, better-5)
root(ROOT-0, run-6)
amod(beliefs-9, religious-8)
prep_without(run-6, beliefs-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB also))
      (VP (VBD grew)
        (PRT (RP up))
        (PP (IN in)
          (NP (DT a) (NN christian) (NN environment)))))
    (CC and)
    (S
      (NP (FW i))
      (VP (VBP feel)
        (SBAR
          (S
            (NP (FW i))
            (VP (VBP know)
              (NP (DT the) (NN religion))
              (ADVP (RB pretty) (RB well)))))))
    (. .)))

nsubj(grew-3, I-1)
advmod(grew-3, also-2)
root(ROOT-0, grew-3)
prt(grew-3, up-4)
det(environment-8, a-6)
nn(environment-8, christian-7)
prep_in(grew-3, environment-8)
nsubj(feel-11, i-10)
conj_and(grew-3, feel-11)
nsubj(know-13, i-12)
ccomp(feel-11, know-13)
det(religion-15, the-14)
dobj(know-13, religion-15)
advmod(well-17, pretty-16)
advmod(know-13, well-17)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (ADVP (RB really))
    (VP (VBP find)
      (NP
        (NP (NN religion)
          (CC and)
          (NN faith))
        (VP (VBG lacking)
          (PP (IN in)
            (NP (NNS ways)))
          (S
            (VP (TO to)
              (VP (VB help)
                (S
                  (NP (NN society))
                  (VP (VB improve)))))))))
    (. .)))

cc(find-4, But-1)
nsubj(find-4, I-2)
advmod(find-4, really-3)
root(ROOT-0, find-4)
dobj(find-4, religion-5)
xsubj(help-12, religion-5)
dobj(find-4, faith-7)
conj_and(religion-5, faith-7)
xsubj(help-12, faith-7)
partmod(religion-5, lacking-8)
prep_in(lacking-8, ways-10)
aux(help-12, to-11)
xcomp(lacking-8, help-12)
nsubj(improve-14, society-13)
ccomp(help-12, improve-14)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP help)
        (S
          (NP (NNS people))
          (VP
            (VP (VB be)
              (ADJP (JJ happy)))
            (, ,)
            (VP (VB find)
              (S
                (NP (NNS reasons))
                (VP (TO to)
                  (VP (VB live)))))
            (, ,)
            (VP (VB thank)
              (NP (NN god))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN midst))
                  (PP (IN of)
                    (NP (NN trouble))))))))))
    (: ...)
    (S (CC but)
      (VP (VB leave)
        (S
          (NP (PRP it))
          (NP (EX there)))))
    (. .)))

nsubj(help-2, They-1)
root(ROOT-0, help-2)
nsubj(happy-5, people-3)
cop(happy-5, be-4)
ccomp(help-2, happy-5)
dep(happy-5, find-7)
nsubj(live-10, reasons-8)
aux(live-10, to-9)
xcomp(find-7, live-10)
dep(happy-5, thank-12)
dobj(thank-12, god-13)
det(midst-16, the-15)
prep_in(thank-12, midst-16)
prep_of(midst-16, trouble-18)
cc(leave-21, but-20)
parataxis(help-2, leave-21)
nsubj(there-23, it-22)
xcomp(leave-21, there-23)

(ROOT
  (S
    (NP
      (NP (VBG Denying) (NNS homosexuals))
      (PP (IN of)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB marry)
                (SBAR (IN because)
                  (S
                    (NP (NN god))
                    (VP (VBZ sees)
                      (S
                        (NP (PRP it))
                        (ADJP (RB as) (JJ wrong)))))))))))
      (, ,))
    (VP (VBZ is)
      (ADJP (JJ bullshit)))
    (. .)))

amod(homosexuals-2, Denying-1)
nsubj(bullshit-16, homosexuals-2)
det(right-5, the-4)
prep_of(homosexuals-2, right-5)
aux(marry-7, to-6)
infmod(right-5, marry-7)
mark(sees-10, because-8)
nsubj(sees-10, god-9)
advcl(marry-7, sees-10)
nsubj(wrong-13, it-11)
advmod(wrong-13, as-12)
xcomp(sees-10, wrong-13)
cop(bullshit-16, is-15)
root(ROOT-0, bullshit-16)

(ROOT
  (S
    (NP (NNP Christianity))
    (VP (VBZ is) (RB not)
      (NP (DT the) (JJ only) (NN religion)))
    (. .)))

nsubj(religion-6, Christianity-1)
cop(religion-6, is-2)
neg(religion-6, not-3)
det(religion-6, the-4)
amod(religion-6, only-5)
root(ROOT-0, religion-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (VP (VBN called)
        (NP (NN discrimination))))
    (. .)))

nsubjpass(called-3, It-1)
auxpass(called-3, is-2)
root(ROOT-0, called-3)
dobj(called-3, discrimination-4)

(ROOT
  (S
    (NP
      (NP (VBG Denying) (NNS women))
      (SBAR
        (S
          (NP (DT the) (NN right))
          (VP (TO to)
            (VP (VB abort)
              (SBAR (IN because)
                (S
                  (NP (DT the) (NN fetus))
                  (VP (VBZ has)
                    (NP (DT a) (NN soul))))))))))
    (, ,)
    (VP (VBZ is)
      (NP (DT another) (NN bullshit))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (MD can) (RB not)
            (VP (VB prove))))))
    (. .)))

amod(women-2, Denying-1)
dobj(abort-6, women-2)
nsubj(bullshit-16, women-2)
det(right-4, the-3)
nsubj(abort-6, right-4)
aux(abort-6, to-5)
infmod(women-2, abort-6)
rcmod(women-2, abort-6)
mark(has-10, because-7)
det(fetus-9, the-8)
nsubj(has-10, fetus-9)
advcl(abort-6, has-10)
det(soul-12, a-11)
dobj(has-10, soul-12)
cop(bullshit-16, is-14)
det(bullshit-16, another-15)
root(ROOT-0, bullshit-16)
complm(prove-21, that-17)
nsubj(prove-21, we-18)
aux(prove-21, can-19)
neg(prove-21, not-20)
ccomp(bullshit-16, prove-21)

(ROOT
  (S
    (S
      (VP (VBG Saying)
        (NP (PRP you))))
    (PRN
      (S
        (NP (NN cant))
        (VP (VBP smoke)
          (NP (DT a) (NN joint))
          (SBAR (IN because)
            (S
              (NP (NN god))
              (VP (MD would) (RB n't)
                (VP (VB like)
                  (NP (PRP it))))))))
      (, ,))
    (VP (VBZ is)
      (ADJP (JJ retarded)))
    (. .)))

csubj(retarded-15, Saying-1)
dobj(Saying-1, you-2)
nsubj(smoke-4, cant-3)
parataxis(retarded-15, smoke-4)
det(joint-6, a-5)
dobj(smoke-4, joint-6)
mark(like-11, because-7)
nsubj(like-11, god-8)
aux(like-11, would-9)
neg(like-11, n't-10)
advcl(smoke-4, like-11)
dobj(like-11, it-12)
cop(retarded-15, is-14)
root(ROOT-0, retarded-15)

(ROOT
  (S
    (S
      (VP (VBG Saying)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD should) (RB n't)
              (VP (VB smoke)
                (S
                  (NP (PRP it))
                  (VP (VB cause)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ kills)
                          (NP (NN brain) (NNS cells)))))))))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ different) (NN kind))
        (PP (IN of)
          (NP (NN choice)))))
    (. .)))

csubj(kind-16, Saying-1)
complm(smoke-6, that-2)
nsubj(smoke-6, you-3)
aux(smoke-6, should-4)
neg(smoke-6, n't-5)
ccomp(Saying-1, smoke-6)
nsubj(cause-8, it-7)
ccomp(smoke-6, cause-8)
nsubj(kills-10, it-9)
ccomp(cause-8, kills-10)
nn(cells-12, brain-11)
dobj(kills-10, cells-12)
cop(kind-16, is-13)
det(kind-16, a-14)
amod(kind-16, different-15)
root(ROOT-0, kind-16)
prep_of(kind-16, choice-18)

(ROOT
  (S
    (VP (VB Use)
      (NP
        (NP (DT the) (NN bible))
        (PP (IN for)
          (NP (PRP yourself)))))
    (. .)))

root(ROOT-0, Use-1)
det(bible-3, the-2)
dobj(Use-1, bible-3)
prep_for(bible-3, yourself-5)

(ROOT
  (FRAG (CC or)
    (NP (DT the) (NN Koran) (. .))))

dep(Koran-3, or-1)
det(Koran-3, the-2)
root(ROOT-0, Koran-3)

(ROOT
  (FRAG (CC Or)
    (VP (VB buddhist)
      (NP (NNS texts)))
    (. .)))

dep(buddhist-2, Or-1)
root(ROOT-0, buddhist-2)
dobj(buddhist-2, texts-3)

(ROOT
  (S
    (VP (VB Stop)
      (NP (JJ eating) (NN meat))
      (SBAR (IN if)
        (S
          (NP (NN god))
          (VP (VBZ tells)
            (NP (PRP you))))))
    (. .)))

root(ROOT-0, Stop-1)
amod(meat-3, eating-2)
dobj(Stop-1, meat-3)
mark(tells-6, if-4)
nsubj(tells-6, god-5)
advcl(Stop-1, tells-6)
dobj(tells-6, you-7)

(ROOT
  (S
    (VP (VB Cover)
      (NP (PRP$ your) (NNS women)))
    (. .)))

root(ROOT-0, Cover-1)
poss(women-3, your-2)
dobj(Cover-1, women-3)

(ROOT
  (S
    (VP (VB Tithe)
      (NP
        (NP (CD 10) (NN %))
        (PP (IN of)
          (NP (PRP$ your) (NN salary))))
      (PP (TO to)
        (NP (DT the) (NN church))))
    (. .)))

root(ROOT-0, Tithe-1)
num(%-3, 10-2)
dobj(Tithe-1, %-3)
poss(salary-6, your-5)
prep_of(%-3, salary-6)
det(church-9, the-8)
prep_to(Tithe-1, church-9)

(ROOT
  (S
    (ADVP (JJ Contrary)
      (PP (TO to)
        (NP (PRP$ your) (NN view))))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP
          (NP (JJ many) (NNS gods))
          (PP (IN out)
            (NP (RB there))))
        (CC and)
        (NP
          (NP (JJ many) (NNS types))
          (PP (IN of)
            (NP (NNS followers))))))
    (. .)))

poss(view-4, your-3)
prep_contrary_to(are-7, view-4)
expl(are-7, there-6)
root(ROOT-0, are-7)
amod(gods-9, many-8)
nsubj(are-7, gods-9)
prep(gods-9, out-10)
pobj(out-10, there-11)
amod(types-14, many-13)
nsubj(are-7, types-14)
conj_and(gods-9, types-14)
prep_of(types-14, followers-16)

(ROOT
  (S
    (VP (VB go)
      (ADVP (RB ahead))
      (, ,)
      (SBAR (CC but)
        (S
          (NP (NN dont))
          (VP (VBP say)
            (S
              (NP (DT these) (NNS things))
              (VP (VB make)
                (NP (NN society))
                (ADVP (RBR better))))))))
    (. .)))

root(ROOT-0, go-1)
advmod(go-1, ahead-2)
cc(say-6, but-4)
nsubj(say-6, dont-5)
ccomp(go-1, say-6)
det(things-8, these-7)
nsubj(make-9, things-8)
ccomp(say-6, make-9)
dobj(make-9, society-10)
advmod(make-9, better-11)

(ROOT
  (SINV
    (PP
      (PP (RB because)
        (ADVP (RB eventually)))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (JJ religious) (NNS followers))
          (VP (VBP have)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN concerned)
                    (PP (IN with))))))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB know)
            (CC and)
            (VB prove)
            (NP (NNS others))))))
    (SBAR (IN that)
      (S
        (NP (PRP$ their) (NN god))
        (VP (VBZ is)
          (NP (DT the) (JJ right) (NN one)))))
    (. .)))

dep(is-11, because-1)
dep(because-1, eventually-2)
dep(have-6, what-3)
amod(followers-5, religious-4)
nsubj(have-6, followers-5)
xsubj(concerned-9, followers-5)
dep(because-1, have-6)
aux(concerned-9, to-7)
auxpass(concerned-9, be-8)
xcomp(have-6, concerned-9)
prep(concerned-9, with-10)
root(ROOT-0, is-11)
aux(know-13, to-12)
xcomp(is-11, know-13)
xcomp(is-11, prove-15)
conj_and(know-13, prove-15)
dobj(know-13, others-16)
dep(one-23, that-17)
poss(god-19, their-18)
nsubj(one-23, god-19)
cop(one-23, is-20)
det(one-23, the-21)
amod(one-23, right-22)
dep(is-11, one-23)

(ROOT
  (FRAG
    (SBAR (IN that)
      (S
        (NP (DT the) (NN bible))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN word))
            (PP (IN of)
              (NP (NN god)))))))
    (. .)))

dep(word-6, that-1)
det(bible-3, the-2)
nsubj(word-6, bible-3)
cop(word-6, is-4)
det(word-6, the-5)
root(ROOT-0, word-6)
prep_of(word-6, god-8)

(ROOT
  (NP (RB not) (DT the) (NN koran) (. .)))

neg(koran-3, not-1)
det(koran-3, the-2)
root(ROOT-0, koran-3)

(ROOT
  (S
    (VP (VB argh))
    (. .)))

root(ROOT-0, argh-1)

(ROOT
  (S
    (NP
      (NP (DT The) (NN example))
      (PP (IN of)
        (NP (DT a) (NN pastor))))
    (VP (VBZ is)
      (NP (DT an) (JJ extreme) (NN one))
      (, ,)
      (PP (IN amongst)
        (NP
          (NP (JJ many))
          (PP (IN of)
            (NP
              (NP
                (NP (DT the) (JJ same) (NN nature))
                (PRN (-LRB- -LRB-)
                  (FRAG (CC but)
                    (RB not)
                    (PP (IN of)
                      (NP (DT the) (JJ same) (NN level))))
                  (-RRB- -RRB-)))
              (PP (IN of)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (NNS people))
                    (VP (VB interpret)
                      (NP
                        (NP (PRP$ their) (NN god))
                        (VP (VBN given)
                          (NP (NNS missions))
                          (ADVP (RB differently)))))))))))))
    (. .)))

det(example-2, The-1)
nsubj(one-9, example-2)
det(pastor-5, a-4)
prep_of(example-2, pastor-5)
cop(one-9, is-6)
det(one-9, an-7)
amod(one-9, extreme-8)
root(ROOT-0, one-9)
prep_amongst(one-9, many-12)
det(nature-16, the-14)
amod(nature-16, same-15)
prep_of(many-12, nature-16)
dep(not-19, but-18)
dep(nature-16, not-19)
dep(not-19, of-20)
det(level-23, the-21)
amod(level-23, same-22)
pobj(of-20, level-23)
advmod(interpret-28, how-26)
nsubj(interpret-28, people-27)
prepc_of(nature-16, interpret-28)
poss(god-30, their-29)
dobj(interpret-28, god-30)
partmod(god-30, given-31)
dobj(given-31, missions-32)
advmod(given-31, differently-33)

(ROOT
  (S
    (ADVP (RB sure))
    (NP (DT the) (NN bible))
    (VP (MD may) (RB not)
      (VP (VB say)
        (NP (DT that))))
    (. .)))

advmod(say-6, sure-1)
det(bible-3, the-2)
nsubj(say-6, bible-3)
aux(say-6, may-4)
neg(say-6, not-5)
root(ROOT-0, say-6)
dobj(say-6, that-7)

(ROOT
  (S (CC but)
    (NP (DT the) (JJ bible) (NN doesnt))
    (VP (VBP say)
      (NP
        (NP
          (NP (DT a) (NN lot))
          (PP (IN of)
            (NP
              (NP (NNS things))
              (ADVP (RB either)))))
        (CC and)
        (NP
          (NP (NNS people))
          (VP (VBN read)
            (PP (IN into)
              (NP (PRP it)))))))
    (. .)))

cc(say-5, but-1)
det(doesnt-4, the-2)
amod(doesnt-4, bible-3)
nsubj(say-5, doesnt-4)
root(ROOT-0, say-5)
det(lot-7, a-6)
dobj(say-5, lot-7)
prep_of(lot-7, things-9)
advmod(things-9, either-10)
dobj(say-5, people-12)
conj_and(lot-7, people-12)
partmod(people-12, read-13)
prep_into(read-13, it-15)

(ROOT
  (S
    (S
      (ADVP (RB also))
      (NP (PRP it))
      (VP (VBZ happens)
        (S
          (VP (TO to)
            (VP (VB say)
              (NP
                (NP (DT a) (NN lot))
                (PP (IN of)
                  (NP (JJ other) (NN stuff)))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ makes)
                      (NP (DT no) (NN sense)))))))))))
    (CC but)
    (S
      (NP (NNS people))
      (VP (VBP believe)
        (S
          (NP (PRP it))
          (ADJP (JJ blindly)))))
    (. .)))

advmod(happens-3, also-1)
nsubj(happens-3, it-2)
xsubj(say-5, it-2)
root(ROOT-0, happens-3)
aux(say-5, to-4)
xcomp(happens-3, say-5)
det(lot-7, a-6)
dobj(say-5, lot-7)
nsubj(makes-12, lot-7)
amod(stuff-10, other-9)
prep_of(lot-7, stuff-10)
rcmod(lot-7, makes-12)
det(sense-14, no-13)
dobj(makes-12, sense-14)
nsubj(believe-17, people-16)
conj_but(happens-3, believe-17)
nsubj(blindly-19, it-18)
xcomp(believe-17, blindly-19)

(ROOT
  (SQ
    (S
      (NP (FW i))
      (VP (VBP mean)))
    (, ,)
    (SQ (VBP have)
      (NP (PRP you))
      (VP
        (ADVP (RB ever))
        (VBN seen)
        (NP (DT a) (NN soul))))
    (. ?)))

nsubj(mean-2, i-1)
dep(seen-7, mean-2)
aux(seen-7, have-4)
nsubj(seen-7, you-5)
advmod(seen-7, ever-6)
root(ROOT-0, seen-7)
det(soul-9, a-8)
dobj(seen-7, soul-9)

(ROOT
  (S (CC And)
    (NP
      (NP (DT the) (JJ main) (NN thing))
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP seem)
            (S
              (VP (TO to)
                (VP (VB care)
                  (PRT (RP about)))))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB argue)
            (SBAR (IN that)
              (S
                (NP (PRP$ their) (NN god))
                (VP (VBZ is)
                  (NP (DT the) (JJ right) (NN one))
                  (, ,)
                  (SBAR (IN in) (NN order)
                    (S
                      (VP (TO to)
                        (VP (VB justify)
                          (SBAR
                            (WHADVP (WRB why))
                            (S
                              (NP (PRP they))
                              (VP (VBP are)
                                (VP (VBG following)
                                  (NP (JJ such) (JJ absurd) (NNS laws))
                                  (PP (IN without)
                                    (S
                                      (ADVP (RB really))
                                      (VP (VBG thinking)
                                        (NP (PRP them))
                                        (PP (IN through))))))))))))))))))))
    (. .)))

cc(is-10, And-1)
det(thing-4, the-2)
amod(thing-4, main-3)
nsubj(is-10, thing-4)
xsubj(argue-12, thing-4)
nsubj(seem-6, they-5)
xsubj(care-8, they-5)
rcmod(thing-4, seem-6)
aux(care-8, to-7)
xcomp(seem-6, care-8)
prt(care-8, about-9)
root(ROOT-0, is-10)
aux(argue-12, to-11)
xcomp(is-10, argue-12)
complm(one-19, that-13)
poss(god-15, their-14)
nsubj(one-19, god-15)
cop(one-19, is-16)
det(one-19, the-17)
amod(one-19, right-18)
ccomp(argue-12, one-19)
mark(justify-24, in-21)
dep(justify-24, order-22)
aux(justify-24, to-23)
purpcl(one-19, justify-24)
advmod(following-28, why-25)
nsubj(following-28, they-26)
aux(following-28, are-27)
advcl(justify-24, following-28)
amod(laws-31, such-29)
amod(laws-31, absurd-30)
dobj(following-28, laws-31)
advmod(thinking-34, really-33)
prepc_without(following-28, thinking-34)
dobj(thinking-34, them-35)
prep(thinking-34, through-36)

(ROOT
  (FRAG
    (ADVP (RB honestly))
    (ADVP (RB ??))))

root(ROOT-0, honestly-1)
dep(honestly-1, ??-2)

(ROOT
  (SBARQ
    (WHADVP (WRB why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB blame)
        (NP (DT that) (NN pastor))))
    (. ?)))

advmod(blame-4, why-1)
aux(blame-4, do-2)
nsubj(blame-4, you-3)
root(ROOT-0, blame-4)
det(pastor-6, that-5)
dobj(blame-4, pastor-6)

(ROOT
  (FRAG
    (SBAR (IN if)
      (S
        (NP (NN religion))
        (VP (VBZ teaches)
          (S
            (NP (PRP us))
            (VP (TO to)
              (VP (VB connect)
                (PP (TO to)
                  (NP
                    (NP (DT some) (JJ being) (NN outside))
                    (PP (IN of)
                      (NP
                        (NP (PRP us))
                        (CC and)
                        (NP (NN obey))))))))))))
    (. ?)))

mark(teaches-3, if-1)
nsubj(teaches-3, religion-2)
root(ROOT-0, teaches-3)
nsubj(connect-6, us-4)
aux(connect-6, to-5)
xcomp(teaches-3, connect-6)
det(outside-10, some-8)
amod(outside-10, being-9)
prep_to(connect-6, outside-10)
prep_of(outside-10, us-12)
prep_of(outside-10, obey-14)
conj_and(us-12, obey-14)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP think)
      (SBAR
        (S
          (NP
            (NP (DT all) (NNS believers))
            (PP (IN in)
              (NP (NN god))))
          (VP (VBP are)
            (VP (VBN deluded)
              (PP (IN in)
                (NP (JJ different) (NNS degrees))))))))
    (. .)))

nsubj(think-2, i-1)
root(ROOT-0, think-2)
det(believers-4, all-3)
nsubjpass(deluded-8, believers-4)
prep_in(believers-4, god-6)
auxpass(deluded-8, are-7)
ccomp(think-2, deluded-8)
amod(degrees-11, different-10)
prep_in(deluded-8, degrees-11)

(ROOT
  (NP
    (NP (DT the) (NN killer) (NN pastor))
    (, ,)
    (NP (RB just) (DT another) (NN one))
    (. .)))

det(pastor-3, the-1)
nn(pastor-3, killer-2)
root(ROOT-0, pastor-3)
advmod(one-7, just-5)
det(one-7, another-6)
appos(pastor-3, one-7)

(ROOT
  (FRAG
    (ADVP (RB anyway))
    (. .)))

root(ROOT-0, anyway-1)

(ROOT
  (S
    (NP
      (NP (NN im))
      (ADJP (JJ tired)
        (PP (IN of)
          (S
            (VP (VBG arguing)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (ADVP (RB clearly))
                  (VP (VBZ seems)
                    (PP (TO to)
                      (NP (PRP me)))
                    (SBAR (IN that)
                      (S
                        (NP (PRP you))
                        (ADVP (RB already))
                        (VP (VBP have)
                          (NP
                            (NP (PRP$ your) (NN faith))
                            (VP (VBN based)
                              (NP
                                (NP (NN point))
                                (PP (IN of)
                                  (NP (NN view))))
                              (, ,)
                              (S
                                (VP (VBG wanting)
                                  (S
                                    (VP (TO to)
                                      (VP (VB see)
                                        (NP
                                          (NP (DT that) (NN god) (POS 's))
                                          (NNS laws))))))))))))))))))))
    (ADVP (RB indeed))
    (VP (VBP apply)
      (PP (TO to)
        (NP (DT this) (NN world)))
      (SBAR (RB just) (IN because)
        (S
          (ADVP (RB sometimes))
          (NP (PRP they))
          (VP (VBP overlap)))))
    (. .)))

nsubj(apply-30, im-1)
amod(im-1, tired-2)
prepc_of(tired-2, arguing-4)
mark(seems-8, because-5)
nsubj(seems-8, it-6)
advmod(seems-8, clearly-7)
advcl(arguing-4, seems-8)
prep_to(seems-8, me-10)
complm(have-14, that-11)
nsubj(have-14, you-12)
advmod(have-14, already-13)
ccomp(seems-8, have-14)
poss(faith-16, your-15)
dobj(have-14, faith-16)
partmod(faith-16, based-17)
dobj(based-17, point-18)
prep_of(point-18, view-20)
partmod(based-17, wanting-22)
xcomp(based-17, wanting-22)
aux(see-24, to-23)
xcomp(wanting-22, see-24)
det(god-26, that-25)
poss(laws-28, god-26)
dobj(see-24, laws-28)
advmod(apply-30, indeed-29)
root(ROOT-0, apply-30)
det(world-33, this-32)
prep_to(apply-30, world-33)
advmod(overlap-38, just-34)
dep(overlap-38, because-35)
advmod(overlap-38, sometimes-36)
nsubj(overlap-38, they-37)
ccomp(apply-30, overlap-38)

(ROOT
  (S
    (NP
      (NP (DT the) (NN fact))
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBP do)))))
    (VP (VBZ is) (RB not)
      (ADJP (JJ enough)
        (S
          (VP (TO to)
            (VP (VB continue)
              (PP (IN with)
                (NP (JJ such) (NN fairy) (NNS tales))))))))
    (. .)))

det(fact-2, the-1)
dobj(do-5, fact-2)
nsubj(enough-8, fact-2)
complm(do-5, that-3)
nsubj(do-5, they-4)
dep(fact-2, do-5)
cop(enough-8, is-6)
neg(enough-8, not-7)
root(ROOT-0, enough-8)
aux(continue-10, to-9)
xcomp(enough-8, continue-10)
amod(tales-14, such-12)
nn(tales-14, fairy-13)
prep_with(continue-10, tales-14)

(ROOT
  (S
    (S
      (NP (PRP we))
      (VP (VBP know)
        (VP (VB have)
          (NP
            (NP (NN evidence))
            (PP (IN about)
              (NP (JJ many) (NNS things)))))))
    (, ,) (IN so)
    (S
      (NP (PRP we))
      (VP (MD can)
        (VP (VB use)
          (NP (PRP$ our) (NN reasoning))
          (PP (TO to)
            (NP (NN value)))
          (SBAR (IN whether)
            (CC or)
            (RB not)
            (S
              (NP (PRP we))
              (VP (MD should)
                (VP (VB take)
                  (NP
                    (NP (DT the) (NN blue))
                    (CC or)
                    (NP (DT the) (JJ red) (NN pill))))))))))
    (. .)))

nsubj(know-2, we-1)
root(ROOT-0, know-2)
xcomp(know-2, have-3)
dobj(have-3, evidence-4)
amod(things-7, many-6)
prep_about(evidence-4, things-7)
dep(know-2, so-9)
nsubj(use-12, we-10)
aux(use-12, can-11)
ccomp(know-2, use-12)
poss(reasoning-14, our-13)
dobj(use-12, reasoning-14)
prep_to(use-12, value-16)
complm(take-22, whether-17)
ccomp(use-12, not-19)
conj_or(take-22, not-19)
nsubj(take-22, we-20)
aux(take-22, should-21)
ccomp(use-12, take-22)
det(blue-24, the-23)
dobj(take-22, blue-24)
det(pill-28, the-26)
amod(pill-28, red-27)
dobj(take-22, pill-28)
conj_or(blue-24, pill-28)

(ROOT
  (SBARQ
    (PP (IN In)
      (NP (DT this) (NN scenario)))
    (, ,)
    (WHADVP (WRB how))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (SBAR (IN that)
          (S
            (NP
              (NP (NN belief))
              (PP (IN in)
                (NP (NN god))))
            (VP (VBZ is)
              (PP (IN for)
                (NP (DT the) (JJR greater) (NN good))))))))
    (. ?)))

det(scenario-3, this-2)
prep_in(is-6, scenario-3)
advmod(is-6, how-5)
root(ROOT-0, is-6)
nsubj(is-6, it-7)
complm(is-12, that-8)
nsubj(is-12, belief-9)
prep_in(belief-9, god-11)
dep(it-7, is-12)
det(good-16, the-14)
amod(good-16, greater-15)
prep_for(is-12, good-16)

