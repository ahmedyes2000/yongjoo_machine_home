(ROOT
  (X
    (NP (NNP Question))
    (: :)
    (FRAG
      (SBAR
        (WHNP (WP What))
        (S
          (VP (VBD created)
            (NP
              (NP (DT the) (NN matter)
                (CC and)
                (NN energy))
              (ADJP (JJ necessary)
                (S
                  (VP (TO to)
                    (VP (VB create)
                      (NP (DT the) (NN universe)))))))))))
    (. .)))

root(ROOT-0, Question-1)
nsubj(created-4, What-3)
dep(Question-1, created-4)
det(matter-6, the-5)
dobj(created-4, matter-6)
dobj(created-4, energy-8)
conj_and(matter-6, energy-8)
amod(matter-6, necessary-9)
aux(create-11, to-10)
xcomp(necessary-9, create-11)
det(universe-13, the-12)
dobj(create-11, universe-13)

(ROOT
  (NP
    (NP (NNP Basic) (NNP Fact))
    (: :)
    (S (`` ``)
      (NP
        (NP (DT Every) (NN cell))
        (PP (IN in)
          (NP
            (NP (NNS plants))
            (, ,)
            (NP (NNS animals))
            (, ,)
            (CC and)
            (NP (JJ human) (NNS beings)))))
      (VP (VBZ has)
        (NP
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (VP (VBN called)
                  (NP (DT a) (`` ``) (JJ complex) (JJ metabolic) (NN motor) ('' '')))))))))
    (. .)))

nn(Fact-2, Basic-1)
root(ROOT-0, Fact-2)
det(cell-6, Every-5)
nsubj(has-15, cell-6)
prep_in(cell-6, plants-8)
prep_in(cell-6, animals-10)
conj_and(plants-8, animals-10)
amod(beings-14, human-13)
prep_in(cell-6, beings-14)
conj_and(plants-8, beings-14)
dep(Fact-2, has-15)
nsubjpass(called-18, what-16)
auxpass(called-18, is-17)
dobj(has-15, called-18)
det(motor-23, a-19)
amod(motor-23, complex-21)
amod(motor-23, metabolic-22)
dobj(called-18, motor-23)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN ability))
        (PP (IN of)
          (NP (DT the) (NN cell)
            (S
              (VP (TO to)
                (VP (VB extract)
                  (NP (NN energy))
                  (PP (IN from)
                    (NP (PRP$ its) (NN environment)))
                  (SBAR (IN in) (NN order)
                    (S
                      (VP (TO to)
                        (VP (VB supply)
                          (NP (NN energy))
                          (PP (IN for)
                            (NP
                              (NP (DT the) (NN reproduction))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NN cell))
                                  (CC and)
                                  (NP (JJ other) (NN cell) (NNS needs)))))))))))))))))
    (. .)))

nsubj(ability-4, This-1)
cop(ability-4, is-2)
det(ability-4, the-3)
root(ROOT-0, ability-4)
det(cell-7, the-6)
prep_of(ability-4, cell-7)
aux(extract-9, to-8)
infmod(cell-7, extract-9)
dobj(extract-9, energy-10)
poss(environment-13, its-12)
prep_from(extract-9, environment-13)
mark(supply-17, in-14)
dep(supply-17, order-15)
aux(supply-17, to-16)
purpcl(extract-9, supply-17)
dobj(supply-17, energy-18)
det(reproduction-21, the-20)
prep_for(supply-17, reproduction-21)
det(cell-24, the-23)
prep_of(reproduction-21, cell-24)
amod(needs-28, other-26)
nn(needs-28, cell-27)
prep_of(reproduction-21, needs-28)
conj_and(cell-24, needs-28)

(ROOT
  (S
    (PP (IN For)
      (NP (NN life)
        (S
          (VP (TO to)
            (VP (VB exist))))))
    (, ,)
    (NP (PRP you))
    (VP (MD must)
      (VP (VB have)
        (NP (DT this) (JJ metabolic) (NN motor))))
    (. .)))

prep_for(have-8, life-2)
aux(exist-4, to-3)
infmod(life-2, exist-4)
nsubj(have-8, you-6)
aux(have-8, must-7)
root(ROOT-0, have-8)
det(motor-11, this-9)
amod(motor-11, metabolic-10)
dobj(have-8, motor-11)

(ROOT
  (S (CC But)
    (NP (DT this) (JJ metabolic) (NN motor))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB be)
        (VP (VBN produced)
          (PP (IN by)
            (NP (NN life))))))
    (. .)))

cc(produced-8, But-1)
det(motor-4, this-2)
amod(motor-4, metabolic-3)
nsubjpass(produced-8, motor-4)
aux(produced-8, can-5)
advmod(produced-8, only-6)
auxpass(produced-8, be-7)
root(ROOT-0, produced-8)
agent(produced-8, life-10)

(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (NNP Dr.) (NNP Ron) (NNP Carlson) (-RRB- -RRB-))
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJ same))
        (PP (IN for)
          (NP (NNP DNA)))))
    (. .)))

nn(Carlson-5, Dr.-3)
nn(Carlson-5, Ron-4)
nsubj(same-10, Carlson-5)
nsubj(same-10, It-7)
cop(same-10, 's-8)
det(same-10, the-9)
root(ROOT-0, same-10)
prep_for(same-10, DNA-12)

(ROOT
  (FRAG (RB So) (: ...)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (SBAR (IN in)
            (S
              (NP (NNP Spontaneous) (NNP Generation))
              (VP (VBP are) (RB n't)
                (NP (PRP you))
                (S
                  (VP (VBG going)
                    (S
                      (PP (IN against)
                        (NP
                          (NP (DT the) (JJ basic) (NN rule))
                          (PP (IN of)
                            (NP (NN biology)))))
                      (-LRB- -LRB-)
                      (NP (NNP Biogenesis) (NN life))
                      (ADVP (RB only))
                      (VP (VBZ arises)
                        (PP (IN from)
                          (NP (NN life)))))))))))))
    (. .)))

root(ROOT-0, So-1)
mark(believe-5, if-3)
nsubj(believe-5, you-4)
dep(So-1, believe-5)
mark(you-11, in-6)
nn(Generation-8, Spontaneous-7)
nsubj(you-11, Generation-8)
cop(you-11, are-9)
neg(you-11, n't-10)
advcl(believe-5, you-11)
xcomp(you-11, going-12)
det(rule-16, the-14)
amod(rule-16, basic-15)
prep_against(arises-23, rule-16)
prep_of(rule-16, biology-18)
nn(life-21, Biogenesis-20)
nsubj(arises-23, life-21)
advmod(arises-23, only-22)
ccomp(going-12, arises-23)
prep_from(arises-23, life-25)

(ROOT
  (SINV
    (S
      (NP (PRP It))
      (VP (VBZ does) (RB not)
        (VP (VB come)
          (PP (IN from)
            (NP (JJ nonliving) (NN matter) (-RRB- -RRB-) (NNS Or))))))
    (VP (VBZ is))
    (NP
      (NP (NN nitrogen))
      (, ,)
      (NP
        (NP (NN ammonia))
        (, ,)
        (NP (NNS salts))
        (, ,)
        (CC and)
        (NP (NN carbon) (NN dioxide) (NN living) (NN matter))))
    (. ?)))

nsubj(come-4, It-1)
aux(come-4, does-2)
neg(come-4, not-3)
dep(is-10, come-4)
amod(Or-9, nonliving-6)
nn(Or-9, matter-7)
prep_from(come-4, Or-9)
root(ROOT-0, is-10)
nsubj(is-10, nitrogen-11)
appos(nitrogen-11, ammonia-13)
appos(nitrogen-11, salts-15)
conj_and(ammonia-13, salts-15)
nn(matter-21, carbon-18)
nn(matter-21, dioxide-19)
nn(matter-21, living-20)
appos(nitrogen-11, matter-21)
conj_and(ammonia-13, matter-21)

