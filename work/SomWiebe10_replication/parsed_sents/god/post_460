(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB say)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT no) (NN evidence)))))))
    (. ?)))

advmod(say-4, How-1)
aux(say-4, can-2)
nsubj(say-4, you-3)
root(ROOT-0, say-4)
expl(is-6, there-5)
ccomp(say-4, is-6)
det(evidence-8, no-7)
nsubj(is-6, evidence-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP believe)
            (PP (IN in)
              (NP
                (NP (DT the) (NNP Big) (NNP Bang))
                (PRN (-LRB- -LRB-)
                  (S
                    (ADVP (RB so))
                    (VP (VB do)
                      (NP (PRP I))))
                  (-RRB- -RRB-))))))))
    (. .)))

nsubj(suppose-2, I-1)
root(ROOT-0, suppose-2)
nsubj(believe-4, you-3)
ccomp(suppose-2, believe-4)
det(Bang-8, the-6)
nn(Bang-8, Big-7)
prep_in(believe-4, Bang-8)
advmod(do-11, so-10)
dep(Bang-8, do-11)
dobj(do-11, I-12)

(ROOT
  (NP
    (NP (DT The) (NN balance))
    (PP (IN of)
      (NP
        (NP (NN nature))
        (CC and)
        (NP (DT the) (NN contrasts))))
    (PP (IN between)
      (NP
        (NP (NN night)
          (CC and)
          (NN day))
        (, ,)
        (ADJP (JJ alive)
          (CC and)
          (JJ dead))))
    (. .)))

det(balance-2, The-1)
root(ROOT-0, balance-2)
prep_of(balance-2, nature-4)
det(contrasts-7, the-6)
prep_of(balance-2, contrasts-7)
conj_and(nature-4, contrasts-7)
prep_between(balance-2, night-9)
prep_between(balance-2, day-11)
conj_and(night-9, day-11)
amod(night-9, alive-13)
amod(night-9, dead-15)
conj_and(alive-13, dead-15)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB say)
          (SBAR
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (DT no) (NN evidence))
                  (PP (IN of)
                    (NP (NNP God))))))))))
    (VP (VBZ is)
      (NP (DT a) (JJ HUGE) (NN fallacy)))
    (. .)))

aux(say-2, To-1)
csubj(is-9, say-2)
expl(is-4, there-3)
ccomp(say-2, is-4)
det(evidence-6, no-5)
nsubj(is-4, evidence-6)
prep_of(evidence-6, God-8)
root(ROOT-0, is-9)
det(fallacy-12, a-10)
amod(fallacy-12, HUGE-11)
attr(is-9, fallacy-12)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB suppose)
        (SBAR
          (S
            (NP (DT the) (NNP Big) (NNP Bang))
            (VP (VBD came)
              (S
                (VP (TO to)
                  (VP (VB be)))))))))
    (. ?)))

advmod(suppose-4, How-1)
aux(suppose-4, do-2)
nsubj(suppose-4, you-3)
root(ROOT-0, suppose-4)
det(Bang-7, the-5)
nn(Bang-7, Big-6)
nsubj(came-8, Bang-7)
xsubj(be-10, Bang-7)
ccomp(suppose-4, came-8)
aux(be-10, to-9)
xcomp(came-8, be-10)

(ROOT
  (S (CC And)
    (VP (VBP do) (RB n't)
      (VP (VB say)
        (NP (`` ``) (JJ random) (NNS events) ('' ''))))
    (. .)))

cc(say-4, And-1)
aux(say-4, do-2)
neg(say-4, n't-3)
root(ROOT-0, say-4)
amod(events-7, random-6)
dobj(say-4, events-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN way))
        (SBAR
          (S
            (NP (DT the) (JJ entire) (NN Universe))
            (ADVP (RB simply))
            (VP (VBD came)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (PP (IN without)
                      (NP (DT a) (NNP Necessary) (NNP Being)))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(way-4, no-3)
nsubj(is-2, way-4)
dobj(came-9, way-4)
det(Universe-7, the-5)
amod(Universe-7, entire-6)
nsubj(came-9, Universe-7)
xsubj(be-11, Universe-7)
advmod(came-9, simply-8)
rcmod(way-4, came-9)
aux(be-11, to-10)
xcomp(came-9, be-11)
det(Being-15, a-13)
nn(Being-15, Necessary-14)
prep_without(be-11, Being-15)

(ROOT
  (FRAG (CC And)
    (WP what) (IN about)
    (NP (NNS miracles))
    (. ?)))

dep(about-3, And-1)
dep(about-3, what-2)
root(ROOT-0, about-3)
dep(about-3, miracles-4)

(ROOT
  (SQ (VBP Are)
    (NP (PRP they))
    (PP
      (ADVP (RB just))
      (IN by)
      (NP (NN chance)))
    (. ?)))

root(ROOT-0, Are-1)
nsubj(Are-1, they-2)
advmod(Are-1, just-3)
prep_by(Are-1, chance-5)

(ROOT
  (S
    (S
      (NP (NNP God))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN seen)
            (PP (IN in)
              (NP
                (QP (RB so) (JJ much))))
            (PP (IN around)
              (NP (DT the) (NN world)))))))
    (, ,) (IN so)
    (S
      (ADVP (RB either))
      (NP (PRP you))
      (VP (VBP live)
        (PP (IN under)
          (NP (DT a) (NN rock)))))
    (CC or)
    (S
      (NP (PRP you))
      (ADVP (RB just))
      (VP (VBP do) (RB n't)
        (VP (VB notice)
          (NP (NN anything))
          (PP (IN about)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (NNP God))
                (VP (VBZ is)
                  (ADVP (RB constantly))
                  (ADVP (RB here))
                  (PP (IN with)
                    (NP (PRP us))))))))))
    (. .)))

nsubjpass(seen-4, God-1)
aux(seen-4, can-2)
auxpass(seen-4, be-3)
root(ROOT-0, seen-4)
quantmod(much-7, so-6)
prep_in(seen-4, much-7)
det(world-10, the-9)
prep_around(seen-4, world-10)
dep(seen-4, so-12)
advmod(live-15, either-13)
nsubj(live-15, you-14)
dep(seen-4, live-15)
det(rock-18, a-17)
prep_under(live-15, rock-18)
nsubj(notice-24, you-20)
advmod(notice-24, just-21)
aux(notice-24, do-22)
neg(notice-24, n't-23)
conj_or(seen-4, notice-24)
dobj(notice-24, anything-25)
advmod(is-29, how-27)
nsubj(is-29, God-28)
prepc_about(notice-24, is-29)
advmod(is-29, constantly-30)
advmod(is-29, here-31)
prep_with(is-29, us-33)

(ROOT
  (S
    (NP (JJ Next) (NN time))
    (S
      (NP (PRP you))
      (VP
        (VP (VB go)
          (ADVP (RB outside)))
        (, ,)
        (VP (VB look)
          (PP (IN at)
            (NP
              (NP (DT the) (NN intricacy))
              (PP (IN of)
                (NP (DT the) (NNS trees)))))
          (: :)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT the) (NNS branches))
              (VP (VBP intertwine)))))))
    (CC and)
    (S
      (NP (DT the) (NNS colors))
      (VP (VBP are)
        (ADJP (RB so) (JJ vibrant))))
    (. .)))

amod(time-2, Next-1)
dep(go-4, time-2)
nsubj(go-4, you-3)
root(ROOT-0, go-4)
advmod(go-4, outside-5)
dep(go-4, look-7)
det(intricacy-10, the-9)
prep_at(look-7, intricacy-10)
det(trees-13, the-12)
prep_of(intricacy-10, trees-13)
advmod(intertwine-18, how-15)
det(branches-17, the-16)
nsubj(intertwine-18, branches-17)
ccomp(look-7, intertwine-18)
parataxis(look-7, intertwine-18)
det(colors-21, the-20)
nsubj(vibrant-24, colors-21)
cop(vibrant-24, are-22)
advmod(vibrant-24, so-23)
conj_and(go-4, vibrant-24)

(ROOT
  (S
    (VP (VB Look)
      (PP (IN at)
        (NP
          (NP
            (NP (DT the) (NN diversity))
            (PP (IN of)
              (NP (NN life))))
          (CC and)
          (NP
            (NP (DT the) (NN delicacy))
            (PP (IN of)
              (NP (PRP it)))))))
    (. .)))

root(ROOT-0, Look-1)
det(diversity-4, the-3)
prep_at(Look-1, diversity-4)
prep_of(diversity-4, life-6)
det(delicacy-9, the-8)
prep_at(Look-1, delicacy-9)
conj_and(diversity-4, delicacy-9)
prep_of(delicacy-9, it-11)

