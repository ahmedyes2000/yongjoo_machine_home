(ROOT
  (S
    (LST (LS 1))
    (NP (DT This) (NN arguement))
    (VP (VBZ tries)
      (S
        (VP (TO to)
          (VP (VB disprove)
            (NP (NNP God))
            (PP (IN within)
              (NP
                (NP (DT the) (NN framework))
                (PP (IN of)
                  (NP (DT the) (`` ``) (JJ omni) ('' '') (NN God)))))))))
    (. .)))

dep(tries-4, 1-1)
det(arguement-3, This-2)
nsubj(tries-4, arguement-3)
xsubj(disprove-6, arguement-3)
root(ROOT-0, tries-4)
aux(disprove-6, to-5)
xcomp(tries-4, disprove-6)
dobj(disprove-6, God-7)
det(framework-10, the-9)
prep_within(disprove-6, framework-10)
det(God-16, the-12)
amod(God-16, omni-14)
prep_of(framework-10, God-16)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ fails)
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ fails)
            (S
              (VP (TO to)
                (VP (VB adopt)
                  (NP (DT the) (JJ utmost) (NN argument))
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP (VBP are) (RB not)
                        (ADJP (JJ all-understanding))))))))))))
    (. .)))

cc(fails-3, But-1)
nsubj(fails-3, it-2)
root(ROOT-0, fails-3)
mark(fails-6, because-4)
nsubj(fails-6, it-5)
xsubj(adopt-8, it-5)
advcl(fails-3, fails-6)
aux(adopt-8, to-7)
xcomp(fails-6, adopt-8)
det(argument-11, the-9)
amod(argument-11, utmost-10)
dobj(adopt-8, argument-11)
complm(all-understanding-16, that-12)
nsubj(all-understanding-16, we-13)
cop(all-understanding-16, are-14)
neg(all-understanding-16, not-15)
ccomp(adopt-8, all-understanding-16)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP
          (SBAR
            (WHPP (IN of)
              (WHNP (WDT that)))
            (S
              (NP (PRP$ our) (NN logic))
              (VP
                (VP (VBZ is)
                  (ADJP (RB inherently) (JJR lesser)))
                (, ,)
                (CC and)
                (VP (MD can)
                  (VP (VB fail)
                    (NP (CD .2))
                    (PP (IN On)
                      (S
                        (NP
                          (NP (DT the) (JJ whole) (NN issue))
                          (PP (IN of)
                            (NP
                              (NP (NNP God) (POS 's))
                              (NN omniscience))))
                        (VP (VBG disproving)
                          (NP (PRP$ his) (NNS omnipotence-This))
                          (ADVP (RB completely)))))))))))
        (VP (VBZ depends)
          (PP (IN on)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBP view)
                  (PP (IN of)
                    (NP (NNP God))))))))))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG talking) (IN about)))
    (. .)))

mark(depends-26, Because-1)
rel(lesser-8, that-3)
poss(logic-5, our-4)
nsubj(lesser-8, logic-5)
nsubj(fail-12, logic-5)
cop(lesser-8, is-6)
advmod(lesser-8, inherently-7)
nsubj(depends-26, lesser-8)
aux(fail-12, can-11)
conj_and(lesser-8, fail-12)
nsubj(depends-26, fail-12)
dobj(fail-12, .2-13)
det(issue-17, the-15)
amod(issue-17, whole-16)
nsubj(disproving-22, issue-17)
poss(omniscience-21, God-19)
prep_of(issue-17, omniscience-21)
prepc_on(fail-12, disproving-22)
poss(omnipotence-This-24, his-23)
dobj(disproving-22, omnipotence-This-24)
advmod(disproving-22, completely-25)
advcl(talking-34, depends-26)
nsubj(view-29, which-28)
prepc_on(depends-26, view-29)
prep_of(view-29, God-31)
nsubj(talking-34, you-32)
aux(talking-34, are-33)
root(ROOT-0, talking-34)
dep(talking-34, about-35)

(ROOT
  (S
    (NP (DT Every) (NN person)
      (CC and)
      (NN religion) (NN define))
    (VP (VBP omniscience)
      (ADVP (RB differently)))
    (. .)))

det(define-5, Every-1)
nn(define-5, person-2)
conj_and(person-2, religion-4)
nn(define-5, religion-4)
nsubj(omniscience-6, define-5)
root(ROOT-0, omniscience-6)
advmod(omniscience-6, differently-7)

(ROOT
  (S (CC And)
    (ADVP (RB again))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP you))
        (VP (VBP argue)
          (PP (IN under)
            (NP (DT this) (NN framework))))))
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB acknowledge)
            (NP (DT the) (NN paradigm))
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (MD ca) (RB n't)
                  (VP (VB understand)
                    (NP (NN everything))))))))))
    (. .)))

cc(have-11, And-1)
advmod(have-11, again-2)
advmod(argue-6, when-4)
nsubj(argue-6, you-5)
advcl(have-11, argue-6)
det(framework-9, this-8)
prep_under(argue-6, framework-9)
nsubj(have-11, you-10)
xsubj(acknowledge-13, you-10)
root(ROOT-0, have-11)
aux(acknowledge-13, to-12)
xcomp(have-11, acknowledge-13)
det(paradigm-15, the-14)
dobj(acknowledge-13, paradigm-15)
complm(understand-20, that-16)
nsubj(understand-20, we-17)
aux(understand-20, ca-18)
neg(understand-20, n't-19)
ccomp(acknowledge-13, understand-20)
dobj(understand-20, everything-21)

