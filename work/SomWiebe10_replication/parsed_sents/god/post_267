(ROOT
  (S
    (NP (PRP We))
    (VP (MD ca) (RB n't)
      (ADVP (RB fully))
      (VP (VB place)
        (NP (PRP$ our) (NN faith))
        (PP (IN in)
          (NP (NN science)))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADVP (RB continually))
              (VP (VBG changing)))))))
    (. .)))

nsubj(place-5, We-1)
aux(place-5, ca-2)
neg(place-5, n't-3)
advmod(place-5, fully-4)
root(ROOT-0, place-5)
poss(faith-7, our-6)
dobj(place-5, faith-7)
prep_in(place-5, science-9)
mark(changing-15, because-11)
nsubj(changing-15, it-12)
aux(changing-15, is-13)
advmod(changing-15, continually-14)
advcl(place-5, changing-15)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN theory) (POS 's))
        (CC and)
        (NP (NN truth) (POS 's)))
      (PP (IN of)
        (ADVP
          (NP (CD 100) (NNS years))
          (RB ago))))
    (VP (VBP are) (RB not)
      (ADVP (RB always))
      (VP (VBN considered)
        (NP (NN truth))
        (PP
          (NP (CD 100) (NNS years))
          (IN into)
          (NP (DT the) (NN future)))))
    (. .)))

det(theory-2, The-1)
nsubjpass(considered-14, theory-2)
possessive(theory-2, 's-3)
conj_and(theory-2, truth-5)
nsubjpass(considered-14, truth-5)
prep(theory-2, of-7)
num(years-9, 100-8)
npadvmod(ago-10, years-9)
pcomp(of-7, ago-10)
auxpass(considered-14, are-11)
neg(considered-14, not-12)
advmod(considered-14, always-13)
root(ROOT-0, considered-14)
dobj(considered-14, truth-15)
num(years-17, 100-16)
npadvmod(considered-14, years-17)
det(future-20, the-19)
prep_into(considered-14, future-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ questionable)
              (S
                (VP (TO to)
                  (VP
                    (ADVP (RB fully))
                    (VB rely)
                    (PP (IN on)
                      (NP
                        (NP (DT the) (NNS thoughts)
                          (CC and)
                          (NNS beliefs))
                        (PP (IN of)
                          (NP (NN man)))))
                    (SBAR (IN for)
                      (S
                        (NP (PRP we))
                        (VP
                          (VP (VBP have) (RB not)
                            (VP (VBN obtained)
                              (NP (JJ full) (NN knowledge))))
                          (CC and)
                          (VP (MD will)
                            (ADVP (RB never))
                            (VP (VB obtain)
                              (NP
                                (NP (JJ full) (NN knowledge))
                                (PP (IN of)
                                  (NP (DT all) (NNS things)))))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(questionable-5, it-3)
cop(questionable-5, is-4)
ccomp(think-2, questionable-5)
aux(rely-8, to-6)
advmod(rely-8, fully-7)
xcomp(questionable-5, rely-8)
det(thoughts-11, the-10)
prep_on(rely-8, thoughts-11)
prep_on(rely-8, beliefs-13)
conj_and(thoughts-11, beliefs-13)
prep_of(thoughts-11, man-15)
mark(obtained-20, for-16)
nsubj(obtained-20, we-17)
nsubj(obtain-26, we-17)
aux(obtained-20, have-18)
neg(obtained-20, not-19)
advcl(rely-8, obtained-20)
amod(knowledge-22, full-21)
dobj(obtained-20, knowledge-22)
aux(obtain-26, will-24)
neg(obtain-26, never-25)
advcl(rely-8, obtain-26)
conj_and(obtained-20, obtain-26)
amod(knowledge-28, full-27)
dobj(obtain-26, knowledge-28)
det(things-31, all-30)
prep_of(knowledge-28, things-31)

(ROOT
  (S
    (NP (EX There))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB be)
        (NP
          (NP (JJ unexplained) (NNS matters))
          (PP (IN in)
            (NP (PRP$ our) (NN existence))))))
    (. .)))

expl(matters-6, There-1)
aux(matters-6, will-2)
advmod(matters-6, always-3)
cop(matters-6, be-4)
amod(matters-6, unexplained-5)
root(ROOT-0, matters-6)
poss(existence-9, our-8)
prep_in(matters-6, existence-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB almost))
      (SBAR (IN like)
        (S
          (NP (PRP we))
          (VP
            (VP (VBP are)
              (VP (VBN lost)
                (PP (IN on)
                  (NP (DT a) (JJ weird) (NN country) (NN road)))))
            (, ,)
            (CC but)
            (VP (VBP do) (RB not)
              (VP (VB want)
                (S
                  (VP (TO to)
                    (VP (VB stop)
                      (CC and)
                      (VB ask)
                      (PP (IN for)
                        (NP (NNS directions)))
                      (SBAR (IN because)
                        (S
                          (NP (PRP we))
                          (VP (VBP want)
                            (S
                              (VP (TO to)
                                (VP (VB do)
                                  (NP (PRP it))
                                  (NP (PRP ourselves)))))))))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod('s-2, almost-3)
mark(lost-7, like-4)
nsubjpass(lost-7, we-5)
nsubj(want-17, we-5)
xsubj(stop-19, we-5)
auxpass(lost-7, are-6)
advcl('s-2, lost-7)
det(road-12, a-9)
amod(road-12, weird-10)
nn(road-12, country-11)
prep_on(lost-7, road-12)
aux(want-17, do-15)
neg(want-17, not-16)
advcl('s-2, want-17)
conj_but(lost-7, want-17)
aux(stop-19, to-18)
xcomp(want-17, stop-19)
xcomp(want-17, ask-21)
conj_and(stop-19, ask-21)
prep_for(stop-19, directions-23)
mark(want-26, because-24)
nsubj(want-26, we-25)
xsubj(do-28, we-25)
advcl(stop-19, want-26)
aux(do-28, to-27)
xcomp(want-26, do-28)
iobj(do-28, it-29)
dobj(do-28, ourselves-30)

(ROOT
  (S
    (S
      (SBAR (IN Although)
        (S
          (S
            (NP (PRP we))
            (VP (MD may)
              (ADVP (RB never))
              (VP (VB find)
                (NP (PRP it)))))
          (CC and)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (NP (DT a) (JJR more) (JJ pleasant) (NN experience))
                (SBAR (IN if)
                  (S
                    (NP (PRP we))
                    (VP (VBD stopped)
                      (CC and)
                      (VBD asked)
                      (PP (IN for)
                        (NP (NNS directions)))))))))))
      (, ,)
      (NP (PRP we))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (PRP it))
              (PP (IN with)
                (NP (PRP$ our) (JJ own) (NNS eyes))))))))
    (, ,) (IN so)
    (S
      (NP (PRP we))
      (ADVP (RB never))
      (VP (VBP stop)
        (S
          (VP (VBG thinking)
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD might)
                  (VP (VB be)
                    (VP (VBG heading)
                      (PP (IN in)
                        (NP (DT a)
                          (ADJP (RB totally) (JJ wrong))
                          (NN direction))))))))))))
    (. .)))

mark(find-5, Although-1)
nsubj(find-5, we-2)
aux(find-5, may-3)
neg(find-5, never-4)
advcl(want-24, find-5)
dobj(find-5, it-6)
nsubj(experience-14, it-8)
aux(experience-14, would-9)
cop(experience-14, be-10)
det(experience-14, a-11)
amod(experience-14, more-12)
amod(experience-14, pleasant-13)
conj_and(find-5, experience-14)
advcl(want-24, experience-14)
mark(stopped-17, if-15)
nsubj(stopped-17, we-16)
nsubj(asked-19, we-16)
advcl(experience-14, stopped-17)
advcl(experience-14, asked-19)
conj_and(stopped-17, asked-19)
prep_for(stopped-17, directions-21)
nsubj(want-24, we-23)
xsubj(see-26, we-23)
root(ROOT-0, want-24)
aux(see-26, to-25)
xcomp(want-24, see-26)
dobj(see-26, it-27)
poss(eyes-31, our-29)
amod(eyes-31, own-30)
prep_with(see-26, eyes-31)
dep(want-24, so-33)
nsubj(stop-36, we-34)
neg(stop-36, never-35)
ccomp(want-24, stop-36)
xcomp(stop-36, thinking-37)
nsubj(heading-41, we-38)
aux(heading-41, might-39)
aux(heading-41, be-40)
ccomp(thinking-37, heading-41)
det(direction-46, a-43)
advmod(wrong-45, totally-44)
amod(direction-46, wrong-45)
prep_in(heading-41, direction-46)

