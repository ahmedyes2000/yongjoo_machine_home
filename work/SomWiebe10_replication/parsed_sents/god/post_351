(ROOT
  (S
    (FRAG
      (ADVP (RB Bibledefendy)))
    ('' '')
    (NP (PRP It))
    (VP (VBZ does) (RB n't)
      (VP (VB make)
        (NP (NN sense))
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that) (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP look)
                    (PP (IN at)
                      (NP (DT a) (NN car)))
                    (, ,)
                    (SBAR (IN that)
                      (S
                        (ADVP (RB somehow))
                        (NP (NN everything))
                        (VP
                          (VP (VBD crashed)
                            (ADVP (RB together)))
                          (CC and)
                          (VP (VBD made)
                            (NP
                              (NP (DT a) (NN car))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBZ RUNS)))))))))))))))))
    (. .)))

dep(make-6, Bibledefendy-1)
nsubj(make-6, It-3)
aux(make-6, does-4)
neg(make-6, n't-5)
root(ROOT-0, make-6)
dobj(make-6, sense-7)
aux(say-9, to-8)
xcomp(make-6, say-9)
complm(look-13, that-10)
dep(look-13, if-11)
nsubj(look-13, you-12)
ccomp(say-9, look-13)
det(car-16, a-15)
prep_at(look-13, car-16)
complm(crashed-21, that-18)
advmod(crashed-21, somehow-19)
nsubj(crashed-21, everything-20)
nsubj(made-24, everything-20)
ccomp(look-13, crashed-21)
advmod(crashed-21, together-22)
ccomp(look-13, made-24)
conj_and(crashed-21, made-24)
det(car-26, a-25)
dobj(made-24, car-26)
nsubj(RUNS-28, car-26)
rcmod(car-26, RUNS-28)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ ironic))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP say)
            (NP (DT this))))))
    (. .)))

nsubj(ironic-4, It-2)
cop(ironic-4, is-3)
root(ROOT-0, ironic-4)
complm(say-7, that-5)
nsubj(say-7, you-6)
ccomp(ironic-4, say-7)
dobj(say-7, this-8)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (VP (VBG saying)
        (NP (DT the) (JJ same) (NN thing))))
    (. .)))

nsubj(saying-3, We-1)
aux(saying-3, are-2)
root(ROOT-0, saying-3)
det(thing-6, the-4)
amod(thing-6, same-5)
dobj(saying-3, thing-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB n't)
      (VP (VB make)
        (NP (NN sense))
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that) (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP look)
                    (PP (IN at)
                      (NP (DT a) (NN creator)))
                    (, ,)
                    (SBAR (IN that)
                      (S
                        (ADVP (RB somehow))
                        (NP (NN everything))
                        (VP
                          (VP (VBD crashed)
                            (ADVP (RB together)))
                          (CC and)
                          (VP (VBD made)
                            (NP
                              (NP (DT a) (NN creator))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBZ CREATES)))))))))))))))))
    (. .)))

nsubj(make-4, It-1)
aux(make-4, does-2)
neg(make-4, n't-3)
root(ROOT-0, make-4)
dobj(make-4, sense-5)
aux(say-7, to-6)
xcomp(make-4, say-7)
complm(look-11, that-8)
dep(look-11, if-9)
nsubj(look-11, you-10)
ccomp(say-7, look-11)
det(creator-14, a-13)
prep_at(look-11, creator-14)
complm(crashed-19, that-16)
advmod(crashed-19, somehow-17)
nsubj(crashed-19, everything-18)
nsubj(made-22, everything-18)
ccomp(look-11, crashed-19)
advmod(crashed-19, together-20)
ccomp(look-11, made-22)
conj_and(crashed-19, made-22)
det(creator-24, a-23)
dobj(made-22, creator-24)
nsubj(CREATES-26, creator-24)
rcmod(creator-24, CREATES-26)

