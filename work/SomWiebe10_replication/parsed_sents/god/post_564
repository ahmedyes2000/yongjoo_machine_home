(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (MD will)
      (ADVP (RB ever))
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (`` ``) (VB prove) ('' '')))))
        (SBAR (IN that)
          (S
            (NP (NNP God))
            (VP (CC either)
              (VP (VBZ exists))
              (CC or)
              (VP (VBZ does) (RB n't)
                (VP (VB exist))))))))
    (. .)))

det(one-2, No-1)
nsubj(able-6, one-2)
aux(able-6, will-3)
advmod(able-6, ever-4)
cop(able-6, be-5)
root(ROOT-0, able-6)
aux(prove-9, to-7)
xcomp(able-6, prove-9)
complm(exists-14, that-11)
nsubj(exists-14, God-12)
nsubj(exist-18, God-12)
preconj(exists-14, either-13)
ccomp(able-6, exists-14)
aux(exist-18, does-16)
neg(exist-18, n't-17)
ccomp(able-6, exist-18)
conj_or(exists-14, exist-18)

(ROOT
  (S
    (S
      (NP (NNP Religion))
      (VP (VBZ is)
        (VP (VBN based)
          (PP (IN on)
            (NP (NNS FAITH)
              (CC &)
              (NNS feelings))))))
    (, ,)
    (CC and)
    (S
      (NP (NN science))
      (VP (VBZ is)
        (VP (VBN based)
          (PP (IN on)
            (NP (NNP FACTS)
              (CC &)
              (NNP reasoning))))))
    (. .)))

nsubjpass(based-3, Religion-1)
auxpass(based-3, is-2)
root(ROOT-0, based-3)
prep_on(based-3, FAITH-5)
prep_on(based-3, feelings-7)
conj_and(FAITH-5, feelings-7)
nsubjpass(based-12, science-10)
auxpass(based-12, is-11)
conj_and(based-3, based-12)
prep_on(based-12, FACTS-14)
prep_on(based-12, reasoning-16)
conj_and(FACTS-14, reasoning-16)

(ROOT
  (S
    (ADVP (RB Nary))
    (NP (DT the) (CD two))
    (VP (MD shall)
      (VP (VB meet)
        (NP (NNP IMHO))))
    (. .)))

advmod(meet-5, Nary-1)
det(two-3, the-2)
nsubj(meet-5, two-3)
aux(meet-5, shall-4)
root(ROOT-0, meet-5)
dobj(meet-5, IMHO-6)

