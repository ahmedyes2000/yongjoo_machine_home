(ROOT
  (S
    (ADVP (RB First) (RB off))
    (, ,)
    (S
      (S
        (NP
          (NP (DT the) (NNS mightiness))
          (PP (IN of)
            (NP (NNP God))))
        (VP (VBZ does) (RB not)
          (ADVP (IN at) (DT all))
          (VP (VB determine)
            (NP (PRP$ his) (NN existence)))))
      (: ;) (RB simply)
      (S
        (ADVP (DT no) (NN matter)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (NNP God))
              (VP
                (VP (VBZ is))
                (CC or)
                (VP (VBZ does))))))
        (, ,)
        (NP (PRP he))
        (VP (CC either)
          (VP (VBZ exists))
          (CC or)
          (VP (VBZ does)))))
    (RB not) (, ,)
    (CC and)
    (S
      (S
        (VP (VBG attempting)
          (S
            (VP (TO to)
              (VP (VB disprove)
                (NP
                  (NP (DT the) (NN bible) (POS 's))
                  (NN God))
                (PP (IN by)
                  (S
                    (VP (VBG showing)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP it))
                          (ADVP (RB inherently))
                          (VP (VBZ is)
                            (PRN (-LRB- -LRB-)
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (VP (VBZ does) (RB not)
                                    (VP (VB disprove)))))
                              (-RRB- -RRB-))))))))
                (, ,))))))
      (VP (VBZ does) (RB n't)
        (VP (VB disprove)
          (NP
            (NP (DT all) (NNS definitions))
            (PP (IN of)
              (NP (NNP God)))))))
    (. .)))

advmod(off-2, First-1)
advmod(determine-12, off-2)
det(mightiness-5, the-4)
nsubj(determine-12, mightiness-5)
prep_of(mightiness-5, God-7)
aux(determine-12, does-8)
neg(determine-12, not-9)
advmod(determine-12, at-10)
pobj(at-10, all-11)
root(ROOT-0, determine-12)
poss(existence-14, his-13)
dobj(determine-12, existence-14)
advmod(determine-12, simply-16)
dep(matter-18, no-17)
advmod(exists-27, matter-18)
dobj(is-21, what-19)
nsubj(is-21, God-20)
nsubj(does-23, God-20)
dep(matter-18, is-21)
dep(matter-18, does-23)
conj_or(is-21, does-23)
nsubj(exists-27, he-25)
nsubj(does-29, he-25)
preconj(exists-27, either-26)
dep(determine-12, exists-27)
dep(determine-12, does-29)
conj_or(exists-27, does-29)
neg(determine-12, not-30)
csubj(disprove-55, attempting-33)
aux(disprove-35, to-34)
xcomp(attempting-33, disprove-35)
det(bible-37, the-36)
poss(God-39, bible-37)
dobj(disprove-35, God-39)
prepc_by(disprove-35, showing-41)
dobj(is-45, what-42)
nsubj(is-45, it-43)
advmod(is-45, inherently-44)
ccomp(showing-41, is-45)
nsubj(disprove-50, which-47)
aux(disprove-50, does-48)
neg(disprove-50, not-49)
parataxis(is-45, disprove-50)
aux(disprove-55, does-53)
neg(disprove-55, n't-54)
conj_and(determine-12, disprove-55)
det(definitions-57, all-56)
dobj(disprove-55, definitions-57)
prep_of(definitions-57, God-59)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBG being)
        (VP (VBD said))))
    (, ,)
    (NP (PRP we))
    (VP (MD must)
      (VP (VB realize)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (JJ utmost) (NN strategy))
              (PP (IN of)
                (NP (DT this) (NN argument))))
            (VP (VBZ is)
              (ADJP (JJ pathos)))))))
    (. .)))

nsubjpass(said-3, This-1)
auxpass(said-3, being-2)
partmod(realize-7, said-3)
nsubj(realize-7, we-5)
aux(realize-7, must-6)
root(ROOT-0, realize-7)
complm(pathos-16, that-8)
det(strategy-11, the-9)
amod(strategy-11, utmost-10)
nsubj(pathos-16, strategy-11)
det(argument-14, this-13)
prep_of(strategy-11, argument-14)
cop(pathos-16, is-15)
ccomp(realize-7, pathos-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ tries)
      (S
        (VP (TO to)
          (VP (VB turn)
            (NP
              (NP (PRP$ your) (NNS emotions))
              (PP (IN of)
                (S
                  (VP (VBG wanting)
                    (S
                      (NP (NNP God))
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (RB all) (JJ powerful))
                          (PP (IN into)
                            (NP
                              (NP (DT a) (NN conclusion))
                              (PP (IN for)
                                (NP (NN atheism))))))))))))))))
    (. .)))

nsubj(tries-2, It-1)
xsubj(turn-4, It-1)
root(ROOT-0, tries-2)
aux(turn-4, to-3)
xcomp(tries-2, turn-4)
poss(emotions-6, your-5)
dobj(turn-4, emotions-6)
prepc_of(emotions-6, wanting-8)
nsubj(powerful-13, God-9)
aux(powerful-13, to-10)
cop(powerful-13, be-11)
advmod(powerful-13, all-12)
xcomp(wanting-8, powerful-13)
det(conclusion-16, a-15)
prep_into(powerful-13, conclusion-16)
prep_for(conclusion-16, atheism-18)

(ROOT
  (S
    (NP (DT This) (NN argument))
    (ADVP (RB completely))
    (VP (VBZ skips)
      (NP (NN logic)))
    (. .)))

det(argument-2, This-1)
nsubj(skips-4, argument-2)
advmod(skips-4, completely-3)
root(ROOT-0, skips-4)
dobj(skips-4, logic-5)

(ROOT
  (S
    (S
      (ADVP (RB Logically))
      (NP (PRP we))
      (VP (MD can)
        (VP (VB see)
          (SBAR (IN that) (IN if)
            (S
              (NP (NNP God))
              (VP (VBZ exists)))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP (PRP he))
        (VP (MD can)
          (VP
            (PP (IN in)
              (NP
                (NP (DT the) (NN framework))
                (PP (IN of)
                  (NP (DT the) (NN bible)))))
            (PP (IN despite)
              (NP (DT these) (NNS observations))))))
      (, ,) (RB then)
      (S
        (NP (NN atheism))
        (VP (VBZ is) (RB not)
          (NP (DT the) (JJS best) (NN answer)))))
    (. .)))

advmod(see-4, Logically-1)
nsubj(see-4, we-2)
aux(see-4, can-3)
root(ROOT-0, see-4)
complm(exists-8, that-5)
dep(exists-8, if-6)
nsubj(exists-8, God-7)
ccomp(see-4, exists-8)
nsubj(in-13, he-11)
aux(in-13, can-12)
conj_and(see-4, in-13)
det(framework-15, the-14)
pobj(in-13, framework-15)
det(bible-18, the-17)
prep_of(framework-15, bible-18)
det(observations-21, these-20)
prep_despite(in-13, observations-21)
advmod(in-13, then-23)
nsubj(answer-29, atheism-24)
cop(answer-29, is-25)
neg(answer-29, not-26)
det(answer-29, the-27)
amod(answer-29, best-28)
dep(in-13, answer-29)

(ROOT
  (S
    (NP
      (NP (DT The) (NN argument))
      (VP (VBN presented)
        (ADVP (RB here))))
    (VP (VBZ assumes)
      (NP
        (NP (NN omnipotence))
        (CC and)
        (NP (DT the) (JJ bible) (, ,) (JJ therefore) (NN atheism))))
    (. .)))

det(argument-2, The-1)
nsubj(assumes-5, argument-2)
partmod(argument-2, presented-3)
advmod(presented-3, here-4)
root(ROOT-0, assumes-5)
dobj(assumes-5, omnipotence-6)
det(atheism-12, the-8)
amod(atheism-12, bible-9)
amod(atheism-12, therefore-11)
dobj(assumes-5, atheism-12)
conj_and(omnipotence-6, atheism-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ fails)
      (S
        (VP (TO to)
          (VP (VB provide)
            (NP (NNP ANY) (JJ logical) (NN warrant))))))
    (. .)))

nsubj(fails-2, It-1)
xsubj(provide-4, It-1)
root(ROOT-0, fails-2)
aux(provide-4, to-3)
xcomp(fails-2, provide-4)
nn(warrant-7, ANY-5)
amod(warrant-7, logical-6)
dobj(provide-4, warrant-7)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB completely))
    (VP (VBZ skips)
      (NP
        (NP (DT every) (JJ other) (NN argument))
        (, ,)
        (CC and)
        (NP (DT the) (JJ simple) (NN fact)))
      (SBAR (IN that)
        (S
          (NP (DT the) (NNS arguments))
          (VP (VBP are) (RB not)
            (ADJP (RB mutually) (JJ exclusive))))))
    (. .)))

nsubj(skips-3, It-1)
advmod(skips-3, completely-2)
root(ROOT-0, skips-3)
det(argument-6, every-4)
amod(argument-6, other-5)
dobj(skips-3, argument-6)
det(fact-11, the-9)
amod(fact-11, simple-10)
dobj(skips-3, fact-11)
conj_and(argument-6, fact-11)
complm(exclusive-18, that-12)
det(arguments-14, the-13)
nsubj(exclusive-18, arguments-14)
cop(exclusive-18, are-15)
neg(exclusive-18, not-16)
advmod(exclusive-18, mutually-17)
ccomp(skips-3, exclusive-18)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB therefore))
    (VP (VBZ fails))
    (. .)))

nsubj(fails-3, It-1)
advmod(fails-3, therefore-2)
root(ROOT-0, fails-3)

