(ROOT
  (S
    (S
      (VP (VBG Saying)
        (SBAR (IN that)
          (S
            (NP (NN god))
            (VP (VBZ does) (RB n't)
              (VP (VB exist)
                (SBAR (IN because)
                  (S
                    (NP (PRP he))
                    (VP (VBZ does) (RB not)
                      (VP
                        (VP (VB step)
                          (PRT (RP in)))
                        (CC and)
                        (VP (VB counteract)
                          (NP (NNS problems))
                          (SBAR (IN that)
                            (S
                              (NP (NNS humans))
                              (VP (VBP have)
                                (VP (VBN brought)
                                  (PP (IN on)
                                    (NP (PRP themselves))))))))))))))))))
    (VP (VBZ is)
      (NP (DT an)
        (ADJP (JJ unreasonable))
        (NN statement)))
    (. .)))

csubj(statement-25, Saying-1)
complm(exist-6, that-2)
nsubj(exist-6, god-3)
aux(exist-6, does-4)
neg(exist-6, n't-5)
ccomp(Saying-1, exist-6)
mark(step-11, because-7)
nsubj(step-11, he-8)
nsubj(counteract-14, he-8)
aux(step-11, does-9)
neg(step-11, not-10)
advcl(exist-6, step-11)
prt(step-11, in-12)
advcl(exist-6, counteract-14)
conj_and(step-11, counteract-14)
dobj(counteract-14, problems-15)
complm(brought-19, that-16)
nsubj(brought-19, humans-17)
aux(brought-19, have-18)
ccomp(counteract-14, brought-19)
prep_on(brought-19, themselves-21)
cop(statement-25, is-22)
det(statement-25, an-23)
amod(statement-25, unreasonable-24)
root(ROOT-0, statement-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG saying)
        (ADVP (IN that) (DT the))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NNS people))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (VP (VBG dying)
                      (PP (IN in)
                        (NP (NNP Africa))))))))
            (VP (VBP deserve)
              (S
                (VP (TO to)
                  (VP (VB die)
                    (PP (TO to)
                      (PP (TO to)
                        (NP
                          (NP (NN genocide)
                            (CC or)
                            (NN starvation))
                          (CC or)
                          (NP (NN anything) (RB else)))))))))))))
    (. .)))

nsubj(saying-4, I-1)
aux(saying-4, 'm-2)
neg(saying-4, not-3)
root(ROOT-0, saying-4)
advmod(saying-4, that-5)
dep(that-5, the-6)
complm(deserve-15, that-7)
det(people-9, the-8)
nsubj(dying-12, people-9)
nsubj(deserve-15, people-9)
xsubj(die-17, people-9)
aux(dying-12, are-11)
rcmod(people-9, dying-12)
prep_in(dying-12, Africa-14)
ccomp(saying-4, deserve-15)
aux(die-17, to-16)
xcomp(deserve-15, die-17)
prep(die-17, to-18)
pcomp(to-18, to-19)
prep_to(to-18, genocide-20)
prep_to(to-18, starvation-22)
conj_or(genocide-20, starvation-22)
prep_to(to-18, anything-24)
conj_or(genocide-20, anything-24)
advmod(anything-24, else-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG saying)
        (SBAR (IN that) (IN since)
          (S
            (NP (NN god))
            (VP (VBD gave)
              (NP (NN man)
                (CC and)
                (NNS women))
              (NP
                (NP (JJ free) (NN will))
                (NP (DT the) (NNS things))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP befall)
                      (SBAR
                        (S
                          (NP (PRP us))
                          (VP (VBP are)
                            (NP
                              (NP (DT the) (NNS doings))
                              (PP (IN of)
                                (NP (NN man))))))))))))))))
    (. .)))

nsubj(saying-3, I-1)
aux(saying-3, am-2)
root(ROOT-0, saying-3)
complm(gave-7, that-4)
dep(gave-7, since-5)
nsubj(gave-7, god-6)
ccomp(saying-3, gave-7)
iobj(gave-7, man-8)
iobj(gave-7, women-10)
conj_and(man-8, women-10)
amod(will-12, free-11)
dobj(gave-7, will-12)
iobj(gave-7, will-12)
det(things-14, the-13)
dobj(gave-7, things-14)
dep(will-12, things-14)
nsubj(befall-16, things-14)
rcmod(will-12, befall-16)
rcmod(things-14, befall-16)
nsubj(doings-20, us-17)
cop(doings-20, are-18)
det(doings-20, the-19)
ccomp(befall-16, doings-20)
prep_of(doings-20, man-22)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP create)
      (NP
        (NP (NN starvation))
        (CC and)
        (NP (NN war)
          (CC and)
          (NN poverty))))
    (. .)))

nsubj(create-2, We-1)
root(ROOT-0, create-2)
dobj(create-2, starvation-3)
dobj(create-2, war-5)
conj_and(starvation-3, war-5)
conj_and(starvation-3, poverty-7)
conj_and(war-5, poverty-7)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (NN god))
        (VP (VBD gave)
          (S
            (NP (PRP us))
            (ADJP (JJ free))))))
    (VP (MD will)
      (ADVP (RB humans))
      (VP (VB choose)
        (NP (PRP$ their) (JJ own) (NN path))
        (SBAR (IN whether)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (PP
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN bettering))
                    (PP (IN of)
                      (NP (NN man)))))
                (CC or)
                (PP (IN for)
                  (NP (DT the) (VBG worsening)))))))))
    (. .)))

mark(gave-3, Since-1)
nsubj(gave-3, god-2)
csubj(choose-8, gave-3)
nsubj(free-5, us-4)
xcomp(gave-3, free-5)
aux(choose-8, will-6)
advmod(choose-8, humans-7)
root(ROOT-0, choose-8)
poss(path-11, their-9)
amod(path-11, own-10)
dobj(choose-8, path-11)
complm(is-14, whether-12)
nsubj(is-14, it-13)
ccomp(choose-8, is-14)
det(bettering-17, the-16)
prep_for(is-14, bettering-17)
prep_of(bettering-17, man-19)
prep_for(is-14, the-22)
conj_or(bettering-17, the-22)
amod(the-22, worsening-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (NP
        (NP (PRP$ his) (NNS choices))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD put)
              (NP (NNS people))
              (PP (IN in)
                (NP
                  (NP (DT these) (NNS situations))
                  (PP (CC but)
                    (NP (PRP$ our) (JJ own))))))))))
    (. .)))

nsubj(choices-5, It-1)
cop(choices-5, is-2)
neg(choices-5, not-3)
poss(choices-5, his-4)
root(ROOT-0, choices-5)
nsubj(put-7, choices-5)
rcmod(choices-5, put-7)
dobj(put-7, people-8)
det(situations-11, these-10)
prep_in(put-7, situations-11)
prep(situations-11, but-12)
poss(own-14, our-13)
dep(but-12, own-14)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would)
      (NP (PRP he))
      (VP
        (VP (VB step)
          (PRT (RP in)))
        (CC and)
        (VP (VB change)
          (NP (NN thing))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP we))
              (VP (VBP have)
                (NP (DT the) (NN power)
                  (S
                    (VP (TO to)
                      (VP (VB change)
                        (NP
                          (NP (NNS things))
                          (PP (IN for)
                            (NP (PRP ourselves))))))))))))))
    (. .)))

advmod(step-4, Why-1)
aux(step-4, would-2)
nsubj(step-4, he-3)
nsubj(change-7, he-3)
root(ROOT-0, step-4)
prt(step-4, in-5)
conj_and(step-4, change-7)
dobj(change-7, thing-8)
advmod(have-11, when-9)
nsubj(have-11, we-10)
advcl(change-7, have-11)
det(power-13, the-12)
dobj(have-11, power-13)
aux(change-15, to-14)
infmod(power-13, change-15)
dobj(change-15, things-16)
prep_for(things-16, ourselves-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP create)
      (S
        (NP (PRP$ our) (JJ own) (NN world))
        (ADJP (RB not) (JJ god)
          (SBAR
            (S
              (NP (PRP he))
              (ADVP (RB just))
              (VP (VBD gave)
                (NP (PRP us))
                (NP (DT the) (NN power)
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (ADVP (RB so))))))))))))
    (. .)))

nsubj(create-2, We-1)
root(ROOT-0, create-2)
poss(world-5, our-3)
amod(world-5, own-4)
nsubj(god-7, world-5)
neg(god-7, not-6)
xcomp(create-2, god-7)
nsubj(gave-10, he-8)
advmod(gave-10, just-9)
dep(god-7, gave-10)
iobj(gave-10, us-11)
det(power-13, the-12)
dobj(gave-10, power-13)
aux(do-15, to-14)
infmod(power-13, do-15)
advmod(do-15, so-16)

