(ROOT
  (S
    (S
      (NP (NNP Everything))
      (VP (VBZ works)
        (NP
          (NP (DT the) (NN way))
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD would)
                (SBAR (IN if)
                  (S
                    (NP (EX there))
                    (VP (VBD was)
                      (NP (DT no) (NN god))
                      (, ,)
                      (ADVP (RB therefore)))))))))))
    (NP (EX there))
    (VP (VBZ 's)
      (NP (DT no) (NN reason)
        (S
          (VP (TO to)
            (VP (VB believe)
              (SBAR
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP (DT a) (NN god))))))))))
    (. .)))

nsubj(works-2, Everything-1)
dep('s-15, works-2)
det(way-4, the-3)
dobj(works-2, way-4)
nsubj(would-6, it-5)
rcmod(way-4, would-6)
mark(was-9, if-7)
expl(was-9, there-8)
advcl(would-6, was-9)
det(god-11, no-10)
nsubj(was-9, god-11)
advmod(was-9, therefore-13)
expl('s-15, there-14)
root(ROOT-0, 's-15)
det(reason-17, no-16)
nsubj('s-15, reason-17)
aux(believe-19, to-18)
infmod(reason-17, believe-19)
expl(is-21, there-20)
ccomp(believe-19, is-21)
det(god-23, a-22)
nsubj(is-21, god-23)

(ROOT
  (FRAG
    (ADVP (RB Just))
    (SBAR (IN like)
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP (DT no) (NN reason)
            (S
              (VP (TO to)
                (VP (VB believe)
                  (PP (IN in)
                    (NP (NNP Zeus)
                      (CC or)
                      (NNP apollo)))))))))
      (: ...))))

root(ROOT-0, Just-1)
mark('s-4, like-2)
expl('s-4, there-3)
dep(Just-1, 's-4)
det(reason-6, no-5)
nsubj('s-4, reason-6)
aux(believe-8, to-7)
infmod(reason-6, believe-8)
prep_in(believe-8, Zeus-10)
prep_in(believe-8, apollo-12)
conj_or(Zeus-10, apollo-12)

(ROOT
  (S
    (NP (NNP Etc))
    (SBAR (IN Whether)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (PP (IN for)
            (NP
              (NP (DT the) (JJR greater) (NN good))
              (PRN (-LRB- -LRB-)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's) (RB not))))
                (-RRB- -RRB-)))))))
    (VP (VBZ is)
      (ADJP (JJ erroneus)))
    (. .)))

nsubj(erroneus-16, Etc-1)
complm(is-4, Whether-2)
nsubj(is-4, it-3)
dep(erroneus-16, is-4)
det(good-8, the-6)
amod(good-8, greater-7)
prep_for(is-4, good-8)
dobj('s-12, which-10)
nsubj('s-12, it-11)
dep(good-8, 's-12)
neg('s-12, not-13)
cop(erroneus-16, is-15)
root(ROOT-0, erroneus-16)

(ROOT
  (S
    (S
      (NP (JJ Should) (NNS people))
      (VP (VBP believe)
        (PP (IN in)
          (NP
            (NP (NNP Santa))
            (NP (PRP$ their) (JJ whole) (NNS lives))))))
    (PRN (, ,)
      (SINV (MD would)
        (NP (PRP it))
        (VP (VB be)
          (PP (IN for)
            (NP
              (NP (DT the) (JJR greater) (NN good))
              (: ...)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ gives)
                    (NP (DT a) (NN shit)))))))))
      (, ,))
    (CC and)
    (S
      (INTJ (UH no))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB need)
          (NP (DT a) (JJ fake) (NN story))
          (S
            (VP (TO to)
              (VP (VB help)
                (S
                  (NP (PRP me))
                  (VP (VB behave)))))))))
    (. .)))

amod(people-2, Should-1)
nsubj(believe-3, people-2)
root(ROOT-0, believe-3)
prep_in(believe-3, Santa-5)
poss(lives-8, their-6)
amod(lives-8, whole-7)
dep(Santa-5, lives-8)
aux(be-12, would-10)
nsubj(be-12, it-11)
dep(believe-3, be-12)
det(good-16, the-14)
amod(good-16, greater-15)
prep_for(be-12, good-16)
nsubj(gives-19, who-18)
rcmod(good-16, gives-19)
det(shit-21, a-20)
dobj(gives-19, shit-21)
dep(need-29, no-24)
nsubj(need-29, I-26)
aux(need-29, do-27)
neg(need-29, n't-28)
conj_and(believe-3, need-29)
det(story-32, a-30)
amod(story-32, fake-31)
dobj(need-29, story-32)
aux(help-34, to-33)
xcomp(need-29, help-34)
nsubj(behave-36, me-35)
ccomp(help-34, behave-36)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN spent)
        (S
          (VP
            (VP
              (ADVP (RB long) (RB enough))
              (VBG listening)
              (PP (TO to)
                (NP (DT these) (NNS people))))
            (, ,)
            (VP (VBZ lets)
              (VP
                (VP (VB try)
                  (CC and)
                  (VB seek)
                  (NP (JJ actual) (NN truth)))
                (, ,)
                (CONJP (RB rather) (IN than))
                (VP (VB live)
                  (PP (IN in)
                    (NP (DT a) (NN fairy) (NN land))))))))))
    (. .)))

nsubj(spent-3, We-1)
aux(spent-3, 've-2)
root(ROOT-0, spent-3)
advmod(enough-5, long-4)
advmod(listening-6, enough-5)
ccomp(spent-3, listening-6)
det(people-9, these-8)
prep_to(listening-6, people-9)
dep(listening-6, lets-11)
dep(lets-11, try-12)
dep(lets-11, seek-14)
conj_and(try-12, seek-14)
amod(truth-16, actual-15)
dobj(try-12, truth-16)
dep(lets-11, live-20)
conj_negcc(try-12, live-20)
det(land-24, a-22)
nn(land-24, fairy-23)
prep_in(live-20, land-24)

