(ROOT
  (S
    (NP (PRP You))
    (VP (VBD said) (, ,) (`` ``)
      (S
        (NP (PRP we))
        (VP (MD would)
          (VP (VB need)
            (NP (JJ ample) (NN evidence))
            (SBAR (IN that)
              (S
                (S
                  (NP
                    (NP (DT the) (NNS laws))
                    (PP (IN of)
                      (NP (NN physics))))
                  (VP (VBP have)
                    (VP (VBN been)
                      (VP (VBN broken)))))
                (CC or)
                (ADVP (IN at) (JJS least))
                (S
                  (ADJP (RB horribly) (VBN misunderstood)))))))))
    (. .)))

nsubj(said-2, You-1)
root(ROOT-0, said-2)
nsubj(need-7, we-5)
aux(need-7, would-6)
ccomp(said-2, need-7)
amod(evidence-9, ample-8)
dobj(need-7, evidence-9)
complm(broken-17, that-10)
det(laws-12, the-11)
nsubjpass(broken-17, laws-12)
nsubjpass(misunderstood-22, laws-12)
prep_of(laws-12, physics-14)
aux(broken-17, have-15)
auxpass(broken-17, been-16)
ccomp(need-7, broken-17)
ccomp(need-7, at-19)
advmod(broken-17, at-19)
conj_or(broken-17, at-19)
pobj(at-19, least-20)
advmod(misunderstood-22, horribly-21)
ccomp(need-7, misunderstood-22)
conj_or(broken-17, misunderstood-22)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP we))
    (VP (VBP have)
      (NP (NN none)))
    (. .)))

advmod(have-4, However-1)
nsubj(have-4, we-3)
root(ROOT-0, have-4)
dobj(have-4, none-5)

(ROOT
  (S ('' '')
    (NP (DT The) (RB so))
    (VP (VBD called)
      (NP
        (NP (NNS definitions))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS laws))
            (PP (IN of)
              (NP (NN physics))))))
      (SBAR (IN as)
        (S
          (NP (NN man))
          (VP (VBZ understands)
            (SBAR
              (S
                (NP (PRP them))
                (VP (VBP are)
                  (VP (VBN researched)
                    (CC and)
                    (VBN refined)
                    (NP
                      (NP (DT every) (NN day))
                      (PP (IN at)
                        (NP (NNS universities))))
                    (PP (DT all) (IN over)
                      (NP (DT the) (NN world)))))))))))
    (. .)))

det(so-3, The-2)
nsubj(called-4, so-3)
root(ROOT-0, called-4)
dobj(called-4, definitions-5)
det(laws-8, the-7)
prep_of(definitions-5, laws-8)
prep_of(laws-8, physics-10)
mark(understands-13, as-11)
nsubj(understands-13, man-12)
advcl(called-4, understands-13)
nsubjpass(researched-16, them-14)
nsubjpass(refined-18, them-14)
auxpass(researched-16, are-15)
ccomp(understands-13, researched-16)
ccomp(understands-13, refined-18)
conj_and(researched-16, refined-18)
det(day-20, every-19)
dobj(researched-16, day-20)
prep_at(day-20, universities-22)
dep(researched-16, all-23)
det(world-26, the-25)
prep_over(researched-16, world-26)

(ROOT
  (S
    (S
      (NP (NNS People))
      (VP (VBP are)
        (ADVP (RB still))
        (VP (VBG receiving)
          (NP (NNS PhDs)
            (CC and)
            (NNS grants)))))
    (, ,) (IN so)
    (S
      (INTJ (UH yes))
      (, ,)
      (NP (EX there))
      (VP (VBZ is)
        (NP (JJ ample) (NN proof))
        (SBAR (IN that)
          (S
            (NP
              (NP (PRP$ our) (NN understanding))
              (PP (IN of)
                (NP (NN physics))))
            (VP (VBZ is)
              (ADVP (RB still))
              (VP (VBG being)
                (VP (VBN refined))))))))
    (. .)))

nsubj(receiving-4, People-1)
aux(receiving-4, are-2)
advmod(receiving-4, still-3)
root(ROOT-0, receiving-4)
dobj(receiving-4, PhDs-5)
dobj(receiving-4, grants-7)
conj_and(PhDs-5, grants-7)
dep(receiving-4, so-9)
dep(is-13, yes-10)
expl(is-13, there-12)
ccomp(receiving-4, is-13)
amod(proof-15, ample-14)
nsubj(is-13, proof-15)
complm(refined-24, that-16)
poss(understanding-18, our-17)
nsubjpass(refined-24, understanding-18)
prep_of(understanding-18, physics-20)
aux(refined-24, is-21)
advmod(refined-24, still-22)
auxpass(refined-24, being-23)
ccomp(is-13, refined-24)

(ROOT
  (NP (DT Every) (JJ single) (NN day) (. .)))

det(day-3, Every-1)
amod(day-3, single-2)
root(ROOT-0, day-3)

