(ROOT
  (S (`` ``)
    (INTJ (UH No))
    (, ,)
    (NP (PRP I))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP it))
          (`` ``)
          (VP (VBZ is)
            (ADJP (JJ true))
            ('' '')
            (SBAR (IN because)
              (S
                (NP (DT the) (NN evidence))
                (ADVP (RB strongly))
                (VP (VBZ suggests)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (ADJP (JJ true))))))))))))
    (. .)))

dep(say-5, No-2)
nsubj(say-5, I-4)
root(ROOT-0, say-5)
nsubj(true-9, it-6)
cop(true-9, is-8)
ccomp(say-5, true-9)
mark(suggests-15, because-11)
det(evidence-13, the-12)
nsubj(suggests-15, evidence-13)
advmod(suggests-15, strongly-14)
advcl(true-9, suggests-15)
complm(true-19, that-16)
nsubj(true-19, it-17)
cop(true-19, is-18)
ccomp(suggests-15, true-19)

(ROOT
  (S ('' '')
    (NP (WP What))
    (VP (VBZ evidence))
    (. ?)))

nsubj(evidence-3, What-2)
root(ROOT-0, evidence-3)

(ROOT
  (S
    (S
      (NP (NNP Gravity))
      (VP (VBZ has)
        (NP (PRP$ its) (JJ exact) (NN value))))
    (, ,)
    (ADVP (RB Therefore))
    (S
      (NP (PRP we))
      (VP (VBP exist)))
    (. .)))

nsubj(has-2, Gravity-1)
root(ROOT-0, has-2)
poss(value-5, its-3)
amod(value-5, exact-4)
dobj(has-2, value-5)
advmod(has-2, Therefore-7)
nsubj(exist-9, we-8)
ccomp(has-2, exist-9)

(ROOT
  (S
    (VP (VB Its)
      (NP (DT a) (JJ measurable) (NN parameter)))
    (. .)))

root(ROOT-0, Its-1)
det(parameter-4, a-2)
amod(parameter-4, measurable-3)
dobj(Its-1, parameter-4)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (RB never))
        (VP (VBN been)
          (NP
            (NP (DT a) (NN supporter))
            (PP (IN of)
              (NP (DT the)))
            ('' '')
            (NP (NNP Rare) (NNP Earth) (NNP Hypothesis) ('' '') (NNP Supporter))
            (CC or)
            (NP (RB not))))))
    (, ,)
    (NP (DT the) (NN evidence))
    (VP (VBZ is)
      (ADVP (RB there)))
    (. .)))

nsubj(supporter-7, I-2)
aux(supporter-7, have-3)
neg(supporter-7, never-4)
cop(supporter-7, been-5)
det(supporter-7, a-6)
ccomp(is-21, supporter-7)
prep_of(supporter-7, the-9)
nn(Supporter-15, Rare-11)
nn(Supporter-15, Earth-12)
nn(Supporter-15, Hypothesis-13)
conj_or(supporter-7, Supporter-15)
ccomp(is-21, Supporter-15)
conj_or(supporter-7, not-17)
ccomp(is-21, not-17)
det(evidence-20, the-19)
nsubj(is-21, evidence-20)
root(ROOT-0, is-21)
advmod(is-21, there-22)

(ROOT
  (FRAG (CC and)
    (ADVP (RB finally))
    (PP
      (NP (DT a) (NN challenge))
      (PP (TO to)
        (NP (PRP you))))
    (. .)))

dep(finally-2, and-1)
root(ROOT-0, finally-2)
det(challenge-4, a-3)
dep(to-5, challenge-4)
dep(finally-2, to-5)
pobj(to-5, you-6)

(ROOT
  (SQ
    (VP (VB Tell)
      (NP (PRP me))
      (NP
        (NP (WP what))
        (PP (IN of)
          (NP
            (NP (NN life) (POS 's))
            (NNS origins)))))
    (. ?)))

root(ROOT-0, Tell-1)
iobj(Tell-1, me-2)
dobj(Tell-1, what-3)
poss(origins-7, life-5)
prep_of(what-3, origins-7)

(ROOT
  (SBARQ
    (WHADVP (WRB Where)
      (CC and)
      (WRB how))
    (SQ (VBD did)
      (NP (NN life))
      (VP (VB com)
        (PRT (RP about))))
    (. ?)))

advmod(com-6, Where-1)
dep(Where-1, and-2)
dep(Where-1, how-3)
aux(com-6, did-4)
nsubj(com-6, life-5)
root(ROOT-0, com-6)
prt(com-6, about-7)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP find)
        (S
          (NP (PRP it))
          (ADJP (RB rather) (JJ interesting)))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD would)
              (VP (VB name) ('' '')
                (NP (NNP Debating) (NNP Design))))))))
    ('' '')
    (NP (RB then))
    (VP (VBP go)
      (PRT (RP on))
      (S
        (VP (TO to)
          (VP (VB talk)
            (PP (IN about)
              (NP (DT the) (NN flagellum)))))
        (: ...)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS essays))
                  (PP (IN in)
                    (NP (NNP Debating) (NNP Design))))))
            (VP (VBZ demonstrates)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (DT that) (NN flagellum))
                  (VP (VBZ is) (`` ``)
                    (ADJP (RB irreducibly) (JJ complex))
                    ('' '')))))))))
    (. .)))

nsubj(find-3, I-2)
ccomp(go-16, find-3)
nsubj(interesting-6, it-4)
advmod(interesting-6, rather-5)
xcomp(find-3, interesting-6)
complm(name-10, that-7)
nsubj(name-10, you-8)
aux(name-10, would-9)
ccomp(find-3, name-10)
nn(Design-13, Debating-12)
dobj(name-10, Design-13)
nsubj(go-16, then-15)
xsubj(talk-19, then-15)
root(ROOT-0, go-16)
prt(go-16, on-17)
aux(talk-19, to-18)
xcomp(go-16, talk-19)
det(flagellum-22, the-21)
prep_about(talk-19, flagellum-22)
advmod(demonstrates-32, when-24)
nsubj(demonstrates-32, one-25)
det(essays-28, the-27)
prep_of(one-25, essays-28)
nn(Design-31, Debating-30)
prep_in(essays-28, Design-31)
advcl(talk-19, demonstrates-32)
parataxis(talk-19, demonstrates-32)
advmod(complex-39, how-33)
det(flagellum-35, that-34)
nsubj(complex-39, flagellum-35)
cop(complex-39, is-36)
advmod(complex-39, irreducibly-38)
ccomp(demonstrates-32, complex-39)

(ROOT
  (SQ (VBD '')
    (NP (NNPS Whats))
    (NP (PRP$ your) (NN point))
    (. ?)))

nsubj(point-4, Whats-2)
poss(point-4, your-3)
root(ROOT-0, point-4)

(ROOT
  (S (`` ``)
    (VP (VBD Yes) (, ,)
      (CC but)
      (ADVP (RB also))
      (PP (RB not)
        (ADJP (RB very) (JJ accurate))))
    (. .)))

root(ROOT-0, Yes-2)
advmod(Yes-2, also-5)
conj_but(Yes-2, also-5)
conj_but(Yes-2, not-6)
prep(Yes-2, not-6)
advmod(accurate-8, very-7)
pobj(not-6, accurate-8)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP do) (RB not)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (JJ variable) (NN gravity))
              (VP (MD can)
                (VP (VB be))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD may)
      (VP (VB be)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBP are)
              (NP
                (NP
                  (QP (RB only) (DT a) (JJ few))
                  (JJ possible) (NNS values))
                (PP (IN for)
                  (NP (NN gravity)
                    (S
                      (VP (TO to)
                        (VP (VB have))))))))))))
    (. .)))

nsubj(know-4, We-1)
aux(know-4, do-2)
neg(know-4, not-3)
ccomp(be-13, know-4)
advmod(be-9, how-5)
amod(gravity-7, variable-6)
nsubj(be-9, gravity-7)
aux(be-9, can-8)
ccomp(know-4, be-9)
nsubj(be-13, it-11)
aux(be-13, may-12)
root(ROOT-0, be-13)
complm(are-16, that-14)
expl(are-16, there-15)
ccomp(be-13, are-16)
quantmod(few-19, only-17)
quantmod(few-19, a-18)
num(values-21, few-19)
amod(values-21, possible-20)
nsubj(are-16, values-21)
prep_for(values-21, gravity-23)
aux(have-25, to-24)
infmod(gravity-23, have-25)

(ROOT
  (S
    (S
      (S
        (VP (VBG Saying)
          (SBAR (IN that) (IN because)
            (S
              (NP (PRP we))
              (VP (VBP exist)
                (SBAR
                  (S
                    (NP (NN gravity))
                    (VP (MD must)
                      (VP (VB have)
                        (NP (DT this) (NN value)))))))))))
      (VP (VBZ is) (RB not)
        (NP (DT a) (JJ reasonable) (NN statement))))
    (: ...)
    (S
      (ADVP (RB rather))
      (NP (PRP we))
      (VP (VBP exist)
        (SBAR (IN because)
          (S
            (NP (NN gravity))
            (VP (VBZ has)
              (NP (DT that) (NN value)))))))
    (. .)))

csubj(statement-15, Saying-1)
complm(exist-5, that-2)
dep(exist-5, because-3)
nsubj(exist-5, we-4)
ccomp(Saying-1, exist-5)
nsubj(have-8, gravity-6)
aux(have-8, must-7)
ccomp(exist-5, have-8)
det(value-10, this-9)
dobj(have-8, value-10)
cop(statement-15, is-11)
neg(statement-15, not-12)
det(statement-15, a-13)
amod(statement-15, reasonable-14)
root(ROOT-0, statement-15)
advmod(exist-19, rather-17)
nsubj(exist-19, we-18)
parataxis(statement-15, exist-19)
mark(has-22, because-20)
nsubj(has-22, gravity-21)
advcl(exist-19, has-22)
det(value-24, that-23)
dobj(has-22, value-24)

(ROOT
  (S ('' '')
    (ADVP (RB Yes))
    (, ,)
    (VP (VBZ fantastic)
      (SBAR (IN so)
        (S
          (NP (PRP we))
          (VP (VBP agree)))))
    (. .)))

advmod(fantastic-4, Yes-2)
root(ROOT-0, fantastic-4)
mark(agree-7, so-5)
nsubj(agree-7, we-6)
advcl(fantastic-4, agree-7)

(ROOT
  (S
    (NP (NNP Gravity))
    (VP (VBZ is)
      (NP
        (NP
          (QP (RB only) (CD one)))
        (PP (IN of)
          (NP (DT the) (JJ many) (NNS examples)))))
    (. .)))

nsubj(one-4, Gravity-1)
cop(one-4, is-2)
quantmod(one-4, only-3)
root(ROOT-0, one-4)
det(examples-8, the-6)
amod(examples-8, many-7)
prep_of(one-4, examples-8)

(ROOT
  (S (CC And)
    (NP
      (NP (PRP$ your) (NN argument))
      (PP (IN on)
        (NP (NN gravitation))))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP Collins))
          (VP (VBZ is)
            (VP (VBG saying))))))
    (. .)))

cc(is-6, And-1)
poss(argument-3, your-2)
nsubj(is-6, argument-3)
prep_on(argument-3, gravitation-5)
root(ROOT-0, is-6)
dobj(saying-10, what-7)
nsubj(saying-10, Collins-8)
aux(saying-10, is-9)
ccomp(is-6, saying-10)

