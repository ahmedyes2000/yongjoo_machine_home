(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (ADVP (RB really))
        (VP (VBP are)
          (VP (VBG searching)
            (PP (IN for)
              (NP (DT some) (NNS answers)))
            (PP (TO to)
              (NP (DT this) (NN question)))
            (ADVP (RB then))))))
    (NP (PRP I))
    (VP (MD can)
      (VP (VB provide)
        (NP
          (NP (JJ great) (NNS books))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP break)
                (PRT (RP down))
                (NP
                  (NP (DT the) (JJ philosophical) (NN side))
                  (PP (IN of)
                    (NP (JJ free) (NN will))))))))))
    (. .)))

mark(searching-5, If-1)
nsubj(searching-5, you-2)
advmod(searching-5, really-3)
aux(searching-5, are-4)
advcl(provide-15, searching-5)
det(answers-8, some-7)
prep_for(searching-5, answers-8)
det(question-11, this-10)
prep_to(searching-5, question-11)
advmod(searching-5, then-12)
nsubj(provide-15, I-13)
aux(provide-15, can-14)
root(ROOT-0, provide-15)
amod(books-17, great-16)
dobj(provide-15, books-17)
nsubj(break-19, books-17)
rcmod(books-17, break-19)
prt(break-19, down-20)
det(side-23, the-21)
amod(side-23, philosophical-22)
dobj(break-19, side-23)
amod(will-26, free-25)
prep_of(side-23, will-26)

(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN of)
        (NP
          (NP (DT the) (JJS most))
          (VP
            (ADVP (RB well))
            (VBN known)
            (PP (IN on)
              (NP (DT this) (NN issue)))))))
    (VP (VBZ is)
      (NP
        (NP (NNP C.S.) (NNP Lewis))
        (, ,) (`` ``)
        (NP
          (NP (DT The) (NN problem))
          (PP (IN of)
            (NP (NN pain))))))
    (. .)))

nsubj(Lewis-12, One-1)
det(most-4, the-3)
prep_of(One-1, most-4)
advmod(known-6, well-5)
partmod(most-4, known-6)
det(issue-9, this-8)
prep_on(known-6, issue-9)
cop(Lewis-12, is-10)
nn(Lewis-12, C.S.-11)
root(ROOT-0, Lewis-12)
det(problem-16, The-15)
dep(Lewis-12, problem-16)
prep_of(problem-16, pain-18)

(ROOT
  (S (IN For)
    (ADVP (RBR more) (IN on))
    (NP (DT this))
    (VP (VBP read)
      (NP
        (NP (NNP Robert) (NNP Collins))
        (, ,)
        (NP (NNP Jay) (NNP W.) (NNP Richards))
        (, ,)
        (CC or)
        (NP (NNP Guillermo) (NNP Gonzalez))))
    (. .)))

dep(read-5, For-1)
advmod(on-3, more-2)
advmod(read-5, on-3)
nsubj(read-5, this-4)
root(ROOT-0, read-5)
nn(Collins-7, Robert-6)
dobj(read-5, Collins-7)
nn(Richards-11, Jay-9)
nn(Richards-11, W.-10)
dobj(read-5, Richards-11)
conj_or(Collins-7, Richards-11)
nn(Gonzalez-15, Guillermo-14)
dobj(read-5, Gonzalez-15)
conj_or(Collins-7, Gonzalez-15)

(ROOT
  (S (IN For)
    (NP
      (NP (JJ scientific) (NN evidence))
      (PP (IN in)
        (NP (JJ molecular) (NN biology))))
    (VP (VBP read)
      (NP
        (NP (NNP Michael) (NNP Behe))
        (, ,)
        (CC and)
        (NP (NNP Johnathan) (NNP Wells))))
    (. .)))

dep(read-7, For-1)
amod(evidence-3, scientific-2)
nsubj(read-7, evidence-3)
amod(biology-6, molecular-5)
prep_in(evidence-3, biology-6)
root(ROOT-0, read-7)
nn(Behe-9, Michael-8)
dobj(read-7, Behe-9)
nn(Wells-13, Johnathan-12)
dobj(read-7, Wells-13)
conj_and(Behe-9, Wells-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB encourage)
        (S
          (VP (VBG reading)
            (NP (JJ opposing) (NN view))
            (PP (IN from)
              (NP (NN evolution) (NN scientist)))
            (PP (JJ such)
              (NP (DT a) (NNP Ruse)))))))
    (. .)))

nsubj(encourage-3, I-1)
aux(encourage-3, would-2)
root(ROOT-0, encourage-3)
xcomp(encourage-3, reading-4)
amod(view-6, opposing-5)
dobj(reading-4, view-6)
nn(scientist-9, evolution-8)
prep_from(reading-4, scientist-9)
prep(reading-4, such-10)
det(Ruse-12, a-11)
dep(such-10, Ruse-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ good)
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (PRP you))
                  (VP (VBP choose)
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBZ evidences))))))))))))
    (. .)))

nsubj(good-3, It-1)
cop(good-3, is-2)
root(ROOT-0, good-3)
aux(know-5, to-4)
xcomp(good-3, know-5)
advmod(choose-8, why-6)
nsubj(choose-8, you-7)
advcl(know-5, choose-8)
nsubj(evidences-10, you-9)
ccomp(choose-8, evidences-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN energy) (NN mass))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP speak)
            (PP (IN of))))))
    (VP (VBZ is)
      (VP (VBN called)
        (NP (DT the) (NN singularity))))
    (. .)))

det(mass-3, The-1)
nn(mass-3, energy-2)
prep_of(speak-5, mass-3)
nsubjpass(called-8, mass-3)
nsubj(speak-5, you-4)
rcmod(mass-3, speak-5)
auxpass(called-8, is-7)
root(ROOT-0, called-8)
det(singularity-10, the-9)
dobj(called-8, singularity-10)

(ROOT
  (S
    (NP (DT Both) (NNS sciences))
    (VP (VBP believe)
      (PP (IN in)
        (NP
          (NP (DT the) (`` ``) (JJ big) (NN bang) ('' ''))
          (SBAR
            (S
              (NP (PRP It))
              (VP (VBZ is)
                (NP (DT a) (JJ measurable) (NN event))))))))
    (. .)))

det(sciences-2, Both-1)
nsubj(believe-3, sciences-2)
root(ROOT-0, believe-3)
det(bang-8, the-5)
amod(bang-8, big-7)
prep_in(believe-3, bang-8)
nsubj(event-14, It-10)
cop(event-14, is-11)
det(event-14, a-12)
amod(event-14, measurable-13)
rcmod(bang-8, event-14)

(ROOT
  (S
    (NP (DT The) (NN argument))
    (VP (VBZ is)
      (NP
        (NP (NN evolution))
        (SBAR
          (S
            (VP (VBZ believes)
              (SBAR (IN that)
                (S
                  (NP (NN nothing))
                  (VP (VBD came)
                    (PP (IN from)
                      (NP (NN nothing)))
                    (S
                      (VP (TO to)
                        (VP (VB create)
                          (NP (NN something))
                          (PP (IN over)
                            (NP
                              (NP (NNS billions))
                              (PP (IN of)
                                (NP (NNS years))))))))))))))))
    (. .)))

det(argument-2, The-1)
nsubj(evolution-4, argument-2)
cop(evolution-4, is-3)
root(ROOT-0, evolution-4)
rcmod(evolution-4, believes-5)
complm(came-8, that-6)
nsubj(came-8, nothing-7)
xsubj(create-12, nothing-7)
ccomp(believes-5, came-8)
prep_from(came-8, nothing-10)
aux(create-12, to-11)
xcomp(came-8, create-12)
dobj(create-12, something-13)
prep_over(create-12, billions-15)
prep_of(billions-15, years-17)

(ROOT
  (S
    (NP (EX There))
    (VP (MD can)
      (VP (VB be)
        (ADJP (RB no) (JJ infinity))))
    (. .)))

expl(infinity-5, There-1)
aux(infinity-5, can-2)
cop(infinity-5, be-3)
advmod(infinity-5, no-4)
root(ROOT-0, infinity-5)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (NN Everything))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ begins)
              (SBAR
                (S
                  (NP (DT the) (NN exist))
                  (VP (VBZ has)
                    (NP
                      (NP (DT a) (NN cause))
                      (, ,)
                      (NP (DT The) (NN earth))))))))))
      (VP (VBD began)
        (S
          (VP (TO to)
            (VP (VB exist))))))
    (, ,)
    (ADVP (RB therefore))
    (S
      (NP (PRP it))
      (VP (VBZ has)
        (NP (DT a) (NN cause))))
    (. .)))

nsubj(begins-4, Everything-2)
nsubj(began-13, Everything-2)
xsubj(exist-15, Everything-2)
rcmod(Everything-2, begins-4)
det(exist-6, the-5)
nsubj(has-7, exist-6)
ccomp(begins-4, has-7)
det(cause-9, a-8)
dobj(has-7, cause-9)
det(earth-12, The-11)
appos(cause-9, earth-12)
root(ROOT-0, began-13)
aux(exist-15, to-14)
xcomp(began-13, exist-15)
advmod(began-13, therefore-17)
nsubj(has-19, it-18)
ccomp(began-13, has-19)
det(cause-21, a-20)
dobj(has-19, cause-21)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP
            (VP (VBD heard)
              (NP (DT a) (NN bang))
              (PP (IN in)
                (NP (DT the) (JJ next) (NN room))))
            (CC and)
            (VP (VBD asked)
              (NP (PRP me))
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD was)
                    (NP
                      (NP (DT that))
                      (CC and)
                      (NP (FW i))))))))))
      (VP (VBD said)
        (NP (NN nothing))))
    (, ,)
    (NP (PRP you))
    (VP (MD would) (RB not)
      (VP (VB except)
        (NP (DT that))))
    (. .)))

mark(heard-4, If-2)
nsubj(heard-4, you-3)
nsubj(asked-12, you-3)
csubj(said-19, heard-4)
det(bang-6, a-5)
dobj(heard-4, bang-6)
det(room-10, the-8)
amod(room-10, next-9)
prep_in(heard-4, room-10)
conj_and(heard-4, asked-12)
csubj(said-19, asked-12)
dobj(asked-12, me-13)
nsubj(that-16, what-14)
cop(that-16, was-15)
dep(asked-12, that-16)
dep(asked-12, i-18)
conj_and(that-16, i-18)
ccomp(except-25, said-19)
dobj(said-19, nothing-20)
nsubj(except-25, you-22)
aux(except-25, would-23)
neg(except-25, not-24)
root(ROOT-0, except-25)
dobj(except-25, that-26)

(ROOT
  (S ('' '')
    (NP (PRP He))
    (ADVP (RB also))
    (VP
      (VP (VBD wrote)
        (ADJP (JJ mere) ('' ''))
        (ADVP (RB Christianity)))
      ('' '')
      (CC and)
      (VP ('' '')
        (NP (CD Miracles))))
    (. .)))

nsubj(wrote-4, He-2)
advmod(wrote-4, also-3)
root(ROOT-0, wrote-4)
acomp(wrote-4, mere-5)
advmod(wrote-4, Christianity-7)
conj_and(wrote-4, Miracles-11)

(ROOT
  (S
    (NP (DT The) (NN bang))
    (VP (VBZ has)
      (NP (DT a) (NN cause)))
    (. .)))

det(bang-2, The-1)
nsubj(has-3, bang-2)
root(ROOT-0, has-3)
det(cause-5, a-4)
dobj(has-3, cause-5)

(ROOT
  (S
    (NP
      (NP (DT The) (NN idea))
      (SBAR (IN that)
        (S
          (NP (NN something))
          (VP (VBZ comes)
            (PP (IN into)
              (NP (NN existence) (NN un-caused)))))))
    (VP (VBZ is)
      (ADJP (JJ absurd)))
    (. .)))

det(idea-2, The-1)
dobj(comes-5, idea-2)
nsubj(absurd-10, idea-2)
complm(comes-5, that-3)
nsubj(comes-5, something-4)
dep(idea-2, comes-5)
nn(un-caused-8, existence-7)
prep_into(comes-5, un-caused-8)
cop(absurd-10, is-9)
root(ROOT-0, absurd-10)

(ROOT
  (S
    (VP (VB Thank)
      (NP (PRP you))
      (PP (IN for)
        (NP (PRP$ your) (NN time))))))

root(ROOT-0, Thank-1)
dobj(Thank-1, you-2)
poss(time-5, your-4)
prep_for(Thank-1, time-5)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (JJ right)
        (PP (IN in)
          (S
            (VP (VBG saying)
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP
                      (NP (DT no) (JJ absolute) (NN proof))
                      (PP (IN of)
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (NP (NN life))
                            (VP (VBD came)
                              (PRT (RP about)))))))))))))))
    (. .)))

nsubj(right-4, You-2)
cop(right-4, are-3)
root(ROOT-0, right-4)
prepc_in(right-4, saying-6)
complm(is-9, that-7)
expl(is-9, there-8)
ccomp(saying-6, is-9)
det(proof-12, no-10)
amod(proof-12, absolute-11)
nsubj(is-9, proof-12)
advmod(came-16, how-14)
nsubj(came-16, life-15)
prepc_of(proof-12, came-16)
prt(came-16, about-17)

(ROOT
  (S
    (ADVP (RB However))
    (VP (VB keep)
      (SBAR
        (S
          (PP (IN in)
            (NP (NN mind)))
          (, ,) (`` ``)
          (NP (NNP Science))
          (VP (VBZ does) (RB n't)
            (VP (VB provide)
              (NP (PRP us))
              (PP (IN with)
                (NP (NN truth))))))))
    (. .)))

advmod(keep-2, However-1)
root(ROOT-0, keep-2)
prep_in(provide-10, mind-4)
nsubj(provide-10, Science-7)
aux(provide-10, does-8)
neg(provide-10, n't-9)
ccomp(keep-2, provide-10)
dobj(provide-10, us-11)
prep_with(provide-10, truth-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NN practice))
      (PP (IN of)
        (NP (JJ scientific) (NN investigation))))
    (VP (VBZ involves)
      (NP
        (NP (NNS tools))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP help)
              (SBAR
                (S
                  (NP (PRP us))
                  (VP (VBP explain)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (DT the) (JJ physical) (NN world))
                        (VP (MD might)
                          (VP (VB work)))))))))))))
    (. .)))

det(practice-2, The-1)
nsubj(involves-6, practice-2)
amod(investigation-5, scientific-4)
prep_of(practice-2, investigation-5)
root(ROOT-0, involves-6)
dobj(involves-6, tools-7)
nsubj(help-9, tools-7)
rcmod(tools-7, help-9)
nsubj(explain-11, us-10)
ccomp(help-9, explain-11)
advmod(work-17, how-12)
det(world-15, the-13)
amod(world-15, physical-14)
nsubj(work-17, world-15)
aux(work-17, might-16)
ccomp(explain-11, work-17)

(ROOT
  (S
    (NP (DT The) (NN explanation))
    (VP (VBZ does) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ true)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ useful) (, ,) (RB just) (JJ consistent))
                      (PP (IN with)
                        (NP
                          (NP (JJS most))
                          (PP (IN of)
                            (NP (DT the) (NN evidence))))))))))))))
    (. .)))

det(explanation-2, The-1)
nsubj(have-5, explanation-2)
xsubj(true-8, explanation-2)
aux(have-5, does-3)
neg(have-5, n't-4)
root(ROOT-0, have-5)
aux(true-8, to-6)
cop(true-8, be-7)
xcomp(have-5, true-8)
aux(consistent-14, to-9)
cop(consistent-14, be-10)
amod(consistent-14, useful-11)
advmod(consistent-14, just-13)
xcomp(true-8, consistent-14)
prep_with(consistent-14, most-16)
det(evidence-19, the-18)
prep_of(most-16, evidence-19)

(ROOT
  (NP
    (NP (NNP ''))
    (PRN (-LRB- -LRB-)
      (NP (NNP Spencer))
      (-RRB- -RRB-))
    (. .)))

appos(''-1, Spencer-3)

(ROOT
  (S
    (NP
      (NP (DT The) (NN evidence))
      (SBAR
        (WHADVP (WRB when))
        (S
          (VP (VBN studied)
            (ADVP (RB just))
            (NP (NNS facts))))))
    (VP (VBZ points)
      (PP (IN towards)
        (NP (DT a) (NN designer))))
    (. .)))

det(evidence-2, The-1)
nsubj(points-7, evidence-2)
advmod(studied-4, when-3)
dep(evidence-2, studied-4)
advmod(studied-4, just-5)
dobj(studied-4, facts-6)
root(ROOT-0, points-7)
det(designer-10, a-9)
prep_towards(points-7, designer-10)

(ROOT
  (S
    (NP (NN Chance))
    (VP (VBZ is)
      (VP (VBN ruled)
        (PRT (RP out))
        (PP (IN through)
          (NP (JJ mathematical) (NN probability)))))
    (. .)))

nsubjpass(ruled-3, Chance-1)
auxpass(ruled-3, is-2)
root(ROOT-0, ruled-3)
prt(ruled-3, out-4)
amod(probability-7, mathematical-6)
prep_through(ruled-3, probability-7)

