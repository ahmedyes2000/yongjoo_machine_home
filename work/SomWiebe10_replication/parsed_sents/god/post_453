(ROOT
  (S
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how))
          (S
            (SBAR
              (WHNP (WP what))
              (S
                (NP (DT the) (NNP Bible))
                (VP (VBZ says))))
            (VP (VBZ is)
              (ADJP (JJ true)))))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, can-2)
neg(see-4, not-3)
root(ROOT-0, see-4)
advmod(true-11, how-5)
dobj(says-9, what-6)
det(Bible-8, the-7)
nsubj(says-9, Bible-8)
csubj(true-11, says-9)
cop(true-11, is-10)
ccomp(see-4, true-11)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (NN someone))
      (VP (VB live)
        (PP (TO to)
          (NP (IN over) (CD 1000) (NNS years)))
        (ADJP (JJ old))))
    (. .)))

advmod(live-4, How-1)
aux(live-4, can-2)
nsubj(live-4, someone-3)
root(ROOT-0, live-4)
amod(years-8, over-6)
num(years-8, 1000-7)
prep_to(live-4, years-8)
acomp(live-4, old-9)

(ROOT
  (SBARQ (RB So)
    (WHNP (WDT which) (NN God))
    (SQ
      (VP (VBD made)
        (NP (DT the)
          (ADJP (NN world)
            (CC and)
            (VBN created))
          (NN life))))
    (. ?)))

advmod(made-4, So-1)
det(God-3, which-2)
nsubj(made-4, God-3)
root(ROOT-0, made-4)
det(life-9, the-5)
amod(life-9, world-6)
conj_and(world-6, created-8)
amod(life-9, created-8)
dobj(made-4, life-9)

(ROOT
  (NP
    (NP (CD 3) (NNS solutions))
    (NP (RB here))
    (. .)))

num(solutions-2, 3-1)
root(ROOT-0, solutions-2)
dep(solutions-2, here-3)

(ROOT
  (S (CC Either)
    (NP (RB only) (CD one))
    (VP (VBZ exists)
      (S
        (VP (VBG making)
          (ADJP
            (NP
              (QP (DT all)
                (CC but)
                (CD one))
              (NN religion))
            (JJ true)))))
    (. .)))

dep(exists-4, Either-1)
advmod(one-3, only-2)
nsubj(exists-4, one-3)
root(ROOT-0, exists-4)
xcomp(exists-4, making-5)
num(religion-9, all-6)
conj_but(all-6, one-8)
num(religion-9, one-8)
npadvmod(true-10, religion-9)
acomp(making-5, true-10)

(ROOT
  (S
    (NP
      (NP (NNP Non))
      (PP (IN of)
        (NP (PRP them))))
    (VP (VBP exist)
      (S
        (VP (VBG making)
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (PRP them)))
            (SBAR
              (S
                (NP
                  (ADJP (JJ false)
                    (CC or)
                    (DT all))
                  (NNS gods))
                (VP (VBP are)
                  (NP (CD one))
                  (ADVP (RB also))))))))
      (S
        (VP (VBG making)
          (S
            (NP (DT all) (NNS reliigions))
            (ADJP (JJ false))))))
    (. .)))

nsubj(exist-4, Non-1)
prep_of(Non-1, them-3)
root(ROOT-0, exist-4)
xcomp(exist-4, making-5)
dobj(making-5, all-6)
prep_of(all-6, them-8)
amod(gods-12, false-9)
conj_or(false-9, all-11)
amod(gods-12, all-11)
nsubj(one-14, gods-12)
cop(one-14, are-13)
rcmod(all-6, one-14)
advmod(one-14, also-15)
xcomp(exist-4, making-16)
det(reliigions-18, all-17)
nsubj(false-19, reliigions-18)
xcomp(making-16, false-19)

(ROOT
  (S
    (NP (NNP Whichever) (NN way))
    (NP
      (NP (DT the) (NN majority))
      (PP (IN of)
        (NP (NN belief))))
    (VP (VBZ is)
      (VP (VBN flawed)
        (CC and)
        (VBN contradicted)
        (PP (IN through)
          (NP (JJ other) (NNS religions)))))
    (. .)))

nn(way-2, Whichever-1)
nsubjpass(flawed-8, way-2)
nsubjpass(contradicted-10, way-2)
det(majority-4, the-3)
nsubjpass(flawed-8, majority-4)
prep_of(majority-4, belief-6)
auxpass(flawed-8, is-7)
root(ROOT-0, flawed-8)
conj_and(flawed-8, contradicted-10)
amod(religions-13, other-12)
prep_through(flawed-8, religions-13)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBZ says)
        (SBAR
          (S
            (S
              (NP (DT the) (NNP Bible))
              (VP (VBZ is)
                (NP (NN fact))))
            (CC and)
            (S
              (NP (DT the) (NNP Quaran))
              (VP (VBZ is)
                (ADJP (JJ false))))))))
    (. ?)))

nsubj(says-2, Who-1)
root(ROOT-0, says-2)
det(Bible-4, the-3)
nsubj(fact-6, Bible-4)
cop(fact-6, is-5)
dep(says-2, fact-6)
det(Quaran-9, the-8)
nsubj(false-11, Quaran-9)
cop(false-11, is-10)
dep(says-2, false-11)
conj_and(fact-6, false-11)

(ROOT
  (S
    (NP (NNP God))
    (VP
      (VP (VBZ has)
        (ADVP (RB supposedly))
        (VP (VBN created)
          (NP (NN life))))
      (CC and)
      (VP (VBD brought)
        (NP (DT a) (JJ beautiful) (NN world))
        (PP (IN upon)
          (NP (PRP us)))))
    (. .)))

nsubj(created-4, God-1)
nsubj(brought-7, God-1)
aux(created-4, has-2)
advmod(created-4, supposedly-3)
root(ROOT-0, created-4)
dobj(created-4, life-5)
conj_and(created-4, brought-7)
det(world-10, a-8)
amod(world-10, beautiful-9)
dobj(brought-7, world-10)
prep_upon(brought-7, us-12)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ has)
      (NP (DT the) (NN power)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (NN anything)))))))
    (. .)))

nsubj(has-2, He-1)
root(ROOT-0, has-2)
det(power-4, the-3)
dobj(has-2, power-4)
aux(do-6, to-5)
infmod(power-4, do-6)
dobj(do-6, anything-7)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ has)
      (NP (PRP he))
      (VP (RB not)
        (ADVP (RB done) (RB any)
          (PP (IN of)
            (NP (DT these)))
          (RB so))
        (VBN called)
        (NP
          (NP (NNS miracles))
          (PP (IN in)
            (NP (PRP$ our) (NN life))))
        (PP (IN like)
          (S
            (VP (VBG turning)
              (NP (NN water))
              (PP (IN into)
                (NP (NN wine) (NN etc.))))))))
    (. .)))

advmod(called-10, Why-1)
aux(called-10, has-2)
nsubj(called-10, he-3)
neg(called-10, not-4)
advmod(so-9, done-5)
advmod(so-9, any-6)
prep_of(so-9, these-8)
advmod(called-10, so-9)
root(ROOT-0, called-10)
dobj(called-10, miracles-11)
poss(life-14, our-13)
prep_in(miracles-11, life-14)
prepc_like(called-10, turning-16)
dobj(turning-16, water-17)
nn(etc.-20, wine-19)
prep_into(turning-16, etc.-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NN world))
      (PP (IN of)
        (NP (NN today))))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (JJ sorry))
        (NN state))
      (, ,)
      (PP (IN with)
        (NP
          (NP (NNS murders))
          (, ,)
          (NP (NNS diseases))
          (CC and)
          (RB even)
          (NP (NNS terrorists)))))
    (. .)))

det(world-2, The-1)
nsubj(state-8, world-2)
prep_of(world-2, today-4)
cop(state-8, is-5)
det(state-8, a-6)
amod(state-8, sorry-7)
root(ROOT-0, state-8)
prep_with(state-8, murders-11)
prep_with(state-8, diseases-13)
conj_and(murders-11, diseases-13)
prep_with(state-8, even-15)
advmod(murders-11, even-15)
conj_and(murders-11, even-15)
dep(murders-11, terrorists-16)

(ROOT
  (SBARQ
    (WHADVP (WRB How)
      (CC and)
      (WRB why))
    (SQ (VBZ does)
      (NP (PRP he))
      (VP (VB let)
        (S
          (NP (DT this))
          (VP (VB happen)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP he))
                (VP (MD can)
                  (ADVP (RB easily))
                  (VP (VB stop)
                    (NP (PRP it))))))))))
    (. ?)))

advmod(let-6, How-1)
dep(How-1, and-2)
dep(How-1, why-3)
aux(let-6, does-4)
nsubj(let-6, he-5)
root(ROOT-0, let-6)
nsubj(happen-8, this-7)
ccomp(let-6, happen-8)
advmod(stop-13, when-9)
nsubj(stop-13, he-10)
aux(stop-13, can-11)
advmod(stop-13, easily-12)
advcl(happen-8, stop-13)
dobj(stop-13, it-14)

(ROOT
  (S
    (S
      (NP (NNS Humans))
      (VP (VBD evolved)
        (PP (IN from)
          (NP (NNP Cavemen)))))
    (, ,)
    (CC and)
    (S
      (NP (WDT whatever))
      (VP (VBD existed)
        (PP (IN before)
          (NP (RB then)))))
    (. .)))

nsubj(evolved-2, Humans-1)
root(ROOT-0, evolved-2)
prep_from(evolved-2, Cavemen-4)
nsubj(existed-8, whatever-7)
conj_and(evolved-2, existed-8)
prep(existed-8, before-9)
pobj(before-9, then-10)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (VP (VBZ thats)
            (NP (DT the) (NN case)))))
      (NP (PRP he))
      (VP (VBZ is)
        (VP (VBG supporting)
          (NP (NN terrorism)))))
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ is) (RB not)
        (NP (PDT such) (DT a) (JJ nice) (JJ creative) (NN being))))
    (. !)))

mark(thats-2, If-1)
advcl(supporting-7, thats-2)
det(case-4, the-3)
dobj(thats-2, case-4)
nsubj(supporting-7, he-5)
aux(supporting-7, is-6)
root(ROOT-0, supporting-7)
dobj(supporting-7, terrorism-8)
nsubj(being-17, that-10)
cop(being-17, is-11)
neg(being-17, not-12)
predet(being-17, such-13)
det(being-17, a-14)
amod(being-17, nice-15)
amod(being-17, creative-16)
conj_and(supporting-7, being-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ has)
      (VP (VBN been)
        (NP (JJR more) (NN evidence)
          (S
            (VP (TO to)
              (VP (VB suggest)
                (S
                  (NP
                    (NP (NN life) (NN form))
                    (PP (IN on)
                      (NP (JJ other) (NNS planets))))
                  (VP (VB exist)
                    (ADVP (RBR more))))))))))
    (. .)))

expl(evidence-5, There-1)
aux(evidence-5, has-2)
cop(evidence-5, been-3)
amod(evidence-5, more-4)
root(ROOT-0, evidence-5)
aux(suggest-7, to-6)
infmod(evidence-5, suggest-7)
nn(form-9, life-8)
nsubj(exist-13, form-9)
amod(planets-12, other-11)
prep_on(form-9, planets-12)
ccomp(suggest-7, exist-13)
advmod(exist-13, more-14)

(ROOT
  (SQ (VBD Did)
    (NP (PRP$ our) (NN God))
    (VP (VB create)
      (NP (PRP them))
      (PP (TO to)))
    (. ?)))

aux(create-4, Did-1)
poss(God-3, our-2)
nsubj(create-4, God-3)
root(ROOT-0, create-4)
dobj(create-4, them-5)
prep(create-4, to-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Bible))
      (PP (IN at)
        (NP (NNS times))))
    (ADVP (RB simply))
    (VP (VBZ defies)
      (NP (DT all) (NN logic) (, ,) (NN science)
        (CC and)
        (NN life))
      (SBAR (IN as)
        (S
          (NP (PRP we))
          (VP (VBP know)
            (NP (PRP it))))))
    (. .)))

det(Bible-2, The-1)
nsubj(defies-6, Bible-2)
prep_at(Bible-2, times-4)
advmod(defies-6, simply-5)
root(ROOT-0, defies-6)
det(logic-8, all-7)
dobj(defies-6, logic-8)
dobj(defies-6, science-10)
conj_and(logic-8, science-10)
dobj(defies-6, life-12)
conj_and(logic-8, life-12)
mark(know-15, as-13)
nsubj(know-15, we-14)
advcl(defies-6, know-15)
dobj(know-15, it-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB argue)
        (PP (IN about)
          (NP (NN religion)
            (CC and)
            (NN science)))))
    (. .)))

nsubj(argue-3, You-1)
aux(argue-3, can-2)
root(ROOT-0, argue-3)
prep_about(argue-3, religion-5)
prep_about(argue-3, science-7)
conj_and(religion-5, science-7)

(ROOT
  (S (CC But)
    (NP (NN science))
    (VP (VBZ makes)
      (NP
        (NP
          (NP (DT the) (NNS componants))
          (PP (IN of)
            (NP (NN existance))))
        (CC and)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ has)
              (ADVP (RB actually))
              (VP (VBN happened)))))))
    (. .)))

cc(makes-3, But-1)
nsubj(makes-3, science-2)
root(ROOT-0, makes-3)
det(componants-5, the-4)
dobj(makes-3, componants-5)
prep_of(componants-5, existance-7)
nsubj(happened-12, what-9)
aux(happened-12, has-10)
advmod(happened-12, actually-11)
dobj(makes-3, happened-12)
conj_and(componants-5, happened-12)
rcmod(componants-5, happened-12)

(ROOT
  (S (CC So)
    (S
      (NP (DT the) (NN science))
      (VP (VBZ is)
        (ADJP
          (NP (CD 100) (NN %))
          (JJ correct))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD can) (RB not)
        (VP (VB modify)
          (NP
            (NP (DT this))
            (PP (IN in)
              (NP (PRP$ its) (JJ complete) (NN state)))))))
    (. .)))

det(science-3, the-2)
nsubj(correct-7, science-3)
cop(correct-7, is-4)
num(%-6, 100-5)
npadvmod(correct-7, %-6)
root(ROOT-0, correct-7)
nsubj(modify-12, you-9)
aux(modify-12, can-10)
neg(modify-12, not-11)
conj_and(correct-7, modify-12)
dobj(modify-12, this-13)
poss(state-17, its-15)
amod(state-17, complete-16)
prep_in(this-13, state-17)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (ADVP (RB mostly))
      (VP (VBG talking)
        (PP (IN about)
          (NP (DT the) (NNP Christian)))
        (ADVP (RB God))
        (FRAG (CC but)
          (WP what) (IN about)
          (NP (NNS others))
          (. ?))))))

nsubj(talking-4, We-1)
aux(talking-4, are-2)
advmod(talking-4, mostly-3)
root(ROOT-0, talking-4)
det(Christian-7, the-6)
prep_about(talking-4, Christian-7)
advmod(talking-4, God-8)
dep(about-11, but-9)
dep(about-11, what-10)
dep(talking-4, about-11)
dep(about-11, others-12)

(ROOT
  (NP
    (NP (JJ Muslim) (NN god))
    (NP
      (NP (NNP Allah))
      (CC and)
      (NP (NNS others)))
    (. ?)))

amod(god-2, Muslim-1)
root(ROOT-0, god-2)
dep(god-2, Allah-3)
dep(god-2, others-5)
conj_and(Allah-3, others-5)

(ROOT
  (SQ (VBP Do)
    (NP (PRP they))
    (VP (VB exist)
      (ADVP (RB too)))
    (. ?)))

aux(exist-3, Do-1)
nsubj(exist-3, they-2)
root(ROOT-0, exist-3)
advmod(exist-3, too-4)

