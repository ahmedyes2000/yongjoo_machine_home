(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (NNS people))
      (VP (VB continue)
        (S
          (VP (TO to)
            (VP (VB bring)
              (PRT (RP up))
              (NP
                (NP (NNP Pascal) (POS 's))
                (NN Wager)))))))
    (. ?)))

advmod(continue-4, Why-1)
aux(continue-4, do-2)
nsubj(continue-4, people-3)
xsubj(bring-6, people-3)
root(ROOT-0, continue-4)
aux(bring-6, to-5)
xcomp(continue-4, bring-6)
prt(bring-6, up-7)
poss(Wager-10, Pascal-8)
dobj(bring-6, Wager-10)

(ROOT
  (S
    (ADVP (RB Firstly))
    (, ,)
    (S
      (NP (PRP it))
      (ADVP (RB completely))
      (VP (VBZ ignores)
        (NP (DT the) (NN fact))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT an) (JJ infinite) (NN set))
                (PP (IN of)
                  (NP (JJ possibile) (NNS gods)))))))))
    (, ,)
    (CC and)
    (ADVP (RB therefore))
    (S
      (NP
        (NP (DT the) (NN chance))
        (PP (IN of)
          (S
            (NP (PRP you))
            (VP (VBG believing)
              (PP (IN in)
                (NP (DT the) (JJ right) (NN one)))))))
      (VP (VBZ is)
        (ADJP (RB infinitesimally) (JJ small))))
    (. .)))

advmod(ignores-5, Firstly-1)
nsubj(ignores-5, it-3)
advmod(ignores-5, completely-4)
root(ROOT-0, ignores-5)
det(fact-7, the-6)
dobj(ignores-5, fact-7)
complm(is-10, that-8)
expl(is-10, there-9)
ccomp(ignores-5, is-10)
det(set-13, an-11)
amod(set-13, infinite-12)
nsubj(is-10, set-13)
amod(gods-16, possibile-15)
prep_of(set-13, gods-16)
advmod(ignores-5, therefore-19)
conj_and(ignores-5, therefore-19)
det(chance-21, the-20)
nsubj(small-31, chance-21)
nsubj(believing-24, you-23)
prepc_of(chance-21, believing-24)
det(one-28, the-26)
amod(one-28, right-27)
prep_in(believing-24, one-28)
cop(small-31, is-29)
advmod(small-31, infinitesimally-30)
ccomp(ignores-5, small-31)
conj_and(ignores-5, small-31)

(ROOT
  (S
    (ADVP (RB Secondly))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does) (RB n't)
      (VP (VB explore)
        (NP
          (NP
            (NP (DT the) (NN possibility))
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NN god))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ does)))))
                (VP (VBP exist)
                  (SBAR
                    (S
                      (NP (DT either))
                      (VP (VBZ does) (RB n't)
                        (VP (VB want)
                          (S
                            (NP (PRP you))
                            (VP (TO to)
                              (VP (VB believe)
                                (PP (IN in)
                                  (NP (PRP him))))))))))))))
          (, ,)
          (CC or)
          (NP
            (NP (JJ punishes) (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD believed)
                  (PP (IN in)
                    (NP (DT the) (JJ wrong) (NN god) (JJR more)))
                  (SBAR (IN than)
                    (S
                      (NP (PRP he))
                      (VP (VBZ does)
                        (NP
                          (NP (NNS people))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (ADVP (RB simply))
                              (VP (VBD did) (RB n't)
                                (VP (VB believe)
                                  (PP (IN in)
                                    (NP (DT any) (NN god))))))))))))))))))
    (. .)))

advmod(explore-6, Secondly-1)
nsubj(explore-6, it-3)
aux(explore-6, does-4)
neg(explore-6, n't-5)
root(ROOT-0, explore-6)
det(possibility-8, the-7)
dobj(explore-6, possibility-8)
complm(exist-14, that-9)
det(god-11, the-10)
nsubj(does-13, god-11)
nsubj(exist-14, god-11)
rcmod(god-11, does-13)
dep(possibility-8, exist-14)
nsubj(want-18, either-15)
aux(want-18, does-16)
neg(want-18, n't-17)
ccomp(exist-14, want-18)
nsubj(believe-21, you-19)
aux(believe-21, to-20)
xcomp(want-18, believe-21)
prep_in(believe-21, him-23)
amod(people-27, punishes-26)
dobj(explore-6, people-27)
conj_or(possibility-8, people-27)
nsubj(believed-29, people-27)
rcmod(people-27, believed-29)
det(more-34, the-31)
amod(more-34, wrong-32)
dep(more-34, god-33)
prep_in(believed-29, more-34)
mark(does-37, than-35)
nsubj(does-37, he-36)
advcl(believed-29, does-37)
dobj(does-37, people-38)
nsubj(believe-43, people-38)
advmod(believe-43, simply-40)
aux(believe-43, did-41)
neg(believe-43, n't-42)
rcmod(people-38, believe-43)
det(god-46, any-45)
prep_in(believe-43, god-46)

(ROOT
  (S
    (ADVP (RB Thirdly))
    (, ,)
    (NP (PRP it))
    (VP
      (VP (VBZ assumes)
        (SBAR (IN that)
          (S
            (NP (NN god))
            (VP (VBZ is)
              (NP (DT an) (NN idiot))))))
      (CC and)
      (VP (MD ca) (RB n't)
        (VP (VB tell)
          (NP
            (NP (DT the) (NN difference))
            (PP (IN between)
              (NP
                (NP
                  (NP (NNS people))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (ADVP (RB actually))
                      (VP (VBP believe)))))
                (, ,)
                (CC and)
                (NP
                  (NP (NNS people))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP are)
                        (VP (VBG believing)
                          (ADJP (RB just) (JJ incase)))))))))))))
    (. .)))

advmod(assumes-4, Thirdly-1)
nsubj(assumes-4, it-3)
nsubj(tell-13, it-3)
root(ROOT-0, assumes-4)
complm(idiot-9, that-5)
nsubj(idiot-9, god-6)
cop(idiot-9, is-7)
det(idiot-9, an-8)
ccomp(assumes-4, idiot-9)
aux(tell-13, ca-11)
neg(tell-13, n't-12)
conj_and(assumes-4, tell-13)
det(difference-15, the-14)
dobj(tell-13, difference-15)
prep_between(difference-15, people-17)
nsubj(believe-20, people-17)
advmod(believe-20, actually-19)
rcmod(people-17, believe-20)
prep_between(difference-15, people-23)
conj_and(people-17, people-23)
nsubj(believing-26, people-23)
aux(believing-26, are-25)
rcmod(people-23, believing-26)
advmod(incase-28, just-27)
acomp(believing-26, incase-28)

(ROOT
  (S
    (S
      (VP (VBG Living)
        (PP (IN by)
          (NP
            (NP (NNP Pascal) (POS 's))
            (NN Wager)))))
    (VP (VBZ is)
      (NP (DT a) (JJ foolish) (NN way)
        (S
          (VP (TO to)
            (VP (VB live))))))
    (. .)))

csubj(way-9, Living-1)
poss(Wager-5, Pascal-3)
prep_by(Living-1, Wager-5)
cop(way-9, is-6)
det(way-9, a-7)
amod(way-9, foolish-8)
root(ROOT-0, way-9)
aux(live-11, to-10)
infmod(way-9, live-11)

