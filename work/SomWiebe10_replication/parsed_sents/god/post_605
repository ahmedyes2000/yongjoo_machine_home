(ROOT
  (S
    (VP (VB Nicepost))
    (. .)))

root(ROOT-0, Nicepost-1)

(ROOT
  (X
    (SBARQ
      (WHNP
        (NP (NNP One) (NN thing))
        (PP (IN though)))
      (. .))
    (. .)))

nn(thing-2, One-1)
root(ROOT-0, thing-2)
prep(thing-2, though-3)

(ROOT
  (S (IN So)
    (S
      (S
        (NP (PRP we))
        (VP (MD can)
          (VP (VB be)
            (VP
              (ADVP (RB here) (RB right) (RB now))
              (VBG running)
              (PP (IN around)
                (S
                  (VP (VBG trying)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (NP (PRP it))
                          (ADVP (DT all) (RB right))))))))))))
      (, ,)
      (CC or)
      (S
        (NP (PRP we))
        (VP (MD can)
          (VP (VB follow)
            (NP (JJ Gods) (NN advice))))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD 'll)
        (VP (VB get)
          (ADVP (RB there)))))
    (PP (IN in)
      (NP (DT the) (NN end)))
    (. .)))

dep(running-8, So-1)
nsubj(running-8, we-2)
aux(running-8, can-3)
aux(running-8, be-4)
advmod(now-7, here-5)
advmod(now-7, right-6)
advmod(running-8, now-7)
root(ROOT-0, running-8)
prepc_around(running-8, trying-10)
aux(make-12, to-11)
xcomp(trying-10, make-12)
dobj(make-12, it-13)
dep(right-15, all-14)
advmod(make-12, right-15)
nsubj(follow-20, we-18)
aux(follow-20, can-19)
conj_or(running-8, follow-20)
amod(advice-22, Gods-21)
dobj(follow-20, advice-22)
nsubj(get-26, we-24)
aux(get-26, 'll-25)
conj_and(running-8, get-26)
advmod(get-26, there-27)
det(end-30, the-29)
prep_in(running-8, end-30)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ hard)
        (CC and)
        (JJ loooooong)
        (S
          (VP (TO to)
            (VP (VB explain)
              (S
                (VP (CC but)
                  (VP (VB ask)
                    (NP (PRP me))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (NNP God))
                        (VP (VBZ says)
                          (SBAR (IN that)
                            (S
                              (VP (VBZ is)
                                (ADJP (JJ wrong))
                                (PRN (-LRB- -LRB-)
                                  (NP
                                    (NP (CD one))
                                    (PP (IN of)
                                      (NP (DT those) (NNS rules) (NNS thats)))
                                    (PP (IN in)
                                      (NP (DT all) (NNS religions))))
                                  (-RRB- -RRB-)))))))))
                  (CC and)
                  (VP
                    (ADVP (RB then))
                    (VB tell)
                    (NP (PRP me))
                    (SBAR (IN that) (IN if)
                      (S
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP he))
                            (VP (VBZ says))))
                        (VP (VBZ is) (RB n't)
                          (ADJP (JJ wrong))))))))
              (: ...)
              (SBARQ
                (WHADVP (WRB why))
                (SQ (MD should)
                  (NP (PRP we))
                  (VP (RB not) (VB follow)
                    (NP (PRP him))))))))))
    (. .)))

nsubj(hard-3, It-1)
nsubj(loooooong-5, It-1)
cop(hard-3, 's-2)
root(ROOT-0, hard-3)
conj_and(hard-3, loooooong-5)
aux(explain-7, to-6)
xcomp(hard-3, explain-7)
ccomp(explain-7, ask-9)
dobj(ask-9, me-10)
dep(says-13, what-11)
nsubj(wrong-16, what-11)
nsubj(says-13, God-12)
dep(ask-9, says-13)
complm(wrong-16, that-14)
cop(wrong-16, is-15)
ccomp(says-13, wrong-16)
dep(wrong-16, one-18)
det(thats-22, those-20)
nn(thats-22, rules-21)
prep_of(one-18, thats-22)
det(religions-25, all-24)
prep_in(one-18, religions-25)
advmod(tell-29, then-28)
ccomp(explain-7, tell-29)
conj_and(ask-9, tell-29)
dobj(tell-29, me-30)
complm(wrong-38, that-31)
dep(wrong-38, if-32)
dobj(says-35, what-33)
nsubj(says-35, he-34)
csubj(wrong-38, says-35)
cop(wrong-38, is-36)
neg(wrong-38, n't-37)
ccomp(tell-29, wrong-38)
advmod(follow-44, why-40)
aux(follow-44, should-41)
nsubj(follow-44, we-42)
neg(follow-44, not-43)
parataxis(explain-7, follow-44)
dobj(follow-44, him-45)

(ROOT
  (S
    (VP (VB do) (RB n't)
      (VP (VB take)
        (NP (DT the) (NN debate) (NN description))
        (PP (IN as)
          (NP (PRP$ my) (JJ main) (NN point)))))
    (. .)))

aux(take-3, do-1)
neg(take-3, n't-2)
root(ROOT-0, take-3)
det(description-6, the-4)
nn(description-6, debate-5)
dobj(take-3, description-6)
poss(point-10, my-8)
amod(point-10, main-9)
prep_as(take-3, point-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP
              (VP (VB put)
                (ADVP
                  (ADVP (RB too) (RB much) (RB there))
                  (SBAR (IN as)
                    (S
                      (NP (PRP it))
                      (VP (MD would)
                        (VP (VBP 've) (RB all)
                          (VP (VBN pointed)
                            (PP (IN towards)
                              (NP
                                (NP (PRP$ my) (NN side))
                                (PP (IN of)
                                  (NP (DT the) (NN argument))))))))))))
              (CONJP (RB rather) (IN than))
              (VP
                (ADVP (RB just))
                (VB give)
                (NP
                  (NP (DT a) (JJ brief) (NN intro))
                  (SBAR
                    (WHPP (TO to)
                      (WHNP (WP what)))
                    (S
                      (NP (PRP we))
                      (VP (MD should)
                        (VP (VB be)
                          (VP (VBG talking) (IN about)))))))))))))
    (. .)))

nsubj(want-4, I-1)
xsubj(put-6, I-1)
aux(want-4, did-2)
neg(want-4, n't-3)
root(ROOT-0, want-4)
aux(put-6, to-5)
xcomp(want-4, put-6)
advmod(there-9, too-7)
advmod(there-9, much-8)
advmod(put-6, there-9)
mark(pointed-15, as-10)
nsubj(pointed-15, it-11)
aux(pointed-15, would-12)
aux(pointed-15, 've-13)
advmod(pointed-15, all-14)
ccomp(there-9, pointed-15)
poss(side-18, my-17)
prep_towards(pointed-15, side-18)
det(argument-21, the-20)
prep_of(side-18, argument-21)
advmod(give-25, just-24)
xcomp(want-4, give-25)
conj_negcc(put-6, give-25)
det(intro-28, a-26)
amod(intro-28, brief-27)
dobj(give-25, intro-28)
rel(talking-34, what-30)
nsubj(talking-34, we-31)
aux(talking-34, should-32)
aux(talking-34, be-33)
rcmod(intro-28, talking-34)
dep(talking-34, about-35)

(ROOT
  (S (RB So)
    (VP (VB let)
      (S
        (NP (POS 's))
        (VP (VB go)
          (PP (IN into)
            (NP (PRP$ your) (NN talk)))
          (PP (IN about)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (NN law))
                (VP (VBP work)
                  (ADJP (RB just) (JJ fine)))))))))
    (. .)))

advmod(let-2, So-1)
root(ROOT-0, let-2)
nsubj(go-4, 's-3)
ccomp(let-2, go-4)
poss(talk-7, your-6)
prep_into(go-4, talk-7)
advmod(work-11, how-9)
nsubj(work-11, law-10)
prepc_about(go-4, work-11)
advmod(fine-13, just-12)
acomp(work-11, fine-13)

(ROOT
  (S
    (NP (NNS Laws))
    (VP (VBP are)
      (VP (VBG changing)
        (NP (PDT all) (DT the) (NN time) (NN right))))
    (. ?)))

nsubj(changing-3, Laws-1)
aux(changing-3, are-2)
root(ROOT-0, changing-3)
predet(right-7, all-4)
det(right-7, the-5)
nn(right-7, time-6)
dobj(changing-3, right-7)

(ROOT
  (S
    (SBAR (RB Now) (IN if)
      (S
        (NP (PRP they))
        (VP (VBD were)
          (ADJP (JJ good)))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP they))
    (VP (MD would) (RB n't)
      (VP (VB need)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN changed)))))))
    (. .)))

advmod(good-5, Now-1)
dep(good-5, if-2)
nsubj(good-5, they-3)
cop(good-5, were-4)
advcl(need-11, good-5)
advmod(need-11, then-7)
nsubj(need-11, they-8)
xsubj(changed-14, they-8)
aux(need-11, would-9)
neg(need-11, n't-10)
root(ROOT-0, need-11)
aux(changed-14, to-12)
auxpass(changed-14, be-13)
xcomp(need-11, changed-14)

(ROOT
  (FRAG (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP they))
        (VP (VBP have)
          (VP (VBN been)
            (VP (VBN changed)
              (NP
                (NP (RB then))
                (SBAR (WP$ whose)
                  (S
                    (NP (TO to))
                    (VP (VBP say)
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (VP (VBP do) (RB not)
                            (VP (VB need)
                              (S
                                (VP (TO to)
                                  (VP (VB be)
                                    (VP (VBN changed)
                                      (ADVP (RB again)))))))))))))))))))
    (. ?)))

dep(changed-6, And-1)
mark(changed-6, if-2)
nsubjpass(changed-6, they-3)
aux(changed-6, have-4)
auxpass(changed-6, been-5)
root(ROOT-0, changed-6)
dobj(changed-6, then-7)
dep(say-10, whose-8)
nsubj(say-10, to-9)
dep(then-7, say-10)
complm(need-15, that-11)
nsubj(need-15, they-12)
xsubj(changed-18, they-12)
aux(need-15, do-13)
neg(need-15, not-14)
ccomp(say-10, need-15)
aux(changed-18, to-16)
auxpass(changed-18, be-17)
xcomp(need-15, changed-18)
advmod(changed-18, again-19)

(ROOT
  (S
    (NP
      (NP (NNP God) (POS 's))
      (NNS Words))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB be)
        (ADJP (JJ right)
          (PP (IN till)
            (NP
              (NP (DT the) (NN end))
              (PP (IN of)
                (NP (NN time))))))))
    (. .)))

poss(Words-3, God-1)
nsubj(right-7, Words-3)
aux(right-7, will-4)
advmod(right-7, always-5)
cop(right-7, be-6)
root(ROOT-0, right-7)
det(end-10, the-9)
prep_till(right-7, end-10)
prep_of(end-10, time-12)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (RB just))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (NP (PRP it)))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (DT the) (NN end)))
      (NP (PRP we))
      (VP (MD will)
        (VP (VB see)
          (NP (PRP it)))))
    (. .)))

nsubj(see-5, We-1)
advmod(see-5, just-2)
aux(see-5, do-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
dobj(see-5, it-6)
det(end-11, the-10)
prep_in(see-14, end-11)
nsubj(see-14, we-12)
aux(see-14, will-13)
conj_but(see-5, see-14)
dobj(see-14, it-15)

