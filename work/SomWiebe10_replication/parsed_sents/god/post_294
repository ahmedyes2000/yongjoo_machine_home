(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP find)
      (SBAR
        (S
          (NP (PRP it))
          (VP
            (VP (VBZ interesting)
              (NP
                (NP (PRP$ your) (JJ weak) (NN way))
                (PP (IN of)
                  (NP (NN discrediting))))
              (NP (DT a) (JJ reputable) (NN scientist)))
            (, ,)
            (CC but)
            (VP (VBP say)
              (S
                (VP (VBG noting)
                  (PP (IN of)
                    (NP
                      (NP (NNP Ruse))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBZ has)
                            (VP (VBN said)
                              (NP (PRP himself))
                              (SBAR (IN that)
                                (S
                                  (NP (NNP Behe))
                                  (VP (VBZ is)
                                    (NP (DT a) (JJ reputable) (NN scientist))))))))))))))))))
    (. .)))

nsubj(find-3, I-2)
root(ROOT-0, find-3)
nsubj(interesting-5, it-4)
nsubj(say-16, it-4)
ccomp(find-3, interesting-5)
poss(way-8, your-6)
amod(way-8, weak-7)
iobj(interesting-5, way-8)
prep_of(way-8, discrediting-10)
det(scientist-13, a-11)
amod(scientist-13, reputable-12)
dobj(interesting-5, scientist-13)
ccomp(find-3, say-16)
conj_but(interesting-5, say-16)
xcomp(say-16, noting-17)
prep_of(noting-17, Ruse-19)
nsubj(said-22, Ruse-19)
aux(said-22, has-21)
rcmod(Ruse-19, said-22)
dobj(said-22, himself-23)
complm(scientist-29, that-24)
nsubj(scientist-29, Behe-25)
cop(scientist-29, is-26)
det(scientist-29, a-27)
amod(scientist-29, reputable-28)
ccomp(said-22, scientist-29)

(ROOT
  (S ('' '')
    (NP (RB Yet) (NNP Michale))
    (VP (VBP Ruse)
      (SBAR
        (S
          (NP (PRP himself))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN philosopher))
              (, ,) (RB not)
              (NP (DT a) (NN Scientist)))))))
    (. .)))

advmod(Michale-3, Yet-2)
nsubj(Ruse-4, Michale-3)
root(ROOT-0, Ruse-4)
nsubj(philosopher-8, himself-5)
cop(philosopher-8, is-6)
det(philosopher-8, a-7)
ccomp(Ruse-4, philosopher-8)
neg(philosopher-8, not-10)
det(Scientist-12, a-11)
dep(philosopher-8, Scientist-12)

(ROOT
  (S
    (S
      (S
        (VP (VBG Saying)
          (SBAR (IN that) (IN because)
            (S
              (NP (PRP we))
              (VP (VBP exist)
                (SBAR
                  (S
                    (NP (NN gravity))
                    (VP (MD must)
                      (VP (VB have)
                        (NP (DT this) (NN value)))))))))))
      (VP (VBZ is) (RB not)
        (NP (DT a) (JJ reasonable) (NN statement))))
    (: ...)
    (S
      (ADVP (RB rather))
      (NP (PRP we))
      (VP (VBP exist)
        (SBAR (IN because)
          (S
            (NP (NN gravity))
            (VP (VBZ has)
              (NP (DT that) (NN value)))))))
    (. .)))

csubj(statement-15, Saying-1)
complm(exist-5, that-2)
dep(exist-5, because-3)
nsubj(exist-5, we-4)
ccomp(Saying-1, exist-5)
nsubj(have-8, gravity-6)
aux(have-8, must-7)
ccomp(exist-5, have-8)
det(value-10, this-9)
dobj(have-8, value-10)
cop(statement-15, is-11)
neg(statement-15, not-12)
det(statement-15, a-13)
amod(statement-15, reasonable-14)
root(ROOT-0, statement-15)
advmod(exist-19, rather-17)
nsubj(exist-19, we-18)
parataxis(statement-15, exist-19)
mark(has-22, because-20)
nsubj(has-22, gravity-21)
advcl(exist-19, has-22)
det(value-24, that-23)
dobj(has-22, value-24)

(ROOT
  (S ('' '')
    (PP (IN Guillermo)
      (NP (NNP Gonzalez)))
    (, ,)
    (NP (NNP Jay) (NNP W) (NNP Richards) ('' '') (NNP I))
    (VP (VBP have)
      (ADVP (RB never))
      (VP (VBN been)
        (NP (DT a)
          (NP (NN supporter))
          (PP (IN of)
            (NP (DT the)))
          ('' '')
          (NP (NNP Rare) (NNP Earth) (NNP Hypothesis)))))
    ('' '')))

prep_guillermo(supporter-14, Gonzalez-3)
nn(I-9, Jay-5)
nn(I-9, W-6)
nn(I-9, Richards-7)
nsubj(supporter-14, I-9)
aux(supporter-14, have-10)
neg(supporter-14, never-11)
cop(supporter-14, been-12)
det(supporter-14, a-13)
root(ROOT-0, supporter-14)
prep_of(supporter-14, the-16)
nn(Hypothesis-20, Rare-18)
nn(Hypothesis-20, Earth-19)
dep(supporter-14, Hypothesis-20)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB also))
    (VP (VBP give)
      (NP
        (NP (DT no) (NN context))
        (PP (IN for)
          (NP (DT that) (NN statement)))))
    (. .)))

nsubj(give-3, You-1)
advmod(give-3, also-2)
root(ROOT-0, give-3)
det(context-5, no-4)
dobj(give-3, context-5)
det(statement-8, that-7)
prep_for(context-5, statement-8)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBP suppose)
        (SBAR (IN because)
          (S
            (NP (PRP you))
            (VP (VBP say)
              (NP (PRP it))
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (ADJP (JJ true))))))))))
    (, ,) (RB then)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ true))))
    (. .)))

nsubj(suppose-3, I-2)
root(ROOT-0, suppose-3)
mark(say-6, because-4)
nsubj(say-6, you-5)
advcl(suppose-3, say-6)
dobj(say-6, it-7)
complm(true-11, that-8)
nsubj(true-11, it-9)
cop(true-11, is-10)
ccomp(say-6, true-11)
advmod(suppose-3, then-13)
nsubj(true-16, it-14)
cop(true-16, is-15)
ccomp(suppose-3, true-16)

(ROOT
  (S ('' '')
    (ADVP (RB No))
    (, ,)
    (NP (PRP I))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP it))
          (`` ``)
          (VP (VBZ is)
            (ADJP (JJ true))
            ('' '')
            (SBAR (IN because)
              (S
                (NP (DT the) (NN evidence))
                (ADVP (RB strongly))
                (VP (VBZ suggests)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (ADJP (JJ true))))))))))))
    (. .)))

advmod(say-5, No-2)
nsubj(say-5, I-4)
root(ROOT-0, say-5)
nsubj(true-9, it-6)
cop(true-9, is-8)
ccomp(say-5, true-9)
mark(suggests-15, because-11)
det(evidence-13, the-12)
nsubj(suggests-15, evidence-13)
advmod(suggests-15, strongly-14)
advcl(true-9, suggests-15)
complm(true-19, that-16)
nsubj(true-19, it-17)
cop(true-19, is-18)
ccomp(suggests-15, true-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (ADJP (RB rather) (JJ interesting)))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD would)
            (VP (VB name) ('' '')
              (NP
                (NP (NNP Debating) (NNP Design))
                ('' '')
                (SBAR
                  (S
                    (ADVP (RB then))
                    (VP (VBP go)
                      (PRT (RP on))
                      (S
                        (VP (TO to)
                          (VP (VB talk)
                            (PP (IN about)
                              (NP (DT the) (NN flagellum)))))
                        (: ...)
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP
                              (NP (CD one))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NNS essays))
                                  (PP (IN in)
                                    (NP (NNP Debating) (NNP Design))))))
                            (VP (VBZ demonstrates)
                              (SBAR
                                (WHADVP (WRB how))
                                (S
                                  (NP (DT that) (NN flagellum))
                                  (VP (VBZ is) (`` ``)
                                    (ADJP (RB irreducibly) (JJ complex))
                                    ('' '')))))))))))))))))
    (. .)))

nsubj(find-2, I-1)
root(ROOT-0, find-2)
nsubj(interesting-5, it-3)
advmod(interesting-5, rather-4)
xcomp(find-2, interesting-5)
complm(name-9, that-6)
nsubj(name-9, you-7)
aux(name-9, would-8)
ccomp(find-2, name-9)
nn(Design-12, Debating-11)
dobj(name-9, Design-12)
advmod(go-15, then-14)
rcmod(Design-12, go-15)
prt(go-15, on-16)
aux(talk-18, to-17)
xcomp(go-15, talk-18)
det(flagellum-21, the-20)
prep_about(talk-18, flagellum-21)
advmod(demonstrates-31, when-23)
nsubj(demonstrates-31, one-24)
det(essays-27, the-26)
prep_of(one-24, essays-27)
nn(Design-30, Debating-29)
prep_in(essays-27, Design-30)
advcl(talk-18, demonstrates-31)
parataxis(talk-18, demonstrates-31)
advmod(complex-38, how-32)
det(flagellum-34, that-33)
nsubj(complex-38, flagellum-34)
cop(complex-38, is-35)
advmod(complex-38, irreducibly-37)
ccomp(demonstrates-31, complex-38)

(ROOT
  (S ('' '')
    (NP (NNP Collins) (NNS arguments))
    (VP (VBP are) (RB not)
      (ADJP (JJ philosophical)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP are)
              (ADJP (JJ mathematical)
                (CC and)
                (JJ measurable)))))))
    (. .)))

nn(arguments-3, Collins-2)
nsubj(philosophical-6, arguments-3)
cop(philosophical-6, are-4)
neg(philosophical-6, not-5)
root(ROOT-0, philosophical-6)
nsubj(mathematical-9, they-7)
nsubj(measurable-11, they-7)
cop(mathematical-9, are-8)
dep(philosophical-6, mathematical-9)
dep(philosophical-6, measurable-11)
conj_and(mathematical-9, measurable-11)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP
          (NP (NN example))
          (NP (RB just) (CD one) (NN parameter)))
        (: :)
        (SBAR (IN if)
          (S
            (NP (NN gravity))
            (VP (VBD were)
              (ADJP (JJR stronger))
              (PP (IN by)
                (NP
                  (NP (RB only) (CD one) (NN part))
                  (PP (IN in)
                    (NP
                      (QP (DT a) (CD trillion))
                      (QP (CD trillion) (CD trillion)))))))))))
    (NP (DT the) (NN universe))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN collapsed)
          (PRT (RP back))
          (PP (IN on)
            (NP (PRP itself))))))
    (. .)))

prep_for(collapsed-24, example-2)
advmod(parameter-5, just-3)
num(parameter-5, one-4)
dep(example-2, parameter-5)
mark(stronger-10, if-7)
nsubj(stronger-10, gravity-8)
cop(stronger-10, were-9)
dep(example-2, stronger-10)
advmod(part-14, only-12)
num(part-14, one-13)
prep_by(stronger-10, part-14)
quantmod(trillion-17, a-16)
num(trillion-19, trillion-17)
number(trillion-19, trillion-18)
prep_in(part-14, trillion-19)
det(universe-21, the-20)
nsubj(collapsed-24, universe-21)
aux(collapsed-24, would-22)
aux(collapsed-24, have-23)
root(ROOT-0, collapsed-24)
prt(collapsed-24, back-25)
prep_on(collapsed-24, itself-27)

(ROOT
  (FRAG ('' '')
    (NP (NNP Yes))
    (, ,)
    (PP (CC but)
      (NP
        (NP (RB also) (RB not))
        (ADJP (RB very) (JJ accurate))))
    (. .)))

root(ROOT-0, Yes-2)
dep(Yes-2, but-4)
advmod(not-6, also-5)
dep(but-4, not-6)
advmod(accurate-8, very-7)
amod(not-6, accurate-8)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP do) (RB not)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (JJ variable) (NN gravity))
              (VP (MD can)
                (VP (VB be))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD may)
      (VP (VB be)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBP are)
              (NP
                (NP
                  (QP (RB only) (DT a) (JJ few))
                  (JJ possible) (NNS values))
                (PP (IN for)
                  (NP (NN gravity)
                    (S
                      (VP (TO to)
                        (VP (VB have))))))))))))
    (. .)))

nsubj(know-4, We-1)
aux(know-4, do-2)
neg(know-4, not-3)
ccomp(be-13, know-4)
advmod(be-9, how-5)
amod(gravity-7, variable-6)
nsubj(be-9, gravity-7)
aux(be-9, can-8)
ccomp(know-4, be-9)
nsubj(be-13, it-11)
aux(be-13, may-12)
root(ROOT-0, be-13)
complm(are-16, that-14)
expl(are-16, there-15)
ccomp(be-13, are-16)
quantmod(few-19, only-17)
quantmod(few-19, a-18)
num(values-21, few-19)
amod(values-21, possible-20)
nsubj(are-16, values-21)
prep_for(values-21, gravity-23)
aux(have-25, to-24)
infmod(gravity-23, have-25)

