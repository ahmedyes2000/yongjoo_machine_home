(ROOT
  (S
    (NP (DT that))
    (VP (VBZ 's) (RB not)
      (ADJP (RB quite) (JJ accurate)))
    (. .)))

nsubj(accurate-5, that-1)
cop(accurate-5, 's-2)
neg(accurate-5, not-3)
advmod(accurate-5, quite-4)
root(ROOT-0, accurate-5)

(ROOT
  (S
    (NP
      (NP (NNP First))
      (PP (IN of)
        (NP
          (NP (DT all))
          (, ,)
          (NP (DT the) (JJ unified) (NN force)))))
    (VP (VBZ is) (RB n't)
      (ADVP (RB really))
      (NP (DT a) (NN thing)))
    (. .)))

nsubj(thing-12, First-1)
prep_of(First-1, all-3)
det(force-7, the-5)
amod(force-7, unified-6)
appos(all-3, force-7)
cop(thing-12, is-8)
neg(thing-12, n't-9)
advmod(thing-12, really-10)
det(thing-12, a-11)
root(ROOT-0, thing-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD might)
      (VP (VB be)
        (VP (VBG talking)
          (PP (IN about)
            (NP
              (NP (DT a) (NNP Unified) (NN field))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (NN description))
                      (PP (IN of)
                        (SBAR
                          (WHADJP (WRB how) (JJ strong))
                          (S
                            (NP
                              (NP (JJ nuclear) (NNS forces))
                              (, ,)
                              (NP (JJ weak) (JJ nuclear) (NNS forces))
                              (, ,)
                              (NP (NN electromagnetism))
                              (CC and)
                              (NP (NN gravity)))
                            (VP
                              (VP (VBD interact))
                              (CC and)
                              (VP (VBP are)
                                (ADJP (JJ similar))))))))))))))))
    (. .)))

nsubj(talking-4, You-1)
aux(talking-4, might-2)
aux(talking-4, be-3)
root(ROOT-0, talking-4)
det(field-8, a-6)
nn(field-8, Unified-7)
prep_about(talking-4, field-8)
nsubj(description-13, field-8)
cop(description-13, is-11)
det(description-13, a-12)
rcmod(field-8, description-13)
advmod(strong-16, how-15)
dep(interact-27, strong-16)
amod(forces-18, nuclear-17)
nsubj(interact-27, forces-18)
nsubj(similar-30, forces-18)
amod(forces-22, weak-20)
amod(forces-22, nuclear-21)
conj_and(forces-18, forces-22)
nsubj(interact-27, forces-22)
conj_and(forces-18, electromagnetism-24)
nsubj(interact-27, electromagnetism-24)
conj_and(forces-18, gravity-26)
nsubj(interact-27, gravity-26)
prepc_of(description-13, interact-27)
cop(similar-30, are-29)
prepc_of(description-13, similar-30)
conj_and(interact-27, similar-30)

(ROOT
  (S
    (NP (DT That))
    (VP (MD would)
      (VP (VB give)
        (NP (PRP us))
        (NP (DT the) (NN ability)
          (S
            (VP (TO to)
              (VP (VB say)
                (PP (IN for)
                  (ADJP (JJ certain)))
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (NN everything))
                    (VP
                      (VP (VBZ is)
                        (VP (VBG going)
                          (S
                            (VP (TO to)
                              (VP (VB move))))))
                      (, ,)
                      (CC but)
                      (VP (VBZ does) (RB n't)
                        (ADVP (RB really))
                        (VP (VB give)
                          (NP (PRP us))
                          (NP
                            (NP (RB much))
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NN way))
                                (PP (IN of)
                                  (SBAR
                                    (WHADVP (WRB how))
                                    (S
                                      (NP (DT the) (NN universe))
                                      (VP (VBD was)
                                        (VP (VBN created))))))))))))))))))))
    (. .)))

nsubj(give-3, That-1)
aux(give-3, would-2)
root(ROOT-0, give-3)
iobj(give-3, us-4)
det(ability-6, the-5)
dobj(give-3, ability-6)
aux(say-8, to-7)
infmod(ability-6, say-8)
prep_for(say-8, certain-10)
advmod(going-14, how-11)
nsubj(going-14, everything-12)
xsubj(move-16, everything-12)
nsubj(give-22, everything-12)
aux(going-14, is-13)
ccomp(say-8, going-14)
aux(move-16, to-15)
xcomp(going-14, move-16)
aux(give-22, does-19)
neg(give-22, n't-20)
advmod(give-22, really-21)
ccomp(say-8, give-22)
conj_but(going-14, give-22)
iobj(give-22, us-23)
dobj(give-22, much-24)
det(way-27, the-26)
prep_in(much-24, way-27)
advmod(created-33, how-29)
det(universe-31, the-30)
nsubjpass(created-33, universe-31)
auxpass(created-33, was-32)
prepc_of(way-27, created-33)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (ADJP (JJ true)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (PRP we))
                  (VP (MD can) (RB not)
                    (VP (VB know)
                      (SBAR
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (DT that) (JJ unified) (NN force))
                            (VP (VBZ is))))
                        (, ,)
                        (CC but)
                        (SBAR (IN that)
                          (S
                            (NP (PRP we))
                            (VP (VBP do) (RB n't)
                              (ADVP (RB currently))
                              (VP (VB know)))))))))))))))
    (. .)))

cc(true-5, And-1)
nsubj(true-5, it-2)
cop(true-5, 's-3)
neg(true-5, not-4)
root(ROOT-0, true-5)
aux(say-7, to-6)
xcomp(true-5, say-7)
complm(know-12, that-8)
nsubj(know-12, we-9)
aux(know-12, can-10)
neg(know-12, not-11)
ccomp(say-7, know-12)
dobj(is-17, what-13)
det(force-16, that-14)
amod(force-16, unified-15)
nsubj(is-17, force-16)
ccomp(know-12, is-17)
complm(know-25, that-20)
nsubj(know-25, we-21)
aux(know-25, do-22)
neg(know-25, n't-23)
advmod(know-25, currently-24)
ccomp(know-12, know-25)
conj_but(is-17, know-25)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP we))
          (VP (VBP 're)
            (VP (VBG looking))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(looking-6, why-3)
nsubj(looking-6, we-4)
aux(looking-6, 're-5)
advcl('s-2, looking-6)

