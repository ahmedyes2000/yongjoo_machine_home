(ROOT
  (S
    (ADVP (RB Naturally))
    (, ,)
    (PP (IN for)
      (NP (NN something)
        (S
          (VP (TO to)
            (VP (VB exist))))))
    (NP (PRP we))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (DT either)
                (VP (VB observe)
                  (S
                    (NP (DT the) (NN god))
                    (NP (PRP itself))))
                (CC or)
                (VP (VB observe)
                  (NP
                    (NP (JJ other) (NNS things))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP prove)
                          (NP (PRP$ its) (NN existence)))))))))))))
    (. .)))

advmod(able-10, Naturally-1)
prep_for(able-10, something-4)
aux(exist-6, to-5)
infmod(something-4, exist-6)
nsubj(able-10, we-7)
aux(able-10, must-8)
cop(able-10, be-9)
root(ROOT-0, able-10)
aux(observe-13, to-11)
preconj(observe-13, either-12)
xcomp(able-10, observe-13)
det(god-15, the-14)
nsubj(itself-16, god-15)
xcomp(observe-13, itself-16)
xcomp(able-10, observe-18)
conj_or(observe-13, observe-18)
amod(things-20, other-19)
dobj(observe-18, things-20)
nsubj(prove-22, things-20)
rcmod(things-20, prove-22)
poss(existence-24, its-23)
dobj(prove-22, existence-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP$ my) (NN dog))
          (VP (VBZ exists)
            (SBAR (IN because)
              (S
                (NP (PRP I))
                (VP (MD can)
                  (VP
                    (VP (VB see)
                      (NP (PRP him)))
                    (PRN (, ,)
                      (S
                        (VP (VB touch)
                          (NP (PRP him))))
                      (, ,))
                    (NP (FW etc.))))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
poss(dog-4, my-3)
nsubj(exists-5, dog-4)
ccomp(know-2, exists-5)
mark(see-9, because-6)
nsubj(see-9, I-7)
aux(see-9, can-8)
advcl(exists-5, see-9)
dobj(see-9, him-10)
parataxis(see-9, touch-12)
dobj(touch-12, him-13)
dobj(see-9, etc.-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB extremely) (JJ reasonable))
      (S
        (VP (TO to)
          (VP (VB believe)
            (S
              (NP (NNS electrons))
              (VP (VB exist)
                (PP (RB because) (IN of)
                  (NP
                    (NP (DT the) (JJ massive) (NN amount))
                    (PP (IN of)
                      (NP
                        (NP (JJ observable) (JJ indirect) (NN evidence))
                        (PP (IN for)
                          (NP (PRP$ their) (NN existence)))))))))))))
    (. .)))

nsubj(reasonable-4, It-1)
xsubj(believe-6, It-1)
cop(reasonable-4, is-2)
advmod(reasonable-4, extremely-3)
root(ROOT-0, reasonable-4)
aux(believe-6, to-5)
xcomp(reasonable-4, believe-6)
nsubj(exist-8, electrons-7)
ccomp(believe-6, exist-8)
det(amount-13, the-11)
amod(amount-13, massive-12)
prep_because_of(exist-8, amount-13)
amod(evidence-17, observable-15)
amod(evidence-17, indirect-16)
prep_of(amount-13, evidence-17)
poss(existence-20, their-19)
prep_for(evidence-17, existence-20)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (CC neither)
      (NP (DT a) (NN god))
      (CC nor)
      (NP
        (NP (NN evidence))
        (PP (IN for)
          (NP
            (NP (DT a) (NN god) (POS 's))
            (NN existence)))))
    (VP (MD can)
      (VP (VB be)
        (ADJP (JJ observed))))
    (. .)))

advmod(observed-15, However-1)
preconj(god-5, neither-3)
det(god-5, a-4)
nsubj(observed-15, god-5)
conj_nor(god-5, evidence-7)
nsubj(observed-15, evidence-7)
det(god-10, a-9)
poss(existence-12, god-10)
prep_for(evidence-7, existence-12)
aux(observed-15, can-13)
cop(observed-15, be-14)
root(ROOT-0, observed-15)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (DT a) (NN god))
    (VP (VBZ does) (RB not)
      (VP (VB exist)))
    (. .)))

advmod(exist-7, Therefore-1)
det(god-4, a-3)
nsubj(exist-7, god-4)
aux(exist-7, does-5)
neg(exist-7, not-6)
root(ROOT-0, exist-7)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (ADVP (RB obviously))
    (NP (PRP we))
    (VP (MD can) (RB not)
      (ADVP (RB directly))
      (VP (VB experience)
        (NP (NN god))))
    (. .)))

advmod(experience-8, Now-1)
advmod(experience-8, obviously-3)
nsubj(experience-8, we-4)
aux(experience-8, can-5)
neg(experience-8, not-6)
advmod(experience-8, directly-7)
root(ROOT-0, experience-8)
dobj(experience-8, god-9)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can) (RB not)
      (VP
        (VP (VB see)
          (NP (PRP him)))
        (PRN (, ,)
          (S
            (VP (VB touch)
              (NP (PRP him))))
          (, ,))
        (NP (FW etc.))))
    (. .)))

nsubj(see-4, We-1)
aux(see-4, can-2)
neg(see-4, not-3)
root(ROOT-0, see-4)
dobj(see-4, him-5)
parataxis(see-4, touch-7)
dobj(touch-7, him-8)
dobj(see-4, etc.-10)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (PRP we))
    (VP (MD must)
      (VP (VB observe)
        (NP
          (NP (JJ indirect) (NN evidence))
          (PP (IN of)
            (NP (PRP$ his) (NN existence))))))
    (. .)))

advmod(observe-5, Therefore-1)
nsubj(observe-5, we-3)
aux(observe-5, must-4)
root(ROOT-0, observe-5)
amod(evidence-7, indirect-6)
dobj(observe-5, evidence-7)
poss(existence-10, his-9)
prep_of(evidence-7, existence-10)

(ROOT
  (S
    (ADVP (RB Unfortunately))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP (NN none)))
    (. .)))

advmod(is-4, Unfortunately-1)
expl(is-4, there-3)
root(ROOT-0, is-4)
nsubj(is-4, none-5)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (`` ``) (NN evidence) ('' ''))
      (SBAR
        (S
          (NP (JJ religious) (NNS people))
          (VP (VBP use)))))
    (VP (VBZ is)
      (VP (VBG attempting)
        (S
          (VP (TO to)
            (VP (VB DISPROVE)
              (NP
                (NP
                  (NP (DT the) (JJ big) (NN bang))
                  (, ,)
                  (NP (NN evolution))
                  (, ,) (FW etc))
                (ADJP (RB not) (JJ PROVE)))
              (SBAR (IN that)
                (S
                  (NP (JJ THEIR) (NN side))
                  (VP (VBZ is)
                    (ADJP (JJ correct))))))))))
    (. .)))

det(evidence-4, The-1)
amod(evidence-4, only-2)
dobj(use-8, evidence-4)
nsubj(attempting-10, evidence-4)
xsubj(DISPROVE-12, evidence-4)
amod(people-7, religious-6)
nsubj(use-8, people-7)
rcmod(evidence-4, use-8)
aux(attempting-10, is-9)
root(ROOT-0, attempting-10)
aux(DISPROVE-12, to-11)
xcomp(attempting-10, DISPROVE-12)
det(bang-15, the-13)
amod(bang-15, big-14)
dobj(DISPROVE-12, bang-15)
appos(bang-15, evolution-17)
dep(bang-15, etc-19)
neg(PROVE-21, not-20)
amod(bang-15, PROVE-21)
complm(correct-26, that-22)
amod(side-24, THEIR-23)
nsubj(correct-26, side-24)
cop(correct-26, is-25)
ccomp(DISPROVE-12, correct-26)

(ROOT
  (FRAG (WRB Why) (. ?)))

root(ROOT-0, Why-1)

(ROOT
  (FRAG
    (SBAR (IN Because)
      (S
        (NP (PRP they))
        (VP (VBP have)
          (NP (DT no) (NN evidence)))))
    (. .)))

mark(have-3, Because-1)
nsubj(have-3, they-2)
root(ROOT-0, have-3)
det(evidence-5, no-4)
dobj(have-3, evidence-5)

(ROOT
  (NP
    (NP (DT No) (JJ archaeological) (NN evidence))
    (PP (IN for)
      (NP (DT a) (NNP Garden)))
    (PP (IN of)
      (NP
        (NP (NNP Eden))
        (, ,)
        (NP
          (NP (DT no) (JJ direct) (NN link))
          (PP (IN between)
            (NP (NN prayer)
              (CC and)
              (NN healing)))
          (, ,) (FW etc.))))
    (. .)))

det(evidence-3, No-1)
amod(evidence-3, archaeological-2)
root(ROOT-0, evidence-3)
det(Garden-6, a-5)
prep_for(evidence-3, Garden-6)
prep_of(evidence-3, Eden-8)
det(link-12, no-10)
amod(link-12, direct-11)
appos(Eden-8, link-12)
prep_between(link-12, prayer-14)
prep_between(link-12, healing-16)
conj_and(prayer-14, healing-16)
dep(link-12, etc.-18)

(ROOT
  (S
    (VP (VB Suppose)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT a) (NN god))))))
    (. .)))

root(ROOT-0, Suppose-1)
expl(is-3, there-2)
ccomp(Suppose-1, is-3)
det(god-5, a-4)
nsubj(is-3, god-5)

(ROOT
  (S
    (PP (IN For)
      (NP (NN something)
        (S
          (VP (TO to)
            (VP (VB exist))))))
    (, ,)
    (NP
      (NP (PRP it))
      (CC or)
      (NP
        (NP (NN evidence))
        (PP (IN for)
          (NP (PRP it)))))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ observable))))
    (. .)))

prep_for(observable-13, something-2)
aux(exist-4, to-3)
infmod(something-2, exist-4)
nsubj(observable-13, it-6)
conj_or(it-6, evidence-8)
nsubj(observable-13, evidence-8)
prep_for(evidence-8, it-10)
aux(observable-13, must-11)
cop(observable-13, be-12)
root(ROOT-0, observable-13)

