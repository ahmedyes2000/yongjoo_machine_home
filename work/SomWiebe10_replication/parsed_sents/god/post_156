(ROOT
  (S
    (NP
      (NP (DT The) (NN absence))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ does) (RB not)
      (VP (VB prove)
        (NP (NN absence))))
    (. .)))

det(absence-2, The-1)
nsubj(prove-7, absence-2)
prep_of(absence-2, proof-4)
aux(prove-7, does-5)
neg(prove-7, not-6)
root(ROOT-0, prove-7)
dobj(prove-7, absence-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN absence))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ does) (RB not)
      (VP (VB prove)
        (NP (NN presence))
        (, ,)
        (ADVP (RB either))))
    (. .)))

det(absence-2, The-1)
nsubj(prove-7, absence-2)
prep_of(absence-2, proof-4)
aux(prove-7, does-5)
neg(prove-7, not-6)
root(ROOT-0, prove-7)
dobj(prove-7, presence-8)
advmod(prove-7, either-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN absence))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ does) (RB not)
      (VP (VB provide)
        (NP (NN reason))
        (S
          (VP (TO to)
            (VP (VB consider)
              (S
                (NP (NNP God))
                (ADJP (RB even) (JJ possible))))))))
    (. .)))

det(absence-2, The-1)
nsubj(provide-7, absence-2)
prep_of(absence-2, proof-4)
aux(provide-7, does-5)
neg(provide-7, not-6)
root(ROOT-0, provide-7)
dobj(provide-7, reason-8)
aux(consider-10, to-9)
xcomp(provide-7, consider-10)
nsubj(possible-13, God-11)
advmod(possible-13, even-12)
xcomp(consider-10, possible-13)

(ROOT
  (FRAG
    (PP (IN After)
      (NP
        (NP (CD 10,000) (NNS years))
        (PP (IN of)
          (NP (NN belief)))))
    (. .)))

root(ROOT-0, After-1)
num(years-3, 10,000-2)
pobj(After-1, years-3)
prep_of(years-3, belief-5)

(ROOT
  (S
    (S
      (NP (EX there))
      (VP (VBZ is) (RB not)
        (NP
          (NP (RB even) (DT a) (JJ decent) (NN collection))
          (PP (IN of)
            (NP
              (NP (NN evidence))
              (, ,)
              (ADVP (VB let) (JJ alone))
              (NP (NN proof)))))))
    (, ,)
    (NP (PRP one))
    (VP (MD must)
      (VP (VB conclude)
        (SBAR (IN that)
          (S
            (NP (PDT such) (DT an) (NN entity))
            (VP (VBZ is)
              (VP (VBN misconceived)))))))
    (. .)))

expl(is-2, there-1)
ccomp(conclude-17, is-2)
neg(is-2, not-3)
advmod(collection-7, even-4)
det(collection-7, a-5)
amod(collection-7, decent-6)
nsubj(is-2, collection-7)
prep_of(collection-7, evidence-9)
dep(alone-12, let-11)
advmod(evidence-9, alone-12)
dep(evidence-9, proof-13)
nsubj(conclude-17, one-15)
aux(conclude-17, must-16)
root(ROOT-0, conclude-17)
complm(misconceived-23, that-18)
predet(entity-21, such-19)
det(entity-21, an-20)
nsubjpass(misconceived-23, entity-21)
auxpass(misconceived-23, is-22)
ccomp(conclude-17, misconceived-23)

(ROOT
  (S
    (NP (DT The) (JJ pervasive) (NNP Judeo-Christian-islamic) (NNP God))
    (VP (MD should)
      (VP (VB have)
        (VP (VBN been)
          (ADVP (RB clearly))
          (VP (VBN proven)
            (ADVP (RB long) (RB ago))))))
    (. .)))

det(God-4, The-1)
amod(God-4, pervasive-2)
nn(God-4, Judeo-Christian-islamic-3)
nsubjpass(proven-9, God-4)
aux(proven-9, should-5)
aux(proven-9, have-6)
auxpass(proven-9, been-7)
advmod(proven-9, clearly-8)
root(ROOT-0, proven-9)
advmod(ago-11, long-10)
advmod(proven-9, ago-11)

(ROOT
  (SQ (VBZ Is)
    (NP (EX there))
    (NP (NN something))
    (NP
      (NP (`` ``)
        (NP (JJR bigger))
        ('' '')
        (PP (IN than)
          (NP
            (NP (PRP us))
            (, ,)
            (NP (NN something)))))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ is)
            (ADVP (RB everywhere))
            (PP (IN at)
              (NP
                (NP (DT the) (JJ same) (NN time))
                (, ,)
                (NP
                  (NP (NN something))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ contains)
                        (NP
                          (NP (PDT all) (DT the) (NN knowledge))
                          (SBAR
                            (S
                              (NP (EX there))
                              (VP (VBZ is)))))))))))))))
    (. ?)))

root(ROOT-0, Is-1)
expl(Is-1, there-2)
nsubj(Is-1, something-3)
attr(Is-1, bigger-5)
nsubj(Is-1, bigger-5)
nsubj(is-12, bigger-5)
prep_than(bigger-5, us-8)
appos(us-8, something-10)
rcmod(bigger-5, is-12)
advmod(is-12, everywhere-13)
det(time-17, the-15)
amod(time-17, same-16)
prep_at(is-12, time-17)
appos(time-17, something-19)
nsubj(contains-21, something-19)
rcmod(something-19, contains-21)
predet(knowledge-24, all-22)
det(knowledge-24, the-23)
dobj(contains-21, knowledge-24)
expl(is-26, there-25)
rcmod(knowledge-24, is-26)

(ROOT
  (S
    (NP
      (NP (NNP Nature))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP we))
          (VP (VBP do)
            (SBAR
              (S
                (VP (VBP perceive)))))))
      (, ,))
    (ADVP (RB certainly))
    (VP (VBZ qualifies))
    (. .)))

nsubj(perceive-6, Nature-1)
nsubj(qualifies-9, Nature-1)
rel(do-5, which-3)
nsubj(do-5, we-4)
rcmod(Nature-1, do-5)
ccomp(do-5, perceive-6)
advmod(qualifies-9, certainly-8)
root(ROOT-0, qualifies-9)

(ROOT
  (S
    (NP
      (NP (NN Conceiving))
      (PP (IN of)
        (NP
          (NP (NNP God))
          (PP (IN as)
            (NP (DT a) (JJ conscious) (NN being))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ wrong) (NN way))
        (PP (IN of)
          (S
            (VP (VBG conceiving)
              (PP (IN of)
                (NP (NNS answers)))
              (PP (TO to)
                (NP (DT the) (NNS questions)))
              (ADVP (RB above)))))))
    (. .)))

nsubj(way-11, Conceiving-1)
prep_of(Conceiving-1, God-3)
det(being-7, a-5)
amod(being-7, conscious-6)
prep_as(God-3, being-7)
cop(way-11, is-8)
det(way-11, a-9)
amod(way-11, wrong-10)
root(ROOT-0, way-11)
prepc_of(way-11, conceiving-13)
prep_of(conceiving-13, answers-15)
det(questions-18, the-17)
prep_to(conceiving-13, questions-18)
advmod(conceiving-13, above-19)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP
              (NP (PDT such) (DT a) (JJ long-standing) (NN absence))
              (PP (IN of)
                (NP (NN proof))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod('s-5, why-3)
expl('s-5, there-4)
advcl('s-2, 's-5)
predet(absence-9, such-6)
det(absence-9, a-7)
amod(absence-9, long-standing-8)
nsubj('s-5, absence-9)
prep_of(absence-9, proof-11)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (ADVP (RB validly))
      (VP (VB say)
        (PRN (, ,)
          (S
            (NP (EX There))
            (VP (VBZ is)
              (NP
                (NP (DT no) (JJ such) (NN thing))
                (PP (IN as)
                  (NP (NNP God))))))
          (, ,))
        (SBAR (IN as)
          (S
            (VP (VBD described)
              (PP (IN by)
                (NP
                  (NP (DT those))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP claim)
                        (S
                          (VP (TO to)
                            (VP (VB think)
                              (ADVP (RB so)))))))))))))))
    (. .)))

advmod(say-6, So-1)
nsubj(say-6, we-3)
aux(say-6, can-4)
advmod(say-6, validly-5)
root(ROOT-0, say-6)
expl(is-9, There-8)
parataxis(say-6, is-9)
det(thing-12, no-10)
amod(thing-12, such-11)
nsubj(is-9, thing-12)
prep_as(thing-12, God-14)
mark(described-17, as-16)
advcl(say-6, described-17)
prep_by(described-17, those-19)
nsubj(claim-21, those-19)
rcmod(those-19, claim-21)
aux(think-23, to-22)
xcomp(claim-21, think-23)
advmod(think-23, so-24)

