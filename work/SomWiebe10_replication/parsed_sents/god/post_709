(ROOT
  (S
    (NP (PRP$ Your) (NN example))
    (VP (VBZ is)
      (ADJP (JJ hard)
        (S
          (VP (TO to)
            (VP (VB answer)
              (SBAR (IN as)
                (S
                  (NP (PRP I))
                  (VP (VBP do) (RB not)
                    (VP (VB know)
                      (NP (PDT all)
                        (NP (DT the) (NN ins))
                        (CC and)
                        (NP (NNS outs))))))))))))
    (. .)))

poss(example-2, Your-1)
nsubj(hard-4, example-2)
cop(hard-4, is-3)
root(ROOT-0, hard-4)
aux(answer-6, to-5)
xcomp(hard-4, answer-6)
mark(know-11, as-7)
nsubj(know-11, I-8)
aux(know-11, do-9)
neg(know-11, not-10)
advcl(answer-6, know-11)
dep(ins-14, all-12)
det(ins-14, the-13)
dobj(know-11, ins-14)
dobj(know-11, outs-16)
conj_and(ins-14, outs-16)

(ROOT
  (S
    (S
      (NP
        (NP (NNP BUT))
        (SBAR (IN if)
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB take)
                      (NP (DT the) (NN thou))))))))))
      (VP (VBP shalt) (RB not)
        (VP (VB kill)
          (PP (IN for)
            (NP (PRP it))))))
    (RB then)
    (S
      (INTJ (UH yes))
      (, ,)
      (NP (PRP she))
      (VP (MD should) (RB n't)
        (VP (VB have)
          (NP (DT an) (NN abortion)))))
    (. .)))

dobj(going-5, BUT-1)
nsubj(shalt-10, BUT-1)
mark(going-5, if-2)
nsubj(going-5, we-3)
xsubj(take-7, we-3)
aux(going-5, 're-4)
dep(BUT-1, going-5)
aux(take-7, to-6)
xcomp(going-5, take-7)
det(thou-9, the-8)
dobj(take-7, thou-9)
root(ROOT-0, shalt-10)
neg(shalt-10, not-11)
dep(shalt-10, kill-12)
prep_for(kill-12, it-14)
advmod(shalt-10, then-15)
dep(have-21, yes-16)
nsubj(have-21, she-18)
aux(have-21, should-19)
neg(have-21, n't-20)
ccomp(shalt-10, have-21)
det(abortion-23, an-22)
dobj(have-21, abortion-23)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD may) (RB not)
        (VP (VB be)
          (NP (DT the) (JJ right) (NN thing)
            (S
              (VP (TO to)
                (VP (VB do))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT the) (JJ right) (NN thing)
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (. .)))

nsubj(thing-7, It-1)
aux(thing-7, may-2)
neg(thing-7, not-3)
cop(thing-7, be-4)
det(thing-7, the-5)
amod(thing-7, right-6)
root(ROOT-0, thing-7)
aux(do-9, to-8)
infmod(thing-7, do-9)
nsubj(thing-16, it-12)
cop(thing-16, is-13)
det(thing-16, the-14)
amod(thing-16, right-15)
conj_but(thing-7, thing-16)
aux(do-18, to-17)
infmod(thing-16, do-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (PP (IN like)
        (NP
          (NP (DT that) (NNP Jehovah))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD died)
                (SBAR (IN because)
                  (S
                    (NP (PRP she))
                    (VP (MD would) (RB n't)
                      (VP (VB take)
                        (NP (DT a) (NN blood) (NN transfusion))))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
det(Jehovah-5, that-4)
prep_like('s-2, Jehovah-5)
nsubj(died-7, Jehovah-5)
rcmod(Jehovah-5, died-7)
mark(take-12, because-8)
nsubj(take-12, she-9)
aux(take-12, would-10)
neg(take-12, n't-11)
advcl(died-7, take-12)
det(transfusion-15, a-13)
nn(transfusion-15, blood-14)
dobj(take-12, transfusion-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP
            (NP (DT the) (NN basis))
            (PP (IN of)
              (NP (PRP$ your) (NN argument))))
          (VP (VBZ is)
            (SBAR (IN that)
              (S
                (NP
                  (NP (NNP God) (POS 's))
                  (NN word))
                (VP (MD can) (RB not)
                  (VP (VB be)
                    (VP (VBN applied)
                      (PP
                        (PP (TO to)
                          (NP (JJ modern) (NN day) (NN society)))
                        (CC and)
                        (PP (IN in)
                          (NP
                            (NP (DT a) (NN way))
                            (SBAR
                              (S
                                (NP (PRP you))
                                (VP (VBP 're)
                                  (ADJP (JJ right))
                                  (, ,)
                                  (SBAR (IN because)
                                    (S
                                      (NP (DT the) (NN world))
                                      (VP (VBZ is)
                                        (VP (VBG moving)
                                          (ADVP (RB so) (RB fast))
                                          (NP (DT these) (NNS days))))))))))))
                      (SBAR (IN that)
                        (S
                          (NP (DT every) (NN decade))
                          (VP (VBZ shows)
                            (NP (JJR more) (NN change))
                            (SBAR
                              (SBAR (IN than)
                                (S
                                  (NP (PRP it))
                                  (VP (VBD used)
                                    (PP (TO to)
                                      (NP (DT a) (JJ few) (CD hundred) (NNS years)))
                                    (ADVP (IN ago)))))
                              (CC and)
                              (SBAR (IN that)
                                (S
                                  (NP (PDT half) (DT the) (NNS things))
                                  (NP (NN today))
                                  (VP (VBP are) (RB n't)
                                    (VP
                                      (ADVP (RB even))
                                      (VBN mentioned)
                                      (PP (IN in)
                                        (NP (DT the) (JJ past) (JJ i.e.) (NN abortion)))))))))))
                      (, ,)
                      (S
                        (VP (VBG cloning)
                          (NP (FW etc.)))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
det(basis-4, the-3)
nsubj(is-8, basis-4)
poss(argument-7, your-6)
prep_of(basis-4, argument-7)
ccomp(think-2, is-8)
complm(applied-16, that-9)
poss(word-12, God-10)
nsubjpass(applied-16, word-12)
nsubjpass(applied-16', word-12)
aux(applied-16, can-13)
neg(applied-16, not-14)
auxpass(applied-16, be-15)
ccomp(is-8, applied-16)
ccomp(is-8, applied-16')
conj_and(applied-16, applied-16')
amod(society-20, modern-18)
nn(society-20, day-19)
prep_to(applied-16, society-20)
det(way-24, a-23)
prep_in(applied-16', way-24)
nsubj(right-27, you-25)
cop(right-27, 're-26)
rcmod(way-24, right-27)
mark(moving-33, because-29)
det(world-31, the-30)
nsubj(moving-33, world-31)
aux(moving-33, is-32)
advcl(right-27, moving-33)
advmod(fast-35, so-34)
advmod(moving-33, fast-35)
det(days-37, these-36)
tmod(moving-33, days-37)
complm(shows-41, that-38)
det(decade-40, every-39)
nsubj(shows-41, decade-40)
ccomp(applied-16, shows-41)
amod(change-43, more-42)
dobj(shows-41, change-43)
mark(used-46, than-44)
nsubj(used-46, it-45)
ccomp(shows-41, used-46)
det(years-51, a-48)
amod(years-51, few-49)
num(years-51, hundred-50)
prep_to(used-46, years-51)
advmod(used-46, ago-52)
complm(mentioned-62, that-54)
predet(things-57, half-55)
det(things-57, the-56)
nsubjpass(mentioned-62, things-57)
nsubjpass(mentioned-62, today-58)
auxpass(mentioned-62, are-59)
neg(mentioned-62, n't-60)
advmod(mentioned-62, even-61)
ccomp(shows-41, mentioned-62)
conj_and(used-46, mentioned-62)
det(abortion-67, the-64)
amod(abortion-67, past-65)
amod(abortion-67, i.e.-66)
prep_in(mentioned-62, abortion-67)
xcomp(applied-16, cloning-69)
dobj(cloning-69, etc.-70)

(ROOT
  (S
    (ADVP (RB However))
    (NP (PRP I))
    (VP (MD would)
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADVP (RB only))
              (NP
                (NP (NNS people) (POS 's))
                (NN mentality)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ different)
                        (PP (TO to)
                          (NP (DT the) (NN past)))))))))))))
    (. .)))

advmod(say-4, However-1)
nsubj(say-4, I-2)
aux(say-4, would-3)
root(ROOT-0, say-4)
complm(mentality-11, that-5)
nsubj(mentality-11, it-6)
cop(mentality-11, 's-7)
advmod(mentality-11, only-8)
poss(mentality-11, people-9)
ccomp(say-4, mentality-11)
nsubj(different-14, that-12)
cop(different-14, is-13)
rcmod(people-9, different-14)
ccomp(mentality-11, different-14)
det(past-17, the-16)
prep_to(different-14, past-17)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP tend)
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR
              (SBAR
                (S
                  (NP (PRP we))
                  (VP
                    (VP (VBP know)
                      (NP (DT the) (NNS answers)))
                    (, ,)
                    (CC or)
                    (VP (VBZ questions)))))
              (CC and)
              (SBAR (IN that)
                (S
                  (NP (PRP we))
                  (VP (VBP 're)
                    (ADVP
                      (ADVP
                        (NP (DT a) (RB lot))
                        (RBR smarter))
                      (SBAR (IN than)
                        (S
                          (NP (PRP we))
                          (VP (VBD used)
                            (S
                              (VP (TO to)
                                (VP (VB be))))))))))))))))
    (. .)))

nsubj(tend-2, We-1)
xsubj(think-4, We-1)
root(ROOT-0, tend-2)
aux(think-4, to-3)
xcomp(tend-2, think-4)
nsubj(know-6, we-5)
nsubj(questions-11, we-5)
ccomp(think-4, know-6)
det(answers-8, the-7)
dobj(know-6, answers-8)
ccomp(think-4, questions-11)
conj_or(know-6, questions-11)
complm('re-15, that-13)
nsubj('re-15, we-14)
ccomp(think-4, 're-15)
conj_and(know-6, 're-15)
det(lot-17, a-16)
npadvmod(smarter-18, lot-17)
advmod('re-15, smarter-18)
mark(used-21, than-19)
nsubj(used-21, we-20)
xsubj(be-23, we-20)
dep(smarter-18, used-21)
aux(be-23, to-22)
xcomp(used-21, be-23)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT some) (NNS ways)))
      (NP (PRP we))
      (VP (VBP are)))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (DT some) (NNS ways)))
      (NP (PRP we))
      (VP (VBP 're) (RB not)))
    (, ,)
    (S
      (NP (DT some) (NNS things))
      (VP (VBP are)
        (ADJP (JJR better))))
    (CC and)
    (S
      (S
        (NP (DT some) (NNS things))
        (VP (VBP are)
          (ADJP (JJR worse))))
      (CC but)
      (S
        (NP (PRP I))
        (VP (VBP think)
          (SBAR
            (S
              (PP (IN in)
                (NP (JJS MOST) (NNS aspects)))
              (NP (DT these) (`` ``) (NNS rules) ('' ''))
              (VP (VBP are)
                (ADVP (RB still))
                (ADJP (RB as) (JJ applicable)
                  (PP (IN as)
                    (NP (DT the) (NN past))))))))))
    (. .)))

det(ways-3, some-2)
prep_in(are-5, ways-3)
nsubj(are-5, we-4)
root(ROOT-0, are-5)
det(ways-10, some-9)
prep_in('re-12, ways-10)
nsubj('re-12, we-11)
conj_and(are-5, 're-12)
neg('re-12, not-13)
det(things-16, some-15)
nsubj(better-18, things-16)
cop(better-18, are-17)
conj_and(are-5, better-18)
det(things-21, some-20)
nsubj(worse-23, things-21)
cop(worse-23, are-22)
conj_and(are-5, worse-23)
nsubj(think-26, I-25)
conj_and(are-5, think-26)
conj_but(worse-23, think-26)
amod(aspects-29, MOST-28)
prep_in(applicable-37, aspects-29)
det(rules-32, these-30)
nsubj(applicable-37, rules-32)
cop(applicable-37, are-34)
advmod(applicable-37, still-35)
advmod(applicable-37, as-36)
ccomp(think-26, applicable-37)
det(past-40, the-39)
prep_as(applicable-37, past-40)

(ROOT
  (S
    (S
      (S
        (VP (VB Give)
          (NP (PRP me))
          (NP
            (NP (DT a) (JJ few) (NNS examples))
            (PP (IN of)
              (NP (JJ todays) (NNS problems)))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP you))
                (VP (VBP think)))))))
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP (VBN solved)
            (PP (IN through)
              (NP (NN religion)))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB try)
          (CC and)
          (VB explain)
          (NP (IN as) (JJS best) (NN I) (NN can))
          (PP (IN as)
            (PP (TO to)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (NN religion))
                  (VP (MD can)
                    (VP (VB be)
                      (VP (VBN applied)
                        (PP (TO to)
                          (NP (PRP it)))))))))))))
    (. .)))

csubjpass(solved-15, Give-1)
iobj(Give-1, me-2)
det(examples-5, a-3)
amod(examples-5, few-4)
dobj(Give-1, examples-5)
dobj(think-11, examples-5)
amod(problems-8, todays-7)
prep_of(examples-5, problems-8)
rel(think-11, which-9)
nsubj(think-11, you-10)
rcmod(examples-5, think-11)
aux(solved-15, can-12)
neg(solved-15, not-13)
auxpass(solved-15, be-14)
root(ROOT-0, solved-15)
prep_through(solved-15, religion-17)
nsubj(try-21, I-19)
nsubj(explain-23, I-19)
aux(try-21, 'll-20)
conj_and(solved-15, try-21)
conj_and(solved-15, explain-23)
conj_and(try-21, explain-23)
amod(can-27, as-24)
amod(can-27, best-25)
nn(can-27, I-26)
dobj(try-21, can-27)
prepc_as_to(try-21, to-29)
advmod(applied-34, how-30)
nsubjpass(applied-34, religion-31)
aux(applied-34, can-32)
auxpass(applied-34, be-33)
pcomp(try-21, applied-34)
prep_to(applied-34, it-36)

