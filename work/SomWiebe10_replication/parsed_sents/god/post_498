(ROOT
  (S
    (NP (DT That))
    (VP (VBZ makes)
      (NP
        (NP (DT a) (NN lot))
        (PP (IN of)
          (NP
            (NP (JJ foolish) (NNS people))
            (PP (IN in)
              (NP
                (NP (DT the) (NN world) (NNS billions))
                (PP (IN of)
                  (NP (JJ foolish) (NNS people)))))))))
    (. .)))

nsubj(makes-2, That-1)
root(ROOT-0, makes-2)
det(lot-4, a-3)
dobj(makes-2, lot-4)
amod(people-7, foolish-6)
prep_of(lot-4, people-7)
det(billions-11, the-9)
nn(billions-11, world-10)
prep_in(people-7, billions-11)
amod(people-14, foolish-13)
prep_of(billions-11, people-14)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN point))
        (PP (IN in)
          (NP (DT the) (JJ blind) (NN man) (NN analogy))))
      (VP (VBD was) (RB not)
        (S
          (VP (TO to)
            (VP (VB explain)
              (NP
                (NP (NN anything))
                (PP (IN about)
                  (NP (NNP God)))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (S
                        (VP (TO to)
                          (VP (VB show)
                            (SBAR (IN that)
                              (S
                                (NP (DT a) (JJ blind) (NN man))
                                (VP (MD can) (RB not)
                                  (VP (VB see)
                                    (ADJP (JJ blue))))))))))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB see)
          (NP (NNP God)))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP believe)
        (PP (IN in)
          (NP (NNP God)))
        (SBAR
          (SBAR (IN since)
            (S
              (NP (PRP I))
              (VP (VBD was)
                (VP (VBN raised)
                  (S
                    (VP (TO to)
                      (VP (VB believe)
                        (NP (DT that) (NN way)))))))))
          (CC and)
          (SBAR (IN that)
            (S
              (NP (DT a) (JJ blind) (NN man))
              (VP (VBD was)
                (VP (VBN raised)
                  (S
                    (VP (VBG knowing)
                      (SBAR (IN that)
                        (S
                          (S
                            (NP (DT the) (NN ocean))
                            (VP (VBZ is)
                              (ADJP (JJ blue))))
                          (CC and)
                          (S
                            (NP (DT the) (NN sky))
                            (VP (VBZ is)
                              (ADJP (JJ blue)))))))))))))))
    (. .)))

det(point-2, The-1)
nsubj(was-8, point-2)
xsubj(explain-11, point-2)
det(analogy-7, the-4)
amod(analogy-7, blind-5)
nn(analogy-7, man-6)
prep_in(point-2, analogy-7)
root(ROOT-0, was-8)
neg(was-8, not-9)
aux(explain-11, to-10)
xcomp(was-8, explain-11)
dobj(explain-11, anything-12)
prep_about(anything-12, God-14)
nsubj(was-16, it-15)
xsubj(show-18, it-15)
rcmod(anything-12, was-16)
aux(show-18, to-17)
xcomp(was-16, show-18)
complm(see-25, that-19)
det(man-22, a-20)
amod(man-22, blind-21)
nsubj(see-25, man-22)
aux(see-25, can-23)
neg(see-25, not-24)
ccomp(show-18, see-25)
acomp(see-25, blue-26)
nsubj(see-31, I-28)
aux(see-31, can-29)
neg(see-31, not-30)
conj_and(was-8, see-31)
dobj(see-31, God-32)
nsubj(believe-35, I-34)
conj_but(was-8, believe-35)
prep_in(believe-35, God-37)
mark(raised-41, since-38)
nsubjpass(raised-41, I-39)
xsubj(believe-43, I-39)
auxpass(raised-41, was-40)
ccomp(believe-35, raised-41)
aux(believe-43, to-42)
xcomp(raised-41, believe-43)
det(way-45, that-44)
dobj(believe-43, way-45)
complm(raised-52, that-47)
det(man-50, a-48)
amod(man-50, blind-49)
nsubjpass(raised-52, man-50)
auxpass(raised-52, was-51)
ccomp(believe-35, raised-52)
conj_and(raised-41, raised-52)
xcomp(raised-52, knowing-53)
complm(blue-58, that-54)
det(ocean-56, the-55)
nsubj(blue-58, ocean-56)
cop(blue-58, is-57)
ccomp(knowing-53, blue-58)
det(sky-61, the-60)
nsubj(blue-63, sky-61)
cop(blue-63, is-62)
ccomp(knowing-53, blue-63)
conj_and(blue-58, blue-63)

