(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (DT the) (NN universe))
        (VP (VBZ has)
          (NP
            (NP (NNS laws))
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (VBP say))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (MD must)
      (VP (VB be)
        (ADJP (RB intellectually) (JJ honest) (RB enough))
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (DT those) (NNS laws))
                  (VP (VBD had)
                    (S
                      (VP (TO to)
                        (VP (VB come)
                          (PP (IN from)
                            (NP (RB somewhere))))))))))))))
    (. .)))

mark(has-5, If-2)
det(universe-4, the-3)
nsubj(has-5, universe-4)
advcl(honest-16, has-5)
dobj(has-5, laws-6)
dobj(say-9, laws-6)
mark(say-9, as-7)
nsubj(say-9, you-8)
dep(laws-6, say-9)
advmod(honest-16, then-11)
nsubj(honest-16, you-12)
aux(honest-16, must-13)
cop(honest-16, be-14)
advmod(honest-16, intellectually-15)
root(ROOT-0, honest-16)
advmod(honest-16, enough-17)
aux(say-19, to-18)
xcomp(honest-16, say-19)
complm(had-23, that-20)
det(laws-22, those-21)
nsubj(had-23, laws-22)
ccomp(say-19, had-23)
aux(come-25, to-24)
xcomp(had-23, come-25)
prep(come-25, from-26)
pobj(from-26, somewhere-27)

(ROOT
  (S ('' '')
    (NP (NNP Fair))
    (VP (VBZ enough))
    (. .)))

nsubj(enough-3, Fair-2)
root(ROOT-0, enough-3)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN order))
        (PP (IN in)
          (NP (NN nature)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(order-4, no-3)
nsubj(is-2, order-4)
prep_in(order-4, nature-6)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (NN chaos)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nsubj(is-2, chaos-3)

(ROOT
  (S
    (NP (PRP$ Our) (NN universe))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN expenditure))
        (PP (IN of)
          (NP (NN energy)
            (CC and)
            (NN mass)))
        (PP (IN towards)
          (NP
            (NP (NN entropy))
            (PRN (-LRB- -LRB-)
              (NP (NN chaos))
              (-RRB- -RRB-))))))
    (. .)))

poss(universe-2, Our-1)
nsubj(expenditure-5, universe-2)
cop(expenditure-5, is-3)
det(expenditure-5, the-4)
root(ROOT-0, expenditure-5)
prep_of(expenditure-5, energy-7)
prep_of(expenditure-5, mass-9)
conj_and(energy-7, mass-9)
prep_towards(expenditure-5, entropy-11)
appos(entropy-11, chaos-13)

(ROOT
  (S
    (NP (NNP Natural) (NN selection)
      (CC and)
      (NN evolution))
    (VP (VBP happen)
      (ADVP (RB randomly))
      (, ,)
      (ADVP (RB chaotically)))
    (. .)))

nn(selection-2, Natural-1)
nsubj(happen-5, selection-2)
conj_and(selection-2, evolution-4)
nsubj(happen-5, evolution-4)
root(ROOT-0, happen-5)
advmod(happen-5, randomly-6)
advmod(happen-5, chaotically-8)

(ROOT
  (S
    (NP (NNP Everything))
    (VP (VBZ is)
      (NP
        (NP (NN chaos))
        (ADJP (JJ pure)
          (CC and)
          (JJ simple))))
    (. .)))

nsubj(chaos-3, Everything-1)
cop(chaos-3, is-2)
root(ROOT-0, chaos-3)
amod(chaos-3, pure-4)
amod(chaos-3, simple-6)
conj_and(pure-4, simple-6)

(ROOT
  (FRAG
    (ADVP (RB Just))
    (SBAR (IN because)
      (S
        (NP (EX there))
        (VP (VBZ appears)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (NN order))
                  (PP (IN in)
                    (NP (NN chaos)))))))))
      (: ...))))

root(ROOT-0, Just-1)
mark(appears-4, because-2)
expl(appears-4, there-3)
xsubj(order-7, there-3)
dep(Just-1, appears-4)
aux(order-7, to-5)
cop(order-7, be-6)
xcomp(appears-4, order-7)
prep_in(order-7, chaos-9)

(ROOT
  (S
    (NP (NNS Scientists))
    (VP (VBP are)
      (ADJP (JJ smart) (RB enough)
        (S
          (VP (TO to)
            (VP
              (VP (VB hypothesize)
                (SBAR
                  (SBAR
                    (WHPP (IN on)
                      (WHNP (WP what)))
                    (S
                      (NP (PRP we))
                      (VP (VBP do) (RB n't)
                        (VP (VB know)))))
                  (CC and)
                  (FRAG
                    (ADVP (RBS most) (RB importantly)))))
              (, ,)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB admit)
                      (SBAR (IN that)
                        (S
                          (NP (PRP we))
                          (ADVP (RB just) (JJ plain))
                          (VP (VBP do) (RB n't)
                            (VP (VB know))))))))))))))
    (. .)))

nsubj(smart-3, Scientists-1)
cop(smart-3, are-2)
root(ROOT-0, smart-3)
advmod(smart-3, enough-4)
aux(hypothesize-6, to-5)
xcomp(smart-3, hypothesize-6)
dep(know-12, on-7)
pobj(on-7, what-8)
nsubj(know-12, we-9)
aux(know-12, do-10)
neg(know-12, n't-11)
dep(hypothesize-6, know-12)
advmod(importantly-15, most-14)
dep(hypothesize-6, importantly-15)
conj_and(know-12, importantly-15)
acomp(hypothesize-6, able-17)
aux(admit-19, to-18)
xcomp(able-17, admit-19)
complm(know-26, that-20)
nsubj(know-26, we-21)
advmod(plain-23, just-22)
advmod(know-26, plain-23)
aux(know-26, do-24)
neg(know-26, n't-25)
ccomp(admit-19, know-26)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP we))
        (VP (VBP do)
          (VP (VB know)))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT some) (JJ silly) (NN sky))
          (VP (VBD wizard)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ preaches)
                  (NP (PRP$ his) (JJ own) (NN perfection))
                  (SBAR (IN while)
                    (S
                      (S
                        (VP
                          (ADVP (RB immaturely))
                          (VBG committing)
                          (NP
                            (NP (NN genocide))
                            (PP (IN against)
                              (NP (JJ entire) (NNS populations))))))
                      (VP (VBD did) (RB not)
                        (VP (VB create)
                          (NP (DT this) (NN world)))))))))))))
    (. .)))

dobj(know-4, What-1)
nsubj(know-4, we-2)
aux(know-4, do-3)
csubj(is-5, know-4)
root(ROOT-0, is-5)
complm(wizard-10, that-6)
det(sky-9, some-7)
amod(sky-9, silly-8)
nsubj(wizard-10, sky-9)
ccomp(is-5, wizard-10)
nsubj(preaches-12, who-11)
nsubj(create-25, who-11)
ccomp(wizard-10, preaches-12)
poss(perfection-15, his-13)
amod(perfection-15, own-14)
dobj(preaches-12, perfection-15)
mark(create-25, while-16)
advmod(committing-18, immaturely-17)
csubj(create-25, committing-18)
dobj(committing-18, genocide-19)
amod(populations-22, entire-21)
prep_against(genocide-19, populations-22)
aux(create-25, did-23)
neg(create-25, not-24)
advcl(preaches-12, create-25)
det(world-27, this-26)
dobj(create-25, world-27)

(ROOT
  (S
    (NP (JJ Holy) (NNS texts))
    (VP
      (VP (VBP are)
        (ADJP (JJ rife)
          (PP (IN with)
            (NP (NNS errors)))))
      (CC and)
      (ADVP (IN out) (RB right))
      (VP (VBZ lies)))
    (. .)))

amod(texts-2, Holy-1)
nsubj(rife-4, texts-2)
nsubj(lies-10, texts-2)
cop(rife-4, are-3)
root(ROOT-0, rife-4)
prep_with(rife-4, errors-6)
advmod(rife-4, out-8)
conj_and(rife-4, out-8)
advmod(out-8, right-9)
conj_and(rife-4, lies-10)

(ROOT
  (FRAG
    (PP (IN As)
      (PP (IN for)
        (NP (PRP$ your) (JJ other) (NN bit))))
    (: :)
    (NP (`` ``) (DT An) (JJ interesting) (NN argument) (NN indeed))
    (. .)))

prepc_as_for(indeed-11, for-2)
poss(bit-5, your-3)
amod(bit-5, other-4)
pobj(indeed-11, bit-5)
det(indeed-11, An-8)
amod(indeed-11, interesting-9)
nn(indeed-11, argument-10)
root(ROOT-0, indeed-11)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ does)
      (NP (NN science))
      (VP (VB have)
        (NP (NNS laws))))
    (. ?)))

advmod(have-4, Why-1)
aux(have-4, does-2)
nsubj(have-4, science-3)
root(ROOT-0, have-4)
dobj(have-4, laws-5)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB accept)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT a) (JJ natural) (NN order))
                (PRN (-LRB- -LRB-)
                  (NP (NN design) (. ?))
                  (-RRB- -RRB-))))))))
    (. .)))

advmod(accept-4, Why-1)
aux(accept-4, do-2)
nsubj(accept-4, we-3)
root(ROOT-0, accept-4)
complm(is-7, that-5)
expl(is-7, there-6)
ccomp(accept-4, is-7)
det(order-10, a-8)
amod(order-10, natural-9)
nsubj(is-7, order-10)
appos(order-10, design-12)

(ROOT
  (S ('' '')
    (NP (NNP Order) (NNP DOES) (NNP NOT))
    (VP (VBP equal)
      (NP (NNP DESIGN)))
    (. .)))

nn(NOT-4, Order-2)
nn(NOT-4, DOES-3)
nsubj(equal-5, NOT-4)
root(ROOT-0, equal-5)
dobj(equal-5, DESIGN-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (JJS worst) (NN misconception))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (VP (VBN heard)
                (ADVP (RB yet))))))))
    (. .)))

nsubj(misconception-5, That-1)
cop(misconception-5, 's-2)
det(misconception-5, the-3)
amod(misconception-5, worst-4)
root(ROOT-0, misconception-5)
dobj(heard-8, misconception-5)
nsubj(heard-8, I-6)
aux(heard-8, 've-7)
rcmod(misconception-5, heard-8)
advmod(heard-8, yet-9)

