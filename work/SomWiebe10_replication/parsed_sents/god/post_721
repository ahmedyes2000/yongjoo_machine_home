(ROOT
  (S
    (NP (NNP Ahh))
    (VP (VBP ok))
    (. .)))

nsubj(ok-2, Ahh-1)
root(ROOT-0, ok-2)

(ROOT
  (FRAG
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP it))
        (VP (VBZ comes)
          (PP (TO to)
            (NP (JJ sexual) (NNS acts)))))
      (. .))
    (. .)))

advmod(comes-3, When-1)
nsubj(comes-3, it-2)
root(ROOT-0, comes-3)
amod(acts-6, sexual-5)
prep_to(comes-3, acts-6)

(ROOT
  (S
    (NP (PRP$ its))
    (VP
      (ADVP
        (NP (DT a) (RB lot))
        (RBR harder))
      (S
        (VP (TO to)
          (VP (VB argue)
            (PP (IN with)
              (SBAR (IN because)
                (S
                  (NP (PRP you))
                  (VP (MD ca) (RB n't)
                    (ADVP (RB really))
                    (VP (VB explain)
                      (SBAR
                        (WHADVP (WRB why))
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (ADJP (JJ bad))))))))))))))
    (. .)))

nsubj(harder-4, its-1)
xsubj(argue-6, its-1)
det(lot-3, a-2)
npadvmod(harder-4, lot-3)
root(ROOT-0, harder-4)
aux(argue-6, to-5)
xcomp(harder-4, argue-6)
mark(explain-13, because-8)
nsubj(explain-13, you-9)
aux(explain-13, ca-10)
neg(explain-13, n't-11)
advmod(explain-13, really-12)
prepc_with(argue-6, explain-13)
advmod(bad-17, why-14)
nsubj(bad-17, it-15)
cop(bad-17, 's-16)
advcl(explain-13, bad-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP agree)
        (PP (IN with)
          (NP (PRP Him)))))
    (: ...) (RB not)
    (S
      (VP (VB follow)
        (ADVP (RB Him) (RB blindly))))
    (. .)))

nsubj(agree-2, I-1)
root(ROOT-0, agree-2)
prep_with(agree-2, Him-4)
neg(agree-2, not-6)
ccomp(agree-2, follow-7)
advmod(blindly-9, Him-8)
advmod(follow-7, blindly-9)

(ROOT
  (S
    (NP
      (NP (NN Thing) (RB about))
      (ADJP (JJ right)
        (CC and)
        (JJ wrong)))
    (ADVP (RB There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN proof))
        (PP (TO to)
          (NP (PRP it)))))
    (. .)))

nsubj(proof-9, Thing-1)
advmod(Thing-1, about-2)
amod(Thing-1, right-3)
amod(Thing-1, wrong-5)
conj_and(right-3, wrong-5)
advmod(proof-9, There-6)
cop(proof-9, is-7)
det(proof-9, no-8)
root(ROOT-0, proof-9)
prep_to(proof-9, it-11)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP (CD one) (NN thing))
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD can)
              (VP (VB garauntee)
                (S
                  (NP (PRP you))
                  (ADJP (CD 100) (NN %)))))))))
    (. .)))

nsubj(thing-4, That-1)
cop(thing-4, is-2)
num(thing-4, one-3)
root(ROOT-0, thing-4)
dobj(garauntee-7, thing-4)
nsubj(garauntee-7, I-5)
aux(garauntee-7, can-6)
rcmod(thing-4, garauntee-7)
nsubj(%-10, you-8)
number(%-10, 100-9)
xcomp(garauntee-7, %-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (RB purely) (NN opinion))
        (CC or)
        (NP
          (NP (CD one) (POS 's))
          (JJ own) (NNS thoughts))))
    (. .)))

nsubj(opinion-4, It-1)
cop(opinion-4, 's-2)
advmod(opinion-4, purely-3)
root(ROOT-0, opinion-4)
poss(thoughts-9, one-6)
amod(thoughts-9, own-8)
conj_or(opinion-4, thoughts-9)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ has)
      (NP (DT no) (NNS morals)))
    (. .)))

nsubj(has-2, Science-1)
root(ROOT-0, has-2)
det(morals-4, no-3)
dobj(has-2, morals-4)

(ROOT
  (S (CC Nor)
    (VP (VBZ has)
      (NP (NNS facts)))
    (. .)))

cc(has-2, Nor-1)
root(ROOT-0, has-2)
dobj(has-2, facts-3)

(ROOT
  (S
    (NP
      (NP (NNS Morals))
      (, ,)
      (ADJP (JJ right)
        (CC and)
        (JJ wrong)))
    (VP (VBZ does) (RB not)
      (VP (VB go)
        (NP
          (NP (NN hand))
          (PP (IN in)
            (NP (NN hand))))
        (PP (IN with)
          (NP (NNS numbers) (, ,) (NNS statistics)
            (CC and)
            (NNS tests)))))
    (. .)))

nsubj(go-8, Morals-1)
amod(Morals-1, right-3)
amod(Morals-1, wrong-5)
conj_and(right-3, wrong-5)
aux(go-8, does-6)
neg(go-8, not-7)
root(ROOT-0, go-8)
dobj(go-8, hand-9)
prep_in(hand-9, hand-11)
prep_with(go-8, numbers-13)
prep_with(go-8, statistics-15)
conj_and(numbers-13, statistics-15)
prep_with(go-8, tests-17)
conj_and(numbers-13, tests-17)

(ROOT
  (S
    (NP (NNP Morality))
    (VP (VBZ is)
      (ADVP (IN outside)
        (PP (IN of)
          (NP (NNS explanations))))
      (PP (IN through)
        (NP (NN science))))
    (. .)))

nsubj(is-2, Morality-1)
root(ROOT-0, is-2)
prep_outside_of(is-2, explanations-5)
prep_through(is-2, science-7)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (NP (PRP you))
    (VP (VBP do)
      (NP
        (NP (NNS things))
        (PP (IN for)
          (NP
            (NP (DT the) (NN sake))
            (PP (IN of)
              (S
                (VP (VBG doing))))))))
    (. .)))

advmod(do-3, Sometimes-1)
nsubj(do-3, you-2)
root(ROOT-0, do-3)
dobj(do-3, things-4)
det(sake-7, the-6)
prep_for(things-4, sake-7)
prepc_of(sake-7, doing-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB question)
        (NP (NN everything))))
    (. .)))

nsubj(question-4, You-1)
aux(question-4, do-2)
neg(question-4, n't-3)
root(ROOT-0, question-4)
dobj(question-4, everything-5)

(ROOT
  (S
    (VP (VB Same)
      (PP (IN as)
        (NP (NN homosexuality)))
      (. .))
    (. .)))

root(ROOT-0, Same-1)
prep_as(Same-1, homosexuality-3)

(ROOT
  (S
    (S
      (NP (DT Some) (NNS things) (NN you))
      (VP (MD can)
        (VP
          (VP (VB question))
          (: ...)
          (CC and)
          (VP
            (ADVP (RB still))
            (VB do)
            (NP (PRP it)))
          (, ,)
          (NP
            (NP (DT some) (NNS things))
            (SBAR
              (S
                (NP (PRP you))
                (VP
                  (VP (VBP question))
                  (CC and)
                  (VP (VBP do) (RB n't)
                    (VP (VB do)
                      (NP (PRP it)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (VBG questioning) (NN everything))
      (VP (VBZ is)
        (ADVP (RB just))
        (ADJP (RB as) (JJ bad)
          (PP (IN as)
            (S (RB not)
              (VP (VBG questioning)
                (NP (NN everything))))))))
    (. .)))

det(you-3, Some-1)
nn(you-3, things-2)
nsubj(question-5, you-3)
nsubj(do-9, you-3)
aux(question-5, can-4)
root(ROOT-0, question-5)
advmod(do-9, still-8)
conj_and(question-5, do-9)
dobj(do-9, it-10)
det(things-13, some-12)
conj_and(question-5, things-13)
dobj(question-5, things-13)
nsubj(question-15, you-14)
nsubj(do-19, you-14)
rcmod(things-13, question-15)
aux(do-19, do-17)
neg(do-19, n't-18)
rcmod(things-13, do-19)
conj_and(question-15, do-19)
dobj(do-19, it-20)
amod(everything-24, questioning-23)
nsubj(bad-28, everything-24)
cop(bad-28, is-25)
advmod(bad-28, just-26)
advmod(bad-28, as-27)
conj_but(question-5, bad-28)
neg(questioning-31, not-30)
prepc_as(bad-28, questioning-31)
dobj(questioning-31, everything-32)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ hard)
        (S
          (VP (TO to)
            (VP (VB explain)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADJP (JJ bad))))))))))
    (. .)))

nsubj(hard-3, it-1)
cop(hard-3, 's-2)
root(ROOT-0, hard-3)
aux(explain-5, to-4)
xcomp(hard-3, explain-5)
advmod(bad-9, why-6)
nsubj(bad-9, it-7)
cop(bad-9, 's-8)
advcl(explain-5, bad-9)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP know)
            (PP (IN in)
              (NP (PRP$ my) (NN heart)))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (JJ wrong))))))
    (. .)))

dobj(know-3, All-1)
nsubj(is-7, All-1)
nsubj(know-3, I-2)
rcmod(All-1, know-3)
poss(heart-6, my-5)
prep_in(know-3, heart-6)
root(ROOT-0, is-7)
complm(wrong-11, that-8)
nsubj(wrong-11, it-9)
cop(wrong-11, 's-10)
ccomp(is-7, wrong-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG asking)
        (S
          (NP (PRP me))
          (ADJP (JJ why)))))
    (: ...)))

nsubj(asking-3, You-1)
aux(asking-3, 're-2)
root(ROOT-0, asking-3)
nsubj(why-5, me-4)
xcomp(asking-3, why-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (FRAG (WRB why) (. .))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
dep(know-4, why-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (JJ wrong))
              (ADVP (RB though))))
          (. .))))
    (. .)))

nsubj(know-3, I-1)
aux(know-3, do-2)
root(ROOT-0, know-3)
complm(wrong-7, that-4)
nsubj(wrong-7, it-5)
cop(wrong-7, 's-6)
ccomp(know-3, wrong-7)
advmod(wrong-7, though-8)

(ROOT
  (S (CC and)
    (NP (PRP it))
    (VP (VBZ goes)
      (NP
        (NP (NN hand))
        (PP (IN in)
          (NP (NN hand))))
      (PP (IN with)
        (NP
          (NP (DT this) (`` ``) (JJ downward) (NN spiral) ('' ''))
          (PP (IN in)
            (NP (JJ todays) (NN society))))))
    (. .)))

cc(goes-3, and-1)
nsubj(goes-3, it-2)
root(ROOT-0, goes-3)
dobj(goes-3, hand-4)
prep_in(hand-4, hand-6)
det(spiral-11, this-8)
amod(spiral-11, downward-10)
prep_with(goes-3, spiral-11)
amod(society-15, todays-14)
prep_in(spiral-11, society-15)

(ROOT
  (S
    (ADVP
      (NP (CD 1) (NN thing))
      (IN though))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB do)
        (NP (NN anything))
        (SBAR (IN because)
          (S
            (NP (NNP God))
            (VP (VBZ says)
              (ADVP (RB so)))))))
    (. .)))

num(thing-2, 1-1)
npadvmod(though-3, thing-2)
advmod(do-8, though-3)
nsubj(do-8, I-5)
aux(do-8, do-6)
neg(do-8, n't-7)
root(ROOT-0, do-8)
dobj(do-8, anything-9)
mark(says-12, because-10)
nsubj(says-12, God-11)
advcl(do-8, says-12)
advmod(says-12, so-13)

