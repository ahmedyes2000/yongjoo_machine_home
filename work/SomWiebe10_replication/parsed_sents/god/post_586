(ROOT
  (S
    (S
      (NP (DT the) (`` ``) (NN grounding) (NN question) ('' ''))
      (ADVP (RB only))
      (VP (VBZ tries)
        (S
          (VP (TO to)
            (VP (VB play)
              (NP (JJ semantic) (NN word) (NNS games))
              (SBAR (IN if)
                (S
                  (NP (NN someone))
                  (VP (VBZ asks)
                    (SBAR
                      (WHADVP (WRB why))
                      (S
                        (NP (DT a) (NN god))
                        (VP (MD would)
                          (VP (VB allow) (`` ``)
                            (ADJP (JJ evil))
                            ('' '')))))))))))))
    (RB then)
    (S
      (NP (PRP they))
      (VP
        (VP (VBP seize)
          (PP (IN upon)
            (NP (DT the) (NN word) (NN evil))))
        (CC and)
        (VP (VBP say)
          (SBAR (IN that)
            (S
              (PP (IN for)
                (NP (JJ objective) (NN evil)
                  (S
                    (VP (TO to)
                      (VP (VB exist)
                        (NP (NNS means)))))))
              (NP (NN god))
              (VP (VBZ has)
                (S
                  (VP (TO to)
                    (VP (VB exist))))))))))
    (. .)))

det(question-4, the-1)
nn(question-4, grounding-3)
nsubj(tries-7, question-4)
xsubj(play-9, question-4)
advmod(tries-7, only-6)
root(ROOT-0, tries-7)
aux(play-9, to-8)
xcomp(tries-7, play-9)
amod(games-12, semantic-10)
nn(games-12, word-11)
dobj(play-9, games-12)
mark(asks-15, if-13)
nsubj(asks-15, someone-14)
advcl(play-9, asks-15)
advmod(allow-20, why-16)
det(god-18, a-17)
nsubj(allow-20, god-18)
aux(allow-20, would-19)
advcl(asks-15, allow-20)
acomp(allow-20, evil-22)
advmod(tries-7, then-24)
nsubj(seize-26, they-25)
nsubj(say-32, they-25)
ccomp(tries-7, seize-26)
det(evil-30, the-28)
nn(evil-30, word-29)
prep_upon(seize-26, evil-30)
ccomp(tries-7, say-32)
conj_and(seize-26, say-32)
complm(has-41, that-33)
amod(evil-36, objective-35)
prep_for(has-41, evil-36)
aux(exist-38, to-37)
infmod(evil-36, exist-38)
dobj(exist-38, means-39)
nsubj(has-41, god-40)
xsubj(exist-43, god-40)
ccomp(say-32, has-41)
aux(exist-43, to-42)
xcomp(has-41, exist-43)

(ROOT
  (S
    (NP (DT The) (NN argument))
    (VP (VBZ is)
      (ADJP (JJ silly)
        (PP (IN since)
          (S
            (VP (VBG using)
              (NP (DT any) (NN word))
              (SBAR (CC but)
                (S
                  (NP (`` ``) (JJ objective) (NN evil) ('' ''))
                  (VP
                    (VP (VBZ defeats)
                      (NP (PRP it)))
                    (PRN (-LRB- -LRB-)
                      (S
                        (NP
                          (NP (NN pain))
                          (, ,)
                          (NP (NN suffering))
                          (, ,))
                        (VP
                          (ADVP (RB collectively))
                          (VBD agreed)
                          (PP (IN upon)
                            (NP
                              (NP (NN evil))
                              (, ,)
                              (NP (FW etc.))))))
                      (-RRB- -RRB-))
                    (VP
                      (VP (VB Put)
                        (NP
                          (NP (CD 100) (JJ devout) (NNS people))
                          (PP (IN in)
                            (NP (JJ separate) (NNS rooms)))))
                      (CC and)
                      (VP (VB ask)
                        (NP (PRP them)))
                      (NP (CD 100) (JJ moral) (NNS questions))
                      (PRN (-LRB- -LRB-)
                        (S
                          (VP (VBG e.g.)
                            (SBAR
                              (SBARQ
                                (SBAR (IN if)
                                  (S
                                    (NP (DT a) (JJ pregnant) (NN woman))
                                    (VP (VBZ has)
                                      (NP (NN cancer)))))
                                (, ,)
                                (SQ (MD can)
                                  (NP (PRP she))
                                  (VP (VB get)
                                    (ADVP (RB chemotherapy))
                                    (S
                                      (VP (TO to)
                                        (VP
                                          (ADVP (RB likely))
                                          (VB save)
                                          (NP (PRP$ her) (NN life))
                                          (SBAR (IN if)
                                            (S
                                              (NP (PRP it))
                                              (VP (MD would)
                                                (ADVP (RB likely))
                                                (VP (VB kill)
                                                  (NP (DT the) (NN baby)))))))))))
                                (. ?)))))
                        (-RRB- -RRB-)))))))))))))

det(argument-2, The-1)
nsubj(silly-4, argument-2)
cop(silly-4, is-3)
root(ROOT-0, silly-4)
prepc_since(silly-4, using-6)
det(word-8, any-7)
dobj(using-6, word-8)
cc(defeats-14, but-9)
amod(evil-12, objective-11)
nsubj(defeats-14, evil-12)
dep(using-6, defeats-14)
dobj(defeats-14, it-15)
nsubj(agreed-22, pain-17)
appos(pain-17, suffering-19)
advmod(agreed-22, collectively-21)
parataxis(defeats-14, agreed-22)
parataxis(Put-28, agreed-22)
prep_upon(agreed-22, evil-24)
appos(evil-24, etc.-26)
dep(defeats-14, Put-28)
num(people-31, 100-29)
amod(people-31, devout-30)
dobj(Put-28, people-31)
amod(rooms-34, separate-33)
prep_in(people-31, rooms-34)
dep(defeats-14, ask-36)
conj_and(Put-28, ask-36)
dobj(ask-36, them-37)
num(questions-40, 100-38)
amod(questions-40, moral-39)
dobj(Put-28, questions-40)
parataxis(Put-28, e.g.-42)
parataxis(ask-36, e.g.-42)
mark(has-47, if-43)
det(woman-46, a-44)
amod(woman-46, pregnant-45)
nsubj(has-47, woman-46)
advcl(get-52, has-47)
dobj(has-47, cancer-48)
aux(get-52, can-50)
nsubj(get-52, she-51)
xsubj(save-56, she-51)
dep(e.g.-42, get-52)
advmod(get-52, chemotherapy-53)
aux(save-56, to-54)
advmod(save-56, likely-55)
xcomp(get-52, save-56)
poss(life-58, her-57)
dobj(save-56, life-58)
mark(kill-63, if-59)
nsubj(kill-63, it-60)
aux(kill-63, would-61)
advmod(kill-63, likely-62)
advcl(save-56, kill-63)
det(baby-65, the-64)
dobj(kill-63, baby-65)

(ROOT
  (S
    (NP (PRP you))
    (VP (MD will)
      (VP (VB get)
        (NP
          (NP (JJ many) (JJ different) (NNS answers))
          (CC and)
          (NP (JJ different) (NNS justifications)))
        (SBAR (IN so)
          (S
            (SBAR (IN if)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP (JJ objective) (NN morality)))))
            (, ,)
            (NP (NNS humans))
            (VP (MD can) (RB not)
              (VP
                (VP (VB converse)
                  (PP (IN with)
                    (NP (NN god))))
                (CC and)
                (VP (VB figure)
                  (PRT (RP out))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)))))))))))
    (. .)))

nsubj(get-3, you-1)
aux(get-3, will-2)
root(ROOT-0, get-3)
amod(answers-6, many-4)
amod(answers-6, different-5)
dobj(get-3, answers-6)
amod(justifications-9, different-8)
dobj(get-3, justifications-9)
conj_and(answers-6, justifications-9)
mark(converse-20, so-10)
mark(is-13, if-11)
expl(is-13, there-12)
advcl(converse-20, is-13)
amod(morality-15, objective-14)
nsubj(is-13, morality-15)
nsubj(converse-20, humans-17)
nsubj(figure-24, humans-17)
aux(converse-20, can-18)
neg(converse-20, not-19)
advcl(get-3, converse-20)
prep_with(converse-20, god-22)
advcl(get-3, figure-24)
conj_and(converse-20, figure-24)
prt(figure-24, out-25)
dobj(is-28, what-26)
nsubj(is-28, it-27)
ccomp(figure-24, is-28)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD would)
      (ADVP (RB still))
      (VP (VB be)
        (VP (VBN left)
          (PP (IN with)
            (NP (JJ subjective) (NN morality)))
          (SBAR (RB only)
            (S
              (NP (PRP we))
              (VP (MD would)
                (VP (VB be)
                  (VP (VBN judged)
                    (PP (IN by)
                      (NP
                        (NP (DT a) (NN god))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP
                              (VP (VBZ has)
                                (NP (DT an) (JJ objective) (NN morality)))
                              (CC and)
                              (VP (VBZ sends))
                              (NP (NNS people))
                              (PP (TO to)
                                (NP
                                  (NP (DT the) (NN lake))
                                  (PP (IN of)
                                    (NP (NN fire)))))
                              (PP (VBN based)
                                (PP (IN on)
                                  (NP
                                    (NP (DT a) (NN morality))
                                    (SBAR
                                      (S
                                        (NP (PRP they))
                                        (VP (MD ca) (RB n't)
                                          (VP (VB know)))))))))))))))))))))
    (. .)))

nsubjpass(left-5, We-1)
aux(left-5, would-2)
advmod(left-5, still-3)
auxpass(left-5, be-4)
root(ROOT-0, left-5)
amod(morality-8, subjective-7)
prep_with(left-5, morality-8)
advmod(judged-13, only-9)
nsubjpass(judged-13, we-10)
aux(judged-13, would-11)
auxpass(judged-13, be-12)
ccomp(left-5, judged-13)
det(god-16, a-15)
agent(judged-13, god-16)
nsubj(has-18, god-16)
nsubj(sends-23, god-16)
rcmod(god-16, has-18)
det(morality-21, an-19)
amod(morality-21, objective-20)
dobj(has-18, morality-21)
rcmod(god-16, sends-23)
conj_and(has-18, sends-23)
dobj(has-18, people-24)
det(lake-27, the-26)
prep_to(has-18, lake-27)
prep_of(lake-27, fire-29)
prepc_based_on(has-18, on-31)
det(morality-33, a-32)
pobj(has-18, morality-33)
dobj(know-37, morality-33)
nsubj(know-37, they-34)
aux(know-37, ca-35)
neg(know-37, n't-36)
rcmod(morality-33, know-37)

