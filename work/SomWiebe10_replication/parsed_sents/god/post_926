(ROOT
  (SBARQ
    (WHNP (WP Which))
    (SQ
      (VP (VBD came)
        (NP
          (NP (JJ first))
          (, ,)
          (NP (DT the) (NN chicken))
          (CC or)
          (NP (DT the) (NN egg)))))
    (. ?)))

nsubj(came-2, Which-1)
root(ROOT-0, came-2)
dobj(came-2, first-3)
det(chicken-6, the-5)
dobj(came-2, chicken-6)
conj_or(first-3, chicken-6)
det(egg-9, the-8)
dobj(came-2, egg-9)
conj_or(first-3, egg-9)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (NP (NN egg)))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB get)
        (NP (DT an) (NN egg))
        (PP (IN without)
          (NP (DT a) (NN chicken)))))
    (. ?)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(get-9, say-3)
dobj(say-3, egg-4)
advmod(get-9, how-6)
aux(get-9, do-7)
nsubj(get-9, you-8)
root(ROOT-0, get-9)
det(egg-11, an-10)
dobj(get-9, egg-11)
det(chicken-14, a-13)
prep_without(get-9, chicken-14)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (NP (NN chicken)))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB get)
        (NP (DT a) (NN chicken))
        (PP (IN without)
          (NP (DT an) (NN egg)))))
    (. ?)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(get-9, say-3)
dobj(say-3, chicken-4)
advmod(get-9, how-6)
aux(get-9, do-7)
nsubj(get-9, you-8)
root(ROOT-0, get-9)
det(chicken-11, a-10)
dobj(get-9, chicken-11)
det(egg-14, an-13)
prep_without(get-9, egg-14)

(ROOT
  (S
    (NP (DT The) (JJ obvious))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN chicken))
          (VP (VBD came)
            (SBAR
              (S
                (NP
                  (NP (JJ first))
                  (, ,)
                  (VP (VBN created)
                    (PP (IN by)
                      (NP (NNP spiritual)))
                    (S
                      (VP (VBG being)
                        (NP (PRP we))))))
                (VP (VBP call)
                  (NP (NNP God)))))))))
    (. .)))

det(obvious-2, The-1)
nsubj(is-3, obvious-2)
root(ROOT-0, is-3)
complm(came-7, that-4)
det(chicken-6, the-5)
nsubj(came-7, chicken-6)
ccomp(is-3, came-7)
nsubj(call-15, first-8)
partmod(first-8, created-10)
agent(created-10, spiritual-12)
cop(we-14, being-13)
xcomp(created-10, we-14)
ccomp(came-7, call-15)
dobj(call-15, God-16)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT the) (JJ only) (JJ logical) (NN way)
        (S
          (VP (TO to)
            (VP (VB explain)
              (NP (DT the) (NN existence))
              (PP
                (PP (IN of)
                  (NP (DT the) (NN chicken)))
                (CC or)
                (PP (IN for)
                  (NP
                    (NP (DT any) (JJ other) (NN thing))
                    (PP
                      (PP (IN on)
                        (NP (NN earth)))
                      (CC or)
                      (PP (IN in)
                        (NP (DT the) (NNS heavens))))))))))))
    (. .)))

nsubj(way-6, This-1)
cop(way-6, is-2)
det(way-6, the-3)
amod(way-6, only-4)
amod(way-6, logical-5)
root(ROOT-0, way-6)
aux(explain-8, to-7)
infmod(way-6, explain-8)
infmod(way-6, explain-8')
conj_or(explain-8, explain-8')
det(existence-10, the-9)
dobj(explain-8, existence-10)
det(chicken-13, the-12)
prep_of(explain-8, chicken-13)
det(thing-18, any-16)
amod(thing-18, other-17)
prep_for(explain-8', thing-18)
prep_for(explain-8', thing-18')
conj_or(thing-18, thing-18')
prep_on(thing-18, earth-20)
det(heavens-24, the-23)
prep_in(thing-18', heavens-24)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (NP (NN evolution)))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBZ are) (RB n't)
      (NP (EX there))
      (ADJP (JJ chickens))
      (S
        (ADVP (RB still))
        (VP (VBG popping)
          (PRT (RP up))
          (PP (RB out) (IN of)
            (NP (JJ thin) (NN air)))
          (PP (IN without)
            (NP (DT an) (NN egg)))))
      (. ?))))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(chickens-10, say-3)
dobj(say-3, evolution-4)
advmod(chickens-10, why-6)
cop(chickens-10, are-7)
neg(chickens-10, n't-8)
expl(chickens-10, there-9)
root(ROOT-0, chickens-10)
advmod(popping-12, still-11)
dep(chickens-10, popping-12)
prt(popping-12, up-13)
amod(air-17, thin-16)
prep_out_of(popping-12, air-17)
det(egg-20, an-19)
prep_without(popping-12, egg-20)

(ROOT
  (S
    (ADVP (RB Again))
    (NP (DT the)
      (ADJP (RB only) (JJ logical))
      (NN conclusion))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT a) (NN creator))))))
    (. .)))

advmod(is-6, Again-1)
det(conclusion-5, the-2)
advmod(logical-4, only-3)
amod(conclusion-5, logical-4)
nsubj(is-6, conclusion-5)
root(ROOT-0, is-6)
complm(is-9, that-7)
expl(is-9, there-8)
ccomp(is-6, is-9)
det(creator-11, a-10)
nsubj(is-9, creator-11)

