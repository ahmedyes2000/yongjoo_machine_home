(ROOT
  (S
    (NP (DT A) (JJ scientific) (NN answer))
    (VP (VBZ is)
      (ADJP (JJ easy)))
    (. .)))

det(answer-3, A-1)
amod(answer-3, scientific-2)
nsubj(easy-5, answer-3)
cop(easy-5, is-4)
root(ROOT-0, easy-5)

(ROOT
  (FRAG
    (WHADVP (RB '') (WRB Why))
    (NP (RB not))
    (. ?)))

dep(not-3, Why-2)
root(ROOT-0, not-3)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP Sorry))
      (VP (TO to)
        (VP (VB answer)
          (NP (PRP$ your) (NN question))
          (PP (IN with)
            (NP (DT a) (NN question))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBP 're)
        (VP (VBG operating)
          (PP (IN on)
            (NP
              (NP (DT a)
                (ADJP (RB potentially) (JJ false))
                (NN premise))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (NN everything))
                  (VP (VBZ has)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP
                            (NP (DT a) (NN reason))
                            (PP (IN for)
                              (NP (VBG being)))))))))))))))
    (. .)))

nsubj(answer-4, Sorry-2)
aux(answer-4, to-3)
root(ROOT-0, answer-4)
poss(question-6, your-5)
dobj(answer-4, question-6)
det(question-9, a-8)
prep_with(answer-4, question-9)
nsubj(operating-14, you-12)
aux(operating-14, 're-13)
conj_but(answer-4, operating-14)
det(premise-19, a-16)
advmod(false-18, potentially-17)
amod(premise-19, false-18)
prep_on(operating-14, premise-19)
dobj(has-23, premise-19)
dep(has-23, that-21)
nsubj(has-23, everything-22)
xsubj(have-25, everything-22)
dep(premise-19, has-23)
aux(have-25, to-24)
xcomp(has-23, have-25)
det(reason-27, a-26)
dobj(have-25, reason-27)
prep_for(reason-27, being-29)

(ROOT
  (S
    (ADVP (RB Obviously))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (NP (NNP God))
            (VP (TO to)
              (VP (VB have)
                (VP (VBN created)
                  (NP (NN everything)))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (VBP 're)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB invent)
              (NP (NN evidence))
              (S
                (VP (TO to)
                  (VP (VB reinforce)
                    (NP (DT that) (NN belief))))))))))
    (. .)))

advmod(going-15, Obviously-1)
mark(want-5, if-3)
nsubj(want-5, you-4)
advcl(going-15, want-5)
nsubj(created-9, God-6)
aux(created-9, to-7)
aux(created-9, have-8)
xcomp(want-5, created-9)
dobj(created-9, everything-10)
advmod(going-15, then-12)
nsubj(going-15, you-13)
xsubj(invent-17, you-13)
aux(going-15, 're-14)
root(ROOT-0, going-15)
aux(invent-17, to-16)
xcomp(going-15, invent-17)
dobj(invent-17, evidence-18)
aux(reinforce-20, to-19)
xcomp(invent-17, reinforce-20)
det(belief-22, that-21)
dobj(reinforce-20, belief-22)

