(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN basis))
        (PP (IN of)
          (NP (JJ scientific) (`` ``) (NNS proof) ('' '')))))
    (. ?)))

attr(is-2, What-1)
root(ROOT-0, is-2)
det(basis-4, the-3)
nsubj(is-2, basis-4)
amod(proof-8, scientific-6)
prep_of(basis-4, proof-8)

(ROOT
  (NP
    (NP
      (NP (NNS Experiments))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP produce)
            (NP (DT the) (JJ same) (NNS results))))))
    (VP (VBN tested)
      (PP (IN by)
        (NP (JJ various) (NNS people)))
      (ADVP (RB right)))
    (. ?)))

root(ROOT-0, Experiments-1)
nsubj(produce-3, Experiments-1)
rcmod(Experiments-1, produce-3)
det(results-6, the-4)
amod(results-6, same-5)
dobj(produce-3, results-6)
partmod(Experiments-1, tested-7)
amod(people-10, various-9)
agent(tested-7, people-10)
advmod(tested-7, right-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP give)
          (NP (NN religion))
          (NP
            (NP (DT the) (JJ same) (NN benefit))
            (PP (IN of)
              (S
                (VP (VBG proving)
                  (NP (PRP itself))
                  (PP (IN by)
                    (NP
                      (NP (DT this) (NN way))
                      (ADVP (RB then)))))))))))
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (NNS millions))
        (PP (IN upon)
          (NP
            (NP (NNS millions))
            (PP (IN of)
              (NP
                (NP (NNS people))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP
                      (VP (VBP experience)
                        (NP (NN god)))
                      (CC and)
                      (VP
                        (ADVP (RB therefore))
                        (VBP have)
                        (VP (VBN proven)
                          (NP (PRP$ his) (NN existence)))))))))))))
    (. .)))

mark(give-3, If-1)
nsubj(give-3, you-2)
advcl(are-16, give-3)
iobj(give-3, religion-4)
det(benefit-7, the-5)
amod(benefit-7, same-6)
dobj(give-3, benefit-7)
prepc_of(benefit-7, proving-9)
dobj(proving-9, itself-10)
det(way-13, this-12)
prep_by(proving-9, way-13)
advmod(way-13, then-14)
expl(are-16, there-15)
root(ROOT-0, are-16)
nsubj(are-16, millions-17)
prep_upon(millions-17, millions-19)
prep_of(millions-19, people-21)
nsubj(experience-23, people-21)
nsubj(proven-28, people-21)
rcmod(people-21, experience-23)
dobj(experience-23, god-24)
advmod(proven-28, therefore-26)
aux(proven-28, have-27)
rcmod(people-21, proven-28)
conj_and(experience-23, proven-28)
poss(existence-30, his-29)
dobj(proven-28, existence-30)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (JJ many) (NNS people))
      (VP (VBP experience)
        (NP (PRP him))
        (PP (IN in)
          (NP (DT a) (JJ different) (NN way)))))
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (S
          (VP (TO to)
            (PRN (, ,)
              (S
                (NP (PRP I))
                (VP (VBP think)))
              (, ,))
            (VP (VB chalk)
              (NP (PRP it))
              (ADVP
                (ADVP (RB up)
                  (NP (DT a) (RB lot))
                  (PP (TO to)
                    (NP (NN culture)
                      (CC and)
                      (NNS ideas))))
                (PP (IN about)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP he))
                      (VP (VBZ is)))))))))))
    (. .)))

advmod(experience-4, Now-1)
amod(people-3, many-2)
nsubj(experience-4, people-3)
root(ROOT-0, experience-4)
dobj(experience-4, him-5)
det(way-9, a-7)
amod(way-9, different-8)
prep_in(experience-4, way-9)
nsubj(have-12, we-11)
xsubj(chalk-18, we-11)
conj_but(experience-4, have-12)
aux(chalk-18, to-13)
nsubj(think-16, I-15)
parataxis(chalk-18, think-16)
xcomp(have-12, chalk-18)
dobj(chalk-18, it-19)
advmod(chalk-18, up-20)
det(lot-22, a-21)
pobj(up-20, lot-22)
prep_to(up-20, culture-24)
prep_to(up-20, ideas-26)
conj_and(culture-24, ideas-26)
dobj(is-30, what-28)
nsubj(is-30, he-29)
prepc_about(up-20, is-30)

(ROOT
  (S
    (NP (DT Some) (NNS people))
    (VP (VBP are)
      (ADVP (RB actually))
      (ADJP (JJ incapable)
        (PP (IN of)
          (S
            (VP (VBG experiencing)
              (NP (NN god))))))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP lack)
            (SBAR
              (S
                (NP (DT the) (NNS prerequisites))
                (ADVP (RB usually))
                (VP (VBD sucked)
                  (PRT (RP out))
                  (PP (IN of)
                    (NP (PRP them)))
                  (PP (IN by)
                    (NP
                      (NP (DT a) (NN lifetime))
                      (PP (IN of)
                        (NP (NN incredulity))))))))))))
    (. .)))

det(people-2, Some-1)
nsubj(incapable-5, people-2)
cop(incapable-5, are-3)
advmod(incapable-5, actually-4)
root(ROOT-0, incapable-5)
prepc_of(incapable-5, experiencing-7)
dobj(experiencing-7, god-8)
mark(lack-11, because-9)
nsubj(lack-11, they-10)
advcl(incapable-5, lack-11)
det(prerequisites-13, the-12)
nsubj(sucked-15, prerequisites-13)
advmod(sucked-15, usually-14)
ccomp(lack-11, sucked-15)
prep_out_of(sucked-15, them-18)
det(lifetime-21, a-20)
prep_by(sucked-15, lifetime-21)
prep_of(lifetime-21, incredulity-23)

(ROOT
  (SQ (VBZ Has)
    (NP (NN anyone))
    (VP (VBN seen)
      (NP (DT a) (NN quark)))
    (. ?)))

aux(seen-3, Has-1)
nsubj(seen-3, anyone-2)
root(ROOT-0, seen-3)
det(quark-5, a-4)
dobj(seen-3, quark-5)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP (DT a) (NN quark))
      (VP (VBN made)
        (PP (IN of))))
    (. ?)))

prep_of(made-5, What-1)
auxpass(made-5, is-2)
det(quark-4, a-3)
nsubjpass(made-5, quark-4)
root(ROOT-0, made-5)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (PRP$ my) (CD two) (NNS cents)))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
poss(cents-5, my-3)
num(cents-5, two-4)
nsubj('s-2, cents-5)

(ROOT
  (FRAG (CC Or)
    (SBAR (IN in)
      (S
        (NP
          (NP (DT some) (NNS cases))
          (ADVP (RB never)))
        (ADVP (RB there))
        (PP (IN in)
          (NP (DT the) (JJ first) (NN place)))))
    (. .)))

dep(cases-4, Or-1)
mark(cases-4, in-2)
det(cases-4, some-3)
root(ROOT-0, cases-4)
advmod(cases-4, never-5)
advmod(cases-4, there-6)
dep(cases-4, in-7)
det(place-10, the-8)
amod(place-10, first-9)
pobj(in-7, place-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB give)
              (NP (DT an) (NN example)))))))
    (. .)))

nsubj(like-3, I-1)
xsubj(give-5, I-1)
aux(like-3, 'd-2)
root(ROOT-0, like-3)
aux(give-5, to-4)
xcomp(like-3, give-5)
det(example-7, an-6)
dobj(give-5, example-7)

(ROOT
  (S
    (NP (PRP$ My) (NN mathematics) (NN professor))
    (VP (VBD was)
      (ADVP (RB once))
      (VP (VBN asked)
        (PP (IN by)
          (NP
            (NP (DT a) (NN colleague))
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP
                    (VP (VB believe)
                      (PP (IN in)
                        (NP (NN god))))
                    (CC and)
                    (ADVP (RB still))
                    (VP (VB be)
                      (NP (PDT such) (DT a) (JJ logical) (NN person)))))))))))
    (. .)))

poss(professor-3, My-1)
nn(professor-3, mathematics-2)
nsubjpass(asked-6, professor-3)
auxpass(asked-6, was-4)
advmod(asked-6, once-5)
root(ROOT-0, asked-6)
det(colleague-9, a-8)
agent(asked-6, colleague-9)
advmod(believe-13, how-10)
nsubj(believe-13, he-11)
aux(believe-13, could-12)
dep(colleague-9, believe-13)
prep_in(believe-13, god-15)
dep(colleague-9, still-17)
advmod(believe-13, still-17)
conj_and(believe-13, still-17)
cop(person-22, be-18)
predet(person-22, such-19)
det(person-22, a-20)
amod(person-22, logical-21)
dep(colleague-9, person-22)
conj_and(believe-13, person-22)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN reply))
      (VP (VBD was)
        (ADJP
          (ADJP (JJR more))
          (CC or)
          (ADJP (JJR less)
            (SBAR
              (S
                (PP (IN along)
                  (NP (DT these) (NNS lines)))
                (, ,) (`` ``)
                (NP (PRP I))
                (VP (MD 'd)
                  (VP (VB explain)
                    (NP (PRP it))
                    (PP (TO to)
                      (NP (PRP you)))))))))))
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD could) (RB n't)
        (VP (VB understand)
          (PP (IN in)
            (NP
              (NP (DT the) (NN time))
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBP have)))))))))
    (. .)))

poss(reply-2, His-1)
nsubj(more-4, reply-2)
nsubj(less-6, reply-2)
cop(more-4, was-3)
root(ROOT-0, more-4)
conj_or(more-4, less-6)
det(lines-9, these-8)
prep_along(explain-14, lines-9)
nsubj(explain-14, I-12)
aux(explain-14, 'd-13)
dep(less-6, explain-14)
dobj(explain-14, it-15)
prep_to(explain-14, you-17)
nsubj(understand-22, you-19)
aux(understand-22, could-20)
neg(understand-22, n't-21)
conj_but(more-4, understand-22)
det(time-25, the-24)
prep_in(understand-22, time-25)
dobj(have-27, time-25)
nsubj(have-27, we-26)
rcmod(time-25, have-27)

(ROOT
  (FRAG
    (VP (VBZ '') (`` ``)
      (FRAG
        (WHADVP (WRB Why))
        (NP (RB not))
        (. ?)))))

dep(not-4, Why-3)
root(ROOT-0, not-4)

(ROOT
  (S ('' '')
    (S (`` ``)
      (ADVP (RB Could))
      (NP (PRP we))
      (VP (VBP pull)
        (NP (NN someone))
        (PP (IN off)
          (NP (DT the) (NN street)))))
    (CC and)
    (S
      (S
        (VP (VB explain)
          (PP (TO to)
            (NP
              (ADJP
                (NP (PRP them))
                (JJ complex))
              (NN number) (NN theory)))
          (SBAR (IN until)
            (S
              (NP (PRP they))
              (VP (VBD understood)
                (NP
                  (NP (PRP it))
                  (CONJP (RB as) (RB well) (IN as))
                  (NP (PRP we))))))))
      (VP (VBP do)))
    (. ?)))

advmod(pull-5, Could-3)
nsubj(pull-5, we-4)
root(ROOT-0, pull-5)
dobj(pull-5, someone-6)
det(street-9, the-8)
prep_off(pull-5, street-9)
csubj(do-25, explain-11)
npadvmod(complex-14, them-13)
amod(theory-16, complex-14)
nn(theory-16, number-15)
prep_to(explain-11, theory-16)
mark(understood-19, until-17)
nsubj(understood-19, they-18)
advcl(explain-11, understood-19)
dobj(understood-19, it-20)
dobj(understood-19, we-24)
conj_and(it-20, we-24)
conj_and(pull-5, do-25)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course) (RB not)))
    (, ,)
    (NP (PRP they))
    (VP (VBP need)
      (S
        (NP (DT a) (NN basis))
        (VP (TO to)
          (VP (VB start)
            (PP (IN from))))))
    (. .)))

prep_of(need-6, course-2)
neg(course-2, not-3)
nsubj(need-6, they-5)
root(ROOT-0, need-6)
det(basis-8, a-7)
nsubj(start-10, basis-8)
aux(start-10, to-9)
xcomp(need-6, start-10)
prep(start-10, from-11)

(ROOT
  (S ('' '')
    (ADVP (IN Besides))
    (, ,)
    (NP (NN science))
    (VP (VBZ lives)
      (PRT (RP off))
      (PP (IN of)
        (NP (NN faith)))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD would) (RB n't)
            (VP (VB start)
              (S
                (VP (TO to)
                  (VP (VB decry)
                    (NP (PRP it))))))))))
    (. .)))

advmod(lives-5, Besides-2)
nsubj(lives-5, science-4)
root(ROOT-0, lives-5)
prep_off_of(lives-5, faith-8)
nsubj(start-12, I-9)
xsubj(decry-14, I-9)
aux(start-12, would-10)
neg(start-12, n't-11)
ccomp(lives-5, start-12)
aux(decry-14, to-13)
xcomp(start-12, decry-14)
dobj(decry-14, it-15)

