(ROOT
  (S
    (NP (DT A) (NN religion))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP (JJ cultish))))
    (. .) (. .)))

det(religion-2, A-1)
nsubj(cultish-6, religion-2)
aux(cultish-6, can-3)
neg(cultish-6, not-4)
cop(cultish-6, be-5)
root(ROOT-0, cultish-6)

(ROOT
  (FRAG
    (SBAR (IN because)
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (NP (DT both) (JJ different) (NNS things)))))
    (. .)))

mark(things-6, because-1)
nsubj(things-6, they-2)
cop(things-6, 're-3)
det(things-6, both-4)
amod(things-6, different-5)
root(ROOT-0, things-6)

(ROOT
  (S
    (FRAG (RB Maybe)
      (PP (IN for)
        (NP (JJ different) (NNS reasons))))
    (: ...)
    (S (CC but)
      (NP (DT the) (NN conclusion))
      (VP (VBZ is)
        (NP (DT the) (JJ same))))
    (. .)))

dep(same-11, Maybe-1)
dep(Maybe-1, for-2)
amod(reasons-4, different-3)
pobj(for-2, reasons-4)
cc(same-11, but-6)
det(conclusion-8, the-7)
nsubj(same-11, conclusion-8)
cop(same-11, is-9)
det(same-11, the-10)
root(ROOT-0, same-11)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (ADVP (RB just))
      (VBP want)
      (S
        (VP (TO to)
          (VP (VB know)
            (ADVP (RB now))
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (PP (IN against)
                    (NP (NN zoophilia) (, ,) (NN yes)
                      (CC or)
                      (NN no.))))))))))))

nsubj(want-3, I-1)
xsubj(know-5, I-1)
advmod(want-3, just-2)
root(ROOT-0, want-3)
aux(know-5, to-4)
xcomp(want-3, know-5)
advmod(know-5, now-6)
mark(are-9, if-7)
nsubj(are-9, you-8)
advcl(know-5, are-9)
prep_against(are-9, zoophilia-11)
prep_against(are-9, yes-13)
conj_or(zoophilia-11, yes-13)
prep_against(are-9, no.-15)
conj_or(zoophilia-11, no.-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are) (RB not)
          (PP (IN against)
            (NP
              (NP (PRP it))
              (PP (IN for)
                (NP (DT the) (NNS reasons)))))
          (SBAR (IN that)
            (S
              (NP (NNS people))
              (VP (MD should)
                (VP (VB be)
                  (ADJP (JJ able)
                    (S
                      (VP (TO to)
                        (VP (VB do)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP they))
                              (VP (VBP want)
                                (PP (IN with)
                                  (NP (PRP themselves)))))))))))))))))
    (: ...)
    (ADVP (RB then))
    (S
      (NP (PRP I))
      (ADVP (RB really))
      (VP (VBP do) (RB not)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB continue)
                (S
                  (VP (VBG debating)))))))))
    (. .)))

mark(are-3, If-1)
nsubj(are-3, you-2)
advcl(want-28, are-3)
neg(are-3, not-4)
prep_against(are-3, it-6)
det(reasons-9, the-8)
prep_for(it-6, reasons-9)
complm(able-14, that-10)
nsubj(able-14, people-11)
aux(able-14, should-12)
cop(able-14, be-13)
ccomp(are-3, able-14)
aux(do-16, to-15)
xcomp(able-14, do-16)
dobj(want-19, what-17)
nsubj(want-19, they-18)
ccomp(do-16, want-19)
prep_with(want-19, themselves-21)
advmod(want-28, then-23)
nsubj(want-28, I-24)
xsubj(continue-30, I-24)
advmod(want-28, really-25)
aux(want-28, do-26)
neg(want-28, not-27)
root(ROOT-0, want-28)
aux(continue-30, to-29)
xcomp(want-28, continue-30)
xcomp(continue-30, debating-31)

(ROOT
  (S
    (NP
      (NP (DT The) (NN fact))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBD argued)
            (PP (IN for)
              (NP (NN zoophilia)))))))
    (VP (VBZ shows)
      (SBAR (IN that)
        (S
          (NP (DT this))
          (VP (VBZ has)
            (VP (VBN gone)
              (PP (IN beyond)
                (NP (NN point))))))))
    (. .)))

det(fact-2, The-1)
dobj(argued-5, fact-2)
nsubj(shows-8, fact-2)
complm(argued-5, that-3)
nsubj(argued-5, you-4)
dep(fact-2, argued-5)
prep_for(argued-5, zoophilia-7)
root(ROOT-0, shows-8)
complm(gone-12, that-9)
nsubj(gone-12, this-10)
aux(gone-12, has-11)
ccomp(shows-8, gone-12)
prep_beyond(gone-12, point-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG telling)
        (NP (PRP me))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD can)
              (VP
                (VP (VB go)
                  (PRT (RP up))
                  (PP (TO to)
                    (NP (NN somebody))))
                (CC and)
                (VP (VB kill)
                  (NP (PRP them)))))))))
    (. .)))

nsubj(telling-3, You-1)
aux(telling-3, 're-2)
root(ROOT-0, telling-3)
dobj(telling-3, me-4)
complm(go-8, that-5)
nsubj(go-8, I-6)
nsubj(kill-13, I-6)
aux(go-8, can-7)
ccomp(telling-3, go-8)
prt(go-8, up-9)
prep_to(go-8, somebody-11)
ccomp(telling-3, kill-13)
conj_and(go-8, kill-13)
dobj(kill-13, them-14)

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP (VBZ 's)
        (ADJP (JJ dead))
        (SBAR (IN so)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB hear)
                (S
                  (NP (PRP him))
                  (VP (VBG complaining)))))))))
    (: ...)
    (S (IN so)
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ ok))))
    (. .)))

nsubj(dead-3, He-1)
cop(dead-3, 's-2)
root(ROOT-0, dead-3)
mark(hear-8, so-4)
nsubj(hear-8, I-5)
aux(hear-8, do-6)
neg(hear-8, n't-7)
advcl(dead-3, hear-8)
nsubj(complaining-10, him-9)
dep(hear-8, complaining-10)
dep(ok-15, so-12)
nsubj(ok-15, it-13)
cop(ok-15, is-14)
parataxis(dead-3, ok-15)

(ROOT
  (S
    (NP (NNP Kids))
    (VP (MD should)
      (VP (VB be)
        (VP (VBG slitting)
          (NP (PRP$ their) (JJ own) (NNS risks)))))
    (. .)))

nsubj(slitting-4, Kids-1)
aux(slitting-4, should-2)
aux(slitting-4, be-3)
root(ROOT-0, slitting-4)
poss(risks-7, their-5)
amod(risks-7, own-6)
dobj(slitting-4, risks-7)

(ROOT
  (S (RB Even)
    (SBAR (RB even)
      (S
        (NP (PRP they))
        (VP (VBP cause)
          (NP (JJ permanant) (NN damage)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ ok))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP 're)
            (ADVP (RB only))
            (VP (VBG doing)
              (NP (PRP it))
              (PP (TO to)
                (NP (NNS themslves))))))))
    (. .)))

advmod(ok-10, Even-1)
advmod(cause-4, even-2)
nsubj(cause-4, they-3)
dep(ok-10, cause-4)
amod(damage-6, permanant-5)
dobj(cause-4, damage-6)
nsubj(ok-10, it-8)
cop(ok-10, 's-9)
root(ROOT-0, ok-10)
mark(doing-15, because-11)
nsubj(doing-15, they-12)
aux(doing-15, 're-13)
advmod(doing-15, only-14)
advcl(ok-10, doing-15)
dobj(doing-15, it-16)
prep_to(doing-15, themslves-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD should)
      (VP (VB take)
        (NP (NNS drugs))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (VP (VBG doing)
                (S
                  (NP (PRP it))
                  (NP (PRP ourselves)))))))))
    (. .)))

nsubj(take-3, We-1)
aux(take-3, should-2)
root(ROOT-0, take-3)
dobj(take-3, drugs-4)
mark(doing-9, because-6)
nsubj(doing-9, we-7)
aux(doing-9, 're-8)
advcl(take-3, doing-9)
nsubj(ourselves-11, it-10)
xcomp(doing-9, ourselves-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ glad)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP think)
              (NP (DT that) (NN way)))))))
    (. .)))

nsubj(glad-3, I-1)
cop(glad-3, 'm-2)
root(ROOT-0, glad-3)
nsubj(think-5, you-4)
dep(glad-3, think-5)
det(way-7, that-6)
dobj(think-5, way-7)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG saying)
          (SBAR
            (S
              (NP (NN alcohol))
              (VP (VBZ is)
                (ADJP (JJ bad))))))))
    (NP (PRP you))
    (VP (VBP ARE)
      (VP (VBG agreeing)
        (PP (IN with)
          (NP (`` ``)
            (NP (NNP God) (POS 's))
            (NN word) ('' '')))))
    (. .)))

prepc_by(agreeing-8, saying-2)
nsubj(bad-5, alcohol-3)
cop(bad-5, is-4)
ccomp(saying-2, bad-5)
nsubj(agreeing-8, you-6)
aux(agreeing-8, ARE-7)
root(ROOT-0, agreeing-8)
poss(word-13, God-11)
prep_with(agreeing-8, word-13)

(ROOT
  (S
    (S
      (S
        (NP (NNP God))
        (VP (VBZ says)
          (S (`` ``)
            (NP (NN alcohol))
            (VP (VBZ is)
              (ADJP (JJ bad)))
            ('' ''))))
      (, ,)
      (NP (PRP you))
      (VP (VBP say)
        (S (`` ``)
          (INTJ (UH Yes))
          (, ,)
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ bad)))
          ('' ''))))
    (: ...)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG agreeing)
          (PP (IN with)
            (NP (NNP God))))))
    (. .)))

nsubj(says-2, God-1)
ccomp(say-10, says-2)
nsubj(bad-6, alcohol-4)
cop(bad-6, is-5)
ccomp(says-2, bad-6)
nsubj(say-10, you-9)
root(ROOT-0, say-10)
dep(bad-16, Yes-12)
nsubj(bad-16, it-14)
cop(bad-16, is-15)
ccomp(say-10, bad-16)
nsubj(agreeing-21, you-19)
aux(agreeing-21, are-20)
parataxis(say-10, agreeing-21)
prep_with(agreeing-21, God-23)

