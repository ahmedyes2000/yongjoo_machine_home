(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN evidence))
        (PP (IN for)
          (NP (NN god)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(evidence-4, no-3)
nsubj(is-2, evidence-4)
prep_for(evidence-4, god-6)

(ROOT
  (NP
    (NP (RB Not) (CD one))
    (NP (JJ single) (NN bit))
    (. .)))

neg(one-2, Not-1)
root(ROOT-0, one-2)
amod(bit-4, single-3)
dep(one-2, bit-4)

(ROOT
  (S
    (S
      (VP
        (VP (VB Take)
          (NP (PRP$ your) (NN time)))
        (, ,)
        (VP (VB read)
          (NP
            (NP (DT the) (JJ entire) (VBG opposing) (NN side))
            (PP (IN of)
              (NP (DT this) (NN thread)))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will) (RB not)
        (VP (VB find)
          (NP
            (NP (CD one) (JJ single) (NN thing))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD could)
                  (VP (VB be)
                    (VP (VBN considered)
                      (NP (JJ scientific) (NN evidence)))))))))))
    (. .)))

root(ROOT-0, Take-1)
poss(time-3, your-2)
dobj(Take-1, time-3)
dep(Take-1, read-5)
det(side-9, the-6)
amod(side-9, entire-7)
amod(side-9, opposing-8)
dobj(read-5, side-9)
det(thread-12, this-11)
prep_of(side-9, thread-12)
nsubj(find-17, you-14)
aux(find-17, will-15)
neg(find-17, not-16)
conj_and(Take-1, find-17)
num(thing-20, one-18)
amod(thing-20, single-19)
dobj(find-17, thing-20)
nsubjpass(considered-24, thing-20)
aux(considered-24, could-22)
auxpass(considered-24, be-23)
rcmod(thing-20, considered-24)
amod(evidence-26, scientific-25)
dobj(considered-24, evidence-26)

(ROOT
  (S
    (S
      (VP (VB Stack)
        (NP
          (NP
            (NP (DT that))
            (PP (IN against)
              (NP (NN evolution))))
          (, ,)
          (CC or)
          (NP
            (NP (DT the) (JJ big) (NN bang))
            (, ,)
            (CC or)
            (NP (DT any) (JJ other) (JJ modern) (JJ scientific) (NN theory))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP understand)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP I))
            (VP (MD can) (RB not)
              (VP (VB accept)
                (NP
                  (NP (DT the) (NN existence))
                  (PP (IN of)
                    (NP (DT a) (NN god))))))))))
    (. .)))

root(ROOT-0, Stack-1)
dobj(Stack-1, that-2)
prep_against(that-2, evolution-4)
det(bang-9, the-7)
amod(bang-9, big-8)
dobj(Stack-1, bang-9)
conj_or(that-2, bang-9)
det(theory-16, any-12)
amod(theory-16, other-13)
amod(theory-16, modern-14)
amod(theory-16, scientific-15)
conj_or(that-2, theory-16)
conj_or(bang-9, theory-16)
nsubj(understand-19, you-18)
conj_and(Stack-1, understand-19)
advmod(accept-24, why-20)
nsubj(accept-24, I-21)
aux(accept-24, can-22)
neg(accept-24, not-23)
advcl(understand-19, accept-24)
det(existence-26, the-25)
dobj(accept-24, existence-26)
det(god-29, a-28)
prep_of(existence-26, god-29)

