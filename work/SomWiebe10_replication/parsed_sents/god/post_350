(ROOT
  (S
    (VP (VB Look)
      (NP (NNS kids)))
    (. !)))

root(ROOT-0, Look-1)
dobj(Look-1, kids-2)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD started)
      (PP (IN with)
        (NP (DT the) (NN watchmaker) (NN argument))))
    (. !)))

nsubj(started-2, He-1)
root(ROOT-0, started-2)
det(argument-6, the-4)
nn(argument-6, watchmaker-5)
prep_with(started-2, argument-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG stating)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (NN god))
              (PRN (-LRB- -LRB-)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (JJS most) (NNS people))
                    (VP (VBP say)
                      (SBAR
                        (S
                          (VP (VBZ is)
                            (ADJP (JJ perfect))))))))
                (-RRB- -RRB-)))
            (VP (VBD created)
              (NP (DT the) (NN universe))
              (PRN (-LRB- -LRB-)
                (ADVP (RB perfectly))
                (-RRB- -RRB-)))))))
    (. .)))

nsubj(stating-3, You-1)
aux(stating-3, 're-2)
root(ROOT-0, stating-3)
complm(created-15, that-4)
det(god-6, a-5)
nsubj(created-15, god-6)
dep(say-11, which-8)
nsubj(perfect-13, which-8)
amod(people-10, most-9)
nsubj(say-11, people-10)
dep(god-6, say-11)
cop(perfect-13, is-12)
ccomp(say-11, perfect-13)
ccomp(stating-3, created-15)
det(universe-17, the-16)
dobj(created-15, universe-17)
dep(created-15, perfectly-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (ADJP (JJ arrogant) (RB enough)
        (S
          (VP (TO to)
            (VP (VB assume)
              (SBAR (IN that)
                (S
                  (NP (DT this) (NN universe))
                  (VP (VBD was)
                    (VP (VBN created)
                      (PP (IN for)
                        (NP
                          (NP (NNS humans))
                          (, ,)
                          (NP
                            (NP (CD one))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (JJS stupidest) (NNS assertions))
                                (SBAR
                                  (S
                                    (NP (PRP you))
                                    (VP (MD can)
                                      (VP (VB make)))))))))))))))))))
    (. .)))

nsubj(arrogant-3, You-1)
cop(arrogant-3, 're-2)
root(ROOT-0, arrogant-3)
advmod(arrogant-3, enough-4)
aux(assume-6, to-5)
xcomp(arrogant-3, assume-6)
complm(created-11, that-7)
det(universe-9, this-8)
nsubjpass(created-11, universe-9)
auxpass(created-11, was-10)
ccomp(assume-6, created-11)
prep_for(created-11, humans-13)
appos(humans-13, one-15)
det(assertions-19, the-17)
amod(assertions-19, stupidest-18)
prep_of(one-15, assertions-19)
dobj(make-22, assertions-19)
nsubj(make-22, you-20)
aux(make-22, can-21)
rcmod(assertions-19, make-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN god))
        (VP (VBZ exists))))
    (, ,)
    (NP (PRP he))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (DT a)
            (ADJP (RB damn) (JJ shitty))
            (NN one))
          (PP (IN for)
            (S
              (VP (VBG creating)
                (NP (PDT all) (DT this) (JJ useless) (NN crap))
                (PP (IN around)
                  (NP (PRP us)))))))
        (PRN (-LRB- -LRB-)
          (NP (DT the) (JJ whole) (NN universe)
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (VBP do) (RB n't)
                  (ADVP (RB really))
                  (VP (VB need))))))
          (-RRB- -RRB-))))
    (. .)))

mark(exists-4, If-1)
det(god-3, a-2)
nsubj(exists-4, god-3)
advcl(one-11, exists-4)
nsubj(one-11, he-6)
cop(one-11, 's-7)
det(one-11, a-8)
advmod(shitty-10, damn-9)
amod(one-11, shitty-10)
root(ROOT-0, one-11)
prepc_for(one-11, creating-13)
predet(crap-17, all-14)
det(crap-17, this-15)
amod(crap-17, useless-16)
dobj(creating-13, crap-17)
prep_around(creating-13, us-19)
det(universe-23, the-21)
amod(universe-23, whole-22)
appos(one-11, universe-23)
complm(need-29, that-24)
nsubj(need-29, we-25)
aux(need-29, do-26)
neg(need-29, n't-27)
advmod(need-29, really-28)
ccomp(universe-23, need-29)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would) (RB n't)
      (NP (DT a) (NN god))
      (VP (VB give)
        (NP (PRP us))
        (NP
          (NP (JJR better))
          (, ,)
          (ADJP (RB longer) (JJ lasting))
          (, ,)
          (NP (JJR stronger) (NNS bodies)))))
    (. ?)))

advmod(give-6, Why-1)
aux(give-6, would-2)
neg(give-6, n't-3)
det(god-5, a-4)
nsubj(give-6, god-5)
root(ROOT-0, give-6)
iobj(give-6, us-7)
dobj(give-6, better-8)
advmod(lasting-11, longer-10)
amod(better-8, lasting-11)
amod(bodies-14, stronger-13)
appos(better-8, bodies-14)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would) (RB n't)
      (NP (DT a) (NN god))
      (VP (VB make)
        (NP
          (NP (DT the) (NN universe))
          (VP (VBN centered)
            (PP (IN around)
              (NP (PRP us)))
            (SBAR (IN if)
              (S
                (NP (PRP we))
                (VP (VBD were)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP he))
                      (VP (VBD created)
                        (NP (PRP it))
                        (PP (IN for))))))))))))
    (. ?)))

advmod(make-6, Why-1)
aux(make-6, would-2)
neg(make-6, n't-3)
det(god-5, a-4)
nsubj(make-6, god-5)
root(ROOT-0, make-6)
det(universe-8, the-7)
dobj(make-6, universe-8)
partmod(universe-8, centered-9)
prep_around(centered-9, us-11)
mark(were-14, if-12)
nsubj(were-14, we-13)
advcl(centered-9, were-14)
dep(created-17, what-15)
nsubj(created-17, he-16)
ccomp(were-14, created-17)
dobj(created-17, it-18)
prep(created-17, for-19)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would) (RB n't)
      (NP (PRP we))
      (VP (VB be)
        (VP (VBG living)
          (PRT (RP in))
          (NP
            (NP (DT a) (JJ metaphorical) ('' '') (NNP Garden))
            (PP (IN of)
              (NP (NNP Eden))))
          ('' ''))))
    (. ?)))

advmod(living-6, Why-1)
aux(living-6, would-2)
neg(living-6, n't-3)
nsubj(living-6, we-4)
aux(living-6, be-5)
root(ROOT-0, living-6)
prt(living-6, in-7)
det(Garden-11, a-8)
amod(Garden-11, metaphorical-9)
dobj(living-6, Garden-11)
prep_of(Garden-11, Eden-13)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ 's)
      (NP (DT the) (NN answer))
      (: :)
      (SBAR (IN because)
        (S
          (NP (DT a) (NN god))
          (VP (VBZ does) (RB n't)
            (VP (VB exist))))))
    (. .)))

nsubj(answer-4, Here-1)
cop(answer-4, 's-2)
det(answer-4, the-3)
root(ROOT-0, answer-4)
mark(exist-11, because-6)
det(god-8, a-7)
nsubj(exist-11, god-8)
aux(exist-11, does-9)
neg(exist-11, n't-10)
advcl(answer-4, exist-11)
parataxis(answer-4, exist-11)

(ROOT
  (SBARQ
    (WHADVP (WRB Also))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB assert)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN christian) (NN God))
            (VP (VBD created)
              (NP (DT the) (NN universe)))))))
    (. ?)))

advmod(assert-6, Also-1)
advmod(assert-6, why-3)
aux(assert-6, do-4)
nsubj(assert-6, you-5)
root(ROOT-0, assert-6)
complm(created-11, that-7)
det(God-10, the-8)
nn(God-10, christian-9)
nsubj(created-11, God-10)
ccomp(assert-6, created-11)
det(universe-13, the-12)
dobj(created-11, universe-13)

(ROOT
  (S
    (INTJ (VB Please) (, ,) (VB please) (, ,) (VB please))
    (, ,)
    (S
      (NP (VB stop))
      (VP (VBG using)
        (NP
          (NP (NNS arguments))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP have)
                (VP (VBN been)
                  (VP (VBN proven)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP
                            (ADJP (VBN flawed)
                              (PRT (RP over)
                                (CC and)
                                (RP over)))
                            (CC and)
                            (ADJP (JJ over))))))))))))))
    (. !)))

dep(using-8, Please-1)
dep(Please-1, please-3)
dep(Please-1, please-5)
nsubj(using-8, stop-7)
root(ROOT-0, using-8)
dobj(using-8, arguments-9)
nsubjpass(proven-13, arguments-9)
aux(proven-13, have-11)
auxpass(proven-13, been-12)
rcmod(arguments-9, proven-13)
aux(flawed-16, to-14)
auxpass(flawed-16, be-15)
cop(flawed-16, be-15)
xcomp(proven-13, flawed-16)
dep(flawed-16, over-17)
dep(over-17, and-18)
dep(over-17, over-19)
xcomp(proven-13, over-21)
conj_and(flawed-16, over-21)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT the) (NN problem))
      (SBAR (IN that)
        (S
          (NP (NNS theists))
          (VP (VBP have)
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (NN convincing))
                  (VP (VBZ atheists)
                    (SBAR (IN that)
                      (S
                        (NP (EX there))
                        (VP (VBZ is)
                          (NP
                            (NP (DT a) (NN god))
                            (PP (IN of)
                              (NP (DT some) (NN sort))))))))))
              (, ,)
              (NP (PRP you))
              (VP (VBP do) (RB n't)
                (VP (VB use)
                  (NP (JJ good) (NNS arguments)))))))))
    (. .)))

nsubj(problem-4, This-1)
cop(problem-4, is-2)
det(problem-4, the-3)
root(ROOT-0, problem-4)
complm(have-7, that-5)
nsubj(have-7, theists-6)
ccomp(problem-4, have-7)
advmod(atheists-10, when-8)
nsubj(atheists-10, convincing-9)
advcl(use-23, atheists-10)
complm(is-13, that-11)
expl(is-13, there-12)
ccomp(atheists-10, is-13)
det(god-15, a-14)
nsubj(is-13, god-15)
det(sort-18, some-17)
prep_of(god-15, sort-18)
nsubj(use-23, you-20)
aux(use-23, do-21)
neg(use-23, n't-22)
ccomp(have-7, use-23)
amod(arguments-25, good-24)
dobj(use-23, arguments-25)

(ROOT
  (S
    (ADVP (RB Anyway))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB disprove)
          (NP (DT that) (NN argument)))))
    (, ,)
    (NP (PRP we))
    (VP (VBP recognize)
      (SBAR (IN that)
        (S
          (NP
            (NP (NNS things))
            (PP (IN like)
              (NP
                (NP (NNS jeans))
                (, ,)
                (NP (NN laptop))
                (, ,)
                (CC and)
                (NP (NNS WATCHES)))))
          (VP (VBP have)
            (NP
              (NP (DT a) (NN creator))
              (SBAR (IN because)
                (S
                  (NP (DT that))
                  (VP (VBZ 's)
                    (NP (DT the) (NN culture))))))
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (VBP 've)
                  (VP (VBN been)
                    (VP (VBN brought)
                      (PRT (RP up))
                      (PP (IN in)))))))))))
    (. .)))

advmod(recognize-9, Anyway-1)
aux(disprove-4, to-3)
purpcl(recognize-9, disprove-4)
det(argument-6, that-5)
dobj(disprove-4, argument-6)
nsubj(recognize-9, we-8)
root(ROOT-0, recognize-9)
complm(have-19, that-10)
nsubj(have-19, things-11)
prep_like(things-11, jeans-13)
prep_like(things-11, laptop-15)
conj_and(jeans-13, laptop-15)
prep_like(things-11, WATCHES-18)
conj_and(jeans-13, WATCHES-18)
ccomp(recognize-9, have-19)
det(creator-21, a-20)
dobj(have-19, creator-21)
mark(culture-26, because-22)
nsubj(culture-26, that-23)
cop(culture-26, 's-24)
det(culture-26, the-25)
dep(creator-21, culture-26)
complm(brought-31, that-27)
nsubjpass(brought-31, we-28)
aux(brought-31, 've-29)
auxpass(brought-31, been-30)
ccomp(have-19, brought-31)
prt(brought-31, up-32)
prep(brought-31, in-33)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBP have)
            (NP
              (NP (DT a) (NN creator))
              (SBAR (IN because)
                (S
                  (NP (EX there))
                  (VP (VBZ 's)
                    (NP
                      (NP (DT no) (NN method))
                      (SBAR
                        (WHPP (IN through)
                          (WHNP (WDT which)))
                        (S
                          (NP (PRP they))
                          (VP (MD could)
                            (VP (VB 've)
                              (VP (VBN come)
                                (ADVP (RB together) (JJ other))
                                (PP (IN than)
                                  (NP (DT that)))))))))))))))))
    (. .)))

nsubj(know-2, We-1)
root(ROOT-0, know-2)
complm(have-5, that-3)
nsubj(have-5, they-4)
ccomp(know-2, have-5)
det(creator-7, a-6)
dobj(have-5, creator-7)
mark('s-10, because-8)
expl('s-10, there-9)
dep(creator-7, 's-10)
det(method-12, no-11)
nsubj('s-10, method-12)
rel(come-18, which-14)
nsubj(come-18, they-15)
aux(come-18, could-16)
aux(come-18, 've-17)
rcmod(method-12, come-18)
advmod(other-20, together-19)
advmod(come-18, other-20)
prep_than(come-18, that-22)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP
        (NP (DT the) (NNS complexities))
        (PP (IN of)
          (NP
            (NP (PRP$ our) (NNS bodies))
            (, ,)
            (NP (DT the) (NNS spiders))
            (, ,)
            (CC and)
            (NP (DT the) (NN sea) (NNS shells))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP have)
      (VP (VBN explained)
        (NP (NNS methods))
        (PP (IN by)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP they))
              (VP (VBP reach)
                (NP
                  (NP (PRP$ their) (NN complexity))
                  (PRN (-LRB- -LRB-)
                    (NP (NN evolution))
                    (-RRB- -RRB-)))))))))
    (. .)))

cc(explained-19, But-1)
det(complexities-4, the-3)
prep_for(explained-19, complexities-4)
poss(bodies-7, our-6)
prep_of(complexities-4, bodies-7)
det(spiders-10, the-9)
prep_of(complexities-4, spiders-10)
conj_and(bodies-7, spiders-10)
det(shells-15, the-13)
nn(shells-15, sea-14)
prep_of(complexities-4, shells-15)
conj_and(bodies-7, shells-15)
nsubj(explained-19, we-17)
aux(explained-19, have-18)
root(ROOT-0, explained-19)
dobj(explained-19, methods-20)
dobj(reach-24, which-22)
nsubj(reach-24, they-23)
prepc_by(explained-19, reach-24)
poss(complexity-26, their-25)
dobj(reach-24, complexity-26)
appos(complexity-26, evolution-28)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ main) (NN problem))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP
              (PP (IN with)
                (NP (DT the) (NN watchmaker) (NN argument))))))))
    (VP (VBZ is)
      (NP (DT the) (JJ inherent) (JJ fundamentalist) (JJ theistic) (NN blindness))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ displays)))))
    (. .)))

det(problem-3, The-1)
amod(problem-3, main-2)
dobj(with-7, problem-3)
nsubj(blindness-16, problem-3)
complm(with-7, that-4)
nsubj(with-7, I-5)
aux(with-7, have-6)
dep(problem-3, with-7)
det(argument-10, the-8)
nn(argument-10, watchmaker-9)
pobj(with-7, argument-10)
cop(blindness-16, is-11)
det(blindness-16, the-12)
amod(blindness-16, inherent-13)
amod(blindness-16, fundamentalist-14)
amod(blindness-16, theistic-15)
root(ROOT-0, blindness-16)
complm(displays-19, that-17)
nsubj(displays-19, it-18)
ccomp(blindness-16, displays-19)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (NN surface)))
    (, ,)
    (NP (PRP it))
    (ADVP (RB simply))
    (VP (VBZ shows)
      (NP
        (NP (DT the) (NN theist))
        (VP (VBG ignoring)
          (NP
            (NP
              (NP (JJ scientific) (NN evidence))
              (-LRB- -LRB-)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (NN bit))
                      (PP (IN of)
                        (NP (DT a) (NN euphemism)))))))
              (, ,))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP 've)
                  (VP (VBN realized)))))))))
    (. .)))

det(surface-3, the-2)
prep_on(shows-7, surface-3)
nsubj(shows-7, it-5)
advmod(shows-7, simply-6)
root(ROOT-0, shows-7)
det(theist-9, the-8)
dobj(shows-7, theist-9)
partmod(theist-9, ignoring-10)
amod(evidence-12, scientific-11)
dobj(ignoring-10, evidence-12)
dobj(realized-24, evidence-12)
nsubj(bit-17, which-14)
cop(bit-17, is-15)
det(bit-17, a-16)
rcmod(evidence-12, bit-17)
det(euphemism-20, a-19)
prep_of(bit-17, euphemism-20)
nsubj(realized-24, I-22)
aux(realized-24, 've-23)
rcmod(evidence-12, realized-24)

(ROOT
  (S
    (S
      (NP (NNP Let) (POS 's))
      (VP (VBP make)
        (S
          (NP (DT this))
          (ADJP (JJ clear)))))
    (: :)
    (S
      (NP (NN evidence))
      (VP (VBZ means)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP 've)
              (S
                (NP (NNP SEEN) (NNP IT) (NNP HAPPEN) (-RRB- -RRB-))))))))
    (, ,)
    (S (CC but)
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBZ dive)
        (ADVP (RBR deeper))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ shows)
        (SBAR
          (WHADJP (WRB how) (JJ much))
          (S
            (NP
              (NP (DT the) (NN belief))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN god))
                  (PRN (-LRB- -LRB-)
                    (S
                      (NP (PRP I))
                      (VP (VBD did) (RB n't)
                        (VP (VB capitalize)
                          (NP (PRP it))
                          (SBAR (IN because)
                            (S
                              (NP (PRP I))
                              (VP (VBD was) (RB n't)
                                (VP (VBG referring)
                                  (PP (TO to)
                                    (NP (DT the) (NNP Abrahamic) (NNP God))))))))))
                    (-RRB- -RRB-)))))
            (VP (MD can)
              (VP (VB blind)
                (NP (DT a) (NN person))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NNS flaws))
                    (PP (IN in)
                      (NP (PRP$ their) (NN argument)))))))))))
    (. .)))

nsubj(make-3, Let-1)
possessive(Let-1, 's-2)
root(ROOT-0, make-3)
nsubj(clear-5, this-4)
xcomp(make-3, clear-5)
nsubj(means-8, evidence-7)
conj_and(make-3, means-8)
parataxis(make-3, means-8)
nsubj('ve-10, we-9)
ccomp(means-8, 've-10)
nn(HAPPEN-13, SEEN-11)
nn(HAPPEN-13, IT-12)
dep('ve-10, HAPPEN-13)
cc(dive-19, but-16)
advmod(dive-19, then-17)
nsubj(dive-19, you-18)
conj_and(make-3, dive-19)
advmod(dive-19, deeper-20)
nsubj(shows-23, it-22)
conj_and(make-3, shows-23)
advmod(much-25, how-24)
dep(blind-48, much-25)
det(belief-27, the-26)
nsubj(blind-48, belief-27)
det(god-30, a-29)
prep_in(belief-27, god-30)
nsubj(capitalize-35, I-32)
aux(capitalize-35, did-33)
neg(capitalize-35, n't-34)
dep(god-30, capitalize-35)
dobj(capitalize-35, it-36)
mark(referring-41, because-37)
nsubj(referring-41, I-38)
aux(referring-41, was-39)
neg(referring-41, n't-40)
advcl(capitalize-35, referring-41)
det(God-45, the-43)
nn(God-45, Abrahamic-44)
prep_to(referring-41, God-45)
aux(blind-48, can-47)
ccomp(shows-23, blind-48)
det(person-50, a-49)
dobj(blind-48, person-50)
det(flaws-53, the-52)
prep_to(blind-48, flaws-53)
poss(argument-56, their-55)
prep_in(flaws-53, argument-56)

