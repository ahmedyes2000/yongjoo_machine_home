(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP Laplace))
        (VP (VBD published)
          (NP
            (NP (PRP$ his) (NN theory))
            (PP (IN of)
              (NP
                (NP (DT the) (NN formation))
                (PP (IN of)
                  (NP (DT the) (NNP Solar) (NNP System)))))))))
    (, ,)
    (NP (NNP Napoleon) (NNP Bonaparte))
    (VP (VBD asked)
      (NP (PRP him))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (NNP God))
          (VP (VBP fit)
            (PP (IN into)
              (NP (PRP$ his) (NN theory)))))))
    (. .)))

advmod(published-3, When-1)
nsubj(published-3, Laplace-2)
advcl(asked-16, published-3)
poss(theory-5, his-4)
dobj(published-3, theory-5)
det(formation-8, the-7)
prep_of(theory-5, formation-8)
det(System-12, the-10)
nn(System-12, Solar-11)
prep_of(formation-8, System-12)
nn(Bonaparte-15, Napoleon-14)
nsubj(asked-16, Bonaparte-15)
root(ROOT-0, asked-16)
dobj(asked-16, him-17)
advmod(fit-20, where-18)
nsubj(fit-20, God-19)
advcl(asked-16, fit-20)
poss(theory-23, his-22)
prep_into(fit-20, theory-23)

(ROOT
  (S
    (S
      (NP (NNP Laplace))
      (VP (VBD replied) (, ,)
        (S (`` ``)
          (NP (NNP Sir)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN need))
        (PP (IN of)
          (NP (DT that) (NNS hypothesis)))))
    (. .)))

nsubj(replied-2, Laplace-1)
ccomp(have-8, replied-2)
dep(replied-2, Sir-5)
nsubj(have-8, I-7)
root(ROOT-0, have-8)
det(need-10, no-9)
dobj(have-8, need-10)
det(hypothesis-13, that-12)
prep_of(need-10, hypothesis-13)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (DT The) (NN answer))
        (PP (TO to)
          (NP (PRP$ your) (NN objection))))
      (VP (MD should)
        (VP (VB be)
          (ADJP (JJ obvious)
            (PP (TO to)
              (NP (NNS logicians)))))))
    (: :)
    (S
      (INTJ (UH no))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (ADJP (RB absolutely) (JJ clear))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT no) (NN god)))))))
    (. .)))

det(answer-3, The-2)
nsubj(obvious-9, answer-3)
poss(objection-6, your-5)
prep_to(answer-3, objection-6)
aux(obvious-9, should-7)
cop(obvious-9, be-8)
root(ROOT-0, obvious-9)
prep_to(obvious-9, logicians-11)
dep(clear-19, no-13)
nsubj(clear-19, it-15)
cop(clear-19, is-16)
neg(clear-19, not-17)
advmod(clear-19, absolutely-18)
parataxis(obvious-9, clear-19)
complm(is-22, that-20)
expl(is-22, there-21)
ccomp(clear-19, is-22)
det(god-24, no-23)
nsubj(is-22, god-24)

(ROOT
  (SINV (CC Nor)
    (VBZ is)
    (NP (PRP it))
    (NP
      (NP
        (ADJP
          (ADJP (RB absolutely) (JJ clear))
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT no) (NNP Flying) (NNP Spaghetti))))))
        (NN Monster))
      (CC or)
      (NP (JJ celestial) (NN teapot)))
    (. .)))

cc(it-3, Nor-1)
cop(it-3, is-2)
root(ROOT-0, it-3)
advmod(clear-5, absolutely-4)
amod(Monster-12, clear-5)
complm(is-8, that-6)
expl(is-8, there-7)
ccomp(clear-5, is-8)
det(Spaghetti-11, no-9)
nn(Spaghetti-11, Flying-10)
nsubj(is-8, Spaghetti-11)
dep(it-3, Monster-12)
amod(teapot-15, celestial-14)
dep(it-3, teapot-15)
conj_or(Monster-12, teapot-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NN answer))
      (PP (TO to))
      ('' ''))
    (VP (VBZ Is)
      (ADVP (RB there))
      (NP (DT a) (NNP God)))
    (. ?)))

det(answer-2, The-1)
nsubj(God-8, answer-2)
prep(answer-2, to-3)
cop(God-8, Is-5)
advmod(God-8, there-6)
det(God-8, a-7)
root(ROOT-0, God-8)

(ROOT
  (S ('' '')
    (NP (NN can) (RB not))
    (VP (VBP be)
      (VP (VBN answered)
        (ADVP (RB definitively)))
      (, ,)
      (NP (NN period)))
    (. .)))

nsubjpass(answered-5, can-2)
neg(can-2, not-3)
auxpass(answered-5, be-4)
cop(answered-5, be-4)
root(ROOT-0, answered-5)
advmod(answered-5, definitively-6)
attr(answered-5, period-8)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (DT the) (NN atheist) (NN position))
    (VP
      (VP (VBZ is))
      (CC and)
      (VP (MD must)
        (VP (VB be) ('' '') (-LRB- -LRB-)
          (PP (IN with)
            (NP (DT the) (JJ same) (NNS likeliness)))
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (DT no) (NNP Flying) (NNP Spaghetti) (NNP Monster) (-RRB- -RRB-))
                  (SBAR
                    (S
                      (NP (EX there))
                      (VP (VBZ is)
                        (NP (DT no) (NN god))))))))))))
    (. .)))

advmod(is-5, Therefore-1)
det(position-4, the-2)
nn(position-4, atheist-3)
nsubj(is-5, position-4)
nsubj(be-8, position-4)
root(ROOT-0, is-5)
aux(be-8, must-7)
conj_and(is-5, be-8)
det(likeliness-14, the-12)
amod(likeliness-14, same-13)
prep_with(be-8, likeliness-14)
complm(is-17, that-15)
expl(is-17, there-16)
ccomp(be-8, is-17)
det(Monster-21, no-18)
nn(Monster-21, Flying-19)
nn(Monster-21, Spaghetti-20)
nsubj(is-17, Monster-21)
expl(is-24, there-23)
rcmod(Monster-21, is-24)
det(god-26, no-25)
nsubj(is-24, god-26)

