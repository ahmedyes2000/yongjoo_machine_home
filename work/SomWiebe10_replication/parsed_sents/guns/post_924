(ROOT
  (SINV
    (PP (IN For)
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP (PRP you)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP want)
              (S
                (NP (NNS guns))
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ illegal))))))))))
    (VP (VBP ask)
      (NP (PRP$ your) (NN self)))
    (NP
      (NP (DT this))
      (SBAR
        (WHNP (WP what))
        (SINV (MD will)
          (NP (PRP$ our) (NN army))
          (VP (VB do)
            (PP (IN without)
              (NP (NNS guns)))))))
    (. .)))

nsubj(want-6, all-2)
prep_for(ask-11, all-2)
prep_of(all-2, you-4)
rcmod(all-2, want-6)
nsubj(illegal-10, guns-7)
aux(illegal-10, to-8)
cop(illegal-10, be-9)
xcomp(want-6, illegal-10)
root(ROOT-0, ask-11)
poss(self-13, your-12)
dobj(ask-11, self-13)
nsubj(ask-11, this-14)
dep(do-19, this-14)
aux(do-19, will-16)
poss(army-18, our-17)
nsubj(do-19, army-18)
rcmod(this-14, do-19)
prep_without(do-19, guns-21)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (NP (PRP I))
      (VP (VBP know)))
    (NP (PRP they))
    (VP (MD will)
      (VP (VB spit)
        (PP (IN at)
          (NP (NN eachother)))))
    (. .)))

dep(know-3, Oh-1)
nsubj(know-3, I-2)
dep(spit-6, know-3)
nsubj(spit-6, they-4)
aux(spit-6, will-5)
root(ROOT-0, spit-6)
prep_at(spit-6, eachother-8)

(ROOT
  (S
    (NP
      (NP (PRP$ Its) (JJ funny))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (JJ quick) (NNS people))
          (VP (VBP are)
            (S
              (VP (TO to)
                (VP (VB say))))))))
    (VP (VBZ lets)
      (VP (VB make)
        (S
          (NP (NNS guns))
          (ADJP (JJ illegal))
          (SBAR (IN because)
            (S
              (NP (PRP$ their) (JJ bad))
              (VP (VBP are)
                (NP (PRP they))
                (ADVP (RB really))))))
        (SBAR (IN that)
          (S
            (NP (JJ bad) (JJ last) (NN time) (NNS i))
            (VP (VBD checked)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ takes)
                    (NP
                      (NP
                        (NP (CD two) (NNS hands))
                        (NP (DT a) (NN finger)))
                      (CC and)
                      (NP (DT a) (JJ willing) (NN PERSON)
                        (S
                          (VP (TO to)
                            (VP (VB use)
                              (NP (PRP it)))))))))))))))
    (. .)))

poss(funny-2, Its-1)
nsubj(lets-9, funny-2)
advmod(are-6, how-3)
amod(people-5, quick-4)
nsubj(are-6, people-5)
xsubj(say-8, people-5)
dep(funny-2, are-6)
aux(say-8, to-7)
xcomp(are-6, say-8)
root(ROOT-0, lets-9)
dep(lets-9, make-10)
nsubj(they-17, guns-11)
dep(they-17, illegal-12)
mark(they-17, because-13)
poss(bad-15, their-14)
nsubj(they-17, bad-15)
cop(they-17, are-16)
xcomp(make-10, they-17)
advmod(they-17, really-18)
complm(checked-24, that-19)
amod(i-23, bad-20)
amod(i-23, last-21)
nn(i-23, time-22)
nsubj(checked-24, i-23)
ccomp(make-10, checked-24)
nsubj(takes-26, it-25)
ccomp(checked-24, takes-26)
num(hands-28, two-27)
dobj(takes-26, hands-28)
det(finger-30, a-29)
dep(hands-28, finger-30)
det(PERSON-34, a-32)
amod(PERSON-34, willing-33)
dobj(takes-26, PERSON-34)
conj_and(hands-28, PERSON-34)
aux(use-36, to-35)
infmod(PERSON-34, use-36)
dobj(use-36, it-37)

(ROOT
  (SINV (RB Just)
    (PP (IN like)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (NN ignorant) (NNS people))
          (VP (VBP say)
            (SBAR
              (S
                (NP (NN pit) (NNS bulls))
                (VP
                  (VP (VBP are)
                    (NP (DT a) (JJ deadly) (NN dog)))
                  (CC and)
                  (VP (MD should) (RB all)
                    (VP (VB be)
                      (VP (VBN extermanated)
                        (ADVP (RB well) (RB so))))))))))))
    (VBP are)
    (NP
      (NP (NN bear))
      (CC and)
      (NP (NNS lions)
        (CC and)
        (NNS tigers)))
    (. .)))

advmod(bear-21, Just-1)
dep(bear-21, like-2)
advmod(say-6, how-3)
nn(people-5, ignorant-4)
nsubj(say-6, people-5)
pcomp(like-2, say-6)
nn(bulls-8, pit-7)
nsubj(dog-12, bulls-8)
nsubjpass(extermanated-17, bulls-8)
cop(dog-12, are-9)
det(dog-12, a-10)
amod(dog-12, deadly-11)
ccomp(say-6, dog-12)
aux(extermanated-17, should-14)
advmod(extermanated-17, all-15)
auxpass(extermanated-17, be-16)
ccomp(say-6, extermanated-17)
conj_and(dog-12, extermanated-17)
advmod(so-19, well-18)
advmod(extermanated-17, so-19)
dep(bear-21, are-20)
root(ROOT-0, bear-21)
conj_and(bear-21, lions-23)
conj_and(bear-21, tigers-25)
conj_and(lions-23, tigers-25)

(ROOT
  (S
    (NP (PRP$ Its))
    (ADVP
      (NP (RB not) (DT the) (NN animal))
      (RB that))
    (VP (VBD was)
      (VP (VBN trained)
        (S
          (VP (TO to)
            (VP (VB kill)
              (NP (NNS people)))))))
    (. .)))

nsubjpass(trained-7, Its-1)
xsubj(kill-9, Its-1)
neg(animal-4, not-2)
det(animal-4, the-3)
npadvmod(that-5, animal-4)
advmod(trained-7, that-5)
auxpass(trained-7, was-6)
root(ROOT-0, trained-7)
aux(kill-9, to-8)
xcomp(trained-7, kill-9)
dobj(kill-9, people-10)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP train)
      (S
        (NP (NNS dogs))
        (VP (TO to)
          (VP (VB kill)
            (NP (NNS People))))))
    (. .)))

nsubj(train-2, People-1)
root(ROOT-0, train-2)
nsubj(kill-5, dogs-3)
aux(kill-5, to-4)
xcomp(train-2, kill-5)
dobj(kill-5, People-6)

(ROOT
  (S
    (SBAR (RB Now) (IN if)
      (S
        (NP (DT this))
        (VP (VBD were)
          (NP
            (NP (DT a) (NN math))
            (SBAR
              (S
                (NP (NN equation) (NNS People))
                (VP (VBD added)
                  (PP (TO to)
                    (NP (NNP Killing) (NNP equalls) (NNPS People) (NNP Killing) (NNS People)))
                  (NP
                    (NP (RB hence) (DT the))
                    (VP (VBG saying)
                      (S
                        (NP (NNS guns))
                        (ADJP (JJ dont))
                        (S
                          (VP (VB kill)
                            (NP (NNS people))))))))))))))
    (, ,)
    (NP (NNS people))
    (VP (VBP kill)
      (NP (NNS people)))
    (. .)))

advmod(math-6, Now-1)
dep(math-6, if-2)
nsubj(math-6, this-3)
cop(math-6, were-4)
det(math-6, a-5)
advcl(kill-25, math-6)
nn(People-8, equation-7)
nsubj(added-9, People-8)
rcmod(math-6, added-9)
nn(People-15, Killing-11)
nn(People-15, equalls-12)
nn(People-15, People-13)
nn(People-15, Killing-14)
prep_to(added-9, People-15)
advmod(the-17, hence-16)
dobj(added-9, the-17)
partmod(the-17, saying-18)
nsubj(kill-21, guns-19)
dep(kill-21, dont-20)
xcomp(saying-18, kill-21)
dobj(kill-21, people-22)
nsubj(kill-25, people-24)
root(ROOT-0, kill-25)
dobj(kill-25, people-26)

(ROOT
  (S
    (VP
      (VP (VB Tell)
        (NP (PRP me))
        (NP
          (NP (NNP Im))
          (ADJP (JJ wrong)
            (CC and)
            (JJ ill))
          (SBAR
            (S
              (VP (VBP call)
                (NP (PRP you)))))))
      (CC and)
      (VP (VB idot)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT no) (NN argument))
                (PP (IN for)
                  (NP (DT that) (NN statement) (NN none)))))))))
    (. .)))

root(ROOT-0, Tell-1)
iobj(Tell-1, me-2)
dobj(Tell-1, Im-3)
amod(Im-3, wrong-4)
amod(Im-3, ill-6)
conj_and(wrong-4, ill-6)
rcmod(Im-3, call-7)
dobj(call-7, you-8)
conj_and(Tell-1, idot-10)
expl(is-12, there-11)
ccomp(idot-10, is-12)
det(argument-14, no-13)
nsubj(is-12, argument-14)
det(none-18, that-16)
nn(none-18, statement-17)
prep_for(argument-14, none-18)

(ROOT
  (S
    (NP (NNP Ignorance))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP
            (VP (VBZ makes)
              (ADJP (JJ stupid)))
            (CC and)
            (VP (VBZ somtimes)
              (S
                (NP (FW i))
                (VP (VB see)
                  (ADVP (RB too) (RB much))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(is-2, Ignorance-1)
root(ROOT-0, is-2)
nsubj(makes-4, what-3)
nsubj(somtimes-7, what-3)
ccomp(is-2, makes-4)
acomp(makes-4, stupid-5)
ccomp(is-2, somtimes-7)
conj_and(makes-4, somtimes-7)
nsubj(see-9, i-8)
ccomp(somtimes-7, see-9)
advmod(much-11, too-10)
advmod(see-9, much-11)
prep_of(see-9, it-13)

(ROOT
  (S
    (NP (NNP California))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS best) (NN place))
        (PP (IN for)
          (NP (PRP it)))))
    (. .)))

nsubj(place-5, California-1)
cop(place-5, is-2)
det(place-5, the-3)
amod(place-5, best-4)
root(ROOT-0, place-5)
prep_for(place-5, it-7)

