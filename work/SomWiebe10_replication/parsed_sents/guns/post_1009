(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sorry))))
    (: ...)
    (S
      (NP (DT this))
      (VP (VBZ has)
        (VP (VBN got)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (CD one))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJS stupidest) (NNS arguments))
                      (ADVP (RB ever)))))))))))
    (: ...)
    (SBAR (RB even) (IN if)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP (DT a) (NN license))
                (, ,)
                (UCP
                  (S
                    (NP (NN u))
                    (VP (VBP think)
                      (SBAR
                        (S
                          (NP (NN everyone))
                          (VP (MD will)
                            (VP (VB get)
                              (NP (CD one))))))))
                  (, ,)
                  (NP (NN no.))
                  (. .))))))))
    (. .)))

nsubj(sorry-3, I-1)
cop(sorry-3, 'm-2)
root(ROOT-0, sorry-3)
nsubj(got-7, this-5)
xsubj(one-10, this-5)
aux(got-7, has-6)
parataxis(sorry-3, got-7)
aux(one-10, to-8)
cop(one-10, be-9)
xcomp(got-7, one-10)
det(arguments-14, the-12)
amod(arguments-14, stupidest-13)
prep_of(one-10, arguments-14)
advmod(arguments-14, ever-15)
advmod(have-20, even-17)
dep(have-20, if-18)
nsubj(have-20, you-19)
xsubj(have-22, you-19)
parataxis(sorry-3, have-20)
aux(have-22, to-21)
xcomp(have-20, have-22)
det(license-24, a-23)
dobj(have-22, license-24)
nsubj(think-27, u-26)
dep(have-22, think-27)
nsubj(get-30, everyone-28)
aux(get-30, will-29)
ccomp(think-27, get-30)
dobj(get-30, one-31)
dep(think-27, no.-33)

(ROOT
  (S (CC and)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP do)
          (VP (VB have)
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (DT a) (NN license)))))))))
    (, ,)
    (NP (NN u))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT the) (NNS cops))
          (ADVP (RB then))
          (VP (MD would)
            (VP (VB check)
              (NP
                (NP (NN everyone))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ has)
                      (NP
                        (NP (DT a) (NN gun) (POS 's))
                        (NN license))
                      (, ,)
                      (ADVP (RB no.)))))))))))
    (. .)))

cc(think-12, and-1)
mark(have-5, if-2)
nsubj(have-5, you-3)
xsubj(get-7, you-3)
aux(have-5, do-4)
advcl(think-12, have-5)
aux(get-7, to-6)
xcomp(have-5, get-7)
det(license-9, a-8)
dobj(get-7, license-9)
nsubj(think-12, u-11)
root(ROOT-0, think-12)
det(cops-14, the-13)
nsubj(check-17, cops-14)
advmod(check-17, then-15)
aux(check-17, would-16)
ccomp(think-12, check-17)
dobj(check-17, everyone-18)
nsubj(has-20, everyone-18)
rcmod(everyone-18, has-20)
det(gun-22, a-21)
poss(license-24, gun-22)
dobj(has-20, license-24)
advmod(has-20, no.-26)

(ROOT
  (S
    (PP (IN because)
      (NP (PRP$ its) (JJ like) (NN driving)))
    (, ,)
    (NP (NN u))
    (VP (VBP see)
      (NP (NN someone))
      (S
        (VP (VBG driving)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP are)
                (VP (VBN assumed)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (NP (DT a) (NN license))))))))))))
    (: ...)))

poss(driving-4, its-2)
amod(driving-4, like-3)
prep_because(see-7, driving-4)
nsubj(see-7, u-6)
root(ROOT-0, see-7)
dobj(see-7, someone-8)
xcomp(see-7, driving-9)
nsubjpass(assumed-12, they-10)
xsubj(have-14, they-10)
auxpass(assumed-12, are-11)
ccomp(driving-9, assumed-12)
aux(have-14, to-13)
xcomp(assumed-12, have-14)
det(license-16, a-15)
dobj(have-14, license-16)

(ROOT
  (S
    (NP (NNP \/))
    (VP (VBD -RRB-)
      (SBAR
        (S
          (SBAR (IN If)
            (S
              (NP (PRP you))
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP (VB carry)
                      (NP (DT a) (NN gun))))))))
          (, ,)
          (VP (VB become)
            (NP (DT a) (NN cop)))))
      (. .))
    (. .)))

nsubj(cop-13, \/-1)
mark(want-5, If-3)
nsubj(want-5, you-4)
xsubj(carry-7, you-4)
advcl(cop-13, want-5)
aux(carry-7, to-6)
xcomp(want-5, carry-7)
det(gun-9, a-8)
dobj(carry-7, gun-9)
cop(cop-13, become-11)
det(cop-13, a-12)
root(ROOT-0, cop-13)

