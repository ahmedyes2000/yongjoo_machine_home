(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS alternatives))
        (PP (IN for)
          (NP (NNS students)
            (S
              (VP (TO to)
                (VP (VB protect)
                  (NP (PRP themselves))
                  (`` ``)
                  (PP (IN from)
                    (NP
                      (NP (NNS criminals))
                      (PP (IN from)
                        (NP (JJ various) (NNS crimes)))))
                  (PP (IN from)
                    (NP
                      (NP (NN assault))
                      (, ,)
                      (NP
                        (NP (NN rape))
                        (PP (TO to)
                          (NP (NN murder)))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, alternatives-3)
prep_for(alternatives-3, students-5)
aux(protect-7, to-6)
infmod(students-5, protect-7)
dobj(protect-7, themselves-8)
prep_from(protect-7, criminals-11)
amod(crimes-14, various-13)
prep_from(criminals-11, crimes-14)
prep_from(protect-7, assault-16)
appos(assault-16, rape-18)
prep_to(rape-18, murder-20)

(ROOT
  (S ('' '')
    (NP (DT The) (NNS colleges))
    (ADVP (PRP themselves))
    (VP (MD can)
      (VP (VB provide)
        (S
          (NP (NN self) (NN defense) (NNS classes))
          (VP (TO to)
            (VP (VB teach)
              (NP (NNS students))
              (NP (JJ specific) (NNS techniques)
                (S
                  (VP (TO to)
                    (VP (VB protect)
                      (NP (PRP themselves))
                      (PP (IN from)
                        (NP (NNS attackers))))))))))))
    (. .)))

det(colleges-3, The-2)
nsubj(provide-6, colleges-3)
advmod(provide-6, themselves-4)
aux(provide-6, can-5)
root(ROOT-0, provide-6)
nn(classes-9, self-7)
nn(classes-9, defense-8)
nsubj(teach-11, classes-9)
aux(teach-11, to-10)
xcomp(provide-6, teach-11)
iobj(teach-11, students-12)
amod(techniques-14, specific-13)
dobj(teach-11, techniques-14)
aux(protect-16, to-15)
infmod(techniques-14, protect-16)
dobj(protect-16, themselves-17)
prep_from(protect-16, attackers-19)

(ROOT
  (S
    (S
      (NP (DT The) (NN police)
        (CC and)
        (NN campus) (NN security))
      (CONJP (RB not) (JJ only))
      (VP (VBP try)
        (S
          (VP (TO to)
            (VP (VB stop)
              (NP (NNS attacks))
              (SBAR (IN while)
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (VP (VBG happening))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (ADVP (RB also))
      (VP (VBP try)
        (S
          (VP (TO to)
            (VP (VB avoid)
              (NP (PRP them))
              (PP (IN from)
                (S
                  (VP (VBG occurring)
                    (PP (IN in)
                      (NP (DT the) (JJ first) (NN place)))))))))))
    (. .)))

det(security-5, The-1)
nn(security-5, police-2)
conj_and(police-2, campus-4)
nn(security-5, campus-4)
root(ROOT-0, security-5)
xsubj(stop-10, security-5)
neg(only-7, not-6)
dep(security-5, only-7)
conj_but(security-5, try-8)
xsubj(stop-10, try-8)
aux(stop-10, to-9)
xcomp(try-8, stop-10)
dobj(stop-10, attacks-11)
mark(happening-15, while-12)
nsubj(happening-15, they-13)
aux(happening-15, are-14)
advcl(stop-10, happening-15)
nsubj(try-20, they-18)
xsubj(avoid-22, they-18)
advmod(try-20, also-19)
conj_but(security-5, try-20)
xsubj(stop-10, try-20)
aux(avoid-22, to-21)
xcomp(try-20, avoid-22)
dobj(avoid-22, them-23)
prepc_from(avoid-22, occurring-25)
det(place-29, the-27)
amod(place-29, first-28)
prep_in(occurring-25, place-29)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (NNS students))
        (VP (VBN allowed)
          (S
            (VP (TO to)
              (VP (VB have)
                (VP (VBN concealed)
                  (NP (NNS weapons))
                  (PP (IN on)
                    (NP (NN campus))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RBR more) (JJ difficult)
          (PP (IN for)
            (NP (NN security))))
        (S
          (VP (TO to)
            (VP (VB decipher)
              (NP
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (MD could)
                      (VP (VB be)
                        (VP (VBN considered)
                          (NP (DT a) (JJ potential) (NN threat)))))))
                (CC and)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ is) (RB not))))))))))
    (. .)))

xsubj(concealed-6, students-2)
prep_with(difficult-15, students-2)
partmod(students-2, allowed-3)
aux(concealed-6, to-4)
aux(concealed-6, have-5)
xcomp(allowed-3, concealed-6)
dobj(concealed-6, weapons-7)
prep_on(concealed-6, campus-9)
nsubj(difficult-15, it-11)
aux(difficult-15, would-12)
cop(difficult-15, be-13)
advmod(difficult-15, more-14)
root(ROOT-0, difficult-15)
prep_for(difficult-15, security-17)
aux(decipher-19, to-18)
xcomp(difficult-15, decipher-19)
nsubjpass(considered-23, who-20)
aux(considered-23, could-21)
auxpass(considered-23, be-22)
dobj(decipher-19, considered-23)
det(threat-26, a-24)
amod(threat-26, potential-25)
dobj(considered-23, threat-26)
nsubj(is-29, who-28)
dobj(decipher-19, is-29)
conj_and(considered-23, is-29)
neg(is-29, not-30)

(ROOT
  (FRAG
    (NP (NNP Plus))
    (, ,)
    (SBAR
      (WHNP (WP what))
      (S
        (NP (NN edge))
        (VP (VBP do)
          (S
            (NP (DT the) (NNS cops))
            (ADJP (JJ have))
            (SBAR (IN if)
              (S
                (NP (DT the) (NNS students))
                (VP (VBP are)
                  (VP (VBN allowed)
                    (S
                      (VP (TO to)
                        (VP (VB carry)
                          (NP (JJ concealed) (NNS firearms)))))))))))))
    (. ?)))

root(ROOT-0, Plus-1)
dobj(do-5, what-3)
nsubj(do-5, edge-4)
dep(Plus-1, do-5)
det(cops-7, the-6)
nsubjpass(allowed-13, cops-7)
dep(allowed-13, have-8)
mark(allowed-13, if-9)
det(students-11, the-10)
nsubjpass(allowed-13, students-11)
xsubj(carry-15, students-11)
auxpass(allowed-13, are-12)
xcomp(do-5, allowed-13)
aux(carry-15, to-14)
xcomp(allowed-13, carry-15)
amod(firearms-17, concealed-16)
dobj(carry-15, firearms-17)

(ROOT
  (S
    (S
      (INTJ (UH No))
      (, ,)
      (NP
        (NP (NNS students)
          (CC and)
          (NNS people))
        (PP (IN in)
          (NP (NN general))))
      (VP (VBP do) (RB not)
        (ADVP (RB always))
        (VP (VB follow)
          (NP (DT the) (NN law)))))
    (, ,)
    (CC and)
    (S
      (PP (IN of)
        (NP (NN course)))
      (NP (DT the) (`` ``) (NNS cops))
      (VP (MD cant)
        (VP (VB be)
          (ADVP (RB everywhere))
          (ADVP (IN at) (RB once))
          (S
            (VP (TO to)
              (VP (VB protect)
                (NP (NN everyone))))))))
    (. .)))

dep(follow-11, No-1)
nsubj(follow-11, students-3)
conj_and(students-3, people-5)
nsubj(follow-11, people-5)
prep_in(students-3, general-7)
aux(follow-11, do-8)
neg(follow-11, not-9)
advmod(follow-11, always-10)
root(ROOT-0, follow-11)
det(law-13, the-12)
dobj(follow-11, law-13)
prep_of(cant-21, course-17)
det(cops-20, the-18)
nsubj(cant-21, cops-20)
conj_and(follow-11, cant-21)
dep(cant-21, be-22)
advmod(be-22, everywhere-23)
advmod(be-22, at-24)
advmod(at-24, once-25)
aux(protect-27, to-26)
xcomp(be-22, protect-27)
dobj(protect-27, everyone-28)

(ROOT
  (S ('' '')
    (ADVP (RB However))
    (, ,)
    (NP (NN aren))
    (VP (VBP t)
      (SBAR
        (S
          (NP
            (NP (DT the) (NNS chances))
            (PP (IN of)
              (NP (DT a) (NN shooting))))
          (VP (VBD lessened)
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (VP (VBN forbidden)
                    (PP (IN for)
                      (NP (NNS students)))
                    (S
                      (VP (TO to)
                        (VP (VB carry)
                          (NP (NNS firearms))
                          (PP (IN on)
                            (NP (NN campus))))))
                    (, ,)
                    (S
                      (ADVP (RB especially))
                      (VP (VBG considering)
                        (SBAR (IN that)
                          (S
                            (NP (NN security))
                            (VP (MD would)
                              (VP (VB be)
                                (PP (IN on)
                                  (NP
                                    (NP (DT the) (NN lookout))
                                    (PP (IN for)
                                      (NP (JJ such) (NN weaponry)))))))))))))))))))
    (. ?)))

advmod(t-5, However-2)
nsubj(t-5, aren-4)
root(ROOT-0, t-5)
det(chances-7, the-6)
nsubj(lessened-11, chances-7)
det(shooting-10, a-9)
prep_of(chances-7, shooting-10)
ccomp(t-5, lessened-11)
mark(forbidden-15, if-12)
nsubjpass(forbidden-15, it-13)
xsubj(carry-19, it-13)
auxpass(forbidden-15, is-14)
advcl(lessened-11, forbidden-15)
prep_for(forbidden-15, students-17)
aux(carry-19, to-18)
xcomp(forbidden-15, carry-19)
dobj(carry-19, firearms-20)
prep_on(carry-19, campus-22)
advmod(considering-25, especially-24)
xcomp(forbidden-15, considering-25)
complm(be-29, that-26)
nsubj(be-29, security-27)
aux(be-29, would-28)
ccomp(considering-25, be-29)
det(lookout-32, the-31)
prep_on(be-29, lookout-32)
amod(weaponry-35, such-34)
prep_for(lookout-32, weaponry-35)

(ROOT
  (SBARQ (CC And)
    (WHADVP (WRB when))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB end)))
    (. ?)))

cc(end-5, And-1)
advmod(end-5, when-2)
aux(end-5, does-3)
nsubj(end-5, it-4)
root(ROOT-0, end-5)

(ROOT
  (NP
    (NP (DT A) (NN pistol))
    (, ,)
    (NP
      (NP (DT a) (NN rifle))
      (, ,)
      (NP (DT a) (NN semiautomatic)))
    (. ?)))

det(pistol-2, A-1)
root(ROOT-0, pistol-2)
det(rifle-5, a-4)
appos(pistol-2, rifle-5)
det(semiautomatic-8, a-7)
appos(rifle-5, semiautomatic-8)

(ROOT
  (S
    (S
      (S
        (VP (TO To)
          (VP (VB believe)
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (VBP do) (RB not)
                  (VP (VB have)
                    (NP (DT any) (NN chance))
                    (PP (IN at)
                      (S
                        (VP (VBG protecting)
                          (NP (PRP themselves))
                          (PP (IN without)
                            (S
                              (VP (VBG possessing)
                                (NP (DT a) (NN gun)))))))))))))))
      (VP (VBZ is)
        (NP (DT a) (NN fallacy))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT a) (NN lie))))
    (. .)))

aux(believe-2, To-1)
csubj(fallacy-19, believe-2)
complm(have-7, that-3)
nsubj(have-7, they-4)
aux(have-7, do-5)
neg(have-7, not-6)
ccomp(believe-2, have-7)
det(chance-9, any-8)
dobj(have-7, chance-9)
prepc_at(have-7, protecting-11)
dobj(protecting-11, themselves-12)
prepc_without(protecting-11, possessing-14)
det(gun-16, a-15)
dobj(possessing-14, gun-16)
cop(fallacy-19, is-17)
det(fallacy-19, a-18)
root(ROOT-0, fallacy-19)
nsubj(lie-24, it-21)
cop(lie-24, is-22)
det(lie-24, a-23)
parataxis(fallacy-19, lie-24)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (SBAR (IN once)
      (S
        (NP (PRP you))
        (VP (VBP decide)
          (S
            (VP (TO to)
              (VP (VB carry)
                (NP
                  (NP (DT a) (NN gun))
                  (PP (IN for)
                    (NP (JJ constant) (NN protection))))
                (PP (IN from)
                  (NP (NNS others)))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP decide)
      (S
        (VP (TO to)
          (VP (VB view)
            (NP (DT all) (JJ other) (NNS people))
            (PP (IN as)
              (NP
                (NP (JJ potential) (NNS enemies))
                (PP (RB instead) (IN of)
                  (NP (JJ potential) (NNS friends)))))))))
    (. .)))

advmod(decide-17, Besides-1)
mark(decide-5, once-3)
nsubj(decide-5, you-4)
xsubj(carry-7, you-4)
advcl(decide-17, decide-5)
aux(carry-7, to-6)
xcomp(decide-5, carry-7)
det(gun-9, a-8)
dobj(carry-7, gun-9)
amod(protection-12, constant-11)
prep_for(gun-9, protection-12)
prep_from(carry-7, others-14)
nsubj(decide-17, you-16)
xsubj(view-19, you-16)
root(ROOT-0, decide-17)
aux(view-19, to-18)
xcomp(decide-17, view-19)
det(people-22, all-20)
amod(people-22, other-21)
dobj(view-19, people-22)
amod(enemies-25, potential-24)
prep_as(view-19, enemies-25)
amod(friends-29, potential-28)
prep_instead_of(enemies-25, friends-29)

(ROOT
  (S (CC And)
    (PP (IN with)
      (NP
        (NP (DT this) (NN lack))
        (PP (IN of)
          (NP
            (NP (NN faith))
            (PP (IN in)
              (NP (NN humankind)))))))
    (NP (PRP you))
    (VP (VBP have)
      (VP
        (VP (VBN taken)
          (NP (DT that) (JJ first) (JJ small) (NN step))
          (PP (IN into)
            (NP
              (NP (DT the) (NN direction))
              (PP (IN of)
                (S
                  (VP (VBG using)
                    (NP (PRP$ your) (NN weapon))
                    (PP (IN for)
                      (NP (DT the) (JJ wrong) (NN reason)))))))))
        (CC or)
        (VP
          (ADJP (JJR worse) (RP out))
          (PP (IN of)
            (NP (JJ hasty) (NN impulse))))))
    (. .)))

det(lack-4, this-3)
prep_with(taken-11, lack-4)
prep_of(lack-4, faith-6)
prep_in(faith-6, humankind-8)
nsubj(taken-11, you-9)
nsubj(worse-28, you-9)
aux(taken-11, have-10)
root(ROOT-0, taken-11)
det(step-15, that-12)
amod(step-15, first-13)
amod(step-15, small-14)
dobj(taken-11, step-15)
det(direction-18, the-17)
prep_into(taken-11, direction-18)
prepc_of(direction-18, using-20)
poss(weapon-22, your-21)
dobj(using-20, weapon-22)
det(reason-26, the-24)
amod(reason-26, wrong-25)
prep_for(using-20, reason-26)
conj_or(taken-11, worse-28)
amod(impulse-32, hasty-31)
prep_out_of(worse-28, impulse-32)

(ROOT
  (S
    (NP (DT These) (NNS classes))
    (VP (MD can)
      (ADVP (RB even))
      (VP (VB include)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP one))
            (VP (MD should)
              (VP (VB do)
                (PP (IN in)
                  (NP
                    (NP (JJ different) (NNS situations))
                    (PP (IN of)
                      (NP (DT a) (NN gun) (NN attack)))))
                (PP (IN without)
                  (S
                    (ADVP (RB actually))
                    (VP (VBG having)
                      (S
                        (VP (TO to)
                          (VP (VB fire)
                            (ADVP (RB back))
                            (PP
                              (PP (IN with)
                                (NP (DT a) (NN gun)))
                              (, ,)
                              (CC but)
                              (RB instead)
                              (PP (IN with)
                                (NP
                                  (NP (DT the) (NNS weapons))
                                  (PP (IN around)
                                    (NP (PRP us))))))
                            (NP (NN everyday))
                            (, ,)
                            (PP (IN like)
                              (NP (NNS knives)
                                (CC and)
                                (NNS hammers)))))))))))))))
    (. .)))

det(classes-2, These-1)
nsubj(include-5, classes-2)
aux(include-5, can-3)
advmod(include-5, even-4)
root(ROOT-0, include-5)
dobj(do-9, what-6)
nsubj(do-9, one-7)
aux(do-9, should-8)
ccomp(include-5, do-9)
amod(situations-12, different-11)
prep_in(do-9, situations-12)
det(attack-16, a-14)
nn(attack-16, gun-15)
prep_of(situations-12, attack-16)
advmod(having-19, actually-18)
prepc_without(do-9, having-19)
aux(fire-21, to-20)
xcomp(having-19, fire-21)
advmod(fire-21, back-22)
prep(fire-21, with-23)
det(gun-25, a-24)
pobj(with-23, gun-25)
prep(fire-21, instead-28)
advmod(with-23, instead-28)
conj_but(with-23, instead-28)
dep(with-23, with-29)
det(weapons-31, the-30)
pobj(with-29, weapons-31)
prep_around(weapons-31, us-33)
dobj(fire-21, everyday-34)
prep_like(fire-21, knives-37)
prep_like(fire-21, hammers-39)
conj_and(knives-37, hammers-39)

(ROOT
  (S
    (S
      (NP
        (NP (RB Even) (JJ concealed) (NN self) (NN defense) (NNS items))
        (PP (IN like)
          (NP (NN pepper) (NN spray))))
      (VP (MD may)
        (VP (VB be)
          (NP
            (NP (DT the) (NN difference))
            (PP (IN between)
              (NP (NN life)
                (CC and)
                (NN death)))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ depends)
        (PP (IN on)
          (NP (DT the) (NN situation)))))
    (. .)))

advmod(items-5, Even-1)
amod(items-5, concealed-2)
nn(items-5, self-3)
nn(items-5, defense-4)
nsubj(difference-12, items-5)
nn(spray-8, pepper-7)
prep_like(items-5, spray-8)
aux(difference-12, may-9)
cop(difference-12, be-10)
det(difference-12, the-11)
root(ROOT-0, difference-12)
prep_between(difference-12, life-14)
prep_between(difference-12, death-16)
conj_and(life-14, death-16)
nsubj(depends-19, it-18)
parataxis(difference-12, depends-19)
det(situation-22, the-21)
prep_on(depends-19, situation-22)

(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (S
        (NP (NN security))
        (VP (VBZ does) (RB indeed)
          (VP (VB hold)
            (NP (NNS firearms)))))
      (, ,)
      (CC but)
      (S
        (NP (PRP they))
        (VP (VBP are)
          (ADJP (JJ trained)))))
    (: ;)
    (S
      (NP (PRP they))
      (ADVP (RB actually))
      (VP
        (VP (VBP know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (VBP are)
                (VP (VBG doing))))))
        (CC and)
        (VP (VBP are)
          (ADJP
            (ADJP (RBR less) (JJ likely)
              (S
                (VP (TO to)
                  (VP (VB shoot)
                    (NP (NN someone))
                    (ADVP (RB irrationally))))))
            (CC or)
            (ADJP (JJ accidently))))))
    (. .)))

dep(hold-6, Yes-1)
nsubj(hold-6, security-3)
aux(hold-6, does-4)
advmod(hold-6, indeed-5)
root(ROOT-0, hold-6)
dobj(hold-6, firearms-7)
nsubj(trained-12, they-10)
cop(trained-12, are-11)
conj_but(hold-6, trained-12)
nsubj(know-16, they-14)
nsubj(likely-24, they-14)
advmod(know-16, actually-15)
parataxis(hold-6, know-16)
dobj(doing-20, what-17)
nsubj(doing-20, they-18)
aux(doing-20, are-19)
ccomp(know-16, doing-20)
cop(likely-24, are-22)
advmod(likely-24, less-23)
parataxis(hold-6, likely-24)
conj_and(know-16, likely-24)
aux(shoot-26, to-25)
xcomp(likely-24, shoot-26)
dobj(shoot-26, someone-27)
advmod(shoot-26, irrationally-28)
conj_and(know-16, accidently-30)
conj_or(likely-24, accidently-30)

(ROOT
  (S
    (NP
      (NP (RB Even) (NNS students))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP are)
            (ADJP (JJ knowledgeable)
              (PP (IN on)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (VP (TO to)
                      (VP (VB use)
                        (NP (NNS guns))))))))))))
    (VP (MD should) (RB not)
      (VP (VB be)
        (VP
          (VP (VBN permitted)
            (S
              (VP (TO to)
                (VP (VB carry)
                  (NP (PRP them))))))
          (, ,)
          (VP (VBN exposed))
          (CC or)
          (VP (VBN concealed) (, ,)
            (PP (IN on)
              (NP (NN campus)))))))
    (. .)))

advmod(students-2, Even-1)
nsubj(knowledgeable-5, students-2)
nsubjpass(permitted-14, students-2)
nsubjpass(exposed-19, students-2)
nsubjpass(concealed-21, students-2)
cop(knowledgeable-5, are-4)
rcmod(students-2, knowledgeable-5)
advmod(use-9, how-7)
aux(use-9, to-8)
prepc_on(knowledgeable-5, use-9)
dobj(use-9, guns-10)
aux(permitted-14, should-11)
neg(permitted-14, not-12)
auxpass(permitted-14, be-13)
root(ROOT-0, permitted-14)
aux(carry-16, to-15)
xcomp(permitted-14, carry-16)
dobj(carry-16, them-17)
conj_or(permitted-14, exposed-19)
conj_or(permitted-14, concealed-21)
prep_on(concealed-21, campus-24)

(ROOT
  (S
    (NP
      (NP (NNS Campus))
      (ADVP (RB often)
        (NP (NNS times))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ temporary) (NN home))
        (PP (TO to)
          (NP
            (NP (NNS students))
            (, ,)
            (NP
              (NP (DT a) (NN place))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP they))
                  (VP (MD can)
                    (VP (VB seek)
                      (NP (NN safety)))))))))))
    (. .)))

nsubj(home-7, Campus-1)
advmod(Campus-1, often-2)
pobj(often-2, times-3)
cop(home-7, is-4)
det(home-7, a-5)
amod(home-7, temporary-6)
root(ROOT-0, home-7)
prep_to(home-7, students-9)
det(place-12, a-11)
appos(students-9, place-12)
advmod(seek-16, where-13)
nsubj(seek-16, they-14)
aux(seek-16, can-15)
rcmod(place-12, seek-16)
dobj(seek-16, safety-17)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP they))
      (VP (VB feel)
        (ADJP (JJ safe))
        (S
          (VP (VBG knowing)
            (SBAR (IN that)
              (S
                (NP
                  (NP (NN everyone))
                  (PP (IN around)
                    (NP (PRP them))))
                (VP (VBZ is)
                  (ADVP (RB potentially))
                  (VP (VBG carrying)
                    (NP (DT a) (NN gun))))))))
        (, ,)
        (PP (IN from)
          (NP
            (NP (DT the)
              (ADJP
                (ADJP (JJ calm))
                (CC and)
                (ADJP (RB seemingly) (JJ harmless)))
              (NNS students))
            (PP (TO to)
              (NP
                (NP (DT the) (NNS troublemakers))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP are)
                      (VP (VBN arrested)
                        (NP
                          (ADVP (IN at) (JJS least))
                          (RB twice) (DT a) (NN month))))))))))))
    (. ?)))

advmod(feel-4, How-1)
aux(feel-4, can-2)
nsubj(feel-4, they-3)
root(ROOT-0, feel-4)
acomp(feel-4, safe-5)
xcomp(feel-4, knowing-6)
complm(carrying-13, that-7)
nsubj(carrying-13, everyone-8)
prep_around(everyone-8, them-10)
aux(carrying-13, is-11)
advmod(carrying-13, potentially-12)
ccomp(knowing-6, carrying-13)
det(gun-15, a-14)
dobj(carrying-13, gun-15)
det(students-23, the-18)
amod(students-23, calm-19)
advmod(harmless-22, seemingly-21)
conj_and(calm-19, harmless-22)
amod(students-23, harmless-22)
prep_from(feel-4, students-23)
det(troublemakers-26, the-25)
prep_to(students-23, troublemakers-26)
nsubjpass(arrested-29, troublemakers-26)
auxpass(arrested-29, are-28)
rcmod(troublemakers-26, arrested-29)
advmod(month-34, at-30)
pobj(at-30, least-31)
advmod(month-34, twice-32)
det(month-34, a-33)
tmod(arrested-29, month-34)

(ROOT
  (S
    (NP (JJ Concealed) (NNS firearms))
    (VP (MD can)
      (ADVP (RB quickly))
      (VP (VB escalate)
        (NP (DT a) (JJ simple) (NN argument))
        (PP (IN into)
          (NP (DT a) (NN tragedy)))))
    (. .)))

amod(firearms-2, Concealed-1)
nsubj(escalate-5, firearms-2)
aux(escalate-5, can-3)
advmod(escalate-5, quickly-4)
root(ROOT-0, escalate-5)
det(argument-8, a-6)
amod(argument-8, simple-7)
dobj(escalate-5, argument-8)
det(tragedy-11, a-10)
prep_into(escalate-5, tragedy-11)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP (DT an) (NN attacker))
          (, ,)
          (PP (IN with)
            (CC or)
            (IN without)
            (NP (DT a) (NN gun))))))
    (, ,)
    (NP
      (NP (DT the) (JJ concealed) (NNS firearms))
      (PP (IN of)
        (NP (DT the) (NNS victims))))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN used)
          (PP (IN against)
            (NP (PRP them)))
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (VP (VBP are)
                (VP (VBN overpowered))))))))
    (. .)))

cc(used-22, And-1)
mark(is-4, if-2)
expl(is-4, there-3)
conj_or(is-4, is-4')
advcl(used-22, is-4)
advcl(used-22, is-4')
det(attacker-6, an-5)
nsubj(is-4, attacker-6)
nsubj(is-4', attacker-6)
det(gun-12, a-11)
prep_with(is-4, gun-12)
prep_without(is-4', gun-12)
det(firearms-16, the-14)
amod(firearms-16, concealed-15)
nsubjpass(used-22, firearms-16)
det(victims-19, the-18)
prep_of(firearms-16, victims-19)
aux(used-22, can-20)
auxpass(used-22, be-21)
root(ROOT-0, used-22)
prep_against(used-22, them-24)
mark(overpowered-28, if-25)
nsubjpass(overpowered-28, they-26)
auxpass(overpowered-28, are-27)
advcl(used-22, overpowered-28)

