(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADVP (RB obviously))
      (VP (VBN informed)
        (PP (IN of)
          (NP
            (NP (PRP$ your) (`` ``) (NN opinion) ('' ''))
            (VP (VBN based)
              (PP (IN on)
                (NP (JJ buzz) (NNS words)
                  (CC and)
                  (NNS statements)))
              (PP
                (ADVP (RB repeatedly))
                (VBN given)
                (NP
                  (NP (NN credibility))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP have)
                        (NP (DT a) (JJ political) (NN agenda))))))))))))
    (. .)))

nsubjpass(informed-4, You-1)
auxpass(informed-4, are-2)
advmod(informed-4, obviously-3)
root(ROOT-0, informed-4)
poss(opinion-8, your-6)
prep_of(informed-4, opinion-8)
partmod(opinion-8, based-10)
amod(words-13, buzz-12)
prep_on(based-10, words-13)
prep_on(based-10, statements-15)
conj_and(words-13, statements-15)
advmod(given-17, repeatedly-16)
prep(based-10, given-17)
dep(given-17, credibility-18)
nsubj(have-20, credibility-18)
rcmod(credibility-18, have-20)
det(agenda-23, a-21)
amod(agenda-23, political-22)
dobj(have-20, agenda-23)

(ROOT
  (SQ (VBD Did)
    (NP (PRP you))
    (VP (VB know)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP
              (NP (DT a) (JJ criminal) (NN offense))
              (PP (IN in)
                (CC and)
                (IN of)
                (NP (PRP itself)))
              (S
                (VP (TO to)
                  (VP
                    (VP (VB consume)
                      (NP (NN alcohol)))
                    (CC and)
                    (VP (VB carry))))))))))
    (. ?)))

aux(know-3, Did-1)
nsubj(know-3, you-2)
root(ROOT-0, know-3)
complm(offense-9, that-4)
nsubj(offense-9, it-5)
cop(offense-9, is-6)
det(offense-9, a-7)
amod(offense-9, criminal-8)
ccomp(know-3, offense-9)
ccomp(know-3, offense-9')
conj_and(offense-9, offense-9')
prep_in(offense-9, itself-13)
prep_of(offense-9', itself-13)
aux(consume-15, to-14)
infmod(offense-9, consume-15)
dobj(consume-15, alcohol-16)
infmod(offense-9, carry-18)
conj_and(consume-15, carry-18)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (NN reason)
              (S
                (VP (TO to)
                  (VP (VB pull)
                    (NP (PRP it)))))))))
      (NP (PRP you))
      (VP (VBP use)
        (NP (PRP it))))
    (CC and)
    (S
      (NP (DT the) (NN one)
        (S
          (VP (TO to)
            (VP (VB go)
              (NP (NN home))
              (PP (TO to)
                (NP (PRP$ his) (NN family)))))))
      (VP (VBZ is)
        (NP (PRP you))))
    (. .)))

mark(is-3, If-1)
expl(is-3, there-2)
advcl(use-9, is-3)
nsubj(is-3, reason-4)
aux(pull-6, to-5)
infmod(reason-4, pull-6)
dobj(pull-6, it-7)
nsubj(use-9, you-8)
root(ROOT-0, use-9)
dobj(use-9, it-10)
det(one-13, the-12)
nsubj(you-21, one-13)
aux(go-15, to-14)
infmod(one-13, go-15)
dobj(go-15, home-16)
poss(family-19, his-18)
prep_to(go-15, family-19)
cop(you-21, is-20)
conj_and(use-9, you-21)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (JJ such) (NN thing))
        (PP (IN as)
          (NP (DT a) (JJ fair) (NN fight)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(thing-5, no-3)
amod(thing-5, such-4)
nsubj(is-2, thing-5)
det(fight-9, a-7)
amod(fight-9, fair-8)
prep_as(thing-5, fight-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (JJ fair)))))
    (NP (DT the) (NNS tactics))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ rethought))))))
    (. .)))

mark(fair-4, If-1)
nsubj(fair-4, it-2)
cop(fair-4, is-3)
advcl(need-7, fair-4)
det(tactics-6, the-5)
nsubj(need-7, tactics-6)
xsubj(rethought-10, tactics-6)
root(ROOT-0, need-7)
aux(rethought-10, to-8)
cop(rethought-10, be-9)
xcomp(need-7, rethought-10)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ is) (RB n't)
          (ADJP (JJ fair)))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN college) (NN campus))
        (PP (JJ full) (IN of)
          (NP
            (NP (NNS innocents))
            (VP (VBG being)
              (VP
                (VP
                  (ADVP (RB defenselessly))
                  (VBN gunned)
                  (PRT (RP down)))
                (CC and)
                (VP
                  (NP (PRP$ their) (NNS parents))
                  (PP (IN with)
                    (S
                      (NP
                        (NP (JJ empty) (NNS beds))
                        (PP (IN from)
                          (NP
                            (NP (NN lack))
                            (PP (IN of)
                              (NP
                                (NP (CD one) (NN person))
                                (PP (IN on)
                                  (NP
                                    (NP (DT the) (JJ right) (NN side))
                                    (PP (IN of)
                                      (NP (DT the) (NN law))))))))))
                      (RB not)
                      (VP (VBG being)
                        (ADJP (JJ able)
                          (S
                            (VP (TO to)
                              (VP (VB carry)))))))))))))))
    (. .)))

nsubj(fair-4, What-1)
cop(fair-4, is-2)
neg(fair-4, n't-3)
csubj(campus-8, fair-4)
cop(campus-8, is-5)
det(campus-8, a-6)
nn(campus-8, college-7)
root(ROOT-0, campus-8)
dep(campus-8, full-9)
prep_of(campus-8, innocents-11)
auxpass(gunned-14, being-12)
advmod(gunned-14, defenselessly-13)
partmod(innocents-11, gunned-14)
prt(gunned-14, down-15)
poss(parents-18, their-17)
partmod(innocents-11, parents-18)
conj_and(gunned-14, parents-18)
amod(beds-21, empty-20)
nsubj(able-36, beds-21)
prep_from(beds-21, lack-23)
num(person-26, one-25)
prep_of(lack-23, person-26)
det(side-30, the-28)
amod(side-30, right-29)
prep_on(person-26, side-30)
det(law-33, the-32)
prep_of(side-30, law-33)
neg(able-36, not-34)
cop(able-36, being-35)
prepc_with(parents-18, able-36)
aux(carry-38, to-37)
xcomp(able-36, carry-38)

(ROOT
  (S
    (NP
      (NP (DT The) (NN person)
        (CC or)
        (NN student))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ does)))))
    (VP (VBZ has) (RB not)
      (VP (VBN gone)
        (PP (IN through)
          (NP (JJ concealed) (NNS weapons)))
        (NP
          (NP (NN training))
          (CC and)
          (ADVP (RB therefore))
          (NP (RB not) (JJ legal)))))
    (. .)))

det(person-2, The-1)
nsubj(does-6, person-2)
nsubj(gone-9, person-2)
conj_or(person-2, student-4)
nsubj(does-6, student-4)
nsubj(gone-9, student-4)
rcmod(person-2, does-6)
aux(gone-9, has-7)
neg(gone-9, not-8)
root(ROOT-0, gone-9)
amod(weapons-12, concealed-11)
prep_through(gone-9, weapons-12)
dobj(gone-9, training-13)
dobj(gone-9, therefore-15)
advmod(training-13, therefore-15)
conj_and(training-13, therefore-15)
neg(legal-17, not-16)
dobj(gone-9, legal-17)
conj_and(training-13, legal-17)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (VP (VBG talking)
        (NP
          (NP (JJ legal) (NN law) (NN abiding) (NNS students))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD should)
                (VP (VB be)
                  (VP (VBN allowed)
                    (S
                      (VP (TO to)
                        (VP (VB protect)
                          (NP
                            (NP (PRP themselves))
                            (CC and)
                            (NP (NNS others)))
                          (SBAR (MD should)
                            (S
                              (NP (PRP they))
                              (VP (VBP need)
                                (PP (TO to))))))))))))))))
    (. .)))

nsubj(talking-3, We-1)
aux(talking-3, are-2)
root(ROOT-0, talking-3)
amod(students-7, legal-4)
nn(students-7, law-5)
nn(students-7, abiding-6)
dobj(talking-3, students-7)
nsubjpass(allowed-11, students-7)
aux(allowed-11, should-9)
auxpass(allowed-11, be-10)
rcmod(students-7, allowed-11)
aux(protect-13, to-12)
xcomp(allowed-11, protect-13)
dobj(protect-13, themselves-14)
dobj(protect-13, others-16)
conj_and(themselves-14, others-16)
dep(need-19, should-17)
nsubj(need-19, they-18)
dep(protect-13, need-19)
prep(need-19, to-20)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (PP (IN of)
        (NP (PRP$ your) (NN mindset))))
    (VP (VBP do) (RB not)
      (VP (VB find)
        (NP
          (NP (DT the) (JJ common) (NN denominator))
          (PP (IN in)
            (NP
              (NP (NNP Virginia) (NNP Tech))
              (, ,)
              (NP (NNP Colorado) (NNP Springs))
              (, ,)
              (NP (NNP Mumbai))
              (CC or)
              (NP (RB even) (DT the) (NN holocaust)))))
        (S
          (VP (TO to)
            (VP (VB name)
              (NP (DT a) (JJ few)))))))
    (. .)))

nsubj(find-7, People-1)
poss(mindset-4, your-3)
prep_of(People-1, mindset-4)
aux(find-7, do-5)
neg(find-7, not-6)
root(ROOT-0, find-7)
det(denominator-10, the-8)
amod(denominator-10, common-9)
dobj(find-7, denominator-10)
nn(Tech-13, Virginia-12)
prep_in(denominator-10, Tech-13)
nn(Springs-16, Colorado-15)
prep_in(denominator-10, Springs-16)
conj_or(Tech-13, Springs-16)
prep_in(denominator-10, Mumbai-18)
conj_or(Tech-13, Mumbai-18)
advmod(holocaust-22, even-20)
det(holocaust-22, the-21)
prep_in(denominator-10, holocaust-22)
conj_or(Tech-13, holocaust-22)
aux(name-24, to-23)
xcomp(find-7, name-24)
det(few-26, a-25)
dobj(name-24, few-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NN criminal))
      (, ,)
      (CC and)
      (ADVP (RB in))
      (NP
        (NP (DT the) (CD one) (NN case))
        (NP (DT a) (NN government)))
      (, ,))
    (VP (VBZ has)
      (VP (VBN found)
        (NP (DT the) (JJ common) (NN denominator))))
    (. .)))

det(criminal-2, The-1)
nsubj(found-13, criminal-2)
advmod(criminal-2, in-5)
conj_and(criminal-2, in-5)
nsubj(found-13, in-5)
det(case-8, the-6)
num(case-8, one-7)
conj_and(criminal-2, case-8)
nsubj(found-13, case-8)
det(government-10, a-9)
dep(case-8, government-10)
aux(found-13, has-12)
root(ROOT-0, found-13)
det(denominator-16, the-14)
amod(denominator-16, common-15)
dobj(found-13, denominator-16)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (SBAR
          (S
            (NP (DT the) (NN psycho) (POS 's))
            (VP (VBP do) (RB n't)
              (VP (VB choose)
                (NP (PRP$ our) (JJ local) (NN rod)
                  (CC and)
                  (NN gun) (NNS clubs))
                (PP (IN for)
                  (NP (PRP$ their) (VBG killing) (NNS sprees)))))))))
    (. .)))

advmod(think-4, Why-1)
aux(think-4, do-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
det(psycho-6, the-5)
nsubj(choose-10, psycho-6)
possessive(psycho-6, 's-7)
aux(choose-10, do-8)
neg(choose-10, n't-9)
ccomp(think-4, choose-10)
poss(rod-13, our-11)
amod(rod-13, local-12)
dobj(choose-10, rod-13)
nn(clubs-16, gun-15)
dobj(choose-10, clubs-16)
conj_and(rod-13, clubs-16)
poss(sprees-20, their-18)
amod(sprees-20, killing-19)
prep_for(choose-10, sprees-20)

(ROOT
  (S
    (NP (NNP CWC))
    (VP (VBP permit)
      (SBAR
        (S
          (NP (NNS holders))
          (VP (VBP have)
            (NP (DT a) (JJ grave) (NN responsibility))
            (PP (IN whether)
              (NP (DT a) (NN student)
                (CC or)
                (NN citizen)))))))
    (. .)))

nsubj(permit-2, CWC-1)
root(ROOT-0, permit-2)
nsubj(have-4, holders-3)
ccomp(permit-2, have-4)
det(responsibility-7, a-5)
amod(responsibility-7, grave-6)
dobj(have-4, responsibility-7)
det(student-10, a-9)
prep_whether(have-4, student-10)
prep_whether(have-4, citizen-12)
conj_or(student-10, citizen-12)

(ROOT
  (S
    (NP (RB Not) (JJ only))
    (VP (VBP do)
      (S
        (NP (PRP they))
        (VP (VB put)
          (NP (PRP$ their) (NNS lives))
          (PP (IN in)
            (NP
              (NP (NN danger))
              (SBAR
                (S
                  (NP (PRP they))
                  (ADVP (RB better))
                  (VP (VB be)
                    (VP (JJ trained)
                      (CC and)
                      (VBG skillful)))))))
          (SBAR (IN so)
            (S
              (NP (DT no) (NN harm))
              (VP (VBZ comes)
                (PP (TO to)
                  (NP (NNS innocents)))))))))
    (. .)))

neg(only-2, Not-1)
nsubj(do-3, only-2)
root(ROOT-0, do-3)
nsubj(put-5, they-4)
ccomp(do-3, put-5)
poss(lives-7, their-6)
dobj(put-5, lives-7)
prep_in(put-5, danger-9)
dobj(trained-13, danger-9)
nsubj(trained-13, they-10)
nsubj(skillful-15, they-10)
advmod(trained-13, better-11)
aux(trained-13, be-12)
rcmod(danger-9, trained-13)
rcmod(danger-9, skillful-15)
conj_and(trained-13, skillful-15)
mark(comes-19, so-16)
det(harm-18, no-17)
nsubj(comes-19, harm-18)
advcl(put-5, comes-19)
prep_to(comes-19, innocents-21)

(ROOT
  (FRAG
    (NP (DT The) (JJS biggest) (NN responsibility))
    (. ?)))

det(responsibility-3, The-1)
amod(responsibility-3, biggest-2)
root(ROOT-0, responsibility-3)

