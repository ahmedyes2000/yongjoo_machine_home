(ROOT
  (S
    (INTJ (UH Okay))
    (, ,)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB play)))
    (. !)))

dep(play-5, Okay-1)
nsubj(play-5, I-3)
aux(play-5, 'll-4)
root(ROOT-0, play-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (S
              (NP (DT a) (JJ tough) (NN decision))
              (RB then)
              (VP (VB go)
                (PRT (RP on))
                (S
                  (VP (TO to)
                    (VP (VB say)
                      (SBAR
                        (S
                          (NP (DT no) (DT the) (NNS students))
                          (VP (VBP do) (RB n't)
                            (VP (VB have)
                              (NP (DT the) (NN right)
                                (S
                                  (VP (TO to)
                                    (VP (VB carry))))))))))))))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
nsubj('s-4, it-3)
ccomp(say-2, 's-4)
det(decision-7, a-5)
amod(decision-7, tough-6)
nsubj(go-9, decision-7)
xsubj(say-12, decision-7)
advmod(go-9, then-8)
ccomp('s-4, go-9)
prt(go-9, on-10)
aux(say-12, to-11)
xcomp(go-9, say-12)
predet(students-15, no-13)
det(students-15, the-14)
nsubj(have-18, students-15)
aux(have-18, do-16)
neg(have-18, n't-17)
ccomp(say-12, have-18)
det(right-20, the-19)
dobj(have-18, right-20)
aux(carry-22, to-21)
infmod(right-20, carry-22)

(ROOT
  (S
    (VP (VB Anyhow)
      (NP (PRP$ your) (NN premise))
      (SBAR (IN that)
        (S
          (NP (DT an) (NN attacker))
          (VP (MD will)
            (VP (VB focus)
              (PP (IN on)
                (NP (DT an) (JJ armed) (NN resister)))
              (: ...)
              (FRAG
                (ADJP (RB patently) (JJ wrong))))))))
    (. .)))

root(ROOT-0, Anyhow-1)
poss(premise-3, your-2)
dobj(Anyhow-1, premise-3)
complm(focus-8, that-4)
det(attacker-6, an-5)
nsubj(focus-8, attacker-6)
aux(focus-8, will-7)
ccomp(Anyhow-1, focus-8)
det(resister-12, an-10)
amod(resister-12, armed-11)
prep_on(focus-8, resister-12)
advmod(wrong-15, patently-14)
dep(focus-8, wrong-15)

(ROOT
  (S
    (PP (IN In)
      (PP (IN over)
        (NP
          (NP (CD 80) (NN %))
          (PP (IN of)
            (NP
              (NP (NNS cases))
              (VP (VBN recorded)))))))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (VP (VBN confronted)
            (PP (IN by)
              (NP (DT an) (JJ armed) (NN resister))))))
      (NP (JJ armed) (NNS assailants))
      (VP (VBP decide)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADVP (RB somewhere) (RB else)
                      (CC and)
                      (RB quick))))))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD will)
        (VP (VB leave)
          (PP (IN in)
            (NP (DT a) (NN hurry)))
          (PP (IN without)
            (S
              (ADVP (RB ever))
              (VP (VBG engaging)
                (NP (DT the) (JJ armed) (NN resistance))))))))
    (. .)))

prep(decide-17, In-1)
pcomp(In-1, over-2)
num(%-4, 80-3)
prep_over(In-1, %-4)
prep_of(%-4, cases-6)
partmod(cases-6, recorded-7)
advmod(confronted-10, when-9)
advcl(decide-17, confronted-10)
det(resister-14, an-12)
amod(resister-14, armed-13)
prep_by(confronted-10, resister-14)
amod(assailants-16, armed-15)
nsubj(decide-17, assailants-16)
root(ROOT-0, decide-17)
nsubj(want-19, they-18)
xsubj(be-21, they-18)
ccomp(decide-17, want-19)
aux(be-21, to-20)
xcomp(want-19, be-21)
dep(else-23, somewhere-22)
advmod(be-21, else-23)
advmod(be-21, quick-25)
conj_and(else-23, quick-25)
nsubj(leave-29, they-27)
aux(leave-29, will-28)
conj_and(decide-17, leave-29)
det(hurry-32, a-31)
prep_in(leave-29, hurry-32)
advmod(engaging-35, ever-34)
prepc_without(leave-29, engaging-35)
det(resistance-38, the-36)
amod(resistance-38, armed-37)
dobj(engaging-35, resistance-38)

(ROOT
  (S
    (S
      (VP (VB Go)
        (ADVP (RB here))
        (S
          (VP (TO to)
            (VP
              (VP (VB get)
                (NP
                  (NP (DT some) (JJ real) (NN life) (NNS stories))
                  (PP (IN of)
                    (NP
                      (NP (NNS people))
                      (VP
                        (ADVP (RB actually))
                        (VBG defending)
                        (NP (PRP themselves)))))))
              (: ...)
              (VP (VB http:\/\/www.claytoncramer.com\/gundefenseblog\/blogger.html)
                (ADVP (RB Probably))
                (NP
                  (NP (DT the) (JJS worst) (NN thing))
                  (PP (IN about)
                    (S
                      (VP (VBG allowing)
                        (NP (JJ concealed) (NNS weapons))
                        (PP (IN on)
                          (NP (NN campus)))))))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP (DT a) (JJ double-edged) (NN sword))))))
    (. .)))

csubj(is-26, Go-1)
advmod(Go-1, here-2)
aux(get-4, to-3)
xcomp(Go-1, get-4)
det(stories-8, some-5)
amod(stories-8, real-6)
nn(stories-8, life-7)
dobj(get-4, stories-8)
prep_of(stories-8, people-10)
advmod(defending-12, actually-11)
partmod(people-10, defending-12)
dobj(defending-12, themselves-13)
dep(get-4, http:\/\/www.claytoncramer.com\/gundefenseblog\/blogger.html-15)
advmod(http:\/\/www.claytoncramer.com\/gundefenseblog\/blogger.html-15, Probably-16)
det(thing-19, the-17)
amod(thing-19, worst-18)
dobj(http:\/\/www.claytoncramer.com\/gundefenseblog\/blogger.html-15, thing-19)
prepc_about(thing-19, allowing-21)
amod(weapons-23, concealed-22)
dobj(allowing-21, weapons-23)
prep_on(allowing-21, campus-25)
root(ROOT-0, is-26)
complm(sword-32, that-27)
nsubj(sword-32, it-28)
cop(sword-32, is-29)
det(sword-32, a-30)
amod(sword-32, double-edged-31)
ccomp(is-26, sword-32)

(ROOT
  (S
    (SBAR (RB Just)
      (S
        (PP (IN like)
          (NP (NN someone)))
        (VP (MD can)
          (VP (VB carry)
            (PP (IN for)
              (NP (NN defense)))))))
    (, ,)
    (NP (NN someone) (RB else))
    (VP (MD can)
      (VP (VB carry)
        (PP (IN for)
          (NP (JJ offensive) (NNS purposes)))))
    (. !)))

advmod(carry-5, Just-1)
prep_like(carry-5, someone-3)
aux(carry-5, can-4)
dep(carry-12, carry-5)
prep_for(carry-5, defense-7)
nsubj(carry-12, someone-9)
advmod(someone-9, else-10)
aux(carry-12, can-11)
root(ROOT-0, carry-12)
amod(purposes-15, offensive-14)
prep_for(carry-12, purposes-15)

(ROOT
  (S
    (NP (JJ Concealed) (NN carry))
    (VP (MD could)
      (ADVP (RB actually))
      (VP (VB make)
        (S
          (NP (PRP it))
          (ADJP (RBR easier))
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (DT a) (NN weapon))
                (PP (IN on)
                  (NP (NN campus)))
                (SBAR (IN in) (NN order)
                  (S
                    (VP (TO to)
                      (VP (VB carry)
                        (PRT (RP out))
                        (NP (DT a) (NN massacre))))))))))))
    (. .)))

amod(carry-2, Concealed-1)
nsubj(make-5, carry-2)
aux(make-5, could-3)
advmod(make-5, actually-4)
root(ROOT-0, make-5)
nsubj(get-9, it-6)
dep(get-9, easier-7)
aux(get-9, to-8)
xcomp(make-5, get-9)
det(weapon-11, a-10)
dobj(get-9, weapon-11)
prep_on(get-9, campus-13)
mark(carry-17, in-14)
dep(carry-17, order-15)
aux(carry-17, to-16)
purpcl(get-9, carry-17)
prt(carry-17, out-18)
det(massacre-20, a-19)
dobj(carry-17, massacre-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP guess)
        (SBAR
          (S
            (NP
              (NP (DT the) (JJ only) (NN thing))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ concerns)
                    (NP (PRP me))
                    (PP (IN about)
                      (NP
                        (NP (DT this) (NN line))
                        (PP (IN of)
                          (NP (NN reasoning)))))))))
            (VP (VBZ is)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ is) (RB n't)
                    (ADJP (RB too) (JJ hard)
                      (S
                        (VP (TO to)
                          (VP (VB sneak)
                            (NP (DT a) (NN weapon))
                            (PP (IN on)
                              (PP (TO to)
                                (NP (JJS most) (NN college) (NNS campuses))))
                            (S
                              (VP (TO to)
                                (VP (VB begin)
                                  (PP (IN with)))))))))))))))))
    (: ...)
    (S
      (ADVP (RB still))
      (, ,)
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (S
              (VP (VBG allowing)
                (S
                  (NP (NNP concealed))
                  (VP (VB carry)
                    (PP (IN on)
                      (NP (NN college) (NNS campuses)))))))
            (VP (VBZ is)
              (NP (DT a) (JJ bad) (NN idea)))))))
    (. .)))

nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
det(thing-5, the-3)
amod(thing-5, only-4)
nsubj(concerns-7, thing-5)
nsubj(is-14, thing-5)
rcmod(thing-5, concerns-7)
dobj(concerns-7, me-8)
det(line-11, this-10)
prep_about(concerns-7, line-11)
prep_of(line-11, reasoning-13)
ccomp(guess-2, is-14)
complm(hard-20, that-15)
nsubj(hard-20, it-16)
cop(hard-20, is-17)
neg(hard-20, n't-18)
advmod(hard-20, too-19)
ccomp(is-14, hard-20)
aux(sneak-22, to-21)
xcomp(hard-20, sneak-22)
det(weapon-24, a-23)
dobj(sneak-22, weapon-24)
prep(sneak-22, on-25)
pcomp(on-25, to-26)
amod(campuses-29, most-27)
nn(campuses-29, college-28)
prep_to(on-25, campuses-29)
aux(begin-31, to-30)
xcomp(sneak-22, begin-31)
prep(begin-31, with-32)
advmod(think-37, still-34)
nsubj(think-37, I-36)
parataxis(guess-2, think-37)
csubj(idea-47, allowing-38)
nsubj(carry-40, concealed-39)
ccomp(allowing-38, carry-40)
nn(campuses-43, college-42)
prep_on(carry-40, campuses-43)
cop(idea-47, is-44)
det(idea-47, a-45)
amod(idea-47, bad-46)
ccomp(think-37, idea-47)

(ROOT
  (SBARQ
    (WHNP (WP Double))
    (SQ
      (VP (VBD edged)
        (NP (NN sword))))
    (. ?)))

nsubj(edged-2, Double-1)
root(ROOT-0, edged-2)
dobj(edged-2, sword-3)

(ROOT
  (S
    (S
      (VP
        (VP (VB Think)
          (NP (DT this))
          (PRT (RP through)))
        (CC and)
        (VP (VB read)
          (NP (DT the) (NN following))
          (ADVP (RB very) (RB carefully)))))
    (, ,)
    (NP
      (NP (NNS people))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP bring)
            (NP
              (NP (JJ unlawful))
              (PRN (-LRB- -LRB-)
                (NP (DT no) (JJ legal) (NN CCW))
                (-RRB- -RRB-)))
            (PP (IN onto)
              (NP (NN campus)))))))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS ones))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP have)
              (NP (DT the) (JJ ill) (NN intent)))))))
    (. .)))

ccomp(ones-24, Think-1)
dobj(Think-1, this-2)
prt(Think-1, through-3)
conj_and(Think-1, read-5)
ccomp(ones-24, read-5)
det(following-7, the-6)
dobj(read-5, following-7)
advmod(carefully-9, very-8)
advmod(read-5, carefully-9)
nsubj(bring-13, people-11)
nsubj(ones-24, people-11)
rcmod(people-11, bring-13)
dobj(bring-13, unlawful-14)
det(CCW-18, no-16)
amod(CCW-18, legal-17)
abbrev(unlawful-14, CCW-18)
prep_onto(bring-13, campus-21)
cop(ones-24, are-22)
det(ones-24, the-23)
root(ROOT-0, ones-24)
nsubj(have-26, ones-24)
rcmod(ones-24, have-26)
det(intent-29, the-27)
amod(intent-29, ill-28)
dobj(have-26, intent-29)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ has) (RB not)
      (VP (VBN been)
        (NP
          (NP (CD one) (VBN recorded) (NN incident))
          (PP (IN of)
            (NP (DT a) (NNP CCW)))
          (VP (VBG initiating)
            (NP
              (NP (DT any) (NN type))
              (PP (IN of)
                (NP (NN massacre))))))))
    (. .)))

expl(incident-7, There-1)
aux(incident-7, has-2)
neg(incident-7, not-3)
cop(incident-7, been-4)
num(incident-7, one-5)
amod(incident-7, recorded-6)
root(ROOT-0, incident-7)
det(CCW-10, a-9)
prep_of(incident-7, CCW-10)
partmod(incident-7, initiating-11)
det(type-13, any-12)
dobj(initiating-11, type-13)
prep_of(type-13, massacre-15)

(ROOT
  (S
    (PP (RB Not)
      (NP (CD one)))
    (, ,)
    (NP (PRP$ your) (NN fear))
    (VP (VBZ is)
      (ADJP (JJ unfounded)))
    (. .)))

advcl(unfounded-7, Not-1)
prep(unfounded-7, Not-1)
pobj(Not-1, one-2)
poss(fear-5, your-4)
nsubj(unfounded-7, fear-5)
cop(unfounded-7, is-6)
root(ROOT-0, unfounded-7)

(ROOT
  (S (RB Then)
    (NP (PRP you))
    (VP (VBP go)
      (PP (IN on)
        (PP (TO to)
          (NP (NN state))))
      (SBAR (IN that)
        (S
          (NP (JJS most) (NNS people))
          (ADVP (RB simply))
          (VP (VBP lack)
            (NP (DT the) (JJ proper) (NN training)
              (S
                (VP (TO to)
                  (VP (VB carry)
                    (NP (NNS weapons))))))))))
    (. .)))

advmod(go-3, Then-1)
nsubj(go-3, you-2)
root(ROOT-0, go-3)
prep(go-3, on-4)
pcomp(on-4, to-5)
prep_to(on-4, state-6)
complm(lack-11, that-7)
amod(people-9, most-8)
nsubj(lack-11, people-9)
advmod(lack-11, simply-10)
ccomp(go-3, lack-11)
det(training-14, the-12)
amod(training-14, proper-13)
dobj(lack-11, training-14)
aux(carry-16, to-15)
infmod(training-14, carry-16)
dobj(carry-16, weapons-17)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB know)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ takes)
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (DT a) (NNP CCW)))))))))
    (. ?)))

aux(know-3, Do-1)
nsubj(know-3, you-2)
root(ROOT-0, know-3)
dep(takes-6, what-4)
nsubj(takes-6, it-5)
xsubj(get-8, it-5)
ccomp(know-3, takes-6)
aux(get-8, to-7)
xcomp(takes-6, get-8)
det(CCW-10, a-9)
dobj(get-8, CCW-10)

(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))

root(ROOT-0, 1-1)

(ROOT
  (S
    (NP (NNP Applicant))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP (CD 21) (NNS years))
          (PP (IN of)
            (NP (NN age)
              (CC or)
              (NN older2))))))
    (. .)))

nsubj(years-5, Applicant-1)
aux(years-5, must-2)
cop(years-5, be-3)
num(years-5, 21-4)
root(ROOT-0, years-5)
prep_of(years-5, age-7)
prep_of(years-5, older2-9)
conj_or(age-7, older2-9)

(ROOT
  (S
    (NP (NNP Applicant))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP (DT a) (JJ law-abiding) (NN citizen))
          (PP (IN of)
            (NP (JJ good) (NNS character3))))))
    (. .)))

nsubj(citizen-6, Applicant-1)
aux(citizen-6, must-2)
cop(citizen-6, be-3)
det(citizen-6, a-4)
amod(citizen-6, law-abiding-5)
root(ROOT-0, citizen-6)
amod(character3-9, good-8)
prep_of(citizen-6, character3-9)

(ROOT
  (S
    (NP (NNP Applicant))
    (VP (VBZ has) (RB not)
      (VP (VBN been)
        (VP (VBN convicted)
          (PP (IN of)
            (NP (DT a) (NN felony4))))))
    (. .)))

nsubjpass(convicted-5, Applicant-1)
aux(convicted-5, has-2)
neg(convicted-5, not-3)
auxpass(convicted-5, been-4)
root(ROOT-0, convicted-5)
det(felony4-8, a-7)
prep_of(convicted-5, felony4-8)

(ROOT
  (S
    (NP (NNP Applicant))
    (VP (VBZ has) (RB not)
      (VP (VBN been)
        (VP (VBN convicted)
          (PP (IN of)
            (NP
              (NP (DT any) (NN crime))
              (PP (IN of)
                (NP (CD violence5))))))))
    (. .)))

nsubjpass(convicted-5, Applicant-1)
aux(convicted-5, has-2)
neg(convicted-5, not-3)
auxpass(convicted-5, been-4)
root(ROOT-0, convicted-5)
det(crime-8, any-7)
prep_of(convicted-5, crime-8)
prep_of(crime-8, violence5-10)

(ROOT
  (S
    (NP (NNP Applicant))
    (VP (VBZ has) (RB not)
      (VP (VBN been)
        (VP (VBN convicted)
          (PP (IN of)
            (NP
              (NP (DT any) (NN offense))
              (VP (VBG involving)
                (NP
                  (NP (DT the) (NN use))
                  (PP (IN of)
                    (NP (NN alcohol)))))
              (PRN (-LRB- -LRB-)
                (SBAR (IN If)
                  (S
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (ADVP
                          (NP
                            (QP (JJR more) (IN than) (CD 5))
                            (NNS years))
                          (RB ago))))
                    (, ,)
                    (S
                      (NP (PRP you))
                      (VP (MD may)
                        (VP (VB qualify)
                          (PP (IN for)
                            (NP (DT the) (NN permit)))))
                      (. .))))
                (-RRB- -RRB-)))))))))

nsubjpass(convicted-5, Applicant-1)
aux(convicted-5, has-2)
neg(convicted-5, not-3)
auxpass(convicted-5, been-4)
root(ROOT-0, convicted-5)
det(offense-8, any-7)
prep_of(convicted-5, offense-8)
partmod(offense-8, involving-9)
det(use-11, the-10)
dobj(involving-9, use-11)
prep_of(use-11, alcohol-13)
mark(was-17, If-15)
nsubj(was-17, it-16)
dep(offense-8, was-17)
parataxis(involving-9, was-17)
mwe(than-19, more-18)
quantmod(5-20, than-19)
num(years-21, 5-20)
npadvmod(ago-22, years-21)
advmod(was-17, ago-22)
nsubj(qualify-26, you-24)
aux(qualify-26, may-25)
dep(was-17, qualify-26)
det(permit-29, the-28)
prep_for(qualify-26, permit-29)

(ROOT
  (FRAG
    (NP (CD 6))
    (. .)))

root(ROOT-0, 6-1)

(ROOT
  (S
    (NP (NNP Applicant))
    (VP (VBZ has) (RB not)
      (VP (VBN been)
        (VP (VBN convicted)
          (PP (IN of)
            (NP
              (NP (DT any) (NNS offenses))
              (VP (VBG involving)
                (NP
                  (NP (DT the) (JJ unlawful) (NN use))
                  (PP (IN of)
                    (NP
                      (NP (NNS drugs))
                      (CC or)
                      (NP (JJ other) (JJ controlled) (NNS substances))))))
              (PRN (-LRB- -LRB-)
                (SBAR (IN If)
                  (S
                    (NP (PRP it))
                    (VP (VBD was)
                      (NP (DT a) (NN misdemeanor)
                        (S
                          (ADVP
                            (NP
                              (QP (JJR more) (IN than) (CD 10) (TO to) (CD 15))
                              (NNS years))
                            (RB ago))
                          (, ,)
                          (NP (PRP you))
                          (VP (MD may)
                            (ADVP (RB still))
                            (VP (VB qualify)
                              (PP (IN for)
                                (NP (DT the) (NN permit)))))
                          (. .))))))
                (-RRB- -RRB-)))))))))

nsubjpass(convicted-5, Applicant-1)
aux(convicted-5, has-2)
neg(convicted-5, not-3)
auxpass(convicted-5, been-4)
root(ROOT-0, convicted-5)
det(offenses-8, any-7)
prep_of(convicted-5, offenses-8)
partmod(offenses-8, involving-9)
det(use-12, the-10)
amod(use-12, unlawful-11)
dobj(involving-9, use-12)
prep_of(use-12, drugs-14)
amod(substances-18, other-16)
amod(substances-18, controlled-17)
prep_of(use-12, substances-18)
conj_or(drugs-14, substances-18)
mark(misdemeanor-24, If-20)
nsubj(misdemeanor-24, it-21)
cop(misdemeanor-24, was-22)
det(misdemeanor-24, a-23)
dep(offenses-8, misdemeanor-24)
parataxis(involving-9, misdemeanor-24)
mwe(than-26, more-25)
quantmod(15-29, than-26)
number(15-29, 10-27)
dep(15-29, to-28)
num(years-30, 15-29)
npadvmod(ago-31, years-30)
advmod(qualify-36, ago-31)
nsubj(qualify-36, you-33)
aux(qualify-36, may-34)
advmod(qualify-36, still-35)
dep(misdemeanor-24, qualify-36)
det(permit-39, the-38)
prep_for(qualify-36, permit-39)

(ROOT
  (FRAG
    (NP (CD 7))
    (. .)))

root(ROOT-0, 7-1)

(ROOT
  (S
    (NP (NNP Applicant))
    (VP (VBZ has) (RB not)
      (VP (VBN been)
        (VP (VBN convicted)
          (PP (IN of)
            (S
              (NP (DT any) (NNS offenses))
              (VP (VBG involving)
                (NP (JJ moral) (NNS turpitude8))))))))
    (. .)))

nsubjpass(convicted-5, Applicant-1)
aux(convicted-5, has-2)
neg(convicted-5, not-3)
auxpass(convicted-5, been-4)
root(ROOT-0, convicted-5)
det(offenses-8, any-7)
nsubj(involving-9, offenses-8)
prepc_of(convicted-5, involving-9)
amod(turpitude8-11, moral-10)
dobj(involving-9, turpitude8-11)

(ROOT
  (S
    (NP (NNP Applicant))
    (VP (VBZ has) (RB not)
      (VP (VBN been)
        (VP (VBN convicted)
          (PP (IN of)
            (NP
              (NP (DT any) (NN offense))
              (VP (VBG involving)
                (NP (JJ domestic) (NNS violence9))))))))
    (. .)))

nsubjpass(convicted-5, Applicant-1)
aux(convicted-5, has-2)
neg(convicted-5, not-3)
auxpass(convicted-5, been-4)
root(ROOT-0, convicted-5)
det(offense-8, any-7)
prep_of(convicted-5, offense-8)
partmod(offense-8, involving-9)
amod(violence9-11, domestic-10)
dobj(involving-9, violence9-11)

(ROOT
  (S
    (NP (NNP Applicant))
    (VP
      (VP (VBZ has) (RB not)
        (VP (VBN been)
          (VP (VBN adjudicated)
            (PP
              (PP (IN by)
                (NP
                  (NP (DT a) (NN court))
                  (PP (IN of)
                    (NP (DT a) (NN state)))))
              (CC or)
              (PP (IN of)
                (NP (DT the) (NNP United) (NNPS States))))
            (PP (IN as)
              (NP
                (NP (RB mentally) (JJ incompetent))
                (, ,)
                (SBAR (IN unless)
                  (S
                    (NP (DT the) (NN adjudication))
                    (VP (VBZ has)
                      (VP (VBN been)
                        (VP (VBN withdrawn)))))))))))
      (CC or)
      (VP (VBD reversed)
        (NP (CD .10))))
    (. .)))

nsubjpass(adjudicated-5, Applicant-1)
nsubjpass(adjudicated-5', Applicant-1)
nsubjpass(reversed-28, Applicant-1)
aux(adjudicated-5, has-2)
neg(adjudicated-5, not-3)
auxpass(adjudicated-5, been-4)
root(ROOT-0, adjudicated-5)
conj_or(adjudicated-5, adjudicated-5')
det(court-8, a-7)
agent(adjudicated-5, court-8)
det(state-11, a-10)
prep_of(court-8, state-11)
det(States-16, the-14)
nn(States-16, United-15)
prep_of(adjudicated-5', States-16)
advmod(incompetent-19, mentally-18)
prep_as(adjudicated-5, incompetent-19)
mark(withdrawn-26, unless-21)
det(adjudication-23, the-22)
nsubjpass(withdrawn-26, adjudication-23)
aux(withdrawn-26, has-24)
auxpass(withdrawn-26, been-25)
dep(incompetent-19, withdrawn-26)
conj_or(adjudicated-5, reversed-28)
dobj(reversed-28, .10-29)

(ROOT
  (S
    (S
      (NP (NNP Applicant))
      (VP (MD must)
        (VP (VB perform)
          (NP (DT a) (JJ handgun) (NN safety) (NN handling) (NN session))
          (PP (IN before)
            (NP
              (NP (DT a) (NNP Utah) (NNP CCW) (NN instructor))
              (SBAR (IN unless)
                (FRAG
                  (NP
                    (NP (DT the) (NN student))
                    (PP (IN as)
                      (NP
                        (QP (IN at) (JJS least) (CD one))))
                    (PP (IN of)
                      (NP (DT the) (NN following)))))))))))
    (: :)
    (S
      (X
        (X (SYM \*))
        (NP
          (NP (NNP Certificate))
          (PP (IN from)
            (NP (NNP NRA) (NNP Basic) (NN Pistol) (NN course)))))
      (X
        (X (SYM \*))
        (NP
          (NP (NNP Law) (NN enforcement) (NN experience) (NNP \*) (NNP Certification))
          (PP (IN as)
            (NP
              (NP (DT an) (NNP NRA) (NNPS Firearms) (NNP InstructorHandgun) (NN training))
              (PP (IN in)
                (NP (JJ military) (NN serviceSome)))))))
      (NP (NNS states))
      (VP (VBP require)
        (NP (DT a) (JJ psychological) (NN examination))
        (ADVP (RB as) (RB well))))
    (. .)))

nsubj(perform-3, Applicant-1)
aux(perform-3, must-2)
root(ROOT-0, perform-3)
det(session-8, a-4)
amod(session-8, handgun-5)
nn(session-8, safety-6)
nn(session-8, handling-7)
dobj(perform-3, session-8)
det(instructor-13, a-10)
nn(instructor-13, Utah-11)
nn(instructor-13, CCW-12)
prep_before(perform-3, instructor-13)
mark(student-16, unless-14)
det(student-16, the-15)
dep(instructor-13, student-16)
quantmod(one-20, at-18)
mwe(at-18, least-19)
pobj(at-18, least-19)
prep_as(student-16, one-20)
det(following-23, the-22)
prep_of(student-16, following-23)
dep(Certificate-26, \*-25)
dep(require-48, Certificate-26)
nn(course-31, NRA-28)
nn(course-31, Basic-29)
nn(course-31, Pistol-30)
prep_from(Certificate-26, course-31)
dep(Certification-37, \*-32)
nn(Certification-37, Law-33)
nn(Certification-37, enforcement-34)
nn(Certification-37, experience-35)
nn(Certification-37, \*-36)
dep(require-48, Certification-37)
det(training-43, an-39)
nn(training-43, NRA-40)
nn(training-43, Firearms-41)
nn(training-43, InstructorHandgun-42)
prep_as(Certification-37, training-43)
amod(serviceSome-46, military-45)
prep_in(training-43, serviceSome-46)
nsubj(require-48, states-47)
parataxis(perform-3, require-48)
det(examination-51, a-49)
amod(examination-51, psychological-50)
dobj(require-48, examination-51)
advmod(well-53, as-52)
mwe(well-53, as-52)
advmod(require-48, well-53)

(ROOT
  (S
    (NP (JJ Illegal) (NNS carriers))
    (VP (VBP tend)
      (S (RB not)
        (VP (TO to)
          (VP (VB pay)
            (NP (NN attention))
            (PP (TO to)
              (NP
                (NP (DT those) (NNS things))
                (VP (VBN called)
                  (NP (NNS laws)))))))))
    (. .)))

amod(carriers-2, Illegal-1)
nsubj(tend-3, carriers-2)
xsubj(pay-6, carriers-2)
root(ROOT-0, tend-3)
neg(pay-6, not-4)
aux(pay-6, to-5)
xcomp(tend-3, pay-6)
dobj(pay-6, attention-7)
det(things-10, those-9)
prep_to(pay-6, things-10)
partmod(things-10, called-11)
dobj(called-11, laws-12)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP
            (NP (NN law) (NN abiding) (NNS citizens))
            (PP (IN with)
              (NP (DT a) (NNP CCW))))
          (VP (VBP are)
            (NP
              (ADJP (RB so) (JJ effective))
              (DT a) (NN deterrent))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(deterrent-14, why-3)
nn(citizens-6, law-4)
nn(citizens-6, abiding-5)
nsubj(deterrent-14, citizens-6)
det(CCW-9, a-8)
prep_with(citizens-6, CCW-9)
cop(deterrent-14, are-10)
advmod(effective-12, so-11)
amod(deterrent-14, effective-12)
det(deterrent-14, a-13)
advcl('s-2, deterrent-14)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (VP (VB think)
        (PP (IN about)
          (NP (DT this) (JJ real) (JJ hard)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (`` ``) (VB make)
            (NP (DT a) (NN name))
            ('' '')
            (PP (IN for)
              (NP (PRP yourself)))
            (PP (IN by)
              (S
                (VP (VBG killing)
                  (ADJP (RB as) (JJ many))
                  (SBAR (IN as)
                    (S
                      (NP (PRP you))
                      (VP (MD can)
                        (S
                          (ADVP (RB then))
                          (VP (VBG capping)
                            (NP (PRP yourself))))))))))))))
    (. .)))

advmod(think-2, Now-1)
ccomp(want-9, think-2)
det(hard-6, this-4)
amod(hard-6, real-5)
prep_about(think-2, hard-6)
nsubj(want-9, you-8)
xsubj(make-12, you-8)
root(ROOT-0, want-9)
aux(make-12, to-10)
xcomp(want-9, make-12)
det(name-14, a-13)
dobj(make-12, name-14)
prep_for(make-12, yourself-17)
prepc_by(make-12, killing-19)
advmod(many-21, as-20)
acomp(killing-19, many-21)
mark(can-24, as-22)
nsubj(can-24, you-23)
advcl(killing-19, can-24)
advmod(capping-26, then-25)
xcomp(can-24, capping-26)
dobj(capping-26, yourself-27)

(ROOT
  (S
    (SBAR (RB Now) (IN if)
      (S
        (S
          (NP (PRP$ your) (JJ intended) (NNS victims))
          (VP (VBP are) (RB all)
            (ADJP (JJ unarmed))))
        (CC and)
        (S
          (NP (PRP you))
          (VP (VBP know)
            (NP (DT this))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (VBP know)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB succeed)))))
        (CC and)
        (SBAR (IN since)
          (S
            (NP (NNS schools))
            (VP (VBP are)
              (ADJP (JJ stupid)
                (SBAR (IN because)
                  (S
                    (NP (PRP they))
                    (VP (VBP tell)
                      (S
                        (NP (NNS students))
                        (VP (TO to)
                          (VP
                            (VP (VB play)
                              (ADJP (JJ dead)))
                            (CC or)
                            (VP (RB not) (VB fight)
                              (PRT (RP back)))))))))))))))
    (. .)))

advmod(unarmed-8, Now-1)
dep(unarmed-8, if-2)
poss(victims-5, your-3)
amod(victims-5, intended-4)
nsubj(unarmed-8, victims-5)
cop(unarmed-8, are-6)
advmod(unarmed-8, all-7)
advcl(know-16, unarmed-8)
nsubj(know-11, you-10)
conj_and(unarmed-8, know-11)
advcl(know-16, know-11)
dobj(know-11, this-12)
advmod(know-16, then-14)
nsubj(know-16, you-15)
root(ROOT-0, know-16)
complm(succeed-20, that-17)
nsubj(succeed-20, you-18)
aux(succeed-20, can-19)
ccomp(know-16, succeed-20)
mark(stupid-25, since-22)
nsubj(stupid-25, schools-23)
cop(stupid-25, are-24)
ccomp(know-16, stupid-25)
conj_and(succeed-20, stupid-25)
mark(tell-28, because-26)
nsubj(tell-28, they-27)
ccomp(stupid-25, tell-28)
nsubj(play-31, students-29)
nsubj(fight-35, students-29)
aux(play-31, to-30)
xcomp(tell-28, play-31)
acomp(play-31, dead-32)
neg(fight-35, not-34)
xcomp(tell-28, fight-35)
conj_or(play-31, fight-35)
prt(fight-35, back-36)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (JJ other) (NNS words))
        (PP (RB instead) (IN of)
          (NP (NN teaching) (NN survival) (NNS skills)))))
    (NP (PRP they))
    (VP (VBP are)
      (VP (VBG training)
        (NP (NNS students))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ lambs)
                (PP (IN at)
                  (NP (DT the) (NN slaughter)))))))))
    (. .)))

amod(words-3, other-2)
prep_in(training-11, words-3)
nn(skills-8, teaching-6)
nn(skills-8, survival-7)
prep_instead_of(words-3, skills-8)
nsubj(training-11, they-9)
aux(training-11, are-10)
root(ROOT-0, training-11)
dobj(training-11, students-12)
aux(lambs-15, to-13)
cop(lambs-15, be-14)
xcomp(training-11, lambs-15)
det(slaughter-18, the-17)
prep_at(lambs-15, slaughter-18)

(ROOT
  (S
    (S
      (VP (VBG Anyhow)
        (SBAR (RB so) (IN since)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT no) (JJ credible) (NN threat)))))))
    (, ,)
    (NP (PRP they))
    (VP (MD can)
      (VP (VB go)
        (PP (IN on)
          (NP
            (NP (VBG killing) (NN spree))
            (CC and)
            (NP
              (ADJP (RBS most) (JJ likely))
              (NNS succeed))))))
    (. .)))

partmod(go-12, Anyhow-1)
advmod(is-5, so-2)
dep(is-5, since-3)
expl(is-5, there-4)
ccomp(Anyhow-1, is-5)
det(threat-8, no-6)
amod(threat-8, credible-7)
nsubj(is-5, threat-8)
nsubj(go-12, they-10)
aux(go-12, can-11)
root(ROOT-0, go-12)
amod(spree-15, killing-14)
prep_on(go-12, spree-15)
advmod(likely-18, most-17)
amod(succeed-19, likely-18)
prep_on(go-12, succeed-19)
conj_and(spree-15, succeed-19)

(ROOT
  (S
    (ADVP (RB Now))
    (NP
      (NP (DT the) (JJ same) (NN scenario))
      (PP (CC but)
        (NP (DT the) (NNS rules))))
    (VP (VBP are)
      (VP (VBN changed)
        (PP (IN in)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NNS targets))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP have)
                      (VP (VBN selected))))))
              (VP (VBP have)
                (NP (DT the) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB carry)))))))))))
    (. .)))

advmod(changed-9, Now-1)
det(scenario-4, the-2)
amod(scenario-4, same-3)
nsubjpass(changed-9, scenario-4)
prep(scenario-4, but-5)
det(rules-7, the-6)
dep(but-5, rules-7)
auxpass(changed-9, are-8)
root(ROOT-0, changed-9)
complm(have-17, that-11)
det(targets-13, the-12)
dobj(selected-16, targets-13)
nsubj(have-17, targets-13)
nsubj(selected-16, you-14)
aux(selected-16, have-15)
rcmod(targets-13, selected-16)
prepc_in(changed-9, have-17)
det(right-19, the-18)
dobj(have-17, right-19)
aux(carry-21, to-20)
infmod(right-19, carry-21)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ is)
                (VP (VBG packing)))))
          (CC and)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ is) (RB n't)))))))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
nsubj(packing-7, who-5)
aux(packing-7, is-6)
dobj(know-4, packing-7)
nsubj(is-10, who-9)
dobj(know-4, is-10)
conj_and(packing-7, is-10)
neg(is-10, n't-11)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NNS odds))
      (PP (IN of)
        (S
          (VP (VBG getting)
            (ADVP (RB far))))))
    (VP (VBP are)
      (ADJP (RB pretty) (JJ slim)))
    (. .)))

poss(odds-2, Your-1)
nsubj(slim-8, odds-2)
prepc_of(odds-2, getting-4)
advmod(getting-4, far-5)
cop(slim-8, are-6)
advmod(slim-8, pretty-7)
root(ROOT-0, slim-8)

(ROOT
  (S
    (S
      (NP (NNP Slaughter))
      (VP (VBZ is)
        (VP (VBN stopped)
          (SBAR (IN before)
            (S
              (NP (PRP it))
              (ADVP (RB even))
              (VP (VBZ happens)))))))
    (, ,)
    (CC and)
    (S
      (NP (RB not) (CD one) (NN person))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB pull)
              (NP (DT a) (NN gun)))))))
    (. .)))

nsubjpass(stopped-3, Slaughter-1)
auxpass(stopped-3, is-2)
root(ROOT-0, stopped-3)
mark(happens-7, before-4)
nsubj(happens-7, it-5)
advmod(happens-7, even-6)
advcl(stopped-3, happens-7)
neg(person-12, not-10)
num(person-12, one-11)
nsubj(had-13, person-12)
xsubj(pull-15, person-12)
conj_and(stopped-3, had-13)
aux(pull-15, to-14)
xcomp(had-13, pull-15)
det(gun-17, a-16)
dobj(pull-15, gun-17)

(ROOT
  (S (CC So)
    (S
      (NP (PRP it))
      (VP (VBZ 's) (RB not)
        (ADVP (RB just)
          (NP (DT some) (NN person)))
        (ADJP (RB willy) (JJ nilly))
        (S
          (VP (VBG getting)
            (NP (DT the) (NN permit))))))
    (CC and)
    (S
      (NP (PRP$ your) (NNS fears))
      (VP (VBP are)
        (ADJP (JJ unfounded))))
    (. .)))

nsubj(nilly-9, it-2)
cop(nilly-9, 's-3)
neg(nilly-9, not-4)
advmod(nilly-9, just-5)
det(person-7, some-6)
pobj(just-5, person-7)
advmod(nilly-9, willy-8)
root(ROOT-0, nilly-9)
xcomp(nilly-9, getting-10)
det(permit-12, the-11)
dobj(getting-10, permit-12)
poss(fears-15, your-14)
nsubj(unfounded-17, fears-15)
cop(unfounded-17, are-16)
conj_and(nilly-9, unfounded-17)

(ROOT
  (S
    (NP (RB Just) (DT the))
    (VP (VBD thought)
      (SBAR (IN that)
        (S
          (NP (JJ armed) (NN resistance))
          (VP (VBD was)
            (NP
              (NP (DT a) (JJ real) (NN possibility))
              (SBAR
                (S
                  (VP (MD would)
                    (VP (VB be)
                      (ADJP (JJ enough)
                        (PP (IN for)
                          (NP (DT any) (JJ rational) (NN person)))))))))))))
    (. .)))

advmod(the-2, Just-1)
nsubj(thought-3, the-2)
root(ROOT-0, thought-3)
complm(possibility-10, that-4)
amod(resistance-6, armed-5)
nsubj(possibility-10, resistance-6)
cop(possibility-10, was-7)
det(possibility-10, a-8)
amod(possibility-10, real-9)
ccomp(thought-3, possibility-10)
aux(enough-13, would-11)
cop(enough-13, be-12)
rcmod(possibility-10, enough-13)
det(person-17, any-15)
amod(person-17, rational-16)
prep_for(enough-13, person-17)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Oh))
        (CC and)
        (NP
          (NP (JJ last) (NN bit))
          (, ,)
          (ADVP (RB almost)
            (NP (DT every) (NN massacre))
            (PP (IN in)
              (NP
                (NP (DT the) (NNP United) (NNPS States))
                (CC and)
                (NP (NNP Europe) (-LRB- -LRB-) (NNP Germany)))))))
      (ADVP (RB just))
      (VP (VBD had)
        (NP (DT another) (NN one))))
    (: ...)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (NP (JJ strict) (NN gun) (NN control))))
    (. !) (-RRB- -RRB-)))

nsubj(had-18, Oh-1)
amod(bit-4, last-3)
conj_and(Oh-1, bit-4)
nsubj(had-18, bit-4)
advmod(bit-4, almost-6)
det(massacre-8, every-7)
pobj(almost-6, massacre-8)
det(States-12, the-10)
nn(States-12, United-11)
prep_in(almost-6, States-12)
nn(Germany-16, Europe-14)
prep_in(almost-6, Germany-16)
conj_and(States-12, Germany-16)
advmod(had-18, just-17)
root(ROOT-0, had-18)
det(one-20, another-19)
dobj(had-18, one-20)
nsubj(have-24, they-23)
conj_and(had-18, have-24)
amod(control-27, strict-25)
nn(control-27, gun-26)
dobj(have-24, control-27)

(ROOT
  (S
    (VP (VBZ has)
      (VP (VBN happened)
        (PP (IN in)
          (NP (DT a) (NN gun) (JJ free) (NN zone)))))
    (. .)))

aux(happened-2, has-1)
root(ROOT-0, happened-2)
det(zone-7, a-4)
nn(zone-7, gun-5)
amod(zone-7, free-6)
prep_in(happened-2, zone-7)

(ROOT
  (S
    (SBAR
      (S
        (VP (VBP Think)
          (PP (IN about)
            (NP (DT that) (JJ next) (NN time))))))
    (NP (PRP you))
    (VP (VBP go)
      (ADJP (JJ someplace))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (NNS guns))
          (VP (VBP are) (RB not)
            (VP (VBN allowed))))))
    (: ...)))

dep(go-7, Think-1)
det(time-5, that-3)
amod(time-5, next-4)
prep_about(Think-1, time-5)
nsubj(go-7, you-6)
root(ROOT-0, go-7)
acomp(go-7, someplace-8)
advmod(allowed-13, where-9)
nsubjpass(allowed-13, guns-10)
auxpass(allowed-13, are-11)
neg(allowed-13, not-12)
advcl(go-7, allowed-13)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP you))
      (VP (VBP go)
        (PP (IN on)
          (PP (TO to)
            (NP (NN state))))
        (SBAR (IN that)
          (S
            (NP (JJ many) (NNS people))
            (VP (VBP are) (RB not)
              (NP (NN expert) (NN marksmen)))))))
    (: ...)
    (S
      (NP (JJ private) (NNS citizens))
      (VP (VBP have)
        (VP (VBN been)
          (VP (VBN shown)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (JJR fewer) (NNS mistakes))
                  (PP (IN in)
                    (S
                      (VP
                        (VP (VBG identifying)
                          (NP (DT an) (NN assailant)))
                        (CC and)
                        (ADVP (RB then))
                        (VP (VBG hitting)
                          (VP (VBD said)
                            (NP (NN assailant))
                            (PP (IN than)
                              (NP (DT the) (NN police)))))))))))))))
    (. .)))

advmod(go-3, Then-1)
nsubj(go-3, you-2)
root(ROOT-0, go-3)
prep(go-3, on-4)
pcomp(on-4, to-5)
prep_to(on-4, state-6)
complm(marksmen-13, that-7)
amod(people-9, many-8)
nsubj(marksmen-13, people-9)
cop(marksmen-13, are-10)
neg(marksmen-13, not-11)
nn(marksmen-13, expert-12)
ccomp(go-3, marksmen-13)
amod(citizens-16, private-15)
nsubjpass(shown-19, citizens-16)
xsubj(make-21, citizens-16)
aux(shown-19, have-17)
auxpass(shown-19, been-18)
parataxis(go-3, shown-19)
aux(make-21, to-20)
xcomp(shown-19, make-21)
amod(mistakes-23, fewer-22)
dobj(make-21, mistakes-23)
prepc_in(make-21, identifying-25)
det(assailant-27, an-26)
dobj(identifying-25, assailant-27)
prepc_in(make-21, then-29)
advmod(identifying-25, then-29)
conj_and(identifying-25, then-29)
prepc_in(make-21, hitting-30)
conj_and(identifying-25, hitting-30)
dep(hitting-30, said-31)
dobj(said-31, assailant-32)
det(police-35, the-34)
prep_than(said-31, police-35)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBZ CLAIM)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN stress))
              (PP (IN of)
                (NP (NN shooting))))
            (VP (MD will)
              (VP (VB cause)
                (NP (DT a) (JJ private) (NN citizen))
                (S
                  (VP (TO to)
                    (VP (VB shoot)
                      (NP (DT the) (JJ wrong) (NN person)))))))))))
    (: ...)
    (CC and)
    (ADVP (RB yet))
    (S
      (NP (EX there))
      (VP (VBP are)
        (NP
          (NP
            (ADJP (RB very) (JJ few))
            (VBN documented) (NNS cases))
          (SBAR
            (WHADVP (WRB when))
            (S
              (VP (VBN compared)
                (PP (TO to)
                  (NP (JJ accidental) (NN police) (NNS shootings)))))))))
    (. .)))

nsubj(CLAIM-2, You-1)
root(ROOT-0, CLAIM-2)
complm(cause-9, that-3)
det(stress-5, the-4)
nsubj(cause-9, stress-5)
prep_of(stress-5, shooting-7)
aux(cause-9, will-8)
ccomp(CLAIM-2, cause-9)
det(citizen-12, a-10)
amod(citizen-12, private-11)
dobj(cause-9, citizen-12)
aux(shoot-14, to-13)
xcomp(cause-9, shoot-14)
det(person-17, the-15)
amod(person-17, wrong-16)
dobj(shoot-14, person-17)
advmod(CLAIM-2, yet-20)
conj_and(CLAIM-2, yet-20)
expl(are-22, there-21)
ccomp(CLAIM-2, are-22)
conj_and(CLAIM-2, are-22)
advmod(few-24, very-23)
amod(cases-26, few-24)
amod(cases-26, documented-25)
nsubj(are-22, cases-26)
advmod(cases-26, when-27)
amod(shootings-32, accidental-30)
nn(shootings-32, police-31)
prep_compared_to(cases-26, shootings-32)

(ROOT
  (S
    (S
      (NP (JJ http:\/\/www.policeone.com\/police\/products\/articles\/116587) (NNS \/))
      (VP (VBD http:\/\/www.actionamerica.org\/guns\/guns1.shtml)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP carry)
              (NP (NNP CCW)))))))
    (: ...)
    (S
      (S
        (NP (NN noone))
        (VP (VBZ knows)))
      (CC and)
      (S
        (NP
          (NP (DT the) (JJ last) (NN thing))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP am)
                (VP (VBG looking)
                  (PP (IN for)))))))
        (VP (VBZ is)
          (S
            (VP (TO to)
              (VP (VB get)
                (PP (IN into)
                  (NP (DT a) (NN gun) (NN fight)))))))))
    (. .)))

amod(\/-2, http:\/\/www.policeone.com\/police\/products\/articles\/116587-1)
nsubj(http:\/\/www.actionamerica.org\/guns\/guns1.shtml-3, \/-2)
root(ROOT-0, http:\/\/www.actionamerica.org\/guns\/guns1.shtml-3)
nsubj(carry-5, I-4)
ccomp(http:\/\/www.actionamerica.org\/guns\/guns1.shtml-3, carry-5)
dobj(carry-5, CCW-6)
nsubj(knows-9, noone-8)
parataxis(http:\/\/www.actionamerica.org\/guns\/guns1.shtml-3, knows-9)
det(thing-13, the-11)
amod(thing-13, last-12)
prep_for(looking-16, thing-13)
nsubj(is-18, thing-13)
xsubj(get-20, thing-13)
nsubj(looking-16, I-14)
aux(looking-16, am-15)
rcmod(thing-13, looking-16)
parataxis(http:\/\/www.actionamerica.org\/guns\/guns1.shtml-3, is-18)
conj_and(knows-9, is-18)
aux(get-20, to-19)
xcomp(is-18, get-20)
det(fight-24, a-22)
nn(fight-24, gun-23)
prep_into(get-20, fight-24)

(ROOT
  (S
    (NP
      (NP (DT Every) (JJ other) (NNP CCW) (NN holder))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP know)))))
    (VP (VBZ is)
      (PP (IN of)
        (NP (DT the) (JJ same) (NN mentality))))
    (. .)))

det(holder-4, Every-1)
amod(holder-4, other-2)
nn(holder-4, CCW-3)
dobj(know-6, holder-4)
nsubj(is-7, holder-4)
nsubj(know-6, I-5)
rcmod(holder-4, know-6)
root(ROOT-0, is-7)
det(mentality-11, the-9)
amod(mentality-11, same-10)
prep_of(is-7, mentality-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN watched)
              (PP
                (ADVP (RB way) (RB too))
                (RB much)
                (NP (NN TV) (PRP$ my) (NN friend))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(watched-5, you-3)
aux(watched-5, have-4)
ccomp(think-2, watched-5)
advmod(too-7, way-6)
prep(watched-5, too-7)
advmod(too-7, much-8)
nn(friend-11, TV-9)
poss(friend-11, my-10)
pobj(too-7, friend-11)

(ROOT
  (S
    (S
      (S
        (VP (VBG Owning)
          (CC and)
          (VBG carrying)
          (NP (DT a) (NN weapon))))
      (VP (VBZ is)
        (NP (DT a)
          (ADJP (RB very) (JJ big))
          (NN responsibility))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (VP (VBN taken)
          (ADVP (RB lightly))
          (PP (IN by)
            (NP
              (NP (DT any))
              (PP (IN of)
                (NP (PRP us)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP carry)))))))))
    (. .)))

csubj(responsibility-10, Owning-1)
conj_and(Owning-1, carrying-3)
csubj(responsibility-10, carrying-3)
det(weapon-5, a-4)
dobj(Owning-1, weapon-5)
cop(responsibility-10, is-6)
det(responsibility-10, a-7)
advmod(big-9, very-8)
amod(responsibility-10, big-9)
root(ROOT-0, responsibility-10)
nsubjpass(taken-15, it-12)
auxpass(taken-15, is-13)
neg(taken-15, not-14)
conj_and(responsibility-10, taken-15)
advmod(taken-15, lightly-16)
agent(taken-15, any-18)
nsubj(carry-22, any-18)
prep_of(any-18, us-20)
rcmod(any-18, carry-22)

