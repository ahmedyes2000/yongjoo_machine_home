(ROOT
  (S
    (NP
      (NP
        (QP (# #) (CD 1) (CD cause)))
      (PP (IN of)
        (NP
          (NP (NN death))
          (PP (IN for)
            (NP (NNS children))))))
    (VP (VBP are)
      (NP (NN motor) (NNS vehicles)))
    (. .)))

number(cause-3, #-1)
number(cause-3, 1-2)
nsubj(vehicles-10, cause-3)
prep_of(cause-3, death-5)
prep_for(death-5, children-7)
cop(vehicles-10, are-8)
nn(vehicles-10, motor-9)
root(ROOT-0, vehicles-10)

(ROOT
  (SQ (NNP Should)
    (NP (PRP we))
    (VP (VB ban)
      (NP (NNS cars)))
    (. ?)))

dep(ban-3, Should-1)
nsubj(ban-3, we-2)
root(ROOT-0, ban-3)
dobj(ban-3, cars-4)

(ROOT
  (S
    (NP (# #) (CD 2))
    (VP (VBZ is)
      (VP (VBG drowning)))
    (. .)))

dep(2-2, #-1)
nsubj(drowning-4, 2-2)
aux(drowning-4, is-3)
root(ROOT-0, drowning-4)

(ROOT
  (SQ (NNP Should)
    (NP (PRP we))
    (VP (VB be)
      (VP (VBN required)
        (S
          (VP (TO to)
            (VP (VB watch)
              (NP
                (NP
                  (NP (NN everything))
                  (NP (PRP$ our) (NNS kids) (NN ingest))
                  (, ,)
                  (NP (DT every) (NN minute))
                  (, ,)
                  (PP (IN of)
                    (NP (DT every) (NN day)))
                  (, ,))
                (ADVP (RB everywhere))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (MD may)
                      (VP (VB go)))))))))))
    (. ?)))

dep(required-4, Should-1)
nsubjpass(required-4, we-2)
auxpass(required-4, be-3)
root(ROOT-0, required-4)
aux(watch-6, to-5)
xcomp(required-4, watch-6)
dobj(watch-6, everything-7)
dobj(go-22, everything-7)
poss(ingest-10, our-8)
nn(ingest-10, kids-9)
dep(everything-7, ingest-10)
det(minute-13, every-12)
appos(everything-7, minute-13)
det(day-17, every-16)
prep_of(everything-7, day-17)
advmod(everything-7, everywhere-19)
nsubj(go-22, they-20)
aux(go-22, may-21)
rcmod(everything-7, go-22)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ
      (SBAR (IN about)
        (S
          (VP (VBG leaving)
            (NP (NNS guns))
            (ADVP (RB alone)))))
      (, ,)
      (WHNP (WDT which))
      (SQ
        (VP (VBZ is)
          (NP
            (NP (# #) (CD 12))
            (PP (IN on)
              (NP
                (NP (DT the) (NN list))
                (, ,)
                (SBAR (IN until)
                  (S
                    (NP (PRP you))
                    (VP (VBP 're)
                      (ADJP (JJ successful)
                        (PP (IN with)
                          (NP (PDT all) (DT those) (NNS others))))))))))))
      (. ?))))

advmod(12-10, How-1)
mark(leaving-3, about-2)
advcl(12-10, leaving-3)
dobj(leaving-3, guns-4)
advmod(leaving-3, alone-5)
dep(12-10, which-7)
cop(12-10, is-8)
dep(12-10, #-9)
root(ROOT-0, 12-10)
det(list-13, the-12)
prep_on(12-10, list-13)
mark(successful-18, until-15)
nsubj(successful-18, you-16)
cop(successful-18, 're-17)
dep(list-13, successful-18)
predet(others-22, all-20)
det(others-22, those-21)
prep_with(successful-18, others-22)

(ROOT
  (SQ (NNP Should)
    (NP (PRP we))
    (VP (VB ban)
      (NP (VBG swimming) (NNS pools)))
    (. ?)))

dep(ban-3, Should-1)
nsubj(ban-3, we-2)
root(ROOT-0, ban-3)
amod(pools-5, swimming-4)
dobj(ban-3, pools-5)

(ROOT
  (S
    (VP (VBG Going)
      (PP (TO to)
        (NP (DT the) (NN beach))))
    (. ?)))

root(ROOT-0, Going-1)
det(beach-4, the-3)
prep_to(Going-1, beach-4)

(ROOT
  (S
    (NP (# #) (CD 3))
    (VP (VBZ is)
      (VP (VBG fires\/burning)))
    (. .)))

dep(3-2, #-1)
nsubj(fires\/burning-4, 3-2)
aux(fires\/burning-4, is-3)
root(ROOT-0, fires\/burning-4)

(ROOT
  (SQ (NNP Should)
    (NP (PRP we))
    (VP (VB ban)
      (NP (NN fire)))
    (. ?)))

dep(ban-3, Should-1)
nsubj(ban-3, we-2)
root(ROOT-0, ban-3)
dobj(ban-3, fire-4)

(ROOT
  (FRAG
    (NP (NN Smoking))
    (. ?)))

root(ROOT-0, Smoking-1)

(ROOT
  (SQ
    (VP (VB Defective)
      (NP (NNS heaters)))
    (. ?)))

root(ROOT-0, Defective-1)
dobj(Defective-1, heaters-2)

(ROOT
  (NP (NNS Fireplaces) (. ?)))

root(ROOT-0, Fireplaces-1)

(ROOT
  (S
    (NP (# #) (CD 4))
    (VP (VBZ is)
      (ADJP (JJ suffocation)))
    (. .)))

dep(4-2, #-1)
nsubj(suffocation-4, 4-2)
cop(suffocation-4, is-3)
root(ROOT-0, suffocation-4)

(ROOT
  (SQ (NNP Should)
    (NP (PRP we))
    (VP (VB strap)
      (PP (IN on)
        (NP (NN scuba) (NNS tanks)))
      (PP (TO to)
        (NP (DT all) (NNS children))))
    (. ?)))

dep(strap-3, Should-1)
nsubj(strap-3, we-2)
root(ROOT-0, strap-3)
nn(tanks-6, scuba-5)
prep_on(strap-3, tanks-6)
det(children-9, all-8)
prep_to(strap-3, children-9)

(ROOT
  (S
    (NP (# #) (CD 9))
    (VP (VBZ is)
      (NP
        (NP (NN death))
        (PP (IN from)
          (NP (VBG falling)))))
    (. .)))

dep(9-2, #-1)
nsubj(death-4, 9-2)
cop(death-4, is-3)
root(ROOT-0, death-4)
prep_from(death-4, falling-6)

(ROOT
  (SQ (NNP Should)
    (NP (PRP we))
    (VP (VB make)
      (S
        (NP (PRP$ our) (NNS kids))
        (VP (VB wear)
          (NP (NN nerf) (NNS suits))
          (PP (IN from)
            (NP
              (NP (NN head))
              (PP (TO to)
                (NP (NN toe))))))))
    (. ?)))

dep(make-3, Should-1)
nsubj(make-3, we-2)
root(ROOT-0, make-3)
poss(kids-5, our-4)
nsubj(wear-6, kids-5)
ccomp(make-3, wear-6)
nn(suits-8, nerf-7)
dobj(wear-6, suits-8)
prep_from(wear-6, head-10)
prep_to(head-10, toe-12)

(ROOT
  (S
    (NP (# #) (CD 11))
    (VP (VBZ is)
      (NP (NN poisoning)))
    (. .)))

dep(11-2, #-1)
nsubj(poisoning-4, 11-2)
cop(poisoning-4, is-3)
root(ROOT-0, poisoning-4)

