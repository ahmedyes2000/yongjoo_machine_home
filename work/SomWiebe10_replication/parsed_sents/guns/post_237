(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP
              (NP (DT the) (JJ last) (NN line))
              (PP (IN of)
                (NP (NN defense))))))))
    (. .)))

nsubj('s-3, That-2)
root(ROOT-0, 's-3)
advmod(line-9, why-4)
nsubj(line-9, it-5)
cop(line-9, 's-6)
det(line-9, the-7)
amod(line-9, last-8)
advcl('s-3, line-9)
prep_of(line-9, defense-11)

(ROOT
  (S ('' '')
    (NP (DT That))
    (VP (VBZ 's)
      (ADVP (RB exactly))
      (NP (PRP$ my) (NN point)))
    (. .)))

nsubj(point-6, That-2)
cop(point-6, 's-3)
advmod(point-6, exactly-4)
poss(point-6, my-5)
root(ROOT-0, point-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN part))
        (PP (IN of)
          (NP (NN safety)))))
    (. .)))

nsubj(part-4, That-1)
cop(part-4, is-2)
det(part-4, a-3)
root(ROOT-0, part-4)
prep_of(part-4, safety-6)

(ROOT
  (S
    (NP (DT A) (NN firearm))
    (VP
      (VP (VBZ is))
      (CC and)
      (VP (MD should)
        (VP (VB be)
          (NP
            (NP (PRP$ your) (JJ last) (NN line))
            (PP (IN of)
              (NP (NN defense)))))))
    (. .)))

det(firearm-2, A-1)
nsubj(is-3, firearm-2)
root(ROOT-0, is-3)
aux(line-9, should-5)
cop(line-9, be-6)
poss(line-9, your-7)
amod(line-9, last-8)
conj_and(is-3, line-9)
prep_of(line-9, defense-11)

(ROOT
  (S
    (S
      (VP (VB Say)
        (S
          (S
            (S
              (NP (PRP you))
              (VP (VBP have)
                (NP (DT an) (NN alarm))))
            (, ,)
            (CC and)
            (S
              (NP (PRP they))
              (VP (VBP get)
                (PRT (RP through))
                (PP (IN without)
                  (S
                    (VP (VBG tripping)
                      (NP (PRP it)))))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (ADVP (RB really))
                    (VP (VBZ is) (RB n't)
                      (ADJP (RB as) (JJ hard))
                      (SBAR (IN as)
                        (S
                          (NP (PRP it))
                          (VP (VBZ sounds))))))))))
          (, ,)
          (S
            (NP (DT the) (NN dog))
            (VP (VBZ starts)
              (S
                (VP (VBG barking)))))
          (, ,) (RB so)
          (S
            (NP (PRP they))
            (VP (VBP shoot)
              (NP (PRP it)))))))
    (, ,) (IN so)
    (S
      (NP (PRP you))
      (VP (VB pick)
        (PRT (RP up))
        (NP (DT the) (NN phone))
        (S
          (VP (TO to)
            (VP (VB dial)
              (NP (CD 9-11)))))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB find)
              (SBAR (IN that)
                (S
                  (NP (PRP they))
                  (VP (VBP 've)
                    (VP (VBN cut)
                      (NP (DT the) (NN phone) (NN line)))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB now))
      (NP (PRP you))
      (VP (VBP 're)
        (ADVP (RB up) (RB there))
        (PP (IN with)
          (NP
            (NP (DT no) (NN way)
              (S
                (VP (TO to)
                  (VP (VB defend)
                    (NP (PRP yourself))))))
            (CC and)
            (NP
              (NP (DT the) (NN knowledge))
              (SBAR (IN that)
                (S
                  (NP (NN someone))
                  (ADVP (RB down) (RB there))
                  (VP (VBZ has)
                    (NP (DT a) (NN gun))))))))))
    (. .)))

root(ROOT-0, Say-1)
nsubj(have-3, you-2)
dep(Say-1, have-3)
det(alarm-5, an-4)
dobj(have-3, alarm-5)
nsubj(get-9, they-8)
dep(Say-1, get-9)
conj_and(have-3, get-9)
prt(get-9, through-10)
prepc_without(get-9, tripping-12)
dobj(tripping-12, it-13)
nsubj(hard-20, which-15)
advmod(hard-20, really-16)
cop(hard-20, is-17)
neg(hard-20, n't-18)
advmod(hard-20, as-19)
ccomp(get-9, hard-20)
mark(sounds-23, as-21)
nsubj(sounds-23, it-22)
advcl(hard-20, sounds-23)
det(dog-26, the-25)
nsubj(starts-27, dog-26)
ccomp(have-3, starts-27)
xcomp(starts-27, barking-28)
advmod(have-3, so-30)
nsubj(shoot-32, they-31)
dep(have-3, shoot-32)
dobj(shoot-32, it-33)
dep(Say-1, so-35)
nsubj(pick-37, you-36)
xsubj(find-46, you-36)
ccomp(Say-1, pick-37)
prt(pick-37, up-38)
det(phone-40, the-39)
dobj(pick-37, phone-40)
aux(dial-42, to-41)
xcomp(pick-37, dial-42)
dobj(dial-42, 9-11-43)
aux(find-46, to-45)
xcomp(pick-37, find-46)
complm(cut-50, that-47)
nsubj(cut-50, they-48)
aux(cut-50, 've-49)
ccomp(find-46, cut-50)
det(line-53, the-51)
nn(line-53, phone-52)
dobj(cut-50, line-53)
advmod('re-58, now-56)
nsubj('re-58, you-57)
conj_and(Say-1, 're-58)
advmod(there-60, up-59)
advmod('re-58, there-60)
det(way-63, no-62)
prep_with('re-58, way-63)
aux(defend-65, to-64)
infmod(way-63, defend-65)
dobj(defend-65, yourself-66)
det(knowledge-69, the-68)
prep_with('re-58, knowledge-69)
conj_and(way-63, knowledge-69)
complm(has-74, that-70)
nsubj(has-74, someone-71)
advmod(there-73, down-72)
advmod(has-74, there-73)
dep(knowledge-69, has-74)
det(gun-76, a-75)
dobj(has-74, gun-76)

(ROOT
  (S
    (NP (DT That) (NN dog) (NN barking))
    (VP (MD would)
      (VP (VB have)
        (VP
          (VP (VBN been)
            (ADJP (JJ enough)
              (S
                (VP (TO to)
                  (VP (VB alert)
                    (NP (PRP you))
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN presence))
                        (PP (IN of)
                          (NP (DT an) (NN intruder))))))))))
          (, ,)
          (VP (VBN allowed)
            (S
              (NP (PRP you))
              (VP (TO to)
                (VP (VB open)
                  (NP
                    (NP (PRP$ your)
                      (ADJP (JJ double) (VBN locked))
                      (NNS safes))
                    (CC and)
                    (NP
                      (NP (NNS closets))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (S
                            (X (TO to))
                            (NP (PRP me))
                            (VP (VBZ seems)
                              (ADJP
                                (NP (DT a) (RB bit))
                                (JJ excessive))))
                          (, ,)
                          (CC but)
                          (S
                            (NP (PRP I))
                            (VP (VBZ digress)))))
                      (, ,)))))))
          (CC and)
          (VP (VBN taken)
            (NP
              (NP (NN care))
              (PP (IN of)
                (NP (DT the) (NN problem))))))))
    (. .)))

det(barking-3, That-1)
nn(barking-3, dog-2)
nsubj(enough-7, barking-3)
nsubj(allowed-18, barking-3)
nsubj(taken-42, barking-3)
aux(enough-7, would-4)
aux(enough-7, have-5)
cop(enough-7, been-6)
root(ROOT-0, enough-7)
aux(alert-9, to-8)
xcomp(enough-7, alert-9)
dobj(alert-9, you-10)
det(presence-13, the-12)
prep_to(alert-9, presence-13)
det(intruder-16, an-15)
prep_of(presence-13, intruder-16)
conj_and(enough-7, allowed-18)
nsubj(open-21, you-19)
aux(open-21, to-20)
xcomp(allowed-18, open-21)
poss(safes-25, your-22)
dep(locked-24, double-23)
amod(safes-25, locked-24)
dobj(open-21, safes-25)
dobj(open-21, closets-27)
conj_and(safes-25, closets-27)
dep(excessive-35, closets-27)
dep(excessive-35, to-30)
nsubj(excessive-35, me-31)
cop(excessive-35, seems-32)
det(bit-34, a-33)
npadvmod(excessive-35, bit-34)
rcmod(closets-27, excessive-35)
nsubj(digress-39, I-38)
rcmod(closets-27, digress-39)
conj_but(excessive-35, digress-39)
conj_and(enough-7, taken-42)
dobj(taken-42, care-43)
det(problem-46, the-45)
prep_of(care-43, problem-46)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (NN someone))
          (VP (VBZ is)
            (ADJP (JJ good) (RB enough)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (PP (IN past)
                      (NP (DT the) (NN dog))))))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (JJ screwed) (, ,) (JJ plain)
          (CC and)
          (JJ simple))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (SBAR (RB even)
            (S
              (NP (DT a) (NN ninja))
              (VP (MD could)
                (VP (VB get)
                  (NP (JJ past) (DT the) (NN dog))
                  (PP (IN without)
                    (S
                      (VP (VBG making)
                        (NP (DT some) (NN noise))))))))))))
    (. .)))

mark(good-4, If-1)
nsubj(good-4, someone-2)
cop(good-4, is-3)
advcl(screwed-14, good-4)
advmod(good-4, enough-5)
aux(get-7, to-6)
xcomp(good-4, get-7)
det(dog-10, the-9)
prep_past(get-7, dog-10)
nsubj(screwed-14, you-12)
nsubj(plain-16, you-12)
nsubj(simple-18, you-12)
cop(screwed-14, are-13)
root(ROOT-0, screwed-14)
conj_and(screwed-14, plain-16)
conj_and(screwed-14, simple-18)
nsubj(think-24, I-21)
aux(think-24, do-22)
neg(think-24, n't-23)
conj_but(screwed-14, think-24)
advmod(get-29, even-25)
det(ninja-27, a-26)
nsubj(get-29, ninja-27)
aux(get-29, could-28)
ccomp(think-24, get-29)
amod(dog-32, past-30)
det(dog-32, the-31)
dobj(get-29, dog-32)
prepc_without(get-29, making-34)
det(noise-36, some-35)
dobj(making-34, noise-36)

(ROOT
  (S
    (PP (IN Like)
      (S
        (NP (PRP I))
        (VP (VBD said)
          (ADVP (RB before)))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (ADJP
        (ADJP (NN nothing) (JJ wrong))
        (PP (IN with)
          (S
            (VP (VBG having)
              (NP
                (NP (DT an) (NN alarm))
                (, ,)
                (NP (DT a) (NN dog))
                (, ,)
                (CC and)
                (NP (DT a) (NN gun))))))))
    (. .)))

nsubj(said-3, I-2)
prepc_like(is-7, said-3)
advmod(said-3, before-4)
expl(is-7, there-6)
root(ROOT-0, is-7)
dep(wrong-9, nothing-8)
acomp(is-7, wrong-9)
prepc_with(wrong-9, having-11)
det(alarm-13, an-12)
dobj(having-11, alarm-13)
det(dog-16, a-15)
dobj(having-11, dog-16)
conj_and(alarm-13, dog-16)
det(gun-20, a-19)
dobj(having-11, gun-20)
conj_and(alarm-13, gun-20)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN mentioned)
        (NP (PRP yourself))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBZ hunt))))))
    (. .)))

advmod(mentioned-5, Also-1)
nsubj(mentioned-5, you-3)
aux(mentioned-5, have-4)
root(ROOT-0, mentioned-5)
dobj(mentioned-5, yourself-6)
complm(hunt-9, that-7)
nsubj(hunt-9, you-8)
ccomp(mentioned-5, hunt-9)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN measure))
        (PP (IN of)
          (NP (NN safety)))))
    (. .)))

nsubj(measure-4, That-1)
cop(measure-4, is-2)
det(measure-4, a-3)
root(ROOT-0, measure-4)
prep_of(measure-4, safety-6)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (S
          (NP (DT a) (JJ natural) (NN disaster))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB strike))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP you))
          (VP (VBD were)
            (VP (VBN placed)
              (PP (IN in)
                (NP (DT a) (NNP New) (NNP Orleans) (NN type) (NN situation))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (S
        (NP (DT the) (NNS tools))
        (VP (TO to)
          (VP
            (VP (VB acquire)
              (NP (NN food)))
            (CC and)
            (VP (VB defend)
              (NP (PRP$ your) (NN home))
              (PP (IN from)
                (NP (NNS looters))))))))
    (. .)))

mark(were-5, If-1)
det(disaster-4, a-2)
amod(disaster-4, natural-3)
nsubj(were-5, disaster-4)
xsubj(strike-7, disaster-4)
advcl(have-21, were-5)
aux(strike-7, to-6)
xcomp(were-5, strike-7)
nsubjpass(placed-12, you-10)
auxpass(placed-12, were-11)
conj_and(were-5, placed-12)
advcl(have-21, placed-12)
det(situation-18, a-14)
nn(situation-18, New-15)
nn(situation-18, Orleans-16)
nn(situation-18, type-17)
prep_in(placed-12, situation-18)
nsubj(have-21, you-20)
root(ROOT-0, have-21)
det(tools-23, the-22)
nsubj(acquire-25, tools-23)
nsubj(defend-28, tools-23)
aux(acquire-25, to-24)
ccomp(have-21, acquire-25)
xcomp(have-21, acquire-25)
dobj(acquire-25, food-26)
ccomp(have-21, defend-28)
xcomp(have-21, defend-28)
conj_and(acquire-25, defend-28)
poss(home-30, your-29)
dobj(defend-28, home-30)
prep_from(defend-28, looters-32)

