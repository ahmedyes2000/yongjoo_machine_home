(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADVP (RB currently))
      (VP
        (ADVP (RB almost)
          (NP
            (QP (CD 7) (CD billion))
            (NNS people)))
        (VBG living)
        (PP (IN on)
          (NP (NNP Earth)))))
    (. .)))

expl(living-8, There-1)
aux(living-8, are-2)
advmod(living-8, currently-3)
advmod(living-8, almost-4)
number(billion-6, 7-5)
num(people-7, billion-6)
pobj(almost-4, people-7)
root(ROOT-0, living-8)
prep_on(living-8, Earth-10)

(ROOT
  (S
    (NP (NNS Experts))
    (VP (VBP suggest)
      (NP
        (NP
          (QP (DT another) (CD billion)))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ next) (NN decade))
            (CC or)
            (NP (CD two))))))
    (. .)))

nsubj(suggest-2, Experts-1)
root(ROOT-0, suggest-2)
quantmod(billion-4, another-3)
dobj(suggest-2, billion-4)
det(decade-8, the-6)
amod(decade-8, next-7)
prep_in(billion-4, decade-8)
prep_in(billion-4, two-10)
conj_or(decade-8, two-10)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (JJ only) (NN thing))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ makes)
            (NP (NN life))
            (PP (IN worth)
              (NP (NN living)))))))
    (VP (VBZ is)
      (NP (NN freedom)))
    (. .)))

cc(freedom-11, But-1)
det(thing-4, the-2)
amod(thing-4, only-3)
nsubj(makes-6, thing-4)
nsubj(freedom-11, thing-4)
rcmod(thing-4, makes-6)
dobj(makes-6, life-7)
prep_worth(makes-6, living-9)
cop(freedom-11, is-10)
root(ROOT-0, freedom-11)

(ROOT
  (S
    (VP (VB Im)
      (S
        (VP (VBG saying)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (JJ only) (NN freedom))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ guarantees)
                      (NP (PRP$ my) (JJ other) (NNS freedoms))))))
              (VP (VBZ is)
                (NP (PRP$ my) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB bear)
                        (NP (NNS arms))))))))))))
    (. .)))

root(ROOT-0, Im-1)
xcomp(Im-1, saying-2)
complm(right-14, that-3)
det(freedom-6, the-4)
amod(freedom-6, only-5)
nsubj(guarantees-8, freedom-6)
nsubj(right-14, freedom-6)
rcmod(freedom-6, guarantees-8)
poss(freedoms-11, my-9)
amod(freedoms-11, other-10)
dobj(guarantees-8, freedoms-11)
cop(right-14, is-12)
poss(right-14, my-13)
ccomp(saying-2, right-14)
aux(bear-16, to-15)
infmod(right-14, bear-16)
dobj(bear-16, arms-17)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBZ is)
        (ADVP (RB live))
        (ADJP (JJ free)))
      (CC or)
      (VP (VBP die)
        (NP (NNP IMO))))
    (. .)))

nsubj(free-4, It-1)
nsubj(die-6, It-1)
cop(free-4, is-2)
advmod(free-4, live-3)
root(ROOT-0, free-4)
conj_or(free-4, die-6)
dobj(die-6, IMO-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP
        (NP (DT a) (NN citizen))
        (RB not))
      (NP (DT a) (NN subject)))
    (. .)))

nsubj(subject-7, I-1)
cop(subject-7, am-2)
det(citizen-4, a-3)
npadvmod(not-5, citizen-4)
neg(subject-7, not-5)
det(subject-7, a-6)
root(ROOT-0, subject-7)

(ROOT
  (SQ (NNP Does)
    (NP (PRP$ your))
    (VP (VB privilege) (, ,)
      (ADVP (RB not) (RB right))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB drive)
            (S
              (VP (VBG supercede)
                (NP (DT the) (NN right))
                (PP (TO to)
                  (NP
                    (NP (NN life))
                    (PP (IN of)
                      (NP (NNS others)))))))))))
    (. ?)))

dep(privilege-3, Does-1)
nsubj(privilege-3, your-2)
xsubj(drive-9, your-2)
root(ROOT-0, privilege-3)
dep(right-6, not-5)
advmod(privilege-3, right-6)
aux(drive-9, to-8)
xcomp(privilege-3, drive-9)
xcomp(drive-9, supercede-10)
det(right-12, the-11)
dobj(supercede-10, right-12)
prep_to(supercede-10, life-14)
prep_of(life-14, others-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VB save)
          (NP
            (NP
              (QP (RB just) (PDT half)))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS people))
                (VP (VBN killed)
                  (PP (IN by)
                    (NP (NNS cars))))))))))
    (NP (PRP we))
    (VP (VBP save)
      (NP
        (NP (CD 3X))
        (ADJP (RB as) (JJ many))
        (SBAR (IN than)
          (FRAG
            (PP (IN by)
              (NP (NNS guns)))))))
    (. .)))

mark(save-3, If-1)
nsubj(save-3, we-2)
advcl(save-13, save-3)
quantmod(half-5, just-4)
dobj(save-3, half-5)
det(people-8, the-7)
prep_of(half-5, people-8)
partmod(people-8, killed-9)
agent(killed-9, cars-11)
nsubj(save-13, we-12)
root(ROOT-0, save-13)
dobj(save-13, 3X-14)
advmod(many-16, as-15)
amod(3X-14, many-16)
mark(by-18, than-17)
dep(3X-14, by-18)
pobj(by-18, guns-19)

(ROOT
  (S
    (ADVP (RB Yes))
    (NP (PRP I))
    (VP (VBP read)
      (NP (DT the) (NN ws)))
    (. .)))

advmod(read-3, Yes-1)
nsubj(read-3, I-2)
root(ROOT-0, read-3)
det(ws-5, the-4)
dobj(read-3, ws-5)

(ROOT
  (S (`` ``)
    (VP (VBP are)
      (ADVP (RB often) ('' ''))
      (VP (VBG =)
        (ADVP
          (ADVP (RB possibly))
          (CC or)
          (ADVP
            (ADVP (RB maybe) (RB but))
            (RB not) (RB certainly)))))
    (. .)))

aux(=-5, are-2)
advmod(=-5, often-3)
root(ROOT-0, =-5)
advmod(=-5, possibly-6)
advmod(but-9, maybe-8)
advmod(=-5, but-9)
conj_or(possibly-6, but-9)
dep(but-9, not-10)
advmod(but-9, certainly-11)

(ROOT
  (S
    (S
      (NP (DT The) (NN website))
      (VP (VBD seemed)
        (ADJP (JJ fine))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBD were)
              (VP (VBG using)
                (S
                  (NP (PRP it))
                  (VP (TO to)
                    (VP (VB make)
                      (NP (PRP$ your) (NN point)))))))))))
    (CC but)
    (S
      (ADVP (RB now))
      (ADVP (RB somehow))
      (NP (PRP it))
      (VP (VBZ falls)
        (ADJP (JJ short))))
    (. ?)))

det(website-2, The-1)
nsubj(fine-4, website-2)
cop(fine-4, seemed-3)
root(ROOT-0, fine-4)
advmod(using-8, when-5)
nsubj(using-8, you-6)
aux(using-8, were-7)
advcl(fine-4, using-8)
nsubj(make-11, it-9)
aux(make-11, to-10)
xcomp(using-8, make-11)
poss(point-13, your-12)
dobj(make-11, point-13)
advmod(falls-18, now-15)
advmod(falls-18, somehow-16)
nsubj(falls-18, it-17)
conj_but(fine-4, falls-18)
acomp(falls-18, short-19)

(ROOT
  (FRAG
    (PP (RB Even) (IN with)
      (NP
        (NP (DT a)
          (ADJP (CD 5) (NN %))
          (NN error))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB still))
            (VP (VBZ puts)
              (NP
                (NP (NNP Auzzies))
                (PP (IN in)
                  (NP
                    (NP (JJ third))
                    (CC and)
                    (NP (DT the) (NNP U.S.) (NN waaay)))))
              (ADVP (RB down)
                (NP (DT the) (NN list))
                (PP (IN at)
                  (NP (# #) (CD 15)))))))))
    (. .)))

advmod(with-2, Even-1)
root(ROOT-0, with-2)
det(error-6, a-3)
number(%-5, 5-4)
amod(error-6, %-5)
pobj(with-2, error-6)
nsubj(puts-9, error-6)
advmod(puts-9, still-8)
rcmod(error-6, puts-9)
dobj(puts-9, Auzzies-10)
prep_in(Auzzies-10, third-12)
det(waaay-16, the-14)
nn(waaay-16, U.S.-15)
prep_in(Auzzies-10, waaay-16)
conj_and(third-12, waaay-16)
advmod(puts-9, down-17)
det(list-19, the-18)
pobj(down-17, list-19)
dep(15-22, #-21)
prep_at(down-17, 15-22)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB think)
      (SBAR
        (S
          (NP (DT the) (NN error))
          (VP (VBZ is)
            (NP (CD 50) (NN %))))))
    (. ?)))

aux(think-3, Do-1)
nsubj(think-3, you-2)
root(ROOT-0, think-3)
det(error-5, the-4)
nsubj(%-8, error-5)
cop(%-8, is-6)
num(%-8, 50-7)
ccomp(think-3, %-8)

(ROOT
  (S
    (NP (DT The) (JJ bottom) (NN line))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP (NNP America))))))
    (. .)))

det(line-3, The-1)
amod(line-3, bottom-2)
nsubj(is-4, line-3)
root(ROOT-0, is-4)
complm(America-8, that-5)
nsubj(America-8, this-6)
cop(America-8, is-7)
ccomp(is-4, America-8)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADJP (JJ unsustainable)))
    (. .)))

nsubj(unsustainable-3, This-1)
cop(unsustainable-3, is-2)
root(ROOT-0, unsustainable-3)

(ROOT
  (S (CC And)
    (NP (PRP we))
    (VP (VBP hold)
      (S
        (NP (PRP$ our) (NNS freedoms))
        (ADJP (RB dear))))
    (. .)))

cc(hold-3, And-1)
nsubj(hold-3, we-2)
root(ROOT-0, hold-3)
poss(freedoms-5, our-4)
nsubj(dear-6, freedoms-5)
xcomp(hold-3, dear-6)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD would)
              (VP (VB seek)
                (S
                  (VP (TO to)
                    (ADVP (RB constantly))
                    (VP (VB whiddle)
                      (ADVP (RB away)
                        (PP (IN at)
                          (NP (PRP$ our) (NNS freedoms))))
                      (, ,)
                      (ADVP (RB especially))
                      (ADVP (RB recently)))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, those-3)
nsubj(seek-6, those-3)
aux(seek-6, would-5)
rcmod(those-3, seek-6)
aux(whiddle-9, to-7)
advmod(whiddle-9, constantly-8)
xcomp(seek-6, whiddle-9)
advmod(whiddle-9, away-10)
poss(freedoms-13, our-12)
prep_at(away-10, freedoms-13)
advmod(whiddle-9, especially-15)
advmod(whiddle-9, recently-16)

(ROOT
  (S
    (VP (VB See)
      (NP (NNP Patriot) (NNP Act)))
    (. .)))

root(ROOT-0, See-1)
nn(Act-3, Patriot-2)
dobj(See-1, Act-3)

(ROOT
  (S (CC But)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (DT those))
        (PP (IN of)
          (NP (PRP us)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP choose)
              (NP (NN liberty))
              (PP (IN over)
                (NP
                  (NP (DT this) (NN illusion))
                  (PP (IN of)
                    (NP (NN safety))))))))))
    (. .)))

cc(are-3, But-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
nsubj(are-3, those-4)
nsubj(choose-8, those-4)
prep_of(those-4, us-6)
rcmod(those-4, choose-8)
dobj(choose-8, liberty-9)
det(illusion-12, this-11)
prep_over(choose-8, illusion-12)
prep_of(illusion-12, safety-14)

(ROOT
  (S (CC And)
    (NP (NNP Obama))
    (VP (VBZ brings)
      (NP
        (NP (JJ broken) (NNS promises))
        (CC and)
        (NP (JJR more) (NN war))))
    (. .)))

cc(brings-3, And-1)
nsubj(brings-3, Obama-2)
root(ROOT-0, brings-3)
amod(promises-5, broken-4)
dobj(brings-3, promises-5)
amod(war-8, more-7)
dobj(brings-3, war-8)
conj_and(promises-5, war-8)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WDT Which))
      (S
        (NP (PRP I))
        (VP (VBP oppose))))
    (. !)))

dobj(oppose-3, Which-1)
nsubj(oppose-3, I-2)
root(ROOT-0, oppose-3)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB get)
          (PRT (RP back))
          (PP (IN on)
            (NP (NN topic))))))
    (: ...)
    (S
      (S
        (NP (PRP you))
        (VP (VBP live)
          (PP (IN in)
            (NP (NNP Australia)))))
      (CC and)
      (S
        (S
          (NP (PRP you))
          (VP (MD can)
            (VP (VB make)
              (NP (PRP$ your) (JJ own) (NN policy))
              (ADVP (RB there)))))
        (CC and)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP choose)
                (S
                  (VP (TO to)
                    (VP (VB come)
                      (ADVP (RB here))))))))
          (ADVP (RB then))
          (NP (PRP I))
          (VP
            (VP (VBP welcome)
              (NP (PRP you))
              (PP (IN with)
                (NP (JJ open) (NNS arms))))
            (CC and)
            (VP (MD would)
              (VP (VB die)
                (S
                  (VP (TO to)
                    (VP (VB protect)
                      (NP
                        (NP (PRP you))
                        (CC and)
                        (NP (PRP$ your) (NN opinion))))))))))))
    (. .)))

aux(get-2, To-1)
root(ROOT-0, get-2)
prt(get-2, back-3)
prep_on(get-2, topic-5)
nsubj(live-8, you-7)
parataxis(get-2, live-8)
prep_in(live-8, Australia-10)
nsubj(make-14, you-12)
aux(make-14, can-13)
parataxis(get-2, make-14)
conj_and(live-8, make-14)
poss(policy-17, your-15)
amod(policy-17, own-16)
dobj(make-14, policy-17)
advmod(make-14, there-18)
mark(choose-22, if-20)
nsubj(choose-22, you-21)
xsubj(come-24, you-21)
advcl(welcome-28, choose-22)
aux(come-24, to-23)
xcomp(choose-22, come-24)
advmod(come-24, here-25)
advmod(welcome-28, then-26)
nsubj(welcome-28, I-27)
nsubj(die-35, I-27)
xsubj(protect-37, I-27)
conj_and(live-8, welcome-28)
conj_and(make-14, welcome-28)
dobj(welcome-28, you-29)
amod(arms-32, open-31)
prep_with(welcome-28, arms-32)
aux(die-35, would-34)
conj_and(make-14, die-35)
conj_and(welcome-28, die-35)
aux(protect-37, to-36)
xcomp(die-35, protect-37)
dobj(protect-37, you-38)
poss(opinion-41, your-40)
dobj(protect-37, opinion-41)
conj_and(you-38, opinion-41)

(ROOT
  (S (CC But)
    (NP
      (NP (NNP America) (POS 's))
      (NN voice))
    (VP (VBZ is)
      (ADJP (JJ clear)
        (PP (IN in)
          (NP
            (NP (NN support))
            (PP (IN of)
              (NP (DT the) (NNP Second) (NNP Amendment)))))))
    (. .)))

cc(clear-6, But-1)
poss(voice-4, America-2)
nsubj(clear-6, voice-4)
cop(clear-6, is-5)
root(ROOT-0, clear-6)
prep_in(clear-6, support-8)
det(Amendment-12, the-10)
nn(Amendment-12, Second-11)
prep_of(support-8, Amendment-12)

(ROOT
  (S (IN So)
    (NP
      (NP
        (NP (RB yes) (PRP$ my) (NN freedom))
        (CC and)
        (NP (NN security)))
      (CC and)
      (NP
        (NP (DT that))
        (PP (IN of)
          (NP (PRP$ my) (NN family)
            (CC and)
            (NNS friends)))))
    (VP (VBZ is)
      (PP (IN worth)
        (NP (DT a) (JJ few) (CD thousand) (NNS souls))))
    (. .)))

dep(is-14, So-1)
advmod(freedom-4, yes-2)
poss(freedom-4, my-3)
nsubj(is-14, freedom-4)
conj_and(freedom-4, security-6)
nsubj(is-14, security-6)
conj_and(freedom-4, that-8)
nsubj(is-14, that-8)
poss(family-11, my-10)
prep_of(that-8, family-11)
prep_of(that-8, friends-13)
conj_and(family-11, friends-13)
root(ROOT-0, is-14)
det(souls-19, a-16)
amod(souls-19, few-17)
num(souls-19, thousand-18)
prep_worth(is-14, souls-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (NN survival))
        (PP (IN of)
          (NP
            (NP (DT the) (JJS fittest))
            (PP (VBG according)
              (PP (TO to)
                (NP
                  (NP (DT the) (NNS rules))
                  (PP (IN of)
                    (NP (NN nature))))))))))
    (. .)))

nsubj(survival-3, It-1)
cop(survival-3, is-2)
root(ROOT-0, survival-3)
det(fittest-6, the-5)
prep_of(survival-3, fittest-6)
prepc_according_to(fittest-6, to-8)
det(rules-10, the-9)
pobj(fittest-6, rules-10)
prep_of(rules-10, nature-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP claim)
      (ADJP (JJ uncommitted)
        (SBAR (IN so)
          (S
            (NP (PRP I))
            (VP (MD may)
              (ADVP (RB just))
              (VP
                (ADVP (RB actually))
                (VB try)
                (S
                  (VP (TO to)
                    (VP (VB convince)
                      (NP (PRP you))
                      (PP (IN for)
                        (NP (DT a) (NN minute))))))))))))
    (. .)))

nsubj(claim-2, You-1)
root(ROOT-0, claim-2)
acomp(claim-2, uncommitted-3)
mark(try-9, so-4)
nsubj(try-9, I-5)
xsubj(convince-11, I-5)
aux(try-9, may-6)
advmod(try-9, just-7)
advmod(try-9, actually-8)
ccomp(uncommitted-3, try-9)
aux(convince-11, to-10)
xcomp(try-9, convince-11)
dobj(convince-11, you-12)
det(minute-15, a-14)
prep_for(convince-11, minute-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG saying)
        (SBAR (IN that)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP$ your) (NN objective))
                (VP (VBD was)
                  (ADVP (RB simply))
                  (S
                    (VP (TO to)
                      (VP (VB save)
                        (NP (NNS lives))
                        (ADVP (RB then))))))))
            (NP (PRP you))
            (VP (MD would)
              (VP (VB be)
                (VP (VBG spending)
                  (NP (PRP$ your) (NN time) (NN lobbying))
                  (PP (IN against)
                    (NP (NNS autos)
                      (CC and)
                      (NNS doctors))))))))))
    (. .)))

nsubj(saying-3, I-1)
aux(saying-3, 'm-2)
root(ROOT-0, saying-3)
complm(spending-17, that-4)
mark(was-8, if-5)
poss(objective-7, your-6)
nsubj(was-8, objective-7)
xsubj(save-11, objective-7)
advcl(spending-17, was-8)
advmod(was-8, simply-9)
aux(save-11, to-10)
xcomp(was-8, save-11)
dobj(save-11, lives-12)
advmod(save-11, then-13)
nsubj(spending-17, you-14)
aux(spending-17, would-15)
aux(spending-17, be-16)
ccomp(saying-3, spending-17)
poss(lobbying-20, your-18)
nn(lobbying-20, time-19)
dobj(spending-17, lobbying-20)
prep_against(spending-17, autos-22)
prep_against(spending-17, doctors-24)
conj_and(autos-22, doctors-24)

(ROOT
  (S
    (S
      (VP (VB Look)
        (PP (IN at)
          (NP (PRP$ our) (JJ crude) (NN mortality) (NNS rates)))))
    (: :)
    (S
      (NP (NNS http:\/\/www.nationmaster.com\/graph\/mor_dea_rat_cru_per_1000_peo-crude-per-1-000-people) (NNP US)
        (CC and)
        (NNP AUS))
      (VP (VBP are)
        (ADJP (RB pretty) (JJ close))
        (ADVP (RB together))))
    (. .)))

root(ROOT-0, Look-1)
poss(rates-6, our-3)
amod(rates-6, crude-4)
nn(rates-6, mortality-5)
prep_at(Look-1, rates-6)
nn(US-9, http:\/\/www.nationmaster.com\/graph\/mor_dea_rat_cru_per_1000_peo-crude-per-1-000-people-8)
nsubj(close-14, US-9)
conj_and(US-9, AUS-11)
nsubj(close-14, AUS-11)
cop(close-14, are-12)
advmod(close-14, pretty-13)
parataxis(Look-1, close-14)
advmod(close-14, together-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ fine)
        (PP (IN with)
          (NP (DT these) (NNS numbers)))))
    (. .)))

nsubj(fine-3, I-1)
cop(fine-3, am-2)
root(ROOT-0, fine-3)
det(numbers-6, these-5)
prep_with(fine-3, numbers-6)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADVP (RBR more) (IN than) (RB enough))
      (NP
        (NP (NNS people))
        (PP (IN in)
          (NP (DT the) (NN world)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
advmod(than-4, more-3)
advmod(are-2, than-4)
advmod(than-4, enough-5)
nsubj(are-2, people-6)
det(world-9, the-8)
prep_in(people-6, world-9)

(ROOT
  (S
    (NP (NNP Death))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN part))
        (PP (IN of)
          (NP (NN life)))))
    (. .)))

nsubj(part-4, Death-1)
cop(part-4, is-2)
det(part-4, a-3)
root(ROOT-0, part-4)
prep_of(part-4, life-6)

