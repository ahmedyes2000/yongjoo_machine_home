(ROOT
  (S
    (NP
      (NP (NNP First))
      (PP (IN of)
        (NP (DT all) (PRP$ its)
          (UCP
            (ADJP (RB not)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN constitution))
                  (ADVP (PRP itself)))))
            (, ,)
            (NP (PRP$ its)
              (NP
                (ADVP (RB simply))
                (DT an) (NN amendment)))
            (, ,))
          (NNS i))))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD should)
            (VP
              (VP (VB read)
                (PP (IN about)
                  (NP (WP what)))
                (NP
                  (NP (PRP$ your) (NN talking))
                  (PP (IN about)
                    (SBAR (IN before)
                      (S
                        (NP (PRP you))
                        (VP (VBP go)))))))
              (CC and)
              (VP
                (VP (VB time)
                  (PRT (RP up)))
                (CC and)
                (VP
                  (NP (NN argument))
                  (PP (IN on)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(think-17, First-1)
det(i-16, all-3)
predet(i-16, all-3)
poss(i-16, its-4)
amod(i-16, not-5)
det(constitution-8, the-7)
prep_in(not-5, constitution-8)
advmod(constitution-8, itself-9)
poss(amendment-14, its-11)
advmod(amendment-14, simply-12)
det(amendment-14, an-13)
dep(not-5, amendment-14)
prep_of(First-1, i-16)
root(ROOT-0, think-17)
nsubj(read-20, you-18)
nsubj(time-30, you-18)
aux(read-20, should-19)
ccomp(think-17, read-20)
prep_about(read-20, what-22)
poss(talking-24, your-23)
dobj(read-20, talking-24)
mark(go-28, before-26)
nsubj(go-28, you-27)
prepc_about(talking-24, go-28)
ccomp(think-17, time-30)
conj_and(read-20, time-30)
prt(time-30, up-31)
conj_and(read-20, argument-33)
conj_and(time-30, argument-33)
prep_on(argument-33, it-35)

(ROOT
  (S
    (ADVP (RB Here))
    (VP (VBZ is)
      (NP (DT the) (DT a)))
    (NP
      (NP (DT the) (JJ direct) (NN quoteA))
      (VP
        (ADVP (RB well))
        (VBN regulated)
        (SBAR
          (S
            (NP (NNP Militia))
            (, ,)
            (S
              (VP (VBG being)
                (ADJP (JJ necessary)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN security))
                      (PP (IN of)
                        (NP
                          (NP (DT a) (JJ free) (NN State))
                          (, ,)
                          (NP
                            (NP (DT the) (NN right))
                            (PP (IN of)
                              (NP (DT the) (NNS people))))))))
                  (S
                    (VP (TO to)
                      (VP (VB keep)
                        (CC and)
                        (VB bear)
                        (NP (NNS Arms))))))))
            (, ,)
            (VP (MD shall) (RB not)
              (VP (VB be)
                (VP (VBN infringed))))))))
    (. .)))

advmod(a-4, Here-1)
cop(a-4, is-2)
dep(a-4, the-3)
root(ROOT-0, a-4)
det(quoteA-7, the-5)
amod(quoteA-7, direct-6)
dep(a-4, quoteA-7)
advmod(regulated-9, well-8)
partmod(quoteA-7, regulated-9)
nsubjpass(infringed-36, Militia-10)
cop(necessary-13, being-12)
partmod(infringed-36, necessary-13)
det(security-16, the-15)
prep_to(necessary-13, security-16)
det(State-20, a-18)
amod(State-20, free-19)
prep_of(security-16, State-20)
det(right-23, the-22)
appos(State-20, right-23)
det(people-26, the-25)
prep_of(right-23, people-26)
aux(keep-28, to-27)
xcomp(necessary-13, keep-28)
xcomp(necessary-13, bear-30)
conj_and(keep-28, bear-30)
dobj(keep-28, Arms-31)
aux(infringed-36, shall-33)
neg(infringed-36, not-34)
auxpass(infringed-36, be-35)
ccomp(regulated-9, infringed-36)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN oder))
        (PP (IN for)
          (NP (DT the) (NN state)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ secure)))))))))
    (NP (PRP we))
    (VP
      (VP (MD can) (RB not)
        (VP (VB have)
          (NP
            (NP (JJ deadly) (NNS weapons))
            (VP (VBN used)
              (PP (IN for)
                (NP (NNS looks)))
              (SBAR (IN like)
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (NP
                      (NP (DT some) (JJ new) (NN type))
                      (PP (IN of)
                        (NP
                          (NP (JJ hot) (NNS wheels))
                          (VP (VBN made)
                            (PP (IN for)
                              (NP (NN fun))))))))))))))
      (CC and)
      (VP (VBZ looks)))
    (. .)))

prep_in(have-12, oder-2)
det(state-5, the-4)
prep_for(oder-2, state-5)
aux(secure-8, to-6)
cop(secure-8, be-7)
infmod(state-5, secure-8)
nsubj(have-12, we-9)
nsubj(looks-31, we-9)
aux(have-12, can-10)
neg(have-12, not-11)
root(ROOT-0, have-12)
amod(weapons-14, deadly-13)
dobj(have-12, weapons-14)
partmod(weapons-14, used-15)
prep_for(used-15, looks-17)
mark(type-23, like-18)
nsubj(type-23, they-19)
cop(type-23, are-20)
det(type-23, some-21)
amod(type-23, new-22)
advcl(used-15, type-23)
amod(wheels-26, hot-25)
prep_of(type-23, wheels-26)
partmod(wheels-26, made-27)
prep_for(made-27, fun-29)
conj_and(have-12, looks-31)

(ROOT
  (S
    (S
      (NP (PRP$ Your) (JJ constitutional) (NN right))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB keep)
              (CC and)
              (VB bare)
              (NP
                (NP (NNS arms))
                (, ,) (RB not)
                (NP (NNS guns))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN for)
        (NP
          (NP
            (NP (DT the) (NN safety))
            (PP (IN of)
              (NP (DT the) (NN state))))
          (CC and)
          (NP
            (NP (DT all))
            (PP (IN in)
              (NP (PRP it))))))
      (NP (PRP we))
      (VP (VBP need)
        (S
          (VP (TO to)
            (VP
              (VP (VB take)
                (PRT (RP away))
                (NP
                  (NP (JJ simple) (NNS dangers))
                  (PP (IN for)
                    (NP (NNS citizens)))))
              (, ,)
              (VP (VB cause)
                (S
                  (ADVP (RB eventually))
                  (NP (PRP we))
                  (VP (VBP need)
                    (S
                      (VP (TO to)
                        (VP (VB stop)
                          (S
                            (VP (VBG playing)
                              (PP (IN with)
                                (NP (JJ hot) (NNS wheels)))))))))))
              (CC and)
              (VP (VB grow)
                (PRT (RP up))))))))
    (. .)))

poss(right-3, Your-1)
amod(right-3, constitutional-2)
nsubj(is-4, right-3)
xsubj(keep-6, right-3)
root(ROOT-0, is-4)
aux(keep-6, to-5)
xcomp(is-4, keep-6)
xcomp(is-4, bare-8)
conj_and(keep-6, bare-8)
dobj(keep-6, arms-9)
neg(arms-9, not-11)
dep(arms-9, guns-12)
det(safety-17, the-16)
prep_for(need-26, safety-17)
det(state-20, the-19)
prep_of(safety-17, state-20)
conj_and(safety-17, all-22)
prep_for(need-26, all-22)
prep_in(all-22, it-24)
nsubj(need-26, we-25)
xsubj(take-28, we-25)
conj_and(is-4, need-26)
aux(take-28, to-27)
xcomp(need-26, take-28)
prt(take-28, away-29)
amod(dangers-31, simple-30)
dobj(take-28, dangers-31)
prep_for(dangers-31, citizens-33)
xcomp(need-26, cause-35)
conj_and(take-28, cause-35)
advmod(need-38, eventually-36)
nsubj(need-38, we-37)
xsubj(stop-40, we-37)
ccomp(cause-35, need-38)
aux(stop-40, to-39)
xcomp(need-38, stop-40)
xcomp(stop-40, playing-41)
amod(wheels-44, hot-43)
prep_with(playing-41, wheels-44)
xcomp(need-26, grow-46)
conj_and(take-28, grow-46)
prt(grow-46, up-47)

