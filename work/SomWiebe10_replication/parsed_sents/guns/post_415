(ROOT
  (S
    (NP (PRP We))
    (VP (VBP agree)
      (PP (IN on)
        (NP
          (NP (DT some) (NNS things))
          (SBAR
            (S
              (NP
                (NP (JJ violent) (NN crime))
                (PP (IN in)
                  (NP
                    (NP (NN general))
                    (PP (IN in)
                      (NP (DT the) (NNP US))))))
              (VP (VBZ is)
                (ADJP
                  (ADJP (JJR higher))
                  (PP (IN than)
                    (NP
                      (NP (DT a) (NN lot))
                      (PP (IN of)
                        (NP (NNS places))))))
                (SBAR (RB even) (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VB remove)
                      (NP
                        (NP (NN gun) (NN violence))
                        (PRN (-LRB- -LRB-)
                          (NP
                            (NP (NN murder) (NN rate))
                            (PP (IN for)
                              (NP (NN instance))))
                          (-RRB- -RRB-))
                        (SBAR
                          (S
                            (SBAR (IN As)
                              (S
                                (ADVP (RB far) (RB as))
                                (VP (VBD developed)
                                  (SBAR
                                    (S
                                      (NP (NNS nations))
                                      (VP (VBP go)))))))
                            (, ,)
                            (NP (PRP we))
                            (VP (VBP are)
                              (ADJP (RB fairly) (JJ violent)))))))))))))))
    (. .)))

nsubj(agree-2, We-1)
root(ROOT-0, agree-2)
det(things-5, some-4)
prep_on(agree-2, things-5)
amod(crime-7, violent-6)
nsubj(higher-14, crime-7)
prep_in(crime-7, general-9)
det(US-12, the-11)
prep_in(general-9, US-12)
cop(higher-14, is-13)
rcmod(things-5, higher-14)
det(lot-17, a-16)
prep_than(higher-14, lot-17)
prep_of(lot-17, places-19)
advmod(remove-23, even-20)
dep(remove-23, if-21)
nsubj(remove-23, you-22)
ccomp(higher-14, remove-23)
nn(violence-25, gun-24)
dobj(remove-23, violence-25)
nn(rate-28, murder-27)
dep(violence-25, rate-28)
prep_for(rate-28, instance-30)
mark(developed-35, As-32)
advmod(as-34, far-33)
advmod(developed-35, as-34)
advcl(violent-42, developed-35)
nsubj(go-37, nations-36)
ccomp(developed-35, go-37)
nsubj(violent-42, we-39)
cop(violent-42, are-40)
advmod(violent-42, fairly-41)
rcmod(violence-25, violent-42)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (VP (VBZ is)
            (PP (IN by) (IN in)
              (NP
                (NP (JJ large) (DT the) (NN result))
                (PP (IN of)
                  (NP (PRP$ our) (JJ immense) (NN diversity)))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
complm(is-4, that-3)
ccomp(think-2, is-4)
dep(is-4, by-5)
amod(result-9, large-7)
det(result-9, the-8)
prep_in(is-4, result-9)
poss(diversity-13, our-11)
amod(diversity-13, immense-12)
prep_of(result-9, diversity-13)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP feel)
      (SBAR (IN like)
        (S
          (NP (NN history) (RBR more))
          (VP (VBZ supports)
            (NP (PRP$ my) (NN argument))))))
    (. .)))

nsubj(feel-3, I-1)
advmod(feel-3, just-2)
root(ROOT-0, feel-3)
mark(supports-7, like-4)
nsubj(supports-7, history-5)
advmod(history-5, more-6)
advcl(feel-3, supports-7)
poss(argument-9, my-8)
dobj(supports-7, argument-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was)
        (ADVP (RB just))
        (VP (VBG looking)
          (PP (IN at)
            (NP
              (NP (DT some) (NNS numbers))
              (PP (IN on)
                (NP (NN line))))))))
    (CC and)
    (S
      (ADVP (RB maybe))
      (NP (PRP we))
      (VP (MD can)
        (VP (VB meet)
          (PP (IN in)
            (NP (DT the) (NN middle))))))
    (. .)))

nsubj(looking-4, I-1)
aux(looking-4, was-2)
advmod(looking-4, just-3)
root(ROOT-0, looking-4)
det(numbers-7, some-6)
prep_at(looking-4, numbers-7)
prep_on(numbers-7, line-9)
advmod(meet-14, maybe-11)
nsubj(meet-14, we-12)
aux(meet-14, can-13)
conj_and(looking-4, meet-14)
det(middle-17, the-16)
prep_in(meet-14, middle-17)

(ROOT
  (S
    (NP
      (NP (NNP Comparing) (NNP NYC))
      (PP (TO to)
        (NP (NNP London) (NNS populations))))
    (VP (VBP are)
      (PP (IN within)
        (NP
          (NP
            (QP (CD 1) (CD million))
            (NNS people))
          (PP (IN of)
            (NP (DT each) (JJ other)))))
      (, ,)
      (PP (IN with)
        (S
          (NP (NNP NYC))
          (VP (VBG being)
            (ADJP (RB slightly) (JJR larger))))))
    (. .)))

nn(NYC-2, Comparing-1)
nsubj(are-6, NYC-2)
nn(populations-5, London-4)
prep_to(NYC-2, populations-5)
root(ROOT-0, are-6)
number(million-9, 1-8)
num(people-10, million-9)
prep_within(are-6, people-10)
det(other-13, each-12)
prep_of(people-10, other-13)
nsubj(larger-19, NYC-16)
cop(larger-19, being-17)
advmod(larger-19, slightly-18)
prepc_with(are-6, larger-19)

(ROOT
  (S
    (NP (NNP Police) (NNS budgets))
    (VP (VBP are)
      (ADJP (JJ close)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (VP (VBP switch)
              (PP (IN with)
                (NP (JJ current) (NN exchange) (NNS rates))))))))
    (. .)))

nn(budgets-2, Police-1)
nsubj(close-4, budgets-2)
cop(close-4, are-3)
root(ROOT-0, close-4)
advmod(switch-7, when-5)
nsubj(switch-7, you-6)
dep(close-4, switch-7)
amod(rates-11, current-9)
nn(rates-11, exchange-10)
prep_with(switch-7, rates-11)

(ROOT
  (S
    (S
      (ADVP (RB however))
      (NP (NNP London))
      (VP (VBZ has)
        (VP (VBN 7x)
          (NP
            (NP (DT the) (NN amount))
            (PP (IN of)
              (NP (NN crime)))))))
    (NP (NNP NYC))
    (VP (VBZ has))
    (. .)))

advmod(7x-4, however-1)
nsubj(7x-4, London-2)
aux(7x-4, has-3)
dep(has-10, 7x-4)
det(amount-6, the-5)
dobj(7x-4, amount-6)
prep_of(amount-6, crime-8)
nsubj(has-10, NYC-9)
root(ROOT-0, has-10)

(ROOT
  (S (-LRB- -LRB-)
    (NP
      (NP (NN mind) (NN you))
      (NP (DT the) (NNP UK)))
    (VP (VBZ does) (RB n't)
      (VP (VB tally)
        (NP
          (NP (NNS offenses))
          (VP (VBN committed)
            (PP (IN by)
              (NP (NNS offenders)))
            (PP (IN under)
              (NP
                (NP (DT the) (NN age))
                (PP (IN of)
                  (NP (CD 16)))))))))
    (-RRB- -RRB-) (. .)))

nn(you-3, mind-2)
nsubj(tally-8, you-3)
det(UK-5, the-4)
dep(you-3, UK-5)
aux(tally-8, does-6)
neg(tally-8, n't-7)
root(ROOT-0, tally-8)
dobj(tally-8, offenses-9)
partmod(offenses-9, committed-10)
agent(committed-10, offenders-12)
det(age-15, the-14)
prep_under(committed-10, age-15)
prep_of(age-15, 16-17)

(ROOT
  (NP
    (NP (NNS whats))
    (NP (DT the) (JJ big) (NN difference))
    (. ?)))

root(ROOT-0, whats-1)
det(difference-4, the-2)
amod(difference-4, big-3)
dep(whats-1, difference-4)

(ROOT
  (S
    (NP (NNP NYC))
    (VP (VBZ has)
      (NP
        (NP
          (ADJP (CD 40) (NN %))
          (ADJP (RBR more) (JJ cops))
          (NN patrolling))
        (PP (IN than)
          (NP (NNP London)))))
    (. .)))

nsubj(has-2, NYC-1)
root(ROOT-0, has-2)
number(%-4, 40-3)
amod(patrolling-7, %-4)
advmod(cops-6, more-5)
amod(patrolling-7, cops-6)
dobj(has-2, patrolling-7)
prep_than(patrolling-7, London-9)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (RB maybe) (NN crime))
    (VP (VBZ is)
      (ADJP (RB grossly) (JJ under))
      (ADVP (VBN reported)
        (PP (IN in)
          (NP (NNP NYC)))))
    (. .)))

advmod(under-6, Now-1)
advmod(crime-3, maybe-2)
nsubj(under-6, crime-3)
cop(under-6, is-4)
advmod(under-6, grossly-5)
root(ROOT-0, under-6)
advmod(under-6, reported-7)
prep_in(reported-7, NYC-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD lived)
        (ADVP (RB there))
        (PP (IN for)
          (NP (CD 5.5) (NNS years)))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB believe)
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (DT some) (NN definate))
                  (PP (IN under)
                    (S
                      (VP (VBG reporting)
                        (S
                          (VP (VBG going)
                            (PRT (RP on))
                            (S
                              (VP (TO to)
                                (VP (VB make)
                                  (S
                                    (NP (PRP it))
                                    (VP (VB look)
                                      (ADJP
                                        (ADJP (JJR safer))
                                        (SBAR (IN than)
                                          (S
                                            (NP (PRP it))
                                            (VP (VBZ is)
                                              (SBAR (CC but)
                                                (S
                                                  (NP (PRP I))
                                                  (VP (VBP 'm) (RB not)
                                                    (ADJP (JJ sure))
                                                    (SBAR (RB even) (IN if)
                                                      (S
                                                        (NP (PRP you))
                                                        (VP
                                                          (VP (VB inflate)
                                                            (NP
                                                              (NP (DT the) (NN rate))
                                                              (PP (IN for)
                                                                (NP (NNP NYC)))))
                                                          (CC and)
                                                          (VP (VB deflate)
                                                            (NP
                                                              (NP (NNP London))
                                                              (PP (IN for)
                                                                (NP (DT some) (NN reason))))
                                                            (SBAR (IN that)
                                                              (S
                                                                (NP (PRP they))
                                                                (VP (MD would)
                                                                  (VP (VB be)
                                                                    (ADJP (JJ close))))))))))))))))))))))))))))))))))
    (. .)))

nsubj(lived-2, I-1)
root(ROOT-0, lived-2)
advmod(lived-2, there-3)
num(years-6, 5.5-5)
prep_for(lived-2, years-6)
nsubj(believe-10, I-8)
aux(believe-10, would-9)
conj_and(lived-2, believe-10)
complm(is-13, that-11)
expl(is-13, there-12)
ccomp(believe-10, is-13)
det(definate-15, some-14)
nsubj(is-13, definate-15)
prepc_under(definate-15, reporting-17)
xcomp(reporting-17, going-18)
prt(going-18, on-19)
aux(make-21, to-20)
xcomp(going-18, make-21)
nsubj(look-23, it-22)
ccomp(make-21, look-23)
acomp(look-23, safer-24)
mark(is-27, than-25)
nsubj(is-27, it-26)
dep(safer-24, is-27)
cc(sure-32, but-28)
nsubj(sure-32, I-29)
cop(sure-32, 'm-30)
neg(sure-32, not-31)
ccomp(is-27, sure-32)
advmod(inflate-36, even-33)
dep(inflate-36, if-34)
nsubj(inflate-36, you-35)
nsubj(deflate-42, you-35)
ccomp(sure-32, inflate-36)
det(rate-38, the-37)
dobj(inflate-36, rate-38)
prep_for(rate-38, NYC-40)
ccomp(sure-32, deflate-42)
conj_and(inflate-36, deflate-42)
dobj(deflate-42, London-43)
det(reason-46, some-45)
prep_for(London-43, reason-46)
complm(close-51, that-47)
nsubj(close-51, they-48)
aux(close-51, would-49)
cop(close-51, be-50)
ccomp(deflate-42, close-51)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT any))
          (PP (IN of)
            (NP (PRP$ my) (NN point))))
        (VP (VBZ is)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN considered)
                  (S
                    (VP (VB let)
                      (S
                        (NP (PRP it))
                        (VP (VB be)
                          (NP (DT this)))))))))))))
    (: :)
    (NP (NNP Gun) (NN control))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ expensive) (NN exercise))
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (IN at) (JJS best))
            (VP
              (VP (VBZ strips)
                (NP
                  (NP (NNS people))
                  (PP (IN of)
                    (NP (NNS rights)))))
              (, ,)
              (CC and)
              (VP
                (ADVP (IN at) (JJS worst))
                (VBZ is)
                (NP
                  (NP (DT an) (NN exercise))
                  (PP (IN in)
                    (NP (NN futility)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ does) (RB not)
                        (VP (VB reduce)
                          (NP (JJ violent) (NN crime)))))))))))))
    (. .)))

mark(is-6, If-1)
nsubj(is-6, any-2)
xsubj(considered-9, any-2)
poss(point-5, my-4)
prep_of(any-2, point-5)
advcl(exercise-20, is-6)
aux(considered-9, to-7)
auxpass(considered-9, be-8)
xcomp(is-6, considered-9)
ccomp(considered-9, let-10)
nsubj(this-13, it-11)
cop(this-13, be-12)
ccomp(let-10, this-13)
nn(control-16, Gun-15)
nsubj(exercise-20, control-16)
cop(exercise-20, is-17)
det(exercise-20, an-18)
amod(exercise-20, expensive-19)
root(ROOT-0, exercise-20)
nsubj(strips-24, exercise-20)
advmod(strips-24, at-22)
pobj(at-22, best-23)
rcmod(exercise-20, strips-24)
dobj(strips-24, people-25)
prep_of(people-25, rights-27)
advmod(exercise-34, at-30)
pobj(at-30, worst-31)
cop(exercise-34, is-32)
det(exercise-34, an-33)
rcmod(exercise-20, exercise-34)
conj_and(strips-24, exercise-34)
nsubj(reduce-40, exercise-34)
prep_in(exercise-34, futility-36)
aux(reduce-40, does-38)
neg(reduce-40, not-39)
rcmod(exercise-34, reduce-40)
amod(crime-42, violent-41)
dobj(reduce-40, crime-42)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VB forget)
        (NP (DT the) (NN paper))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN study))
          (ADVP
            (NP (DT some) (NN time))
            (RB ago))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD suggested)
                (SBAR
                  (S
                    (NP
                      (NP (NN homogeneity))
                      (PP (IN in)
                        (NP (DT a) (NN population))))
                    (VP (VBZ is)
                      (ADJP (RBR less) (JJ violent)
                        (PP (IN than)
                          (NP (DT a) (JJ heterogeneous) (NN mix))))
                      (SBAR (IN like)
                        (S
                          (NP (PRP we))
                          (VP (VBP have)
                            (ADVP (RB here))))))))))))))
    (. .)))

nsubj(forget-2, I-1)
root(ROOT-0, forget-2)
det(paper-4, the-3)
dobj(forget-2, paper-4)
expl(was-8, there-7)
conj_but(forget-2, was-8)
det(study-10, a-9)
nsubj(was-8, study-10)
det(time-12, some-11)
npadvmod(ago-13, time-12)
advmod(study-10, ago-13)
nsubj(suggested-15, that-14)
rcmod(study-10, suggested-15)
nsubj(violent-22, homogeneity-16)
det(population-19, a-18)
prep_in(homogeneity-16, population-19)
cop(violent-22, is-20)
advmod(violent-22, less-21)
ccomp(suggested-15, violent-22)
det(mix-26, a-24)
amod(mix-26, heterogeneous-25)
prep_than(violent-22, mix-26)
mark(have-29, like-27)
nsubj(have-29, we-28)
advcl(violent-22, have-29)
advmod(have-29, here-30)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP
          (NP (DT the) (NNP US) (NNS numbers))
          (PP (IN of)
            (NP
              (NP (NNS crimes))
              (VP (VBN prevented)
                (PP (IN with)
                  (NP (NNS guns)))))))
        (VP (VBZ is)
          (VP (VBN inflated)
            (PP (IN by))))))
    (VP (VBP say)
      (SBAR
        (S
          (NP
            (NP (CD 50) (NNS fold))
            (, ,)
            (SBAR (IN than)
              (S
                (NP (DT that) (VBN estimated)
                  (QP (CD 2) (CD million))
                  (NNS preventions))
                (ADVP (RB still))
                (VP (VBZ becomes)
                  (PP
                    (ADVP
                      (NP (CD 40,000) (NNS 4x))
                      (RBR higher))
                    (IN than)
                    (NP
                      (NP (DT the) (NNP US) (NN murder) (NN rate))
                      (PP (IN in)
                        (NP (CD 2007)))))
                  (PP (IN with)
                    (NP
                      (NP
                        (NP (NNS guns))
                        (PRN (-LRB- -LRB-)
                          (NP
                            (QP (RB just) (IN over) (CD 10,000)))
                          (-RRB- -RRB-)))
                      (PP (IN over)
                        (NP
                          (NP (DT a)
                            (QP (RB nearly) (CD 700)))
                          (PP (IN of)
                            (NP (WDT which))))))))))
            (, ,))
          (VP (VBD were)
            (NP
              (NP
                (NP (JJ justifiable) (NNS shootings))
                (PP (IN by)
                  (NP (NN law) (NN enforcement))))
              (CC and)
              (NP
                (NP (NNS civilians))
                (PP (IN in)
                  (NP (NN self) (NN defense) (NNS cases)))))))))
    (. .)))

advmod(inflated-12, Even-1)
dep(inflated-12, if-2)
det(numbers-5, the-3)
nn(numbers-5, US-4)
nsubjpass(inflated-12, numbers-5)
prep_of(numbers-5, crimes-7)
partmod(crimes-7, prevented-8)
prep_with(prevented-8, guns-10)
auxpass(inflated-12, is-11)
advcl(say-14, inflated-12)
csubj(say-14, inflated-12)
prep(inflated-12, by-13)
root(ROOT-0, say-14)
num(fold-16, 50-15)
nsubj(shootings-52, fold-16)
mark(becomes-25, than-18)
det(preventions-23, that-19)
amod(preventions-23, estimated-20)
number(million-22, 2-21)
num(preventions-23, million-22)
nsubj(becomes-25, preventions-23)
advmod(becomes-25, still-24)
dep(fold-16, becomes-25)
num(4x-27, 40,000-26)
npadvmod(higher-28, 4x-27)
advmod(becomes-25, higher-28)
det(rate-33, the-30)
nn(rate-33, US-31)
nn(rate-33, murder-32)
prep_than(becomes-25, rate-33)
prep_in(rate-33, 2007-35)
prep_with(becomes-25, guns-37)
advmod(over-40, just-39)
quantmod(10,000-41, over-40)
dep(guns-37, 10,000-41)
det(700-46, a-44)
quantmod(700-46, nearly-45)
prep_over(guns-37, 700-46)
prep_of(700-46, which-48)
cop(shootings-52, were-50)
amod(shootings-52, justifiable-51)
ccomp(say-14, shootings-52)
nn(enforcement-55, law-54)
prep_by(shootings-52, enforcement-55)
ccomp(say-14, civilians-57)
conj_and(shootings-52, civilians-57)
nn(cases-61, self-59)
nn(cases-61, defense-60)
prep_in(civilians-57, cases-61)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP think)
        (S
          (NP (PRP$ your))
          (VP
            (VP (VBG focusing)
              (PP (IN on)
                (NP
                  (NP (DT the) (JJ violent) (NN crime) (NN rate))
                  (PP (IN in)
                    (NP (DT the) (NNP US))))))
            (CC and)
            (VP (VBG equating)
              (NP (DT that))
              (PP (TO to)
                (NP (NN gun) (NN crime))))))))
    (CC and)
    (S
      (NP (PRP they))
      (ADVP (RB just))
      (VP (VBP are) (RB n't)
        (NP (DT the) (JJ same))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(focusing-4, your-3)
nsubj(equating-14, your-3)
ccomp(think-2, focusing-4)
det(rate-9, the-6)
amod(rate-9, violent-7)
nn(rate-9, crime-8)
prep_on(focusing-4, rate-9)
det(US-12, the-11)
prep_in(rate-9, US-12)
ccomp(think-2, equating-14)
conj_and(focusing-4, equating-14)
dobj(equating-14, that-15)
nn(crime-18, gun-17)
prep_to(equating-14, crime-18)
nsubj(same-25, they-20)
advmod(same-25, just-21)
cop(same-25, are-22)
neg(same-25, n't-23)
det(same-25, the-24)
conj_and(think-2, same-25)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP disagree)
        (PP (IN with)
          (NP (PRP$ your) (NNS methods)))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB maybe))
      (NP (PRP we))
      (VP (MD can)
        (VP (DT both) (VB agree)
          (SBAR (IN that)
            (S
              (NP
                (NP
                  (NP (PRP$ our) (NN money))
                  (PP (IN as)
                    (NP (NN tax) (NNS payers))))
                (, ,)
                (NP
                  (NP (PRP$ our) (NN safety))
                  (PP (IN as)
                    (NP (NNS people))))
                (, ,)
                (CC and)
                (NP
                  (NP (PRP$ our) (NNS rights))
                  (PP (IN as)
                    (NP (NNS citizens)))))
              (VP (VBP are)
                (ADVP (RBS best))
                (VP (VBN protected)
                  (PP (IN by)
                    (NP
                      (NP (NN something))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ is) (RB n't)
                            (NP (NN gun) (NN control))))))))))))))
    (. .)))

nsubj(disagree-2, I-1)
root(ROOT-0, disagree-2)
poss(methods-5, your-4)
prep_with(disagree-2, methods-5)
advmod(agree-12, maybe-8)
nsubj(agree-12, we-9)
aux(agree-12, can-10)
dep(agree-12, both-11)
conj_but(disagree-2, agree-12)
complm(protected-32, that-13)
poss(money-15, our-14)
nsubjpass(protected-32, money-15)
nn(payers-18, tax-17)
prep_as(money-15, payers-18)
poss(safety-21, our-20)
conj_and(money-15, safety-21)
nsubjpass(protected-32, safety-21)
prep_as(safety-21, people-23)
poss(rights-27, our-26)
conj_and(money-15, rights-27)
nsubjpass(protected-32, rights-27)
prep_as(rights-27, citizens-29)
auxpass(protected-32, are-30)
advmod(protected-32, best-31)
ccomp(agree-12, protected-32)
agent(protected-32, something-34)
nsubj(control-39, something-34)
cop(control-39, is-36)
neg(control-39, n't-37)
nn(control-39, gun-38)
rcmod(something-34, control-39)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP UK))
      (, ,)
      (NP (NNP Germany))
      (, ,)
      (CC and)
      (NP
        (NP (NNP Austrailia))
        (NP (DT all))))
    (VP
      (VP (VBP have)
        (NP
          (NP (RB much) (JJR lower) (NNS populations))
          (, ,) (RB much)
          (NP (RBR more) (`` ``) (JJ similar) ('' '') (NNS populations))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB still))
        (VBP suffer)
        (NP
          (NP (DT the) (NNS effects))
          (PP (IN of)
            (NP (NN violence))))))
    (. .)))

det(UK-2, The-1)
nsubj(have-9, UK-2)
nsubj(suffer-23, UK-2)
conj_and(UK-2, Germany-4)
nsubj(have-9, Germany-4)
conj_and(UK-2, Austrailia-7)
nsubj(have-9, Austrailia-7)
dep(Austrailia-7, all-8)
root(ROOT-0, have-9)
advmod(populations-12, much-10)
amod(populations-12, lower-11)
dobj(have-9, populations-12)
advmod(populations-12, much-14)
advmod(populations-19, more-15)
amod(populations-19, similar-17)
dep(populations-12, populations-19)
advmod(suffer-23, still-22)
conj_and(have-9, suffer-23)
det(effects-25, the-24)
dobj(suffer-23, effects-25)
prep_of(effects-25, violence-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP concede)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD did) (RB n't)
            (VP
              (VP (VB make)
                (NP (DT this) (NN point))
                (ADVP (RB clearly)))
              (PRN (CC but)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP I))
                    (VP (VBD was)
                      (VP (VBG getting)
                        (PP (IN at)
                          (S
                            (VP (VBZ is)
                              (SBAR (IN that)
                                (S
                                  (PP (RB even) (IN in)
                                    (NP
                                      (NP (DT a) (NN situation))
                                      (SBAR
                                        (WHNP (WDT that))
                                        (S
                                          (VP (VBZ is)
                                            (ADJP
                                              (ADJP (RB far) (RBR more) (JJ controllable))
                                              (PP (IN with)
                                                (NP (DT a)
                                                  (ADJP (RB much) (JJR lower))
                                                  (NN population)))))))))
                                  (, ,)
                                  (NP (PRP I))
                                  (VP (VBP do) (RB n't)
                                    (VP (VB feel)
                                      (NP (DT the) (NNS controls))))))))))))))
              (NP (PRP$ your) (JJ suggesting) (NN work)))))))
    (. .)))

nsubj(concede-2, I-1)
root(ROOT-0, concede-2)
nsubj(make-6, I-3)
aux(make-6, did-4)
neg(make-6, n't-5)
ccomp(concede-2, make-6)
det(point-8, this-7)
dobj(make-6, point-8)
advmod(make-6, clearly-9)
dep(getting-14, but-10)
dobj(getting-14, what-11)
nsubj(getting-14, I-12)
aux(getting-14, was-13)
parataxis(make-6, getting-14)
prepc_at(getting-14, is-16)
complm(feel-36, that-17)
advmod(feel-36, even-18)
advcl(feel-36, in-19)
det(situation-21, a-20)
nsubj(controllable-26, situation-21)
prep_in(feel-36, situation-21)
cop(controllable-26, is-23)
advmod(controllable-26, far-24)
advmod(controllable-26, more-25)
rcmod(situation-21, controllable-26)
det(population-31, a-28)
advmod(lower-30, much-29)
amod(population-31, lower-30)
prep_with(controllable-26, population-31)
nsubj(feel-36, I-33)
aux(feel-36, do-34)
neg(feel-36, n't-35)
ccomp(is-16, feel-36)
det(controls-38, the-37)
dobj(feel-36, controls-38)
poss(work-41, your-39)
amod(work-41, suggesting-40)
dobj(make-6, work-41)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (PP (IN for)
          (NP (DT the) (NN driver) (NN thing)))
        (NP (PRP I))
        (VP (VBP agree)
          (NP (PRP$ its)))))
    (NP
      (NP (DT a) (NN crap) (NN analogy))
      (PP (CC but)
        (NP (PRP$ its) (CD one) (JJS most) (NNS people))))
    (VP (VBP are)
      (ADJP (JJ familiar)
        (PP (IN with))))
    (. .)))

mark(agree-7, As-1)
det(thing-5, the-3)
nn(thing-5, driver-4)
prep_for(agree-7, thing-5)
nsubj(agree-7, I-6)
advcl(familiar-18, agree-7)
dobj(agree-7, its-8)
det(analogy-11, a-9)
nn(analogy-11, crap-10)
nsubj(familiar-18, analogy-11)
prep(analogy-11, but-12)
poss(people-16, its-13)
num(people-16, one-14)
amod(people-16, most-15)
dep(but-12, people-16)
cop(familiar-18, are-17)
root(ROOT-0, familiar-18)
prep(familiar-18, with-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT a) (JJR better) (NN analogy))
          (VP (VBD was)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP I))
                (VP (VBD compared)
                  (NP (PRP it))
                  (PP (TO to)
                    (NP (NN alcohol)
                      (CC and)
                      (NN prohibition))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
det(analogy-5, a-3)
amod(analogy-5, better-4)
nsubj(was-6, analogy-5)
ccomp(think-2, was-6)
advmod(compared-9, when-7)
nsubj(compared-9, I-8)
advcl(was-6, compared-9)
dobj(compared-9, it-10)
prep_to(compared-9, alcohol-12)
prep_to(compared-9, prohibition-14)
conj_and(alcohol-12, prohibition-14)

(ROOT
  (S
    (SBAR (IN Though)
      (S
        (NP (PRP we))
        (VP (VBP do) (RB not)
          (VP (VB have)
            (NP (DT a) (JJ constitutional) (NN right))
            (PP (TO to)
              (NP (NN alcohol)))
            (SBAR (IN like)
              (S
                (NP (PRP we))
                (VP (VBP do)
                  (NP (NNS guns))
                  (SBAR (IN if)
                    (S
                      (NP (PRP I))
                      (VP (VBP follow)
                        (NP (PRP$ your) (NN logic))))))))))))
    (NP (PRP they))
    (VP (VBP are)
      (ADJP (JJ equivalent)))
    (. .)))

mark(have-5, Though-1)
nsubj(have-5, we-2)
aux(have-5, do-3)
neg(have-5, not-4)
advcl(equivalent-22, have-5)
det(right-8, a-6)
amod(right-8, constitutional-7)
dobj(have-5, right-8)
prep_to(have-5, alcohol-10)
mark(do-13, like-11)
nsubj(do-13, we-12)
advcl(have-5, do-13)
dobj(do-13, guns-14)
mark(follow-17, if-15)
nsubj(follow-17, I-16)
advcl(do-13, follow-17)
poss(logic-19, your-18)
dobj(follow-17, logic-19)
nsubj(equivalent-22, they-20)
cop(equivalent-22, are-21)
root(ROOT-0, equivalent-22)

(ROOT
  (S
    (NP (DT Neither))
    (VP
      (VP (VBZ is)
        (ADJP (JJ necessary)
          (PP (IN in)
            (NP (PRP$ your) (NN mind)))))
      (CC and)
      (VP (VBZ does)
        (NP (JJR more) (NN harm))
        (PP (IN than)
          (ADJP (JJ good)))))
    (. .)))

nsubj(necessary-3, Neither-1)
nsubj(does-8, Neither-1)
cop(necessary-3, is-2)
root(ROOT-0, necessary-3)
poss(mind-6, your-5)
prep_in(necessary-3, mind-6)
conj_and(necessary-3, does-8)
amod(harm-10, more-9)
dobj(does-8, harm-10)
prep_than(does-8, good-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB make)
            (NP (DT that) (NN assumption))
            (ADVP (RB then))))))
    (NP (PRP I))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB say)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB think)
                    (SBAR
                      (S
                        (NP
                          (NP (PRP$ your) (NN style))
                          (PP (IN of)
                            (NP (NN control))))
                        (VP (MD will)
                          (VP (VB work)))))))))))))
    (. .)))

mark(make-4, If-1)
nsubj(make-4, I-2)
aux(make-4, can-3)
advcl(have-9, make-4)
det(assumption-6, that-5)
dobj(make-4, assumption-6)
advmod(make-4, then-7)
nsubj(have-9, I-8)
xsubj(say-11, I-8)
root(ROOT-0, have-9)
aux(say-11, to-10)
xcomp(have-9, say-11)
nsubj(think-15, I-12)
aux(think-15, do-13)
neg(think-15, n't-14)
ccomp(say-11, think-15)
poss(style-17, your-16)
nsubj(work-21, style-17)
prep_of(style-17, control-19)
aux(work-21, will-20)
ccomp(think-15, work-21)

