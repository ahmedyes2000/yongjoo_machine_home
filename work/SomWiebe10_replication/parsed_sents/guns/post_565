(ROOT
  (NP (NNP Errr) (: ...)))

root(ROOT-0, Errr-1)

(ROOT
  (S
    (NP (PRP they))
    (VP (MD must)
      (VP (VB do)
        (ADVP (RB so))
        (PP (IN in)
          (NP (DT an) (VBN organized) (NN manner)
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (DT a) (NN militia)))))))))
    (. .)))

nsubj(do-3, they-1)
aux(do-3, must-2)
root(ROOT-0, do-3)
advmod(do-3, so-4)
det(manner-8, an-6)
amod(manner-8, organized-7)
prep_in(do-3, manner-8)
aux(militia-12, to-9)
cop(militia-12, be-10)
det(militia-12, a-11)
infmod(manner-8, militia-12)

(ROOT
  (NP (-LRB- -LRB-)
    (NP (CD Just) (: ...) (CD one))
    (: ...)
    (NP (JJ teeny) (JJ tiny) (NN distinction))
    (. .) (-RRB- -RRB-)))

num(one-4, Just-2)
root(ROOT-0, one-4)
amod(distinction-8, teeny-6)
amod(distinction-8, tiny-7)
dep(one-4, distinction-8)

(ROOT
  (S
    (NP
      (NP (DT All) (NNS members))
      (PP (IN of)
        (NP (DT the) (JJ Rotary) (NNP Club))))
    (VP (VBP are)
      (NP (NNS citizens)))
    (. .)))

det(members-2, All-1)
nsubj(citizens-8, members-2)
det(Club-6, the-4)
amod(Club-6, Rotary-5)
prep_of(members-2, Club-6)
cop(citizens-8, are-7)
root(ROOT-0, citizens-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (NP (DT a) (NN citizen)))
    (. .)))

nsubj(citizen-4, I-1)
cop(citizen-4, am-2)
det(citizen-4, a-3)
root(ROOT-0, citizen-4)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (NP
        (NP (DT a) (NN member))
        (PP (IN of)
          (NP (DT the) (JJ Rotary) (NNP Club)))))
    (. .)))

advmod(member-6, Therefore-1)
nsubj(member-6, I-3)
cop(member-6, am-4)
det(member-6, a-5)
root(ROOT-0, member-6)
det(Club-10, the-8)
amod(Club-10, Rotary-9)
prep_of(member-6, Club-10)

(ROOT
  (S
    (S
      (INTJ (UH Okay))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (ADVP (RB actually))
        (VP (VB know)
          (SBAR (IN if)
            (S
              (NP (DT that))
              (VP (VBZ 's)
                (NP
                  (NP (DT a) (NN stipulation))
                  (PP (TO to)
                    (S
                      (VP (VBG being)
                        (PP (IN in)
                          (NP (DT the) (NNP R.C.)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB see)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT that))
              (VP (VBZ does) (RB n't)
                (VP (VB work))))))))
    (. .)))

dep(know-7, Okay-1)
nsubj(know-7, I-3)
aux(know-7, do-4)
neg(know-7, n't-5)
advmod(know-7, actually-6)
root(ROOT-0, know-7)
mark(stipulation-12, if-8)
nsubj(stipulation-12, that-9)
cop(stipulation-12, 's-10)
det(stipulation-12, a-11)
advcl(know-7, stipulation-12)
prepc_to(stipulation-12, being-14)
det(R.C.-17, the-16)
prep_in(being-14, R.C.-17)
nsubj(see-22, you-20)
aux(see-22, can-21)
conj_but(know-7, see-22)
advmod(work-27, how-23)
nsubj(work-27, that-24)
aux(work-27, does-25)
neg(work-27, n't-26)
ccomp(see-22, work-27)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP
          (NP (DT all) (NNS members))
          (PP (IN of)
            (NP (DT a) (NN militia))))
        (VP (VBP are)
          (NP (NNS citizens)))))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (DT all) (NNS citizens))
            (VP (VBP are)
              (NP
                (NP (NNS members))
                (PP (IN of)
                  (NP (DT the) (NN militia)))))))))
    (. .)))

complm(citizens-8, That-1)
det(members-3, all-2)
nsubj(citizens-8, members-3)
det(militia-6, a-5)
prep_of(members-3, militia-6)
cop(citizens-8, are-7)
csubj(mean-11, citizens-8)
aux(mean-11, does-9)
neg(mean-11, n't-10)
root(ROOT-0, mean-11)
complm(members-16, that-12)
det(citizens-14, all-13)
nsubj(members-16, citizens-14)
cop(members-16, are-15)
ccomp(mean-11, members-16)
det(militia-19, the-18)
prep_of(members-16, militia-19)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP
      (VP (VBP have)
        (ADVP (IN since))
        (VP (VBN examined)
          (NP
            (NP (DT this) (NN issue))
            (PP (IN in)
              (NP (PRP$ my) (NN mind))))
          (PP (IN for)
            (NP (JJ laborious) (NNS hours)))))
      (CC and)
      (VP (VBP have)
        (VP (VBN come)
          (S
            (VP (TO to)
              (VP (VB think)
                (SBAR (IN that)
                  (S
                    (NP (DT this))
                    (ADVP (RB only))
                    (VP (VBZ says)
                      (SBAR
                        (S
                          (NP
                            (NP (DT the) (NN protection))
                            (PP (IN against)
                              (NP
                                (NP (JJ federal) (NN imposition))
                                (PP (IN upon)
                                  (NP
                                    (NP (DT the) (NNS arms))
                                    (PP (IN of)
                                      (NP (DT the) (NN militia))))))))
                          (VP (MD shall) (RB not)
                            (VP (VB be)
                              (VP (VBN infringed)))))))))))))))
    (. .)))

nsubj(examined-5, I-2)
nsubj(come-16, I-2)
xsubj(think-18, I-2)
aux(examined-5, have-3)
advmod(examined-5, since-4)
root(ROOT-0, examined-5)
det(issue-7, this-6)
dobj(examined-5, issue-7)
poss(mind-10, my-9)
prep_in(issue-7, mind-10)
amod(hours-13, laborious-12)
prep_for(examined-5, hours-13)
aux(come-16, have-15)
conj_and(examined-5, come-16)
aux(think-18, to-17)
xcomp(come-16, think-18)
complm(says-22, that-19)
nsubj(says-22, this-20)
advmod(says-22, only-21)
ccomp(think-18, says-22)
det(protection-24, the-23)
nsubjpass(infringed-37, protection-24)
amod(imposition-27, federal-26)
prep_against(protection-24, imposition-27)
det(arms-30, the-29)
prep_upon(imposition-27, arms-30)
det(militia-33, the-32)
prep_of(arms-30, militia-33)
aux(infringed-37, shall-34)
neg(infringed-37, not-35)
auxpass(infringed-37, be-36)
ccomp(says-22, infringed-37)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ does) (RB n't)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP are) (RB n't)
                    (PP (IN in)
                      (NP (DT the) (NN militia))))))
              (NP (PRP you))
              (VP (MD ca) (RB n't)
                (VP (VB keep)
                  (CC and)
                  (VB bear)
                  (NP (NNS arms)))))))))
    (: ...)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (NN right))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD ca) (RB n't)
                        (VP (VB be)
                          (VP (VBN infringed) (, ,)
                            (CC or)
                            (JJ controlled)))))))))))))
    (. .)))

nsubj(say-4, It-1)
aux(say-4, does-2)
neg(say-4, n't-3)
root(ROOT-0, say-4)
complm(keep-16, that-5)
mark(are-8, if-6)
nsubj(are-8, you-7)
advcl(keep-16, are-8)
neg(are-8, n't-9)
det(militia-12, the-11)
prep_in(are-8, militia-12)
nsubj(keep-16, you-13)
nsubj(bear-18, you-13)
aux(keep-16, ca-14)
neg(keep-16, n't-15)
ccomp(say-4, keep-16)
ccomp(say-4, bear-18)
conj_and(keep-16, bear-18)
dobj(keep-16, arms-19)
nsubj(say-25, it-22)
aux(say-25, does-23)
neg(say-25, n't-24)
conj_but(say-4, say-25)
complm(right-30, that-26)
nsubj(right-30, it-27)
cop(right-30, is-28)
det(right-30, a-29)
ccomp(say-25, right-30)
nsubjpass(infringed-35, right-30)
nsubj(controlled-38, right-30)
aux(infringed-35, ca-32)
neg(infringed-35, n't-33)
auxpass(infringed-35, be-34)
rcmod(right-30, infringed-35)
rcmod(right-30, controlled-38)
conj_or(infringed-35, controlled-38)

