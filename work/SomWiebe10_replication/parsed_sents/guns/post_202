(ROOT
  (S
    (NP
      (NP (NNS Guns))
      (PP (IN in)
        (NP
          (NP (DT the) (NNS hands))
          (PP (IN of)
            (NP (NN everyone))))))
    (VP (VBZ creates)
      (NP
        (NP (DT the) (JJ great) (NN equalization))
        (PP (IN of)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (MD would)
                  (VP (VB seek)
                    (S
                      (VP (TO to)
                        (VP (VB harm)
                          (NP (NNS others)))))))))))))
    (. .)))

nsubj(creates-7, Guns-1)
det(hands-4, the-3)
prep_in(Guns-1, hands-4)
prep_of(hands-4, everyone-6)
root(ROOT-0, creates-7)
det(equalization-10, the-8)
amod(equalization-10, great-9)
dobj(creates-7, equalization-10)
prep_of(equalization-10, those-12)
nsubj(seek-15, those-12)
aux(seek-15, would-14)
rcmod(those-12, seek-15)
aux(harm-17, to-16)
xcomp(seek-15, harm-17)
dobj(harm-17, others-18)

(ROOT
  (SQ
    (S
      (VP (VB Consider)
        (PP (IN for)
          (NP (PRP yourself)))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP
              (VP (VBD were)
                (PP (IN on)
                  (NP (DT a) (NNP New) (NNP York) (NN subway))))
              (CC and)
              (VP (VBD knew)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP
                        (ADVP (RBS most) (JJ likely))
                        (CD 50) (NN %))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NNS people))
                          (PP (IN on)
                            (NP (DT the) (NN subway))))))
                    (VP (VBD were)
                      (VP (VBG carrying)
                        (NP (DT a) (NN gun))))))))))))
    (, ,) (MD would)
    (NP (PRP you))
    (VP (RB not)
      (VP (VB be)
        (ADJP (JJR safer))
        (SBAR (MD should)
          (S
            (NP (DT some) (NN idiot))
            (VP (VBP think)
              (SBAR
                (S
                  (NP (PRP he)
                    (CC or)
                    (PRP she))
                  (VP (VBD was)
                    (VP (VBG going)
                      (S
                        (VP (TO to)
                          (VP (VB rob)
                            (NP (PRP you)))))))))))))
      (CC or)
      (VP (VB someone)
        (ADJP (RB else))))
    (. ?)))

dep(safer-34, Consider-1)
prep_for(Consider-1, yourself-3)
mark(were-6, if-4)
nsubj(were-6, you-5)
nsubj(knew-13, you-5)
advcl(Consider-1, were-6)
det(subway-11, a-8)
nn(subway-11, New-9)
nn(subway-11, York-10)
prep_on(were-6, subway-11)
advcl(Consider-1, knew-13)
conj_and(were-6, knew-13)
complm(carrying-26, that-14)
advmod(likely-16, most-15)
advmod(%-18, likely-16)
num(%-18, 50-17)
nsubj(carrying-26, %-18)
det(people-21, the-20)
prep_of(%-18, people-21)
det(subway-24, the-23)
prep_on(people-21, subway-24)
aux(carrying-26, were-25)
ccomp(knew-13, carrying-26)
det(gun-28, a-27)
dobj(carrying-26, gun-28)
aux(safer-34, would-30)
nsubj(safer-34, you-31)
nsubj(someone-48, you-31)
neg(safer-34, not-32)
cop(safer-34, be-33)
root(ROOT-0, safer-34)
dep(think-38, should-35)
det(idiot-37, some-36)
nsubj(think-38, idiot-37)
ccomp(safer-34, think-38)
nsubj(going-43, he-39)
conj_or(he-39, she-41)
nsubj(going-43, she-41)
aux(going-43, was-42)
ccomp(think-38, going-43)
aux(rob-45, to-44)
xcomp(going-43, rob-45)
dobj(rob-45, you-46)
conj_or(safer-34, someone-48)
acomp(someone-48, else-49)

(ROOT
  (S
    (S
      (NP (NNS Criminals))
      (VP (MD will)
        (ADVP (RB always))
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (DT a) (NN gun))
                  (SBAR (IN if)
                    (S
                      (NP (PRP they))
                      (VP (VBP are)
                        (VP (VBN h)
                          (X
                            (X (SYM \*))
                            (ADJP (RB ll) (JJ bent)
                              (PP (IN on)
                                (S
                                  (VP (VBG doing)
                                    (ADVP (RB so))))))))))))))))))
    (: ;)
    (S
      (S
        (VP (VBG equalizing)
          (NP (DT the) (VBG playing) (NN field))))
      (VP (VBZ is)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (MD will)
              (VP (VB make)
                (S
                  (NP (PRP them))
                  (VP (VB think)
                    (ADVP (RB twice))
                    (PP (IN before)
                      (S
                        (VP (VBG attempting)
                          (S
                            (VP (TO to)
                              (VP (VB use)
                                (NP (PRP it))))))))))))))))
    (. .)))

nsubj(able-5, Criminals-1)
aux(able-5, will-2)
advmod(able-5, always-3)
cop(able-5, be-4)
root(ROOT-0, able-5)
aux(get-7, to-6)
xcomp(able-5, get-7)
det(gun-9, a-8)
dobj(get-7, gun-9)
mark(h-13, if-10)
nsubjpass(h-13, they-11)
auxpass(h-13, are-12)
advcl(get-7, h-13)
dep(bent-16, \*-14)
advmod(bent-16, ll-15)
dep(h-13, bent-16)
prepc_on(bent-16, doing-18)
advmod(doing-18, so-19)
csubj(is-25, equalizing-21)
det(field-24, the-22)
amod(field-24, playing-23)
dobj(equalizing-21, field-24)
parataxis(able-5, is-25)
nsubj(make-28, what-26)
aux(make-28, will-27)
ccomp(is-25, make-28)
nsubj(think-30, them-29)
ccomp(make-28, think-30)
advmod(think-30, twice-31)
prepc_before(think-30, attempting-33)
aux(use-35, to-34)
xcomp(attempting-33, use-35)
dobj(use-35, it-36)

