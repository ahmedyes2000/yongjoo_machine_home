(ROOT
  (S
    (S
      (NP
        (NP (NNP Gun) (NN control) (NNS laws))
        (PP (JJ such) (IN as)
          (NP (NNS minors))))
      (VP (MD ca) (RB n't)
        (VP (VB buy)
          (NP (PRP them)))))
    (, ,)
    (NP (NNS criminals))
    (VP (MD ca) (RB n't)
      (VP (VB buy)
        (NP (PRP them))
        (FRAG
          (ADVP (RB legally))
          (. .))))
    (. .)))

nn(laws-3, Gun-1)
nn(laws-3, control-2)
nsubj(buy-9, laws-3)
prep_such_as(laws-3, minors-6)
aux(buy-9, ca-7)
neg(buy-9, n't-8)
ccomp(buy-15, buy-9)
dobj(buy-9, them-10)
nsubj(buy-15, criminals-12)
aux(buy-15, ca-13)
neg(buy-15, n't-14)
root(ROOT-0, buy-15)
dobj(buy-15, them-16)
dep(buy-15, legally-17)

(ROOT
  (S
    (NP (DT Those))
    (VP (VBP are)
      (NP (JJ good) (NN gun) (NN control) (NNS laws)))
    (. .)))

nsubj(laws-6, Those-1)
cop(laws-6, are-2)
amod(laws-6, good-3)
nn(laws-6, gun-4)
nn(laws-6, control-5)
root(ROOT-0, laws-6)

(ROOT
  (S
    (S
      (VP (VBG Taking)
        (PRT (RP away))
        (NP (NNS guns))))
    (VP (VBZ is) (RB not)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB stop)
              (NP (NNS people))
              (PP (IN from)
                (S
                  (VP (VBG killing)
                    (NP (DT each) (JJ other))))))))))
    (. .)))

csubj(going-6, Taking-1)
prt(Taking-1, away-2)
dobj(Taking-1, guns-3)
aux(going-6, is-4)
neg(going-6, not-5)
root(ROOT-0, going-6)
aux(stop-8, to-7)
xcomp(going-6, stop-8)
dobj(stop-8, people-9)
prepc_from(stop-8, killing-11)
det(other-13, each-12)
dobj(killing-11, other-13)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP I))
          (VP (VBD wanted)
            (S
              (VP (TO to)
                (VP (VB kill)
                  (NP (NN someone))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD could)
        (VP (VB stick)
          (NP (PRP$ my) (NN pencil))
          (PP (IN alongside)
            (NP (PRP$ their) (NN eyeball))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD would)
        (VP (VB die))))
    (. .)))

mark(wanted-3, If-1)
nsubj(wanted-3, I-2)
xsubj(kill-5, I-2)
advcl(stick-10, wanted-3)
aux(kill-5, to-4)
xcomp(wanted-3, kill-5)
dobj(kill-5, someone-6)
nsubj(stick-10, I-8)
aux(stick-10, could-9)
root(ROOT-0, stick-10)
poss(pencil-12, my-11)
dobj(stick-10, pencil-12)
poss(eyeball-15, their-14)
prep_alongside(stick-10, eyeball-15)
nsubj(die-19, they-17)
aux(die-19, would-18)
conj_and(stick-10, die-19)

(ROOT
  (SQ
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP
          (VP (VB put)
            (NP (DT a) (NN detonator))
            (PP (IN in)
              (NP
                (NP (DT a) (NN bag))
                (PP (IN of)
                  (NP (NN chicken) (NN manure))))))
          (CC and)
          (VP (VB blow)
            (PRT (RP up))
            (NP
              (NP (DT a) (JJ whole) (NN car))
              (PP (JJ full) (IN of)
                (NP (NNS people))))))))
    (, ,)
    (SQ (MD should)
      (NP (PRP we))
      (VP (VB outlaw)
        (NP (NN chicken) (NN manure))))
    (. ?)))

nsubj(put-3, I-1)
nsubj(blow-13, I-1)
aux(put-3, could-2)
dep(outlaw-24, put-3)
det(detonator-5, a-4)
dobj(put-3, detonator-5)
det(bag-8, a-7)
prep_in(put-3, bag-8)
nn(manure-11, chicken-10)
prep_of(bag-8, manure-11)
conj_and(put-3, blow-13)
dep(outlaw-24, blow-13)
prt(blow-13, up-14)
det(car-17, a-15)
amod(car-17, whole-16)
dobj(blow-13, car-17)
dep(car-17, full-18)
prep_of(car-17, people-20)
aux(outlaw-24, should-22)
nsubj(outlaw-24, we-23)
root(ROOT-0, outlaw-24)
nn(manure-26, chicken-25)
dobj(outlaw-24, manure-26)

