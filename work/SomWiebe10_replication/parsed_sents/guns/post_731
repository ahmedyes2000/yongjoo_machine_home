(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (IN about)
        (S
          (VP (TO to)
            (VP (VB commend)
              (NP (PRP you))
              (PP (IN for)
                (S
                  (VP (VBG being)
                    (NP
                      (NP (CD one))
                      (PP (IN of)
                        (NP
                          (NP (DT the)
                            (QP (RB only) (DT no))
                            (NNS arguments))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBD offered)
                                (NP
                                  (NP (DT a) (NN calm))
                                  (, ,)
                                  (VP (VBN thought)
                                    (PP (IN out)
                                      (NP (NN statement)))))))))))))))))))
    (. .)))

nsubj(about-3, I-1)
xsubj(commend-5, I-1)
aux(about-3, was-2)
root(ROOT-0, about-3)
aux(commend-5, to-4)
xcomp(about-3, commend-5)
dobj(commend-5, you-6)
cop(one-9, being-8)
prepc_for(commend-5, one-9)
det(arguments-14, the-11)
quantmod(no-13, only-12)
num(arguments-14, no-13)
prep_of(one-9, arguments-14)
nsubj(offered-16, arguments-14)
rcmod(arguments-14, offered-16)
det(calm-18, a-17)
dobj(offered-16, calm-18)
partmod(calm-18, thought-20)
prep_out(thought-20, statement-22)

(ROOT
  (S (RB Then)
    (NP (PRP I))
    (VP (VBD read)
      (NP
        (NP (PRP$ your) (VBG Neutralizing) (NN argument))
        (CC and)
        (NP (VBN lost) (NN hope))))
    (. .)))

advmod(read-3, Then-1)
nsubj(read-3, I-2)
root(ROOT-0, read-3)
poss(argument-6, your-4)
amod(argument-6, Neutralizing-5)
dobj(read-3, argument-6)
amod(hope-9, lost-8)
dobj(read-3, hope-9)
conj_and(argument-6, hope-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see)
      (SBAR
        (S
          (NP (DT all) (NN life))
          (VP (VBZ is) (RB not)
            (NP (JJ precious))))))
    (. .)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)
det(life-4, all-3)
nsubj(precious-7, life-4)
cop(precious-7, is-5)
neg(precious-7, not-6)
ccomp(see-2, precious-7)

(ROOT
  (S
    (NP
      (NP (NN Someone))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD wold) (RB only)
            (VP (VB do)
              (NP (NN harm))
              (PP (TO to)
                (NP (NN thier) (NN society))))))))
    (VP (VBZ has)
      (NP
        (NP (DT no) (NN place))
        (PP (IN in)
          (NP (DT that) (NN society)))))
    (. .)))

nsubj(wold-3, Someone-1)
nsubj(has-10, Someone-1)
rcmod(Someone-1, wold-3)
advmod(wold-3, only-4)
dep(wold-3, do-5)
dobj(do-5, harm-6)
nn(society-9, thier-8)
prep_to(do-5, society-9)
root(ROOT-0, has-10)
det(place-12, no-11)
dobj(has-10, place-12)
det(society-15, that-14)
prep_in(place-12, society-15)

(ROOT
  (S (CC And)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (DT those))
        (PP (IN of)
          (NP (PRP us)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD would)
              (VP (VB be)
                (ADJP (JJ happy)
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP you))
                            (VP (VBP are)
                              (ADJP (JJ unwilling)
                                (CC or)
                                (JJ unable)
                                (S
                                  (VP (TO to)
                                    (VP (VB do)))))))))))))
              (, ,)
              (VP (VB remove)
                (NP (DT that) (NN person))
                (PP (IN from)
                  (NP (PRP$ our) (NN society)))))))))
    (. .)))

cc(are-3, And-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
nsubj(are-3, those-4)
nsubj(happy-10, those-4)
prep_of(those-4, us-6)
aux(happy-10, would-8)
cop(happy-10, be-9)
rcmod(those-4, happy-10)
aux(do-12, to-11)
xcomp(happy-10, do-12)
dobj(unwilling-16, what-13)
nsubj(unwilling-16, you-14)
nsubj(unable-18, you-14)
cop(unwilling-16, are-15)
ccomp(do-12, unwilling-16)
ccomp(do-12, unable-18)
conj_or(unwilling-16, unable-18)
aux(do-20, to-19)
xcomp(unwilling-16, do-20)
dep(happy-10, remove-22)
det(person-24, that-23)
dobj(remove-22, person-24)
poss(society-27, our-26)
prep_from(remove-22, society-27)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP me)))
    (NP (DT the)
      (ADJP (RBS most) (JJ intelligent))
      (NN choice))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB arm)
            (NP (PRP myself))
            (ADVP (RB equally)
              (NP
                (QP (CC or)
                  (JJR more))))
            (PP (IN than)
              (NP
                (NP (NN anyone))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (MD might)
                      (VP (VB choose)
                        (S
                          (VP (TO to)
                            (VP (VB do)
                              (NP (NN harm))
                              (PP (TO to)
                                (NP
                                  (NP (PRP me))
                                  (CC or)
                                  (NP (PRP$ my) (NN loved) (NNS ones)))))))))))))))))
    (. .)))

prep_to(is-7, me-2)
det(choice-6, the-3)
advmod(intelligent-5, most-4)
amod(choice-6, intelligent-5)
nsubj(is-7, choice-6)
xsubj(arm-9, choice-6)
root(ROOT-0, is-7)
aux(arm-9, to-8)
xcomp(is-7, arm-9)
dobj(arm-9, myself-10)
advmod(arm-9, equally-11)
cc(more-13, or-12)
pobj(equally-11, more-13)
prep_than(arm-9, anyone-15)
nsubj(choose-18, anyone-15)
aux(choose-18, might-17)
rcmod(anyone-15, choose-18)
aux(do-20, to-19)
xcomp(choose-18, do-20)
dobj(do-20, harm-21)
prep_to(do-20, me-23)
poss(ones-27, my-25)
nn(ones-27, loved-26)
prep_to(do-20, ones-27)
conj_or(me-23, ones-27)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is) (RB not)
      (ADJP (JJ lazy)
        (CC or)
        (JJ brutish)))
    (. .)))

nsubj(lazy-4, This-1)
nsubj(brutish-6, This-1)
cop(lazy-4, is-2)
neg(lazy-4, not-3)
root(ROOT-0, lazy-4)
conj_or(lazy-4, brutish-6)

(ROOT
  (S (CC And)
    (PP (IN beyond)
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP
            (NP (DT this))
            (NP (PRP$ your))))))
    (NP (`` ``) (DT all) (NN life))
    (VP (VBZ is)
      (NP
        (NP (JJ precious))
        ('' '')
        (SBAR
          (S
            (NP (NN argument))
            (VP (VBZ falls)
              (ADJP (JJ flat)
                (PP (IN in)
                  (NP (DT the) (NN fact))))
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (VBP support)
                    (NP
                      (NP (DT a) (NN government))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBD murders)
                            (NP
                              (NP (NNS millions))
                              (PP (IN of)
                                (NP (NNS innocents))))
                            (PP (IN through)
                              (NP (NN collateral) (NN damge)))))))))))))
        (PP (IN around)
          (NP
            (NP (DT the) (NN world))
            (VP (VBG fighting)
              (NP (JJ unjust) (NNS wars)))))))
    (. .)))

cc(precious-11, And-1)
prep_beyond(precious-11, all-3)
prep_of(all-3, this-5)
dep(this-5, your-6)
det(life-9, all-8)
nsubj(precious-11, life-9)
cop(precious-11, is-10)
root(ROOT-0, precious-11)
nsubj(falls-14, argument-13)
rcmod(precious-11, falls-14)
acomp(falls-14, flat-15)
det(fact-18, the-17)
prep_in(flat-15, fact-18)
complm(support-21, that-19)
nsubj(support-21, you-20)
ccomp(falls-14, support-21)
det(government-23, a-22)
dobj(support-21, government-23)
nsubj(murders-25, government-23)
rcmod(government-23, murders-25)
dobj(murders-25, millions-26)
prep_of(millions-26, innocents-28)
nn(damge-31, collateral-30)
prep_through(murders-25, damge-31)
det(world-34, the-33)
prep_around(precious-11, world-34)
partmod(world-34, fighting-35)
amod(wars-37, unjust-36)
dobj(fighting-35, wars-37)

(ROOT
  (S (CC But)
    (NP (DT the) (JJ real) (NN issue))
    (VP (VBZ is)
      (ADJP (JJ deterence)))
    (. .)))

cc(deterence-6, But-1)
det(issue-4, the-2)
amod(issue-4, real-3)
nsubj(deterence-6, issue-4)
cop(deterence-6, is-5)
root(ROOT-0, deterence-6)

(ROOT
  (S
    (NP
      (NP (JJS Most))
      (PP (IN of)
        (NP
          (NP (DT the) (NN time))
          (NP
            (NP (DT the) (JJ mere) (NN presence))
            (PP (IN of)
              (NP (DT an) (JJ armed) (NN citizen)))))))
    (VP (VBZ is)
      (ADJP (JJ enough)
        (S
          (VP (TO to)
            (VP (VB deter)
              (NP (DT any))
              (PP (IN from)
                (S
                  (ADVP (RB even))
                  (VP (VBG initiating)
                    (NP (DT an) (NN attack))))))))))
    (. .)))

nsubj(enough-13, Most-1)
det(time-4, the-3)
prep_of(Most-1, time-4)
det(presence-7, the-5)
amod(presence-7, mere-6)
dep(time-4, presence-7)
det(citizen-11, an-9)
amod(citizen-11, armed-10)
prep_of(presence-7, citizen-11)
cop(enough-13, is-12)
root(ROOT-0, enough-13)
aux(deter-15, to-14)
xcomp(enough-13, deter-15)
dobj(deter-15, any-16)
advmod(initiating-19, even-18)
prepc_from(deter-15, initiating-19)
det(attack-21, an-20)
dobj(initiating-19, attack-21)

