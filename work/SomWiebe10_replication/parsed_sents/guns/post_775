(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))

root(ROOT-0, 1-1)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (RB already) (JJ illegal)
          (PP (IN for)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP have)
                    (NP (DT a) (JJ mental) (NN illness)
                      (S
                        (VP (TO to)
                          (VP (VB poses)
                            (NP (DT a) (NN handgun))))))))))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD would)
        (ADVP (RB not)
          (PP (IN in)
            (NP (DT any) (NN state))))
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB obtain)
                  (S
                    (NP (DT a) (JJ concealed) (NNS weapons))
                    (VP (VB permit)
                      (SBAR (IN so)
                        (S
                          (NP (PRP$ your) (JJ first) (NN point))
                          (VP (VBZ is)
                            (NP (DT a) (JJ complete) (NN non-issue))))))))))))))
    (. .)))

nsubj(illegal-4, It-1)
cop(illegal-4, is-2)
advmod(illegal-4, already-3)
root(ROOT-0, illegal-4)
prep_for(illegal-4, those-6)
nsubj(have-8, those-6)
rcmod(those-6, have-8)
det(illness-11, a-9)
amod(illness-11, mental-10)
dobj(have-8, illness-11)
aux(poses-13, to-12)
infmod(illness-11, poses-13)
det(handgun-15, a-14)
dobj(poses-13, handgun-15)
nsubj(able-24, they-17)
aux(able-24, would-18)
neg(able-24, not-19)
det(state-22, any-21)
prep_in(not-19, state-22)
cop(able-24, be-23)
conj_and(illegal-4, able-24)
aux(obtain-26, to-25)
xcomp(able-24, obtain-26)
det(weapons-29, a-27)
amod(weapons-29, concealed-28)
nsubj(permit-30, weapons-29)
ccomp(obtain-26, permit-30)
mark(non-issue-38, so-31)
poss(point-34, your-32)
amod(point-34, first-33)
nsubj(non-issue-38, point-34)
cop(non-issue-38, is-35)
det(non-issue-38, a-36)
amod(non-issue-38, complete-37)
advcl(permit-30, non-issue-38)

(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))

root(ROOT-0, 2-1)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ does)
      (NP (DT this))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (S
                  (VP (VBG allowing)
                    (S
                      (NP (JJ licensed) (JJ concealed) (NN weapon))
                      (VP (VB permit)
                        (S
                          (NP (NNS holders))
                          (VP (TO to)
                            (VP (VB carry)
                              (PP (IN on)
                                (NP (NN campus))))))))))))))))
    (. ?)))

dep(have-4, What-1)
aux(have-4, does-2)
nsubj(have-4, this-3)
xsubj(do-6, this-3)
root(ROOT-0, have-4)
aux(do-6, to-5)
xcomp(have-4, do-6)
prepc_with(do-6, allowing-8)
amod(weapon-11, licensed-9)
amod(weapon-11, concealed-10)
nsubj(permit-12, weapon-11)
ccomp(allowing-8, permit-12)
nsubj(carry-15, holders-13)
aux(carry-15, to-14)
xcomp(permit-12, carry-15)
prep_on(carry-15, campus-17)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (CD 21))
                (PP (IN in)
                  (NP (JJS most) (NNS states)))))))
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (DT a) (NN permit)))))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (VP (VBG talking)
          (PP (IN about)
            (NP
              (NP (NNS colleges))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (PP (IN against)
                      (NP (JJ federal) (NN law)))
                    (S
                      (VP (TO to)
                        (VP (VB carry)
                          (PP (IN into)
                            (PP (TO to)
                              (NP (DT a) (NN K-12) (NN school)))))))))))))))
    (. .)))

nsubj(have-2, You-1)
xsubj(21-5, You-1)
xsubj(get-10, You-1)
root(ROOT-0, have-2)
aux(21-5, to-3)
cop(21-5, be-4)
xcomp(have-2, 21-5)
amod(states-8, most-7)
prep_in(21-5, states-8)
aux(get-10, to-9)
xcomp(have-2, get-10)
det(permit-12, a-11)
dobj(get-10, permit-12)
nsubj(talking-16, we-14)
aux(talking-16, are-15)
conj_and(have-2, talking-16)
prep_about(talking-16, colleges-18)
nsubj(is-20, it-19)
xsubj(carry-25, it-19)
rcmod(colleges-18, is-20)
amod(law-23, federal-22)
prep_against(is-20, law-23)
aux(carry-25, to-24)
xcomp(is-20, carry-25)
prep(carry-25, into-26)
pcomp(into-26, to-27)
det(school-30, a-28)
nn(school-30, K-12-29)
prep_to(into-26, school-30)

(ROOT
  (FRAG
    (NP (CD 3))
    (. .)))

root(ROOT-0, 3-1)

(ROOT
  (S
    (NP
      (NP
        (QP (RB Just) (RB about) (DT every))
        (NN party))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN been)
              (ADJP (RB too)
                (SBAR
                  (S
                    (VP (VBZ has)
                      (VP (VBN been)
                        (PP (IN off)
                          (NP (NN campus)))
                        (SBAR (RB so)
                          (WHADVP (WRB how))
                          (S
                            (VP (MD would)
                              (S
                                (VP (VBG allowing)
                                  (NP (NN permit) (NNS holders))
                                  (PP (IN on)
                                    (NP (NN campus))))))))))))))))))
    (VP (VBP have)
      (NP
        (NP (DT any) (NN effect))
        (PP (IN on)
          (NP (DT this)))))
    (. .)))

quantmod(every-3, Just-1)
quantmod(every-3, about-2)
num(party-4, every-3)
dobj(too-8, party-4)
nsubj(have-21, party-4)
nsubj(too-8, I-5)
aux(too-8, have-6)
cop(too-8, been-7)
rcmod(party-4, too-8)
aux(been-10, has-9)
dep(too-8, been-10)
prep_off(been-10, campus-12)
advmod(would-15, so-13)
advmod(would-15, how-14)
ccomp(been-10, would-15)
xcomp(would-15, allowing-16)
nn(holders-18, permit-17)
dobj(allowing-16, holders-18)
prep_on(allowing-16, campus-20)
root(ROOT-0, have-21)
det(effect-23, any-22)
dobj(have-21, effect-23)
prep_on(effect-23, this-25)

(ROOT
  (S
    (NP (JJ Permit) (NNS holders))
    (VP (VBP go)
      (PP (TO to)
        (NP
          (NP (NNS parties))
          (PP (IN off)
            (NP (NN campus)))))
      (NP
        (NP (PDT all) (DT the) (NNS times))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP have)
              (ADVP (RB yet))
              (S
                (VP (TO to)
                  (VP (VB hear)
                    (NP (DT any) (NNS stories))
                    (PP (IN from)
                      (NP (RB anywhere))))))))))
      (PP (IN in)
        (NP
          (NP (DT the) (NN country))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT a) (NN permit) (NN holder))
              (VP
                (VP (VBD got)
                  (ADVP (NN drunk)))
                (CC and)
                (VP (VBD did)
                  (NP (NN something)))))))))
    (. .)))

amod(holders-2, Permit-1)
nsubj(go-3, holders-2)
root(ROOT-0, go-3)
prep_to(go-3, parties-5)
prep_off(parties-5, campus-7)
predet(times-10, all-8)
det(times-10, the-9)
dobj(go-3, times-10)
dobj(have-12, times-10)
nsubj(have-12, I-11)
xsubj(hear-15, I-11)
rcmod(times-10, have-12)
advmod(have-12, yet-13)
aux(hear-15, to-14)
xcomp(have-12, hear-15)
det(stories-17, any-16)
dobj(hear-15, stories-17)
prep(hear-15, from-18)
pobj(from-18, anywhere-19)
det(country-22, the-21)
prep_in(go-3, country-22)
advmod(got-27, where-23)
det(holder-26, a-24)
nn(holder-26, permit-25)
nsubj(got-27, holder-26)
nsubj(did-30, holder-26)
rcmod(country-22, got-27)
advmod(got-27, drunk-28)
rcmod(country-22, did-30)
conj_and(got-27, did-30)
dobj(did-30, something-31)

(ROOT
  (S
    (ADVP (RB Also))
    (NP (DT no) (NN permit) (NN holder))
    (VP (MD would)
      (VP
        (VP (VB carry))
        (CC and)
        (ADVP (RB then))
        (VP (VB drink)
          (S
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (RB already) (JJ illegal))))
            (CC and)
            (S
              (NP (PRP they))
              (VP (MD would)
                (VP (VB have)
                  (NP
                    (NP (PRP$ their) (NN permit))
                    (VP (VBN revoked)
                      (SBAR (IN if)
                        (S
                          (NP (PRP they))
                          (VP (VBD got)
                            (VP (VBN caught))))))))))))))
    (. .)))

advmod(carry-6, Also-1)
det(holder-4, no-2)
nn(holder-4, permit-3)
nsubj(carry-6, holder-4)
nsubj(drink-9, holder-4)
aux(carry-6, would-5)
root(ROOT-0, carry-6)
advmod(carry-6, then-8)
conj_and(carry-6, then-8)
conj_and(carry-6, drink-9)
nsubj(illegal-13, it-10)
cop(illegal-13, is-11)
advmod(illegal-13, already-12)
dep(drink-9, illegal-13)
nsubj(have-17, they-15)
aux(have-17, would-16)
dep(drink-9, have-17)
conj_and(illegal-13, have-17)
poss(permit-19, their-18)
dobj(have-17, permit-19)
partmod(permit-19, revoked-20)
mark(caught-24, if-21)
nsubjpass(caught-24, they-22)
auxpass(caught-24, got-23)
advcl(revoked-20, caught-24)

