(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB need)
        (NP (DT a) (NN permit)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (DT a) (NN gun))
                  (PP (IN at)
                    (NP (DT a) (NN keg) (NN party))))))))))
    (. .)))

nsubj(need-4, You-1)
aux(need-4, do-2)
neg(need-4, n't-3)
root(ROOT-0, need-4)
det(permit-6, a-5)
dobj(need-4, permit-6)
aux(have-8, to-7)
infmod(permit-6, have-8)
det(gun-10, a-9)
dobj(have-8, gun-10)
det(party-14, a-12)
nn(party-14, keg-13)
prep_at(gun-10, party-14)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (NNS people))
      (VP (VB keep)
        (S
          (VP (VBG going)
            (PRT (RP back))
            (PP (TO to)
              (NP (DT the) (NN keg) (NN party) (NN thing)))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (VP (VBG talking)
              (PP (IN about)
                (S
                  (VP (VBG carrying)
                    (PP (IN on)
                      (NP (NN campus)))))))))))
    (. ?)))

advmod(keep-4, Why-1)
aux(keep-4, do-2)
nsubj(keep-4, people-3)
root(ROOT-0, keep-4)
xcomp(keep-4, going-5)
prt(going-5, back-6)
det(thing-11, the-8)
nn(thing-11, keg-9)
nn(thing-11, party-10)
prep_to(going-5, thing-11)
advmod(talking-13, when-12)
advcl(keep-4, talking-13)
prepc_about(talking-13, carrying-15)
prep_on(carrying-15, campus-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NN anything))))))))
    (. .)))

nsubj(has-2, It-1)
root(ROOT-0, has-2)
dobj(has-2, nothing-3)
aux(do-5, to-4)
infmod(nothing-3, do-5)
prep_with(do-5, anything-7)

(ROOT
  (S
    (NP
      (NP (NNP Plenty))
      (PP (IN of)
        (NP (NN college) (NNS kids))))
    (VP (VBP dont)
      (SBAR (RB even)
        (S
          (NP
            (NP (NN drink))
            (CC and)
            (NP (JJS most)))
          (VP (VBP are)
            (NP (NNP ACTUALLY) (NNP ADULTS))
            (PP (IN WITH)
              (NP (NNP COMMON) (NNP SENSE)))))))
    (. .)))

nsubj(dont-5, Plenty-1)
nn(kids-4, college-3)
prep_of(Plenty-1, kids-4)
root(ROOT-0, dont-5)
advmod(ADULTS-12, even-6)
nsubj(ADULTS-12, drink-7)
conj_and(drink-7, most-9)
nsubj(ADULTS-12, most-9)
cop(ADULTS-12, are-10)
nn(ADULTS-12, ACTUALLY-11)
ccomp(dont-5, ADULTS-12)
nn(SENSE-15, COMMON-14)
prep_with(ADULTS-12, SENSE-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (NN anyone))
          (PP (IN with)
            (NP (DT a) (NN permit))))
        (VP (VBZ gets)
          (VP (VBN caught)
            (S
              (VP (VBG drinking)
                (SBAR (IN while)
                  (S
                    (VP (VBG carrying))))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD can)
      (VP (VB have)
        (NP
          (NP (NN thier) (NN license))
          (VP (VBN revoked)))))
    (. .)))

mark(caught-7, If-1)
nsubjpass(caught-7, anyone-2)
det(permit-5, a-4)
prep_with(anyone-2, permit-5)
auxpass(caught-7, gets-6)
advcl(have-14, caught-7)
xcomp(caught-7, drinking-8)
mark(carrying-10, while-9)
advcl(drinking-8, carrying-10)
nsubj(have-14, they-12)
aux(have-14, can-13)
root(ROOT-0, have-14)
nn(license-16, thier-15)
dobj(have-14, license-16)
partmod(license-16, revoked-17)

(ROOT
  (S
    (SBAR (IN Once)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP (DT that) (NN permit)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP dont)
      (SBAR
        (S
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP (NN anything))
                  (S
                    (VP (TO to)
                      (VP (VB risk)
                        (S
                          (VP (VBG loosing)
                            (NP (PRP it))))))))))))))
    (. .)))

mark(have-3, Once-1)
nsubj(have-3, you-2)
advcl(dont-8, have-3)
det(permit-5, that-4)
dobj(have-3, permit-5)
nsubj(dont-8, you-7)
root(ROOT-0, dont-8)
ccomp(dont-8, want-9)
aux(do-11, to-10)
xcomp(want-9, do-11)
dobj(do-11, anything-12)
aux(risk-14, to-13)
xcomp(do-11, risk-14)
xcomp(risk-14, loosing-15)
dobj(loosing-15, it-16)

(ROOT
  (S
    (NP (JJ Conceal) (NNS carriers))
    (VP (VBP are)
      (VP
        (NP
          (QP (CD 6) (NNS times))
          (NNS LESS))
        (ADJP (JJ likely)
          (S
            (VP (TO to)
              (VP (VB commit)
                (NP
                  (NP (DT a) (NN crime))
                  (PP (IN than)
                    (NP (NN someone))))
                (PP (IN without)
                  (NP (DT a) (NN permit)))))))))
    (. .)))

amod(carriers-2, Conceal-1)
nsubj(likely-7, carriers-2)
aux(likely-7, are-3)
number(times-5, 6-4)
num(LESS-6, times-5)
dobj(likely-7, LESS-6)
root(ROOT-0, likely-7)
aux(commit-9, to-8)
xcomp(likely-7, commit-9)
det(crime-11, a-10)
dobj(commit-9, crime-11)
prep_than(crime-11, someone-13)
det(permit-16, a-15)
prep_without(commit-9, permit-16)

(ROOT
  (S
    (VP (VB Its)
      (NP (DT a) (NN fact)))
    (. .)))

root(ROOT-0, Its-1)
det(fact-3, a-2)
dobj(Its-1, fact-3)

(ROOT
  (S
    (NP
      (NP (JJS Most) (NNS people))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP argue)
            (PP (IN against)
              (S
                (VP (VBG carrying))))))))
    (VP (VBP are)
      (ADJP (RB just) (JJ uninformed)))
    (. .)))

amod(people-2, Most-1)
nsubj(argue-4, people-2)
nsubj(uninformed-9, people-2)
rcmod(people-2, argue-4)
prepc_against(argue-4, carrying-6)
cop(uninformed-9, are-7)
advmod(uninformed-9, just-8)
root(ROOT-0, uninformed-9)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB only))
    (VP (VBZ takes)
      (PP
        (NP
          (QP (RB about) (CD 30))
          (NNS minutes))
        (IN with)
        (NP (NNP Mr) (NNP Google)))
      (S
        (VP (TO to)
          (VP (VB get)
            (NP (DT the) (NNS facts))))))
    (. .)))

nsubj(takes-3, It-1)
xsubj(get-11, It-1)
advmod(takes-3, only-2)
root(ROOT-0, takes-3)
quantmod(30-5, about-4)
num(minutes-6, 30-5)
npadvmod(takes-3, minutes-6)
nn(Google-9, Mr-8)
prep_with(takes-3, Google-9)
aux(get-11, to-10)
xcomp(takes-3, get-11)
det(facts-13, the-12)
dobj(get-11, facts-13)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB trust)
      (NP (DT a) (NN cop) (NN firing))
      (PRT (RP back))
      (PP (IN at)
        (NP (DT a) (NN killer))))
    (. ?)))

aux(trust-3, Do-1)
nsubj(trust-3, you-2)
root(ROOT-0, trust-3)
det(firing-6, a-4)
nn(firing-6, cop-5)
dobj(trust-3, firing-6)
prt(trust-3, back-7)
det(killer-10, a-9)
prep_at(trust-3, killer-10)

(ROOT
  (S
    (NP (DT The) (NN fact))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (RBS most) (JJ conceal) (NN weapon) (NNS carriers))
          (VP (MD can)
            (ADVP (RB out))
            (VP (VB shoot)
              (NP (DT a) (NN cop)))))))
    (. .)))

det(fact-2, The-1)
nsubj(is-3, fact-2)
root(ROOT-0, is-3)
advmod(carriers-8, most-5)
amod(carriers-8, conceal-6)
nn(carriers-8, weapon-7)
nsubj(shoot-11, carriers-8)
aux(shoot-11, can-9)
advmod(shoot-11, out-10)
ccomp(is-3, shoot-11)
det(cop-13, a-12)
dobj(shoot-11, cop-13)

(ROOT
  (S
    (NP (PRP We))
    (VP (VB practice)
      (NP (JJR more))
      (SBAR (IN than)
        (S
          (NP (NNS cops))
          (VP (VBP do)))))
    (. .)))

nsubj(practice-2, We-1)
root(ROOT-0, practice-2)
dobj(practice-2, more-3)
mark(do-6, than-4)
nsubj(do-6, cops-5)
advcl(practice-2, do-6)

(ROOT
  (S
    (NP (DT These))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP
            (NP (CD 21) (NN year) (JJ old) (NNS students))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (VP (VBG carrying)
                    (PP (IN in)
                      (NP (NNP Walmart))))))))
          (PRN (-LRB- -LRB-)
            (S
              (ADVP (RB then))
              (VP
                (ADVP (RB maybe))
                (VB go)
                (PP (TO to)
                  (NP (DT a) (NN keg) (NN party)))))
            (-RRB- -RRB-)))))
    (. .)))

nsubj(students-7, These-1)
aux(students-7, would-2)
cop(students-7, be-3)
num(students-7, 21-4)
nn(students-7, year-5)
amod(students-7, old-6)
root(ROOT-0, students-7)
nsubj(carrying-10, students-7)
aux(carrying-10, are-9)
rcmod(students-7, carrying-10)
prep_in(carrying-10, Walmart-12)
advmod(go-16, then-14)
advmod(go-16, maybe-15)
dep(students-7, go-16)
det(party-20, a-18)
nn(party-20, keg-19)
prep_to(go-16, party-20)

(ROOT
  (S
    (NP (NNS Cops))
    (ADVP (RB only))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB qualify)
            (PP (IN with)
              (NP (PRP$ their) (NN weapon)))
            (NP (RB once) (DT a) (NN year))))))
    (. .)))

nsubj(have-3, Cops-1)
xsubj(qualify-5, Cops-1)
advmod(have-3, only-2)
root(ROOT-0, have-3)
aux(qualify-5, to-4)
xcomp(have-3, qualify-5)
poss(weapon-8, their-7)
prep_with(qualify-5, weapon-8)
advmod(year-11, once-9)
det(year-11, a-10)
tmod(qualify-5, year-11)

(ROOT
  (S
    (NP (DT Some) (NN practice))
    (ADJP (RB very) (JJ little)
      (PP (IN in)
        (NP (NN betwwen) (NN time))))
    (. .)))

det(practice-2, Some-1)
dep(little-4, practice-2)
advmod(little-4, very-3)
root(ROOT-0, little-4)
nn(time-7, betwwen-6)
prep_in(little-4, time-7)

(ROOT
  (S
    (NP
      (ADJP (RBS Most) (JJ conceal))
      (NNS carriers) (NN practice))
    (VP (VBD atleast)
      (ADVP (RB once))
      (NP (DT a) (NN month)))
    (. .)))

advmod(conceal-2, Most-1)
amod(practice-4, conceal-2)
nn(practice-4, carriers-3)
nsubj(atleast-5, practice-4)
root(ROOT-0, atleast-5)
advmod(atleast-5, once-6)
det(month-8, a-7)
tmod(atleast-5, month-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (S
          (NP (PRP$ my) (NN child))
          (VP (VBD was)
            (VP (VBG sitting)
              (PP (IN in)
                (NP
                  (NP (DT a) (NN classroom))
                  (PP (IN with)
                    (NP (DT the) (NNS doors) (NN barricaded))))))))
        (CC and)
        (S
          (NP (EX there))
          (VP (VBD was)
            (NP (DT a) (NN man))
            (PP (IN with)
              (NP
                (NP (DT a) (NN gun))
                (VP
                  (ADVP (RB coldly))
                  (VBG shooting)
                  (NP (NNS people)))))
            (, ,)
            (S
              (NP (PRP you))
              (ADJP (RB damned) (JJ right)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (MD 'd)
                      (VP (VB hope)
                        (NP (NN someone))))))))))))
    (, ,)
    (ADVP (RB ANYONE))
    (, ,)
    (VP (MD would)
      (VP (VB be)
        (S
          (NP (EX there))
          (VP (TO to)
            (VP (VB save)
              (NP (PRP$ my) (NNS daughters) (NN life)))))))
    (. .)))

mark(sitting-5, If-1)
poss(child-3, my-2)
nsubj(sitting-5, child-3)
aux(sitting-5, was-4)
advcl(be-36, sitting-5)
det(classroom-8, a-7)
prep_in(sitting-5, classroom-8)
det(barricaded-12, the-10)
nn(barricaded-12, doors-11)
prep_with(classroom-8, barricaded-12)
expl(was-15, there-14)
conj_and(sitting-5, was-15)
advcl(be-36, was-15)
det(man-17, a-16)
nsubj(was-15, man-17)
det(gun-20, a-19)
prep_with(was-15, gun-20)
advmod(shooting-22, coldly-21)
partmod(gun-20, shooting-22)
dobj(shooting-22, people-23)
nsubj(right-27, you-25)
advmod(right-27, damned-26)
xcomp(was-15, right-27)
nsubj(hope-30, I-28)
aux(hope-30, 'd-29)
dep(right-27, hope-30)
dobj(hope-30, someone-31)
advmod(be-36, ANYONE-33)
aux(be-36, would-35)
root(ROOT-0, be-36)
expl(save-39, there-37)
aux(save-39, to-38)
xcomp(be-36, save-39)
poss(life-42, my-40)
nn(life-42, daughters-41)
dobj(save-39, life-42)
nsubj(save-39, life-42)

(ROOT
  (S
    (ADVP (RB Even) (RB better))
    (, ,)
    (S
      (NP (NNP MY) (NNP DAUGHTER) (NNP BE) (NNP GIVEN) (NNP THE) (NNP RIGHT) (NNP TO))
      (VP (VBD DEFEND)
        (NP
          (NP (NNP HER) (NNP OWN) (NNP LIFE))
          (PP (IN on)
            (NP (NN campus))))))
    (CC and)
    (S
      (ADVP (RB anywhere) (RB else))
      (NP (PRP she))
      (VP (MD may)
        (VP (VB be))))
    (. .)))

advmod(better-2, Even-1)
advmod(DEFEND-11, better-2)
nn(TO-10, MY-4)
nn(TO-10, DAUGHTER-5)
nn(TO-10, BE-6)
nn(TO-10, GIVEN-7)
nn(TO-10, THE-8)
nn(TO-10, RIGHT-9)
nsubj(DEFEND-11, TO-10)
root(ROOT-0, DEFEND-11)
nn(LIFE-14, HER-12)
nn(LIFE-14, OWN-13)
dobj(DEFEND-11, LIFE-14)
prep_on(LIFE-14, campus-16)
advmod(else-19, anywhere-18)
advmod(be-22, else-19)
nsubj(be-22, she-20)
aux(be-22, may-21)
conj_and(DEFEND-11, be-22)

(ROOT
  (S
    (PP (TO To)
      (NP
        (NP (DT all))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP doubt)
              (NP (DT this)))))))
    (, ,)
    (NP (FW i))
    (VP (VBP ask)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP
            (VP (VBP do)
              (NP (NN research)))
            (CC and)
            (VP (VBP see)
              (NP (DT the) (NNS facts)))))))
    (. .)))

nsubj(doubt-4, all-2)
prep_to(ask-8, all-2)
rcmod(all-2, doubt-4)
dobj(doubt-4, this-5)
nsubj(ask-8, i-7)
root(ROOT-0, ask-8)
complm(do-11, that-9)
nsubj(do-11, you-10)
nsubj(see-14, you-10)
ccomp(ask-8, do-11)
dobj(do-11, research-12)
ccomp(ask-8, see-14)
conj_and(do-11, see-14)
det(facts-16, the-15)
dobj(see-14, facts-16)

(ROOT
  (UCP
    (NP
      (NP (RB Not) (NNS studies))
      (PP (IN by)
        (NP (DT the) (NNP NRA))))
    (, ,)
    (CC but)
    (PP (IN by)
      (NP
        (NP (DT the) (NNS states))
        (, ,)
        (NP (NNP ATF) (NNS studies) (NN etc.))))))

neg(studies-2, Not-1)
root(ROOT-0, studies-2)
det(NRA-5, the-4)
prep_by(studies-2, NRA-5)
conj_but(studies-2, by-8)
det(states-10, the-9)
prep_by(studies-2, states-10)
nn(etc.-14, ATF-12)
nn(etc.-14, studies-13)
appos(states-10, etc.-14)

(ROOT
  (FRAG
    (ADVP (RB Then))
    (RB maybe)
    (PP (VBG going)
      (PP (IN out)
        (NP
          (S
            (VP (TO to)
              (VP (VB eat)
                (SBAR (IN while)
                  (S
                    (VP (VBG carrying)))))))
          (PRN (-LRB- -LRB-)
            (S
              (ADVP (RB then))
              (VP
                (ADVP (RB maybe))
                (VB go)
                (PP (TO to)
                  (NP (DT a) (NN keg) (NN party)))))
            (-RRB- -RRB-)))))
    (. .)))

dep(maybe-2, Then-1)
root(ROOT-0, maybe-2)
dep(maybe-2, going-3)
pcomp(going-3, out-4)
aux(eat-6, to-5)
dep(go-12, eat-6)
mark(carrying-8, while-7)
advcl(eat-6, carrying-8)
advmod(go-12, then-10)
advmod(go-12, maybe-11)
prep_out(going-3, go-12)
det(party-16, a-14)
nn(party-16, keg-15)
prep_to(go-12, party-16)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (VP (VBP go))
      (NP
        (NP (NN home))
        (VP (VBG carrying))))
    (, ,)
    (PRN (-LRB- -LRB-)
      (S
        (ADVP (RB Then))
        (VP
          (ADVP (RB maybe))
          (VB go)
          (PP (TO to)
            (NP (DT a) (NN keg) (NN party)))))
      (-RRB- -RRB-))
    (. .)))

advmod(go-2, Then-1)
root(ROOT-0, go-2)
dep(go-2, home-3)
partmod(home-3, carrying-4)
advmod(go-9, Then-7)
advmod(go-9, maybe-8)
dep(go-2, go-9)
det(party-13, a-11)
nn(party-13, keg-12)
prep_to(go-9, party-13)

(ROOT
  (S (RB Then)
    (ADVP (RB maybe))
    (NP (NNP GO) (NNP TO))
    (VP (VBZ CLASS)
      (S
        (VP (VBG carrying)
          (S (-LRB- -LRB-)
            (NP (RB then))
            (ADVP (RB maybe))
            (VP (VB go)
              (PP (TO to)
                (NP (DT a) (JJ keg) (NN party) (-RRB- -RRB-)))
              (. .))))))
    (. .)))

advmod(CLASS-5, Then-1)
advmod(CLASS-5, maybe-2)
nn(TO-4, GO-3)
nsubj(CLASS-5, TO-4)
root(ROOT-0, CLASS-5)
xcomp(CLASS-5, carrying-6)
nsubj(go-10, then-8)
advmod(go-10, maybe-9)
ccomp(carrying-6, go-10)
det(party-14, a-12)
amod(party-14, keg-13)
prep_to(go-10, party-14)

(ROOT
  (SQ
    (VP (VB Whats)
      (NP (DT the) (NN difference))
      (ADVP (RB here)))
    (. ?)))

root(ROOT-0, Whats-1)
det(difference-3, the-2)
dobj(Whats-1, difference-3)
advmod(Whats-1, here-4)

(ROOT
  (S
    (NP (DT These) (NNS kids))
    (VP (VBP are)
      (VP (VBG doing)
        (NP
          (NP (DT all))
          (PP (IN of)
            (NP (DT this))))
        (ADVP (RB already))))
    (. .)))

det(kids-2, These-1)
nsubj(doing-4, kids-2)
aux(doing-4, are-3)
root(ROOT-0, doing-4)
dobj(doing-4, all-5)
prep_of(all-5, this-7)
advmod(doing-4, already-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ illegal)
        (S
          (VP (TO to)
            (VP (VB carry)
              (NP (NN while) (NN drinking)))))))
    (. .)))

nsubj(illegal-3, It-1)
cop(illegal-3, 's-2)
root(ROOT-0, illegal-3)
aux(carry-5, to-4)
xcomp(illegal-3, carry-5)
nn(drinking-7, while-6)
dobj(carry-5, drinking-7)

(ROOT
  (S
    (NP (JJS Most) (NNS people))
    (VP (VBP dont)
      (S
        (S
          (VP (`` ``) (VB flash)
            (NP (PRP$ their) (NNS guns) (RB around))
            ('' '')))
        (SBARQ
          (WHADVP (WRB Why))
          (SQ (VBZ is)
            (NP (PRP it)))))
      (SBAR (IN that)
        (S
          (S
            (ADVP (RB everywhere) (RB else))
            (NP (PRP they))
            (VP (VBP carry) (, ,)
              (S
                (NP (PRP they))
                (VP (VB act)
                  (ADVP (RB responsibly))))))
          (, ,)
          (CC but)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP they))
                (VP (VBP carry)
                  (PP (IN on)
                    (NP (NN campus))))))
            (NP (PRP they))
            (VP (VBP 're)
              (NP
                (NP (NN gonna))
                (VP (`` ``) (VBP go)
                  (PRT (RP off))
                  ('' ''))))))))
    (. .)))

amod(people-2, Most-1)
nsubj(dont-3, people-2)
root(ROOT-0, dont-3)
dep(dont-3, flash-5)
poss(guns-7, their-6)
dobj(flash-5, guns-7)
advmod(guns-7, around-8)
advmod(is-11, Why-10)
dep(flash-5, is-11)
nsubj(is-11, it-12)
complm(carry-17, that-13)
advmod(else-15, everywhere-14)
advmod(carry-17, else-15)
nsubj(carry-17, they-16)
ccomp(dont-3, carry-17)
nsubj(act-20, they-19)
ccomp(carry-17, act-20)
advmod(act-20, responsibly-21)
mark(carry-26, if-24)
nsubj(carry-26, they-25)
advcl(gonna-31, carry-26)
prep_on(carry-26, campus-28)
nsubj(gonna-31, they-29)
cop(gonna-31, 're-30)
ccomp(dont-3, gonna-31)
conj_but(carry-17, gonna-31)
dep(gonna-31, go-33)
prt(go-33, off-34)

