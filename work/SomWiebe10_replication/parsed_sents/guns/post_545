(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN of)
        (NP
          (NP (DT the) (NNS measures))
          (SBAR
            (WHPP (IN by)
              (WHNP (WDT which)))
            (S
              (NP (PRP it))
              (VP (VBZ becomes)
                (ADJP (JJ obvious))
                (SBAR (IN that)
                  (S
                    (NP (PRP$ your) (JJ elected) (NNS officials))
                    (VP (VBP need)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN replaced))))))))))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN development))
        (PP (IN of)
          (NP (DT the) (JJ circular) (NN argument)))))
    (. .)))

nsubj(development-20, One-1)
det(measures-4, the-3)
prep_of(One-1, measures-4)
rel(obvious-9, which-6)
nsubj(obvious-9, it-7)
cop(obvious-9, becomes-8)
rcmod(measures-4, obvious-9)
complm(need-14, that-10)
poss(officials-13, your-11)
amod(officials-13, elected-12)
nsubj(need-14, officials-13)
xsubj(replaced-17, officials-13)
ccomp(obvious-9, need-14)
aux(replaced-17, to-15)
auxpass(replaced-17, be-16)
xcomp(need-14, replaced-17)
cop(development-20, is-18)
det(development-20, the-19)
root(ROOT-0, development-20)
det(argument-24, the-22)
amod(argument-24, circular-23)
prep_of(development-20, argument-24)

(ROOT
  (S
    (NP
      (NP (NNP Possession))
      (PP (IN of)
        (NP
          (NP (DT a) (NN license))
          (, ,)
          (NP (NN nuff)))))
    (VP (VBD said))
    (. .)))

nsubj(said-7, Possession-1)
det(license-4, a-3)
prep_of(Possession-1, license-4)
appos(license-4, nuff-6)
root(ROOT-0, said-7)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (VP
      (VP (VBG qualifying)
        (PP (IN for))
        (, ,)
        (S
          (VP (VBG being)
            (ADJP (JJ able) (RB financially)
              (S
                (VP (TO to)
                  (VP (VB pay)
                    (PP (IN for)
                      (NP (PRP it))))))))))
      (, ,)
      (CONJP (IN in) (NN addition) (TO to))
      (VP (VBG waiting)
        (NP
          (NP (DT a) (JJ significant) (NN portion))
          (PP (IN of)
            (NP (PRP$ your) (NN lifetime)
              (S
                (VP (TO to)
                  (VP (VB get)))))))))
    (VP (VBD said)
      (SBAR
        (S
          (NP (NN license))
          (VP (MD should)
            (VP (VB be)
              (NP
                (NP (DT the) (NN clue))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (NP
                        (NP (NN time))
                        (PP (IN for)
                          (NP (NN change)))))))))))))
    (. .)))

advmod(qualifying-3, However-1)
root(ROOT-0, qualifying-3)
prep(qualifying-3, for-4)
cop(able-7, being-6)
xcomp(qualifying-3, able-7)
advmod(able-7, financially-8)
aux(pay-10, to-9)
xcomp(able-7, pay-10)
prep_for(pay-10, it-12)
conj_in(qualifying-3, waiting-17)
det(portion-20, a-18)
amod(portion-20, significant-19)
dobj(waiting-17, portion-20)
poss(lifetime-23, your-22)
prep_of(portion-20, lifetime-23)
aux(get-25, to-24)
infmod(lifetime-23, get-25)
dep(qualifying-3, said-26)
nsubj(clue-31, license-27)
aux(clue-31, should-28)
cop(clue-31, be-29)
det(clue-31, the-30)
ccomp(said-26, clue-31)
nsubj(time-34, it-32)
cop(time-34, is-33)
rcmod(clue-31, time-34)
prep_for(time-34, change-36)

