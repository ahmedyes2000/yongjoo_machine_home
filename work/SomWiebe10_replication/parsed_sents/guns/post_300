(ROOT
  (S
    (ADVP (RB SocialistBetty))
    (, ,)
    (SBAR (IN while)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG calling)
            (NP (NNS names))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (NP
        (NP (DT the) (NN one))
        (SBAR
          (WHNP (WP who))
          (S
            (NP (PRP it))
            (NP (DT the) (NN idiot))))))
    (. .)))

advmod(one-12, SocialistBetty-1)
mark(calling-6, while-3)
nsubj(calling-6, you-4)
aux(calling-6, are-5)
advcl(one-12, calling-6)
dobj(calling-6, names-7)
nsubj(one-12, you-9)
cop(one-12, are-10)
det(one-12, the-11)
root(ROOT-0, one-12)
dep(idiot-16, one-12)
dep(idiot-16, it-14)
det(idiot-16, the-15)
rcmod(one-12, idiot-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB see)
        (NP
          (NP (DT the) (NN forest))
          (PP (IN for)
            (NP (DT the) (NNS trees))))))
    (. .)))

nsubj(see-4, You-1)
aux(see-4, ca-2)
neg(see-4, n't-3)
root(ROOT-0, see-4)
det(forest-6, the-5)
dobj(see-4, forest-6)
det(trees-9, the-8)
prep_for(forest-6, trees-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP (PDT such) (DT a) (NN lunatic))
          (VP (MD would)
            (VP
              (VP (VB get)
                (NP
                  (NP (DT a) (NN gun))
                  (PRN (-LRB- -LRB-)
                    (CC or)
                    (NP
                      (NP (DT a) (NN bowling))
                      (NP (NN ball)))
                    (-RRB- -RRB-))))
              (CC and)
              (VP (VB try)
                (S
                  (VP (TO to)
                    (VP (VB kill)
                      (CC or)
                      (VB maim)
                      (NP (NNS people))
                      (SBAR (IN whether)
                        (S
                          (NP (EX there))
                          (VP (VBP are)
                            (NP (NN gun) (NN control) (NNS laws))))
                        (CC or)
                        (RB not)))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
complm(get-8, that-3)
predet(lunatic-6, such-4)
det(lunatic-6, a-5)
nsubj(get-8, lunatic-6)
nsubj(try-18, lunatic-6)
xsubj(kill-20, lunatic-6)
aux(get-8, would-7)
ccomp(think-2, get-8)
det(gun-10, a-9)
dobj(get-8, gun-10)
dep(bowling-14, or-12)
det(bowling-14, a-13)
dep(gun-10, bowling-14)
dep(bowling-14, ball-15)
ccomp(think-2, try-18)
conj_and(get-8, try-18)
aux(kill-20, to-19)
xcomp(try-18, kill-20)
xcomp(try-18, maim-22)
conj_or(kill-20, maim-22)
dobj(kill-20, people-23)
complm(are-26, whether-24)
expl(are-26, there-25)
ccomp(kill-20, are-26)
nn(laws-29, gun-27)
nn(laws-29, control-28)
nsubj(are-26, laws-29)
ccomp(kill-20, not-31)
conj_or(are-26, not-31)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ is)
          (VP (VBG doing)
            (NP (NN something))
            (PP (IN like)
              (NP (DT that)))))))
    (, ,) (MD would) (RB n't)
    (NP (PRP you))
    (VP (VB prefer)
      (SBAR (IN that)
        (S
          (NP
            (NP (PRP I))
            (PRN (-LRB- -LRB-)
              (NP (DT a) (NN law)
                (S
                  (VP (VBG abiding)
                    (NP (NN citizen)))))
              (-RRB- -RRB-)))
          (VP (VBP have)
            (NP (DT a) (NN gun)
              (S
                (VP (TO to)
                  (VP (VB stop)
                    (NP (DT this) (JJ dangerous) (NN activity))))))))))
    (. ?)))

mark(doing-4, If-1)
nsubj(doing-4, someone-2)
aux(doing-4, is-3)
advcl(prefer-12, doing-4)
dobj(doing-4, something-5)
prep_like(doing-4, that-7)
aux(prefer-12, would-9)
neg(prefer-12, n't-10)
nsubj(prefer-12, you-11)
root(ROOT-0, prefer-12)
complm(have-21, that-13)
nsubj(have-21, I-14)
det(law-17, a-16)
appos(I-14, law-17)
dep(law-17, abiding-18)
dobj(abiding-18, citizen-19)
ccomp(prefer-12, have-21)
det(gun-23, a-22)
dobj(have-21, gun-23)
aux(stop-25, to-24)
infmod(gun-23, stop-25)
det(activity-28, this-26)
amod(activity-28, dangerous-27)
dobj(stop-25, activity-28)

(ROOT
  (NP
    (NP (NNP Middle))
    (PP (IN of)
      (NP (NN dinner)))
    (. ?)))

root(ROOT-0, Middle-1)
prep_of(Middle-1, dinner-3)

(ROOT
  (S
    (VP (VB Ha))
    (. !)))

root(ROOT-0, Ha-1)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBD broke)
          (PP (IN into)
            (NP (PRP$ my) (NN home)))
          (PP (IN in)
            (NP
              (NP (DT the) (NN middle))
              (PP (IN of)
                (NP (NN dinner) (NN he\/she\/it))))))))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (JJ swiss) (NN cheese))
          (PP (IN in)
            (NP (JJ short) (NN order))))))
    (. .)))

mark(broke-3, If-1)
nsubj(broke-3, someone-2)
csubj(cheese-16, broke-3)
poss(home-6, my-5)
prep_into(broke-3, home-6)
det(middle-9, the-8)
prep_in(broke-3, middle-9)
nn(he\/she\/it-12, dinner-11)
prep_of(middle-9, he\/she\/it-12)
aux(cheese-16, would-13)
cop(cheese-16, be-14)
amod(cheese-16, swiss-15)
root(ROOT-0, cheese-16)
amod(order-19, short-18)
prep_in(cheese-16, order-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD would)
        (VP (VB be)
          (ADJP (RB pretty) (JJ messy)))))
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD would) (RB n't)
        (VP (VB disturb)
          (NP (PRP$ my) (NN dinner)))))
    (. .)))

nsubj(messy-5, It-1)
aux(messy-5, would-2)
cop(messy-5, be-3)
advmod(messy-5, pretty-4)
root(ROOT-0, messy-5)
nsubj(disturb-10, it-7)
aux(disturb-10, would-8)
neg(disturb-10, n't-9)
conj_but(messy-5, disturb-10)
poss(dinner-12, my-11)
dobj(disturb-10, dinner-12)

(ROOT
  (S
    (ADVP (RB Ha))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ funny)
        (S
          (VP (TO to)
            (VP
              (ADVP (RB just))
              (VB think)
              (PP (IN about)
                (NP (PRP it))))))))
    (. .)))

advmod(funny-5, Ha-1)
nsubj(funny-5, it-3)
cop(funny-5, 's-4)
root(ROOT-0, funny-5)
aux(think-8, to-6)
advmod(think-8, just-7)
xcomp(funny-5, think-8)
prep_about(think-8, it-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB believe)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD asked)
              (NP (PDT such) (DT a) (JJ stupid) (NN question)))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, ca-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
nsubj(asked-6, you-5)
ccomp(believe-4, asked-6)
predet(question-10, such-7)
det(question-10, a-8)
amod(question-10, stupid-9)
dobj(asked-6, question-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (DT a) (CD six) (NN shooter))))
    (. .)))

nsubj(have-4, I-1)
aux(have-4, do-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
det(shooter-7, a-5)
num(shooter-7, six-6)
dobj(have-4, shooter-7)

(ROOT
  (S
    (NP (NNP THAT))
    (VP (VBZ 's)
      (ADJP (JJ archaic)))
    (. .)))

nsubj(archaic-3, THAT-1)
cop(archaic-3, 's-2)
root(ROOT-0, archaic-3)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP rant)
      (PP (IN against)
        (NP (NN truth)
          (CC and)
          (NN logic))))
    (. .)))

nsubj(rant-2, You-1)
root(ROOT-0, rant-2)
prep_against(rant-2, truth-4)
prep_against(rant-2, logic-6)
conj_and(truth-4, logic-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP
          (ADJP (RB much) (JJR better))
          (NNS guns))
        (PP (IN than)
          (NP (DT that)))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
advmod(better-4, much-3)
amod(guns-5, better-4)
dobj(have-2, guns-5)
prep_than(guns-5, that-7)

(ROOT
  (S
    (NP (NNP YES) (NNS guns))
    (VP (VBP make)
      (S
        (NP (NN society))
        (ADJP (JJR safer))))
    (. .)))

nn(guns-2, YES-1)
nsubj(make-3, guns-2)
root(ROOT-0, make-3)
nsubj(safer-5, society-4)
xcomp(make-3, safer-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN gun) (NNS laws))
        (VP (VBP prohibit)
          (NP (NN gun) (NN ownership\/possession)))))
    (, ,)
    (NP (RB then) (JJ only) (NNS criminals))
    (VP (MD will)
      (VP (VB have)
        (NP (NNS guns))))
    (. .)))

mark(prohibit-4, If-1)
nn(laws-3, gun-2)
nsubj(prohibit-4, laws-3)
advcl(have-12, prohibit-4)
nn(ownership\/possession-6, gun-5)
dobj(prohibit-4, ownership\/possession-6)
advmod(criminals-10, then-8)
amod(criminals-10, only-9)
nsubj(have-12, criminals-10)
aux(have-12, will-11)
root(ROOT-0, have-12)
dobj(have-12, guns-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNS criminals))
        (VP (VBP think)
          (SBAR
            (S
              (NP
                (NP (NN someone))
                (PP (IN in)
                  (NP (PRP$ their) (NN house))))
              (VP (VBZ has)
                (NP (DT a) (NN gun))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD will)
      (VP (VB try)
        (PP (IN for)
          (NP (DT an) (JJR easier) (NN target)))))
    (. .)))

mark(think-3, If-1)
nsubj(think-3, criminals-2)
advcl(try-14, think-3)
nsubj(has-8, someone-4)
poss(house-7, their-6)
prep_in(someone-4, house-7)
ccomp(think-3, has-8)
det(gun-10, a-9)
dobj(has-8, gun-10)
nsubj(try-14, they-12)
aux(try-14, will-13)
root(ROOT-0, try-14)
det(target-18, an-16)
amod(target-18, easier-17)
prep_for(try-14, target-18)

(ROOT
  (S
    (ADVP (RB Just))
    (VP (VB look)
      (PP (IN at)
        (NP
          (NP (DT the) (NNS examples))
          (PP (IN of)
            (NP (NNP England)
              (CC and)
              (NNP Australia))))))
    (. .)))

advmod(look-2, Just-1)
root(ROOT-0, look-2)
det(examples-5, the-4)
prep_at(look-2, examples-5)
prep_of(examples-5, England-7)
prep_of(examples-5, Australia-9)
conj_and(England-7, Australia-9)

(ROOT
  (S
    (NP (PRP$ Their) (NN crime) (NNS statistics))
    (VP (VBP have)
      (VP (VBN DOUBLED)
        (SBAR (IN since)
          (S
            (NP (PRP they))
            (VP (VBN made)
              (S
                (NP (PRP$ their) (NN country))
                (`` ``)
                (ADJP (JJR safer))
                ('' ''))
              (PP (IN by)
                (S
                  (ADVP (RB severly))
                  (VP (VBG restricting)
                    (NP (NN gun) (NN ownership))
                    (PP (IN by)
                      (NP (NNS civilians)))))))))))
    (. .)))

poss(statistics-3, Their-1)
nn(statistics-3, crime-2)
nsubj(DOUBLED-5, statistics-3)
aux(DOUBLED-5, have-4)
root(ROOT-0, DOUBLED-5)
mark(made-8, since-6)
nsubj(made-8, they-7)
advcl(DOUBLED-5, made-8)
poss(country-10, their-9)
dep(safer-12, country-10)
dep(made-8, safer-12)
advmod(restricting-16, severly-15)
prepc_by(made-8, restricting-16)
nn(ownership-18, gun-17)
dobj(restricting-16, ownership-18)
prep_by(restricting-16, civilians-20)

(ROOT
  (S
    (NP (DT The) (NNS criminals))
    (ADVP (RB still))
    (VP (VBP have)
      (NP (PRP$ their) (NNS guns)))
    (. .)))

det(criminals-2, The-1)
nsubj(have-4, criminals-2)
advmod(have-4, still-3)
root(ROOT-0, have-4)
poss(guns-6, their-5)
dobj(have-4, guns-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP they))
          (VP (VBP are)
            (NP (NNS criminals))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(criminals-6, why-3)
nsubj(criminals-6, they-4)
cop(criminals-6, are-5)
advcl('s-2, criminals-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (ADVP (RB still))
      (VP (VB have)
        (NP (NN mine))))
    (. .)))

nsubj(have-4, I-1)
aux(have-4, 'll-2)
advmod(have-4, still-3)
root(ROOT-0, have-4)
dobj(have-4, mine-5)

(ROOT
  (FRAG
    (WHADVP (WRB How))
    (PP (IN about)
      (NP (PRP you))
      (. ?))))

root(ROOT-0, How-1)
dep(How-1, about-2)
pobj(about-2, you-3)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP me))
        (VP (VB explain))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(explain-3, me-2)
ccomp(Let-1, explain-3)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ breaks)
          (PP (IN into)
            (NP
              (NP (PRP$ your) (NN home))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN middle))
                  (PP (IN of)
                    (NP (DT the) (NN night))))))))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB defend)
              (NP (PRP yourself)))))))
    (. ?)))

mark(breaks-3, If-1)
nsubj(breaks-3, someone-2)
advcl(going-17, breaks-3)
poss(home-6, your-5)
prep_into(breaks-3, home-6)
det(middle-9, the-8)
prep_in(home-6, middle-9)
det(night-12, the-11)
prep_of(middle-9, night-12)
advmod(going-17, how-14)
aux(going-17, are-15)
nsubj(going-17, you-16)
xsubj(defend-19, you-16)
root(ROOT-0, going-17)
aux(defend-19, to-18)
xcomp(going-17, defend-19)
dobj(defend-19, yourself-20)

(ROOT
  (FRAG
    (PP (IN With)
      (NP (DT a) (NN spoon)))
    (. ?)))

root(ROOT-0, With-1)
det(spoon-3, a-2)
pobj(With-1, spoon-3)

(ROOT
  (FRAG (CC Or)
    (NP (DT a) (NN broom) (. ?))))

dep(broom-3, Or-1)
det(broom-3, a-2)
root(ROOT-0, broom-3)

(ROOT
  (SBARQ
    (WHNP (WP Or))
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB call)
              (NP (CD 911)
                (CC and)
                (CD cower))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN corner))
                  (VP (VBG waiting)
                    (PP (IN for)
                      (NP (DT the) (NN intruder)))
                    (S
                      (VP (TO to)
                        (VP
                          (VP (VB find)
                            (NP (PRP you)))
                          (CC and)
                          (VP (VB KILL)
                            (NP (PRP you))))))))))))))
    (. ?)))

dep(going-4, Or-1)
aux(going-4, are-2)
nsubj(going-4, you-3)
xsubj(call-6, you-3)
root(ROOT-0, going-4)
aux(call-6, to-5)
xcomp(going-4, call-6)
dobj(call-6, 911-7)
dobj(call-6, cower-9)
conj_and(911-7, cower-9)
det(corner-12, a-11)
prep_in(call-6, corner-12)
xsubj(find-18, corner-12)
partmod(corner-12, waiting-13)
det(intruder-16, the-15)
prep_for(waiting-13, intruder-16)
aux(find-18, to-17)
xcomp(waiting-13, find-18)
dobj(find-18, you-19)
xcomp(waiting-13, KILL-21)
conj_and(find-18, KILL-21)
dobj(KILL-21, you-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (ADJP (JJ hard)
          (S
            (VP (TO to)
              (VP (VB believe)
                (SBAR (IN that)
                  (S
                    (NP (NNS people))
                    (VP (VBP like)
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (MD can)
                            (VP (VB be)
                              (ADJP (RB so) (JJ illogical)))))))))))))))
    (. .)))

nsubj(find-2, I-1)
root(ROOT-0, find-2)
nsubj(hard-4, it-3)
xcomp(find-2, hard-4)
aux(believe-6, to-5)
xcomp(hard-4, believe-6)
complm(like-9, that-7)
nsubj(like-9, people-8)
ccomp(believe-6, like-9)
nsubj(illogical-14, you-10)
aux(illogical-14, can-11)
cop(illogical-14, be-12)
advmod(illogical-14, so-13)
ccomp(like-9, illogical-14)

(ROOT
  (S
    (VP (VB Defend)
      (NP (PRP yourself)))
    (. !)))

root(ROOT-0, Defend-1)
dobj(Defend-1, yourself-2)

(ROOT
  (S
    (NP (DT The) (NNS cops))
    (ADVP (RB certainly))
    (VP (MD wo) (RB n't)
      (VP (VB do)
        (NP (PRP it))
        (PP (IN for)
          (NP (PRP you)))))
    (. .)))

det(cops-2, The-1)
nsubj(do-6, cops-2)
advmod(do-6, certainly-3)
aux(do-6, wo-4)
neg(do-6, n't-5)
root(ROOT-0, do-6)
dobj(do-6, it-7)
prep_for(do-6, you-9)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP am)
      (NP (PRP I))
      (ADJP (JJR safer))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT some))
          (VP
            (VP (VBZ walks)
              (PP (IN into)
                (NP (DT a) (NN bank))))
            (CC and)
            (VP (VBZ holds)
              (NP (PRP it))
              (PRT (RP up)))))))
    (. ?)))

advmod(safer-4, Why-1)
cop(safer-4, am-2)
nsubj(safer-4, I-3)
root(ROOT-0, safer-4)
advmod(walks-7, when-5)
nsubj(walks-7, some-6)
nsubj(holds-12, some-6)
advcl(safer-4, walks-7)
det(bank-10, a-9)
prep_into(walks-7, bank-10)
advcl(safer-4, holds-12)
conj_and(walks-7, holds-12)
dobj(holds-12, it-13)
prt(holds-12, up-14)

(ROOT
  (S
    (NP
      (NP (DT That))
      (ADJP (RBS most) (JJ likely)))
    (VP (MD wo) (RB n't)
      (VP (VB happen)
        (SBAR (IN if)
          (S
            (NP (PRP we))
            (VP (VBP have)
              (NP
                (NP (DT a) (JJ free) (NN society))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (NN law) (NN abiding) (NNS citizens))
                    (VP (MD can)
                      (VP (VB carry)
                        (NP (NNS guns))
                        (PP (IN without)
                          (S
                            (VP (VBG having)
                              (S
                                (VP (TO to)
                                  (VP (VB jump)
                                    (PP (IN through)
                                      (NP
                                        (NP (DT a) (NN lot))
                                        (PP (IN of)
                                          (NP (NNS hoops)))))))))))))))))))))
    (. .)))

nsubj(happen-6, That-1)
advmod(likely-3, most-2)
amod(That-1, likely-3)
aux(happen-6, wo-4)
neg(happen-6, n't-5)
root(ROOT-0, happen-6)
mark(have-9, if-7)
nsubj(have-9, we-8)
advcl(happen-6, have-9)
det(society-12, a-10)
amod(society-12, free-11)
dobj(have-9, society-12)
advmod(carry-18, where-13)
nn(citizens-16, law-14)
nn(citizens-16, abiding-15)
nsubj(carry-18, citizens-16)
aux(carry-18, can-17)
rcmod(society-12, carry-18)
dobj(carry-18, guns-19)
prepc_without(carry-18, having-21)
aux(jump-23, to-22)
xcomp(having-21, jump-23)
det(lot-26, a-25)
prep_through(jump-23, lot-26)
prep_of(lot-26, hoops-28)

(ROOT
  (S (CC But)
    (S
      (NP (PRP it))
      (PRN
        (S
          (NP (PRP it))
          (VP (VBZ does)
            (VP (VB happen))))
        (, ,))
      (NP (PRP I))
      (VP (MD would)
        (VP (VB be)
          (ADJP
            (ADJP (JJR safer))
            (SBAR (IN because)
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (NP
                    (NP (DT a)
                      (ADJP (RB much) (JJR better))
                      (NN shot))
                    (PP (IN than)
                      (NP (DT the) (NN robber)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD wo) (RB n't)
        (VP (VB know)
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBP have)
                (NP (DT a) (NN gun))))))))
    (. .)))

nsubj(safer-10, it-2)
nsubj(happen-5, it-3)
aux(happen-5, does-4)
parataxis(safer-10, happen-5)
nsubj(safer-10, I-7)
aux(safer-10, would-8)
cop(safer-10, be-9)
root(ROOT-0, safer-10)
mark(shot-17, because-11)
nsubj(shot-17, I-12)
cop(shot-17, am-13)
det(shot-17, a-14)
advmod(better-16, much-15)
amod(shot-17, better-16)
ccomp(safer-10, shot-17)
det(robber-20, the-19)
prep_than(shot-17, robber-20)
nsubj(know-26, he-23)
aux(know-26, wo-24)
neg(know-26, n't-25)
conj_and(safer-10, know-26)
complm(have-29, that-27)
nsubj(have-29, I-28)
ccomp(know-26, have-29)
det(gun-31, a-30)
dobj(have-29, gun-31)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP he))
        (VP (VBZ thinks)
          (SBAR (IN that)
            (S
              (S
                (NP (EX there))
                (VP (MD might)
                  (VP (VB be)
                    (NP
                      (NP (DT some) (NNS people))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN bank))
                          (PP (IN with)
                            (NP (NNS guns)))))))))
              (CC and)
              (S
                (NP (PRP he))
                (VP (VBZ robs)
                  (NP (PRP it))
                  (ADVP (RB anyway)))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD will)
      (VP (VB get)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP he))
            (VP (VBZ deserves))))))
    (. .)))

cc(get-24, But-1)
mark(thinks-4, if-2)
nsubj(thinks-4, he-3)
advcl(get-24, thinks-4)
complm(people-10, that-5)
expl(people-10, there-6)
aux(people-10, might-7)
cop(people-10, be-8)
det(people-10, some-9)
ccomp(thinks-4, people-10)
det(bank-13, the-12)
prep_in(people-10, bank-13)
prep_with(bank-13, guns-15)
nsubj(robs-18, he-17)
ccomp(thinks-4, robs-18)
conj_and(people-10, robs-18)
dobj(robs-18, it-19)
advmod(robs-18, anyway-20)
nsubj(get-24, he-22)
aux(get-24, will-23)
root(ROOT-0, get-24)
dobj(deserves-27, what-25)
nsubj(deserves-27, he-26)
ccomp(get-24, deserves-27)

(ROOT
  (SBARQ
    (WHADVP (WRB When))
    (SQ
      (NP (NN someone))
      (VP (VBZ shoots)
        (NP (PRP you))
        (PP (IN from)
          (NP (DT a) (NN highway) (NN overpass)))))
    (. ?)))

advmod(shoots-3, When-1)
nsubj(shoots-3, someone-2)
root(ROOT-0, shoots-3)
dobj(shoots-3, you-4)
det(overpass-8, a-6)
nn(overpass-8, highway-7)
prep_from(shoots-3, overpass-8)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP have)
      (NP (PRP you))
      (VP (VBN been)
        (VP (VBG smoking))))
    (. ?)))

dobj(smoking-5, What-1)
aux(smoking-5, have-2)
nsubj(smoking-5, you-3)
aux(smoking-5, been-4)
root(ROOT-0, smoking-5)

(ROOT
  (SBARQ
    (WHNP
      (WHADJP (WRB How) (JJ many))
      (NNS instances))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB cite)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NN someone))
            (VP (VBD shot)
              (NP (DT a) (NN driver))
              (PP (IN from)
                (NP (DT a) (NN highway) (NN overpass))))))))
    (. ?)))

advmod(many-2, How-1)
amod(instances-3, many-2)
dobj(cite-6, instances-3)
aux(cite-6, can-4)
nsubj(cite-6, you-5)
root(ROOT-0, cite-6)
advmod(shot-9, where-7)
nsubj(shot-9, someone-8)
advcl(cite-6, shot-9)
det(driver-11, a-10)
dobj(shot-9, driver-11)
det(overpass-15, a-13)
nn(overpass-15, highway-14)
prep_from(shot-9, overpass-15)

