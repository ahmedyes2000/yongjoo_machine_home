(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD said)))
    (: :) (`` ``)
    (S (CC And)
      (NP (PRP I))
      (VP (VBP disagree)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (MD should)
              (VP (VB be)
                (NP
                  (NP (DT no) (NNS laws))
                  (PP (IN on)
                    (NP (DT the) (NNS books))))))))))
    (. .)))

nsubj(said-2, You-1)
root(ROOT-0, said-2)
cc(disagree-7, And-5)
nsubj(disagree-7, I-6)
ccomp(said-2, disagree-7)
complm(laws-13, that-8)
expl(laws-13, there-9)
aux(laws-13, should-10)
cop(laws-13, be-11)
det(laws-13, no-12)
ccomp(disagree-7, laws-13)
det(books-16, the-15)
prep_on(laws-13, books-16)

(ROOT
  (S
    (NP (EX There))
    (VP (MD should)
      (VP (VB be)
        (NP
          (NP (NNS laws))
          (PP (IN about)
            (NP
              (NP (DT the) (JJ ILLEGAL) (NN use))
              (PP (IN of)
                (NP
                  (NP (NNS firearms)
                    (CC and)
                    (NNS consequences))
                  (PP (IN for)
                    (NP (DT those) (NNS uses))))))))))
    (. .)))

expl(laws-4, There-1)
aux(laws-4, should-2)
cop(laws-4, be-3)
root(ROOT-0, laws-4)
det(use-8, the-6)
amod(use-8, ILLEGAL-7)
prep_about(laws-4, use-8)
prep_of(use-8, firearms-10)
prep_of(use-8, consequences-12)
conj_and(firearms-10, consequences-12)
det(uses-15, those-14)
prep_for(firearms-10, uses-15)

(ROOT
  (S (`` ``)
    (ADVP (CC But))
    (, ,)
    (NP
      (NP (WP what))
      (PP (IN about)
        (NP (NN acquisition))))
    (VP (VBZ laws)
      (PP (IN for)
        (NP
          (NP (NNS felons))
          (CC or)
          (NP (DT the)
            (ADJP (RB mentally) (JJ unstable))))))
    (. ?)))

advmod(laws-7, But-2)
nsubj(laws-7, what-4)
prep_about(what-4, acquisition-6)
root(ROOT-0, laws-7)
prep_for(laws-7, felons-9)
det(unstable-13, the-11)
advmod(unstable-13, mentally-12)
prep_for(laws-7, unstable-13)
conj_or(felons-9, unstable-13)

(ROOT
  (S ('' '')
    (NP (PRP you))
    (VP (MD might)
      (VP (VB ask)))
    (. .)))

nsubj(ask-4, you-2)
aux(ask-4, might-3)
root(ROOT-0, ask-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (PP (IN on)
        (NP (DT the) (NN fence)))
      (ADVP (RB here)))
    (. .)))

nsubj(am-2, I-1)
root(ROOT-0, am-2)
det(fence-5, the-4)
prep_on(am-2, fence-5)
advmod(am-2, here-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT a) (NN person))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ has)
                  (VP (VBN been)
                    (VP (VBN convicted)
                      (PP (IN of)
                        (S
                          (VP (VBG killing)
                            (S
                              (NP (NN someone))
                              (ADJP (RB else))))))))))))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (VP (VBD failed)
                (NP (NN rehabilitation)))))
          (, ,)
          (VP (MD should)
            (VP (VB be)
              (VP (VBN barred)
                (PP (IN from)
                  (NP (NN gun) (NN ownership)))))))))
    (. .)))

nsubj(suppose-2, I-1)
root(ROOT-0, suppose-2)
complm(barred-22, that-3)
det(person-5, a-4)
nsubjpass(convicted-9, person-5)
nsubjpass(barred-22, person-5)
aux(convicted-9, has-7)
auxpass(convicted-9, been-8)
rcmod(person-5, convicted-9)
prepc_of(convicted-9, killing-11)
nsubj(else-13, someone-12)
xcomp(killing-11, else-13)
mark(failed-17, if-15)
nsubj(failed-17, they-16)
dep(barred-22, failed-17)
dobj(failed-17, rehabilitation-18)
aux(barred-22, should-20)
auxpass(barred-22, be-21)
ccomp(suppose-2, barred-22)
nn(ownership-25, gun-24)
prep_from(barred-22, ownership-25)

(ROOT
  (FRAG (CC But)
    (WP what) (IN about)
    (NP (DT the) (JJ rehabilitated) (NN felon))
    (. ?)))

dep(about-3, But-1)
dep(about-3, what-2)
root(ROOT-0, about-3)
det(felon-6, the-4)
amod(felon-6, rehabilitated-5)
dep(about-3, felon-6)

(ROOT
  (SQ (VBP Do)
    (NP (PRP they))
    (VP (VB deserve)
      (S
        (VP (TO to)
          (VP (VB lose)
            (NP
              (ADJP (RB constitutionally) (VBN protected))
              (NNS rights))))))
    (. ?)))

aux(deserve-3, Do-1)
nsubj(deserve-3, they-2)
xsubj(lose-5, they-2)
root(ROOT-0, deserve-3)
aux(lose-5, to-4)
xcomp(deserve-3, lose-5)
advmod(protected-7, constitutionally-6)
amod(rights-8, protected-7)
dobj(lose-5, rights-8)

(ROOT
  (S (CC And)
    (NP (DT those) (NNS laws))
    (VP (MD should)
      (VP (VB be)
        (VP
          (ADVP (RB strictly))
          (VBN enforced))))
    (. .)))

cc(enforced-7, And-1)
det(laws-3, those-2)
nsubjpass(enforced-7, laws-3)
aux(enforced-7, should-4)
auxpass(enforced-7, be-5)
advmod(enforced-7, strictly-6)
root(ROOT-0, enforced-7)

(ROOT
  (S ('' '')
    (S (CC But)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP look)
            (PP (IN at)
              (NP
                (NP (DT the) (JJ actual) (NNS crimes))
                (: :)
                (NP
                  (NP (NN assault))
                  (, ,)
                  (NP (NN murder))))))))
      (, ,)
      (X (NN etc.))
      (NP (PRP you))
      (VP (VBP see)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBP are))))))
    (RB already)
    (S
      (NP (NNS laws))
      (VP (VBG punishing)
        (NP (JJ such) (NNS acts))))
    (. .)))

cc(see-17, But-2)
advmod(look-5, when-3)
nsubj(look-5, you-4)
advcl(see-17, look-5)
det(crimes-9, the-7)
amod(crimes-9, actual-8)
prep_at(look-5, crimes-9)
dep(crimes-9, assault-11)
appos(assault-11, murder-13)
dep(see-17, etc.-15)
nsubj(see-17, you-16)
root(ROOT-0, see-17)
complm(are-20, that-18)
expl(are-20, there-19)
ccomp(see-17, are-20)
advmod(see-17, already-21)
nsubj(punishing-23, laws-22)
dep(see-17, punishing-23)
amod(acts-25, such-24)
dobj(punishing-23, acts-25)

(ROOT
  (SQ (VBZ Is)
    (NP
      (NP (NN killing) (NN someone))
      (PP (IN with)
        (NP
          (NP (DT a) (NN gun))
          (ADVP (RB somehow)))))
    (VP
      (ADVP (RBR worse) (IN than))
      (VBG killing)
      (NP (PRP them))
      (PP (IN with)
        (NP (DT a) (NN rock))))
    (. ?)))

aux(killing-10, Is-1)
nn(someone-3, killing-2)
nsubj(killing-10, someone-3)
det(gun-6, a-5)
prep_with(someone-3, gun-6)
advmod(gun-6, somehow-7)
advmod(than-9, worse-8)
advmod(killing-10, than-9)
root(ROOT-0, killing-10)
dobj(killing-10, them-11)
det(rock-14, a-13)
prep_with(killing-10, rock-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP ask)
          (NP (PRP me)))))
    (, ,)
    (NP
      (NP (DT the) (NN thought))
      (PP (IN of)
        (S
          (VP (VBG killing)
            (NP (NN someone))
            (PP (IN by)
              (S
                (VP (VBG bludgeoning)
                  (NP (PRP them))
                  (PP (TO to)
                    (NP (DT a)
                      (ADJP (JJ wet)
                        (CC and)
                        (JJ messy))
                      (NN death))))))))))
    (VP (VBZ seems)
      (ADJP
        (ADJP
          (ADVP (RB far) (RBR more))
          (JJ nefarious)
          (CC and)
          (JJ evil))
        (PP (IN than)
          (S
            (VP (VBG bending)
              (NP (DT a) (NN finger))
              (PP (IN at)
                (NP (CD 17) (NN yds))))))))
    (. .)))

mark(ask-3, If-1)
nsubj(ask-3, you-2)
advcl(nefarious-23, ask-3)
dobj(ask-3, me-4)
det(thought-7, the-6)
nsubj(nefarious-23, thought-7)
nsubj(evil-25, thought-7)
prepc_of(thought-7, killing-9)
dobj(killing-9, someone-10)
prepc_by(killing-9, bludgeoning-12)
dobj(bludgeoning-12, them-13)
det(death-19, a-15)
amod(death-19, wet-16)
conj_and(wet-16, messy-18)
amod(death-19, messy-18)
prep_to(bludgeoning-12, death-19)
cop(nefarious-23, seems-20)
advmod(more-22, far-21)
advmod(nefarious-23, more-22)
root(ROOT-0, nefarious-23)
conj_and(nefarious-23, evil-25)
prepc_than(nefarious-23, bending-27)
det(finger-29, a-28)
dobj(bending-27, finger-29)
num(yds-32, 17-31)
prep_at(bending-27, yds-32)

(ROOT
  (S (CC Yet)
    (NP (DT the) (NN finger-bending))
    (VP (VBZ has)
      (VP (VBN attached)
        (PP (TO to)
          (NP
            (NP (PRP it))
            (NP (DT a) (RB far) (JJR stiffer) (NN sentence))))))
    (. .)))

cc(attached-5, Yet-1)
det(finger-bending-3, the-2)
nsubj(attached-5, finger-bending-3)
aux(attached-5, has-4)
root(ROOT-0, attached-5)
prep_to(attached-5, it-7)
det(sentence-11, a-8)
advmod(sentence-11, far-9)
amod(sentence-11, stiffer-10)
dep(it-7, sentence-11)

(ROOT
  (S (CC Yet)
    (NP (DT the) (NN opposition))
    (VP (VBZ calls)
      (S
        (NP (DT these) (NNS laws))
        (`` ``)
        (ADJP (JJ common-sense))
        ('' '')))
    (. .)))

cc(calls-4, Yet-1)
det(opposition-3, the-2)
nsubj(calls-4, opposition-3)
root(ROOT-0, calls-4)
det(laws-6, these-5)
dep(common-sense-8, laws-6)
dep(calls-4, common-sense-8)

(ROOT
  (S (CC And)
    (NP (PRP we))
    (VP (VBP buy)
      (PP (IN into)
        (NP (PRP it))))
    (. ?)))

cc(buy-3, And-1)
nsubj(buy-3, we-2)
root(ROOT-0, buy-3)
prep_into(buy-3, it-5)

(ROOT
  (FRAG
    (ADVP (RB Really))
    (. ?)))

root(ROOT-0, Really-1)

