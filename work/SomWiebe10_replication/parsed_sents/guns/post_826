(ROOT
  (S
    (NP
      (NP (DT The) (NN bill))
      (PP (IN of)
        (NP (NNS rights))))
    (VP (VBZ does) (RB not)
      (VP (VB state)
        (NP (DT the)
          (NP (DT an) (JJ individual) (NN citizen))
          (SBAR
            (S
              (VP (VBZ has)
                (NP (PRP$ their) (JJ own) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (NP (PRP$ their) (JJ own) (NN gun)))))))))
          (, ,)
          (NP
            (NP (NN id))
            (VP (VBN read)
              (PRT (RP up))
              (PP (IN on)
                (NP (DT that)))
              (PP (IN before)
                (S
                  (VP (VBG making)
                    (NP (DT that) (NN statement))))))))))
    (. .)))

det(bill-2, The-1)
nsubj(state-7, bill-2)
prep_of(bill-2, rights-4)
aux(state-7, does-5)
neg(state-7, not-6)
root(ROOT-0, state-7)
det(citizen-11, the-8)
det(citizen-11, an-9)
amod(citizen-11, individual-10)
dobj(state-7, citizen-11)
rcmod(citizen-11, has-12)
poss(right-15, their-13)
amod(right-15, own-14)
dobj(has-12, right-15)
aux(have-17, to-16)
infmod(right-15, have-17)
poss(gun-20, their-18)
amod(gun-20, own-19)
dobj(have-17, gun-20)
appos(citizen-11, id-22)
partmod(id-22, read-23)
prt(read-23, up-24)
prep_on(read-23, that-26)
prepc_before(read-23, making-28)
det(statement-30, that-29)
dobj(making-28, statement-30)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP live)
            (PP (IN in)
              (NP (DT a) (JJ bad) (NN neighbor) (NN hood)))))))
    (VP (MD can)
      (VP
        (VP (VB move))
        (, ,)
        (CC or)
        (VP (VB live)
          (PP (IN in)
            (NP (DT a) (JJ protected) (NN shelter)))
          (SBAR (IN if)
            (S
              (NP (VBG moving))
              (VP (VBZ is) (RB not)
                (NP (DT an) (NN option))))))))
    (. .)))

nsubj(live-3, People-1)
nsubj(move-10, People-1)
nsubj(live-13, People-1)
rcmod(People-1, live-3)
det(hood-8, a-5)
amod(hood-8, bad-6)
nn(hood-8, neighbor-7)
prep_in(live-3, hood-8)
aux(move-10, can-9)
root(ROOT-0, move-10)
conj_or(move-10, live-13)
det(shelter-17, a-15)
amod(shelter-17, protected-16)
prep_in(live-13, shelter-17)
mark(option-23, if-18)
nsubj(option-23, moving-19)
cop(option-23, is-20)
neg(option-23, not-21)
det(option-23, an-22)
advcl(live-13, option-23)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP consider)
            (S
              (NP (DT a) (NN neighborhood))
              (ADJP (JJ unsafe)))))))
    (ADVP (RB often))
    (VP (VBP think)
      (ADVP (RB so))
      (PP (RB because) (IN of)
        (NP (NNS guns))))
    (. .)))

nsubj(consider-3, People-1)
nsubj(think-8, People-1)
rcmod(People-1, consider-3)
det(neighborhood-5, a-4)
nsubj(unsafe-6, neighborhood-5)
xcomp(consider-3, unsafe-6)
advmod(think-8, often-7)
root(ROOT-0, think-8)
advmod(think-8, so-9)
prep_because_of(think-8, guns-12)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB myself) (RB often))
    (VP (VBP think)
      (S (`` ``)
        (NP (JJ someones) (NN gonna))
        (VP
          (VP (VB come)
            (PRT (RP out)))
          (CC and)
          (VP (VB shoot)
            (NP (PRP me) ('' ''))
            (SBAR
              (WHADVP (WRB when))
              (S
                (VP (VBG walking)
                  (PP (IN through)
                    (NP (JJ bad) (NNS neighborhoods))))))))))
    (. .)))

nsubj(think-4, I-1)
advmod(often-3, myself-2)
advmod(think-4, often-3)
root(ROOT-0, think-4)
amod(gonna-7, someones-6)
nsubj(come-8, gonna-7)
nsubj(shoot-11, gonna-7)
ccomp(think-4, come-8)
prt(come-8, out-9)
ccomp(think-4, shoot-11)
conj_and(come-8, shoot-11)
dobj(shoot-11, me-12)
advmod(walking-15, when-14)
advcl(shoot-11, walking-15)
amod(neighborhoods-18, bad-17)
prep_through(walking-15, neighborhoods-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNS citizens))
        (VP (VBD did) (RB n't)
          (VP (VB have)
            (NP (NNS guns))))))
    (, ,)
    (NP (DT that))
    (VP (MD would)
      (VP (VB make)
        (S
          (NP (NN everyone))
          (VP (VB feel)
            (S
              (NP (DT that))
              (ADJP (RB much) (JJR safer)))))))
    (. .)))

mark(have-5, If-1)
nsubj(have-5, citizens-2)
aux(have-5, did-3)
neg(have-5, n't-4)
advcl(make-10, have-5)
dobj(have-5, guns-6)
nsubj(make-10, that-8)
aux(make-10, would-9)
root(ROOT-0, make-10)
nsubj(feel-12, everyone-11)
ccomp(make-10, feel-12)
nsubj(safer-15, that-13)
advmod(safer-15, much-14)
xcomp(feel-12, safer-15)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ unsafe) (NNS neighborhoods)))
    (, ,)
    (NP (EX there))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (CD one) (JJR less) (NN worry))
          (PP (IN of)
            (S (RB not)
              (VP (VBG getting)
                (VP (VBN hurt)
                  (PP (IN by)
                    (NP
                      (NP (DT some) (JJ irresponsible) (NN citizen))
                      (PP (IN with)
                        (NP (DT a) (NN gun))))))))))))
    (. .)))

amod(neighborhoods-3, unsafe-2)
prep_in(worry-10, neighborhoods-3)
expl(worry-10, there-5)
aux(worry-10, would-6)
cop(worry-10, be-7)
num(worry-10, one-8)
amod(worry-10, less-9)
root(ROOT-0, worry-10)
neg(hurt-14, not-12)
auxpass(hurt-14, getting-13)
prepc_of(worry-10, hurt-14)
det(citizen-18, some-16)
amod(citizen-18, irresponsible-17)
agent(hurt-14, citizen-18)
det(gun-21, a-20)
prep_with(citizen-18, gun-21)

