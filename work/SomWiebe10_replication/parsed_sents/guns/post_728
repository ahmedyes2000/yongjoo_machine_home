(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG thinking)
        (PP (IN about)
          (NP (PRP it)))
        (ADVP (RB wrong))))
    (. .)))

nsubj(thinking-3, You-1)
aux(thinking-3, 're-2)
root(ROOT-0, thinking-3)
prep_about(thinking-3, it-5)
advmod(thinking-3, wrong-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG advocating)
        (S
          (VP (VBG blowing)
            (PRT (RP away))
            (NP
              (NP (NN everyone))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (MD might)
                    (VP (VB be)
                      (ADJP (JJ threatening)))))))))))
    (. .)))

nsubj(advocating-4, I-1)
aux(advocating-4, 'm-2)
neg(advocating-4, not-3)
root(ROOT-0, advocating-4)
xcomp(advocating-4, blowing-5)
prt(blowing-5, away-6)
dobj(blowing-5, everyone-7)
nsubj(threatening-11, everyone-7)
aux(threatening-11, might-9)
cop(threatening-11, be-10)
rcmod(everyone-7, threatening-11)

(ROOT
  (FRAG (RB Not)
    (PP (IN for)
      (NP
        (NP (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP are)
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB kill)
                      (NP (PRP you))))))))))
      (. .))))

root(ROOT-0, Not-1)
dep(Not-1, for-2)
pobj(for-2, people-3)
nsubj(trying-6, people-3)
aux(trying-6, are-5)
rcmod(people-3, trying-6)
aux(kill-8, to-7)
xcomp(trying-6, kill-8)
dobj(kill-8, you-9)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG advocating)
        (S
          (VP (VBG replacing)
            (NP (NN pepper) (NN spray))
            (PP (IN with)
              (NP (DT a) (NN gun)))))))
    (. .)))

advmod(advocating-6, Again-1)
nsubj(advocating-6, I-3)
aux(advocating-6, 'm-4)
neg(advocating-6, not-5)
root(ROOT-0, advocating-6)
xcomp(advocating-6, replacing-7)
nn(spray-9, pepper-8)
dobj(replacing-7, spray-9)
det(gun-12, a-11)
prep_with(replacing-7, gun-12)

(ROOT
  (S
    (NP (NNP Pepper) (NNP spray))
    (VP
      (VP (VBZ has)
        (NP
          (NP (PRP it) (POS 's))
          (NN purpose)))
      (CC and)
      (VP
        (ADVP (RB so))
        (VBZ does)
        (NP (DT a) (NN gun))))
    (. .)))

nn(spray-2, Pepper-1)
nsubj(has-3, spray-2)
nsubj(does-9, spray-2)
root(ROOT-0, has-3)
poss(purpose-6, it-4)
dobj(has-3, purpose-6)
advmod(does-9, so-8)
conj_and(has-3, does-9)
det(gun-11, a-10)
dobj(does-9, gun-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ is)
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB kill)
                  (NP (PRP you)))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB get)
            (ADJP (JJ rid)
              (PP (IN of)
                (NP (DT the) (NN threat))))
            (ADVP (RB as) (RB quickly))
            (SBAR (IN as)
              (FRAG
                (ADJP (JJ possible))))))))
    (. .)))

mark(trying-4, If-1)
nsubj(trying-4, someone-2)
xsubj(kill-6, someone-2)
aux(trying-4, is-3)
advcl(want-10, trying-4)
aux(kill-6, to-5)
xcomp(trying-4, kill-6)
dobj(kill-6, you-7)
nsubj(want-10, you-9)
xsubj(rid-13, you-9)
root(ROOT-0, want-10)
aux(rid-13, to-11)
dep(rid-13, get-12)
xcomp(want-10, rid-13)
det(threat-16, the-15)
prep_of(rid-13, threat-16)
advmod(quickly-18, as-17)
advmod(rid-13, quickly-18)
mark(possible-20, as-19)
advcl(rid-13, possible-20)

(ROOT
  (S
    (NP (NNP Less-lethal) (NNS options))
    (VP (MD will)
      (ADVP (RB never))
      (VP (VB be)
        (ADJP (RB as) (JJ effective))
        (PP (IN as)
          (NP
            (NP (DT a) (NN gun))
            (PP (IN for)
              (NP (DT this) (NN purpose)))))))
    (. .)))

nn(options-2, Less-lethal-1)
nsubj(effective-7, options-2)
aux(effective-7, will-3)
neg(effective-7, never-4)
cop(effective-7, be-5)
advmod(effective-7, as-6)
root(ROOT-0, effective-7)
det(gun-10, a-9)
prep_as(effective-7, gun-10)
det(purpose-13, this-12)
prep_for(gun-10, purpose-13)

(ROOT
  (S
    (NP (PRP$ My) (JJ main) (NN point))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (SBAR (IN while)
            (S
              (NP (PRP we))
              (VP (MD should)
                (ADVP (RB always))
                (VP (VB value)
                  (NP (JJ human) (NN life))))))
          (, ,)
          (NP (PRP we))
          (VP (MD should) (RB n't)
            (VP (VB be)
              (ADVP (RB so))
              (VP (VBN caught)
                (PRT (RP up))
                (PP (IN with)
                  (NP (PRP it)))
                (SBAR (IN that)
                  (S
                    (NP (PRP we))
                    (VP (VBP allow)
                      (NP
                        (NP (NNS others))
                        (, ,)
                        (CC or)
                        (NP (PRP ourselves))
                        (, ,))
                      (PP (TO to)
                        (NP
                          (ADJP (VBN harmed)
                            (PP (IN as)
                              (NP
                                (NP (DT a) (NN result))
                                (PP (IN of)
                                  (NP (PRP$ our) (NN inability)
                                    (S
                                      (VP (TO to)
                                        (VP (VB take)))))))))
                          (JJ decisive) (NN action))))))))))))
    (. .)))

poss(point-3, My-1)
amod(point-3, main-2)
nsubj(is-4, point-3)
root(ROOT-0, is-4)
complm(caught-19, that-5)
mark(value-10, while-6)
nsubj(value-10, we-7)
aux(value-10, should-8)
advmod(value-10, always-9)
advcl(caught-19, value-10)
amod(life-12, human-11)
dobj(value-10, life-12)
nsubjpass(caught-19, we-14)
aux(caught-19, should-15)
neg(caught-19, n't-16)
auxpass(caught-19, be-17)
advmod(caught-19, so-18)
ccomp(is-4, caught-19)
prt(caught-19, up-20)
prep_with(caught-19, it-22)
complm(allow-25, that-23)
nsubj(allow-25, we-24)
ccomp(caught-19, allow-25)
dobj(allow-25, others-26)
dobj(allow-25, ourselves-29)
conj_or(others-26, ourselves-29)
amod(action-42, harmed-32)
det(result-35, a-34)
prep_as(harmed-32, result-35)
poss(inability-38, our-37)
prep_of(result-35, inability-38)
aux(take-40, to-39)
infmod(inability-38, take-40)
amod(action-42, decisive-41)
prep_to(allow-25, action-42)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (MD can)
          (VP (VB be)
            (VP (VBN brought)
              (PRT (RP down))
              (PP (IN without)
                (S
                  (ADVP (RB permanently))
                  (VP (VBG hurting)
                    (NP (PRP them))))))))))
    (, ,)
    (SBAR (IN while)
      (S
        (ADVP (RB also))
        (VP (VBG keeping)
          (NP
            (NP (DT the) (NN person))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ is)
                  (VP (VBG being)
                    (VP (VBN threatened)
                      (S
                        (ADJP (JJ safe))))))))))))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (ADJP (JJ fine)
        (PP (IN by)
          (NP (PRP me)))))
    (. .)))

mark(brought-5, If-1)
nsubjpass(brought-5, someone-2)
aux(brought-5, can-3)
auxpass(brought-5, be-4)
advcl(fine-25, brought-5)
prt(brought-5, down-6)
advmod(hurting-9, permanently-8)
prepc_without(brought-5, hurting-9)
dobj(hurting-9, them-10)
mark(keeping-14, while-12)
advmod(keeping-14, also-13)
advcl(fine-25, keeping-14)
det(person-16, the-15)
dobj(keeping-14, person-16)
nsubjpass(threatened-20, person-16)
aux(threatened-20, is-18)
auxpass(threatened-20, being-19)
rcmod(person-16, threatened-20)
acomp(threatened-20, safe-21)
nsubj(fine-25, that-23)
cop(fine-25, 's-24)
root(ROOT-0, fine-25)
prep_by(fine-25, me-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG advocating)
        (NP (DT the) (NN police))
        (S
          (VP (VBG blowing)
            (PRT (RP away))
            (NP (DT every) (NN whackjob))
            (PP (IN with)
              (NP
                (NP (DT a) (NN knife))
                (CC or)
                (NP (DT a) (NN pipe))))))))
    (. .)))

nsubj(advocating-4, I-1)
aux(advocating-4, 'm-2)
neg(advocating-4, not-3)
root(ROOT-0, advocating-4)
det(police-6, the-5)
dobj(advocating-4, police-6)
xcomp(advocating-4, blowing-7)
prt(blowing-7, away-8)
det(whackjob-10, every-9)
dobj(blowing-7, whackjob-10)
det(knife-13, a-12)
prep_with(blowing-7, knife-13)
det(pipe-16, a-15)
prep_with(blowing-7, pipe-16)
conj_or(knife-13, pipe-16)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBP am)
          (VP (VBG saying)))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP
                (VP (VBZ has)
                  (NP (DT a) (NN gun)))
                (, ,)
                (CC and)
                (VP (VBZ is)
                  (VP (VBG threatening)
                    (S
                      (VP (TO to)
                        (VP (VB shoot)
                          (NP (NN someone))
                          (PP (IN with)
                            (NP (PRP it))))))))
                (, ,)
                (CC or)
                (VP (VBZ has)
                  (ADVP (RB already))
                  (VP (VBN shot)
                    (NP (NN someone)))))))
          (, ,)
          (S
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB use)
                    (NP (JJ less-than-lethal) (NNS methods))
                    (S
                      (VP (TO to)
                        (VP (VB neutralize)
                          (NP (PRP him))))))))))
          (VP (VBZ is) (RB n't)
            (NP (DT a) (JJ good) (NN idea))))))
    (. .)))

dobj(saying-4, What-1)
nsubj(saying-4, I-2)
aux(saying-4, am-3)
csubj(is-5, saying-4)
root(ROOT-0, is-5)
complm(idea-40, that-6)
mark(has-9, if-7)
nsubj(has-9, someone-8)
nsubj(threatening-15, someone-8)
xsubj(shoot-17, someone-8)
nsubj(shot-25, someone-8)
advcl(idea-40, has-9)
det(gun-11, a-10)
dobj(has-9, gun-11)
aux(threatening-15, is-14)
conj_and(has-9, threatening-15)
advcl(idea-40, threatening-15)
aux(shoot-17, to-16)
xcomp(threatening-15, shoot-17)
dobj(shoot-17, someone-18)
prep_with(shoot-17, it-20)
aux(shot-25, has-23)
advmod(shot-25, already-24)
conj_or(has-9, shot-25)
advcl(idea-40, shot-25)
dobj(shot-25, someone-26)
csubj(idea-40, trying-28)
aux(use-30, to-29)
xcomp(trying-28, use-30)
amod(methods-32, less-than-lethal-31)
dobj(use-30, methods-32)
aux(neutralize-34, to-33)
xcomp(use-30, neutralize-34)
dobj(neutralize-34, him-35)
cop(idea-40, is-36)
neg(idea-40, n't-37)
det(idea-40, a-38)
amod(idea-40, good-39)
ccomp(is-5, idea-40)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB put)
          (NP (PRP it))
          (ADVP (RB simply)))))
    (, ,)
    (NP (DT a) (NN gun))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS best) (NN way))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB make)
                (S
                  (NP (JJ bad) (NNS guys))
                  (VP (VB go)
                    (PRT (RP away))))))))))
    (. .)))

aux(put-2, To-1)
purpcl(way-11, put-2)
dobj(put-2, it-3)
advmod(put-2, simply-4)
det(gun-7, a-6)
nsubj(way-11, gun-7)
cop(way-11, is-8)
det(way-11, the-9)
amod(way-11, best-10)
root(ROOT-0, way-11)
aux(make-13, to-12)
infmod(way-11, make-13)
amod(guys-15, bad-14)
nsubj(go-16, guys-15)
ccomp(make-13, go-16)
prt(go-16, away-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN room)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBG fumbling)
                (PP (IN with)
                  (NP (DT a) (JJ beanbag) (NN shotgun)))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (NN someone))
                    (VP (VBZ is)
                      (VP (VBG executing)
                        (NP (NNS people))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(room-4, no-3)
nsubj(is-2, room-4)
aux(fumbling-7, to-5)
aux(fumbling-7, be-6)
infmod(room-4, fumbling-7)
det(shotgun-11, a-9)
amod(shotgun-11, beanbag-10)
prep_with(fumbling-7, shotgun-11)
advmod(executing-15, when-12)
nsubj(executing-15, someone-13)
aux(executing-15, is-14)
advcl(fumbling-7, executing-15)
dobj(executing-15, people-16)

(ROOT
  (S
    (VP (VB Take)
      (NP
        (NP (NNP Virginia) (NNP Tech))
        (PP (IN for)
          (NP (NN example)))))
    (. .)))

root(ROOT-0, Take-1)
nn(Tech-3, Virginia-2)
dobj(Take-1, Tech-3)
prep_for(Tech-3, example-5)

(ROOT
  (S
    (NP (DT The) (NN shooter))
    (VP (VBD was)
      (VP (VBG going)
        (PP (IN from)
          (NP (NN classroom)))
        (PP (TO to)
          (NP
            (NP (NN classroom) (NN shooting) (NNS people))
            (, ,)
            (NP (`` ``) (NN execution-style) ('' ''))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (DT the) (NNS media))
            (VP (VBZ likes)
              (S
                (VP (TO to)
                  (VP (VB call)
                    (NP (PRP it))))))))))
    (. .)))

det(shooter-2, The-1)
nsubj(going-4, shooter-2)
aux(going-4, was-3)
root(ROOT-0, going-4)
prep_from(going-4, classroom-6)
nn(people-10, classroom-8)
nn(people-10, shooting-9)
prep_to(going-4, people-10)
appos(people-10, execution-style-13)
mark(likes-19, as-16)
det(media-18, the-17)
nsubj(likes-19, media-18)
xsubj(call-21, media-18)
advcl(going-4, likes-19)
aux(call-21, to-20)
xcomp(likes-19, call-21)
dobj(call-21, it-22)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN case)))
    (, ,)
    (S
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB get)
              (ADJP (JJ rid)
                (PP (IN of)
                  (NP (PRP him))))
              (PP (IN without)
                (S
                  (VP (VBG hurting)
                    (CC or)
                    (VBG killing)
                    (NP (PRP him))))))))))
    (VP (MD would)
      (ADVP (RB just))
      (VP (VB allow)
        (S
          (NP (PRP him))
          (VP (TO to)
            (VP (VB kill)
              (NP (JJR more) (NNS people)))))
        (, ,)
        (SBAR (IN while)
          (S
            (NP (DT the) (NN police))
            (VP (VBP try)
              (S
                (VP (TO to)
                  (VP (VB taser)
                    (NP (PRP him))))))))))
    (. .)))

det(case-3, this-2)
prep_in(allow-18, case-3)
csubj(allow-18, trying-5)
aux(rid-8, to-6)
dep(rid-8, get-7)
xcomp(trying-5, rid-8)
prep_of(rid-8, him-10)
prepc_without(rid-8, hurting-12)
prepc_without(rid-8, killing-14)
conj_or(hurting-12, killing-14)
dobj(hurting-12, him-15)
aux(allow-18, would-16)
advmod(allow-18, just-17)
root(ROOT-0, allow-18)
nsubj(kill-21, him-19)
aux(kill-21, to-20)
xcomp(allow-18, kill-21)
amod(people-23, more-22)
dobj(kill-21, people-23)
mark(try-28, while-25)
det(police-27, the-26)
nsubj(try-28, police-27)
xsubj(taser-30, police-27)
advcl(allow-18, try-28)
aux(taser-30, to-29)
xcomp(try-28, taser-30)
dobj(taser-30, him-31)

(ROOT
  (S
    (ADVP (RB Back)
      (PP (TO to)
        (NP (DT the) (JJ self-defense) (NN issue) (NN pepper))))
    (NP (NN spray)
      (CC and)
      (NNS tasers))
    (VP (VBP are)
      (PP (IN for)
        (NP (DT the) (JJ drunk) (NN guy)))
      (PP (IN from)
        (NP
          (NP (DT the) (NN bar))
          (VP (VBG getting)
            (ADJP
              (NP (DT a) (RB little))
              (RB too) (JJ friendly))))))
    (. .)))

advmod(are-10, Back-1)
det(pepper-6, the-3)
amod(pepper-6, self-defense-4)
nn(pepper-6, issue-5)
prep_to(Back-1, pepper-6)
nsubj(are-10, spray-7)
conj_and(spray-7, tasers-9)
nsubj(are-10, tasers-9)
root(ROOT-0, are-10)
det(guy-14, the-12)
amod(guy-14, drunk-13)
prep_for(are-10, guy-14)
det(bar-17, the-16)
prep_from(are-10, bar-17)
dep(friendly-22, getting-18)
det(little-20, a-19)
dep(friendly-22, little-20)
advmod(friendly-22, too-21)
partmod(bar-17, friendly-22)

