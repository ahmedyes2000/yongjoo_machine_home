(ROOT
  (S
    (NP (PRP I))
    (VP (VBP fail)
      (S
        (VP (TO to)
          (VP (VB see)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (DT this))
                (VP (VBZ is)
                  (ADJP (JJ different))
                  (S
                    (ADVP (RB then))
                    (VP (VBG obtaining)
                      (S
                        (NP (DT a) (JJ concealed) (NNS weapons))
                        (VP (VB permit)
                          (PP (IN in)
                            (NP (JJS most) (NNS states)))
                          (ADVP (RB already)))))))))))))
    (. ?)))

nsubj(fail-2, I-1)
xsubj(see-4, I-1)
root(ROOT-0, fail-2)
aux(see-4, to-3)
xcomp(fail-2, see-4)
advmod(different-8, how-5)
nsubj(different-8, this-6)
cop(different-8, is-7)
ccomp(see-4, different-8)
advmod(obtaining-10, then-9)
xcomp(different-8, obtaining-10)
det(weapons-13, a-11)
amod(weapons-13, concealed-12)
nsubj(permit-14, weapons-13)
ccomp(obtaining-10, permit-14)
amod(states-17, most-16)
prep_in(permit-14, states-17)
advmod(permit-14, already-18)

(ROOT
  (S
    (S
      (NP (DT All) (NNS states))
      (VP (VBP require)
        (NP (DT a) (NN background) (NN check))))
    (, ,)
    (S
      (NP (JJS most))
      (VP (VBP require)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT no) (NN history))
                (PP (IN of)
                  (NP (JJ mental) (NN illness)
                    (PRN (-LRB- -LRB-)
                      (S
                        (NP (PRP I))
                        (VP (VBP am)
                          (VP (VBG assuming)
                            (S
                              (S
                                (NP (DT this))
                                (VP (VBZ is)
                                  (NP (DT all) (NNS states))))
                              (CC but)
                              (S
                                (NP (PRP I))
                                (VP (MD could) (RB n't)
                                  (VP (VB find)
                                    (NP (NNS statutes))
                                    (PP (IN for)
                                      (NP (DT all) (CD 50) (NNS states)))
                                    (SBAR (IN so)
                                      (S
                                        (NP (PRP I))
                                        (VP (VBP am)
                                          (ADVP (RB just))
                                          (VP (VBG saying)
                                            (ADVP (RBS most)))))))))))))
                      (-RRB- -RRB-))))))))))
    (, ,)
    (S
      (NP (PRP you))
      (VP (MD must)
        (VP (VB be)
          (UCP
            (NP (CD 21))
            (CC or)
            (ADJP (JJR older))))))
    (, ,)
    (CC and)
    (S
      (NP (JJS most) (NNS states))
      (VP (VBP require)
        (NP
          (NP (DT some) (NN type))
          (PP (IN of)
            (NP (JJ firearms) (NN safety) (NN course))))
        (SBAR (IN before)
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB get)
                (NP (DT a) (NN permit))))))))
    (. .)))

det(states-2, All-1)
nsubj(require-3, states-2)
root(ROOT-0, require-3)
det(check-6, a-4)
nn(check-6, background-5)
dobj(require-3, check-6)
nsubj(require-9, most-8)
ccomp(require-3, require-9)
conj_and(require-3, require-9)
nsubj(have-12, you-10)
aux(have-12, to-11)
xcomp(require-9, have-12)
det(history-14, no-13)
dobj(have-12, history-14)
amod(illness-17, mental-16)
prep_of(history-14, illness-17)
nsubj(assuming-21, I-19)
aux(assuming-21, am-20)
dep(illness-17, assuming-21)
nsubj(states-25, this-22)
cop(states-25, is-23)
det(states-25, all-24)
dep(assuming-21, states-25)
nsubj(find-30, I-27)
aux(find-30, could-28)
neg(find-30, n't-29)
dep(assuming-21, find-30)
conj_but(states-25, find-30)
dobj(find-30, statutes-31)
det(states-35, all-33)
num(states-35, 50-34)
prep_for(find-30, states-35)
mark(saying-40, so-36)
nsubj(saying-40, I-37)
aux(saying-40, am-38)
advmod(saying-40, just-39)
advcl(find-30, saying-40)
advmod(saying-40, most-41)
nsubj(21-47, you-44)
nsubj(older-49, you-44)
aux(21-47, must-45)
cop(21-47, be-46)
ccomp(require-3, 21-47)
conj_and(require-3, 21-47)
ccomp(require-3, older-49)
conj_and(require-3, older-49)
conj_or(21-47, older-49)
amod(states-53, most-52)
nsubj(require-54, states-53)
conj_and(require-3, require-54)
det(type-56, some-55)
dobj(require-54, type-56)
amod(course-60, firearms-58)
nn(course-60, safety-59)
prep_of(type-56, course-60)
mark(get-64, before-61)
nsubj(get-64, you-62)
aux(get-64, can-63)
advcl(require-54, get-64)
det(permit-66, a-65)
dobj(get-64, permit-66)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ does) (RB n't)
      (ADVP (RB even))
      (VP (VB bring)
        (PP (IN in)
          (NP
            (NP (DT the) (NN part))
            (PP (IN about)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (PRP you))
                  (VP (VBP are)
                    (VP (VBG restricting)
                      (S
                        (NP (DT the) (NNS rights))
                        (NP
                          (NP (DT the) (JJ other) (NN half))
                          (PP (IN of)
                            (NP
                              (NP (NNS teachers))
                              (PRN (-LRB- -LRB-)
                                (NP
                                  (NP
                                    (QP (CC or)
                                      (CD 3\/4)))
                                  (PP (IN of)
                                    (NP (NNS students))))
                                (-RRB- -RRB-)))))))))))))))
    (. .)))

nsubj(bring-5, That-1)
aux(bring-5, does-2)
neg(bring-5, n't-3)
advmod(bring-5, even-4)
root(ROOT-0, bring-5)
det(part-8, the-7)
prep_in(bring-5, part-8)
advmod(restricting-13, why-10)
nsubj(restricting-13, you-11)
aux(restricting-13, are-12)
prepc_about(part-8, restricting-13)
det(rights-15, the-14)
nsubj(half-18, rights-15)
det(half-18, the-16)
amod(half-18, other-17)
xcomp(restricting-13, half-18)
prep_of(half-18, teachers-20)
cc(3\/4-23, or-22)
dep(teachers-20, 3\/4-23)
prep_of(3\/4-23, students-25)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (S
          (NP (PRP them))
          (ADJP (RB any) (JJ different)
            (PP (IN from)
              (NP (DT the) (NNS others)))))))
    (. ?)))

nsubj(makes-2, What-1)
root(ROOT-0, makes-2)
nsubj(different-5, them-3)
advmod(different-5, any-4)
xcomp(makes-2, different-5)
det(others-8, the-7)
prep_from(different-5, others-8)

(ROOT
  (SBARQ
    (WHADVP
      (ADVP (RB Also))
      (WRB why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB believe)
        (S
          (NP (NNS teachers))
          (VP (VB deserve)
            (NP (PRP$ their) (NNS rights))
            (ADVP (RBR more))
            (PP (IN than)
              (NP (DT the) (NN student) (NN body)))))))
    (. ?)))

advmod(why-2, Also-1)
advmod(believe-5, why-2)
aux(believe-5, do-3)
nsubj(believe-5, you-4)
root(ROOT-0, believe-5)
nsubj(deserve-7, teachers-6)
ccomp(believe-5, deserve-7)
poss(rights-9, their-8)
dobj(deserve-7, rights-9)
advmod(deserve-7, more-10)
det(body-14, the-12)
nn(body-14, student-13)
prep_than(deserve-7, body-14)

(ROOT
  (SINV
    (PP (IN Like)
      (NP (PRP I)))
    (VP (VBP have)
      (VP (VBN said)
        (PP (IN on)
          (NP (RB here)))
        (PP (IN before)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ makes)
                (NP
                  (NP
                    (NP (DT a)
                      (ADJP
                        (NP (CD 27) (NN year))
                        (JJ old))
                      (JJ first) (NN year) (NN teacher))
                    (ADJP
                      (ADJP (JJ different))
                      (CC or)
                      (ADJP (RBR more) (JJ deserving))))
                  (PP (IN of)
                    (NP (PRP$ their) (NN right)
                      (S
                        (VP (TO to)
                          (VP (VB defend)
                            (NP (PRP themselves))
                            (PP (IN than)
                              (NP (DT a) (CD 25) (NN year)))))))))))))))
    (NP
      (NP (JJ old) (NN veteran))
      (VP (VBG coming)
        (ADVP (RB back))
        (PP (TO to)
          (NP (NN school)))))
    (. ?)))

prep_like(said-4, I-2)
aux(said-4, have-3)
root(ROOT-0, said-4)
prep(said-4, on-5)
pobj(on-5, here-6)
nsubj(makes-9, what-8)
prepc_before(said-4, makes-9)
det(teacher-16, a-10)
num(year-12, 27-11)
npadvmod(old-13, year-12)
amod(teacher-16, old-13)
amod(teacher-16, first-14)
nn(teacher-16, year-15)
dobj(makes-9, teacher-16)
amod(teacher-16, different-17)
advmod(deserving-20, more-19)
amod(teacher-16, deserving-20)
conj_or(different-17, deserving-20)
poss(right-23, their-22)
prep_of(teacher-16, right-23)
aux(defend-25, to-24)
infmod(right-23, defend-25)
dobj(defend-25, themselves-26)
det(year-30, a-28)
num(year-30, 25-29)
prep_than(defend-25, year-30)
amod(veteran-32, old-31)
nsubj(said-4, veteran-32)
partmod(veteran-32, coming-33)
advmod(coming-33, back-34)
prep_to(coming-33, school-36)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (VP (VBG saying)
        (NP
          (NP (PRP$ its)
            (NP (DT a)
              (ADJP (RB completely) (JJ bad))
              (NN idea)))
          (SBAR
            (S
              (NP
                (NP (PRP$ its)
                  (ADJP (RB just) (DT that))
                  (NN everything))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBD stated)))))
              (VP (VBZ is)
                (ADVP (RB already))
                (VP (VBG being)
                  (VP (VBN done)
                    (PP (IN at)
                      (NP (DT a) (NN state) (NN level)))
                    (ADVP (RB so))))))))
        (FRAG
          (WHADVP (WRB why))
          (VP (VB repeat)
            (NP (PRP it))))))
    (. .)))

nsubj(saying-4, I-1)
aux(saying-4, am-2)
neg(saying-4, not-3)
root(ROOT-0, saying-4)
poss(idea-9, its-5)
det(idea-9, a-6)
advmod(bad-8, completely-7)
amod(idea-9, bad-8)
dobj(saying-4, idea-9)
poss(everything-13, its-10)
advmod(that-12, just-11)
amod(everything-13, that-12)
dobj(stated-15, everything-13)
nsubjpass(done-19, everything-13)
nsubj(stated-15, you-14)
rcmod(everything-13, stated-15)
aux(done-19, is-16)
advmod(done-19, already-17)
auxpass(done-19, being-18)
rcmod(idea-9, done-19)
det(level-23, a-21)
nn(level-23, state-22)
prep_at(done-19, level-23)
advmod(done-19, so-24)
dep(repeat-26, why-25)
dep(saying-4, repeat-26)
dobj(repeat-26, it-27)

(ROOT
  (S
    (NP
      (NP (PRP$ Its)
        (ADJP (RB just) (DT another))
        (NN level))
      (PP (IN of)
        (NP (NN government))))
    (VP (VBZ restriction)
      (PP (IN on)
        (NP (PRP$ our) (NN right)
          (S
            (VP (TO to)
              (VP (VB keep)
                (S
                  (NP (PRP ourselves))
                  (ADJP (JJ safe)))))))))
    (. .)))

poss(level-4, Its-1)
advmod(another-3, just-2)
amod(level-4, another-3)
nsubj(restriction-7, level-4)
prep_of(level-4, government-6)
root(ROOT-0, restriction-7)
poss(right-10, our-9)
prep_on(restriction-7, right-10)
aux(keep-12, to-11)
infmod(right-10, keep-12)
nsubj(safe-14, ourselves-13)
xcomp(keep-12, safe-14)

(ROOT
  (S (IN So)
    (NP
      (NP (DT the) (NN chance))
      (PP (IN of)
        (NP
          (NP (NN gang) (NNS members))
          (CC and)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (ADJP (RB mentally) (JJ insane)
                    (S
                      (VP (VBG getting)
                        (NP (DT a) (NN permit) (NNS anyways))))))))))))
    (VP (VBP are)
      (ADJP
        (ADJP (RB incredibly) (JJ remote))
        (IN if)
        (ADJP (RB not) (JJ impossible)))
      (ADVP (RB already)))
    (. .)))

dep(remote-19, So-1)
det(chance-3, the-2)
nsubj(remote-19, chance-3)
nn(members-6, gang-5)
prep_of(chance-3, members-6)
prep_of(chance-3, those-8)
conj_and(members-6, those-8)
nsubj(insane-12, those-8)
cop(insane-12, are-10)
advmod(insane-12, mentally-11)
rcmod(those-8, insane-12)
dep(insane-12, getting-13)
det(anyways-16, a-14)
nn(anyways-16, permit-15)
dobj(getting-13, anyways-16)
cop(remote-19, are-17)
advmod(remote-19, incredibly-18)
root(ROOT-0, remote-19)
dep(remote-19, if-20)
neg(impossible-22, not-21)
dep(remote-19, impossible-22)
advmod(remote-19, already-23)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADVP (RB just))
      (VP (VBG adding)
        (NP
          (NP (DT another) (NN layer))
          (PP (IN of)
            (NP (JJ ridiculous) (NNS requirements))))
        (PP (IN onto)
          (NP
            (NP (NN something))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP are)
                  (VP (VBN supposed)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP
                            (NP (DT a) (NN right))
                            (PP (TO to)
                              (NP (NNS anyways)))))))))))))))
    (. .)))

nsubj(adding-4, You-1)
aux(adding-4, are-2)
advmod(adding-4, just-3)
root(ROOT-0, adding-4)
det(layer-6, another-5)
dobj(adding-4, layer-6)
amod(requirements-9, ridiculous-8)
prep_of(layer-6, requirements-9)
prep_onto(adding-4, something-11)
nsubjpass(supposed-14, we-12)
xsubj(have-16, we-12)
auxpass(supposed-14, are-13)
rcmod(something-11, supposed-14)
aux(have-16, to-15)
xcomp(supposed-14, have-16)
det(right-18, a-17)
dobj(have-16, right-18)
prep_to(right-18, anyways-20)

(ROOT
  (S
    (S
      (NP (PRP You))
      (ADVP (RB also))
      (VP (VB forget)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP wish)
                    (S
                      (VP (TO to)
                        (VP (VB carry)
                          (NP (DT a) (NN weapon))
                          (ADVP (RB illegally))
                          (PP (IN on)
                            (NP (NN campus))))))))))
            (VP (MD will)
              (VP (VB do)
                (NP (PRP it))
                (ADVP (DT no) (NN matter)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (DT the) (NN law))
                      (VP (VBZ says)))))))))))
    (, ,) (IN so)
    (S
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP are)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (NP (NNS permits))))))))))
      (VP (VBP are) (RB n't)
        (NP
          (NP (DT the) (NNS ones))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP need)
                (S
                  (VP (TO to)
                    (VP (VB worry)
                      (PRT (RP about)))))))))))
    (. .)))

nsubj(forget-3, You-1)
advmod(forget-3, also-2)
root(ROOT-0, forget-3)
complm(do-16, that-4)
nsubj(wish-7, those-5)
nsubj(do-16, those-5)
rcmod(those-5, wish-7)
aux(carry-9, to-8)
xcomp(wish-7, carry-9)
det(weapon-11, a-10)
dobj(carry-9, weapon-11)
advmod(carry-9, illegally-12)
prep_on(carry-9, campus-14)
aux(do-16, will-15)
ccomp(forget-3, do-16)
dobj(do-16, it-17)
dep(matter-19, no-18)
advmod(do-16, matter-19)
dobj(says-23, what-20)
det(law-22, the-21)
nsubj(says-23, law-22)
dep(matter-19, says-23)
dep(forget-3, so-25)
nsubj(going-29, those-26)
nsubj(ones-36, those-26)
aux(going-29, are-28)
rcmod(those-26, going-29)
aux(get-31, to-30)
xcomp(going-29, get-31)
dobj(get-31, permits-32)
cop(ones-36, are-33)
neg(ones-36, n't-34)
det(ones-36, the-35)
ccomp(forget-3, ones-36)
dobj(need-38, ones-36)
nsubj(need-38, you-37)
xsubj(worry-40, you-37)
rcmod(ones-36, need-38)
aux(worry-40, to-39)
xcomp(need-38, worry-40)
prt(worry-40, about-41)

(ROOT
  (S
    (S
      (NP (DT Those) (NN gang) (NNS members))
      (VP (VBD and\/or)
        (SBAR
          (S
            (NP
              (ADJP (RB mentally) (JJ insane))
              (NN wont))
            (VP (VBP go)
              (PP (IN through)
                (NP
                  (NP (PDT all) (DT those) (NNS requirements))
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (MD will)
                        (ADVP (RB just))
                        (VP (VB carry)
                          (PP (IN on)
                            (NP (NN campus) (NNS anyways))))))))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP do) (RB n't)
      (VP (VB care)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT the) (NNS laws))
            (VP (VBP are))))))
    (. .)))

det(members-3, Those-1)
nn(members-3, gang-2)
nsubj(and\/or-4, members-3)
ccomp(care-24, and\/or-4)
advmod(insane-6, mentally-5)
amod(wont-7, insane-6)
nsubj(go-8, wont-7)
ccomp(and\/or-4, go-8)
predet(requirements-12, all-10)
det(requirements-12, those-11)
prep_through(go-8, requirements-12)
dobj(carry-16, requirements-12)
nsubj(carry-16, they-13)
aux(carry-16, will-14)
advmod(carry-16, just-15)
rcmod(requirements-12, carry-16)
nn(anyways-19, campus-18)
prep_on(carry-16, anyways-19)
nsubj(care-24, they-21)
aux(care-24, do-22)
neg(care-24, n't-23)
root(ROOT-0, care-24)
dobj(are-28, what-25)
det(laws-27, the-26)
nsubj(are-28, laws-27)
ccomp(care-24, are-28)

(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (S
          (S
            (VP (VBG planning)
              (PP (IN on)
                (S
                  (VP (VBG hurting)
                    (CC or)
                    (VBG killing)
                    (NP (NN someone)))))))
          (SBARQ
            (WHADVP (WRB why))
            (SQ (MD would)
              (NP (PRP they))
              (VP (VB care)
                (PP (IN about)
                  (S
                    (NP (DT the) (NNS laws))
                    (VP (VBG saying)
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBP are) (RB n't)
                            (VP (VBN allowed)
                              (S
                                (VP (TO to)
                                  (VP (VB carry)
                                    (NP (DT a) (NN weapon))
                                    (PP (IN on)
                                      (NP (NN campus)))))))))))))))
            (. ?)))))))

mark(are-3, If-1)
nsubj(are-3, they-2)
root(ROOT-0, are-3)
dep(are-3, planning-4)
prepc_on(planning-4, hurting-6)
prepc_on(planning-4, killing-8)
conj_or(hurting-6, killing-8)
dobj(hurting-6, someone-9)
advmod(care-13, why-10)
aux(care-13, would-11)
nsubj(care-13, they-12)
dep(planning-4, care-13)
det(laws-16, the-15)
nsubj(saying-17, laws-16)
prepc_about(care-13, saying-17)
nsubjpass(allowed-21, they-18)
xsubj(carry-23, they-18)
auxpass(allowed-21, are-19)
neg(allowed-21, n't-20)
ccomp(saying-17, allowed-21)
aux(carry-23, to-22)
xcomp(allowed-21, carry-23)
det(weapon-25, a-24)
dobj(carry-23, weapon-25)
prep_on(carry-23, campus-27)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP (DT the) (NN population) (NNS numbers))))
    (NP (PRP you))
    (VP (MD must)
      (VP (VB remember)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN ratio))
              (PP (IN of)
                (NP (JJ concealed) (NN weapon))))
            (VP (VBP permit)
              (SBAR
                (S
                  (NP
                    (NP (NNS carriers))
                    (CC and)
                    (NP (JJ normal) (NNS citizens)))
                  (VP (VBZ is)
                    (NP
                      (NP
                        (QP (RB about) (CD 1)))
                      (PP (RB out) (IN of)
                        (NP (CD 100))))))))))))
    (. .)))

prepc_as_for(remember-8, for-2)
det(numbers-5, the-3)
nn(numbers-5, population-4)
pobj(remember-8, numbers-5)
nsubj(remember-8, you-6)
aux(remember-8, must-7)
root(ROOT-0, remember-8)
complm(permit-15, that-9)
det(ratio-11, the-10)
nsubj(permit-15, ratio-11)
amod(weapon-14, concealed-13)
prep_of(ratio-11, weapon-14)
ccomp(remember-8, permit-15)
nsubj(1-22, carriers-16)
amod(citizens-19, normal-18)
conj_and(carriers-16, citizens-19)
nsubj(1-22, citizens-19)
cop(1-22, is-20)
quantmod(1-22, about-21)
ccomp(permit-15, 1-22)
prep_out_of(1-22, 100-25)

(ROOT
  (S (CC So)
    (SBAR (IN while)
      (S
        (NP (PRP I))
        (VP (VBP believe)
          (NP (NN campus)))))
    (VP (MD would)
      (VP (VB be)
        (ADJP
          (ADJP (JJR safer))
          (SBAR (IN if)
            (S
              (NP
                (NP
                  (QP (RB over) (DT a) (CD 1\/4)))
                (PP (IN of)
                  (NP (NN campus))))
              (VP (VBD carried)
                (SBAR (IN as)
                  (S
                    (NP (PRP you))
                    (VP (VBP propose)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (MD would)
                            (ADVP (RB never))
                            (VP (VB happen))))))))))))))
    (. .)))

cc(safer-8, So-1)
mark(believe-4, while-2)
nsubj(believe-4, I-3)
csubj(safer-8, believe-4)
dobj(believe-4, campus-5)
aux(safer-8, would-6)
cop(safer-8, be-7)
root(ROOT-0, safer-8)
mark(carried-15, if-9)
quantmod(1\/4-12, over-10)
quantmod(1\/4-12, a-11)
nsubj(carried-15, 1\/4-12)
prep_of(1\/4-12, campus-14)
ccomp(safer-8, carried-15)
mark(propose-18, as-16)
nsubj(propose-18, you-17)
advcl(carried-15, propose-18)
nsubj(happen-22, it-19)
aux(happen-22, would-20)
neg(happen-22, never-21)
ccomp(propose-18, happen-22)

(ROOT
  (S
    (ADVP (RB Also))
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB take)
            (PP (IN in)
              (NP (NN account)))
            (NP
              (NP (DT the) (NN fact))
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (VBP have)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (NP (CD 21))
                          (S
                            (VP (TO to)
                              (VP (VB obtain)
                                (NP (DT a) (NN permit)))))
                          (SBAR (IN so)
                            (S
                              (NP (DT that))
                              (VP (VBZ takes)
                                (NP
                                  (NP
                                    (QP (RB about) (CD 80))
                                    (NN %))
                                  (PP (IN of)
                                    (NP
                                      (NP (DT the) (NN student) (NN population))
                                      (PP (RB out) (IN of)
                                        (NP (DT the) (NN equation))))))))))))
                    (S
                      (VP (TO to)
                        (VP (VB begin)
                          (PP (IN with)))))))))))))
    (. .)))

advmod(have-3, Also-1)
nsubj(have-3, you-2)
xsubj(take-5, you-2)
root(ROOT-0, have-3)
aux(take-5, to-4)
xcomp(have-3, take-5)
prep_in(take-5, account-7)
det(fact-9, the-8)
dobj(take-5, fact-9)
dobj(have-12, fact-9)
prep_with(begin-35, fact-9)
complm(have-12, that-10)
nsubj(have-12, you-11)
xsubj(21-15, you-11)
xsubj(begin-35, you-11)
dep(fact-9, have-12)
aux(21-15, to-13)
cop(21-15, be-14)
xcomp(have-12, 21-15)
aux(obtain-17, to-16)
xcomp(21-15, obtain-17)
det(permit-19, a-18)
dobj(obtain-17, permit-19)
mark(takes-22, so-20)
nsubj(takes-22, that-21)
advcl(21-15, takes-22)
quantmod(80-24, about-23)
num(%-25, 80-24)
dobj(takes-22, %-25)
det(population-29, the-27)
nn(population-29, student-28)
prep_of(%-25, population-29)
det(equation-33, the-32)
prep_out_of(population-29, equation-33)
aux(begin-35, to-34)
xcomp(have-12, begin-35)

