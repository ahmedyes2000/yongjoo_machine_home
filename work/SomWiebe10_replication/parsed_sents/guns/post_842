(ROOT
  (S
    (NP
      (NP (DT The)
        (QP (RB about) (CD 80))
        (NN %))
      (PP (IN of)
        (NP (DT the)
          (ADJP (`` ``) (JJ general) (NN public) ('' ''))
          (NN dont))))
    (ADVP (RB even))
    (VP (VBP know)
      (NP
        (NP (DT a) (NN thing))
        (PP (IN about)
          (NP (NN gun) (NN safety)))))
    (. .)))

det(%-4, The-1)
quantmod(80-3, about-2)
num(%-4, 80-3)
nsubj(know-13, %-4)
det(dont-11, the-6)
dep(public-9, general-8)
amod(dont-11, public-9)
prep_of(%-4, dont-11)
advmod(know-13, even-12)
root(ROOT-0, know-13)
det(thing-15, a-14)
dobj(know-13, thing-15)
nn(safety-18, gun-17)
prep_about(thing-15, safety-18)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (FW i))
        (VP (VBP agree)
          (SBAR (IN that)
            (S
              (NP (NNS criminals))
              (VP (MD should) (RB not)
                (VP (VB possess)
                  (NP (NNS guns)))))))))
    (, ,)
    (ADVP (IN at) (JJS least))
    (NP
      (NP (JJS most))
      (PP (IN of)
        (NP (PRP them))))
    (VP (VBP know)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (TO to)
            (VP (VB use)
              (NP (PRP it)))))))
    (. .)))

mark(agree-3, Although-1)
nsubj(agree-3, i-2)
advcl(know-16, agree-3)
complm(possess-8, that-4)
nsubj(possess-8, criminals-5)
aux(possess-8, should-6)
neg(possess-8, not-7)
ccomp(agree-3, possess-8)
dobj(possess-8, guns-9)
advmod(know-16, at-11)
pobj(at-11, least-12)
nsubj(know-16, most-13)
prep_of(most-13, them-15)
root(ROOT-0, know-16)
advmod(use-19, how-17)
aux(use-19, to-18)
ccomp(know-16, use-19)
xcomp(know-16, use-19)
dobj(use-19, it-20)

(ROOT
  (S
    (S
      (S
        (VP (VB Take)
          (NP (DT a) (NN place))
          (PP (IN like)
            (NP (NN school)))))
      (, ,)
      (NP (PRP we))
      (VP (VBP have)
        (NP
          (NP (DT no) (NNS guns))
          (ADVP (RB here)))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP
          (NP (NNS cases))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (NNS shootings))
              (VP (VBP happen))))))
      (, ,)
      (NP (PRP$ its)
        (ADJP
          (ADJP (RB much) (JJR less))
          (ADVP (RB then)))
        (NN i))
      (VP (MD would)
        (VP (VB be)
          (SBAR (IN if)
            (S
              (NP (NNS people))
              (VP (VBD had)
                (VP (VBN guns)
                  (NP (NN everyday)))))))))
    (. .)))

ccomp(have-8, Take-1)
det(place-3, a-2)
dobj(Take-1, place-3)
prep_like(Take-1, school-5)
nsubj(have-8, we-7)
root(ROOT-0, have-8)
det(guns-10, no-9)
dobj(have-8, guns-10)
advmod(guns-10, here-11)
prep_in(be-26, cases-15)
advmod(happen-18, where-16)
nsubj(happen-18, shootings-17)
rcmod(cases-15, happen-18)
poss(i-24, its-20)
advmod(less-22, much-21)
amod(i-24, less-22)
advmod(less-22, then-23)
nsubj(be-26, i-24)
aux(be-26, would-25)
conj_and(have-8, be-26)
mark(guns-30, if-27)
nsubj(guns-30, people-28)
aux(guns-30, had-29)
advcl(be-26, guns-30)
dobj(guns-30, everyday-31)

(ROOT
  (S
    (NP (JJ Same))
    (VP (VBZ goes)
      (PP (IN for)
        (NP
          (NP (DT a) (NN biggerscale))
          (PP (IN like)
            (NP (DT the) (NNP USA))))))
    (. .)))

nsubj(goes-2, Same-1)
root(ROOT-0, goes-2)
det(biggerscale-5, a-4)
prep_for(goes-2, biggerscale-5)
det(USA-8, the-7)
prep_like(biggerscale-5, USA-8)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (RB also))
      (VP (VBP have) (RB all)
        (VP (VBN been)
          (VP (VBN trained)
            (PP (IN with)
              (NP (DT the) (NN lock)))
            (PP (IN down)
              (NP (NN drill)))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB im))
      (NP (JJ certain) (DT the) (NN government))
      (VP (MD would)
        (VP (VB issue)
          (NP (NN something))
          (PP (IN like)
            (NP (DT that)))
          (ADVP (RB as) (RB well)))))
    (. .)))

nsubjpass(trained-6, We-1)
advmod(trained-6, also-2)
aux(trained-6, have-3)
advmod(trained-6, all-4)
auxpass(trained-6, been-5)
root(ROOT-0, trained-6)
det(lock-9, the-8)
prep_with(trained-6, lock-9)
prep_down(trained-6, drill-11)
advmod(issue-19, im-14)
amod(government-17, certain-15)
det(government-17, the-16)
nsubj(issue-19, government-17)
aux(issue-19, would-18)
conj_and(trained-6, issue-19)
dobj(issue-19, something-20)
prep_like(issue-19, that-22)
advmod(well-24, as-23)
mwe(well-24, as-23)
advmod(issue-19, well-24)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS people))
      (PP (IN behind)
        (NP
          (NP (DT the) (NNS guns))
          (VP (`` ``) (VBG defending) ('' '')
            (NP (PRP themselves))))))
    (VP (VBP are)
      (ADVP (RB just)
        (PP (IN as)
          (NP (NN trigger))))
      (ADJP (JJ happy)
        (PP (IN as)
          (NP (DT any) (NN intruder)))))
    (. .)))

det(people-2, The-1)
nsubj(happy-14, people-2)
det(guns-5, the-4)
prep_behind(people-2, guns-5)
partmod(guns-5, defending-7)
dobj(defending-7, themselves-9)
cop(happy-14, are-10)
advmod(happy-14, just-11)
prep_as(just-11, trigger-13)
root(ROOT-0, happy-14)
det(intruder-17, any-16)
prep_as(happy-14, intruder-17)

(ROOT
  (S
    (S
      (S
        (VP (TO To)
          (VP
            (ADVP (RB just))
            (VB say)
            (NP (NNS guns)))))
      (VP (MD should)
        (VP (VB be)
          (ADVP (RB aloud))
          (SBAR (IN because)
            (S
              (NP (NNS criminals))
              (VP (VBP have)
                (NP (PRP them))))))))
    (, ,)
    (VP (VBZ is)
      (ADJP (JJ childish)))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP need)
        (PP (TO to)
          (NP
            (NP (NN age) (JJ past) (JJ barbaric) (NN murder))
            (VP (VBN caused)
              (PP (IN by)
                (NP (NNS guns))))))))
    (. .)))

aux(say-3, To-1)
advmod(say-3, just-2)
csubj(be-6, say-3)
dobj(say-3, guns-4)
aux(be-6, should-5)
ccomp(childish-14, be-6)
advmod(be-6, aloud-7)
mark(have-10, because-8)
nsubj(have-10, criminals-9)
advcl(be-6, have-10)
dobj(have-10, them-11)
cop(childish-14, is-13)
root(ROOT-0, childish-14)
nsubj(need-17, we-16)
conj_and(childish-14, need-17)
nn(murder-22, age-19)
amod(murder-22, past-20)
amod(murder-22, barbaric-21)
prep_to(need-17, murder-22)
partmod(murder-22, caused-23)
agent(caused-23, guns-25)

(ROOT
  (S
    (NP
      (NP (NNPS Citizens))
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB protect)
              (NP (PRP themselves)))))))
    (VP (MD should)
      (VP (VB use)
        (NP (NN something))
        (SBAR (IN that)
          (S
            (NP (NN wont))
            (VP (VBP kill)
              (NP (NNS people))
              (PP (IN with)
                (NP
                  (NP (DT a) (NN flick))
                  (PP (IN of)
                    (NP (DT a) (NN finger))))))))))
    (. .)))

xsubj(protect-4, Citizens-1)
nsubj(use-7, Citizens-1)
partmod(Citizens-1, trying-2)
aux(protect-4, to-3)
xcomp(trying-2, protect-4)
dobj(protect-4, themselves-5)
aux(use-7, should-6)
root(ROOT-0, use-7)
dobj(use-7, something-8)
complm(kill-11, that-9)
nsubj(kill-11, wont-10)
ccomp(use-7, kill-11)
dobj(kill-11, people-12)
det(flick-15, a-14)
prep_with(kill-11, flick-15)
det(finger-18, a-17)
prep_of(flick-15, finger-18)

(ROOT
  (S
    (S
      (NP (NNP Pepper) (NNP spray))
      (VP (MD can)
        (VP (VB blind))))
    (, ,)
    (NP (NNS tasers))
    (VP (MD will)
      (VP (VB stop)
        (NP (NN someone))
        (SBAR
          (WHADVP (WRB wherever))
          (S
            (NP (PRP they))
            (VP (VBP stand) (, ,)
              (S
                (NP (NNS guns))
                (VP (VB click)
                  (CC and)
                  (VB kill))))))))
    (. .)))

nn(spray-2, Pepper-1)
nsubj(blind-4, spray-2)
aux(blind-4, can-3)
ccomp(stop-8, blind-4)
nsubj(stop-8, tasers-6)
aux(stop-8, will-7)
root(ROOT-0, stop-8)
dobj(stop-8, someone-9)
advmod(stand-12, wherever-10)
nsubj(stand-12, they-11)
advcl(stop-8, stand-12)
nsubj(click-15, guns-14)
nsubj(kill-17, guns-14)
ccomp(stand-12, click-15)
ccomp(stand-12, kill-17)
conj_and(click-15, kill-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD said)
        (NP
          (NP (DT this))
          (PP (IN in)
            (NP (JJ jacobs) (NN dispute))))))
    (, ,)
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (NNS people))
          (VP (VBD were)
            (NP
              (NP (DT the) (NNS ones))
              (VP (VBG killing)
                (NP (NNS people)))))))
      (ADVP (RB then))
      (NP (PRP it))
      (VP (VBP wouldnt)
        (NP (NN matter))
        (SBAR (IN if)
          (S
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (DT a) (NN gun))
                (VP (VBN involved))))))))
    (. .)))

nsubj(said-2, I-1)
root(ROOT-0, said-2)
dobj(said-2, this-3)
amod(dispute-6, jacobs-5)
prep_in(this-3, dispute-6)
mark(ones-13, if-9)
nsubj(ones-13, people-10)
cop(ones-13, were-11)
det(ones-13, the-12)
advcl(wouldnt-18, ones-13)
partmod(ones-13, killing-14)
dobj(killing-14, people-15)
advmod(wouldnt-18, then-16)
nsubj(wouldnt-18, it-17)
conj_but(said-2, wouldnt-18)
dobj(wouldnt-18, matter-19)
mark(was-22, if-20)
expl(was-22, there-21)
advcl(wouldnt-18, was-22)
det(gun-24, a-23)
nsubj(was-22, gun-24)
partmod(gun-24, involved-25)

(ROOT
  (S
    (NP (NNP Umm))
    (VP
      (VP (VBZ heres)
        (S
          (NP (DT a) (JJ visualPerson) (NNP +) (NNP Gun))
          (VP (SYM =)
            (NP (NN Person)))))
      (PRN (-LRB- -LRB-)
        (S
          (NP
            (NP (DT A) (NN person))
            (PP (IN with)
              (NP (DT a) (NN gun))))
          (VP (VBZ kills)
            (NP (DT a) (NN person))))
        (-RRB- -RRB-))
      (VP (VB Take)
        (PRT (RP out))
        (NP (DT the) (NN gun)
          (S
            (VP (VB cause)
              (S
                (NP (PRP$ your))
                (VP (VBG saying)
                  (NP (PRP$ its))
                  (PP (RB not)
                    (NP (PRP$ its) (NN fault))))))))))
    (: ...)))

nsubj(heres-2, Umm-1)
root(ROOT-0, heres-2)
det(Gun-6, a-3)
amod(Gun-6, visualPerson-4)
nn(Gun-6, +-5)
nsubj(Person-8, Gun-6)
dep(Person-8, =-7)
ccomp(heres-2, Person-8)
det(person-11, A-10)
nsubj(kills-15, person-11)
det(gun-14, a-13)
prep_with(person-11, gun-14)
parataxis(heres-2, kills-15)
parataxis(Take-19, kills-15)
det(person-17, a-16)
dobj(kills-15, person-17)
dep(heres-2, Take-19)
prt(Take-19, out-20)
det(gun-22, the-21)
dobj(Take-19, gun-22)
dep(gun-22, cause-23)
nsubj(saying-25, your-24)
dep(cause-23, saying-25)
dobj(saying-25, its-26)
prep(saying-25, not-27)
poss(fault-29, its-28)
pobj(not-27, fault-29)

(ROOT
  (X
    (NP (NN Person) (CD =))
    (: -)
    (FRAG
      (NP
        (NP (NNP PersonIf))
        (SBAR
          (S
            (S
              (NP (DT the) (NN gun))
              (VP (VBP wasnt)
                (ADJP (JJ responsible))))
            (, ,)
            (CC and)
            (S
              (NP (PRP$ its))
              (NP (DT the) (NNS persons) (NN fault)))
            (, ,)
            (S
              (ADVP (RB then))
              (NP (PRP it))
              (VP (VBP wouldnt)
                (NP (NN matter))
                (SBAR (IN if)
                  (S
                    (NP (DT the) (NN gun))
                    (VP (VBD was)
                      (ADVP (RB there)
                        (CC or)
                        (RB not)))))))))))
    (. .)))

root(ROOT-0, Person-1)
num(Person-1, =-2)
dep(Person-1, PersonIf-4)
det(gun-6, the-5)
nsubj(wasnt-7, gun-6)
rcmod(PersonIf-4, wasnt-7)
acomp(wasnt-7, responsible-8)
dep(fault-14, its-11)
det(fault-14, the-12)
nn(fault-14, persons-13)
rcmod(PersonIf-4, fault-14)
conj_and(wasnt-7, fault-14)
advmod(wouldnt-18, then-16)
nsubj(wouldnt-18, it-17)
rcmod(PersonIf-4, wouldnt-18)
conj_and(wasnt-7, wouldnt-18)
dobj(wouldnt-18, matter-19)
mark(was-23, if-20)
det(gun-22, the-21)
nsubj(was-23, gun-22)
advcl(wouldnt-18, was-23)
advmod(was-23, there-24)
advmod(was-23, not-26)
conj_or(there-24, not-26)

(ROOT
  (S (CC But)
    (VP (VB infact)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ makes)
            (NP (PDT quite) (DT the) (NN difference))))))
    (. .)))

cc(infact-2, But-1)
root(ROOT-0, infact-2)
nsubj(makes-4, it-3)
ccomp(infact-2, makes-4)
predet(difference-7, quite-5)
det(difference-7, the-6)
dobj(makes-4, difference-7)

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ Your) (NN point))
        (PP (IN about)
          (NP
            (NP (NNS criminals))
            (VP (VBG finding)
              (NP (JJ illegal) (NNS guns))))))
      (VP (VBZ is)
        (ADVP (RB just))
        (PP (IN like)
          (NP (JJ illegal) (NNS guns)))))
    (, ,)
    (NP (NN something))
    (ADVP (RB just))
    (VP (MD cant)
      (VP (VB be)
        (VP
          (ADVP (RB completely))
          (VBN erased))))
    (. .)))

poss(point-2, Your-1)
nsubj(is-8, point-2)
prep_about(point-2, criminals-4)
partmod(criminals-4, finding-5)
amod(guns-7, illegal-6)
dobj(finding-5, guns-7)
ccomp(cant-16, is-8)
advmod(is-8, just-9)
amod(guns-12, illegal-11)
prep_like(is-8, guns-12)
nsubj(cant-16, something-14)
advmod(cant-16, just-15)
root(ROOT-0, cant-16)
auxpass(erased-19, be-17)
advmod(erased-19, completely-18)
dep(cant-16, erased-19)

(ROOT
  (S (CC But)
    (S
      (VP (VBG saying)
        (S
          (VP (VBG outlawing)
            (SBAR
              (S
                (NP (PRP them))
                (VP (MD would)
                  (VP (VB make)
                    (S
                      (NP (NN gun) (NN rate) (NN increase))
                      (VP (VB cause)
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (VBP are)
                              (ADJP (JJ illegal)))))))))))))))
    (VP (VBZ makes)
      (NP (DT no) (JJ logical) (NN sense)))
    (. .)))

cc(makes-14, But-1)
csubj(makes-14, saying-2)
xcomp(saying-2, outlawing-3)
nsubj(make-6, them-4)
aux(make-6, would-5)
ccomp(outlawing-3, make-6)
nn(increase-9, gun-7)
nn(increase-9, rate-8)
nsubj(cause-10, increase-9)
ccomp(make-6, cause-10)
nsubj(illegal-13, they-11)
cop(illegal-13, are-12)
ccomp(cause-10, illegal-13)
root(ROOT-0, makes-14)
det(sense-17, no-15)
amod(sense-17, logical-16)
dobj(makes-14, sense-17)

