(ROOT
  (S
    (ADVP (RB Yes))
    (NP (PRP I))
    (VP (VBP feel)
      (ADJP
        (ADJP (JJR safer))
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBP am)
              (ADJP (JJR safer)))))))
    (. .)))

advmod(feel-3, Yes-1)
nsubj(feel-3, I-2)
root(ROOT-0, feel-3)
acomp(feel-3, safer-4)
mark(safer-8, because-5)
nsubj(safer-8, I-6)
cop(safer-8, am-7)
ccomp(safer-4, safer-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN used)
        (NP (PRP$ my) (NN gun))
        (PP (IN on)
          (NP
            (QP (JJR more) (IN than) (CD one))
            (NN occasion)))
        (S
          (VP (TO to)
            (VP (VB prevent)
              (NP
                (NP
                  (NP (NN theft))
                  (, ,)
                  (NP (NN assault)))
                (CC and)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ knows)
                      (S
                        (NP (WDT what))
                        (ADJP (RB else))
                        (SBAR
                          (SINV (VBD had)
                            (NP (PRP I))
                            (RB not)
                            (VP (VBN been)
                              (VP (VBN armed)))))))))))))))
    (. .)))

nsubj(used-3, I-1)
xsubj(prevent-12, I-1)
aux(used-3, have-2)
root(ROOT-0, used-3)
poss(gun-5, my-4)
dobj(used-3, gun-5)
mwe(than-8, more-7)
quantmod(one-9, than-8)
num(occasion-10, one-9)
prep_on(used-3, occasion-10)
aux(prevent-12, to-11)
xcomp(used-3, prevent-12)
dobj(prevent-12, theft-13)
appos(theft-13, assault-15)
nsubj(knows-18, who-17)
dobj(prevent-12, knows-18)
conj_and(theft-13, knows-18)
rcmod(theft-13, knows-18)
nsubjpass(armed-25, what-19)
dep(armed-25, else-20)
aux(armed-25, had-21)
nsubjpass(armed-25, I-22)
dep(armed-25, not-23)
auxpass(armed-25, been-24)
xcomp(knows-18, armed-25)

(ROOT
  (S
    (PP (IN In)
      (NP (DT all) (NNS cases)))
    (PRN
      (S
        (NP (PRP I))
        (VP (VBD did)
          (NP (NN nothing))
          (S
            (VP (TO to)
              (VP (VB provoke)
                (NP (NN anyone)))))))
      (, ,))
    (ADVP (RB never))
    (VP (VBD fired)
      (SBAR
        (S
          (NP
            (NP (DT a) (NN shot))
            (CC and)
            (NP (DT no) (NNS children)))
          (VP (VBD died)
            (PP (IN from)
              (NP (PRP$ my) (NN weapon)))))))
    (. .)))

det(cases-3, all-2)
prep_in(fired-12, cases-3)
nsubj(did-5, I-4)
parataxis(fired-12, did-5)
dobj(did-5, nothing-6)
aux(provoke-8, to-7)
xcomp(did-5, provoke-8)
dobj(provoke-8, anyone-9)
neg(fired-12, never-11)
root(ROOT-0, fired-12)
det(shot-14, a-13)
nsubj(died-18, shot-14)
det(children-17, no-16)
conj_and(shot-14, children-17)
nsubj(died-18, children-17)
ccomp(fired-12, died-18)
poss(weapon-21, my-20)
prep_from(died-18, weapon-21)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (DT an) (NN argument))
                  (PP (IN about)
                    (NP
                      (NP (DT the) (JJ human) (NN cost))
                      (PP (IN of)
                        (NP (PRP$ our) (NNS freedoms)))))))))))
      (ADVP (RB then))
      (VP (VBP make)
        (NP
          (NP (DT the) (JJ same) (NN comparison))
          (PP (IN with)
            (NP
              (NP (NN automobile) (NNS deaths))
              (PRN (-LRB- -LRB-)
                (NP (NNP USA)
                  (QP (CD 155per) (CD 1M)))
                (-RRB- -RRB-)))))))
    (CC and)
    (S
      (NP
        (NP (NNS deaths))
        (PP (IN by)
          (NP (JJ medical) (NN malpractice) (-LRB- -LRB-) (CD Thus) (, ,) (NNP America) (POS 's) (NN healthcare) (NN system-induced) (NNS deaths))))
      (VP (VBP are)
        (NP
          (NP (DT the) (JJ third) (JJ leading) (NN cause))
          (PP (IN of)
            (NP
              (NP (DT the) (NN death))
              (PP (IN in)
                (NP (DT the) (NNP U.S.))))))
        (, ,)
        (PP (IN after)
          (NP (NN heart) (NN disease)
            (CC and)
            (NN cancer)))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
xsubj(make-5, you-2)
advcl(make-16, want-3)
csubj(make-16, want-3)
aux(make-5, to-4)
xcomp(want-3, make-5)
det(argument-7, an-6)
dobj(make-5, argument-7)
det(cost-11, the-9)
amod(cost-11, human-10)
prep_about(make-5, cost-11)
poss(freedoms-14, our-13)
prep_of(cost-11, freedoms-14)
advmod(make-16, then-15)
root(ROOT-0, make-16)
det(comparison-19, the-17)
amod(comparison-19, same-18)
dobj(make-16, comparison-19)
nn(deaths-22, automobile-21)
prep_with(comparison-19, deaths-22)
appos(deaths-22, USA-24)
number(1M-26, 155per-25)
num(USA-24, 1M-26)
nsubj(cause-45, deaths-29)
amod(deaths-40, medical-31)
nn(deaths-40, malpractice-32)
num(deaths-40, Thus-34)
poss(deaths-40, America-36)
possessive(deaths-40, 's-37)
nn(deaths-40, healthcare-38)
nn(deaths-40, system-induced-39)
prep_by(deaths-29, deaths-40)
cop(cause-45, are-41)
det(cause-45, the-42)
amod(cause-45, third-43)
amod(cause-45, leading-44)
conj_and(make-16, cause-45)
det(death-48, the-47)
prep_of(cause-45, death-48)
det(U.S.-51, the-50)
prep_in(death-48, U.S.-51)
nn(disease-55, heart-54)
prep_after(cause-45, disease-55)
prep_after(cause-45, cancer-57)
conj_and(disease-55, cancer-57)

(ROOT
  (S
    (NP (NN http:\/\/www.health-care-reform.net\/causedeath.htm))
    (VP (VBZ -RRB-))
    (. .)))

nsubj(-RRB--2, http:\/\/www.health-care-reform.net\/causedeath.htm-1)

(ROOT
  (S
    (SBAR
      (WHNP
        (NP (DT Each))
        (WHPP (IN of)
          (WHNP (WDT which))))
      (S
        (VP (VBP kill)
          (NP
            (NP
              (ADJP
                (NP
                  (QP (JJ many) (NNS times)))
                (JJR more))
              (NNS people))
            (PP (IN per)
              (NP
                (NP (NN annum) (CD .28))
                (PP (IN per)
                  (NP (CD million)))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ fine)
        (PP (IN with)
          (NP (DT that)))))
    (. .)))

nsubj(kill-4, Each-1)
prep_of(Each-1, which-3)
dep(fine-17, kill-4)
quantmod(times-6, many-5)
npadvmod(more-7, times-6)
amod(people-8, more-7)
dobj(kill-4, people-8)
prep_per(people-8, annum-10)
num(annum-10, .28-11)
prep_per(annum-10, million-13)
nsubj(fine-17, I-15)
cop(fine-17, 'm-16)
root(ROOT-0, fine-17)
prep_with(fine-17, that-19)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB be)
      (ADJP (RBR more) (JJ comfortable))
      (PP (IN with)
        (NP
          (QP (RB only) (CD 5)))))
    (. ?)))

aux(comfortable-5, Would-1)
nsubj(comfortable-5, you-2)
cop(comfortable-5, be-3)
advmod(comfortable-5, more-4)
root(ROOT-0, comfortable-5)
quantmod(5-8, only-7)
prep_with(comfortable-5, 5-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADVP (RB actually))
      (VP (VBG ~)
        (ADJP
          (ADVP
            (NP (CD 4) (NNS times))
            (RBR more))
          (JJ likely)
          (S
            (VP (TO to)
              (VP (VB die)
                (PP (IN in)
                  (NP (DT a) (NN car) (NN crash)))
                (PP (IN in)
                  (NP
                    (NP (NNP Canada))
                    (VP
                      (ADVP (RB then))
                      (VBN murdered)
                      (PP (IN with)
                        (NP
                          (NP (DT a) (NN gun))
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NNP U.S.))
                              (PP (IN of)
                                (NP (NNP A.))))))))))))))))))

nsubj(~-4, You-1)
aux(~-4, are-2)
advmod(~-4, actually-3)
root(ROOT-0, ~-4)
num(times-6, 4-5)
npadvmod(more-7, times-6)
advmod(likely-8, more-7)
acomp(~-4, likely-8)
aux(die-10, to-9)
xcomp(likely-8, die-10)
det(crash-14, a-12)
nn(crash-14, car-13)
prep_in(die-10, crash-14)
prep_in(die-10, Canada-16)
advmod(murdered-18, then-17)
partmod(Canada-16, murdered-18)
det(gun-21, a-20)
prep_with(murdered-18, gun-21)
det(U.S.-24, the-23)
prep_in(gun-21, U.S.-24)
prep_of(U.S.-24, A.-26)

