(ROOT
  (S
    (NP (NNS Guns))
    (VP (VBP play)
      (NP
        (NP (DT a) (JJ huge) (NN role))
        (PP (IN in)
          (NP (NN intimidation))))
      (ADVP (RB as) (RB well)))
    (. .)))

nsubj(play-2, Guns-1)
root(ROOT-0, play-2)
det(role-5, a-3)
amod(role-5, huge-4)
dobj(play-2, role-5)
prep_in(role-5, intimidation-7)
advmod(well-9, as-8)
mwe(well-9, as-8)
advmod(play-2, well-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP
          (VP (VBP am)
            (ADJP (VBN strapped)
              (PP (IN for)
                (NP (NN cash)))))
          (CC and)
          (VP (VBP decide)
            (SBAR (IN that)
              (S
                (NP (DT the) (JJ only) (NN way)
                  (S
                    (VP (TO to)
                      (VP (VB make)
                        (NP (DT any) (NN money))))))
                (VP (MD would)
                  (VP (VB be)
                    (PP (TO to)
                      (NP (NN rob) (NN somebody)))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD 'd) (RB rather)
            (VP (VB rob)
              (NP (DT a) (NN store))
              (PP (IN without)
                (NP
                  (NP (DT a) (NN gun))
                  (PP (IN than)
                    (NP
                      (NP (DT a) (NN store))
                      (PP (IN with)
                        (NP (DT a) (NN gun))))))))))))
    (. .)))

mark(strapped-4, If-1)
nsubjpass(strapped-4, I-2)
nsubj(decide-8, I-2)
auxpass(strapped-4, am-3)
advcl(think-24, strapped-4)
prep_for(strapped-4, cash-6)
conj_and(strapped-4, decide-8)
advcl(think-24, decide-8)
complm(be-18, that-9)
det(way-12, the-10)
amod(way-12, only-11)
nsubj(be-18, way-12)
aux(make-14, to-13)
infmod(way-12, make-14)
det(money-16, any-15)
dobj(make-14, money-16)
aux(be-18, would-17)
ccomp(decide-8, be-18)
nn(somebody-21, rob-20)
prep_to(be-18, somebody-21)
nsubj(think-24, I-23)
root(ROOT-0, think-24)
nsubj(rob-28, I-25)
aux(rob-28, 'd-26)
advmod(rob-28, rather-27)
ccomp(think-24, rob-28)
det(store-30, a-29)
dobj(rob-28, store-30)
det(gun-33, a-32)
prep_without(rob-28, gun-33)
det(store-36, a-35)
prep_than(gun-33, store-36)
det(gun-39, a-38)
prep_with(store-36, gun-39)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN used)
            (PP (IN for)
              (NP (JJ bad) (NNS things)))))))
    (, ,)
    (CC but)
    (S
      (NP (JJ legal) (NNS guns))
      (VP (VBP are)
        (ADVP (RB typically))
        (VP (VBN used)
          (PP
            (PP (IN for)
              (ADJP (JJ good)))
            (CC or)
            (PP (IN for)
              (NP (NN protection))))
          (PP (IN from)
            (NP (JJ illegal) (NNS guns))))))
    (. .)))

nsubjpass(used-4, They-1)
aux(used-4, can-2)
auxpass(used-4, be-3)
root(ROOT-0, used-4)
amod(things-7, bad-6)
prep_for(used-4, things-7)
amod(guns-11, legal-10)
nsubjpass(used-14, guns-11)
auxpass(used-14, are-12)
advmod(used-14, typically-13)
conj_but(used-4, used-14)
prep_for(used-14, good-16)
prep_for(used-14, protection-19)
conj_or(good-16, protection-19)
amod(guns-22, illegal-21)
prep_from(used-14, guns-22)

