(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT the) (NN government))
      (VP (VBN made)
        (PP (IN of))))
    (. ?)))

prep_of(made-5, What-1)
auxpass(made-5, 's-2)
det(government-4, the-3)
nsubjpass(made-5, government-4)
root(ROOT-0, made-5)

(ROOT
  (NP (NNS People) (. .)))

root(ROOT-0, People-1)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (NP (DT a) (`` ``) (NN human) ('' ''))
      (PP (IN with)
        (NP
          (NP (DT a) (JJ sick) (NN intent))
          (PP (IN of)
            (S
              (VP
                (VP (VBG murdering))
                (, ,)
                (VP (VBG raping))
                (, ,)
                (CC and)
                (VP (VBG maiming)
                  (PP (IN with)
                    (NP
                      (NP (JJ long) (NN list))
                      (PP (IN of)
                        (NP (JJ such) (NNS words)))))))))))
      (, ,))
    (VP (VBZ is)
      (ADVP (RB hardly))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (MD would)
            (VP (VB call)
              (NP (DT a) (NN human)))))))
    (. .)))

advmod(is-25, However-1)
det(human-5, a-3)
nsubj(is-25, human-5)
det(intent-10, a-8)
amod(intent-10, sick-9)
prep_with(human-5, intent-10)
prepc_of(intent-10, murdering-12)
prepc_of(intent-10, raping-14)
conj_and(murdering-12, raping-14)
prepc_of(intent-10, maiming-17)
conj_and(murdering-12, maiming-17)
amod(list-20, long-19)
prep_with(maiming-17, list-20)
amod(words-23, such-22)
prep_of(list-20, words-23)
root(ROOT-0, is-25)
advmod(is-25, hardly-26)
dobj(call-30, what-27)
nsubj(call-30, I-28)
aux(call-30, would-29)
ccomp(is-25, call-30)
det(human-32, a-31)
dobj(call-30, human-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP call)
      (S
        (NP (PRP them))
        (NP (DT a) (NN monster))))
    (. .)))

nsubj(call-2, I-1)
root(ROOT-0, call-2)
nsubj(monster-5, them-3)
det(monster-5, a-4)
xcomp(call-2, monster-5)

(ROOT
  (SQ
    (PP (IN Think))
    (, ,) (VBP do)
    (NP (PRP you))
    (VP (VB believe)
      (SBAR
        (S
          (NP (NNP Hitler))
          (VP (VBD had)
            (NP (DT a) (NN right)
              (S
                (VP (TO to)
                  (VP (VB live)))))))))
    (. ?)))

prep(believe-5, Think-1)
aux(believe-5, do-3)
nsubj(believe-5, you-4)
root(ROOT-0, believe-5)
nsubj(had-7, Hitler-6)
ccomp(believe-5, had-7)
det(right-9, a-8)
dobj(had-7, right-9)
aux(live-11, to-10)
infmod(right-9, live-11)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP (DT the) (CD 911) (NNS terrorists)))
    (. ?)))

root(ROOT-0, What-1)
dep(What-1, about-2)
det(terrorists-5, the-3)
num(terrorists-5, 911-4)
pobj(about-2, terrorists-5)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP
        (NP (NNP Seung-Hui) (NNP Cho))
        (, ,)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD laughed)
              (SBAR (IN as)
                (S
                  (NP (PRP he))
                  (VP (VBD shot)
                    (NP (PRP$ his) (NNS victims))
                    (PP (IN at)
                      (NP (NNP Virginia) (NNP Tech))))))))))
      (. ?))))

root(ROOT-0, What-1)
dep(What-1, about-2)
nn(Cho-4, Seung-Hui-3)
pobj(about-2, Cho-4)
nsubj(laughed-7, Cho-4)
rcmod(Cho-4, laughed-7)
mark(shot-10, as-8)
nsubj(shot-10, he-9)
advcl(laughed-7, shot-10)
poss(victims-12, his-11)
dobj(shot-10, victims-12)
nn(Tech-15, Virginia-14)
prep_at(shot-10, Tech-15)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ average) (NN response) (NN time))
      (PP (IN for)
        (NP (NNS cops))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN minimum))
        (PP (IN of)
          (NP (CD 5) (NNS minutes))))
      (, ,)
      (PP (IN with)
        (NP (DT no) (JJ definite) (JJ maximum) (NN quota))))
    (. .)))

det(time-4, The-1)
amod(time-4, average-2)
nn(time-4, response-3)
nsubj(minimum-9, time-4)
prep_for(time-4, cops-6)
cop(minimum-9, is-7)
det(minimum-9, a-8)
root(ROOT-0, minimum-9)
num(minutes-12, 5-11)
prep_of(minimum-9, minutes-12)
det(quota-18, no-15)
amod(quota-18, definite-16)
amod(quota-18, maximum-17)
prep_with(minimum-9, quota-18)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB only))
    (VP (VBZ takes)
      (NP
        (NP
          (QP (RB about) (CD 5))
          (NNS seconds))
        (PP (IN for)
          (NP (DT a) (NN crime)
            (S
              (VP
                (VP (TO to)
                  (VP (VB happen)))
                (, ,)
                (CC and)
                (ADVP
                  (ADVP (RB much) (RBR less))
                  (PP (IN for)
                    (NP (NN someone))))
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN stabbed)
                      (CC or)
                      (VBN shot)
                      (PP (TO to)
                        (NP (NN death))))))))))))
    (. .)))

nsubj(takes-3, It-1)
advmod(takes-3, only-2)
root(ROOT-0, takes-3)
quantmod(5-5, about-4)
num(seconds-6, 5-5)
dobj(takes-3, seconds-6)
det(crime-9, a-8)
prep_for(seconds-6, crime-9)
aux(happen-11, to-10)
dep(crime-9, happen-11)
advmod(less-15, much-14)
dep(crime-9, less-15)
advmod(happen-11, less-15)
conj_and(happen-11, less-15)
prep_for(less-15, someone-17)
aux(stabbed-20, to-18)
auxpass(stabbed-20, be-19)
dep(crime-9, stabbed-20)
conj_and(happen-11, stabbed-20)
conj_and(happen-11, shot-22)
conj_or(stabbed-20, shot-22)
prep_to(stabbed-20, death-24)

(ROOT
  (SQ (MD Would) (RB n't)
    (NP (PRP you))
    (VP (VB think)
      (S
        (SBAR (IN if)
          (S
            (NP (NNS criminals))
            (VP (VBP have)
              (NP (NNS guns)))))
        (, ,)
        (NP (PRP you))
        (VP (MD should)
          (ADVP (IN in) (NN fact))
          (VP (VB have)
            (S
              (NP (PRP one))
              (VP (TO to)
                (VP (VB defend)
                  (NP (PRP yourself))
                  (SBAR (MD should)
                    (S
                      (NP (PRP you))
                      (ADVP (RB ever))
                      (VP (VB become)
                        (NP (DT a) (NN victim))))))))))))
    (. ?)))

aux(think-4, Would-1)
neg(think-4, n't-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
mark(have-7, if-5)
nsubj(have-7, criminals-6)
advcl(have-14, have-7)
dobj(have-7, guns-8)
nsubj(have-14, you-10)
aux(have-14, should-11)
advmod(have-14, in-12)
dep(in-12, fact-13)
ccomp(think-4, have-14)
nsubj(defend-17, one-15)
aux(defend-17, to-16)
ccomp(have-14, defend-17)
xcomp(have-14, defend-17)
dobj(defend-17, yourself-18)
dep(victim-24, should-19)
nsubj(victim-24, you-20)
advmod(victim-24, ever-21)
cop(victim-24, become-22)
det(victim-24, a-23)
dep(defend-17, victim-24)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBZ anti)
      (S
        (NP (NN gun) (NNS people))
        (VP (VB bash)
          (PP (IN on)
            (NP
              (NP (NN gun) (NNS owners))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP prey)
                    (PP (IN on)
                      (NP (DT the) (JJ defenseless) (NNS people)))))))))))
    (. .)))

nsubj(anti-2, You-1)
root(ROOT-0, anti-2)
nn(people-4, gun-3)
nsubj(bash-5, people-4)
ccomp(anti-2, bash-5)
nn(owners-8, gun-7)
prep_on(bash-5, owners-8)
nsubj(prey-10, owners-8)
rcmod(owners-8, prey-10)
det(people-14, the-12)
amod(people-14, defenseless-13)
prep_on(prey-10, people-14)

(ROOT
  (S
    (S
      (NP (PRP You))
      (, ,)
      (PP (IN as)
        (NP
          (NP (DT a) (NN person))
          (PP (IN against)
            (NP (NNS guns)))))
      (, ,)
      (VP (VBP are)
        (ADVP (IN in) (NN fact))
        (ADJP (JJ helpless))
        (ADVP (RB too))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB not)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB be)))))))
    (. .)))

nsubj(helpless-12, You-1)
det(person-5, a-4)
prep_as(helpless-12, person-5)
prep_against(person-5, guns-7)
cop(helpless-12, are-9)
advmod(helpless-12, in-10)
dep(in-10, fact-11)
root(ROOT-0, helpless-12)
advmod(helpless-12, too-13)
nsubj(have-19, you-16)
xsubj(be-21, you-16)
aux(have-19, do-17)
neg(have-19, not-18)
conj_but(helpless-12, have-19)
aux(be-21, to-20)
xcomp(have-19, be-21)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (DT the) (NN military))
      (VP (VBN made)
        (PP (IN of))))
    (. ?)))

prep_of(made-5, What-1)
auxpass(made-5, 's-2)
det(military-4, the-3)
nsubjpass(made-5, military-4)
root(ROOT-0, made-5)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is) (RB not)
        (ADJP (JJ complicated))))
    (, ,)
    (NP (NNS guns))
    (VP (VBP do) (RB not)
      (VP (VB take)
        (NP (JJ superior) (NN skill))
        (S
          (VP (TO to)
            (VP (VB use)
              (SBAR (IN if)
                (S
                  (NP (PRP they))
                  (VP (VBP make)
                    (S
                      (NP (NN murder))
                      (ADJP (RB so) (JJ easy)))))))))))
    (. .)))

nsubj(complicated-4, It-1)
cop(complicated-4, is-2)
neg(complicated-4, not-3)
ccomp(take-9, complicated-4)
nsubj(take-9, guns-6)
aux(take-9, do-7)
neg(take-9, not-8)
root(ROOT-0, take-9)
amod(skill-11, superior-10)
dobj(take-9, skill-11)
aux(use-13, to-12)
xcomp(take-9, use-13)
mark(make-16, if-14)
nsubj(make-16, they-15)
advcl(use-13, make-16)
nsubj(easy-19, murder-17)
advmod(easy-19, so-18)
xcomp(make-16, easy-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (NP
          (NP (NN part))
          (PP (IN of)
            (NP (DT a) (JJ shooting) (NN program))))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP
          (QP (RB only) (CD 3))
          (NNS hours)))
      (NP (PRP they))
      (VP (VBD taught)
        (S
          (NP (NNS kids))
          (ADJP (RB as) (JJ young)
            (PP (IN as)
              (NP (CD 7))))
          (SBAR
            (WHADVP (WRB how))
            (S
              (S
                (VP (TO to)
                  (VP
                    (VP
                      (ADVP (RB safely))
                      (VB handle)
                      (NP (NNS weapons)))
                    (, ,)
                    (CC and)
                    (VP
                      (ADVP (RB never))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (CD 50) (JJ +) (NNS years))
                          (SBAR
                            (S
                              (NP (PRP it))
                              (VP (VBZ 's)
                                (VP (VBN been)
                                  (ADVP (RB around))))))))))))
              (VP (VBZ has)
                (ADVP (RB there))
                (VP (VBN been)
                  (NP (DT an) (NN accident)))))))))
    (. .)))

nsubj(part-3, I-1)
cop(part-3, 'm-2)
root(ROOT-0, part-3)
det(program-7, a-5)
amod(program-7, shooting-6)
prep_of(part-3, program-7)
quantmod(3-12, only-11)
num(hours-13, 3-12)
prep_in(taught-15, hours-13)
nsubj(taught-15, they-14)
conj_and(part-3, taught-15)
nsubj(accident-42, kids-16)
advmod(young-18, as-17)
dep(accident-42, young-18)
prep_as(young-18, 7-20)
advmod(accident-42, how-21)
aux(handle-24, to-22)
advmod(handle-24, safely-23)
csubj(accident-42, handle-24)
dobj(handle-24, weapons-25)
conj_and(handle-24, never-28)
csubj(accident-42, never-28)
det(years-33, the-30)
num(years-33, 50-31)
amod(years-33, +-32)
prep_in(never-28, years-33)
nsubjpass(been-36, it-34)
auxpass(been-36, 's-35)
rcmod(years-33, been-36)
advmod(been-36, around-37)
aux(accident-42, has-38)
advmod(accident-42, there-39)
cop(accident-42, been-40)
det(accident-42, an-41)
xcomp(taught-15, accident-42)

(ROOT
  (S
    (NP (NN Someone))
    (ADVP (RB once))
    (VP (VBD told)
      (NP (PRP me))
      (, ,) (`` ``)
      (S
        (SBAR (IN If)
          (S
            (NP (PRP you))
            (VP (VBP give)
              (NP
                (NP (DT the) (NN criminal))
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP he))
                    (VP (VBZ wants))))))))
        (, ,)
        (NP (PRP he))
        (VP (MD wo) (RB n't)
          (VP (VB kill)
            (NP (PRP you))))))
    (. .)))

nsubj(told-3, Someone-1)
advmod(told-3, once-2)
root(ROOT-0, told-3)
dobj(told-3, me-4)
mark(give-9, If-7)
nsubj(give-9, you-8)
advcl(kill-19, give-9)
det(criminal-11, the-10)
dobj(give-9, criminal-11)
dobj(wants-14, criminal-11)
rel(wants-14, what-12)
nsubj(wants-14, he-13)
rcmod(criminal-11, wants-14)
nsubj(kill-19, he-16)
aux(kill-19, wo-17)
neg(kill-19, n't-18)
dep(told-3, kill-19)
dobj(kill-19, you-20)

(ROOT
  (S ('' '')
    (ADVP (RB Yeah) (RB really))
    (, ,)
    (NP
      (ADJP (RB as) (IN if) (JJ EVERY))
      (NN criminal))
    (VP (VBD was)
      (PP (IN after)
        (NP (PRP$ your) (NN money))))
    (. .)))

advmod(really-3, Yeah-2)
advmod(was-9, really-3)
advmod(EVERY-7, as-5)
dep(EVERY-7, if-6)
amod(criminal-8, EVERY-7)
nsubj(was-9, criminal-8)
root(ROOT-0, was-9)
poss(money-12, your-11)
prep_after(was-9, money-12)

(ROOT
  (S
    (NP (NNS Criminals))
    (VP (VBP have)
      (NP (JJ different) (NNS intents))
      (, ,)
      (ADVP (RB anywhere)
        (PP (IN from)
          (NP (PRP$ your) (NN money))))
      (PP (TO to)
        (NP (PRP$ your) (NN life))))
    (. .)))

nsubj(have-2, Criminals-1)
root(ROOT-0, have-2)
amod(intents-4, different-3)
dobj(have-2, intents-4)
advmod(have-2, anywhere-6)
poss(money-9, your-8)
prep_from(anywhere-6, money-9)
poss(life-12, your-11)
prep_to(have-2, life-12)

(ROOT
  (S
    (NP (PRP$ Your) (NN life))
    (VP (VBZ is)
      (NP (DT a) (JJ potential) (NN target))
      (ADVP (DT no) (NN matter)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT the) (NN intent))
            (VP (VBZ is))))))
    (. .)))

poss(life-2, Your-1)
nsubj(target-6, life-2)
cop(target-6, is-3)
det(target-6, a-4)
amod(target-6, potential-5)
root(ROOT-0, target-6)
dep(matter-8, no-7)
advmod(target-6, matter-8)
dobj(is-12, what-9)
det(intent-11, the-10)
nsubj(is-12, intent-11)
dep(matter-8, is-12)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (ADVP (RB rather))
    (VP
      (VP (VB be)
        (VP
          (VP (VBN mangled))
          (, ,)
          (VP (VBN mutilated))
          (, ,)
          (CC and)
          (VP (VBN murdered))))
      (CC or)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB explain)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (PRP you))
                  (VP (VBD shot)
                    (NP (DT that) (NN thug))
                    (PP (IN in)
                      (NP (DT the) (NN chest)))))))))))
    (. ?)))

aux(mangled-5, Would-1)
nsubjpass(mangled-5, you-2)
nsubjpass(mutilated-7, you-2)
nsubjpass(murdered-10, you-2)
nsubj(have-12, you-2)
xsubj(explain-14, you-2)
advmod(mangled-5, rather-3)
auxpass(mangled-5, be-4)
root(ROOT-0, mangled-5)
conj_and(mangled-5, mutilated-7)
conj_and(mangled-5, murdered-10)
conj_or(mangled-5, have-12)
aux(explain-14, to-13)
xcomp(have-12, explain-14)
advmod(shot-17, why-15)
nsubj(shot-17, you-16)
advcl(explain-14, shot-17)
det(thug-19, that-18)
dobj(shot-17, thug-19)
det(chest-22, the-21)
prep_in(shot-17, chest-22)

(ROOT
  (S
    (SINV
      (VP (VBP Do) (RB not)
        (VP (VB misinterpret)))
      (NP (DT this)))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBP are)
        (NP
          (NP (NNS criminals))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP exist)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP do) (RB not)
                      (VP (VB wish)
                        (S
                          (VP (TO to)
                            (VP
                              (ADVP (RB even))
                              (VB harm)
                              (NP (NN someone)))))))))))))))
    (. .)))

aux(misinterpret-3, Do-1)
neg(misinterpret-3, not-2)
root(ROOT-0, misinterpret-3)
nsubj(misinterpret-3, this-4)
expl(are-8, there-7)
conj_but(misinterpret-3, are-8)
nsubj(are-8, criminals-9)
nsubj(exist-11, criminals-9)
rcmod(criminals-9, exist-11)
nsubj(wish-15, who-12)
aux(wish-15, do-13)
neg(wish-15, not-14)
ccomp(exist-11, wish-15)
aux(harm-18, to-16)
advmod(harm-18, even-17)
xcomp(wish-15, harm-18)
dobj(harm-18, someone-19)

(ROOT
  (SBARQ
    (WHADVP (RB However))
    (, ,)
    (WHNP (WDT what)
      (NP (NN right)
        (CC and)
        (NN reason)))
    (SQ (MD would)
      (NP (PRP they))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP
              (VP (VB steal)
                (PP (IN from)
                  (NP (PRP you))))
              (, ,)
              (VP (VB scare)
                (NP (PRP you)))
              (, ,)
              (VP (VB threaten)
                (NP (PRP$ your) (NN life)))
              (, ,)
              (CC and)
              (VP
                (ADVP (RB maybe) (RB even))
                (VB kill)
                (NP (PRP you)))))))
      (. ?))))

advmod(have-9, However-1)
det(right-4, what-3)
dep(have-9, right-4)
conj_and(right-4, reason-6)
dep(have-9, reason-6)
aux(have-9, would-7)
nsubj(have-9, they-8)
xsubj(steal-11, they-8)
root(ROOT-0, have-9)
aux(steal-11, to-10)
xcomp(have-9, steal-11)
prep_from(steal-11, you-13)
xcomp(have-9, scare-15)
conj_and(steal-11, scare-15)
dobj(scare-15, you-16)
xcomp(have-9, threaten-18)
conj_and(steal-11, threaten-18)
poss(life-20, your-19)
dobj(threaten-18, life-20)
advmod(even-24, maybe-23)
advmod(kill-25, even-24)
xcomp(have-9, kill-25)
conj_and(steal-11, kill-25)
dobj(kill-25, you-26)

(ROOT
  (S
    (NP (DT Another) (NN thing) (NN someone))
    (VP (VBD told)
      (NP (PRP me))
      (, ,)
      (S (`` ``)
        (VP (VB Dude)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP have)
                (NP (DT no) (NN chance))
                (PP (IN without)
                  (NP (DT a) (NN gun)))
                (, ,)
                (ADVP (RB even))
                (PP (IN with)
                  (NP
                    (NP (CD one))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (ADVP (RB only))
                        (VP (VBP have)
                          (NP (RB about) (DT a)
                            (ADJP (CD 3) (NN %))
                            (NN chance)))))))))))))
    (. .)))

det(someone-3, Another-1)
nn(someone-3, thing-2)
nsubj(told-4, someone-3)
root(ROOT-0, told-4)
dobj(told-4, me-5)
dep(told-4, Dude-8)
nsubj(have-10, you-9)
ccomp(Dude-8, have-10)
det(chance-12, no-11)
dobj(have-10, chance-12)
det(gun-15, a-14)
prep_without(have-10, gun-15)
advmod(have-10, even-17)
prep_with(have-10, one-19)
nsubj(have-22, you-20)
advmod(have-22, only-21)
rcmod(one-19, have-22)
advmod(chance-27, about-23)
det(chance-27, a-24)
number(%-26, 3-25)
amod(chance-27, %-26)
dobj(have-22, chance-27)

(ROOT
  (S ('' '')
    (S
      (NP (NNP Bullsh) (NNP \*))
      (VP (VBP t.)
        (SBAR
          (S
            (SBAR (RB Even) (IN if)
              (S
                (NP (PRP it))
                (ADVP (RB really))
                (VP (VBD was)
                  (NP (DT a)
                    (ADJP (CD 3) (NN %))
                    (NN chance)))))
            (, ,)
            (NP (PRP I))
            (VP (VBP think)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (MD 'd) (RB rather)
                    (VP (VB have)
                      (NP (DT that)
                        (ADJP (CD 3) (NN %))
                        (NN chance)
                        (S
                          (VP (TO to)
                            (VP (VB live)
                              (PP (IN than)
                                (NP (NN nothing))))))))))))))))
    (, ,)
    (ADVP (RB even))
    (S
      (NP (DT the) (JJS smallest) (NN percent))
      (VP (VBZ is)
        (ADJP
          (ADJP (JJR MORE))
          (PP (IN THAN)
            (NP (NNP ENOUGH))))))
    (. .)))

nn(\*-3, Bullsh-2)
nsubj(t.-4, \*-3)
root(ROOT-0, t.-4)
advmod(chance-13, Even-5)
dep(chance-13, if-6)
nsubj(chance-13, it-7)
advmod(chance-13, really-8)
cop(chance-13, was-9)
det(chance-13, a-10)
number(%-12, 3-11)
amod(chance-13, %-12)
advcl(think-16, chance-13)
nsubj(think-16, I-15)
ccomp(t.-4, think-16)
nsubj(have-20, I-17)
aux(have-20, 'd-18)
advmod(have-20, rather-19)
ccomp(think-16, have-20)
det(chance-24, that-21)
number(%-23, 3-22)
amod(chance-24, %-23)
dobj(have-20, chance-24)
aux(live-26, to-25)
infmod(chance-24, live-26)
prep_than(live-26, nothing-28)
advmod(t.-4, even-30)
det(percent-33, the-31)
amod(percent-33, smallest-32)
nsubj(MORE-35, percent-33)
cop(MORE-35, is-34)
ccomp(t.-4, MORE-35)
prep_than(MORE-35, ENOUGH-37)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NNS guns))
        (VP (VBP are)
          (VP (VBN banned)))))
    (, ,)
    (SQ (VBP do)
      (NP
        (NP (DT any))
        (PP (IN of)
          (NP (PRP you))))
      (VP (VB think)
        (SBAR
          (S
            (NP
              (NP (NNS criminals))
              (CC or)
              (NP (`` ``) (NN law) (NN abiding) ('' '') (NNS citizens)))
            (VP (MD will)
              (VP (VB abide)
                (PP (IN by)
                  (NP (PRP it)))))))))
    (. ?)))

mark(banned-4, If-1)
nsubjpass(banned-4, guns-2)
auxpass(banned-4, are-3)
advcl(think-10, banned-4)
aux(think-10, do-6)
nsubj(think-10, any-7)
prep_of(any-7, you-9)
root(ROOT-0, think-10)
nsubj(abide-19, criminals-11)
nn(citizens-17, law-14)
nn(citizens-17, abiding-15)
conj_or(criminals-11, citizens-17)
nsubj(abide-19, citizens-17)
aux(abide-19, will-18)
ccomp(think-10, abide-19)
prep_by(abide-19, it-21)

(ROOT
  (NP (NNS People) (. .)))

root(ROOT-0, People-1)

(ROOT
  (S
    (SBAR (IN Though)
      (S
        (NP (PRP they))
        (VP (MD may)
          (VP (VB be)
            (ADJP (JJ faulty))))))
    (, ,)
    (NP (DT some) (NNS criminals))
    (VP (VBP know)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (TO to)
            (VP (VB manufacture)
              (NP (PRP$ their) (JJ own) (NNS guns)))))))
    (. .)))

mark(faulty-5, Though-1)
nsubj(faulty-5, they-2)
aux(faulty-5, may-3)
cop(faulty-5, be-4)
advcl(know-9, faulty-5)
det(criminals-8, some-7)
nsubj(know-9, criminals-8)
root(ROOT-0, know-9)
advmod(manufacture-12, how-10)
aux(manufacture-12, to-11)
ccomp(know-9, manufacture-12)
xcomp(know-9, manufacture-12)
poss(guns-15, their-13)
amod(guns-15, own-14)
dobj(manufacture-12, guns-15)

(ROOT
  (S
    (PP (IN Despite)
      (S
        (VP (VBG being)
          (ADJP (JJ faulty)))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (ADVP (RB still))
        (NP (NNS guns))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD can)
        (ADVP (RB still))
        (VP (VB kill))))
    (. .)))

cop(faulty-3, being-2)
prepc_despite(guns-8, faulty-3)
nsubj(guns-8, they-5)
cop(guns-8, are-6)
advmod(guns-8, still-7)
root(ROOT-0, guns-8)
nsubj(kill-14, they-11)
aux(kill-14, can-12)
advmod(kill-14, still-13)
conj_and(guns-8, kill-14)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (PP (IN in)
      (NP
        (NP (DT a) (NN society))
        (PP (IN with)
          (NP (VBN outlawed) (NNS weapons)))))
    (, ,)
    (NP (DT a) (JJ massive) (JJ black) (NN market))
    (VP (MD will)
      (VP (VB arise)
        (PP (IN with)
          (NP
            (NP
              (ADJP (RB criminally) (VBN manufactured))
              (NNS weapons))
            (CC and)
            (NP
              (NP (NNS weapons))
              (SBAR
                (WHNP (WDT that))
                (S
                  (ADVP (RB already))
                  (VP (VBP exist)))))))))
    (. .)))

advmod(arise-15, Therefore-1)
det(society-5, a-4)
prep_in(arise-15, society-5)
amod(weapons-8, outlawed-7)
prep_with(society-5, weapons-8)
det(market-13, a-10)
amod(market-13, massive-11)
amod(market-13, black-12)
nsubj(arise-15, market-13)
aux(arise-15, will-14)
root(ROOT-0, arise-15)
advmod(manufactured-18, criminally-17)
amod(weapons-19, manufactured-18)
prep_with(arise-15, weapons-19)
prep_with(arise-15, weapons-21)
conj_and(weapons-19, weapons-21)
nsubj(exist-24, weapons-21)
advmod(exist-24, already-23)
rcmod(weapons-21, exist-24)

(ROOT
  (S
    (S
      (NP (DT The) (JJ same) (NN thing))
      (VP (VBZ is)
        (VP (VBG going)
          (PP (IN on) (IN for)
            (NP
              (NP (NN marijuana))
              (, ,)
              (NP (NN cocaine))
              (, ,)
              (CC and)
              (NP (NN meth)))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN method))
        (PP (IN of)
          (NP (NN sale)
            (CC and)
            (NN purchase))))
      (VP (VBZ is)
        (ADJP (RB no) (JJ different)
          (PP (IN for)
            (NP (NNS guns))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, same-2)
nsubj(going-5, thing-3)
aux(going-5, is-4)
root(ROOT-0, going-5)
dep(going-5, on-6)
prep_for(going-5, marijuana-8)
prep_for(going-5, cocaine-10)
conj_and(marijuana-8, cocaine-10)
prep_for(going-5, meth-13)
conj_and(marijuana-8, meth-13)
det(method-17, the-16)
nsubj(different-24, method-17)
prep_of(method-17, sale-19)
prep_of(method-17, purchase-21)
conj_and(sale-19, purchase-21)
cop(different-24, is-22)
advmod(different-24, no-23)
conj_and(going-5, different-24)
prep_for(different-24, guns-26)

(ROOT
  (FRAG
    (SBARQ
      (WHNP (WRB How))
      (. ?))))

root(ROOT-0, How-1)

(ROOT
  (S
    (SBAR
      (SBAR (IN Because)
        (S
          (NP (NNS drugs))
          (VP (VBP are)
            (ADJP (JJ illegal)))))
      (, ,)
      (CC and)
      (SBAR (IN if)
        (S
          (NP (NNS guns))
          (VP (VBP are)
            (ADVP (RB too))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP they))
    (VP (MD will)
      (ADVP (RB just))
      (VP (VB be)
        (VP (VBN circulated)
          (NP (DT the) (JJ exact) (JJ same) (NN way)))))
    (. .)))

mark(illegal-4, Because-1)
nsubj(illegal-4, drugs-2)
cop(illegal-4, are-3)
dep(circulated-17, illegal-4)
mark(are-9, if-7)
nsubj(are-9, guns-8)
conj_and(illegal-4, are-9)
dep(circulated-17, are-9)
advmod(are-9, too-10)
advmod(circulated-17, then-12)
nsubjpass(circulated-17, they-13)
aux(circulated-17, will-14)
advmod(circulated-17, just-15)
auxpass(circulated-17, be-16)
root(ROOT-0, circulated-17)
det(way-21, the-18)
amod(way-21, exact-19)
amod(way-21, same-20)
dobj(circulated-17, way-21)

(ROOT
  (S
    (S
      (ADVP (RB Clearly))
      (NP (PRP we))
      (VP (MD ca) (RB n't)
        (VP (VB trust)
          (NP (PRP$ our) (JJ the) (NNS people)
            (CC and)
            (NNS criminals))
          (PP (IN with)
            (NP (NNS guns))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD can)
        (VP (VB trust)
          (S
            (NP (PRP them))
            (VP (TO to)
              (VP (VB follow)
                (NP (DT the) (NNS laws))))))))
    (. ?)))

advmod(trust-5, Clearly-1)
nsubj(trust-5, we-2)
aux(trust-5, ca-3)
neg(trust-5, n't-4)
root(ROOT-0, trust-5)
poss(people-8, our-6)
amod(people-8, the-7)
dobj(trust-5, people-8)
dobj(trust-5, criminals-10)
conj_and(people-8, criminals-10)
prep_with(trust-5, guns-12)
nsubj(trust-17, we-15)
aux(trust-17, can-16)
conj_but(trust-5, trust-17)
nsubj(follow-20, them-18)
aux(follow-20, to-19)
xcomp(trust-17, follow-20)
det(laws-22, the-21)
dobj(follow-20, laws-22)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD would)
      (ADVP (RB ultimately))
      (VP (VB create)
        (NP (JJR more) (NNS criminals))
        (PP (IN because)
          (NP
            (NP (DT a) (NN majority))
            (PP (IN of)
              (NP (DT the)
                (QP (CD 90) (CD million))
                (NN gun) (NNS owners)))))
        (SBAR (IN like)
          (S
            (NP (PRP myself))
            (VP (MD would) (RB not)
              (VP (VB abide)
                (PP (IN by)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(create-4, We-1)
aux(create-4, would-2)
advmod(create-4, ultimately-3)
root(ROOT-0, create-4)
amod(criminals-6, more-5)
dobj(create-4, criminals-6)
det(majority-9, a-8)
prep_because(create-4, majority-9)
det(owners-15, the-11)
number(million-13, 90-12)
num(owners-15, million-13)
nn(owners-15, gun-14)
prep_of(majority-9, owners-15)
mark(abide-20, like-16)
nsubj(abide-20, myself-17)
aux(abide-20, would-18)
neg(abide-20, not-19)
advcl(create-4, abide-20)
prep_by(abide-20, it-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNS guns))
        (VP (VBP are)
          (VP (VBN banned)))))
    (, ,)
    (NP (PRP it))
    (VP (MD would) (RB n't)
      (VP (VB prevent)
        (NP (NN suicide))))
    (. .)))

mark(banned-4, If-1)
nsubjpass(banned-4, guns-2)
auxpass(banned-4, are-3)
advcl(prevent-9, banned-4)
nsubj(prevent-9, it-6)
aux(prevent-9, would-7)
neg(prevent-9, n't-8)
root(ROOT-0, prevent-9)
dobj(prevent-9, suicide-10)

(ROOT
  (S
    (NP (NNS People))
    (VP (MD will)
      (ADVP (RB just))
      (VP
        (VP (VB start)
          (S
            (VP (VBG hanging)
              (NP (PRP themselves)))))
        (CC or)
        (VP (VB drive)
          (PRT (RP off))
          (NP (DT a) (NN cliff)))))
    (. .)))

nsubj(start-4, People-1)
nsubj(drive-8, People-1)
aux(start-4, will-2)
advmod(start-4, just-3)
root(ROOT-0, start-4)
xcomp(start-4, hanging-5)
dobj(hanging-5, themselves-6)
conj_or(start-4, drive-8)
prt(drive-8, off-9)
det(cliff-11, a-10)
dobj(drive-8, cliff-11)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP (NNP America))))
      (VP (VBN made)
        (PP (IN of))))
    (. ?)))

prep_of(made-6, What-1)
auxpass(made-6, 's-2)
nsubjpass(made-6, all-3)
prep_of(all-3, America-5)
root(ROOT-0, made-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB believe)
        (SBAR
          (S
            (NP (NN everyone))
            (VP (MD should)
              (VP (VB have)
                (NP (DT a) (NN gun))))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
nsubj(have-7, everyone-5)
aux(have-7, should-6)
ccomp(believe-4, have-7)
det(gun-9, a-8)
dobj(have-7, gun-9)

(ROOT
  (S
    (NP
      (NP (JJ Law-abiding) (NNS citizens))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP know)
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (TO to)
                  (VP (VB use)
                    (NP (PRP it))))))))))
    (VP (MD should))
    (. .)))

amod(citizens-2, Law-abiding-1)
nsubj(know-4, citizens-2)
nsubj(use-7, citizens-2)
nsubj(should-9, citizens-2)
rcmod(citizens-2, know-4)
advmod(use-7, how-5)
aux(use-7, to-6)
ccomp(know-4, use-7)
xcomp(know-4, use-7)
dobj(use-7, it-8)
root(ROOT-0, should-9)

(ROOT
  (S
    (SBAR (IN By)
      (S
        (NP (DT no) (NNS means))
        (VP (MD should)
          (VP (VB anyone)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ is)
                  (ADJP (RB mentally) (JJ insane)))))))))
    (, ,)
    (NP
      (NP (DT a) (NN felon))
      (, ,)
      (CC or)
      (ADVP (RB simply))
      (NP (NN ignorant)))
    (VP (VB be)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB use)
              (NP (CD one)))))))
    (. .)))

mark(anyone-5, By-1)
det(means-3, no-2)
nsubj(anyone-5, means-3)
aux(anyone-5, should-4)
advcl(able-18, anyone-5)
nsubj(insane-9, who-6)
cop(insane-9, is-7)
advmod(insane-9, mentally-8)
ccomp(anyone-5, insane-9)
det(felon-12, a-11)
nsubj(able-18, felon-12)
advmod(felon-12, simply-15)
conj_or(felon-12, simply-15)
nsubj(able-18, simply-15)
conj_or(felon-12, ignorant-16)
nsubj(able-18, ignorant-16)
cop(able-18, be-17)
root(ROOT-0, able-18)
aux(use-20, to-19)
xcomp(able-18, use-20)
dobj(use-20, one-21)

(ROOT
  (S
    (NP
      (ADJP (JJ Keep)
        (PP (IN in)
          (NP (NN mind) (NNS anti))))
      (NN gun) (NNS people))
    (VP (VBP complain)
      (PP (IN about)
        (NP
          (NP (NNS accidents)
            (CC or)
            (NNS tragedies))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP happen)
                (SBAR (IN because)
                  (S
                    (NP (NN someone))
                    (VP (VBD did) (RB n't)
                      (VP (VB know)
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (VP (TO to)
                              (VP (VB use)
                                (NP (DT a) (NN gun))))))))))))))))
    (. .)))

amod(people-6, Keep-1)
nn(anti-4, mind-3)
prep_in(Keep-1, anti-4)
nn(people-6, gun-5)
nsubj(complain-7, people-6)
root(ROOT-0, complain-7)
prep_about(complain-7, accidents-9)
nsubj(happen-13, accidents-9)
prep_about(complain-7, tragedies-11)
conj_or(accidents-9, tragedies-11)
nsubj(happen-13, tragedies-11)
rcmod(accidents-9, happen-13)
mark(know-18, because-14)
nsubj(know-18, someone-15)
aux(know-18, did-16)
neg(know-18, n't-17)
advcl(happen-13, know-18)
advmod(use-21, how-19)
aux(use-21, to-20)
ccomp(know-18, use-21)
xcomp(know-18, use-21)
det(gun-23, a-22)
dobj(use-21, gun-23)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are) (, ,)
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT those) (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ does) (RB not)
                  (VP (VB know)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (VP (TO to)
                          (VP (VB use)
                            (NP (DT a) (NN gun))))))))))))))
    (. .)))

nsubj(one-7, You-1)
cop(one-7, are-2)
prep_in(one-7, fact-5)
root(ROOT-0, one-7)
det(people-10, those-9)
prep_of(one-7, people-10)
nsubj(know-14, people-10)
aux(know-14, does-12)
neg(know-14, not-13)
rcmod(people-10, know-14)
advmod(use-17, how-15)
aux(use-17, to-16)
ccomp(know-14, use-17)
xcomp(know-14, use-17)
det(gun-19, a-18)
dobj(use-17, gun-19)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (UCP
        (ADJP (JJ helpless) (, ,) (JJ ignorant))
        (, ,)
        (CC and)
        (VP (VBP have)
          (NP (DT no) (NN right)
            (S
              (VP (TO to)
                (VP (VB tell)
                  (NP
                    (NP (NNS people))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBP do)
                          (VP (VB know)
                            (SBAR
                              (WHADVP (WRB how))
                              (S
                                (VP (TO to)
                                  (VP (VB use)
                                    (NP
                                      (NP (NNS guns))
                                      (SBAR
                                        (WHNP (WP what))
                                        (S
                                          (VP (TO to)
                                            (VP (VB do))))))))))))))))))))))
    (. .)))

advmod(ignorant-7, Therefore-1)
nsubj(ignorant-7, you-3)
nsubj(have-10, you-3)
cop(ignorant-7, are-4)
amod(ignorant-7, helpless-5)
root(ROOT-0, ignorant-7)
conj_and(ignorant-7, have-10)
det(right-12, no-11)
dobj(have-10, right-12)
aux(tell-14, to-13)
infmod(right-12, tell-14)
dobj(tell-14, people-15)
nsubj(know-18, people-15)
aux(know-18, do-17)
rcmod(people-15, know-18)
advmod(use-21, how-19)
aux(use-21, to-20)
ccomp(know-18, use-21)
xcomp(know-18, use-21)
dobj(use-21, guns-22)
nsubj(do-25, guns-22)
aux(do-25, to-24)
infmod(guns-22, do-25)
rcmod(guns-22, do-25)

(ROOT
  (NP (NNS People) (. .)))

root(ROOT-0, People-1)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (MD can)
          (VP (VB trust)
            (NP (PRP$ our) (NN government)
              (CC and)
              (NN military))
            (PP (IN with)
              (NP
                (NP (JJ automatic) (NNS weapons))
                (, ,)
                (NP (NNS tanks))
                (, ,)
                (CC and)
                (NP (NNS explosives))))
            (S
              (VP (TO to)
                (VP (VB defend)
                  (NP (PRP$ our) (NN country)))))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD ca) (RB n't)
              (VP (VB rely)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NNS people))
                    (PP (IN of)
                      (NP (NNP America)))))
                (S
                  (VP (TO to)
                    (VP (VB defend)
                      (NP (PRP themselves)))))))))))
    (. ?)))

mark(trust-4, If-1)
nsubj(trust-4, we-2)
xsubj(defend-18, we-2)
aux(trust-4, can-3)
advcl(is-23, trust-4)
poss(government-6, our-5)
dobj(trust-4, government-6)
dobj(trust-4, military-8)
conj_and(government-6, military-8)
amod(weapons-11, automatic-10)
prep_with(trust-4, weapons-11)
prep_with(trust-4, tanks-13)
conj_and(weapons-11, tanks-13)
prep_with(trust-4, explosives-16)
conj_and(weapons-11, explosives-16)
aux(defend-18, to-17)
xcomp(trust-4, defend-18)
poss(country-20, our-19)
dobj(defend-18, country-20)
advmod(is-23, why-22)
root(ROOT-0, is-23)
nsubj(is-23, it-24)
dobj(rely-28, it-24)
nsubj(rely-28, we-25)
xsubj(defend-35, we-25)
aux(rely-28, ca-26)
neg(rely-28, n't-27)
rcmod(it-24, rely-28)
det(people-31, the-30)
prep_on(rely-28, people-31)
prep_of(people-31, America-33)
aux(defend-35, to-34)
xcomp(rely-28, defend-35)
dobj(defend-35, themselves-36)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (RB only) (CD ONE) (NN cop))
        (PP (IN for)
          (NP
            (NP (DT every) (CD 2000) (NNS people))
            (PP (IN in)
              (NP (DT the) (NNP U.S.)))))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP believe))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(cop-5, only-3)
num(cop-5, ONE-4)
nsubj(is-2, cop-5)
dobj(believe-14, cop-5)
det(people-9, every-7)
num(people-9, 2000-8)
prep_for(cop-5, people-9)
det(U.S.-12, the-11)
prep_in(people-9, U.S.-12)
nsubj(believe-14, I-13)
rcmod(cop-5, believe-14)

(ROOT
  (S
    (NP (NNP Congress) (PRP itself))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is) (RB not)
            (NP
              (NP (PRP$ their) (NN duty)
                (S
                  (VP (TO to)
                    (VP (VB defend)
                      (NP (PRP us))
                      (PP (IN as)
                        (NP (NNS individuals)))))))
              (, ,)
              (CONJP (RB only) (IN as))
              (NP
                (NP (DT a) (NN whole))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ unapplicable))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP it))
                          (VP (VBZ comes)
                            (PP (TO to)
                              (NP
                                (NP (DT a) (NN robbery))
                                (, ,)
                                (NP (NN rape))
                                (, ,)
                                (CC or)
                                (NP (NN murder))))))))))))))))
    (. .)))

nsubj(said-3, Congress-1)
dep(Congress-1, itself-2)
root(ROOT-0, said-3)
complm(duty-9, that-4)
nsubj(duty-9, it-5)
cop(duty-9, is-6)
neg(duty-9, not-7)
poss(duty-9, their-8)
ccomp(said-3, duty-9)
aux(defend-11, to-10)
infmod(duty-9, defend-11)
dobj(defend-11, us-12)
prep_as(defend-11, individuals-14)
det(whole-19, a-18)
ccomp(said-3, whole-19)
conj_only(duty-9, whole-19)
nsubj(unapplicable-23, whole-19)
cop(unapplicable-23, is-22)
rcmod(whole-19, unapplicable-23)
advmod(comes-26, when-24)
nsubj(comes-26, it-25)
advcl(unapplicable-23, comes-26)
det(robbery-29, a-28)
prep_to(comes-26, robbery-29)
prep_to(comes-26, rape-31)
conj_or(robbery-29, rape-31)
prep_to(comes-26, murder-34)
conj_or(robbery-29, murder-34)

(ROOT
  (S
    (NP (DT Every) (NN human))
    (VP (VBZ has)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB live))))))
    (. .)))

det(human-2, Every-1)
nsubj(has-3, human-2)
root(ROOT-0, has-3)
det(right-5, the-4)
dobj(has-3, right-5)
aux(live-7, to-6)
infmod(right-5, live-7)

