(ROOT
  (S
    (S
      (NP (DT A) (NN background) (NN check))
      (VP (VBZ is)
        (ADJP (JJ different)
          (PP (IN than)
            (NP (DT a) (VBG waiting) (NN period))))))
    (: --)
    (S
      (NP (PRP I))
      (VP (VBP agree)
        (PP
          (PP (IN with)
            (NP (JJ reasonable) (NN background) (NNS checks)))
          (, ,)
          (CC but)
          (PP (IN in)
            (NP
              (NP (JJS most) (NNS cases))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD can)
                    (VP (VB be)
                      (VP (VBN done)
                        (PP (IN by)
                          (NP (NN phone)))
                        (PP (IN in)
                          (NP (DT a) (JJ few) (NNS minutes)))
                        (, ,)
                        (PP (IN without)
                          (NP (DT a) (JJ significant) (NN wait)))))))))))))
    (. .)))

det(check-3, A-1)
nn(check-3, background-2)
nsubj(different-5, check-3)
cop(different-5, is-4)
root(ROOT-0, different-5)
det(period-9, a-7)
amod(period-9, waiting-8)
prep_than(different-5, period-9)
nsubj(agree-12, I-11)
nsubj(agree-12', I-11)
parataxis(different-5, agree-12)
parataxis(different-5, agree-12')
conj_but(agree-12, agree-12')
amod(checks-16, reasonable-14)
nn(checks-16, background-15)
prep_with(agree-12, checks-16)
amod(cases-21, most-20)
prep_in(agree-12', cases-21)
nsubjpass(done-25, cases-21)
aux(done-25, can-23)
auxpass(done-25, be-24)
rcmod(cases-21, done-25)
agent(done-25, phone-27)
det(minutes-31, a-29)
amod(minutes-31, few-30)
prep_in(done-25, minutes-31)
det(wait-36, a-34)
amod(wait-36, significant-35)
prep_without(done-25, wait-36)

(ROOT
  (S
    (S
      (NP (DT A) (NN wait))
      (VP (VBZ inconveniences)
        (NP (DT the) (NN law) (NN abiding))))
    (: --)
    (S
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (VP (VBN allowed)
            (S
              (VP (TO to)
                (VP (VB carry)
                  (NP (DT a) (NN gun))))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP I))
        (ADVP (RB already))
        (VP (VBP own)
          (NP (JJ several)))))
    (. .)))

det(wait-2, A-1)
nsubj(inconveniences-3, wait-2)
root(ROOT-0, inconveniences-3)
det(abiding-6, the-4)
nn(abiding-6, law-5)
dobj(inconveniences-3, abiding-6)
nsubjpass(allowed-10, I-8)
xsubj(carry-12, I-8)
auxpass(allowed-10, 'm-9)
parataxis(inconveniences-3, allowed-10)
aux(carry-12, to-11)
xcomp(allowed-10, carry-12)
det(gun-14, a-13)
dobj(carry-12, gun-14)
nsubj(own-19, I-17)
advmod(own-19, already-18)
parataxis(inconveniences-3, own-19)
conj_and(allowed-10, own-19)
dobj(own-19, several-20)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN gun) (NN shop))
        (PP (IN in)
          (NP (PRP$ my) (NN town)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(shop-5, no-3)
nn(shop-5, gun-4)
nsubj(is-2, shop-5)
poss(town-8, my-7)
prep_in(shop-5, town-8)

(ROOT
  (S
    (S
      (NP (DT A) (VBG waiting) (NN period))
      (VP (MD would)
        (VP (VB mean)
          (SBAR (IN that)
            (S
              (SBAR (IN if)
                (S
                  (NP (PRP I))
                  (VP (VBD wanted)
                    (NP (RB yet) (DT another) (NN gun)))))
              (, ,)
              (NP (PRP I))
              (VP (MD 'd)
                (VP (VB go)
                  (PP (TO to)
                    (NP (DT the) (NN gun) (NN shop)))
                  (, ,)
                  (ADVP
                    (ADVP (RB almost) (RB certainly))
                    (SBAR (IN while)
                      (S
                        (S
                          (VP (VBG carrying)
                            (NP
                              (NP (CD one))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NNS guns))
                                  (SBAR
                                    (S
                                      (NP (PRP I))
                                      (ADVP (RB already))
                                      (VP (VBP own)))))))))
                        (, ,)
                        (S
                          (VP (VB pick)
                            (PRT (RP out))
                            (NP (PRP$ my) (JJ new) (NN gun))))))))))))))
    (: ...)
    (S
      (ADVP (RB then))
      (NP (PRP I))
      (VP (MD 'd)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB drive)
                (PRT (RP back))
                (PP (TO to)
                  (NP (DT the) (NN shop)))
                (SBAR (IN once)
                  (S
                    (NP (DT the) (NN wait))
                    (VP (VBD was)
                      (ADJP (RP over)))))))))))
    (. .)))

det(period-3, A-1)
amod(period-3, waiting-2)
nsubj(mean-5, period-3)
aux(mean-5, would-4)
root(ROOT-0, mean-5)
complm(go-16, that-6)
mark(wanted-9, if-7)
nsubj(wanted-9, I-8)
advcl(go-16, wanted-9)
advmod(gun-12, yet-10)
det(gun-12, another-11)
dobj(wanted-9, gun-12)
nsubj(go-16, I-14)
aux(go-16, 'd-15)
ccomp(mean-5, go-16)
det(shop-20, the-18)
nn(shop-20, gun-19)
prep_to(go-16, shop-20)
advmod(certainly-23, almost-22)
advmod(go-16, certainly-23)
mark(carrying-25, while-24)
dep(certainly-23, carrying-25)
dobj(carrying-25, one-26)
det(guns-29, the-28)
prep_of(one-26, guns-29)
dobj(own-32, guns-29)
nsubj(own-32, I-30)
advmod(own-32, already-31)
rcmod(guns-29, own-32)
dep(carrying-25, pick-34)
prt(pick-34, out-35)
poss(gun-38, my-36)
amod(gun-38, new-37)
dobj(pick-34, gun-38)
advmod(have-43, then-40)
nsubj(have-43, I-41)
xsubj(drive-45, I-41)
aux(have-43, 'd-42)
parataxis(mean-5, have-43)
aux(drive-45, to-44)
xcomp(have-43, drive-45)
prt(drive-45, back-46)
det(shop-49, the-48)
prep_to(drive-45, shop-49)
mark(over-54, once-50)
det(wait-52, the-51)
nsubj(over-54, wait-52)
cop(over-54, was-53)
advcl(drive-45, over-54)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP see)
          (NP (DT a) (NN bargain))
          (SBAR (IN while)
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (VP (VBG visiting)
                  (NP
                    (NP (DT the) (JJ other) (NN end))
                    (PP (IN of)
                      (NP (DT the) (NN state)))))))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB essentially))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB pass)
            (NP (PRP it))
            (PP (IN by))))))
    (. .)))

mark(see-3, If-1)
nsubj(see-3, I-2)
advcl(have-19, see-3)
det(bargain-5, a-4)
dobj(see-3, bargain-5)
mark(visiting-9, while-6)
nsubj(visiting-9, I-7)
aux(visiting-9, 'm-8)
advcl(see-3, visiting-9)
det(end-12, the-10)
amod(end-12, other-11)
dobj(visiting-9, end-12)
det(state-15, the-14)
prep_of(end-12, state-15)
nsubj(have-19, I-17)
xsubj(pass-21, I-17)
advmod(have-19, essentially-18)
root(ROOT-0, have-19)
aux(pass-21, to-20)
xcomp(have-19, pass-21)
dobj(pass-21, it-22)
prep(pass-21, by-23)

(ROOT
  (S
    (NP (VBG Waiting) (NNS periods))
    (VP (MD may)
      (VP (VB have)
        (VP (VBN made)
          (NP
            (NP (DT some) (NN sense))
            (PP (IN for)
              (NP (JJ first-time) (NNS buyers))))
          (SBAR (IN before)
            (S
              (NP (NN technology))
              (VP (VBD made)
                (S
                  (NP (JJ instant) (NNS checks))
                  (ADJP (JJ possible)))))))))
    (. .)))

amod(periods-2, Waiting-1)
nsubj(made-5, periods-2)
aux(made-5, may-3)
aux(made-5, have-4)
root(ROOT-0, made-5)
det(sense-7, some-6)
dobj(made-5, sense-7)
amod(buyers-10, first-time-9)
prep_for(sense-7, buyers-10)
mark(made-13, before-11)
nsubj(made-13, technology-12)
advcl(made-5, made-13)
amod(checks-15, instant-14)
nsubj(possible-16, checks-15)
xcomp(made-13, possible-16)

