(ROOT
  (FRAG
    (ADVP (RB ''))
    (: ...)
    (SBAR
      (WHADVP (WRB when))
      (S
        (S
          (VP (VBN given)
            (NP
              (NP (DT the) (NN choice))
              (PP (IN of)
                (S
                  (VP
                    (VP (VBG killing))
                    (CC or)
                    (RB not)
                    (VP (VBG killing)
                      (PRN (, ,)
                        (S
                          (VP (VBZ is)
                            (NP (PRP it)))))
                      (NP (PRP$ your) (NN choice)
                        (S
                          (VP (TO to)
                            (VP (VB kill)
                              (ADVP (RB simply))
                              (PP (IN because)
                                (NP (PRP$ its) (JJ quick))))))))))))))
        (CC and)
        (S
          (ADJP (JJ easy)
            (S
              (VP (TO to)
                (VP (VB do)
                  (ADVP (RB so)))))))))
    (. ?)))

advmod(given-4, when-3)
dep(''-1, given-4)
det(choice-6, the-5)
dobj(given-4, choice-6)
prepc_of(choice-6, killing-8)
prepc_of(choice-6, not-10)
conj_or(killing-8, not-10)
neg(killing-8, not-10)
dep(killing-8, killing-11)
cop(it-14, is-13)
parataxis(killing-11, it-14)
poss(choice-16, your-15)
dobj(killing-11, choice-16)
aux(kill-18, to-17)
infmod(choice-16, kill-18)
advmod(kill-18, simply-19)
poss(quick-22, its-21)
prep_because(kill-18, quick-22)
dep(''-1, easy-24)
conj_and(given-4, easy-24)
aux(do-26, to-25)
xcomp(easy-24, do-26)
advmod(do-26, so-27)

(ROOT
  (INTJ (UH ...)))


(ROOT
  (S ('' '')
    (S
      (NP
        (NP (DT Any) (NN situation))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP
              (ADVP (RB legally)
                (CC and)
                (RB morally))
              (VBZ requires)
              (NP
                (NP (DT the) (NN use))
                (PP (IN of)
                  (NP (DT a) (NN firearm))))))))
      (VP (VBZ is)
        (PP (IN by)
          (NP (NN definition)))
        (NP
          (NP (DT a) (NN situation))
          (PP (IN of)
            (NP (NN desperation))))))
    (CC and)
    (S
      (NP (JJ last))
      (VP (VBP resort)))
    (. .)))

det(situation-3, Any-2)
nsubj(requires-8, situation-3)
nsubj(situation-18, situation-3)
advmod(requires-8, legally-5)
conj_and(legally-5, morally-7)
advmod(requires-8, morally-7)
rcmod(situation-3, requires-8)
det(use-10, the-9)
dobj(requires-8, use-10)
det(firearm-13, a-12)
prep_of(use-10, firearm-13)
cop(situation-18, is-14)
prep_by(situation-18, definition-16)
det(situation-18, a-17)
root(ROOT-0, situation-18)
prep_of(situation-18, desperation-20)
nsubj(resort-23, last-22)
conj_and(situation-18, resort-23)

(ROOT
  (S ('' '')
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ many) (NNS degrees))
        (PP (IN of)
          (NP (DT this)))))
    (. .)))

expl(are-3, There-2)
root(ROOT-0, are-3)
amod(degrees-5, many-4)
nsubj(are-3, degrees-5)
prep_of(degrees-5, this-7)

(ROOT
  (S
    (NP (DT A) (NN student))
    (VP (VBZ does) (RB not)
      (VP (VB do)
        (CC or)
        (VB turn)
        (PP (IN in)
          (NP (PRP$ his) (NN homework)))))
    (. .)))

det(student-2, A-1)
nsubj(do-5, student-2)
nsubj(turn-7, student-2)
aux(do-5, does-3)
neg(do-5, not-4)
root(ROOT-0, do-5)
conj_or(do-5, turn-7)
poss(homework-10, his-9)
prep_in(do-5, homework-10)

(ROOT
  (S
    (NP (DT A) (NN zero))
    (VP (VBZ is)
      (VP (VBN entered) (: :)
        (NP
          (NP (RB not) (DT an))
          ('' '')
          (SBAR
            (S
              (NP
                (NP (NNP A) ('' ''))
                (SBAR (IN because)
                  (S
                    (NP (PRP he))
                    (VP
                      (VP (VBD meant)
                        (ADVP (RB well)))
                      (CC or)
                      (VP (VBD was))))))
              (VP (VBD bullied)
                (PP (IN as)
                  (NP (DT a) (NN child)))))))))
    (. .)))

det(zero-2, A-1)
nsubjpass(entered-4, zero-2)
auxpass(entered-4, is-3)
root(ROOT-0, entered-4)
neg(an-7, not-6)
dobj(entered-4, an-7)
dobj(bullied-17, an-7)
dobj(meant-13, A-9)
nsubj(bullied-17, A-9)
mark(meant-13, because-11)
nsubj(meant-13, he-12)
nsubj(was-16, he-12)
dep(A-9, meant-13)
advmod(meant-13, well-14)
dep(A-9, was-16)
conj_or(meant-13, was-16)
rcmod(an-7, bullied-17)
det(child-20, a-19)
prep_as(bullied-17, child-20)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP
            (QP (NNS tens) (IN of) (NNS thousands)))
          (PP (IN of)
            (NP (JJ other) (NNS examples))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD \*)
        (NP (DT all) (JJ \*) (NN point))
        (PP (TO to)
          (NP
            (NP (DT the) (JJ same) (NNS things))
            (: :)
            (NP (NN duty) (, ,) (NNS obligations) (, ,) (NNS agreements)
              (CC and)
              (NNS consequences))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
dep(thousands-5, tens-3)
quantmod(thousands-5, of-4)
nsubj(are-2, thousands-5)
amod(examples-8, other-7)
prep_of(thousands-5, examples-8)
nsubj(\*-12, they-11)
conj_but(are-2, \*-12)
det(point-15, all-13)
amod(point-15, \*-14)
dobj(\*-12, point-15)
det(things-19, the-17)
amod(things-19, same-18)
prep_to(\*-12, things-19)
dep(things-19, duty-21)
dep(things-19, obligations-23)
conj_and(duty-21, obligations-23)
dep(things-19, agreements-25)
conj_and(duty-21, agreements-25)
dep(things-19, consequences-27)
conj_and(duty-21, consequences-27)

(ROOT
  (S
    (NP (DT A) (NN gun))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ lazy) (NN brute) (POS 's))
        (NN way))
      (ADVP (RB out)))
    (: ...)))

det(gun-2, A-1)
nsubj(way-8, gun-2)
cop(way-8, is-3)
det(brute-6, the-4)
amod(brute-6, lazy-5)
poss(way-8, brute-6)
root(ROOT-0, way-8)
advmod(way-8, out-9)

(ROOT
  (S ('' '')
    (NP (DT A) (NN gun))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (JJ lazy) (NN brute) (POS 's))
          (NN way) (RP out))
        (PP (IN for)
          (NP (DT the) (NN aggressor)))))
    (. .)))

det(gun-3, A-2)
nsubj(way-9, gun-3)
cop(way-9, is-4)
det(brute-7, the-5)
amod(brute-7, lazy-6)
poss(way-9, brute-7)
root(ROOT-0, way-9)
dep(way-9, out-10)
det(aggressor-13, the-12)
prep_for(way-9, aggressor-13)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (PRP he))
        (CC or)
        (NP
          (NP (PRP she))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (MD will)
                (VP (VB oppose)
                  (NP
                    (NP (DT the) (NN brute))
                    (SBAR
                      (WHNP (WP$ whose)
                        (ADJP (JJ non-negotiable))
                        (NN position))
                      (S
                        (VP (VBZ is)
                          (NP
                            (PRN (-LRB- -LRB-) (PRP$ your) (-RRB- -RRB-))
                            (NNS death)))))))))))))
    (, ,)
    (NP (DT a) (NN gun))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN tool))
        (PP (IN by)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (TO to)
                (VP
                  (VP (VB survive))
                  (CC and)
                  (VP
                    (ADVP (RB very)
                      (ADVP (RB possibly)))
                    (VB allow)
                    (NP (NNS others)
                      (S
                        (VP (TO to)
                          (VP (VB survive)
                            (ADVP (RB as) (RB well))))))))))))))
    (. .)))

prep_for(tool-23, he-2)
conj_or(he-2, she-4)
nsubj(oppose-7, she-4)
prep_for(tool-23, she-4)
aux(oppose-7, will-6)
rcmod(she-4, oppose-7)
det(brute-9, the-8)
dobj(oppose-7, brute-9)
poss(position-12, brute-9)
amod(position-12, non-negotiable-11)
nsubj(death-17, position-12)
cop(death-17, is-13)
dep(death-17, your-15)
rcmod(brute-9, death-17)
det(gun-20, a-19)
nsubj(tool-23, gun-20)
cop(tool-23, is-21)
det(tool-23, a-22)
root(ROOT-0, tool-23)
nsubj(survive-27, which-25)
nsubj(allow-31, which-25)
aux(survive-27, to-26)
prepc_by(tool-23, survive-27)
advmod(possibly-30, very-29)
advmod(allow-31, possibly-30)
prepc_by(tool-23, allow-31)
conj_and(survive-27, allow-31)
dobj(allow-31, others-32)
aux(survive-34, to-33)
infmod(others-32, survive-34)
advmod(well-36, as-35)
mwe(well-36, as-35)
advmod(survive-34, well-36)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (ADVP (RB truly))
        (VP (VBP abhor)
          (ADVP (RB savagery)))))
    (, ,)
    (VP (VB let)
      (NP (PRP us))
      (RB not)
      (VP (VB be)
        (ADJP (JJ savages)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (PRP$ our) (NN point))))))))
    (. ...)))

mark(abhor-4, If-1)
nsubj(abhor-4, we-2)
advmod(abhor-4, truly-3)
advcl(let-7, abhor-4)
advmod(abhor-4, savagery-5)
root(ROOT-0, let-7)
dobj(let-7, us-8)
neg(let-7, not-9)
cop(savages-11, be-10)
dep(let-7, savages-11)
aux(make-13, to-12)
xcomp(savages-11, make-13)
poss(point-15, our-14)
dobj(make-13, point-15)

(ROOT
  (FRAG
    (NP (NNS '')
      (CC and)
      (NN ''))
    (: ...)
    (S
      (NP (PRP you))
      (VP (VBP lose)
        (ADVP (PDT all) (DT the) (JJ same))))
    (. .)))

root(ROOT-0, and-2)
nsubj(lose-6, you-5)
dep(and-2, lose-6)
dep(same-9, all-7)
dep(same-9, the-8)
advmod(lose-6, same-9)

(ROOT
  (SINV
    (VP (VBD '')
      (ADVP (RB Only))
      (SBAR (IN if)
        (S
          (NP (PRP you)
            (PRN (-LRB- -LRB-)
              (NP (PRP we))
              (-RRB- -RRB-)))
          (VP (VBP employ)))))
    (NP
      (NP (DT the) (JJ same) (NN reasoning))
      (PRN (-LRB- -LRB-)
        (NP (NNP ?))
        (-RRB- -RRB-)))))

advmod(employ-8, Only-2)
mark(employ-8, if-3)
nsubj(employ-8, you-4)
dep(you-4, we-6)
root(ROOT-0, employ-8)
det(reasoning-11, the-9)
amod(reasoning-11, same-10)
nsubj(employ-8, reasoning-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP note)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT this) (NN situation))
            (PP (IN of)
              (NP (JJ last) (NN resort))))
          (VP (VBD was)
            (VP
              (VP (VBN created))
              (CC and)
              (VP (VBN forced)
                (PRT (RP up))
                (NP
                  (QP (CD one)
                    (CC or)
                    (JJR more)))
                (PP (IN by)
                  (NP
                    (NP (DT an) (NN aggressor))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ is)
                          (ADJP (JJ \*)
                            (PP (IN at)
                              (NP
                                (NP (DT that) (NN moment))
                                (X (SYM \*)))))
                          (S
                            (VP (VBG employing)
                              (NP (JJ deadly) (NN force))
                              (PP (IN against)
                                (NP
                                  (NP
                                    (QP (CD one)
                                      (CC or)
                                      (JJR more))
                                    (NNS individuals))
                                  (, ,)
                                  (SBAR
                                    (WHNP (WP who))
                                    (S
                                      (VP (VBD played)
                                        (NP (RB absolutely) (DT no) (NN part))
                                        (PP (IN in)
                                          (NP
                                            (NP (DT this) (NN situation))
                                            (PP (IN of)
                                              (NP (NN desperation) (JJ other)))))
                                        (PP (IN than)
                                          (S
                                            (ADVP (RB merely))
                                            (VP (VBG being)
                                              (ADVP (RB there)))))))))))))))))))))))
    (. .)))

nsubj(note-2, I-1)
root(ROOT-0, note-2)
complm(created-10, that-3)
det(situation-5, this-4)
nsubjpass(created-10, situation-5)
nsubjpass(forced-12, situation-5)
amod(resort-8, last-7)
prep_of(situation-5, resort-8)
auxpass(created-10, was-9)
ccomp(note-2, created-10)
ccomp(note-2, forced-12)
conj_and(created-10, forced-12)
prt(forced-12, up-13)
dobj(forced-12, one-14)
dobj(forced-12, more-16)
conj_or(one-14, more-16)
quantmod(one-14, more-16)
det(aggressor-19, an-18)
prep_by(forced-12, aggressor-19)
nsubj(\*-22, aggressor-19)
cop(\*-22, is-21)
rcmod(aggressor-19, \*-22)
det(moment-25, that-24)
prep_at(\*-22, moment-25)
dep(moment-25, \*-26)
xcomp(\*-22, employing-27)
amod(force-29, deadly-28)
dobj(employing-27, force-29)
num(individuals-34, one-31)
conj_or(one-31, more-33)
quantmod(one-31, more-33)
num(individuals-34, more-33)
prep_against(employing-27, individuals-34)
nsubj(played-37, individuals-34)
rcmod(individuals-34, played-37)
advmod(part-40, absolutely-38)
det(part-40, no-39)
dobj(played-37, part-40)
det(situation-43, this-42)
prep_in(played-37, situation-43)
prep_of(situation-43, desperation-45)
amod(desperation-45, other-46)
advmod(being-49, merely-48)
prepc_than(played-37, being-49)
advmod(being-49, there-50)

(ROOT
  (S (CC and)
    (VP (VB approach)
      (PP (IN as)
        (NP (DT the) (NN aggressor))))
    (. .)))

cc(approach-2, and-1)
root(ROOT-0, approach-2)
det(aggressor-5, the-4)
prep_as(approach-2, aggressor-5)

(ROOT
  (NP
    (NP (DT A) (NN couple))
    (PP (IN of)
      (NP (NNS thoughts)))
    (ADVP (RB here))
    (. .)))

det(couple-2, A-1)
root(ROOT-0, couple-2)
prep_of(couple-2, thoughts-4)
advmod(couple-2, here-5)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS terms))
        (PP (IN of)
          (NP (NN responsibility)
            (CC and)
            (NN duty)))))
    (, ,)
    (S
      (VP (VBG carrying)
        (NP (DT a) (NN firearm))))
    (VP (VBZ is)
      (ADJP
        (NP (DT every) (RB bit))
        (RB as) (JJ weighty))
      (PP (IN as)
        (S
          (VP (VBG having)
            (NP (DT a) (NN family))))))
    (. .)))

prep_in(weighty-15, terms-2)
prep_of(terms-2, responsibility-4)
prep_of(terms-2, duty-6)
conj_and(responsibility-4, duty-6)
csubj(weighty-15, carrying-8)
det(firearm-10, a-9)
dobj(carrying-8, firearm-10)
cop(weighty-15, is-11)
det(bit-13, every-12)
dep(weighty-15, bit-13)
advmod(weighty-15, as-14)
root(ROOT-0, weighty-15)
prepc_as(weighty-15, having-17)
det(family-19, a-18)
dobj(having-17, family-19)

(ROOT
  (S
    (ADVP (RB Your))
    (NP (DT every) (NN action))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN weighed)
              (CC and)
              (VBN considered)
              (PP (IN in)
                (NP
                  (NP (NNS terms))
                  (PP (IN of)
                    (NP
                      (NP (NNS effects))
                      (PP (IN on)
                        (NP (NNS others))))))))))))
    (. .)))

advmod(has-4, Your-1)
det(action-3, every-2)
nsubj(has-4, action-3)
xsubj(weighed-7, action-3)
root(ROOT-0, has-4)
aux(weighed-7, to-5)
auxpass(weighed-7, be-6)
xcomp(has-4, weighed-7)
xcomp(has-4, considered-9)
conj_and(weighed-7, considered-9)
prep_in(weighed-7, terms-11)
prep_of(terms-11, effects-13)
prep_on(effects-13, others-15)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (PRP you))
        (VP (VBP decide)
          (S
            (VP (TO to)
              (VP (VB acquire)
                (NP (DT a) (NN firearm))))))))
    (, ,)
    (VP (VB look)
      (PP (IN inside)
        (NP (PRP yourself))))
    (. .)))

mark(decide-3, Before-1)
nsubj(decide-3, you-2)
xsubj(acquire-5, you-2)
advcl(look-9, decide-3)
aux(acquire-5, to-4)
xcomp(decide-3, acquire-5)
det(firearm-7, a-6)
dobj(acquire-5, firearm-7)
root(ROOT-0, look-9)
prep_inside(look-9, yourself-11)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (ADVP (RB truly))
          (VP (VBP believe)
            (SBAR (IN that)
              (S
                (VP (MD should)
                  (NP (DT the) (RBS most) (JJ awful))
                  (S
                    (VP (VB happen)))))))))
      (, ,)
      (NP (PRP you))
      (VP (MD wo) (RB n't)
        (VP (VB use)
          (NP (PRP it)))))
    (, ,)
    (NP (RB then))
    (VP (VBP do) (RB n't)
      (VP (VB get)
        (NP (CD one))))
    (. .)))

mark(believe-4, If-1)
nsubj(believe-4, you-2)
advmod(believe-4, truly-3)
advcl(use-15, believe-4)
complm(should-6, that-5)
ccomp(believe-4, should-6)
det(awful-9, the-7)
advmod(awful-9, most-8)
dobj(should-6, awful-9)
dep(should-6, happen-10)
nsubj(use-15, you-12)
aux(use-15, wo-13)
neg(use-15, n't-14)
ccomp(get-21, use-15)
dobj(use-15, it-16)
nsubj(get-21, then-18)
aux(get-21, do-19)
neg(get-21, n't-20)
root(ROOT-0, get-21)
dobj(get-21, one-22)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (ADVP (RB only))
      (VP (VB give)
        (NP (PRP it))
        (PP (TO to)
          (NP (DT a) (JJ \*)
            (ADJP (RB really) (JJ \*))
            (JJ bad) (NN person)))))
    (. .)))

nsubj(give-4, You-1)
aux(give-4, will-2)
advmod(give-4, only-3)
root(ROOT-0, give-4)
dobj(give-4, it-5)
det(person-12, a-7)
amod(person-12, \*-8)
advmod(\*-10, really-9)
amod(person-12, \*-10)
amod(person-12, bad-11)
prep_to(give-4, person-12)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S
      (VP (VBG having)
        (VP (VBD said)
          (SBAR (IN that) (, ,)
            (S
              (NP (EX there))
              (VP (VBP are)
                (ADVP (RB always))
                (NP
                  (NP
                    (QP (CD one)
                      (CC or)
                      (JJR more))
                    (NNS factors))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD must)
                        (VP (VB be)
                          (VP (VBN considered)
                            (PP (IN before)
                              (NP
                                (NP (PRP you))
                                (, ,)
                                (NP (DT the) (NN defender))))))))))))))))
    (, ,)
    (VP
      (ADVP (RB even))
      (VBZ draws)
      (NP (DT a) (NN weapon)))
    (. .)))

advmod(draws-25, Now-1)
aux(said-4, having-3)
dep(draws-25, said-4)
complm(are-8, that-5)
expl(are-8, there-7)
ccomp(said-4, are-8)
advmod(are-8, always-9)
num(factors-13, one-10)
conj_or(one-10, more-12)
quantmod(one-10, more-12)
num(factors-13, more-12)
nsubj(are-8, factors-13)
nsubjpass(considered-17, factors-13)
aux(considered-17, must-15)
auxpass(considered-17, be-16)
rcmod(factors-13, considered-17)
prep_before(considered-17, you-19)
det(defender-22, the-21)
appos(you-19, defender-22)
advmod(draws-25, even-24)
root(ROOT-0, draws-25)
det(weapon-27, a-26)
dobj(draws-25, weapon-27)

(ROOT
  (S
    (S
      (NP (DT The) (`` ``) (JJ intelligent) ('' '') (NN action))
      (VP (VBZ is)
        (NP
          (NP (DT that))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ fits)
                (NP (DT the) (NN situation))))))))
    (: :)
    (S
      (NP
        (NP (NN education) (, ,) (NN training)
          (CC and)
          (NN calmness))
        (PP (IN under)
          (NP
            (PRN (-LRB- -LRB-)
              (NP (JJ major))
              (-RRB- -RRB-))
            (NN stress))))
      (VP (VBP are)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD let)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP choose)
                    (NP (PRP$ your) (NN path))
                    (PP (IN through)
                      (NP
                        (NP (DT a) (NN situation))
                        (SBAR
                          (WHPP (IN in)
                            (WHNP (WDT which)))
                          (S
                            (NP (NNS people))
                            (VP (VBP have)
                              (VP (VBN been)
                                (VP (VBN murdered)
                                  (PP (IN with)
                                    (ADVP
                                      (NP (RB very) (RB probably))
                                      (RBR more)))
                                  (S
                                    (VP (TO to)
                                      (VP (VB follow)))))))))))))))))))
    (. .)))

det(action-5, The-1)
amod(action-5, intelligent-3)
nsubj(that-7, action-5)
cop(that-7, is-6)
root(ROOT-0, that-7)
nsubj(fits-9, that-7)
rcmod(that-7, fits-9)
det(situation-11, the-10)
dobj(fits-9, situation-11)
nsubj(are-23, education-13)
conj_and(education-13, training-15)
nsubj(are-23, training-15)
conj_and(education-13, calmness-17)
nsubj(are-23, calmness-17)
dep(stress-22, major-20)
prep_under(education-13, stress-22)
parataxis(that-7, are-23)
nsubj(let-25, what-24)
ccomp(are-23, let-25)
nsubj(choose-27, you-26)
ccomp(let-25, choose-27)
poss(path-29, your-28)
dobj(choose-27, path-29)
det(situation-32, a-31)
prep_through(choose-27, situation-32)
rel(murdered-38, which-34)
nsubjpass(murdered-38, people-35)
xsubj(follow-44, people-35)
aux(murdered-38, have-36)
auxpass(murdered-38, been-37)
rcmod(situation-32, murdered-38)
advmod(probably-41, very-40)
npadvmod(more-42, probably-41)
prepc_with(murdered-38, more-42)
aux(follow-44, to-43)
xcomp(murdered-38, follow-44)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (: ...)
          (NP
            (ADVP (CC or))
            (NP
              (ADJP
                (NP (PRP we)))
              (NN can) (NN put)))
          (, an)
          (NP
            (NP (NN end))
            (PP (TO to)
              (NP
                (NP (NN violence))
                (PP (IN in)
                  (NP (DT an) (JJ intelligent) (NN way)))))))
        (NP (DT that)))
      (VP (VBZ preserves) (RB not)
        (VP
          (ADVP (RB only))
          (NP (PRP$ our) (JJ own) (NN life)))))
    (CC but)
    (S
      (NP
        (NP (DT the) (NN life))
        (PP (IN of)
          (NP (CD one))))
      (VP (VBZ 's)
        (NP (NN attacker))))
    (. ...)))

advmod(put-6, or-3)
amod(put-6, we-4)
nn(put-6, can-5)
nsubj(preserves-16, put-6)
punct(put-6, an-7)
appos(put-6, end-8)
prep_to(end-8, violence-10)
det(way-14, an-12)
amod(way-14, intelligent-13)
prep_in(violence-10, way-14)
dep(put-6, that-15)
root(ROOT-0, preserves-16)
neg(preserves-16, not-17)
advmod(life-21, only-18)
poss(life-21, our-19)
amod(life-21, own-20)
dep(preserves-16, life-21)
det(life-24, the-23)
nsubj(attacker-28, life-24)
prep_of(life-24, one-26)
cop(attacker-28, 's-27)
conj_but(preserves-16, attacker-28)

(ROOT
  (S ('' '')
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD will) (RB not)
              (VP (VB engage)
                (PP (IN in)
                  (NP
                    (NP (DT any) (NN form))
                    (PP (IN of)
                      (NP (NN dialogue)))))))))))
    (. .)))

expl(are-3, There-2)
root(ROOT-0, are-3)
nsubj(are-3, those-4)
nsubj(engage-8, those-4)
aux(engage-8, will-6)
neg(engage-8, not-7)
rcmod(those-4, engage-8)
det(form-11, any-10)
prep_in(engage-8, form-11)
prep_of(form-11, dialogue-13)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (`` ``) (NNS reasons) ('' ''))
        (VP (VBN known)
          (ADVP (RB only))
          (PP (TO to)
            (NP (PRP them))))))
    (, ,)
    (NP
      (NP (NN action))
      (VP (VBG meaning)
        (NP
          (NP (NN someone) (RB else) (POS 's))
          (NN death))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ only) (NN course))
        (PP (IN of)
          (NP (NN action)))))
    (. .)))

prep_for(course-19, reasons-3)
partmod(reasons-3, known-5)
advmod(known-5, only-6)
prep_to(known-5, them-8)
nsubj(course-19, action-10)
partmod(action-10, meaning-11)
poss(death-15, someone-12)
advmod(someone-12, else-13)
dobj(meaning-11, death-15)
cop(course-19, is-16)
det(course-19, the-17)
amod(course-19, only-18)
root(ROOT-0, course-19)
prep_of(course-19, action-21)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (NNS others))
          (PRN (-LRB- -LRB-)
            (ADVP (RB unfortunately))
            (-RRB- -RRB-)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP point)
        (PP (TO to)
          (NP
            (NP (NNP Virginia) (NNP Tech))
            (PP (IN as)
              (NP (DT an) (NN example)))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, others-3)
dep(others-3, unfortunately-5)
nsubj(point-10, I-9)
conj_but(are-2, point-10)
nn(Tech-13, Virginia-12)
prep_to(point-10, Tech-13)
det(example-16, an-15)
prep_as(Tech-13, example-16)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB thoroughly))
    (VP (VBP disagree)
      (PP (IN with)
        (NP
          (NP (DT the) (NN notion))
          (PP (IN of)
            (S
              (VP (VBG fighting)
                (NP (NN fire))
                (PP (IN with)
                  (NP (NN fire)))))))))
    (: ...)))

nsubj(disagree-3, I-1)
advmod(disagree-3, thoroughly-2)
root(ROOT-0, disagree-3)
det(notion-6, the-5)
prep_with(disagree-3, notion-6)
prepc_of(notion-6, fighting-8)
dobj(fighting-8, fire-9)
prep_with(fighting-8, fire-11)

