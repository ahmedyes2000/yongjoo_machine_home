(ROOT
  (FRAG
    (ADVP (RB Sorry))
    (NP (NN buddy))
    (. .)))

dep(buddy-2, Sorry-1)
root(ROOT-0, buddy-2)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBD googled)
        (NP (PRP$ your) (NN referance)))
      (CC and)
      (VP (VBD found)
        (NP
          (NP (`` ``)
            (NP (CD 0))
            ('' '')
            (PRN (, ,)
              (NP
                (NP (NN nothing))
                (, ,)
                (NP (NN nada)))
              (, ,)))
          (PP (IN of)
            (NP (PRP$ your) (NNS stats))))
        (PP (IN as)
          (NP (JJ stated)))))
    (. .)))

nsubj(googled-2, I-1)
nsubj(found-6, I-1)
root(ROOT-0, googled-2)
poss(referance-4, your-3)
dobj(googled-2, referance-4)
conj_and(googled-2, found-6)
dobj(found-6, 0-8)
dep(0-8, nothing-11)
appos(nothing-11, nada-13)
poss(stats-17, your-16)
prep_of(0-8, stats-17)
prep_as(found-6, stated-19)

(ROOT
  (S
    (NP
      (NP (NNS facts))
      (NP (DT that)))
    (VP (VBP are)
      (ADJP (JJ unimpeachable)))
    (. .)))

nsubj(unimpeachable-4, facts-1)
dep(facts-1, that-2)
cop(unimpeachable-4, are-3)
root(ROOT-0, unimpeachable-4)

(ROOT
  (S
    (NP (NN anything) (RB else))
    (VP (VBZ is)
      (NP (DT a) (NN lie)))
    (. .)))

nsubj(lie-5, anything-1)
advmod(anything-1, else-2)
cop(lie-5, is-3)
det(lie-5, a-4)
root(ROOT-0, lie-5)

(ROOT
  (S
    (NP
      (NP (DT the) (NNS people))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP tell)
            (SBAR
              (S
                (NP (DT these) (NNS lies))
                (VP (VBP are)
                  (ADVP (RB either))
                  (NP
                    (NP (NNP BLANTANT) (NNP DELIBERATE) (NNP CRIMINALS))
                    (SBAR
                      (WHNP (WP WHO))
                      (S
                        (VP (VBP HAVE)
                          (NP
                            (NP (NNP STOLEN) (NNP THE) (NNP TRUTH) (NNP WHICH) (NNP SHORT))
                            (PP (IN OF)
                              (S
                                (VP (VBG STEALING)
                                  (NP (DT A) (NN LIFE)))))))))))))))))
    (VP (VBZ IS)
      (NP
        (NP (DT THE) (JJ WORST) (NN CRIME))
        (SBAR
          (S
            (NP
              (NP (NNP THAT) (NNP CAN) (NNP BE) (NNP COMMITTED) (NNP OR) (NNP SOME))
              (PP (IN OF)
                (NP (NNP THESE) (NNP PEOPLE))))
            (VP (VBP ARE)
              (NP
                (NP (NNP MISTAKEN) (NNP BRAINWASHED) (NNP DUPES))
                (PP (IN OF)
                  (NP (DT THE) (NNP LIARS) (NNP THEMSELVES)))))))))
    (. .)))

det(people-2, the-1)
nsubj(tell-4, people-2)
nsubj(CRIME-26, people-2)
rcmod(people-2, tell-4)
det(lies-6, these-5)
nsubj(CRIMINALS-11, lies-6)
cop(CRIMINALS-11, are-7)
advmod(CRIMINALS-11, either-8)
nn(CRIMINALS-11, BLANTANT-9)
nn(CRIMINALS-11, DELIBERATE-10)
ccomp(tell-4, CRIMINALS-11)
nsubj(HAVE-13, CRIMINALS-11)
rcmod(CRIMINALS-11, HAVE-13)
nn(SHORT-18, STOLEN-14)
nn(SHORT-18, THE-15)
nn(SHORT-18, TRUTH-16)
nn(SHORT-18, WHICH-17)
dobj(HAVE-13, SHORT-18)
prepc_of(SHORT-18, STEALING-20)
det(LIFE-22, A-21)
dobj(STEALING-20, LIFE-22)
cop(CRIME-26, IS-23)
det(CRIME-26, THE-24)
amod(CRIME-26, WORST-25)
root(ROOT-0, CRIME-26)
nn(SOME-32, THAT-27)
nn(SOME-32, CAN-28)
nn(SOME-32, BE-29)
nn(SOME-32, COMMITTED-30)
nn(SOME-32, OR-31)
nsubj(DUPES-39, SOME-32)
nn(PEOPLE-35, THESE-34)
prep_of(SOME-32, PEOPLE-35)
cop(DUPES-39, ARE-36)
nn(DUPES-39, MISTAKEN-37)
nn(DUPES-39, BRAINWASHED-38)
rcmod(CRIME-26, DUPES-39)
det(THEMSELVES-43, THE-41)
nn(THEMSELVES-43, LIARS-42)
prep_of(DUPES-39, THEMSELVES-43)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (UCP
        (NP (DT a) (VBG sheep) (NN dog))
        (CC and)
        (ADJP (JJ proud)
          (PP (IN of)
            (NP (PRP it))))))
    (. .)))

nsubj(dog-5, I-1)
nsubj(proud-7, I-1)
cop(dog-5, am-2)
det(dog-5, a-3)
amod(dog-5, sheep-4)
root(ROOT-0, dog-5)
conj_and(dog-5, proud-7)
prep_of(proud-7, it-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB also))
      (NP
        (NP (DT a)
          (ADJP (JJ Christian)
            (CC and)
            (JJ proud)))
        (PP (IN of)
          (NP (PRP it)))))
    (. .)))

nsubj(Christian-5, I-1)
nsubj(proud-7, I-1)
cop(Christian-5, am-2)
advmod(Christian-5, also-3)
det(Christian-5, a-4)
root(ROOT-0, Christian-5)
conj_and(Christian-5, proud-7)
prep_of(Christian-5, it-9)

(ROOT
  (S
    (PP (IN unlike)
      (NP (NN obummer)))
    (NP (FW i))
    (VP
      (VP (VBD stood)
        (PRT (RP up)))
      (CC and)
      (VP (VBD said)
        (SBAR
          (S
            (NP (FW i))
            (VP
              (VP (VBP believe))
              (CC and)
              (VP (VBD was)
                (VP (VBN baptised))))))))
    (. .)))

prep_unlike(stood-4, obummer-2)
nsubj(stood-4, i-3)
nsubj(said-7, i-3)
root(ROOT-0, stood-4)
prt(stood-4, up-5)
conj_and(stood-4, said-7)
nsubj(believe-9, i-8)
nsubjpass(baptised-12, i-8)
ccomp(said-7, believe-9)
auxpass(baptised-12, was-11)
ccomp(said-7, baptised-12)
conj_and(believe-9, baptised-12)

(ROOT
  (S
    (S (IN so)
      (NP (FW i))
      (VP (VBP am) (RB not)
        (VP (VBG lying)
          (PP (IN like)
            (NP (PRP$ his) (NN ilk))))))
    (CC and)
    (S
      (NP (FW i))
      (VP (VBP do) (RB not)
        (VP (VB pass)
          (SBAR
            (S
              (NP (DT the) (JJ evil) (NNS ones))
              (VP (VBZ lies)
                (PRT (RP along))))))))
    (. .)))

dep(lying-5, so-1)
nsubj(lying-5, i-2)
aux(lying-5, am-3)
neg(lying-5, not-4)
root(ROOT-0, lying-5)
poss(ilk-8, his-7)
prep_like(lying-5, ilk-8)
nsubj(pass-13, i-10)
aux(pass-13, do-11)
neg(pass-13, not-12)
conj_and(lying-5, pass-13)
det(ones-16, the-14)
amod(ones-16, evil-15)
nsubj(lies-17, ones-16)
ccomp(pass-13, lies-17)
prt(lies-17, along-18)

(ROOT
  (S
    (S
      (NP (FW i))
      (VP (VBP fight)
        (SBAR
          (S
            (NP (DT those))
            (VP (VBZ lies))))))
    (CC and)
    (S
      (NP (FW i))
      (VP (VBP call)
        (NP (DT the) (NNS liars))
        (PRT (RP out))))
    (. .)))

nsubj(fight-2, i-1)
root(ROOT-0, fight-2)
nsubj(lies-4, those-3)
ccomp(fight-2, lies-4)
nsubj(call-7, i-6)
conj_and(fight-2, call-7)
det(liars-9, the-8)
dobj(call-7, liars-9)
prt(call-7, out-10)

(ROOT
  (S
    (NP (NNP Christ))
    (VP
      (VP (VBZ has)
        (VP (VBN told)
          (NP (PRP me))
          (PP (IN in)
            (NP (DT the) (NN book)))
          (SBAR (IN that) (IN if)
            (S
              (NP (PRP I))
              (VP (VBP wish)
                (S
                  (VP (TO to)
                    (VP (VB protect)
                      (NP (PRP myself))))))))))
      (CC and)
      (VP (MD must)
        (VP (VB kill)
          (S
            (VP (TO to)
              (VP (VB do)
                (SBAR (IN so)
                  (S
                    (NP (PRP I))
                    (VP (VBP am) (RB not)
                      (NP (DT a) (NN murderer)))))))))))
    (. .)))

nsubj(told-3, Christ-1)
nsubj(kill-17, Christ-1)
xsubj(do-19, Christ-1)
aux(told-3, has-2)
root(ROOT-0, told-3)
dobj(told-3, me-4)
det(book-7, the-6)
prep_in(told-3, book-7)
complm(wish-11, that-8)
dep(wish-11, if-9)
nsubj(wish-11, I-10)
xsubj(protect-13, I-10)
ccomp(told-3, wish-11)
aux(protect-13, to-12)
xcomp(wish-11, protect-13)
dobj(protect-13, myself-14)
aux(kill-17, must-16)
conj_and(told-3, kill-17)
aux(do-19, to-18)
xcomp(kill-17, do-19)
mark(murderer-25, so-20)
nsubj(murderer-25, I-21)
cop(murderer-25, am-22)
neg(murderer-25, not-23)
det(murderer-25, a-24)
advcl(do-19, murderer-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (NP (DT a) (NN sheep) (NN dog)))
    (. .)))

nsubj(dog-5, I-1)
cop(dog-5, am-2)
det(dog-5, a-3)
nn(dog-5, sheep-4)
root(ROOT-0, dog-5)

(ROOT
  (FRAG
    (ADVP (RB therefore))
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR
            (S
              (VP (MD must)
                (VP (VB be)
                  (NP (DT a) (NN lie)))))))))
    (. .)))

root(ROOT-0, therefore-1)
dep(say-4, what-2)
nsubj(lie-8, what-2)
nsubj(say-4, you-3)
dep(therefore-1, say-4)
aux(lie-8, must-5)
cop(lie-8, be-6)
det(lie-8, a-7)
ccomp(say-4, lie-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP love)
      (NP (PRP$ my) (NN sheep)))
    (. .)))

nsubj(love-2, I-1)
root(ROOT-0, love-2)
poss(sheep-4, my-3)
dobj(love-2, sheep-4)

(ROOT
  (S
    (NP
      (NP (JJS most))
      (PP (IN of)
        (NP
          (NP (DT the) (NNS people))
          (PP (IN in)
            (NP (DT the) (NN world))))))
    (VP (VBP are)
      (NP (NN sheep)))
    (. .)))

nsubj(sheep-9, most-1)
det(people-4, the-3)
prep_of(most-1, people-4)
det(world-7, the-6)
prep_in(people-4, world-7)
cop(sheep-9, are-8)
root(ROOT-0, sheep-9)

(ROOT
  (S
    (ADVP (RB however))
    (NP (EX there))
    (VP (VBP are)
      (ADVP (RB also))
      (NP (NNS wolves)))
    (. .)))

advmod(are-3, however-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
advmod(are-3, also-4)
nsubj(are-3, wolves-5)

(ROOT
  (S
    (NP (DT these) (NNS wolves))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS criminals))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP prey)
              (PP (IN on)
                (NP (PRP$ my) (NN sheep))))))))
    (. .)))

det(wolves-2, these-1)
nsubj(criminals-5, wolves-2)
cop(criminals-5, are-3)
det(criminals-5, the-4)
root(ROOT-0, criminals-5)
nsubj(prey-7, criminals-5)
rcmod(criminals-5, prey-7)
poss(sheep-10, my-9)
prep_on(prey-7, sheep-10)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS criminals))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP kill)
              (NP (PRP$ my) (NN sheep)))))))
    (. .)))

nsubj(criminals-4, they-1)
cop(criminals-4, are-2)
det(criminals-4, the-3)
root(ROOT-0, criminals-4)
nsubj(kill-6, criminals-4)
rcmod(criminals-4, kill-6)
poss(sheep-8, my-7)
dobj(kill-6, sheep-8)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS criminals))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VB maim)
              (CC and)
              (VB injure)
              (NP (PRP$ my) (NN sheep)))))))
    (. .)))

nsubj(criminals-4, they-1)
cop(criminals-4, are-2)
det(criminals-4, the-3)
root(ROOT-0, criminals-4)
nsubj(maim-6, criminals-4)
nsubj(injure-8, criminals-4)
rcmod(criminals-4, maim-6)
rcmod(criminals-4, injure-8)
conj_and(maim-6, injure-8)
poss(sheep-10, my-9)
dobj(maim-6, sheep-10)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS criminals))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP lie)
              (PP (TO to)
                (NP
                  (NP (PRP$ my) (NN sheep))
                  (PP (IN in)
                    (NP (NN order)))))
              (PP (TO to)
                (NP
                  (NP (JJR better) (NN prey))
                  (PP (IN on)
                    (NP (PRP them))))))))))
    (. .)))

nsubj(criminals-4, they-1)
cop(criminals-4, are-2)
det(criminals-4, the-3)
root(ROOT-0, criminals-4)
nsubj(lie-6, criminals-4)
rcmod(criminals-4, lie-6)
poss(sheep-9, my-8)
prep_to(lie-6, sheep-9)
prep_in(sheep-9, order-11)
amod(prey-14, better-13)
prep_to(lie-6, prey-14)
prep_on(prey-14, them-16)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP do) (RB not)
        (VP (VB like)
          (NP (VBG killing) (NNS people))))
      (CC and)
      (VP (MD will) (RB not))
      (SBAR (IN if)
        (S
          (NP (FW i))
          (VP (MD can)
            (VP (VB get)
              (PRT (RP out))
              (PP (IN of)
                (NP (PRP it))))))))
    (. .)))

nsubj(like-4, I-1)
aux(like-4, do-2)
neg(like-4, not-3)
root(ROOT-0, like-4)
amod(people-6, killing-5)
dobj(like-4, people-6)
conj_and(like-4, will-8)
neg(will-8, not-9)
mark(get-13, if-10)
nsubj(get-13, i-11)
aux(get-13, can-12)
advcl(like-4, get-13)
prep_out_of(get-13, it-16)

(ROOT
  (S
    (SBAR
      (ADVP (RB however))
      (IN if)
      (S
        (NP (PRP you))
        (VP (VBP prey)
          (PP (IN on)
            (NP (PRP$ my) (NN sheep))))))
    (, ,)
    (NP (PRP I))
    (VP (MD WILL)
      (VP (VB KILL)
        (S
          (NP
            (NP (NNP YOU) (NNP IF))
            (, ,)
            (NP (NNP NECESSARY))
            (, ,))
          (VP (TO TO)
            (VP (VB MAKE)
              (SBAR
                (S
                  (NP (PRP YOU))
                  (VP (VBP STOP)))))))))
    (. .)))

advmod(prey-4, however-1)
dep(prey-4, if-2)
nsubj(prey-4, you-3)
advcl(KILL-11, prey-4)
poss(sheep-7, my-6)
prep_on(prey-4, sheep-7)
nsubj(KILL-11, I-9)
aux(KILL-11, WILL-10)
root(ROOT-0, KILL-11)
nn(IF-13, YOU-12)
nsubj(MAKE-18, IF-13)
appos(IF-13, NECESSARY-15)
aux(MAKE-18, TO-17)
xcomp(KILL-11, MAKE-18)
nsubj(STOP-20, YOU-19)
ccomp(MAKE-18, STOP-20)

(ROOT
  (S
    (NP (PRP$ My) (NN dear))
    (VP (VBZ sheep))
    (. .)))

poss(dear-2, My-1)
nsubj(sheep-3, dear-2)
root(ROOT-0, sheep-3)

(ROOT
  (S
    (NP (JJ google) (NNP GUN) (NNP FACTS)
      (CC or)
      (NNP GUN) (NNP FACTS) (NNP 4.0)
      (CC or)
      (NNP GUN) (NNP FACTS))
    (VP (VBP 5.0)
      (CC and)
      (VBP get)
      (NP
        (NP (DT the) (NNP REAL) (NNS facts))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP are)
              (VP (VBN documented)
                (PP (IN on)
                  (NP (DT every) (NN page)))))))))
    (. .)))

amod(FACTS-3, google-1)
nn(FACTS-3, GUN-2)
nsubj(5.0-11, FACTS-3)
nsubj(get-13, FACTS-3)
nn(4.0-7, GUN-5)
nn(4.0-7, FACTS-6)
conj_or(FACTS-3, 4.0-7)
nsubj(5.0-11, 4.0-7)
nn(FACTS-10, GUN-9)
conj_or(FACTS-3, FACTS-10)
nsubj(5.0-11, FACTS-10)
root(ROOT-0, 5.0-11)
conj_and(5.0-11, get-13)
det(facts-16, the-14)
nn(facts-16, REAL-15)
dobj(5.0-11, facts-16)
nsubjpass(documented-19, facts-16)
auxpass(documented-19, are-18)
rcmod(facts-16, documented-19)
det(page-22, every-21)
prep_on(documented-19, page-22)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN fangs)
        (ADVP (RB just))
        (PP (IN like)
          (NP (DT a) (NN wolf)))))
    (. .)))

dep(fangs-5, Yes-1)
nsubj(fangs-5, I-3)
aux(fangs-5, have-4)
root(ROOT-0, fangs-5)
advmod(fangs-5, just-6)
det(wolf-9, a-8)
prep_like(fangs-5, wolf-9)

(ROOT
  (S
    (ADVP (RB Yes))
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (RB very) (JJ capable))
      (PP (IN of)
        (NP (NN violence)))
      (ADVP (RB just))
      (PP (IN like)
        (NP (DT a) (NN wolf))))
    (. .)))

advmod(capable-5, Yes-1)
nsubj(capable-5, I-2)
cop(capable-5, am-3)
advmod(capable-5, very-4)
root(ROOT-0, capable-5)
prep_of(capable-5, violence-7)
advmod(capable-5, just-8)
det(wolf-11, a-10)
prep_like(capable-5, wolf-11)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (PP (RB just) (IN like)
      (NP
        (NP (PRP you) (NN mr.))
        (CC or)
        (NP (NN mrs.) (NN sheep))))
    (, ,)
    (NP (FW i))
    (VP (MD can) (RB not)
      (VP (VB hurt)
        (NP (DT a) (NN sheep))
        (SBAR (IN except)
          (S
            (PP (IN like)
              (NP (PRP you)))
            (NP (PRP it))
            (VP (VBZ is)
              (NP (DT an) (NN accident)))))))
    (. .)))

advmod(hurt-14, However-1)
advmod(hurt-14, just-3)
dep(mr.-6, you-5)
prep_like(hurt-14, mr.-6)
nn(sheep-9, mrs.-8)
conj_or(mr.-6, sheep-9)
prep_like(hurt-14, sheep-9)
nsubj(hurt-14, i-11)
aux(hurt-14, can-12)
neg(hurt-14, not-13)
root(ROOT-0, hurt-14)
det(sheep-16, a-15)
dobj(hurt-14, sheep-16)
mark(accident-23, except-17)
prep_like(accident-23, you-19)
nsubj(accident-23, it-20)
cop(accident-23, is-21)
det(accident-23, an-22)
advcl(hurt-14, accident-23)

(ROOT
  (S
    (ADVP (RB just))
    (PP (IN like)
      (NP (PRP you)))
    (NP (DT an) (NN accident))
    (VP (MD would)
      (VP (VB devistate)
        (NP (PRP me))))
    (. .)))

advmod(devistate-7, just-1)
prep_like(devistate-7, you-3)
det(accident-5, an-4)
nsubj(devistate-7, accident-5)
aux(devistate-7, would-6)
root(ROOT-0, devistate-7)
dobj(devistate-7, me-8)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (NN reality)))
      (NP (PRP I))
      (VP (VBP am)
        (NP
          (NP (DT a) (NN sheep))
          (PP (IN with)
            (NP (JJ different) (NNS abilities))))))
    (, ,)
    (NP
      (NP (DT some) (NN inherant))
      (CC and)
      (NP (DT some)))
    (VP (VBD acquired))
    (. .)))

prep_in(sheep-6, reality-2)
nsubj(sheep-6, I-3)
cop(sheep-6, am-4)
det(sheep-6, a-5)
ccomp(acquired-15, sheep-6)
amod(abilities-9, different-8)
prep_with(sheep-6, abilities-9)
det(inherant-12, some-11)
nsubj(acquired-15, inherant-12)
conj_and(inherant-12, some-14)
nsubj(acquired-15, some-14)
root(ROOT-0, acquired-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (NP
        (NP (DT a) (NN sheep) (NN dog))
        (ADVP (DT both))
        (SBAR
          (SBAR (IN because)
            (S
              (NP (FW i))
              (VP (VBP wish)
                (S
                  (VP (TO to)
                    (VP (VB be)))))))
          (CC and)
          (SBAR (IN because)
            (S
              (NP (FW i))
              (VP (MD can) (RB not)
                (VP (VB help)
                  (NP (PRP myself)))))))))
    (. .)))

nsubj(dog-5, I-1)
cop(dog-5, am-2)
det(dog-5, a-3)
nn(dog-5, sheep-4)
root(ROOT-0, dog-5)
advmod(dog-5, both-6)
mark(wish-9, because-7)
nsubj(wish-9, i-8)
xsubj(be-11, i-8)
dep(dog-5, wish-9)
aux(be-11, to-10)
xcomp(wish-9, be-11)
mark(help-17, because-13)
nsubj(help-17, i-14)
aux(help-17, can-15)
neg(help-17, not-16)
dep(dog-5, help-17)
conj_and(wish-9, help-17)
dobj(help-17, myself-18)

(ROOT
  (S
    (NP (NNS wolves))
    (VP (VBP are)
      (NP (PRP$ my) (NN enemy))
      (SBAR (RB just) (IN as)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (ADJP (JJ yours))))))
    (. .)))

nsubj(enemy-4, wolves-1)
cop(enemy-4, are-2)
poss(enemy-4, my-3)
root(ROOT-0, enemy-4)
advmod(yours-9, just-5)
dep(yours-9, as-6)
nsubj(yours-9, they-7)
cop(yours-9, are-8)
dep(enemy-4, yours-9)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP am)
      (NP (PRP$ your) (JJ only) (NN defense)))
    (. .)))

nsubj(defense-5, i-1)
cop(defense-5, am-2)
poss(defense-5, your-3)
amod(defense-5, only-4)
root(ROOT-0, defense-5)

(ROOT
  (S
    (VP (VB Do) (RB not)
      (VP (VB pull)
        (NP (PRP$ my) (NNS teeth))))
    (. .)))

aux(pull-3, Do-1)
neg(pull-3, not-2)
root(ROOT-0, pull-3)
poss(teeth-5, my-4)
dobj(pull-3, teeth-5)

(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP do))))
    (NP (PRP we))
    (VP (MD will) (RB all)
      (VP (VB die)))
    (. .)))

mark(do-3, if-1)
nsubj(do-3, you-2)
advcl(die-7, do-3)
nsubj(die-7, we-4)
aux(die-7, will-5)
advmod(die-7, all-6)
root(ROOT-0, die-7)

(ROOT
  (S
    (S
      (NP (FW i))
      (VP (MD will)
        (VP (VB stilldo)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (FW i))
              (VP (MD can)
                (S
                  (VP (TO to)
                    (VP (VB protect)
                      (NP (PRP$ my) (NN sheep)))))))))))
    (CC and)
    (S
      (ADVP (RB indeed))
      (NP (FW i))
      (VP (MD will)
        (VP (VB die)
          (S
            (VP (VBG doing)
              (SBAR (RB just) (IN that)
                (S
                  (NP
                    (NP
                      (NP
                        (QP (RB just) (RB as) (JJ many)))
                      (PP (IN of)
                        (NP (PRP us))))
                    (NP (NN sheep) (NNS dogs)))
                  (VP (VBP have)
                    (VP (VBN died)
                      (S
                        (VP (VBG useing)
                          (NP (PRP$ our) (NNS teeth))
                          (S
                            (VP (TO to)
                              (VP (VB protect)
                                (NP (PRP you))))))))))))))))
    (. .)))

nsubj(stilldo-3, i-1)
aux(stilldo-3, will-2)
root(ROOT-0, stilldo-3)
dep(can-6, what-4)
nsubj(can-6, i-5)
xsubj(protect-8, i-5)
ccomp(stilldo-3, can-6)
aux(protect-8, to-7)
xcomp(can-6, protect-8)
poss(sheep-10, my-9)
dobj(protect-8, sheep-10)
advmod(die-15, indeed-12)
nsubj(die-15, i-13)
aux(die-15, will-14)
conj_and(stilldo-3, die-15)
xcomp(die-15, doing-16)
advmod(died-27, just-17)
dep(died-27, that-18)
quantmod(many-21, just-19)
quantmod(many-21, as-20)
nsubj(died-27, many-21)
prep_of(many-21, us-23)
nn(dogs-25, sheep-24)
dep(many-21, dogs-25)
aux(died-27, have-26)
ccomp(doing-16, died-27)
xcomp(died-27, useing-28)
poss(teeth-30, our-29)
dobj(useing-28, teeth-30)
aux(protect-32, to-31)
xcomp(useing-28, protect-32)
dobj(protect-32, you-33)

(ROOT
  (S
    (VP (VB check)
      (NP (DT these) (NN government) (NNS sources))
      (PRT (RP out))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBP are)
            (NP (DT all) (JJ public) (NN record))))))
    (. .)))

root(ROOT-0, check-1)
det(sources-4, these-2)
nn(sources-4, government-3)
dobj(check-1, sources-4)
prt(check-1, out-5)
nsubj(record-10, which-6)
cop(record-10, are-7)
det(record-10, all-8)
amod(record-10, public-9)
dep(check-1, record-10)

(ROOT
  (S
    (PP (IN without)
      (NP (NNS teeth)))
    (NP (PRP we))
    (VP (MD will)
      (ADVP (RB just))
      (VP (VB die)
        (S
          (VP (VBG trying)
            (CC and)
            (VBG failing)))))
    (. .)))

prep_without(die-6, teeth-2)
nsubj(die-6, we-3)
aux(die-6, will-4)
advmod(die-6, just-5)
root(ROOT-0, die-6)
xcomp(die-6, trying-7)
xcomp(die-6, failing-9)
conj_and(trying-7, failing-9)

(ROOT
  (S
    (VP (VB get)
      (ADJP (JJ rid)
        (PP (IN of)
          (NP (DT the) (NN stupidity))))
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ anti) (NN gun) (NNS people))
          (VP (VBP have)
            (VP (VBN spoon)
              (S
                (VP (VBN fed)
                  (S
                    (NP (PRP you))
                    (NP (PDT all) (DT these) (NNS years))))))))))
    (. .)))

dep(rid-2, get-1)
root(ROOT-0, rid-2)
det(stupidity-5, the-4)
prep_of(rid-2, stupidity-5)
complm(spoon-12, that-6)
det(people-10, the-7)
amod(people-10, anti-8)
nn(people-10, gun-9)
nsubj(spoon-12, people-10)
aux(spoon-12, have-11)
ccomp(rid-2, spoon-12)
dep(spoon-12, fed-13)
nsubj(years-17, you-14)
predet(years-17, all-15)
det(years-17, these-16)
xcomp(fed-13, years-17)

(ROOT
  (S
    (NP (DT that))
    (ADVP (RB stupidity))
    (VP (MD will)
      (VP (VB kill)
        (NP (PRP you))))
    (. .)))

nsubj(kill-4, that-1)
advmod(kill-4, stupidity-2)
aux(kill-4, will-3)
root(ROOT-0, kill-4)
dobj(kill-4, you-5)

(ROOT
  (S
    (NP (NNP WITH) (NNP LOVE) (NNP FROM) (NNP YOUR) (NNP LOCAL))
    (VP (VBP SHEEP)
      (NP (NNP DOG)))
    (. .)))

nn(LOCAL-5, WITH-1)
nn(LOCAL-5, LOVE-2)
nn(LOCAL-5, FROM-3)
nn(LOCAL-5, YOUR-4)
nsubj(SHEEP-6, LOCAL-5)
root(ROOT-0, SHEEP-6)
dobj(SHEEP-6, DOG-7)

(ROOT
  (S
    (S
      (NP (PRP they))
      (VP (VBP disagree)
        (ADVP (RB completely))
        (PP (IN with)
          (NP (NN everything)))))
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN put)
        (PP (IN in)
          (NP (PRP$ your) (NN article)))))
    (. .)))

nsubj(disagree-2, they-1)
dep(put-8, disagree-2)
advmod(disagree-2, completely-3)
prep_with(disagree-2, everything-5)
nsubj(put-8, you-6)
aux(put-8, have-7)
root(ROOT-0, put-8)
poss(article-11, your-10)
prep_in(put-8, article-11)

(ROOT
  (S
    (NP (NNS people))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (NP (NN truth)))))
    (NP (PRP you))
    (VP (MD must)
      (VP (VB frequent)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NN truth))
            (VP (VBZ is)
              (VP (VBN told)))))))
    (. .)))

nsubj(frequent-8, people-1)
mark(want-4, if-2)
nsubj(want-4, you-3)
dep(frequent-8, want-4)
dobj(want-4, truth-5)
nsubj(frequent-8, you-6)
aux(frequent-8, must-7)
root(ROOT-0, frequent-8)
advmod(told-12, where-9)
nsubjpass(told-12, truth-10)
auxpass(told-12, is-11)
advcl(frequent-8, told-12)

(ROOT
  (INTJ (UH Real) (. !)))

root(ROOT-0, Real-1)

(ROOT
  (S
    (VP (VB Honest))
    (. !)))

root(ROOT-0, Honest-1)

(ROOT
  (NP (NN Proven) (. !)))

root(ROOT-0, Proven-1)

