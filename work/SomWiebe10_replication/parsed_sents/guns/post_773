(ROOT
  (S
    (NP (DT These) (NNS examples))
    (ADVP (RB alone))
    (VP (VBP show)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (JJ everyday) (NNS citizens))
          (VP (MD can)
            (VP (VB protect)
              (NP
                (NP (PRP themselves))
                (CC and)
                (NP (NNS others)))
              (PP (IN with)
                (NP (DT the) (NN ability)
                  (S
                    (VP (TO to)
                      (VP
                        (ADVP (RB concealed))
                        (VB carry)
                        (NP (DT a) (NN firearm))))))))))))
    (. .)))

det(examples-2, These-1)
nsubj(show-4, examples-2)
advmod(show-4, alone-3)
root(ROOT-0, show-4)
advmod(protect-9, how-5)
amod(citizens-7, everyday-6)
nsubj(protect-9, citizens-7)
aux(protect-9, can-8)
ccomp(show-4, protect-9)
dobj(protect-9, themselves-10)
dobj(protect-9, others-12)
conj_and(themselves-10, others-12)
det(ability-15, the-14)
prep_with(protect-9, ability-15)
aux(carry-18, to-16)
advmod(carry-18, concealed-17)
infmod(ability-15, carry-18)
det(firearm-20, a-19)
dobj(carry-18, firearm-20)

(ROOT
  (S
    (S
      (VP (VB Imagine)
        (SBAR (IN if)
          (S
            (NP
              (NP (NNS people))
              (PP (IN like)
                (NP
                  (NP (DT the) (NN security) (NN officer))
                  (CC and)
                  (NP (DT the) (NN principal)))))
            (VP (VBD did) (RB not)
              (VP (VB have)
                (NP
                  (NP (NNS firearms))
                  (PP (IN on)
                    (NP (PRP them))))))))))
    (, ,)
    (NP (JJ innocent) (NNS lives))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN been)
          (VP (VBN lost)))))
    (. .)))

ccomp(lost-23, Imagine-1)
mark(have-13, if-2)
nsubj(have-13, people-3)
det(officer-7, the-5)
nn(officer-7, security-6)
prep_like(people-3, officer-7)
det(principal-10, the-9)
prep_like(people-3, principal-10)
conj_and(officer-7, principal-10)
aux(have-13, did-11)
neg(have-13, not-12)
advcl(Imagine-1, have-13)
dobj(have-13, firearms-14)
prep_on(firearms-14, them-16)
amod(lives-19, innocent-18)
nsubjpass(lost-23, lives-19)
aux(lost-23, would-20)
aux(lost-23, have-21)
auxpass(lost-23, been-22)
root(ROOT-0, lost-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (VP (VBZ is)
            (NP (JJ enough) (NN evidence)
              (ADVP (RB alone))
              (S
                (VP (TO to)
                  (VP (VB show)
                    (NP
                      (NP (DT the) (NNS capabilities))
                      (PP (IN of)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (DT the) (NN ability))
                            (VP (TO to)
                              (VP (VB carry)
                                (NP (DT a) (JJ concealed) (NN weapon))
                                (PP (IN on)
                                  (NP (NN college) (NNS campuses)))))))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
complm(evidence-6, that-3)
cop(evidence-6, is-4)
amod(evidence-6, enough-5)
ccomp(believe-2, evidence-6)
advmod(evidence-6, alone-7)
aux(show-9, to-8)
infmod(evidence-6, show-9)
det(capabilities-11, the-10)
dobj(show-9, capabilities-11)
dobj(carry-17, what-13)
det(ability-15, the-14)
nsubj(carry-17, ability-15)
aux(carry-17, to-16)
prepc_of(capabilities-11, carry-17)
det(weapon-20, a-18)
amod(weapon-20, concealed-19)
dobj(carry-17, weapon-20)
nn(campuses-23, college-22)
prep_on(carry-17, campuses-23)

(ROOT
  (S
    (S
      (NP (NN Nothing))
      (VP (MD can)
        (VP (VB argue)
          (ADVP (RB otherwise)))))
    (: ...)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT a)
          (NP (RB yes))
          (CC or)
          (NP (DT no) (NN situation)))
        (, ,)
        (S
          (INTJ (UH yes))
          (VP
            (VP (VB carry)
              (NP (JJ concealed) (NNS firearms)))
            (CC and)
            (VP (VB have)
              (S
                (S
                  (NP (DT the) (NN capability))
                  (S
                    (VP (TO to)
                      (VP (VB protect)
                        (NP (PRP yourself))))))
                (, ,)
                (CC or)
                (S
                  (INTJ (UH no))
                  (, ,)
                  (VP (VB do) (RB n't)
                    (VP (VB allow)
                      (NP
                        (NP (DT the) (NN carrying))
                        (PP (IN of)
                          (NP (JJ concealed) (NNS firearms)))))))))
            (CC and)
            (VP (VB allow)
              (S
                (NP (NNS citizens))
                (VP (TO to)
                  (VP (VB become)
                    (ADJP (JJ subject)
                      (PP (TO to)
                        (NP (DT the) (NN danger))))
                    (SBAR (IN that)
                      (S
                        (NP (PRP they))
                        (VP (MD may)
                          (VP (VB face)))))))))))))
    (. .)))

nsubj(argue-3, Nothing-1)
aux(argue-3, can-2)
root(ROOT-0, argue-3)
advmod(argue-3, otherwise-4)
nsubj(yes-9, it-6)
cop(yes-9, is-7)
dep(yes-9, a-8)
parataxis(argue-3, yes-9)
det(situation-12, no-11)
parataxis(argue-3, situation-12)
conj_or(yes-9, situation-12)
dep(carry-15, yes-14)
dep(yes-9, carry-15)
amod(firearms-17, concealed-16)
dobj(carry-15, firearms-17)
dep(yes-9, have-19)
conj_and(carry-15, have-19)
det(capability-21, the-20)
dep(protect-23, capability-21)
aux(protect-23, to-22)
dep(have-19, protect-23)
dobj(protect-23, yourself-24)
dep(allow-31, no-27)
aux(allow-31, do-29)
neg(allow-31, n't-30)
dep(have-19, allow-31)
conj_or(protect-23, allow-31)
det(carrying-33, the-32)
dobj(allow-31, carrying-33)
amod(firearms-36, concealed-35)
prep_of(carrying-33, firearms-36)
dep(yes-9, allow-38)
conj_and(carry-15, allow-38)
nsubj(subject-42, citizens-39)
aux(subject-42, to-40)
cop(subject-42, become-41)
xcomp(allow-38, subject-42)
det(danger-45, the-44)
prep_to(subject-42, danger-45)
complm(face-49, that-46)
nsubj(face-49, they-47)
aux(face-49, may-48)
ccomp(subject-42, face-49)

