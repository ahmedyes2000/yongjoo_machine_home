(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (NNS guns))
    (VP (VBP do) (RB n't)
      (VP (VB make)
        (S
          (NP (PRP you))
          (ADJP (JJR safer)
            (PP (IN by)
              (S
                (ADVP (RB just))
                (VP (VBG owning)
                  (NP (CD one)))))))))
    (. .)))

prep_of(make-6, course-2)
nsubj(make-6, guns-3)
aux(make-6, do-4)
neg(make-6, n't-5)
root(ROOT-0, make-6)
nsubj(safer-8, you-7)
xcomp(make-6, safer-8)
advmod(owning-11, just-10)
prepc_by(safer-8, owning-11)
dobj(owning-11, one-12)

(ROOT
  (S
    (NP (DT No) (JJ reasonable) (NN person))
    (VP (MD would)
      (VP (VB state)
        (NP (DT that))))
    (. .)))

det(person-3, No-1)
amod(person-3, reasonable-2)
nsubj(state-5, person-3)
aux(state-5, would-4)
root(ROOT-0, state-5)
dobj(state-5, that-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP ignore)
      (NP
        (NP (PRP$ my) (NNS dogs))
        ('' '')
        (VP (VBG barking)
          (ADVP (RB completely)))))
    (. .)))

nsubj(ignore-2, I-1)
root(ROOT-0, ignore-2)
poss(dogs-4, my-3)
dobj(ignore-2, dogs-4)
partmod(dogs-4, barking-6)
advmod(barking-6, completely-7)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB please)
      (VP (VB explain)
        (PP (TO to)
          (NP (PRP me)))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP they))
            (VP (VBP are)
              (ADVP (RB then))
              (VP (VBG protecting)
                (NP (PRP me))))))))
    (. ?)))

aux(please-3, Can-1)
nsubj(please-3, you-2)
root(ROOT-0, please-3)
dep(please-3, explain-4)
prep_to(explain-4, me-6)
advmod(protecting-11, how-7)
nsubj(protecting-11, they-8)
aux(protecting-11, are-9)
advmod(protecting-11, then-10)
ccomp(explain-4, protecting-11)
dobj(protecting-11, me-12)

(ROOT
  (S
    (NP (NNS Birds))
    (VP (VBD chirp)
      (PP (IN in)
        (NP (PRP$ my) (NN neighborhood)))
      (, ,)
      (ADVP (RB too)))
    (. .)))

nsubj(chirp-2, Birds-1)
root(ROOT-0, chirp-2)
poss(neighborhood-5, my-4)
prep_in(chirp-2, neighborhood-5)
advmod(chirp-2, too-7)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (ADVP (RB pretty) (RB much))
    (VP (VBP ignore)
      (NP (PRP them))
      (ADVP (RB too)))
    (. .)))

cc(ignore-5, And-1)
nsubj(ignore-5, I-2)
advmod(much-4, pretty-3)
advmod(ignore-5, much-4)
root(ROOT-0, ignore-5)
dobj(ignore-5, them-6)
advmod(ignore-5, too-7)

(ROOT
  (SQ (VBP Are)
    (NP (PRP they))
    (VP (VBN protecting)
      (S
        (NP (PRP me))
        (ADVP (RB too))))
    (. ?)))

auxpass(protecting-3, Are-1)
nsubjpass(protecting-3, they-2)
root(ROOT-0, protecting-3)
dep(protecting-3, me-4)
advmod(me-4, too-5)

(ROOT
  (S (`` ``)
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG missing)
        (NP (DT the) (NN point))
        (SBAR (IN that)
          (S
            (PP (IN without)
              (NP (NN warning)))
            (NP (DT a) (NN gun))
            (VP (VBZ is)
              (ADVP (RB just))
              (NP
                (NP (DT another) (NN item))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (VP (VBG laying)
                        (PRT (RP around))))))))))))
    (. .)))

nsubj(missing-4, You-2)
aux(missing-4, 're-3)
root(ROOT-0, missing-4)
det(point-6, the-5)
dobj(missing-4, point-6)
complm(item-15, that-7)
prep_without(item-15, warning-9)
det(gun-11, a-10)
nsubj(item-15, gun-11)
cop(item-15, is-12)
advmod(item-15, just-13)
det(item-15, another-14)
ccomp(missing-4, item-15)
nsubj(laying-18, item-15)
aux(laying-18, is-17)
rcmod(item-15, laying-18)
prt(laying-18, around-19)

(ROOT
  (S
    (NP
      (NP (RB About) (RB as) (JJ useful))
      (PP (IN as)
        (NP
          (NP (DT a) (NN shoe) (NN horn))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP have)
                (NP
                  (NP (DT no) (NN way))
                  (PP (IN of)
                    (S
                      (VP (VBG getting)
                        (PP (TO to)
                          (NP (PRP it)))))))))))))
    (VP (VBP BEFORE)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP need)
            (NP (PRP it))))))
    (. .)))

advmod(useful-3, About-1)
advmod(useful-3, as-2)
nsubj(BEFORE-17, useful-3)
det(horn-7, a-5)
nn(horn-7, shoe-6)
prep_as(useful-3, horn-7)
mark(have-10, if-8)
nsubj(have-10, you-9)
dep(horn-7, have-10)
det(way-12, no-11)
dobj(have-10, way-12)
prepc_of(way-12, getting-14)
prep_to(getting-14, it-16)
root(ROOT-0, BEFORE-17)
nsubj(need-19, you-18)
ccomp(BEFORE-17, need-19)
dobj(need-19, it-20)

(ROOT
  (FRAG ('' '')
    (NP (NNP Again))
    (, ,)
    (PP
      (NP (WP what))
      (PP (IN if)))
    (. ?)))

root(ROOT-0, Again-2)
dep(if-5, what-4)
dep(Again-2, if-5)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP do)
          (VP (VB have)
            (NP (PRP$ my) (NN gun))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (VP (VBN needed)))))))))
    (. ?)))

dep(have-5, What-1)
mark(have-5, if-2)
nsubj(have-5, I-3)
aux(have-5, do-4)
root(ROOT-0, have-5)
poss(gun-7, my-6)
dobj(have-5, gun-7)
advmod(needed-11, when-8)
nsubjpass(needed-11, it-9)
auxpass(needed-11, is-10)
advcl(have-5, needed-11)

(ROOT
  (FRAG
    (NP
      (NP (NNP Am) (NNP I))
      (ADJP
        (ADJP (RBR less) (JJ safe))
        (, ,)
        (CC or)
        (ADJP (RBR more) (JJ safe))))
    (. ?)))

nn(I-2, Am-1)
root(ROOT-0, I-2)
advmod(safe-4, less-3)
amod(I-2, safe-4)
advmod(safe-8, more-7)
amod(I-2, safe-8)
conj_or(safe-4, safe-8)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP know))
      (, ,)
      (NP (JJR less)))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(know-2, less-4)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (PRP I))
    (VP (MD would) (RB n't)
      (VP (VB feel)
        (ADJP (JJ safe)
          (PP (IN around)
            (NP (PRP you))))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBD had)
              (NP
                (NP (CD 1,000) (NNS guns))
                (VP (VBG lying)
                  (PRT (RP around))
                  (NP (PRP you)))))))))
    (. .)))

prep_for(feel-7, example-2)
nsubj(feel-7, I-4)
aux(feel-7, would-5)
neg(feel-7, n't-6)
root(ROOT-0, feel-7)
acomp(feel-7, safe-8)
prep_around(safe-8, you-10)
mark(had-13, if-11)
nsubj(had-13, you-12)
advcl(feel-7, had-13)
num(guns-15, 1,000-14)
dobj(had-13, guns-15)
partmod(guns-15, lying-16)
prt(lying-16, around-17)
dobj(lying-16, you-18)

(ROOT
  (S ('' '')
    (NP (WP What))
    (VP (VBZ happens)
      (SBAR (IN if)
        (S
          (NP (NNP Tom))
          (VP (VBD had)
            (ADVP (RB accidentally))
            (VP (VBN left)
              (NP (DT that) (JJ back) (NN pack))
              (PP (IN on)
                (NP (DT a) (NN bus))))))))
    (. ?)))

nsubj(happens-3, What-2)
root(ROOT-0, happens-3)
mark(left-8, if-4)
nsubj(left-8, Tom-5)
aux(left-8, had-6)
advmod(left-8, accidentally-7)
advcl(happens-3, left-8)
det(pack-11, that-9)
amod(pack-11, back-10)
dobj(left-8, pack-11)
det(bus-14, a-13)
prep_on(left-8, bus-14)

(ROOT
  (S
    (VP
      (NP (`` ``)
        (NP (WP What))
        (PP (IN if))))
    (. ?)))

root(ROOT-0, What-2)
prep(What-2, if-3)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN if))
    (. ?)))

root(ROOT-0, What-1)
dep(What-1, if-2)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN if))
    (. ?)))

root(ROOT-0, What-1)
dep(What-1, if-2)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (DT this) (NN story))
        (VP (VBD was)
          (VP (VBN made)
            (PRT (RP up))))))
    (. ?)))

dep(made-6, What-1)
mark(made-6, if-2)
det(story-4, this-3)
nsubjpass(made-6, story-4)
auxpass(made-6, was-5)
root(ROOT-0, made-6)
prt(made-6, up-7)

(ROOT
  (S
    (SBAR (RB Even) (IN though)
      (S
        (S
          (NP (PRP it))
          (VP (VBZ 's) (RB not)))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (NP (DT no) (NN proof))))))
    (VP (VBZ whatsoever)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)))))
    (. .)))

advmod('s-4, Even-1)
dep('s-4, though-2)
nsubj('s-4, it-3)
advcl(whatsoever-12, 's-4)
csubj(whatsoever-12, 's-4)
neg('s-4, not-5)
nsubj(have-9, I-8)
conj_and('s-4, have-9)
advcl(whatsoever-12, have-9)
csubj(whatsoever-12, have-9)
det(proof-11, no-10)
dobj(have-9, proof-11)
root(ROOT-0, whatsoever-12)
complm(is-15, that-13)
nsubj(is-15, it-14)
ccomp(whatsoever-12, is-15)

(ROOT
  (FRAG
    (INTJ (UH Well))
    (, ,)
    (NP
      (NP (WP what))
      (PP (IN if)))
    (. ?)))

dep(what-3, Well-1)
root(ROOT-0, what-3)
prep(what-3, if-4)

(ROOT
  (SBAR (`` ``)
    (S
      (PP (IN Of)
        (NP (NN course)))
      (NP (PRP you))
      (VP (VBP 're)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB say) ('' ''))))
          (S
            (VP (VBG Having)
              (NP (DT a) (NN gun))
              (VP (VBN saved)
                (NP (CD ten) (NNS peoples))
                (NP (NNS lives) (NNS !!!))))))))))

prep_of(going-6, course-3)
nsubj(going-6, you-4)
xsubj(say-8, you-4)
aux(going-6, 're-5)
root(ROOT-0, going-6)
aux(say-8, to-7)
xcomp(going-6, say-8)
aux(saved-13, Having-10)
det(gun-12, a-11)
dobj(saved-13, gun-12)
xcomp(going-6, saved-13)
num(peoples-15, ten-14)
iobj(saved-13, peoples-15)
nn(!!!-17, lives-16)
dobj(saved-13, !!!-17)

(ROOT
  (S ('' '')
    (ADVP (RB Yea))
    (, ,)
    (NP (RB because) (PRP it))
    (VP (VBD did))
    (. .)))

advmod(did-6, Yea-2)
advmod(it-5, because-4)
nsubj(did-6, it-5)
root(ROOT-0, did-6)

(ROOT
  (S
    (SBAR (RB Just) (IN because)
      (S
        (NP (PRP you))
        (VP (VBD imagined)
          (SBAR (IN that)
            (S
              (NP (DT this))
              (VP (MD might)
                (VP (VB be)
                  (VP (VBN made)
                    (PRT (RP up))))))))))
    (VP (VBZ does) (RB n't)
      (VP (VB change)
        (NP (DT the) (NN fact))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBD did))))))
    (. .)))

advmod(imagined-4, Just-1)
dep(imagined-4, because-2)
nsubj(imagined-4, you-3)
advcl(change-13, imagined-4)
csubj(change-13, imagined-4)
complm(made-9, that-5)
nsubjpass(made-9, this-6)
aux(made-9, might-7)
auxpass(made-9, be-8)
ccomp(imagined-4, made-9)
prt(made-9, up-10)
aux(change-13, does-11)
neg(change-13, n't-12)
root(ROOT-0, change-13)
det(fact-15, the-14)
dobj(change-13, fact-15)
complm(did-18, that-16)
nsubj(did-18, it-17)
ccomp(change-13, did-18)

(ROOT
  (FRAG (CC And)
    (NP
      (NP (DT all))
      (PP (IN of)
        (NP
          (NP (PRP$ your) (NNS questions))
          (PP (IN about)
            (SBAR
              (SBAR
                (WHADVP (WRB why))
                (S
                  (VP (VBD was)
                    (NP
                      (NP
                        (NP (PRP he))
                        (VP (VBG carrying)
                          (NP
                            (NP (DT a) (JJ loaded) (NN gun))
                            (, ,)
                            (CC and)
                            (SBAR
                              (WHADVP (WRB why))
                              (S
                                (VP (VBD was) (RB n't)
                                  (NP
                                    (NP (DT the) (JJ alleged) (NN rapist))
                                    (VP (VBG using)
                                      (NP (PDT both) (PRP$ his) (NNS hands)))))))
                            (, ,)
                            (CC and)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (UCP
                                  (ADJP (IN if))
                                  (, ,)
                                  (CC and)
                                  (VP (VBZ why))))))))
                      (CC and)
                      (SBAR
                        (WHNP (WP who)))))))
              (, ,)
              (CC and)
              (SBAR
                (WHADVP (WRB where))
                (S
                  (VP (VBP do) (RB n't)
                    (VP (VB change)
                      (NP (DT a) (NN thing)))))))))))
    (. .)))

dep(all-2, And-1)
root(ROOT-0, all-2)
poss(questions-5, your-4)
prep_of(all-2, questions-5)
advmod(he-9, why-7)
cop(he-9, was-8)
prepc_about(questions-5, he-9)
partmod(he-9, carrying-10)
det(gun-13, a-11)
amod(gun-13, loaded-12)
dobj(carrying-10, gun-13)
advmod(rapist-21, why-16)
cop(rapist-21, was-17)
neg(rapist-21, n't-18)
det(rapist-21, the-19)
amod(rapist-21, alleged-20)
dobj(carrying-10, rapist-21)
conj_and(gun-13, rapist-21)
partmod(rapist-21, using-22)
predet(hands-25, both-23)
poss(hands-25, his-24)
dobj(using-22, hands-25)
dep(if-29, what-28)
dobj(carrying-10, if-29)
conj_and(gun-13, if-29)
rcmod(gun-13, if-29)
conj_and(gun-13, why-32)
rcmod(gun-13, why-32)
conj_and(if-29, why-32)
prepc_about(questions-5, who-34)
conj_and(he-9, who-34)
rcmod(he-9, who-34)
advmod(change-40, where-37)
aux(change-40, do-38)
neg(change-40, n't-39)
prepc_about(questions-5, change-40)
conj_and(he-9, change-40)
det(thing-42, a-41)
dobj(change-40, thing-42)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB actually))
      (VP (VB run)
        (S
          (VP (VBG screaming)))))
    (. .)))

nsubj(run-4, I-1)
aux(run-4, would-2)
advmod(run-4, actually-3)
root(ROOT-0, run-4)
xcomp(run-4, screaming-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD happened))
    (. .)))

nsubj(happened-2, It-1)
root(ROOT-0, happened-2)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBD made)
        (S
          (NP (DT those) (NNS people))
          (ADJP (JJR safer)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (ADVP (RB just))
      (VP (MD ca) (RB n't)
        (VP (VB stand)
          (NP (PRP it)))))
    (. .)))

nsubj(made-2, It-1)
root(ROOT-0, made-2)
det(people-4, those-3)
nsubj(safer-5, people-4)
xcomp(made-2, safer-5)
nsubj(stand-12, you-8)
advmod(stand-12, just-9)
aux(stand-12, ca-10)
neg(stand-12, n't-11)
conj_and(made-2, stand-12)
dobj(stand-12, it-13)

(ROOT
  (S
    (ADVP (RB Well))
    (NP (PRP I))
    (VP
      (ADVP (RB sure))
      (VBP hate)
      (NP (PRP it))
      (PP (IN for)
        (NP (PRP ya))))
    (. .)))

advmod(hate-4, Well-1)
nsubj(hate-4, I-2)
advmod(hate-4, sure-3)
root(ROOT-0, hate-4)
dobj(hate-4, it-5)
prep_for(hate-4, ya-7)

(ROOT
  (S ('' '')
    (NP (NNP Nor))
    (VP (VBZ does)
      (S
        (NP
          (NP (NN fear))
          (PP (IN of)
            (NP (NN death))))
        (VP
          (VP (VB rule)
            (NP (PRP$ my) (NN life))
            (ADVP
              (ADVP (RB so) (RB completely))
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBP ignore)
                    (NP
                      (NP
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP
                              (NP (JJ common) (NN sense))
                              (PRN (-LRB- -LRB-)
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (VP (VBZ is) (RB n't)
                                      (ADJP (RB exactly) (JJ common)))))
                                (-RRB- -RRB-)))
                            (VP (VBZ says)))))
                      (CC and)
                      (NP
                        (NP (DT the) (NNS rules))
                        (PP (IN of)
                          (NP (NN safety))))))))))
          (CC and)
          (VP (VB carry)
            (NP (PRP$ my) (NNS weapons))
            (PRT (RP around))
            (PP (IN with)
              (NP
                (NP (PRP me))
                (PP (IN in)
                  (NP (DT a) (NN backpack)))))))))
    (. .)))

nsubj(does-3, Nor-2)
root(ROOT-0, does-3)
nsubj(rule-7, fear-4)
nsubj(carry-32, fear-4)
prep_of(fear-4, death-6)
ccomp(does-3, rule-7)
poss(life-9, my-8)
dobj(rule-7, life-9)
advmod(completely-11, so-10)
advmod(rule-7, completely-11)
dep(ignore-14, that-12)
nsubj(ignore-14, I-13)
ccomp(completely-11, ignore-14)
dobj(says-25, what-15)
rel(says-25, what-15)
amod(sense-17, common-16)
nsubj(says-25, sense-17)
nsubj(common-23, which-19)
cop(common-23, is-20)
neg(common-23, n't-21)
advmod(common-23, exactly-22)
dep(sense-17, common-23)
dobj(ignore-14, says-25)
det(rules-28, the-27)
dobj(ignore-14, rules-28)
conj_and(says-25, rules-28)
prep_of(rules-28, safety-30)
ccomp(does-3, carry-32)
conj_and(rule-7, carry-32)
poss(weapons-34, my-33)
dobj(carry-32, weapons-34)
prt(carry-32, around-35)
prep_with(carry-32, me-37)
det(backpack-40, a-39)
prep_in(me-37, backpack-40)

(ROOT
  (S ('' '')
    (S
      (PP (IN Like))
      (NP (PRP you))
      (VP (VBD said)))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (PDT all) (DT the) (NNS facts))))
    (. .)))

prep(said-4, Like-2)
nsubj(said-4, you-3)
ccomp(have-9, said-4)
nsubj(have-9, you-6)
aux(have-9, do-7)
neg(have-9, n't-8)
root(ROOT-0, have-9)
predet(facts-12, all-10)
det(facts-12, the-11)
dobj(have-9, facts-12)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (NP
      (NP (RB not) (JJ possible))
      (SBAR
        (WHNP (WDT that))
        (S
          (PP
            (PP
              (ADVP
                (ADVP (RB maybe))
                (, ,)
                (SBAR (RB just)
                  (S
                    (ADVP (RB MAYBE))
                    (, ,)
                    (NP (PRP he))
                    (VP (VBD had)
                      (VP (VBN been)
                        (VP (VBG carrying)
                          (NP (PRP it))
                          (PP (IN in)
                            (NP
                              (NP (DT a) (NN holster))
                              (PP (IN on)
                                (NP (PRP$ his) (NN hip)))))))))))
              (IN while)
              (S
                (VP (VBG carrying)
                  (NP (PRP$ his) (NN backpack)))))
            (, ,)
            (CC and)
            (PP (IN upon)
              (S
                (VP (VBG arriving)
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN apartment))
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP
                            (NP (NN none))
                            (PP (IN of)
                              (NP (DT this))))
                          (ADVP (RB ever))
                          (VP (VBD happened))))))))))
          (, ,)
          (VP (VBD placed)
            (NP (DT the) (NN gun))
            (PP (IN into)
              (NP (PRP$ his) (NN backpack)))))))
    (. ?)))

cop(possible-4, Is-1)
nsubj(possible-4, it-2)
neg(possible-4, not-3)
root(ROOT-0, possible-4)
nsubj(placed-40, possible-4)
nsubj(placed-40', possible-4)
advmod(placed-40, maybe-6)
advmod(carrying-14, just-8)
advmod(carrying-14, MAYBE-9)
nsubj(carrying-14, he-11)
aux(carrying-14, had-12)
aux(carrying-14, been-13)
dep(maybe-6, carrying-14)
dobj(carrying-14, it-15)
det(holster-18, a-17)
prep_in(carrying-14, holster-18)
poss(hip-21, his-20)
prep_on(holster-18, hip-21)
prepc_while(placed-40, carrying-23)
poss(backpack-25, his-24)
dobj(carrying-23, backpack-25)
prepc_upon(placed-40', arriving-29)
det(apartment-32, the-31)
prep_at(arriving-29, apartment-32)
advmod(happened-38, where-33)
nsubj(happened-38, none-34)
prep_of(none-34, this-36)
advmod(happened-38, ever-37)
rcmod(apartment-32, happened-38)
rcmod(possible-4, placed-40)
rcmod(possible-4, placed-40')
conj_and(placed-40, placed-40')
det(gun-42, the-41)
dobj(placed-40, gun-42)
poss(backpack-45, his-44)
prep_into(placed-40, backpack-45)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB sometimes))
    (VP (VBP do)
      (NP
        (NP (NN something))
        (PP (IN like)
          (NP (DT that)))))
    (. .)))

nsubj(do-3, I-1)
advmod(do-3, sometimes-2)
root(ROOT-0, do-3)
dobj(do-3, something-4)
prep_like(something-4, that-6)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (NP
      (NP (RB not) (JJ possible))
      (SBAR (IN that)
        (S
          (PP (IN in)
            (NP
              (NP (DT a) (NN country))
              (PP (IN of)
                (NP (CD 360,000,000) (JJ +) (NNS people)))))
          (, ,)
          (NP (DT that) (CD two) (NNS people))
          (VP (MD might)
            (VP (VB do)
              (NP (NN something))
              (ADVP (RB vaguely)
                (ADJP (JJ similar))))))))
    (. ?)))

cop(possible-4, Is-1)
nsubj(possible-4, it-2)
neg(possible-4, not-3)
root(ROOT-0, possible-4)
complm(do-18, that-5)
det(country-8, a-7)
prep_in(do-18, country-8)
num(people-12, 360,000,000-10)
amod(people-12, +-11)
prep_of(country-8, people-12)
det(people-16, that-14)
num(people-16, two-15)
nsubj(do-18, people-16)
aux(do-18, might-17)
dep(possible-4, do-18)
dobj(do-18, something-19)
advmod(do-18, vaguely-20)
pobj(vaguely-20, similar-21)

(ROOT
  (FRAG (CC And)
    (ADVP (RB as)
      (PP (IN for)
        (NP
          (NP (NN fear))
          (PP (IN of)
            (NP (NN death) (NN ruling))))))
    (NP
      (NP
        (NP (CD one) (POS 's))
        (NN life))
      (: :)
      (S
        (ADVP (RB once) (RB again))
        (, ,)
        (NP (PRP I))
        (VP (VBP refer)
          (NP (PRP you))
          (PP (TO to)
            (NP (DT the) (NN seat) (NN belt) (NN example))))))
    (. .)))

dep(life-10, And-1)
prep_as_for(life-10, fear-4)
nn(ruling-7, death-6)
prep_of(fear-4, ruling-7)
poss(life-10, one-8)
root(ROOT-0, life-10)
advmod(again-13, once-12)
advmod(refer-16, again-13)
nsubj(refer-16, I-15)
dep(life-10, refer-16)
dobj(refer-16, you-17)
det(example-22, the-19)
nn(example-22, seat-20)
nn(example-22, belt-21)
prep_to(refer-16, example-22)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (VP (VBG comparing)
        (NP (DT a) (NN seat) (NN belt))
        (PP (TO to)
          (NP (DT a) (NN gun)))))
    (. .)))

dep(comparing-6, No-1)
nsubj(comparing-6, I-3)
aux(comparing-6, am-4)
neg(comparing-6, not-5)
root(ROOT-0, comparing-6)
det(belt-9, a-7)
nn(belt-9, seat-8)
dobj(comparing-6, belt-9)
det(gun-12, a-11)
prep_to(comparing-6, gun-12)

(ROOT
  (S (CC But)
    (NP (DT that))
    (VP (VBZ 's)
      (NP (DT a) (JJ different) (NN story)))
    (. .)))

cc(story-6, But-1)
nsubj(story-6, that-2)
cop(story-6, 's-3)
det(story-6, a-4)
amod(story-6, different-5)
root(ROOT-0, story-6)

(ROOT
  (S
    (VP (VB Thanks)
      (ADVP (RB again))
      (PP (IN for)
        (S
          (VP (VBG inventing)
            (NP (DT that) (JJ little) (NN factoid))))))
    (. .)))

root(ROOT-0, Thanks-1)
advmod(Thanks-1, again-2)
prepc_for(Thanks-1, inventing-4)
det(factoid-7, that-5)
amod(factoid-7, little-6)
dobj(inventing-4, factoid-7)

(ROOT
  (S (CC But)
    (NP
      (NP (DT an) (JJ irrational) (NN fear))
      (PP (IN of)
        (NP (NN death))))
    (VP (VBZ does) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB rule)
              (PRT (RP over))
              (NP (PRP you)))))
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (NP (DT a) (JJ good) (NN idea)
                      (S
                        (VP (TO to)
                          (VP (VB wear)
                            (NP (DT a) (NN seat) (NN belt))))))))))))))
    (. .)))

cc(have-9, But-1)
det(fear-4, an-2)
amod(fear-4, irrational-3)
nsubj(have-9, fear-4)
xsubj(rule-11, fear-4)
xsubj(know-15, fear-4)
prep_of(fear-4, death-6)
aux(have-9, does-7)
neg(have-9, n't-8)
root(ROOT-0, have-9)
aux(rule-11, to-10)
xcomp(have-9, rule-11)
prt(rule-11, over-12)
dobj(rule-11, you-13)
aux(know-15, to-14)
xcomp(have-9, know-15)
complm(idea-21, that-16)
nsubj(idea-21, it-17)
cop(idea-21, 's-18)
det(idea-21, a-19)
amod(idea-21, good-20)
ccomp(know-15, idea-21)
aux(wear-23, to-22)
infmod(idea-21, wear-23)
det(belt-26, a-24)
nn(belt-26, seat-25)
dobj(wear-23, belt-26)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB wear)
        (NP (PRP it))
        (PP (IN for)
          (NP
            (NP (DT the) (CD 99.9) (NN %))
            (PP (IN of)
              (NP
                (NP (DT the) (NN time))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP arrive)
                      (PP (IN at)
                        (NP (PRP$ your) (NN destination)))
                      (PP (IN without)
                        (NP (NN incident))))))))))))
    (. .)))

nsubj(wear-4, You-1)
aux(wear-4, do-2)
neg(wear-4, n't-3)
root(ROOT-0, wear-4)
dobj(wear-4, it-5)
det(%-9, the-7)
num(%-9, 99.9-8)
prep_for(wear-4, %-9)
det(time-12, the-11)
prep_of(%-9, time-12)
dobj(arrive-14, time-12)
nsubj(arrive-14, you-13)
rcmod(time-12, arrive-14)
poss(destination-17, your-16)
prep_at(arrive-14, destination-17)
prep_without(arrive-14, incident-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP wear)
      (NP (PRP it))
      (PP (IN for)
        (NP (DT that) (CD one) (NN time)))
      (ADVP
        (ADVP (RB just)
          (NP (CD one)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't))))))
    (. .)))

nsubj(wear-2, You-1)
root(ROOT-0, wear-2)
dobj(wear-2, it-3)
det(time-7, that-5)
num(time-7, one-6)
prep_for(wear-2, time-7)
advmod(wear-2, just-8)
pobj(just-8, one-9)
advmod(do-12, where-10)
nsubj(do-12, you-11)
dep(just-8, do-12)
neg(do-12, n't-13)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB only))
    (VP (VBZ takes)
      (ADVP (RB once)))
    (. .)))

nsubj(takes-3, It-1)
advmod(takes-3, only-2)
root(ROOT-0, takes-3)
advmod(takes-3, once-4)

(ROOT
  (S (CC And)
    (S
      (VP
        (VP (VBG wearing)
          (NP (DT a) (NN seat) (NN belt)))
        (CC or)
        (VP (VBG having)
          (NP
            (NP (DT a) (NN gun))
            (PP (IN at)
              (NP (DT that) (CD one) (NN time)))))))
    (, ,)
    (VP (VBP MIGHT)
      (VP (VB be)
        (NP
          (NP (DT the) (NN difference))
          (PP (IN between)
            (NP (NN life)
              (CC and)
              (NN death))))))
    (. .)))

cc(difference-18, And-1)
dep(difference-18, wearing-2)
det(belt-5, a-3)
nn(belt-5, seat-4)
dobj(wearing-2, belt-5)
conj_or(wearing-2, having-7)
dep(difference-18, having-7)
det(gun-9, a-8)
dobj(having-7, gun-9)
det(time-13, that-11)
num(time-13, one-12)
prep_at(gun-9, time-13)
aux(difference-18, MIGHT-15)
cop(difference-18, be-16)
det(difference-18, the-17)
root(ROOT-0, difference-18)
prep_between(difference-18, life-20)
prep_between(difference-18, death-22)
conj_and(life-20, death-22)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBN come)
          (PRT (RP out))
          (PP (IN on)
            (NP (DT the) (JJ other) (NN side)))
          (ADVP (RB alive)))))
    (, ,)
    (NP (DT the) (NN seat))
    (ADVP
      (NP
        (NP (NN belt))
        (, ,)
        (CC or)
        (NP (DT the) (NN gun))
        (, ,))
      (RB just))
    (VP (VBD made)
      (S
        (NP (PRP you))
        (ADJP (JJR safer))))
    (. .)))

cc(made-21, And-1)
mark(come-4, if-2)
nsubj(come-4, you-3)
advcl(made-21, come-4)
prt(come-4, out-5)
det(side-9, the-7)
amod(side-9, other-8)
prep_on(come-4, side-9)
advmod(come-4, alive-10)
det(seat-13, the-12)
nsubj(made-21, seat-13)
npadvmod(just-20, belt-14)
det(gun-18, the-17)
conj_or(belt-14, gun-18)
npadvmod(just-20, gun-18)
advmod(made-21, just-20)
root(ROOT-0, made-21)
nsubj(safer-23, you-22)
xcomp(made-21, safer-23)

(ROOT
  (S ('' '')
    (NP (NNS Guns))
    (VP (VBP are) (RB not)
      (NP
        (NP (JJ magical) (NNS things))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP appear)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP
                    (VP (VB need)
                      (NP (PRP them)))
                    (CC and)
                    (VP (VB tell)
                      (NP (PRP you))
                      (NP (DT the) (NN future)))))))))))
    (. .)))

nsubj(things-6, Guns-2)
cop(things-6, are-3)
neg(things-6, not-4)
amod(things-6, magical-5)
root(ROOT-0, things-6)
nsubj(appear-8, things-6)
rcmod(things-6, appear-8)
advmod(need-11, when-9)
nsubj(need-11, you-10)
nsubj(tell-14, you-10)
advcl(appear-8, need-11)
dobj(need-11, them-12)
advcl(appear-8, tell-14)
conj_and(need-11, tell-14)
iobj(tell-14, you-15)
det(future-17, the-16)
dobj(tell-14, future-17)

(ROOT
  (S ('' '')
    (ADVP (RB Wow))
    (, ,)
    (NP (JJ great))
    (VP (VBD imagined)
      (NP (NN argument)))
    (. .)))

advmod(imagined-5, Wow-2)
nsubj(imagined-5, great-4)
root(ROOT-0, imagined-5)
dobj(imagined-5, argument-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP guess)
      (ADJP (JJ next)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB tell)
                      (NP (PRP me))
                      (NP
                        (NP (NNS elephants))
                        (SBAR
                          (S
                            (VP (VBP do) (RB n't)
                              (VP (VB fly)))))))))))))))
    (. .)))

nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
acomp(guess-2, next-3)
nsubj(going-6, you-4)
xsubj(tell-8, you-4)
aux(going-6, 're-5)
dep(next-3, going-6)
aux(tell-8, to-7)
xcomp(going-6, tell-8)
iobj(tell-8, me-9)
dobj(tell-8, elephants-10)
aux(fly-13, do-11)
neg(fly-13, n't-12)
rcmod(elephants-10, fly-13)

(ROOT
  (NP
    (NP (NNS Thanks))
    (PP (IN for)
      (NP
        (NP (DT the) (NN news) (NN flash))
        (, ,)
        (NP (NNP Kronkite))))
    (. .)))

root(ROOT-0, Thanks-1)
det(flash-5, the-3)
nn(flash-5, news-4)
prep_for(Thanks-1, flash-5)
appos(flash-5, Kronkite-7)

(ROOT
  (S ('' '')
    (S
      (NP (PRP$ Your) (NNS dogs) (NN barking))
      (VP (VBP ARE)
        (NP
          (NP (DT a) (JJ great) (NN deal))
          (PP (IN of)
            (NP (NN protection))))))
    (, ,) (`` ``)
    (S
      (INTJ (UH No))
      (, ,)
      (NP (PRP they))
      (VP (VBP are) (RB not)))
    (. .)))

poss(barking-4, Your-2)
nn(barking-4, dogs-3)
nsubj(deal-8, barking-4)
cop(deal-8, ARE-5)
det(deal-8, a-6)
amod(deal-8, great-7)
root(ROOT-0, deal-8)
prep_of(deal-8, protection-10)
dep(are-16, No-13)
nsubj(are-16, they-15)
ccomp(deal-8, are-16)
neg(are-16, not-17)

