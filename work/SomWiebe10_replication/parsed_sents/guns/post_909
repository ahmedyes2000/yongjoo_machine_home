(ROOT
  (S
    (S
      (NP (NN everybody))
      (VP (VBZ is)
        (VP (VBG talking)
          (PP (IN about)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (DT the) (NN government))
                (VP (VBZ is)
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB take)
                          (PRT (RP over)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNS guns))
      (VP (MD will)
        (VP (VB be)
          (NP (DT the) (JJ only) (NN way)
            (S
              (VP (TO to)
                (VP (VB protect)
                  (NP (PRP ourselves)))))))))
    (. .)))

nsubj(talking-3, everybody-1)
aux(talking-3, is-2)
root(ROOT-0, talking-3)
advmod(going-9, how-5)
det(government-7, the-6)
nsubj(going-9, government-7)
xsubj(take-11, government-7)
aux(going-9, is-8)
prepc_about(talking-3, going-9)
aux(take-11, to-10)
xcomp(going-9, take-11)
prt(take-11, over-12)
nsubj(way-20, guns-15)
aux(way-20, will-16)
cop(way-20, be-17)
det(way-20, the-18)
amod(way-20, only-19)
conj_and(talking-3, way-20)
aux(protect-22, to-21)
infmod(way-20, protect-22)
dobj(protect-22, ourselves-23)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ sounds)
      (PP (IN like)
        (NP (DT some) (JJ bad) (NN movie) (NN premise))))
    (. .)))

nsubj(sounds-2, it-1)
root(ROOT-0, sounds-2)
det(premise-7, some-4)
amod(premise-7, bad-5)
nn(premise-7, movie-6)
prep_like(sounds-2, premise-7)

(ROOT
  (SBARQ
    (SBARQ
      (WHADVP (WRB how))
      (SQ (VBZ has)
        (NP (DT the) (NN government))
        (VP (VBN taken)
          (PRT (RP over))
          (ADVP (RB exactly)))))
    (, ,)
    (CC and)
    (SBARQ
      (WHNP (WP what))
      (SQ (VBZ is)
        (ADJP
          (ADJP (RB so) (JJ bad))
          (SBAR (IN if)
            (S
              (NP (PRP it))
              (VP (VBD did))))))
      (. ?))))

advmod(taken-5, how-1)
aux(taken-5, has-2)
det(government-4, the-3)
nsubj(taken-5, government-4)
nsubj(bad-13, government-4)
root(ROOT-0, taken-5)
prt(taken-5, over-6)
advmod(taken-5, exactly-7)
attr(bad-13, what-10)
cop(bad-13, is-11)
advmod(bad-13, so-12)
conj_and(taken-5, bad-13)
mark(did-16, if-14)
nsubj(did-16, it-15)
ccomp(bad-13, did-16)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP mean)
      (SBAR
        (S
          (VP (VBZ is) (RB n't)
            (NP
              (NP (DT a) (NN nation))
              (VP (VBN supposed)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN run)
                        (PP (IN by)
                          (NP (DT a) (NN government)))))))))))))
    (. ?)))

nsubj(mean-2, i-1)
root(ROOT-0, mean-2)
cop(nation-6, is-3)
neg(nation-6, n't-4)
det(nation-6, a-5)
ccomp(mean-2, nation-6)
xsubj(run-10, nation-6)
partmod(nation-6, supposed-7)
aux(run-10, to-8)
auxpass(run-10, be-9)
xcomp(supposed-7, run-10)
det(government-13, a-12)
agent(run-10, government-13)

(ROOT
  (S
    (S
      (SBAR (IN if)
        (S
          (NP (PRP we))
          (VP (VBD were)
            (PP (IN under)
              (NP
                (NP (DT the) (NN control))
                (PP (IN of)
                  (NP (DT a) (NN tyrant))))))))
      (, ,)
      (ADVP (RB then))
      (NP (FW i))
      (VP (MD could)
        (VP (VB understand))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBP live)
        (PP (IN in)
          (NP (DT a) (NN democracy)))))
    (. .)))

mark(were-3, if-1)
nsubj(were-3, we-2)
advcl(understand-14, were-3)
det(control-6, the-5)
prep_under(were-3, control-6)
det(tyrant-9, a-8)
prep_of(control-6, tyrant-9)
advmod(understand-14, then-11)
nsubj(understand-14, i-12)
aux(understand-14, could-13)
root(ROOT-0, understand-14)
nsubj(live-18, we-17)
conj_but(understand-14, live-18)
det(democracy-21, a-20)
prep_in(live-18, democracy-21)

(ROOT
  (S
    (NP (PRP we))
    (VP
      (VP (VBP choose)
        (NP (PRP$ our) (NNS leaders)))
      (, ,)
      (CC and)
      (VP (MD can)
        (VP (VB impeach)
          (NP (PRP them))
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (VBP do) (RB not)
                (VP (VB like)
                  (NP (PRP them)))))))))
    (. .)))

nsubj(choose-2, we-1)
nsubj(impeach-8, we-1)
root(ROOT-0, choose-2)
poss(leaders-4, our-3)
dobj(choose-2, leaders-4)
aux(impeach-8, can-7)
conj_and(choose-2, impeach-8)
dobj(impeach-8, them-9)
mark(like-14, if-10)
nsubj(like-14, we-11)
aux(like-14, do-12)
neg(like-14, not-13)
advcl(impeach-8, like-14)
dobj(like-14, them-15)

(ROOT
  (S
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT a) (JJ perfect) (NN system))
          (SBAR
            (S
              (NP (FW i))
              (VP (VBP know)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ ensures)
        (SBAR (IN that)
          (S
            (NP (DT no) (NN person))
            (VP (MD can)
              (VP (VB take)
                (NP
                  (NP (NN control))
                  (PP (IN of)
                    (NP (PRP$ our) (NN country))))))))))
    (. .)))

nsubj(system-6, it-1)
cop(system-6, is-2)
neg(system-6, not-3)
det(system-6, a-4)
amod(system-6, perfect-5)
root(ROOT-0, system-6)
dobj(know-8, system-6)
nsubj(know-8, i-7)
rcmod(system-6, know-8)
nsubj(ensures-12, it-11)
conj_but(system-6, ensures-12)
dobj(know-8, ensures-12)
complm(take-17, that-13)
det(person-15, no-14)
nsubj(take-17, person-15)
aux(take-17, can-16)
ccomp(ensures-12, take-17)
dobj(take-17, control-18)
poss(country-21, our-20)
prep_of(control-18, country-21)

(ROOT
  (S
    (SBAR (RB even) (IN if)
      (S
        (NP (NN somebody))
        (VP (VBD did))))
    (, ,)
    (NP (RB then))
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP you))
          (ADVP (RB really))
          (VP (VBP think)
            (SBAR
              (S
                (NP (DT a) (NN gun))
                (VP (VBZ is)
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (S
                            (NP (PRP you))
                            (VP (VBG saving)
                              (NP (NN grace)))))))))))))))
    (. ?)))

advmod(did-4, even-1)
dep(did-4, if-2)
nsubj(did-4, somebody-3)
advcl(do-7, did-4)
nsubj(do-7, then-6)
root(ROOT-0, do-7)
nsubj(think-10, you-8)
advmod(think-10, really-9)
ccomp(do-7, think-10)
det(gun-12, a-11)
nsubj(going-14, gun-12)
xsubj(be-16, gun-12)
aux(going-14, is-13)
ccomp(think-10, going-14)
aux(be-16, to-15)
xcomp(going-14, be-16)
nsubj(saving-18, you-17)
dep(be-16, saving-18)
dobj(saving-18, grace-19)

(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (EX there))
        (VP (VBD was)
          (ADVP (DT a) (RB so))
          (VP (VBN called)
            (S
              (ADJP (JJ tyrant)))))))
    (, ,) (RB then)
    (NP (PRP he))
    (ADVP (RB probably))
    (VP
      (VP (VBZ has)
        (VP (VBN taken)
          (PP (IN over)
            (NP (DT the) (NN militia)))))
      (, ,)
      (CC and)
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP think)
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (MD would)
                    (VP (VB win)
                      (PP (IN against)
                        (NP
                          (NP (DT a) (VBN trained) (NN solider))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (ADVP (RB probably))
                              (VP (VBZ has)
                                (NP (JJR better) (NNS weapons))))))))))))))))
    (. .)))

mark(called-6, if-1)
expl(called-6, there-2)
auxpass(called-6, was-3)
dep(so-5, a-4)
advmod(called-6, so-5)
advcl(taken-13, called-6)
acomp(called-6, tyrant-7)
advmod(taken-13, then-9)
nsubj(taken-13, he-10)
nsubj(do-19, he-10)
advmod(taken-13, probably-11)
aux(taken-13, has-12)
root(ROOT-0, taken-13)
det(militia-16, the-15)
prep_over(taken-13, militia-16)
conj_and(taken-13, do-19)
nsubj(think-21, you-20)
ccomp(do-19, think-21)
complm(win-25, that-22)
nsubj(win-25, you-23)
aux(win-25, would-24)
ccomp(think-21, win-25)
det(solider-29, a-27)
amod(solider-29, trained-28)
prep_against(win-25, solider-29)
nsubj(has-32, solider-29)
advmod(has-32, probably-31)
rcmod(solider-29, has-32)
amod(weapons-34, better-33)
dobj(has-32, weapons-34)

