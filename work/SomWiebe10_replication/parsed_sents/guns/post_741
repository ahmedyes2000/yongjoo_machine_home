(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ tough) (NN decision))
          (PP (IN for)
            (NP (PRP me))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR
                  (S
                    (NP (NNS students))
                    (VP (MD should) (RB not)
                      (VP (VB be)
                        (VP (VBN allowed)
                          (S
                            (VP (TO to)
                              (VP (VB carry)
                                (NP (JJ concealed) (NNS firearms))
                                (PP (IN on)
                                  (NP (NN campus)))))))))))))))))
    (. .)))

nsubj(decision-5, This-1)
cop(decision-5, is-2)
det(decision-5, a-3)
amod(decision-5, tough-4)
root(ROOT-0, decision-5)
prep_for(decision-5, me-7)
nsubj(have-12, I-10)
xsubj(say-14, I-10)
aux(have-12, would-11)
conj_but(decision-5, have-12)
aux(say-14, to-13)
xcomp(have-12, say-14)
nsubjpass(allowed-19, students-15)
aux(allowed-19, should-16)
neg(allowed-19, not-17)
auxpass(allowed-19, be-18)
ccomp(say-14, allowed-19)
aux(carry-21, to-20)
xcomp(allowed-19, carry-21)
amod(firearms-23, concealed-22)
dobj(carry-21, firearms-23)
prep_on(carry-21, campus-25)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP me))
        (VP (VB qualify)
          (NP (DT that))
          (PP (IN by)
            (S
              (VP (VBG saying)
                (S
                  (NP (PRP I))
                  (ADVP (RB strongly))
                  (VP (VB support)
                    (S
                      (NP
                        (NP (DT the) (NNP Second) (NNP Amendment))
                        (CC and)
                        (NP (DT the) (NN right)))
                      (VP (TO to)
                        (VP (VB bear)
                          (NP (NNS arms)))))))))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(qualify-3, me-2)
ccomp(Let-1, qualify-3)
dobj(qualify-3, that-4)
prepc_by(qualify-3, saying-6)
nsubj(support-9, I-7)
advmod(support-9, strongly-8)
ccomp(saying-6, support-9)
det(Amendment-12, the-10)
nn(Amendment-12, Second-11)
nsubj(bear-17, Amendment-12)
det(right-15, the-14)
conj_and(Amendment-12, right-15)
nsubj(bear-17, right-15)
aux(bear-17, to-16)
xcomp(support-9, bear-17)
dobj(bear-17, arms-18)

(ROOT
  (S (RB Then)
    (NP (PRP you))
    (VP (VBP have)
      (NP
        (NP (DT the) (NN issue))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBG possessing)
              (SBAR
                (S
                  (NP (DT a) (NN weapon))
                  (VP (MD might)
                    (ADVP (RB actually))
                    (VP (VB turn)
                      (NP (NN someone))
                      (PP (IN into)
                        (NP (DT a) (NN target))))))))))))
    (. .)))

advmod(have-3, Then-1)
nsubj(have-3, you-2)
root(ROOT-0, have-3)
det(issue-5, the-4)
dobj(have-3, issue-5)
nsubj(possessing-7, issue-5)
rcmod(issue-5, possessing-7)
det(weapon-9, a-8)
nsubj(turn-12, weapon-9)
aux(turn-12, might-10)
advmod(turn-12, actually-11)
ccomp(possessing-7, turn-12)
dobj(turn-12, someone-13)
det(target-16, a-15)
prep_into(turn-12, target-16)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (S
          (NP (DT that) (NN weapon))
          (VP (MD might)
            (VP (VB make)
              (NP (NN someone)))))))
    (VP (VBP feel)
      (ADJP (JJ invincible)
        (CC and)
        (JJ heroic)))
    (. .)))

csubj(feel-7, Having-1)
det(weapon-3, that-2)
nsubj(make-5, weapon-3)
aux(make-5, might-4)
ccomp(Having-1, make-5)
dobj(make-5, someone-6)
root(ROOT-0, feel-7)
acomp(feel-7, invincible-8)
acomp(feel-7, heroic-10)
conj_and(invincible-8, heroic-10)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD may)
      (VP (VB stand)
        (NP (PRP$ their) (NN ground))
        (PP (IN in)
          (NP
            (NP (NNS hopes))
            (PP (IN of) (`` ``)
              (S
                (VP
                  (VP (VBG saving)
                    (NP (DT the) (NN day))
                    (, ,) ('' ''))
                  (CONJP (RB instead) (IN of))
                  (VP (VBG retreating)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (S
                          (VP (VBG doing)
                            (ADVP (RB so))))
                        (VP (MD might)
                          (VP (VB make)
                            (NP (JJR more) (NN sense))))))))))))))
    (. .)))

nsubj(stand-3, They-1)
aux(stand-3, may-2)
root(ROOT-0, stand-3)
poss(ground-5, their-4)
dobj(stand-3, ground-5)
prep_in(stand-3, hopes-7)
prep(hopes-7, of-8)
dep(of-8, saving-10)
det(day-12, the-11)
tmod(saving-10, day-12)
dep(of-8, retreating-17)
conj_negcc(saving-10, retreating-17)
advmod(make-22, when-18)
csubj(make-22, doing-19)
advmod(doing-19, so-20)
aux(make-22, might-21)
advcl(retreating-17, make-22)
amod(sense-24, more-23)
dobj(make-22, sense-24)

(ROOT
  (S
    (NP (DT this))
    (ADVP (RB definitely))
    (VP (VBZ increases)
      (NP
        (NP (DT the) (NN likelihood))
        (PP (IN of)
          (NP
            (NP (DT the) (NN attacker))
            (VP (VBG focusing)
              (PP (IN on)
                (NP (DT the) (NN individual)))
              (S
                (VP
                  (VP (VBG pointing)
                    (NP (DT a) (NN weapon))
                    (PP (IN at)
                      (NP (NN him\/her))))
                  (, ,)
                  (CC and)
                  (VP (VBG killing)
                    (NP (PRP them))))))))))
    (. .)))

nsubj(increases-3, this-1)
advmod(increases-3, definitely-2)
root(ROOT-0, increases-3)
det(likelihood-5, the-4)
dobj(increases-3, likelihood-5)
det(attacker-8, the-7)
prep_of(likelihood-5, attacker-8)
partmod(attacker-8, focusing-9)
det(individual-12, the-11)
prep_on(focusing-9, individual-12)
ccomp(focusing-9, pointing-13)
det(weapon-15, a-14)
dobj(pointing-13, weapon-15)
prep_at(pointing-13, him\/her-17)
ccomp(focusing-9, killing-20)
conj_and(pointing-13, killing-20)
dobj(killing-20, them-21)

(ROOT
  (S
    (ADVP (RB Probably))
    (NP
      (NP (DT the) (JJS worst) (NN thing))
      (PP (IN about)
        (S
          (VP (VBG allowing)
            (NP (JJ concealed) (NNS weapons))
            (PP (IN on)
              (NP (NN campus)))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP (DT a) (JJ double-edged) (NN sword))))))
    (. .)))

advmod(is-11, Probably-1)
det(thing-4, the-2)
amod(thing-4, worst-3)
nsubj(is-11, thing-4)
prepc_about(thing-4, allowing-6)
amod(weapons-8, concealed-7)
dobj(allowing-6, weapons-8)
prep_on(allowing-6, campus-10)
root(ROOT-0, is-11)
complm(sword-17, that-12)
nsubj(sword-17, it-13)
cop(sword-17, is-14)
det(sword-17, a-15)
amod(sword-17, double-edged-16)
ccomp(is-11, sword-17)

(ROOT
  (S
    (SBAR (RB Just)
      (S
        (PP (IN like)
          (NP (NN someone)))
        (VP (MD can)
          (VP (VB carry)
            (PP (IN for)
              (NP (NN defense)))))))
    (, ,)
    (NP (NN someone) (RB else))
    (VP (MD can)
      (VP (VB carry)
        (PP (IN for)
          (NP (JJ offensive) (NNS purposes)))))
    (. !)))

advmod(carry-5, Just-1)
prep_like(carry-5, someone-3)
aux(carry-5, can-4)
dep(carry-12, carry-5)
prep_for(carry-5, defense-7)
nsubj(carry-12, someone-9)
advmod(someone-9, else-10)
aux(carry-12, can-11)
root(ROOT-0, carry-12)
amod(purposes-15, offensive-14)
prep_for(carry-12, purposes-15)

(ROOT
  (S
    (NP (JJ Concealed) (NN carry))
    (VP (MD could)
      (ADVP (RB actually))
      (VP (VB make)
        (S
          (NP (PRP it))
          (ADJP (RBR easier))
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (DT a) (NN weapon))
                (PP (IN on)
                  (NP (NN campus)))
                (SBAR (IN in) (NN order)
                  (S
                    (VP (TO to)
                      (VP (VB carry)
                        (PRT (RP out))
                        (NP (DT a) (NN massacre))))))))))))
    (. .)))

amod(carry-2, Concealed-1)
nsubj(make-5, carry-2)
aux(make-5, could-3)
advmod(make-5, actually-4)
root(ROOT-0, make-5)
nsubj(get-9, it-6)
dep(get-9, easier-7)
aux(get-9, to-8)
xcomp(make-5, get-9)
det(weapon-11, a-10)
dobj(get-9, weapon-11)
prep_on(get-9, campus-13)
mark(carry-17, in-14)
dep(carry-17, order-15)
aux(carry-17, to-16)
purpcl(get-9, carry-17)
prt(carry-17, out-18)
det(massacre-20, a-19)
dobj(carry-17, massacre-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP guess)
        (SBAR
          (S
            (NP
              (NP (DT the) (JJ only) (NN thing))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ concerns)
                    (NP (PRP me))
                    (PP (IN about)
                      (NP
                        (NP (DT this) (NN line))
                        (PP (IN of)
                          (NP (NN reasoning)))))))))
            (VP (VBZ is)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ is) (RB n't)
                    (ADJP (RB too) (JJ hard)
                      (S
                        (VP (TO to)
                          (VP (VB sneak)
                            (NP (DT a) (NN weapon))
                            (PP (IN on)
                              (PP (TO to)
                                (NP (JJS most) (NN college) (NNS campuses))))
                            (S
                              (VP (TO to)
                                (VP (VB begin)
                                  (PP (IN with)))))))))))))))))
    (: ...)
    (S
      (ADVP (RB still))
      (, ,)
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (S
              (VP (VBG allowing)
                (S
                  (NP (NNP concealed))
                  (VP (VB carry)
                    (PP (IN on)
                      (NP (NN college) (NNS campuses)))))))
            (VP (VBZ is)
              (NP (DT a) (JJ bad) (NN idea)))))))
    (. .)))

nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
det(thing-5, the-3)
amod(thing-5, only-4)
nsubj(concerns-7, thing-5)
nsubj(is-14, thing-5)
rcmod(thing-5, concerns-7)
dobj(concerns-7, me-8)
det(line-11, this-10)
prep_about(concerns-7, line-11)
prep_of(line-11, reasoning-13)
ccomp(guess-2, is-14)
complm(hard-20, that-15)
nsubj(hard-20, it-16)
cop(hard-20, is-17)
neg(hard-20, n't-18)
advmod(hard-20, too-19)
ccomp(is-14, hard-20)
aux(sneak-22, to-21)
xcomp(hard-20, sneak-22)
det(weapon-24, a-23)
dobj(sneak-22, weapon-24)
prep(sneak-22, on-25)
pcomp(on-25, to-26)
amod(campuses-29, most-27)
nn(campuses-29, college-28)
prep_to(on-25, campuses-29)
aux(begin-31, to-30)
xcomp(sneak-22, begin-31)
prep(begin-31, with-32)
advmod(think-37, still-34)
nsubj(think-37, I-36)
parataxis(guess-2, think-37)
csubj(idea-47, allowing-38)
nsubj(carry-40, concealed-39)
ccomp(allowing-38, carry-40)
nn(campuses-43, college-42)
prep_on(carry-40, campuses-43)
cop(idea-47, is-44)
det(idea-47, a-45)
amod(idea-47, bad-46)
ccomp(think-37, idea-47)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN case)))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (ADJP (RB too) (JJ many)
        (SBAR
          (S
            (NP (JJ potential) (NNS problems))
            (VP (TO to)
              (VP (VB warrant)
                (NP
                  (NP (PDT such) (DT a) (NN policy))
                  (VP (VBG being)
                    (VP (VBN enacted))))))))))
    (. .)))

det(case-3, this-2)
prep_in(are-8, case-3)
advmod(are-8, however-5)
expl(are-8, there-7)
root(ROOT-0, are-8)
advmod(many-10, too-9)
acomp(are-8, many-10)
amod(problems-12, potential-11)
nsubj(warrant-14, problems-12)
aux(warrant-14, to-13)
dep(many-10, warrant-14)
predet(policy-17, such-15)
det(policy-17, a-16)
dobj(warrant-14, policy-17)
auxpass(enacted-19, being-18)
partmod(policy-17, enacted-19)

(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (NP (JJS most) (NNS people))
    (ADVP (RB simply))
    (VP (VBP lack)
      (NP (DT the) (JJ proper) (NN training)
        (S
          (VP (TO to)
            (VP (VB carry)
              (NP (NNS weapons)))))))
    (. .)))

advmod(lack-6, First-1)
amod(people-4, most-3)
nsubj(lack-6, people-4)
advmod(lack-6, simply-5)
root(ROOT-0, lack-6)
det(training-9, the-7)
amod(training-9, proper-8)
dobj(lack-6, training-9)
aux(carry-11, to-10)
infmod(training-9, carry-11)
dobj(carry-11, weapons-12)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD would)
        (ADVP (RB inevitably))
        (VP (VB be)
          (NP
            (NP (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (MD would)
                  (VP (VB show)
                    (PRT (RP off))
                    (NP (PRP$ their) (JJ shiny) (JJ new) (NNS pistols))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN someone))
      (VP (MD would)
        (VP (VB get)
          (VP (VBN hurt)))))
    (. .)))

expl(people-5, There-1)
aux(people-5, would-2)
advmod(people-5, inevitably-3)
cop(people-5, be-4)
root(ROOT-0, people-5)
nsubj(show-8, people-5)
aux(show-8, would-7)
rcmod(people-5, show-8)
prt(show-8, off-9)
poss(pistols-13, their-10)
amod(pistols-13, shiny-11)
amod(pistols-13, new-12)
dobj(show-8, pistols-13)
nsubjpass(hurt-19, someone-16)
aux(hurt-19, would-17)
auxpass(hurt-19, get-18)
conj_and(people-5, hurt-19)
nsubj(show-8, hurt-19)

(ROOT
  (S
    (ADVP (RB Then))
    (, ,)
    (NP (RB not) (JJ many) (NNS people))
    (VP (VBP are)
      (NP (NN expert) (NN marksmen)))
    (. .)))

advmod(marksmen-8, Then-1)
neg(people-5, not-3)
amod(people-5, many-4)
nsubj(marksmen-8, people-5)
cop(marksmen-8, are-6)
nn(marksmen-8, expert-7)
root(ROOT-0, marksmen-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN firefight))
        (VP (VBD ensued))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB wager)
        (SBAR (IN that)
          (S
            (NP (DT some) (NN individual))
            (VP (MD would)
              (VP
                (VP (`` ``) (VB go)
                  (NP (NNP Rambo))
                  ('' ''))
                (CC and)
                (VP (VB start)
                  (NP (JJ shooting) (NN everything))
                  (PP (IN in)
                    (NP (NN sight))))))))))
    (. .)))

mark(ensued-4, If-1)
det(firefight-3, a-2)
nsubj(ensued-4, firefight-3)
advcl(wager-8, ensued-4)
nsubj(wager-8, I-6)
aux(wager-8, 'd-7)
root(ROOT-0, wager-8)
complm(go-14, that-9)
det(individual-11, some-10)
nsubj(go-14, individual-11)
nsubj(start-18, individual-11)
aux(go-14, would-12)
ccomp(wager-8, go-14)
dobj(go-14, Rambo-15)
ccomp(wager-8, start-18)
conj_and(go-14, start-18)
amod(everything-20, shooting-19)
dobj(start-18, everything-20)
prep_in(start-18, sight-22)

(ROOT
  (S
    (NP
      (NP
        (FRAG (IN If) (RB not)
          (NP (DT that))
          (, ,) (RB then)
          (NP (DT the) (NN stress))))
      (PP (IN of)
        (S
          (VP (VBG being)
            (VP (VBN shot)
              (PP (IN at)))))))
    (VP (MD would)
      (VP (VB relegate)
        (NP
          (NP (JJS most) (NNS people) (POS 's))
          (NN training))
        (PP (TO to)
          (NP (DT the) (NN scrapheap)))
        (, ,)
        (S
          (VP (VBG making)
            (S
              (NP (PRP them))
              (ADJP (JJ dangerous)))))))
    (. .)))

nsubj(relegate-13, If-1)
neg(If-1, not-2)
dep(If-1, that-3)
dep(If-1, then-5)
det(stress-7, the-6)
dep(If-1, stress-7)
auxpass(shot-10, being-9)
prepc_of(If-1, shot-10)
prep(shot-10, at-11)
aux(relegate-13, would-12)
root(ROOT-0, relegate-13)
amod(people-15, most-14)
poss(training-17, people-15)
dobj(relegate-13, training-17)
det(scrapheap-20, the-19)
prep_to(relegate-13, scrapheap-20)
partmod(relegate-13, making-22)
xcomp(relegate-13, making-22)
nsubj(dangerous-24, them-23)
xcomp(making-22, dangerous-24)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (NN firefight)))
    (, ,)
    (NP (PRP one))
    (VP (MD must)
      (VP (VB make)
        (NP (DT a) (JJ split-second) (NN decision))
        (S
          (VP (TO to)
            (VP (VB acquire)
              (CC and)
              (VB fire))))))
    (. .)))

det(firefight-3, a-2)
prep_in(make-7, firefight-3)
nsubj(make-7, one-5)
aux(make-7, must-6)
root(ROOT-0, make-7)
det(decision-10, a-8)
amod(decision-10, split-second-9)
dobj(make-7, decision-10)
aux(acquire-12, to-11)
xcomp(make-7, acquire-12)
xcomp(make-7, fire-14)
conj_and(acquire-12, fire-14)

(ROOT
  (S
    (NP (DT The) (NN stress))
    (VP (MD might)
      (VP (VB cause)
        (S
          (NP (NNS people))
          (VP (TO to)
            (VP (VB shoot)
              (NP (DT the) (JJ wrong) (NN person)))))))
    (. .)))

det(stress-2, The-1)
nsubj(cause-4, stress-2)
aux(cause-4, might-3)
root(ROOT-0, cause-4)
nsubj(shoot-7, people-5)
aux(shoot-7, to-6)
xcomp(cause-4, shoot-7)
det(person-10, the-8)
amod(person-10, wrong-9)
dobj(shoot-7, person-10)

