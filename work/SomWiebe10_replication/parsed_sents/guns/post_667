(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT NO) (JJ comparable) (NN Country)))
    (. .) (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(Country-5, NO-3)
amod(Country-5, comparable-4)
nsubj(is-2, Country-5)

(ROOT
  (S
    (NP (DT The) (NNP USA))
    (VP (VBZ is)
      (ADJP (JJ unique)
        (PP (TO to)
          (NP
            (NP (PRP it) (POS 's))
            (JJ own) (NN LAW)))))
    (: ...)))

det(USA-2, The-1)
nsubj(unique-4, USA-2)
cop(unique-4, is-3)
root(ROOT-0, unique-4)
poss(LAW-9, it-6)
amod(LAW-9, own-8)
prep_to(unique-4, LAW-9)

(ROOT
  (S
    (VP (VBG Cut)
      (NP (PRP it))
      (PRT (RP out)))
    (: ...)))

root(ROOT-0, Cut-1)
dobj(Cut-1, it-2)
prt(Cut-1, out-3)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP are)
      (NP (PRP we))
      (VP (VBN independant)
        (PP (IN from) (IN if)
          (NP
            (NP (RB not) (DT the) (NN rest))
            (PP (IN of)
              (NP (DT the) (NNPS Worlds) ('' '') (NN thinking))
              (: ...))))))))

dobj(independant-4, What-1)
auxpass(independant-4, are-2)
nsubjpass(independant-4, we-3)
root(ROOT-0, independant-4)
dep(independant-4, from-5)
neg(rest-9, not-7)
det(rest-9, the-8)
prep_if(independant-4, rest-9)
det(thinking-14, the-11)
nn(thinking-14, Worlds-12)
prep_of(rest-9, thinking-14)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD built)
              (NP (DT a) (NN Country)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP
                        (NP (DT the) (NN envy))
                        (PP (IN of)
                          (NP (DT the) (NN Nation)))
                        (, ,)
                        (NP
                          (NP (DT those))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (NP (DT all))
                              (VP (VBP want)
                                (NP
                                  (NP (DT a) (NN piece))
                                  (PP (IN of)
                                    (NP (DT the) (NN pie))))))))
                        (: ...)))))))))))))

attr(is-2, Who-1)
root(ROOT-0, is-2)
nsubj(is-2, it-3)
nsubj(built-5, it-3)
rcmod(it-3, built-5)
det(Country-7, a-6)
dobj(built-5, Country-7)
aux(envy-11, to-8)
cop(envy-11, be-9)
det(envy-11, the-10)
infmod(Country-7, envy-11)
det(Nation-14, the-13)
prep_of(envy-11, Nation-14)
appos(envy-11, those-16)
dobj(want-19, those-16)
rel(want-19, who-17)
nsubj(want-19, all-18)
rcmod(those-16, want-19)
det(piece-21, a-20)
dobj(want-19, piece-21)
det(pie-24, the-23)
prep_of(piece-21, pie-24)

(ROOT
  (NP (JJ American) (NN pie) (: ...)))

amod(pie-2, American-1)
root(ROOT-0, pie-2)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (VP (VBN been)
        (NP
          (NP (DT the) (NN Country))
          (SBAR
            (WHNP (WP who))
            (S
              (ADVP (RB now))
              (VP (VBZ has)
                (S
                  (VP (TO to)
                    (VP (VB spread)
                      (NP (DT the) (NN wealth)))))))))))
    (. .) (. .)))

nsubj(Country-5, We-1)
aux(Country-5, have-2)
cop(Country-5, been-3)
det(Country-5, the-4)
root(ROOT-0, Country-5)
nsubj(has-8, Country-5)
advmod(has-8, now-7)
rcmod(Country-5, has-8)
aux(spread-10, to-9)
xcomp(has-8, spread-10)
det(wealth-12, the-11)
dobj(spread-10, wealth-12)

(ROOT
  (S
    (NP (NNP Wher))
    (VP (VBP are)
      (NP
        (NP (DT the) (NN rest))
        (PP (IN of)
          (NP
            (NP (PRP you))
            (CC &)
            (NP (PRP$ your) (NN wealth) (NN ??))))))))

nsubj(rest-4, Wher-1)
cop(rest-4, are-2)
det(rest-4, the-3)
root(ROOT-0, rest-4)
prep_of(rest-4, you-6)
poss(??-10, your-8)
nn(??-10, wealth-9)
prep_of(rest-4, ??-10)
conj_and(you-6, ??-10)

(ROOT
  (S
    (VP (VBG Pass)
      (NP (DT some) (PRP$ our) (NN way)))
    (: ...)))

root(ROOT-0, Pass-1)
det(way-4, some-2)
predet(way-4, some-2)
poss(way-4, our-3)
dobj(Pass-1, way-4)

(ROOT
  (S
    (NP (DT The) (NNP World))
    (VP (VBD used)
      (S
        (NP (DT the) (NNP USA))
        (VP (TO to)
          (VP (VB handle)
            (NP (PRP$ their) (NNS problems))))))
    (: ...)))

det(World-2, The-1)
nsubj(used-3, World-2)
root(ROOT-0, used-3)
det(USA-5, the-4)
nsubj(handle-7, USA-5)
aux(handle-7, to-6)
xcomp(used-3, handle-7)
poss(problems-9, their-8)
dobj(handle-7, problems-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP give)
        (SBAR
          (S
            (NP (CC &))
            (VP (VBP give))))))
    (, ,)
    (CC yet)
    (S
      (NP (PRP you))
      (VP (VBP want)
        (NP (PRP$ my) (NN gun))))
    (. ...)))

nsubj(give-2, I-1)
root(ROOT-0, give-2)
nsubj(give-4, &-3)
ccomp(give-2, give-4)
nsubj(want-8, you-7)
conj_yet(give-2, want-8)
poss(gun-10, my-9)
dobj(want-8, gun-10)

