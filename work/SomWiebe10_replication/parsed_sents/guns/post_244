(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (NNP T))
    (-RRB- -RRB-)
    (NP (VBG his))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ happens)
            (ADVP
              (ADVP (RBR more) (RB often))
              (PP (IN than) (RB not)))))))
    (. .)))

nsubj(is-6, T-3)
nsubj(is-6, his-5)
root(ROOT-0, is-6)
nsubj(happens-8, what-7)
ccomp(is-6, happens-8)
advmod(often-10, more-9)
advmod(happens-8, often-10)
prep(often-10, than-11)
neg(than-11, not-12)

(ROOT
  (S ('' '')
    (NP (NNP Can) (PRP you))
    (VP (VBP provide)
      (NP
        (NP (NN proof))
        (PP (IN of)
          (NP (DT this)))))
    (. ?)))

nsubj(provide-4, Can-2)
dep(Can-2, you-3)
root(ROOT-0, provide-4)
dobj(provide-4, proof-5)
prep_of(proof-5, this-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD 'll)
            (VP (VB keep)
              (NP (PRP$ my)
                (ADJP (RB perfectly) (JJ legal))
                (NNS guns)))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(keep-5, I-3)
aux(keep-5, 'll-4)
ccomp(think-2, keep-5)
poss(guns-9, my-6)
advmod(legal-8, perfectly-7)
amod(guns-9, legal-8)
dobj(keep-5, guns-9)

(ROOT
  (S
    (NP
      (NP (DT This))
      (`` ``)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (RBR more) (JJ likely)
            (S
              (VP (TO to)
                (VP (VB kill)
                  (NP (DT a) (NN loved) (NN one))
                  (PP (IN than)
                    (NP (DT a) (NN burglar)))))))))
      ('' ''))
    (ADVP (RB myth))
    (VP (VBZ is)
      (NP (NN nonsense)))
    (. .)))

nsubj(nonsense-18, This-1)
nsubj(likely-6, you-3)
cop(likely-6, are-4)
advmod(likely-6, more-5)
dep(This-1, likely-6)
aux(kill-8, to-7)
xcomp(likely-6, kill-8)
det(one-11, a-9)
nn(one-11, loved-10)
dobj(kill-8, one-11)
det(burglar-14, a-13)
prep_than(kill-8, burglar-14)
advmod(nonsense-18, myth-16)
cop(nonsense-18, is-17)
root(ROOT-0, nonsense-18)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are) (RB n't)
      (ADJP (RB nearly) (RB enough) (JJ accidental)
        (SBAR
          (S
            (NP
              (NP (NNS shootings))
              (PP (IN in)
                (NP (DT this) (NN country))))
            (VP (TO to)
              (VP (VB support)
                (NP (DT that) (NN statistic))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
neg(are-2, n't-3)
advmod(accidental-6, nearly-4)
advmod(accidental-6, enough-5)
acomp(are-2, accidental-6)
nsubj(support-12, shootings-7)
det(country-10, this-9)
prep_in(shootings-7, country-10)
aux(support-12, to-11)
dep(accidental-6, support-12)
det(statistic-14, that-13)
dobj(support-12, statistic-14)

(ROOT
  (S (CC And)
    (PP (VBN given)
      (NP
        (NP (DT the) (JJ absurd) (NN support))
        (SBAR
          (S
            (NP (NN alarm) (NNS companies))
            (VP (VBP give)
              (PP (TO to)
                (NP (PRP$ their) (NN equipment))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD 'll)
            (VP (VB pass))))))
    (. .)))

cc(think-14, And-1)
prep(think-14, given-2)
det(support-5, the-3)
amod(support-5, absurd-4)
dep(given-2, support-5)
dobj(give-8, support-5)
nn(companies-7, alarm-6)
nsubj(give-8, companies-7)
rcmod(support-5, give-8)
poss(equipment-11, their-10)
prep_to(give-8, equipment-11)
nsubj(think-14, I-13)
root(ROOT-0, think-14)
nsubj(pass-17, I-15)
aux(pass-17, 'll-16)
ccomp(think-14, pass-17)

(ROOT
  (S (CC But)
    (VP (VBP do) (RB n't)
      (VP (VB take)
        (NP (PRP$ my) (NN word))
        (PP (IN for)
          (NP (PRP it)))))
    (. .)))

cc(take-4, But-1)
aux(take-4, do-2)
neg(take-4, n't-3)
root(ROOT-0, take-4)
poss(word-6, my-5)
dobj(take-4, word-6)
prep_for(take-4, it-8)

(ROOT
  (S
    (VP
      (VP (VB Call)
        (NP (DT the) (NN alarm) (NN company)))
      (CC and)
      (VP (VB ask)
        (NP (PRP them))
        (SBAR
          (WHADVP (WRB how) (RB long))
          (S
            (NP (PRP they))
            (VP (VBZ warranty)
              (NP (PRP$ their) (NN equipment))
              (PRN (-LRB- -LRB-)
                (NP
                  (NP (CD 3) (NNS months))
                  (PP (IN for)
                    (NP (DT the) (JJ big) (CD three)))
                  (ADJP (JJ lettered)
                    (NP (CD one))))
                (-RRB- -RRB-)))))))
    (. .)))

root(ROOT-0, Call-1)
det(company-4, the-2)
nn(company-4, alarm-3)
dobj(Call-1, company-4)
conj_and(Call-1, ask-6)
dobj(ask-6, them-7)
advmod(long-9, how-8)
advmod(warranty-11, long-9)
nsubj(warranty-11, they-10)
dep(ask-6, warranty-11)
poss(equipment-13, their-12)
dobj(warranty-11, equipment-13)
num(months-16, 3-15)
dep(warranty-11, months-16)
det(three-20, the-18)
amod(three-20, big-19)
prep_for(months-16, three-20)
amod(months-16, lettered-21)
dep(lettered-21, one-22)

(ROOT
  (S
    (PP (IN After)
      (NP (DT that)))
    (, ,)
    (VP (VB ask)
      (NP (PRP them))
      (SBAR
        (WHNP (WP$ whose) (NN responsibility))
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (S
              (VP (TO to)
                (VP (VB fix)
                  (NP (PRP it)))))))))
    (. ?)))

prep_after(ask-4, that-2)
root(ROOT-0, ask-4)
dobj(ask-4, them-5)
poss(responsibility-7, whose-6)
dep(is-9, responsibility-7)
nsubj(is-9, it-8)
xsubj(fix-11, it-8)
dep(ask-4, is-9)
aux(fix-11, to-10)
xcomp(is-9, fix-11)
dobj(fix-11, it-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ yours))
      (, ,)
      (PP (IN by)
        (NP (DT the) (NN way))))
    (. .)))

nsubj(yours-3, It-1)
cop(yours-3, 's-2)
root(ROOT-0, yours-3)
det(way-7, the-6)
prep_by(yours-3, way-7)

(ROOT
  (S (CC And)
    (PP (RB as) (IN for)
      (NP (DT a) (NN dog)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (ADJP (RB so) (JJ vicious)
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (MD 'll)
                  (VP (VB attack)
                    (NP (DT a) (NN burglar))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (S
          (NP (PRP I))
          (VP (VB want)
            (NP (PRP them))
            (PP (IN near)
              (NP (PRP$ my) (NNS kids)))))))
    (. .)))

cc(think-22, And-1)
det(dog-5, a-4)
prep_as_for(think-22, dog-5)
mark(vicious-11, if-7)
nsubj(vicious-11, they-8)
cop(vicious-11, 're-9)
advmod(vicious-11, so-10)
advcl(think-22, vicious-11)
complm(attack-15, that-12)
nsubj(attack-15, they-13)
aux(attack-15, 'll-14)
ccomp(vicious-11, attack-15)
det(burglar-17, a-16)
dobj(attack-15, burglar-17)
nsubj(think-22, I-19)
aux(think-22, do-20)
neg(think-22, n't-21)
root(ROOT-0, think-22)
nsubj(want-24, I-23)
ccomp(think-22, want-24)
dobj(want-24, them-25)
poss(kids-28, my-27)
prep_near(want-24, kids-28)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (MD 'd)
      (ADVP (RB rather))
      (RB not)
      (VP (VB pay)
        (NP
          (NP
            (NP (DT the) (NNS thousands))
            (PP (IN of)
              (NP (NNS dollars))))
          (CC and)
          (NP
            (NP (DT the) (NNS years))
            (PP (IN of)
              (NP (NN training)))))
        (S
          (VP (TO to)
            (VP (VB get)
              (NP
                (NP (DT a) (NN dog))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (ADJP (RB properly) (JJ trained)))))))))))
    (. .)))

cc(pay-6, And-1)
nsubj(pay-6, I-2)
aux(pay-6, 'd-3)
advmod(pay-6, rather-4)
neg(pay-6, not-5)
root(ROOT-0, pay-6)
det(thousands-8, the-7)
dobj(pay-6, thousands-8)
prep_of(thousands-8, dollars-10)
det(years-13, the-12)
dobj(pay-6, years-13)
conj_and(thousands-8, years-13)
prep_of(years-13, training-15)
aux(get-17, to-16)
xcomp(pay-6, get-17)
det(dog-19, a-18)
dobj(get-17, dog-19)
nsubj(trained-23, dog-19)
cop(trained-23, is-21)
advmod(trained-23, properly-22)
rcmod(dog-19, trained-23)

