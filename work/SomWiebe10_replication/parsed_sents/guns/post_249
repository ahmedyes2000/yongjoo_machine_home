(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (ADVP (RB even))
      (VP (VB know)
        (SBAR
          (WHNP
            (WHADJP (WRB how) (JJ many))
            (NNS guns))
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBN ???)))))))))

nsubj(know-5, You-1)
aux(know-5, do-2)
neg(know-5, n't-3)
advmod(know-5, even-4)
root(ROOT-0, know-5)
advmod(many-7, how-6)
amod(guns-8, many-7)
dobj(???-11, guns-8)
nsubj(???-11, you-9)
aux(???-11, have-10)
ccomp(know-5, ???-11)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are) (RB not)
        (NP (DT a) (NN gun) (NN nut))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (ADVP (RB just))
      (NP (DT a) (NN nut)))
    (. .)))

nsubj(nut-6, You-1)
cop(nut-6, are-2)
neg(nut-6, not-3)
det(nut-6, a-4)
nn(nut-6, gun-5)
ccomp(nut-12, nut-6)
nsubj(nut-12, you-8)
cop(nut-12, 're-9)
advmod(nut-12, just-10)
det(nut-12, a-11)
root(ROOT-0, nut-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (NP
        (NP (DT the) (NN kind))
        (PP (IN of)
          (NP (NN person)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD will)
              (VP (VB have)
                (S
                  (NP (DT the) (NN neighborhood) (NNS kids))
                  (VP
                    (VP (VB break)
                      (PRT (RP in)))
                    (, ,)
                    (VP (VB steal)
                      (NP (DT some) (NNS guns)))
                    (, ,)
                    (VP
                      (ADVP (RB then))
                      (VB go)
                      (S
                        (VP (VB shoot)
                          (PRT (RP up))
                          (NP (DT an) (JJ entire) (NN school)))))))))))))
    (. .)))

nsubj(kind-4, You-1)
cop(kind-4, are-2)
det(kind-4, the-3)
root(ROOT-0, kind-4)
nsubj(have-9, kind-4)
prep_of(kind-4, person-6)
aux(have-9, will-8)
rcmod(kind-4, have-9)
det(kids-12, the-10)
nn(kids-12, neighborhood-11)
nsubj(break-13, kids-12)
ccomp(have-9, break-13)
prt(break-13, in-14)
dep(break-13, steal-16)
det(guns-18, some-17)
dobj(steal-16, guns-18)
advmod(go-21, then-20)
dep(break-13, go-21)
ccomp(go-21, shoot-22)
prt(shoot-22, up-23)
det(school-26, an-24)
amod(school-26, entire-25)
dobj(shoot-22, school-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB imagine)
        (SBAR (IN that)
          (S
            (NP (DT any) (JJ responsible) (NN gun) (NN owner))
            (VP (MD would)
              (VP (VB think)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (VBP 're)
                      (VP (VBG doing)
                        (VP (VBZ is)
                          (ADJP (JJ safe)
                            (CC or)
                            (JJ intelligent)))))))))))))
    (. .)))

nsubj(imagine-4, I-1)
aux(imagine-4, ca-2)
neg(imagine-4, n't-3)
root(ROOT-0, imagine-4)
complm(think-11, that-5)
det(owner-9, any-6)
amod(owner-9, responsible-7)
nn(owner-9, gun-8)
nsubj(think-11, owner-9)
aux(think-11, would-10)
ccomp(imagine-4, think-11)
dobj(doing-15, what-12)
nsubj(doing-15, you-13)
aux(doing-15, 're-14)
ccomp(think-11, doing-15)
cop(safe-17, is-16)
dep(doing-15, safe-17)
dep(doing-15, intelligent-19)
conj_or(safe-17, intelligent-19)

(ROOT
  (SBARQ
    (WHNP (WDT What)
      (NP (PRP it)))
    (SQ
      (VP
        (ADVP
          (NP (DT the) (NN purpose))
          (IN of))
        (VBG having)
        (NP (RB so) (JJ many) (NNS guns))))
    (. ?)))

det(it-2, What-1)
nsubj(having-6, it-2)
det(purpose-4, the-3)
npadvmod(of-5, purpose-4)
advmod(having-6, of-5)
root(ROOT-0, having-6)
advmod(guns-9, so-7)
amod(guns-9, many-8)
dobj(having-6, guns-9)

(ROOT
  (FRAG
    (ADJP (RB Perhaps)
      (S
        (VP (TO to)
          (VP (VB make)
            (PRT (RP up))
            (PP (IN for)
              (NP
                (NP (DT some) (JJ other) (NN shortcoming))
                (PP (IN in)
                  (NP (PRP$ your) (NN life)))))))))
    (. ?)))

root(ROOT-0, Perhaps-1)
aux(make-3, to-2)
xcomp(Perhaps-1, make-3)
prt(make-3, up-4)
det(shortcoming-8, some-6)
amod(shortcoming-8, other-7)
prep_for(make-3, shortcoming-8)
poss(life-11, your-10)
prep_in(shortcoming-8, life-11)

