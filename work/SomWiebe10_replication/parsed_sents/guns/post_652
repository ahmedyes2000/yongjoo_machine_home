(ROOT
  (FRAG
    (NP (DT The) (NN idea))
    (SBAR (IN that) (`` ``)
      (S
        (NP (NNS communities))
        (VP (MD should)
          (VP (VB be)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB decide) ('' '')))))
            (SBAR
              (SBARQ
                (WHADVP (WRB How) (RB far))
                (SQ
                  (SQ (VBZ does)
                    (NP (DT that))
                    (VP (VB go)))
                  (, ,)
                  (CC or)
                  (SQ (VBZ does)
                    (NP (JJ local) (NN rule))
                    (ADVP (RB only))
                    (VP (VB apply)
                      (PP (TO to)
                        (NP (DT the) (JJ second) (NN amendment))))))
                (. ?)))))))))

det(idea-2, The-1)
root(ROOT-0, idea-2)
complm(able-8, that-3)
nsubj(able-8, communities-5)
aux(able-8, should-6)
cop(able-8, be-7)
dep(idea-2, able-8)
aux(decide-10, to-9)
xcomp(able-8, decide-10)
advmod(far-13, How-12)
advmod(go-16, far-13)
aux(go-16, does-14)
nsubj(go-16, that-15)
dep(able-8, go-16)
aux(apply-23, does-19)
amod(rule-21, local-20)
nsubj(apply-23, rule-21)
advmod(apply-23, only-22)
dep(able-8, apply-23)
conj_or(go-16, apply-23)
det(amendment-27, the-25)
amod(amendment-27, second-26)
prep_to(apply-23, amendment-27)

(ROOT
  (SQ (VBD Was)
    (NP (PRP it))
    (VP (VBN interference)
      (PP (IN of)
        (NP (JJ ideologically-driven) (NNS outsiders)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (JJ civil) (NNS rights) (NNS organizers))
          (VP (VBD came)
            (PP (IN from)
              (ADVP (RB halfway)))
            (PP (IN across)
              (NP (DT the) (NN country)))
            (S
              (VP (TO to)
                (VP (VB try)
                  (S
                    (VP (TO to)
                      (VP (VB end)
                        (NP (JJ racial) (NN segregation))))))))))))
    (. ?)))

auxpass(interference-3, Was-1)
nsubjpass(interference-3, it-2)
root(ROOT-0, interference-3)
amod(outsiders-6, ideologically-driven-5)
prep_of(interference-3, outsiders-6)
advmod(came-11, when-7)
amod(organizers-10, civil-8)
nn(organizers-10, rights-9)
nsubj(came-11, organizers-10)
xsubj(try-18, organizers-10)
advcl(interference-3, came-11)
prep(came-11, from-12)
pcomp(from-12, halfway-13)
det(country-16, the-15)
prep_across(came-11, country-16)
aux(try-18, to-17)
xcomp(came-11, try-18)
aux(end-20, to-19)
xcomp(try-18, end-20)
amod(segregation-22, racial-21)
dobj(end-20, segregation-22)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBN regulated)
        (NP
          (NP (JJ bayonet) (NNS mounts))
          (CC and)
          (NP (DT the) (NN way)))))
    (NP (DT the) (NN wood))
    (VP (VBD was)
      (VP (VBN carved)))
    (. .)))

nsubj(regulated-2, It-1)
dep(carved-11, regulated-2)
amod(mounts-4, bayonet-3)
dobj(regulated-2, mounts-4)
det(way-7, the-6)
dobj(regulated-2, way-7)
conj_and(mounts-4, way-7)
det(wood-9, the-8)
nsubjpass(carved-11, wood-9)
auxpass(carved-11, was-10)
root(ROOT-0, carved-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD forbid)
      (NP (NNS handguns))
      (SBAR
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD were)
              (ADJP (RB too) (JJ large)))))
        (, ,)
        (CC or)
        (SBAR
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD held)
                (NP (PRP$ their) (NNS magazines))
                (PP (IN in)
                  (NP
                    (NP (NN front))
                    (PP (IN of)
                      (NP (DT the) (NN grip))))))))
          (, ,)
          (CC or)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD were)
                (VP (VBN called) ('' '')
                  (NP (NNP Uzi))
                  ('' ''))))))))
    (. .)))

nsubj(forbid-2, It-1)
root(ROOT-0, forbid-2)
dobj(forbid-2, handguns-3)
nsubj(large-7, that-4)
cop(large-7, were-5)
advmod(large-7, too-6)
dep(forbid-2, large-7)
nsubj(held-11, that-10)
dep(forbid-2, held-11)
conj_or(large-7, held-11)
poss(magazines-13, their-12)
dobj(held-11, magazines-13)
det(grip-18, the-17)
prep_in_front_of(held-11, grip-18)
nsubjpass(called-23, that-21)
auxpass(called-23, were-22)
conj_or(large-7, called-23)
conj_or(held-11, called-23)
dobj(called-23, Uzi-25)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Gun) (NNP Control) (NNP Act))
      (PP (IN of)
        (NP (CD 1967))))
    (VP (VBD covered)
      (NP (JJ imported) (NNP Saturday) (NNP Night) (NNP Specials))
      (SBAR (IN that)
        (S
          (NP (VBG working) (NN class) (NNS people))
          (VP (MD could)
            (VP (VB afford))))))
    (. .)))

det(Act-4, The-1)
nn(Act-4, Gun-2)
nn(Act-4, Control-3)
nsubj(covered-7, Act-4)
prep_of(Act-4, 1967-6)
root(ROOT-0, covered-7)
amod(Specials-11, imported-8)
nn(Specials-11, Saturday-9)
nn(Specials-11, Night-10)
tmod(covered-7, Specials-11)
complm(afford-17, that-12)
amod(people-15, working-13)
nn(people-15, class-14)
nsubj(afford-17, people-15)
aux(afford-17, could-16)
ccomp(covered-7, afford-17)

(ROOT
  (S
    (NP (JJ Several) (NNS localities))
    (VP (VBP have)
      (VP (VBN extended)
        (NP (DT that) (NN restriction))
        (PP (TO to)
          (NP
            (NP
              (ADJP (RB domestically) (VBN produced))
              (NNS guns))
            (PP (IN with)
              (NP (DT the) (JJ same) (NNS features)
                (CC and)
                (NN design)))))))
    (. .)))

amod(localities-2, Several-1)
nsubj(extended-4, localities-2)
aux(extended-4, have-3)
root(ROOT-0, extended-4)
det(restriction-6, that-5)
dobj(extended-4, restriction-6)
advmod(produced-9, domestically-8)
amod(guns-10, produced-9)
prep_to(extended-4, guns-10)
det(features-14, the-12)
amod(features-14, same-13)
prep_with(guns-10, features-14)
prep_with(guns-10, design-16)
conj_and(features-14, design-16)

(ROOT
  (S
    (NP
      (NP (NNS Guns))
      (UCP
        (NP (CD .50) (NN caliber))
        (CC and)
        (ADJP (JJR larger))))
    (VP
      (VP (VBP are) (`` ``)
        (ADJP (RB too) (JJ powerful))
        ('' ''))
      (CC and)
      (`` ``)
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB bring)
              (PRT (RP down))
              (NP (NNS airplanes) ('' '')))))))
    (. .)))

nsubj(powerful-9, Guns-1)
nsubj(used-13, Guns-1)
xsubj(bring-15, Guns-1)
num(caliber-3, .50-2)
dep(Guns-1, caliber-3)
dep(Guns-1, larger-5)
conj_and(caliber-3, larger-5)
cop(powerful-9, are-6)
advmod(powerful-9, too-8)
root(ROOT-0, powerful-9)
conj_and(powerful-9, used-13)
aux(bring-15, to-14)
xcomp(used-13, bring-15)
prt(bring-15, down-16)
dobj(bring-15, airplanes-17)

(ROOT
  (S
    (NP
      (NP (DT A) (NN ban))
      (PP (IN on)
        (NP (`` ``) (NN cop) (NN killer) ('' ''))))
    (VP (VBZ bullets)
      (ADJP (JJ capable)
        (PP (IN of)
          (S
            (VP (VBG penetrating)
              (NP (NN police) (NN body) (NN armor)))))))
    (. .)))

det(ban-2, A-1)
nsubj(bullets-8, ban-2)
nn(killer-6, cop-5)
prep_on(ban-2, killer-6)
root(ROOT-0, bullets-8)
acomp(bullets-8, capable-9)
prepc_of(capable-9, penetrating-11)
nn(armor-14, police-12)
nn(armor-14, body-13)
dobj(penetrating-11, armor-14)

(ROOT
  (S
    (NP
      (NP (JJ Many) (NNS people))
      (ADJP (RB not) (JJ familiar)
        (PP (IN with)
          (NP (DT the) (NNS details)))))
    (VP (MD would)
      (VP (VB think)
        (SBAR (IN that)
          (S
            (NP (DT these))
            (VP (VBP are) (RB all)
              (NP (JJ reasonable) (NNS restrictions)))))))
    (. .)))

amod(people-2, Many-1)
nsubj(think-9, people-2)
neg(familiar-4, not-3)
amod(people-2, familiar-4)
det(details-7, the-6)
prep_with(familiar-4, details-7)
aux(think-9, would-8)
root(ROOT-0, think-9)
complm(restrictions-15, that-10)
nsubj(restrictions-15, these-11)
cop(restrictions-15, are-12)
advmod(restrictions-15, all-13)
amod(restrictions-15, reasonable-14)
ccomp(think-9, restrictions-15)

(ROOT
  (S
    (FRAG
      (ADVP (RB However)))
    (: :)
    (S
      (NP
        (NP (DT The) (NN Glock))
        (NP (NNS models) (CD 17)
          (CC and)
          (CD 22)))
      (VP (VBP are)
        (NP
          (NP (DT the) (JJ standard) (JJ full-sized) (NN handgun))
          (SBAR (IN that)
            (S
              (NP (JJ many) (NN police) (NNS departments))
              (VP (VBP issue)))))))
    (. .)))

dep(handgun-13, However-1)
det(Glock-4, The-3)
nsubj(handgun-13, Glock-4)
dep(Glock-4, models-5)
num(models-5, 17-6)
dep(Glock-4, 22-8)
conj_and(models-5, 22-8)
cop(handgun-13, are-9)
det(handgun-13, the-10)
amod(handgun-13, standard-11)
amod(handgun-13, full-sized-12)
root(ROOT-0, handgun-13)
dobj(issue-18, handgun-13)
complm(issue-18, that-14)
amod(departments-17, many-15)
nn(departments-17, police-16)
nsubj(issue-18, departments-17)
dep(handgun-13, issue-18)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (ADJP (JJ large) (RB enough)
        (SBAR (IN that)
          (S
            (NP (JJ many) (NNS departments))
            (VP (VBP issue)
              (NP (DT the)
                (ADJP (RB slightly) (JJR smaller))
                (NP (NNS models) (CD 19)
                  (CC and)
                  (CD 23)))
              (ADVP (RB instead)))))))
    (. .)))

nsubj(large-3, They-1)
cop(large-3, are-2)
root(ROOT-0, large-3)
advmod(large-3, enough-4)
complm(issue-8, that-5)
amod(departments-7, many-6)
nsubj(issue-8, departments-7)
ccomp(large-3, issue-8)
det(models-12, the-9)
advmod(smaller-11, slightly-10)
amod(models-12, smaller-11)
dobj(issue-8, models-12)
num(models-12, 19-13)
dobj(issue-8, 23-15)
conj_and(models-12, 23-15)
advmod(issue-8, instead-16)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN of)
        (NP
          (NP (DT these) (NNS guns))
          (, ,)
          (SBAR (IN as)
            (S
              (VP (VBD carried)
                (PP (IN by)
                  (NP
                    (NP
                      (QP (NNS tens) (IN of) (NNS thousands)))
                    (PP (IN of)
                      (NP (NN policemen)))))))))))
    (VP (VBD were)
      (VP (VBN covered)
        (PP (IN by)
          (NP
            (NP (DT the)
              (ADJP (RB now) (JJ expired))
              (NN assault) (NNS weapons) (NN ban))
            (: --)
            (NP (`` ``)
              (NP (RB too) (JJ big))
              ('' '')
              (PP (IN for)
                (NP (NNS civilians))))))
        (S
          (VP (TO to)
            (VP (VB carry)
              (SBAR (IN unless)
                (S
                  (NP (PRP you))
                  (VP (VBD used)
                    (NP (JJ special) (JJ reduced) (NN capacity) (NNS magazines))))))))))
    (. .)))

nsubjpass(covered-15, All-1)
xsubj(carry-31, All-1)
det(guns-4, these-3)
prep_of(All-1, guns-4)
mark(carried-7, as-6)
dep(guns-4, carried-7)
dep(thousands-11, tens-9)
quantmod(thousands-11, of-10)
prep_by(carried-7, thousands-11)
prep_of(thousands-11, policemen-13)
auxpass(covered-15, were-14)
root(ROOT-0, covered-15)
det(ban-22, the-17)
advmod(expired-19, now-18)
amod(ban-22, expired-19)
nn(ban-22, assault-20)
nn(ban-22, weapons-21)
agent(covered-15, ban-22)
advmod(big-26, too-25)
dep(ban-22, big-26)
prep_for(big-26, civilians-29)
aux(carry-31, to-30)
xcomp(covered-15, carry-31)
mark(used-34, unless-32)
nsubj(used-34, you-33)
advcl(carry-31, used-34)
amod(magazines-38, special-35)
amod(magazines-38, reduced-36)
nn(magazines-38, capacity-37)
dobj(used-34, magazines-38)

(ROOT
  (SQ (NNP Does)
    (NP (DT the) (NN city))
    (VP (VB get)
      (S
        (VP (TO to)
          (VP (VB forbid)
            (NP (DT a) (JJ Muslim) (NN Mosque))))))
    (. ?)))

dep(get-4, Does-1)
det(city-3, the-2)
nsubj(get-4, city-3)
xsubj(forbid-6, city-3)
root(ROOT-0, get-4)
aux(forbid-6, to-5)
xcomp(get-4, forbid-6)
det(Mosque-9, a-7)
amod(Mosque-9, Muslim-8)
dobj(forbid-6, Mosque-9)

(ROOT
  (S
    (ADVP (RB Oddly))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADVP (RB also))
      (VP (VBN covered)
        (PP (IN by)
          (NP (DT the) (CD 1967) (NN law)))
        (PRN (: --)
          (S
            (NP (NNP Glock))
            (VP (VBZ has)
              (S
                (VP (TO to)
                  (VP (VB put)
                    (NP (JJ click-adjustable) (NNS sights))
                    (PP (IN on)
                      (NP (PRP them))))))
              (S
                (VP (TO to)
                  (VP (VB get)
                    (NP (JJ enough) (`` ``) (NNS points) ('' ''))))))))
        (SBAR (IN so)
          (S
            (NP (PRP they))
            (VP (VBP are) (RB not)
              (VP (VBN classified)
                (NP
                  (NP (RB as) (DT a))
                  ('' '')
                  (SBAR
                    (S
                      (NP (NNP Saturday) (NNP Night))
                      (VP
                        (VP (VBZ Special))
                        ('' '')
                        (CC or)
                        (VP ('' '')
                          (NP (NNP Junk) (CD Gun)))))))))))))
    ('' '') (. .)))

advmod(covered-6, Oddly-1)
nsubjpass(covered-6, they-3)
auxpass(covered-6, are-4)
advmod(covered-6, also-5)
root(ROOT-0, covered-6)
det(law-10, the-8)
num(law-10, 1967-9)
agent(covered-6, law-10)
nsubj(has-13, Glock-12)
xsubj(put-15, Glock-12)
xsubj(get-21, Glock-12)
parataxis(covered-6, has-13)
aux(put-15, to-14)
xcomp(has-13, put-15)
amod(sights-17, click-adjustable-16)
dobj(put-15, sights-17)
prep_on(put-15, them-19)
aux(get-21, to-20)
xcomp(has-13, get-21)
amod(points-24, enough-22)
dobj(get-21, points-24)
mark(classified-30, so-26)
nsubjpass(classified-30, they-27)
auxpass(classified-30, are-28)
neg(classified-30, not-29)
advcl(covered-6, classified-30)
advmod(a-32, as-31)
dobj(classified-30, a-32)
nn(Night-35, Saturday-34)
nsubj(Special-36, Night-35)
rcmod(a-32, Special-36)
rcmod(a-32, Junk-40)
conj_or(Special-36, Junk-40)
num(Junk-40, Gun-41)

(ROOT
  (S
    (NP (DT The) (NN click) (NNS sighs))
    (VP (VBP are)
      (ADVP (RB generally))
      (VP (VBN replaced)
        (PP (IN by)
          (NP (DT the) (JJ original) (NNS versions)))
        (PP (IN by)
          (NP (DT the) (NN importer)))
        (PP (IN before)
          (NP (NN sale)))))
    (. .)))

det(sighs-3, The-1)
nn(sighs-3, click-2)
nsubjpass(replaced-6, sighs-3)
auxpass(replaced-6, are-4)
advmod(replaced-6, generally-5)
root(ROOT-0, replaced-6)
det(versions-10, the-8)
amod(versions-10, original-9)
agent(replaced-6, versions-10)
det(importer-13, the-12)
agent(replaced-6, importer-13)
prep_before(replaced-6, sale-15)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (DT these) (NNS guns))
        (VP (VBP are)
          (ADVP (RB simultaneously))
          (ADJP
            (ADJP (RB too) (JJ big))
            (CC and)
            (ADJP (RB too) (JJ small))))))
    (, ,)
    (WHNP (WP what))
    (SQ (VBZ is)
      (VP (VBN left)
        (PP (IN in)
          (NP (IN between)))))
    (. ?)))

mark(big-7, If-1)
det(guns-3, these-2)
nsubj(big-7, guns-3)
nsubj(small-10, guns-3)
cop(big-7, are-4)
advmod(big-7, simultaneously-5)
advmod(big-7, too-6)
advcl(left-14, big-7)
advmod(small-10, too-9)
conj_and(big-7, small-10)
advcl(left-14, small-10)
nsubjpass(left-14, what-12)
auxpass(left-14, is-13)
root(ROOT-0, left-14)
prep(left-14, in-15)
pobj(in-15, between-16)

(ROOT
  (S
    (NP
      (NP (DT The) (`` ``) (NN cop) (NN killer) ('' ''))
      (NP (NNS rules)))
    (VP (MD would)
      (VP (VB ban)
        (NP
          (NP (NNP ALL) (JJ common) (NN rifle) (NN ammunition))
          (PP (IN except)
            (NP (CD .22) (NN rimfire))))))
    (. .)))

det(killer-4, The-1)
nn(killer-4, cop-3)
nsubj(ban-8, killer-4)
dep(killer-4, rules-6)
aux(ban-8, would-7)
root(ROOT-0, ban-8)
nn(ammunition-12, ALL-9)
amod(ammunition-12, common-10)
nn(ammunition-12, rifle-11)
dobj(ban-8, ammunition-12)
num(rimfire-15, .22-14)
prep_except(ammunition-12, rimfire-15)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ standard) (NN body) (NN armor))
        (PP (IN as)
          (S
            (VP (VBG worn)
              (PP (IN by)
                (NP (NN police)))))))
      (VP (VBZ is)
        (ADVP (RB only))
        (VP (VBN meant)
          (S
            (VP (TO to)
              (VP (VB protect)
                (PP (IN against)
                  (NP (NNS handguns)))
                (: --)
                (SBAR (IN in) (NN order)
                  (S
                    (VP (TO to)
                      (VP (VB protect)
                        (PP (IN against)
                          (NP (NN rifle)))
                        (PP (IN with)
                          (NP (JJ current) (NN technology)))))))))))))
    (, ,)
    (NP (DT the) (NN armor))
    (VP (MD would)
      (VP (VB need)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (RB far) (JJ bulkier))
              (SBAR (IN than)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)))))))))
    (. .)))

det(armor-4, The-1)
amod(armor-4, standard-2)
nn(armor-4, body-3)
nsubjpass(meant-11, armor-4)
xsubj(protect-13, armor-4)
prepc_as(armor-4, worn-6)
prep_by(worn-6, police-8)
auxpass(meant-11, is-9)
advmod(meant-11, only-10)
ccomp(need-30, meant-11)
aux(protect-13, to-12)
xcomp(meant-11, protect-13)
prep_against(protect-13, handguns-15)
mark(protect-20, in-17)
dep(protect-20, order-18)
aux(protect-20, to-19)
parataxis(protect-13, protect-20)
purpcl(protect-13, protect-20)
prep_against(protect-20, rifle-22)
amod(technology-25, current-24)
prep_with(protect-20, technology-25)
det(armor-28, the-27)
nsubj(need-30, armor-28)
xsubj(bulkier-34, armor-28)
aux(need-30, would-29)
root(ROOT-0, need-30)
aux(bulkier-34, to-31)
cop(bulkier-34, be-32)
advmod(bulkier-34, far-33)
xcomp(need-30, bulkier-34)
mark(is-37, than-35)
nsubj(is-37, it-36)
advcl(bulkier-34, is-37)

(ROOT
  (S
    (NP
      (NP (DT Some))
      (PP (IN of)
        (NP
          (NP (DT the) (NNS laws))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP are)
                (VP (VBN promoted)
                  (PP (IN as)
                    (S
                      (VP (VBG banning)
                        (NP (DT the) (CD .50) (NNP BMG))))))))))))
    (ADVP (RB also))
    (VP (VBP cover)
      (NP
        (NP (JJ revolutionary) (NN war) (NN flintlock) (NNS muskets))
        (, ,)
        (CC and)
        (NP
          (NP (DT all) (JJ common) (NNS shotguns))
          (PP (IN except)
            (NP (DT the) (CD .410))))))
    (. .)))

nsubj(cover-14, Some-1)
det(laws-4, the-3)
prep_of(Some-1, laws-4)
nsubjpass(promoted-7, laws-4)
auxpass(promoted-7, are-6)
rcmod(laws-4, promoted-7)
prepc_as(promoted-7, banning-9)
det(BMG-12, the-10)
num(BMG-12, .50-11)
dobj(banning-9, BMG-12)
advmod(cover-14, also-13)
root(ROOT-0, cover-14)
amod(muskets-18, revolutionary-15)
nn(muskets-18, war-16)
nn(muskets-18, flintlock-17)
dobj(cover-14, muskets-18)
det(shotguns-23, all-21)
amod(shotguns-23, common-22)
dobj(cover-14, shotguns-23)
conj_and(muskets-18, shotguns-23)
det(.410-26, the-25)
prep_except(shotguns-23, .410-26)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADVP (RB usually))
        (NP
          (NP (DT an) (NN exception))
          (PP (IN for)
            (NP
              (NP (NNS shotguns))
              (`` ``)
              (ADJP (RB particularly) (JJ suitable)
                (PP (IN for)
                  (NP (NN sporting) (NNS purposes))))
              ('' ''))))
        (SBAR (IN as)
          (S
            (VP (VBD decided)
              (PP (IN by)
                (NP (DT some) (NN bureaucrat))))))))
    (CC But)
    (S
      (NP (PRP we))
      (VP (VBP promise)
        (SBAR
          (S
            (NP (DT this))
            (VP (MD wo) (RB n't)
              (VP (VB be)
                (VP (VBN used)
                  (S
                    (VP (TO to)
                      (VP (VB take)
                        (FRAG
                          (X (SYM \*))
                          (NP (PRP$ your) (NN \*) (NN shotgun)))))))))))
        (, ,)
        (ADVP (JJ honest))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(is-2, usually-3)
det(exception-5, an-4)
nsubj(is-2, exception-5)
prep_for(exception-5, shotguns-7)
advmod(suitable-10, particularly-9)
amod(shotguns-7, suitable-10)
nn(purposes-13, sporting-12)
prep_for(suitable-10, purposes-13)
mark(decided-16, as-15)
advcl(is-2, decided-16)
det(bureaucrat-19, some-18)
prep_by(decided-16, bureaucrat-19)
nsubj(promise-22, we-21)
conj_but(is-2, promise-22)
nsubjpass(used-27, this-23)
aux(used-27, wo-24)
neg(used-27, n't-25)
auxpass(used-27, be-26)
ccomp(promise-22, used-27)
aux(take-29, to-28)
xcomp(used-27, take-29)
dep(shotgun-33, \*-30)
poss(shotgun-33, your-31)
nn(shotgun-33, \*-32)
dep(take-29, shotgun-33)
advmod(promise-22, honest-35)

(ROOT
  (S
    (NP (NNP Hollow) (NN point) (NN ammo))
    (VP (VBZ is)
      (ADJP (`` ``) (RB so) (JJ deadly)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (VP (VBN forbidden)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN used)
                        (UCP
                          (PP (IN in)
                            (NP (NN warfare) ('' '')))
                          (, ,)
                          (CC and)
                          (ADVP (RB therefore))
                          (ADJP (RB not) (JJ suitable)))))))))))))
    (. .)))

nn(ammo-3, Hollow-1)
nn(ammo-3, point-2)
nsubj(deadly-7, ammo-3)
cop(deadly-7, is-4)
advmod(deadly-7, so-6)
root(ROOT-0, deadly-7)
nsubjpass(forbidden-10, it-8)
xsubj(used-13, it-8)
auxpass(forbidden-10, is-9)
dep(deadly-7, forbidden-10)
aux(used-13, to-11)
auxpass(used-13, be-12)
xcomp(forbidden-10, used-13)
dep(used-13, in-14)
pobj(in-14, warfare-15)
dep(used-13, therefore-19)
conj_and(in-14, therefore-19)
neg(suitable-21, not-20)
dep(used-13, suitable-21)
conj_and(in-14, suitable-21)

(ROOT
  (S
    (NP (JJ Jacketed) (NN ammo))
    (VP (VBZ is) (`` ``)
      (ADJP (RB too) (JJ military))
      ('' ''))
    (. .)))

amod(ammo-2, Jacketed-1)
nsubj(military-6, ammo-2)
cop(military-6, is-3)
advmod(military-6, too-5)
root(ROOT-0, military-6)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP me)))
    (, ,)
    (NP (NN gun) (NNS rights))
    (VP (VBP represent)
      (NP
        (NP (NN freedom)
          (CC and)
          (NN self-reliance))
        (CONJP (RB rather) (IN than))
        (NP (NN subservience))))
    (. .)))

prep_to(represent-6, me-2)
nn(rights-5, gun-4)
nsubj(represent-6, rights-5)
root(ROOT-0, represent-6)
dobj(represent-6, freedom-7)
dobj(represent-6, self-reliance-9)
conj_and(freedom-7, self-reliance-9)
dobj(represent-6, subservience-12)
conj_negcc(freedom-7, subservience-12)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP do) (RB not)
        (VP (VB represent)
          (NP (DT the) (NN right)
            (S
              (VP (TO to)
                (VP (VB use)
                  (NP (PRP$ my) (NN gun)
                    (S
                      (VP (TO to)
                        (VP (VB get)
                          (NP (PRP$ my) (NN way)))))))))))))
    (: --)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP I))
          (VP (VBP use)
            (S
              (NP
                (NP (DT a) (NN gun))
                (CC or)
                (NP
                  (NP (DT the) (NN threat))
                  (PP (IN of)
                    (NP (CD one)))))
              (VP (TO to)
                (VP (VB win)
                  (NP (DT an) (NN argument))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD should)
        (VP
          (VP (VB be)
            (VP (VBN prosecuted)))
          (CC and)
          (VP (VB go)
            (PP (TO to)
              (NP (NN jail)))))))
    (. .)))

nsubj(represent-4, They-1)
aux(represent-4, do-2)
neg(represent-4, not-3)
root(ROOT-0, represent-4)
det(right-6, the-5)
dobj(represent-4, right-6)
aux(use-8, to-7)
infmod(right-6, use-8)
poss(gun-10, my-9)
dobj(use-8, gun-10)
aux(get-12, to-11)
infmod(gun-10, get-12)
poss(way-14, my-13)
dobj(get-12, way-14)
mark(use-18, If-16)
nsubj(use-18, I-17)
advcl(prosecuted-34, use-18)
det(gun-20, a-19)
nsubj(win-27, gun-20)
det(threat-23, the-22)
conj_or(gun-20, threat-23)
nsubj(win-27, threat-23)
prep_of(threat-23, one-25)
aux(win-27, to-26)
xcomp(use-18, win-27)
det(argument-29, an-28)
dobj(win-27, argument-29)
nsubjpass(prosecuted-34, I-31)
nsubj(go-36, I-31)
aux(prosecuted-34, should-32)
auxpass(prosecuted-34, be-33)
parataxis(represent-4, prosecuted-34)
parataxis(represent-4, go-36)
conj_and(prosecuted-34, go-36)
prep_to(go-36, jail-38)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB pretty) (JJ clear))
          (NN divide))
        (PP (IN between)
          (NP (JJ lawful) (NN gun) (NNS owners)
            (CC and)
            (NNS criminals)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(divide-6, a-3)
advmod(clear-5, pretty-4)
amod(divide-6, clear-5)
nsubj(is-2, divide-6)
amod(owners-10, lawful-8)
nn(owners-10, gun-9)
prep_between(divide-6, owners-10)
prep_between(divide-6, criminals-12)
conj_and(owners-10, criminals-12)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB already))
    (VP (VBP have)
      (NP (DT the) (NN power)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (NN life)))))))
    (. .)))

nsubj(have-3, I-1)
advmod(have-3, already-2)
root(ROOT-0, have-3)
det(power-5, the-4)
dobj(have-3, power-5)
aux(take-7, to-6)
infmod(power-5, take-7)
dobj(take-7, life-8)

(ROOT
  (S
    (NP (DT The) (NN gun))
    (VP (VBZ gives)
      (NP (PRP me))
      (NP (DT the) (NN power)
        (S
          (VP (TO to)
            (VP (VB protect)
              (NP (NN life)
                (CC and)
                (NN liberty)))))))
    (. .)))

det(gun-2, The-1)
nsubj(gives-3, gun-2)
root(ROOT-0, gives-3)
iobj(gives-3, me-4)
det(power-6, the-5)
dobj(gives-3, power-6)
aux(protect-8, to-7)
infmod(power-6, protect-8)
dobj(protect-8, life-9)
dobj(protect-8, liberty-11)
conj_and(life-9, liberty-11)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS ones))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD will)
              (VP (VB be)
                (VP (VBN stopped)
                  (PP (IN by)
                    (NP (DT a) (NN law)))))))))
      (VP (VBP are) (RB n't)
        (NP
          (NP (DT the) (NNS ones))
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD need)
                (VP (VB worry)
                  (PRT (RP about)))))))))
    (: --)
    (S
      (NP (PRP they))
      (VP (MD will)
        (VP (VB obey)
          (NP
            (NP (DT the) (VBG existing) (NNS laws))
            (PP (IN against)
              (NP (NN murder)
                (CC and)
                (NN assault)))))))
    (. .)))

det(ones-2, The-1)
nsubjpass(stopped-6, ones-2)
nsubj(ones-13, ones-2)
aux(stopped-6, will-4)
auxpass(stopped-6, be-5)
rcmod(ones-2, stopped-6)
det(law-9, a-8)
agent(stopped-6, law-9)
cop(ones-13, are-10)
neg(ones-13, n't-11)
det(ones-13, the-12)
root(ROOT-0, ones-13)
dobj(need-15, ones-13)
nsubj(need-15, you-14)
rcmod(ones-13, need-15)
dep(need-15, worry-16)
prt(worry-16, about-17)
nsubj(obey-21, they-19)
aux(obey-21, will-20)
parataxis(ones-13, obey-21)
det(laws-24, the-22)
amod(laws-24, existing-23)
dobj(obey-21, laws-24)
prep_against(laws-24, murder-26)
prep_against(laws-24, assault-28)
conj_and(murder-26, assault-28)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS ones))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (MD will)
            (VP
              (NP (NN murder)
                (CC and)
                (NN assault)))))))
    (VP (VBP are) (RB n't)
      (VP (VBG going)
        (PP (TO to)
          (NP (JJ obey) (NN gun) (NNS laws)))
        (, ,)
        (ADVP (RB either))))
    (. .)))

det(ones-2, The-1)
nsubj(murder-5, ones-2)
nsubj(going-10, ones-2)
aux(murder-5, will-4)
rcmod(ones-2, murder-5)
rcmod(ones-2, assault-7)
conj_and(murder-5, assault-7)
aux(going-10, are-8)
neg(going-10, n't-9)
root(ROOT-0, going-10)
amod(laws-14, obey-12)
nn(laws-14, gun-13)
prep_to(going-10, laws-14)
advmod(going-10, either-16)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP keep)
        (S
          (VP (VBG seeing)
            (NP (NNS statements))
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NNP Brady) (NNP Campaign))
                  (CC and)
                  (NP (PRP$ their) (NNS associates)))
                (VP (MD wo) (RB n't)
                  (VP (VB violate)
                    (NP (DT the) (JJ fundamental) (NN right))
                    (S
                      (VP (TO to)
                        (VP (VB bear)
                          (NP (NNS arms)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (ADVP (RB never))
        (VP (VBN seen)
          (NP
            (NP (DT a) (NN statement))
            (SBAR
              (WHPP (IN of)
                (WHNP (WDT what) (NN guns)))
              (S
                (NP (PRP we))
                (VP (MD would)
                  (VP (VB have)
                    (VP (VBN left) (, ,)
                      (SBAR (IN if)
                        (S
                          (NP (DT the) (NNP Brady) (NNP Campaign))
                          (VP (VBD were)
                            (ADJP (RB completely) (JJ successful))))))))))))))
    (. .)))

nsubj(keep-2, I-1)
root(ROOT-0, keep-2)
xcomp(keep-2, seeing-3)
dobj(seeing-3, statements-4)
complm(violate-14, that-5)
det(Campaign-8, the-6)
nn(Campaign-8, Brady-7)
nsubj(violate-14, Campaign-8)
poss(associates-11, their-10)
conj_and(Campaign-8, associates-11)
nsubj(violate-14, associates-11)
aux(violate-14, wo-12)
neg(violate-14, n't-13)
ccomp(seeing-3, violate-14)
det(right-17, the-15)
amod(right-17, fundamental-16)
dobj(violate-14, right-17)
aux(bear-19, to-18)
xcomp(violate-14, bear-19)
dobj(bear-19, arms-20)
nsubj(seen-26, I-23)
aux(seen-26, have-24)
neg(seen-26, never-25)
conj_but(keep-2, seen-26)
det(statement-28, a-27)
dobj(seen-26, statement-28)
det(guns-31, statement-28)
rel(left-35, guns-31)
nsubj(left-35, we-32)
aux(left-35, would-33)
aux(left-35, have-34)
rcmod(statement-28, left-35)
mark(successful-43, if-37)
det(Campaign-40, the-38)
nn(Campaign-40, Brady-39)
nsubj(successful-43, Campaign-40)
cop(successful-43, were-41)
advmod(successful-43, completely-42)
advcl(left-35, successful-43)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP suspect)
      (NP
        (NP (CD .22) (JJ bolt-action) (NNS rifles))
        (, ,)
        (UCP
          (NP (CD .410) (NNS shotguns))
          (CC and)
          (RB not)
          (ADVP (RB much) (RB else)))))
    (. .)))

nsubj(suspect-2, I-1)
root(ROOT-0, suspect-2)
num(rifles-5, .22-3)
amod(rifles-5, bolt-action-4)
dobj(suspect-2, rifles-5)
num(shotguns-8, .410-7)
appos(rifles-5, shotguns-8)
neg(else-12, not-10)
advmod(else-12, much-11)
appos(rifles-5, else-12)
conj_and(shotguns-8, else-12)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN of)
        (NP (DT the) (NN following))))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBN proposed)
          (PP (IN as)
            (NP (`` ``)
              (NP (JJ reasonable) (NNS restrictions))
              ('' '') (: :)
              (NP
                (NP (DT The) (NN assault) (NNS weapons) (NN ban))
                (VP (VBN covered)
                  (NP
                    (NP (NNS guns))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP
                          (VP (VBD held)
                            (NP
                              (ADJP (RB too) (JJ much))
                              (NN ammo)))
                          (, ,)
                          (CC or)
                          (VP (VBD looked)
                            (S
                              (ADJP (JJ scary)))))))))))))))
    (. .)))

nsubjpass(proposed-7, All-1)
det(following-4, the-3)
prep_of(All-1, following-4)
aux(proposed-7, have-5)
auxpass(proposed-7, been-6)
root(ROOT-0, proposed-7)
amod(restrictions-11, reasonable-10)
prep_as(proposed-7, restrictions-11)
det(ban-17, The-14)
nn(ban-17, assault-15)
nn(ban-17, weapons-16)
dep(restrictions-11, ban-17)
partmod(ban-17, covered-18)
dobj(covered-18, guns-19)
nsubj(held-21, guns-19)
nsubj(looked-27, guns-19)
rcmod(guns-19, held-21)
advmod(much-23, too-22)
amod(ammo-24, much-23)
dobj(held-21, ammo-24)
rcmod(guns-19, looked-27)
conj_or(held-21, looked-27)
acomp(looked-27, scary-28)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD covered)
      (NP
        (NP (NNS handguns))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD were)
              (ADJP (RB too) (JJ large)
                (CC and)
                (JJ heavy)))))))
    (. .)))

nsubj(covered-2, It-1)
root(ROOT-0, covered-2)
dobj(covered-2, handguns-3)
nsubj(large-7, handguns-3)
nsubj(heavy-9, handguns-3)
cop(large-7, were-5)
advmod(large-7, too-6)
rcmod(handguns-3, large-7)
rcmod(handguns-3, heavy-9)
conj_and(large-7, heavy-9)

