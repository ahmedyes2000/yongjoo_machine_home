(ROOT
  (S (`` ``)
    (NP (JJS Most) (NNS robbers))
    (VP (VBP are)
      (ADVP (RB there))
      (S
        (VP (TO to)
          (VP
            (VP (VB steal)
              (NP (NN stuff)))
            (CC and)
            (VP (VB get)
              (PRT (RP away))
              (PP (IN with)
                (NP (PRP it))))))))
    (. .)))

amod(robbers-3, Most-2)
nsubj(are-4, robbers-3)
xsubj(steal-7, robbers-3)
root(ROOT-0, are-4)
advmod(are-4, there-5)
aux(steal-7, to-6)
xcomp(are-4, steal-7)
dobj(steal-7, stuff-8)
xcomp(are-4, get-10)
conj_and(steal-7, get-10)
prt(get-10, away-11)
prep_with(get-10, it-13)

(ROOT
  (S ('' '')
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADJP (JJ true))))
    (, ,)
    (VP (VBP guess)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP they))
          (VP (MD can)
            (VP (VB find)
              (NP
                (NP (DT the) (NN jewelry))
                (, ,)
                (NP (DT the) (JJS most) (NN money))
                (, ,)
                (CC and)
                (NP (NN credit) (NNS cards))))))))
    (. .)))

nsubj(true-4, That-2)
cop(true-4, 's-3)
ccomp(guess-6, true-4)
root(ROOT-0, guess-6)
advmod(find-10, where-7)
nsubj(find-10, they-8)
aux(find-10, can-9)
advcl(guess-6, find-10)
det(jewelry-12, the-11)
dobj(find-10, jewelry-12)
det(money-16, the-14)
amod(money-16, most-15)
dobj(find-10, money-16)
conj_and(jewelry-12, money-16)
nn(cards-20, credit-19)
dobj(find-10, cards-20)
conj_and(jewelry-12, cards-20)

(ROOT
  (FRAG
    (PP (IN In)
      (NP
        (NP (PRP$ your) (NN wallet\/purse))
        (, ,)
        (PP (IN around)
          (NP (PRP$ your) (NN neck)
            (CC and)
            (NN wrist)))))
    (. .)))

root(ROOT-0, In-1)
poss(wallet\/purse-3, your-2)
pobj(In-1, wallet\/purse-3)
poss(neck-7, your-6)
prep_around(wallet\/purse-3, neck-7)
prep_around(wallet\/purse-3, wrist-9)
conj_and(neck-7, wrist-9)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN saying))
        (, ,)
        (NP
          (ADJP (RB even) (JJ amonst))
          (DT the) (NN police))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(saying-4, a-3)
nsubj('s-2, saying-4)
advmod(amonst-7, even-6)
amod(police-9, amonst-7)
det(police-9, the-8)
appos(saying-4, police-9)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (VP (VBZ seconds))))
      (VP (VBP count)))
    (, ,)
    (NP (DT the) (NN police))
    (VP (VBP are)
      (NP (JJ only) (NNS minutes))
      (ADVP (RB away)))
    (. .)))

advmod(seconds-3, When-2)
advcl(count-4, seconds-3)
csubj(count-4, seconds-3)
ccomp(minutes-10, count-4)
det(police-7, the-6)
nsubj(minutes-10, police-7)
cop(minutes-10, are-8)
amod(minutes-10, only-9)
root(ROOT-0, minutes-10)
advmod(minutes-10, away-11)

(ROOT
  (S ('' '')
    (NP (DT The) (NNP Supreme) (NNP Court))
    (VP (VBZ has)
      (VP (VBN ruled)
        (SBAR (IN that)
          (S
            (NP (NNS police))
            (VP (VBP are) (RB n't)
              (VP (VBN required)
                (S
                  (VP (TO to)
                    (VP (VB protect)
                      (NP
                        (NP (PRP it) (POS 's))
                        (NNS citizens)))))))))))
    (. .)))

det(Court-4, The-2)
nn(Court-4, Supreme-3)
nsubj(ruled-6, Court-4)
aux(ruled-6, has-5)
root(ROOT-0, ruled-6)
complm(required-11, that-7)
nsubjpass(required-11, police-8)
xsubj(protect-13, police-8)
auxpass(required-11, are-9)
neg(required-11, n't-10)
ccomp(ruled-6, required-11)
aux(protect-13, to-12)
xcomp(required-11, protect-13)
poss(citizens-16, it-14)
dobj(protect-13, citizens-16)

(ROOT
  (S
    (ADVP (RB http:\/\/www.zwire.com\/site\/news.cfm?newsid=14766800&BRD=1585&PAG=461&dept_id=213470&rfi=6))
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB up)
        (PP (TO to)
          (NP (DT the) (NN individual)
            (S
              (VP (TO to)
                (VP (VB protect)
                  (NP (PRP themselves)))))))))
    (. .)))

advmod(is-3, http:\/\/www.zwire.com\/site\/news.cfm?newsid=14766800&BRD=1585&PAG=461&dept_id=213470&rfi=6-1)
nsubj(is-3, It-2)
root(ROOT-0, is-3)
advmod(is-3, up-4)
det(individual-7, the-6)
prep_to(up-4, individual-7)
aux(protect-9, to-8)
infmod(individual-7, protect-9)
dobj(protect-9, themselves-10)

(ROOT
  (S (RB So)
    (S
      (VP (VBG sitting)
        (PP (IN in)
          (NP (PRP$ your) (NN bedroom)
            (S
              (VP (`` ``) (VBG hoping) ('' '')
                (NP
                  (NP (DT the) (JJ bad) (NN guy))
                  (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-))
                  (SBAR
                    (S
                      (VP (MD will)
                        (ADVP (RB just))
                        (VP (VB go)
                          (NP (RB about) (RB there) (NN business))
                          (ADVP (RB then)))))))))))))
    (VP (VBP leave))
    (. .)))

advmod(leave-22, So-1)
csubj(leave-22, sitting-2)
poss(bedroom-5, your-4)
prep_in(sitting-2, bedroom-5)
dep(bedroom-5, hoping-7)
det(guy-11, the-9)
amod(guy-11, bad-10)
dobj(hoping-7, guy-11)
dep(guy-11, s-13)
aux(go-17, will-15)
advmod(go-17, just-16)
rcmod(guy-11, go-17)
advmod(business-20, about-18)
advmod(business-20, there-19)
dobj(go-17, business-20)
advmod(go-17, then-21)
root(ROOT-0, leave-22)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (NP (DT a) (NN pipe) (NN dream)))
    (. .)))

dep(dream-7, Well-1)
nsubj(dream-7, that-3)
cop(dream-7, 's-4)
det(dream-7, a-5)
nn(dream-7, pipe-6)
root(ROOT-0, dream-7)

(ROOT
  (FRAG
    (ADVP (RB As)
      (PP (IN for)
        (NP (PRP me))
        (ADVP (RB personally))))
    (. ?)))

root(ROOT-0, As-1)
prep_for(As-1, me-3)
advmod(As-1, personally-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP sleep)
        (PP (IN on)
          (NP
            (NP (CD one) (NN side))
            (PP (IN of)
              (NP
                (NP (DT the) (NN house))
                (CC and)
                (NP (PRP$ my) (NNS kids))))))))
    (NP (NNS bedrooms))
    (VP (VBP are)
      (PP (IN on)
        (NP
          (NP (DT the) (JJ other) (NN side))
          (PP (IN with)
            (NP
              (NP (DT the) (NNS entrances))
              (PP (IN in)
                (NP (DT the) (NN middle))))))))
    (. .)))

nsubj(sleep-2, I-1)
dep(are-13, sleep-2)
num(side-5, one-4)
prep_on(sleep-2, side-5)
det(house-8, the-7)
prep_of(side-5, house-8)
poss(kids-11, my-10)
prep_of(side-5, kids-11)
conj_and(house-8, kids-11)
nsubj(are-13, bedrooms-12)
root(ROOT-0, are-13)
det(side-17, the-15)
amod(side-17, other-16)
prep_on(are-13, side-17)
det(entrances-20, the-19)
prep_with(side-17, entrances-20)
det(middle-23, the-22)
prep_in(entrances-20, middle-23)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBP help)
      (NP
        (NP (NN anybody))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ tries)
              (S
                (VP (TO to)
                  (VP (VB keep)
                    (NP (PRP me))
                    (PP (IN from)
                      (S
                        (VP (VBG getting)
                          (PP (TO to)
                            (NP (PRP$ my) (NNS kids)
                              (S
                                (VP (TO to)
                                  (VP (VB protect)
                                    (NP (PRP them))))))))))))))))))
    (. .)))

nsubj(help-2, God-1)
root(ROOT-0, help-2)
dobj(help-2, anybody-3)
nsubj(tries-5, anybody-3)
rcmod(anybody-3, tries-5)
aux(keep-7, to-6)
xcomp(tries-5, keep-7)
dobj(keep-7, me-8)
prepc_from(keep-7, getting-10)
poss(kids-13, my-12)
prep_to(getting-10, kids-13)
aux(protect-15, to-14)
infmod(kids-13, protect-15)
dobj(protect-15, them-16)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADVP (RB completely))))
    (CC and)
    (S
      (NP
        (ADJP (RB irreversibly) (JJ positive))
        (NNS guns))
      (VP (VBP make)
        (S
          (NP (PRP you))
          (ADJP (JJR safer)))))
    (. .)))

nsubj(am-2, I-1)
root(ROOT-0, am-2)
advmod(am-2, completely-3)
advmod(positive-6, irreversibly-5)
amod(guns-7, positive-6)
nsubj(make-8, guns-7)
conj_and(am-2, make-8)
nsubj(safer-10, you-9)
xcomp(make-8, safer-10)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (DT a) (JJ bad) (NN guy))
        (VP
          (VP (VBZ is)
            (ADJP (RB so) (JJ brazen)
              (SBAR (IN as)
                (S
                  (VP (TO to)
                    (VP (VB enter)
                      (NP (DT a) (NN home))
                      (PP (IN with)
                        (NP (DT an) (NN alarm)))))))))
          (CC and)
          (VP (VBD shot)
            (NP (DT the) (NN dog))))))
    (, ,)
    (SQ (VBP do)
      (NP (PRP you))
      (ADVP (RB honestly))
      (VP (VB think)
        (SBAR (IN that)
          (S
            (VP (VBZ 's)
              (ADVP
                (ADVP (RB as) (RB far))
                (SBAR (IN as)
                  (S
                    (NP (PRP he))
                    (VP (MD 'll)
                      (VP (VB go)))))))))))
    (. ?)))

mark(brazen-7, If-1)
det(guy-4, a-2)
amod(guy-4, bad-3)
nsubj(brazen-7, guy-4)
nsubj(shot-17, guy-4)
cop(brazen-7, is-5)
advmod(brazen-7, so-6)
advcl(think-24, brazen-7)
mark(enter-10, as-8)
aux(enter-10, to-9)
dep(brazen-7, enter-10)
det(home-12, a-11)
dobj(enter-10, home-12)
det(alarm-15, an-14)
prep_with(enter-10, alarm-15)
conj_and(brazen-7, shot-17)
advcl(think-24, shot-17)
det(dog-19, the-18)
dobj(shot-17, dog-19)
aux(think-24, do-21)
nsubj(think-24, you-22)
advmod(think-24, honestly-23)
root(ROOT-0, think-24)
complm('s-26, that-25)
ccomp(think-24, 's-26)
advmod(far-28, as-27)
advmod('s-26, far-28)
mark(go-32, as-29)
nsubj(go-32, he-30)
aux(go-32, 'll-31)
ccomp(far-28, go-32)

(ROOT
  (FRAG
    (WHADVP (WRB Why))
    (RB not)
    (VP (VB take)
      (NP (NNS hostages)))
    (. ?)))

dep(not-2, Why-1)
root(ROOT-0, not-2)
dep(not-2, take-3)
dobj(take-3, hostages-4)

(ROOT
  (FRAG
    (WHADVP (WRB Why))
    (RB not)
    (VP (VB take)
      (NP
        (NP (DT that)
          (ADJP (RB pretty) (JJ little))
          (NN wife))
        (, ,)
        (CC or)
        (NP
          (NP (NN god) (NN forbid))
          (, ,)
          (NP (DT that)
            (ADJP (RB pretty) (JJ little))
            (NN daughter)))))
    (. ?)))

dep(not-2, Why-1)
root(ROOT-0, not-2)
dep(not-2, take-3)
det(wife-7, that-4)
advmod(little-6, pretty-5)
amod(wife-7, little-6)
dobj(take-3, wife-7)
nn(forbid-11, god-10)
dobj(take-3, forbid-11)
conj_or(wife-7, forbid-11)
det(daughter-16, that-13)
advmod(little-15, pretty-14)
amod(daughter-16, little-15)
appos(forbid-11, daughter-16)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ terrible) (NN scenario))
        (SBAR
          (S
            (NP (PRP I))
            (VP
              (VP (VBP know))
              (CC but)
              (VP (VBP guess)
                (NP (WP what))))))))
    (. ?)))

nsubj(scenario-5, That-1)
cop(scenario-5, 's-2)
det(scenario-5, a-3)
amod(scenario-5, terrible-4)
root(ROOT-0, scenario-5)
nsubj(know-7, I-6)
nsubj(guess-9, I-6)
rcmod(scenario-5, know-7)
rcmod(scenario-5, guess-9)
conj_but(know-7, guess-9)
dobj(guess-9, what-10)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (DT a) (NN firearm)
          (S
            (VP (TO to)
              (VP (VB defend)
                (NP
                  (NP (PRP yourself))
                  (CC or)
                  (NP (NN family)))))))))
    (. .)))

nsubj(have-4, You-1)
aux(have-4, do-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
det(firearm-6, a-5)
dobj(have-4, firearm-6)
aux(defend-8, to-7)
infmod(firearm-6, defend-8)
dobj(defend-8, yourself-9)
dobj(defend-8, family-11)
conj_or(yourself-9, family-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADVP (RB completely))
      (PP (IN at)
        (NP (DT the) (JJ bad) (NNS guys) (NN mercy))))
    (. .)))

nsubj(are-2, You-1)
root(ROOT-0, are-2)
advmod(are-2, completely-3)
det(mercy-8, the-5)
amod(mercy-8, bad-6)
nn(mercy-8, guys-7)
prep_at(are-2, mercy-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (ADVP (RB really))
        (VP (VBZ is)
          (NP (DT a) (JJ bad) (NN guy)))))
    (, ,)
    (NP (RB then) (NN mercy))
    (VP (VBZ is)
      (ADVP (RB definitely))
      (NP
        (NP (NNP NOT))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP are)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB get))))))))))
    (. .)))

mark(guy-7, If-1)
nsubj(guy-7, he-2)
advmod(guy-7, really-3)
cop(guy-7, is-4)
det(guy-7, a-5)
amod(guy-7, bad-6)
advcl(NOT-13, guy-7)
advmod(mercy-10, then-9)
nsubj(NOT-13, mercy-10)
cop(NOT-13, is-11)
advmod(NOT-13, definitely-12)
root(ROOT-0, NOT-13)
dobj(going-17, NOT-13)
rel(going-17, what-14)
nsubj(going-17, you-15)
xsubj(get-19, you-15)
aux(going-17, are-16)
rcmod(NOT-13, going-17)
aux(get-19, to-18)
xcomp(going-17, get-19)

(ROOT
  (FRAG (CC And)
    (SBAR (IN for)
      (FRAG
        (NP
          (NP (PRP$ your) (NN comment))
          (PP (IN on)
            (NP (DT the) (NN police))))))
    (. ?)))

dep(comment-4, And-1)
mark(comment-4, for-2)
poss(comment-4, your-3)
root(ROOT-0, comment-4)
det(police-7, the-6)
prep_on(comment-4, police-7)

