(ROOT
  (S (`` ``)
    (NP (DT A) (RB well) (JJ regulated) (NN Militia))
    (, ,)
    (S
      (VP (VBG being)
        (ADJP (JJ necessary)
          (PP (TO to)
            (NP
              (NP (DT the) (NN security))
              (PP (IN of)
                (NP
                  (NP (DT a) (JJ free) (NN State))
                  (, ,)
                  (NP
                    (NP (DT the) (NN right))
                    (PP (IN of)
                      (NP (DT the) (NNS people))))))))
          (S
            (VP (TO to)
              (VP (VB keep)
                (CC and)
                (VB bear)
                (NP (NNS Arms))))))))
    (, ,)
    (VP (MD shall) (RB not)
      (VP (VB be)
        (VP (VBN infringed))))
    (. .)))

det(Militia-5, A-2)
advmod(Militia-5, well-3)
amod(Militia-5, regulated-4)
nsubjpass(infringed-31, Militia-5)
cop(necessary-8, being-7)
partmod(infringed-31, necessary-8)
det(security-11, the-10)
prep_to(necessary-8, security-11)
det(State-15, a-13)
amod(State-15, free-14)
prep_of(security-11, State-15)
det(right-18, the-17)
appos(State-15, right-18)
det(people-21, the-20)
prep_of(right-18, people-21)
aux(keep-23, to-22)
xcomp(necessary-8, keep-23)
xcomp(necessary-8, bear-25)
conj_and(keep-23, bear-25)
dobj(keep-23, Arms-26)
aux(infringed-31, shall-28)
neg(infringed-31, not-29)
auxpass(infringed-31, be-30)
root(ROOT-0, infringed-31)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ does) (RB n't)
      (VP (VB give)
        (NP (DT the) (NNS rights))
        (PP (TO to)
          (NP (NNS citizens)))
        (, ,)
        (ADVP (DT no) (NN matter)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NNP Supreme) (NNP Court))
              (VP (MD might)
                (VP (VB say))))))))
    (. .)))

nsubj(give-5, This-2)
aux(give-5, does-3)
neg(give-5, n't-4)
root(ROOT-0, give-5)
det(rights-7, the-6)
dobj(give-5, rights-7)
prep_to(give-5, citizens-9)
dep(matter-12, no-11)
advmod(give-5, matter-12)
dobj(say-18, what-13)
det(Court-16, the-14)
nn(Court-16, Supreme-15)
nsubj(say-18, Court-16)
aux(say-18, might-17)
dep(matter-12, say-18)

(ROOT
  (S
    (NP
      (NP (NN Anyone))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ reads)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ knows)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBZ means)
                        (NP (DT the) (NN right)
                          (S
                            (VP (TO to)
                              (VP (VB keep)
                                (CC and)
                                (VB bear)
                                (NP (NNS arms))))))))))))))))
    (VP (VBZ belongs)
      (PP (TO to)
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP have)
                (VP (VBN served)
                  (PP (IN in)
                    (NP (NN militia))))))))))
    (. .)))

nsubj(reads-3, Anyone-1)
nsubj(belongs-16, Anyone-1)
rcmod(Anyone-1, reads-3)
nsubj(knows-5, it-4)
ccomp(reads-3, knows-5)
complm(means-8, that-6)
nsubj(means-8, it-7)
ccomp(knows-5, means-8)
det(right-10, the-9)
dobj(means-8, right-10)
aux(keep-12, to-11)
infmod(right-10, keep-12)
infmod(right-10, bear-14)
conj_and(keep-12, bear-14)
dobj(keep-12, arms-15)
root(ROOT-0, belongs-16)
prep_to(belongs-16, those-18)
nsubj(served-21, those-18)
aux(served-21, have-20)
rcmod(those-18, served-21)
prep_in(served-21, militia-23)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP it))
          (VP (VBD was)
            (VP (VBN written))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(written-6, how-3)
nsubjpass(written-6, it-4)
auxpass(written-6, was-5)
ccomp('s-2, written-6)

(ROOT
  (S
    (SBAR
      (ADVP (RB Simply))
      (IN because)
      (S
        (NP (PRP it))
        (VP (VBZ has)
          (VP (VBN been)
            (VP (VBN ignored))))))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (DT the) (NNS words))
            (VP (VBP have)
              (VP (VBN changed)))))))
    (. .)))

advmod(ignored-6, Simply-1)
dep(ignored-6, because-2)
nsubjpass(ignored-6, it-3)
aux(ignored-6, has-4)
auxpass(ignored-6, been-5)
advcl(mean-9, ignored-6)
csubj(mean-9, ignored-6)
aux(mean-9, does-7)
neg(mean-9, n't-8)
root(ROOT-0, mean-9)
det(words-11, the-10)
nsubj(changed-13, words-11)
aux(changed-13, have-12)
ccomp(mean-9, changed-13)

