(ROOT
  (S
    (S
      (NP (NNP Bad) (NNP ppl))
      (VP (VBP are)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (NNS guns))
                (ADVP (RB regardless))))))))
    (CC and)
    (S
      (NP (JJR stricter) (NNS laws))
      (VP (VBP are) (RB not)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB change)
                (NP (DT that))))))))
    (. .)))

nn(ppl-2, Bad-1)
nsubj(going-4, ppl-2)
xsubj(get-6, ppl-2)
aux(going-4, are-3)
root(ROOT-0, going-4)
aux(get-6, to-5)
xcomp(going-4, get-6)
dobj(get-6, guns-7)
advmod(get-6, regardless-8)
amod(laws-11, stricter-10)
nsubj(going-14, laws-11)
xsubj(change-16, laws-11)
aux(going-14, are-12)
neg(going-14, not-13)
conj_and(going-4, going-14)
aux(change-16, to-15)
xcomp(going-14, change-16)
dobj(change-16, that-17)

(ROOT
  (S
    (NP (NNP \/) (NNP \/) (-RRB- -RRB-) (NNP Let))
    (VP (VBZ 's)
      (VP (VBP think)
        (NP (DT this))
        (PRT (RP through))))
    (. .)))

nn(Let-4, \/-1)
nn(Let-4, \/-2)
nsubj(think-6, Let-4)
aux(think-6, 's-5)
root(ROOT-0, think-6)
dobj(think-6, this-7)
prt(think-6, through-8)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG making)
          (S
            (NP (NN gun) (NN control) (NN law))
            (ADJP (JJR tougher))))))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG restricting)
        (NP
          (NP (NNS hunters))
          (CC and)
          (NP (JJ good) (NNS people)))
        (PP (IN from)
          (S
            (VP (VBG getting)
              (NP (PRP them)))))))
    (. .)))

prepc_by(restricting-9, making-2)
nn(law-5, gun-3)
nn(law-5, control-4)
nsubj(tougher-6, law-5)
xcomp(making-2, tougher-6)
nsubj(restricting-9, you-7)
aux(restricting-9, are-8)
root(ROOT-0, restricting-9)
dobj(restricting-9, hunters-10)
amod(people-13, good-12)
dobj(restricting-9, people-13)
conj_and(hunters-10, people-13)
prepc_from(restricting-9, getting-15)
dobj(getting-15, them-16)

(ROOT
  (S
    (NP (NNP Criminal))
    (VP (MD will)
      (ADVP (RB still))
      (VP (VB get)
        (NP (PRP them))
        (PP (IN by)
          (S
            (VP
              (VP (VBG breaking)
                (PP (IN into)
                  (NP (NNS houses))))
              (, ,)
              (VP (VBG stealing)
                (NP
                  (NP (PRP them))
                  (CC or)
                  (NP (JJ other) (JJ bad) (NNS ways)))))))))
    (. .)))

nsubj(get-4, Criminal-1)
aux(get-4, will-2)
advmod(get-4, still-3)
root(ROOT-0, get-4)
dobj(get-4, them-5)
prepc_by(get-4, breaking-7)
prep_into(breaking-7, houses-9)
dep(breaking-7, stealing-11)
dobj(stealing-11, them-12)
amod(ways-16, other-14)
amod(ways-16, bad-15)
dobj(stealing-11, ways-16)
conj_or(them-12, ways-16)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB now))
    (VP (VBP have)
      (NP
        (NP (JJ bad) (NNS people))
        (PP (IN with)
          (NP
            (NP (NNS guns))
            (CC and)
            (NP (JJ good) (NNS people)))))
      (PP (IN with)
        (NP (DT no) (NN way)
          (S
            (VP (TO to)
              (VP (VB defend)
                (NP (PRP themselves))))))))
    (. .)))

nsubj(have-3, You-1)
advmod(have-3, now-2)
root(ROOT-0, have-3)
amod(people-5, bad-4)
dobj(have-3, people-5)
prep_with(people-5, guns-7)
amod(people-10, good-9)
prep_with(people-5, people-10)
conj_and(guns-7, people-10)
det(way-13, no-12)
prep_with(have-3, way-13)
aux(defend-15, to-14)
infmod(way-13, defend-15)
dobj(defend-15, themselves-16)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB know)
      (NP
        (NP (NN anyone))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ hunts))))))
    (. ?)))

aux(know-3, Do-1)
nsubj(know-3, you-2)
root(ROOT-0, know-3)
dobj(know-3, anyone-4)
nsubj(hunts-6, anyone-4)
rcmod(anyone-4, hunts-6)

(ROOT
  (S
    (VP (VB Think)
      (ADVP (RB first)))
    (. .)))

root(ROOT-0, Think-1)
advmod(Think-1, first-2)

