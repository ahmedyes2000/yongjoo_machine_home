(ROOT
  (S
    (S
      (VP (VB Thank)
        (NP (PRP you))
        (PP (IN for)
          (NP (PRP$ your) (NN concern)))))
    (, ,) (IN but)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADVP (RB quite) (RB well))
        (VP (VBN protected) (, ,)
          (ADVP (NNS thanks)))))
    (. .)))

root(ROOT-0, Thank-1)
dobj(Thank-1, you-2)
poss(concern-5, your-4)
prep_for(Thank-1, concern-5)
dep(Thank-1, but-7)
nsubjpass(protected-12, I-8)
auxpass(protected-12, am-9)
advmod(well-11, quite-10)
advmod(protected-12, well-11)
ccomp(Thank-1, protected-12)
advmod(protected-12, thanks-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (ADVP (RB unwittingly))
      (VP (VBN exposed)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (JJ fatal) (NNS flaws))))
        (PP (IN in)
          (NP (DT the) (NN gun) (NN control) (NN argument)))
        (: :)
        (NP (DT the) (`` ``)
          (NX
            (NP (WP what))
            (PP (IN if))))))
    (. ?)))

nsubj(exposed-4, You-1)
aux(exposed-4, have-2)
advmod(exposed-4, unwittingly-3)
root(ROOT-0, exposed-4)
dobj(exposed-4, one-5)
det(flaws-9, the-7)
amod(flaws-9, fatal-8)
prep_of(one-5, flaws-9)
det(argument-14, the-11)
nn(argument-14, gun-12)
nn(argument-14, control-13)
prep_in(exposed-4, argument-14)
det(what-18, the-16)
dobj(exposed-4, what-18)
prep(what-18, if-19)

(ROOT
  (S
    (VP (VB Ask)
      (NP
        (NP (NNP Tom) (NNP Jones))
        (PP (IN of)
          (NP
            (NP (NNP College) (NNP Park))
            (, ,)
            (NP (NNP GA))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (PP (IN on)
                  (NP
                    (NP (NNP May) (CD 4))
                    (PP (IN of)
                      (NP (DT this) (NN year)))))
                (VP (VBD shot)
                  (CC and)
                  (VBD killed)
                  (NP
                    (NP (CD one))
                    (PP (IN of)
                      (NP (CD two) (NN home) (NNS invaders)))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBD was)
                          (VP (VBG pointing)
                            (NP (DT a) (NN gun))
                            (PP (IN at)
                              (NP
                                (NP (PRP him))
                                (CC and)
                                (NP (PRP$ his) (NNS friends))))))))))))))))
    (. .)))

root(ROOT-0, Ask-1)
nn(Jones-3, Tom-2)
dobj(Ask-1, Jones-3)
nn(Park-6, College-5)
prep_of(Jones-3, Park-6)
appos(Park-6, GA-8)
nsubj(shot-17, GA-8)
nsubj(killed-19, GA-8)
prep_on(shot-17, May-12)
num(May-12, 4-13)
det(year-16, this-15)
prep_of(May-12, year-16)
rcmod(Park-6, shot-17)
rcmod(GA-8, shot-17)
rcmod(Park-6, killed-19)
rcmod(GA-8, killed-19)
conj_and(shot-17, killed-19)
dobj(shot-17, one-20)
nsubj(pointing-27, one-20)
num(invaders-24, two-22)
nn(invaders-24, home-23)
prep_of(one-20, invaders-24)
aux(pointing-27, was-26)
rcmod(one-20, pointing-27)
det(gun-29, a-28)
dobj(pointing-27, gun-29)
prep_at(pointing-27, him-31)
poss(friends-34, his-33)
prep_at(pointing-27, friends-34)
conj_and(him-31, friends-34)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD did) (RB n't)
      (ADVP (RB just))
      (VP (VB surrender)
        (NP (PRP$ his) (NN life))
        (PP (TO to)
          (NP
            (NP (DT the) (NN scum))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (VBD had)
                    (VP (VBN invaded)
                      (NP (PRP$ his) (NN home))))
                  (, ,)
                  (CC and)
                  (VP (VBD saved)
                    (NP
                      (NP (DT the) (NNS lives))
                      (PP (IN of)
                        (NP
                          (NP (CD 10) (NNS people))
                          (PP (IN inside)
                            (NP (PRP$ his) (NN home))))))))))))))
    (. .)))

nsubj(surrender-5, He-1)
aux(surrender-5, did-2)
neg(surrender-5, n't-3)
advmod(surrender-5, just-4)
root(ROOT-0, surrender-5)
poss(life-7, his-6)
dobj(surrender-5, life-7)
det(scum-10, the-9)
prep_to(surrender-5, scum-10)
nsubj(invaded-13, scum-10)
nsubj(saved-18, scum-10)
aux(invaded-13, had-12)
rcmod(scum-10, invaded-13)
poss(home-15, his-14)
dobj(invaded-13, home-15)
rcmod(scum-10, saved-18)
conj_and(invaded-13, saved-18)
det(lives-20, the-19)
dobj(saved-18, lives-20)
num(people-23, 10-22)
prep_of(lives-20, people-23)
poss(home-26, his-25)
prep_inside(people-23, home-26)

(ROOT
  (S (CC But)
    (, ,)
    (PRN
      (S
        (NP (PRP$ his) (NN gun))
        (VP (VBD did) (RB n't)
          (VP (VB make)
            (S
              (NP (PRP him))
              (ADJP (JJR safer)))))))
    (, ,)
    (VP (VBD did)
      (NP (PRP it)))
    (. ?)))

cc(did-11, But-1)
poss(gun-4, his-3)
nsubj(make-7, gun-4)
aux(make-7, did-5)
neg(make-7, n't-6)
parataxis(did-11, make-7)
nsubj(safer-9, him-8)
xcomp(make-7, safer-9)
root(ROOT-0, did-11)
dobj(did-11, it-12)

(ROOT
  (NP (CD Wrong) (RB again) (. .)))

root(ROOT-0, Wrong-1)
advmod(Wrong-1, again-2)

(ROOT
  (S
    (S
      (NP (NNS http:\/\/www.wsbtv.com\/news\/19365762\/detail.html))
      (ADVP (RB Finally)))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sorry)
        (S
          (VP (TO to)
            (VP (VB hear)
              (PP (IN about)
                (NP
                  (NP (DT the) (NN loss))
                  (PP (IN of)
                    (NP (PRP$ your) (NN dog))))))))))
    (. .)))

ccomp(sorry-6, http:\/\/www.wsbtv.com\/news\/19365762\/detail.html-1)
advmod(http:\/\/www.wsbtv.com\/news\/19365762\/detail.html-1, Finally-2)
nsubj(sorry-6, I-4)
cop(sorry-6, 'm-5)
root(ROOT-0, sorry-6)
aux(hear-8, to-7)
xcomp(sorry-6, hear-8)
det(loss-11, the-10)
prep_about(hear-8, loss-11)
poss(dog-14, your-13)
prep_of(loss-11, dog-14)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (NP (NN anything))
        (PP (IN in)
          (NP
            (NP (PRP$ your) (NN statement))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD would)
                  (VP (VB lead)
                    (S
                      (NP (PRP me))
                      (VP (TO to)
                        (VP (VB believe)
                          (SBAR
                            (S
                              (NP (PRP I))
                              (VP (MD would)
                                (VP (VB be)
                                  (ADJP
                                    (ADJP (JJR safer))
                                    (SBAR (IN if)
                                      (S
                                        (NP (PRP he))
                                        (VP (VBD had)
                                          (VP (VBN been)
                                            (NP (PRP$ my) (NN dog))))))))))))))))))))))
    (. .)))

advmod(see-6, However-1)
nsubj(see-6, I-3)
aux(see-6, do-4)
neg(see-6, n't-5)
root(ROOT-0, see-6)
dobj(see-6, anything-7)
poss(statement-10, your-9)
prep_in(see-6, statement-10)
nsubj(lead-13, statement-10)
aux(lead-13, would-12)
rcmod(statement-10, lead-13)
nsubj(believe-16, me-14)
aux(believe-16, to-15)
xcomp(lead-13, believe-16)
nsubj(safer-20, I-17)
aux(safer-20, would-18)
cop(safer-20, be-19)
ccomp(believe-16, safer-20)
mark(dog-26, if-21)
nsubj(dog-26, he-22)
aux(dog-26, had-23)
cop(dog-26, been-24)
poss(dog-26, my-25)
ccomp(safer-20, dog-26)

(ROOT
  (S
    (NP (NNS Cars)
      (CC and)
      (NNS people))
    (VP (VBP come)
      (CC and)
      (VBP go)
      (NP
        (NP (PDT all) (DT the) (NN time))
        (PP (IN in)
          (NP (PRP$ my) (NN subdivision))))
      (, ,)
      (SBAR (IN so)
        (S
          (NP
            (NP (DT a) (NN dog))
            (VP (VBG barking)
              (PP (IN at)
                (NP
                  (NP (DT those))
                  (PP (IN with)
                    (SBAR
                      (WHNP (WP whom))
                      (S
                        (NP (PRP he))
                        (VP (VBZ is)
                          (ADJP (JJ unfamiliar))))))))))
          (VP (MD would)
            (VP (VB tell)
              (NP (PRP me))
              (NP (NN nothing)))))))
    (. .)))

nsubj(come-4, Cars-1)
nsubj(go-6, Cars-1)
conj_and(Cars-1, people-3)
nsubj(come-4, people-3)
root(ROOT-0, come-4)
conj_and(come-4, go-6)
predet(time-9, all-7)
det(time-9, the-8)
dobj(come-4, time-9)
poss(subdivision-12, my-11)
prep_in(time-9, subdivision-12)
mark(tell-26, so-14)
det(dog-16, a-15)
nsubj(tell-26, dog-16)
partmod(dog-16, barking-17)
prep_at(barking-17, those-19)
dobj(unfamiliar-24, whom-21)
nsubj(unfamiliar-24, he-22)
cop(unfamiliar-24, is-23)
prepc_with(those-19, unfamiliar-24)
aux(tell-26, would-25)
advcl(come-4, tell-26)
iobj(tell-26, me-27)
dobj(tell-26, nothing-28)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (CD two) (NNS dogs))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP bark)
              (PP (IN at)
                (NP
                  (ADJP (RB even) (JJ familiar))
                  (NNS people))))))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
num(dogs-4, two-3)
dobj(have-2, dogs-4)
nsubj(bark-6, dogs-4)
rcmod(dogs-4, bark-6)
advmod(familiar-9, even-8)
amod(people-10, familiar-9)
prep_at(bark-6, people-10)

(ROOT
  (S
    (NP (CC Either)
      (NN way))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB put)
        (NP
          (NP (PRP$ my) (NN safety))
          (, ,)
          (CC and)
          (ADVP (RB certainly))
          (RB not)
          (NP
            (NP (DT that))
            (PP (IN of)
              (NP
                (NP (PRP$ my) (NN wife))
                (CC and)
                (NP (CD two) (NNS kids))))))
        (, ,)
        (PP (IN in)
          (NP
            (NP
              (NP (DT the) (NNS hands))
              (PRN (-LRB- -LRB-)
                (CC or)
                (ADJP (JJ paws))
                (-RRB- -RRB-)))
            (PP (IN of)
              (NP
                (NP (NN anyone))
                (PP (CC but)
                  (NP (PRP me)))))))))
    (. .)))

dep(way-2, Either-1)
nsubj(put-7, way-2)
nsubj(put-7, I-4)
aux(put-7, do-5)
neg(put-7, n't-6)
root(ROOT-0, put-7)
poss(safety-9, my-8)
dobj(put-7, safety-9)
dobj(put-7, certainly-12)
advmod(safety-9, certainly-12)
conj_and(safety-9, certainly-12)
dobj(put-7, not-13)
conj_and(safety-9, not-13)
neg(safety-9, not-13)
dep(safety-9, that-14)
poss(wife-17, my-16)
prep_of(that-14, wife-17)
num(kids-20, two-19)
prep_of(that-14, kids-20)
conj_and(wife-17, kids-20)
det(hands-24, the-23)
prep_in(put-7, hands-24)
dep(paws-27, or-26)
dep(hands-24, paws-27)
prep_of(hands-24, anyone-30)
prep(anyone-30, but-31)
dep(but-31, me-32)

(ROOT
  (S
    (S
      (SBAR (IN Because)
        (FRAG
          (ADVP (RB ultimately))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is)
        (NP (PRP$ my) (NN responsibility))))
    (, ,)
    (CC and)
    (S
      (NP (PRP mine))
      (ADJP (RB alone)))
    (. .)))

mark(ultimately-2, Because-1)
advcl(responsibility-7, ultimately-2)
nsubj(responsibility-7, it-4)
cop(responsibility-7, is-5)
poss(responsibility-7, my-6)
root(ROOT-0, responsibility-7)
dep(alone-11, mine-10)
conj_and(responsibility-7, alone-11)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (VBD hypothetical)
      (SBAR
        (S
          (NP (NN situation))
          (VP (VBZ does)
            (NP (NN nothing))
            (S
              (VP (TO to)
                (VP (VB support)
                  (NP (PRP$ your) (NN position)))))))))
    (. .)))

nsubj(hypothetical-3, You-2)
root(ROOT-0, hypothetical-3)
nsubj(does-5, situation-4)
ccomp(hypothetical-3, does-5)
dobj(does-5, nothing-6)
aux(support-8, to-7)
xcomp(does-5, support-8)
poss(position-10, your-9)
dobj(support-8, position-10)

(ROOT
  (S
    (PP (VBN Given)
      (NP
        (NP (DT that) (NN logic))
        (, ,)
        (NP
          (NP (DT the) (NN fact))
          (SBAR (IN that)
            (S
              (NP (PRP$ my) (NN aunt))
              (VP (VBD was)
                (VP (VBN killed)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (S
                        (NP (DT an) (CD 18) (NN wheeler))
                        (VP (VBD hit)
                          (NP (PRP$ her) (NN car))))
                      (CC and)
                      (S
                        (NP (PRP it))
                        (VP (VBD exploded) (, ,)
                          (S
                            (VP (VBG killing)
                              (NP (PRP her))
                              (ADVP (RB instantly))
                              (, ,)
                              (SBAR (RB even) (IN though)
                                (S
                                  (NP (PRP she))
                                  (VP (VBD was)
                                    (VP (VBG wearing)
                                      (NP (PRP$ her) (NN seat) (NN belt)))))))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD should) (RB n't)
      (VP (VB wear)
        (NP (DT a) (NN seat) (NN belt))
        (ADVP (RB either))
        (, ,)
        (ADVP (RB right))))
    (. ?)))

prep(wear-39, Given-1)
det(logic-3, that-2)
dep(Given-1, logic-3)
det(fact-6, the-5)
appos(logic-3, fact-6)
complm(killed-11, that-7)
poss(aunt-9, my-8)
nsubjpass(killed-11, aunt-9)
auxpass(killed-11, was-10)
dep(fact-6, killed-11)
advmod(hit-16, when-12)
det(wheeler-15, an-13)
num(wheeler-15, 18-14)
nsubj(hit-16, wheeler-15)
advcl(killed-11, hit-16)
poss(car-18, her-17)
dobj(hit-16, car-18)
nsubj(exploded-21, it-20)
advcl(killed-11, exploded-21)
conj_and(hit-16, exploded-21)
xcomp(exploded-21, killing-23)
dobj(killing-23, her-24)
advmod(killing-23, instantly-25)
advmod(wearing-31, even-27)
dep(wearing-31, though-28)
nsubj(wearing-31, she-29)
aux(wearing-31, was-30)
dep(killing-23, wearing-31)
poss(belt-34, her-32)
nn(belt-34, seat-33)
dobj(wearing-31, belt-34)
nsubj(wear-39, I-36)
aux(wear-39, should-37)
neg(wear-39, n't-38)
root(ROOT-0, wear-39)
det(belt-42, a-40)
nn(belt-42, seat-41)
dobj(wear-39, belt-42)
advmod(wear-39, either-43)
advmod(wear-39, right-45)

(ROOT
  (FRAG
    (ADJP (JJ Wrong))
    (. .)))

root(ROOT-0, Wrong-1)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (DT the) (NN fact))
        (VP (VBZ is))))
    (, ,)
    (NP (DT both) (NN seat) (NNS belts)
      (CC and)
      (NNS guns))
    (VP (VBP save)
      (NP
        (NP (NNS lives))
        (NP (DT every) (NN day))))
    (. .)))

mark(is-4, Because-1)
det(fact-3, the-2)
nsubj(is-4, fact-3)
advcl(save-11, is-4)
preconj(belts-8, both-6)
nn(belts-8, seat-7)
nsubj(save-11, belts-8)
conj_and(belts-8, guns-10)
nsubj(save-11, guns-10)
root(ROOT-0, save-11)
dobj(save-11, lives-12)
det(day-14, every-13)
dep(lives-12, day-14)

(ROOT
  (S
    (SBAR (RB Just) (IN because)
      (S
        (ADVP (RB sometimes))
        (NP (PRP they))
        (VP (VBP do) (RB n't)
          (VP (VB do)
            (NP (PRP it))))))
    (, ,)
    (S
      (VP (VBZ does) (RB n't)
        (VP (VB mean)
          (NP (PRP you)))))
    (VP (MD should) (RB n't)
      (VP (VB take)
        (NP (JJ proactive) (NNS steps))
        (S
          (VP (TO to)
            (VP (VB increase)
              (NP
                (NP (PRP$ your) (NNS chances))
                (PP (IN of)
                  (S
                    (VP (VBG surviving)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (JJ bad) (NNS things))
                          (VP (VBP happen)))))))))))))
    (. .)))

advmod(do-7, Just-1)
dep(do-7, because-2)
advmod(do-7, sometimes-3)
nsubj(do-7, they-4)
aux(do-7, do-5)
neg(do-7, n't-6)
advcl(take-16, do-7)
dobj(do-7, it-8)
aux(mean-12, does-10)
neg(mean-12, n't-11)
csubj(take-16, mean-12)
dobj(mean-12, you-13)
aux(take-16, should-14)
neg(take-16, n't-15)
root(ROOT-0, take-16)
amod(steps-18, proactive-17)
dobj(take-16, steps-18)
aux(increase-20, to-19)
xcomp(take-16, increase-20)
poss(chances-22, your-21)
dobj(increase-20, chances-22)
prepc_of(chances-22, surviving-24)
advmod(happen-28, when-25)
amod(things-27, bad-26)
nsubj(happen-28, things-27)
advcl(surviving-24, happen-28)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB leave)
              (NP (PRP$ your) (NN question) (NN unanswered)))))))
    (. .)))

cc(want-5, But-1)
nsubj(want-5, I-2)
xsubj(leave-7, I-2)
aux(want-5, do-3)
neg(want-5, n't-4)
root(ROOT-0, want-5)
aux(leave-7, to-6)
xcomp(want-5, leave-7)
poss(unanswered-10, your-8)
nn(unanswered-10, question-9)
dobj(leave-7, unanswered-10)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ your) (NN situation)))
    (, ,)
    (NP (NNS chances))
    (VP (VBP are)
      (NP
        (NP (PRP$ my) (NN gun))
        (SBAR
          (S
            (VP (MD would)
              (VP (VB be)
                (ADJP (RB completely) (JJ useless))))))))
    (. .)))

poss(situation-3, your-2)
prep_in(gun-8, situation-3)
nsubj(gun-8, chances-5)
cop(gun-8, are-6)
poss(gun-8, my-7)
root(ROOT-0, gun-8)
aux(useless-12, would-9)
cop(useless-12, be-10)
advmod(useless-12, completely-11)
rcmod(gun-8, useless-12)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ does) (RB n't)
      (ADVP (RB always))
      (VP (VB turn)
        (PRT (RP out))
        (NP (DT that) (NN way))))
    (. .)))

cc(turn-6, But-1)
nsubj(turn-6, it-2)
aux(turn-6, does-3)
neg(turn-6, n't-4)
advmod(turn-6, always-5)
root(ROOT-0, turn-6)
prt(turn-6, out-7)
det(way-9, that-8)
dobj(turn-6, way-9)

