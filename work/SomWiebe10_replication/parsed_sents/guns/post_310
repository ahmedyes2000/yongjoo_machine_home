(ROOT
  (UCP
    (VP (VBN Safer)
      (PP (IN from)
        (NP (NNS criminals))))
    (CC or)
    (ADJP
      (ADJP (JJR safer))
      (PP (IN in)
        (S
          (VP (VBG protecting)
            (NP (PRP$ our) (NNS freedoms)))))
      (. ?))))

root(ROOT-0, Safer-1)
prep_from(Safer-1, criminals-3)
conj_or(Safer-1, safer-5)
prepc_in(safer-5, protecting-7)
poss(freedoms-9, our-8)
dobj(protecting-7, freedoms-9)

(ROOT
  (S
    (PP (IN In)
      (NP
        (ADJP (NN plain)
          (CC and)
          (NN simple))
        (NNS words)))
    (, ,)
    (NP (DT the) (NNP Second) (NNP Amendment))
    (VP (VBZ allows)
      (S
        (NP (JJ American) (NNS citizens))
        (NP
          (NP (DT the) (NN option))
          (PP (IN of)
            (S
              (VP (VBG overthrowing)
                (NP (DT a) (JJ corrupt) (NN government))
                (SBAR (IN if)
                  (S
                    (NP (DT the) (NN need))
                    (ADVP (RB ever))
                    (VP (VBZ arises))))))))))
    (. .)))

amod(words-5, plain-2)
conj_and(plain-2, simple-4)
amod(words-5, simple-4)
prep_in(allows-10, words-5)
det(Amendment-9, the-7)
nn(Amendment-9, Second-8)
nsubj(allows-10, Amendment-9)
root(ROOT-0, allows-10)
amod(citizens-12, American-11)
nsubj(option-14, citizens-12)
det(option-14, the-13)
xcomp(allows-10, option-14)
prepc_of(option-14, overthrowing-16)
det(government-19, a-17)
amod(government-19, corrupt-18)
dobj(overthrowing-16, government-19)
mark(arises-24, if-20)
det(need-22, the-21)
nsubj(arises-24, need-22)
advmod(arises-24, ever-23)
advcl(overthrowing-16, arises-24)

(ROOT
  (NP
    (NP
      (NP (RB Not) (NNS laws))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VB punish)
            (NP (NNS citizens))))))
    (PP (IN for)
      (S
        (VP (VBG exercising)
          (NP (PRP$ their) (NNS Rights)))))
    (. .)))

neg(laws-2, Not-1)
root(ROOT-0, laws-2)
nsubj(punish-4, laws-2)
rcmod(laws-2, punish-4)
dobj(punish-4, citizens-5)
prepc_for(laws-2, exercising-7)
poss(Rights-9, their-8)
dobj(exercising-7, Rights-9)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN seen)
        (NP
          (NP (DT a) (JJ great) (NN increase))
          (PP (IN in)
            (NP (NN firearm)
              (CC and)
              (NN ammuniton) (NNS purchases))))))
    (. .)))

nsubj(seen-3, We-1)
aux(seen-3, 've-2)
root(ROOT-0, seen-3)
det(increase-6, a-4)
amod(increase-6, great-5)
dobj(seen-3, increase-6)
nn(purchases-11, firearm-8)
conj_and(firearm-8, ammuniton-10)
nn(purchases-11, ammuniton-10)
prep_in(increase-6, purchases-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB believe)
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (VBP are)
              (PP (IN in)
                (NP
                  (NP (NN fear))
                  (PP (IN of)
                    (NP (NN crime)))))
              (ADJP (RB as) (JJ much)
                (PP (IN as)
                  (S
                    (VP (VBG loosing)
                      (NP (PRP$ their) (NN freedom)))))))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
complm(much-13, that-5)
nsubj(much-13, people-6)
cop(much-13, are-7)
prep_in(much-13, fear-9)
prep_of(fear-9, crime-11)
advmod(much-13, as-12)
ccomp(believe-4, much-13)
prepc_as(much-13, loosing-15)
poss(freedom-17, their-16)
dobj(loosing-15, freedom-17)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB honestly))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT any) (JJ new) (NNS laws))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VB restrict)
                  (CC or)
                  (VB limit)
                  (NP (DT the) (NNP Right))
                  (PP (TO to)
                    (NP (JJ bare) (NNS arms)))))))
          (VP (MD will)
            (VP (VB cause)
              (NP (DT a) (JJ second) (NNP Revolutionary) (NNP War)))))))
    (. .)))

nsubj(believe-3, I-1)
advmod(believe-3, honestly-2)
root(ROOT-0, believe-3)
complm(cause-18, that-4)
det(laws-7, any-5)
amod(laws-7, new-6)
nsubj(restrict-9, laws-7)
nsubj(limit-11, laws-7)
nsubj(cause-18, laws-7)
rcmod(laws-7, restrict-9)
rcmod(laws-7, limit-11)
conj_or(restrict-9, limit-11)
det(Right-13, the-12)
dobj(restrict-9, Right-13)
amod(arms-16, bare-15)
prep_to(restrict-9, arms-16)
aux(cause-18, will-17)
ccomp(believe-3, cause-18)
det(War-22, a-19)
amod(War-22, second-20)
nn(War-22, Revolutionary-21)
dobj(cause-18, War-22)

(ROOT
  (S
    (NP (DT These) (JJ anti) (NNP Second) (NNP Amendment) (NNS people))
    (VP (VBP know)
      (ADVP (RB not)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP they))
            (VP (VBP do))))))
    (. .)))

det(people-5, These-1)
amod(people-5, anti-2)
nn(people-5, Second-3)
nn(people-5, Amendment-4)
nsubj(know-6, people-5)
root(ROOT-0, know-6)
neg(know-6, not-7)
dobj(do-10, what-8)
nsubj(do-10, they-9)
dep(not-7, do-10)

(ROOT
  (S
    (NP (DT The) (VBG Founding) (NNS Fathers))
    (VP (VBD saw)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (NNP England))
          (VP (VBD tried)
            (S
              (VP (TO to)
                (VP (VB disarm)
                  (NP (DT the) (NNPS Colonials))
                  (SBAR (IN in) (NN order)
                    (S
                      (VP (TO to)
                        (VP (VB control)
                          (NP (PRP them)))))))))))))
    (. .)))

det(Fathers-3, The-1)
amod(Fathers-3, Founding-2)
nsubj(saw-4, Fathers-3)
root(ROOT-0, saw-4)
advmod(tried-7, how-5)
nsubj(tried-7, England-6)
xsubj(disarm-9, England-6)
ccomp(saw-4, tried-7)
aux(disarm-9, to-8)
xcomp(tried-7, disarm-9)
det(Colonials-11, the-10)
dobj(disarm-9, Colonials-11)
mark(control-15, in-12)
dep(control-15, order-13)
aux(control-15, to-14)
purpcl(disarm-9, control-15)
dobj(control-15, them-16)

(ROOT
  (S
    (NP (NNP The))
    (VP (VBD wanted)
      (S
        (VP (TO to)
          (VP (VB ensure)
            (SBAR (IN that)
              (S
                (NP (JJ American) (NNS citizens))
                (VP (MD would)
                  (ADVP (RB always))
                  (VP (VB have)
                    (NP
                      (NP (DT the) (NN right))
                      (PP (TO to)
                        (NP (JJ own)
                          (CC and)
                          (JJ bare) (NNS arms)))
                      (, ,)
                      (NP (RB thus) (DT the) (NNS words))
                      (, ,) ('' '')))))
              (. .))))))
    (. .)))

nsubj(wanted-2, The-1)
xsubj(ensure-4, The-1)
root(ROOT-0, wanted-2)
aux(ensure-4, to-3)
xcomp(wanted-2, ensure-4)
complm(have-10, that-5)
amod(citizens-7, American-6)
nsubj(have-10, citizens-7)
aux(have-10, would-8)
advmod(have-10, always-9)
ccomp(ensure-4, have-10)
det(right-12, the-11)
dobj(have-10, right-12)
amod(arms-17, own-14)
conj_and(own-14, bare-16)
amod(arms-17, bare-16)
prep_to(right-12, arms-17)
advmod(words-21, thus-19)
det(words-21, the-20)
appos(right-12, words-21)

(ROOT
  (S
    (VP (MD shall) (RB not)
      (VP (VB be)
        (VP (VBN infringed) ('' ''))))
    (. .)))

aux(infringed-4, shall-1)
neg(infringed-4, not-2)
auxpass(infringed-4, be-3)
root(ROOT-0, infringed-4)

(ROOT
  (S
    (NP (DT The) (NN government))
    (VP (MD should)
      (ADVP (RB always))
      (VP (VB fear)
        (NP
          (NP (DT the) (NNS people))
          (, ,) (RB not)
          (NP (DT the) (JJ other) (NN way)))
        (ADVP (RB around))))
    (. .)))

det(government-2, The-1)
nsubj(fear-5, government-2)
aux(fear-5, should-3)
advmod(fear-5, always-4)
root(ROOT-0, fear-5)
det(people-7, the-6)
dobj(fear-5, people-7)
neg(people-7, not-9)
det(way-12, the-10)
amod(way-12, other-11)
dep(people-7, way-12)
advmod(fear-5, around-13)

(ROOT
  (S
    (S
      (NP (JJ Other) (NNS checks)
        (CC and)
        (NNS balances))
      (VP (VBD were)
        (VP (VBN written)
          (PP (IN in)
            (NP
              (NP (DT the) (NNP Constitution))
              (PP (IN for)
                (NP (DT the) (NNS people)))))
          (S
            (VP (TO to)
              (VP (VB use)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (VBG Founding) (NNS Fathers))
      (VP (VBD knew)
        (PP (IN from)
          (NP (NN experience)))
        (SBAR (IN that)
          (S
            (NP
              (NP (JJ only) (NNS citizens))
              (PP (IN with)
                (NP (NNS firearms))))
            (VP (MD could)
              (ADVP (RB truely))
              (VP (VB be)
                (ADJP (JJ free))))))))
    (. .)))

amod(checks-2, Other-1)
nsubjpass(written-6, checks-2)
xsubj(use-14, checks-2)
conj_and(checks-2, balances-4)
nsubjpass(written-6, balances-4)
xsubj(use-14, balances-4)
auxpass(written-6, were-5)
root(ROOT-0, written-6)
det(Constitution-9, the-8)
prep_in(written-6, Constitution-9)
det(people-12, the-11)
prep_for(Constitution-9, people-12)
aux(use-14, to-13)
xcomp(written-6, use-14)
det(Fathers-19, the-17)
amod(Fathers-19, Founding-18)
nsubj(knew-20, Fathers-19)
conj_but(written-6, knew-20)
prep_from(knew-20, experience-22)
complm(free-31, that-23)
amod(citizens-25, only-24)
nsubj(free-31, citizens-25)
prep_with(citizens-25, firearms-27)
aux(free-31, could-28)
advmod(free-31, truely-29)
cop(free-31, be-30)
ccomp(knew-20, free-31)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ many) (JJ elected) (NNS people))
        (NP (NN today))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD would)
              (VP (VB have)
                (VP (VBN been)
                  (VP (VBN hung)
                    (PP (IN for)
                      (NP
                        (NP (NNS treason))
                        (PP (IN in)
                          (NP (DT the) (JJ late) (CD 1700) (NNS 's)))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(people-5, many-3)
amod(people-5, elected-4)
nsubj(are-2, people-5)
dep(people-5, today-6)
nsubjpass(hung-11, today-6)
aux(hung-11, would-8)
aux(hung-11, have-9)
auxpass(hung-11, been-10)
rcmod(people-5, hung-11)
rcmod(today-6, hung-11)
prep_for(hung-11, treason-13)
det('s-18, the-15)
amod('s-18, late-16)
num('s-18, 1700-17)
prep_in(treason-13, 's-18)

(ROOT
  (S
    (NP (JJ Many) (NNS citizens))
    (NP (NN today))
    (VP (VBP are)
      (VP (VBN fed)
        (PRT (RP up))
        (PP (IN with)
          (NP
            (NP (DT the) (NN government))
            (VP (VBG restricting)
              (NP (PRP$ their) (NNS freedoms)))))))
    (. .)))

amod(citizens-2, Many-1)
nsubjpass(fed-5, citizens-2)
nsubjpass(fed-5, today-3)
auxpass(fed-5, are-4)
root(ROOT-0, fed-5)
prt(fed-5, up-6)
det(government-9, the-8)
prep_with(fed-5, government-9)
partmod(government-9, restricting-10)
poss(freedoms-12, their-11)
dobj(restricting-10, freedoms-12)

(ROOT
  (S
    (NP
      (NP (NNS Treaties))
      (VP (VBG being)
        (VP (VBN made)
          (SBAR (IN that)
            (S
              (VP (VBP are) (RB not)
                (PP (IN in)
                  (NP
                    (NP (NN accord))
                    (PP (IN with)
                      (NP
                        (NP (PRP$ our) (NN Bill))
                        (PP (IN of)
                          (NP (NNS Rights)
                            (CC and)
                            (NNS laws)))))))))))))
    (VP (VBP create)
      (S
        (NP (`` ``) (UH permits) ('' '')
          (CC and)
          (`` ``) (UH licenses) ('' ''))
        (VP (TO to)
          (VP (VB exercise)
            (S
              (NP (PRP$ our) (NNS Rights))
              (VP (VB go)
                (PP (IN against)
                  (S
                    (VP (VBG preserving)
                      (NP (PRP$ our) (NNS freedoms)))))))))))
    (. .)))

nsubj(create-16, Treaties-1)
auxpass(made-3, being-2)
partmod(Treaties-1, made-3)
complm(are-5, that-4)
ccomp(made-3, are-5)
neg(are-5, not-6)
prep_in(are-5, accord-8)
poss(Bill-11, our-10)
prep_with(accord-8, Bill-11)
prep_of(Bill-11, Rights-13)
prep_of(Bill-11, laws-15)
conj_and(Rights-13, laws-15)
root(ROOT-0, create-16)
nsubj(exercise-25, permits-18)
conj_and(permits-18, licenses-22)
nsubj(exercise-25, licenses-22)
aux(exercise-25, to-24)
xcomp(create-16, exercise-25)
poss(Rights-27, our-26)
nsubj(go-28, Rights-27)
ccomp(exercise-25, go-28)
prepc_against(go-28, preserving-30)
poss(freedoms-32, our-31)
dobj(preserving-30, freedoms-32)

(ROOT
  (S
    (NP (NNS Laws))
    (VP (VBP are)
      (VP (VBN needed)
        (S
          (VP (TO to)
            (VP (VB punish)
              (NP
                (NP (NNS citizens))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ abuse)
                      (NP (PRP$ their) (NNS Rights)))))))))))
    (. .)))

nsubjpass(needed-3, Laws-1)
xsubj(punish-5, Laws-1)
auxpass(needed-3, are-2)
root(ROOT-0, needed-3)
aux(punish-5, to-4)
xcomp(needed-3, punish-5)
dobj(punish-5, citizens-6)
nsubj(abuse-8, citizens-6)
rcmod(citizens-6, abuse-8)
poss(Rights-10, their-9)
dobj(abuse-8, Rights-10)

