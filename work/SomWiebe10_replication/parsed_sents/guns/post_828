(ROOT
  (S
    (S
      (NP (JJ Guns) (NN dont))
      (VP (VBP need)
        (NP (DT a) (NN rule) (NN book))))
    (, ,)
    (S
      (NP (NNS people))
      (VP (VBP need)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN trained)
                (PP (IN in)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP they))
                      (VP (VBP are)
                        (VP (VBG using))))))))))))
    (CC and)
    (S
      (NP (JJS most) (NN citizen))
      (VP (VBP have)
        (ADVP (RB never))
        (VP (VBN taken)
          (NP (DT a) (NN gun) (NN safety) (NN course)))))
    (. .)))

amod(dont-2, Guns-1)
nsubj(need-3, dont-2)
root(ROOT-0, need-3)
det(book-6, a-4)
nn(book-6, rule-5)
dobj(need-3, book-6)
nsubj(need-9, people-8)
xsubj(trained-12, people-8)
conj_and(need-3, need-9)
aux(trained-12, to-10)
auxpass(trained-12, be-11)
xcomp(need-9, trained-12)
dobj(using-17, what-14)
nsubj(using-17, they-15)
aux(using-17, are-16)
prepc_in(trained-12, using-17)
amod(citizen-20, most-19)
nsubj(taken-23, citizen-20)
aux(taken-23, have-21)
neg(taken-23, never-22)
conj_and(need-3, taken-23)
det(course-27, a-24)
nn(course-27, gun-25)
nn(course-27, safety-26)
dobj(taken-23, course-27)

(ROOT
  (S
    (S
      (NP (NNS People))
      (VP (VBP do)
        (VP (VB have)
          (NP (NNS rights)))))
    (CC but)
    (S
      (NP (PRP they))
      (VP (MD should) (RB not)
        (VP (VB have)
          (NP (DT the)
            (ADJP (JJ right)
              (PP (TO to)
                (NP (NN end) (NNS someones))))
            (NN life))
          (SBAR (IN because)
            (S
              (NP (PRP they))
              (VP (VBD were)
                (ADJP (VBN scared)
                  (SBAR
                    (S
                      (NP (DT the) (NN MIGHT))
                      (VP
                        (VP (VBZ loose)
                          (NP (PRP$ their) (JJ own)))
                        (, ,)
                        (CC and)
                        (VP (VBZ thats)
                          (NP (DT the) (NN self) (NN defense) (NN argument)))))))))))))
    (. .)))

nsubj(have-3, People-1)
aux(have-3, do-2)
root(ROOT-0, have-3)
dobj(have-3, rights-4)
nsubj(have-9, they-6)
aux(have-9, should-7)
neg(have-9, not-8)
conj_but(have-3, have-9)
det(life-15, the-10)
amod(life-15, right-11)
nn(someones-14, end-13)
prep_to(right-11, someones-14)
dobj(have-9, life-15)
mark(scared-19, because-16)
nsubjpass(scared-19, they-17)
auxpass(scared-19, were-18)
advcl(have-9, scared-19)
det(MIGHT-21, the-20)
nsubj(loose-22, MIGHT-21)
nsubj(thats-27, MIGHT-21)
dep(scared-19, loose-22)
poss(own-24, their-23)
dobj(loose-22, own-24)
dep(scared-19, thats-27)
conj_and(loose-22, thats-27)
det(argument-31, the-28)
nn(argument-31, self-29)
nn(argument-31, defense-30)
dobj(thats-27, argument-31)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (ADVP (RB wanna))
        (VP (VBP feel)
          (ADJP (JJ safe)))))
    (NP (EX there))
    (VP (VBP are)
      (NP
        (ADJP (RB so) (JJ many))
        (ADJP (RBR less) (JJ barbaric)
          (CC and)
          (JJ deadly))
        (NNS options))
      (PP (RB then)
        (NP (DT a) (NN gun))))
    (. .)))

mark(feel-4, If-1)
nsubj(feel-4, you-2)
advmod(feel-4, wanna-3)
advcl(are-7, feel-4)
acomp(feel-4, safe-5)
expl(are-7, there-6)
root(ROOT-0, are-7)
advmod(many-9, so-8)
amod(options-14, many-9)
advmod(barbaric-11, less-10)
amod(options-14, barbaric-11)
conj_and(barbaric-11, deadly-13)
amod(options-14, deadly-13)
nsubj(are-7, options-14)
prep(are-7, then-15)
det(gun-17, a-16)
pobj(then-15, gun-17)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (NP
        (NP (NNS humans))
        (, ,) (RB not)
        (NP (NNS deer))))
    (. .)))

nsubj(humans-3, We-1)
cop(humans-3, are-2)
root(ROOT-0, humans-3)
neg(humans-3, not-5)
dep(humans-3, deer-6)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP
          (VP (VB pepper)
            (NP (NN spray)))
          (CC and)
          (VP (VB tase)
            (NP (DT an) (NN intruder))))))
    (, ,)
    (WHNP (WP what) (JJR more))
    (SQ (MD can)
      (NP (PRP they))
      (VP (VB do)))
    (. ?)))

mark(pepper-3, If-1)
nsubj(pepper-3, you-2)
nsubj(tase-6, you-2)
advcl(do-14, pepper-3)
dobj(pepper-3, spray-4)
conj_and(pepper-3, tase-6)
advcl(do-14, tase-6)
det(intruder-8, an-7)
dobj(tase-6, intruder-8)
dep(more-11, what-10)
dobj(do-14, more-11)
aux(do-14, can-12)
nsubj(do-14, they-13)
root(ROOT-0, do-14)

(ROOT
  (S
    (S
      (S
        (NP (PRP They))
        (ADVP (RB cant))
        (VP (VB see)
          (CC or)
          (VB move)))
      (: ...) (RB so)
      (S
        (NP (PRP they))
        (VP (MD cant)
          (VP (VB shoot)
            (NP (PRP you))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (ADVP (RB still))
        (ADJP (JJ alive))))
    (. .)))

nsubj(see-3, They-1)
nsubj(move-5, They-1)
advmod(see-3, cant-2)
root(ROOT-0, see-3)
conj_or(see-3, move-5)
advmod(see-3, so-7)
nsubj(cant-9, they-8)
dep(see-3, cant-9)
dep(cant-9, shoot-10)
dobj(shoot-10, you-11)
nsubj(alive-16, they-13)
cop(alive-16, are-14)
advmod(alive-16, still-15)
conj_and(see-3, alive-16)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP do)
        (VP (VB have)
          (NP (DT a) (JJ free) (NN country)))))
    (, ,)
    (NP (PRP we))
    (VP (MD should)
      (VP (VB make)
        (S
          (NP (PRP it))
          (ADJP (JJ safe))
          (ADVP (RB too)))))
    (. .)))

nsubj(have-3, We-1)
aux(have-3, do-2)
ccomp(make-10, have-3)
det(country-6, a-4)
amod(country-6, free-5)
dobj(have-3, country-6)
nsubj(make-10, we-8)
aux(make-10, should-9)
root(ROOT-0, make-10)
nsubj(safe-12, it-11)
xcomp(make-10, safe-12)
advmod(safe-12, too-13)

