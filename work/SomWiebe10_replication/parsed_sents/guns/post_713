(ROOT
  (S
    (NP (DT A) (NN gun) (NN permit))
    (VP (VBZ has)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP
                  (NP (NNS grenades))
                  (, ,)
                  (NP (FW bombs) (FW etc.)))))))))
    (: ...)))

det(permit-3, A-1)
nn(permit-3, gun-2)
nsubj(has-4, permit-3)
root(ROOT-0, has-4)
dobj(has-4, nothing-5)
aux(do-7, to-6)
infmod(nothing-5, do-7)
prep_with(do-7, grenades-9)
nn(etc.-12, bombs-11)
appos(grenades-9, etc.-12)

(ROOT
  (S
    (VP (VBZ lets)
      (VP (VB be)
        (ADJP (JJ real))))
    (. .)))

root(ROOT-0, lets-1)
cop(real-3, be-2)
dep(lets-1, real-3)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBN licensed)
            (CC and)
            (VBN trusted)
            (S
              (VP (TO to)
                (VP (VB carry)
                  (NP (RB everywhere) (RB else))
                  (PP (IN in)
                    (NP (DT the) (NN state))))))))))
    (WHNP (WP what))
    (SQ
      (VP (VBZ is)
        (ADJP (JJ special)
          (PP (IN about)
            (NP (DT a) (NN school))))))
    (. ?)))

mark(licensed-4, If-1)
nsubjpass(licensed-4, you-2)
nsubjpass(trusted-6, you-2)
xsubj(carry-8, you-2)
auxpass(licensed-4, are-3)
dep(special-16, licensed-4)
conj_and(licensed-4, trusted-6)
dep(special-16, trusted-6)
aux(carry-8, to-7)
xcomp(licensed-4, carry-8)
advmod(else-10, everywhere-9)
dobj(carry-8, else-10)
det(state-13, the-12)
prep_in(carry-8, state-13)
nsubj(special-16, what-14)
cop(special-16, is-15)
root(ROOT-0, special-16)
det(school-19, a-18)
prep_about(special-16, school-19)

(ROOT
  (S (CC Either)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP
          (VP (VB be)
            (VP (VBN trusted)))
          (CC and)
          (VP (VB pass)
            (NP (DT the) (NN background) (NN check))))))
    (CC or)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)))
    (. .)))

preconj(trusted-5, Either-1)
nsubjpass(trusted-5, you-2)
nsubj(pass-7, you-2)
aux(trusted-5, can-3)
auxpass(trusted-5, be-4)
root(ROOT-0, trusted-5)
conj_and(trusted-5, pass-7)
det(check-10, the-8)
nn(check-10, background-9)
dobj(pass-7, check-10)
nsubj(do-13, you-12)
conj_or(trusted-5, do-13)
neg(do-13, n't-14)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (NN nothing) (NN magic))
        (PP (IN about)
          (S
            (VP (VBG crossing)
              (NP (DT a) (NN line))
              (PP (IN onto)
                (NP
                  (NP (NN school) (NN property))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD will)
                        (ADVP (RB suddenly))
                        (VP (VB make)
                          (S
                            (NP (DT a) (JJ licensed) (NN gun) (NN owner))
                            (ADJP (RBR less) (JJ responsible)
                              (SBAR (IN than)
                                (S
                                  (NP (NN he\/she))
                                  (VP (VBD was)
                                    (ADVP (RB off))
                                    (PP (IN of)
                                      (NP (NN school) (NN property)))))))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nn(magic-4, nothing-3)
nsubj(is-2, magic-4)
prepc_about(magic-4, crossing-6)
det(line-8, a-7)
dobj(crossing-6, line-8)
nn(property-11, school-10)
prep_onto(crossing-6, property-11)
nsubj(make-15, property-11)
aux(make-15, will-13)
advmod(make-15, suddenly-14)
rcmod(property-11, make-15)
det(owner-19, a-16)
amod(owner-19, licensed-17)
nn(owner-19, gun-18)
nsubj(responsible-21, owner-19)
advmod(responsible-21, less-20)
xcomp(make-15, responsible-21)
mark(was-24, than-22)
nsubj(was-24, he\/she-23)
dep(responsible-21, was-24)
nn(property-28, school-27)
prep_off_of(was-24, property-28)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR (RB just)
        (S
          (NP (DT another))
          (VP (VBP feel)
            (NP
              (NP (JJ good) (NN rule))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (VP (VBG costing)
                      (NP (NNS lives))
                      (ADVP (RB again)))))))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
advmod(feel-5, just-3)
nsubj(feel-5, another-4)
ccomp(is-2, feel-5)
amod(rule-7, good-6)
dobj(feel-5, rule-7)
nsubj(costing-10, rule-7)
aux(costing-10, is-9)
rcmod(rule-7, costing-10)
dobj(costing-10, lives-11)
advmod(costing-10, again-12)

