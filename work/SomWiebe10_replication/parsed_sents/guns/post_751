(ROOT
  (S
    (S
      (NP (DT These) (NNS examples))
      (VP (VBP do)
        (NP
          (NP (DT a) (JJ good) (NN job))
          (PP (IN of)
            (S
              (VP (VBG proving)
                (NP (DT the) (NN point))
                (SBAR (IN that)
                  (S
                    (NP (PRP they) (NNS guns))
                    (VP (MD should)
                      (VP (VB be)
                        (ADVP (RB aloud))
                        (PP (IN on)
                          (NP (NN campus)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (FW i))
      (VP
        (VP (MD ca) (RB n't)
          (VP (VB help)))
        (CC but)
        (VP (VBP notice)
          (SBAR (IN that)
            (S
              (SBAR (IN if)
                (S
                  (NP (NNS guns))
                  (VP (VBD were)
                    (ADJP (JJ illegal)
                      (PP (IN in)
                        (NP (DT the) (JJ first) (NN place)))))))
              (ADVP (RB then))
              (NP (DT the) (NN problem))
              (VP (MD would)
                (ADVP (RB never))
                (VP (VBD had)
                  (VP (VBN originated)))))))))
    (. .)))

det(examples-2, These-1)
nsubj(do-3, examples-2)
root(ROOT-0, do-3)
det(job-6, a-4)
amod(job-6, good-5)
dobj(do-3, job-6)
prepc_of(job-6, proving-8)
det(point-10, the-9)
dobj(proving-8, point-10)
complm(be-15, that-11)
dep(guns-13, they-12)
nsubj(be-15, guns-13)
aux(be-15, should-14)
ccomp(proving-8, be-15)
advmod(be-15, aloud-16)
prep_on(be-15, campus-18)
nsubj(help-24, i-21)
nsubj(notice-26, i-21)
aux(help-24, ca-22)
neg(help-24, n't-23)
conj_but(do-3, help-24)
conj_but(do-3, notice-26)
conj_but(help-24, notice-26)
complm(originated-42, that-27)
mark(illegal-31, if-28)
nsubj(illegal-31, guns-29)
cop(illegal-31, were-30)
advcl(originated-42, illegal-31)
det(place-35, the-33)
amod(place-35, first-34)
prep_in(illegal-31, place-35)
advmod(originated-42, then-36)
det(problem-38, the-37)
nsubj(originated-42, problem-38)
aux(originated-42, would-39)
neg(originated-42, never-40)
aux(originated-42, had-41)
ccomp(notice-26, originated-42)

(ROOT
  (S (CC And)
    (NP (FW i))
    (ADVP (RB just))
    (VP (MD wo) (RB n't)
      (VP (VB except)
        (NP (DT the) (NN argument))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP need)
              (S
                (NP (NNS guns))
                (VP (TO to)
                  (VP (VB keep)
                    (S
                      (NP (PRP us))
                      (ADJP (JJ safe)
                        (PP (IN from)
                          (NP
                            (NP (DT the) (NNS criminals))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (MD will)
                                  (VP (VB get)
                                    (NP (NNS guns))
                                    (ADVP (RB illegally))))))))))))))))))
    (. .)))

cc(except-6, And-1)
nsubj(except-6, i-2)
advmod(except-6, just-3)
aux(except-6, wo-4)
neg(except-6, n't-5)
root(ROOT-0, except-6)
det(argument-8, the-7)
dobj(except-6, argument-8)
complm(need-11, that-9)
nsubj(need-11, we-10)
ccomp(except-6, need-11)
nsubj(keep-14, guns-12)
aux(keep-14, to-13)
xcomp(need-11, keep-14)
nsubj(safe-16, us-15)
xcomp(keep-14, safe-16)
det(criminals-19, the-18)
prep_from(safe-16, criminals-19)
nsubj(get-22, criminals-19)
aux(get-22, will-21)
rcmod(criminals-19, get-22)
dobj(get-22, guns-23)
advmod(get-22, illegally-24)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT a)
                (ADJP (RBR more) (JJ mature))
                (NN solution))
              (ADJP (RB then) (DT that)))))))
    (. .)))

expl(has-2, There-1)
xsubj(solution-8, There-1)
root(ROOT-0, has-2)
aux(solution-8, to-3)
cop(solution-8, be-4)
det(solution-8, a-5)
advmod(mature-7, more-6)
amod(solution-8, mature-7)
xcomp(has-2, solution-8)
advmod(that-10, then-9)
amod(solution-8, that-10)

