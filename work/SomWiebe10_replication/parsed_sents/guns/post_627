(ROOT
  (SQ (NNP Does)
    (NP (DT a) (NN criminal))
    (VP (VB care)
      (PP (IN about)
        (NP (DT the) (NN law))))
    (. ?)))

dep(care-4, Does-1)
det(criminal-3, a-2)
nsubj(care-4, criminal-3)
root(ROOT-0, care-4)
det(law-7, the-6)
prep_about(care-4, law-7)

(ROOT
  (FRAG
    (ADVP (RB Obviously))
    (RB not) (. .)))

dep(not-2, Obviously-1)
root(ROOT-0, not-2)

(ROOT
  (S
    (PP (IN Without)
      (NP (DT the) (NN person)))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN tool))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ serves)
              (NP (DT no) (NN purpose)))))))
    (. .)))

det(person-3, the-2)
prep_without(have-6, person-3)
nsubj(have-6, you-5)
root(ROOT-0, have-6)
det(tool-8, a-7)
dobj(have-6, tool-8)
nsubj(serves-10, tool-8)
rcmod(tool-8, serves-10)
det(purpose-12, no-11)
dobj(serves-10, purpose-12)

(ROOT
  (S
    (NP (DT The) (NN onlyway)
      (S
        (VP (TO to)
          (VP (VB remove)
            (NP (DT the) (NN intent))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB remove)
            (NP
              (NP (DT the) (NN person))
              (, ,) (RB not)
              (NP (DT the) (NN tool)))))))
    (. .)))

det(onlyway-2, The-1)
nsubj(is-7, onlyway-2)
xsubj(remove-9, onlyway-2)
aux(remove-4, to-3)
infmod(onlyway-2, remove-4)
det(intent-6, the-5)
dobj(remove-4, intent-6)
root(ROOT-0, is-7)
aux(remove-9, to-8)
xcomp(is-7, remove-9)
det(person-11, the-10)
dobj(remove-9, person-11)
neg(person-11, not-13)
det(tool-15, the-14)
dep(person-11, tool-15)

(ROOT
  (S
    (NP (DT A) (NN weapon))
    (VP (VBZ comes)
      (PP
        (PP (IN in)
          (NP (JJ many) (NNS forms)))
        (, ,)
        (PP (IN from)
          (NP (DT a) (NN butter) (NN knife)))
        (, ,)
        (PP (TO to)
          (NP
            (NP
              (NP (DT a) (NN span))
              (PP (IN of)
                (NP
                  (NP (NN rope))
                  (VP (VBN used)
                    (PP (IN for)
                      (NP (DT a) (NN garrote)))))))
            (, ,)
            (CC or)
            (NP
              (NP (DT a) (NN baseball) (NN bat))
              (VP (VBN used)
                (S
                  (VP (TO to)
                    (VP (VB bludgeon))))))))))
    (. .)))

det(weapon-2, A-1)
nsubj(comes-3, weapon-2)
root(ROOT-0, comes-3)
amod(forms-6, many-5)
prep_in(comes-3, forms-6)
det(knife-11, a-9)
nn(knife-11, butter-10)
prep_from(comes-3, knife-11)
det(span-15, a-14)
prep_to(comes-3, span-15)
prep_of(span-15, rope-17)
partmod(rope-17, used-18)
det(garrote-21, a-20)
prep_for(used-18, garrote-21)
det(bat-26, a-24)
nn(bat-26, baseball-25)
prep_to(comes-3, bat-26)
conj_or(span-15, bat-26)
xsubj(bludgeon-29, bat-26)
partmod(bat-26, used-27)
aux(bludgeon-29, to-28)
xcomp(used-27, bludgeon-29)

(ROOT
  (SQ (NNP Should)
    (NP (PRP we))
    (VP (VB ban)
      (NP
        (NP (NN anything)
          (CC and)
          (NN everything))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBZ resembles)
                (NP (DT a) (NN weapon)))
              (, ,)
              (CC or)
              (VP (MD can)
                (VP (VB be)
                  (VP (VBN used)
                    (PP (IN as)
                      (NP (DT a) (NN weapon)))))))))))
    (. ?)))

dep(ban-3, Should-1)
nsubj(ban-3, we-2)
root(ROOT-0, ban-3)
dobj(ban-3, anything-4)
nsubj(weapon-10, anything-4)
nsubjpass(used-15, anything-4)
dobj(ban-3, everything-6)
conj_and(anything-4, everything-6)
nsubj(weapon-10, everything-6)
cop(weapon-10, resembles-8)
det(weapon-10, a-9)
rcmod(anything-4, weapon-10)
aux(used-15, can-13)
auxpass(used-15, be-14)
rcmod(anything-4, used-15)
conj_or(weapon-10, used-15)
det(weapon-18, a-17)
prep_as(used-15, weapon-18)

(ROOT
  (S
    (S
      (NP (NNP Might))
      (CONJP (RB as) (RB well))
      (VP (VBP ban)
        (NP
          (NP (DT all) (NNS forms))
          (PP (IN of)
            (S
              (VP (VBG writing)
                (NP (NNS utensils))))))
        (, ,)
        (PP (IN because)
          (NP (DT a) (NN pen)))))
    (, ,)
    (CC and)
    (S
      (NP (NN pencil))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN used)
            (PP (TO to)
              (NP (NN killa) (NN person)))))))
    (. .)))

root(ROOT-0, Might-1)
conj_and(Might-1, ban-4)
det(forms-6, all-5)
dobj(ban-4, forms-6)
prepc_of(forms-6, writing-8)
dobj(writing-8, utensils-9)
det(pen-13, a-12)
prep_because(ban-4, pen-13)
nsubjpass(used-19, pencil-16)
aux(used-19, can-17)
auxpass(used-19, be-18)
conj_and(Might-1, used-19)
nn(person-22, killa-21)
prep_to(used-19, person-22)

(ROOT
  (S
    (NP (NN Anything))
    (VP (MD can)
      (VP (VB become)
        (NP (DT a) (NN weapon))
        (, ,)
        (SBAR
          (ADVP (RB as) (RB long))
          (IN as)
          (S
            (NP (DT the) (NN person))
            (VP (VBZ has)
              (NP (DT the) (NN will)
                (CC and)
                (NN intent)
                (S
                  (VP (TO to)
                    (VP (VB makeit)
                      (ADVP (RB so)))))))))))
    (. .)))

nsubj(weapon-5, Anything-1)
aux(weapon-5, can-2)
cop(weapon-5, become-3)
det(weapon-5, a-4)
root(ROOT-0, weapon-5)
advmod(long-8, as-7)
advmod(has-12, long-8)
dep(has-12, as-9)
det(person-11, the-10)
nsubj(has-12, person-11)
dep(weapon-5, has-12)
det(will-14, the-13)
dobj(has-12, will-14)
dobj(has-12, intent-16)
conj_and(will-14, intent-16)
aux(makeit-18, to-17)
infmod(will-14, makeit-18)
advmod(makeit-18, so-19)

(ROOT
  (S
    (S
      (VP (VBG Banning)
        (NP (NNS guns))))
    (, ,)
    (ADVP (RB only))
    (VP (VBZ serves)
      (S
        (VP (TO to)
          (VP (VB prevent)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP wish)
                    (S
                      (VP (TO to)
                        (VP (VB arm)
                          (NP (PRP themselves))
                          (PP (IN against)
                            (NP
                              (NP (NNS forces) (NN unseenfrom))
                              (VP (VBG gaining)
                                (NP (NN access))
                                (S
                                  (VP (TO to)
                                    (VP (VBD said)
                                      (NP (NN protection)))))))))))))))))))
    (. .)))

dep(serves-5, Banning-1)
dobj(Banning-1, guns-2)
advmod(serves-5, only-4)
root(ROOT-0, serves-5)
aux(prevent-7, to-6)
xcomp(serves-5, prevent-7)
dobj(prevent-7, those-8)
nsubj(wish-10, those-8)
rcmod(those-8, wish-10)
aux(arm-12, to-11)
xcomp(wish-10, arm-12)
dobj(arm-12, themselves-13)
nn(unseenfrom-16, forces-15)
prep_against(arm-12, unseenfrom-16)
partmod(unseenfrom-16, gaining-17)
dobj(gaining-17, access-18)
aux(said-20, to-19)
xcomp(gaining-17, said-20)
dobj(said-20, protection-21)

(ROOT
  (S
    (NP (DT A) (NN person))
    (, ,)
    (VP (VBZ has)
      (NP
        (NP (DT the) (`` ``) (NN right) ('' ''))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB use)
                (NP
                  (NP (DT an) (JJ equal) (NN amount))
                  (PP (IN of)
                    (NP
                      (NP (NNS forceas))
                      (SBAR
                        (S
                          (NP (DT the) (NN aggressor))
                          (VP (VBZ is)
                            (VP (VBG using))))))))))))))
    (. .)))

det(person-2, A-1)
nsubj(has-4, person-2)
root(ROOT-0, has-4)
det(right-7, the-5)
dobj(has-4, right-7)
aux(use-10, to-9)
infmod(right-7, use-10)
det(amount-13, an-11)
amod(amount-13, equal-12)
dobj(use-10, amount-13)
prep_of(amount-13, forceas-15)
dobj(using-19, forceas-15)
det(aggressor-17, the-16)
nsubj(using-19, aggressor-17)
aux(using-19, is-18)
rcmod(forceas-15, using-19)

(ROOT
  (S
    (PP (RB Aside)
      (PP (IN from)
        (NP (DT that))))
    (, ,)
    (NP (PRP$ my) (JJ personal) (NN belief))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT a) (NN person))
          (VP (MD should)
            (ADVP (IN in) (DT the))
            (VP
              (VP (VB faceof)
                (NP (NN danger))
                (PP (TO to)
                  (NP (NN life) (, ,) (NN limb)
                    (CC or)
                    (NN eyesight))))
              (, ,)
              (VP (VB use)
                (SBAR
                  (WHNP (WDT whatever))
                  (S
                    (VP (VBZ means)
                      (PP (IN of)
                        (NP
                          (NP (NN force))
                          (PP (IN of)
                            (NP (NN escalation)))))
                      (PP (IN within)
                        (NP (PRP$ their) (NNS means)))))))
              (, ,)
              (VP (VB beit)
                (ADJP (JJ excessive)
                  (CC or)
                  (RB not))
                (, ,)
                (S
                  (VP (TO to)
                    (VP (VB retain)
                      (NP (PRP$ their) (JJ personage) (NN whole))))))
              (CC and)
              (VP (VB complete)))))))
    (. .)))

advcl(is-8, from-2)
prep_aside_from(is-8, that-3)
poss(belief-7, my-5)
amod(belief-7, personal-6)
nsubj(is-8, belief-7)
root(ROOT-0, is-8)
complm(faceof-15, that-9)
det(person-11, a-10)
nsubj(faceof-15, person-11)
nsubj(use-24, person-11)
nsubj(beit-35, person-11)
xsubj(retain-41, person-11)
nsubj(complete-46, person-11)
aux(faceof-15, should-12)
advmod(faceof-15, in-13)
dep(in-13, the-14)
ccomp(is-8, faceof-15)
dobj(faceof-15, danger-16)
prep_to(faceof-15, life-18)
prep_to(faceof-15, limb-20)
conj_or(life-18, limb-20)
prep_to(faceof-15, eyesight-22)
conj_or(life-18, eyesight-22)
ccomp(is-8, use-24)
conj_and(faceof-15, use-24)
nsubj(means-26, whatever-25)
ccomp(use-24, means-26)
prep_of(means-26, force-28)
prep_of(force-28, escalation-30)
poss(means-33, their-32)
prep_within(means-26, means-33)
ccomp(is-8, beit-35)
conj_and(faceof-15, beit-35)
acomp(beit-35, excessive-36)
acomp(beit-35, not-38)
conj_or(excessive-36, not-38)
neg(excessive-36, not-38)
aux(retain-41, to-40)
xcomp(beit-35, retain-41)
poss(whole-44, their-42)
amod(whole-44, personage-43)
dobj(retain-41, whole-44)
ccomp(is-8, complete-46)
conj_and(faceof-15, complete-46)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will) (RB not) (, ,)
      (ADVP (RB ever))
      (, ,)
      (VP (VB capitulate)
        (PP (TO to)
          (NP (DT a) (NN gun) (NN control) (NN law)))
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBP feel)
              (SBAR (IN that)
                (S (, ,)
                  (VP (VBD said)
                    (SBAR
                      (S
                        (NP (NN law))
                        (VP (VBZ violates)
                          (NP
                            (NP (PRP$ my) (JJ personal) (NNS motivations))
                            (PP (IN of)
                              (S
                                (VP (VBG protecting)
                                  (NP (PRP$ my) (NN family) (NN andmy) (NNS valuables)))))))))))))))))
    (. .)))

nsubj(capitulate-7, I-1)
aux(capitulate-7, will-2)
neg(capitulate-7, not-3)
advmod(capitulate-7, ever-5)
root(ROOT-0, capitulate-7)
det(law-12, a-9)
nn(law-12, gun-10)
nn(law-12, control-11)
prep_to(capitulate-7, law-12)
mark(feel-15, if-13)
nsubj(feel-15, I-14)
advcl(capitulate-7, feel-15)
complm(said-18, that-16)
ccomp(feel-15, said-18)
nsubj(violates-20, law-19)
ccomp(said-18, violates-20)
poss(motivations-23, my-21)
amod(motivations-23, personal-22)
dobj(violates-20, motivations-23)
prepc_of(motivations-23, protecting-25)
poss(valuables-29, my-26)
nn(valuables-29, family-27)
nn(valuables-29, andmy-28)
dobj(protecting-25, valuables-29)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (NN anyone))
          (VP (VBG advocating)
            (NP
              (NP (NN gun) (NN control) (NNS laws))
              (, ,)
              (NP (JJ and\/orcomplete) (NN anti) (NN fun) (NN prohibition)))))
        (VP (MD could)
          (VP (VB understand)
            (NP (DT that))
            (ADVP (DT no) (NN matter)
              (SBAR
                (WHADJP (WRB how) (JJ many))
                (S
                  (NP
                    (NP (NNS laws))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP pass) (, ,)
                          (S
                            (NP (PRP you))
                            (ADJP (JJ willnot)))))))
                  (VP (VB stop)
                    (NP (DT a) (JJ criminal))
                    (PP (IN from)
                      (S
                        (VP (VBG getting)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP they))
                              (VP (VBP want)))))))))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD might) (RB not)
      (ADVP (RB even))
      (VP (VB be)
        (VP (VBG having)
          (NP (DT this) (NN debate)))))
    (. .)))

mark(understand-13, If-1)
nsubj(understand-13, anyone-2)
partmod(anyone-2, advocating-3)
nn(laws-6, gun-4)
nn(laws-6, control-5)
dobj(advocating-3, laws-6)
amod(prohibition-11, and\/orcomplete-8)
nn(prohibition-11, anti-9)
nn(prohibition-11, fun-10)
appos(laws-6, prohibition-11)
aux(understand-13, could-12)
advcl(having-39, understand-13)
dobj(understand-13, that-14)
dep(matter-16, no-15)
advmod(understand-13, matter-16)
advmod(many-18, how-17)
dep(stop-25, many-18)
dobj(pass-21, laws-19)
nsubj(stop-25, laws-19)
nsubj(pass-21, you-20)
rcmod(laws-19, pass-21)
nsubj(willnot-24, you-23)
xcomp(pass-21, willnot-24)
dep(matter-16, stop-25)
det(criminal-27, a-26)
dobj(stop-25, criminal-27)
prepc_from(stop-25, getting-29)
dobj(want-32, what-30)
nsubj(want-32, they-31)
ccomp(getting-29, want-32)
nsubj(having-39, we-34)
aux(having-39, might-35)
neg(having-39, not-36)
advmod(having-39, even-37)
aux(having-39, be-38)
root(ROOT-0, having-39)
det(debate-41, this-40)
dobj(having-39, debate-41)

(ROOT
  (S
    (S
      (VP (VB Go)
        (PP (TO to)
          (NP
            (NP (DT a) (`` ``) (NN ghetto) ('' '') (NN talk))
            (PP (TO to)
              (NP (DT some) (NNS people)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB assure)
        (NP (PRP you))
        (, ,)
        (SBAR (IN that)
          (S
            (SBAR (IN before)
              (S
                (NP (DT the) (NN day))
                (VP (VBZ is)
                  (ADJP (RP over)))))
            (, ,)
            (NP (PRP you))
            (VP (MD will)
              (VP (VB have)
                (NP
                  (NP (NN acquireda) (NN weapon))
                  (PP (IN for)
                    (NP
                      (QP (IN between) (CD 100)
                        (CC and)
                        (CD 400))
                      (NNS dollars))))))))))
    (. .)))

ccomp(assure-14, Go-1)
det(talk-7, a-3)
nn(talk-7, ghetto-5)
prep_to(Go-1, talk-7)
det(people-10, some-9)
prep_to(talk-7, people-10)
nsubj(assure-14, I-12)
aux(assure-14, can-13)
root(ROOT-0, assure-14)
dobj(assure-14, you-15)
complm(have-26, that-17)
mark(over-22, before-18)
det(day-20, the-19)
nsubj(over-22, day-20)
cop(over-22, is-21)
advcl(have-26, over-22)
nsubj(have-26, you-24)
aux(have-26, will-25)
ccomp(assure-14, have-26)
nn(weapon-28, acquireda-27)
dobj(have-26, weapon-28)
quantmod(100-31, between-30)
num(dollars-34, 100-31)
conj_and(100-31, 400-33)
num(dollars-34, 400-33)
prep_for(weapon-28, dollars-34)

(ROOT
  (S
    (NP (DT A) (NN criminal))
    (VP (VBZ does) (RB n't)
      (VP (VB care)
        (SBAR
          (WHNP (WP what))
          (S
            (NP
              (NP (NNS laws))
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (VP (VBG breaking)))))
              (, ,)
              (SBAR
                (WHNP (DT all))
                (S
                  (NP (PRP they))
                  (VP (VBP need)
                    (S
                      (VP (TO to)
                        (VP (VB do)))))))
              (, ,))
            (VP (VBZ is)
              (VP (VB find)
                (NP
                  (NP (DT a) (NN source))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD will)
                        (VP (VB supply)
                          (NP (PRP them))
                          (PP (IN with)
                            (NP (NNS weapons))))
                        (, ,)
                        (VP (VB be)
                          (NP (PRP it))
                          (ADVP (RB internally)))))))
                (PP (IN from)
                  (NP (DT the) (NNP USor) (NN externally)))
                (PP (IN from)
                  (NP (DT another) (NN country)))))))))
    (. .)))

det(criminal-2, A-1)
nsubj(care-5, criminal-2)
aux(care-5, does-3)
neg(care-5, n't-4)
root(ROOT-0, care-5)
dobj(find-19, what-6)
dobj(breaking-10, laws-7)
nsubj(find-19, laws-7)
nsubj(breaking-10, they-8)
aux(breaking-10, are-9)
rcmod(laws-7, breaking-10)
rel(need-14, all-12)
nsubj(need-14, they-13)
xsubj(do-16, they-13)
rcmod(laws-7, need-14)
aux(do-16, to-15)
xcomp(need-14, do-16)
aux(find-19, is-18)
ccomp(care-5, find-19)
det(source-21, a-20)
dobj(find-19, source-21)
nsubj(supply-24, source-21)
aux(supply-24, will-23)
rcmod(source-21, supply-24)
dobj(supply-24, them-25)
prep_with(supply-24, weapons-27)
cop(it-30, be-29)
dep(supply-24, it-30)
advmod(it-30, internally-31)
det(externally-35, the-33)
nn(externally-35, USor-34)
prep_from(find-19, externally-35)
det(country-38, another-37)
prep_from(find-19, country-38)

(ROOT
  (S
    (S
      (NP (DT A) (NN person))
      (VP (MD can)
        (VP (VB acquire)
          (NP
            (NP (DT any) (NN type))
            (PP (IN of)
              (NP (NN weapon)))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (VP (VB withoutnotice) (, ,)
                        (ADVP (RB aside))
                        (PP (IN from)
                          (NP (JJ nuclear) (NNS weapons)))))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB even))
      (NP (DT those))
      (VP (VBP are)
        (VP (VBG starting)
          (S
            (VP (TO to)
              (VP (VB become)
                (ADJP (RBR more) (JJ widelyaccessible))))))))
    (. .)))

det(person-2, A-1)
nsubj(acquire-4, person-2)
aux(acquire-4, can-3)
root(ROOT-0, acquire-4)
det(type-6, any-5)
dobj(acquire-4, type-6)
dobj(want-10, type-6)
prep_of(type-6, weapon-8)
nsubj(want-10, they-9)
xsubj(withoutnotice-12, they-9)
rcmod(type-6, want-10)
aux(withoutnotice-12, to-11)
xcomp(want-10, withoutnotice-12)
amod(weapons-17, nuclear-16)
prep_aside_from(withoutnotice-12, weapons-17)
advmod(starting-23, even-20)
nsubj(starting-23, those-21)
xsubj(widelyaccessible-27, those-21)
aux(starting-23, are-22)
conj_and(acquire-4, starting-23)
aux(widelyaccessible-27, to-24)
cop(widelyaccessible-27, become-25)
advmod(widelyaccessible-27, more-26)
xcomp(starting-23, widelyaccessible-27)

(ROOT
  (SBARQ
    (WHADVP (RB So))
    (SQ (MD should)
      (NP (PRP you))
      (VP (VB own)
        (NP (DT a) (NN gun))))
    (. ?)))

advmod(own-4, So-1)
aux(own-4, should-2)
nsubj(own-4, you-3)
root(ROOT-0, own-4)
det(gun-6, a-5)
dobj(own-4, gun-6)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ my) (NN opinion) (RB yes)))
    (PRN (, ,)
      (S
        (NP (NNS guns))
        (VP (VBP do) (RB n't)
          (VP (VB kill)
            (NP (NNS people)))))
      (, ,))
    (NP (NNS people))
    (VP (VBP kill)
      (NP (NNS people)))
    (. .)))

poss(opinion-3, my-2)
prep_in(kill-13, opinion-3)
advmod(opinion-3, yes-4)
nsubj(kill-9, guns-6)
aux(kill-9, do-7)
neg(kill-9, n't-8)
parataxis(kill-13, kill-9)
dobj(kill-9, people-10)
nsubj(kill-13, people-12)
root(ROOT-0, kill-13)
dobj(kill-13, people-14)

(ROOT
  (S
    (S
      (NP
        (NP (DT No) (JJ matterwhat) (NN kind))
        (PP (IN of)
          (NP (NN reasoning))))
      (NP (PRP you))
      (VP (VBP try)
        (S
          (VP (TO to)
            (VP (VB support)
              (NP (PRP it))
              (PP (IN with)))))))
    (, ,)
    (NP (DT a) (NN gun))
    (VP (VBZ is)
      (NP (NN nothing))
      (PP (IN by)
        (NP
          (NP (DT a) (NN tool))
          (, ,)
          (NP (DT a) (NN means))))
      (PP (TO to)
        (NP (DT an) (NN end))))
    (. .)))

det(kind-3, No-1)
amod(kind-3, matterwhat-2)
nsubj(try-7, kind-3)
xsubj(support-9, kind-3)
prep_of(kind-3, reasoning-5)
nsubj(try-7, you-6)
xsubj(support-9, you-6)
ccomp(nothing-16, try-7)
aux(support-9, to-8)
xcomp(try-7, support-9)
dobj(support-9, it-10)
prep(support-9, with-11)
det(gun-14, a-13)
nsubj(nothing-16, gun-14)
cop(nothing-16, is-15)
root(ROOT-0, nothing-16)
det(tool-19, a-18)
prep_by(nothing-16, tool-19)
det(means-22, a-21)
appos(tool-19, means-22)
det(end-25, an-24)
prep_to(nothing-16, end-25)

(ROOT
  (S
    (NP (NNP Aperson))
    (VP (VBZ provides)
      (NP (DT the) (NN intent)))
    (. .)))

nsubj(provides-2, Aperson-1)
root(ROOT-0, provides-2)
det(intent-4, the-3)
dobj(provides-2, intent-4)

