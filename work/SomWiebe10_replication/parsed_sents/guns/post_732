(ROOT
  (S
    (NP (PRP I))
    (VP (VBP sense)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (ADVP (RB never))
            (VP (VBN been)
              (PP (IN in)
                (NP (DT a) (NN life) (VBG threating) (NN situtation))))))))
    (. .)))

nsubj(sense-2, I-1)
root(ROOT-0, sense-2)
complm(been-7, that-3)
nsubj(been-7, you-4)
aux(been-7, have-5)
neg(been-7, never-6)
ccomp(sense-2, been-7)
det(situtation-12, a-9)
nn(situtation-12, life-10)
amod(situtation-12, threating-11)
prep_in(been-7, situtation-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (JJ automatic) (NN adrenaline) (NN reaction))
        (VP (VBZ begins))))
    (, ,)
    (NP
      (ADJP (RBS most) (JJ rational))
      (NN thought))
    (VP (VBZ ends))
    (. .)))

advmod(begins-6, When-1)
det(reaction-5, the-2)
amod(reaction-5, automatic-3)
nn(reaction-5, adrenaline-4)
nsubj(begins-6, reaction-5)
advcl(ends-11, begins-6)
advmod(rational-9, most-8)
amod(thought-10, rational-9)
nsubj(ends-11, thought-10)
root(ROOT-0, ends-11)

(ROOT
  (S
    (S
      (NP (DT The) (NN fight)
        (CC or)
        (NN flight) (NN reaction))
      (VP (VBZ is)
        (ADVP (IN about) (DT all))
        (SBAR
          (S
            (S
              (NP (PRP you))
              (VP (VBP are)
                (VP (VBN left)
                  (PP (IN with)))))
            (CC and)
            (S
              (NP (JJS most) (NNS people))
              (VP (VBP are) (RB not)
                (ADJP (JJ trained)
                  (S
                    (VP (TO to)
                      (VP (VB react)
                        (PP (IN on)
                          (NP (NNP reflex)))))))))))))
    (, ,) (IN so)
    (S
      (NP (PRP they))
      (ADVP (RB simply))
      (VP (VB freeze)))
    (. .)))

det(reaction-5, The-1)
nn(reaction-5, fight-2)
conj_or(fight-2, flight-4)
nn(reaction-5, flight-4)
nsubj(is-6, reaction-5)
root(ROOT-0, is-6)
advmod(is-6, about-7)
dep(about-7, all-8)
nsubjpass(left-11, you-9)
auxpass(left-11, are-10)
dep(is-6, left-11)
prep(left-11, with-12)
amod(people-15, most-14)
nsubj(trained-18, people-15)
cop(trained-18, are-16)
neg(trained-18, not-17)
dep(is-6, trained-18)
conj_and(left-11, trained-18)
aux(react-20, to-19)
xcomp(trained-18, react-20)
prep_on(react-20, reflex-22)
dep(is-6, so-24)
nsubj(freeze-27, they-25)
advmod(freeze-27, simply-26)
ccomp(is-6, freeze-27)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN been)
          (PP (IN under)
            (NP (NN fire)))
          (NP (JJ several) (NNS times)))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN seen)
          (S
            (NP (RB even) (VBN trained) (NNS soldiers))
            (VP (VB freeze)
              (NP (PRP$ their) (JJ first) (NN time))
              (PP (IN under)
                (NP (NN fire))))))))
    (. .)))

nsubj(times-7, I-1)
aux(times-7, have-2)
cop(times-7, been-3)
prep_under(times-7, fire-5)
amod(times-7, several-6)
root(ROOT-0, times-7)
nsubj(seen-11, I-9)
aux(seen-11, have-10)
conj_and(times-7, seen-11)
advmod(soldiers-14, even-12)
amod(soldiers-14, trained-13)
nsubj(freeze-15, soldiers-14)
ccomp(seen-11, freeze-15)
poss(time-18, their-16)
amod(time-18, first-17)
dobj(freeze-15, time-18)
prep_under(freeze-15, fire-20)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NN assertion))
      (PP (IN of)
        (NP (`` ``) (NN intellegent) (NN response) ('' ''))))
    (VP (MD will)
      (VP (VB get)
        (S
          (NP (PRP you))
          (VP (VBN killed)))))
    (. .)))

poss(assertion-2, Your-1)
nsubj(get-9, assertion-2)
nn(response-6, intellegent-5)
prep_of(assertion-2, response-6)
aux(get-9, will-8)
root(ROOT-0, get-9)
nsubj(killed-11, you-10)
dep(get-9, killed-11)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN majority))
        (PP (IN of)
          (NP (NN carry))))
      (VP (VBP permit)
        (SBAR
          (S
            (NP (NNS holders))
            (VP (VBP train)
              (NP
                (NP
                  (QP (JJR more) (IN than)
                    (NP (DT the) (NN majority))))
                (PP (IN of)
                  (NP (NN police) (NNS officers)))))))))
    (CC and)
    (, ,)
    (S
      (PP (IN in)
        (NP (PRP$ my) (NN experience)))
      (, ,)
      (VP (VBP are) (, ,)
        (ADVP (IN by) (RB far))
        (, ,)
        (NP
          (ADJP
            (ADJP (RBR more) (JJ accurate))
            (CC and)
            (ADJP (RBR less) (JJ likely)
              (S
                (VP (TO to)
                  (VP (VB endanger))))))
          (NNS bystanders))))
    (. .)))

det(majority-2, The-1)
nsubj(permit-5, majority-2)
prep_of(majority-2, carry-4)
root(ROOT-0, permit-5)
nsubj(train-7, holders-6)
ccomp(permit-5, train-7)
quantmod(than-9, more-8)
dobj(train-7, than-9)
det(majority-11, the-10)
dep(than-9, majority-11)
nn(officers-14, police-13)
prep_of(than-9, officers-14)
poss(experience-19, my-18)
prep_in(bystanders-33, experience-19)
cop(bystanders-33, are-21)
advmod(bystanders-33, by-23)
advmod(by-23, far-24)
advmod(accurate-27, more-26)
amod(bystanders-33, accurate-27)
advmod(likely-30, less-29)
conj_and(accurate-27, likely-30)
amod(bystanders-33, likely-30)
aux(endanger-32, to-31)
xcomp(likely-30, endanger-32)
ccomp(permit-5, bystanders-33)
conj_and(permit-5, bystanders-33)

