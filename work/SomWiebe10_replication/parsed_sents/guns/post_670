(ROOT
  (S
    (ADVP (RB Actually))
    (NP (PRP we))
    (VP (MD will)
      (VP (VB get)
        (ADJP (JJ rid))
        (PP (IN of)
          (NP (NNS guns)))))
    (. .)))

advmod(rid-5, Actually-1)
nsubj(rid-5, we-2)
aux(rid-5, will-3)
dep(rid-5, get-4)
root(ROOT-0, rid-5)
prep_of(rid-5, guns-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB just))
      (NP
        (NP (DT a) (NN question))
        (PP (IN of)
          (NP (NN time)))))
    (. .)))

nsubj(question-5, It-1)
cop(question-5, 's-2)
advmod(question-5, just-3)
det(question-5, a-4)
root(ROOT-0, question-5)
prep_of(question-5, time-7)

(ROOT
  (S
    (NP (RB Just) (RB as) (JJ gay) (NN marriage))
    (VP
      (VP (MD will)
        (VP (VB be)
          (VP (VBN legalised)
            (SBAR (RB just) (IN as)
              (S
                (NP (DT the) (NN right))
                (VP (VBP have)
                  (VP (VBN lost))))))))
      (, ,)
      (CC and)
      (VP (MD will)
        (VP (VB continue)
          (S
            (S
              (VP (TO to)
                (VP (VB lose)
                  (NP
                    (NP (DT every) (JJ significant) (JJ social) (NN battle))
                    (, ,)
                    (PP (VBG including)
                      (NP (NN slavery)))))))
            (CC and)
            (S
              (VP (VBG granting)
                (NP (NNS women))
                (NP (DT the) (NN vote))))))))
    (. .)))

advmod(marriage-4, Just-1)
advmod(marriage-4, as-2)
amod(marriage-4, gay-3)
nsubjpass(legalised-7, marriage-4)
nsubj(continue-17, marriage-4)
aux(legalised-7, will-5)
auxpass(legalised-7, be-6)
root(ROOT-0, legalised-7)
advmod(lost-13, just-8)
dep(lost-13, as-9)
det(right-11, the-10)
nsubj(lost-13, right-11)
aux(lost-13, have-12)
ccomp(legalised-7, lost-13)
aux(continue-17, will-16)
conj_and(legalised-7, continue-17)
aux(lose-19, to-18)
dep(continue-17, lose-19)
det(battle-23, every-20)
amod(battle-23, significant-21)
amod(battle-23, social-22)
dobj(lose-19, battle-23)
prep_including(battle-23, slavery-26)
dep(continue-17, granting-28)
conj_and(lose-19, granting-28)
iobj(granting-28, women-29)
det(vote-31, the-30)
dobj(granting-28, vote-31)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNS bibles))
        (VP (MD will)
          (ADVP (RB also))
          (VP (VB go))))
      (CC and)
      (S
        (NP (PRP we))
        (VP (MD will) (RB all)
          (VP (VB grow)
            (PRT (RP up))))))
    (: ...)
    (S
      (NP (DT the) (NN world))
      (VP (MD will)
        (VP (VB move)
          (ADVP (RB forward)))))
    (. ...)))

det(bibles-2, The-1)
nsubj(go-5, bibles-2)
aux(go-5, will-3)
advmod(go-5, also-4)
root(ROOT-0, go-5)
nsubj(grow-10, we-7)
aux(grow-10, will-8)
advmod(grow-10, all-9)
conj_and(go-5, grow-10)
prt(grow-10, up-11)
det(world-14, the-13)
nsubj(move-16, world-14)
aux(move-16, will-15)
parataxis(go-5, move-16)
advmod(move-16, forward-17)

(ROOT
  (S (CC And)
    (NP (PRP you))
    (VP (MD will)
      (VP
        (VP (VB be)
          (VP (VBN lost) (, ,)
            (SBAR (RB just) (IN as)
              (S
                (NP (DT the) (NNS dinosaurs))
                (VP (VBD were))))))
        (: ...)
        (VP
          (VP (VB evolve)
            (NP (NNS people)))
          (: ...)
          (VP
            (VP (VB evolve))
            (CC or)
            (VP (VB be)
              (VP (VBN lost)
                (PP (TO to)
                  (NP
                    (NP (DT the) (NNS legers))
                    (PP (IN of)
                      (NP (NN history)))))))))))
    (. .)))

cc(lost-5, And-1)
nsubjpass(lost-5, you-2)
aux(lost-5, will-3)
auxpass(lost-5, be-4)
root(ROOT-0, lost-5)
advmod(were-11, just-7)
dep(were-11, as-8)
det(dinosaurs-10, the-9)
nsubj(were-11, dinosaurs-10)
ccomp(lost-5, were-11)
dep(lost-5, evolve-13)
dobj(evolve-13, people-14)
dep(evolve-13, evolve-16)
auxpass(lost-19, be-18)
dep(evolve-13, lost-19)
conj_or(evolve-16, lost-19)
det(legers-22, the-21)
prep_to(lost-19, legers-22)
prep_of(legers-22, history-24)

