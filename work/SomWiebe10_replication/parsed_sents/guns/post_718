(ROOT
  (S
    (ADVP (RB First) (RB off))
    (NP (PRP$ their))
    (VP (VBP are)
      (NP
        (NP (DT no) (NNS kids))
        (VP (VBN involved)
          (NP (JJ only) (NNS adults)))))
    (. .)))

advmod(off-2, First-1)
advmod(kids-6, off-2)
nsubj(kids-6, their-3)
cop(kids-6, are-4)
det(kids-6, no-5)
root(ROOT-0, kids-6)
partmod(kids-6, involved-7)
amod(adults-9, only-8)
dobj(involved-7, adults-9)

(ROOT
  (S
    (NP (RB second) (DT those) (NNS adults))
    (ADVP (RB already))
    (VP (VBP carry)
      (NP
        (NP (RB everywhere) (RB else))
        (PP (IN in)
          (NP (NN life))))
      (PP (IN without)
        (NP (DT a) (NN drunken) (NN incident))))
    (. .)))

advmod(adults-3, second-1)
det(adults-3, those-2)
nsubj(carry-5, adults-3)
advmod(carry-5, already-4)
root(ROOT-0, carry-5)
advmod(else-7, everywhere-6)
dobj(carry-5, else-7)
prep_in(else-7, life-9)
det(incident-13, a-11)
nn(incident-13, drunken-12)
prep_without(carry-5, incident-13)

(ROOT
  (S
    (NP (PRP you))
    (VP (MD may)
      (ADVP (RB also))
      (VP (VB wish)
        (S
          (VP (TO to)
            (VP (VB concider)
              (NP
                (NP (DT the) (NN type))
                (PP (IN of)
                  (NP (NN student)))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD would)
                      (VP (VB go)
                        (SBAR
                          (S
                            (VP (VBD threw)
                              (NP (DT the) (NN time)
                                (S
                                  (VP (TO to)
                                    (VP (VB get)
                                      (NP (NN training)))))))))))))))))))
    (. .)))

nsubj(wish-4, you-1)
xsubj(concider-6, you-1)
aux(wish-4, may-2)
advmod(wish-4, also-3)
root(ROOT-0, wish-4)
aux(concider-6, to-5)
xcomp(wish-4, concider-6)
det(type-8, the-7)
dobj(concider-6, type-8)
nsubj(go-13, type-8)
prep_of(type-8, student-10)
aux(go-13, would-12)
rcmod(type-8, go-13)
ccomp(go-13, threw-14)
det(time-16, the-15)
dobj(threw-14, time-16)
aux(get-18, to-17)
infmod(time-16, get-18)
dobj(get-18, training-19)

(ROOT
  (NP
    (NP (DT the) (NN cost))
    (PP (IN of)
      (NP (DT a) (NN weapon)))
    (, ,)
    (NP (NN holster))
    (, ,)
    (NP
      (NP (DT the) (NN cost))
      (PP (IN of)
        (NP (NN training))))
    (, ,)
    (NP
      (NP (DT the) (NNS fees))
      (PP (TO to)
        (NP
          (NP (DT the) (NN state))
          (PP (IN for)
            (NP (DT the) (NN permit))))))
    (, ,)
    (NP
      (NP (DT the) (NNS hoops))
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP have)
            (S
              (VP (TO to)
                (VP (VB jump)
                  (ADJP (JJ thew)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (PP (IN in)
                            (NP (NN compliance)))
                          (PP (IN with)
                            (NP
                              (NP (DT the) (NN law))
                              (, ,)
                              (NP (DT the) (NN finger) (NN printing))
                              (CC and)
                              (NP (JJ backround) (NNS checks)))))))))))))))
    (. .)))

det(cost-2, the-1)
root(ROOT-0, cost-2)
det(weapon-5, a-4)
prep_of(cost-2, weapon-5)
appos(cost-2, holster-7)
det(cost-10, the-9)
appos(cost-2, cost-10)
prep_of(cost-10, training-12)
det(fees-15, the-14)
appos(cost-2, fees-15)
det(state-18, the-17)
prep_to(fees-15, state-18)
det(permit-21, the-20)
prep_for(state-18, permit-21)
det(hoops-24, the-23)
appos(cost-2, hoops-24)
dobj(have-26, hoops-24)
nsubj(have-26, they-25)
xsubj(jump-28, they-25)
rcmod(hoops-24, have-26)
aux(jump-28, to-27)
xcomp(have-26, jump-28)
acomp(jump-28, thew-29)
aux(be-31, to-30)
xcomp(thew-29, be-31)
prep_in(be-31, compliance-33)
det(law-36, the-35)
prep_with(be-31, law-36)
det(printing-40, the-38)
nn(printing-40, finger-39)
prep_with(be-31, printing-40)
conj_and(law-36, printing-40)
amod(checks-43, backround-42)
prep_with(be-31, checks-43)
conj_and(law-36, checks-43)

(ROOT
  (S
    (NP (JJ i) (NN dont))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB tell)
            (NP (PRP you))
            (SBAR (IN that)
              (S
                (NP (DT those) (NNS individuals))
                (VP (VBP are) (RB not)
                  (NP
                    (NP (DT the) (JJ regular) (JJ old) (NN pot) (NN head) (NN binge) (NN drinker) (NN steriotype))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP make)
                          (NP (DT all) (NNS students))
                          (PRT (RP out))))))))))))
      (S
        (VP (TO to)
          (VP (VB be)))))
    (. .)))

amod(dont-2, i-1)
nsubj(have-3, dont-2)
xsubj(tell-5, dont-2)
xsubj(be-26, dont-2)
root(ROOT-0, have-3)
aux(tell-5, to-4)
xcomp(have-3, tell-5)
dobj(tell-5, you-6)
complm(steriotype-19, that-7)
det(individuals-9, those-8)
nsubj(steriotype-19, individuals-9)
cop(steriotype-19, are-10)
neg(steriotype-19, not-11)
det(steriotype-19, the-12)
amod(steriotype-19, regular-13)
amod(steriotype-19, old-14)
nn(steriotype-19, pot-15)
nn(steriotype-19, head-16)
nn(steriotype-19, binge-17)
nn(steriotype-19, drinker-18)
ccomp(tell-5, steriotype-19)
nsubj(make-21, you-20)
rcmod(steriotype-19, make-21)
det(students-23, all-22)
dobj(make-21, students-23)
prt(make-21, out-24)
aux(be-26, to-25)
xcomp(have-3, be-26)

(ROOT
  (S
    (NP (DT another) (NN thing)
      (S
        (VP (TO to)
          (VP (VB think)
            (PRT (RP about))))))
    (VP (VBZ is)
      (NP
        (NP (NNS students))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP are)
              (ADJP (JJ unable)
                (S
                  (VP (TO to)
                    (VP (VB defend)
                      (NP (JJ themselfs) (NN agianst) (NN attack)))))))))))
    (. .)))

det(thing-2, another-1)
nsubj(students-7, thing-2)
aux(think-4, to-3)
infmod(thing-2, think-4)
prt(think-4, about-5)
cop(students-7, is-6)
root(ROOT-0, students-7)
nsubj(unable-10, students-7)
cop(unable-10, are-9)
rcmod(students-7, unable-10)
aux(defend-12, to-11)
xcomp(unable-10, defend-12)
amod(attack-15, themselfs-13)
nn(attack-15, agianst-14)
dobj(defend-12, attack-15)

(ROOT
  (S
    (NP (NNS people))
    (VP (VBP like)
      (NP
        (NP (JJ disabled) (NNS students))
        (, ,)
        (NP (NNS women))
        (, ,)
        (CC and)
        (NP
          (NP (NN anyone) (RB else))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (UCP (CC either)
                  (PP (TO to)
                    (ADJP (JJ small)))
                  (CC or)
                  (ADJP (JJ weak)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ effective)
                            (PP (IN in)
                              (NP (PRP$ their) (NN defense)))))))))))))))
    (. .)))

nsubj(like-2, people-1)
root(ROOT-0, like-2)
amod(students-4, disabled-3)
dobj(like-2, students-4)
dobj(like-2, women-6)
conj_and(students-4, women-6)
dobj(like-2, anyone-9)
conj_and(students-4, anyone-9)
nsubj(is-12, anyone-9)
advmod(anyone-9, else-10)
rcmod(anyone-9, is-12)
dep(is-12, either-13)
dep(either-13, to-14)
pobj(to-14, small-15)
dep(is-12, weak-17)
conj_or(either-13, weak-17)
aux(effective-20, to-18)
cop(effective-20, be-19)
xcomp(weak-17, effective-20)
poss(defense-23, their-22)
prep_in(effective-20, defense-23)

(ROOT
  (S (CC but)
    (NP (FW i))
    (VP (VBP guess)
      (SBAR
        (S
          (NP (PRP$ its)
            (ADJP (RB better)
              (S
                (VP (TO to)
                  (ADVP (RB just))
                  (VP (VB get)
                    (ADJP (JJ rid)
                      (PP (IN of)
                        (NP (DT the) (NN idea))))
                    (SBAR (IN because)
                      (S
                        (NP (CD one) (NN person))
                        (VP (MD may)
                          (VP (VB be)
                            (ADJP (JJ irresponsible))
                            (, ,)
                            (SBAR (RB even) (IN though)
                              (S
                                (PP (TO to)
                                  (NP (NN date)))
                                (NP (PRP it))
                                (VP (VBZ has)
                                  (ADVP (RB never))
                                  (VP (VBN happend)
                                    (ADVP (RB anywhere))))))))))))))
            (NN campus) (NN carry))
          (VP (VBZ is)
            (VP (VBN allowd))))))
    (. .)))

cc(guess-3, but-1)
nsubj(guess-3, i-2)
root(ROOT-0, guess-3)
poss(carry-30, its-4)
amod(carry-30, better-5)
aux(rid-9, to-6)
advmod(rid-9, just-7)
dep(rid-9, get-8)
xcomp(better-5, rid-9)
det(idea-12, the-11)
prep_of(rid-9, idea-12)
mark(irresponsible-18, because-13)
num(person-15, one-14)
nsubj(irresponsible-18, person-15)
aux(irresponsible-18, may-16)
cop(irresponsible-18, be-17)
advcl(rid-9, irresponsible-18)
advmod(happend-27, even-20)
dep(happend-27, though-21)
prep_to(happend-27, date-23)
nsubj(happend-27, it-24)
aux(happend-27, has-25)
neg(happend-27, never-26)
ccomp(irresponsible-18, happend-27)
advmod(happend-27, anywhere-28)
nn(carry-30, campus-29)
nsubjpass(allowd-32, carry-30)
auxpass(allowd-32, is-31)
ccomp(guess-3, allowd-32)

