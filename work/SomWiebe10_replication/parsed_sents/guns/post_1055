(ROOT
  (S (`` ``)
    (S
      (NP (NNS Guns))
      (VP (VBP do) (RB n't)
        (VP (VB kill)
          (NP (NNS people)))))
    (, ,)
    (NP (NNS people))
    (VP (VBP kill)
      (NP (NNS people)))
    (. .)))

nsubj(kill-5, Guns-2)
aux(kill-5, do-3)
neg(kill-5, n't-4)
ccomp(kill-9, kill-5)
dobj(kill-5, people-6)
nsubj(kill-9, people-8)
root(ROOT-0, kill-9)
dobj(kill-9, people-10)

(ROOT
  (S ('' '')
    (NP (NNP \/) (NNP \/) (-RRB- -RRB-) (NNP Ahh))
    (ADVP
      (NP (DT the) (JJ old))
      (RB ones))
    (VP (VBP are)
      (NP (DT the) (JJS best)))
    (. .)))

nn(Ahh-5, \/-2)
nn(Ahh-5, \/-3)
nsubj(best-11, Ahh-5)
det(old-7, the-6)
npadvmod(ones-8, old-7)
advmod(best-11, ones-8)
cop(best-11, are-9)
det(best-11, the-10)
root(ROOT-0, best-11)

(ROOT
  (FRAG
    (ADVP (RB Certainly))
    (. .)))

root(ROOT-0, Certainly-1)

(ROOT
  (S (CC But)
    (NP (PRP they))
    (VP (VBP are)
      (ADJP (RB so) (JJ rare))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (NNS people))
          (VP (VBP do) (RB n't)
            (VP (VB feel)
              (ADJP (RB so) (JJ unsafe))
              (SBAR (IN as)
                (S
                  (VP (TO to)
                    (VP (VB need)
                      (NP (DT a) (NN gun))
                      (PP (IN by)
                        (NP (PRP$ their) (NN bedside))))))))))))
    (. .)))

cc(rare-5, But-1)
nsubj(rare-5, they-2)
cop(rare-5, are-3)
advmod(rare-5, so-4)
root(ROOT-0, rare-5)
complm(feel-11, that-7)
nsubj(feel-11, people-8)
aux(feel-11, do-9)
neg(feel-11, n't-10)
ccomp(rare-5, feel-11)
advmod(unsafe-13, so-12)
acomp(feel-11, unsafe-13)
mark(need-16, as-14)
aux(need-16, to-15)
advcl(feel-11, need-16)
xcomp(feel-11, need-16)
det(gun-18, a-17)
dobj(need-16, gun-18)
poss(bedside-21, their-20)
prep_by(need-16, bedside-21)

(ROOT
  (SQ
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-))
      (SBAR (IN If)
        (S
          (NP (RB just) (CD one) (NN life))
          (VP (VBD was)
            (VP (VBN saved)
              (PP (IN by)
                (S
                  (VP (VBG making)
                    (S
                      (VP (VBG killing)
                        (SBAR (IN that)
                          (S
                            (PP
                              (ADVP
                                (NP (RB little) (RB bit))
                                (RBR harder))
                              (IN by)
                              (S
                                (VP
                                  (VP (VBG making)
                                    (NP
                                      (NP (NNS people))
                                      (VP (VBN thrust)
                                        (NP (DT a) (NN knife))
                                        (PP (IN into)
                                          (NP (PRP$ their) (NN victim))))
                                      (: ;)
                                      (S
                                        (VP (TO to)
                                          (VP (VB see)
                                            (NP (DT the) (NN pain)))))))
                                  (CC and)
                                  (VP (VBG suffering)
                                    (ADVP (RB then))))))
                            (NP (PRP it))
                            (VP (MD would)
                              (VP (VB be)
                                (ADJP (JJ worth)
                                  (NP (PRP it)))
                                (, ,)
                                (ADVP (RB surely))))))))))))))))
    (. ?)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
mark(saved-10, If-5)
advmod(life-8, just-6)
num(life-8, one-7)
nsubjpass(saved-10, life-8)
auxpass(saved-10, was-9)
advcl(\/-1, saved-10)
agent(saved-10, making-12)
xcomp(making-12, killing-13)
complm(worth-38, that-14)
advmod(bit-16, little-15)
npadvmod(harder-17, bit-16)
advmod(worth-38, harder-17)
prepc_by(worth-38, making-19)
dobj(making-19, people-20)
partmod(people-20, thrust-21)
det(knife-23, a-22)
dobj(thrust-21, knife-23)
poss(victim-26, their-25)
prep_into(thrust-21, victim-26)
aux(see-29, to-28)
infmod(people-20, see-29)
det(pain-31, the-30)
dobj(see-29, pain-31)
conj_and(making-19, suffering-33)
prepc_by(worth-38, suffering-33)
advmod(suffering-33, then-34)
nsubj(worth-38, it-35)
aux(worth-38, would-36)
cop(worth-38, be-37)
ccomp(killing-13, worth-38)
dep(worth-38, it-39)
advmod(worth-38, surely-41)

(ROOT
  (S (CC Or)
    (ADVP (RB maybe))
    (NP (PRP you))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD 'd)
            (ADVP (RB only))
            (VP (VB be)
              (PP (IN worth)
                (NP
                  (NP
                    (NP (PRP it))
                    (SBAR (IN if)
                      (S
                        (NP (CD 100) (NNS lives))
                        (VP (VBD were)
                          (VP (VBN saved))))))
                  (: ;)
                  (CC or)
                  (NP (CD 1,000)))))))))
    (. ?)))

cc(think-4, Or-1)
advmod(think-4, maybe-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(be-8, it-5)
aux(be-8, 'd-6)
advmod(be-8, only-7)
ccomp(think-4, be-8)
prep_worth(be-8, it-10)
mark(saved-15, if-11)
num(lives-13, 100-12)
nsubjpass(saved-15, lives-13)
auxpass(saved-15, were-14)
dep(it-10, saved-15)
prep_worth(be-8, 1,000-18)
conj_or(it-10, 1,000-18)

(ROOT
  (S
    (S
      (VP
        (VP (VB \/) (-RRB- -RRB-)
          (NP (NNS \/))
          (-RRB- -RRB-)
          (ADVP (RB As)
            (PP (IN for)
              (NP (DT this) (JJ 2nd) (NNP Amendment) (NN guff)))))
        (, ,)
        (SBAR (RB even) (IN if)
          (S
            (NP (PRP it))
            (VP (VBD said)
              (S (`` ``)
                (NP (NNS people))
                (VP (MD can)
                  (VP (VB carry)
                    (NP (NNS guns))))
                ('' ''))
              (SBAR (IN as)
                (S
                  (VP (VBD opposed)
                    (PP (TO to)
                      (NP (RB just) (DT the) (NN right)))
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ armed)))))))))))))
    (, ,)
    (NP (DT the) (NN name))
    (VP (VBZ is)
      (PP (IN in)
        (NP (DT the) (NN title) (: :) (NN AMENDMENT))))
    (. .)))

ccomp(is-34, \/-1)
dobj(\/-1, \/-3)
det(guff-10, this-7)
amod(guff-10, 2nd-8)
nn(guff-10, Amendment-9)
prep_as_for(\/-1, guff-10)
advmod(said-15, even-12)
dep(said-15, if-13)
nsubj(said-15, it-14)
ccomp(\/-1, said-15)
nsubj(carry-19, people-17)
aux(carry-19, can-18)
ccomp(said-15, carry-19)
dobj(carry-19, guns-20)
mark(opposed-23, as-22)
advcl(said-15, opposed-23)
advmod(right-27, just-25)
det(right-27, the-26)
prep_to(opposed-23, right-27)
aux(armed-30, to-28)
cop(armed-30, be-29)
xcomp(opposed-23, armed-30)
det(name-33, the-32)
nsubj(is-34, name-33)
root(ROOT-0, is-34)
det(AMENDMENT-39, the-36)
nn(AMENDMENT-39, title-37)
prep_in(is-34, AMENDMENT-39)

(ROOT
  (S
    (S
      (NP
        (NP (DT This) (NN constitution))
        (PP (IN of)
          (NP (NNP yours))))
      (VP (VBZ is) (RB n't)
        (VP (VBN fixed)
          (PP (IN in)
            (NP (NN stone))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (VP (VBN designed)
          (S
            (VP (TO TO)
              (VP (VB BE)
                (VP (VBN MODIFIED)
                  (S
                    (VP (TO to)
                      (VP (VB fit)
                        (NP (DT the) (NNS times))))))))))))
    (. .)))

det(constitution-2, This-1)
nsubjpass(fixed-7, constitution-2)
prep_of(constitution-2, yours-4)
auxpass(fixed-7, is-5)
neg(fixed-7, n't-6)
root(ROOT-0, fixed-7)
prep_in(fixed-7, stone-9)
nsubjpass(designed-13, it-11)
xsubj(MODIFIED-16, it-11)
auxpass(designed-13, is-12)
parataxis(fixed-7, designed-13)
aux(MODIFIED-16, TO-14)
auxpass(MODIFIED-16, BE-15)
xcomp(designed-13, MODIFIED-16)
aux(fit-18, to-17)
xcomp(MODIFIED-16, fit-18)
det(times-20, the-19)
dobj(fit-18, times-20)

(ROOT
  (S
    (S
      (PP (IN Like)
        (NP (DT the) (JJ little) (NN amendment)))
      (NP (DT that))
      (VP (VBD introduced)
        (NP
          (NP (NN prohibition))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD did) (RB n't)
                (VP (VB work)
                  (PRT (RP out))
                  (ADVP (RB so) (RB well)))))))))
    (, ,) (IN so)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (VP (VBN scrapped))))
    (. .)))

det(amendment-4, the-2)
amod(amendment-4, little-3)
prep_like(introduced-6, amendment-4)
nsubj(introduced-6, that-5)
root(ROOT-0, introduced-6)
dobj(introduced-6, prohibition-7)
nsubj(work-11, prohibition-7)
aux(work-11, did-9)
neg(work-11, n't-10)
rcmod(prohibition-7, work-11)
prt(work-11, out-12)
advmod(well-14, so-13)
advmod(work-11, well-14)
dep(introduced-6, so-16)
nsubjpass(scrapped-19, it-17)
auxpass(scrapped-19, was-18)
ccomp(introduced-6, scrapped-19)

(ROOT
  (S
    (S
      (NP (NNP England))
      (ADVP (RB once))
      (VP (VBD had)
        (NP
          (NP (DT a) (NN law))
          (ADJP (JJ similar)
            (PP (TO to)
              (NP (PRP$ your) (JJ 2nd) (NN amendment)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBD scrapped)
        (NP (PRP it))
        (PP (IN over)
          (NP (DT a) (NN century)))
        (S
          (VP
            (ADVP (RB ago) (RB so))
            (VB get)
            (PP (IN with)
              (NP (DT the) (NNS times)))))))
    (. !)))

nsubj(had-3, England-1)
advmod(had-3, once-2)
root(ROOT-0, had-3)
det(law-5, a-4)
dobj(had-3, law-5)
amod(law-5, similar-6)
poss(amendment-10, your-8)
amod(amendment-10, 2nd-9)
prep_to(similar-6, amendment-10)
nsubj(scrapped-14, we-13)
conj_but(had-3, scrapped-14)
dobj(scrapped-14, it-15)
det(century-18, a-17)
prep_over(scrapped-14, century-18)
advmod(so-20, ago-19)
advmod(get-21, so-20)
dep(scrapped-14, get-21)
det(times-24, the-23)
prep_with(get-21, times-24)

(ROOT
  (S
    (S
      (ADVP (RB Unfortunately))
      (NP (NNS guns))
      (VP (VBP do)
        (S
          (VP (VB make)
            (S
              (NP (PRP it))
              (NP
                (NP (DT a) (NN hell))
                (PP (IN of)
                  (NP (DT a) (NN lot) (NN EASIER)))))))
        (S
          (VP (TO to)
            (VP (VB kill)
              (S
                (NP (NNS people))
                (VP (VB squeeze)
                  (NP (DT a) (NN trigger))
                  (ADVP (RB slightly)))))))))
    (CC and)
    (S
      (NP (NN somebody))
      (VP (VBZ dies)))
    (. .)))

advmod(do-3, Unfortunately-1)
nsubj(do-3, guns-2)
xsubj(kill-13, guns-2)
root(ROOT-0, do-3)
ccomp(do-3, make-4)
nsubj(hell-7, it-5)
det(hell-7, a-6)
xcomp(make-4, hell-7)
det(EASIER-11, a-9)
nn(EASIER-11, lot-10)
prep_of(hell-7, EASIER-11)
aux(kill-13, to-12)
xcomp(do-3, kill-13)
nsubj(squeeze-15, people-14)
ccomp(kill-13, squeeze-15)
det(trigger-17, a-16)
dobj(squeeze-15, trigger-17)
advmod(squeeze-15, slightly-18)
nsubj(dies-21, somebody-20)
conj_and(do-3, dies-21)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB kill)
        (NP (NN someone))
        (PP (IN from)
          (NP (DT a) (NN distance)))))
    (. .)))

nsubj(kill-3, You-1)
aux(kill-3, can-2)
root(ROOT-0, kill-3)
dobj(kill-3, someone-4)
det(distance-7, a-6)
prep_from(kill-3, distance-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB kill)
        (NP (NN someone))
        (PP (IN without)
          (S
            (NP (PRP them))
            (ADVP (RB ever))
            (VP (VBG seeing)
              (NP (PRP you)))))))
    (. .)))

nsubj(kill-3, You-1)
aux(kill-3, can-2)
root(ROOT-0, kill-3)
dobj(kill-3, someone-4)
nsubj(seeing-8, them-6)
advmod(seeing-8, ever-7)
prepc_without(kill-3, seeing-8)
dobj(seeing-8, you-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (ADVP (RB even))
      (VP (VB kill)
        (NP
          (NP (NNS lots))
          (PP (IN of)
            (NP (NNS people))))
        (PP (IN at)
          (NP (RB once)))))
    (. .)))

nsubj(kill-4, You-1)
aux(kill-4, can-2)
advmod(kill-4, even-3)
root(ROOT-0, kill-4)
dobj(kill-4, lots-5)
prep_of(lots-5, people-7)
prep(kill-4, at-8)
pobj(at-8, once-9)

(ROOT
  (SQ
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-)
        (ADVP (RB So)))
      (PRN
        (S
          (NP (NNS guns))
          (VP (VBP are)
            (ADJP (JJ great))))
        (, ,))
      (NP (NN huh)))
    (. ?)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
advmod(\/-1, So-5)
nsubj(great-8, guns-6)
cop(great-8, are-7)
parataxis(\/-1, great-8)
dobj(\/-1, huh-10)

(ROOT
  (S
    (VP
      (VP (VB \/) (-RRB- -RRB-)
        (NP (NNS \/))
        (-RRB- -RRB-)
        (ADVP (RB Imagine)
          (NP (DT a) (NN country)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NNS people))
            (VP (VBP do) (RB n't)
              (VP (VB need)
                (S
                  (NP (NNS guns))
                  (VP (TO to)
                    (VP (VB protect)
                      (NP (PRP themselves))))))))))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (RB hardly) (NN anyone))
          (VP (VBZ has)
            (NP (PRP them))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
advmod(\/-1, Imagine-5)
det(country-7, a-6)
pobj(Imagine-5, country-7)
advmod(need-12, where-8)
nsubj(need-12, people-9)
aux(need-12, do-10)
neg(need-12, n't-11)
advcl(\/-1, need-12)
nsubj(protect-15, guns-13)
aux(protect-15, to-14)
xcomp(need-12, protect-15)
dobj(protect-15, themselves-16)
mark(has-21, because-18)
advmod(anyone-20, hardly-19)
nsubj(has-21, anyone-20)
advcl(\/-1, has-21)
dobj(has-21, them-22)

(ROOT
  (S
    (PP (IN In)
      (NP (CD 20) (NNS years)))
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB never))
      (VP (VBN seen)
        (NP (DT a) (JJ single) (NN gun))
        (PP (IN in)
          (NP (NNP Britain)))
        (, ,)
        (PP (IN except) (IN for)
          (NP
            (NP (DT the)
              (ADJP (JJ odd)
                (NP (CD one)
                  (CC or)
                  (CD two))))
            (PP (IN on)
              (NP
                (NP (DT the) (NN police))
                (VP (VBG guarding)
                  (NP (JJ important) (NNS places)))))))))
    (. .)))

num(years-3, 20-2)
prep_in(seen-7, years-3)
nsubj(seen-7, I-4)
aux(seen-7, 've-5)
neg(seen-7, never-6)
root(ROOT-0, seen-7)
det(gun-10, a-8)
amod(gun-10, single-9)
dobj(seen-7, gun-10)
prep_in(seen-7, Britain-12)
det(odd-17, the-16)
prep_except_for(seen-7, odd-17)
dep(odd-17, one-18)
dep(odd-17, two-20)
conj_or(one-18, two-20)
det(police-23, the-22)
prep_on(odd-17, police-23)
partmod(police-23, guarding-24)
amod(places-26, important-25)
dobj(guarding-24, places-26)

(ROOT
  (SQ (VBP Do)
    (NP (PRP they))
    (VP (VB exist))
    (. ?)))

aux(exist-3, Do-1)
nsubj(exist-3, they-2)
root(ROOT-0, exist-3)

