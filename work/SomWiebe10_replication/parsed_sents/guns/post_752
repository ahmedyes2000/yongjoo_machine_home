(ROOT
  (S
    (VP (VB Words)
      (SBAR (IN that)
        (S
          (NP (DT no) (CD one) (NN EVER))
          (VP (VBZ wants)
            (S
              (VP (TO to)
                (VP (VB hear))))))))
    (. .)))

root(ROOT-0, Words-1)
complm(wants-6, that-2)
det(EVER-5, no-3)
num(EVER-5, one-4)
nsubj(wants-6, EVER-5)
xsubj(hear-8, EVER-5)
ccomp(Words-1, wants-6)
aux(hear-8, to-7)
xcomp(wants-6, hear-8)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP say))))
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (NNS guns))
          (VP (VBD were)
            (ADJP (JJ illegal)))))
      (NP (PRP I))
      (VP (VBP feel)
        (NP (PRP you))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT a) (NN fact))
        (SBAR (IN that)
          (S
            (S
              (NP (PRP they))
              (ADVP (RB DO))
              (VP (VBP exist)))
            (CC and)
            (S
              (S
                (VP (TO to)
                  (VP (VB wish)
                    (ADVP (RB otherwise)))))
              (VP (VBZ is)
                (ADVP (RB just))
                (NP
                  (ADJP (RB so) (JJ much))
                  (NN fantasy))))))))
    (. .)))

advmod(say-3, When-1)
nsubj(say-3, you-2)
advcl(feel-10, say-3)
mark(illegal-8, if-5)
nsubj(illegal-8, guns-6)
cop(illegal-8, were-7)
advcl(feel-10, illegal-8)
nsubj(feel-10, I-9)
root(ROOT-0, feel-10)
dobj(feel-10, you-11)
nsubj(fact-17, it-14)
cop(fact-17, is-15)
det(fact-17, a-16)
conj_but(feel-10, fact-17)
complm(exist-21, that-18)
nsubj(exist-21, they-19)
advmod(exist-21, DO-20)
ccomp(fact-17, exist-21)
aux(wish-24, to-23)
csubj(fantasy-30, wish-24)
advmod(wish-24, otherwise-25)
cop(fantasy-30, is-26)
advmod(fantasy-30, just-27)
advmod(much-29, so-28)
amod(fantasy-30, much-29)
ccomp(fact-17, fantasy-30)
conj_and(exist-21, fantasy-30)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NNS cases))
        (VP (VBN cited))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT an) (NN individual))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBD understood)
                (NP (JJ lethal) (NN force)))
              (CC and)
              (VP (VBD used)
                (NP (PRP it))
                (PP (IN in)
                  (S
                    (VP (VBG defending)
                      (NP (DT the) (JJ innocent)))))))))))
    (. .)))

det(cases-3, the-2)
prep_in(individual-9, cases-3)
partmod(cases-3, cited-4)
nsubj(individual-9, it-6)
cop(individual-9, was-7)
det(individual-9, an-8)
root(ROOT-0, individual-9)
nsubj(understood-11, individual-9)
nsubj(used-15, individual-9)
rcmod(individual-9, understood-11)
amod(force-13, lethal-12)
dobj(understood-11, force-13)
rcmod(individual-9, used-15)
conj_and(understood-11, used-15)
dobj(used-15, it-16)
prepc_in(used-15, defending-18)
det(innocent-20, the-19)
dobj(defending-18, innocent-20)

(ROOT
  (S
    (S
      (NP (DT The) (NN world))
      (VP (MD can)
        (VP (VB be)
          (NP (DT an) (JJ ugly) (NN place)))))
    (CC and)
    (S
      (S
        (VP (TO to)
          (VP (VB know)
            (CC and)
            (VB understand)
            (NP (DT this)))))
      (VP (VBZ is)
        (NP (DT the) (JJ only) (NNP REAL) (NN defense))))
    (. .)))

det(world-2, The-1)
nsubj(place-7, world-2)
aux(place-7, can-3)
cop(place-7, be-4)
det(place-7, an-5)
amod(place-7, ugly-6)
root(ROOT-0, place-7)
aux(know-10, to-9)
csubj(defense-18, know-10)
conj_and(know-10, understand-12)
csubj(defense-18, understand-12)
dobj(know-10, this-13)
cop(defense-18, is-14)
det(defense-18, the-15)
amod(defense-18, only-16)
nn(defense-18, REAL-17)
conj_and(place-7, defense-18)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB accept)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP you))
              (VP (VBP are)))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB know)
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (TO to)
                  (VP
                    (ADVP (RBS best))
                    (VB proceed)))))))))
    (. .)))

aux(accept-2, To-1)
csubj(is-6, accept-2)
advmod(are-5, where-3)
nsubj(are-5, you-4)
advcl(accept-2, are-5)
root(ROOT-0, is-6)
aux(know-8, to-7)
xcomp(is-6, know-8)
advmod(proceed-12, how-9)
aux(proceed-12, to-10)
advmod(proceed-12, best-11)
ccomp(know-8, proceed-12)
xcomp(know-8, proceed-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (PP (IN in)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB keep)
                (CC and)
                (VB bear)
                (NP
                  (NP (NNS arms))
                  (CONJP (RB as) (RB well) (IN as))
                  (NP (DT the) (NN right)))
                (S
                  (VP (TO to)
                    (VP (VB choose)
                      (S
                        (VP (TO to)
                          (VP (VB leave)
                            (NP (PRP$ your) (NN protection))
                            (PP (IN in)
                              (NP
                                (NP (DT the) (JJ limited) (NNS hands))
                                (PP (IN of)
                                  (NP (NNS others)))))))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
det(right-5, the-4)
prep_in(believe-2, right-5)
aux(keep-7, to-6)
infmod(right-5, keep-7)
infmod(right-5, bear-9)
conj_and(keep-7, bear-9)
dobj(keep-7, arms-10)
det(right-15, the-14)
dobj(keep-7, right-15)
conj_and(arms-10, right-15)
aux(choose-17, to-16)
xcomp(keep-7, choose-17)
aux(leave-19, to-18)
xcomp(choose-17, leave-19)
poss(protection-21, your-20)
dobj(leave-19, protection-21)
det(hands-25, the-23)
amod(hands-25, limited-24)
prep_in(leave-19, hands-25)
prep_of(hands-25, others-27)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP abdicate)
          (NP (PRP$ your) (NN responsibility))
          (PP (IN in)
            (NP (NN deference)))
          (PP (TO to)
            (NP (DT the) (NN state))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (VBP get)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP get) (: --)
            (NP
              (NP (JJ fat) (NN campus) (NNS police))
              (PP (IN in)
                (NP
                  (NP (NN swat) (NN gear))
                  (VP (VBG hiding)
                    (PP (IN behind)
                      (NP (NNS trees)))
                    (SBAR (IN while)
                      (S
                        (NP (PRP$ your) (NN loved) (NNS ones))
                        (VP (VBP are)
                          (VP (VBG being)
                            (VP (VBN gunned)
                              (ADVP (RB down) (RB inside)))))))))))))))
    (. .)))

cc(get-15, But-1)
mark(abdicate-4, if-2)
nsubj(abdicate-4, you-3)
advcl(get-15, abdicate-4)
poss(responsibility-6, your-5)
dobj(abdicate-4, responsibility-6)
prep_in(abdicate-4, deference-8)
det(state-11, the-10)
prep_to(abdicate-4, state-11)
advmod(get-15, then-13)
nsubj(get-15, you-14)
root(ROOT-0, get-15)
dobj(get-18, what-16)
nsubj(get-18, you-17)
ccomp(get-15, get-18)
amod(police-22, fat-20)
nn(police-22, campus-21)
dobj(get-18, police-22)
nn(gear-25, swat-24)
prep_in(police-22, gear-25)
partmod(gear-25, hiding-26)
prep_behind(hiding-26, trees-28)
mark(gunned-35, while-29)
poss(ones-32, your-30)
nn(ones-32, loved-31)
nsubjpass(gunned-35, ones-32)
aux(gunned-35, are-33)
auxpass(gunned-35, being-34)
advcl(hiding-26, gunned-35)
advmod(inside-37, down-36)
advmod(gunned-35, inside-37)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB believe)
        (SBAR (IN that)
          (S
            (NP
              (NP (NNS guns))
              (PP (IN in)
                (NP (NN book) (NNS bags))))
            (VP (VBP are)
              (NP (DT the) (NN answer))
              (ADVP (RB either)))))))
    (. .)))

cc(believe-5, But-1)
nsubj(believe-5, I-2)
aux(believe-5, do-3)
neg(believe-5, n't-4)
root(ROOT-0, believe-5)
complm(answer-13, that-6)
nsubj(answer-13, guns-7)
nn(bags-10, book-9)
prep_in(guns-7, bags-10)
cop(answer-13, are-11)
det(answer-13, the-12)
ccomp(believe-5, answer-13)
advmod(answer-13, either-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (NN advocate)
        (NP (DT a) (JJ volunteer) (JJ only) (NN campus) (NN home) (NN guard))))
    (. .)))

nsubj(advocate-3, I-1)
aux(advocate-3, would-2)
root(ROOT-0, advocate-3)
det(guard-9, a-4)
amod(guard-9, volunteer-5)
amod(guard-9, only-6)
nn(guard-9, campus-7)
nn(guard-9, home-8)
dobj(advocate-3, guard-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD could)
      (VP (VB be)
        (NP (NNS staffers) (, ,) (NN faculty)
          (CC and)
          (NN administration))))
    (. .)))

nsubj(staffers-4, It-1)
aux(staffers-4, could-2)
cop(staffers-4, be-3)
root(ROOT-0, staffers-4)
conj_and(staffers-4, faculty-6)
conj_and(staffers-4, administration-8)

(ROOT
  (S
    (NP (DT The) (NN college))
    (VP (MD could)
      (VP
        (VP (VB vet))
        (, ,)
        (VP (VB set)
          (NP (NNS parameters)))
        (CC and)
        (VP (VB police)
          (NP (PRP them)))))
    (. .)))

det(college-2, The-1)
nsubj(vet-4, college-2)
nsubj(set-6, college-2)
nsubj(police-9, college-2)
aux(vet-4, could-3)
root(ROOT-0, vet-4)
conj_and(vet-4, set-6)
dobj(set-6, parameters-7)
conj_and(vet-4, police-9)
dobj(police-9, them-10)

