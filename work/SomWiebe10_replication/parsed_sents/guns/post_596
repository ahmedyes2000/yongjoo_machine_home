(ROOT
  (NP
    (NP
      (NP (DT The) (NNP Rhodesian))
      (, ,)
      (CC and)
      (NP (DT the) (NNPS Soviets)))
    (. .)))

det(Rhodesian-2, The-1)
root(ROOT-0, Rhodesian-2)
det(Soviets-6, the-5)
conj_and(Rhodesian-2, Soviets-6)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN of)
        (NP (PRP$ their) (NNS positions))))
    (VP (VBD involved)
      (NP (NN ground) (NNS troops))
      (PP (IN in)
        (NP (VBN prolonged) (NN conflict))))
    (. .)))

nsubj(involved-5, All-1)
poss(positions-4, their-3)
prep_of(All-1, positions-4)
root(ROOT-0, involved-5)
nn(troops-7, ground-6)
dobj(involved-5, troops-7)
amod(conflict-10, prolonged-9)
prep_in(involved-5, conflict-10)

(ROOT
  (S
    (ADVP (RB Now))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB care)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD guns)
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP 've)
                        (VP (VBN bought)))))))))))
      (, ,))
    (NP
      (NP (PRP you))
      (CC and)
      (NP
        (QP (CD two) (CD hundred))
        (NNS people)))
    (VP (VBP are) (RB not)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP
              (VP (VB storm)
                (NP (DT a) (NNP US) (NN army) (NN base)))
              (CC and)
              (VP (VB capture)
                (NP (PRP it))))))))
    (. .)))

advmod(going-20, Now-1)
nsubj(care-6, I-3)
aux(care-6, do-4)
neg(care-6, n't-5)
parataxis(going-20, care-6)
nsubj(guns-8, what-7)
ccomp(care-6, guns-8)
nsubj(bought-11, you-9)
aux(bought-11, 've-10)
ccomp(guns-8, bought-11)
nsubj(going-20, you-13)
xsubj(storm-22, you-13)
number(hundred-16, two-15)
num(people-17, hundred-16)
conj_and(you-13, people-17)
nsubj(going-20, people-17)
xsubj(storm-22, people-17)
aux(going-20, are-18)
neg(going-20, not-19)
root(ROOT-0, going-20)
aux(storm-22, to-21)
xcomp(going-20, storm-22)
det(base-26, a-23)
nn(base-26, US-24)
nn(base-26, army-25)
dobj(storm-22, base-26)
xcomp(going-20, capture-28)
conj_and(storm-22, capture-28)
dobj(capture-28, it-29)

(ROOT
  (S
    (S
      (NP (DT The) (NN army))
      (VP (VBZ does) (RB n't)
        (ADVP (RB actually))
        (VP (VB need)
          (S
            (VP (TO to)
              (VP (VB be)
                (S
                  (NP (EX there))
                  (VP (TO to)
                    (VP (VB kill)
                      (NP (PRP you)))))))))))
    (: --)
    (S
      (NP (PRP they))
      (VP (MD can)
        (VP (VB shell)
          (NP (PRP you))
          (PP (IN from)
            (NP (DT a) (NN distance)))
          (SBAR
            (WHADVP (WRB wherever))
            (S
              (NP (PRP you))
              (VP (VBP 're)
                (VP (VBN holed)
                  (PRT (RP up)))))))))
    (. .)))

det(army-2, The-1)
nsubj(need-6, army-2)
xsubj(be-8, army-2)
aux(need-6, does-3)
neg(need-6, n't-4)
advmod(need-6, actually-5)
root(ROOT-0, need-6)
aux(be-8, to-7)
xcomp(need-6, be-8)
expl(kill-11, there-9)
aux(kill-11, to-10)
xcomp(be-8, kill-11)
dobj(kill-11, you-12)
nsubj(kill-11, you-12)
nsubj(shell-16, they-14)
aux(shell-16, can-15)
parataxis(need-6, shell-16)
dobj(shell-16, you-17)
det(distance-20, a-19)
prep_from(shell-16, distance-20)
advmod(holed-24, wherever-21)
nsubjpass(holed-24, you-22)
auxpass(holed-24, 're-23)
advcl(shell-16, holed-24)
prt(holed-24, up-25)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB compare)
                (NP (PRP$ your) (JJ possible) (NN conflict))
                (PP (TO to)
                  (NP (NN something)))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD 'd)
      (VP (VB be)
        (VP (VBG taking)
          (NP
            (NP (DT the) (NN side))
            (PP (IN of)
              (NP (DT the) (NNS insurgents))))
          (SBAR (IN in)
            (S
              (NP
                (NP (NNP Iraq))
                (: --)
                (ADJP (RB well) (JJ armed))
                (, ,))
              (VP (VBP have)
                (NP
                  (NP (DT the) (NN lay))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN land))
                      (, ,)
                      (NP (FW etc.)))))))))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
xsubj(compare-5, you-2)
advcl(taking-15, want-3)
aux(compare-5, to-4)
xcomp(want-3, compare-5)
poss(conflict-8, your-6)
amod(conflict-8, possible-7)
dobj(compare-5, conflict-8)
prep_to(compare-5, something-10)
nsubj(taking-15, you-12)
aux(taking-15, 'd-13)
aux(taking-15, be-14)
root(ROOT-0, taking-15)
det(side-17, the-16)
dobj(taking-15, side-17)
det(insurgents-20, the-19)
prep_of(side-17, insurgents-20)
mark(have-27, in-21)
nsubj(have-27, Iraq-22)
advmod(armed-25, well-24)
amod(Iraq-22, armed-25)
advcl(taking-15, have-27)
det(lay-29, the-28)
dobj(have-27, lay-29)
det(land-32, the-31)
prep_of(lay-29, land-32)
appos(land-32, etc.-34)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (RB certainly) (NNPS Americans))
    (VP (VBP are)
      (VP (VBN killed)
        (PP (IN by)
          (NP (DT those) (NNS insurgents)))))
    (. .)))

advmod(killed-6, Now-1)
advmod(Americans-4, certainly-3)
nsubjpass(killed-6, Americans-4)
auxpass(killed-6, are-5)
root(ROOT-0, killed-6)
det(insurgents-9, those-8)
agent(killed-6, insurgents-9)

(ROOT
  (S
    (S
      (ADVP (RB BUT))
      (NP (PRP they))
      (VP (VBP have) (RB n't)
        (VP (VBN taken)
          (NP (CD one) (NN base)))))
    (, ,)
    (NP (PRP they))
    (VP (VBP have) (RB n't)
      (VP (VBN driven)
        (PP (IN out)
          (NP (DT any) (JJ occupying) (NNS forces)))))
    (. .)))

advmod(taken-5, BUT-1)
nsubj(taken-5, they-2)
aux(taken-5, have-3)
neg(taken-5, n't-4)
ccomp(driven-12, taken-5)
num(base-7, one-6)
dobj(taken-5, base-7)
nsubj(driven-12, they-9)
aux(driven-12, have-10)
neg(driven-12, n't-11)
root(ROOT-0, driven-12)
det(forces-16, any-14)
amod(forces-16, occupying-15)
prep_out(driven-12, forces-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP
            (NP (NN policy))
            (PP (TO to)
              (NP (NN hunt))))
          (PP (IN down)
            (NP
              (NP (JJ insurgent) (NNS cells))
              (PP (IN as)
                (NP (DT the) (JJ primary) (NN goal)))))
          (, ,)
          (PP (IN with)
            (NP
              (NP (DT the) (JJ entire) (JJ armed) (NNS forces))
              (VP (VBN brought)
                (S
                  (VP (TO to)
                    (VP (VB bear))))))))))
    (PRN (-LRB- -LRB-)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (ADVP (RB certainly))
          (VP (MD would)
            (VP (VB be)
              (PP (IN in)
                (NP (DT a) (JJ civil) (NN war)))))))
      (-RRB- -RRB-))
    (NP (EX there))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (JJ little) (NN doubt))
          (SBAR
            (WHNP (WP who))
            (S
              (NP (DT the) (NN victor))
              (VP (MD would)
                (VP (VB be))))))))
    (. .)))

mark(policy-4, If-1)
nsubj(policy-4, it-2)
cop(policy-4, was-3)
advcl(doubt-38, policy-4)
prep_to(policy-4, hunt-6)
amod(cells-9, insurgent-8)
prep_down(policy-4, cells-9)
det(goal-13, the-11)
amod(goal-13, primary-12)
prep_as(cells-9, goal-13)
det(forces-19, the-16)
amod(forces-19, entire-17)
amod(forces-19, armed-18)
prep_with(policy-4, forces-19)
xsubj(bear-22, forces-19)
partmod(forces-19, brought-20)
aux(bear-22, to-21)
xcomp(brought-20, bear-22)
mark(be-28, as-24)
nsubj(be-28, it-25)
advmod(be-28, certainly-26)
aux(be-28, would-27)
parataxis(doubt-38, be-28)
det(war-32, a-30)
amod(war-32, civil-31)
prep_in(be-28, war-32)
expl(doubt-38, there-34)
aux(doubt-38, would-35)
cop(doubt-38, be-36)
amod(doubt-38, little-37)
root(ROOT-0, doubt-38)
dobj(be-43, doubt-38)
rel(be-43, who-39)
det(victor-41, the-40)
nsubj(be-43, victor-41)
aux(be-43, would-42)
rcmod(doubt-38, be-43)

