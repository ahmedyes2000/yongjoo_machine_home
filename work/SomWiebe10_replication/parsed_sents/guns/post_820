(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (DT a) (NN background) (NN check))
        (VP
          (VP (VBZ is)
            (VP (VBN preformed)))
          (CC and)
          (VP (VBZ comes)
            (PP (IN out)
              (ADJP (JJ clean)))))))
    (, ,)
    (NP (JJS most) (NNS americans))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN history))
        (PP (IN of)
          (NP (NN gun) (NN safety)))))
    (. .)))

advmod(preformed-7, Even-1)
dep(preformed-7, if-2)
det(check-5, a-3)
nn(check-5, background-4)
nsubjpass(preformed-7, check-5)
nsubj(comes-9, check-5)
auxpass(preformed-7, is-6)
advcl(have-15, preformed-7)
conj_and(preformed-7, comes-9)
advcl(have-15, comes-9)
prep_out(comes-9, clean-11)
amod(americans-14, most-13)
nsubj(have-15, americans-14)
root(ROOT-0, have-15)
det(history-17, no-16)
dobj(have-15, history-17)
nn(safety-20, gun-19)
prep_of(history-17, safety-20)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (SBAR (IN though)
      (S
        (NP (NNS americans))
        (VP (MD may)
          (VP
            (VP (VB be)
              (NP
                (NP (`` ``) (NN law) (NN abiding) ('' ''))
                (SBAR
                  (S
                    (NP (PRP they))
                    (ADVP (RB still))
                    (VP (VBP are)
                      (NP (NNS animals)))))))
            (CC and)
            (VP (VB have)
              (NP (JJ natural) (NNS reactions)))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (ADJP
        (NP (DT NO) (NN human))
        (JJ alive))
      (SBAR (IN that)
        (S
          (NP (NN hasnt))
          (VP
            (VP (VBN been)
              (VP (VBN startled)
                (ADVP (RB before))))
            (CC or)
            (VP (JJ scared))))))
    (. .)))

advmod(is-21, Also-1)
mark(abiding-9, though-3)
nsubj(abiding-9, americans-4)
nsubj(have-16, americans-4)
aux(abiding-9, may-5)
cop(abiding-9, be-6)
nn(abiding-9, law-8)
advcl(is-21, abiding-9)
nsubj(animals-14, they-11)
advmod(animals-14, still-12)
cop(animals-14, are-13)
rcmod(abiding-9, animals-14)
conj_and(abiding-9, have-16)
advcl(is-21, have-16)
amod(reactions-18, natural-17)
dobj(have-16, reactions-18)
expl(is-21, there-20)
root(ROOT-0, is-21)
det(human-23, NO-22)
npadvmod(alive-24, human-23)
acomp(is-21, alive-24)
complm(startled-28, that-25)
nsubjpass(startled-28, hasnt-26)
nsubj(scared-31, hasnt-26)
auxpass(startled-28, been-27)
ccomp(is-21, startled-28)
advmod(startled-28, before-29)
ccomp(is-21, scared-31)
conj_or(startled-28, scared-31)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNS criminals))
        (VP (VBP keep)
          (NP (PRP$ their) (NNS guns)))))
    (, ,)
    (NP (PRP they))
    (VP (VBP wont)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB use)
                (NP (PRP them))))))))
    (. .)))

mark(keep-3, If-1)
nsubj(keep-3, criminals-2)
advcl(wont-8, keep-3)
poss(guns-5, their-4)
dobj(keep-3, guns-5)
nsubj(wont-8, they-7)
root(ROOT-0, wont-8)
cop(able-10, be-9)
dep(wont-8, able-10)
aux(use-12, to-11)
xcomp(able-10, use-12)
dobj(use-12, them-13)

(ROOT
  (FRAG (WRB Why) (. ?)))

root(ROOT-0, Why-1)

(ROOT
  (S
    (S
      (NP
        (NP (NNS People))
        (SBAR (IN if)
          (S
            (NP (DT no) (NN one))
            (VP (VBD had)
              (NP
                (NP (DT a) (NN gun))
                (PP (IN in)
                  (NP
                    (NP (DT an) (NN area))
                    (CC and)
                    (NP (CD one) (JJ single) (NN shot)))))))))
      (VP (VBD was)
        (VP (VBN heard))))
    (, ,)
    (S
      (NP (DT the) (JJ whole) (NN area))
      (VP (MD would)
        (VP (VB be)
          (PP (IN on)
            (NP
              (NP (NN alert))
              (PP (IN for)
                (NP (DT that) (CD one) (NN shot))))))))
    (CC and)
    (S
      (NP (DT the) (NN gun))
      (VP (MD would)
        (VP (VB get)
          (VP (VBN confiscated)))))
    (. .)))

nsubjpass(heard-16, People-1)
mark(had-5, if-2)
det(one-4, no-3)
nsubj(had-5, one-4)
dep(People-1, had-5)
det(gun-7, a-6)
dobj(had-5, gun-7)
det(area-10, an-9)
prep_in(gun-7, area-10)
num(shot-14, one-12)
amod(shot-14, single-13)
prep_in(gun-7, shot-14)
conj_and(area-10, shot-14)
auxpass(heard-16, was-15)
root(ROOT-0, heard-16)
det(area-20, the-18)
amod(area-20, whole-19)
nsubj(be-22, area-20)
aux(be-22, would-21)
conj_and(heard-16, be-22)
prep_on(be-22, alert-24)
det(shot-28, that-26)
num(shot-28, one-27)
prep_for(alert-24, shot-28)
det(gun-31, the-30)
nsubjpass(confiscated-34, gun-31)
aux(confiscated-34, would-32)
auxpass(confiscated-34, get-33)
conj_and(heard-16, confiscated-34)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS countries))
        (PP (IN like)
          (NP (JJ great) (NN britan)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (JJ strict) (NN gun) (NN control)))))))
    (, ,)
    (NP (DT this))
    (VP (VBZ happens)
      (NP (PDT all) (DT the) (NN time)))
    (. .)))

prep_in(happens-14, countries-2)
amod(britan-5, great-4)
prep_like(countries-2, britan-5)
advmod(is-8, where-6)
expl(is-8, there-7)
rcmod(countries-2, is-8)
amod(control-11, strict-9)
nn(control-11, gun-10)
nsubj(is-8, control-11)
nsubj(happens-14, this-13)
root(ROOT-0, happens-14)
predet(time-17, all-15)
det(time-17, the-16)
dobj(happens-14, time-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (ADVP (RB just))
        (VP (VBP assume)
          (NP (PRP$ its) (JJ useless) (NN cause))
          (SBAR
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP have)
                  (NP (DT some) (NNS criminals)))))
            (CC and)
            (SBAR (RB just)
              (S
                (VP (VBP have)
                  (PP (TO to)
                    (NP (JJ bare) (NNS arms)))
                  (S
                    (VP (TO to)
                      (VP (VB balance)
                        (NP (PRP it))
                        (PP (RB out) (RB then)
                          (NP
                            (NP (PRP$ its)
                              (QP (RB just) (RB twice)))
                            (ADJP (RB as) (JJ dangerous))))))))))))))
    (, ,)
    (NP (CD two) (NNS lefts))
    (VP (VBP do) (RB n't)
      (VP (VB make)
        (NP (DT a) (NN right))))
    (. .)))

mark(assume-4, If-1)
nsubj(assume-4, we-2)
advmod(assume-4, just-3)
advcl(make-33, assume-4)
poss(cause-7, its-5)
amod(cause-7, useless-6)
dobj(assume-4, cause-7)
nsubj(have-9, we-8)
nsubj(have-14, we-8)
dep(assume-4, have-9)
det(criminals-11, some-10)
dobj(have-9, criminals-11)
advmod(have-14, just-13)
dep(assume-4, have-14)
conj_and(have-9, have-14)
amod(arms-17, bare-16)
prep_to(have-14, arms-17)
aux(balance-19, to-18)
xcomp(have-14, balance-19)
dobj(balance-19, it-20)
prep(balance-19, out-21)
advmod(out-21, then-22)
poss(twice-25, its-23)
quantmod(twice-25, just-24)
pobj(out-21, twice-25)
advmod(dangerous-27, as-26)
amod(twice-25, dangerous-27)
num(lefts-30, two-29)
nsubj(make-33, lefts-30)
aux(make-33, do-31)
neg(make-33, n't-32)
root(ROOT-0, make-33)
det(right-35, a-34)
dobj(make-33, right-35)

(ROOT
  (S
    (NP
      (NP (NN Anyone))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ is)
            (VP (VBN considered)
              (NP (DT a) (`` ``) (NN criminal) ('' '')))))))
    (VP
      (VP (VBZ is)
        (PP (IN on)
          (NP
            (NP (NN record))
            (PP (IN by)
              (NP (DT the) (NNP US) (NN government))))))
      (CC and)
      (VP (MD will)
        (VP (VB be)
          (VP (VBN searched)
            (PP (IN before)
              (NP
                (NP (DT the) (NNS citizens))
                (PP (IN for)
                  (NP (DT that) (NN reason)))))))))
    (. .)))

nsubjpass(considered-4, Anyone-1)
nsubj(is-9, Anyone-1)
nsubjpass(searched-19, Anyone-1)
auxpass(considered-4, is-3)
rcmod(Anyone-1, considered-4)
det(criminal-7, a-5)
dobj(considered-4, criminal-7)
root(ROOT-0, is-9)
prep_on(is-9, record-11)
det(government-15, the-13)
nn(government-15, US-14)
prep_by(record-11, government-15)
aux(searched-19, will-17)
auxpass(searched-19, be-18)
conj_and(is-9, searched-19)
det(citizens-22, the-21)
prep_before(searched-19, citizens-22)
det(reason-25, that-24)
prep_for(citizens-22, reason-25)

(ROOT
  (S
    (NP (DT The) (NN government))
    (VP (VBZ is)
      (ADJP (JJ smart) (RB enough)
        (S
          (VP (TO to)
            (VP (VB realize)
              (SBAR (IN that)
                (S
                  (NP (NNS criminals))
                  (VP (MD would)
                    (VP (VB have)
                      (NP
                        (NP (NNS guns))
                        (, ,)
                        (NP
                          (NP (PRP$ its) (RB not) (NN something) (NNS thats))
                          (VP
                            (ADVP (RB just))
                            (VBN overlooked)))))))))))))
    (. .)))

det(government-2, The-1)
nsubj(smart-4, government-2)
cop(smart-4, is-3)
root(ROOT-0, smart-4)
advmod(smart-4, enough-5)
aux(realize-7, to-6)
xcomp(smart-4, realize-7)
complm(have-11, that-8)
nsubj(have-11, criminals-9)
aux(have-11, would-10)
ccomp(realize-7, have-11)
dobj(have-11, guns-12)
poss(thats-17, its-14)
neg(thats-17, not-15)
nn(thats-17, something-16)
appos(guns-12, thats-17)
advmod(overlooked-19, just-18)
partmod(thats-17, overlooked-19)

(ROOT
  (S
    (NP (PRP$ Its))
    (VP
      (NP (DT those) (NNS feelings))
      (NP
        (NP (DT that) (JJ provoke) (NN gun) (NN use))
        (PP (IN as)
          (NP (DT a) (NN defense))))
      (PP (IN in)
        (NP (DT the) (JJ first) (NN place))))
    (. .)))

nsubj(feelings-3, Its-1)
det(feelings-3, those-2)
root(ROOT-0, feelings-3)
det(use-7, that-4)
amod(use-7, provoke-5)
nn(use-7, gun-6)
dobj(feelings-3, use-7)
det(defense-10, a-9)
prep_as(use-7, defense-10)
det(place-14, the-12)
amod(place-14, first-13)
prep_in(feelings-3, place-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (NP
            (NP (NN defense))
            (PP (IN against)
              (NP (NNS intruders))))
          (, ,)
          (S
            (VP (VB try)
              (NP (DT a) (NN home) (NN alarm) (NN system)))))))
    (, ,)
    (NP (DT a) (JJ loud) (NN barking) (NN dog))
    (VP (MD will)
      (ADVP (RB even))
      (VP (VB warn)
        (NP (PRP you))
        (PP (IN without)
          (S
            (VP (VBG killing)
              (NP (NN someone)))))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
advcl(warn-20, want-3)
dobj(want-3, defense-4)
prep_against(defense-4, intruders-6)
dep(want-3, try-8)
det(system-12, a-9)
nn(system-12, home-10)
nn(system-12, alarm-11)
dobj(try-8, system-12)
det(dog-17, a-14)
amod(dog-17, loud-15)
nn(dog-17, barking-16)
nsubj(warn-20, dog-17)
aux(warn-20, will-18)
advmod(warn-20, even-19)
root(ROOT-0, warn-20)
dobj(warn-20, you-21)
prepc_without(warn-20, killing-23)
dobj(killing-23, someone-24)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB stop)
                (NP (NN someone))))))))
    (, ,)
    (VP (VB use)
      (NP
        (NP (DT another) (NN form))
        (PP (IN of)
          (NP
            (NP (NN defense))
            (PP (IN like)
              (NP (DT a) (NN taser)))))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
xsubj(stop-5, you-2)
advcl(use-8, want-3)
aux(stop-5, to-4)
xcomp(want-3, stop-5)
dobj(stop-5, someone-6)
root(ROOT-0, use-8)
det(form-10, another-9)
dobj(use-8, form-10)
prep_of(form-10, defense-12)
det(taser-15, a-14)
prep_like(defense-12, taser-15)

(ROOT
  (S
    (NP (DT Some) (NNS people))
    (VP (MD may)
      (SBAR
        (SBAR
          (S
            (VP (VBP say))))
        (, ,)
        (CC but)
        (SBAR (WP what) (IN if)
          (S
            (NP (PRP they))
            (VP (VBP have)
              (NP (DT a) (NN gun))))
          (. ?))))))

det(people-2, Some-1)
nsubj(may-3, people-2)
root(ROOT-0, may-3)
dep(may-3, say-4)
dep(have-10, what-7)
dep(have-10, if-8)
nsubj(have-10, they-9)
dep(may-3, have-10)
conj_but(say-4, have-10)
det(gun-12, a-11)
dobj(have-10, gun-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (NN gun) (NN control))
            (, ,)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP couldnt)
                  (VP (VB be)
                    (NP (DT the) (NN case))))))))))
    (, ,)
    (S
      (INTJ (UH yes))
      (NP (EX there))
      (VP (MD will)
        (ADVP (RB always))
        (VP (VB be)
          (NP (JJ violent) (NNS people)))))
    (, ,)
    (CC but)
    (S
      (PP (IN without)
        (NP (NNS guns)))
      (NP (EX there))
      (VP (MD would)
        (VP (VB be)
          (NP
            (ADJP (RBR less) (JJ dead))
            (NNS people)))))
    (. .)))

mark(was-3, If-1)
expl(was-3, there-2)
advcl(people-19, was-3)
nn(control-5, gun-4)
nsubj(was-3, control-5)
nsubj(couldnt-8, control-5)
rcmod(control-5, couldnt-8)
cop(case-11, be-9)
det(case-11, the-10)
xcomp(couldnt-8, case-11)
dep(people-19, yes-13)
expl(people-19, there-14)
aux(people-19, will-15)
advmod(people-19, always-16)
cop(people-19, be-17)
amod(people-19, violent-18)
root(ROOT-0, people-19)
prep_without(people-29, guns-23)
expl(people-29, there-24)
aux(people-29, would-25)
cop(people-29, be-26)
advmod(dead-28, less-27)
amod(people-29, dead-28)
conj_but(people-19, people-29)

(ROOT
  (S
    (S
      (PP (IN At)
        (NP (NN school)))
      (NP (DT no) (NN one))
      (VP (VBZ has)
        (NP
          (NP (DT a) (NN gun))
          (, ,)
          (NP
            (NP (PRP$ its))
            (SBAR
              (WHADVP (RB just) (WRB how))
              (S
                (NP (PRP it))
                (VP (VBZ is))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (DT the) (NNS cases)))
      (S
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP one))
            (VP (VBD was)
              (VP (VBN entered)
                (PP (IN into)
                  (NP (DT the) (NN environment)))))))
        (, ,)
        (NP (EX there))
        (VP (VBD was)
          (NP (DT a) (NN set) (NN plan)
            (S
              (VP (TO to)
                (VP (VB stay)
                  (ADJP (JJ safe))))))))
      (CC and)
      (S
        (S
          (NP (DT the) (NNS deaths))
          (VP (VBP are)
            (ADJP
              (ADJP (RB obviously) (JJR lower))
              (PP (IN from)
                (NP (DT that) (NN event))))))
        (, ,) (RB then)
        (S
          (NP (PRP they))
          (VP (MD would)
            (VP (VB be)
              (SBAR (IN if)
                (S
                  (NP (NNS guns))
                  (VP (VBD were)
                    (ADVP (RB aloud))
                    (ADVP (RB daily))))))))))
    (. .)))

prep_at(has-5, school-2)
det(one-4, no-3)
nsubj(has-5, one-4)
root(ROOT-0, has-5)
det(gun-7, a-6)
dobj(has-5, gun-7)
appos(gun-7, its-9)
advmod(how-11, just-10)
advmod(is-13, how-11)
nsubj(is-13, it-12)
dep(its-9, is-13)
det(cases-18, the-17)
prep_in(was-28, cases-18)
advmod(entered-22, where-19)
nsubjpass(entered-22, one-20)
auxpass(entered-22, was-21)
advcl(was-28, entered-22)
det(environment-25, the-24)
prep_into(entered-22, environment-25)
expl(was-28, there-27)
conj_and(has-5, was-28)
det(plan-31, a-29)
nn(plan-31, set-30)
nsubj(was-28, plan-31)
aux(safe-34, to-32)
cop(safe-34, stay-33)
infmod(plan-31, safe-34)
det(deaths-37, the-36)
nsubj(lower-40, deaths-37)
cop(lower-40, are-38)
advmod(lower-40, obviously-39)
conj_and(has-5, lower-40)
conj_and(was-28, lower-40)
det(event-43, that-42)
prep_from(lower-40, event-43)
advmod(lower-40, then-45)
nsubj(be-48, they-46)
aux(be-48, would-47)
dep(lower-40, be-48)
mark(were-51, if-49)
nsubj(were-51, guns-50)
advcl(be-48, were-51)
advmod(were-51, aloud-52)
advmod(were-51, daily-53)

(ROOT
  (S
    (NP (NNS Guns))
    (VP
      (VP (VB make)
        (NP (NN room))
        (PP (IN for)
          (NP (JJ emotional) (NNS mistakes))))
      (CC and)
      (VP (VB kill)
        (NP
          (NP (DT the) (NN need))
          (PP (IN for)
            (NP (NN restraint))))))
    (. .)))

nsubj(make-2, Guns-1)
nsubj(kill-8, Guns-1)
root(ROOT-0, make-2)
dobj(make-2, room-3)
amod(mistakes-6, emotional-5)
prep_for(make-2, mistakes-6)
conj_and(make-2, kill-8)
det(need-10, the-9)
dobj(kill-8, need-10)
prep_for(need-10, restraint-12)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do)
        (SBAR
          (S
            (VP (VBP think)
              (SBAR
                (S
                  (NP (NN gun) (NN control))
                  (VP (MD will)
                    (VP (VB help)
                      (NP (DT this) (NN country)))))))))))
    (CC and)
    (S
      (NP (FW i))
      (VP (VBP am) (RB not)
        (VP (VBN mistaken))))
    (. .)))

nsubj(do-2, I-1)
root(ROOT-0, do-2)
ccomp(do-2, think-3)
nn(control-5, gun-4)
nsubj(help-7, control-5)
aux(help-7, will-6)
ccomp(think-3, help-7)
det(country-9, this-8)
dobj(help-7, country-9)
nsubjpass(mistaken-14, i-11)
auxpass(mistaken-14, am-12)
neg(mistaken-14, not-13)
conj_and(do-2, mistaken-14)

