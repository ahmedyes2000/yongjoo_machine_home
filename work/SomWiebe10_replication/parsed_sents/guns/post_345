(ROOT
  (S
    (ADVP (RB Yes))
    (NP (PRP I))
    (VP (VBP feel)
      (ADJP
        (ADJP (JJR safer))
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBP am)
              (ADJP (JJR safer)))))))
    (. .)))

advmod(feel-3, Yes-1)
nsubj(feel-3, I-2)
root(ROOT-0, feel-3)
acomp(feel-3, safer-4)
mark(safer-8, because-5)
nsubj(safer-8, I-6)
cop(safer-8, am-7)
ccomp(safer-4, safer-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN used)
        (NP (PRP$ my) (NN gun))
        (PP (IN on)
          (NP
            (QP (JJR more) (IN than) (CD one))
            (NN occasion)))
        (S
          (VP (TO to)
            (VP (VB prevent)
              (NP
                (NP
                  (NP (NN theft))
                  (, ,)
                  (NP (NN assault)))
                (CC and)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ knows)
                      (S
                        (NP (WDT what))
                        (ADJP (RB else))
                        (SBAR
                          (SINV (VBD had)
                            (NP (PRP I))
                            (RB not)
                            (VP (VBN been)
                              (VP (VBN armed)))))))))))))))
    (. .)))

nsubj(used-3, I-1)
xsubj(prevent-12, I-1)
aux(used-3, have-2)
root(ROOT-0, used-3)
poss(gun-5, my-4)
dobj(used-3, gun-5)
mwe(than-8, more-7)
quantmod(one-9, than-8)
num(occasion-10, one-9)
prep_on(used-3, occasion-10)
aux(prevent-12, to-11)
xcomp(used-3, prevent-12)
dobj(prevent-12, theft-13)
appos(theft-13, assault-15)
nsubj(knows-18, who-17)
dobj(prevent-12, knows-18)
conj_and(theft-13, knows-18)
rcmod(theft-13, knows-18)
nsubjpass(armed-25, what-19)
dep(armed-25, else-20)
aux(armed-25, had-21)
nsubjpass(armed-25, I-22)
dep(armed-25, not-23)
auxpass(armed-25, been-24)
xcomp(knows-18, armed-25)

(ROOT
  (S
    (PP (IN In)
      (NP (DT all) (NNS cases)))
    (PRN
      (S
        (NP (PRP I))
        (VP (VBD did)
          (NP (NN nothing))
          (S
            (VP (TO to)
              (VP (VB provoke)
                (NP (NN anyone)))))))
      (, ,))
    (ADVP (RB never))
    (VP (VBD fired)
      (SBAR
        (S
          (NP
            (NP (DT a) (NN shot))
            (CC and)
            (NP (DT no) (NNS children)))
          (VP (VBD died)
            (PP (IN from)
              (NP (PRP$ my) (NN weapon)))))))
    (. .)))

det(cases-3, all-2)
prep_in(fired-12, cases-3)
nsubj(did-5, I-4)
parataxis(fired-12, did-5)
dobj(did-5, nothing-6)
aux(provoke-8, to-7)
xcomp(did-5, provoke-8)
dobj(provoke-8, anyone-9)
neg(fired-12, never-11)
root(ROOT-0, fired-12)
det(shot-14, a-13)
nsubj(died-18, shot-14)
det(children-17, no-16)
conj_and(shot-14, children-17)
nsubj(died-18, children-17)
ccomp(fired-12, died-18)
poss(weapon-21, my-20)
prep_from(died-18, weapon-21)

(ROOT
  (SINV
    (PP (IN In)
      (NP
        (NP (`` ``) (JJ real) (NN life) ('' ''))
        (VP
          (ADVP (RB just))
          (VBG having)
          (NP (DT the) (NN weapon)))))
    (VP (VBZ is))
    (NP
      (NP (RB enough))
      (PP (IN of)
        (NP (DT a) (NN deterrent))))
    (. .)))

amod(life-4, real-3)
prep_in(is-10, life-4)
advmod(having-7, just-6)
partmod(life-4, having-7)
det(weapon-9, the-8)
dobj(having-7, weapon-9)
root(ROOT-0, is-10)
nsubj(is-10, enough-11)
det(deterrent-14, a-13)
prep_of(enough-11, deterrent-14)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP I))
            (VP (VBD did) (RB not)
              (VP (VB have)
                (NP (DT a) (NN weapon))))))))
    (NP (PRP it))
    (VP (VBD resulted)
      (PP (IN in)
        (NP
          (NP (DT a) (JJ physical) (NN altercation))
          (VP
            (ADVP (RB sometimes))
            (VBG resulting)
            (PP (IN in)
              (NP (NN injury)))))))
    (. .)))

tmod(have-7, cases-2)
prep_in(resulted-11, cases-2)
advmod(have-7, when-3)
nsubj(have-7, I-4)
aux(have-7, did-5)
neg(have-7, not-6)
dep(cases-2, have-7)
det(weapon-9, a-8)
dobj(have-7, weapon-9)
nsubj(resulted-11, it-10)
root(ROOT-0, resulted-11)
det(altercation-15, a-13)
amod(altercation-15, physical-14)
prep_in(resulted-11, altercation-15)
advmod(resulting-17, sometimes-16)
partmod(altercation-15, resulting-17)
prep_in(resulting-17, injury-19)

(ROOT
  (S
    (ADVP (RB Typically))
    (NP (DT a) (NN burgler))
    (VP (MD would)
      (VP (VB make)
        (NP
          (NP (DT some) (NN type))
          (PP (IN of)
            (NP (NN noise))))
        (S
          (VP (VBG entering)
            (NP (PRP$ your) (NN home))))))
    (. .)))

advmod(make-5, Typically-1)
det(burgler-3, a-2)
nsubj(make-5, burgler-3)
aux(make-5, would-4)
root(ROOT-0, make-5)
det(type-7, some-6)
dobj(make-5, type-7)
prep_of(type-7, noise-9)
xcomp(make-5, entering-10)
poss(home-12, your-11)
dobj(entering-10, home-12)

(ROOT
  (S
    (SBAR (IN Unless)
      (S
        (NP (PRP you))
        (VP (VBP welcome)
          (NP (PRP him))
          (PP (IN in)
            (PP (IN by)
              (S
                (VP (VBG leaving)
                  (NP (DT the) (NNS doors)
                    (CC and)
                    (NNS windows)))))))))
    (VP (VBD unlocked))
    (. .)))

mark(welcome-3, Unless-1)
nsubj(welcome-3, you-2)
csubj(unlocked-12, welcome-3)
dobj(welcome-3, him-4)
prep(welcome-3, in-5)
pcomp(in-5, by-6)
prepc_by(in-5, leaving-7)
det(doors-9, the-8)
dobj(leaving-7, doors-9)
dobj(leaving-7, windows-11)
conj_and(doors-9, windows-11)
root(ROOT-0, unlocked-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could)
      (ADVP (RB never))
      (VP (VB imagine)
        (NP (DT a) (NN situation))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NN anyone) (NN woud))
            (`` ``)
            (VP (VBP have)
              (NP
                (NP (DT the) (NN drop))
                (PP (IN on)
                  (NP (PRP me)))))))
        ('' '')
        (ADVP (RB ever))
        (, ,)
        (PP
          (ADVP (RB especially))
          (IN in)
          (NP (PRP$ my) (JJ own) (NN home)))))
    (. .)))

nsubj(imagine-4, I-1)
aux(imagine-4, could-2)
neg(imagine-4, never-3)
root(ROOT-0, imagine-4)
det(situation-6, a-5)
dobj(imagine-4, situation-6)
advmod(have-11, where-7)
nn(woud-9, anyone-8)
nsubj(have-11, woud-9)
advcl(imagine-4, have-11)
det(drop-13, the-12)
dobj(have-11, drop-13)
prep_on(drop-13, me-15)
advmod(imagine-4, ever-17)
advmod(imagine-4, especially-19)
poss(home-23, my-21)
amod(home-23, own-22)
prep_in(imagine-4, home-23)

(ROOT
  (S (CC And)
    (S
      (VP (VBG having)
        (NP
          (NP (DT a) (NN gun))
          (PP (IN in)
            (NP (PRP$ my) (NN home))))))
    (VP (VBZ is)
      (ADJP
        (ADJP (DT no) (RBR more) (JJ dangerous))
        (PP (IN than)
          (NP (DT any) (JJ other) (NN tool)))))
    (. .)))

cc(dangerous-11, And-1)
csubj(dangerous-11, having-2)
det(gun-4, a-3)
dobj(having-2, gun-4)
poss(home-7, my-6)
prep_in(gun-4, home-7)
cop(dangerous-11, is-8)
dep(dangerous-11, no-9)
advmod(dangerous-11, more-10)
root(ROOT-0, dangerous-11)
det(tool-15, any-13)
amod(tool-15, other-14)
prep_than(dangerous-11, tool-15)

