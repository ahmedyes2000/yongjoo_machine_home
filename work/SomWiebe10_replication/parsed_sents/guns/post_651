(ROOT
  (SBARQ
    (FRAG (RB Adam))
    (, ,)
    (SBARQ
      (WHADJP (WRB How) (JJ fast))
      (SQ (VBZ does)
        (NP (PRP it))
        (VP (VB take)
          (PP (IN for)
            (NP (DT a) (NN police) (NN officer)))
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN dispatched)
                  (PP (TO to)
                    (NP
                      (NP (DT a) (VBN given) (NN location))
                      (PP (IN on)
                        (NP (NN average))))))))))))
    (. ?)))

dep(take-7, Adam-1)
advmod(fast-4, How-3)
dep(take-7, fast-4)
aux(take-7, does-5)
nsubj(take-7, it-6)
xsubj(dispatched-14, it-6)
root(ROOT-0, take-7)
det(officer-11, a-9)
nn(officer-11, police-10)
prep_for(take-7, officer-11)
aux(dispatched-14, to-12)
auxpass(dispatched-14, be-13)
xcomp(take-7, dispatched-14)
det(location-18, a-16)
amod(location-18, given-17)
prep_to(dispatched-14, location-18)
prep_on(location-18, average-20)

(ROOT
  (S
    (PP (IN For)
      (NP (JJS most) (NNS places)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (CD 3-5) (NNS mins)))
    (. .)))

amod(places-3, most-2)
prep_for(mins-8, places-3)
nsubj(mins-8, it-5)
cop(mins-8, 's-6)
num(mins-8, 3-5-7)
root(ROOT-0, mins-8)

(ROOT
  (S (-LRB- -LRB-)
    (VP (VB How))
    (. .) (-RRB- -RRB-)))


(ROOT
  (NP
    (NP (NNP 396))
    (, ,)
    (NP
      (NP (CD 15))
      (NP (NNP L.) (NNP Ed.)))
    (, ,)
    (NP
      (NP (CD 433))
      (PRN (-LRB- -LRB-)
        (NP (CD 856))
        (-RRB- -RRB-))
      (-RRB- -RRB-))
    (. .)))

root(ROOT-0, 396-1)
appos(396-1, 15-3)
nn(Ed.-5, L.-4)
dep(15-3, Ed.-5)
appos(396-1, 433-7)
appos(433-7, 856-9)

(ROOT
  (S
    (NP (DT The) (NN duty)
      (S
        (VP (TO to)
          (VP (VB protect)
            (NP (PRP yourself))))))
    (VP (VBZ is)
      (ADVP (RB up)
        (PP (TO to)
          (NP (PRP YOU)))))
    (. .)))

det(duty-2, The-1)
nsubj(is-6, duty-2)
aux(protect-4, to-3)
infmod(duty-2, protect-4)
dobj(protect-4, yourself-5)
root(ROOT-0, is-6)
advmod(is-6, up-7)
prep_to(up-7, YOU-9)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB like)
            (NP (NNS guns))))))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (ADJP (JJ fine)
        (PP (IN with)
          (NP (PRP me)))))
    (. .)))

advmod(fine-12, Now-1)
mark(like-7, if-3)
nsubj(like-7, you-4)
aux(like-7, do-5)
neg(like-7, n't-6)
advcl(fine-12, like-7)
dobj(like-7, guns-8)
nsubj(fine-12, that-10)
cop(fine-12, 's-11)
root(ROOT-0, fine-12)
prep_with(fine-12, me-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP happen)
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP are)
                  (NP
                    (NP (DT a) (JJ great) (NN way))
                    (PP (IN for)
                      (NP (DT a) (NN person)
                        (S
                          (VP (TO to)
                            (VP (VB protect)
                              (NP (PRP themselves)))))))))))))))
    (. .)))

nsubj(happen-2, I-1)
xsubj(think-4, I-1)
root(ROOT-0, happen-2)
aux(think-4, to-3)
xcomp(happen-2, think-4)
nsubj(way-9, they-5)
cop(way-9, are-6)
det(way-9, a-7)
amod(way-9, great-8)
ccomp(think-4, way-9)
det(person-12, a-11)
prep_for(way-9, person-12)
aux(protect-14, to-13)
infmod(person-12, protect-14)
dobj(protect-14, themselves-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB encourage)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB try)
              (S
                (VP (VBG shooting)
                  (SBAR (IN for)
                    (S
                      (NP (PRP yourself))
                      (VP (TO to)
                        (VP (VB see)
                          (PP (IN for)
                            (NP (PRP yourself))))))))))))))
    (. .)))

nsubj(encourage-3, I-1)
aux(encourage-3, 'd-2)
root(ROOT-0, encourage-3)
nsubj(try-6, you-4)
aux(try-6, to-5)
xcomp(encourage-3, try-6)
xcomp(try-6, shooting-7)
mark(see-11, for-8)
nsubj(see-11, yourself-9)
aux(see-11, to-10)
advcl(shooting-7, see-11)
xcomp(shooting-7, see-11)
prep_for(see-11, yourself-13)

(ROOT
  (S
    (PP (IN In)
      (NP (NN closing)))
    (, ,)
    (NP (PRP I))
    (VP (MD 'd)
      (VP
        (VP (VB reverse)
          (NP (DT the) (NN question))
          (PP (IN on)
            (NP (PRP you))))
        (CC and)
        (VP (VB say) (, ,)
          (SBARQ
            (WHADVP (WRB why))
            (SQ (MD should)
              (NP (DT the) (NN government))
              (VP (VB be)
                (VP (VBN allowed)
                  (S
                    (VP (TO to)
                      (VP
                        (ADVP (RB forcibly))
                        (VB keep)
                        (NP (PRP me))
                        (PP (IN from)
                          (S
                            (VP (VBG protecting)
                              (NP
                                (NP (PRP myself))
                                (CC and)
                                (NP (PRP$ my) (NN loved) (NNS ones))))))))))))
            (. ?)))))))

prep_in(reverse-6, closing-2)
nsubj(reverse-6, I-4)
nsubj(say-12, I-4)
aux(reverse-6, 'd-5)
root(ROOT-0, reverse-6)
det(question-8, the-7)
dobj(reverse-6, question-8)
prep_on(reverse-6, you-10)
conj_and(reverse-6, say-12)
advmod(allowed-19, why-14)
aux(allowed-19, should-15)
det(government-17, the-16)
nsubjpass(allowed-19, government-17)
auxpass(allowed-19, be-18)
dep(say-12, allowed-19)
aux(keep-22, to-20)
advmod(keep-22, forcibly-21)
xcomp(allowed-19, keep-22)
dobj(keep-22, me-23)
prepc_from(keep-22, protecting-25)
dobj(protecting-25, myself-26)
poss(ones-30, my-28)
nn(ones-30, loved-29)
dobj(protecting-25, ones-30)
conj_and(myself-26, ones-30)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB like)
          (NP (NN answering) (NNS questions))
          (PP (IN with)
            (NP (JJ other) (NNS questions))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (PP (IN in)
          (NP
            (NP (DT this) (NN case))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADJP (JJ appropriate)))))))))
    (. .)))

nsubj(like-4, I-1)
aux(like-4, do-2)
neg(like-4, n't-3)
root(ROOT-0, like-4)
nn(questions-6, answering-5)
dobj(like-4, questions-6)
amod(questions-9, other-8)
prep_with(like-4, questions-9)
nsubj(think-13, I-12)
conj_but(like-4, think-13)
det(case-16, this-15)
prep_in(think-13, case-16)
nsubj(appropriate-19, it-17)
cop(appropriate-19, 's-18)
rcmod(case-16, appropriate-19)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB How) (RB well))
        (S
          (VP (VBZ has)
            (S
              (VP (VBG banning)
                (NP (JJ illegal) (NNS drugs)))))))
      (VP (VBD helped)))
    (RB stem)
    (S
      (NP (PRP$ their))
      (VP (VBP use)))
    (. ?)))

advmod(well-3, How-2)
advmod(has-4, well-3)
csubj(helped-8, has-4)
xcomp(has-4, banning-5)
amod(drugs-7, illegal-6)
dobj(banning-5, drugs-7)
root(ROOT-0, helped-8)
advmod(helped-8, stem-9)
nsubj(use-11, their-10)
ccomp(helped-8, use-11)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP see)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP I))
                (VP (VBP 'm)
                  (VP (VBG going)
                    (PP (IN with)
                      (NP (DT this)))))))))))
    (. .)))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(see-5, you-4)
ccomp(think-3, see-5)
advmod(going-9, where-6)
nsubj(going-9, I-7)
aux(going-9, 'm-8)
advcl(see-5, going-9)
prep_with(going-9, this-11)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP restrict)
          (NP (NNS guns)))))
    (, ,)
    (NP
      (NP (DT all))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VB end)
            (PRT (RP up))
            (S
              (VP (VBG doing)))))))
    (VP (VBZ is)
      (VP (VBG giving)
        (NP (JJR more) (NN power))
        (PP (TO to)
          (NP (NNS people)))
        (S
          (VP (TO to)
            (VP (VB use)
              (NP (NNS guns))
              (ADVP (RB illegally)))))))
    (. .)))

advmod(restrict-3, When-1)
nsubj(restrict-3, you-2)
advcl(giving-12, restrict-3)
dobj(restrict-3, guns-4)
dobj(end-8, all-6)
nsubj(giving-12, all-6)
xsubj(use-18, all-6)
nsubj(end-8, you-7)
rcmod(all-6, end-8)
prt(end-8, up-9)
xcomp(end-8, doing-10)
aux(giving-12, is-11)
root(ROOT-0, giving-12)
amod(power-14, more-13)
dobj(giving-12, power-14)
prep_to(giving-12, people-16)
aux(use-18, to-17)
xcomp(giving-12, use-18)
dobj(use-18, guns-19)
advmod(use-18, illegally-20)

(ROOT
  (S
    (NP (PRP You))
    (VP (VB strip)
      (NP
        (NP (DT the) (NN power))
        (PP (IN for)
          (NP (JJ regular) (, ,) (JJ law-abiding) (NNS citizens))))
      (S
        (VP (TO to)
          (VP (VB use)
            (NP (PRP them))
            (PP (IN for)
              (NP (PRP$ their) (JJ own) (NN defense)))))))
    (. .)))

nsubj(strip-2, You-1)
root(ROOT-0, strip-2)
det(power-4, the-3)
dobj(strip-2, power-4)
amod(citizens-9, regular-6)
amod(citizens-9, law-abiding-8)
prep_for(power-4, citizens-9)
aux(use-11, to-10)
xcomp(strip-2, use-11)
dobj(use-11, them-12)
poss(defense-16, their-14)
amod(defense-16, own-15)
prep_for(use-11, defense-16)

(ROOT
  (S
    (NP (JJS Most) (JJ violent) (NNS crimes))
    (VP (VBP take)
      (NP
        (ADJP (RB much) (JJR less))
        (NN time))
      (S
        (VP (TO to)
          (VP (VB complete)))))
    (. .)))

amod(crimes-3, Most-1)
amod(crimes-3, violent-2)
nsubj(take-4, crimes-3)
root(ROOT-0, take-4)
advmod(less-6, much-5)
amod(time-7, less-6)
dobj(take-4, time-7)
aux(complete-9, to-8)
xcomp(take-4, complete-9)

(ROOT
  (S
    (NP
      (NP (DT Those))
      (PP (IN of)
        (NP (PRP us)))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VB buy)
            (CC and)
            (VB carry)
            (NP (NNS guns))
            (PP (IN for)
              (NP (NN protection)))))))
    (VP (VBP are)
      (VP (VBG sobered)
        (PP (IN by)
          (NP (DT this) (NN fact)))))
    (. .)))

nsubj(buy-5, Those-1)
nsubj(carry-7, Those-1)
nsubj(sobered-12, Those-1)
prep_of(Those-1, us-3)
rcmod(Those-1, buy-5)
rcmod(Those-1, carry-7)
conj_and(buy-5, carry-7)
dobj(buy-5, guns-8)
prep_for(buy-5, protection-10)
aux(sobered-12, are-11)
root(ROOT-0, sobered-12)
det(fact-15, this-14)
prep_by(sobered-12, fact-15)

(ROOT
  (S
    (NP
      (NP (DT All) (`` ``) (JJ pro) (NN gun) ('' ''))
      (CC and)
      (NP (`` ``) (JJ anti) (NN gun) ('' '') (NNS folks)))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP (JJ violent) (NN crime))
          (VP (VBZ is)
            (NP (DT a) (NN problem))))))
    (. .)))

det(gun-4, All-1)
amod(gun-4, pro-3)
nsubj(agree-12, gun-4)
amod(folks-11, anti-8)
nn(folks-11, gun-9)
conj_and(gun-4, folks-11)
nsubj(agree-12, folks-11)
root(ROOT-0, agree-12)
complm(problem-18, that-13)
amod(crime-15, violent-14)
nsubj(problem-18, crime-15)
cop(problem-18, is-16)
det(problem-18, a-17)
ccomp(agree-12, problem-18)

(ROOT
  (S
    (NP (DT The) (JJ big) (NN difference))
    (VP (VBG being)
      (SBAR (IN that)
        (S
          (NP (JJ many) (NN anti) (NN gun) (NNS folks))
          (VP (VBP feel)
            (SBAR (IN that)
              (S
                (NP (DT the) (NN police))
                (VP (VBP are)
                  (NP (DT a) (JJ good) (JJ enough) (NN resource)))))))))
    (. .)))

det(difference-3, The-1)
amod(difference-3, big-2)
nsubj(being-4, difference-3)
root(ROOT-0, being-4)
complm(feel-10, that-5)
amod(folks-9, many-6)
nn(folks-9, anti-7)
nn(folks-9, gun-8)
nsubj(feel-10, folks-9)
ccomp(being-4, feel-10)
complm(resource-18, that-11)
det(police-13, the-12)
nsubj(resource-18, police-13)
cop(resource-18, are-14)
det(resource-18, a-15)
amod(resource-18, good-16)
amod(resource-18, enough-17)
ccomp(feel-10, resource-18)

(ROOT
  (S
    (NP (DT The) (NN fact))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (DT the) (NN police))
          (VP (VBP are) (RB not)
            (VP (VBN required)
              (S
                (VP (TO to)
                  (VP (VB protect)
                    (NP (PRP you))
                    (PP (IN from)
                      (NP (NN crime)))))))))))
    (. .)))

det(fact-2, The-1)
nsubj(is-3, fact-2)
root(ROOT-0, is-3)
det(police-6, the-5)
nsubjpass(required-9, police-6)
xsubj(protect-11, police-6)
auxpass(required-9, are-7)
neg(required-9, not-8)
ccomp(is-3, required-9)
aux(protect-11, to-10)
xcomp(required-9, protect-11)
dobj(protect-11, you-12)
prep_from(protect-11, crime-14)

(ROOT
  (S
    (S
      (VP (VB Look)
        (NP (PRP it))
        (ADVP (RB up))))
    (, ,)
    (NP (DT the) (JJ supreme) (NN court))
    (VP (VBZ has)
      (VP (VBN ruled)
        (PP (IN on)
          (NP (DT this) (NN fact)))))
    (. .)))

ccomp(ruled-9, Look-1)
dobj(Look-1, it-2)
advmod(Look-1, up-3)
det(court-7, the-5)
amod(court-7, supreme-6)
nsubj(ruled-9, court-7)
aux(ruled-9, has-8)
root(ROOT-0, ruled-9)
det(fact-12, this-11)
prep_on(ruled-9, fact-12)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (DT the) (NN police))
        (VP (VBP are)
          (ADJP (JJ necessary)))))
    (, ,)
    (NP
      (NP (PRP$ their) (NN role))
      (PP (IN in)
        (NP (NN reality))))
    (VP (VBZ is)
      (NP (DT a) (JJ general) (NN duty)
        (S
          (VP (TO to)
            (VP (VB enforce)
              (NP (DT the) (NNS laws)))))))
    (. .)))

mark(necessary-5, While-1)
det(police-3, the-2)
nsubj(necessary-5, police-3)
cop(necessary-5, are-4)
advcl(duty-14, necessary-5)
poss(role-8, their-7)
nsubj(duty-14, role-8)
prep_in(role-8, reality-10)
cop(duty-14, is-11)
det(duty-14, a-12)
amod(duty-14, general-13)
root(ROOT-0, duty-14)
aux(enforce-16, to-15)
infmod(duty-14, enforce-16)
det(laws-18, the-17)
dobj(enforce-16, laws-18)

(ROOT
  (NP (-LRB- -LRB-)
    (NP (NNP South))
    (PP (CC v.)
      (NP
        (NP (NNP Maryland))
        (, ,)
        (NP (NNP 59) (NNP U.S.))))))

root(ROOT-0, South-2)
prep(South-2, v.-3)
dep(v.-3, Maryland-4)
nn(U.S.-7, 59-6)
appos(Maryland-4, U.S.-7)

