(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (PRP$ its))
        (VP (RB not)
          (NP (PRP$ your) (NN idea)))))
    (, ,)
    (NP (FW i))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP$ its))
          (ADVP (RB still))
          (ADVP (RB well))
          (VP (VBN formed)))))
    (. .)))

mark(idea-5, Although-1)
nsubj(idea-5, its-2)
neg(idea-5, not-3)
poss(idea-5, your-4)
advcl(think-8, idea-5)
nsubj(think-8, i-7)
root(ROOT-0, think-8)
nsubj(formed-12, its-9)
advmod(formed-12, still-10)
advmod(formed-12, well-11)
ccomp(think-8, formed-12)

(ROOT
  (S
    (NP (PRP$ My) (NN dispute))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP
            (NP (NN hunting))
            (CC and)
            (NP (JJ other) (JJ recreational) (NNS guns)))
          (VP (MD should)
            (VP (VB be)
              (VP (VBN stored)
                (ADVP (RB safely))
                (PP (IN in)
                  (NP (DT the) (NN place)))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (DT the) (NN recreation))
                    (VP (VBZ is)
                      (VP (VBG taking)
                        (NP (NN place))))))))))))
    (. .)))

poss(dispute-2, My-1)
nsubj(is-3, dispute-2)
root(ROOT-0, is-3)
complm(stored-12, that-4)
nsubjpass(stored-12, hunting-5)
amod(guns-9, other-7)
amod(guns-9, recreational-8)
conj_and(hunting-5, guns-9)
nsubjpass(stored-12, guns-9)
aux(stored-12, should-10)
auxpass(stored-12, be-11)
ccomp(is-3, stored-12)
advmod(stored-12, safely-13)
det(place-16, the-15)
prep_in(stored-12, place-16)
advmod(taking-21, where-17)
det(recreation-19, the-18)
nsubj(taking-21, recreation-19)
aux(taking-21, is-20)
advcl(stored-12, taking-21)
dobj(taking-21, place-22)

(ROOT
  (S
    (NP (DT Some) (NNS people))
    (VP (MD may)
      (VP (VB argue)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP
              (VP (VBP doesnt)
                (VP (VB do)
                  (NP (JJ enough) (NN damage))
                  (S
                    (VP (TO to)
                      (VP (VB defend)
                        (NP (NN somone)))))))
              (, ,)
              (CC but)
              (VP (VBD taserd)
                (VP (VB stop)
                  (NP (PRP$ your) (NNS muscles))
                  (PP (IN from)
                    (S
                      (VP (VBG moving) (, ,) (VBG stopping)
                        (NP
                          (NP (JJ whoever) (NN right))
                          (PP (IN in)
                            (NP (PRP$ their) (NNS tracks)))))))
                  (, ,)
                  (ADVP (RB alive)))))))))
    (. .)))

det(people-2, Some-1)
nsubj(argue-4, people-2)
aux(argue-4, may-3)
root(ROOT-0, argue-4)
complm(doesnt-7, that-5)
nsubj(doesnt-7, it-6)
nsubj(taserd-16, it-6)
ccomp(argue-4, doesnt-7)
xcomp(doesnt-7, do-8)
amod(damage-10, enough-9)
dobj(do-8, damage-10)
aux(defend-12, to-11)
xcomp(do-8, defend-12)
dobj(defend-12, somone-13)
ccomp(argue-4, taserd-16)
conj_but(doesnt-7, taserd-16)
xcomp(taserd-16, stop-17)
poss(muscles-19, your-18)
dobj(stop-17, muscles-19)
prepc_from(stop-17, moving-21)
dep(moving-21, stopping-23)
amod(right-25, whoever-24)
dobj(moving-21, right-25)
poss(tracks-28, their-27)
prep_in(right-25, tracks-28)
advmod(stop-17, alive-30)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD should)
        (VP (VB stop)
          (S
            (VP (VBG using)
              (NP (NNS guns))
              (PP (IN for)
                (NP (NN defense)))))
          (SBAR (IN like)
            (S
              (NP (PRP we))
              (VP (VBP do)))))))
    (, ,)
    (NP
      (NP (NN nothing))
      (ADJP (RB that) (JJ deadly)))
    (VP (MD should)
      (VP (VB be)
        (ADJP (RB so) (RB self) (JJ conscious))))
    (. .)))

nsubj(stop-3, We-1)
aux(stop-3, should-2)
ccomp(conscious-19, stop-3)
xcomp(stop-3, using-4)
dobj(using-4, guns-5)
prep_for(using-4, defense-7)
mark(do-10, like-8)
nsubj(do-10, we-9)
advcl(stop-3, do-10)
nsubj(conscious-19, nothing-12)
advmod(deadly-14, that-13)
amod(nothing-12, deadly-14)
aux(conscious-19, should-15)
cop(conscious-19, be-16)
advmod(conscious-19, so-17)
advmod(conscious-19, self-18)
root(ROOT-0, conscious-19)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (NN hunting) (NNS guns))
    (VP (MD should)
      (VP (VB be)
        (VP
          (VP (VBN stored)
            (PP (IN under)
              (NP (NN lock)
                (CC and)
                (NN key)))
            (PP (IN at)
              (NP (DT those) (NN hunting) (NNS grounds))))
          (, ,)
          (VP
            (ADVP (RB then))
            (VBN checked)
            (PRT (RP out)))
          (CC and)
          (VP (VBN returned)
            (ADVP (RB as) (RB not))
            (S
              (VP (TO to)
                (VP (VB take)
                  (S
                    (NP (PRP them))
                    (ADVP (RB home))
                    (VP (VB cause)
                      (NP (NN harm))
                      (PP (TO to)
                        (NP
                          (NP (JJ non-deer) (NN life))
                          (PP (IN like)
                            (NP (NNS humans))))))))))))))
    (. .)))

prep_for(stored-8, example-2)
nn(guns-5, hunting-4)
nsubjpass(stored-8, guns-5)
nsubjpass(checked-19, guns-5)
nsubjpass(returned-22, guns-5)
aux(stored-8, should-6)
auxpass(stored-8, be-7)
root(ROOT-0, stored-8)
prep_under(stored-8, lock-10)
prep_under(stored-8, key-12)
conj_and(lock-10, key-12)
det(grounds-16, those-14)
nn(grounds-16, hunting-15)
prep_at(stored-8, grounds-16)
advmod(checked-19, then-18)
conj_and(stored-8, checked-19)
prt(checked-19, out-20)
conj_and(stored-8, returned-22)
advmod(not-24, as-23)
neg(returned-22, not-24)
aux(take-26, to-25)
xcomp(returned-22, take-26)
nsubj(cause-29, them-27)
advmod(cause-29, home-28)
ccomp(take-26, cause-29)
dobj(cause-29, harm-30)
amod(life-33, non-deer-32)
prep_to(cause-29, life-33)
prep_like(life-33, humans-35)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP
          (NP (DT the) (NN topic))
          (PP (IN of)
            (NP (NN self) (NN defense))))))
    (, ,)
    (NP (NNS guns))
    (VP (MD should) (RB not)
      (VP (VB be)
        (VP (VBN used)
          (PP (IN as)
            (NP (DT a) (JJ common) (NN self) (NN defense))))))
    (. .)))

prepc_as_for(used-13, for-2)
det(topic-4, the-3)
pobj(used-13, topic-4)
nn(defense-7, self-6)
prep_of(topic-4, defense-7)
nsubjpass(used-13, guns-9)
aux(used-13, should-10)
neg(used-13, not-11)
auxpass(used-13, be-12)
root(ROOT-0, used-13)
det(defense-18, a-15)
amod(defense-18, common-16)
nn(defense-18, self-17)
prep_as(used-13, defense-18)

(ROOT
  (FRAG (WRB Why) (. ?)))

root(ROOT-0, Why-1)

(ROOT
  (S
    (S
      (NP (NNS Lets))
      (VP (VBP use)
        (NP (DT a) (JJ simple) (NN example))))
    (, ,)
    (S
      (NP
        (NP (PRP$ your) (NN walking) (NN home))
        (PP (IN in)
          (NP (DT the) (NN dark))))
      (NP (PRP$ its) (NN quite)))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP think)
        (S
          (NP (NNS someones))
          (VP (VBG following)
            (S
              (NP (PRP you))
              (RB so)
              (VP
                (VP (VB have)
                  (NP (PRP$ your) (NN hand))
                  (PP (IN on)
                    (NP (DT the) (NN gun))))
                (CC and)
                (VP (VB keep)
                  (S
                    (VP
                      (VP (VBG walking))
                      (, ,)
                      (VP (VBG looking)
                        (ADVP (RB back))))))))))))
    (. .)))

nsubj(use-2, Lets-1)
root(ROOT-0, use-2)
det(example-5, a-3)
amod(example-5, simple-4)
dobj(use-2, example-5)
poss(home-9, your-7)
nn(home-9, walking-8)
dep(quite-14, home-9)
det(dark-12, the-11)
prep_in(home-9, dark-12)
poss(quite-14, its-13)
conj_and(use-2, quite-14)
nsubj(think-17, you-16)
conj_and(use-2, think-17)
nsubj(following-19, someones-18)
dep(think-17, following-19)
nsubj(have-22, you-20)
nsubj(keep-29, you-20)
advmod(have-22, so-21)
ccomp(following-19, have-22)
poss(hand-24, your-23)
dobj(have-22, hand-24)
det(gun-27, the-26)
prep_on(have-22, gun-27)
ccomp(following-19, keep-29)
conj_and(have-22, keep-29)
ccomp(keep-29, walking-30)
dep(walking-30, looking-32)
advmod(looking-32, back-33)

(ROOT
  (S
    (ADVP (RB Suddenly))
    (NP (DT a) (NN car))
    (VP
      (VP (VBZ pulls)
        (PP (IN in)
          (NP
            (NP (NN front))
            (PP (IN of)
              (NP (PRP you))))))
      (, ,)
      (VP (VBD startled)
        (SBAR
          (S
            (NP (PRP you))
            (ADVP (RB naturally))
            (VP (VB turn)
              (ADVP (RB around))))))
      (CC and)
      (VP (VBP shoot)))
    (. .)))

advmod(pulls-4, Suddenly-1)
det(car-3, a-2)
nsubj(pulls-4, car-3)
nsubj(startled-10, car-3)
nsubj(shoot-16, car-3)
root(ROOT-0, pulls-4)
prep_in_front_of(pulls-4, you-8)
conj_and(pulls-4, startled-10)
nsubj(turn-13, you-11)
advmod(turn-13, naturally-12)
ccomp(startled-10, turn-13)
advmod(turn-13, around-14)
conj_and(pulls-4, shoot-16)

(ROOT
  (S
    (VP (VB Theirs)
      (NP
        (NP
          (NP (DT no) (NN one))
          (PP (IN behind)
            (NP (PRP you))))
        (, ,)
        (CC but)
        (NP
          (NP (DT an)
            (ADJP (JJ innocent) (JJ dead))
            (NN driver))
          (PP (IN in)
            (NP
              (NP (NN front))
              (PP (IN of)
                (NP (PRP you))))))))
    (. .)))

root(ROOT-0, Theirs-1)
det(one-3, no-2)
dobj(Theirs-1, one-3)
prep_behind(one-3, you-5)
det(driver-11, an-8)
amod(dead-10, innocent-9)
amod(driver-11, dead-10)
dobj(Theirs-1, driver-11)
conj_but(one-3, driver-11)
prep_in_front_of(driver-11, you-15)

(ROOT
  (S
    (NP (PRP$ Its) (JJ simple) (`` ``) (NNS accidents) ('' ''))
    (VP (VBP like)
      (NP
        (NP (DT these) (NN account))
        (PP (IN for)
          (NP (JJS most) (NNS deaths)))))
    (. .)))

poss(accidents-4, Its-1)
amod(accidents-4, simple-2)
nsubj(like-6, accidents-4)
root(ROOT-0, like-6)
det(account-8, these-7)
dobj(like-6, account-8)
amod(deaths-11, most-10)
prep_for(account-8, deaths-11)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (S
          (NP (NN something))
          (ADJP (RBR less) (JJ likely)
            (S
              (VP (TO to)
                (VP (VB kill)
                  (NP
                    (NP (DT a) (NN person))
                    (, ,)
                    (PP (JJ such) (IN as)
                      (NP (DT a) (NN taser)))
                    (, ,)))))))))
    (VP (VBZ is)
      (ADJP (RB much) (JJR safer)))
    (. .)))

csubj(safer-17, Having-1)
nsubj(likely-4, something-2)
advmod(likely-4, less-3)
xcomp(Having-1, likely-4)
aux(kill-6, to-5)
xcomp(likely-4, kill-6)
det(person-8, a-7)
dobj(kill-6, person-8)
det(taser-13, a-12)
prep_such_as(person-8, taser-13)
cop(safer-17, is-15)
advmod(safer-17, much-16)
root(ROOT-0, safer-17)

