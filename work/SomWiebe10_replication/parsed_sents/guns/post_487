(ROOT
  (S (`` ``)
    (NP (NNP Addicts))
    (ADVP (RB often))
    (VP (VB commit)
      (NP (NN crime))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (VP (VBN barred)
              (NP (NN access))
              (PP (TO to)
                (NP (DT the) (NN job) (NN market))))))))
    (. .)))

nsubj(commit-4, Addicts-2)
advmod(commit-4, often-3)
root(ROOT-0, commit-4)
dobj(commit-4, crime-5)
mark(barred-9, because-6)
nsubjpass(barred-9, they-7)
auxpass(barred-9, are-8)
advcl(commit-4, barred-9)
dobj(barred-9, access-10)
det(market-14, the-12)
nn(market-14, job-13)
prep_to(barred-9, market-14)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT this))
            (VP (MD will)
              (VP (VB change)))))))
    (. .)))

nsubj(see-5, I-2)
aux(see-5, do-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
advmod(change-9, how-6)
nsubj(change-9, this-7)
aux(change-9, will-8)
ccomp(see-5, change-9)

(ROOT
  (S
    (NP (NNP Paranoia))
    (VP (VBZ is)
      (NP
        (NP (DT a)
          (ADJP (RB well) (VBN known))
          (NN side) (NN effect))
        (PP (IN of)
          (NP (JJ meth) (NN use)))))
    (. .)))

nsubj(effect-7, Paranoia-1)
cop(effect-7, is-2)
det(effect-7, a-3)
advmod(known-5, well-4)
amod(effect-7, known-5)
nn(effect-7, side-6)
root(ROOT-0, effect-7)
amod(use-10, meth-9)
prep_of(effect-7, use-10)

(ROOT
  (S
    (PP (IN Because)
      (PP (IN of)
        (NP (PRP$ his) (NN paranoia))))
    (, ,)
    (S
      (NP (DT a) (JJ recent) (NN family) (NN reunion))
      (VP (VBD was)
        (VP (VBN interrupted))))
    (, ,)
    (CC or)
    (S
      (NP (DT some))
      (VP (MD might)
        (VP (VB say)
          (NP (NNS ruined))
          (, ,)
          (SBAR (IN because)
            (FRAG
              (PP (IN of)
                (NP (PRP$ his) (JJ repeated) (NNS calls) (, ,) (NN day)
                  (CC and)
                  (NN night)))))
          (, ,)
          (S
            (VP (TO to)
              (VP (VB check)
                (PRT (RP up))
                (PP (IN on)
                  (NP (PRP her)))))))))
    (. .)))

prepc_because_of(interrupted-11, of-2)
poss(paranoia-4, his-3)
pobj(interrupted-11, paranoia-4)
det(reunion-9, a-6)
amod(reunion-9, recent-7)
nn(reunion-9, family-8)
nsubjpass(interrupted-11, reunion-9)
auxpass(interrupted-11, was-10)
root(ROOT-0, interrupted-11)
nsubj(say-16, some-14)
xsubj(check-30, some-14)
aux(say-16, might-15)
conj_or(interrupted-11, say-16)
dobj(say-16, ruined-17)
mark(of-20, because-19)
advcl(say-16, of-20)
poss(calls-23, his-21)
amod(calls-23, repeated-22)
pobj(of-20, calls-23)
pobj(of-20, day-25)
conj_and(calls-23, day-25)
pobj(of-20, night-27)
conj_and(calls-23, night-27)
aux(check-30, to-29)
xcomp(say-16, check-30)
prt(check-30, up-31)
prep_on(check-30, her-33)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD called)
      (NP
        (NP (PRP$ her) (NN phone))
        (, ,)
        (NP
          (NP (CD two))
          (PP (IN of)
            (NP (PRP$ my) (NNS aunts) ('' '') (NNS phones))))
        (, ,)
        (CC and)
        (NP
          (NP (PRP$ her) (NN mother) (POS 's))
          (NN phone))))
    (. .)))

nsubj(called-2, He-1)
root(ROOT-0, called-2)
poss(phone-4, her-3)
dobj(called-2, phone-4)
dobj(called-2, two-6)
conj_and(phone-4, two-6)
poss(phones-11, my-8)
nn(phones-11, aunts-9)
prep_of(two-6, phones-11)
poss(mother-15, her-14)
poss(phone-17, mother-15)
dobj(called-2, phone-17)
conj_and(phone-4, phone-17)

(ROOT
  (S
    (NP (DT This))
    (VP (RB not)
      (ADVP (RB only))
      (VP (VBD stressed)
        (S
          (NP (PRP her))
          (ADJP (RB out))
          (PRN (, ,)
            (S
              (NP (PRP it))
              (VP (VBD caused)
                (NP (PRP$ her) (NNS children))
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (RB visibly) (JJ depressed)))))))
            (, ,))
          (S
            (VP (VBG leaving)
              (NP (PRP them))
              (PP (IN in)
                (NP (NNS tears)))))))
      (, ,)
      (CC and)
      (VP (VBD caused)
        (NP (PRP$ her) (NN mother))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB become)
              (PP (IN near)
                (NP (NNP hysterical))))))))
    (. .)))

nsubj(stressed-4, This-1)
nsubj(caused-23, This-1)
xsubj(become-28, This-1)
neg(stressed-4, not-2)
advmod(stressed-4, only-3)
root(ROOT-0, stressed-4)
nsubj(leaving-17, her-5)
dep(leaving-17, out-6)
nsubj(caused-9, it-8)
dep(leaving-17, caused-9)
poss(children-11, her-10)
dobj(caused-9, children-11)
aux(depressed-15, to-12)
cop(depressed-15, be-13)
advmod(depressed-15, visibly-14)
xcomp(caused-9, depressed-15)
xcomp(stressed-4, leaving-17)
dobj(leaving-17, them-18)
prep_in(leaving-17, tears-20)
conj_and(stressed-4, caused-23)
poss(mother-25, her-24)
dobj(caused-23, mother-25)
aux(become-28, to-27)
xcomp(caused-23, become-28)
prep_near(become-28, hysterical-30)

(ROOT
  (SBARQ
    (WHADVP (RB So))
    (SQ (VBP are)
      (NP (PRP you))
      (VP
        (ADVP (RB really))
        (VBG going)
        (S
          (VP (TO to)
            (VP (VB insist)
              (SBAR (IN that)
                (S
                  (NP (NN drug) (NN use))
                  (VP (VBZ is)
                    (NP (DT a) (JJ victimless) (NN crime))))))))))
    (. ?)))

advmod(going-5, So-1)
aux(going-5, are-2)
nsubj(going-5, you-3)
xsubj(insist-7, you-3)
advmod(going-5, really-4)
root(ROOT-0, going-5)
aux(insist-7, to-6)
xcomp(going-5, insist-7)
complm(crime-14, that-8)
nn(use-10, drug-9)
nsubj(crime-14, use-10)
cop(crime-14, is-11)
det(crime-14, a-12)
amod(crime-14, victimless-13)
ccomp(insist-7, crime-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD 'd)
              (VP (VB find)
                (NP
                  (NP
                    (ADJP (RB very) (JJ many))
                    (JJ reputable) (NNS sources))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD would)
                        (VP (VB say)
                          (NP (DT that)))))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
nsubj(find-7, you-5)
aux(find-7, 'd-6)
ccomp(think-4, find-7)
advmod(many-9, very-8)
amod(sources-11, many-9)
amod(sources-11, reputable-10)
dobj(find-7, sources-11)
nsubj(say-14, sources-11)
aux(say-14, would-13)
rcmod(sources-11, say-14)
dobj(say-14, that-15)

(ROOT
  (S ('' '')
    (NP (NNP Heroin))
    (VP (VBD used)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN sold)
              (PP (IN over)
                (NP (DT the) (NN counter)))))))
      (, ,)
      (S
        (NP (DT some) (NNS estimates))
        (VP (VB place)
          (NP
            (ADJP (JJ functional))
            (NN addiction))
          (PP (IN in)
            (NP (NNP America)))
          (ADVP (RB almost)
            (PP (TO to)
              (NP (DT the) (CD one) (JJ third) (NN mark))))
          (PP (IN at)
            (NP
              (NP (PRP it) (POS 's))
              (NN peak))))))
    (. .)))

nsubj(used-3, Heroin-2)
xsubj(sold-6, Heroin-2)
root(ROOT-0, used-3)
aux(sold-6, to-4)
auxpass(sold-6, be-5)
xcomp(used-3, sold-6)
det(counter-9, the-8)
prep_over(sold-6, counter-9)
det(estimates-12, some-11)
nsubj(place-13, estimates-12)
ccomp(used-3, place-13)
amod(addiction-15, functional-14)
dobj(place-13, addiction-15)
prep_in(place-13, America-17)
advmod(place-13, almost-18)
det(mark-23, the-20)
num(mark-23, one-21)
amod(mark-23, third-22)
prep_to(almost-18, mark-23)
poss(peak-27, it-25)
prep_at(place-13, peak-27)

(ROOT
  (S
    (NP (NNP Society))
    (VP (VBZ 's)
      (NP
        (NP (JJ chief) (NN problem))
        (PP (IN at)
          (NP (DT the) (NN time)))))
    (. ?)))

nsubj(problem-4, Society-1)
cop(problem-4, 's-2)
amod(problem-4, chief-3)
root(ROOT-0, problem-4)
det(time-7, the-6)
prep_at(problem-4, time-7)

(ROOT
  (S
    (NP (DT The) (NN stock))
    (VP (VBP market))
    (. .)))

det(stock-2, The-1)
nsubj(market-3, stock-2)
root(ROOT-0, market-3)

(ROOT
  (S ('' '')
    (S
      (NP (WP What) (NN time))
      (VP (VBD was)
        (NP (DT this))))
    (, ,)
    (CC and)
    (S
      (NP (WP what) (NN evidence))
      (VP (VBZ supports)
        (NP (PRP it))))
    (. ?)))

dep(time-3, What-2)
nsubj(this-5, time-3)
cop(this-5, was-4)
root(ROOT-0, this-5)
dep(evidence-9, what-8)
nsubj(supports-10, evidence-9)
conj_and(this-5, supports-10)
dobj(supports-10, it-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN denied)
          (NP (NN access))
          (PP (TO to)
            (NP
              (NP (DT the) (NN job) (NN market))
              (PP (IN for)
                (NP
                  (NP (NNS reasons))
                  (PP (JJ other) (IN than)
                    (NP (JJ illegal) (NN activity))))))))))
    (. .)))

nsubjpass(denied-4, You-1)
aux(denied-4, can-2)
auxpass(denied-4, be-3)
root(ROOT-0, denied-4)
dobj(denied-4, access-5)
det(market-9, the-7)
nn(market-9, job-8)
prep_to(denied-4, market-9)
prep_for(market-9, reasons-11)
dep(reasons-11, other-12)
amod(activity-15, illegal-14)
prep_than(reasons-11, activity-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP mean)))
    (, ,)
    (NP (CD one) (NN third))
    (VP (VBZ seems)
      (PP (IN like)
        (NP (DT an)
          (ADJP (RB awfully) (JJ high))
          (NN number))))
    (. .)))

nsubj(mean-2, I-1)
ccomp(seems-6, mean-2)
num(third-5, one-4)
nsubj(seems-6, third-5)
root(ROOT-0, seems-6)
det(number-11, an-8)
advmod(high-10, awfully-9)
amod(number-11, high-10)
prep_like(seems-6, number-11)

(ROOT
  (S
    (S
      (NP (NNP Alcohol))
      (VP (VBZ is)
        (ADJP (RB perfectly) (JJ legal))
        (ADVP (RB now))))
    (, ,)
    (CC and)
    (RB so)
    (S
      (VP (VBP are)
        (NP (NNS cigarettes))))
    (. .)))

nsubj(legal-4, Alcohol-1)
cop(legal-4, is-2)
advmod(legal-4, perfectly-3)
root(ROOT-0, legal-4)
advmod(legal-4, now-5)
advmod(legal-4, so-8)
conj_and(legal-4, so-8)
cop(cigarettes-10, are-9)
ccomp(legal-4, cigarettes-10)

(ROOT
  (S (CC But)
    (PP (VBN combined)
      (NP
        (NP (DT the) (NN percent))
        (PP (IN of)
          (NP (NNS people)))))
    (S
      (ADJP (VBN addicted)
        (PP (TO to)
          (NP (DT these) (CD two) (NNS substances)))))
    (VP (VBZ does) (RB n't)
      (VP (VB equal)
        (NP (CD 1\/3))))
    (. .)))

cc(equal-14, But-1)
prep(equal-14, combined-2)
det(percent-4, the-3)
dep(combined-2, percent-4)
prep_of(percent-4, people-6)
csubj(equal-14, addicted-7)
det(substances-11, these-9)
num(substances-11, two-10)
prep_to(addicted-7, substances-11)
aux(equal-14, does-12)
neg(equal-14, n't-13)
root(ROOT-0, equal-14)
dobj(equal-14, 1\/3-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could) (RB n't)
        (VP (VB find)
          (NP (NN alcohol) (NN addiction))
          (ADVP (RB alone)))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (JJS best) (NNS estimates))
        (PP (IN for)
          (NP (NNS cigarettes) (, ,) (NNS drugs) (, ,)
            (CC and)
            (NN alcohol)))
        (VP (VBN combined)))
      (VP (VBZ is)
        (NP
          (NP
            (NP
              (QP (RB about) (CD 73) (CD million))
              (NNS people))
            (PP (IN in)
              (NP (DT the) (NNP U.S.))))
          (, ,)
          (CC or)
          (NP
            (QP (RB about) (CD 20))
            (NN %)))))
    (. .)))

nsubj(find-4, I-1)
aux(find-4, could-2)
neg(find-4, n't-3)
root(ROOT-0, find-4)
nn(addiction-6, alcohol-5)
dobj(find-4, addiction-6)
advmod(find-4, alone-7)
amod(estimates-11, best-10)
nsubj(people-24, estimates-11)
prep_for(estimates-11, cigarettes-13)
prep_for(estimates-11, drugs-15)
conj_and(cigarettes-13, drugs-15)
prep_for(estimates-11, alcohol-18)
conj_and(cigarettes-13, alcohol-18)
partmod(estimates-11, combined-19)
cop(people-24, is-20)
quantmod(million-23, about-21)
number(million-23, 73-22)
num(people-24, million-23)
conj_but(find-4, people-24)
det(U.S.-27, the-26)
prep_in(people-24, U.S.-27)
quantmod(20-31, about-30)
num(%-32, 20-31)
conj_but(find-4, %-32)
conj_or(people-24, %-32)

(ROOT
  (S
    (S
      (NP (CC And))
      ('' '')
      (VP (VB society)
        (NP (`` ``) (JJ s) (JJ chief) (NN problem))))
    ('' '')
    (VP (VBZ is)
      (UCP
        (NP (DT a) (JJ subjective) (NN statement))
        (, ,)
        (CC and)
        (ADVP (RB therefore))
        (ADJP (RB pretty) (JJ difficult)
          (PP (TO to)
            (NP (NNP quantify))))))
    (. .)))

nsubj(society-3, And-1)
ccomp(statement-12, society-3)
csubj(statement-12, society-3)
csubj(difficult-17, society-3)
amod(problem-7, s-5)
amod(problem-7, chief-6)
dobj(society-3, problem-7)
cop(statement-12, is-9)
det(statement-12, a-10)
amod(statement-12, subjective-11)
root(ROOT-0, statement-12)
advmod(difficult-17, therefore-15)
advmod(difficult-17, pretty-16)
conj_and(statement-12, difficult-17)
prep_to(difficult-17, quantify-19)

(ROOT
  (S ('' '')
    (PP
      (NP (DT The) (NN number))
      (IN of)
      (NP
        (NP (JJ homeless) (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP are)
              (ADJP (RB mentally) (JJ ill)))))))
    (VP (VBZ is)
      (ADJP (JJ staggering)))
    (. .)))

det(number-3, The-2)
npadvmod(staggering-12, number-3)
amod(people-6, homeless-5)
nsubj(ill-10, people-6)
prep_of(staggering-12, people-6)
cop(ill-10, are-8)
advmod(ill-10, mentally-9)
rcmod(people-6, ill-10)
cop(staggering-12, is-11)
root(ROOT-0, staggering-12)

(ROOT
  (S ('' '')
    (ADVP (RB Again))
    (, ,)
    (NP
      (NP
        (NP (DT a) (JJ subjective) (NN statement))
        (, ,)
        (CONJP (CC but)
          (RB only))
        (NP
          (QP (RB about) (CD 1))
          (NN %)))
      (PP (IN of)
        (NP (NNPS Americans))))
    (VP (VBP are)
      (ADJP (JJ homeless))
      (PP (IN for)
        (NP
          (NP (DT an) (JJ extended) (NN period))
          (PP (IN of)
            (NP (NN time)))))
      (, ,)
      (PP (IN with)
        (NP
          (NP
            (QP (RB about) (CD 40-45))
            (NN %))
          (PP (IN of)
            (NP
              (NP (DT those))
              (VP (VBG being)
                (VP (VBN considered)
                  (S
                    (ADJP (RB mentally) (JJ ill))))))))))
    (. .)))

advmod(homeless-16, Again-2)
det(statement-6, a-4)
amod(statement-6, subjective-5)
nsubj(homeless-16, statement-6)
quantmod(1-11, about-10)
num(%-12, 1-11)
conj_only(statement-6, %-12)
nsubj(homeless-16, %-12)
prep_of(statement-6, Americans-14)
cop(homeless-16, are-15)
root(ROOT-0, homeless-16)
det(period-20, an-18)
amod(period-20, extended-19)
prep_for(homeless-16, period-20)
prep_of(period-20, time-22)
quantmod(40-45-26, about-25)
num(%-27, 40-45-26)
prep_with(homeless-16, %-27)
prep_of(%-27, those-29)
auxpass(considered-31, being-30)
partmod(those-29, considered-31)
advmod(ill-33, mentally-32)
acomp(considered-31, ill-33)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (DT that) (NN number))
        (VP (VBZ is)
          (ADJP (JJ sad)))))
    (, ,)
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB be)
        (ADJP (RB hard) (VBN pressed)
          (S
            (VP (TO to)
              (VP (VB call)
                (S
                  (NP (PRP it))
                  (ADJP (JJ staggering)))))))))
    (. .)))

mark(sad-5, While-1)
det(number-3, that-2)
nsubj(sad-5, number-3)
cop(sad-5, is-4)
advcl(pressed-11, sad-5)
nsubjpass(pressed-11, I-7)
aux(pressed-11, 'd-8)
auxpass(pressed-11, be-9)
advmod(pressed-11, hard-10)
root(ROOT-0, pressed-11)
aux(call-13, to-12)
xcomp(pressed-11, call-13)
nsubj(staggering-15, it-14)
xcomp(call-13, staggering-15)

(ROOT
  (S ('' '')
    (NP (DT This) (NN image))
    (VP
      (VP
        (PP (IN of)
          (NP (DT the) (JJ nanny) (NN state)))
        (VBZ is)
        (ADVP (RB largely)
          (NP (DT a) (NN myth)))
        (VP (VBN perpetrated)
          (PP (IN by)
            (NP (DT the) (NN right)))))
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP (VB preserve)
              (NP (PRP$ their) (JJ own) (JJ ill) (NN gotten) (NNS gains)))))))
    (. .)))

det(image-3, This-2)
nsubjpass(perpetrated-12, image-3)
det(state-7, the-5)
amod(state-7, nanny-6)
prep_of(perpetrated-12, state-7)
auxpass(perpetrated-12, is-8)
advmod(perpetrated-12, largely-9)
det(myth-11, a-10)
pobj(largely-9, myth-11)
root(ROOT-0, perpetrated-12)
det(right-15, the-14)
agent(perpetrated-12, right-15)
mark(preserve-19, in-16)
dep(preserve-19, order-17)
aux(preserve-19, to-18)
purpcl(perpetrated-12, preserve-19)
poss(gains-24, their-20)
amod(gains-24, own-21)
amod(gains-24, ill-22)
nn(gains-24, gotten-23)
dobj(preserve-19, gains-24)

(ROOT
  (S ('' '')
    (ADVP (RB Again))
    (, ,)
    (VP (MD can)
      (NP (PRP you))
      (S
        (VP (VB quantify)
          (NP (DT this) (NN statement)))))
    (. ?)))

advmod(can-4, Again-2)
root(ROOT-0, can-4)
dobj(can-4, you-5)
dep(can-4, quantify-6)
det(statement-8, this-7)
dobj(quantify-6, statement-8)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP 'm)
      (NP (DT a) (JJ conservative)))
    (. .)))

cc(conservative-5, And-1)
nsubj(conservative-5, I-2)
cop(conservative-5, 'm-3)
det(conservative-5, a-4)
root(ROOT-0, conservative-5)

(ROOT
  (SBARQ
    (WHNP (WRB How) (RB exactly))
    (SQ (VBP are)
      (NP
        (NP (PRP$ my) (NNS gains))
        (ADJP (`` ``) (JJ ill)))
      (VP (VBN gotten)))
    (. .)))

advmod(exactly-2, How-1)
dep(gotten-8, exactly-2)
auxpass(gotten-8, are-3)
poss(gains-5, my-4)
nsubjpass(gotten-8, gains-5)
amod(gains-5, ill-7)
root(ROOT-0, gotten-8)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP
      (NP (PRP$ my) (JJ last)
        (QP (CD 5)
          (CC or)
          (CD 6))
        (NNS jobs))
      (VP (VBN required)
        (NP (DT a) (NN credit))))
    (VP (VBP check))
    (. .)))

prep_for(check-13, example-2)
poss(jobs-9, my-4)
amod(jobs-9, last-5)
num(jobs-9, 5-6)
conj_or(5-6, 6-8)
num(jobs-9, 6-8)
nsubj(check-13, jobs-9)
partmod(jobs-9, required-10)
det(credit-12, a-11)
dobj(required-10, credit-12)
root(ROOT-0, check-13)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN worked)
          (NP (PRP$ my) (NN tail))
          (ADVP (RB off) (RB just)
            (S
              (VP (TO to)
                (VP (VB reach)
                  (NP (JJ middle) (NN class)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN done)
          (NP (PRP it))
          (PP (IN without)
            (S
              (VP
                (VP (VBG infringing)
                  (PP (IN on)
                    (NP (DT the) (NNS rights))))
                (CC or)
                (VP (VBG walking)
                  (PP (IN on)
                    (NP (NN anyone)))
                  (S
                    (VP (TO to)
                      (VP (VB get)
                        (SBAR
                          (WHADVP (WRB where))
                          (S
                            (NP (PRP I))
                            (VP (VBP am))))))))))))))
    (. .)))

nsubj(worked-4, I-2)
aux(worked-4, have-3)
root(ROOT-0, worked-4)
poss(tail-6, my-5)
dobj(worked-4, tail-6)
advmod(just-8, off-7)
advmod(worked-4, just-8)
aux(reach-10, to-9)
dep(just-8, reach-10)
amod(class-12, middle-11)
dobj(reach-10, class-12)
nsubj(done-17, I-15)
aux(done-17, have-16)
conj_and(worked-4, done-17)
dobj(done-17, it-18)
prepc_without(done-17, infringing-20)
det(rights-23, the-22)
prep_on(infringing-20, rights-23)
prepc_without(done-17, walking-25)
conj_or(infringing-20, walking-25)
prep_on(walking-25, anyone-27)
aux(get-29, to-28)
xcomp(walking-25, get-29)
advmod(am-32, where-30)
nsubj(am-32, I-31)
advcl(get-29, am-32)

(ROOT
  (S (CC And)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN lived)
          (ADVP (RB well))
          (PP (IN below)
            (NP (DT the) (NN poverty) (NN line))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP
            (NP (NN nobody) (POS 's))
            (NN fault))
          (PP (CC but)
            (NP (NN mine))))))
    (. .)))

nsubj(lived-4, I-2)
aux(lived-4, have-3)
root(ROOT-0, lived-4)
advmod(lived-4, well-5)
det(line-9, the-7)
nn(line-9, poverty-8)
prep_below(lived-4, line-9)
nsubj(fault-16, it-12)
cop(fault-16, was-13)
poss(fault-16, nobody-14)
conj_and(lived-4, fault-16)
prep(fault-16, but-17)
dep(but-17, mine-18)

(ROOT
  (S (CC And)
    (VP (VBP do) (RB n't)
      (VP (VB forget)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBP are)
              (NP
                (NP (RB plenty))
                (PP (IN of)
                  (NP
                    (NP (NNS people))
                    (PP (IN on)
                      (NP
                        (NP (DT the) (NN left))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBP are)
                              (ADJP (RB obscenely) (JJ wealthy)))))))))))))))
    (. .)))

cc(forget-4, And-1)
aux(forget-4, do-2)
neg(forget-4, n't-3)
root(ROOT-0, forget-4)
complm(are-7, that-5)
expl(are-7, there-6)
ccomp(forget-4, are-7)
nsubj(are-7, plenty-8)
prep_of(plenty-8, people-10)
det(left-13, the-12)
prep_on(people-10, left-13)
nsubj(wealthy-17, left-13)
cop(wealthy-17, are-15)
advmod(wealthy-17, obscenely-16)
rcmod(left-13, wealthy-17)

(ROOT
  (SQ (VBP Are)
    (NP (PRP$ their) (NNS gains))
    (VP
      (ADVP (RB ill))
      (VBN gotten))
    (. ?)))

auxpass(gotten-5, Are-1)
poss(gains-3, their-2)
nsubjpass(gotten-5, gains-3)
advmod(gotten-5, ill-4)
root(ROOT-0, gotten-5)

(ROOT
  (S
    (NP (DT That) (NN statement))
    (VP
      (VP (VBZ reeks)
        (PP (IN of)
          (NP (NN elitism))))
      (CC and)
      (VP (VBZ is)
        (NP
          (NP (DT a)
            (ADJP (JJ disgusting))
            (NN generalization))
          (, ,)
          (PP (IN in)
            (NP (PRP$ my) (NN opinion))))))
    (. .)))

det(statement-2, That-1)
nsubj(reeks-3, statement-2)
root(ROOT-0, reeks-3)
prep_of(reeks-3, elitism-5)
cop(generalization-10, is-7)
det(generalization-10, a-8)
amod(generalization-10, disgusting-9)
conj_and(reeks-3, generalization-10)
poss(opinion-14, my-13)
prep_in(generalization-10, opinion-14)

(ROOT
  (S ('' '')
    (NP (DT The) (JJ typical) (JJ upper) (NN class) (NN American))
    (VP (MD could) (RB not)
      (VP (VB survive)
        (PP (IN without)
          (S
            (NP (DT the) (NN state))
            (VP
              (VP (VBG regulating)
                (NP
                  (NP (PRP$ their) (NN business) (NN competition))
                  (PP (RB out) (IN of)
                    (NP (NN existence)))))
              (, ,)
              (CC and)
              (VP (VBG subsidizing)
                (NP (PRP$ their) (NNS failures))))))))
    (. .)))

det(American-6, The-2)
amod(American-6, typical-3)
amod(American-6, upper-4)
nn(American-6, class-5)
nsubj(survive-9, American-6)
aux(survive-9, could-7)
neg(survive-9, not-8)
root(ROOT-0, survive-9)
det(state-12, the-11)
nsubj(regulating-13, state-12)
nsubj(subsidizing-22, state-12)
prepc_without(survive-9, regulating-13)
poss(competition-16, their-14)
nn(competition-16, business-15)
dobj(regulating-13, competition-16)
prep_out_of(competition-16, existence-19)
prepc_without(survive-9, subsidizing-22)
conj_and(regulating-13, subsidizing-22)
poss(failures-24, their-23)
dobj(subsidizing-22, failures-24)

(ROOT
  (S (-LRB- -LRB-)
    (VP (VB AIG)
      (NP (NN anyone)))
    (. ?) (-RRB- -RRB-)))

root(ROOT-0, AIG-2)
dobj(AIG-2, anyone-3)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN While)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (ADVP (RB certainly))
            (RB not)
            (NP
              (NP (DT a) (NN part))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN group))
                  (WHPP (TO to)
                    (WHNP (WDT which)))))))))
      (NP (PRP you))
      (VP (VBP point)
        (PP (IN in)
          (NP (DT this) (NN statement)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG vilifying)
              (ADVP (RB unjustly))
              (NP
                (NP (DT an) (JJ entire) (NN group))
                (PP (IN of)
                  (NP (NNS people)))))))))
    (. .)))

mark(part-8, While-2)
nsubj(part-8, I-3)
cop(part-8, am-4)
advmod(part-8, certainly-5)
neg(part-8, not-6)
det(part-8, a-7)
advcl(point-15, part-8)
det(group-11, the-10)
prep_of(part-8, group-11)
prep_to(group-11, which-13)
nsubj(point-15, you-14)
ccomp(think-21, point-15)
det(statement-18, this-17)
prep_in(point-15, statement-18)
nsubj(think-21, I-20)
root(ROOT-0, think-21)
nsubj(vilifying-24, you-22)
aux(vilifying-24, are-23)
ccomp(think-21, vilifying-24)
advmod(vilifying-24, unjustly-25)
det(group-28, an-26)
amod(group-28, entire-27)
dobj(vilifying-24, group-28)
prep_of(group-28, people-30)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD had)
          (VP (VBN used)
            (NP
              (NP (DT a) (JJ racial) (NN segment))
              (PP (IN of)
                (NP (DT the) (NN population))))))))
    (, ,)
    (NP (DT this))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN called)
          (NP (NN racism)))))
    (. .)))

mark(used-4, If-1)
nsubj(used-4, you-2)
aux(used-4, had-3)
advcl(called-15, used-4)
det(segment-7, a-5)
amod(segment-7, racial-6)
dobj(used-4, segment-7)
det(population-10, the-9)
prep_of(segment-7, population-10)
nsubjpass(called-15, this-12)
aux(called-15, would-13)
auxpass(called-15, be-14)
root(ROOT-0, called-15)
dobj(called-15, racism-16)

(ROOT
  (S
    (PP (VBG Depending)
      (PP (IN on)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP call)
              (NP (`` ``) (JJ upper) (NN class) ('' '')))))))
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR (IN that)
          (S
            (NP (NN statement))
            (VP (MD would)
              (VP (VB hold)
                (NP (NN water))
                (ADVP (RB either))))))))
    (. .)))

prepc_depending_on(think-13, on-2)
dobj(call-5, what-3)
nsubj(call-5, you-4)
pcomp(think-13, call-5)
amod(class-8, upper-7)
dobj(call-5, class-8)
nsubj(think-13, I-10)
aux(think-13, do-11)
neg(think-13, n't-12)
root(ROOT-0, think-13)
complm(hold-17, that-14)
nsubj(hold-17, statement-15)
aux(hold-17, would-16)
ccomp(think-13, hold-17)
dobj(hold-17, water-18)
advmod(hold-17, either-19)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (MD wo) (RB n't)
      (ADVP (RB even))
      (VP (VB begin)
        (S
          (VP (TO to)
            (VP (VB debate)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP
                    (NP (DT the) (NN cause))
                    (PP (IN of)
                      (NP (DT the) (JJ financial) (NN market) (NN collapse))))
                  (VP
                    (VP (VBD was))
                    (, ,)
                    (ADVP (RB so))
                    (VP (VBP do) (RB n't)
                      (VP (VB waste)
                        (NP
                          (NP (PRP$ your) (NN time))
                          (VP (VBG trying)
                            (S
                              (VP (TO to)
                                (VP (VB bait)
                                  (NP (PRP me))
                                  (PP (IN into)
                                    (NP (DT that) (NN one))))))))))))))))))
    (. .)))

cc(begin-6, And-1)
nsubj(begin-6, I-2)
xsubj(debate-8, I-2)
aux(begin-6, wo-3)
neg(begin-6, n't-4)
advmod(begin-6, even-5)
root(ROOT-0, begin-6)
aux(debate-8, to-7)
xcomp(begin-6, debate-8)
dobj(was-17, what-9)
det(cause-11, the-10)
nsubj(was-17, cause-11)
det(collapse-16, the-13)
amod(collapse-16, financial-14)
nn(collapse-16, market-15)
prep_of(cause-11, collapse-16)
ccomp(debate-8, was-17)
advmod(was-17, so-19)
aux(waste-22, do-20)
neg(waste-22, n't-21)
dep(was-17, waste-22)
poss(time-24, your-23)
dobj(waste-22, time-24)
xsubj(bait-27, time-24)
partmod(time-24, trying-25)
aux(bait-27, to-26)
xcomp(trying-25, bait-27)
dobj(bait-27, me-28)
det(one-31, that-30)
prep_into(bait-27, one-31)

(ROOT
  (S (IN So)
    (SBAR (IN while)
      (S
        (NP (PRP it))
        (VP (VBZ 's) (RB not)
          (ADJP (JJ illegal)
            (S
              (VP (TO to)
                (VP
                  (VP (VB have)
                    (NP (JJ bad) (NN credit)))
                  (CC or)
                  (VP (VB file)
                    (PP (IN for)
                      (NP (NN bankruptcy)))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD could)
      (VP (VB have)
        (VP (VBN been)
          (VP (VBN denied)
            (NP (DT a) (NN job))
            (PP (VBN based)
              (PP (IN on)
                (NP (PRP it))))))))
    (. .)))

dep(denied-20, So-1)
mark(illegal-6, while-2)
nsubj(illegal-6, it-3)
cop(illegal-6, 's-4)
neg(illegal-6, not-5)
advcl(denied-20, illegal-6)
aux(have-8, to-7)
xcomp(illegal-6, have-8)
amod(credit-10, bad-9)
dobj(have-8, credit-10)
xcomp(illegal-6, file-12)
conj_or(have-8, file-12)
prep_for(file-12, bankruptcy-14)
nsubjpass(denied-20, I-16)
aux(denied-20, could-17)
aux(denied-20, have-18)
auxpass(denied-20, been-19)
root(ROOT-0, denied-20)
det(job-22, a-21)
dobj(denied-20, job-22)
prepc_based_on(denied-20, on-24)
pobj(denied-20, it-25)

(ROOT
  (S (: ;)
    (S
      (NP (NNP -RRB-))
      (VP (VBZ Oh)))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD forgot)
        (NP
          (NP (DT this) (NN one))
          (: :) (`` ``)
          (S
            (S
              (VP (VBG Opening)
                (NP (DT the) (NN door))
                (PP (TO to)
                  (NP
                    (NP (DT a) (JJ whole) (NN class))
                    (PP (IN of)
                      (NP
                        (NP (NNS workers))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBP spend)
                              (NP (PRP$ their) (NN money))
                              (PP (IN on)
                                (NP
                                  (NP (NN heroin))
                                  (PP (RB instead) (IN of)
                                    (NP (NNP WoW))))))))))))))
            (CC and)
            (ADVP (RB still))
            (S
              (VP (VB show)
                (PRT (RP up))
                (S
                  (VP (TO to)
                    (VP (VB work)
                      (PP (IN on)
                        (NP (NN time))))))))))))
    (. .)))

root(ROOT-0, Oh-3)
nsubj(forgot-7, I-6)
conj_and(Oh-3, forgot-7)
det(one-9, this-8)
dobj(forgot-7, one-9)
dep(one-9, Opening-12)
det(door-14, the-13)
dobj(Opening-12, door-14)
det(class-18, a-16)
amod(class-18, whole-17)
prep_to(Opening-12, class-18)
prep_of(class-18, workers-20)
nsubj(spend-22, workers-20)
rcmod(workers-20, spend-22)
poss(money-24, their-23)
dobj(spend-22, money-24)
prep_on(spend-22, heroin-26)
prep_instead_of(heroin-26, WoW-29)
dep(one-9, still-31)
advmod(Opening-12, still-31)
conj_and(Opening-12, still-31)
dep(one-9, show-32)
conj_and(Opening-12, show-32)
prt(show-32, up-33)
aux(work-35, to-34)
xcomp(show-32, work-35)
prep_on(work-35, time-37)

(ROOT
  (NP (NNP '') (NNP Seriously) (. ?)))


(ROOT
  (FRAG
    (ADVP (RB Really))
    (. ?)))

root(ROOT-0, Really-1)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB honestly))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP (DT a) (NN heroin) (NN addict))
          (VP (MD would)
            (VP (VB show)
              (PRT (RP up))
              (S
                (VP (TO to)
                  (VP (VB work)
                    (PP (IN on)
                      (NP (NN time)))))))))))
    (. ?)))

nsubj(think-3, You-1)
advmod(think-3, honestly-2)
root(ROOT-0, think-3)
complm(show-9, that-4)
det(addict-7, a-5)
nn(addict-7, heroin-6)
nsubj(show-9, addict-7)
xsubj(work-12, addict-7)
aux(show-9, would-8)
ccomp(think-3, show-9)
prt(show-9, up-10)
aux(work-12, to-11)
xcomp(show-9, work-12)
prep_on(work-12, time-14)

(ROOT
  (FRAG
    (ADVP (RB Really))
    (. ?)))

root(ROOT-0, Really-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP mean)
      (SBAR (IN that)
        (S
          (NP (NN statement))
          (ADVP (RB damn) (RB near))
          (VP (VBZ leaves)
            (SBAR
              (S
                (NP (PRP me))
                (VP (VBZ speechless))))))))
    (. .)))

nsubj(mean-2, I-1)
root(ROOT-0, mean-2)
complm(leaves-7, that-3)
nsubj(leaves-7, statement-4)
advmod(near-6, damn-5)
advmod(leaves-7, near-6)
ccomp(mean-2, leaves-7)
nsubj(speechless-9, me-8)
ccomp(leaves-7, speechless-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (NN anything))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD said)))))
        (VP (VBD was)
          (ADJP (JJ questionable)))))
    (, ,)
    (NP (DT that) (NN statement))
    (VP (VBZ is)
      (ADVP (RB outright))
      (NP (JJ pot-of-gold-at-the-end-of-the-rainbow) (NN fantasy)))
    (. .)))

mark(questionable-6, If-1)
dobj(said-4, anything-2)
nsubj(questionable-6, anything-2)
nsubj(said-4, I-3)
rcmod(anything-2, said-4)
cop(questionable-6, was-5)
advcl(fantasy-13, questionable-6)
det(statement-9, that-8)
nsubj(fantasy-13, statement-9)
cop(fantasy-13, is-10)
advmod(fantasy-13, outright-11)
amod(fantasy-13, pot-of-gold-at-the-end-of-the-rainbow-12)
root(ROOT-0, fantasy-13)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB seriously))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD did) (RB n't)
            (VP (VB type)
              (NP
                (NP (DT that))
                (PP (IN with)
                  (NP (DT a) (JJ straight) (NN face)))))))))
    (. .)))

nsubj(hope-3, I-1)
advmod(hope-3, seriously-2)
root(ROOT-0, hope-3)
nsubj(type-7, you-4)
aux(type-7, did-5)
neg(type-7, n't-6)
ccomp(hope-3, type-7)
dobj(type-7, that-8)
det(face-12, a-10)
amod(face-12, straight-11)
prep_with(that-8, face-12)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADVP (RB still))
        (PP (IN on)
          (NP (DT the) (NN fence)))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBD was)
        (NP
          (NP (NN food))
          (PP (IN for)
            (NP (NN thought)))
          (PRN (, ,)
            (CC but)
            (ADJP (JJ much)
              (PP (IN of)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (VBD said)
                      (SBAR
                        (S
                          (VP (VBZ is)
                            (ADJP (JJ subjective)))))))))))
          (ADVP (IN at) (JJS best))
          (, ,)
          (CC and)
          (NP
            (NP (JJ pure) (NN opinion))
            (ADVP (IN at) (JJS worst))))))
    (. .)))

advmod('m-4, Again-1)
nsubj('m-4, I-3)
root(ROOT-0, 'm-4)
advmod('m-4, still-5)
det(fence-8, the-7)
prep_on('m-4, fence-8)
nsubj(food-13, that-11)
cop(food-13, was-12)
conj_and('m-4, food-13)
prep_for(food-13, thought-15)
dep(much-18, but-17)
dep(food-13, much-18)
dep(said-22, what-20)
nsubj(subjective-24, what-20)
nsubj(said-22, you-21)
prepc_of(much-18, said-22)
cop(subjective-24, is-23)
ccomp(said-22, subjective-24)
conj_and('m-4, at-25)
advmod(food-13, at-25)
conj_and(food-13, at-25)
pobj(at-25, best-26)
amod(opinion-30, pure-29)
conj_and('m-4, opinion-30)
conj_and(food-13, opinion-30)
advmod(opinion-30, at-31)
pobj(at-31, worst-32)

(ROOT
  (S
    (PP (IN Like)
      (S
        (NP (PRP I))
        (VP (VBD said)
          (ADVP (RB before))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP (VB destroy)
                      (NP (PRP$ your) (NN life)))))))))))
    (, ,)
    (VP (VB go)
      (ADVP (RB right) (RB ahead)))
    (. .)))

nsubj(said-3, I-2)
prepc_like(go-14, said-3)
advmod(said-3, before-4)
mark(want-8, if-6)
nsubj(want-8, you-7)
xsubj(destroy-10, you-7)
advcl(said-3, want-8)
aux(destroy-10, to-9)
xcomp(want-8, destroy-10)
poss(life-12, your-11)
dobj(destroy-10, life-12)
root(ROOT-0, go-14)
advmod(ahead-16, right-15)
advmod(go-14, ahead-16)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB certainly))
    (VP (MD would) (RB not)
      (VP (VB hire)
        (NP
          (NP (NN someone))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD tested)
                (ADJP (JJ positive))
                (PP (IN for)
                  (NP
                    (NP (NN heroin))
                    (, ,)
                    (CC or)
                    (RB even)
                    (NP (NN marijuana))))))))))
    (. .)))

nsubj(hire-5, I-1)
advmod(hire-5, certainly-2)
aux(hire-5, would-3)
neg(hire-5, not-4)
root(ROOT-0, hire-5)
dobj(hire-5, someone-6)
nsubj(tested-8, someone-6)
rcmod(someone-6, tested-8)
acomp(tested-8, positive-9)
prep_for(tested-8, heroin-11)
prep_for(tested-8, even-14)
advmod(heroin-11, even-14)
conj_or(heroin-11, even-14)
dep(heroin-11, marijuana-15)

(ROOT
  (S
    (S
      (S
        (ADJP (JJ Plain)
          (CC and)
          (JJ simple)))
      (, ,)
      (NP (NN drug) (NN use))
      (VP (VBZ is)
        (NP (DT a) (JJ poor) (NN decision))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (NP
            (NP (NNS people))
            (VP (VBG working)
              (PP (IN for)
                (NP
                  (NP (PRP me))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP have)
                        (NP
                          (NP (JJ poor) (NN decision))
                          (VP (VBG making)
                            (NP (NNS abilities))))))))))))))
    (. .)))

ccomp(decision-10, Plain-1)
conj_and(Plain-1, simple-3)
ccomp(decision-10, simple-3)
nn(use-6, drug-5)
nsubj(decision-10, use-6)
cop(decision-10, is-7)
det(decision-10, a-8)
amod(decision-10, poor-9)
root(ROOT-0, decision-10)
nsubj(want-16, I-13)
aux(want-16, do-14)
neg(want-16, n't-15)
conj_and(decision-10, want-16)
dobj(want-16, people-17)
partmod(people-17, working-18)
prep_for(working-18, me-20)
nsubj(have-22, me-20)
rcmod(me-20, have-22)
amod(decision-24, poor-23)
dobj(have-22, decision-24)
partmod(decision-24, making-25)
dobj(making-25, abilities-26)

(ROOT
  (S
    (ADVP (RB Just))
    (VP (VB do) (RB n't)
      (VP (VB drag)
        (NP (PRP me))
        (, ,)
        (FRAG (CC or)
          (NP
            (NP (DT any) (JJ other) (JJ innocent) (NN person))
            (ADVP (RB down)
              (PP (IN with)
                (NP (PRP you))))))))
    (. .)))

advmod(drag-4, Just-1)
aux(drag-4, do-2)
neg(drag-4, n't-3)
root(ROOT-0, drag-4)
dobj(drag-4, me-5)
dep(person-11, or-7)
det(person-11, any-8)
amod(person-11, other-9)
amod(person-11, innocent-10)
dep(drag-4, person-11)
advmod(person-11, down-12)
prep_with(down-12, you-14)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (NN drug) (NN policy))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ destroys)
              (NP (NNS lives)))))))
    (. .)))

nsubj(policy-5, It-2)
cop(policy-5, 's-3)
nn(policy-5, drug-4)
root(ROOT-0, policy-5)
nsubj(destroys-7, policy-5)
rcmod(policy-5, destroys-7)
dobj(destroys-7, lives-8)

(ROOT
  (S
    (NP (DT The) (NN drug) (NN problem))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN healthcare) (NN issue))
        (, ,) (RB not)
        (NP (DT a) (NN law) (NN enforcement) (NN one))))
    (. .)))

det(problem-3, The-1)
nn(problem-3, drug-2)
nsubj(issue-7, problem-3)
cop(issue-7, is-4)
det(issue-7, a-5)
nn(issue-7, healthcare-6)
root(ROOT-0, issue-7)
neg(issue-7, not-9)
det(one-13, a-10)
nn(one-13, law-11)
nn(one-13, enforcement-12)
dep(issue-7, one-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (PP (IN like)
        (S
          (VP (VBG trying)
            (PP (TO to)
              (NP (NN arrest)
                (CC and)
                (NN jail) (NN cancer)))))))
    (. .) ('' '')))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
prepc_like('s-2, trying-4)
nn(cancer-9, arrest-6)
conj_and(arrest-6, jail-8)
nn(cancer-9, jail-8)
prep_to(trying-4, cancer-9)

(ROOT
  (S
    (PP (VBN Come)
      (PP (IN on)))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (NP (DT a) (NN stretch)))
    (. .)))

prep(stretch-7, Come-1)
pcomp(Come-1, on-2)
prep(Come-1, on-2)
nsubj(stretch-7, that-4)
cop(stretch-7, 's-5)
det(stretch-7, a-6)
root(ROOT-0, stretch-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN cousin))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ is)
              (VP (VBN married)
                (PP (TO to)
                  (NP
                    (NP (DT a) (NN guy))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ takes)
                          (NP (NN meth)))))))))))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(cousin-4, a-3)
dobj(have-2, cousin-4)
nsubjpass(married-7, cousin-4)
auxpass(married-7, is-6)
rcmod(cousin-4, married-7)
det(guy-10, a-9)
prep_to(married-7, guy-10)
nsubj(takes-12, guy-10)
rcmod(guy-10, takes-12)
dobj(takes-12, meth-13)

