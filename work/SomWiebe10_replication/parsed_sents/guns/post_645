(ROOT
  (S
    (NP (DT An) (JJ armed) (NN populace))
    (VP (VBZ has)
      (NP (DT the) (NN ability)
        (S
          (VP (TO to)
            (VP (VB check)
              (NP
                (NP (DT the) (NN power))
                (PP (IN of)
                  (NP (NN government)))))))))
    (. .)))

det(populace-3, An-1)
amod(populace-3, armed-2)
nsubj(has-4, populace-3)
root(ROOT-0, has-4)
det(ability-6, the-5)
dobj(has-4, ability-6)
aux(check-8, to-7)
infmod(ability-6, check-8)
det(power-10, the-9)
dobj(check-8, power-10)
prep_of(power-10, government-12)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ first) (NN thing))
      (SBAR
        (S
          (NP (NNS dictators))
          (VP (VBP do)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP take)
                  (PP (IN over)
                    (NP (DT a) (NN nation))))))))))
    (VP (VBZ is)
      (VP (VB disarm)
        (NP (DT the) (NN populace)
          (S
            (VP (TO to)
              (VP (VB make)
                (S
                  (NP (PRP them))
                  (ADJP (RBR easier))
                  (S
                    (VP (TO to)
                      (VP (VB control)))))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, first-2)
nsubj(disarm-13, thing-3)
nsubj(do-5, dictators-4)
rcmod(thing-3, do-5)
advmod(take-8, when-6)
nsubj(take-8, they-7)
advcl(do-5, take-8)
det(nation-11, a-10)
prep_over(take-8, nation-11)
aux(disarm-13, is-12)
root(ROOT-0, disarm-13)
det(populace-15, the-14)
dobj(disarm-13, populace-15)
aux(make-17, to-16)
infmod(populace-15, make-17)
nsubj(control-21, them-18)
dep(control-21, easier-19)
aux(control-21, to-20)
xcomp(make-17, control-21)

(ROOT
  (S
    (S
      (NP (NNP Government))
      (VP (MD can)
        (VP (VB call)
          (NP
            (NP (DT the) (NNS restrictions))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (VP (VB put)
                        (PP (IN on)
                          (NP (PRP us)))
                        (NP
                          (NP (NN safety) (NNS reasons))
                          (SBAR (IN if)
                            (S
                              (NP (PRP they))
                              (VP (VBP want)
                                (PP (TO to))))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB really))
        (PP
          (PP (IN about)
            (NP
              (NP (NN safety))
              (PP (IN for)
                (NP (PRP them)))))
          (, ,) (RB not)
          (PP (IN for)
            (NP (PRP us))))))
    (. .)))

nsubj(call-3, Government-1)
aux(call-3, can-2)
root(ROOT-0, call-3)
det(restrictions-5, the-4)
dobj(call-3, restrictions-5)
dobj(want-7, restrictions-5)
nsubj(want-7, they-6)
xsubj(put-9, they-6)
rcmod(restrictions-5, want-7)
aux(put-9, to-8)
xcomp(want-7, put-9)
prep_on(put-9, us-11)
nn(reasons-13, safety-12)
dobj(put-9, reasons-13)
dobj(want-16, reasons-13)
prep_to(want-16, reasons-13)
mark(want-16, if-14)
nsubj(want-16, they-15)
dep(reasons-13, want-16)
nsubj('s-21, it-20)
conj_but(call-3, 's-21)
advmod('s-21, really-22)
prep_about('s-21, safety-24)
prep_for(safety-24, them-26)
neg('s-21, not-28)
prep_for('s-21, us-30)

