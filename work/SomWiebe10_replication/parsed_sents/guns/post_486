(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN problem))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP see)))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNS addicts))
          (VP (MD will)
            (ADVP (RB still))
            (VP (VB engage)
              (PP (IN in)
                (NP (JJ illegal) (NN behavior)))
              (S
                (VP (TO to)
                  (VP (VB obtain)
                    (NP (PRP$ their) (NNS drugs))))))))))
    (. .)))

det(problem-3, The-2)
dobj(see-5, problem-3)
nsubj(is-6, problem-3)
nsubj(see-5, I-4)
rcmod(problem-3, see-5)
root(ROOT-0, is-6)
complm(engage-11, that-7)
nsubj(engage-11, addicts-8)
xsubj(obtain-16, addicts-8)
aux(engage-11, will-9)
advmod(engage-11, still-10)
ccomp(is-6, engage-11)
amod(behavior-14, illegal-13)
prep_in(engage-11, behavior-14)
aux(obtain-16, to-15)
xcomp(engage-11, obtain-16)
poss(drugs-18, their-17)
dobj(obtain-16, drugs-18)

(ROOT
  (S ('' '')
    (NP (DT The) (NNS data))
    (ADVP (RB just))
    (VP (VBZ does) (RB n't)
      (VP (VB support)
        (NP (DT that) (NN claim))))
    (. .)))

det(data-3, The-2)
nsubj(support-7, data-3)
advmod(support-7, just-4)
aux(support-7, does-5)
neg(support-7, n't-6)
root(ROOT-0, support-7)
det(claim-9, that-8)
dobj(support-7, claim-9)

(ROOT
  (S
    (S
      (VP (VBG Opening)
        (NP (DT the) (NN door))
        (PP (TO to)
          (NP
            (NP (DT a) (JJ whole) (NN class))
            (PP (IN of)
              (NP
                (NP (NNS workers))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP spend)
                      (NP (PRP$ their) (NN money))
                      (PP (IN on)
                        (NP
                          (NP (NN heroin))
                          (PP (RB instead) (IN of)
                            (NP (NNP WoW))))))))))))))
    (CC and)
    (S
      (ADVP (RB still))
      (VP (VB show)
        (PRT (RP up))
        (S
          (VP (TO to)
            (VP (VB work)
              (PP (IN on)
                (NP (NN time))))))))
    (. .)))

root(ROOT-0, Opening-1)
det(door-3, the-2)
dobj(Opening-1, door-3)
det(class-7, a-5)
amod(class-7, whole-6)
prep_to(Opening-1, class-7)
prep_of(class-7, workers-9)
nsubj(spend-11, workers-9)
rcmod(workers-9, spend-11)
poss(money-13, their-12)
dobj(spend-11, money-13)
prep_on(spend-11, heroin-15)
prep_instead_of(heroin-15, WoW-18)
advmod(show-21, still-20)
conj_and(Opening-1, show-21)
prt(show-21, up-22)
aux(work-24, to-23)
xcomp(show-21, work-24)
prep_on(work-24, time-26)

(ROOT
  (S
    (S
      (NP (DT The) (NN drug) (NN market))
      (VP (VBZ is)
        (NP (DT a)
          (ADJP (RB truly) (JJ free))
          (NN market))))
    (, ,)
    (CC and)
    (S
      (PP (IN as)
        (NP (JJ such)))
      (NP (PRP it))
      (VP (VBZ reacts)
        (PP (IN with)
          (NP (NN lightning) (NN speed)))))
    (. .)))

det(market-3, The-1)
nn(market-3, drug-2)
nsubj(market-8, market-3)
cop(market-8, is-4)
det(market-8, a-5)
advmod(free-7, truly-6)
amod(market-8, free-7)
root(ROOT-0, market-8)
prep_such_as(reacts-14, such-12)
nsubj(reacts-14, it-13)
conj_and(market-8, reacts-14)
nn(speed-17, lightning-16)
prep_with(reacts-14, speed-17)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP am)
      (PP (IN against)
        (NP (PRP them)))
      (PP (RB because)
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (VBP do)
                (PP (TO to)
                  (NP
                    (NP (NNS people) (POS 's))
                    (NNS lives) ('' '') (NN Drugs)))
                (SBAR
                  (S
                    (NP (PRP themselves))
                    (ADVP (RB actually))
                    (VP (VBP do)
                      (NP
                        (ADJP (RB very) (JJ little))
                        (NN harm)))))))))
        (, ,) (RB especially)
        (PP (VBN compared)
          (PP (TO to)
            (NP
              (NP (NNS things))
              (PP (IN like)
                (NP
                  (NP (NNS HFCS))
                  (, ,)
                  (NP (NN fat))
                  (, ,)
                  (CC or)
                  (NP (NNS cars)))))))))
    (. .)))

nsubj(am-3, I-2)
root(ROOT-0, am-3)
prep_against(am-3, them-5)
dep(do-10, what-8)
dobj(do-19, what-8)
nsubj(do-10, they-9)
prepc_because_of(am-3, do-10)
poss(Drugs-16, people-12)
nn(Drugs-16, lives-14)
prep_to(do-10, Drugs-16)
nsubj(do-19, themselves-17)
advmod(do-19, actually-18)
ccomp(do-10, do-19)
advmod(little-21, very-20)
amod(harm-22, little-21)
dobj(do-19, harm-22)
advmod(am-3, especially-24)
prepc_compared_to(am-3, to-26)
pobj(am-3, things-27)
prep_like(things-27, HFCS-29)
prep_like(things-27, fat-31)
conj_or(HFCS-29, fat-31)
prep_like(things-27, cars-34)
conj_or(HFCS-29, cars-34)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (NN drug) (NN policy))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ destroys)
              (NP (NNS lives)))))))
    (. .)))

nsubj(policy-4, It-1)
cop(policy-4, 's-2)
nn(policy-4, drug-3)
root(ROOT-0, policy-4)
nsubj(destroys-6, policy-4)
rcmod(policy-4, destroys-6)
dobj(destroys-6, lives-7)

(ROOT
  (S
    (NP (DT The) (NN drug) (NN problem))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN healthcare) (NN issue))
        (, ,) (RB not)
        (NP (DT a) (NN law) (NN enforcement) (NN one))))
    (. .)))

det(problem-3, The-1)
nn(problem-3, drug-2)
nsubj(issue-7, problem-3)
cop(issue-7, is-4)
det(issue-7, a-5)
nn(issue-7, healthcare-6)
root(ROOT-0, issue-7)
neg(issue-7, not-9)
det(one-13, a-10)
nn(one-13, law-11)
nn(one-13, enforcement-12)
dep(issue-7, one-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (PP (IN like)
        (S
          (VP (VBG trying)
            (PP (TO to)
              (NP (NN arrest)
                (CC and)
                (NN jail) (NN cancer)))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
prepc_like('s-2, trying-4)
nn(cancer-9, arrest-6)
conj_and(arrest-6, jail-8)
nn(cancer-9, jail-8)
prep_to(trying-4, cancer-9)

(ROOT
  (S
    (S
      (NP (DT The) (NN drug) (NN war))
      (VP (VBZ makes)
        (S
          (NP (PRP it))
          (ADJP (JJ impossible)
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (NN treatment)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ forces)
      (S
        (NP (NNS addicts))
        (VP (TO to)
          (VP (VB live)
            (PRT (RP off))
            (NP (NN grid))
            (, ,)
            (S
              (VP (VBG creating)
                (NP
                  (NP (DT a) (NN self))
                  (VP (VBG fulfilling)
                    (ADVP (RB prophecy))))))))))
    (. .)))

det(war-3, The-1)
nn(war-3, drug-2)
nsubj(makes-4, war-3)
ccomp(forces-12, makes-4)
nsubj(impossible-6, it-5)
xcomp(makes-4, impossible-6)
aux(get-8, to-7)
xcomp(impossible-6, get-8)
dobj(get-8, treatment-9)
nsubj(forces-12, it-11)
root(ROOT-0, forces-12)
nsubj(live-15, addicts-13)
aux(live-15, to-14)
xcomp(forces-12, live-15)
prt(live-15, off-16)
dobj(live-15, grid-17)
partmod(live-15, creating-19)
xcomp(live-15, creating-19)
det(self-21, a-20)
dobj(creating-19, self-21)
partmod(self-21, fulfilling-22)
advmod(fulfilling-22, prophecy-23)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (NN course) (NNS addicts)))
      (VP (VB steal)))
    (, ,)
    (ADVP (RB once))
    (NP (PRP they))
    (VP (VBP are)
      (NP
        (NP (DT an) (NN addict))
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD wo) (RB n't)
              (VP (VB let)
                (S
                  (NP (PRP them))
                  (VP (VB work)))))))))
    (. !)))

nn(addicts-3, course-2)
prep_of(steal-4, addicts-3)
ccomp(addict-10, steal-4)
advmod(addict-10, once-6)
nsubj(addict-10, they-7)
cop(addict-10, are-8)
det(addict-10, an-9)
root(ROOT-0, addict-10)
dobj(let-14, addict-10)
nsubj(let-14, we-11)
aux(let-14, wo-12)
neg(let-14, n't-13)
rcmod(addict-10, let-14)
nsubj(work-16, them-15)
ccomp(let-14, work-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ creates)
      (NP
        (NP (DT a) (JJ criminal) (NN enterprise))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ results)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ utter) (NN destruction))
                  (PP (IN of)
                    (NP (NNS communities))))))))))
    (. .)))

nsubj(creates-2, It-1)
root(ROOT-0, creates-2)
det(enterprise-5, a-3)
amod(enterprise-5, criminal-4)
dobj(creates-2, enterprise-5)
nsubj(results-7, enterprise-5)
rcmod(enterprise-5, results-7)
det(destruction-11, the-9)
amod(destruction-11, utter-10)
prep_in(results-7, destruction-11)
prep_of(destruction-11, communities-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB also))
      (ADJP (JJ hypocritical)))
    (. .)))

nsubj(hypocritical-4, It-1)
cop(hypocritical-4, 's-2)
advmod(hypocritical-4, also-3)
root(ROOT-0, hypocritical-4)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN drug))
        (VP (VBN saturated)
          (NP (NN society)))))
    (. .)))

nsubj(drug-4, We-1)
cop(drug-4, are-2)
det(drug-4, a-3)
root(ROOT-0, drug-4)
partmod(drug-4, saturated-5)
dobj(saturated-5, society-6)

(ROOT
  (S
    (NP (DT The) (JJ pharmaceutical) (NN industry))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (ADJP (RBS most) (JJ profitable))
          (NN one))
        (PP (IN in)
          (NP (NNP America)))))
    (. .)))

det(industry-3, The-1)
amod(industry-3, pharmaceutical-2)
nsubj(one-8, industry-3)
cop(one-8, is-4)
det(one-8, the-5)
advmod(profitable-7, most-6)
amod(one-8, profitable-7)
root(ROOT-0, one-8)
prep_in(one-8, America-10)

(ROOT
  (S
    (NP (DT This) (NN duplicity))
    (VP (VBZ causes)
      (SBAR
        (S
          (NP
            (NP (DT a) (JJ fundamental) (NN distrust)
              (CC and)
              (NN hatred))
            (PP (IN of)
              (NP
                (NP (DT the) (NN government))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ 's)
                      (VP (VBN cost)
                        (ADVP (RB alone)))))))))
          (VP (MD can) (RB not)
            (VP (VB be)
              (VP (VBN calculated)))))))
    (. .)))

det(duplicity-2, This-1)
nsubj(causes-3, duplicity-2)
root(ROOT-0, causes-3)
det(distrust-6, a-4)
amod(distrust-6, fundamental-5)
nsubjpass(calculated-19, distrust-6)
conj_and(distrust-6, hatred-8)
nsubjpass(calculated-19, hatred-8)
det(government-11, the-10)
prep_of(distrust-6, government-11)
nsubjpass(cost-14, government-11)
auxpass(cost-14, 's-13)
rcmod(government-11, cost-14)
advmod(cost-14, alone-15)
aux(calculated-19, can-16)
neg(calculated-19, not-17)
auxpass(calculated-19, be-18)
ccomp(causes-3, calculated-19)

(ROOT
  (S (CC And)
    (ADVP (RB again))
    (, ,)
    (NP
      (NP (NN self))
      (VP (VBG fulling)
        (ADVP (RB prophecy))
        (, ,)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP
              (NP (PRP they))
              (PP (IN in)
                (NP (NN turn))))
            (VP (VBP show)
              (NP
                (NP (DT a) (JJ total) (NN lack))
                (PP (IN of)
                  (NP
                    (NP (NN respect))
                    (PP (IN for)
                      (NP (NN authority))))))
              (NP (PRP we)))))))
    (VP (VBP say)
      (SBAR
        (S
          (NP (DT the) (NNS drugs))
          (VP (VBD did)
            (NP (PRP it))
            (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (PP (IN in)
                  (NP (NN fact)))
                (NP (NNP WE))
                (VP (VBD did)
                  (NP (PRP it)))))))))
    (. .)))

cc(say-21, And-1)
advmod(say-21, again-2)
nsubj(say-21, self-4)
partmod(self-4, fulling-5)
advmod(fulling-5, prophecy-6)
advmod(show-12, when-8)
nsubj(show-12, they-9)
prep_in(they-9, turn-11)
advcl(fulling-5, show-12)
det(lack-15, a-13)
amod(lack-15, total-14)
iobj(show-12, lack-15)
prep_of(lack-15, respect-17)
prep_for(respect-17, authority-19)
dobj(show-12, we-20)
root(ROOT-0, say-21)
det(drugs-23, the-22)
nsubj(did-24, drugs-23)
ccomp(say-21, did-24)
dobj(did-24, it-25)
advmod(did-31, when-27)
prep_in(did-31, fact-29)
nsubj(did-31, WE-30)
advcl(did-24, did-31)
dobj(did-31, it-32)

(ROOT
  (S
    (PP (IN With)
      (NP (NN possession)))
    (S
      (VP (VBG being)
        (NP (JJ legal) (NN proving) (NN sale))))
    (VP (VBZ becomes)
      (ADJP (JJ next)
        (PP (TO to)
          (ADJP (JJ impossible)))))
    (. .)))

prep_with(next-8, possession-2)
cop(sale-6, being-3)
amod(sale-6, legal-4)
nn(sale-6, proving-5)
csubj(next-8, sale-6)
cop(next-8, becomes-7)
root(ROOT-0, next-8)
prep_to(next-8, impossible-10)

(ROOT
  (S
    (S
      (NP (NNP Heroin))
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN sold)
                (PP (IN over)
                  (NP (DT the) (NN counter)))))))))
    (, ,)
    (NP (DT some))
    (VP (VBZ estimates)
      (NP
        (NP (NN place) (NN functional) (NN addiction))
        (PP (IN in)
          (NP
            (NP (NNP America))
            (ADVP (RB almost)
              (PP (TO to)
                (NP (DT the) (CD one) (JJ third) (NN mark)))))))
      (PP (IN at)
        (NP
          (NP (PRP it) (POS 's))
          (NN peak))))
    (. .)))

nsubj(used-2, Heroin-1)
xsubj(sold-5, Heroin-1)
ccomp(estimates-11, used-2)
aux(sold-5, to-3)
auxpass(sold-5, be-4)
xcomp(used-2, sold-5)
det(counter-8, the-7)
prep_over(sold-5, counter-8)
nsubj(estimates-11, some-10)
root(ROOT-0, estimates-11)
nn(addiction-14, place-12)
nn(addiction-14, functional-13)
dobj(estimates-11, addiction-14)
prep_in(addiction-14, America-16)
advmod(America-16, almost-17)
det(mark-22, the-19)
num(mark-22, one-20)
amod(mark-22, third-21)
prep_to(almost-17, mark-22)
poss(peak-26, it-24)
prep_at(estimates-11, peak-26)

(ROOT
  (S
    (NP (NNP Society))
    (VP (VBZ 's)
      (NP
        (NP (JJ chief) (NN problem))
        (PP (IN at)
          (NP (DT the) (NN time)))))
    (. ?)))

nsubj(problem-4, Society-1)
cop(problem-4, 's-2)
amod(problem-4, chief-3)
root(ROOT-0, problem-4)
det(time-7, the-6)
prep_at(problem-4, time-7)

(ROOT
  (S
    (NP (DT The) (NN stock))
    (VP (VBP market))
    (. .)))

det(stock-2, The-1)
nsubj(market-3, stock-2)
root(ROOT-0, market-3)

(ROOT
  (S
    (S
      (NP
        (NP (RB Not) (NN street) (NN crime))
        (, ,)
        (NP
          (NP (RB not) (DT an) (NN army))
          (PP (IN of)
            (NP (JJ addicted) (NNS zombies)))))
      (VP (VBG living)
        (PRT (RP off))
        (NP (NN government)
          (CC and)
          (NNS outs))))
    (, ,)
    (CC but)
    (S
      (NP (JJ upper) (NN class) (NNS suits))
      (VP
        (VP (VBG making)
          (NP (NN margin) (NNS calls)))
        (CC and)
        (VP (VBG leading)
          (NP (PRP us))
          (PP (IN into)
            (NP
              (NP (DT a) (NN depression))
              (PP (IN on)
                (NP
                  (ADJP (RB completely) (JJ false))
                  (NNS claims))))))))
    (. .)))

neg(crime-3, Not-1)
nn(crime-3, street-2)
nsubj(living-11, crime-3)
neg(army-7, not-5)
det(army-7, an-6)
appos(crime-3, army-7)
amod(zombies-10, addicted-9)
prep_of(army-7, zombies-10)
root(ROOT-0, living-11)
prt(living-11, off-12)
dobj(living-11, government-13)
dobj(living-11, outs-15)
conj_and(government-13, outs-15)
amod(suits-20, upper-18)
nn(suits-20, class-19)
nsubj(making-21, suits-20)
nsubj(leading-25, suits-20)
conj_but(living-11, making-21)
nn(calls-23, margin-22)
dobj(making-21, calls-23)
conj_but(living-11, leading-25)
conj_and(making-21, leading-25)
dobj(leading-25, us-26)
det(depression-29, a-28)
prep_into(leading-25, depression-29)
advmod(false-32, completely-31)
amod(claims-33, false-32)
prep_on(depression-29, claims-33)

(ROOT
  (S
    (NP (PDT All) (DT the) (JJ other) (NNS drugs))
    (VP (VBP are)
      (NP
        (NP (DT a) (NN function))
        (PP (IN of)
          (NP (DT the) (NN drug) (NN war))))
      (ADVP
        (ADVP (RB as) (RB well))
        (PP (TO to)
          (NP
            (NP (CD one) (NN degree))
            (CC or)
            (NP (DT another)))))
      (, ,)
      (PP (IN as)
        (NP
          (NP (NNS dealers))
          (VP
            (VP (VBN sought)
              (S
                (VP (TO to)
                  (VP (VB increase)
                    (NP
                      (NP (PRP$ their) (NN profit))
                      (PP (IN per)
                        (NP (NN pound\/gram\/ton))))))))
            (CC and)
            (VP (VBN set)
              (PP (IN about)
                (S
                  (VP (VBG refining)
                    (NP (PRP$ their) (NNS drugs))))))))))
    (. .)))

predet(drugs-4, All-1)
det(drugs-4, the-2)
amod(drugs-4, other-3)
nsubj(function-7, drugs-4)
cop(function-7, are-5)
det(function-7, a-6)
root(ROOT-0, function-7)
det(war-11, the-9)
nn(war-11, drug-10)
prep_of(function-7, war-11)
advmod(well-13, as-12)
mwe(well-13, as-12)
advmod(function-7, well-13)
num(degree-16, one-15)
prep_to(well-13, degree-16)
prep_to(well-13, another-18)
conj_or(degree-16, another-18)
prep_as(function-7, dealers-21)
xsubj(increase-24, dealers-21)
dep(dealers-21, sought-22)
aux(increase-24, to-23)
xcomp(sought-22, increase-24)
poss(profit-26, their-25)
dobj(increase-24, profit-26)
prep_per(profit-26, pound\/gram\/ton-28)
dep(dealers-21, set-30)
conj_and(sought-22, set-30)
prepc_about(set-30, refining-32)
poss(drugs-34, their-33)
dobj(refining-32, drugs-34)

(ROOT
  (S
    (NP
      (NP (NNP Meth))
      (PP (IN as)
        (NP (DT a) (NN street) (NN drug))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ synthetic) (NN substitute))
        (PP (IN for)
          (NP
            (NP (NN coca))
            (ADJP (NN plain)
              (CC and)
              (NN simple))))))
    (. .)))

nsubj(substitute-9, Meth-1)
det(drug-5, a-3)
nn(drug-5, street-4)
prep_as(Meth-1, drug-5)
cop(substitute-9, is-6)
det(substitute-9, a-7)
amod(substitute-9, synthetic-8)
root(ROOT-0, substitute-9)
prep_for(substitute-9, coca-11)
amod(coca-11, plain-12)
amod(coca-11, simple-14)
conj_and(plain-12, simple-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ exists)
      (ADVP (RB almost))
      (ADVP (RB solely))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (MD can)
            (VP (VB be)
              (VP (VBN produced)
                (PP (IN in)
                  (NP (NN street) (NNS labs)))))))))
    (. .)))

nsubj(exists-2, It-1)
root(ROOT-0, exists-2)
advmod(exists-2, almost-3)
advmod(exists-2, solely-4)
mark(produced-9, because-5)
nsubjpass(produced-9, it-6)
aux(produced-9, can-7)
auxpass(produced-9, be-8)
advcl(exists-2, produced-9)
nn(labs-12, street-11)
prep_in(produced-9, labs-12)

(ROOT
  (S (`` ``)
    (NP (PRP they))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ responsible)
          (PP (IN for)
            (S
              (VP (VBG treating)
                (NP (PRP you))
                (PP (IN as)
                  (NP
                    (NP (DT a) (NN result))
                    (PP (IN of)
                      (NP (PRP$ your) (NN inability)
                        (S
                          (VP (TO to)
                            (VP (VB control)
                              (NP (PRP$ your) (JJ own) (NN life)))))))))))))))
    (. .)))

nsubj(responsible-5, they-2)
aux(responsible-5, will-3)
cop(responsible-5, be-4)
root(ROOT-0, responsible-5)
prepc_for(responsible-5, treating-7)
dobj(treating-7, you-8)
det(result-11, a-10)
prep_as(treating-7, result-11)
poss(inability-14, your-13)
prep_of(result-11, inability-14)
aux(control-16, to-15)
infmod(inability-14, control-16)
poss(life-19, your-17)
amod(life-19, own-18)
dobj(control-16, life-19)

(ROOT
  (S ('' '')
    (NP (NN Nothing))
    (VP (MD could)
      (VP (VB be)
        (ADVP (RBR further))
        (PP (IN from)
          (NP (DT the) (NN truth)))))
    (. .)))

nsubj(be-4, Nothing-2)
aux(be-4, could-3)
root(ROOT-0, be-4)
advmod(be-4, further-5)
det(truth-8, the-7)
prep_from(be-4, truth-8)

(ROOT
  (S
    (VP (VB Look)
      (SBAR
        (WHADVP (WRB how) (RB well))
        (S
          (NP (DT the) (NN government))
          (VP (VBZ handles)
            (NP (DT the) (NN poverty)
              (CC and)
              (NN homelessness) (NNS epidemics))))))
    (. .)))

root(ROOT-0, Look-1)
advmod(well-3, how-2)
advmod(handles-6, well-3)
det(government-5, the-4)
nsubj(handles-6, government-5)
ccomp(Look-1, handles-6)
det(epidemics-11, the-7)
nn(epidemics-11, poverty-8)
conj_and(poverty-8, homelessness-10)
nn(epidemics-11, homelessness-10)
dobj(handles-6, epidemics-11)

(ROOT
  (S (CC And)
    (PP (IN with)
      (NP (PDT all) (DT the) (JJ obvious) (NNS benefits)))
    (S
      (NP (NNP Portugal))
      (VP (VBZ is)
        (VP (VBG experiencing)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD 'd)
                (VP (VB say)
                  (NP (DT the) (NN priority))
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NN enforcement))
                      (PP (IN of)
                        (NP
                          (NP (JJ anti) (NNS sales))
                          (SBAR
                            (S
                              (NP (NN law))
                              (VP (VBZ is)
                                (VP (VBN diminished)
                                  (PP (IN except) (IN in)
                                    (NP
                                      (NP (DT the) (JJS highest))
                                      (PP (IN of)
                                        (NP (NNS traffickers))))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VB assure)
        (NP (PRP you))
        (SBAR
          (S
            (NP (DT this))
            (VP (MD will)
              (VP (VB reflect)
                (PP (IN in)
                  (NP (DT the) (NN street) (NN price)))))))))
    (. .)))

predet(benefits-6, all-3)
det(benefits-6, the-4)
amod(benefits-6, obvious-5)
prep_with(experiencing-9, benefits-6)
nsubj(experiencing-9, Portugal-7)
aux(experiencing-9, is-8)
root(ROOT-0, experiencing-9)
nsubj(say-12, I-10)
aux(say-12, 'd-11)
ccomp(experiencing-9, say-12)
det(priority-14, the-13)
dobj(say-12, priority-14)
det(enforcement-17, the-16)
prep_on(say-12, enforcement-17)
amod(sales-20, anti-19)
prep_of(enforcement-17, sales-20)
nsubjpass(diminished-23, law-21)
auxpass(diminished-23, is-22)
rcmod(sales-20, diminished-23)
dep(diminished-23, except-24)
det(highest-27, the-26)
prep_in(diminished-23, highest-27)
prep_of(highest-27, traffickers-29)
nsubj(assure-33, I-32)
conj_and(experiencing-9, assure-33)
dobj(assure-33, you-34)
nsubj(reflect-37, this-35)
aux(reflect-37, will-36)
dep(assure-33, reflect-37)
det(price-41, the-39)
nn(price-41, street-40)
prep_in(reflect-37, price-41)

(ROOT
  (FRAG (RB Not)
    (VP (TO to)
      (VP (VB mention)
        (NP
          (NP (JJ mental) (NN health) (NN care))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is)
                (VP (VBN related)
                  (PP (TO to)
                    (NP (DT both))))))))))
    (. .)))

root(ROOT-0, Not-1)
aux(mention-3, to-2)
dep(Not-1, mention-3)
amod(care-6, mental-4)
nn(care-6, health-5)
dobj(mention-3, care-6)
nsubjpass(related-9, care-6)
auxpass(related-9, is-8)
rcmod(care-6, related-9)
prep_to(related-9, both-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NN number))
      (PP (IN of)
        (NP
          (NP (JJ homeless) (NNS people))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (ADJP (RB mentally) (JJ ill))))))))
    (VP (VBZ is)
      (ADJP (JJ staggering)))
    (. .)))

det(number-2, The-1)
nsubj(staggering-11, number-2)
amod(people-5, homeless-4)
prep_of(number-2, people-5)
nsubj(ill-9, people-5)
cop(ill-9, are-7)
advmod(ill-9, mentally-8)
rcmod(people-5, ill-9)
cop(staggering-11, is-10)
root(ROOT-0, staggering-11)

(ROOT
  (S
    (NP (NNP America))
    (VP (VBZ has)
      (NP
        (NP (DT a) (JJ long) (NN history))
        (PP (IN of)
          (S
            (VP (VBG ignoring)
              (SBAR
                (S
                  (NP (DT those))
                  (ADVP (RB in))
                  (VP (VBP need) (, ,)
                    (SBARQ
                      (WHADVP (WRB why))
                      (SQ (MD should)
                        (NP (NNS addicts))
                        (VP (VB be)
                          (ADJP (RB any) (JJ different))))
                      (. ?))))))))))))

nsubj(has-2, America-1)
root(ROOT-0, has-2)
det(history-5, a-3)
amod(history-5, long-4)
dobj(has-2, history-5)
prepc_of(history-5, ignoring-7)
nsubj(need-10, those-8)
advmod(need-10, in-9)
ccomp(ignoring-7, need-10)
advmod(different-17, why-12)
aux(different-17, should-13)
nsubj(different-17, addicts-14)
cop(different-17, be-15)
advmod(different-17, any-16)
dep(need-10, different-17)

(ROOT
  (S
    (NP
      (NP (DT This) (NN image))
      (PP (IN of)
        (NP (DT the) (JJ nanny) (NN state))))
    (VP (VBZ is)
      (ADVP (RB largely))
      (NP
        (NP (DT a) (NN myth))
        (VP (VBN perpetrated)
          (PP (IN by)
            (NP
              (NP (DT the) (NN right))
              (PP (IN in)
                (NP (NN order)))))
          (S
            (VP (TO to)
              (VP (VB preserve)
                (NP (PRP$ their) (JJ own) (JJ ill) (NN gotten) (NNS gains))))))))
    (. .)))

det(image-2, This-1)
nsubj(myth-10, image-2)
det(state-6, the-4)
amod(state-6, nanny-5)
prep_of(image-2, state-6)
cop(myth-10, is-7)
advmod(myth-10, largely-8)
det(myth-10, a-9)
root(ROOT-0, myth-10)
xsubj(preserve-18, myth-10)
partmod(myth-10, perpetrated-11)
det(right-14, the-13)
agent(perpetrated-11, right-14)
prep_in(right-14, order-16)
aux(preserve-18, to-17)
xcomp(perpetrated-11, preserve-18)
poss(gains-23, their-19)
amod(gains-23, own-20)
amod(gains-23, ill-21)
nn(gains-23, gotten-22)
dobj(preserve-18, gains-23)

(ROOT
  (S
    (PP (IN By)
      (NP (DT every) (JJ objective) (JJ relative) (NN measure)))
    (NP
      (NP (DT the) (NN funding))
      (VP (VBN spent)
        (PP (IN by)
          (NP (DT the) (NNP United) (NNPS States)))
        (PP (IN on)
          (NP (NN aid)))
        (PP (TO to)
          (NP
            (NP (PRP it) (POS 's))
            (JJ own) (NNS citizens)))))
    (VP (VBZ is)
      (ADJP (RB abysmally) (JJ small)))
    (. .)))

det(measure-5, every-2)
amod(measure-5, objective-3)
amod(measure-5, relative-4)
prep_by(small-22, measure-5)
det(funding-7, the-6)
nsubj(small-22, funding-7)
partmod(funding-7, spent-8)
det(States-12, the-10)
nn(States-12, United-11)
agent(spent-8, States-12)
prep_on(spent-8, aid-14)
poss(citizens-19, it-16)
amod(citizens-19, own-18)
prep_to(spent-8, citizens-19)
cop(small-22, is-20)
advmod(small-22, abysmally-21)
root(ROOT-0, small-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP one))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB judge)
                (NP (PRP$ our) (NN compassion))
                (PP (VBN based)
                  (PP (IN on)
                    (NP (DT those) (NNS figures))))))))))
    (NP (PRP one))
    (VP (MD would)
      (VP (VB conclude)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP are)
              (NP
                (NP (DT a) (NN society))
                (PP (IN with)
                  (NP
                    (NP (DT the) (JJ moral) (NN fortitude))
                    (PP (IN of)
                      (NP (NNP Ted) (NNP Bundy)))))))))))
    (. .)))

mark(were-3, If-1)
nsubj(were-3, one-2)
xsubj(judge-5, one-2)
advcl(conclude-14, were-3)
aux(judge-5, to-4)
xcomp(were-3, judge-5)
poss(compassion-7, our-6)
dobj(judge-5, compassion-7)
prepc_based_on(judge-5, on-9)
det(figures-11, those-10)
pobj(judge-5, figures-11)
nsubj(conclude-14, one-12)
aux(conclude-14, would-13)
root(ROOT-0, conclude-14)
nsubj(society-18, we-15)
cop(society-18, are-16)
det(society-18, a-17)
ccomp(conclude-14, society-18)
det(fortitude-22, the-20)
amod(fortitude-22, moral-21)
prep_with(society-18, fortitude-22)
nn(Bundy-25, Ted-24)
prep_of(fortitude-22, Bundy-25)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ classic) (NN example))
        (PP (IN of)
          (S
            (VP (VBG swallow)
              (S
                (NP (DT an) (NN elephant))
                (VP (VB choke)
                  (PP (IN on)
                    (NP (DT a) (NN gnat))))))))))
    (. .)))

nsubj(example-5, It-1)
cop(example-5, is-2)
det(example-5, a-3)
amod(example-5, classic-4)
root(ROOT-0, example-5)
prepc_of(example-5, swallow-7)
det(elephant-9, an-8)
nsubj(choke-10, elephant-9)
ccomp(swallow-7, choke-10)
det(gnat-13, a-12)
prep_on(choke-10, gnat-13)

(ROOT
  (S
    (NP (DT The) (NN drug) (NN war))
    (ADVP (RB directly))
    (VP (VBZ costs)
      (NP
        (NP (RB nearly) (CD 2000))
        (ADJP
          (NP ($ $) (CD per))
          (JJ second))))
    (. .)))

det(war-3, The-1)
nn(war-3, drug-2)
nsubj(costs-5, war-3)
advmod(costs-5, directly-4)
root(ROOT-0, costs-5)
advmod(2000-7, nearly-6)
dobj(costs-5, 2000-7)
npadvmod(second-10, $-8)
num($-8, per-9)
amod(2000-7, second-10)

(ROOT
  (S
    (NP (DT A) (JJ typical) (NN food) (NN stamp) (NN card))
    (VP (VBZ costs)
      (NP (CD 134))
      (NP ($ $)
        (QP (DT a) (NN month))))
    (. .)))

det(card-5, A-1)
amod(card-5, typical-2)
nn(card-5, food-3)
nn(card-5, stamp-4)
nsubj(costs-6, card-5)
root(ROOT-0, costs-6)
iobj(costs-6, 134-7)
dobj(costs-6, $-8)
quantmod(month-10, a-9)
num($-8, month-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN myth))
      (PP (IN of)
        (NP (DT the) (JJ nanny) (NN state))))
    (VP (VBZ is)
      (NP (NN smoke)
        (CC and)
        (NNS mirrors)))
    (. .)))

det(myth-2, The-1)
nsubj(smoke-8, myth-2)
det(state-6, the-4)
amod(state-6, nanny-5)
prep_of(myth-2, state-6)
cop(smoke-8, is-7)
root(ROOT-0, smoke-8)
conj_and(smoke-8, mirrors-10)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (ADVP (RB just))
      (NP
        (NP (DT no) (JJ objective) (NN view))
        (PP (IN of)
          (NP
            (NP (DT the) (NN cessation))
            (PP (IN of)
              (NP (NN prohibition)))))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (MD can)
              (VP (VB be)
                (VP (VBN called)
                  (S
                    (ADJP (JJ negative)))))))))
      (, ,)
      (ADVP (RB just))
      (PP (IN like)
        (NP (DT the) (NN gun) (NN law) (NN issue))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(is-2, just-3)
det(view-6, no-4)
amod(view-6, objective-5)
nsubj(is-2, view-6)
nsubjpass(called-15, view-6)
det(cessation-9, the-8)
prep_of(view-6, cessation-9)
prep_of(cessation-9, prohibition-11)
aux(called-15, can-13)
auxpass(called-15, be-14)
rcmod(view-6, called-15)
acomp(called-15, negative-16)
advmod(is-2, just-18)
det(issue-23, the-20)
nn(issue-23, gun-21)
nn(issue-23, law-22)
prep_like(is-2, issue-23)

(ROOT
  (S
    (NP (DT The) (JJ typical) (JJ upper) (NN class) (NN American))
    (VP (MD could) (RB not)
      (VP (VB survive)
        (PP (IN without)
          (S
            (NP (DT the) (NN state))
            (VP
              (VP (VBG regulating)
                (NP
                  (NP (PRP$ their) (NN business) (NN competition))
                  (PP (RB out) (IN of)
                    (NP (NN existence)))))
              (, ,)
              (CC and)
              (VP (VBG subsidizing)
                (NP (PRP$ their) (NNS failures))))))))
    (. .)))

det(American-5, The-1)
amod(American-5, typical-2)
amod(American-5, upper-3)
nn(American-5, class-4)
nsubj(survive-8, American-5)
aux(survive-8, could-6)
neg(survive-8, not-7)
root(ROOT-0, survive-8)
det(state-11, the-10)
nsubj(regulating-12, state-11)
nsubj(subsidizing-21, state-11)
prepc_without(survive-8, regulating-12)
poss(competition-15, their-13)
nn(competition-15, business-14)
dobj(regulating-12, competition-15)
prep_out_of(competition-15, existence-18)
prepc_without(survive-8, subsidizing-21)
conj_and(regulating-12, subsidizing-21)
poss(failures-23, their-22)
dobj(subsidizing-21, failures-23)

(ROOT
  (S (-LRB- -LRB-)
    (VP (VB AIG)
      (NP (NN anyone)))
    (. ?) (-RRB- -RRB-)))

root(ROOT-0, AIG-2)
dobj(AIG-2, anyone-3)

(ROOT
  (S (CC And)
    (PP (IN on)
      (NP (DT a)
        (ADJP (RB purely) (JJ practical))
        (NN note)))
    (NP (DT no) (NN policy) (NN change))
    (VP (VBZ is)
      (ADJP (JJ painless)))
    (. .)))

cc(painless-11, And-1)
det(note-6, a-3)
advmod(practical-5, purely-4)
amod(note-6, practical-5)
prep_on(painless-11, note-6)
det(change-9, no-7)
nn(change-9, policy-8)
nsubj(painless-11, change-9)
cop(painless-11, is-10)
root(ROOT-0, painless-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NN art))
      (PP (IN of)
        (NP (NN state) (NN craft))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN trade))
        (PP (IN of)
          (NP
            (NP (CD 2) (NNS units))
            (PP (IN of)
              (NP
                (NP (NN pain))
                (PP (IN for)
                  (NP
                    (NP (CD 1) (NN unit))
                    (PP (IN of)
                      (NP (NN pain)))))))))))
    (. .)))

det(art-2, The-1)
nsubj(trade-8, art-2)
nn(craft-5, state-4)
prep_of(art-2, craft-5)
cop(trade-8, is-6)
det(trade-8, the-7)
root(ROOT-0, trade-8)
num(units-11, 2-10)
prep_of(trade-8, units-11)
prep_of(units-11, pain-13)
num(unit-16, 1-15)
prep_for(pain-13, unit-16)
prep_of(unit-16, pain-18)

(ROOT
  (S
    (PP (VBN Given)
      (NP
        (NP (DT the) (JJ untold) (NNS billions))
        (PP (IN in)
          (NP
            (NP (JJ direct)
              (CC and)
              (JJ indirect) (NNS savings))
            (VP (VBN coupled)
              (PP (IN with)
                (NP
                  (NP (DT the) (VBN increased) (NN productivity))
                  (VP
                    (ADVP (RB unquestionably))
                    (VBN associated)
                    (PP (IN with)
                      (NP
                        (NP (DT the) (NN termination))
                        (PP (IN of)
                          (NP (DT the) (NN drug) (NN war)))))))))))))
    (, ,)
    (NP
      (NP (DT the) (NNS problems))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP describe)
            (SBAR (RB even) (IN if)
              (S
                (NP (PRP they))
                (ADVP (PRP themselves))
                (VP (VBD were)
                  (VP (VBN taken)
                    (ADVP (RB completely))
                    (PP (IN without)
                      (NP (NN argument)))))))))))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT a) (JJ paltry) (NN annoyance))
          (PP (VBN compared)
            (PP (TO to)
              (NP
                (NP (DT the) (JJ utter) (JJ human) (NN catastrophe) (NN drug) (NN policy))
                (SBAR
                  (S
                    (VP (VBZ is)
                      (PP (IN in)
                        (NP (NNP America) (NN today))))))))))))
    (. .)))

prep(annoyance-42, Given-1)
det(billions-4, the-2)
amod(billions-4, untold-3)
dep(Given-1, billions-4)
amod(savings-9, direct-6)
conj_and(direct-6, indirect-8)
amod(savings-9, indirect-8)
prep_in(billions-4, savings-9)
partmod(savings-9, coupled-10)
det(productivity-14, the-12)
amod(productivity-14, increased-13)
prep_with(coupled-10, productivity-14)
advmod(associated-16, unquestionably-15)
partmod(productivity-14, associated-16)
det(termination-19, the-18)
prep_with(associated-16, termination-19)
det(war-23, the-21)
nn(war-23, drug-22)
prep_of(termination-19, war-23)
det(problems-26, the-25)
nsubj(annoyance-42, problems-26)
nsubj(describe-28, you-27)
rcmod(problems-26, describe-28)
advmod(taken-34, even-29)
dep(taken-34, if-30)
nsubjpass(taken-34, they-31)
advmod(taken-34, themselves-32)
auxpass(taken-34, were-33)
ccomp(describe-28, taken-34)
advmod(taken-34, completely-35)
prep_without(taken-34, argument-37)
aux(annoyance-42, would-38)
cop(annoyance-42, be-39)
det(annoyance-42, a-40)
amod(annoyance-42, paltry-41)
root(ROOT-0, annoyance-42)
prepc_compared_to(annoyance-42, to-44)
det(policy-50, the-45)
amod(policy-50, utter-46)
amod(policy-50, human-47)
nn(policy-50, catastrophe-48)
nn(policy-50, drug-49)
pobj(annoyance-42, policy-50)
rcmod(policy-50, is-51)
nn(today-54, America-53)
prep_in(is-51, today-54)

(ROOT
  (S
    (ADVP (RB Indeed))
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (DT the) (NNS gains))
          (VP (MD would)
            (VP (VB be)
              (ADJP (RB so) (JJ excessive))
              (SBAR (IN that)
                (S
                  (NP (PRP they))
                  (VP (MD would)
                    (PP (IN in)
                      (NP (NN turn)))
                    (VP (VB pay)
                      (PP (IN for)
                        (NP
                          (NP (DT any) (NN sort))
                          (PP (IN of)
                            (NP (JJ short) (NNS comings))))))))))))))
    (. .)))

advmod(believe-3, Indeed-1)
nsubj(believe-3, I-2)
root(ROOT-0, believe-3)
det(gains-5, the-4)
nsubj(excessive-9, gains-5)
aux(excessive-9, would-6)
cop(excessive-9, be-7)
advmod(excessive-9, so-8)
ccomp(believe-3, excessive-9)
complm(pay-15, that-10)
nsubj(pay-15, they-11)
aux(pay-15, would-12)
prep_in(pay-15, turn-14)
ccomp(excessive-9, pay-15)
det(sort-18, any-17)
prep_for(pay-15, sort-18)
amod(comings-21, short-20)
prep_of(sort-18, comings-21)

(ROOT
  (SINV (CC But)
    (ADVP (RB really))
    (VP (VBP do)
      (NP (NNP NOT) (NN trust)))
    (NP (PRP me))
    (, ,)
    (S
      (VP (VB go)
        (NP (NN look))
        (PP (IN into)
          (NP (PRP it)))))
    (. .)))

cc(do-3, But-1)
advmod(do-3, really-2)
root(ROOT-0, do-3)
nn(trust-5, NOT-4)
dobj(do-3, trust-5)
nsubj(do-3, me-6)
ccomp(do-3, go-8)
dobj(go-8, look-9)
prep_into(go-8, it-11)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS mountains))
        (PP (IN of)
          (NP
            (NP (NNS studies))
            (PP (IN on)
              (NP (DT each) (NN subject)))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, mountains-3)
prep_of(mountains-3, studies-5)
det(subject-8, each-7)
prep_on(studies-5, subject-8)

(ROOT
  (PRN
    (S
      (NP (PRP I))
      (VP (VBP hope)
        (SBAR
          (S
            (NP (DT this))
            (VP (VBD was)
              (NP
                (NP (NN food))
                (PP (IN for)
                  (NP (NN thought))
                  (: :))))))))
    (-RRB- -RRB-)))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
nsubj(food-5, this-3)
cop(food-5, was-4)
ccomp(hope-2, food-5)
prep_for(food-5, thought-7)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NNS people))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP say)
            (ADVP (RB otherwise))))))
    (VP (VBP are)
      (NP
        (NP (DT the) (NN ignorant))
        (CC and)
        (NP (DT the) (JJ vested))))
    (. .) (. .)))

det(people-3, The-1)
amod(people-3, only-2)
nsubj(say-5, people-3)
nsubj(ignorant-9, people-3)
nsubj(vested-12, people-3)
rcmod(people-3, say-5)
advmod(say-5, otherwise-6)
cop(ignorant-9, are-7)
det(ignorant-9, the-8)
root(ROOT-0, ignorant-9)
det(vested-12, the-11)
conj_and(ignorant-9, vested-12)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB truly))
    (VP (VBZ is)
      (SBAR (IN that)
        (FRAG
          (NP (NN simple))
          (PP (VBN given)
            (NP (JJ current) (NNS circumstances)))
          (. .))))
    (. .)))

nsubj(is-3, It-1)
advmod(is-3, truly-2)
root(ROOT-0, is-3)
complm(simple-5, that-4)
dep(is-3, simple-5)
dep(simple-5, given-6)
amod(circumstances-8, current-7)
dep(given-6, circumstances-8)

(ROOT
  (S
    (NP (NNS Addicts))
    (ADVP (RB often))
    (VP (VBP commit)
      (NP (NN crime))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (VP (VBN barred)
              (NP (NN access))
              (PP (TO to)
                (NP (DT the) (NN job) (NN market))))))))
    (. .)))

nsubj(commit-3, Addicts-1)
advmod(commit-3, often-2)
root(ROOT-0, commit-3)
dobj(commit-3, crime-4)
mark(barred-8, because-5)
nsubjpass(barred-8, they-6)
auxpass(barred-8, are-7)
advcl(commit-3, barred-8)
dobj(barred-8, access-9)
det(market-13, the-11)
nn(market-13, job-12)
prep_to(barred-8, market-13)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP America)))
    (NP (PRP you))
    (ADVP (RB virtually))
    (VP (MD ca) (RB n't)
      (VP (VB get)
        (NP (DT a) (NN non) (NN wage) (NN slavery) (NN job))
        (PP (IN without)
          (S
            (VP (VBG peeing)
              (PP (IN in)
                (NP (DT a) (NN cup))))))))
    (. .)))

prep_in(get-7, America-2)
nsubj(get-7, you-3)
advmod(get-7, virtually-4)
aux(get-7, ca-5)
neg(get-7, n't-6)
root(ROOT-0, get-7)
det(job-12, a-8)
nn(job-12, non-9)
nn(job-12, wage-10)
nn(job-12, slavery-11)
dobj(get-7, job-12)
prepc_without(get-7, peeing-14)
det(cup-17, a-16)
prep_in(peeing-14, cup-17)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN community))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (NN drug) (NN possession))
              (CC and)
              (NP (NN therefor) (NN use)))
            (VP (VBZ is)
              (ADJP (JJ legal)))))))
    (, ,)
    (S
      (NP (NN drug) (NN testing))
      (VP (MD should)
        (VP (VB go)
          (PRT (RP down)))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBZ does)
            (NP
              (NP (DT the) (NN entry))
              (PP (IN of)
                (NP (JJ functional) (NNS addicts))))
            (PP (IN into)
              (NP (DT the) (NN market))))))
      (VP (MD will)
        (VP (VB occur))))
    (. .)))

det(community-3, a-2)
prep_in(go-16, community-3)
advmod(legal-11, where-4)
nn(possession-6, drug-5)
nsubj(legal-11, possession-6)
nn(use-9, therefor-8)
conj_and(possession-6, use-9)
nsubj(legal-11, use-9)
cop(legal-11, is-10)
rcmod(community-3, legal-11)
nn(testing-14, drug-13)
nsubj(go-16, testing-14)
aux(go-16, should-15)
root(ROOT-0, go-16)
prt(go-16, down-17)
mark(does-22, as-20)
nsubj(does-22, it-21)
csubj(occur-32, does-22)
det(entry-24, the-23)
dobj(does-22, entry-24)
amod(addicts-27, functional-26)
prep_of(entry-24, addicts-27)
det(market-30, the-29)
prep_into(does-22, market-30)
aux(occur-32, will-31)
conj_and(go-16, occur-32)

