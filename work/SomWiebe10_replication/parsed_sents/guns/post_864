(ROOT
  (S
    (S
      (NP (NNS people))
      (VP (VBP kill)
        (NP (NNS people))))
    (, ,)
    (CC but)
    (S
      (NP (NNS guns))
      (VP (VBP make)
        (S
          (NP (PRP it))
          (NP
            (NP (DT a) (NN heck))
            (PP (IN of)
              (ADJP
                (NP (DT a) (RB lot))
                (JJR easier)))))))
    (. .)))

nsubj(kill-2, people-1)
root(ROOT-0, kill-2)
dobj(kill-2, people-3)
nsubj(make-7, guns-6)
conj_but(kill-2, make-7)
nsubj(heck-10, it-8)
det(heck-10, a-9)
xcomp(make-7, heck-10)
det(lot-13, a-12)
npadvmod(easier-14, lot-13)
prep_of(heck-10, easier-14)

(ROOT
  (S
    (S
      (NP (FW i))
      (VP (VBP do) (RB not)
        (VP (VB think)
          (SBAR
            (S
              (NP (DT all) (NNS guns))
              (VP (MD should)
                (VP (VB be)
                  (VP (VBN banned)))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT some))
      (VP (MD should)))
    (. .)))

nsubj(think-4, i-1)
aux(think-4, do-2)
neg(think-4, not-3)
root(ROOT-0, think-4)
det(guns-6, all-5)
nsubjpass(banned-9, guns-6)
aux(banned-9, should-7)
auxpass(banned-9, be-8)
ccomp(think-4, banned-9)
nsubj(should-13, some-12)
conj_but(think-4, should-13)

(ROOT
  (S
    (SBAR (IN if)
      (S
        (S
          (NP (PRP you))
          (VP (VBP like)
            (PP (TO to)
              (NP (NN hunt)))))
        (, ,)
        (CC and)
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB kill)
                  (NP (DT a) (NNS deer)))))))))
    (, ,)
    (ADVP (RB then))
    (VP (VB go)
      (PP (IN out)
        (CC and)
        (IN by)
        (NP (DT a) (NN hunting) (NN rifle))))
    (. .)))

mark(like-3, if-1)
nsubj(like-3, you-2)
advcl(go-16, like-3)
prep_to(like-3, hunt-5)
nsubj(want-9, you-8)
xsubj(kill-11, you-8)
conj_and(like-3, want-9)
advcl(go-16, want-9)
aux(kill-11, to-10)
xcomp(want-9, kill-11)
det(deer-13, a-12)
dobj(kill-11, deer-13)
advmod(go-16, then-15)
root(ROOT-0, go-16)
conj_and(go-16, go-16')
det(rifle-22, a-20)
nn(rifle-22, hunting-21)
prep_by(go-16', rifle-22)
prep_out(go-16, rifle-22)

(ROOT
  (S
    (ADVP (RB however))
    (, ,)
    (NP (JJ certain) (NNS guns))
    (VP (VBP are)
      (NP
        (NP (NN overkill))
        (PP (JJ such) (IN as)
          (NP (NNP AK-47) (POS 's)))))
    (. .)))

advmod(overkill-6, however-1)
amod(guns-4, certain-3)
nsubj(overkill-6, guns-4)
cop(overkill-6, are-5)
root(ROOT-0, overkill-6)
prep_such_as(overkill-6, AK-47-9)
possessive(AK-47-9, 's-10)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP do) (RB not)
      (VP (VB think)
        (S
          (NP (PRP you))
          (VP (VB need)
            (S
              (NP (DT a) (NN machine) (NN gun))
              (VP (TO to)
                (VP (VB kill)
                  (NP (DT a) (NNS deer)))))))))
    (. .)))

nsubj(think-4, i-1)
aux(think-4, do-2)
neg(think-4, not-3)
root(ROOT-0, think-4)
nsubj(need-6, you-5)
ccomp(think-4, need-6)
det(gun-9, a-7)
nn(gun-9, machine-8)
nsubj(kill-11, gun-9)
aux(kill-11, to-10)
xcomp(need-6, kill-11)
det(deer-13, a-12)
dobj(kill-11, deer-13)

(ROOT
  (S
    (S
      (NP (PRP you))
      (VP (MD may)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (NNS guns))
              (VP (MD could)
                (VP (VB be)
                  (VP (VBN used)
                    (PP (IN for)
                      (NP (JJ personal) (NN protection)))))))))))
    (, ,)
    (ADVP (RB however))
    (S
      (NP (FW i))
      (VP (VBP think)
        (S
          (VP (VBG buying)
            (NP
              (NP (DT a) (NN gun))
              (SBAR
                (WHPP (IN for)
                  (WHNP (WDT that)))
                (S
                  (NP (NN reason))
                  (VP (VBZ is)
                    (ADJP (JJ stupid)
                      (CC and)
                      (JJ paranoid))
                    (SBAR (IN because)
                      (S
                        (NP (EX there))
                        (VP (VBP are)
                          (ADVP (RB so))
                          (NP
                            (NP (JJ many) (JJ other) (NNS things))
                            (SBAR
                              (S
                                (NP (PRP you))
                                (VP (MD can)
                                  (VP (VB do)
                                    (PP (IN before)
                                      (S
                                        (VP (VBG resorting)
                                          (PP (TO to)
                                            (NP
                                              (NP (DT a) (NN gun))
                                              (PP (IN for)
                                                (NP (NN protection))))))))))))))))))))))))
    (. .)))

nsubj(say-3, you-1)
aux(say-3, may-2)
root(ROOT-0, say-3)
complm(used-8, that-4)
nsubjpass(used-8, guns-5)
aux(used-8, could-6)
auxpass(used-8, be-7)
ccomp(say-3, used-8)
amod(protection-11, personal-10)
prep_for(used-8, protection-11)
advmod(say-3, however-13)
nsubj(think-15, i-14)
ccomp(say-3, think-15)
xcomp(think-15, buying-16)
det(gun-18, a-17)
dobj(buying-16, gun-18)
rel(stupid-23, that-20)
nsubj(stupid-23, reason-21)
nsubj(paranoid-25, reason-21)
cop(stupid-23, is-22)
rcmod(gun-18, stupid-23)
rcmod(gun-18, paranoid-25)
conj_and(stupid-23, paranoid-25)
mark(are-28, because-26)
expl(are-28, there-27)
advcl(stupid-23, are-28)
advmod(are-28, so-29)
amod(things-32, many-30)
amod(things-32, other-31)
nsubj(are-28, things-32)
dobj(do-35, things-32)
nsubj(do-35, you-33)
aux(do-35, can-34)
rcmod(things-32, do-35)
prepc_before(do-35, resorting-37)
det(gun-40, a-39)
prep_to(resorting-37, gun-40)
prep_for(gun-40, protection-42)

(ROOT
  (S
    (NP (PRP you))
    (VP (MD could)
      (VP (VB move)
        (PP
          (PP (TO to)
            (NP
              (NP (DT a) (NN place))
              (PP (IN with)
                (NP (DT a) (JJR lower) (NN crime) (NN rate)))))
          (, ,)
          (CC or)
          (PP (IN by)
            (NP (DT a) (JJ taser) (JJ \/) (NN pepper) (NN spray))))))
    (. .)))

nsubj(move-3, you-1)
nsubj(move-3', you-1)
aux(move-3, could-2)
root(ROOT-0, move-3)
conj_or(move-3, move-3')
det(place-6, a-5)
prep_to(move-3, place-6)
det(rate-11, a-8)
amod(rate-11, lower-9)
nn(rate-11, crime-10)
prep_with(place-6, rate-11)
det(spray-19, a-15)
amod(spray-19, taser-16)
amod(spray-19, \/-17)
nn(spray-19, pepper-18)
prep_by(move-3', spray-19)

(ROOT
  (S
    (S
      (NP (PRP you))
      (VP (MD could)
        (VP (VB get)
          (NP (DT a) (NN guard) (NN dog)))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (JJ main) (NN idea))
      (VP (VBZ is)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (JJ little) (NN purpose))
                  (PP (IN for)
                    (NP
                      (NP (NNS guns))
                      (PP (JJ other) (IN than)
                        (NP
                          (NP (PRP$ their) (NN use))
                          (PP (IN for)
                            (NP (VBG killing)))))))))))
          (, ,)
          (CC and)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (SBAR
                  (WHADVP (WRB why))
                  (S
                    (NP (FW i))
                    (VP (VBP am)
                      (PP (IN against)
                        (NP (NN gun) (NNS rights))))))))))))
    (. .)))

nsubj(get-3, you-1)
aux(get-3, could-2)
root(ROOT-0, get-3)
det(dog-6, a-4)
nn(dog-6, guard-5)
dobj(get-3, dog-6)
det(idea-11, the-9)
amod(idea-11, main-10)
nsubj(is-12, idea-11)
conj_but(get-3, is-12)
complm(is-15, that-13)
expl(is-15, there-14)
ccomp(is-12, is-15)
amod(purpose-17, little-16)
nsubj(is-15, purpose-17)
prep_for(purpose-17, guns-19)
dep(guns-19, other-20)
poss(use-23, their-22)
prep_than(guns-19, use-23)
prep_for(use-23, killing-25)
nsubj(is-29, that-28)
ccomp(is-12, is-29)
conj_and(is-15, is-29)
advmod(am-32, why-30)
nsubj(am-32, i-31)
advcl(is-29, am-32)
nn(rights-35, gun-34)
prep_against(am-32, rights-35)

