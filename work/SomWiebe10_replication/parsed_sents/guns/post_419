(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT the) (VBG underlying) (NNS problems))
          (VP (VBZ is) (RB not)
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBP are)
                  (ADVP (RB too))
                  (NP (JJ many) (NNS guns))
                  (, ,)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (JJ other) (NN hand))
                      (SBAR
                        (S
                          (NP (EX there))
                          (VP (VBP are)
                            (NP
                              (ADJP (RB too) (JJ many))
                              (NNS criminals))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
det(problems-5, the-3)
amod(problems-5, underlying-4)
nsubj(is-6, problems-5)
ccomp(think-2, is-6)
neg(is-6, not-7)
complm(are-10, that-8)
expl(are-10, there-9)
ccomp(is-6, are-10)
advmod(are-10, too-11)
amod(guns-13, many-12)
nsubj(are-10, guns-13)
det(hand-18, the-16)
amod(hand-18, other-17)
prep_on(are-10, hand-18)
expl(are-20, there-19)
rcmod(hand-18, are-20)
advmod(many-22, too-21)
amod(criminals-23, many-22)
nsubj(are-20, criminals-23)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB blame)
            (NP (DT an) (JJ inanimate) (NN object))
            (PP (IN for)
              (NP
                (NP (DT the) (JJ obvious) (NN failure))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN parenting) (NNS skills))
                    (PP (IN of)
                      (NP
                        (NP (DT a) (JJ large) (NN part))
                        (PP (IN of)
                          (NP (DT the) (NN population)))))))))))))
    (. .)))

nsubj(want-2, We-1)
xsubj(blame-4, We-1)
root(ROOT-0, want-2)
aux(blame-4, to-3)
xcomp(want-2, blame-4)
det(object-7, an-5)
amod(object-7, inanimate-6)
dobj(blame-4, object-7)
det(failure-11, the-9)
amod(failure-11, obvious-10)
prep_for(blame-4, failure-11)
det(skills-15, the-13)
nn(skills-15, parenting-14)
prep_of(failure-11, skills-15)
det(part-19, a-17)
amod(part-19, large-18)
prep_of(skills-15, part-19)
det(population-22, the-21)
prep_of(part-19, population-22)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP
        (VP (VB blame)
          (NP (NNS guns)))
        (, ,)
        (VP (VB look)
          (PP (IN in)
            (NP (DT the) (NN mirror))))))
    (. .)))

aux(blame-3, Do-1)
neg(blame-3, n't-2)
root(ROOT-0, blame-3)
dobj(blame-3, guns-4)
dep(blame-3, look-6)
det(mirror-9, the-8)
prep_in(look-6, mirror-9)

(ROOT
  (S
    (NP (PRP$ Your) (NN child))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP I))
          (VP (MD must)
            (VP (VB carry)
              (NP (DT a) (NN gun)
                (S
                  (VP (TO to)
                    (VP (VB protect)
                      (NP
                        (NP (PRP$ my) (NN life))
                        (CC and)
                        (NP
                          (NP (DT the) (NN safety))
                          (PP (IN of)
                            (NP (PRP$ my) (NN loved) (NNS ones))))))))))))))))

poss(child-2, Your-1)
nsubj(is-3, child-2)
root(ROOT-0, is-3)
advmod(carry-7, why-4)
nsubj(carry-7, I-5)
aux(carry-7, must-6)
advcl(is-3, carry-7)
det(gun-9, a-8)
dobj(carry-7, gun-9)
aux(protect-11, to-10)
infmod(gun-9, protect-11)
poss(life-13, my-12)
dobj(protect-11, life-13)
det(safety-16, the-15)
dobj(protect-11, safety-16)
conj_and(life-13, safety-16)
poss(ones-20, my-18)
nn(ones-20, loved-19)
prep_of(safety-16, ones-20)

(ROOT
  (S
    (S
      (NP (NNS Lets))
      (VP (VBP start)
        (PP (IN at)
          (NP
            (NP (DT the) (NN root))
            (PP (IN of)
              (NP (DT the) (NN problem)))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP are)
      (VP (VBG raising)
        (NP (PRP$ our) (NNS children))
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (NNS criminals)))))))
    (. .)))

nsubj(start-2, Lets-1)
ccomp(raising-12, start-2)
det(root-5, the-4)
prep_at(start-2, root-5)
det(problem-8, the-7)
prep_of(root-5, problem-8)
nsubj(raising-12, we-10)
aux(raising-12, are-11)
root(ROOT-0, raising-12)
poss(children-14, our-13)
dobj(raising-12, children-14)
aux(criminals-17, to-15)
cop(criminals-17, be-16)
xcomp(raising-12, criminals-17)

(ROOT
  (NP
    (NP (NNS Criminals))
    (NP
      (NP (DT that) (NN steal) (, ,) (NN rob)
        (CC and)
        (NN rape))
      (CC and)
      (NP (NN murder)))
    (. .)))

root(ROOT-0, Criminals-1)
det(steal-3, that-2)
dep(Criminals-1, steal-3)
dep(Criminals-1, rob-5)
conj_and(steal-3, rob-5)
dep(Criminals-1, rape-7)
conj_and(steal-3, rape-7)
dep(Criminals-1, murder-9)
conj_and(steal-3, murder-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT these) (NNS people))
        (VP (VBD were)
          (VP (VBN raised)
            (PP (TO to)
              (NP
                (NP (NN value) (JJ human) (NN life))
                (, ,)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD were)
                      (VP (VBN raised)
                        (S
                          (VP (TO to)
                            (VP (VB KNOW)
                              (NP
                                (NP (DT the) (NN difference))
                                (PP (IN between)
                                  (ADJP (JJ right)
                                    (CC and)
                                    (JJ wrong))))
                              (, ,)
                              (S
                                (VP (TO to)
                                  (VP (VB stay)
                                    (PRT (RP away))
                                    (PP (IN from)
                                      (NP
                                        (NP (DT those))
                                        (SBAR
                                          (WHNP (WP who))
                                          (S
                                            (VP
                                              (VP (VBP do) (RB not))
                                              (, ,)
                                              (CC and)
                                              (VP (VBD raised)
                                                (NP (PRP$ their) (NNS voices))
                                                (SBAR
                                                  (WHADVP (WRB when))
                                                  (S
                                                    (NP (PRP they))
                                                    (VP (VBD saw)
                                                      (NP
                                                        (NP (DT the) (NN law))
                                                        (VP (VBG being)
                                                          (VP (VBN broken)))))))))))))))))))))))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP we))
    (VP (MD would) (RB not)
      (VP (VB have)
        (NP (DT the) (NN need)
          (S
            (VP (TO to)
              (VP (VB carry)
                (NP (NNS guns))))))))
    (. .)))

mark(raised-5, If-1)
det(people-3, these-2)
nsubjpass(raised-5, people-3)
auxpass(raised-5, were-4)
advcl(have-48, raised-5)
nn(life-9, value-7)
amod(life-9, human-8)
prep_to(raised-5, life-9)
nsubjpass(raised-13, life-9)
auxpass(raised-13, were-12)
rcmod(life-9, raised-13)
aux(KNOW-15, to-14)
xcomp(raised-13, KNOW-15)
det(difference-17, the-16)
dobj(KNOW-15, difference-17)
prep_between(difference-17, right-19)
prep_between(difference-17, wrong-21)
conj_and(right-19, wrong-21)
aux(stay-24, to-23)
xcomp(KNOW-15, stay-24)
prep_away_from(stay-24, those-27)
nsubj(do-29, those-27)
nsubj(raised-33, those-27)
rcmod(those-27, do-29)
neg(do-29, not-30)
rcmod(those-27, raised-33)
conj_and(do-29, raised-33)
poss(voices-35, their-34)
dobj(raised-33, voices-35)
advmod(saw-38, when-36)
nsubj(saw-38, they-37)
advcl(raised-33, saw-38)
det(law-40, the-39)
dobj(saw-38, law-40)
auxpass(broken-42, being-41)
partmod(law-40, broken-42)
advmod(have-48, then-44)
nsubj(have-48, we-45)
aux(have-48, would-46)
neg(have-48, not-47)
root(ROOT-0, have-48)
det(need-50, the-49)
dobj(have-48, need-50)
aux(carry-52, to-51)
infmod(need-50, carry-52)
dobj(carry-52, guns-53)

(ROOT
  (NP
    (NP
      (NP (PRP$ Its)
        (ADJP (RB not) (DT the))
        (NNS guns))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD should)
            (VP (VB be)
              (VP (VBN regulated)
                (NP
                  (NP (PRP$ its)
                    (NP
                      (NP (DT the) (NN parenting) (NNS skills))
                      (PP (IN of)
                        (NP (NNS people)))))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP do) (RB not)
                        (VP (VB get))))))))))))
    (VP (VBN involved)
      (PP (IN in)
        (NP
          (NP (PRP$ their) (NNS children) (POS 's))
          (NNS lives))))
    (. .)))

poss(guns-4, Its-1)
neg(the-3, not-2)
amod(guns-4, the-3)
root(ROOT-0, guns-4)
nsubjpass(regulated-8, guns-4)
aux(regulated-8, should-6)
auxpass(regulated-8, be-7)
rcmod(guns-4, regulated-8)
poss(skills-12, its-9)
det(skills-12, the-10)
nn(skills-12, parenting-11)
dobj(regulated-8, skills-12)
nsubj(get-18, skills-12)
prep_of(skills-12, people-14)
aux(get-18, do-16)
neg(get-18, not-17)
rcmod(skills-12, get-18)
partmod(guns-4, involved-19)
poss(children-22, their-21)
poss(lives-24, children-22)
prep_in(involved-19, lives-24)

(ROOT
  (S
    (NP (DT These) (NNS kids))
    (VP (VBP run)
      (NP
        (NP (DT the) (NNS streets))
        (PP (VBG following)
          (NP (DT the) (NNS gangs)))
        (, ,)
        (VP (VBG listening)
          (PP (TO to)
            (NP
              (NP (NN music))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ glorifies)
                    (NP
                      (NP (DT the) (NNS types))
                      (PP (IN of)
                        (NP
                          (NP (NNS behaviors))
                          (SBAR (IN that)
                            (S
                              (NP (PRP we))
                              (PP (IN as)
                                (NP (DT a) (NN society) (NN abhor))))))))))))))))
    (. .)))

det(kids-2, These-1)
nsubj(run-3, kids-2)
root(ROOT-0, run-3)
det(streets-5, the-4)
dobj(run-3, streets-5)
det(gangs-8, the-7)
prep_following(streets-5, gangs-8)
partmod(streets-5, listening-10)
prep_to(listening-10, music-12)
nsubj(glorifies-14, music-12)
rcmod(music-12, glorifies-14)
det(types-16, the-15)
dobj(glorifies-14, types-16)
prep_of(types-16, behaviors-18)
complm(we-20, that-19)
dep(behaviors-18, we-20)
dep(we-20, as-21)
det(abhor-24, a-22)
nn(abhor-24, society-23)
pobj(as-21, abhor-24)

(ROOT
  (S (CC And)
    (NP (PRP we))
    (VP (VBP question)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP they))
          (VP (VBD wound)
            (PRT (RP up))
            (ADJP (JJ dead))
            (PP (IN in)
              (NP
                (NP (NN front))
                (PP (IN of)
                  (NP (DT a) (NN liquor) (NN store)))))))))
    (. .)))

cc(question-3, And-1)
nsubj(question-3, we-2)
root(ROOT-0, question-3)
advmod(wound-6, why-4)
nsubj(wound-6, they-5)
advcl(question-3, wound-6)
prt(wound-6, up-7)
acomp(wound-6, dead-8)
det(store-14, a-12)
nn(store-14, liquor-13)
prep_in_front_of(wound-6, store-14)

(ROOT
  (SQ (VBD Was)
    (NP (PRP it))
    (NP (DT a) (NN gun))
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBD killed)
          (NP (PRP$ your) (JJ teen) (NN son)))))
    (. ?)))

cop(gun-4, Was-1)
nsubj(gun-4, it-2)
det(gun-4, a-3)
root(ROOT-0, gun-4)
nsubj(killed-6, that-5)
dep(gun-4, killed-6)
poss(son-9, your-7)
amod(son-9, teen-8)
dobj(killed-6, son-9)

(ROOT
  (INTJ (UH NO) (. !)))

root(ROOT-0, NO-1)

(ROOT
  (S
    (NP (PRP IT))
    (VP (VBD WAS)
      (NP (PRP YOU)))
    (. !)))

nsubj(YOU-3, IT-1)
cop(YOU-3, WAS-2)
root(ROOT-0, YOU-3)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD had)
        (NP (DT the) (NN responsibility)
          (S
            (VP (TO to)
              (VP (VB raise)
                (S
                  (NP (PRP him))
                  (VP (TO to)
                    (VP (VB be)
                      (NP (DT an) (JJ upright) (JJ young) (NN man)))))))))))
    (CC and)
    (S
      (NP (PRP YOU))
      (VP (VBD FAILED)))
    (. !)))

nsubj(had-2, You-1)
root(ROOT-0, had-2)
det(responsibility-4, the-3)
dobj(had-2, responsibility-4)
aux(raise-6, to-5)
infmod(responsibility-4, raise-6)
nsubj(man-13, him-7)
aux(man-13, to-8)
cop(man-13, be-9)
det(man-13, an-10)
amod(man-13, upright-11)
amod(man-13, young-12)
xcomp(raise-6, man-13)
nsubj(FAILED-16, YOU-15)
conj_and(had-2, FAILED-16)

