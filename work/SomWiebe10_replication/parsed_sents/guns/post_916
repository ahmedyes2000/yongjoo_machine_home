(ROOT
  (S
    (S
      (SBAR
        (PRN (-LRB- -LRB-)
          (NP (NN event))
          (-RRB- -RRB-))
        (S
          (NP
            (NP (DT The) (NN society))
            (PP (IN with)
              (NP (DT no) (NNS guns))))
          (VP (VBZ has)
            (NP
              (NP (CD five) (NNS members))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP buy)
                    (NP (NNS guns))
                    (PP (IN from)
                      (NP (DT the) (JJ black) (NN market))))))))))
      (, ,)
      (NP (PRP they))
      (VP
        (VP (VB take)
          (PRT (RP over))
          (NP (DT the) (NN society)))
        (CC and)
        (VP (VB create)
          (NP (DT a) (NN dictatorship))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (NNS men))
              (VP (VBP are)
                (VP (VBN forced)
                  (PP (IN into)
                    (NP (NN slave) (NN labor) (NNS camps))))))))))
    (CC and)
    (S
      (NP (DT the) (NNS women))
      (VP (VBP are)
        (VP (VBN sold)
          (PP (IN as)
            (NP (NN sex) (NNS slaves))))))
    (. .)))

dep(has-9, event-2)
det(society-5, The-4)
nsubj(has-9, society-5)
det(guns-8, no-7)
prep_with(society-5, guns-8)
dep(take-21, has-9)
num(members-11, five-10)
dobj(has-9, members-11)
nsubj(buy-13, members-11)
rcmod(members-11, buy-13)
dobj(buy-13, guns-14)
det(market-18, the-16)
amod(market-18, black-17)
prep_from(buy-13, market-18)
nsubj(take-21, they-20)
nsubj(create-26, they-20)
root(ROOT-0, take-21)
prt(take-21, over-22)
det(society-24, the-23)
dobj(take-21, society-24)
conj_and(take-21, create-26)
det(dictatorship-28, a-27)
dobj(create-26, dictatorship-28)
advmod(forced-33, where-29)
det(men-31, the-30)
nsubjpass(forced-33, men-31)
auxpass(forced-33, are-32)
advcl(create-26, forced-33)
nn(camps-37, slave-35)
nn(camps-37, labor-36)
prep_into(forced-33, camps-37)
det(women-40, the-39)
nsubjpass(sold-42, women-40)
auxpass(sold-42, are-41)
conj_and(take-21, sold-42)
nn(slaves-45, sex-44)
prep_as(sold-42, slaves-45)

(ROOT
  (S
    (S
      (ADVP (RB Meanwhile))
      (NP (DT the) (JJ other) (NN society))
      (VP (VBZ is)
        (ADJP (JJ fine)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP have)
                (VP (VBN had)
                  (NP (DT a) (JJ few) (NNS disputes))
                  (PP (IN with)
                    (NP
                      (NP (DT a) (JJ bad) (NN apple))
                      (CC or)
                      (NP (CD two)))))))))))
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD were) (DT both)
        (VP (VBN resolved)
          (PP (IN without)
            (NP
              (NP (DT the) (NN collapse))
              (PP (IN of)
                (NP (DT the) (NN society))))))))
    (. .)))

advmod(fine-6, Meanwhile-1)
det(society-4, the-2)
amod(society-4, other-3)
nsubj(fine-6, society-4)
cop(fine-6, is-5)
root(ROOT-0, fine-6)
nsubj(had-9, they-7)
aux(had-9, have-8)
dep(fine-6, had-9)
det(disputes-12, a-10)
amod(disputes-12, few-11)
dobj(had-9, disputes-12)
det(apple-16, a-14)
amod(apple-16, bad-15)
prep_with(had-9, apple-16)
prep_with(had-9, two-18)
conj_or(apple-16, two-18)
nsubjpass(resolved-23, they-20)
auxpass(resolved-23, were-21)
dep(resolved-23, both-22)
conj_but(fine-6, resolved-23)
det(collapse-26, the-25)
prep_without(resolved-23, collapse-26)
det(society-29, the-28)
prep_of(collapse-26, society-29)

(ROOT
  (S
    (NP
      (NP (-LRB- -LRB-) (JJ \/) (NN event) (-RRB- -RRB-))
      (VP (VBG coming)
        (ADVP (RB back)
          (PP (TO to)
            (NP (DT the) (NN planet) (NN earth))))
        (NP (PRP you))))
    (VP (MD must)
      (ADVP (RB first))
      (VP (VB accept)
        (SBAR (IN that)
          (S
            (NP (NNS guns))
            (VP (VBP exist))))))
    (. .)))

amod(event-3, \/-2)
nsubj(accept-14, event-3)
partmod(event-3, coming-5)
advmod(coming-5, back-6)
det(earth-10, the-8)
nn(earth-10, planet-9)
prep_to(back-6, earth-10)
dobj(coming-5, you-11)
aux(accept-14, must-12)
advmod(accept-14, first-13)
root(ROOT-0, accept-14)
complm(exist-17, that-15)
nsubj(exist-17, guns-16)
ccomp(accept-14, exist-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP ban)
          (NP (PRP them)))))
    (NP (EX there))
    (VP (MD will)
      (ADVP (RB still))
      (VP (VB be)
        (NP (DT a) (JJ black) (NN market))
        (, ,)
        (SBAR
          (ADVP (DT no) (NN matter))
          (IN if)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (VP (VBN smuggled)
                (CC or)
                (VBN made)
                (ADVP (RB domestically))))))))
    (. .)))

mark(ban-3, If-1)
nsubj(ban-3, you-2)
advcl(market-11, ban-3)
dobj(ban-3, them-4)
expl(market-11, there-5)
aux(market-11, will-6)
advmod(market-11, still-7)
cop(market-11, be-8)
det(market-11, a-9)
amod(market-11, black-10)
root(ROOT-0, market-11)
dep(matter-14, no-13)
advmod(smuggled-18, matter-14)
dep(smuggled-18, if-15)
nsubjpass(smuggled-18, they-16)
nsubjpass(made-20, they-16)
auxpass(smuggled-18, are-17)
dep(market-11, smuggled-18)
dep(market-11, made-20)
conj_or(smuggled-18, made-20)
advmod(smuggled-18, domestically-21)

(ROOT
  (S (IN So)
    (NP (DT the) (JJS best) (NN solution))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB regulate)
            (CC and)
            (VB make)
            (NP (JJ sure) (NN law))
            (S
              (VP (VBG abiding)
                (SBAR
                  (S
                    (NP (NNS citizens))
                    (VP (MD can)
                      (VP (VB buy)
                        (NP (NNS guns))))))))))))
    (. .)))

dep(is-5, So-1)
det(solution-4, the-2)
amod(solution-4, best-3)
nsubj(is-5, solution-4)
xsubj(regulate-7, solution-4)
root(ROOT-0, is-5)
aux(regulate-7, to-6)
xcomp(is-5, regulate-7)
xcomp(is-5, make-9)
conj_and(regulate-7, make-9)
amod(law-11, sure-10)
dobj(regulate-7, law-11)
xcomp(regulate-7, abiding-12)
nsubj(buy-15, citizens-13)
aux(buy-15, can-14)
ccomp(abiding-12, buy-15)
dobj(buy-15, guns-16)

