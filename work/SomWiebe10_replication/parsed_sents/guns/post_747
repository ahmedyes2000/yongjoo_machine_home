(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (JJ grand) (NN scheme))
        (PP (IN of)
          (NP
            (NP (NNS things))
            (VP (VBZ does))))))
    (NP (PRP it))
    (ADVP (RB really))
    (VP (VBP matter))
    (. ?)))

det(scheme-4, the-2)
amod(scheme-4, grand-3)
prep_in(matter-10, scheme-4)
prep_of(scheme-4, things-6)
dep(things-6, does-7)
nsubj(matter-10, it-8)
advmod(matter-10, really-9)
root(ROOT-0, matter-10)

(ROOT
  (S
    (FRAG
      (S
        (NP (PRP I))
        (VP (VBP mean))))
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (NN someone))
          (VP (VBZ wants)
            (S
              (VP (TO to)
                (VP (VB carry)
                  (NP (CD one) (NNS concealed))))))))
      (NP (PRP they))
      (VP (MD will)))
    (, ,)
    (FRAG
      (NP (NN permit))
      (CC or)
      (RB not))
    (. .)))

nsubj(mean-2, I-1)
dep(will-12, mean-2)
mark(wants-6, if-4)
nsubj(wants-6, someone-5)
xsubj(carry-8, someone-5)
advcl(will-12, wants-6)
aux(carry-8, to-7)
xcomp(wants-6, carry-8)
num(concealed-10, one-9)
dobj(carry-8, concealed-10)
nsubj(will-12, they-11)
root(ROOT-0, will-12)
dep(will-12, permit-14)
dep(permit-14, or-15)
neg(permit-14, not-16)

(ROOT
  (S (RB Then)
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT the) (JJ other) (NN point)))
    (. .)))

advmod(is-3, Then-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
det(point-6, the-4)
amod(point-6, other-5)
nsubj(is-3, point-6)

(ROOT
  (S
    (SBAR (IN In) (NN order)
      (S
        (VP (TO to)
          (VP (VB get)
            (NP (DT a) (NN permit))))))
    (, ,)
    (NP (DT the) (JJ first) (NN requirement))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN person))
          (VP (VB be)
            (NP (CD 21))))))
    (. .)))

mark(get-4, In-1)
dep(get-4, order-2)
aux(get-4, to-3)
dep(is-11, get-4)
det(permit-6, a-5)
dobj(get-4, permit-6)
det(requirement-10, the-8)
amod(requirement-10, first-9)
nsubj(is-11, requirement-10)
root(ROOT-0, is-11)
complm(21-16, that-12)
det(person-14, the-13)
nsubj(21-16, person-14)
cop(21-16, be-15)
ccomp(is-11, 21-16)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBP am) (RB not)
            (NP
              (NP (JJ mistaken) (NNS people))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (UCP
                      (NP (CD 21))
                      (CC and)
                      (SBAR (IN in)
                        (S
                          (NP (NN college))
                          (VP (VBP are)
                            (ADVP (RB pretty)
                              (NP (RB much) (DT a) (NN minority)
                                (QP (CC and)
                                  (RB about))))
                            (ADJP (JJ ready)
                              (S
                                (VP (TO to)
                                  (VP (VB graduate)
                                    (NP (NNS anyways)))))))))))))))))
      (, ,)
      (NP (DT the) (NN majority))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT the) (NNS ones))
            (PP (IN under)
              (NP (CD 21)))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD can) (RB not)
        (VP (VB get)
          (S
            (NP (DT a) (NN carry))
            (VP (VB conceal)
              (S
                (VP (TO to)
                  (VP (VB begin)
                    (PP (IN with))))))))))
    (. .)))

advmod(ones-32, Now-1)
mark(people-8, if-3)
nsubj(people-8, I-4)
cop(people-8, am-5)
neg(people-8, not-6)
amod(people-8, mistaken-7)
nsubj(21-11, people-8)
advcl(ones-32, people-8)
cop(21-11, are-10)
rcmod(people-8, 21-11)
mark(ready-22, in-13)
nsubj(ready-22, college-14)
cop(ready-22, are-15)
advmod(ready-22, pretty-16)
advmod(minority-19, much-17)
det(minority-19, a-18)
pobj(pretty-16, minority-19)
cc(about-21, and-20)
num(minority-19, about-21)
rcmod(people-8, ready-22)
conj_and(21-11, ready-22)
aux(graduate-24, to-23)
xcomp(ready-22, graduate-24)
dobj(graduate-24, anyways-25)
det(majority-28, the-27)
nsubj(ones-32, majority-28)
aux(ones-32, would-29)
cop(ones-32, be-30)
det(ones-32, the-31)
root(ROOT-0, ones-32)
prep_under(ones-32, 21-34)
nsubj(get-39, they-36)
aux(get-39, can-37)
neg(get-39, not-38)
conj_and(ones-32, get-39)
det(carry-41, a-40)
nsubj(conceal-42, carry-41)
xsubj(begin-44, carry-41)
ccomp(get-39, conceal-42)
aux(begin-44, to-43)
xcomp(conceal-42, begin-44)
prep(begin-44, with-45)

(ROOT
  (S (RB So)
    (S
      (VP (VBG allowing)
        (NP (NNS students))
        (S
          (VP (TO to)
            (VP (VB carry)
              (VP (VB conceal)
                (PP (IN on)
                  (NP (NN campus)))))))))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (RB relatively) (DT a)
            (ADJP (RB very) (JJ small))
            (NN number))
          (PP (IN in)
            (NP (NN consideration))))
        (PP (TO to)
          (NP (DT the) (JJ entire) (NN student) (NN population)))))
    (. .)))

advmod(number-15, So-1)
csubj(number-15, allowing-2)
dobj(allowing-2, students-3)
aux(carry-5, to-4)
xcomp(allowing-2, carry-5)
dep(carry-5, conceal-6)
prep_on(conceal-6, campus-8)
aux(number-15, would-9)
cop(number-15, be-10)
advmod(number-15, relatively-11)
det(number-15, a-12)
advmod(small-14, very-13)
amod(number-15, small-14)
root(ROOT-0, number-15)
prep_in(number-15, consideration-17)
det(population-22, the-19)
amod(population-22, entire-20)
nn(population-22, student-21)
prep_to(number-15, population-22)

(ROOT
  (S
    (PP (RB Just) (IN like)
      (S
        (VP (VBG getting)
          (NP (DT a) (NN gun)
            (S
              (VP (TO to)
                (VP (VB begin)
                  (PP (IN with)))))))))
    (, ,)
    (S
      (NP (DT the) (NNS laws))
      (VP (VBP mean)
        (NP (NN nothing))
        (PP (TO to)
          (NP (DT a) (NN criminal)))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD will)
        (VP (VB carry)
          (PP
            (ADVP
              (NP (CD one))
              (RB regardless))
            (IN of)
            (NP
              (NP (DT any) (NN law))
              (PP (IN on)
                (NP (DT the) (NNS books))))))))
    (. .)))

advmod(mean-12, Just-1)
advcl(mean-12, like-2)
prepc_like(mean-12, getting-3)
det(gun-5, a-4)
dobj(getting-3, gun-5)
aux(begin-7, to-6)
infmod(gun-5, begin-7)
prep(begin-7, with-8)
det(laws-11, the-10)
nsubj(mean-12, laws-11)
root(ROOT-0, mean-12)
dobj(mean-12, nothing-13)
det(criminal-16, a-15)
prep_to(mean-12, criminal-16)
nsubj(carry-20, they-18)
aux(carry-20, will-19)
conj_and(mean-12, carry-20)
npadvmod(carry-20, one-21)
det(law-25, any-24)
prep_regardless_of(carry-20, law-25)
det(books-28, the-27)
prep_on(law-25, books-28)

(ROOT
  (S
    (NP
      (NP (PRP$ Its)
        (ADJP
          (NP (DT the) (NN law))
          (JJ abiding))
        (NNS citizens))
      (VP
        (ADVP
          (NP (DT that) (NN end))
          (RB up))
        (VBG getting)))
    (VP
      (VP (VBZ screwed))
      (, ,)
      (CC or)
      (VP (VBD killed)
        (SBAR (IN because)
          (S
            (NP (PRP they))
            (VP (MD could) (RB not)
              (VP (VB defend)
                (NP (PRP themselves))
                (PP (IN against)
                  (NP
                    (NP (DT the) (NN criminal))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD could)
                          (VP (VB care)
                            (NP (JJR less))))))))))))))
    (. .)))

poss(citizens-5, Its-1)
det(law-3, the-2)
npadvmod(abiding-4, law-3)
amod(citizens-5, abiding-4)
nsubj(screwed-10, citizens-5)
nsubj(killed-13, citizens-5)
det(end-7, that-6)
npadvmod(up-8, end-7)
advmod(getting-9, up-8)
partmod(citizens-5, getting-9)
root(ROOT-0, screwed-10)
conj_or(screwed-10, killed-13)
mark(defend-18, because-14)
nsubj(defend-18, they-15)
aux(defend-18, could-16)
neg(defend-18, not-17)
advcl(killed-13, defend-18)
dobj(defend-18, themselves-19)
det(criminal-22, the-21)
prep_against(defend-18, criminal-22)
nsubj(care-25, criminal-22)
aux(care-25, could-24)
rcmod(criminal-22, care-25)
dobj(care-25, less-26)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (NP (NNP lets))
    (VP (VBD quit)
      (S
        (VP (VBG having)
          (NP
            (NP (NN fear))
            (PP (IN of)
              (NP (DT the) (NN unknown)))))))
    (. .)))

advmod(quit-4, So-1)
nsubj(quit-4, lets-3)
root(ROOT-0, quit-4)
xcomp(quit-4, having-5)
dobj(having-5, fear-6)
det(unknown-9, the-8)
prep_of(fear-6, unknown-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB myself))
      (VP
        (VP (VBP have)
          (NP (DT a) (NN conceal)))
        (CC and)
        (VP (VBP carry)
          (PRN (-LRB- -LRB-)
            (FRAG (CC but)
              (ADVP (RB hardly))
              (SBAR (RB ever)
                (S
                  (VP (VBP carry)
                    (NP (PRP it))))))
            (-RRB- -RRB-)))))
    (CC and)
    (S
      (NP
        (NP (NN part))
        (PP (IN of)
          (NP (DT the) (NN process))))
      (VP (VBZ is)
        (SBAR
          (SBAR
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (DT an) (NN education) (NN class))))))
          (CC and)
          (SBAR
            (WHPP (IN at)
              (WHNP (WDT that) (NN point)))
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (NP (DT the) (JJ instructors) (NN duty)
                  (S
                    (VP (TO to)
                      (VP (VB pass\/fail)
                        (ADJP (RB as) (JJ applicable))))))))))))
    (. .)))

nsubj(have-3, I-1)
nsubj(carry-7, I-1)
advmod(have-3, myself-2)
root(ROOT-0, have-3)
det(conceal-5, a-4)
dobj(have-3, conceal-5)
conj_and(have-3, carry-7)
dep(hardly-10, but-9)
dep(carry-7, hardly-10)
advmod(carry-12, ever-11)
dep(hardly-10, carry-12)
dobj(carry-12, it-13)
nsubj(is-20, part-16)
det(process-19, the-18)
prep_of(part-16, process-19)
conj_and(have-3, is-20)
aux(take-22, to-21)
dep(is-20, take-22)
det(class-25, an-23)
nn(class-25, education-24)
dobj(take-22, class-25)
dep(duty-34, at-27)
det(point-29, that-28)
pobj(at-27, point-29)
nsubj(duty-34, it-30)
cop(duty-34, is-31)
det(duty-34, the-32)
amod(duty-34, instructors-33)
dep(is-20, duty-34)
conj_and(take-22, duty-34)
aux(pass\/fail-36, to-35)
infmod(duty-34, pass\/fail-36)
advmod(applicable-38, as-37)
acomp(pass\/fail-36, applicable-38)

(ROOT
  (S
    (PP (IN After)
      (NP (DT this) (NN class)))
    (, ,)
    (NP (DT the) (NN individual))
    (VP (MD should)
      (ADVP (IN at) (JJS least))
      (VP (VB know)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB handle)
                (NP (DT the) (NN weapon))
                (ADVP
                  (ADVP (RB safely))
                  (CC and)
                  (ADVP (RB responsibly)))))))))
    (. .)))

det(class-3, this-2)
prep_after(know-10, class-3)
det(individual-6, the-5)
nsubj(know-10, individual-6)
aux(know-10, should-7)
advmod(know-10, at-8)
pobj(at-8, least-9)
root(ROOT-0, know-10)
advmod(handle-13, how-11)
aux(handle-13, to-12)
ccomp(know-10, handle-13)
xcomp(know-10, handle-13)
det(weapon-15, the-14)
dobj(handle-13, weapon-15)
advmod(handle-13, safely-16)
advmod(handle-13, responsibly-18)
conj_and(safely-16, responsibly-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP feel)
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (S
                (NP (DT any) (NN criminal))
                (VP (VBD had)
                  (NP
                    (NP (DT any) (NNS intentions))
                    (PP (IN of)
                      (S
                        (VP (VBG going)
                          (PP (IN into)
                            (NP (DT a) (NN classroom)
                              (S
                                (VP (TO to)
                                  (VP (VB do)
                                    (NP (JJ ill) (NN will)))))))))))))
              (CC and)
              (S
                (NP (PRP he))
                (VP (VBD knew)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (ADJP
                          (ADJP (JJ legal))
                          (CC and)
                          (ADJP (RB very) (JJ possible)))
                        (SBAR (IN that)
                          (S
                            (NP (PRP he))
                            (VP (MD could)
                              (VP (VB be)
                                (VP
                                  (ADVP (RB outnumbered)
                                    (CC and)
                                    (RB out))
                                  (VBN gunned)
                                  (PP (IN by)
                                    (NP
                                      (NP (DT the) (NNS students))
                                      (ADVP (PRP themselves))))))))))))))))
          (, ,)
          (NP (PRP I))
          (VP (VBP believe)
            (SBAR
              (S
                (NP (DT the) (NN criminal))
                (VP (MD would)
                  (VP (VB think)
                    (ADVP (RB twice))
                    (SBAR (IN if)
                      (S
                        (NP (PRP he))
                        (VP (VBD knew)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP he))
                              (VP (VBD was)
                                (VP (VBG going)
                                  (PRT (RP up))
                                  (PP (IN against)
                                    (PP (IN in)
                                      (NP (DT the) (NN beginning)))))))))))))))))))
    (. .)))

nsubj(feel-2, I-1)
root(ROOT-0, feel-2)
complm(believe-43, that-3)
mark(had-7, if-4)
det(criminal-6, any-5)
nsubj(had-7, criminal-6)
advcl(believe-43, had-7)
det(intentions-9, any-8)
dobj(had-7, intentions-9)
prepc_of(intentions-9, going-11)
det(classroom-14, a-13)
prep_into(going-11, classroom-14)
aux(do-16, to-15)
infmod(classroom-14, do-16)
amod(will-18, ill-17)
dobj(do-16, will-18)
nsubj(knew-21, he-20)
conj_and(had-7, knew-21)
advcl(believe-43, knew-21)
complm(legal-25, that-22)
nsubj(legal-25, it-23)
nsubj(possible-28, it-23)
cop(legal-25, was-24)
ccomp(knew-21, legal-25)
advmod(possible-28, very-27)
ccomp(knew-21, possible-28)
conj_and(legal-25, possible-28)
complm(gunned-36, that-29)
nsubjpass(gunned-36, he-30)
aux(gunned-36, could-31)
auxpass(gunned-36, be-32)
advmod(gunned-36, outnumbered-33)
conj_and(outnumbered-33, out-35)
advmod(gunned-36, out-35)
ccomp(legal-25, gunned-36)
det(students-39, the-38)
agent(gunned-36, students-39)
advmod(students-39, themselves-40)
nsubj(believe-43, I-42)
ccomp(feel-2, believe-43)
det(criminal-45, the-44)
nsubj(think-47, criminal-45)
aux(think-47, would-46)
ccomp(believe-43, think-47)
advmod(think-47, twice-48)
mark(knew-51, if-49)
nsubj(knew-51, he-50)
advcl(think-47, knew-51)
dobj(going-55, what-52)
nsubj(going-55, he-53)
aux(going-55, was-54)
ccomp(knew-51, going-55)
prt(going-55, up-56)
prep(going-55, against-57)
pcomp(against-57, in-58)
det(beginning-60, the-59)
prep_in(against-57, beginning-60)

(ROOT
  (S
    (NP (RB Just) (JJ like) (NNS terrorists))
    (VP (MD will)
      (ADVP (RB probably))
      (RB not)
      (VP (VB hijack)
        (NP (DT a) (NN plane))
        (ADVP (RB again))
        (PP (IN for)
          (NP
            (NP (DT the) (NN fear))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS passengers))
                (VP (VBG turning)
                  (PP (IN on)
                    (NP (PRP them))))))))))
    (. .)))

advmod(terrorists-3, Just-1)
amod(terrorists-3, like-2)
nsubj(hijack-7, terrorists-3)
aux(hijack-7, will-4)
advmod(hijack-7, probably-5)
neg(hijack-7, not-6)
root(ROOT-0, hijack-7)
det(plane-9, a-8)
dobj(hijack-7, plane-9)
advmod(hijack-7, again-10)
det(fear-13, the-12)
prep_for(hijack-7, fear-13)
det(passengers-16, the-15)
prep_of(fear-13, passengers-16)
partmod(passengers-16, turning-17)
prep_on(turning-17, them-19)

(ROOT
  (NP (JJ Same) (NN principal) (. .)))

amod(principal-2, Same-1)
root(ROOT-0, principal-2)

