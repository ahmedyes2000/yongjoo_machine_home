(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ British)))
    (. .)))

nsubj(British-3, I-1)
cop(British-3, 'm-2)
root(ROOT-0, British-3)

(ROOT
  (S
    (NP (PRP$ Our) (NNS halfwits))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (ADJP (RB reasonably) (JJ difficult))
        (S
          (VP (TO to)
            (VP (VB get)
              (NP (PRP$ their) (NNS hands))
              (PP (IN on)
                (NP (DT a) (NN gun))))))))
    (. .)))

poss(halfwits-2, Our-1)
nsubj(find-3, halfwits-2)
root(ROOT-0, find-3)
nsubj(get-8, it-4)
advmod(difficult-6, reasonably-5)
dep(get-8, difficult-6)
aux(get-8, to-7)
xcomp(find-3, get-8)
poss(hands-10, their-9)
dobj(get-8, hands-10)
det(gun-13, a-12)
prep_on(get-8, gun-13)

(ROOT
  (S
    (NP (NNS Ours))
    (VP (VBP carry)
      (NP (NNS knives)))
    (. .)))

nsubj(carry-2, Ours-1)
root(ROOT-0, carry-2)
dobj(carry-2, knives-3)

(ROOT
  (S
    (S
      (VP (VBD \/) (-RRB- -RRB-)
        (NP
          (PP (NNP By)
            (NP (DT the) (JJ same)))
          (NP (NN reasoning)))
        (, ,)
        (SBAR
          (S
            (NP (DT all))
            (VP (MD should)
              (VP (VB carry)
                (NP (NNS knives)))))
          (, ,)
          (CC whether)
          (S
            (NP (PRP we))
            (VP (VBP go)
              (PP (TO to)
                (NP (DT the) (NN pub)
                  (CC or)
                  (NN shopping))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD should) (RB all)
      (VP (VB be)
        (VP (VBN tooled)
          (PRT (RP up)))))
    (. .)))

ccomp(tooled-26, \/-1)
prep(reasoning-6, By-3)
det(same-5, the-4)
dep(By-3, same-5)
dobj(\/-1, reasoning-6)
nsubj(carry-10, all-8)
aux(carry-10, should-9)
dep(\/-1, carry-10)
dobj(carry-10, knives-11)
nsubj(go-15, we-14)
dep(\/-1, go-15)
conj_whether(carry-10, go-15)
det(pub-18, the-17)
prep_to(go-15, pub-18)
prep_to(go-15, shopping-20)
conj_or(pub-18, shopping-20)
nsubjpass(tooled-26, we-22)
aux(tooled-26, should-23)
advmod(tooled-26, all-24)
auxpass(tooled-26, be-25)
root(ROOT-0, tooled-26)
prt(tooled-26, up-27)

(ROOT
  (S
    (NP (PRP$ Your) (NN granny))
    (VP (MD should)
      (VP (VB take)
        (NP (DT a) (NN machette))
        (PP (TO to)
          (NP (DT the) (JJ womens) (NN guild)))))
    (. .)))

poss(granny-2, Your-1)
nsubj(take-4, granny-2)
aux(take-4, should-3)
root(ROOT-0, take-4)
det(machette-6, a-5)
dobj(take-4, machette-6)
det(guild-10, the-8)
amod(guild-10, womens-9)
prep_to(take-4, guild-10)

(ROOT
  (FRAG
    (ADVP (RB Just))
    (PP (IN in)
      (NP (NN case))
      (: ...))))

root(ROOT-0, Just-1)
dep(Just-1, in-2)
pobj(in-2, case-3)

(ROOT
  (FRAG (: \/)
    (VP (VBD -RRB-)
      (SBAR
        (S
          (SBAR (IN If)
            (S
              (NP (DT all))
              (VP (VBD were)
                (S
                  (VP (TO to)
                    (VP (VB carry)
                      (NP (DT a) (NN gun))))))))
          (, ,)
          (NP (DT every) (NNP Saturday) (NN night))
          (VP (MD would)
            (VP (VB be)
              (NP
                (NP (DT the) (NN gun) (NN fight))
                (PP (IN at)
                  (NP (DT the) (JJ OK) (NN coral)))))))))
    (. .)))

punct(fight-18, \/-1)
mark(were-5, If-3)
nsubj(were-5, all-4)
xsubj(carry-7, all-4)
advcl(fight-18, were-5)
aux(carry-7, to-6)
xcomp(were-5, carry-7)
det(gun-9, a-8)
dobj(carry-7, gun-9)
det(night-13, every-11)
nn(night-13, Saturday-12)
nsubj(fight-18, night-13)
aux(fight-18, would-14)
cop(fight-18, be-15)
det(fight-18, the-16)
nn(fight-18, gun-17)
root(ROOT-0, fight-18)
det(coral-22, the-20)
amod(coral-22, OK-21)
prep_at(fight-18, coral-22)

