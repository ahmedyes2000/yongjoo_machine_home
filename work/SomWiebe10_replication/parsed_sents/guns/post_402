(ROOT
  (S
    (S
      (ADVP (RB Frankly))
      (VP (VBG speaking)))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP
          (NP (NN time))
          (PP (IN in)
            (NP
              (NP (PRP$ my) (NN life))
              (PP (IN for)
                (NP
                  (NP (NNS people))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP have)
                        (NP (DT the) (NN propensity)
                          (S
                            (VP (TO to)
                              (VP (VB allow) (`` ``)
                                (S
                                  (NP (DT the) (JJR greater))
                                  (ADJP (JJ good)))
                                ('' '')
                                (S
                                  (VP (TO to)
                                    (VP (VB strip)
                                      (PRT (RP away))
                                      (NP (NNS freedoms)))))))))))))))))))
    (. .)))

advmod(speaking-2, Frankly-1)
partmod(have-7, speaking-2)
nsubj(have-7, I-4)
aux(have-7, do-5)
neg(have-7, n't-6)
root(ROOT-0, have-7)
dobj(have-7, time-8)
poss(life-11, my-10)
prep_in(time-8, life-11)
prep_for(life-11, people-13)
nsubj(have-15, people-13)
rcmod(people-13, have-15)
det(propensity-17, the-16)
dobj(have-15, propensity-17)
aux(allow-19, to-18)
infmod(propensity-17, allow-19)
det(greater-22, the-21)
nsubj(good-23, greater-22)
xcomp(allow-19, good-23)
aux(strip-26, to-25)
xcomp(allow-19, strip-26)
prt(strip-26, away-27)
dobj(strip-26, freedoms-28)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN read)
          (NP (PRP$ your) (NNS arguments)))))
    (CC and)
    (S
      (S
        (NP (EX there))
        (VP (VBZ is)
          (ADVP (RB no)
            (S
              (VP (VBG convincing)
                (NP (PRP you))
                (ADVP (RB otherwise)))))
          (, ,)
          (S (RB so)
            (VP (VB live)
              (NP (PRP$ your) (NN life))))))
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP hope)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (ADVP (RB never))
              (VP (VBP come)
                (PP (IN against)
                  (NP
                    (NP (DT a) (NN criminal))
                    (PP (IN with)
                      (NP
                        (NP (DT a) (NN gun))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ wants)
                              (S
                                (VP (TO to)
                                  (VP (VB kill)
                                    (NP (PRP you))))))))))))))))))
    (. .)))

nsubj(read-3, I-1)
nsubj(is-8, I-1)
aux(read-3, have-2)
root(ROOT-0, read-3)
poss(arguments-5, your-4)
dobj(read-3, arguments-5)
expl(is-8, there-7)
conj_and(read-3, is-8)
advmod(is-8, no-9)
dep(no-9, convincing-10)
dobj(convincing-10, you-11)
advmod(convincing-10, otherwise-12)
advmod(live-15, so-14)
ccomp(is-8, live-15)
poss(life-17, your-16)
dobj(live-15, life-17)
nsubj(hope-20, I-19)
conj_and(read-3, hope-20)
conj_and(is-8, hope-20)
complm(come-24, that-21)
nsubj(come-24, you-22)
neg(come-24, never-23)
ccomp(hope-20, come-24)
det(criminal-27, a-26)
prep_against(come-24, criminal-27)
det(gun-30, a-29)
prep_with(criminal-27, gun-30)
nsubj(wants-32, gun-30)
rcmod(gun-30, wants-32)
aux(kill-34, to-33)
xcomp(wants-32, kill-34)
dobj(kill-34, you-35)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NN position))
      (PP (IN on)
        (NP (DT this) (NN issue))))
    (VP (MD could)
      (VP (VB be)
        (ADJP (JJ fatal))))
    (. .)))

poss(position-2, Your-1)
nsubj(fatal-8, position-2)
det(issue-5, this-4)
prep_on(position-2, issue-5)
aux(fatal-8, could-6)
cop(fatal-8, be-7)
root(ROOT-0, fatal-8)

