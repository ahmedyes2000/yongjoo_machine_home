(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN reason))
        (SBAR
          (S
            (NP (DT the) (NNP Army))
            (VP (VBZ uses)
              (NP (NNS guns)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(reason-4, a-3)
nsubj(is-2, reason-4)
det(Army-6, the-5)
nsubj(uses-7, Army-6)
rcmod(reason-4, uses-7)
dobj(uses-7, guns-8)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP deal)
      (PP (IN with)
        (NP
          (NP (NNS folks))
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB kill)
                  (NP (PRP them)))))))))
    (. .)))

nsubj(deal-2, they-1)
root(ROOT-0, deal-2)
prep_with(deal-2, folks-4)
xsubj(kill-7, folks-4)
partmod(folks-4, trying-5)
aux(kill-7, to-6)
xcomp(trying-5, kill-7)
dobj(kill-7, them-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (PP (IN in)
            (NP
              (NP (NN fear))
              (PP (IN of)
                (NP (PRP$ my) (NN life))))))))
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN reason))
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB be)
                (VP (VBN forced)
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB use)
                          (S
                            (NP (NN anything))
                            (ADJP (RBR less) (JJ effective)
                              (PP (IN than)
                                (NP (DT a) (NN gun))))))
                        (CC and)
                        (VP (VB risk)
                          (NP (JJ further) (NN injury)
                            (CC or)
                            (NN death))
                          (PP (IN because)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP I))
                                (VP (VBP use)
                                  (SBAR
                                    (S
                                      (VP (VBD did) (RB n't)
                                        (VP (VB stop)
                                          (NP (DT the) (NN guy)))))))))))))))))))))
    (. .)))

mark(am-3, If-1)
nsubj(am-3, I-2)
advcl(is-10, am-3)
prep_in(am-3, fear-5)
poss(life-8, my-7)
prep_of(fear-5, life-8)
expl(is-10, there-9)
root(ROOT-0, is-10)
det(reason-12, no-11)
nsubj(is-10, reason-12)
nsubjpass(forced-16, I-13)
aux(forced-16, should-14)
auxpass(forced-16, be-15)
rcmod(reason-12, forced-16)
aux(use-18, to-17)
xcomp(forced-16, use-18)
nsubj(effective-21, anything-19)
advmod(effective-21, less-20)
xcomp(use-18, effective-21)
det(gun-24, a-23)
prep_than(effective-21, gun-24)
xcomp(forced-16, risk-26)
conj_and(use-18, risk-26)
amod(injury-28, further-27)
dobj(risk-26, injury-28)
dobj(risk-26, death-30)
conj_or(injury-28, death-30)
dep(use-34, what-32)
nsubj(stop-37, what-32)
nsubj(use-34, I-33)
prepc_because(risk-26, use-34)
aux(stop-37, did-35)
neg(stop-37, n't-36)
ccomp(use-34, stop-37)
det(guy-39, the-38)
dobj(stop-37, guy-39)

(ROOT
  (S
    (PP (IN For)
      (NP (RB now)))
    (NP (NNS guns))
    (VP (VBP are)
      (NP
        (NP (DT the) (JJS best))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP have))))))
    (. .)))

prep(best-6, For-1)
pobj(For-1, now-2)
nsubj(best-6, guns-3)
cop(best-6, are-4)
det(best-6, the-5)
root(ROOT-0, best-6)
dobj(have-8, best-6)
nsubj(have-8, we-7)
rcmod(best-6, have-8)

(ROOT
  (S
    (SBAR (IN Until)
      (S
        (S
          (NP (NN something))
          (ADVP (RB better))
          (VP (VBZ comes)
            (PRT (RP along))))
        (CC and)
        (S
          (NP (PRP we))
          (ADVP (DT all))
          (VP (VBP get)
            (S
              (VP (TO to)
                (VP (VB set)
                  (NP (PRP$ our) (NNS phasors))
                  (PP (IN on)
                    (NP (NN stun))))))))
        (ADVP (RB then))))
    (NP (PRP we))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN allowed)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP (DT a) (NN gun))
                (SBAR (IN if)
                  (S
                    (NP (PRP we))
                    (VP (VBP pass)
                      (S
                        (NP (DT the) (JJ legal) (NNS tests))
                        (VP (TO to)
                          (VP (VB do)
                            (ADVP (RB so))))))))))))))
    (. .)))

mark(comes-4, Until-1)
nsubj(comes-4, something-2)
advmod(comes-4, better-3)
advcl(allowed-20, comes-4)
prt(comes-4, along-5)
nsubj(get-9, we-7)
xsubj(set-11, we-7)
advmod(get-9, all-8)
conj_and(comes-4, get-9)
advcl(allowed-20, get-9)
aux(set-11, to-10)
xcomp(get-9, set-11)
poss(phasors-13, our-12)
dobj(set-11, phasors-13)
prep_on(set-11, stun-15)
advmod(comes-4, then-16)
nsubjpass(allowed-20, we-17)
aux(allowed-20, should-18)
auxpass(allowed-20, be-19)
root(ROOT-0, allowed-20)
aux(have-22, to-21)
xcomp(allowed-20, have-22)
det(gun-24, a-23)
dobj(have-22, gun-24)
mark(pass-27, if-25)
nsubj(pass-27, we-26)
advcl(have-22, pass-27)
det(tests-30, the-28)
amod(tests-30, legal-29)
nsubj(do-32, tests-30)
aux(do-32, to-31)
xcomp(pass-27, do-32)
advmod(do-32, so-33)

(ROOT
  (S
    (NP
      (NP (JJ Peper) (NN spray))
      (CC and)
      (NP (RB almost) (NN anything) (NN else) (`` ``) (NN non) (NN lethal) ('' '')))
    (VP (VBZ is)
      (ADJP (JJ questionable))
      (ADVP
        (ADVP (IN at) (JJS best) (RB as))
        (PP (TO to)
          (SBAR (IN if)
            (S
              (NP (PRP it))
              (VP (MD will)
                (VP (VB work))))))))
    (. .)))

amod(spray-2, Peper-1)
nsubj(questionable-12, spray-2)
advmod(lethal-9, almost-4)
nn(lethal-9, anything-5)
nn(lethal-9, else-6)
nn(lethal-9, non-8)
conj_and(spray-2, lethal-9)
nsubj(questionable-12, lethal-9)
cop(questionable-12, is-11)
root(ROOT-0, questionable-12)
advmod(questionable-12, at-13)
pobj(at-13, best-14)
mark(work-20, if-17)
nsubj(work-20, it-18)
aux(work-20, will-19)
prepc_as_to(at-13, work-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (ADVP (RB attacker))
        (VP (VBZ is)
          (ADJP (JJ high)
            (PP (IN on)
              (NP (NN something)))))))
    (NP (PRP I))
    (ADVP (RB almost))
    (VP (VBP guarantee)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD wo) (RB n't)
            (VP (VB work))))))
    (. .)))

mark(high-5, If-1)
nsubj(high-5, they-2)
advmod(high-5, attacker-3)
cop(high-5, is-4)
advcl(guarantee-10, high-5)
prep_on(high-5, something-7)
nsubj(guarantee-10, I-8)
advmod(guarantee-10, almost-9)
root(ROOT-0, guarantee-10)
nsubj(work-14, it-11)
aux(work-14, wo-12)
neg(work-14, n't-13)
ccomp(guarantee-10, work-14)

(ROOT
  (S
    (S
      (NP (NNS Tasers))
      (VP (VBP are)
        (ADJP (JJ great))))
    (CC but)
    (S
      (NP (PRP one))
      (VP (VBD shot)
        (ADVP (RB maybe)
          (NP (CD two)))))
    (. .)))

nsubj(great-3, Tasers-1)
cop(great-3, are-2)
root(ROOT-0, great-3)
nsubj(shot-6, one-5)
conj_but(great-3, shot-6)
advmod(shot-6, maybe-7)
pobj(maybe-7, two-8)

(ROOT
  (S
    (NP
      (ADJP
        (ADJP (RB not) (JJ good))
        (SBAR (IN if)
          (S
            (NP (PRP$ my) (NN life))
            (VP (VBZ is)
              (PP (IN on)
                (NP (DT the) (NN line)))))))
      (NNS cops))
    (VP (VBP do) (RB n't)
      (ADVP (RB even))
      (VP (VB use)
        (NP (PRP them))
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP (NN life)
                (CC or)
                (NN death)))))))
    (. .)))

neg(good-2, not-1)
amod(cops-10, good-2)
mark(is-6, if-3)
poss(life-5, my-4)
nsubj(is-6, life-5)
ccomp(good-2, is-6)
det(line-9, the-8)
prep_on(is-6, line-9)
nsubj(use-14, cops-10)
aux(use-14, do-11)
neg(use-14, n't-12)
advmod(use-14, even-13)
root(ROOT-0, use-14)
dobj(use-14, them-15)
mark(life-19, if-16)
nsubj(life-19, it-17)
cop(life-19, is-18)
advcl(use-14, life-19)
advcl(use-14, death-21)
conj_or(life-19, death-21)

(ROOT
  (S
    (S
      (VP (VBN Naumadd)))
    (NP (PRP I))
    (VP (VBP wish)
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBD lived)
            (SBAR
              (S
                (PP (IN in)
                  (NP (DT a) (NN world)))
                (NP (PRP$ your) (NNS ideas))
                (VP (MD would)
                  (VP (VB work)
                    (PP (IN in)
                      (SBAR (CC but)
                        (S
                          (NP (PRP we))
                          (VP (VBP do) (RB n't)))))))))))))
    (. .)))

dep(wish-3, Naumadd-1)
nsubj(wish-3, I-2)
root(ROOT-0, wish-3)
nsubj(lived-5, we-4)
ccomp(wish-3, lived-5)
det(world-8, a-7)
prep_in(work-12, world-8)
poss(ideas-10, your-9)
nsubj(work-12, ideas-10)
aux(work-12, would-11)
ccomp(lived-5, work-12)
cc(do-16, but-14)
nsubj(do-16, we-15)
prepc_in(work-12, do-16)
neg(do-16, n't-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN spent)
          (NP (NNS years))
          (S
            (VP (VBG learning)
              (NP (NNP Karate)))))))
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (VP
            (VP (VBN attacked))
            (CC and)
            (VP
              (PP (IN in)
                (NP (NN fear)))
              (PP (IN of)
                (NP (PRP$ my) (NN life)))))))
      (NP (PRP I))
      (ADVP (RB still))
      (VP (MD would) (RB rather)
        (VP (VB have)
          (NP (DT a) (NN gun)
            (S
              (VP (TO to)
                (VP (VB fall)
                  (PRT (RP back))
                  (PP (IN on)))))))))
    (. .)))

nsubj(spent-3, I-1)
aux(spent-3, have-2)
root(ROOT-0, spent-3)
tmod(spent-3, years-4)
xcomp(spent-3, learning-5)
dobj(learning-5, Karate-6)
mark(attacked-9, if-8)
advcl(have-20, attacked-9)
conj_and(attacked-9, in-11)
advcl(have-20, in-11)
pobj(in-11, fear-12)
poss(life-15, my-14)
prep_of(in-11, life-15)
nsubj(have-20, I-16)
advmod(have-20, still-17)
aux(have-20, would-18)
advmod(have-20, rather-19)
conj_and(spent-3, have-20)
det(gun-22, a-21)
dobj(have-20, gun-22)
aux(fall-24, to-23)
infmod(gun-22, fall-24)
prt(fall-24, back-25)
prep(fall-24, on-26)

(ROOT
  (S
    (NP (RB Only) (DT a) (NN gun))
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP deal)
            (PP (IN with)
              (NP
                (NP (DT the) (JJR bigger) (NN guy))
                (, ,)
                (NP
                  (NP (DT the) (NN guy))
                  (VP (VBG attacking)
                    (NP
                      (NP (DT a) (JJ small) (NN woman))
                      (, ,)
                      (NP (NN drug) (NN crazed))
                      (, ,)
                      (NP (DT the) (JJ armed) (NN attacker))
                      (CC or)
                      (NP (DT the) (JJ multiple) (NN attacker) (NN issue)))))))))))
    (. .)))

advmod(gun-3, Only-1)
det(gun-3, a-2)
nsubj(let-4, gun-3)
root(ROOT-0, let-4)
nsubj(deal-6, you-5)
ccomp(let-4, deal-6)
det(guy-10, the-8)
amod(guy-10, bigger-9)
prep_with(deal-6, guy-10)
det(guy-13, the-12)
appos(guy-10, guy-13)
partmod(guy-13, attacking-14)
det(woman-17, a-15)
amod(woman-17, small-16)
dobj(attacking-14, woman-17)
nn(crazed-20, drug-19)
dobj(attacking-14, crazed-20)
conj_or(woman-17, crazed-20)
det(attacker-24, the-22)
amod(attacker-24, armed-23)
dobj(attacking-14, attacker-24)
conj_or(woman-17, attacker-24)
det(issue-29, the-26)
amod(issue-29, multiple-27)
nn(issue-29, attacker-28)
dobj(attacking-14, issue-29)
conj_or(woman-17, issue-29)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB also))
    (VP (VBZ lets)
      (S
        (NP (PRP you))
        (VP (VB stay)
          (PRT (RP out))
          (PP (IN of)
            (NP
              (NP (NN reach))
              (PP (IN of)
                (NP
                  (NP (PRP$ his) (NN knife))
                  (CC or)
                  (NP (JJ other) (NN weapon)))))))))
    (. .)))

nsubj(lets-3, It-1)
advmod(lets-3, also-2)
root(ROOT-0, lets-3)
nsubj(stay-5, you-4)
ccomp(lets-3, stay-5)
prep_out_of(stay-5, reach-8)
poss(knife-11, his-10)
prep_of(reach-8, knife-11)
amod(weapon-14, other-13)
prep_of(reach-8, weapon-14)
conj_or(knife-11, weapon-14)

