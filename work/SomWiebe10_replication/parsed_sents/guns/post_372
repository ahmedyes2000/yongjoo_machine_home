(ROOT
  (S
    (NP (NNP Fair))
    (VP (VBP point)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP guess)))))
    (. .)))

nsubj(point-2, Fair-1)
root(ROOT-0, point-2)
nsubj(guess-4, I-3)
ccomp(point-2, guess-4)

(ROOT
  (S
    (VP (VB Sad)
      (SBAR (IN though) (IN that)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (S
              (VP (TO to)
                (VP (VB live)
                  (PP (IN like)
                    (NP (NNS cowboys))))))
            (S
              (VP (TO to)
                (VP (VB feel)
                  (ADJP (JJ safe)))))))))
    (. .)))

root(ROOT-0, Sad-1)
mark(have-5, though-2)
dep(have-5, that-3)
nsubj(have-5, you-4)
xsubj(live-7, you-4)
xsubj(feel-11, you-4)
advcl(Sad-1, have-5)
aux(live-7, to-6)
xcomp(have-5, live-7)
prep_like(live-7, cowboys-9)
aux(feel-11, to-10)
xcomp(have-5, feel-11)
acomp(feel-11, safe-12)

(ROOT
  (S
    (NP (PRP$ My) (NN guess))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT this) (NN debate))
          (VP (MD can)
            (ADVP (RB still))
            (VP (VB be)
              (VP (VBN drawn)
                (PP (IN along)
                  (NP (DT the) (NN north) (NN south) (NN divide)))))))))
    (. .)))

poss(guess-2, My-1)
nsubj(is-3, guess-2)
root(ROOT-0, is-3)
complm(drawn-10, that-4)
det(debate-6, this-5)
nsubjpass(drawn-10, debate-6)
aux(drawn-10, can-7)
advmod(drawn-10, still-8)
auxpass(drawn-10, be-9)
ccomp(is-3, drawn-10)
det(divide-15, the-12)
nn(divide-15, north-13)
nn(divide-15, south-14)
prep_along(drawn-10, divide-15)

(ROOT
  (S
    (S
      (NP (DT This) (`` ``) (NN seige) ('' '') (NN mentality))
      (VP (MD will)
        (ADVP (RB ultimately))
        (VP (VB get)
          (NP (PRP you))
          (ADVP (RB nowhere)))))
    (NP (PRP I))
    (VP (VBP feel))
    (. .)))

det(mentality-5, This-1)
nn(mentality-5, seige-3)
nsubj(get-8, mentality-5)
aux(get-8, will-6)
advmod(get-8, ultimately-7)
dep(feel-12, get-8)
dobj(get-8, you-9)
advmod(get-8, nowhere-10)
nsubj(feel-12, I-11)
root(ROOT-0, feel-12)

(ROOT
  (S
    (S
      (NP (DT The) (NNP French))
      (VP (VBD managed)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (DT a) (NN revolution))
              (PP (IN without)
                (NP (DT a) (JJ second) (NN amendment))))))))
    (CC and)
    (S
      (NP
        (NP (DT this) (NN line))
        (PP (IN of)
          (NP (NN thinking))))
      (VP (MD will)
        (ADVP (RB never))
        (VP (VB move)
          (NP (PRP$ your) (NN society))
          (ADVP (RB forward)))))
    (. .)))

det(French-2, The-1)
nsubj(managed-3, French-2)
xsubj(have-5, French-2)
root(ROOT-0, managed-3)
aux(have-5, to-4)
xcomp(managed-3, have-5)
det(revolution-7, a-6)
dobj(have-5, revolution-7)
det(amendment-11, a-9)
amod(amendment-11, second-10)
prep_without(have-5, amendment-11)
det(line-14, this-13)
nsubj(move-19, line-14)
prep_of(line-14, thinking-16)
aux(move-19, will-17)
neg(move-19, never-18)
conj_and(managed-3, move-19)
poss(society-21, your-20)
dobj(move-19, society-21)
advmod(move-19, forward-22)

(ROOT
  (S (RB So)
    (ADVP (RB sure))
    (, ,)
    (VP
      (VP (VBP keep)
        (NP
          (NP (PRP$ your) (NNS guns))
          (CC and)
          (NP (PRP$ your) (NN death) (NN penalty))))
      (, ,)
      (CC and)
      (VP
        (ADVP (IN out)
          (PP (IN of)
            (NP
              (NP (NN control) (NN society))
              (PP (IN like)
                (NP (DT the) (NNP US))))))
        (ADVP (RB obviously))
        (VBZ needs)
        (NP (DT both))))
    (. .)))

advmod(keep-4, So-1)
advmod(keep-4, sure-2)
root(ROOT-0, keep-4)
poss(guns-6, your-5)
dobj(keep-4, guns-6)
poss(penalty-10, your-8)
nn(penalty-10, death-9)
dobj(keep-4, penalty-10)
conj_and(guns-6, penalty-10)
nn(society-16, control-15)
prep_out_of(needs-21, society-16)
det(US-19, the-18)
prep_like(society-16, US-19)
advmod(needs-21, obviously-20)
conj_and(keep-4, needs-21)
dobj(needs-21, both-22)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (ADJP (JJ ready)
            (S
              (VP (TO to)
                (VP (VB join)
                  (NP
                    (NP (DT the) (NN rest))
                    (PP (IN of)
                      (NP (DT the) (JJ first) (NN world)))))))))))
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP know)))))
    (. !)))

advmod(ready-4, When-1)
nsubj(ready-4, you-2)
cop(ready-4, 're-3)
advcl(let-13, ready-4)
csubj(let-13, ready-4)
aux(join-6, to-5)
xcomp(ready-4, join-6)
det(rest-8, the-7)
dobj(join-6, rest-8)
det(world-12, the-10)
amod(world-12, first-11)
prep_of(rest-8, world-12)
root(ROOT-0, let-13)
nsubj(know-15, me-14)
ccomp(let-13, know-15)

(ROOT
  (PRN (-LRB- -LRB-)
    (FRAG
      (SBAR (IN Although)
        (S
          (NP (PRP I))
          (VP (VBP feel)
            (SBAR
              (S
                (NP (DT the) (NNP U.S.))
                (VP
                  (VP (VBZ is)
                    (VP (VBG sewing)
                      (NP
                        (NP (DT the) (NNS seeds))
                        (PP (IN of)
                          (NP
                            (NP (PRP it) (POS 's))
                            (JJ own) (NN destruction))))))
                  (CC and)
                  (VP (MD will)
                    (ADVP (RB probably))
                    (VP (VB implode)
                      (PP (IN from)
                        (PP (IN within)
                          (PP (IN in)
                            (NP (DT the) (JJ next) (CD 100-150) (NNS years)))))))))))))
      (. ?))
    (-RRB- -RRB-)))

mark(feel-4, Although-2)
nsubj(feel-4, I-3)
root(ROOT-0, feel-4)
det(U.S.-6, the-5)
nsubj(sewing-8, U.S.-6)
nsubj(implode-19, U.S.-6)
aux(sewing-8, is-7)
ccomp(feel-4, sewing-8)
det(seeds-10, the-9)
dobj(sewing-8, seeds-10)
poss(destruction-15, it-12)
amod(destruction-15, own-14)
prep_of(seeds-10, destruction-15)
aux(implode-19, will-17)
advmod(implode-19, probably-18)
ccomp(feel-4, implode-19)
conj_and(sewing-8, implode-19)
prep(implode-19, from-20)
pcomp(from-20, within-21)
prep(from-20, within-21)
pcomp(within-21, in-22)
det(years-26, the-23)
amod(years-26, next-24)
num(years-26, 100-150-25)
prep_in(within-21, years-26)

(ROOT
  (S
    (ADVP (RB Luckily))
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (NNS states))
        (PP (IN in)
          (NP
            (NP (DT the) (NN north))
            (ADVP (JJ east))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP are)
              (ADJP (RBR more) (JJ akin)
                (PP (TO to)
                  (NP
                    (NP (NNP European))
                    (PP (IN of)
                      (NP (NN thinking)))))))))))
    (. .)))

advmod(are-3, Luckily-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
nsubj(are-3, states-4)
nsubj(akin-12, states-4)
det(north-7, the-6)
prep_in(states-4, north-7)
advmod(north-7, east-8)
cop(akin-12, are-10)
advmod(akin-12, more-11)
rcmod(states-4, akin-12)
prep_to(akin-12, European-14)
prep_of(European-14, thinking-16)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP know)))
    (, ,)
    (S
      (NP (DT the) (NN trouble))
      (PP (IN with)
        (NP (DT the) (NN gun) (NN lobby))))
    (CC and)
    (S
      (NP (DT the) (NN death) (NN penalty) (NNS addicts))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP
              (NP (JJS most))
              (PP (IN of)
                (NP (PRP them))))
            (VP (VBP are)
              (PP (IN in)
                (NP
                  (NP (DT the) (NN south))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (ADVP (RB also))
                      (VP (VBD wanted)
                        (S
                          (VP (TO to)
                            (VP (VB fight)
                              (PP (IN for)
                                (S
                                  (VP (VBG keeping)
                                    (NP (NN slavery))))))))))))))))))
    (. .)))

nsubj(know-2, You-1)
root(ROOT-0, know-2)
det(trouble-5, the-4)
conj_and(know-2, trouble-5)
dep(trouble-5, with-6)
det(lobby-9, the-7)
nn(lobby-9, gun-8)
pobj(with-6, lobby-9)
det(addicts-14, the-11)
nn(addicts-14, death-12)
nn(addicts-14, penalty-13)
nsubj(is-15, addicts-14)
conj_and(know-2, is-15)
complm(are-20, that-16)
nsubj(are-20, most-17)
prep_of(most-17, them-19)
ccomp(is-15, are-20)
det(south-23, the-22)
prep_in(are-20, south-23)
nsubj(wanted-26, south-23)
advmod(wanted-26, also-25)
rcmod(south-23, wanted-26)
aux(fight-28, to-27)
xcomp(wanted-26, fight-28)
prepc_for(fight-28, keeping-30)
dobj(keeping-30, slavery-31)

(ROOT
  (FRAG
    (ADJP (JJ Weird))
    (, ,)
    (NP (NN huh))
    (. ?)))

dep(huh-3, Weird-1)
root(ROOT-0, huh-3)

