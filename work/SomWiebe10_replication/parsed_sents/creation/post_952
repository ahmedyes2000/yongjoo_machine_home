(ROOT
  (S
    (S
      (NP (NN Ok))
      (, ,)
      (ADVP (RB so))
      (, ,)
      (NP (PRP you))
      (VP (VBP 're)
        (VP (VBG saying) (, ,)
          (SBAR (IN since)
            (S
              (NP (PRP you))
              (VP (VBP 've)
                (ADVP (RB never))
                (`` ``)
                (VP (VBN seen) ('' '')
                  (SBAR
                    (S
                      (NP
                        (NP (DT an) (NN ape))
                        (PRN (-LRB- -LRB-)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBZ is)
                                (NP (DT the) (JJ wrong) (NN animal))
                                (, ,)
                                (ADVP (RB again)))))
                          (-RRB- -RRB-)))
                      (VP (VB evolve)
                        (PP (IN into)
                          (NP (DT a) (NN human)))))
                    (, ,)
                    (CC and)
                    (S
                      (ADVP (RB never))
                      (VP (VBN seen)
                        (S
                          (NP (NNP God))
                          (VP (VB create)
                            (NP (DT a) (NN human))))))))))))))
    (, ,)
    (NP (NNP God))
    (VP (VBZ wins)
      (NP (DT this) (NN debate)))
    (. ?)))

nsubj(saying-7, Ok-1)
advmod(saying-7, so-3)
nsubj(saying-7, you-5)
aux(saying-7, 're-6)
ccomp(wins-41, saying-7)
mark(seen-14, since-9)
nsubj(seen-14, you-10)
aux(seen-14, 've-11)
neg(seen-14, never-12)
advcl(saying-7, seen-14)
det(ape-17, an-16)
nsubj(evolve-27, ape-17)
nsubj(seen-34, ape-17)
nsubj(animal-23, which-19)
cop(animal-23, is-20)
det(animal-23, the-21)
amod(animal-23, wrong-22)
dep(ape-17, animal-23)
advmod(animal-23, again-25)
ccomp(seen-14, evolve-27)
det(human-30, a-29)
prep_into(evolve-27, human-30)
neg(seen-34, never-33)
ccomp(seen-14, seen-34)
conj_and(evolve-27, seen-34)
nsubj(create-36, God-35)
ccomp(seen-34, create-36)
det(human-38, a-37)
dobj(create-36, human-38)
nsubj(wins-41, God-40)
root(ROOT-0, wins-41)
det(debate-43, this-42)
dobj(wins-41, debate-43)

(ROOT
  (S (IN So) (, ,)
    (SBAR (RB just) (IN because)
      (S
        (NP (PRP we))
        (VP (VBP have) (RB n't)
          (VP (VBN proven)
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP 're)
                  (PP (IN from)
                    (NP (NNS chimpanzees))))))))))
    (, ,)
    (VP (VBZ gives)
      (S
        (NP (NNS grounds))
        (VP (TO to)
          (VP (VB say)
            (NP
              (NP (NNP God))
              (VP (VBN made)
                (NP (PRP us))))))))
    (. ?)))

dep(gives-14, So-1)
advmod(proven-8, just-3)
dep(proven-8, because-4)
nsubj(proven-8, we-5)
aux(proven-8, have-6)
neg(proven-8, n't-7)
dep(gives-14, proven-8)
nsubj('re-10, we-9)
ccomp(proven-8, 're-10)
prep_from('re-10, chimpanzees-12)
root(ROOT-0, gives-14)
nsubj(say-17, grounds-15)
aux(say-17, to-16)
xcomp(gives-14, say-17)
dobj(say-17, God-18)
partmod(God-18, made-19)
dobj(made-19, us-20)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN huger) (NN spectrum))
        (PP (IN out)
          (NP (RB there)))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(spectrum-5, a-3)
nn(spectrum-5, huger-4)
nsubj('s-2, spectrum-5)
prep(spectrum-5, out-6)
pobj(out-6, there-7)

(ROOT
  (S
    (S (CC And)
      (S
        (ADVP (RB again))
        (, ,)
        (NP (PRP I))
        (VP (MD 'll)
          (VP (VB say))))
      (, ,)
      (S
        (NP
          (NP (DT the) (NN theory))
          (PP (IN of)
            (NP (NN evolution))))
        (VP (VBZ is) (RB n't)
          (SBAR (IN that)
            (S
              (NP (NNS humans))
              (VP (VBP are)
                (PP (IN from)
                  (NP (NNS chimpanzees)))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB just))
        (NP (DT an) (NN idea))
        (SBAR (IN because)
          (S
            (NP (PRP$ our) (NN DNA))
            (VP (VBZ 's)
              (VP (VBP are)
                (ADJP (RB closely) (VBN related))))))))
    (. .)))

cc(say-6, And-1)
advmod(say-6, again-2)
nsubj(say-6, I-4)
aux(say-6, 'll-5)
root(ROOT-0, say-6)
det(theory-9, the-8)
nsubj(is-12, theory-9)
prep_of(theory-9, evolution-11)
dep(say-6, is-12)
neg(is-12, n't-13)
complm(are-16, that-14)
nsubj(are-16, humans-15)
ccomp(is-12, are-16)
prep_from(are-16, chimpanzees-18)
nsubj(idea-24, it-20)
cop(idea-24, 's-21)
advmod(idea-24, just-22)
det(idea-24, an-23)
parataxis(say-6, idea-24)
mark(related-31, because-25)
poss(DNA-27, our-26)
nsubjpass(related-31, DNA-27)
aux(related-31, 's-28)
auxpass(related-31, are-29)
advmod(related-31, closely-30)
advcl(idea-24, related-31)

(ROOT
  (S
    (SBAR (IN Because) (, ,)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (ADJP (JJ right)))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN proof))
        (PP (IN of)
          (NP (NNP THAT)))))
    (. .)))

mark(right-5, Because-1)
nsubj(right-5, you-3)
cop(right-5, 're-4)
advcl(is-8, right-5)
expl(is-8, there-7)
root(ROOT-0, is-8)
det(proof-10, no-9)
nsubj(is-8, proof-10)
prep_of(proof-10, THAT-12)

(ROOT
  (S (CC But)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (NN proof))
        (PP (IN of)
          (NP
            (NP (NN evolution))
            (ADVP (PRP itself))))))
    (. .)))

cc('s-3, But-1)
expl('s-3, there-2)
root(ROOT-0, 's-3)
nsubj('s-3, proof-4)
prep_of(proof-4, evolution-6)
advmod(evolution-6, itself-7)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (VBZ has)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NN creationism))))))))
    (. .)))

cc(has-3, And-1)
nsubj(has-3, it-2)
root(ROOT-0, has-3)
dobj(has-3, nothing-4)
aux(do-6, to-5)
infmod(nothing-4, do-6)
prep_with(do-6, creationism-8)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN ignorance))
          (PP (IN in)
            (NP
              (NP (NN today) (POS 's))
              (NN society))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB merely))
        (NP
          (NP (DT all))
          (PP (IN about)
            (NP (`` ``)
              (NP
                (NP (NN science))
                (PP (IN vs.)
                  (NP (NN religion))))
              ('' '')
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (ADVP (RB again)))))))
          (, ,)
          (ADVP
            (NP (CD two))
            (RB totally))
          (NP
            (NP (JJ different) (NNS things))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD should) (RB n't)
                  (VP (VB be)
                    (VP (VBN combined)
                      (ADVP
                        (ADVP (RB as) (RB much))
                        (SBAR (IN as)
                          (S
                            (NP (PRP they))
                            (VP (VBP have)
                              (VP (VBN been)))))))))))))))
    (. .)))

nsubj(ignorance-4, This-1)
cop(ignorance-4, is-2)
det(ignorance-4, the-3)
root(ROOT-0, ignorance-4)
poss(society-8, today-6)
prep_in(ignorance-4, society-8)
nsubj(all-13, it-10)
cop(all-13, is-11)
advmod(all-13, merely-12)
conj_and(ignorance-4, all-13)
prep_about(all-13, science-16)
prep_vs.(science-16, religion-18)
nsubj(is-21, which-20)
rcmod(science-16, is-21)
advmod(is-21, again-22)
npadvmod(totally-25, two-24)
advmod(all-13, totally-25)
amod(things-27, different-26)
dep(all-13, things-27)
nsubjpass(combined-32, things-27)
aux(combined-32, should-29)
neg(combined-32, n't-30)
auxpass(combined-32, be-31)
rcmod(things-27, combined-32)
advmod(much-34, as-33)
advmod(combined-32, much-34)
mark(been-38, as-35)
nsubj(been-38, they-36)
aux(been-38, have-37)
ccomp(much-34, been-38)

