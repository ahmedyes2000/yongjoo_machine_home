(ROOT
  (S
    (ADVP (RB actually))
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADVP (RB simply))
      (VP (VBG looking)
        (NP (NNS backwards))))
    (. ...)))

advmod(looking-6, actually-1)
nsubj(looking-6, I-2)
aux(looking-6, 'm-3)
neg(looking-6, not-4)
advmod(looking-6, simply-5)
root(ROOT-0, looking-6)
dobj(looking-6, backwards-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG looking)
        (PP (IN at)
          (NP (PRP it)))
        (NP (NNP statistically) (. .))))
    (. .)))

nsubj(looking-3, I-1)
aux(looking-3, 'm-2)
root(ROOT-0, looking-3)
prep_at(looking-3, it-5)
dobj(looking-3, statistically-6)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (ADVP (RB simply))
          (VP (VBP think)
            (S
              (NP (DT that))
              (NP
                (NP (PDT all) (DT the) (NNS species))
                (PP (IN of)
                  (NP
                    (NP (NN life))
                    (CC and)
                    (NP (DT the) (NN universe)))))))))
      (NP (PRP itself))
      (VP (VBZ is)
        (ADJP (RB no) (JJR more))
        (PP (IN than)
          (NP
            (NP (DT a)
              (ADJP (RB very) (JJ lucky))
              (VBG flipping))
            (PP (IN of)
              (NP (JJ infinite) (NNS coins)))))
        (: ...)
        (FRAG
          (VP (VB be)
            (NP (PRP$ my) (NN guest))))))
    (CC but)
    (S
      (NP (DT the) (NN reasoning))
      (VP (VBZ is) (RB not)
        (ADJP (JJ sound))))
    (. .)))

mark(think-4, If-1)
nsubj(think-4, you-2)
advmod(think-4, simply-3)
advcl(more-17, think-4)
nsubj(species-8, that-5)
predet(species-8, all-6)
det(species-8, the-7)
xcomp(think-4, species-8)
prep_of(species-8, life-10)
det(universe-13, the-12)
prep_of(species-8, universe-13)
conj_and(life-10, universe-13)
nsubj(more-17, itself-14)
cop(more-17, is-15)
advmod(more-17, no-16)
root(ROOT-0, more-17)
det(lucky-21, a-19)
advmod(lucky-21, very-20)
prep_than(more-17, lucky-21)
amod(lucky-21, flipping-22)
amod(coins-25, infinite-24)
prep_of(lucky-21, coins-25)
cop(guest-29, be-27)
poss(guest-29, my-28)
dep(more-17, guest-29)
det(reasoning-32, the-31)
nsubj(sound-35, reasoning-32)
cop(sound-35, is-33)
neg(sound-35, not-34)
conj_but(more-17, sound-35)

(ROOT
  (S
    (PP (IN in)
      (NP
        (NP (DT the) (NN case))
        (PP (IN of)
          (NP
            (NP (DT the) (NN moon))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ is) (RB not)
                  (ADVP (RB only))
                  (NP
                    (NP (DT a) (NN necessity))
                    (PP (IN for)
                      (NP (NN life)))))))))))
    (NP
      (NP (DT the) (NN eclipse))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP 've)
            (VP (VBN mentioned))))))
    (VP (VBZ is)
      (ADJP (RB statistically) (JJ ridiculous)))
    (. .)))

det(case-3, the-2)
prep_in(ridiculous-23, case-3)
det(moon-6, the-5)
prep_of(case-3, moon-6)
nsubj(necessity-12, it-7)
cop(necessity-12, is-8)
neg(necessity-12, not-9)
advmod(necessity-12, only-10)
det(necessity-12, a-11)
rcmod(moon-6, necessity-12)
prep_for(necessity-12, life-14)
det(eclipse-16, the-15)
dobj(mentioned-20, eclipse-16)
nsubj(ridiculous-23, eclipse-16)
complm(mentioned-20, that-17)
nsubj(mentioned-20, I-18)
aux(mentioned-20, 've-19)
dep(eclipse-16, mentioned-20)
cop(ridiculous-23, is-21)
advmod(ridiculous-23, statistically-22)
root(ROOT-0, ridiculous-23)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP say)
        (SBAR
          (S
            (VP (VBZ is)
              (S
                (NP (PRP it))
                (`` ``)
                (ADJP (RB extremely) (JJ unlikely))
                ('' '')))))))
    (: ...)
    (FRAG
      (NP (NN no.))
      (. .))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
ccomp(say-2, is-3)
dep(unlikely-7, it-4)
advmod(unlikely-7, extremely-6)
dep(is-3, unlikely-7)
dep(say-2, no.-10)

(ROOT
  (S
    (NP (DT that))
    (VP (VBZ is)
      (VP (VBG putting)
        (NP (PRP it))
        (ADVP (RB ungodly))
        (ADVP (RB lightly))))
    (. .)))

nsubj(putting-3, that-1)
aux(putting-3, is-2)
root(ROOT-0, putting-3)
dobj(putting-3, it-4)
advmod(putting-3, ungodly-5)
advmod(putting-3, lightly-6)

(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBP look)
        (PP (IN at)
          (NP (PRP it)))
        (PP (IN as)
          (S
            (ADVP (RB simply))
            (VP (VBG being)
              (UCP (`` ``)
                (ADJP (JJ improbable))
                ('' '')
                (CC but)
                (ADJP (RB so))
                (NP (WP what))))))))
    (: ...)))

mark(look-3, If-1)
nsubj(look-3, you-2)
root(ROOT-0, look-3)
prep_at(look-3, it-5)
advmod(being-8, simply-7)
prepc_as(look-3, being-8)
dep(being-8, improbable-10)
dep(being-8, so-13)
conj_but(improbable-10, so-13)
dep(improbable-10, what-14)

(ROOT
  (S
    (ADVP (RB then))
    (NP (DT that))
    (VP (VBZ 's)
      (NP (PRP$ your) (NN choice)))
    (. .)))

advmod(choice-5, then-1)
nsubj(choice-5, that-2)
cop(choice-5, 's-3)
poss(choice-5, your-4)
root(ROOT-0, choice-5)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (NP
        (NP (DT no) (JJ real) (NN choice))
        (CC but)
        (S
          (VP (TO to) (`` ``)
            (VP (VB look)
              (ADVP (RB backwards) ('' ''))
              (SBAR (IN so)
                (S
                  (PP (IN in)
                    (NP (JJ other) (NNS words)))
                  (NP (DT any) (NN evidence))
                  (VP (VBZ is) (RB not)
                    (NP
                      (NP (NN evidence))
                      (PP (IN for)
                        (NP (PRP you))))))))))))
    (. .)))

nsubj(have-2, We-1)
root(ROOT-0, have-2)
det(choice-5, no-3)
amod(choice-5, real-4)
dobj(have-2, choice-5)
aux(look-9, to-7)
dobj(have-2, look-9)
conj_but(choice-5, look-9)
infmod(choice-5, look-9)
advmod(look-9, backwards-10)
mark(evidence-20, so-12)
amod(words-15, other-14)
prep_in(evidence-20, words-15)
det(evidence-17, any-16)
nsubj(evidence-20, evidence-17)
cop(evidence-20, is-18)
neg(evidence-20, not-19)
advcl(look-9, evidence-20)
prep_for(evidence-20, you-22)

(ROOT
  (S
    (NP (NNP DNA))
    (VP (MD could)
      (VP (VB be)
        (VP (VBN called)
          (ADJP (`` ``) (RB highly) (VBN unlikely) ('' '')))))
    (. .) (. .)))

nsubjpass(called-4, DNA-1)
aux(called-4, could-2)
auxpass(called-4, be-3)
root(ROOT-0, called-4)
advmod(unlikely-7, highly-6)
acomp(called-4, unlikely-7)

(ROOT
  (S (CC and)
    (ADVP (RB so))
    (VP (MD could)
      (VP (VB matter)
        (S
          (VP
            (VP (VBG spewing)
              (PRT (RP out)))
            (CC and)
            (VP (VBG forming)
              (NP (JJ entire) (NNS universes)))))))
    (: ...)))

cc(matter-4, and-1)
advmod(matter-4, so-2)
aux(matter-4, could-3)
root(ROOT-0, matter-4)
ccomp(matter-4, spewing-5)
prt(spewing-5, out-6)
ccomp(matter-4, forming-8)
conj_and(spewing-5, forming-8)
amod(universes-10, entire-9)
dobj(forming-8, universes-10)

(ROOT
  (S
    (NP (DT this))
    (VP (VBZ is) (`` ``)
      (NP (DT the) (JJ gamblers) (NN fallacy))
      ('' ''))
    (. .)))

nsubj(fallacy-6, this-1)
cop(fallacy-6, is-2)
det(fallacy-6, the-4)
amod(fallacy-6, gamblers-5)
root(ROOT-0, fallacy-6)

