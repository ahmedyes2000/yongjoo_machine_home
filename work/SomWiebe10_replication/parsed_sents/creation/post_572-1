(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (NN life))
        (VP (VBZ is)
          (PP (TO to)
            (NP (NN complex)))
          (S
            (VP (TO to)
              (VP (VB come)
                (ADVP (IN about)
                  (PP (IN without)
                    (NP (DT a) (NN designer))
                    (ADVP (RB then))))
                (PP (IN by)
                  (NP (NN definition)))))))))
    (NP (DT that) (NN designer))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP (JJ alive))))
    (. .)))

mark(is-3, Because-1)
nsubj(is-3, life-2)
xsubj(come-7, life-2)
advcl(alive-20, is-3)
prep_to(is-3, complex-5)
aux(come-7, to-6)
xcomp(is-3, come-7)
advmod(come-7, about-8)
det(designer-11, a-10)
prep_without(about-8, designer-11)
advmod(about-8, then-12)
prep_by(come-7, definition-14)
det(designer-16, that-15)
nsubj(alive-20, designer-16)
aux(alive-20, can-17)
neg(alive-20, not-18)
cop(alive-20, be-19)
root(ROOT-0, alive-20)

