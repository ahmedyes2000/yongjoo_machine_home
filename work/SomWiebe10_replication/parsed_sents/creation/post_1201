(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (NN eye) (NN witness))
        (, ,)
        (NP
          (NP (JJ reproducable) (NN evidence))
          (PP (IN for)
            (NP (`` ``) (JJ micro) ('' '') (NN evolution))))
        (CC or)
        (NP
          (NP (NN change))
          (PP (IN within)
            (NP
              (NP (DT a) (NN species))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ irrefutable))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nn(witness-4, eye-3)
nsubj(is-2, witness-4)
amod(evidence-7, reproducable-6)
nsubj(is-2, evidence-7)
conj_or(witness-4, evidence-7)
amod(evolution-12, micro-10)
prep_for(evidence-7, evolution-12)
nsubj(is-2, change-14)
conj_or(witness-4, change-14)
det(species-17, a-16)
prep_within(change-14, species-17)
nsubj(irrefutable-20, species-17)
cop(irrefutable-20, is-19)
rcmod(species-17, irrefutable-20)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (NP (DT the) (NN goo))
      (PP (TO to)
        (NP (PRP you)))
      (PP (IN via)
        (NP
          (NP (DT the) (NN zoo) (NN evolution))
          (CC or)
          (NP (`` ``) (JJ macro) ('' '') (NN evolution)))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN theory))
        (PP (IN with)
          (NP
            (NP (NN way))
            (PP (TO to)
              (NP
                (NP (JJ many) (NNS holes))
                (PP (IN in)
                  (NP (PRP it)))))))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN considered)
                (S
                  (ADJP (JJ plausable)))))))))
    (. .)))

advmod(theory-18, However-1)
det(goo-4, the-3)
nsubj(theory-18, goo-4)
prep_to(goo-4, you-6)
det(evolution-10, the-8)
nn(evolution-10, zoo-9)
prep_via(goo-4, evolution-10)
amod(evolution-15, macro-13)
prep_via(goo-4, evolution-15)
conj_or(evolution-10, evolution-15)
cop(theory-18, is-16)
det(theory-18, a-17)
root(ROOT-0, theory-18)
prep_with(theory-18, way-20)
amod(holes-23, many-22)
prep_to(way-20, holes-23)
prep_in(holes-23, it-25)
aux(considered-28, to-26)
auxpass(considered-28, be-27)
infmod(theory-18, considered-28)
acomp(considered-28, plausable-29)

(ROOT
  (S
    (NP
      (NP (NNP Micro) (NN evolution))
      (SBAR
        (S
          (S
            (INTJ (UH yes))
            (, ,)
            (S
              (NP (NNS girraffes) (NNS necks))
              (VP (MD might)
                (VP (VB have)
                  (VP (VBN grown)
                    (ADVP (RB longer)
                      (PP (IN over)
                        (NP (NN time))))
                    (S
                      (VP (TO to)
                        (VP
                          (ADVP (RBR better))
                          (VB enable)
                          (S
                            (NP (PRP them))
                            (VP (TO to)
                              (VP (VB reach)
                                (NP (NN tree) (NNS branches))))))))))))
            (, ,)
            (S
              (S
                (NP
                  (NP
                    (NP (DT a) (NN cheetah) (POS 's))
                    (NN sense))
                  (PP (IN of)
                    (NP (NN sight)
                      (CC and)
                      (NN smell))))
                (VP (MD could)
                  (VP (VB have)
                    (VP (VBN developed)
                      (PP (IN over)
                        (NP (NN time)))
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (S
                              (NP (PRP him))
                              (NP (DT a) (JJR better) (NN hunter))))))))))
              (, ,)
              (CC and)
              (S
                (NP (NNS humans))
                (VP (MD might)
                  (VP (VB have)
                    (NP
                      (NP (JJR less) (NN body) (NN hair))
                      (PP (IN than)
                        (NP (PRP$ our) (NNS ancestors))))
                    (ADVP (NNS thanks)
                      (PP (TO to)
                        (NP (NN airconditioning\/heating)))))))))
          (CC and)
          (S
            (NP (DT the) (NN fact))
            (NP (PRP we))))))
    (ADVP (RB now))
    (VP
      (VP (VBP live)
        (ADVP (RB indoors)))
      (CC and)
      (VP (VBP wear)
        (NP (JJR more) (NNS cloths))))
    (. .)))

nn(evolution-2, Micro-1)
nsubj(live-60, evolution-2)
nsubj(wear-63, evolution-2)
dep(grown-9, yes-3)
nn(necks-6, girraffes-5)
nsubj(grown-9, necks-6)
xsubj(enable-15, necks-6)
aux(grown-9, might-7)
aux(grown-9, have-8)
rcmod(evolution-2, grown-9)
advmod(grown-9, longer-10)
prep_over(longer-10, time-12)
aux(enable-15, to-13)
advmod(enable-15, better-14)
xcomp(grown-9, enable-15)
nsubj(reach-18, them-16)
aux(reach-18, to-17)
xcomp(enable-15, reach-18)
nn(branches-20, tree-19)
dobj(reach-18, branches-20)
det(cheetah-23, a-22)
poss(sense-25, cheetah-23)
nsubj(developed-32, sense-25)
xsubj(make-36, sense-25)
prep_of(sense-25, sight-27)
prep_of(sense-25, smell-29)
conj_and(sight-27, smell-29)
aux(developed-32, could-30)
aux(developed-32, have-31)
dep(grown-9, developed-32)
prep_over(developed-32, time-34)
aux(make-36, to-35)
xcomp(developed-32, make-36)
nsubj(hunter-40, him-37)
det(hunter-40, a-38)
amod(hunter-40, better-39)
xcomp(make-36, hunter-40)
nsubj(have-45, humans-43)
aux(have-45, might-44)
dep(grown-9, have-45)
conj_and(developed-32, have-45)
amod(hair-48, less-46)
nn(hair-48, body-47)
dobj(have-45, hair-48)
poss(ancestors-51, our-50)
prep_than(hair-48, ancestors-51)
prep_thanks_to(have-45, airconditioning\/heating-54)
det(fact-57, the-56)
dep(we-58, fact-57)
rcmod(evolution-2, we-58)
conj_and(grown-9, we-58)
advmod(live-60, now-59)
root(ROOT-0, live-60)
advmod(live-60, indoors-61)
conj_and(live-60, wear-63)
amod(cloths-65, more-64)
dobj(wear-63, cloths-65)

(ROOT
  (S (CC But)
    (S
      (S
        (NP (DT a) (NN girraffe))
        (VP (VBZ is)
          (ADVP (RB still))
          (NP (DT a) (NN girraffe))))
      (, ,)
      (CC and)
      (S
        (NP (DT a) (NN cheetah))
        (VP (VBZ is)
          (ADVP (RB still))
          (NP (DT a) (NN cheetah)))))
    (CC and)
    (S
      (NP (DT a) (NN human))
      (VP (VBZ is)
        (ADVP (RB still))
        (NP (DT a) (NN human))))
    (. .)))

det(girraffe-3, a-2)
nsubj(girraffe-7, girraffe-3)
cop(girraffe-7, is-4)
advmod(girraffe-7, still-5)
det(girraffe-7, a-6)
root(ROOT-0, girraffe-7)
det(cheetah-11, a-10)
nsubj(cheetah-15, cheetah-11)
cop(cheetah-15, is-12)
advmod(cheetah-15, still-13)
det(cheetah-15, a-14)
conj_and(girraffe-7, cheetah-15)
det(human-18, a-17)
nsubj(human-22, human-18)
cop(human-22, is-19)
advmod(human-22, still-20)
det(human-22, a-21)
conj_and(girraffe-7, human-22)

(ROOT
  (S
    (NP (NNS Sharks))
    (VP (VBP have)
      (VP (VBN been)
        (NP
          (NP (DT the) (JJ same))
          (PP (IN since)
            (NP
              (NP (DT the) (NN time))
              (PP (IN of)
                (NP (DT the) (NNS dinasors))))))
        (PP (IN with)
          (NP
            (NP (RB little))
            (CC or)
            (NP (DT no) (NN change))))))
    (: ...)))

nsubj(same-5, Sharks-1)
aux(same-5, have-2)
cop(same-5, been-3)
det(same-5, the-4)
root(ROOT-0, same-5)
det(time-8, the-7)
prep_since(same-5, time-8)
det(dinasors-11, the-10)
prep_of(time-8, dinasors-11)
prep(same-5, with-12)
pobj(with-12, little-13)
det(change-16, no-15)
pobj(with-12, change-16)
conj_or(little-13, change-16)

(ROOT
  (S
    (NP (NNP Macro))
    (VP (VBZ evolution) (RB not)
      (VP (VB plausable)))
    (. .)))

nsubj(evolution-2, Macro-1)
root(ROOT-0, evolution-2)
neg(evolution-2, not-3)
dep(evolution-2, plausable-4)

(ROOT
  (S
    (S
      (LST (LS 1) (-RRB- -RRB-))
      (NP (NN macro) (NN evolution))
      (VP (MD can) (RB not)
        (VP (VB explain)
          (NP (JJ first) (NN life)))))
    (, ,)
    (CC or)
    (S
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (JJ non-intelligent) (NNS lifeless))
          (VP (VBP matter)
            (PP (IN through)
              (NP
                (NP (NN nature))
                (PRN (-LRB- -LRB-)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (PP (IN by)
                        (NP (NN nature)))
                      (VP (VBZ randomizes))))
                  (-RRB- -RRB-)))))))
      (VP (MD could)
        (VP (VB have)
          (VP (VBN created)
            (NP
              (NP (DT the) (JJ first) (NN life))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP we))
                  (ADVP (RB now))
                  (VP (VBP know)
                    (SBAR
                      (S
                        (NP (JJ thru) (NN DNA)
                          (CC and)
                          (NN protien) (NNS sequences))
                        (VP (VBD had)
                          (NP (DT a)
                            (ADJP (RB highly) (JJ intelligent)
                              (CC and)
                              (JJ spacific))
                            (NN design)))))))))))))
    (. .)))

dep(explain-7, 1-1)
nn(evolution-4, macro-3)
nsubj(explain-7, evolution-4)
aux(explain-7, can-5)
neg(explain-7, not-6)
root(ROOT-0, explain-7)
amod(life-9, first-8)
dobj(explain-7, life-9)
advmod(matter-15, how-12)
amod(lifeless-14, non-intelligent-13)
nsubj(matter-15, lifeless-14)
csubj(created-26, matter-15)
prep_through(matter-15, nature-17)
nsubj(randomizes-22, which-19)
prep_by(randomizes-22, nature-21)
dep(nature-17, randomizes-22)
aux(created-26, could-24)
aux(created-26, have-25)
conj_or(explain-7, created-26)
det(life-29, the-27)
amod(life-29, first-28)
dobj(created-26, life-29)
dobj(had-39, life-29)
rel(know-33, which-30)
nsubj(know-33, we-31)
advmod(know-33, now-32)
rcmod(life-29, know-33)
amod(DNA-35, thru-34)
nsubj(had-39, DNA-35)
nn(sequences-38, protien-37)
conj_and(DNA-35, sequences-38)
nsubj(had-39, sequences-38)
ccomp(know-33, had-39)
det(design-45, a-40)
advmod(intelligent-42, highly-41)
amod(design-45, intelligent-42)
conj_and(intelligent-42, spacific-44)
amod(design-45, spacific-44)
dobj(had-39, design-45)

(ROOT
  (S
    (NP
      (NP (NN Creation))
      (CC or)
      (NP (JJ intelligent) (NN design) (NN theory)))
    (VP (VBZ fits)
      (ADVP (RB perfectly)))
    (. .)))

nsubj(fits-6, Creation-1)
amod(theory-5, intelligent-3)
nn(theory-5, design-4)
conj_or(Creation-1, theory-5)
nsubj(fits-6, theory-5)
root(ROOT-0, fits-6)
advmod(fits-6, perfectly-7)

(ROOT
  (S
    (LST (LS 2) (-RRB- -RRB-))
    (NP (NN macro) (NN evolution))
    (VP (MD can) (RB not)
      (VP (VB explain)
        (NP
          (NP (DT the) (NN viability))
          (PP (IN of)
            (NP (JJ transitional) (NNS forms))))))
    (. .)))

dep(explain-7, 2-1)
nn(evolution-4, macro-3)
nsubj(explain-7, evolution-4)
aux(explain-7, can-5)
neg(explain-7, not-6)
root(ROOT-0, explain-7)
det(viability-9, the-8)
dobj(explain-7, viability-9)
amod(forms-12, transitional-11)
prep_of(viability-9, forms-12)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (JJ other) (NNS words))
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (MD could))))))
    (NP (DT a) (NN half))
    (VP (VBD lizard)
      (SBAR
        (S
          (NP (DT half) (NN bird))
          (VP (VBP survive)))))
    (. .)))

amod(words-3, other-2)
prep_in(lizard-8, words-3)
advmod(could-5, how-4)
dep(words-3, could-5)
det(half-7, a-6)
nsubj(lizard-8, half-7)
root(ROOT-0, lizard-8)
det(bird-10, half-9)
nsubj(survive-11, bird-10)
ccomp(lizard-8, survive-11)

(ROOT
  (S
    (NP (JJ Creation\/intelligent) (NN design))
    (VP (VBZ does) (RB n't)
      (VP (VB need)
        (NP (DT this) (NN step))))
    (. .)))

amod(design-2, Creation\/intelligent-1)
nsubj(need-5, design-2)
aux(need-5, does-3)
neg(need-5, n't-4)
root(ROOT-0, need-5)
det(step-7, this-6)
dobj(need-5, step-7)

(ROOT
  (S (CC And)
    (NP (DT the) (JJ fossil) (NN record))
    (VP (VBZ is)
      (NP
        (NP (NN proof))
        (PP
          (PP (IN for)
            (NP (NN creation\/ID)))
          (CC and)
          (RB completely)
          (PP (IN against)
            (NP (NN evolution))))))
    (. .)))

cc(proof-6, And-1)
det(record-4, the-2)
amod(record-4, fossil-3)
nsubj(proof-6, record-4)
cop(proof-6, is-5)
root(ROOT-0, proof-6)
prep(proof-6, for-7)
pobj(for-7, creation\/ID-8)
prep(proof-6, completely-10)
advmod(for-7, completely-10)
conj_and(for-7, completely-10)
dep(for-7, against-11)
pobj(against-11, evolution-12)

(ROOT
  (S
    (NP (DT The) (JJ fossil) (NN record))
    (VP (VBZ shows)
      (SBAR
        (S
          (NP (DT all) (NN life))
          (VP
            (VP (VBD came)
              (PP (IN into)
                (NP (NN existance)))
              (ADVP (DT all) (IN at) (RB once)))
            (CC and)
            (ADVP (RB fully))
            (VP (VBD formed)
              (ADVP (RB sometime))
              (PP (IN between)
                (NP (CD 600millionBC)
                  (CC and)
                  (CD 500millionBC))))))))
    (. .)))

det(record-3, The-1)
amod(record-3, fossil-2)
nsubj(shows-4, record-3)
root(ROOT-0, shows-4)
det(life-6, all-5)
nsubj(came-7, life-6)
nsubj(formed-15, life-6)
ccomp(shows-4, came-7)
prep_into(came-7, existance-9)
pobj(at-11, all-10)
advmod(came-7, at-11)
advmod(at-11, once-12)
ccomp(shows-4, fully-14)
advmod(came-7, fully-14)
conj_and(came-7, fully-14)
ccomp(shows-4, formed-15)
conj_and(came-7, formed-15)
advmod(formed-15, sometime-16)
prep_between(formed-15, 600millionBC-18)
prep_between(formed-15, 500millionBC-20)
conj_and(600millionBC-18, 500millionBC-20)

(ROOT
  (S
    (SBAR
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN life) (POS 's))
          (JJ big) (NN bang))
        (-RRB- -RRB-))
      (S
        (NP (EX there))
        (VP (VBP have)
          (VP (VBN been)
            (NP
              (NP (DT NO) (NNS fossils))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP have)
                    (VP (VBN shown)
                      (NP (NNP ANY) (JJ transitional) (NNS forms)))))))))))
    (, ,)
    (NP
      (ADJP (RB much) (RBR less) (JJ viable))
      (NNS transitional))
    (VP (VBZ forms))
    (: ...)))

poss(bang-5, life-2)
amod(bang-5, big-4)
dep(fossils-11, bang-5)
expl(fossils-11, there-7)
aux(fossils-11, have-8)
cop(fossils-11, been-9)
det(fossils-11, NO-10)
nsubj(shown-14, fossils-11)
dep(forms-23, fossils-11)
aux(shown-14, have-13)
rcmod(fossils-11, shown-14)
nn(forms-17, ANY-15)
amod(forms-17, transitional-16)
dobj(shown-14, forms-17)
advmod(viable-21, much-19)
advmod(viable-21, less-20)
amod(transitional-22, viable-21)
nsubj(forms-23, transitional-22)
root(ROOT-0, forms-23)

