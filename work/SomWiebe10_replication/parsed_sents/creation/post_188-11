(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (PRP it))
      (VP (MD can)
        (VP (VB be)
          (ADVP (IN at) (JJS least))
          (VP
            (ADVP (RB partially))
            (VBN excused)
            (PP (IN by)
              (S
                (VP (VBG observing)
                  (SBAR (IN that)
                    (S
                      (NP (NNP Jay))
                      (VP (VBZ is) (RB not)
                        (NP (DT a) (NN biologist))))))))))))
    (CC and)
    (S
      (ADVP (RB thus))
      (NP (PRP he))
      (VP (MD may)
        (VP (VB have)
          (VP (VBN failed)
            (S
              (VP (TO to)
                (VP (VB appreciate)
                  (NP
                    (NP (NNP Gould) (POS 's))
                    (NNS statements)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBP are) (RB not)
                          (ADJP (NN contradictory)))))))))))))
    (. .)))

advmod(excused-8, Now-1)
nsubjpass(excused-8, it-2)
aux(excused-8, can-3)
auxpass(excused-8, be-4)
advmod(excused-8, at-5)
pobj(at-5, least-6)
advmod(excused-8, partially-7)
root(ROOT-0, excused-8)
agent(excused-8, observing-10)
complm(biologist-16, that-11)
nsubj(biologist-16, Jay-12)
cop(biologist-16, is-13)
neg(biologist-16, not-14)
det(biologist-16, a-15)
ccomp(observing-10, biologist-16)
advmod(failed-22, thus-18)
nsubj(failed-22, he-19)
xsubj(appreciate-24, he-19)
aux(failed-22, may-20)
aux(failed-22, have-21)
conj_and(excused-8, failed-22)
aux(appreciate-24, to-23)
xcomp(failed-22, appreciate-24)
poss(statements-27, Gould-25)
dobj(appreciate-24, statements-27)
nsubj(contradictory-31, which-28)
cop(contradictory-31, are-29)
neg(contradictory-31, not-30)
rcmod(Gould-25, contradictory-31)
ccomp(statements-27, contradictory-31)

