(ROOT
  (S
    (S
      (NP (PRP It))
      (ADVP (RB only))
      (VP (VBZ takes)
        (S
          (NP (CD one) (NN replicator) (NN molecule))
          (VP (TO to)
            (VP (VB start)
              (NP (DT the) (JJ entire) (NN process)))))))
    (, ,)
    (CC and)
    (S
      (PP (VBN given)
        (NP
          (NP (DT the) (NN number))
          (PP (IN of)
            (NP
              (NP (NNS molecules))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD would)
                    (VP (VB have)
                      (VP (VBN been)
                        (VP (VBG swirling)
                          (PRT (RP around))
                          (PP (IN in)
                            (NP (DT the) (JJ ancient) (NNS earths) (NNS oceans)))))))))))))
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB quite) (JJ possible))
        (SBAR (IN that)
          (S
            (NP (RB somewhere) (DT a) (NN replicator))
            (VP (MD will)
              (VP (VB form)))))))
    (: ...)))

nsubj(takes-3, It-1)
advmod(takes-3, only-2)
root(ROOT-0, takes-3)
num(molecule-6, one-4)
nn(molecule-6, replicator-5)
nsubj(start-8, molecule-6)
aux(start-8, to-7)
xcomp(takes-3, start-8)
det(process-11, the-9)
amod(process-11, entire-10)
dobj(start-8, process-11)
prep(possible-33, given-14)
det(number-16, the-15)
dep(given-14, number-16)
prep_of(number-16, molecules-18)
nsubj(swirling-23, molecules-18)
aux(swirling-23, would-20)
aux(swirling-23, have-21)
aux(swirling-23, been-22)
rcmod(molecules-18, swirling-23)
prt(swirling-23, around-24)
det(oceans-29, the-26)
amod(oceans-29, ancient-27)
nn(oceans-29, earths-28)
prep_in(swirling-23, oceans-29)
nsubj(possible-33, it-30)
cop(possible-33, is-31)
advmod(possible-33, quite-32)
conj_and(takes-3, possible-33)
complm(form-39, that-34)
advmod(replicator-37, somewhere-35)
det(replicator-37, a-36)
nsubj(form-39, replicator-37)
aux(form-39, will-38)
ccomp(possible-33, form-39)

