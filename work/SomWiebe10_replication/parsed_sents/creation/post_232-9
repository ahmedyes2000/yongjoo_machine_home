(ROOT
  (S
    (S
      (NP (NNP Behe))
      (VP (VBD was)
        (VP (VBN forced)
          (S
            (VP (TO to)
              (VP (VB write)
                (NP
                  (NP (DT a) (JJ laughable) (NN response))
                  (PRN (-LRB- -LRB-)
                    (NP (CD http:\/\/www.amazon.com\/gp\/blog\/post\/PLNK3U696N278Z93O))
                    (-RRB- -RRB-))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD dodged)
                        (NP (DT the) (NNS implications))))))
                (PRN (-LRB- -LRB-)
                  (S
                    (NP
                      (NP (NN evolution) (RB even))
                      (PP (IN in)
                        (NP (DT a) (JJ limited) (NN lab) (NN population))))
                    (VP (MD can)
                      (VP (VB produce)
                        (NP (DT a) (JJ new) (JJ beneficial) (NN system))
                        (, ,)
                        (S
                          (VP (VBG i.e.)
                            (NP
                              (NP (DT an) (NN improvement))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBD was) (RB not)
                                    (ADJP (`` ``) (JJ degradative) ('' '')))))))))))
                  (-RRB- -RRB-))))))))
    (, ,)
    (CC but)
    (S (, ,)
      (PP (IN as)
        (PP (IN per)
          (NP (PRP$ his) (JJ modus) (NNS operandi))))
      (, ,)
      (NP (PRP he))
      (VP (MD will)
        (VP
          (VP (VB dance)
            (CC and)
            (VB redefine)
            (NP (PRP$ his) (NNS terms)))
          (CONJP (RB rather) (IN than))
          (VP (VB admit)
            (SBAR (IN that)
              (S
                (NP
                  (NP (PRP$ his) (NN argument))
                  (PP (IN against)
                    (NP (NN evolution))))
                (VP (VBZ has)
                  (VP (VBN been)
                    (VP (VBN falsified))))))))))
    (. .)))

nsubjpass(forced-3, Behe-1)
xsubj(write-5, Behe-1)
auxpass(forced-3, was-2)
root(ROOT-0, forced-3)
aux(write-5, to-4)
xcomp(forced-3, write-5)
det(response-8, a-6)
amod(response-8, laughable-7)
dobj(write-5, response-8)
nsubj(dodged-13, response-8)
appos(response-8, http:\/\/www.amazon.com\/gp\/blog\/post\/PLNK3U696N278Z93O-10)
rcmod(response-8, dodged-13)
det(implications-15, the-14)
dobj(dodged-13, implications-15)
nsubj(produce-25, evolution-17)
advmod(evolution-17, even-18)
det(population-23, a-20)
amod(population-23, limited-21)
nn(population-23, lab-22)
prep_in(evolution-17, population-23)
aux(produce-25, can-24)
parataxis(write-5, produce-25)
det(system-29, a-26)
amod(system-29, new-27)
amod(system-29, beneficial-28)
dobj(produce-25, system-29)
partmod(produce-25, i.e.-31)
xcomp(produce-25, i.e.-31)
det(improvement-33, an-32)
dobj(i.e.-31, improvement-33)
nsubj(degradative-38, improvement-33)
cop(degradative-38, was-35)
neg(degradative-38, not-36)
rcmod(improvement-33, degradative-38)
prepc_as_per(dance-52, per-45)
poss(operandi-48, his-46)
amod(operandi-48, modus-47)
pobj(dance-52, operandi-48)
nsubj(dance-52, he-50)
nsubj(redefine-54, he-50)
nsubj(admit-59, he-50)
aux(dance-52, will-51)
conj_but(forced-3, dance-52)
conj_but(forced-3, redefine-54)
conj_and(dance-52, redefine-54)
poss(terms-56, his-55)
dobj(dance-52, terms-56)
conj_but(forced-3, admit-59)
conj_negcc(dance-52, admit-59)
complm(falsified-67, that-60)
poss(argument-62, his-61)
nsubjpass(falsified-67, argument-62)
prep_against(argument-62, evolution-64)
aux(falsified-67, has-65)
auxpass(falsified-67, been-66)
ccomp(admit-59, falsified-67)

