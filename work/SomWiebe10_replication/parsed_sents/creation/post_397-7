(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (ADVP (RB literally))
      (NP
        (NP (NN nothing))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ gives)
              (S
                (VP (VBG meaning)
                  (PP (TO to)
                    (NP (DT those) (NNS notions)))))))))
      (, ,)
      (SBAR (IN once)
        (S
          (NP (PRP you))
          (VP (VBP grasp)
            (SBAR (IN that)
              (S
                (NP (NN everything))
                (VP
                  (VP (VBZ has)
                    (NP (DT an) (NN identity)))
                  (CC and)
                  (VP (VBZ behaves)
                    (PP (VBG according)
                      (PP (TO to)
                        (NP (PRP$ its) (NN nature))))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
advmod('s-2, literally-3)
nsubj('s-2, nothing-4)
nsubj(gives-6, nothing-4)
rcmod(nothing-4, gives-6)
xcomp(gives-6, meaning-7)
det(notions-10, those-9)
prep_to(meaning-7, notions-10)
mark(grasp-14, once-12)
nsubj(grasp-14, you-13)
advcl('s-2, grasp-14)
complm(has-17, that-15)
nsubj(has-17, everything-16)
nsubj(behaves-21, everything-16)
ccomp(grasp-14, has-17)
det(identity-19, an-18)
dobj(has-17, identity-19)
ccomp(grasp-14, behaves-21)
conj_and(has-17, behaves-21)
prepc_according_to(behaves-21, to-23)
poss(nature-25, its-24)
pobj(behaves-21, nature-25)

