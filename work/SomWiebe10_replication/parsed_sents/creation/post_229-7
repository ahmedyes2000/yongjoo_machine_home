(ROOT
  (S
    (S
      (NP
        (NP (NNP Optimization))
        (PP (IN for)
          (NP (JJ specific)
            (ADJP (JJ binding) (TO to) (JJ substrate))
            (NN A))))
      (VP (MD will)
        (ADVP (RB often))
        (PRN (-LRB- -LRB-)
          (FRAG (RB not)
            (ADVP (RB always)))
          (-RRB- -RRB-))
        (VP (VB decrease)
          (ADJP (JJ binding)
            (S
              (VP (TO to)
                (VP (VB substrate)
                  (NP (NNP B.)))))))))
    (CC But)
    (S
      (PP (IN on)
        (NP (DT this) (NN standard)))
      (, ,)
      (NP
        (NP (DT a) (JJ great) (NN number))
        (PP (IN of)
          (NP
            (NP (JJ evolutionary) (NNS changes))
            (SBAR (IN that)
              (S
                (NP (NNP Behe))
                (ADVP (RB surely))
                (VP (MD would)
                  (VP (VB consider)
                    (NP (`` ``) (NNS improvements) ('' '')))))))))
      (VP (MD would)
        (ADVP (RB actually))
        (VP (VB be) (`` ``)
          (ADJP (JJ degradative)))))
    (. .)))

nsubj(decrease-14, Optimization-1)
amod(A-7, specific-3)
amod(substrate-6, binding-4)
dep(substrate-6, to-5)
amod(A-7, substrate-6)
prep_for(Optimization-1, A-7)
aux(decrease-14, will-8)
advmod(decrease-14, often-9)
dep(decrease-14, not-11)
dep(not-11, always-12)
root(ROOT-0, decrease-14)
acomp(decrease-14, binding-15)
aux(substrate-17, to-16)
xcomp(binding-15, substrate-17)
dobj(substrate-17, B.-18)
det(standard-22, this-21)
prep_on(degradative-42, standard-22)
det(number-26, a-24)
amod(number-26, great-25)
nsubj(degradative-42, number-26)
amod(changes-29, evolutionary-28)
prep_of(number-26, changes-29)
complm(consider-34, that-30)
nsubj(consider-34, Behe-31)
advmod(consider-34, surely-32)
aux(consider-34, would-33)
dep(changes-29, consider-34)
dobj(consider-34, improvements-36)
aux(degradative-42, would-38)
advmod(degradative-42, actually-39)
cop(degradative-42, be-40)
conj_but(decrease-14, degradative-42)

