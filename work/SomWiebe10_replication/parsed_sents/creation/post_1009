(ROOT
  (S
    (NP (NNP Evolution))
    (VP (VBZ has) (RB not)
      (VP (`` ``) (VBN ceased) ('' '')
        (PP (IN in)
          (NP (DT any) (NN animal)))))
    (. .)))

nsubj(ceased-5, Evolution-1)
aux(ceased-5, has-2)
neg(ceased-5, not-3)
root(ROOT-0, ceased-5)
det(animal-9, any-8)
prep_in(ceased-5, animal-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADJP
              (NP (DT a) (RB little))
              (JJ delusional)
              (PP (IN on)
                (NP (DT the) (NN subject))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(delusional-7, you-3)
cop(delusional-7, are-4)
det(little-6, a-5)
npadvmod(delusional-7, little-6)
ccomp(think-2, delusional-7)
det(subject-10, the-9)
prep_on(delusional-7, subject-10)

(ROOT
  (S
    (SBAR
      (ADVP (RB Also))
      (IN if)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP (DT a) (JJ half) (JJ human) (NN half) (NN monkey))
                (NP (NN today))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP (JJ gonna)
        (SBAR
          (S
            (VP (VBP have)
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP
                      (NP (NN sex))
                      (PP (IN with)
                        (NP
                          (NP (DT a) (NN monkey))
                          (PRN (-LRB- -LRB-)
                            (SBAR (IN although)
                              (S
                                (NP (FW i))
                                (VP (VBP am)
                                  (ADJP (JJ unsure)
                                    (SBAR (IN if)
                                      (S
                                        (NP (DT that))
                                        (VP (MD would)
                                          (VP (VB work)
                                            (PRT (RP out))))))))))
                            (-RRB- -RRB-)))))))))))))
    (. .)))

advmod(want-4, Also-1)
dep(want-4, if-2)
nsubj(want-4, you-3)
xsubj(see-6, you-3)
advcl(gonna-16, want-4)
aux(see-6, to-5)
xcomp(want-4, see-6)
det(monkey-11, a-7)
amod(monkey-11, half-8)
amod(monkey-11, human-9)
nn(monkey-11, half-10)
dobj(see-6, monkey-11)
tmod(see-6, today-12)
nsubj(gonna-16, you-14)
cop(gonna-16, 're-15)
root(ROOT-0, gonna-16)
dep(gonna-16, have-17)
aux(have-19, to-18)
xcomp(have-17, have-19)
dobj(have-19, sex-20)
det(monkey-23, a-22)
prep_with(sex-20, monkey-23)
mark(unsure-28, although-25)
nsubj(unsure-28, i-26)
cop(unsure-28, am-27)
dep(monkey-23, unsure-28)
mark(work-32, if-29)
nsubj(work-32, that-30)
aux(work-32, would-31)
ccomp(unsure-28, work-32)
prt(work-32, out-33)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (PRP me))
          (VP
            (VP (VB clear)
              (NP (DT this))
              (PRT (RP up))
              (PP (IN for)
                (NP (PRP you))))
            (: :)
            (VP
              (NP
                (NP (DT The) (NN transition))
                (PP (IN of)
                  (NP (`` ``) (NN ape) ('' ''))))
              (PP (TO to)
                (NP (NN homo) (NNS sapiens))))))))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (NN process))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ occurs)
              (PP (IN through)
                (NP (CD one) (NN generation))))))))
    (. .)))

csubj(process-21, Let-1)
nsubj(clear-3, me-2)
ccomp(Let-1, clear-3)
dobj(clear-3, this-4)
prt(clear-3, up-5)
prep_for(clear-3, you-7)
det(transition-10, The-9)
dep(clear-3, transition-10)
prep_of(transition-10, ape-13)
nn(sapiens-17, homo-16)
prep_to(transition-10, sapiens-17)
cop(process-21, is-18)
neg(process-21, not-19)
det(process-21, a-20)
root(ROOT-0, process-21)
nsubj(occurs-23, process-21)
rcmod(process-21, occurs-23)
num(generation-26, one-25)
prep_through(occurs-23, generation-26)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB why))
      (S
        (VP (VBP are) (RB n't)
          (NP (PRP we))
          (S
            (VP (VBG evolving)
              (PP (TO to)
                (NP
                  (NP (DT some) (JJ strange) (JJ terrestrial) (NN body) ('' ''))
                  (PP (IN For)
                    (NP (DT the) (JJ same) (NN reason))))))))))
    (, ,)
    (NP
      (NP (DT the) (JJ whole) (NN transition))
      (PP (TO to)
        (NP (DT a) (`` ``) (JJ new) (NN species) ('' ''))))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (NN transition))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ occurs)
              (PP (IN on)
                (NP (CD one) (NN generation))))))))
    (. .)))

advmod(we-5, why-2)
cop(we-5, are-3)
neg(we-5, n't-4)
advcl(transition-30, we-5)
xcomp(we-5, evolving-6)
det(body-11, some-8)
amod(body-11, strange-9)
amod(body-11, terrestrial-10)
prep_to(evolving-6, body-11)
det(reason-16, the-14)
amod(reason-16, same-15)
prep_for(body-11, reason-16)
det(transition-20, the-18)
amod(transition-20, whole-19)
nsubj(transition-30, transition-20)
det(species-25, a-22)
amod(species-25, new-24)
prep_to(transition-20, species-25)
cop(transition-30, is-27)
neg(transition-30, not-28)
det(transition-30, a-29)
root(ROOT-0, transition-30)
nsubj(occurs-32, transition-30)
rcmod(transition-30, occurs-32)
num(generation-35, one-34)
prep_on(occurs-32, generation-35)

(ROOT
  (SBARQ (CC And)
    (WHNP (WP what))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB mean)
        (PP (IN by)
          (NP (DT some) (`` ``) (JJ strange) (JJ terrestrial) (NN body) ('' '')))))
    (. ?)))

cc(mean-5, And-1)
dobj(mean-5, what-2)
aux(mean-5, do-3)
nsubj(mean-5, you-4)
root(ROOT-0, mean-5)
det(body-11, some-7)
amod(body-11, strange-9)
amod(body-11, terrestrial-10)
prep_by(mean-5, body-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP mean)
      (S
        (NP (NN something))
        (ADJP (JJ different)
          (PP (IN than)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP we))
                (VP (VBP are)
                  (PP (IN at)
                    (NP (DT this) (NN stage))))))))))
    (. ?)))

nsubj(mean-2, You-1)
root(ROOT-0, mean-2)
nsubj(different-4, something-3)
xcomp(mean-2, different-4)
dobj(are-8, what-6)
nsubj(are-8, we-7)
prepc_than(different-4, are-8)
det(stage-11, this-10)
prep_at(are-8, stage-11)

(ROOT
  (S
    (PP (IN For)
      (NP (DT the) (JJ same) (NN reason)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (NP (DT a) (JJ one-generation) (NN process)))
    (. .)))

det(reason-4, the-2)
amod(reason-4, same-3)
prep_for(process-11, reason-4)
nsubj(process-11, it-6)
cop(process-11, is-7)
neg(process-11, not-8)
det(process-11, a-9)
amod(process-11, one-generation-10)
root(ROOT-0, process-11)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would)
      (NP (PRP you))
      (VP (RB not) (VB cause)
        (S
          (NP (PRP us))
          (NP (DT a) (JJ strange) (NN terrestial) (NN body) (NN today)))))
    (. ?)))

advmod(cause-5, Why-1)
aux(cause-5, would-2)
nsubj(cause-5, you-3)
neg(cause-5, not-4)
root(ROOT-0, cause-5)
nsubj(today-11, us-6)
det(today-11, a-7)
amod(today-11, strange-8)
nn(today-11, terrestial-9)
nn(today-11, body-10)
xcomp(cause-5, today-11)

(ROOT
  (S (CC and)
    (`` ``)
    (SBAR
      (WHADVP (WRB why))
      (S
        (VP (VBP are) (RB n't)
          (ADVP (RB there))
          (S
            (NP
              (NP
                (QP (DT half) (CD monkey) (NN half))
                (NNS men))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP have)
                    (ADVP (RB just))
                    (VP (VBN entered))))))))))
    (NP
      (NP (DT the) (JJ middle) (NN cycle))
      (PP (IN of)
        (NP (NN evolution) ('' '') (NN Evolution))))
    (VP (VBZ has)
      (NP
        (NP (DT no) (NN scripture))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (VP (VBN followed)))))))
    (. .)))

cc(has-22, and-1)
advmod(are-4, why-3)
advcl(has-22, are-4)
neg(are-4, n't-5)
advmod(are-4, there-6)
quantmod(half-9, half-7)
number(half-9, monkey-8)
num(men-10, half-9)
dep(are-4, men-10)
nsubj(entered-14, men-10)
aux(entered-14, have-12)
advmod(entered-14, just-13)
rcmod(men-10, entered-14)
det(cycle-17, the-15)
amod(cycle-17, middle-16)
nsubj(has-22, cycle-17)
nn(Evolution-21, evolution-19)
prep_of(cycle-17, Evolution-21)
root(ROOT-0, has-22)
det(scripture-24, no-23)
dobj(has-22, scripture-24)
nsubjpass(followed-27, scripture-24)
auxpass(followed-27, is-26)
rcmod(scripture-24, followed-27)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (CD one) (NN path))
        (SBAR (IN that)
          (S
            (NP (DT all) (NNS species))
            (VP (MD must)
              (VP (VB mutate)
                (PP (IN with))))))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN reason))
                (SBAR
                  (WHADVP (WRB why))
                  (S
                    (NP (NNS chimpanzees))
                    (ADVP (RB still))
                    (VP (VBP exist)
                      (PP (TO to)
                        (NP (DT this) (NN date))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(path-5, no-3)
num(path-5, one-4)
nsubj(is-2, path-5)
prep_with(mutate-10, path-5)
complm(mutate-10, that-6)
det(species-8, all-7)
nsubj(mutate-10, species-8)
aux(mutate-10, must-9)
dep(path-5, mutate-10)
nsubj(reason-16, which-13)
cop(reason-16, is-14)
det(reason-16, the-15)
rcmod(path-5, reason-16)
advmod(exist-20, why-17)
nsubj(exist-20, chimpanzees-18)
advmod(exist-20, still-19)
rcmod(reason-16, exist-20)
det(date-23, this-22)
prep_to(exist-20, date-23)

(ROOT
  (S (CC And)
    (PP (IN by)
      (NP (DT half) (NN monkey) (NN half) (NN man)))
    (S
      (NP (PRP I))
      (VP (MD might)
        (VP (VB interpret)
          (NP
            (NP (DT that))
            (PP (IN as)
              (NP (DT a) (NN neanderthal)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT those))
      (VP (VBD coexisted)
        (PP (IN with)
          (NP (NN homo) (NNS sapiens)))
        (PP (IN for)
          (NP (DT some) (NN time)))))
    (. .)))

det(man-6, half-3)
nn(man-6, monkey-4)
nn(man-6, half-5)
prep_by(interpret-9, man-6)
nsubj(interpret-9, I-7)
aux(interpret-9, might-8)
root(ROOT-0, interpret-9)
dobj(interpret-9, that-10)
det(neanderthal-13, a-12)
prep_as(that-10, neanderthal-13)
nsubj(coexisted-17, those-16)
conj_and(interpret-9, coexisted-17)
nn(sapiens-20, homo-19)
prep_with(coexisted-17, sapiens-20)
det(time-23, some-22)
prep_for(coexisted-17, time-23)

