(ROOT
  (S ('' '')
    (PP
      (NP (DT The) (NN fact))
      (IN that)
      (NP
        (NP (NNS scientists))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP claim)
              (SBAR
                (S
                  (NP (NN life))
                  (VP (MD can)
                    (VP (VB emerge)
                      (PP (IN without)
                        (NP (NN planning))))))))))))
    (VP (MD ca) (RB n't)
      (ADVP (RB even))
      (VP (VB execute)
        (SBAR
          (S
            (NP
              (NP (DT the) (JJ same) (NNS processes))
              (PP (IN on)
                (NP (PRP$ their) (JJ own))))
            (VP (VBZ seems)
              (S
                (VP (TO to)
                  (VP (VB show)
                    (SBAR
                      (WHADJP (RB just) (WRB how) (JJ big))
                      (S
                        (NP
                          (NP
                            (NP (DT a) (NN skillset))
                            (NP (DT the) (NN agency)))
                          (PP (IN in)
                            (NP (NN question))))
                        (ADVP (RB really))
                        (VP (VBZ is))))))))))))
    (. .)))

det(fact-3, The-2)
npadvmod(execute-16, fact-3)
nsubj(claim-7, scientists-5)
prep_that(execute-16, scientists-5)
rcmod(scientists-5, claim-7)
nsubj(emerge-10, life-8)
aux(emerge-10, can-9)
ccomp(claim-7, emerge-10)
prep_without(emerge-10, planning-12)
aux(execute-16, ca-13)
neg(execute-16, n't-14)
advmod(execute-16, even-15)
root(ROOT-0, execute-16)
det(processes-19, the-17)
amod(processes-19, same-18)
nsubj(seems-23, processes-19)
xsubj(show-25, processes-19)
poss(own-22, their-21)
prep_on(processes-19, own-22)
ccomp(execute-16, seems-23)
aux(show-25, to-24)
xcomp(seems-23, show-25)
advmod(big-28, just-26)
advmod(big-28, how-27)
dep(is-36, big-28)
det(skillset-30, a-29)
nsubj(is-36, skillset-30)
det(agency-32, the-31)
dep(skillset-30, agency-32)
prep_in(skillset-30, question-34)
advmod(is-36, really-35)
ccomp(show-25, is-36)

(ROOT
  (S (`` ``)
    (SBAR (IN unless)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (JJ willing))
          (ADVP (RB \/))
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB demonstrate)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (DT an) (JJ intelligent) (NN agent))
                      (VP (MD would)
                        (VP (VB be)
                          (ADJP
                            (ADJP (JJR better))
                            (PP (IN at)
                              (S
                                (VP (VBG creating)
                                  (NP (NN life)))))))))))))))))
    (ADVP (RB then))
    (NP (PRP we))
    (VP (VBP are))
    (. .)))

mark(willing-5, unless-2)
nsubj(willing-5, you-3)
cop(willing-5, are-4)
dep(are-22, willing-5)
advmod(willing-5, \/-6)
acomp(willing-5, able-7)
aux(demonstrate-9, to-8)
xcomp(able-7, demonstrate-9)
advmod(better-16, how-10)
det(agent-13, an-11)
amod(agent-13, intelligent-12)
nsubj(better-16, agent-13)
aux(better-16, would-14)
cop(better-16, be-15)
ccomp(demonstrate-9, better-16)
prepc_at(better-16, creating-18)
dobj(creating-18, life-19)
advmod(are-22, then-20)
nsubj(are-22, we-21)
root(ROOT-0, are-22)

