(ROOT
  (S (`` `)
    (NP
      (NP (NNP Guided))
      (PP (IN by)
        (NP (DT a) (JJR larger) (NN force))))
    (VP (VBZ `))
    (. .)))

nsubj(`-7, Guided-2)
det(force-6, a-4)
amod(force-6, larger-5)
prep_by(Guided-2, force-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB be)
          (ADJP (JJ sure)
            (PP (IN of)
              (NP (NN course)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP believe)
        (SBAR (IN that)
          (S
            (NP (DT that))
            (VP (VBZ is) (RB not)
              (NP (DT the) (NN case)))))))
    (. .)))

nsubj(sure-5, I-1)
aux(sure-5, ca-2)
neg(sure-5, n't-3)
cop(sure-5, be-4)
root(ROOT-0, sure-5)
prep_of(sure-5, course-7)
nsubj(believe-11, I-10)
conj_but(sure-5, believe-11)
complm(case-17, that-12)
nsubj(case-17, that-13)
cop(case-17, is-14)
neg(case-17, not-15)
det(case-17, the-16)
ccomp(believe-11, case-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT that))
        (VP (VBZ is)
          (ADJP (JJ true))
          (ADVP (RB then)))))
    (NP (PRP it))
    (VP (VBZ seems)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (MD will)
            (VP (VB turn)
              (PRT (RP out))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP (DT a) (JJ religious) (NN matter))
                    (, ,)
                    (SBAR (IN because)
                      (S
                        (NP (NNS humans))
                        (VP (MD will)
                          (ADVP (RB automatically))
                          (VP (VB consider)
                            (NP (DT that) (NN force))
                            (PP (IN as)
                              (NP (NN god)))))))))))))))
    (. .)))

mark(true-4, If-1)
nsubj(true-4, that-2)
cop(true-4, is-3)
advcl(seems-7, true-4)
advmod(true-4, then-5)
nsubj(seems-7, it-6)
root(ROOT-0, seems-7)
complm(turn-11, that-8)
nsubj(turn-11, it-9)
xsubj(matter-17, it-9)
aux(turn-11, will-10)
ccomp(seems-7, turn-11)
prt(turn-11, out-12)
aux(matter-17, to-13)
cop(matter-17, be-14)
det(matter-17, a-15)
amod(matter-17, religious-16)
xcomp(turn-11, matter-17)
mark(consider-23, because-19)
nsubj(consider-23, humans-20)
aux(consider-23, will-21)
advmod(consider-23, automatically-22)
advcl(matter-17, consider-23)
det(force-25, that-24)
dobj(consider-23, force-25)
prep_as(consider-23, god-27)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (DT some) (NN force))
        (VP (VBD created)
          (NP (PRP us)))))
    (, ,)
    (NP (NNS humans))
    (VP (MD should) (RB n't)
      (VP (VB take)
        (PP (IN for)
          (S
            (VP (JJ granted))))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBD did)
              (NP (PRP it))
              (SBAR (RB so) (IN that)
                (S
                  (NP (PRP we))
                  (VP (VBZ worship)
                    (NP (PRP it))))))))))
    (. .)))

advmod(created-5, Even-1)
dep(created-5, if-2)
det(force-4, some-3)
nsubj(created-5, force-4)
advcl(take-11, created-5)
dobj(created-5, us-6)
nsubj(take-11, humans-8)
aux(take-11, should-9)
neg(take-11, n't-10)
root(ROOT-0, take-11)
prepc_for(take-11, granted-13)
complm(did-16, that-14)
nsubj(did-16, it-15)
ccomp(take-11, did-16)
dobj(did-16, it-17)
advmod(worship-21, so-18)
dep(worship-21, that-19)
nsubj(worship-21, we-20)
advcl(did-16, worship-21)
dobj(worship-21, it-22)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD might)
      (VP
        (VP (VBD did)
          (NP (PRP it))
          (PP (IN for)
            (NP (NN fun))))
        (CC or)
        (VP
          (ADJP (RBR more) (JJ likely))
          (SBAR (RB just) (IN because)
            (S
              (NP (DT that))
              (`` `)
              (VP (VBZ s)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ is)
                      (VP (VBZ does)))))))))))
    (. .)))

nsubj(did-3, He-1)
nsubj(likely-9, He-1)
aux(did-3, might-2)
root(ROOT-0, did-3)
dobj(did-3, it-4)
prep_for(did-3, fun-6)
advmod(likely-9, more-8)
conj_or(did-3, likely-9)
advmod(s-14, just-10)
dep(s-14, because-11)
nsubj(s-14, that-12)
ccomp(likely-9, s-14)
nsubj(does-17, what-15)
aux(does-17, is-16)
ccomp(s-14, does-17)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (NNS ants))
      (VP
        (VP (VB make)
          (NP (NNS colonies))
          (PP (IN on)
            (NP (DT the) (NN ground))))
        (CC and)
        (VP (VB gather)
          (PP (IN in)
            (NP (JJ big) (NNS teams))))))
    (. ?)))

advmod(make-4, Why-1)
aux(make-4, do-2)
nsubj(make-4, ants-3)
nsubj(gather-10, ants-3)
root(ROOT-0, make-4)
dobj(make-4, colonies-5)
det(ground-8, the-7)
prep_on(make-4, ground-8)
conj_and(make-4, gather-10)
amod(teams-13, big-12)
prep_in(gather-10, teams-13)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (DT that))
        (`` `)
        (VP (VBZ s)
          (WHNP (WP what)))))
    (NP (PRP they))
    (VP (VBP do) (, ,)
      (S
        (VP (TO to)
          (VP (VB survive)))))
    (. .)))

mark(what-5, Because-1)
nsubj(what-5, that-2)
cop(what-5, s-4)
advcl(do-7, what-5)
nsubj(do-7, they-6)
xsubj(survive-10, they-6)
root(ROOT-0, do-7)
aux(survive-10, to-9)
xcomp(do-7, survive-10)

(ROOT
  (S
    (S
      (ADVP (RB Maybe))
      (NP (DT the) (NN force))
      (VP (VBZ needs)
        (S
          (VP (TO to)
            (VP (VB create)
              (S
                (NP (NNS things))
                (VP (TO to)
                  (VP (VB survive)))))))))
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (DT that))
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN case))
              (PP (IN by)
                (NP (RB now)))))))
      (NP (PRP it))
      (VP (MD will)
        (ADVP (RB probably))
        (VP (VB have)
          (VP (VBN forgotten)
            (PP (IN about)
              (NP (DT this) (NN place))
              (NP
                (NP (DT a) (JJ long) (JJ long) (NN time))
                (IN ago)))
            (SBAR (IN since)
              (S
                (NP (PRP it))
                (VP (MD will)
                  (VP (VB be)
                    (VP
                      (ADVP (RB far) (RB far) (RB away))
                      (VBG creating)
                      (NP (JJ other) (NNS things)))))))))))
    (. .)))

advmod(needs-4, Maybe-1)
det(force-3, the-2)
nsubj(needs-4, force-3)
xsubj(create-6, force-3)
root(ROOT-0, needs-4)
aux(create-6, to-5)
xcomp(needs-4, create-6)
nsubj(survive-9, things-7)
aux(survive-9, to-8)
xcomp(create-6, survive-9)
mark(case-15, if-11)
nsubj(case-15, that-12)
cop(case-15, is-13)
det(case-15, the-14)
advcl(forgotten-22, case-15)
prep(case-15, by-16)
pobj(by-16, now-17)
nsubj(forgotten-22, it-18)
aux(forgotten-22, will-19)
advmod(forgotten-22, probably-20)
aux(forgotten-22, have-21)
conj_and(needs-4, forgotten-22)
det(place-25, this-24)
prep_about(forgotten-22, place-25)
det(time-29, a-26)
amod(time-29, long-27)
amod(time-29, long-28)
dep(forgotten-22, time-29)
amod(time-29, ago-30)
mark(creating-38, since-31)
nsubj(creating-38, it-32)
aux(creating-38, will-33)
aux(creating-38, be-34)
advmod(away-37, far-35)
advmod(away-37, far-36)
advmod(creating-38, away-37)
advcl(forgotten-22, creating-38)
amod(things-40, other-39)
dobj(creating-38, things-40)

