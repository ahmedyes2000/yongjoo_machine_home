(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (NP (NNS arguments))
      (PP (IN from)
        (NP
          (NP (DT the) (JJ opposing) (NNS camps))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP say)
                (SBAR
                  (S (`` ``)
                    (S
                      (NP (PRP it))
                      (VP (VBZ looks)
                        (SBAR (IN like)
                          (S
                            (NP (PRP it))
                            (VP (VBD was)
                              (VP (VBN designed)))))))
                    (, ,) (IN so)
                    (S
                      (NP (PRP it))
                      (VP (MD must)
                        (VP (VB have)
                          (VP (VBN been)
                            (VP (VBN designed))))))
                    ('' '')
                    (CC and)
                    (S (`` ``)
                      (S
                        (S
                          (NP (JJ natural) (NN selection))
                          (VP (MD could)
                            (VP (VB have)
                              (VP (VBN produced)
                                (NP (PRP it))))))
                        (, ,) (IN so)
                        (S
                          (NP (PRP we))
                          (VP (VBP believe)
                            (SBAR
                              (S
                                (NP (JJ natural) (NN selection))
                                (VP (VBD did)
                                  (VP (VB produce)
                                    (NP (PRP it)))))))))
                      ('' '')
                      (VP (VBP are) (RB not)
                        (VP (VBG going)
                          (S
                            (VP (TO to)
                              (VP (VB lead)
                                (PP (TO to)
                                  (NP
                                    (NP (NN resolution))
                                    (PP (IN of)
                                      (NP (DT this) (NN issue)))))))))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
dobj(believe-2, arguments-3)
det(camps-7, the-5)
amod(camps-7, opposing-6)
prep_from(believe-2, camps-7)
nsubj(say-9, camps-7)
nsubj(looks-12, camps-7)
rcmod(camps-7, say-9)
nsubj(looks-12, it-11)
dep(say-9, looks-12)
mark(designed-16, like-13)
nsubjpass(designed-16, it-14)
auxpass(designed-16, was-15)
advcl(looks-12, designed-16)
dep(looks-12, so-18)
nsubjpass(designed-23, it-19)
aux(designed-23, must-20)
aux(designed-23, have-21)
auxpass(designed-23, been-22)
ccomp(looks-12, designed-23)
amod(selection-28, natural-27)
nsubj(produced-31, selection-28)
aux(produced-31, could-29)
aux(produced-31, have-30)
ccomp(going-45, produced-31)
csubj(going-45, produced-31)
dobj(produced-31, it-32)
dep(produced-31, so-34)
nsubj(believe-36, we-35)
dep(produced-31, believe-36)
amod(selection-38, natural-37)
nsubj(produce-40, selection-38)
aux(produce-40, did-39)
ccomp(believe-36, produce-40)
dobj(produce-40, it-41)
aux(going-45, are-43)
neg(going-45, not-44)
dep(say-9, going-45)
conj_and(looks-12, going-45)
aux(lead-47, to-46)
xcomp(going-45, lead-47)
prep_to(lead-47, resolution-49)
det(issue-52, this-51)
prep_of(resolution-49, issue-52)

(ROOT
  (FRAG
    (FRAG
      (NP
        (NP (DT The) (JJ real) (NN question))
        (SBAR
          (S
            (VP (VBZ is)
              (SQ (VBZ Is)
                (NP (EX there)))))))
      (X
        (NP (DT any) (JJ direct) (NN evidence))
        (SBAR (IN that)
          (S
            (NP (DT a) (JJ particular) (NN feature))
            (ADVP (RB actually))
            (VP (VBD was)
              (VP (VBN designed)))))))
    (, ,)
    (CC or)
    (FRAG
      (PP (IN on)
        (NP
          (NP (DT the) (JJ other) (NN hand))
          (, ,)
          (NP
            (NP (JJ direct) (NN evidence))
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBD arose)
                  (PP (IN through)
                    (NP (JJ natural) (NN selection)))))))))
      (. ?))))

det(question-3, The-1)
amod(question-3, real-2)
root(ROOT-0, question-3)
rcmod(question-3, is-4)
dep(is-4, Is-5)
expl(Is-5, there-6)
det(evidence-9, any-7)
amod(evidence-9, direct-8)
dep(question-3, evidence-9)
complm(designed-16, that-10)
det(feature-13, a-11)
amod(feature-13, particular-12)
nsubjpass(designed-16, feature-13)
advmod(designed-16, actually-14)
auxpass(designed-16, was-15)
dep(evidence-9, designed-16)
dep(question-3, or-18)
dep(question-3, on-19)
det(hand-22, the-20)
amod(hand-22, other-21)
pobj(on-19, hand-22)
amod(evidence-25, direct-24)
appos(hand-22, evidence-25)
dobj(arose-28, evidence-25)
complm(arose-28, that-26)
nsubj(arose-28, it-27)
dep(evidence-25, arose-28)
amod(selection-31, natural-30)
prep_through(arose-28, selection-31)

(ROOT
  (S
    (NP (JJ Other) (NNS mechanisms))
    (VP (VBP are)
      (VP (VBN known)
        (SBAR (IN that)
          (S
            (VP (MD can)
              (VP (VB modify)
                (NP (DT the) (NN genome))
                (PP (IN on)
                  (NP (DT a) (JJR larger) (NN scale)))))))))
    (. .)))

amod(mechanisms-2, Other-1)
nsubjpass(known-4, mechanisms-2)
auxpass(known-4, are-3)
root(ROOT-0, known-4)
complm(modify-7, that-5)
aux(modify-7, can-6)
ccomp(known-4, modify-7)
det(genome-9, the-8)
dobj(modify-7, genome-9)
det(scale-13, a-11)
amod(scale-13, larger-12)
prep_on(modify-7, scale-13)

(ROOT
  (S
    (NP (JJ Natural) (NN selection))
    (ADVP (RB therefore))
    (VP (VBZ does) (RB n't)
      (VP (VB have)
        (NP (DT the) (JJ blank) (NNS spaces))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (NNP ID))
              (VP (VBZ does))))
          (, ,)
          (CC and)
          (SBAR (IN in)
            (S
              (NP (PRP$ my) (NN view))
              (VP (VBZ has)
                (NP (DT the) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN called)
                          (NP (DT a) (NN theory)))))))))))))
    (. .)))

amod(selection-2, Natural-1)
nsubj(have-6, selection-2)
advmod(have-6, therefore-3)
aux(have-6, does-4)
neg(have-6, n't-5)
root(ROOT-0, have-6)
det(spaces-9, the-7)
amod(spaces-9, blank-8)
dobj(have-6, spaces-9)
complm(does-12, that-10)
nsubj(does-12, ID-11)
ccomp(have-6, does-12)
mark(has-18, in-15)
poss(view-17, my-16)
nsubj(has-18, view-17)
ccomp(have-6, has-18)
conj_and(does-12, has-18)
det(right-20, the-19)
dobj(has-18, right-20)
aux(called-23, to-21)
auxpass(called-23, be-22)
infmod(right-20, called-23)
det(theory-25, a-24)
dobj(called-23, theory-25)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (ADVP (RB clearly))
        (NP (DT a)
          (ADJP (RB very) (JJ difficult))
          (NN question))))
    (CC or)
    (S
      (S
        (VP (TO to)
          (VP (VB answer)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (DT the) (NNS events))
                (VP (VBD took)
                  (NP (NN place))
                  (ADVP
                    (ADVP (RB long) (RB ago))
                    (PRN (-LRB- -LRB-)
                      (NP (NN pace) (NNS YECs))
                      (-RRB- -RRB-)))
                  (PP (IN On)
                    (NP (DT the) (NNP ID) (NN side)))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADJP (JJ aware)
          (PP (IN of)
            (NP (DT any) (NN evidence))))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT any) (NN feature))
              (PP (IN of)
                (NP (DT any) (NN organism))))
            (ADVP (RB actually))
            (VP (VBD was)
              (VP (VBN designed)))))))
    (. .)))

nsubj(question-7, This-1)
cop(question-7, is-2)
advmod(question-7, clearly-3)
det(question-7, a-4)
advmod(difficult-6, very-5)
amod(question-7, difficult-6)
root(ROOT-0, question-7)
aux(answer-10, to-9)
purpcl(aware-30, answer-10)
advmod(took-14, when-11)
det(events-13, the-12)
nsubj(took-14, events-13)
advcl(answer-10, took-14)
dobj(took-14, place-15)
advmod(ago-17, long-16)
advmod(took-14, ago-17)
nn(YECs-20, pace-19)
dep(ago-17, YECs-20)
det(side-25, the-23)
nn(side-25, ID-24)
prep_on(took-14, side-25)
nsubj(aware-30, I-27)
cop(aware-30, 'm-28)
neg(aware-30, not-29)
conj_or(question-7, aware-30)
det(evidence-33, any-32)
prep_of(aware-30, evidence-33)
complm(designed-42, that-34)
det(feature-36, any-35)
nsubjpass(designed-42, feature-36)
det(organism-39, any-38)
prep_of(feature-36, organism-39)
advmod(designed-42, actually-40)
auxpass(designed-42, was-41)
ccomp(aware-30, designed-42)

(ROOT
  (S
    (NP (DT This))
    (VP (MD would)
      (VP (VB require)
        (SBAR
          (S
            (NP
              (NP (NN evidence))
              (PP (IN that)
                (NP (DT a) (-RRB- -RRB-) (NNP designers))))
            (VP (VBD existed)
              (SBAR
                (S
                  (S
                    (LST (LS b) (-RRB- -RRB-))
                    (NP (PRP they))
                    (VP (VBD visited)
                      (NP (NN earth))))
                  (CC and)
                  (S
                    (LST (LS c) (-RRB- -RRB-))
                    (NP (PRP they))
                    (VP (VBD intervened)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN modification))
                          (PP (IN of)
                            (NP (NN life))))))))))))))
    (. .)))

nsubj(require-3, This-1)
aux(require-3, would-2)
root(ROOT-0, require-3)
nsubj(existed-9, evidence-4)
det(designers-8, a-6)
prep_that(evidence-4, designers-8)
ccomp(require-3, existed-9)
dep(visited-13, b-10)
nsubj(visited-13, they-12)
dep(existed-9, visited-13)
dobj(visited-13, earth-14)
dep(intervened-19, c-16)
nsubj(intervened-19, they-18)
dep(existed-9, intervened-19)
conj_and(visited-13, intervened-19)
det(modification-22, the-21)
prep_in(intervened-19, modification-22)
prep_of(modification-22, life-24)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP (DT the) (NN evolution))
        (PP (IN by)
          (NP (JJ natural) (NN selection) (NN side)))))
    (, ,)
    (ADVP (RB likewise))
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ aware))
      (SBAR (IN if)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT any) (NN evidence))
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT a) (JJ significant) (JJ new) (NN feature))
                  (, ,)
                  (PP (JJ such) (IN as)
                    (NP (DT the) (JJ human) (NN brain)))
                  (, ,))
                (ADVP (RB actually))
                (VP (VBD did)
                  (VP (VB evolve)
                    (NP (DT this) (NN way))))))))))
    (. .)))

det(evolution-3, the-2)
prep_on(aware-13, evolution-3)
amod(side-7, natural-5)
nn(side-7, selection-6)
prep_by(evolution-3, side-7)
advmod(aware-13, likewise-9)
nsubj(aware-13, I-10)
cop(aware-13, 'm-11)
neg(aware-13, not-12)
root(ROOT-0, aware-13)
mark(is-16, if-14)
expl(is-16, there-15)
advcl(aware-13, is-16)
det(evidence-18, any-17)
nsubj(is-16, evidence-18)
complm(evolve-33, that-19)
det(feature-23, a-20)
amod(feature-23, significant-21)
amod(feature-23, new-22)
nsubj(evolve-33, feature-23)
det(brain-29, the-27)
amod(brain-29, human-28)
prep_such_as(feature-23, brain-29)
advmod(evolve-33, actually-31)
aux(evolve-33, did-32)
ccomp(is-16, evolve-33)
det(way-35, this-34)
dobj(evolve-33, way-35)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (PP (IN at)
        (NP
          (NP (DT the) (NN moment))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (ADJP (JJ impossible)
                  (S
                    (VP (TO to)
                      (VP (VB demonstrate)
                        (NP
                          (NP (DT either))
                          (PP (IN of)
                            (NP
                              (NP (DT these))
                              (PP (IN with)
                                (NP (JJ direct) (NN evidence))))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
det(moment-5, the-4)
prep_at(think-2, moment-5)
nsubj(impossible-8, it-6)
cop(impossible-8, 's-7)
rcmod(moment-5, impossible-8)
aux(demonstrate-10, to-9)
xcomp(impossible-8, demonstrate-10)
dobj(demonstrate-10, either-11)
prep_of(either-11, these-13)
amod(evidence-16, direct-15)
prep_with(these-13, evidence-16)

(ROOT
  (SBARQ (RB So)
    (SBAR (IN for)
      (S
        (NP
          (NP (PRP me))
          (NP (DT the) (JJ next) (NN question)))
        (VP (VBZ is)
          (PP (IN in)
            (NP
              (NP (DT the) (NN absence))
              (PP (IN of)
                (NP
                  (NP (JJ direct) (NN evidence))
                  (NP (DT either) (NN way)))))))))
    (, ,)
    (SQ (VBZ is)
      (NP (PRP it))
      (ADJP (JJ possible)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN whether)
                (CC or)
                (RB not)
                (S
                  (NP (NNP ID))
                  (VP (VBZ has)
                    (NP (NN merit))))))))))
    (. ?)))

advmod(possible-19, So-1)
mark(is-7, for-2)
nsubj(is-7, me-3)
det(question-6, the-4)
amod(question-6, next-5)
dep(me-3, question-6)
advcl(possible-19, is-7)
det(absence-10, the-9)
prep_in(is-7, absence-10)
amod(evidence-13, direct-12)
prep_of(absence-10, evidence-13)
det(way-15, either-14)
dep(evidence-13, way-15)
cop(possible-19, is-17)
nsubj(possible-19, it-18)
root(ROOT-0, possible-19)
aux(say-21, to-20)
xcomp(possible-19, say-21)
complm(has-26, whether-22)
ccomp(say-21, not-24)
conj_or(has-26, not-24)
nsubj(has-26, ID-25)
ccomp(say-21, has-26)
dobj(has-26, merit-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(is-4, it-3)
ccomp(think-2, is-4)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR (IN because) (, ,)
        (S
          (SBAR (IN as)
            (S
              (NP (PRP I))
              (VP (VBP understand)
                (NP (PRP it)))))
          (, ,)
          (NP (NNP ID))
          (VP (VBZ makes)
            (NP (DT no) (NNS proposals))
            (PP (IN as)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN nature))
                  (PP (IN of)
                    (NP (DT the) (NNS designers))))))
            (, ,)
            (SBAR
              (WHADVP (WRB when)
                (CC and)
                (WRB how))
              (S
                (NP (PRP they))
                (VP (VBD designed)
                  (NP (NN life))
                  (, ,)
                  (SBAR
                    (SBAR
                      (WHADVP (WRB why))
                      (S
                        (NP (PRP they))
                        (VP (VBP do) (RB n't)
                          (VP (VB appear)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (ADVP (RB around))
                                  (NP (NN today)))))))))
                    (, ,)
                    (CC and)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP$ their) (JJ own) (NN origin))
                        (VP (VBD was))))))))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
mark(makes-11, because-3)
mark(understand-7, as-5)
nsubj(understand-7, I-6)
advcl(makes-11, understand-7)
dobj(understand-7, it-8)
nsubj(makes-11, ID-10)
advcl(is-2, makes-11)
det(proposals-13, no-12)
dobj(makes-11, proposals-13)
prepc_as_to(makes-11, to-15)
det(nature-17, the-16)
pobj(makes-11, nature-17)
det(designers-20, the-19)
prep_of(nature-17, designers-20)
advmod(designed-26, when-22)
dep(when-22, and-23)
dep(when-22, how-24)
nsubj(designed-26, they-25)
advcl(makes-11, designed-26)
dobj(designed-26, life-27)
advmod(appear-33, why-29)
nsubj(appear-33, they-30)
xsubj(today-37, they-30)
aux(appear-33, do-31)
neg(appear-33, n't-32)
dep(designed-26, appear-33)
aux(today-37, to-34)
cop(today-37, be-35)
advmod(today-37, around-36)
xcomp(appear-33, today-37)
dobj(was-44, what-40)
poss(origin-43, their-41)
amod(origin-43, own-42)
nsubj(was-44, origin-43)
dep(designed-26, was-44)
conj_and(appear-33, was-44)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is) (RB not)
            (ADVP (RB really))
            (NP
              (NP (DT a) (NN theory))
              (, ,)
              (NP
                (NP (RBR more) (DT a) (NN kind))
                (PP (IN of)
                  (NP (NN problem) (NN statement)))))))))
    (. .)))

nsubj(means-2, This-1)
root(ROOT-0, means-2)
nsubj(theory-8, it-3)
cop(theory-8, is-4)
neg(theory-8, not-5)
advmod(theory-8, really-6)
det(theory-8, a-7)
ccomp(means-2, theory-8)
advmod(kind-12, more-10)
det(kind-12, a-11)
appos(theory-8, kind-12)
nn(statement-15, problem-14)
prep_of(kind-12, statement-15)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NN evolution))
        (PP (IN by)
          (NP (JJ natural) (NN selection)))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT a) (VBN proposed) (NN mechanism))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBN proven)
                  (S
                    (VP (TO to)
                      (VP (VB work)
                        (PP (IN on)
                          (NP
                            (NP (JJ small) (NN scale) (NNS changes))
                            (PRN (-LRB- -LRB-)
                              (NP (NN point) (NNS mutations))
                              (-RRB- -RRB-))))))))))))))
    (. .)))

prep_for(is-8, evolution-2)
amod(selection-5, natural-4)
prep_by(evolution-2, selection-5)
expl(is-8, there-7)
root(ROOT-0, is-8)
det(mechanism-11, a-9)
amod(mechanism-11, proposed-10)
nsubj(is-8, mechanism-11)
nsubjpass(proven-16, mechanism-11)
aux(proven-16, has-14)
auxpass(proven-16, been-15)
rcmod(mechanism-11, proven-16)
aux(work-18, to-17)
xcomp(proven-16, work-18)
amod(changes-22, small-20)
nn(changes-22, scale-21)
prep_on(work-18, changes-22)
nn(mutations-25, point-24)
appos(changes-22, mutations-25)

