(ROOT
  (S
    (SBAR (IN If)
      (S
        (S
          (NP (PRP we))
          (VP (VBP are)
            (VP (VBG walking)
              (NP (NN togehter)))))
        (CC and)
        (S
          (NP (PRP you))
          (VP
            (VP (VB pick)
              (PRT (RP up))
              (NP (DT an) (NN object)))
            (CC and)
            (VP (VB declare)
              (S
                (NP (PRP it))
                (VP (TO to)
                  (VP (VB be)
                    (NP (DT an) (NN arrow) (NN head))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD may)
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP (DT a) (NN stone)))))))
    (. .)))

mark(walking-4, If-1)
nsubj(walking-4, we-2)
aux(walking-4, are-3)
advcl(say-23, walking-4)
dobj(walking-4, togehter-5)
nsubj(pick-8, you-7)
nsubj(declare-13, you-7)
conj_and(walking-4, pick-8)
advcl(say-23, pick-8)
prt(pick-8, up-9)
det(object-11, an-10)
dobj(pick-8, object-11)
conj_and(walking-4, declare-13)
conj_and(pick-8, declare-13)
nsubj(head-19, it-14)
aux(head-19, to-15)
cop(head-19, be-16)
det(head-19, an-17)
nn(head-19, arrow-18)
xcomp(declare-13, head-19)
nsubj(say-23, I-21)
aux(say-23, may-22)
root(ROOT-0, say-23)
nsubj(stone-27, it-24)
cop(stone-27, is-25)
det(stone-27, a-26)
ccomp(say-23, stone-27)

