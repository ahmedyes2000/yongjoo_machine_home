(ROOT
  (S
    (NP (DT The) (NN following))
    (VP (VBZ is)
      (NP (DT a) (NN quote))
      (PP (IN from)
        (NP (PRP$ your) (NNS points)))
      (: :)
      (NP
        (NP (NNP Quote))
        ('' '')
        (NP
          (NP (DT The) (JJR more) (NNS parts))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP appear)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN arranged)
                        (PP (IN for)
                          (NP (DT a) (NN purpose)))))))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (JJR more) (NN precisely))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP fit)
                (NP (DT each) (JJ other))
                (S
                  (VP (TO to)
                    (VP (VB achieve)
                      (SBAR (IN that)
                        (S
                          (NP (NN purpose))
                          (, ,)
                          (X (DT the)
                            (ADJP
                              (ADJP (JJR more))
                              (CC and)
                              (ADJP (RBR more) (JJ confident))))
                          (NP (PRP we))
                          (VP (MD can)
                            (VP (VB be)
                              (PP (IN in)
                                (NP
                                  (NP (PRP$ our) (NN conclusion))
                                  (PP (IN of)
                                    (NP (NN design))))))))))))))))))
    (. .)))

det(following-2, The-1)
nsubj(quote-5, following-2)
cop(quote-5, is-3)
det(quote-5, a-4)
root(ROOT-0, quote-5)
poss(points-8, your-7)
prep_from(quote-5, points-8)
attr(quote-5, Quote-10)
det(parts-14, The-12)
amod(parts-14, more-13)
attr(quote-5, parts-14)
conj_and(Quote-10, parts-14)
nsubj(appear-16, parts-14)
rcmod(parts-14, appear-16)
aux(arranged-19, to-17)
auxpass(arranged-19, be-18)
xcomp(appear-16, arranged-19)
det(purpose-22, a-21)
prep_for(arranged-19, purpose-22)
det(precisely-27, the-25)
amod(precisely-27, more-26)
attr(quote-5, precisely-27)
conj_and(Quote-10, precisely-27)
nsubj(fit-29, they-28)
rcmod(precisely-27, fit-29)
det(other-31, each-30)
dobj(fit-29, other-31)
aux(achieve-33, to-32)
xcomp(fit-29, achieve-33)
complm(be-44, that-34)
nsubj(be-44, purpose-35)
det(more-38, the-37)
dep(be-44, more-38)
advmod(confident-41, more-40)
conj_and(more-38, confident-41)
dep(be-44, confident-41)
nsubj(be-44, we-42)
aux(be-44, can-43)
ccomp(achieve-33, be-44)
poss(conclusion-47, our-46)
prep_in(be-44, conclusion-47)
prep_of(conclusion-47, design-49)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBD came)
            (PP (IN across)
              (NP
                (NP (DT a) (JJ broken) (NN stick))
                (PP (IN on)
                  (NP (DT the) (NN ground)))))
            (PP (IN in)
              (NP
                (NP (DT the) (NNS woods))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD pointed)
                      (PP (IN toward)
                        (NP (DT a) (NN campsite)))))))))))
      (, ,)
      (NP (PRP it))
      (VP (MD may)
        (VP (VB be)
          (NP
            (NP (DT a) (NN signal))
            (PP (TO to)
              (NP (NNS campers)))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP it))
      (VP (MD may)
        (ADVP (RB just))
        (VP (VB be)
          (NP
            (NP (DT a) (NN stick))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD happened)
                  (S
                    (VP (TO to)
                      (VP (VB fall)
                        (NP (DT that) (NN way))))))))))))
    (. .)))

prep_for(signal-27, example-2)
mark(came-6, if-4)
nsubj(came-6, you-5)
advcl(signal-27, came-6)
det(stick-10, a-8)
amod(stick-10, broken-9)
prep_across(came-6, stick-10)
det(ground-13, the-12)
prep_on(stick-10, ground-13)
det(woods-16, the-15)
prep_in(came-6, woods-16)
nsubj(pointed-18, woods-16)
rcmod(woods-16, pointed-18)
det(campsite-21, a-20)
prep_toward(pointed-18, campsite-21)
nsubj(signal-27, it-23)
aux(signal-27, may-24)
cop(signal-27, be-25)
det(signal-27, a-26)
root(ROOT-0, signal-27)
prep_to(signal-27, campers-29)
nsubj(stick-37, it-32)
aux(stick-37, may-33)
advmod(stick-37, just-34)
cop(stick-37, be-35)
det(stick-37, a-36)
conj_or(signal-27, stick-37)
nsubj(happened-39, stick-37)
rcmod(stick-37, happened-39)
aux(fall-41, to-40)
xcomp(happened-39, fall-41)
det(way-43, that-42)
dobj(fall-41, way-43)

(ROOT
  (S (IN So)
    (NP (PRP you))
    (VP (VBP ask)
      (NP (PRP yourself))
      (SBAR
        (WHADVP (WRB why))
        (S
          (VP (MD would)
            (ADVP (JJ such)
              (NP (DT a) (NN text)))
            (VP (VB continue)
              (PP (TO to)
                (NP (DT this) (NN day))))))))
    (. ?)))

dep(ask-3, So-1)
nsubj(ask-3, you-2)
root(ROOT-0, ask-3)
dobj(ask-3, yourself-4)
advmod(continue-10, why-5)
aux(continue-10, would-6)
advmod(continue-10, such-7)
det(text-9, a-8)
dep(such-7, text-9)
advcl(ask-3, continue-10)
det(day-13, this-12)
prep_to(continue-10, day-13)

(ROOT
  (SQ (VBZ Is)
    (NP (DT all))
    (NP
      (NP (DT that))
      (SBAR
        (S
          (VP (VBD read)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBD delusioned))))))))
    (. ?)))

cop(that-3, Is-1)
nsubj(that-3, all-2)
root(ROOT-0, that-3)
rcmod(that-3, read-4)
nsubj(delusioned-6, it-5)
ccomp(read-4, delusioned-6)

(ROOT
  (SQ (VBP Are)
    (NP
      (NP (DT the)
        (QP (RB over) (DT a) (CD billion))
        (NNS people))
      (PP (IN on)
        (NP (DT this) (NN planet))))
    (ADJP (JJ mistaken)
      (PP (IN about)
        (NP
          (NP (DT the) (NN existence))
          (PP (IN of)
            (NP (NNP Intelligent) (NNP Design))))))
    (. ?)))

cop(mistaken-10, Are-1)
det(people-6, the-2)
quantmod(billion-5, over-3)
quantmod(billion-5, a-4)
num(people-6, billion-5)
nsubj(mistaken-10, people-6)
det(planet-9, this-8)
prep_on(people-6, planet-9)
root(ROOT-0, mistaken-10)
det(existence-13, the-12)
prep_about(mistaken-10, existence-13)
nn(Design-16, Intelligent-15)
prep_of(existence-13, Design-16)

(ROOT
  (FRAG
    (NP (CD 4))
    (. .)))

root(ROOT-0, 4-1)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (JJS most) (NNS people))
      (VP (VB want)
        (S
          (VP (TO to)
            (VP
              (VP (VB close)
                (NP (PRP$ their) (NNS ears)))
              (CC and)
              (ADVP (RB even))
              (VP (VB become)
                (ADJP (JJ defensive))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NNS words))
                    (VP (VBN printed)
                      (PP (IN in)
                        (NP
                          (NP (DT this) (NN text))
                          (PRN (-LRB- -LRB-)
                            (NP (NNP Holy) (NNP Bible))
                            (-RRB- -RRB-)))))))))))))
    (. ?)))

advmod(want-5, Why-1)
aux(want-5, do-2)
amod(people-4, most-3)
nsubj(want-5, people-4)
xsubj(close-7, people-4)
root(ROOT-0, want-5)
aux(close-7, to-6)
xcomp(want-5, close-7)
poss(ears-9, their-8)
dobj(close-7, ears-9)
xcomp(want-5, even-11)
advmod(close-7, even-11)
conj_and(close-7, even-11)
cop(defensive-13, become-12)
xcomp(want-5, defensive-13)
conj_and(close-7, defensive-13)
det(words-16, the-15)
prep_on(defensive-13, words-16)
partmod(words-16, printed-17)
det(text-20, this-19)
prep_in(printed-17, text-20)
nn(Bible-23, Holy-22)
appos(text-20, Bible-23)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBP do) (RB n't)
          (ADVP (RB even))
          (VP (VB know)
            (NP (WP what))))))
    (VP (VBZ is)
      (PP (IN in)
        (NP (PRP it))))
    (. .)))

advmod(know-6, When-1)
nsubj(know-6, they-2)
aux(know-6, do-3)
neg(know-6, n't-4)
advmod(know-6, even-5)
advcl(is-8, know-6)
csubj(is-8, know-6)
dobj(know-6, what-7)
root(ROOT-0, is-8)
prep_in(is-8, it-10)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ is)
      (NP (NN mankind))
      (ADJP (JJ quick)
        (S
          (VP (TO to)
            (VP (VB embrace)
              (NP
                (NP (DT a) (JJ different) (NN approach))
                (, ,)
                (CONJP (CC but)
                  (RB not))
                (NP
                  (NP (DT the) (NNP Bible))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (NP
                          (NP (DT an) (NN instruction) (NN manual))
                          (PP (IN from)
                            (NP (DT the) (JJ chief) (NN I.D.))))))))))))))
    (. ?)))

advmod(quick-4, Why-1)
cop(quick-4, is-2)
nsubj(quick-4, mankind-3)
root(ROOT-0, quick-4)
aux(embrace-6, to-5)
xcomp(quick-4, embrace-6)
det(approach-9, a-7)
amod(approach-9, different-8)
dobj(embrace-6, approach-9)
det(Bible-14, the-13)
dobj(embrace-6, Bible-14)
conj_negcc(approach-9, Bible-14)
nsubj(manual-19, Bible-14)
cop(manual-19, is-16)
det(manual-19, an-17)
nn(manual-19, instruction-18)
rcmod(Bible-14, manual-19)
det(I.D.-23, the-21)
amod(I.D.-23, chief-22)
prep_from(manual-19, I.D.-23)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are)
      (NP
        (NP (NNS signs))
        (VP (VBN left)
          (PRT (RP behind))
          (PP (IN for)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP continue)
                    (S
                      (VP (TO to)
                        (VP (VB question)
                          (NP (NNP ID)))))))))))))
    (. .)))

nsubj(signs-3, These-1)
cop(signs-3, are-2)
root(ROOT-0, signs-3)
partmod(signs-3, left-4)
prt(left-4, behind-5)
prep_for(left-4, those-7)
nsubj(continue-9, those-7)
rcmod(those-7, continue-9)
aux(question-11, to-10)
xcomp(continue-9, question-11)
dobj(question-11, ID-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBD were)
          (NP
            (NP (CD four) (VBN broken) (NNS sticks))
            (, ,)
            (VP (VBN arranged)
              (PP (IN into)
                (NP
                  (NP (DT an) (NN arrow) (NN shape))
                  (VP (VBG pointing)
                    (PP (IN at)
                      (NP (DT the) (NN camp)))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD d)
      (VP (VB be)
        (ADJP (RB fairly) (JJ confident))
        (SBAR (IN that)
          (S
            (NP (DT that))
            (VP (VBD was)
              (NP (DT no) (NN accident)))))))
    (. .)))

mark(were-3, If-1)
expl(were-3, there-2)
advcl(d-19, were-3)
num(sticks-6, four-4)
amod(sticks-6, broken-5)
nsubj(were-3, sticks-6)
partmod(sticks-6, arranged-8)
det(shape-12, an-10)
nn(shape-12, arrow-11)
prep_into(arranged-8, shape-12)
partmod(shape-12, pointing-13)
det(camp-16, the-15)
prep_at(pointing-13, camp-16)
nsubj(d-19, you-18)
root(ROOT-0, d-19)
cop(confident-22, be-20)
advmod(confident-22, fairly-21)
dep(d-19, confident-22)
complm(accident-27, that-23)
nsubj(accident-27, that-24)
cop(accident-27, was-25)
det(accident-27, no-26)
ccomp(confident-22, accident-27)

(ROOT
  (FRAG ('' '')
    (NP (NN end) (NNS QuoteSticks))
    (PP (TO to)
      (NP (DT the) (JJ campsite) (CD :1)))
    (. .)))

nn(QuoteSticks-3, end-2)
root(ROOT-0, QuoteSticks-3)
dep(QuoteSticks-3, to-4)
det(:1-7, the-5)
amod(:1-7, campsite-6)
pobj(to-4, :1-7)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ current) (NN Calendar))
      (SBAR
        (WHNP (WDT that))
        (S
          (ADVP (RB makind))
          (VP (VBZ has)
            (VP (VBN been)
              (VP (VBG using)
                (PP (IN for)
                  (NP (CD 2008) (NNS years)))))))))
    (VP (VBZ is)
      (VP (VBN based)
        (PP (IN from)
          (NP
            (NP (DT the) (NN time))
            (PP (IN of)
              (NP
                (NP
                  (NP (NNP Christ) (POS 's))
                  (NN death))
                (, ,)
                (VP (VBN known)
                  (PP (IN as)
                    (NP (NNP A.D.))))))))))))

det(Calendar-3, The-1)
amod(Calendar-3, current-2)
nsubj(using-8, Calendar-3)
nsubjpass(based-13, Calendar-3)
advmod(using-8, makind-5)
aux(using-8, has-6)
aux(using-8, been-7)
rcmod(Calendar-3, using-8)
num(years-11, 2008-10)
prep_for(using-8, years-11)
auxpass(based-13, is-12)
root(ROOT-0, based-13)
det(time-16, the-15)
prep_from(based-13, time-16)
poss(death-20, Christ-18)
prep_of(time-16, death-20)
partmod(death-20, known-22)
prep_as(known-22, A.D.-24)

(ROOT
  (S
    (NP
      (PRN (-LRB- -LRB-)
        (PP (IN After)
          (NP (NNP Death)))
        (-RRB- -RRB-)))
    (VP (VBZ .2))
    (. .)))

nsubj(.2-5, After-2)
pobj(After-2, Death-3)
root(ROOT-0, .2-5)

(ROOT
  (S
    (NP
      (NP (DT The) (NN timeline))
      (VP (VBN used)
        (PP (RB prior)
          (PP (TO to)
            (NP
              (NP (NNP Christ) (POS 's))
              (NN death))))))
    (VP (VBZ is)
      (NP (NNP B.C.)))))

det(timeline-2, The-1)
nsubj(B.C.-10, timeline-2)
partmod(timeline-2, used-3)
poss(death-8, Christ-6)
prep_prior_to(used-3, death-8)
cop(B.C.-10, is-9)
root(ROOT-0, B.C.-10)

(ROOT
  (S
    (NP
      (PRN (-LRB- -LRB-)
        (PP (IN Before)
          (NP (NNP Christ)))
        (-RRB- -RRB-)))
    (VP (VBZ .3))
    (. .)))

nsubj(.3-5, Before-2)
pobj(Before-2, Christ-3)
root(ROOT-0, .3-5)

(ROOT
  (S
    (NP (DT The) (NNP Holy) (NNP Bible))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS most) (VBN read) (NN text))
        (PP (IN in)
          (NP
            (NP (DT the) (NN world))
            (CC and)
            (NP (JJ reprinted) (NNS millions))))
        (PP (IN of)
          (NP (NNS times)))))
    (. .)))

det(Bible-3, The-1)
nn(Bible-3, Holy-2)
nsubj(text-8, Bible-3)
cop(text-8, is-4)
det(text-8, the-5)
amod(text-8, most-6)
amod(text-8, read-7)
root(ROOT-0, text-8)
det(world-11, the-10)
prep_in(text-8, world-11)
amod(millions-14, reprinted-13)
prep_in(text-8, millions-14)
conj_and(world-11, millions-14)
prep_of(text-8, times-16)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (NP (RB plenty))
        (PP (IN of)
          (NP
            (NP (NNS scholars))
            (PP (IN of)
              (NP
                (NP (DT the) (NN time))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD could)
                      (VP (VB have)
                        (VP (VBN refuted)
                          (CC and)
                          (VBN stopped)
                          (NP (DT this) (NN text))
                          (PP (IN from)
                            (S
                              (VP (VBG spreading)))))))))))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
nsubj(were-2, plenty-3)
prep_of(plenty-3, scholars-5)
det(time-8, the-7)
prep_of(scholars-5, time-8)
nsubj(refuted-12, time-8)
nsubj(stopped-14, time-8)
aux(refuted-12, could-10)
aux(refuted-12, have-11)
rcmod(time-8, refuted-12)
rcmod(time-8, stopped-14)
conj_and(refuted-12, stopped-14)
det(text-16, this-15)
dobj(refuted-12, text-16)
prepc_from(refuted-12, spreading-18)

