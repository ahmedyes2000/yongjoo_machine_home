(ROOT
  (S (`` ``)
    (ADVP (RB Yes))
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB fully) (JJ aware)
        (SBAR
          (WHNP (WP what))
          (SINV
            (NP (DT a) (NNP Solar) (NNP Eclipse))
            (VP (VBZ is))
            (. .)))))
    (. .)))

advmod(aware-6, Yes-2)
nsubj(aware-6, I-3)
cop(aware-6, 'm-4)
advmod(aware-6, fully-5)
root(ROOT-0, aware-6)
dep(is-11, what-7)
det(Eclipse-10, a-8)
nn(Eclipse-10, Solar-9)
nsubj(is-11, Eclipse-10)
dep(aware-6, is-11)

(ROOT
  (S
    (NP (DT the) (NN point))
    (VP (VBD was)
      (NP
        (NP (DT that))
        (RRC
          (ADVP (RB not) (RB only))
          (NP
            (SQ (VBP do)
              (NP (PRP they))
              (VP (VB line)
                (PRT (RP up))
                (NP (DT the) (NN sun)
                  (CC and)
                  (NN moon))))
            (VP (VB fill)
              (NP (DT each) (JJ other))
              (ADVP (RB precisely)))))))
    (. .)))

det(point-2, the-1)
nsubj(that-4, point-2)
cop(that-4, was-3)
root(ROOT-0, that-4)
dep(only-6, not-5)
advmod(fill-15, only-6)
aux(line-9, do-7)
nsubj(line-9, they-8)
dep(fill-15, line-9)
prt(line-9, up-10)
det(sun-12, the-11)
dobj(line-9, sun-12)
dobj(line-9, moon-14)
conj_and(sun-12, moon-14)
rcmod(that-4, fill-15)
det(other-17, each-16)
dobj(fill-15, other-17)
advmod(fill-15, precisely-18)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (DT the) (NN moon))
    (VP (VBZ is)
      (ADJP (JJ essential)
        (PP (TO to)
          (NP (NN life))))
      (SBAR (IN since)
        (S
          (NP (PRP it))
          (VP (VBZ stabilizes)
            (NP (PRP$ our) (NN tilt))
            (PP (IN on)
              (NP (PRP$ our) (NNS axis)))))
        (. .)))
    (. .)))

cc(essential-6, And-2)
det(moon-4, the-3)
nsubj(essential-6, moon-4)
cop(essential-6, is-5)
root(ROOT-0, essential-6)
prep_to(essential-6, life-8)
mark(stabilizes-11, since-9)
nsubj(stabilizes-11, it-10)
advcl(essential-6, stabilizes-11)
poss(tilt-13, our-12)
dobj(stabilizes-11, tilt-13)
poss(axis-16, our-15)
prep_on(stabilizes-11, axis-16)

(ROOT
  (S
    (PP (IN without)
      (NP (PRP it)))
    (NP (DT the) (NN earth))
    (VP (MD would)
      (VP (VB wobble)
        (S
          (VP (VBG causing)
            (NP (JJ massive) (NN climate) (NN change))))))
    (. .)))

prep_without(wobble-6, it-2)
det(earth-4, the-3)
nsubj(wobble-6, earth-4)
aux(wobble-6, would-5)
root(ROOT-0, wobble-6)
xcomp(wobble-6, causing-7)
amod(change-10, massive-8)
nn(change-10, climate-9)
dobj(causing-7, change-10)

(ROOT
  (S
    (NP (DT These) (NNS things))
    (VP (VBP show)
      (NP (NN design)))
    (. .) (. .)))

det(things-2, These-1)
nsubj(show-3, things-2)
root(ROOT-0, show-3)
dobj(show-3, design-4)

(ROOT
  (FRAG (RB not) (: accident)
    (SBAR
      (WHNP (WDT which))
      (S
        (VP (VBZ is)
          (NP (DT the) (NN point)))))
    (. .)))

root(ROOT-0, not-1)
punct(not-1, accident-2)
nsubj(point-6, which-3)
cop(point-6, is-4)
det(point-6, the-5)
dep(not-1, point-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ afraid)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADVP (RB completely))
              (VP (VBG missing)
                (NP (DT that) (NN point))
                (ADVP (RB though))))))))
    (: ...)))

nsubj(afraid-3, I-1)
cop(afraid-3, 'm-2)
root(ROOT-0, afraid-3)
nsubj(missing-7, you-4)
aux(missing-7, are-5)
advmod(missing-7, completely-6)
dep(afraid-3, missing-7)
det(point-9, that-8)
dobj(missing-7, point-9)
advmod(missing-7, though-10)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ afraid)
        (SBAR (IN that)
          (S
            (NP (JJR more) (NN evidence))
            (VP (VBZ is)
              (VP (VBN needed)
                (S
                  (VP (TO to)
                    (VP (VB show)
                      (SBAR (IN that)
                        (S
                          (NP (DT the) (NN moon))
                          (VP (VBD was)
                            (VP (VBN placed)
                              (S
                                (NP (EX there))
                                (ADVP (RB deliberately))))))))))))))))
    (. .)))

nsubj(afraid-4, I-2)
cop(afraid-4, 'm-3)
root(ROOT-0, afraid-4)
complm(needed-9, that-5)
amod(evidence-7, more-6)
nsubjpass(needed-9, evidence-7)
xsubj(show-11, evidence-7)
auxpass(needed-9, is-8)
ccomp(afraid-4, needed-9)
aux(show-11, to-10)
xcomp(needed-9, show-11)
complm(placed-16, that-12)
det(moon-14, the-13)
nsubjpass(placed-16, moon-14)
auxpass(placed-16, was-15)
ccomp(show-11, placed-16)
dep(placed-16, there-17)
advmod(there-17, deliberately-18)

(ROOT
  (S
    (ADVP (RB Yes))
    (NP (PRP it))
    (VP (VBZ does)
      (NP (NN balance))
      (PP (IN out)
        (NP
          (NP (DT the) (JJ earths) (NN climate))
          (: ...)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ makes)
                (S
                  (NP (PRP$ our) (NNS lives))
                  (ADJP (JJ possible)))))))))
    (. .)))

advmod(does-3, Yes-1)
nsubj(does-3, it-2)
root(ROOT-0, does-3)
dobj(does-3, balance-4)
det(climate-8, the-6)
amod(climate-8, earths-7)
prep_out(does-3, climate-8)
nsubj(makes-11, which-10)
rcmod(climate-8, makes-11)
poss(lives-13, our-12)
nsubj(possible-14, lives-13)
xcomp(makes-11, possible-14)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ does) (RB not)
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN moon))
            (VP (VBD was)
              (VP (VBN placed)
                (S
                  (NP (EX there))
                  (VP (TO to)
                    (VP (VB do)
                      (ADVP (RB so)))))))))))
    (. .)))

nsubj(mean-4, That-1)
aux(mean-4, does-2)
neg(mean-4, not-3)
root(ROOT-0, mean-4)
complm(placed-9, that-5)
det(moon-7, the-6)
nsubjpass(placed-9, moon-7)
auxpass(placed-9, was-8)
ccomp(mean-4, placed-9)
expl(do-12, there-10)
aux(do-12, to-11)
xcomp(placed-9, do-12)
advmod(do-12, so-13)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (NNP America))
              (VP (VBD was)
                (VP (VBN created)
                  (PP (IN by)
                    (NP (DT a) (JJ supernatural) (NN power)))
                  (SBAR (RB so) (IN that)
                    (S
                      (NP (PRP I))
                      (VP (MD would)
                        (VP (VB exist))))))))))))
    (: ...)
    (S
      (SBAR (IN because) (IN if)
        (S
          (NP (NNP American))
          (VP (VBD was) (RB not)
            (ADVP (RB here))
            (NP (RB then)))))
      (NP (PRP I))
      (ADVP (RB never))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN been)
            (VP (VBN born))))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, could-2)
root(ROOT-0, say-3)
complm(created-7, that-4)
nsubjpass(created-7, America-5)
auxpass(created-7, was-6)
ccomp(say-3, created-7)
det(power-11, a-9)
amod(power-11, supernatural-10)
agent(created-7, power-11)
advmod(exist-16, so-12)
dep(exist-16, that-13)
nsubj(exist-16, I-14)
aux(exist-16, would-15)
advcl(created-7, exist-16)
ccomp(created-7, exist-16)
mark(then-24, because-18)
dep(then-24, if-19)
nsubj(then-24, American-20)
cop(then-24, was-21)
neg(then-24, not-22)
advmod(then-24, here-23)
advcl(born-30, then-24)
nsubjpass(born-30, I-25)
neg(born-30, never-26)
aux(born-30, would-27)
aux(born-30, have-28)
auxpass(born-30, been-29)
parataxis(say-3, born-30)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS conditions))
        (PP (IN on)
          (NP (NN earth))))
      (VP (VBP lead)
        (PP (TO to)
          (NP (PRP$ our) (NN creation)))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ does) (RB not)
        (VP (VB imply)
          (SBAR (IN that)
            (S
              (NP (DT those) (NNS conditions))
              (VP (VBD were)
                (VP (VBN set)
                  (ADVP
                    (ADVP (RB just) (RB so))
                    (SBAR (IN that)
                      (S
                        (NP (PRP we))
                        (VP (MD would)
                          (VP (VB evolve)
                            (ADVP (RB here))))))))))))))
    (. .)))

det(conditions-2, The-1)
nsubj(lead-5, conditions-2)
prep_on(conditions-2, earth-4)
root(ROOT-0, lead-5)
poss(creation-8, our-7)
prep_to(lead-5, creation-8)
nsubj(imply-14, that-11)
aux(imply-14, does-12)
neg(imply-14, not-13)
conj_but(lead-5, imply-14)
complm(set-19, that-15)
det(conditions-17, those-16)
nsubjpass(set-19, conditions-17)
auxpass(set-19, were-18)
ccomp(imply-14, set-19)
advmod(so-21, just-20)
advmod(set-19, so-21)
dep(evolve-25, that-22)
nsubj(evolve-25, we-23)
aux(evolve-25, would-24)
ccomp(so-21, evolve-25)
advmod(evolve-25, here-26)

(ROOT
  (S ('' '')
    (S
      (ADVP (RB Also))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ silly)
          (S
            (VP (TO to)
              (VP (VB assume)
                (SBAR
                  (S
                    (NP (PRP$ our) (NNS eyes))
                    (VP (MD would)
                      (VP (VB adapt)
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN pitch) (NN black))
                            (PP (IN of)
                              (NP (NN night)))))
                        (SBAR (IN if)
                          (S
                            (NP (EX there))
                            (VP (VBD was)
                              (NP (DT no) (NN moon)))))))))))))))
    (: ...)
    (S
      (NP (PDT half) (DT the) (NN day))
      (NP (PRP we))
      (VP (MD would)
        (ADVP (RB still))
        (VP (VB be)
          (PP (IN in)
            (NP (NN sunlight))))))
    (. .)))

advmod(silly-6, Also-2)
nsubj(silly-6, it-4)
cop(silly-6, 's-5)
root(ROOT-0, silly-6)
aux(assume-8, to-7)
xcomp(silly-6, assume-8)
poss(eyes-10, our-9)
nsubj(adapt-12, eyes-10)
aux(adapt-12, would-11)
ccomp(assume-8, adapt-12)
det(black-16, the-14)
nn(black-16, pitch-15)
prep_to(adapt-12, black-16)
prep_of(black-16, night-18)
mark(was-21, if-19)
expl(was-21, there-20)
advcl(adapt-12, was-21)
det(moon-23, no-22)
nsubj(was-21, moon-23)
predet(day-27, half-25)
det(day-27, the-26)
tmod(be-31, day-27)
nsubj(be-31, we-28)
aux(be-31, would-29)
advmod(be-31, still-30)
parataxis(silly-6, be-31)
prep_in(be-31, sunlight-33)

(ROOT
  (S
    (VP (`` ``) (VBG except)
      (PP (IN during)
        (NP (JJ partial) (NNS eclipses))))
    (: ...)))

root(ROOT-0, except-2)
amod(eclipses-5, partial-4)
prep_during(except-2, eclipses-5)

(ROOT
  (S
    (NP (RB Even) (JJ nocturnal) (NNS animals))
    (VP (VBP require)
      (FRAG
        (ADJP (JJ light)
          (PP (IN at)
            (NP (NN night))))
        (S
          (VP (TO to)
            (VP (VB see))))
        (. .)))
    (. .)))

advmod(animals-3, Even-1)
amod(animals-3, nocturnal-2)
nsubj(require-4, animals-3)
root(ROOT-0, require-4)
dep(require-4, light-5)
prep_at(light-5, night-7)
aux(see-9, to-8)
dep(light-5, see-9)

(ROOT
  (S
    (NP (PRP they))
    (ADVP (RB just))
    (VP (VBP make)
      (NP
        (NP (JJR better) (NN use))
        (PP (IN of)
          (NP (PRP it))))
      (PP (IN by)
        (S
          (NP (PRP it))
          (VP (VBG reflecting)
            (PRT (RP off))
            (NP
              (NP (DT the) (NN back))
              (PP (IN of)
                (NP (DT the) (NN eye))))))))
    (. .)))

nsubj(make-3, they-1)
advmod(make-3, just-2)
root(ROOT-0, make-3)
amod(use-5, better-4)
dobj(make-3, use-5)
prep_of(use-5, it-7)
nsubj(reflecting-10, it-9)
prepc_by(make-3, reflecting-10)
prt(reflecting-10, off-11)
det(back-13, the-12)
dobj(reflecting-10, back-13)
det(eye-16, the-15)
prep_of(back-13, eye-16)

(ROOT
  (S ('' '')
    (S
      (NP (DT The) (NN moon))
      (VP (VBD was)
        (VP
          (ADVP (RB there)
            (PP (IN before)
              (NP (NN life))))
          (VBN evolved))))
    (: ...)
    (S
      (ADVP (RB way) (RB before))
      (NP (EX there))
      (VP (VBD were)
        (NP (JJ nocturnal) (NNS animals))))
    (. .)))

det(moon-3, The-2)
nsubjpass(evolved-8, moon-3)
auxpass(evolved-8, was-4)
advmod(evolved-8, there-5)
prep_before(there-5, life-7)
root(ROOT-0, evolved-8)
advmod(before-11, way-10)
advmod(were-13, before-11)
expl(were-13, there-12)
parataxis(evolved-8, were-13)
amod(animals-15, nocturnal-14)
nsubj(were-13, animals-15)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP they))
          (VP (VBD evolved)
            (PP (IN into)
              (NP (JJ nocturnal) (NNS animals)))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
advmod(evolved-5, why-3)
nsubj(evolved-5, they-4)
advcl(is-2, evolved-5)
amod(animals-8, nocturnal-7)
prep_into(evolved-5, animals-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (DT no) (NN moon) (, ,)
              (CC and)
              (NN life))
            (VP (VBN evolved)
              (ADVP (RB then)))))))
    (NP (PRP it))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN adapted)
          (PP (TO to)
            (NP
              (NP (DT the) (NNS conditions))
              (VP (VBN found)
                (PP (IN on)
                  (NP (NN earth)))))))))
    (. .)))

mark(was-3, If-1)
expl(was-3, there-2)
advcl(adapted-14, was-3)
det(moon-5, no-4)
nsubj(was-3, moon-5)
nsubj(was-3, life-8)
conj_and(moon-5, life-8)
partmod(moon-5, evolved-9)
advmod(evolved-9, then-10)
nsubj(adapted-14, it-11)
aux(adapted-14, would-12)
aux(adapted-14, have-13)
root(ROOT-0, adapted-14)
det(conditions-17, the-16)
prep_to(adapted-14, conditions-17)
partmod(conditions-17, found-18)
prep_on(found-18, earth-20)

(ROOT
  (FRAG
    (NP (JJ '') (NN Anyway) (. .))
    (. .)))


(ROOT
  (S
    (NP
      (NP (DT the) (NN list))
      (PP (IN of)
        (NP
          (NP (NNS things))
          (PP (IN in)
            (NP
              (NP (DT this) (NN world))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBP reveal)
                    (SBAR (IN that)
                      (S
                        (NP (PRP they))
                        (VP (VBD were)
                          (VP (VBN designed)
                            (PP (IN for)
                              (NP (PRP$ our) (NN habitation)))))))))))))))
    (VP (VBZ is)
      (ADJP (RB as) (JJ long)
        (PP (IN as)
          (NP
            (NP (DT the) (NN list))
            (PP (IN of)
              (NP
                (NP (NNS things))
                (PP (IN in)
                  (NP (DT this) (NN world)))))))))
    (: ...)))

det(list-2, the-1)
nsubj(long-19, list-2)
prep_of(list-2, things-4)
det(world-7, this-6)
prep_in(things-4, world-7)
nsubj(reveal-9, world-7)
rcmod(world-7, reveal-9)
complm(designed-13, that-10)
nsubjpass(designed-13, they-11)
auxpass(designed-13, were-12)
ccomp(reveal-9, designed-13)
poss(habitation-16, our-15)
prep_for(designed-13, habitation-16)
cop(long-19, is-17)
advmod(long-19, as-18)
root(ROOT-0, long-19)
det(list-22, the-21)
prep_as(long-19, list-22)
prep_of(list-22, things-24)
det(world-27, this-26)
prep_in(things-24, world-27)

(ROOT
  (SBAR (IN if)
    (S
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (`` ``) (VB see) ('' '')
          (NP (DT that)))))
    (: ...)))

mark(see-6, if-1)
nsubj(see-6, you-2)
aux(see-6, ca-3)
neg(see-6, n't-4)
root(ROOT-0, see-6)
dobj(see-6, that-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP guess)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD ca) (RB n't)
            (VP (VB change)
              (NP (PRP it)))))))
    (. .)))

nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
nsubj(change-6, I-3)
aux(change-6, ca-4)
neg(change-6, n't-5)
ccomp(guess-2, change-6)
dobj(change-6, it-7)

(ROOT
  (S ('' '')
    (S
      (NP (PRP You))
      (VP (VBP are)
        (VP (VBG looking)
          (PP (IN from)
            (ADVP (RB now) (RB backwards))))))
    (: ...)
    (S
      (PP (IN with)
        (NP
          (NP (DT the) (NN knowledge))
          (PP (IN of)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ is)
                  (S
                    (VP (TO to)
                      (VP (VB come))))))))))
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ easy)
          (S
            (VP (TO to)
              (VP (VB think)
                (NP
                  (NP (DT that))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP we))
                      (VP (VBP have)
                        (VP (VBZ is)
                          (ADJP (JJ inevitable)))))))))))))
    (. .)))

nsubj(looking-4, You-2)
aux(looking-4, are-3)
root(ROOT-0, looking-4)
prep(looking-4, from-5)
advmod(backwards-7, now-6)
pcomp(from-5, backwards-7)
det(knowledge-11, the-10)
prep_with(easy-19, knowledge-11)
nsubj(is-14, what-13)
prepc_of(knowledge-11, is-14)
aux(come-16, to-15)
xcomp(is-14, come-16)
nsubj(easy-19, it-17)
cop(easy-19, is-18)
parataxis(looking-4, easy-19)
aux(think-21, to-20)
xcomp(easy-19, think-21)
dobj(think-21, that-22)
dobj(inevitable-27, that-22)
rel(inevitable-27, what-23)
nsubj(inevitable-27, we-24)
aux(inevitable-27, have-25)
cop(inevitable-27, is-26)
rcmod(that-22, inevitable-27)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (MD would) (RB not)
      (VP (VB happen)
        (PP (IN by)
          (NP (NN chance)))))
    (. ...)))

nsubj(happen-5, This-2)
aux(happen-5, would-3)
neg(happen-5, not-4)
root(ROOT-0, happen-5)
prep_by(happen-5, chance-7)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (ADJP (RB rather) (JJ illogical)))
    (. .)))

nsubj(illogical-4, That-1)
cop(illogical-4, is-2)
advmod(illogical-4, rather-3)
root(ROOT-0, illogical-4)

(ROOT
  (FRAG
    (WHADVP (RB '') (WRB Why))
    (NP (RB not))
    (. ?)))

dep(not-3, Why-2)
root(ROOT-0, not-3)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (ADJP
      (ADJP (JJ impossible))
      (CC or)
      (ADJP (RB just) (RB extremely) (JJ unlikely)))
    (. ?)))

cop(impossible-3, Is-1)
nsubj(impossible-3, it-2)
nsubj(unlikely-7, it-2)
root(ROOT-0, impossible-3)
advmod(unlikely-7, just-5)
advmod(unlikely-7, extremely-6)
conj_or(impossible-3, unlikely-7)

(ROOT
  (S ('' '')
    (PP (IN for)
      (NP
        (NP (NN example))
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBD were)
              (ADJP (JJ possible)
                (S
                  (VP (TO to)
                    (VP (VB stand)
                      (PP (IN on)
                        (NP
                          (NP (DT the) (NN surface))
                          (PP (IN of)
                            (NP
                              (NP (NNP Jupiter))
                              (SBAR
                                (S
                                  (NP (PRP I))
                                  (ADVP (RB highly))
                                  (VP (VBP doubt)
                                    (SBAR (IN that)
                                      (S
                                        (NP
                                          (NP (DT any) (CD 1))
                                          (PP (IN of)
                                            (NP (PRP it))))
                                        (VP (VBZ 's)
                                          (NP (CD 63)))))))))))))))))))))
    (NP (VBG orbiting) (NNS bodies))
    (VP (MD would)
      (VP (VB exhibit)
        (NP (DT the) (JJ same) (NN effect))))
    (. .)))

prep_for(exhibit-28, example-3)
mark(possible-7, if-4)
nsubj(possible-7, it-5)
cop(possible-7, were-6)
dep(example-3, possible-7)
aux(stand-9, to-8)
xcomp(possible-7, stand-9)
det(surface-12, the-11)
prep_on(stand-9, surface-12)
prep_of(surface-12, Jupiter-14)
nsubj(doubt-17, I-15)
advmod(doubt-17, highly-16)
rcmod(Jupiter-14, doubt-17)
complm(63-24, that-18)
det(1-20, any-19)
nsubj(63-24, 1-20)
prep_of(1-20, it-22)
cop(63-24, 's-23)
ccomp(doubt-17, 63-24)
amod(bodies-26, orbiting-25)
nsubj(exhibit-28, bodies-26)
aux(exhibit-28, would-27)
root(ROOT-0, exhibit-28)
det(effect-31, the-29)
amod(effect-31, same-30)
dobj(exhibit-28, effect-31)

(ROOT
  (S ('' '')
    (S
      (S
        (NP
          (NP (DT The) (NNS moons))
          (PP (IN of)
            (NP (NNP Jupiter))))
        (VP (VBP are)
          (ADVP (RB much) (RBR further) (RB away))
          (, ,)
          (SBAR (IN so)
            (S
              (NP (PRP they))
              (VP (VBP are)
                (VP (MD would)
                  (VP (VB appear)
                    (ADJP (RB significantly) (JJR smaller)))))))))
      (: ...)
      (CC but)
      (S
        (INTJ (UH yes))
        (NP (PRP it))
        (VP (MD would)
          (VP (VB be)
            (ADJP (JJ possible))))))
    (: ...)
    (S
      (SBAR (IN if)
        (S
          (NP (DT the) (NNS moons))
          (VP (VBD cast)
            (NP (DT a) (NN shadow))
            (PP (IN on)
              (NP (DT the) (NNP Jupiter)))
            (PP
              (ADVP (RB then))
              (IN beneath)
              (NP (DT that) (NN shadow))))))
      (NP (PRP it))
      (VP (MD would)
        (VP (VB appear)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT an) (NN eclipse))
                  (PRN (-LRB- -LRB-)
                    (SBAR (IN though)
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (ADJP (JJ important)
                            (S
                              (VP (TO to)
                                (VP (VB note)
                                  (SBAR (IN that)
                                    (S
                                      (NP (DT the) (NNP Sun))
                                      (VP (VBZ is)
                                        (ADVP (RB just))
                                        (NP (DT an)
                                          (ADJP (RB exceptionally) (JJ bright))
                                          (NN star))
                                        (SBAR
                                          (WHADVP (WRB when))
                                          (S
                                            (VP (VBN seen)
                                              (PP (IN from)
                                                (NP (NNP Jupiter))))))))))))))))
                    (-RRB- -RRB-)))))))))
    (. .)))

det(moons-3, The-2)
nsubj(are-6, moons-3)
prep_of(moons-3, Jupiter-5)
root(ROOT-0, are-6)
advmod(away-9, much-7)
advmod(away-9, further-8)
advmod(are-6, away-9)
mark(smaller-17, so-11)
nsubj(smaller-17, they-12)
aux(smaller-17, are-13)
aux(smaller-17, would-14)
cop(smaller-17, appear-15)
advmod(smaller-17, significantly-16)
advcl(are-6, smaller-17)
dep(possible-24, yes-20)
nsubj(possible-24, it-21)
aux(possible-24, would-22)
cop(possible-24, be-23)
conj_but(are-6, possible-24)
mark(cast-29, if-26)
det(moons-28, the-27)
nsubj(cast-29, moons-28)
advcl(appear-41, cast-29)
det(shadow-31, a-30)
dobj(cast-29, shadow-31)
det(Jupiter-34, the-33)
prep_on(cast-29, Jupiter-34)
advmod(cast-29, then-35)
det(shadow-38, that-37)
prep_beneath(cast-29, shadow-38)
nsubj(appear-41, it-39)
xsubj(eclipse-45, it-39)
aux(appear-41, would-40)
parataxis(are-6, appear-41)
aux(eclipse-45, to-42)
cop(eclipse-45, be-43)
det(eclipse-45, an-44)
xcomp(appear-41, eclipse-45)
mark(important-50, though-47)
nsubj(important-50, it-48)
cop(important-50, is-49)
dep(eclipse-45, important-50)
aux(note-52, to-51)
xcomp(important-50, note-52)
complm(star-61, that-53)
det(Sun-55, the-54)
nsubj(star-61, Sun-55)
cop(star-61, is-56)
advmod(star-61, just-57)
det(star-61, an-58)
advmod(bright-60, exceptionally-59)
amod(star-61, bright-60)
ccomp(note-52, star-61)
advmod(seen-63, when-62)
advcl(star-61, seen-63)
prep_from(seen-63, Jupiter-65)

(ROOT
  (S ('' '')
    (NP (NNP The))
    (ADVP (RB only))
    (VP (VBZ planet)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (NN life) (NNS exists))
          (VP (VBZ is)
            (NP
              (NP (DT the) (JJ only) (NN planet))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (DT this) (NN spectacle))
                  (VP (MD can)
                    (VP (VB be)
                      (VP (VBN enjoyed)))))))))))
    (: ...)))

nsubj(planet-4, The-2)
advmod(planet-4, only-3)
root(ROOT-0, planet-4)
advmod(planet-11, where-5)
nn(exists-7, life-6)
nsubj(planet-11, exists-7)
cop(planet-11, is-8)
det(planet-11, the-9)
amod(planet-11, only-10)
advcl(planet-4, planet-11)
advmod(enjoyed-17, where-12)
det(spectacle-14, this-13)
nsubjpass(enjoyed-17, spectacle-14)
aux(enjoyed-17, can-15)
auxpass(enjoyed-17, be-16)
rcmod(planet-11, enjoyed-17)

(ROOT
  (S ('' '')
    (NP (DT That))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB somewhat)
          (PP (IN of)
            (NP (DT a) (NN jerk) (NN move))))
        (: ...)
        (S
          (VP (VBG putting)
            (NP
              (NP (DT the) (NN moon))
              (VP
                (ADVP (RB there))
                (VBG knowing)
                (SBAR (IN that)
                  (S
                    (NP (NNS people))
                    (VP (VBD were)
                      (VP (VBG going)
                        (S
                          (VP (TO to)
                            (VP
                              (VP (VB freak)
                                (PRT (RP out))
                                (PP (IN during)
                                  (NP (NNS eclipses))))
                              (CC and)
                              (VP (VB kill)
                                (NP (DT each) (JJ other))
                                (S
                                  (VP (TO to)
                                    (VP (VB drive)
                                      (PRT (RP away))
                                      (NP
                                        (NP (DT the) (`` ``) (NN monster) ('' ''))
                                        (VP (VBG eating)
                                          (NP (DT the) (NN sun)))))))))))))))))))))
    (. ?)))

nsubj(somewhat-5, That-2)
aux(somewhat-5, would-3)
cop(somewhat-5, be-4)
root(ROOT-0, somewhat-5)
det(move-9, a-7)
nn(move-9, jerk-8)
prep_of(somewhat-5, move-9)
parataxis(somewhat-5, putting-11)
xcomp(somewhat-5, putting-11)
det(moon-13, the-12)
dobj(putting-11, moon-13)
advmod(knowing-15, there-14)
partmod(moon-13, knowing-15)
complm(going-19, that-16)
nsubj(going-19, people-17)
aux(going-19, were-18)
ccomp(knowing-15, going-19)
aux(freak-21, to-20)
xcomp(going-19, freak-21)
prt(freak-21, out-22)
prep_during(freak-21, eclipses-24)
xcomp(going-19, kill-26)
conj_and(freak-21, kill-26)
det(other-28, each-27)
dobj(kill-26, other-28)
aux(drive-30, to-29)
xcomp(kill-26, drive-30)
prt(drive-30, away-31)
det(monster-34, the-32)
dobj(drive-30, monster-34)
partmod(monster-34, eating-36)
det(sun-38, the-37)
dobj(eating-36, sun-38)

