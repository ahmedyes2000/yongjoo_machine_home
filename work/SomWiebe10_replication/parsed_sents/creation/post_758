(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN proof))
      (SBAR
        (SBAR (IN that)
          (S
            (NP (EX there))
            (ADVP (RB even))
            (VP (VBZ exists)
              (S
                (NP (DT a) (NNP God))
                (VP (TO to)
                  (VP (VB begin)
                    (PP (IN with))))))))
        (, ,)
        (CC so)
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT that) (NN case)))
          (S
            (NP (PRP you))
            (VP (MD ca) (RB n't)
              (ADVP (RB really))
              (VP (VB use)
                (ADVP (DT that)
                  (CC either))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(proof-4, no-3)
nsubj(is-2, proof-4)
complm(exists-8, that-5)
expl(exists-8, there-6)
advmod(exists-8, even-7)
ccomp(is-2, exists-8)
det(God-10, a-9)
nsubj(begin-12, God-10)
aux(begin-12, to-11)
xcomp(exists-8, begin-12)
prep(begin-12, with-13)
dep(use-23, in-16)
det(case-18, that-17)
pobj(in-16, case-18)
nsubj(use-23, you-19)
aux(use-23, ca-20)
neg(use-23, n't-21)
advmod(use-23, really-22)
ccomp(is-2, use-23)
conj_so(exists-8, use-23)
dep(either-25, that-24)
advmod(use-23, either-25)

(ROOT
  (S (IN So)
    (NP (PRP we))
    (VP (VBP do) (RB n't)
      (ADVP (RB even))
      (VP (VB have)
        (NP (DT a) (JJ confirmed) (NN eyewitness) (NN account))))
    (. .)))

dep(have-6, So-1)
nsubj(have-6, we-2)
aux(have-6, do-3)
neg(have-6, n't-4)
advmod(have-6, even-5)
root(ROOT-0, have-6)
det(account-10, a-7)
amod(account-10, confirmed-8)
nn(account-10, eyewitness-9)
dobj(have-6, account-10)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBD said))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB also))
    (VP (VBZ does) (RB n't)
      (VP (VB help)
        (NP (NN anything))
        (SBAR (IN that)
          (S
            (NP
              (NP (JJ law-breaking) (NN conmen))
              (PRN (-LRB- -LRB-)
                (NP (NNP e.g.) (NNP Kent) (NNP Hovind))
                (-RRB- -RRB-)))
            (VP (VB pedal)
              (NP (DT this) (NNP BS)))))))
    (. .)))

mark(said-3, As-1)
nsubj(said-3, I-2)
advcl(help-9, said-3)
nsubj(help-9, it-5)
advmod(help-9, also-6)
aux(help-9, does-7)
neg(help-9, n't-8)
root(ROOT-0, help-9)
dobj(help-9, anything-10)
complm(pedal-19, that-11)
amod(conmen-13, law-breaking-12)
nsubj(pedal-19, conmen-13)
nn(Hovind-17, e.g.-15)
nn(Hovind-17, Kent-16)
appos(conmen-13, Hovind-17)
ccomp(help-9, pedal-19)
det(BS-21, this-20)
dobj(pedal-19, BS-21)

(ROOT
  (S
    (NP (DT That))
    (ADVP (RB really))
    (VP (VBZ makes)
      (SBAR
        (S
          (NP (PRP$ his) (NN case))
          (VP
            (VP (VBP look)
              (ADJP (JJ weak)))
            (CC and)
            (VP (VBZ makes)
              (S
                (NP (PRP$ his) (NNS followers))
                (VP (VB look)
                  (ADJP (JJ bad))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP he))
                      (VP (VBZ pulls)
                        (NP
                          (NP (DT some) (NN crap))
                          (PP (IN like)
                            (NP (DT that))))))))))))))
    (. .)))

nsubj(makes-3, That-1)
advmod(makes-3, really-2)
root(ROOT-0, makes-3)
poss(case-5, his-4)
nsubj(look-6, case-5)
nsubj(makes-9, case-5)
ccomp(makes-3, look-6)
acomp(look-6, weak-7)
ccomp(makes-3, makes-9)
conj_and(look-6, makes-9)
poss(followers-11, his-10)
nsubj(look-12, followers-11)
ccomp(makes-9, look-12)
acomp(look-12, bad-13)
advmod(pulls-16, when-14)
nsubj(pulls-16, he-15)
advcl(look-12, pulls-16)
det(crap-18, some-17)
dobj(pulls-16, crap-18)
prep_like(crap-18, that-20)

