(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (NP (NNP ID))
          (VP (VBD were)
            (VP (VBN based)
              (PP (IN on)
                (NP (DT the) (JJ negative) (NN argument)))
              (SBAR (IN that)
                (S
                  (NP (NN evolution))
                  (VP (MD ca) (RB n't)
                    (VP (VB produce)
                      (NP (NN something))))))))))
      (, ,)
      (ADVP (RB therefore))
      (NP (PRP it))
      (VP (VBD was)
        (NP (NN design))))
    (, ,) (RB then)
    (S
      (NP (NNP ID))
      (`` `)
      (NP
        (NP (NNPS ers))
        (SBAR
          (S
            (VP (MD would)
              (VP (VB insist)
                (NP (DT the) (NNS rings))
                (PP (IN around)
                  (NP (NNP Saturn))))))))
      (VP (VBD were)
        (VP (VBN designed)
          (PP (IN for)
            (NP (DT the) (JJ same) (NN reason)))
          (SBAR (IN since)
            (S
              (NP
                (NP (DT no) (NN form))
                (PP (IN of)
                  (NP
                    (NP (NNP Darwin) (POS 's))
                    (NN theory))))
              (VP (MD could)
                (VP (VB produce)
                  (NP (PRP them)))))))))
    (. .)))

mark(based-5, If-2)
nsubjpass(based-5, ID-3)
auxpass(based-5, were-4)
advcl(design-20, based-5)
det(argument-9, the-7)
amod(argument-9, negative-8)
prep_on(based-5, argument-9)
complm(produce-14, that-10)
nsubj(produce-14, evolution-11)
aux(produce-14, ca-12)
neg(produce-14, n't-13)
ccomp(based-5, produce-14)
dobj(produce-14, something-15)
advmod(design-20, therefore-17)
nsubj(design-20, it-18)
cop(design-20, was-19)
root(ROOT-0, design-20)
advmod(design-20, then-22)
nsubjpass(designed-33, ID-23)
nsubjpass(designed-33, ers-25)
aux(insist-27, would-26)
rcmod(ers-25, insist-27)
det(rings-29, the-28)
dobj(insist-27, rings-29)
prep_around(insist-27, Saturn-31)
auxpass(designed-33, were-32)
ccomp(design-20, designed-33)
det(reason-37, the-35)
amod(reason-37, same-36)
prep_for(designed-33, reason-37)
mark(produce-46, since-38)
det(form-40, no-39)
nsubj(produce-46, form-40)
poss(theory-44, Darwin-42)
prep_of(form-40, theory-44)
aux(produce-46, could-45)
advcl(designed-33, produce-46)
dobj(produce-46, them-47)

