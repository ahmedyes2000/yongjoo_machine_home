(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (VBP detect)
      (NP (NN design))
      (PP (IN by)
        (S
          (VP (VBG looking)
            (PP (IN for)
              (NP (DT the) (NN tell-tale) (NNS signs)))
            (SBAR (IN that)
              (S
                (NP (DT an) (JJ intelligent) (NN agent))
                (VP (VBD acted))))))))
    (. .)))

nsubj(detect-3, We-2)
root(ROOT-0, detect-3)
dobj(detect-3, design-4)
prepc_by(detect-3, looking-6)
det(signs-10, the-8)
nn(signs-10, tell-tale-9)
prep_for(looking-6, signs-10)
complm(acted-15, that-11)
det(agent-14, an-12)
amod(agent-14, intelligent-13)
nsubj(acted-15, agent-14)
ccomp(looking-6, acted-15)

(ROOT
  (S
    (NP (JJ Intelligent) (NNS agents))
    (VP (VBP tend)
      (S
        (VP (TO to)
          (VP (VB produce)
            (NP (VBN specified) (NN complexity))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP act))))))))
    (. .)))

amod(agents-2, Intelligent-1)
nsubj(tend-3, agents-2)
xsubj(produce-5, agents-2)
root(ROOT-0, tend-3)
aux(produce-5, to-4)
xcomp(tend-3, produce-5)
amod(complexity-7, specified-6)
dobj(produce-5, complexity-7)
advmod(act-10, when-8)
nsubj(act-10, they-9)
advcl(produce-5, act-10)

(ROOT
  (S ('' '')
    (PP (VBG Seems)
      (PP (IN like)
        (NP
          (NP (DT the) (NN burden))
          (PP (IN of)
            (NP (NN proof))))))
    (VP (VBZ goes)
      (NP (DT both) (NNS ways)))
    (. .)))

prep(goes-8, Seems-2)
pcomp(Seems-2, like-3)
det(burden-5, the-4)
prep_like(Seems-2, burden-5)
prep_of(burden-5, proof-7)
root(ROOT-0, goes-8)
det(ways-10, both-9)
dobj(goes-8, ways-10)

(ROOT
  (S
    (NP (NNP ''))
    (VP (VBZ Nope))
    (. .)))


(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (NP (NN reality)))
    (. .)))

nsubj(reality-3, Science-1)
cop(reality-3, is-2)
root(ROOT-0, reality-3)

(ROOT
  (S
    (NP (NN Reality))
    (VP (VBZ is)
      (NP (NN science)))
    (. .)))

nsubj(science-3, Reality-1)
cop(science-3, is-2)
root(ROOT-0, science-3)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN science))
        (VP (MD can)
          (VP (VB explain)
            (NP (NN reality))
            (PP (IN without)
              (S
                (VP (VBG resorting)
                  (PP (TO to)
                    (NP
                      (NP (DT a) (NN miracle))
                      (CC or)
                      (NP (DT the) (NN supernatural)))))))))))
    (, ,)
    (NP (RB then) (NN science))
    (VP (VBZ is)
      (ADJP (JJ satisfactory)))
    (. .)))

mark(explain-4, If-1)
nsubj(explain-4, science-2)
aux(explain-4, can-3)
advcl(satisfactory-18, explain-4)
dobj(explain-4, reality-5)
prepc_without(explain-4, resorting-7)
det(miracle-10, a-9)
prep_to(resorting-7, miracle-10)
det(supernatural-13, the-12)
prep_to(resorting-7, supernatural-13)
conj_or(miracle-10, supernatural-13)
advmod(science-16, then-15)
nsubj(satisfactory-18, science-16)
cop(satisfactory-18, is-17)
root(ROOT-0, satisfactory-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP think)
          (SBAR
            (S
              (NP (NN science))
              (VP (VBZ is) (RB not)
                (ADJP (JJ satisfactory))))))))
    (, ,)
    (NP
      (NP (RB then) (DT the) (NN burden))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ is)
      (PP (IN on)
        (NP (PRP you)))
      (S
        (VP (TO to)
          (VP (VB show)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBZ is) (RB not)
                  (ADJP (JJ satisfactory)))))))))
    (. .)))

mark(think-3, If-1)
nsubj(think-3, you-2)
advcl(is-14, think-3)
nsubj(satisfactory-7, science-4)
cop(satisfactory-7, is-5)
neg(satisfactory-7, not-6)
ccomp(think-3, satisfactory-7)
advmod(burden-11, then-9)
det(burden-11, the-10)
nsubj(is-14, burden-11)
xsubj(show-18, burden-11)
prep_of(burden-11, proof-13)
root(ROOT-0, is-14)
prep_on(is-14, you-16)
aux(show-18, to-17)
xcomp(is-14, show-18)
complm(satisfactory-23, that-19)
nsubj(satisfactory-23, it-20)
cop(satisfactory-23, is-21)
neg(satisfactory-23, not-22)
ccomp(show-18, satisfactory-23)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (DT the) (`` ``) (NN supernatural) ('' ''))
        (VP (VBZ is) (`` ``)
          (NP (JJ outside) (NN science))
          ('' ''))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP$ your) (JJ only) (NN chance))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB show)
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBP are)
                  (NP
                    (NP (DT some)
                      (ADJP (JJ observed))
                      (NNS events))
                    (PRN (-LRB- -LRB-)
                      (NP (NNS miracles))
                      (-RRB- -RRB-))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD can) (RB not)
                          (VP (VB be)
                            (VP (VBN explained)
                              (PP (IN by)
                                (NP (NN science))))))))))))))))
    (. .)))

cc(is-17, But-1)
mark(science-10, if-2)
det(supernatural-5, the-3)
nsubj(science-10, supernatural-5)
cop(science-10, is-7)
amod(science-10, outside-9)
advcl(is-17, science-10)
advmod(is-17, then-13)
poss(chance-16, your-14)
amod(chance-16, only-15)
nsubj(is-17, chance-16)
xsubj(show-19, chance-16)
root(ROOT-0, is-17)
aux(show-19, to-18)
xcomp(is-17, show-19)
complm(are-22, that-20)
expl(are-22, there-21)
ccomp(show-19, are-22)
det(events-25, some-23)
amod(events-25, observed-24)
nsubj(are-22, events-25)
nsubjpass(explained-33, events-25)
appos(events-25, miracles-27)
aux(explained-33, can-30)
neg(explained-33, not-31)
auxpass(explained-33, be-32)
rcmod(events-25, explained-33)
agent(explained-33, science-35)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN argument))
        (PP (IN from)
          (NP (NN ignorance)))))
    (. .)))

nsubj(argument-4, This-1)
cop(argument-4, is-2)
det(argument-4, an-3)
root(ROOT-0, argument-4)
prep_from(argument-4, ignorance-6)

(ROOT
  (SBAR (IN If)
    (S
      (VP
        (NP
          (NP (NN science))
          (SBAR
            (S
              (VP (MD can) (RB not)))))
        (PRN (-LRB- -LRB-)
          (FRAG
            (ADVP (RB yet))
            (. ?))
          (-RRB- -RRB-))))))

mark(science-2, If-1)
root(ROOT-0, science-2)
rcmod(science-2, can-3)
neg(can-3, not-4)
dep(science-2, yet-6)

(ROOT
  (S
    (S
      (VP (VB explain)
        (NP (DT this))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP (DT a) (NN miracle))
          (VP (VBN caused)
            (PP (IN by)
              (NP (DT a) (JJ supernatural) (NN entity)))))))
    (. .)))

ccomp(miracle-9, explain-1)
dobj(explain-1, this-2)
advmod(miracle-9, then-4)
nsubj(miracle-9, it-5)
aux(miracle-9, must-6)
cop(miracle-9, be-7)
det(miracle-9, a-8)
root(ROOT-0, miracle-9)
partmod(miracle-9, caused-10)
det(entity-14, a-12)
amod(entity-14, supernatural-13)
agent(caused-10, entity-14)

(ROOT
  (NP (NNP '') (NNP Riiiight) (. .)))


(ROOT
  (S
    (SBAR (IN If)
      (S
        (S
          (NP (NN science))
          (VP (MD can)
            (VP (VB explain)
              (NP (PRP it)))))
        (CC and)
        (S
          (NP (NNP ID))
          (VP (MD can)
            (ADVP (RB also))
            (VP (VB explain)
              (NP (PRP it)))))))
    (, ,)
    (NP (RB then) (NN science))
    (VP (VBZ is)
      (VP (VBN preferred)
        (SBAR (IN because)
          (S
            (NP (NNP ID))
            (VP (VBZ introduces)
              (NP (DT an) (JJ unnecessary) (NN element)))))))
    (. .)))

mark(explain-4, If-1)
nsubj(explain-4, science-2)
aux(explain-4, can-3)
advcl(preferred-16, explain-4)
dobj(explain-4, it-5)
nsubj(explain-10, ID-7)
aux(explain-10, can-8)
advmod(explain-10, also-9)
conj_and(explain-4, explain-10)
advcl(preferred-16, explain-10)
dobj(explain-10, it-11)
advmod(science-14, then-13)
nsubjpass(preferred-16, science-14)
auxpass(preferred-16, is-15)
root(ROOT-0, preferred-16)
mark(introduces-19, because-17)
nsubj(introduces-19, ID-18)
advcl(preferred-16, introduces-19)
det(element-22, an-20)
amod(element-22, unnecessary-21)
dobj(introduces-19, element-22)

(ROOT
  (S (IN So)
    (NP
      (NP (DT the) (NN burden))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ is)
      (PP (IN on)
        (NP (NNP ID)))
      (S
        (VP (TO to)
          (VP (VB show)
            (SBAR (IN that)
              (S
                (NP (DT the) (JJ extra) (NN element))
                (VP (VBZ is)
                  (ADJP (JJ necessary)))))))))
    (. .)))

dep(is-6, So-1)
det(burden-3, the-2)
nsubj(is-6, burden-3)
xsubj(show-10, burden-3)
prep_of(burden-3, proof-5)
root(ROOT-0, is-6)
prep_on(is-6, ID-8)
aux(show-10, to-9)
xcomp(is-6, show-10)
complm(necessary-16, that-11)
det(element-14, the-12)
amod(element-14, extra-13)
nsubj(necessary-16, element-14)
cop(necessary-16, is-15)
ccomp(show-10, necessary-16)

(ROOT
  (S
    (ADVP (RB Well))
    (NP (`` ``) (JJ specified) (NN complexity) ('' ''))
    (VP (VBZ is)
      (NP (DT a) (JJ nonsense) (NN phrase)
        (S
          (VP (TO to)
            (VP (VB confuse)
              (NP (DT the) (NNS rubes)))))))
    (. .)))

advmod(phrase-9, Well-1)
amod(complexity-4, specified-3)
nsubj(phrase-9, complexity-4)
cop(phrase-9, is-6)
det(phrase-9, a-7)
amod(phrase-9, nonsense-8)
root(ROOT-0, phrase-9)
aux(confuse-11, to-10)
infmod(phrase-9, confuse-11)
det(rubes-13, the-12)
dobj(confuse-11, rubes-13)

(ROOT
  (S (CC And)
    (ADVP (RB apparently))
    (NP (`` ``) (NN tell-tale) (NNS signs) ('' ''))
    (VP (VBP are)
      (ADVP (RB also))
      (PP (IN in)
        (NP
          (NP (DT the) (NN eye))
          (PP (IN of)
            (NP (DT the) (NN beholder))))))
    (. .)))

cc(are-7, And-1)
advmod(are-7, apparently-2)
nn(signs-5, tell-tale-4)
nsubj(are-7, signs-5)
root(ROOT-0, are-7)
advmod(are-7, also-8)
det(eye-11, the-10)
prep_in(are-7, eye-11)
det(beholder-14, the-13)
prep_of(eye-11, beholder-14)

(ROOT
  (S (`` ``)
    (NP (DT the) (NN animation))
    (VP (VBZ illustrates)
      (S
        (ADJP (JJ unseen))
        (NP
          (NP (JJ molecular) (NNS mechanisms))
          (CC and)
          (NP (DT the) (NNS ones)))))
    (PRN
      (S
        (NP (PRP they))
        (VP (VBP trigger)))
      (, ,))
    (SBAR
      (ADVP (RB specifically))
      (WHADVP (WRB how))
      (S
        (NP (JJ white) (NN blood) (NNS cells))
        (VP (VBP sense)
          (CC and)
          (VBP respond)
          (PP (TO to)
            (NP
              (NP (PRP$ their) (NNS surroundings))
              (CC and)
              (NP (JJ external) (NNS stimuli)))))))
    (. .)))

det(animation-3, the-2)
nsubj(illustrates-4, animation-3)
root(ROOT-0, illustrates-4)
acomp(illustrates-4, unseen-5)
amod(mechanisms-7, molecular-6)
dep(unseen-5, mechanisms-7)
det(ones-10, the-9)
dep(unseen-5, ones-10)
conj_and(mechanisms-7, ones-10)
nsubj(trigger-12, they-11)
parataxis(illustrates-4, trigger-12)
advmod(sense-19, specifically-14)
advmod(sense-19, how-15)
amod(cells-18, white-16)
nn(cells-18, blood-17)
nsubj(sense-19, cells-18)
nsubj(respond-21, cells-18)
dep(illustrates-4, sense-19)
dep(illustrates-4, respond-21)
conj_and(sense-19, respond-21)
poss(surroundings-24, their-23)
prep_to(sense-19, surroundings-24)
amod(stimuli-27, external-26)
prep_to(sense-19, stimuli-27)
conj_and(surroundings-24, stimuli-27)

(ROOT
  (X
    (ADVP (RB '') (RB So))
    (NP (WP what))
    (. ?)))

dep(what-3, So-2)
root(ROOT-0, what-3)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB simply))
      (VP (VBN known)
        (NP (NN science))))
    (. .)))

nsubjpass(known-4, This-1)
auxpass(known-4, is-2)
advmod(known-4, simply-3)
root(ROOT-0, known-4)
dobj(known-4, science-5)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (`` ``) (NN tell-tale) (NN sign) ('' ''))
        (PP (IN of)
          (NP (DT an) (`` ``) (JJ intelligent) (NN agent) ('' '')))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(sign-6, no-3)
nn(sign-6, tell-tale-5)
nsubj(is-2, sign-6)
det(agent-12, an-9)
amod(agent-12, intelligent-11)
prep_of(sign-6, agent-12)

(ROOT
  (FRAG (RB Not)
    (PP (IN in)
      (NP
        (NP (DT the) (NN eye))
        (PP (IN of)
          (NP
            (NP (DT this) (NN beholder))
            (ADVP (RB anyway))))))
    (. .)))

root(ROOT-0, Not-1)
dep(Not-1, in-2)
det(eye-4, the-3)
pobj(in-2, eye-4)
det(beholder-7, this-6)
prep_of(eye-4, beholder-7)
advmod(beholder-7, anyway-8)

