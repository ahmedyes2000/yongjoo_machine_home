(ROOT
  (S (`` ``)
    (NP (DT The) (JJ random))
    (VP (VBZ comes)
      (PP (IN in)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP
              (NP (NNS particles))
              (PP (IN of)
                (NP
                  (NP (NNP RNA))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD came)
                        (PRT (RP out))
                        (PP (IN of)
                          (NP (DT the) (JJ primordial) (NN ooze)))))))))
            (VP (VBN aligned)
              (PP (IN by)
                (NP
                  (NP (NN chance))
                  (PP (IN in)
                    (NP (PDT such) (DT a) (NN way)))))
              (S
                (VP (TO to)
                  (VP (VB produce)
                    (NP (DT a) (JJ single-celled) (NN organism))))))))))
    (. .)))

det(random-3, The-2)
nsubj(comes-4, random-3)
root(ROOT-0, comes-4)
advmod(aligned-17, when-6)
nsubj(aligned-17, particles-7)
xsubj(produce-25, particles-7)
prep_of(particles-7, RNA-9)
nsubj(came-11, RNA-9)
rcmod(RNA-9, came-11)
det(ooze-16, the-14)
amod(ooze-16, primordial-15)
prep_out_of(came-11, ooze-16)
prepc_in(comes-4, aligned-17)
prep_by(aligned-17, chance-19)
predet(way-23, such-21)
det(way-23, a-22)
prep_in(chance-19, way-23)
aux(produce-25, to-24)
xcomp(aligned-17, produce-25)
det(organism-28, a-26)
amod(organism-28, single-celled-27)
dobj(produce-25, organism-28)

(ROOT
  (S ('' '')
    (PP (IN By)
      (NP
        (NP (DT the) (NN nature))
        (PP (IN of)
          (NP (PRP$ their) (JJ physical) (NN makeup) (NN RNA)))))
    (VP (MD will)
      (VP (VB reproduce) (, ,)
        (S
          (VP (VBN given)
            (ADVP
              (NP (DT the) (JJ right) (NNS chemicals))
              (RB near))
            (PP (IN by))))))
    (. .)))

det(nature-4, the-3)
prep_by(reproduce-11, nature-4)
poss(RNA-9, their-6)
amod(RNA-9, physical-7)
nn(RNA-9, makeup-8)
prep_of(nature-4, RNA-9)
aux(reproduce-11, will-10)
root(ROOT-0, reproduce-11)
dep(reproduce-11, given-13)
det(chemicals-16, the-14)
amod(chemicals-16, right-15)
npadvmod(near-17, chemicals-16)
advmod(given-13, near-17)
prep(given-13, by-18)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN With)
        (FRAG (CC or)
          (PP (IN without)
            (NP (PRP it)))))
      (, ,)
      (NP (PRP you))
      (VP (MD 'd)
        (VP (VB have)
          (NP
            (NP (JJ good) (NNS people))
            (UCP
              (VP (VBG doing)
                (S
                  (NP
                    (NP (JJ good) (NNS things))
                    (CC and)
                    (NP (JJ evil) (NNS people)))
                  (VP (VBG doing)
                    (NP (JJ bad) (NNS things)))))
              (, ,)
              (CC but)
              (PP (IN for)
                (NP (JJ good) (NNS people)))))
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (JJ bad) (NNS things))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ takes)
      (NP (NN religion)))
    (. .) ('' '')))

mark(or-3, With-2)
advcl(have-9, or-3)
dep(or-3, without-4)
pobj(without-4, it-5)
nsubj(have-9, you-7)
aux(have-9, 'd-8)
ccomp(takes-32, have-9)
amod(people-11, good-10)
dobj(have-9, people-11)
dep(people-11, doing-12)
amod(things-14, good-13)
nsubj(doing-18, things-14)
amod(people-17, evil-16)
conj_and(things-14, people-17)
nsubj(doing-18, people-17)
dep(doing-12, doing-18)
amod(things-20, bad-19)
dobj(doing-18, things-20)
dep(people-11, for-23)
conj_but(doing-12, for-23)
amod(people-25, good-24)
pobj(for-23, people-25)
aux(do-27, to-26)
xcomp(have-9, do-27)
amod(things-29, bad-28)
dobj(do-27, things-29)
nsubj(takes-32, it-31)
root(ROOT-0, takes-32)
dobj(takes-32, religion-33)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT The) (NN perception))
      (PP (IN of)
        (NP (NN knowledge))))
    (VP (VBZ is)
      (ADJP (JJ scary))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ rules)
            (PRT (RP out))
            (NP (JJ new) (NN information))))))
    (. .)))

det(perception-3, The-2)
nsubj(scary-7, perception-3)
prep_of(perception-3, knowledge-5)
cop(scary-7, is-6)
root(ROOT-0, scary-7)
mark(rules-10, because-8)
nsubj(rules-10, it-9)
advcl(scary-7, rules-10)
prt(rules-10, out-11)
amod(information-13, new-12)
dobj(rules-10, information-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP
          (VP (VBP think))
          (CC or)
          (VP (VBP believe)
            (SBAR (IN that)
              (S
                (NP (NN something))
                (VP (VBZ is)
                  (ADJP (JJ true)))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ willing)
          (S
            (VP (TO to)
              (VP (VB change)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (VBP think\/believe)
                      (PP (IN in)
                        (NP
                          (NP (NN light))
                          (PP (IN of)
                            (NP (JJ new) (NN evidence))))))))))))))
    (. .)))

mark(think-3, If-1)
nsubj(think-3, you-2)
nsubj(believe-5, you-2)
advcl(willing-14, think-3)
conj_or(think-3, believe-5)
advcl(willing-14, believe-5)
complm(true-9, that-6)
nsubj(true-9, something-7)
cop(true-9, is-8)
ccomp(believe-5, true-9)
nsubj(willing-14, you-11)
aux(willing-14, will-12)
cop(willing-14, be-13)
root(ROOT-0, willing-14)
aux(change-16, to-15)
xcomp(willing-14, change-16)
dobj(think\/believe-19, what-17)
nsubj(think\/believe-19, you-18)
ccomp(change-16, think\/believe-19)
prep_in(think\/believe-19, light-21)
amod(evidence-24, new-23)
prep_of(light-21, evidence-24)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB change)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP know))))))
    (. ?)))

advmod(change-4, How-1)
aux(change-4, can-2)
nsubj(change-4, you-3)
root(ROOT-0, change-4)
dobj(know-7, what-5)
nsubj(know-7, you-6)
ccomp(change-4, know-7)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (NNP Science))
          (VP (VBZ is)
            (ADJP (RB so) (JJ important))))))
    (. .)))

nsubj(is-3, That-2)
root(ROOT-0, is-3)
advmod(important-8, why-4)
nsubj(important-8, Science-5)
cop(important-8, is-6)
advmod(important-8, so-7)
advcl(is-3, important-8)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB test)
                    (NP (PRP$ our) (NNS ideas))))))))))
    (. .)))

nsubj(have-2, We-1)
xsubj(able-5, We-1)
root(ROOT-0, have-2)
aux(able-5, to-3)
cop(able-5, be-4)
xcomp(have-2, able-5)
aux(test-7, to-6)
xcomp(able-5, test-7)
poss(ideas-9, our-8)
dobj(test-7, ideas-9)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (NP (PRP we))
          (VP (VBP know)
            (NP (DT the) (NN Earth)))))
      (VP (VBZ is)
        (ADJP (JJ flat))))
    (, ,)
    (S
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (MD can))))
      (NP (PRP it))
      (VP (VBP be)
        (NP (NN round))))
    (. ?)))

mark(know-4, If-2)
nsubj(know-4, we-3)
csubj(flat-8, know-4)
det(Earth-6, the-5)
dobj(know-4, Earth-6)
cop(flat-8, is-7)
root(ROOT-0, flat-8)
advmod(can-11, how-10)
dep(round-14, can-11)
nsubj(round-14, it-12)
cop(round-14, be-13)
ccomp(flat-8, round-14)

(ROOT
  (S
    (NP (`` ``)
      (NP (DT The) (NN question))
      (, ,)
      (NP
        (NP (NNP Scientifically))
        (VP (VBG speaking)))
      (, ,))
    (VP (VBZ is)
      (SBARQ
        (WHADVP (WRB how))
        (SQ (VBP do)
          (NP (PRP we))
          (VP (VB know)
            (SBAR (IN that)
              (S
                (NP (DT the) (NN Earth))
                (VP (VBZ is)
                  (ADJP (JJ flat)))))))
        (. ?)))))

det(question-3, The-2)
nsubj(is-8, question-3)
appos(question-3, Scientifically-5)
partmod(Scientifically-5, speaking-6)
root(ROOT-0, is-8)
advmod(know-12, how-9)
aux(know-12, do-10)
nsubj(know-12, we-11)
dep(is-8, know-12)
complm(flat-17, that-13)
det(Earth-15, the-14)
nsubj(flat-17, Earth-15)
cop(flat-17, is-16)
ccomp(know-12, flat-17)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN tests))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB run)
        (S
          (VP (TO to)
            (VP (VB show)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN earth))
                  (VP (VBZ is)
                    (ADJP (JJ flat))))))))))
    (. ?)))

det(tests-2, What-1)
dep(run-5, tests-2)
aux(run-5, can-3)
nsubj(run-5, you-4)
xsubj(show-7, you-4)
root(ROOT-0, run-5)
aux(show-7, to-6)
xcomp(run-5, show-7)
complm(flat-12, that-8)
det(earth-10, the-9)
nsubj(flat-12, earth-10)
cop(flat-12, is-11)
ccomp(show-7, flat-12)

(ROOT
  (SBARQ (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP know)
          (SBAR
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT no) (NN god))))))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (EX there))
      (VP (VB be)
        (NP (DT a) (NN designer))))
    (. ?)))

mark(know-4, If-2)
nsubj(know-4, we-3)
advcl(be-13, know-4)
expl(is-6, there-5)
ccomp(know-4, is-6)
det(god-8, no-7)
nsubj(is-6, god-8)
advmod(be-13, how-10)
aux(be-13, can-11)
expl(be-13, there-12)
root(ROOT-0, be-13)
det(designer-15, a-14)
dep(be-13, designer-15)

(ROOT
  (FRAG
    (ADVP (`` ``) (RB As)
      (ADVP (RB stated) (JJ above)))
    (: ...)))

advmod(above-4, As-2)
advmod(above-4, stated-3)
root(ROOT-0, above-4)

(ROOT
  (S
    (NP (NNS Experiments))
    (VP (VBP indicate)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBD were)
            (NP
              (NP
                (NP (JJ several) (NNS stages))
                (PP (IN between)
                  (NP
                    (NP (DT the) (JJ original) (NN replicator) (NNS molecules))
                    (CC and)
                    (NP (DT the) (JJ first) (NN cell)))))
              (, ,)
              (NP
                (NP (JJ proto-cellular) (NN life))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD was)
                      (ADJP (JJ able)
                        (S
                          (VP (TO to)
                            (VP (VB replicate))))))))))))))
    (. .)))

nsubj(indicate-2, Experiments-1)
root(ROOT-0, indicate-2)
complm(were-5, that-3)
expl(were-5, there-4)
ccomp(indicate-2, were-5)
amod(stages-7, several-6)
nsubj(were-5, stages-7)
det(molecules-12, the-9)
amod(molecules-12, original-10)
nn(molecules-12, replicator-11)
prep_between(stages-7, molecules-12)
det(cell-16, the-14)
amod(cell-16, first-15)
prep_between(stages-7, cell-16)
conj_and(molecules-12, cell-16)
amod(life-19, proto-cellular-18)
appos(stages-7, life-19)
nsubj(able-22, life-19)
cop(able-22, was-21)
rcmod(life-19, able-22)
aux(replicate-24, to-23)
xcomp(able-22, replicate-24)

(ROOT
  (SBARQ
    (WHADVP
      (ADVP
        (ADVP (RB Scientifically))
        (RB speaking))
      (WRB how))
    (SQ (MD can)
      (NP (PRP we))
      (VP (VB show)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT a) (NN god)))))))
    (. ?)))

advmod(how-3, Scientifically-1)
advmod(Scientifically-1, speaking-2)
advmod(show-6, how-3)
aux(show-6, can-4)
nsubj(show-6, we-5)
root(ROOT-0, show-6)
complm(is-9, that-7)
expl(is-9, there-8)
ccomp(show-6, is-9)
det(god-11, a-10)
nsubj(is-9, god-11)

(ROOT
  (S
    (NP (PRP$ Your) (NN question))
    (ADVP (RB also))
    (VP (VBZ presumes)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT a) (NN designer) (: ...)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ has) (RB not)
                    (VP (VBN been)
                      (NP
                        (NP (NN show))
                        (PP (IN in)
                          (NP (DT a) (NNP Scientifically) (NN testable) (NN manner)))))))))))))
    (. .)))

poss(question-2, Your-1)
nsubj(presumes-4, question-2)
advmod(presumes-4, also-3)
root(ROOT-0, presumes-4)
complm(is-7, that-5)
expl(is-7, there-6)
ccomp(presumes-4, is-7)
det(designer-9, a-8)
nsubj(is-7, designer-9)
nsubj(show-15, which-11)
aux(show-15, has-12)
neg(show-15, not-13)
cop(show-15, been-14)
ccomp(designer-9, show-15)
det(manner-20, a-17)
nn(manner-20, Scientifically-18)
nn(manner-20, testable-19)
prep_in(show-15, manner-20)

(ROOT
  (S ('' '')
    (PP
      (NP (DT The) (NNS chances))
      (IN of)
      (NP
        (NP (DT that))
        (VP (VBG occuring)
          (ADVP (RB randomly)))))
    (VP (VBP are)
      (ADJP (RB absurdly) (JJ small)))
    (. .)))

det(chances-3, The-2)
npadvmod(small-10, chances-3)
prep_of(small-10, that-5)
partmod(that-5, occuring-6)
advmod(occuring-6, randomly-7)
cop(small-10, are-8)
advmod(small-10, absurdly-9)
root(ROOT-0, small-10)

(ROOT
  (FRAG ('' '')
    (NP (NNP Yes))
    (, ,)
    (PP (IN in)
      (NP (DT a) (NN sense)))
    (. .)))

root(ROOT-0, Yes-2)
dep(Yes-2, in-4)
det(sense-6, a-5)
pobj(in-4, sense-6)

(ROOT
  (S (CC But)
    (SBAR (RB just) (IN because)
      (S
        (NP (DT the) (NN chance))
        (VP (VBZ is)
          (ADJP (RB very) (RB very) (JJ small)))))
    (VP (VBZ does) (RB not)
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ impossible)))))))
    (. .)))

cc(mean-12, But-1)
advmod(small-9, just-2)
dep(small-9, because-3)
det(chance-5, the-4)
nsubj(small-9, chance-5)
cop(small-9, is-6)
advmod(small-9, very-7)
advmod(small-9, very-8)
csubj(mean-12, small-9)
aux(mean-12, does-10)
neg(mean-12, not-11)
root(ROOT-0, mean-12)
complm(impossible-16, that-13)
nsubj(impossible-16, it-14)
cop(impossible-16, is-15)
ccomp(mean-12, impossible-16)

(ROOT
  (S
    (S
      (NP (PRP It))
      (ADVP (RB only))
      (VP (VBZ takes)
        (S
          (NP (CD one) (NN replicator) (NN molecule))
          (VP (TO to)
            (VP (VB start)
              (NP (DT the) (JJ entire) (NN process)))))))
    (, ,)
    (CC and)
    (S
      (PP (VBN given)
        (NP
          (NP (DT the) (NN number))
          (PP (IN of)
            (NP
              (NP (NNS molecules))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD would)
                    (VP (VB have)
                      (VP (VBN been)
                        (VP (VBG swirling)
                          (PRT (RP around))
                          (PP (IN in)
                            (NP (DT the) (JJ ancient) (NNS earths) (NNS oceans)))))))))))))
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (RB quite) (JJ possible))
        (SBAR (IN that)
          (S
            (NP (RB somewhere) (DT a) (NN replicator))
            (VP (MD will)
              (VP (VB form)))))))
    (: ...)))

nsubj(takes-3, It-1)
advmod(takes-3, only-2)
root(ROOT-0, takes-3)
num(molecule-6, one-4)
nn(molecule-6, replicator-5)
nsubj(start-8, molecule-6)
aux(start-8, to-7)
xcomp(takes-3, start-8)
det(process-11, the-9)
amod(process-11, entire-10)
dobj(start-8, process-11)
prep(possible-33, given-14)
det(number-16, the-15)
dep(given-14, number-16)
prep_of(number-16, molecules-18)
nsubj(swirling-23, molecules-18)
aux(swirling-23, would-20)
aux(swirling-23, have-21)
aux(swirling-23, been-22)
rcmod(molecules-18, swirling-23)
prt(swirling-23, around-24)
det(oceans-29, the-26)
amod(oceans-29, ancient-27)
nn(oceans-29, earths-28)
prep_in(swirling-23, oceans-29)
nsubj(possible-33, it-30)
cop(possible-33, is-31)
advmod(possible-33, quite-32)
conj_and(takes-3, possible-33)
complm(form-39, that-34)
advmod(replicator-37, somewhere-35)
det(replicator-37, a-36)
nsubj(form-39, replicator-37)
aux(form-39, will-38)
ccomp(possible-33, form-39)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP roll)
          (NP
            (NP (CD one) (NNS dice))
            (SBAR
              (S
                (NP
                  (NP (DT the) (NN chance))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (CD six))
                      (VP (VBG coming)
                        (PRT (RP up))))))
                (VP (VBZ is)
                  (NP (CD 1))))))
          (PP (IN in)
            (NP (CD 6)))
          (: ...)
          (CC but)
          (FRAG
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBP roll)
                  (NP (DT a) (CD thousand) (NNS dice))
                  (NP (DT the) (NN chance))
                  (SBAR (IN that)
                    (S
                      (NP
                        (QP (IN at) (JJS least) (CD one)))
                      (VP (MD will)
                        (VP (VB be)
                          (NP
                            (QP (DT a) (CD six))))))))))))))
    (VP (VBZ is)
      (ADJP (RB rather) (JJ good)))
    (. .)))

mark(roll-3, If-1)
nsubj(roll-3, I-2)
csubj(good-37, roll-3)
num(dice-5, one-4)
dobj(roll-3, dice-5)
det(chance-7, the-6)
nsubj(1-14, chance-7)
det(six-10, a-9)
prep_of(chance-7, six-10)
partmod(six-10, coming-11)
prt(coming-11, up-12)
cop(1-14, is-13)
rcmod(dice-5, 1-14)
prep_in(roll-3, 6-16)
mark(roll-21, if-19)
nsubj(roll-21, I-20)
conj_but(roll-3, roll-21)
csubj(good-37, roll-21)
det(dice-24, a-22)
num(dice-24, thousand-23)
iobj(roll-21, dice-24)
det(chance-26, the-25)
dobj(roll-21, chance-26)
complm(six-34, that-27)
quantmod(one-30, at-28)
mwe(at-28, least-29)
pobj(at-28, least-29)
nsubj(six-34, one-30)
aux(six-34, will-31)
cop(six-34, be-32)
quantmod(six-34, a-33)
ccomp(roll-21, six-34)
cop(good-37, is-35)
advmod(good-37, rather-36)
root(ROOT-0, good-37)

(ROOT
  (S ('' '')
    (NP (NNP Atheists))
    (VP (VBP are)
      (ADJP
        (ADJP (DT no) (RBR less) (JJ violent))
        (PP (IN than)
          (NP (DT the) (JJ religious)))))
    (. .)))

nsubj(violent-6, Atheists-2)
cop(violent-6, are-3)
dep(violent-6, no-4)
advmod(violent-6, less-5)
root(ROOT-0, violent-6)
det(religious-9, the-8)
prep_than(violent-6, religious-9)

(ROOT
  (S ('' '')
    (PP
      (PP
        (NP
          (NP (NNP True))
          (: ...))
        (PP (IN but)))
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (VBZ does)
            (NP (DT that) (JJ old) (NN saying))))))
    (VP (VBP go))
    (. ...)))

dep(but-4, True-2)
dep(go-10, but-4)
advmod(does-6, how-5)
dep(but-4, does-6)
det(saying-9, that-7)
amod(saying-9, old-8)
dobj(does-6, saying-9)
root(ROOT-0, go-10)

