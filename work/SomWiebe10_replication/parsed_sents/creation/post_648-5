(ROOT
  (S ('' '')
    (PP (IN In)
      (NP
        (NP (NN addition))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBN fallen)
                (S
                  (NP
                    (NP (NN victim))
                    (PP (IN of)
                      (NP (DT the) (NN claim)))))
                (SBAR (IN that) (RB just)
                  (FRAG
                    (PP (IN because)
                      (NP (DT the) (NNP FTE)))))))))))
    (VP (VBD was)
      (VP (VBN denied)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN heard)))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN argument))
            (VP (VBD was) (RB not)
              (VP (VBN heard)))))))
    (. .)))

dobj(fallen-6, addition-3)
prep_in(denied-17, addition-3)
nsubj(fallen-6, you-4)
aux(fallen-6, have-5)
rcmod(addition-3, fallen-6)
xcomp(fallen-6, victim-7)
det(claim-10, the-9)
prep_of(victim-7, claim-10)
complm(because-13, that-11)
advmod(because-13, just-12)
dep(fallen-6, because-13)
det(FTE-15, the-14)
pobj(because-13, FTE-15)
auxpass(denied-17, was-16)
root(ROOT-0, denied-17)
aux(heard-20, to-18)
auxpass(heard-20, be-19)
xcomp(denied-17, heard-20)
complm(heard-27, that-22)
det(argument-24, the-23)
nsubjpass(heard-27, argument-24)
auxpass(heard-27, was-25)
neg(heard-27, not-26)
ccomp(denied-17, heard-27)

