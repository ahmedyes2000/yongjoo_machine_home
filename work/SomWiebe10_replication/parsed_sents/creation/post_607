(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (PRP s))
          (VP (VB talk)
            (PP (IN about)
              (NP (NNP Crick)))))))
    (VP (VBZ s)
      (NP
        (NP (NN statement))
        (SBAR
          (S
            (NP (NNP Biologist))
            (VP (MD must)
              (ADVP (RB constantly))
              (VP (VB keep)
                (PP (IN in)
                  (NP (NN mind)))
                (SBAR (IN that)
                  (S
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP they))
                        (VP (VBP see))))
                    (VP (VBD was) (RB not)
                      (VP
                        (VP (VBN designed))
                        (, ,)
                        (CONJP (CC but)
                          (RB rather))
                        (VP (VBN evolved))))))))))))
    (. .)))

csubj(statement-7, Let-1)
nsubj(talk-3, s-2)
ccomp(Let-1, talk-3)
prep_about(talk-3, Crick-5)
cop(statement-7, s-6)
root(ROOT-0, statement-7)
dobj(keep-11, statement-7)
nsubj(keep-11, Biologist-8)
aux(keep-11, must-9)
advmod(keep-11, constantly-10)
rcmod(statement-7, keep-11)
prep_in(keep-11, mind-13)
complm(designed-20, that-14)
dobj(see-17, what-15)
nsubj(see-17, they-16)
csubj(designed-20, see-17)
csubj(evolved-24, see-17)
aux(designed-20, was-18)
neg(designed-20, not-19)
ccomp(keep-11, designed-20)
ccomp(keep-11, evolved-24)
conj_negcc(designed-20, evolved-24)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADJP (RB very) (JJ important)))
    (. .)))

nsubj(important-4, This-1)
cop(important-4, is-2)
advmod(important-4, very-3)
root(ROOT-0, important-4)

(ROOT
  (S
    (S
      (NP (NNP Crick))
      (VP (MD may)
        (VP (VB have)
          (NP (DT a) (JJ positive) (NNS hypotheses)))))
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB only))
        (NP (DT a) (NNS hypotheses))))
    (. .)))

nsubj(have-3, Crick-1)
aux(have-3, may-2)
root(ROOT-0, have-3)
det(hypotheses-6, a-4)
amod(hypotheses-6, positive-5)
dobj(have-3, hypotheses-6)
nsubj(hypotheses-12, it-8)
cop(hypotheses-12, is-9)
advmod(hypotheses-12, only-10)
det(hypotheses-12, a-11)
conj_but(have-3, hypotheses-12)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBZ does)
      (NP (NNP God))
      (VP (VB come)
        (PRT (RP in))))
    (. ?)))

advmod(come-4, Where-1)
aux(come-4, does-2)
nsubj(come-4, God-3)
root(ROOT-0, come-4)
prt(come-4, in-5)

(ROOT
  (NP
    (NP (JJ Little)
      (CC or)
      (DT no) (NN room))
    (PP (IN for)
      (NP (NNP God)))
    (PP (IN in)
      (NP (DT this) (NN interpretation)))
    (. .)))

amod(room-4, Little-1)
conj_or(Little-1, no-3)
amod(room-4, no-3)
root(ROOT-0, room-4)
prep_for(room-4, God-6)
det(interpretation-9, this-8)
prep_in(room-4, interpretation-9)

(ROOT
  (FRAG
    (ADVP (RB Hence))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (MD can)
                (VP (VB be)
                  (NP (DT an) (NN atheist)))))))))
    (. .)))

root(ROOT-0, Hence-1)
mark(believe-4, if-2)
nsubj(believe-4, you-3)
dep(Hence-1, believe-4)
complm(atheist-10, that-5)
nsubj(atheist-10, you-6)
aux(atheist-10, can-7)
cop(atheist-10, be-8)
det(atheist-10, an-9)
ccomp(believe-4, atheist-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (JJ true)))))
    (NP (PRP you))
    (VP (VBP are)
      (ADVP (RB almost) (RB certainly))
      (ADJP (JJ right)
        (PP (IN in)
          (NP (PRP$ your) (NN belief)))))
    (. .)))

mark(true-4, If-1)
nsubj(true-4, it-2)
cop(true-4, is-3)
advcl(right-9, true-4)
nsubj(right-9, you-5)
cop(right-9, are-6)
advmod(certainly-8, almost-7)
advmod(right-9, certainly-8)
root(ROOT-0, right-9)
poss(belief-12, your-11)
prep_in(right-9, belief-12)

(ROOT
  (S (CC But)
    (, ,)
    (X
      (X (WP what))
      (PP (IN if)))
    (NP (DT that))
    (VP (VBZ is) (RB not)
      (ADJP (JJ true)))
    (. ?)))

cc(true-8, But-1)
dep(if-4, what-3)
dep(true-8, if-4)
nsubj(true-8, that-5)
cop(true-8, is-6)
neg(true-8, not-7)
root(ROOT-0, true-8)

(ROOT
  (SBARQ (CC And)
    (WHADVP (WRB how))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB go)
        (PP (IN about)
          (S
            (VP (VBG determining)
              (SBAR (IN if)
                (S
                  (NP (PRP it))
                  (VP (VBZ s)
                    (ADJP (JJ true))))
                (CC or)
                (RB not)))))))
    (. ?)))

cc(go-5, And-1)
advmod(go-5, how-2)
aux(go-5, do-3)
nsubj(go-5, we-4)
root(ROOT-0, go-5)
prepc_about(go-5, determining-7)
mark(true-11, if-8)
nsubj(true-11, it-9)
cop(true-11, s-10)
advcl(determining-7, true-11)
advcl(determining-7, not-13)
conj_or(true-11, not-13)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ s)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (NNP ID))
          (VP (VBZ comes)
            (PRT (RP in))))))
    (. .)))

nsubj(s-2, That-1)
root(ROOT-0, s-2)
advmod(comes-5, where-3)
nsubj(comes-5, ID-4)
advcl(s-2, comes-5)
prt(comes-5, in-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ tells)
      (NP (PRP us))
      (PP (IN from)
        (NP (DT the) (NNS facts)))
      (SBAR (IN as)
        (S
          (NP (PRP we))
          (VP (VBP understand)
            (SBAR
              (S
                (NP (PRP them))
                (NP (NN today))
                (, ,)
                (NP
                  (NP (DT the)
                    (ADJP (RBS most) (JJ reasonable))
                    (NN interpretation))
                  (PP (IN of)
                    (NP (DT these) (NNS facts))))
                (VP (VBZ is)
                  (SBAR (IN that)
                    (S
                      (NP (DT this) (JJ molecular) (NN machine))
                      (VP (VBD was)
                        (VP
                          (ADVP (RB intelligently))
                          (VBN designed))))))))))))
    (. .)))

nsubj(tells-2, It-1)
root(ROOT-0, tells-2)
dobj(tells-2, us-3)
det(facts-6, the-5)
prep_from(tells-2, facts-6)
mark(understand-9, as-7)
nsubj(understand-9, we-8)
advcl(tells-2, understand-9)
nsubj(is-20, them-10)
tmod(is-20, today-11)
det(interpretation-16, the-13)
advmod(reasonable-15, most-14)
amod(interpretation-16, reasonable-15)
nsubj(is-20, interpretation-16)
det(facts-19, these-18)
prep_of(interpretation-16, facts-19)
ccomp(understand-9, is-20)
complm(designed-27, that-21)
det(machine-24, this-22)
amod(machine-24, molecular-23)
nsubjpass(designed-27, machine-24)
auxpass(designed-27, was-25)
advmod(designed-27, intelligently-26)
ccomp(is-20, designed-27)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR
        (S
          (NP (NNP ID))
          (VP (MD can) (RB not)
            (VP (VB say)
              (ADVP (RBR more) (IN than))
              (SBAR (IN that) (IN if)
                (S
                  (NP (DT that))
                  (VP (VBZ is)
                    (ADJP (JJ true)
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (ADVP (RB still))
                          (VP (VBZ is)
                            (ADJP (JJ huge))))))))))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
nsubj(say-6, ID-3)
aux(say-6, can-4)
neg(say-6, not-5)
ccomp(say-2, say-6)
advmod(than-8, more-7)
advmod(say-6, than-8)
complm(true-13, that-9)
dep(true-13, if-10)
nsubj(true-13, that-11)
cop(true-13, is-12)
ccomp(say-6, true-13)
nsubj(huge-17, that-14)
advmod(huge-17, still-15)
cop(huge-17, is-16)
dep(true-13, huge-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ s)
      (ADJP (JJ huge))
      (SBAR (IN because)
        (S
          (NP
            (NP (PRP$ your) (NN belief\/unbelief))
            (PP (IN in)
              (NP (NNP God))))
          (VP
            (VP (VBZ is)
              (NP (DT a) (JJ primary) (NN world) (NN view)))
            (, ,)
            (CC and)
            (VP (MD will)
              (VP (VB effect)
                (NP (PDT all) (PRP$ your) (NNS perceptions))))))))
    (. .)))

nsubj(huge-3, It-1)
cop(huge-3, s-2)
root(ROOT-0, huge-3)
mark(view-13, because-4)
poss(belief\/unbelief-6, your-5)
nsubj(view-13, belief\/unbelief-6)
nsubj(effect-17, belief\/unbelief-6)
prep_in(belief\/unbelief-6, God-8)
cop(view-13, is-9)
det(view-13, a-10)
amod(view-13, primary-11)
nn(view-13, world-12)
advcl(huge-3, view-13)
aux(effect-17, will-16)
advcl(huge-3, effect-17)
conj_and(view-13, effect-17)
predet(perceptions-20, all-18)
poss(perceptions-20, your-19)
dobj(effect-17, perceptions-20)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ makes)
      (NP (DT this) (NN statement))
      (SBAR (RB as) (IN if)
        (S
          (NP (PRP it))
          (VP (VBZ has)
            (VP (VBN been)
              (VP (VBN proven)))))))
    (. .)))

nsubj(makes-2, He-1)
root(ROOT-0, makes-2)
det(statement-4, this-3)
dobj(makes-2, statement-4)
advmod(proven-10, as-5)
dep(proven-10, if-6)
nsubjpass(proven-10, it-7)
aux(proven-10, has-8)
auxpass(proven-10, been-9)
dep(makes-2, proven-10)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ s)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBD happened)
            (ADVP (RB here))))))
    (. .)))

nsubj(s-2, That-1)
root(ROOT-0, s-2)
nsubj(happened-4, what-3)
ccomp(s-2, happened-4)
advmod(happened-4, here-5)

(ROOT
  (S
    (ADVP (RB Example))
    (, ,)
    (NP (NNP Crick))
    (VP (VBZ is)
      (NP (DT an) (NN atheist)))
    (. .)))

advmod(atheist-6, Example-1)
nsubj(atheist-6, Crick-3)
cop(atheist-6, is-4)
det(atheist-6, an-5)
root(ROOT-0, atheist-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ sees)
      (NP
        (NP (JJ molecular) (NNS machines))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP look)
              (S
                (VP (VBN designed))))))))
    (. .)))

nsubj(sees-2, He-1)
root(ROOT-0, sees-2)
amod(machines-4, molecular-3)
dobj(sees-2, machines-4)
nsubj(look-6, machines-4)
rcmod(machines-4, look-6)
dep(look-6, designed-7)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says)
      (SBAR
        (S
          (NP (NNP God))
          (VP (MD could) (RB not)
            (VP (VB have)
              (VP (VBN done)
                (NP (DT this))
                (SBAR (IN because)
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP (DT no) (NNP God)))))))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
nsubj(done-7, God-3)
aux(done-7, could-4)
neg(done-7, not-5)
aux(done-7, have-6)
ccomp(says-2, done-7)
dobj(done-7, this-8)
mark(is-11, because-9)
expl(is-11, there-10)
advcl(done-7, is-11)
det(God-13, no-12)
nsubj(is-11, God-13)

(ROOT
  (S
    (ADVP (RB Therefor))
    (, ,)
    (NP (DT these) (NNS machines))
    (VP (VBP are) (RB not)
      (VP (VBN designed)))
    (. .)))

advmod(designed-7, Therefor-1)
det(machines-4, these-3)
nsubjpass(designed-7, machines-4)
auxpass(designed-7, are-5)
neg(designed-7, not-6)
root(ROOT-0, designed-7)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is) (RB not)
      (NP (JJ good) (NN science)))
    (. .)))

nsubj(science-5, That-1)
cop(science-5, is-2)
neg(science-5, not-3)
amod(science-5, good-4)
root(ROOT-0, science-5)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ rules)
      (PRT (RP out))
      (NP (NN design))
      (PP (VBN based)
        (PP (IN on)
          (FRAG
            (NP (PRP$ his) (NN world) (NN view))
            (, ,) (RB not)
            (PP (IN on)
              (NP (NN science)))))))
    (. .)))

nsubj(rules-2, He-1)
root(ROOT-0, rules-2)
prt(rules-2, out-3)
dobj(rules-2, design-4)
prepc_based_on(rules-2, on-6)
poss(view-9, his-7)
nn(view-9, world-8)
dep(not-11, view-9)
dep(rules-2, not-11)
dep(not-11, on-12)
pobj(on-12, science-13)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ is)
      (VP (VBN encouraged)
        (S
          (VP (TO to)
            (VP (VB support)
              (NP (PRP$ his) (NNS hypotheses))
              (PP (IN through)
                (NP (JJ good) (NN science))))))))
    (. .)))

nsubjpass(encouraged-3, He-1)
xsubj(support-5, He-1)
auxpass(encouraged-3, is-2)
root(ROOT-0, encouraged-3)
aux(support-5, to-4)
xcomp(encouraged-3, support-5)
poss(hypotheses-7, his-6)
dobj(support-5, hypotheses-7)
amod(science-10, good-9)
prep_through(support-5, science-10)

(ROOT
  (FRAG (RB Not)
    (PP (IN through)
      (NP (JJ bad) (NN theology)))
    (. .)))

root(ROOT-0, Not-1)
dep(Not-1, through-2)
amod(theology-4, bad-3)
pobj(through-2, theology-4)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP you))
        (VP (VBP say))))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ is)
      (ADJP (JJ limited))
      (SBAR
        (SBAR
          (WHPP (IN in)
            (WHNP (WP what)))
          (S
            (NP (PRP it))
            (VP (MD can)
              (VP (VB do)))))
        (, ,)
        (CC but)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP it))
            (VP (VBZ does)
              (SBAR
                (S
                  (VP (VBZ is)
                    (PP (IN of)
                      (NP (JJ enormous) (NN importance)))))))))))
    (. .)))

mark(say-3, As-1)
nsubj(say-3, you-2)
advcl(limited-7, say-3)
nsubj(limited-7, ID-5)
cop(limited-7, is-6)
root(ROOT-0, limited-7)
dep(do-12, in-8)
pobj(in-8, what-9)
nsubj(do-12, it-10)
aux(do-12, can-11)
dep(limited-7, do-12)
dep(does-17, what-15)
nsubj(is-18, what-15)
nsubj(does-17, it-16)
dep(limited-7, does-17)
conj_but(do-12, does-17)
ccomp(does-17, is-18)
amod(importance-21, enormous-20)
prep_of(is-18, importance-21)

(ROOT
  (S (CC Yet)
    (NP
      (NP (JJ many))
      (, ,)
      (PP (VBG including)
        (NP (JJ young) (NNS students)))
      (, ,))
    (VP (VBP accept)
      (NP (DT this))
      (PP (IN as)
        (NP (NN fact)))
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBZ sounds)
            (ADJP (JJ authoritive))))))
    (. .)))

cc(accept-8, Yet-1)
nsubj(accept-8, many-2)
amod(students-6, young-5)
prep_including(many-2, students-6)
root(ROOT-0, accept-8)
dobj(accept-8, this-9)
prep_as(accept-8, fact-11)
mark(sounds-14, as-12)
nsubj(sounds-14, it-13)
advcl(accept-8, sounds-14)
acomp(sounds-14, authoritive-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (RB very) (JJ important)
        (PP (TO to)
          (NP
            (NP (JJ many))
            (PP (IN around)
              (NP (DT the) (NN world))))))
      (SBAR (IN whether)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT a) (NNP God))))
        (CC or)
        (RB not)))
    (. .)))

nsubj(important-4, It-1)
cop(important-4, is-2)
advmod(important-4, very-3)
root(ROOT-0, important-4)
prep_to(important-4, many-6)
det(world-9, the-8)
prep_around(many-6, world-9)
complm(is-12, whether-10)
expl(is-12, there-11)
ccomp(important-4, is-12)
det(God-14, a-13)
nsubj(is-12, God-14)
ccomp(important-4, not-16)
conj_or(is-12, not-16)

(ROOT
  (S
    (NP (NNP Darwinism))
    (VP (VBZ is)
      (ADVP (RB often))
      (VP (VBN used)
        (PP (IN as)
          (NP
            (NP (JJ scientific) (NN proof))
            (PP (IN of)
              (NP (DT no) (NNP God)))))))
    (. .)))

nsubjpass(used-4, Darwinism-1)
auxpass(used-4, is-2)
advmod(used-4, often-3)
root(ROOT-0, used-4)
amod(proof-7, scientific-6)
prep_as(used-4, proof-7)
det(God-10, no-9)
prep_of(proof-7, God-10)

(ROOT
  (S
    (NP (NNS Dawkins))
    (VP (VBZ is)
      (NP
        (NP (RB only) (CD one))
        (PP (IN of)
          (NP (JJ many) (NN scientist)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP do)
              (NP (DT this)))))))
    (. .)))

nsubj(one-4, Dawkins-1)
cop(one-4, is-2)
advmod(one-4, only-3)
root(ROOT-0, one-4)
nsubj(do-9, one-4)
amod(scientist-7, many-6)
prep_of(one-4, scientist-7)
rcmod(one-4, do-9)
dobj(do-9, this-10)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP get)
      (ADJP (VBN upset)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP$ their) (NN world) (NN view))
            (VP (VBZ is)
              (VP (VBN challenged)))))))
    (. .)))

nsubjpass(upset-3, They-1)
auxpass(upset-3, get-2)
root(ROOT-0, upset-3)
advmod(challenged-9, when-4)
poss(view-7, their-5)
nn(view-7, world-6)
nsubjpass(challenged-9, view-7)
auxpass(challenged-9, is-8)
dep(upset-3, challenged-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD don)
      (SBAR
        (S
          (NP (NN t))
          (VP (VBP believe)
            (SBAR
              (S
                (NP (NN science))
                (VP (MD will)
                  (ADVP (RB ever))
                  (VP (VB be)
                    (ADJP (JJ able)
                      (S
                        (VP (TO to)
                          (VP (VB prove)
                            (CC or)
                            (VB disprove)
                            (NP
                              (NP (DT the) (NN existence))
                              (PP (IN of)
                                (NP (DT a) (JJ personal) (, ,) (JJ caring) (NN God))))))))))))))))
    (. .)))

nsubj(don-2, I-1)
root(ROOT-0, don-2)
nsubj(believe-4, t-3)
ccomp(don-2, believe-4)
nsubj(able-9, science-5)
aux(able-9, will-6)
advmod(able-9, ever-7)
cop(able-9, be-8)
ccomp(believe-4, able-9)
aux(prove-11, to-10)
xcomp(able-9, prove-11)
xcomp(able-9, disprove-13)
conj_or(prove-11, disprove-13)
det(existence-15, the-14)
dobj(prove-11, existence-15)
det(God-21, a-17)
amod(God-21, personal-18)
amod(God-21, caring-20)
prep_of(existence-15, God-21)

(ROOT
  (S (CC But)
    (NP (DT that))
    (VP (VBZ s)
      (NP (DT the) (NN point)))
    (. .)))

cc(point-5, But-1)
nsubj(point-5, that-2)
cop(point-5, s-3)
det(point-5, the-4)
root(ROOT-0, point-5)

(ROOT
  (S
    (ADVP (RB Right) (RB now))
    (NP (DT many))
    (VP (VBP are)
      (VP (VBG using)
        (NP (NN evolution))
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP it))
            (ADVP (RB already))
            (VP (VBZ has)
              (VP (VBN proven)
                (SBAR (IN that)
                  (S
                    (NP (NNP God))
                    (VP (VBZ has)
                      (NP (NN nothing)
                        (S
                          (VP (TO to)
                            (VP (VB do)
                              (PP (IN with)
                                (NP (PRP$ our) (NN existence))))))))))))))))
    (. .)))

advmod(now-2, Right-1)
advmod(using-5, now-2)
nsubj(using-5, many-3)
aux(using-5, are-4)
root(ROOT-0, using-5)
dobj(using-5, evolution-6)
advmod(proven-12, as-7)
dep(proven-12, if-8)
nsubj(proven-12, it-9)
advmod(proven-12, already-10)
aux(proven-12, has-11)
dep(using-5, proven-12)
complm(has-15, that-13)
nsubj(has-15, God-14)
ccomp(proven-12, has-15)
dobj(has-15, nothing-16)
aux(do-18, to-17)
infmod(nothing-16, do-18)
poss(existence-21, our-20)
prep_with(do-18, existence-21)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ has) (RB not)
        (VP (VBN been)
          (VP (VBN proven)))))
    (CC and)
    (S
      (NP (NNP ID))
      (VP (VBZ reminds)
        (PP (IN of)
          (NP
            (NP (PRP us))
            (PP (IN of)
              (NP (DT that)))))))
    (. .)))

nsubjpass(proven-5, That-1)
aux(proven-5, has-2)
neg(proven-5, not-3)
auxpass(proven-5, been-4)
root(ROOT-0, proven-5)
nsubj(reminds-8, ID-7)
conj_and(proven-5, reminds-8)
prep_of(reminds-8, us-10)
prep_of(us-10, that-12)

(ROOT
  (NP (NNP Jim)))

root(ROOT-0, Jim-1)

(ROOT
  (NP (JJ Big) (NN mistake) (. .)))

amod(mistake-2, Big-1)
root(ROOT-0, mistake-2)

(ROOT
  (S
    (NP (NNP ID))
    (VP (VBZ reminds)
      (S
        (NP (PRP us))
        (RB not)
        (VP (TO to)
          (VP (VB make)
            (NP (DT those) (NNS assumptions))))))
    (. .)))

nsubj(reminds-2, ID-1)
root(ROOT-0, reminds-2)
nsubj(make-6, us-3)
neg(make-6, not-4)
aux(make-6, to-5)
xcomp(reminds-2, make-6)
det(assumptions-8, those-7)
dobj(make-6, assumptions-8)

(ROOT
  (S
    (NP (DT Those) (NNS assumptions))
    (VP (VBP are)
      (ADJP (RB very) (JJ important)))
    (. .)))

det(assumptions-2, Those-1)
nsubj(important-5, assumptions-2)
cop(important-5, are-3)
advmod(important-5, very-4)
root(ROOT-0, important-5)

(ROOT
  (S
    (NP (DT Those) (NNS assumptions))
    (VP (VBP allow)
      (S
        (NP (NNP Dawkins))
        (VP (TO to)
          (VP (VB be)
            (NP (DT an)
              (ADJP (RB intellectually) (JJ fulfilled))
              (NN atheist))))))
    (. .)))

det(assumptions-2, Those-1)
nsubj(allow-3, assumptions-2)
root(ROOT-0, allow-3)
nsubj(atheist-10, Dawkins-4)
aux(atheist-10, to-5)
cop(atheist-10, be-6)
det(atheist-10, an-7)
advmod(fulfilled-9, intellectually-8)
amod(atheist-10, fulfilled-9)
xcomp(allow-3, atheist-10)

(ROOT
  (S
    (NP (DT The) (JJ bottom) (NN line))
    (VP (VBZ is)
      (NP
        (NP (DT some) (NNS interpretations))
        (PP (IN of)
          (NP (NN evolution)))
        (SBAR
          (S
            (VP (VBP leave)
              (NP
                (NP (JJ little) (NN room))
                (PP (IN for)
                  (NP (DT a) (JJ caring) (NN God)))))))))
    (. .)))

det(line-3, The-1)
amod(line-3, bottom-2)
nsubj(interpretations-6, line-3)
cop(interpretations-6, is-4)
det(interpretations-6, some-5)
root(ROOT-0, interpretations-6)
prep_of(interpretations-6, evolution-8)
rcmod(interpretations-6, leave-9)
amod(room-11, little-10)
dobj(leave-9, room-11)
det(God-15, a-13)
amod(God-15, caring-14)
prep_for(room-11, God-15)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT the) (NN view))
      (SBAR (IN that)
        (S
          (NP (NN life))
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN result))
              (PP (IN of)
                (NP
                  (NP (JJ random) (, ,) (JJ purposeless) (NNS arrangements))
                  (PP (IN of)
                    (NP
                      (NP (NNS molecules))
                      (VP (VBN shaped)
                        (PP (IN by)
                          (NP (JJ natural) (NN selection)))))))))))))
    (. .)))

nsubj(view-4, This-1)
cop(view-4, is-2)
det(view-4, the-3)
root(ROOT-0, view-4)
complm(result-9, that-5)
nsubj(result-9, life-6)
cop(result-9, is-7)
det(result-9, the-8)
ccomp(view-4, result-9)
amod(arrangements-14, random-11)
amod(arrangements-14, purposeless-13)
prep_of(result-9, arrangements-14)
prep_of(arrangements-14, molecules-16)
partmod(molecules-16, shaped-17)
amod(selection-20, natural-19)
agent(shaped-17, selection-20)

