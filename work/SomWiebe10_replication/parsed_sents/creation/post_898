(ROOT
  (S
    (NP
      (NP (NNS Doctrines))
      (PP (JJ such) (IN as) (: :)
        (NP
          (NP (JJ original) (NN sin))
          (, ,)
          (NP (JJ substitutionary) (NN atonement))
          (, ,)
          (CC and)
          (NP (DT the) (NN trinity)))))
    (VP (VBP are)
      (ADVP (RB very) (RB well))
      (VP (VBN described)
        (PP (IN in)
          (NP (DT the) (NNP Bible)))))
    (. .)))

nsubjpass(described-17, Doctrines-1)
amod(sin-6, original-5)
prep_such_as(Doctrines-1, sin-6)
amod(atonement-9, substitutionary-8)
prep_such_as(Doctrines-1, atonement-9)
conj_and(sin-6, atonement-9)
det(trinity-13, the-12)
prep_such_as(Doctrines-1, trinity-13)
conj_and(sin-6, trinity-13)
auxpass(described-17, are-14)
advmod(well-16, very-15)
advmod(described-17, well-16)
root(ROOT-0, described-17)
det(Bible-20, the-19)
prep_in(described-17, Bible-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB actually))
      (RB not)
      (ADJP (RB too) (JJ hard)
        (S
          (VP (TO to)
            (VP (VB piece)
              (PRT (RP together))
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBD read)
                    (NP (NN scripture))
                    (PP (IN as)
                      (NP (DT a) (`` ``) (NN whole) ('' '')))
                    (SBAR (IN since)
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (VP (VBN supposed)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (PP (IN about)
                                    (NP
                                      (NP (NNP God))
                                      (CC and)
                                      (NP (PRP$ his) (NN will))))
                                  (PP (IN for)
                                    (NP (DT this) (NN earth))))))))))))))))))
    (. .)))

nsubj(hard-6, It-1)
cop(hard-6, 's-2)
advmod(hard-6, actually-3)
neg(hard-6, not-4)
advmod(hard-6, too-5)
root(ROOT-0, hard-6)
aux(piece-8, to-7)
xcomp(hard-6, piece-8)
prt(piece-8, together-9)
mark(read-12, if-10)
nsubj(read-12, you-11)
advcl(piece-8, read-12)
dobj(read-12, scripture-13)
det(whole-17, a-15)
prep_as(read-12, whole-17)
mark(supposed-22, since-19)
nsubjpass(supposed-22, it-20)
xsubj(be-24, it-20)
auxpass(supposed-22, is-21)
advcl(read-12, supposed-22)
aux(be-24, to-23)
xcomp(supposed-22, be-24)
prep_about(be-24, God-26)
poss(will-29, his-28)
prep_about(be-24, will-29)
conj_and(God-26, will-29)
det(earth-32, this-31)
prep_for(be-24, earth-32)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD would)
        (VP (VB seem)
          (ADJP (JJ crazy))
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (MD would)
                (ADVP (RB just))
                (VP (VB make)
                  (NP (NNS things))
                  (PRT (RP up)))))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VB die)
          (PP (IN for)
            (NP (NN thier) (NNS beliefs))))
        (: ...))
      (VP (VBZ does) (RB n't)
        (NP (PRP it))))
    (. .)))

nsubj(crazy-4, It-1)
aux(crazy-4, would-2)
cop(crazy-4, seem-3)
root(ROOT-0, crazy-4)
complm(make-9, that-5)
nsubj(make-9, they-6)
aux(make-9, would-7)
advmod(make-9, just-8)
ccomp(crazy-4, make-9)
dobj(make-9, things-10)
prt(make-9, up-11)
csubj(does-19, die-14)
nn(beliefs-17, thier-16)
prep_for(die-14, beliefs-17)
conj_and(crazy-4, does-19)
neg(does-19, n't-20)
dobj(does-19, it-21)

(ROOT
  (S
    (NP (NNP Just))
    (VP (VBZ does) (RB n't)
      (VP (VB work)
        (ADVP (RB logically))
        (PP (IN with)
          (NP (PRP$ your) (NN theory)))))
    (. .)))

nsubj(work-4, Just-1)
aux(work-4, does-2)
neg(work-4, n't-3)
root(ROOT-0, work-4)
advmod(work-4, logically-5)
poss(theory-8, your-7)
prep_with(work-4, theory-8)

(ROOT
  (S
    (NP (NNP Evolution))
    (VP (VBZ is)
      (ADVP (RB merely))
      (NP
        (NP (DT a) (NN theory))
        (ADVP (IN at) (JJS best)))
      (, ,)
      (CC and)
      (VP (VBZ has)
        (NP
          (NP (JJR more) (NNS holes))
          (PP (IN than)
            (NP (JJ swiss) (NN cheese))
            (: ;)))))
    (-RRB- -RRB-) (. .)))

nsubj(theory-5, Evolution-1)
nsubj(has-10, Evolution-1)
cop(theory-5, is-2)
advmod(theory-5, merely-3)
det(theory-5, a-4)
root(ROOT-0, theory-5)
advmod(theory-5, at-6)
pobj(at-6, best-7)
conj_and(theory-5, has-10)
amod(holes-12, more-11)
dobj(has-10, holes-12)
amod(cheese-15, swiss-14)
prep_than(holes-12, cheese-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (VP (VBN made)
        (S
          (VP (TO to)
            (VP (VB seem)
              (SBAR
                (SBAR (IN like)
                  (S
                    (NP (PRP it))
                    (VP (VBZ is) (`` ``)
                      (ADJP (JJ irrefutable)))))
                (, ,) ('' '')
                (CC but)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is) (RB not)
                      (NP (DT the) (NN case)))))))))))
    (. .)))

nsubjpass(made-3, It-1)
xsubj(seem-5, It-1)
auxpass(made-3, is-2)
root(ROOT-0, made-3)
aux(seem-5, to-4)
xcomp(made-3, seem-5)
mark(irrefutable-10, like-6)
nsubj(irrefutable-10, it-7)
cop(irrefutable-10, is-8)
dep(seem-5, irrefutable-10)
nsubj(case-18, that-14)
cop(case-18, is-15)
neg(case-18, not-16)
det(case-18, the-17)
dep(seem-5, case-18)
conj_but(irrefutable-10, case-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB actually))
      (ADJP (`` ``) (JJ forced) ('' ''))
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN taught)
              (PP (IN in)
                (NP
                  (NP (NNS schools))
                  (PP (IN as)
                    (NP (NN fact)))))))))
      (, ,)
      (SBAR
        (SBAR (IN although)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP
                (NP (RB only) (DT the) (JJS closest) (NN science))
                (SBAR
                  (S
                    (VP (MD can)
                      (VP (VB come)
                        (PP (TO to)
                          (S
                            (VP (VBG explaining)
                              (NP
                                (NP (DT the) (NN origin))
                                (PP (IN of)
                                  (NP (JJ human) (NN existence)))))))))))))))
        (CC and)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NNS things))
            (VP (VBD developed)
              (PP (IN over)
                (NP (NN time))))))))
    (. .)))

nsubj(forced-5, It-1)
xsubj(taught-9, It-1)
cop(forced-5, is-2)
advmod(forced-5, actually-3)
root(ROOT-0, forced-5)
aux(taught-9, to-7)
auxpass(taught-9, be-8)
xcomp(forced-5, taught-9)
prep_in(taught-9, schools-11)
prep_as(schools-11, fact-13)
mark(science-21, although-15)
nsubj(science-21, it-16)
cop(science-21, is-17)
advmod(science-21, only-18)
det(science-21, the-19)
amod(science-21, closest-20)
dep(forced-5, science-21)
aux(come-23, can-22)
rcmod(science-21, come-23)
prepc_to(come-23, explaining-25)
det(origin-27, the-26)
dobj(explaining-25, origin-27)
amod(existence-30, human-29)
prep_of(origin-27, existence-30)
advmod(developed-34, how-32)
nsubj(developed-34, things-33)
dep(forced-5, developed-34)
conj_and(science-21, developed-34)
prep_over(developed-34, time-36)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ 's)
          (ADJP (RBR more) (JJ controversial)))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ other) (`` ``) (JJ separate) ('' '') (NN theory))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP I))
            (VP (VBP have)
              (NP
                (NP (DT no) (NN idea))
                (VP (VBG why)
                  (NP
                    (NP (PRP$ its) (JJ separate) (, ,) (JJ the) ('' '') (NN Origin))
                    (PP (IN of)
                      (NP (NNP Life)))))))))))
    (. .)))

nsubj(controversial-4, What-1)
cop(controversial-4, 's-2)
advmod(controversial-4, more-3)
csubj(theory-11, controversial-4)
cop(theory-11, is-5)
det(theory-11, the-6)
amod(theory-11, other-7)
amod(theory-11, separate-9)
root(ROOT-0, theory-11)
dobj(have-15, theory-11)
rel(have-15, which-13)
nsubj(have-15, I-14)
rcmod(theory-11, have-15)
det(idea-17, no-16)
dobj(have-15, idea-17)
partmod(idea-17, why-18)
poss(Origin-24, its-19)
amod(Origin-24, separate-20)
amod(Origin-24, the-22)
dobj(why-18, Origin-24)
prep_of(Origin-24, Life-26)

(ROOT
  (S ('' '')
    (NP (DT That) (NN theory))
    (VP (VBZ is)
      (ADJP (RB so) (JJ flawed))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ has)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN kept)
                    (NP (DT a) (JJ separate) (NN theory))
                    (, ,)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (S
                            (NP (NN evolution))
                            (VP (VB seem)
                              (ADJP (`` ``) (JJ credible)))))))))))))))
    (. .)))

det(theory-3, That-2)
nsubj(flawed-6, theory-3)
cop(flawed-6, is-4)
advmod(flawed-6, so-5)
root(ROOT-0, flawed-6)
complm(has-9, that-7)
nsubj(has-9, it-8)
xsubj(kept-12, it-8)
ccomp(flawed-6, has-9)
aux(kept-12, to-10)
auxpass(kept-12, be-11)
xcomp(has-9, kept-12)
det(theory-15, a-13)
amod(theory-15, separate-14)
dobj(kept-12, theory-15)
aux(make-18, to-17)
xcomp(kept-12, make-18)
nsubj(credible-22, evolution-19)
cop(credible-22, seem-20)
ccomp(make-18, credible-22)

(ROOT
  (S ('' '')
    (PP (IN If)
      (S
        (NP (PRP you))
        (VP (MD would)
          (VP (VB like)
            (S
              (VP (TO to)
                (VP (VB discuss)
                  (NP
                    (NP (DT the) (NN trinity))
                    (CC or)
                    (NP (FW etc) (, ,)
                      (S
                        (VP (VB feel)
                          (ADJP (JJ free)
                            (S
                              (VP (TO to)
                                (VP (VB let)
                                  (NP (PRP me)))))))))))))))))
    (VP (VBP know))
    (. .)))

nsubj(like-5, you-3)
xsubj(discuss-7, you-3)
aux(like-5, would-4)
prepc_if(know-18, like-5)
aux(discuss-7, to-6)
xcomp(like-5, discuss-7)
det(trinity-9, the-8)
dobj(discuss-7, trinity-9)
dobj(discuss-7, etc-11)
conj_or(trinity-9, etc-11)
dep(etc-11, feel-13)
acomp(feel-13, free-14)
aux(let-16, to-15)
xcomp(free-14, let-16)
dobj(let-16, me-17)
root(ROOT-0, know-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJS best))
      (S
        (VP (TO to)
          (VP (VB look)
            (PP (IN at)
              (NP (DT both) (NNS sides)))
            (PP (IN like)
              (NP
                (S
                  (NP (PRP I))
                  (VP (VBP have)))
                (, ,)
                (CONJP (RB not) (RB just))
                (NP
                  (NP (CD one) (`` ``) (JJ presupposed) ('' '') (NNS attitude))
                  (PP (IN towards)
                    (NP (DT the) (JJ other))))))))))
    (. .)))

nsubj(best-3, It-1)
xsubj(look-5, It-1)
cop(best-3, 's-2)
root(ROOT-0, best-3)
aux(look-5, to-4)
xcomp(best-3, look-5)
det(sides-8, both-7)
prep_at(look-5, sides-8)
nsubj(have-11, I-10)
prep_like(look-5, have-11)
neg(just-14, not-13)
dep(have-11, just-14)
num(attitude-19, one-15)
amod(attitude-19, presupposed-17)
conj(have-11, attitude-19)
det(other-22, the-21)
prep_towards(attitude-19, other-22)

(ROOT
  (S
    (ADVP (RB So))
    (SINV (MD would)
      (NP (PRP you))
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP (DT the)
              (NP
                (NP (DT those))
                (PP (IN in)
                  (NP (DT the) (NN bible)))))
            (`` ``)
            (VP (VBD lied) ('' '')
              (PP (IN about)
                (NP (NNP Jesus)))
              (S
                (VP (VBG doing)
                  (NP (NNS miracles)))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNP God))
      (VP (VBG showing)
        (NP (PRP himself))
        (PP (IN through)
          (NP
            (NP (NNS signs))
            (CC or)
            (NP (FW etc.))))))
    (. .)))

advmod(say-4, So-1)
aux(say-4, would-2)
nsubj(say-4, you-3)
root(ROOT-0, say-4)
complm(lied-12, that-5)
det(those-7, the-6)
nsubj(lied-12, those-7)
det(bible-10, the-9)
prep_in(those-7, bible-10)
ccomp(say-4, lied-12)
prep_about(lied-12, Jesus-15)
xcomp(lied-12, doing-16)
dobj(doing-16, miracles-17)
nsubj(showing-21, God-20)
conj_and(say-4, showing-21)
dobj(showing-21, himself-22)
prep_through(showing-21, signs-24)
prep_through(showing-21, etc.-26)
conj_or(signs-24, etc.-26)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (DT that))
        (VP (VBZ does) (RB n't)
          (ADVP (RB exactly))
          (VP (VB represent)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP they))
                (VP (VBD acted))))))))
    (: :)
    (NP (NNP Jesus) (NNS followers))
    (VP (VBD were)
      (VP (VBG promoting)
        (NP
          (NP (NN honesty))
          (, ,)
          (NP (NN truth))
          (, ,)
          (NP (NN forgiveness))
          (, ,)
          (NP (FW etc.) (. .)))))
    (. .)))

mark(represent-6, Because-1)
nsubj(represent-6, that-2)
aux(represent-6, does-3)
neg(represent-6, n't-4)
advmod(represent-6, exactly-5)
advcl(promoting-14, represent-6)
advmod(acted-9, how-7)
nsubj(acted-9, they-8)
ccomp(represent-6, acted-9)
nn(followers-12, Jesus-11)
nsubj(promoting-14, followers-12)
aux(promoting-14, were-13)
root(ROOT-0, promoting-14)
dobj(promoting-14, honesty-15)
appos(honesty-15, truth-17)
appos(honesty-15, forgiveness-19)
appos(honesty-15, etc.-21)

(ROOT
  (S (CC and)
    (NP (PRP they))
    (VP (VBD died)
      (PP (RB because) (IN of)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP they))
            (VP
              (VP (VBD saw))
              (CC and)
              (VP (VBD believed)
                (PRT (RP in))))))))
    (. .)))

cc(died-3, and-1)
nsubj(died-3, they-2)
root(ROOT-0, died-3)
dobj(saw-8, what-6)
nsubj(saw-8, they-7)
nsubj(believed-10, they-7)
prepc_because_of(died-3, saw-8)
prepc_because_of(died-3, believed-10)
conj_and(saw-8, believed-10)
prt(believed-10, in-11)

