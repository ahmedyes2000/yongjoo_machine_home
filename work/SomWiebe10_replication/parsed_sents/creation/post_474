(ROOT
  (S (: --)
    (ADJP (JJ TJ10Again))
    (, ,)
    (NP (PRP you))
    (VP (MD may)
      (VP (VB have)
        (NP (NN faith))
        (SBAR (IN that)
          (S
            (NP (JJ methodological) (NN materialism))
            (VP (MD will)
              (VP (VB solve)
                (NP
                  (NP (DT all))
                  (PP (IN of)
                    (NP
                      (NP (DT these) (NNS problems))
                      (PP (IN in)
                        (NP (DT the) (JJ distant) (NN future))))))))))))
    (. .)))

dep(have-6, TJ10Again-2)
nsubj(have-6, you-4)
aux(have-6, may-5)
root(ROOT-0, have-6)
dobj(have-6, faith-7)
complm(solve-12, that-8)
amod(materialism-10, methodological-9)
nsubj(solve-12, materialism-10)
aux(solve-12, will-11)
ccomp(have-6, solve-12)
dobj(solve-12, all-13)
det(problems-16, these-15)
prep_of(all-13, problems-16)
det(future-20, the-18)
amod(future-20, distant-19)
prep_in(problems-16, future-20)

(ROOT
  (FRAG
    (NP (NNP Great))
    (. .)))

root(ROOT-0, Great-1)

(ROOT
  (SQ (VBP Do)
    (NP (PRP we))
    (ADVP (RB still))
    (VP (VB believe)
      (PP (IN in)
        (NP (DT a) (JJ flat) (NN earth))))
    (. ?)))

aux(believe-4, Do-1)
nsubj(believe-4, we-2)
advmod(believe-4, still-3)
root(ROOT-0, believe-4)
det(earth-8, a-6)
amod(earth-8, flat-7)
prep_in(believe-4, earth-8)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP (JJ cold) (NN fusion)))
    (. .)))

root(ROOT-0, What-1)
dep(What-1, about-2)
amod(fusion-4, cold-3)
pobj(about-2, fusion-4)

(ROOT
  (S
    (S
      (ADVP (IN At) (JJS least))
      (NP (DT these))
      (VP (VBD were)
        (NP (JJ falsifiable) (NNS claims))))
    (CC but)
    (S
      (NP (NNP ID))
      (VP (VBZ is) (RB not)
        (PP (IN in)
          (NP
            (NP (DT the) (NN business))
            (PP (IN of)
              (S
                (VP (VBG presenting)
                  (S
                    (NP (DT any) (JJ scientific) (NNS hypotheses))
                    (ADJP (JJ relevant)
                      (PP (TO to)
                        (NP
                          (NP (NNP ID))
                          (, ,)
                          (NP
                            (NP (JJ other))
                            (PP (IN than)
                              (NP
                                (NP (JJ negative) (NNS hypotheses))
                                (PP (IN about)
                                  (NP (JJ Darwinian) (NN theory)))))))))))))))))
    (. .)))

advmod(claims-6, At-1)
pobj(At-1, least-2)
nsubj(claims-6, these-3)
cop(claims-6, were-4)
amod(claims-6, falsifiable-5)
root(ROOT-0, claims-6)
nsubj(is-9, ID-8)
conj_but(claims-6, is-9)
neg(is-9, not-10)
det(business-13, the-12)
prep_in(is-9, business-13)
prepc_of(business-13, presenting-15)
det(hypotheses-18, any-16)
amod(hypotheses-18, scientific-17)
nsubj(relevant-19, hypotheses-18)
xcomp(presenting-15, relevant-19)
prep_to(relevant-19, ID-21)
appos(ID-21, other-23)
amod(hypotheses-26, negative-25)
prep_than(other-23, hypotheses-26)
amod(theory-29, Darwinian-28)
prep_about(hypotheses-26, theory-29)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB believe)
        (SBAR (IN that)
          (S
            (NP (JJ global) (NN warming))
            (VP (VBZ is)
              (VP (VBG happening)
                (VP (MD should) (RB not)
                  (VP (VB be)
                    (NP
                      (NP (DT an) (NN excuse))
                      (PP (IN for)
                        (S
                          (VP (VBG ignoring)
                            (NP (DT the) (NNS facts))))))))))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
complm(happening-9, that-5)
amod(warming-7, global-6)
nsubj(happening-9, warming-7)
aux(happening-9, is-8)
ccomp(believe-4, happening-9)
aux(excuse-14, should-10)
neg(excuse-14, not-11)
cop(excuse-14, be-12)
det(excuse-14, an-13)
dep(happening-9, excuse-14)
prepc_for(excuse-14, ignoring-16)
det(facts-18, the-17)
dobj(ignoring-16, facts-18)

(ROOT
  (SBAR (IN If)
    (S
      (NP (NNP ID) (NNS proponents))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (NNP MN))
            (VP (VBZ is)
              (ADJP (JJ insufficient))
              (S (RB then)
                (VP (VB let)
                  (S
                    (NP (PRP them))
                    (VP (VB make)
                      (NP
                        (NP (PRP$ their) (NN case))
                        (: :)
                        (SBARQ
                          (WHADVP (WRB how))
                          (SQ (VBZ does)
                            (NP (PRP one))
                            (ADVP (RB reliably))
                            (VP (VB detect)
                              (NP
                                (NP (DT the) (NN design))
                                (PP (IN of)
                                  (NP (NNP God))))))
                          (. ?))))))))))))))

mark(believe-4, If-1)
nn(proponents-3, ID-2)
nsubj(believe-4, proponents-3)
root(ROOT-0, believe-4)
nsubj(insufficient-7, MN-5)
cop(insufficient-7, is-6)
ccomp(believe-4, insufficient-7)
advmod(let-9, then-8)
ccomp(insufficient-7, let-9)
nsubj(make-11, them-10)
ccomp(let-9, make-11)
poss(case-13, their-12)
dobj(make-11, case-13)
advmod(detect-19, how-15)
aux(detect-19, does-16)
nsubj(detect-19, one-17)
advmod(detect-19, reliably-18)
dep(case-13, detect-19)
det(design-21, the-20)
dobj(detect-19, design-21)
prep_of(design-21, God-23)

(ROOT
  (SBARQ (CC And)
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (PRP we))
      (VP (VB expect)
        (SBAR (IN that)
          (S
            (NP (NNP God))
            (VP (VBD was)
              (ADVP (RB somehow))
              (VP (VBN forced)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (VP (VBN involved)
                        (PP (IN in)
                          (NP (PRP$ His) (JJ original) (NN design)))))))))))))
    (. ?)))

cc(expect-5, And-1)
advmod(expect-5, why-2)
aux(expect-5, should-3)
nsubj(expect-5, we-4)
root(ROOT-0, expect-5)
complm(forced-10, that-6)
nsubjpass(forced-10, God-7)
xsubj(involved-13, God-7)
auxpass(forced-10, was-8)
advmod(forced-10, somehow-9)
ccomp(expect-5, forced-10)
aux(involved-13, to-11)
auxpass(involved-13, get-12)
xcomp(forced-10, involved-13)
poss(design-17, His-15)
amod(design-17, original-16)
prep_in(involved-13, design-17)

(ROOT
  (SBARQ
    (WHNP (WDT What) (JJ explanatory) (NN power))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (NNP God))
                  (VP (VBN designed)
                    (S (`` ``)
                      (NP (SYM x))
                      ('' ''))))))))))
    (. ?)))

det(power-3, What-1)
amod(power-3, explanatory-2)
dep(have-6, power-3)
aux(have-6, does-4)
nsubj(have-6, it-5)
xsubj(say-8, it-5)
root(ROOT-0, have-6)
aux(say-8, to-7)
xcomp(have-6, say-8)
complm(designed-11, that-9)
nsubj(designed-11, God-10)
ccomp(say-8, designed-11)
dep(designed-11, x-13)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (VP (VB replace)
          (NP (NNP God))
          (PP (IN with) (`` ``)
            (NP (JJ magic) (JJ pink) (NN unicorn))
            ('' '')))))
    (. ?)))

dep(replace-4, What-1)
mark(replace-4, if-2)
nsubj(replace-4, we-3)
root(ROOT-0, replace-4)
dobj(replace-4, God-5)
amod(unicorn-10, magic-8)
amod(unicorn-10, pink-9)
prep_with(replace-4, unicorn-10)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (NN science))
        (VP (VBZ discovers)
          (NP (DT a) (NN way)
            (S
              (VP (TO to)
                (VP (VB explain)
                  (NP (PRP it)))))))))
    (. ?)))

dep(discovers-4, What-1)
mark(discovers-4, if-2)
nsubj(discovers-4, science-3)
root(ROOT-0, discovers-4)
det(way-6, a-5)
dobj(discovers-4, way-6)
aux(explain-8, to-7)
infmod(way-6, explain-8)
dobj(explain-8, it-9)

(ROOT
  (SQ (VBZ Does)
    (NP (DT this))
    (ADVP (RB somehow))
    (VP (VB disprove)
      (NP (`` ``) (NN design) ('' '')))
    (. ?)))

aux(disprove-4, Does-1)
nsubj(disprove-4, this-2)
advmod(disprove-4, somehow-3)
root(ROOT-0, disprove-4)
dobj(disprove-4, design-6)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (VP (VBN meant)
        (PP (IN by) (`` ``)
          (NP (NN design)))
        (`` `)
        (S
          (S
            (NP
              (NP (NNP ID) (POS 's))
              (NN contribution))
            (VP (VBZ is) (RB not)
              (S
                (VP (TO to)
                  (VP (VB show)
                    (NP
                      (SBAR (IN that)
                        (S
                          (NP (NNP MN))
                          (VP (VBZ is)
                            (VP (VBG lacking)))))
                      (CONJP (CC but)
                        (RB rather))
                      (SBAR (IN that)
                        (S
                          (NP (PRP$ our) (JJ scientific) (NNS explanations))
                          (VP (VBP are)
                            (VP (VBG lacking)))))))))))
          (CC and)
          (S
            (ADVP (RB even) (RB there))
            (, ,)
            (NP (PRP they))
            (VP (VBP fail)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (NP
                      (ADJP (RB much) (JJ relevant))
                      (NN work))))))))))
    (. .)))

nsubjpass(meant-3, What-1)
auxpass(meant-3, is-2)
root(ROOT-0, meant-3)
agent(meant-3, design-6)
poss(contribution-10, ID-8)
nsubj(is-11, contribution-10)
xsubj(show-14, contribution-10)
dep(meant-3, is-11)
neg(is-11, not-12)
aux(show-14, to-13)
xcomp(is-11, show-14)
complm(lacking-18, that-15)
nsubj(lacking-18, MN-16)
aux(lacking-18, is-17)
dobj(show-14, lacking-18)
complm(lacking-26, that-21)
poss(explanations-24, our-22)
amod(explanations-24, scientific-23)
nsubj(lacking-26, explanations-24)
aux(lacking-26, are-25)
dobj(show-14, lacking-26)
conj_negcc(lacking-18, lacking-26)
advmod(there-29, even-28)
advmod(fail-32, there-29)
nsubj(fail-32, they-31)
xsubj(do-34, they-31)
dep(meant-3, fail-32)
conj_and(is-11, fail-32)
aux(do-34, to-33)
xcomp(fail-32, do-34)
advmod(relevant-36, much-35)
amod(work-37, relevant-36)
dobj(do-34, work-37)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP (PRP$ your) (NN belief)))
    (. .)))

nsubj(belief-4, That-1)
cop(belief-4, is-2)
poss(belief-4, your-3)
root(ROOT-0, belief-4)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP
        (ADJP (NN nothing) (JJR more))
        (PP (IN than)
          (NP
            (NP
              (NP (DT that))
              (NP (DT a) (NN belief)))
            (, ,)
            (NP
              (NP (DT a) (NN stand))
              (PP (IN of)
                (NP (NN faith))))))))
    (. .)))

advmod(nothing-5, However-1)
nsubj(nothing-5, it-3)
cop(nothing-5, is-4)
root(ROOT-0, nothing-5)
dep(nothing-5, more-6)
prep_than(nothing-5, that-8)
det(belief-10, a-9)
dep(that-8, belief-10)
det(stand-13, a-12)
appos(that-8, stand-13)
prep_of(stand-13, faith-15)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN guarantee)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(guarantee-4, no-3)
nsubj(is-2, guarantee-4)

(ROOT
  (S
    (INTJ (RB Sure))
    (, ,)
    (NP (PRP we))
    (VP (MD may)
      (VP (VB have)
        (VP (VBN come)
          (S
            (S
              (VP (TO to)
                (VP (VB realize)
                  (SBAR (IN that)
                    (S
                      (NP (NNP MN))
                      (VP (VBZ is)
                        (ADJP (JJ insufficient)
                          (S
                            (VP (TO to)
                              (VP (VB address)
                                (NP (DT all) (NNS problems))))))
                        (, ,)
                        (ADVP (RB however))))))))
            (SBARQ
              (WHADVP (WRB why))
              (SQ (MD should)
                (NP (PRP we))
                (VP (VB conclude) (`` ``)
                  (NP (NN design))
                  ('' '')
                  (PP (VBN based)
                    (PP (IN on)
                      (NP (RB just) (PRP$ our) (NN ignorance)))))))))))
    (. .)))

dep(come-6, Sure-1)
nsubj(come-6, we-3)
aux(come-6, may-4)
aux(come-6, have-5)
root(ROOT-0, come-6)
aux(realize-8, to-7)
dep(come-6, realize-8)
complm(insufficient-12, that-9)
nsubj(insufficient-12, MN-10)
cop(insufficient-12, is-11)
ccomp(realize-8, insufficient-12)
aux(address-14, to-13)
xcomp(insufficient-12, address-14)
det(problems-16, all-15)
dobj(address-14, problems-16)
advmod(insufficient-12, however-18)
advmod(conclude-22, why-19)
aux(conclude-22, should-20)
nsubj(conclude-22, we-21)
dep(realize-8, conclude-22)
dobj(conclude-22, design-24)
prepc_based_on(conclude-22, on-27)
advmod(ignorance-30, just-28)
poss(ignorance-30, our-29)
pobj(conclude-22, ignorance-30)

(ROOT
  (S
    (S
      (SBAR (RB Just) (IN because)
        (S
          (NP (EX there))
          (VP (VBP are)
            (NP
              (NP (DT some) (`` ``) (NNS scientists) ('' ''))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP believe)
                    (SBAR
                      (S
                        (NP (NN something) (RBR more))
                        (VP (VBZ is)
                          (VP (VBN needed))))))))))))
      (, ,)
      (NP (DT this))
      (VP (VBZ is)
        (UCP
          (NP (DT neither) (JJ sufficient) (NN justification))
          (CC and)
          (ADJP (JJR worse)))))
    (, ,)
    (NP (PRP they))
    (VP (VBP have)
      (VP (VBN failed)
        (S
          (VP (TO to)
            (VP (VB provide)
              (NP (NNP ANY) (NN method)
                (S
                  (VP (TO to)
                    (VP (VB extend)
                      (NP (DT the) (NNP MN) (NN framework)))))))))))
    (. .)))

advmod(are-4, Just-1)
dep(are-4, because-2)
expl(are-4, there-3)
advcl(is-17, are-4)
det(scientists-7, some-5)
nsubj(are-4, scientists-7)
nsubj(believe-10, scientists-7)
rcmod(scientists-7, believe-10)
nsubjpass(needed-14, something-11)
advmod(something-11, more-12)
auxpass(needed-14, is-13)
ccomp(believe-10, needed-14)
nsubj(is-17, this-16)
ccomp(failed-26, is-17)
det(justification-20, neither-18)
amod(justification-20, sufficient-19)
attr(is-17, justification-20)
attr(is-17, worse-22)
conj_and(justification-20, worse-22)
nsubj(failed-26, they-24)
xsubj(provide-28, they-24)
aux(failed-26, have-25)
root(ROOT-0, failed-26)
aux(provide-28, to-27)
xcomp(failed-26, provide-28)
nn(method-30, ANY-29)
dobj(provide-28, method-30)
aux(extend-32, to-31)
infmod(method-30, extend-32)
det(framework-35, the-33)
nn(framework-35, MN-34)
dobj(extend-32, framework-35)

(ROOT
  (S
    (NP
      (NP (DT The) (NN supernatural))
      (PP (IN without)
        (NP (NNS constraints))))
    (VP (VBZ is)
      (NP (DT no) (NN explanation))
      (SBAR (IN since)
        (S
          (NP (PRP it))
          (VP (VBZ explains)
            (NP (NN anything))))))
    (. .)))

det(supernatural-2, The-1)
nsubj(explanation-7, supernatural-2)
prep_without(supernatural-2, constraints-4)
cop(explanation-7, is-5)
det(explanation-7, no-6)
root(ROOT-0, explanation-7)
mark(explains-10, since-8)
nsubj(explains-10, it-9)
advcl(explanation-7, explains-10)
dobj(explains-10, anything-11)

(ROOT
  (S
    (ADVP (RB Hope))
    (NP (PRP you))
    (VP (VBP realize)
      (SBAR (IN that)
        (S
          (NP (NNP ID) (NNS scientists))
          (VP (VBP are)
            (VP (VBN given)
              (NP (DT a) (NN voice)
                (S
                  (VP (TO to)
                    (VP (VB speak))))))))))
    (. .)))

advmod(realize-3, Hope-1)
nsubj(realize-3, you-2)
root(ROOT-0, realize-3)
complm(given-8, that-4)
nn(scientists-6, ID-5)
nsubjpass(given-8, scientists-6)
auxpass(given-8, are-7)
ccomp(realize-3, given-8)
det(voice-10, a-9)
dobj(given-8, voice-10)
aux(speak-12, to-11)
infmod(voice-10, speak-12)

(ROOT
  (S (CC But)
    (S
      (NP (PRP they))
      (ADVP (RB somehow))
      (VP (VBD failed)
        (S
          (VP (TO to)
            (VP (VB speak))))))
    (, ,)
    (CC or)
    (ADVP (RB perhaps))
    (S
      (NP (PRP they))
      (VP
        (ADVP (RB just))
        (VBN whispered)))
    (. ?)))

nsubj(failed-4, they-2)
xsubj(speak-6, they-2)
advmod(failed-4, somehow-3)
root(ROOT-0, failed-4)
aux(speak-6, to-5)
xcomp(failed-4, speak-6)
advmod(failed-4, perhaps-9)
conj_or(failed-4, perhaps-9)
nsubj(whispered-12, they-10)
advmod(whispered-12, just-11)
conj_or(failed-4, whispered-12)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP we))
      (VP (VB give)
        (NP (NN credence))
        (PP (TO to)
          (NP
            (NP (RB just) (NN anyone))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ makes)
                  (NP (JJ ill) (JJ supported) (NNS claims)))))))))
    (. ?)))

advmod(give-4, Why-1)
aux(give-4, should-2)
nsubj(give-4, we-3)
root(ROOT-0, give-4)
dobj(give-4, credence-5)
advmod(anyone-8, just-7)
prep_to(give-4, anyone-8)
nsubj(makes-10, anyone-8)
rcmod(anyone-8, makes-10)
amod(claims-13, ill-11)
amod(claims-13, supported-12)
dobj(makes-10, claims-13)

