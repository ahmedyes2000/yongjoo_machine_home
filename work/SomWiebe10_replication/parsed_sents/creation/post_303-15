(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP think)
          (SBAR
            (S
              (NP (NN science))
              (VP (VBZ is) (RB not)
                (ADJP (JJ satisfactory))))))))
    (, ,)
    (NP
      (NP (RB then) (DT the) (NN burden))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ is)
      (PP (IN on)
        (NP (PRP you)))
      (S
        (VP (TO to)
          (VP (VB show)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBZ is) (RB not)
                  (ADJP (JJ satisfactory)))))))))
    (. .)))

mark(think-3, If-1)
nsubj(think-3, you-2)
advcl(is-14, think-3)
nsubj(satisfactory-7, science-4)
cop(satisfactory-7, is-5)
neg(satisfactory-7, not-6)
ccomp(think-3, satisfactory-7)
advmod(burden-11, then-9)
det(burden-11, the-10)
nsubj(is-14, burden-11)
xsubj(show-18, burden-11)
prep_of(burden-11, proof-13)
root(ROOT-0, is-14)
prep_on(is-14, you-16)
aux(show-18, to-17)
xcomp(is-14, show-18)
complm(satisfactory-23, that-19)
nsubj(satisfactory-23, it-20)
cop(satisfactory-23, is-21)
neg(satisfactory-23, not-22)
ccomp(show-18, satisfactory-23)

