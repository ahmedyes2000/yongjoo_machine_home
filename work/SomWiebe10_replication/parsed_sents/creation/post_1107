(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do)
      (VP (VB agree)
        (SBAR (IN that)
          (S
            (NP (NN evolution))
            (VP (VBZ is)
              (ADJP (JJ wrong)
                (PP (IN in)
                  (NP (DT the) (NN sense))))
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ does) (RB not)
                    (VP (VB explain)
                      (CC or)
                      (VB support)
                      (NP (PRP$ our) (NN existence)))))))))))
    (. .)))

nsubj(agree-3, I-1)
aux(agree-3, do-2)
root(ROOT-0, agree-3)
complm(wrong-7, that-4)
nsubj(wrong-7, evolution-5)
cop(wrong-7, is-6)
ccomp(agree-3, wrong-7)
det(sense-10, the-9)
prep_in(wrong-7, sense-10)
complm(explain-15, that-11)
nsubj(explain-15, it-12)
nsubj(support-17, it-12)
aux(explain-15, does-13)
neg(explain-15, not-14)
ccomp(wrong-7, explain-15)
ccomp(wrong-7, support-17)
conj_or(explain-15, support-17)
poss(existence-19, our-18)
dobj(explain-15, existence-19)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (DT some) (JJ great) (NNS studies))
        (VP (VBN done)
          (S
            (VP (TO to)
              (VP (VB show)
                (SBAR
                  (SBAR (IN that)
                    (S
                      (NP (NN evolution))
                      (VP (VBZ is)
                        (VP (VBG happening)))))
                  (CC and)
                  (SBAR (IN that)
                    (S
                      (NP (PRP we))
                      (VP (VBP have)
                        (VP (VBN adapted)
                          (PP (TO to)
                            (NP (PRP$ our) (NNS surroundings))))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
det(studies-5, some-3)
amod(studies-5, great-4)
nsubj(are-2, studies-5)
xsubj(show-8, studies-5)
partmod(studies-5, done-6)
aux(show-8, to-7)
xcomp(done-6, show-8)
complm(happening-12, that-9)
nsubj(happening-12, evolution-10)
aux(happening-12, is-11)
ccomp(show-8, happening-12)
complm(adapted-17, that-14)
nsubj(adapted-17, we-15)
aux(adapted-17, have-16)
ccomp(show-8, adapted-17)
conj_and(happening-12, adapted-17)
poss(surroundings-20, our-19)
prep_to(adapted-17, surroundings-20)

(ROOT
  (S
    (SBAR (IN Until)
      (S
        (NP (PRP I))
        (VP (VBP see)
          (NP
            (NP
              (NP (DT some) (JJ absolute) (NN evidence))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ supports)
                    (NP (NN evolution))))))
            (, ,)
            (CONJP (RB rather) (IN than))
            (NP
              (NP (CD one) (POS 's))
              (NN theory))))))
    (, ,)
    (ADVP (RB then))
    (NP (FW i))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB conclude)
            (SBAR
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (ADJP (JJ wrong)))))
              (CC and)
              (SBAR (IN that)
                (S
                  (NP (PRP we))
                  (VP (VBP are)
                    (NP
                      (NP (NN part))
                      (PP (IN of)
                        (NP
                          (NP (NN something))
                          (ADJP
                            (ADJP (RBR more) (JJ powerful))
                            (SBAR (IN than)
                              (S
                                (NP (PRP we))
                                (VP (MD could)
                                  (ADVP (RB ever))
                                  (VP (VB fathom)))))))))))))))))
    (. .)))

mark(see-3, Until-1)
nsubj(see-3, I-2)
advcl(have-19, see-3)
det(evidence-6, some-4)
amod(evidence-6, absolute-5)
dobj(see-3, evidence-6)
nsubj(supports-8, evidence-6)
rcmod(evidence-6, supports-8)
dobj(supports-8, evolution-9)
poss(theory-15, one-13)
dobj(see-3, theory-15)
conj_negcc(evidence-6, theory-15)
nsubj(supports-8, theory-15)
advmod(have-19, then-17)
nsubj(have-19, i-18)
xsubj(conclude-21, i-18)
root(ROOT-0, have-19)
aux(conclude-21, to-20)
xcomp(have-19, conclude-21)
complm(wrong-25, that-22)
nsubj(wrong-25, it-23)
cop(wrong-25, is-24)
ccomp(conclude-21, wrong-25)
complm(part-30, that-27)
nsubj(part-30, we-28)
cop(part-30, are-29)
ccomp(conclude-21, part-30)
conj_and(wrong-25, part-30)
prep_of(part-30, something-32)
advmod(powerful-34, more-33)
amod(something-32, powerful-34)
mark(fathom-39, than-35)
nsubj(fathom-39, we-36)
aux(fathom-39, could-37)
advmod(fathom-39, ever-38)
dep(powerful-34, fathom-39)

(ROOT
  (SBARQ
    (PP (IN Besides))
    (, ,)
    (SQ (VBZ has)
      (NP (NN evolution))
      (VP
        (ADVP (RB ever))
        (VBD turned)
        (NP (JJ someones) (NN life))
        (PRT (RP around))))
    (. ?)))

prep(turned-6, Besides-1)
aux(turned-6, has-3)
nsubj(turned-6, evolution-4)
advmod(turned-6, ever-5)
root(ROOT-0, turned-6)
amod(life-8, someones-7)
dobj(turned-6, life-8)
prt(turned-6, around-9)

(ROOT
  (SQ (VBZ Has)
    (NP
      (NP (NN evolution))
      (ADVP (RB ever)))
    (VP (VBN impacted)
      (NP (NN someone))
      (ADVP
        (ADVP (RB so) (RB much))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP make)
              (NP
                (NP (NNS steps))
                (PP (IN in)
                  (NP (PRP$ their) (NN life)
                    (S
                      (VP (TO to)
                        (VP (VB improve)
                          (CC and)
                          (VB influence)
                          (NP
                            (NP (NNS people))
                            (PP (IN in)
                              (NP (DT a)
                                (ADJP (JJ positive)
                                  (CC and)
                                  (JJ loving))
                                (NN way)))))))))))))))
    (. ?)))

aux(impacted-4, Has-1)
nsubj(impacted-4, evolution-2)
advmod(evolution-2, ever-3)
root(ROOT-0, impacted-4)
dobj(impacted-4, someone-5)
advmod(much-7, so-6)
advmod(impacted-4, much-7)
dep(make-10, that-8)
nsubj(make-10, they-9)
ccomp(much-7, make-10)
dobj(make-10, steps-11)
poss(life-14, their-13)
prep_in(steps-11, life-14)
aux(improve-16, to-15)
infmod(life-14, improve-16)
infmod(life-14, influence-18)
conj_and(improve-16, influence-18)
dobj(improve-16, people-19)
det(way-25, a-21)
amod(way-25, positive-22)
conj_and(positive-22, loving-24)
amod(way-25, loving-24)
prep_in(people-19, way-25)

(ROOT
  (S
    (NP (NN Evidence)
      (S
        (VP (TO to)
          (VP (VB support)
            (NP (NN something)
              (CC and)
              (NN faith))
            (PP (IN in)
              (NP (NN something)))))))
    (VP (VBP are)
      (NP (CD two) (JJ different) (NNS things)))
    (. .)))

nsubj(things-12, Evidence-1)
aux(support-3, to-2)
infmod(Evidence-1, support-3)
dobj(support-3, something-4)
dobj(support-3, faith-6)
conj_and(something-4, faith-6)
prep_in(support-3, something-8)
cop(things-12, are-9)
num(things-12, two-10)
amod(things-12, different-11)
root(ROOT-0, things-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP
            (NP (NN faith))
            (PP (IN in)
              (NP (NN something)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB need)
        (NP
          (NP (DT an) (NN explanation))
          (PP (IN of)
            (NP
              (NP (PRP it) (POS 's))
              (NN existence))))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(need-11, have-3)
dobj(have-3, faith-4)
prep_in(faith-4, something-6)
nsubj(need-11, you-8)
aux(need-11, do-9)
neg(need-11, n't-10)
root(ROOT-0, need-11)
det(explanation-13, an-12)
dobj(need-11, explanation-13)
poss(existence-17, it-15)
prep_of(explanation-13, existence-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (PP (IN like)
        (NP (DT the) (JJ whole) (NN airplane) (NN thing))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
det(thing-7, the-4)
amod(thing-7, whole-5)
nn(thing-7, airplane-6)
prep_like('s-2, thing-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP
                (NP (DT a) (JJ big) (NN hunk))
                (PP (IN of)
                  (NP (NN metal))))
              (VP (VBZ flies)
                (PP (IN through)
                  (NP (DT the) (NN air)
                    (S
                      (VP (TO to)
                        (VP (VB get)
                          (NP (PRP me))
                          (ADVP (RB somewhere)))))))))))))
    (, ,)
    (NP (FW i))
    (VP (VBP do) (RB n't)
      (ADVP (RB even))
      (VP (VB think)
        (SBAR (IN that)
          (S
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ possible))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
ccomp(think-24, know-4)
advmod(flies-11, how-5)
det(hunk-8, a-6)
amod(hunk-8, big-7)
nsubj(flies-11, hunk-8)
prep_of(hunk-8, metal-10)
ccomp(know-4, flies-11)
det(air-14, the-13)
prep_through(flies-11, air-14)
aux(get-16, to-15)
infmod(air-14, get-16)
dobj(get-16, me-17)
advmod(get-16, somewhere-18)
nsubj(think-24, i-20)
aux(think-24, do-21)
neg(think-24, n't-22)
advmod(think-24, even-23)
root(ROOT-0, think-24)
complm(possible-28, that-25)
aux(possible-28, should-26)
cop(possible-28, be-27)
ccomp(think-24, possible-28)

(ROOT
  (S
    (S (CC But)
      (ADVP (RB apparently))
      (NP (PRP it))
      (VP (VBZ is)))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN experienced)
          (NP (PRP it)))))
    (. .)))

advmod(is-4, apparently-2)
nsubj(is-4, it-3)
root(ROOT-0, is-4)
nsubj(experienced-9, I-7)
aux(experienced-9, have-8)
conj_and(is-4, experienced-9)
dobj(experienced-9, it-10)

(ROOT
  (S
    (S (CC And)
      (NP (DT every) (NN time))
      (NP (PRP I))
      (VP (VBP get)
        (PP (IN on)
          (NP (DT a) (NN plane)))))
    (, ,)
    (NP (FW i))
    (VP (VBP have)
      (NP
        (NP (NN faith))
        (, ,)
        (NP (JJ blind) (NN faith))))
    (. .)))

cc(get-5, And-1)
det(time-3, every-2)
nsubj(get-5, time-3)
nsubj(get-5, I-4)
ccomp(have-11, get-5)
det(plane-8, a-7)
prep_on(get-5, plane-8)
nsubj(have-11, i-10)
root(ROOT-0, have-11)
dobj(have-11, faith-12)
amod(faith-15, blind-14)
appos(faith-12, faith-15)

(ROOT
  (S (CC But)
    (PP (TO to)
      (NP (PRP me)))
    (, ,)
    (NP (DT that))
    (VP (VBZ does) (RB not)
      (VP (VB support)
        (NP (NN evolution))))
    (. .)))

cc(support-8, But-1)
prep_to(support-8, me-3)
nsubj(support-8, that-5)
aux(support-8, does-6)
neg(support-8, not-7)
root(ROOT-0, support-8)
dobj(support-8, evolution-9)

(ROOT
  (S
    (NP (NNP Evolution))
    (VP (VBZ is)
      (NP (DT a) (JJ broad) (NN topic)))
    (. .)))

nsubj(topic-5, Evolution-1)
cop(topic-5, is-2)
det(topic-5, a-3)
amod(topic-5, broad-4)
root(ROOT-0, topic-5)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP have)
        (VP (VBN done)
          (ADVP (RB quite)
            (NP (DT a) (RB bit)))
          (PP (IN of)
            (NP (NN research)))))
      (CC and)
      (VP (VBP have)
        (VP (VBN found)
          (SBAR (IN that)
            (S
              (NP
                (NP (NNS people))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP are)
                      (VP (VBG looking)
                        (PP (IN for)
                          (NP (NNS answers))))))))
              (VP (MD will)
                (VP (VB find)
                  (S
                    (NP (NNS things))
                    (VP (TO to)
                      (VP (VB support)
                        (NP (PRP$ their) (NN belief))))))))))))
    (. .)))

nsubj(done-3, I-1)
nsubj(found-11, I-1)
aux(done-3, have-2)
root(ROOT-0, done-3)
advmod(done-3, quite-4)
det(bit-6, a-5)
pobj(quite-4, bit-6)
prep_of(done-3, research-8)
aux(found-11, have-10)
conj_and(done-3, found-11)
complm(find-20, that-12)
nsubj(looking-16, people-13)
nsubj(find-20, people-13)
aux(looking-16, are-15)
rcmod(people-13, looking-16)
prep_for(looking-16, answers-18)
aux(find-20, will-19)
ccomp(found-11, find-20)
nsubj(support-23, things-21)
aux(support-23, to-22)
xcomp(find-20, support-23)
poss(belief-25, their-24)
dobj(support-23, belief-25)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (NN nothing))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ proves)
              (NP
                (NP (NN evolution))
                (ADJP (CD 100) (NN %))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nsubj(is-2, nothing-3)
nsubj(proves-5, nothing-3)
rcmod(nothing-3, proves-5)
dobj(proves-5, evolution-6)
number(%-8, 100-7)
amod(evolution-6, %-8)

(ROOT
  (S
    (S
      (INTJ (RB Sure))
      (NP (EX there))
      (VP (VBP are)
        (NP
          (NP (DT some) (JJ great) (NNS scientists))
          (CC and)
          (NP
            (NP (DT some)
              (ADJP (RB very) (JJ smart))
              (NNS people))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP have)
                  (VP (VBN made)
                    (NP (NNS claims))
                    (PP (VBN based)
                      (PP (IN on)
                        (NP (PRP$ their) (NN research))))))))))))
    (NP (DT that) (NN evolution))
    (VP (VBZ is)
      (ADJP (JJ real)))
    (. .)))

dep(are-3, Sure-1)
expl(are-3, there-2)
dep(is-22, are-3)
det(scientists-6, some-4)
amod(scientists-6, great-5)
nsubj(are-3, scientists-6)
det(people-11, some-8)
advmod(smart-10, very-9)
amod(people-11, smart-10)
nsubj(are-3, people-11)
conj_and(scientists-6, people-11)
nsubj(made-14, people-11)
aux(made-14, have-13)
rcmod(people-11, made-14)
dobj(made-14, claims-15)
prepc_based_on(made-14, on-17)
poss(research-19, their-18)
pobj(made-14, research-19)
det(evolution-21, that-20)
nsubj(is-22, evolution-21)
root(ROOT-0, is-22)
acomp(is-22, real-23)

(ROOT
  (S (CC But)
    (NP (DT this))
    (VP (VBZ is)
      (PP (IN like)
        (NP
          (NP (NN someone))
          (VP (VBG wanting)
            (NP (NN something)))))
      (ADVP
        (ADVP (RB so) (RB bad))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD will)
              (VP (VB go)
                (PP (TO to)
                  (NP (DT any) (NN length)
                    (S
                      (VP (TO to)
                        (VP (VB find)
                          (NP (NN evidence))
                          (S
                            (VP (TO to)
                              (VP (VB support)
                                (NP (PRP$ their) (NN belief))))))))))))))))
    (. .)))

cc(is-3, But-1)
nsubj(is-3, this-2)
root(ROOT-0, is-3)
prep_like(is-3, someone-5)
partmod(someone-5, wanting-6)
dobj(wanting-6, something-7)
advmod(bad-9, so-8)
advmod(is-3, bad-9)
dep(go-13, that-10)
nsubj(go-13, they-11)
aux(go-13, will-12)
ccomp(bad-9, go-13)
det(length-16, any-15)
prep_to(go-13, length-16)
aux(find-18, to-17)
infmod(length-16, find-18)
dobj(find-18, evidence-19)
aux(support-21, to-20)
xcomp(find-18, support-21)
poss(belief-23, their-22)
dobj(support-21, belief-23)

(ROOT
  (S
    (S
      (NP (NN Nobody))
      (VP (VBZ wants)
        (S
          (VP (TO to)
            (VP (VB prove)
              (S
                (NP (PRP themselves))
                (ADJP (JJ wrong))))))))
    (, ,) (IN so)
    (S
      (NP (FW i))
      (VP (VBP think)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN majority))
              (PP (IN of)
                (NP (NNS evolutionists))))
            (VP (MD will)
              (VP (VB search)
                (PP (IN for)
                  (NP (NNS things)))
                (S
                  (VP (TO to)
                    (VP (VB back)
                      (NP (PRP themselves))
                      (PRT (RP up)))))))))))
    (. .)))

nsubj(wants-2, Nobody-1)
xsubj(prove-4, Nobody-1)
root(ROOT-0, wants-2)
aux(prove-4, to-3)
xcomp(wants-2, prove-4)
nsubj(wrong-6, themselves-5)
xcomp(prove-4, wrong-6)
dep(wants-2, so-8)
nsubj(think-10, i-9)
ccomp(wants-2, think-10)
complm(search-17, that-11)
det(majority-13, the-12)
nsubj(search-17, majority-13)
xsubj(back-21, majority-13)
prep_of(majority-13, evolutionists-15)
aux(search-17, will-16)
ccomp(think-10, search-17)
prep_for(search-17, things-19)
aux(back-21, to-20)
xcomp(search-17, back-21)
dobj(back-21, themselves-22)
prt(back-21, up-23)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (ADJP (RB too) (JJ easy)
        (CC and)
        (JJ comfortable)))
    (. .)))

nsubj(easy-4, That-1)
nsubj(comfortable-6, That-1)
cop(easy-4, is-2)
advmod(easy-4, too-3)
root(ROOT-0, easy-4)
conj_and(easy-4, comfortable-6)

