(ROOT
  (S ('' '')
    (NP (DT The) (NN problem))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN word) (`` ``) (NN theory) ('' ''))
          (VP
            (VP (VBZ has)
              (NP (DT a) (JJ scientific) (NN definition)))
            (CC and)
            (VP ('' '')
              (NP (JJ intelligent) (NN design))))))
      ('' '')
      (S
        (VP (VBZ has)
          (ADVP (RB never))
          (VP (VBN provided)
            (NP
              (NP (DT any) (NN definition))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD would)
                    (VP (VB qualify)
                      (NP (PRP it))
                      (PP (IN as)
                        (NP (DT a) (`` ``) (JJ scientific) (NN theory) ('' ''))))))))))))
    (. .)))

det(problem-3, The-2)
nsubj(is-4, problem-3)
root(ROOT-0, is-4)
complm(has-11, that-5)
det(theory-9, the-6)
nn(theory-9, word-7)
nsubj(has-11, theory-9)
ccomp(is-4, has-11)
det(definition-14, a-12)
amod(definition-14, scientific-13)
dobj(has-11, definition-14)
amod(design-18, intelligent-17)
ccomp(is-4, design-18)
conj_and(has-11, design-18)
aux(provided-22, has-20)
neg(provided-22, never-21)
ccomp(is-4, provided-22)
det(definition-24, any-23)
dobj(provided-22, definition-24)
nsubj(qualify-27, definition-24)
aux(qualify-27, would-26)
rcmod(definition-24, qualify-27)
dobj(qualify-27, it-28)
det(theory-33, a-30)
amod(theory-33, scientific-32)
prep_as(qualify-27, theory-33)

