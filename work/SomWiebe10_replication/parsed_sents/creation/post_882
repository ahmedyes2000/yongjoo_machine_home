(ROOT
  (FRAG (`` ``)
    (INTJ (UH 1))
    (. .)))


(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (NNS is)
      (NP (DT the) (NN earth))
      (NP
        (NP (DT the) (JJ only) (NN planet))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ sustainable)
                (PP (IN for)
                  (NP (NN life) (NNS forms)))))))))
    (. ?)))

advmod(is-2, Why-1)
root(ROOT-0, is-2)
det(earth-4, the-3)
dep(is-2, earth-4)
det(planet-7, the-5)
amod(planet-7, only-6)
dep(is-2, planet-7)
nsubj(sustainable-10, planet-7)
cop(sustainable-10, is-9)
rcmod(planet-7, sustainable-10)
nn(forms-13, life-12)
prep_for(sustainable-10, forms-13)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH 3))
    (. .)))


(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN purpose))
        (PP (IN of)
          (NP
            (NP (NN life))
            (, ,)
            (VP (VBZ is)
              (NP (PRP it))
              (S
                (VP
                  (ADVP (RB just))
                  (VP (TO to)
                    (VP (VB be)))
                  (CC and)
                  (RB then)
                  (VP (RB not) (TO to)
                    (VP (VB be))))))))))
    (. ?)))

attr(is-2, What-1)
root(ROOT-0, is-2)
det(purpose-4, the-3)
nsubj(is-2, purpose-4)
prep_of(purpose-4, life-6)
cop(it-9, is-8)
dep(life-6, it-9)
advmod(be-12, just-10)
aux(be-12, to-11)
dep(it-9, be-12)
dep(it-9, then-14)
advmod(be-12, then-14)
conj_and(be-12, then-14)
neg(be-17, not-15)
aux(be-17, to-16)
dep(be-12, be-17)

(ROOT
  (S (`` ``)
    (PP (IN On)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NN basis))
          (VP (VBP do)))))
    (NP (PRP you))
    (VP (VBP assume)
      (SBAR (IN that)
        (S
          (NP (NN life))
          (VP (VBZ has)
            (NP (DT a) (NN purpose))))))
    (. ?)))

dep(assume-7, On-2)
dobj(do-5, what-3)
nsubj(do-5, basis-4)
pcomp(On-2, do-5)
nsubj(assume-7, you-6)
root(ROOT-0, assume-7)
complm(has-10, that-8)
nsubj(has-10, life-9)
ccomp(assume-7, has-10)
det(purpose-12, a-11)
dobj(has-10, purpose-12)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH 4))
    (. .)))


(ROOT
  (SQ (VBZ Is)
    (NP (DT this))
    (NP
      (NP (DT all))
      (SBAR
        (S
          (NP (EX there))
          (VP (VBZ is)
            (PP (IN in)
              (NP (NN life)))))))
    (. ?)))

root(ROOT-0, Is-1)
nsubj(Is-1, this-2)
attr(Is-1, all-3)
expl(is-5, there-4)
rcmod(all-3, is-5)
prep_in(is-5, life-7)

(ROOT
  (SQ
    (VP (VB Bummer) ('' '')
      (PP (IN In)
        (NP (WDT what) (NN way))))
    (. ?)))

root(ROOT-0, Bummer-1)
dep(way-5, what-4)
prep_in(Bummer-1, way-5)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (ADVP (RB so) (RB much))
      (NP (NN art) (, ,) (NN music) (, ,)
        (CC and)
        (NN science))
      (PP (IN in)
        (NP (DT this) (NN world)
          (S
            (VP (TO to)
              (VP (VB fill)
                (NP
                  (NP (NNS thousands))
                  (PP (IN of)
                    (NP (NNS lifetimes))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(much-4, so-3)
advmod(is-2, much-4)
nsubj(is-2, art-5)
nsubj(is-2, music-7)
conj_and(art-5, music-7)
nsubj(is-2, science-10)
conj_and(art-5, science-10)
det(world-13, this-12)
prep_in(is-2, world-13)
aux(fill-15, to-14)
infmod(world-13, fill-15)
dobj(fill-15, thousands-16)
prep_of(thousands-16, lifetimes-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (ADVP (RB also))
      (VP (VB be)
        (ADJP (JJ remiss)
          (PP (IN in)
            (S (RB not)
              (VP (VBG pointing)
                (PRT (RP out))
                (SBAR (IN that) (IN if)
                  (S
                    (NP (NN someone))
                    (VP (VBZ is)
                      (VP (VBN dissatisfied)
                        (PP (IN with)
                          (NP
                            (NP (PRP$ their) (NN life))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBZ does) (RB not)
                                  (ADVP (RB somehow))
                                  (VP (VB prove)
                                    (SBAR (IN that)
                                      (S
                                        (NP (EX there))
                                        (VP (VBZ is)
                                          (NP
                                            (NP (NN something))
                                            (SBAR
                                              (S (`` ``)
                                                (NP (RBR more))
                                                ('' '')
                                                (VP (VBZ \/) (`` ``)
                                                  (NP (CD 5)))))))))))))))))))))))))
    (. .)))

nsubj(remiss-5, I-1)
aux(remiss-5, 'd-2)
advmod(remiss-5, also-3)
cop(remiss-5, be-4)
root(ROOT-0, remiss-5)
neg(pointing-8, not-7)
prepc_in(remiss-5, pointing-8)
prt(pointing-8, out-9)
complm(dissatisfied-14, that-10)
dep(dissatisfied-14, if-11)
nsubjpass(dissatisfied-14, someone-12)
auxpass(dissatisfied-14, is-13)
ccomp(pointing-8, dissatisfied-14)
poss(life-17, their-16)
prep_with(dissatisfied-14, life-17)
nsubj(prove-22, life-17)
aux(prove-22, does-19)
neg(prove-22, not-20)
advmod(prove-22, somehow-21)
rcmod(life-17, prove-22)
complm(is-25, that-23)
expl(is-25, there-24)
ccomp(prove-22, is-25)
nsubj(is-25, something-26)
nsubj(\/-30, more-28)
rcmod(something-26, \/-30)
dobj(\/-30, 5-32)

(ROOT
  (FRAG
    (SBAR (IN Since)
      (S
        (NP (NNS people))
        (VP (VBP are) (RB all)
          (ADJP (RB so) (JJ different))
          (SBAR
            (WHADVP (WRB why))
            (S
              (VP (VBP arent)
                (S
                  (NP (PRP we))
                  (VP (VBG seeing)
                    (NP (NNS planets))
                    (PP (IN with)
                      (NP
                        (NP (JJ other) (NNS types))
                        (PP (IN of)
                          (NP (NN life) (NNS forms)))))))))))))
    (. ?)))

mark(different-6, Since-1)
nsubj(different-6, people-2)
cop(different-6, are-3)
advmod(different-6, all-4)
advmod(different-6, so-5)
root(ROOT-0, different-6)
advmod(arent-8, why-7)
advcl(different-6, arent-8)
nsubj(seeing-10, we-9)
dep(arent-8, seeing-10)
dobj(seeing-10, planets-11)
amod(types-14, other-13)
prep_with(seeing-10, types-14)
nn(forms-17, life-16)
prep_of(types-14, forms-17)

(ROOT
  (S (`` ``)
    (NP (DT This))
    (VP (VBZ does) (RB n't)
      (VP (VB make)
        (NP
          (NP (DT a) (JJ great) (NN deal))
          (PP (IN of)
            (NP (NN sense))))))
    (. .)))

nsubj(make-5, This-2)
aux(make-5, does-3)
neg(make-5, n't-4)
root(ROOT-0, make-5)
det(deal-8, a-6)
amod(deal-8, great-7)
dobj(make-5, deal-8)
prep_of(deal-8, sense-10)

(ROOT
  (S (`` ``)
    (ADVP (RB Well))
    (NP (DT the) (NN answer))
    (VP (VBZ is)
      (SBAR (IN that) (`` ``)
        (S
          (SBAR
            (ADVP (RB as) (RB far))
            (IN as)
            (S
              (NP (PRP we))
              (VP (VBP have)
                (VP (VBN observed)))))
          (NP (NNP Earth))
          (VP (VBZ is)
            (NP
              (NP (DT the) (JJ only) (NN planet))
              (PP (IN with)
                (NP (NN life))))))))
    (. .)))

advmod(is-5, Well-2)
det(answer-4, the-3)
nsubj(is-5, answer-4)
root(ROOT-0, is-5)
complm(planet-18, that-6)
advmod(far-9, as-8)
advmod(observed-13, far-9)
dep(observed-13, as-10)
nsubj(observed-13, we-11)
aux(observed-13, have-12)
advcl(planet-18, observed-13)
nsubj(planet-18, Earth-14)
cop(planet-18, is-15)
det(planet-18, the-16)
amod(planet-18, only-17)
ccomp(is-5, planet-18)
prep_with(planet-18, life-20)

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ Our) (NN exploration))
        (PP (IN of)
          (NP (DT the) (JJ solar) (NN system))))
      (VP (VBZ is)
        (ADJP (RB exceptionally) (JJ limited))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (PRP$ our) (NN exploration))
        (PP (IN beyond)
          (NP (PRP$ our) (JJ own) (JJ solar) (NN system))))
      (VP (VBZ is)
        (PP (IN at)
          (NP
            (NP (PRP it) (POS 's))
            (JJS earliest) (NNS stages)))))
    (. .)))

poss(exploration-2, Our-1)
nsubj(limited-9, exploration-2)
det(system-6, the-4)
amod(system-6, solar-5)
prep_of(exploration-2, system-6)
cop(limited-9, is-7)
advmod(limited-9, exceptionally-8)
root(ROOT-0, limited-9)
poss(exploration-13, our-12)
nsubj(is-19, exploration-13)
poss(system-18, our-15)
amod(system-18, own-16)
amod(system-18, solar-17)
prep_beyond(exploration-13, system-18)
conj_and(limited-9, is-19)
poss(stages-24, it-21)
amod(stages-24, earliest-23)
prep_at(is-19, stages-24)

(ROOT
  (S
    (ADVP (RB Right) (RB now))
    (NP (NNP Mars)
      (CC and)
      (NNP Europa))
    (VP (VBP are)
      (VP (VBN seen)
        (PP (IN as)
          (NP
            (NP (DT the)
              (ADJP (RBS most) (JJ likely))
              (NNS candidates))
            (PP (IN for)
              (S
                (VP (VBG harboring)
                  (NP (NN life)))))
            (PRN (-LRB- -LRB-)
              (NP
                (NP
                  (UCP (DT either)
                    (ADVP (RB now))
                    (CC or)
                    (PP (IN at)
                      (NP (DT some))))
                  (NN point))
                (PP (IN in)
                  (NP (DT the) (NN past))))
              (-RRB- -RRB-))))))
    (. .)))

advmod(now-2, Right-1)
advmod(seen-7, now-2)
nsubjpass(seen-7, Mars-3)
conj_and(Mars-3, Europa-5)
nsubjpass(seen-7, Europa-5)
auxpass(seen-7, are-6)
root(ROOT-0, seen-7)
det(candidates-12, the-9)
advmod(likely-11, most-10)
amod(candidates-12, likely-11)
prep_as(seen-7, candidates-12)
prepc_for(candidates-12, harboring-14)
dobj(harboring-14, life-15)
dep(point-22, either-17)
dep(either-17, now-18)
conj_or(either-17, at-20)
dep(point-22, at-20)
pobj(at-20, some-21)
dep(candidates-12, point-22)
det(past-25, the-24)
prep_in(point-22, past-25)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (RB almost) (JJ certain))
        (SBAR (IN that)
          (S
            (NP (NNP Mars))
            (VP (VBD had)
              (NP
                (NP (JJ liquid) (NN water))
                (PP (IN at)
                  (NP (DT some) (NN point)))))))))
    (, ,) (IN so)
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJ right) (NN temperature))
          (PP (IN for)
            (NP (NN life)))
          (S
            (VP (TO to)
              (VP (VB exist)))))))
    (. .)))

nsubj(certain-4, It-1)
cop(certain-4, is-2)
advmod(certain-4, almost-3)
root(ROOT-0, certain-4)
complm(had-7, that-5)
nsubj(had-7, Mars-6)
ccomp(certain-4, had-7)
amod(water-9, liquid-8)
dobj(had-7, water-9)
det(point-12, some-11)
prep_at(water-9, point-12)
dep(certain-4, so-14)
nsubj(temperature-19, it-15)
cop(temperature-19, was-16)
det(temperature-19, the-17)
amod(temperature-19, right-18)
ccomp(certain-4, temperature-19)
prep_for(temperature-19, life-21)
aux(exist-23, to-22)
infmod(temperature-19, exist-23)

(ROOT
  (S
    (S
      (NP (NNP Europa))
      (VP (VBZ is)
        (VP (VBN seen)
          (PP (IN as)
            (NP (DT a) (NN candidate)))
          (SBAR (IN because)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (VP (VBN believed)
                  (SBAR (IN that)
                    (S
                      (NP (EX there))
                      (VP (VBZ is)
                        (NP
                          (NP (DT a) (JJ liquid) (NN ocean))
                          (PP (IN under)
                            (NP
                              (NP (DT the) (NN ice))
                              (PRN (-LRB- -LRB-)
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (VP (MD would)
                                      (VP (VB provide)
                                        (NP (NN protection))
                                        (PP (IN against)
                                          (NP (NN radiation)))))))
                                (-RRB- -RRB-)))))))))))))))
    (, ,)
    (CC and)
    (S
      (PP
        (PP (IN from)
          (NP (PRP$ our) (JJ own) (NNS observations)))
        (PP
          (ADVP (RB here))
          (IN on)
          (NP (NN earth))))
      (NP (PRP we))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP (NN sunlight))
            (VP (VBZ is) (RB not)
              (VP (VBN needed)
                (PP (IN for)
                  (NP (NN life)))))))))
    (. .)))

nsubjpass(seen-3, Europa-1)
auxpass(seen-3, is-2)
root(ROOT-0, seen-3)
det(candidate-6, a-5)
prep_as(seen-3, candidate-6)
mark(believed-10, because-7)
nsubjpass(believed-10, it-8)
auxpass(believed-10, is-9)
advcl(seen-3, believed-10)
complm(is-13, that-11)
expl(is-13, there-12)
ccomp(believed-10, is-13)
det(ocean-16, a-14)
amod(ocean-16, liquid-15)
nsubj(is-13, ocean-16)
det(ice-19, the-18)
prep_under(ocean-16, ice-19)
nsubj(provide-23, which-21)
aux(provide-23, would-22)
dep(ice-19, provide-23)
dobj(provide-23, protection-24)
prep_against(provide-23, radiation-26)
poss(observations-33, our-31)
amod(observations-33, own-32)
prep_from(know-38, observations-33)
advmod(know-38, here-34)
prep_on(know-38, earth-36)
nsubj(know-38, we-37)
conj_and(seen-3, know-38)
complm(needed-43, that-39)
nsubjpass(needed-43, sunlight-40)
auxpass(needed-43, is-41)
neg(needed-43, not-42)
ccomp(know-38, needed-43)
prep_for(needed-43, life-45)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH 6))
    (. .)))


(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP
        (VP (VB explain)
          (NP
            (NP (JJ archeological) (NNS finds))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP validate)
                  (NP
                    (NP (NNP Hebrew) (NNP Biblical) (NNS writings))
                    (PP (VBG regarding)
                      (NP (NNP Gd) (, ,) (NNP Jesus)))))))))
        (, ,)
        (CC and)
        (ADVP (RB then))
        (VP (VB nullify)
          (NP (PRP it))
          (PP (IN in)
            (NP (DT the) (JJ same) (NN sentence))))))
    (. ?)))

advmod(explain-4, How-1)
aux(explain-4, do-2)
nsubj(explain-4, you-3)
nsubj(nullify-19, you-3)
root(ROOT-0, explain-4)
amod(finds-6, archeological-5)
dobj(explain-4, finds-6)
nsubj(validate-8, finds-6)
rcmod(finds-6, validate-8)
nn(writings-11, Hebrew-9)
nn(writings-11, Biblical-10)
dobj(validate-8, writings-11)
nn(Jesus-15, Gd-13)
prep_regarding(writings-11, Jesus-15)
advmod(explain-4, then-18)
conj_and(explain-4, then-18)
conj_and(explain-4, nullify-19)
dobj(nullify-19, it-20)
det(sentence-24, the-22)
amod(sentence-24, same-23)
prep_in(nullify-19, sentence-24)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WDT Which) (NN finds))
    (SQ (VBP are)
      (NP (DT those)))
    (. ?)))

det(finds-3, Which-2)
attr(are-4, finds-3)
root(ROOT-0, are-4)
nsubj(are-4, those-5)

(ROOT
  (S
    (NP (CD One) (NN bit)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ has)
            (ADVP (RB always))
            (VP (VBN stood)
              (PRT (RP out))
              (PP (TO to)
                (NP (PRP me))))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN fact))
        (SBAR
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NNS plagues))
                (CC and)
                (NP (DT the) (NNP Exodus)))
              (VP
                (VP (VBP are) (RB not)
                  (VP (VBN recorded)
                    (PP (IN in)
                      (NP (JJ Egyptian) (NN literature)))))
                (: ...)
                (CC or)
                (VP (VBP do)
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP think)
                        (SBAR (IN that)
                          (S
                            (NP (DT the) (NNP Egyptians))
                            (VP (VBD did) (RB not)
                              (VP (VB find)
                                (S
                                  (NP (PRP it))
                                  (ADJP (JJ memorable)))
                                (SBAR (IN that)
                                  (S
                                    (NP
                                      (NP (DT the) (JJS oldest) (NN son))
                                      (PP (IN in)
                                        (NP (DT every) (NN family))))
                                    (VP (VBD was)
                                      (VP (VBN killed)
                                        (PP (IN in)
                                          (NP (CD one)))
                                        (NP (NN night)))))))))))))))))
          (CC and)
          (SBAR (IN that)
            (S
              (NP (PRP$ their) (JJ entire) (NN army))
              (VP (VBD was)
                (VP (VBN drowned)
                  (PP (IN under)
                    (NP (DT the) (NNP Red) (NNP Sea))))))))))
    (. ?)))

num(bit-2, One-1)
nsubj(fact-12, bit-2)
nsubj(stood-6, that-3)
aux(stood-6, has-4)
advmod(stood-6, always-5)
ccomp(bit-2, stood-6)
prt(stood-6, out-7)
prep_to(stood-6, me-9)
cop(fact-12, is-10)
det(fact-12, the-11)
root(ROOT-0, fact-12)
dep(recorded-21, that-13)
det(plagues-15, the-14)
nsubjpass(recorded-21, plagues-15)
nsubj(do-27, plagues-15)
det(Exodus-18, the-17)
conj_and(plagues-15, Exodus-18)
nsubjpass(recorded-21, Exodus-18)
auxpass(recorded-21, are-19)
neg(recorded-21, not-20)
dep(fact-12, recorded-21)
amod(literature-24, Egyptian-23)
prep_in(recorded-21, literature-24)
dep(fact-12, do-27)
conj_or(recorded-21, do-27)
nsubj(think-29, you-28)
ccomp(do-27, think-29)
complm(find-35, that-30)
det(Egyptians-32, the-31)
nsubj(find-35, Egyptians-32)
aux(find-35, did-33)
neg(find-35, not-34)
ccomp(think-29, find-35)
nsubj(memorable-37, it-36)
xcomp(find-35, memorable-37)
complm(killed-46, that-38)
det(son-41, the-39)
amod(son-41, oldest-40)
nsubjpass(killed-46, son-41)
det(family-44, every-43)
prep_in(son-41, family-44)
auxpass(killed-46, was-45)
ccomp(find-35, killed-46)
prep_in(killed-46, one-48)
tmod(killed-46, night-49)
dep(drowned-56, that-51)
poss(army-54, their-52)
amod(army-54, entire-53)
nsubjpass(drowned-56, army-54)
auxpass(drowned-56, was-55)
dep(fact-12, drowned-56)
conj_and(recorded-21, drowned-56)
det(Sea-60, the-58)
nn(Sea-60, Red-59)
prep_under(drowned-56, Sea-60)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH 7))
    (. .)))


(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (S
            (NP (DT the) (NNP Bible))
            (VP (VBZ is)
              (ADJP (JJ correct))))
          (CC and)
          (S
            (NP (CD one) (NN day))
            (VP (VBZ is)
              (SBAR (IN as)
                (S
                  (NP
                    (NP (DT a) (CD thousand))
                    (PP (TO to)
                      (NP (NNP Gd))))
                  (VP (VBZ is)
                    (ADJP
                      (NP (PRP it))
                      (JJ possible))
                    (SBAR (IN that)
                      (S
                        (NP (NN earth))
                        (VP (VBD was)
                          (VP (VBN formed)
                            (PRT (RP in))
                            (PP (IN over)
                              (NP
                                (NP
                                  (NP (DT a) (NN period))
                                  (PP (IN of)
                                    (NP (CD 6,000) (NNS years))))
                                (CC or)
                                (NP
                                  (NP (CD 6) (NNS days))
                                  (PP (IN in)
                                    (NP (NN heaven))))))
                            (: ...)
                            (SBAR (IN because) (IN as)
                              (S
                                (NP (PRP you))
                                (VP (VBP know)
                                  (PP
                                    (ADVP (DT the) (RB farther) (RB away))
                                    (IN from)
                                    (NP (NN earth)))))))))))))))))
      (NP (PRP you))
      (VP (VBP get)
        (SBAR
          (S
            (NP (DT the) (JJR shorter) (NN time))
            (VP (VBZ is))))))
    (: ...)
    (S
      (NP (PRP you))
      (VP (VBD did)
        (VP (VB know)
          (NP (DT that) (NN right)))))
    (. ?)))

mark(correct-5, If-1)
det(Bible-3, the-2)
nsubj(correct-5, Bible-3)
cop(correct-5, is-4)
advcl(get-45, correct-5)
num(day-8, one-7)
nsubj(is-9, day-8)
conj_and(correct-5, is-9)
advcl(get-45, is-9)
mark(possible-17, as-10)
det(thousand-12, a-11)
nsubj(possible-17, thousand-12)
prep_to(thousand-12, Gd-14)
cop(possible-17, is-15)
npadvmod(possible-17, it-16)
advcl(is-9, possible-17)
complm(formed-21, that-18)
nsubjpass(formed-21, earth-19)
auxpass(formed-21, was-20)
ccomp(possible-17, formed-21)
prt(formed-21, in-22)
det(period-25, a-24)
prep_over(formed-21, period-25)
num(years-28, 6,000-27)
prep_of(period-25, years-28)
num(days-31, 6-30)
prep_over(formed-21, days-31)
conj_or(period-25, days-31)
prep_in(days-31, heaven-33)
mark(know-38, because-35)
dep(know-38, as-36)
nsubj(know-38, you-37)
advcl(formed-21, know-38)
parataxis(formed-21, know-38)
dep(know-38, the-39)
advmod(know-38, farther-40)
prep_away_from(know-38, earth-43)
nsubj(get-45, you-44)
root(ROOT-0, get-45)
det(time-48, the-46)
amod(time-48, shorter-47)
nsubj(is-49, time-48)
ccomp(get-45, is-49)
nsubj(know-53, you-51)
aux(know-53, did-52)
parataxis(get-45, know-53)
det(right-55, that-54)
dobj(know-53, right-55)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (RB quite) (JJ possible))
        (SBAR (IN that)
          (S
            (NP (NN life))
            (VP (VBD existed)
              (PP (IN on)
                (NP (NNP Mars)))
              (PP (IN at)
                (NP
                  (NP (DT some) (NN point))
                  (PP (IN in)
                    (NP (DT the) (NN past))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB also))
        (ADJP (JJ possible))
        (SBAR (IN that)
          (S
            (NP (NN life))
            (VP (VBZ exists)
              (PP (IN on)
                (NP (DT the) (JJ Jovian) (NN moon) (NN Europa))))))))
    (. .)))

nsubj(possible-4, It-1)
cop(possible-4, is-2)
advmod(possible-4, quite-3)
root(ROOT-0, possible-4)
complm(existed-7, that-5)
nsubj(existed-7, life-6)
ccomp(possible-4, existed-7)
prep_on(existed-7, Mars-9)
det(point-12, some-11)
prep_at(existed-7, point-12)
det(past-15, the-14)
prep_in(point-12, past-15)
nsubj(possible-21, it-18)
cop(possible-21, is-19)
advmod(possible-21, also-20)
conj_and(possible-4, possible-21)
complm(exists-24, that-22)
nsubj(exists-24, life-23)
ccomp(possible-21, exists-24)
det(Europa-29, the-26)
amod(Europa-29, Jovian-27)
nn(Europa-29, moon-28)
prep_on(exists-24, Europa-29)

(ROOT
  (FRAG
    (ADVP (`` ``) (RB Not)
      (ADVP (RB quite) (JJ sure)))
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG getting)
            (PP (IN at)
              (NP (RB here)))))))
    (. .)))

dep(sure-4, Not-2)
advmod(sure-4, quite-3)
root(ROOT-0, sure-4)
dobj(getting-8, what-5)
nsubj(getting-8, you-6)
aux(getting-8, are-7)
dep(sure-4, getting-8)
prep(getting-8, at-9)
pobj(at-9, here-10)

(ROOT
  (S
    (ADVP (RB Yes))
    (NP (NN time))
    (VP (VBZ does)
      (NP
        (NP (NN travel))
        (ADJP (RB slightly) (JJR slower)))
      (PP (IN on)
        (NP (NN earth)))
      (NP
        (NP (RB then))
        (PP (IN in)
          (NP (NN orbit))))
      (PRN (-LRB- -LRB-)
        (S
          (NP (DT the) (NN difference))
          (VP (VBZ is)
            (ADJP (RB so) (JJ small))
            (SBAR (IN that)
              (S
                (ADVP (RB only))
                (NP (DT the)
                  (ADJP (RBS most) (JJ accurate))
                  (NNS clocks))
                (VP (MD can)
                  (VP (VB detect)
                    (NP (PRP it))))))))
        (-RRB- -RRB-))
      (PP (JJ due) (TO to)
        (NP (NNP Gravitational) (NNP Time) (NNP Dilation))))
    (. .)))

advmod(does-3, Yes-1)
nsubj(does-3, time-2)
root(ROOT-0, does-3)
dobj(does-3, travel-4)
advmod(slower-6, slightly-5)
amod(travel-4, slower-6)
prep_on(does-3, earth-8)
dobj(does-3, then-9)
prep_in(then-9, orbit-11)
det(difference-14, the-13)
nsubj(small-17, difference-14)
cop(small-17, is-15)
advmod(small-17, so-16)
parataxis(does-3, small-17)
complm(detect-25, that-18)
advmod(detect-25, only-19)
det(clocks-23, the-20)
advmod(accurate-22, most-21)
amod(clocks-23, accurate-22)
nsubj(detect-25, clocks-23)
aux(detect-25, can-24)
ccomp(small-17, detect-25)
dobj(detect-25, it-26)
nn(Dilation-32, Gravitational-30)
nn(Dilation-32, Time-31)
prep_due_to(does-3, Dilation-32)

(ROOT
  (S (CC But)
    (NP (DT that) (NN effect))
    (VP (VBZ is)
      (ADJP (RB very) (JJ small)))
    (. .)))

cc(small-6, But-1)
det(effect-3, that-2)
nsubj(small-6, effect-3)
cop(small-6, is-4)
advmod(small-6, very-5)
root(ROOT-0, small-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NN difference))
      (PP (IN in)
        (NP
          (NP (NN time))
          (PP (IN between)
            (NP
              (NP
                (NP (NN someone) (NN standing))
                (PP (IN on)
                  (NP (NNP Earth))))
              (CC and)
              (NP
                (NP (NN someone) (NN outside))
                (PP (IN of)
                  (NP (DT the) (JJ solar) (NN system)))))))))
    (VP (VBZ is)
      (ADVP (RB only))
      (ADJP (RB slightly) (JJR greater)))
    (. .)))

det(difference-2, The-1)
nsubj(greater-20, difference-2)
prep_in(difference-2, time-4)
nn(standing-7, someone-6)
prep_between(time-4, standing-7)
prep_on(standing-7, Earth-9)
nn(outside-12, someone-11)
prep_between(time-4, outside-12)
conj_and(standing-7, outside-12)
det(system-16, the-14)
amod(system-16, solar-15)
prep_of(outside-12, system-16)
cop(greater-20, is-17)
advmod(greater-20, only-18)
advmod(greater-20, slightly-19)
root(ROOT-0, greater-20)

(ROOT
  (S
    (NP (DT This) (NN effect))
    (VP (`` ``) (VBZ flattens)
      (PRT (RP out))
      ('' '')
      (NP
        (NP (DT the) (JJ further))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP get)
              (PRT (RP away))
              (PP (IN from)
                (NP (NN earth)))
              (: ...)
              (SBAR (IN so)
                (S
                  (NP
                    (NP (NN someone))
                    (PP (IN at)
                      (NP
                        (NP (DT the)
                          (ADJP (CD 5) (JJ light) (NN year))
                          (NN mark))
                        (CC and)
                        (NP
                          (NP (NN someone))
                          (PP (IN at)
                            (NP (DT the) (CD 10) (NN light) (NN year) (NN mark)))))))
                  (VP (MD would) (RB not)
                    (VP (VB be)
                      (ADJP (JJ able)
                        (S
                          (VP (TO to)
                            (VP (VB detect)
                              (NP
                                (NP (DT a) (NN difference))
                                (PP (IN in)
                                  (NP (PRP$ their) (NNS measurements))))
                              (PP (JJ due) (TO to)
                                (NP
                                  (NP (DT the) (NN presence))
                                  (PP (IN of)
                                    (NP (NNP Earth))))))))))))))))))
    (. .)))

det(effect-2, This-1)
nsubj(flattens-4, effect-2)
root(ROOT-0, flattens-4)
prt(flattens-4, out-5)
det(further-8, the-7)
dobj(flattens-4, further-8)
nsubj(get-10, you-9)
rcmod(further-8, get-10)
prep_away_from(get-10, earth-13)
mark(able-34, so-15)
nsubj(able-34, someone-16)
det(mark-22, the-18)
number(year-21, 5-19)
dep(year-21, light-20)
amod(mark-22, year-21)
prep_at(someone-16, mark-22)
prep_at(someone-16, someone-24)
conj_and(mark-22, someone-24)
det(mark-30, the-26)
num(mark-30, 10-27)
nn(mark-30, light-28)
nn(mark-30, year-29)
prep_at(someone-24, mark-30)
aux(able-34, would-31)
neg(able-34, not-32)
cop(able-34, be-33)
advcl(get-10, able-34)
parataxis(get-10, able-34)
aux(detect-36, to-35)
xcomp(able-34, detect-36)
det(difference-38, a-37)
dobj(detect-36, difference-38)
poss(measurements-41, their-40)
prep_in(difference-38, measurements-41)
det(presence-45, the-44)
prep_due_to(detect-36, presence-45)
prep_of(presence-45, Earth-47)

(ROOT
  (S (RB Then)
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT the) (NN evidence))
      (SBAR (IN that)
        (S
          (NP (DT the) (NN Earth))
          (VP (VBD took)
            (ADVP (RBR more) (RB then))
            (NP
              (QP (CD six) (CD thousand))
              (NNS years))
            (S
              (VP (TO to)
                (VP (VB form))))))))
    (. ...)))

advmod(is-3, Then-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
det(evidence-5, the-4)
nsubj(is-3, evidence-5)
complm(took-9, that-6)
det(Earth-8, the-7)
nsubj(took-9, Earth-8)
ccomp(is-3, took-9)
advmod(then-11, more-10)
advmod(took-9, then-11)
number(thousand-13, six-12)
num(years-14, thousand-13)
tmod(took-9, years-14)
aux(form-16, to-15)
xcomp(took-9, form-16)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP
          (NP
            (QP (CC or)
              (CD exploration)))
          (PP (IN of)
            (NP
              (NP (JJ other) (NNS planets))
              (PP (IN in)
                (NP (DT the) (JJ solar) (NN system))))))
        (VP (VBZ has)
          (VP (VBN been)
            (ADJP (RB quite) (JJ limited))))))
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB far) (TO to) (RB early))
      (PP (TO to)
        (NP (NN discount))))
    (. .)))

mark(limited-14, Since-1)
cc(exploration-3, or-2)
nsubj(limited-14, exploration-3)
amod(planets-6, other-5)
prep_of(exploration-3, planets-6)
det(system-10, the-8)
amod(system-10, solar-9)
prep_in(planets-6, system-10)
aux(limited-14, has-11)
cop(limited-14, been-12)
advmod(limited-14, quite-13)
advcl(is-16, limited-14)
nsubj(is-16, it-15)
root(ROOT-0, is-16)
advmod(early-19, far-17)
dep(early-19, to-18)
advmod(is-16, early-19)
prep_to(is-16, discount-21)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP
          (NP (NN life))
          (ADVP (IN outside))
          (PP (IN of)
            (NP (DT the) (NNP Solar) (NN system)))
          (, ,)
          (CC or)
          (NP (NN exploration)))))
    (NP (EX there))
    (VP (VBZ is)
      (ADJP (RB vastly) (VBN limited))
      (PRN (-LRB- -LRB-)
        (S
          (NP (PRP we))
          (VP (VBP have)
            (ADVP (RB only))
            (VP (VBN been)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB detect)
                      (NP (NNS planets))
                      (PP (IN around)
                        (NP
                          (NP (JJ other) (NNS stars))
                          (PP (IN for)
                            (NP
                              (NP (DT a) (JJ short) (NN period))
                              (PP (IN of)
                                (NP (NN time))))))))))))))
        (-RRB- -RRB-)))
    (. .)))

prepc_as_for(is-13, for-2)
pobj(is-13, life-3)
det(system-8, the-6)
nn(system-8, Solar-7)
prep_outside_of(life-3, system-8)
conj_or(life-3, exploration-11)
pobj(is-13, exploration-11)
expl(is-13, there-12)
root(ROOT-0, is-13)
advmod(limited-15, vastly-14)
acomp(is-13, limited-15)
nsubj(able-21, we-17)
aux(able-21, have-18)
advmod(able-21, only-19)
cop(able-21, been-20)
parataxis(is-13, able-21)
aux(detect-23, to-22)
xcomp(able-21, detect-23)
dobj(detect-23, planets-24)
amod(stars-27, other-26)
prep_around(detect-23, stars-27)
det(period-31, a-29)
amod(period-31, short-30)
prep_for(stars-27, period-31)
prep_of(period-31, time-33)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH 2))
    (. .)))


(ROOT
  (SINV
    (VP (VBG Assuming)
      (NP (PRP you)))
    (VP (VBP believe)
      (PP (IN in)
        (NP (DT the) (JJ big) (NN bang))))
    (NP
      (NP (NN theory))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBD caused)
            (NP (DT the) (JJ big) (NN bang))
            (S
              (VP (TO to)
                (VP (VB occur))))))))
    (. ?)))

root(ROOT-0, Assuming-1)
dobj(Assuming-1, you-2)
dep(Assuming-1, believe-3)
det(bang-7, the-5)
amod(bang-7, big-6)
prep_in(believe-3, bang-7)
nsubj(Assuming-1, theory-8)
nsubj(caused-11, theory-8)
rcmod(theory-8, caused-11)
det(bang-14, the-12)
amod(bang-14, big-13)
dobj(caused-11, bang-14)
aux(occur-16, to-15)
xcomp(caused-11, occur-16)

(ROOT
  (S (`` ``)
    (NP (PRP We))
    (VP (VBP do) (RB n't)
      (S
        (VP (VB know) (: ...)
          (ADVP (RB yet)))))
    (. .)))

nsubj(do-3, We-2)
root(ROOT-0, do-3)
neg(do-3, n't-4)
ccomp(do-3, know-5)
advmod(know-5, yet-7)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ exact) (NNS causes))
      (PP (IN of)
        (NP (DT the) (JJ big) (NN bang))))
    (VP (VBZ is)
      (ADVP (RB currently))
      (NP
        (NP (DT an) (NN area))
        (PP (IN of)
          (NP
            (NP (JJ great) (NN interest))
            (PP (TO to)
              (NP
                (NP (NNS Scientists))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP study)
                      (NP (PRP it)))))))))))
    (. .)))

det(causes-3, The-1)
amod(causes-3, exact-2)
nsubj(area-11, causes-3)
det(bang-7, the-5)
amod(bang-7, big-6)
prep_of(causes-3, bang-7)
cop(area-11, is-8)
advmod(area-11, currently-9)
det(area-11, an-10)
root(ROOT-0, area-11)
amod(interest-14, great-13)
prep_of(area-11, interest-14)
prep_to(interest-14, Scientists-16)
nsubj(study-18, Scientists-16)
rcmod(Scientists-16, study-18)
dobj(study-18, it-19)

