(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (NN evolution))
              (VP (VBZ has)
                (VP (VBN been)
                  (VP
                    (ADVP (RB scientifically))
                    (VBN proved)))))))))
    (VP (MD would)
      (VP (VB require)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VB be)
              (VP
                (ADVP (RB first))
                (VBN studied)
                (NP
                  (ADJP (RB then) (VBN determined))
                  (NNS scientifically))))))))
    (. .)))

aux(say-2, To-1)
csubj(require-10, say-2)
complm(proved-8, that-3)
nsubjpass(proved-8, evolution-4)
aux(proved-8, has-5)
auxpass(proved-8, been-6)
advmod(proved-8, scientifically-7)
ccomp(say-2, proved-8)
aux(require-10, would-9)
root(ROOT-0, require-10)
complm(studied-15, that-11)
nsubjpass(studied-15, it-12)
auxpass(studied-15, be-13)
advmod(studied-15, first-14)
ccomp(require-10, studied-15)
advmod(determined-17, then-16)
amod(scientifically-18, determined-17)
dobj(studied-15, scientifically-18)

(ROOT
  (S
    (S
      (S
        (VP (TO To)
          (VP (VB do)
            (ADVP (RB so)))))
      (VP (MD would)
        (VP (VB require)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN question))
              (VP (VB be)
                (VP (VBN analyzed)
                  (PP (IN for)
                    (NP (PRP$ its) (JJ scientific) (NNS qualities))))))))))
    (: ;)
    (S
      (NP
        (NP (DT those) (JJ true))
        (CC and)
        (NP (DT those)))
      (ADJP (JJ false)))
    (. .)))

aux(do-2, To-1)
csubj(require-5, do-2)
advmod(do-2, so-3)
aux(require-5, would-4)
root(ROOT-0, require-5)
complm(analyzed-10, that-6)
det(question-8, the-7)
nsubjpass(analyzed-10, question-8)
auxpass(analyzed-10, be-9)
ccomp(require-5, analyzed-10)
poss(qualities-14, its-12)
amod(qualities-14, scientific-13)
prep_for(analyzed-10, qualities-14)
det(true-17, those-16)
dep(false-20, true-17)
conj_and(true-17, those-19)
dep(false-20, those-19)
parataxis(require-5, false-20)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBD said) (, ,)
        (SBAR
          (SBAR
            (S
              (NP (DT a) (NNS hypothesis))
              (VP (MD may)
                (VP (VB be)
                  (VP
                    (VP (VBN accepted))
                    (, ,)
                    (CC but)
                    (VP
                      (ADVP (RB not) (RB scientifically))))))))
          (, ,)
          (CC but)
          (SBAR (IN for)
            (S
              (NP (DT all) (NNS intents)
                (CC and)
                (NNS purposes))
              (VP (MD may)
                (VP (VB be)
                  (VP (VBN treated)
                    (PP (IN as)
                      (NP (JJ absolute) (NN truth)))))))))
        (, ,)
        (S
          (VP (VBG baring)
            (NP (DT any) (NN contrary) (NN evidence))))))
    (: ;)
    (S
      (NP
        (ADJP (RB as) (JJ occums))
        (NN razor))
      (VP (MD would)
        (VP (VB point)
          (PRT (RP out))
          (NP
            (NP
              (NP (DT the) (JJS simplest) (NNS hypothesis))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ explains)
                    (SBAR
                      (S
                        (NP (DT the) (NN phenomenon))
                        (VP (VBZ is)
                          (NP (DT the) (JJS most))
                          (ADJP (JJ likely)))))))))
            (PRN (, ,)
              (ADVP (RB again))
              (ADJP (VBG baring)))
            (NP (DT any) (NN contrary) (NN evidence))))))
    (. .)))

nsubj(said-2, That-1)
root(ROOT-0, said-2)
det(hypothesis-5, a-4)
nsubjpass(accepted-8, hypothesis-5)
aux(accepted-8, may-6)
auxpass(accepted-8, be-7)
dep(said-2, accepted-8)
dep(scientifically-12, not-11)
dep(said-2, scientifically-12)
conj_but(accepted-8, scientifically-12)
mark(treated-22, for-15)
det(intents-17, all-16)
nsubjpass(treated-22, intents-17)
conj_and(intents-17, purposes-19)
nsubjpass(treated-22, purposes-19)
aux(treated-22, may-20)
auxpass(treated-22, be-21)
dep(said-2, treated-22)
conj_but(accepted-8, treated-22)
amod(truth-25, absolute-24)
prep_as(treated-22, truth-25)
xcomp(said-2, baring-27)
det(evidence-30, any-28)
nn(evidence-30, contrary-29)
dobj(baring-27, evidence-30)
advmod(occums-33, as-32)
amod(razor-34, occums-33)
nsubj(point-36, razor-34)
aux(point-36, would-35)
parataxis(said-2, point-36)
prt(point-36, out-37)
det(hypothesis-40, the-38)
amod(hypothesis-40, simplest-39)
dobj(point-36, hypothesis-40)
iobj(point-36, hypothesis-40)
nsubj(explains-42, hypothesis-40)
rcmod(hypothesis-40, explains-42)
det(phenomenon-44, the-43)
nsubj(likely-48, phenomenon-44)
cop(likely-48, is-45)
det(most-47, the-46)
attr(likely-48, most-47)
ccomp(explains-42, likely-48)
dep(baring-51, again-50)
dep(hypothesis-40, baring-51)
det(evidence-54, any-52)
nn(evidence-54, contrary-53)
dep(hypothesis-40, evidence-54)

(ROOT
  (S
    (S (CC But)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT that) (NN evidence))
          (VP (MD can) (RB not)
            (VP (VB be)
              (VP (VBN explored)
                (PP (IN by)
                  (NP
                    (NP (JJ conventional) (NNS methods))
                    (PP (IN of)
                      (NP (NN observation) (NN ie)))))
                (: :)
                (PP (IN through)
                  (NP
                    (NP (DT the) (NNS senses))
                    (VP
                      (ADVP (RB directly)
                        (CC or)
                        (RB indirectly))
                      (VBG relating)
                      (PP (TO to)
                        (NP (DT the) (JJ physical)
                          (CC and)
                          (JJ tangible) (NN world)))))))))))
      (, ,)
      (NP (RB then) (PDT such) (DT a) (NN theory))
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP
            (ADVP (RB honestly)
              (CC and)
              (RB objectively))
            (VBN analyzed)
            (CC or)
            (VBN compared)
            (PP (TO to)
              (NP
                (NP (DT the) (NNS princeps))
                (PP (IN of)
                  (NP
                    (NP (PRP$ our) (NN understanding))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN world))
                        (CC and)
                        (NP (PRP$ its) (NN phenomenon))))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (VP (VBN detached)
          (PP (IN from)
            (NP (PRP them))))))
    (. .)))

advmod(explored-8, when-2)
det(evidence-4, that-3)
nsubjpass(explored-8, evidence-4)
aux(explored-8, can-5)
neg(explored-8, not-6)
auxpass(explored-8, be-7)
advcl(analyzed-40, explored-8)
amod(methods-11, conventional-10)
agent(explored-8, methods-11)
nn(ie-14, observation-13)
prep_of(methods-11, ie-14)
det(senses-18, the-17)
prep_through(explored-8, senses-18)
advmod(relating-22, directly-19)
conj_or(directly-19, indirectly-21)
advmod(relating-22, indirectly-21)
partmod(senses-18, relating-22)
det(world-28, the-24)
amod(world-28, physical-25)
conj_and(physical-25, tangible-27)
amod(world-28, tangible-27)
prep_to(relating-22, world-28)
advmod(theory-33, then-30)
predet(theory-33, such-31)
det(theory-33, a-32)
nsubjpass(analyzed-40, theory-33)
nsubjpass(compared-42, theory-33)
aux(analyzed-40, can-34)
neg(analyzed-40, not-35)
auxpass(analyzed-40, be-36)
advmod(analyzed-40, honestly-37)
conj_and(honestly-37, objectively-39)
advmod(analyzed-40, objectively-39)
root(ROOT-0, analyzed-40)
conj_or(analyzed-40, compared-42)
det(princeps-45, the-44)
prep_to(analyzed-40, princeps-45)
poss(understanding-48, our-47)
prep_of(princeps-45, understanding-48)
det(world-51, the-50)
prep_of(understanding-48, world-51)
poss(phenomenon-54, its-53)
prep_of(understanding-48, phenomenon-54)
conj_and(world-51, phenomenon-54)
nsubjpass(detached-58, it-56)
auxpass(detached-58, is-57)
parataxis(analyzed-40, detached-58)
prep_from(detached-58, them-60)

(ROOT
  (S
    (S
      (ADVP (RB Surely))
      (NP (PDT such) (DT a) (NN word))
      (VP (VBZ is)
        (ADVP
          (NP (DT a) (NN word))
          (RB apart))
        (PP (IN from)
          (NP
            (NP (JJ other) (NNS words))
            (PP (IN in)
              (NP
                (NP (DT the) (NN world))
                (PP (IN of)
                  (NP (NNS words)))))))
        (SBAR
          (S
            (NP (PDT such) (DT a) (NN word))
            (VP (VBZ is)
              (ADJP (JJ subject)
                (PP (TO to)
                  (NP (NN suspicion)
                    (CC and)
                    (NN castigation))))
              (PP (IN for)
                (S
                  (VP (VBG being)
                    (SBAR (IN as)
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (NP
                            (NP (DT a) (NN word))
                            (PP (RB not) (IN of)
                              (NP (DT the) (JJ other) (NNS words)))))))))))))))
    (CC but)
    (S
      (NP
        (NP (DT another) (NN word))
        (PP (IN of)
          (NP
            (NP (DT that))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (MD can) (RB not)
                  (VP (VB be)
                    (VP (VBN known)
                      (PP (IN by)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (JJ other) (NNS words))
                            (VP (VBP are)
                              (VP (VBN known)
                                (ADVP (RB knowingly))
                                (SBAR
                                  (S
                                    (NP (PRP it))
                                    (VP (VBZ is)
                                      (VP (VBN known)
                                        (SBAR (IN that)
                                          (S
                                            (NP (WDT what))
                                            (VP (MD can) (RB not)
                                              (VP (VB be)
                                                (VP (VBN known)))))))))))))))))))))))
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP (VB be)
            (VP (VBN said)
              (SBAR (IN while)
                (S
                  (S
                    (VP (VBG being)
                      (VP (VBN said)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN known)
                                (PP (IN for)
                                  (NP
                                    (NP (DT that))
                                    (SBAR
                                      (WHNP (WDT which))
                                      (S
                                        (VP (VBZ is)
                                          (VP (VBN known)
                                            (S
                                              (VP (TO to)
                                                (VP (VB be)
                                                  (VP (VBN known))))))))))))))))))
                  (VP (VBD was)
                    (ADVP (RB already))
                    (VP (VBN said)
                      (PRN (, ,)
                        (CC or)
                        (VP (VBD implied) (, ,)
                          (S
                            (NP (DT the) (NN implication))
                            (VP (VBG being)
                              (SBAR (IN that)
                                (S
                                  (NP
                                    (NP (DT the) (NN knowledge))
                                    (PP (IN of)
                                      (NP
                                        (NP (DT the) (NN tree))
                                        (PP (IN of)
                                          (NP
                                            (NP (NN knowledge))
                                            (PP (IN of)
                                              (ADJP (JJ good)
                                                (CC and)
                                                (JJ evil)))))
                                        (SBAR (IN as)
                                          (S
                                            (NP (PRP it))
                                            (VP (VBD was)
                                              (VP
                                                (VP (VBN written)
                                                  (PP (IN by)
                                                    (NP
                                                      (NP (DT the) (NN word))
                                                      (PP (IN in)
                                                        (NP (NNS words))))))
                                                (CC and)
                                                (VP (VBN communicated)
                                                  (ADVP (RB thusly))
                                                  (: ;)
                                                  (PP (IN by)
                                                    (NP (NNS words)))))))))))
                                  (, ,)
                                  (VP (MD can) (RB not)
                                    (VP (VB be)
                                      (VP (VBN known)
                                        (PP (IN by)
                                          (NP (DT the) (JJ same) (NN token)))
                                        (, ,)
                                        (SBAR (IN for)
                                          (S
                                            (NP (DT the) (JJ token))
                                            (VP (VBZ has)
                                              (NP
                                                (NP (CD two) (NNS sides))
                                                (, ,)
                                                (NP
                                                  (NP (DT each) (NN side) (NN opposite))
                                                  (NP (DT the) (JJ other)))
                                                (, ,)
                                                (CC and)
                                                (NP
                                                  (NP (DT each) (NN side))
                                                  (VP (VBG opposing)
                                                    (NP
                                                      (NP (DT the) (NN direction))
                                                      (PP (IN of)
                                                        (NP (DT the) (JJ other))))
                                                    (, ,)
                                                    (PP (IN without)
                                                      (S
                                                        (NP (DT either) (NN side))
                                                        (VP
                                                          (VP (VBG facing)
                                                            (NP (DT the) (JJ other)))
                                                          (, ,)
                                                          (CONJP (CC but)
                                                            (RB rather))
                                                          (VP (VBG facing)
                                                            (PRT (RP away))))))))))))))))))))
                        (, ,))
                      (SBAR (IN as)
                        (S
                          (NP (PRP it))
                          (VP (VBZ is)
                            (SBAR
                              (WHADVP (WRB when))
                              (S
                                (NP (CD two) (NNS sides))
                                (VP
                                  (VP (VBP face)
                                    (ADVP (RB away))
                                    (PP (IN from)
                                      (NP (CD one) (DT another))))
                                  (CC but)
                                  (VP (VBP do) (RB not)
                                    (VP (VB look)
                                      (PP (IN at)
                                        (NP (DT each) (JJ other)))
                                      (ADVP (RB directly)))))))))))))))))))
    (. .)))

advmod(is-5, Surely-1)
predet(word-4, such-2)
det(word-4, a-3)
nsubj(is-5, word-4)
root(ROOT-0, is-5)
det(word-7, a-6)
npadvmod(is-5, word-7)
amod(words-11, other-10)
prep_apart_from(is-5, words-11)
det(world-14, the-13)
prep_in(words-11, world-14)
prep_of(world-14, words-16)
predet(word-19, such-17)
det(word-19, a-18)
nsubj(subject-21, word-19)
cop(subject-21, is-20)
ccomp(is-5, subject-21)
prep_to(subject-21, suspicion-23)
prep_to(subject-21, castigation-25)
conj_and(suspicion-23, castigation-25)
prepc_for(subject-21, being-27)
mark(word-32, as-28)
nsubj(word-32, it-29)
cop(word-32, is-30)
det(word-32, a-31)
advcl(being-27, word-32)
neg(word-32, not-33)
det(words-37, the-35)
amod(words-37, other-36)
prep_of(word-32, words-37)
det(word-40, another-39)
nsubjpass(said-68, word-40)
prep_of(word-40, that-42)
nsubjpass(known-47, that-42)
aux(known-47, can-44)
neg(known-47, not-45)
auxpass(known-47, be-46)
rcmod(that-42, known-47)
dobj(known-53, what-49)
amod(words-51, other-50)
nsubjpass(known-53, words-51)
auxpass(known-53, are-52)
agent(known-47, known-53)
advmod(known-53, knowingly-54)
nsubjpass(known-57, it-55)
auxpass(known-57, is-56)
ccomp(known-53, known-57)
complm(known-63, that-58)
nsubjpass(known-63, what-59)
aux(known-63, can-60)
neg(known-63, not-61)
auxpass(known-63, be-62)
ccomp(known-57, known-63)
aux(said-68, can-64)
neg(said-68, not-65)
aux(said-68, be-66)
auxpass(said-68, be-67)
conj_but(is-5, said-68)
mark(said-85, while-69)
auxpass(said-71, being-70)
csubjpass(said-85, said-71)
aux(known-74, to-72)
auxpass(known-74, be-73)
xcomp(said-71, known-74)
prep_for(known-74, that-76)
nsubjpass(known-79, that-76)
auxpass(known-79, is-78)
rcmod(that-76, known-79)
aux(known-82, to-80)
auxpass(known-82, be-81)
xcomp(known-79, known-82)
auxpass(said-85, was-83)
advmod(said-85, already-84)
advcl(said-68, said-85)
dep(implied-88, or-87)
dep(said-85, implied-88)
det(implication-91, the-90)
nsubj(being-92, implication-91)
dep(implied-88, being-92)
complm(known-124, that-93)
det(knowledge-95, the-94)
nsubjpass(known-124, knowledge-95)
det(tree-98, the-97)
prep_of(knowledge-95, tree-98)
dobj(written-108, tree-98)
prep_of(tree-98, knowledge-100)
prep_of(knowledge-100, good-102)
prep_of(knowledge-100, evil-104)
conj_and(good-102, evil-104)
mark(written-108, as-105)
nsubjpass(written-108, it-106)
nsubjpass(communicated-115, it-106)
auxpass(written-108, was-107)
dep(tree-98, written-108)
det(word-111, the-110)
agent(written-108, word-111)
prep_in(word-111, words-113)
dep(tree-98, communicated-115)
conj_and(written-108, communicated-115)
advmod(communicated-115, thusly-116)
prep_by(communicated-115, words-119)
aux(known-124, can-121)
neg(known-124, not-122)
auxpass(known-124, be-123)
ccomp(being-92, known-124)
det(token-128, the-126)
amod(token-128, same-127)
agent(known-124, token-128)
mark(has-133, for-130)
det(token-132, the-131)
nsubj(has-133, token-132)
advcl(known-124, has-133)
num(sides-135, two-134)
dobj(has-133, sides-135)
det(opposite-139, each-137)
nn(opposite-139, side-138)
dobj(has-133, opposite-139)
conj_and(sides-135, opposite-139)
det(other-141, the-140)
dep(opposite-139, other-141)
det(side-145, each-144)
dobj(has-133, side-145)
conj_and(sides-135, side-145)
partmod(side-145, opposing-146)
det(direction-148, the-147)
dobj(opposing-146, direction-148)
det(other-151, the-150)
prep_of(direction-148, other-151)
det(side-155, either-154)
nsubj(facing-156, side-155)
nsubj(facing-162, side-155)
prepc_without(opposing-146, facing-156)
det(other-158, the-157)
dobj(facing-156, other-158)
prepc_without(opposing-146, facing-162)
conj_negcc(facing-156, facing-162)
prt(facing-162, away-163)
mark(is-167, as-165)
nsubj(is-167, it-166)
advcl(said-85, is-167)
advmod(face-171, when-168)
num(sides-170, two-169)
nsubj(face-171, sides-170)
nsubj(look-179, sides-170)
advcl(is-167, face-171)
prep_away_from(face-171, one-174)
dep(one-174, another-175)
aux(look-179, do-177)
neg(look-179, not-178)
advcl(is-167, look-179)
conj_but(face-171, look-179)
det(other-182, each-181)
prep_at(look-179, other-182)
advmod(look-179, directly-183)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN argument))
            (PRN (, ,)
              (SBAR (IN whether)
                (FRAG
                  (PP (IN by)
                    (NP
                      (NP
                        (NP (NN proof))
                        (PP (IN of)
                          (NP (NN evidence))))
                      (CC or)
                      (NP
                        (NP (JJ scientific) (NN method))
                        (CC or)
                        (NP (DT any) (JJ other) (NN method)))))))
              (, ,))
            (SBAR (IN that)
              (S
                (NP (DT the) (NN theory))
                (VP
                  (VP (MD can) (RB not)
                    (ADVP (RB directly))
                    (VP (VB oppose)
                      (NP (PRP$ its) (JJ opposite) (NN argument))))
                  (, ,)
                  (CC but)
                  (VP (MD can)
                    (ADVP (RB only))
                    (VP (VB be)
                      (VP (VBN described)
                        (PP (IN from)
                          (NP
                            (NP (DT an) (JJ outside) (NN observer))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBZ does) (RB not)
                                  (VP (VB stand)
                                    (CC and)
                                    (VB look))))))))))))))
          (VP (VBZ outwards)
            (ADVP (RB only))
            (PP (IN from)
              (NP
                (NP (CD one) (NN side))
                (CC or)
                (NP (NN argument))))))))
    (. .)))

dep(is-3, So-1)
nsubj(is-3, it-2)
root(ROOT-0, is-3)
complm(outwards-47, that-4)
det(argument-6, the-5)
nsubj(outwards-47, argument-6)
dep(by-9, whether-8)
dep(argument-6, by-9)
pobj(by-9, proof-10)
prep_of(proof-10, evidence-12)
amod(method-15, scientific-14)
pobj(by-9, method-15)
conj_or(proof-10, method-15)
det(method-19, any-17)
amod(method-19, other-18)
conj_or(proof-10, method-19)
conj_or(method-15, method-19)
dep(oppose-27, that-21)
det(theory-23, the-22)
nsubj(oppose-27, theory-23)
nsubjpass(described-36, theory-23)
aux(oppose-27, can-24)
neg(oppose-27, not-25)
advmod(oppose-27, directly-26)
dep(argument-6, oppose-27)
poss(argument-30, its-28)
amod(argument-30, opposite-29)
dobj(oppose-27, argument-30)
aux(described-36, can-33)
advmod(described-36, only-34)
auxpass(described-36, be-35)
dep(argument-6, described-36)
conj_but(oppose-27, described-36)
det(observer-40, an-38)
amod(observer-40, outside-39)
prep_from(described-36, observer-40)
nsubj(stand-44, observer-40)
nsubj(look-46, observer-40)
aux(stand-44, does-42)
neg(stand-44, not-43)
rcmod(observer-40, stand-44)
rcmod(observer-40, look-46)
conj_and(stand-44, look-46)
ccomp(is-3, outwards-47)
advmod(outwards-47, only-48)
num(side-51, one-50)
prep_from(outwards-47, side-51)
prep_from(outwards-47, argument-53)
conj_or(side-51, argument-53)

(ROOT
  (S
    (NP
      (NP (CD One))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ holds)
            (NP (DT the) (JJ token))))))
    (VP (MD can) (RB not)
      (VP (VB stand)
        (PP (IN upon)
          (NP (PRP it)))))
    (. .)))

nsubj(holds-3, One-1)
nsubj(stand-8, One-1)
rcmod(One-1, holds-3)
det(token-5, the-4)
dobj(holds-3, token-5)
aux(stand-8, can-6)
neg(stand-8, not-7)
root(ROOT-0, stand-8)
prep_upon(stand-8, it-10)

(ROOT
  (S (IN For)
    (NP (PRP one))
    (VP (MD can)
      (ADVP (RB not)
        (PP (IN at)
          (NP (DT the) (JJ same) (NN time))))
      (VP
        (VP (VB support)
          (NP
            (NP (CD one) (NN side))
            (PP (IN of)
              (NP (DT an) (NN argument)))))
        (, ,)
        (CC and)
        (ADVP (RB also))
        (VP (VB observe)
          (ADVP (RB objectively)
            (PP (IN between)
              (NP (NNS arguments)))))))
    (. .)))

dep(support-9, For-1)
nsubj(support-9, one-2)
nsubj(observe-18, one-2)
aux(support-9, can-3)
neg(support-9, not-4)
det(time-8, the-6)
amod(time-8, same-7)
prep_at(not-4, time-8)
root(ROOT-0, support-9)
num(side-11, one-10)
dobj(support-9, side-11)
det(argument-14, an-13)
prep_of(side-11, argument-14)
advmod(support-9, also-17)
conj_and(support-9, also-17)
conj_and(support-9, observe-18)
advmod(observe-18, objectively-19)
prep_between(objectively-19, arguments-21)

(ROOT
  (S
    (NP (DT Neither))
    (VP (MD can)
      (NP (DT the) (NN word))
      (S
        (VP (VB be)
          (VP (VBN subdivided)
            (CC or)
            (VBN separated)
            (PP (IN without)
              (S
                (VP (VBG losing)
                  (NP
                    (NP (DT the) (VBN intended) (NN meaning))
                    (PP (IN of)
                      (NP (DT the) (NN whole)))))))))))
    (. .)))

nsubj(can-2, Neither-1)
root(ROOT-0, can-2)
det(word-4, the-3)
dobj(can-2, word-4)
auxpass(subdivided-6, be-5)
dep(can-2, subdivided-6)
dep(can-2, separated-8)
conj_or(subdivided-6, separated-8)
prepc_without(subdivided-6, losing-10)
det(meaning-13, the-11)
amod(meaning-13, intended-12)
dobj(losing-10, meaning-13)
det(whole-16, the-15)
prep_of(meaning-13, whole-16)

(ROOT
  (S (CC But)
    (PP (IN without)
      (NP (JJ deductive) (NN reasoning)))
    (NP (PRP we))
    (VP (VBP are)
      (VP (VBN lost)))
    (. .)))

cc(lost-7, But-1)
amod(reasoning-4, deductive-3)
prep_without(lost-7, reasoning-4)
nsubjpass(lost-7, we-5)
auxpass(lost-7, are-6)
root(ROOT-0, lost-7)

(ROOT
  (S (CC But)
    (PP (IN without)
      (NP (JJ inductive) (NN reasoning)))
    (NP (PRP we))
    (VP (MD can) (RB not)
      (VP (VB make)
        (NP (JJ general) (NNS statements))
        (PP (IN about)
          (NP (DT the) (NN world)))))
    (. .)))

cc(make-8, But-1)
amod(reasoning-4, inductive-3)
prep_without(make-8, reasoning-4)
nsubj(make-8, we-5)
aux(make-8, can-6)
neg(make-8, not-7)
root(ROOT-0, make-8)
amod(statements-10, general-9)
dobj(make-8, statements-10)
det(world-13, the-12)
prep_about(make-8, world-13)

(ROOT
  (S (CC But)
    (PP (IN without)
      (NP (NNS particulars)))
    (NP (DT the) (NN general))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN described))))
    (. .)))

cc(described-9, But-1)
prep_without(described-9, particulars-3)
det(general-5, the-4)
nsubjpass(described-9, general-5)
aux(described-9, can-6)
neg(described-9, not-7)
auxpass(described-9, be-8)
root(ROOT-0, described-9)

(ROOT
  (S
    (S
      (NP (DT Any) (NN falsehood))
      (VP (MD would)
        (VP (VB constitute)
          (NP
            (NP (DT a) (NN rejection))
            (PP (IN of)
              (NP (DT the) (NN theory))))
          (PP (IN as)
            (NP (DT a) (NN whole))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNS proponents))
      (VP (MD would)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB start)
                (ADVP (RB again))
                (PP (IN from)
                  (NP (DT a) (JJ different) (NNS hypothesis)))))))))
    (. .)))

det(falsehood-2, Any-1)
nsubj(constitute-4, falsehood-2)
aux(constitute-4, would-3)
root(ROOT-0, constitute-4)
det(rejection-6, a-5)
dobj(constitute-4, rejection-6)
det(theory-9, the-8)
prep_of(rejection-6, theory-9)
det(whole-12, a-11)
prep_as(constitute-4, whole-12)
det(proponents-16, the-15)
nsubj(have-18, proponents-16)
xsubj(start-20, proponents-16)
aux(have-18, would-17)
conj_and(constitute-4, have-18)
aux(start-20, to-19)
xcomp(have-18, start-20)
advmod(start-20, again-21)
det(hypothesis-25, a-23)
amod(hypothesis-25, different-24)
prep_from(start-20, hypothesis-25)

(ROOT
  (S (CC But)
    (PP (IN without)
      (NP
        (NP (NN apriori) (NN knowledge))
        (PP (IN of)
          (NP (DT the) (NN general)))))
    (, ,)
    (NP (PRP we))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP (JJ sure)
          (PP (IN of)
            (NP (PRP$ its) (NNS particulars))))))
    (. .)))

cc(sure-13, But-1)
nn(knowledge-4, apriori-3)
prep_without(sure-13, knowledge-4)
det(general-7, the-6)
prep_of(knowledge-4, general-7)
nsubj(sure-13, we-9)
aux(sure-13, can-10)
neg(sure-13, not-11)
cop(sure-13, be-12)
root(ROOT-0, sure-13)
poss(particulars-16, its-15)
prep_of(sure-13, particulars-16)

(ROOT
  (S (CC And)
    (NP
      (NP (RB so) (DT the) (JJ scientific) (NN method))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (DT a) (NN tool))
          (VP
            (VP (VBD used)
              (S
                (VP (TO to)
                  (VP (VB disprove)))))
            (CC but)
            (VP (VBD said)
              (S
                (VP (TO to)
                  (VP (VB prove)))))))))
    (VP (MD can) (RB not)
      (VP (VB prove)
        (NP
          (CONJP (CC but)
            (RB only))
          (NP (NNP disprove))
          (CC and)
          (NP
            (NP
              (NP (RB then) (RB only))
              (SBAR (IN if)
                (S
                  (NP (DT the) (NN subject))
                  (VP (VBZ is)
                    (ADVP (RB implicitly))
                    (VP (VBN accepted))))))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (NN method))
              (PP (IN of)
                (NP
                  (NP (NN test))
                  (VP
                    (ADVP (RB also))
                    (VBG being)
                    (VP (VBN accepted)
                      (PP (IN in)
                        (NP (PRP$ its) (JJ general) (NN power)))
                      (S
                        (VP (TO to)
                          (VP (VB come)
                            (PP (TO to)
                              (NP
                                (NP (JJ particular) (NNS conclusions))
                                (PP (IN of)
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (VP (VBZ is)
                                        (VP (VBN known)
                                          (S
                                            (VP (TO to)
                                              (VP (VB be)
                                                (ADJP (RB not) (JJ true))))))))))))))))))))))))
    (. .)))

cc(prove-19, And-1)
advmod(method-5, so-2)
det(method-5, the-3)
amod(method-5, scientific-4)
dobj(used-10, method-5)
nsubj(prove-19, method-5)
mark(used-10, while-7)
det(tool-9, a-8)
nsubj(used-10, tool-9)
xsubj(disprove-12, tool-9)
nsubj(said-14, tool-9)
xsubj(prove-16, tool-9)
dep(method-5, used-10)
aux(disprove-12, to-11)
xcomp(used-10, disprove-12)
dep(method-5, said-14)
conj_but(used-10, said-14)
aux(prove-16, to-15)
xcomp(said-14, prove-16)
aux(prove-19, can-17)
neg(prove-19, not-18)
root(ROOT-0, prove-19)
dobj(prove-19, disprove-22)
advmod(only-25, then-24)
dobj(prove-19, only-25)
conj_and(disprove-22, only-25)
mark(accepted-31, if-26)
det(subject-28, the-27)
nsubjpass(accepted-31, subject-28)
auxpass(accepted-31, is-29)
advmod(accepted-31, implicitly-30)
dep(only-25, accepted-31)
det(method-35, the-34)
conj_and(disprove-22, method-35)
conj_and(only-25, method-35)
prep_of(method-35, test-37)
xsubj(come-46, test-37)
advmod(accepted-40, also-38)
auxpass(accepted-40, being-39)
partmod(test-37, accepted-40)
poss(power-44, its-42)
amod(power-44, general-43)
prep_in(accepted-40, power-44)
aux(come-46, to-45)
xcomp(accepted-40, come-46)
amod(conclusions-49, particular-48)
prep_to(come-46, conclusions-49)
nsubjpass(known-53, what-51)
auxpass(known-53, is-52)
prepc_of(conclusions-49, known-53)
aux(true-57, to-54)
cop(true-57, be-55)
neg(true-57, not-56)
xcomp(known-53, true-57)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP
          (NP (DT the) (NN evolution))
          (PP (IN of)
            (NP (DT the) (JJ scientific) (NN method))))
        (VP (VBZ has)
          (VP (VBN developed)))))
    (VP (VBZ is)
      (ADJP (RB proof) (JJ enough))
      (SBAR (IN that)
        (S
          (NP (PDT such) (DT a) (NN theory))
          (VP (MD can) (RB not)
            (VP (VB be)
              (VP (VBN disproven)))))))
    (. .)))

complm(developed-9, That-1)
det(evolution-3, the-2)
nsubj(developed-9, evolution-3)
det(method-7, the-5)
amod(method-7, scientific-6)
prep_of(evolution-3, method-7)
aux(developed-9, has-8)
csubj(enough-12, developed-9)
cop(enough-12, is-10)
advmod(enough-12, proof-11)
root(ROOT-0, enough-12)
complm(disproven-20, that-13)
predet(theory-16, such-14)
det(theory-16, a-15)
nsubjpass(disproven-20, theory-16)
aux(disproven-20, can-17)
neg(disproven-20, not-18)
auxpass(disproven-20, be-19)
ccomp(enough-12, disproven-20)

(ROOT
  (S (CC Or)
    (VP (VBZ has)
      (NP (PRP it)))
    (. ?)))

cc(has-2, Or-1)
root(ROOT-0, has-2)
dobj(has-2, it-3)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ does)
      (PP (RB not) (IN in)
        (NP
          (S
            (NP (DT any) (NN way))
            (VP (VBP speak)
              (PP (TO to)
                (NP
                  (NP (DT any) (JJ objective) (NN measure))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJ absolute) (NN truth)
                        (CC or)
                        (NN falsehood))
                      (PP (IN of)
                        (NP (DT the) (NN theory)))))))
              (NP (PRP itself))))
          (, ,)
          (CONJP (CC but)
            (RB rather))
          (NP
            (NP (DT the) (NN wording)
              (CC and)
              (NN logic))
            (PP (IN behind)
              (NP (DT the) (NN theory))))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (DT any) (NN theory))
          (VP (MD can)
            (ADVP (RB only))
            (VP (VB be)
              (VP (VBN judged)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN basis))
                    (PP (IN of)
                      (NP (PRP$ its) (NN wording)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN judged)
                                (UCP
                                  (NP (CD objectively))
                                  (, ,)
                                  (CC and)
                                  (RB not)
                                  (ADJP
                                    (ADJP (JJ subjectively))
                                    (SBAR
                                      (WHNP (WDT which))
                                      (S
                                        (VP (MD would)
                                          (ADVP (RB only))
                                          (VP (VB be)
                                            (NP
                                              (NP (DT a) (NN matter))
                                              (PP (IN of)
                                                (NP (NN opinion))))))))))))))))))))))))
    (. .)))

nsubj(does-2, This-1)
root(ROOT-0, does-2)
neg(does-2, not-3)
det(way-6, any-5)
nsubj(speak-7, way-6)
prep_in(does-2, speak-7)
det(measure-11, any-9)
amod(measure-11, objective-10)
prep_to(speak-7, measure-11)
det(truth-15, the-13)
amod(truth-15, absolute-14)
prep_of(measure-11, truth-15)
prep_of(measure-11, falsehood-17)
conj_or(truth-15, falsehood-17)
det(theory-20, the-19)
prep_of(truth-15, theory-20)
dobj(speak-7, itself-21)
det(wording-26, the-25)
prep_in(does-2, wording-26)
conj_negcc(speak-7, wording-26)
conj_negcc(speak-7, logic-28)
conj_and(wording-26, logic-28)
det(theory-31, the-30)
prep_behind(wording-26, theory-31)
mark(judged-39, as-33)
det(theory-35, any-34)
nsubjpass(judged-39, theory-35)
aux(judged-39, can-36)
advmod(judged-39, only-37)
auxpass(judged-39, be-38)
advcl(does-2, judged-39)
det(basis-42, the-41)
prep_on(judged-39, basis-42)
poss(wording-45, its-44)
prep_of(basis-42, wording-45)
aux(judged-48, to-46)
auxpass(judged-48, be-47)
infmod(wording-45, judged-48)
dobj(judged-48, objectively-49)
neg(subjectively-53, not-52)
dobj(judged-48, subjectively-53)
conj_and(objectively-49, subjectively-53)
nsubj(matter-59, which-54)
aux(matter-59, would-55)
advmod(matter-59, only-56)
cop(matter-59, be-57)
det(matter-59, a-58)
dep(subjectively-53, matter-59)
prep_of(matter-59, opinion-61)

(ROOT
  (S
    (S
      (ADVP (RB Therefore))
      (NP
        (NP (DT the) (NN rejection))
        (PP (IN of)
          (NP (DT the) (JJ scientific) (NN method))))
      (VP (VBZ is)
        (ADJP (JJ complete)
          (PP (IN in)
            (NP (DT the) (NN sense))))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD can) (RB not)
              (VP (VB be)
                (VP (VBN disproven)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NN basis))
                      (PP (IN of)
                        (NP (JJ absolute) (NN knowledge)))))
                  (PP (IN outside)
                    (NP
                      (NP (DT the) (NNS tools))
                      (PP (IN of)
                        (NP
                          (NP (NN argument))
                          (ADJP (JJ available)))))))))))))
    (: ;)
    (S
      (ADVP (RB namely))
      (NP
        (NP (NNS words))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBP are)
              (NP
                (NP (DT the) (NN basis))
                (PP (IN for)
                  (NP
                    (NP (DT any) (NN theory)
                      (CC or)
                      (NNS hypothesis))
                    (VP (VBG being)
                      (VP (VBN argued)))))))))
        (, ,))
      (VP
        (VP (VBD defended))
        (, ,)
        (CC or)
        (VP (VBN subjected)
          (PP (TO to)
            (NP (NNS tests)))
          (S
            (VP (TO to)
              (VP (VB find)
                (NP (NNS weaknesses))
                (SBAR (IN in) (NN order)
                  (S
                    (VP (TO to)
                      (VP (VB reject)
                        (NP (DT that) (NN theory))))))))))))
    (. .)))

advmod(complete-9, Therefore-1)
det(rejection-3, the-2)
nsubj(complete-9, rejection-3)
det(method-7, the-5)
amod(method-7, scientific-6)
prep_of(rejection-3, method-7)
cop(complete-9, is-8)
root(ROOT-0, complete-9)
det(sense-12, the-11)
prep_in(complete-9, sense-12)
complm(disproven-18, that-13)
nsubjpass(disproven-18, it-14)
aux(disproven-18, can-15)
neg(disproven-18, not-16)
auxpass(disproven-18, be-17)
ccomp(complete-9, disproven-18)
det(basis-21, the-20)
prep_on(disproven-18, basis-21)
amod(knowledge-24, absolute-23)
prep_of(basis-21, knowledge-24)
det(tools-27, the-26)
prep_outside(disproven-18, tools-27)
prep_of(tools-27, argument-29)
amod(argument-29, available-30)
advmod(defended-47, namely-32)
nsubj(basis-38, words-33)
nsubj(defended-47, words-33)
nsubj(subjected-50, words-33)
xsubj(find-54, words-33)
cop(basis-38, are-36)
det(basis-38, the-37)
rcmod(words-33, basis-38)
det(theory-41, any-40)
prep_for(basis-38, theory-41)
prep_for(basis-38, hypothesis-43)
conj_or(theory-41, hypothesis-43)
auxpass(argued-45, being-44)
partmod(theory-41, argued-45)
parataxis(complete-9, defended-47)
parataxis(complete-9, subjected-50)
conj_or(defended-47, subjected-50)
prep_to(subjected-50, tests-52)
aux(find-54, to-53)
xcomp(subjected-50, find-54)
dobj(find-54, weaknesses-55)
mark(reject-59, in-56)
dep(reject-59, order-57)
aux(reject-59, to-58)
purpcl(find-54, reject-59)
det(theory-61, that-60)
dobj(reject-59, theory-61)

(ROOT
  (S
    (NP (PDT Such) (DT a) (NN theory))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP
          (ADJP (RB truly) (VBN known))
          (CC or)
          (ADJP (RB even) (RB truly) (JJ unknown)))
        (, ,)
        (SBAR (IN for)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (RB truly) (JJ unknown)
                  (SBAR
                    (S
                      (NP (PRP one))
                      (VP (MD must)
                        (ADVP (RB first))
                        (VP
                          (ADVP (RB truly))
                          (VB know)
                          (SBAR
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (VP (VBZ is) (RB not)
                                  (S
                                    (VP (TO to)
                                      (VP (VB be)
                                        (VP (VBN known))))))))
                            (, ,)
                            (CC and)
                            (ADVP (RB surely))
                            (SBAR (IN that)
                              (S
                                (NP (PRP itself))
                                (VP (MD can) (RB not)
                                  (VP (VB be)
                                    (VP (VBN known))))))))))))
                (, ,)
                (ADVP (RB truly))))))))
    (. .)))

predet(theory-3, Such-1)
det(theory-3, a-2)
nsubjpass(known-8, theory-3)
nsubj(unknown-12, theory-3)
aux(known-8, can-4)
neg(known-8, not-5)
auxpass(known-8, be-6)
cop(known-8, be-6)
advmod(known-8, truly-7)
root(ROOT-0, known-8)
advmod(unknown-12, even-10)
advmod(unknown-12, truly-11)
conj_or(known-8, unknown-12)
mark(unknown-18, for-14)
aux(unknown-18, to-15)
cop(unknown-18, be-16)
advmod(unknown-18, truly-17)
advcl(known-8, unknown-18)
xcomp(known-8, unknown-18)
nsubj(know-23, one-19)
aux(know-23, must-20)
advmod(know-23, first-21)
advmod(know-23, truly-22)
dep(unknown-18, know-23)
nsubj(is-25, what-24)
ccomp(know-23, is-25)
neg(is-25, not-26)
aux(known-29, to-27)
auxpass(known-29, be-28)
xcomp(is-25, known-29)
ccomp(know-23, surely-32)
advmod(is-25, surely-32)
conj_and(is-25, surely-32)
complm(known-38, that-33)
nsubjpass(known-38, itself-34)
aux(known-38, can-35)
neg(known-38, not-36)
auxpass(known-38, be-37)
ccomp(know-23, known-38)
conj_and(is-25, known-38)
advmod(unknown-18, truly-40)

(ROOT
  (S
    (ADVP (RB Really)
      (PP (IN in)
        (NP (NN reality))))
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ difficult)
        (S
          (VP (TO to)
            (VP (VB prove)
              (PP (IN with)
                (NP
                  (NP (JJ absolute) (NN certainty))
                  (CC or)
                  (NP (JJ absolute) (NN uncertainty))))
              (NP
                (NP (DT the) (JJ absolute) (NN absurdity)
                  (CC or)
                  (NN surdity))
                (PP (IN of)
                  (NP
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ is)
                          (VP (VBN known)))))
                    (CC or)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ is)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (ADJP (JJ unknown))
                                (, ,)
                                (ADVP (RB even)
                                  (PP (IN at)
                                    (NP
                                      (NP (DT a) (JJ future) (NN date))
                                      (PP (IN in)
                                        (NP (NN time))))))))))))))))))))
    (. .)))

advmod(difficult-6, Really-1)
prep_in(Really-1, reality-3)
nsubj(difficult-6, it-4)
cop(difficult-6, is-5)
root(ROOT-0, difficult-6)
aux(prove-8, to-7)
xcomp(difficult-6, prove-8)
amod(certainty-11, absolute-10)
prep_with(prove-8, certainty-11)
amod(uncertainty-14, absolute-13)
prep_with(prove-8, uncertainty-14)
conj_or(certainty-11, uncertainty-14)
det(absurdity-17, the-15)
amod(absurdity-17, absolute-16)
dobj(prove-8, absurdity-17)
dobj(prove-8, surdity-19)
conj_or(absurdity-17, surdity-19)
nsubjpass(known-23, what-21)
auxpass(known-23, is-22)
prep_of(absurdity-17, known-23)
nsubj(is-26, what-25)
prep_of(absurdity-17, is-26)
conj_or(known-23, is-26)
aux(unknown-29, to-27)
cop(unknown-29, be-28)
xcomp(is-26, unknown-29)
advmod(unknown-29, even-31)
det(date-35, a-33)
amod(date-35, future-34)
prep_at(even-31, date-35)
prep_in(date-35, time-37)

(ROOT
  (FRAG
    (NP (NNP Space))
    (. .)))

root(ROOT-0, Space-1)

(ROOT
  (NP
    (NP (NNP Space))
    (, ,)
    (NP (DT the) (JJ final) (NN frontier))
    (, ,)
    (S
      (S
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADVP (RB already))
            (ADVP (RB here))))
        (, ,)
        (CC but)
        (S
          (S
            (VP (VBG knowing)
              (SBAR
                (WHADVP (RB exactly) (WRB where))
                (S
                  (NP (PRP you))
                  (VP (VBP are)
                    (PP (IN with)
                      (NP (NN respect)))
                    (PP (TO to)
                      (SBAR
                        (WHADVP (WRB where))
                        (S
                          (NP (PRP you))
                          (VP (VBD were)
                            (VP (VBZ is)
                              (ADVP (RB certainly))
                              (ADJP (JJ uncertain)
                                (PP (IN for)
                                  (NP
                                    (NP (RB even) (DT a) (NN population))
                                    (PP (IN of)
                                      (NP
                                        (NP (NN sodium) (NNS atoms))
                                        (PP (IN at)
                                          (CC or)
                                          (IN near)
                                          (NP (JJ absolute) (CD zero))))))))))))))))))
          (VP (MD can) (RB not)
            (VP (VB be)
              (VP (VBN known)
                (PP (IN in)
                  (NP
                    (NP (NNS terms))
                    (PP (IN of)
                      (NP (JJ absolute) (NN position)
                        (CC or)
                        (NN velocity))))))))))
      (, ,) (IN for)
      (S
        (SBAR (IN as)
          (S
            (NP (DT the) (NN velocity))
            (VP (VBZ approaches)
              (NP (JJ absolute) (NN zero)))))
        (, ,)
        (NP (PRP we))
        (VP
          (VP (VBP become)
            (ADJP
              (ADVP (RBR more)
                (CC and)
                (RBR more))
              (JJ certain)
              (PP (IN of)
                (NP (DT that) (NN velocity)))))
          (, ,)
          (CC but)
          (VP (MD must)
            (ADVP (RB necessarily))
            (VP
              (ADVP (RB also))
              (VB become)
              (ADJP
                (ADJP (JJR more))
                (CC and)
                (ADJP (RBR more) (JJ uncertain)))
              (PP (IN of)
                (NP (PRP$ its) (NN position))))))))
    (, ,)
    (S
      (NP (DT each) (NNS atoms) (NN wave) (NN function))
      (VP (VBG spreading)
        (PRT (RP out))
        (SBAR (IN until)
          (S
            (NP (PRP it))
            (VP (VBZ overlaps)
              (PP (IN with)
                (NP (PRP$ its) (NNS neighbors)))
              (SBAR (IN until)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (ADJP (RB totally) (JJ indistinguishable)
                      (PP (IN from)
                        (NP (PRP$ its) (NNS neighbors))))
                    (S
                      (VP (VBG forming)
                        (NP
                          (NP (DT a) (NN singular) (NN blob))
                          (PP (IN of)
                            (NP (NN matter))))))))))))))
    (. .)))

root(ROOT-0, Space-1)
det(frontier-5, the-3)
amod(frontier-5, final-4)
appos(Space-1, frontier-5)
nsubj(are-8, you-7)
dep(Space-1, are-8)
advmod(are-8, already-9)
advmod(are-8, here-10)
csubjpass(known-42, knowing-13)
advmod(where-15, exactly-14)
advmod(are-17, where-15)
nsubj(are-17, you-16)
advcl(knowing-13, are-17)
prep_with(are-17, respect-19)
advmod(uncertain-26, where-21)
nsubj(uncertain-26, you-22)
aux(uncertain-26, were-23)
cop(uncertain-26, is-24)
advmod(uncertain-26, certainly-25)
prepc_to(are-17, uncertain-26)
advmod(population-30, even-28)
det(population-30, a-29)
prep_for(uncertain-26, population-30)
nn(atoms-33, sodium-32)
prep_of(population-30, atoms-33)
prep_of(population-30, atoms-33')
conj_or(atoms-33, atoms-33')
amod(zero-38, absolute-37)
prep_at(atoms-33, zero-38)
prep_near(atoms-33', zero-38)
aux(known-42, can-39)
neg(known-42, not-40)
auxpass(known-42, be-41)
dep(Space-1, known-42)
conj_but(are-8, known-42)
prep_in(known-42, terms-44)
amod(position-47, absolute-46)
prep_of(terms-44, position-47)
prep_of(terms-44, velocity-49)
conj_or(position-47, velocity-49)
dep(are-8, for-51)
mark(approaches-55, as-52)
det(velocity-54, the-53)
nsubj(approaches-55, velocity-54)
advcl(certain-64, approaches-55)
amod(zero-57, absolute-56)
dobj(approaches-55, zero-57)
nsubj(certain-64, we-59)
nsubj(more-74, we-59)
cop(certain-64, become-60)
advmod(certain-64, more-61)
conj_and(more-61, more-63)
advmod(certain-64, more-63)
dep(are-8, certain-64)
det(velocity-67, that-66)
prep_of(certain-64, velocity-67)
aux(more-74, must-70)
advmod(more-74, necessarily-71)
advmod(more-74, also-72)
cop(more-74, become-73)
dep(are-8, more-74)
conj_but(certain-64, more-74)
advmod(uncertain-77, more-76)
conj_but(certain-64, uncertain-77)
conj_and(more-74, uncertain-77)
poss(position-80, its-79)
prep_of(more-74, position-80)
det(function-85, each-82)
nn(function-85, atoms-83)
nn(function-85, wave-84)
nsubj(spreading-86, function-85)
dep(Space-1, spreading-86)
prt(spreading-86, out-87)
mark(overlaps-90, until-88)
nsubj(overlaps-90, it-89)
advcl(spreading-86, overlaps-90)
poss(neighbors-93, its-92)
prep_with(overlaps-90, neighbors-93)
mark(indistinguishable-98, until-94)
nsubj(indistinguishable-98, it-95)
cop(indistinguishable-98, is-96)
advmod(indistinguishable-98, totally-97)
advcl(overlaps-90, indistinguishable-98)
poss(neighbors-101, its-100)
prep_from(indistinguishable-98, neighbors-101)
xcomp(indistinguishable-98, forming-102)
det(blob-105, a-103)
nn(blob-105, singular-104)
dobj(forming-102, blob-105)
prep_of(blob-105, matter-107)

(ROOT
  (S (CC But)
    (NP (DT this))
    (VP (VBZ is)
      (ADVP (RB only))
      (VP (VBN verified)
        (PP (IN by)
          (NP
            (NP (NN experiment))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (NP (DT the)
                    (ADJP
                      (ADJP (JJ only))
                      (CC and)
                      (ADJP (JJS best)))
                    (NN test)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN used)
                            (PP (IN by)
                              (NP
                                (NP (DT the) (JJ scientific) (NN method))
                                (, ,)
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (VP (MD can)
                                      (ADVP (RB only))
                                      (ADVP (RB truly))
                                      (VP (VB be)
                                        (VP (VBN used)
                                          (S
                                            (VP (TO to)
                                              (VP (VB reject)
                                                (NP (DT a) (NNS hypothesis))))))))))))))))))))))))
    (. .)))

cc(verified-5, But-1)
nsubjpass(verified-5, this-2)
auxpass(verified-5, is-3)
advmod(verified-5, only-4)
root(ROOT-0, verified-5)
agent(verified-5, experiment-7)
nsubj(test-15, experiment-7)
cop(test-15, is-10)
det(test-15, the-11)
amod(test-15, only-12)
conj_and(only-12, best-14)
amod(test-15, best-14)
rcmod(experiment-7, test-15)
aux(used-18, to-16)
auxpass(used-18, be-17)
infmod(test-15, used-18)
det(method-22, the-20)
amod(method-22, scientific-21)
agent(used-18, method-22)
nsubjpass(used-29, method-22)
aux(used-29, can-25)
advmod(used-29, only-26)
advmod(used-29, truly-27)
auxpass(used-29, be-28)
rcmod(method-22, used-29)
aux(reject-31, to-30)
xcomp(used-29, reject-31)
det(hypothesis-33, a-32)
dobj(reject-31, hypothesis-33)

