(ROOT
  (S
    (INTJ (VB Please))
    (VP (VB take)
      (NP (DT no) (NN offence))
      (PP (TO to)
        (NP (PRP$ my) (NN response))))
    (. .)))

dep(take-2, Please-1)
root(ROOT-0, take-2)
det(offence-4, no-3)
dobj(take-2, offence-4)
poss(response-7, my-6)
prep_to(take-2, response-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VB refute)
      (NP (NNS arguments))
      (PP (RB not)
        (NP (NNS people))))
    (. .)))

nsubj(refute-2, I-1)
root(ROOT-0, refute-2)
dobj(refute-2, arguments-3)
prep(refute-2, not-4)
pobj(not-4, people-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB believe)
        (PRN (, ,)
          (SBAR (IN as)
            (S
              (VP (VBN implicated)
                (PP (IN in)
                  (NP (PRP$ your) (JJ rhetorical) (NN question))))))
          (, ,))
        (SBAR (IN that)
          (S
            (NP (NN evolution))
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN consequence))
                (PP (IN of)
                  (NP (DT a) (VBN controlled) (NN experiment)))))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
mark(implicated-7, as-6)
parataxis(believe-4, implicated-7)
poss(question-11, your-9)
amod(question-11, rhetorical-10)
prep_in(implicated-7, question-11)
complm(consequence-17, that-13)
nsubj(consequence-17, evolution-14)
cop(consequence-17, is-15)
det(consequence-17, the-16)
ccomp(believe-4, consequence-17)
det(experiment-21, a-19)
amod(experiment-21, controlled-20)
prep_of(consequence-17, experiment-21)

(ROOT
  (S (IN For)
    (NP (PRP$ your) (JJ rhetorical) (NN question))
    (VP (VBZ expresses)
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ evolutionary) (JJ natural) (NN process))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN consequence))
              (PP (IN of)
                (NP (DT a) (VBN controlled) (NN experiment))))))))
    (. .)))

dep(expresses-5, For-1)
poss(question-4, your-2)
amod(question-4, rhetorical-3)
nsubj(expresses-5, question-4)
root(ROOT-0, expresses-5)
complm(consequence-13, that-6)
det(process-10, the-7)
amod(process-10, evolutionary-8)
amod(process-10, natural-9)
nsubj(consequence-13, process-10)
cop(consequence-13, is-11)
det(consequence-13, a-12)
ccomp(expresses-5, consequence-13)
det(experiment-17, a-15)
amod(experiment-17, controlled-16)
prep_of(consequence-13, experiment-17)

(ROOT
  (S
    (NP (DT A) (JJ controlled) (NN experiment))
    (VP (VBZ evidences)
      (NP
        (NP (RB only) (DT a) (NN consequence))
        (PP (IN of)
          (NP (DT a) (VBN controlled) (NN experiment)))))
    (. .)))

det(experiment-3, A-1)
amod(experiment-3, controlled-2)
nsubj(evidences-4, experiment-3)
root(ROOT-0, evidences-4)
advmod(consequence-7, only-5)
det(consequence-7, a-6)
dobj(evidences-4, consequence-7)
det(experiment-11, a-9)
amod(experiment-11, controlled-10)
prep_of(consequence-7, experiment-11)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (NN laboratory)))
    (NP (PRP we))
    (VP (MD can)
      (VP (VB conclude)
        (PP (IN as)
          (NP
            (NP (DT a) (NN consequence))
            (PP (IN of)
              (NP (DT an) (NN experiment)))))
        (SBAR (IN that)
          (S
            (NP (NN plastic))
            (VP (VBZ is)
              (VP (VBN derived)
                (PP (IN from)
                  (NP (NN petroleum)))))))))
    (. .)))

det(laboratory-3, a-2)
prep_in(conclude-6, laboratory-3)
nsubj(conclude-6, we-4)
aux(conclude-6, can-5)
root(ROOT-0, conclude-6)
det(consequence-9, a-8)
prep_as(conclude-6, consequence-9)
det(experiment-12, an-11)
prep_of(consequence-9, experiment-12)
complm(derived-16, that-13)
nsubjpass(derived-16, plastic-14)
auxpass(derived-16, is-15)
ccomp(conclude-6, derived-16)
prep_from(derived-16, petroleum-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can) (RB not)
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP (NN petroleum))
            (VP (MD will)
              (VP (VB become)
                (NP (JJ plastic) (CD one) (NN day))))))))
    (. .)))

nsubj(say-4, We-1)
aux(say-4, can-2)
neg(say-4, not-3)
root(ROOT-0, say-4)
complm(day-11, that-5)
nsubj(day-11, petroleum-6)
aux(day-11, will-7)
cop(day-11, become-8)
amod(day-11, plastic-9)
num(day-11, one-10)
ccomp(say-4, day-11)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (ADVP (RB always))
      (VP (VB be)
        (ADJP (RB vigilantly) (JJ mindful)
          (PP (IN of)
            (NP
              (NP (DT that))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (PRP we))
                  (VP (VBP think)
                    (NP
                      (ADJP (JJ evidences)
                        (NP (CD one)))
                      (NN thing))))))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP we))
            (VP (VBP are)
              (VP (VBG controlling)
                (NP
                  (NP
                    (QP (RB only) (DT some)))
                  (PP (IN of)
                    (NP (DT the) (NNS variables))))
                (PP (IN in)
                  (NP (DT any) (VBN given) (NN experiment)))))))))
    (. .)))

nsubj(mindful-6, We-1)
aux(mindful-6, must-2)
advmod(mindful-6, always-3)
cop(mindful-6, be-4)
advmod(mindful-6, vigilantly-5)
root(ROOT-0, mindful-6)
prep_of(mindful-6, that-8)
dobj(think-11, that-8)
rel(think-11, which-9)
nsubj(think-11, we-10)
rcmod(that-8, think-11)
amod(thing-14, evidences-12)
dep(evidences-12, one-13)
dobj(think-11, thing-14)
advmod(controlling-18, when-15)
nsubj(controlling-18, we-16)
aux(controlling-18, are-17)
advcl(mindful-6, controlling-18)
quantmod(some-20, only-19)
dobj(controlling-18, some-20)
det(variables-23, the-22)
prep_of(some-20, variables-23)
det(experiment-27, any-25)
amod(experiment-27, given-26)
prep_in(controlling-18, experiment-27)

