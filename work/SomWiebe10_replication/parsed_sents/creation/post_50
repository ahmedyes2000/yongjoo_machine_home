(ROOT
  (S
    (LST (: --))
    (ADVP (RB Okay))
    (, ,)
    (VP (VB let)
      (S
        (NP (PRP s))
        (VP (VB start)
          (PP (IN with)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (NNP ID))
                (VP (VBZ tries)
                  (S
                    (VP (TO to)
                      (VP (VB infer)
                        (NP (NN design))
                        (, ,)
                        (ADVP (RB namely))
                        (PP (IN by)
                          (S
                            (VP (VBG using)
                              (NP (DT the) (NNP Design) (NNP Inference)))))))))))))))
    (. .)))

advmod(let-4, Okay-2)
root(ROOT-0, let-4)
nsubj(start-6, s-5)
ccomp(let-4, start-6)
advmod(tries-10, how-8)
nsubj(tries-10, ID-9)
xsubj(infer-12, ID-9)
prepc_with(start-6, tries-10)
aux(infer-12, to-11)
xcomp(tries-10, infer-12)
dobj(infer-12, design-13)
advmod(infer-12, namely-15)
prepc_by(infer-12, using-17)
det(Inference-20, the-18)
nn(Inference-20, Design-19)
dobj(using-17, Inference-20)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN order))
        (PP (IN for)
          (NP (NN something)))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN designed)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB be)
            (UCP
              (VP (VBN specified))
              (CC and)
              (ADJP (RB sufficiently) (JJ complex)))))))
    (. .)))

prep_in(needs-10, order-2)
prep_for(order-2, something-4)
aux(designed-7, to-5)
auxpass(designed-7, be-6)
infmod(order-2, designed-7)
nsubj(needs-10, it-9)
xsubj(be-12, it-9)
root(ROOT-0, needs-10)
aux(be-12, to-11)
xcomp(needs-10, be-12)
dep(be-12, specified-13)
advmod(complex-16, sufficiently-15)
dep(be-12, complex-16)
conj_and(specified-13, complex-16)

(ROOT
  (SBARQ (RB So)
    (WHADVP (WRB how))
    (SQ (VBP do)
      (NP (NNP ID) (NNS activists))
      (VP (VB make)
        (NP (DT the) (NN claim))
        (SBAR (IN that)
          (S
            (NP (NNP ID))
            (VP (VBZ is)
              (VP (VBN based)
                (PP (IN on)
                  (NP (JJ positive) (NN evidence)))))))))
    (. ?)))

advmod(make-6, So-1)
advmod(make-6, how-2)
aux(make-6, do-3)
nn(activists-5, ID-4)
nsubj(make-6, activists-5)
root(ROOT-0, make-6)
det(claim-8, the-7)
dobj(make-6, claim-8)
complm(based-12, that-9)
nsubjpass(based-12, ID-10)
auxpass(based-12, is-11)
ccomp(make-6, based-12)
amod(evidence-15, positive-14)
prep_on(based-12, evidence-15)

(ROOT
  (S
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ seems)
      (ADJP (RB self) (JJ evident))
      (SBAR
        (SBAR (IN that)
          (S
            (NP (NNP ID))
            (VP (MD can) (RB not)
              (VP (VB make)
                (NP (DT any) (NNS predictions))))))
        (CC or)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (VP (VBN based)
                (PP (IN on)
                  (NP (JJ positive) (NN evidence)))))))))
    (. .)))

prep_after(evident-7, all-2)
nsubj(evident-7, it-4)
cop(evident-7, seems-5)
advmod(evident-7, self-6)
root(ROOT-0, evident-7)
complm(make-12, that-8)
nsubj(make-12, ID-9)
aux(make-12, can-10)
neg(make-12, not-11)
ccomp(evident-7, make-12)
det(predictions-14, any-13)
dobj(make-12, predictions-14)
complm(based-19, that-16)
nsubjpass(based-19, it-17)
auxpass(based-19, is-18)
ccomp(evident-7, based-19)
conj_or(make-12, based-19)
amod(evidence-22, positive-21)
prep_on(based-19, evidence-22)

(ROOT
  (SBARQ
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (PP (IN without)
      (NP
        (NP (RB knowing) (DT the) (NNS intentions)
          (CC or)
          (NNS capabilities))
        (PP (IN of)
          (NP (DT the) (NN Designer)))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (PRP one))
      (VP (VB make)
        (NP (DT any) (NNS predictions))))
    (. ?)))

prep_after(make-17, all-2)
advmod(intentions-7, knowing-5)
det(intentions-7, the-6)
prep_without(make-17, intentions-7)
conj_or(intentions-7, capabilities-9)
prep_without(make-17, capabilities-9)
det(Designer-12, the-11)
prep_of(intentions-7, Designer-12)
advmod(make-17, how-14)
aux(make-17, can-15)
nsubj(make-17, one-16)
root(ROOT-0, make-17)
det(predictions-19, any-18)
dobj(make-17, predictions-19)

(ROOT
  (S
    (S
      (NP (NN Anything))
      (VP (VBZ goes)))
    (: --)
    (S
      (PP (IN As)
        (PP (TO to)
          (NP (DT the) (JJ scientific) (NN vacuity))))
      (, ,)
      (NP (NNP Ryan) (NNP Nichols))
      (VP (VBZ states)
        (S
          (NP (PRP it))
          (NP
            (NP (JJS best))
            (PRN (: --)
              (NP (NNP Ryan) (NNP Nichols))
              (: --)))
          (PP (IN In)
            (NP
              (NP (PRP$ my) (NN argument))
              (PP (IN against)
                (NP (NNP Intelligent) (NNP Design) (NNP Theory))))))
        (SBAR
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD will) (RB not)
                (VP (VB contend)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBZ is) (RB not)
                        (ADJP (JJ falsifiable)))))))))
          (CC or)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ implies)
                (NP (NNS contradictions))))))))
    (. .)))

nsubj(goes-2, Anything-1)
root(ROOT-0, goes-2)
prepc_as_to(states-12, to-5)
det(vacuity-8, the-6)
amod(vacuity-8, scientific-7)
pobj(states-12, vacuity-8)
nn(Nichols-11, Ryan-10)
nsubj(states-12, Nichols-11)
parataxis(goes-2, states-12)
nsubj(best-14, it-13)
xcomp(states-12, best-14)
nn(Nichols-17, Ryan-16)
dep(best-14, Nichols-17)
dep(best-14, In-19)
poss(argument-21, my-20)
pobj(In-19, argument-21)
nn(Theory-25, Intelligent-23)
nn(Theory-25, Design-24)
prep_against(argument-21, Theory-25)
nsubj(contend-29, I-26)
aux(contend-29, will-27)
neg(contend-29, not-28)
ccomp(states-12, contend-29)
complm(falsifiable-34, that-30)
nsubj(falsifiable-34, it-31)
cop(falsifiable-34, is-32)
neg(falsifiable-34, not-33)
ccomp(contend-29, falsifiable-34)
complm(implies-38, that-36)
nsubj(implies-38, it-37)
ccomp(states-12, implies-38)
conj_or(contend-29, implies-38)
dobj(implies-38, contradictions-39)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB ll))
    (VP (VBP argue)
      (SBAR (IN that)
        (S
          (NP (NNP Intelligent) (NNP Design) (NNP Theory) (NN doesn) (NN t))
          (VP (VBP imply)
            (NP (NN anything))
            (ADVP (IN at) (DT all))
            (, ,)
            (S
              (ADJP (JJ i.e.))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ has)
                    (NP (DT no) (NN content))))))))))
    (. .)))

nsubj(argue-3, I-1)
advmod(argue-3, ll-2)
root(ROOT-0, argue-3)
complm(imply-10, that-4)
nn(t-9, Intelligent-5)
nn(t-9, Design-6)
nn(t-9, Theory-7)
nn(t-9, doesn-8)
nsubj(imply-10, t-9)
ccomp(argue-3, imply-10)
dobj(imply-10, anything-11)
advmod(imply-10, at-12)
pobj(at-12, all-13)
dep(has-17, i.e.-15)
nsubj(has-17, it-16)
dep(imply-10, has-17)
det(content-19, no-18)
dobj(has-17, content-19)

(ROOT
  (S
    (PP (IN By)
      (NP (NN content)))
    (NP (PRP I))
    (VP (VBP refer)
      (PP (TO to)
        (NP
          (NP (DT a) (NN body))
          (PP (IN of)
            (NP
              (NP (JJ determinate) (NNS principles)
                (CC and)
                (NNS propositions))
              (VP (VBN entailed)
                (PP (IN by)
                  (NP (DT those) (NNS principles)))))))))
    (. .)))

prep_by(refer-4, content-2)
nsubj(refer-4, I-3)
root(ROOT-0, refer-4)
det(body-7, a-6)
prep_to(refer-4, body-7)
amod(principles-10, determinate-9)
prep_of(body-7, principles-10)
prep_of(body-7, propositions-12)
conj_and(principles-10, propositions-12)
partmod(principles-10, entailed-13)
det(principles-16, those-15)
agent(entailed-13, principles-16)

(ROOT
  (S
    (PP (IN By)
      (NP (NN principle)))
    (NP (PRP I))
    (VP (VBP refer)
      (PP (TO to)
        (NP
          (NP (DT a) (NN proposition))
          (PP (IN of)
            (NP (JJ central) (NN importance)))))
      (PP (TO to)
        (NP
          (NP (DT the) (NN theory))
          (PP (IN at)
            (NP (NN issue))))))
    (. .)))

prep_by(refer-4, principle-2)
nsubj(refer-4, I-3)
root(ROOT-0, refer-4)
det(proposition-7, a-6)
prep_to(refer-4, proposition-7)
amod(importance-10, central-9)
prep_of(proposition-7, importance-10)
det(theory-13, the-12)
prep_to(refer-4, theory-13)
prep_at(theory-13, issue-15)

(ROOT
  (S
    (PP (IN By)
      (NP (JJ determinate) (NN principle)))
    (NP (PRP I))
    (VP (VBP refer)
      (PP (TO to)
        (NP
          (NP (DT a) (NN proposition))
          (PP (IN of)
            (NP (JJ central) (NN importance)))))
      (PP (TO to)
        (NP
          (NP (DT the) (NN theory))
          (PP (IN at)
            (NP (NN issue)))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP
                (NP (DT the) (NNS extensions))
                (PP (IN of)
                  (NP (PRP$ its) (NNS terms))))
              (VP (VBP are)
                (ADVP (RB clearly))
                (VP (VBN defined))))))))
    (. .)))

amod(principle-3, determinate-2)
prep_by(refer-5, principle-3)
nsubj(refer-5, I-4)
root(ROOT-0, refer-5)
det(proposition-8, a-7)
prep_to(refer-5, proposition-8)
amod(importance-11, central-10)
prep_of(proposition-8, importance-11)
det(theory-14, the-13)
prep_to(refer-5, theory-14)
prep_at(theory-14, issue-16)
rel(defined-26, which-18)
det(extensions-20, the-19)
nsubjpass(defined-26, extensions-20)
poss(terms-23, its-22)
prep_of(extensions-20, terms-23)
auxpass(defined-26, are-24)
advmod(defined-26, clearly-25)
rcmod(theory-14, defined-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP ll)
      (VP (VB evaluate)
        (NP
          (NP (DT the) (NN work))
          (PP (IN of)
            (NP (NNP William) (NNP Dembski))))
        (SBAR (IN because)
          (S
            (NP (PRP he))
            (VP
              (VP (VBZ specifies)
                (NP (PRP$ his) (NN methodology))
                (PP (IN in)
                  (NP (NN detail))))
              (, ,)
              (VP (VBZ thinks)
                (SBAR
                  (S
                    (NP (NNP Intelligent) (NNP Design) (NNP Theory))
                    (VP (VBZ is)
                      (ADJP (JJ contentful))))))
              (CC and)
              (VP (VBZ thinks)
                (NP
                  (NP (NNP Intelligent) (NNP Design) (NNP Theory)
                    (PRN (-LRB- -LRB-)
                      (NP (NNP hereafter) (NNP IDT))
                      (-RRB- -RRB-))
                    (NNS grounds))
                  (NP (DT an) (JJ empirical) (NN research) (NN program)))))))))
    (. .)))

nsubj(ll-2, I-1)
root(ROOT-0, ll-2)
xcomp(ll-2, evaluate-3)
det(work-5, the-4)
dobj(evaluate-3, work-5)
nn(Dembski-8, William-7)
prep_of(work-5, Dembski-8)
mark(specifies-11, because-9)
nsubj(specifies-11, he-10)
nsubj(thinks-17, he-10)
nsubj(thinks-24, he-10)
advcl(evaluate-3, specifies-11)
poss(methodology-13, his-12)
dobj(specifies-11, methodology-13)
prep_in(specifies-11, detail-15)
advcl(evaluate-3, thinks-17)
conj_and(specifies-11, thinks-17)
nn(Theory-20, Intelligent-18)
nn(Theory-20, Design-19)
nsubj(contentful-22, Theory-20)
cop(contentful-22, is-21)
ccomp(thinks-17, contentful-22)
advcl(evaluate-3, thinks-24)
conj_and(specifies-11, thinks-24)
nn(grounds-32, Intelligent-25)
nn(grounds-32, Design-26)
nn(grounds-32, Theory-27)
nn(IDT-30, hereafter-29)
abbrev(grounds-32, IDT-30)
dobj(thinks-24, grounds-32)
iobj(thinks-24, grounds-32)
det(program-36, an-33)
amod(program-36, empirical-34)
nn(program-36, research-35)
dobj(thinks-24, program-36)
dep(grounds-32, program-36)

(ROOT
  (S
    (ADVP (RB Later))
    (PP (IN in)
      (NP (DT the) (NN paper)))
    (NP (PRP I))
    (VP (VBP assess)
      (NP
        (NP (DT a) (JJ recent) (NN trend))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (NNP IDT))
            (VP (VBZ is)
              (ADVP (RB allegedly))
              (VP (VBN found)
                (NP (DT a) (JJR better) (NN home))
                (PP (IN as)
                  (NP
                    (NP (DT a) (JJ metascientific) (NNS hypothesis))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ serves)
                          (PP (IN as)
                            (NP
                              (NP (DT a) (NN paradigm))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBZ catalyzes)
                                    (NP (NN research))))))))))))))))))
    (. .)))

advmod(assess-6, Later-1)
det(paper-4, the-3)
prep_in(assess-6, paper-4)
nsubj(assess-6, I-5)
root(ROOT-0, assess-6)
det(trend-9, a-7)
amod(trend-9, recent-8)
dobj(assess-6, trend-9)
rel(found-15, which-11)
nsubjpass(found-15, IDT-12)
auxpass(found-15, is-13)
advmod(found-15, allegedly-14)
rcmod(trend-9, found-15)
det(home-18, a-16)
amod(home-18, better-17)
dobj(found-15, home-18)
det(hypothesis-22, a-20)
amod(hypothesis-22, metascientific-21)
prep_as(found-15, hypothesis-22)
nsubj(serves-25, hypothesis-22)
rcmod(hypothesis-22, serves-25)
det(paradigm-28, a-27)
prep_as(serves-25, paradigm-28)
nsubj(catalyzes-30, paradigm-28)
rcmod(paradigm-28, catalyzes-30)
dobj(catalyzes-30, research-31)

(ROOT
  (SBARQ (RB So)
    (WHNP (WP what))
    (SQ (VBZ is)
      (ADVP (RB really))
      (VP (VBN meant)
        (PP (IN by)
          (NP (DT these) (NNS terms)))))
    (. ?)))

advmod(meant-5, So-1)
nsubjpass(meant-5, what-2)
auxpass(meant-5, is-3)
advmod(meant-5, really-4)
root(ROOT-0, meant-5)
det(terms-8, these-7)
agent(meant-5, terms-8)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB ll))
    (VP (VBP conclude)
      (SBAR (IN that)
        (PRN (, ,)
          (SBAR (IN whether)
            (S
              (NP (NNP IDT))
              (VP (VBZ is)
                (VP (VBN construed)
                  (PP (IN as)
                    (NP (DT a) (JJ scientific)
                      (CC or)
                      (JJ metascientific) (NNS hypothesis)))))))
          (, ,))
        (S
          (NP (NNP IDT))
          (VP (VBZ lacks)
            (ADJP (JJ content))))))
    (. .)))

nsubj(conclude-3, I-1)
advmod(conclude-3, ll-2)
root(ROOT-0, conclude-3)
complm(lacks-18, that-4)
dep(construed-9, whether-6)
nsubjpass(construed-9, IDT-7)
auxpass(construed-9, is-8)
dep(lacks-18, construed-9)
det(hypothesis-15, a-11)
amod(hypothesis-15, scientific-12)
conj_or(scientific-12, metascientific-14)
amod(hypothesis-15, metascientific-14)
prep_as(construed-9, hypothesis-15)
nsubj(lacks-18, IDT-17)
ccomp(conclude-3, lacks-18)
acomp(lacks-18, content-19)

(ROOT
  (NP
    (NP (NN Source))
    (: :)
    (NP (NNP Ryan) (NNP Nichols))
    (, ,)
    (NP
      (NP (`` ``)
        (NP (NNP Scientific) (CD content) (, ,) (CD testability))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NN vacuity))
          (PP (IN of)
            (NP (JJ intelligent) (NN design) (NN theory))))
        ('' ''))
      (, ,)
      (NP (DT The) (JJ American)
        (ADJP (NNP Catholic) (JJ philosophical))
        (NN quarterly)))
    (, ,)
    (NP (CD 2003))
    (, ,)
    (NP (NN vol))
    (. .)))

root(ROOT-0, Source-1)
nn(Nichols-4, Ryan-3)
dep(Source-1, Nichols-4)
appos(Source-1, Scientific-7)
num(Scientific-7, content-8)
num(Scientific-7, testability-10)
det(vacuity-14, the-13)
appos(Source-1, vacuity-14)
conj_and(Scientific-7, vacuity-14)
amod(theory-18, intelligent-16)
nn(theory-18, design-17)
prep_of(vacuity-14, theory-18)
det(quarterly-25, The-21)
amod(quarterly-25, American-22)
amod(philosophical-24, Catholic-23)
amod(quarterly-25, philosophical-24)
appos(Scientific-7, quarterly-25)
appos(Source-1, 2003-27)
appos(Source-1, vol-29)

(ROOT
  (S
    (NP
      (NP (CD 77))
      (, ,)
      (NP (NNS no4))
      (, ,))
    (VP (VBP pp))
    (. .)))

nsubj(pp-5, 77-1)
appos(77-1, no4-3)
root(ROOT-0, pp-5)

(ROOT
  (NP
    (NP (JJ 591-611From))
    (NP
      (NP (PRP$ my) (NN contribution))
      (PP (IN at)
        (NP (CD http:\/\/www.pandasthumb.org\/archives\/2006\/05\/post_17.html))))))

root(ROOT-0, 591-611From-1)
poss(contribution-3, my-2)
dep(591-611From-1, contribution-3)
prep_at(contribution-3, http:\/\/www.pandasthumb.org\/archives\/2006\/05\/post_17.html-5)

(ROOT
  (S
    (NP (NNP Specification))
    (ADVP (RB basically))
    (VP (VBZ means)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ exists)
              (NP
                (NP (DT an) (JJ independent) (NN description))
                (PP (IN of)
                  (NP (DT the) (NN event)
                    (CC or)
                    (NN system)))))))
        (, ,)
        (CC and)
        (SBAR (IN as)
          (S
            (NP (NNP Dembski))
            (VP (VBZ points)
              (PRT (RP out))
              (SBAR (IN in)
                (S
                  (NP (NN biology) (NN specification))
                  (VP (VBZ is)
                    (ADVP (RB trivially))
                    (VP (VBN met)
                      (PP (IN by)
                        (NP (NN function))))))))))))
    (. .)))

nsubj(means-3, Specification-1)
advmod(means-3, basically-2)
root(ROOT-0, means-3)
complm(exists-6, that-4)
expl(exists-6, there-5)
ccomp(means-3, exists-6)
det(description-9, an-7)
amod(description-9, independent-8)
dobj(exists-6, description-9)
nsubj(exists-6, description-9)
det(event-12, the-11)
prep_of(description-9, event-12)
prep_of(description-9, system-14)
conj_or(event-12, system-14)
mark(points-19, as-17)
nsubj(points-19, Dembski-18)
ccomp(means-3, points-19)
conj_and(exists-6, points-19)
prt(points-19, out-20)
mark(met-26, in-21)
nn(specification-23, biology-22)
nsubjpass(met-26, specification-23)
auxpass(met-26, is-24)
advmod(met-26, trivially-25)
advcl(points-19, met-26)
agent(met-26, function-28)

(ROOT
  (SBARQ (RB So)
    (WHNP (WP what))
    (SQ
      (VP (IN about)
        (VP (VBZ complexity))))
    (. ?)))

advmod(complexity-4, So-1)
nsubj(complexity-4, what-2)
dep(complexity-4, about-3)
root(ROOT-0, complexity-4)

(ROOT
  (S
    (PP (IN Unlike)
      (NP
        (NP (DT the)
          (ADJP (RBR more) (JJ common))
          (NN meaning))
        (PP (IN of)
          (NP (DT the) (NN term)))))
    (, ,)
    (NP
      (NP (NN complexity))
      (PP (IN in)
        (NP (NNP ID) (NNP speak))))
    (VP
      (VP (VBZ refers)
        (PP (TO to)
          (NP
            (NP (NN something))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (MD can)
                  (ADVP (RB not))
                  (PRN (-LRB- -LRB-)
                    (ADVP (RB yet))
                    (-RRB- -RRB-))
                  (VP (VB be)
                    (VP (VBN explained)
                      (PP (IN by)
                        (NP (NN regularity)))))))))))
      (CC and\/or)
      (VP (VBP chance)))
    (. .)))

det(meaning-5, the-2)
advmod(common-4, more-3)
amod(meaning-5, common-4)
prep_unlike(refers-14, meaning-5)
det(term-8, the-7)
prep_of(meaning-5, term-8)
nsubj(refers-14, complexity-10)
nsubj(chance-28, complexity-10)
nn(speak-13, ID-12)
prep_in(complexity-10, speak-13)
root(ROOT-0, refers-14)
prep_to(refers-14, something-16)
nsubjpass(explained-24, something-16)
aux(explained-24, can-18)
neg(explained-24, not-19)
dep(explained-24, yet-21)
auxpass(explained-24, be-23)
rcmod(something-16, explained-24)
agent(explained-24, regularity-26)
conj_and\/or(refers-14, chance-28)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT these) (NNS requirements))
        (VP (VBP are)
          (VP (VBN met)))))
    (, ,)
    (NP (DT a) (NN design) (NN inference))
    (VP (VBZ is)
      (VP (VBN triggered)))
    (. .)))

advmod(met-5, When-1)
det(requirements-3, these-2)
nsubjpass(met-5, requirements-3)
auxpass(met-5, are-4)
advcl(triggered-11, met-5)
det(inference-9, a-7)
nn(inference-9, design-8)
nsubjpass(triggered-11, inference-9)
auxpass(triggered-11, is-10)
root(ROOT-0, triggered-11)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP (DT a) (NN design) (NN inference))
    (ADVP (RB bascially))
    (VP
      (VP (VBZ states)
        (S
          (NP (DT that) (NN something))
          (ADJP (JJ functional))
          (SBAR
            (WHNP (WP$ whose) (NNS origin))
            (S
              (NP (PRP we))
              (VP (VBP do)
                (ADVP (RB not)
                  (PRN (-LRB- -LRB-)
                    (ADVP (RB yet))
                    (-RRB- -RRB-))
                  (S
                    (VP (VB understand)))))))))
      (CC and)
      (VP (VBZ is)
        (ADVP (RB thus))
        (ADJP (JJ specified)
          (CC and)
          (JJ complex)))
      (, ,)
      (VP (VBZ is)
        (VP
          (ADVP (RB also))
          (VBN designed))))
    (. .)))

amod(words-3, other-2)
prep_in(states-9, words-3)
det(inference-7, a-5)
nn(inference-7, design-6)
nsubj(states-9, inference-7)
nsubj(specified-25, inference-7)
nsubjpass(designed-31, inference-7)
advmod(states-9, bascially-8)
root(ROOT-0, states-9)
det(something-11, that-10)
nsubj(do-16, something-11)
dep(do-16, functional-12)
poss(origin-14, whose-13)
dobj(do-16, origin-14)
nsubj(do-16, we-15)
xcomp(states-9, do-16)
neg(do-16, not-17)
dep(not-17, yet-19)
dep(not-17, understand-21)
cop(specified-25, is-23)
advmod(specified-25, thus-24)
conj_and(states-9, specified-25)
conj_and(states-9, complex-27)
conj_and(specified-25, complex-27)
auxpass(designed-31, is-29)
advmod(designed-31, also-30)
conj_and(states-9, designed-31)

(ROOT
  (S (CC Or)
    (S
      (VP (TO to)
        (VP (VB use)
          (SBAR
            (S
              (NP (NNP Del) (NNP Ratzsch))
              (VP (VBZ s)
                (NP (NN description))))))))
    (: :)
    (S
      (NP (NNP Design))
      (VP (VBZ is)
        (NP
          (NP (DT the) (VBN set) (JJ theoretic) (NN complement))
          (PP (IN of)
            (NP (DT the) (NN disjunction) (NN regularity-or-chance))))))
    (. .)))

cc(use-3, Or-1)
aux(use-3, to-2)
root(ROOT-0, use-3)
nn(Ratzsch-5, Del-4)
nsubj(description-7, Ratzsch-5)
cop(description-7, s-6)
ccomp(use-3, description-7)
nsubj(complement-14, Design-9)
cop(complement-14, is-10)
det(complement-14, the-11)
amod(complement-14, set-12)
amod(complement-14, theoretic-13)
parataxis(use-3, complement-14)
det(regularity-or-chance-18, the-16)
nn(regularity-or-chance-18, disjunction-17)
prep_of(complement-14, regularity-or-chance-18)

(ROOT
  (S
    (NP (DT This))
    (ADVP (RB clearly))
    (VP (VBZ qualifiies)
      (PP (IN as)
        (NP
          (NP (DT an) (NN argument))
          (PP (IN from)
            (NP (NN ignorance)))))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (DT a) (NN gap) (NN argument)))))
    (. .)))

nsubj(qualifiies-3, This-1)
advmod(qualifiies-3, clearly-2)
root(ROOT-0, qualifiies-3)
det(argument-6, an-5)
prep_as(qualifiies-3, argument-6)
prep_from(argument-6, ignorance-8)
advmod(known-11, also-10)
dep(qualifiies-3, known-11)
det(argument-15, a-13)
nn(argument-15, gap-14)
prep_as(known-11, argument-15)

(ROOT
  (S
    (S
      (ADVP (IN So) (RB far))
      (ADJP (RB so) (JJ good)))
    (, ,)
    (NP (NNP Intelligent) (NNP Design))
    (VP (VBZ is)
      (VP (VBN inferred)
        (PP
          (PP (VBN based)
            (PP (IN on)
              (NP (PRP$ our) (NN ignorance))))
          (RB not) (IN because)
          (PP (IN of)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP we))
                (VP (VBP know))))))))
    (. .)))

advmod(good-4, So-1)
advmod(So-1, far-2)
advmod(good-4, so-3)
ccomp(inferred-9, good-4)
nn(Design-7, Intelligent-6)
nsubjpass(inferred-9, Design-7)
auxpass(inferred-9, is-8)
root(ROOT-0, inferred-9)
prepc_based_on(inferred-9, on-11)
poss(ignorance-13, our-12)
prep_because_of(inferred-9, ignorance-13)
neg(inferred-9, not-14)
pcomp(inferred-9, of-16)
dobj(know-19, what-17)
nsubj(know-19, we-18)
pcomp(inferred-9, know-19)

