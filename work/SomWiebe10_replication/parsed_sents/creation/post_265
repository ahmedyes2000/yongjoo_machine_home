(ROOT
  (S
    (S
      (S
        (VP (VBZ is)
          (NP
            (NP (DT a) (JJ common) (JJ creationist) (NN position))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD misunderstand)
                  (SBAR (IN that)
                    (S
                      (NP (JJS most) (NNS mutations))
                      (VP (VBP are)
                        (ADJP (RB mostly) (JJ neutral)))))))))))
      (, ,)
      (NP (JJ few))
      (VP (VBP are)
        (ADJP (RB strongly) (JJ detrimental))))
    (CC and)
    (S
      (NP (DT some))
      (VP (VBP are)
        (ADJP (JJ beneficial))))
    (. .)))

cop(position-5, is-1)
det(position-5, a-2)
amod(position-5, common-3)
amod(position-5, creationist-4)
nsubj(misunderstand-7, position-5)
ccomp(detrimental-18, position-5)
rcmod(position-5, misunderstand-7)
complm(neutral-13, that-8)
amod(mutations-10, most-9)
nsubj(neutral-13, mutations-10)
cop(neutral-13, are-11)
advmod(neutral-13, mostly-12)
ccomp(misunderstand-7, neutral-13)
nsubj(detrimental-18, few-15)
cop(detrimental-18, are-16)
advmod(detrimental-18, strongly-17)
root(ROOT-0, detrimental-18)
nsubj(beneficial-22, some-20)
cop(beneficial-22, are-21)
conj_and(detrimental-18, beneficial-22)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (VP (VB remember)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN definition))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN effect))
                  (PP (IN of)
                    (NP (NNS mutations))))))
            (VP (VBZ depends)
              (ADVP (RB strongly))
              (PP (IN on)
                (NP (DT the) (NN environment))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT that))
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is)
              (ADJP
                (ADJP (JJ beneficial)
                  (CC or)
                  (JJ detrimental)
                  (CC or)
                  (JJ neutral))
                (PP (IN in)
                  (NP (CD one) (NN environment))))))))
      (VP (MD can)
        (VP (VB take)
          (PP (IN on)
            (NP
              (NP (DT a) (JJ different) (`` ``) (NN shape) ('' ''))
              (PP (IN in)
                (NP (DT another) (NN environment))))))))
    (. .)))

advmod(remember-2, Now-1)
root(ROOT-0, remember-2)
complm(depends-11, that-3)
det(definition-5, the-4)
nsubj(depends-11, definition-5)
det(effect-8, the-7)
prep_of(definition-5, effect-8)
prep_of(effect-8, mutations-10)
ccomp(remember-2, depends-11)
advmod(depends-11, strongly-12)
det(environment-15, the-14)
prep_on(depends-11, environment-15)
nsubj(detrimental-23, that-18)
nsubj(neutral-25, that-18)
nsubj(take-30, that-18)
cop(detrimental-23, is-20)
dep(detrimental-23, beneficial-21)
rcmod(that-18, detrimental-23)
rcmod(that-18, neutral-25)
conj_or(detrimental-23, neutral-25)
num(environment-28, one-27)
prep_in(detrimental-23, environment-28)
aux(take-30, can-29)
conj_and(remember-2, take-30)
det(shape-35, a-32)
amod(shape-35, different-33)
prep_on(take-30, shape-35)
det(environment-39, another-38)
prep_in(shape-35, environment-39)

(ROOT
  (S
    (SBAR
      (ADVP (RB However))
      (IN since)
      (S
        (NP (NNP A)
          (CC or)
          (NNP B))
        (VP (VBP are)
          (ADVP (RB already))
          (NP
            (NP (NN part))
            (PP (IN of)
              (NP
                (NP (DT a) (NN subset))
                (PP (IN of)
                  (NP (DT the) (NN population)))))))))
    (, ,)
    (NP
      (NP (DT all))
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP need)))))
    (VP (VBZ is)
      (NP
        (NP (DT another) (NN mutation) (NN event) (NN B))
        (CC or)
        (NP (NNP A)))
      (, ,)
      (S
        (VP (TO to)
          (VP
            (ADVP (RB suddenly))
            (VB expose)
            (NP (DT a)
              (ADJP (RB strongly) (JJ selective))
              (NN advantage))))))
    (. .)))

advmod(part-8, However-1)
dep(part-8, since-2)
nsubj(part-8, A-3)
conj_or(A-3, B-5)
nsubj(part-8, B-5)
cop(part-8, are-6)
advmod(part-8, already-7)
advcl(B-23, part-8)
det(subset-11, a-10)
prep_of(part-8, subset-11)
det(population-14, the-13)
prep_of(subset-11, population-14)
dobj(need-18, all-16)
nsubj(B-23, all-16)
xsubj(expose-29, all-16)
nsubj(need-18, they-17)
rcmod(all-16, need-18)
cop(B-23, is-19)
det(B-23, another-20)
nn(B-23, mutation-21)
nn(B-23, event-22)
root(ROOT-0, B-23)
conj_or(B-23, A-25)
aux(expose-29, to-27)
advmod(expose-29, suddenly-28)
xcomp(B-23, expose-29)
det(advantage-33, a-30)
advmod(selective-32, strongly-31)
amod(advantage-33, selective-32)
dobj(expose-29, advantage-33)

(ROOT
  (S
    (NP
      (NP (DT The) (NN probability))
      (PP (IN of)
        (NP (PDT such) (DT an) (NN event))))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN increased)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (NNP A)
                (CC or)
                (NNP B))
              (VP (VBZ has)
                (VP (VBN come)
                  (PP (TO to)
                    (NP
                      (NP (NN fixation) (NN piggy) (NN backing))
                      (PP (IN on)
                        (NP (DT another) (JJ selective) (NN event))))))))))))
    (. .)))

det(probability-2, The-1)
nsubjpass(increased-9, probability-2)
predet(event-6, such-4)
det(event-6, an-5)
prep_of(probability-2, event-6)
aux(increased-9, can-7)
auxpass(increased-9, be-8)
root(ROOT-0, increased-9)
advmod(come-15, when-10)
nsubj(come-15, A-11)
conj_or(A-11, B-13)
nsubj(come-15, B-13)
aux(come-15, has-14)
advcl(increased-9, come-15)
nn(backing-19, fixation-17)
nn(backing-19, piggy-18)
prep_to(come-15, backing-19)
det(event-23, another-21)
amod(event-23, selective-22)
prep_on(backing-19, event-23)

(ROOT
  (SINV
    (ADVP (RB Not) (RB only))
    (VBZ does)
    (NP (DT this))
    (VP (VB affect)
      (NP
        (NP (NNP Behe) (POS 's))
        (JJ simplistic) (NNS calculcations))
      (PP (CC but)
        (PP (IN in)
          (NP
            (NP (JJ real) (NN life))
            (SBAR
              (S
                (NP (PRP we))
                (ADVP (RB actually))
                (VP (VBP have)
                  (NP
                    (NP (NN evidence))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN existence))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (JJ many) (NNS intermediates))
                            (PP (IN between)
                              (NP (DT no) (NN resistance))))))))
                  (PP (TO to)
                    (PP (TO to)
                      (NP (JJ full) (NN resistance)))))))))))
    (. .)))

dep(only-2, Not-1)
advmod(affect-5, only-2)
aux(affect-5, does-3)
nsubj(affect-5, this-4)
root(ROOT-0, affect-5)
poss(calculcations-9, Behe-6)
amod(calculcations-9, simplistic-8)
dobj(affect-5, calculcations-9)
cc(affect-5, but-10)
amod(life-13, real-12)
prep_in(affect-5, life-13)
nsubj(have-16, we-14)
advmod(have-16, actually-15)
rcmod(life-13, have-16)
dobj(have-16, evidence-17)
det(existence-20, the-19)
prep_of(evidence-17, existence-20)
det(intermediates-24, the-22)
amod(intermediates-24, many-23)
prep_of(existence-20, intermediates-24)
det(resistance-27, no-26)
prep_between(intermediates-24, resistance-27)
prep(have-16, to-28)
pcomp(to-28, to-29)
amod(resistance-31, full-30)
prep_to(to-28, resistance-31)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP (PRP we))
    (VP (MD can)
      (VP (VB observe)
        (NP
          (NP (DT the) (JJ individual) (NNS steps))
          (SBAR
            (WHPP (IN through)
              (WHNP (WDT which)))
            (S
              (NP (DT this) (NN resistance))
              (VP (MD could)
                (VP (VB have)
                  (VP (VBN evolved)))))))))
    (. .)))

amod(words-3, other-2)
prep_in(observe-7, words-3)
nsubj(observe-7, we-5)
aux(observe-7, can-6)
root(ROOT-0, observe-7)
det(steps-10, the-8)
amod(steps-10, individual-9)
dobj(observe-7, steps-10)
rel(evolved-17, which-12)
det(resistance-14, this-13)
nsubj(evolved-17, resistance-14)
aux(evolved-17, could-15)
aux(evolved-17, have-16)
rcmod(steps-10, evolved-17)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP
      (NP (DT the) (NN suggestion))
      (SBAR (IN that)
        (S
          (NP (NNS intermediates))
          (VP (VBP are)
            (PP (IN without)
              (NP (DT any) (JJ selective) (NN value)))))))
    (VP (VBZ is)
      (VP (VBN shown)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ erroneous)))))))
    (. .)))

amod(words-3, other-2)
prep_in(shown-15, words-3)
det(suggestion-6, the-5)
nsubjpass(shown-15, suggestion-6)
xsubj(erroneous-18, suggestion-6)
complm(are-9, that-7)
nsubj(are-9, intermediates-8)
dep(suggestion-6, are-9)
det(value-13, any-11)
amod(value-13, selective-12)
prep_without(are-9, value-13)
auxpass(shown-15, is-14)
root(ROOT-0, shown-15)
aux(erroneous-18, to-16)
cop(erroneous-18, be-17)
xcomp(shown-15, erroneous-18)

(ROOT
  (S
    (PP (IN As)
      (PP (TO to)
        (NP (NN gene) (NN duplication)
          (CC and)
          (NN co-option))))
    (, ,)
    (NP
      (NP (DT the) (NN reason))
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP we))
          (VP (VBP see)
            (NP (NN evolution))))))
    (VP (VBP re-using)
      (SBAR (IN so)
        (S
          (NP (JJ many) (`` ``) (NNS modules) ('' ''))
          (VP (VBZ is)
            (ADJP (JJ simple))))))
    (. .)))

prepc_as_to(re-using-14, to-2)
nn(duplication-4, gene-3)
pobj(re-using-14, duplication-4)
conj_and(duplication-4, co-option-6)
pobj(re-using-14, co-option-6)
det(reason-9, the-8)
nsubj(re-using-14, reason-9)
advmod(see-12, why-10)
nsubj(see-12, we-11)
rcmod(reason-9, see-12)
dobj(see-12, evolution-13)
root(ROOT-0, re-using-14)
mark(simple-21, so-15)
amod(modules-18, many-16)
nsubj(simple-21, modules-18)
cop(simple-21, is-20)
advcl(re-using-14, simple-21)

(ROOT
  (S
    (S
      (VP (VBG Evolving)
        (NP
          (NP (DT a) (NN system))
          (PP (IN of)
            (NP (NN n) (NNS components))))))
    (VP (MD can)
      (VP (VB reduce)
        (PP (TO to)
          (NP
            (NP (DT a) (NN log))
            (PRN (-LRB- -LRB-)
              (NP (NN n))
              (-RRB- -RRB-))))
        (NP (NN time))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NNS modules))
            (VP (VBP are)
              (ADJP (JJ re-used)))))))
    (. .)))

csubj(reduce-8, Evolving-1)
det(system-3, a-2)
dobj(Evolving-1, system-3)
nn(components-6, n-5)
prep_of(system-3, components-6)
aux(reduce-8, can-7)
root(ROOT-0, reduce-8)
det(log-11, a-10)
prep_to(reduce-8, log-11)
appos(log-11, n-13)
dobj(reduce-8, time-15)
advmod(re-used-19, when-16)
nsubj(re-used-19, modules-17)
cop(re-used-19, are-18)
advcl(reduce-8, re-used-19)

(ROOT
  (S
    (ADVP (IN So)
      (PP (IN in)
        (NP
          (NP (NN case))
          (PP (IN of)
            (NP (CD 1000) (NNS components))))))
    (, ,)
    (NP (DT this))
    (VP (MD would)
      (VP (VB reduce)
        (NP (DT the) (NN time))
        (PP (IN from)
          (NP
            (NP (NNP O))
            (PRN (-LRB- -LRB-)
              (NP (NN n))
              (-RRB- -RRB-))))
        (PP
          (PP (TO to)
            (NP (NNP O)))
          (PRN (-LRB- -LRB-)
            (S
              (VP (VB log)
                (NP (NN n))))
            (-RRB- -RRB-))
          (CC or)
          (PP (IN from)
            (NP (CD 10) (JJ ^) (NN n)
              (S
                (VP (TO to)
                  (VP (VB n.)
                    (ADVP
                      (ADVP (RB Not)
                        (NP
                          (NP (DT a) (JJ bad) (NN reduction))
                          (PP (IN in)
                            (NP (NN time)))))
                      (S (MD would)
                        (NP (PRP you))
                        (VP (RB not)
                          (VP (VB agree)))))))))))))
    (. ?)))

advmod(reduce-10, So-1)
num(components-6, 1000-5)
prep_in_case_of(So-1, components-6)
nsubj(reduce-10, this-8)
nsubj(reduce-10', this-8)
aux(reduce-10, would-9)
root(ROOT-0, reduce-10)
conj_or(reduce-10, reduce-10')
det(time-12, the-11)
dobj(reduce-10, time-12)
prep_from(reduce-10, O-14)
appos(O-14, n-16)
prep_to(reduce-10, O-19)
dep(reduce-10, log-21)
dobj(log-21, n-22)
num(n-28, 10-26)
amod(n-28, ^-27)
prep_from(reduce-10', n-28)
aux(n.-30, to-29)
infmod(n-28, n.-30)
advmod(n.-30, Not-31)
det(reduction-34, a-32)
amod(reduction-34, bad-33)
pobj(Not-31, reduction-34)
prep_in(reduction-34, time-36)
dep(agree-40, would-37)
nsubj(agree-40, you-38)
neg(agree-40, not-39)
dep(Not-31, agree-40)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD was)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNP Herbert) (NNP Simon))
          (VP (VBD argued)
            (PP (IN in)
              (NP (PRP$ his) (JJ early) (JJ 20th) (NN century) (NNS papers)))
            (PP (IN on)
              (NP (NN complexity)
                (CC and)
                (NN modularity)))))))
    (. .)))

nsubj(was-2, This-1)
root(ROOT-0, was-2)
dobj(argued-6, what-3)
nn(Simon-5, Herbert-4)
nsubj(argued-6, Simon-5)
ccomp(was-2, argued-6)
poss(papers-12, his-8)
amod(papers-12, early-9)
amod(papers-12, 20th-10)
nn(papers-12, century-11)
prep_in(argued-6, papers-12)
prep_on(argued-6, complexity-14)
prep_on(argued-6, modularity-16)
conj_and(complexity-14, modularity-16)

(ROOT
  (S (CC And)
    (NP (PRP one))
    (VP (MD should) (RB not)
      (VP (VB be)
        (ADJP (JJ surprised))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP have)
              (VP (VBN found)
                (PP (IN at)
                  (NP
                    (NP (JJ many) (NNS levels))
                    (PP (IN of)
                      (NP (NN life)))))))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP
              (NP (NN scale) (JJ free) (NNS networks))
              (CC and)
              (NP (JJ hierarchical) (NNS networks)))
            (VP (VBP govern))))))
    (. .)))

cc(surprised-6, And-1)
nsubj(surprised-6, one-2)
aux(surprised-6, should-3)
neg(surprised-6, not-4)
cop(surprised-6, be-5)
root(ROOT-0, surprised-6)
complm(found-10, that-7)
nsubj(found-10, we-8)
aux(found-10, have-9)
ccomp(surprised-6, found-10)
amod(levels-13, many-12)
prep_at(found-10, levels-13)
prep_of(levels-13, life-15)
complm(govern-24, that-17)
nn(networks-20, scale-18)
amod(networks-20, free-19)
nsubj(govern-24, networks-20)
amod(networks-23, hierarchical-22)
conj_and(networks-20, networks-23)
nsubj(govern-24, networks-23)
ccomp(surprised-6, govern-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NN general)))
    (, ,)
    (S
      (VP
        (ADVP (RB mutations)
          (CC or)
          (RBR more) (RB commonly))
        (VBN known)
        (PP (IN as)
          (NP (NNS variations)))))
    (, ,)
    (VP (VBP are)
      (ADJP (RB incredibly) (JJ important)
        (PP (IN for)
          (NP (NN evolution))))
      (, ,)
      (SBAR (IN since)
        (S
          (PP (IN without)
            (NP (JJ such) (NN variation)))
          (, ,)
          (NP (NN evolution))
          (VP (MD would) (RB not)
            (VP (VB be)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (NP
                        (NP (RB much))
                        (PP (IN of)
                          (NP (NN anything)))))))))))))
    (. .)))

prep_in(important-14, general-2)
dep(commonly-7, mutations-4)
conj_or(commonly-7, more-6)
advmod(known-8, more-6)
advmod(known-8, commonly-7)
dep(important-14, known-8)
prep_as(known-8, variations-10)
cop(important-14, are-12)
advmod(important-14, incredibly-13)
root(ROOT-0, important-14)
prep_for(important-14, evolution-16)
mark(able-27, since-18)
amod(variation-21, such-20)
prep_without(able-27, variation-21)
nsubj(able-27, evolution-23)
aux(able-27, would-24)
neg(able-27, not-25)
cop(able-27, be-26)
advcl(important-14, able-27)
aux(do-29, to-28)
xcomp(able-27, do-29)
dobj(do-29, much-30)
prep_of(much-30, anything-32)

(ROOT
  (S
    (S
      (ADVP (RB So))
      (, ,)
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (S
        (NP (NN variation))
        (VP (VBZ is)
          (NP
            (NP (DT an) (JJ important) (NN component))
            (PP (TO to)
              (NP (JJ evolutionary) (NN theory))))))
      (CC and)
      (S
        (NP (NNS mutations))
        (VP (VBP are)
          (NP
            (NP (CD one) (NN way))
            (PP (IN of)
              (NP (NN variation)))
            (S
              (VP (TO to)
                (VP (VB increase))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (JJ other) (NNS mechanisms))
        (PP (JJ such) (IN as)
          (NP (NN recombination))))
      (VP (MD can)
        (ADVP (RB also))
        (VP (VB increase)
          (NP
            (NP (DT the) (NN variation))
            (PP (IN in)
              (NP (DT the) (NN species))))
          (PP (IN by)
            (S
              (VP (VBG mixing)
                (CC and)
                (VBG matching)
                (NP
                  (NP (NNS parts))
                  (PP (IN of)
                    (NP (NNS genomes))))))))))
    (. .)))

advmod(component-10, So-1)
conj_and(component-10, in-3)
prep_in(component-10, fact-4)
nsubj(component-10, variation-6)
cop(component-10, is-7)
det(component-10, an-8)
amod(component-10, important-9)
root(ROOT-0, component-10)
amod(theory-13, evolutionary-12)
prep_to(component-10, theory-13)
nsubj(way-18, mutations-15)
cop(way-18, are-16)
num(way-18, one-17)
conj_and(component-10, way-18)
prep_of(way-18, variation-20)
aux(increase-22, to-21)
infmod(way-18, increase-22)
amod(mechanisms-26, other-25)
nsubj(increase-32, mechanisms-26)
prep_such_as(mechanisms-26, recombination-29)
aux(increase-32, can-30)
advmod(increase-32, also-31)
conj_but(component-10, increase-32)
det(variation-34, the-33)
dobj(increase-32, variation-34)
det(species-37, the-36)
prep_in(variation-34, species-37)
prepc_by(increase-32, mixing-39)
prepc_by(increase-32, matching-41)
conj_and(mixing-39, matching-41)
dobj(mixing-39, parts-42)
prep_of(parts-42, genomes-44)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (CD one) (NN reason))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP
              (NP
                (NP (NNP Behe) (POS 's))
                (NNS claims))
              (PP (IN about)
                (NP
                  (NP (DT the) (NN edge))
                  (PP (IN of)
                    (NP (NN evolution))))))
            (VP (VBP are)
              (ADVP (RB so) (RB poorly))
              (VP (VBN supported)
                (PP (IN by)
                  (NP (NN fact)
                    (CC and)
                    (NN theory)))))))))
    (. .)))

nsubj(reason-4, This-1)
cop(reason-4, is-2)
num(reason-4, one-3)
root(ROOT-0, reason-4)
advmod(supported-17, why-5)
poss(claims-8, Behe-6)
nsubjpass(supported-17, claims-8)
det(edge-11, the-10)
prep_about(claims-8, edge-11)
prep_of(edge-11, evolution-13)
auxpass(supported-17, are-14)
advmod(poorly-16, so-15)
advmod(supported-17, poorly-16)
rcmod(reason-4, supported-17)
agent(supported-17, fact-19)
agent(supported-17, theory-21)
conj_and(fact-19, theory-21)

(ROOT
  (S
    (NP (NNP Behe))
    (VP (VBZ argues)
      (PP (IN for)
        (NP (NN instance)))
      (SBAR (IN that)
        (S
          (NP (NN evolution))
          (VP (VBZ is)
            (ADJP (JJ unable)
              (S
                (VP (TO to)
                  (VP (VB explain)
                    (NP
                      (QP (CD two)
                        (CC or)
                        (JJR more))
                      (NNS mutations))
                    (SBAR (IN because)
                      (S
                        (NP (PRP he))
                        (VP (VBZ insists)
                          (SBAR (IN that)
                            (S
                              (NP (PRP they))
                              (VP (VBP have)
                                (S
                                  (VP (TO to)
                                    (VP (VB happen)
                                      (PP (IN at)
                                        (NP (DT the) (JJ same) (NN time))))))))))))))))))))
    (. .)))

nsubj(argues-2, Behe-1)
root(ROOT-0, argues-2)
prep_for(argues-2, instance-4)
complm(unable-8, that-5)
nsubj(unable-8, evolution-6)
cop(unable-8, is-7)
ccomp(argues-2, unable-8)
aux(explain-10, to-9)
xcomp(unable-8, explain-10)
num(mutations-14, two-11)
conj_or(two-11, more-13)
quantmod(two-11, more-13)
num(mutations-14, more-13)
dobj(explain-10, mutations-14)
mark(insists-17, because-15)
nsubj(insists-17, he-16)
advcl(explain-10, insists-17)
complm(have-20, that-18)
nsubj(have-20, they-19)
xsubj(happen-22, they-19)
ccomp(insists-17, have-20)
aux(happen-22, to-21)
xcomp(have-20, happen-22)
det(time-26, the-24)
amod(time-26, same-25)
prep_at(happen-22, time-26)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN argument))
      (VP (VBZ is)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (NNS intermediates))
              (VP (VBP do) (RB not)
                (VP (VB exist)))))
          (CC and)
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (VP (VBP do)))))))
    (, ,)
    (NP (PRP they))
    (VP
      (VP (VBP do) (RB not)
        (VP (VB have)
          (NP (DT any) (JJ beneficial) (NN advantage))))
      (CC and)
      (VP
        (ADVP (RB thus))
        (VBP are)
        (ADJP (JJ impervious)
          (PP (TO to)
            (NP (NN selection))))))
    (. .)))

poss(argument-2, His-1)
nsubj(is-3, argument-2)
ccomp(have-17, is-3)
complm(exist-8, that-4)
nsubj(exist-8, intermediates-5)
aux(exist-8, do-6)
neg(exist-8, not-7)
ccomp(is-3, exist-8)
mark(do-12, if-10)
nsubj(do-12, they-11)
ccomp(is-3, do-12)
conj_and(exist-8, do-12)
nsubj(have-17, they-14)
nsubj(impervious-24, they-14)
aux(have-17, do-15)
neg(have-17, not-16)
root(ROOT-0, have-17)
det(advantage-20, any-18)
amod(advantage-20, beneficial-19)
dobj(have-17, advantage-20)
advmod(impervious-24, thus-22)
cop(impervious-24, are-23)
conj_and(have-17, impervious-24)
prep_to(impervious-24, selection-26)

(ROOT
  (S (RB So)
    (VP (VB let)
      (S
        (NP (POS 's))
        (VP (VB explore)
          (NP
            (NP (DT this))
            (PP (IN with)
              (NP
                (NP (DT an) (NN example))
                (SBAR
                  (WHPP (IN in)
                    (WHNP (WDT which)))
                  (S
                    (NP
                      (NP (DT a) (NN mutation))
                      (SBAR
                        (S
                          (NP (NNP A)
                            (CC and)
                            (NNP B))
                          (VP
                            (VP (VBP are)
                              (ADJP (JJ necessary)
                                (PP (IN for)
                                  (NP (DT a) (JJ particular) (JJ beneficial) (NN event)))
                                (S
                                  (VP (TO to)
                                    (VP (VB happen)
                                      (PRN (-LRB- -LRB-)
                                        (PP (JJ such) (IN as)
                                          (NP (NN malaria) (NN resistance)))
                                        (-RRB- -RRB-)))))))
                            (CC and)
                            (VP (VBZ lets))))))
                    (VP (VBP assume)
                      (SBAR (IN that)
                        (S
                          (NP
                            (NP (NNP A)
                              (CC and)
                              (NNP B))
                            (PP (IN by)
                              (NP (PRP themselves))))
                          (VP (VBP have)
                            (NP
                              (NP
                                (ADJP (RB near) (JJ neutral))
                                (NN fitness) (NNS contributions))
                              (PP (IN in)
                                (NP (DT a) (JJ particular) (NN environment))))))))))))))))
    (. .)))

advmod(let-2, So-1)
root(ROOT-0, let-2)
nsubj(explore-4, 's-3)
ccomp(let-2, explore-4)
dobj(explore-4, this-5)
det(example-8, an-7)
prep_with(this-5, example-8)
rel(assume-33, which-10)
det(mutation-12, a-11)
dobj(necessary-17, mutation-12)
nsubj(assume-33, mutation-12)
nsubj(necessary-17, A-13)
nsubj(lets-32, A-13)
conj_and(A-13, B-15)
nsubj(necessary-17, B-15)
cop(necessary-17, are-16)
rcmod(mutation-12, necessary-17)
det(event-22, a-19)
amod(event-22, particular-20)
amod(event-22, beneficial-21)
prep_for(necessary-17, event-22)
aux(happen-24, to-23)
xcomp(necessary-17, happen-24)
nn(resistance-29, malaria-28)
prep_such_as(happen-24, resistance-29)
rcmod(mutation-12, lets-32)
conj_and(necessary-17, lets-32)
rcmod(example-8, assume-33)
complm(have-40, that-34)
nsubj(have-40, A-35)
conj_and(A-35, B-37)
nsubj(have-40, B-37)
prep_by(A-35, themselves-39)
ccomp(assume-33, have-40)
advmod(neutral-42, near-41)
amod(contributions-44, neutral-42)
nn(contributions-44, fitness-43)
dobj(have-40, contributions-44)
det(environment-48, a-46)
amod(environment-48, particular-47)
prep_in(contributions-44, environment-48)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNP Behe) (POS 's))
        (NN world)))
    (, ,)
    (NP (DT this))
    (VP (MD would)
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (DT a) (NN population))
            (ADVP (RB either))
            (VP (VBZ has)
              (NP
                (NP (NNP AB) (NNP mutation))
                (CC or)
                (ADVP (DT neither))
                (NP (NNP A)
                  (CC nor)
                  (NNP B.)))
              (ADVP (RB However))
              (PP (IN in)
                (NP (NN reality)))
              (, ,)
              (SBAR
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP know)
                      (SBAR (IN that)
                        (S
                          (NP (NNS populations))
                          (VP (VB exhibit)
                            (NP
                              (NP (DT a) (JJ significant) (NN variability))
                              (SBAR
                                (WHPP (IN in)
                                  (WHNP (WDT which)))
                                (S
                                  (NP (EX there))
                                  (VP (MD will)
                                    (VP (VB be)
                                      (NP
                                        (NP (DT some))
                                        (SBAR
                                          (WHNP (WDT that))
                                          (S
                                            (VP (MD will)
                                              (VP (VB have)
                                                (NP
                                                  (NP (DT a) (NN mutation) (NN A))
                                                  (CC and)
                                                  (NP
                                                    (NP (NNS others))
                                                    (NP (DT a) (NN mutation) (NN B))))))))))))))))))))
                (CC but)
                (SBAR (IN since)
                  (S
                    (NP (DT these) (NNS mutations))
                    (VP (VBP are)
                      (PP (IN by)
                        (NP (PRP themselves)))
                      (ADJP
                        (ADJP (JJ neutral))
                        (, ,)
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (MD can)
                              (ADVP (RB only))
                              (VP (VB spread)
                                (PP (TO to)
                                  (NP
                                    (NP (NN fixation))
                                    (PP (IN via)
                                      (NP (NN drift)))))))))))))))))))
    (. .)))

poss(world-4, Behe-2)
prep_in(mean-8, world-4)
nsubj(mean-8, this-6)
aux(mean-8, would-7)
root(ROOT-0, mean-8)
complm(has-13, that-9)
det(population-11, a-10)
nsubj(has-13, population-11)
advmod(has-13, either-12)
ccomp(mean-8, has-13)
nn(mutation-15, AB-14)
dobj(has-13, mutation-15)
dobj(has-13, neither-17)
advmod(mutation-15, neither-17)
conj_or(mutation-15, neither-17)
dobj(has-13, A-18)
conj_or(mutation-15, A-18)
conj_or(mutation-15, B.-20)
conj_nor(A-18, B.-20)
advmod(has-13, However-21)
prep_in(has-13, reality-23)
nsubj(know-26, we-25)
dep(has-13, know-26)
complm(exhibit-29, that-27)
nsubj(exhibit-29, populations-28)
ccomp(know-26, exhibit-29)
det(variability-32, a-30)
amod(variability-32, significant-31)
dobj(exhibit-29, variability-32)
rel(some-38, which-34)
expl(some-38, there-35)
aux(some-38, will-36)
cop(some-38, be-37)
rcmod(variability-32, some-38)
nsubj(have-41, some-38)
aux(have-41, will-40)
rcmod(some-38, have-41)
det(A-44, a-42)
nn(A-44, mutation-43)
dobj(have-41, A-44)
dobj(have-41, others-46)
conj_and(A-44, others-46)
det(B-49, a-47)
nn(B-49, mutation-48)
dep(others-46, B-49)
mark(neutral-57, since-51)
det(mutations-53, these-52)
nsubj(neutral-57, mutations-53)
cop(neutral-57, are-54)
prep_by(neutral-57, themselves-56)
dep(has-13, neutral-57)
conj_but(know-26, neutral-57)
nsubj(spread-62, they-59)
aux(spread-62, can-60)
advmod(spread-62, only-61)
dep(neutral-57, spread-62)
prep_to(spread-62, fixation-64)
prep_via(fixation-64, drift-66)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ means)
      (NP
        (NP (JJ small) (NNS populations))
        (CC or)
        (NP
          (NP (DT a) (NN bottle) (NN neck))
          (CC or)
          (NP (DT a) (JJ selective) (NN sweep)))))
    (. .)))

nsubj(means-2, This-1)
root(ROOT-0, means-2)
amod(populations-4, small-3)
dobj(means-2, populations-4)
det(neck-8, a-6)
nn(neck-8, bottle-7)
dobj(means-2, neck-8)
conj_or(populations-4, neck-8)
det(sweep-12, a-10)
amod(sweep-12, selective-11)
conj_or(populations-4, sweep-12)
conj_or(neck-8, sweep-12)

