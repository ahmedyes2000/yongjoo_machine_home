(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (RB not)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBD cut))
              (CC and)
              (VP (VBD dried))))
          (. .))))
    (. .)))

nsubj(not-3, it-1)
cop(not-3, 's-2)
root(ROOT-0, not-3)
nsubj(cut-5, that-4)
nsubj(dried-7, that-4)
dep(not-3, cut-5)
dep(not-3, dried-7)
conj_and(cut-5, dried-7)

(ROOT
  (S
    (NP (DT some) (NNS things))
    (VP (VBD were)
      (VP (VBN meant)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (JJ literal) (NNS others)))))))
    (. .) (. .)))

det(things-2, some-1)
nsubjpass(meant-4, things-2)
xsubj(others-8, things-2)
auxpass(meant-4, were-3)
root(ROOT-0, meant-4)
aux(others-8, to-5)
cop(others-8, be-6)
amod(others-8, literal-7)
xcomp(meant-4, others-8)

(ROOT
  (S
    (VP (VB do)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP feel)
            (SBAR
              (S
                (NP (CD 6) (NN day) (NN creation))
                (VP (VBD was)
                  (VP (VBN meant)
                    (ADVP (RB literally) ('' ''))))))))))
    (. .)))

root(ROOT-0, do-1)
nsubj(feel-3, you-2)
ccomp(do-1, feel-3)
num(creation-6, 6-4)
nn(creation-6, day-5)
nsubjpass(meant-8, creation-6)
auxpass(meant-8, was-7)
ccomp(feel-3, meant-8)
advmod(meant-8, literally-9)

(ROOT
  (S (CC and)
    (ADVP (RB really))
    (NP (PRP I))
    (VP (VBP assume)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (VP (VBN meant)
              (NP (NNP literal) (. .)))))))
    (. .)))

cc(assume-4, and-1)
advmod(assume-4, really-2)
nsubj(assume-4, I-3)
root(ROOT-0, assume-4)
nsubjpass(meant-7, it-5)
auxpass(meant-7, was-6)
ccomp(assume-4, meant-7)
dobj(meant-7, literal-8)

(ROOT
  (S
    (VP
      (ADVP (RB largely))
      (VBN based)
      (PP (IN on)
        (NP
          (NP (DT the) (NN reference))
          (PP (TO to) (`` ``)
            (NP (NN evening)
              (CC and)
              (NN morning))
            ('' '')))
        (ADVP (RB repeatedly))))
    (. .)))

advmod(based-2, largely-1)
root(ROOT-0, based-2)
det(reference-5, the-4)
prep_on(based-2, reference-5)
prep_to(reference-5, evening-8)
prep_to(reference-5, morning-10)
conj_and(evening-8, morning-10)
advmod(based-2, repeatedly-12)

(ROOT
  (FRAG (CC And)
    (PP (IN for)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP do) (RB not)
              (VP (VB find)
                (S
                  (NP (DT the) (NNP Bible))
                  (VP (TO to)
                    (VP (VB be)
                      (PP (IN of)
                        (NP (JJ divine) (NN origin)))))))))))
      (. ?))))

root(ROOT-0, And-1)
dep(And-1, for-2)
pobj(for-2, those-3)
nsubj(find-7, those-3)
aux(find-7, do-5)
neg(find-7, not-6)
rcmod(those-3, find-7)
det(Bible-9, the-8)
nsubj(be-11, Bible-9)
aux(be-11, to-10)
xcomp(find-7, be-11)
amod(origin-14, divine-13)
prep_of(be-11, origin-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP ll)
        (VP (VB grant)
          (NP (PRP you))
          (SBAR (IN that)
            (S
              (PP (IN from)
                (NP (DT a) (JJ Christian) (NN perspective)))
              (NP
                (NP (PRP it))
                (VP (VBG claiming)
                  (SBAR (IN that)
                    (S
                      (NP (DT the) (NNP Bible))
                      (VP (VBZ is)
                        (PP (IN of)
                          (NP (JJ divine) (NN origin))))))))
              (VP (VBZ is)
                (NP
                  (NP (DT an) (JJ important) (NN part))
                  (PP (IN of)
                    (NP (DT the) (JJ Christian) (NN faith))))))))))
    (CC But)
    (S
      (NP (DT the) (JJ same))
      (VP (VBZ does) (RB not)
        (VP (VB hold)
          (PP (IN for)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP are) (RB not)
                    (NP (NNP Christian))))))))))
    (. .)))

nsubj(ll-2, I-1)
root(ROOT-0, ll-2)
xcomp(ll-2, grant-3)
dobj(grant-3, you-4)
complm(part-22, that-5)
det(perspective-9, a-7)
amod(perspective-9, Christian-8)
prep_from(part-22, perspective-9)
nsubj(part-22, it-10)
partmod(it-10, claiming-11)
complm(is-15, that-12)
det(Bible-14, the-13)
nsubj(is-15, Bible-14)
ccomp(claiming-11, is-15)
amod(origin-18, divine-17)
prep_of(is-15, origin-18)
cop(part-22, is-19)
det(part-22, an-20)
amod(part-22, important-21)
ccomp(grant-3, part-22)
det(faith-26, the-24)
amod(faith-26, Christian-25)
prep_of(part-22, faith-26)
det(same-29, the-28)
nsubj(hold-32, same-29)
aux(hold-32, does-30)
neg(hold-32, not-31)
conj_but(ll-2, hold-32)
prep_for(hold-32, those-34)
nsubj(Christian-38, those-34)
cop(Christian-38, are-36)
neg(Christian-38, not-37)
rcmod(those-34, Christian-38)

(ROOT
  (S
    (S
      (NP (DT each) (NN section))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN interpreted)
                (ADVP (RB individually))
                (PP (IN for)
                  (NP
                    (NP (PRP it) (POS 's))
                    (VBN given) (NN intent)))))))))
    (: ...)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB simply))
        (NP
          (NP (RB not) (DT an))
          (`` ``)
          (NP (DT all)
            (CC or)
            (NN nothing))
          ('' '')))
      (. .))
    (. .)))

det(section-2, each-1)
nsubj(has-3, section-2)
xsubj(interpreted-6, section-2)
root(ROOT-0, has-3)
aux(interpreted-6, to-4)
auxpass(interpreted-6, be-5)
xcomp(has-3, interpreted-6)
advmod(interpreted-6, individually-7)
poss(intent-12, it-9)
amod(intent-12, given-11)
prep_for(interpreted-6, intent-12)
nsubj(an-18, it-14)
cop(an-18, 's-15)
advmod(an-18, simply-16)
neg(an-18, not-17)
parataxis(has-3, an-18)
dep(an-18, all-20)
dep(an-18, nothing-22)
conj_or(all-20, nothing-22)

(ROOT
  (NP
    (NP (DT either) (NN literal)
      (CC or)
      (NN metaphor))
    (NP (NNP concept) (. .))
    (. .)))

preconj(literal-2, either-1)
root(ROOT-0, literal-2)
conj_or(literal-2, metaphor-4)
dep(literal-2, concept-5)

(ROOT
  (S
    (NP (DT a) (JJ full) (NN understanding))
    (VP (VBZ is)
      (ADJP (JJ necessary)))
    (. .)))

det(understanding-3, a-1)
amod(understanding-3, full-2)
nsubj(necessary-5, understanding-3)
cop(necessary-5, is-4)
root(ROOT-0, necessary-5)

(ROOT
  (SBARQ
    (WHPP (IN At)
      (WHNP (WP what)
        (NP (JJ objective) (NN point))))
    (SQ (VBZ is)
      (NP (JJ full) (NN understanding))
      (VP (VBN reached)))
    (. ?)))

prep_at(reached-8, what-2)
amod(point-4, objective-3)
dep(what-2, point-4)
auxpass(reached-8, is-5)
amod(understanding-7, full-6)
nsubjpass(reached-8, understanding-7)
root(ROOT-0, reached-8)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (NN intent))
      (VP (VB be)
        (VP
          (ADVP (RB objectively))
          (VBN verified))))
    (. ?)))

advmod(verified-6, How-1)
aux(verified-6, can-2)
nsubjpass(verified-6, intent-3)
auxpass(verified-6, be-4)
advmod(verified-6, objectively-5)
root(ROOT-0, verified-6)

(ROOT
  (FRAG
    (ADVP (RB clearly))
    (RB not) (. .)))

dep(not-2, clearly-1)
root(ROOT-0, not-2)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP
        (ADVP (RB objectively))
        (VB determine)
        (SBAR
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (NNS things))
              (VP (VBP are)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN taken)
                        (ADVP (RB literally)))))))))
          (CC and)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBP are) (RB not)))))))
    (. ?)))

advmod(determine-5, How-1)
aux(determine-5, can-2)
nsubj(determine-5, you-3)
advmod(determine-5, objectively-4)
root(ROOT-0, determine-5)
dep(are-8, which-6)
nsubj(are-8, things-7)
xsubj(taken-11, things-7)
dep(determine-5, are-8)
aux(taken-11, to-9)
auxpass(taken-11, be-10)
xcomp(are-8, taken-11)
advmod(taken-11, literally-12)
nsubj(are-15, which-14)
dep(determine-5, are-15)
conj_and(are-8, are-15)
neg(are-15, not-16)

(ROOT
  (S
    (NP (NNS Revelations))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN example))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (RB clearly) (NN symbolism))
            (VP (VBZ is)
              (VP (VBN used)))))))
    (. .)))

nsubj(example-4, Revelations-1)
cop(example-4, is-2)
det(example-4, an-3)
root(ROOT-0, example-4)
advmod(used-9, where-5)
advmod(symbolism-7, clearly-6)
nsubjpass(used-9, symbolism-7)
auxpass(used-9, is-8)
rcmod(example-4, used-9)

(ROOT
  (S
    (NP (DT No) (JJ fundamental) (NN christian))
    (VP (MD could)
      (VP (VB discount)
        (SBAR (IN that)
          (S
            (NP (NN symbolism))
            (VP (VBZ is)
              (VP (VBN used)
                (NP
                  (NP (NN alot))
                  (: ...)
                  (CC and)
                  (NP (NNP metaphors) (. .)))))))))
    (. .)))

det(christian-3, No-1)
amod(christian-3, fundamental-2)
nsubj(discount-5, christian-3)
aux(discount-5, could-4)
root(ROOT-0, discount-5)
complm(used-9, that-6)
nsubjpass(used-9, symbolism-7)
auxpass(used-9, is-8)
ccomp(discount-5, used-9)
dobj(used-9, alot-10)
dobj(used-9, metaphors-13)
conj_and(alot-10, metaphors-13)

(ROOT
  (S
    (NP (NNP and))
    (VP
      (VP (VBZ analogies))
      (: ...)
      (CC and)
      (VP (VBZ parables)))
    (. .) (. .)))

nsubj(analogies-2, and-1)
nsubj(parables-5, and-1)
root(ROOT-0, analogies-2)
conj_and(analogies-2, parables-5)

(ROOT
  (S
    (NP
      (NP (FW etc.) (FW etc.))
      (SBAR
        (WHADVP (WRB Why))
        (S
          (VP (VBZ is)
            (NP (NNS Revelations))))))
    (ADVP (RB clearly))
    (VP (VBZ symbolism)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP
            (NP (DT the) (NNS parts))
            (PP (IN about)
              (NP
                (NP (NN burning) (NNS bushes))
                (CC and)
                (NP (JJ massive) (NNS floods)))))
          (VP (VBP are) (RB not)))))
    (. ?)))

nn(etc.-2, etc.-1)
nsubj(symbolism-7, etc.-2)
advmod(Revelations-5, Why-3)
cop(Revelations-5, is-4)
rcmod(etc.-2, Revelations-5)
advmod(symbolism-7, clearly-6)
root(ROOT-0, symbolism-7)
advmod(are-17, when-8)
det(parts-10, the-9)
nsubj(are-17, parts-10)
nn(bushes-13, burning-12)
prep_about(parts-10, bushes-13)
amod(floods-16, massive-15)
prep_about(parts-10, floods-16)
conj_and(bushes-13, floods-16)
advcl(symbolism-7, are-17)
neg(are-17, not-18)

(ROOT
  (S
    (NP (JJ Many) (NNS fundamentalists))
    (VP (VBP take)
      (NP (NNS Revelations))
      (PP (IN as)
        (S
          (VP (VBG being)
            (NP (DT the) (JJ literal) (NN truth)))))
      (, ,)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (VBP do)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP demonstrate)
                  (SBAR (IN that)
                    (S
                      (NP (PRP they))
                      (VP (VBP are)
                        (ADJP (JJ wrong))))))))))))
    (. .)))

amod(fundamentalists-2, Many-1)
nsubj(take-3, fundamentalists-2)
root(ROOT-0, take-3)
dobj(take-3, Revelations-4)
cop(truth-9, being-6)
det(truth-9, the-7)
amod(truth-9, literal-8)
prepc_as(take-3, truth-9)
advmod(do-12, how-11)
dep(take-3, do-12)
nsubj(demonstrate-14, you-13)
ccomp(do-12, demonstrate-14)
complm(wrong-18, that-15)
nsubj(wrong-18, they-16)
cop(wrong-18, are-17)
ccomp(demonstrate-14, wrong-18)

(ROOT
  (SBARQ
    (FRAG
      (ADJP (JJR More))
      (ADJP (JJ importantly)))
    (, ,)
    (SBARQ
      (WHADVP (WRB how))
      (SQ (MD can)
        (NP (DT a) (JJ third) (NN party))
        (VP (VB determine)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (NN view))
              (VP (VBZ is)
                (ADJP (JJ correct))))))))
    (. ?)))

dep(determine-9, More-1)
dep(More-1, importantly-2)
advmod(determine-9, how-4)
aux(determine-9, can-5)
det(party-8, a-6)
amod(party-8, third-7)
nsubj(determine-9, party-8)
root(ROOT-0, determine-9)
dobj(correct-13, which-10)
nsubj(correct-13, view-11)
cop(correct-13, is-12)
ccomp(determine-9, correct-13)

(ROOT
  (S (IN So)
    (NP (DT that))
    (VP (VBZ leads)
      (NP (PRP us))
      (PP (TO to)
        (NP (DT the) (NN conclusion)))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD ca) (RB n't)
            (VP (VB rule)
              (PRT (RP out))
              (NP
                (NP (NN symbolism))
                (PP (IN in)
                  (NP (DT any) (JJ other) (NN passage)))))))))
    (. .)))

dep(leads-3, So-1)
nsubj(leads-3, that-2)
root(ROOT-0, leads-3)
dobj(leads-3, us-4)
det(conclusion-7, the-6)
prep_to(leads-3, conclusion-7)
complm(rule-12, that-8)
nsubj(rule-12, you-9)
aux(rule-12, ca-10)
neg(rule-12, n't-11)
ccomp(leads-3, rule-12)
prt(rule-12, out-13)
dobj(rule-12, symbolism-14)
det(passage-18, any-16)
amod(passage-18, other-17)
prep_in(symbolism-14, passage-18)

(ROOT
  (S (CC Yet)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP take)
              (NP (DT the) (JJ entire) (NNP Bible))
              (PP (IN as)
                (NP (DT the) (JJ literal) (NN truth)))
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP (DT no) (NN symbolism) (NN present))))))))))
    (. .)))

cc(are-3, Yet-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
nsubj(are-3, those-4)
nsubj(take-6, those-4)
rcmod(those-4, take-6)
det(Bible-9, the-7)
amod(Bible-9, entire-8)
dobj(take-6, Bible-9)
det(truth-13, the-11)
amod(truth-13, literal-12)
prep_as(take-6, truth-13)
complm(is-16, that-14)
expl(is-16, there-15)
ccomp(take-6, is-16)
det(present-19, no-17)
nn(present-19, symbolism-18)
nsubj(is-16, present-19)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP
        (NP (DT the) (NN literal))
        (CC and)
        (NP (JJ symbolic) (NNS parts)))
      (VP (VB be)
        (VP
          (ADVP (RB objectively))
          (VBN verified))))
    (. ?)))

advmod(verified-10, How-1)
aux(verified-10, can-2)
det(literal-4, the-3)
nsubjpass(verified-10, literal-4)
amod(parts-7, symbolic-6)
conj_and(literal-4, parts-7)
nsubjpass(verified-10, parts-7)
auxpass(verified-10, be-8)
advmod(verified-10, objectively-9)
root(ROOT-0, verified-10)

(ROOT
  (S (IN so)
    (ADVP (RB really))
    (NP (DT the) (NN question))
    (VP (VBZ comes)
      (PRT (RP down))
      (SBAR (IN to) (`` ``)
        (S
          (SBAR (IN If)
            (S
              (NP (PRP you))
              (VP (VBP feel))))
          (NP (DT the) (NNP Bible))
          (VP (VBD was)
            (VP (VBN divine)
              (PP (IN in)
                (NP (NN origin)))
              (. .))))))
    (. .)))

dep(comes-5, so-1)
advmod(comes-5, really-2)
det(question-4, the-3)
nsubj(comes-5, question-4)
root(ROOT-0, comes-5)
prt(comes-5, down-6)
mark(divine-15, to-7)
mark(feel-11, If-9)
nsubj(feel-11, you-10)
advcl(divine-15, feel-11)
det(Bible-13, the-12)
nsubjpass(divine-15, Bible-13)
auxpass(divine-15, was-14)
advcl(comes-5, divine-15)
prep_in(divine-15, origin-17)

