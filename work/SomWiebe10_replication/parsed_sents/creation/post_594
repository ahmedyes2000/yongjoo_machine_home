(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP It))
      (VP (VBZ seems)
        (PP (TO to)
          (NP (PRP me)))
        (SBAR (IN that)
          (S
            (NP (NNP Luskin))
            (VP (VBZ is)
              (VP (VBG being)
                (ADJP (`` ``)
                  (ADJP (RBR more) (JJ scientific))
                  ('' '')
                  (PP (IN in)
                    (NP
                      (NP (DT that) (PRP he) (NNS talks))
                      (PP (IN about)
                        (NP (DT a) (NN method))))))
                (PP (IN for)
                  (S
                    (VP (VBG testing)
                      (NP (NNP ID)))))))))))
    (: --)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADJP (JJ ironic))
        (SBAR (IN because)
          (S
            (NP (NNP Luskin))
            (VP (VBZ presents)
              (NP (DT no) (JJ testable) (NN ID)))))))
    (. .)))

nsubj(seems-3, It-2)
root(ROOT-0, seems-3)
prep_to(seems-3, me-5)
complm(scientific-12, that-6)
nsubj(scientific-12, Luskin-7)
aux(scientific-12, is-8)
cop(scientific-12, being-9)
advmod(scientific-12, more-11)
ccomp(seems-3, scientific-12)
det(talks-17, that-15)
dep(talks-17, he-16)
prep_in(scientific-12, talks-17)
det(method-20, a-19)
prep_about(talks-17, method-20)
prepc_for(scientific-12, testing-22)
dobj(testing-22, ID-23)
nsubj(ironic-27, That-25)
cop(ironic-27, 's-26)
parataxis(seems-3, ironic-27)
mark(presents-30, because-28)
nsubj(presents-30, Luskin-29)
advcl(ironic-27, presents-30)
det(ID-33, no-31)
amod(ID-33, testable-32)
dobj(presents-30, ID-33)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (PRP I))
        (VP (VBP understand)
          (NP (PRP$ your) (NN confusion))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (NNP ID))
              (VP (VBZ claims)
                (SBAR (IN that)
                  (S
                    (VP (VBG showing)
                      (NP (DT that))
                      (NP
                        (NP (DT a) (NN gap))
                        (PP (IN in)
                          (NP
                            (NP (PRP$ our) (NN ignorance))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBZ has)
                                  (VP (VBN been)
                                    (VP (VBN defined)
                                      (S
                                        (VP (TO to)
                                          (VP (VB be)
                                            (NP (`` ``) (NN design) ('' ''))))))))))
                            (, ,)))))))))))))
    (VP (MD should)
      (VP (VB count)
        (PP (IN as)
          (NP (DT a) (NN way)
            (S
              (VP (TO to)
                (VP (VB test)
                  (NP (`` ``) (NNP ID) ('' '')))))))))
    (. .)))

mark(understand-3, Although-1)
nsubj(understand-3, I-2)
csubj(count-29, understand-3)
poss(confusion-5, your-4)
dobj(understand-3, confusion-5)
advmod(claims-8, where-6)
nsubj(claims-8, ID-7)
advcl(understand-3, claims-8)
complm(showing-10, that-9)
ccomp(claims-8, showing-10)
iobj(showing-10, that-11)
det(gap-13, a-12)
dobj(showing-10, gap-13)
poss(ignorance-16, our-15)
prep_in(gap-13, ignorance-16)
nsubjpass(defined-21, ignorance-16)
aux(defined-21, has-19)
auxpass(defined-21, been-20)
rcmod(ignorance-16, defined-21)
aux(design-25, to-22)
cop(design-25, be-23)
xcomp(defined-21, design-25)
aux(count-29, should-28)
root(ROOT-0, count-29)
det(way-32, a-31)
prep_as(count-29, way-32)
aux(test-34, to-33)
infmod(way-32, test-34)
dobj(test-34, ID-36)

(ROOT
  (S
    (S (CC But)
      (ADVP (RB then))
      (NP (NNP ID))
      (VP (VBZ is)
        (ADVP (RB merely))
        (NP (DT the) (JJ negative) (NN argument))
        (SBAR (IN that)
          (S
            (NP (NN science))
            (VP
              (VP (MD can) (RB not)
                (VP (VB explain)
                  (S (`` ``)
                    (NP (SYM x))
                    ('' ''))))
              (CC and)
              (VP (VBZ has)
                (NP
                  (NP (DT no) (NN relevance))
                  (PP (TO to)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP one))
                        (ADVP (RB commonly))
                        (VP (VBZ perceives)
                          (S
                            (NP (NNP ID))
                            (VP (TO to)
                              (VP (VB be))))))))
                  (, ,)
                  (PP (IN in)
                    (NP (JJ other) (NNS words))))))))))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ fails)
      (S
        (VP (TO to)
          (VP (VB place) (`` ``)
            (NP (NN design))
            ('' '')
            (PP (IN at)
              (NP (NN risk)))))))
    (. .)))

cc(argument-8, But-1)
advmod(argument-8, then-2)
nsubj(argument-8, ID-3)
cop(argument-8, is-4)
advmod(argument-8, merely-5)
det(argument-8, the-6)
amod(argument-8, negative-7)
ccomp(fails-35, argument-8)
complm(explain-13, that-9)
nsubj(explain-13, science-10)
nsubj(has-18, science-10)
aux(explain-13, can-11)
neg(explain-13, not-12)
ccomp(argument-8, explain-13)
dep(explain-13, x-15)
ccomp(argument-8, has-18)
conj_and(explain-13, has-18)
det(relevance-20, no-19)
dobj(has-18, relevance-20)
dep(perceives-25, what-22)
nsubj(perceives-25, one-23)
advmod(perceives-25, commonly-24)
prepc_to(relevance-20, perceives-25)
nsubj(be-28, ID-26)
aux(be-28, to-27)
xcomp(perceives-25, be-28)
amod(words-32, other-31)
prep_in(relevance-20, words-32)
nsubj(fails-35, ID-34)
xsubj(place-37, ID-34)
root(ROOT-0, fails-35)
aux(place-37, to-36)
xcomp(fails-35, place-37)
dobj(place-37, design-39)
prep_at(place-37, risk-42)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (MD can)
      (VP (VB tell)
        (NP (PRP me))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP you))
            (VP (VBP believe)
              (SBAR
                (S
                  (NP (NNP ID))
                  (VP (MD can)
                    (VP (VB be)
                      (VP (VBN tested)))))))))))
    (. .)))

advmod(tell-4, Perhaps-1)
nsubj(tell-4, you-2)
aux(tell-4, can-3)
root(ROOT-0, tell-4)
dobj(tell-4, me-5)
advmod(believe-8, how-6)
nsubj(believe-8, you-7)
dep(tell-4, believe-8)
nsubjpass(tested-12, ID-9)
aux(tested-12, can-10)
auxpass(tested-12, be-11)
ccomp(believe-8, tested-12)

(ROOT
  (SQ (NNP Does)
    (NP (DT this))
    (VP (VB mean)
      (SBAR (IN that) (IN since)
        (S
          (NP
            (NP (NNP ID) (POS 's))
            (NN flagellum))
          (VP (VBZ has)
            (VP (VBN been)
              (VP (VBN shown)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP
                        (ADVP (RB plausibly))
                        (VBN evolved)
                        (SBAR (IN that)
                          (S
                            (ADVP (RB somehow))
                            (NP
                              (NP (NN design))
                              (CC and)
                              (NP (DT the) (NN designer)))
                            (VP (VBP have)
                              (VP (VBN been)
                                (VP (VBN falsified))))))))))))))))
    (. ?)))

dep(mean-3, Does-1)
nsubj(mean-3, this-2)
root(ROOT-0, mean-3)
complm(shown-11, that-4)
dep(shown-11, since-5)
poss(flagellum-8, ID-6)
nsubjpass(shown-11, flagellum-8)
xsubj(evolved-15, flagellum-8)
aux(shown-11, has-9)
auxpass(shown-11, been-10)
ccomp(mean-3, shown-11)
aux(evolved-15, to-12)
auxpass(evolved-15, be-13)
advmod(evolved-15, plausibly-14)
xcomp(shown-11, evolved-15)
complm(falsified-24, that-16)
advmod(falsified-24, somehow-17)
nsubjpass(falsified-24, design-18)
det(designer-21, the-20)
conj_and(design-18, designer-21)
nsubjpass(falsified-24, designer-21)
aux(falsified-24, have-22)
auxpass(falsified-24, been-23)
ccomp(evolved-15, falsified-24)

(ROOT
  (SQ (VBZ Does)
    (NP
      (NP (DT the) (NN fact))
      (SBAR (IN that)
        (S
          (NP (NN regularity)
            (CC and)
            (NN chance))
          (VP (VBZ processes)))))
    (, ,)
    (VP (VB contrary)
      (PP (TO to)
        (NP (NNS claims)))
      (PP (IN by)
        (NP (NNP ID) (NNS proponents)))
      (, ,)
      (SBAR
        (SBAR
          (S
            (VP (MD can)
              (PP (IN in)
                (NP
                  (NP (NN fact) (NN increase) (NN information))
                  (CC and)
                  (NP (NN complexity))))
              (VP (VB mean)
                (SBAR (IN that)
                  (S
                    (NP (NNP ID))
                    (VP (VBZ has)
                      (VP (VBN been)
                        (VP (VBN falsified))))))))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (DT the) (`` ``) (NN designer))
            (VP (VBZ is)
              (ADJP (JJ dead) ('' '')))))))
    (. ?)))

aux(contrary-10, Does-1)
det(fact-3, the-2)
dobj(processes-8, fact-3)
nsubj(contrary-10, fact-3)
complm(processes-8, that-4)
nsubj(processes-8, regularity-5)
conj_and(regularity-5, chance-7)
nsubj(processes-8, chance-7)
dep(fact-3, processes-8)
root(ROOT-0, contrary-10)
prep_to(contrary-10, claims-12)
nn(proponents-15, ID-14)
prep_by(contrary-10, proponents-15)
aux(mean-24, can-17)
nn(information-21, fact-19)
nn(information-21, increase-20)
prep_in(mean-24, information-21)
conj_and(information-21, complexity-23)
prep_in(mean-24, complexity-23)
ccomp(contrary-10, mean-24)
complm(falsified-29, that-25)
nsubjpass(falsified-29, ID-26)
aux(falsified-29, has-27)
auxpass(falsified-29, been-28)
ccomp(mean-24, falsified-29)
complm(dead-36, that-31)
det(designer-34, the-32)
nsubj(dead-36, designer-34)
cop(dead-36, is-35)
ccomp(contrary-10, dead-36)
conj_and(mean-24, dead-36)

(ROOT
  (FRAG
    (PP (IN Of)
      (NP (NN course) (RB not)))
    (. .)))

root(ROOT-0, Of-1)
pobj(Of-1, course-2)
neg(course-2, not-3)

(ROOT
  (S
    (S
      (PP (IN At) (RBS best))
      (NP (PRP it))
      (VP (VBZ means)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (NNP ID) (NNS proponents))
              (VP (VBD were)
                (ADJP (JJ wrong)
                  (PP (IN in)
                    (S
                      (VP (VBG making)
                        (NP (PRP$ their) (NNS claims))
                        (PP (IN about)
                          (NP (NN science))))))))))
          (CC and)
          (SBAR (IN since)
            (S
              (NP (PRP they))
              (ADVP (RB never))
              (VP (VBD placed)
                (NP
                  (NP (DT the) (NN concept))
                  (PP (IN of)
                    (NP (NN design))))
                (PP (IN at)
                  (NP (NN risk)))))))))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ remains)
      (ADVP (RB scientifically)
        (PP (IN without)
          (NP (NN content)))))
    (. .)))

prep(means-4, At-1)
dep(At-1, best-2)
nsubj(means-4, it-3)
ccomp(remains-29, means-4)
complm(wrong-9, that-5)
nn(proponents-7, ID-6)
nsubj(wrong-9, proponents-7)
cop(wrong-9, were-8)
ccomp(means-4, wrong-9)
prepc_in(wrong-9, making-11)
poss(claims-13, their-12)
dobj(making-11, claims-13)
prep_about(making-11, science-15)
mark(placed-20, since-17)
nsubj(placed-20, they-18)
neg(placed-20, never-19)
ccomp(means-4, placed-20)
conj_and(wrong-9, placed-20)
det(concept-22, the-21)
dobj(placed-20, concept-22)
prep_of(concept-22, design-24)
prep_at(placed-20, risk-26)
nsubj(remains-29, ID-28)
root(ROOT-0, remains-29)
advmod(remains-29, scientifically-30)
prep_without(scientifically-30, content-32)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP feel)
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBP have)
                (VP (VBN missed)
                  (NP (JJ other) (NNS points))
                  (PP (IN worth)
                    (S
                      (VP (VBG addressing)))))))))))
    (, ,)
    (S
      (INTJ (VB please))
      (VP (VB let)
        (NP (PRP me))))
    (VP (VBP know))
    (. .)))

mark(feel-3, If-1)
nsubj(feel-3, you-2)
advcl(know-16, feel-3)
complm(missed-7, that-4)
nsubj(missed-7, I-5)
aux(missed-7, have-6)
ccomp(feel-3, missed-7)
amod(points-9, other-8)
dobj(missed-7, points-9)
prepc_worth(missed-7, addressing-11)
dep(let-14, please-13)
csubj(know-16, let-14)
dobj(let-14, me-15)
root(ROOT-0, know-16)

(ROOT
  (S
    (VP
      (VP (VB Realize)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (NNP ID))
              (VP (VBZ is)
                (ADJP (RB very) (JJ good)
                  (PP (IN at)
                    (NP (NN bait)
                      (CC and)
                      (NN switch)))))))
          (, ,)
          (CC and)
          (SBAR (IN that)
            (S
              (NP (PRP one))
              (VP (VBP need)
                (S
                  (VP (TO to)
                    (VP
                      (ADVP (RB carefully))
                      (VB study)
                      (NP (PRP$ its) (NNS claims)
                        (CC and)
                        (NNS arguments))
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ able)
                              (S
                                (VP (TO to)
                                  (VP (VB get)
                                    (PP (TO to)
                                      (NP (DT the) (NN core))))))))))))))))))
      (CC and)
      (VP (VB come)
        (S
          (VP (TO to)
            (VP (VB realize)
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBZ is) (RB not)
                    (ADJP (JJ much))
                    (ADVP (RB there))))))))))
    (. .)))

root(ROOT-0, Realize-1)
complm(good-6, that-2)
nsubj(good-6, ID-3)
cop(good-6, is-4)
advmod(good-6, very-5)
ccomp(Realize-1, good-6)
prep_at(good-6, bait-8)
prep_at(good-6, switch-10)
conj_and(bait-8, switch-10)
complm(need-15, that-13)
nsubj(need-15, one-14)
xsubj(study-18, one-14)
ccomp(Realize-1, need-15)
conj_and(good-6, need-15)
aux(study-18, to-16)
advmod(study-18, carefully-17)
xcomp(need-15, study-18)
poss(claims-20, its-19)
dobj(study-18, claims-20)
dobj(study-18, arguments-22)
conj_and(claims-20, arguments-22)
aux(able-25, to-23)
cop(able-25, be-24)
xcomp(study-18, able-25)
aux(get-27, to-26)
xcomp(able-25, get-27)
det(core-30, the-29)
prep_to(get-27, core-30)
conj_and(Realize-1, come-32)
aux(realize-34, to-33)
xcomp(come-32, realize-34)
complm(is-37, that-35)
expl(is-37, there-36)
ccomp(realize-34, is-37)
neg(is-37, not-38)
acomp(is-37, much-39)
advmod(is-37, there-40)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG assuming)
        (SBAR
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP know)
                (SBAR
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (NNP ID))
                      (VP (VBZ has)
                        (VP (VBN defined)
                          (NP
                            (NP (DT the) (NNS concepts))
                            (PP (IN of)
                              (NP (`` ``) (NN design) ('' '')
                                (CC and)
                                (`` ``) (NN information) ('' ''))))))))
                  (CC and)
                  (SBAR (IN that)
                    (S
                      (NP (PRP they))
                      (VP (VBP are)
                        (PP (IN at)
                          (NP
                            (NP (NNS odds))
                            (PP (IN with)
                              (SBAR
                                (WHADVP (WRB how))
                                (S
                                  (NP (NN science))
                                  (ADVP (RB typically))
                                  (VP (VBZ defines)
                                    (NP (JJ such) (NNS terms)))))))))))))))
          (CC or)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT the) (NN layperson))
              (VP (MD may)
                (VP (VB interpret)
                  (NP (JJ such) (NNS terms)))))))))
    (. ?)))

nsubj(assuming-3, I-1)
aux(assuming-3, am-2)
root(ROOT-0, assuming-3)
nsubj(know-5, you-4)
dep(assuming-3, know-5)
advmod(defined-9, how-6)
nsubj(defined-9, ID-7)
aux(defined-9, has-8)
ccomp(know-5, defined-9)
det(concepts-11, the-10)
dobj(defined-9, concepts-11)
prep_of(concepts-11, design-14)
prep_of(concepts-11, information-18)
conj_and(design-14, information-18)
complm(are-23, that-21)
nsubj(are-23, they-22)
ccomp(know-5, are-23)
conj_and(defined-9, are-23)
prep_at(are-23, odds-25)
advmod(defines-30, how-27)
nsubj(defines-30, science-28)
advmod(defines-30, typically-29)
prepc_with(odds-25, defines-30)
amod(terms-32, such-31)
dobj(defines-30, terms-32)
advmod(interpret-38, how-34)
det(layperson-36, the-35)
nsubj(interpret-38, layperson-36)
aux(interpret-38, may-37)
dep(assuming-3, interpret-38)
conj_or(know-5, interpret-38)
amod(terms-40, such-39)
dobj(interpret-38, terms-40)

