(ROOT
  (S (: --)
    (NP (PRP It))
    (ADVP (RB always))
    (VP
      (VP (VBZ has)
        (VP (VBN been)))
      (CC and)
      (VP
        (ADVP (RB always))
        (MD will)
        (VP (VB be)
          (ADJP (JJ impossible)
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP (DT a) (NN design))
                  (PP (IN without)
                    (NP (DT a) (NN designer))))))))))
    (. .)))

nsubj(been-5, It-2)
nsubj(impossible-10, It-2)
advmod(been-5, always-3)
aux(been-5, has-4)
root(ROOT-0, been-5)
advmod(impossible-10, always-7)
aux(impossible-10, will-8)
cop(impossible-10, be-9)
conj_and(been-5, impossible-10)
aux(have-12, to-11)
xcomp(impossible-10, have-12)
det(design-14, a-13)
dobj(have-12, design-14)
det(designer-17, a-16)
prep_without(have-12, designer-17)

(ROOT
  (S
    (NP (NNP Truth))
    (VP (VBZ does) (RB n't)
      (VP (VB stop)
        (S
          (VP (VBG being)
            (NP (NN truth))))
        (SBAR (RB just) (IN because)
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB believe)
                (NP (PRP it))))))))
    (. .)))

nsubj(stop-4, Truth-1)
aux(stop-4, does-2)
neg(stop-4, n't-3)
root(ROOT-0, stop-4)
cop(truth-6, being-5)
xcomp(stop-4, truth-6)
advmod(believe-12, just-7)
dep(believe-12, because-8)
nsubj(believe-12, you-9)
aux(believe-12, do-10)
neg(believe-12, n't-11)
ccomp(stop-4, believe-12)
dobj(believe-12, it-13)

(ROOT
  (S
    (S
      (SBAR (RB Just) (IN because)
        (S
          (NP (NN something))
          (VP (VBZ arises)
            (ADVP (RB spontaneously))
            (SBAR
              (SBAR
                (S
                  (VP (VBZ does) (RB n't)
                    (VP (VB disprove)
                      (NP (DT a) (NN designer) (: --) (JJ true))))))
              (, ,)
              (CC but)
              (SBAR (IN as)
                (S
                  (NP (NN science))
                  (VP (VBZ has)
                    (VP (VBN shown)))))))))
      (, ,)
      (NP (DT the) (NN designer))
      (VP (VBP need) (RB not)
        (ADVP (RB always))
        (VP (VB be)
          (NP (DT an) (JJ intelligent) (NN entity)))))
    (CC and)
    (S
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (NP
        (NP (DT this) (NN confusion))
        (PP (IN about)
          (NP
            (NP (NN design))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ lies)
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN foundation))
                      (PP (IN of)
                        (NP
                          (NP (JJ apparent))
                          (PP (IN versus)
                            (NP (JJ actual) (NN design)))))))))))))
      (VP (VBZ has) (RB not)
        (VP (VBN been)
          (VP (VBN resolved)
            (PP (IN by)
              (NP
                (NP (DT the) (JJ eliminative) (NN approach))
                (VP (VBN chosen)
                  (PP (IN by)
                    (NP (NNP ID))))))))))
    (. .)))

advmod(arises-4, Just-1)
dep(arises-4, because-2)
nsubj(arises-4, something-3)
advcl(need-22, arises-4)
advmod(arises-4, spontaneously-5)
aux(disprove-8, does-6)
neg(disprove-8, n't-7)
dep(arises-4, disprove-8)
det(designer-10, a-9)
dobj(disprove-8, designer-10)
amod(designer-10, true-12)
mark(shown-18, as-15)
nsubj(shown-18, science-16)
aux(shown-18, has-17)
dep(arises-4, shown-18)
conj_but(disprove-8, shown-18)
det(designer-21, the-20)
nsubj(need-22, designer-21)
root(ROOT-0, need-22)
neg(need-22, not-23)
advmod(need-22, always-24)
cop(entity-28, be-25)
det(entity-28, an-26)
amod(entity-28, intelligent-27)
dep(need-22, entity-28)
prep_in(resolved-50, fact-31)
det(confusion-34, this-33)
nsubjpass(resolved-50, confusion-34)
prep_about(confusion-34, design-36)
nsubj(lies-38, design-36)
rcmod(design-36, lies-38)
det(foundation-41, the-40)
prep_at(lies-38, foundation-41)
prep_of(foundation-41, apparent-43)
amod(design-46, actual-45)
prep_versus(apparent-43, design-46)
aux(resolved-50, has-47)
neg(resolved-50, not-48)
auxpass(resolved-50, been-49)
conj_and(need-22, resolved-50)
det(approach-54, the-52)
amod(approach-54, eliminative-53)
agent(resolved-50, approach-54)
partmod(approach-54, chosen-55)
agent(chosen-55, ID-57)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (S
                (S
                  (S
                    (NP (IN with) (DT a))
                    (VP (VBP believe)
                      (PP (IN in)
                        (NP (DT a) (NN designer)))))
                  (PRN (, ,)
                    (S
                      (NP (DT a) (RB perhaps) (NN innate) (, ,))
                      (VP (VBD evolved)
                        (NP
                          (NP (NN aspect))
                          (PP (IN of)
                            (NP (NNS humans))))))
                    (, ,)))
                (CC but)
                (S (RB all)
                  (VP (TO to)
                    (VP (VB do)
                      (PP (IN with)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (VBZ is)
                              (ADJP (RB scientifically) (JJ supportable)))))))))))))))
    (. .)))

nsubj(has-2, It-1)
root(ROOT-0, has-2)
dobj(has-2, nothing-3)
aux(do-5, to-4)
infmod(nothing-3, do-5)
amod(a-7, with-6)
nsubj(believe-8, a-7)
nsubj(do-25, a-7)
dep(do-5, believe-8)
det(designer-11, a-10)
prep_in(believe-8, designer-11)
det(innate-15, a-13)
advmod(innate-15, perhaps-14)
nsubj(evolved-17, innate-15)
dep(believe-8, evolved-17)
dobj(evolved-17, aspect-18)
prep_of(aspect-18, humans-20)
advmod(do-25, all-23)
aux(do-25, to-24)
dep(do-5, do-25)
conj_but(believe-8, do-25)
nsubj(supportable-30, what-27)
cop(supportable-30, is-28)
advmod(supportable-30, scientifically-29)
prepc_with(do-25, supportable-30)

(ROOT
  (S
    (S
      (ADJP (JJ Needless)
        (S
          (VP (TO to)
            (VP (VB say))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP do) (RB not)
      (VP (VB use)
        (NP
          (NP (NNP ID) (POS 's))
          (NNS approaches)
          (S
            (VP (TO to)
              (VP (VB infer)
                (NP (NN design))
                (SBAR (IN since)
                  (S
                    (NP (PDT such) (DT an) (NN approach))
                    (VP (MD would)
                      (VP (VB be)
                        (ADJP (RB inherently) (JJ unreliable))))))))))))
    (. .)))

ccomp(use-8, Needless-1)
aux(say-3, to-2)
xcomp(Needless-1, say-3)
nsubj(use-8, we-5)
aux(use-8, do-6)
neg(use-8, not-7)
root(ROOT-0, use-8)
poss(approaches-11, ID-9)
dobj(use-8, approaches-11)
aux(infer-13, to-12)
infmod(approaches-11, infer-13)
dobj(infer-13, design-14)
mark(unreliable-22, since-15)
predet(approach-18, such-16)
det(approach-18, an-17)
nsubj(unreliable-22, approach-18)
aux(unreliable-22, would-19)
cop(unreliable-22, be-20)
advmod(unreliable-22, inherently-21)
advcl(infer-13, unreliable-22)

