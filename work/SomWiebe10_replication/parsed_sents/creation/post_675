(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB offer)
        (ADVP (RB anymore))
        (PP (IN than)
          (NP
            (NP (NN theory))
            (PP (IN for)
              (NP
                (NP (CD one))
                (CC or)
                (NP (DT the) (JJ other))))))))
    (. .)))

nsubj(offer-4, You-1)
aux(offer-4, ca-2)
neg(offer-4, n't-3)
root(ROOT-0, offer-4)
advmod(offer-4, anymore-5)
prep_than(offer-4, theory-7)
prep_for(theory-7, one-9)
det(other-12, the-11)
prep_for(theory-7, other-12)
conj_or(one-9, other-12)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP (DT an) (JJ open) (NN mind))
          (VP (VBZ is)
            (ADJP
              (ADVP (RB far) (RBR more))
              (JJ important)
              (PP (IN than)
                (NP
                  (NP (RB only) (CD one) (NN view))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD can) (RB not)
                        (VP (VB be)
                          (VP (VBN proven)))))))))))))
    (. .)))

nsubj(believe-3, I-1)
advmod(believe-3, just-2)
root(ROOT-0, believe-3)
complm(important-11, that-4)
det(mind-7, an-5)
amod(mind-7, open-6)
nsubj(important-11, mind-7)
cop(important-11, is-8)
advmod(more-10, far-9)
advmod(important-11, more-10)
ccomp(believe-3, important-11)
advmod(view-15, only-13)
num(view-15, one-14)
prep_than(important-11, view-15)
nsubjpass(proven-20, view-15)
aux(proven-20, can-17)
neg(proven-20, not-18)
auxpass(proven-20, be-19)
rcmod(view-15, proven-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB say)
        (NP
          (NP (CD one) (NN way))
          (CC or)
          (NP (DT the) (JJ other)))))
    (. .)))

nsubj(say-4, I-1)
aux(say-4, did-2)
neg(say-4, n't-3)
root(ROOT-0, say-4)
num(way-6, one-5)
dobj(say-4, way-6)
det(other-9, the-8)
dobj(say-4, other-9)
conj_or(way-6, other-9)

(ROOT
  (S (CC But)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN read)
          (NP
            (NP (DT the) (NNS works))
            (PP (IN of)
              (NP (NNP Darwin)))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NN anyone))
        (NP (DT that) (NN bias)))
      (NP (PRP I))
      (VP (VBP have)
        (NP (DT a) (NN problem))
        (PP (IN with))))
    (. .)))

nsubj(read-4, I-2)
aux(read-4, have-3)
root(ROOT-0, read-4)
det(works-6, the-5)
dobj(read-4, works-6)
prep_of(works-6, Darwin-8)
nsubj(have-15, anyone-11)
det(bias-13, that-12)
dep(anyone-11, bias-13)
nsubj(have-15, I-14)
conj_and(read-4, have-15)
det(problem-17, a-16)
dobj(have-15, problem-17)
prep(have-15, with-18)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD was)
      (NP (DT a) (NN racist)))
    (. .)))

cc(racist-5, And-1)
nsubj(racist-5, he-2)
cop(racist-5, was-3)
det(racist-5, a-4)
root(ROOT-0, racist-5)

(ROOT
  (S
    (VP (VB Read)
      (SBAR (IN before)
        (S
          (NP (PRP you))
          (VP (VBP go)
            (PRT (RP up))
            (S
              (VP (TO to)
                (VP (VB call)
                  (PRT (RP out))
                  (NP (DT the) (JJ big) (NNS boys)))))))))
    (. .)))

root(ROOT-0, Read-1)
mark(go-4, before-2)
nsubj(go-4, you-3)
xsubj(call-7, you-3)
advcl(Read-1, go-4)
prt(go-4, up-5)
aux(call-7, to-6)
xcomp(go-4, call-7)
prt(call-7, out-8)
det(boys-11, the-9)
amod(boys-11, big-10)
dobj(call-7, boys-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB see)
            (NP
              (NP (DT the) (NN racist))
              (PP (IN in)
                (NP (PRP$ his) (NNS works))))
            (PP (IN than)
              (NP (PRP I)))))))
    (VP (VBP feel)
      (ADJP (JJ sorry))
      (PP (IN for)
        (NP (PRP you))))
    (. .)))

mark(see-5, If-1)
nsubj(see-5, you-2)
aux(see-5, do-3)
neg(see-5, n't-4)
csubj(feel-13, see-5)
det(racist-7, the-6)
dobj(see-5, racist-7)
poss(works-10, his-9)
prep_in(racist-7, works-10)
prep_than(see-5, I-12)
root(ROOT-0, feel-13)
acomp(feel-13, sorry-14)
prep_for(feel-13, you-16)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP (NNP Darwin))))
    (, ,)
    (S
      (VP (VB have)
        (S
          (NP (PRP you))
          (VP
            (VP (VB read)
              (NP (PRP$ his) (NNS books)))
            (CC or)
            (VP (VBP are)
              (ADVP (RB just))
              (NP (NN brain)))))))
    (VP (VBD washed)
      (PP (IN into)
        (S
          (VP (VBG thinking)
            (SBAR (IN that)
              (S
                (NP (NN science))
                (VP (VBZ is)
                  (ADVP (RB always))
                  (ADJP (JJ right)))))))))
    (. .)))

prepc_as_for(washed-14, for-2)
pobj(washed-14, Darwin-3)
csubj(washed-14, have-5)
nsubj(read-7, you-6)
ccomp(have-5, read-7)
poss(books-9, his-8)
dobj(read-7, books-9)
cop(brain-13, are-11)
advmod(brain-13, just-12)
ccomp(have-5, brain-13)
conj_or(read-7, brain-13)
root(ROOT-0, washed-14)
prepc_into(washed-14, thinking-16)
complm(right-21, that-17)
nsubj(right-21, science-18)
cop(right-21, is-19)
advmod(right-21, always-20)
ccomp(thinking-16, right-21)

(ROOT
  (S
    (NP (NNS Cattle))
    (VP (VBP follow)
      (NP (DT the) (NN leader))
      (PP (IN without)
        (S
          (VP (VBG questioning)
            (NP (DT the) (NN direction))))))
    (. .)))

nsubj(follow-2, Cattle-1)
root(ROOT-0, follow-2)
det(leader-4, the-3)
dobj(follow-2, leader-4)
prepc_without(follow-2, questioning-6)
det(direction-8, the-7)
dobj(questioning-6, direction-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP (DT the) (NN answer))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
det(answer-6, the-5)
dobj(know-4, answer-6)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP I))
    (VP (VBP keep)
      (NP (DT an) (JJ open) (NN mind)))
    (. .)))

advmod(keep-4, However-1)
nsubj(keep-4, I-3)
root(ROOT-0, keep-4)
det(mind-7, an-5)
amod(mind-7, open-6)
dobj(keep-4, mind-7)

(ROOT
  (S
    (VP (VB Remember)
      (SBAR (IN that)
        (S
          (S
            (SBAR (RB once) (IN upon)
              (S
                (NP
                  (NP (DT a) (NN time))
                  (, ,)
                  (NP (NN man)))
                (VP (VBD knew)
                  (SBAR (IN that)
                    (S
                      (NP (DT the) (NN world))
                      (VP (VBD was)
                        (ADJP (JJ flat))))))))
            (, ,)
            (NP (PRP he))
            (VP (VBD knew)
              (SBAR
                (S
                  (NP (DT the) (NN world))
                  (VP (VBD was)
                    (NP
                      (NP (DT the) (NN center))
                      (PP (IN of)
                        (NP (DT the) (NN universe)))))))))
          (CC and)
          (S
            (NP (PRP he))
            (VP (VBD knew)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN Earth))
                  (VP (VBD sat)
                    (PP (IN on)
                      (NP
                        (NP (DT the) (NNS shoulders))
                        (PP (IN of)
                          (NP (JJ giant) (NNS elephants)))))))))))))
    (. .)))

root(ROOT-0, Remember-1)
complm(knew-17, that-2)
advmod(knew-9, once-3)
dep(knew-9, upon-4)
det(time-6, a-5)
nsubj(knew-9, time-6)
appos(time-6, man-8)
advcl(knew-17, knew-9)
complm(flat-14, that-10)
det(world-12, the-11)
nsubj(flat-14, world-12)
cop(flat-14, was-13)
ccomp(knew-9, flat-14)
nsubj(knew-17, he-16)
ccomp(Remember-1, knew-17)
det(world-19, the-18)
nsubj(center-22, world-19)
cop(center-22, was-20)
det(center-22, the-21)
ccomp(knew-17, center-22)
det(universe-25, the-24)
prep_of(center-22, universe-25)
nsubj(knew-28, he-27)
ccomp(Remember-1, knew-28)
conj_and(knew-17, knew-28)
complm(sat-32, that-29)
det(Earth-31, the-30)
nsubj(sat-32, Earth-31)
ccomp(knew-28, sat-32)
det(shoulders-35, the-34)
prep_on(sat-32, shoulders-35)
amod(elephants-38, giant-37)
prep_of(shoulders-35, elephants-38)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (ADJP (RB sometimes) (JJ wrong)))
    (. .)))

nsubj(wrong-4, Science-1)
cop(wrong-4, is-2)
advmod(wrong-4, sometimes-3)
root(ROOT-0, wrong-4)

(ROOT
  (S
    (VP (VB Like)
      (NP (PRP it))
      (CC or)
      (RB not))
    (. .)))

root(ROOT-0, Like-1)
dobj(Like-1, it-2)
conj_or(Like-1, not-4)
neg(Like-1, not-4)

(ROOT
  (S (CC But)
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP
                (NP (DT the) (VBG missing) (NN link))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD ca) (RB n't)
                      (VP (VB seem)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (VP (VBN found)))))))))))))))
    (. .)))

cc(like-5, But-1)
nsubj(like-5, I-3)
xsubj(see-7, I-3)
aux(like-5, would-4)
root(ROOT-0, like-5)
aux(see-7, to-6)
xcomp(like-5, see-7)
det(link-10, the-8)
amod(link-10, missing-9)
dobj(see-7, link-10)
nsubj(seem-14, link-10)
aux(seem-14, ca-12)
neg(seem-14, n't-13)
rcmod(link-10, seem-14)
aux(found-17, to-15)
auxpass(found-17, be-16)
xcomp(seem-14, found-17)

