(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sorry))))
    (CC but)
    (S
      (NP
        (NP (DT this) (NN argument))
        (PP (IN of) (`` ``)
          (NP
            (NP (NN design))
            (SBAR
              (S
                (VP (VBZ is)
                  (ADJP (JJ apparent) (, ,) (RB not) (JJ real))))))
          ('' '')))
      (ADVP (RB always))
      (VP (VBP make)
        (SBAR
          (S
            (NP (PRP me))
            (VP (VBP scratch)
              (NP (PRP$ my) (NN head))
              (PP (IN in)
                (NP (NN bewilderment))))))))
    (. .)))

nsubj(sorry-3, I-1)
cop(sorry-3, 'm-2)
root(ROOT-0, sorry-3)
det(argument-6, this-5)
nsubj(make-17, argument-6)
prep_of(argument-6, design-9)
cop(real-14, is-10)
amod(real-14, apparent-11)
neg(real-14, not-13)
rcmod(design-9, real-14)
advmod(make-17, always-16)
conj_but(sorry-3, make-17)
nsubj(scratch-19, me-18)
ccomp(make-17, scratch-19)
poss(head-21, my-20)
dobj(scratch-19, head-21)
prep_in(scratch-19, bewilderment-23)

(ROOT
  (S
    (S
      (NP (PRP$ Its))
      (VP (VBP like) (, ,)
        (S
          (NP (PRP we))
          (VP (VB see)
            (NP (DT the) (NN design))
            (PP (IN with)
              (NP (PRP$ our) (JJ own) (NNS eyes)))))))
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD ca) (RB n't)
        (VP (VB be)
          (ADJP (JJ real))
          (SBAR (IN because)
            (S
              (NP (PRP we))
              (VP (VBP refuse)
                (S
                  (VP (TO to)
                    (VP (VB believe)
                      (PP (IN in)
                        (NP (DT a) (NN designer))))))))))))
    (. .)))

nsubj(like-2, Its-1)
root(ROOT-0, like-2)
nsubj(see-5, we-4)
ccomp(like-2, see-5)
det(design-7, the-6)
dobj(see-5, design-7)
poss(eyes-11, our-9)
amod(eyes-11, own-10)
prep_with(see-5, eyes-11)
nsubj(real-17, it-13)
aux(real-17, ca-14)
neg(real-17, n't-15)
cop(real-17, be-16)
conj_but(like-2, real-17)
mark(refuse-20, because-18)
nsubj(refuse-20, we-19)
advcl(real-17, refuse-20)
aux(believe-22, to-21)
xcomp(refuse-20, believe-22)
det(designer-25, a-24)
prep_in(believe-22, designer-25)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD were)
      (ADJP (JJ right)
        (PP (IN about)
          (NP (CD one) (NN thing) (NNP Arthur) (NNP Hunt)))))
    (. .)))

nsubj(right-3, You-1)
cop(right-3, were-2)
root(ROOT-0, right-3)
num(Hunt-8, one-5)
nn(Hunt-8, thing-6)
nn(Hunt-8, Arthur-7)
prep_about(right-3, Hunt-8)

(ROOT
  (S
    (NP (NNS Storms)
      (NX
        (NX (NNS tornadoes))
        (, ,)
        (NX (NNS hurricanes))
        (, ,) (FW etc)))
    (VP (VBP are)
      (NP
        (NP (NNS machines))
        (PP (IN with)
          (NP (NNS engines)))))
    (. .)))

dep(hurricanes-4, Storms-1)
dep(hurricanes-4, tornadoes-2)
nsubj(machines-8, hurricanes-4)
dep(hurricanes-4, etc-6)
cop(machines-8, are-7)
root(ROOT-0, machines-8)
prep_with(machines-8, engines-10)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB always))
    (VP
      (VP (VBZ has)
        (VP (VBN been)))
      (CC and)
      (VP
        (ADVP (RB always))
        (MD will)
        (VP (VB be)
          (ADJP (JJ impossible)
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP (DT a) (NN design))
                  (PP (IN without)
                    (NP (DT a) (NN designer))))))))))
    (. .)))

nsubj(been-4, It-1)
nsubj(impossible-9, It-1)
advmod(been-4, always-2)
aux(been-4, has-3)
root(ROOT-0, been-4)
advmod(impossible-9, always-6)
aux(impossible-9, will-7)
cop(impossible-9, be-8)
conj_and(been-4, impossible-9)
aux(have-11, to-10)
xcomp(impossible-9, have-11)
det(design-13, a-12)
dobj(have-11, design-13)
det(designer-16, a-15)
prep_without(have-11, designer-16)

(ROOT
  (S
    (NP (NNP Truth))
    (VP (VBZ does) (RB n't)
      (VP (VB stop)
        (S
          (VP (VBG being)
            (NP (NN truth))))
        (SBAR (RB just) (IN because)
          (S
            (NP (PRP you))
            (VP (VBP do) (RB n't)
              (VP (VB believe)
                (NP (PRP it))))))))
    (. .)))

nsubj(stop-4, Truth-1)
aux(stop-4, does-2)
neg(stop-4, n't-3)
root(ROOT-0, stop-4)
cop(truth-6, being-5)
xcomp(stop-4, truth-6)
advmod(believe-12, just-7)
dep(believe-12, because-8)
nsubj(believe-12, you-9)
aux(believe-12, do-10)
neg(believe-12, n't-11)
ccomp(stop-4, believe-12)
dobj(believe-12, it-13)

(ROOT
  (S
    (SBAR (RB Just) (IN because)
      (S
        (NP (NN something))
        (VP (VBZ arises)
          (ADVP (RB spontaneously)))))
    (VP (VBZ does) (RB n't)
      (VP (VB disprove)
        (NP (DT a) (NN designer))))
    (. .)))

advmod(arises-4, Just-1)
dep(arises-4, because-2)
nsubj(arises-4, something-3)
advcl(disprove-8, arises-4)
csubj(disprove-8, arises-4)
advmod(arises-4, spontaneously-5)
aux(disprove-8, does-6)
neg(disprove-8, n't-7)
root(ROOT-0, disprove-8)
det(designer-10, a-9)
dobj(disprove-8, designer-10)

