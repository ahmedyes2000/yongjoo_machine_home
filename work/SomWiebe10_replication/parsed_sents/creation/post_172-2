(ROOT
  (S
    (ADVP (RB Apparently))
    (, ,)
    (NP
      (NP (DT all))
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ means)))))
    (VP (VBZ is)
      (SBAR (IN that) (IN if)
        (S
          (S
            (NP
              (NP (DT a) (NN process))
              (PP
                (PP (IN with)
                  (NP (JJ many) (NNS components)))
                (PRN (-LRB- -LRB-)
                  (ADVP (RB therefore))
                  (ADJP (`` ``) (JJ complex) ('' ''))
                  (-RRB- -RRB-))))
            (VP (VBZ behaves)
              (ADVP (RB so) (RB as))
              (S
                (VP (TO to)
                  (VP (VB head)
                    (ADVP (RB coherently))
                    (PP
                      (PP (IN in)
                        (NP (DT a) (JJ single) (NN direction)))
                      (PRN (-LRB- -LRB-)
                        (ADVP (RB therefore))
                        (ADJP (`` ``) (JJ specified) ('' ''))
                        (-RRB- -RRB-))))))))
          (, ,) (RB then)
          (S
            (NP (PRP it))
            (VP (MD must)
              (VP (VB be)
                (NP
                  (NP (DT the) (NN result))
                  (PP (IN of)
                    (NP (JJ intelligent) (NN design))))))))))
    (. .)))

advmod(is-6, Apparently-1)
dobj(means-5, all-3)
nsubj(is-6, all-3)
nsubj(means-5, it-4)
rcmod(all-3, means-5)
root(ROOT-0, is-6)
complm(behaves-20, that-7)
dep(behaves-20, if-8)
det(process-10, a-9)
nsubj(behaves-20, process-10)
xsubj(head-24, process-10)
amod(components-13, many-12)
prep_with(process-10, components-13)
dep(complex-17, therefore-15)
dep(process-10, complex-17)
ccomp(is-6, behaves-20)
advmod(as-22, so-21)
advmod(behaves-20, as-22)
aux(head-24, to-23)
xcomp(behaves-20, head-24)
advmod(head-24, coherently-25)
det(direction-29, a-27)
amod(direction-29, single-28)
prep_in(head-24, direction-29)
dep(specified-33, therefore-31)
dep(head-24, specified-33)
advmod(behaves-20, then-37)
nsubj(result-42, it-38)
aux(result-42, must-39)
cop(result-42, be-40)
det(result-42, the-41)
dep(behaves-20, result-42)
amod(design-45, intelligent-44)
prep_of(result-42, design-45)

(ROOT
  (S
    (INTJ (UH OK))
    (, ,)
    (VP
      (ADVP (RB then))
      (VB try)
      (NP (DT this) (NN one)))
    (. .)))

dep(try-4, OK-1)
advmod(try-4, then-3)
root(ROOT-0, try-4)
det(one-6, this-5)
dobj(try-4, one-6)

