(ROOT
  (S (`` ``)
    (NP (DT The) (NN debate))
    (ADVP (RB here))
    (VP (VBZ is)
      (ADJP (JJ false))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (DT both) (NNP ID)
            (CC and)
            (JJ Darwinian\/natural) (NN selection) (NN theory))
          (VP (VBP are)
            (ADJP (JJ inadequate))))))
    (. .)))

det(debate-3, The-2)
nsubj(false-6, debate-3)
advmod(false-6, here-4)
cop(false-6, is-5)
root(ROOT-0, false-6)
mark(inadequate-16, because-8)
preconj(ID-10, both-9)
nsubj(inadequate-16, ID-10)
amod(theory-14, Darwinian\/natural-12)
nn(theory-14, selection-13)
conj_and(ID-10, theory-14)
nsubj(inadequate-16, theory-14)
cop(inadequate-16, are-15)
advcl(false-6, inadequate-16)

(ROOT
  (S ('' '')
    (PP (IN Whether)
      (NP
        (NP
          (QP (CC or)
            (RB not)))
        (SBAR
          (S
            (NP
              (NP (DT the) (NNP Theory))
              (PP (IN of)
                (NP (NNP Evolution))))
            (VP (VBZ is) (`` ``)
              (ADJP (JJ inadequate))
              ('' ''))))))
    (VP (VBZ is) (RB not)
      (NP (DT an) (NN issue)))
    (. .)))

prep(issue-16, Whether-2)
cc(not-4, or-3)
pobj(Whether-2, not-4)
det(Theory-6, the-5)
nsubj(inadequate-11, Theory-6)
prep_of(Theory-6, Evolution-8)
cop(inadequate-11, is-9)
rcmod(not-4, inadequate-11)
cop(issue-16, is-13)
neg(issue-16, not-14)
det(issue-16, an-15)
root(ROOT-0, issue-16)

(ROOT
  (S
    (NP (DT The) (NN question))
    (VP (VBZ is) (: :)
      (SQ (VBZ Is)
        (NP (PRP it))
        (ADJP (JJ scientific))))
    (. ?)))

det(question-2, The-1)
nsubj(is-3, question-2)
root(ROOT-0, is-3)
cop(scientific-7, Is-5)
nsubj(scientific-7, it-6)
parataxis(is-3, scientific-7)

(ROOT
  (SQ (NNP Does)
    (NP (PRP it))
    (VP (VB have)
      (NP (DT a)
        (ADJP (JJ scientific))
        (NN mechanism)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD could)
              (VP (VB explain)
                (CC and)
                (VB predict)
                (NP
                  (NP (DT the) (`` ``) (NN tree))
                  (PP (IN of)
                    (NP (NN life))))))))
        ('' '')))
    (. ?)))

dep(have-3, Does-1)
nsubj(have-3, it-2)
root(ROOT-0, have-3)
det(mechanism-6, a-4)
amod(mechanism-6, scientific-5)
dobj(have-3, mechanism-6)
nsubj(explain-9, that-7)
nsubj(predict-11, that-7)
aux(explain-9, could-8)
ccomp(mechanism-6, explain-9)
ccomp(mechanism-6, predict-11)
conj_and(explain-9, predict-11)
det(tree-14, the-12)
dobj(explain-9, tree-14)
prep_of(tree-14, life-16)

(ROOT
  (S (CC But)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (ADVP (RB no) ('' ''))
        (NP
          (NP (NNP Theory))
          (PP (IN of)
            (NP (NNP Intelligent) (NNP Design))))))
    ('' '')
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD can)
        (ADVP (RB never))
        (VP (VB be)
          (ADJP (JJ scientific)))))
    (. .)))

expl(is-3, there-2)
root(ROOT-0, is-3)
advmod(is-3, no-4)
nsubj(is-3, Theory-6)
nn(Design-9, Intelligent-8)
prep_of(Theory-6, Design-9)
nsubj(scientific-16, it-12)
aux(scientific-16, can-13)
neg(scientific-16, never-14)
cop(scientific-16, be-15)
conj_and(is-3, scientific-16)

(ROOT
  (S
    (NP (DT The) (JJ overall) (NN question))
    (VP (VBZ is) (: :)
      (SQ (VBZ Does)
        (NP (JJ intelligent) (NN design))
        (VP (VB have)
          (NP (NN merit)))))
    (. ?)))

det(question-3, The-1)
amod(question-3, overall-2)
nsubj(is-4, question-3)
root(ROOT-0, is-4)
aux(have-9, Does-6)
amod(design-8, intelligent-7)
nsubj(have-9, design-8)
parataxis(is-4, have-9)
dobj(have-9, merit-10)

(ROOT
  (S
    (NP (DT The) (JJ obvious) (NN answer))
    (VP (VBZ is)
      (ADVP (RB no)
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBZ explains)
              (FRAG
                (NP (NN everything)))
              (PRN (-LRB- -LRB-)
                (S
                  (NP (DT every) (NN living) (NN thing))
                  (VP (VBZ is)
                    (VP (VBN designed))))
                (. ?) (-RRB- -RRB-)))))))))

det(answer-3, The-1)
amod(answer-3, obvious-2)
nsubj(is-4, answer-3)
root(ROOT-0, is-4)
advmod(is-4, no-5)
mark(explains-8, because-6)
nsubj(explains-8, it-7)
dep(no-5, explains-8)
dep(explains-8, everything-9)
det(thing-13, every-11)
nn(thing-13, living-12)
nsubjpass(designed-15, thing-13)
auxpass(designed-15, is-14)
parataxis(explains-8, designed-15)

(ROOT
  (S (CC and)
    (ADVP (RB yet))
    (NP (PRP it))
    (VP (VBZ does) (RB not)
      (VP (VB have)
        (NP
          (NP (DT any) (NN kind))
          (PP (IN of)
            (NP
              (NP (JJ scientific) (`` ``) (NNS mechanism) ('' ''))
              (PRN (-LRB- -LRB-)
                (PP (IN like)
                  (NP (NN mutation)
                    (CC and)
                    (JJ natural) (NN selection)))
                (-RRB- -RRB-))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD could)
                    (ADVP (RB ever))
                    (VP
                      (ADVP (RB actually))
                      (VB explain)
                      (NP (NN anything)))))))))))
    (. .)))

cc(have-6, and-1)
advmod(have-6, yet-2)
nsubj(have-6, it-3)
aux(have-6, does-4)
neg(have-6, not-5)
root(ROOT-0, have-6)
det(kind-8, any-7)
dobj(have-6, kind-8)
amod(mechanism-12, scientific-10)
prep_of(kind-8, mechanism-12)
nsubj(explain-25, mechanism-12)
dep(mechanism-12, like-15)
nn(selection-19, mutation-16)
conj_and(mutation-16, natural-18)
nn(selection-19, natural-18)
pobj(like-15, selection-19)
aux(explain-25, could-22)
advmod(explain-25, ever-23)
advmod(explain-25, actually-24)
rcmod(mechanism-12, explain-25)
dobj(explain-25, anything-26)

