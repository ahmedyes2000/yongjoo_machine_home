(ROOT
  (SBARQ
    (WHADVP
      (ADVP (RB PvM))
      (WRB Why))
    (SQ (MD would)
      (NP (NNS materialists))
      (VP (VB impose)
        (NP (DT the) (NN supernatural))))
    (. ?)))

advmod(Why-2, PvM-1)
advmod(impose-5, Why-2)
aux(impose-5, would-3)
nsubj(impose-5, materialists-4)
root(ROOT-0, impose-5)
det(supernatural-7, the-6)
dobj(impose-5, supernatural-7)

(ROOT
  (S
    (NP (DT This))
    (ADVP (RB just))
    (VP (VBZ does) (RB not)
      (VP (VB make)
        (NP (NN sense))))
    (. .)))

nsubj(make-5, This-1)
advmod(make-5, just-2)
aux(make-5, does-3)
neg(make-5, not-4)
root(ROOT-0, make-5)
dobj(make-5, sense-6)

(ROOT
  (FRAG
    (ADJP (RB Very) (JJ funny))
    (. .)))

advmod(funny-2, Very-1)
root(ROOT-0, funny-2)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ has)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NNP Newtonians))))))))
    (. .)))

prep_of(has-5, course-2)
nsubj(has-5, ID-4)
root(ROOT-0, has-5)
dobj(has-5, nothing-6)
aux(do-8, to-7)
infmod(nothing-6, do-8)
prep_with(do-8, Newtonians-10)

(ROOT
  (FRAG (CC But)
    (NP
      (NP (NNS thanks))
      (PP (IN for)
        (S
          (VP (VBG admitting)
            (NP (NN dogma))))))
    (. .)))

dep(thanks-2, But-1)
root(ROOT-0, thanks-2)
prepc_for(thanks-2, admitting-4)
dobj(admitting-4, dogma-5)

(ROOT
  (S
    (VP (VB PvM)
      (SBAR
        (S
          (NP (PRP It))
          (VP (MD should)
            (VP (VB be)
              (ADJP (JJ clear)
                (PP (IN by)
                  (ADVP (RB now))))
              (SBAR (IN that)
                (S
                  (NP (NN science))
                  (VP (VBZ does) (RB not)
                    (VP (VB fill)
                      (NP (NNS gaps))
                      (PP (IN with)
                        (NP (JJ promissory) (NNS notes)))
                      (PP
                        (CONJP (CC but)
                          (RB rather))
                        (PP (IN with)
                          (NP
                            (NP (JJ hard) (NN work))
                            (CC or)
                            (NP
                              (NP (DT a) (JJ simple) (NN admission))
                              (PP (IN of)
                                (SBAR
                                  (SBAR (`` ``)
                                    (S
                                      (NP (PRP we))
                                      (VP (VBP do) (RB n't)
                                        (VP (VB know)))))
                                  ('' '')
                                  (CC and)
                                  (SBAR (IN that)
                                    (S
                                      (NP (NNP ID) (NNS proponents))
                                      (VP (VBP wish)
                                        (S
                                          (VP (TO to)
                                            (VP (VB assign) (`` ``)
                                              (NP (NN design))
                                              ('' '')
                                              (PP (TO to)
                                                (NP
                                                  (NP (VBN said) (NN ignorance))
                                                  (PP (IN as)
                                                    (NP (DT a) (NN placeholder)))))
                                              (PP (IN while)
                                                (S
                                                  (VP (VBG providing)
                                                    (NP (DT no) (NN guidance))))))))))))))))
                        (CONJP (IN as))
                        (PP (TO to)
                          (SBAR
                            (WHADVP (WRB how))
                            (S
                              (NP (NNP ID))
                              (VP (MD will)
                                (VP (VB serve)
                                  (S
                                    (VP (TO to)
                                      (VP (VB strengthen)
                                        (NP (DT the) (`` ``) (NN design) (NN inference) ('' ''))))))))))))))))))))
    (. .)))

root(ROOT-0, PvM-1)
nsubj(clear-5, It-2)
aux(clear-5, should-3)
cop(clear-5, be-4)
ccomp(PvM-1, clear-5)
prep(clear-5, by-6)
pcomp(by-6, now-7)
complm(fill-12, that-8)
nsubj(fill-12, science-9)
nsubj(fill-12', science-9)
aux(fill-12, does-10)
neg(fill-12, not-11)
ccomp(clear-5, fill-12)
ccomp(clear-5, fill-12')
conj_as(fill-12, fill-12')
dobj(fill-12, gaps-13)
amod(notes-16, promissory-15)
prep_with(fill-12, notes-16)
cc(fill-12, rather-18)
amod(work-21, hard-20)
prep_with(fill-12, work-21)
det(admission-25, a-23)
amod(admission-25, simple-24)
prep_with(fill-12, admission-25)
conj_or(work-21, admission-25)
nsubj(know-31, we-28)
aux(know-31, do-29)
neg(know-31, n't-30)
prepc_of(admission-25, know-31)
dep(wish-37, that-34)
nn(proponents-36, ID-35)
nsubj(wish-37, proponents-36)
prepc_of(admission-25, wish-37)
conj_and(know-31, wish-37)
aux(assign-39, to-38)
xcomp(wish-37, assign-39)
dobj(assign-39, design-41)
amod(ignorance-45, said-44)
prep_to(assign-39, ignorance-45)
det(placeholder-48, a-47)
prep_as(ignorance-45, placeholder-48)
prepc_while(assign-39, providing-50)
det(guidance-52, no-51)
dobj(providing-50, guidance-52)
advmod(serve-58, how-55)
nsubj(serve-58, ID-56)
aux(serve-58, will-57)
prepc_to(fill-12', serve-58)
aux(strengthen-60, to-59)
xcomp(serve-58, strengthen-60)
det(inference-64, the-61)
nn(inference-64, design-63)
dobj(strengthen-60, inference-64)

(ROOT
  (S
    (S
      (NP
        (NP (DT All))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (TO to)
              (VP (VB say))))))
      (, ,) (`` ``)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB believe)
          (PP (IN in)
            (NP
              (NP (DT an) (NN Intelligent) (NN Designer) ('' ''))
              (PRN (-LRB- -LRB-)
                (NP (NNP Creator))
                (-RRB- -RRB-)))))))
    (CC and)
    (S
      (S
        (SBAR (RB even) (IN if)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (CD one)))))
        (, ,)
        (NP (DT that) (NN fact))
        (VP (MD would) (RB n't)
          (VP (VB strengthen)
            (NP (DT the) (`` ``) (NN design) (NN inference) ('' '')))))
      (, ,)
      (CC nor)
      (SQ (MD would)
        (NP (DT the) (NN design) (NN inference))
        (, ,)
        (VP (VB strengthen)
          (NP (DT the) (NN inference))
          (PP (TO to)
            (NP (DT the) (NN designer))))))
    (. .)))

nsubj(say-4, All-1)
nsubj(believe-10, All-1)
aux(say-4, to-3)
infmod(All-1, say-4)
rcmod(All-1, say-4)
nsubj(believe-10, I-7)
aux(believe-10, do-8)
neg(believe-10, n't-9)
root(ROOT-0, believe-10)
det(Designer-14, an-12)
nn(Designer-14, Intelligent-13)
prep_in(believe-10, Designer-14)
appos(Designer-14, Creator-17)
advmod(is-23, even-20)
dep(is-23, if-21)
expl(is-23, there-22)
advcl(strengthen-30, is-23)
nsubj(is-23, one-24)
det(fact-27, that-26)
nsubj(strengthen-30, fact-27)
aux(strengthen-30, would-28)
neg(strengthen-30, n't-29)
conj_and(believe-10, strengthen-30)
det(inference-34, the-31)
nn(inference-34, design-33)
dobj(strengthen-30, inference-34)
aux(strengthen-43, would-38)
det(inference-41, the-39)
nn(inference-41, design-40)
nsubj(strengthen-43, inference-41)
conj_and(believe-10, strengthen-43)
conj_nor(strengthen-30, strengthen-43)
det(inference-45, the-44)
dobj(strengthen-43, inference-45)
det(designer-48, the-47)
prep_to(strengthen-43, designer-48)

(ROOT
  (SINV
    (ADVP (RB Now))
    (VP (VBZ thatis))
    (NP (DT a) (NN materialist) (NN mindset))
    (. .)))

advmod(thatis-2, Now-1)
root(ROOT-0, thatis-2)
det(mindset-5, a-3)
nn(mindset-5, materialist-4)
nsubj(thatis-2, mindset-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP reckon)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD 'll)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB take)
                    (NP (PRP$ your) (NN word))
                    (, ,)
                    (PP (IN on)
                      (NP (PRP$ your) (NN Christianity)))))))))))
    (. .)))

nsubj(reckon-2, I-1)
root(ROOT-0, reckon-2)
nsubj(have-5, we-3)
xsubj(take-7, we-3)
aux(have-5, 'll-4)
ccomp(reckon-2, have-5)
aux(take-7, to-6)
xcomp(have-5, take-7)
poss(word-9, your-8)
dobj(take-7, word-9)
poss(Christianity-13, your-12)
prep_on(take-7, Christianity-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP they))
            (ADVP (RB always))
            (VP (VBP do))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
advmod(do-8, why-5)
nsubj(do-8, they-6)
advmod(do-8, always-7)
advcl(know-4, do-8)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ glad)
        (S
          (VP (TO to)
            (VP (VB hear)
              (SBAR (IN that)
                (S
                  (NP (NNP Jumpstart))
                  (VP (VBZ admits)
                    (SBAR (IN that)
                      (S
                        (NP (NNP ID))
                        (VP (VBZ is)
                          (NP
                            (NP (DT all))
                            (PP (IN about)
                              (NP (DT the) (NN supernatural)))))))))))))))
    (. .)))

nsubj(glad-4, I-2)
cop(glad-4, am-3)
root(ROOT-0, glad-4)
aux(hear-6, to-5)
xcomp(glad-4, hear-6)
complm(admits-9, that-7)
nsubj(admits-9, Jumpstart-8)
ccomp(hear-6, admits-9)
complm(all-13, that-10)
nsubj(all-13, ID-11)
cop(all-13, is-12)
ccomp(admits-9, all-13)
det(supernatural-16, the-15)
prep_about(all-13, supernatural-16)

(ROOT
  (S ('' '')
    (S (CC But)
      (NP (PRP they))
      (VP (VBP are)
        (ADVP (RB always))
        (VP (VBG assigning)
          (NP
            (NP (NNP IDeas))
            (, ,) (RB too)
            (NP (DT the) (JJ supernatural) (NN ?!))))))
    (: -)
    (S
      (NP (JJ PvM-On) (DT the) (NN contrary))
      (PRN (, ,)
        (S
          (NP (NNS materialists))
          (VP (VBP do) (RB not)
            (VP (VB ignore)
              (NP (DT the) (`` ``) (NN supernatural) ('' '')))))
        (, ,))
      (NP (PRP they))
      (VP
        (ADVP (RB rather))
        (VBP find)
        (NP (JJ scientific) (NNS explanations))
        (SBAR (IN for)
          (S
            (VP (VBD said)
              (NP
                (NP (`` ``) (NN supernatural) ('' ''))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (ADVP (RB historically))
                    (VP (VBZ has)
                      (VP (VBN included)
                        (NP
                          (NP (DT a) (NN lot))
                          (PP (IN of)
                            (NP
                              (NP (NNS gaps))
                              (PP (IN in)
                                (NP (PRP$ our) (NN knowledge))))))))))))))))
    (. .)))

cc(assigning-6, But-2)
nsubj(assigning-6, they-3)
aux(assigning-6, are-4)
advmod(assigning-6, always-5)
root(ROOT-0, assigning-6)
dobj(assigning-6, IDeas-7)
advmod(IDeas-7, too-9)
det(?!-12, the-10)
amod(?!-12, supernatural-11)
dep(IDeas-7, ?!-12)
amod(contrary-16, PvM-On-14)
det(contrary-16, the-15)
nsubj(find-29, contrary-16)
nsubj(ignore-21, materialists-18)
aux(ignore-21, do-19)
neg(ignore-21, not-20)
parataxis(find-29, ignore-21)
det(supernatural-24, the-22)
dobj(ignore-21, supernatural-24)
nsubj(find-29, they-27)
advmod(find-29, rather-28)
parataxis(assigning-6, find-29)
amod(explanations-31, scientific-30)
dobj(find-29, explanations-31)
mark(said-33, for-32)
advcl(find-29, said-33)
dobj(said-33, supernatural-35)
nsubj(included-40, supernatural-35)
advmod(included-40, historically-38)
aux(included-40, has-39)
rcmod(supernatural-35, included-40)
det(lot-42, a-41)
dobj(included-40, lot-42)
prep_of(lot-42, gaps-44)
poss(knowledge-47, our-46)
prep_in(gaps-44, knowledge-47)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP they))
        (VP (VBP do))))
    (VP (VBZ is) (, ,)
      (FRAG
        (VP (VB try)
          (CC and)
          (VB find)
          (NP
            (NP (NNS answers))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP stem)
                  (PP (IN from)
                    (NP (DT the) (NN material))))))))))
    (. .)))

dobj(do-3, What-1)
nsubj(do-3, they-2)
csubj(is-4, do-3)
root(ROOT-0, is-4)
dep(is-4, try-6)
dep(is-4, find-8)
conj_and(try-6, find-8)
dobj(try-6, answers-9)
nsubj(stem-11, answers-9)
rcmod(answers-9, stem-11)
det(material-14, the-13)
prep_from(stem-11, material-14)

(ROOT
  (S (IN So)
    (NP
      (NP (DT that) (NN nothing))
      (, ,)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD could)
            (VP (VB be)
              (VP (VBN construed)
                (PP (IN as)
                  (NP (DT an) (NNP Intelligent) (NN Designer))))))))
      (, ,))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN identified)
          (PP (IN by)
            (NP (NN science))))))
    (. !)))

dep(identified-16, So-1)
det(nothing-3, that-2)
nsubjpass(construed-8, nothing-3)
nsubjpass(identified-16, nothing-3)
aux(construed-8, could-6)
auxpass(construed-8, be-7)
rcmod(nothing-3, construed-8)
det(Designer-12, an-10)
nn(Designer-12, Intelligent-11)
prep_as(construed-8, Designer-12)
aux(identified-16, can-14)
auxpass(identified-16, be-15)
root(ROOT-0, identified-16)
agent(identified-16, science-18)

(ROOT
  (S
    (VP
      (ADVP (RB Therefore))
      (VBG forcing)
      (NP
        (NP (DT the) (NN biggestgap))
        (PP (IN of)
          (NP (DT all)))))
    (. .)))

advmod(forcing-2, Therefore-1)
root(ROOT-0, forcing-2)
det(biggestgap-4, the-3)
dobj(forcing-2, biggestgap-4)
prep_of(biggestgap-4, all-6)

(ROOT
  (S
    (NP (NNP PvM-Of) (NN course) (NNP ID))
    (VP (MD could)
      (ADVP (RB only))
      (VP (VB wish)
        (SBAR (IN for)
          (S
            (NP (PRP it))
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT a) (`` ``) (NN fact))
                  (PP (IN of)
                    (NP (NN science) ('' ''))))))))))
    (. .)))

nn(ID-3, PvM-Of-1)
nn(ID-3, course-2)
nsubj(wish-6, ID-3)
aux(wish-6, could-4)
advmod(wish-6, only-5)
root(ROOT-0, wish-6)
mark(fact-13, for-7)
nsubj(fact-13, it-8)
aux(fact-13, to-9)
cop(fact-13, be-10)
det(fact-13, a-11)
advcl(wish-6, fact-13)
xcomp(wish-6, fact-13)
prep_of(fact-13, science-15)

(ROOT
  (NP
    (NP (DT Those))
    (NP
      (NP (JJ darn) (NNS Newtonians))
      (CC and)
      (NP (PRP$ their) (JJ dogmatic) (NN position)))
    (. .)))

root(ROOT-0, Those-1)
amod(Newtonians-3, darn-2)
dep(Those-1, Newtonians-3)
poss(position-7, their-5)
amod(position-7, dogmatic-6)
dep(Those-1, position-7)
conj_and(Newtonians-3, position-7)

