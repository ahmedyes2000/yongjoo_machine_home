(ROOT
  (S
    (NP (NNP JoeWe))
    (VP (VBP look)
      (PP (IN at)
        (NP (DT the) (NNS options))))
    (. .)))

nsubj(look-2, JoeWe-1)
root(ROOT-0, look-2)
det(options-5, the-4)
prep_at(look-2, options-5)

(ROOT
  (S (CC And)
    (NP (DT the) (JJ anti) (NNP ID) (NN option))
    (VP (VBZ is)
      (S (`` ``)
        (NP (PRP it))
        (VP
          (ADVP (RB just))
          (VBD happened))
        ('' '')))
    (. .)))

cc(is-6, And-1)
det(option-5, the-2)
amod(option-5, anti-3)
nn(option-5, ID-4)
nsubj(is-6, option-5)
root(ROOT-0, is-6)
nsubj(happened-10, it-8)
advmod(happened-10, just-9)
ccomp(is-6, happened-10)

(ROOT
  (S
    (NP (NNP LoL) (JJ YOUR) (NN position))
    (VP (VBZ is)
      (ADJP (JJ vacuous)))
    (. .)))

nn(position-3, LoL-1)
amod(position-3, YOUR-2)
nsubj(vacuous-5, position-3)
cop(vacuous-5, is-4)
root(ROOT-0, vacuous-5)

(ROOT
  (S (CC And)
    (NP (EX there))
    (VP (VBZ is) (RB n't)
      (NP
        (NP (DT any) (NNS data))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ shows)
              (SBAR
                (S
                  (NP
                    (NP (DT an) (NN accumulation))
                    (PP (IN of)
                      (NP (NNS mutations))))
                  (VP (MD can)
                    (VP (VB do)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP you))
                          (VP (VBP say)
                            (SBAR
                              (S
                                (NP (PRP they))
                                (VP (VBD did))))))))))))))))
    (. .)))

cc(is-3, And-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
neg(is-3, n't-4)
det(data-6, any-5)
nsubj(is-3, data-6)
nsubj(shows-8, data-6)
rcmod(data-6, shows-8)
det(accumulation-10, an-9)
nsubj(do-14, accumulation-10)
prep_of(accumulation-10, mutations-12)
aux(do-14, can-13)
ccomp(shows-8, do-14)
dep(say-17, what-15)
dobj(did-19, what-15)
nsubj(say-17, you-16)
ccomp(do-14, say-17)
nsubj(did-19, they-18)
ccomp(say-17, did-19)

(ROOT
  (S
    (NP (NNP THAT))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (NN science))
          (VP (VBZ works)
            (PP (IN by)
              (S
                (ADVP (RB actually))
                (VP (VBG demonstrating)
                  (NP
                    (NP (DT the) (NN premise))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP hold))))))))))))
    (. .)))

nsubj(is-2, THAT-1)
root(ROOT-0, is-2)
advmod(works-5, how-3)
nsubj(works-5, science-4)
ccomp(is-2, works-5)
advmod(demonstrating-8, actually-7)
prepc_by(works-5, demonstrating-8)
det(premise-10, the-9)
dobj(demonstrating-8, premise-10)
dobj(hold-12, premise-10)
nsubj(hold-12, you-11)
rcmod(premise-10, hold-12)

(ROOT
  (S
    (S
      (NP (NNP PvMI))
      (VP (VBP understand)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP you))
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB abandon)
                    (S
                      (VP (VBG discussing)
                        (NP (NNP ID))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB also))
      (VP (VB hate)
        (S
          (VP (TO to)
            (VP (VB have)
              (S
                (VP (TO to)
                  (VP (VB defend)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(understand-2, PvMI-1)
ccomp(hate-14, understand-2)
advmod(want-5, why-3)
nsubj(want-5, you-4)
xsubj(abandon-7, you-4)
advcl(understand-2, want-5)
aux(abandon-7, to-6)
xcomp(want-5, abandon-7)
xcomp(abandon-7, discussing-8)
dobj(discussing-8, ID-9)
nsubj(hate-14, I-11)
xsubj(have-16, I-11)
aux(hate-14, would-12)
advmod(hate-14, also-13)
root(ROOT-0, hate-14)
aux(have-16, to-15)
xcomp(hate-14, have-16)
aux(defend-18, to-17)
xcomp(have-16, defend-18)
dobj(defend-18, it-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP understand)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB want)
              (S
                (VP (TO to)
                  (VP (VB discuss)
                    (NP (PRP$ your) (NN position))))))))))
    (. .)))

nsubj(understand-2, I-1)
root(ROOT-0, understand-2)
advmod(want-7, why-3)
nsubj(want-7, you-4)
xsubj(discuss-9, you-4)
aux(want-7, do-5)
neg(want-7, n't-6)
advcl(understand-2, want-7)
aux(discuss-9, to-8)
xcomp(want-7, discuss-9)
poss(position-11, your-10)
dobj(discuss-9, position-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB totally))
      (VP (VBN based)
        (PP (IN on)
          (NP (NN faith)))))
    (. .)))

nsubjpass(based-4, It-1)
auxpass(based-4, is-2)
advmod(based-4, totally-3)
root(ROOT-0, based-4)
prep_on(based-4, faith-6)

(ROOT
  (S
    (NP
      (NP (NNP PvMOn))
      (NP
        (NP (DT the) (NN contrary))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (NNP ID))
                  (VP (VBZ 's) (`` ``)
                    (NP (NN explanation))
                    ('' '')))))))))
    (VP (VBZ is)
      (ADJP (`` ``) (JJ poof) ('' '')
        (SBAR
          (S
            (NP (DT That))
            (VP (VBZ 's)
              (ADJP (JJ false)))))))
    (. .)))

nsubj(poof-15, PvMOn-1)
det(contrary-3, the-2)
dep(PvMOn-1, contrary-3)
nsubj('s-6, contrary-3)
rcmod(contrary-3, 's-6)
dobj(explanation-11, what-7)
nsubj(explanation-11, ID-8)
cop(explanation-11, 's-9)
ccomp('s-6, explanation-11)
cop(poof-15, is-13)
root(ROOT-0, poof-15)
nsubj(false-19, That-17)
cop(false-19, 's-18)
dep(poof-15, false-19)

(ROOT
  (S
    (VP (VB Thank)
      (NP (PRP you))
      (PP (IN for)
        (S
          (VP (VBG demonstrating)
            (NP (PRP$ your) (NN dishonesty))))))
    (. .)))

root(ROOT-0, Thank-1)
dobj(Thank-1, you-2)
prepc_for(Thank-1, demonstrating-4)
poss(dishonesty-6, your-5)
dobj(demonstrating-4, dishonesty-6)

(ROOT
  (S
    (ADVP (RB BTW))
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (DT an) (NN explanation))))
    (. .)))

advmod(have-5, BTW-1)
nsubj(have-5, you-2)
aux(have-5, do-3)
neg(have-5, n't-4)
root(ROOT-0, have-5)
det(explanation-7, an-6)
dobj(have-5, explanation-7)

(ROOT
  (FRAG
    (NP (NNP PvM))
    (: :)
    (S
      (NP (DT All) (NNS textbooks))
      (VP (VBP teach)
        (SBAR (IN that)
          (S
            (NP (DT a) (NN designer))
            (VP (VBD was) (RB not) (`` ``)
              (NP
                (NP (JJ required))
                ('' '')
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is) (RB not)
                      (ADVP
                        (NP (DT the) (JJ same))
                        (RB as))
                      (ADJP (`` ``) (RB not) (VBN involved) ('' '')))))))))))
    (. .)))

root(ROOT-0, PvM-1)
det(textbooks-4, All-3)
nsubj(teach-5, textbooks-4)
dep(PvM-1, teach-5)
complm(required-12, that-6)
det(designer-8, a-7)
nsubj(required-12, designer-8)
cop(required-12, was-9)
neg(required-12, not-10)
ccomp(teach-5, required-12)
nsubjpass(involved-22, which-14)
auxpass(involved-22, is-15)
neg(involved-22, not-16)
det(same-18, the-17)
npadvmod(as-19, same-18)
advmod(involved-22, as-19)
neg(involved-22, not-21)
rcmod(required-12, involved-22)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is) (RB n't)
      (NP
        (NP (NN anything))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ supports)
              (NP (DT that) (NN concept)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
neg(is-2, n't-3)
nsubj(is-2, anything-4)
nsubj(supports-6, anything-4)
rcmod(anything-4, supports-6)
det(concept-8, that-7)
dobj(supports-6, concept-8)

(ROOT
  (S
    (NP (PDT All) (PRP$ our) (NN exoperience))
    (VP (VBZ tells)
      (NP (PRP us))
      (NP
        (NP (DT a) (NN designer))
        (SBAR
          (S
            (VP (VBZ is)
              (VP (VBN required)))))))
    (. .)))

predet(exoperience-3, All-1)
poss(exoperience-3, our-2)
nsubj(tells-4, exoperience-3)
root(ROOT-0, tells-4)
iobj(tells-4, us-5)
det(designer-7, a-6)
dobj(tells-4, designer-7)
auxpass(required-9, is-8)
rcmod(designer-7, required-9)

(ROOT
  (S
    (NP (NNP PvMSo))
    (VP (VBP let)
      (S
        (NP (POS 's))
        (VP
          (VP (VB accept)
            (NP
              (NP (DT the) (NN vacuity))
              (PP (IN of)
                (NP (NNP ID)))))
          (CC and)
          (VP (VB move)
            (PP (TO to)
              (NP (JJ real) (NN science)))))))
    (. .)))

nsubj(let-2, PvMSo-1)
root(ROOT-0, let-2)
nsubj(accept-4, 's-3)
nsubj(move-10, 's-3)
ccomp(let-2, accept-4)
det(vacuity-6, the-5)
dobj(accept-4, vacuity-6)
prep_of(vacuity-6, ID-8)
ccomp(let-2, move-10)
conj_and(accept-4, move-10)
amod(science-13, real-12)
prep_to(move-10, science-13)

(ROOT
  (SBARQ (RB So)
    (WHNP (WDT what) (NN evidence))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB have)
        (SBAR (IN that)
          (S
            (NP (NNP UCD))
            (VP (VBZ is) (RB not)
              (ADJP (JJ possible)
                (PP (IN through)
                  (NP
                    (NP (DT the) (NN accumulation))
                    (PP (IN of)
                      (NP (NNS mutations)))))))))))
    (. ?)))

advmod(have-6, So-1)
det(evidence-3, what-2)
dobj(have-6, evidence-3)
aux(have-6, do-4)
nsubj(have-6, you-5)
root(ROOT-0, have-6)
complm(possible-11, that-7)
nsubj(possible-11, UCD-8)
cop(possible-11, is-9)
neg(possible-11, not-10)
ccomp(have-6, possible-11)
det(accumulation-14, the-13)
prep_through(possible-11, accumulation-14)
prep_of(accumulation-14, mutations-16)

