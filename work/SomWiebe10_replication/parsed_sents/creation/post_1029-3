(ROOT
  (S ('' '')
    (S
      (S
        (VP (TO To)
          (VP (VB deny)
            (NP (DT that) (NNP ID)))))
      (VP (VBZ is)
        (VP (VBG being)
          (VP (VBN used)
            (S
              (VP (TO to)
                (VP (VB undermine)
                  (NP
                    (CONJP (RB not) (JJ only))
                    (NP (NN evolution))
                    (, ,)
                    (CC but)
                    (NP
                      (NP (NN science))
                      (PP (IN as)
                        (NP (DT a) (NN whole))))))))))))
    (, ,)
    (VP (VBZ is) (: ...)
      (S
        (VP (TO to)
          (VP (VB put)
            (NP (PRP it))
            (ADVP (RB lightly))))))
    (NP (DT a) (JJ dumb) (NN thing)
      (S
        (VP (TO to)
          (VP (VB do)))))
    (. .)))

aux(deny-3, To-2)
csubjpass(used-8, deny-3)
det(ID-5, that-4)
dobj(deny-3, ID-5)
aux(used-8, is-6)
auxpass(used-8, being-7)
ccomp(is-21, used-8)
aux(undermine-10, to-9)
xcomp(used-8, undermine-10)
neg(only-12, not-11)
preconj(evolution-13, only-12)
dobj(undermine-10, evolution-13)
dobj(undermine-10, science-16)
conj_but(evolution-13, science-16)
det(whole-19, a-18)
prep_as(science-16, whole-19)
root(ROOT-0, is-21)
aux(put-24, to-23)
parataxis(is-21, put-24)
xcomp(is-21, put-24)
dobj(put-24, it-25)
advmod(put-24, lightly-26)
det(thing-29, a-27)
amod(thing-29, dumb-28)
dep(is-21, thing-29)
aux(do-31, to-30)
infmod(thing-29, do-31)

