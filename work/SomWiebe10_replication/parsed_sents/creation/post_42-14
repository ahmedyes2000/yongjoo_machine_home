(ROOT
  (S (CC So)
    (SBAR
      (WHADVP (WRB why))
      (FRAG
        (ADVP (RB then))))
    (, ,)
    (PRN
      (SINV (VBP do)
        (NP (PRP you))
        (VP (VB trust)
          (NP
            (NP (DT a) (NN theory))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP
                  (NP (NN death))
                  (CC &)
                  (NP (NN time)))
                (VP
                  (VP (VBP are)
                    (NP (DT the) (NNS heroes)))
                  (CC and)
                  (VP (VBZ is)
                    (ADVP (RB obviously))
                    (VP (VBG lacking)
                      (NP (DT the) (JJ same) (NNS credentials))
                      (SBAR (IN that)
                        (S
                          (NP (PRP you))
                          (VP (VBP claim)))))))))))))
    (VP (VBP apply)
      (PP (TO to)
        (NP (NNP ID))))
    (. .) ('' '')))

cc(apply-28, So-1)
advmod(then-3, why-2)
advcl(apply-28, then-3)
aux(trust-7, do-5)
nsubj(trust-7, you-6)
parataxis(apply-28, trust-7)
det(theory-9, a-8)
dobj(trust-7, theory-9)
rel(heroes-17, which-11)
nsubj(heroes-17, death-12)
nsubj(lacking-21, death-12)
conj_and(death-12, time-14)
nsubj(heroes-17, time-14)
cop(heroes-17, are-15)
det(heroes-17, the-16)
rcmod(theory-9, heroes-17)
aux(lacking-21, is-19)
advmod(lacking-21, obviously-20)
rcmod(theory-9, lacking-21)
conj_and(heroes-17, lacking-21)
det(credentials-24, the-22)
amod(credentials-24, same-23)
dobj(lacking-21, credentials-24)
complm(claim-27, that-25)
nsubj(claim-27, you-26)
ccomp(lacking-21, claim-27)
root(ROOT-0, apply-28)
prep_to(apply-28, ID-30)

(ROOT
  (S
    (VP (VB Pull)
      (NP
        (NP (DT the) (NN beam))
        (PP (RB out) (IN of)
          (NP (PRP$ your) (NN eye))))
      (PP (IN before)
        (S
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB pull)
                  (NP (DT the) (NN splinter))
                  (PRT (RP out))
                  (PP (IN of)
                    (NP (NN mine))))))))))
    (. !)))

root(ROOT-0, Pull-1)
det(beam-3, the-2)
dobj(Pull-1, beam-3)
poss(eye-7, your-6)
prep_out_of(beam-3, eye-7)
prepc_before(Pull-1, trying-9)
aux(pull-11, to-10)
xcomp(trying-9, pull-11)
det(splinter-13, the-12)
dobj(pull-11, splinter-13)
prep_out_of(pull-11, mine-16)

