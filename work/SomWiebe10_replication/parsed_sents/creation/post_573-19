(ROOT
  (S
    (PP (VBN Given)
      (NP
        (NP (DT all) (JJ probabilistic) (NNS resources))
        (PRN (-LRB- -LRB-)
          (ADJP (DT both) (JJ replicational)
            (CC and)
            (JJ specificational))
          (-RRB- -RRB-))))
    (, ,)
    (NP (PRP you))
    (VP (MD will) (RB not)
      (VP (VB expect)
        (NP
          (NP (NN life))
          (PP (IN on)
            (NP
              (NP (PRP it) (POS 's))
              (JJ own))))
        (PP (IN without)
          (NP
            (NP (DT some) (NN kind))
            (PP (IN of)
              (NP (NN intervention)))))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB produce)
                      (NP
                        (NP (DT an) (NN increase))
                        (PP (IN of)
                          (NP
                            (NP (CD 500) (NNS bits))
                            (PP (IN of)
                              (NP
                                (ADJP
                                  (ADJP (JJ new))
                                  (, ,)
                                  (ADJP (JJ useful))
                                  (, ,))
                                (NN complexity)))))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBD was) (RB not)
                              (ADVP (RB already))
                              (NP (RB there)))))))))))))))
    (. .)))

prep(expect-15, Given-1)
det(resources-4, all-2)
amod(resources-4, probabilistic-3)
dep(Given-1, resources-4)
preconj(replicational-7, both-6)
dep(resources-4, replicational-7)
dep(resources-4, specificational-9)
conj_and(replicational-7, specificational-9)
nsubj(expect-15, you-12)
xsubj(able-28, you-12)
aux(expect-15, will-13)
neg(expect-15, not-14)
root(ROOT-0, expect-15)
dobj(expect-15, life-16)
prep_on(life-16, it-18)
possessive(it-18, 's-19)
amod(it-18, own-20)
det(kind-23, some-22)
prep_without(expect-15, kind-23)
prep_of(kind-23, intervention-25)
aux(able-28, to-26)
cop(able-28, be-27)
xcomp(expect-15, able-28)
aux(produce-30, to-29)
xcomp(able-28, produce-30)
det(increase-32, an-31)
dobj(produce-30, increase-32)
nsubj(there-46, increase-32)
num(bits-35, 500-34)
prep_of(increase-32, bits-35)
amod(complexity-41, new-37)
dep(new-37, useful-39)
prep_of(bits-35, complexity-41)
cop(there-46, was-43)
neg(there-46, not-44)
advmod(there-46, already-45)
rcmod(increase-32, there-46)

