(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP
            (NP (DT the) (NN question))
            (PP (IN of)
              (NP (PRP$ my) (NNS designers) (NN origin))))
          (VP
            (VP (VBZ is) (RB not)
              (ADJP (JJ scientific)))
            (CC and)
            (VP (VBZ does) (RB not)
              (VP (VB have)
                (NP (DT a) (JJ scientific) (NN answer)))))))
      (, ,)
      (ADVP (RB then))
      (NP (PRP$ my) (NN designer))
      (VP (MD can) (RB not)
        (VP (VB be)
          (NP (NNP Mr.) (NNP Spock)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ my) (NN designer))
      (VP (MD must)
        (VP (VB be)
          (NP (DT a) (JJ super) (JJ natural) (NN entity)))))
    (. .)))

mark(scientific-10, If-1)
det(question-3, the-2)
nsubj(scientific-10, question-3)
nsubj(have-14, question-3)
poss(origin-7, my-5)
nn(origin-7, designers-6)
prep_of(question-3, origin-7)
cop(scientific-10, is-8)
neg(scientific-10, not-9)
advcl(Spock-26, scientific-10)
aux(have-14, does-12)
neg(have-14, not-13)
conj_and(scientific-10, have-14)
advcl(Spock-26, have-14)
det(answer-17, a-15)
amod(answer-17, scientific-16)
dobj(have-14, answer-17)
advmod(Spock-26, then-19)
poss(designer-21, my-20)
nsubj(Spock-26, designer-21)
aux(Spock-26, can-22)
neg(Spock-26, not-23)
cop(Spock-26, be-24)
nn(Spock-26, Mr.-25)
root(ROOT-0, Spock-26)
poss(designer-30, my-29)
nsubj(entity-36, designer-30)
aux(entity-36, must-31)
cop(entity-36, be-32)
det(entity-36, a-33)
amod(entity-36, super-34)
amod(entity-36, natural-35)
conj_and(Spock-26, entity-36)

