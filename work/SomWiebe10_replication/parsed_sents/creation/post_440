(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ does)
      (NP (DT the) (NNP anti) (NNP ID) (NN position))
      (VP (VB explain)
        (NP (DT the) (JJ bacterial) (NN flagellum))))
    (. ?)))

advmod(explain-7, How-1)
aux(explain-7, does-2)
det(position-6, the-3)
nn(position-6, anti-4)
nn(position-6, ID-5)
nsubj(explain-7, position-6)
root(ROOT-0, explain-7)
det(flagellum-10, the-8)
amod(flagellum-10, bacterial-9)
dobj(explain-7, flagellum-10)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (ADVP (RB just))
    (VP (VBD evolved))
    ('' '') (. .)))

nsubj(evolved-4, It-2)
advmod(evolved-4, just-3)
root(ROOT-0, evolved-4)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP say)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP do) (RB n't)
              (VP (VB know)))))))
    (CC but)
    (S
      (NP (DT a) (NN designer))
      (VP (VBD was) (RB n't)
        (VP (VBN required))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
nsubj(know-6, we-3)
aux(know-6, do-4)
neg(know-6, n't-5)
ccomp(say-2, know-6)
det(designer-9, a-8)
nsubjpass(required-12, designer-9)
auxpass(required-12, was-10)
neg(required-12, n't-11)
conj_but(say-2, required-12)

(ROOT
  (S (CC And)
    (ADVP (RB again))
    (NP (DT the) (NN design) (NN inference))
    (VP (VBZ relies)
      (PP (IN on)
        (NP (NNS observations) (, ,) (NNS data) (, ,)
          (CC and)
          (NN experience))))
    (. .)))

cc(relies-6, And-1)
advmod(relies-6, again-2)
det(inference-5, the-3)
nn(inference-5, design-4)
nsubj(relies-6, inference-5)
root(ROOT-0, relies-6)
prep_on(relies-6, observations-8)
prep_on(relies-6, data-10)
conj_and(observations-8, data-10)
prep_on(relies-6, experience-13)
conj_and(observations-8, experience-13)

(ROOT
  (S (CC And)
    (ADVP (RB as)
      (PP (IN with)
        (NP (DT all) (JJ scientific) (NNS inferences))))
    (NP (JJ future) (NN research))
    (VP (MD can) (RB either)
      (VP (VB confirm)
        (CC or)
        (VB refute)
        (NP (DT that) (NN inference))))
    (. .)))

advmod(confirm-11, as-2)
det(inferences-6, all-4)
amod(inferences-6, scientific-5)
prep_with(as-2, inferences-6)
amod(research-8, future-7)
nsubj(confirm-11, research-8)
nsubj(refute-13, research-8)
aux(confirm-11, can-9)
advmod(confirm-11, either-10)
root(ROOT-0, confirm-11)
conj_or(confirm-11, refute-13)
det(inference-15, that-14)
dobj(confirm-11, inference-15)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (NN science))
          (VP (VBZ operates)))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
advmod(operates-5, how-3)
nsubj(operates-5, science-4)
ccomp(is-2, operates-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP think)
          (SBAR
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT a) (JJ different) (NN explanation))
                (ADVP (RB then))))))))
    (VP (VBP please)
      (VP (VB post)
        (NP (PRP it))))
    (. .)))

mark(think-3, If-1)
nsubj(think-3, you-2)
csubj(please-10, think-3)
expl(is-5, there-4)
ccomp(think-3, is-5)
det(explanation-8, a-6)
amod(explanation-8, different-7)
nsubj(is-5, explanation-8)
advmod(is-5, then-9)
root(ROOT-0, please-10)
xcomp(please-10, post-11)
dobj(post-11, it-12)

(ROOT
  (S
    (NP (NNP BTW) (NNP ID))
    (VP (VBZ explains)
      (NP (DT the) (NNP BF))
      (NP
        (NP (DT the) (JJ same) (NN way))
        (SBAR
          (S
            (NP (DT an) (NN archaeologist))
            (VP (MD would)
              (VP (VB set)
                (PRT (RP out))
                (S
                  (VP (TO to)
                    (VP (VB explain)
                      (NP (DT any) (NN artifact)))))))))))
    (. .)))

nn(ID-2, BTW-1)
nsubj(explains-3, ID-2)
root(ROOT-0, explains-3)
det(BF-5, the-4)
iobj(explains-3, BF-5)
det(way-8, the-6)
amod(way-8, same-7)
dobj(explains-3, way-8)
dobj(set-12, way-8)
det(archaeologist-10, an-9)
nsubj(set-12, archaeologist-10)
xsubj(explain-15, archaeologist-10)
aux(set-12, would-11)
rcmod(way-8, set-12)
prt(set-12, out-13)
aux(explain-15, to-14)
xcomp(set-12, explain-15)
det(artifact-17, any-16)
dobj(explain-15, artifact-17)

(ROOT
  (S
    (ADVP (RB However))
    (PP (IN by)
      (NP (PRP$ your) (`` ``) (NN logic) ('' '')))
    (ADVP (RB archaeology))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ useless) (NN endeavor))
        (ADJP (JJ akin)
          (PP (TO to)
            (S
              (VP (VBG giving)
                (PRT (RP up))))))))
    (. .)))

advmod(endeavor-11, However-1)
poss(logic-5, your-3)
prep_by(endeavor-11, logic-5)
advmod(endeavor-11, archaeology-7)
cop(endeavor-11, is-8)
det(endeavor-11, a-9)
amod(endeavor-11, useless-10)
root(ROOT-0, endeavor-11)
amod(endeavor-11, akin-12)
prepc_to(akin-12, giving-14)
prt(giving-14, up-15)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD could) (RB n't)
      (NP
        (NP
          (NP (NN nature))
          (, ,)
          (NP (NN operating)))
        (VP (VBN freely)))
      (VP (VB build)
        (NP (NNP Stonehenge))))
    (. ?)))

advmod(build-8, Why-1)
aux(build-8, could-2)
neg(build-8, n't-3)
nsubj(build-8, nature-4)
appos(nature-4, operating-6)
partmod(nature-4, freely-7)
root(ROOT-0, build-8)
dobj(build-8, Stonehenge-9)

(ROOT
  (S
    (S
      (NP (NNP PvM))
      (: :)
      (ADVP (RB So))
      (NP (NNP ID))
      (VP (VBZ is)
        (PP (IN about)
          (NP (NN complexity)
            (CC and)
            (NN function)))))
    (CC but)
    (S
      (NP (DT that))
      (ADVP (RB merely))
      (VP (VBZ describes)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBD outlined)
              (ADVP (RB already)))))))
    (. .)))

nsubj(is-5, PvM-1)
advmod(is-5, So-3)
nsubj(is-5, ID-4)
root(ROOT-0, is-5)
prep_about(is-5, complexity-7)
prep_about(is-5, function-9)
conj_and(complexity-7, function-9)
nsubj(describes-13, that-11)
advmod(describes-13, merely-12)
conj_but(is-5, describes-13)
dobj(outlined-16, what-14)
nsubj(outlined-16, I-15)
ccomp(describes-13, outlined-16)
advmod(outlined-16, already-17)

(ROOT
  (S
    (NP (NN Something))
    (VP (VBZ has)
      (NP
        (NP (NN function)
          (CC and)
          (NN science))
        (SBAR
          (S
            (VP (VBZ does) (RB not)
              (VP (VB understand)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (VP (VBD said)
                      (SBAR
                        (S
                          (NP (NN function))
                          (VP (VBD arose)
                            (SBAR (IN so)
                              (S
                                (NP (PRP we))
                                (VP (VBP call)
                                  (S
                                    (NP (PRP it))
                                    (`` ``)
                                    (NP (NN design))
                                    ('' '')))))))))))))))))
    (. .)))

nsubj(has-2, Something-1)
root(ROOT-0, has-2)
dobj(has-2, function-3)
dobj(has-2, science-5)
conj_and(function-3, science-5)
aux(understand-8, does-6)
neg(understand-8, not-7)
rcmod(function-3, understand-8)
advmod(said-10, how-9)
ccomp(understand-8, said-10)
nsubj(arose-12, function-11)
ccomp(said-10, arose-12)
mark(call-15, so-13)
nsubj(call-15, we-14)
advcl(arose-12, call-15)
dep(design-18, it-16)
dep(call-15, design-18)

(ROOT
  (NP (RB Still) (DT an) (NN argument)
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBZ adds)
          (NP (NN nothing))
          (PP (TO to)
            (SBAR
              (SBAR (`` ``)
                (S
                  (NP (PRP we))
                  (VP (VBP do) (RB n't)
                    (VP (VB know)))))
              ('' '')
              (CC and)
              (SBAR
                (PP (IN in)
                  (NP (NN fact)))
                (, ,) (IN as)
                (S
                  (NP (NNP formulated))
                  (VP (VBZ is)
                    (ADJP (RB inherently) (JJ unreliable))))))))))
    (. .)))

advmod(argument-3, Still-1)
det(argument-3, an-2)
root(ROOT-0, argument-3)
nsubj(adds-5, that-4)
ccomp(argument-3, adds-5)
dobj(adds-5, nothing-6)
nsubj(know-12, we-9)
aux(know-12, do-10)
neg(know-12, n't-11)
prepc_to(adds-5, know-12)
dep(unreliable-22, in-15)
pobj(in-15, fact-16)
dep(unreliable-22, as-18)
nsubj(unreliable-22, formulated-19)
cop(unreliable-22, is-20)
advmod(unreliable-22, inherently-21)
prepc_to(adds-5, unreliable-22)
conj_and(know-12, unreliable-22)

(ROOT
  (S
    (ADVP (RB However))
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP do) (RB n't)
              (VP (VB know)))))))
    (. .)))

advmod(say-5, However-1)
nsubj(say-5, you-2)
aux(say-5, do-3)
neg(say-5, n't-4)
root(ROOT-0, say-5)
nsubj(know-9, we-6)
aux(know-9, do-7)
neg(know-9, n't-8)
ccomp(say-5, know-9)

