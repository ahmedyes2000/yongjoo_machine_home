(ROOT
  (S (: --)
    (NP (NNP JoeWe))
    (VP (VBP look)
      (PP (IN at)
        (NP (DT the) (NNS options))))
    (. .)))

nsubj(look-3, JoeWe-2)
root(ROOT-0, look-3)
det(options-6, the-5)
prep_at(look-3, options-6)

(ROOT
  (S (CC And)
    (NP (DT the) (JJ anti) (NNP ID) (NN option))
    (VP (VBZ is)
      (S (`` ``)
        (NP (PRP it))
        (VP
          (ADVP (RB just))
          (VBD happened))
        ('' '')))
    (. .)))

cc(is-6, And-1)
det(option-5, the-2)
amod(option-5, anti-3)
nn(option-5, ID-4)
nsubj(is-6, option-5)
root(ROOT-0, is-6)
nsubj(happened-10, it-8)
advmod(happened-10, just-9)
ccomp(is-6, happened-10)

(ROOT
  (SQ (VBD Are)
    (NP (PRP you))
    (NP (NN saying))
    (SBAR (IN that)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP (DT no) (NN explanation)))))
    (. ?)))

root(ROOT-0, Are-1)
nsubj(Are-1, you-2)
attr(Are-1, saying-3)
complm(is-6, that-4)
expl(is-6, there-5)
dep(Are-1, is-6)
det(explanation-8, no-7)
nsubj(is-6, explanation-8)

(ROOT
  (VP (VB Weird) (, ,)
    (SBARQ
      (WHADVP (WRB why))
      (SQ (MD would)
        (NP (PRP they))
        (ADVP (RB then))
        (VP (VB call)
          (NP (PRP it))
          (NP
            (NP (DT an) (NN inference))
            (PP (TO to)
              (NP (JJS best) (NN explanation))))))
      (. ?))))

root(ROOT-0, Weird-1)
advmod(call-7, why-3)
aux(call-7, would-4)
nsubj(call-7, they-5)
advmod(call-7, then-6)
dep(Weird-1, call-7)
iobj(call-7, it-8)
det(inference-10, an-9)
dobj(call-7, inference-10)
amod(explanation-13, best-12)
prep_to(inference-10, explanation-13)

(ROOT
  (INTJ (UH ...)))


(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)))
    (. ?)))

dobj(think-4, What-1)
aux(think-4, do-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)

(ROOT
  (S (CC So)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP it))
        (VP (VBZ comes)
          (PP (TO to)
            (S
              (VP (VBG teaching)
                (NP
                  (NP (DT the) (NN theory))
                  (PP (IN of)
                    (NP (NN evolution))))))))))
    (NP (DT the) (JJ only) (JJ real) (NN answer))
    (VP (VBZ is)
      (SBAR (`` ``)
        (S
          (NP (PRP we))
          (VP (VBP do) (RB n't)
            (VP (VB know) ('' '')
              (SBAR (RB as) (IN in)
                (S
                  (NP (PRP we))
                  (VP (VBP do) (RB n't)
                    (VP (VB know)
                      (SBAR (IN whether)
                        (CC or)
                        (RB not)
                        (S
                          (NP
                            (NP (DT the) (NNS transformations))
                            (VP (VBN required)
                              (PP (IN by)
                                (NP (JJ universal) (JJ common) (NN descent)))))
                          (VP (VBP are)
                            (ADJP (RB even) (JJ possible)
                              (PP (IN via)
                                (NP
                                  (NP (DT any) (NN amount))
                                  (PP (IN of)
                                    (NP (VBN accumulated) (NNS mutations))))))))))))))))))
    (. .)))

cc(is-15, So-1)
advmod(comes-4, when-2)
nsubj(comes-4, it-3)
advcl(is-15, comes-4)
prepc_to(comes-4, teaching-6)
det(theory-8, the-7)
dobj(teaching-6, theory-8)
prep_of(theory-8, evolution-10)
det(answer-14, the-11)
amod(answer-14, only-12)
amod(answer-14, real-13)
nsubj(is-15, answer-14)
root(ROOT-0, is-15)
nsubj(know-20, we-17)
aux(know-20, do-18)
neg(know-20, n't-19)
ccomp(is-15, know-20)
advmod(know-27, as-22)
dep(know-27, in-23)
nsubj(know-27, we-24)
aux(know-27, do-25)
neg(know-27, n't-26)
ccomp(know-20, know-27)
complm(possible-40, whether-28)
ccomp(know-27, not-30)
conj_or(possible-40, not-30)
det(transformations-32, the-31)
nsubj(possible-40, transformations-32)
partmod(transformations-32, required-33)
amod(descent-37, universal-35)
amod(descent-37, common-36)
agent(required-33, descent-37)
cop(possible-40, are-38)
advmod(possible-40, even-39)
ccomp(know-27, possible-40)
det(amount-43, any-42)
prep_via(possible-40, amount-43)
amod(mutations-46, accumulated-45)
prep_of(amount-43, mutations-46)

(ROOT
  (S
    (S
      (ADVP (RB Again))
      (S
        (VP (VBG missing)
          (NP
            (NP (DT the) (NN point))
            (, ,)
            (NP (DT the) (`` ``)
              (S
                (NP (PRP we))
                (VP (VBP do) (RB n't)
                  (VP (VB know))))
              ('' '') (NN explanation)))))
      (VP (VBZ is)
        (VP (VBN countered)
          (PP (IN by)
            (NP (JJ real) (JJ positive) (JJ scientific) (NNS hypotheses))))))
    (CC and)
    (S
      (NP (DT these) (NNS hypotheses))
      (VP (VBP have)
        (VP (VBN rendered)
          (SBAR
            (S
              (NP (DT the)
                (S (`` ``)
                  (NP (PRP we))
                  (VP (VBP do) (RB n't)
                    (VP (VB know)))
                  ('' '')))
              (VP (VBZ hypothesis)
                (ADJP (RB much) (RBR less) (JJ relevant))))))))
    (. .)))

advmod(countered-15, Again-1)
csubjpass(countered-15, missing-2)
det(point-4, the-3)
dobj(missing-2, point-4)
det(explanation-13, the-6)
nsubj(know-11, we-8)
aux(know-11, do-9)
neg(know-11, n't-10)
dep(explanation-13, know-11)
appos(point-4, explanation-13)
auxpass(countered-15, is-14)
root(ROOT-0, countered-15)
amod(hypotheses-20, real-17)
amod(hypotheses-20, positive-18)
amod(hypotheses-20, scientific-19)
agent(countered-15, hypotheses-20)
det(hypotheses-23, these-22)
nsubj(rendered-25, hypotheses-23)
aux(rendered-25, have-24)
conj_and(countered-15, rendered-25)
nsubj(hypothesis-33, the-26)
nsubj(know-31, we-28)
aux(know-31, do-29)
neg(know-31, n't-30)
dep(the-26, know-31)
ccomp(rendered-25, hypothesis-33)
advmod(relevant-36, much-34)
advmod(relevant-36, less-35)
acomp(hypothesis-33, relevant-36)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (JJ minor) (NNS questions))
    (ADVP (RB still))
    (VP (VBP remain)
      (SBAR (CC but)
        (S
          (NP
            (NP (DT the) (NN idea))
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (MD must)
                  (VP (VB be)
                    (NP
                      (NP (NNS limits))
                      (PP (TO to)
                        (NP (NN evolution)))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD would)
                            (VP (VB make)
                              (S
                                (NP (JJ common) (NN descent))
                                (ADJP (JJ impossible)))))))))))))
          (VP (VBP are)
            (ADVP (IN at) (JJS best))
            (NP (JJ wishful) (NN thinking))))))
    (. .)))

prep_of(remain-6, course-2)
amod(questions-4, minor-3)
nsubj(remain-6, questions-4)
advmod(remain-6, still-5)
root(ROOT-0, remain-6)
cc(are-23, but-7)
det(idea-9, the-8)
nsubj(are-23, idea-9)
complm(limits-14, that-10)
expl(limits-14, there-11)
aux(limits-14, must-12)
cop(limits-14, be-13)
dep(idea-9, limits-14)
nsubj(make-19, limits-14)
prep_to(limits-14, evolution-16)
aux(make-19, would-18)
rcmod(limits-14, make-19)
amod(descent-21, common-20)
nsubj(impossible-22, descent-21)
xcomp(make-19, impossible-22)
ccomp(remain-6, are-23)
advmod(are-23, at-24)
pobj(at-24, best-25)
amod(thinking-27, wishful-26)
attr(are-23, thinking-27)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ sad))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP you))
          (VP (VBP continue)
            (S
              (VP (TO to)
                (VP (VB misunderstand)
                  (NP (NN science)))))))))
    (. .)))

nsubj(sad-3, It-1)
cop(sad-3, 's-2)
root(ROOT-0, sad-3)
advmod(continue-6, how-4)
nsubj(continue-6, you-5)
xsubj(misunderstand-8, you-5)
ccomp(sad-3, continue-6)
aux(misunderstand-8, to-7)
xcomp(continue-6, misunderstand-8)
dobj(misunderstand-8, science-9)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do)
      (VP (VB have)
        (NP
          (NP (JJ direct) (NNS observatiuons))
          (PP (IN of)
            (NP
              (NP (NNS agencies))
              (VP (VBG designing)
                (NP (JJ rotary) (NNS motors))))))))
    (. .)))

nsubj(have-3, We-1)
aux(have-3, do-2)
root(ROOT-0, have-3)
amod(observatiuons-5, direct-4)
dobj(have-3, observatiuons-5)
prep_of(observatiuons-5, agencies-7)
partmod(agencies-7, designing-8)
amod(motors-10, rotary-9)
dobj(designing-8, motors-10)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (NP
        (NP (NNP NEVER))
        (SBAR
          (S
            (VP (VBD observed)
              (SBAR
                (S
                  (NP
                    (NP (NN nature))
                    (, ,)
                    (VP (VBG operating)
                      (ADVP (RB freely)))
                    (, ,))
                  (ADVP (RB even))
                  (VP (VBP come)
                    (ADJP (JJ close))))))))))
    (. .)))

nsubj(have-2, We-1)
root(ROOT-0, have-2)
dobj(have-2, NEVER-3)
rcmod(NEVER-3, observed-4)
nsubj(come-11, nature-5)
partmod(nature-5, operating-7)
advmod(operating-7, freely-8)
advmod(come-11, even-10)
ccomp(observed-4, come-11)
acomp(come-11, close-12)

(ROOT
  (S
    (NP (RB No) (DT the) (JJ scientific) (NN position))
    (VP (VBZ is)
      (S (`` ``)
        (NP (PRP we))
        (VP (VBP do) (RB n't)
          (VP (VB know)))
        ('' '')))
    (. .)))

advmod(position-4, No-1)
det(position-4, the-2)
amod(position-4, scientific-3)
nsubj(is-5, position-4)
root(ROOT-0, is-5)
nsubj(know-10, we-7)
aux(know-10, do-8)
neg(know-10, n't-9)
ccomp(is-5, know-10)

(ROOT
  (S
    (ADVP (RB Surely))
    (NP (PRP you))
    (VP (MD should)
      (VP (VB realize)
        (SBAR (IN that)
          (S
            (S
              (VP (VBG misrepresenting)
                (NP (DT the) (JJ scientific) (NN position))))
            (VP (VBZ does)
              (NP
                (NP (RB little))
                (PP (IN for)
                  (NP (PRP$ your) (NN argument)))))))))
    (. .)))

advmod(realize-4, Surely-1)
nsubj(realize-4, you-2)
aux(realize-4, should-3)
root(ROOT-0, realize-4)
complm(does-10, that-5)
csubj(does-10, misrepresenting-6)
det(position-9, the-7)
amod(position-9, scientific-8)
dobj(misrepresenting-6, position-9)
ccomp(realize-4, does-10)
dobj(does-10, little-11)
poss(argument-14, your-13)
prep_for(little-11, argument-14)

(ROOT
  (S (CC And)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (QP (JJR more) (IN than)
          (NP (RB just) (CD two) (NNS options)))))
    (. .)))

cc(are-3, And-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
quantmod(than-5, more-4)
nsubj(are-3, than-5)
advmod(options-8, just-6)
num(options-8, two-7)
dep(than-5, options-8)

(ROOT
  (S
    (VP
      (NP
        (NP
          (NP (NN Chance))
          (, ,)
          (NP (NN regularity)))
        (PRN (, ,)
          (S
            (ADVP (RB already))
            (VP (VB provide)
              (NP (CD two) (NNS possibilities))))
          (, ,))
        (CONJP (RB not) (TO to) (VB mention))
        (NP
          (NP (DT the) (JJ countless) (NNS variations))
          (PP (IN on)
            (NP (DT this) (NN theme))))))
    (. .)))

root(ROOT-0, Chance-1)
appos(Chance-1, regularity-3)
advmod(provide-6, already-5)
dep(Chance-1, provide-6)
num(possibilities-8, two-7)
dobj(provide-6, possibilities-8)
det(variations-15, the-13)
amod(variations-15, countless-14)
conj_and(Chance-1, variations-15)
det(theme-18, this-17)
prep_on(variations-15, theme-18)

(ROOT
  (SQ
    (VP
      (VP (VB Remind)
        (NP (PRP me))
        (ADVP (RB again))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NNP ID))
            (VP (`` ``) (VBZ explains) ('' '')))))
      (NP (DT the) (JJ bacterial) (NN flagellum)))
    (. ?)))

root(ROOT-0, Remind-1)
dobj(Remind-1, me-2)
advmod(Remind-1, again-3)
advmod(explains-7, how-4)
nsubj(explains-7, ID-5)
dep(Remind-1, explains-7)
det(flagellum-11, the-9)
amod(flagellum-11, bacterial-10)
dobj(Remind-1, flagellum-11)

(ROOT
  (S
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (VP (VBD was)
      (NP (PRP it)))
    (SBAR (RB not)
      (S
        (VP (VBD claimed)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT an) (NN inference))
                  (PP (TO to)
                    (NP (DT the) (JJS best) (NN explanation))))))))))
    (. .)))

prep_after(it-5, all-2)
cop(it-5, was-4)
root(ROOT-0, it-5)
dep(claimed-7, not-6)
dep(it-5, claimed-7)
aux(inference-11, to-8)
cop(inference-11, be-9)
det(inference-11, an-10)
xcomp(claimed-7, inference-11)
det(explanation-15, the-13)
amod(explanation-15, best-14)
prep_to(inference-11, explanation-15)

