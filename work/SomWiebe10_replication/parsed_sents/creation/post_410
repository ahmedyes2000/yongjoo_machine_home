(ROOT
  (S
    (ADVP (RB First) (RB off))
    (PRN (, ,)
      (S
        (NP (DT the) (JJ human) (NNP Eye))
        (VP (VBD did) (RB not)
          (VP (VB pop)
            (PP (IN into)
              (NP (NN existence)))
            (PP (IN by)
              (NP (NN chance))))))
      (, ,))
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN result))
          (PP (IN of)
            (NP
              (NP (NNS billions))
              (PP (IN of)
                (NP
                  (NP (NNS years))
                  (PP (JJ worth) (IN of)
                    (NP (NN evolution))))))))
        (: ...)
        (NP
          (NP (DT a) (NN process))
          (SBAR
            (WHPP (IN by)
              (WHNP (WDT which)))
            (S
              (NP
                (NP (JJ slight) (NNS mutations))
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP (NNS changes))
                    (PP (IN in)
                      (NP (DT the) (NN structure))))
                  (-RRB- -RRB-)))
              (VP
                (VP (VBD proved)
                  (S
                    (ADJP (JJ advantageous))))
                (CC and)
                (VP (VBD were)
                  (VP (VBN passed)
                    (PRT (RP down))
                    (, ,)
                    (S
                      (VP (VBG leading)
                        (PP (TO to)
                          (NP
                            (ADJP (RBR more) (JJ complex))
                            (NNS structures)))))))))))))
    (. .)))

advmod(off-2, First-1)
advmod(result-18, off-2)
det(Eye-6, the-4)
amod(Eye-6, human-5)
nsubj(pop-9, Eye-6)
aux(pop-9, did-7)
neg(pop-9, not-8)
parataxis(result-18, pop-9)
prep_into(pop-9, existence-11)
prep_by(pop-9, chance-13)
nsubj(result-18, it-15)
cop(result-18, is-16)
det(result-18, the-17)
root(ROOT-0, result-18)
prep_of(result-18, billions-20)
prep_of(billions-20, years-22)
dep(years-22, worth-23)
prep_of(years-22, evolution-25)
det(process-28, a-27)
dep(result-18, process-28)
rel(proved-39, which-30)
amod(mutations-32, slight-31)
nsubj(proved-39, mutations-32)
nsubjpass(passed-43, mutations-32)
dep(mutations-32, changes-34)
det(structure-37, the-36)
prep_in(changes-34, structure-37)
rcmod(process-28, proved-39)
acomp(proved-39, advantageous-40)
auxpass(passed-43, were-42)
rcmod(process-28, passed-43)
conj_and(proved-39, passed-43)
prt(passed-43, down-44)
xcomp(passed-43, leading-46)
advmod(complex-49, more-48)
amod(structures-50, complex-49)
prep_to(leading-46, structures-50)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADJP (JJ sure))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NNP ID))
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBN demonstrated)
                  (PP (IN by)
                    (NP (NNS genetics)
                      (CC and)
                      (NNS statistics))))))))))
    (: ...)
    (S
      (ADVP (RB however))
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG avoiding)
          (NP (DT the) (JJ big) (NN question))
          (SBAR (IN that)
            (S
              (NP (NNP ID))
              (VP (VBZ raises)))))))
    (. .)))

nsubj(sure-4, I-1)
cop(sure-4, 'm-2)
neg(sure-4, not-3)
root(ROOT-0, sure-4)
advmod(demonstrated-9, how-5)
nsubjpass(demonstrated-9, ID-6)
aux(demonstrated-9, has-7)
auxpass(demonstrated-9, been-8)
ccomp(sure-4, demonstrated-9)
agent(demonstrated-9, genetics-11)
agent(demonstrated-9, statistics-13)
conj_and(genetics-11, statistics-13)
advmod(avoiding-18, however-15)
nsubj(avoiding-18, you-16)
aux(avoiding-18, are-17)
parataxis(sure-4, avoiding-18)
det(question-21, the-19)
amod(question-21, big-20)
dobj(avoiding-18, question-21)
complm(raises-24, that-22)
nsubj(raises-24, ID-23)
ccomp(avoiding-18, raises-24)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN life))
        (VP (VBZ is)
          (PP (TO to)
            (NP (NN complex)))
          (S
            (VP (TO to)
              (VP (VB exist)
                (PP (IN without)
                  (NP (DT a) (NN designer)))))))))
    (, ,)
    (ADVP (RB then))
    (NP (DT that) (NN designer))
    (VP (MD can) (RB not)
      (VP (VB be)
        (NP (DT a) (VBG living) (NN thing))))
    (. .)))

mark(is-3, If-1)
nsubj(is-3, life-2)
xsubj(exist-7, life-2)
advcl(thing-20, is-3)
prep_to(is-3, complex-5)
aux(exist-7, to-6)
xcomp(is-3, exist-7)
det(designer-10, a-9)
prep_without(exist-7, designer-10)
advmod(thing-20, then-12)
det(designer-14, that-13)
nsubj(thing-20, designer-14)
aux(thing-20, can-15)
neg(thing-20, not-16)
cop(thing-20, be-17)
det(thing-20, a-18)
amod(thing-20, living-19)
root(ROOT-0, thing-20)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (DT the) (NN designer))
        (VP (VBZ is) (RB not)
          (NP
            (NP (DT a) (VBG living) (NN thing))
            (ADVP (RB then))))))
    (WHNP (WP what))
    (SQ
      (VP (VBZ is)
        (NP (PRP it))))
    (. ?)))

mark(thing-8, If-1)
det(designer-3, the-2)
nsubj(thing-8, designer-3)
cop(thing-8, is-4)
neg(thing-8, not-5)
det(thing-8, a-6)
amod(thing-8, living-7)
dep(it-12, thing-8)
advmod(thing-8, then-9)
nsubj(it-12, what-10)
cop(it-12, is-11)
root(ROOT-0, it-12)

(ROOT
  (SBARQ
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBD was)
          (NP (DT the) (NNS designers) (NNS intentions)))))
    (, ,)
    (WHADVP (WRB where))
    (SQ (VBZ is)
      (NP (DT the) (NN designer))
      (ADVP (RB now)))
    (. ?)))

nsubj(intentions-5, What-1)
cop(intentions-5, was-2)
det(intentions-5, the-3)
nn(intentions-5, designers-4)
dep(is-8, intentions-5)
advmod(is-8, where-7)
root(ROOT-0, is-8)
det(designer-10, the-9)
nsubj(is-8, designer-10)
advmod(is-8, now-11)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN predictions))
    (SQ (VBZ does)
      (NP (NNP ID))
      (VP (VB make)
        (S
          (VP (VBG regarding)
            (NP (DT the) (NN future))))))
    (. ?)))

det(predictions-2, What-1)
dobj(make-5, predictions-2)
aux(make-5, does-3)
nsubj(make-5, ID-4)
root(ROOT-0, make-5)
xcomp(make-5, regarding-6)
det(future-8, the-7)
dobj(regarding-6, future-8)

