(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (NN evolution))
            (VP (VBZ is)
              (NP
                (NP (DT a)
                  (ADJP (RB far) (JJR better))
                  (NN explanation))
                (PP (IN than)
                  (NP (DT the) (NN idea))))
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN world))
                  (VP (VBZ is)
                    (ADJP
                      (NP (CD 5000) (NNS years))
                      (JJ old))))))))))
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP (DT a) (NN guy-in-the-sky))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(explanation-8, evolution-3)
cop(explanation-8, is-4)
det(explanation-8, a-5)
advmod(better-7, far-6)
amod(explanation-8, better-7)
ccomp(think-2, explanation-8)
det(idea-11, the-10)
prep_than(explanation-8, idea-11)
complm(old-18, that-12)
det(world-14, the-13)
nsubj(old-18, world-14)
cop(old-18, is-15)
num(years-17, 5000-16)
npadvmod(old-18, years-17)
ccomp(explanation-8, old-18)
expl('s-21, there-20)
conj_and(think-2, 's-21)
det(guy-in-the-sky-23, a-22)
nsubj('s-21, guy-in-the-sky-23)

(ROOT
  (S
    (S
      (PP (IN Like)
        (ADJP (JJS most)))
      (NP (JJ scientific) (NNS theories))
      (VP (VBZ is) (RB not)
        (NP
          (ADJP (CD 100) (NN %))
          (JJ defensible))))
    (, ,)
    (CC but)
    (S
      (PP (IN on)
        (NP
          (NP (DT a) (NN balance))
          (PP (IN of)
            (NP (NNS probabilities)))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT the)
          (ADJP (RBS most) (JJ likely))
          (NN scenario))))
    (. .)))

prep_like(%-8, most-2)
amod(theories-4, scientific-3)
nsubj(%-8, theories-4)
cop(%-8, is-5)
neg(%-8, not-6)
number(%-8, 100-7)
root(ROOT-0, %-8)
amod(%-8, defensible-9)
det(balance-14, a-13)
prep_on(scenario-23, balance-14)
prep_of(balance-14, probabilities-16)
nsubj(scenario-23, it-18)
cop(scenario-23, is-19)
det(scenario-23, the-20)
advmod(likely-22, most-21)
amod(scenario-23, likely-22)
conj_but(%-8, scenario-23)

(ROOT
  (SINV
    (VP (VB \/) (-RRB- -RRB-)
      (NP (NNS \/))
      (-RRB- -RRB-))
    (NP
      (NP (DT The) (NN problem))
      (SBAR (IN with)
        (S
          (NP (DT this) (NN debate))
          (VP (VBZ is)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBZ falls)
                  (ADVP (RB easily))
                  (PP (IN into)
                    (NP
                      (NP (DT a) (NN debate))
                      (PP (IN on)
                        (NP
                          (NP (DT the) (NN existence))
                          (PP (IN of)
                            (NP (NNP God)))))))))
              (. .))))))))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
det(problem-6, The-5)
nsubj(\/-1, problem-6)
mark(is-10, with-7)
det(debate-9, this-8)
nsubj(is-10, debate-9)
dep(problem-6, is-10)
complm(falls-13, that-11)
nsubj(falls-13, it-12)
ccomp(is-10, falls-13)
advmod(falls-13, easily-14)
det(debate-17, a-16)
prep_into(falls-13, debate-17)
det(existence-20, the-19)
prep_on(debate-17, existence-20)
prep_of(existence-20, God-22)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (JJ important)
          (S
            (VP (TO to)
              (VP (VB note)
                (SBAR (IN that)
                  (S
                    (NP (NNP Evolution))
                    (VP (MD could)
                      (VP (VB be)
                        (ADJP (JJ wrong)
                          (CC or)
                          (JJ right))
                        (SBAR (IN whether)
                          (S
                            (NP (NNP God))
                            (VP (VBZ exists)))
                          (CC or)
                          (RB not))))))))))
        (PP (IN in)
          (NP (JJ other) (NNS words)))))
    (, ,)
    (NP (DT the) (CD two) (NNS arguments))
    (, ,)
    (SBAR (IN while)
      (FRAG
        (ADJP (JJ related))))
    (, ,)
    (VP (VBP are) (RB not)
      (ADJP (JJ identical)))
    (. .)))

nsubj(important-3, It-1)
cop(important-3, is-2)
ccomp(identical-31, important-3)
aux(note-5, to-4)
xcomp(important-3, note-5)
complm(wrong-10, that-6)
nsubj(wrong-10, Evolution-7)
nsubj(right-12, Evolution-7)
aux(wrong-10, could-8)
cop(wrong-10, be-9)
ccomp(note-5, wrong-10)
ccomp(note-5, right-12)
conj_or(wrong-10, right-12)
complm(exists-15, whether-13)
nsubj(exists-15, God-14)
ccomp(wrong-10, exists-15)
ccomp(wrong-10, not-17)
conj_or(exists-15, not-17)
amod(words-20, other-19)
prep_in(important-3, words-20)
det(arguments-24, the-22)
num(arguments-24, two-23)
nsubj(identical-31, arguments-24)
mark(related-27, while-26)
dep(identical-31, related-27)
cop(identical-31, are-29)
neg(identical-31, not-30)
root(ROOT-0, identical-31)

(ROOT
  (S
    (ADVP (RB Furthermore))
    (, ,)
    (NP
      (NP (DT an) (NN argument))
      (PP (IN on)
        (NP
          (NP (NNP God) (POS 's))
          (NN existence))))
    (VP (VBZ fails)
      (ADVP (RB often))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP
              (NP (DT an) (NN argument))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (CD one) (NN side))
                  (VP (VBZ brings)
                    (NP (NNS arguments))
                    (PP (VBN based)
                      (PP (IN on)
                        (NP (NN logic))))
                    (, ,)
                    (SBAR (IN whereas)
                      (S
                        (NP (DT the) (JJ other))
                        (VP (VBZ relies)
                          (PP (IN on)
                            (NP
                              (NP (NNS feelings))
                              (CC and)
                              (NP
                                (ADVP (RBR more))
                                (JJ esoteric) (`` ``) (NN reasoning) ('' '')))))))))))))))
    (. .)))

advmod(fails-9, Furthermore-1)
det(argument-4, an-3)
nsubj(fails-9, argument-4)
poss(existence-8, God-6)
prep_on(argument-4, existence-8)
root(ROOT-0, fails-9)
advmod(fails-9, often-10)
mark(argument-15, because-11)
nsubj(argument-15, it-12)
cop(argument-15, is-13)
det(argument-15, an-14)
advcl(fails-9, argument-15)
advmod(brings-19, where-16)
num(side-18, one-17)
nsubj(brings-19, side-18)
rcmod(argument-15, brings-19)
dobj(brings-19, arguments-20)
prepc_based_on(brings-19, on-22)
pobj(brings-19, logic-23)
mark(relies-28, whereas-25)
det(other-27, the-26)
nsubj(relies-28, other-27)
advcl(brings-19, relies-28)
prep_on(relies-28, feelings-30)
advmod(reasoning-35, more-32)
amod(reasoning-35, esoteric-33)
prep_on(relies-28, reasoning-35)
conj_and(feelings-30, reasoning-35)

(ROOT
  (S
    (S
      (NP (NNP Evolution))
      (VP (VBZ is)
        (ADVP (RB simply))
        (NP (DT a) (JJ scientific) (NN theory))))
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN reason))
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP
                (NP (DT the) (NNS counterarguments))
                (PP (TO to)
                  (NP (NNP Evolution))))
              (VP (MD should) (RB n't)
                (VP (VB be)
                  (ADJP (JJ scientific)))))))))
    (. .)))

nsubj(theory-6, Evolution-1)
cop(theory-6, is-2)
advmod(theory-6, simply-3)
det(theory-6, a-4)
amod(theory-6, scientific-5)
root(ROOT-0, theory-6)
expl(is-9, there-8)
conj_and(theory-6, is-9)
det(reason-11, no-10)
nsubj(is-9, reason-11)
advmod(scientific-20, why-12)
det(counterarguments-14, the-13)
nsubj(scientific-20, counterarguments-14)
prep_to(counterarguments-14, Evolution-16)
aux(scientific-20, should-17)
neg(scientific-20, n't-18)
cop(scientific-20, be-19)
rcmod(reason-11, scientific-20)

(ROOT
  (S
    (VP
      (VP
        (VP (VB \/) (-RRB- -RRB-)
          (NP (NNS \/))
          (-RRB- -RRB-))
        (SBAR
          (SBAR (IN While)
            (S
              (NP (PRP I))
              (VP (VBP concede)
                (SBAR (IN that)
                  (S
                    (NP (NNP Evolution) (NN theory))
                    (VP (MD may)
                      (VP (VB be)
                        (ADJP (JJ false)))))))))
          (, ,)
          (ADVP (IN at) (JJS least))
          (SBAR (IN in)
            (S
              (NP (DT some) (NN minute) (NNS details))
              (, ,)
              (ADVP (RB overall))
              (VP (VBZ is))))))
      (, ,)
      (PP (IN in)
        (NP
          (NP (PRP$ my) (NN view))
          (, ,)
          (NP
            (NP (DT the)
              (ADJP (JJS best)
                (CC and)
                (ADJP (RBS most) (JJ convincing)))
              (NN theory))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP have)
                  (S
                    (VP (TO to)
                      (VP (VB explain)
                        (NP (PRP$ our) (NN world))))))))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
mark(concede-7, While-5)
nsubj(concede-7, I-6)
dep(\/-1, concede-7)
complm(false-13, that-8)
nn(theory-10, Evolution-9)
nsubj(false-13, theory-10)
aux(false-13, may-11)
cop(false-13, be-12)
ccomp(concede-7, false-13)
advmod(concede-7, at-15)
pobj(at-15, least-16)
mark(is-23, in-17)
det(details-20, some-18)
nn(details-20, minute-19)
nsubj(is-23, details-20)
advmod(is-23, overall-22)
dep(concede-7, is-23)
poss(view-27, my-26)
prep_in(\/-1, view-27)
det(theory-34, the-29)
amod(theory-34, best-30)
advmod(convincing-33, most-32)
conj_and(best-30, convincing-33)
amod(theory-34, convincing-33)
appos(view-27, theory-34)
dobj(have-36, theory-34)
nsubj(have-36, we-35)
xsubj(explain-38, we-35)
rcmod(theory-34, have-36)
aux(explain-38, to-37)
xcomp(have-36, explain-38)
poss(world-40, our-39)
dobj(explain-38, world-40)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP I))
          (VP (VBP accept)
            (NP (PRP it))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
advmod(accept-5, why-3)
nsubj(accept-5, I-4)
advcl(is-2, accept-5)
dobj(accept-5, it-6)

