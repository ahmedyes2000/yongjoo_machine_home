(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP
        (NP (NNP ID) (POS 's))
        (NN argument))
      (VP (VB become)
        (S
          (NP (DT any))
          (ADJP (JJR weaker))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP it))
              (VP (MD can) (RB not)
                (ADVP (RB even))
                (VP (VB compete)
                  (SBAR (IN with) (`` ``)
                    (S
                      (NP (PRP we))
                      (VP (VBP do) (RB n't)
                        (VP (VB know) ('' '')
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBZ is)
                                (NP
                                  (NP (DT a)
                                    (ADJP (RB far) (JJR more))
                                    (JJ scientific) (NN default) (NN position))
                                  (SBAR
                                    (WHADVP (WRB when))
                                    (S
                                      (NP (PRP$ our) (NN ignorance))
                                      (VP (VBZ does) (RB not)
                                        (VP (VB allow)
                                          (S
                                            (NP (PRP us))
                                            (VP (TO to)
                                              (VP (VB propose)
                                                (NP (NN anything) (JJ relevant))
                                                (ADVP (RB yet))))))))))))))))))))))))
    (. .)))

advmod(become-6, How-1)
aux(become-6, can-2)
poss(argument-5, ID-3)
nsubj(become-6, argument-5)
root(ROOT-0, become-6)
nsubj(compete-14, any-7)
dep(compete-14, weaker-8)
advmod(compete-14, when-9)
nsubj(compete-14, it-10)
aux(compete-14, can-11)
neg(compete-14, not-12)
advmod(compete-14, even-13)
xcomp(become-6, compete-14)
mark(know-20, with-15)
nsubj(know-20, we-17)
aux(know-20, do-18)
neg(know-20, n't-19)
advcl(compete-14, know-20)
nsubj(position-29, which-22)
cop(position-29, is-23)
det(position-29, a-24)
advmod(more-26, far-25)
amod(position-29, more-26)
amod(position-29, scientific-27)
nn(position-29, default-28)
ccomp(know-20, position-29)
tmod(allow-35, position-29)
advmod(allow-35, when-30)
poss(ignorance-32, our-31)
nsubj(allow-35, ignorance-32)
aux(allow-35, does-33)
neg(allow-35, not-34)
dep(position-29, allow-35)
nsubj(propose-38, us-36)
aux(propose-38, to-37)
xcomp(allow-35, propose-38)
dobj(propose-38, anything-39)
amod(anything-39, relevant-40)
advmod(propose-38, yet-41)

