(ROOT
  (S
    (S
      (NP (DT The) (NN design) (NN infernence))
      (VP (VBZ is)
        (ADVP (RB alo))
        (RB not)
        (ADJP (JJ disallowed))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (SBAR (RB just) (IN that)
        (S
          (NP (PRP it))
          (VP (MD can) (RB not)
            (VP (VB compete)
              (PP (IN with)
                (NP (DT the) (`` ``)
                  (S
                    (NP (PRP we))
                    (VP (VBP do) (RB n't)
                      (VP (VB know))))
                  ('' '') (NN explanation)))
              (SBAR (IN as)
                (S
                  (NP (PRP it))
                  (VP (VBZ fails)
                    (S
                      (VP (TO to)
                        (VP (VB add)
                          (NP (NN anything)))))))))))))
    (. .)))

det(infernence-3, The-1)
nn(infernence-3, design-2)
nsubj(disallowed-7, infernence-3)
cop(disallowed-7, is-4)
advmod(disallowed-7, alo-5)
neg(disallowed-7, not-6)
ccomp('s-10, disallowed-7)
nsubj('s-10, it-9)
root(ROOT-0, 's-10)
advmod(compete-16, just-11)
dep(compete-16, that-12)
nsubj(compete-16, it-13)
aux(compete-16, can-14)
neg(compete-16, not-15)
ccomp('s-10, compete-16)
det(explanation-25, the-18)
nsubj(know-23, we-20)
aux(know-23, do-21)
neg(know-23, n't-22)
dep(explanation-25, know-23)
prep_with(compete-16, explanation-25)
mark(fails-28, as-26)
nsubj(fails-28, it-27)
xsubj(add-30, it-27)
advcl(compete-16, fails-28)
aux(add-30, to-29)
xcomp(fails-28, add-30)
dobj(add-30, anything-31)

