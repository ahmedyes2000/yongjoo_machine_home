(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))

root(ROOT-0, 1-1)

(ROOT
  (S
    (VP (VBG lacking)
      (NP
        (NP (JJ ordinary) (NNS quickness)
          (CC and)
          (NNS keenness))
        (PP (IN of)
          (NP
            (NP (NN mind))
            (: ;)
            (ADJP (JJ dull)
              (NP (CD .2)))))))
    (. .)))

root(ROOT-0, lacking-1)
amod(quickness-3, ordinary-2)
dobj(lacking-1, quickness-3)
dobj(lacking-1, keenness-5)
conj_and(quickness-3, keenness-5)
prep_of(quickness-3, mind-7)
amod(mind-7, dull-9)
dep(dull-9, .2-10)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB deny)
          (NP
            (NP (NN evolution))
            (PP (RB because) (IN of)
              (NP (JJ ancient) (NNS scripts)))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBP are)
                  (ADJP (RB almost) (RB entirely) (JJ untrue)))))))))
    (VP (VBZ is)
      (ADJP
        (NP (DT a) (RB bit))
        (JJ stupid)))
    (. .)))

aux(deny-2, To-1)
csubj(stupid-16, deny-2)
dobj(deny-2, evolution-3)
nsubj(untrue-12, evolution-3)
amod(scripts-7, ancient-6)
prep_because_of(evolution-3, scripts-7)
cop(untrue-12, are-9)
advmod(untrue-12, almost-10)
advmod(untrue-12, entirely-11)
rcmod(evolution-3, untrue-12)
cop(stupid-16, is-13)
det(bit-15, a-14)
npadvmod(stupid-16, bit-15)
root(ROOT-0, stupid-16)

(ROOT
  (S
    (VP (VBN characterized)
      (PP (IN by)
        (NP (CC or)
          (NP
            (NP (NN proceeding))
            (PP (IN from)
              (NP (JJ mental) (NN dullness))))
          (: ;)
          (ADJP (JJ foolish))
          (: ;)
          (NP (NNS senseless))
          (: :)
          (NP (DT a) (JJ stupid) (NN question) (CD .3)))))
    (. .)))

root(ROOT-0, characterized-1)
cc(proceeding-4, or-3)
prep_by(characterized-1, proceeding-4)
amod(dullness-7, mental-6)
prep_from(proceeding-4, dullness-7)
amod(proceeding-4, foolish-9)
dep(proceeding-4, senseless-11)
det(question-15, a-13)
amod(question-15, stupid-14)
dep(proceeding-4, question-15)
num(question-15, .3-16)

(ROOT
  (FRAG
    (ADJP (RB tediously) (JJ dull))
    (, ,)
    (NP (NN esp))
    (. .)))

advmod(dull-2, tediously-1)
dep(esp-4, dull-2)
root(ROOT-0, esp-4)

(ROOT
  (NP
    (NP
      (NP
        (ADJP (JJ due)
          (PP (TO to)))
        (NN lack))
      (PP (IN of)
        (NP (NN meaning)
          (CC or)
          (NN sense))))
    (: ;)
    (NP
      (NP (NN inane))
      (: ;)
      (NP (NNP pointless)))
    (: :)
    (NP
      (NP (DT a) (JJ stupid) (NN party))
      (NP (CD .4)))
    (. .)))

amod(lack-3, due-1)
prep(due-1, to-2)
root(ROOT-0, lack-3)
prep_of(lack-3, meaning-5)
prep_of(lack-3, sense-7)
conj_or(meaning-5, sense-7)
dep(lack-3, inane-9)
dep(inane-9, pointless-11)
det(party-15, a-13)
amod(party-15, stupid-14)
dep(lack-3, party-15)
dep(party-15, .4-16)

(ROOT
  (S
    (NP
      (NP (NN annoying)
        (CC or)
        (NN irritating))
      (: ;)
      (ADJP (JJ troublesome))
      (: :))
    (VP (VB Turn)
      (PRT (RP off))
      (NP (DT that) (JJ stupid) (NN radio) (CD .5)))
    (. .)))

nsubj(Turn-7, annoying-1)
conj_or(annoying-1, irritating-3)
nsubj(Turn-7, irritating-3)
amod(annoying-1, troublesome-5)
root(ROOT-0, Turn-7)
prt(Turn-7, off-8)
det(radio-11, that-9)
amod(radio-11, stupid-10)
dobj(Turn-7, radio-11)
num(radio-11, .5-12)

(ROOT
  (S
    (PP (IN in)
      (NP
        (NP (DT a) (NN state))
        (PP (IN of)
          (NP (NN stupor)))))
    (: ;)
    (VP
      (VP (VB stupefied))
      (: :)
      (VP
        (ADJP (JJ stupid))
        (PP (IN from)
          (NP (JJ fatigue) (CD .6)))))
    (. .)))

det(state-3, a-2)
prep_in(stupefied-7, state-3)
prep_of(state-3, stupor-5)
root(ROOT-0, stupefied-7)
dep(stupefied-7, stupid-9)
amod(.6-12, fatigue-11)
prep_from(stupid-9, .6-12)

(ROOT
  (S
    (VP (VBG Slang))
    (. .)))

root(ROOT-0, Slang-1)

(ROOT
  (NP
    (NP (JJ excellent))
    (: ;)
    (NP (JJ terrific))
    (. .)))

root(ROOT-0, excellent-1)
dep(excellent-1, terrific-3)

(ROOT
  (S
    (NP
      (NP (RB yes))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD must)
            (VP (VB say) (, ,)
              (S
                (VP (TO to)
                  (VP (VB deny)
                    (NP
                      (NP (JJ scientific) (NN fact))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is)
                            (VP (VBN backed)
                              (PP (IN by)
                                (NP
                                  (NP (JJ huge) (NNS amounts))
                                  (PP (IN of)
                                    (NP (NN evidence))))))))))))))))))
    (VP (VBZ is)
      (ADVP (RB indeed))
      (ADJP (RB quite) (JJ STUPID)))
    (. .)))

dobj(say-4, yes-1)
nsubj(STUPID-21, yes-1)
nsubj(say-4, I-2)
xsubj(deny-7, I-2)
aux(say-4, must-3)
rcmod(yes-1, say-4)
aux(deny-7, to-6)
xcomp(say-4, deny-7)
amod(fact-9, scientific-8)
dobj(deny-7, fact-9)
nsubjpass(backed-12, fact-9)
auxpass(backed-12, is-11)
rcmod(fact-9, backed-12)
amod(amounts-15, huge-14)
agent(backed-12, amounts-15)
prep_of(amounts-15, evidence-17)
cop(STUPID-21, is-18)
advmod(STUPID-21, indeed-19)
advmod(STUPID-21, quite-20)
root(ROOT-0, STUPID-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP (JJ religious) (NNS people)))
          (SBAR
            (WHNP (WP who))
            (S
              (ADVP (RB completely))
              (VP (VBP believe)
                (PP (IN in)
                  (NP (NN evolution)))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (ADJP (JJ possible))
        (SBAR (IN because)
          (S
            (NP (NN religion)
              (CC and)
              (NN evolution))
            (VP (VBP are)
              (ADJP (JJ compatible)))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
dobj(know-2, plenty-3)
nsubj(believe-9, plenty-3)
amod(people-6, religious-5)
prep_of(plenty-3, people-6)
advmod(believe-9, completely-8)
rcmod(plenty-3, believe-9)
prep_in(believe-9, evolution-11)
nsubj(possible-16, this-14)
cop(possible-16, is-15)
conj_and(know-2, possible-16)
mark(compatible-22, because-17)
nsubj(compatible-22, religion-18)
conj_and(religion-18, evolution-20)
nsubj(compatible-22, evolution-20)
cop(compatible-22, are-21)
advcl(possible-16, compatible-22)

(ROOT
  (S
    (NP
      (NP (NNP Science))
      (CC and)
      (NP (NN religion)))
    (VP (MD will)
      (ADVP (RB ultimately))
      (VP (RB not)
        (VP (VB be)
          (ADJP (JJ compatible)))
        (, ,)
        (CC but)
        (VP (VB like)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD said)
                (SBAR
                  (S
                    (NP (NN religion)
                      (CC and)
                      (NN evolution))
                    (VP (VBP are)
                      (ADJP (RB completely) (JJ compatible)))))))))))
    (. .)))

nsubj(compatible-8, Science-1)
nsubj(like-11, Science-1)
conj_and(Science-1, religion-3)
nsubj(compatible-8, religion-3)
aux(compatible-8, will-4)
advmod(compatible-8, ultimately-5)
neg(compatible-8, not-6)
cop(compatible-8, be-7)
root(ROOT-0, compatible-8)
conj_but(compatible-8, like-11)
nsubj(said-13, I-12)
ccomp(like-11, said-13)
nsubj(compatible-19, religion-14)
conj_and(religion-14, evolution-16)
nsubj(compatible-19, evolution-16)
cop(compatible-19, are-17)
advmod(compatible-19, completely-18)
ccomp(said-13, compatible-19)

