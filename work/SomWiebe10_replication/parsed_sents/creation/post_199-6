(ROOT
  (S
    (NP
      (NP (NNP ID) (POS 's))
      (JJ entire) (NN argument))
    (VP (VBZ is)
      (S (: :)
        (S
          (PP (IN As)
            (NP (DT a) (JJ biased) (NN observer)))
          (, ,)
          (NP (PRP I))
          (VP (VBP think)
            (SBAR
              (S
                (NP (NN life))
                (VP (VBZ is)
                  (VP (VBN designed)))))))
        (, ,)
        (ADVP (RB therefore))
        (S
          (NP (PRP it))
          (VP (VBZ is)))))
    (. .)))

poss(argument-4, ID-1)
amod(argument-4, entire-3)
nsubj(is-5, argument-4)
root(ROOT-0, is-5)
det(observer-10, a-8)
amod(observer-10, biased-9)
prep_as(think-13, observer-10)
nsubj(think-13, I-12)
dep(is-5, think-13)
nsubjpass(designed-16, life-14)
auxpass(designed-16, is-15)
ccomp(think-13, designed-16)
advmod(think-13, therefore-18)
nsubj(is-20, it-19)
dep(think-13, is-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP
                (VP (VB explain)
                  (NP (PRP it)))
                (, ,)
                (CC or)
                (VP (VB attempt)
                  (S
                    (VP (TO to)
                      (VP (VB prove)
                        (NP (PRP it))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ obvious)))
    (. .)))

nsubj(going-4, I-1)
xsubj(explain-6, I-1)
aux(going-4, 'm-2)
neg(going-4, not-3)
ccomp(obvious-17, going-4)
aux(explain-6, to-5)
xcomp(going-4, explain-6)
dobj(explain-6, it-7)
xcomp(going-4, attempt-10)
conj_or(explain-6, attempt-10)
aux(prove-12, to-11)
xcomp(attempt-10, prove-12)
dobj(prove-12, it-13)
nsubj(obvious-17, it-15)
cop(obvious-17, 's-16)
root(ROOT-0, obvious-17)

