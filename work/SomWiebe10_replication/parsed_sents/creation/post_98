(ROOT
  (S
    (LST (: --))
    (VP
      (VP (VB Ask)
        (S
          (NP (PRP yourself))
          (NP (DT this)))
        (: :) (`` ``)
        (SBAR (IN if)
          (S
            (NP (DT the) (NN universe))
            (VP (VBZ is)
              (VP (VBG expanding))))))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ happens)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (DT that) (NN expansion))
                (VP (VBZ ceases))))))))
    (. ?)))

root(ROOT-0, Ask-2)
nsubj(this-4, yourself-3)
xcomp(Ask-2, this-4)
mark(expanding-11, if-7)
det(universe-9, the-8)
nsubj(expanding-11, universe-9)
aux(expanding-11, is-10)
advcl(Ask-2, expanding-11)
nsubj(happens-14, what-13)
ccomp(Ask-2, happens-14)
advmod(ceases-18, when-15)
det(expansion-17, that-16)
nsubj(ceases-18, expansion-17)
advcl(happens-14, ceases-18)

(ROOT
  (S ('' '')
    (NP (PRP$ My) (NN answer))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (MD ca) (RB n't)
            (VP (VB be)
              (ADJP (JJ random)))))))
    (. .)))

poss(answer-3, My-2)
nsubj(is-4, answer-3)
root(ROOT-0, is-4)
complm(random-10, that-5)
nsubj(random-10, it-6)
aux(random-10, ca-7)
neg(random-10, n't-8)
cop(random-10, be-9)
ccomp(is-4, random-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ collapses))
    (. .)))

nsubj(collapses-2, It-1)
root(ROOT-0, collapses-2)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD can)
      (NP (DT this))
      (ADVP (RB not))
      (VP (VB be)
        (ADJP (JJ random))))
    (. ?)))

advmod(random-6, Why-1)
aux(random-6, can-2)
nsubj(random-6, this-3)
advmod(random-6, not-4)
cop(random-6, be-5)
root(ROOT-0, random-6)

(ROOT
  (FRAG
    (NP (NN Simple))
    (, ,)
    (SBAR (IN because)
      (S
        (NP (PRP it))
        (VP (VBZ depends)
          (PP (IN on)
            (NP
              (NP (DT the) (NN amount))
              (PP (IN of)
                (NP
                  (NP (NN mass))
                  (PP (IN in)
                    (NP (DT the) (NN universe)))))))
          (, ,)
          (SBAR
            (SBAR (IN whether)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (ADJP (JJ open)
                    (CC or)
                    (JJ closed)))))
            (, ,)
            (CC and)
            (SBAR (IN whether)
              (S
                (NP (DT the) (NN expansion))
                (VP (VBZ is)
                  (VP
                    (VP (VBG slowing)
                      (PRT (RP down)))
                    (, ,)
                    (CC or)
                    (VP (VBG increasing))))))))))
    (. .)))

root(ROOT-0, Simple-1)
mark(depends-5, because-3)
nsubj(depends-5, it-4)
dep(Simple-1, depends-5)
det(amount-8, the-7)
prep_on(depends-5, amount-8)
prep_of(amount-8, mass-10)
det(universe-13, the-12)
prep_in(mass-10, universe-13)
complm(open-18, whether-15)
nsubj(open-18, it-16)
nsubj(closed-20, it-16)
cop(open-18, is-17)
ccomp(depends-5, open-18)
ccomp(depends-5, closed-20)
conj_or(open-18, closed-20)
complm(slowing-27, whether-23)
det(expansion-25, the-24)
nsubj(slowing-27, expansion-25)
nsubj(increasing-31, expansion-25)
aux(slowing-27, is-26)
ccomp(depends-5, slowing-27)
conj_and(open-18, slowing-27)
prt(slowing-27, down-28)
conj_and(open-18, increasing-31)
conj_or(slowing-27, increasing-31)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (NP (PRP$ your))
      (`` ``)
      (S
        (NP (PRP it))
        (VP (MD ca) (RB n't)
          (VP (VB be)
            (ADJP (JJ random)))))
      ('' ''))
    (VP (VBZ does) (RB not)
      (VP (VB require)
        (NP (DT a) (NN designer))
        (ADVP (RB necessarily))
        (SBAR (IN since)
          (S
            (NP
              (NP (NNS regularities))
              (PP (JJ such) (IN as)
                (NP
                  (NP (NNS laws))
                  (PP (IN of)
                    (NP (NN nature))))))
            (VP (MD can)
              (VP (VB explain)
                (NP (DT these) (NNS behaviors))
                (ADVP (RB as) (RB well))))))))
    (. .)))

advmod(require-13, However-1)
nsubj(require-13, your-3)
nsubj(random-9, it-5)
aux(random-9, ca-6)
neg(random-9, n't-7)
cop(random-9, be-8)
dep(your-3, random-9)
aux(require-13, does-11)
neg(require-13, not-12)
root(ROOT-0, require-13)
det(designer-15, a-14)
dobj(require-13, designer-15)
advmod(require-13, necessarily-16)
mark(explain-25, since-17)
nsubj(explain-25, regularities-18)
prep_such_as(regularities-18, laws-21)
prep_of(laws-21, nature-23)
aux(explain-25, can-24)
advcl(require-13, explain-25)
det(behaviors-27, these-26)
dobj(explain-25, behaviors-27)
advmod(well-29, as-28)
mwe(well-29, as-28)
advmod(explain-25, well-29)

(ROOT
  (S
    (S
      (NP (PRP We) (NNS humans))
      (VP (VBP love)
        (S
          (VP (TO to)
            (VP (VB believe)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBP are)
                    (ADVP (RB here))
                    (PP (IN for)
                      (NP (DT a) (NN reason)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD can)
        (VP (VB understand) (, ,)
          (PP (IN as)
            (NP (DT a) (JJ Christian) (NN myself)))
          (, ,)
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (PRP we))
              (VP (MD may)
                (VP (VB hold)
                  (NP
                    (NP (NNS positions))
                    (PP (IN of)
                      (NP (NN faith)))))))))))
    (. .)))

dep(humans-2, We-1)
nsubj(love-3, humans-2)
xsubj(believe-5, humans-2)
root(ROOT-0, love-3)
aux(believe-5, to-4)
xcomp(love-3, believe-5)
nsubj(are-7, we-6)
ccomp(believe-5, are-7)
advmod(are-7, here-8)
det(reason-11, a-10)
prep_for(are-7, reason-11)
nsubj(understand-16, I-14)
aux(understand-16, can-15)
conj_and(love-3, understand-16)
det(myself-21, a-19)
amod(myself-21, Christian-20)
prep_as(understand-16, myself-21)
advmod(hold-26, why-23)
nsubj(hold-26, we-24)
aux(hold-26, may-25)
advcl(understand-16, hold-26)
dobj(hold-26, positions-27)
prep_of(positions-27, faith-29)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP I))
        (VP (VBP see)
          (NP (NNS claims))
          (SBAR (IN that)
            (S
              (NP (PRP one))
              (VP (MD can)
                (VP
                  (VP (VB prove)
                    (NP
                      (NP (DT the) (NN existence))
                      (PP (IN of)
                        (NP
                          (NP (DT this) (JJ supernatural) (NN entity))
                          (CC or)
                          (NP (NNS entities)))))
                    (S
                      (VP (VBG using)
                        (NP (NN science)))))
                  (, ,)
                  (CC and)
                  (ADVP (RB then))
                  (VP (VB come)
                    (S
                      (VP (TO to)
                        (VP (VB realize)
                          (SBAR (IN that)
                            (S
                              (NP (DT the) (`` ``) (NN science) ('' ''))
                              (VP (VBZ is)
                                (ADJP
                                  (ADJP (NN nothing) (JJR more))
                                  (SBAR (IN than) (`` ``)
                                    (S
                                      (NP (JJ real) (NN science))
                                      (VP (MD can) (RB not)
                                        (VP (VB explain)
                                          (NP (NNP X) ('' ''))
                                          (ADVP (RB thus)))))))))))))))))))))
    (`` ``)
    (NP (SYM x))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN called)
          (VP (VBN designed) ('' '')))))
    (. .)))

advmod(called-49, However-1)
advmod(see-5, when-3)
nsubj(see-5, I-4)
advcl(called-49, see-5)
dobj(see-5, claims-6)
complm(prove-10, that-7)
nsubj(prove-10, one-8)
nsubj(come-24, one-8)
xsubj(realize-26, one-8)
aux(prove-10, can-9)
ccomp(see-5, prove-10)
det(existence-12, the-11)
dobj(prove-10, existence-12)
det(entity-16, this-14)
amod(entity-16, supernatural-15)
prep_of(existence-12, entity-16)
prep_of(existence-12, entities-18)
conj_or(entity-16, entities-18)
xcomp(prove-10, using-19)
dobj(using-19, science-20)
ccomp(see-5, then-23)
advmod(prove-10, then-23)
conj_and(prove-10, then-23)
ccomp(see-5, come-24)
conj_and(prove-10, come-24)
aux(realize-26, to-25)
xcomp(come-24, realize-26)
complm(nothing-33, that-27)
det(science-30, the-28)
nsubj(nothing-33, science-30)
cop(nothing-33, is-32)
ccomp(realize-26, nothing-33)
dep(nothing-33, more-34)
mark(explain-41, than-35)
amod(science-38, real-37)
nsubj(explain-41, science-38)
aux(explain-41, can-39)
neg(explain-41, not-40)
dep(nothing-33, explain-41)
dobj(explain-41, X-42)
advmod(explain-41, thus-44)
nsubjpass(called-49, x-46)
aux(called-49, should-47)
auxpass(called-49, be-48)
root(ROOT-0, called-49)
dep(called-49, designed-50)

(ROOT
  (FRAG (CC And)
    (SBAR (IN that)
      (S
        (NP (PRP$ my) (NNS friends))
        (VP (VBZ is)
          (ADVP (RB exactly))
          (NP
            (NP (DT the) (NN foundation))
            (PP (IN of)
              (NP (NNP ID)))))))
    (. .)))

dep(foundation-8, And-1)
dep(foundation-8, that-2)
poss(friends-4, my-3)
nsubj(foundation-8, friends-4)
cop(foundation-8, is-5)
advmod(foundation-8, exactly-6)
det(foundation-8, the-7)
root(ROOT-0, foundation-8)
prep_of(foundation-8, ID-10)

