(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP doubt)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (JJ many) (NN ID) (NN proponent))
              (VP (MD would)
                (VP (VB argue)
                  (UCP
                    (PP (IN for)
                      (NP (DT the) (JJ empty) (NN set)))
                    (CC and)
                    (ADVP (RB thus))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (ADVP (RB logically))
                        (VP (VBZ remains)))))))))
          (, ,)
          (CC and)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (VP (VBN supported)
                  (PP (IN by)
                    (NP (DT the) (NN evidence))))))))))
    (, ,)
    (NP
      (NP (NNP ID) (POS 's))
      (`` ``) (NN designer))
    (PRN (-LRB- -LRB-)
      (NP
        (NP (NN wink))
        (, ,)
        (NP (NN wink)))
      (-RRB- -RRB-))
    ('' '')
    (VP (VBZ is)
      (ADVP (RB just))
      (NP (DT an) (JJ evolved) (NN concept))
      (, ,)
      (SBAR (RB just) (IN like)
        (S (`` ``)
          (NP (NNP creationist))
          ('' '')
          (VP (VBD became)
            (NP (`` ``) (JJ cdesign) (NN proponentist) ('' ''))
            (PP (TO to)
              (NP (`` ``) (NN design) (NN proponent) ('' '')))))))
    (. .)))

nsubj(doubt-2, I-1)
ccomp(concept-41, doubt-2)
complm(argue-8, that-3)
amod(proponent-6, many-4)
nn(proponent-6, ID-5)
nsubj(argue-8, proponent-6)
aux(argue-8, would-7)
ccomp(doubt-2, argue-8)
dep(argue-8, for-9)
det(set-12, the-10)
amod(set-12, empty-11)
pobj(for-9, set-12)
dep(argue-8, thus-14)
conj_and(for-9, thus-14)
nsubj(remains-17, what-15)
advmod(remains-17, logically-16)
dep(argue-8, remains-17)
conj_and(for-9, remains-17)
nsubjpass(supported-22, what-20)
auxpass(supported-22, is-21)
ccomp(doubt-2, supported-22)
conj_and(argue-8, supported-22)
det(evidence-25, the-24)
agent(supported-22, evidence-25)
poss(designer-30, ID-27)
nsubj(concept-41, designer-30)
dep(concept-41, wink-32)
appos(wink-32, wink-34)
cop(concept-41, is-37)
advmod(concept-41, just-38)
det(concept-41, an-39)
amod(concept-41, evolved-40)
root(ROOT-0, concept-41)
advmod(proponentist-51, just-43)
dep(proponentist-51, like-44)
nsubj(proponentist-51, creationist-46)
cop(proponentist-51, became-48)
amod(proponentist-51, cdesign-50)
dep(concept-41, proponentist-51)
nn(proponent-56, design-55)
prep_to(proponentist-51, proponent-56)

