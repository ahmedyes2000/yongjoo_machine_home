(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NNP Supreme) (NNP Court))
        (VP (VBP formulated) (`` ``)
          (NP
            (NP (JJ valid) (NN secular) (NN purpose))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is) (RB not)
                  (NP (DT a) (NN sham))))))
          ('' ''))))
    (, ,)
    (NP
      (NP (DT the) (NN court))
      (ADJP (JJ unlikely)))
    (VP (VBD believed)
      (SBAR (IN that)
        (S
          (NP (DT any) (JJ future) (, ,) (JJ unstated) (NN secular) (NN purpose))
          (VP (MD would)
            (VP (VB be)
              (ADJP (JJ sufficient)
                (PP (IN for)
                  (NP (NN something))))
              (S
                (VP (TO to)
                  (VP (VB pass)
                    (NP (DT this) (NN requirement))))))))))
    (. .)))

advmod(formulated-5, When-1)
det(Court-4, the-2)
nn(Court-4, Supreme-3)
nsubj(formulated-5, Court-4)
advcl(believed-20, formulated-5)
amod(purpose-9, valid-7)
nn(purpose-9, secular-8)
dobj(formulated-5, purpose-9)
nsubj(sham-14, purpose-9)
cop(sham-14, is-11)
neg(sham-14, not-12)
det(sham-14, a-13)
rcmod(purpose-9, sham-14)
det(court-18, the-17)
nsubj(believed-20, court-18)
amod(court-18, unlikely-19)
root(ROOT-0, believed-20)
complm(sufficient-30, that-21)
det(purpose-27, any-22)
amod(purpose-27, future-23)
amod(purpose-27, unstated-25)
nn(purpose-27, secular-26)
nsubj(sufficient-30, purpose-27)
aux(sufficient-30, would-28)
cop(sufficient-30, be-29)
ccomp(believed-20, sufficient-30)
prep_for(sufficient-30, something-32)
aux(pass-34, to-33)
xcomp(sufficient-30, pass-34)
det(requirement-36, this-35)
dobj(pass-34, requirement-36)

(ROOT
  (S
    (NP (DT That))
    (VP (MD would)
      (VP (VB make)
        (NP (DT the) (NN rule) (NN unenforceable))))
    (. .)))

nsubj(make-3, That-1)
aux(make-3, would-2)
root(ROOT-0, make-3)
det(unenforceable-6, the-4)
nn(unenforceable-6, rule-5)
dobj(make-3, unenforceable-6)

(ROOT
  (S
    (ADVP (RB Instead))
    (, ,)
    (NP (PRP one))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB go)
            (PP (IN from)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT the) (NNS arguments))
                  (VP (VBD presented)
                    (SBAR
                      (S
                        (VP (VBP are))))))))))))
    (. .)))

advmod(has-4, Instead-1)
nsubj(has-4, one-3)
xsubj(go-6, one-3)
root(ROOT-0, has-4)
aux(go-6, to-5)
xcomp(has-4, go-6)
dep(presented-11, what-8)
nsubj(are-12, what-8)
det(arguments-10, the-9)
nsubj(presented-11, arguments-10)
prepc_from(go-6, presented-11)
ccomp(presented-11, are-12)

(ROOT
  (SINV
    (S
      (ADVP (RB Now))
      (SBAR (IN if)
        (S
          (NP (DT the) (NNP DI))
          (VP (VBZ believes)
            (SBAR (IN that)
              (S
                (NP (DT some) (JJ valid) (NN secular) (NN purpose))
                (VP (MD may)
                  (VP (VB exist))))))))
      (, ,) (RB then)
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB up)
          (PP (TO to)
            (NP (PRP them))))
        (S
          (VP (TO to)
            (VP (VB present))))))
    (VP (VBD said))
    (NP (NNS claims))
    (. .)))

advmod(is-16, Now-1)
mark(believes-5, if-2)
det(DI-4, the-3)
nsubj(believes-5, DI-4)
advcl(is-16, believes-5)
complm(exist-12, that-6)
det(purpose-10, some-7)
amod(purpose-10, valid-8)
nn(purpose-10, secular-9)
nsubj(exist-12, purpose-10)
aux(exist-12, may-11)
ccomp(believes-5, exist-12)
advmod(is-16, then-14)
nsubj(is-16, it-15)
xsubj(present-21, it-15)
dep(said-22, is-16)
advmod(is-16, up-17)
prep_to(up-17, them-19)
aux(present-21, to-20)
xcomp(is-16, present-21)
root(ROOT-0, said-22)
nsubj(said-22, claims-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP understand)
      (SBAR (IN that)
        (S
          (NP (`` ``) (JJ academic) (NN freedom) ('' ''))
          (VP (VBZ is)
            (NP
              (NP (PRP$ their) (JJS latest) (NN variant))
              (SBAR
                (S
                  (VP (TO to)
                    (VP (VB avoid)
                      (S
                        (VP (VBG dealing)
                          (PP (IN with)
                            (NP (DT the) (NN fact)))))
                      (SBAR (IN that)
                        (S
                          (NP (NNP ID))
                          (VP (VBZ is)
                            (PP (IN without)
                              (NP (JJ scientific) (NN content)))))))))))))))
    (. .)))

nsubj(understand-2, I-1)
root(ROOT-0, understand-2)
complm(variant-11, that-3)
amod(freedom-6, academic-5)
nsubj(variant-11, freedom-6)
cop(variant-11, is-8)
poss(variant-11, their-9)
amod(variant-11, latest-10)
ccomp(understand-2, variant-11)
aux(avoid-13, to-12)
infmod(variant-11, avoid-13)
xcomp(avoid-13, dealing-14)
det(fact-17, the-16)
prep_with(dealing-14, fact-17)
complm(is-20, that-18)
nsubj(is-20, ID-19)
ccomp(avoid-13, is-20)
amod(content-23, scientific-22)
prep_without(is-20, content-23)

