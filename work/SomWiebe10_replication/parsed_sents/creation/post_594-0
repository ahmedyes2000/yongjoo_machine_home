(ROOT
  (S
    (S
      (LST (: --))
      (NP (PRP It))
      (VP (VBZ seems)
        (PP (TO to)
          (NP (PRP me)))
        (SBAR (IN that)
          (S
            (NP (NNP Luskin))
            (VP (VBZ is)
              (VP (VBG being)
                (ADJP (`` ``)
                  (ADJP (RBR more) (JJ scientific))
                  ('' '')
                  (PP (IN in)
                    (NP
                      (NP (DT that) (PRP he) (NNS talks))
                      (PP (IN about)
                        (NP (DT a) (NN method))))))
                (PP (IN for)
                  (S
                    (VP (VBG testing)
                      (NP (NNP ID)))))))))))
    (: --)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (ADJP (JJ ironic))
        (SBAR (IN because)
          (S
            (NP (NNP Luskin))
            (VP (VBZ presents)
              (NP (DT no) (JJ testable) (NN ID)))))))
    (. .)))

nsubj(seems-3, It-2)
root(ROOT-0, seems-3)
prep_to(seems-3, me-5)
complm(scientific-12, that-6)
nsubj(scientific-12, Luskin-7)
aux(scientific-12, is-8)
cop(scientific-12, being-9)
advmod(scientific-12, more-11)
ccomp(seems-3, scientific-12)
det(talks-17, that-15)
dep(talks-17, he-16)
prep_in(scientific-12, talks-17)
det(method-20, a-19)
prep_about(talks-17, method-20)
prepc_for(scientific-12, testing-22)
dobj(testing-22, ID-23)
nsubj(ironic-27, That-25)
cop(ironic-27, 's-26)
parataxis(seems-3, ironic-27)
mark(presents-30, because-28)
nsubj(presents-30, Luskin-29)
advcl(ironic-27, presents-30)
det(ID-33, no-31)
amod(ID-33, testable-32)
dobj(presents-30, ID-33)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (PRP I))
        (VP (VBP understand)
          (NP (PRP$ your) (NN confusion))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (NNP ID))
              (VP (VBZ claims)
                (SBAR (IN that)
                  (S
                    (VP (VBG showing)
                      (NP (DT that))
                      (NP
                        (NP (DT a) (NN gap))
                        (PP (IN in)
                          (NP
                            (NP (PRP$ our) (NN ignorance))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBZ has)
                                  (VP (VBN been)
                                    (VP (VBN defined)
                                      (S
                                        (VP (TO to)
                                          (VP (VB be)
                                            (NP (`` ``) (NN design) ('' ''))))))))))
                            (, ,)))))))))))))
    (VP (MD should)
      (VP (VB count)
        (PP (IN as)
          (NP (DT a) (NN way)
            (S
              (VP (TO to)
                (VP (VB test)
                  (NP (`` ``) (NNP ID) ('' '')))))))))
    (. .)))

mark(understand-3, Although-1)
nsubj(understand-3, I-2)
csubj(count-29, understand-3)
poss(confusion-5, your-4)
dobj(understand-3, confusion-5)
advmod(claims-8, where-6)
nsubj(claims-8, ID-7)
advcl(understand-3, claims-8)
complm(showing-10, that-9)
ccomp(claims-8, showing-10)
iobj(showing-10, that-11)
det(gap-13, a-12)
dobj(showing-10, gap-13)
poss(ignorance-16, our-15)
prep_in(gap-13, ignorance-16)
nsubjpass(defined-21, ignorance-16)
aux(defined-21, has-19)
auxpass(defined-21, been-20)
rcmod(ignorance-16, defined-21)
aux(design-25, to-22)
cop(design-25, be-23)
xcomp(defined-21, design-25)
aux(count-29, should-28)
root(ROOT-0, count-29)
det(way-32, a-31)
prep_as(count-29, way-32)
aux(test-34, to-33)
infmod(way-32, test-34)
dobj(test-34, ID-36)

