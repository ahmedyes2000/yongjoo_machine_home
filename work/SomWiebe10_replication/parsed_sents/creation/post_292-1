(ROOT
  (S
    (VP (VB Let)
      (NP (PRP me))
      (ADVP (RB also))
      (VP (VB be)
        (ADJP (JJ clear)
          (SBAR
            (S
              (NP (PRP I))
              (ADVP (RB really))
              (VP (VBP do) (RB n't)
                (VP (VB care)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP you))
                      (VP (MD can)
                        (CC or)
                        (MD can) (RB not)
                        (VP
                          (VP (VB see))
                          (CC or)
                          (VP (VB want)
                            (S
                              (VP (TO to)
                                (VP (VB talk)
                                  (PRT (RP about)))))))))))))))))
    (. .)))

root(ROOT-0, Let-1)
dobj(Let-1, me-2)
advmod(Let-1, also-3)
cop(clear-5, be-4)
dep(Let-1, clear-5)
nsubj(care-10, I-6)
advmod(care-10, really-7)
aux(care-10, do-8)
neg(care-10, n't-9)
dep(clear-5, care-10)
dobj(see-17, what-11)
nsubj(see-17, you-12)
nsubj(want-19, you-12)
aux(see-17, can-13)
ccomp(care-10, can-15)
aux(see-17, can-15)
conj_or(see-17, can-15)
neg(see-17, not-16)
ccomp(care-10, see-17)
ccomp(care-10, want-19)
conj_or(see-17, want-19)
aux(talk-21, to-20)
xcomp(want-19, talk-21)
prt(talk-21, about-22)

