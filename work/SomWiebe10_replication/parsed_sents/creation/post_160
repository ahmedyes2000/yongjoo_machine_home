(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (NNP Mr.) (NNP Luskin) (POS 's))
        (NN argument)))
    (: :) (`` ``)
    (S
      (NP (NNP Design) (POS theorists))
      (X
        (X (SYM \*))
        (S
          (ADJP (JJ hypothesize))
          (S
            (VP (VBG \*)
              (SBAR (IN that) (IN if)
                (S
                  (NP (DT a) (JJ natural) (NN object))
                  (VP (VBD was)
                    (VP (VBN designed))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB contain)
        (NP
          (NP (JJ high) (NNS levels))
          (PP (IN of)
            (NP (NNP CSI))))))
    (. .)))

nn(Luskin-3, Mr.-2)
poss(argument-5, Luskin-3)
prep_from(contain-23, argument-5)
ccomp(contain-23, Design-8)
possessive(Design-8, theorists-9)
dep(\*-12, \*-10)
dep(\*-12, hypothesize-11)
dep(Design-8, \*-12)
complm(designed-19, that-13)
dep(designed-19, if-14)
det(object-17, a-15)
amod(object-17, natural-16)
nsubjpass(designed-19, object-17)
auxpass(designed-19, was-18)
ccomp(\*-12, designed-19)
nsubj(contain-23, it-21)
aux(contain-23, will-22)
root(ROOT-0, contain-23)
amod(levels-25, high-24)
dobj(contain-23, levels-25)
prep_of(levels-25, CSI-27)

(ROOT
  (S
    (NP (NNS Scientists))
    (ADVP (RB then))
    (VP (VBP perform)
      (NP (JJ experimental) (NNS tests))
      (PP (IN upon)
        (NP (JJ natural) (NNS objects)))
      (S
        (VP (TO to)
          (VP (VB determine)
            (SBAR (IN if)
              (S
                (NP (PRP they))
                (VP (VBP contain)
                  (NP
                    (NP (NN complex))
                    (CC and)
                    (NP (VBN specified) (NN information))))))))))
    (: ...)))

nsubj(perform-3, Scientists-1)
xsubj(determine-10, Scientists-1)
advmod(perform-3, then-2)
root(ROOT-0, perform-3)
amod(tests-5, experimental-4)
dobj(perform-3, tests-5)
amod(objects-8, natural-7)
prep_upon(perform-3, objects-8)
aux(determine-10, to-9)
xcomp(perform-3, determine-10)
mark(contain-13, if-11)
nsubj(contain-13, they-12)
advcl(determine-10, contain-13)
dobj(contain-13, complex-14)
amod(information-17, specified-16)
dobj(contain-13, information-17)
conj_and(complex-14, information-17)

(ROOT
  (S (CC But)
    (NP (DT this))
    (VP (MD would)
      (VP (VB mean)
        (SBAR
          (S
            (NP (NNP ID))
            (VP (MD ca) (RB n't)
              (VP (VB account)
                (PP (IN for)
                  (NP (DT the) (JJ \*) (NN origin)))
                (PP
                  (X (SYM \*))
                  (IN of)
                  (NP
                    (NP (JJ biological) (NN complexity))
                    (PP (IN after)
                      (NP (DT all)))))))))))
    (. .)))

cc(mean-4, But-1)
nsubj(mean-4, this-2)
aux(mean-4, would-3)
root(ROOT-0, mean-4)
nsubj(account-8, ID-5)
aux(account-8, ca-6)
neg(account-8, n't-7)
ccomp(mean-4, account-8)
det(origin-12, the-10)
amod(origin-12, \*-11)
prep_for(account-8, origin-12)
dep(account-8, \*-13)
amod(complexity-16, biological-15)
prep_of(account-8, complexity-16)
prep_after(complexity-16, all-18)

(ROOT
  (S (IN So)
    (NP (NNP ID))
    (VP (VBZ does) (RB not)
      (VP (VB use)
        (NP (DT the) (JJ scientific) (NN method))
        (S
          (VP (TO to)
            (VP (VB infer)
              (NP (NN anything))
              (ADVP (IN at) (DT all)))))))
    (. .)))

dep(use-5, So-1)
nsubj(use-5, ID-2)
aux(use-5, does-3)
neg(use-5, not-4)
root(ROOT-0, use-5)
det(method-8, the-6)
amod(method-8, scientific-7)
dobj(use-5, method-8)
aux(infer-10, to-9)
xcomp(use-5, infer-10)
dobj(infer-10, anything-11)
advmod(infer-10, at-12)
pobj(at-12, all-13)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB merely))
    (VP (VBZ assumes)
      (SBAR (IN that)
        (S
          (NP (DT all) (NNP CSI))
          (VP (MD must)
            (VP (VB come)
              (PP (IN from)
                (NP (JJ conscious) (NNS minds)))
              (SBAR (IN because)
                (S
                  (NP (PRP we) (NNS humans))
                  (VP (MD can)
                    (VP (VB create)
                      (NP (PRP it))
                      (ADVP (RB too))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is)
                            (NP (DT a)
                              (ADJP (RB perfectly) (JJ unscientific))
                              (NN argument))))))))))))))
    (. .)))

nsubj(assumes-3, It-1)
advmod(assumes-3, merely-2)
root(ROOT-0, assumes-3)
complm(come-8, that-4)
det(CSI-6, all-5)
nsubj(come-8, CSI-6)
aux(come-8, must-7)
ccomp(assumes-3, come-8)
amod(minds-11, conscious-10)
prep_from(come-8, minds-11)
mark(create-16, because-12)
dep(humans-14, we-13)
nsubj(create-16, humans-14)
aux(create-16, can-15)
advcl(come-8, create-16)
dobj(create-16, it-17)
advmod(create-16, too-18)
nsubj(argument-25, which-20)
cop(argument-25, is-21)
det(argument-25, a-22)
advmod(unscientific-24, perfectly-23)
amod(argument-25, unscientific-24)
dep(create-16, argument-25)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (JJ experimental) (NN work) (NNS uncovers))
        (VP (VBP irreducible)
          (NP
            (NP (NN complexity))
            (PP (IN in)
              (NP (NN biology)))))))
    (, ,)
    (NP (PRP they))
    (ADVP (RB \*))
    (VP (VBP conclude)
      (S
        (VP (VBG \*)
          (SBAR (IN that)
            (S
              (NP (JJ such) (NNS structures))
              (VP (VBD were)
                (VP (VBN designed))))))))
    (. .)))

advmod(irreducible-5, When-1)
amod(uncovers-4, experimental-2)
nn(uncovers-4, work-3)
nsubj(irreducible-5, uncovers-4)
advcl(conclude-12, irreducible-5)
dobj(irreducible-5, complexity-6)
prep_in(complexity-6, biology-8)
nsubj(conclude-12, they-10)
advmod(conclude-12, \*-11)
root(ROOT-0, conclude-12)
xcomp(conclude-12, \*-13)
complm(designed-18, that-14)
amod(structures-16, such-15)
nsubjpass(designed-18, structures-16)
auxpass(designed-18, were-17)
ccomp(\*-13, designed-18)

(ROOT
  (S ('' '')
    (S
      (NP
        (PRN (-LRB- -LRB-)
          (X
            (X
              (X (SYM \*))
              (NP (NN emphasis) (CD \*)))
            (NP (JJ added)))
          (-RRB- -RRB-)))
      (VP
        (ADVP (RB So))
        (VBP ID)
        (NP (JJ first) (NNS hypothesizes))
        (SBAR (IN that)
          (S
            (NP (NNP CSI))
            (VP (VBZ implies)
              (NP (NN design)))))))
    (, ,)
    (CC and)
    (S
      (NP (RB then))
      (VP (VBZ concludes)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NNP CSI))
              (PP (IN in)
                (NP (NN biology))))
            (VP (VBZ implies)
              (NP (NN design)))))))
    (. .)))

dep(emphasis-4, \*-3)
dep(added-6, emphasis-4)
num(emphasis-4, \*-5)
nsubj(ID-9, added-6)
advmod(ID-9, So-8)
root(ROOT-0, ID-9)
amod(hypothesizes-11, first-10)
dobj(ID-9, hypothesizes-11)
complm(implies-14, that-12)
nsubj(implies-14, CSI-13)
ccomp(ID-9, implies-14)
dobj(implies-14, design-15)
nsubj(concludes-19, then-18)
conj_and(ID-9, concludes-19)
complm(implies-25, that-20)
det(CSI-22, the-21)
nsubj(implies-25, CSI-22)
prep_in(CSI-22, biology-24)
ccomp(concludes-19, implies-25)
dobj(implies-25, design-26)

(ROOT
  (S (CC But)
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (NN nothing))
        (PP (CC but)
          (NP
            (NP (DT a) (NN restatement))
            (PP (IN of)
              (NP (DT the) (NNS hypothesis)))))))
    (. !)))

cc(nothing-4, But-1)
nsubj(nothing-4, this-2)
cop(nothing-4, is-3)
root(ROOT-0, nothing-4)
prep(nothing-4, but-5)
det(restatement-7, a-6)
dep(but-5, restatement-7)
det(hypothesis-10, the-9)
prep_of(restatement-7, hypothesis-10)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (NNP ID))
        (VP (VBZ forgets)
          (S
            (VP (TO to)
              (VP (VB do)))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP
            (VP (VB confirm)
              (NP (PRP$ their) (NNS hypothesis)))
            (, ,)
            (CC and)
            (ADVP (RB somehow))
            (VP
              (ADVP (RB empirically))
              (VB support)
              (NP (DT the) (NN claim))
              (SBAR (IN that)
                (S
                  (NP (NNP CSI))
                  (ADVP (RB necessarily))
                  (VP (VBZ implies)
                    (NP (JJ conscious) (NN planning))))))))))
    (. .)))

dep(forgets-3, What-1)
nsubj(forgets-3, ID-2)
xsubj(do-5, ID-2)
csubj(is-6, forgets-3)
aux(do-5, to-4)
xcomp(forgets-3, do-5)
root(ROOT-0, is-6)
aux(confirm-8, to-7)
xcomp(is-6, confirm-8)
poss(hypothesis-10, their-9)
dobj(confirm-8, hypothesis-10)
xcomp(is-6, somehow-13)
advmod(confirm-8, somehow-13)
conj_and(confirm-8, somehow-13)
advmod(support-15, empirically-14)
xcomp(is-6, support-15)
conj_and(confirm-8, support-15)
det(claim-17, the-16)
dobj(support-15, claim-17)
complm(implies-21, that-18)
nsubj(implies-21, CSI-19)
advmod(implies-21, necessarily-20)
ccomp(support-15, implies-21)
amod(planning-23, conscious-22)
dobj(implies-21, planning-23)

(ROOT
  (S
    (NP (NNP ID))
    (ADVP (RB never))
    (ADVP (RB even))
    (VP (VBZ tries)
      (S
        (VP (TO to)
          (VP (VB do)
            (NP (DT this))))))
    (. .)))

nsubj(tries-4, ID-1)
xsubj(do-6, ID-1)
neg(tries-4, never-2)
advmod(tries-4, even-3)
root(ROOT-0, tries-4)
aux(do-6, to-5)
xcomp(tries-4, do-6)
dobj(do-6, this-7)

(ROOT
  (S
    (ADVP (RB Instead))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ attempts)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (DT an) (NN induction))
            (PP (IN from)
              (NP (DT a) (JJ single) (NN data) (NN point))))))
      (, ,)
      (S
        (VP (VBG arguing)
          (SBAR (IN that)
            (S
              (S
                (SBAR (IN since)
                  (S
                    (NP (JJ human) (NNS beings))
                    (VP (MD can)
                      (VP (VB build)
                        (NP (JJ complex) (NNS machines)
                          (CC and)
                          (NNS humans))))))
                (VP (VBP are)
                  (ADJP (JJ conscious))))
              (, ,) (RB then)
              (S
                (NP
                  (NP (NN everything))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD can)
                        (VP (VB build)
                          (NP (JJ complex) (NNS machines)))))))
                (VP (MD must)
                  (VP (VB be)
                    (ADJP (JJ conscious))))))))))
    (. .)))

advmod(attempts-4, Instead-1)
nsubj(attempts-4, ID-3)
xsubj(make-6, ID-3)
root(ROOT-0, attempts-4)
aux(make-6, to-5)
xcomp(attempts-4, make-6)
det(induction-8, an-7)
dobj(make-6, induction-8)
det(point-13, a-10)
amod(point-13, single-11)
nn(point-13, data-12)
prep_from(make-6, point-13)
xcomp(attempts-4, arguing-15)
complm(conscious-27, that-16)
mark(build-21, since-17)
amod(beings-19, human-18)
nsubj(build-21, beings-19)
aux(build-21, can-20)
csubj(conscious-27, build-21)
amod(machines-23, complex-22)
dobj(build-21, machines-23)
dobj(build-21, humans-25)
conj_and(machines-23, humans-25)
cop(conscious-27, are-26)
ccomp(arguing-15, conscious-27)
advmod(conscious-27, then-29)
nsubj(build-33, everything-30)
nsubj(conscious-38, everything-30)
aux(build-33, can-32)
rcmod(everything-30, build-33)
amod(machines-35, complex-34)
dobj(build-33, machines-35)
aux(conscious-38, must-36)
cop(conscious-38, be-37)
dep(conscious-27, conscious-38)

(ROOT
  (S (CC But)
    (S
      (NP (CD one) (NN data) (NN point))
      (VP (VBZ is) (RB not)
        (ADJP (JJ sufficient)
          (S
            (VP (TO to)
              (VP (VB induce)
                (NP
                  (NP (DT the) (NNS characteristics))
                  (PP (IN of)
                    (NP (DT all) (JJ possible) (`` ``) (JJ intelligent) (NNS agents) ('' ''))))))))))
    (, ,)
    (CC and)
    (IN so)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN justification))
          (PP (IN for)
            (S
              (VP (VBG suggesting)
                (SBAR
                  (S
                    (NP
                      (NP (DT the) (NN cause))
                      (PP (IN of)
                        (NP (JJ biological) (NN complexity)
                          (PRN (-LRB- -LRB-)
                            (SBAR
                              (WHNP (WDT whatever))
                              (S
                                (NP (PRP it))
                                (VP (MD might)
                                  (VP (VB have)
                                    (VP (VBN been))))))
                            (-RRB- -RRB-)))))
                    (VP (VBD was)
                      (NP (DT a) (JJ conscious) (NN entity)))))))))))
    (. .)))

num(point-4, one-2)
nn(point-4, data-3)
nsubj(sufficient-7, point-4)
cop(sufficient-7, is-5)
neg(sufficient-7, not-6)
root(ROOT-0, sufficient-7)
aux(induce-9, to-8)
xcomp(sufficient-7, induce-9)
det(characteristics-11, the-10)
dobj(induce-9, characteristics-11)
det(agents-17, all-13)
amod(agents-17, possible-14)
amod(agents-17, intelligent-16)
prep_of(characteristics-11, agents-17)
conj_and(sufficient-7, so-21)
expl(is-23, there-22)
ccomp(sufficient-7, is-23)
det(justification-25, no-24)
nsubj(is-23, justification-25)
prepc_for(justification-25, suggesting-27)
det(cause-29, the-28)
nsubj(entity-43, cause-29)
amod(complexity-32, biological-31)
prep_of(cause-29, complexity-32)
dobj(been-38, whatever-34)
nsubj(been-38, it-35)
aux(been-38, might-36)
aux(been-38, have-37)
dep(complexity-32, been-38)
cop(entity-43, was-40)
det(entity-43, a-41)
amod(entity-43, conscious-42)
ccomp(suggesting-27, entity-43)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD could) (, ,)
      (PP (IN by)
        (NP (DT the) (JJ exact) (JJ same) (NN reasoning)))
      (, ,)
      (VP (VB argue)
        (SBAR (IN that)
          (S
            (NP
              (NP (NN everything))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (MD can)
                    (VP (VB build)
                      (NP (JJ complex) (NNS machines)))))))
            (VP (MD must)
              (VP (VB have)
                (NP (JJ large) (, ,) (JJ complex) (, ,) (JJ biological) (NNS brains))))))))
    (. .)))

nsubj(argue-10, One-1)
aux(argue-10, could-2)
det(reasoning-8, the-5)
amod(reasoning-8, exact-6)
amod(reasoning-8, same-7)
prep_by(argue-10, reasoning-8)
root(ROOT-0, argue-10)
complm(have-19, that-11)
nsubj(build-15, everything-12)
nsubj(have-19, everything-12)
aux(build-15, can-14)
rcmod(everything-12, build-15)
amod(machines-17, complex-16)
dobj(build-15, machines-17)
aux(have-19, must-18)
ccomp(argue-10, have-19)
amod(brains-25, large-20)
amod(brains-25, complex-22)
amod(brains-25, biological-24)
dobj(have-19, brains-25)

