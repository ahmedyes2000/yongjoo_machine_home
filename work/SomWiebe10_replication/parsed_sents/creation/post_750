(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP (VBD knew)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP it))
              (VP (MD would)
                (VP (VB turn)
                  (PRT (RP out))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP he))
                      (VP (VBD created)
                        (NP (DT the) (NN world))))))))))))
    (, ,)
    (NP (DT the) (JJ whole) (NN thing))
    (VP (MD would)
      (VP (VB be)
        (ADJP
          (ADVP (NN kind) (IN of))
          (JJ pointless))))
    (. .)))

mark(knew-3, If-1)
nsubj(knew-3, God-2)
advcl(pointless-22, knew-3)
advmod(turn-7, how-4)
nsubj(turn-7, it-5)
aux(turn-7, would-6)
ccomp(knew-3, turn-7)
prt(turn-7, out-8)
advmod(created-11, when-9)
nsubj(created-11, he-10)
advcl(turn-7, created-11)
det(world-13, the-12)
dobj(created-11, world-13)
det(thing-17, the-15)
amod(thing-17, whole-16)
nsubj(pointless-22, thing-17)
aux(pointless-22, would-18)
cop(pointless-22, be-19)
dep(of-21, kind-20)
advmod(pointless-22, of-21)
root(ROOT-0, pointless-22)

(ROOT
  (S
    (NP (NNP God))
    (VP
      (VP (VBZ does) (RB n't)
        (VP (VB know)
          (NP (PRP$ our) (NN future))))
      (CC but)
      (VP (RB all)
        (NP (PRP$ our) (JJ possible) (NNS futures))))
    (. .)))

nsubj(know-4, God-1)
aux(know-4, does-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
poss(future-6, our-5)
dobj(know-4, future-6)
advmod(futures-11, all-8)
poss(futures-11, our-9)
amod(futures-11, possible-10)
conj_but(know-4, futures-11)

(ROOT
  (S
    (NP
      (NP (NNP Think))
      (PP (IN of)
        (NP (NN life))))
    (VP
      (ADVP (IN as) (DT a))
      (VBP choose)
      (NP (PRP$ your) (JJ own) (NN adventure) (NN book)))
    (. .)))

nsubj(choose-6, Think-1)
prep_of(Think-1, life-3)
advmod(choose-6, as-4)
dep(as-4, a-5)
root(ROOT-0, choose-6)
poss(book-10, your-7)
amod(book-10, own-8)
nn(book-10, adventure-9)
dobj(choose-6, book-10)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP listen))))
      (, ,)
      (NP (NNP God))
      (VP (MD will)
        (VP (VB tell)
          (NP (PRP you))
          (SBAR
            (WHADVP (WDT which) (NN way))
            (S
              (VP (TO to)
                (VP (VB go))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP you))
      (ADVP (RB always))
      (VP (VBP have)
        (NP (JJ free) (NN will))))
    (. .)))

mark(listen-3, If-1)
nsubj(listen-3, you-2)
advcl(tell-7, listen-3)
nsubj(tell-7, God-5)
aux(tell-7, will-6)
root(ROOT-0, tell-7)
dobj(tell-7, you-8)
dep(way-10, which-9)
advmod(go-12, way-10)
aux(go-12, to-11)
xcomp(tell-7, go-12)
nsubj(have-17, you-15)
advmod(have-17, always-16)
conj_but(tell-7, have-17)
amod(will-19, free-18)
dobj(have-17, will-19)

