(ROOT
  (FRAG
    (NP (NNP Rob) (NNP Crowther) (NNPS Claims))
    (: :)
    (S
      (S
        (PP (VBG According)
          (PP (TO to)
            (NP
              (NP (DT the) (NN theory))
              (PP (IN of)
                (NP (JJ intelligent) (NN design)))))))
      (, ,)
      (NP
        (NP (JJ certain) (NNS features))
        (PP
          (PP (IN of)
            (NP (DT the) (NN universe)))
          (CC and)
          (PP (IN of)
            (NP (VBG living) (NNS things)))))
      (VP (VBP are)
        (VP (RBS best) (VBN explained)
          (PP (IN by)
            (NP
              (NP (DT an) (JJ intelligent) (NN cause))
              (, ,)
              (NP
                (NP (RB not) (DT an) (JJ undirected) (NN process))
                (PP (JJ such) (IN as)
                  (NP (JJ natural) (NN selection)))))))))
    (. .)))

nn(Claims-3, Rob-1)
nn(Claims-3, Crowther-2)
root(ROOT-0, Claims-3)
ccomp(explained-24, According-5)
pcomp(According-5, to-6)
det(theory-8, the-7)
prep_to(According-5, theory-8)
amod(design-11, intelligent-10)
prep_of(theory-8, design-11)
amod(features-14, certain-13)
nsubjpass(explained-24, features-14)
det(universe-17, the-16)
prep_of(features-14, universe-17)
amod(things-21, living-20)
prep_of(features-14, things-21)
conj_and(universe-17, things-21)
auxpass(explained-24, are-22)
advmod(explained-24, best-23)
dep(Claims-3, explained-24)
det(cause-28, an-26)
amod(cause-28, intelligent-27)
agent(explained-24, cause-28)
neg(process-33, not-30)
det(process-33, an-31)
amod(process-33, undirected-32)
appos(cause-28, process-33)
amod(selection-37, natural-36)
prep_such_as(process-33, selection-37)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (RB somewhat) (JJ meaningless))
        (NN position))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP
            (VP (VBZ provides)
              (S
                (NP (DT no) (NNS methods))
                (VP (TO to)
                  (VP (VB determine)
                    (NP (DT the))
                    (ADVP (WRB how))))))
            (CC and)
            (VP
              (ADVP (RB thus))
              (MD can) (RB not)
              (VP (VB make)
                (NP (DT a) (NN claim))
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (VP (RBS best) (VBN explained)
                        (PP (IN by)
                          (NP (DT an) (JJ intelligent) (NN cause)))))))))))))
    (. .)))

nsubj(position-6, This-1)
cop(position-6, is-2)
det(position-6, a-3)
advmod(meaningless-5, somewhat-4)
amod(position-6, meaningless-5)
root(ROOT-0, position-6)
mark(provides-10, as-8)
nsubj(provides-10, it-9)
nsubj(make-21, it-9)
advcl(position-6, provides-10)
det(methods-12, no-11)
nsubj(determine-14, methods-12)
aux(determine-14, to-13)
xcomp(provides-10, determine-14)
dobj(determine-14, the-15)
advmod(determine-14, how-16)
advmod(make-21, thus-18)
aux(make-21, can-19)
neg(make-21, not-20)
advcl(position-6, make-21)
conj_and(provides-10, make-21)
det(claim-23, a-22)
dobj(make-21, claim-23)
complm(explained-28, that-24)
nsubjpass(explained-28, it-25)
auxpass(explained-28, is-26)
advmod(explained-28, best-27)
ccomp(make-21, explained-28)
det(cause-32, an-30)
amod(cause-32, intelligent-31)
agent(explained-28, cause-32)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (PP (IN in)
            (NP
              (NP (NN order))
              (PP (TO to)
                (NP (NN infer) (`` ``) (NN design) ('' '')))))
          (NP (NNP ID))
          (VP (VBZ needs)
            (S
              (VP (TO to)
                (VP (VB eliminate)
                  (NP
                    (NP
                      (ADJP (DT any)
                        (CC and)
                        (DT all))
                      (ADJP (VBN known)
                        (CC and)
                        (JJ unknown))
                      (NNS processes))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (NN chance))
                          (ADVP (CC or)))
                        (PRN (-LRB- -LRB-)
                          (NP (NNP and) (. ?))
                          (-RRB- -RRB-))))))))))))))

nsubj(means-2, This-1)
root(ROOT-0, means-2)
complm(needs-12, that-3)
prep_in(needs-12, order-5)
nn(design-9, infer-7)
prep_to(order-5, design-9)
nsubj(needs-12, ID-11)
xsubj(eliminate-14, ID-11)
ccomp(means-2, needs-12)
aux(eliminate-14, to-13)
xcomp(needs-12, eliminate-14)
amod(processes-21, any-15)
conj_and(any-15, all-17)
amod(processes-21, all-17)
amod(processes-21, known-18)
conj_and(known-18, unknown-20)
amod(processes-21, unknown-20)
dobj(eliminate-14, processes-21)
prep_of(processes-21, chance-23)
advmod(chance-23, or-24)
appos(chance-23, and-26)

(ROOT
  (S
    (NP
      (NP
        (NP (NN regularity))
        (, ,) (RB not)
        (NP (DT a)
          (ADJP (RB very) (JJ easy))
          (NN task)))
      (CC and)
      (ADVP (RB in))
      (NP
        (NP (NN fact))
        (, ,)
        (NP (NNP Dembski))))
    (VP (VBZ argues)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN design) (NN inference))
          (VP (VBZ is) (`` ``)
            (ADJP (JJ useless))
            ('' '')
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBZ includes)
                  (NP (JJ false) (NNS positives)))))))))
    (. .)))

nsubj(argues-13, regularity-1)
neg(regularity-1, not-3)
det(task-7, a-4)
advmod(easy-6, very-5)
amod(task-7, easy-6)
dep(regularity-1, task-7)
advmod(regularity-1, in-9)
conj_and(regularity-1, in-9)
nsubj(argues-13, in-9)
conj_and(regularity-1, fact-10)
nsubj(argues-13, fact-10)
appos(fact-10, Dembski-12)
root(ROOT-0, argues-13)
complm(useless-20, that-14)
det(inference-17, the-15)
nn(inference-17, design-16)
nsubj(useless-20, inference-17)
cop(useless-20, is-18)
ccomp(argues-13, useless-20)
mark(includes-24, if-22)
nsubj(includes-24, it-23)
advcl(useless-20, includes-24)
amod(positives-26, false-25)
dobj(includes-24, positives-26)

(ROOT
  (S
    (ADVP (RB Yet))
    (, ,)
    (NP (PRP we))
    (ADVP (DT all))
    (VP (VBP know)
      (PP (IN from)
        (NP (NN history)))
      (SBAR (IN that)
        (S
          (NP (NN design) (NNS inferences))
          (VP (VBP have)
            (VP (VBN been)
              (ADJP (RB inherently) (JJ unreliable))
              (PP (IN in)
                (NP
                  (NP (NNS cases))
                  (PP (IN of)
                    (NP (DT the) (`` ``) (NN supernatural) ('' ''))))))))))
    (. .)))

advmod(know-5, Yet-1)
nsubj(know-5, we-3)
advmod(know-5, all-4)
root(ROOT-0, know-5)
prep_from(know-5, history-7)
complm(unreliable-14, that-8)
nn(inferences-10, design-9)
nsubj(unreliable-14, inferences-10)
aux(unreliable-14, have-11)
cop(unreliable-14, been-12)
advmod(unreliable-14, inherently-13)
ccomp(know-5, unreliable-14)
prep_in(unreliable-14, cases-16)
det(supernatural-20, the-18)
prep_of(cases-16, supernatural-20)

(ROOT
  (SBARQ (RB So)
    (WHNP (WP what))
    (SQ
      (VP (VBZ is)
        (VP (VBG going)
          (PRT (RP on))
          (ADVP (RB here)))))
    (. ?)))

advmod(going-4, So-1)
nsubj(going-4, what-2)
aux(going-4, is-3)
root(ROOT-0, going-4)
prt(going-4, on-5)
advmod(going-4, here-6)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN case))
        (PP (IN of)
          (NP (DT the) (NN supernatural)))))
    (, ,)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (S
          (NP (DT no) (NNS ways))
          (VP (TO to)
            (VP (VB constrain)
              (NP (DT the) (NN designer)))))))
    (CC and)
    (S
      (ADVP (RB thus))
      (NP (PRP it))
      (VP
        (VP (MD can)
          (VP (VB explain)
            (NP (NN anything))))
        (CC and)
        (VP
          (ADVP (IN in)
            (NP (DT the) (NN end)))
          (VBZ explains)
          (NP (NN nothing)))))
    (. .)))

det(supernatural-5, the-4)
prep_in_case_of(have-8, supernatural-5)
nsubj(have-8, we-7)
root(ROOT-0, have-8)
det(ways-10, no-9)
nsubj(constrain-12, ways-10)
aux(constrain-12, to-11)
ccomp(have-8, constrain-12)
xcomp(have-8, constrain-12)
det(designer-14, the-13)
dobj(constrain-12, designer-14)
advmod(explain-19, thus-16)
nsubj(explain-19, it-17)
nsubj(explains-25, it-17)
aux(explain-19, can-18)
conj_and(have-8, explain-19)
dobj(explain-19, anything-20)
advmod(explains-25, in-22)
det(end-24, the-23)
pobj(in-22, end-24)
conj_and(have-8, explains-25)
conj_and(explain-19, explains-25)
dobj(explains-25, nothing-26)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB understand)
          (NP (DT this)))))
    (, ,)
    (VP (VBP realize)
      (SBAR (IN that)
        (S (`` ``)
          (NP
            (NP (DT a) (JJ magic) (JJ pink) (NN unicorn))
            (VP (VBN created)
              (NP (NN life))
              (NP (JJ last) (NNP Thursday))))
          ('' '')
          (VP (VBZ is)
            (PP (IN under)
              (NP
                (NP (JJ such) (NNS rules))
                (UCP
                  (NP (DT a) (JJ plausible) (NN scenario))
                  (CC and)
                  (ADVP (RB yet)))))))))
    (. ...)))

aux(understand-2, To-1)
dep(realize-5, understand-2)
dobj(understand-2, this-3)
root(ROOT-0, realize-5)
complm(is-17, that-6)
det(unicorn-11, a-8)
amod(unicorn-11, magic-9)
amod(unicorn-11, pink-10)
nsubj(is-17, unicorn-11)
partmod(unicorn-11, created-12)
dobj(created-12, life-13)
amod(Thursday-15, last-14)
tmod(created-12, Thursday-15)
ccomp(realize-5, is-17)
amod(rules-20, such-19)
prep_under(is-17, rules-20)
det(scenario-23, a-21)
amod(scenario-23, plausible-22)
dep(rules-20, scenario-23)
dep(rules-20, yet-25)
advmod(scenario-23, yet-25)
conj_and(scenario-23, yet-25)

(ROOT
  (S (IN So)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (VP (MD can) (RB not)
          (VP (VB constrain)
            (NP (DT the) (NN explanation))))))
    (, ,)
    (NP (NNP ID))
    (VP (MD can) (RB not)
      (ADVP (RB even))
      (VP (VB venture)
        (S
          (VP (TO to)
            (VP (VB compete)
              (PP (IN with)
                (NP
                  (NP (PRP$ our) (NN ignorance))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (ADVP (RB basically))
                        (NP
                          (NP (DT the) (NN position))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (NP (DT all))
                              (VP (VBN known)
                                (NP
                                  (NP (NNS processes))
                                  (PP (IN of)
                                    (NP
                                      (NP
                                        (NP (NN chance))
                                        (ADVP (CC or)))
                                      (PRN (-LRB- -LRB-)
                                        (NP (NNP and) (. ?))
                                        (-RRB- -RRB-)))))))))))))))))))))

dep(venture-14, So-1)
mark(constrain-6, if-2)
nsubj(constrain-6, we-3)
aux(constrain-6, can-4)
neg(constrain-6, not-5)
advcl(venture-14, constrain-6)
det(explanation-8, the-7)
dobj(constrain-6, explanation-8)
nsubj(venture-14, ID-10)
xsubj(compete-16, ID-10)
aux(venture-14, can-11)
neg(venture-14, not-12)
advmod(venture-14, even-13)
root(ROOT-0, venture-14)
aux(compete-16, to-15)
xcomp(venture-14, compete-16)
poss(ignorance-19, our-18)
prep_with(compete-16, ignorance-19)
nsubj(position-25, ignorance-19)
cop(position-25, is-22)
advmod(position-25, basically-23)
det(position-25, the-24)
rcmod(ignorance-19, position-25)
tmod(known-28, position-25)
advmod(known-28, when-26)
nsubj(known-28, all-27)
dep(position-25, known-28)
dobj(known-28, processes-29)
prep_of(processes-29, chance-31)
advmod(chance-31, or-32)
appos(chance-31, and-34)

(ROOT
  (S
    (NP (NN regularity))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBN eliminated))))
    (. .)))

nsubjpass(eliminated-4, regularity-1)
aux(eliminated-4, have-2)
auxpass(eliminated-4, been-3)
root(ROOT-0, eliminated-4)

(ROOT
  (S (CC And)
    (ADVP (RB yet))
    (, ,)
    (NP
      (NP (JJ evolutionary) (NN theory))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP
            (NP (NNS deals))
            (PP (IN in)
              (NP (JJ positive) (NNS explanations))))
          (VP (VBZ does)))))
    (VP (VBP have)
      (NP (DT a) (NN way)
        (S
          (VP (TO to)
            (VP (VB render)
              (NP (PRP itself))
              (PP (IN as)
                (NP (DT a) (JJS best) (NN explanation)))))))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (MD can)
            (ADVP (IN in) (NN fact))
            (VP (VB compete)
              (SBAR (IN with) (`` ``)
                (S
                  (NP (PRP we))
                  (VP (VBP do) (RB n't)
                    (VP (VB know) ('' '')
                      (SBAR (IN since)
                        (S
                          (NP (PRP it))
                          (VP (VBZ proposes)
                            (NP (JJ positive) (NNS hypotheses))))))))))))))
    (. .)))

cc(have-13, And-1)
advmod(have-13, yet-2)
amod(theory-5, evolutionary-4)
dobj(does-12, theory-5)
nsubj(have-13, theory-5)
rel(does-12, which-7)
nsubj(does-12, deals-8)
amod(explanations-11, positive-10)
prep_in(deals-8, explanations-11)
rcmod(theory-5, does-12)
root(ROOT-0, have-13)
det(way-15, a-14)
dobj(have-13, way-15)
aux(render-17, to-16)
infmod(way-15, render-17)
dobj(render-17, itself-18)
det(explanation-22, a-20)
amod(explanation-22, best-21)
prep_as(render-17, explanation-22)
mark(compete-28, because-23)
nsubj(compete-28, it-24)
aux(compete-28, can-25)
advmod(compete-28, in-26)
dep(in-26, fact-27)
advcl(have-13, compete-28)
mark(know-34, with-29)
nsubj(know-34, we-31)
aux(know-34, do-32)
neg(know-34, n't-33)
advcl(compete-28, know-34)
mark(proposes-38, since-36)
nsubj(proposes-38, it-37)
advcl(know-34, proposes-38)
amod(hypotheses-40, positive-39)
dobj(proposes-38, hypotheses-40)

(ROOT
  (S
    (NP (NNP ID))
    (ADVP (RB however))
    (VP (VBZ is) (RB not)
      (PP (IN in)
        (NP
          (NP (DT the) (NN business))
          (PP (IN of)
            (S
              (VP (VBG providing)
                (NP (DT any) (NNS explanations))))))))
    (. .)))

nsubj(is-3, ID-1)
advmod(is-3, however-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
det(business-7, the-6)
prep_in(is-3, business-7)
prepc_of(business-7, providing-9)
det(explanations-11, any-10)
dobj(providing-9, explanations-11)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (VP (VBG looking)
          (PP (IN at)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (NNP ID))
                (VP (VBZ defines)
                  (NP (PRP$ its) (NNS approaches)))))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB quickly))
    (VP (VBZ becomes)
      (ADJP (JJ clear))
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP
            (VP (VBZ lacks)
              (NP (DT any) (JJ positive) (NN explanation)))
            (CC and)
            (VP
              (ADVP (RB thus))
              (VBZ lacks)
              (NP (DT the) (NN support))
              (PP (IN for)
                (NP
                  (NP (DT the) (NNS hypothesis))
                  (SBAR (IN that)
                    (S
                      (NP (NNP ID))
                      (`` ``)
                      (ADVP (RB best))
                      (VP (VBP explain))))
                  (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-)))))))))
    ('' '') (. .)))

prep_in(clear-16, fact-2)
advmod(looking-5, when-4)
advcl(clear-16, looking-5)
advmod(defines-9, how-7)
nsubj(defines-9, ID-8)
prepc_at(looking-5, defines-9)
poss(approaches-11, its-10)
dobj(defines-9, approaches-11)
nsubj(clear-16, it-13)
advmod(clear-16, quickly-14)
cop(clear-16, becomes-15)
root(ROOT-0, clear-16)
complm(lacks-19, that-17)
nsubj(lacks-19, ID-18)
nsubj(lacks-25, ID-18)
ccomp(clear-16, lacks-19)
det(explanation-22, any-20)
amod(explanation-22, positive-21)
dobj(lacks-19, explanation-22)
advmod(lacks-25, thus-24)
ccomp(clear-16, lacks-25)
conj_and(lacks-19, lacks-25)
det(support-27, the-26)
dobj(lacks-25, support-27)
det(hypothesis-30, the-29)
prep_for(lacks-25, hypothesis-30)
complm(explain-35, that-31)
nsubj(explain-35, ID-32)
advmod(explain-35, best-34)
dep(hypothesis-30, explain-35)
dep(hypothesis-30, s-37)

(ROOT
  (S
    (ADVP (RB Furthermore))
    (PRN (, ,)
      (S
        (NP (JJ natural) (NN selection))
        (VP (VBZ is) (RB not)
          (NP
            (NP (DT an) (JJ undirected) (NN process))
            (, ,)
            (PP (IN in)
              (NP (NN fact))))))
      (, ,))
    (NP (PRP it))
    (VP (VBZ is)
      (PP (IN in)
        (NP (JJ many) (NNS ways)))
      (ADVP
        (ADJP (RB not) (JJ dissimilar)
          (PP (IN from)
            (NP
              (NP (`` ``) (JJ intelligent) (NN selection) ('' ''))
              (, ,) (RB hence)
              (NP
                (NP (NNP Darwin) (POS 's))
                (NN appeal)))))
        (PP (TO to)
          (NP (NNS breeders)))
        (PP (IN in)
          (S
            (VP (VBG furthering)
              (NP (PRP$ his) (NN argument)))))))
    (. .)))

advmod(is-15, Furthermore-1)
amod(selection-4, natural-3)
nsubj(process-9, selection-4)
cop(process-9, is-5)
neg(process-9, not-6)
det(process-9, an-7)
amod(process-9, undirected-8)
parataxis(is-15, process-9)
prep_in(process-9, fact-12)
nsubj(is-15, it-14)
root(ROOT-0, is-15)
amod(ways-18, many-17)
prep_in(is-15, ways-18)
neg(dissimilar-20, not-19)
advmod(is-15, dissimilar-20)
amod(selection-24, intelligent-23)
prep_from(dissimilar-20, selection-24)
advmod(selection-24, hence-27)
poss(appeal-30, Darwin-28)
dep(selection-24, appeal-30)
prep_to(dissimilar-20, breeders-32)
prepc_in(dissimilar-20, furthering-34)
poss(argument-36, his-35)
dobj(furthering-34, argument-36)

(ROOT
  (S (CC And)
    (ADVP (RB here))
    (NP (PRP we))
    (ADVP (RB often))
    (VP (VBP see)
      (NP
        (NP (DT a) (`` ``)
          (NP (NN bait)
            (CC and)
            (NN switch))
          ('' '') (NN approach))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (NNP ID))
            (VP (VBZ argues)
              (SBAR (IN that)
                (S
                  (SBAR (IN since)
                    (S
                      (NP (`` ``) (JJ intelligent) (NN design) ('' ''))
                      (VP (MD can)
                        (VP (VB be)
                          (VP
                            (ADVP (RB successfully))
                            (VBN detected)
                            (PP (IN in)
                              (NP
                                (NP (JJ such) (JJ historical) (NNS sciences))
                                (PP (IN as)
                                  (NP (NN criminology)
                                    (CC and)
                                    (NN archaeology))))))))))
                  (, ,)
                  (NP (PRP it))
                  (ADVP (RB therefor))
                  (VP (MD must)
                    (VP (VB be)
                      (NP (DT the) (NN case))
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (MD can)
                            (ADVP (RB also))
                            (VP (VB be)
                              (VP (VBN extended)
                                (S
                                  (VP (TO to)
                                    (VP (VB include)
                                      (NP
                                        (NP (DT the)
                                          (ADJP (`` ``) (JJ supernatural) ('' '')
                                            (CC or)
                                            (`` ``) (JJ rarefied) ('' ''))
                                          (NN variant))
                                        (PP (IN of)
                                          (NP (NN design)))))))))))))))))))))
    (. .)))

cc(see-5, And-1)
advmod(see-5, here-2)
nsubj(see-5, we-3)
advmod(see-5, often-4)
root(ROOT-0, see-5)
det(approach-12, a-6)
nn(approach-12, bait-8)
conj_and(bait-8, switch-10)
nn(approach-12, switch-10)
dobj(see-5, approach-12)
rel(argues-16, which-14)
nsubj(argues-16, ID-15)
rcmod(approach-12, argues-16)
complm(case-41, that-17)
mark(detected-26, since-18)
amod(design-21, intelligent-20)
nsubjpass(detected-26, design-21)
aux(detected-26, can-23)
auxpass(detected-26, be-24)
advmod(detected-26, successfully-25)
advcl(case-41, detected-26)
amod(sciences-30, such-28)
amod(sciences-30, historical-29)
prep_in(detected-26, sciences-30)
prep_as(sciences-30, criminology-32)
prep_as(sciences-30, archaeology-34)
conj_and(criminology-32, archaeology-34)
nsubj(case-41, it-36)
advmod(case-41, therefor-37)
aux(case-41, must-38)
cop(case-41, be-39)
det(case-41, the-40)
ccomp(argues-16, case-41)
complm(extended-47, that-42)
nsubjpass(extended-47, it-43)
aux(extended-47, can-44)
advmod(extended-47, also-45)
auxpass(extended-47, be-46)
ccomp(case-41, extended-47)
aux(include-49, to-48)
xcomp(extended-47, include-49)
det(variant-58, the-50)
conj_or(rarefied-56, supernatural-52)
amod(variant-58, supernatural-52)
amod(variant-58, rarefied-56)
dobj(include-49, variant-58)
prep_of(variant-58, design-60)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (ADVP (RB however))
        (NP (DT a) (JJ misleading) (NN suggestion))
        (SBAR (IN since)
          (S
            (PP (IN in)
              (NP
                (NP (NN case))
                (PP (IN of)
                  (NP (JJ historical) (NNS sciences)))))
            (, ,)
            (NP (PRP one))
            (VP (VBZ does) (RB not)
              (VP
                (VP (VB rely)
                  (PP (IN on)
                    (NP (DT a)
                      (ADJP (RB fully) (JJ eliminative))
                      (NN approach))))
                (CC and)
                (VP
                  (ADVP (RB then))
                  (VB conclude) (, ,)
                  (ADVP (RB well)))))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB explain)
                (NP
                  (NP (DT this))
                  (, ,) (RB thus)
                  (NP (NN design)))))))))
    (. .)))

nsubj(suggestion-6, This-1)
cop(suggestion-6, is-2)
advmod(suggestion-6, however-3)
det(suggestion-6, a-4)
amod(suggestion-6, misleading-5)
ccomp(know-32, suggestion-6)
mark(rely-17, since-7)
amod(sciences-12, historical-11)
prep_in_case_of(rely-17, sciences-12)
nsubj(rely-17, one-14)
nsubj(conclude-25, one-14)
aux(rely-17, does-15)
neg(rely-17, not-16)
advcl(suggestion-6, rely-17)
det(approach-22, a-19)
advmod(eliminative-21, fully-20)
amod(approach-22, eliminative-21)
prep_on(rely-17, approach-22)
advmod(conclude-25, then-24)
advcl(suggestion-6, conclude-25)
conj_and(rely-17, conclude-25)
advmod(conclude-25, well-27)
nsubj(know-32, we-29)
aux(know-32, do-30)
neg(know-32, n't-31)
root(ROOT-0, know-32)
advmod(explain-35, how-33)
aux(explain-35, to-34)
ccomp(know-32, explain-35)
xcomp(know-32, explain-35)
dobj(explain-35, this-36)
advmod(this-36, thus-38)
dep(this-36, design-39)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (S
      (PP (IN in)
        (PP (IN for)
          (NP (NN instance) (NN criminology))))
      (NP (PRP we))
      (VP (VBP deal)
        (PP (IN with)
          (NP
            (NP (NNS concepts))
            (PP (IN of)
              (NP
                (NP (NNS means))
                (, ,)
                (NP (NNS motives))
                (, ,)
                (NP (NN opportunity))
                (, ,)
                (NP (NNS alibis))
                (, ,)
                (NP (JJ physical) (NN evidence))
                (, ,)
                (NP (JJ circumstantial) (NN evidence))))))))
    (, ,)
    (S
      (NP (NN eye) (NNS witnesses))
      (VP (VBZ etc)
        (S
          (VP (TO to)
            (VP (VB create)
              (NP (DT a) (NN case))
              (`` ``)
              (PP (IN beyond)
                (NP (JJ credible) (NN doubt)))
              ('' ''))))))
    (, ,)
    (PP (IN in)
      (NP
        (NP (JJ other) (NNS words))
        (, ,)
        (NP (DT a) (VBG competing) (NNS hypothesis))))
    (. .)))

prep_in(deal-9, fact-2)
prep(deal-9, in-4)
pcomp(in-4, for-5)
nn(criminology-7, instance-6)
prep_for(in-4, criminology-7)
nsubj(deal-9, we-8)
root(ROOT-0, deal-9)
prep_with(deal-9, concepts-11)
prep_of(concepts-11, means-13)
appos(means-13, motives-15)
appos(means-13, opportunity-17)
appos(means-13, alibis-19)
amod(evidence-22, physical-21)
appos(means-13, evidence-22)
amod(evidence-25, circumstantial-24)
appos(means-13, evidence-25)
nn(witnesses-28, eye-27)
nsubj(etc-29, witnesses-28)
xsubj(create-31, witnesses-28)
ccomp(deal-9, etc-29)
aux(create-31, to-30)
xcomp(etc-29, create-31)
det(case-33, a-32)
dobj(create-31, case-33)
amod(doubt-37, credible-36)
prep_beyond(create-31, doubt-37)
amod(words-42, other-41)
prep_in(deal-9, words-42)
det(hypothesis-46, a-44)
amod(hypothesis-46, competing-45)
appos(words-42, hypothesis-46)

(ROOT
  (S
    (PP (IN In)
      (NP (DT both) (NNS cases)))
    (, ,)
    (S
      (NP (NNS choices))
      (VP (VBP are)
        (VP (VBN made))))
    (CC and)
    (S
      (NP
        (NP (DT the) (JJ future) (NN generation) (POS 's))
        (JJ genetic) (NN make-up))
      (VP (VBZ changes)
        (PP (IN under)
          (NP
            (NP (DT the) (NNS processes))
            (PP (IN of)
              (NP (JJ heritable) (NN variation)
                (CC and)
                (NN selection)))))
        (PRN (-LRB- -LRB-)
          (PP (IN whether)
            (ADJP
              (ADJP (JJ natural))
              (CC or)
              (ADJP (`` ``) (JJ intelligent) ('' ''))))
          (-RRB- -RRB-))))
    (. .)))

det(cases-3, both-2)
prep_in(made-7, cases-3)
nsubjpass(made-7, choices-5)
auxpass(made-7, are-6)
root(ROOT-0, made-7)
det(generation-11, the-9)
amod(generation-11, future-10)
poss(make-up-14, generation-11)
amod(make-up-14, genetic-13)
nsubj(changes-15, make-up-14)
conj_and(made-7, changes-15)
det(processes-18, the-17)
prep_under(changes-15, processes-18)
amod(variation-21, heritable-20)
prep_of(processes-18, variation-21)
prep_of(processes-18, selection-23)
conj_and(variation-21, selection-23)
dep(changes-15, whether-25)
pobj(whether-25, natural-26)
pobj(whether-25, intelligent-29)
conj_or(natural-26, intelligent-29)

(ROOT
  (S
    (PP (IN As)
      (NP (JJ such)))
    (, ,)
    (PP (IN without)
      (NP (JJ further) (NNS explanations)))
    (, ,)
    (NP (NNP ID))
    (VP
      (VP (VBZ has)
        (NP (DT an) (JJ interesting) (NN thesis)))
      (CC but)
      (VP (VBZ provides)
        (NP
          (NP (DT no) (NN way))
          (PP (IN of)
            (S
              (VP (VBG resolving)
                (ADVP (VB let) (RB alone)))))
          (VP (VBG providing)
            (NP (DT a) (`` ``) (JJ better) (NN explanation) ('' ''))
            (PP (TO to)
              (NP
                (NP (JJ evolutionary) (NN theory))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP
                      (VP (VBZ contains))
                      (CC but)
                      (VP (VBZ is) (RB not)
                        (ADJP (VBN limited)
                          (PP (TO to)
                            (NP (`` ``) (JJ natural) (NN selection) ('' ''))))))))))))))
    (. .)))

prep_such_as(has-9, such-2)
amod(explanations-6, further-5)
prep_without(has-9, explanations-6)
nsubj(has-9, ID-8)
nsubj(provides-14, ID-8)
root(ROOT-0, has-9)
det(thesis-12, an-10)
amod(thesis-12, interesting-11)
dobj(has-9, thesis-12)
conj_but(has-9, provides-14)
det(way-16, no-15)
dobj(provides-14, way-16)
prepc_of(way-16, resolving-18)
dep(alone-20, let-19)
advmod(resolving-18, alone-20)
partmod(way-16, providing-21)
det(explanation-25, a-22)
amod(explanation-25, better-24)
dobj(providing-21, explanation-25)
amod(theory-29, evolutionary-28)
prep_to(providing-21, theory-29)
nsubj(contains-31, theory-29)
nsubjpass(limited-35, theory-29)
rcmod(theory-29, contains-31)
auxpass(limited-35, is-33)
neg(limited-35, not-34)
rcmod(theory-29, limited-35)
conj_but(contains-31, limited-35)
amod(selection-39, natural-38)
prep_to(limited-35, selection-39)

(ROOT
  (SINV
    (ADVP (RB So))
    (VBZ does)
    (NP (NNP ID))
    (VP (VB have)
      (NP (DT a) (`` ``) (JJ better) (NN explanation) ('' '')))
    (. ?)))

advmod(have-4, So-1)
aux(have-4, does-2)
nsubj(have-4, ID-3)
root(ROOT-0, have-4)
det(explanation-8, a-5)
amod(explanation-8, better-7)
dobj(have-4, explanation-8)

(ROOT
  (SBARQ
    (SBARQ
      (PP (IN Ask)
        (NP (PRP yourself)))
      (, ,)
      (WHADVP (WRB how))
      (SQ (VBZ does)
        (NP (NNP ID))
        (VP (VB propose)
          (S
            (VP (TO to)
              (VP (VB detect)
                (NP (`` ``) (NN design) ('' '')))))
          (, ,)
          (SBAR
            (WHADVP (WRB how))
            (S
              (VP (VBZ does)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBP propose)
                      (S
                        (VP (TO to)
                          (VP (`` ``) (VB infer)
                            (NP (DT a) (NN designer))
                            ('' '')))))))))))))
    (CC and)
    (SBARQ
      (WHADVP (WRB how))
      (SQ (VBZ does)
        (NP (PRP$ their) (NN approach))
        (VP (VB hold)
          (PRT (RP up))
          (PP (IN in)
            (NP (NN reality)))))
      (. ?))))

prep_ask(propose-7, yourself-2)
advmod(propose-7, how-4)
aux(propose-7, does-5)
nsubj(propose-7, ID-6)
xsubj(detect-9, ID-6)
root(ROOT-0, propose-7)
aux(detect-9, to-8)
xcomp(propose-7, detect-9)
dobj(detect-9, design-11)
advmod(does-15, how-14)
ccomp(propose-7, does-15)
nsubj(propose-17, it-16)
xsubj(infer-20, it-16)
ccomp(does-15, propose-17)
aux(infer-20, to-18)
xcomp(propose-17, infer-20)
det(designer-22, a-21)
dobj(infer-20, designer-22)
advmod(hold-29, how-25)
aux(hold-29, does-26)
poss(approach-28, their-27)
nsubj(hold-29, approach-28)
conj_and(propose-7, hold-29)
prt(hold-29, up-30)
prep_in(hold-29, reality-32)

(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))

root(ROOT-0, 1-1)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ proposes)
      (S
        (VP (TO to)
          (VP (VB detect)
            (NP (NN design))
            (PP (IN through)
              (NP
                (NP (NN elimination))
                (PP (IN of)
                  (NP
                    (NP (NNS processes))
                    (PP (IN of)
                      (NP (NN chance)
                        (CC or)
                        (NN regularity)))))))))))
    (. .)))

nsubj(proposes-2, It-1)
xsubj(detect-4, It-1)
root(ROOT-0, proposes-2)
aux(detect-4, to-3)
xcomp(proposes-2, detect-4)
dobj(detect-4, design-5)
prep_through(detect-4, elimination-7)
prep_of(elimination-7, processes-9)
prep_of(processes-9, chance-11)
prep_of(processes-9, regularity-13)
conj_or(chance-11, regularity-13)

(ROOT
  (S
    (VP (VB Remember)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN definition))
            (PP (IN of)
              (NP (NNP Design))))
          (VP (VBZ is)
            (NP
              (NP (DT the) (`` ``) (NN set) (JJ theoretic) (NN complement))
              (PP (IN of)
                (NP (DT the) (NN disjunction) (NN chance)
                  (CC or)
                  (JJ regularity) ('' ''))))))))
    (. .)))

root(ROOT-0, Remember-1)
complm(complement-12, that-2)
det(definition-4, the-3)
nsubj(complement-12, definition-4)
prep_of(definition-4, Design-6)
cop(complement-12, is-7)
det(complement-12, the-8)
nn(complement-12, set-10)
amod(complement-12, theoretic-11)
ccomp(Remember-1, complement-12)
det(chance-16, the-14)
nn(chance-16, disjunction-15)
prep_of(complement-12, chance-16)
prep_of(complement-12, regularity-18)
conj_or(chance-16, regularity-18)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (NN chance))
        (VP (MD may)
          (VP (VB need)
            (NP (DT no) (JJ further) (NN explanation))))))
    (, ,)
    (NP (NN regularity))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT a) (NN law))
          (PP (IN like)
            (NP (NN process))))))
    (. .)))

mark(need-4, While-1)
nsubj(need-4, chance-2)
aux(need-4, may-3)
advcl(refers-10, need-4)
det(explanation-7, no-5)
amod(explanation-7, further-6)
dobj(need-4, explanation-7)
nsubj(refers-10, regularity-9)
root(ROOT-0, refers-10)
det(law-13, a-12)
prep_to(refers-10, law-13)
prep_like(law-13, process-15)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ is)
          (ADJP (JJ important)
            (S
              (VP (TO to)
                (VP (VB notice))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP (VBZ is) (RB not)
            (ADJP (JJ clear))
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBZ includes) (`` ``)
                  (NP (JJ stochastic) (NNS processes))
                  ('' '')
                  (SBAR (IN since)
                    (S
                      (NP (JJ such) (NNS processes))
                      (ADVP (RB typically))
                      (VP (VBP contain)
                        (NP (PDT both)
                          (NP (DT a) (NN regularity) (NN component))
                          (CC and)
                          (NP (DT a) (NN chance) (NN component)))))))))
            (PRN (-LRB- -LRB-)
              (VP
                (ADVP (RB also))
                (VBN known)
                (PP (IN as)
                  (NP
                    (NP (NN noise))
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (NN noise))
                        (VP (VBZ is)
                          (NP
                            (NP (DT a) (NN concept))
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBZ includes)
                                  (S (`` ``)
                                    (NP (JJ unknown) (NNS processes))
                                    ('' ''))))))))))))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(important-3, What-1)
cop(important-3, is-2)
csubj(is-6, important-3)
aux(notice-5, to-4)
xcomp(important-3, notice-5)
root(ROOT-0, is-6)
complm(clear-11, that-7)
nsubj(clear-11, ID-8)
cop(clear-11, is-9)
neg(clear-11, not-10)
ccomp(is-6, clear-11)
mark(includes-14, if-12)
nsubj(includes-14, it-13)
advcl(clear-11, includes-14)
amod(processes-17, stochastic-16)
dobj(includes-14, processes-17)
mark(contain-23, since-19)
amod(processes-21, such-20)
nsubj(contain-23, processes-21)
advmod(contain-23, typically-22)
advcl(includes-14, contain-23)
preconj(component-27, both-24)
det(component-27, a-25)
nn(component-27, regularity-26)
dobj(contain-23, component-27)
det(component-31, a-29)
nn(component-31, chance-30)
dobj(contain-23, component-31)
conj_and(component-27, component-31)
advmod(known-34, also-33)
dep(clear-11, known-34)
prep_as(known-34, noise-36)
advmod(concept-41, where-37)
nsubj(concept-41, noise-38)
cop(concept-41, is-39)
det(concept-41, a-40)
rcmod(noise-36, concept-41)
nsubj(includes-43, concept-41)
rcmod(concept-41, includes-43)
amod(processes-46, unknown-45)
dep(includes-43, processes-46)

