(ROOT
  (S
    (NP (DT The) (NNP Bible))
    (VP (VBZ is)
      (NP
        (NP (DT no) (JJR more) (NN self))
        (VP (VBG authenticating)
          (ADVP (RB then))
          (NP (DT any) (JJ other) (JJ irrational) (NN fantasy)))))
    (. .)))

det(Bible-2, The-1)
nsubj(self-6, Bible-2)
cop(self-6, is-3)
det(self-6, no-4)
amod(self-6, more-5)
root(ROOT-0, self-6)
partmod(self-6, authenticating-7)
advmod(authenticating-7, then-8)
det(fantasy-12, any-9)
amod(fantasy-12, other-10)
amod(fantasy-12, irrational-11)
dobj(authenticating-7, fantasy-12)

(ROOT
  (NP
    (NP
      (NP
        (NP (DT The) (JJ whole) (NN idea))
        (PP (IN of)
          (NP (DT a) (NN creator))))
      (, ,)
      (CC and)
      (NP
        (NP (DT a) (NN moment))
        (SBAR (IN if)
          (S
            (NP (NN creation))
            (VP (VBZ is)
              (ADJP (JJ flawed)))))))
    (: :)
    (S (`` ``)
      (NP (DT Some) (JJ foolish) (NNS men))
      (VP (VBP declare)
        (SBAR (IN that)
          (S
            (NP (DT a) (NNP Creator))
            (VP (VBD made)
              (NP (DT the) (NN world)))))))
    (. .)))

det(idea-3, The-1)
amod(idea-3, whole-2)
root(ROOT-0, idea-3)
det(creator-6, a-5)
prep_of(idea-3, creator-6)
det(moment-10, a-9)
conj_and(idea-3, moment-10)
mark(flawed-14, if-11)
nsubj(flawed-14, creation-12)
cop(flawed-14, is-13)
dep(moment-10, flawed-14)
det(men-19, Some-17)
amod(men-19, foolish-18)
nsubj(declare-20, men-19)
dep(idea-3, declare-20)
complm(made-24, that-21)
det(Creator-23, a-22)
nsubj(made-24, Creator-23)
ccomp(declare-20, made-24)
det(world-26, the-25)
dobj(made-24, world-26)

(ROOT
  (FRAG (CC And)
    (, ,)
    (NP
      (NP (NN obscenity))
      (PP (IN of)
        (NP (NNS obscenities))))
    (, ,)
    (NP (JJ original) (NN sin))
    (. .)))

dep(obscenity-3, And-1)
root(ROOT-0, obscenity-3)
prep_of(obscenity-3, obscenities-5)
amod(sin-8, original-7)
dep(obscenity-3, sin-8)

(ROOT
  (SQ (VBD Were)
    (NP (NNP Adam)
      (CC &)
      (NNP Eve))
    (NP (NNS zombies))
    (. ?)))

cop(zombies-5, Were-1)
nsubj(zombies-5, Adam-2)
conj_and(Adam-2, Eve-4)
nsubj(zombies-5, Eve-4)
root(ROOT-0, zombies-5)

(ROOT
  (S
    (SBAR (IN since)
      (S
        (PP (IN without)
          (NP (JJ free) (NN will)))
        (NP (PRP they))
        (VP (VBD were) (RB not)
          (ADJP (JJ human)))))
    (: :) (`` ``)
    (S
      (VP (TO To)
        (VP (VB hold)
          (NP
            (NP (NN man) (POS 's))
            (NN nature))
          (PP (IN as)
            (NP (PRP$ his) (NN sin))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mockery))
        (PP (IN of)
          (NP (NN nature)))))
    (. .)))

mark(human-8, since-1)
amod(will-4, free-3)
prep_without(human-8, will-4)
nsubj(human-8, they-5)
cop(human-8, were-6)
neg(human-8, not-7)
advcl(mockery-21, human-8)
csubj(mockery-21, human-8)
aux(hold-12, To-11)
csubj(mockery-21, hold-12)
poss(nature-15, man-13)
dobj(hold-12, nature-15)
poss(sin-18, his-17)
prep_as(hold-12, sin-18)
cop(mockery-21, is-19)
det(mockery-21, a-20)
root(ROOT-0, mockery-21)
prep_of(mockery-21, nature-23)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB punish)
          (NP (PRP him))
          (PP (IN for)
            (NP
              (NP (DT a) (NN crime))
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBD committed)
                    (SBAR (IN before)
                      (S
                        (NP (PRP he))
                        (VP (VBD was)
                          (VP (VBN born)))))))))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mockery))
        (PP (IN of)
          (NP (NN justice)))))
    (. .)))

aux(punish-2, To-1)
csubj(mockery-15, punish-2)
dobj(punish-2, him-3)
det(crime-6, a-5)
prep_for(punish-2, crime-6)
nsubj(committed-8, he-7)
rcmod(crime-6, committed-8)
mark(born-12, before-9)
nsubjpass(born-12, he-10)
auxpass(born-12, was-11)
advcl(committed-8, born-12)
cop(mockery-15, is-13)
det(mockery-15, a-14)
root(ROOT-0, mockery-15)
prep_of(mockery-15, justice-17)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB hold)
          (S
            (NP (PRP him))
            (ADJP (JJ guilty)
              (PP (IN in)
                (NP (DT a) (NN matter))))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT no) (NN innocence))
                (VP (VBZ exists))))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mockery))
        (PP (IN of)
          (NP (NN reason)))))
    (. .)))

aux(hold-2, To-1)
csubj(mockery-14, hold-2)
nsubj(exists-11, him-3)
dep(exists-11, guilty-4)
det(matter-7, a-6)
prep_in(guilty-4, matter-7)
advmod(exists-11, where-8)
det(innocence-10, no-9)
nsubj(exists-11, innocence-10)
xcomp(hold-2, exists-11)
cop(mockery-14, is-12)
det(mockery-14, a-13)
root(ROOT-0, mockery-14)
prep_of(mockery-14, reason-16)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB destroy)
          (NP (NN morality) (, ,) (NN nature) (, ,) (NN justice)
            (CC and)
            (NN reason))
          (PP (IN by)
            (NP
              (NP (NNS means))
              (PP (IN of)
                (NP (DT a) (JJ single) (NN concept))))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN feat))
        (PP (IN of)
          (NP (NN evil))))
      (ADVP (RB hardly))
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN matched))))))
    (. .)))

aux(destroy-2, To-1)
csubj(feat-18, destroy-2)
dobj(destroy-2, morality-3)
dobj(destroy-2, nature-5)
conj_and(morality-3, nature-5)
dobj(destroy-2, justice-7)
conj_and(morality-3, justice-7)
dobj(destroy-2, reason-9)
conj_and(morality-3, reason-9)
det(concept-15, a-13)
amod(concept-15, single-14)
prep_by_means_of(destroy-2, concept-15)
cop(feat-18, is-16)
det(feat-18, a-17)
root(ROOT-0, feat-18)
prep_of(feat-18, evil-20)
advmod(feat-18, hardly-21)
aux(matched-24, to-22)
auxpass(matched-24, be-23)
xcomp(feat-18, matched-24)

(ROOT
  (S ('' '')
    (S (-LRB- -LRB-)
      (NP (NNP Ayn) (NNP Rand) (, ,) (NNP Atlas) (NNP Shrugged) (-RRB- -RRB-))
      ('' '')
      (VP
        (ADVP (RB There))
        (MD must)
        (VP (VB be)
          (NP (DT some) (NN way)))))
    (IN that)
    (S
      (NP (DT the) (JJ human) (NN race))
      (VP (MD can)
        (VP (VB rid)
          (NP (PRP itself))
          (PP (IN of)
            (NP
              (NP (DT the) (NN scourge))
              (PP (IN of)
                (NP (NN religion))))))))
    (. .)))

nn(Shrugged-7, Ayn-3)
nn(Shrugged-7, Rand-4)
appos(Shrugged-7, Atlas-6)
nsubj(way-14, Shrugged-7)
advmod(way-14, There-10)
aux(way-14, must-11)
cop(way-14, be-12)
det(way-14, some-13)
root(ROOT-0, way-14)
dep(way-14, that-15)
det(race-18, the-16)
amod(race-18, human-17)
nsubj(rid-20, race-18)
aux(rid-20, can-19)
ccomp(way-14, rid-20)
dobj(rid-20, itself-21)
det(scourge-24, the-23)
prep_of(rid-20, scourge-24)
prep_of(scourge-24, religion-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NN doctrine))
      (SBAR (IN that)
        (S
          (NP (DT the) (NN world))
          (VP (VBD was)
            (VP (VBN created))))))
    (VP
      (VP (VBZ is)
        (ADJP (JJ ill-advised)))
      (, ,)
      (CC and)
      (VP (MD should)
        (VP (VB be)
          (VP (VBN rejected)))))
    (. .)))

det(doctrine-2, The-1)
nsubj(ill-advised-9, doctrine-2)
nsubjpass(rejected-14, doctrine-2)
complm(created-7, that-3)
det(world-5, the-4)
nsubjpass(created-7, world-5)
auxpass(created-7, was-6)
dep(doctrine-2, created-7)
cop(ill-advised-9, is-8)
root(ROOT-0, ill-advised-9)
aux(rejected-14, should-12)
auxpass(rejected-14, be-13)
conj_and(ill-advised-9, rejected-14)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP (VBD created)
          (NP (DT the) (NN world)))))
    (, ,)
    (WHADVP (WRB where))
    (SQ (VBD was)
      (NP (PRP he))
      (PP (IN before)
        (NP (NN creation))))
    (. ?)))

mark(created-3, If-1)
nsubj(created-3, God-2)
advcl(was-8, created-3)
det(world-5, the-4)
dobj(created-3, world-5)
advmod(was-8, where-7)
root(ROOT-0, was-8)
nsubj(was-8, he-9)
prep_before(was-8, creation-11)

(ROOT
  (INTJ (UH ...)))


(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (NNP God))
      (VP (VB have)
        (VP (VBN made)
          (NP (DT the) (NN world))
          (PP (IN without)
            (NP (DT any) (JJ raw) (NN material))))))
    (. ?)))

advmod(made-5, How-1)
aux(made-5, could-2)
nsubj(made-5, God-3)
aux(made-5, have-4)
root(ROOT-0, made-5)
det(world-7, the-6)
dobj(made-5, world-7)
det(material-11, any-9)
amod(material-11, raw-10)
prep_without(made-5, material-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR
            (S
              (NP (PRP He))
              (VP (VBD made)
                (NP
                  (NP (DT this) (JJ first))
                  (, ,)
                  (CC and)
                  (ADVP (RB then))
                  (NP (DT the) (NN world)))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBN faced)
        (PP (IN with)
          (NP (DT an) (JJ endless) (NN regression)))))
    (: ...)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(faced-16, say-3)
nsubj(made-5, He-4)
ccomp(say-3, made-5)
det(first-7, this-6)
dobj(made-5, first-7)
dobj(made-5, then-10)
advmod(first-7, then-10)
conj_and(first-7, then-10)
det(world-12, the-11)
dobj(made-5, world-12)
conj_and(first-7, world-12)
nsubjpass(faced-16, you-14)
auxpass(faced-16, are-15)
root(ROOT-0, faced-16)
det(regression-20, an-18)
amod(regression-20, endless-19)
prep_with(faced-16, regression-20)

(ROOT
  (S
    (VP (VB Know)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN world))
          (VP (VBZ is)
            (VP (VBN uncreated) (, ,)
              (SBAR (IN as)
                (S
                  (NP (NN time))
                  (NP (PRP itself))
                  (VP (VBZ is))))
              (, ,)
              (PP (IN without)
                (NP (NN beginning)
                  (CC and)
                  (NN end))))))))
    (. .)))

root(ROOT-0, Know-1)
complm(uncreated-6, that-2)
det(world-4, the-3)
nsubjpass(uncreated-6, world-4)
auxpass(uncreated-6, is-5)
ccomp(Know-1, uncreated-6)
mark(is-11, as-8)
nsubj(is-11, time-9)
nsubj(is-11, itself-10)
advcl(uncreated-6, is-11)
prep_without(uncreated-6, beginning-14)
prep_without(uncreated-6, end-16)
conj_and(beginning-14, end-16)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBN based)
        (PP (IN on)
          (NP (NNS principles)))))
    (. .)))

cc(based-4, And-1)
nsubjpass(based-4, it-2)
auxpass(based-4, is-3)
root(ROOT-0, based-4)
prep_on(based-4, principles-6)

(ROOT
  (FRAG ('' '')
    (NP (NNP Mahapurana))
    (PP (IN by)
      (NP
        (NP (NNP JinasenaEden))
        (PP (IN as)
          (NP (DT a) (NN paradise)))))
    (. .)))

root(ROOT-0, Mahapurana-2)
dep(Mahapurana-2, by-3)
pobj(by-3, JinasenaEden-4)
det(paradise-7, a-6)
prep_as(JinasenaEden-4, paradise-7)

(ROOT
  (S
    (NP (NNP Sounds))
    (VP (VBP like)
      (NP (DT a) (JJ maximum) (NN security) (NN prison))
      (PP (IN with)
        (NP (DT all) (JJ pervasive) (NN surveillance))))
    (. .)))

nsubj(like-2, Sounds-1)
root(ROOT-0, like-2)
det(prison-6, a-3)
amod(prison-6, maximum-4)
nn(prison-6, security-5)
dobj(like-2, prison-6)
det(surveillance-10, all-8)
amod(surveillance-10, pervasive-9)
prep_with(like-2, surveillance-10)

