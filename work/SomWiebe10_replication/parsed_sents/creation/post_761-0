(ROOT
  (SQ
    (S
      (NP
        (NP (DT The) (NN argument))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (VP (VBG making))))))
      (VP (MD would)
        (VP (VB make)
          (NP (NN sense))
          (SBAR (IN if)
            (S
              (NP (PRP we))
              (VP (MD could) (RB all)
                (ADVP (RB just))
                (VP
                  (VP (VB go)
                    (PRT (RP up))
                    (PP (TO to)
                      (NP (NNP God))))
                  (CC and)
                  (VP (VB ask))))))
          (, ,) (`` ``)
          (INTJ (UH Hey)))))
    (, ,)
    (SQ (VBZ is)
      (NP (DT this))
      (ADJP (JJ true)))
    (. ?)))

det(argument-2, The-1)
dobj(making-5, argument-2)
nsubj(make-7, argument-2)
nsubj(making-5, you-3)
aux(making-5, 're-4)
rcmod(argument-2, making-5)
aux(make-7, would-6)
dep(true-26, make-7)
dobj(make-7, sense-8)
mark(go-14, if-9)
nsubj(go-14, we-10)
nsubj(ask-19, we-10)
aux(go-14, could-11)
advmod(go-14, all-12)
advmod(go-14, just-13)
advcl(make-7, go-14)
prt(go-14, up-15)
prep_to(go-14, God-17)
advcl(make-7, ask-19)
conj_and(go-14, ask-19)
dep(make-7, Hey-22)
cop(true-26, is-24)
nsubj(true-26, this-25)
root(ROOT-0, true-26)

