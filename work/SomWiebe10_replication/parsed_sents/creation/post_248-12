(ROOT
  (S ('' '')
    (ADVP (RB Well))
    (, ,)
    (NP
      (NP (RB not) (RB really))
      (, ,)
      (PP (IN after)
        (NP
          (NP (PDT all) (DT the) (NN concept))
          (PP (IN of)
            (NP (NN design))))))
    (VP (VBZ is)
      (PP (RB not)
        (PP (IN about)
          (NP
            (NP (DT the) (NN existence))
            (PP (IN of)
              (NP (DT a) (NN designer)))))
        (CC but)
        (PP (IN about)
          (S
            (NP (JJ scientific) (NNS processes))
            (VP (VBG being)
              (ADJP (JJ unable)
                (S
                  (VP (TO to)
                    (VP (VB explain)
                      (NP (DT a) (JJ particular) (NN system)))))))))))
    (. .)))

advmod(is-13, Well-2)
neg(really-5, not-4)
nsubj(is-13, really-5)
predet(concept-10, all-8)
det(concept-10, the-9)
prep_after(really-5, concept-10)
prep_of(concept-10, design-12)
root(ROOT-0, is-13)
neg(is-13, not-14)
det(existence-17, the-16)
prep_about(is-13, existence-17)
det(designer-20, a-19)
prep_of(existence-17, designer-20)
amod(processes-24, scientific-23)
nsubj(unable-26, processes-24)
cop(unable-26, being-25)
prep_about(is-13, unable-26)
conj_but(existence-17, unable-26)
aux(explain-28, to-27)
xcomp(unable-26, explain-28)
det(system-31, a-29)
amod(system-31, particular-30)
dobj(explain-28, system-31)

