(ROOT
  (S
    (S
      (VP (`` ``) (VB Let)
        (S
          (NP (PRP s))
          (VP (VB look)
            (PP (IN at)
              (NP
                (NP (DT this))
                (: :)
                (S
                  (VP (TO to)
                    (VP (VB counter)
                      (NP (DT the) (JJ malarial) (NN parasite))
                      (PRN (-LRB- -LRB-)
                        (NP
                          (NP (NNP presumably))
                          (, ,)
                          (NP (DT another) (NN creation)))
                        (PP (IN of)
                          (NP (DT this) (JJ benevolent) (NNP Intelligent) (NN Designer)))
                        (-RRB- -RRB-)))))))))))
    (, ,)
    (NP (DT a) (NN Designer))
    (VP (VBZ tinkers)
      (PP (IN over)
        (NP
          (NP (DT the) (NN millennia))
          (PP
            (PP (IN with)
              (NP (PRP$ our) (NNS genes)
                (S
                  (VP (TO to)
                    (VP (VB confer)
                      (NP (JJ partial) (NN immunity)))))))
            (, ,)
            (CC but)
            (PP (IN with)
              (NP
                (NP (DT the) (NN side-effect))
                (PP (IN of)
                  (NP (JJ lethal) (JJ sickle-cell) (NN disease)))))))))
    (. .)))

ccomp(tinkers-27, Let-2)
nsubj(look-4, s-3)
ccomp(Let-2, look-4)
prep_at(look-4, this-6)
aux(counter-9, to-8)
infmod(this-6, counter-9)
det(parasite-12, the-10)
amod(parasite-12, malarial-11)
dobj(counter-9, parasite-12)
dep(counter-9, presumably-14)
det(creation-17, another-16)
appos(presumably-14, creation-17)
dep(presumably-14, of-18)
det(Designer-22, this-19)
amod(Designer-22, benevolent-20)
nn(Designer-22, Intelligent-21)
pobj(of-18, Designer-22)
det(Designer-26, a-25)
nsubj(tinkers-27, Designer-26)
root(ROOT-0, tinkers-27)
det(millennia-30, the-29)
prep_over(tinkers-27, millennia-30)
poss(genes-33, our-32)
prep_with(millennia-30, genes-33)
aux(confer-35, to-34)
infmod(genes-33, confer-35)
amod(immunity-37, partial-36)
dobj(confer-35, immunity-37)
det(side-effect-42, the-41)
prep_with(millennia-30, side-effect-42)
conj_but(genes-33, side-effect-42)
amod(disease-46, lethal-44)
amod(disease-46, sickle-cell-45)
prep_of(side-effect-42, disease-46)

(ROOT
  (FRAG
    (NP (NNP Way))
    (S
      (VP (TO to)
        (VP (VB go))))
    (. !)))

root(ROOT-0, Way-1)
aux(go-3, to-2)
dep(Way-1, go-3)

(ROOT
  (NP
    (NP (`` ``) (NNP Uhhhh))
    (: ...)))


(ROOT
  (S
    (ADVP (RB dude))
    (, ,)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (NN product))
          (PP (IN of)
            (NP (JJ evolutionary) (NNS processes)))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP 're)
                (VP (VBG talking)
                  (PP (IN about)
                    (NP (RB there))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP agree)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP 're)
                    (ADJP (NN nothing)
                      (S
                        (VP (TO to)
                          (VP (VB brag)
                            (PRT (RP about))))))))))))))
    (. .)))

advmod(product-6, dude-1)
nsubj(product-6, that-3)
cop(product-6, 's-4)
det(product-6, the-5)
root(ROOT-0, product-6)
dobj(talking-12, product-6)
amod(processes-9, evolutionary-8)
prep_of(product-6, processes-9)
nsubj(talking-12, you-10)
aux(talking-12, 're-11)
rcmod(product-6, talking-12)
prep(talking-12, about-13)
pobj(about-13, there-14)
nsubj(think-18, I-17)
conj_and(product-6, think-18)
dobj(talking-12, think-18)
nsubj(agree-20, you-19)
ccomp(think-18, agree-20)
nsubj(nothing-23, they-21)
cop(nothing-23, 're-22)
ccomp(agree-20, nothing-23)
aux(brag-25, to-24)
xcomp(nothing-23, brag-25)
prt(brag-25, about-26)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB Where))
        (S
          (VP (VBZ is))))
      (VP (VBZ Ralph)))
    (RB Nader)
    (S
      (ADVP (WRB when))
      (NP (PRP you))
      (VP
        (ADVP (RB really))
        (VBP need)
        (NP (PRP him))))
    (. ?)))

advmod(is-3, Where-2)
advcl(Ralph-4, is-3)
csubj(Ralph-4, is-3)
root(ROOT-0, Ralph-4)
advmod(Ralph-4, Nader-5)
advmod(need-9, when-6)
nsubj(need-9, you-7)
advmod(need-9, really-8)
ccomp(Ralph-4, need-9)
dobj(need-9, him-10)

(ROOT
  (S (`` ``)
    (VP (VB Screw)
      (NP (PRP him)))
    (. .)))

root(ROOT-0, Screw-2)
dobj(Screw-2, him-3)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBZ is)
      (NP
        (NP (NNP Ron) (NNP Paul))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP you))
            (ADVP (RB REALLY))
            (VP (VBP need)
              (NP (PRP him)))))))
    (. ?)))

advmod(is-2, Where-1)
root(ROOT-0, is-2)
nn(Paul-4, Ron-3)
nsubj(is-2, Paul-4)
advmod(need-8, when-5)
nsubj(need-8, you-6)
advmod(need-8, REALLY-7)
dep(Paul-4, need-8)
dobj(need-8, him-9)

(ROOT
  (S (`` ``)
    (ADVP (RB Surely))
    (, ,)
    (NP
      (NP (DT the)
        (ADJP (JJ imperfect))
        (NN nature))
      (PP (IN of)
        (NP (DT the) (NN mechanism))))
    (ADVP (RB here))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP we))
          (VP (MD would)
            (VP (VB expect)
              (PP (IN as) (`` ``)
                (NP
                  (NP (NN work))
                  (PP (IN in)
                    (NP (NN progress))))
                ('' ''))
              (PP (IN from)
                (NP
                  (NP (JJ natural) (NN selection))
                  (CONJP (RB rather) (IN than))
                  (NP (NN design)))))))))
    (. ?)))

advmod(is-11, Surely-2)
det(nature-6, the-4)
amod(nature-6, imperfect-5)
nsubj(is-11, nature-6)
det(mechanism-9, the-8)
prep_of(nature-6, mechanism-9)
advmod(is-11, here-10)
root(ROOT-0, is-11)
dobj(expect-15, what-12)
nsubj(expect-15, we-13)
aux(expect-15, would-14)
ccomp(is-11, expect-15)
prep_as(expect-15, work-18)
prep_in(work-18, progress-20)
amod(selection-24, natural-23)
prep_from(expect-15, selection-24)
prep_from(expect-15, design-27)
conj_negcc(selection-24, design-27)

(ROOT
  (S (`` ``)
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB definitely))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP we))
          (VP (MD would)
            (VP (VB expect)
              (PP (IN from)
                (NP (JJ evolutionary) (NNS processes))))))))
    (. .)))

nsubj('s-3, It-2)
root(ROOT-0, 's-3)
advmod('s-3, definitely-4)
dobj(expect-8, what-5)
nsubj(expect-8, we-6)
aux(expect-8, would-7)
ccomp('s-3, expect-8)
amod(processes-11, evolutionary-10)
prep_from(expect-8, processes-11)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (NN feature))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP attribute)
              (S
                (VP (TO to)
                  (VP (VB design)))))))))
    (. .)))

nsubj(feature-5, This-1)
cop(feature-5, is-2)
neg(feature-5, not-3)
det(feature-5, a-4)
root(ROOT-0, feature-5)
dobj(attribute-7, feature-5)
nsubj(attribute-7, we-6)
xsubj(design-9, we-6)
rcmod(feature-5, attribute-7)
aux(design-9, to-8)
xcomp(attribute-7, design-9)

