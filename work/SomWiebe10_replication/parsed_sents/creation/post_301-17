(ROOT
  (S
    (ADVP (RB Maybe))
    (NP
      (NP (NNS cells))
      (CC and)
      (NP (NNS prions)
        (CC and)
        (NNS lifeforms)))
    (VP (VBP have)
      (NP
        (NP (DT a) (`` ``) (NN purpose) ('' ''))
        (SBAR
          (S
            (VP (TO to)
              (VP
                (VP (VB grow)
                  (CC and)
                  (VB reproduce))
                (CC and)
                (VP (VB evolve)
                  (SBAR (CC but)
                    (S
                      (SBAR (IN unless)
                        (S
                          (NP (PRP you))
                          (VP (MD can)
                            (VP (VB show)
                              (SBAR (IN that)
                                (S
                                  (NP (EX there))
                                  (VP (VBZ is)
                                    (ADVP (RB really))
                                    (NP
                                      (NP (DT a) (`` ``) (NN need) ('' ''))
                                      (PP (IN for)
                                        (NP (DT a) (NN designer)))))))))))
                      (, ,)
                      (NP (EX there))
                      (VP (VBZ is)
                        (NP (DT no) (NN reason)
                          (S
                            (VP (TO to)
                              (VP (VB assume)
                                (SBAR (IN that)
                                  (S
                                    (NP (EX there))
                                    (VP (VBD was)
                                      (NP (CD one)))))))))))))))))))
    (. .)))

advmod(have-7, Maybe-1)
nsubj(have-7, cells-2)
conj_and(cells-2, prions-4)
nsubj(have-7, prions-4)
conj_and(cells-2, lifeforms-6)
conj_and(prions-4, lifeforms-6)
root(ROOT-0, have-7)
det(purpose-10, a-8)
dobj(have-7, purpose-10)
aux(grow-13, to-12)
infmod(purpose-10, grow-13)
infmod(purpose-10, reproduce-15)
conj_and(grow-13, reproduce-15)
infmod(purpose-10, evolve-17)
conj_and(grow-13, evolve-17)
cc(is-36, but-18)
mark(show-22, unless-19)
nsubj(show-22, you-20)
aux(show-22, can-21)
advcl(is-36, show-22)
complm(is-25, that-23)
expl(is-25, there-24)
ccomp(show-22, is-25)
advmod(is-25, really-26)
det(need-29, a-27)
nsubj(is-25, need-29)
det(designer-33, a-32)
prep_for(need-29, designer-33)
expl(is-36, there-35)
ccomp(evolve-17, is-36)
det(reason-38, no-37)
nsubj(is-36, reason-38)
aux(assume-40, to-39)
infmod(reason-38, assume-40)
complm(was-43, that-41)
expl(was-43, there-42)
ccomp(assume-40, was-43)
nsubj(was-43, one-44)

