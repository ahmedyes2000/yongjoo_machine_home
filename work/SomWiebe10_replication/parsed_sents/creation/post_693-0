(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ is))))
    (, ,)
    (NP (RB then) (RB only) (DT a) (JJ malicious) (NN God))
    (VP (MD would)
      (VP
        (VP (VB tell)
          (NP (PRP it))
          (PRT (RP out))
          (PP (IN of)
            (NP (NN order))))
        (, ,)
        (VP (VB use)
          (NP
            (NP (NNS terms))
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD can) (RB not)
                  (VP (VB understand)))))))
        (, ,)
        (CC or)
        (VP (VB have)
          (NP (JJ other) (`` ``) (NNS traps) ('' ''))
          (PP (IN while)
            (S
              (VP (VBG holding)
                (NP (PRP us))
                (PP (TO to)
                  (NP (PRP$ its) (NNS words)))))))))
    (. .)))

mark(is-3, If-1)
nsubj(is-3, it-2)
advcl(tell-11, is-3)
advmod(God-9, then-5)
advmod(God-9, only-6)
det(God-9, a-7)
amod(God-9, malicious-8)
nsubj(tell-11, God-9)
nsubj(use-17, God-9)
nsubj(have-25, God-9)
aux(tell-11, would-10)
root(ROOT-0, tell-11)
dobj(tell-11, it-12)
prep_out_of(tell-11, order-15)
conj_or(tell-11, use-17)
dobj(use-17, terms-18)
dobj(understand-22, terms-18)
nsubj(understand-22, we-19)
aux(understand-22, can-20)
neg(understand-22, not-21)
rcmod(terms-18, understand-22)
conj_or(tell-11, have-25)
amod(traps-28, other-26)
dobj(have-25, traps-28)
prepc_while(have-25, holding-31)
dobj(holding-31, us-32)
poss(words-35, its-34)
prep_to(holding-31, words-35)

