(ROOT
  (S
    (NP
      (PRN (: --)
        (NP (NNP PvM))
        (: --)))
    (VP (VBD |)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP am)
            (ADJP (JJ sure)
              (SBAR (IN that)
                (S
                  (NP (NNP Highlander))
                  (VP (VBZ is)
                    (ADJP (JJ familiar)
                      (PP (IN with)
                        (NP
                          (NP
                            (NP (DT the) (JJ |) (JJ foundational) (NNS works))
                            (PP (IN of)
                              (NP (NNP Behe))))
                          (CC and)
                          (NP
                            (NP (NNP Dembski) (, ,) (NNP |)
                              (CC both)
                              (NNP rely))
                            (PP (IN on)
                              (NP
                                (NP (DT the) (NN absence))
                                (PP (IN of)
                                  (NP (NN science)))))))))
                    (S
                      (VP (VBG being)
                        (ADJP (RB |) (JJ able)
                          (S
                            (VP (TO to)
                              (VP (VB explain)
                                (NP (DT a) (JJ particular) (NN feature))
                                (PP (TO to)
                                  (NP (NN infer) (`` ``) (NN design) ('' '')))))))))))))))))
    (. .)))

nsubj(|-4, PvM-2)
root(ROOT-0, |-4)
nsubj(sure-7, I-5)
cop(sure-7, am-6)
ccomp(|-4, sure-7)
complm(familiar-11, that-8)
nsubj(familiar-11, Highlander-9)
cop(familiar-11, is-10)
ccomp(sure-7, familiar-11)
det(works-16, the-13)
amod(works-16, |-14)
amod(works-16, foundational-15)
prep_with(familiar-11, works-16)
prep_of(works-16, Behe-18)
prep_with(familiar-11, Dembski-20)
conj_and(works-16, Dembski-20)
conj(Dembski-20, |-22)
dep(Dembski-20, both-23)
conj(Dembski-20, rely-24)
det(absence-27, the-26)
prep_on(Dembski-20, absence-27)
prep_of(absence-27, science-29)
cop(able-32, being-30)
advmod(able-32, |-31)
xcomp(familiar-11, able-32)
aux(explain-34, to-33)
xcomp(able-32, explain-34)
det(feature-37, a-35)
amod(feature-37, particular-36)
dobj(explain-34, feature-37)
nn(design-41, infer-39)
prep_to(explain-34, design-41)

(ROOT
  (SQ (MD Would)
    (NP
      (NP (DT that))
      (NP (DT a) (NN citation)))
    (VP (VB exist)
      (S
        (VP (TO to)
          (VP (VB back)
            (NP (DT this) (NN one))
            (PRT (RP up))))))
    (. !)))

aux(exist-5, Would-1)
nsubj(exist-5, that-2)
xsubj(back-7, that-2)
det(citation-4, a-3)
dep(that-2, citation-4)
root(ROOT-0, exist-5)
aux(back-7, to-6)
xcomp(exist-5, back-7)
det(one-9, this-8)
dobj(back-7, one-9)
prt(back-7, up-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ familiar)
        (PP (IN with)
          (NP (PRP$ their) (NNS works)))))
    (. .)))

nsubj(familiar-3, I-1)
cop(familiar-3, am-2)
root(ROOT-0, familiar-3)
poss(works-6, their-5)
prep_with(familiar-3, works-6)

(ROOT
  (S
    (S
      (NP (DT A) (JJ simple) (NN analogy))
      (VP (VBZ is)
        (NP (DT the) (NN game) ('' '') (JJ Mouse) (NN Trap))
        ('' '')
        (SBAR (IN if)
          (S
            (NP (PDT all) (DT the) (NNS parts))
            (VP (VBP are) (RB n't)
              (PP (IN in)
                (NP (DT the) (JJ right) (NN place))))))))
    (, ,)
    (NP (DT the) (NN metal) (NN ball))
    (VP (MD wo) (RB n't)
      (VP (VB reach)
        (NP (DT the) (NN trigger)
          (S
            (VP (TO to)
              (VP (VB drop)
                (NP (DT the) (JJ plastic) (NN net))))))))
    (. .)))

det(analogy-3, A-1)
amod(analogy-3, simple-2)
nsubj(Trap-9, analogy-3)
cop(Trap-9, is-4)
det(Trap-9, the-5)
nn(Trap-9, game-6)
amod(Trap-9, Mouse-8)
ccomp(reach-27, Trap-9)
mark(are-15, if-11)
predet(parts-14, all-12)
det(parts-14, the-13)
nsubj(are-15, parts-14)
advcl(Trap-9, are-15)
neg(are-15, n't-16)
det(place-20, the-18)
amod(place-20, right-19)
prep_in(are-15, place-20)
det(ball-24, the-22)
nn(ball-24, metal-23)
nsubj(reach-27, ball-24)
aux(reach-27, wo-25)
neg(reach-27, n't-26)
root(ROOT-0, reach-27)
det(trigger-29, the-28)
dobj(reach-27, trigger-29)
aux(drop-31, to-30)
infmod(trigger-29, drop-31)
det(net-34, the-32)
amod(net-34, plastic-33)
dobj(drop-31, net-34)

(ROOT
  (S
    (NP (NNP PvM))
    (VP (VBZ is)
      (ADVP (RB also))
      (VP (VBG confirming)
        (NP
          (NP (DT the) (NN falsifiability))
          (PP (IN of)
            (NP (NNP ID))))
        (PP (IN with)
          (NP (DT this) (NN statement)))))
    (. .)))

nsubj(confirming-4, PvM-1)
aux(confirming-4, is-2)
advmod(confirming-4, also-3)
root(ROOT-0, confirming-4)
det(falsifiability-6, the-5)
dobj(confirming-4, falsifiability-6)
prep_of(falsifiability-6, ID-8)
det(statement-11, this-10)
prep_with(confirming-4, statement-11)

(ROOT
  (S
    (NP (NNP ID) (NNS proponents))
    (VP (VBP do)
      (SBAR
        (S
          (VP (VBP say)
            (S
              (NP
                (NP
                  (NP (DT an) (JJ empirical) (NN demonstration))
                  (PRN (-LRB- -LRB-)
                    (NP
                      (NP (NN evidence))
                      (NP (JJ supporting) (NN materialist) (NNS assumptions)))
                    (-RRB- -RRB-)))
                (PP (IN of)
                  (NP (DT an) (JJ unguided) (NN process))))
              (VP (VBG producing)
                (NP (JJ such) (NN interdependent) (NNS systems))))
            (, ,)
            (SBAR (IN while)
              (S
                (S
                  (VP (VBG retaining)
                    (NP (JJ over-all) (JJ reproductive) (NN ability))))
                (, ,)
                (VP (MD would)
                  (VP (VB falsify)
                    (NP (DT the) (NN design) (NN inference))))))))))
    (. .)))

nn(proponents-2, ID-1)
nsubj(do-3, proponents-2)
root(ROOT-0, do-3)
ccomp(do-3, say-4)
det(demonstration-7, an-5)
amod(demonstration-7, empirical-6)
nsubj(producing-18, demonstration-7)
dep(demonstration-7, evidence-9)
amod(assumptions-12, supporting-10)
nn(assumptions-12, materialist-11)
dep(evidence-9, assumptions-12)
det(process-17, an-15)
amod(process-17, unguided-16)
prep_of(demonstration-7, process-17)
dep(say-4, producing-18)
amod(systems-21, such-19)
nn(systems-21, interdependent-20)
dobj(producing-18, systems-21)
mark(falsify-30, while-23)
dep(falsify-30, retaining-24)
amod(ability-27, over-all-25)
amod(ability-27, reproductive-26)
dobj(retaining-24, ability-27)
aux(falsify-30, would-29)
advcl(say-4, falsify-30)
det(inference-33, the-31)
nn(inference-33, design-32)
dobj(falsify-30, inference-33)

(ROOT
  (S
    (NP
      (NP (JJ Human) (NN technology))
      (, ,)
      (NP
        (NP (DT a) (NN result))
        (PP (IN of)
          (NP (NN intelligence))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (NN chock))
        (PP (JJ full) (IN of)
          (NP
            (ADJP (RB irreducibly) (JJ complex))
            (NNS systems)))))
    (. .)))

amod(technology-2, Human-1)
nsubj(chock-10, technology-2)
det(result-5, a-4)
appos(technology-2, result-5)
prep_of(result-5, intelligence-7)
cop(chock-10, is-9)
root(ROOT-0, chock-10)
dep(chock-10, full-11)
advmod(complex-14, irreducibly-13)
amod(systems-15, complex-14)
prep_of(chock-10, systems-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB therefore))
      (RB not)
      (ADJP (JJ unreasonable)
        (S
          (VP (TO to)
            (VP (VB infer)
              (NP (NN intelligence))
              (PP (IN in)
                (NP
                  (NP
                    (ADJP
                      (NP (JJ biological) (NNS systems))
                      (JJ absent))
                    (NN evidence))
                  (VP (VBG supporting)
                    (NP (JJ materialist) (NNS assumptions))))))))))
    (. .)))

nsubj(unreasonable-5, It-1)
cop(unreasonable-5, is-2)
advmod(unreasonable-5, therefore-3)
neg(unreasonable-5, not-4)
root(ROOT-0, unreasonable-5)
aux(infer-7, to-6)
xcomp(unreasonable-5, infer-7)
dobj(infer-7, intelligence-8)
amod(systems-11, biological-10)
npadvmod(absent-12, systems-11)
amod(evidence-13, absent-12)
prep_in(infer-7, evidence-13)
partmod(evidence-13, supporting-14)
amod(assumptions-16, materialist-15)
dobj(supporting-14, assumptions-16)

(ROOT
  (NP
    (NP (NNP PvM))
    (: --)
    (S
      (S
        (NP (NNP |) (NNP Highlander))
        (VP (VBZ asserts)
          (SBAR (IN that)
            (S
              (NP (NNP ID))
              (VP (VBZ calculates)
                (NP (DT the) (NN probability) (NN |))
                (SBAR (IN that)
                  (S
                    (NP (NN something))
                    (VP (VBD was)
                      (VP (VBN designed)
                        (PP (IN by)
                          (NP (NN chance))))))))))))
      (CC and)
      (S
        (ADVP (RB then))
        (NP (NNP |))
        (VP (VBZ concludes)
          (NP (`` ``) (NN design) ('' '')))))
    (. .)))

root(ROOT-0, PvM-1)
nn(Highlander-4, |-3)
nsubj(asserts-5, Highlander-4)
dep(PvM-1, asserts-5)
complm(calculates-8, that-6)
nsubj(calculates-8, ID-7)
ccomp(asserts-5, calculates-8)
det(|-11, the-9)
nn(|-11, probability-10)
dobj(calculates-8, |-11)
complm(designed-15, that-12)
nsubjpass(designed-15, something-13)
auxpass(designed-15, was-14)
ccomp(calculates-8, designed-15)
agent(designed-15, chance-17)
advmod(concludes-21, then-19)
nsubj(concludes-21, |-20)
dep(PvM-1, concludes-21)
conj_and(asserts-5, concludes-21)
dobj(concludes-21, design-23)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (DT this) (NN description) (JJ only) (NN |))
        (ADVP (RB superficially))
        (VP (VBZ matches)
          (NP (DT the) (NN design) (NN inference)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ shows)
      (S
        (VP (VBG |)
          (NP
            (NP (DT the) (NN gap) (NN filling))
            (PP (IN of)
              (NP (`` ``)
                (NP (RB not) (NN chance) (NN thus) (NN design) ('' ''))
                (, ,)
                (NP
                  (NP (NN nothing))
                  (VP (VBG |)
                    (ADJP
                      (ADJP (JJR more))
                      (, ,)
                      (ADJP (NN nothing) (JJR less)))))))))))
    (. .)))

mark(matches-7, While-1)
det(|-5, this-2)
nn(|-5, description-3)
amod(|-5, only-4)
nsubj(matches-7, |-5)
advmod(matches-7, superficially-6)
advcl(shows-13, matches-7)
det(inference-10, the-8)
nn(inference-10, design-9)
dobj(matches-7, inference-10)
nsubj(shows-13, it-12)
root(ROOT-0, shows-13)
xcomp(shows-13, |-14)
det(filling-17, the-15)
nn(filling-17, gap-16)
dobj(|-14, filling-17)
neg(design-23, not-20)
nn(design-23, chance-21)
nn(design-23, thus-22)
prep_of(filling-17, design-23)
appos(design-23, nothing-26)
partmod(nothing-26, |-27)
acomp(|-27, more-28)
dep(more-28, nothing-30)
dep(nothing-30, less-31)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (PRN (, ,)
      (S
        (NP (NNP ID))
        (VP (VBZ has) (RB not)
          (VP (VBN done)
            (NP
              (NP (DT any) (JJ |) (NN non))
              (UCP
                (NP
                  (NP (JJ trivial) (NNS calculations))
                  (PP (IN of)
                    (NP (NNS probabilities))))
                (CC and)
                (ADJP (JJR worse)))))))
      (, ,))
    (S
      (NP (PRP it))
      (ADVP (RB |))
      (VP (VBZ does) (RB not)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB reject)
                (NP (NN chance))
                (ADVP (RB alone))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (ADVP (RB often))
                      (VP (VBG |)
                        (NP
                          (NP (DT the) (JJS simplest))
                          (CC and)
                          (ADVP (RB still))
                          (NP (JJ intractable) (NN calculation)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (ADVP (RB |))
      (ADVP (RB also))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB exclude)
              (NP (NN regularity) (NNS pathways)))))))
    (. .)))

prep_of(have-22, course-2)
nsubj(done-7, ID-4)
aux(done-7, has-5)
neg(done-7, not-6)
dep(have-22, done-7)
det(non-10, any-8)
amod(non-10, |-9)
dobj(done-7, non-10)
iobj(done-7, non-10)
amod(calculations-12, trivial-11)
dobj(done-7, calculations-12)
dep(non-10, calculations-12)
prep_of(calculations-12, probabilities-14)
dobj(done-7, worse-16)
dep(non-10, worse-16)
conj_and(calculations-12, worse-16)
nsubj(have-22, it-18)
xsubj(reject-24, it-18)
advmod(have-22, |-19)
aux(have-22, does-20)
neg(have-22, not-21)
root(ROOT-0, have-22)
aux(reject-24, to-23)
xcomp(have-22, reject-24)
dobj(reject-24, chance-25)
advmod(reject-24, alone-26)
nsubj(|-31, which-28)
aux(|-31, is-29)
advmod(|-31, often-30)
dep(reject-24, |-31)
det(simplest-33, the-32)
dobj(|-31, simplest-33)
dobj(|-31, still-35)
advmod(simplest-33, still-35)
conj_and(simplest-33, still-35)
amod(calculation-37, intractable-36)
dobj(|-31, calculation-37)
conj_and(simplest-33, calculation-37)
nsubj(has-43, it-40)
xsubj(exclude-45, it-40)
advmod(has-43, |-41)
advmod(has-43, also-42)
conj_but(have-22, has-43)
aux(exclude-45, to-44)
xcomp(has-43, exclude-45)
nn(pathways-47, regularity-46)
dobj(exclude-45, pathways-47)

(ROOT
  (S (CC And)
    (ADVP (RB yet))
    (, ,)
    (NP (NNP |))
    (VP (VBP ask)
      (NP (PRP yourself))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NNS calculations))
          (VP (VBP exist)
            (PP (IN for)
              (NP
                (NP (DT the) (JJ |) (JJ bacterial) (NN flagellum))
                (CC or)
                (NP (DT any) (JJ non) (JJ trivial) (JJ biological) (NN system))))))))
    (. ?)))

cc(ask-5, And-1)
advmod(ask-5, yet-2)
nsubj(ask-5, |-4)
root(ROOT-0, ask-5)
dobj(ask-5, yourself-6)
dobj(exist-10, what-8)
nsubj(exist-10, calculations-9)
dep(ask-5, exist-10)
det(flagellum-15, the-12)
amod(flagellum-15, |-13)
amod(flagellum-15, bacterial-14)
prep_for(exist-10, flagellum-15)
det(system-21, any-17)
amod(system-21, non-18)
amod(system-21, trivial-19)
amod(system-21, biological-20)
prep_for(exist-10, system-21)
conj_or(flagellum-15, system-21)

(ROOT
  (S
    (NP (NNP Dembski))
    (VP
      (VP (VBD wrote)
        (NP (DT a) (NN book)))
      (CC and)
      (VP (VBZ has)
        (NP
          (NP (DT a) (NN website))
          (CC and)
          (NP
            (NP (JJ several) (NNS papers))
            (VP
              (VP (VBG detailing)
                (NP
                  (NP (DT the) (NN scope))
                  (PP (IN of)
                    (NP (NN input) (NNS points)))))
              (CC and)
              (VP (VBG explaining)
                (SBAR
                  (WHADVP (WRB how)
                    (CC and)
                    (WRB why))
                  (S
                    (NP (JJ statistical) (NNS probabilities))
                    (VP (VBP are)
                      (VP (VBN used)
                        (CC and)
                        (VBN calculated)))))))))))
    (. .)))

nsubj(wrote-2, Dembski-1)
nsubj(has-6, Dembski-1)
root(ROOT-0, wrote-2)
det(book-4, a-3)
dobj(wrote-2, book-4)
conj_and(wrote-2, has-6)
det(website-8, a-7)
dobj(has-6, website-8)
amod(papers-11, several-10)
dobj(has-6, papers-11)
conj_and(website-8, papers-11)
dep(papers-11, detailing-12)
det(scope-14, the-13)
dobj(detailing-12, scope-14)
nn(points-17, input-16)
prep_of(scope-14, points-17)
dep(papers-11, explaining-19)
conj_and(detailing-12, explaining-19)
advmod(used-26, how-20)
dep(how-20, and-21)
dep(how-20, why-22)
amod(probabilities-24, statistical-23)
nsubjpass(used-26, probabilities-24)
nsubjpass(calculated-28, probabilities-24)
auxpass(used-26, are-25)
advcl(explaining-19, used-26)
ccomp(explaining-19, used-26)
advcl(explaining-19, calculated-28)
ccomp(explaining-19, calculated-28)
conj_and(used-26, calculated-28)

(ROOT
  (FRAG (RB Not)
    (ADJP (JJ familiar)
      (PP (IN with)
        (NP
          (NP (DT that) (NN argument))
          (, ,)
          (ADVP (RB though)))))
    (. .)))

root(ROOT-0, Not-1)
dep(Not-1, familiar-2)
det(argument-5, that-4)
prep_with(familiar-2, argument-5)
advmod(argument-5, though-7)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ real) (NN life)))
    (NP (PRP they))
    (VP (VBP are)
      (VP (VBN used)
        (S
          (VP (TO to)
            (VP (VB distinguish\/derive)
              (PRN (-LRB- -LRB-)
                (VP (VBN designed))
                (-RRB- -RRB-))
              (NP (NNS signals))
              (PP (IN from)
                (NP
                  (PRN (-LRB- -LRB-)
                    (ADJP (JJ random))
                    (-RRB- -RRB-))
                  (NN noise))))))))
    (. .)))

amod(life-3, real-2)
prep_in(used-6, life-3)
nsubjpass(used-6, they-4)
xsubj(distinguish\/derive-8, they-4)
auxpass(used-6, are-5)
root(ROOT-0, used-6)
aux(distinguish\/derive-8, to-7)
xcomp(used-6, distinguish\/derive-8)
dep(distinguish\/derive-8, designed-10)
dobj(distinguish\/derive-8, signals-12)
dep(noise-17, random-15)
prep_from(distinguish\/derive-8, noise-17)

(ROOT
  (S
    (NP (NNP PvM))
    (VP (VBZ seems)
      (ADJP (JJ unaware)
        (SBAR
          (S
            (NP (NN randomness)
              (CC and)
              (NN design))
            (VP (VBP are)
              (NP
                (ADJP (RB mutually) (JJ exclusive))
                (NNS concepts)))))))
    (. .)))

nsubj(unaware-3, PvM-1)
cop(unaware-3, seems-2)
root(ROOT-0, unaware-3)
nsubj(concepts-10, randomness-4)
conj_and(randomness-4, design-6)
nsubj(concepts-10, design-6)
cop(concepts-10, are-7)
advmod(exclusive-9, mutually-8)
amod(concepts-10, exclusive-9)
dep(unaware-3, concepts-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP understand)
      (NP (`` ``)
        (NP (NN chance))
        ('' '')
        (PP (IN as)
          (NP (NN shorthand))))
      (PP (IN for)
        (NP
          (NP (DT that))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ happens)
                (PP (IN as)
                  (NP
                    (NP (DT a) (NN result))
                    (PP (IN of)
                      (NP
                        (NP (JJ unguided)
                          (PRN (-LRB- -LRB-)
                            (ADJP (JJ random))
                            (-RRB- -RRB-))
                          (NN interaction))
                        (PP (IN of)
                          (NP (NN matter)))))))
                (PP (VBG according)
                  (PP (TO to)
                    (NP
                      (NP (JJ human) (NN understanding))
                      (PP (IN of)
                        (NP (NNS forces)
                          (CC and)
                          (NN material) (NN chemistry))))))))))))
    (. .)))

nsubj(understand-2, I-1)
root(ROOT-0, understand-2)
dobj(understand-2, chance-4)
prep_as(chance-4, shorthand-7)
prep_for(understand-2, that-9)
nsubj(happens-11, that-9)
rcmod(that-9, happens-11)
det(result-14, a-13)
prep_as(happens-11, result-14)
amod(interaction-20, unguided-16)
dep(interaction-20, random-18)
prep_of(result-14, interaction-20)
prep_of(interaction-20, matter-22)
prepc_according_to(happens-11, to-24)
amod(understanding-26, human-25)
pobj(happens-11, understanding-26)
prep_of(understanding-26, forces-28)
nn(chemistry-31, material-30)
prep_of(understanding-26, chemistry-31)
conj_and(forces-28, chemistry-31)

(ROOT
  (S (`` ``)
    (NP (NNP Organized))
    ('' '')
    (VP
      (VP (VBZ means)
        (VP (VBN ordered)
          (PP (IN with)
            (NP (NN intent)))))
      (CC and)
      (VP (VBZ implies)
        (NP (NN intelligence) (NNP Human) (NNP tech))))
    (. .)))

nsubj(means-4, Organized-2)
nsubj(implies-9, Organized-2)
root(ROOT-0, means-4)
dep(means-4, ordered-5)
prep_with(ordered-5, intent-7)
conj_and(means-4, implies-9)
nn(tech-12, intelligence-10)
nn(tech-12, Human-11)
dobj(implies-9, tech-12)

(ROOT
  (S
    (VP
      (VP (VBZ varies)
        (PP (IN in)
          (NP
            (NP (NN level))
            (PP (IN of)
              (NP (JJ organizational) (NN complexity))))))
      (, ,)
      (CC but)
      (VP (VBZ is)
        (ADVP (RB wholly))
        (VP (VBN caused)
          (PP (IN by)
            (NP (JJ intelligent) (NN action)))
          (PP (IN upon)
            (NP (NN matter))))))
    (. .)))

root(ROOT-0, varies-1)
prep_in(varies-1, level-3)
amod(complexity-6, organizational-5)
prep_of(level-3, complexity-6)
auxpass(caused-11, is-9)
advmod(caused-11, wholly-10)
conj_but(varies-1, caused-11)
amod(action-14, intelligent-13)
agent(caused-11, action-14)
prep_upon(caused-11, matter-16)

(ROOT
  (S
    (NP
      (NP (DT This) (NN organization))
      (PRN (-LRB- -LRB-)
        (NP (NN design))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (VP (VBN inferred)
        (PP (IN because)
          (NP
            (NP (DT the) (NN arrangement))
            (PP (IN of)
              (NP (JJ such) (NN matter) (NNS defies) (NN explanation)))))
        (S
          (VP (VBG appealing)
            (PP (TO to)
              (NP (NN chance)))))))
    (. .)))

det(organization-2, This-1)
nsubjpass(inferred-7, organization-2)
appos(organization-2, design-4)
auxpass(inferred-7, is-6)
root(ROOT-0, inferred-7)
det(arrangement-10, the-9)
prep_because(inferred-7, arrangement-10)
amod(explanation-15, such-12)
nn(explanation-15, matter-13)
nn(explanation-15, defies-14)
prep_of(arrangement-10, explanation-15)
xcomp(inferred-7, appealing-16)
prep_to(appealing-16, chance-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS calculations))
      (PP (IN on)
        (NP (NN flagellum))))
    (VP
      (VP (VBP are)
        (ADJP (JJ irrelevant)))
      (, ,)
      (CC but)
      (VP (MD can)
        (VP (VB be)
          (VP (VBN derived)
            (PP (VBN given)
              (NP
                (NP
                  (ADJP (JJ accurate))
                  (NN input) (NNS points))
                (SBAR
                  (WHNP
                    (WHNP (WRB how) (JJ many))
                    (PP (IN of)
                      (NP (DT each) (JJ different) (NNS proteins))))
                  (S
                    (VP (VBP are)
                      (VP (VBN needed)))))))))))
    (. ?)))

det(calculations-2, The-1)
nsubj(irrelevant-6, calculations-2)
nsubjpass(derived-11, calculations-2)
prep_on(calculations-2, flagellum-4)
cop(irrelevant-6, are-5)
root(ROOT-0, irrelevant-6)
aux(derived-11, can-9)
auxpass(derived-11, be-10)
conj_but(irrelevant-6, derived-11)
prep(derived-11, given-12)
amod(points-15, accurate-13)
nn(points-15, input-14)
dep(given-12, points-15)
advmod(many-17, how-16)
nsubjpass(needed-23, many-17)
det(proteins-21, each-19)
amod(proteins-21, different-20)
prep_of(many-17, proteins-21)
auxpass(needed-23, are-22)
rcmod(points-15, needed-23)

(ROOT
  (SBARQ
    (WHNP (WDT Which) (NN components))
    (SQ (VBP are)
      (VP (VBN required)
        (PP (IN for)
          (NP (PRP it)))
        (PP (TO to)
          (NP
            (NP
              (NP (NN function))
              (ADJP (RB as) (VBN needed)))
            (PRN (-LRB- -LRB-)
              (VP (VBN ie)
                (PRN (, ,)
                  (SBAR (IN if)
                    (S
                      (NP (DT the) (NN cell))
                      (VP (VBZ needs)
                        (S
                          (VP (TO to)
                            (VP (VB move)
                              (S
                                (VP (TO to)
                                  (VP (VB survive))))))))))
                  (, ,))
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (JJ functional) (NNS parts))
                    (VP (VBP are)
                      (VP (VBN needed))))))
              (-RRB- -RRB-))))
        (, ,)
        (SBAR
          (WHADJP (WRB how) (JJ many))
          (S
            (NP (NNS nucleotides))
            (VP (VBP are)
              (VP (VBN needed)
                (S
                  (VP (TO to)
                    (VP (VB code)
                      (NP
                        (NP (DT the) (NNP RNA) (NN template))
                        (PP (IN of)
                          (NP (DT each) (NN protein)))))))))))))
    (. ?)))

det(components-2, Which-1)
nsubjpass(required-4, components-2)
auxpass(required-4, are-3)
root(ROOT-0, required-4)
prep_for(required-4, it-6)
prep_to(required-4, function-8)
advmod(needed-10, as-9)
amod(function-8, needed-10)
dep(function-8, ie-12)
mark(needs-17, if-14)
det(cell-16, the-15)
nsubj(needs-17, cell-16)
xsubj(move-19, cell-16)
parataxis(ie-12, needs-17)
aux(move-19, to-18)
xcomp(needs-17, move-19)
aux(survive-21, to-20)
xcomp(move-19, survive-21)
dobj(needed-27, what-23)
amod(parts-25, functional-24)
nsubjpass(needed-27, parts-25)
auxpass(needed-27, are-26)
ccomp(ie-12, needed-27)
advmod(many-31, how-30)
dep(needed-34, many-31)
nsubjpass(needed-34, nucleotides-32)
xsubj(code-36, nucleotides-32)
auxpass(needed-34, are-33)
ccomp(required-4, needed-34)
aux(code-36, to-35)
xcomp(needed-34, code-36)
det(template-39, the-37)
nn(template-39, RNA-38)
dobj(code-36, template-39)
det(protein-42, each-41)
prep_of(template-39, protein-42)

(ROOT
  (S
    (NP (CC And))
    (ADJP (RB so))
    (PP (IN on))
    (: ...)))

dep(so-2, And-1)
root(ROOT-0, so-2)
dep(so-2, on-3)

(ROOT
  (S
    (NP
      (NP (DT The) (NN lack))
      (PP (IN of)
        (NP (NN evidence) (JJ supporting) (JJ materialist) (NNS assumptions) (NN complexity))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN chance) (NN arrangement))
        (SBAR
          (S
            (VP (VBZ means)
              (SBAR
                (S
                  (NP (DT the) (NN opposite))
                  (VP (MD could)
                    (VP (VB be)
                      (ADJP (JJ true)))))))))))
    (. .)))

det(lack-2, The-1)
nsubj(arrangement-12, lack-2)
nn(complexity-8, evidence-4)
amod(complexity-8, supporting-5)
amod(complexity-8, materialist-6)
nn(complexity-8, assumptions-7)
prep_of(lack-2, complexity-8)
cop(arrangement-12, is-9)
det(arrangement-12, a-10)
nn(arrangement-12, chance-11)
root(ROOT-0, arrangement-12)
rcmod(arrangement-12, means-13)
det(opposite-15, the-14)
nsubj(true-18, opposite-15)
aux(true-18, could-16)
cop(true-18, be-17)
ccomp(means-13, true-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (NNP PvM))
          (VP (MD may)
            (VP (VB be)
              (VP (VBG conflating)
                (NP (`` ``) (NN science) ('' ''))
                (PP (IN with) (`` ``)
                  (NP (NN evidence) (JJ supporting) (NN materialist) (NNS assumptions))
                  ('' ''))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(conflating-6, PvM-3)
aux(conflating-6, may-4)
aux(conflating-6, be-5)
ccomp(think-2, conflating-6)
dobj(conflating-6, science-8)
nn(assumptions-15, evidence-12)
amod(assumptions-15, supporting-13)
nn(assumptions-15, materialist-14)
prep_with(conflating-6, assumptions-15)

(ROOT
  (S
    (NP
      (NP (DT That) (JJ many))
      (PP (IN of)
        (NP (DT these) (NNS systems))))
    (VP (VBP look)
      (SBAR
        (SBAR
          (S
            (VP (VBN designed))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (NN science))
            (VP (VBZ has) (RB not)
              (VP
                (PRN (-LRB- -LRB-)
                  (ADVP (RB even) (RB remotely))
                  (-RRB- -RRB-))
                (VBN demonstrated)))))))
    (NP
      (NP (DT a) (NN chance) (NN pathway))
      (PP (TO to)
        (NP (JJ such) (NN organization))))
    (, ,)
    (S
      (VP (VBZ leaves)
        (NP (NN design))
        (PP (IN as)
          (NP (DT the) (JJ logical) (NN alternative)))))
    (. .)))

det(many-2, That-1)
nsubj(look-6, many-2)
det(systems-5, these-4)
prep_of(many-2, systems-5)
root(ROOT-0, look-6)
ccomp(look-6, designed-7)
complm(demonstrated-17, that-9)
nsubj(demonstrated-17, science-10)
aux(demonstrated-17, has-11)
neg(demonstrated-17, not-12)
advmod(remotely-15, even-14)
dep(demonstrated-17, remotely-15)
ccomp(look-6, demonstrated-17)
conj_and(designed-7, demonstrated-17)
det(pathway-20, a-18)
nn(pathway-20, chance-19)
dep(look-6, pathway-20)
amod(organization-23, such-22)
prep_to(pathway-20, organization-23)
ccomp(look-6, leaves-25)
dobj(leaves-25, design-26)
det(alternative-30, the-28)
amod(alternative-30, logical-29)
prep_as(leaves-25, alternative-30)

(ROOT
  (S
    (NP (NNP Until))
    (VP (VBN proven)
      (ADVP (RB otherwise)))
    (. .)))

nsubj(proven-2, Until-1)
root(ROOT-0, proven-2)
advmod(proven-2, otherwise-3)

(ROOT
  (S
    (NP (DT The) (JJ above) (NN statement))
    (VP (VBZ is)
      (ADJP (JJ true)
        (PP (IN with)
          (NP (DT this) (NN substitution)))))
    (. .)))

det(statement-3, The-1)
amod(statement-3, above-2)
nsubj(true-5, statement-3)
cop(true-5, is-4)
root(ROOT-0, true-5)
det(substitution-8, this-7)
prep_with(true-5, substitution-8)

(ROOT
  (S
    (S
      (NP (NNP PvM))
      (: --)
      (ADVP (RB |))
      (NP (DT That))
      (VP (VBZ is)
        (ADJP (JJ incorrect))
        (ADVP (RB as) (RB well))
        (, ,)
        (SBAR (IN in)
          (S
            (NP
              (NP (NN fact))
              (PP (IN in)
                (NP (NNP ID))))
            (VP (VBP speak))))))
    (, ,)
    (NP (JJ |) (NN complex))
    (VP (VBZ means) (`` ``)
      (S
        (VP (VBG lacking)
          (NP
            (NP
              (NP (JJ scientific) (NNS explanations) ('' ''))
              (, ,)
              (ADVP
                (NP (CD |) (NN nothing))
                (RBR more))
              (, ,))
            (ADJP (NN nothing) (JJR less))))))
    (. .)))

nsubj(incorrect-6, PvM-1)
advmod(incorrect-6, |-3)
nsubj(incorrect-6, That-4)
cop(incorrect-6, is-5)
ccomp(means-18, incorrect-6)
advmod(well-8, as-7)
mwe(well-8, as-7)
advmod(incorrect-6, well-8)
mark(speak-14, in-10)
nsubj(speak-14, fact-11)
prep_in(fact-11, ID-13)
advcl(incorrect-6, speak-14)
amod(complex-17, |-16)
nsubj(means-18, complex-17)
root(ROOT-0, means-18)
xcomp(means-18, lacking-20)
amod(explanations-22, scientific-21)
dobj(lacking-20, explanations-22)
num(nothing-26, |-25)
npadvmod(more-27, nothing-26)
advmod(explanations-22, more-27)
amod(explanations-22, nothing-29)
dep(nothing-29, less-30)

(ROOT
  (SINV
    (S
      (PP (IN From)
        (NP (DT this)))
      (, ,)
      (NP (NNP ID) (NNS conflates))
      (VP (VBD |)
        (NP
          (NP (DT the) (NN meaning))
          (PP (IN of)
            (NP (NN complexity))))
        (PP (IN with)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP one))
              (VP (VBZ has)
                (ADVP (RB |))
                (VP (VBN come)
                  (S
                    (VP (TO to)
                      (VP (VB understand)
                        (PP (IN as)
                          (NP
                            (NP (NN complexity))
                            (PP (IN in)
                              (NP (NN science)))))))))))))))
    (, ,)
    (VP (VBD |)
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ is) (RB not)
            (PP
              (NP (DT the) (JJ same))
              (IN as)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (NNP ID))
                  (VP (`` ``) (VBZ defines) ('' '')))))))))
    (NP (PRP it))
    (. .)))

prep_from(|-6, this-2)
nn(conflates-5, ID-4)
nsubj(|-6, conflates-5)
ccomp(|-24, |-6)
det(meaning-8, the-7)
dobj(|-6, meaning-8)
prep_of(meaning-8, complexity-10)
dobj(come-16, what-12)
nsubj(come-16, one-13)
xsubj(understand-18, one-13)
aux(come-16, has-14)
advmod(come-16, |-15)
prepc_with(|-6, come-16)
aux(understand-18, to-17)
xcomp(come-16, understand-18)
prep_as(understand-18, complexity-20)
prep_in(complexity-20, science-22)
root(ROOT-0, |-24)
nsubj(is-26, which-25)
ccomp(|-24, is-26)
neg(is-26, not-27)
det(same-29, the-28)
npadvmod(is-26, same-29)
advmod(defines-34, how-31)
nsubj(defines-34, ID-32)
prepc_as(is-26, defines-34)
nsubj(|-24, it-36)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (DT a) (NN citation))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ nice))))
    (. .)))

advmod(nice-7, Again-1)
det(citation-4, a-3)
nsubj(nice-7, citation-4)
aux(nice-7, would-5)
cop(nice-7, be-6)
root(ROOT-0, nice-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB expect)
        (S
          (NP (PRP them))
          (VP (VBG considering)
            (NP
              (NP
                (NP (NNP PvM) (POS 's))
                (JJ continued) (NN conflation))
              (PP (IN of)
                (NP (`` ``) (NN science) ('' ''))))
            (PP (IN with) (`` ``)
              (NP (NN evidence) (JJ supporting) (NN materialist) (NNS assumptions))
              ('' ''))))))
    (. .)))

nsubj(expect-4, I-1)
aux(expect-4, do-2)
neg(expect-4, n't-3)
root(ROOT-0, expect-4)
nsubj(considering-6, them-5)
dep(expect-4, considering-6)
poss(conflation-10, PvM-7)
amod(conflation-10, continued-9)
dobj(considering-6, conflation-10)
prep_of(conflation-10, science-13)
nn(assumptions-20, evidence-17)
amod(assumptions-20, supporting-18)
nn(assumptions-20, materialist-19)
prep_with(considering-6, assumptions-20)

(ROOT
  (S
    (S
      (NP (NNP ID))
      (VP (VBZ does)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (NN complexity))
              (ADVP (RB alone))
              (VP (VBZ is) (RB n't)
                (NP
                  (NP (DT a) (NN sign))
                  (PP (IN of)
                    (NP (NN intelligence))))))))))
    (, ,)
    (CC but)
    (S
      (NP (JJ irreducible) (NN complexity))
      (VP (VBZ is)))
    (. .)))

nsubj(say-3, ID-1)
aux(say-3, does-2)
root(ROOT-0, say-3)
complm(sign-10, that-4)
nsubj(sign-10, complexity-5)
advmod(sign-10, alone-6)
cop(sign-10, is-7)
neg(sign-10, n't-8)
det(sign-10, a-9)
ccomp(say-3, sign-10)
prep_of(sign-10, intelligence-12)
amod(complexity-16, irreducible-15)
nsubj(is-17, complexity-16)
conj_but(say-3, is-17)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NNS criteria))
        (VP (VBP have)
          (VP (VBN been)
            (VP (VBN revised)
              (PP (IN over)
                (NP (DT the) (NNS years)))
              (S
                (VP (TO to)
                  (VP (VB clarify))))))))
      (, ,)
      (CC but)
      (S
        (NP (DT the) (NN core) (NN idea))
        (VP (VBZ is)
          (ADJP (JJ sound)))))
    (: :)
    (S
      (NP
        (NP (DT A) (JJ complex) (NN system))
        (PP (IN with)
          (NP (JJ inter-dependent) (NNS parts))))
      (VP (VBZ has)
        (NP
          (NP (DT a)
            (ADJP (RB much) (JJR higher))
            (JJ probabilistic) (NN hurdle))
          (PP (IN for)
            (NP (JJ spontaneous) (JJ unguided) (NN assembly))))))
    (. .)))

det(criteria-2, The-1)
nsubjpass(revised-5, criteria-2)
xsubj(clarify-10, criteria-2)
aux(revised-5, have-3)
auxpass(revised-5, been-4)
root(ROOT-0, revised-5)
det(years-8, the-7)
prep_over(revised-5, years-8)
aux(clarify-10, to-9)
xcomp(revised-5, clarify-10)
det(idea-15, the-13)
nn(idea-15, core-14)
nsubj(sound-17, idea-15)
cop(sound-17, is-16)
conj_but(revised-5, sound-17)
det(system-21, A-19)
amod(system-21, complex-20)
nsubj(has-25, system-21)
amod(parts-24, inter-dependent-23)
prep_with(system-21, parts-24)
parataxis(revised-5, has-25)
det(hurdle-30, a-26)
advmod(higher-28, much-27)
amod(hurdle-30, higher-28)
amod(hurdle-30, probabilistic-29)
dobj(has-25, hurdle-30)
amod(assembly-34, spontaneous-32)
amod(assembly-34, unguided-33)
prep_for(hurdle-30, assembly-34)

