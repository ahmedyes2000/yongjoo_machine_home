(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (ADVP (RB also))
      (VP (VB be)
        (ADJP (JJ remiss)
          (PP (IN in)
            (S (RB not)
              (VP (VBG pointing)
                (PRT (RP out))
                (SBAR (IN that) (IN if)
                  (S
                    (NP (NN someone))
                    (VP (VBZ is)
                      (VP (VBN dissatisfied)
                        (PP (IN with)
                          (NP
                            (NP (PRP$ their) (NN life))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBZ does) (RB not)
                                  (ADVP (RB somehow))
                                  (VP (VB prove)
                                    (SBAR (IN that)
                                      (S
                                        (NP (EX there))
                                        (VP (VBZ is)
                                          (NP
                                            (NP (NN something))
                                            (SBAR
                                              (S (`` ``)
                                                (NP (RBR more))
                                                ('' '')
                                                (VP (VBZ \/) (`` ``)
                                                  (NP (CD 5)))))))))))))))))))))))))
    (. .)))

nsubj(remiss-5, I-1)
aux(remiss-5, 'd-2)
advmod(remiss-5, also-3)
cop(remiss-5, be-4)
root(ROOT-0, remiss-5)
neg(pointing-8, not-7)
prepc_in(remiss-5, pointing-8)
prt(pointing-8, out-9)
complm(dissatisfied-14, that-10)
dep(dissatisfied-14, if-11)
nsubjpass(dissatisfied-14, someone-12)
auxpass(dissatisfied-14, is-13)
ccomp(pointing-8, dissatisfied-14)
poss(life-17, their-16)
prep_with(dissatisfied-14, life-17)
nsubj(prove-22, life-17)
aux(prove-22, does-19)
neg(prove-22, not-20)
advmod(prove-22, somehow-21)
rcmod(life-17, prove-22)
complm(is-25, that-23)
expl(is-25, there-24)
ccomp(prove-22, is-25)
nsubj(is-25, something-26)
nsubj(\/-30, more-28)
rcmod(something-26, \/-30)
dobj(\/-30, 5-32)

