(ROOT
  (S
    (NP
      (NP (DT The) (NN idea))
      (SBAR (IN that)
        (S
          (NP (NNS creationists))
          (VP (VBP reject)
            (NP
              (NP (NN mutation))
              (CC or)
              (NP (JJ natural) (NN selection)))))))
    (VP (VBZ is)
      (ADJP (JJ ridiculous)))
    (. .)))

det(idea-2, The-1)
nsubj(ridiculous-11, idea-2)
complm(reject-5, that-3)
nsubj(reject-5, creationists-4)
dep(idea-2, reject-5)
dobj(reject-5, mutation-6)
amod(selection-9, natural-8)
dobj(reject-5, selection-9)
conj_or(mutation-6, selection-9)
cop(ridiculous-11, is-10)
root(ROOT-0, ridiculous-11)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are)
      (NP (JJ observable) (NNS facts)))
    (. .)))

nsubj(facts-4, These-1)
cop(facts-4, are-2)
amod(facts-4, observable-3)
root(ROOT-0, facts-4)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (NNS creationists))
        (VP (VBP defend))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN idea))
        (SBAR
          (SBAR (IN that)
            (S
              (NP (DT these) (NNS changes))
              (VP (MD can) (RB not)
                (VP (VB create)
                  (NP (JJ new) (NNS species))))))
          (, ,)
          (CC and)
          (SBAR (IN as)
            (S
              (NP
                (NP (DT a) (NN result))
                (, ,)
                (NP (DT a) (NN design))
                (, ,)
                (NP (DT a) (NN designer))
                (, ,)
                (CC and)
                (NP (DT a) (NN creator)))
              (VP (VBZ is)
                (ADJP (JJ necessary))))))))
    (. .)))

dobj(defend-3, What-1)
nsubj(defend-3, creationists-2)
csubj(idea-6, defend-3)
cop(idea-6, is-4)
det(idea-6, the-5)
root(ROOT-0, idea-6)
dep(create-12, that-7)
det(changes-9, these-8)
nsubj(create-12, changes-9)
aux(create-12, can-10)
neg(create-12, not-11)
dep(idea-6, create-12)
amod(species-14, new-13)
dobj(create-12, species-14)
mark(necessary-31, as-17)
det(result-19, a-18)
nsubj(necessary-31, result-19)
det(design-22, a-21)
conj_and(result-19, design-22)
nsubj(necessary-31, design-22)
det(designer-25, a-24)
conj_and(result-19, designer-25)
nsubj(necessary-31, designer-25)
det(creator-29, a-28)
conj_and(result-19, creator-29)
nsubj(necessary-31, creator-29)
cop(necessary-31, is-30)
dep(idea-6, necessary-31)
conj_and(create-12, necessary-31)

(ROOT
  (S
    (ADVP (RB Furthermore))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (NNS schools))
        (VP (VBP do) (RB not)
          (VP (VB teach)
            (NP (VBG competing) (NNS theories))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ comparable)
        (PP (TO to)
          (S
            (VP (VBG teaching)
              (SBAR
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP (DT no) (JJ alien) (NN life))))))))))
    (. .)))

advmod(comparable-13, Furthermore-1)
mark(teach-7, if-3)
nsubj(teach-7, schools-4)
aux(teach-7, do-5)
neg(teach-7, not-6)
advcl(comparable-13, teach-7)
amod(theories-9, competing-8)
dobj(teach-7, theories-9)
nsubj(comparable-13, it-11)
cop(comparable-13, is-12)
root(ROOT-0, comparable-13)
prepc_to(comparable-13, teaching-15)
expl(is-17, there-16)
ccomp(teaching-15, is-17)
det(life-20, no-18)
amod(life-20, alien-19)
nsubj(is-17, life-20)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP (VBN proven)
            (CC or)
            (VBN demonstrated) (, ,)
            (ADVP (RB however))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB seem)
        (SBAR (IN that)
          (S
            (SBAR (IN if)
              (S
                (NP (DT that))
                (VP (VBP fit)
                  (PP (IN in) (IN with)
                    (NP
                      (NP (PRP$ their) (NN theory))
                      (PP (IN for)
                        (NP
                          (NP (DT the) (NN rest))
                          (PP (IN of)
                            (NP (NN biology))))))))))
            (, ,)
            (NP (DT the) (NNS evolutionists))
            (VP (MD would)
              (VP (VB teach)
                (NP (PRP it))
                (PP (IN without)
                  (NP (NN question)))))))))
    (. .)))

nsubjpass(proven-5, This-1)
nsubjpass(demonstrated-7, This-1)
aux(proven-5, can-2)
neg(proven-5, not-3)
auxpass(proven-5, be-4)
ccomp(seem-13, proven-5)
conj_or(proven-5, demonstrated-7)
ccomp(seem-13, demonstrated-7)
advmod(proven-5, however-9)
conj_or(proven-5, however-9)
ccomp(seem-13, however-9)
nsubj(seem-13, it-11)
aux(seem-13, would-12)
root(ROOT-0, seem-13)
complm(teach-31, that-14)
mark(fit-17, if-15)
nsubj(fit-17, that-16)
advcl(teach-31, fit-17)
dep(fit-17, in-18)
poss(theory-21, their-20)
prep_with(fit-17, theory-21)
det(rest-24, the-23)
prep_for(theory-21, rest-24)
prep_of(rest-24, biology-26)
det(evolutionists-29, the-28)
nsubj(teach-31, evolutionists-29)
aux(teach-31, would-30)
ccomp(seem-13, teach-31)
dobj(teach-31, it-32)
prep_without(teach-31, question-34)

