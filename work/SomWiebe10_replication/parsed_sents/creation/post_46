(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (ADVP (RB ultimately))
      (VP (VBN based)
        (PP (IN on)
          (NP
            (NP (DT the) (JJ scientific) (NN method))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (VP (VBN used)
                    (S
                      (VP (TO to)
                        (VP (VB support)
                          (CC and)
                          (VB confirm)
                          (NP
                            (ADJP (NN physical)
                              (CC and)
                              (NN chemical))
                            (NNS laws)))))))))))))
    (. .)))

nsubjpass(based-4, Science-1)
auxpass(based-4, is-2)
advmod(based-4, ultimately-3)
root(ROOT-0, based-4)
det(method-8, the-6)
amod(method-8, scientific-7)
prep_on(based-4, method-8)
nsubjpass(used-12, method-8)
auxpass(used-12, is-11)
rcmod(method-8, used-12)
aux(support-14, to-13)
xcomp(used-12, support-14)
xcomp(used-12, confirm-16)
conj_and(support-14, confirm-16)
amod(laws-20, physical-17)
conj_and(physical-17, chemical-19)
amod(laws-20, chemical-19)
dobj(support-14, laws-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN application))
        (PP (IN of)
          (NP
            (NP (DT those) (NNS laws))
            (PP (TO to)
              (NP
                (NP
                  (NP (DT the) (NN past))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ makes)
                        (S
                          (NP (JJ natural) (NN history))
                          (ADJP (JJ possible)))))))
                (CC and)
                (NP
                  (NP (DT the) (NN application))
                  (PP (IN of)
                    (NP
                      (NP (DT those) (JJ same) (NNS laws))
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN future))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBZ makes)
                                (S
                                  (NP (PRP it))
                                  (ADJP (JJ possible)
                                    (S
                                      (VP (TO to)
                                        (VP (VB make)
                                          (NP (NNS predictions)))))))))))))))))))))
    (. .)))

nsubj(application-4, It-1)
cop(application-4, is-2)
det(application-4, the-3)
root(ROOT-0, application-4)
det(laws-7, those-6)
prep_of(application-4, laws-7)
det(past-10, the-9)
prep_to(laws-7, past-10)
nsubj(makes-12, past-10)
rcmod(past-10, makes-12)
amod(history-14, natural-13)
nsubj(possible-15, history-14)
xcomp(makes-12, possible-15)
det(application-18, the-17)
prep_to(laws-7, application-18)
conj_and(past-10, application-18)
nsubj(makes-12, application-18)
det(laws-22, those-20)
amod(laws-22, same-21)
prep_of(application-18, laws-22)
det(future-25, the-24)
prep_to(laws-22, future-25)
nsubj(makes-27, future-25)
rcmod(future-25, makes-27)
nsubj(possible-29, it-28)
xcomp(makes-27, possible-29)
aux(make-31, to-30)
xcomp(possible-29, make-31)
dobj(make-31, predictions-32)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJ theology))
        (, ,)
        (ADJP (NN nothing) (JJR more))))
    (. .)))

nsubj(theology-3, It-1)
cop(theology-3, is-2)
root(ROOT-0, theology-3)
dep(theology-3, nothing-5)
dep(nothing-5, more-6)

(ROOT
  (S
    (NP (DT The) (NN question))
    (VP (VBZ is) (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (ADJP (NN physical)
              (CC and)
              (NN chemical))
            (NNS laws))
          (VP (VBP are)
            (PP (IN in)
              (NP
                (NP (NN play))
                (PP (IN in)
                  (NP (NNP Intelligent) (NNP Design)))))))))
    (. ?)))

det(question-2, The-1)
nsubj(is-3, question-2)
root(ROOT-0, is-3)
dobj(are-10, what-5)
amod(laws-9, physical-6)
conj_and(physical-6, chemical-8)
amod(laws-9, chemical-8)
nsubj(are-10, laws-9)
ccomp(is-3, are-10)
prep_in(are-10, play-12)
nn(Design-15, Intelligent-14)
prep_in(play-12, Design-15)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP know)
        (SBAR
          (S
            (NP (NN evolution))
            (VP (VBZ is)
              (ADJP (JJ scientific))
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBZ does) (RB not)
                    (VP (VB contradict)
                      (NP (DT any) (JJ scientific) (NNS laws)))))))))))
    (PRN (, ,)
      (S
        (NP (PRP we))
        (VP (MD can)
          (VP (VB make)
            (NP (NNS predictions))
            (PP (VBN based)
              (PP (IN on)
                (NP (JJ evolutionary) (NN theory)))))))
      (, ,))
    (CC and)
    (S
      (NP (PRP we))
      (VP (MD can)
        (VP (VB falsify)
          (NP (PRP it))
          (PP (IN by)
            (S
              (VP (VBG finding)
                (NP
                  (NP (DT a) (JJ possible) (NN mechanism))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD would)
                        (VP (VB prevent)
                          (NP (NNS mutations))
                          (PP (IN from)
                            (S
                              (VP
                                (VP (VBG accumulating)
                                  (PP (IN beyond)
                                    (NP (DT a) (JJ certain) (NN limit))))
                                (, ,)
                                (VP (VBG making)
                                  (NP (NN evolution))
                                  (PP (IN beyond)
                                    (NP
                                      (NP (DT the) (NNS limits))
                                      (PP (IN of)
                                        (NP
                                          (NP (DT a) (`` ``)
                                            (ADJP (VBN created))
                                            (NN kind) ('' ''))
                                          (ADJP (JJ impossible)))))))))))))))))))))
    (. .)))

nsubj(know-2, We-1)
root(ROOT-0, know-2)
nsubj(scientific-5, evolution-3)
cop(scientific-5, is-4)
ccomp(know-2, scientific-5)
mark(contradict-10, because-6)
nsubj(contradict-10, it-7)
aux(contradict-10, does-8)
neg(contradict-10, not-9)
advcl(scientific-5, contradict-10)
det(laws-13, any-11)
amod(laws-13, scientific-12)
dobj(contradict-10, laws-13)
nsubj(make-17, we-15)
aux(make-17, can-16)
dep(know-2, make-17)
dobj(make-17, predictions-18)
prepc_based_on(make-17, on-20)
amod(theory-22, evolutionary-21)
pobj(make-17, theory-22)
nsubj(falsify-27, we-25)
aux(falsify-27, can-26)
conj_and(know-2, falsify-27)
dobj(falsify-27, it-28)
prepc_by(falsify-27, finding-30)
det(mechanism-33, a-31)
amod(mechanism-33, possible-32)
dobj(finding-30, mechanism-33)
nsubj(prevent-36, mechanism-33)
aux(prevent-36, would-35)
rcmod(mechanism-33, prevent-36)
dobj(prevent-36, mutations-37)
prepc_from(prevent-36, accumulating-39)
det(limit-43, a-41)
amod(limit-43, certain-42)
prep_beyond(accumulating-39, limit-43)
dep(accumulating-39, making-45)
dobj(making-45, evolution-46)
det(limits-49, the-48)
prep_beyond(making-45, limits-49)
det(kind-54, a-51)
amod(kind-54, created-53)
prep_of(limits-49, kind-54)
amod(kind-54, impossible-56)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP have)
      (VP (VBN found)
        (NP (DT no) (JJ such) (NN thing)))
      (, ,)
      (ADVP (RB ever)))
    (. .)))

cc(found-4, But-1)
nsubj(found-4, we-2)
aux(found-4, have-3)
root(ROOT-0, found-4)
det(thing-7, no-5)
amod(thing-7, such-6)
dobj(found-4, thing-7)
advmod(found-4, ever-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can) (RB not)
      (VP (VB test)
        (S
          (VP (TO to)
            (VP (VB see)
              (SBAR (IN if)
                (S
                  (NP
                    (NP (NN something))
                    (PP (IN in)
                      (NP (NN biology))))
                  (VP (VBZ is)
                    (ADJP (`` ``)
                      (ADVP (RB intelligently))
                      (VBN designed) ('' '')
                      (PP (IN by)
                        (NP
                          (NP (NN reference))
                          (PP (TO to)
                            (NP (JJ scientific) (NNS laws))))))))))))))
    (. .)))

nsubj(test-4, You-1)
xsubj(see-6, You-1)
aux(test-4, can-2)
neg(test-4, not-3)
root(ROOT-0, test-4)
aux(see-6, to-5)
xcomp(test-4, see-6)
mark(designed-14, if-7)
nsubjpass(designed-14, something-8)
prep_in(something-8, biology-10)
auxpass(designed-14, is-11)
advmod(designed-14, intelligently-13)
advcl(see-6, designed-14)
agent(designed-14, reference-17)
amod(laws-20, scientific-19)
prep_to(reference-17, laws-20)

(ROOT
  (S
    (S
      (ADVP (RB Instead))
      (, ,)
      (NP (PRP you))
      (VP (MD would)
        (VP (VB ASSUME)
          (SBAR
            (S
              (NP (NN something))
              (VP (VBZ is)
                (VP (VBN designed)
                  (SBAR (RB just) (IN because)
                    (S
                      (NP (PRP it))
                      (VP (VBZ looks)
                        (ADJP (JJ complex)
                          (CC and)
                          (JJ specific))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (JJ such) (NN complexity))
      (VP (VBZ is)
        (ADVP (RB indeed))
        (ADJP (JJ possible)
          (PP (IN via)
            (NP (JJ natural) (NN selection))))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (JJ complex) (NNS organisms))
            (VP (MD may)
              (VP (VB have)
                (NP
                  (NP (NN survival) (NN value))
                  (PP (IN over)
                    (NP
                      (ADJP (RBR less) (JJ complex))
                      (NNS organisms))))))))))
    (. .)))

advmod(ASSUME-5, Instead-1)
nsubj(ASSUME-5, you-3)
aux(ASSUME-5, would-4)
root(ROOT-0, ASSUME-5)
nsubjpass(designed-8, something-6)
auxpass(designed-8, is-7)
ccomp(ASSUME-5, designed-8)
advmod(looks-12, just-9)
dep(looks-12, because-10)
nsubj(looks-12, it-11)
ccomp(designed-8, looks-12)
acomp(looks-12, complex-13)
acomp(looks-12, specific-15)
conj_and(complex-13, specific-15)
amod(complexity-19, such-18)
nsubj(possible-22, complexity-19)
cop(possible-22, is-20)
advmod(possible-22, indeed-21)
conj_but(ASSUME-5, possible-22)
amod(selection-25, natural-24)
prep_via(possible-22, selection-25)
mark(have-31, because-27)
amod(organisms-29, complex-28)
nsubj(have-31, organisms-29)
aux(have-31, may-30)
advcl(possible-22, have-31)
nn(value-33, survival-32)
dobj(have-31, value-33)
advmod(complex-36, less-35)
amod(organisms-37, complex-36)
prep_over(value-33, organisms-37)

(ROOT
  (S
    (S
      (NP (NNP DNA) (, ,) (NNP RNA) (, ,)
        (CC and)
        (NNP proteins))
      (VP (VBP are)
        (NP
          (NP (NNS polymers))
          (, ,)
          (NP
            (NP (NNS molecules))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (VP (VBN made)
                    (PP (IN of)
                      (S
                        (VP (VBG repeating)
                          (NP (NNS parts)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD can)
        (ADVP (RB actually))
        (VP (VB be)
          (PP (IN of)
            (NP (JJ unlimited) (NN length)))
          (, ,)
          (SBAR (IN so)
            (S
              (NP (PRP$ their) (NN complexity))
              (VP (VBZ is)
                (ADVP (RB also))
                (ADJP (JJ unlimited))))))))
    (. .)))

nsubj(polymers-8, DNA-1)
conj_and(DNA-1, RNA-3)
nsubj(polymers-8, RNA-3)
conj_and(DNA-1, proteins-6)
nsubj(polymers-8, proteins-6)
cop(polymers-8, are-7)
root(ROOT-0, polymers-8)
appos(polymers-8, molecules-10)
nsubjpass(made-13, molecules-10)
auxpass(made-13, are-12)
rcmod(molecules-10, made-13)
prepc_of(made-13, repeating-15)
dobj(repeating-15, parts-16)
nsubj(be-22, they-19)
aux(be-22, can-20)
advmod(be-22, actually-21)
conj_and(polymers-8, be-22)
amod(length-25, unlimited-24)
prep_of(be-22, length-25)
mark(unlimited-32, so-27)
poss(complexity-29, their-28)
nsubj(unlimited-32, complexity-29)
cop(unlimited-32, is-30)
advmod(unlimited-32, also-31)
advcl(be-22, unlimited-32)

(ROOT
  (S
    (PP (IN In)
      (ADJP (JJ short)))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT NO) (NN evidence))
        (PP (IN for)
          (NP (NNP Intelligent) (NNP Design)))))
    (. .)))

prep_in(is-5, short-2)
expl(is-5, there-4)
root(ROOT-0, is-5)
det(evidence-7, NO-6)
nsubj(is-5, evidence-7)
nn(Design-10, Intelligent-9)
prep_for(evidence-7, Design-10)

(ROOT
  (NP (NN None) (. .)))

root(ROOT-0, None-1)

