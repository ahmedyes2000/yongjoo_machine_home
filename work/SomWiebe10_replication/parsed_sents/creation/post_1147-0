(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (ADVP (RB really))
        (NP (DT no) (NN way))
        (S (RB yet)
          (VP (TO to)
            (VP (VB prove)
              (NP (PRP it)))))))
    (, ,)
    (ADVP (RB BUT))
    (S
      (NP
        (NP (DT the) (NN precedence))
        (PP (IN of)
          (NP
            (NP (DT the) (NN evolution))
            (PP (IN of)
              (NP
                (NP (DT all) (JJ other) (NN species))
                (PP (VBG including)
                  (NP (PRP$ our) (JJ own))))))))
      (VP (VBZ has)
        (VP (VBN led)
          (PP (TO to)
            (NP (DT a) (NN conclusion)))
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (VBD MOST)
                (SBAR
                  (S
                    (NP (NNP LIKELY))
                    (VP (VBD came)
                      (PP (IN from)
                        (NP (NN something) (RB else))))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
advmod('s-2, really-3)
det(way-5, no-4)
nsubj('s-2, way-5)
advmod(prove-8, yet-6)
aux(prove-8, to-7)
xcomp('s-2, prove-8)
dobj(prove-8, it-9)
advmod('s-2, BUT-11)
det(precedence-13, the-12)
nsubj(led-25, precedence-13)
det(evolution-16, the-15)
prep_of(precedence-13, evolution-16)
det(species-20, all-18)
amod(species-20, other-19)
prep_of(evolution-16, species-20)
poss(own-23, our-22)
prep_including(species-20, own-23)
aux(led-25, has-24)
ccomp('s-2, led-25)
det(conclusion-28, a-27)
prep_to(led-25, conclusion-28)
complm(MOST-31, that-29)
nsubj(MOST-31, we-30)
ccomp(led-25, MOST-31)
nsubj(came-33, LIKELY-32)
ccomp(MOST-31, came-33)
prep_from(came-33, something-35)
advmod(something-35, else-36)

