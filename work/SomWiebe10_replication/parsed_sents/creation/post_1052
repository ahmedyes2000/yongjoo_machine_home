(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN aftermath))
        (PP (IN of)
          (NP (NN evolution))))
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBN witnessed)))))
    (CC but)
    (ADVP (RB never))
    (S
      (NP (DT the) (JJ actual))
      (VP (VBP process)
        (NP (PRP itself))))
    (. .)))

det(aftermath-2, The-1)
nsubjpass(witnessed-7, aftermath-2)
prep_of(aftermath-2, evolution-4)
aux(witnessed-7, has-5)
auxpass(witnessed-7, been-6)
root(ROOT-0, witnessed-7)
advmod(witnessed-7, never-9)
conj_but(witnessed-7, never-9)
neg(witnessed-7, never-9)
det(actual-11, the-10)
nsubj(process-12, actual-11)
ccomp(witnessed-7, process-12)
conj_but(witnessed-7, process-12)
dobj(process-12, itself-13)

(ROOT
  (NP
    (NP (PRP$ Its)
      (ADJP (RB pretty) (JJ good))
      (NN evidence))
    (ADJP
      (ADVP (RB but) (RB not))
      (JJ concrete))
    (. .)))

poss(evidence-4, Its-1)
advmod(good-3, pretty-2)
amod(evidence-4, good-3)
root(ROOT-0, evidence-4)
advmod(not-6, but-5)
neg(concrete-7, not-6)
amod(evidence-4, concrete-7)

(ROOT
  (S (CC And)
    (NP (EX there))
    (VP (VBP are)
      (ADJP
        (ADJP
          (NP (DT a) (NN ton))
          (JJR more))
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD could)
              (VP (VB list)))))))
    (. .)))

cc(are-3, And-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
det(ton-5, a-4)
npadvmod(more-6, ton-5)
acomp(are-3, more-6)
nsubj(list-9, you-7)
aux(list-9, could-8)
dep(more-6, list-9)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG talking) (IN about)))))
    (VP (VBZ is)
      (NP (NN macro) (NN evolution)))
    (. .)))

dobj(talking-4, What-1)
nsubj(talking-4, you-2)
aux(talking-4, are-3)
csubj(evolution-8, talking-4)
dep(talking-4, about-5)
cop(evolution-8, is-6)
nn(evolution-8, macro-7)
root(ROOT-0, evolution-8)

(ROOT
  (S
    (S
      (NP (DT These))
      (VP (VBP are)
        (NP
          (NP (NNS changes))
          (PP (IN within)
            (NP (DT a) (NN species))))))
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN evidence))
          (PP (IN of)
            (NP (JJ micro) (NN evolution))))))
    (. .)))

nsubj(changes-3, These-1)
cop(changes-3, are-2)
root(ROOT-0, changes-3)
det(species-6, a-5)
prep_within(changes-3, species-6)
expl(is-9, there-8)
conj_but(changes-3, is-9)
det(evidence-11, no-10)
nsubj(is-9, evidence-11)
amod(evolution-14, micro-13)
prep_of(evidence-11, evolution-14)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD should)
        (VP (VB be)
          (NP
            (NP (NNS millions)
              (CONJP (IN if) (RB not))
              (NNS billions))
            (PP (IN of)
              (NP
                (NP (JJ transitional) (NNS phases))
                (PP (IN between)
                  (NP (NNS species)))))))))
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (ADVP (RB yet))
        (S
          (VP (TO to)
            (VP (VB find)
              (NP (PRP them)))))))
    (. .)))

expl(millions-4, There-1)
aux(millions-4, should-2)
cop(millions-4, be-3)
root(ROOT-0, millions-4)
conj_negcc(millions-4, billions-7)
amod(phases-10, transitional-9)
prep_of(millions-4, phases-10)
prep_between(phases-10, species-12)
nsubj(have-15, we-14)
xsubj(find-18, we-14)
conj_but(millions-4, have-15)
advmod(have-15, yet-16)
aux(find-18, to-17)
xcomp(have-15, find-18)
dobj(find-18, them-19)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (PRP I))
    (VP (VBP suggest)
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ fossil) (NN record))
          (VP (VBZ is)
            (ADJP (JJ incomplete))))))
    (. .)))

advmod(suggest-4, Therefore-1)
nsubj(suggest-4, I-3)
root(ROOT-0, suggest-4)
complm(incomplete-10, that-5)
det(record-8, the-6)
amod(record-8, fossil-7)
nsubj(incomplete-10, record-8)
cop(incomplete-10, is-9)
ccomp(suggest-4, incomplete-10)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG being)
        (ADJP (JJ ironic)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP I))
              (VP (VBD made)
                (NP (DT a) (NN comment))
                (PP (IN about)
                  (NP
                    (NP (NN evolution))
                    (VP (VBG being)
                      (VP
                        (ADVP (RB faith))
                        (VBN based)))))))))))
    (. .)))

cc(ironic-5, And-1)
nsubj(ironic-5, I-2)
aux(ironic-5, was-3)
cop(ironic-5, being-4)
root(ROOT-0, ironic-5)
advmod(made-8, when-6)
nsubj(made-8, I-7)
dep(ironic-5, made-8)
det(comment-10, a-9)
dobj(made-8, comment-10)
prep_about(made-8, evolution-12)
auxpass(based-15, being-13)
advmod(based-15, faith-14)
partmod(evolution-12, based-15)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBP mean)
          (SBAR
            (S
              (VP (VBZ is)))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP (RB just)
        (ADJP
          (ADJP (RB as) (JJ little))
          (, ,)
          (CC or)
          (ADJP (RB as) (JJ much)))
        (NN evidence)
        (S
          (VP (TO to)
            (VP (VB support)
              (NP (DT both) (NNS sides)))))))
    (. .)))

dep(mean-3, What-1)
nsubj(is-4, What-1)
nsubj(mean-3, I-2)
dep(is-7, mean-3)
ccomp(mean-3, is-4)
expl(is-7, there-6)
root(ROOT-0, is-7)
advmod(evidence-15, just-8)
advmod(little-10, as-9)
amod(evidence-15, little-10)
advmod(much-14, as-13)
conj_or(little-10, much-14)
amod(evidence-15, much-14)
nsubj(is-7, evidence-15)
aux(support-17, to-16)
infmod(evidence-15, support-17)
det(sides-19, both-18)
dobj(support-17, sides-19)

(ROOT
  (S
    (S
      (NP (PRP It))
      (ADVP (RB always))
      (VP (VBZ seems)
        (PP (TO to)
          (NP (PRP me)))
        (SBAR (IN that)
          (S
            (NP (NNP Creationists))
            (VP (VBP are)
              (ADJP (JJ open)
                (PP (TO to)
                  (NP (NN science)))))))))
    (CC but)
    (S
      (NP (NN science))
      (VP (VBZ is)
        (ADVP (RB never))
        (ADJP (JJ open)
          (PP (TO to)
            (NP (NN creation))))))
    (. .)))

nsubj(seems-3, It-1)
advmod(seems-3, always-2)
root(ROOT-0, seems-3)
prep_to(seems-3, me-5)
complm(open-9, that-6)
nsubj(open-9, Creationists-7)
cop(open-9, are-8)
ccomp(seems-3, open-9)
prep_to(open-9, science-11)
nsubj(open-16, science-13)
cop(open-16, is-14)
neg(open-16, never-15)
conj_but(seems-3, open-16)
prep_to(open-16, creation-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ comes)
      (ADJP
        (ADVP (IN across) (RB as))
        (RB incredibly) (JJ close-minded)))
    (. .)))

nsubj(comes-2, It-1)
root(ROOT-0, comes-2)
advmod(close-minded-6, across-3)
advmod(across-3, as-4)
advmod(close-minded-6, incredibly-5)
acomp(comes-2, close-minded-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR (IN that)
        (S
          (NP (NN evolution))
          (VP (VBZ is)
            (ADJP (JJ observed))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
complm(observed-6, that-3)
nsubj(observed-6, evolution-4)
cop(observed-6, is-5)
ccomp(say-2, observed-6)

(ROOT
  (S
    (SBAR (IN With)
      (S
        (NP (DT that))
        (VP (VBD said))))
    (NP (PRP I))
    (ADVP (RB never))
    (VP
      (ADVP (RB once))
      (VBD stated)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP (VB believe)
              (PP (IN in)
                (NP (NN evolution)))
              (ADVP (RB personally)))))))
    (. .)))

mark(said-3, With-1)
nsubj(said-3, that-2)
advcl(stated-7, said-3)
nsubj(stated-7, I-4)
neg(stated-7, never-5)
advmod(stated-7, once-6)
root(ROOT-0, stated-7)
complm(believe-12, that-8)
nsubj(believe-12, I-9)
aux(believe-12, do-10)
neg(believe-12, n't-11)
ccomp(stated-7, believe-12)
prep_in(believe-12, evolution-14)
advmod(believe-12, personally-15)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (NP (JJ intelligent) (NN design))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN observed)
          (PP (IN by)
            (NP (DT the) (JJ same) (NN definition))))))
    (. .)))

dep(observed-7, Well-1)
amod(design-4, intelligent-3)
nsubjpass(observed-7, design-4)
aux(observed-7, can-5)
auxpass(observed-7, be-6)
root(ROOT-0, observed-7)
det(definition-11, the-9)
amod(definition-11, same-10)
agent(observed-7, definition-11)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB even))
    (VP (VBD gave)
      (NP
        (NP (DT an) (NN example))
        (PP (IN of)
          (NP (PRP it)))))
    (. .)))

nsubj(gave-3, I-1)
advmod(gave-3, even-2)
root(ROOT-0, gave-3)
det(example-5, an-4)
dobj(gave-3, example-5)
prep_of(example-5, it-7)

(ROOT
  (S (CC But)
    (S
      (ADVP (DT all))
      (NP (PRP you))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR
                (S
                  (VP (VBD was))))))))
      ('' ''))
    (CC And)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (ADVP (RB just))
          (VP (VBD knew)
            (PRN (: --)
              (ADVP (RB simply))
              (VP (VBD knew))
              (: --))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (VP (VBG talking) (IN about))))))))
      (, ,)
      (NP (PRP you))
      (VP (MD would) (RB n't)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB go)
                (PP (TO to)
                  (NP
                    (NP (DT some)
                      (ADJP
                        (ADJP (JJ ridiculous))
                        (, ,)
                        (ADJP (JJ undefined))
                        (, ,))
                      (NN designer))
                    (VP (VBG using)
                      (NP (JJ undefined) (NNS terms))
                      (PP (IN like)
                        (NP (`` ``) (NN information) ('' '')
                          (CC and)
                          (NN talk)))
                      (PP (IN about)
                        (NP (NN chemistry)))
                      (SBAR (RB as) (IN if)
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (NP (DT a) (NN computer) (NN program))))))))))))))
    (. .)))

advmod(had-4, all-2)
nsubj(had-4, you-3)
xsubj(say-6, you-3)
root(ROOT-0, had-4)
aux(say-6, to-5)
xcomp(had-4, say-6)
ccomp(say-6, was-7)
mark(knew-13, if-10)
nsubj(knew-13, you-11)
advmod(knew-13, just-12)
advcl(have-27, knew-13)
dep(knew-16, simply-15)
dep(knew-13, knew-16)
dobj(talking-21, what-18)
nsubj(talking-21, you-19)
aux(talking-21, are-20)
ccomp(knew-13, talking-21)
dep(talking-21, about-22)
nsubj(have-27, you-24)
xsubj(go-29, you-24)
aux(have-27, would-25)
neg(have-27, n't-26)
conj_and(had-4, have-27)
aux(go-29, to-28)
xcomp(have-27, go-29)
det(designer-36, some-31)
amod(designer-36, ridiculous-32)
dep(ridiculous-32, undefined-34)
prep_to(go-29, designer-36)
partmod(designer-36, using-37)
amod(terms-39, undefined-38)
dobj(using-37, terms-39)
prep_like(using-37, information-42)
prep_like(using-37, talk-45)
conj_and(information-42, talk-45)
prep_about(using-37, chemistry-47)
advmod(program-54, as-48)
dep(program-54, if-49)
nsubj(program-54, it-50)
cop(program-54, 's-51)
det(program-54, a-52)
nn(program-54, computer-53)
dep(using-37, program-54)

(ROOT
  (S ('' '')
    (NP (DT That))
    (VP (VBZ is) (RB n't)
      (VP (VBG debating)
        (SBAR (IN that)
          (S
            (VP (VBZ is)
              (ADVP (RB childish))
              (VP (VBG arguing)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (PRP I))
                    (VP (VBP do) (RB n't)
                      (VP (VB participate)
                        (PRT (RP in))))))))))))
    (. .)))

nsubj(debating-5, That-2)
aux(debating-5, is-3)
neg(debating-5, n't-4)
root(ROOT-0, debating-5)
complm(arguing-9, that-6)
aux(arguing-9, is-7)
advmod(arguing-9, childish-8)
ccomp(debating-5, arguing-9)
dobj(participate-14, which-10)
nsubj(participate-14, I-11)
aux(participate-14, do-12)
neg(participate-14, n't-13)
ccomp(arguing-9, participate-14)
prt(participate-14, in-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB also))
      (ADJP (RB pretty) (JJ sure))
      (PP
        (NP
          (NP (PRP$ its) (JJ obvious))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBD meant)))))
        (IN by)
        (NP (`` ``) (NN information) ('' ''))))
    (. .)))

nsubj(sure-5, I-1)
cop(sure-5, am-2)
advmod(sure-5, also-3)
advmod(sure-5, pretty-4)
root(ROOT-0, sure-5)
poss(obvious-7, its-6)
npadvmod(sure-5, obvious-7)
dobj(meant-10, obvious-7)
rel(meant-10, what-8)
nsubj(meant-10, I-9)
rcmod(obvious-7, meant-10)
prep_by(sure-5, information-13)

(ROOT
  (S (CC And)
    (S
      (VP
        (VP (VBG calling)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP believe)
                (NP (DT a) (`` ``) (NN fantasy) ('' ''))))))
        (CC and)
        (VP (VBG trying))))
    (VP (VBP make)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP look)
            (SBAR (IN like)
              (S
                (NP (DT a) (NN fool))
                (VP (VBZ is)
                  (ADVP (RB also))
                  (NP (DT a) (JJ terrible) (NN way)
                    (S
                      (VP (TO to)
                        (VP (VB approach)
                          (NP (DT a) (NN debate)))))))))))))
    (. .)))

cc(make-12, And-1)
csubj(make-12, calling-2)
dobj(believe-5, what-3)
nsubj(believe-5, I-4)
ccomp(calling-2, believe-5)
det(fantasy-8, a-6)
dobj(believe-5, fantasy-8)
conj_and(calling-2, trying-11)
csubj(make-12, trying-11)
root(ROOT-0, make-12)
nsubj(look-14, me-13)
ccomp(make-12, look-14)
mark(way-22, like-15)
det(fool-17, a-16)
nsubj(way-22, fool-17)
cop(way-22, is-18)
advmod(way-22, also-19)
det(way-22, a-20)
amod(way-22, terrible-21)
advcl(look-14, way-22)
aux(approach-24, to-23)
infmod(way-22, approach-24)
det(debate-26, a-25)
dobj(approach-24, debate-26)

(ROOT
  (S
    (NP (PRP$ Its))
    (ADVP (RB just))
    (VP
      (VP (VBP immature))
      (CC and)
      (VP (VBZ proves)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ close-minded))
              (, ,)
              (S (RB not)
                (VP (TO to)
                  (VP (VB mention)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ makes)
                          (SBAR
                            (S
                              (NP (PRP you))
                              (VP (VBP seem)
                                (ADJP (RB incredibly) (JJ unintelligent))))))))))))))))
    (. .)))

nsubj(immature-3, Its-1)
nsubj(proves-5, Its-1)
advmod(immature-3, just-2)
root(ROOT-0, immature-3)
conj_and(immature-3, proves-5)
complm(close-minded-9, that-6)
nsubj(close-minded-9, you-7)
xsubj(mention-13, you-7)
cop(close-minded-9, are-8)
ccomp(proves-5, close-minded-9)
neg(mention-13, not-11)
aux(mention-13, to-12)
xcomp(close-minded-9, mention-13)
nsubj(makes-15, it-14)
ccomp(mention-13, makes-15)
nsubj(unintelligent-19, you-16)
cop(unintelligent-19, seem-17)
advmod(unintelligent-19, incredibly-18)
ccomp(makes-15, unintelligent-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD did) (RB n't)
      (ADVP (RB even))
      (VP (VB try)
        (S
          (VP (TO to)
            (VP (VB disprove)
              (NP
                (NP (DT the) (NN argument))
                (SBAR
                  (S
                    (NP (PRP you))
                    (ADVP (RB just))
                    (VP (VBD called)
                      (NP (PRP it))
                      (, ,)
                      (PP (IN in)
                        (NP (JJ other) (NNS words)))
                      (, ,)
                      (UCP
                        (ADJP (JJ stupid))
                        (CC and)
                        (VP (VBN left)
                          (S
                            (NP (PRP it))
                            (ADVP (RB alone))))))))))))))
    (. .)))

nsubj(try-5, You-1)
xsubj(disprove-7, You-1)
aux(try-5, did-2)
neg(try-5, n't-3)
advmod(try-5, even-4)
root(ROOT-0, try-5)
aux(disprove-7, to-6)
xcomp(try-5, disprove-7)
det(argument-9, the-8)
dobj(disprove-7, argument-9)
nsubj(called-12, you-10)
advmod(called-12, just-11)
rcmod(argument-9, called-12)
dobj(called-12, it-13)
amod(words-17, other-16)
prep_in(called-12, words-17)
dep(called-12, stupid-19)
dep(called-12, left-21)
conj_and(stupid-19, left-21)
dep(left-21, it-22)
advmod(it-22, alone-23)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB typically))
    (VP (VBP do) (RB n't)
      (VP (VB debate)
        (PP (IN with)
          (NP
            (NP (NNS people))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (ADJP (JJ immature)))))))))
    (. .)))

nsubj(debate-5, I-1)
advmod(debate-5, typically-2)
aux(debate-5, do-3)
neg(debate-5, n't-4)
root(ROOT-0, debate-5)
prep_with(debate-5, people-7)
nsubj(immature-10, people-7)
cop(immature-10, are-9)
rcmod(people-7, immature-10)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB just))
    (VP (VBZ does) (RB n't)
      (VP (VB seem)
        (ADJP (JJ fair)
          (PP (TO to)
            (NP (PRP them))))))
    (. .)))

nsubj(fair-6, It-1)
advmod(fair-6, just-2)
aux(fair-6, does-3)
neg(fair-6, n't-4)
cop(fair-6, seem-5)
root(ROOT-0, fair-6)
prep_to(fair-6, them-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD said)
      (SBAR
        (S
          (NP
            (NP (PRP$ my) (NN understanding))
            (PP (IN of)
              (NP (DT the) (NN field))))
          (VP (VBZ is)
            (VP (VBG lacking))))))
    (. .)))

nsubj(said-2, You-1)
root(ROOT-0, said-2)
poss(understanding-4, my-3)
nsubj(lacking-9, understanding-4)
det(field-7, the-6)
prep_of(understanding-4, field-7)
aux(lacking-9, is-8)
ccomp(said-2, lacking-9)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (VBP am) (RB not)
        (NP (DT a) (NN scientist))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN researched)
          (NP
            (NP (DT this))
            (PP (IN on)
              (NP (DT both) (NNS sides)))))))
    (. .)))

dep(scientist-7, Well-1)
nsubj(scientist-7, I-3)
cop(scientist-7, am-4)
neg(scientist-7, not-5)
det(scientist-7, a-6)
root(ROOT-0, scientist-7)
nsubj(researched-11, I-9)
aux(researched-11, have-10)
conj_but(scientist-7, researched-11)
dobj(researched-11, this-12)
det(sides-15, both-14)
prep_on(this-12, sides-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (VP (VBG lacking)))))
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ open)
        (PP (TO to)
          (S
            (VP (VBG learning)
              (NP (JJR more))
              (PP (IN about)
                (NP (PRP it))))))))
    (. .)))

mark(lacking-4, If-1)
nsubj(lacking-4, I-2)
aux(lacking-4, am-3)
advcl(open-7, lacking-4)
nsubj(open-7, I-5)
cop(open-7, am-6)
root(ROOT-0, open-7)
prepc_to(open-7, learning-9)
dobj(learning-9, more-10)
prep_about(learning-9, it-12)

(ROOT
  (S (CC But)
    (PP (IN in)
      (NP (DT this) (NN case)))
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB believe)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ correct)))))))
    (. .)))

cc(believe-8, But-1)
det(case-4, this-3)
prep_in(believe-8, case-4)
nsubj(believe-8, I-5)
aux(believe-8, do-6)
neg(believe-8, n't-7)
root(ROOT-0, believe-8)
nsubj(correct-11, you-9)
cop(correct-11, are-10)
ccomp(believe-8, correct-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBP are)
        (ADJP (JJ right)
          (PP (IN about)
            (ADVP
              (NP (CD one) (NN thing))
              (IN though))))))
    (. .)))

nsubj(right-4, You-1)
aux(right-4, 're-2)
cop(right-4, are-3)
root(ROOT-0, right-4)
prep(right-4, about-5)
num(thing-7, one-6)
npadvmod(though-8, thing-7)
pcomp(about-5, though-8)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (NNS thousands))
          (PP (IN of)
            (NP
              (NP (NNS fossils))
              (VP (VBG showing)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBP look)
                      (PP (IN like)
                        (NP (NNS steps))))))))))))
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT no) (JJ gradual) (NN change))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, thousands-3)
prep_of(thousands-3, fossils-5)
partmod(fossils-5, showing-6)
nsubj(look-8, what-7)
ccomp(showing-6, look-8)
prep_like(look-8, steps-10)
expl(is-13, there-12)
conj_but(are-2, is-13)
det(change-16, no-14)
amod(change-16, gradual-15)
nsubj(is-13, change-16)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NNS examples))
      (PP (IN of)
        (NP (DT a) (JJ defined) (JJ developmental) (NN line))))
    (VP (VBP are)
      (ADVP (RB actually))
      (NP
        (NP (NNS examples))
        (PP (IN of)
          (NP (DT a)
            (ADJP (JJ fragmented))
            (JJ developmental) (NN line)))))
    (. .)))

poss(examples-2, Your-1)
nsubj(examples-10, examples-2)
det(line-7, a-4)
amod(line-7, defined-5)
amod(line-7, developmental-6)
prep_of(examples-2, line-7)
cop(examples-10, are-8)
advmod(examples-10, actually-9)
root(ROOT-0, examples-10)
det(line-15, a-12)
amod(line-15, fragmented-13)
amod(line-15, developmental-14)
prep_of(examples-10, line-15)

