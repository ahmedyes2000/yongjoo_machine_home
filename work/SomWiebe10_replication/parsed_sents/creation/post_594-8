(ROOT
  (S
    (VP
      (VP (VB Realize)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (NNP ID))
              (VP (VBZ is)
                (ADJP (RB very) (JJ good)
                  (PP (IN at)
                    (NP (NN bait)
                      (CC and)
                      (NN switch)))))))
          (, ,)
          (CC and)
          (SBAR (IN that)
            (S
              (NP (PRP one))
              (VP (VBP need)
                (S
                  (VP (TO to)
                    (VP
                      (ADVP (RB carefully))
                      (VB study)
                      (NP (PRP$ its) (NNS claims)
                        (CC and)
                        (NNS arguments))
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ able)
                              (S
                                (VP (TO to)
                                  (VP (VB get)
                                    (PP (TO to)
                                      (NP (DT the) (NN core))))))))))))))))))
      (CC and)
      (VP (VB come)
        (S
          (VP (TO to)
            (VP (VB realize)
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBZ is) (RB not)
                    (ADJP (JJ much))
                    (ADVP (RB there))))))))))
    (. .)))

root(ROOT-0, Realize-1)
complm(good-6, that-2)
nsubj(good-6, ID-3)
cop(good-6, is-4)
advmod(good-6, very-5)
ccomp(Realize-1, good-6)
prep_at(good-6, bait-8)
prep_at(good-6, switch-10)
conj_and(bait-8, switch-10)
complm(need-15, that-13)
nsubj(need-15, one-14)
xsubj(study-18, one-14)
ccomp(Realize-1, need-15)
conj_and(good-6, need-15)
aux(study-18, to-16)
advmod(study-18, carefully-17)
xcomp(need-15, study-18)
poss(claims-20, its-19)
dobj(study-18, claims-20)
dobj(study-18, arguments-22)
conj_and(claims-20, arguments-22)
aux(able-25, to-23)
cop(able-25, be-24)
xcomp(study-18, able-25)
aux(get-27, to-26)
xcomp(able-25, get-27)
det(core-30, the-29)
prep_to(get-27, core-30)
conj_and(Realize-1, come-32)
aux(realize-34, to-33)
xcomp(come-32, realize-34)
complm(is-37, that-35)
expl(is-37, there-36)
ccomp(realize-34, is-37)
neg(is-37, not-38)
acomp(is-37, much-39)
advmod(is-37, there-40)

