(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (PP (IN under)
        (NP (DT the) (JJ mistaken) (NN impression)))
      (SBAR (IN that)
        (S
          (NP (NN complexity)
            (CC and)
            (NN ability))
          (VP (TO to)
            (VP (VB buy)
              (S
                (VP (VBG washing)
                  (SBAR
                    (S
                      (NP (NNS machines))
                      (VP (VBZ equals)
                        (ADJP (RBR more) (JJ evolved))))))))))))
    (. .)))

nsubj(are-2, You-1)
root(ROOT-0, are-2)
det(impression-6, the-4)
amod(impression-6, mistaken-5)
prep_under(are-2, impression-6)
complm(buy-12, that-7)
nsubj(buy-12, complexity-8)
conj_and(complexity-8, ability-10)
nsubj(buy-12, ability-10)
aux(buy-12, to-11)
ccomp(are-2, buy-12)
xcomp(are-2, buy-12)
xcomp(buy-12, washing-13)
nsubj(equals-15, machines-14)
ccomp(washing-13, equals-15)
advmod(evolved-17, more-16)
acomp(equals-15, evolved-17)

(ROOT
  (S
    (S
      (NP (NNS Prokaryotes))
      (VP (VBP are)
        (PP (IN by)
          (NP
            (NP (RB far) (DT the)
              (ADJP (RBS most) (JJ successful))
              (NN species))
            (PP (IN on)
              (NP (DT the) (NN planet) (NN earth)))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP do) (RB n't)
        (ADVP (RB even))
        (VP (VB have)
          (NP (NN cell) (NNS nuclei)))))
    (. .)))

nsubj(are-2, Prokaryotes-1)
root(ROOT-0, are-2)
advmod(species-8, far-4)
det(species-8, the-5)
advmod(successful-7, most-6)
amod(species-8, successful-7)
prep_by(are-2, species-8)
det(earth-12, the-10)
nn(earth-12, planet-11)
prep_on(species-8, earth-12)
nsubj(have-18, they-14)
aux(have-18, do-15)
neg(have-18, n't-16)
advmod(have-18, even-17)
conj_and(are-2, have-18)
nn(nuclei-20, cell-19)
dobj(have-18, nuclei-20)

(ROOT
  (S
    (NP
      (NP (CD 99) (NN %))
      (PP (IN of)
        (NP
          (NP (DT the) (NN species))
          (CC and)
          (NP
            (NP (CD 50) (NN %))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS biomass))
                (PP (IN on)
                  (NP (DT this) (NN planet)))))))))
    (VP (VBP are)
      (ADJP (JJ prokaryotes)))
    (. .)))

num(%-2, 99-1)
nsubj(prokaryotes-16, %-2)
det(species-5, the-4)
prep_of(%-2, species-5)
num(%-8, 50-7)
prep_of(%-2, %-8)
conj_and(species-5, %-8)
det(biomass-11, the-10)
prep_of(%-8, biomass-11)
det(planet-14, this-13)
prep_on(biomass-11, planet-14)
cop(prokaryotes-16, are-15)
root(ROOT-0, prokaryotes-16)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB constantly))
    (VP
      (VP (VBZ evolve))
      (CC and)
      (VP (VBP are)
        (VP (VBN thought)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT the) (JJ first) (NN living) (NNS organisms))
                  (PP (IN on)
                    (NP (DT the) (NN planet))))))))))
    (. .)))

nsubj(evolve-3, They-1)
nsubjpass(thought-6, They-1)
xsubj(organisms-12, They-1)
advmod(evolve-3, constantly-2)
root(ROOT-0, evolve-3)
auxpass(thought-6, are-5)
conj_and(evolve-3, thought-6)
aux(organisms-12, to-7)
cop(organisms-12, be-8)
det(organisms-12, the-9)
amod(organisms-12, first-10)
nn(organisms-12, living-11)
xcomp(thought-6, organisms-12)
det(planet-15, the-14)
prep_on(organisms-12, planet-15)

(ROOT
  (S
    (VP (VBD \/) (-RRB- -RRB-)
      (NP
        (NP
          (ADJP
            (ADVP (RB As)
              (PP (IN for)
                (NP (DT the) (JJ other) (NN simian) (NN species))))
            (NP (PRP they))
            (JJ have))
          (NNS evolved))
        (ADVP (RB just)))
      (ADVP
        (ADVP (RB as) (RB much))
        (SBAR (IN as)
          (S
            (NP (PRP we))
            (VP (VBP have)
              (NP
                (NP (RB just) (RB not))
                (PP (IN in)
                  (NP (DT the) (JJ same) (NNS ways)))))))))
    (. .)))

root(ROOT-0, \/-1)
det(species-8, the-5)
amod(species-8, other-6)
nn(species-8, simian-7)
prep_as_for(have-10, species-8)
dep(have-10, they-9)
amod(evolved-11, have-10)
dobj(\/-1, evolved-11)
advmod(evolved-11, just-12)
advmod(much-14, as-13)
advmod(\/-1, much-14)
mark(have-17, as-15)
nsubj(have-17, we-16)
ccomp(much-14, have-17)
advmod(not-19, just-18)
dobj(have-17, not-19)
det(ways-23, the-21)
amod(ways-23, same-22)
prep_in(not-19, ways-23)

(ROOT
  (S
    (S
      (NP (DT The) (JJ big) (NN question))
      (VP (VBZ is)
        (NP
          (NP (JJ big) (NNS brains))
          (SBAR
            (S
              (VP
                (VP (VBP have)
                  (VP (VBN allowed)
                    (S
                      (NP (PRP us))
                      (VP (TO to)
                        (VP (VB expand)
                          (ADVP (RB very) (RB quickly))
                          (PP (IN as)
                            (NP (DT a) (NN species))))))))
                (CC but)
                (VP (MD will))))))))
    (NP (PRP it))
    (VP
      (ADVP (RB ultimately))
      (VBP prove)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT a) (NN quality))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ lends)
                    (S
                      (VP (TO to)
                        (VP (VB survivability)
                          (NP
                            (QP (CC or)
                              (RB not))))))))))))))
    (. .)))

det(question-3, The-1)
amod(question-3, big-2)
nsubj(brains-6, question-3)
cop(brains-6, is-4)
amod(brains-6, big-5)
dep(prove-21, brains-6)
aux(allowed-8, have-7)
rcmod(brains-6, allowed-8)
nsubj(expand-11, us-9)
aux(expand-11, to-10)
xcomp(allowed-8, expand-11)
advmod(quickly-13, very-12)
advmod(expand-11, quickly-13)
det(species-16, a-15)
prep_as(expand-11, species-16)
rcmod(brains-6, will-18)
conj_but(allowed-8, will-18)
nsubj(prove-21, it-19)
xsubj(quality-25, it-19)
advmod(prove-21, ultimately-20)
root(ROOT-0, prove-21)
aux(quality-25, to-22)
cop(quality-25, be-23)
det(quality-25, a-24)
xcomp(prove-21, quality-25)
nsubj(lends-27, quality-25)
rcmod(quality-25, lends-27)
aux(survivability-29, to-28)
xcomp(lends-27, survivability-29)
cc(not-31, or-30)
dobj(survivability-29, not-31)

