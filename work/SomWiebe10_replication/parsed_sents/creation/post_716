(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP agree)))
    (, ,)
    (NP (PRP he))
    (VP (VBD did) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB confuse)
              (NP (PRP us)))))))
    (. .) (. .)))

nsubj(agree-3, I-2)
ccomp(want-8, agree-3)
nsubj(want-8, he-5)
xsubj(confuse-10, he-5)
aux(want-8, did-6)
neg(want-8, n't-7)
root(ROOT-0, want-8)
aux(confuse-10, to-9)
xcomp(want-8, confuse-10)
dobj(confuse-10, us-11)

(ROOT
  (S (CC but)
    (NP (PRP he))
    (VP (VBD did)
      (SBAR
        (S
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB leave)
                  (NP
                    (NP (RB plenty))
                    (PP (IN of)
                      (NP (NN room))))
                  (PP (IN for)
                    (NP (PRP you)))
                  (S
                    (VP (TO to) (RB not)
                      (VP (VB believe)
                        (PP (IN in)
                          (NP (PRP him)))))))))))))
    (. .)))

cc(did-3, but-1)
nsubj(did-3, he-2)
root(ROOT-0, did-3)
ccomp(did-3, want-4)
aux(leave-6, to-5)
xcomp(want-4, leave-6)
dobj(leave-6, plenty-7)
prep_of(plenty-7, room-9)
prep_for(leave-6, you-11)
aux(believe-14, to-12)
neg(believe-14, not-13)
xcomp(leave-6, believe-14)
prep_in(believe-14, him-16)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADVP (RB completely))
        (NP
          (NP (PRP$ your) (NN choice))
          (NP (PRP$ your) (JJ free) (NN will) ('' '')))))
    (IN So)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (VP
          (VP (VB follow)
            (NP
              (NP (DT an) (NN idea))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ contradicts)
                    (NP
                      (NP (DT all) (JJ rational) (NN logic))
                      (CC and)
                      (NP (NN evidence))))))))
          (, ,)
          (CC or)
          (VP (VB suffer)
            (PP (IN for)
              (NP
                (NP (NN eternity))
                (PP (IN in)
                  (NP (DT a) (JJ fiery) (NN pit)))))))))
    (. ?)))

nsubj(choice-5, It-1)
cop(choice-5, 's-2)
advmod(choice-5, completely-3)
poss(choice-5, your-4)
root(ROOT-0, choice-5)
poss(will-8, your-6)
amod(will-8, free-7)
dep(choice-5, will-8)
dep(choice-5, So-10)
nsubj(follow-13, it-11)
nsubj(suffer-25, it-11)
aux(follow-13, 's-12)
ccomp(choice-5, follow-13)
det(idea-15, an-14)
dobj(follow-13, idea-15)
nsubj(contradicts-17, idea-15)
rcmod(idea-15, contradicts-17)
det(logic-20, all-18)
amod(logic-20, rational-19)
dobj(contradicts-17, logic-20)
dobj(contradicts-17, evidence-22)
conj_and(logic-20, evidence-22)
ccomp(choice-5, suffer-25)
conj_or(follow-13, suffer-25)
prep_for(suffer-25, eternity-27)
det(pit-31, a-29)
amod(pit-31, fiery-30)
prep_in(eternity-27, pit-31)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ does) (RB not)
      (VP (VB sound)
        (ADJP (RB very) (JJ benevolent)
          (PP (TO to)
            (NP (PRP me))))))
    (. .)))

nsubj(sound-4, That-1)
aux(sound-4, does-2)
neg(sound-4, not-3)
root(ROOT-0, sound-4)
advmod(benevolent-6, very-5)
acomp(sound-4, benevolent-6)
prep_to(benevolent-6, me-8)

