(ROOT
  (S (: --)
    (NP
      (NP (NNP Highlander))
      (: --)
      (NP (DT The) (JJ exact) (JJ same)))
    (VP (VBZ is)
      (ADJP (JJ true))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (JJ modern) (NN science))
          (VP (VBZ reveals)
            (NP
              (NP (DT an) (NNP IC) (NN structure))
              (PP (JJ such) (IN as)
                (NP
                  (NP (DT the) (NN flagellar) (NN motor))
                  (CC &)
                  (NP (NN assembly)))))))))
    (. .)))

nsubj(true-8, Highlander-2)
det(same-6, The-4)
amod(same-6, exact-5)
dep(Highlander-2, same-6)
cop(true-8, is-7)
root(ROOT-0, true-8)
advmod(reveals-12, when-9)
amod(science-11, modern-10)
nsubj(reveals-12, science-11)
advcl(true-8, reveals-12)
det(structure-15, an-13)
nn(structure-15, IC-14)
dobj(reveals-12, structure-15)
det(motor-20, the-18)
nn(motor-20, flagellar-19)
prep_such_as(structure-15, motor-20)
prep_such_as(structure-15, assembly-22)
conj_and(motor-20, assembly-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NN absence))
      (PP (IN of)
        (NP (DT a) (JJ plausible) (JJ natural) (NN pathway))))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (DT the) (NN design) (NN inference))
          (VP (VBZ is)
            (ADJP (JJ valid))))))
    (. .)))

det(absence-2, The-1)
nsubj(means-8, absence-2)
det(pathway-7, a-4)
amod(pathway-7, plausible-5)
amod(pathway-7, natural-6)
prep_of(absence-2, pathway-7)
root(ROOT-0, means-8)
det(inference-11, the-9)
nn(inference-11, design-10)
nsubj(valid-13, inference-11)
cop(valid-13, is-12)
ccomp(means-8, valid-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NN appearance))
      (PP (IN of)
        (NP (PDT such) (DT a) (NN pathway))))
    (VP (MD would)
      (VP (VB falsify)
        (NP (NN design))))
    (. .)))

det(appearance-2, The-1)
nsubj(falsify-8, appearance-2)
predet(pathway-6, such-4)
det(pathway-6, a-5)
prep_of(appearance-2, pathway-6)
aux(falsify-8, would-7)
root(ROOT-0, falsify-8)
dobj(falsify-8, design-9)

(ROOT
  (S
    (ADVP (RB As) (RB long)
      (SBAR (IN as)
        (S
          (NP (PRP we))
          (VP (VBP agree)
            (SBAR (IN that)
              (S
                (NP (`` ``) (NN design) ('' ''))
                (VP (VBZ is)
                  (ADJP
                    (ADJP (NN nothing) (JJR more))
                    (SBAR (IN that)
                      (S
                        (NP (DT the))
                        (VP (VBP claim)
                          (SBAR (IN that) (`` ``)
                            (S
                              (NP (NN science))
                              (VP (MD can) (RB not)
                                (VP (VB explain)
                                  (NP
                                    (NP (DT a) (JJ particular) (NN feature)
                                      (CC or)
                                      (NN system) ('' ''))
                                    (, ,)
                                    (RRC
                                      (ADVP (RB however))
                                      (NP (RB then)))))))))))))))))))
    (NP (PRP it))
    (VP (VBZ has)
      (NP (JJ little) (NN relevance))
      (PP (TO to)
        (NP
          (NP (JJ intelligent) (NN design))
          (PRN (-LRB- -LRB-)
            (NP (NNPS ers))
            (-RRB- -RRB-)))))
    (. .)))

advmod(long-2, As-1)
advmod(has-32, long-2)
mark(agree-5, as-3)
nsubj(agree-5, we-4)
ccomp(long-2, agree-5)
complm(nothing-11, that-6)
nsubj(nothing-11, design-8)
cop(nothing-11, is-10)
ccomp(agree-5, nothing-11)
dep(nothing-11, more-12)
complm(claim-15, that-13)
nsubj(claim-15, the-14)
ccomp(nothing-11, claim-15)
complm(explain-21, that-16)
nsubj(explain-21, science-18)
aux(explain-21, can-19)
neg(explain-21, not-20)
ccomp(claim-15, explain-21)
det(feature-24, a-22)
amod(feature-24, particular-23)
dobj(explain-21, feature-24)
dobj(explain-21, system-26)
conj_or(feature-24, system-26)
advmod(then-30, however-29)
rcmod(feature-24, then-30)
nsubj(has-32, it-31)
root(ROOT-0, has-32)
amod(relevance-34, little-33)
dobj(has-32, relevance-34)
amod(design-37, intelligent-36)
prep_to(has-32, design-37)
appos(design-37, ers-39)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP IC) (NN claim))
      (PP (IN of)
        (NP (DT the) (NN flagellum))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ good) (NN example))
        (PP (IN of)
          (NP (JJ flawed) (NN reasoning)))))
    (. .)))

det(claim-3, The-1)
nn(claim-3, IC-2)
nsubj(example-10, claim-3)
det(flagellum-6, the-5)
prep_of(claim-3, flagellum-6)
cop(example-10, is-7)
det(example-10, a-8)
amod(example-10, good-9)
root(ROOT-0, example-10)
amod(reasoning-13, flawed-12)
prep_of(example-10, reasoning-13)

(ROOT
  (NP
    (NP (NNP First))
    (PP (IN of)
      (NP (DT all)))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBN shown)
            (SBAR
              (WHADVP (WRB how))
              (S
                (PP
                  (ADVP (IN at) (JJS least))
                  (IN in)
                  (NP (NN principle)))
                (NP (NNP IC) (NNS systems))
                (VP (MD can)
                  (VP (VB evolve)))))))))
    (, ,)
    (PP (IN of)
      (NP (NN course)))
    (SBAR
      (S
        (NP (NNP ID))
        (VP (VBZ is)
          (ADJP (JJ quick)
            (S
              (VP (TO to)
                (VP (VB restrict)
                  (NP (NNP IC))
                  (PP (TO to)
                    (NP
                      (NP (NNS systems))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP
                            (VP (VBP retain)
                              (NP (PRP$ their) (`` ``) (JJ original) (NN function) ('' '')))
                            (CC and)
                            (`` ``)
                            (VP (VBD evolved)))))))))))
          (PP (IN by)
            (NP (JJ Darwinian) (NNS processes)))
          ('' ''))))
    (. .)))

root(ROOT-0, First-1)
prep_of(First-1, all-3)
nsubjpass(shown-8, it-5)
aux(shown-8, has-6)
auxpass(shown-8, been-7)
dep(First-1, shown-8)
advmod(evolve-17, how-9)
advmod(evolve-17, at-10)
pobj(at-10, least-11)
prep_in(evolve-17, principle-13)
nn(systems-15, IC-14)
nsubj(evolve-17, systems-15)
aux(evolve-17, can-16)
ccomp(shown-8, evolve-17)
prep_of(First-1, course-20)
nsubj(quick-23, ID-21)
cop(quick-23, is-22)
rcmod(First-1, quick-23)
aux(restrict-25, to-24)
xcomp(quick-23, restrict-25)
dobj(restrict-25, IC-26)
prep_to(restrict-25, systems-28)
nsubj(retain-30, systems-28)
nsubj(evolved-38, systems-28)
rcmod(systems-28, retain-30)
poss(function-34, their-31)
amod(function-34, original-33)
dobj(retain-30, function-34)
rcmod(systems-28, evolved-38)
conj_and(retain-30, evolved-38)
amod(processes-41, Darwinian-40)
prep_by(quick-23, processes-41)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP (NNP IC))
    (VP (VBZ is)
      (ADVP (RB basically))
      (NP (DT the)
        (ADJP (RB much) (JJR narrower))
        (NN claim))
      (SBAR (IN that)
        (S
          (NP (JJ certain) (NNS systems))
          (VP (MD could) (RB not)
            (ADVP (RB possibly))
            (VP (VB have)
              (VP (VBN evolved)
                (PP (IN by)
                  (NP (JJ Darwinian) (NNS processes)))
                (PP (IN while)
                  (S
                    (VP (VBG maintaining)
                      (NP (PRP$ their) (JJ original) (NN function)))))))))))
    (. .)))

amod(words-3, other-2)
prep_in(claim-11, words-3)
nsubj(claim-11, IC-5)
cop(claim-11, is-6)
advmod(claim-11, basically-7)
det(claim-11, the-8)
advmod(narrower-10, much-9)
amod(claim-11, narrower-10)
root(ROOT-0, claim-11)
complm(evolved-19, that-12)
amod(systems-14, certain-13)
nsubj(evolved-19, systems-14)
aux(evolved-19, could-15)
neg(evolved-19, not-16)
advmod(evolved-19, possibly-17)
aux(evolved-19, have-18)
ccomp(claim-11, evolved-19)
amod(processes-22, Darwinian-21)
prep_by(evolved-19, processes-22)
prepc_while(evolved-19, maintaining-24)
poss(function-27, their-25)
amod(function-27, original-26)
dobj(maintaining-24, function-27)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (S
      (VP (VBG falsifying)
        (NP (DT this))))
    (VP (MD would)
      (ADVP (IN at) (JJS best))
      (VP (VB falsify)
        (NP
          (NP
            (NP (DT the) (NN claim))
            (PP (IN of)
              (NP (NN ignorance))))
          (, ,) (RB not) (RB really)
          (NP
            (NP (DT the) (NN concept))
            (PP (IN of)
              (NP (NN design)))))
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADVP (RBR more) (RB commonly))
              (VP (VBN understood)))))))
    (. .)))

prep_of(falsify-9, course-2)
csubj(falsify-9, falsifying-4)
dobj(falsifying-4, this-5)
aux(falsify-9, would-6)
advmod(falsify-9, at-7)
pobj(at-7, best-8)
root(ROOT-0, falsify-9)
det(claim-11, the-10)
dobj(falsify-9, claim-11)
prep_of(claim-11, ignorance-13)
neg(claim-11, not-15)
advmod(claim-11, really-16)
det(concept-18, the-17)
dep(claim-11, concept-18)
prep_of(concept-18, design-20)
mark(understood-26, as-21)
nsubjpass(understood-26, it-22)
auxpass(understood-26, is-23)
advmod(commonly-25, more-24)
advmod(understood-26, commonly-25)
advcl(falsify-9, understood-26)

(ROOT
  (NP (JJ Clever) (NN trick) (: ...)))

amod(trick-2, Clever-1)
root(ROOT-0, trick-2)

