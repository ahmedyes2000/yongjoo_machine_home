(ROOT
  (S (CC So)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP it))
        (VP (VBZ comes)
          (PP (TO to)
            (S
              (VP (VBG teaching)
                (NP
                  (NP (DT the) (NN theory))
                  (PP (IN of)
                    (NP (NN evolution))))))))))
    (NP (DT the) (JJ only) (JJ real) (NN answer))
    (VP (VBZ is)
      (SBAR (`` ``)
        (S
          (NP (PRP we))
          (VP (VBP do) (RB n't)
            (VP (VB know) ('' '')
              (SBAR (RB as) (IN in)
                (S
                  (NP (PRP we))
                  (VP (VBP do) (RB n't)
                    (VP (VB know)
                      (SBAR (IN whether)
                        (CC or)
                        (RB not)
                        (S
                          (NP
                            (NP (DT the) (NNS transformations))
                            (VP (VBN required)
                              (PP (IN by)
                                (NP (JJ universal) (JJ common) (NN descent)))))
                          (VP (VBP are)
                            (ADJP (RB even) (JJ possible)
                              (PP (IN via)
                                (NP
                                  (NP (DT any) (NN amount))
                                  (PP (IN of)
                                    (NP (VBN accumulated) (NNS mutations))))))))))))))))))
    (. .)))

cc(is-15, So-1)
advmod(comes-4, when-2)
nsubj(comes-4, it-3)
advcl(is-15, comes-4)
prepc_to(comes-4, teaching-6)
det(theory-8, the-7)
dobj(teaching-6, theory-8)
prep_of(theory-8, evolution-10)
det(answer-14, the-11)
amod(answer-14, only-12)
amod(answer-14, real-13)
nsubj(is-15, answer-14)
root(ROOT-0, is-15)
nsubj(know-20, we-17)
aux(know-20, do-18)
neg(know-20, n't-19)
ccomp(is-15, know-20)
advmod(know-27, as-22)
dep(know-27, in-23)
nsubj(know-27, we-24)
aux(know-27, do-25)
neg(know-27, n't-26)
ccomp(know-20, know-27)
complm(possible-40, whether-28)
ccomp(know-27, not-30)
conj_or(possible-40, not-30)
det(transformations-32, the-31)
nsubj(possible-40, transformations-32)
partmod(transformations-32, required-33)
amod(descent-37, universal-35)
amod(descent-37, common-36)
agent(required-33, descent-37)
cop(possible-40, are-38)
advmod(possible-40, even-39)
ccomp(know-27, possible-40)
det(amount-43, any-42)
prep_via(possible-40, amount-43)
amod(mutations-46, accumulated-45)
prep_of(amount-43, mutations-46)

