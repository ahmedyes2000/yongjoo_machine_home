(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says)
      (SBAR (IN that) (, ,) (`` ``)
        (S
          (SBAR (RB even) (IN though)
            (S
              (PP (IN in)
                (NP (NN practice)))
              (NP (JJ inferring) (NN design))
              (VP (VBZ is)
                (NP
                  (NP (DT the) (JJ first) (NN step))
                  (PP (IN in)
                    (S
                      (VP (VBG identifying)
                        (NP
                          (NP (DT an) (JJ intelligent) (NN agent))
                          (, ,)
                          (VP (VBN taken)
                            (PP (IN by)
                              (NP (PRP itself))))))))))))
          (NP (NN design))
          (VP (VBZ does) (RB not)
            (VP (VB require)
              (SBAR (IN that)
                (S
                  (NP (PDT such) (DT an) (NN agent))
                  (VP (VB be)
                    (VP (VBN posited))))))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
complm(require-28, that-3)
advmod(step-15, even-6)
dep(step-15, though-7)
prep_in(step-15, practice-9)
amod(design-11, inferring-10)
nsubj(step-15, design-11)
cop(step-15, is-12)
det(step-15, the-13)
amod(step-15, first-14)
advcl(require-28, step-15)
prepc_in(step-15, identifying-17)
det(agent-20, an-18)
amod(agent-20, intelligent-19)
dobj(identifying-17, agent-20)
partmod(agent-20, taken-22)
agent(taken-22, itself-24)
nsubj(require-28, design-25)
aux(require-28, does-26)
neg(require-28, not-27)
ccomp(says-2, require-28)
complm(posited-34, that-29)
predet(agent-32, such-30)
det(agent-32, an-31)
nsubjpass(posited-34, agent-32)
auxpass(posited-34, be-33)
ccomp(require-28, posited-34)

