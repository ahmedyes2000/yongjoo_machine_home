(ROOT
  (S
    (ADVP (IN So)
      (PP (IN in)
        (NP
          (NP (NN case))
          (PP (IN of)
            (NP (CD 1000) (NNS components))))))
    (, ,)
    (NP (DT this))
    (VP (MD would)
      (VP (VB reduce)
        (NP (DT the) (NN time))
        (PP (IN from)
          (NP
            (NP (NNP O))
            (PRN (-LRB- -LRB-)
              (NP (NN n))
              (-RRB- -RRB-))))
        (PP
          (PP (TO to)
            (NP (NNP O)))
          (PRN (-LRB- -LRB-)
            (S
              (VP (VB log)
                (NP (NN n))))
            (-RRB- -RRB-))
          (CC or)
          (PP (IN from)
            (NP (CD 10) (JJ ^) (NN n)
              (S
                (VP (TO to)
                  (VP (VB n.)
                    (ADVP
                      (ADVP (RB Not)
                        (NP
                          (NP (DT a) (JJ bad) (NN reduction))
                          (PP (IN in)
                            (NP (NN time)))))
                      (S (MD would)
                        (NP (PRP you))
                        (VP (RB not)
                          (VP (VB agree)))))))))))))
    (. ?)))

advmod(reduce-10, So-1)
num(components-6, 1000-5)
prep_in_case_of(So-1, components-6)
nsubj(reduce-10, this-8)
nsubj(reduce-10', this-8)
aux(reduce-10, would-9)
root(ROOT-0, reduce-10)
conj_or(reduce-10, reduce-10')
det(time-12, the-11)
dobj(reduce-10, time-12)
prep_from(reduce-10, O-14)
appos(O-14, n-16)
prep_to(reduce-10, O-19)
dep(reduce-10, log-21)
dobj(log-21, n-22)
num(n-28, 10-26)
amod(n-28, ^-27)
prep_from(reduce-10', n-28)
aux(n.-30, to-29)
infmod(n-28, n.-30)
advmod(n.-30, Not-31)
det(reduction-34, a-32)
amod(reduction-34, bad-33)
pobj(Not-31, reduction-34)
prep_in(reduction-34, time-36)
dep(agree-40, would-37)
nsubj(agree-40, you-38)
neg(agree-40, not-39)
dep(Not-31, agree-40)

