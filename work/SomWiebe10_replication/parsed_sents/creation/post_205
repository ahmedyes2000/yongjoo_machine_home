(ROOT
  (S
    (NP (DT The) (NNP DI))
    (VP (VBZ agrees)
      (SBAR (IN that)
        (S
          (NP (NNP Methodological) (NNP naturalism))
          (ADVP (RB simply))
          (VP (VBZ requires)
            (SBAR (IN that)
              (S (, ,)
                (PP (IN in)
                  (S
                    (VP (VBG trying)
                      (S
                        (VP (TO to)
                          (VP (VB explain)
                            (NP
                              (NP (DT any) (JJ particular) (NN observation))
                              (CC or)
                              (NP (JJ experimental) (NN result)))))))))
                (, ,)
                (NP (DT an) (NN investigator))
                (VP (MD may) (RB not)
                  (VP (VB resort)
                    (PP (TO to)
                      (NP (NNS miracles)))))))))))
    (. .)))

det(DI-2, The-1)
nsubj(agrees-3, DI-2)
root(ROOT-0, agrees-3)
complm(requires-8, that-4)
nn(naturalism-6, Methodological-5)
nsubj(requires-8, naturalism-6)
advmod(requires-8, simply-7)
ccomp(agrees-3, requires-8)
complm(resort-26, that-9)
prepc_in(resort-26, trying-12)
aux(explain-14, to-13)
xcomp(trying-12, explain-14)
det(observation-17, any-15)
amod(observation-17, particular-16)
dobj(explain-14, observation-17)
amod(result-20, experimental-19)
dobj(explain-14, result-20)
conj_or(observation-17, result-20)
det(investigator-23, an-22)
nsubj(resort-26, investigator-23)
aux(resort-26, may-24)
neg(resort-26, not-25)
ccomp(requires-8, resort-26)
prep_to(resort-26, miracles-28)

(ROOT
  (S
    (VP
      (NP
        (NP (-LRB- -LRB-)
          (QP (CD 14))
          (-RRB- -RRB-))
        ('' '')
        (PP (VBG Note)
          (NP
            (NP (DT the) (NN word))
            (SBAR
              (S
                (VP (`` ``) (VBZ requires) ('' ''))))))))
    (. .)))

root(ROOT-0, 14-2)
det(word-7, the-6)
prep_note(14-2, word-7)
rcmod(word-7, requires-9)

(ROOT
  (S
    (ADVP (IN So)
      (PP (IN in)
        (NP (DT the) (JJ next) (NN sentence))))
    (, ,)
    (S
      (NP (DT the) (NNP DI))
      (VP
        (VP (VBZ waves)
          (NP (PRP$ its) (NNS hands)))
        (CC and)
        (VP (VBZ asserts)
          (NP (DT that)))))
    (: :) (`` ``)
    (S
      (NP (DT This) (NN argument))
      (VP (VBZ is)
        (ADVP (RB logically))
        (ADJP (JJ flawed))))
    (. .)))

advmod(waves-9, So-1)
det(sentence-5, the-3)
amod(sentence-5, next-4)
prep_in(So-1, sentence-5)
det(DI-8, the-7)
nsubj(waves-9, DI-8)
nsubj(asserts-13, DI-8)
root(ROOT-0, waves-9)
poss(hands-11, its-10)
dobj(waves-9, hands-11)
conj_and(waves-9, asserts-13)
dobj(asserts-13, that-14)
det(argument-18, This-17)
nsubj(flawed-21, argument-18)
cop(flawed-21, is-19)
advmod(flawed-21, logically-20)
ccomp(waves-9, flawed-21)

(ROOT
  (S
    (NP (NNP ''))
    (VP (VBZ Hilarious))
    (. .)))


(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP are)
      (NP (PRP they))
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP (VB claim)
              (SBAR
                (S
                  (NP (DT this) (NN argument))
                  (VP (VBZ is)
                    (ADVP (RB logically))
                    (ADJP (JJ flawed))))))))))
    (. ?)))

advmod(allowed-4, Why-1)
auxpass(allowed-4, are-2)
nsubjpass(allowed-4, they-3)
xsubj(claim-6, they-3)
root(ROOT-0, allowed-4)
aux(claim-6, to-5)
xcomp(allowed-4, claim-6)
det(argument-8, this-7)
nsubj(flawed-11, argument-8)
cop(flawed-11, is-9)
advmod(flawed-11, logically-10)
ccomp(claim-6, flawed-11)

(ROOT
  (S
    (S
      (NP (DT The) (NN supernatural))
      (VP (MD can)
        (ADVP (RB never))
        (VP (VB be)
          (NP
            (NP (NN part))
            (PP (IN of)
              (NP (NN science)))))))
    (CC and)
    (S
      (NP (NNP ID))
      (VP (VBZ admits)
        (SBAR (IN that)
          (S
            (NP (PRP$ their) (`` ``) (NN intelligent) (NN cause) ('' ''))
            (VP (MD could)
              (VP (VB be)
                (ADJP (JJ supernatural))))))))
    (. .)))

det(supernatural-2, The-1)
nsubj(part-6, supernatural-2)
aux(part-6, can-3)
neg(part-6, never-4)
cop(part-6, be-5)
root(ROOT-0, part-6)
prep_of(part-6, science-8)
nsubj(admits-11, ID-10)
conj_and(part-6, admits-11)
complm(supernatural-20, that-12)
poss(cause-16, their-13)
nn(cause-16, intelligent-15)
nsubj(supernatural-20, cause-16)
aux(supernatural-20, could-18)
cop(supernatural-20, be-19)
ccomp(admits-11, supernatural-20)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (PRP it))
    (VP (VBZ follows)
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP (MD can)
            (ADVP (RB never))
            (VP (VB be)
              (NP
                (NP (NN part))
                (PP (IN of)
                  (NP (NN science)))))))))
    (. .)))

advmod(follows-3, Therefore-1)
nsubj(follows-3, it-2)
root(ROOT-0, follows-3)
complm(part-9, that-4)
nsubj(part-9, ID-5)
aux(part-9, can-6)
neg(part-9, never-7)
cop(part-9, be-8)
ccomp(follows-3, part-9)
prep_of(part-9, science-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP$ their) (`` ``) (NN intelligent) (NN designer) ('' ''))
        (VP
          (VP (VBZ swoops)
            (PP (IN into)
              (NP
                (NP (DT this) (JJ natural) (NN world))
                (PP (IN on)
                  (NP (DT a) (`` ``) (NN whim) ('' ''))))))
          (CC and)
          (VP (VBZ does)
            (NP (NN something))))))
    (, ,)
    (NP (NN science))
    (VP (MD could)
      (ADVP (RB never))
      (VP (VB understand)
        (CC or)
        (VB explain)
        (NP (PRP it))))
    (. .)))

mark(swoops-7, If-1)
poss(designer-5, their-2)
nn(designer-5, intelligent-4)
nsubj(swoops-7, designer-5)
nsubj(does-18, designer-5)
advcl(understand-24, swoops-7)
det(world-11, this-9)
amod(world-11, natural-10)
prep_into(swoops-7, world-11)
det(whim-15, a-13)
prep_on(world-11, whim-15)
conj_and(swoops-7, does-18)
advcl(understand-24, does-18)
dobj(does-18, something-19)
nsubj(understand-24, science-21)
nsubj(explain-26, science-21)
aux(understand-24, could-22)
neg(understand-24, never-23)
root(ROOT-0, understand-24)
conj_or(understand-24, explain-26)
dobj(understand-24, it-27)

(ROOT
  (S
    (NP (NNP Science))
    (VP (MD would)
      (ADVP (RB always))
      (VP (VB say) ('' '')
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP (VB know))))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (DT this))
            (VP (VBD happened))))))
    (. .)))

nsubj(say-4, Science-1)
aux(say-4, would-2)
advmod(say-4, always-3)
root(ROOT-0, say-4)
nsubj(know-9, I-6)
aux(know-9, do-7)
neg(know-9, n't-8)
ccomp(say-4, know-9)
advmod(happened-12, why-10)
nsubj(happened-12, this-11)
advcl(say-4, happened-12)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (NP (NNP ID))
          (VP (VBZ admits)
            (NP
              (NP (DT that))
              (VP (VBG searching)
                (PP (IN for)
                  (NP (DT a) (JJ natural) (NN cause)))
                (S
                  (VP (TO to)
                    (VP (VB explain)
                      (NP (DT some) (JJ natural) (NN effect))))))))))
      (VP (MD could)
        (VP (VB be)
          (ADJP (JJ fruitless)))))
    (, ,) (RB then)
    (S
      (NP (NNP ID))
      (VP (MD should)
        (VP
          (VP (VB give)
            (PRT (RP up))
            (NP (DT that) (NN search)))
          (CC and)
          (VP (VB remain)
            (NP
              (NP (RB outside))
              (PP (IN of)
                (NP (NN science))))))))
    (. .)))

mark(admits-4, If-2)
nsubj(admits-4, ID-3)
csubj(fruitless-18, admits-4)
dobj(admits-4, that-5)
xsubj(explain-12, that-5)
partmod(that-5, searching-6)
det(cause-10, a-8)
amod(cause-10, natural-9)
prep_for(searching-6, cause-10)
aux(explain-12, to-11)
xcomp(searching-6, explain-12)
det(effect-15, some-13)
amod(effect-15, natural-14)
dobj(explain-12, effect-15)
aux(fruitless-18, could-16)
cop(fruitless-18, be-17)
root(ROOT-0, fruitless-18)
advmod(fruitless-18, then-20)
nsubj(give-23, ID-21)
aux(give-23, should-22)
ccomp(fruitless-18, give-23)
prt(give-23, up-24)
det(search-26, that-25)
dobj(give-23, search-26)
cop(outside-29, remain-28)
ccomp(fruitless-18, outside-29)
conj_and(give-23, outside-29)
prep_of(outside-29, science-31)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP ID))
        (VP (VBZ thinks)
          (SBAR (IN that)
            (S
              (NP (EX there))
              (ADVP (RB really))
              (VP (MD could)
                (VP (VB be)
                  (NP
                    (NP (DT a) (JJ natural) (NN cause))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ explains)
                          (NP (PRP$ their) (VBN supposed) (NN design) (NN effect)))))))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD should)
      (VP
        (VP (VB tell)
          (NP (PRP$ their) (JJ religious) (NNS supporters)))
        (CC and)
        (VP (VB stop)
          (S
            (VP (VBG taking)
              (NP (NN money))
              (PP (IN from)
                (NP (PRP them))))))))
    (. .)))

mark(thinks-3, If-1)
nsubj(thinks-3, ID-2)
advcl(tell-21, thinks-3)
complm(cause-11, that-4)
expl(cause-11, there-5)
advmod(cause-11, really-6)
aux(cause-11, could-7)
cop(cause-11, be-8)
det(cause-11, a-9)
amod(cause-11, natural-10)
ccomp(thinks-3, cause-11)
nsubj(explains-13, cause-11)
rcmod(cause-11, explains-13)
poss(effect-17, their-14)
amod(effect-17, supposed-15)
nn(effect-17, design-16)
dobj(explains-13, effect-17)
nsubj(tell-21, they-19)
nsubj(stop-26, they-19)
aux(tell-21, should-20)
root(ROOT-0, tell-21)
poss(supporters-24, their-22)
amod(supporters-24, religious-23)
dobj(tell-21, supporters-24)
conj_and(tell-21, stop-26)
xcomp(stop-26, taking-27)
dobj(taking-27, money-28)
prep_from(taking-27, them-30)

(ROOT
  (S
    (ADVP (IN So)
      (PP (IN in)
        (NP (DT the) (JJ next) (NN paragraph))))
    (, ,)
    (S
      (NP (VB let) (POS 's))
      (VP (VBP change)
        (NP (DT the) (NN subject))))
    (: :) (`` ``)
    (S
      (SBAR (IN While)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ true))
            (SBAR (IN that)
              (S
                (NP (NNP ID))
                (VP (VBZ permits)
                  (NP (JJ supernatural) (NN causation))))))))
      (, ,)
      (NP (DT the) (JJ same))
      (VP (VBZ is)
        (ADJP (JJ true)
          (PP (IN of)
            (NP (NN neo-Darwinism))))))
    (. .)))

advmod(change-9, So-1)
det(paragraph-5, the-3)
amod(paragraph-5, next-4)
prep_in(So-1, paragraph-5)
dep('s-8, let-7)
nsubj(change-9, 's-8)
root(ROOT-0, change-9)
det(subject-11, the-10)
dobj(change-9, subject-11)
mark(true-17, While-14)
nsubj(true-17, it-15)
cop(true-17, is-16)
advcl(true-27, true-17)
complm(permits-20, that-18)
nsubj(permits-20, ID-19)
ccomp(true-17, permits-20)
amod(causation-22, supernatural-21)
dobj(permits-20, causation-22)
det(same-25, the-24)
nsubj(true-27, same-25)
cop(true-27, is-26)
ccomp(change-9, true-27)
prep_of(true-27, neo-Darwinism-29)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ fundamental) (NN definition))
        (PP (IN of)
          (NP (NN science)))))
    (. .)))

nsubj(definition-5, This-1)
cop(definition-5, is-2)
det(definition-5, the-3)
amod(definition-5, fundamental-4)
root(ROOT-0, definition-5)
prep_of(definition-5, science-7)

(ROOT
  (S ('' '')
    (NP (NNP Again))
    (VP (VBZ hilarious))
    (. .)))

nsubj(hilarious-3, Again-2)
root(ROOT-0, hilarious-3)

(ROOT
  (S
    (ADVP (RB Fundamentally))
    (, ,)
    (NP (NN science))
    (VP (VBZ assumes)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (MD will)
            (ADVP (RB never))
            (VP (VB be)
              (NP
                (NP (DT a) (JJ supernatural) (NN cause))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ produces)
                      (NP (DT a) (JJ natural) (NN effect)))))))))))
    (. .)))

advmod(assumes-4, Fundamentally-1)
nsubj(assumes-4, science-3)
root(ROOT-0, assumes-4)
complm(cause-12, that-5)
expl(cause-12, there-6)
aux(cause-12, will-7)
neg(cause-12, never-8)
cop(cause-12, be-9)
det(cause-12, a-10)
amod(cause-12, supernatural-11)
ccomp(assumes-4, cause-12)
nsubj(produces-14, cause-12)
rcmod(cause-12, produces-14)
det(effect-17, a-15)
amod(effect-17, natural-16)
dobj(produces-14, effect-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT this))
        (VP (VBD happened))))
    (, ,)
    (NP (NN science))
    (VP (MD would)
      (VP (VB be)
        (ADJP (`` ``) (JJ baffled) ('' ''))))
    (. .)))

mark(happened-3, If-1)
nsubj(happened-3, this-2)
advcl(baffled-9, happened-3)
nsubj(baffled-9, science-5)
aux(baffled-9, would-6)
cop(baffled-9, be-7)
root(ROOT-0, baffled-9)

(ROOT
  (S
    (S
      (NP (NNP Science))
      (VP (MD would)
        (VP (VB say) ('' ''))))
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (ADVP (RB yet))))
    (. .)))

nsubj(say-3, Science-1)
aux(say-3, would-2)
dep(know-8, say-3)
nsubj(know-8, I-5)
aux(know-8, do-6)
neg(know-8, n't-7)
root(ROOT-0, know-8)
advmod(know-8, yet-9)

(ROOT
  (S ('' '')
    (NP (NNP Science))
    (VP (MD would)
      (VP (VB continue)
        (S
          (VP (TO to)
            (VP (VB look)
              (PP (IN for)
                (NP (DT a) (JJ natural) (NN cause)))
              (ADVP (RB forever)))))))
    (. .)))

nsubj(continue-4, Science-2)
xsubj(look-6, Science-2)
aux(continue-4, would-3)
root(ROOT-0, continue-4)
aux(look-6, to-5)
xcomp(continue-4, look-6)
det(cause-10, a-8)
amod(cause-10, natural-9)
prep_for(look-6, cause-10)
advmod(look-6, forever-11)

(ROOT
  (S
    (NP (NNP Science))
    (ADVP (RB never))
    (VP (VBZ gives)
      (PRT (RP up)))
    (. .)))

nsubj(gives-3, Science-1)
neg(gives-3, never-2)
root(ROOT-0, gives-3)
prt(gives-3, up-4)

(ROOT
  (FRAG
    (ADVP (RB Maybe))
    (SBAR (IN that)
      (S
        (NP
          (NP (NNP Nobel) (NNP Prize))
          (PP (IN for)
            (NP (DT a) (JJ new) (JJ natural) (NN law) (NN discovery))))
        (VP (MD will)
          (VP (VB be)
            (VP (VBN found)
              (NP (JJ next) (NN year)))))))
    (. .)))

root(ROOT-0, Maybe-1)
dep(found-13, that-2)
nn(Prize-4, Nobel-3)
nsubjpass(found-13, Prize-4)
det(discovery-10, a-6)
amod(discovery-10, new-7)
amod(discovery-10, natural-8)
nn(discovery-10, law-9)
prep_for(Prize-4, discovery-10)
aux(found-13, will-11)
auxpass(found-13, be-12)
dep(Maybe-1, found-13)
amod(year-15, next-14)
tmod(found-13, year-15)

(ROOT
  (S
    (NP (DT The) (NNP DI))
    (VP (VBZ has)
      (VP (VBN spent)
        (NP
          (NP (NNS millions))
          (PP (IN of)
            (NP (NNS dollars))))
        (PP (IN on)
          (NP
            (NP (PRP$ their) (NN campaign))
            (PP (IN of)
              (NP (NN propaganda)))))))
    (. .)))

det(DI-2, The-1)
nsubj(spent-4, DI-2)
aux(spent-4, has-3)
root(ROOT-0, spent-4)
dobj(spent-4, millions-5)
prep_of(millions-5, dollars-7)
poss(campaign-10, their-9)
prep_on(spent-4, campaign-10)
prep_of(campaign-10, propaganda-12)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD may)
      (VP (VB claim)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (VP (VBG spending)
                (NP (NNS dollars))
                (PP (IN on) (`` ``)
                  (NP (NN research))
                  ('' ''))))))))
    (. .)))

nsubj(claim-3, They-1)
aux(claim-3, may-2)
root(ROOT-0, claim-3)
complm(spending-7, that-4)
nsubj(spending-7, they-5)
aux(spending-7, are-6)
ccomp(claim-3, spending-7)
dobj(spending-7, dollars-8)
prep_on(spending-7, research-11)

(ROOT
  (SQ (CC But)
    (VBZ is)
    (NP (PRP it))
    (NP
      (NP (NN research))
      (S
        (VP (TO to)
          (VP (VB find)
            (NP
              (NP (DT a) (JJ natural) (NN cause))
              (PP (IN for)
                (NP (PRP$ their) (JJ supposed) (JJ natural) (`` ``) (NN design) (NN effect) ('' ''))))))))
    (. ?)))

cc(research-4, But-1)
cop(research-4, is-2)
nsubj(research-4, it-3)
root(ROOT-0, research-4)
aux(find-6, to-5)
infmod(research-4, find-6)
det(cause-9, a-7)
amod(cause-9, natural-8)
dobj(find-6, cause-9)
poss(effect-16, their-11)
amod(effect-16, supposed-12)
amod(effect-16, natural-13)
nn(effect-16, design-15)
prep_for(cause-9, effect-16)

(ROOT
  (S
    (NP (DT The) (NNP DI))
    (VP (VBZ claims) (: :) (`` ``)
      (S
        (NP (NNP ID))
        (VP (VBZ is) (RB not)
          (NP
            (NP (DT an) (NN appeal))
            (PP (TO to)
              (NP
                (NP (DT a) (JJ supernatural) (NN cause))
                (`` ``)
                (NX
                  (S (CC but)
                    (NP (DT that))
                    (VP (VBZ is) (RB not)
                      (NP (DT the) (JJ right) (NN question)))))))))))
    (. .)))

det(DI-2, The-1)
nsubj(claims-3, DI-2)
root(ROOT-0, claims-3)
nsubj(appeal-10, ID-6)
cop(appeal-10, is-7)
neg(appeal-10, not-8)
det(appeal-10, an-9)
ccomp(claims-3, appeal-10)
det(cause-14, a-12)
amod(cause-14, supernatural-13)
dep(question-22, cause-14)
cc(question-22, but-16)
nsubj(question-22, that-17)
cop(question-22, is-18)
neg(question-22, not-19)
det(question-22, the-20)
amod(question-22, right-21)
prep_to(appeal-10, question-22)

(ROOT
  (FRAG
    (PP (IN Of)
      (NP (NN course) (RB not)))
    (. .)))

root(ROOT-0, Of-1)
pobj(Of-1, course-2)
neg(course-2, not-3)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP are)
        (ADVP (RB forever))
        (PP (IN in)
          (NP
            (NP (DT a) (NN state))
            (PP (IN of))
            ('' '')
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB know) ('' '')
                    (SBAR (IN so)
                      (S
                        (NP (DT that))
                        (ADVP (RB really))
                        (VP (VBZ means))))))))))))
    ('' '')
    (VP (VBD Let)
      (SBAR
        (S
          (NP (PRP 's))
          (VP (VBP do) (RB n't)
            (VP (VB go)
              (ADVP (RB there)))))))
    (. .)))

nsubj(are-2, They-1)
ccomp(Let-19, are-2)
csubj(Let-19, are-2)
advmod(are-2, forever-3)
det(state-6, a-5)
prep_in(are-2, state-6)
dobj(know-12, state-6)
prep(state-6, of-7)
nsubj(know-12, I-9)
aux(know-12, do-10)
neg(know-12, n't-11)
rcmod(state-6, know-12)
mark(means-17, so-14)
nsubj(means-17, that-15)
advmod(means-17, really-16)
advcl(know-12, means-17)
root(ROOT-0, Let-19)
nsubj(go-23, 's-20)
aux(go-23, do-21)
neg(go-23, n't-22)
ccomp(Let-19, go-23)
advmod(go-23, there-24)

(ROOT
  (S ('' '')
    (S (IN So)
      (NP (PRP they))
      (VP (MD can)
        (ADVP (RB never))
        (VP (VB do)
          (NP (JJ real) (JJ scientific) (NN research))
          (PP (IN into)
            (NP
              (NP (DT the) (NN question))
              (PP (IN of)
                (NP (NNP WHY))))))))
    (CC and)
    (S
      (ADVP (RB HOW))
      (NP (DT this) (NN cause))
      (VP (VBZ produces)
        (NP (DT this) (NN effect))))
    (. .)))

dep(do-6, So-2)
nsubj(do-6, they-3)
aux(do-6, can-4)
neg(do-6, never-5)
root(ROOT-0, do-6)
amod(research-9, real-7)
amod(research-9, scientific-8)
dobj(do-6, research-9)
det(question-12, the-11)
prep_into(do-6, question-12)
prep_of(question-12, WHY-14)
advmod(produces-19, HOW-16)
det(cause-18, this-17)
nsubj(produces-19, cause-18)
conj_and(do-6, produces-19)
det(effect-21, this-20)
dobj(produces-19, effect-21)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD can)
      (ADVP (RB never))
      (VP (VB come)
        (PRT (RP up))
        (PP (IN with)
          (NP (DT a) (JJ scientific) (NN explanation)))))
    (. .)))

nsubj(come-4, They-1)
aux(come-4, can-2)
neg(come-4, never-3)
root(ROOT-0, come-4)
prt(come-4, up-5)
det(explanation-9, a-7)
amod(explanation-9, scientific-8)
prep_with(come-4, explanation-9)

(ROOT
  (PRN (-LRB- -LRB-)
    (FRAG (CC And)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD would)
            (VP (VB assume)
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP
                      (NP (NN something))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (ADVP (RB actually))
                          (VP (VBZ needs)
                            (S
                              (VP (VBG explaining))))))))))))))
      (. .))
    (-RRB- -RRB-)))

dep(assume-5, And-2)
nsubj(assume-5, that-3)
aux(assume-5, would-4)
root(ROOT-0, assume-5)
complm(is-8, that-6)
expl(is-8, there-7)
ccomp(assume-5, is-8)
nsubj(is-8, something-9)
nsubj(needs-12, something-9)
advmod(needs-12, actually-11)
rcmod(something-9, needs-12)
xcomp(needs-12, explaining-13)

(ROOT
  (S (CC And)
    (NP (PRP$ their) (NN propaganda))
    (VP (VBZ continues) (: :) (`` ``)
      (S
        (ADVP (RBR More) (RB importantly))
        (, ,)
        (NP (DT the) (NN design))
        (VP (MD can)
          (VP (VB be)
            (ADVP (RB strongly))
            (VP (VBN inferred)
              (ADVP (RB regardless)
                (PP (IN of)
                  (SBAR (IN whether)
                    (S
                      (NP (DT the) (NN designer))
                      (VP (VBZ is)
                        (ADJP (JJ natural)
                          (CC or)
                          (JJ supernatural))))))))))))
    (. .)))

cc(continues-4, And-1)
poss(propaganda-3, their-2)
nsubj(continues-4, propaganda-3)
root(ROOT-0, continues-4)
advmod(importantly-8, More-7)
advmod(inferred-15, importantly-8)
det(design-11, the-10)
nsubjpass(inferred-15, design-11)
aux(inferred-15, can-12)
auxpass(inferred-15, be-13)
advmod(inferred-15, strongly-14)
ccomp(continues-4, inferred-15)
complm(natural-22, whether-18)
det(designer-20, the-19)
nsubj(natural-22, designer-20)
nsubj(supernatural-24, designer-20)
cop(natural-22, is-21)
prepc_regardless_of(inferred-15, natural-22)
prepc_regardless_of(inferred-15, supernatural-24)
conj_or(natural-22, supernatural-24)

(ROOT
  (NP (NNP '') (NNP Baloney) (. .)))


(ROOT
  (S
    (NP (DT No) (JJ evolutionary) (NN scientist))
    (VP (VBZ agrees)
      (PP (IN with)
        (NP (DT that) (NN assertion))))
    (. .)))

det(scientist-3, No-1)
amod(scientist-3, evolutionary-2)
nsubj(agrees-4, scientist-3)
root(ROOT-0, agrees-4)
det(assertion-7, that-6)
prep_with(agrees-4, assertion-7)

(ROOT
  (FRAG (CC And)
    (NP
      (NP
        (ADVP (RB then))
        (PRP$ their) (JJ final) (NN statement))
      (: :)
      (S (`` ``)
        (NP
          (NP (DT The) (NN theory))
          (PP (IN of)
            (NP (NNP ID))))
        (VP (VBZ is)
          (ADVP (RB simply))
          (NP (DT an) (NN effort))
          (S
            (VP (TO to)
              (VP
                (ADVP (RB empirically))
                (VB detect)
                (SBAR (IN whether)
                  (S
                    (NP
                      (NP (DT the) (JJ apparent) (NN design))
                      (PP (IN in)
                        (NP
                          (NP (NN nature))
                          (VP (VBN acknowledged)
                            (PP (IN by)
                              (NP
                                (ADJP (RB virtually) (DT all))
                                (NNS biologists)))))))
                    (VP (VBZ is)
                      (NP
                        (NP (JJ genuine) (NN design))
                        (PRN (-LRB- -LRB-)
                          (NP
                            (NP (DT the) (NN product))
                            (PP (IN of)
                              (NP (DT an) (JJ intelligent) (NN cause))))
                          (-RRB- -RRB-))))))))
            ('' '')))))
    (SBAR
      (S
        (NP (DT A) (`` ``) (NN theory) ('' ''))
        (VP (MD must)
          (VP (VB do)
            (PP (RBR more) (IN than)
              (VP (`` ``) (VB detect) ('' '')))))))
    (. .)))

dep(statement-5, And-1)
advmod(statement-5, then-2)
poss(statement-5, their-3)
amod(statement-5, final-4)
root(ROOT-0, statement-5)
det(theory-9, The-8)
nsubj(effort-15, theory-9)
prep_of(theory-9, ID-11)
cop(effort-15, is-12)
advmod(effort-15, simply-13)
det(effort-15, an-14)
dep(statement-5, effort-15)
aux(detect-18, to-16)
advmod(detect-18, empirically-17)
xcomp(effort-15, detect-18)
complm(design-32, whether-19)
det(design-22, the-20)
amod(design-22, apparent-21)
nsubj(design-32, design-22)
prep_in(design-22, nature-24)
partmod(nature-24, acknowledged-25)
advmod(all-28, virtually-27)
amod(biologists-29, all-28)
agent(acknowledged-25, biologists-29)
cop(design-32, is-30)
amod(design-32, genuine-31)
ccomp(detect-18, design-32)
det(product-35, the-34)
dep(design-32, product-35)
det(cause-39, an-37)
amod(cause-39, intelligent-38)
prep_of(product-35, cause-39)
det(theory-44, A-42)
nsubj(do-47, theory-44)
aux(do-47, must-46)
dep(statement-5, do-47)
advmod(than-49, more-48)
prep(do-47, than-49)
dep(than-49, detect-51)

(ROOT
  (S
    (NP (DT A) (NN theory))
    (VP (MD must)
      (VP (VB EXPLAIN)
        (SBARQ
          (WHADVP (WRB WHY)))))
    (. .)))

det(theory-2, A-1)
nsubj(EXPLAIN-4, theory-2)
aux(EXPLAIN-4, must-3)
root(ROOT-0, EXPLAIN-4)
dep(EXPLAIN-4, WHY-5)

(ROOT
  (S
    (NP (DT The) (JJ right) (NN question))
    (VP (VBZ is)
      (SQ (VBZ does)
        (NP (NNP ID))
        (VP (VB ALLOW)
          (NP (DT a) (JJ supernatural) (NN cause)))))
    (. ?)))

det(question-3, The-1)
amod(question-3, right-2)
nsubj(is-4, question-3)
root(ROOT-0, is-4)
aux(ALLOW-7, does-5)
nsubj(ALLOW-7, ID-6)
dep(is-4, ALLOW-7)
det(cause-10, a-8)
amod(cause-10, supernatural-9)
dobj(ALLOW-7, cause-10)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (RB very) (JJ clear)
        (PP (IN from)
          (NP (DT this) (NN admission))))
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (MD can)
            (ADVP (RB never))
            (VP (VB be)
              (NP
                (NP (DT a) (`` ``) (NN theory))
                (PP (IN of)
                  (NP (NNP ID) ('' '')))))))))
    (. .)))

dep(clear-5, So-1)
nsubj(clear-5, it-2)
cop(clear-5, is-3)
advmod(clear-5, very-4)
root(ROOT-0, clear-5)
det(admission-8, this-7)
prep_from(clear-5, admission-8)
complm(theory-16, that-9)
expl(theory-16, there-10)
aux(theory-16, can-11)
neg(theory-16, never-12)
cop(theory-16, be-13)
det(theory-16, a-14)
ccomp(clear-5, theory-16)
prep_of(theory-16, ID-18)

(ROOT
  (S
    (NP (DT A) (JJ supernatural) (NN cause))
    (VP
      (VP (VBZ is)
        (NP
          (NP (RB outside))
          (PP (IN of)
            (NP (NN science)))))
      (CC and)
      (VP (MD can)
        (ADVP (RB never))
        (VP (VB be)
          (VP (VBN used)
            (S
              (VP (TO to)
                (VP (VB explain)
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (NN something))
                      (VP (VBZ happens)
                        (PP (IN in)
                          (NP (DT the) (JJ natural) (NN world)))))))))))))
    (. .)))

det(cause-3, A-1)
amod(cause-3, supernatural-2)
nsubj(outside-5, cause-3)
nsubjpass(used-12, cause-3)
cop(outside-5, is-4)
root(ROOT-0, outside-5)
prep_of(outside-5, science-7)
aux(used-12, can-9)
neg(used-12, never-10)
auxpass(used-12, be-11)
conj_and(outside-5, used-12)
aux(explain-14, to-13)
xcomp(used-12, explain-14)
advmod(happens-17, why-15)
nsubj(happens-17, something-16)
advcl(explain-14, happens-17)
det(world-21, the-19)
amod(world-21, natural-20)
prep_in(happens-17, world-21)

(ROOT
  (SBARQ
    (SBAR (RB So))
    (, ,)
    (SQ (VBZ does)
      (NP (`` ``) (JJ intelligent) (NN design) ('' ''))
      (VP (VB have)
        (NP (JJ scientific) (NN merit))))
    (. ?)))

dep(have-8, So-1)
aux(have-8, does-3)
amod(design-6, intelligent-5)
nsubj(have-8, design-6)
root(ROOT-0, have-8)
amod(merit-10, scientific-9)
dobj(have-8, merit-10)

(ROOT
  (FRAG
    (PP (IN Of)
      (NP (NN course) (RB not)))
    (. .)))

root(ROOT-0, Of-1)
pobj(Of-1, course-2)
neg(course-2, not-3)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ does))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (MD can)
      (ADVP (RB never))
      (VP (VB be)
        (NP (NN science))))
    (. .)))

mark(does-3, If-1)
nsubj(does-3, it-2)
advcl(science-10, does-3)
advmod(science-10, then-5)
nsubj(science-10, it-6)
aux(science-10, can-7)
neg(science-10, never-8)
cop(science-10, be-9)
root(ROOT-0, science-10)

(ROOT
  (S ('' '')
    (NP (NNS Critics))
    (VP (MD will)
      (ADVP (RB immediately))
      (VP (VB reply)
        (SBAR (IN that)
          (S
            (SBAR (IN while)
              (S
                (NP (NNP ID))
                (VP (MD may) (RB not)
                  (ADVP (RB specifically))
                  (VP (VB invoke)
                    (NP (JJ supernatural) (NN causation))))))
            (, ,)
            (NP (PRP it))
            (VP (VBZ leaves)
              (VP (VB open)
                (NP
                  (NP (DT the) (NN possibility))
                  (SBAR
                    (S
                      (NP (EX there))
                      (VP (VBD was)
                        (NP (DT a) (JJ supernatural) (NN creator))))))))))))
    (. .)))

nsubj(reply-5, Critics-2)
aux(reply-5, will-3)
advmod(reply-5, immediately-4)
root(ROOT-0, reply-5)
complm(leaves-17, that-6)
mark(invoke-12, while-7)
nsubj(invoke-12, ID-8)
aux(invoke-12, may-9)
neg(invoke-12, not-10)
advmod(invoke-12, specifically-11)
advcl(leaves-17, invoke-12)
amod(causation-14, supernatural-13)
dobj(invoke-12, causation-14)
nsubj(leaves-17, it-16)
ccomp(reply-5, leaves-17)
xcomp(leaves-17, open-18)
det(possibility-20, the-19)
dobj(open-18, possibility-20)
expl(was-22, there-21)
rcmod(possibility-20, was-22)
det(creator-25, a-23)
amod(creator-25, supernatural-24)
nsubj(was-22, creator-25)

(ROOT
  (S
    (PP (IN For)
      (NP (DT this) (NN reason)))
    (, ,)
    (NP (PRP they))
    (VP (MD will)
      (VP
        (VP (VB argue)
          (SBAR (IN that)
            (S
              (PP (IN by)
                (S
                  (VP (VBG permitting)
                    (NP (JJ supernatural) (NN causation)))))
              (, ,)
              (NP (NNP ID))
              (VP
                (VP (MD may)
                  (VP (VB be)
                    (ADJP (JJ subject)
                      (PP (TO to)
                        (NP
                          (NP (DT the) (NN whim))
                          (PP (IN of)
                            (NP (DT a) (NN deity))))))))
                (CC and)
                (VP (VBZ loses)
                  (NP (DT the) (NN predictability)))))))
        (CC and)
        (VP
          (ADVP (RB reliability))
          (JJ required)
          (PP (IN by)
            (NP (JJ methodological) (NN naturalism))))))
    (. .)))

det(reason-3, this-2)
prep_for(argue-7, reason-3)
nsubj(argue-7, they-5)
nsubj(required-30, they-5)
aux(argue-7, will-6)
root(ROOT-0, argue-7)
complm(subject-17, that-8)
prepc_by(subject-17, permitting-10)
amod(causation-12, supernatural-11)
dobj(permitting-10, causation-12)
nsubj(subject-17, ID-14)
nsubj(loses-25, ID-14)
aux(subject-17, may-15)
cop(subject-17, be-16)
ccomp(argue-7, subject-17)
det(whim-20, the-19)
prep_to(subject-17, whim-20)
det(deity-23, a-22)
prep_of(whim-20, deity-23)
ccomp(argue-7, loses-25)
conj_and(subject-17, loses-25)
det(predictability-27, the-26)
dobj(loses-25, predictability-27)
advmod(required-30, reliability-29)
conj_and(argue-7, required-30)
amod(naturalism-33, methodological-32)
prep_by(required-30, naturalism-33)

(ROOT
  (S
    (NP (NNP ''))
    (PP (IN Of)
      (NP (NN course)))
    (. .)))

dep(''-1, Of-2)
pobj(Of-2, course-3)

(ROOT
  (S (CC And)
    (NP (DT that))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD can)
            (ADVP (RB never))
            (VP (VB be)
              (NP (NN science)))))))
    (. .)))

cc(means-3, And-1)
nsubj(means-3, that-2)
root(ROOT-0, means-3)
nsubj(science-8, it-4)
aux(science-8, can-5)
neg(science-8, never-6)
cop(science-8, be-7)
ccomp(means-3, science-8)

