(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT the) (NN age) (JJ old) (NN question)))
    (. .)))

nsubj(question-6, This-1)
cop(question-6, is-2)
det(question-6, the-3)
nn(question-6, age-4)
amod(question-6, old-5)
root(ROOT-0, question-6)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ has)
      (VP (VBN been)
        (NP
          (NP (DT the) (NN battle))
          (PP (IN of)
            (NP (NNS philosophers))))
        (PP (IN for)
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (NN time)))))))
    (. .)))

nsubj(battle-5, This-1)
aux(battle-5, has-2)
cop(battle-5, been-3)
det(battle-5, the-4)
root(ROOT-0, battle-5)
prep_of(battle-5, philosophers-7)
prep_for(battle-5, all-9)
prep_of(all-9, time-11)

(ROOT
  (S
    (NP (JJ Great) (NNS minds))
    (VP (VBP have)
      (VP (VBN struggled)
        (PP (IN with)
          (NP (PRP it)))))
    (. .)))

amod(minds-2, Great-1)
nsubj(struggled-4, minds-2)
aux(struggled-4, have-3)
root(ROOT-0, struggled-4)
prep_with(struggled-4, it-6)

(ROOT
  (S
    (NP (NNPS Nations))
    (VP (VBP have)
      (VP (VBN died)
        (S
          (VP (VBG fighting)
            (PRT (RP over))
            (NP (PRP it))))))
    (. .)))

nsubj(died-3, Nations-1)
aux(died-3, have-2)
root(ROOT-0, died-3)
xcomp(died-3, fighting-4)
prt(fighting-4, over-5)
dobj(fighting-4, it-6)

(ROOT
  (SQ (VBP Are)
    (NP (PRP we))
    (VP (VBN created)
      (PP (CC or)
        (NP (DT an) (NN accident))))
    (. ?)))

auxpass(created-3, Are-1)
nsubjpass(created-3, we-2)
root(ROOT-0, created-3)
prep(created-3, or-4)
det(accident-6, an-5)
dep(or-4, accident-6)

(ROOT
  (SQ
    (SQ (VBP Are)
      (NP (PRP we) (NNS machines))
      (VP (VBG choosing)
        (PP (IN between)
          (NP
            (ADJP (JJ incorrect)
              (CC and)
              (JJ correct))
            (NNS responses)))))
    (, ,)
    (CC or)
    (SQ (VBP are)
      (NP (PRP we))
      (VP (VBN sentient)
        (S
          (VP (VBG being)
            (NP
              (NP (NN choosing))
              (PP (IN between)
                (ADJP (JJ good)
                  (CC and)
                  (JJ evil))))))))
    (. ?)))

aux(choosing-4, Are-1)
dep(machines-3, we-2)
nsubj(choosing-4, machines-3)
root(ROOT-0, choosing-4)
amod(responses-9, incorrect-6)
conj_and(incorrect-6, correct-8)
amod(responses-9, correct-8)
prep_between(choosing-4, responses-9)
auxpass(sentient-14, are-12)
nsubjpass(sentient-14, we-13)
conj_or(choosing-4, sentient-14)
cop(choosing-16, being-15)
xcomp(sentient-14, choosing-16)
prep_between(choosing-16, good-18)
prep_between(choosing-16, evil-20)
conj_and(good-18, evil-20)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD could)
      (NP (PRP you))
      (VP (RB not) (VB teach)
        (NP (DT this))))
    (. ?)))

advmod(teach-5, How-1)
aux(teach-5, could-2)
nsubj(teach-5, you-3)
neg(teach-5, not-4)
root(ROOT-0, teach-5)
dobj(teach-5, this-6)

