(ROOT
  (FRAG
    (NP (RB Just) (JJ curious))
    (SBAR (CC but)
      (WHNP (WP what))
      (SQ
        (VP (VBZ does)
          (SBAR
            (S
              (NP
                (NP (DT the) (NNS types))
                (PP (IN of)
                  (NP (NN rock))))
              (VP (VBP have)
                (PP (TO to))
                (PP (IN with)
                  (NP (JJ ex) (NN nihilo))))))))
      (. .))))

advmod(curious-2, Just-1)
root(ROOT-0, curious-2)
cc(does-5, but-3)
dep(does-5, what-4)
dep(curious-2, does-5)
det(types-7, the-6)
nsubj(have-10, types-7)
prep_of(types-7, rock-9)
ccomp(does-5, have-10)
prep(have-10, to-11)
amod(nihilo-14, ex-13)
prep_with(have-10, nihilo-14)

(ROOT
  (S
    (NP (NNP Evolution))
    (ADVP (RB also))
    (VP (VBZ believes)
      (NP (DT the))
      (SBAR (IN that) (, ,)
        (S (`` ``)
          (NP
            (NP (NN out))
            (PP (IN of)
              (NP (NN nothing))))
          ('' '')
          (VP (VBD came)
            (NP (NN everything))))))
    (. .)))

nsubj(believes-3, Evolution-1)
advmod(believes-3, also-2)
root(ROOT-0, believes-3)
dobj(believes-3, the-4)
complm(came-12, that-5)
nsubj(came-12, out-8)
prep_of(out-8, nothing-10)
ccomp(believes-3, came-12)
dobj(came-12, everything-13)

(ROOT
  (S
    (S
      (NP (DT The) (NN difference))
      (VP (VBZ is)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (NN can) (NN life))
              (: --)
              (NP (NN mind))
              (, ,))
            (VP (MD will))))))
    (, ,)
    (NP (NNS emotions))
    (VP (VBP come)
      (PP (IN from)
        (NP (JJ inanament) (NN matter))))
    (. ?)))

det(difference-2, The-1)
nsubj(is-3, difference-2)
ccomp(come-13, is-3)
advmod(will-10, how-4)
nn(life-6, can-5)
nsubj(will-10, life-6)
dep(life-6, mind-8)
ccomp(is-3, will-10)
nsubj(come-13, emotions-12)
root(ROOT-0, come-13)
amod(matter-16, inanament-15)
prep_from(come-13, matter-16)

(ROOT
  (S
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (RBR more) (JJ logical)
              (S
                (VP (TO to)
                  (VP (VB think))))))))
      (, ,)
      (ADVP (RB just) (RB as))
      (NP (DT a) (NN star))
      (VP (VBZ collapses)
        (CC and)
        (VBZ creates)
        (NP (DT another) (NN star))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (NP
          (NP (JJ intelligent) (, ,) (JJ personal) (NNS beings))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD must)
                (VP (VB have)
                  (VP (VBN been)
                    (VP (VBN created)
                      (PP (IN by)
                        (NP (DT a)
                          (ADJP (JJR greater) (JJ intelligent))
                          (, ,) (JJ personal) (NN being))))))))))))
    (. .)))

advmod(logical-5, When-1)
nsubj(logical-5, it-2)
cop(logical-5, is-3)
advmod(logical-5, more-4)
advcl(collapses-13, logical-5)
aux(think-7, to-6)
xcomp(logical-5, think-7)
advmod(as-10, just-9)
advmod(collapses-13, as-10)
det(star-12, a-11)
nsubj(collapses-13, star-12)
nsubj(creates-15, star-12)
root(ROOT-0, collapses-13)
conj_and(collapses-13, creates-15)
det(star-17, another-16)
dobj(collapses-13, star-17)
nsubj(beings-25, we-20)
cop(beings-25, are-21)
amod(beings-25, intelligent-22)
amod(beings-25, personal-24)
conj_and(collapses-13, beings-25)
nsubjpass(created-30, beings-25)
aux(created-30, must-27)
aux(created-30, have-28)
auxpass(created-30, been-29)
rcmod(beings-25, created-30)
det(being-37, a-32)
dep(intelligent-34, greater-33)
amod(being-37, intelligent-34)
amod(being-37, personal-36)
agent(created-30, being-37)

