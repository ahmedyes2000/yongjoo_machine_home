(ROOT
  (S
    (S
      (VP (VBG Naming)
        (NP (CD two)
          (ADJP (RB well) (VBN known))
          (NN ID) (NNS proponents))))
    (VP (VBZ does)
      (SBAR (RB not)
        (S
          (NP (DT a) (NN citation))
          (VP (VBP make)
            (S
              (VP (TO to)
                (VP (VB support)
                  (NP
                    (NP
                      (NP (NNP PvM) (POS 's))
                      (JJ twisted) (NN version))
                    (PP (IN of)
                      (NP (NNP ID) (NNS arguments)))))))))))
    (. .)))

csubj(does-7, Naming-1)
num(proponents-6, two-2)
advmod(known-4, well-3)
amod(proponents-6, known-4)
nn(proponents-6, ID-5)
dobj(Naming-1, proponents-6)
root(ROOT-0, does-7)
dep(make-11, not-8)
det(citation-10, a-9)
nsubj(make-11, citation-10)
xsubj(support-13, citation-10)
ccomp(does-7, make-11)
aux(support-13, to-12)
xcomp(make-11, support-13)
poss(version-17, PvM-14)
amod(version-17, twisted-16)
dobj(support-13, version-17)
nn(arguments-20, ID-19)
prep_of(version-17, arguments-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN asked)
          (PP (IN for)
            (NP (PRP them)))
          (ADVP (RB repeatedly)))))
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ 's)
        (VP (VBG dodging))))
    (. .)))

nsubj(asked-3, I-1)
aux(asked-3, 've-2)
root(ROOT-0, asked-3)
prep_for(asked-3, them-5)
advmod(asked-3, repeatedly-6)
nsubj(dodging-10, he-8)
aux(dodging-10, 's-9)
conj_and(asked-3, dodging-10)

(ROOT
  (S
    (NP
      (NP (DT A) (NN deck))
      (PP (IN of)
        (NP (NNS cards))))
    (VP (VBZ is)
      (VP (VBN cut)
        (PP (IN before)
          (S
            (VP (VBG dealing)
              (PP (IN as)
                (NP
                  (NP (DT a) (NN check))
                  (PP (IN on)
                    (NP (JJ intentional) (VBG sorting))))))))))
    (. .)))

det(deck-2, A-1)
nsubjpass(cut-6, deck-2)
prep_of(deck-2, cards-4)
auxpass(cut-6, is-5)
root(ROOT-0, cut-6)
prepc_before(cut-6, dealing-8)
det(check-11, a-10)
prep_as(dealing-8, check-11)
prep_on(check-11, intentional-13)
amod(intentional-13, sorting-14)

(ROOT
  (S (IN So)
    (NP (PRP we))
    (VP (MD could)
      (VP (VB go)
        (PP (IN through)
          (NP
            (NP (PDT all) (DT the) (NNS permutations))
            (PP (IN of)
              (NP
                (NP (NN flagellar) (NNS components))
                (, ,)
                (NP
                  (NP (DT the) (NN number)
                    (CC and)
                    (NN arrangement))
                  (PP (IN of)
                    (NP
                      (NP (NNS proteins))
                      (, ,)
                      (NP
                        (NP (DT the) (NNS nucleotides))
                        (VP
                          (VP (VBN needed)
                            (S
                              (VP (TO to)
                                (VP (VB code)
                                  (NP (PRP them))
                                  (ADVP (CC and)
                                    (RB so) (IN on))))))
                          (, ,)
                          (CC but)
                          (VP
                            (FRAG
                              (WHADVP (WRB why)))))))))))))))
    (. ?)))

dep(go-4, So-1)
nsubj(go-4, we-2)
aux(go-4, could-3)
root(ROOT-0, go-4)
predet(permutations-8, all-6)
det(permutations-8, the-7)
prep_through(go-4, permutations-8)
nn(components-11, flagellar-10)
prep_of(permutations-8, components-11)
det(number-14, the-13)
appos(components-11, number-14)
appos(components-11, arrangement-16)
conj_and(number-14, arrangement-16)
prep_of(number-14, proteins-18)
det(nucleotides-21, the-20)
appos(proteins-18, nucleotides-21)
xsubj(code-24, nucleotides-21)
dep(nucleotides-21, needed-22)
aux(code-24, to-23)
xcomp(needed-22, code-24)
dobj(code-24, them-25)
cc(on-28, and-26)
dep(on-28, so-27)
advmod(code-24, on-28)
dep(nucleotides-21, why-31)
conj_but(needed-22, why-31)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBD stumbled)
          (PP (IN upon)
            (NP (DT a) (JJ starter) (NN motor)))
          (PP (IN in)
            (NP
              (NP (DT the) (NN middle))
              (PP (IN of)
                (NP (DT a) (JJ remote) (NNP Amazonian) (NN jungle))))))))
    (, ,)
    (NP (PRP$ our) (NN experience))
    (VP (MD would)
      (ADVP (RB immediately))
      (VP (VB eliminate)
        (NP (PRP it))
        (PP (IN as)
          (NP
            (NP (DT a) (NN product))
            (PP (IN of)
              (NP (JJ environmental) (NN selection)))))))
    (. .)))

mark(stumbled-3, If-1)
nsubj(stumbled-3, we-2)
advcl(eliminate-21, stumbled-3)
det(motor-7, a-5)
amod(motor-7, starter-6)
prep_upon(stumbled-3, motor-7)
det(middle-10, the-9)
prep_in(stumbled-3, middle-10)
det(jungle-15, a-12)
amod(jungle-15, remote-13)
nn(jungle-15, Amazonian-14)
prep_of(middle-10, jungle-15)
poss(experience-18, our-17)
nsubj(eliminate-21, experience-18)
aux(eliminate-21, would-19)
advmod(eliminate-21, immediately-20)
root(ROOT-0, eliminate-21)
dobj(eliminate-21, it-22)
det(product-25, a-24)
prep_as(eliminate-21, product-25)
amod(selection-28, environmental-27)
prep_of(product-25, selection-28)

(ROOT
  (S
    (NP (DT The) (JJ exact) (JJ same))
    (VP (VBZ is)
      (ADJP (JJ true))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (JJ modern) (NN science))
          (VP (VBZ reveals)
            (NP
              (NP (DT an) (NNP IC) (NN structure))
              (PP (JJ such) (IN as)
                (NP
                  (NP (DT the) (NN flagellar) (NN motor))
                  (CC &)
                  (NP (NN assembly)))))))))
    (. .)))

det(same-3, The-1)
amod(same-3, exact-2)
nsubj(true-5, same-3)
cop(true-5, is-4)
root(ROOT-0, true-5)
advmod(reveals-9, when-6)
amod(science-8, modern-7)
nsubj(reveals-9, science-8)
advcl(true-5, reveals-9)
det(structure-12, an-10)
nn(structure-12, IC-11)
dobj(reveals-9, structure-12)
det(motor-17, the-15)
nn(motor-17, flagellar-16)
prep_such_as(structure-12, motor-17)
prep_such_as(structure-12, assembly-19)
conj_and(motor-17, assembly-19)

(ROOT
  (S
    (NP
      (NP (DT The) (NN absence))
      (PP (IN of)
        (NP (DT a) (JJ plausible) (JJ natural) (NN pathway))))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (DT the) (NN design) (NN inference))
          (VP (VBZ is)
            (ADJP (JJ valid))))))
    (. .)))

det(absence-2, The-1)
nsubj(means-8, absence-2)
det(pathway-7, a-4)
amod(pathway-7, plausible-5)
amod(pathway-7, natural-6)
prep_of(absence-2, pathway-7)
root(ROOT-0, means-8)
det(inference-11, the-9)
nn(inference-11, design-10)
nsubj(valid-13, inference-11)
cop(valid-13, is-12)
ccomp(means-8, valid-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NN appearance))
      (PP (IN of)
        (NP (PDT such) (DT a) (NN pathway))))
    (VP (MD would)
      (VP (VB falsify)
        (NP (NN design))))
    (. .)))

det(appearance-2, The-1)
nsubj(falsify-8, appearance-2)
predet(pathway-6, such-4)
det(pathway-6, a-5)
prep_of(appearance-2, pathway-6)
aux(falsify-8, would-7)
root(ROOT-0, falsify-8)
dobj(falsify-8, design-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have) (RB not)
      (VP (VBN focused)
        (PP (IN on)
          (NP (JJ pure) (NN chance)))
        (, ,)
        (ADVP (RB either))))
    (. .)))

nsubj(focused-4, I-1)
aux(focused-4, have-2)
neg(focused-4, not-3)
root(ROOT-0, focused-4)
amod(chance-7, pure-6)
prep_on(focused-4, chance-7)
advmod(focused-4, either-9)

(ROOT
  (S
    (S
      (NP (NN Regularity)
        (CC and)
        (NN chance))
      (VP (MD can)
        (VP (VB explain)
          (NP
            (NP (NN re-arrangement))
            (PP (IN of)
              (NP (VBG existing) (NNS systems)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD would)
        (PRN (-LRB- -LRB-)
          (ADVP (RB again))
          (-RRB- -RRB-))
        (VP (VB request)
          (S
            (NP (NNP PvM))
            (VP (VB produce)
              (S
                (NP (NNS citations))
                (VP (TO to)
                  (VP (VB support)
                    (NP (PRP$ his) (JJ central) (NN claim))
                    (SBAR (IN that)
                      (S
                        (NP (VBN specified) (NN information))
                        (VP (VBZ is)
                          (NP
                            (NP (DT an) (JJ emergent) (NN property))
                            (PP (IN of)
                              (NP (NN matter)))))))))))))))
    (. .)))

nsubj(explain-5, Regularity-1)
conj_and(Regularity-1, chance-3)
nsubj(explain-5, chance-3)
aux(explain-5, can-4)
root(ROOT-0, explain-5)
dobj(explain-5, re-arrangement-6)
amod(systems-9, existing-8)
prep_of(re-arrangement-6, systems-9)
nsubj(request-17, I-12)
aux(request-17, would-13)
dep(request-17, again-15)
conj_but(explain-5, request-17)
nsubj(produce-19, PvM-18)
ccomp(request-17, produce-19)
nsubj(support-22, citations-20)
aux(support-22, to-21)
xcomp(produce-19, support-22)
poss(claim-25, his-23)
amod(claim-25, central-24)
dobj(support-22, claim-25)
complm(property-32, that-26)
amod(information-28, specified-27)
nsubj(property-32, information-28)
cop(property-32, is-29)
det(property-32, an-30)
amod(property-32, emergent-31)
ccomp(support-22, property-32)
prep_of(property-32, matter-34)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB not)
          (VP (VB address)
            (NP
              (NP (JJ other) (NNS aspects))
              (PP (IN of)
                (NP (DT the) (NNP ID) (NN argument))))))))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP 've)
              (S
                (NP (PRP I))
                (VP (VBN excluded)
                  (NP (PRP them)))))))))
    (. .)))

complm(address-5, That-1)
nsubj(address-5, I-2)
aux(address-5, do-3)
neg(address-5, not-4)
csubj(mean-14, address-5)
amod(aspects-7, other-6)
dobj(address-5, aspects-7)
det(argument-11, the-9)
nn(argument-11, ID-10)
prep_of(aspects-7, argument-11)
aux(mean-14, does-12)
neg(mean-14, n't-13)
root(ROOT-0, mean-14)
nsubj('ve-16, I-15)
ccomp(mean-14, 've-16)
nsubj(excluded-18, I-17)
dep('ve-16, excluded-18)
dobj(excluded-18, them-19)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADVP (RB just))
        (VP (VBG addressing)
          (NP
            (NP (DT the) (JJ simple) (NN core))
            (PP (IN of)
              (NP (NNP ID)))))))
    (: :)
    (S
      (NP (NNP Design))
      (VP (VBZ eliminates)
        (NP (NN chance))
        (PP (IN as)
          (NP (DT a) (NN cause)))))
    (. .)))

nsubj(addressing-4, I-1)
aux(addressing-4, 'm-2)
advmod(addressing-4, just-3)
root(ROOT-0, addressing-4)
det(core-7, the-5)
amod(core-7, simple-6)
dobj(addressing-4, core-7)
prep_of(core-7, ID-9)
nsubj(eliminates-12, Design-11)
parataxis(addressing-4, eliminates-12)
dobj(eliminates-12, chance-13)
det(cause-16, a-15)
prep_as(eliminates-12, cause-16)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (NNP PvM))
        (ADVP (RB still))
        (VP (VBZ fails)
          (S
            (VP (TO to)
              (VP (VB understand)))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NN probability))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN measure))
              (PP (IN of)
                (NP (JJ random) (NNS outcomes))))))))
    (. .)))

dep(fails-4, What-1)
nsubj(fails-4, PvM-2)
xsubj(understand-6, PvM-2)
advmod(fails-4, still-3)
csubj(is-7, fails-4)
aux(understand-6, to-5)
xcomp(fails-4, understand-6)
root(ROOT-0, is-7)
complm(measure-12, that-8)
nsubj(measure-12, probability-9)
cop(measure-12, is-10)
det(measure-12, a-11)
ccomp(is-7, measure-12)
amod(outcomes-15, random-14)
prep_of(measure-12, outcomes-15)

(ROOT
  (S
    (NP (JJ Initial) (JJ biological) (NNS systems))
    (VP
      (VP (VBD formed)
        (PP (IN by)
          (NP
            (NP (NN chance) (NN collision))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ right) (NN stuff))
                (PP (IN in)
                  (NP (DT the) (JJ right) (NN environment)))))))
        (PP (IN at)
          (NP (DT the) (JJ right) (NN time)))
        (, ,)
        (VP (VBG growing)
          (ADJP
            (ADJP (JJR more))
            (CC and)
            (ADJP (RBR more) (JJ complex)))))
      (CC either)
      (VP (VBD happened))
      (CC or)
      (VP (VBD did) (RB not)))
    (. .)))

amod(systems-3, Initial-1)
amod(systems-3, biological-2)
nsubj(formed-4, systems-3)
nsubj(happened-27, systems-3)
nsubj(did-29, systems-3)
root(ROOT-0, formed-4)
nn(collision-7, chance-6)
prep_by(formed-4, collision-7)
det(stuff-11, the-9)
amod(stuff-11, right-10)
prep_of(collision-7, stuff-11)
det(environment-15, the-13)
amod(environment-15, right-14)
prep_in(stuff-11, environment-15)
det(time-19, the-17)
amod(time-19, right-18)
prep_at(formed-4, time-19)
dep(formed-4, growing-21)
acomp(growing-21, more-22)
advmod(complex-25, more-24)
acomp(growing-21, complex-25)
conj_and(more-22, complex-25)
preconj(formed-4, either-26)
conj_or(formed-4, happened-27)
conj_or(formed-4, did-29)
neg(did-29, not-30)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN question))
        (VP (VBZ is)
          (SBAR (IN whether)
            (S
              (NP
                (NP (DT some) (NN arrangement))
                (PP (IN of)
                  (NP (NN matter))))
              (VP (VBZ is)
                (ADJP (JJ random)
                  (CC or)
                  (VBN designed))))))))
    (, ,)
    (S
      (ADVP (RB then))
      (VP (VBG assuming)
        (NP (NN chance))))
    (VP (VBZ fills)
      (SBAR
        (S
          (NP (DT the) (NN gap))
          (ADVP (RB beforehand))
          (VP (VBZ is)
            (NP
              (NP (JJ classic) (NN question))
              (VP (VBG begging)))))))
    (. .)))

mark(is-4, If-1)
det(question-3, the-2)
nsubj(is-4, question-3)
advcl(fills-18, is-4)
complm(random-11, whether-5)
det(arrangement-7, some-6)
nsubjpass(random-11, arrangement-7)
nsubjpass(designed-13, arrangement-7)
prep_of(arrangement-7, matter-9)
auxpass(random-11, is-10)
ccomp(is-4, random-11)
ccomp(is-4, designed-13)
conj_or(random-11, designed-13)
advmod(assuming-16, then-15)
csubj(fills-18, assuming-16)
dobj(assuming-16, chance-17)
root(ROOT-0, fills-18)
det(gap-20, the-19)
nsubj(question-24, gap-20)
advmod(question-24, beforehand-21)
cop(question-24, is-22)
amod(question-24, classic-23)
ccomp(fills-18, question-24)
partmod(question-24, begging-25)

(ROOT
  (S
    (NP
      (NP (NNP PvM) (POS 's))
      (JJ circular) (NN proof))
    (ADVP (RB therefore))
    (VP (VBZ does) (RB n't)
      (VP (VB stand)))
    (. .)))

poss(proof-4, PvM-1)
amod(proof-4, circular-3)
nsubj(stand-8, proof-4)
advmod(stand-8, therefore-5)
aux(stand-8, does-6)
neg(stand-8, n't-7)
root(ROOT-0, stand-8)

(ROOT
  (S
    (NP
      (NP (PRP$ His) (NNS allusions))
      (PP (TO to)
        (NP
          (NP (NNS facts))
          (SBAR
            (WHPP (TO to)
              (WHNP (WDT which)))
            (S
              (NP (PRP he))
              (VP (VBZ offers)
                (NP
                  (NP (DT no) (NN support))
                  (, ,)
                  (ADJP (JJ other)
                    (PP (IN than)
                      (NP
                        (NP (DT the) (NN force))
                        (PP (IN of)
                          (NP
                            (NP (PRP$ his) (NN assertion))
                            (`` ``)
                            (S
                              (NP (NN regularity)
                                (CC and)
                                (NN chance))
                              (VP (MD can)
                                (VP (VB explain)
                                  (NP (NN information)
                                    (CC and)
                                    (NN complexity))
                                  (ADVP (RB quite) (RB well)))))
                            ('' ''))))))
                  (, ,))))))))
    (VP (VBP stand)
      (ADJP (RB wholly) (JJ unsupported)))
    (. .)))

poss(allusions-2, His-1)
nsubj(stand-32, allusions-2)
prep_to(allusions-2, facts-4)
rel(offers-8, which-6)
nsubj(offers-8, he-7)
rcmod(facts-4, offers-8)
det(support-10, no-9)
dobj(offers-8, support-10)
amod(support-10, other-12)
det(force-15, the-14)
prep_than(other-12, force-15)
poss(assertion-18, his-17)
prep_of(force-15, assertion-18)
nsubj(explain-24, regularity-20)
conj_and(regularity-20, chance-22)
nsubj(explain-24, chance-22)
aux(explain-24, can-23)
dep(assertion-18, explain-24)
dobj(explain-24, information-25)
dobj(explain-24, complexity-27)
conj_and(information-25, complexity-27)
advmod(well-29, quite-28)
advmod(explain-24, well-29)
root(ROOT-0, stand-32)
advmod(unsupported-34, wholly-33)
acomp(stand-32, unsupported-34)

(ROOT
  (S
    (INTJ (UH Okay))
    (VP (VB PvM))
    (. .)))

dep(PvM-2, Okay-1)
root(ROOT-0, PvM-2)

(ROOT
  (NP
    (NP (NN Support))
    (NP (DT that) (JJ last) (NN one))
    (. .)))

root(ROOT-0, Support-1)
det(one-4, that-2)
amod(one-4, last-3)
dep(Support-1, one-4)

(ROOT
  (S
    (VP (VB Cite)
      (NP
        (NP (DT the) (NN literature))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ demonstrates)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (NN information)
                    (CC and)
                    (NN complexity))
                  (VP (VBP are)
                    (ADVP (RB easily))
                    (VP (VBN explained)
                      (PP (IN by)
                        (NP (NN regularity)
                          (CC and)
                          (NN chance))))))))))))
    (. .)))

root(ROOT-0, Cite-1)
det(literature-3, the-2)
dobj(Cite-1, literature-3)
nsubj(demonstrates-5, literature-3)
rcmod(literature-3, demonstrates-5)
advmod(explained-12, how-6)
nsubjpass(explained-12, information-7)
conj_and(information-7, complexity-9)
nsubjpass(explained-12, complexity-9)
auxpass(explained-12, are-10)
advmod(explained-12, easily-11)
ccomp(demonstrates-5, explained-12)
agent(explained-12, regularity-14)
agent(explained-12, chance-16)
conj_and(regularity-14, chance-16)

(ROOT
  (S
    (NP (DT That))
    (VP (MD would)
      (VP (VB falsify)
        (NP
          (NP (DT a) (JJ central) (NN proposition))
          (PP (IN of)
            (NP (NNP ID))))))
    (. .)))

nsubj(falsify-3, That-1)
aux(falsify-3, would-2)
root(ROOT-0, falsify-3)
det(proposition-6, a-4)
amod(proposition-6, central-5)
dobj(falsify-3, proposition-6)
prep_of(proposition-6, ID-8)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (PRP you))
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD would)
                (VP (VB be)
                  (ADJP (JJ easy)))))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB eagerly))
    (VP (VBP await)
      (NP (DT the) (NN citation)))
    (. .)))

mark(said-3, Since-1)
nsubj(said-3, you-2)
advcl(await-11, said-3)
nsubj(easy-7, it-4)
aux(easy-7, would-5)
cop(easy-7, be-6)
ccomp(said-3, easy-7)
nsubj(await-11, I-9)
advmod(await-11, eagerly-10)
root(ROOT-0, await-11)
det(citation-13, the-12)
dobj(await-11, citation-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD can) (RB not)
      (VP (`` ``) (VB prove) ('' '')
        (NP
          (NP (NN design))
          (SBAR (IN because)
            (S
              (NP (PRP it))
              (VP (VBZ is) (RB n't)
                (NP
                  (NP (DT a) (NN measure))
                  (PP (IN of)
                    (NP (NN agency))))))))))
    (. .)))

nsubj(prove-5, It-1)
aux(prove-5, can-2)
neg(prove-5, not-3)
root(ROOT-0, prove-5)
dobj(prove-5, design-7)
mark(measure-13, because-8)
nsubj(measure-13, it-9)
cop(measure-13, is-10)
neg(measure-13, n't-11)
det(measure-13, a-12)
dep(design-7, measure-13)
prep_of(measure-13, agency-15)

(ROOT
  (SINV
    (ADVP (RB Probability))
    (VP (VBZ tells))
    (NP (PRP us))
    (SBAR
      (WHADVP (WRB how) (RB often))
      (S
        (VP (TO to)
          (VP (VB expect)
            (NP
              (NP (DT a) (JJ certain) (NN arrangement))
              (PP (IN of)
                (NP
                  (NP (DT a) (VBN given) (NN number))
                  (PP (IN of)
                    (NP
                      (NP (NNS items))
                      (PP (IN within)
                        (NP
                          (NP (DT the) (JJ whole) (NN set))
                          (PP (IN of)
                            (NP (NNS items))))))))))))))
    (. .)))

advmod(tells-2, Probability-1)
root(ROOT-0, tells-2)
nsubj(tells-2, us-3)
advmod(often-5, how-4)
advmod(expect-7, often-5)
aux(expect-7, to-6)
dep(tells-2, expect-7)
det(arrangement-10, a-8)
amod(arrangement-10, certain-9)
dobj(expect-7, arrangement-10)
det(number-14, a-12)
amod(number-14, given-13)
prep_of(arrangement-10, number-14)
prep_of(number-14, items-16)
det(set-20, the-18)
amod(set-20, whole-19)
prep_within(items-16, set-20)
prep_of(set-20, items-22)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP expect)
      (S
        (NP (JJ fellow) (NN poker) (NNS players))
        (VP (TO to)
          (VP (VB get)
            (NP
              (NP (NNS flushes)
                (CC and)
                (NNS straights))
              (CC and)
              (RB even)
              (NP (JJ straight) (NNS flushes)))))))
    (. .)))

nsubj(expect-2, We-1)
root(ROOT-0, expect-2)
amod(players-5, fellow-3)
nn(players-5, poker-4)
nsubj(get-7, players-5)
aux(get-7, to-6)
xcomp(expect-2, get-7)
dobj(get-7, flushes-8)
dobj(get-7, straights-10)
conj_and(flushes-8, straights-10)
dobj(get-7, even-12)
advmod(flushes-8, even-12)
conj_and(flushes-8, even-12)
amod(flushes-14, straight-13)
dep(flushes-8, flushes-14)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP know)
      (SBAR
        (S
          (NP (DT a) (JJ royal) (NN flush))
          (VP (VBZ is)
            (ADJP
              (ADJP (JJ possible))
              (CC but)
              (RB not)
              (ADJP (RB very) (JJ probable)))
            (SBAR (IN so)
              (S
                (NP (PRP we))
                (VP (MD might)
                  (ADVP (RB naturally))
                  (VP (VB suspect)
                    (NP (DT a) (NN fix))
                    (PP (IN on)
                      (NP (DT the) (NN deal)))
                    (SBAR (IN if)
                      (S
                        (NP (JJ several) (NN royal) (NNS flushes))
                        (VP (VBD were)
                          (VP (VBN dealt)
                            (PP (IN in)
                              (NP
                                (NP (DT an) (NN evening))
                                (PP (IN of)
                                  (NP (NNS cards)))))))))))))))))
    (. .)))

nsubj(know-2, We-1)
root(ROOT-0, know-2)
det(flush-5, a-3)
amod(flush-5, royal-4)
nsubj(possible-7, flush-5)
cop(possible-7, is-6)
ccomp(know-2, possible-7)
ccomp(know-2, not-9)
conj_but(possible-7, not-9)
neg(possible-7, not-9)
advmod(probable-11, very-10)
dep(possible-7, probable-11)
mark(suspect-16, so-12)
nsubj(suspect-16, we-13)
aux(suspect-16, might-14)
advmod(suspect-16, naturally-15)
advcl(possible-7, suspect-16)
det(fix-18, a-17)
dobj(suspect-16, fix-18)
det(deal-21, the-20)
prep_on(suspect-16, deal-21)
mark(dealt-27, if-22)
amod(flushes-25, several-23)
nn(flushes-25, royal-24)
nsubjpass(dealt-27, flushes-25)
auxpass(dealt-27, were-26)
advcl(suspect-16, dealt-27)
det(evening-30, an-29)
prep_in(dealt-27, evening-30)
prep_of(evening-30, cards-32)

(ROOT
  (S
    (S
      (VP (VBN Extend)
        (NP (DT that))
        (PP (TO to)
          (NP (DT a) (JJ running) (NN game)))
        (PP (IN over)
          (NP (JJ many) (NNS days)))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (ADJP (RBR less) (JJ suspicious))))
    (. .)))

root(ROOT-0, Extend-1)
dobj(Extend-1, that-2)
det(game-6, a-4)
amod(game-6, running-5)
prep_to(Extend-1, game-6)
amod(days-9, many-8)
prep_over(Extend-1, days-9)
nsubj(suspicious-14, we-11)
cop(suspicious-14, are-12)
advmod(suspicious-14, less-13)
conj_and(Extend-1, suspicious-14)

(ROOT
  (FRAG (WRB Why) (. ?)))

root(ROOT-0, Why-1)

(ROOT
  (S
    (PP (IN Because)
      (PP (IN of)
        (NP
          (NP (DT all) (JJ possible) (NNS arrangements))
          (PP (IN of)
            (NP (NNS hands))))))
    (, ,)
    (NP (DT a) (JJ royal) (NN flush))
    (VP (VBZ is)
      (ADJP (DT the)
        (ADJP (RBS least) (JJ probable))
        (CC and)
        (ADJP (RB very) (JJ unlikely)))
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN repeated)
              (PP (IN in)
                (NP
                  (NP (DT a) (JJ limited) (NN number))
                  (PP (IN of)
                    (NP (NNS deals))))))))))
    (. .)))

prepc_because_of(probable-15, of-2)
det(arrangements-5, all-3)
amod(arrangements-5, possible-4)
pobj(probable-15, arrangements-5)
prep_of(arrangements-5, hands-7)
det(flush-11, a-9)
amod(flush-11, royal-10)
nsubj(probable-15, flush-11)
nsubj(unlikely-18, flush-11)
xsubj(repeated-21, flush-11)
cop(probable-15, is-12)
dep(probable-15, the-13)
advmod(probable-15, least-14)
root(ROOT-0, probable-15)
advmod(unlikely-18, very-17)
conj_and(probable-15, unlikely-18)
aux(repeated-21, to-19)
auxpass(repeated-21, be-20)
xcomp(probable-15, repeated-21)
det(number-25, a-23)
amod(number-25, limited-24)
prep_in(repeated-21, number-25)
prep_of(number-25, deals-27)

