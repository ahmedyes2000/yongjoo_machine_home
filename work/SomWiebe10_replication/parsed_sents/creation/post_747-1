(ROOT
  (S ('' '')
    (S
      (SBAR
        (ADVP (RB So))
        (IN if)
        (S
          (NP (NNP God))
          (VP (VBZ has)
            (NP
              (NP (DT a) (JJ perfect) (NN view))
              (PP (IN of)
                (NP (DT the) (NN future)))))))
      (ADVP (RB then))
      (NP (NNP God))
      (VP (VBD knew)
        (SBAR (IN that)
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBD created)
              (NP (NNP Adam\/Eve)))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBN placed)
          (NP
            (NP (DT the) (NN Tree))
            (PP (IN of)
              (NP (NNP Knowledge))))
          (PP (IN in)
            (NP (NNP Eden)))))
      (NP (DT that) (NNP Adam\/Eve))
      (VP (MD would) (RB not)
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB resist)
                  (NP (DT the) (NN temptation)))))))))
    (. ?)))

advmod(has-5, So-2)
dep(has-5, if-3)
nsubj(has-5, God-4)
advcl(knew-14, has-5)
det(view-8, a-6)
amod(view-8, perfect-7)
dobj(has-5, view-8)
det(future-11, the-10)
prep_of(view-8, future-11)
advmod(knew-14, then-12)
nsubj(knew-14, God-13)
root(ROOT-0, knew-14)
complm(created-18, that-15)
advmod(created-18, when-16)
nsubj(created-18, he-17)
ccomp(knew-14, created-18)
dobj(created-18, Adam\/Eve-19)
dep(able-34, placed-22)
det(Tree-24, the-23)
dobj(placed-22, Tree-24)
prep_of(Tree-24, Knowledge-26)
prep_in(placed-22, Eden-28)
det(Adam\/Eve-30, that-29)
nsubj(able-34, Adam\/Eve-30)
aux(able-34, would-31)
neg(able-34, not-32)
cop(able-34, be-33)
conj_and(knew-14, able-34)
aux(resist-36, to-35)
xcomp(able-34, resist-36)
det(temptation-38, the-37)
dobj(resist-36, temptation-38)

