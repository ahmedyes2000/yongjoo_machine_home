(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN problem))
        (PP (IN with)
          (NP (PRP$ your) (NN argument))))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (ADVP (RB simply))
            (VP (VBZ depends)
              (PP (IN on)
                (S
                  (NP
                    (NP (DT a) (JJ certain) (NN kind))
                    (PP (IN of)
                      (NP (NN fossil))))
                  (RB not)
                  (VP (VBG being)
                    (VP (VBN found))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (VP (VBN been)
          (ADVP (RB repeatedly))
          (VP (VBN proven)
            (ADJP (JJ wrong)
              (PP (IN over)
                (NP (DT the) (JJ last)
                  (QP (CD 3)
                    (CC or)
                    (CD 4))
                  (NNS decades))))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PDT such) (DT a) (NN fossil))
                (VP (VBZ is)
                  (VP (VBN found)))))))))
    (. .)))

det(problem-2, The-1)
nsubj(is-6, problem-2)
poss(argument-5, your-4)
prep_with(problem-2, argument-5)
root(ROOT-0, is-6)
complm(depends-10, that-7)
nsubj(depends-10, it-8)
advmod(depends-10, simply-9)
ccomp(is-6, depends-10)
det(kind-14, a-12)
amod(kind-14, certain-13)
nsubjpass(found-19, kind-14)
prep_of(kind-14, fossil-16)
neg(found-19, not-17)
auxpass(found-19, being-18)
prepc_on(depends-10, found-19)
nsubjpass(proven-26, you-22)
aux(proven-26, have-23)
auxpass(proven-26, been-24)
advmod(proven-26, repeatedly-25)
conj_and(is-6, proven-26)
acomp(proven-26, wrong-27)
det(decades-34, the-29)
amod(decades-34, last-30)
num(decades-34, 3-31)
conj_or(3-31, 4-33)
num(decades-34, 4-33)
prep_over(wrong-27, decades-34)
advmod(found-40, when-35)
predet(fossil-38, such-36)
det(fossil-38, a-37)
nsubjpass(found-40, fossil-38)
auxpass(found-40, is-39)
advcl(proven-26, found-40)

(ROOT
  (S
    (S
      (INTJ (RB Sure))
      (, ,)
      (NP (EX there))
      (VP (VBP are)
        (VP (MD may)
          (VP (VB gaps)
            (PP (IN in)
              (NP (JJ available) (NNS data)))
            (PP (IN at)
              (NP (DT the) (NN moment)))))))
    (, ,)
    (CC but)
    (S
      (NP (NNP ID) (NNS proponents))
      (VP (VBP are)
        (ADVP (RB just))
        (ADJP (JJ unwilling)
          (S
            (VP (TO to)
              (VP (VB look)
                (PP (IN at)
                  (NP
                    (NP (DT the) (JJ evolutionary) (NN pattern))
                    (VP (VBG underlying)
                      (NP (DT the) (NNS data)))))))))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP have))))))
    (. .)))

dep(are-4, Sure-1)
expl(are-4, there-3)
root(ROOT-0, are-4)
aux(gaps-6, may-5)
dep(are-4, gaps-6)
amod(data-9, available-8)
prep_in(gaps-6, data-9)
det(moment-12, the-11)
prep_at(gaps-6, moment-12)
nn(proponents-16, ID-15)
nsubj(unwilling-19, proponents-16)
cop(unwilling-19, are-17)
advmod(unwilling-19, just-18)
conj_but(are-4, unwilling-19)
aux(look-21, to-20)
xcomp(unwilling-19, look-21)
det(pattern-25, the-23)
amod(pattern-25, evolutionary-24)
prep_at(look-21, pattern-25)
partmod(pattern-25, underlying-26)
det(data-28, the-27)
dobj(underlying-26, data-28)
complm(have-31, that-29)
nsubj(have-31, we-30)
ccomp(unwilling-19, have-31)

