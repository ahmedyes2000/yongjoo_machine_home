(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (ADJP (RB quite) (JJ happy)
            (PP (IN with)
              (S
                (VP (VBG pwning)
                  (NP
                    (NP (CD 2))
                    (PP (IN of)
                      (NP (DT the) (CD three) (NNS statements)))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBD made))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB certainly))
      (ADJP (JJ willing)
        (S
          (VP (TO to)
            (VP (VB look)
              (PP (IN at)
                (NP
                  (NP (PRP$ your) (JJ final) (NN claim))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBD references)
                        (NP (DT a) (NN statement))
                        (PP (IN by)
                          (NP (NNP Richard) (NNPS Ryals)))))))))))))
    (. .)))

mark(happy-5, While-1)
nsubj(happy-5, I-2)
cop(happy-5, am-3)
advmod(happy-5, quite-4)
advcl(willing-19, happy-5)
prepc_with(happy-5, pwning-7)
dobj(pwning-7, 2-8)
dobj(made-14, 2-8)
det(statements-12, the-10)
num(statements-12, three-11)
prep_of(2-8, statements-12)
nsubj(made-14, you-13)
rcmod(2-8, made-14)
nsubj(willing-19, I-16)
cop(willing-19, am-17)
advmod(willing-19, certainly-18)
root(ROOT-0, willing-19)
aux(look-21, to-20)
xcomp(willing-19, look-21)
poss(claim-25, your-23)
amod(claim-25, final-24)
prep_at(look-21, claim-25)
nsubj(references-27, claim-25)
rcmod(claim-25, references-27)
det(statement-29, a-28)
dobj(references-27, statement-29)
nn(Ryals-32, Richard-31)
prep_by(references-27, Ryals-32)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR (IN since)
      (S
        (NP (NNP Ryals))
        (VP (VBZ is)
          (VP (VBN known)
            (PP (TO to)
              (NP (PRP us)))
            (PP (IN as)
              (NP (NNP Island)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP wonder)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP I))
          (VP (VBP pwn)
            (NP
              (NP (NNP Island) (POS 's))
              (NN self) (NN quotation))))))
    (. .)))

advmod(wonder-13, However-1)
mark(known-6, since-3)
nsubjpass(known-6, Ryals-4)
auxpass(known-6, is-5)
advcl(wonder-13, known-6)
prep_to(known-6, us-8)
prep_as(known-6, Island-10)
nsubj(wonder-13, I-12)
root(ROOT-0, wonder-13)
advmod(pwn-16, how-14)
nsubj(pwn-16, I-15)
ccomp(wonder-13, pwn-16)
poss(quotation-20, Island-17)
nn(quotation-20, self-19)
dobj(pwn-16, quotation-20)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP (EX there))
      (VP (TO to)
        (VP (VB pwn)
          (ADVP (CC but))
          (S
            (VP (TO to)
              (VP (VB point)
                (PRT (RP out))
                (SBAR (IN that)
                  (S
                    (NP (NNP Island))
                    (VP (VBZ self-references)
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN hope))
                          (PP (IN of)
                            (S
                              (VP (VBG furthering)
                                (NP (DT the) (NN argument))))))))))))))))
    (. .)))

dep(pwn-5, What-1)
aux(pwn-5, is-2)
expl(pwn-5, there-3)
xsubj(point-8, there-3)
aux(pwn-5, to-4)
root(ROOT-0, pwn-5)
advmod(pwn-5, but-6)
aux(point-8, to-7)
xcomp(pwn-5, point-8)
prt(point-8, out-9)
complm(self-references-12, that-10)
nsubj(self-references-12, Island-11)
ccomp(point-8, self-references-12)
det(hope-15, the-14)
prep_in(self-references-12, hope-15)
prepc_of(hope-15, furthering-17)
det(argument-19, the-18)
dobj(furthering-17, argument-19)

(ROOT
  (SQ (VBZ Is)
    (NP (DT that))
    (VP
      (VP (VBN sufficient)
        (PP (IN for)
          (NP (DT a) (NN pwn))))
      (CC or)
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP want)
              (S
                (NP (PRP me))
                (VP (TO to)
                  (VP
                    (ADVP (RB also))
                    (VB address)
                    (NP (PRP$ your) (`` ``) (NN claim) ('' ''))))))))))
    (. ?)))

aux(sufficient-3, Is-1)
nsubj(sufficient-3, that-2)
nsubj(do-8, that-2)
root(ROOT-0, sufficient-3)
det(pwn-6, a-5)
prep_for(sufficient-3, pwn-6)
conj_or(sufficient-3, do-8)
nsubj(want-10, you-9)
ccomp(do-8, want-10)
nsubj(address-14, me-11)
aux(address-14, to-12)
advmod(address-14, also-13)
xcomp(want-10, address-14)
poss(claim-17, your-15)
dobj(address-14, claim-17)

