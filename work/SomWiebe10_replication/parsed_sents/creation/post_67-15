(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (JJ minor) (NNS questions))
    (ADVP (RB still))
    (VP (VBP remain)
      (SBAR (CC but)
        (S
          (NP
            (NP (DT the) (NN idea))
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (MD must)
                  (VP (VB be)
                    (NP
                      (NP (NNS limits))
                      (PP (TO to)
                        (NP (NN evolution)))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD would)
                            (VP (VB make)
                              (S
                                (NP (JJ common) (NN descent))
                                (ADJP (JJ impossible)))))))))))))
          (VP (VBP are)
            (ADVP (IN at) (JJS best))
            (NP (JJ wishful) (NN thinking))))))
    (. .)))

prep_of(remain-6, course-2)
amod(questions-4, minor-3)
nsubj(remain-6, questions-4)
advmod(remain-6, still-5)
root(ROOT-0, remain-6)
cc(are-23, but-7)
det(idea-9, the-8)
nsubj(are-23, idea-9)
complm(limits-14, that-10)
expl(limits-14, there-11)
aux(limits-14, must-12)
cop(limits-14, be-13)
dep(idea-9, limits-14)
nsubj(make-19, limits-14)
prep_to(limits-14, evolution-16)
aux(make-19, would-18)
rcmod(limits-14, make-19)
amod(descent-21, common-20)
nsubj(impossible-22, descent-21)
xcomp(make-19, impossible-22)
ccomp(remain-6, are-23)
advmod(are-23, at-24)
pobj(at-24, best-25)
amod(thinking-27, wishful-26)
attr(are-23, thinking-27)

