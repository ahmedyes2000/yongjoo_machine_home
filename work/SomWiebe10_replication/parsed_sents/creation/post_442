(ROOT
  (NP (: --)
    (NP
      (NP (NNP DI))
      (: --)
      (S
        (SBAR (IN As)
          (S
            (NP (PRP I))
            (VP (VBD explained)
              (PP (IN in)
                (NP (PRP$ my) (JJ fourth) (NN opening) (NN statement))))))
        (, ,)
        (NP (NN design))
        (VP (MD can)
          (VP (VB be)
            (VP (VBN inferred)
              (ADVP (RB regardless)
                (PP (IN of)
                  (SBAR (IN whether)
                    (S
                      (NP (DT the) (NN designer))
                      (VP (VBZ is)
                        (ADJP (JJ natural)
                          (CC or)
                          (JJ supernatural))))))))))))
    (. .)))

root(ROOT-0, DI-2)
mark(explained-6, As-4)
nsubj(explained-6, I-5)
advcl(inferred-16, explained-6)
poss(statement-11, my-8)
amod(statement-11, fourth-9)
nn(statement-11, opening-10)
prep_in(explained-6, statement-11)
nsubjpass(inferred-16, design-13)
aux(inferred-16, can-14)
auxpass(inferred-16, be-15)
dep(DI-2, inferred-16)
complm(natural-23, whether-19)
det(designer-21, the-20)
nsubj(natural-23, designer-21)
nsubj(supernatural-25, designer-21)
cop(natural-23, is-22)
prepc_regardless_of(inferred-16, natural-23)
prepc_regardless_of(inferred-16, supernatural-25)
conj_or(natural-23, supernatural-25)

(ROOT
  (S
    (NP
      (NP (DT That))
      (PP (IN of)
        (NP (NN course))))
    (VP
      (VP (VBZ is)
        (ADJP (JJ incorrect)))
      (CC and)
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBN discussed)
            (NP (JJ many) (NNS times))
            (ADVP (RB now))
            (, ,)
            (SBAR (IN although)
              (S
                (NP (DT the) (NNP ID) (NNS proponents))
                (VP (VBP do) (RB not)
                  (VP (VB seem)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP
                            (NP (DT a) (NN response))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBZ is)
                                  (ADJP (JJ fine)))))))))))))))))
    (. .)))

nsubj(incorrect-5, That-1)
nsubjpass(discussed-9, That-1)
prep_of(That-1, course-3)
cop(incorrect-5, is-4)
root(ROOT-0, incorrect-5)
aux(discussed-9, has-7)
auxpass(discussed-9, been-8)
conj_and(incorrect-5, discussed-9)
amod(times-11, many-10)
dobj(discussed-9, times-11)
advmod(discussed-9, now-12)
mark(seem-20, although-14)
det(proponents-17, the-15)
nn(proponents-17, ID-16)
nsubj(seem-20, proponents-17)
xsubj(have-22, proponents-17)
aux(seem-20, do-18)
neg(seem-20, not-19)
advcl(discussed-9, seem-20)
aux(have-22, to-21)
xcomp(seem-20, have-22)
det(response-24, a-23)
dobj(have-22, response-24)
nsubj(fine-28, response-24)
cop(fine-28, is-27)
rcmod(response-24, fine-28)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (DT the) (NN bait)
            (CC and)
            (NN switch))
          (PP (IN between)
            (NP (JJ ordinary) (NN design)))
          (SBAR
            (WHPP (IN for)
              (WHNP (WDT which)))
            (S
              (NP (PRP we))
              (VP (VBP have)
                (NP (DT some) (JJ independent) (NN evidence))))))
        (, ,)
        (CC and)
        (NP
          (NP (JJ rarefied) (NN design))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBP lack)
                (NP
                  (NP (JJ such) (NN distinction))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ makes)
                        (NP
                          (NP (DT the) (JJ latter) (NN one))
                          (ADJP (RB highly) (JJ unreliable)))))))))))))
    (. .)))

nsubj(bait-4, It-1)
cop(bait-4, 's-2)
det(bait-4, the-3)
root(ROOT-0, bait-4)
conj_and(bait-4, switch-6)
amod(design-9, ordinary-8)
prep_between(bait-4, design-9)
rel(have-13, which-11)
nsubj(have-13, we-12)
rcmod(bait-4, have-13)
det(evidence-16, some-14)
amod(evidence-16, independent-15)
dobj(have-13, evidence-16)
amod(design-20, rarefied-19)
conj_and(bait-4, design-20)
nsubj(lack-22, design-20)
rcmod(design-20, lack-22)
amod(distinction-24, such-23)
dobj(lack-22, distinction-24)
nsubj(makes-26, distinction-24)
rcmod(distinction-24, makes-26)
det(one-29, the-27)
amod(one-29, latter-28)
dobj(makes-26, one-29)
advmod(unreliable-31, highly-30)
amod(one-29, unreliable-31)

(ROOT
  (VP (VB Ask)
    (S
      (NP (PRP yourself))
      (NP (DT this) (JJ simple) (NN question)))
    (: :)
    (SBARQ
      (WHADVP (WRB How))
      (SQ (VBZ does)
        (NP (NNP ID))
        (VP (VB explain)
          (NP (DT the) (JJ bacterial) (NN flagella))))
      (. ?))))

root(ROOT-0, Ask-1)
nsubj(question-5, yourself-2)
det(question-5, this-3)
amod(question-5, simple-4)
xcomp(Ask-1, question-5)
advmod(explain-10, How-7)
aux(explain-10, does-8)
nsubj(explain-10, ID-9)
parataxis(Ask-1, explain-10)
det(flagella-13, the-11)
amod(flagella-13, bacterial-12)
dobj(explain-10, flagella-13)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ does) (RB n't)))
    (, ,)
    (NP (PRP it))
    (ADVP (RB merely))
    (VP (VBZ calls)
      (S
        (NP (PRP it))
        (`` ``)
        (ADJP (VBN designed))
        ('' ''))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN placeholder))
              (PP (IN for)
                (NP
                  (NP (PRP$ our) (NN ignorance))
                  (PP (IN as) (TO to)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (VP (TO to)
                          (VP (VB explain)
                            (NP (DT the) (NN flagella))))))))))))))
    (. .)))

nsubj(does-2, It-1)
ccomp(calls-7, does-2)
neg(does-2, n't-3)
nsubj(calls-7, it-5)
advmod(calls-7, merely-6)
root(ROOT-0, calls-7)
dep(designed-10, it-8)
dep(calls-7, designed-10)
nsubj(placeholder-15, which-12)
cop(placeholder-15, is-13)
det(placeholder-15, a-14)
ccomp(calls-7, placeholder-15)
poss(ignorance-18, our-17)
prep_for(placeholder-15, ignorance-18)
advmod(explain-23, how-21)
aux(explain-23, to-22)
prepc_as_to(ignorance-18, explain-23)
det(flagella-25, the-24)
dobj(explain-23, flagella-25)

(ROOT
  (S
    (S (CC But)
      (NP (PRP it))
      (VP (VBZ gets)
        (ADJP (JJR worse))))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ is)
      (ADJP (VBN doomed)
        (S
          (VP (TO to)
            (VP (VB sit)
              (PRT (RP back))
              (S
                (VP (VBG idling)
                  (SBAR (IN while)
                    (S
                      (NP (NN science))
                      (VP (VBZ has)
                        (VP (VBN continued)
                          (S
                            (VP (TO to)
                              (VP (VB expand)
                                (NP
                                  (NP (PRP$ its) (NN knowledge))
                                  (PP (IN of)
                                    (NP (DT the)
                                      (ADJP (JJ flagella)
                                        (CC and)
                                        (JJ likely))
                                      (JJ evolutionary) (NNS pathways))))))))))))))))))
    (. .)))

cc(worse-4, But-1)
nsubj(worse-4, it-2)
dep(worse-4, gets-3)
ccomp(doomed-8, worse-4)
nsubjpass(doomed-8, ID-6)
auxpass(doomed-8, is-7)
root(ROOT-0, doomed-8)
aux(sit-10, to-9)
xcomp(doomed-8, sit-10)
prt(sit-10, back-11)
xcomp(sit-10, idling-12)
mark(continued-16, while-13)
nsubj(continued-16, science-14)
xsubj(expand-18, science-14)
aux(continued-16, has-15)
advcl(idling-12, continued-16)
aux(expand-18, to-17)
xcomp(continued-16, expand-18)
poss(knowledge-20, its-19)
dobj(expand-18, knowledge-20)
det(pathways-27, the-22)
amod(pathways-27, flagella-23)
conj_and(flagella-23, likely-25)
amod(pathways-27, likely-25)
amod(pathways-27, evolutionary-26)
prep_of(knowledge-20, pathways-27)

(ROOT
  (S (CC And)
    (SBAR (IN while)
      (S
        (NP (NNP ID))
        (VP (MD could) (RB not)
          (ADVP (RB even))
          (VP (VB compete)
            (PP (IN with)
              (NP (PRP$ our) (NN ignorance)))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB now))
    (VP (VBZ faces)
      (NP
        (NP (DT an)
          (ADJP (RB even) (JJR bigger))
          (NN challenge))
        (, ,)
        (NP (RB namely) (DT a) (JJ scientific) (NNS hypothesis))))
    (. .)))

cc(faces-14, And-1)
mark(compete-7, while-2)
nsubj(compete-7, ID-3)
aux(compete-7, could-4)
neg(compete-7, not-5)
advmod(compete-7, even-6)
advcl(faces-14, compete-7)
poss(ignorance-10, our-9)
prep_with(compete-7, ignorance-10)
nsubj(faces-14, it-12)
advmod(faces-14, now-13)
root(ROOT-0, faces-14)
det(challenge-18, an-15)
advmod(bigger-17, even-16)
amod(challenge-18, bigger-17)
dobj(faces-14, challenge-18)
advmod(hypothesis-23, namely-20)
det(hypothesis-23, a-21)
amod(hypothesis-23, scientific-22)
appos(challenge-18, hypothesis-23)

(ROOT
  (S
    (NP (DT That) (PRP$ my) (NNS friends))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (NNP ID))
          (VP (VBZ has)
            (S
              (VP (TO to)
                (VP (VB resort)
                  (S
                    (VP (TO to)
                      (VP (VB equivocation)
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NNS terms))
                            (ADJP (JJ natural)
                              (CC and)
                              (JJ supernatural))))
                        (, ,)
                        (S
                          (VP (TO to)
                            (VP (VB include) (`` ``)
                              (NP (NN intelligence))
                              ('' '')
                              (PP (IN as)
                                (NP (DT a) (JJ supernatural) (NN cause))))))))))))))))
    (. .)))

det(friends-3, That-1)
predet(friends-3, That-1)
poss(friends-3, my-2)
nsubj(is-4, friends-3)
root(ROOT-0, is-4)
advmod(has-7, why-5)
nsubj(has-7, ID-6)
xsubj(resort-9, ID-6)
advcl(is-4, has-7)
aux(resort-9, to-8)
xcomp(has-7, resort-9)
aux(equivocation-11, to-10)
xcomp(resort-9, equivocation-11)
det(terms-14, the-13)
prep_on(equivocation-11, terms-14)
amod(terms-14, natural-15)
amod(terms-14, supernatural-17)
conj_and(natural-15, supernatural-17)
aux(include-20, to-19)
xcomp(equivocation-11, include-20)
dobj(include-20, intelligence-22)
det(cause-27, a-25)
amod(cause-27, supernatural-26)
prep_as(include-20, cause-27)

(ROOT
  (X
    (X (WP What))
    (NP
      (NP (DT a) (NN shame))
      (SBAR (IN that)
        (S
          (NP (JJ good) (NN science))
          (VP (VBZ is)
            (VP (VBN used)
              (S
                (VP (TO to)
                  (VP (VB support)
                    (NP (PDT such) (DT a) (JJ vacuous) (NN notion))))))))))))

dep(shame-3, What-1)
det(shame-3, a-2)
root(ROOT-0, shame-3)
complm(used-8, that-4)
amod(science-6, good-5)
nsubjpass(used-8, science-6)
xsubj(support-10, science-6)
auxpass(used-8, is-7)
dep(shame-3, used-8)
aux(support-10, to-9)
xcomp(used-8, support-10)
predet(notion-14, such-11)
det(notion-14, a-12)
amod(notion-14, vacuous-13)
dobj(support-10, notion-14)

