(ROOT
  (NP (: --)
    (NP
      (NP (NNP Joe) (NNP GNow))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADVP (RB just))
            (VP (VBG lying))))))
    (. .)))

nn(GNow-3, Joe-2)
root(ROOT-0, GNow-3)
nsubj(lying-7, you-4)
aux(lying-7, are-5)
advmod(lying-7, just-6)
rcmod(GNow-3, lying-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN stated)
        (SBAR (IN that)
          (S
            (NP (NNP ID))
            (VP (VBZ relies)
              (PP (IN on)
                (NP
                  (NP (PRP$ our) (NN experience))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ means)
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBZ does)
                              (SBAR
                                (S
                                  (NP (NNP NOT))
                                  (VP (VBP rely)
                                    (PP (IN on)
                                      (NP (PRP$ our) (NN ignorance)))))))))))))))))))
    (. .)))

nsubj(stated-3, I-1)
aux(stated-3, have-2)
root(ROOT-0, stated-3)
complm(relies-6, that-4)
nsubj(relies-6, ID-5)
ccomp(stated-3, relies-6)
poss(experience-9, our-8)
prep_on(relies-6, experience-9)
nsubj(means-12, experience-9)
rcmod(experience-9, means-12)
nsubj(does-14, it-13)
ccomp(means-12, does-14)
nsubj(rely-16, NOT-15)
ccomp(does-14, rely-16)
poss(ignorance-19, our-18)
prep_on(rely-16, ignorance-19)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN experience))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB have)
        (PP (IN with)
          (NP
            (NP (JJ bacterial) (NN flagella))
            (CC and)
            (NP (DT the) (JJ genetic) (NN code))))))
    (. ?)))

det(experience-2, What-1)
dobj(have-5, experience-2)
aux(have-5, do-3)
nsubj(have-5, we-4)
root(ROOT-0, have-5)
amod(flagella-8, bacterial-7)
prep_with(have-5, flagella-8)
det(code-12, the-10)
amod(code-12, genetic-11)
prep_with(have-5, code-12)
conj_and(flagella-8, code-12)

(ROOT
  (NP
    (NP (JJ Other))
    (PP (IN than)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT a) (JJ superficial) (NN similarity))
              (PP (IN with)
                (NP
                  (NP (JJ outboard) (NNS engines))
                  (CC and)
                  (NP (`` ``) (NN computer) (NN code) ('' '')))))))))
    (. .)))

root(ROOT-0, Other-1)
complm(is-5, that-3)
expl(is-5, there-4)
prepc_than(Other-1, is-5)
det(similarity-8, a-6)
amod(similarity-8, superficial-7)
nsubj(is-5, similarity-8)
amod(engines-11, outboard-10)
prep_with(similarity-8, engines-11)
nn(code-15, computer-14)
prep_with(similarity-8, code-15)
conj_and(engines-11, code-15)

(ROOT
  (S
    (NP
      (NP (NNS Claims))
      (PP (IN of)
        (NP
          (NP (JJ positive) (NN experience))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (VBG inferring) (NN design))
              (VP (MD may)
                (VP (VB be)
                  (ADJP (JJ valid)
                    (PP (IN with)
                      (NP
                        (NP (JJ ordinary) (NN design))
                        (, ,)
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (SBAR
                                (WHADVP (WRB how))
                                (S
                                  (NP (JJ real) (NN science))
                                  (VP
                                    (VP (VBZ infers)
                                      (NP (NN design)
                                        (CC and)
                                        (NN agency)))
                                    (, ,)
                                    (CC but)
                                    (VP (VBD said)
                                      (NP (NN method)))))))))))))))))))
    (VP (VBZ is)
      (ADJP (RB woefully) (JJ flawed))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP it))
          (VP (VBZ comes)
            (PP (TO to)
              (NP
                (NP (`` ``) (JJ rarefied) ('' '') (NN design))
                (SBAR
                  (WHPP (IN for)
                    (WHNP (WDT which)))
                  (S
                    (NP (PRP we))
                    (VP (VBP have)
                      (NP (DT no) (NN experience)))))))))))
    (. .)))

nsubj(flawed-30, Claims-1)
amod(experience-4, positive-3)
prep_of(Claims-1, experience-4)
tmod(valid-10, experience-4)
advmod(valid-10, when-5)
amod(design-7, inferring-6)
nsubj(valid-10, design-7)
aux(valid-10, may-8)
cop(valid-10, be-9)
dep(experience-4, valid-10)
amod(design-13, ordinary-12)
prep_with(valid-10, design-13)
nsubj(is-16, design-13)
rcmod(design-13, is-16)
advmod(infers-20, how-17)
amod(science-19, real-18)
nsubj(infers-20, science-19)
nsubj(said-26, science-19)
ccomp(is-16, infers-20)
dobj(infers-20, design-21)
dobj(infers-20, agency-23)
conj_and(design-21, agency-23)
ccomp(is-16, said-26)
conj_but(infers-20, said-26)
dobj(said-26, method-27)
cop(flawed-30, is-28)
advmod(flawed-30, woefully-29)
root(ROOT-0, flawed-30)
advmod(comes-33, when-31)
nsubj(comes-33, it-32)
advcl(flawed-30, comes-33)
amod(design-38, rarefied-36)
prep_to(comes-33, design-38)
rel(have-42, which-40)
nsubj(have-42, we-41)
rcmod(design-38, have-42)
det(experience-44, no-43)
dobj(have-42, experience-44)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (ADJP
        (ADJP (NN nothing) (JJ wrong))
        (PP (IN with)
          (S
            (VP (VBG using)
              (NP
                (NP (DT the) (NN concept))
                (PP (IN of)
                  (NP (NN design))))
              (PP (IN with)
                (S
                  (VP (VBG formulating)
                    (NP (NNS hypotheses))))))))))
    (. .)))

advmod(is-4, Now-1)
expl(is-4, there-3)
root(ROOT-0, is-4)
dep(wrong-6, nothing-5)
acomp(is-4, wrong-6)
prepc_with(wrong-6, using-8)
det(concept-10, the-9)
dobj(using-8, concept-10)
prep_of(concept-10, design-12)
prepc_with(using-8, formulating-14)
dobj(formulating-14, hypotheses-15)

(ROOT
  (S
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (NP (DT the) (NN heart))
    (VP (VBD was)
      (VP
        (ADVP (RB historically))
        (VBN seen)
        (PP (IN as)
          (NP
            (NP (DT a) (NN pump))
            (, ,)
            (NP (JJ leading) (NN science))))
        (S
          (VP (TO to)
            (VP (VB proceed)
              (PP (IN in)
                (NP (DT a) (JJ fruitful) (NN area))))))))
    (. .)))

prep_after(seen-8, all-2)
det(heart-5, the-4)
nsubjpass(seen-8, heart-5)
xsubj(proceed-16, heart-5)
auxpass(seen-8, was-6)
advmod(seen-8, historically-7)
root(ROOT-0, seen-8)
det(pump-11, a-10)
prep_as(seen-8, pump-11)
amod(science-14, leading-13)
appos(pump-11, science-14)
aux(proceed-16, to-15)
xcomp(seen-8, proceed-16)
det(area-20, a-18)
amod(area-20, fruitful-19)
prep_in(proceed-16, area-20)

(ROOT
  (S (CC But)
    (ADVP (RB here))
    (NP (PRP we))
    (VP (MD should) (RB not)
      (VP (VB conflate)
        (NP (DT the) (NN usefulness))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ scientific) (NN necessity))
            (CC or)
            (NP (NN relevance))))))
    (. .)))

cc(conflate-6, But-1)
advmod(conflate-6, here-2)
nsubj(conflate-6, we-3)
aux(conflate-6, should-4)
neg(conflate-6, not-5)
root(ROOT-0, conflate-6)
det(usefulness-8, the-7)
dobj(conflate-6, usefulness-8)
det(necessity-12, a-10)
amod(necessity-12, scientific-11)
prep_with(conflate-6, necessity-12)
prep_with(conflate-6, relevance-14)
conj_or(necessity-12, relevance-14)

