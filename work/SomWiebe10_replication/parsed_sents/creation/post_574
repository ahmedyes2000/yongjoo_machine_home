(ROOT
  (S (`` ``)
    (NP
      (NP (DT That))
      (PP (IN in)
        (NP (DT no) (NN way))))
    (VP (VBZ describes)
      (NP
        (NP (DT the) (JJ current) (NNS theories))
        (PP (IN about)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (NN life))
              (VP (VBD began)))))))
    (. .)))

nsubj(describes-6, That-2)
det(way-5, no-4)
prep_in(That-2, way-5)
root(ROOT-0, describes-6)
det(theories-9, the-7)
amod(theories-9, current-8)
dobj(describes-6, theories-9)
advmod(began-13, how-11)
nsubj(began-13, life-12)
prepc_about(theories-9, began-13)

(ROOT
  (S ('' '')
    (NP (RB So))
    (VP (MD would)
      (NP (PRP you))
      (S
        (VP (VB like)
          (S
            (VP (TO to)
              (VP (VB give)
                (NP (DT a) (JJR better) (NN explanation))
                (PP (IN on)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (JJ current) (NN OoL) (NNS theories))
                      (VP (VBP exist)))))))))))
    (. ?)))

nsubj(would-3, So-2)
root(ROOT-0, would-3)
dobj(would-3, you-4)
dep(would-3, like-5)
aux(give-7, to-6)
xcomp(like-5, give-7)
det(explanation-10, a-8)
amod(explanation-10, better-9)
dobj(give-7, explanation-10)
dobj(exist-16, what-12)
amod(theories-15, current-13)
nn(theories-15, OoL-14)
nsubj(exist-16, theories-15)
prepc_on(give-7, exist-16)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB definitely))
      (NP
        (NP (DT a)
          (ADJP (JJ subject)
            (PP (IN in)
              (NP (NNS origins))))
          (NN debate))
        (SBAR
          (WHNP (WDT that) (NNS interests))
          (S
            (NP (PRP me))
            (ADJP (JJS most))))))
    (. .)))

nsubj(debate-8, This-1)
cop(debate-8, is-2)
advmod(debate-8, definitely-3)
det(debate-8, a-4)
amod(debate-8, subject-5)
prep_in(subject-5, origins-7)
root(ROOT-0, debate-8)
det(interests-10, debate-8)
dep(most-12, interests-10)
dep(most-12, me-11)
rcmod(debate-8, most-12)

(ROOT
  (S ('' '')
    (NP (RB So) (JJ intelligent) (NNS agents))
    (VP (MD can) (RB not)
      (VP (VB create)
        (NP (NN life))
        (PP (IN under)
          (NP (JJ strict) (NN lab) (NNS conditions)))))
    (. ?)))

advmod(agents-4, So-2)
amod(agents-4, intelligent-3)
nsubj(create-7, agents-4)
aux(create-7, can-5)
neg(create-7, not-6)
root(ROOT-0, create-7)
dobj(create-7, life-8)
amod(conditions-12, strict-10)
nn(conditions-12, lab-11)
prep_under(create-7, conditions-12)

(ROOT
  (S
    (NP (NNP Seems))
    (ADJP (JJR more))
    (PP (IN like)
      (NP
        (NP (DT an) (NN argument))
        (PP
          (PP (IN against)
            (NP (NNP ID)))
          (, ,) (RB rather) (RB then)
          (PP (IN for)
            (NP (PRP it))))))
    (: ...)))

dep(more-2, Seems-1)
root(ROOT-0, more-2)
dep(more-2, like-3)
det(argument-5, an-4)
pobj(like-3, argument-5)
prep_against(argument-5, ID-7)
advmod(argument-5, rather-9)
advmod(argument-5, then-10)
prep_for(argument-5, it-12)

(ROOT
  (S ('' '')
    (PP
      (NP (DT The) (NN fact))
      (IN that)
      (NP
        (NP (NNS scientists))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP claim)
              (SBAR
                (S
                  (NP (NN life))
                  (VP (MD can)
                    (VP (VB emerge)
                      (PP (IN without)
                        (NP (NN planning))))))))))))
    (VP (MD ca) (RB n't)
      (ADVP (RB even))
      (VP (VB execute)
        (SBAR
          (S
            (NP
              (NP (DT the) (JJ same) (NNS processes))
              (PP (IN on)
                (NP (PRP$ their) (JJ own))))
            (VP (VBZ seems)
              (S
                (VP (TO to)
                  (VP (VB show)
                    (SBAR
                      (WHADJP (RB just) (WRB how) (JJ big))
                      (S
                        (NP
                          (NP
                            (NP (DT a) (NN skillset))
                            (NP (DT the) (NN agency)))
                          (PP (IN in)
                            (NP (NN question))))
                        (ADVP (RB really))
                        (VP (VBZ is))))))))))))
    (. .)))

det(fact-3, The-2)
npadvmod(execute-16, fact-3)
nsubj(claim-7, scientists-5)
prep_that(execute-16, scientists-5)
rcmod(scientists-5, claim-7)
nsubj(emerge-10, life-8)
aux(emerge-10, can-9)
ccomp(claim-7, emerge-10)
prep_without(emerge-10, planning-12)
aux(execute-16, ca-13)
neg(execute-16, n't-14)
advmod(execute-16, even-15)
root(ROOT-0, execute-16)
det(processes-19, the-17)
amod(processes-19, same-18)
nsubj(seems-23, processes-19)
xsubj(show-25, processes-19)
poss(own-22, their-21)
prep_on(processes-19, own-22)
ccomp(execute-16, seems-23)
aux(show-25, to-24)
xcomp(seems-23, show-25)
advmod(big-28, just-26)
advmod(big-28, how-27)
dep(is-36, big-28)
det(skillset-30, a-29)
nsubj(is-36, skillset-30)
det(agency-32, the-31)
dep(skillset-30, agency-32)
prep_in(skillset-30, question-34)
advmod(is-36, really-35)
ccomp(show-25, is-36)

(ROOT
  (S (`` ``)
    (SBAR (IN unless)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (JJ willing))
          (ADVP (RB \/))
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB demonstrate)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (DT an) (JJ intelligent) (NN agent))
                      (VP (MD would)
                        (VP (VB be)
                          (ADJP
                            (ADJP (JJR better))
                            (PP (IN at)
                              (S
                                (VP (VBG creating)
                                  (NP (NN life)))))))))))))))))
    (ADVP (RB then))
    (NP (PRP we))
    (VP (VBP are))
    (. .)))

mark(willing-5, unless-2)
nsubj(willing-5, you-3)
cop(willing-5, are-4)
dep(are-22, willing-5)
advmod(willing-5, \/-6)
acomp(willing-5, able-7)
aux(demonstrate-9, to-8)
xcomp(able-7, demonstrate-9)
advmod(better-16, how-10)
det(agent-13, an-11)
amod(agent-13, intelligent-12)
nsubj(better-16, agent-13)
aux(better-16, would-14)
cop(better-16, be-15)
ccomp(demonstrate-9, better-16)
prepc_at(better-16, creating-18)
dobj(creating-18, life-19)
advmod(are-22, then-20)
nsubj(are-22, we-21)
root(ROOT-0, are-22)

(ROOT
  (S ('' '')
    (NP (NNP My) (NNP Mac))
    (VP (VBZ is)
      (VP (VBN undesigned)
        (PP (IN by)
          (NP (DT that) (NN reasoning)))))
    (. .)))

nn(Mac-3, My-2)
nsubjpass(undesigned-5, Mac-3)
auxpass(undesigned-5, is-4)
root(ROOT-0, undesigned-5)
det(reasoning-8, that-7)
agent(undesigned-5, reasoning-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB build)
          (NP (CD one)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP it))
              (VP (VBZ 's)
                (ADJP (JJ possible)
                  (PP (IN for)
                    (NP (NN anyone))))
                (S
                  (VP (TO to)
                    (VP (VB manufacture)
                      (NP (CD one)))))))))))
    (. .)))

nsubj(build-4, I-1)
aux(build-4, ca-2)
neg(build-4, n't-3)
root(ROOT-0, build-4)
dobj(build-4, one-5)
nsubj(know-11, I-8)
aux(know-11, do-9)
neg(know-11, n't-10)
conj_and(build-4, know-11)
advmod(possible-15, how-12)
nsubj(possible-15, it-13)
xsubj(manufacture-19, it-13)
cop(possible-15, 's-14)
ccomp(know-11, possible-15)
prep_for(possible-15, anyone-17)
aux(manufacture-19, to-18)
xcomp(possible-15, manufacture-19)
dobj(manufacture-19, one-20)

(ROOT
  (S ('' '')
    (NP (WDT Which))
    (ADVP (RB only))
    (VP (VBZ pushes)
      (NP
        (NP (DT the) (NN question))
        (PP (IN of)
          (NP
            (NP (DT the) (NN origin))
            (PP (IN of)
              (NP (NN life))))))
      (NP (RB somewhere) (RB else))
      (: ...)
      (PP (IN while)
        (S
          (VP (VBG adding)
            (NP
              (NP (DT the) (NN burden))
              (PP (IN of)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (VP (VBD did)
                      (SBAR (IN that)
                        (S
                          (NP (NN life))
                          (VP (VBP get)
                            (PP (TO to)
                              (NP (NNP Terra)))
                            (PP (IN in)
                              (NP (DT the) (JJ first) (NN place)))))))))))))))
    (. .)))

nsubj(pushes-4, Which-2)
advmod(pushes-4, only-3)
root(ROOT-0, pushes-4)
det(question-6, the-5)
iobj(pushes-4, question-6)
det(origin-9, the-8)
prep_of(question-6, origin-9)
prep_of(origin-9, life-11)
advmod(else-13, somewhere-12)
dobj(pushes-4, else-13)
prepc_while(pushes-4, adding-16)
det(burden-18, the-17)
dobj(adding-16, burden-18)
advmod(did-21, how-20)
prepc_of(burden-18, did-21)
complm(get-24, that-22)
nsubj(get-24, life-23)
ccomp(did-21, get-24)
prep_to(get-24, Terra-26)
det(place-30, the-28)
amod(place-30, first-29)
prep_in(get-24, place-30)

(ROOT
  (S ('' '')
    (PP (IN With)
      (NP
        (NP (NN respect))
        (PP (TO to)
          (NP (NNS exogenesis)
            (CC and)
            (NN panspermia)))
        (PP (IN in)
          (NP (NN general)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP (JJ right)))
    (. .)))

prep_with_respect_to(right-13, exogenesis-5)
conj_and(exogenesis-5, panspermia-7)
prep_with_respect_to(right-13, panspermia-7)
prep_in(right-13, general-9)
nsubj(right-13, you-11)
cop(right-13, 're-12)
root(ROOT-0, right-13)

