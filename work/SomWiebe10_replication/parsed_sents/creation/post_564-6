(ROOT
  (SINV
    (VP (VBZ Seems))
    (NP
      (NP (JJR more))
      (PP
        (PP (IN like)
          (NP
            (NP (DT an) (NN argument))
            (PP (IN against)
              (NP (NNP ID)))))
        (, ,) (RB rather) (RB then)
        (PP (IN for)
          (NP (PRP it)))))
    (: ...)
    (S
      (SBAR (IN unless)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADJP (JJ willing))
            (ADVP (RB \/))
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB demonstrate)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (DT an) (JJ intelligent) (NN agent))
                        (VP (MD would)
                          (VP (VB be)
                            (ADJP
                              (ADJP (JJR better))
                              (PP (IN at)
                                (S
                                  (VP (VBG creating)
                                    (NP (NN life)))))))))))))))))
      (ADVP (RB then))
      (NP (PRP we))
      (VP (VBP are)))
    (. .)))

root(ROOT-0, Seems-1)
nsubj(Seems-1, more-2)
det(argument-5, an-4)
prep_like(more-2, argument-5)
prep_against(argument-5, ID-7)
advmod(more-2, rather-9)
advmod(more-2, then-10)
prep_for(more-2, it-12)
mark(willing-17, unless-14)
nsubj(willing-17, you-15)
cop(willing-17, are-16)
advcl(are-34, willing-17)
advmod(willing-17, \/-18)
acomp(willing-17, able-19)
aux(demonstrate-21, to-20)
xcomp(able-19, demonstrate-21)
advmod(better-28, how-22)
det(agent-25, an-23)
amod(agent-25, intelligent-24)
nsubj(better-28, agent-25)
aux(better-28, would-26)
cop(better-28, be-27)
ccomp(demonstrate-21, better-28)
prepc_at(better-28, creating-30)
dobj(creating-30, life-31)
advmod(are-34, then-32)
nsubj(are-34, we-33)
dep(Seems-1, are-34)

