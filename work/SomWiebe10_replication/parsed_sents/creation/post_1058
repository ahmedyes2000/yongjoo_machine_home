(ROOT
  (S
    (S
      (NP
        (NP (PRP$ Your) (NN definition))
        (PP (IN of)
          (NP (NN faith))))
      (VP (VBZ is)
        (ADJP (JJ atheistic))))
    (: ;)
    (S
      (NP (PRP it))
      (ADVP (RB actually))
      (VP (VBZ denotes)
        (S
          (NP
            (NP (DT the) (NN essence))
            (PP (IN of)
              (NP (DT the) (NN term))))
          (ADJP (JJ foolish)))))
    (. .)))

poss(definition-2, Your-1)
nsubj(atheistic-6, definition-2)
prep_of(definition-2, faith-4)
cop(atheistic-6, is-5)
root(ROOT-0, atheistic-6)
nsubj(denotes-10, it-8)
advmod(denotes-10, actually-9)
parataxis(atheistic-6, denotes-10)
det(essence-12, the-11)
nsubj(foolish-16, essence-12)
det(term-15, the-14)
prep_of(essence-12, term-15)
xcomp(denotes-10, foolish-16)

(ROOT
  (S
    (NP (NNP Explain))
    (SBAR
      (WHADVP (WRB how))
      (S
        (NP (DT any) (NN person))
        (VP (MD can)
          (VP (VB believe)
            (PP (IN in)
              (NP
                (NP (NN something))
                (PP (IN about)
                  (NP (NN nothing)))))))))
    (NP (DT that) (NN doesn) (NN t))
    (VP (VBP exist))
    (. .)))

nsubj(exist-14, Explain-1)
advmod(believe-6, how-2)
det(person-4, any-3)
nsubj(believe-6, person-4)
aux(believe-6, can-5)
dep(exist-14, believe-6)
prep_in(believe-6, something-8)
prep_about(something-8, nothing-10)
det(t-13, that-11)
nn(t-13, doesn-12)
nsubj(exist-14, t-13)
root(ROOT-0, exist-14)

(ROOT
  (SINV
    (S
      (NP (PRP We))
      (VP (MD can)
        (ADVP (RB however))))
    (, ,)
    (ADVP (RB fundamentally))
    (VP (VBP claim)
      (SBAR (IN that)
        (S
          (NP (NN man))
          (VP
            (VP (VBD recognized)
              (PP (IN by)
                (NP (NN reason)))
              (NP
                (NP (DT the) (JJ known) (NNS laws))
                (PP (IN of)
                  (NP (NNS mathematics)))))
            (, ,)
            (CC but)
            (ADVP (RB never))
            (VP (MD can))))))
    (NP (PRP it))
    (S
      (VP (VB be)
        (VP (VBN claimed)
          (SBAR (IN that)
            (S
              (NP (NN man))
              (VP (VBZ is)
                (NP
                  (NP (DT the) (NN author))
                  (PP (IN of)
                    (NP
                      (NP (DT that))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (PRP he))
                          (VP (VBZ has)
                            (VP (VBN recognized)
                              (PP (IN by)
                                (NP (NN reason))))))))))))))))
    (. .)))

nsubj(can-2, We-1)
ccomp(claim-6, can-2)
advmod(can-2, however-3)
advmod(claim-6, fundamentally-5)
root(ROOT-0, claim-6)
complm(recognized-9, that-7)
nsubj(recognized-9, man-8)
ccomp(claim-6, recognized-9)
prep_by(recognized-9, reason-11)
det(laws-14, the-12)
amod(laws-14, known-13)
dobj(recognized-9, laws-14)
prep_of(laws-14, mathematics-16)
ccomp(claim-6, never-19)
conj_but(recognized-9, never-19)
neg(recognized-9, never-19)
ccomp(claim-6, can-20)
conj_but(recognized-9, can-20)
nsubj(claim-6, it-21)
auxpass(claimed-23, be-22)
ccomp(claim-6, claimed-23)
complm(author-28, that-24)
nsubj(author-28, man-25)
cop(author-28, is-26)
det(author-28, the-27)
ccomp(claimed-23, author-28)
prep_of(author-28, that-30)
dobj(recognized-34, that-30)
rel(recognized-34, which-31)
nsubj(recognized-34, he-32)
aux(recognized-34, has-33)
rcmod(that-30, recognized-34)
prep_by(recognized-34, reason-36)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS laws))
      (PP (IN of)
        (NP (NNS mathematics))))
    (VP (VBD existed)
      (SBAR (IN before)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (VP (VBN identified)
              (PP (IN by)
                (NP (NN man))))))))
    (. .)))

det(laws-2, The-1)
nsubj(existed-5, laws-2)
prep_of(laws-2, mathematics-4)
root(ROOT-0, existed-5)
mark(identified-9, before-6)
nsubjpass(identified-9, they-7)
auxpass(identified-9, were-8)
advcl(existed-5, identified-9)
agent(identified-9, man-11)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (ADJP (RB eternally) (JJ true)))
    (. .)))

nsubj(true-4, They-1)
cop(true-4, are-2)
advmod(true-4, eternally-3)
root(ROOT-0, true-4)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP
      (NP
        (QP (CD 1) (CD +1)))
      (VP (VBD +1)
        (S
          (NP
            (QP (CD +1) (CD +1100)))
          (VP (SYM =)
            (NP (CD 1104))))))
    (VP
      (VP (VBZ is)
        (ADJP (JJ true))
        (NP (RB now)))
      (, ,)
      (CC and)
      (VP (VBZ is)
        (ADJP (JJ true)
          (NP
            (QP (CD thirty) (CD trillion))
            (NNS centuries)))
        (PP (IN from)
          (NP (RB now))))
      (, ,)
      (CC and)
      (VP (VBZ has)
        (ADVP (RB always))
        (VP (VBN been)
          (ADJP (JJ true)
            (PP (RB apart) (IN from)
              (NP
                (NP (NN time))
                (ADVP (PRP itself))))))))
    (. .)))

prep_for(true-12, example-2)
number(+1-5, 1-4)
nsubj(true-12, +1-5)
nsubj(true-17, +1-5)
nsubj(true-28, +1-5)
partmod(+1-5, +1-6)
number(+1100-8, +1-7)
nsubj(1104-10, +1100-8)
dep(1104-10, =-9)
ccomp(+1-6, 1104-10)
cop(true-12, is-11)
root(ROOT-0, true-12)
attr(true-12, now-13)
cop(true-17, is-16)
conj_and(true-12, true-17)
number(trillion-19, thirty-18)
num(centuries-20, trillion-19)
dep(true-17, centuries-20)
prep(true-17, from-21)
pobj(from-21, now-22)
aux(true-28, has-25)
advmod(true-28, always-26)
cop(true-28, been-27)
conj_and(true-12, true-28)
prep_apart_from(true-28, time-31)
advmod(time-31, itself-32)

(ROOT
  (SINV
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT an) (JJ eternal) (NN truth))
          (PP (IN for)
            (NP (DT the) (NN equation))))))
    (VP (VBZ is)
      (ADJP (JJ true))
      (PP
        (ADVP (RB apart))
        (IN from)
        (NP (NN time))))
    (NP (PRP itself))
    (. .)))

nsubj(truth-5, This-1)
cop(truth-5, is-2)
det(truth-5, an-3)
amod(truth-5, eternal-4)
dep(true-10, truth-5)
det(equation-8, the-7)
prep_for(truth-5, equation-8)
cop(true-10, is-9)
root(ROOT-0, true-10)
prep_apart_from(true-10, time-13)
nsubj(true-10, itself-14)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (EX there))
        (VP (VBZ exists)
          (NP
            (NP (JJ eternal) (NNS truths))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (ADVP (RB only))
                  (VP (VBN recognized)
                    (PP (IN by)
                      (NP
                        (NP (NN intelligence))
                        (PP (JJ such) (IN as)
                          (NP (PRP I)))))))))))))
    (VP (VBP describe)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT an) (JJ eternal) (NN cause))
              (PP (IN of)
                (NP (DT those) (NNS consequences))))))))
    (. .)))

advmod(exists-3, When-1)
expl(exists-3, there-2)
advcl(describe-15, exists-3)
csubj(describe-15, exists-3)
amod(truths-5, eternal-4)
dobj(exists-3, truths-5)
nsubj(exists-3, truths-5)
nsubjpass(recognized-9, truths-5)
auxpass(recognized-9, are-7)
advmod(recognized-9, only-8)
rcmod(truths-5, recognized-9)
agent(recognized-9, intelligence-11)
prep_such_as(intelligence-11, I-14)
root(ROOT-0, describe-15)
expl(is-17, there-16)
ccomp(describe-15, is-17)
det(cause-20, an-18)
amod(cause-20, eternal-19)
nsubj(is-17, cause-20)
det(consequences-23, those-22)
prep_of(cause-20, consequences-23)

(ROOT
  (S (CC And)
    (SBAR (IN since)
      (S
        (NP (NNS mathematics))
        (VP (VBZ is)
          (NP
            (NP (DT an) (NN exercise))
            (PP (IN of)
              (NP (NN knowledge)
                (CC and)
                (NN intelligence)))))))
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB therefore))
      (NP
        (NP (DT the) (NN consequence))
        (PP (IN of)
          (NP (DT an) (JJ intelligent) (NN cause)))))
    (. .)))

cc(consequence-15, And-1)
mark(exercise-6, since-2)
nsubj(exercise-6, mathematics-3)
cop(exercise-6, is-4)
det(exercise-6, an-5)
dep(consequence-15, exercise-6)
prep_of(exercise-6, knowledge-8)
prep_of(exercise-6, intelligence-10)
conj_and(knowledge-8, intelligence-10)
nsubj(consequence-15, it-11)
cop(consequence-15, is-12)
advmod(consequence-15, therefore-13)
det(consequence-15, the-14)
root(ROOT-0, consequence-15)
det(cause-19, an-17)
amod(cause-19, intelligent-18)
prep_of(consequence-15, cause-19)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (MD would)
          (VP (VB like)
            (S
              (VP (TO to)
                (VP (VB contradict)
                  (NP
                    (NP (DT the) (NN conclusion))
                    (PP (IN of)
                      (NP (PRP$ my) (NN argument)))))))))))
    (NP (PRP I))
    (VP (VBP offer)
      (S
        (NP (DT an) (NN invitation))
        (VP (TO to)
          (VP (VB do)
            (ADVP (RB so))))))
    (. .)))

mark(like-4, If-1)
nsubj(like-4, someone-2)
xsubj(contradict-6, someone-2)
aux(like-4, would-3)
advcl(offer-13, like-4)
aux(contradict-6, to-5)
xcomp(like-4, contradict-6)
det(conclusion-8, the-7)
dobj(contradict-6, conclusion-8)
poss(argument-11, my-10)
prep_of(conclusion-8, argument-11)
nsubj(offer-13, I-12)
root(ROOT-0, offer-13)
det(invitation-15, an-14)
nsubj(do-17, invitation-15)
aux(do-17, to-16)
xcomp(offer-13, do-17)
advmod(do-17, so-18)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (NP (DT the) (NN difficulty))
      (PP (IN in)
        (S
          (VP (VBG opposing)
            (NP (DT this) (NN view))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN opposition))
          (VP (MD must)
            (VP (VB prove)
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBD was)
                    (NP
                      (NP (DT a) (NN time))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (CD 1) (CD +1))
                          (VP (SYM =)
                            (NP (RB not) (CD 2))))))))))))))
    (. .)))

advmod(is-9, However-1)
det(difficulty-4, the-3)
nsubj(is-9, difficulty-4)
prepc_in(difficulty-4, opposing-6)
det(view-8, this-7)
dobj(opposing-6, view-8)
root(ROOT-0, is-9)
complm(prove-14, that-10)
det(opposition-12, the-11)
nsubj(prove-14, opposition-12)
aux(prove-14, must-13)
ccomp(is-9, prove-14)
complm(was-17, that-15)
expl(was-17, there-16)
ccomp(prove-14, was-17)
det(time-19, a-18)
nsubj(was-17, time-19)
tmod(2-25, time-19)
advmod(2-25, when-20)
num(+1-22, 1-21)
nsubj(2-25, +1-22)
dep(2-25, =-23)
neg(2-25, not-24)
dep(time-19, 2-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB loosely))
      (VP (VBN laid)
        (PRT (RP out))
        (NP
          (NP (DT some))
          (PP (IN of)
            (NP
              (NP (DT the) (NN evidence))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ supports)
                    (NP (DT the) (JJ deductive) (NN conclusion))))))))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN whole))
              (PP (IN of)
                (NP (DT the) (NN creation))))
            (VP (VBZ is)
              (NP
                (NP (DT a) (NN consequence))
                (PP (IN of)
                  (NP (JJ intelligent) (NN design)))))))))
    (. .)))

nsubj(laid-4, I-1)
aux(laid-4, have-2)
advmod(laid-4, loosely-3)
root(ROOT-0, laid-4)
prt(laid-4, out-5)
dobj(laid-4, some-6)
det(evidence-9, the-8)
prep_of(some-6, evidence-9)
nsubj(supports-11, evidence-9)
rcmod(evidence-9, supports-11)
det(conclusion-14, the-12)
amod(conclusion-14, deductive-13)
dobj(supports-11, conclusion-14)
complm(consequence-23, that-15)
det(whole-17, the-16)
nsubj(consequence-23, whole-17)
det(creation-20, the-19)
prep_of(whole-17, creation-20)
cop(consequence-23, is-21)
det(consequence-23, a-22)
ccomp(laid-4, consequence-23)
amod(design-26, intelligent-25)
prep_of(consequence-23, design-26)

(ROOT
  (S (CC And)
    (PP (IN as)
      (ADJP (JJ necessary)))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB add)
        (NP (NN thereto))
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP$ my) (NNS statements))
            (VP (VBP are)
              (VP (VBN understood)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN manner))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (VBP have)
                          (VP (VBN intended)))))))))))))
    (. .)))

cc(add-7, And-1)
prep_as(add-7, necessary-3)
nsubj(add-7, I-5)
aux(add-7, will-6)
root(ROOT-0, add-7)
dobj(add-7, thereto-8)
advmod(understood-14, so-9)
dep(understood-14, that-10)
poss(statements-12, my-11)
nsubjpass(understood-14, statements-12)
auxpass(understood-14, are-13)
advcl(add-7, understood-14)
det(manner-17, the-16)
prep_in(understood-14, manner-17)
dobj(intended-20, manner-17)
nsubj(intended-20, I-18)
aux(intended-20, have-19)
rcmod(manner-17, intended-20)

(ROOT
  (S
    (NP (NNS People))
    (VP (MD can)
      (ADVP (RB only))
      (VP
        (VP (VB know))
        (CC or)
        (RB not)
        (VP (VB know)
          (PP (IN of)
            (NP
              (NP (DT that))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ exists)))))))))
    (. .)))

nsubj(know-4, People-1)
aux(know-4, can-2)
advmod(know-4, only-3)
root(ROOT-0, know-4)
conj_or(know-4, not-6)
neg(know-4, not-6)
dep(know-4, know-7)
prep_of(know-7, that-9)
nsubj(exists-11, that-9)
rcmod(that-9, exists-11)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NN evolution))
        (VP (VBZ is)
          (ADJP (JJ observable)
            (PP (IN in)
              (NP (DT the) (NN laboratory)))))))
    (WHNP (WP what))
    (SQ
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN name))
          (PP (IN of)
            (NP (DT the) (JJ new) (NN species))))))
    (. ?)))

mark(observable-4, If-1)
nsubj(observable-4, evolution-2)
cop(observable-4, is-3)
dep(name-11, observable-4)
det(laboratory-7, the-6)
prep_in(observable-4, laboratory-7)
nsubj(name-11, what-8)
cop(name-11, is-9)
det(name-11, the-10)
root(ROOT-0, name-11)
det(species-15, the-13)
amod(species-15, new-14)
prep_of(name-11, species-15)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (VP (VBN asserting)
      (SBAR (IN that)
        (S
          (NP (NN evolution))
          (VP (VBZ is)
            (ADJP (JJ observable)
              (PP (IN in)
                (NP (JJ controlled) (JJ artificial) (NN laboratory) (NNS experiments))))))))
    (. ?)))

auxpass(asserting-3, Are-1)
nsubjpass(asserting-3, you-2)
root(ROOT-0, asserting-3)
complm(observable-7, that-4)
nsubj(observable-7, evolution-5)
cop(observable-7, is-6)
ccomp(asserting-3, observable-7)
amod(experiments-12, controlled-9)
amod(experiments-12, artificial-10)
nn(experiments-12, laboratory-11)
prep_in(observable-7, experiments-12)

(ROOT
  (S (RB Then) (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP are))))
    (, ,)
    (ADVP (WRB how))
    (VP (VBZ is)
      (NP
        (NP (DT that) (NN evidence))
        (PP (IN of)
          (NP (NN evolution)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP it))
            (VP (MD can)
              (ADVP (RB only))
              (VP (VB be)
                (NP
                  (NP (NN evidence))
                  (PP (IN of)
                    (NP
                      (NP (JJ artificial) (NN manipulation))
                      (PP (IN of)
                        (NP (DT a) (NN species))))))))))))
    (. ?)))

advmod(evidence-10, Then-1)
mark(are-5, if-3)
nsubj(are-5, you-4)
dep(evidence-10, are-5)
advmod(evidence-10, how-7)
cop(evidence-10, is-8)
det(evidence-10, that-9)
root(ROOT-0, evidence-10)
tmod(evidence-18, evidence-10)
prep_of(evidence-10, evolution-12)
advmod(evidence-18, when-13)
nsubj(evidence-18, it-14)
aux(evidence-18, can-15)
advmod(evidence-18, only-16)
cop(evidence-18, be-17)
dep(evidence-10, evidence-18)
amod(manipulation-21, artificial-20)
prep_of(evidence-18, manipulation-21)
det(species-24, a-23)
prep_of(manipulation-21, species-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (NN evolution))
          (VP (VBZ is)
            (NP
              (NP (DT a)
                (ADJP (RB naturally) (JJ occurring))
                (NN process))
              (PRN (, ,) (RB not)
                (NP
                  (NP (DT a) (NN consequence))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (JJ controlled) (NN experiment))
                      (PP (IN in)
                        (NP (DT a) (NN lab))))))))))))
    (. .)))

nsubj(thought-2, I-1)
root(ROOT-0, thought-2)
nsubj(process-8, evolution-3)
cop(process-8, is-4)
det(process-8, a-5)
advmod(occurring-7, naturally-6)
amod(process-8, occurring-7)
ccomp(thought-2, process-8)
dep(consequence-12, not-10)
det(consequence-12, a-11)
dep(process-8, consequence-12)
det(experiment-16, a-14)
amod(experiment-16, controlled-15)
prep_of(consequence-12, experiment-16)
det(lab-19, a-18)
prep_in(experiment-16, lab-19)

(ROOT
  (S
    (VP (VB Allow)
      (NP (PRP me))
      (SBAR
        (S
          (NP (DT an) (NN opportunity))
          (, ,)
          (ADVP (RB here)
            (CC and)
            (RB now))
          (, ,)
          (VP (TO to)
            (VP (VB describe)
              (PP (IN in)
                (NP (NN part)))
              (NP
                (NP (PRP$ my) (NN approach))
                (PP (IN in)
                  (S
                    (VP (VBG answering)
                      (NP
                        (NP (DT the) (NN question))
                        (PP (IN of)
                          (NP (JJ intelligent) (NN cause)))))))))))))
    (. .)))

root(ROOT-0, Allow-1)
dobj(Allow-1, me-2)
det(opportunity-4, an-3)
nsubj(describe-11, opportunity-4)
advmod(describe-11, here-6)
conj_and(here-6, now-8)
advmod(describe-11, now-8)
aux(describe-11, to-10)
xcomp(Allow-1, describe-11)
prep_in(describe-11, part-13)
poss(approach-15, my-14)
dobj(describe-11, approach-15)
prepc_in(approach-15, answering-17)
det(question-19, the-18)
dobj(answering-17, question-19)
amod(cause-22, intelligent-21)
prep_of(question-19, cause-22)

(ROOT
  (S
    (NP
      (NP (DT The) (NN axiom))
      (PP (IN of)
        (NP
          (NP (PRP$ my) (NN argument))
          (: :)
          (NP
            (NP (DT The) (NNS laws))
            (PP (IN of)
              (NP (NNS mathematics)))))))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS consequences))
        (PP (IN of)
          (NP (DT an) (JJ intelligent) (JJ eternal) (NN cause)))))
    (. .)))

det(axiom-2, The-1)
nsubj(consequences-13, axiom-2)
poss(argument-5, my-4)
prep_of(axiom-2, argument-5)
det(laws-8, The-7)
dep(argument-5, laws-8)
prep_of(laws-8, mathematics-10)
cop(consequences-13, are-11)
det(consequences-13, the-12)
root(ROOT-0, consequences-13)
det(cause-18, an-15)
amod(cause-18, intelligent-16)
amod(cause-18, eternal-17)
prep_of(consequences-13, cause-18)

(ROOT
  (S
    (NP
      (NP (DT No) (NN man)
        (CC or)
        (NN group))
      (PP (IN of)
        (NP (NNS men))))
    (VP (MD can)
      (VP (VB claim)
        (SBAR (IN that)
          (S
            (NP
              (NP
                (ADJP (RB he\/they) (JJ is\/are))
                (DT the) (NN author))
              (PP (IN of)
                (NP
                  (NP (DT the) (NNS laws))
                  (PP (IN of)
                    (NP (NNS mathematics)))
                  (, ,)
                  (PP (IN for)
                    (NP (DT the) (NNS laws))))))
            (VP (VBD existed)
              (SBAR (IN before)
                (S
                  (NP (DT a) (NN man))
                  (VP (VBD recognized)
                    (NP (PRP them))))))))))
    (. .)))

det(man-2, No-1)
nsubj(claim-8, man-2)
conj_or(man-2, group-4)
nsubj(claim-8, group-4)
prep_of(man-2, men-6)
aux(claim-8, can-7)
root(ROOT-0, claim-8)
complm(existed-23, that-9)
advmod(is\/are-11, he\/they-10)
amod(author-13, is\/are-11)
det(author-13, the-12)
nsubj(existed-23, author-13)
det(laws-16, the-15)
prep_of(author-13, laws-16)
prep_of(laws-16, mathematics-18)
det(laws-22, the-21)
prep_for(laws-16, laws-22)
ccomp(claim-8, existed-23)
mark(recognized-27, before-24)
det(man-26, a-25)
nsubj(recognized-27, man-26)
advcl(existed-23, recognized-27)
dobj(recognized-27, them-28)

