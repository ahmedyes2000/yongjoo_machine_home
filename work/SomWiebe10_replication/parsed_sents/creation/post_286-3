(ROOT
  (S ('' '')
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (MD would)
        (VP (VB speak)
          (PP (TO to)
            (NP
              (NP (DT each))
              (PP (IN of)
                (NP
                  (NP (DT those) (NNS examples))
                  (PP (IN in)
                    (NP (NN detail))))))))))
    (, ,)
    (S
      (S
        (VP (VBG explaining)
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (PRP$ their) (NN complexity))
              (VP
                (VP (VBZ indicates)
                  (NP (NN design)))
                (, ,)
                (CC and)
                (VP (VBZ is) (RB not)
                  (ADJP (JJR better))))))))
      (VP (VBD explained)
        (PP (IN through)
          (NP (DT some) (JJ other) (NN mechanism)))))
    (. .)))

advmod(speak-5, Then-2)
nsubj(speak-5, he-3)
aux(speak-5, would-4)
root(ROOT-0, speak-5)
prep_to(speak-5, each-7)
det(examples-10, those-9)
prep_of(each-7, examples-10)
prep_in(examples-10, detail-12)
csubj(explained-25, explaining-14)
advmod(indicates-18, why-15)
poss(complexity-17, their-16)
nsubj(indicates-18, complexity-17)
nsubj(better-24, complexity-17)
advcl(explaining-14, indicates-18)
dobj(indicates-18, design-19)
cop(better-24, is-22)
neg(better-24, not-23)
advcl(explaining-14, better-24)
conj_and(indicates-18, better-24)
ccomp(speak-5, explained-25)
det(mechanism-29, some-27)
amod(mechanism-29, other-28)
prep_through(explained-25, mechanism-29)

