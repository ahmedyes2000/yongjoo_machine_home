(ROOT
  (S
    (NP (DT This))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (NN science))
              (VP (VBZ fails)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (VP (VBN found)
                        (NP
                          (NP (DT an) (NN explanation))
                          (PP (IN for)
                            (NP (DT any) (JJ particular) (NN system)))))))))))
          (, ,)
          (NP (NNP ID))
          (VP (VBZ argues)
            (SBAR (IN that)
              (S
                (NP (DT the) (NN default))
                (VP (MD should) (RB not)
                  (VP (VB be)
                    (S (`` ``)
                      (NP (PRP we))
                      (VP (VBP do) (RB n't)
                        (VP (VB know) ('' '')
                          (CC but)
                          (RB rather) (`` ``)
                          (NP (NN design))))
                      ('' ''))))))))))
    (. .)))

nsubj(means-2, This-1)
root(ROOT-0, means-2)
complm(argues-18, that-3)
advmod(fails-6, when-4)
nsubj(fails-6, science-5)
xsubj(found-9, science-5)
advcl(argues-18, fails-6)
aux(found-9, to-7)
aux(found-9, have-8)
xcomp(fails-6, found-9)
det(explanation-11, an-10)
dobj(found-9, explanation-11)
det(system-15, any-13)
amod(system-15, particular-14)
prep_for(explanation-11, system-15)
nsubj(argues-18, ID-17)
ccomp(means-2, argues-18)
complm(be-24, that-19)
det(default-21, the-20)
nsubj(be-24, default-21)
aux(be-24, should-22)
neg(be-24, not-23)
ccomp(argues-18, be-24)
nsubj(know-29, we-26)
aux(know-29, do-27)
neg(know-29, n't-28)
ccomp(be-24, know-29)
ccomp(be-24, rather-32)
advmod(know-29, rather-32)
conj_but(know-29, rather-32)
ccomp(be-24, design-34)
conj_but(know-29, design-34)
dobj(know-29, design-34)

