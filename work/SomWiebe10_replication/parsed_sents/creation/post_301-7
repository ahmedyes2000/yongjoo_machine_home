(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP
          (VP (VB pick)
            (PRT (RP up))
            (NP
              (NP (DT some) (NN metal) (NNS shavings))
              (PP (RB off) (IN of)
                (NP (DT the) (NN floor))))
            (PP (IN from) (IN under)
              (NP
                (NP (DT the) (NN lathe))
                (PP (IN in)
                  (NP (DT the) (NN machine) (NN shop))))))
          (CC and)
          (VP (VB arrange)
            (NP (PRP them))
            (PP (IN into)
              (NP (DT a) (JJ complicated) (JJ mathematical) (NN pattern)))
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (VBD generated)
                  (S
                    (VP (VBG using)
                      (NP (DT a) (NN computer) (NN program)))))))))))
    (, ,) (MD can)
    (NP (PRP you))
    (VP (VB tell)
      (SBAR (IN if)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP
              (NP (DT a) (`` ``) (JJ purposeful) (NN design) ('' ''))
              (CC or)
              (NP (RB just) (DT a) (`` ``) (JJ random) (NN design) ('' '')))))))
    (. ?)))

mark(pick-3, If-1)
nsubj(pick-3, I-2)
nsubj(arrange-21, I-2)
advcl(tell-38, pick-3)
prt(pick-3, up-4)
det(shavings-7, some-5)
nn(shavings-7, metal-6)
dobj(pick-3, shavings-7)
det(floor-11, the-10)
prep_off_of(shavings-7, floor-11)
dep(pick-3, from-12)
det(lathe-15, the-14)
prep_under(pick-3, lathe-15)
det(shop-19, the-17)
nn(shop-19, machine-18)
prep_in(lathe-15, shop-19)
conj_and(pick-3, arrange-21)
advcl(tell-38, arrange-21)
dobj(arrange-21, them-22)
det(pattern-27, a-24)
amod(pattern-27, complicated-25)
amod(pattern-27, mathematical-26)
prep_into(arrange-21, pattern-27)
complm(generated-30, that-28)
nsubj(generated-30, I-29)
ccomp(arrange-21, generated-30)
xcomp(generated-30, using-31)
det(program-34, a-32)
nn(program-34, computer-33)
dobj(using-31, program-34)
aux(tell-38, can-36)
nsubj(tell-38, you-37)
root(ROOT-0, tell-38)
mark(design-45, if-39)
nsubj(design-45, this-40)
cop(design-45, is-41)
det(design-45, a-42)
amod(design-45, purposeful-44)
advcl(tell-38, design-45)
advmod(design-52, just-48)
det(design-52, a-49)
amod(design-52, random-51)
advcl(tell-38, design-52)
conj_or(design-45, design-52)

(ROOT
  (SQ (VBZ Is)
    (NP (DT a) (NN virus))
    (VP (VBN designed))
    (. ?)))

auxpass(designed-4, Is-1)
det(virus-3, a-2)
nsubjpass(designed-4, virus-3)
root(ROOT-0, designed-4)

