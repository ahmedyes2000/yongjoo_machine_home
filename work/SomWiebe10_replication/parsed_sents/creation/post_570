(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NN institution))
          (PP (IN in)
            (NP (NN question))))
        (VP (VBZ does) (RB not)
          (VP (VB feel)
            (SBAR (IN that)
              (S
                (NP (NNP ID))
                (VP (VBZ is)
                  (NP
                    (NP (DT a) (JJ valid) (NN line))
                    (PP (IN of)
                      (NP (NN inquiry)))))))))))
    (ADVP (RB then))
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB give)
                (NP (NN tenure))
                (PP (TO to)
                  (NP
                    (NP (NNS people))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBP subscribe)
                          (PP (TO to)
                            (NP (DT the) (NN theory))))))))))))))
    (. .)))

mark(feel-9, If-2)
det(institution-4, the-3)
nsubj(feel-9, institution-4)
prep_in(institution-4, question-6)
aux(feel-9, does-7)
neg(feel-9, not-8)
dep(see-22, feel-9)
complm(line-15, that-10)
nsubj(line-15, ID-11)
cop(line-15, is-12)
det(line-15, a-13)
amod(line-15, valid-14)
ccomp(feel-9, line-15)
prep_of(line-15, inquiry-17)
advmod(see-22, then-18)
nsubj(see-22, I-19)
aux(see-22, do-20)
neg(see-22, n't-21)
root(ROOT-0, see-22)
advmod(give-26, why-23)
nsubj(give-26, it-24)
aux(give-26, would-25)
advcl(see-22, give-26)
dobj(give-26, tenure-27)
prep_to(give-26, people-29)
nsubj(subscribe-31, people-29)
rcmod(people-29, subscribe-31)
det(theory-34, the-33)
prep_to(subscribe-31, theory-34)

(ROOT
  (S ('' '')
    (NP (RB So) (PRP you))
    (VP (VBP 've)
      (ADVP (RB now))
      (VP (VBN retracted)
        (PP (IN from)
          (NP (DT the) (NN view)))
        (SBAR (IN that)
          (S
            (NP
              (NP (NNP ID))
              (`` `)
              (S
                (NP (NNPS ers))
                (VP (VBP are)
                  (ADJP (RB perfectly) (JJ free)
                    (PP (TO to)
                      (NP
                        (NP (NN conduct) (NN research))
                        (, ,)
                        (NP (JJ publish) (NNS papers))
                        (, ,) (FW etc.))))))
              ('' ''))
            (VP (VBD Was)
              (NP (PRP he))
              (PP (VBN given)
                (SBAR
                  (WHNP (WDT that) (NN money))
                  (S
                    (VP (TO to)
                      (VP (VB start)
                        (CC and)
                        (VB ID)
                        (NP (NN lab))))))))))))
    (. ?)))

advmod(you-3, So-2)
nsubj(retracted-6, you-3)
aux(retracted-6, 've-4)
advmod(retracted-6, now-5)
root(ROOT-0, retracted-6)
det(view-9, the-8)
prep_from(retracted-6, view-9)
complm(he-27, that-10)
nsubj(he-27, ID-11)
nsubj(free-16, ers-13)
cop(free-16, are-14)
advmod(free-16, perfectly-15)
dep(ID-11, free-16)
nn(research-19, conduct-18)
prep_to(free-16, research-19)
amod(papers-22, publish-21)
appos(research-19, papers-22)
dep(research-19, etc.-24)
cop(he-27, Was-26)
ccomp(retracted-6, he-27)
prep(he-27, given-28)
det(money-30, that-29)
nsubj(start-32, money-30)
nsubj(ID-34, money-30)
aux(start-32, to-31)
pcomp(given-28, start-32)
pcomp(given-28, ID-34)
conj_and(start-32, ID-34)
dobj(start-32, lab-35)

(ROOT
  (S ('' '')
    (PP (VBG Talk)
      (PP (IN about)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (NNS purposes))
              (PP (IN for)
                (NP
                  (NP (WP what))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBD was)
                        (SBAR (RB once) (IN though)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (NP (NN junk) (NN DNA))))))))))))
            (: ...)
            (VP (VBD followed)
              (PP (IN by)
                (NP
                  (NP (NNS arguments))
                  (PP (IN about)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (NNP ID))
                        (VP (VBZ has)
                          (VP (VBN been)))))))))))))
    (VP (VBD misrepresented))
    (. ...)))

prep(misrepresented-25, Talk-2)
pcomp(Talk-2, about-3)
advmod(followed-17, how-4)
nsubj(followed-17, purposes-5)
prep_for(purposes-5, what-7)
nsubj(was-9, what-7)
nsubj(DNA-15, what-7)
rcmod(what-7, was-9)
advmod(DNA-15, once-10)
dep(DNA-15, though-11)
aux(DNA-15, to-12)
cop(DNA-15, be-13)
nn(DNA-15, junk-14)
ccomp(was-9, DNA-15)
xcomp(was-9, DNA-15)
prepc_about(Talk-2, followed-17)
prep_by(followed-17, arguments-19)
advmod(been-24, how-21)
nsubj(been-24, ID-22)
aux(been-24, has-23)
prepc_about(arguments-19, been-24)
root(ROOT-0, misrepresented-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD predictions)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (VP (VBG making))))))))))
    (. .)))

nsubj(sure-4, I-1)
cop(sure-4, 'm-2)
neg(sure-4, not-3)
root(ROOT-0, sure-4)
nsubj(predictions-6, what-5)
dep(sure-4, predictions-6)
nsubj(making-9, it-7)
aux(making-9, 's-8)
ccomp(predictions-6, making-9)

(ROOT
  (S ('' '')
    (S
      (NP (PRP It))
      (VP (VBD was)
        (VP (VBN spelled)
          (PP (IN out)
            (ADJP (RB pretty) (JJ clear))))))
    (, ,)
    (CC but)
    (S
      (NP (RB here))
      (VP (VBZ 's)
        (NP
          (NP
            (NP (DT a)
              (ADJP (JJR shorter) (JJ dumbed-down))
              (NN version) (RB just))
            (PP (IN in)
              (NP (NN case))))
          (: ...)
          (NP
            (NP (NNP http:\/\/www.uncommondescent.com\/faq) (NNP \/))
            (VP (VBN #nopred) ('' '')
              (SBAR
                (WHPP (IN By)
                  (WHNP (WP what)))
                (S
                  (NP (NN mechanism))
                  (VP (VBZ does)
                    (S
                      (NP (DT the) (NN designer))
                      (VP (VB make)
                        (NP (DT these) (NNS changes))))))))))))
    (. ?)))

nsubjpass(spelled-4, It-2)
auxpass(spelled-4, was-3)
root(ROOT-0, spelled-4)
advmod(clear-7, pretty-6)
prep_out(spelled-4, clear-7)
nsubj(version-15, here-10)
cop(version-15, 's-11)
det(version-15, a-12)
dep(dumbed-down-14, shorter-13)
amod(version-15, dumbed-down-14)
conj_but(spelled-4, version-15)
advmod(version-15, just-16)
prep_in(version-15, case-18)
nn(\/-21, http:\/\/www.uncommondescent.com\/faq-20)
dep(version-15, \/-21)
partmod(\/-21, #nopred-22)
dep(does-27, By-24)
pobj(By-24, what-25)
nsubj(does-27, mechanism-26)
ccomp(#nopred-22, does-27)
det(designer-29, the-28)
nsubj(make-30, designer-29)
ccomp(does-27, make-30)
det(changes-32, these-31)
dobj(make-30, changes-32)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD ca) (RB n't)
      (NP (PRP we))
      (VP
        (VP (VB look)
          (PP (IN at)
            (NP (JJ past) (NN design) (NNS decisions))))
        (CC and)
        (ADVP (RB then))
        (VP (VB determine)
          (NP (DT an) (JJ overall) (NN pattern))
          (PP (IN from)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP we))
                (VP (MD can) (RB then)
                  (VP (VB determine)
                    (NP (DT the) (JJ next) (NN design) (NN choice))))))))))
    (. ?)))

advmod(look-5, Why-1)
aux(look-5, ca-2)
neg(look-5, n't-3)
nsubj(look-5, we-4)
nsubj(determine-12, we-4)
root(ROOT-0, look-5)
amod(decisions-9, past-7)
nn(decisions-9, design-8)
prep_at(look-5, decisions-9)
advmod(look-5, then-11)
conj_and(look-5, then-11)
conj_and(look-5, determine-12)
det(pattern-15, an-13)
amod(pattern-15, overall-14)
dobj(determine-12, pattern-15)
dobj(determine-21, which-17)
nsubj(determine-21, we-18)
aux(determine-21, can-19)
advmod(determine-21, then-20)
prepc_from(determine-12, determine-21)
det(choice-25, the-22)
amod(choice-25, next-23)
nn(choice-25, design-24)
dobj(determine-21, choice-25)

(ROOT
  (S (`` ``)
    (PP (IN By)
      (NP (WP what)))
    (NP (NN reasoning))
    (VP (VBZ is)
      (ADJP
        (NP (DT this) (RB even))
        (JJ relevant)))
    (. ?)))

prep_by(relevant-8, what-3)
nsubj(relevant-8, reasoning-4)
cop(relevant-8, is-5)
det(even-7, this-6)
npadvmod(relevant-8, even-7)
root(ROOT-0, relevant-8)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB Why))
    (SQ (VBD did)
      (NP (DT the) (NN agency))
      (VP (VB intervene)))
    (. ?)))

advmod(intervene-6, Why-2)
aux(intervene-6, did-3)
det(agency-5, the-4)
nsubj(intervene-6, agency-5)
root(ROOT-0, intervene-6)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBD did)
      (NP (DT that) (NN agency))
      (VP (VB originate)))
    (. ?)))

advmod(originate-5, Where-1)
aux(originate-5, did-2)
det(agency-4, that-3)
nsubj(originate-5, agency-4)
root(ROOT-0, originate-5)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBD did)
      (NP (DT that) (NN agency))
      (VP (VB create)
        (NP (NN life))))
    (. ?)))

advmod(create-5, How-1)
aux(create-5, did-2)
det(agency-4, that-3)
nsubj(create-5, agency-4)
root(ROOT-0, create-5)
dobj(create-5, life-6)

(ROOT
  (S (`` ``)
    (VP (VB See)
      (NP (DT the) (JJ above) (NN point)))
    (. .)))

root(ROOT-0, See-2)
det(point-5, the-3)
amod(point-5, above-4)
dobj(See-2, point-5)

(ROOT
  (NP
    (NP
      (NP (`` ``) (JJ long) (NNS chains))
      (PP (IN of)
        (NP (NN self))))
    (VP (VBG replicating)
      (NP (NNS proteins)))
    (. ?)))

amod(chains-3, long-2)
root(ROOT-0, chains-3)
prep_of(chains-3, self-5)
partmod(chains-3, replicating-6)
dobj(replicating-6, proteins-7)

(ROOT
  (S
    (PP (IN If)
      (NP (RB not) (RB then)))
    (NP (PRP I))
    (VP (VBP imagine)
      (SBAR (IN that)
        (S
          (NP (PRP$ his) (NNS backers))
          (VP (MD would)
            (VP (VB have)
              (VP (VBN been)
                (ADJP (VBN upset)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP they))
                      (VP (VBD found)
                        (SBAR (IN that)
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (VP (VBG using)
                                (NP (DT the) (NN money))
                                (PP (VBN given)
                                  (PP (TO to)
                                    (NP (PRP him))))))))))))
                (PP (IN for)
                  (NP (DT a) (JJ different) (NN purpose)))))))))
    (. .)))

prep(imagine-5, If-1)
neg(then-3, not-2)
pobj(If-1, then-3)
nsubj(imagine-5, I-4)
root(ROOT-0, imagine-5)
complm(upset-12, that-6)
poss(backers-8, his-7)
nsubjpass(upset-12, backers-8)
aux(upset-12, would-9)
aux(upset-12, have-10)
auxpass(upset-12, been-11)
ccomp(imagine-5, upset-12)
advmod(found-15, when-13)
nsubj(found-15, they-14)
dep(upset-12, found-15)
complm(using-19, that-16)
nsubj(using-19, he-17)
aux(using-19, was-18)
ccomp(found-15, using-19)
det(money-21, the-20)
dobj(using-19, money-21)
prep(using-19, given-22)
pcomp(given-22, to-23)
prep_to(given-22, him-24)
det(purpose-28, a-26)
amod(purpose-28, different-27)
prep_for(upset-12, purpose-28)

(ROOT
  (FRAG
    (ADJP (JJ proto-cells))
    (. ?)))

root(ROOT-0, proto-cells-1)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB recall)
        (PRT (RP back))
        (PP (IN in)
          (NP (PRP$ my) (JJ early) (JJ high) (NN school) (NN biology) (NN class)))
        (SBAR (IN that)
          (S
            (NP
              (NP (NN life))
              (PRN (-LRB- -LRB-)
                (VP
                  (VP
                    (ADVP (RB generally))
                    (VBG speaking))
                  (, ,)
                  (SBAR (IN since)
                    (S
                      (NP (JJ sterile) (NNS animals))
                      (VP (MD could)
                        (VP (VB be)
                          (NP (DT a) (JJ potential) (NN exception)))))))
                (-RRB- -RRB-)))
            (VP (VBD had)
              (NP (DT the) (VBG following)
                (QP (CD characteristics) (CD :1))))))))
    (. .)))

nsubj(recall-4, I-2)
aux(recall-4, can-3)
root(ROOT-0, recall-4)
prt(recall-4, back-5)
poss(class-12, my-7)
amod(class-12, early-8)
amod(class-12, high-9)
nn(class-12, school-10)
nn(class-12, biology-11)
prep_in(recall-4, class-12)
complm(had-28, that-13)
nsubj(had-28, life-14)
advmod(speaking-17, generally-16)
dep(life-14, speaking-17)
mark(exception-26, since-19)
amod(animals-21, sterile-20)
nsubj(exception-26, animals-21)
aux(exception-26, could-22)
cop(exception-26, be-23)
det(exception-26, a-24)
amod(exception-26, potential-25)
advcl(speaking-17, exception-26)
ccomp(recall-4, had-28)
det(:1-32, the-29)
amod(:1-32, following-30)
number(:1-32, characteristics-31)
dobj(had-28, :1-32)

(ROOT
  (NP
    (NP (CD One) (NN cell))
    (NP (CD 2))
    (. .)))

num(cell-2, One-1)
root(ROOT-0, cell-2)
dep(cell-2, 2-3)

(ROOT
  (S
    (NP (NNP Growth))
    (VP (VBZ stages)
      (NP (CD 3)))
    (. .)))

nsubj(stages-2, Growth-1)
root(ROOT-0, stages-2)
dobj(stages-2, 3-3)

(ROOT
  (S
    (VP (VBN Need)
      (PP (IN for)
        (NP (JJ nutrients) (CD 4))))
    (. .)))

root(ROOT-0, Need-1)
amod(4-4, nutrients-3)
prep_for(Need-1, 4-4)

(ROOT
  (S
    (VP (VB adaptability)
      (PP (TO to)
        (NP (NN environment) (CD 5))))
    (. .)))

root(ROOT-0, adaptability-1)
prep_to(adaptability-1, environment-3)
num(environment-3, 5-4)

(ROOT
  (S
    (NP (NNP Reproductive))
    (VP (VBZ capabilities))
    (. .)))

nsubj(capabilities-2, Reproductive-1)
root(ROOT-0, capabilities-2)

(ROOT
  (FRAG
    (NP (NN Anything))
    (ADVP (JJ wrong)
      (PP (IN with)
        (NP (DT the) (JJ above) (NNS criteria))))
    (. ?)))

root(ROOT-0, Anything-1)
dep(Anything-1, wrong-2)
det(criteria-6, the-4)
amod(criteria-6, above-5)
prep_with(wrong-2, criteria-6)

(ROOT
  (S ('' '')
    (S
      (NP (NNP Marks))
      (VP (VBD had)
        (VP (VBN started)
          (NP (JJ numerous) (JJ other) (NNS labs))
          (ADVP (RB prior)
            (PP (TO to)
              (NP (DT that)))))))
    (CC and)
    (S
      (NP (PRP he))
      (ADVP (RB never))
      (VP (VBD had)
        (S
          (VP (TO to)
            (VP (VB ask)
              (NP (NN permission)))))
        (S
          (VP (TO to)
            (VP (VB start)
              (NP
                (NP (DT any))
                (PP (IN of)
                  (NP (PRP them)))))))))
    (. .)))

nsubj(started-4, Marks-2)
aux(started-4, had-3)
root(ROOT-0, started-4)
amod(labs-7, numerous-5)
amod(labs-7, other-6)
dobj(started-4, labs-7)
prep_prior_to(started-4, that-10)
nsubj(had-14, he-12)
xsubj(ask-16, he-12)
xsubj(start-19, he-12)
neg(had-14, never-13)
conj_and(started-4, had-14)
aux(ask-16, to-15)
xcomp(had-14, ask-16)
dobj(ask-16, permission-17)
aux(start-19, to-18)
xcomp(had-14, start-19)
dobj(start-19, any-20)
prep_of(any-20, them-22)

(ROOT
  (S
    (SBAR (IN Once)
      (S
        (NP (PRP he))
        (VP (VBD started)
          (NP
            (NP (CD one))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was)
                  (VP (VBN related)
                    (PP (TO to)
                      (NP (NNP ID)))))))))))
    (NP (DT the) (NN pattern))
    (VP (VBD changed))
    (. .)))

mark(started-3, Once-1)
nsubj(started-3, he-2)
advcl(changed-12, started-3)
dobj(started-3, one-4)
nsubjpass(related-7, one-4)
auxpass(related-7, was-6)
rcmod(one-4, related-7)
prep_to(related-7, ID-9)
det(pattern-11, the-10)
nsubj(changed-12, pattern-11)
root(ROOT-0, changed-12)

(ROOT
  (S
    (ADVP (RB Thus))
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB agree)
              (SBAR
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (JJ strong) (NNP anti) (NNP ID) (NN bias))
                      (PP (IN in)
                        (NP (NN academia))))))))))))
    (. .)))

advmod(think-3, Thus-1)
nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(agree-6, we-4)
aux(agree-6, can-5)
ccomp(think-3, agree-6)
expl(is-8, there-7)
ccomp(agree-6, is-8)
det(bias-13, a-9)
amod(bias-13, strong-10)
nn(bias-13, anti-11)
nn(bias-13, ID-12)
nsubj(is-8, bias-13)
prep_in(bias-13, academia-15)

(ROOT
  (S ('' '')
    (PP (IN In)
      (NP (DT a) (VBG scientifically) (NN demonstrable) (NN fashion)))
    (VP (VBZ yes))
    (. .)))

det(fashion-6, a-3)
amod(fashion-6, scientifically-4)
nn(fashion-6, demonstrable-5)
prep_in(yes-7, fashion-6)
root(ROOT-0, yes-7)

(ROOT
  (S ('' '')
    (NP (JJ Define) (`` ``) (NN scientifically) (NN demonstrable) (NN fashion) ('' ''))
    (ADVP (RB first))
    (VP (VBP please))
    (. .)))

amod(fashion-6, Define-2)
nn(fashion-6, scientifically-4)
nn(fashion-6, demonstrable-5)
nsubj(please-9, fashion-6)
advmod(please-9, first-8)
root(ROOT-0, please-9)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (DT The) (NN nature)
          (CC and)
          (NN origin))
        (PP (IN of)
          (NP
            (NP (DT the) (NN designer))
            (, ,)
            (NP
              (NP (DT the) (NN purpose))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN design))
                  (, ,)
                  (NP
                    (NP (DT the) (JJ current) (NN location))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN designer))
                        (, ,)
                        (NP
                          (NP (DT the) (NN mechanism))
                          (SBAR
                            (WHPP (IN by)
                              (WHNP (WDT which)))
                            (S
                              (NP (DT the) (NN designer))
                              (VP
                                (VP (VBD acted))
                                (, ,)
                                (NP
                                  (NP (DT the) (NN process))
                                  (SBAR
                                    (WHPP (IN by)
                                      (WHNP (WDT which)))
                                    (S
                                      (NP (NN design) (NNS decisions))
                                      (VP (VBD were))))))))))))))))))
      (VP (VBD made)))
    (CC and)
    (S
      (NP (DT the) (NNS reasons))
      (VP (VBZ behind)
        (NP (JJ specific) (NN design) (NNS choices))))
    (. .)))

det(nature-3, The-2)
nsubj(made-38, nature-3)
conj_and(nature-3, origin-5)
nsubj(made-38, origin-5)
det(designer-8, the-7)
prep_of(nature-3, designer-8)
det(purpose-11, the-10)
appos(designer-8, purpose-11)
det(design-14, the-13)
prep_of(purpose-11, design-14)
det(location-18, the-16)
amod(location-18, current-17)
appos(design-14, location-18)
det(designer-21, the-20)
prep_of(location-18, designer-21)
det(mechanism-24, the-23)
appos(designer-21, mechanism-24)
rel(acted-29, which-26)
det(designer-28, the-27)
nsubj(acted-29, designer-28)
rcmod(mechanism-24, acted-29)
det(process-32, the-31)
dobj(acted-29, process-32)
rel(were-37, which-34)
nn(decisions-36, design-35)
nsubj(were-37, decisions-36)
rcmod(process-32, were-37)
root(ROOT-0, made-38)
det(reasons-41, the-40)
nsubj(behind-42, reasons-41)
conj_and(made-38, behind-42)
amod(choices-45, specific-43)
nn(choices-45, design-44)
dobj(behind-42, choices-45)

(ROOT
  (S ('' '')
    (PP (VBG None)
      (PP (IN of)
        (SBAR
          (WHNP (WDT which))
          (S
            (ADVP (RB even))
            (VP (VBP have)
              (NP (NN anything))
              (PP (TO to)))))))
    (VP (VBP do)
      (PP (IN with)
        (NP (NNP ID))))
    (. .)))

prep(do-9, None-2)
pcomp(None-2, of-3)
nsubj(have-6, which-4)
advmod(have-6, even-5)
prepc_of(None-2, have-6)
dobj(have-6, anything-7)
prep(have-6, to-8)
root(ROOT-0, do-9)
prep_with(do-9, ID-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB be)
        (PP (IN like)
          (S
            (VP (VBG saying)
              (SBAR
                (S
                  (NP (NNP Evolution))
                  (VP (VBZ has)
                    (NP
                      (NP (RB plenty))
                      (PP (IN of)
                        (NP (NNS holes))))))))))
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (MD can) (RB not)
              (VP (VB explain)
                (NP
                  (NP (DT the) (NN origin))
                  (PP (IN of)
                    (NP (NN matter))))))))))
    (. .)))

nsubj(be-3, It-1)
aux(be-3, would-2)
root(ROOT-0, be-3)
prepc_like(be-3, saying-5)
nsubj(has-7, Evolution-6)
ccomp(saying-5, has-7)
dobj(has-7, plenty-8)
prep_of(plenty-8, holes-10)
mark(explain-15, because-11)
nsubj(explain-15, it-12)
aux(explain-15, can-13)
neg(explain-15, not-14)
advcl(be-3, explain-15)
det(origin-17, the-16)
dobj(explain-15, origin-17)
prep_of(origin-17, matter-19)

