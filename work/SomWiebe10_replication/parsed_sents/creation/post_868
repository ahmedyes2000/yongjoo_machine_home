(ROOT
  (S
    (VP (VB Imagine)
      (SBAR
        (S
          (S
            (NP (PRP you))
            (VP (VBD found)
              (NP
                (NP (DT a) (NN grain))
                (PP (IN of)
                  (NP (NN rice))))))
          (CC and)
          (S
            (NP (PRP you))
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP (VB measure)
                    (NP (PRP$ its) (NN length))))))))))
    (. .)))

root(ROOT-0, Imagine-1)
nsubj(found-3, you-2)
dep(Imagine-1, found-3)
det(grain-5, a-4)
dobj(found-3, grain-5)
prep_of(grain-5, rice-7)
nsubj(wanted-10, you-9)
xsubj(measure-12, you-9)
dep(Imagine-1, wanted-10)
conj_and(found-3, wanted-10)
aux(measure-12, to-11)
xcomp(wanted-10, measure-12)
poss(length-14, its-13)
dobj(measure-12, length-14)

(ROOT
  (SBARQ
    (PP (IN Of)
      (NP
        (NP (DT a) (NN caliper))
        (, ,)
        (NP (NN meter) (NN stick))
        (, ,)
        (CC and)
        (NP (NN odometer))))
    (, ,)
    (WHNP (WDT which) (NN instrument))
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB use)))
    (. ?)))

det(caliper-3, a-2)
prep_of(use-15, caliper-3)
nn(stick-6, meter-5)
conj_and(caliper-3, stick-6)
prep_of(use-15, stick-6)
conj_and(caliper-3, odometer-9)
prep_of(use-15, odometer-9)
det(instrument-12, which-11)
dobj(use-15, instrument-12)
aux(use-15, would-13)
nsubj(use-15, you-14)
root(ROOT-0, use-15)

(ROOT
  (S
    (VP (VB Incomprehensible))
    (. .)))

root(ROOT-0, Incomprehensible-1)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP
          (NP (DT the) (NN salinity))
          (PP (IN of)
            (NP (DT the) (NNS oceans))))))
    (, ,)
    (NP (NNP AiG))
    (VP (VBZ fails)
      (S
        (VP (TO to)
          (VP (VB consider)
            (NP
              (NP (DT any) (NN process))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ removes)
                    (NP (NN salt))
                    (PP (IN from)
                      (NP
                        (NP (NN seawater))
                        (, ,)
                        (SBAR
                          (WHPP (IN of)
                            (WHNP (WDT which)))
                          (S
                            (NP (DT many))
                            (VP (VBP have)
                              (VP (VBN been)
                                (VP (VBN examined)
                                  (CC and)
                                  (VBN documented))))))))))))))))
    (. .)))

prepc_as_for(fails-10, for-2)
det(salinity-4, the-3)
pobj(fails-10, salinity-4)
det(oceans-7, the-6)
prep_of(salinity-4, oceans-7)
nsubj(fails-10, AiG-9)
xsubj(consider-12, AiG-9)
root(ROOT-0, fails-10)
aux(consider-12, to-11)
xcomp(fails-10, consider-12)
det(process-14, any-13)
dobj(consider-12, process-14)
nsubj(removes-16, process-14)
rcmod(process-14, removes-16)
dobj(removes-16, salt-17)
prep_from(removes-16, seawater-19)
rel(examined-26, which-22)
nsubjpass(examined-26, many-23)
nsubjpass(documented-28, many-23)
aux(examined-26, have-24)
auxpass(examined-26, been-25)
rcmod(seawater-19, examined-26)
rcmod(seawater-19, documented-28)
conj_and(examined-26, documented-28)

(ROOT
  (S
    (NP (DT A) (JJ full) (NN analysis))
    (VP (MD will)
      (VP (VB show)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN salinity))
              (PP (IN of)
                (NP (DT the) (NN ocean))))
            (VP (VBZ is)
              (PP (IN in)
                (NP (NN equilibrium))))))))
    (. .)))

det(analysis-3, A-1)
amod(analysis-3, full-2)
nsubj(show-5, analysis-3)
aux(show-5, will-4)
root(ROOT-0, show-5)
complm(is-12, that-6)
det(salinity-8, the-7)
nsubj(is-12, salinity-8)
det(ocean-11, the-10)
prep_of(salinity-8, ocean-11)
ccomp(show-5, is-12)
prep_in(is-12, equilibrium-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NN amount))
      (PP (IN of)
        (NP
          (NP (NN salt))
          (VP (VBG entering)
            (NP (DT the) (NN sea))))))
    (VP (VBZ is)
      (ADJP
        (ADJP (RB almost) (RB exactly) (JJ equal))
        (PP (TO to)
          (NP
            (NP (DT the) (NN amount))
            (VP (VBG being)
              (VP (VBN removed)))))))
    (. .)))

det(amount-2, The-1)
nsubj(equal-11, amount-2)
prep_of(amount-2, salt-4)
partmod(salt-4, entering-5)
det(sea-7, the-6)
dobj(entering-5, sea-7)
cop(equal-11, is-8)
advmod(equal-11, almost-9)
advmod(equal-11, exactly-10)
root(ROOT-0, equal-11)
det(amount-14, the-13)
prep_to(equal-11, amount-14)
auxpass(removed-16, being-15)
partmod(amount-14, removed-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (PP (IN by)
          (NP
            (NP (DT some) (NN stretch))
            (PP (IN of)
              (NP (NN incompetence)))))
        (NP (PRP you))
        (VP (VBD opted)
          (S
            (VP (TO to)
              (VP (VB use)
                (NP (DT the) (NN odometer))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD might)
      (VP (VB conclude)
        (SBAR (IN that)
          (S
            (NP (PRP$ our) (NN length) (NN measurement) (NNS techniques))
            (VP (VBP are)
              (ADJP (RB wildly) (JJ inaccurate)))))))
    (. .)))

mark(opted-8, If-1)
det(stretch-4, some-3)
prep_by(opted-8, stretch-4)
prep_of(stretch-4, incompetence-6)
nsubj(opted-8, you-7)
xsubj(use-10, you-7)
advcl(conclude-16, opted-8)
aux(use-10, to-9)
xcomp(opted-8, use-10)
det(odometer-12, the-11)
dobj(use-10, odometer-12)
nsubj(conclude-16, you-14)
aux(conclude-16, might-15)
root(ROOT-0, conclude-16)
complm(inaccurate-24, that-17)
poss(techniques-21, our-18)
nn(techniques-21, length-19)
nn(techniques-21, measurement-20)
nsubj(inaccurate-24, techniques-21)
cop(inaccurate-24, are-22)
advmod(inaccurate-24, wildly-23)
ccomp(conclude-16, inaccurate-24)

(ROOT
  (SBARQ
    (WHNP (WRB How) (RB else))
    (SQ (MD could)
      (NP
        (NP (DT a) (NN grain))
        (PP (IN of)
          (NP (NN rice))))
      (VP (VB have)
        (NP
          (NP (DT a) (NN length))
          (PP (IN of)
            (NP (CD 0.001) (NNS kilometers))))))
    (. ?)))

advmod(else-2, How-1)
dep(have-8, else-2)
aux(have-8, could-3)
det(grain-5, a-4)
nsubj(have-8, grain-5)
prep_of(grain-5, rice-7)
root(ROOT-0, have-8)
det(length-10, a-9)
dobj(have-8, length-10)
num(kilometers-13, 0.001-12)
prep_of(length-10, kilometers-13)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT the) (JJ same) (NN technique))
      (SBAR (IN that)
        (S
          (NP
            (NP
              (NP (NNP AiG) (POS 's))
              ('' '') (NN PhD))
            (SBAR
              (S
                (NP (NNS scientists))
                ('' '')
                (VP (VBP use)
                  (S
                    (VP (TO to)
                      (VP (VB cast))))))))
          (VP (VBP doubt)
            (PP (IN on)
              (NP (JJ radiometric) (JJ dating) (NNS methods)))))))
    (. .)))

nsubj(technique-5, This-1)
cop(technique-5, is-2)
det(technique-5, the-3)
amod(technique-5, same-4)
root(ROOT-0, technique-5)
complm(doubt-16, that-6)
poss(PhD-10, AiG-7)
nsubj(doubt-16, PhD-10)
nsubj(use-13, scientists-11)
xsubj(cast-15, scientists-11)
rcmod(PhD-10, use-13)
aux(cast-15, to-14)
xcomp(use-13, cast-15)
ccomp(technique-5, doubt-16)
amod(methods-20, radiometric-18)
amod(methods-20, dating-19)
prep_on(doubt-16, methods-20)

(ROOT
  (S
    (S
      (NP (DT The) (JJ isotope) (NN potassium-40))
      (VP (VBZ decays)
        (PP (IN with)
          (NP
            (NP (DT a) (JJ half) (NN life))
            (PP (IN of)
              (NP
                (QP (CD 1.25) (CD billion))
                (NNS years)))))))
    (, ,) (IN so)
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB n't)
        (ADJP (JJ appropriate)
          (PP (IN for)
            (S
              (VP (VBG measuring)
                (NP
                  (ADJP (RB very) (JJ young))
                  (JJ volcanic) (NNS rocks))))))))
    (. .)))

det(potassium-40-3, The-1)
amod(potassium-40-3, isotope-2)
nsubj(decays-4, potassium-40-3)
root(ROOT-0, decays-4)
det(life-8, a-6)
amod(life-8, half-7)
prep_with(decays-4, life-8)
number(billion-11, 1.25-10)
num(years-12, billion-11)
prep_of(life-8, years-12)
dep(decays-4, so-14)
nsubj(appropriate-18, it-15)
cop(appropriate-18, is-16)
neg(appropriate-18, n't-17)
ccomp(decays-4, appropriate-18)
prepc_for(appropriate-18, measuring-20)
advmod(young-22, very-21)
amod(rocks-24, young-22)
amod(rocks-24, volcanic-23)
dobj(measuring-20, rocks-24)

(ROOT
  (S
    (NP
      (NP (DT The) (NN margin))
      (PP (IN of)
        (NP
          (NP (NN error))
          (PP (IN with)
            (NP (DT that) (NN technique))))))
    (VP (VBZ is)
      (NP
        (NP (NNS millions))
        (PP (IN of)
          (NP
            (NP (NNS years))
            (ADVP (JJ wide))))))
    (. .)))

det(margin-2, The-1)
nsubj(millions-9, margin-2)
prep_of(margin-2, error-4)
det(technique-7, that-6)
prep_with(error-4, technique-7)
cop(millions-9, is-8)
root(ROOT-0, millions-9)
prep_of(millions-9, years-11)
advmod(years-11, wide-12)

(ROOT
  (S
    (ADVP (RB Likewise))
    (, ,)
    (NP (JJ carbon-14))
    (VP (VBZ decays)
      (PP (IN with)
        (NP
          (NP (DT a) (NN half-life))
          (PP (IN of)
            (NP (CD 5730) (NNS years)))))
      (, ,)
      (S
        (VP (VBG making)
          (S
            (NP (PRP it))
            (ADJP (JJ accurate)))
          (ADVP
            (ADVP (RB only) (RB up))
            (PP
              (PP (TO to)
                (NP
                  (QP (RB about) (CD 10))
                  (NNS half-lives)))
              (, ,)
              (CC or)
              (PP (IN about)
                (NP (CD 60,000) (NNS years))))))))
    (. .)))

advmod(decays-4, Likewise-1)
nsubj(decays-4, carbon-14-3)
root(ROOT-0, decays-4)
det(half-life-7, a-6)
prep_with(decays-4, half-life-7)
num(years-10, 5730-9)
prep_of(half-life-7, years-10)
xcomp(decays-4, making-12)
nsubj(accurate-14, it-13)
xcomp(making-12, accurate-14)
advmod(up-16, only-15)
advmod(making-12, up-16)
advmod(making-12, up-16')
conj_or(up-16, up-16')
quantmod(10-19, about-18)
num(half-lives-20, 10-19)
prep_to(up-16, half-lives-20)
num(years-25, 60,000-24)
prep_about(up-16', years-25)

(ROOT
  (S
    (PP (IN Past)
      (NP (DT that) (NN point)))
    (, ,)
    (NP (DT the) (VBG remaining) (NN carbon-14))
    (VP (VBZ is)
      (ADJP (RB far) (RB too) (JJ scarce))
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (DT any)
              (ADJP (JJ accurate))
              (NN age) (NN measurement))))))
    (. .)))

det(point-3, that-2)
prep_past(scarce-11, point-3)
det(carbon-14-7, the-5)
amod(carbon-14-7, remaining-6)
nsubj(scarce-11, carbon-14-7)
xsubj(make-13, carbon-14-7)
cop(scarce-11, is-8)
advmod(scarce-11, far-9)
advmod(scarce-11, too-10)
root(ROOT-0, scarce-11)
aux(make-13, to-12)
xcomp(scarce-11, make-13)
det(measurement-17, any-14)
amod(measurement-17, accurate-15)
nn(measurement-17, age-16)
dobj(make-13, measurement-17)

(ROOT
  (S (CC Yet)
    (NP
      (NP (NNP AiG) (POS 's))
      (NNS professionals))
    (VP (VBP admit)
      (PP (TO to)
        (S
          (VP (VBG using)
            (NP (DT this) (NN approach))
            (PP (TO to)
              (NP (NN date) (NNS diamonds)))))))
    (. ?)))

cc(admit-5, Yet-1)
poss(professionals-4, AiG-2)
nsubj(admit-5, professionals-4)
root(ROOT-0, admit-5)
prepc_to(admit-5, using-7)
det(approach-9, this-8)
dobj(using-7, approach-9)
nn(diamonds-12, date-11)
prep_to(using-7, diamonds-12)

