(ROOT
  (S
    (NP (NNP Behe))
    (VP (VBZ claims)
      (SBAR (IN that)
        (S
          (NP (PRP They))
          (VP (MD can)
            (VP
              (VP (VB bring)
                (PRT (RP together))
                (NP (JJ separate) (NNS components)))
              (CC and)
              (VP (VB place)
                (NP (PRP them))
                (PP (IN in)
                  (NP (NN relationship)))
                (PP (TO to)
                  (NP (DT each) (JJ other)))
                (, ,)
                (S
                  (VP (TO to)
                    (VP (VB create)
                      (NP
                        (NP (DT an) (NN effect))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (MD may)
                              (VP (VB be)
                                (ADJP (RB extremely) (JJ unlikely)
                                  (S
                                    (VP (TO to)
                                      (VP (VB occur)
                                        (PP (IN by)
                                          (NP (NN chance)))))))))))))))))))))
    (. .)))

nsubj(claims-2, Behe-1)
root(ROOT-0, claims-2)
complm(bring-6, that-3)
nsubj(bring-6, They-4)
nsubj(place-11, They-4)
xsubj(create-20, They-4)
aux(bring-6, can-5)
ccomp(claims-2, bring-6)
prt(bring-6, together-7)
amod(components-9, separate-8)
dobj(bring-6, components-9)
ccomp(claims-2, place-11)
conj_and(bring-6, place-11)
dobj(place-11, them-12)
prep_in(place-11, relationship-14)
det(other-17, each-16)
prep_to(place-11, other-17)
aux(create-20, to-19)
xcomp(place-11, create-20)
det(effect-22, an-21)
dobj(create-20, effect-22)
nsubj(unlikely-27, effect-22)
aux(unlikely-27, may-24)
cop(unlikely-27, be-25)
advmod(unlikely-27, extremely-26)
rcmod(effect-22, unlikely-27)
aux(occur-29, to-28)
xcomp(unlikely-27, occur-29)
prep_by(occur-29, chance-31)

(ROOT
  (S (IN So)
    (NP (PRP we))
    (VP (VBP detect)
      (NP (NN design))
      (PP (IN by)
        (S
          (VP (VBG inferring)
            (SBAR (IN that)
              (S
                (NP (DT some) (NNS parts))
                (VP (VBP appear)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (VP (VBN been)
                          (VP (VBN arranged)
                            (PP (IN for)
                              (NP (DT a) (NN purpose)))))))))))))))
    (. .)))

dep(detect-3, So-1)
nsubj(detect-3, we-2)
root(ROOT-0, detect-3)
dobj(detect-3, design-4)
prepc_by(detect-3, inferring-6)
complm(appear-10, that-7)
det(parts-9, some-8)
nsubj(appear-10, parts-9)
xsubj(arranged-14, parts-9)
ccomp(inferring-6, appear-10)
aux(arranged-14, to-11)
aux(arranged-14, have-12)
auxpass(arranged-14, been-13)
xcomp(appear-10, arranged-14)
det(purpose-17, a-16)
prep_for(arranged-14, purpose-17)

(ROOT
  (S
    (ADVP (RB Initially))
    (NP (DT this))
    (VP (VBD seemed)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (RB just) (DT another) (NN accident))
            (, ,)
            (SBAR (IN until)
              (S
                (NP (DT the) (NN police))
                (VP (VBD found)
                  (PRT (RP out))
                  (SBAR (IN that)
                    (S
                      (NP (DT the) (NN snake))
                      (VP (VBD was)
                        (NP
                          (NP (NN part))
                          (PP (IN of)
                            (NP
                              (NP (DT a) (JJ snake) (JJ charming) (NN ceremony))
                              (SBAR
                                (WHPP (IN in)
                                  (WHNP (WDT which)))
                                (S
                                  (NP (DT the) (NN faithful))
                                  (VP (VBP handle)
                                    (NP (NNS snakes))))))))))))))))))
    (. .)))

advmod(seemed-3, Initially-1)
nsubj(seemed-3, this-2)
xsubj(accident-8, this-2)
root(ROOT-0, seemed-3)
aux(accident-8, to-4)
cop(accident-8, be-5)
advmod(accident-8, just-6)
det(accident-8, another-7)
xcomp(seemed-3, accident-8)
mark(found-13, until-10)
det(police-12, the-11)
nsubj(found-13, police-12)
advcl(accident-8, found-13)
prt(found-13, out-14)
complm(part-19, that-15)
det(snake-17, the-16)
nsubj(part-19, snake-17)
cop(part-19, was-18)
ccomp(found-13, part-19)
det(ceremony-24, a-21)
amod(ceremony-24, snake-22)
amod(ceremony-24, charming-23)
prep_of(part-19, ceremony-24)
rel(handle-29, which-26)
det(faithful-28, the-27)
nsubj(handle-29, faithful-28)
rcmod(ceremony-24, handle-29)
dobj(handle-29, snakes-30)

(ROOT
  (S
    (S
      (SBAR (IN While)
        (FRAG
          (CONJP (RB not) (IN as))
          (NP (RB much) (DT an) (NN accident))))
      (, ,)
      (NP (PRP it))
      (VP (VBD was)
        (ADVP (RB also))
        (NP
          (NP (RB not) (DT a) (NN case))
          (PP (IN of)
            (NP (VBN attempted) (NN homicide))))))
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD could)
        (VP (VB be)
          (VP (VBN interpreted)
            (PP (IN as)
              (NP (DT an) (VBN attempted) (NN suicide)))))))
    (. .)))

mark(accident-6, While-1)
dep(accident-6, not-2)
dep(not-2, as-3)
advmod(accident-6, much-4)
det(accident-6, an-5)
advcl(case-13, accident-6)
nsubj(case-13, it-8)
cop(case-13, was-9)
advmod(case-13, also-10)
neg(case-13, not-11)
det(case-13, a-12)
root(ROOT-0, case-13)
amod(homicide-16, attempted-15)
prep_of(case-13, homicide-16)
nsubjpass(interpreted-21, it-18)
aux(interpreted-21, could-19)
auxpass(interpreted-21, be-20)
conj_but(case-13, interpreted-21)
det(suicide-25, an-23)
amod(suicide-25, attempted-24)
prep_as(interpreted-21, suicide-25)

(ROOT
  (SBARQ
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (WHNP (WDT what) (NN person))
    (SQ (MD would)
      (NP (NN willingly))
      (VP (VB handle)
        (NP (DT these) (JJ poisonous) (NNS snakes))))
    (. ?)))

prep_after(handle-8, all-2)
det(person-5, what-4)
dep(handle-8, person-5)
aux(handle-8, would-6)
nsubj(handle-8, willingly-7)
root(ROOT-0, handle-8)
det(snakes-11, these-9)
amod(snakes-11, poisonous-10)
dobj(handle-8, snakes-11)

(ROOT
  (S (CC But)
    (ADVP (RB then))
    (NP (DT the) (NN police))
    (VP (VBD found)
      (PRT (RP out))
      (SBAR
        (SBAR (IN that)
          (S
            (NP (DT the) (NN woman))
            (VP (VBD was)
              (NP
                (NP (DT the) (NN wife))
                (PP (IN of)
                  (NP (DT the) (NN preacher)))))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN preacher))
            (VP (VBD had)
              (ADVP (RB just))
              (VP (VBN taken)
                (PP (IN out)
                  (NP
                    (NP (DT a) (JJ large) (NN life) (NN insurance))
                    (PP (IN for)
                      (NP (PRP$ his) (NN wife)))))))))))
    (. .)))

cc(found-5, But-1)
advmod(found-5, then-2)
det(police-4, the-3)
nsubj(found-5, police-4)
root(ROOT-0, found-5)
prt(found-5, out-6)
complm(wife-12, that-7)
det(woman-9, the-8)
nsubj(wife-12, woman-9)
cop(wife-12, was-10)
det(wife-12, the-11)
ccomp(found-5, wife-12)
det(preacher-15, the-14)
prep_of(wife-12, preacher-15)
complm(taken-22, that-17)
det(preacher-19, the-18)
nsubj(taken-22, preacher-19)
aux(taken-22, had-20)
advmod(taken-22, just-21)
ccomp(found-5, taken-22)
conj_and(wife-12, taken-22)
det(insurance-27, a-24)
amod(insurance-27, large-25)
nn(insurance-27, life-26)
prep_out(taken-22, insurance-27)
poss(wife-30, his-29)
prep_for(insurance-27, wife-30)

(ROOT
  (S
    (ADVP (RB Now))
    (NP
      (ADVP (RB suddenly))
      (DT the) (NNS police))
    (VP (VBD became)
      (ADJP (JJ suspicious)))
    (. .)))

advmod(suspicious-6, Now-1)
advmod(police-4, suddenly-2)
det(police-4, the-3)
nsubj(suspicious-6, police-4)
cop(suspicious-6, became-5)
root(ROOT-0, suspicious-6)

(ROOT
  (SBARQ (CC But)
    (SQ (VBD was)
      (NP
        (NP (DT this) (NN evidence))
        (PP (IN of)
          (NP
            (NP (NN murder))
            (CC or)
            (NP (RB just) (DT a) (NN coincidence))))))
    (. ?)))

cc(was-2, But-1)
root(ROOT-0, was-2)
det(evidence-4, this-3)
nsubj(was-2, evidence-4)
prep_of(evidence-4, murder-6)
advmod(coincidence-10, just-8)
det(coincidence-10, a-9)
prep_of(evidence-4, coincidence-10)
conj_or(murder-6, coincidence-10)

(ROOT
  (S
    (NP
      (NP (NNP ID) (POS 's))
      (NNS hypothesis))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ useless)
          (PP (IN in)
            (NP (DT this) (NN case))))))
    (. .)))

poss(hypothesis-3, ID-1)
nsubj(useless-6, hypothesis-3)
aux(useless-6, would-4)
cop(useless-6, be-5)
root(ROOT-0, useless-6)
det(case-9, this-8)
prep_in(useless-6, case-9)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (S
      (NP (NNP ID) (NNS proponents))
      (VP (MD may)
        (VP (VB argue)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN design) (NN inference))
              (VP (VBZ is) (RB not)
                (VP (VBN meant)
                  (PP (IN for)
                    (NP (DT all) (NNS circumstances))))))))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB argue)
          (SBAR (IN that)
            (S
              (PP (IN for)
                (NP (JJ rarefied) (NN design)))
              (, ,)
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJ unsuitable)
                  (PP (IN in)
                    (NP (DT any) (NN circumstance))))))))))
    (. .)))

prep_of(argue-7, course-2)
nn(proponents-5, ID-4)
nsubj(argue-7, proponents-5)
aux(argue-7, may-6)
root(ROOT-0, argue-7)
complm(meant-14, that-8)
det(inference-11, the-9)
nn(inference-11, design-10)
nsubjpass(meant-14, inference-11)
auxpass(meant-14, is-12)
neg(meant-14, not-13)
ccomp(argue-7, meant-14)
det(circumstances-17, all-16)
prep_for(meant-14, circumstances-17)
nsubj(argue-21, I-19)
aux(argue-21, would-20)
conj_but(argue-7, argue-21)
complm(unsuitable-29, that-22)
amod(design-25, rarefied-24)
prep_for(unsuitable-29, design-25)
nsubj(unsuitable-29, it-27)
cop(unsuitable-29, is-28)
ccomp(argue-21, unsuitable-29)
det(circumstance-32, any-31)
prep_in(unsuitable-29, circumstance-32)

(ROOT
  (S
    (NP (JJ Rarefied) (NN design))
    (VP (VBZ is)
      (NP
        (NP (NN design))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ lacks)
              (NP (DT the) (JJ necessary) (NN information)
                (S
                  (VP (TO to)
                    (VP (VB constrain)
                      (NP (DT the) (JJ explanatory) (NN power))
                      (PP (IN through)
                        (NP (JJ relevant) (NN background) (NNS data))))))))))))
    (. .)))

amod(design-2, Rarefied-1)
nsubj(design-4, design-2)
cop(design-4, is-3)
root(ROOT-0, design-4)
nsubj(lacks-6, design-4)
rcmod(design-4, lacks-6)
det(information-9, the-7)
amod(information-9, necessary-8)
dobj(lacks-6, information-9)
aux(constrain-11, to-10)
infmod(information-9, constrain-11)
det(power-14, the-12)
amod(power-14, explanatory-13)
dobj(constrain-11, power-14)
amod(data-18, relevant-16)
nn(data-18, background-17)
prep_through(constrain-11, data-18)

(ROOT
  (S
    (PP (IN In)
      (NP (NN addition)))
    (, ,)
    (S
      (SBAR (IN while)
        (S
          (NP
            (NP (DT the) (NN concept))
            (PP (IN of)
              (NP (NN purpose))))
          (VP (VBZ is)
            (VP (VBN used)
              (PP (IN by)
                (NP (NNP Behe)))))))
      (, ,)
      (NP (NNP ID))
      (VP (VBZ provides)
        (NP (DT no) (NN way)
          (S
            (VP (TO to)
              (VP (VB determine)
                (NP (NN purpose))))))))
    (CC and)
    (S
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (S
        (ADJP (JJ due)
          (PP (TO to)
            (NP
              (NP (PRP$ its) (JJ teleological) (NN nature))
              (, ,)
              (NP (JJ natural) (NN selection))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ selects)
                    (SBAR (IN for)
                      (S
                        (NP (NN function))
                        (VP (MD can)
                          (VP (VB be)
                            (ADVP (RB easily)))))))))))))
      (VP (VBP lead)
        (PP (TO to)
          (NP (JJ apparent) (NN design)))))
    (. .)))

prep_in(provides-15, addition-2)
mark(used-10, while-4)
det(concept-6, the-5)
nsubjpass(used-10, concept-6)
prep_of(concept-6, purpose-8)
auxpass(used-10, is-9)
advcl(provides-15, used-10)
agent(used-10, Behe-12)
nsubj(provides-15, ID-14)
root(ROOT-0, provides-15)
det(way-17, no-16)
dobj(provides-15, way-17)
aux(determine-19, to-18)
infmod(way-17, determine-19)
dobj(determine-19, purpose-20)
prep_in(lead-41, fact-23)
csubj(lead-41, due-25)
poss(nature-29, its-27)
amod(nature-29, teleological-28)
prep_to(due-25, nature-29)
amod(selection-32, natural-31)
appos(nature-29, selection-32)
nsubj(selects-35, selection-32)
rcmod(nature-29, selects-35)
rcmod(selection-32, selects-35)
mark(be-39, for-36)
nsubj(be-39, function-37)
aux(be-39, can-38)
advcl(selects-35, be-39)
advmod(be-39, easily-40)
conj_and(provides-15, lead-41)
amod(design-44, apparent-43)
prep_to(lead-41, design-44)

(ROOT
  (S
    (VP (VB Remember)
      (ADVP (RB however))
      (SBAR (IN that)
        (S
          (NP (DT this))
          (VP (VBZ addresses)
            (NP
              (NP (JJ only) (NN chance))
              (CC and)
              (RB not)
              (NP (NN regularity)))))))
    (. .)))

root(ROOT-0, Remember-1)
advmod(Remember-1, however-2)
complm(addresses-5, that-3)
nsubj(addresses-5, this-4)
ccomp(Remember-1, addresses-5)
amod(chance-7, only-6)
dobj(addresses-5, chance-7)
dobj(addresses-5, not-9)
conj_and(chance-7, not-9)
neg(chance-7, not-9)
dep(chance-7, regularity-10)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (DT this))
    (VP (VBZ returns)
      (NP (PRP us))
      (PP (TO to)
        (NP (DT the) (NNP Paley) (NN problem)))
      (ADVP (RB namely))
      (SBAR (IN that)
        (S
          (NP (NN science))
          (VP (VBP replace)
            (NP (PRP$ our) (NN ignorance))
            (PP (IN with)
              (NP (JJ scientific) (NNS pathways)))
            (S
              (VP (TO to)
                (VP (VB explain)
                  (NP
                    (NP (DT the) (NN evolution))
                    (PP (IN of)
                      (NP (NN life))))
                  (PP (IN on)
                    (NP (NN earth))))))))))
    (. .)))

prep_in(returns-5, fact-2)
nsubj(returns-5, this-4)
root(ROOT-0, returns-5)
dobj(returns-5, us-6)
det(problem-10, the-8)
nn(problem-10, Paley-9)
prep_to(returns-5, problem-10)
advmod(returns-5, namely-11)
complm(replace-14, that-12)
nsubj(replace-14, science-13)
xsubj(explain-21, science-13)
ccomp(returns-5, replace-14)
poss(ignorance-16, our-15)
dobj(replace-14, ignorance-16)
amod(pathways-19, scientific-18)
prep_with(replace-14, pathways-19)
aux(explain-21, to-20)
xcomp(replace-14, explain-21)
det(evolution-23, the-22)
dobj(explain-21, evolution-23)
prep_of(evolution-23, life-25)
prep_on(explain-21, earth-27)

(ROOT
  (S
    (NP (DT That) (JJ subsequent) (NNS data))
    (VP (VBD continued)
      (S
        (VP (TO to)
          (VP (VB strengthen)
            (SBAR
              (S
                (NP (DT these) (NNS findings))
                (VP (VBZ has)
                  (VP (VBN made)
                    (PP
                      (NP (JJ evolutionary) (NN theory))
                      (JJ such)
                      (NP (DT a) (JJ powerful) (NN explanation)))))))))))
    (. .)))

det(data-3, That-1)
amod(data-3, subsequent-2)
nsubj(continued-4, data-3)
xsubj(strengthen-6, data-3)
root(ROOT-0, continued-4)
aux(strengthen-6, to-5)
xcomp(continued-4, strengthen-6)
det(findings-8, these-7)
nsubj(made-10, findings-8)
aux(made-10, has-9)
ccomp(strengthen-6, made-10)
amod(theory-12, evolutionary-11)
dep(such-13, theory-12)
prep(made-10, such-13)
det(explanation-16, a-14)
amod(explanation-16, powerful-15)
dep(such-13, explanation-16)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (NNP ID))
        (VP (VBZ has)
          (NP (JJ good) (NNS reasons)
            (S
              (VP (TO to)
                (VP (VB want)
                  (S
                    (VP (TO to)
                      (VP (VB return)
                        (PP (TO to)
                          (NP (DT the) (JJ pre-Paleyian) (NN age)))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ presents)
      (S
        (NP (DT no) (NNS methods))
        (VP (TO to)
          (VP (VB differentiate)
            (PP (IN between)
              (NP
                (ADJP (JJ apparent)
                  (CC and)
                  (JJ actual))
                (NN design)))))))
    (. .)))

mark(has-3, While-1)
nsubj(has-3, ID-2)
advcl(presents-16, has-3)
amod(reasons-5, good-4)
dobj(has-3, reasons-5)
aux(want-7, to-6)
infmod(reasons-5, want-7)
aux(return-9, to-8)
xcomp(want-7, return-9)
det(age-13, the-11)
amod(age-13, pre-Paleyian-12)
prep_to(return-9, age-13)
nsubj(presents-16, it-15)
root(ROOT-0, presents-16)
det(methods-18, no-17)
nsubj(differentiate-20, methods-18)
aux(differentiate-20, to-19)
xcomp(presents-16, differentiate-20)
amod(design-25, apparent-22)
conj_and(apparent-22, actual-24)
amod(design-25, actual-24)
prep_between(differentiate-20, design-25)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (PDT such) (DT a) (NN differentiation))
    (VP (VBZ is)
      (ADVP (RB never))
      (ADJP (RB truly) (JJ possible)
        (PP (IN in)
          (NP
            (NP (NN case))
            (PP (IN of)
              (NP (DT the) (NN supernatural))))))
      (SBAR (IN because)
        (S
          (NP (PRP one))
          (VP (MD could)
            (ADVP (RB always))
            (VP (VB argue)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN designer))
                  (VP (VBD used)
                    (NP (NN nature))
                    (PP (IN for)
                      (NP (PRP$ its) (NN design)))
                    (, ,)
                    (SBAR (RB just) (IN like)
                      (S
                        (NP (DT the) (NN evidence))
                        (VP (VBZ suggests))))))))))))
    (. .)))

prep_in(possible-10, fact-2)
predet(differentiation-6, such-4)
det(differentiation-6, a-5)
nsubj(possible-10, differentiation-6)
cop(possible-10, is-7)
neg(possible-10, never-8)
advmod(possible-10, truly-9)
root(ROOT-0, possible-10)
det(supernatural-15, the-14)
prep_in_case_of(possible-10, supernatural-15)
mark(argue-20, because-16)
nsubj(argue-20, one-17)
aux(argue-20, could-18)
advmod(argue-20, always-19)
advcl(possible-10, argue-20)
complm(used-24, that-21)
det(designer-23, the-22)
nsubj(used-24, designer-23)
ccomp(argue-20, used-24)
dobj(used-24, nature-25)
poss(design-28, its-27)
prep_for(used-24, design-28)
advmod(suggests-34, just-30)
dep(suggests-34, like-31)
det(evidence-33, the-32)
nsubj(suggests-34, evidence-33)
dep(used-24, suggests-34)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (PRN (, ,)
      (S
        (NP (NNP ID))
        (VP (VBZ does) (RB not)
          (VP (VB infer)
            (NP
              (NP (NN purpose))
              (CC or)
              (NP (DT a) (JJ purposeful) (NN arrangement))))))
      (, ,))
    (NP (PRP it))
    (ADVP (RB merely))
    (VP (VBZ claims)
      (SBAR (IN that)
        (S
          (NP (NN design))
          (VP (VBZ is)
            (NP
              (NP (DT that))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ remains)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (NN science))
                        (VP (VBZ has)
                          (VP (VBN failed)
                            (PRN (-LRB- -LRB-)
                              (ADVP (RB so) (RB far))
                              (-RRB- -RRB-))))))))))
            (S
              (VP (TO to)
                (VP (VB explain)
                  (NP (DT a) (JJ particular) (NN feature)
                    (CC or)
                    (NN system)))))))))
    (. .)))

prep_in(claims-16, fact-2)
nsubj(infer-7, ID-4)
aux(infer-7, does-5)
neg(infer-7, not-6)
parataxis(claims-16, infer-7)
dobj(infer-7, purpose-8)
det(arrangement-12, a-10)
amod(arrangement-12, purposeful-11)
dobj(infer-7, arrangement-12)
conj_or(purpose-8, arrangement-12)
nsubj(claims-16, it-14)
advmod(claims-16, merely-15)
root(ROOT-0, claims-16)
complm(that-20, that-17)
nsubj(that-20, design-18)
cop(that-20, is-19)
ccomp(claims-16, that-20)
nsubj(remains-22, that-20)
rcmod(that-20, remains-22)
advmod(failed-26, when-23)
nsubj(failed-26, science-24)
aux(failed-26, has-25)
advcl(remains-22, failed-26)
advmod(far-29, so-28)
dep(failed-26, far-29)
aux(explain-32, to-31)
xcomp(that-20, explain-32)
det(feature-35, a-33)
amod(feature-35, particular-34)
dobj(explain-32, feature-35)
dobj(explain-32, system-37)
conj_or(feature-35, system-37)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB call)
          (NP (PRP$ our) (NN ignorance) (`` ``) (NN design) ('' '')))))
    (VP (VBZ is)
      (ADVP (RB just))
      (VP (VBG equivocating)
        (PP (IN on)
          (NP (NNS concepts)))))
    (. .)))

advmod(equivocating-12, However-1)
aux(call-4, to-3)
csubj(equivocating-12, call-4)
poss(design-8, our-5)
nn(design-8, ignorance-6)
dobj(call-4, design-8)
aux(equivocating-12, is-10)
advmod(equivocating-12, just-11)
root(ROOT-0, equivocating-12)
prep_on(equivocating-12, concepts-14)

(ROOT
  (S
    (S
      (ADVP (RB So))
      (NP (JJ next) (NN time))
      (NP (DT an) (NNP ID) (NN proponent))
      (VP (VBZ asserts)
        (SBAR (IN that)
          (S
            (NP (NNP ID))
            (VP (VBZ detects)
              (NP (NN design))
              (PP (IN through)
                (NP
                  (NP (DT the) (JJ purposeful) (NN arrangement))
                  (PP (IN of)
                    (NP (NNS parts))))))))))
    (, ,)
    (NP (NNP let) (POS 's))
    (VP (VBP remember)
      (SBAR (IN that)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP
              (NP (NNP NOT))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP
                    (NP (NNP ID) (POS 's))
                    (NNS methods))
                  (VP (VBP work)))))))))
    (. .)))

advmod(asserts-7, So-1)
amod(time-3, next-2)
nsubj(asserts-7, time-3)
det(proponent-6, an-4)
nn(proponent-6, ID-5)
nsubj(asserts-7, proponent-6)
ccomp(remember-21, asserts-7)
complm(detects-10, that-8)
nsubj(detects-10, ID-9)
ccomp(asserts-7, detects-10)
dobj(detects-10, design-11)
det(arrangement-15, the-13)
amod(arrangement-15, purposeful-14)
prep_through(detects-10, arrangement-15)
prep_of(arrangement-15, parts-17)
nsubj(remember-21, let-19)
possessive(let-19, 's-20)
root(ROOT-0, remember-21)
complm(NOT-25, that-22)
nsubj(NOT-25, this-23)
cop(NOT-25, is-24)
ccomp(remember-21, NOT-25)
advmod(work-30, how-26)
poss(methods-29, ID-27)
nsubj(work-30, methods-29)
dep(NOT-25, work-30)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (NN regularity))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ helps)
              (SBAR
                (S
                  (NP (PRP us))
                  (VP (VBP understand)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (NN design) (NNS inferences))
                        (VP (VBP work)
                          (PP (IN in)
                            (NP (JJ real) (NN science)))
                          (SBAR
                            (WHADVP (WRB where))
                            (S
                              (NP
                                (NP (NN science) (NNS deals))
                                (PP (IN in)
                                  (NP
                                    (NP (NNS concepts))
                                    (PP (JJ such) (IN as)
                                      (NP (NNS means) (, ,) (NNS motives)
                                        (CC and)
                                        (NNS opportunities))))))
                              (VP (TO to)
                                (VP (VB narrow)
                                  (PRT (RP down))
                                  (NP (DT the) (NNS possibilities))
                                  (PP (RB not) (IN by)
                                    (S
                                      (VP (VBG relying)
                                        (PP
                                          (PP (IN on)
                                            (NP (NN chance)))
                                          (CONJP (CC but)
                                            (RB rather))
                                          (PP (IN on)
                                            (NP
                                              (NP (DT an) (NN interplay))
                                              (PP (IN of)
                                                (NP (NN regularity)
                                                  (CC and)
                                                  (NN chance))))))))))))))))))))))))
    (. .)))

prep_in(regularity-6, fact-2)
nsubj(regularity-6, it-4)
cop(regularity-6, is-5)
root(ROOT-0, regularity-6)
nsubj(helps-8, regularity-6)
rcmod(regularity-6, helps-8)
nsubj(understand-10, us-9)
ccomp(helps-8, understand-10)
advmod(work-14, how-11)
nn(inferences-13, design-12)
nsubj(work-14, inferences-13)
ccomp(understand-10, work-14)
amod(science-17, real-16)
prep_in(work-14, science-17)
advmod(narrow-31, where-18)
nn(deals-20, science-19)
nsubj(narrow-31, deals-20)
prep_in(deals-20, concepts-22)
prep_such_as(concepts-22, means-25)
prep_such_as(concepts-22, motives-27)
conj_and(means-25, motives-27)
prep_such_as(concepts-22, opportunities-29)
conj_and(means-25, opportunities-29)
aux(narrow-31, to-30)
xcomp(work-14, narrow-31)
prt(narrow-31, down-32)
det(possibilities-34, the-33)
dobj(narrow-31, possibilities-34)
neg(narrow-31, not-35)
prepc_by(narrow-31, relying-37)
prep_on(relying-37, chance-39)
det(interplay-44, an-43)
prep_on(relying-37, interplay-44)
conj_negcc(chance-39, interplay-44)
prep_of(interplay-44, regularity-46)
prep_of(interplay-44, chance-48)
conj_and(regularity-46, chance-48)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB determine)
        (SBAR (IN that)
          (S
            (NP (DT a) (NN person))
            (VP (VBD was)
              (VP (VBN involved)
                (PP (IN in)
                  (NP (DT a) (NN crime)))))))))
    (. ?)))

advmod(determine-4, How-1)
aux(determine-4, do-2)
nsubj(determine-4, we-3)
root(ROOT-0, determine-4)
complm(involved-9, that-5)
det(person-7, a-6)
nsubjpass(involved-9, person-7)
auxpass(involved-9, was-8)
ccomp(determine-4, involved-9)
det(crime-12, a-11)
prep_in(involved-9, crime-12)

(ROOT
  (FRAG (RB Not)
    (PP (IN by)
      (S
        (VP (VBG stating)
          (SBAR (IN that)
            (S (`` ``)
              (NP (NN chance)
                (CC and)
                (NN regularity))
              ('' '')
              (VP (MD can) (RB not)
                (VP (VB explain)
                  (NP
                    (NP (DT the) (NNS data))
                    (VP
                      (ADVP (RB thus))
                      (VBN designed)))))))))
      (. .))))

root(ROOT-0, Not-1)
dep(Not-1, by-2)
pcomp(by-2, stating-3)
complm(explain-12, that-4)
nsubj(explain-12, chance-6)
conj_and(chance-6, regularity-8)
nsubj(explain-12, regularity-8)
aux(explain-12, can-10)
neg(explain-12, not-11)
ccomp(stating-3, explain-12)
det(data-14, the-13)
dobj(explain-12, data-14)
advmod(designed-16, thus-15)
partmod(data-14, designed-16)

(ROOT
  (S
    (NP
      (NP (JJ Few) (NNS crimes))
      (SBAR
        (SBAR (IN if)
          (S
            (NP (DT any))
            (VP (VBP have)
              (VP (VBN been)
                (VP (VBN solved)
                  (PP (IN in)
                    (NP (DT this) (NN manner))))))))
        (, ,)
        (CC and)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD should)
              (VP (VB come)
                (PP (IN as)
                  (NP (DT no) (NN surprise)))
                (SBAR (IN since)
                  (S
                    (NP (PRP we))
                    (VP (MD would)
                      (VP (VB expect)
                        (S
                          (VP (TO to)
                            (VP (VB see)
                              (NP (JJ many) (JJ innocent) (NNS people)))))))))))))))
    (VP (VBD locked)
      (PRT (RP up)))
    (. .)))

amod(crimes-2, Few-1)
nsubj(come-15, crimes-2)
nsubj(locked-28, crimes-2)
mark(solved-7, if-3)
nsubjpass(solved-7, any-4)
aux(solved-7, have-5)
auxpass(solved-7, been-6)
rcmod(crimes-2, solved-7)
det(manner-10, this-9)
prep_in(solved-7, manner-10)
aux(come-15, should-14)
rcmod(crimes-2, come-15)
conj_and(solved-7, come-15)
det(surprise-18, no-17)
prep_as(come-15, surprise-18)
mark(expect-22, since-19)
nsubj(expect-22, we-20)
xsubj(see-24, we-20)
aux(expect-22, would-21)
advcl(come-15, expect-22)
aux(see-24, to-23)
xcomp(expect-22, see-24)
amod(people-27, many-25)
amod(people-27, innocent-26)
dobj(see-24, people-27)
root(ROOT-0, locked-28)
prt(locked-28, up-29)

(ROOT
  (S
    (PP (IN Without)
      (S
        (ADVP (RB however))
        (VP (VBG understanding)
          (NP (NN motive) (, ,) (NN means)
            (CC and)
            (NNS opportunities)))))
    (, ,)
    (NP (PRP one))
    (VP (MD can) (RB not)
      (ADVP (RB easily))
      (VP (VB make)
        (NP (DT a) (NN design) (NN conclusion))))
    (. .)))

advmod(understanding-3, however-2)
prepc_without(make-14, understanding-3)
dobj(understanding-3, motive-4)
dobj(understanding-3, means-6)
conj_and(motive-4, means-6)
dobj(understanding-3, opportunities-8)
conj_and(motive-4, opportunities-8)
nsubj(make-14, one-10)
aux(make-14, can-11)
neg(make-14, not-12)
advmod(make-14, easily-13)
root(ROOT-0, make-14)
det(conclusion-17, a-15)
nn(conclusion-17, design-16)
dobj(make-14, conclusion-17)

(ROOT
  (S
    (NP (NNP Gary) (NNP Hurd))
    (VP (VBD presented)
      (NP
        (NP (DT a) (JJ good) (NN example))
        (PP (IN of)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP
                (NP (DT the) (NN circumstance))
                (PP (IN of)
                  (NP (PRP$ our) (NN background) (NN knowledge))))
              (VP (MD can)
                (ADVP (RB greatly))
                (VP (VB affect)
                  (NP (PRP$ our) (NN inference)))))))))
    (. .)))

nn(Hurd-2, Gary-1)
nsubj(presented-3, Hurd-2)
root(ROOT-0, presented-3)
det(example-6, a-4)
amod(example-6, good-5)
dobj(presented-3, example-6)
advmod(affect-17, how-8)
det(circumstance-10, the-9)
nsubj(affect-17, circumstance-10)
poss(knowledge-14, our-12)
nn(knowledge-14, background-13)
prep_of(circumstance-10, knowledge-14)
aux(affect-17, can-15)
advmod(affect-17, greatly-16)
prepc_of(example-6, affect-17)
poss(inference-19, our-18)
dobj(affect-17, inference-19)

(ROOT
  (S
    (NP (DT The) (NN case))
    (VP (VBZ involves)
      (NP
        (NP (DT an) (NN example))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (DT a) (JJ religious) (NN person))
            (VP (VBD was)
              (VP (VBN bitten)
                (PP (IN by)
                  (NP (DT a) (NN snake)))))))))
    (. .)))

det(case-2, The-1)
nsubj(involves-3, case-2)
root(ROOT-0, involves-3)
det(example-5, an-4)
dobj(involves-3, example-5)
rel(bitten-12, which-7)
det(person-10, a-8)
amod(person-10, religious-9)
nsubjpass(bitten-12, person-10)
auxpass(bitten-12, was-11)
rcmod(example-5, bitten-12)
det(snake-15, a-14)
agent(bitten-12, snake-15)

