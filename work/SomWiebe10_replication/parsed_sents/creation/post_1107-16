(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP
                (NP (DT a) (JJ big) (NN hunk))
                (PP (IN of)
                  (NP (NN metal))))
              (VP (VBZ flies)
                (PP (IN through)
                  (NP (DT the) (NN air)
                    (S
                      (VP (TO to)
                        (VP (VB get)
                          (NP (PRP me))
                          (ADVP (RB somewhere)))))))))))))
    (, ,)
    (NP (FW i))
    (VP (VBP do) (RB n't)
      (ADVP (RB even))
      (VP (VB think)
        (SBAR (IN that)
          (S
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ possible))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
ccomp(think-24, know-4)
advmod(flies-11, how-5)
det(hunk-8, a-6)
amod(hunk-8, big-7)
nsubj(flies-11, hunk-8)
prep_of(hunk-8, metal-10)
ccomp(know-4, flies-11)
det(air-14, the-13)
prep_through(flies-11, air-14)
aux(get-16, to-15)
infmod(air-14, get-16)
dobj(get-16, me-17)
advmod(get-16, somewhere-18)
nsubj(think-24, i-20)
aux(think-24, do-21)
neg(think-24, n't-22)
advmod(think-24, even-23)
root(ROOT-0, think-24)
complm(possible-28, that-25)
aux(possible-28, should-26)
cop(possible-28, be-27)
ccomp(think-24, possible-28)

