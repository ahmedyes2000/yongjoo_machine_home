(ROOT
  (S
    (NP (NNP Behe))
    (VP (VBZ claims)
      (NP
        (NP (DT that))
        ('' '')
        (SBAR
          (S
            (NP (DT That))
            (VP (VBZ is) (RB not)
              (NP
                (NP (DT the) (NN sort))
                (PP (IN of)
                  (NP (NN process) (CD one)))
                (SBAR
                  (S
                    (VP (VBZ needs)
                      (S
                        (VP (TO to)
                          (VP (VB build)
                            (NP (JJ complex) (JJ molecular) (NNS systems))))))))))))))
    (. .)))

nsubj(claims-2, Behe-1)
root(ROOT-0, claims-2)
dobj(claims-2, that-3)
nsubj(sort-9, That-5)
cop(sort-9, is-6)
neg(sort-9, not-7)
det(sort-9, the-8)
rcmod(that-3, sort-9)
prep_of(sort-9, process-11)
num(process-11, one-12)
rcmod(sort-9, needs-13)
aux(build-15, to-14)
xcomp(needs-13, build-15)
amod(systems-18, complex-16)
amod(systems-18, molecular-17)
dobj(build-15, systems-18)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (VP (VBG discussing)
            (NP (DT the)))))
      (VP (VBZ experiment)))
    (IN by)
    (S
      (NP (NNP Richard))
      (VP (VBZ Lenski)))
    (. .)))

advmod(discussing-3, when-2)
advcl(experiment-5, discussing-3)
csubj(experiment-5, discussing-3)
dobj(discussing-3, the-4)
root(ROOT-0, experiment-5)
dep(experiment-5, by-6)
nsubj(Lenski-8, Richard-7)
ccomp(experiment-5, Lenski-8)

(ROOT
  (SINV
    (ADVP (RB Only)
      (PP (IN after)
        (NP (PRP they))
        (ADVP
          (NP (CD mutated))
          (RBR further))))
    (VBD did)
    (NP (PRP$ their) (NN citrate-eating))
    (VP (VB become)
      (NP
        (NP (DT a) (NN recipe))
        (PP (IN for)
          (NP (NN success)))))
    (. .)))

advmod(recipe-11, Only-1)
prep_after(Only-1, they-3)
npadvmod(further-5, mutated-4)
advmod(Only-1, further-5)
aux(recipe-11, did-6)
poss(citrate-eating-8, their-7)
nsubj(recipe-11, citrate-eating-8)
cop(recipe-11, become-9)
det(recipe-11, a-10)
root(ROOT-0, recipe-11)
prep_for(recipe-11, success-13)

(ROOT
  (S ('' '')
    (PP (IN In)
      (NP
        (NP (DT an) (JJR earlier) (NN article))
        (PP (IN in)
          (NP (DT the) (NNP NY) (NNP Times)))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (VP (VBN reported)
        (SBAR (IN that)
          (S
            (NP (DT these) (NNS bacteria))
            (VP (VBD were) (RB not)
              (NP
                (NP (DT the) (JJ same) (NNS ones))
                ('' '')
                (SBAR
                  (S
                    (PP (IN In)
                      (NP (DT that) (NN time)))
                    (, ,)
                    (NP (DT the) (NNS bacteria))
                    (VP (VBP have)
                      (VP (VBN changed)
                        (ADVP (RB significantly))))))))))))
    (. .)))

det(article-5, an-3)
amod(article-5, earlier-4)
prep_in(reported-13, article-5)
det(Times-9, the-7)
nn(Times-9, NY-8)
prep_in(article-5, Times-9)
nsubjpass(reported-13, it-11)
auxpass(reported-13, was-12)
root(ROOT-0, reported-13)
complm(ones-21, that-14)
det(bacteria-16, these-15)
nsubj(ones-21, bacteria-16)
cop(ones-21, were-17)
neg(ones-21, not-18)
det(ones-21, the-19)
amod(ones-21, same-20)
ccomp(reported-13, ones-21)
dobj(changed-30, ones-21)
det(time-25, that-24)
prep_in(changed-30, time-25)
det(bacteria-28, the-27)
nsubj(changed-30, bacteria-28)
aux(changed-30, have-29)
rcmod(ones-21, changed-30)
advmod(changed-30, significantly-31)

(ROOT
  (S
    (PP (IN For)
      (NP (CD one) (NN thing)))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADJP (RBR bigger) (RB twice) (RB as) (JJ big)
        (PP (IN on)
          (NP (NN average))))
      (PP (IN as)
        (NP (PRP$ their) (JJ common) (NN ancestor))))
    (. .)))

num(thing-3, one-2)
prep_for(big-10, thing-3)
nsubj(big-10, they-5)
cop(big-10, are-6)
advmod(big-10, bigger-7)
advmod(big-10, twice-8)
advmod(big-10, as-9)
root(ROOT-0, big-10)
prep_on(big-10, average-12)
poss(ancestor-16, their-14)
amod(ancestor-16, common-15)
prep_as(big-10, ancestor-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (ADVP (RB also))
      (ADJP
        (ADJP (RB far) (JJR better))
        (PP (IN at)
          (S
            (VP
              (VP (VBG reproducing)
                (PP (IN in)
                  (NP (DT these) (NNS flasks))))
              (, ,)
              (VP (VBG dividing)
                (PP
                  (ADVP
                    (NP (CD 70) (NN percent))
                    (RBR faster))
                  (IN than)
                  (NP (PRP$ their) (NN ancestor)))))))))
    (. .)))

nsubj(better-5, They-1)
cop(better-5, are-2)
advmod(better-5, also-3)
advmod(better-5, far-4)
root(ROOT-0, better-5)
prepc_at(better-5, reproducing-7)
det(flasks-10, these-9)
prep_in(reproducing-7, flasks-10)
dep(reproducing-7, dividing-12)
num(percent-14, 70-13)
npadvmod(faster-15, percent-14)
advmod(dividing-12, faster-15)
poss(ancestor-18, their-17)
prep_than(dividing-12, ancestor-18)

(ROOT
  (S
    (S
      (NP (DT These) (NNS changes))
      (VP (VBP have)
        (VP (VBN emerged)
          (PP (IN through)
            (NP
              (NP (JJ spontaneous) (NNS mutations))
              (CC and)
              (NP (JJ natural) (NN selection)))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NNP Dr.) (NNP Lenski))
        (CC and)
        (NP (PRP$ his) (NNS colleagues)))
      (VP (VBP have)
        (VP (VBN been)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB watch)
                  (S
                    (NP (PRP them))
                    (VP (VB unfold))))))))))
    (. .)))

det(changes-2, These-1)
nsubj(emerged-4, changes-2)
aux(emerged-4, have-3)
root(ROOT-0, emerged-4)
amod(mutations-7, spontaneous-6)
prep_through(emerged-4, mutations-7)
amod(selection-10, natural-9)
prep_through(emerged-4, selection-10)
conj_and(mutations-7, selection-10)
nn(Lenski-14, Dr.-13)
nsubj(able-20, Lenski-14)
poss(colleagues-17, his-16)
conj_and(Lenski-14, colleagues-17)
nsubj(able-20, colleagues-17)
aux(able-20, have-18)
cop(able-20, been-19)
conj_and(emerged-4, able-20)
aux(watch-22, to-21)
xcomp(able-20, watch-22)
nsubj(unfold-24, them-23)
ccomp(watch-22, unfold-24)

(ROOT
  (S ('' '')
    (S
      (PP (IN Of)
        (NP (NN course)))
      (, ,)
      (NP
        (NP (NN none))
        (PP (IN of)
          (NP (DT these) (NNS bacteria))))
      (VP (VBD evolved)
        (PP (IN into)
          (NP
            (NP (NNS mammals))
            (, ,)
            (NP
              (NP (NN something))
              (VP
                (ADVP (RB hardly))
                (VBN expected)
                (PP (VBN given)
                  (NP
                    (NP (DT the) (JJ limited) (NNS timescales))
                    (VP (VBN involved))))))))))
    (, ,)
    (ADVP (RB however))
    (S
      (ADVP (JJ contrary)
        (PP (TO to)
          (NP
            (NP (NNP Behe) (POS 's))
            (NNS claims))))
      (, ,)
      (NP (DT these) (NNS bacteria))
      (VP (VBD started)
        (S
          (VP (TO to)
            (VP (VB feed)
              (PP (IN on)
                (NP (NN citrate)))
              (SBAR (RB even) (IN though)
                (S
                  (NP (PDT such) (DT a) (NN feat))
                  (VP (VBD required)
                    (NP (JJ multiple) (NNS changes))))))))))
    (. .)))

prep_of(evolved-9, course-3)
nsubj(evolved-9, none-5)
det(bacteria-8, these-7)
prep_of(none-5, bacteria-8)
root(ROOT-0, evolved-9)
prep_into(evolved-9, mammals-11)
appos(mammals-11, something-13)
advmod(expected-15, hardly-14)
partmod(something-13, expected-15)
prep(expected-15, given-16)
det(timescales-19, the-17)
amod(timescales-19, limited-18)
dep(given-16, timescales-19)
partmod(timescales-19, involved-20)
advmod(evolved-9, however-22)
poss(claims-27, Behe-25)
prep_contrary_to(started-31, claims-27)
det(bacteria-30, these-29)
nsubj(started-31, bacteria-30)
xsubj(feed-33, bacteria-30)
ccomp(evolved-9, started-31)
aux(feed-33, to-32)
xcomp(started-31, feed-33)
prep_on(feed-33, citrate-35)
advmod(required-41, even-36)
dep(required-41, though-37)
predet(feat-40, such-38)
det(feat-40, a-39)
nsubj(required-41, feat-40)
ccomp(feed-33, required-41)
amod(changes-43, multiple-42)
dobj(required-41, changes-43)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (ADJP (JJ clear))
      (SBAR (IN that)
        (S
          (NP
            (NP (RB even) (DT these) (JJ trivial) (NNS examples))
            (PP (IN of)
              (NP (JJ hard) (JJ scientific) (NN work))))
          (VP (VBP show)
            (SBAR (RB not) (RB only) (IN that)
              (S
                (NP (NNP ID))
                (VP
                  (VP (VBZ remains)
                    (NP (JJ scientifically) (NNS vacuous)))
                  (CC but)
                  (ADVP (RB also))
                  (SBAR (IN that)
                    (S
                      (NP (NNP ID))
                      (VP (VBZ has)
                        (S
                          (VP (TO to)
                            (VP (VB reject)
                              (CC and)
                              (VB ignore)
                              (NP
                                (NP (JJ contradicting) (NN evidence))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBZ shows)
                                      (S
                                        (NP (PRP it))
                                        (VP (TO to)
                                          (VP (VB be)
                                            (ADJP (JJ wrong))))))))))))))))))))))
    (. .)))

nsubj(clear-3, It-1)
cop(clear-3, seems-2)
root(ROOT-0, clear-3)
complm(show-13, that-4)
advmod(examples-8, even-5)
det(examples-8, these-6)
amod(examples-8, trivial-7)
nsubj(show-13, examples-8)
amod(work-12, hard-10)
amod(work-12, scientific-11)
prep_of(examples-8, work-12)
ccomp(clear-3, show-13)
dep(vacuous-20, not-14)
advmod(vacuous-20, only-15)
dep(vacuous-20, that-16)
nsubj(vacuous-20, ID-17)
cop(vacuous-20, remains-18)
amod(vacuous-20, scientifically-19)
ccomp(show-13, vacuous-20)
ccomp(show-13, also-22)
advmod(vacuous-20, also-22)
conj_but(vacuous-20, also-22)
dep(has-25, that-23)
nsubj(has-25, ID-24)
xsubj(reject-27, ID-24)
ccomp(show-13, has-25)
ccomp(vacuous-20, has-25)
conj_but(vacuous-20, has-25)
aux(reject-27, to-26)
xcomp(has-25, reject-27)
xcomp(has-25, ignore-29)
conj_and(reject-27, ignore-29)
amod(evidence-31, contradicting-30)
dobj(reject-27, evidence-31)
nsubj(shows-33, evidence-31)
rcmod(evidence-31, shows-33)
nsubj(wrong-37, it-34)
aux(wrong-37, to-35)
cop(wrong-37, be-36)
xcomp(shows-33, wrong-37)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (ADJP
        (ADJP (RB even) (JJR worse))
        (PP (IN about)
          (NP
            (NP (NNP ID))
            (VP (VBG being)
              (VP (VBN scientifically)
                (NP (NNS vacuous))))))))
    (. ?)))

attr(worse-4, What-1)
cop(worse-4, 's-2)
advmod(worse-4, even-3)
root(ROOT-0, worse-4)
prep_about(worse-4, ID-6)
auxpass(scientifically-8, being-7)
partmod(ID-6, scientifically-8)
dobj(scientifically-8, vacuous-9)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ my) (NN opinion)))
    (, ,)
    (S
      (NP (NNP ID))
      (VP (VBG being)
        (ADJP (JJ wrong))))
    (CC and)
    (S
      (VP (VBG knowing)
        (NP (PRP it))))
    (. .)))

poss(opinion-3, my-2)
prep_in(wrong-7, opinion-3)
nsubj(wrong-7, ID-5)
nsubj(knowing-9, ID-5)
cop(wrong-7, being-6)
root(ROOT-0, wrong-7)
conj_and(wrong-7, knowing-9)
dobj(knowing-9, it-10)

(ROOT
  (S
    (VP (VB Read)
      (NP
        (NP (JJR more))
        (PP (IN about)
          (NP (DT the) (NN experiment))))
      (ADVP (JJ first) (NN hand) (IN at))
      (: :)
      (ADVP (RB http:\/\/myxo.css.msu.edu\/index.html)))))

root(ROOT-0, Read-1)
dobj(Read-1, more-2)
det(experiment-5, the-4)
prep_about(more-2, experiment-5)
advmod(at-8, first-6)
dep(at-8, hand-7)
advmod(Read-1, at-8)
advmod(Read-1, http:\/\/myxo.css.msu.edu\/index.html-10)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (NNP Behe))
        (VP (VBZ forgets)
          (S
            (VP (TO to)
              (VP (VB mention)
                (SBAR
                  (S
                    (VP (VBP are)
                      (NP
                        (NP (DT the) (JJ actual) (NNS findings))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN research))
                            (PP (JJ such)
                              (PP (IN as)))))
                        ('' '')
                        (PP (NNP Over)
                          (NP (DT the) (NNS generations)))
                        (, ,)
                        (PP (IN in)
                          (NP (NNS fits)
                            (CC and)
                            (NNS starts)))))))))))))
    (, ,)
    (NP (DT the) (NNS bacteria))
    (VP (VBD did) (RB indeed)
      (VP (VB evolve)
        (PP (IN into)
          (NP (JJR faster) (NNS breeders)))))
    (. .)))

dep(forgets-3, What-1)
nsubj(forgets-3, Behe-2)
xsubj(mention-5, Behe-2)
dep(evolve-29, forgets-3)
aux(mention-5, to-4)
xcomp(forgets-3, mention-5)
cop(findings-9, are-6)
det(findings-9, the-7)
amod(findings-9, actual-8)
ccomp(mention-5, findings-9)
det(research-12, the-11)
prep_of(findings-9, research-12)
prep(research-12, such-13)
prep(such-13, as-14)
prep(findings-9, Over-16)
det(generations-18, the-17)
dep(Over-16, generations-18)
prep_in(findings-9, fits-21)
prep_in(findings-9, starts-23)
conj_and(fits-21, starts-23)
det(bacteria-26, the-25)
nsubj(evolve-29, bacteria-26)
aux(evolve-29, did-27)
advmod(evolve-29, indeed-28)
root(ROOT-0, evolve-29)
amod(breeders-32, faster-31)
prep_into(evolve-29, breeders-32)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS bacteria))
      (PP (IN in)
        (NP (DT the) (NNS flasks))))
    (NP (NN today))
    (VP (VBP breed)
      (PP
        (ADVP
          (NP (CD 75) (NN %))
          (RBR faster))
        (IN on)
        (NP
          (NP (NN average))
          (PP (IN than)
            (NP (PRP$ their) (JJ original) (NN ancestor))))))
    (. .)))

det(bacteria-2, The-1)
nsubj(breed-7, bacteria-2)
det(flasks-5, the-4)
prep_in(bacteria-2, flasks-5)
nsubj(breed-7, today-6)
root(ROOT-0, breed-7)
num(%-9, 75-8)
npadvmod(faster-10, %-9)
advmod(breed-7, faster-10)
prep_on(breed-7, average-12)
poss(ancestor-16, their-14)
amod(ancestor-16, original-15)
prep_than(average-12, ancestor-16)

(ROOT
  (S (`` ``)
    (S (CC and)
      (NP (PRP they))
      (VP
        (ADVP (RB also))
        (VBD showed)
        (NP
          (NP (DT some) (JJ interesting) (NNS findings))
          (SBAR
            (WHNP
              (WHNP (WDT that) (NN show))
              (NP (WRB how) (JJ beneficial\/detrimental)))
            (S
              (VP (VBZ depends)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN environment))
                    ('' '')
                    (SBAR
                      (S
                        (NP
                          (NP (NNP Lenski))
                          (CC and)
                          (NP (PRP$ his) (NNS colleagues)))
                        (VP (VBP have)
                          (ADVP (RB also))
                          (VP (VBN shown)
                            (SBAR
                              (WHADVP (WRB how))
                              (S
                                (NP (JJ natural) (NN selection))
                                (VP (VBZ has)
                                  (VP (VBN demanded)
                                    (NP (NNS trade-offs))
                                    (PP (IN from)
                                      (NP (DT the) (NNS bacteria)))))))))))))))))))
    (: ;)
    (S
      (SBAR (IN while)
        (S
          (NP (PRP they))
          (VP (VBP grow)
            (ADVP (RBR faster))
            (PP (IN on)
              (NP
                (NP (DT a) (JJ meager) (NN diet))
                (PP (IN of)
                  (NP (NN glucose))))))))
      (, ,)
      (NP (PRP they))
      (VP (VBP 've)
        (VP (VBN gotten)
          (S
            (ADJP (RBR worse)))
          (PP (IN at)
            (S
              (VP (VBG feeding)
                (PP (IN on)
                  (NP
                    (NP (DT some) (JJ other) (NNS kinds))
                    (PP (IN of)
                      (NP (NNS sugars)))))))))))
    (. .)))

cc(showed-5, and-2)
nsubj(showed-5, they-3)
advmod(showed-5, also-4)
root(ROOT-0, showed-5)
det(findings-8, some-6)
amod(findings-8, interesting-7)
dobj(showed-5, findings-8)
det(show-10, findings-8)
nsubj(depends-13, show-10)
advmod(beneficial\/detrimental-12, how-11)
dep(show-10, beneficial\/detrimental-12)
rcmod(findings-8, depends-13)
det(environment-16, the-15)
prep_on(depends-13, environment-16)
dobj(shown-24, environment-16)
nsubj(shown-24, Lenski-18)
poss(colleagues-21, his-20)
conj_and(Lenski-18, colleagues-21)
nsubj(shown-24, colleagues-21)
aux(shown-24, have-22)
advmod(shown-24, also-23)
rcmod(environment-16, shown-24)
advmod(demanded-29, how-25)
amod(selection-27, natural-26)
nsubj(demanded-29, selection-27)
aux(demanded-29, has-28)
ccomp(shown-24, demanded-29)
dobj(demanded-29, trade-offs-30)
det(bacteria-33, the-32)
prep_from(demanded-29, bacteria-33)
mark(grow-37, while-35)
nsubj(grow-37, they-36)
advcl(gotten-48, grow-37)
advmod(grow-37, faster-38)
det(diet-42, a-40)
amod(diet-42, meager-41)
prep_on(grow-37, diet-42)
prep_of(diet-42, glucose-44)
nsubj(gotten-48, they-46)
aux(gotten-48, 've-47)
parataxis(showed-5, gotten-48)
dep(gotten-48, worse-49)
prepc_at(gotten-48, feeding-51)
det(kinds-55, some-53)
amod(kinds-55, other-54)
prep_on(feeding-51, kinds-55)
prep_of(kinds-55, sugars-57)

(ROOT
  (S (`` ``)
    (S
      (FRAG (CC and)
        (NP (DT a)
          (ADJP (JJ remarkable))
          (NN mutation)))
      (NP (WDT which))
      (VP (VBD caused)
        (NP (DT the) (NNS bacteria))
        (S
          (VP (TO to)
            (VP (VB feast)
              (PP (IN on)
                (NP (DT the) (NN citrate) ('' ''))))))))
    (CC But)
    (S
      (PP (IN in)
        (NP (CD one) (JJ remarkable) (NN case)))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (NP (PRP they))
      (VP (VBD discovered)
        (SBAR (IN that)
          (S
            (NP (DT a) (NN flask))
            (VP (VBD had)
              (VP (VBN turned)
                (ADVP (RB cloudy))
                (PP (IN without)
                  (NP (DT any) (NN contamination)))))))))
    (. .)))

dep(mutation-5, and-2)
det(mutation-5, a-3)
amod(mutation-5, remarkable-4)
dep(caused-7, mutation-5)
nsubj(caused-7, which-6)
root(ROOT-0, caused-7)
det(bacteria-9, the-8)
dobj(caused-7, bacteria-9)
aux(feast-11, to-10)
xcomp(caused-7, feast-11)
det(citrate-14, the-13)
prep_on(feast-11, citrate-14)
num(case-20, one-18)
amod(case-20, remarkable-19)
prep_in(discovered-25, case-20)
advmod(discovered-25, however-22)
nsubj(discovered-25, they-24)
conj_but(caused-7, discovered-25)
complm(turned-30, that-26)
det(flask-28, a-27)
nsubj(turned-30, flask-28)
aux(turned-30, had-29)
ccomp(discovered-25, turned-30)
advmod(turned-30, cloudy-31)
det(contamination-34, any-33)
prep_without(turned-30, contamination-34)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (NNP E.) (NNP coli))
        (VP (VBG chowing)
          (PRT (RP down))
          (PP (IN on)
            (NP (DT the) (NN citrate))))))
    (. .)))

nsubj(coli-4, It-1)
cop(coli-4, was-2)
nn(coli-4, E.-3)
root(ROOT-0, coli-4)
partmod(coli-4, chowing-5)
prt(chowing-5, down-6)
det(citrate-9, the-8)
prep_on(chowing-5, citrate-9)

(ROOT
  (S
    (NP (DT The) (NNS researchers))
    (VP (VBD found)
      (SBAR (IN that)
        (S
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (VBD put)
                (NP (DT the) (NNS bacteria))
                (PP (IN in)
                  (NP (JJ pure) (NN citrate))))))
          (, ,)
          (NP (DT the) (NNS microbes))
          (VP (MD could)
            (VP (VB thrive)
              (PP (IN on)
                (NP (PRP it)))
              (PP (IN as)
                (NP
                  (NP (PRP$ their) (JJ sole) (NN source))
                  (PP (IN of)
                    (NP (NN carbon))))))))))
    (. .)))

det(researchers-2, The-1)
nsubj(found-3, researchers-2)
root(ROOT-0, found-3)
complm(thrive-17, that-4)
advmod(put-7, when-5)
nsubj(put-7, they-6)
advcl(thrive-17, put-7)
det(bacteria-9, the-8)
dobj(put-7, bacteria-9)
amod(citrate-12, pure-11)
prep_in(put-7, citrate-12)
det(microbes-15, the-14)
nsubj(thrive-17, microbes-15)
aux(thrive-17, could-16)
ccomp(found-3, thrive-17)
prep_on(thrive-17, it-19)
poss(source-23, their-21)
amod(source-23, sole-22)
prep_as(thrive-17, source-23)
prep_of(source-23, carbon-25)

(ROOT
  (S (`` ``)
    (S (CC and)
      (S
        (S
          (VP (VBG countering)
            (NP
              (NP (NN behe) (POS 's))
              (NNS claims))))
        (PRN (, ,)
          (S
            (NP (DT the) (NN evidence))
            (VP
              (ADVP (RB actually))
              (VBD suggested)
              (SBAR (IN that)
                (S
                  (NP (DT this))
                  (VP (VBD was)
                    (NP
                      (NP (DT a) (NN change))
                      (PP (IN in)
                        (NP (JJ multiple) (NNS sites)))))))))
          (, ,))
        (NP
          (NP (NN something))
          (SBAR
            (S
              (NP (NNP Behe))
              (VP (VBZ has)
                (VP (VBN argued))))))
        (VP (MD can) (RB not)
          (VP
            (VP (VB happen) ('' '')
              (NP (DT This) (NN rise)))
            (CC and)
            (VP (VB fall)
              (CC and)
              (VB rise))))))
    (VP (VBZ suggests)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN evolution))
            (PP (IN of)
              (NP (NN citrate-eating))))
          (VP (VBD was) (RB not)
            (NP (DT a) (JJ one-mutation) (NN affair))))))
    (. .)))

dep(happen-27, countering-3)
poss(claims-6, behe-4)
dobj(countering-3, claims-6)
det(evidence-9, the-8)
nsubj(suggested-11, evidence-9)
advmod(suggested-11, actually-10)
parataxis(happen-27, suggested-11)
complm(change-16, that-12)
nsubj(change-16, this-13)
cop(change-16, was-14)
det(change-16, a-15)
ccomp(suggested-11, change-16)
amod(sites-19, multiple-18)
prep_in(change-16, sites-19)
dobj(argued-24, something-21)
nsubj(happen-27, something-21)
nsubj(fall-32, something-21)
nsubj(argued-24, Behe-22)
aux(argued-24, has-23)
rcmod(something-21, argued-24)
aux(happen-27, can-25)
neg(happen-27, not-26)
csubj(suggests-35, happen-27)
det(rise-30, This-29)
dobj(happen-27, rise-30)
conj_and(happen-27, fall-32)
csubj(suggests-35, fall-32)
conj_and(happen-27, rise-34)
conj_and(fall-32, rise-34)
root(ROOT-0, suggests-35)
complm(affair-45, that-36)
det(evolution-38, the-37)
nsubj(affair-45, evolution-38)
prep_of(evolution-38, citrate-eating-40)
cop(affair-45, was-41)
neg(affair-45, not-42)
det(affair-45, a-43)
amod(affair-45, one-mutation-44)
ccomp(suggests-35, affair-45)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ first) (NN mutation))
        (PRN (-LRB- -LRB-)
          (NP
            (QP (CC or)
              (CD mutations)))
          (-RRB- -RRB-)))
      (VP (VBD allowed)
        (NP (DT the) (NNS bacteria))
        (S
          (VP (TO to)
            (VP (VB eat)
              (NP (NN citrate)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD were)
        (VP (VBN outcompeted)
          (PP (IN by)
            (NP
              (NP (DT some) (JJ glucose-eating) (NNS mutants))
              (SBAR
                (WHNP (WDT that))
                (S
                  (ADVP (RB still))
                  (VP (VBD had)
                    (NP (DT the) (JJ upper) (NN hand))))))))))
    (. .)))

det(mutation-3, The-1)
amod(mutation-3, first-2)
nsubj(allowed-8, mutation-3)
cc(mutations-6, or-5)
dep(mutation-3, mutations-6)
root(ROOT-0, allowed-8)
det(bacteria-10, the-9)
dobj(allowed-8, bacteria-10)
aux(eat-12, to-11)
xcomp(allowed-8, eat-12)
dobj(eat-12, citrate-13)
nsubjpass(outcompeted-18, they-16)
auxpass(outcompeted-18, were-17)
conj_but(allowed-8, outcompeted-18)
det(mutants-22, some-20)
amod(mutants-22, glucose-eating-21)
agent(outcompeted-18, mutants-22)
nsubj(had-25, mutants-22)
advmod(had-25, still-24)
rcmod(mutants-22, had-25)
det(hand-28, the-26)
amod(hand-28, upper-27)
dobj(had-25, hand-28)

