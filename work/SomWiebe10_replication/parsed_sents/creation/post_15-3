(ROOT
  (S
    (NP (PRP One))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ open)
          (PP (TO to)
            (NP
              (NP (DT the) (NN concept)
                (CC or)
                (NN idea))
              (PRN (-LRB- -LRB-)
                (S
                  (ADVP (RB not) (RB just))
                  (VP (VB debunk)
                    (NP (PRP it))
                    (SBAR
                      (SBAR (IN because)
                        (S
                          (NP (DT the) (NN theory))
                          (VP (VBZ states)
                            (SBAR
                              (S
                                (NP (DT a) (NN power))
                                (VP (VBD called)
                                  (NP (NNP GOD))))))))
                      (CC and)
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ 's) (RB not)
                            (ADVP (RB yet))
                            (VP (VBN proven)
                              (PP (IN by)
                                (NP (NN science))))))))))
                (-RRB- -RRB-)))))))
    (. .)))

nsubj(open-4, One-1)
aux(open-4, must-2)
cop(open-4, be-3)
root(ROOT-0, open-4)
det(concept-7, the-6)
prep_to(open-4, concept-7)
prep_to(open-4, idea-9)
conj_or(concept-7, idea-9)
dep(just-12, not-11)
advmod(debunk-13, just-12)
dep(concept-7, debunk-13)
dobj(debunk-13, it-14)
mark(states-18, because-15)
det(theory-17, the-16)
nsubj(states-18, theory-17)
dep(debunk-13, states-18)
det(power-20, a-19)
nsubj(called-21, power-20)
ccomp(states-18, called-21)
dobj(called-21, GOD-22)
nsubjpass(proven-28, that-24)
auxpass(proven-28, 's-25)
neg(proven-28, not-26)
advmod(proven-28, yet-27)
dep(debunk-13, proven-28)
conj_and(states-18, proven-28)
agent(proven-28, science-30)

