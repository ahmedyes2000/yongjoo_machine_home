(ROOT
  (S
    (S
      (PP (IN With)
        (NP
          (ADJP (RB all) (JJ due))
          (NNS respects)))
      (, ,)
      (ADVP (RB here))
      (VP (VBZ is)
        (NP (PRP$ my) (NNP Bottom) (NNP Line))
        (, ,)
        (SBAR (IN though)
          (S
            (NP (PRP I))
            (VP (VBP run)
              (NP
                (NP (DT the) (NN risk))
                (PP (IN of)
                  (S
                    (VP (VBG being)
                      (ADJP (JJ arrogan)
                        (CC and)
                        (`` ``) (JJ closed-minded)))))))))))
    (, ,) ('' '')
    (NP (PRP I))
    (VP
      (ADVP (RB only))
      (VBP write)
      (PP (IN for)
        (NP (DT the) (JJ Judeo-Christian) (NNP World) (NNP View))))
    (. .)))

advmod(due-3, all-2)
amod(respects-4, due-3)
prep_with(Line-10, respects-4)
advmod(Line-10, here-6)
cop(Line-10, is-7)
poss(Line-10, my-8)
nn(Line-10, Bottom-9)
ccomp(write-27, Line-10)
mark(run-14, though-12)
nsubj(run-14, I-13)
advcl(Line-10, run-14)
det(risk-16, the-15)
dobj(run-14, risk-16)
cop(closed-minded-22, being-18)
dep(closed-minded-22, arrogan-19)
cc(closed-minded-22, and-20)
prepc_of(risk-16, closed-minded-22)
nsubj(write-27, I-25)
advmod(write-27, only-26)
root(ROOT-0, write-27)
det(View-32, the-29)
amod(View-32, Judeo-Christian-30)
nn(View-32, World-31)
prep_for(write-27, View-32)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB mainly))
      (ADJP (JJ due)
        (PP (TO to)
          (NP (DT a) (NN time-factor)))))
    (: ...)))

nsubj(due-4, This-1)
cop(due-4, is-2)
advmod(due-4, mainly-3)
root(ROOT-0, due-4)
det(time-factor-7, a-6)
prep_to(due-4, time-factor-7)

(ROOT
  (S
    (PP (IN For)
      (NP (PRP$ our) (NN discussion)))
    (NP (JJ faux) (NN rust))
    (VP (VBZ is)
      (NP (DT the) (JJS most) (NN germaine)))
    (. .)))

poss(discussion-3, our-2)
prep_for(germaine-9, discussion-3)
amod(rust-5, faux-4)
nsubj(germaine-9, rust-5)
cop(germaine-9, is-6)
det(germaine-9, the-7)
amod(germaine-9, most-8)
root(ROOT-0, germaine-9)

(ROOT
  (S
    (NP (DT These) (NNS artists))
    (VP (VBP create)
      (SBAR
        (S
          (NP
            (NP (NN rust))
            (CC and)
            (NP
              (NP (JJ various))
              (ADJP (RB apparently) (VBN aged))))
          (VP (VBZ surfaces)
            (PP (IN through)
              (NP
                (NP (NN chemical) (NNS processes))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD could)
                      (VP (VB be)
                        (VP (VBN expected)
                          (S
                            (VP (TO to)
                              (VP (VB leave)
                                (NP
                                  (NP (JJ various) (NNS types))
                                  (PP (IN of)
                                    (NP (NN residue))))))))))))))))))
    (. .)))

det(artists-2, These-1)
nsubj(create-3, artists-2)
root(ROOT-0, create-3)
nsubj(surfaces-9, rust-4)
conj_and(rust-4, various-6)
nsubj(surfaces-9, various-6)
advmod(aged-8, apparently-7)
amod(various-6, aged-8)
ccomp(create-3, surfaces-9)
nn(processes-12, chemical-11)
prep_through(surfaces-9, processes-12)
nsubjpass(expected-16, processes-12)
aux(expected-16, could-14)
auxpass(expected-16, be-15)
rcmod(processes-12, expected-16)
aux(leave-18, to-17)
xcomp(expected-16, leave-18)
amod(types-20, various-19)
dobj(leave-18, types-20)
prep_of(types-20, residue-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT The) (NNP LORD))
        (VP (VBD chose)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (NN something))))))))
    (, ,)
    (PP (IN like)
      (NP (DT that)))
    (, ,)
    (NP (PRP He))
    (VP (MD could)
      (VP (VB do)
        (NP (DT an)
          (ADJP (RB infinitely) (JJR better))
          (NN job))
        (SBAR (IN than)
          (S
            (NP (PRP we) (NNS humans))
            (VP (MD can))))))
    (. .)))

mark(chose-4, If-1)
det(LORD-3, The-2)
nsubj(chose-4, LORD-3)
xsubj(do-6, LORD-3)
advcl(do-14, chose-4)
aux(do-6, to-5)
xcomp(chose-4, do-6)
dobj(do-6, something-7)
prep_like(do-14, that-10)
nsubj(do-14, He-12)
aux(do-14, could-13)
root(ROOT-0, do-14)
det(job-18, an-15)
advmod(better-17, infinitely-16)
amod(job-18, better-17)
dobj(do-14, job-18)
mark(can-22, than-19)
dep(humans-21, we-20)
nsubj(can-22, humans-21)
advcl(do-14, can-22)

(ROOT
  (S
    (NP
      (NP (PRP$ My) (NN point))
      (PP (IN in)
        (NP (PRP$ my) (JJ original) (NN comment))))
    (VP (VBD was) (RB not)
      (S
        (VP
          (VP (TO to)
            (VP (VB state)
              (NP (DT some) (JJ superior) (NN knowledge))))
          (, ,)
          (CC but)
          (VP (TO to)
            (VP (VB explore)
              (NP
                (NP (DT a) (JJ probable) (NNS hypothesis))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ explains)
                      (ADVP
                        (ADVP (RB logically))
                        (PRN (-LRB- -LRB-)
                          (ADVP
                            (ADVP (IN at) (JJS least))
                            (PP (TO to)
                              (NP (PRP$ my) (NN mind))))
                          (-RRB- -RRB-))
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (NP (DT the) (NN world))
                            (VP (VBZ works))))))))))))))
    (. .)))

poss(point-2, My-1)
nsubj(was-7, point-2)
poss(comment-6, my-4)
amod(comment-6, original-5)
prep_in(point-2, comment-6)
root(ROOT-0, was-7)
neg(was-7, not-8)
aux(state-10, to-9)
ccomp(was-7, state-10)
det(knowledge-13, some-11)
amod(knowledge-13, superior-12)
dobj(state-10, knowledge-13)
aux(explore-17, to-16)
ccomp(was-7, explore-17)
conj_but(state-10, explore-17)
det(hypothesis-20, a-18)
amod(hypothesis-20, probable-19)
dobj(explore-17, hypothesis-20)
nsubj(explains-22, hypothesis-20)
rcmod(hypothesis-20, explains-22)
advmod(explains-22, logically-23)
dep(logically-23, at-25)
pobj(at-25, least-26)
poss(mind-29, my-28)
prep_to(at-25, mind-29)
advmod(works-34, how-31)
det(world-33, the-32)
nsubj(works-34, world-33)
dep(logically-23, works-34)

(ROOT
  (S
    (NP
      (NP (NNS Thanks))
      (PP (IN for)
        (NP
          (NP (RB just) (DT a) (JJ little) (NN room))
          (PP (IN for)
            (S
              (VP (VBG letting)
                (NP (DT a) (NN guy))))))))
    (`` ``)
    (VP (VBP think)
      (ADJP (JJ out-loud)))
    (. .)))

nsubj(think-12, Thanks-1)
advmod(room-6, just-3)
det(room-6, a-4)
amod(room-6, little-5)
prep_for(Thanks-1, room-6)
prepc_for(room-6, letting-8)
det(guy-10, a-9)
dobj(letting-8, guy-10)
root(ROOT-0, think-12)
acomp(think-12, out-loud-13)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB only))
    (VP (VBP have)
      (NP
        (NP (CD one) (NN life))
        (PP (IN on)
          (NP (NNP Earth))))
      (PP (IN in)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (TO to)
              (VP (VB learn)))))))
    (. .)))

nsubj(have-3, I-1)
advmod(have-3, only-2)
root(ROOT-0, have-3)
num(life-5, one-4)
dobj(have-3, life-5)
prep_on(life-5, Earth-7)
nsubj(learn-11, which-9)
aux(learn-11, to-10)
prepc_in(have-3, learn-11)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (NN time))
        (S
          (VP (TO to)
            (VP (VB explore)
              (NP (DT any) (JJ other) (NN world) (NNS views))
              (SBAR (IN because)
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (ADVP (RB still))
                    (ADJP (RB so) (JJ much)
                      (PP (IN for)
                        (NP (PRP me))))
                    (S
                      (VP (TO to)
                        (VP (VB learn)
                          (PP (IN from)
                            (NP (DT this) (NN one))))))))))))))
    (. .)))

advmod(have-6, Therefore-1)
nsubj(have-6, I-3)
aux(have-6, do-4)
neg(have-6, n't-5)
root(ROOT-0, have-6)
dobj(have-6, time-7)
aux(explore-9, to-8)
xcomp(have-6, explore-9)
det(views-13, any-10)
amod(views-13, other-11)
nn(views-13, world-12)
dobj(explore-9, views-13)
mark(is-16, because-14)
expl(is-16, there-15)
xsubj(learn-23, there-15)
advcl(explore-9, is-16)
advmod(is-16, still-17)
advmod(much-19, so-18)
acomp(is-16, much-19)
prep_for(much-19, me-21)
aux(learn-23, to-22)
xcomp(is-16, learn-23)
det(one-26, this-25)
prep_from(learn-23, one-26)

(ROOT
  (S
    (NP (PRP$ Your) (NN point))
    (VP (VBZ is)
      (ADJP (JJ well-taken)))
    (. .)))

poss(point-2, Your-1)
nsubj(well-taken-4, point-2)
cop(well-taken-4, is-3)
root(ROOT-0, well-taken-4)

(ROOT
  (S
    (NP (PRP$ My) (JJ applied) (NN logic))
    (ADVP (RB only))
    (VP (VBZ works)
      (PP (IN for)
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP see)
                (NP (DT the) (NN world))
                (SBAR (IN as)
                  (S
                    (NP (PRP I))
                    (VP (VBP do))))))))))
    (: ...)))

poss(logic-3, My-1)
amod(logic-3, applied-2)
nsubj(works-5, logic-3)
advmod(works-5, only-4)
root(ROOT-0, works-5)
prep_for(works-5, those-7)
nsubj(see-9, those-7)
rcmod(those-7, see-9)
det(world-11, the-10)
dobj(see-9, world-11)
mark(do-14, as-12)
nsubj(do-14, I-13)
advcl(see-9, do-14)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB address)
        (NP
          (NP (DT a) (NN couple))
          (PP (IN of)
            (NP (PRP$ your) (NNS concerns))))))
    (. .)))

advmod(address-5, However-1)
nsubj(address-5, I-3)
aux(address-5, will-4)
root(ROOT-0, address-5)
det(couple-7, a-6)
dobj(address-5, couple-7)
poss(concerns-10, your-9)
prep_of(couple-7, concerns-10)

(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (SBAR (IN since)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (JJ impossible)
            (PP (IN for)
              (NP (NNP God))))
          (PP (TO to)
            (NP (NN sin))))))
    (, ,)
    (NP (NNP God))
    (VP (MD would)
      (ADVP (RB never))
      (VP (VB be)
        (ADJP (JJ deceptive))))
    (. .)))

advmod(deceptive-16, First-1)
mark(impossible-6, since-3)
nsubj(impossible-6, it-4)
cop(impossible-6, is-5)
advcl(deceptive-16, impossible-6)
prep_for(impossible-6, God-8)
prep_to(impossible-6, sin-10)
nsubj(deceptive-16, God-12)
aux(deceptive-16, would-13)
neg(deceptive-16, never-14)
cop(deceptive-16, be-15)
root(ROOT-0, deceptive-16)

(ROOT
  (S
    (ADVP (RB Yet))
    (PRN (, ,)
      (S
        (NP (NNP THAT))
        (VP
          (ADVP (RB once))
          (VBN given)))
      (, ,))
    (NP (PRP we))
    (VP (MD may)
      (ADVP (RB now))
      (VP (VB turn)
        (NP (PRP$ our) (NN attention))
        (PP (TO to)
          (NP
            (NP (NNS humans))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP do)
                  (S
                    (NP (NN something))
                    (ADJP (JJ similar))))))))))
    (. .)))

advmod(turn-10, Yet-1)
nsubj(given-5, THAT-3)
advmod(given-5, once-4)
parataxis(turn-10, given-5)
nsubj(turn-10, we-7)
aux(turn-10, may-8)
advmod(turn-10, now-9)
root(ROOT-0, turn-10)
poss(attention-12, our-11)
dobj(turn-10, attention-12)
prep_to(turn-10, humans-14)
nsubj(do-16, humans-14)
rcmod(humans-14, do-16)
nsubj(similar-18, something-17)
xcomp(do-16, similar-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB openly))
      (VP (VBN taught)
        (PP (IN on)
          (NP (NNP HGTV)))))
    (. !)))

nsubjpass(taught-4, It-1)
auxpass(taught-4, is-2)
advmod(taught-4, openly-3)
root(ROOT-0, taught-4)
prep_on(taught-4, HGTV-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN creation))
        (PP (IN of)
          (NP (JJ faux) (NNS surfaces))))
      (, ,)
      (PP (IN like)
        (NP
          (NP (JJ faux) (NN rust))
          (CC and)
          (NP (JJ faux) (NN marble)))))
    (. .)))

nsubj(creation-4, It-1)
cop(creation-4, 's-2)
det(creation-4, the-3)
root(ROOT-0, creation-4)
amod(surfaces-7, faux-6)
prep_of(creation-4, surfaces-7)
amod(rust-11, faux-10)
prep_like(creation-4, rust-11)
amod(marble-14, faux-13)
prep_like(creation-4, marble-14)
conj_and(rust-11, marble-14)

