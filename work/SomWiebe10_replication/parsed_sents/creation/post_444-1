(ROOT
  (S
    (VP
      (NP
        (NP (-LRB- -LRB-)
          (QP (CD 2))
          (-RRB- -RRB-))
        ('' '')
        (PP
          (PP
            (NP
              (NP (PRP It))
              (VP (VBZ does)
                (S
                  (ADVP (RB n't))
                  (, ,)
                  (NP (PRP it))
                  (ADVP (RB merely))
                  (VP (VBZ calls)
                    (S
                      (NP (PRP it))
                      (`` ``)
                      (ADJP (VBN designed))
                      ('' '')))))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (NP (DT a) (NN placeholder))))))
            (IN for)
            (NP (PRP$ our) (NN ignorance)))
          (CONJP (IN as))
          (PP (TO to)
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (TO to)
                  (VP (VB explain)
                    (NP (DT the) (NN flagella))))))))))
    (. .)))

root(ROOT-0, 2-2)
conj_as(2-2, 2-2')
npadvmod(2-2, It-5)
dep(It-5, does-6)
neg(calls-11, n't-7)
nsubj(calls-11, it-9)
advmod(calls-11, merely-10)
ccomp(does-6, calls-11)
dep(designed-14, it-12)
dep(calls-11, designed-14)
nsubj(placeholder-19, which-16)
cop(placeholder-19, is-17)
det(placeholder-19, a-18)
rcmod(It-5, placeholder-19)
poss(ignorance-22, our-21)
prep_for(2-2, ignorance-22)
advmod(explain-27, how-25)
aux(explain-27, to-26)
prepc_to(2-2', explain-27)
det(flagella-29, the-28)
dobj(explain-27, flagella-29)

