(ROOT
  (S
    (NP
      (NP (DT The) (NN response))
      (PP (TO to)
        (NP (PRP$ my) (NN comment) (NNP ID) (NNPS Contradicts) (NNP Itself))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN series))
        (PP (IN of)
          (NP
            (ADJP (RB peculiarly) (JJ unclear))
            (NNS assertions)))))
    (. .)))

det(response-2, The-1)
nsubj(series-11, response-2)
poss(Itself-8, my-4)
nn(Itself-8, comment-5)
nn(Itself-8, ID-6)
nn(Itself-8, Contradicts-7)
prep_to(response-2, Itself-8)
cop(series-11, is-9)
det(series-11, a-10)
root(ROOT-0, series-11)
advmod(unclear-14, peculiarly-13)
amod(assertions-15, unclear-14)
prep_of(series-11, assertions-15)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (DT the) (NN responder))
    (VP (VBZ declares) (: :) (`` ``)
      (S
        (NP (PRP We))
        (VP (VBP need) (RB not)
          (VP (`` ``) (VB know) ('' '')
            (S
              (NP (DT the) (NN intelligence))
              (VP (TO to)
                (VP (VB draw)
                  (NP (NNS inferences))
                  (PP (IN about)
                    (NP
                      (NP (PRP it) (POS 's))
                      (NN existence)))
                  (SBAR (IN because)
                    (S
                      (NP (DT that))
                      (VP (VBZ 's) (RB not)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (NNP ID))
                            (VP (VBZ studies))))))))))))))
    (. .)))

prep_for(declares-6, example-2)
det(responder-5, the-4)
nsubj(declares-6, responder-5)
root(ROOT-0, declares-6)
nsubj(need-10, We-9)
ccomp(declares-6, need-10)
neg(need-10, not-11)
dep(need-10, know-13)
det(intelligence-16, the-15)
nsubj(draw-18, intelligence-16)
aux(draw-18, to-17)
xcomp(know-13, draw-18)
dobj(draw-18, inferences-19)
poss(existence-23, it-21)
prep_about(draw-18, existence-23)
mark('s-26, because-24)
nsubj('s-26, that-25)
advcl(draw-18, 's-26)
neg('s-26, not-27)
dobj(studies-30, what-28)
nsubj(studies-30, ID-29)
ccomp('s-26, studies-30)

(ROOT
  (S
    (NP (NNP ID))
    (VP (VBZ studies)
      (NP
        (NP
          (NP (DT the) (NNS FEATURES))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP are)
                (VP (RBS best) (VBN traced)
                  (PP (TO to)
                    (NP (DT an) (NN intelligence))))))))
        (: ;)
        (NP (RB not)
          (NP (DT the) (NN intelligence))
          (ADVP (PRP itself)))))
    (. .)))

nsubj(studies-2, ID-1)
root(ROOT-0, studies-2)
det(FEATURES-4, the-3)
dobj(studies-2, FEATURES-4)
nsubjpass(traced-8, FEATURES-4)
auxpass(traced-8, are-6)
advmod(traced-8, best-7)
rcmod(FEATURES-4, traced-8)
det(intelligence-11, an-10)
prep_to(traced-8, intelligence-11)
neg(intelligence-15, not-13)
det(intelligence-15, the-14)
dep(FEATURES-4, intelligence-15)
advmod(intelligence-15, itself-16)

(ROOT
  (S ('' '')
    (NP (PDT Such) (DT an) (NN assertion))
    (VP (VBZ presupposes)
      (SBAR (IN that)
        (S
          (S
            (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
            (NP (DT the) (`` ``) (NNS features) ('' ''))
            (VP (VBZ exists)
              (ADJP (JJ separate)
                (PP (IN from)
                  (NP (DT the) (NN entity))))))
          (, ,)
          (CC and)
          (S
            (SBAR (IN that)
              (PRN (-LRB- -LRB-)
                (NP (CD 2))
                (-RRB- -RRB-))
              (S
                (NP (DT the) (NNS features))
                (VP (VBP are)
                  (NP
                    (NP (NNS expressions))
                    (PP (IN of)
                      (NP (DT some) (NN intelligence)))))))
            (NP (CD one) (NNS supposes))
            (VP (VBZ exists))))))
    (. .)))

predet(assertion-4, Such-2)
det(assertion-4, an-3)
nsubj(presupposes-5, assertion-4)
root(ROOT-0, presupposes-5)
complm(exists-14, that-6)
dep(exists-14, 1-8)
det(features-12, the-10)
nsubj(exists-14, features-12)
ccomp(presupposes-5, exists-14)
acomp(exists-14, separate-15)
det(entity-18, the-17)
prep_from(separate-15, entity-18)
dep(expressions-28, that-21)
dep(expressions-28, 2-23)
det(features-26, the-25)
nsubj(expressions-28, features-26)
cop(expressions-28, are-27)
ccomp(exists-34, expressions-28)
det(intelligence-31, some-30)
prep_of(expressions-28, intelligence-31)
num(supposes-33, one-32)
nsubj(exists-34, supposes-33)
ccomp(presupposes-5, exists-34)
conj_and(exists-14, exists-34)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT a) (JJ logical) (NN fallacy)))
    (. .)))

nsubj(fallacy-5, This-1)
cop(fallacy-5, is-2)
det(fallacy-5, a-3)
amod(fallacy-5, logical-4)
root(ROOT-0, fallacy-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ assumes)
      (NP
        (NP (DT the) (JJ prior) (NN existence))
        (PP (IN of)
          (NP
            (NP (DT a) (NN thing))
            (SBAR
              (WHNP (WP$ whose) (NNS features) (NN one))
              (S
                (VP (VBZ is)
                  (ADVP (RB allegedly))
                  (VP (VBG studying)
                    (SBAR (IN while)
                      (S
                        (S
                          (VP (VBG declaring)
                            (NP (CD one))))
                        (VP (VBZ is)
                          (VP (`` ``) (VBG tracing) ('' '')
                            (NP (PRP them))
                            (PP (TO to)
                              (NP
                                (NP (DT some) (NN intelligence))
                                (, ,)
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (NP (PRP one))
                                    (VP (VBZ denies)
                                      (SBAR
                                        (S
                                          (NP (PRP one))
                                          (VP (VBZ knows)))))))))))))))))))))
    (. .)))

nsubj(assumes-2, It-1)
root(ROOT-0, assumes-2)
det(existence-5, the-3)
amod(existence-5, prior-4)
dobj(assumes-2, existence-5)
det(thing-8, a-7)
prep_of(existence-5, thing-8)
poss(one-11, thing-8)
nn(one-11, features-10)
nsubj(studying-14, one-11)
aux(studying-14, is-12)
advmod(studying-14, allegedly-13)
rcmod(thing-8, studying-14)
mark(tracing-20, while-15)
csubj(tracing-20, declaring-16)
dobj(declaring-16, one-17)
aux(tracing-20, is-18)
advcl(studying-14, tracing-20)
dobj(tracing-20, them-22)
det(intelligence-25, some-24)
prep_to(tracing-20, intelligence-25)
dobj(knows-31, intelligence-25)
rel(denies-29, which-27)
nsubj(denies-29, one-28)
rcmod(intelligence-25, denies-29)
nsubj(knows-31, one-30)
ccomp(denies-29, knows-31)

(ROOT
  (S
    (NP (DT The) (NN responder))
    (VP (VBZ is)
      (VP (VBG dealing)
        (PP (IN in)
          (NP
            (NP (NN word))
            (S
              (S
                (VP (VBZ salads)))
              (, ,) (FW i.e.) (, ,)
              (S
                (VP (VBG formulating)
                  (NP
                    (NP (NNS arguments))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP float)
                          (PP (IN without)
                            (NP (NN reference)))
                          (PP (TO to)
                            (NP (NN reality))))))))))))))
    (. .)))

det(responder-2, The-1)
nsubj(dealing-4, responder-2)
aux(dealing-4, is-3)
root(ROOT-0, dealing-4)
prep_in(dealing-4, word-6)
dep(word-6, salads-7)
dep(salads-7, i.e.-9)
dep(salads-7, formulating-11)
dobj(formulating-11, arguments-12)
nsubj(float-14, arguments-12)
rcmod(arguments-12, float-14)
prep_without(float-14, reference-16)
prep_to(float-14, reality-18)

(ROOT
  (S
    (NP (DT This) (NN approach))
    (VP (VBZ permeates)
      (NP
        (NP (DT the) (NN responder) (POS 's))
        (JJ entire) (NN post)))
    (. .)))

det(approach-2, This-1)
nsubj(permeates-3, approach-2)
root(ROOT-0, permeates-3)
det(responder-5, the-4)
poss(post-8, responder-5)
amod(post-8, entire-7)
dobj(permeates-3, post-8)

(ROOT
  (S
    (PP (IN As)
      (NP (JJ such)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (ADJP (IN worth) (JJ rebutting)))
    (. .)))

prep_such_as(rebutting-8, such-2)
nsubj(rebutting-8, it-4)
cop(rebutting-8, 's-5)
neg(rebutting-8, not-6)
dep(rebutting-8, worth-7)
root(ROOT-0, rebutting-8)

