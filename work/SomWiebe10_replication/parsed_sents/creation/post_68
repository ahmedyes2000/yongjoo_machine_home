(ROOT
  (FRAG
    (NP (NNP Joe))
    (: :)
    (S
      (NP (PRP We))
      (VP (VBP look)
        (PP (IN at)
          (NP (DT the) (NNS options)))))
    (. .)))

root(ROOT-0, Joe-1)
nsubj(look-4, We-3)
dep(Joe-1, look-4)
det(options-7, the-6)
prep_at(look-4, options-7)

(ROOT
  (S (CC And)
    (NP (DT the) (JJ anti) (NNP ID) (NN option))
    (VP (VBZ is)
      (S (`` ``)
        (NP (PRP it))
        (VP
          (ADVP (RB just))
          (VBD happened))
        ('' '')))
    (. .)))

cc(is-6, And-1)
det(option-5, the-2)
amod(option-5, anti-3)
nn(option-5, ID-4)
nsubj(is-6, option-5)
root(ROOT-0, is-6)
nsubj(happened-10, it-8)
advmod(happened-10, just-9)
ccomp(is-6, happened-10)

(ROOT
  (S
    (NP
      (NP (NNP BTW) (NNP PvM))
      (SBAR
        (S
          (NP
            (NP (DT the) (JJ scientific) (NN answer))
            (PP (TO to)
              (NP (NNP UCD))))
          (VP (VBZ is) (`` ``)
            (NP (PRP we))))))
    (VP (VBP do) (RB n't)
      (VP (VB know) ('' '')))
    (. .)))

nn(PvM-2, BTW-1)
nsubj(know-13, PvM-2)
det(answer-5, the-3)
amod(answer-5, scientific-4)
nsubj(we-10, answer-5)
prep_to(answer-5, UCD-7)
cop(we-10, is-8)
rcmod(PvM-2, we-10)
aux(know-13, do-11)
neg(know-13, n't-12)
root(ROOT-0, know-13)

(ROOT
  (SBARQ (RB So)
    (WHADVP (WRB why))
    (SQ (VBZ is)
      (NP (PRP it))
      (ADJP (JJ OK))
      (SBAR (IN for)
        (S
          (NP (PRP YOU))
          (VP (TO to)
            (VP (VB make)
              (NP (DT an) (JJ inference) (NN UCD))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (S
                    (NP (PRP we))
                    (VP (VBP do) (RB n't)
                      (VP (VB know))))
                  (, ,)
                  (CC but)
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (ADJP (JJ wrong)
                        (PP (IN for)
                          (NP (NNP IDists))))
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (NP (DT an) (NN infer3ence)))))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP it))
                          (VP (VBZ is)
                            (VP (VBN based)
                              (PP (IN on)
                                (NP (NNS observations) (, ,) (NNS data)
                                  (CC and)
                                  (NN experience))))))))))))))))
    (. ?)))

advmod(OK-5, So-1)
advmod(OK-5, why-2)
cop(OK-5, is-3)
nsubj(OK-5, it-4)
root(ROOT-0, OK-5)
mark(make-9, for-6)
nsubj(make-9, YOU-7)
aux(make-9, to-8)
dep(OK-5, make-9)
det(UCD-12, an-10)
amod(UCD-12, inference-11)
dobj(make-9, UCD-12)
advmod(know-17, when-13)
nsubj(know-17, we-14)
aux(know-17, do-15)
neg(know-17, n't-16)
advcl(make-9, know-17)
nsubj(wrong-22, it-20)
xsubj(make-26, it-20)
cop(wrong-22, is-21)
advcl(make-9, wrong-22)
conj_but(know-17, wrong-22)
prep_for(wrong-22, IDists-24)
aux(make-26, to-25)
xcomp(wrong-22, make-26)
det(infer3ence-28, an-27)
dobj(make-26, infer3ence-28)
advmod(based-32, when-29)
nsubjpass(based-32, it-30)
auxpass(based-32, is-31)
advcl(wrong-22, based-32)
prep_on(based-32, observations-34)
prep_on(based-32, data-36)
conj_and(observations-34, data-36)
prep_on(based-32, experience-38)
conj_and(observations-34, experience-38)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do)
      (VP (VB have)
        (NP
          (NP (JJ direct) (NNS observatiuons))
          (PP (IN of)
            (NP
              (NP (NNS agencies))
              (VP (VBG designing)
                (NP (JJ rotary) (NNS motors))))))))
    (. .)))

nsubj(have-3, We-1)
aux(have-3, do-2)
root(ROOT-0, have-3)
amod(observatiuons-5, direct-4)
dobj(have-3, observatiuons-5)
prep_of(observatiuons-5, agencies-7)
partmod(agencies-7, designing-8)
amod(motors-10, rotary-9)
dobj(designing-8, motors-10)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (NP
        (NP (NNP NEVER))
        (SBAR
          (S
            (VP (VBD observed)
              (SBAR
                (S
                  (NP
                    (NP (NN nature))
                    (, ,)
                    (VP (VBG operating)
                      (ADVP (RB freely)))
                    (, ,))
                  (ADVP (RB even))
                  (VP (VBP come)
                    (ADJP (JJ close))))))))))
    (. .)))

nsubj(have-2, We-1)
root(ROOT-0, have-2)
dobj(have-2, NEVER-3)
rcmod(NEVER-3, observed-4)
nsubj(come-11, nature-5)
partmod(nature-5, operating-7)
advmod(operating-7, freely-8)
advmod(come-11, even-10)
ccomp(observed-4, come-11)
acomp(come-11, close-12)

(ROOT
  (FRAG
    (NP (NNP PvM))
    (: :)
    (S
      (NP (RB No) (DT the) (JJ scientific) (NN position))
      (VP (VBZ is)
        (S (`` ``)
          (NP (PRP we))
          (VP (VBP do) (RB n't)
            (VP (VB know)))
          ('' ''))))
    (. .)))

root(ROOT-0, PvM-1)
advmod(position-6, No-3)
det(position-6, the-4)
amod(position-6, scientific-5)
nsubj(is-7, position-6)
dep(PvM-1, is-7)
nsubj(know-12, we-9)
aux(know-12, do-10)
neg(know-12, n't-11)
ccomp(is-7, know-12)

(ROOT
  (S (RB Then)
    (NP (DT that))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (MD should)
            (VP (VB be)
              (PP (IN on)
                (NP
                  (NP
                    (QP (RB just) (RB about) (DT every))
                    (NN page))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (NN biology) (NN textbook))
                      (`` ``)
                      (S
                        (NP (PRP We))
                        (VP (VBP do) (RB n't)
                          (VP (VB know))))
                      ('' ''))))))))))
    (. .)))

advmod(is-3, Then-1)
nsubj(is-3, that-2)
root(ROOT-0, is-3)
nsubj(be-6, what-4)
aux(be-6, should-5)
ccomp(is-3, be-6)
quantmod(every-10, just-8)
quantmod(every-10, about-9)
num(page-11, every-10)
prep_on(be-6, page-11)
det(textbook-15, a-13)
nn(textbook-15, biology-14)
prep_of(page-11, textbook-15)
nsubj(know-20, We-17)
aux(know-20, do-18)
neg(know-20, n't-19)
dep(textbook-15, know-20)

(ROOT
  (S (CC Yet)
    (ADVP (RB instead))
    (NP (PRP we))
    (VP (VBP find)
      (SBAR (IN that)
        (S
          (NP (NNS things))
          (`` ``)
          (VP (VBD evolved))
          ('' '')))
      (PP (IN without)
        (S
          (ADVP (RB even))
          (VP (VBG knowing)
            (SBAR (IN whether)
              (CC or)
              (RB not)
              (S
                (NP (DT the) (NN transformation))
                (VP (VBZ is)
                  (ADJP (RB even) (JJ possible)))))))))
    (. .)))

cc(find-4, Yet-1)
advmod(find-4, instead-2)
nsubj(find-4, we-3)
root(ROOT-0, find-4)
complm(evolved-8, that-5)
nsubj(evolved-8, things-6)
ccomp(find-4, evolved-8)
advmod(knowing-12, even-11)
prepc_without(find-4, knowing-12)
complm(possible-20, whether-13)
ccomp(knowing-12, not-15)
conj_or(possible-20, not-15)
det(transformation-17, the-16)
nsubj(possible-20, transformation-17)
cop(possible-20, is-18)
advmod(possible-20, even-19)
ccomp(knowing-12, possible-20)

(ROOT
  (S
    (NP (NNP BTW) (NNP PvM) (NNP regularity))
    (VP (VBD arose)
      (PP (IN by)
        (NP (NN chance)))
      (PP (IN in)
        (NP (DT the) (JJ anti) (NNP ID) (NN scenario))))
    (. .)))

nn(regularity-3, BTW-1)
nn(regularity-3, PvM-2)
nsubj(arose-4, regularity-3)
root(ROOT-0, arose-4)
prep_by(arose-4, chance-6)
det(scenario-11, the-8)
amod(scenario-11, anti-9)
nn(scenario-11, ID-10)
prep_in(arose-4, scenario-11)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS laws))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP govern)
              (NP (NN nature))))))
      (`` ``)
      (ADVP (RB just))
      (VP (VBP are)
        (NP (DT the) (NN way))))
    (NP (PRP they))
    (VP (VBP are)
      (VP ('' '')
        (NP (NNP Stephen) (CD Hawking))))
    (. .)))

det(laws-2, The-1)
nsubj(govern-4, laws-2)
nsubj(way-10, laws-2)
rcmod(laws-2, govern-4)
dobj(govern-4, nature-5)
advmod(way-10, just-7)
cop(way-10, are-8)
det(way-10, the-9)
dep(Stephen-14, way-10)
nsubj(Stephen-14, they-11)
aux(Stephen-14, are-12)
root(ROOT-0, Stephen-14)
num(Stephen-14, Hawking-15)

(ROOT
  (S
    (NP (NNP IOW))
    (ADVP (RB once))
    (ADVP (RB again))
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (DT an) (NN explanation))))
    (. .)))

nsubj(have-7, IOW-1)
advmod(have-7, once-2)
advmod(have-7, again-3)
nsubj(have-7, you-4)
aux(have-7, do-5)
neg(have-7, n't-6)
root(ROOT-0, have-7)
det(explanation-9, an-8)
dobj(have-7, explanation-9)

