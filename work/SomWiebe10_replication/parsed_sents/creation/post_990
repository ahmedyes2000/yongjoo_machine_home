(ROOT
  (S
    (ADVP (RB Actually))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (VP (VBN been)
                (VP (VBN proven))))))))
    (. .)))

advmod(sure-6, Actually-1)
nsubj(sure-6, I-3)
cop(sure-6, 'm-4)
neg(sure-6, not-5)
root(ROOT-0, sure-6)
nsubjpass(proven-10, it-7)
auxpass(proven-10, 's-8)
auxpass(proven-10, been-9)
dep(sure-6, proven-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do)
        (SBAR
          (S
            (VP (VBP think)
              (SBAR (IN that)
                (S
                  (NP (JJ human) (NN evolution))
                  (VP (VBZ is)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (NNS scientists))
                        (VP (VBP say)
                          (SBAR
                            (S
                              (NP (PRP it))
                              (VP (VBZ is) (, ,)
                                (ADVP (RB in))
                                (SBAR (IN that)
                                  (S
                                    (NP (PRP we))
                                    (VP (VBD evolved)
                                      (PP (IN from)
                                        (NP (NNS primates))))))))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ has) (RB n't)
        (VP (VBN been)
          (VP (VBN proven)))))
    (. .)))

nsubj(do-2, I-1)
root(ROOT-0, do-2)
ccomp(do-2, think-3)
complm(is-7, that-4)
amod(evolution-6, human-5)
nsubj(is-7, evolution-6)
ccomp(think-3, is-7)
dep(say-10, what-8)
dobj(is-12, what-8)
nsubj(say-10, scientists-9)
ccomp(is-7, say-10)
nsubj(is-12, it-11)
ccomp(say-10, is-12)
advmod(is-12, in-14)
complm(evolved-17, that-15)
nsubj(evolved-17, we-16)
ccomp(is-12, evolved-17)
prep_from(evolved-17, primates-19)
nsubjpass(proven-26, it-22)
aux(proven-26, has-23)
neg(proven-26, n't-24)
auxpass(proven-26, been-25)
conj_but(do-2, proven-26)

