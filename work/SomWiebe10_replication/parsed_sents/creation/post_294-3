(ROOT
  (S
    (NP (DT The) (NNP ID) (NN proponent))
    (VP (MD would)
      (VP (VB argue) (: :)
        (NP
          (NP (DT the) (NN fact))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP
                (VP (VBZ is)
                  (ADJP (JJ complex)))
                (PRN (-LRB- -LRB-)
                  (S
                    (PP (IN in)
                      (NP (JJ other) (NNS words)))
                    (, ,)
                    (NP (NN science))
                    (VP (MD can) (RB not)
                      (VP (VB explain)
                        (NP (PRP it)))))
                  (-RRB- -RRB-))
                (CC and)
                (`` ``)
                (VP (VBD specified))
                ('' '')
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP it))
                    (VP (VBZ matches)
                      (NP (DT some) (JJ independent) (NN pattern)))))))))))
    (. .)))

det(proponent-3, The-1)
nn(proponent-3, ID-2)
nsubj(argue-5, proponent-3)
aux(argue-5, would-4)
root(ROOT-0, argue-5)
det(fact-8, the-7)
dobj(argue-5, fact-8)
complm(complex-12, that-9)
nsubj(complex-12, it-10)
nsubj(specified-26, it-10)
cop(complex-12, is-11)
dep(fact-8, complex-12)
amod(words-16, other-15)
prep_in(explain-21, words-16)
nsubj(explain-21, science-18)
aux(explain-21, can-19)
neg(explain-21, not-20)
parataxis(complex-12, explain-21)
parataxis(specified-26, explain-21)
dobj(explain-21, it-22)
dep(fact-8, specified-26)
conj_and(complex-12, specified-26)
advmod(matches-30, where-28)
nsubj(matches-30, it-29)
advcl(complex-12, matches-30)
det(pattern-33, some-31)
amod(pattern-33, independent-32)
dobj(matches-30, pattern-33)

