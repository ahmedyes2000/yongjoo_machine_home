(ROOT
  (SINV (-LRB- -LRB-) (`` ``)
    (VP (VBZ Is)
      (ADJP (JJ intelligent)))
    (NP
      (NP (NN design))
      (NP (NN science)))
    (. ?)))

cop(intelligent-4, Is-3)
root(ROOT-0, intelligent-4)
nsubj(intelligent-4, design-5)
dep(design-5, science-6)

(ROOT
  (NP ('' '')
    (CC -RRB-)
    (NP (`` ``)
      (NP (JJS Most))
      (VP (VBG definitely)
        (S
          (INTJ (UH yes))
          (, ,)
          (ADVP (RB otherwise))
          (NP (DT no) (NN one))
          (VP (MD could)
            (VP (VB argue)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (ADJP (JJ wrong)
                      (PP (IN in)
                        (NP (DT the) (JJ first) (NN place))))))))))))
    (. .)))

root(ROOT-0, Most-4)
partmod(Most-4, definitely-5)
dep(argue-12, yes-6)
advmod(argue-12, otherwise-8)
det(one-10, no-9)
nsubj(argue-12, one-10)
aux(argue-12, could-11)
ccomp(definitely-5, argue-12)
nsubj(wrong-15, it-13)
cop(wrong-15, was-14)
ccomp(argue-12, wrong-15)
det(place-19, the-17)
amod(place-19, first-18)
prep_in(wrong-15, place-19)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (`` ``) (JJ intelligent) (NN design) ('' ''))
    (VP (MD should)
      (VP (VB be)
        (VP
          (ADVP (RB properly))
          (VBN smacked)
          (PRT (RP down))
          (PP (IN as)
            (NP (JJ non-science) (NN nonsense))))))
    (. .)))

advmod(smacked-9, Therefore-1)
amod(design-4, intelligent-3)
nsubjpass(smacked-9, design-4)
aux(smacked-9, should-6)
auxpass(smacked-9, be-7)
advmod(smacked-9, properly-8)
root(ROOT-0, smacked-9)
prt(smacked-9, down-10)
amod(nonsense-13, non-science-12)
prep_as(smacked-9, nonsense-13)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP it))
          (VP (`` ``) (VBZ matters) ('' '')))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(matters-6, why-3)
nsubj(matters-6, it-4)
advcl('s-2, matters-6)

(ROOT
  (S ('' '')
    (S (CC But)
      (NP (PRP we))
      (VP (VBP are) (RB not)
        (VP (VBG arguing))))
    (IN that)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP (JJ wrong))))
    (. .)))

cc(arguing-6, But-2)
nsubj(arguing-6, we-3)
aux(arguing-6, are-4)
neg(arguing-6, not-5)
root(ROOT-0, arguing-6)
dep(arguing-6, that-7)
nsubj(wrong-10, it-8)
cop(wrong-10, is-9)
ccomp(arguing-6, wrong-10)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP are)
        (VP (VBG arguing)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is) (RB not)
                (ADJP (JJ right)
                  (CC or)
                  (JJ wrong))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's) (`` ``) (RB not)
      (ADVP (RB even))
      (ADJP (JJ wrong))
      ('' ''))
    (. .)))

nsubj(arguing-3, We-1)
aux(arguing-3, are-2)
ccomp(wrong-17, arguing-3)
complm(right-8, that-4)
nsubj(right-8, it-5)
nsubj(wrong-10, it-5)
cop(right-8, is-6)
neg(right-8, not-7)
ccomp(arguing-3, right-8)
ccomp(arguing-3, wrong-10)
conj_or(right-8, wrong-10)
nsubj(wrong-17, it-12)
cop(wrong-17, 's-13)
neg(wrong-17, not-15)
advmod(wrong-17, even-16)
root(ROOT-0, wrong-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN definition))
        (PP (IN of)
          (NP
            (NP (`` ``) (JJ intelligent) (NN design) ('' ''))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD would)
                  (VP (VB allow)
                    (NP (DT a) (NN scientist)
                      (S
                        (VP (TO to)
                          (VP (VB determine)
                            (SBAR (IN if)
                              (S
                                (NP (PRP it))
                                (VP (VBZ 's)
                                  (ADJP (JJ right)
                                    (CC or)
                                    (JJ wrong)))))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(definition-4, no-3)
nsubj(is-2, definition-4)
amod(design-8, intelligent-7)
prep_of(definition-4, design-8)
nsubj(allow-12, design-8)
aux(allow-12, would-11)
rcmod(design-8, allow-12)
det(scientist-14, a-13)
dobj(allow-12, scientist-14)
aux(determine-16, to-15)
infmod(scientist-14, determine-16)
mark(right-20, if-17)
nsubj(right-20, it-18)
nsubj(wrong-22, it-18)
cop(right-20, 's-19)
advcl(determine-16, right-20)
advcl(determine-16, wrong-22)
conj_or(right-20, wrong-22)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (RB only) (DT the))
        ('' '')
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP know)
              (NP (PRP it))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP I))
                  (VP (VB see)
                    (NP (PRP it) ('' ''))
                    (S
                      (NP
                        (NP (NN interpretation))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (`` ``) (NN evidence) ('' ''))
                            (PP (IN of)
                              (NP (DT the) (`` ``) (JJ natural) (NN world) ('' '')))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(the-4, only-3)
nsubj(is-2, the-4)
nsubj(know-7, I-6)
rcmod(the-4, know-7)
dobj(know-7, it-8)
advmod(see-11, when-9)
nsubj(see-11, I-10)
advcl(know-7, see-11)
dobj(see-11, it-12)
dep(see-11, interpretation-14)
det(evidence-18, the-16)
prep_of(interpretation-14, evidence-18)
det(world-24, the-21)
amod(world-24, natural-23)
prep_of(evidence-18, world-24)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S (`` ``)
        (NP (NNS interpretations))
        ('' '')
        (VP
          (VP (VBP are)
            (ADJP (JJ personal)))
          (CC and)
          (VP (MD can) (RB not)
            (VP (VB be)
              (VP (VBN agreed)
                (PP (RB upon))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (NP (NN science)))
    (. .)))

cc(science-19, But-1)
mark(personal-7, if-2)
nsubj(personal-7, interpretations-4)
nsubjpass(agreed-12, interpretations-4)
cop(personal-7, are-6)
advcl(science-19, personal-7)
aux(agreed-12, can-9)
neg(agreed-12, not-10)
auxpass(agreed-12, be-11)
conj_and(personal-7, agreed-12)
advcl(science-19, agreed-12)
prep(agreed-12, upon-13)
advmod(science-19, then-15)
nsubj(science-19, it-16)
cop(science-19, 's-17)
neg(science-19, not-18)
root(ROOT-0, science-19)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (NP (PRP it))
          (VP (VBD did) (RB n't)
            (VP (-LRB- -LRB-) (VB matter) (-RRB- -RRB-)
              (NP (RB then))))))
      (NP (PRP you))
      (VP (MD would) (RB n't)
        (VP (VB be)
          (VP (VBG wasting)
            (NP (PRP$ your) (NN time))
            (S
              (VP (VBG injecting)
                (PP (IN as)
                  (NP
                    (NP (JJ much) (NN commentary))
                    (PP (IN on)
                      (NP (DT the) (NN topic)))))))))))
    (IN as)
    (S
      (NP (PRP you))
      (ADVP (RB already))
      (VP (VBP have)))
    (. .)))

mark(matter-7, If-2)
nsubj(matter-7, it-3)
aux(matter-7, did-4)
neg(matter-7, n't-5)
advcl(wasting-14, matter-7)
dobj(matter-7, then-9)
nsubj(wasting-14, you-10)
aux(wasting-14, would-11)
neg(wasting-14, n't-12)
aux(wasting-14, be-13)
root(ROOT-0, wasting-14)
poss(time-16, your-15)
dobj(wasting-14, time-16)
xcomp(wasting-14, injecting-17)
amod(commentary-20, much-19)
prep_as(injecting-17, commentary-20)
det(topic-23, the-22)
prep_on(commentary-20, topic-23)
dep(wasting-14, as-24)
nsubj(have-27, you-25)
advmod(have-27, already-26)
ccomp(wasting-14, have-27)

(ROOT
  (S ('' '')
    (NP (NNP Non))
    (VP (VBP sequitur))
    (. .)))

nsubj(sequitur-3, Non-2)
root(ROOT-0, sequitur-3)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS creationists))
      (PP (IN of)
        (NP
          (NP (DT the) (NNP Texas) (NNP State) (NNP Board))
          (PP (IN of)
            (NP (NNP Education))))))
    (VP (VBP wish)
      (S
        (VP (TO to)
          (VP (VB claim)
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBP are)
                  (NP (`` ``)
                    (NP (NNS weaknesses))
                    ('' '')
                    (PP (IN in)
                      (NP (NN evolution)))))))))))
    (. .)))

det(creationists-2, The-1)
nsubj(wish-10, creationists-2)
xsubj(claim-12, creationists-2)
det(Board-7, the-4)
nn(Board-7, Texas-5)
nn(Board-7, State-6)
prep_of(creationists-2, Board-7)
prep_of(Board-7, Education-9)
root(ROOT-0, wish-10)
aux(claim-12, to-11)
xcomp(wish-10, claim-12)
complm(are-15, that-13)
expl(are-15, there-14)
ccomp(claim-12, are-15)
nsubj(are-15, weaknesses-17)
prep_in(weaknesses-17, evolution-20)

(ROOT
  (S ('' '')
    (NP (NNP Intelligent))
    (VP
      (ADVP (RB design) ('' ''))
      (VBZ attempts)
      (S
        (VP (TO to)
          (VP (VB provide)
            (NP (NN support))
            (PP (IN for)
              (NP (JJ such) (NNS opinions)))))))
    (. .)))

nsubj(attempts-5, Intelligent-2)
xsubj(provide-7, Intelligent-2)
advmod(attempts-5, design-3)
root(ROOT-0, attempts-5)
aux(provide-7, to-6)
xcomp(attempts-5, provide-7)
dobj(provide-7, support-8)
amod(opinions-11, such-10)
prep_for(provide-7, opinions-11)

