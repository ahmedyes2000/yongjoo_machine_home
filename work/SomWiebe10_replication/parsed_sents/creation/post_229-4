(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB entirely))
      (NP
        (NP (PRP$ his) (JJ subjective) (NN opinion))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ lets)
              (S
                (NP (PRP him))
                (VP
                  (ADVP (RB arbitrarily))
                  (VB declare)
                  (NP
                    (NP (NN anything))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBZ feels)
                          (VP (VBN forced)
                            (S
                              (VP (TO to)
                                (VP (VB accept)
                                  (PP (IN as)
                                    (NP (DT a) (JJ natural) (JJ evolutionary) (NN product)))
                                  (S
                                    (VP (TO to)
                                      (VP (VB be)
                                        (ADJP (`` ``) (JJ degradative) ('' ''))))))))))))))))))))
    (. .)))

nsubj(opinion-6, It-1)
cop(opinion-6, 's-2)
advmod(opinion-6, entirely-3)
poss(opinion-6, his-4)
amod(opinion-6, subjective-5)
root(ROOT-0, opinion-6)
nsubj(lets-9, opinion-6)
rcmod(opinion-6, lets-9)
nsubj(declare-12, him-10)
advmod(declare-12, arbitrarily-11)
ccomp(lets-9, declare-12)
dobj(declare-12, anything-13)
dobj(feels-15, anything-13)
nsubj(feels-15, he-14)
xsubj(accept-18, he-14)
rcmod(anything-13, feels-15)
dep(feels-15, forced-16)
aux(accept-18, to-17)
xcomp(forced-16, accept-18)
det(product-23, a-20)
amod(product-23, natural-21)
amod(product-23, evolutionary-22)
prep_as(accept-18, product-23)
aux(degradative-27, to-24)
cop(degradative-27, be-25)
xcomp(accept-18, degradative-27)

