(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (DT the) (`` ``) (NN logic) ('' ''))
        (PP (IN of)
          (NP (DT the) (NNP anti) (NNPS IDists)))))
    (, ,)
    (NP
      (NP (DT the) (JJ current) (NN theory))
      (PP (IN of)
        (NP (NN evolution))))
    (VP (VBZ is)
      (NP (DT an) (JJ atheistic) (NN theory))
      (SBAR (IN because)
        (S
          (NP (NNP Richard) (NNP Dawkins))
          (ADVP (RB once))
          (VP (VBD stated)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ allows)
                  (PP (IN for)
                    (NP (CD one)))
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (NP (DT an)
                          (ADJP (RB intellectually) (JJ fulfilled))
                          (NN atheist))))))))))))
    (. .)))

det(logic-4, the-2)
prep_by(theory-19, logic-4)
det(IDists-9, the-7)
nn(IDists-9, anti-8)
prep_of(logic-4, IDists-9)
det(theory-13, the-11)
amod(theory-13, current-12)
nsubj(theory-19, theory-13)
prep_of(theory-13, evolution-15)
cop(theory-19, is-16)
det(theory-19, an-17)
amod(theory-19, atheistic-18)
root(ROOT-0, theory-19)
mark(stated-24, because-20)
nn(Dawkins-22, Richard-21)
nsubj(stated-24, Dawkins-22)
advmod(stated-24, once-23)
advcl(theory-19, stated-24)
nsubj(allows-26, it-25)
xsubj(atheist-34, it-25)
ccomp(stated-24, allows-26)
prep_for(allows-26, one-28)
aux(atheist-34, to-29)
cop(atheist-34, be-30)
det(atheist-34, an-31)
advmod(fulfilled-33, intellectually-32)
amod(atheist-34, fulfilled-33)
xcomp(allows-26, atheist-34)

(ROOT
  (SINV
    (SBAR (RB Just) (IN because)
      (S
        (NP
          (NP (DT some))
          (CC or)
          (NP
            (ADJP (RB even) (JJS most))
            (NNS IDists)))
        (VP (VBP are)
          (ADJP (JJ religious)))))
    (VBZ does)
    (NP (NNP NOT))
    (VP (VB mean)
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP (VBZ is)
            (ADJP (JJ religious))))))
    (. .)))

advmod(religious-9, Just-1)
dep(religious-9, because-2)
nsubj(religious-9, some-3)
advmod(most-6, even-5)
amod(IDists-7, most-6)
conj_or(some-3, IDists-7)
nsubj(religious-9, IDists-7)
cop(religious-9, are-8)
advcl(mean-12, religious-9)
aux(mean-12, does-10)
nsubj(mean-12, NOT-11)
root(ROOT-0, mean-12)
complm(religious-16, that-13)
nsubj(religious-16, ID-14)
cop(religious-16, is-15)
ccomp(mean-12, religious-16)

(ROOT
  (S
    (NP (DT The) (NNP ONLY) (NN way)
      (S
        (VP (TO to)
          (VP (VB label)
            (S
              (NP (NNP Intelligent) (NNP Design))
              (`` ``)
              (ADJP (JJ religious))
              ('' ''))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB change)
            (NP
              (NP (DT the) (NN definition))
              (PP (IN of)
                (NP (NN religion))))))))
    (. .)))

det(way-3, The-1)
nn(way-3, ONLY-2)
nsubj(is-11, way-3)
xsubj(change-13, way-3)
aux(label-5, to-4)
infmod(way-3, label-5)
nn(Design-7, Intelligent-6)
dep(religious-9, Design-7)
dep(label-5, religious-9)
root(ROOT-0, is-11)
aux(change-13, to-12)
xcomp(is-11, change-13)
det(definition-15, the-14)
dobj(change-13, definition-15)
prep_of(definition-15, religion-17)

(ROOT
  (S
    (S (CC And)
      (ADVP (RB BTW))
      (, ,)
      (NP (NNP Albert) (NNP Einstein))
      (VP
        (ADVP (RB once))
        (VBD said) ('' '')
        (NP (NNP Science))
        (PP (IN without)
          (NP
            (NP (NN religion))
            (SBAR
              (S
                (VP (VBZ is)
                  (ADJP (JJ lame)))))))))
    (: ;)
    (S
      (NP
        (NP (NN religion))
        (PP (IN without)
          (NP (NN science))))
      (VP (VBZ is)
        (ADJP (JJ blind))))
    (. .)))

cc(said-7, And-1)
advmod(said-7, BTW-2)
nn(Einstein-5, Albert-4)
nsubj(said-7, Einstein-5)
advmod(said-7, once-6)
root(ROOT-0, said-7)
dobj(said-7, Science-9)
prep_without(said-7, religion-11)
cop(lame-13, is-12)
rcmod(religion-11, lame-13)
nsubj(blind-19, religion-15)
prep_without(religion-15, science-17)
cop(blind-19, is-18)
parataxis(said-7, blind-19)

(ROOT
  (S ('' '')
    (NP (NNP Why))
    (VP (VBP do)
      (SBAR
        (S
          (NP (DT the) (NN anti) (NNS IDists))
          (VP (VBP insist)
            (PP (IN on)
              (NP (JJ lame) (NN science)))))))
    (. ?)))

nsubj(do-3, Why-2)
root(ROOT-0, do-3)
det(IDists-6, the-4)
nn(IDists-6, anti-5)
nsubj(insist-7, IDists-6)
ccomp(do-3, insist-7)
amod(science-10, lame-9)
prep_on(insist-7, science-10)

(ROOT
  (S
    (VP
      (ADVP (RB As)
        (PP (IN for)
          (NP
            (NP (JJ scientific) (NN evidence))
            (PP (IN for)
              (NP (NNP ID))))))
      (VB start)
      (PP (IN with)
        (NP (DT the) (JJ genetic) (NN code))))
    (. .)))

amod(evidence-4, scientific-3)
prep_as_for(start-7, evidence-4)
prep_for(evidence-4, ID-6)
root(ROOT-0, start-7)
det(code-11, the-9)
amod(code-11, genetic-10)
prep_with(start-7, code-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NN day))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP observe)
            (NP (NN nature))
            (, ,)
            (S
              (VP (VBG operating)
                (ADVP (RB freely))))
            (, ,)
            (S
              (VP (VBG putting)
                (PRT (RP together))
                (NP (DT a) (NN code))))))))
    (VP (VBZ is)
      (SBAR
        (NP (DT the) (NN day))
        (IN that)
        (S
          (NP (NNP MicroSoft))
          (VP (MD will)
            (VP (VB lay)
              (PRT (RP off))
              (NP (PDT all) (PRP$ their) (NNS programmers))
              (SBAR (IN because)
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (ADJP (JJ unecessary))))))))))
    (. .)))

det(day-2, The-1)
nsubj(is-14, day-2)
nsubj(observe-4, we-3)
rcmod(day-2, observe-4)
dobj(observe-4, nature-5)
partmod(observe-4, operating-7)
xcomp(observe-4, operating-7)
advmod(operating-7, freely-8)
xcomp(observe-4, putting-10)
prt(putting-10, together-11)
det(code-13, a-12)
dobj(putting-10, code-13)
root(ROOT-0, is-14)
det(day-16, the-15)
dep(lay-20, day-16)
dep(lay-20, that-17)
nsubj(lay-20, MicroSoft-18)
aux(lay-20, will-19)
ccomp(is-14, lay-20)
prt(lay-20, off-21)
predet(programmers-24, all-22)
poss(programmers-24, their-23)
dobj(lay-20, programmers-24)
mark(unecessary-28, because-25)
nsubj(unecessary-28, they-26)
cop(unecessary-28, are-27)
advcl(lay-20, unecessary-28)

(ROOT
  (S (CC And)
    (NP (DT the) (JJ bottom) (NN line))
    (VP (VBZ is)
      (SBAR (IN if)
        (S
          (NP (DT the) (JJ anti) (NNP ID) (NN side))
          (ADVP (RB actually))
          (VP (VBD had)
            (NP
              (NP (DT some) (JJ scientific) (NN evidence))
              (PP (IN for)
                (NP (PRP$ their) (NN position)))
              (SBAR
                (S
                  (NP (NNP ID))
                  (VP (MD would)
                    (VP (VB go)
                      (PRT (RP away)))))))))))
    (. .)))

cc(is-5, And-1)
det(line-4, the-2)
amod(line-4, bottom-3)
nsubj(is-5, line-4)
root(ROOT-0, is-5)
mark(had-12, if-6)
det(side-10, the-7)
amod(side-10, anti-8)
nn(side-10, ID-9)
nsubj(had-12, side-10)
advmod(had-12, actually-11)
advcl(is-5, had-12)
det(evidence-15, some-13)
amod(evidence-15, scientific-14)
dobj(had-12, evidence-15)
dobj(go-21, evidence-15)
poss(position-18, their-17)
prep_for(evidence-15, position-18)
nsubj(go-21, ID-19)
aux(go-21, would-20)
rcmod(evidence-15, go-21)
prt(go-21, away-22)

