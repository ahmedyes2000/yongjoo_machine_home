(ROOT
  (S (`` ``)
    (NP (DT The) (NN argument))
    (ADVP (RB always))
    (VP (VBD had)
      (VP (VBN intuitive)
        (ADVP (RB plausibility))))
    (. .)))

det(argument-3, The-2)
nsubj(intuitive-6, argument-3)
advmod(intuitive-6, always-4)
aux(intuitive-6, had-5)
root(ROOT-0, intuitive-6)
advmod(intuitive-6, plausibility-7)

(ROOT
  (NP ('' '')
    (CC And)
    (NP
      (NP (RB absolutely) (DT no) (JJ scientific))
      (SBAR
        (S
          (VP (VBP plausibility)))))
    (. .)))

cc(scientific-5, And-2)
advmod(scientific-5, absolutely-3)
det(scientific-5, no-4)
root(ROOT-0, scientific-5)
rcmod(scientific-5, plausibility-6)

(ROOT
  (S (`` ``)
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP
      (NP (DT the) (NNS places))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (JJ complex) (NNS observers))
          (VP (VBP like)
            (SBAR
              (S
                (NP (PRP us))
                (VP (MD can)
                  (VP (VB exist)))))))))
    (VP (VBP are)
      (NP
        (NP (DT the)
          (ADJP (RB very) (JJ same))
          (NNS places))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP provide)
              (NP
                (NP (DT the) (JJS best) (JJ overall) (NNS conditions))
                (PP (IN for)
                  (S
                    (VP (VBG observing))))))))))
    (. .)))

amod(words-4, other-3)
prep_in(places-19, words-4)
det(places-7, the-6)
nsubj(places-19, places-7)
advmod(like-11, where-8)
amod(observers-10, complex-9)
nsubj(like-11, observers-10)
rcmod(places-7, like-11)
nsubj(exist-14, us-12)
aux(exist-14, can-13)
ccomp(like-11, exist-14)
cop(places-19, are-15)
det(places-19, the-16)
advmod(same-18, very-17)
amod(places-19, same-18)
root(ROOT-0, places-19)
nsubj(provide-21, places-19)
rcmod(places-19, provide-21)
det(conditions-25, the-22)
amod(conditions-25, best-23)
amod(conditions-25, overall-24)
dobj(provide-21, conditions-25)
prepc_for(conditions-25, observing-27)

(ROOT
  (NP (NNP '') (NNP Riiiight) (. .)))


(ROOT
  (S
    (ADVP (RB Here) (RB again))
    (, ,)
    (NP (PRP it))
    (VP (VBZ seems)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN failed)
              (S
                (VP (TO to)
                  (VP (VB provide)
                    (NP
                      (NP (JJ other) (NNS examples))
                      (PP (IN of)
                        (NP (NNS worlds))))
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (JJ complex) (NNS observers))
                        (VP (VBP like)
                          (SBAR
                            (S
                              (NP (PRP us))
                              (ADVP (RB also))
                              (VP (VBP have)
                                (NP
                                  (NP (DT the) (JJS best) (NNS conditions))
                                  (PP (IN for)
                                    (S
                                      (VP (VBG observing)))))))))))))))))))
    (. .)))

advmod(again-2, Here-1)
advmod(seems-5, again-2)
nsubj(seems-5, it-4)
root(ROOT-0, seems-5)
complm(failed-9, that-6)
nsubj(failed-9, you-7)
xsubj(provide-11, you-7)
aux(failed-9, have-8)
ccomp(seems-5, failed-9)
aux(provide-11, to-10)
xcomp(failed-9, provide-11)
amod(examples-13, other-12)
dobj(provide-11, examples-13)
prep_of(examples-13, worlds-15)
advmod(like-19, where-16)
amod(observers-18, complex-17)
nsubj(like-19, observers-18)
advcl(provide-11, like-19)
nsubj(have-22, us-20)
advmod(have-22, also-21)
ccomp(like-19, have-22)
det(conditions-25, the-23)
amod(conditions-25, best-24)
dobj(have-22, conditions-25)
prepc_for(conditions-25, observing-27)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN failed)
        (S
          (VP (TO to)
            (VP (VB produce)
              (NP (NNS counter-examples)))))))
    (. .)))

cc(failed-4, And-1)
nsubj(failed-4, I-2)
xsubj(produce-6, I-2)
aux(failed-4, have-3)
root(ROOT-0, failed-4)
aux(produce-6, to-5)
xcomp(failed-4, produce-6)
dobj(produce-6, counter-examples-7)

(ROOT
  (X
    (ADVP (RB So))
    (NP (WP what))
    (. ?)))

dep(what-2, So-1)
root(ROOT-0, what-2)

(ROOT
  (S
    (PP (IN As)
      (ADJP (JJ usual)))
    (, ,)
    (NP
      (NP (DT an) (`` ``) (NN example))
      (PP (IN of)
        (NP (CD one))))
    ('' '')
    (VP (MD might) (, ,)
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (VP (VB be)
        (NP (RB just) (JJ good) (NN fortune))))
    (. .)))

prep_as(fortune-18, usual-2)
det(example-6, an-4)
nsubj(fortune-18, example-6)
prep_of(example-6, one-8)
aux(fortune-18, might-10)
prep_in(fortune-18, fact-13)
cop(fortune-18, be-15)
advmod(fortune-18, just-16)
amod(fortune-18, good-17)
root(ROOT-0, fortune-18)

(ROOT
  (S
    (S (CC But)
      (NP (PRP$ your) (`` ``) (NN argument) ('' ''))
      (VP (VBZ is) (RB not)
        (ADJP (JJ scientific))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB just))
      (NP (PRP$ your) (JJ personal) (NN opinion)))
    (. .)))

cc(scientific-8, But-1)
poss(argument-4, your-2)
nsubj(scientific-8, argument-4)
cop(scientific-8, is-6)
neg(scientific-8, not-7)
ccomp(opinion-15, scientific-8)
nsubj(opinion-15, it-10)
cop(opinion-15, 's-11)
advmod(opinion-15, just-12)
poss(opinion-15, your-13)
amod(opinion-15, personal-14)
root(ROOT-0, opinion-15)

(ROOT
  (S (`` ``)
    (S
      (NP
        (NP (DT the) (RBS most) (JJ life-friendly) (NN region))
        (PP (IN of)
          (NP (DT the) (NN galaxy))))
      (VP (VBZ is)
        (ADVP (RB also))
        (NP
          (NP (DT the) (JJS best) (NN place))
          (SBAR
            (S
              (VP (TO to)
                (VP (VB be)
                  (NP (DT an) (NN astronomer)))))))))
    ('' '')
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (ADJP (JJ familiar)
        (PP (IN with)
          (NP
            (NP (DT any) (JJ other) (`` ``) (JJ life-friendly) ('' '') (NN region))
            (PP (IN of)
              (NP (DT the) (NN galaxy))))))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP it))
          (VP (MD might)
            (CC or)
            (MD might) (RB not)
            (VP (VB be)
              (NP (DT a) (JJR better) (NN place)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (DT an) (NN astronomer)))))))))))
    (. .)))

det(region-5, the-2)
advmod(region-5, most-3)
amod(region-5, life-friendly-4)
nsubj(place-13, region-5)
det(galaxy-8, the-7)
prep_of(region-5, galaxy-8)
cop(place-13, is-9)
advmod(place-13, also-10)
det(place-13, the-11)
amod(place-13, best-12)
ccomp(familiar-22, place-13)
aux(astronomer-17, to-14)
cop(astronomer-17, be-15)
det(astronomer-17, an-16)
infmod(place-13, astronomer-17)
nsubj(familiar-22, I-19)
cop(familiar-22, am-20)
neg(familiar-22, not-21)
root(ROOT-0, familiar-22)
det(region-29, any-24)
amod(region-29, other-25)
amod(region-29, life-friendly-27)
prep_with(familiar-22, region-29)
det(galaxy-32, the-31)
prep_of(region-29, galaxy-32)
advmod(place-42, where-33)
nsubj(place-42, it-34)
aux(place-42, might-35)
advcl(familiar-22, might-37)
aux(place-42, might-37)
conj_or(place-42, might-37)
neg(place-42, not-38)
cop(place-42, be-39)
det(place-42, a-40)
amod(place-42, better-41)
advcl(familiar-22, place-42)
aux(astronomer-46, to-43)
cop(astronomer-46, be-44)
det(astronomer-46, an-45)
infmod(place-42, astronomer-46)

(ROOT
  (SQ
    (VP (VB Are)
      (NP (PRP you)))
    (. ?)))

cop(you-2, Are-1)
root(ROOT-0, you-2)

(ROOT
  (S (`` ``)
    (S
      (ADVP (RB Probably))
      (NP
        (NP (NN none))
        (PP (IN of)
          (NP
            (NP (DT these) (NNS pieces))
            (PP (IN of)
              (NP
                (NP (NN evidence))
                (PP (IN in)
                  (NP (NN isolation))))))))
      (VP (MD can)
        (VP (VB force)
          (NP (DT the) (JJ committed) (NN skeptic))
          (S
            (VP (TO to)
              (VP (VB admit)
                (NP (NN design))))))))
    (: ;)
    (CC but)
    (, ,)
    (S
      (S
        (VP (VBN taken)
          (ADVP (RB together))))
      (, ,)
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP are)
              (NP
                (NP (JJ strong) (NN evidence))
                (PP (IN of)
                  (NP
                    (NP (JJ intelligent) (NN design))
                    (PP (IN for)
                      (NP (NN anyone))))))
              (ADVP (JJ open)
                (PP (TO to)
                  (NP (DT the) (NN possibility)))))))))
    (. .)))

advmod(force-12, Probably-2)
nsubj(force-12, none-3)
det(pieces-6, these-5)
prep_of(none-3, pieces-6)
prep_of(pieces-6, evidence-8)
prep_in(evidence-8, isolation-10)
aux(force-12, can-11)
root(ROOT-0, force-12)
det(skeptic-15, the-13)
amod(skeptic-15, committed-14)
dobj(force-12, skeptic-15)
aux(admit-17, to-16)
xcomp(force-12, admit-17)
dobj(admit-17, design-18)
partmod(think-26, taken-22)
advmod(taken-22, together-23)
nsubj(think-26, I-25)
ccomp(force-12, think-26)
conj_but(force-12, think-26)
nsubj(evidence-30, they-27)
cop(evidence-30, are-28)
amod(evidence-30, strong-29)
ccomp(think-26, evidence-30)
amod(design-33, intelligent-32)
prep_of(evidence-30, design-33)
prep_for(design-33, anyone-35)
advmod(evidence-30, open-36)
det(possibility-39, the-38)
prep_to(open-36, possibility-39)

(ROOT
  (S (`` ``)
    (NP (PRP it))
    (ADVP (RB certainly))
    (VP (VBZ points)
      (PP (IN in)
        (NP
          (NP (DT the) (NN direction))
          (PP (IN of)
            (NP
              (NP (DT a) (NN universe))
              (VP (VBN designed)
                (PP (IN for)
                  (NP (JJ complex) (NN life)))))))))
    (. .)))

nsubj(points-4, it-2)
advmod(points-4, certainly-3)
root(ROOT-0, points-4)
det(direction-7, the-6)
prep_in(points-4, direction-7)
det(universe-10, a-9)
prep_of(direction-7, universe-10)
partmod(universe-10, designed-11)
amod(life-14, complex-13)
prep_for(designed-11, life-14)

(ROOT
  (S ('' '')
    (NP (RB Perhaps) (WDT that))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (NN someone))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ has)
                (NP (DT a) (JJ religious) (NN motivation)
                  (S
                    (VP (TO to)
                      (VP (VB accept)
                        (NP (PDT such) (DT a) (`` ``) (NN possibility) ('' ''))))))))))))
    (. ?)))

advmod(that-3, Perhaps-2)
nsubj(someone-6, that-3)
aux(someone-6, would-4)
cop(someone-6, be-5)
root(ROOT-0, someone-6)
nsubj(has-8, someone-6)
rcmod(someone-6, has-8)
det(motivation-11, a-9)
amod(motivation-11, religious-10)
dobj(has-8, motivation-11)
aux(accept-13, to-12)
infmod(motivation-11, accept-13)
predet(possibility-17, such-14)
det(possibility-17, a-15)
dobj(accept-13, possibility-17)

(ROOT
  (S (CC But)
    (NP (RB no))
    (, ,)
    (NP (`` ``) (JJ intelligent) (NN design) ('' ''))
    (VP (VBZ is) (RB not)
      (PP (IN about)
        (NP (DT a) (NN god)))
      (, ,)
      (SBAR (RB even) (IN if)
        (S
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (PRP$ its) (NNS supporters))))
          (VP (VBP express)
            (NP (JJ such) (NN theism))))))
    (. ?)))

cc(is-8, But-1)
nsubj(is-8, no-2)
amod(design-6, intelligent-5)
nsubj(is-8, design-6)
root(ROOT-0, is-8)
neg(is-8, not-9)
det(god-12, a-11)
prep_about(is-8, god-12)
advmod(express-20, even-14)
dep(express-20, if-15)
nsubj(express-20, all-16)
poss(supporters-19, its-18)
prep_of(all-16, supporters-19)
ccomp(is-8, express-20)
amod(theism-22, such-21)
dobj(express-20, theism-22)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (ADJP (JJ familiar)
        (PP (IN with)
          (NP
            (NP (DT any) (NNS universes))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD were) (RB not)
                  (VP (`` ``) (VBN designed) ('' '')
                    (PP (IN for)
                      (NP (JJ complex) (NN life)))))))))))
    (. .)))

nsubj(familiar-5, I-2)
cop(familiar-5, am-3)
neg(familiar-5, not-4)
root(ROOT-0, familiar-5)
det(universes-8, any-7)
prep_with(familiar-5, universes-8)
nsubjpass(designed-13, universes-8)
auxpass(designed-13, were-10)
neg(designed-13, not-11)
rcmod(universes-8, designed-13)
amod(life-17, complex-16)
prep_for(designed-13, life-17)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT an) (`` ``) (NN example))
              (PP (IN of)
                (NP (CD one))))
            ('' '')
            (VP
              (ADVP (RB really))
              (VBZ means)
              (NP (NN anything)))))))
    (. .)))

dep(think-5, So-1)
nsubj(think-5, I-2)
aux(think-5, do-3)
neg(think-5, n't-4)
root(ROOT-0, think-5)
complm(means-14, that-6)
det(example-9, an-7)
nsubj(means-14, example-9)
prep_of(example-9, one-11)
advmod(means-14, really-13)
ccomp(think-5, means-14)
dobj(means-14, anything-15)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (NP (PRP we))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP
                  (ADVP (RB just))
                  (VB pick)
                  (NP (DT these))))))))
      (VP (VBZ values)
        (PP (IN at)
          (ADJP (JJ random)))))
    (, ,) (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP am) (RB not)
        (ADJP (JJ familiar)
          (PP (IN with)
            (NP
              (NP (DT the) (NN process))
              (PP (IN of) (`` ``)
                (S
                  (VP (VBG picking)
                    (NP (DT these) (NNS values))
                    (PP (IN at)
                      (ADJP (JJ random)))))))))))
    (. .)))

mark(were-4, If-2)
nsubj(were-4, we-3)
xsubj(pick-7, we-3)
csubj(values-9, were-4)
aux(pick-7, to-5)
advmod(pick-7, just-6)
xcomp(were-4, pick-7)
dobj(pick-7, these-8)
root(ROOT-0, values-9)
prep_at(values-9, random-11)
nsubj(familiar-17, I-14)
cop(familiar-17, am-15)
neg(familiar-17, not-16)
ccomp(values-9, familiar-17)
det(process-20, the-19)
prep_with(familiar-17, process-20)
prep(process-20, of-21)
dep(of-21, picking-23)
det(values-25, these-24)
dobj(picking-23, values-25)
prep_at(picking-23, random-27)

(ROOT
  (S ('' '')
    (NP (NNP Can) (PRP you))
    (VP (VBP explain)
      (PP (TO to)
        (NP (PRP me)))
      (SBAR
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (DT this))))))
        (CC and)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB create)
                (NP (DT a) (NN universe))))))))
    (. ?)))

nsubj(explain-4, Can-2)
dep(Can-2, you-3)
root(ROOT-0, explain-4)
prep_to(explain-4, me-6)
advmod(do-9, how-7)
aux(do-9, to-8)
dep(explain-4, do-9)
dobj(do-9, this-10)
advmod(create-14, how-12)
aux(create-14, to-13)
dep(explain-4, create-14)
conj_and(do-9, create-14)
det(universe-16, a-15)
dobj(create-14, universe-16)

(ROOT
  (S (`` ``)
    (VP (VB indicate)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN evidence))
            (PP (IN of)
              (NP (JJ fine) (NN tuning))))
          (VP (VBZ is)
            (NP (DT a) (NN problem) ('' ''))
            (ADVP (RB Yes))))))
    (. .)))

root(ROOT-0, indicate-2)
complm(problem-11, that-3)
det(evidence-5, the-4)
nsubj(problem-11, evidence-5)
amod(tuning-8, fine-7)
prep_of(evidence-5, tuning-8)
cop(problem-11, is-9)
det(problem-11, a-10)
ccomp(indicate-2, problem-11)
advmod(problem-11, Yes-13)

(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB certainly))
    (VP (VBP need)
      (NP
        (NP (JJR more) (NNS examples))
        (PP (IN of)
          (NP (JJ other) (NNS universes))))
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP
              (ADVP (RBR better))
              (VB understand)
              (ADVP (RB just))
              (SBAR
                (WHNP (WP what) (NN range)
                  (PP (IN of)
                    (NP (NNS values))))
                (S
                  (NP (JJ such) (NNS constants))
                  (ADVP (RB normally))
                  (VP (VBP take)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (NNS universes))
                        (VP (VBP are)
                          (VP (VBN created)))))))))))))
    (. .)))

nsubj(need-3, We-1)
advmod(need-3, certainly-2)
root(ROOT-0, need-3)
amod(examples-5, more-4)
dobj(need-3, examples-5)
amod(universes-8, other-7)
prep_of(examples-5, universes-8)
mark(understand-13, in-9)
dep(understand-13, order-10)
aux(understand-13, to-11)
advmod(understand-13, better-12)
purpcl(need-3, understand-13)
advmod(understand-13, just-14)
det(range-16, what-15)
dep(take-22, range-16)
prep_of(range-16, values-18)
amod(constants-20, such-19)
nsubj(take-22, constants-20)
advmod(take-22, normally-21)
ccomp(understand-13, take-22)
advmod(created-26, when-23)
nsubjpass(created-26, universes-24)
auxpass(created-26, are-25)
advcl(take-22, created-26)

(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP (VBN made)
      (NP
        (NP (DT any) (NNS observations))
        (PP (IN of)
          (NP (JJ such) (NNS values))))
      (PP (IN in)
        (NP (JJ other) (NNS universes))))
    (. ?)))

aux(made-3, Have-1)
nsubj(made-3, you-2)
root(ROOT-0, made-3)
det(observations-5, any-4)
dobj(made-3, observations-5)
amod(values-8, such-7)
prep_of(observations-5, values-8)
amod(universes-11, other-10)
prep_in(made-3, universes-11)

