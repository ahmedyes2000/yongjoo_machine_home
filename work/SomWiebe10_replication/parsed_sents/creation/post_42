(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD said) ('' '')))
    (NP (NNP ID))
    (VP (VBZ has)
      (VP (VBN failed)
        (S
          (VP (TO to)
            (VP (VB contribute)
              (PP (IN in)
                (NP (DT any) (JJ meaningful) (NN manner))))))))
    (. ?)))

nsubj(said-2, You-1)
dep(failed-6, said-2)
nsubj(failed-6, ID-4)
xsubj(contribute-8, ID-4)
aux(failed-6, has-5)
root(ROOT-0, failed-6)
aux(contribute-8, to-7)
xcomp(failed-6, contribute-8)
det(manner-12, any-10)
amod(manner-12, meaningful-11)
prep_in(contribute-8, manner-12)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Wrong))
    (. !)))


(ROOT
  (S
    (ADVP (RB Then))
    (, ,)
    (VP (VBD proceeded)
      (S
        (VP (TO to)
          (VP (VB say)
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (VBP see)
                  (NP
                    (NP (DT the) (JJ same) (NN type))
                    (PP (IN of)
                      (NP
                        (NP (VBG ducting) (NN system))
                        (PP (IN in)
                          (NP (JJ canine) (NNS livers)))))))))))))
    (. .)))

advmod(proceeded-3, Then-1)
root(ROOT-0, proceeded-3)
aux(say-5, to-4)
xcomp(proceeded-3, say-5)
complm(see-8, that-6)
nsubj(see-8, we-7)
ccomp(say-5, see-8)
det(type-11, the-9)
amod(type-11, same-10)
dobj(see-8, type-11)
amod(system-14, ducting-13)
prep_of(type-11, system-14)
amod(livers-17, canine-16)
prep_in(system-14, livers-17)

(ROOT
  (S
    (VP (VB Ha))
    (. !)))

root(ROOT-0, Ha-1)

(ROOT
  (S
    (NP (DT That))
    (ADVP (RB simply))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (S
            (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
            (NP (EX there))
            (VP (VBD was)
              (NP
                (NP (DT an) (NN intelligence))
                (PP (IN behind)
                  (NP (DT both))))))
          (, ,)
          (CC and)
          (S
            (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
            (NP (PRP$ your) (NN program))
            (VP (VBD sucked)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBD took)
                    (SBAR
                      (S
                        (NP
                          (QP (JJR more) (IN than) (CD one)))
                        (VP (VBP try))))))))))))
    (. .)))

nsubj(means-3, That-1)
advmod(means-3, simply-2)
root(ROOT-0, means-3)
complm(was-9, that-4)
dep(was-9, 1-6)
expl(was-9, there-8)
ccomp(means-3, was-9)
det(intelligence-11, an-10)
nsubj(was-9, intelligence-11)
prep_behind(intelligence-11, both-13)
dep(sucked-21, 2-17)
poss(program-20, your-19)
nsubj(sucked-21, program-20)
ccomp(means-3, sucked-21)
conj_and(was-9, sucked-21)
mark(took-24, because-22)
nsubj(took-24, it-23)
advcl(sucked-21, took-24)
mwe(than-26, more-25)
quantmod(one-27, than-26)
nsubj(try-28, one-27)
ccomp(took-24, try-28)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN bank))
        (VP (VBD took)
          (SBAR
            (S
              (NP
                (QP (JJR more) (IN than) (CD one)))
              (VP (VBP try)
                (S
                  (VP (TO to)
                    (VP (VB deposit)
                      (NP (PRP$ your) (NN check)))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD 'd)
      (VP (VB be)
        (ADJP (RB pretty) (JJ steamed))))
    (. .)))

mark(took-4, If-1)
det(bank-3, the-2)
nsubj(took-4, bank-3)
advcl(steamed-18, took-4)
mwe(than-6, more-5)
quantmod(one-7, than-6)
nsubj(try-8, one-7)
xsubj(deposit-10, one-7)
ccomp(took-4, try-8)
aux(deposit-10, to-9)
xcomp(try-8, deposit-10)
poss(check-12, your-11)
dobj(deposit-10, check-12)
nsubj(steamed-18, you-14)
aux(steamed-18, 'd-15)
cop(steamed-18, be-16)
advmod(steamed-18, pretty-17)
root(ROOT-0, steamed-18)

(ROOT
  (S
    (NP (PRP You))
    (VP (VB be)
      (ADJP (JJ mad)
        (S
          (VP (TO to)
            (VP (VB continue)
              (NP (NN banking))
              (PP (IN with)
                (NP (PRP them))))))))
    (. .)))

nsubj(mad-3, You-1)
cop(mad-3, be-2)
root(ROOT-0, mad-3)
aux(continue-5, to-4)
xcomp(mad-3, continue-5)
dobj(continue-5, banking-6)
prep_with(continue-5, them-8)

(ROOT
  (S (CC So)
    (SBAR
      (WHADVP (WRB why))
      (FRAG
        (ADVP (RB then))))
    (, ,)
    (PRN
      (SINV (VBP do)
        (NP (PRP you))
        (VP (VB trust)
          (NP
            (NP (DT a) (NN theory))
            (SBAR
              (WHPP (IN in)
                (WHNP (WDT which)))
              (S
                (NP
                  (NP (NN death))
                  (CC &)
                  (NP (NN time)))
                (VP
                  (VP (VBP are)
                    (NP (DT the) (NNS heroes)))
                  (CC and)
                  (VP (VBZ is)
                    (ADVP (RB obviously))
                    (VP (VBG lacking)
                      (NP (DT the) (JJ same) (NNS credentials))
                      (SBAR (IN that)
                        (S
                          (NP (PRP you))
                          (VP (VBP claim)))))))))))))
    (VP (VBP apply)
      (PP (TO to)
        (NP (NNP ID))))
    (. .) ('' '')))

cc(apply-28, So-1)
advmod(then-3, why-2)
advcl(apply-28, then-3)
aux(trust-7, do-5)
nsubj(trust-7, you-6)
parataxis(apply-28, trust-7)
det(theory-9, a-8)
dobj(trust-7, theory-9)
rel(heroes-17, which-11)
nsubj(heroes-17, death-12)
nsubj(lacking-21, death-12)
conj_and(death-12, time-14)
nsubj(heroes-17, time-14)
cop(heroes-17, are-15)
det(heroes-17, the-16)
rcmod(theory-9, heroes-17)
aux(lacking-21, is-19)
advmod(lacking-21, obviously-20)
rcmod(theory-9, lacking-21)
conj_and(heroes-17, lacking-21)
det(credentials-24, the-22)
amod(credentials-24, same-23)
dobj(lacking-21, credentials-24)
complm(claim-27, that-25)
nsubj(claim-27, you-26)
ccomp(lacking-21, claim-27)
root(ROOT-0, apply-28)
prep_to(apply-28, ID-30)

(ROOT
  (S
    (VP (VB Pull)
      (NP
        (NP (DT the) (NN beam))
        (PP (RB out) (IN of)
          (NP (PRP$ your) (NN eye))))
      (PP (IN before)
        (S
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB pull)
                  (NP (DT the) (NN splinter))
                  (PRT (RP out))
                  (PP (IN of)
                    (NP (NN mine))))))))))
    (. !)))

root(ROOT-0, Pull-1)
det(beam-3, the-2)
dobj(Pull-1, beam-3)
poss(eye-7, your-6)
prep_out_of(beam-3, eye-7)
prepc_before(Pull-1, trying-9)
aux(pull-11, to-10)
xcomp(trying-9, pull-11)
det(splinter-13, the-12)
dobj(pull-11, splinter-13)
prep_out_of(pull-11, mine-16)

(ROOT
  (S
    (NP (`` ``)
      (NP
        (NP (NNP Jesus))
        (PP (IN of)
          (NP (NNP Nazareth))))
      ('' '')
      (VP (VBG Asking)
        (NP
          (NP (DT an) (NN atheist))
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (PRP he))
              (VP (MD ca) (RB n't)
                (VP (VB find)
                  (NP (NNP GOD)))))))))
    (VP (VBZ is)
      (PP (IN like)
        (S
          (VP (VBG asking)
            (NP
              (NP (DT a) (NN thief))
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (PRP he))
                  (VP (MD ca) (RB n't)
                    (VP (VB find)
                      (NP (DT a) (NN police) (NN officer)))))))))))
    (. .)))

nsubj(is-15, Jesus-2)
prep_of(Jesus-2, Nazareth-4)
partmod(Jesus-2, Asking-6)
det(atheist-8, an-7)
dobj(Asking-6, atheist-8)
advmod(find-13, why-9)
nsubj(find-13, he-10)
aux(find-13, ca-11)
neg(find-13, n't-12)
rcmod(atheist-8, find-13)
dobj(find-13, GOD-14)
root(ROOT-0, is-15)
prepc_like(is-15, asking-17)
det(thief-19, a-18)
dobj(asking-17, thief-19)
advmod(find-24, why-20)
nsubj(find-24, he-21)
aux(find-24, ca-22)
neg(find-24, n't-23)
rcmod(thief-19, find-24)
det(officer-27, a-25)
nn(officer-27, police-26)
dobj(find-24, officer-27)

(ROOT
  (NP (NNP '') (NNP Kent) (NNP Hovind)))

nn(Hovind-3, Kent-2)
root(ROOT-0, Hovind-3)

(ROOT
  (S
    (NP
      (NP (NNP Newton) (, ,) (NNP Pascal) (, ,) (NNP Einstein) (, ,))
      (CC and)
      (NP (JJ many) (NNS others)))
    (VP (VBD put)
      (NP (NN stock))
      (PP (IN in)
        (NP (DT the) (NNP ID) (NN theory))))
    (. .)))

nn(Einstein-5, Newton-1)
appos(Einstein-5, Pascal-3)
nsubj(put-10, Einstein-5)
amod(others-9, many-8)
conj_and(Einstein-5, others-9)
nsubj(put-10, others-9)
root(ROOT-0, put-10)
dobj(put-10, stock-11)
det(theory-15, the-13)
nn(theory-15, ID-14)
prep_in(put-10, theory-15)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP they))
          (VP (VBD figured)
            (PRT (RP out))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP they))
                (VP (VBD did))))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
advmod(figured-5, why-3)
nsubj(figured-5, they-4)
advcl(is-2, figured-5)
prt(figured-5, out-6)
dobj(did-9, what-7)
nsubj(did-9, they-8)
ccomp(figured-5, did-9)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (DT the) (NN assumption))
        (PP (IN of)
          (NP (NNP ID)))))
    (NP (PRP you))
    (VP (MD can)
      (VP (VB bet)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (NN order))
                (UCP
                  (PP (TO to)
                    (NP (DT the) (JJ natural) (NN world)))
                  (CC and)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (NP (PRP$ its) (NN knowable)))))))))))
    (. .)))

det(assumption-3, the-2)
prep_with(bet-8, assumption-3)
prep_of(assumption-3, ID-5)
nsubj(bet-8, you-6)
aux(bet-8, can-7)
root(ROOT-0, bet-8)
complm(is-11, that-9)
expl(is-11, there-10)
ccomp(bet-8, is-11)
nsubj(is-11, order-12)
dep(order-12, to-13)
det(world-16, the-14)
amod(world-16, natural-15)
pobj(to-13, world-16)
dep(knowable-21, that-18)
dep(knowable-21, it-19)
poss(knowable-21, its-20)
dep(order-12, knowable-21)
conj_and(to-13, knowable-21)

(ROOT
  (S
    (NP (NNP Einstein))
    (VP (VBD believed)
      (ADVP (RB as) (RB much))
      (SBAR (IN as)
        (S
          (NP
            (NP (NNS people))
            (PP (IN like)
              (NP
                (NP (NNP Richard) (NNP Dawkins))
                (, ,)
                (NP (NNP Christopher) (NNP Hitchens))
                (, ,)
                (CC and)
                (NP (JJ many) (NNS others)))))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB believe))))))))
    (. .)))

nsubj(believed-2, Einstein-1)
root(ROOT-0, believed-2)
advmod(much-4, as-3)
advmod(believed-2, much-4)
mark(want-17, as-5)
nsubj(want-17, people-6)
xsubj(believe-19, people-6)
nn(Dawkins-9, Richard-8)
prep_like(people-6, Dawkins-9)
nn(Hitchens-12, Christopher-11)
prep_like(people-6, Hitchens-12)
conj_and(Dawkins-9, Hitchens-12)
amod(others-16, many-15)
prep_like(people-6, others-16)
conj_and(Dawkins-9, others-16)
advcl(believed-2, want-17)
aux(believe-19, to-18)
xcomp(want-17, believe-19)

(ROOT
  (S
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (NP (PRP he))
    (VP (VBD was)
      (PP (IN on)
        (NP (DT a) (NN quest)
          (S
            (VP
              (VP (TO to)
                (VP (VB discover)
                  (NP
                    (NP (NNP the) ('' '') (NNP Theory))
                    (PP (IN of)
                      (NP (NNP Everything) ('' ''))))))
              (CC or)
              (VP (`` ``) (TO to)
                (VP (VB read)
                  (NP
                    (NP (DT the) (NN mind))
                    (PP (IN of)
                      (NP (NNP GOD) ('' '')))))))))))
    (. .)))

prep_after(was-5, all-2)
nsubj(was-5, he-4)
root(ROOT-0, was-5)
det(quest-8, a-7)
prep_on(was-5, quest-8)
aux(discover-10, to-9)
dep(quest-8, discover-10)
nn(Theory-13, the-11)
dobj(discover-10, Theory-13)
prep_of(Theory-13, Everything-15)
aux(read-20, to-19)
dep(quest-8, read-20)
conj_or(discover-10, read-20)
det(mind-22, the-21)
dobj(read-20, mind-22)
prep_of(mind-22, GOD-24)

(ROOT
  (SBARQ
    (WHADVP (WRB When))
    (SQ
      (VP (VBD asked)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD was)
              (NP (PRP$ his) (NN objection))
              (PP (TO to)
                (NP
                  (NP (NNP Quantum) (NNP Mechanics))
                  (SBAR
                    (S
                      (NP (PRP he))
                      (VP (VBD was)
                        (VP (VBN quoted)
                          (PP (IN as)
                            (S
                              (VP (VBG saying) (, ,) (`` ``)
                                (S
                                  (NP (PRP I))
                                  (VP (VBP refuse)
                                    (S
                                      (VP (TO to)
                                        (VP (VB believe)
                                          (SBAR
                                            (S
                                              (NP (NNP GOD))
                                              (VP (MD would)
                                                (VP (VB play)
                                                  (NP (NN chance))
                                                  (PP (IN with)
                                                    (NP
                                                      (NP (DT the) (NN Universe))
                                                      ('' '')
                                                      (SBAR
                                                        (S
                                                          (NP (DT The) (JJR better) (NN question))
                                                          (VP (VBZ is) (: :)
                                                            (SBARQ (`` ``)
                                                              (WHNP (WP What))
                                                              (SQ (VBZ has)
                                                                (NP (JJ evolutionary) (NN biology))
                                                                (VP (VBN contributed)
                                                                  (PP (IN in)
                                                                    (NP (DT a) (JJ meaningful) (NN matter)))))
                                                              (. ?))))))))))))))))))))))))))))))))

advmod(asked-2, When-1)
root(ROOT-0, asked-2)
nsubj(objection-6, what-3)
cop(objection-6, was-4)
poss(objection-6, his-5)
ccomp(asked-2, objection-6)
nn(Mechanics-9, Quantum-8)
prep_to(objection-6, Mechanics-9)
nsubjpass(quoted-12, he-10)
auxpass(quoted-12, was-11)
rcmod(Mechanics-9, quoted-12)
prepc_as(quoted-12, saying-14)
nsubj(refuse-18, I-17)
xsubj(believe-20, I-17)
ccomp(saying-14, refuse-18)
aux(believe-20, to-19)
xcomp(refuse-18, believe-20)
nsubj(play-23, GOD-21)
aux(play-23, would-22)
ccomp(believe-20, play-23)
dobj(play-23, chance-24)
det(Universe-27, the-26)
prep_with(play-23, Universe-27)
det(question-31, The-29)
amod(question-31, better-30)
nsubj(is-32, question-31)
rcmod(Universe-27, is-32)
dobj(contributed-39, What-35)
aux(contributed-39, has-36)
amod(biology-38, evolutionary-37)
nsubj(contributed-39, biology-38)
parataxis(is-32, contributed-39)
det(matter-43, a-41)
amod(matter-43, meaningful-42)
prep_in(contributed-39, matter-43)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB help)
        (NP (PRP you))
        (PRT (RP out))))
    (. .)))

nsubj(help-4, I-2)
aux(help-4, 'll-3)
root(ROOT-0, help-4)
dobj(help-4, you-5)
prt(help-4, out-6)

(ROOT
  (S
    (NP (NNP Mr.) (NNP Richard) (NNP Dawkins))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (VP (VBG using)
            (NP (DT a) (NN computer) (NN program))
            (PP (TO to)
              (NP (NN map)))
            (PP (IN out)
              (S
                (VP (VBG piping)
                  (PP (TO to)
                    (NP (NNS containers)))
                  (SBAR (IN that)
                    (S
                      (PP (IN over)
                        (NP (NNS generations)))
                      (NP (DT the) (NN program))
                      (VP (VBD had)
                        (VP (VBN calculated)
                          (NP
                            (NP (DT the) (JJ perfect) (NN plumbing))
                            (PP (IN for)
                              (NP (DT this) (NN system)))))))))))))))
    (. .)))

nn(Dawkins-3, Mr.-1)
nn(Dawkins-3, Richard-2)
nsubj(said-4, Dawkins-3)
root(ROOT-0, said-4)
complm(using-6, that-5)
ccomp(said-4, using-6)
det(program-9, a-7)
nn(program-9, computer-8)
dobj(using-6, program-9)
prep_to(using-6, map-11)
prepc_out(using-6, piping-13)
prep_to(piping-13, containers-15)
complm(calculated-22, that-16)
prep_over(calculated-22, generations-18)
det(program-20, the-19)
nsubj(calculated-22, program-20)
aux(calculated-22, had-21)
ccomp(piping-13, calculated-22)
det(plumbing-25, the-23)
amod(plumbing-25, perfect-24)
dobj(calculated-22, plumbing-25)
det(system-28, this-27)
prep_for(plumbing-25, system-28)

