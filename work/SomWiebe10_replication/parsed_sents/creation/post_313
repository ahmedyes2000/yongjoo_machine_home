(ROOT
  (S (`` ``)
    (CC But)
    (NP (PRP we))
    (VP (VBP are) (RB not)
      (VP (VBG arguing)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ wrong)))))))
    (. .)))

cc(arguing-6, But-2)
nsubj(arguing-6, we-3)
aux(arguing-6, are-4)
neg(arguing-6, not-5)
root(ROOT-0, arguing-6)
complm(wrong-10, that-7)
nsubj(wrong-10, it-8)
cop(wrong-10, is-9)
ccomp(arguing-6, wrong-10)

(ROOT
  (S ('' '')
    (ADVP (RB Okay) (RB then))
    (, ,)
    (ADVP (RB so)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT the) (NN heck))
          (VP (VBD was)
            (VP (VBN PvM)
              (S
                (VP (VBG talking)
                  (PP (IN about)
                    (NP
                      (NP (PRP$ his) (JJ entire) (NN visit))
                      (PP (IN on)
                        (NP (RB here))))))))))))
    (VP (VBZ anyways))
    (. ?)))

advmod(then-3, Okay-2)
advmod(anyways-18, then-3)
advmod(anyways-18, so-5)
dobj(PvM-10, what-6)
det(heck-8, the-7)
nsubjpass(PvM-10, heck-8)
auxpass(PvM-10, was-9)
dep(so-5, PvM-10)
xcomp(PvM-10, talking-11)
poss(visit-15, his-13)
amod(visit-15, entire-14)
prep_about(talking-11, visit-15)
prep(visit-15, on-16)
pobj(on-16, here-17)
root(ROOT-0, anyways-18)

(ROOT
  (S
    (VP (VB Try)
      (NP
        (NP (DT the) (JJ modern) (NN theory))
        (PP (IN of)
          (NP (NNP ID)))))
    (. .)))

root(ROOT-0, Try-1)
det(theory-4, the-2)
amod(theory-4, modern-3)
dobj(Try-1, theory-4)
prep_of(theory-4, ID-6)

(ROOT
  (S (: ;)
    (NP (NNP -RRB-))
    (VP (VBP brb)
      (NP (PRP$ my) (JJ good) (NN man)))
    (. .)))

root(ROOT-0, brb-3)
poss(man-6, my-4)
amod(man-6, good-5)
dobj(brb-3, man-6)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP are)
        (VP (VBG arguing)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is) (RB not)
                (ADJP (JJ right)
                  (CC or)
                  (JJ wrong))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's) (`` ``) (RB not)
      (ADVP (RB even))
      (ADJP (JJ wrong))
      ('' ''))
    (. .)))

nsubj(arguing-4, We-2)
aux(arguing-4, are-3)
ccomp(wrong-18, arguing-4)
complm(right-9, that-5)
nsubj(right-9, it-6)
nsubj(wrong-11, it-6)
cop(right-9, is-7)
neg(right-9, not-8)
ccomp(arguing-4, right-9)
ccomp(arguing-4, wrong-11)
conj_or(right-9, wrong-11)
nsubj(wrong-18, it-13)
cop(wrong-18, 's-14)
neg(wrong-18, not-16)
advmod(wrong-18, even-17)
root(ROOT-0, wrong-18)

(ROOT
  (SBARQ
    (WHADJP (RB '')
      (WHADJP (WRB How) (RB exactly)))
    (SQ (VBZ is)
      (NP (DT that))
      (ADJP (JJ possible)))
    (. ?)))

advmod(exactly-3, How-2)
attr(possible-6, exactly-3)
cop(possible-6, is-4)
nsubj(possible-6, that-5)
root(ROOT-0, possible-6)

(ROOT
  (SBARQ
    (WHADVP (WRB Oh))
    (, ,)
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBG beating)
        (SBAR (IN that)
          (S
            (NP
              (NP (JJ non-existant) (NN horse))
              (PP (IN of) ('' '')
                (NP (PRP It))))
            (VP (VBZ 's) (RB not)
              (NP (NN science) ('' ''))
              (ADVP (RB again)))))))
    (. ?)))

advmod(beating-5, Oh-1)
aux(beating-5, are-3)
nsubj(beating-5, you-4)
root(ROOT-0, beating-5)
complm(science-14, that-6)
amod(horse-8, non-existant-7)
nsubj(science-14, horse-8)
prep_of(horse-8, It-11)
cop(science-14, 's-12)
neg(science-14, not-13)
ccomp(beating-5, science-14)
advmod(science-14, again-16)

(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN definition))
          (PP (IN of) ('' '')
            (NP (JJ intelligent) (NN design))))))
    ('' '')
    (NP (DT that))
    (VP (MD would)
      (VP (VB allow)
        (NP (DT a) (NN scientist)
          (S
            (VP (TO to)
              (VP (VB determine)
                (SBAR (IN if)
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (ADJP (JJ right)
                        (CC or)
                        (JJ wrong)))))))))))
    (. .)))

expl(is-3, There-2)
ccomp(allow-13, is-3)
det(definition-5, no-4)
nsubj(is-3, definition-5)
amod(design-9, intelligent-8)
prep_of(definition-5, design-9)
nsubj(allow-13, that-11)
aux(allow-13, would-12)
root(ROOT-0, allow-13)
det(scientist-15, a-14)
dobj(allow-13, scientist-15)
aux(determine-17, to-16)
infmod(scientist-15, determine-17)
mark(right-21, if-18)
nsubj(right-21, it-19)
nsubj(wrong-23, it-19)
cop(right-21, 's-20)
advcl(determine-17, right-21)
advcl(determine-17, wrong-23)
conj_or(right-21, wrong-23)

(ROOT
  (S ('' '')
    (S (IN So)
      (NP (WDT what))
      (VP (VBZ 's)
        (ADJP (JJ wrong)
          (PP (IN with)
            (NP (DT this) (NN one))))))
    (: :) (`` ``)
    (S
      (NP
        (NP (DT The) (NN theory))
        (PP (IN of)
          (NP (JJ intelligent) (NN design))))
      (VP (VBZ holds)
        (SBAR (IN that)
          (S
            (NP
              (NP (JJ certain) (NNS features))
              (PP
                (PP (IN of)
                  (NP (DT the) (NN universe)))
                (CC and)
                (PP (IN of)
                  (NP (VBG living) (NNS things)))))
            (VP (VBP are)
              (VP (RBS best) (VBN explained)
                (PP (IN by)
                  (NP
                    (NP (DT an) (JJ intelligent) (NN cause))
                    (, ,)
                    (NP
                      (NP (RB not) (DT an) (JJ undirected) (NN process))
                      (PP (JJ such) (IN as)
                        (NP (JJ natural) (NN selection))))))))))))
    (. .)))

dep(wrong-5, So-2)
nsubj(wrong-5, what-3)
cop(wrong-5, 's-4)
root(ROOT-0, wrong-5)
det(one-8, this-7)
prep_with(wrong-5, one-8)
det(theory-12, The-11)
nsubj(holds-16, theory-12)
amod(design-15, intelligent-14)
prep_of(theory-12, design-15)
ccomp(wrong-5, holds-16)
complm(explained-29, that-17)
amod(features-19, certain-18)
nsubjpass(explained-29, features-19)
det(universe-22, the-21)
prep_of(features-19, universe-22)
amod(things-26, living-25)
prep_of(features-19, things-26)
conj_and(universe-22, things-26)
auxpass(explained-29, are-27)
advmod(explained-29, best-28)
ccomp(holds-16, explained-29)
det(cause-33, an-31)
amod(cause-33, intelligent-32)
agent(explained-29, cause-33)
neg(process-38, not-35)
det(process-38, an-36)
amod(process-38, undirected-37)
appos(cause-33, process-38)
amod(selection-42, natural-41)
prep_such_as(process-38, selection-42)

(ROOT
  (S ('' '')
    (NP (NNP Sounds))
    (VP (VBP clear)
      (ADVP (RB enough)
        (PP (TO to)
          (NP (PRP me)))))
    (. .) ('' '')))

nsubj(clear-3, Sounds-2)
root(ROOT-0, clear-3)
advmod(clear-3, enough-4)
prep_to(enough-4, me-6)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (RB only) (DT the))
        ('' '')
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP know)
              (NP (PRP it))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP I))
                  (VP (VB see)
                    (NP (PRP it) ('' ''))
                    (S
                      (NP
                        (NP (NN interpretation))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (`` ``) (NN evidence) ('' ''))
                            (PP (IN of)
                              (NP (DT the) (`` ``) (JJ natural) (NN world) ('' '')))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(the-4, only-3)
nsubj(is-2, the-4)
nsubj(know-7, I-6)
rcmod(the-4, know-7)
dobj(know-7, it-8)
advmod(see-11, when-9)
nsubj(see-11, I-10)
advcl(know-7, see-11)
dobj(see-11, it-12)
dep(see-11, interpretation-14)
det(evidence-18, the-16)
prep_of(interpretation-14, evidence-18)
det(world-24, the-21)
amod(world-24, natural-23)
prep_of(evidence-18, world-24)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S (`` ``)
        (NP (NNS interpretations))
        ('' '')
        (VP
          (VP (VBP are)
            (ADJP (JJ personal)))
          (CC and)
          (VP (MD can) (RB not)
            (VP (VB be)
              (VP (VBN agreed)
                (PP (RB upon))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (NP (NN science)))
    (. .)))

cc(science-19, But-1)
mark(personal-7, if-2)
nsubj(personal-7, interpretations-4)
nsubjpass(agreed-12, interpretations-4)
cop(personal-7, are-6)
advcl(science-19, personal-7)
aux(agreed-12, can-9)
neg(agreed-12, not-10)
auxpass(agreed-12, be-11)
conj_and(personal-7, agreed-12)
advcl(science-19, agreed-12)
prep(agreed-12, upon-13)
advmod(science-19, then-15)
nsubj(science-19, it-16)
cop(science-19, 's-17)
neg(science-19, not-18)
root(ROOT-0, science-19)

(ROOT
  (S ('' '')
    (PP (IN Hey)
      (NP (CD onein6billion)))
    (, ,)
    (NP (NNP William) (NNP Paley))
    (VP (VBZ is)
      (ADJP (JJ dead)))
    (. .)))

prep_hey(dead-8, onein6billion-3)
nn(Paley-6, William-5)
nsubj(dead-8, Paley-6)
cop(dead-8, is-7)
root(ROOT-0, dead-8)

