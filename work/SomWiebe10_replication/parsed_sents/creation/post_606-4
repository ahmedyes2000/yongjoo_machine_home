(ROOT
  (S (RB So)
    (VP (VB let)
      (NP (PRP 's))
      (RB not)
      (VP (VB pretend)
        (SBAR (IN that)
          (S
            (NP (DT no) (JJ such) (NN argument))
            (VP (VBP exist))))))
    (. .)))

advmod(let-2, So-1)
root(ROOT-0, let-2)
dobj(let-2, 's-3)
neg(let-2, not-4)
dep(let-2, pretend-5)
complm(exist-10, that-6)
det(argument-9, no-7)
amod(argument-9, such-8)
nsubj(exist-10, argument-9)
ccomp(pretend-5, exist-10)

