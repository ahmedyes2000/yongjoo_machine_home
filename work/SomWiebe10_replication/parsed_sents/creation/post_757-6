(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB try)
          (NP (PRP$ your) (JJ whole) (NN life))
          (S
            (VP (TO to)
              (VP (VB piece)
                (PRT (RP together))
                (NP
                  (NP (DT the) (NN past))
                  (VP (VBG using)
                    (NP
                      (NP (NNS observations))
                      (PP (IN in)
                        (NP (DT the) (NN present))))))))))))
    (, ,)
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP
            (NP (PRP$ your) (NNS presumptions))
            (CC and)
            (NP (JJ starting) (NNS points)))
          (VP (VBP are)
            (ADJP (JJ wrong))
            (, ,)
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (MD can)))))))
      (NP (PRP you))
      (ADVP (RB even))
      (VP (VBP find)
        (NP (DT the) (NN truth))))
    (. ?)))

nsubj(try-3, You-1)
aux(try-3, can-2)
root(ROOT-0, try-3)
poss(life-6, your-4)
amod(life-6, whole-5)
dobj(try-3, life-6)
aux(piece-8, to-7)
xcomp(try-3, piece-8)
prt(piece-8, together-9)
det(past-11, the-10)
dobj(piece-8, past-11)
partmod(past-11, using-12)
dobj(using-12, observations-13)
det(present-16, the-15)
prep_in(observations-13, present-16)
mark(wrong-26, if-19)
poss(presumptions-21, your-20)
nsubj(wrong-26, presumptions-21)
amod(points-24, starting-23)
conj_and(presumptions-21, points-24)
nsubj(wrong-26, points-24)
cop(wrong-26, are-25)
advcl(find-32, wrong-26)
advmod(can-29, how-28)
ccomp(wrong-26, can-29)
nsubj(find-32, you-30)
advmod(find-32, even-31)
conj_but(try-3, find-32)
det(truth-34, the-33)
dobj(find-32, truth-34)

