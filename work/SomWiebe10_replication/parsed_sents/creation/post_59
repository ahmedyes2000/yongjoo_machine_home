(ROOT
  (S
    (SBAR
      (PRN (: --)
        (NP (NNP Highlander))
        (: --))
      (S
        (NP
          (NP (DT The) (NN lack))
          (PP (IN of)
            (NP (NN evidence) (JJ supporting) (JJ materialist) (NNS assumptions) (NN complexity))))
        (VP (VBZ is)
          (NP (DT a) (NN chance) (NN arrangement)))))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (DT the) (NN opposite))
          (VP (MD could)
            (VP (VB be)
              (ADJP (JJ true)))))))
    (. .)))

dep(arrangement-15, Highlander-2)
det(lack-5, The-4)
nsubj(arrangement-15, lack-5)
nn(complexity-11, evidence-7)
amod(complexity-11, supporting-8)
amod(complexity-11, materialist-9)
nn(complexity-11, assumptions-10)
prep_of(lack-5, complexity-11)
cop(arrangement-15, is-12)
det(arrangement-15, a-13)
nn(arrangement-15, chance-14)
csubj(means-16, arrangement-15)
root(ROOT-0, means-16)
det(opposite-18, the-17)
nsubj(true-21, opposite-18)
aux(true-21, could-19)
cop(true-21, be-20)
ccomp(means-16, true-21)

(ROOT
  (S
    (NP
      (NP (DT That) (JJ many))
      (PP (IN of)
        (NP (DT these) (NNS systems))))
    (VP (VBP look)
      (SBAR
        (SBAR
          (S
            (VP (VBN designed))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (NN science))
            (VP (VBZ has) (RB not)
              (VP
                (PRN (-LRB- -LRB-)
                  (ADVP (RB even) (RB remotely))
                  (-RRB- -RRB-))
                (VBN demonstrated)))))))
    (NP
      (NP (DT a) (NN chance) (NN pathway))
      (PP (TO to)
        (NP (JJ such) (NN organization))))
    (, ,)
    (S
      (VP (VBZ leaves)
        (NP (NN design))
        (PP (IN as)
          (NP (DT the) (JJ logical) (NN alternative)))))
    (. .)))

det(many-2, That-1)
nsubj(look-6, many-2)
det(systems-5, these-4)
prep_of(many-2, systems-5)
root(ROOT-0, look-6)
ccomp(look-6, designed-7)
complm(demonstrated-17, that-9)
nsubj(demonstrated-17, science-10)
aux(demonstrated-17, has-11)
neg(demonstrated-17, not-12)
advmod(remotely-15, even-14)
dep(demonstrated-17, remotely-15)
ccomp(look-6, demonstrated-17)
conj_and(designed-7, demonstrated-17)
det(pathway-20, a-18)
nn(pathway-20, chance-19)
dep(look-6, pathway-20)
amod(organization-23, such-22)
prep_to(pathway-20, organization-23)
ccomp(look-6, leaves-25)
dobj(leaves-25, design-26)
det(alternative-30, the-28)
amod(alternative-30, logical-29)
prep_as(leaves-25, alternative-30)

(ROOT
  (S
    (NP (NNP Until))
    (VP (VBN proven)
      (ADVP (RB otherwise)))
    (. .)))

nsubj(proven-2, Until-1)
root(ROOT-0, proven-2)
advmod(proven-2, otherwise-3)

(ROOT
  (S
    (S
      (NP (NNP Design))
      (ADVP (RB always))
      (VP (VBZ has)
        (VP (VBN remained)
          (NP (DT a) (JJ logical) (NN possibility))
          (ADVP (RB however)))))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ does)
      (NP (NN nothing))
      (S
        (VP (TO to)
          (VP
            (ADVP (RB actually))
            (VB demonstrate)
            (SBAR (IN that)
              (S
                (NP (PDT such) (DT a) (NN possibility))
                (VP (VBZ is)
                  (VP (VBN actuated)))))))))
    (. .)))

nsubj(possibility-7, Design-1)
advmod(possibility-7, always-2)
aux(possibility-7, has-3)
cop(possibility-7, remained-4)
det(possibility-7, a-5)
amod(possibility-7, logical-6)
ccomp(does-11, possibility-7)
advmod(possibility-7, however-8)
nsubj(does-11, ID-10)
root(ROOT-0, does-11)
dobj(does-11, nothing-12)
aux(demonstrate-15, to-13)
advmod(demonstrate-15, actually-14)
xcomp(does-11, demonstrate-15)
complm(actuated-21, that-16)
predet(possibility-19, such-17)
det(possibility-19, a-18)
nsubjpass(actuated-21, possibility-19)
auxpass(actuated-21, is-20)
ccomp(demonstrate-15, actuated-21)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (ADJP (JJ plausible)
          (CC and)
          (JJ growing))
        (NN evidence))
      (SBAR (IN that)
        (S
          (S
            (NP (NN complexity)
              (CC and)
              (NN information) (NN increase))
            (VP (VBP are)
              (NP
                (NP (JJ inevitable) (NNS outcomes))
                (PP (IN of)
                  (NP (JJ evolutionary) (NNS processes))))))
          (CC and)
          (S
            (SBAR (IN while)
              (S
                (NP (NN science))
                (VP (MD may)
                  (VP (VB remain)
                    (NP (NN ignorant))
                    (PP (IN about)
                      (NP
                        (NP (DT the) (JJ exact) (NN origin)
                          (CC and)
                          (NN evolution))
                        (PP (IN of)
                          (NP (NNS systems)))))))))
            (, ,)
            (NP (DT this))
            (VP (VBZ does) (RB not)
              (VP (VB give)
                (NP (NNP ANY) (NN credibility))
                (PP (TO to)
                  (NP (DT the) (`` ``) (NN design) ('' '') (NNS arguments))))))))
      (, ,)
      (SBAR (IN lest)
        (S
          (NP (PRP we))
          (VP (VB define)
            (NP (NN design))
            (S
              (VP (TO to)
                (VP (VB be) (`` ``)
                  (NP
                    (NP (DT that))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (NN science))
                        (VP (VBZ does) (RB not)
                          (ADVP (RB yet))
                          (VP (VB understand) ('' '')))))))))))))
    (. .)))

prep_in(is-5, fact-2)
expl(is-5, there-4)
root(ROOT-0, is-5)
amod(evidence-9, plausible-6)
conj_and(plausible-6, growing-8)
amod(evidence-9, growing-8)
nsubj(is-5, evidence-9)
complm(outcomes-17, that-10)
nn(increase-14, complexity-11)
conj_and(complexity-11, information-13)
nn(increase-14, information-13)
nsubj(outcomes-17, increase-14)
cop(outcomes-17, are-15)
amod(outcomes-17, inevitable-16)
ccomp(is-5, outcomes-17)
amod(processes-20, evolutionary-19)
prep_of(outcomes-17, processes-20)
mark(ignorant-26, while-22)
nsubj(ignorant-26, science-23)
aux(ignorant-26, may-24)
cop(ignorant-26, remain-25)
advcl(give-39, ignorant-26)
det(origin-30, the-28)
amod(origin-30, exact-29)
prep_about(ignorant-26, origin-30)
prep_about(ignorant-26, evolution-32)
conj_and(origin-30, evolution-32)
prep_of(origin-30, systems-34)
nsubj(give-39, this-36)
aux(give-39, does-37)
neg(give-39, not-38)
ccomp(is-5, give-39)
conj_and(outcomes-17, give-39)
nn(credibility-41, ANY-40)
dobj(give-39, credibility-41)
det(arguments-47, the-43)
nn(arguments-47, design-45)
prep_to(give-39, arguments-47)
mark(define-51, lest-49)
nsubj(define-51, we-50)
advcl(is-5, define-51)
dobj(define-51, design-52)
aux(that-56, to-53)
cop(that-56, be-54)
xcomp(define-51, that-56)
dobj(understand-62, that-56)
rel(understand-62, which-57)
nsubj(understand-62, science-58)
aux(understand-62, does-59)
neg(understand-62, not-60)
advmod(understand-62, yet-61)
rcmod(that-56, understand-62)

(ROOT
  (S (CC But)
    (ADVP (RB then))
    (NP (PRP we))
    (VP (MD should)
      (VP (VB be)
        (ADJP
          (ADJP (JJ careful) (RB not)
            (S
              (VP (TO to)
                (VP (VB use)
                  (S (`` ``)
                    (NP (NN bait)
                      (CC and)
                      (NN switch))
                    ('' ''))))))
          (CC and)
          (ADJP (JJ conflate) (RB terminology)
            (S
              (VP (TO to)
                (VP (VB suggest)
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT this) (NN kind))
                        (PP (IN of)
                          (NP (`` ``) (NN design) ('' ''))))
                      (VP (VBZ has)
                        (NP (DT any) (NN relevance))
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN concept))
                            (PP (IN of)
                              (NP (NNP Design)))))))))))))))
    (. .)))

advmod(careful-6, then-2)
nsubj(careful-6, we-3)
nsubj(conflate-16, we-3)
aux(careful-6, should-4)
cop(careful-6, be-5)
root(ROOT-0, careful-6)
neg(careful-6, not-7)
aux(use-9, to-8)
xcomp(careful-6, use-9)
dep(use-9, bait-11)
dep(use-9, switch-13)
conj_and(bait-11, switch-13)
conj_and(careful-6, conflate-16)
advmod(conflate-16, terminology-17)
aux(suggest-19, to-18)
xcomp(conflate-16, suggest-19)
complm(has-27, that-20)
det(kind-22, this-21)
nsubj(has-27, kind-22)
prep_of(kind-22, design-25)
ccomp(suggest-19, has-27)
det(relevance-29, any-28)
dobj(has-27, relevance-29)
det(concept-32, the-31)
prep_to(has-27, concept-32)
prep_of(concept-32, Design-34)

