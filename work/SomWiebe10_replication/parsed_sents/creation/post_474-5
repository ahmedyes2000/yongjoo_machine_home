(ROOT
  (S
    (INTJ (RB Sure))
    (, ,)
    (NP (PRP we))
    (VP (MD may)
      (VP (VB have)
        (VP (VBN come)
          (S
            (S
              (VP (TO to)
                (VP (VB realize)
                  (SBAR (IN that)
                    (S
                      (NP (NNP MN))
                      (VP (VBZ is)
                        (ADJP (JJ insufficient)
                          (S
                            (VP (TO to)
                              (VP (VB address)
                                (NP (DT all) (NNS problems))))))
                        (, ,)
                        (ADVP (RB however))))))))
            (SBARQ
              (WHADVP (WRB why))
              (SQ (MD should)
                (NP (PRP we))
                (VP (VB conclude) (`` ``)
                  (NP (NN design))
                  ('' '')
                  (PP (VBN based)
                    (PP (IN on)
                      (NP (RB just) (PRP$ our) (NN ignorance)))))))))))
    (. .)))

dep(come-6, Sure-1)
nsubj(come-6, we-3)
aux(come-6, may-4)
aux(come-6, have-5)
root(ROOT-0, come-6)
aux(realize-8, to-7)
dep(come-6, realize-8)
complm(insufficient-12, that-9)
nsubj(insufficient-12, MN-10)
cop(insufficient-12, is-11)
ccomp(realize-8, insufficient-12)
aux(address-14, to-13)
xcomp(insufficient-12, address-14)
det(problems-16, all-15)
dobj(address-14, problems-16)
advmod(insufficient-12, however-18)
advmod(conclude-22, why-19)
aux(conclude-22, should-20)
nsubj(conclude-22, we-21)
dep(realize-8, conclude-22)
dobj(conclude-22, design-24)
prepc_based_on(conclude-22, on-27)
advmod(ignorance-30, just-28)
poss(ignorance-30, our-29)
pobj(conclude-22, ignorance-30)

