(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ provides)
      (NP (DT no) (JJ testable) (NNS hypotheses))
      (PP (IN beyond)
        (NP (DT the) (JJ negative) (NN claim)))
      (SBAR (IN that) (`` ``)
        (S
          (NP (NN science))
          (VP (MD can) (RB not)
            (VP (VB explain)
              (NP (PRP it)))))
        ('' '')))
    (. .)))

nsubj(provides-2, It-1)
root(ROOT-0, provides-2)
det(hypotheses-5, no-3)
amod(hypotheses-5, testable-4)
dobj(provides-2, hypotheses-5)
det(claim-9, the-7)
amod(claim-9, negative-8)
prep_beyond(provides-2, claim-9)
complm(explain-15, that-10)
nsubj(explain-15, science-12)
aux(explain-15, can-13)
neg(explain-15, not-14)
ccomp(provides-2, explain-15)
dobj(explain-15, it-16)

(ROOT
  (S
    (S
      (VP (VBG Notice)
        (SBAR (IN that)
          (S
            (NP (NNP ID))
            (VP (VBZ remains)
              (NP (JJ scientifically) (NNS vacuous)))))))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (PP (IN without)
        (NP (NN merit)))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ unable)
              (S
                (VP (TO to)
                  (VP (VB constrain)
                    (NP
                      (NP (PRP$ its) (NN designer))
                      (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ means)
                            (SBAR (IN that)
                              (S
                                (PP (IN as)
                                  (NP (DT an) (NN explanation)))
                                (NP (PRP it))
                                (VP (MD can) (RB not)
                                  (ADVP (RB even))
                                  (VP (VB compete)
                                    (PP (IN with)
                                      (NP (DT the) (`` ``)
                                        (S
                                          (NP (PRP we))
                                          (VP (VBP do) (RB n't)
                                            (VP (VB know))))
                                        ('' '') (NN category)))))))))))))))))))
    (. .)))

partmod(is-9, Notice-1)
complm(vacuous-6, that-2)
nsubj(vacuous-6, ID-3)
cop(vacuous-6, remains-4)
amod(vacuous-6, scientifically-5)
ccomp(Notice-1, vacuous-6)
nsubj(is-9, that-8)
root(ROOT-0, is-9)
prep_without(is-9, merit-11)
mark(unable-16, because-13)
nsubj(unable-16, it-14)
cop(unable-16, is-15)
advcl(is-9, unable-16)
aux(constrain-18, to-17)
xcomp(unable-16, constrain-18)
poss(designer-20, its-19)
dobj(constrain-18, designer-20)
nsubj(means-25, designer-20)
dep(designer-20, s-22)
rcmod(designer-20, means-25)
complm(compete-34, that-26)
det(explanation-29, an-28)
prep_as(compete-34, explanation-29)
nsubj(compete-34, it-30)
aux(compete-34, can-31)
neg(compete-34, not-32)
advmod(compete-34, even-33)
ccomp(means-25, compete-34)
det(category-43, the-36)
nsubj(know-41, we-38)
aux(know-41, do-39)
neg(know-41, n't-40)
dep(category-43, know-41)
prep_with(compete-34, category-43)

