(ROOT
  (S
    (NP
      (NP (DT The) (NN complexity))
      (PP (IN of)
        (NP
          (NP (NNS dunes))
          (PP (IN in)
            (NP (DT the) (NNP Sahara) (NN desert))))))
    (VP (MD would)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN coded)
                (PP (IN in)
                  (NP
                    (NP (JJR more))
                    (NP
                      (NP (DT the) (CD 500) (NNS bits))
                      (PP (IN of)
                        (NP (NN information))))))
                (PP (IN by)
                  (NP (DT any) (NN standard)))
                (: ...)
                (SQ (VBZ is)
                  (NP (PRP it))
                  (VP (VBN designed)
                    (PP (IN by)
                      (NP (DT an) (NN intelligence)))))))))))
    (. ?)))

det(complexity-2, The-1)
nsubj(have-10, complexity-2)
xsubj(coded-13, complexity-2)
prep_of(complexity-2, dunes-4)
det(desert-8, the-6)
nn(desert-8, Sahara-7)
prep_in(dunes-4, desert-8)
aux(have-10, would-9)
root(ROOT-0, have-10)
aux(coded-13, to-11)
auxpass(coded-13, be-12)
xcomp(have-10, coded-13)
prep_in(coded-13, more-15)
det(bits-18, the-16)
num(bits-18, 500-17)
dep(more-15, bits-18)
prep_of(bits-18, information-20)
det(standard-23, any-22)
agent(coded-13, standard-23)
auxpass(designed-27, is-25)
nsubjpass(designed-27, it-26)
parataxis(coded-13, designed-27)
det(intelligence-30, an-29)
agent(designed-27, intelligence-30)

