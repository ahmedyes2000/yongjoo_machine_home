(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ is)
      (VP (VBG being)
        (VP (VBN applied)
          (ADVP (RB only))
          (PP (TO to)
            (NP
              (NP (NNS objects))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP have)
                    (NP
                      (NP (JJ high) (NNS levels))
                      (PP (IN of)
                        (NP (NNP CSI))))))))))))
    (. .)))

advmod(applied-6, First-1)
nsubjpass(applied-6, ID-3)
aux(applied-6, is-4)
auxpass(applied-6, being-5)
root(ROOT-0, applied-6)
advmod(applied-6, only-7)
prep_to(applied-6, objects-9)
nsubj(have-11, objects-9)
rcmod(objects-9, have-11)
amod(levels-13, high-12)
dobj(have-11, levels-13)
prep_of(levels-13, CSI-15)

(ROOT
  (S
    (S
      (SBAR (IN Since)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT no) (NNS data))
              (PP (VBG concerning)
                (NP
                  (NP (DT the) (NN amount))
                  (PP (IN of)
                    (NP (NNP CSI)))))))))
      (NP (DT the) (NN designer))
      (VP (VBZ has)))
    (, ,) (RB then)
    (S
      (NP (NNP ID))
      (VP (VBZ is) (RB not)
        (ADVP (RB currently))
        (ADJP (JJ applicable))
        (PP (TO to)
          (NP (DT the) (NN designer)))))
    (. .)))

mark(is-3, Since-1)
expl(is-3, there-2)
advcl(has-13, is-3)
det(data-5, no-4)
nsubj(is-3, data-5)
det(amount-8, the-7)
prep_concerning(data-5, amount-8)
prep_of(amount-8, CSI-10)
det(designer-12, the-11)
nsubj(has-13, designer-12)
root(ROOT-0, has-13)
advmod(has-13, then-15)
nsubj(applicable-20, ID-16)
cop(applicable-20, is-17)
neg(applicable-20, not-18)
advmod(applicable-20, currently-19)
ccomp(has-13, applicable-20)
det(designer-23, the-22)
prep_to(applicable-20, designer-23)

(ROOT
  (S
    (S
      (ADVP (RB Perhaps))
      (NP (DT the) (NN designer))
      (VP (MD must)
        (VP (VB have)
          (NP (DT a) (NN designer)))))
    (, ,)
    (CC and)
    (FRAG
      (ADVP (RB perhaps))
      (RB not))
    (. .)))

advmod(have-5, Perhaps-1)
det(designer-3, the-2)
nsubj(have-5, designer-3)
aux(have-5, must-4)
root(ROOT-0, have-5)
det(designer-7, a-6)
dobj(have-5, designer-7)
dep(not-11, perhaps-10)
conj_and(have-5, not-11)

(ROOT
  (S
    (NP (NNP Science))
    (VP (MD can) (RB not)
      (VP (VB make)
        (NP (DT this) (NN determination))
        (PP (IN at)
          (NP (DT this) (NN time)))))
    (. .)))

nsubj(make-4, Science-1)
aux(make-4, can-2)
neg(make-4, not-3)
root(ROOT-0, make-4)
det(determination-6, this-5)
dobj(make-4, determination-6)
det(time-9, this-8)
prep_at(make-4, time-9)

(ROOT
  (S
    (ADVP (LS Second))
    (, ,)
    (SBAR
      (WHADVP (WRB whenever))
      (S
        (NP (NNS scientists))
        (VP (VBP hypothesize)
          (SBAR (IN that)
            (S
              (NP (NNP A))
              (VP (VBZ causes)
                (NP (NNP B))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD will)
      (ADVP (RB inevitably))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB search)
              (PP (IN for)
                (NP
                  (NP (DT the) (NN cause))
                  (PP (IN of)
                    (NP (NNP A.)))))
              (SBAR
                (SINV (MD Should)
                  (NP (DT this))
                  (VP (VB stop)
                    (NP (PRP them))
                    (PP (IN from)
                      (S
                        (VP (VBG hypothesizing)
                          (NP
                            (NP (DT A)
                              (ADJP (RB as) (DT a))
                              (NN cause))
                            (PP (IN of)
                              (NP (NNP B)))))))))))))))
    (. ?)))

advmod(have-14, Second-1)
advmod(hypothesize-5, whenever-3)
nsubj(hypothesize-5, scientists-4)
advcl(have-14, hypothesize-5)
complm(causes-8, that-6)
nsubj(causes-8, A-7)
ccomp(hypothesize-5, causes-8)
dobj(causes-8, B-9)
nsubj(have-14, they-11)
xsubj(search-16, they-11)
aux(have-14, will-12)
advmod(have-14, inevitably-13)
root(ROOT-0, have-14)
aux(search-16, to-15)
xcomp(have-14, search-16)
det(cause-19, the-18)
prep_for(search-16, cause-19)
prep_of(cause-19, A.-21)
aux(stop-24, Should-22)
nsubj(stop-24, this-23)
advcl(search-16, stop-24)
dobj(stop-24, them-25)
prepc_from(stop-24, hypothesizing-27)
det(cause-31, A-28)
advmod(a-30, as-29)
amod(cause-31, a-30)
dobj(hypothesizing-27, cause-31)
prep_of(cause-31, B-33)

(ROOT
  (S
    (NP (NNP Science))
    (, ,)
    (PP (IN like)
      (NP (NN evolution)))
    (, ,)
    (VP (VBZ occurs)
      (NP
        (NP (CD one) (NN step))
        (PP (IN at)
          (NP (DT a) (NN time)))))
    (. .)))

nsubj(occurs-6, Science-1)
prep_like(occurs-6, evolution-4)
root(ROOT-0, occurs-6)
num(step-8, one-7)
dobj(occurs-6, step-8)
det(time-11, a-10)
prep_at(step-8, time-11)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (PRP we))
        (VP (VBP test)
          (SBAR
            (S
              (NP
                (NP (NNP ID))
                (, ,)
                (SBAR (IN if)
                  (S
                    (NP (PRP we))
                    (VP (VBP find)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP
                            (VP (VBZ leads)
                              (PP (TO to)
                                (NP (JJ successful) (NNS predictions))))
                            (CC and)
                            (VP
                              (ADVP
                                (ADVP (RB never))
                                (PRN (-LRB- -LRB-)
                                  (CC or)
                                  (FRAG
                                    (ADVP (RB hardly))
                                    (ADVP (RB ever)))
                                  (-RRB- -RRB-)))
                              (VBZ leads)
                              (PP (TO to)
                                (NP (VBN failed) (NNS predictions))))))))))
                (, ,))
              (ADVP
                (ADVP (RB then))
                (CC and)
                (ADVP (RB only) (RB then)))
              (VP (MD should)))))))
    (NP (PRP we))
    (VP (VBP worry)
      (PP (IN about)
        (NP
          (NP (DT the) (NN cause))
          (PP (IN of)
            (NP (DT the) (NN designer))))))
    (. .)))

mark(test-3, After-1)
nsubj(test-3, we-2)
advcl(worry-33, test-3)
nsubj(should-31, ID-4)
mark(find-8, if-6)
nsubj(find-8, we-7)
dep(ID-4, find-8)
complm(leads-11, that-9)
nsubj(leads-11, it-10)
nsubj(leads-22, it-10)
ccomp(find-8, leads-11)
amod(predictions-14, successful-13)
prep_to(leads-11, predictions-14)
advmod(leads-22, never-16)
dep(never-16, or-18)
dep(or-18, hardly-19)
dep(hardly-19, ever-20)
ccomp(find-8, leads-22)
conj_and(leads-11, leads-22)
amod(predictions-25, failed-24)
prep_to(leads-22, predictions-25)
advmod(should-31, then-27)
advmod(then-30, only-29)
conj_and(then-27, then-30)
advmod(should-31, then-30)
ccomp(test-3, should-31)
nsubj(worry-33, we-32)
root(ROOT-0, worry-33)
det(cause-36, the-35)
prep_about(worry-33, cause-36)
det(designer-39, the-38)
prep_of(cause-36, designer-39)

(ROOT
  (S
    (NP (NN Reasoning))
    (ADVP (RB otherwise))
    (VP (VBZ puts)
      (NP (DT an) (NN end))
      (PP (TO to)
        (NP (JJ scientific) (NN inquiry))))
    (. .)))

nsubj(puts-3, Reasoning-1)
advmod(puts-3, otherwise-2)
root(ROOT-0, puts-3)
det(end-5, an-4)
dobj(puts-3, end-5)
amod(inquiry-8, scientific-7)
prep_to(puts-3, inquiry-8)

(ROOT
  (S
    (NP (DT The) (NNP Ayn) (NNP Rand) (NNP Institute))
    (VP (VBZ is)
      (NP (JJ anti) (NN science)))
    (. .)))

det(Institute-4, The-1)
nn(Institute-4, Ayn-2)
nn(Institute-4, Rand-3)
nsubj(science-7, Institute-4)
cop(science-7, is-5)
amod(science-7, anti-6)
root(ROOT-0, science-7)

