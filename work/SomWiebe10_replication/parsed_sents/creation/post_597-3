(ROOT
  (S
    (SBAR (IN If)
      (CC and)
      (WHADVP (WRB when))
      (S
        (NP (DT the) (NNS arguments))
        (VP (VBP are)
          (VP (VBN answered) (, ,)
            (PP (JJ such) (IN as)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (NNP DNA))
                  (VP (VBD evolved)))))))))
    (, ,)
    (NP
      (NP (DT the) (NN flagellum))
      (, ,)
      (X (NN etc.)))
    (, ,)
    (ADVP (RB then))
    (NP (DT the) (NNP ID) (NN argument))
    (VP (VBZ becomes)
      (S
        (ADJP (JJR weaker)
          (CC and)
          (JJR weaker)))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (MD should)))))
    (. .)))

mark(answered-7, If-1)
advmod(answered-7, when-3)
conj_and(answered-7, when-3)
advcl(becomes-24, when-3)
det(arguments-5, the-4)
nsubjpass(answered-7, arguments-5)
auxpass(answered-7, are-6)
advcl(becomes-24, answered-7)
advmod(evolved-13, how-11)
nsubj(evolved-13, DNA-12)
prepc_such_as(answered-7, evolved-13)
det(flagellum-16, the-15)
nsubj(becomes-24, flagellum-16)
dep(flagellum-16, etc.-18)
advmod(becomes-24, then-20)
det(argument-23, the-21)
nn(argument-23, ID-22)
nsubj(becomes-24, argument-23)
root(ROOT-0, becomes-24)
acomp(becomes-24, weaker-25)
acomp(becomes-24, weaker-27)
conj_and(weaker-25, weaker-27)
mark(should-31, as-29)
nsubj(should-31, it-30)
advcl(becomes-24, should-31)

