(ROOT
  (S (`` ``)
    (VP (VB Riiiight))
    (. .)))


(ROOT
  (S
    (ADVP (RB Well))
    (NP (`` ``) (JJ specified) (NN complexity) ('' ''))
    (VP (VBZ is)
      (NP (DT a) (JJ nonsense) (NN phrase)
        (S
          (VP (TO to)
            (VP (VB confuse)
              (NP (DT the) (NNS rubes)))))))
    (. .)))

advmod(phrase-9, Well-1)
amod(complexity-4, specified-3)
nsubj(phrase-9, complexity-4)
cop(phrase-9, is-6)
det(phrase-9, a-7)
amod(phrase-9, nonsense-8)
root(ROOT-0, phrase-9)
aux(confuse-11, to-10)
infmod(phrase-9, confuse-11)
det(rubes-13, the-12)
dobj(confuse-11, rubes-13)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Nope))
    (. .)))


(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (NP (NN reality)))
    (. .)))

nsubj(reality-3, Science-1)
cop(reality-3, is-2)
root(ROOT-0, reality-3)

(ROOT
  (S
    (NP (NN Reality))
    (VP (VBZ is)
      (NP (NN science)))
    (. .)))

nsubj(science-3, Reality-1)
cop(science-3, is-2)
root(ROOT-0, science-3)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN science))
        (VP (MD can)
          (VP (VB explain)
            (NP (NN reality))
            (PP (IN without)
              (S
                (VP (VBG resorting)
                  (PP (TO to)
                    (NP
                      (NP (DT a) (NN miracle))
                      (CC or)
                      (NP (DT the) (NN supernatural)))))))))))
    (, ,)
    (NP (RB then) (NN science))
    (VP (VBZ is)
      (ADJP (JJ satisfactory)))
    (. .)))

mark(explain-4, If-1)
nsubj(explain-4, science-2)
aux(explain-4, can-3)
advcl(satisfactory-18, explain-4)
dobj(explain-4, reality-5)
prepc_without(explain-4, resorting-7)
det(miracle-10, a-9)
prep_to(resorting-7, miracle-10)
det(supernatural-13, the-12)
prep_to(resorting-7, supernatural-13)
conj_or(miracle-10, supernatural-13)
advmod(science-16, then-15)
nsubj(satisfactory-18, science-16)
cop(satisfactory-18, is-17)
root(ROOT-0, satisfactory-18)

(ROOT
  (S ('' '')
    (NP (RB So) (NNP ID))
    (VP (VBZ is)
      (NP (NN science)))
    (. .)))

advmod(ID-3, So-2)
nsubj(science-5, ID-3)
cop(science-5, is-4)
root(ROOT-0, science-5)

(ROOT
  (FRAG
    (ADJP (JJ Good))
    (S
      (VP (TO to)
        (VP (VB know))))
    (. .)))

root(ROOT-0, Good-1)
aux(know-3, to-2)
dep(Good-1, know-3)

(ROOT
  (S ('' '')
    (S (CC But)
      (NP
        (ADJP (IN if))
        (NP (DT the) (`` ``) (NN supernatural) ('' '')))
      (VP (VBZ is) (`` ``)
        (NP (JJ outside) (NN science))
        ('' '')))
    (, ,) (RB then)
    (S
      (NP (PRP$ your) (JJ only) (NN chance))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB show)
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBP are)
                    (NP
                      (NP (DT some)
                        (ADJP (JJ observed))
                        (NNS events))
                      (PRN (-LRB- -LRB-)
                        (NP (NNS miracles))
                        (-RRB- -RRB-))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (MD can) (RB not)
                            (VP (VB be)
                              (VP (VBN explained)
                                (PP (IN by)
                                  (NP (NN science)))))))))))))))))
    (. .)))

cc(science-11, But-2)
amod(supernatural-6, if-3)
det(supernatural-6, the-4)
nsubj(science-11, supernatural-6)
cop(science-11, is-8)
amod(science-11, outside-10)
root(ROOT-0, science-11)
advmod(science-11, then-14)
poss(chance-17, your-15)
amod(chance-17, only-16)
nsubj(is-18, chance-17)
xsubj(show-20, chance-17)
ccomp(science-11, is-18)
aux(show-20, to-19)
xcomp(is-18, show-20)
complm(are-23, that-21)
expl(are-23, there-22)
ccomp(show-20, are-23)
det(events-26, some-24)
amod(events-26, observed-25)
nsubj(are-23, events-26)
nsubjpass(explained-34, events-26)
appos(events-26, miracles-28)
aux(explained-34, can-31)
neg(explained-34, not-32)
auxpass(explained-34, be-33)
rcmod(events-26, explained-34)
agent(explained-34, science-36)

(ROOT
  (S ('' '')
    (NP (WP What))
    (VP (VBZ does)
      (SBAR
        (S
          (NP (DT the) (`` ``) (NN supernatural) ('' ''))
          (VP (VBP have)
            (S
              (VP (TO to)
                (VP (VB do)
                  (PP (IN with)
                    (NP (DT this))))))))))
    (. ?)))

nsubj(does-3, What-2)
root(ROOT-0, does-3)
det(supernatural-6, the-4)
nsubj(have-8, supernatural-6)
xsubj(do-10, supernatural-6)
ccomp(does-3, have-8)
aux(do-10, to-9)
xcomp(have-8, do-10)
prep_with(do-10, this-12)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (MD can)
                (VP (VB find)
                  (S
                    (S
                      (NP (NN something) (NN evolution))
                      (VP (MD can) (RB not)
                        (VP (VB produce))))
                    (, ,)
                    (CC and)
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (ADJP (JJ characteristic)
                          (PP (IN of)
                            (NP (DT a) (JJ designed) (NN system)))))))))))
          (ADVP (RB then))
          (NP (NNP ID) (NNS gains))
          (VP (VBP merit)))))
    (. .)))

cc(agree-3, And-1)
nsubj(agree-3, I-2)
root(ROOT-0, agree-3)
complm(merit-26, that-4)
mark(find-8, if-5)
nsubj(find-8, you-6)
aux(find-8, can-7)
advcl(merit-26, find-8)
nn(evolution-10, something-9)
nsubj(produce-13, evolution-10)
aux(produce-13, can-11)
neg(produce-13, not-12)
dep(find-8, produce-13)
nsubj(characteristic-18, it-16)
cop(characteristic-18, is-17)
dep(find-8, characteristic-18)
conj_and(produce-13, characteristic-18)
det(system-22, a-20)
amod(system-22, designed-21)
prep_of(characteristic-18, system-22)
advmod(merit-26, then-23)
nn(gains-25, ID-24)
nsubj(merit-26, gains-25)
ccomp(agree-3, merit-26)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN argument))
        (PP (IN from)
          (NP (NN ignorance)))))
    (. .)))

nsubj(argument-5, This-2)
cop(argument-5, is-3)
det(argument-5, an-4)
root(ROOT-0, argument-5)
prep_from(argument-5, ignorance-7)

(ROOT
  (SQ
    (VP (VB '')
      (SBAR
        (WHADVP (WRB How))
        (FRAG
          (ADVP (RB so)))))
    (. ?)))

advmod(so-3, How-2)
root(ROOT-0, so-3)

(ROOT
  (SBAR (IN If)
    (S
      (VP
        (NP
          (NP (NN science))
          (SBAR
            (S
              (VP (MD can) (RB not)))))
        (PRN (-LRB- -LRB-)
          (FRAG
            (ADVP (RB yet))
            (. ?))
          (-RRB- -RRB-))))))

mark(science-2, If-1)
root(ROOT-0, science-2)
rcmod(science-2, can-3)
neg(can-3, not-4)
dep(science-2, yet-6)

(ROOT
  (S
    (S
      (VP (VB explain)
        (NP (DT this))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP (DT a) (NN miracle))
          (VP (VBN caused)
            (PP (IN by)
              (NP (DT a) (JJ supernatural) (NN entity)))))))
    (. .)))

ccomp(miracle-9, explain-1)
dobj(explain-1, this-2)
advmod(miracle-9, then-4)
nsubj(miracle-9, it-5)
aux(miracle-9, must-6)
cop(miracle-9, be-7)
det(miracle-9, a-8)
root(ROOT-0, miracle-9)
partmod(miracle-9, caused-10)
det(entity-14, a-12)
amod(entity-14, supernatural-13)
agent(caused-10, entity-14)

(ROOT
  (S ('' '')
    (S
      (INTJ (UH No))
      (NP (PRP it))
      (VP (VBZ is) (RB n't)))
    (: :)
    (S
      (NP (NN http:\/\/www.ideacenter.org\/contentmgr\/showdetails.php) (NNP \/) (JJ id\/1159) (NN http:\/\/www.ideacenter.org\/contentmgr\/showdetails.php) (NNP \/) (NNP id\/1167))
      (ADJP (JJ http:\/\/www.evolutionnews.org\/2005\/10\/dover_trial_miller_argues_from_ignorance.html))
      ('' ''))
    (SBAR (IN If)
      (S
        (NP (NN science))
        (VP (MD can)
          (VP (VB explain)
            (NP (PRP it))))))
    (CC and)
    (S
      (S
        (NP (NNP ID))
        (VP (MD can)
          (ADVP (RB also))
          (VP (VB explain)
            (NP (PRP it)))))
      (, ,) (RB then)
      (S
        (NP (NN science))
        (VP (VBZ is)
          (VP (VBN preferred)
            (SBAR (IN because)
              (S
                (NP (NNP ID))
                (VP (VBZ introduces)
                  (NP (DT an) (JJ unnecessary) (NN element)))))))))
    (. .)))

dep(is-4, No-2)
nsubj(is-4, it-3)
nsubj(http:\/\/www.evolutionnews.org\/2005\/10\/dover_trial_miller_argues_from_ignorance.html-13, it-3)
root(ROOT-0, is-4)
neg(is-4, n't-5)
nn(id\/1167-12, http:\/\/www.ideacenter.org\/contentmgr\/showdetails.php-7)
nn(id\/1167-12, \/-8)
amod(id\/1167-12, id\/1159-9)
nn(id\/1167-12, http:\/\/www.ideacenter.org\/contentmgr\/showdetails.php-10)
nn(id\/1167-12, \/-11)
dep(http:\/\/www.evolutionnews.org\/2005\/10\/dover_trial_miller_argues_from_ignorance.html-13, id\/1167-12)
conj_and(is-4, http:\/\/www.evolutionnews.org\/2005\/10\/dover_trial_miller_argues_from_ignorance.html-13)
parataxis(is-4, http:\/\/www.evolutionnews.org\/2005\/10\/dover_trial_miller_argues_from_ignorance.html-13)
mark(explain-18, If-15)
nsubj(explain-18, science-16)
aux(explain-18, can-17)
dep(is-4, explain-18)
dobj(explain-18, it-19)
nsubj(explain-24, ID-21)
aux(explain-24, can-22)
advmod(explain-24, also-23)
conj_and(is-4, explain-24)
dobj(explain-24, it-25)
advmod(explain-24, then-27)
nsubjpass(preferred-30, science-28)
auxpass(preferred-30, is-29)
dep(explain-24, preferred-30)
mark(introduces-33, because-31)
nsubj(introduces-33, ID-32)
advcl(preferred-30, introduces-33)
det(element-36, an-34)
amod(element-36, unnecessary-35)
dobj(introduces-33, element-36)

(ROOT
  (S (IN So)
    (NP
      (NP (DT the) (NN burden))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ is)
      (PP (IN on)
        (NP (NNP ID)))
      (S
        (VP (TO to)
          (VP (VB show)
            (SBAR (IN that)
              (S
                (NP (DT the) (JJ extra) (NN element))
                (VP (VBZ is)
                  (ADJP (JJ necessary)))))))))
    (. .)))

dep(is-6, So-1)
det(burden-3, the-2)
nsubj(is-6, burden-3)
xsubj(show-10, burden-3)
prep_of(burden-3, proof-5)
root(ROOT-0, is-6)
prep_on(is-6, ID-8)
aux(show-10, to-9)
xcomp(is-6, show-10)
complm(necessary-16, that-11)
det(element-14, the-12)
amod(element-14, extra-13)
nsubj(necessary-16, element-14)
cop(necessary-16, is-15)
ccomp(show-10, necessary-16)

(ROOT
  (NP ('' '')
    (CC And)
    (NP
      (NP
        (ADJP (IN if))
        (NN science))
      (SBAR
        (S
          (VP (MD ca) (RB n't)
            (VP (VB explain)
              (NP (PRP it)))))))
    (. ?)))

cc(science-4, And-2)
amod(science-4, if-3)
root(ROOT-0, science-4)
aux(explain-7, ca-5)
neg(explain-7, n't-6)
rcmod(science-4, explain-7)
dobj(explain-7, it-8)

(ROOT
  (S (`` ``)
    (CC And)
    (ADVP (RB apparently))
    (NP (`` ``) (NN tell-tale) (NNS signs) ('' ''))
    (VP (VBP are)
      (ADVP (RB also))
      (PP (IN in)
        (NP
          (NP (DT the) (NN eye))
          (PP (IN of)
            (NP (DT the) (NN beholder))))))
    (. .)))

cc(are-8, And-2)
advmod(are-8, apparently-3)
nn(signs-6, tell-tale-5)
nsubj(are-8, signs-6)
root(ROOT-0, are-8)
advmod(are-8, also-9)
det(eye-12, the-11)
prep_in(are-8, eye-12)
det(beholder-15, the-14)
prep_of(eye-12, beholder-15)

(ROOT
  (S
    (NP (NNP ''))
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (ADVP (RB so)))))
    (. .)))

mark(say-4, If-2)
nsubj(say-4, you-3)
root(ROOT-0, say-4)
advmod(say-4, so-5)

(ROOT
  (S
    (NP (NNP Synergy))
    (VP (VBZ sounds)
      (PP (IN like)
        (NP (DT a) (JJ pretty) (JJ universal) (NN sign)))
      (PP (TO to)
        (NP (PRP me))))
    (. .) ('' '')))

nsubj(sounds-2, Synergy-1)
root(ROOT-0, sounds-2)
det(sign-7, a-4)
amod(sign-7, pretty-5)
amod(sign-7, universal-6)
prep_like(sounds-2, sign-7)
prep_to(sounds-2, me-9)

(ROOT
  (X
    (ADVP (RB So))
    (NP (WP what))
    (. ?)))

dep(what-2, So-1)
root(ROOT-0, what-2)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB simply))
      (VP (VBN known)
        (NP (NN science))))
    (. .)))

nsubjpass(known-4, This-1)
auxpass(known-4, is-2)
advmod(known-4, simply-3)
root(ROOT-0, known-4)
dobj(known-4, science-5)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (`` ``) (NN tell-tale) (NN sign) ('' ''))
        (PP (IN of)
          (NP (DT an) (`` ``) (JJ intelligent) (NN agent) ('' '')))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(sign-6, no-3)
nn(sign-6, tell-tale-5)
nsubj(is-2, sign-6)
det(agent-12, an-9)
amod(agent-12, intelligent-11)
prep_of(sign-6, agent-12)

(ROOT
  (FRAG (RB Not)
    (PP (IN in)
      (NP
        (NP (DT the) (NN eye))
        (PP (IN of)
          (NP
            (NP (DT this) (NN beholder))
            (ADVP (RB anyway))))))
    (. .)))

root(ROOT-0, Not-1)
dep(Not-1, in-2)
det(eye-4, the-3)
pobj(in-2, eye-4)
det(beholder-7, this-6)
prep_of(eye-4, beholder-7)
advmod(beholder-7, anyway-8)

(ROOT
  (S ('' '')
    (PP (IN If)
      (S
        (VP (VBG evolution))))
    (VP (MD can) (RB not)
      (VP (VB produce)
        (NP
          (NP (PDT such) (DT a) (NN mechanism))
          (, ,)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBP are)
                (S
                  (NP (PRP we))
                  (VP (TO to)
                    (VP (VB conclude))))))))))
    (. ?)))

prepc_if(produce-6, evolution-3)
aux(produce-6, can-4)
neg(produce-6, not-5)
root(ROOT-0, produce-6)
predet(mechanism-9, such-7)
det(mechanism-9, a-8)
dobj(produce-6, mechanism-9)
nsubj(are-12, mechanism-9)
rcmod(mechanism-9, are-12)
nsubj(conclude-15, we-13)
aux(conclude-15, to-14)
xcomp(are-12, conclude-15)

