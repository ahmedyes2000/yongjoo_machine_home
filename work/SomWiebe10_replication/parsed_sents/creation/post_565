(ROOT
  (S (`` ``)
    (ADVP (RB So))
    (: ...)
    (S
      (NP (PRP you))
      (VP (VBP 're)
        (VP (VBG saying)
          (NP
            (NP (NNP Darwin) (POS 's))
            (NN book) ('' ''))
          (PP (IN On)
            (NP
              (NP (DT the) (NNPS Origins))
              (PP (IN of)
                (NP
                  (NP (NN Man))
                  ('' '')
                  (SBAR
                    (S
                      (VP
                        (VP
                          (ADVP (RB actually))
                          (VBZ has)
                          (NP (NN nothing)
                            (S
                              (VP (TO to)
                                (VP (VB do)
                                  (PP (IN with)))))))
                        (: ...)
                        (NP
                          (NP (DT the) (NNS origins))
                          (PP (IN of)
                            (NP (NN man))))))))))))))
    (. ...)))

advmod(saying-6, So-2)
nsubj(saying-6, you-4)
aux(saying-6, 're-5)
root(ROOT-0, saying-6)
poss(book-9, Darwin-7)
dobj(saying-6, book-9)
det(Origins-13, the-12)
prep_on(saying-6, Origins-13)
prep_of(Origins-13, Man-15)
advmod(has-18, actually-17)
rcmod(Man-15, has-18)
dobj(has-18, nothing-19)
aux(do-21, to-20)
infmod(nothing-19, do-21)
prep(do-21, with-22)
det(origins-25, the-24)
dobj(has-18, origins-25)
prep_of(origins-25, man-27)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (NP (DT a) (JJ sharp) (NN one)))
    (. .)))

nsubj(one-5, You-1)
cop(one-5, 're-2)
det(one-5, a-3)
amod(one-5, sharp-4)
root(ROOT-0, one-5)

(ROOT
  (S
    (S
      (NP (NNP ID) (NNS proponents))
      (VP (VBP are)
        (ADJP (JJ free)
          (S
            (VP (TO to)
              (VP (VB conduct)
                (PP (IN as)
                  (NP (JJ much) (NN research)))
                (SBAR (IN as)
                  (S
                    (NP (PRP they))
                    (VP (VBP want))))))))))
    (, ,)
    (NP (PRP$ their) (NN proof))
    (VP (VBZ has)
      (ADVP (RB yet))
      (S
        (VP (TO to)
          (VP (VB reach)
            (NP (DT the) (NN level)
              (CC or)
              (NN proof))
            (SBAR
              (SBAR (IN that)
                (S
                  (NP (NNP Evolution))
                  (VP (VBZ has))))
              (: ...)
              (CC and)
              (SBAR (IN so)
                (S
                  (NP
                    (NP
                      (NP (PRP it))
                      (NP (DT the) (NN theory)))
                    (PP (IN of)
                      (NP (NNP ID))))
                  (VP (VBZ has)
                    (ADVP (RB yet))
                    (S
                      (VP (TO to)
                        (VP (VB reach)
                          (NP (JJ popular) (NN acceptance)))))))))))))
    (. .)))

nn(proponents-2, ID-1)
nsubj(free-4, proponents-2)
cop(free-4, are-3)
ccomp(has-16, free-4)
aux(conduct-6, to-5)
xcomp(free-4, conduct-6)
amod(research-9, much-8)
prep_as(conduct-6, research-9)
mark(want-12, as-10)
nsubj(want-12, they-11)
advcl(conduct-6, want-12)
poss(proof-15, their-14)
nsubj(has-16, proof-15)
xsubj(reach-19, proof-15)
root(ROOT-0, has-16)
advmod(has-16, yet-17)
aux(reach-19, to-18)
xcomp(has-16, reach-19)
det(level-21, the-20)
dobj(reach-19, level-21)
dobj(reach-19, proof-23)
conj_or(level-21, proof-23)
complm(has-26, that-24)
nsubj(has-26, Evolution-25)
ccomp(reach-19, has-26)
mark(has-35, so-29)
nsubj(has-35, it-30)
xsubj(reach-38, it-30)
det(theory-32, the-31)
dep(it-30, theory-32)
prep_of(it-30, ID-34)
ccomp(reach-19, has-35)
conj_and(has-26, has-35)
advmod(has-35, yet-36)
aux(reach-38, to-37)
xcomp(has-35, reach-38)
amod(acceptance-40, popular-39)
dobj(reach-38, acceptance-40)

(ROOT
  (SBARQ (CC And)
    (SQ (VBZ does) (RB n't)
      (NP (NNP ID))
      (VP (VB have)
        (NP
          (NP
            (NP (PRP it) (POS 's))
            (JJ own) (NN host))
          (PP (IN of)
            (NP (NNS holes))))))
    (. ?)))

cc(have-5, And-1)
aux(have-5, does-2)
neg(have-5, n't-3)
nsubj(have-5, ID-4)
root(ROOT-0, have-5)
poss(host-9, it-6)
amod(host-9, own-8)
dobj(have-5, host-9)
prep_of(host-9, holes-11)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN predictions))
    (SQ (MD can)
      (VP (VB be)
        (VP (VBN made)
          (S
            (VP (VBG using)
              (NP
                (NP (DT the) (NN theory))
                (PP (IN of)
                  (NP (NNP ID)))))))))
    (. ?)))

det(predictions-2, What-1)
nsubjpass(made-5, predictions-2)
aux(made-5, can-3)
auxpass(made-5, be-4)
root(ROOT-0, made-5)
xcomp(made-5, using-6)
det(theory-8, the-7)
dobj(using-6, theory-8)
prep_of(theory-8, ID-10)

(ROOT
  (SQ (MD Can)
    (NP
      (NP (DT the) (NNS designers))
      (NP (JJ next) (NNS actions)))
    (VP (VB be)
      (VP (VBN determined)))
    (. ?)))

aux(determined-7, Can-1)
det(designers-3, the-2)
nsubjpass(determined-7, designers-3)
amod(actions-5, next-4)
dep(designers-3, actions-5)
auxpass(determined-7, be-6)
root(ROOT-0, determined-7)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB How))
    (SQ (VBZ does)
      (NP
        (NP (DT the) (NN nature))
        (PP (IN of)
          (NP (NN time))))
      (VP (VB have)
        (NP (NN anything))
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NNP ID))))))))
    (. ?)))

advmod(have-8, How-2)
aux(have-8, does-3)
det(nature-5, the-4)
nsubj(have-8, nature-5)
prep_of(nature-5, time-7)
root(ROOT-0, have-8)
dobj(have-8, anything-9)
aux(do-11, to-10)
xcomp(have-8, do-11)
prep_with(do-11, ID-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN time))
        (VP (VBZ is) (RB n't)
          (ADJP (JJ linear)))))
    (, ,)
    (NP
      (NP (RB then) (DT the) (NN concept))
      (PP (IN of)
        (NP (DT the) (`` ``) (NN beginning) ('' ''))))
    (VP (VBZ does) (RB n't)
      (VP (VB bear)
        (NP (JJ much) (NN significance))
        (, ,)
        (SBAR (IN because)
          (S
            (ADVP (RB then))
            (NP (EX there))
            (VP (VBZ 's)
              (NP (DT a) (NN possibility))
              (SBAR (IN that)
                (S
                  (NP (NN life))
                  (VP (VBZ has)
                    (ADVP (RB always))
                    (VP (VBN existed)
                      (ADVP (RB somewhere))
                      (PP (IN in)
                        (NP (DT the) (NN universe))))))))))))
    (. .)))

mark(linear-5, If-1)
nsubj(linear-5, time-2)
cop(linear-5, is-3)
neg(linear-5, n't-4)
advcl(bear-17, linear-5)
advmod(concept-9, then-7)
det(concept-9, the-8)
nsubj(bear-17, concept-9)
det(beginning-13, the-11)
prep_of(concept-9, beginning-13)
aux(bear-17, does-15)
neg(bear-17, n't-16)
root(ROOT-0, bear-17)
amod(significance-19, much-18)
dobj(bear-17, significance-19)
mark('s-24, because-21)
advmod('s-24, then-22)
expl('s-24, there-23)
advcl(bear-17, 's-24)
det(possibility-26, a-25)
nsubj('s-24, possibility-26)
complm(existed-31, that-27)
nsubj(existed-31, life-28)
aux(existed-31, has-29)
advmod(existed-31, always-30)
ccomp('s-24, existed-31)
advmod(existed-31, somewhere-32)
det(universe-35, the-34)
prep_in(existed-31, universe-35)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (NNP LivvySo))
        (PP (IN if)
          (NP (NN life))))
      (VP (VBZ has)
        (ADVP (RB always))
        (VP (VBN existed)
          (PP (`` ``) (RB somewhere) ('' '') (IN in)
            (NP (DT the) (NN universe))))))
    (RB then)
    (S
      (PP (IN by)
        (NP (WP what)))
      (NP (NN mechanism))
      (VP (VBD did)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBP get)
              (PP (TO to)
                (NP (NNP Terra))))))))
    (. ?)))

nsubj(existed-7, LivvySo-2)
prep_if(LivvySo-2, life-4)
aux(existed-7, has-5)
advmod(existed-7, always-6)
root(ROOT-0, existed-7)
advmod(existed-7, somewhere-9)
det(universe-13, the-12)
prep_in(existed-7, universe-13)
advmod(existed-7, then-14)
prep_by(did-18, what-16)
nsubj(did-18, mechanism-17)
ccomp(existed-7, did-18)
nsubj(get-20, it-19)
ccomp(did-18, get-20)
prep_to(get-20, Terra-22)

(ROOT
  (SBARQ
    (WHPP (IN By)
      (WHNP (WDT what) (NN mechanism)))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB violate)
        (ADVP (RB relativity))
        (S
          (VP (TO to)
            (VP (VB move)
              (PP (IN through)
                (NP (NN time)))
              (PP (IN in)
                (NP
                  (NP (NN violation))
                  (PP (IN of)
                    (NP (NN causality))))))))))
    (. ?)))

det(mechanism-3, what-2)
prep_by(violate-6, mechanism-3)
aux(violate-6, does-4)
nsubj(violate-6, it-5)
xsubj(move-9, it-5)
root(ROOT-0, violate-6)
advmod(violate-6, relativity-7)
aux(move-9, to-8)
xcomp(violate-6, move-9)
prep_through(move-9, time-11)
prep_in(move-9, violation-13)
prep_of(violation-13, causality-15)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP understand)
        (SBAR (IN that)
          (S
            (NP (DT this))
            (VP (VBZ is)
              (NP (DT a) (NN theory)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ has)
        (NP (JJR more) (NN merit))
        (PP (IN than)
          (NP (DT the) (NN idea)))
        (SBAR (IN that)
          (S
            (NP (NN life) (RB just))
            (ADVP (RB somehow))
            (VP (VBD came)
              (PP (IN into)
                (S
                  (VP (VBG being)
                    (ADJP (IN out)
                      (PP (IN of)
                        (NP (NN nothing))))))))))))
    (. .)))

nsubj(understand-3, I-2)
root(ROOT-0, understand-3)
complm(theory-8, that-4)
nsubj(theory-8, this-5)
cop(theory-8, is-6)
det(theory-8, a-7)
ccomp(understand-3, theory-8)
nsubj(has-12, it-11)
conj_but(understand-3, has-12)
amod(merit-14, more-13)
dobj(has-12, merit-14)
det(idea-17, the-16)
prep_than(has-12, idea-17)
complm(came-22, that-18)
nsubj(came-22, life-19)
advmod(life-19, just-20)
advmod(came-22, somehow-21)
ccomp(has-12, came-22)
prep(came-22, into-23)
cop(out-25, being-24)
pcomp(into-23, out-25)
prep_of(out-25, nothing-27)

(ROOT
  (NP (NNP '') (NNP LivvyReally) (. ?)))


(ROOT
  (S
    (NP
      (NP (JJ Closed) (NN timelike) (NNS curves))
      (CC and)
      (NP
        (NP (DT the) (NN use))
        (PP (IN of)
          (NP
            (NP (NNS energies))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD transcend)
                  (NP
                    (NP (DT the) (NN output))
                    (PP (IN of)
                      (NP (DT the) (NN sun)))))))))))
    (VP (VBZ makes)
      (NP (JJR more) (NN sense))
      (ADVP (RB then))
      (NP
        (NP (DT a) (NN series))
        (PP (IN of)
          (NP (NN chemical) (NNS reactions)))))
    (. ?)))

amod(curves-3, Closed-1)
nn(curves-3, timelike-2)
nsubj(makes-16, curves-3)
det(use-6, the-5)
conj_and(curves-3, use-6)
nsubj(makes-16, use-6)
prep_of(use-6, energies-8)
nsubj(transcend-10, energies-8)
rcmod(energies-8, transcend-10)
det(output-12, the-11)
dobj(transcend-10, output-12)
det(sun-15, the-14)
prep_of(output-12, sun-15)
root(ROOT-0, makes-16)
amod(sense-18, more-17)
dobj(makes-16, sense-18)
advmod(makes-16, then-19)
det(series-21, a-20)
dobj(makes-16, series-21)
nn(reactions-24, chemical-23)
prep_of(series-21, reactions-24)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB have)
          (VP (VBD said)
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (VBP believe)
                  (NP
                    (NP (DT a) (JJ random) (NN catalyst))
                    (VP (VBN associated)
                      (NP (JJ complex) (NNS molecules))
                      (PP (IN into)
                        (NP (VBN organized) (NNS aggregates)
                          (CC and)
                          (NNS membranes))))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (ADVP (RB then))
                        (VP (VBD converged)
                          (S
                            (VP (TO to)
                              (VP (VB produce)
                                (NP (DT a) (JJ primitive) (NN cell))
                                (PP (IN from)
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (VP (VBZ prokayotes)
                                        (ADJP (JJ derive))))))))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (NN lightning) (VBG striking) (NN goo))
      (VP (VBZ captures)
        (NP (DT the) (NN idea))
        (ADVP (RB just) (RB as) (RB well))))
    (. .)))

nsubj(said-5, I-2)
aux(said-5, could-3)
aux(said-5, have-4)
root(ROOT-0, said-5)
complm(believe-8, that-6)
nsubj(believe-8, they-7)
ccomp(said-5, believe-8)
det(catalyst-11, a-9)
amod(catalyst-11, random-10)
dobj(believe-8, catalyst-11)
partmod(catalyst-11, associated-12)
amod(molecules-14, complex-13)
dobj(associated-12, molecules-14)
amod(aggregates-17, organized-16)
prep_into(associated-12, aggregates-17)
prep_into(associated-12, membranes-19)
conj_and(aggregates-17, membranes-19)
nsubj(converged-22, which-20)
advmod(converged-22, then-21)
rcmod(catalyst-11, converged-22)
aux(produce-24, to-23)
xcomp(converged-22, produce-24)
det(cell-27, a-25)
amod(cell-27, primitive-26)
dobj(produce-24, cell-27)
nsubj(prokayotes-30, which-29)
prepc_from(produce-24, prokayotes-30)
acomp(prokayotes-30, derive-31)
nn(goo-36, lightning-34)
amod(goo-36, striking-35)
nsubj(captures-37, goo-36)
conj_but(said-5, captures-37)
det(idea-39, the-38)
dobj(captures-37, idea-39)
advmod(well-42, just-40)
advmod(well-42, as-41)
mwe(well-42, as-41)
advmod(captures-37, well-42)

(ROOT
  (S
    (ADVP (RB Man))
    (, ,)
    (NP (PRP you))
    (VP (VBD did) (RB n't)
      (ADVP (RB even))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB read)
              (NP (DT the) (NN book))
              (ADVP (RB just)
                (NP (DT the) (NN title))))))))
    (. .)))

advmod(have-7, Man-1)
nsubj(have-7, you-3)
xsubj(read-9, you-3)
aux(have-7, did-4)
neg(have-7, n't-5)
advmod(have-7, even-6)
root(ROOT-0, have-7)
aux(read-9, to-8)
xcomp(have-7, read-9)
det(book-11, the-10)
dobj(read-9, book-11)
advmod(read-9, just-12)
det(title-14, the-13)
pobj(just-12, title-14)

(ROOT
  (S ('' '')
    (NP (NNP LivvyExcept))
    (VP
      (ADVP (IN that) (DT that))
      (VBZ puts)
      (PP (IN for)
        (NP (DT the) (NN idea)))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (NP
              (NP (DT a) (JJ single) (NN moment))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VB transform)
                    (NP
                      (NP (DT a)
                        (ADJP (JJ lifeless))
                        (NN puddle))
                      (PP (IN of)
                        (NP (NN goop))))
                    (PP (IN into)
                      (NP (DT the) (JJ first) (NN life)))))))))))
    (. .)))

nsubj(puts-5, LivvyExcept-2)
advmod(puts-5, that-3)
dep(that-3, that-4)
root(ROOT-0, puts-5)
det(idea-8, the-7)
prep_for(puts-5, idea-8)
complm(moment-14, that-9)
nsubj(moment-14, it-10)
cop(moment-14, was-11)
det(moment-14, a-12)
amod(moment-14, single-13)
ccomp(puts-5, moment-14)
nsubj(transform-16, moment-14)
rcmod(moment-14, transform-16)
det(puddle-19, a-17)
amod(puddle-19, lifeless-18)
dobj(transform-16, puddle-19)
prep_of(puddle-19, goop-21)
det(life-25, the-23)
amod(life-25, first-24)
prep_into(transform-16, life-25)

(ROOT
  (S
    (NP (DT A)
      (ADJP (RB much) (RBR more) (JJ accurate))
      (NN description))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT a) (NN series))
            (PP (IN of)
              (NP (NN chemical) (NNS reactions))))
          (VP (VBD took)
            (NP (NN place))
            (PP (IN in)
              (NP
                (NP (DT the) (NNS oceans))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN world))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBN led)
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN creation))
                              (PP (IN of)
                                (NP
                                  (ADJP (RB increasingly) (JJ complex))
                                  (NN chemical) (NNS structures))))))))))))))))
    (. .)))

det(description-5, A-1)
advmod(accurate-4, much-2)
advmod(accurate-4, more-3)
amod(description-5, accurate-4)
nsubj(is-6, description-5)
root(ROOT-0, is-6)
complm(took-13, that-7)
det(series-9, a-8)
nsubj(took-13, series-9)
nn(reactions-12, chemical-11)
prep_of(series-9, reactions-12)
ccomp(is-6, took-13)
dobj(took-13, place-14)
det(oceans-17, the-16)
prep_in(took-13, oceans-17)
det(world-20, the-19)
prep_of(oceans-17, world-20)
nsubj(led-22, world-20)
rcmod(world-20, led-22)
det(creation-25, the-24)
prep_to(led-22, creation-25)
advmod(complex-28, increasingly-27)
amod(structures-30, complex-28)
nn(structures-30, chemical-29)
prep_of(creation-25, structures-30)

(ROOT
  (S
    (NP (DT This))
    (VP (VBD led)
      (PP (TO to)
        (NP
          (NP
            (NP (DT the) (NN appearance))
            (PP (IN of)
              (NP
                (NP (DT the)
                  (ADJP (RB very) (JJ first))
                  (NNS forms))
                (PP (IN of)
                  (NP (NN life))))))
          (: ...)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD were)
                (ADJP (RB vastly) (JJR simpler))
                (ADVP (RB then))
                (NP
                  (NP (RB even) (DT the) (JJS most) (NN basic))
                  (PP (IN of)
                    (NP (NNS cells))))))))))
    (. .)))

nsubj(led-2, This-1)
root(ROOT-0, led-2)
det(appearance-5, the-4)
prep_to(led-2, appearance-5)
det(forms-10, the-7)
advmod(first-9, very-8)
amod(forms-10, first-9)
prep_of(appearance-5, forms-10)
prep_of(forms-10, life-12)
nsubj(simpler-17, which-14)
cop(simpler-17, were-15)
advmod(simpler-17, vastly-16)
rcmod(appearance-5, simpler-17)
advmod(simpler-17, then-18)
advmod(basic-22, even-19)
det(basic-22, the-20)
amod(basic-22, most-21)
attr(simpler-17, basic-22)
prep_of(basic-22, cells-24)

(ROOT
  (S ('' '')
    (PP (RB Instead) (IN of)
      (S
        (VP (VBG telling)
          (NP (PRP me))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (ADVP (RB already))
              (VP (VBP know)
                (SBAR (IN that)
                  (S
                    (NP (NNP ID))
                    (VP (VBZ is)
                      (ADVP (RB just))
                      (NP
                        (NP (DT a) (NN theory))
                        (SBAR
                          (WHADVP (WRB why))
                          (S
                            (VP (VBP do) (RB n't))
                            (NP (PRP you))))))))))))))
    (VP
      (ADVP (RB actually))
      (VBP make)
      (NP
        (NP (DT an) (JJ intelligible) (NN counter-argument))
        (PP (IN against)
          (NP (PRP it)))))
    (. ?)))

prepc_instead_of(make-21, telling-4)
dobj(telling-4, me-5)
dep(know-9, what-6)
dobj(theory-15, what-6)
nsubj(know-9, I-7)
advmod(know-9, already-8)
dep(telling-4, know-9)
complm(theory-15, that-10)
nsubj(theory-15, ID-11)
cop(theory-15, is-12)
advmod(theory-15, just-13)
det(theory-15, a-14)
ccomp(know-9, theory-15)
advmod(do-17, why-16)
rcmod(theory-15, do-17)
neg(do-17, n't-18)
dep(do-17, you-19)
advmod(make-21, actually-20)
root(ROOT-0, make-21)
det(counter-argument-24, an-22)
amod(counter-argument-24, intelligible-23)
dobj(make-21, counter-argument-24)
prep_against(counter-argument-24, it-26)

(ROOT
  (S
    (VP (VBG Writing) ('' '')
      (NP
        (NP (NNP Occam) (POS 's))
        (NN razor) ('' '')
        (S
          (VP (VBZ does) (RB n't)
            (VP (VB cut)
              (NP (PRP it)))))))
    (. .)))

root(ROOT-0, Writing-1)
poss(razor-5, Occam-3)
dobj(Writing-1, razor-5)
aux(cut-9, does-7)
neg(cut-9, n't-8)
dep(razor-5, cut-9)
dobj(cut-9, it-10)

(ROOT
  (S ('' '')
    (S
      (NP (NNP LivvyI))
      (VP (VBD did) (RB n't)
        (VP (VB mention)
          (NP
            (NP
              (NP (NNP Occam) (POS 's))
              (NNP Razor))
            (ADJP (RB anywhere) (JJ else)))
          (PP (IN in)
            (NP (PRP$ my) (NN post))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN title))
        (: ...)
        (PP (IN with)
          (X (SYM a)))))
    (. ?)))

nsubj(mention-5, LivvyI-2)
aux(mention-5, did-3)
neg(mention-5, n't-4)
ccomp(title-18, mention-5)
poss(Razor-8, Occam-6)
dobj(mention-5, Razor-8)
advmod(else-10, anywhere-9)
amod(Razor-8, else-10)
poss(post-13, my-12)
prep_in(mention-5, post-13)
nsubj(title-18, it-15)
cop(title-18, was-16)
det(title-18, the-17)
root(ROOT-0, title-18)
prep(title-18, with-20)
dep(with-20, a-21)

(ROOT
  (S
    (VP (VB mark)
      (PP (IN at)
        (NP (DT the) (NN end))))
    (. .)))

root(ROOT-0, mark-1)
det(end-4, the-3)
prep_at(mark-1, end-4)

(ROOT
  (NP (JJ Intelligible) (NNS counter-arguments) (: ...)))

amod(counter-arguments-2, Intelligible-1)
root(ROOT-0, counter-arguments-2)

(ROOT
  (S
    (LST (LS 1) (-RRB- -RRB-))
    (S
      (X (WP What))
      (NP (NNS predictions))
      (VP (VBZ has)
        (ADVP (RB ID))
        (VP (VBN made))))
    (CC and)
    (S
      (S
        (VP (VB have)
          (NP (PRP they))))
      (ADVP (RB so) (RB far))
      (VP (VBN proven)
        (S
          (ADJP (JJ true)))))
    (. ?)))

dep(made-7, 1-1)
dep(made-7, What-3)
nsubj(made-7, predictions-4)
aux(made-7, has-5)
advmod(made-7, ID-6)
root(ROOT-0, made-7)
csubj(proven-13, have-9)
dobj(have-9, they-10)
advmod(far-12, so-11)
advmod(proven-13, far-12)
conj_and(made-7, proven-13)
acomp(proven-13, true-14)

(ROOT
  (S
    (LST (LS 2) (-RRB- -RRB-))
    (NP (WP What))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN nature))
        (PP (IN of)
          (NP (DT the) (NN Designer)))))
    (. ?)))

dep(nature-6, 2-1)
nsubj(nature-6, What-3)
cop(nature-6, is-4)
det(nature-6, the-5)
root(ROOT-0, nature-6)
det(Designer-9, the-8)
prep_of(nature-6, Designer-9)

(ROOT
  (S
    (LST (LS 3) (-RRB- -RRB-))
    (NP (WP What))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN mechanism))
        (SBAR (IN that)
          (S
            (NP (DT the) (NN Designer))
            (VP (VBZ uses)))))
      (PP (TO to)
        (NP (NNP manipulate) (CD life4)))
      (-RRB- -RRB-)
      (SBAR
        (WHNP (WP What))
        (S
          (VP (VBP are)
            (ADJP
              (NP (DT the) (NNS intentions))
              (JJ \/))
            (PRN
              (NP
                (NP (NNS motivations))
                (PP (IN of)
                  (NP (DT the) (NNS Designer5))))
              (-RRB- -RRB-))
            (SBAR
              (WHADVP (WRB How))
              (S
                (VP (MD can)
                  (PP
                    (NP (DT the) (NN existence))
                    (IN of)
                    (NP (DT the) (NN Designer)))
                  (VP (VB be)
                    (VP (VBN tested))))))))))
    (. ?)))

dep(mechanism-6, 3-1)
nsubj(mechanism-6, What-3)
cop(mechanism-6, is-4)
det(mechanism-6, the-5)
root(ROOT-0, mechanism-6)
dobj(uses-10, mechanism-6)
complm(uses-10, that-7)
det(Designer-9, the-8)
nsubj(uses-10, Designer-9)
dep(mechanism-6, uses-10)
prep_to(mechanism-6, manipulate-12)
num(manipulate-12, life4-13)
nsubj(\/-19, What-15)
nsubjpass(tested-33, What-15)
cop(\/-19, are-16)
det(intentions-18, the-17)
npadvmod(\/-19, intentions-18)
dep(mechanism-6, \/-19)
dep(\/-19, motivations-20)
det(Designer5-23, the-22)
prep_of(motivations-20, Designer5-23)
advmod(tested-33, How-25)
aux(tested-33, can-26)
det(existence-28, the-27)
npadvmod(tested-33, existence-28)
det(Designer-31, the-30)
prep_of(tested-33, Designer-31)
auxpass(tested-33, be-32)
ccomp(\/-19, tested-33)

(ROOT
  (S
    (SBAR
      (SBAR
        (S
          (NP (CD 6))
          (-RRB- -RRB-)
          (VP
            (ADVP
              (ADVP
                (NP (CD Is) (NN ID))
                (NP
                  (NP (RB just) (DT a) (NN way))
                  (PP (IN of)
                    (NP (NNP pointing)))))
              (PP (IN at)
                (NP
                  (NP (NNS things))
                  (ADJP (RB that) (JJ have)))
                (ADVP (RB yet))))
            (TO to)
            (VP (VB have)
              (VP (VBN shown)
                (NP (DT a) (JJ clear) (JJ evolutionary) (NN path)))))))
      (CC and)
      (SBAR
        (ADVP (RB claiming))
        (IN that)
        (S
          (NP (DT that))
          (VP (VBZ is)))))
    (VP (VBP ID))
    (. ?)))

nsubj(shown-17, 6-1)
num(ID-4, Is-3)
dep(way-7, ID-4)
advmod(way-7, just-5)
det(way-7, a-6)
advmod(shown-17, way-7)
prep_of(way-7, pointing-9)
prep_at(way-7, things-11)
advmod(have-13, that-12)
amod(things-11, have-13)
advmod(way-7, yet-14)
aux(shown-17, to-15)
aux(shown-17, have-16)
csubj(ID-27, shown-17)
det(path-21, a-18)
amod(path-21, clear-19)
amod(path-21, evolutionary-20)
dobj(shown-17, path-21)
advmod(is-26, claiming-23)
dep(is-26, that-24)
nsubj(is-26, that-25)
conj_and(shown-17, is-26)
csubj(ID-27, is-26)
root(ROOT-0, ID-27)

(ROOT
  (S
    (NP (CD 7) (NNS -RRB-))
    (VP (VBZ Is)
      (ADVP (RB there))
      (NP
        (NP (DT a) (JJ demonstrative) (NN level))
        (PP (IN of) ('' '')
          (NP (NNP Design)))
        ('' '')
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ constant)
                (PP (IN across)
                  (NP
                    (ADJP (RB all) (VBN designed))
                    (NNS elements)))))))))
    (. ?)))

nsubj(level-7, 7-1)
cop(level-7, Is-3)
advmod(level-7, there-4)
det(level-7, a-5)
amod(level-7, demonstrative-6)
root(ROOT-0, level-7)
nsubj(constant-14, level-7)
prep_of(level-7, Design-10)
cop(constant-14, is-13)
rcmod(level-7, constant-14)
advmod(designed-17, all-16)
amod(elements-18, designed-17)
prep_across(constant-14, elements-18)

(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB How))
      (S
        (VP (`` ``) (VBZ bout)
          (NP (DT this)))))
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP
          (VP (VB go)
            (ADVP (RB ahead)))
          (CC and)
          (VP (NN advocate)
            (PP (IN for)
              (NP
                (NP (DT the) (NN progression))
                (PP (IN of)
                  (NP
                    (NP (NN science))
                    (PP (IN into)
                      (NP (DT the) (JJ 21st) (NN century)))))))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP (VB spout)
          (NP (JJ 14th) (NN century) (NN philosophy))
          (PP (IN as)
            (NP
              (NP (DT an) (NN excuse))
              (PP (IN for)
                (S
                  (VP (RB not) (VBG knowing)
                    (SBAR
                      (WHNP (WP what) (DT the) (NN hell))
                      (S
                        (NP (PRP you))
                        (VP (VBP 're)
                          (VP (VBG talking) (IN about)))))))))))))
    (. .)))

advmod(bout-4, How-2)
dep(go-8, bout-4)
dobj(bout-4, this-5)
nsubj(go-8, I-6)
aux(go-8, 'll-7)
root(ROOT-0, go-8)
advmod(go-8, ahead-9)
conj_and(go-8, advocate-11)
det(progression-14, the-13)
prep_for(advocate-11, progression-14)
prep_of(progression-14, science-16)
det(century-20, the-18)
amod(century-20, 21st-19)
prep_into(science-16, century-20)
nsubj(spout-24, you-22)
aux(spout-24, can-23)
conj_and(go-8, spout-24)
amod(philosophy-27, 14th-25)
nn(philosophy-27, century-26)
dobj(spout-24, philosophy-27)
det(excuse-30, an-29)
prep_as(spout-24, excuse-30)
neg(knowing-33, not-32)
prepc_for(excuse-30, knowing-33)
det(hell-36, what-34)
det(hell-36, the-35)
dobj(talking-39, hell-36)
nsubj(talking-39, you-37)
aux(talking-39, 're-38)
ccomp(knowing-33, talking-39)
dep(talking-39, about-40)

(ROOT
  (S
    (VP (VBG '')
      (NP (NNP LivvyGo))
      (ADVP (RB right) (RB ahead)))
    (: ...)))

dobj(ahead-4, LivvyGo-2)
advmod(ahead-4, right-3)
root(ROOT-0, ahead-4)

(ROOT
  (S ('' '')
    (NP (NNP LivvyAre) (PRP you))
    (VP (VBZ referring)
      (PP (IN to) ('' '')
        (NP
          (NP (DT The) (NN Decent))
          (PP (IN of)
            (NP
              (NP (NN Man))
              ('' '')
              (SBAR
                (WHNP (WDT which) (NNS details))
                (S
                  (VP (VBZ Darwins)
                    (NP (NNS studies))
                    (PP (IN on)
                      (NP
                        (NP (DT the) (NNS origins))
                        (PP (IN of)
                          (NP (DT the) (JJ human) (NN species)))))
                    (SBAR (IN as)
                      (S
                        (NP (PRP it))
                        (VP
                          (VP (VBN evolved)
                            (PP (IN from)
                              (NP (JJR earlier) (NNS Homids))))
                          (CC or)
                          (VP ('' '')
                            (NP (DT The) (JJ Origin)))))))))
              (PP (IN of)
                (NP (DT the) (NNPS Species)))))
          ('' '')
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD put)
                (PRT (RP forth))
                (NP
                  (NP (DT the) (NN idea))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (ADVP (RB currently))
                      (VP (VBD observed)
                        (SBAR
                          (S
                            (NP (NNS species))
                            (VP (VBP are)
                              (VP (VBN evolved)
                                (PP (IN from)
                                  (NP (JJR earlier) (NNS species)))
                                (PP (IN by)
                                  (NP
                                    (NP (NNS means))
                                    (PP (IN of)
                                      (NP (JJ natural) (NN selection)))))))))))))))))))
    (. ?)))

nsubj(referring-4, LivvyAre-2)
dep(LivvyAre-2, you-3)
root(ROOT-0, referring-4)
det(Decent-8, The-7)
prep_to(referring-4, Decent-8)
nsubj(put-38, Decent-8)
prep_of(Decent-8, Man-10)
det(details-13, which-12)
nsubj(Darwins-14, details-13)
rcmod(Man-10, Darwins-14)
dobj(Darwins-14, studies-15)
det(origins-18, the-17)
prep_on(Darwins-14, origins-18)
det(species-22, the-20)
amod(species-22, human-21)
prep_of(origins-18, species-22)
mark(evolved-25, as-23)
nsubj(evolved-25, it-24)
nsubj(Origin-32, it-24)
advcl(Darwins-14, evolved-25)
amod(Homids-28, earlier-27)
prep_from(evolved-25, Homids-28)
det(Origin-32, The-31)
advcl(Darwins-14, Origin-32)
conj_or(evolved-25, Origin-32)
det(Species-35, the-34)
prep_of(Man-10, Species-35)
rcmod(Decent-8, put-38)
prt(put-38, forth-39)
det(idea-41, the-40)
dobj(put-38, idea-41)
nsubj(observed-44, idea-41)
advmod(observed-44, currently-43)
rcmod(idea-41, observed-44)
nsubjpass(evolved-47, species-45)
auxpass(evolved-47, are-46)
ccomp(observed-44, evolved-47)
amod(species-50, earlier-49)
prep_from(evolved-47, species-50)
amod(selection-55, natural-54)
prep_by_means_of(evolved-47, selection-55)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP look)
      (ADVP (RB forward))
      (PP (TO to)
        (S
          (VP (VBG seeing)
            (NP
              (NP (DT a)
                (ADJP (RB fully) (JJ developed))
                (NN theory))
              (PP (IN of)
                (NP (NNP Intelligent) (NNP Design)))
              (PRN (-LRB- -LRB-)
                (SBAR (IN though)
                  (S
                    (NP (PRP I))
                    (VP (VBP 'm) (RB not)
                      (VP (VBG going)
                        (S
                          (VP (TO to)
                            (VP (VB hold)
                              (NP (PRP$ my) (NN breath)))))))))
                (-RRB- -RRB-)))))))
    (. .)))

nsubj(look-2, I-1)
root(ROOT-0, look-2)
advmod(look-2, forward-3)
prepc_to(look-2, seeing-5)
det(theory-9, a-6)
advmod(developed-8, fully-7)
amod(theory-9, developed-8)
dobj(seeing-5, theory-9)
nn(Design-12, Intelligent-11)
prep_of(theory-9, Design-12)
mark(going-18, though-14)
nsubj(going-18, I-15)
xsubj(hold-20, I-15)
aux(going-18, 'm-16)
neg(going-18, not-17)
dep(theory-9, going-18)
aux(hold-20, to-19)
xcomp(going-18, hold-20)
poss(breath-22, my-21)
dobj(hold-20, breath-22)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (NP (NNP Evolution))
      (PRN (-LRB- -LRB-)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ does) (RB not)
              (VP (VB deal)
                (PP (IN with)
                  (NP
                    (NP (DT the) (JJ absolute) (NNS beginings))
                    (PP (IN of)
                      (NP (NN life)))))))))
        (-RRB- -RRB-)))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB do)
            (NP
              (NP (DT a) (JJ good) (NN job))
              (PP (IN of)
                (S
                  (VP (VBG describing)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP we))
                        (VP
                          (VP (VBP see)
                            (PRT (RP around))
                            (NP (PRP us)))
                          (, ,)
                          (CC and)
                          (VP (MD can)
                            (VP (VB be)
                              (VP (VBN used)
                                (S
                                  (VP (TO to)
                                    (VP (VB make)
                                      (NP (JJ useful) (NNS predictions)))))))))))))))))))
    (. .)))

advmod(seems-16, However-1)
nsubj(seems-16, Evolution-3)
xsubj(do-18, Evolution-3)
nsubj(deal-8, which-5)
aux(deal-8, does-6)
neg(deal-8, not-7)
dep(Evolution-3, deal-8)
det(beginings-12, the-10)
amod(beginings-12, absolute-11)
prep_with(deal-8, beginings-12)
prep_of(beginings-12, life-14)
root(ROOT-0, seems-16)
aux(do-18, to-17)
xcomp(seems-16, do-18)
det(job-21, a-19)
amod(job-21, good-20)
dobj(do-18, job-21)
prepc_of(job-21, describing-23)
dobj(see-26, what-24)
nsubj(see-26, we-25)
nsubjpass(used-33, we-25)
ccomp(describing-23, see-26)
prt(see-26, around-27)
dobj(see-26, us-28)
aux(used-33, can-31)
auxpass(used-33, be-32)
ccomp(describing-23, used-33)
conj_and(see-26, used-33)
aux(make-35, to-34)
xcomp(used-33, make-35)
amod(predictions-37, useful-36)
dobj(make-35, predictions-37)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNP ID))
        (VP (VBZ reaches)
          (NP (DT that) (NN level)))))
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB give)
        (NP (PRP it))
        (NP (JJ further) (NN consideration))))
    (. .)))

advmod(reaches-3, When-1)
nsubj(reaches-3, ID-2)
advcl(give-8, reaches-3)
det(level-5, that-4)
dobj(reaches-3, level-5)
nsubj(give-8, I-6)
aux(give-8, 'll-7)
root(ROOT-0, give-8)
iobj(give-8, it-9)
amod(consideration-11, further-10)
dobj(give-8, consideration-11)

(ROOT
  (S
    (NP
      (NP (DT Neither))
      (PP (IN of)
        (NP (DT these) (CD two) (NNS works))))
    (VP (VBP deal)
      (PP (IN with)
        (NP
          (NP (DT the) (JJ very) (NNS beginnings))
          (PP (IN of)
            (NP (NN life)))))
      (: ...)
      (SBAR
        (WHADVP (RB just) (WRB how))
        (S
          (NP (NN life))
          (VP (VBZ adapts)
            (PP (TO to)
              (NP (JJ environmental) (NN stimulus)))))))
    (. .) ('' '')))

nsubj(deal-6, Neither-1)
det(works-5, these-3)
num(works-5, two-4)
prep_of(Neither-1, works-5)
root(ROOT-0, deal-6)
det(beginnings-10, the-8)
amod(beginnings-10, very-9)
prep_with(deal-6, beginnings-10)
prep_of(beginnings-10, life-12)
advmod(how-15, just-14)
advmod(adapts-17, how-15)
nsubj(adapts-17, life-16)
ccomp(deal-6, adapts-17)
parataxis(deal-6, adapts-17)
amod(stimulus-20, environmental-19)
prep_to(adapts-17, stimulus-20)

(ROOT
  (S
    (NP (PRP$ My) (NN argument))
    (VP (VBZ is) (RB not)
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP (VBZ explains)
            (NP (NN everything))))))
    (. .)))

poss(argument-2, My-1)
nsubj(is-3, argument-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
complm(explains-7, that-5)
nsubj(explains-7, ID-6)
ccomp(is-3, explains-7)
dobj(explains-7, everything-8)

(ROOT
  (FRAG (CC Or)
    (VP (VB string)
      (NP (NN theory)))
    (. .)))

dep(string-2, Or-1)
root(ROOT-0, string-2)
dobj(string-2, theory-3)

(ROOT
  (FRAG (CC Or)
    (VP (VB quantum)
      (NP (NNS physics)))
    (. .)))

dep(quantum-2, Or-1)
root(ROOT-0, quantum-2)
dobj(quantum-2, physics-3)

(ROOT
  (S
    (NP (PRP$ My) (NN argument))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNP Darwinists))
          (VP (VBP have)
            (NP (DT no) (NN right)
              (S
                (VP (TO to)
                  (VP (VB stand)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN way))
                        (PP (IN of)
                          (NP (JJ other) (NNS theories)))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBP have)
                              (NP (JJ scientific) (NN merit)))))))))))
            (SBAR (IN because)
              (S
                (NP (PRP they))
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (VP (VB continue)
                        (S
                          (VP (VBG idealizing)
                            (NP
                              (NP (DT a) (NN concept))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBZ 's)
                                    (ADJP (JJ full)
                                      (PP (IN of)
                                        (NP (NNS holes))))))))))))))))))))
    (. .)))

poss(argument-2, My-1)
nsubj(is-3, argument-2)
root(ROOT-0, is-3)
complm(have-6, that-4)
nsubj(have-6, Darwinists-5)
ccomp(is-3, have-6)
det(right-8, no-7)
dobj(have-6, right-8)
aux(stand-10, to-9)
infmod(right-8, stand-10)
det(way-13, the-12)
prep_in(stand-10, way-13)
nsubj(have-18, way-13)
amod(theories-16, other-15)
prep_of(way-13, theories-16)
rcmod(way-13, have-18)
amod(merit-20, scientific-19)
dobj(have-18, merit-20)
mark(want-23, because-21)
nsubj(want-23, they-22)
xsubj(continue-25, they-22)
advcl(have-6, want-23)
aux(continue-25, to-24)
xcomp(want-23, continue-25)
xcomp(continue-25, idealizing-26)
det(concept-28, a-27)
dobj(idealizing-26, concept-28)
nsubj(full-31, concept-28)
cop(full-31, 's-30)
rcmod(concept-28, full-31)
prep_of(full-31, holes-33)

(ROOT
  (S ('' '')
    (NP (NNP LivvyHow))
    (VP (VBP are)
      (S
        (NP (PRP they))
        (VP (VBG standing)
          (PP (IN in)
            (NP (DT the) (NN way))))))
    (. ?)))

nsubj(are-3, LivvyHow-2)
root(ROOT-0, are-3)
nsubj(standing-5, they-4)
dep(are-3, standing-5)
det(way-8, the-7)
prep_in(standing-5, way-8)

(ROOT
  (SQ (VBZ Is)
    (NP (NN research))
    (PP (IN into)
      (NP (NNP ID)))
    (ADVP (RB banned))
    (. ?)))

root(ROOT-0, Is-1)
nsubj(Is-1, research-2)
prep_into(Is-1, ID-4)
advmod(Is-1, banned-5)

