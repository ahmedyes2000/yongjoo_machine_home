(ROOT
  (S
    (NP (PRP I))
    (VP (VBP agree))
    (. !)))

nsubj(agree-2, I-1)
root(ROOT-0, agree-2)

(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN of)
        (NP
          (NP (DT the) (JJ main) (NNS purposes))
          (PP (IN of)
            (NP (NN science))))))
    (VP
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB discover)
              (NP (NN truth))))))
      (CC or)
      (VP (MD should)
        (VP (VB be)
          (ADVP (RB anyway)))))
    (. .)))

nsubj(is-8, One-1)
xsubj(discover-10, One-1)
nsubj(be-14, One-1)
det(purposes-5, the-3)
amod(purposes-5, main-4)
prep_of(One-1, purposes-5)
prep_of(purposes-5, science-7)
root(ROOT-0, is-8)
aux(discover-10, to-9)
xcomp(is-8, discover-10)
dobj(discover-10, truth-11)
aux(be-14, should-13)
conj_or(is-8, be-14)
advmod(be-14, anyway-15)

(ROOT
  (S
    (NP
      (NP (DT This) (NN kind))
      (PP (IN of)
        (NP (JJ solid) (NN logic))))
    (VP (MD will)
      (VP
        (VP (VB resonate)
          (PP (IN with)
            (NP
              (NP (DT a) (NN lot))
              (PP (IN of)
                (NP (NNS people))))))
        (CC and)
        (VP (VB help)
          (S
            (NP (PRP them))
            (VP (VB see)
              (PP (IN through)
                (NP
                  (NP (DT the) (NN rhetoric))
                  (PP (IN of)
                    (NP (DT the) (NNS evolutionists))))))))))
    (. .)))

det(kind-2, This-1)
nsubj(resonate-7, kind-2)
nsubj(help-14, kind-2)
amod(logic-5, solid-4)
prep_of(kind-2, logic-5)
aux(resonate-7, will-6)
root(ROOT-0, resonate-7)
det(lot-10, a-9)
prep_with(resonate-7, lot-10)
prep_of(lot-10, people-12)
conj_and(resonate-7, help-14)
nsubj(see-16, them-15)
ccomp(help-14, see-16)
det(rhetoric-19, the-18)
prep_through(see-16, rhetoric-19)
det(evolutionists-22, the-21)
prep_of(rhetoric-19, evolutionists-22)

(ROOT
  (S
    (NP (NNP Good))
    (VP (VBZ points))
    (. !)))

nsubj(points-2, Good-1)
root(ROOT-0, points-2)

(ROOT
  (NP (NN tj)))

root(ROOT-0, tj-1)

(ROOT
  (SINV
    (S
      (VP (TO To)
        (VP
          (VP (VB decide)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (DT that) (NN truth))
                (VP (VBZ is)))))
          (CC or)
          (VP (VB limit)
            (NP (PRP it))
            (ADVP (RB as)
              (PP (TO to)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP it))
                    (VP (MD can)
                      (CC or)
                      (MD can) (RB not)
                      (VP (VB be)
                        (PP (IN before)
                          (S
                            (ADVP (RB even))
                            (VP (VBG beginning)
                              (NP (DT the) (NN search)))))))))))))))
    (, ,)
    (VP (VBZ defeats))
    (NP (DT the) (NN purpose))
    (. .)))

aux(decide-2, To-1)
dep(defeats-25, decide-2)
dobj(is-6, what-3)
det(truth-5, that-4)
nsubj(is-6, truth-5)
ccomp(decide-2, is-6)
conj_or(decide-2, limit-8)
dep(defeats-25, limit-8)
dobj(limit-8, it-9)
dobj(be-18, what-12)
nsubj(be-18, it-13)
aux(be-18, can-14)
prepc_as_to(limit-8, can-16)
aux(be-18, can-16)
conj_or(be-18, can-16)
neg(be-18, not-17)
prepc_as_to(limit-8, be-18)
advmod(beginning-21, even-20)
prepc_before(be-18, beginning-21)
det(search-23, the-22)
dobj(beginning-21, search-23)
root(ROOT-0, defeats-25)
det(purpose-27, the-26)
nsubj(defeats-25, purpose-27)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (ADJP (JJ strange)))
    (. .)))

nsubj(strange-3, That-1)
cop(strange-3, is-2)
root(ROOT-0, strange-3)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would)
      (NP
        (NP (NN anyone))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ is)
              (ADJP (RB really) (JJ interested)
                (PP (IN in)
                  (NP (DT the) (NN truth))))))))
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (DT this)))))))
    (. ?)))

advmod(want-11, Why-1)
aux(want-11, would-2)
nsubj(interested-7, anyone-3)
nsubj(want-11, anyone-3)
xsubj(do-13, anyone-3)
cop(interested-7, is-5)
advmod(interested-7, really-6)
rcmod(anyone-3, interested-7)
det(truth-10, the-9)
prep_in(interested-7, truth-10)
root(ROOT-0, want-11)
aux(do-13, to-12)
xcomp(want-11, do-13)
dobj(do-13, this-14)

(ROOT
  (S
    (S
      (NP (DT This) (NN point))
      (VP (VBZ is)
        (ADJP (RB as) (JJ clear)
          (PP (IN as)
            (NP (NN day))))
        (PP (TO to)
          (NP (JJS most) (NNS people)))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (DT this))
            (VP (VBZ is)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (RB so) (JJ many) (NNS people))
                  (VP (VBP favor)
                    (NP (JJ open) (NN debate))
                    (PP (IN on)
                      (NP (DT the) (NN issue)))))))))))
    (. .)))

det(point-2, This-1)
nsubj(clear-5, point-2)
cop(clear-5, is-3)
advmod(clear-5, as-4)
root(ROOT-0, clear-5)
prep_as(clear-5, day-7)
amod(people-10, most-9)
prep_to(clear-5, people-10)
nsubj(believe-13, I-12)
conj_and(clear-5, believe-13)
nsubj(is-15, this-14)
ccomp(believe-13, is-15)
advmod(favor-20, why-16)
advmod(people-19, so-17)
amod(people-19, many-18)
nsubj(favor-20, people-19)
advcl(is-15, favor-20)
amod(debate-22, open-21)
dobj(favor-20, debate-22)
det(issue-25, the-24)
prep_on(favor-20, issue-25)

(ROOT
  (S
    (NP (RB Only) (NNPS Darwinists))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB censor)
            (NP (DT the) (NN debate))))))
    (. .)))

advmod(Darwinists-2, Only-1)
nsubj(want-3, Darwinists-2)
xsubj(censor-5, Darwinists-2)
root(ROOT-0, want-3)
aux(censor-5, to-4)
xcomp(want-3, censor-5)
det(debate-7, the-6)
dobj(censor-5, debate-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (MD can)
          (VP (VB be)
            (NP
              (NP (NN evidence))
              (PP (IN against)
                (NP (NN design))))
            (, ,)
            (ADVP (RB then))
            (, ,)
            (ADVP (RB certainly))
            (, ,)
            (SBAR (IN like)
              (S
                (NP (PRP you))
                (VP (VBD said))))))))
    (, ,)
    (NP (EX there))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP (NN evidence))
          (PP (IN for)
            (NP (NN design))))))
    (. .)))

mark(evidence-5, If-1)
expl(evidence-5, there-2)
aux(evidence-5, can-3)
cop(evidence-5, be-4)
advcl(evidence-20, evidence-5)
prep_against(evidence-5, design-7)
advmod(evidence-5, then-9)
advmod(evidence-5, certainly-11)
mark(said-15, like-13)
nsubj(said-15, you-14)
advcl(evidence-5, said-15)
expl(evidence-20, there-17)
aux(evidence-20, can-18)
cop(evidence-20, be-19)
root(ROOT-0, evidence-20)
prep_for(evidence-20, design-22)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ open)
              (S
                (VP (TO to)
                  (VP (VB follow)
                    (NP (DT the) (NN evidence))
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (ADVP (RB ever))
                        (NP (PRP it))
                        (VP
                          (VP (VBZ leads))
                          (CC and)
                          (RB not)
                          (VP (VB predetermine)
                            (SBAR
                              (WHADVP (WRB where))
                              (S
                                (NP (PRP it))
                                (VP (MD can)
                                  (CC and)
                                  (MD can) (RB not)
                                  (VP (VB lead)
                                    (NP (PRP us))))))))))))))))))
    (. .)))

nsubj(need-2, We-1)
xsubj(open-5, We-1)
root(ROOT-0, need-2)
aux(open-5, to-3)
cop(open-5, be-4)
xcomp(need-2, open-5)
aux(follow-7, to-6)
xcomp(open-5, follow-7)
det(evidence-9, the-8)
dobj(follow-7, evidence-9)
advmod(leads-13, where-10)
advmod(leads-13, ever-11)
nsubj(leads-13, it-12)
advcl(follow-7, leads-13)
advcl(follow-7, not-15)
conj_and(leads-13, not-15)
neg(leads-13, not-15)
dep(leads-13, predetermine-16)
advmod(lead-23, where-17)
nsubj(lead-23, it-18)
aux(lead-23, can-19)
advcl(predetermine-16, can-21)
aux(lead-23, can-21)
conj_and(lead-23, can-21)
neg(lead-23, not-22)
advcl(predetermine-16, lead-23)
dobj(lead-23, us-24)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is) (RB not)
      (NP (JJ true) (NN science)))
    (. .)))

nsubj(science-5, That-1)
cop(science-5, is-2)
neg(science-5, not-3)
amod(science-5, true-4)
root(ROOT-0, science-5)

