(ROOT
  (S (: --)
    (CC But)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJR more))
      (SBAR (IN than)
        (S
          (S
            (NP (PRP we))
            (VP (VBP do) (RB n't)
              (VP (VB understand) ('' ''))))
          (S
            (ADVP (RB thus))
            (VP (VBN designed))))))
    (. .)))

conj_but(more-5, it-3)
nsubj(more-5, it-3)
cop(more-5, 's-4)
root(ROOT-0, more-5)
mark(understand-10, than-6)
nsubj(understand-10, we-7)
aux(understand-10, do-8)
neg(understand-10, n't-9)
advcl(more-5, understand-10)
advmod(designed-13, thus-12)
dep(understand-10, designed-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (VBN specified) (NN complexity)))
    (. .)))

nsubj(complexity-4, It-1)
dep(complexity-4, 's-2)
amod(complexity-4, specified-3)
root(ROOT-0, complexity-4)

(ROOT
  (S
    (PP (IN For)
      (NP (NN instance)))
    (, ,)
    (PP (IN in)
      (NP
        (NP (DT the) (NN case))
        (PP (IN of)
          (NP (DT the) (JJ bacterial) (NN flagellum)))))
    (, ,)
    (NP (NNS humans))
    (VP (VBD developed)
      (NP (JJ outboard) (JJ rotary) (NNS motors))
      (ADVP (RB well))
      (SBAR (IN before)
        (S
          (NP (PRP they))
          (VP (VBD figured)
            (PRT (RP out))
            (SBAR (IN that)
              (S
                (NP (DT the) (NN flagellum))
                (VP (VBD was)
                  (NP (PDT such) (DT a) (NN machine)))))))))
    (. .)))

prep_for(developed-13, instance-2)
det(case-6, the-5)
prep_in(developed-13, case-6)
det(flagellum-10, the-8)
amod(flagellum-10, bacterial-9)
prep_of(case-6, flagellum-10)
nsubj(developed-13, humans-12)
root(ROOT-0, developed-13)
amod(motors-16, outboard-14)
amod(motors-16, rotary-15)
dobj(developed-13, motors-16)
advmod(developed-13, well-17)
mark(figured-20, before-18)
nsubj(figured-20, they-19)
advcl(developed-13, figured-20)
prt(figured-20, out-21)
complm(machine-28, that-22)
det(flagellum-24, the-23)
nsubj(machine-28, flagellum-24)
cop(machine-28, was-25)
predet(machine-28, such-26)
det(machine-28, a-27)
ccomp(figured-20, machine-28)

(ROOT
  (NP
    (NP (NNP NFL))
    (, ,)
    (NP (NN p.) (CD 289))
    (. .)))

root(ROOT-0, NFL-1)
appos(NFL-1, p.-3)
num(p.-3, 289-4)

(ROOT
  (S
    (NP (DT The) (NN flagellum) (NNS functions))
    (VP (VBP like)
      (NP (DT an) (JJ outboard) (JJ rotary) (NN motor)))
    (. .)))

det(functions-3, The-1)
nn(functions-3, flagellum-2)
nsubj(like-4, functions-3)
root(ROOT-0, like-4)
det(motor-8, an-5)
amod(motor-8, outboard-6)
amod(motor-8, rotary-7)
dobj(like-4, motor-8)

(ROOT
  (S
    (NP (DT The) (JJ rotary) (JJ outboard) (NN motor) (NN pattern))
    (VP (VBZ represents)
      (NP
        (NP (DT a)
          (ADJP (JJ functional))
          (NN requirement) (NN independent))
        (PP (IN of)
          (NP (JJ biological) (NNS systems)))))
    (. .)))

det(pattern-5, The-1)
amod(pattern-5, rotary-2)
amod(pattern-5, outboard-3)
nn(pattern-5, motor-4)
nsubj(represents-6, pattern-5)
root(ROOT-0, represents-6)
det(independent-10, a-7)
amod(independent-10, functional-8)
nn(independent-10, requirement-9)
dobj(represents-6, independent-10)
amod(systems-13, biological-12)
prep_of(independent-10, systems-13)

(ROOT
  (S
    (ADVP (RB Therefore))
    (PRN (, ,)
      (SINV
        (VP (VBZ concludes))
        (NP (NNP Dembski)))
      (, ,))
    (NP (DT the) (NN flagellum))
    (VP (VBZ is)
      (VP (VBN specified)))
    (. .)))

advmod(specified-9, Therefore-1)
parataxis(specified-9, concludes-3)
nsubj(concludes-3, Dembski-4)
det(flagellum-7, the-6)
nsubjpass(specified-9, flagellum-7)
auxpass(specified-9, is-8)
root(ROOT-0, specified-9)

(ROOT
  (NP
    (NP (NN Source))
    (: :)
    (NP (NNP Hopward) (NNP van) (NNP Till))
    (, ,)
    (NP
      (NP (`` ``)
        (NP (NNP E.) (NNP Coli))
        (PP (IN at)
          (NP (DT the) (NNP No) (NNP Free) (NNP Lunchroom)))
        ('' ''))
      (ADJP (JJ http:\/\/www.counterbalance.net\/id-hvt\/isthe2-body.html)
        (PP (IN In)
          (NP (JJ other) (NNS words)))))
    (, ,)
    (S
      (S
        (PP (IN in)
          (NP (NN biology)))
        (, ,)
        (NP (DT the) (NN complexity) (NN part))
        (VP (VBZ is)
          (VP (VBN established)
            (PP (IN through)
              (NP
                (NP (PRP$ our) (NN ignorance))
                (CC and)
                (NP (DT the) (NN specification))))
            (PP (IN through)
              (NP (NN function))))))
      (, ,) (IN so)
      (S
        (NP (PRP we))
        (VP (MD can)
          (ADVP (RB slightly))
          (VP (VB revise)
            (NP (PRP$ our) (NN claim))
            (PP (TO to)
              (NP
                (NP (NN state))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (PP (IN in)
                      (NP (NN biology) (`` ``) (NN design) ('' '')))
                    (VP (VBZ refers)
                      (PP (TO to)
                        (NP
                          (NP (NN science) (POS 's))
                          (NN ignorance)))
                      (PP (IN about)
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (NP
                              (NP (DT a) (JJ particular) (NN system))
                              (PP (IN with)
                                (NP (DT a) (NN function))))
                            (VP (VBD came)
                              (PRT (RP around)))))))))))))))
    (. .)))

root(ROOT-0, Source-1)
nn(Till-5, Hopward-3)
nn(Till-5, van-4)
dep(Source-1, Till-5)
nn(Coli-9, E.-8)
appos(Source-1, Coli-9)
det(Lunchroom-14, the-11)
nn(Lunchroom-14, No-12)
nn(Lunchroom-14, Free-13)
prep_at(Coli-9, Lunchroom-14)
amod(Coli-9, http:\/\/www.counterbalance.net\/id-hvt\/isthe2-body.html-16)
amod(words-19, other-18)
prep_in(http:\/\/www.counterbalance.net\/id-hvt\/isthe2-body.html-16, words-19)
prep_in(established-28, biology-22)
det(part-26, the-24)
nn(part-26, complexity-25)
nsubjpass(established-28, part-26)
auxpass(established-28, is-27)
dep(Source-1, established-28)
poss(ignorance-31, our-30)
prep_through(established-28, ignorance-31)
det(specification-34, the-33)
prep_through(established-28, specification-34)
conj_and(ignorance-31, specification-34)
prep_through(established-28, function-36)
dep(established-28, so-38)
nsubj(revise-42, we-39)
aux(revise-42, can-40)
advmod(revise-42, slightly-41)
dep(established-28, revise-42)
poss(claim-44, our-43)
dobj(revise-42, claim-44)
prep_to(revise-42, state-46)
nsubj(refers-53, state-46)
nn(design-51, biology-49)
prep_in(refers-53, design-51)
rcmod(state-46, refers-53)
poss(ignorance-57, science-55)
prep_to(refers-53, ignorance-57)
advmod(came-66, how-59)
det(system-62, a-60)
amod(system-62, particular-61)
nsubj(came-66, system-62)
det(function-65, a-64)
prep_with(system-62, function-65)
prepc_about(refers-53, came-66)
prt(came-66, around-67)

(ROOT
  (S
    (VP (NN Note)
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (ADVP (RB also))
          (VP (VBZ does) (RB not)
            (VP (VB provide)
              (NP (DT any) (JJ additional) (NN side) (NNS hypotheses))
              (S
                (VP (TO to)
                  (VP (VB explain)
                    (PP (IN from)
                      (NP (DT the) (NNP ID) (NN perspective)))
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (JJ such) (NN specification))
                        (VP (VBD came)
                          (PRT (RP about)))))))))))))
    (. .)))

root(ROOT-0, Note-1)
complm(provide-7, that-2)
nsubj(provide-7, ID-3)
advmod(provide-7, also-4)
aux(provide-7, does-5)
neg(provide-7, not-6)
ccomp(Note-1, provide-7)
det(hypotheses-11, any-8)
amod(hypotheses-11, additional-9)
nn(hypotheses-11, side-10)
dobj(provide-7, hypotheses-11)
aux(explain-13, to-12)
xcomp(provide-7, explain-13)
det(perspective-17, the-15)
nn(perspective-17, ID-16)
prep_from(explain-13, perspective-17)
advmod(came-21, how-18)
amod(specification-20, such-19)
nsubj(came-21, specification-20)
ccomp(explain-13, came-21)
prt(came-21, about-22)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (JJ other) (NNS words))
        (, ,)
        (NP (JJ outside) (NN biology))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is)
              (ADJP (JJ sufficient)
                (S
                  (VP (TO to)
                    (VP (VB identify)
                      (NP
                        (NP (DT some) (JJ subjective) (NN function)
                          (CC or)
                          (NN pattern))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (ADJP (JJ independent)
                                (PP (IN of)
                                  (NP (DT the) (NN system)
                                    (CC and)
                                    (NN voila)))))))))))))))))
    (NP
      (NP (DT the) (NN foundation))
      (PP (IN for)
        (NP (DT a) (NN specification))))
    (VP (VBZ arises))
    (. .)))

amod(words-3, other-2)
prep_in(arises-31, words-3)
amod(biology-6, outside-5)
appos(words-3, biology-6)
nsubj(sufficient-10, biology-6)
cop(sufficient-10, is-9)
rcmod(words-3, sufficient-10)
rcmod(biology-6, sufficient-10)
aux(identify-12, to-11)
xcomp(sufficient-10, identify-12)
det(function-15, some-13)
amod(function-15, subjective-14)
dobj(identify-12, function-15)
nsubj(independent-20, function-15)
dobj(identify-12, pattern-17)
conj_or(function-15, pattern-17)
nsubj(independent-20, pattern-17)
cop(independent-20, is-19)
rcmod(function-15, independent-20)
det(system-23, the-22)
prep_of(independent-20, system-23)
prep_of(independent-20, voila-25)
conj_and(system-23, voila-25)
det(foundation-27, the-26)
nsubj(arises-31, foundation-27)
det(specification-30, a-29)
prep_for(foundation-27, specification-30)
root(ROOT-0, arises-31)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (PRP we))
        (VP (VBP are)
          (ADJP
            (ADJP (RB very) (RB well) (JJ aware)
              (PP (IN of)
                (NP (DT the) (NN fact))))
            (SBAR (IN that)
              (S
                (NP (PRP us) (NNS humans))
                (VP (VBP are)
                  (ADJP (RB extremely) (JJ capable)
                    (PP (IN of)
                      (S
                        (VP (VBG seeing) (`` ``)
                          (NP (NN design))
                          ('' '')
                          (PP (IN in)
                            (NP
                              (NP (JJ many) (NNS aspects))
                              (PP (IN of)
                                (NP (NN life))))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD should) (RB not)
      (VP (VB come)
        (PP
          (PP (IN as)
            (NP
              (NP (DT a) (NN surprise))
              (SBAR
                (S
                  (NP
                    (NP (DT that))
                    (PP (IN under)
                      (NP
                        (NP (NNP ID) (POS 's))
                        (NN approach)))
                    (NP (DT the))
                    ('' '')
                    (NP
                      (NP (JJ Old) (NN man))
                      (PP (IN in)
                        (NP (DT the) (NN mountain))))
                    ('' ''))
                  (VP (VBZ is)
                    (ADJP (RB as) (JJ valid)
                      (SBAR
                        (S
                          (NP (DT a) (NN design))
                          (VP (VBP inference)
                            (PP (IN as)
                              (NP (NNP Mount) (NNP Rushmore))))))))))))
          (, ,)
          (CC but)
          (PP (IN of)
            (NP
              (NP (NN course))
              (ADJP (JJ likely)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ wrong)))))))))))
    (. .)))

mark(aware-6, Since-1)
nsubj(aware-6, we-2)
cop(aware-6, are-3)
advmod(aware-6, very-4)
advmod(aware-6, well-5)
advcl(come-30, aware-6)
det(fact-9, the-8)
prep_of(aware-6, fact-9)
complm(capable-15, that-10)
dep(humans-12, us-11)
nsubj(capable-15, humans-12)
cop(capable-15, are-13)
advmod(capable-15, extremely-14)
ccomp(aware-6, capable-15)
prepc_of(capable-15, seeing-17)
dobj(seeing-17, design-19)
amod(aspects-23, many-22)
prep_in(seeing-17, aspects-23)
prep_of(aspects-23, life-25)
nsubj(come-30, it-27)
nsubj(come-30', it-27)
aux(come-30, should-28)
neg(come-30, not-29)
root(ROOT-0, come-30)
conj_but(come-30, come-30')
det(surprise-33, a-32)
prep_as(come-30, surprise-33)
nsubj(valid-49, that-34)
poss(approach-38, ID-36)
prep_under(that-34, approach-38)
dep(that-34, the-39)
amod(man-42, Old-41)
dep(that-34, man-42)
det(mountain-45, the-44)
prep_in(man-42, mountain-45)
cop(valid-49, is-47)
advmod(valid-49, as-48)
rcmod(surprise-33, valid-49)
det(design-51, a-50)
nsubj(inference-52, design-51)
dep(valid-49, inference-52)
nn(Rushmore-55, Mount-54)
prep_as(inference-52, Rushmore-55)
prep_of(come-30', course-59)
amod(course-59, likely-60)
aux(wrong-63, to-61)
cop(wrong-63, be-62)
xcomp(likely-60, wrong-63)

(ROOT
  (S
    (ADVP (RB Similarly))
    (, ,)
    (NP
      (NP (DT the) (NNS patterns))
      (PP (IN of)
        (NP
          (NP (NNS circles))
          (CC or)
          (NP (JJ stable) (NNS orbits)))))
    (VP (VBN combined)
      (PP (IN with)
        (NP
          (NP (DT a) (NN lack))
          (PP (IN of)
            (NP
              (NP (NN understanding))
              (PP (IN of)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (NN science))
                    (VP (MD would)
                      (VP (VB explain)
                        (NP
                          (NP (DT this))
                          (, ,)
                          (VP (VBN caused)
                            (S
                              (NP (NNP Newton))
                              (VP (TO to)
                                (VP (VB infer) (`` ``)
                                  (NP (NN design))
                                  ('' '')
                                  (PP (IN for)
                                    (NP (JJ planetary) (NNS orbits))))))))))))))))))
    (. .)))

advmod(combined-10, Similarly-1)
det(patterns-4, the-3)
nsubj(combined-10, patterns-4)
prep_of(patterns-4, circles-6)
amod(orbits-9, stable-8)
prep_of(patterns-4, orbits-9)
conj_or(circles-6, orbits-9)
root(ROOT-0, combined-10)
det(lack-13, a-12)
prep_with(combined-10, lack-13)
prep_of(lack-13, understanding-15)
advmod(explain-20, how-17)
nsubj(explain-20, science-18)
aux(explain-20, would-19)
prepc_of(understanding-15, explain-20)
dobj(explain-20, this-21)
partmod(this-21, caused-23)
nsubj(infer-26, Newton-24)
aux(infer-26, to-25)
xcomp(caused-23, infer-26)
dobj(infer-26, design-28)
amod(orbits-32, planetary-31)
prep_for(infer-26, orbits-32)

(ROOT
  (S
    (PP
      (ADVP (JJR Worse))
      (IN of)
      (NP (NN course)))
    (, ,)
    (NP (DT the) (NNP ID) (NNS hypothesis))
    (VP
      (VP (VBZ does) (RB not)
        (ADVP (RB only))
        (VP (VB infer)
          (NP (`` ``) (NN design) ('' ''))))
      (CC but)
      (VP (VBZ provides)
        (S
          (NP (DT no) (NNS measures))
          (VP (TO to)
            (VP (VB show)
              (SBAR (IN that)
                (S
                  (NP (PRP$ its) (NN inference))
                  (VP (VBZ is)
                    (ADJP (RBR more) (JJ likely))
                    (SBAR (IN than) (`` ``)
                      (S
                        (NP (PRP we))
                        (VP (VBP do) (RB n't)
                          (VP (VB know))))
                      ('' '')))))
              (, ,)
              (S
                (VP (VBG making)
                  (S
                    (NP (DT the) (NN inference))
                    (ADJP (RB highly) (JJ unreliable))))))))))
    (. .)))

advmod(infer-11, Worse-1)
prep_of(infer-11, course-3)
det(hypothesis-7, the-5)
nn(hypothesis-7, ID-6)
nsubj(infer-11, hypothesis-7)
nsubj(provides-16, hypothesis-7)
aux(infer-11, does-8)
neg(infer-11, not-9)
advmod(infer-11, only-10)
root(ROOT-0, infer-11)
dobj(infer-11, design-13)
conj_but(infer-11, provides-16)
det(measures-18, no-17)
nsubj(show-20, measures-18)
aux(show-20, to-19)
xcomp(provides-16, show-20)
complm(likely-26, that-21)
poss(inference-23, its-22)
nsubj(likely-26, inference-23)
cop(likely-26, is-24)
advmod(likely-26, more-25)
ccomp(show-20, likely-26)
mark(know-32, than-27)
nsubj(know-32, we-29)
aux(know-32, do-30)
neg(know-32, n't-31)
advcl(likely-26, know-32)
xcomp(show-20, making-35)
det(inference-37, the-36)
nsubj(unreliable-39, inference-37)
advmod(unreliable-39, highly-38)
xcomp(making-35, unreliable-39)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (VP (VBP take)
          (NP
            (NP (NNP Dembski) (POS 's))
            (NN claim))
          (SBAR (IN that)
            (S
              (SBAR (IN if)
                (S
                  (NP (DT the) (NN design) (NN inference))
                  (VP (VBZ includes)
                    (NP (JJ false) (NNS positives)))))
              (, ,)
              (NP (PRP it))
              (VP (MD would)
                (VP (VB be)
                  (ADJP (JJ useless)))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (VBN surprised)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP we))
            (VP (VBP are)
              (ADVP (RB still))
              (VP (VBG talking)
                (PP (IN about)
                  (NP (DT this)))))))))
    (. .)))

cc(surprised-24, And-1)
mark(take-4, if-2)
nsubj(take-4, we-3)
advcl(surprised-24, take-4)
poss(claim-7, Dembski-5)
dobj(take-4, claim-7)
complm(useless-20, that-8)
mark(includes-13, if-9)
det(inference-12, the-10)
nn(inference-12, design-11)
nsubj(includes-13, inference-12)
advcl(useless-20, includes-13)
amod(positives-15, false-14)
dobj(includes-13, positives-15)
nsubj(useless-20, it-17)
aux(useless-20, would-18)
cop(useless-20, be-19)
ccomp(take-4, useless-20)
nsubjpass(surprised-24, I-22)
auxpass(surprised-24, am-23)
root(ROOT-0, surprised-24)
advmod(talking-29, why-25)
nsubj(talking-29, we-26)
aux(talking-29, are-27)
advmod(talking-29, still-28)
dep(surprised-24, talking-29)
prep_about(talking-29, this-31)

(ROOT
  (S
    (VP (VB Wherever)
      (S
        (NP (PRP we))
        (VP (VB find)
          (NP
            (NP (VBN specified) (NN complexity))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP find)
                  (NP (DT a) (NN designer)))))))))
    (. .)))

root(ROOT-0, Wherever-1)
nsubj(find-3, we-2)
ccomp(Wherever-1, find-3)
amod(complexity-5, specified-4)
dobj(find-3, complexity-5)
nsubj(find-7, we-6)
rcmod(complexity-5, find-7)
det(designer-9, a-8)
dobj(find-7, designer-9)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP (DT the) (JJ theological) (NNS implications)))
    (NP (DT this))
    (VP (MD would)
      (VP (VB be)
        (NP (NN non-controversal))))
    (. .)))

cc(non-controversal-9, But-1)
det(implications-5, the-3)
amod(implications-5, theological-4)
prep_for(non-controversal-9, implications-5)
nsubj(non-controversal-9, this-6)
aux(non-controversal-9, would-7)
cop(non-controversal-9, be-8)
root(ROOT-0, non-controversal-9)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (ADVP (RB yet))
      (NP
        (NP (DT another) (NN one))
        (PP (IN of)
          (NP (DT these) (NNP ID) (NNS claims)))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBP lack)
              (PP (IN in)
                (NP (JJ much) (NN relevance))))))))
    (. .)))

nsubj(one-5, That-1)
cop(one-5, is-2)
advmod(one-5, yet-3)
det(one-5, another-4)
root(ROOT-0, one-5)
nsubj(lack-11, one-5)
det(claims-9, these-7)
nn(claims-9, ID-8)
prep_of(one-5, claims-9)
rcmod(one-5, lack-11)
amod(relevance-14, much-13)
prep_in(lack-11, relevance-14)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP
        (NP (DT the) (NN sake))
        (PP (IN of)
          (NP (DT the) (NN reader)))))
    (, ,)
    (VP (VBP let)
      (S
        (NP (POS 's))
        (VP (VB explore)
          (NP
            (NP (NNP Jim) (POS 's))
            (NN claim))))
      (SBAR (IN because)
        (S
          (ADVP (RB otherwise))
          (NP (DT the) (NNP ID) (NN proponent))
          (VP (MD may)
            (VP (VB argue)
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBP have) (RB not)
                    (ADVP (RB fully))
                    (VP (VBN represented)
                      (NP (DT the) (NNP ID) (NN argument)))))))))))
    (. .)))

cc(let-9, But-1)
det(sake-4, the-3)
prep_for(let-9, sake-4)
det(reader-7, the-6)
prep_of(sake-4, reader-7)
root(ROOT-0, let-9)
nsubj(explore-11, 's-10)
ccomp(let-9, explore-11)
poss(claim-14, Jim-12)
dobj(explore-11, claim-14)
mark(argue-21, because-15)
advmod(argue-21, otherwise-16)
det(proponent-19, the-17)
nn(proponent-19, ID-18)
nsubj(argue-21, proponent-19)
aux(argue-21, may-20)
advcl(let-9, argue-21)
complm(represented-27, that-22)
nsubj(represented-27, I-23)
aux(represented-27, have-24)
neg(represented-27, not-25)
advmod(represented-27, fully-26)
ccomp(argue-21, represented-27)
det(argument-30, the-28)
nn(argument-30, ID-29)
dobj(represented-27, argument-30)

(ROOT
  (S
    (NP (NNP Specification))
    (VP (VBZ is)
      (NP
        (NP (NN something))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is) (, ,)
              (SBAR (IN as)
                (S
                  (VP (VBZ is)
                    (PP (IN with)
                      (NP
                        (NP
                          (ADJP (RB so) (JJ many))
                          (NNS aspects))
                        (PP (IN of)
                          (NP (NNP ID))))))))
              (, ,)
              (S
                (ADJP
                  (ADJP (RB ill) (JJ defined))
                  (CC and)
                  (ADJP (RB even) (JJR harder)
                    (S
                      (VP (TO to)
                        (VP (VB measure)
                          (ADVP (CC but))
                          (PP (VBG according)
                            (PP (TO to)
                              (NP (NNP Dembski)))))))))))))))
    (. .)))

nsubj(something-3, Specification-1)
cop(something-3, is-2)
root(ROOT-0, something-3)
nsubj(is-5, something-3)
nsubj(is-8, something-3)
rcmod(something-3, is-5)
mark(is-8, as-7)
advcl(is-5, is-8)
advmod(many-11, so-10)
amod(aspects-12, many-11)
prep_with(is-8, aspects-12)
prep_of(aspects-12, ID-14)
advmod(defined-17, ill-16)
dep(is-5, defined-17)
advmod(harder-20, even-19)
dep(is-5, harder-20)
conj_and(defined-17, harder-20)
aux(measure-22, to-21)
xcomp(harder-20, measure-22)
advmod(measure-22, but-23)
prepc_according_to(measure-22, to-25)
pobj(measure-22, Dembski-26)

(ROOT
  (S
    (ADVP (JJ first)
      (PP (IN of)
        (NP
          (NP (DT all))
          (PP (IN in)
            (NP (NN biology))))))
    (, ,)
    (NP (NN specification))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ similar)
              (PP (TO to)
                (NP
                  (NP (`` ``) (NN function) ('' ''))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (PP (IN in)
                        (NP (NN evolution)))
                      (VP (VBZ leads)
                        (PP (TO to)
                          (NP (DT an) (JJ immediate) (NN problem)))
                        (SBAR
                          (ADVP (RB namely))
                          (IN that)
                          (S
                            (NP (NN function))
                            (VP (VBZ is)
                              (ADVP (RB also))
                              (NP
                                (NP (DT an) (VBN expected) (NN outcome))
                                (PP (IN of)
                                  (NP (JJ evolutionary) (NNS processes)))))))))))))))))
    (. .)))

advmod(seems-8, first-1)
prep_of(first-1, all-3)
prep_in(all-3, biology-5)
nsubj(seems-8, specification-7)
xsubj(similar-11, specification-7)
root(ROOT-0, seems-8)
aux(similar-11, to-9)
cop(similar-11, be-10)
xcomp(seems-8, similar-11)
prep_to(similar-11, function-14)
nsubj(leads-20, function-14)
prep_in(leads-20, evolution-19)
rcmod(function-14, leads-20)
det(problem-24, an-22)
amod(problem-24, immediate-23)
prep_to(leads-20, problem-24)
advmod(outcome-32, namely-25)
dep(outcome-32, that-26)
nsubj(outcome-32, function-27)
cop(outcome-32, is-28)
advmod(outcome-32, also-29)
det(outcome-32, an-30)
amod(outcome-32, expected-31)
ccomp(leads-20, outcome-32)
amod(processes-35, evolutionary-34)
prep_of(outcome-32, processes-35)

(ROOT
  (S
    (S
      (VP (VBG Addressing)
        (NP (DT the) (JJ particular) (NN question))
        (S
          (VP (VBG regarding)
            (SBAR (IN whether)
              (S
                (NP (DT the) (JJ bacterial) (NN flagellum))
                (VP (VBZ is)
                  (VP (VBN specified)))))))))
    (, ,)
    (NP (NNP Dembski))
    (ADVP (RB confidently))
    (VP (VBZ declares)
      (SBAR (IN that) (, ,)
        (S
          (NP (NNP Specification))
          (VP (VBZ is)
            (ADVP (RB never))
            (NP (DT a) (NN problem))))))
    (. .)))

partmod(declares-15, Addressing-1)
det(question-4, the-2)
amod(question-4, particular-3)
dobj(Addressing-1, question-4)
xcomp(Addressing-1, regarding-5)
complm(specified-11, whether-6)
det(flagellum-9, the-7)
amod(flagellum-9, bacterial-8)
nsubjpass(specified-11, flagellum-9)
auxpass(specified-11, is-10)
ccomp(regarding-5, specified-11)
nsubj(declares-15, Dembski-13)
advmod(declares-15, confidently-14)
root(ROOT-0, declares-15)
complm(problem-22, that-16)
nsubj(problem-22, Specification-18)
cop(problem-22, is-19)
neg(problem-22, never-20)
det(problem-22, a-21)
ccomp(declares-15, problem-22)

(ROOT
  (S
    (NP
      (NP (DT The)
        (ADJP (RB irreducibly) (JJ complex))
        (NNS systems))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP consider) (, ,)
            (ADVP (RB particularly))
            (PP (IN in)
              (NP (NN biology)))))))
    (, ,)
    (ADVP (RB always))
    (VP (VB satisfy)
      (PP
        (ADVP (RB independently))
        (VBN given)
        (NP (JJ functional) (NNS requirements))))
    (. ...)))

det(systems-4, The-1)
advmod(complex-3, irreducibly-2)
amod(systems-4, complex-3)
dobj(consider-6, systems-4)
nsubj(satisfy-13, systems-4)
nsubj(consider-6, we-5)
rcmod(systems-4, consider-6)
advmod(consider-6, particularly-8)
prep_in(consider-6, biology-10)
advmod(satisfy-13, always-12)
root(ROOT-0, satisfy-13)
advmod(given-15, independently-14)
prep(satisfy-13, given-15)
amod(requirements-17, functional-16)
dep(given-15, requirements-17)

