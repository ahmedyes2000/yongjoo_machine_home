(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (ADJP
        (ADJP (NN nothing) (JJ wrong))
        (PP (IN with)
          (S
            (VP (VBG asking)
              (NP (NN someone))
              (S
                (VP (TO to)
                  (VP (VB disprove)
                    (NP (DT a) (JJ negative))
                    (PRN (, ,)
                      (INTJ (DT that) (VBZ is))
                      (, ,))
                    (PP (IN with)
                      (S
                        (VP (VBG asking)
                          (NP (NN someone))
                          (S
                            (VP (TO to)
                              (VP (VB provide)
                                (NP (NN evidence) (NN contrary))
                                (PP (TO to)
                                  (NP (DT a) (NN claim)))))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
dep(wrong-4, nothing-3)
acomp(is-2, wrong-4)
prepc_with(wrong-4, asking-6)
dobj(asking-6, someone-7)
aux(disprove-9, to-8)
xcomp(asking-6, disprove-9)
det(negative-11, a-10)
dobj(disprove-9, negative-11)
dep(disprove-9, that-13)
dep(that-13, is-14)
prepc_with(disprove-9, asking-17)
dobj(asking-17, someone-18)
aux(provide-20, to-19)
xcomp(asking-17, provide-20)
nn(contrary-22, evidence-21)
dobj(provide-20, contrary-22)
det(claim-25, a-24)
prep_to(provide-20, claim-25)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP call)
        (S
          (NP (PRP it))
          (NP (DT a) (NN tactic)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP call)
      (S
        (NP (PRP it))
        (VP (VB reason))))
    (. .)))

nsubj(call-2, You-1)
ccomp(call-8, call-2)
nsubj(tactic-5, it-3)
det(tactic-5, a-4)
xcomp(call-2, tactic-5)
nsubj(call-8, I-7)
root(ROOT-0, call-8)
nsubj(reason-10, it-9)
ccomp(call-8, reason-10)

(ROOT
  (S (`` ``)
    (NP (CD 2) (NNS -RRB-))
    ('' '')
    (SBAR (IN If)
      (S
        (NP (DT the) (JJ Judeo-Christian) (NN God))
        (VP (VBZ exists))))
    (, ,)
    (ADVP (RB then))
    (NP (EX there))
    (VP (MD should)
      (VP (VB be)
        (NP (DT no) (JJ gratuitous) (NN evil))))
    (. .)))

nsubj(evil-17, 2-2)
mark(exists-9, If-5)
det(God-8, the-6)
amod(God-8, Judeo-Christian-7)
nsubj(exists-9, God-8)
advcl(evil-17, exists-9)
advmod(evil-17, then-11)
expl(evil-17, there-12)
aux(evil-17, should-13)
cop(evil-17, be-14)
det(evil-17, no-15)
amod(evil-17, gratuitous-16)
root(ROOT-0, evil-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP (VBZ is)
          (ADJP (JJ perfect)))))
    (, ,)
    (ADVP (RB then))
    (NP (DT the) (NN world))
    (VP (MD should)
      (VP (VB be)
        (ADJP (JJ perfect))))
    (. .)))

mark(perfect-4, If-1)
nsubj(perfect-4, God-2)
cop(perfect-4, is-3)
advcl(perfect-11, perfect-4)
advmod(perfect-11, then-6)
det(world-8, the-7)
nsubj(perfect-11, world-8)
aux(perfect-11, should-9)
cop(perfect-11, be-10)
root(ROOT-0, perfect-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP God))
        (VP (VBZ exists))))
    (, ,)
    (ADVP (RB then))
    (NP (DT no) (NN one))
    (VP (MD should)
      (VP (VB be)
        (NP (DT a) (NN disbeliever))
        (SBAR (IN because)
          (S
            (NP (NNP God))
            (VP (MD would)
              (VP (VB make)
                (S
                  (NP (PRP$ his) (NN existence))
                  (ADJP (JJ obvious)
                    (PP (TO to)
                      (NP (NN everyone) (, ,) (NN etc) (, ,) (FW etc.)))))))))))
    (. .)))

mark(exists-3, If-1)
nsubj(exists-3, God-2)
advcl(disbeliever-11, exists-3)
advmod(disbeliever-11, then-5)
det(one-7, no-6)
nsubj(disbeliever-11, one-7)
aux(disbeliever-11, should-8)
cop(disbeliever-11, be-9)
det(disbeliever-11, a-10)
root(ROOT-0, disbeliever-11)
mark(make-15, because-12)
nsubj(make-15, God-13)
aux(make-15, would-14)
advcl(disbeliever-11, make-15)
poss(existence-17, his-16)
nsubj(obvious-18, existence-17)
xcomp(make-15, obvious-18)
nn(etc-22, everyone-20)
prep_to(obvious-18, etc-22)
dep(etc-22, etc.-24)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (DT the) (NNP God) (NNS hypothesis))
    (VP (VBZ is)
      (ADJP
        (ADJP (JJ false))
        (CC or)
        (ADJP (RB probably) (JJ false))))
    (. .)))

advmod(false-7, Therefore-1)
det(hypothesis-5, the-3)
nn(hypothesis-5, God-4)
nsubj(false-7, hypothesis-5)
nsubj(false-10, hypothesis-5)
cop(false-7, is-6)
root(ROOT-0, false-7)
advmod(false-10, probably-9)
conj_or(false-7, false-10)

(ROOT
  (S (`` ``)
    (S
      (NP (NNP p.s.) (NNP Atheists))
      (VP (VBP are)
        (NP (JJ human) (NNS beings))))
    (, ,)
    (CC and)
    (S
      (NP (RB as) (JJ such))
      (VP (VBP are)
        (ADJP (JJ passionate)
          (PP (IN about)
            (NP (DT some) (NNS things))))))
    (. .)))

nn(Atheists-3, p.s.-2)
nsubj(beings-6, Atheists-3)
cop(beings-6, are-4)
amod(beings-6, human-5)
root(ROOT-0, beings-6)
advmod(such-10, as-9)
nsubj(passionate-12, such-10)
cop(passionate-12, are-11)
conj_and(beings-6, passionate-12)
det(things-15, some-14)
prep_about(passionate-12, things-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP you))
            (VP (VBP think)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP are) (RB not)
                    (ADJP (RB emotionally) (JJ attached)
                      (PP (TO to)
                        (NP (NN anything))))))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
advmod(think-7, why-5)
nsubj(think-7, you-6)
advcl(know-4, think-7)
nsubj(attached-12, they-8)
cop(attached-12, are-9)
neg(attached-12, not-10)
advmod(attached-12, emotionally-11)
ccomp(think-7, attached-12)
prep_to(attached-12, anything-14)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP it))
    (VP (VBZ is)
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (ADVP (RB never))
            (VP (VBN debated)
              (PP (IN with)
                (NP (PRP them))))))))
    (. ?)))

advmod(is-3, Perhaps-1)
nsubj(is-3, it-2)
root(ROOT-0, is-3)
mark(debated-8, because-4)
nsubj(debated-8, you-5)
aux(debated-8, have-6)
neg(debated-8, never-7)
advcl(is-3, debated-8)
prep_with(debated-8, them-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP
            (NP (`` ``) (JJ if-then) ('' '') (NNS arguments))
            (PP (IN against)
              (NP (NNP God))))
          (VP (VBP are) (RB not)
            (VP (VBN required))))))
    (. .)))

nsubj(agree-2, I-1)
root(ROOT-0, agree-2)
complm(required-12, that-3)
amod(arguments-7, if-then-5)
nsubjpass(required-12, arguments-7)
prep_against(arguments-7, God-9)
auxpass(required-12, are-10)
neg(required-12, not-11)
ccomp(agree-2, required-12)

(ROOT
  (S
    (ADVP (RB Nevertheless))
    (, ,)
    (NP (JJ many) (NNS atheists))
    (VP (VBP develop)
      (NP (PRP them))
      (PP (IN with)
        (NP (JJ great) (NN enthusiasm))))
    (. .)))

advmod(develop-5, Nevertheless-1)
amod(atheists-4, many-3)
nsubj(develop-5, atheists-4)
root(ROOT-0, develop-5)
dobj(develop-5, them-6)
amod(enthusiasm-9, great-8)
prep_with(develop-5, enthusiasm-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (NP (DT a) (NN problem))
          (PP (IN with)
            (S
              (NP (PRP them))
              (VP (VBG doing)
                (NP (DT this))))))))
    (, ,)
    (ADVP (RB then))
    (VP (VB please)
      (VP (VB take)
        (PRT (RP up))
        (NP (PRP$ your) (NN complaint))
        (PP (IN with)
          (NP (PRP them)))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(please-12, have-3)
det(problem-5, a-4)
dobj(have-3, problem-5)
nsubj(doing-8, them-7)
prepc_with(have-3, doing-8)
dobj(doing-8, this-9)
advmod(please-12, then-11)
root(ROOT-0, please-12)
xcomp(please-12, take-13)
prt(take-13, up-14)
poss(complaint-16, your-15)
dobj(take-13, complaint-16)
prep_with(take-13, them-18)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (JJ justified)
        (PP (IN for)
          (S
            (VP (VBG inventing)
              (NP (NNS ideas)))))))
    (. .)))

nsubj(justified-3, You-1)
cop(justified-3, are-2)
root(ROOT-0, justified-3)
prepc_for(justified-3, inventing-5)
dobj(inventing-5, ideas-6)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what) (NN philosophy))
        (S
          (VP (VBZ is) (RB all)
            (ADJP (IN about))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
det(philosophy-4, what-3)
nsubj(about-7, philosophy-4)
cop(about-7, is-5)
advmod(about-7, all-6)
ccomp(is-2, about-7)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP use)
        (NP (PRP$ our) (NNS imaginations))
        (S
          (VP (TO to)
            (VP (VB try)
              (S
                (VP (TO to)
                  (VP (VB figure)
                    (NP (NN stuff))
                    (PRT (RP out))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP invent)
        (S
          (NP (NNS explanations)
            (CC or)
            (NNS concepts))
          (VP (TO to)
            (VP (VB help)
              (S
                (NP (PRP us))
                (VP (VB deal)
                  (PP (IN with)
                    (NP (NNS problems))))))))))
    (. .)))

nsubj(use-2, We-1)
root(ROOT-0, use-2)
poss(imaginations-4, our-3)
dobj(use-2, imaginations-4)
aux(try-6, to-5)
xcomp(use-2, try-6)
aux(figure-8, to-7)
xcomp(try-6, figure-8)
dobj(figure-8, stuff-9)
prt(figure-8, out-10)
nsubj(invent-14, we-13)
conj_and(use-2, invent-14)
nsubj(help-19, explanations-15)
conj_or(explanations-15, concepts-17)
nsubj(help-19, concepts-17)
aux(help-19, to-18)
xcomp(invent-14, help-19)
nsubj(deal-21, us-20)
ccomp(help-19, deal-21)
prep_with(deal-21, problems-23)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (JJ invented) (NN idea))
        (VP (VBZ sounds)
          (ADJP (JJ reasonable)
            (PP (TO to)
              (NP
                (NP (DT some))
                (, ,)
                (CONJP (CC but)
                  (RB not))
                (NP (PRP me)))))
          (, ,)
          (SBAR
            (ADVP (RB then))
            (IN if)
            (S
              (NP (PRP I))
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP (VB persuade)
                      (S
                        (NP (NNS people))
                        (VP (TO to)
                          (VP (VB abandon)
                            (NP
                              (NP (DT that) (NN idea))
                              (SBAR
                                (S
                                  (NP (PRP I))
                                  (VP (MD will)
                                    (VP (VB have)
                                      (S
                                        (VP (TO to)
                                          (VP (VB use)
                                            (NP (PRP$ my) (NN imagination)
                                              (S
                                                (VP (TO to)
                                                  (VP (VB invent)
                                                    (NP (DT an) (NN idea))
                                                    (SBAR (IN that)
                                                      (S
                                                        (NP
                                                          (NP (NNS conflicts))
                                                          (PP (IN with)
                                                            (NP (NNP and\/or))))
                                                        (VP (VBZ is)
                                                          (ADJP
                                                            (ADJP (JJR better))
                                                            (PP (IN than)
                                                              (NP (DT the) (NN idea)))))))))))))))))))))))))))))))
    (NP (PRP they))
    (VP (VBP have)
      (VP (VBN adopted)))
    (. .)))

mark(sounds-5, If-1)
det(idea-4, the-2)
amod(idea-4, invented-3)
nsubj(sounds-5, idea-4)
advcl(adopted-47, sounds-5)
acomp(sounds-5, reasonable-6)
prep_to(reasonable-6, some-8)
prep_to(reasonable-6, me-12)
conj_negcc(some-8, me-12)
advmod(want-17, then-14)
dep(want-17, if-15)
nsubj(want-17, I-16)
xsubj(persuade-19, I-16)
ccomp(sounds-5, want-17)
aux(persuade-19, to-18)
xcomp(want-17, persuade-19)
nsubj(abandon-22, people-20)
aux(abandon-22, to-21)
xcomp(persuade-19, abandon-22)
det(idea-24, that-23)
dobj(abandon-22, idea-24)
dobj(have-27, idea-24)
nsubj(have-27, I-25)
xsubj(use-29, I-25)
aux(have-27, will-26)
rcmod(idea-24, have-27)
aux(use-29, to-28)
xcomp(have-27, use-29)
poss(imagination-31, my-30)
dobj(use-29, imagination-31)
aux(invent-33, to-32)
infmod(imagination-31, invent-33)
det(idea-35, an-34)
dobj(invent-33, idea-35)
complm(better-41, that-36)
nsubj(better-41, conflicts-37)
prep_with(conflicts-37, and\/or-39)
cop(better-41, is-40)
ccomp(invent-33, better-41)
det(idea-44, the-43)
prep_than(better-41, idea-44)
nsubj(adopted-47, they-45)
aux(adopted-47, have-46)
root(ROOT-0, adopted-47)

(ROOT
  (S
    (SQ
      (ADVP (RB Here))
      (VP (VBP are)
        (NP
          (NP (DT the) (CD two))
          (ADJP
            (ADJP (NN contradictory))
            (PRN
              (NP
                (NP (NNS statements))
                (: :)
                (NP (CD 1)))
              (-RRB- -RRB-))))))
    ('' '')
    (NP (DT The) (NN supernatural))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN tested))))
    (. .)))

advmod(two-4, Here-1)
cop(two-4, are-2)
det(two-4, the-3)
dep(tested-16, two-4)
amod(two-4, contradictory-5)
dep(contradictory-5, statements-6)
dep(statements-6, 1-8)
det(supernatural-12, The-11)
nsubjpass(tested-16, supernatural-12)
aux(tested-16, can-13)
neg(tested-16, not-14)
auxpass(tested-16, be-15)
root(ROOT-0, tested-16)

