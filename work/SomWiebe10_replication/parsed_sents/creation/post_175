(ROOT
  (FRAG
    (ADJP (RB ufcarazy) (JJ -RRB-))
    (SBAR (`` ``)
      (S
        (SBAR (IN Although)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ clear)))))
        (NP (DT that) (NNP ID))
        (VP (VBZ has)
          (VP (VBN led)
            (PP (TO to)
              (NP (DT some) (JJ successful) (NNS predictions)))
            ('' '')
            (ADVP (RB Really))))))
    (. ?)))

root(ROOT-0, ufcarazy-1)
mark(clear-7, Although-4)
nsubj(clear-7, it-5)
cop(clear-7, is-6)
advcl(led-11, clear-7)
det(ID-9, that-8)
nsubj(led-11, ID-9)
aux(led-11, has-10)
dep(ufcarazy-1, led-11)
det(predictions-15, some-13)
amod(predictions-15, successful-14)
prep_to(led-11, predictions-15)
advmod(led-11, Really-17)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN predictions))
    (SQ (VBZ has)
      (NP (NNP ID))
      (VP (VBN made)))
    (. ?)))

det(predictions-2, What-1)
dobj(made-5, predictions-2)
aux(made-5, has-3)
nsubj(made-5, ID-4)
root(ROOT-0, made-5)

(ROOT
  (SBARQ
    (FRAG (CC And)
      (, ,)
      (ADVP (RB along))
      (NP (DT those) (NNS lines)))
    (, ,)
    (SBARQ
      (WHNP (WRB how) (RB exactly))
      (SQ (MD would)
        (NP (NNP ID))
        (VP (VB be)
          (ADJP (JJ falsifiable)))))
    (. ?)))

dep(lines-5, And-1)
dep(lines-5, along-3)
det(lines-5, those-4)
dep(falsifiable-12, lines-5)
advmod(exactly-8, how-7)
dep(falsifiable-12, exactly-8)
aux(falsifiable-12, would-9)
nsubj(falsifiable-12, ID-10)
cop(falsifiable-12, be-11)
root(ROOT-0, falsifiable-12)

(ROOT
  (S
    (PP (IN Without)
      (NP
        (NP (JJ valid) (NNS answers))
        (PP (TO to)
          (NP (DT these) (CD two) (NNS questions)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does) (RB not)
      (ADVP (RB even))
      (VP (VB begin)
        (S
          (VP (TO to)
            (VP (VB qualify)
              (PP (IN as)
                (NP (NN science))))))))
    (. .)))

amod(answers-3, valid-2)
prep_without(begin-13, answers-3)
det(questions-7, these-5)
num(questions-7, two-6)
prep_to(answers-3, questions-7)
nsubj(begin-13, it-9)
xsubj(qualify-15, it-9)
aux(begin-13, does-10)
neg(begin-13, not-11)
advmod(begin-13, even-12)
root(ROOT-0, begin-13)
aux(qualify-15, to-14)
xcomp(begin-13, qualify-15)
prep_as(qualify-15, science-17)

