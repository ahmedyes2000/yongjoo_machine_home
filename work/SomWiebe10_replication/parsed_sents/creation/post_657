(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN past)))
    (, ,)
    (NP (DT the) (NN flagellum))
    (VP (VBD was)
      (ADVP (RB supposedly))
      (NP
        (NP (DT an) (NN example))
        (PP (IN of)
          (NP (DT an) (`` ``)
            (ADJP (RB irreducibly) (JJ complex))
            ('' '') (NN biological) (NN structure)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD could) (RB not)
              (VP (VB evolve)))))))
    (. .)))

det(past-3, the-2)
prep_in(example-10, past-3)
det(flagellum-6, the-5)
nsubj(example-10, flagellum-6)
cop(example-10, was-7)
advmod(example-10, supposedly-8)
det(example-10, an-9)
root(ROOT-0, example-10)
nsubj(evolve-22, example-10)
det(structure-18, an-12)
advmod(complex-15, irreducibly-14)
amod(structure-18, complex-15)
nn(structure-18, biological-17)
prep_of(example-10, structure-18)
aux(evolve-22, could-20)
neg(evolve-22, not-21)
rcmod(example-10, evolve-22)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (NNP Luskin))
    (VP
      (VP (VBZ is)
        (VP (VBN reduced)
          (SBAR
            (S
              (NP (TO to))
              (`` ``)
              (VP (MD may))
              ('' '')))))
      (: :) (`` ``)
      (VP (MD may)
        (VP (VB indicate)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN flagellum))
              (VP (VBD arose)
                (PP (IN by)
                  (NP
                    (NP (JJ intelligent) (NN design) ('' ''))
                    (NP (NNP May))))))))))
    (. ?)))

advmod(reduced-4, Now-1)
nsubjpass(reduced-4, Luskin-2)
auxpass(reduced-4, is-3)
root(ROOT-0, reduced-4)
nsubj(may-7, to-5)
ccomp(reduced-4, may-7)
aux(indicate-12, may-11)
dep(reduced-4, indicate-12)
complm(arose-16, that-13)
det(flagellum-15, the-14)
nsubj(arose-16, flagellum-15)
ccomp(indicate-12, arose-16)
amod(design-19, intelligent-18)
prep_by(arose-16, design-19)
dep(design-19, May-21)

(ROOT
  (S
    (NP (`` ``) (JJ Intelligent) (NN design) ('' '') (NN MAY))
    (VP (VBP have)
      (NP (DT some) (NN evidence)))
    (. ?)))

amod(MAY-5, Intelligent-2)
nn(MAY-5, design-3)
nsubj(have-6, MAY-5)
root(ROOT-0, have-6)
det(evidence-8, some-7)
dobj(have-6, evidence-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN judge))
      (VP (VBN ruled) ('' '')
        (NP (PRP It))))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (NN science))
        ('' '')
        (CC and)
        (NP (NN nothing)))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT any))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ ID) (`` ``) (NNS scientists) ('' ''))
                (SBAR
                  (S
                    (VP (VBP have)
                      (ADVP (RB ever))
                      (VP (VBN done))))))))
          (VP (MD would)
            (VP (VB lead)
              (PP (TO to)
                (NP (DT the) (NN conclusion)))
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBD was)
                    (NP
                      (NP (DT any) (NN possibility))
                      (PP (IN of)
                        (NP
                          (NP (JJ actual) (NN science))
                          (VP (VBG being)
                            (VP (VBN involved)
                              (PP (IN with) (`` ``)
                                (NP (JJ intelligent) (NN design))
                                ('' '')))))))))))))))
    (. .)))

det(judge-2, The-1)
nsubj(science-8, judge-2)
partmod(judge-2, ruled-3)
dobj(ruled-3, It-5)
cop(science-8, 's-6)
neg(science-8, not-7)
root(ROOT-0, science-8)
conj_and(science-8, nothing-11)
complm(lead-24, that-12)
nsubj(lead-24, any-13)
det(scientists-18, the-15)
amod(scientists-18, ID-16)
prep_of(any-13, scientists-18)
aux(done-22, have-20)
advmod(done-22, ever-21)
rcmod(scientists-18, done-22)
aux(lead-24, would-23)
ccomp(science-8, lead-24)
det(conclusion-27, the-26)
prep_to(lead-24, conclusion-27)
complm(was-30, that-28)
expl(was-30, there-29)
ccomp(lead-24, was-30)
det(possibility-32, any-31)
nsubj(was-30, possibility-32)
amod(science-35, actual-34)
prep_of(possibility-32, science-35)
auxpass(involved-37, being-36)
partmod(science-35, involved-37)
amod(design-41, intelligent-40)
prep_with(involved-37, design-41)

(ROOT
  (S
    (S
      (NP (NNP Luskin))
      (VP (VBZ quotes)
        (NP (DT an) (NN attempt)
          (S
            (VP (TO to)
              (VP (VB avoid)
                (NP (DT the) (NN supernatural))))))))
    (: :) (`` ``)
    (S
      (NP
        (NP (NNP Explanations))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP call)
              (PP (IN on)
                (NP (JJ intelligent) (NNS causes)))))))
      (VP
        (VP (VBP require)
          (NP (DT no) (NNS miracles)))
        (CC but)
        (VP (MD can) (RB not)
          (VP (VB be)
            (VP (VBN reduced)
              (PP (TO to)
                (NP (JJ materialistic) (NNS explanations))))))))
    (. .)))

nsubj(quotes-2, Luskin-1)
root(ROOT-0, quotes-2)
det(attempt-4, an-3)
dobj(quotes-2, attempt-4)
aux(avoid-6, to-5)
infmod(attempt-4, avoid-6)
det(supernatural-8, the-7)
dobj(avoid-6, supernatural-8)
nsubj(call-13, Explanations-11)
nsubj(require-17, Explanations-11)
nsubjpass(reduced-24, Explanations-11)
rcmod(Explanations-11, call-13)
amod(causes-16, intelligent-15)
prep_on(call-13, causes-16)
ccomp(quotes-2, require-17)
det(miracles-19, no-18)
dobj(require-17, miracles-19)
aux(reduced-24, can-21)
neg(reduced-24, not-22)
auxpass(reduced-24, be-23)
ccomp(quotes-2, reduced-24)
conj_but(require-17, reduced-24)
amod(explanations-27, materialistic-26)
prep_to(reduced-24, explanations-27)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ seems)
      (PP (TO to)
        (NP (PRP me)))
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT an) (JJ obvious) (NN contradiction))
              (SBAR
                (S (`` ``)
                  (S
                    (VP (MD can) (RB not)
                      (VP (VB be)
                        (VP (VBN reduced)
                          (PP (TO to)
                            (NP (JJ materialistic) (NNS explanations)))))))
                  ('' '')
                  (VP (VBZ means)
                    (NP (`` ``)
                      (NP (DT no) (JJ natural) (NN explanation))
                      ('' '')
                      (CC and)
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ means)
                            (NP (DT a) (`` ``) (JJ supernatural) (NN explanation) ('' ''))))))))))))))
    (. .)))

nsubj(seems-3, This-2)
xsubj(contradiction-10, This-2)
root(ROOT-0, seems-3)
prep_to(seems-3, me-5)
aux(contradiction-10, to-6)
cop(contradiction-10, be-7)
det(contradiction-10, an-8)
amod(contradiction-10, obvious-9)
xcomp(seems-3, contradiction-10)
aux(reduced-15, can-12)
neg(reduced-15, not-13)
auxpass(reduced-15, be-14)
ccomp(means-20, reduced-15)
csubj(means-20, reduced-15)
amod(explanations-18, materialistic-17)
prep_to(reduced-15, explanations-18)
rcmod(contradiction-10, means-20)
det(explanation-24, no-22)
amod(explanation-24, natural-23)
dobj(means-20, explanation-24)
nsubj(means-28, that-27)
dobj(means-20, means-28)
conj_and(explanation-24, means-28)
rcmod(explanation-24, means-28)
det(explanation-32, a-29)
amod(explanation-32, supernatural-31)
dobj(means-28, explanation-32)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (VBP are)
      (NP (PRP they))
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB fool))))))
    (. ?)))

dep(trying-4, Who-1)
aux(trying-4, are-2)
nsubj(trying-4, they-3)
xsubj(fool-6, they-3)
root(ROOT-0, trying-4)
aux(fool-6, to-5)
xcomp(trying-4, fool-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD did) (RB n't)
      (VP (VB fool)
        (NP (DT a) (JJ federal) (NN judge))))
    (. !)))

nsubj(fool-4, They-1)
aux(fool-4, did-2)
neg(fool-4, n't-3)
root(ROOT-0, fool-4)
det(judge-7, a-5)
amod(judge-7, federal-6)
dobj(fool-4, judge-7)

(ROOT
  (S
    (ADVP (RB Finally))
    (S
      (NP (PRP we))
      (VP (VBP get)
        (PP (TO to)
          (NP (DT the) (JJ fundamental) (NN question)))))
    (: :) (`` ``)
    (S
      (NP (NNP ID))
      (VP (VBZ makes)
        (NP (JJ reliable) (NNS inferences))))
    (. .)))

advmod(get-3, Finally-1)
nsubj(get-3, we-2)
root(ROOT-0, get-3)
det(question-7, the-5)
amod(question-7, fundamental-6)
prep_to(get-3, question-7)
nsubj(makes-11, ID-10)
ccomp(get-3, makes-11)
amod(inferences-13, reliable-12)
dobj(makes-11, inferences-13)

(ROOT
  (S ('' '')
    (S
      (ADVP (RB Well))
      (ADVP (RB maybe))
      (NP (NNP Luskin))
      (VP (VBZ wishes)
        (S
          (VP (TO to)
            (VP (VB assert)
              (NP (DT that)))))))
    (, ,)
    (CC but)
    (S
      (NP (NNS scientists))
      (VP (VBP say)
        (NP (`` ``) (NN nonsense) ('' ''))))
    (. .)))

advmod(wishes-5, Well-2)
advmod(wishes-5, maybe-3)
nsubj(wishes-5, Luskin-4)
xsubj(assert-7, Luskin-4)
root(ROOT-0, wishes-5)
aux(assert-7, to-6)
xcomp(wishes-5, assert-7)
dobj(assert-7, that-8)
nsubj(say-12, scientists-11)
conj_but(wishes-5, say-12)
dobj(say-12, nonsense-14)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (NNP ID))
      (VP (VB convince)
        (NP (NNS scientists))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN requirement))
              (PP (IN of)
                (NP (DT an) (`` ``) (JJ intelligent) (NN cause) ('' ''))))
            (VP (VBZ is)
              (NP (DT a) (`` ``) (JJ reliable) (NN inference) ('' '')))))))
    (. ?)))

advmod(convince-4, How-1)
aux(convince-4, can-2)
nsubj(convince-4, ID-3)
root(ROOT-0, convince-4)
dobj(convince-4, scientists-5)
complm(inference-19, that-6)
det(requirement-8, the-7)
nsubj(inference-19, requirement-8)
det(cause-13, an-10)
amod(cause-13, intelligent-12)
prep_of(requirement-8, cause-13)
cop(inference-19, is-15)
det(inference-19, a-16)
amod(inference-19, reliable-18)
ccomp(convince-4, inference-19)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP have)
      (VP (VBN tried)
        (CC and)
        (VBN failed)
        (PP (IN for)
          (NP
            (QP (JJR more) (IN than) (CD 10))
            (NNS years)))))
    (. .)))

nsubj(tried-3, They-1)
nsubj(failed-5, They-1)
aux(tried-3, have-2)
root(ROOT-0, tried-3)
conj_and(tried-3, failed-5)
mwe(than-8, more-7)
quantmod(10-9, than-8)
num(years-10, 10-9)
prep_for(tried-3, years-10)

(ROOT
  (S
    (S
      (NP (PRP$ Their) (NN attempt))
      (VP (VBZ is)))
    (: :) (`` ``)
    (S
      (NP
        (NP (PRP$ Our) (JJ experience-based) (NN knowledge))
        (PP (IN of)
          (NP (NN information-flow))))
      (VP (VBZ confirms)
        (SBAR (IN that)
          (S
            (NP
              (NP (NNS systems))
              (PP (IN with)
                (NP
                  (NP (JJ large) (NNS amounts))
                  (PP (IN of)
                    (NP
                      (NP (JJ specified) (NN complexity))
                      (PRN (-LRB- -LRB-)
                        (NP (RB especially) (NN codes)
                          (CC and)
                          (NNS languages))
                        (-RRB- -RRB-)))))))
            (ADVP (RB invariably))
            (VP (VB originate)
              (PP (IN from)
                (NP (DT an) (JJ intelligent) (NN source)))
              (PP (IN from)
                (NP
                  (NP (DT a) (NN mind))
                  (CC or)
                  (NP (JJ personal) (NN agent)))))))))
    (. .)))

poss(attempt-2, Their-1)
nsubj(is-3, attempt-2)
root(ROOT-0, is-3)
poss(knowledge-8, Our-6)
amod(knowledge-8, experience-based-7)
nsubj(confirms-11, knowledge-8)
prep_of(knowledge-8, information-flow-10)
ccomp(is-3, confirms-11)
complm(originate-27, that-12)
nsubj(originate-27, systems-13)
amod(amounts-16, large-15)
prep_with(systems-13, amounts-16)
amod(complexity-19, specified-18)
prep_of(amounts-16, complexity-19)
advmod(codes-22, especially-21)
appos(complexity-19, codes-22)
appos(complexity-19, languages-24)
conj_and(codes-22, languages-24)
advmod(originate-27, invariably-26)
ccomp(confirms-11, originate-27)
det(source-31, an-29)
amod(source-31, intelligent-30)
prep_from(originate-27, source-31)
det(mind-34, a-33)
prep_from(originate-27, mind-34)
amod(agent-37, personal-36)
prep_from(originate-27, agent-37)
conj_or(mind-34, agent-37)

(ROOT
  (S ('' '')
    (ADVP (RB Fundamentally))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN appeal))
        (PP (TO to)
          (NP
            (NP (PRP$ our) (NN knowledge))
            (PP (IN of)
              (NP (JJ human) (NN agency)))))))
    (. .)))

advmod(appeal-7, Fundamentally-2)
nsubj(appeal-7, this-4)
cop(appeal-7, is-5)
det(appeal-7, an-6)
root(ROOT-0, appeal-7)
poss(knowledge-10, our-9)
prep_to(appeal-7, knowledge-10)
amod(agency-13, human-12)
prep_of(knowledge-10, agency-13)

(ROOT
  (S
    (NP (NNS Humans))
    (VP (VBP are) (`` ``)
      (ADJP (JJ intelligent))
      ('' ''))
    (. .)))

nsubj(intelligent-4, Humans-1)
cop(intelligent-4, are-2)
root(ROOT-0, intelligent-4)

(ROOT
  (FRAG (CC Or)
    (RB maybe)
    (ADVP (RB not))
    (. .)))

dep(maybe-2, Or-1)
root(ROOT-0, maybe-2)
neg(maybe-2, not-3)

(ROOT
  (S
    (NP (NNS Humans))
    (VP (VBP create)
      (S (`` ``)
        (NP (JJ complex) (NN information) (NNS systems))
        ('' '')))
    (. .)))

nsubj(create-2, Humans-1)
root(ROOT-0, create-2)
amod(systems-6, complex-4)
nn(systems-6, information-5)
dep(create-2, systems-6)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (NN life) (NNS forms))
    (VP (VBD were)
      (VP (VBN created)
        (PP (IN in)
          (NP (DT some) (JJ unspecified) (NN way)))
        (PP (IN by)
          (NP
            (NP (DT some) (JJ unspecified) (NN entity))
            (PP (IN at)
              (NP
                (NP (DT some) (JJ unspecified) (NN time))
                (PP (IN in)
                  (NP (DT the) (NN past)))))))
        (PP (IN by)
          (NP (DT an) (`` ``) (JJ intelligent) (NN designer) ('' '')))))
    (. .)))

advmod(created-5, Therefore-1)
nn(forms-3, life-2)
nsubjpass(created-5, forms-3)
auxpass(created-5, were-4)
root(ROOT-0, created-5)
det(way-9, some-7)
amod(way-9, unspecified-8)
prep_in(created-5, way-9)
det(entity-13, some-11)
amod(entity-13, unspecified-12)
agent(created-5, entity-13)
det(time-17, some-15)
amod(time-17, unspecified-16)
prep_at(entity-13, time-17)
det(past-20, the-19)
prep_in(time-17, past-20)
det(designer-25, an-22)
amod(designer-25, intelligent-24)
agent(created-5, designer-25)

(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (NN evolution))
      (VP (VBZ is)
        (NP (DT a)
          (ADJP (RB perfectly) (JJ good))
          (NN explanation))))
    (CC and)
    (S
      (NP
        (NP (DT the) (`` ``) (JJ reliable) (NN inference) ('' ''))
        (PP (IN of)
          (NP (`` ``) (JJ intelligent) (NN design) ('' ''))))
      (VP (VBZ is)
        (NP (NN nonsense))))
    (. .)))

dep(explanation-8, Well-1)
nsubj(explanation-8, evolution-3)
cop(explanation-8, is-4)
det(explanation-8, a-5)
advmod(good-7, perfectly-6)
amod(explanation-8, good-7)
root(ROOT-0, explanation-8)
det(inference-13, the-10)
amod(inference-13, reliable-12)
nsubj(nonsense-21, inference-13)
amod(design-18, intelligent-17)
prep_of(inference-13, design-18)
cop(nonsense-21, is-20)
conj_and(explanation-8, nonsense-21)

(ROOT
  (S
    (S
      (NP
        (NP (NN Luskin) (NNS attempts))
        (PRN (-LRB- -LRB-)
          (PP (IN for)
            (NP (DT the) (JJ 100th) (NN time)))
          (-RRB- -RRB-)))
      (ADVP (RB so))
      (VP (VBP convince)
        (NP (NNS skeptics))
        (SBAR (IN that)
          (S
            (NP (NNP ID))
            (ADVP (RB really))
            (ADVP (RB really))
            (VP (VBZ is)
              (ADJP (JJ scientific)))))))
    (: :) (`` ``)
    (S
      (NP (NNS Scientists))
      (ADVP (RB then))
      (VP (VBP perform)
        (NP (JJ experimental) (NNS tests))
        (PP (IN upon)
          (NP (JJ natural) (NNS objects)))
        (S
          (VP (TO to)
            (VP (VB determine)
              (SBAR (IN if)
                (S
                  (NP (PRP they))
                  (VP (VBP contain)
                    (NP
                      (NP (NN complex))
                      (CC and)
                      (NP (VBN specified) (NN information)))))))))))
    (. .)))

nn(attempts-2, Luskin-1)
nsubj(convince-10, attempts-2)
dep(attempts-2, for-4)
det(time-7, the-5)
amod(time-7, 100th-6)
pobj(for-4, time-7)
advmod(convince-10, so-9)
root(ROOT-0, convince-10)
dobj(convince-10, skeptics-11)
complm(scientific-17, that-12)
nsubj(scientific-17, ID-13)
advmod(scientific-17, really-14)
advmod(scientific-17, really-15)
cop(scientific-17, is-16)
ccomp(convince-10, scientific-17)
nsubj(perform-22, Scientists-20)
xsubj(determine-29, Scientists-20)
advmod(perform-22, then-21)
ccomp(convince-10, perform-22)
amod(tests-24, experimental-23)
dobj(perform-22, tests-24)
amod(objects-27, natural-26)
prep_upon(perform-22, objects-27)
aux(determine-29, to-28)
xcomp(perform-22, determine-29)
mark(contain-32, if-30)
nsubj(contain-32, they-31)
advcl(determine-29, contain-32)
dobj(contain-32, complex-33)
amod(information-36, specified-35)
dobj(contain-32, information-36)
conj_and(complex-33, information-36)

(ROOT
  (S
    (VP
      (NP
        (NP (-LRB- -LRB-) (NNP 24) (-RRB- -RRB-))
        ('' '')
        (SBAR
          (S
            (S (CC But)
              (NP (NNS skeptics))
              (VP (VBP reject)
                (NP
                  (NP (DT this) (NN assertion))
                  (PP (IN for)
                    (NP (DT the) (JJ 100th) (NN time))))
                (PP (IN by)
                  (S
                    (VP (VBG pointing)
                      (PRT (RP out))
                      (SBAR (IN that)
                        (S (`` ``)
                          (NP
                            (NP (NN complex))
                            (CC and)
                            (NP (VBN specified) (NN information)))
                          ('' '')
                          (VP (VBZ is)
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NN eye))
                                (PP (IN of)
                                  (NP (DT the) (NN beholder)))))))))))))
            (CC and)
            (S
              (ADVP (RB not))
              (VP
                (ADVP (RB properly))
                (VBN defined)
                (SBAR (RB so) (IN that)
                  (S
                    (NP (PRP it))
                    (VP (MD could)
                      (VP (VB be)
                        (VP (VBN used)
                          (PP (IN by)
                            (NP (DT a) (NN scientist))))))))))))))
    (. .)))

root(ROOT-0, 24-2)
nsubj(reject-7, skeptics-6)
nsubj(defined-34, skeptics-6)
rcmod(24-2, reject-7)
det(assertion-9, this-8)
dobj(reject-7, assertion-9)
det(time-13, the-11)
amod(time-13, 100th-12)
prep_for(assertion-9, time-13)
prepc_by(reject-7, pointing-15)
prt(pointing-15, out-16)
complm(is-24, that-17)
nsubj(is-24, complex-19)
amod(information-22, specified-21)
conj_and(complex-19, information-22)
nsubj(is-24, information-22)
ccomp(pointing-15, is-24)
det(eye-27, the-26)
prep_in(is-24, eye-27)
det(beholder-30, the-29)
prep_of(eye-27, beholder-30)
neg(defined-34, not-32)
advmod(defined-34, properly-33)
rcmod(24-2, defined-34)
conj_and(reject-7, defined-34)
advmod(used-40, so-35)
dep(used-40, that-36)
nsubjpass(used-40, it-37)
aux(used-40, could-38)
auxpass(used-40, be-39)
advcl(defined-34, used-40)
ccomp(defined-34, used-40)
det(scientist-43, a-42)
agent(used-40, scientist-43)

(ROOT
  (S (CC And)
    (NP
      (NP (`` ``) (NN irreducible) (NN complexity) ('' ''))
      (PP (IN of)
        (NP (DT a) (JJ biological) (NN system))))
    (VP (VBZ is)
      (ADVP (RB simply))
      (NP (DT a) (JJ false) (NN assertion)))
    (. .)))

cc(assertion-14, And-1)
nn(complexity-4, irreducible-3)
nsubj(assertion-14, complexity-4)
det(system-9, a-7)
amod(system-9, biological-8)
prep_of(complexity-4, system-9)
cop(assertion-14, is-10)
advmod(assertion-14, simply-11)
det(assertion-14, a-12)
amod(assertion-14, false-13)
root(ROOT-0, assertion-14)

(ROOT
  (S
    (NP (NNP Luskin))
    (ADVP (RB then))
    (VP (VBZ provides)
      (NP
        (NP (CD one) (JJ final) (JJ false) (NN assertion))
        (: :) (`` ``)
        (S
          (NP (NNP ID))
          (VP (VBZ has)
            (ADVP (RB also))
            (VP (VBN provided)
              (NP (JJ new) (NNS insights))
              (PP (IN into)
                (NP
                  (NP (NN biology))
                  ('' '')
                  (SBAR
                    (S
                      (INTJ (UH Well))
                      (, ,)
                      (NP (CD 10000) (NNS scientists))
                      (VP (VBP say)
                        (SBAR (IN that)
                          (S
                            (NP (JJ such) (`` ``) (NNS insights) ('' ''))
                            (VP (VBD were)
                              (ADJP (RB really) (`` ``) (JJ distractions) ('' '')))))))))))))))
    (. .)))

nsubj(provides-3, Luskin-1)
advmod(provides-3, then-2)
root(ROOT-0, provides-3)
num(assertion-7, one-4)
amod(assertion-7, final-5)
amod(assertion-7, false-6)
dobj(provides-3, assertion-7)
nsubj(provided-13, ID-10)
aux(provided-13, has-11)
advmod(provided-13, also-12)
dep(assertion-7, provided-13)
amod(insights-15, new-14)
dobj(provided-13, insights-15)
prep_into(provided-13, biology-17)
dep(say-23, Well-19)
num(scientists-22, 10000-21)
nsubj(say-23, scientists-22)
rcmod(biology-17, say-23)
complm(distractions-32, that-24)
amod(insights-27, such-25)
nsubj(distractions-32, insights-27)
cop(distractions-32, were-29)
advmod(distractions-32, really-30)
ccomp(say-23, distractions-32)

(ROOT
  (NP (JJ Such) (NN nonsense) (. .)))

amod(nonsense-2, Such-1)
root(ROOT-0, nonsense-2)

(ROOT
  (S
    (NP (NNP Luskin))
    (VP (VBZ says)
      (PP (IN of)
        (NP (NNP Dembski)))
      (: :) (`` ``)
      (S
        (NP (DT This))
        (VP (VBZ provides)
          (NP (PRP him))
          (PP (IN with)
            (NP
              (NP (DT an) (JJ ideal) (NN background))
              (SBAR
                (S
                  (VP (VBP provide)
                    (S
                      (VP (VBG giving)
                        (NP (DT a) (JJ rigorous) (JJ mathematical) (NN methodology))
                        (PP (IN for)
                          (NP (JJ detecting) (NN design) ('' '') (NN Riiight)))))))))))))
    (. .)))

nsubj(says-2, Luskin-1)
root(ROOT-0, says-2)
prep_of(says-2, Dembski-4)
nsubj(provides-8, This-7)
ccomp(says-2, provides-8)
dobj(provides-8, him-9)
det(background-13, an-11)
amod(background-13, ideal-12)
prep_with(provides-8, background-13)
rcmod(background-13, provide-14)
xcomp(provide-14, giving-15)
det(methodology-19, a-16)
amod(methodology-19, rigorous-17)
amod(methodology-19, mathematical-18)
dobj(giving-15, methodology-19)
amod(Riiight-24, detecting-21)
nn(Riiight-24, design-22)
prep_for(giving-15, Riiight-24)

(ROOT
  (S
    (ADVP (RB Too) (RB bad))
    (NP (PRP he))
    (VP (VBZ has)
      (ADVP (RB utterly))
      (VP (VBN failed)
        (PP (IN at)
          (NP (DT any) (NN attempt)))
        (S
          (VP (TO to)
            (VP (VB give) (`` ``)
              (NP
                (NP (DT a) (JJ rigorous) (JJ mathematical) (NN methodology))
                (PP (IN for)
                  (NP (JJ detecting) (NN design))))
              ('' '')
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ last) (NN decade))
                  (CC or)
                  (NP (CD two)))))))))
    (. .)))

advmod(bad-2, Too-1)
advmod(failed-6, bad-2)
nsubj(failed-6, he-3)
xsubj(give-11, he-3)
aux(failed-6, has-4)
advmod(failed-6, utterly-5)
root(ROOT-0, failed-6)
det(attempt-9, any-8)
prep_at(failed-6, attempt-9)
aux(give-11, to-10)
xcomp(failed-6, give-11)
det(methodology-16, a-13)
amod(methodology-16, rigorous-14)
amod(methodology-16, mathematical-15)
dobj(give-11, methodology-16)
amod(design-19, detecting-18)
prep_for(methodology-16, design-19)
det(decade-24, the-22)
amod(decade-24, last-23)
prep_in(give-11, decade-24)
prep_in(give-11, two-26)
conj_or(decade-24, two-26)

(ROOT
  (FRAG
    (NP (NNP Luskin) (NNP opines))
    (: :) (`` ``)
    (S (CC But)
      (NP (JJ federal) (NNS judges))
      (VP (MD can)
        (VP (VB get)
          (NP (NNS things))
          (ADVP (RB wrong))
          (NP (PDT all) (DT the) (NN time)))))
    (. .)))

nn(opines-2, Luskin-1)
root(ROOT-0, opines-2)
cc(get-9, But-5)
amod(judges-7, federal-6)
nsubj(get-9, judges-7)
aux(get-9, can-8)
dep(opines-2, get-9)
dobj(get-9, things-10)
advmod(get-9, wrong-11)
predet(time-14, all-12)
det(time-14, the-13)
dobj(get-9, time-14)

(ROOT
  (NP (NNP '') (NNP Riiiight) (. .)))


(ROOT
  (S
    (NP (DT This) (JJ federal) (NN judge))
    (VP
      (VP (VBD held)
        (NP (DT a) (NN trial))
        (PP (IN for)
          (NP (CD six) (NNS weeks))))
      (CC and)
      (VP (VBD ruled)
        (PP (IN against) (`` ``)
          (NP (JJ intelligent) (NN design) (NN creationism))
          ('' ''))
        (PP (IN in)
          (NP (DT every) (JJ single) (NN respect)))))
    (. .)))

det(judge-3, This-1)
amod(judge-3, federal-2)
nsubj(held-4, judge-3)
nsubj(ruled-11, judge-3)
root(ROOT-0, held-4)
det(trial-6, a-5)
dobj(held-4, trial-6)
num(weeks-9, six-8)
prep_for(held-4, weeks-9)
conj_and(held-4, ruled-11)
amod(creationism-16, intelligent-14)
nn(creationism-16, design-15)
prep_against(ruled-11, creationism-16)
det(respect-21, every-19)
amod(respect-21, single-20)
prep_in(ruled-11, respect-21)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP (VBP guess)
      (SBAR
        (S
          (NP
            (NP (PRP it) (POS 's))
            (NN time)
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP
                    (NP (DT a) (`` ``) (NN debate) ('' ''))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN court))
                        (PP (IN of)
                          (NP (`` ``) (JJ public) (NN opinion) ('' ''))))))
                  (SBAR (IN in) (NN order)
                    (S
                      (VP (TO to)
                        (VP (VB try)
                          (S
                            (VP (TO to)
                              (VP (VB get)
                                (NP (DT the) (NN verdict)))))))))))))
          (VP (VBD overturned)))))
    (. ?)))

dep(guess-3, So-1)
nsubj(guess-3, I-2)
root(ROOT-0, guess-3)
poss(time-6, it-4)
nsubj(overturned-29, time-6)
aux(have-8, to-7)
infmod(time-6, have-8)
det(debate-11, a-9)
dobj(have-8, debate-11)
det(court-15, the-14)
prep_in(debate-11, court-15)
amod(opinion-19, public-18)
prep_of(court-15, opinion-19)
mark(try-24, in-21)
dep(try-24, order-22)
aux(try-24, to-23)
purpcl(have-8, try-24)
aux(get-26, to-25)
xcomp(try-24, get-26)
det(verdict-28, the-27)
dobj(get-26, verdict-28)
ccomp(guess-3, overturned-29)

