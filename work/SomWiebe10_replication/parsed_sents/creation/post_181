(ROOT
  (S (`` ``)
    (S
      (NP (EX there))
      (VP (VBD was)
        (ADJP (JJ much))
        (SBAR (IN that)
          (S
            (NP (NNP Darwin))
            (VP (VBD did) (RB not)
              (VP (VB know)
                (PP (IN at)
                  (NP (DT that) (NN time)))
                (SBAR (IN that)
                  (S
                    (NP (PRP we))
                    (ADVP (RB now))
                    (VP (VBP know))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (JJ original) (NN theory))
      (VP (VBZ has)
        (ADVP (IN since))
        (VP (VBN been)
          (VP (VBN supplanted)
            (PP (IN by)
              (NP
                (NP (JJR more) (JJ modern) (NNS versions))
                (PP (IN of)
                  (NP (PRP$ his) (NN theory)))))))))
    (. .)))

expl(was-3, there-2)
root(ROOT-0, was-3)
acomp(was-3, much-4)
complm(know-9, that-5)
nsubj(know-9, Darwin-6)
aux(know-9, did-7)
neg(know-9, not-8)
ccomp(was-3, know-9)
det(time-12, that-11)
prep_at(know-9, time-12)
complm(know-16, that-13)
nsubj(know-16, we-14)
advmod(know-16, now-15)
ccomp(know-9, know-16)
poss(theory-21, his-19)
amod(theory-21, original-20)
nsubjpass(supplanted-25, theory-21)
aux(supplanted-25, has-22)
advmod(supplanted-25, since-23)
auxpass(supplanted-25, been-24)
conj_and(was-3, supplanted-25)
amod(versions-29, more-27)
amod(versions-29, modern-28)
agent(supplanted-25, versions-29)
poss(theory-32, his-31)
prep_of(versions-29, theory-32)

(ROOT
  (S ('' '')
    (ADVP (RB First))
    (, ,)
    (VP (VBP do) (RB n't)
      (VP (VB make)
        (NP (DT a) (JJ darwin) (JJ of-the-gaps) (NN argument))))
    (. .)))

advmod(make-6, First-2)
aux(make-6, do-4)
neg(make-6, n't-5)
root(ROOT-0, make-6)
det(argument-10, a-7)
amod(argument-10, darwin-8)
amod(argument-10, of-the-gaps-9)
dobj(make-6, argument-10)

(ROOT
  (S
    (S
      (SBAR (IN Since)
        (S
          (NP (PRP it))
          (VP (VBZ contains)
            (NP
              (NP (RB only) (CD two) (NNS letters))
              (PP (RB instead) (IN of)
                (NP (CD 4)))))))
      (NP (PRP it))
      (VP (MD would)
        (ADVP (RB actually))
        (VP (VB be)
          (ADJP (RBR more) (JJ likely)
            (S
              (VP (TO to)
                (VP (VB occur))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ 's) (RB not)
        (NP (DT the) (NN point))))
    (. .)))

mark(contains-3, Since-1)
nsubj(contains-3, it-2)
advcl(likely-15, contains-3)
advmod(letters-6, only-4)
num(letters-6, two-5)
dobj(contains-3, letters-6)
prep_instead_of(letters-6, 4-9)
nsubj(likely-15, it-10)
aux(likely-15, would-11)
advmod(likely-15, actually-12)
cop(likely-15, be-13)
advmod(likely-15, more-14)
root(ROOT-0, likely-15)
aux(occur-17, to-16)
xcomp(likely-15, occur-17)
nsubj(point-24, that-20)
cop(point-24, 's-21)
neg(point-24, not-22)
det(point-24, the-23)
conj_but(likely-15, point-24)

(ROOT
  (S
    (SBARQ
      (WHNP (WP What))
      (SQ
        (VP (VBZ 's)))
      (: -))
    (NP (NN his-face))
    (VP (VBD asked)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB explain)
            (NP
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is)
                    (VP (VBN meant)
                      (PP (IN by)
                        (NP (VBN specified) (NN complexity)))))))
              (CC and)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP I))
                        (VP (VBD did))))))))))))
    (. .)))

nsubj('s-2, What-1)
dep(asked-5, 's-2)
nsubj(asked-5, his-face-4)
root(ROOT-0, asked-5)
nsubj(explain-8, me-6)
aux(explain-8, to-7)
xcomp(asked-5, explain-8)
nsubjpass(meant-11, what-9)
auxpass(meant-11, is-10)
dobj(explain-8, meant-11)
amod(complexity-14, specified-13)
agent(meant-11, complexity-14)
nsubj(is-17, that-16)
dobj(explain-8, is-17)
conj_and(meant-11, is-17)
dobj(did-20, what-18)
nsubj(did-20, I-19)
ccomp(is-17, did-20)

(ROOT
  (S ('' '')
    (S
      (NP (PRP It))
      (VP (VBD was)
        (VP (VBN put)
          (ADVP (RB forth))
          (SBAR (IN that)
            (S
              (NP (DT the) (NN flagellum))
              (VP (VBD was)
                (ADJP (RB irreducibly) (JJ complex))))))))
    (, ,)
    (NP (DT this))
    (VP (VBD was)
      (VP (VBN shown)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ false) ('' '')))))
        (SBAR
          (S
            (NP (DT An) (JJ untestable) (NN claim))
            (VP (MD can) (RB not)
              (VP (VB be)
                (VP (VBN shown)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ false))))))))))))
    (. .)))

nsubjpass(put-4, It-2)
auxpass(put-4, was-3)
ccomp(shown-15, put-4)
advmod(put-4, forth-5)
complm(complex-11, that-6)
det(flagellum-8, the-7)
nsubj(complex-11, flagellum-8)
cop(complex-11, was-9)
advmod(complex-11, irreducibly-10)
ccomp(put-4, complex-11)
nsubjpass(shown-15, this-13)
xsubj(false-18, this-13)
auxpass(shown-15, was-14)
root(ROOT-0, shown-15)
aux(false-18, to-16)
cop(false-18, be-17)
xcomp(shown-15, false-18)
det(claim-22, An-20)
amod(claim-22, untestable-21)
nsubjpass(shown-26, claim-22)
aux(shown-26, can-23)
neg(shown-26, not-24)
auxpass(shown-26, be-25)
ccomp(shown-15, shown-26)
aux(false-29, to-27)
cop(false-29, be-28)
xcomp(shown-26, false-29)

(ROOT
  (S
    (NP (JJ Intelligent) (NN causation))
    (VP (VBZ has)
      (NP
        (NP (DT no) (NN role))
        (PP (IN in)
          (NP (NN science)))))
    (. .)))

amod(causation-2, Intelligent-1)
nsubj(has-3, causation-2)
root(ROOT-0, has-3)
det(role-5, no-4)
dobj(has-3, role-5)
prep_in(role-5, science-7)

(ROOT
  (S
    (ADVP (LS Second))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (JJ conflicting) (NN evidence))
        (VP (VBZ does) (RB not)
          (VP (VB refute)
            (NP (JJ evolutionary) (NN theory))))))
    (, ,)
    (ADVP (RB then))
    (NP (DT neither))
    (VP (VBZ does)
      (S
        (NP (PRP it))
        (VP (VB refute)
          (NP (NNP ID)))))
    (. .)))

advmod(does-14, Second-1)
mark(refute-8, if-3)
amod(evidence-5, conflicting-4)
nsubj(refute-8, evidence-5)
aux(refute-8, does-6)
neg(refute-8, not-7)
advcl(does-14, refute-8)
amod(theory-10, evolutionary-9)
dobj(refute-8, theory-10)
advmod(does-14, then-12)
nsubj(does-14, neither-13)
root(ROOT-0, does-14)
nsubj(refute-16, it-15)
ccomp(does-14, refute-16)
dobj(refute-16, ID-17)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD ca) (RB n't)
      (NP (NNP ID))
      (VP
        (ADVP (RB simply))
        (VB be)
        (VP
          (VP (VBN revised))
          (CONJP (RB rather) (IN than))
          (VP (VBN abandoned)
            (SBAR (IN if)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (ADJP (RB ever) (JJ conflicting))))))
          (NP (NN evidence)))))
    (. ?)))

advmod(revised-7, Why-1)
aux(revised-7, ca-2)
neg(revised-7, n't-3)
nsubj(revised-7, ID-4)
nsubj(abandoned-10, ID-4)
advmod(revised-7, simply-5)
aux(revised-7, be-6)
root(ROOT-0, revised-7)
conj_negcc(revised-7, abandoned-10)
mark(is-13, if-11)
expl(is-13, there-12)
advcl(abandoned-10, is-13)
advmod(conflicting-15, ever-14)
acomp(is-13, conflicting-15)
dobj(revised-7, evidence-16)

(ROOT
  (S (`` ``)
    (NP (NNP Charles) (NNP Darwin))
    (VP (MD would) (RB not)
      (VP (VB have)
        (VP (VBN been)
          (ADJP (JJ aware))
          (PP (IN of)
            (NP (DT the) (NNP Cambrian) (NN explosion))))))
    (. .)))

nn(Darwin-3, Charles-2)
nsubj(aware-8, Darwin-3)
aux(aware-8, would-4)
neg(aware-8, not-5)
aux(aware-8, have-6)
cop(aware-8, been-7)
root(ROOT-0, aware-8)
det(explosion-12, the-10)
nn(explosion-12, Cambrian-11)
prep_of(aware-8, explosion-12)

(ROOT
  (S ('' '')
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN evidence))
      (SBAR (IN that)
        (S
          (NP (PDT such) (DT a) (NN being))
          (VP (VBD existed)))))
    (. .)))

expl(is-3, There-2)
root(ROOT-0, is-3)
det(evidence-5, no-4)
nsubj(is-3, evidence-5)
complm(existed-10, that-6)
predet(being-9, such-7)
det(being-9, a-8)
nsubj(existed-10, being-9)
ccomp(is-3, existed-10)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (NP (DT the) (NNP Origin))
      (PP (IN of)
        (NP (NNP Species))))
    (VP (VBZ does)
      (S
        (NP
          (NP (NN talk))
          (PP (IN about)
            (NP (DT the) (NNP Cambrian) (NNP Explosion))))
        (ADJP (RB as) (JJ problematic))))
    (. .)))

advmod(does-7, However-1)
det(Origin-4, the-3)
nsubj(does-7, Origin-4)
prep_of(Origin-4, Species-6)
root(ROOT-0, does-7)
nsubj(problematic-14, talk-8)
det(Explosion-12, the-10)
nn(Explosion-12, Cambrian-11)
prep_about(talk-8, Explosion-12)
advmod(problematic-14, as-13)
xcomp(does-7, problematic-14)

(ROOT
  (S ('' '')
    (NP (DT The) (JJ abrupt) (NN manner))
    (ADVP (RB in))
    (SBAR
      (WHNP (WDT which))
      (S
        (NP
          (NP (JJ whole) (NNS groups))
          (PP (IN of)
            (NP (NNS species))))
        (ADVP (RB suddenly))
        (VP (VBP appear)
          (PP (IN in)
            (NP (JJ certain) (NNS formations))))))
    (, ,)
    (VP (VBZ has)
      (VP (VBN been)
        (VP (VBN urged)
          (PP (IN by)
            (NP
              (NP (JJ several) (NNS palaeontologists))
              (PP (IN for)
                (NP (NN instance))))
            (, ,)
            (PP (IN by)
              (NP (NNP Agassiz) (, ,) (NNP Pictet) (, ,)
                (CC and)
                (NNP Sedgwick))))
          (PP (IN as)
            (NP (DT a) (JJ fatal) (NN objection)))
          (PP (TO to)
            (NP
              (NP (DT the) (NN belief))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN transmutation))
                  (PP (IN of)
                    (NP (NNS species))))))))))
    (. .)))

det(manner-4, The-2)
amod(manner-4, abrupt-3)
nsubjpass(urged-19, manner-4)
advmod(urged-19, in-5)
dobj(appear-12, which-6)
amod(groups-8, whole-7)
nsubj(appear-12, groups-8)
prep_of(groups-8, species-10)
advmod(appear-12, suddenly-11)
dep(urged-19, appear-12)
amod(formations-15, certain-14)
prep_in(appear-12, formations-15)
aux(urged-19, has-17)
auxpass(urged-19, been-18)
root(ROOT-0, urged-19)
amod(palaeontologists-22, several-21)
agent(urged-19, palaeontologists-22)
prep_for(palaeontologists-22, instance-24)
agent(urged-19, Agassiz-27)
agent(urged-19, Pictet-29)
conj_and(Agassiz-27, Pictet-29)
agent(urged-19, Sedgwick-32)
conj_and(Agassiz-27, Sedgwick-32)
det(objection-36, a-34)
amod(objection-36, fatal-35)
prep_as(urged-19, objection-36)
det(belief-39, the-38)
prep_to(urged-19, belief-39)
det(transmutation-42, the-41)
prep_in(belief-39, transmutation-42)
prep_of(transmutation-42, species-44)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (JJ numerous) (NNS species))
          (, ,)
          (VP (VBG belonging)
            (PP (TO to)
              (NP
                (NP (DT the) (JJ same) (NN genera))
                (CC or)
                (NP (NNS families)))))
          (, ,))
        (VP (VBP have)
          (ADVP (RB really))
          (VP (VBN started)
            (PP (IN into)
              (NP (NN life)))
            (PP (IN at)
              (NP (RB once)))))))
    (, ,)
    (NP (DT the) (NN fact))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ fatal)
          (PP (TO to)
            (NP
              (NP (DT the) (NN theory))
              (PP (IN of)
                (NP (NN evolution))))))
        (PP (IN through)
          (NP (JJ natural) (NN selection)))))
    (. .)))

mark(started-15, If-1)
amod(species-3, numerous-2)
nsubj(started-15, species-3)
partmod(species-3, belonging-5)
det(genera-9, the-7)
amod(genera-9, same-8)
prep_to(belonging-5, genera-9)
prep_to(belonging-5, families-11)
conj_or(genera-9, families-11)
aux(started-15, have-13)
advmod(started-15, really-14)
advcl(fatal-25, started-15)
prep_into(started-15, life-17)
prep(started-15, at-18)
pobj(at-18, once-19)
det(fact-22, the-21)
nsubj(fatal-25, fact-22)
aux(fatal-25, would-23)
cop(fatal-25, be-24)
root(ROOT-0, fatal-25)
det(theory-28, the-27)
prep_to(fatal-25, theory-28)
prep_of(theory-28, evolution-30)
amod(selection-33, natural-32)
prep_through(fatal-25, selection-33)

(ROOT
  (S
    (S
      (NP (NN p.))
      (VP (VBZ 344)))
    (: ;) ('' '')
    (S
      (NP
        (NP (DT The) (NN case))
        (PP (IN at)
          (NP (NN present))))
      (VP
        (VP (MD must)
          (VP (VB remain)
            (NP (JJ inexplicable))))
        (, ,)
        (CC and)
        (VP (MD may)
          (VP (VB be)
            (VP
              (ADVP (RB truly))
              (VBN urged)
              (PP (IN as)
                (NP
                  (NP (DT a) (JJ valid) (NN argument))
                  (PP (IN against)
                    (NP
                      (NP (DT the) (NNS views))
                      (VP
                        (ADVP (RB here))
                        (VBN entertained)))))))))))
    (. .)))

nsubj(344-2, p.-1)
root(ROOT-0, 344-2)
det(case-6, The-5)
nsubj(inexplicable-11, case-6)
nsubjpass(urged-17, case-6)
prep_at(case-6, present-8)
aux(inexplicable-11, must-9)
cop(inexplicable-11, remain-10)
ccomp(344-2, inexplicable-11)
aux(urged-17, may-14)
auxpass(urged-17, be-15)
advmod(urged-17, truly-16)
ccomp(344-2, urged-17)
conj_and(inexplicable-11, urged-17)
det(argument-21, a-19)
amod(argument-21, valid-20)
prep_as(urged-17, argument-21)
det(views-24, the-23)
prep_against(argument-21, views-24)
advmod(entertained-26, here-25)
partmod(views-24, entertained-26)

(ROOT
  (S
    (NP (NN p.))
    (VP (VBZ 351))
    (. .)))

nsubj(351-2, p.-1)
root(ROOT-0, 351-2)

(ROOT
  (S (`` ``)
    (VP (MD can)
      (NP (PRP you))
      (S
        (VP (VB demonstrate)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN sequence) (NN gtgtgtg))
              (VP (VBZ is)
                (ADJP (RBR less) (JJ likely)
                  (S
                    (VP (TO to)
                      (VP (VB occur)
                        (PP (IN via)
                          (NP
                            (NP (JJ random) (NN chance))
                            (VP
                              (ADVP (RB then))
                              (VBG ctaagtcg))))))))))))))
    (. ?)))

root(ROOT-0, can-2)
dobj(can-2, you-3)
dep(can-2, demonstrate-4)
complm(likely-11, that-5)
det(gtgtgtg-8, the-6)
nn(gtgtgtg-8, sequence-7)
nsubj(likely-11, gtgtgtg-8)
cop(likely-11, is-9)
advmod(likely-11, less-10)
ccomp(demonstrate-4, likely-11)
aux(occur-13, to-12)
xcomp(likely-11, occur-13)
amod(chance-16, random-15)
prep_via(occur-13, chance-16)
advmod(ctaagtcg-18, then-17)
partmod(chance-16, ctaagtcg-18)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD stated)
      (SBAR (IN that)
        (S
          (NP (NN gtgtgtg))
          (VP (VBD was)
            (ADJP (RBR less) (JJ likely)
              (S
                (VP (TO to)
                  (VP (VB occur)
                    (PP (IN than)
                      (NP (NN ctaagtcg)))))))))))
    (. .)))

nsubj(stated-4, I-2)
neg(stated-4, never-3)
root(ROOT-0, stated-4)
complm(likely-9, that-5)
nsubj(likely-9, gtgtgtg-6)
cop(likely-9, was-7)
advmod(likely-9, less-8)
ccomp(stated-4, likely-9)
aux(occur-11, to-10)
xcomp(likely-9, occur-11)
prep_than(occur-11, ctaagtcg-13)

