(ROOT
  (S (`` ``)
    (NP (DT The) (NN name) (NNP Intelligent) (NNP Design))
    (VP (VBZ is)
      (ADVP (PRP itself))
      (NP (DT a) (NN hoax)))
    (. .)))

det(Design-5, The-2)
nn(Design-5, name-3)
nn(Design-5, Intelligent-4)
nsubj(hoax-9, Design-5)
cop(hoax-9, is-6)
advmod(hoax-9, itself-7)
det(hoax-9, a-8)
root(ROOT-0, hoax-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (VP (VBN meant)
        (S
          (VP (TO to)
            (VP (VB sound)
              (ADJP (JJ scientific)
                (S
                  (VP (TO to)
                    (VP (VB obscure)
                      (NP (DT the) (NN belief))))))
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN universe))
                  (VP (VBD was)
                    (VP (VBN created)
                      (PP (IN by)
                        (NP (DT a) (JJ bodiless) (NN consciousness))))))))))))
    (. .)))

nsubjpass(meant-3, It-1)
xsubj(sound-5, It-1)
auxpass(meant-3, 's-2)
root(ROOT-0, meant-3)
aux(sound-5, to-4)
xcomp(meant-3, sound-5)
acomp(sound-5, scientific-6)
aux(obscure-8, to-7)
xcomp(scientific-6, obscure-8)
det(belief-10, the-9)
dobj(obscure-8, belief-10)
complm(created-15, that-11)
det(universe-13, the-12)
nsubjpass(created-15, universe-13)
auxpass(created-15, was-14)
ccomp(sound-5, created-15)
det(consciousness-19, a-17)
amod(consciousness-19, bodiless-18)
agent(created-15, consciousness-19)

(ROOT
  (S
    (ADVP (RB Hence))
    (NP (PRP it))
    (VP (MD could) (RB not)
      (VP (VB have)
        (VP (VBN created)
          (NP (NN existence)))))
    (. .)))

advmod(created-6, Hence-1)
nsubj(created-6, it-2)
aux(created-6, could-3)
neg(created-6, not-4)
aux(created-6, have-5)
root(ROOT-0, created-6)
dobj(created-6, existence-7)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB Where)
          (PP (IN in)
            (NP
              (NP (DT the) (JJ entire) (NN doctrine))
              (PP (IN of)
                (NP (NNP ID))))))
        (S
          (VP (VBP do))))
      (NP (PRP they))
      (VP (VBP state)))
    (IN that)
    (S
      (NP (`` ``) (NN existence) ('' ''))
      (VP (VBZ is)
        (SBAR
          (WHNP (WP what))
          (S
            (NP
              (NP (DT the) (NN designer))
              (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-)))
            (VP (VBZ \/)
              (S
                (VP (VBG designing)
                  (NP
                    (NP (NN force))
                    (VP (VBN created))))))))))
    (. ?)))

advmod(do-9, Where-2)
det(doctrine-6, the-4)
amod(doctrine-6, entire-5)
prep_in(Where-2, doctrine-6)
prep_of(doctrine-6, ID-8)
advcl(state-11, do-9)
nsubj(state-11, they-10)
root(ROOT-0, state-11)
dep(state-11, that-12)
nsubj(is-16, existence-14)
ccomp(state-11, is-16)
dobj(\/-23, what-17)
det(designer-19, the-18)
nsubj(\/-23, designer-19)
dep(designer-19, s-21)
ccomp(is-16, \/-23)
xcomp(\/-23, designing-24)
dobj(designing-24, force-25)
partmod(force-25, created-26)

(ROOT
  (SBARQ
    (WHPP (IN In)
      (WHNP (WP what)
        (NP (NN book)
          (CC or)
          (NN article))))
    (SQ (VBZ does)
      (NP (DT a) (NNP DI) (NN fellow))
      (VP (VB state)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBD was)
              (S
                (VP (VB know)
                  (NP (NN existence))
                  (SBAR (IN until)
                    (S
                      (NP
                        (NP (DT a) (NN designer))
                        (PP (IN of)
                          (NP (DT some) (NN sort))))
                      (VP (VBD created)
                        (NP (PRP it))))))))))))
    (. ?)))

prep_in(state-10, what-2)
dep(what-2, book-3)
dep(what-2, article-5)
conj_or(book-3, article-5)
aux(state-10, does-6)
det(fellow-9, a-7)
nn(fellow-9, DI-8)
nsubj(state-10, fellow-9)
root(ROOT-0, state-10)
complm(was-13, that-11)
expl(was-13, there-12)
ccomp(state-10, was-13)
ccomp(was-13, know-14)
dobj(know-14, existence-15)
mark(created-22, until-16)
det(designer-18, a-17)
nsubj(created-22, designer-18)
det(sort-21, some-20)
prep_of(designer-18, sort-21)
advcl(know-14, created-22)
dobj(created-22, it-23)

(ROOT
  (SQ (CC Or)
    (VBZ are)
    (NP (PRP you))
    (ADJP (RB just)
      (S
        (VP (VBG building)
          (NP (DT a) (NN straw) (NN man)))))
    (. ?)))

cc(just-4, Or-1)
cop(just-4, are-2)
nsubj(just-4, you-3)
root(ROOT-0, just-4)
dep(just-4, building-5)
det(man-8, a-6)
nn(man-8, straw-7)
dobj(building-5, man-8)

(ROOT
  (S (`` ``)
    (NP (NNP Intelligent) (NNP Design))
    (VP (VBZ has)
      (NP
        (NP (DT no) (NN merit))
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBZ rests)
              (PP (IN on)
                (NP
                  (NP (DT the) (JJ very) (NNS concepts))
                  (SBAR
                    (S
                      (NP (PRP it))
                      (VP (VBZ denies)))))))))))
    (. .)))

nn(Design-3, Intelligent-2)
nsubj(has-4, Design-3)
root(ROOT-0, has-4)
det(merit-6, no-5)
dobj(has-4, merit-6)
dobj(rests-9, merit-6)
mark(rests-9, because-7)
nsubj(rests-9, it-8)
dep(merit-6, rests-9)
det(concepts-13, the-11)
amod(concepts-13, very-12)
prep_on(rests-9, concepts-13)
dobj(denies-15, concepts-13)
nsubj(denies-15, it-14)
rcmod(concepts-13, denies-15)

(ROOT
  (NP ('' '')
    (CC And)
    (NP
      (NP (DT this) (NN merit))
      (SBAR
        (S
          (VP (VBZ rests)
            (PP (IN on)
              (NP
                (NP (WP what) (NN concept))
                (PP (IN in)
                  (NP (NN denial)))))))))
    (. ?)))

cc(merit-4, And-2)
det(merit-4, this-3)
root(ROOT-0, merit-4)
rcmod(merit-4, rests-5)
dep(concept-8, what-7)
prep_on(rests-5, concept-8)
prep_in(concept-8, denial-10)

(ROOT
  (S (`` ``)
    (PP (IN For)
      (NP (NN instance)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ rests)
      (PP (IN on)
        (NP (DT the) (NN view)))
      (SBAR (IN that)
        (S
          (NP (DT an) (`` ``) (NN intelligence) ('' ''))
          (VP
            (VP (VBD created)
              (NP (DT the) (NN universe)))
            (: --)
            (CC yet)
            (VP (VBZ states)
              (SBAR (IN that)
                (S
                  (NP (DT that) (NN thing))
                  (VP (VBZ is)
                    (ADJP (JJ unknowable))))))))))
    (. .)))

prep_for(rests-6, instance-3)
nsubj(rests-6, it-5)
root(ROOT-0, rests-6)
det(view-9, the-8)
prep_on(rests-6, view-9)
complm(created-15, that-10)
det(intelligence-13, an-11)
nsubj(created-15, intelligence-13)
nsubj(states-20, intelligence-13)
ccomp(rests-6, created-15)
det(universe-17, the-16)
dobj(created-15, universe-17)
ccomp(rests-6, states-20)
conj_yet(created-15, states-20)
complm(unknowable-25, that-21)
det(thing-23, that-22)
nsubj(unknowable-25, thing-23)
cop(unknowable-25, is-24)
ccomp(states-20, unknowable-25)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (ADJP (JJ unknowable)))))
    (, ,)
    (ADVP (RB then))
    (NP (DT no) (NN one))
    (VP (MD can)
      (VP (VB declare)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (NP
                (NP (JJ intelligent))
                (: --)
                (CC or)
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (VBZ exists))))))))))
    (. .)))

mark(unknowable-4, If-1)
nsubj(unknowable-4, it-2)
cop(unknowable-4, 's-3)
advcl(declare-10, unknowable-4)
advmod(declare-10, then-6)
det(one-8, no-7)
nsubj(declare-10, one-8)
aux(declare-10, can-9)
root(ROOT-0, declare-10)
nsubj(intelligent-13, it-11)
cop(intelligent-13, 's-12)
ccomp(declare-10, intelligent-13)
complm(exists-18, that-16)
nsubj(exists-18, it-17)
ccomp(declare-10, exists-18)
conj_or(intelligent-13, exists-18)

(ROOT
  (FRAG ('' '')
    (NP (NNP See) (NNP the))
    (PP (IN above)
      (NP (NN point)))
    (. .)))

nn(the-3, See-2)
root(ROOT-0, the-3)
dep(the-3, above-4)
pobj(above-4, point-5)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP need) (RB not)
      (VP (`` ``) (VB know) ('' '')
        (S
          (NP (DT the) (NN intelligence))
          (VP (TO to)
            (VP (VB draw)
              (NP (NNS inferences))
              (PP (IN about)
                (NP
                  (NP (PRP it) (POS 's))
                  (NN existence)))
              (SBAR (IN because)
                (S
                  (NP (DT that))
                  (VP (VBZ 's) (RB not)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (NNP ID))
                        (VP (VBZ studies))))))))))))
    (. .)))

nsubj(need-2, We-1)
root(ROOT-0, need-2)
neg(need-2, not-3)
dep(need-2, know-5)
det(intelligence-8, the-7)
nsubj(draw-10, intelligence-8)
aux(draw-10, to-9)
xcomp(know-5, draw-10)
dobj(draw-10, inferences-11)
poss(existence-15, it-13)
prep_about(draw-10, existence-15)
mark('s-18, because-16)
nsubj('s-18, that-17)
advcl(draw-10, 's-18)
neg('s-18, not-19)
dobj(studies-22, what-20)
nsubj(studies-22, ID-21)
ccomp('s-18, studies-22)

(ROOT
  (S
    (NP (NNP ID))
    (VP (VBZ studies)
      (NP
        (NP
          (NP (DT the) (NNS FEATURES))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP are)
                (VP (RBS best) (VBN traced)
                  (PP (TO to)
                    (NP (DT an) (NN intelligence))))))))
        (: ;)
        (NP (RB not)
          (NP (DT the) (NN intelligence))
          (ADVP (PRP itself)))))
    (. .)))

nsubj(studies-2, ID-1)
root(ROOT-0, studies-2)
det(FEATURES-4, the-3)
dobj(studies-2, FEATURES-4)
nsubjpass(traced-8, FEATURES-4)
auxpass(traced-8, are-6)
advmod(traced-8, best-7)
rcmod(FEATURES-4, traced-8)
det(intelligence-11, an-10)
prep_to(traced-8, intelligence-11)
neg(intelligence-15, not-13)
det(intelligence-15, the-14)
dep(FEATURES-4, intelligence-15)
advmod(intelligence-15, itself-16)

(ROOT
  (S ('' '')
    (NP (RB So))
    (VP (VBP are)
      (NP
        (NP (PRP$ your) (JJ main) (NNS criticisms))
        (PP (IN of)
          (NP (NNP ID))))
      (ADVP (RB just)
        (NP (JJ superficial) (NNS ones))))
    (. ?)))

nsubj(criticisms-6, So-2)
cop(criticisms-6, are-3)
poss(criticisms-6, your-4)
amod(criticisms-6, main-5)
root(ROOT-0, criticisms-6)
prep_of(criticisms-6, ID-8)
advmod(criticisms-6, just-9)
amod(ones-11, superficial-10)
pobj(just-9, ones-11)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ odd)
        (S
          (VP (TO to)
            (VP (VB attribute)
              (NP (DT an) (NN orgin))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN universe))
                  (PP (IN outside)
                    (NP (PRP itself)))))
              (SBAR
                (ADVP (RB simply))
                (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADJP (JJ complex))))))))))
    (. .)))

nsubj(odd-4, It-2)
cop(odd-4, 's-3)
root(ROOT-0, odd-4)
aux(attribute-6, to-5)
xcomp(odd-4, attribute-6)
det(orgin-8, an-7)
dobj(attribute-6, orgin-8)
det(universe-11, the-10)
prep_to(attribute-6, universe-11)
prep_outside(universe-11, itself-13)
advmod(complex-18, simply-14)
dep(complex-18, because-15)
nsubj(complex-18, it-16)
cop(complex-18, 's-17)
dep(attribute-6, complex-18)

(ROOT
  (S
    (PP (VBN Given)
      (NP
        (NP (DT the) (NN naure))
        (PP (IN of)
          (NP (DT the) (NN universe)))))
    (, ,)
    (S
      (VP (VBD were)
        (S
          (NP (PRP it))
          (ADJP (RB not) (JJ complex)))))
    (, ,)
    (NP (NNP THAT))
    (VP (MD would)
      (VP (VB require)
        (NP (DT an) (NN explanation))))
    (. .)))

prep(require-15, Given-1)
det(naure-3, the-2)
dep(Given-1, naure-3)
det(universe-6, the-5)
prep_of(naure-3, universe-6)
ccomp(require-15, were-8)
nsubj(complex-11, it-9)
neg(complex-11, not-10)
xcomp(were-8, complex-11)
nsubj(require-15, THAT-13)
aux(require-15, would-14)
root(ROOT-0, require-15)
det(explanation-17, an-16)
dobj(require-15, explanation-17)

(ROOT
  (SQ
    (VP (VB '')
      (SBAR
        (WHADVP (WRB How))
        (FRAG
          (ADVP (RB so)))))
    (. ?)))

advmod(so-3, How-2)
root(ROOT-0, so-3)

(ROOT
  (S (CC And)
    (SBAR
      (PP (IN of)
        (NP (NN course)))
      (S
        (NP
          (NP
            (NP (DT the) (NNS origins))
            (PP (IN of)
              (NP (DT the) (NNP Universe))))
          (PRN (-LRB- -LRB-)
            (SBAR (RB even) (IN if)
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (PP (IN from)
                    (NP (JJ unintelligent) (NNS causes))))))
            (-RRB- -RRB-)))
        (VP (MD would)
          (VP (VB be)
            (PP (IN from)
              (PP (IN outside)
                (NP (PRP itself))))))))
    (, ,)
    (NP (NN something))
    (VP (MD would)
      (VP (VB 've)
        (VP (VBN had)
          (S
            (VP (TO to)
              (VP (VB have)
                (VP (VBN caused)
                  (NP (DT the) (JJ big) (NN bang))
                  (PP (IN from)
                    (NP
                      (NP (DT the) (NN point))
                      (PP (IN of)
                        (NP (NN singularity))))))))))))
    (. .)))

cc(had-27, And-1)
dep(be-19, of-2)
pobj(of-2, course-3)
det(origins-5, the-4)
nsubj(be-19, origins-5)
det(Universe-8, the-7)
prep_of(origins-5, Universe-8)
advmod(was-13, even-10)
dep(was-13, if-11)
nsubj(was-13, it-12)
dep(origins-5, was-13)
amod(causes-16, unintelligent-15)
prep_from(was-13, causes-16)
aux(be-19, would-18)
dep(had-27, be-19)
prep(be-19, from-20)
pcomp(from-20, outside-21)
prep_outside(from-20, itself-22)
nsubj(had-27, something-24)
xsubj(caused-30, something-24)
aux(had-27, would-25)
aux(had-27, 've-26)
root(ROOT-0, had-27)
aux(caused-30, to-28)
aux(caused-30, have-29)
xcomp(had-27, caused-30)
det(bang-33, the-31)
amod(bang-33, big-32)
dobj(caused-30, bang-33)
det(point-36, the-35)
prep_from(caused-30, point-36)
prep_of(point-36, singularity-38)

(ROOT
  (S (`` ``)
    (ADVP (RB Further))
    (, ,)
    (NP (TO to))
    (VP (VBP argue)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN universe))
          (VP (VBD was)
            (VP (VBN created)
              (PP (IN by)
                (NP
                  (NP (DT some) (NN consciousness) (NN outside))
                  (PP (IN of)
                    (NP (DT the) (NN universe))))))))))
    (: ...)))

advmod(argue-5, Further-2)
nsubj(argue-5, to-4)
root(ROOT-0, argue-5)
complm(created-10, that-6)
det(universe-8, the-7)
nsubjpass(created-10, universe-8)
auxpass(created-10, was-9)
ccomp(argue-5, created-10)
det(outside-14, some-12)
nn(outside-14, consciousness-13)
agent(created-10, outside-14)
det(universe-17, the-16)
prep_of(outside-14, universe-17)

(ROOT
  (SBARQ
    (ADVP (RB ''))
    (WHNP (WP Who))
    (SQ
      (VP (VBD said)
        (NP (NN anything))
        (PP (IN about)
          (NP (DT a) (JJ supernatural) (NN entity)))))
    (. ?)))

nsubj(said-3, Who-2)
root(ROOT-0, said-3)
dobj(said-3, anything-4)
det(entity-8, a-6)
amod(entity-8, supernatural-7)
prep_about(said-3, entity-8)

(ROOT
  (FRAG
    (X (SYM ''))
    (: ...)
    (VP (VBZ avoids)
      (NP
        (NP (DT the) (JJ untidy) (NN question))
        (: :)
        (SBARQ
          (WHADVP (WRB Where))
          (SQ (MD would)
            (NP (DT that) (NN consciousness))
            (VP (VB be))))))
    (. ?)))

root(ROOT-0, avoids-3)
det(question-6, the-4)
amod(question-6, untidy-5)
dobj(avoids-3, question-6)
advmod(be-12, Where-8)
aux(be-12, would-9)
det(consciousness-11, that-10)
nsubj(be-12, consciousness-11)
dep(question-6, be-12)

(ROOT
  (S (`` ``)
    (S
      (NP (DT This) (NN question))
      (VP (MD can)
        (ADVP (RB easily))
        (VP (VB remain)
          (ADJP (JJ unanswered))
          (SBAR (IN if)
            (S
              (NP
                (NP (DT all))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP are)
                      (VP (VBG trying)
                        (S
                          (VP (TO to)
                            (VP (VB do)))))))))
              (VP (VBZ is)
                (VP (VB determine)
                  (SBAR (IN if)
                    (S
                      (NP
                        (NP (JJ certain) (NNS features))
                        (PP
                          (PP (IN of)
                            (NP (DT the) (NN universe)))
                          (CC and)
                          (PP (IN in)
                            (NP (VBG living) (NNS systems)))))
                      (VP (VBP are)
                        (VP (VBN designed))))
                    (CC or)
                    (RB not)))))))))
    (: ;)
    (S
      (NP (PRP we))
      (VP (VBP need) (RB not)
        (VP (VB know)
          (SBAR
            (WHNP (WP what))
            (S
              (NP
                (NP (DT the) (NN location))
                (PP (IN of)
                  (NP (DT a) (NN painter))))
              (VP (VBZ is)
                (PP (IN for)
                  (NP (DT a) (JJ cave) (NN painting)))
                (S
                  (VP (TO to)
                    (VP (VB know)
                      (SBAR (IN that)
                        (S
                          (NP (PDT such) (DT a) (NN painter))
                          (VP (VBD existed)
                            (PP (IN by)
                              (S
                                (VP (VBG inferring)
                                  (PP (IN from)
                                    (NP
                                      (NP (DT the) (NN painting))
                                      (ADVP (PRP itself)))))))))))))))))))
    (. .)))

det(question-3, This-2)
nsubj(unanswered-7, question-3)
aux(unanswered-7, can-4)
advmod(unanswered-7, easily-5)
cop(unanswered-7, remain-6)
root(ROOT-0, unanswered-7)
mark(determine-16, if-8)
dobj(trying-12, all-9)
nsubj(determine-16, all-9)
nsubj(trying-12, we-10)
xsubj(do-14, we-10)
aux(trying-12, are-11)
rcmod(all-9, trying-12)
aux(do-14, to-13)
xcomp(trying-12, do-14)
aux(determine-16, is-15)
advcl(unanswered-7, determine-16)
mark(designed-28, if-17)
amod(features-19, certain-18)
conj_and(features-19, features-19')
nsubjpass(designed-28, features-19)
nsubjpass(designed-28, features-19')
det(universe-22, the-21)
prep_of(features-19, universe-22)
amod(systems-26, living-25)
prep_in(features-19', systems-26)
auxpass(designed-28, are-27)
advcl(determine-16, designed-28)
advcl(determine-16, not-30)
conj_or(designed-28, not-30)
nsubj(need-33, we-32)
parataxis(unanswered-7, need-33)
neg(need-33, not-34)
dep(need-33, know-35)
dep(is-42, what-36)
det(location-38, the-37)
nsubj(is-42, location-38)
xsubj(know-48, location-38)
det(painter-41, a-40)
prep_of(location-38, painter-41)
ccomp(know-35, is-42)
det(painting-46, a-44)
amod(painting-46, cave-45)
prep_for(is-42, painting-46)
aux(know-48, to-47)
xcomp(is-42, know-48)
complm(existed-53, that-49)
predet(painter-52, such-50)
det(painter-52, a-51)
nsubj(existed-53, painter-52)
ccomp(know-48, existed-53)
prepc_by(existed-53, inferring-55)
det(painting-58, the-57)
prep_from(inferring-55, painting-58)
advmod(painting-58, itself-59)

(ROOT
  (S ('' '')
    (PP (IN If)
      (NP (RB nowhere)))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (MD ca) (RB n't)
      (VP (VB have)
        (VP (VBN existed)
          (S
            (VP (TO to)
              (VP (VB begin)
                (PP (IN with))))))))
    (. .)))

prep(existed-10, If-2)
pobj(If-2, nowhere-3)
advmod(existed-10, then-5)
nsubj(existed-10, it-6)
xsubj(begin-12, it-6)
aux(existed-10, ca-7)
neg(existed-10, n't-8)
aux(existed-10, have-9)
root(ROOT-0, existed-10)
aux(begin-12, to-11)
xcomp(existed-10, begin-12)
prep(begin-12, with-13)

(ROOT
  (S ('' '')
    (PP (IN See)
      (NP (DT the) (JJ above) (NN point)))
    (, ,)
    (NP (DT a) (NN design) (NN inference))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN made)
          (ADVP (RB independently))
          (PP (IN from)
            (NP
              (NP (NN knowledge))
              (PP (IN of)
                (NP
                  (NP (DT a) (JJ designing) (NN force) (POS 's))
                  (NN location))))))))
    (. .)))

det(point-5, the-3)
amod(point-5, above-4)
prep_see(made-12, point-5)
det(inference-9, a-7)
nn(inference-9, design-8)
nsubjpass(made-12, inference-9)
aux(made-12, can-10)
auxpass(made-12, be-11)
root(ROOT-0, made-12)
advmod(made-12, independently-13)
prep_from(made-12, knowledge-15)
det(force-19, a-17)
amod(force-19, designing-18)
poss(location-21, force-19)
prep_of(knowledge-15, location-21)

(ROOT
  (S ('' '')
    (PP (IN If)
      (NP (RB somewhere)))
    (, ,)
    (NP (RB then) (NN existence))
    (VP (VBD was)
      (ADVP (RB already))
      (ADVP (RB there))
      (SBAR (IN before)
        (S
          (NP (DT the) (NNS bodiless) (NN consciousness))
          (VP (VBD came)
            (PP (IN on)
              (NP (DT the) (NN scene)))))))
    (. .)))

prep(was-7, If-2)
pobj(If-2, somewhere-3)
advmod(existence-6, then-5)
nsubj(was-7, existence-6)
root(ROOT-0, was-7)
advmod(was-7, already-8)
advmod(was-7, there-9)
mark(came-14, before-10)
det(consciousness-13, the-11)
nn(consciousness-13, bodiless-12)
nsubj(came-14, consciousness-13)
advcl(was-7, came-14)
det(scene-17, the-16)
prep_on(came-14, scene-17)

