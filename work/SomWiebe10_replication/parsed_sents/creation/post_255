(ROOT
  (S (`` ``)
    (VP (VB Hilarious))
    (. .)))


(ROOT
  (S ('' '')
    (ADVP (RB Yeah))
    (, ,)
    (NP (PRP I))
    (ADVP (RB probably))
    (VP (MD should) (RB n't)
      (VP (VB emulate)
        (NP
          (NP (NN something))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ distorts)
                (NP (DT the) (NN truth))
                (ADVP (RB so) (RB much))))))))
    (. .)))

advmod(emulate-8, Yeah-2)
nsubj(emulate-8, I-4)
advmod(emulate-8, probably-5)
aux(emulate-8, should-6)
neg(emulate-8, n't-7)
root(ROOT-0, emulate-8)
dobj(emulate-8, something-9)
nsubj(distorts-11, something-9)
rcmod(something-9, distorts-11)
det(truth-13, the-12)
dobj(distorts-11, truth-13)
advmod(much-15, so-14)
advmod(distorts-11, much-15)

(ROOT
  (FRAG ('' '')
    (NP (NNP But) (NNP what))
    (PP (IN about)
      (NP
        (NP (PRP$ your) (NN opinion))
        (PP (IN on)
          (NP (NNP ID)))))
    (. ?)))

nn(what-3, But-2)
root(ROOT-0, what-3)
dep(what-3, about-4)
poss(opinion-6, your-5)
pobj(about-4, opinion-6)
prep_on(opinion-6, ID-8)

(ROOT
  (S (CC And)
    (ADVP (RB YES))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG referring)
        (PP (TO to)
          (NP (DT the) (NN talk) (NNS origins) (NN index)))
        (PP (TO to)
          (NP (JJ creationist) (NNS claims)))))
    (. .)))

cc(referring-6, And-1)
advmod(referring-6, YES-2)
nsubj(referring-6, I-4)
aux(referring-6, 'm-5)
root(ROOT-0, referring-6)
det(index-11, the-8)
nn(index-11, talk-9)
nn(index-11, origins-10)
prep_to(referring-6, index-11)
amod(claims-14, creationist-13)
prep_to(referring-6, claims-14)

(ROOT
  (PRN (: ;)
    (NP
      (NP (NNP D))
      (SBAR (`` ``)
        (S
          (NP (DT The) (NN truth))
          (VP (MD will)
            (VP (VB do)
              (NP (DT that))
              (PP (TO to)
                (NP (PRP you)))
              (ADVP (RB ????)))))))))

root(ROOT-0, D-2)
det(truth-5, The-4)
nsubj(do-7, truth-5)
aux(do-7, will-6)
dep(D-2, do-7)
dobj(do-7, that-8)
prep_to(do-7, you-10)
advmod(do-7, ????-11)

(ROOT
  (S (`` ``)
    (S
      (VP (VBG Seeing)
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (VBP throw)
              (SBAR
                (S
                  (NP (PRP it))
                  (ADVP (RB away))
                  (VP
                    (ADVP (RB altogether))
                    (VBZ does)))))))))
    (VP (VBP make)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP wonder)
            (SBAR (IN if)
              (S
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP I))
                    (VP (VBP 'm)
                      (VP (VBG doing)))))
                (VP (VBZ is)
                  (ADJP (JJ worth))
                  (NP (DT the) (NN time)))))))))
    (. .)))

csubj(make-10, Seeing-2)
complm(throw-5, that-3)
nsubj(throw-5, people-4)
ccomp(Seeing-2, throw-5)
nsubj(does-9, it-6)
advmod(does-9, away-7)
advmod(does-9, altogether-8)
ccomp(throw-5, does-9)
root(ROOT-0, make-10)
nsubj(wonder-12, me-11)
ccomp(make-10, wonder-12)
mark(worth-19, if-13)
dobj(doing-17, what-14)
nsubj(doing-17, I-15)
aux(doing-17, 'm-16)
csubj(worth-19, doing-17)
cop(worth-19, is-18)
advcl(wonder-12, worth-19)
det(time-21, the-20)
attr(worth-19, time-21)

(ROOT
  (S (CC And)
    (S
      (INTJ (UH yes))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBG referring)
          (PP (TO to)
            (NP (DT the))))))
    ('' '')
    (NP (NNS TTSS))
    (VP (VBZ makes)
      (VP (VB flagellum)
        (NP (JJ reducibily) (JJ complex) ('' '') (NN argument))))
    (. .)))

cc(makes-11, And-1)
dep(referring-6, yes-2)
nsubj(referring-6, I-4)
aux(referring-6, 'm-5)
dep(makes-11, referring-6)
prep_to(referring-6, the-8)
nsubj(makes-11, TTSS-10)
root(ROOT-0, makes-11)
xcomp(makes-11, flagellum-12)
amod(argument-16, reducibily-13)
amod(argument-16, complex-14)
dobj(flagellum-12, argument-16)

(ROOT
  (S
    (NP (NNP ''))
    (VP (VBZ Nope))
    (. .)))


(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (VP (VBG ridiculing)
        (NP (DT the) (JJ ridiculous))))
    (. .)))

nsubj(ridiculing-3, We-1)
aux(ridiculing-3, are-2)
root(ROOT-0, ridiculing-3)
det(ridiculous-5, the-4)
dobj(ridiculing-3, ridiculous-5)

(ROOT
  (S ('' '')
    (NP (WDT Whatever))
    (VP
      (ADVP (IN that))
      (VBZ means))
    (. ...)))

nsubj(means-4, Whatever-2)
advmod(means-4, that-3)
root(ROOT-0, means-4)

(ROOT
  (S ('' '')
    (NP (DT The) (`` ``) (JJ negative) (NN argument) ('' ''))
    (VP
      (ADVP (RB that) ('' ''))
      (VBZ evolution)
      (SBAR
        (S
          (VP (MD can) (RB not)
            (VP (VB explain)
              (NP
                (NP (DT that))
                ('' '')
                (SBAR
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ ridiculous)))))))))))
    (. .)))

det(argument-5, The-2)
amod(argument-5, negative-4)
nsubj(evolution-9, argument-5)
advmod(evolution-9, that-7)
root(ROOT-0, evolution-9)
aux(explain-12, can-10)
neg(explain-12, not-11)
ccomp(evolution-9, explain-12)
dobj(explain-12, that-13)
cop(ridiculous-16, is-15)
rcmod(that-13, ridiculous-16)

