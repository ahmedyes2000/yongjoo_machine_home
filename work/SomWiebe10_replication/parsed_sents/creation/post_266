(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ apologize)
      (PP (IN for)
        (S
          (VP (VBG using)
            (NP (JJ misleading) (NN wording))))))
    (. .)))

nsubj(apologize-2, I-1)
root(ROOT-0, apologize-2)
prepc_for(apologize-2, using-4)
amod(wording-6, misleading-5)
dobj(using-4, wording-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (JJ right)
        (PP (IN in)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NN majority))
                (PP (IN of)
                  (NP (NN mutation))))
              (VP (VBP appear)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP
                        (NP (RB little)
                          (CC or)
                          (DT no) (NN effect))
                        (PP (IN on)
                          (NP
                            (NP (NN survival))
                            (PP (IN in)
                              (NP (JJS most) (NNS organisms)))))))))))))))
    (. .)))

nsubj(right-3, You-1)
cop(right-3, are-2)
root(ROOT-0, right-3)
complm(appear-10, that-5)
det(majority-7, the-6)
nsubj(appear-10, majority-7)
xsubj(have-12, majority-7)
prep_of(majority-7, mutation-9)
prepc_in(right-3, appear-10)
aux(have-12, to-11)
xcomp(appear-10, have-12)
nn(effect-16, little-13)
conj_or(little-13, no-15)
nn(effect-16, no-15)
dobj(have-12, effect-16)
prep_on(effect-16, survival-18)
amod(organisms-21, most-20)
prep_in(survival-18, organisms-21)

(ROOT
  (S
    (NP (PRP$ My) (NN point))
    (VP (VBD was)
      (ADVP (RB simply))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT any) (NN mutation))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ does)
                  (VP (VB produce)
                    (NP
                      (NP (DT a) (JJ notable) (JJ prototypic) (NN effect))
                      (PRN (-LRB- -LRB-)
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (ADVP (RB simply))
                              (NP
                                (NP (DT any) (JJ mensurable) (NN change))
                                (PP (IN for)
                                  (NP (DT any) (NN non-biologist))))
                              (PP (IN out)
                                (NP (RB there))))))
                        (-RRB- -RRB-))))))))
          (, ,)
          (VP (MD can)
            (VP (VB be)
              (VP (VBN viewed)
                (PP (IN as)
                  (NP
                    (NP (DT a) (JJ negative) (NN change))
                    (PP (IN in)
                      (NP (DT some) (JJ particular) (NN environment)))))))))))
    (. .)))

poss(point-2, My-1)
nsubj(was-3, point-2)
root(ROOT-0, was-3)
advmod(was-3, simply-4)
complm(viewed-31, that-5)
det(mutation-7, any-6)
nsubj(produce-10, mutation-7)
nsubjpass(viewed-31, mutation-7)
aux(produce-10, does-9)
rcmod(mutation-7, produce-10)
det(effect-14, a-11)
amod(effect-14, notable-12)
amod(effect-14, prototypic-13)
dobj(produce-10, effect-14)
nsubj(change-21, which-16)
cop(change-21, is-17)
advmod(change-21, simply-18)
det(change-21, any-19)
amod(change-21, mensurable-20)
dep(effect-14, change-21)
det(non-biologist-24, any-23)
prep_for(change-21, non-biologist-24)
prep(change-21, out-25)
pobj(out-25, there-26)
aux(viewed-31, can-29)
auxpass(viewed-31, be-30)
ccomp(was-3, viewed-31)
det(change-35, a-33)
amod(change-35, negative-34)
prep_as(viewed-31, change-35)
det(environment-39, some-37)
amod(environment-39, particular-38)
prep_in(change-35, environment-39)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NNS organisms))
        (PP (IN with)
          (NP
            (NP
              (ADJP (RB very) (JJ simple)
                (CC and)
                (JJ efficient))
              (NNS genomes))
            (VP
              (ADVP (RB well))
              (VBN adapted)
              (PP (TO to)
                (NP (DT a) (JJ particular) (NN environment))))))))
    (NP (DT that) (NN change))
    (VP (MD will)
      (ADVP (RB likely))
      (VP (VB be)
        (NP
          (NP (DT a) (JJ negative) (NN one))
          (PP (IN in)
            (NP (PRP$ their) (JJ ancestral) (NN environment))))))
    (. .)))

prep_for(one-22, organisms-2)
advmod(simple-5, very-4)
amod(genomes-8, simple-5)
conj_and(simple-5, efficient-7)
amod(genomes-8, efficient-7)
prep_with(organisms-2, genomes-8)
advmod(adapted-10, well-9)
partmod(genomes-8, adapted-10)
det(environment-14, a-12)
amod(environment-14, particular-13)
prep_to(adapted-10, environment-14)
det(change-16, that-15)
nsubj(one-22, change-16)
aux(one-22, will-17)
advmod(one-22, likely-18)
cop(one-22, be-19)
det(one-22, a-20)
amod(one-22, negative-21)
root(ROOT-0, one-22)
poss(environment-26, their-24)
amod(environment-26, ancestral-25)
prep_in(one-22, environment-26)

(ROOT
  (NP
    (NP (NNS Kudos))
    (PP (IN on)
      (S
        (VP (VBG dragging)
          (PRT (RP out))
          (NP
            (NP (DT the) (JJ statistical) (NNS fallacies))
            (PP (IN in)
              (NP
                (NP (NNP Mr.) (NNP Behe) (POS 's))
                (ADJP (RBS most) (JJ recent))
                (JJ popular) (NN work)))))))
    (. .)))

root(ROOT-0, Kudos-1)
prepc_on(Kudos-1, dragging-3)
prt(dragging-3, out-4)
det(fallacies-7, the-5)
amod(fallacies-7, statistical-6)
dobj(dragging-3, fallacies-7)
nn(Behe-10, Mr.-9)
poss(work-15, Behe-10)
advmod(recent-13, most-12)
amod(work-15, recent-13)
amod(work-15, popular-14)
prep_in(fallacies-7, work-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP find)
      (NP (PRP$ your) (NN reference))
      (PP (TO to)
        (NP
          (NP (NNP Simon) (NN work))
          (ADJP (RB particularly) (JJ fascinating)))))
    (. .)))

nsubj(find-2, I-1)
root(ROOT-0, find-2)
poss(reference-4, your-3)
dobj(find-2, reference-4)
nn(work-7, Simon-6)
prep_to(find-2, work-7)
advmod(fascinating-9, particularly-8)
amod(work-7, fascinating-9)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (NP (JJ serial) (NN duplication))
        (VP
          (VP (MD would)
            (VP (VB be)
              (ADJP (JJ useful))))
          (CC or)
          (RB not)
          (VP (VBZ depends)
            (PP (IN on)
              (SBAR (IN whether)
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP
                      (NP (DT any) (NN similarity))
                      (PP (IN between)
                        (NP
                          (NP (JJ various) (JJ good) (NNS designs))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (NP (EX there))
                              (ADVP (RB empirically))
                              (VP (VBP are)
                                (PP (IN for)
                                  (NP
                                    (NP (RB almost) (DT any))
                                    (VP (VBN designed))))))))))))))))))
    (VP (VBP object)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB think)
              (PP (IN of)))))))
    (. .)))

complm(useful-6, Whether-1)
amod(duplication-3, serial-2)
nsubj(useful-6, duplication-3)
aux(useful-6, would-4)
cop(useful-6, be-5)
csubj(object-29, useful-6)
conj_or(useful-6, not-8)
neg(useful-6, not-8)
csubj(object-29, not-8)
dep(useful-6, depends-9)
complm(is-13, whether-11)
expl(is-13, there-12)
prepc_on(depends-9, is-13)
det(similarity-15, any-14)
nsubj(is-13, similarity-15)
amod(designs-19, various-17)
amod(designs-19, good-18)
prep_between(similarity-15, designs-19)
dobj(are-24, designs-19)
rel(are-24, which-21)
expl(are-24, there-22)
advmod(are-24, empirically-23)
rcmod(designs-19, are-24)
advmod(any-27, almost-26)
prep_for(are-24, any-27)
partmod(any-27, designed-28)
root(ROOT-0, object-29)
nsubj(think-32, I-30)
aux(think-32, can-31)
ccomp(object-29, think-32)
prep(think-32, of-33)

(ROOT
  (S
    (PP (IN In)
      (NP (NN conclusion)))
    (, ,)
    (NP (NN scale) (JJ free) (NNS networks))
    (VP (VBP are)
      (ADJP (JJ cool)))
    (. .)))

prep_in(cool-8, conclusion-2)
nn(networks-6, scale-4)
amod(networks-6, free-5)
nsubj(cool-8, networks-6)
cop(cool-8, are-7)
root(ROOT-0, cool-8)

