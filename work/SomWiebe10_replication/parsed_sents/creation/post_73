(ROOT
  (S
    (S
      (VP (VB PvM)
        (NP (DT the) (NN quote))))
    (: -) (`` ``)
    (S
      (NP (PRP We))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR (CC but)
            (S
              (NP (PRP we))
              (VP (VBP do)
                (SBAR
                  (S
                    (VP (VBP know)
                      (SBAR
                        (S
                          (NP (DT a) (NN designer))
                          (VP (VBD was) (RB n't)
                            (VP (VBN involved))))))))))))))
    (. .)))

root(ROOT-0, PvM-1)
det(quote-3, the-2)
dobj(PvM-1, quote-3)
nsubj(know-9, We-6)
aux(know-9, do-7)
neg(know-9, n't-8)
ccomp(PvM-1, know-9)
cc(do-12, but-10)
nsubj(do-12, we-11)
ccomp(know-9, do-12)
ccomp(do-12, know-13)
det(designer-15, a-14)
nsubjpass(involved-18, designer-15)
auxpass(involved-18, was-16)
neg(involved-18, n't-17)
ccomp(know-13, involved-18)

(ROOT
  (S (`` ``)
    (VP (VBZ is)
      (NP (JJ YOUR) (NN position)))
    (. .)))

cop(position-4, is-2)
amod(position-4, YOUR-3)
root(ROOT-0, position-4)

(ROOT
  (S (CC And)
    (VP (VB thank)
      (NP (PRP you))
      (PP (IN for)
        (S
          (VP (VBG telling)
            (NP (PRP us)))))
      (SBAR (IN that)
        (S
          (VP (VBZ is) (RB not)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (NN science))
                (VP (VBZ works))))))))
    (. .)))

cc(thank-2, And-1)
root(ROOT-0, thank-2)
dobj(thank-2, you-3)
prepc_for(thank-2, telling-5)
dobj(telling-5, us-6)
complm(is-8, that-7)
ccomp(thank-2, is-8)
neg(is-8, not-9)
advmod(works-12, how-10)
nsubj(works-12, science-11)
ccomp(is-8, works-12)

(ROOT
  (S
    (NP (NNP BTW) (NNP ID))
    (VP (VBZ is)
      (ADJP (RB scientifically) (JJ relevant))
      (SBAR (IN because)
        (S
          (NP (NN experience))
          (VP (VBZ demonstrates)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBZ matters)
                  (NP (DT a) (JJ great) (NN deal))
                  (PP (TO to)
                    (NP (DT any) (NN investigation)))
                  (SBAR (IN whether)
                    (CC or)
                    (RB not)
                    (S
                      (NP
                        (NP (DT that))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (VP (VBG being)
                                (VP (VBN investigated)))))))
                      (VP (VBD arose)
                        (PP (IN via)
                          (NP (NN agency) (NN involvement)
                            (CC or)
                            (NN nature)))
                        (, ,)
                        (S
                          (VP (VBG operating)
                            (ADVP (RB freely))))))))))))))
    (. .)))

nn(ID-2, BTW-1)
nsubj(relevant-5, ID-2)
cop(relevant-5, is-3)
advmod(relevant-5, scientifically-4)
root(ROOT-0, relevant-5)
mark(demonstrates-8, because-6)
nsubj(demonstrates-8, experience-7)
advcl(relevant-5, demonstrates-8)
complm(matters-11, that-9)
nsubj(matters-11, it-10)
ccomp(demonstrates-8, matters-11)
det(deal-14, a-12)
amod(deal-14, great-13)
dobj(matters-11, deal-14)
det(investigation-17, any-16)
prep_to(matters-11, investigation-17)
complm(arose-26, whether-18)
ccomp(matters-11, not-20)
conj_or(arose-26, not-20)
nsubjpass(investigated-25, that-21)
nsubj(arose-26, that-21)
aux(investigated-25, is-23)
auxpass(investigated-25, being-24)
rcmod(that-21, investigated-25)
ccomp(matters-11, arose-26)
nn(involvement-29, agency-28)
prep_via(arose-26, involvement-29)
prep_via(arose-26, nature-31)
conj_or(involvement-29, nature-31)
xcomp(arose-26, operating-33)
advmod(operating-33, freely-34)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP take)
      (NP (PRP it))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP have)
            (ADVP (RB never))
            (VP (VBN investigated)
              (NP
                (NP (NN anything))
                (PP (IN in)
                  (NP (PRP$ your) (NN life)))))))))
    (. .)))

nsubj(take-2, I-1)
root(ROOT-0, take-2)
dobj(take-2, it-3)
nsubj(investigated-7, you-4)
aux(investigated-7, have-5)
neg(investigated-7, never-6)
dep(take-2, investigated-7)
dobj(investigated-7, anything-8)
poss(life-11, your-10)
prep_in(anything-8, life-11)

(ROOT
  (S
    (ADVP (RB Also))
    (NP (RB only) (NNP ID))
    (VP (MD will)
      (VP (VB lead)
        (S
          (NP (PRP us))
          (VP (TO to)
            (VP (VB understand)
              (SBAR (IN that)
                (S
                  (NP (NNP DNA)
                    (CC and)
                    (NNP RNA))
                  (VP (VBP are)
                    (ADJP (JJ similar)
                      (PP (TO to)
                        (NP
                          (NP (DT a) (NN computer) (POS 's))
                          (NN harddrive))))))))))))
    (. .)))

advmod(lead-5, Also-1)
advmod(ID-3, only-2)
nsubj(lead-5, ID-3)
aux(lead-5, will-4)
root(ROOT-0, lead-5)
nsubj(understand-8, us-6)
aux(understand-8, to-7)
xcomp(lead-5, understand-8)
complm(similar-14, that-9)
nsubj(similar-14, DNA-10)
conj_and(DNA-10, RNA-12)
nsubj(similar-14, RNA-12)
cop(similar-14, are-13)
ccomp(understand-8, similar-14)
det(computer-17, a-16)
poss(harddrive-19, computer-17)
prep_to(similar-14, harddrive-19)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP are)
            (NP
              (NP (NNS data))
              (VP (VBG carrying)
                (NP (NNS mediums))))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
nsubj(data-5, they-3)
cop(data-5, are-4)
ccomp(is-2, data-5)
partmod(data-5, carrying-6)
dobj(carrying-6, mediums-7)

(ROOT
  (S
    (S
      (INTJ (DT That) (VBZ is))
      (NP (DT the) (NNS data))
      (VP (VBZ is)
        (ADVP (RB NOT))
        (NP (DT the) (NN sequence))))
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD rides)
        (PP (IN on)
          (NP (DT the) (NN sequence)))
        (SBAR (RB just) (IN like)
          (S
            (NP (DT a) (NN computer) (NN disk))
            (VP (VBZ is) (RB n't)
              (NP
                (NP (DT the) (NNS data))
                (PP (CC but)
                  (NP
                    (NP (DT the) (NN data) (NNS rides))
                    (PP (IN on)
                      (NP (DT the) (NN disk)))))))))))
    (. .)))

dep(sequence-8, That-1)
dep(That-1, is-2)
det(data-4, the-3)
nsubj(sequence-8, data-4)
cop(sequence-8, is-5)
neg(sequence-8, NOT-6)
det(sequence-8, the-7)
root(ROOT-0, sequence-8)
nsubj(rides-11, it-10)
conj_but(sequence-8, rides-11)
det(sequence-14, the-13)
prep_on(rides-11, sequence-14)
advmod(data-23, just-15)
dep(data-23, like-16)
det(disk-19, a-17)
nn(disk-19, computer-18)
nsubj(data-23, disk-19)
cop(data-23, is-20)
neg(data-23, n't-21)
det(data-23, the-22)
ccomp(rides-11, data-23)
prep(data-23, but-24)
det(rides-27, the-25)
nn(rides-27, data-26)
dep(but-24, rides-27)
det(disk-30, the-29)
prep_on(rides-27, disk-30)

