(ROOT
  (S
    (NP (NNS People))
    (VP (VBP tend)
      (S
        (VP (TO to)
          (VP (VB focus)
            (PP (IN on)
              (NP (DT the) (NNS trees)))))))
    (. .) (. .)))

nsubj(tend-2, People-1)
xsubj(focus-4, People-1)
root(ROOT-0, tend-2)
aux(focus-4, to-3)
xcomp(tend-2, focus-4)
det(trees-7, the-6)
prep_on(focus-4, trees-7)

(ROOT
  (S (CC and)
    (VP (VB miss)
      (NP (DT the) (NN forest))
      (ADVP (RB entirely)))
    (. .)))

cc(miss-2, and-1)
root(ROOT-0, miss-2)
det(forest-4, the-3)
dobj(miss-2, forest-4)
advmod(miss-2, entirely-5)

(ROOT
  (S (CC but)
    (NP (PRP he))
    (VP (VBD did)
      (SBAR
        (S
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB leave)
                  (NP
                    (NP (RB plenty))
                    (PP (IN of)
                      (NP (NN room))))
                  (PP (IN for)
                    (NP (PRP you)))
                  (S
                    (VP (TO to) (RB not)
                      (VP (VB believe)
                        (PP (IN in)
                          (NP (PRP him)))))))))))))
    (. .)))

cc(did-3, but-1)
nsubj(did-3, he-2)
root(ROOT-0, did-3)
ccomp(did-3, want-4)
aux(leave-6, to-5)
xcomp(want-4, leave-6)
dobj(leave-6, plenty-7)
prep_of(plenty-7, room-9)
prep_for(leave-6, you-11)
aux(believe-14, to-12)
neg(believe-14, not-13)
xcomp(leave-6, believe-14)
prep_in(believe-14, him-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB completely))
      (NP
        (NP (PRP$ your) (NN choice))
        (NP (PRP$ your) (JJ free) (NN will))))
    (. .)))

nsubj(choice-5, It-1)
cop(choice-5, 's-2)
advmod(choice-5, completely-3)
poss(choice-5, your-4)
root(ROOT-0, choice-5)
poss(will-8, your-6)
amod(will-8, free-7)
dep(choice-5, will-8)

(ROOT
  (S
    (NP (NNP Faith))
    (VP (VBZ is) (RB not)
      (ADJP (JJ suppose)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ easy)))))))
    (. .)))

nsubj(suppose-4, Faith-1)
cop(suppose-4, is-2)
neg(suppose-4, not-3)
root(ROOT-0, suppose-4)
aux(easy-7, to-5)
cop(easy-7, be-6)
xcomp(suppose-4, easy-7)

(ROOT
  (S
    (NP (JJ Such) (JJ simplistic) (NNS arguments))
    (VP (VBP like)
      (SBAR
        (SBARQ (`` ``)
          (WHADVP (WRB How))
          (SQ (MD could)
            (NP (PRP you))
            (VP (VB have)
              (NP (DT a) (NN day))
              (SBAR (IN if)
                (S
                  (NP (EX there))
                  (VP (VBD was) (RB n't)
                    (NP
                      (NP (DT a) (NN sun))
                      (ADVP (RB yet))))))))
          (. ?))))))

amod(arguments-3, Such-1)
amod(arguments-3, simplistic-2)
nsubj(like-4, arguments-3)
root(ROOT-0, like-4)
advmod(have-9, How-6)
aux(have-9, could-7)
nsubj(have-9, you-8)
dep(like-4, have-9)
det(day-11, a-10)
tmod(have-9, day-11)
mark(was-14, if-12)
expl(was-14, there-13)
advcl(have-9, was-14)
neg(was-14, n't-15)
det(sun-17, a-16)
nsubj(was-14, sun-17)
advmod(sun-17, yet-18)

(ROOT
  (S
    (S
      (X
        (X (SYM \*))
        (NP (NN sigh)))
      (X
        (X (SYM \*))
        (NP
          (NP (JJ Such))
          (NP (DT a) (JJ limited) (NN creation))))
      (NP (PRP we))
      (VP (VBP are)))
    (: ...) (RB so)
    (S
      (VP (VBN lost)
        (PP (IN in)
          (NP (DT the) (NNS details)))))
    (. .)))

dep(sigh-2, \*-1)
dep(are-9, sigh-2)
dep(Such-4, \*-3)
dep(are-9, Such-4)
det(creation-7, a-5)
amod(creation-7, limited-6)
dep(Such-4, creation-7)
nsubj(are-9, we-8)
root(ROOT-0, are-9)
advmod(are-9, so-11)
dep(are-9, lost-12)
det(details-15, the-14)
prep_in(lost-12, details-15)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (ADVP (RB really))
          (VP (MD must)
            (VP (VB have)
              (NP
                (NP (DT an) (NN answer))
                (PP (TO to)
                  (NP (PDT such) (DT a) (NN question))))))))
      (: ...)
      (S
        (VP
          (ADVP (RB simply))
          (VBN put)))
      (NP (NNP God))
      (VP (VBD invented)
        (NP
          (NP (DT the) (JJ very) (NNS concepts))
          (PP (IN of)
            (NP (NN day)
              (CC and)
              (NN night))))))
    (: ...)
    (CC and)
    (S
      (SBAR (RB even) (IN if)
        (S
          (NP (EX there))
          (VP (VBD were)
            (NP (DT no) (NN sun))
            (ADVP (RB yet)))))
      (, ,)
      (NP (DT a) (NN day))
      (VP (VBD was)
        (ADVP (RB still))
        (NP (DT a) (NN day))))
    (. .)))

mark(have-5, If-1)
nsubj(have-5, you-2)
advmod(have-5, really-3)
aux(have-5, must-4)
advcl(invented-16, have-5)
det(answer-7, an-6)
dobj(have-5, answer-7)
predet(question-11, such-9)
det(question-11, a-10)
prep_to(answer-7, question-11)
advmod(put-14, simply-13)
parataxis(invented-16, put-14)
nsubj(invented-16, God-15)
root(ROOT-0, invented-16)
det(concepts-19, the-17)
amod(concepts-19, very-18)
dobj(invented-16, concepts-19)
prep_of(concepts-19, day-21)
prep_of(concepts-19, night-23)
conj_and(day-21, night-23)
advmod(were-29, even-26)
dep(were-29, if-27)
expl(were-29, there-28)
advcl(was-36, were-29)
det(sun-31, no-30)
nsubj(were-29, sun-31)
advmod(were-29, yet-32)
det(day-35, a-34)
nsubj(was-36, day-35)
conj_and(invented-16, was-36)
advmod(was-36, still-37)
det(day-39, a-38)
attr(was-36, day-39)
tmod(was-36, day-39)

(ROOT
  (S (CC Or)
    (ADVP (RB maybe))
    (NP (PRP he))
    (VP (VBD did)
      (NP (PRP it))
      (ADVP
        (ADVP (RB just) (RB so))
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (MD would)
              (VP (VB ask)
                (NP
                  (NP (DT the) (NN question))
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBP suppose))))))))
          (. .))))
    (. .)))

cc(did-4, Or-1)
advmod(did-4, maybe-2)
nsubj(did-4, he-3)
root(ROOT-0, did-4)
dobj(did-4, it-5)
advmod(so-7, just-6)
advmod(did-4, so-7)
dep(ask-11, that-8)
nsubj(ask-11, you-9)
aux(ask-11, would-10)
ccomp(so-7, ask-11)
det(question-13, the-12)
dobj(ask-11, question-13)
dobj(suppose-15, question-13)
nsubj(suppose-15, I-14)
rcmod(question-13, suppose-15)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT some) (NN truth))
        (PP (TO to)
          (NP
            (NP (DT that))
            (PP (IN as)
              (NP
                (INTJ (UH well) (. .))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(truth-4, some-3)
nsubj(is-2, truth-4)
prep_to(truth-4, that-6)
prep_as(that-6, well-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP
            (NP (RB much))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (NNP God))
                  (VP (VBZ has)
                    (VP (VBN done)))))))
          (VP (VBD was)
            (ADVP (RB deliberately))
            (VP (VBN intended)
              (S
                (VP (TO to)
                  (VP (VB cause)
                    (NP (NNS debates))
                    (PP (IN like)
                      (NP (DT this)))))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
complm(intended-12, that-3)
nsubjpass(intended-12, much-4)
xsubj(cause-14, much-4)
dobj(done-9, what-6)
nsubj(done-9, God-7)
aux(done-9, has-8)
prepc_of(much-4, done-9)
auxpass(intended-12, was-10)
advmod(intended-12, deliberately-11)
ccomp(know-2, intended-12)
aux(cause-14, to-13)
xcomp(intended-12, cause-14)
dobj(cause-14, debates-15)
prep_like(cause-14, this-17)

(ROOT
  (S
    (S
      (NP (NNS Atheists))
      (ADVP (RB absolutely))
      (VP (VBP hate)
        (NP (DT that) (NN response))))
    (, ,)
    (NP (PRP they))
    (VP (VBP maintain)
      (SBAR (IN that)
        (S
          (NP (DT a) (VBG loving) (NN God))
          (VP (MD would)
            (ADVP (RB never))
            (VP (VB want)
              (S
                (VP (TO to)
                  (VP (VB confuse)
                    (NP (PRP us))))))))))
    (. .)))

nsubj(hate-3, Atheists-1)
advmod(hate-3, absolutely-2)
ccomp(maintain-8, hate-3)
det(response-5, that-4)
dobj(hate-3, response-5)
nsubj(maintain-8, they-7)
root(ROOT-0, maintain-8)
complm(want-15, that-9)
det(God-12, a-10)
amod(God-12, loving-11)
nsubj(want-15, God-12)
xsubj(confuse-17, God-12)
aux(want-15, would-13)
neg(want-15, never-14)
ccomp(maintain-8, want-15)
aux(confuse-17, to-16)
xcomp(want-15, confuse-17)
dobj(confuse-17, us-18)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP agree)))
    (, ,)
    (NP (PRP he))
    (VP (VBD did) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB confuse)
              (NP (PRP us)))))))
    (. .) (. .)))

nsubj(agree-2, I-1)
ccomp(want-7, agree-2)
nsubj(want-7, he-4)
xsubj(confuse-9, he-4)
aux(want-7, did-5)
neg(want-7, n't-6)
root(ROOT-0, want-7)
aux(confuse-9, to-8)
xcomp(want-7, confuse-9)
dobj(confuse-9, us-10)

