(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes) (. .))
    (. .)))


(ROOT
  (S
    (S
      (NP (PRP he))
      (VP (VBD knew)
        (SBAR
          (WHNP (DT all)
            (WHPP (IN of)
              (WHNP (WDT that))))
          (S
            (NP (PRP he))
            (VP (VBD knew)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (MD would)
                    (VP (VB fall))))))))))
    (: ...)
    (S
      (NP (PRP he))
      (VP (VBD knew)
        (SBAR
          (S
            (NP (DT the) (NNS translations))
            (VP (MD would)
              (VP (VB vary))))))
      (. .))
    (. .)))

nsubj(knew-2, he-1)
root(ROOT-0, knew-2)
dep(of-4, all-3)
dep(knew-7, of-4)
dobj(fall-10, of-4)
pobj(of-4, that-5)
nsubj(knew-7, he-6)
ccomp(knew-2, knew-7)
nsubj(fall-10, we-8)
aux(fall-10, would-9)
ccomp(knew-7, fall-10)
nsubj(knew-13, he-12)
parataxis(knew-2, knew-13)
det(translations-15, the-14)
nsubj(vary-17, translations-15)
aux(vary-17, would-16)
ccomp(knew-13, vary-17)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (ADJP (JJ ethical))
    (S
      (VP (TO to)
        (VP (VB create)
          (S
            (ADJP (JJ intelligent) (RB creatures)
              (PP (IN with)
                (NP (DT the) (NN ability)))
              (S
                (VP (TO to)
                  (VP (VB act)
                    (PP (IN against)
                      (NP (PRP$ your) (NN will)))))))
            (SBAR (IN IF)
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB torture)
                          (NP (PRP them))
                          (ADVP (RB forever))
                          (SBAR (IN once)
                            (S
                              (NP (PRP they))
                              (VP (VBP do)))))))))))))))
    (. ?)))

cop(ethical-3, Is-1)
nsubj(ethical-3, it-2)
root(ROOT-0, ethical-3)
aux(create-5, to-4)
dep(ethical-3, create-5)
dep(going-19, intelligent-6)
advmod(intelligent-6, creatures-7)
det(ability-10, the-9)
prep_with(intelligent-6, ability-10)
aux(act-12, to-11)
xcomp(intelligent-6, act-12)
poss(will-15, your-14)
prep_against(act-12, will-15)
mark(going-19, IF-16)
nsubj(going-19, you-17)
xsubj(torture-21, you-17)
aux(going-19, are-18)
acomp(create-5, going-19)
aux(torture-21, to-20)
xcomp(going-19, torture-21)
dobj(torture-21, them-22)
advmod(torture-21, forever-23)
mark(do-26, once-24)
nsubj(do-26, they-25)
advcl(torture-21, do-26)

(ROOT
  (S (`` ``)
    (NP (JJS Most))
    (VP (VBZ importantly))
    (. .) (. .)))

nsubj(importantly-3, Most-2)
root(ROOT-0, importantly-3)

(ROOT
  (S
    (NP
      (NP (DT this) (NN life))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP live)))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN blink))
        (PP (IN of)
          (NP
            (NP (DT an) (NN eye))
            (PP (VBN compared)
              (PP (TO to)
                (NP (JJ eternity) (NN pain)
                  (CC and)
                  (NN death)))))))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP perceive)
            (ADJP (RB as) (RB so) (JJ terrible))))
        (. .)))
    (. .)))

det(life-2, this-1)
dobj(live-4, life-2)
nsubj(blink-7, life-2)
nsubj(live-4, we-3)
rcmod(life-2, live-4)
cop(blink-7, is-5)
det(blink-7, the-6)
root(ROOT-0, blink-7)
det(eye-10, an-9)
prep_of(blink-7, eye-10)
prepc_compared_to(eye-10, to-12)
amod(pain-14, eternity-13)
pobj(eye-10, pain-14)
pobj(eye-10, death-16)
conj_and(pain-14, death-16)
complm(perceive-19, that-17)
nsubj(perceive-19, we-18)
ccomp(blink-7, perceive-19)
advmod(terrible-22, as-20)
advmod(terrible-22, so-21)
acomp(perceive-19, terrible-22)

(ROOT
  (S
    (SBAR
      (S
        (VP (VBZ is)
          (ADJP (RB truly) (NN nothing)))))
    (NP (IN but) (DT a))
    (VP (VBP dot)
      (PP (IN on)
        (NP (DT the) (NN timeline))))
    (: ...)))

cop(nothing-3, is-1)
advmod(nothing-3, truly-2)
dep(dot-6, nothing-3)
amod(a-5, but-4)
nsubj(dot-6, a-5)
root(ROOT-0, dot-6)
det(timeline-9, the-8)
prep_on(dot-6, timeline-9)

(ROOT
  (S ('' '')
    (NP (RB So) (JJ then))
    (ADVP (WRB how))
    (VP (VBZ is)
      (VP (VBG causing)
        (NP
          (NP (NN pain)
            (CC and)
            (NN death))
          (PP (IN in)
            (NP (DT that) (JJ momentary) (NN blink))))
        (PP (IN worth)
          (NP
            (NP (DT an) (NN eternity))
            (PP (IN of)
              (NP (NN suffering)))))))
    (. ?)))

advmod(then-3, So-2)
nsubj(causing-6, then-3)
advmod(causing-6, how-4)
aux(causing-6, is-5)
root(ROOT-0, causing-6)
dobj(causing-6, pain-7)
dobj(causing-6, death-9)
conj_and(pain-7, death-9)
det(blink-13, that-11)
amod(blink-13, momentary-12)
prep_in(pain-7, blink-13)
det(eternity-16, an-15)
prep_worth(causing-6, eternity-16)
prep_of(eternity-16, suffering-18)

(ROOT
  (S (`` ``)
    (CC And)
    (NP (NNP thou))
    (VP (VBP shalt) (RB not)
      (VP (VB kill) (: ...)
        (NP (JJ thou) (NN shalt))
        (PP (RB not)
          (NP (NN murder)))))
    (. .)))

cc(shalt-4, And-2)
nsubj(shalt-4, thou-3)
root(ROOT-0, shalt-4)
neg(shalt-4, not-5)
dep(shalt-4, kill-6)
amod(shalt-9, thou-8)
dobj(kill-6, shalt-9)
prep(kill-6, not-10)
pobj(not-10, murder-11)

(ROOT
  (FRAG
    (ADVP (RB right) (. .))
    (. .)))

root(ROOT-0, right-1)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG talking)
        (PP (IN about)
          (S
            (VP (VBG semantics)
              (S
                (NP (PRP we))
                (RB all)
                (VP (VB understand)
                  (NP (DT the) (NN meaning)))))))))
    (. .)))

nsubj(talking-3, you-1)
aux(talking-3, are-2)
root(ROOT-0, talking-3)
prepc_about(talking-3, semantics-5)
nsubj(understand-8, we-6)
advmod(understand-8, all-7)
ccomp(semantics-5, understand-8)
det(meaning-10, the-9)
dobj(understand-8, meaning-10)

(ROOT
  (S ('' '')
    (ADVP (RB No))
    (, ,)
    (NP (PRP we))
    (VP (VBP do) (RB n't))
    (. .)))

advmod(do-5, No-2)
nsubj(do-5, we-4)
root(ROOT-0, do-5)
neg(do-5, n't-6)

(ROOT
  (S
    (VP (VB Look)
      (PP (IN at)
        (NP (DT the) (NNP Quakers) (NNP \/) (NNP Amish))))
    (: ...)))

root(ROOT-0, Look-1)
det(Amish-6, the-3)
nn(Amish-6, Quakers-4)
nn(Amish-6, \/-5)
prep_at(Look-1, Amish-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN commandment))
          (VP (VBZ is) (`` ``)
            (NP (NNP Thou) (NNP Shall)
              (CC not)
              (NNP Kill))
            ('' '')))))
    (. .)))

nsubj(believe-2, They-1)
root(ROOT-0, believe-2)
complm(Shall-9, that-3)
det(commandment-5, the-4)
nsubj(Shall-9, commandment-5)
cop(Shall-9, is-6)
nn(Shall-9, Thou-8)
ccomp(believe-2, Shall-9)
ccomp(believe-2, Kill-11)
conj_negcc(Shall-9, Kill-11)

(ROOT
  (NP
    (NP (DT all))
    (PP (IN of)
      (NP (DT the) (JJ above)))
    (. .)))

root(ROOT-0, all-1)
det(above-4, the-3)
prep_of(all-1, above-4)

(ROOT
  (S
    (S
      (PP (IN For)
        (S
          (NP (DT some))
          (ADVP (RB even))
          (VP (VBG killing)
            (PP (IN in)
              (NP (NN self))))))
      (NP (NN defense))
      (VP (VBZ is)
        (PP (IN against)
          (NP
            (NP (NNP God) (POS 's))
            (NN will)))))
    (: ...)
    (S
      (NP
        (NP (RB yet) (DT a) (JJ vast) (NN number))
        (PP (IN of)
          (NP (NNS Christians))))
      (VP (VBP see)
        (NP (PRP it))
        (ADVP (RB quite) (RB differently))))
    (. .)))

nsubj(killing-4, some-2)
advmod(killing-4, even-3)
prepc_for(is-8, killing-4)
prep_in(killing-4, self-6)
nsubj(is-8, defense-7)
root(ROOT-0, is-8)
poss(will-12, God-10)
prep_against(is-8, will-12)
advmod(number-17, yet-14)
det(number-17, a-15)
amod(number-17, vast-16)
nsubj(see-20, number-17)
prep_of(number-17, Christians-19)
parataxis(is-8, see-20)
dobj(see-20, it-21)
advmod(differently-23, quite-22)
advmod(see-20, differently-23)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (VBZ is)
      (NP (NN right)))
    (. ?)))

attr(is-2, Who-1)
root(ROOT-0, is-2)
nsubj(is-2, right-3)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT All))
      (PP (IN of)
        (NP (PRP us))))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (S
            (VP (VBG disciplining)
              (SBAR
                (S
                  (NP (DT a) (NN child))
                  (VP (VBZ is)
                    (ADJP (JJ important)))))))
          (VP (VBP spare)
            (SBAR
              (S
                (NP (DT the) (NN rod) (NN \/))
                (VP (VBP spoil)
                  (SBAR
                    (S
                      (NP
                        (NP (DT the) (NN child))
                        (PRN (-LRB- -LRB-)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBZ is)
                                (NP
                                  (NP (DT a) (NN paraphrase))
                                  (PP (IN of)
                                    (NP (DT the) (JJ actual) (NNS verses)))))))
                          (-RRB- -RRB-)))
                      (VP (VBZ is)
                        (NP
                          (NP (DT an) (NN example))
                          (PP (IN of)
                            (NP
                              (NP (DT that) (NN lesson))
                              (, ,)
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (VP (VBZ is)
                                    (ADJP (RB absolutely) (JJ true))))))))))))))))))
    (. .)))

nsubj(know-5, All-2)
prep_of(All-2, us-4)
root(ROOT-0, know-5)
complm(spare-12, that-6)
csubj(spare-12, disciplining-7)
det(child-9, a-8)
nsubj(important-11, child-9)
cop(important-11, is-10)
ccomp(disciplining-7, important-11)
ccomp(know-5, spare-12)
det(\/-15, the-13)
nn(\/-15, rod-14)
nsubj(spoil-16, \/-15)
ccomp(spare-12, spoil-16)
det(child-18, the-17)
nsubj(example-31, child-18)
nsubj(paraphrase-23, which-20)
cop(paraphrase-23, is-21)
det(paraphrase-23, a-22)
dep(child-18, paraphrase-23)
det(verses-27, the-25)
amod(verses-27, actual-26)
prep_of(paraphrase-23, verses-27)
cop(example-31, is-29)
det(example-31, an-30)
ccomp(spoil-16, example-31)
det(lesson-34, that-33)
prep_of(example-31, lesson-34)
nsubj(true-39, lesson-34)
cop(true-39, is-37)
advmod(true-39, absolutely-38)
rcmod(lesson-34, true-39)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (NNP Psalms) (CD 24))
        (: :)
        (NP
          (NP (PRP He))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ spares)
                (NP (DT the) (NN rod)))))))
      (VP (VBZ hates)
        (NP (PRP$ his) (NN son))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (PRP he))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ loves)
              (NP (PRP him))))))
      (VP (VBZ is)
        (ADJP (JJ careful)
          (S
            (VP (TO to)
              (VP (VB discipline)
                (NP (PRP him))))))))
    (. .)))

nsubj(hates-10, Psalms-2)
num(Psalms-2, 24-3)
dep(Psalms-2, He-5)
nsubj(spares-7, He-5)
rcmod(He-5, spares-7)
det(rod-9, the-8)
dobj(spares-7, rod-9)
root(ROOT-0, hates-10)
poss(son-12, his-11)
dobj(hates-10, son-12)
nsubj(loves-17, he-15)
nsubj(careful-20, he-15)
rcmod(he-15, loves-17)
dobj(loves-17, him-18)
cop(careful-20, is-19)
conj_but(hates-10, careful-20)
aux(discipline-22, to-21)
xcomp(careful-20, discipline-22)
dobj(discipline-22, him-23)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADJP (JJ many)
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP do)
              (VP (VB take)
                (NP (PRP it))
                (ADVP (RB literally))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
acomp(are-2, many-3)
nsubj(take-6, who-4)
aux(take-6, do-5)
dep(many-3, take-6)
dobj(take-6, it-7)
advmod(take-6, literally-8)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB demonstrate)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (ADJP (JJ wrong)))))))
    (. ?)))

advmod(demonstrate-4, How-1)
aux(demonstrate-4, can-2)
nsubj(demonstrate-4, you-3)
root(ROOT-0, demonstrate-4)
complm(wrong-8, that-5)
nsubj(wrong-8, they-6)
cop(wrong-8, are-7)
ccomp(demonstrate-4, wrong-8)

(ROOT
  (S (`` ``)
    (NP
      (NP (DT Any) (NN sentence))
      (PP (IN in)
        (NP (DT the) (NN bible))))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN misinterpreted))))
    (. .) (. .)))

det(sentence-3, Any-2)
nsubjpass(misinterpreted-9, sentence-3)
det(bible-6, the-5)
prep_in(sentence-3, bible-6)
aux(misinterpreted-9, can-7)
auxpass(misinterpreted-9, be-8)
root(ROOT-0, misinterpreted-9)

(ROOT
  (S (CC and)
    (ADVP (RB misunderstood) (RB yet))
    (, ,)
    (NP (DT the) (NN fact))
    (VP (VBZ remains)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN rule))
          (ADVP (PRP itself))
          (VP (VBZ is)
            (ADJP (JJ correct))))))
    (. .)))

cc(remains-7, and-1)
advmod(yet-3, misunderstood-2)
advmod(remains-7, yet-3)
det(fact-6, the-5)
nsubj(remains-7, fact-6)
root(ROOT-0, remains-7)
complm(correct-13, that-8)
det(rule-10, the-9)
nsubj(correct-13, rule-10)
advmod(correct-13, itself-11)
cop(correct-13, is-12)
ccomp(remains-7, correct-13)

(ROOT
  (S ('' '')
    (NP (NNP Then))
    (ADVP (WRB how))
    (VP (MD can)
      (ADVP (PRP you))
      (VP (VB be)
        (ADJP (JJ sure))
        (SBAR (IN that)
          (S
            (NP (PRP$ your) (NN interpretation))
            (VP (VBZ is)
              (NP (DT the) (JJ correct) (NN one)))))))
    (. ?)))

nsubj(sure-7, Then-2)
advmod(sure-7, how-3)
aux(sure-7, can-4)
advmod(sure-7, you-5)
cop(sure-7, be-6)
root(ROOT-0, sure-7)
complm(one-14, that-8)
poss(interpretation-10, your-9)
nsubj(one-14, interpretation-10)
cop(one-14, is-11)
det(one-14, the-12)
amod(one-14, correct-13)
ccomp(sure-7, one-14)

(ROOT
  (S (`` ``)
    (SBAR (IN As)
      (FRAG
        (PP (RB far) (IN as)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP do) (RB n't)
                  (VP (VB believe)
                    (PP (IN in)
                      (NP (DT the) (`` ``) (NNP Christian) ('' '') (NNP God)))))))))))
    (: ...)
    (NP (DT this))
    (VP (VBZ is)
      (NP (DT an) (JJ endlessly) (JJ exaggerated) (NN perspective) ('' '') (NN Exaggerated)))
    (. ?)))

mark(as-4, As-2)
advmod(as-4, far-3)
dep(Exaggerated-24, as-4)
pobj(as-4, those-5)
nsubj(believe-9, those-5)
aux(believe-9, do-7)
neg(believe-9, n't-8)
rcmod(those-5, believe-9)
det(God-15, the-11)
nn(God-15, Christian-13)
prep_in(believe-9, God-15)
nsubj(Exaggerated-24, this-17)
cop(Exaggerated-24, is-18)
det(Exaggerated-24, an-19)
amod(Exaggerated-24, endlessly-20)
amod(Exaggerated-24, exaggerated-21)
nn(Exaggerated-24, perspective-22)
root(ROOT-0, Exaggerated-24)

(ROOT
  (S
    (VP (VB Keep)
      (PRT (RP in))
      (NP
        (NP (NN mind))
        (FRAG
          (ADVP (RB also))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT some))
                (PP (IN of)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP we))
                      (VP (VBP are)
                        (VP (VBG discussing)))))))
              (VP (VBZ is)
                (NP
                  (NP (PRP$ my) (JJ particular) (NN viewpoint))
                  (PP (IN of)
                    (NP (NNP God)))))))
          (. .))))
    (. .)))

root(ROOT-0, Keep-1)
prt(Keep-1, in-2)
dobj(Keep-1, mind-3)
dep(mind-3, also-4)
dep(viewpoint-15, that-5)
nsubj(viewpoint-15, some-6)
dobj(discussing-11, what-8)
nsubj(discussing-11, we-9)
aux(discussing-11, are-10)
prepc_of(some-6, discussing-11)
cop(viewpoint-15, is-12)
poss(viewpoint-15, my-13)
amod(viewpoint-15, particular-14)
dep(also-4, viewpoint-15)
prep_of(viewpoint-15, God-17)

(ROOT
  (X
    (SBARQ
      (WHNP (WRB How))
      (ADVP (RB so)))
    (. ?)))

root(ROOT-0, How-1)
advmod(How-1, so-2)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP (PRP$ their) (NN view))
      (ADJP (RB demonstratively) (JJ inferior)
        (PP (TO to)
          (NP (JJ Christian) (NNS beliefs)))))
    (. ?)))

advmod(inferior-6, How-1)
cop(inferior-6, is-2)
poss(view-4, their-3)
nsubj(inferior-6, view-4)
advmod(inferior-6, demonstratively-5)
root(ROOT-0, inferior-6)
amod(beliefs-9, Christian-8)
prep_to(inferior-6, beliefs-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR (IN that)
          (FRAG
            (NP (DT all))
            (NP
              (NP (DT the) (NNP Hindi))
              (, ,)
              (NP (NNP Taoists) (, ,) (NNP Buddhists) (, ,) (NNP Jainists) (, ,) (NNP Pagans) (, ,) (NNP Shamanists))
              (, ,)
              (NP (FW etc.) (. .)))))))
    (. .)))

nsubj(sure-3, I-1)
cop(sure-3, 'm-2)
root(ROOT-0, sure-3)
complm(all-5, that-4)
dep(sure-3, all-5)
det(Hindi-7, the-6)
dep(all-5, Hindi-7)
nn(Shamanists-17, Taoists-9)
appos(Shamanists-17, Buddhists-11)
appos(Shamanists-17, Jainists-13)
appos(Shamanists-17, Pagans-15)
appos(Hindi-7, Shamanists-17)
appos(Hindi-7, etc.-19)

(ROOT
  (S
    (VP (MD would)
      (VP (VB disagree)
        (SBAR (IN that)
          (S
            (NP (PRP$ their) (NN perspective))
            (VP (VBZ is)
              (ADVP (RB somehow))
              (ADJP (JJ exagerated)))))))
    (. .)))

aux(disagree-2, would-1)
root(ROOT-0, disagree-2)
complm(exagerated-8, that-3)
poss(perspective-5, their-4)
nsubj(exagerated-8, perspective-5)
cop(exagerated-8, is-6)
advmod(exagerated-8, somehow-7)
ccomp(disagree-2, exagerated-8)

(ROOT
  (S ('' '')
    (NP (NNP Islam))
    (VP (VBZ uses)
      (NP
        (NP (DT the) (NN bible))
        ('' '')
        (SBAR
          (S
            (VP (VBP Have)
              (S
                (NP (PRP you))
                (VP
                  (ADVP (RB ever))
                  (VB read)
                  (NP (DT the) (NNP Koran)))))))))
    (. ?)))

nsubj(uses-3, Islam-2)
root(ROOT-0, uses-3)
det(bible-5, the-4)
dobj(uses-3, bible-5)
rcmod(bible-5, Have-7)
nsubj(read-10, you-8)
advmod(read-10, ever-9)
ccomp(Have-7, read-10)
det(Koran-12, the-11)
dobj(read-10, Koran-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB hardly))
      (NP (DT the) (NNP Bible)))
    (. .)))

nsubj(Bible-5, It-1)
cop(Bible-5, is-2)
advmod(Bible-5, hardly-3)
det(Bible-5, the-4)
root(ROOT-0, Bible-5)

(ROOT
  (S (`` ``)
    (S
      (NP (DT the) (NNS jews))
      (VP (VBP use)
        (NP (DT the) (NN bible))))
    ('' '')
    (NP (PRP They))
    (VP (VBP use)
      (NP (DT the)
        (NP (NNP OT))
        (CONJP (RB as) (RB well) (IN as))
        (NP
          (NP (DT a) (JJ whole) (NN host))
          (PP (IN of)
            (NP
              (NP (NNS commentaries))
              (PP (JJ such) (IN as)
                (NP (DT the) (NNP Talmud))))))))
    (. .)))

det(jews-3, the-2)
nsubj(use-4, jews-3)
ccomp(use-9, use-4)
det(bible-6, the-5)
dobj(use-4, bible-6)
nsubj(use-9, They-8)
root(ROOT-0, use-9)
det(OT-11, the-10)
dobj(use-9, OT-11)
det(host-17, a-15)
amod(host-17, whole-16)
dobj(use-9, host-17)
conj_and(OT-11, host-17)
prep_of(host-17, commentaries-19)
det(Talmud-23, the-22)
prep_such_as(commentaries-19, Talmud-23)

(ROOT
  (S (`` ``)
    (S
      (PP (IN among)
        (NP
          (NP (DT the) (NNS jews))
          (CC and)
          (NP (NN islamic))))
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB simply))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP do) (RB n't)
              (VP (VB feel)
                (SBAR (IN that)
                  (S
                    (NP (NNP Christ))
                    (VP (VBD was)
                      (ADJP (JJ divine)))))))))))
    ('' '')
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (JJ great) (NN deal))
          (ADJP (JJR more)
            (PP (TO to)
              (NP (PRP$ their) (JJ respective) (NNS theologies))))
          (ADVP (RB then)))
        (`` ``)
        (S
          (NP (NNP Christ))
          (VP (VBZ is) (RB n't)
            (ADJP (JJ divine))))
        ('' '')))
    (. !)))

det(jews-4, the-3)
prep_among('s-8, jews-4)
conj_and(jews-4, islamic-6)
prep_among('s-8, islamic-6)
nsubj('s-8, it-7)
ccomp(is-20, 's-8)
advmod('s-8, simply-9)
nsubj(feel-13, they-10)
aux(feel-13, do-11)
neg(feel-13, n't-12)
ccomp('s-8, feel-13)
complm(divine-17, that-14)
nsubj(divine-17, Christ-15)
cop(divine-17, was-16)
ccomp(feel-13, divine-17)
expl(is-20, There-19)
root(ROOT-0, is-20)
det(deal-23, a-21)
amod(deal-23, great-22)
nsubj(is-20, deal-23)
amod(deal-23, more-24)
poss(theologies-28, their-26)
amod(theologies-28, respective-27)
prep_to(more-24, theologies-28)
advmod(deal-23, then-29)
nsubj(divine-34, Christ-31)
cop(divine-34, is-32)
neg(divine-34, n't-33)
dep(deal-23, divine-34)

(ROOT
  (FRAG (`` ``)
    (FRAG
      (SBAR
        (WHPP (IN beyond)
          (WHNP (WDT that)))
        (S
          (NP (PRP they))
          (VP (VBP are)
            (ADVP (RB simply))
            (NP
              (NP (JJ different) (NNS splinters))
              (PP (IN of)
                (NP (NNP Christianity))))))))
    ('' '')
    (SBAR
      (WHNP (WP Judaism))
      (S
        (VP (VBZ is)
          (NP
            (NP (DT a) (NN splinter))
            (PP (IN of)
              (NP (NNP Christianity)))))))
    (. ?)))

dep(splinters-8, beyond-2)
pobj(beyond-2, that-3)
nsubj(splinters-8, they-4)
cop(splinters-8, are-5)
advmod(splinters-8, simply-6)
amod(splinters-8, different-7)
root(ROOT-0, splinters-8)
prep_of(splinters-8, Christianity-10)
nsubj(splinter-15, Judaism-12)
cop(splinter-15, is-13)
det(splinter-15, a-14)
dep(splinters-8, splinter-15)
prep_of(splinter-15, Christianity-17)

(ROOT
  (S
    (NP (DT The) (NN religion))
    (VP (VBZ \/)
      (NP
        (NP (JJ ethnic) (NN group))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD was)
              (ADVP (RB around))
              (PP (IN for)
                (NP (NNS centuries)))
              (SBAR (IN before)
                (S
                  (NP (NNP Jesus))
                  (VP (VBD was)
                    (VP (VBN born))))))))))
    (. ?)))

det(religion-2, The-1)
nsubj(\/-3, religion-2)
root(ROOT-0, \/-3)
amod(group-5, ethnic-4)
dobj(\/-3, group-5)
nsubj(was-7, group-5)
rcmod(group-5, was-7)
advmod(was-7, around-8)
prep_for(was-7, centuries-10)
mark(born-14, before-11)
nsubjpass(born-14, Jesus-12)
auxpass(born-14, was-13)
advcl(was-7, born-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NN religion))
      (VP (VBG \/)
        (NP (JJ ethnic) (NN group))
        (SBAR (IN that)
          (S
            (NP (NNP Jesus))
            (VP (VBD was)
              (NP
                (NP (DT a) (NN part))
                (PP (IN of))))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN splinter))
        (PP (IN of)
          (NP
            (NP (DT the) (NN religion))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD did) (RB not)
                  (VP (VB start)
                    (PRT (RP up))
                    (SBAR (IN until) (IN after)
                      (S
                        (NP (NNP Jesus))
                        (VP (VBD had)
                          (VP (VBN died)))))))))))))
    (. ?)))

det(religion-2, The-1)
nsubj(splinter-14, religion-2)
partmod(religion-2, \/-3)
amod(group-5, ethnic-4)
dobj(\/-3, group-5)
complm(part-10, that-6)
nsubj(part-10, Jesus-7)
cop(part-10, was-8)
det(part-10, a-9)
ccomp(\/-3, part-10)
prep(part-10, of-11)
cop(splinter-14, is-12)
det(splinter-14, a-13)
root(ROOT-0, splinter-14)
det(religion-17, the-16)
prep_of(splinter-14, religion-17)
nsubj(start-21, religion-17)
aux(start-21, did-19)
neg(start-21, not-20)
rcmod(religion-17, start-21)
prt(start-21, up-22)
mark(died-27, until-23)
dep(died-27, after-24)
nsubj(died-27, Jesus-25)
aux(died-27, had-26)
advcl(start-21, died-27)

(ROOT
  (S (RB not)
    (NP
      (NP (DT a) (NNP Catholic))
      (, ,)
      (ADJP (JJ Protestant) (: ...)
        (CC or)
        (NN anything)))
    (VP (VBP like)
      (NP
        (NP (DT that) (NN perspective))
        (SBAR
          (S (`` ``)
            (S
              (INTJ (UH Well))
              (NP (PRP we))
              (VP (VBP are) (RB not)
                (ADVP (RB really))
                (VP (VBG debating)
                  (NP
                    (NP (DT the) (JJ Catholic)
                      (CC or)
                      (JJ Protestant) (NN view))
                    (PP (IN on)
                      (NP (NNP God)))))))
            (: ...)
            (S
              (NP (PRP we))
              (VP (VBP are)
                (VP (VBG debating)
                  (NP
                    (NP (DT the) (NN creation) (NN \/) (NN formation))
                    (PP (IN of)
                      (NP (NNP Terra)))))))))))
    (. .)))

neg(like-9, not-1)
det(Catholic-3, a-2)
nsubj(like-9, Catholic-3)
amod(Catholic-3, Protestant-5)
amod(Catholic-3, anything-8)
conj_or(Protestant-5, anything-8)
root(ROOT-0, like-9)
det(perspective-11, that-10)
dobj(like-9, perspective-11)
dep(debating-18, Well-13)
nsubj(debating-18, we-14)
aux(debating-18, are-15)
neg(debating-18, not-16)
advmod(debating-18, really-17)
rcmod(perspective-11, debating-18)
det(view-23, the-19)
amod(view-23, Catholic-20)
conj_or(Catholic-20, Protestant-22)
amod(view-23, Protestant-22)
dobj(debating-18, view-23)
prep_on(view-23, God-25)
nsubj(debating-29, we-27)
aux(debating-29, are-28)
parataxis(debating-18, debating-29)
det(formation-33, the-30)
nn(formation-33, creation-31)
nn(formation-33, \/-32)
dobj(debating-29, formation-33)
prep_of(formation-33, Terra-35)

(ROOT
  (S
    (NP (DT A)
      (ADJP (RBR more) (JJ accurate))
      (NN statement))
    (VP (MD would)
      (VP (VB be)
        (SBAR (IN that)
          (S
            (NP (NNP Christianity)
              (CC and)
              (NNP Islam))
            (VP (VBP are)
              (VP (VBN splinters)
                (PRT (RP off))
                (PP (IN of) (NNP Judaism))))))))
    (. .)))

det(statement-4, A-1)
advmod(accurate-3, more-2)
amod(statement-4, accurate-3)
nsubj(be-6, statement-4)
aux(be-6, would-5)
root(ROOT-0, be-6)
complm(splinters-12, that-7)
nsubjpass(splinters-12, Christianity-8)
conj_and(Christianity-8, Islam-10)
nsubjpass(splinters-12, Islam-10)
auxpass(splinters-12, are-11)
ccomp(be-6, splinters-12)
prt(splinters-12, off-13)
prep(splinters-12, of-14)
dep(of-14, Judaism-15)

(ROOT
  (S ('' '')
    (NP (EX There))
    (VP (VBZ has)
      (ADVP (RB only))
      (VP (VBN been)
        (NP
          (NP (CD one) (NN religion))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD professed)
                (ADVP (RB divinity))
                (PP (IN in)
                  (NP (DT the) (NN way)))
                (SBAR (IN that)
                  (S
                    (NP (NNP Christianity))
                    (VP (VBZ has)))
                  (. .))))))))
    (. .)))

expl(religion-7, There-2)
aux(religion-7, has-3)
advmod(religion-7, only-4)
cop(religion-7, been-5)
num(religion-7, one-6)
root(ROOT-0, religion-7)
nsubj(professed-9, religion-7)
rcmod(religion-7, professed-9)
advmod(professed-9, divinity-10)
det(way-13, the-12)
prep_in(professed-9, way-13)
complm(has-16, that-14)
nsubj(has-16, Christianity-15)
ccomp(professed-9, has-16)

(ROOT
  (NP ('' '')
    (CC And)
    (NP
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (VBZ does)
            (WHNP (WDT that)))))
      (, ,)
      (NP (FW objectively) (, ,)
        (S
          (VP (VB make)
            (S
              (VP (VBG Christianity)
                (NP (DT the) (`` ``) (JJ true) (NN religion) ('' ''))))))))
    (. ?)))

cc(objectively-7, And-2)
advmod(does-4, how-3)
dep(objectively-7, does-4)
dobj(does-4, that-5)
root(ROOT-0, objectively-7)
dep(objectively-7, make-9)
xcomp(make-9, Christianity-10)
det(religion-14, the-11)
amod(religion-14, true-13)
dobj(Christianity-10, religion-14)

(ROOT
  (S (`` ``)
    (NP (DT The) (NN point))
    (VP (VBZ is)
      (UCP
        (NP
          (NP (DT any) (NN line))
          (PP (IN in)
            (NP (DT the) (NNP Bible))))
        (CC or)
        (S
          (NP (JJ religious) (NN concept))
          (VP (MD can)
            (VP (VB be)
              (ADJP (JJ difficult))
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP come)
                    (PP (IN at)
                      (NP (PRP it)))
                    (PP (IN without)
                      (NP (NN understanding)))))))))
        (. .)))
    (. .)))

det(point-3, The-2)
nsubj(line-6, point-3)
cop(line-6, is-4)
det(line-6, any-5)
root(ROOT-0, line-6)
det(Bible-9, the-8)
prep_in(line-6, Bible-9)
amod(concept-12, religious-11)
nsubj(difficult-15, concept-12)
aux(difficult-15, can-13)
cop(difficult-15, be-14)
conj_or(line-6, difficult-15)
mark(come-18, if-16)
nsubj(come-18, you-17)
advcl(difficult-15, come-18)
prep_at(come-18, it-20)
prep_without(come-18, understanding-22)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB How))
        (S
          (VP (VBP do)
            (NP (PRP you)))))
      (, ,)
      (VP (VB objectively)))
    (, ,)
    (VP (VBP demonstrate)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (NN understanding))
          (VP (VBZ is)
            (NP (DT the) (JJ correct) (NN one))))))
    (. ?)))

advmod(do-3, How-2)
dep(objectively-6, do-3)
dobj(do-3, you-4)
ccomp(demonstrate-8, objectively-6)
root(ROOT-0, demonstrate-8)
dobj(one-14, which-9)
nsubj(one-14, understanding-10)
cop(one-14, is-11)
det(one-14, the-12)
amod(one-14, correct-13)
ccomp(demonstrate-8, one-14)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB be)
        (ADJP (JJ sure))
        (SBAR (IN that)
          (S
            (NP (PRP$ your) (`` ``) (NN understanding) ('' ''))
            (VP (VBZ is) (RB n't)
              (ADVP (RB just))
              (NP (PRP$ your) (NN interpretation)))))
        (, ,)
        (S
          (VP (VBG containing)
            (NP (DT no) (JJ objective) (NN truth))
            (PP (TO to)
              (NP (PRP it)))))))
    (. ?)))

advmod(sure-5, How-1)
aux(sure-5, can-2)
nsubj(sure-5, you-3)
cop(sure-5, be-4)
root(ROOT-0, sure-5)
complm(interpretation-15, that-6)
poss(understanding-9, your-7)
nsubj(interpretation-15, understanding-9)
cop(interpretation-15, is-11)
neg(interpretation-15, n't-12)
advmod(interpretation-15, just-13)
poss(interpretation-15, your-14)
ccomp(sure-5, interpretation-15)
xcomp(sure-5, containing-17)
det(truth-20, no-18)
amod(truth-20, objective-19)
dobj(containing-17, truth-20)
prep_to(containing-17, it-22)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (NP (DT the) (NN inclination)
            (S
              (VP (TO to)))))))
    (VP (VB explain)
      (NP
        (ADJP (DT each)
          (CC and)
          (DT every))
        (NN one))
      (PP (TO to)
        (NP (PRP you))))
    (. ...)))

mark(had-4, If-2)
nsubj(had-4, I-3)
csubj(explain-8, had-4)
det(inclination-6, the-5)
dobj(had-4, inclination-6)
infmod(inclination-6, to-7)
root(ROOT-0, explain-8)
amod(one-12, each-9)
conj_and(each-9, every-11)
amod(one-12, every-11)
dobj(explain-8, one-12)
prep_to(explain-8, you-14)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB How))
        (S
          (VP
            (ADVP (RB about))
            (VBG explaining)
            (NP
              (NP (DT the) (NNS passages))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP it))
                  (VP (VBZ is))))))))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (NP (DT a) (JJ male) (NN slave))
            (VP (MD may)
              (VP (VB be)
                (VP (VBN kept)
                  (PP (IN for)
                    (NP (CD 7) (NNS years))))))))))
    (CC but)
    (S
      (NP (RB then))
      (VP (MD must)
        (VP
          (VP (VB be)
            (VP (VBN freed)))
          (: ...)
          (SBAR (IN while)
            (S
              (NP (DT a) (JJ female) (NN slave))
              (VP (MD can)
                (VP (VB be)
                  (VP (VBN kept)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN span))
                        (PP (IN of)
                          (NP (PRP$ her) (NN life)))))))))))))
    (. ?)))

advmod(explaining-4, How-2)
advmod(explaining-4, about-3)
csubj(said-10, explaining-4)
det(passages-6, the-5)
dobj(explaining-4, passages-6)
advmod(is-9, where-7)
nsubj(is-9, it-8)
rcmod(passages-6, is-9)
root(ROOT-0, said-10)
complm(kept-17, that-11)
det(slave-14, a-12)
amod(slave-14, male-13)
nsubjpass(kept-17, slave-14)
aux(kept-17, may-15)
auxpass(kept-17, be-16)
ccomp(said-10, kept-17)
num(years-20, 7-19)
prep_for(kept-17, years-20)
nsubjpass(freed-25, then-22)
aux(freed-25, must-23)
auxpass(freed-25, be-24)
conj_but(said-10, freed-25)
mark(kept-33, while-27)
det(slave-30, a-28)
amod(slave-30, female-29)
nsubjpass(kept-33, slave-30)
aux(kept-33, can-31)
auxpass(kept-33, be-32)
advcl(freed-25, kept-33)
parataxis(freed-25, kept-33)
det(span-36, the-35)
prep_for(kept-33, span-36)
poss(life-39, her-38)
prep_of(span-36, life-39)

(ROOT
  (SQ (VBD Was)
    (NP (PRP it))
    (VP
      (VP (VBN created)
        (PP (IN in)
          (NP
            (NP (CD 6) (NNS days))
            (ADVP
              (NP (DT a) (JJ few) (CD thousand) (NNS years))
              (RB ago)))))
      (CC or)
      (VP (VBZ is)
        (ADJP
          (NP (PRP it))
          (JJR older))))
    (. ?)))

aux(created-3, Was-1)
nsubj(created-3, it-2)
nsubj(older-15, it-2)
root(ROOT-0, created-3)
num(days-6, 6-5)
prep_in(created-3, days-6)
det(years-10, a-7)
amod(years-10, few-8)
num(years-10, thousand-9)
npadvmod(ago-11, years-10)
advmod(days-6, ago-11)
cop(older-15, is-13)
npadvmod(older-15, it-14)
conj_or(created-3, older-15)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN evidence))
    (SQ (VBZ is)
      (NP
        (NP (RB there))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ supports)
              (NP (DT both) (NNS views)))))))
    (. ?)))

det(evidence-2, What-1)
attr(is-3, evidence-2)
root(ROOT-0, is-3)
nsubj(is-3, there-4)
nsubj(supports-6, there-4)
rcmod(there-4, supports-6)
det(views-8, both-7)
dobj(supports-6, views-8)

(ROOT
  (SBAR (IN If)
    (S
      (NP (NNP Terra))
      (VP (VBD was)
        (ADJP (RB not) (VBN created)
          (PP
            (PP (IN by)
              (NP (DT a) (JJ materialistic) (NN process)))
            (, ,)
            (CC but)
            (RB rather)
            (PP (IN by)
              (NP (DT some) (JJ supernatural) (NN agent))
              (ADVP (RB then)))))
        (X
          (SBARQ
            (WHADVP (WRB how))
            (SQ (VBP do)
              (NP (PRP you))
              (VP (VB prove)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP
                      (NP (CD one))
                      (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-)))
                    (VP (VBD were)
                      (ADJP (JJ responsible)
                        (PP (IN for)
                          (NP (PRP it)))))))))
            (. ?)))))))

mark(created-5, If-1)
nsubjpass(created-5, Terra-2)
auxpass(created-5, was-3)
neg(created-5, not-4)
root(ROOT-0, created-5)
prep(created-5, by-6)
det(process-9, a-7)
amod(process-9, materialistic-8)
pobj(by-6, process-9)
prep(created-5, rather-12)
advmod(by-6, rather-12)
conj_but(by-6, rather-12)
dep(by-6, by-13)
det(agent-16, some-14)
amod(agent-16, supernatural-15)
pobj(by-13, agent-16)
advmod(by-13, then-17)
advmod(prove-21, how-18)
aux(prove-21, do-19)
nsubj(prove-21, you-20)
dep(created-5, prove-21)
dobj(responsible-28, which-22)
nsubj(responsible-28, one-23)
dep(one-23, s-25)
cop(responsible-28, were-27)
ccomp(prove-21, responsible-28)
prep_for(responsible-28, it-30)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (NP (DT an) (JJ intentional) (NN creation))
          (ADVP (RB then)))))
    (WHNP (WP what))
    (SQ
      (VP (VBD was)
        (NP
          (NP (DT the) (NN motive))
          (PP (IN behind)
            (NP (PRP$ its) (NN creation))))))
    (. ?)))

mark(creation-6, If-1)
nsubj(creation-6, it-2)
cop(creation-6, was-3)
det(creation-6, an-4)
amod(creation-6, intentional-5)
dep(motive-11, creation-6)
advmod(creation-6, then-7)
nsubj(motive-11, what-8)
cop(motive-11, was-9)
det(motive-11, the-10)
root(ROOT-0, motive-11)
poss(creation-14, its-13)
prep_behind(motive-11, creation-14)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP say)
        (SBAR (IN that)
          (S
            (NP (NNP God))
            (VP (VBD knew)
              (SBAR (IN that)
                (S
                  (NP (NN mankind))
                  (VP (MD would)
                    (VP (VB fall))))))))))
    (: ...)
    (SQ (VBP do)
      (NP (PRP you))
      (ADVP (RB also))
      (VP (VB believe)
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (VBP suffer)
              (PP (IN for)
                (NP
                  (NP (NN eternity))
                  (PP (IN in)
                    (NP (NNP Hell)))))
              (PP (IN for)
                (NP (DT that) (NN fall))))))))
    (. ?)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
complm(knew-5, that-3)
nsubj(knew-5, God-4)
ccomp(say-2, knew-5)
complm(fall-9, that-6)
nsubj(fall-9, mankind-7)
aux(fall-9, would-8)
ccomp(knew-5, fall-9)
aux(believe-14, do-11)
nsubj(believe-14, you-12)
advmod(believe-14, also-13)
parataxis(say-2, believe-14)
complm(suffer-17, that-15)
nsubj(suffer-17, people-16)
ccomp(believe-14, suffer-17)
prep_for(suffer-17, eternity-19)
prep_in(eternity-19, Hell-21)
det(fall-24, that-23)
prep_for(suffer-17, fall-24)

