(ROOT
  (PRN (: --)
    (NP
      (NP (NNP Ian) (NNP asksIf))
      (SBAR
        (S
          (NP (DT a) (JJ prominent) (NNP ID) (NN advocate))
          (VP (MD ca) (RB n't)
            (ADVP (RB even))
            (VP (VB get)
              (NP
                (NP (DT the) (NN description))
                (PP (IN of)
                  (NP (CD one) (JJ basic) (NN paper))))
              (ADVP (RB right))
              (, ,)
              (SBAR
                (SBARQ
                  (WHADVP (WRB how))
                  (SQ (VBP are)
                    (NP (PRP they))
                    (VP (VBG going)
                      (S
                        (VP (TO to)
                          (VP (VB handle)
                            (NP
                              (ADJP (RBR more) (JJ complicated))
                              (NNS papers))
                            (PP (IN on)
                              (NP
                                (NP (DT the) (NN evolution))
                                (PP (IN of)
                                  (NP (DT the) (JJ immune) (NN system))))))))))
                  (. ?))))))))))

nn(asksIf-3, Ian-2)
root(ROOT-0, asksIf-3)
det(advocate-7, a-4)
amod(advocate-7, prominent-5)
nn(advocate-7, ID-6)
nsubj(get-11, advocate-7)
aux(get-11, ca-8)
neg(get-11, n't-9)
advmod(get-11, even-10)
rcmod(asksIf-3, get-11)
det(description-13, the-12)
dobj(get-11, description-13)
num(paper-17, one-15)
amod(paper-17, basic-16)
prep_of(description-13, paper-17)
advmod(get-11, right-18)
advmod(going-23, how-20)
aux(going-23, are-21)
nsubj(going-23, they-22)
xsubj(handle-25, they-22)
dep(get-11, going-23)
aux(handle-25, to-24)
xcomp(going-23, handle-25)
advmod(complicated-27, more-26)
amod(papers-28, complicated-27)
dobj(handle-25, papers-28)
det(evolution-31, the-30)
prep_on(handle-25, evolution-31)
det(system-35, the-33)
amod(system-35, immune-34)
prep_of(evolution-31, system-35)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (CONJP (RB not) (RB just))
        (NP
          (NP (DT the) (NN ignorance))
          (PP (IN of)
            (NP (NN science))))
        (CC but)
        (NP
          (NP (DT the) (NN ignorance))
          (PP (IN of)
            (NP (DT the) (NNP ID) (NN proponent)))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ seems)
                (S
                  (VP (TO to)
                    (VP (VB trigger)
                      (S (`` ``)
                        (NP (NN design) (NNS inferences))
                        ('' '')))))))))))
    (. .)))

amod(words-3, other-2)
prep_in(ignorance-10, words-3)
nsubj(ignorance-10, it-5)
cop(ignorance-10, 's-6)
neg(just-8, not-7)
preconj(ignorance-10, just-8)
det(ignorance-10, the-9)
root(ROOT-0, ignorance-10)
prep_of(ignorance-10, science-12)
det(ignorance-15, the-14)
conj_but(ignorance-10, ignorance-15)
nsubj(seems-21, ignorance-15)
det(proponent-19, the-17)
nn(proponent-19, ID-18)
prep_of(ignorance-15, proponent-19)
rcmod(ignorance-15, seems-21)
aux(trigger-23, to-22)
xcomp(seems-21, trigger-23)
nn(inferences-26, design-25)
dep(trigger-23, inferences-26)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ subjective) (NN nature))
      (PP (IN of)
        (NP (DT the) (NN design) (NN inference))))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (DT another) (JJ problematic) (NN component))))))
    (. .)))

det(nature-3, The-1)
amod(nature-3, subjective-2)
nsubj(seems-8, nature-3)
xsubj(component-13, nature-3)
det(inference-7, the-5)
nn(inference-7, design-6)
prep_of(nature-3, inference-7)
root(ROOT-0, seems-8)
aux(component-13, to-9)
cop(component-13, be-10)
det(component-13, another-11)
amod(component-13, problematic-12)
xcomp(seems-8, component-13)

(ROOT
  (S (CC And)
    (VP
      (VP (VB remember))
      (, ,)
      (PP (VBG according)
        (PP (TO to)
          (NP
            (NP (NNP Dembski))
            (SBAR (IN if)
              (S
                (NP (DT the) (NN filter))
                (VP (VBZ triggers)
                  (NP
                    (NP (DT a) (JJ false) (NN positive))
                    (PRN (-LRB- -LRB-)
                      (NP
                        (NP (JJ detects) (NN design))
                        (SBAR
                          (WHADVP (WRB where))
                          (S
                            (NP (EX there))
                            (VP (VBZ is)
                              (NP (NN none))))))
                      (-RRB- -RRB-))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (MD would)
                          (VP (VB render)
                            (S
                              (NP (DT the) (NN filter))
                              (ADJP (JJ useless)))))))))))))))
    (. .)))

cc(remember-2, And-1)
root(ROOT-0, remember-2)
prepc_according_to(remember-2, to-5)
pobj(remember-2, Dembski-6)
mark(triggers-10, if-7)
det(filter-9, the-8)
nsubj(triggers-10, filter-9)
dep(Dembski-6, triggers-10)
det(positive-13, a-11)
amod(positive-13, false-12)
dobj(triggers-10, positive-13)
dobj(render-24, positive-13)
amod(design-16, detects-15)
dep(positive-13, design-16)
advmod(is-19, where-17)
expl(is-19, there-18)
rcmod(design-16, is-19)
nsubj(is-19, none-20)
nsubj(render-24, it-22)
aux(render-24, would-23)
rcmod(positive-13, render-24)
det(filter-26, the-25)
nsubj(useless-27, filter-26)
xcomp(render-24, useless-27)

(ROOT
  (S
    (S
      (NP (NNP Dembski))
      (VP (VBZ goes)
        (PRT (RP on))
        (S
          (VP (TO to)
            (VP (VB claim)
              (SBAR (IN that)
                (S
                  (NP (DT no) (JJ false) (NNS positives))
                  (VP (VBP are)
                    (ADVP (RB ever))
                    (VP (VBN triggered)
                      (PP (IN by)
                        (NP (DT the) (NN filter))))))))))))
    (CC but)
    (S
      (NP (PRP we))
      (ADVP (RB already))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP (DT this))
            (VP (VBZ is)
              (ADJP (JJ wrong)))))))
    (. .)))

nsubj(goes-2, Dembski-1)
xsubj(claim-5, Dembski-1)
root(ROOT-0, goes-2)
prt(goes-2, on-3)
aux(claim-5, to-4)
xcomp(goes-2, claim-5)
complm(triggered-12, that-6)
det(positives-9, no-7)
amod(positives-9, false-8)
nsubjpass(triggered-12, positives-9)
auxpass(triggered-12, are-10)
advmod(triggered-12, ever-11)
ccomp(claim-5, triggered-12)
det(filter-15, the-14)
agent(triggered-12, filter-15)
nsubj(know-19, we-17)
advmod(know-19, already-18)
conj_but(goes-2, know-19)
complm(wrong-23, that-20)
nsubj(wrong-23, this-21)
cop(wrong-23, is-22)
ccomp(know-19, wrong-23)

