(ROOT
  (S
    (NP (NNP Casey) (NNP Luskin))
    (VP (VBZ knows)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (TO to)
            (VP (VB use)
              (NP (JJ impressive) (JJ multi) (JJ syllabic) (NNS words))
              (S
                (VP (TO to)
                  (VP (VB suggest)
                    (SBAR (IN that)
                      (S
                        (NP (PRP he))
                        (VP (VBZ 's)
                          (ADJP (JJ intelligent)))))))))))))
    (. .)))

nn(Luskin-2, Casey-1)
nsubj(knows-3, Luskin-2)
root(ROOT-0, knows-3)
advmod(use-6, how-4)
aux(use-6, to-5)
ccomp(knows-3, use-6)
xcomp(knows-3, use-6)
amod(words-10, impressive-7)
amod(words-10, multi-8)
amod(words-10, syllabic-9)
dobj(use-6, words-10)
aux(suggest-12, to-11)
xcomp(use-6, suggest-12)
complm(intelligent-16, that-13)
nsubj(intelligent-16, he-14)
cop(intelligent-16, 's-15)
ccomp(suggest-12, intelligent-16)

(ROOT
  (SINV
    (S
      (PP (IN By)
        (NP (NN gosh)))
      (, ,)
      (NP (PRP he))
      (VP
        (ADVP (RB almost))
        (VBZ sounds)
        (PP (IN like)
          (NP (DT a) (NN scientist)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP he))
            (VP (VBZ says)
              (NP
                (NP (DT that))
                ('' '')
                (NP
                  (NP (DT The) (NN form))
                  (PP (IN of)
                    (NP (NN information)))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (ADVP (RB reliably))
                      (VP (VBZ indicates)
                        (SBAR
                          (S
                            (NP (NN design))
                            (VP (VBZ is)
                              (ADVP (RB generally))
                              (VP (VBN called)
                                (NP (`` ``) (JJ specified) (NN complexity) ('' ''))))))))))
                (CC or)
                (`` ``)
                (NP (NN complex))
                (CC and)
                (NP (VBN specified) (NN information))))))))
    (, ,) ('' '') ('' '')
    (VP (VBZ whatever))
    (NP (DT the) (NN hell)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ means)))))
    (. .)))

prep_by(sounds-6, gosh-2)
nsubj(sounds-6, he-4)
advmod(sounds-6, almost-5)
ccomp(whatever-39, sounds-6)
det(scientist-9, a-8)
prep_like(sounds-6, scientist-9)
advmod(says-12, when-10)
nsubj(says-12, he-11)
advcl(sounds-6, says-12)
dobj(says-12, that-13)
det(form-16, The-15)
dobj(says-12, form-16)
conj_or(that-13, form-16)
nsubj(indicates-21, form-16)
prep_of(form-16, information-18)
advmod(indicates-21, reliably-20)
rcmod(form-16, indicates-21)
nsubjpass(called-25, design-22)
auxpass(called-25, is-23)
advmod(called-25, generally-24)
ccomp(indicates-21, called-25)
amod(complexity-28, specified-27)
dobj(called-25, complexity-28)
dobj(says-12, complex-32)
conj_or(that-13, complex-32)
amod(information-35, specified-34)
dobj(says-12, information-35)
conj_and(that-13, information-35)
root(ROOT-0, whatever-39)
det(hell-41, the-40)
nsubj(whatever-39, hell-41)
nsubj(means-43, that-42)
ccomp(hell-41, means-43)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS grains))
      (PP (IN of)
        (NP (NN sand))))
    (RB all)
    (VP (VBD ended)
      (PRT (RP up))
      (PP (IN on)
        (NP (DT the) (NN floor)))
      (PP (IN without)
        (NP
          (NP (DT any) (JJ conscious) (NN intention))
          (PP (IN of)
            (S
              (VP (VBG going)
                (ADVP (RB there))
                (, ,)
                (SBAR (RB just) (IN because)
                  (S
                    (NP (PRP they))
                    (VP (VBD were) (RB all)
                      (VP (VBN influenced)
                        (PP (IN by)
                          (NP (NN gravity)))))))))))))
    (. .)))

det(grains-2, The-1)
nsubj(ended-6, grains-2)
prep_of(grains-2, sand-4)
advmod(ended-6, all-5)
root(ROOT-0, ended-6)
prt(ended-6, up-7)
det(floor-10, the-9)
prep_on(ended-6, floor-10)
det(intention-14, any-12)
amod(intention-14, conscious-13)
prep_without(ended-6, intention-14)
prepc_of(intention-14, going-16)
advmod(going-16, there-17)
advmod(influenced-24, just-19)
dep(influenced-24, because-20)
nsubjpass(influenced-24, they-21)
auxpass(influenced-24, were-22)
advmod(influenced-24, all-23)
ccomp(going-16, influenced-24)
agent(influenced-24, gravity-26)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ same) (NN way)))
    (, ,)
    (NP (PDT all) (DT those) (NNS organisms))
    (VP (VBD kept)
      (PP (IN on)
        (S
          (VP (VBG improving)
            (NP (PRP$ their) (NN fitness))
            (PP (IN without)
              (NP
                (NP (DT any) (NN intention))
                (PP (IN on)
                  (NP
                    (NP (NN anyone) (POS 's))
                    (NN part)))))
            (, ,)
            (SBAR (RB just) (IN because)
              (S
                (NP
                  (NP (DT those))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBD were)
                        (ADJP (RBS most) (JJ fit))))))
                (VP
                  (VP (VBD survived))
                  (CC and)
                  (VP (VBD reproduced)
                    (SBAR (IN while)
                      (S
                        (NP (DT the) (JJS least) (NN fit))
                        (VP (VBD died))))))))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (DT any) (JJ reasonable) (NN person))
                (VP (MD would)
                  (VP (VB expect)))))))))
    (. .)))

det(way-4, the-2)
amod(way-4, same-3)
prep_in(kept-9, way-4)
predet(organisms-8, all-6)
det(organisms-8, those-7)
nsubj(kept-9, organisms-8)
root(ROOT-0, kept-9)
prepc_on(kept-9, improving-11)
poss(fitness-13, their-12)
dobj(improving-11, fitness-13)
det(intention-16, any-15)
prep_without(improving-11, intention-16)
poss(part-20, anyone-18)
prep_on(intention-16, part-20)
advmod(survived-29, just-22)
dep(survived-29, because-23)
nsubj(fit-28, those-24)
nsubj(survived-29, those-24)
nsubj(reproduced-31, those-24)
cop(fit-28, were-26)
advmod(fit-28, most-27)
rcmod(those-24, fit-28)
dep(improving-11, survived-29)
dep(improving-11, reproduced-31)
conj_and(survived-29, reproduced-31)
mark(died-36, while-32)
det(fit-35, the-33)
amod(fit-35, least-34)
nsubj(died-36, fit-35)
advcl(reproduced-31, died-36)
mark(expect-43, as-38)
det(person-41, any-39)
amod(person-41, reasonable-40)
nsubj(expect-43, person-41)
aux(expect-43, would-42)
advcl(improving-11, expect-43)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP
        (NP (RB so) (JJ mysterious))
        (PP (IN about)
          (NP (DT that)))))
    (. ?)))

attr('s-2, What-1)
root(ROOT-0, 's-2)
advmod(mysterious-4, so-3)
nsubj('s-2, mysterious-4)
prep_about(mysterious-4, that-6)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB expect)
      (S
        (NP (NN anything))
        (ADJP (JJ different))))
    (. ?)))

aux(expect-3, Would-1)
nsubj(expect-3, you-2)
root(ROOT-0, expect-3)
nsubj(different-5, anything-4)
xcomp(expect-3, different-5)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB need)
      (S
        (VP (TO to)
          (VP (VB hypothesize)
            (NP (DT a)
              (ADJP (RB grandfatherly) (JJ old))
              (NN codger))
            (PP (IN in)
              (NP
                (NP (DT the) (NN sky))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBN manipulated)
                      (NP
                        (NP (DT every) (NN gene))
                        (PP (IN in)
                          (NP (DT every) (NN organism)))))))))))))
    (. ?)))

aux(need-3, Do-1)
nsubj(need-3, you-2)
xsubj(hypothesize-5, you-2)
root(ROOT-0, need-3)
aux(hypothesize-5, to-4)
xcomp(need-3, hypothesize-5)
det(codger-9, a-6)
advmod(old-8, grandfatherly-7)
amod(codger-9, old-8)
dobj(hypothesize-5, codger-9)
det(sky-12, the-11)
prep_in(hypothesize-5, sky-12)
nsubj(manipulated-14, sky-12)
rcmod(sky-12, manipulated-14)
det(gene-16, every-15)
dobj(manipulated-14, gene-16)
det(organism-19, every-18)
prep_in(gene-16, organism-19)

(ROOT
  (S
    (VP (VB Get)
      (ADJP (JJ real)))
    (. .)))

dep(real-2, Get-1)
root(ROOT-0, real-2)

(ROOT
  (S
    (ADVP (RB Apparently))
    (, ,)
    (NP
      (NP (DT all))
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ means)))))
    (VP (VBZ is)
      (SBAR (IN that) (IN if)
        (S
          (S
            (NP
              (NP (DT a) (NN process))
              (PP
                (PP (IN with)
                  (NP (JJ many) (NNS components)))
                (PRN (-LRB- -LRB-)
                  (ADVP (RB therefore))
                  (ADJP (`` ``) (JJ complex) ('' ''))
                  (-RRB- -RRB-))))
            (VP (VBZ behaves)
              (ADVP (RB so) (RB as))
              (S
                (VP (TO to)
                  (VP (VB head)
                    (ADVP (RB coherently))
                    (PP
                      (PP (IN in)
                        (NP (DT a) (JJ single) (NN direction)))
                      (PRN (-LRB- -LRB-)
                        (ADVP (RB therefore))
                        (ADJP (`` ``) (JJ specified) ('' ''))
                        (-RRB- -RRB-))))))))
          (, ,) (RB then)
          (S
            (NP (PRP it))
            (VP (MD must)
              (VP (VB be)
                (NP
                  (NP (DT the) (NN result))
                  (PP (IN of)
                    (NP (JJ intelligent) (NN design))))))))))
    (. .)))

advmod(is-6, Apparently-1)
dobj(means-5, all-3)
nsubj(is-6, all-3)
nsubj(means-5, it-4)
rcmod(all-3, means-5)
root(ROOT-0, is-6)
complm(behaves-20, that-7)
dep(behaves-20, if-8)
det(process-10, a-9)
nsubj(behaves-20, process-10)
xsubj(head-24, process-10)
amod(components-13, many-12)
prep_with(process-10, components-13)
dep(complex-17, therefore-15)
dep(process-10, complex-17)
ccomp(is-6, behaves-20)
advmod(as-22, so-21)
advmod(behaves-20, as-22)
aux(head-24, to-23)
xcomp(behaves-20, head-24)
advmod(head-24, coherently-25)
det(direction-29, a-27)
amod(direction-29, single-28)
prep_in(head-24, direction-29)
dep(specified-33, therefore-31)
dep(head-24, specified-33)
advmod(behaves-20, then-37)
nsubj(result-42, it-38)
aux(result-42, must-39)
cop(result-42, be-40)
det(result-42, the-41)
dep(behaves-20, result-42)
amod(design-45, intelligent-44)
prep_of(result-42, design-45)

(ROOT
  (S
    (INTJ (UH OK))
    (, ,)
    (VP
      (ADVP (RB then))
      (VB try)
      (NP (DT this) (NN one)))
    (. .)))

dep(try-4, OK-1)
advmod(try-4, then-3)
root(ROOT-0, try-4)
det(one-6, this-5)
dobj(try-4, one-6)

(ROOT
  (S
    (VP (VB Get)
      (NP (DT a) (CD hundred) (NNS people))
      (S
        (VP
          (VP (TO to) (DT each)
            (VP (VB throw)
              (NP
                (NP
                  (NP (DT a) (NN handfull))
                  (PP (IN of)
                    (NP (NN sand))))
                (, ,) (RB perhaps)
                (NP
                  (NP (DT a) (CD thousand) (NNS grains))
                  (PP (IN per)
                    (NP (NN handfull)))))))
          (PRN (-LRB- -LRB-)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ 's) (`` ``)
                  (ADJP (JJ complex))
                  ('' ''))))
            (-RRB- -RRB-))))
      (, ,)
      (PP (IN at)
        (NP (DT a) (NN wall))))
    (. .)))

root(ROOT-0, Get-1)
det(people-4, a-2)
num(people-4, hundred-3)
dobj(Get-1, people-4)
aux(throw-7, to-5)
dep(throw-7, each-6)
dep(Get-1, throw-7)
det(handfull-9, a-8)
dobj(throw-7, handfull-9)
prep_of(handfull-9, sand-11)
advmod(handfull-9, perhaps-13)
det(grains-16, a-14)
num(grains-16, thousand-15)
dep(handfull-9, grains-16)
prep_per(grains-16, handfull-18)
nsubj(complex-23, that-20)
cop(complex-23, 's-21)
parataxis(throw-7, complex-23)
det(wall-29, a-28)
prep_at(Get-1, wall-29)

(ROOT
  (S
    (NP (NNP Watch))
    (VP (TO to)
      (VP (VB see)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ happens))))))
    (. .)))

nsubj(see-3, Watch-1)
aux(see-3, to-2)
root(ROOT-0, see-3)
nsubj(happens-5, what-4)
ccomp(see-3, happens-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT all))
          (PP (IN of)
            (NP (DT the) (CD 100,000) (NNS grains))))
        (VP
          (VP (VB reverse)
            (NP (NN direction))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBD hit)
                  (NP
                    (NP (DT the) (NN wall))
                    (CC and)
                    (NP (RB then) (NN curve) (RB downward)))))))
          (CC and)
          (VP (VB end)
            (PRT (RP up))
            (PP (IN on)
              (NP
                (NP (DT the) (NN floor))
                (PRN (-LRB- -LRB-)
                  (SBAR (IN that)
                    (S
                      (NP (PRP 's))
                      (`` ``)
                      (VP (VBD specified))
                      ('' '')))
                  (-RRB- -RRB-))))
            (, ,)
            (PP (IN with)
              (NP
                (NP (RB absolutely) (DT no) (NN communication))
                (PP (IN among)
                  (NP (PRP them)))))))))
    (, ,)
    (ADVP (RB then) (RB surely))
    (NP (PRP they))
    (VP (MD must)
      (VP (VB have)
        (VP (VBN been)
          (VP (VBN guided)
            (PP (IN by)
              (NP (DT an) (JJ intelligent) (NN designer)))))))
    (. .)))

mark(reverse-7, If-1)
nsubj(reverse-7, all-2)
nsubj(end-19, all-2)
det(grains-6, the-4)
num(grains-6, 100,000-5)
prep_of(all-2, grains-6)
advcl(guided-45, reverse-7)
dobj(reverse-7, direction-8)
advmod(hit-11, when-9)
nsubj(hit-11, they-10)
advcl(reverse-7, hit-11)
det(wall-13, the-12)
dobj(hit-11, wall-13)
advmod(curve-16, then-15)
dobj(hit-11, curve-16)
conj_and(wall-13, curve-16)
advmod(curve-16, downward-17)
conj_and(reverse-7, end-19)
advcl(guided-45, end-19)
prt(end-19, up-20)
det(floor-23, the-22)
prep_on(end-19, floor-23)
dep(specified-28, that-25)
nsubj(specified-28, 's-26)
dep(floor-23, specified-28)
advmod(communication-35, absolutely-33)
det(communication-35, no-34)
prep_with(end-19, communication-35)
prep_among(communication-35, them-37)
advmod(surely-40, then-39)
advmod(guided-45, surely-40)
nsubjpass(guided-45, they-41)
aux(guided-45, must-42)
aux(guided-45, have-43)
auxpass(guided-45, been-44)
root(ROOT-0, guided-45)
det(designer-49, an-47)
amod(designer-49, intelligent-48)
agent(guided-45, designer-49)

(ROOT
  (S
    (S
      (INTJ (UH Ah))
      (, ,)
      (CC but)
      (NP (NNP Mr.) (NNP Luskin))
      (VP (MD would)
        (VP (VB object)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN analogy))
              (VP (VBZ is)
                (ADJP (JJ irrelevant))
                (, ,)
                (SBAR (IN because)
                  (S
                    (SBAR (IN while)
                      (S
                        (NP (EX there))
                        (VP (VBD was)
                          (NP
                            (NP (DT some) (JJ random) (NN component))
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN movement))
                                (PP (IN of)
                                  (NP
                                    (NP (DT the) (JJ various) (NNS grains))
                                    (PP (IN of)
                                      (NP (NN sand))))))))
                          (, ,)
                          (PP (IN in)
                            (NP (DT the) (JJ final) (NN analysis))))))
                    (NP (PRP they))
                    (VP (VBD were) (RB all)
                      (ADJP (JJ subject)
                        (PP (TO to)
                          (NP
                            (NP (DT the) (VBG overriding) (NN influence))
                            (PP (IN of)
                              (NP (NN gravity)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP they))
            (VP
              (VP (VBD moved)
                (PP (IN in)
                  (NP (DT a) (JJ similar) (NN way))))
              (CC and)
              (VP (VBD ended)
                (PRT (RP up))
                (PP (IN on)
                  (NP (DT the) (NN floor)))))))))
    (. .)))

dep(object-7, Ah-1)
nn(Luskin-5, Mr.-4)
conj_but(object-7, Luskin-5)
nsubj(object-7, Luskin-5)
aux(object-7, would-6)
root(ROOT-0, object-7)
complm(irrelevant-12, that-8)
det(analogy-10, the-9)
nsubj(irrelevant-12, analogy-10)
cop(irrelevant-12, is-11)
ccomp(object-7, irrelevant-12)
mark(were-36, because-14)
mark(was-17, while-15)
expl(was-17, there-16)
advcl(were-36, was-17)
det(component-20, some-18)
amod(component-20, random-19)
nsubj(was-17, component-20)
det(movement-23, the-22)
prep_to(component-20, movement-23)
det(grains-27, the-25)
amod(grains-27, various-26)
prep_of(movement-23, grains-27)
prep_of(grains-27, sand-29)
det(analysis-34, the-32)
amod(analysis-34, final-33)
prep_in(was-17, analysis-34)
nsubj(were-36, they-35)
advcl(irrelevant-12, were-36)
advmod(were-36, all-37)
acomp(were-36, subject-38)
det(influence-42, the-40)
amod(influence-42, overriding-41)
prep_to(subject-38, influence-42)
prep_of(influence-42, gravity-44)
nsubj('s-48, that-47)
conj_and(object-7, 's-48)
advmod(moved-51, why-49)
nsubj(moved-51, they-50)
nsubj(ended-57, they-50)
advcl('s-48, moved-51)
det(way-55, a-53)
amod(way-55, similar-54)
prep_in(moved-51, way-55)
advcl('s-48, ended-57)
conj_and(moved-51, ended-57)
prt(ended-57, up-58)
det(floor-61, the-60)
prep_on(ended-57, floor-61)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (ADJP (JJ true)))
    (. .)))

nsubj(true-3, That-1)
cop(true-3, 's-2)
root(ROOT-0, true-3)

(ROOT
  (S (CC And)
    (S
      (PP (IN in)
        (NP (DT the) (JJ same) (NN way)))
      (, ,)
      (NP
        (NP (DT the) (JJ various) (NNS organisms))
        (CC and)
        (NP (PRP$ their) (JJ various) (NNS organs)))
      (VP (VBP have)
        (VP (VBN shown)
          (NP (JJ significant) (NN randomness))
          (PP (IN throughout)
            (NP (PRP$ their) (NN evolution))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (DT the) (JJ final) (NN analysis)))
      (, ,)
      (NP (PRP they))
      (VP (VBD were) (RB all)
        (ADJP (JJ subject)
          (PP (TO to)
            (NP
              (NP
                (NP (DT the) (VBG overriding) (NN influence))
                (PP (IN of)
                  (NP (JJ natural) (NN selection))))
              (CC and)
              (NP
                (NP (DT the) (NN survival))
                (PP (IN of)
                  (NP (DT the) (JJS fittest)))))))))
    (. .)))

det(way-5, the-3)
amod(way-5, same-4)
prep_in(shown-15, way-5)
det(organisms-9, the-7)
amod(organisms-9, various-8)
nsubj(shown-15, organisms-9)
poss(organs-13, their-11)
amod(organs-13, various-12)
conj_and(organisms-9, organs-13)
nsubj(shown-15, organs-13)
aux(shown-15, have-14)
root(ROOT-0, shown-15)
amod(randomness-17, significant-16)
dobj(shown-15, randomness-17)
poss(evolution-20, their-19)
prep_throughout(shown-15, evolution-20)
det(analysis-26, the-24)
amod(analysis-26, final-25)
prep_in(subject-31, analysis-26)
nsubj(subject-31, they-28)
cop(subject-31, were-29)
advmod(subject-31, all-30)
conj_but(shown-15, subject-31)
det(influence-35, the-33)
amod(influence-35, overriding-34)
prep_to(subject-31, influence-35)
amod(selection-38, natural-37)
prep_of(influence-35, selection-38)
det(survival-41, the-40)
prep_to(subject-31, survival-41)
conj_and(influence-35, survival-41)
det(fittest-44, the-43)
prep_of(survival-41, fittest-44)

(ROOT
  (S
    (S
      (NP (DT The) (JJS least) (NN fit))
      (VP (VBD died)))
    (: ;)
    (S
      (NP (DT the) (JJS most) (NN fit))
      (VP
        (VP (VBD survived))
        (CC and)
        (VP (VBD contributed)
          (NP (PRP$ their) (NNS genes))
          (PP (TO to)
            (NP (DT the) (JJ next) (NN generation))))))
    (. .)))

det(fit-3, The-1)
amod(fit-3, least-2)
nsubj(died-4, fit-3)
root(ROOT-0, died-4)
det(fit-8, the-6)
amod(fit-8, most-7)
nsubj(survived-9, fit-8)
nsubj(contributed-11, fit-8)
parataxis(died-4, survived-9)
parataxis(died-4, contributed-11)
conj_and(survived-9, contributed-11)
poss(genes-13, their-12)
dobj(contributed-11, genes-13)
det(generation-17, the-15)
amod(generation-17, next-16)
prep_to(contributed-11, generation-17)

