(ROOT
  (S ('' '')
    (S
      (NP
        (NP (DT That))
        (PP (IN of)
          (NP (NN course))))
      (VP (VBZ is)
        (NP (DT a) (JJ wrong) (NN statement))
        (SBAR (IN because)
          (S
            (NP (NN science) (RB not))
            (ADVP (RB only))
            (VP (MD can)
              (VP (VB explain)
                (NP (NN information)
                  (CC and)
                  (NN complexity))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD can)
      (ADVP (RB also))
      (VP (VB explain)
        (NP
          (ADJP (RB perfectly) (JJ natural))
          (NNS pathways))
        (PP (TO to)
          (NP
            (ADJP (RB irreducibly) (JJ complex))
            (NNS systems)))))
    (. .)))

nsubj(statement-8, That-2)
prep_of(That-2, course-4)
cop(statement-8, is-5)
det(statement-8, a-6)
amod(statement-8, wrong-7)
ccomp(explain-22, statement-8)
mark(explain-14, because-9)
nsubj(explain-14, science-10)
neg(science-10, not-11)
advmod(explain-14, only-12)
aux(explain-14, can-13)
advcl(statement-8, explain-14)
dobj(explain-14, information-15)
dobj(explain-14, complexity-17)
conj_and(information-15, complexity-17)
nsubj(explain-22, it-19)
aux(explain-22, can-20)
advmod(explain-22, also-21)
root(ROOT-0, explain-22)
advmod(natural-24, perfectly-23)
amod(pathways-25, natural-24)
dobj(explain-22, pathways-25)
advmod(complex-28, irreducibly-27)
amod(systems-29, complex-28)
prep_to(explain-22, systems-29)

