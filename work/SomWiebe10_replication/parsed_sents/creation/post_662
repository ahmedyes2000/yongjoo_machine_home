(ROOT
  (S
    (NP
      (NP (DT The) (NN reason))
      (PP (IN for)
        (NP
          (NP (DT the) (NN existence))
          (PP (IN of)
            (NP (DT the) (JJ second) (NN amendment))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB prevent)
            (NP (JJ religious) (NNS people))
            (PP (IN from)
              (S
                (VP (VBG being)
                  (VP (VBN denied)
                    (NP (DT the) (NN opportunity)
                      (S
                        (VP (TO to)
                          (VP (VB practice)
                            (NP (PRP$ their) (NN religion))))))))))))))
    (. .)))

det(reason-2, The-1)
nsubj(is-10, reason-2)
xsubj(prevent-12, reason-2)
det(existence-5, the-4)
prep_for(reason-2, existence-5)
det(amendment-9, the-7)
amod(amendment-9, second-8)
prep_of(existence-5, amendment-9)
root(ROOT-0, is-10)
aux(prevent-12, to-11)
xcomp(is-10, prevent-12)
amod(people-14, religious-13)
dobj(prevent-12, people-14)
auxpass(denied-17, being-16)
prepc_from(prevent-12, denied-17)
det(opportunity-19, the-18)
dobj(denied-17, opportunity-19)
aux(practice-21, to-20)
infmod(opportunity-19, practice-21)
poss(religion-23, their-22)
dobj(practice-21, religion-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB also))
      (VP (VBN designed)
        (S
          (VP (TO to)
            (VP (VB prevent)
              (NP (NNS people))
              (PP (IN from)
                (S
                  (VP (VBG being)
                    (VP (VBN forced)
                      (S
                        (VP (TO to)
                          (VP (VB practice)
                            (NP (DT a) (NN religion))))))))))))))
    (. .)))

nsubjpass(designed-4, It-1)
xsubj(prevent-6, It-1)
auxpass(designed-4, is-2)
advmod(designed-4, also-3)
root(ROOT-0, designed-4)
aux(prevent-6, to-5)
xcomp(designed-4, prevent-6)
dobj(prevent-6, people-7)
auxpass(forced-10, being-9)
prepc_from(prevent-6, forced-10)
aux(practice-12, to-11)
xcomp(forced-10, practice-12)
det(religion-14, a-13)
dobj(practice-12, religion-14)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are)
      (NP
        (NP (JJ worthy) (NNS reasons))
        (PP (IN for)
          (NP (DT the) (JJ second) (NN amendment)))))
    (. .)))

nsubj(reasons-4, These-1)
cop(reasons-4, are-2)
amod(reasons-4, worthy-3)
root(ROOT-0, reasons-4)
det(amendment-8, the-6)
amod(amendment-8, second-7)
prep_for(reasons-4, amendment-8)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (RB not) (DT a) (JJ single) (NN person))
    (VP
      (VP (MD will)
        (VP (VB be)
          (VP (VBN prevented)
            (PP (IN from)
              (S
                (VP (VBG practicing)))))))
      (CC or)
      (VP (MD will)
        (VP (VB be)
          (VP (VBN forced)
            (S
              (VP (TO to)
                (VP (VB practice)
                  (NP (DT a) (NN religion))
                  (SBAR (IN if)
                    (S
                      (NP (NNP ID))
                      (VP (VBZ is)
                        (VP (VBN taught)
                          (PP (IN in)
                            (NP (NNS schools))))))))))))))
    (. .)))

advmod(prevented-9, However-1)
neg(person-6, not-3)
det(person-6, a-4)
amod(person-6, single-5)
nsubjpass(prevented-9, person-6)
nsubjpass(forced-15, person-6)
aux(prevented-9, will-7)
auxpass(prevented-9, be-8)
root(ROOT-0, prevented-9)
prepc_from(prevented-9, practicing-11)
aux(forced-15, will-13)
auxpass(forced-15, be-14)
conj_or(prevented-9, forced-15)
aux(practice-17, to-16)
xcomp(forced-15, practice-17)
det(religion-19, a-18)
dobj(practice-17, religion-19)
mark(taught-23, if-20)
nsubjpass(taught-23, ID-21)
auxpass(taught-23, is-22)
advcl(practice-17, taught-23)
prep_in(taught-23, schools-25)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP
      (NP (DT the) (NNS reasons))
      (PP (IN for)
        (NP (DT the) (JJ second) (NN amendment))))
    (VP (VBP are) (RB not)
      (ADJP (JJ applicable)
        (PP (TO to)
          (NP
            (NP (DT the) (NN teaching))
            (PP (IN of)
              (NP (NNP ID)))))))
    (. .)))

advmod(applicable-11, Therefore-1)
det(reasons-4, the-3)
nsubj(applicable-11, reasons-4)
det(amendment-8, the-6)
amod(amendment-8, second-7)
prep_for(reasons-4, amendment-8)
cop(applicable-11, are-9)
neg(applicable-11, not-10)
root(ROOT-0, applicable-11)
det(teaching-14, the-13)
prep_to(applicable-11, teaching-14)
prep_of(teaching-14, ID-16)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT no) (JJ scientific) (NN evidence))
          (SBAR (IN that)
            (S
              (NP (NN atheist) (NNS students))
              (VP (VBP suffer)
                (NP (JJ mental) (NN health) (NNS complications))
                (PP (IN as)
                  (NP
                    (NP (DT a) (NN result))
                    (PP (IN of)
                      (S
                        (VP (VBG being)
                          (VP (VBN exposed)
                            (PP (TO to)
                              (NP (NNP Intelligent) (NNP Design)))))))))))))
        (, ,)
        (CC nor)
        (NP
          (NP (NN evidence))
          (SBAR (IN that)
            (S
              (NP
                (NP (PRP$ their))
                (CC or)
                (NP
                  (NP (PRP$ their) (NN parent) (POS 's))
                  (NN ability)
                  (S
                    (VP (TO to)
                      (VP (VB vote)
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (NP (PRP they))
                            (VP (VBP wish)))))))))
              (VP (MD will)
                (VP (VB be)
                  (VP (VBN affected)))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(evidence-5, no-3)
amod(evidence-5, scientific-4)
nsubj(is-2, evidence-5)
complm(suffer-9, that-6)
nn(students-8, atheist-7)
nsubj(suffer-9, students-8)
dep(evidence-5, suffer-9)
amod(complications-12, mental-10)
nn(complications-12, health-11)
dobj(suffer-9, complications-12)
det(result-15, a-14)
prep_as(suffer-9, result-15)
auxpass(exposed-18, being-17)
prepc_of(result-15, exposed-18)
nn(Design-21, Intelligent-20)
prep_to(exposed-18, Design-21)
nsubj(is-2, evidence-24)
conj_nor(evidence-5, evidence-24)
complm(affected-39, that-25)
nsubjpass(affected-39, their-26)
poss(parent-29, their-28)
poss(ability-31, parent-29)
conj_or(their-26, ability-31)
nsubjpass(affected-39, ability-31)
aux(vote-33, to-32)
infmod(ability-31, vote-33)
advmod(wish-36, how-34)
nsubj(wish-36, they-35)
ccomp(vote-33, wish-36)
aux(affected-39, will-37)
auxpass(affected-39, be-38)
dep(evidence-24, affected-39)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (JJ scientific) (NN evidence))
      (ADVP (RB whatsoever))
      (SBAR (IN that)
        (S
          (NP (NN harm))
          (VP (VBZ is)
            (VP (VBN caused)
              (PP (TO to)
                (NP (NN anyone)))
              (PP (IN after)
                (NP
                  (NP (VBN repeated) (NN exposure))
                  (PP (TO to)
                    (NP (NNP Intelligent) (NNP Design))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(evidence-5, no-3)
amod(evidence-5, scientific-4)
nsubj(is-2, evidence-5)
advmod(is-2, whatsoever-6)
complm(caused-10, that-7)
nsubjpass(caused-10, harm-8)
auxpass(caused-10, is-9)
ccomp(is-2, caused-10)
prep_to(caused-10, anyone-12)
amod(exposure-15, repeated-14)
prep_after(caused-10, exposure-15)
nn(Design-18, Intelligent-17)
prep_to(exposure-15, Design-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS hypothesis))
      (SBAR (IN that)
        (S
          (NP
            (NP (NNS people) (POS 's))
            (NNS rights))
          (VP (MD will)
            (VP (VB be)
              (VP (VBN violated)
                (SBAR
                  (S
                    (NP (JJ and\/or) (NN harm))
                    (VP (MD will)
                      (VP (VB be)
                        (VP (VBN caused))))))))))))
    (VP (VBZ is) (RB not)
      (VP (VBN supported)
        (PP (IN in)
          (NP
            (NP (DT any) (JJ peer-reviewed) (NNS journals))
            (PRN (-LRB- -LRB-)
              (CC and)
              (S
                (NP (PRP we))
                (VP
                  (ADVP (DT all))
                  (VBP know)
                  (SBAR (IN that)
                    (S
                      (SBAR (IN if)
                        (S
                          (NP (PRP it))
                          (VP (VBP ai) (RB n't)
                            (PP (IN in)
                              (NP (JJ peer-reviewed) (NNS journals)))
                            (, ,)
                            (ADVP (RB then)))))
                      (NP (PRP it))
                      (VP (MD should) (RB not)
                        (VP (VB be)
                          (VP (VBN believed))))))))
              (-RRB- -RRB-))))))
    (. .)))

det(hypothesis-2, The-1)
nsubjpass(supported-17, hypothesis-2)
complm(violated-9, that-3)
poss(rights-6, people-4)
nsubjpass(violated-9, rights-6)
aux(violated-9, will-7)
auxpass(violated-9, be-8)
dep(hypothesis-2, violated-9)
amod(harm-11, and\/or-10)
nsubjpass(caused-14, harm-11)
aux(caused-14, will-12)
auxpass(caused-14, be-13)
ccomp(violated-9, caused-14)
auxpass(supported-17, is-15)
neg(supported-17, not-16)
root(ROOT-0, supported-17)
det(journals-21, any-19)
amod(journals-21, peer-reviewed-20)
prep_in(supported-17, journals-21)
dep(know-26, and-23)
nsubj(know-26, we-24)
advmod(know-26, all-25)
dep(journals-21, know-26)
complm(believed-41, that-27)
mark(ai-30, if-28)
nsubj(ai-30, it-29)
advcl(believed-41, ai-30)
neg(ai-30, n't-31)
amod(journals-34, peer-reviewed-33)
prep_in(ai-30, journals-34)
advmod(ai-30, then-36)
nsubjpass(believed-41, it-37)
aux(believed-41, should-38)
neg(believed-41, not-39)
auxpass(believed-41, be-40)
ccomp(know-26, believed-41)

