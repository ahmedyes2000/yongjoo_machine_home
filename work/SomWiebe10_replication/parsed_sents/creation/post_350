(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (NP (EX there))
      (VP (VBN left)
        (S
          (VP (TO to)
            (VP (VB do))))))
    (. .)))

dep(left-4, What-1)
auxpass(left-4, 's-2)
expl(left-4, there-3)
xsubj(do-6, there-3)
root(ROOT-0, left-4)
aux(do-6, to-5)
xcomp(left-4, do-6)

(ROOT
  (S
    (NP (NNP Island))
    (VP (VBZ complains) (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBD had)
            (VP (VBN expected) (, ,)
              (PP (IN of)
                (NP (NNS misrepresentations)))
              (, ,)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP I))
                  (VP (VBD showed)
                    (NP (PRP him))
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (CD three))
                          (PP (RB out) (IN of)
                            (NP (PRP$ his) (CD three) (NNS statements\/claims))))
                        (VP (VBD were)
                          (PRN (, ,)
                            (S
                              (VP (VB let)
                                (SBAR
                                  (S
                                    (NP (PRP 's))
                                    (VP (VBP say))))))
                            (, ,))
                          (VP
                            (ADVP (RB poorly))
                            (VBN informed)))))))))))))
    (. .)))

nsubj(complains-2, Island-1)
root(ROOT-0, complains-2)
mark(expected-7, as-4)
nsubj(expected-7, I-5)
aux(expected-7, had-6)
advcl(complains-2, expected-7)
prep_of(expected-7, misrepresentations-10)
advmod(showed-14, when-12)
nsubj(showed-14, I-13)
advcl(expected-7, showed-14)
dobj(showed-14, him-15)
complm(informed-30, that-16)
nsubjpass(informed-30, three-17)
poss(statements\/claims-22, his-20)
num(statements\/claims-22, three-21)
prep_out_of(three-17, statements\/claims-22)
auxpass(informed-30, were-23)
parataxis(informed-30, let-25)
nsubj(say-27, 's-26)
ccomp(let-25, say-27)
advmod(informed-30, poorly-29)
ccomp(showed-14, informed-30)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (ADVP (RB indeed))
      (PP (TO to)
        (NP
          (NP (DT the) (JJ tragic) (NN detriment))
          (PP (IN of)
            (NP (NN science))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
advmod(is-2, indeed-3)
det(detriment-7, the-5)
amod(detriment-7, tragic-6)
prep_to(is-2, detriment-7)
prep_of(detriment-7, science-9)

(ROOT
  (S
    (NP (NNP No))
    (VP (VBP wonder)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT all))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (VP (VBN left))))))
          (VP (VBZ is)
            (NP
              (NP (DT a) (JJ tragic) (NN ad) (NN hominem) (NN argument))
              (CC and)
              (NP (NN name) (NN calling)))))))
    (. .)))

nsubj(wonder-2, No-1)
root(ROOT-0, wonder-2)
complm(argument-13, that-3)
nsubjpass(left-7, all-4)
nsubj(argument-13, all-4)
auxpass(left-7, is-6)
rcmod(all-4, left-7)
cop(argument-13, is-8)
det(argument-13, a-9)
amod(argument-13, tragic-10)
nn(argument-13, ad-11)
nn(argument-13, hominem-12)
ccomp(wonder-2, argument-13)
nn(calling-16, name-15)
ccomp(wonder-2, calling-16)
conj_and(argument-13, calling-16)

(ROOT
  (S
    (NP (NNP Nuff))
    (VP (VBD said))
    (. .)))

nsubj(said-2, Nuff-1)
root(ROOT-0, said-2)

(ROOT
  (S
    (NP
      (NP (NNS Thanks))
      (PP (IN for)
        (NP (DT the) (NN fun))))
    (VP (VBP ride)
      (NP (NNP Island)))
    (. .)))

nsubj(ride-5, Thanks-1)
det(fun-4, the-3)
prep_for(Thanks-1, fun-4)
root(ROOT-0, ride-5)
dobj(ride-5, Island-6)

