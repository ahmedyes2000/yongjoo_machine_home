(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do)
        (VP (VB agree)
          (SBAR (IN that)
            (S
              (SBAR
                (ADVP (RB simply))
                (IN because)
                (S
                  (NP (DT the) (NN theory))
                  (VP (VBZ has)
                    (NP
                      (NP (NNS holes))
                      (PP (IN in)
                        (NP (PRP it)))))))
              (, ,)
              (NP (PRP it))
              (VP (MD may)
                (ADVP (RB still))
                (VP (VB be)
                  (ADJP
                    (ADVP (RB logically))
                    (JJ valid)))))))))
    (: ;)
    (CC but)
    (S
      (PP (IN as)
        (NP (DT a) (JJ whole) (NN concept)))
      (, ,)
      (S
        (SBAR (IN if)
          (S
            (S
              (NP (PRP it))
              (VP (VBZ has)
                (NP
                  (NP (NNS holes))
                  (PP (IN in)
                    (NP (PRP it))))))
            (, ,)
            (CC and)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADVP (RB also))
                (ADJP
                  (ADVP (RB logically))
                  (JJ valid)
                  (PP (IN in)
                    (NP (NN terminology))))))))
        (, ,)
        (ADVP (RB then))
        (NP (EX there))
        (VP (MD must)
          (VP (VB be)
            (NP
              (QP (CD one)
                (CC or)
                (JJR more))
              (JJ false) (NNS premises)))))
      (IN so)
      (S
        (NP (PRP it))
        (VP (MD can) (RB not)
          (VP (VB be)
            (ADJP (RB quite) (JJ right)
              (CC and)
              (JJ logical))))))
    (. .)))

nsubj(agree-3, I-1)
aux(agree-3, do-2)
root(ROOT-0, agree-3)
complm(valid-19, that-4)
advmod(has-9, simply-5)
dep(has-9, because-6)
det(theory-8, the-7)
nsubj(has-9, theory-8)
advcl(valid-19, has-9)
dobj(has-9, holes-10)
prep_in(holes-10, it-12)
nsubj(valid-19, it-14)
aux(valid-19, may-15)
advmod(valid-19, still-16)
cop(valid-19, be-17)
advmod(valid-19, logically-18)
ccomp(agree-3, valid-19)
det(concept-25, a-23)
amod(concept-25, whole-24)
prep_as(premises-51, concept-25)
mark(has-29, if-27)
nsubj(has-29, it-28)
advcl(premises-51, has-29)
dobj(has-29, holes-30)
prep_in(holes-30, it-32)
nsubj(valid-39, it-35)
cop(valid-39, is-36)
advmod(valid-39, also-37)
advmod(valid-39, logically-38)
conj_and(has-29, valid-39)
advcl(premises-51, valid-39)
prep_in(valid-39, terminology-41)
advmod(premises-51, then-43)
expl(premises-51, there-44)
aux(premises-51, must-45)
cop(premises-51, be-46)
num(premises-51, one-47)
conj_or(one-47, more-49)
quantmod(one-47, more-49)
num(premises-51, more-49)
amod(premises-51, false-50)
conj_but(agree-3, premises-51)
dep(premises-51, so-52)
nsubj(right-58, it-53)
nsubj(logical-60, it-53)
aux(right-58, can-54)
neg(right-58, not-55)
cop(right-58, be-56)
advmod(right-58, quite-57)
dep(premises-51, right-58)
dep(premises-51, logical-60)
conj_and(right-58, logical-60)

