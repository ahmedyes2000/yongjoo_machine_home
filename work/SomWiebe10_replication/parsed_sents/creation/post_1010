(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (S
      (S
        (NP (PRP we))
        (VP (VBD hit)
          (NP
            (NP (NNS walls))
            (PP (IN of)
              (NP (NN diction))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP (DT a) (JJ great) (NN debate)))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (PP (IN on)
          (NP
            (NP (PRP$ your) (NN side))
            (PRN (-LRB- -LRB-)
              (NP (NNS evolutionists))
              (-RRB- -RRB-))))))
    (. .)))

advmod(hit-4, Again-1)
nsubj(hit-4, we-3)
root(ROOT-0, hit-4)
dobj(hit-4, walls-5)
prep_of(walls-5, diction-7)
nsubj(debate-14, it-10)
cop(debate-14, 's-11)
det(debate-14, a-12)
amod(debate-14, great-13)
conj_but(hit-4, debate-14)
nsubj('m-17, I-16)
conj_and(hit-4, 'm-17)
poss(side-20, your-19)
prep_on('m-17, side-20)
appos(side-20, evolutionists-22)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP
                (NP (DT the) (NN blood)
                  (CC and)
                  (NNS guts))
                (PP (IN of)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ constitutes)
                        (NP (`` ``) (NN proof) ('' ''))
                        (, ,)
                        (ADVP (RB however))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP find)
        (SBAR (IN that)
          (S
            (NP (JJ blind) (NN faith))
            (VP (VBZ goes)
              (PP (IN in)
                (NP (JJ multiple) (NNS directions))))))))
    (. .)))

nsubj(want-2, I-1)
xsubj(see-4, I-1)
root(ROOT-0, want-2)
aux(see-4, to-3)
xcomp(want-2, see-4)
det(blood-6, the-5)
dobj(see-4, blood-6)
dobj(see-4, guts-8)
conj_and(blood-6, guts-8)
nsubj(constitutes-11, what-10)
prepc_of(blood-6, constitutes-11)
dobj(constitutes-11, proof-13)
advmod(constitutes-11, however-16)
nsubj(find-20, I-19)
conj_and(want-2, find-20)
complm(goes-24, that-21)
amod(faith-23, blind-22)
nsubj(goes-24, faith-23)
ccomp(find-20, goes-24)
amod(directions-27, multiple-26)
prep_in(goes-24, directions-27)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (: :)
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN seen)
        (NP
          (NP (NNS evangelists))
          (PP (IN of)
            (NP (NN science))))
        (PP (IN as)
          (NP (NN blinded)))
        (PP (IN as)
          (NP (PRP$ their) (NN christian) (NNS counterparts)))))
    (. .)))

amod(words-3, other-2)
prep_in(seen-7, words-3)
nsubj(seen-7, I-5)
aux(seen-7, 've-6)
root(ROOT-0, seen-7)
dobj(seen-7, evangelists-8)
prep_of(evangelists-8, science-10)
prep_as(seen-7, blinded-12)
poss(counterparts-16, their-14)
nn(counterparts-16, christian-15)
prep_as(seen-7, counterparts-16)

(ROOT
  (S
    (NP
      (NP (NNS Loops\/fractals))
      (PP (IN in)
        (NP
          (NP (NN math))
          (, ,)
          (NP (NN nature))
          (, ,)
          (NP (NN logic))
          (, ,)
          (CC and)
          (NP (JJ many) (JJ other) (JJ scientific) (NNS methods)))))
    (VP (VBP give)
      (NP (PRP me))
      (NP (DT the) (NN idea))
      (SBAR (IN that)
        (S
          (NP (CD 2) (JJ opposing) (NNS viewpoints))
          (VP (MD can)
            (VP (VB be)
              (ADJP (RB equally) (JJ true))
              (, ,)
              (SBAR (RB just) (IN as)
                (S
                  (NP
                    (NP (DT a) (NN segment))
                    (PP (IN of)
                      (NP (NN light))))
                  (VP (MD can)
                    (VP (VB be)
                      (VP (VBN seen)
                        (PP (IN as)
                          (NP
                            (NP (DT a) (NN particle))
                            (CC or)
                            (NP (DT a) (NN wave))))
                        (, ,)
                        (PP (VBG depending)
                          (PP (IN on)
                            (NP (DT the) (NN method))))))))))))))
    (. .)))

nsubj(give-14, Loops\/fractals-1)
prep_in(Loops\/fractals-1, math-3)
prep_in(Loops\/fractals-1, nature-5)
conj_and(math-3, nature-5)
prep_in(Loops\/fractals-1, logic-7)
conj_and(math-3, logic-7)
amod(methods-13, many-10)
amod(methods-13, other-11)
amod(methods-13, scientific-12)
prep_in(Loops\/fractals-1, methods-13)
conj_and(math-3, methods-13)
root(ROOT-0, give-14)
iobj(give-14, me-15)
det(idea-17, the-16)
dobj(give-14, idea-17)
complm(true-25, that-18)
num(viewpoints-21, 2-19)
amod(viewpoints-21, opposing-20)
nsubj(true-25, viewpoints-21)
aux(true-25, can-22)
cop(true-25, be-23)
advmod(true-25, equally-24)
ccomp(give-14, true-25)
advmod(seen-35, just-27)
dep(seen-35, as-28)
det(segment-30, a-29)
nsubjpass(seen-35, segment-30)
prep_of(segment-30, light-32)
aux(seen-35, can-33)
auxpass(seen-35, be-34)
ccomp(true-25, seen-35)
det(particle-38, a-37)
prep_as(seen-35, particle-38)
det(wave-41, a-40)
prep_as(seen-35, wave-41)
conj_or(particle-38, wave-41)
prepc_depending_on(seen-35, on-44)
det(method-46, the-45)
pobj(seen-35, method-46)

(ROOT
  (FRAG
    (ADVP (RB Quirky))
    (. ?)))

root(ROOT-0, Quirky-1)

(ROOT
  (INTJ (UH yes) (. .)))

root(ROOT-0, yes-1)

(ROOT
  (FRAG
    (ADVP (RB Contradictory))
    (. ?)))

root(ROOT-0, Contradictory-1)

(ROOT
  (INTJ (UH yes) (. .)))

root(ROOT-0, yes-1)

(ROOT
  (S
    (VP (VB Tell)
      (NP
        (NP (PRP me))
        (SBAR
          (WHNP (WP what))
          (S
            (S
              (NP (NNS 0\/infinity))
              (VP (MD could)
                (VP (VB mean))))
            (, ,)
            (CC and)
            (S
              (NP (PRP$ my) (NN answer))
              (VP (VBZ is)))))
        (: :)
        (NP (DT Both))))
    (. .)))

root(ROOT-0, Tell-1)
dobj(Tell-1, me-2)
dep(mean-6, me-2)
nsubj(mean-6, 0\/infinity-4)
aux(mean-6, could-5)
rcmod(me-2, mean-6)
poss(answer-10, my-9)
nsubj(is-11, answer-10)
rcmod(me-2, is-11)
conj_and(mean-6, is-11)
dep(me-2, Both-13)

(ROOT
  (S
    (VP (VB Thinkaboutit))
    (. .)))

root(ROOT-0, Thinkaboutit-1)

