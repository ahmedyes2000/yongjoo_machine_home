(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB care)
        (SBAR
          (WHNP
            (WHADJP (WRB how) (JJ many))
            (NNS times))
          (S
            (NP (PRP you))
            (VP (VBP say)
              (NP (PRP it)))))))
    (. .)))

nsubj(care-4, I-1)
aux(care-4, do-2)
neg(care-4, n't-3)
root(ROOT-0, care-4)
advmod(many-6, how-5)
amod(times-7, many-6)
dobj(say-9, times-7)
nsubj(say-9, you-8)
ccomp(care-4, say-9)
dobj(say-9, it-10)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD ca) (RB n't)
        (VP (VB prove)
          (NP (NN anything))
          (S
            (VP (VBG using)
              (NP (DT that) (JJ same) (NN thing)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB use)
            (NP
              (NP (NNS evidences))
              (ADVP (IN outside))
              (PP (IN of)
                (NP (DT that))))))))
    (. .)))

nsubj(prove-4, You-1)
aux(prove-4, ca-2)
neg(prove-4, n't-3)
ccomp(have-12, prove-4)
dobj(prove-4, anything-5)
xcomp(prove-4, using-6)
det(thing-9, that-7)
amod(thing-9, same-8)
dobj(using-6, thing-9)
nsubj(have-12, you-11)
xsubj(use-14, you-11)
root(ROOT-0, have-12)
aux(use-14, to-13)
xcomp(have-12, use-14)
dobj(use-14, evidences-15)
prep_outside_of(evidences-15, that-18)

(ROOT
  (S
    (PP (RB Just)
      (PP (IN like)
        (PP (IN in)
          (NP (PRP$ my) (NN field)))))
    (: ...)
    (NP (PRP you))
    (VP (MD ca) (RB n't)
      (VP (VB prove)
        (NP (DT a) (JJ mathematical) (NN theorem))
        (PP (IN by)
          (S
            (VP (VBG saying)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADJP (JJ self-authenticating))))))))))
    (. .)))

advmod(like-2, Just-1)
advcl(prove-10, like-2)
prep(prove-10, like-2)
pcomp(like-2, in-3)
poss(field-5, my-4)
prep_in(like-2, field-5)
nsubj(prove-10, you-7)
aux(prove-10, ca-8)
neg(prove-10, n't-9)
root(ROOT-0, prove-10)
det(theorem-13, a-11)
amod(theorem-13, mathematical-12)
dobj(prove-10, theorem-13)
prepc_by(prove-10, saying-15)
nsubj(self-authenticating-18, it-16)
cop(self-authenticating-18, 's-17)
ccomp(saying-15, self-authenticating-18)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB use)
            (NP
              (NP (JJ other) (VBN known) (NNS facts))
              (CC and)
              (NP (VBN proven) (NNS theorems))))))
      (S
        (VP (TO to)
          (VP (VB prove)
            (NP (PRP it))))))
    (. .)))

nsubj(have-2, You-1)
xsubj(use-4, You-1)
xsubj(prove-12, You-1)
root(ROOT-0, have-2)
aux(use-4, to-3)
xcomp(have-2, use-4)
amod(facts-7, other-5)
amod(facts-7, known-6)
dobj(use-4, facts-7)
amod(theorems-10, proven-9)
dobj(use-4, theorems-10)
conj_and(facts-7, theorems-10)
aux(prove-12, to-11)
xcomp(have-2, prove-12)
dobj(prove-12, it-13)

(ROOT
  (S
    (NP
      (NP (DT Any) (NN mathematician))
      (PRN (-LRB- -LRB-)
        (PP (JJ such) (IN as)
          (NP (PRP myself)))
        (-RRB- -RRB-)))
    (ADVP (RB just))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB laugh)
            (PP (IN at)
              (NP (PDT such) (DT an) (NN excuse)))))))
    (. .)))

det(mathematician-2, Any-1)
nsubj(has-9, mathematician-2)
xsubj(laugh-11, mathematician-2)
prep_such_as(mathematician-2, myself-6)
advmod(has-9, just-8)
root(ROOT-0, has-9)
aux(laugh-11, to-10)
xcomp(has-9, laugh-11)
predet(excuse-15, such-13)
det(excuse-15, an-14)
prep_at(laugh-11, excuse-15)

