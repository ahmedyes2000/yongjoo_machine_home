(ROOT
  (S
    (NP (PRP It))
    (VP (MD would) (RB n't)
      (VP (VB matter)
        (SBAR (IN if)
          (S
            (NP
              (NP (DT the) (NN force))
              (PP (IN behind)
                (NP (NN design))))
            (VP (VBZ is)
              (NP (DT a) (JJ supernatural) (NN entity))
              (SBAR (IN because)
                (S
                  (SBAR (IN if)
                    (S
                      (NP (PRP we))
                      (VP (VBP make)
                        (NP (DT those) (NNS conclusions))
                        (PP (VBN based)
                          (PP (IN on)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP we))
                                (VP (VBP OBSERVE)
                                  (PP (IN in)
                                    (NP
                                      (NP (NNS physics))
                                      (CC or)
                                      (NP (JJ biological) (NNS systems))))
                                  (ADVP (RB then))))))))))
                  (NP (PRP we))
                  (VP (MD can)
                    (ADVP (RB safely))
                    (VP (VB say)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (ADJP (JJ testable))))))))))))))
    (. .)))

nsubj(matter-4, It-1)
aux(matter-4, would-2)
neg(matter-4, n't-3)
root(ROOT-0, matter-4)
mark(entity-13, if-5)
det(force-7, the-6)
nsubj(entity-13, force-7)
prep_behind(force-7, design-9)
cop(entity-13, is-10)
det(entity-13, a-11)
amod(entity-13, supernatural-12)
advcl(matter-4, entity-13)
mark(say-34, because-14)
mark(make-17, if-15)
nsubj(make-17, we-16)
advcl(say-34, make-17)
det(conclusions-19, those-18)
dobj(make-17, conclusions-19)
prepc_based_on(make-17, on-21)
dobj(OBSERVE-24, what-22)
nsubj(OBSERVE-24, we-23)
pcomp(make-17, OBSERVE-24)
prep_in(OBSERVE-24, physics-26)
amod(systems-29, biological-28)
prep_in(OBSERVE-24, systems-29)
conj_or(physics-26, systems-29)
advmod(OBSERVE-24, then-30)
nsubj(say-34, we-31)
aux(say-34, can-32)
advmod(say-34, safely-33)
advcl(entity-13, say-34)
nsubj(testable-37, it-35)
cop(testable-37, 's-36)
ccomp(say-34, testable-37)

