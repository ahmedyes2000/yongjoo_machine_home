(ROOT
  (S
    (NP (NN Nobody))
    (ADVP (RB ever))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (NP (JJ natural) (NN selection))
          (VP (VBD was)
            (ADJP (JJ random))))))
    (. .)))

nsubj(said-3, Nobody-1)
advmod(said-3, ever-2)
root(ROOT-0, said-3)
complm(random-8, that-4)
amod(selection-6, natural-5)
nsubj(random-8, selection-6)
cop(random-8, was-7)
ccomp(said-3, random-8)

(ROOT
  (NP (JJ Straw) (NN man) (. .)))

amod(man-2, Straw-1)
root(ROOT-0, man-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP
            (NP (DT the) (NN study))
            (VP (VBN mentioned)
              (PP (IN above))))
          (VP (VBZ is)
            (VP
              (ADVP (RB already))
              (VBN included)
              (PP (IN in)
                (NP (DT the) (NNP Expert) (NN Debate) (NN section)))
              (, ,)
              (SBAR (IN as)
                (S
                  (NP (PRP I))
                  (VP (VBP seem)
                    (S
                      (VP (TO to)
                        (VP (VB recall)
                          (S
                            (VP (VBG reading)
                              (NP
                                (NP (DT that))
                                (PP (IN on)
                                  (NP (DT this) (JJ very) (NN site)))))))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
det(study-4, the-3)
nsubjpass(included-9, study-4)
partmod(study-4, mentioned-5)
prep(mentioned-5, above-6)
auxpass(included-9, is-7)
advmod(included-9, already-8)
ccomp(believe-2, included-9)
det(section-14, the-11)
nn(section-14, Expert-12)
nn(section-14, Debate-13)
prep_in(included-9, section-14)
mark(seem-18, as-16)
nsubj(seem-18, I-17)
xsubj(recall-20, I-17)
advcl(included-9, seem-18)
aux(recall-20, to-19)
xcomp(seem-18, recall-20)
xcomp(recall-20, reading-21)
dobj(reading-21, that-22)
det(site-26, this-24)
amod(site-26, very-25)
prep_on(that-22, site-26)

(ROOT
  (S
    (NP (NNP Violent) (NNP Atheists))
    (VP (VBP are)
      (ADJP (JJ easy)
        (S
          (VP (TO to)
            (VP (VB find))))))
    (. .)))

nn(Atheists-2, Violent-1)
nsubj(easy-4, Atheists-2)
cop(easy-4, are-3)
root(ROOT-0, easy-4)
aux(find-6, to-5)
xcomp(easy-4, find-6)

(ROOT
  (S (-LRB- -LRB-)
    (S
      (VP
        (VP (VB see))
        (, ,)
        (NP
          (NP (NNP Hitler))
          (, ,)
          (NP
            (NP (NNP Mussolini))
            (, ,)
            (NP (NNP Lenin) (, ,) (NNP Stalin))
            (, ,) (FW etc.))
          (-RRB- -RRB-))))
    (PRN
      (SBAR (IN Though)
        (S
          (NP (PRP I))
          (VP (VBD did) (RB n't)
            (VP (VB mean)
              (ADJP
                (ADJP (RB physically) (JJ violent))
                (, ,)
                (CC but)
                (ADJP (RB rather) (JJ verbally))
                (CC and)
                (ADJP (RB ideologically) (JJ hateful)
                  (CC and)
                  (JJ intolerant)))))))
      (, ,))
    (NP (DT the) (JJ above))
    (ADVP (RB still))
    (VP (VBZ holds)
      (ADJP (JJ true)))
    (. .)))

dep(holds-34, see-2)
dobj(see-2, Hitler-4)
appos(Hitler-4, Mussolini-6)
nn(Stalin-10, Lenin-8)
appos(Mussolini-6, Stalin-10)
dep(Mussolini-6, etc.-12)
mark(mean-18, Though-14)
nsubj(mean-18, I-15)
aux(mean-18, did-16)
neg(mean-18, n't-17)
parataxis(holds-34, mean-18)
advmod(violent-20, physically-19)
acomp(mean-18, violent-20)
advmod(verbally-24, rather-23)
acomp(mean-18, verbally-24)
conj_but(violent-20, verbally-24)
advmod(hateful-27, ideologically-26)
acomp(mean-18, hateful-27)
conj_and(violent-20, hateful-27)
conj_and(violent-20, intolerant-29)
conj_and(hateful-27, intolerant-29)
det(above-32, the-31)
nsubj(holds-34, above-32)
advmod(holds-34, still-33)
root(ROOT-0, holds-34)
acomp(holds-34, true-35)

(ROOT
  (S
    (NP (NNS Atheists))
    (VP (VBP are)
      (ADJP
        (ADJP (DT no) (RBR less) (JJ violent))
        (PP (IN than)
          (NP (DT the) (JJ religious)))))
    (. .)))

nsubj(violent-5, Atheists-1)
cop(violent-5, are-2)
dep(violent-5, no-3)
advmod(violent-5, less-4)
root(ROOT-0, violent-5)
det(religious-8, the-7)
prep_than(violent-5, religious-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN perception))
      (PP (IN of)
        (NP (NN knowledge))))
    (VP (VBZ is)
      (ADJP (JJ scary))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ rules)
            (PRT (RP out))
            (NP (JJ new) (NN information))))))
    (. .)))

det(perception-2, The-1)
nsubj(scary-6, perception-2)
prep_of(perception-2, knowledge-4)
cop(scary-6, is-5)
root(ROOT-0, scary-6)
mark(rules-9, because-7)
nsubj(rules-9, it-8)
advcl(scary-6, rules-9)
prt(rules-9, out-10)
amod(information-12, new-11)
dobj(rules-9, information-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP
          (VP (VBP think))
          (CC or)
          (VP (VBP believe)
            (SBAR (IN that)
              (S
                (NP (NN something))
                (VP (VBZ is)
                  (ADJP (JJ true)))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB be)
        (ADJP (JJ willing)
          (S
            (VP (TO to)
              (VP (VB change)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (VBP think\/believe)
                      (PP (IN in)
                        (NP
                          (NP (NN light))
                          (PP (IN of)
                            (NP (JJ new) (NN evidence))))))))))))))
    (. .)))

mark(think-3, If-1)
nsubj(think-3, you-2)
nsubj(believe-5, you-2)
advcl(willing-14, think-3)
conj_or(think-3, believe-5)
advcl(willing-14, believe-5)
complm(true-9, that-6)
nsubj(true-9, something-7)
cop(true-9, is-8)
ccomp(believe-5, true-9)
nsubj(willing-14, you-11)
aux(willing-14, will-12)
cop(willing-14, be-13)
root(ROOT-0, willing-14)
aux(change-16, to-15)
xcomp(willing-14, change-16)
dobj(think\/believe-19, what-17)
nsubj(think\/believe-19, you-18)
ccomp(change-16, think\/believe-19)
prep_in(think\/believe-19, light-21)
amod(evidence-24, new-23)
prep_of(light-21, evidence-24)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB change)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP know))))))
    (. ?)))

advmod(change-4, How-1)
aux(change-4, can-2)
nsubj(change-4, you-3)
root(ROOT-0, change-4)
dobj(know-7, what-5)
nsubj(know-7, you-6)
ccomp(change-4, know-7)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP know)
          (SBAR
            (S
              (NP (DT the) (NN Earth))
              (VP (VBZ is)
                (ADJP (JJ flat))))))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (PRP it))
      (VP (VB be)
        (NP (NN round))))
    (. ?)))

mark(know-3, If-1)
nsubj(know-3, we-2)
advcl(round-13, know-3)
det(Earth-5, the-4)
nsubj(flat-7, Earth-5)
cop(flat-7, is-6)
ccomp(know-3, flat-7)
advmod(round-13, how-9)
aux(round-13, can-10)
nsubj(round-13, it-11)
cop(round-13, be-12)
root(ROOT-0, round-13)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP know)
          (SBAR
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT no) (NN god))))))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (EX there))
      (VP (VB be)
        (NP (DT a) (NN designer))))
    (. ?)))

mark(know-3, If-1)
nsubj(know-3, we-2)
advcl(be-12, know-3)
expl(is-5, there-4)
ccomp(know-3, is-5)
det(god-7, no-6)
nsubj(is-5, god-7)
advmod(be-12, how-9)
aux(be-12, can-10)
expl(be-12, there-11)
root(ROOT-0, be-12)
det(designer-14, a-13)
dep(be-12, designer-14)

(ROOT
  (NP (-LRB- -LRB-)
    (NP (JJ Oh) (NN look))
    (, ,)
    (NP (JJR more) (NN misrepresentation))
    (. !) (-RRB- -RRB-)))

amod(look-3, Oh-2)
root(ROOT-0, look-3)
amod(misrepresentation-6, more-5)
appos(look-3, misrepresentation-6)

(ROOT
  (S
    (NP (DT The) (JJ random))
    (VP (VBZ comes)
      (PP (IN in)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP
              (NP (NNS particles))
              (PP (IN of)
                (NP
                  (NP (NNP RNA))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD came)
                        (PRT (RP out))
                        (PP (IN of)
                          (NP (DT the) (JJ primordial) (NN ooze)))))))))
            (VP (VBN aligned)
              (PP (IN by)
                (NP
                  (NP (NN chance))
                  (PP (IN in)
                    (NP (PDT such) (DT a) (NN way)))))
              (S
                (VP (TO to)
                  (VP (VB produce)
                    (NP (DT a) (JJ single-celled) (NN organism))))))))))
    (. .)))

det(random-2, The-1)
nsubj(comes-3, random-2)
root(ROOT-0, comes-3)
advmod(aligned-16, when-5)
nsubj(aligned-16, particles-6)
xsubj(produce-24, particles-6)
prep_of(particles-6, RNA-8)
nsubj(came-10, RNA-8)
rcmod(RNA-8, came-10)
det(ooze-15, the-13)
amod(ooze-15, primordial-14)
prep_out_of(came-10, ooze-15)
prepc_in(comes-3, aligned-16)
prep_by(aligned-16, chance-18)
predet(way-22, such-20)
det(way-22, a-21)
prep_in(chance-18, way-22)
aux(produce-24, to-23)
xcomp(aligned-16, produce-24)
det(organism-27, a-25)
amod(organism-27, single-celled-26)
dobj(produce-24, organism-27)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS chances))
      (PP (IN of)
        (NP (DT that) (NN occuring))))
    (ADVP (RB randomly))
    (VP (VBP are)
      (ADJP (RB absurdly) (JJ small)))
    (. .)))

det(chances-2, The-1)
nsubj(small-9, chances-2)
det(occuring-5, that-4)
prep_of(chances-2, occuring-5)
advmod(small-9, randomly-6)
cop(small-9, are-7)
advmod(small-9, absurdly-8)
root(ROOT-0, small-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD can)
          (VP (VB achieve)
            (NP
              (NP (DT that))
              (, ,)
              (NP
                (NP (NN life))
                (VP (VBG springing)
                  (ADVP (RB forth)
                    (PP (IN from)
                      (ADJP (JJ non-life)))))))))))
    (, ,)
    (NP
      (NP (NN evolution))
      (, ,)
      (RRC
        (ADVP (IN at) (JJS least))
        (PP (IN in)
          (NP (NN theory))))
      (, ,))
    (VP
      (ADVP (RB actually))
      (VBZ holds)
      (NP (NN water))
      (, ,)
      (SBAR (IN though)
        (S
          (NP (EX there))
          (VP (VBP are)
            (NP (JJ other) (NNS problems))))))
    (. .)))

mark(achieve-4, If-1)
nsubj(achieve-4, you-2)
aux(achieve-4, can-3)
advcl(holds-21, achieve-4)
dobj(achieve-4, that-5)
appos(that-5, life-7)
partmod(life-7, springing-8)
advmod(springing-8, forth-9)
prep_from(forth-9, non-life-11)
nsubj(holds-21, evolution-13)
rcmod(evolution-13, at-15)
pobj(at-15, least-16)
dep(at-15, in-17)
pobj(in-17, theory-18)
advmod(holds-21, actually-20)
root(ROOT-0, holds-21)
dobj(holds-21, water-22)
mark(are-26, though-24)
expl(are-26, there-25)
advcl(holds-21, are-26)
amod(problems-28, other-27)
nsubj(are-26, problems-28)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS rulings))
      (PP (IN of)
        (NP (DT a) (JJ few) (JJ partisan) (NNS judges))))
    (VP (VBP do) (RB not)
      (VP (VB invalidate)
        (NP (DT a) (JJ scientific) (NN theory))
        (ADVP (DT any) (RBR more))
        (PP (IN than)
          (NP
            (NP (NNP O.J.))
            (VP (VBG being)
              (VP (VBN set)
                (NP (JJ free) (NN invalidates) (NNS forensics))))))))
    (. .)))

det(rulings-2, The-1)
nsubj(invalidate-10, rulings-2)
det(judges-7, a-4)
amod(judges-7, few-5)
amod(judges-7, partisan-6)
prep_of(rulings-2, judges-7)
aux(invalidate-10, do-8)
neg(invalidate-10, not-9)
root(ROOT-0, invalidate-10)
det(theory-13, a-11)
amod(theory-13, scientific-12)
dobj(invalidate-10, theory-13)
dep(more-15, any-14)
advmod(invalidate-10, more-15)
prep_than(invalidate-10, O.J.-17)
auxpass(set-19, being-18)
partmod(O.J.-17, set-19)
amod(forensics-22, free-20)
nn(forensics-22, invalidates-21)
dobj(set-19, forensics-22)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP
          (NP (PRP$ your)
            (ADJP (JJ arbitrary))
            (NN definition))
          (PP (IN of)
            (NP (DT a) (JJ valid) (NN definition))))
        (VP (MD will)
          (ADVP (RB surely))
          (RB not)
          (VP (VB include)
            (NP (NN mine))))))
    (, ,)
    (ADVP (DT no) (NN matter)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP mine))
          (VP (MD may)
            (VP (VB be))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB bother)
              (S
                (VP (VBG offering)
                  (PRT (RP up))
                  (NP
                    (NP (DT a) (NN definition))
                    (PP (IN for)
                      (NP (PRP you))))
                  (S
                    (VP (TO to)
                      (VP (VB reject)
                        (PRT (RP out))
                        (PP (IN of)
                          (NP (NN hand))))))))
              (, ,)
              (SBAR
                (ADVP (RB simply))
                (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBD came)
                    (PP (IN from)
                      (NP (PRP me)))))))))))
    (. .)))

mark(include-12, Since-1)
poss(definition-4, your-2)
amod(definition-4, arbitrary-3)
nsubj(include-12, definition-4)
det(definition-8, a-6)
amod(definition-8, valid-7)
prep_of(definition-4, definition-8)
aux(include-12, will-9)
advmod(include-12, surely-10)
neg(include-12, not-11)
advcl(going-25, include-12)
dobj(include-12, mine-13)
dep(matter-16, no-15)
advmod(going-25, matter-16)
dobj(be-20, what-17)
nsubj(be-20, mine-18)
aux(be-20, may-19)
dep(matter-16, be-20)
nsubj(going-25, I-22)
xsubj(bother-27, I-22)
aux(going-25, 'm-23)
neg(going-25, not-24)
root(ROOT-0, going-25)
aux(bother-27, to-26)
xcomp(going-25, bother-27)
xcomp(bother-27, offering-28)
prt(offering-28, up-29)
det(definition-31, a-30)
dobj(offering-28, definition-31)
prep_for(definition-31, you-33)
aux(reject-35, to-34)
xcomp(offering-28, reject-35)
prep_out_of(reject-35, hand-38)
advmod(came-43, simply-40)
dep(came-43, because-41)
nsubj(came-43, it-42)
ccomp(bother-27, came-43)
prep_from(came-43, me-45)

(ROOT
  (PRN (-LRB- -LRB-)
    (FRAG
      (SBAR
        (WHNP (WP Who))
        (S
          (VP
            (VP (VBD died))
            (CC and)
            (VP (VBD made)
              (S
                (NP (PRP you))
                (NP (DT the) (NN definition) (NN master)))))))
      (, ,)
      (ADVP (RB anyway))
      (. ?))
    (-RRB- -RRB-)))

nsubj(died-3, Who-2)
nsubj(made-5, Who-2)
dep(anyway-11, died-3)
conj_and(died-3, made-5)
dep(anyway-11, made-5)
nsubj(master-9, you-6)
det(master-9, the-7)
nn(master-9, definition-8)
xcomp(made-5, master-9)
root(ROOT-0, anyway-11)

(ROOT
  (S
    (S
      (VP (VB Give)
        (NP (PRP me))
        (NP (PRP$ your) (NN definition))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB beat)
          (NP (PRP you))
          (PP (IN on)
            (NP (PRP$ your) (JJ own) (NNS terms))))))
    (. .)))

root(ROOT-0, Give-1)
iobj(Give-1, me-2)
poss(definition-4, your-3)
dobj(Give-1, definition-4)
nsubj(beat-9, I-7)
aux(beat-9, 'll-8)
conj_and(Give-1, beat-9)
dobj(beat-9, you-10)
poss(terms-14, your-12)
amod(terms-14, own-13)
prep_on(beat-9, terms-14)

