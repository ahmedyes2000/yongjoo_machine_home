(ROOT
  (S ('' '')
    (NP (WDT Which))
    (VP (VBZ sounds)
      (PP (IN like)
        (NP
          (NP (DT the) (JJ Abrahamic) (NN god))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ means)
                (SBAR
                  (S
                    (NP (PRP$ your) (`` ``) (NN designer) ('' '') (NN claim))
                    (VP (VBZ is) (, ,)
                      (PP (IN in)
                        (NP (NN fact)))
                      (, ,)
                      (NP (DT a) (NN way)
                        (S
                          (VP (TO to)
                            (VP (VB slide)
                              (NP (PRP$ your)
                                (ADJP (RB narrowly) (JJ defined))
                                (NN god))
                              (PP (IN into)
                                (NP (NN science)))
                              (PP (IN through)
                                (NP (DT the) (JJ back) (NN door))))))))))))))))
    (. .)))

nsubj(sounds-3, Which-2)
root(ROOT-0, sounds-3)
det(god-7, the-5)
amod(god-7, Abrahamic-6)
prep_like(sounds-3, god-7)
nsubj(means-10, god-7)
rcmod(god-7, means-10)
poss(claim-15, your-11)
nn(claim-15, designer-13)
nsubj(way-22, claim-15)
cop(way-22, is-16)
prep_in(way-22, fact-19)
det(way-22, a-21)
ccomp(means-10, way-22)
aux(slide-24, to-23)
infmod(way-22, slide-24)
poss(god-28, your-25)
advmod(defined-27, narrowly-26)
amod(god-28, defined-27)
dobj(slide-24, god-28)
prep_into(slide-24, science-30)
det(door-34, the-32)
amod(door-34, back-33)
prep_through(slide-24, door-34)

