(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT a) (NN fact))
      (SBAR (IN that)
        (S
          (NP (NN design))
          (VP (MD can)
            (VP (VB be)
              (VP (VBN determined)
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN absence))
                    (PP (IN of)
                      (NP (DT a) (NN designer)))))))))))
    (. .)))

nsubj(fact-4, It-1)
cop(fact-4, is-2)
det(fact-4, a-3)
root(ROOT-0, fact-4)
complm(determined-9, that-5)
nsubjpass(determined-9, design-6)
aux(determined-9, can-7)
auxpass(determined-9, be-8)
ccomp(fact-4, determined-9)
det(absence-12, the-11)
prep_in(determined-9, absence-12)
det(designer-15, a-14)
prep_of(absence-12, designer-15)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP
          (NP (DT a) (NN matter))
          (PP (IN of)
            (NP (NN fact) (NN reality))))
        (VP (VBZ dictates)
          (SBAR (IN that)
            (S
              (NP (DT the) (NNP ONLY) (NN way)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP
                        (NP (NNP ANY) (NNP deyermination))
                        (PP (IN about)
                          (NP
                            (NP (DT the) (NN designer))
                            (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-))
                            (CC or)
                            (NP (DT the) (JJ specific) (NN process))
                            (PRN (-LRB- -LRB-)
                              (NP (NN es))
                              (-RRB- -RRB-)))))))))
              (VP (VBD used)))))))
    (, ,)
    (PP (IN IN)
      (NP
        (NP (DT THE) (NN ABSENCE))
        (PP (IN OF)
          (NP (NNP DIRECT) (NNP OBSERVATION) (NNP OR) (NNP DESIGNER) (NNP INPUT)))))
    (, ,)
    (NP (NN isto))
    (VP (VBP study)
      (NP
        (NP (DT the) (NN design))
        (PP (IN in)
          (NP (NN question)))))
    (. .)))

mark(dictates-7, As-1)
det(matter-3, a-2)
nsubj(dictates-7, matter-3)
nn(reality-6, fact-5)
prep_of(matter-3, reality-6)
advcl(study-42, dictates-7)
complm(used-29, that-8)
det(way-11, the-9)
nn(way-11, ONLY-10)
nsubj(used-29, way-11)
aux(make-13, to-12)
infmod(way-11, make-13)
nn(deyermination-15, ANY-14)
dobj(make-13, deyermination-15)
det(designer-18, the-17)
prep_about(deyermination-15, designer-18)
dep(designer-18, s-20)
det(process-25, the-23)
amod(process-25, specific-24)
prep_about(deyermination-15, process-25)
conj_or(designer-18, process-25)
appos(designer-18, es-27)
ccomp(dictates-7, used-29)
det(ABSENCE-33, THE-32)
prep_in(study-42, ABSENCE-33)
nn(INPUT-39, DIRECT-35)
nn(INPUT-39, OBSERVATION-36)
nn(INPUT-39, OR-37)
nn(INPUT-39, DESIGNER-38)
prep_of(ABSENCE-33, INPUT-39)
nsubj(study-42, isto-41)
root(ROOT-0, study-42)
det(design-44, the-43)
dobj(study-42, design-44)
prep_in(design-44, question-46)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBD knew)
          (NP (DT the) (NN designer))
          (ADVP (RB then)))))
    (NP (PRP we))
    (VP (MD would) (RB n't)
      (VP (VB have)
        (NP (DT a) (NN design) (NN inference))
        (SBAR (IN as)
          (S
            (NP (NN design))
            (VP (MD would)
              (VP (VB be)
                (NP (DT a) (JJ given))))))))
    (. .)))

mark(knew-3, If-1)
nsubj(knew-3, we-2)
advcl(have-10, knew-3)
det(designer-5, the-4)
dobj(knew-3, designer-5)
advmod(knew-3, then-6)
nsubj(have-10, we-7)
aux(have-10, would-8)
neg(have-10, n't-9)
root(ROOT-0, have-10)
det(inference-13, a-11)
nn(inference-13, design-12)
dobj(have-10, inference-13)
mark(given-19, as-14)
nsubj(given-19, design-15)
aux(given-19, would-16)
cop(given-19, be-17)
det(given-19, a-18)
advcl(have-10, given-19)

(ROOT
  (FRAG (CC And)
    (ADVP (RB then))
    (NP
      (NP
        (NP (PRP we))
        (ADJP (JJ certain)))
      (: ;)
      (S
        (NP (NN y))
        (VP (MD would) (RB n't)
          (VP (VB need)
            (NP (NN science))
            (S
              (VP (TO to)
                (VP (VB aid)
                  (NP (PRP us))
                  (PP (IN in)
                    (NP (DT that) (NN design) (NN inference))))))))))
    (. .)))

dep(we-3, And-1)
dep(we-3, then-2)
root(ROOT-0, we-3)
amod(we-3, certain-4)
nsubj(need-9, y-6)
aux(need-9, would-7)
neg(need-9, n't-8)
dep(we-3, need-9)
dobj(need-9, science-10)
aux(aid-12, to-11)
xcomp(need-9, aid-12)
dobj(aid-12, us-13)
det(inference-17, that-15)
nn(inference-17, design-16)
prep_in(aid-12, inference-17)

(ROOT
  (S
    (NP (NNP BTW) (NN you) (NNS people))
    (VP (VBP continue)
      (S
        (VP (TO to)
          (VP (VB ignore)
            (NP (DT the) (NN fact))
            (SBAR (IN that)
              (S
                (NP (JJ natural) (NNS processes))
                (VP (MD can) (RB not)
                  (VP (VB account)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NNS origins))
                        (PP (IN of)
                          (NP (NN nature)))))
                    (SBAR (IN because)
                      (S
                        (NP (JJ natural) (NNS processes))
                        (ADVP (RB only))
                        (VP (VBP exist)
                          (PP (IN IN)
                            (NP (NN nature))))))))))))))
    (. .)))

nn(people-3, BTW-1)
nn(people-3, you-2)
nsubj(continue-4, people-3)
xsubj(ignore-6, people-3)
root(ROOT-0, continue-4)
aux(ignore-6, to-5)
xcomp(continue-4, ignore-6)
det(fact-8, the-7)
dobj(ignore-6, fact-8)
complm(account-14, that-9)
amod(processes-11, natural-10)
nsubj(account-14, processes-11)
aux(account-14, can-12)
neg(account-14, not-13)
ccomp(ignore-6, account-14)
det(origins-17, the-16)
prep_for(account-14, origins-17)
prep_of(origins-17, nature-19)
mark(exist-24, because-20)
amod(processes-22, natural-21)
nsubj(exist-24, processes-22)
advmod(exist-24, only-23)
advcl(account-14, exist-24)
prep_in(exist-24, nature-26)

