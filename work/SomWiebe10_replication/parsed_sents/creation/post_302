(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (VBZ decides)
        (SBAR (IN if)
          (S
            (NP
              (NP (DT an) (`` ``) (NN arrangement))
              (PP (IN of)
                (NP (NNS parts))))
            ('' '')
            (VP (VBZ is) (`` ``)
              (ADJP (JJ purposeful))
              ('' ''))))))
    (. ?)))

nsubj(decides-3, Who-2)
root(ROOT-0, decides-3)
mark(purposeful-13, if-4)
det(arrangement-7, an-5)
nsubj(purposeful-13, arrangement-7)
prep_of(arrangement-7, parts-9)
cop(purposeful-13, is-11)
advcl(decides-3, purposeful-13)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ does)
      (NP (`` ``) (NN purposeful) ('' ''))
      (ADVP (RB really))
      (VP (VB mean)
        (PP (IN in)
          (NP (DT that) (NN statement)))))
    (. ?)))

dobj(mean-7, What-1)
aux(mean-7, does-2)
nsubj(mean-7, purposeful-4)
advmod(mean-7, really-6)
root(ROOT-0, mean-7)
det(statement-10, that-9)
prep_in(mean-7, statement-10)

(ROOT
  (S ('' '')
    (NP (NN http:\/\/www.ideacenter.org\/contentmgr\/showdetails.php) (NNS \/))
    (VP (VBD id\/1203)
      (SBAR
        (S (`` ``)
          (S
            (VP
              (VP (VBG Waving)
                (NP (PRP$ your) (NNS hands)))
              (CC and)
              (VP (VBG saying))))
          ('' '')
          (NP (PRP I))
          (VP (VBP know)
            (NP (NN design))
            (SBAR
              (WHADVP (WRB when))
              (S
                (S
                  (NP (PRP I))
                  (VP (VBP see)
                    (NP (PRP it))))
                ('' '')
                (CC and)
                (`` ``)
                (S
                  (NP (DT all) (NN life))
                  (VP (VBD was)
                    (ADVP (RB obviously))
                    (VP (VBN designed) ('' '')
                      (SBAR (RB just)
                        (S
                          (VP (MD wo) (RB n't)
                            (VP (VB cut)
                              (NP (PRP it)))))))))))))))
    (. .)))

nn(\/-3, http:\/\/www.ideacenter.org\/contentmgr\/showdetails.php-2)
nsubj(id\/1203-4, \/-3)
root(ROOT-0, id\/1203-4)
ccomp(know-13, Waving-6)
poss(hands-8, your-7)
dobj(Waving-6, hands-8)
conj_and(Waving-6, saying-10)
ccomp(know-13, saying-10)
nsubj(know-13, I-12)
ccomp(id\/1203-4, know-13)
dobj(know-13, design-14)
advmod(see-17, when-15)
nsubj(see-17, I-16)
advcl(know-13, see-17)
dobj(see-17, it-18)
det(life-23, all-22)
nsubjpass(designed-26, life-23)
auxpass(designed-26, was-24)
advmod(designed-26, obviously-25)
advcl(know-13, designed-26)
conj_and(see-17, designed-26)
advmod(cut-31, just-28)
aux(cut-31, wo-29)
neg(cut-31, n't-30)
ccomp(designed-26, cut-31)
dobj(cut-31, it-32)

(ROOT
  (S ('' '')
    (ADVP (RB Agreed))
    (, ,)
    (SBAR (IN though)
      (S
        (NP (DT that))
        (VP (VBZ is)
          (NP
            (NP (RB nowhere))
            (PP (IN near)
              (NP (DT the) (NN approach)))))))
    (NP (NNP ID))
    (VP (VBZ takes)
      (PP (IN with)
        (NP (NNP Biology)))
      (PRN (-LRB- -LRB-)
        (CC or)
        (FRAG
          (ADJP (NN anything))
          (ADJP (RB else)))
        (-RRB- -RRB-)))
    (. .)))

advmod(takes-12, Agreed-2)
mark(nowhere-7, though-4)
nsubj(nowhere-7, that-5)
cop(nowhere-7, is-6)
dep(takes-12, nowhere-7)
det(approach-10, the-9)
prep_near(nowhere-7, approach-10)
nsubj(takes-12, ID-11)
root(ROOT-0, takes-12)
prep_with(takes-12, Biology-14)
dep(takes-12, or-16)
dep(or-16, anything-17)
dep(anything-17, else-18)

(ROOT
  (S ('' '')
    (PP
      (NP (PRP$ Your) (JJ religious) (NNS motives))
      (IN in)
      (S
        (VP (VBG assuming)
          (NP (PRP$ your) (JJ religious) (NN designer)))))
    (VP (VBP are)
      (ADJP (RB too) (JJ obvious)
        (S
          (VP (TO to)
            (VP (VB allow)
              (NP (PRP$ your) (NN judgment)
                (S
                  (VP (TO to)
                    (VP (VB go)
                      (ADJP (JJ unquestioned)))))))))))
    (. .)))

poss(motives-4, Your-2)
amod(motives-4, religious-3)
npadvmod(obvious-12, motives-4)
prepc_in(obvious-12, assuming-6)
poss(designer-9, your-7)
amod(designer-9, religious-8)
dobj(assuming-6, designer-9)
cop(obvious-12, are-10)
advmod(obvious-12, too-11)
root(ROOT-0, obvious-12)
aux(allow-14, to-13)
xcomp(obvious-12, allow-14)
poss(judgment-16, your-15)
dobj(allow-14, judgment-16)
aux(go-18, to-17)
infmod(judgment-16, go-18)
acomp(go-18, unquestioned-19)

(ROOT
  (S ('' '')
    (S
      (NP (NNP PvM))
      (VP (VBD tried)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (DT this) (JJ same) (NN claim)))))))
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ remains)
        (ADJP (JJ unfounded)
          (PP (TO to)
            (NP (DT this) (NN day))))))
    (. .)))

nsubj(tried-3, PvM-2)
xsubj(make-5, PvM-2)
root(ROOT-0, tried-3)
aux(make-5, to-4)
xcomp(tried-3, make-5)
det(claim-8, this-6)
amod(claim-8, same-7)
dobj(make-5, claim-8)
nsubj(unfounded-12, it-10)
cop(unfounded-12, remains-11)
conj_but(tried-3, unfounded-12)
det(day-15, this-14)
prep_to(unfounded-12, day-15)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP you))
    (VP (MD can)
      (VP (VB change)
        (NP (DT that))))
    (. ?)))

advmod(change-4, Maybe-1)
nsubj(change-4, you-2)
aux(change-4, can-3)
root(ROOT-0, change-4)
dobj(change-4, that-5)

(ROOT
  (S
    (VP
      (VP
        (VP (VB See)
          (NP (DT these) (NNS discussions)))
        (CC and)
        (VP (VB join)
          (PRT (RP in))))
      (: :)
      (NP
        (NP (NNS http:\/\/www.opposingviews.com\/comments\/sorry-about-my-prior-views))
        ('' '')
        (SBAR
          (S
            (ADVP (RB There))
            (NP (PRP you))
            (VP (VBP go)
              (ADVP (RB again)))))
        (, ,)
        (VP (VBG using)
          (S
            (NP (DT that) (NN word))
            (`` ``)
            (ADJP (JJ purposeful))
            ('' '')))))
    (. .)))

root(ROOT-0, See-1)
det(discussions-3, these-2)
dobj(See-1, discussions-3)
conj_and(See-1, join-5)
prt(join-5, in-6)
dobj(See-1, http:\/\/www.opposingviews.com\/comments\/sorry-about-my-prior-views-8)
dobj(go-12, http:\/\/www.opposingviews.com\/comments\/sorry-about-my-prior-views-8)
advmod(go-12, There-10)
nsubj(go-12, you-11)
rcmod(http:\/\/www.opposingviews.com\/comments\/sorry-about-my-prior-views-8, go-12)
advmod(go-12, again-13)
partmod(http:\/\/www.opposingviews.com\/comments\/sorry-about-my-prior-views-8, using-15)
det(word-17, that-16)
dep(purposeful-19, word-17)
dep(using-15, purposeful-19)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBD defined)
      (NP (JJ purposeful) (JJR earlier))
      (PP (IN in)
        (NP (DT this) (NN comment))))
    (. .)))

nsubj(defined-3, I-2)
root(ROOT-0, defined-3)
amod(earlier-5, purposeful-4)
dobj(defined-3, earlier-5)
det(comment-8, this-7)
prep_in(defined-3, comment-8)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NN detail))
        (PP (IN on)
          (NP (DT the) (NN cell)))))
    (, ,)
    (VP
      (VP (VB see)
        (NP
          (NP (DT the) (JJ following) (: :) (NNS http:\/\/www.studiodaily.com\/main\/technique\/tprojects\/6850.html) ('' ''))
          (ADVP (RB Maybe))
          (SBAR
            (S
              (NP
                (NP (NNS cells))
                (CC and)
                (NP (NNS prions)
                  (CC and)
                  (NNS lifeforms)))
              (VP (VBP have)
                (NP
                  (NP (DT a) (`` ``) (NN purpose) ('' ''))
                  (SBAR
                    (S
                      (VP (TO to)
                        (VP (VB grow)
                          (CC and)
                          (VB reproduce)))))))))))
      (CC and)
      (VP (VB evolve)
        (SBAR (CC but)
          (S
            (SBAR (IN unless)
              (S
                (NP (PRP you))
                (VP (MD can)
                  (VP (VB show)
                    (SBAR (IN that)
                      (S
                        (NP (EX there))
                        (VP (VBZ is)
                          (ADVP (RB really))
                          (NP
                            (NP (DT a) (`` ``) (NN need) ('' ''))
                            (PP (IN for)
                              (NP (DT a) (NN designer)))))))))))
            (, ,)
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT no) (NN reason)
                (S
                  (VP (TO to)
                    (VP (VB assume)
                      (SBAR (IN that)
                        (S
                          (NP (EX there))
                          (VP (VBD was)
                            (NP (CD one))))))))))))))
    (. .)))

prep_for(see-7, detail-2)
det(cell-5, the-4)
prep_on(detail-2, cell-5)
root(ROOT-0, see-7)
det(http:\/\/www.studiodaily.com\/main\/technique\/tprojects\/6850.html-11, the-8)
amod(http:\/\/www.studiodaily.com\/main\/technique\/tprojects\/6850.html-11, following-9)
dobj(see-7, http:\/\/www.studiodaily.com\/main\/technique\/tprojects\/6850.html-11)
advmod(http:\/\/www.studiodaily.com\/main\/technique\/tprojects\/6850.html-11, Maybe-13)
nsubj(have-19, cells-14)
conj_and(cells-14, prions-16)
nsubj(have-19, prions-16)
conj_and(cells-14, lifeforms-18)
conj_and(prions-16, lifeforms-18)
rcmod(http:\/\/www.studiodaily.com\/main\/technique\/tprojects\/6850.html-11, have-19)
det(purpose-22, a-20)
dobj(have-19, purpose-22)
aux(grow-25, to-24)
infmod(purpose-22, grow-25)
infmod(purpose-22, reproduce-27)
conj_and(grow-25, reproduce-27)
conj_and(see-7, evolve-29)
cc(is-48, but-30)
mark(show-34, unless-31)
nsubj(show-34, you-32)
aux(show-34, can-33)
advcl(is-48, show-34)
complm(is-37, that-35)
expl(is-37, there-36)
ccomp(show-34, is-37)
advmod(is-37, really-38)
det(need-41, a-39)
nsubj(is-37, need-41)
det(designer-45, a-44)
prep_for(need-41, designer-45)
expl(is-48, there-47)
ccomp(evolve-29, is-48)
det(reason-50, no-49)
nsubj(is-48, reason-50)
aux(assume-52, to-51)
infmod(reason-50, assume-52)
complm(was-55, that-53)
expl(was-55, there-54)
ccomp(assume-52, was-55)
nsubj(was-55, one-56)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP he))
          (ADVP (RB already))
          (VP (VBD took)
            (NP
              (NP (NN care))
              (PP (IN of)
                (NP (DT that) (NN one))))))))
    (. .)))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(took-6, he-4)
advmod(took-6, already-5)
ccomp(think-3, took-6)
dobj(took-6, care-7)
det(one-10, that-9)
prep_of(care-7, one-10)

(ROOT
  (S ('' '')
    (NP (RB So) (PRP$ your) (NNS task))
    (VP (VBZ remains)
      (ADJP (JJ impossible)
        (SBAR
          (S (`` ``)
            (S
              (VP (VB prove)))
            ('' '')
            (NP (DT that) (NN evolution))
            (VP (MD can) (RB not)
              (VP (VB have)
                (VP (VBN produced)
                  (NP (`` ``)
                    (NP (DT this))
                    ('' '')
                    (PP (IN over)
                      (NP (DT the) (JJ last)
                        (QP (CD 3) (CD billion))
                        (NNS years)))))))))))
    (. .)))

advmod(task-4, So-2)
poss(task-4, your-3)
nsubj(impossible-6, task-4)
cop(impossible-6, remains-5)
root(ROOT-0, impossible-6)
ccomp(produced-15, prove-8)
det(evolution-11, that-10)
nsubj(produced-15, evolution-11)
aux(produced-15, can-12)
neg(produced-15, not-13)
aux(produced-15, have-14)
dep(impossible-6, produced-15)
dobj(produced-15, this-17)
det(years-24, the-20)
amod(years-24, last-21)
number(billion-23, 3-22)
num(years-24, billion-23)
prep_over(this-17, years-24)

(ROOT
  (SQ (VBP Do)
    (NP (DT the) (NNS parts))
    (VP (VB have)
      (NP (`` ``) (NN purpose) ('' '')))
    (. ?)))

aux(have-4, Do-1)
det(parts-3, the-2)
nsubj(have-4, parts-3)
root(ROOT-0, have-4)
dobj(have-4, purpose-6)

(ROOT
  (SQ
    (VP
      (VP (VB Go)
        (PRT (RP back))
        (NP
          (QP (CD 3) (CD billion))
          (NNS years)))
      (CC and)
      (VP (VB prove)
        (SBAR (IN that)
          (S
            (NP (DT a) (`` ``) (NN cell) ('' ''))
            (VP (VBD did) (RB not)
              (VP (VB evolve)
                (PP (IN from)
                  (NP (NN something))))))))
      (NP (JJR simpler)))
    (. ?)))

root(ROOT-0, Go-1)
prt(Go-1, back-2)
number(billion-4, 3-3)
num(years-5, billion-4)
tmod(Go-1, years-5)
conj_and(Go-1, prove-7)
complm(evolve-15, that-8)
det(cell-11, a-9)
nsubj(evolve-15, cell-11)
aux(evolve-15, did-13)
neg(evolve-15, not-14)
ccomp(prove-7, evolve-15)
prep_from(evolve-15, something-17)
dobj(Go-1, simpler-18)

(ROOT
  (S (CC Or)
    (S
      (VP
        (VP (VB wave)
          (NP (PRP$ your) (NNS hands)))
        (CC and)
        (VP (VB say) ('' '')
          (NP (PRP I)))))
    (VP (VBP do) (RB n't)
      (VP (VB believe)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD could)
              (VP (VB have)
                (VP (VBN happened) ('' ''))))))))
    (. ?)))

cc(believe-11, Or-1)
csubj(believe-11, wave-2)
poss(hands-4, your-3)
dobj(wave-2, hands-4)
conj_and(wave-2, say-6)
csubj(believe-11, say-6)
dobj(say-6, I-8)
aux(believe-11, do-9)
neg(believe-11, n't-10)
root(ROOT-0, believe-11)
nsubj(happened-15, it-12)
aux(happened-15, could-13)
aux(happened-15, have-14)
ccomp(believe-11, happened-15)

(ROOT
  (S (`` ``)
    (NP
      (NP (NNP Seems))
      (PP (IN like)
        (NP
          (NP (DT the) (NN burden))
          (PP (IN of)
            (NP (NN proof))))))
    (VP (VBZ goes)
      (NP (DT both) (NNS ways)))
    (. .)))

nsubj(goes-8, Seems-2)
det(burden-5, the-4)
prep_like(Seems-2, burden-5)
prep_of(burden-5, proof-7)
root(ROOT-0, goes-8)
det(ways-10, both-9)
dobj(goes-8, ways-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNP Behe))
        (VP (MD can) (RB not)
          (VP (`` ``) (VB prove) ('' '')
            (S
              (NP (PRP it))
              (VP (VBD did) (RB n't)
                (VP (VB happen)
                  (ADVP (RB then)))))))))
    (NP (EX there))
    (VP (VBZ 's)
      (NP (DT no) (NN reason)
        (S
          (VP (TO to)
            (VP (VB believe)
              (SBAR
                (S
                  (NP (PRP one))
                  (VP (MD can)
                    (VP (VB prove)
                      (SBAR (IN that)
                        (S
                          (NP (PRP it))
                          (VP (VBD did)))))))))))))
    (. .)))

mark(prove-6, If-1)
nsubj(prove-6, Behe-2)
aux(prove-6, can-3)
neg(prove-6, not-4)
advcl('s-14, prove-6)
nsubj(happen-11, it-8)
aux(happen-11, did-9)
neg(happen-11, n't-10)
ccomp(prove-6, happen-11)
advmod(happen-11, then-12)
expl('s-14, there-13)
root(ROOT-0, 's-14)
det(reason-16, no-15)
nsubj('s-14, reason-16)
aux(believe-18, to-17)
infmod(reason-16, believe-18)
nsubj(prove-21, one-19)
aux(prove-21, can-20)
ccomp(believe-18, prove-21)
complm(did-24, that-22)
nsubj(did-24, it-23)
ccomp(prove-21, did-24)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT some) (NN form))
            (PP (IN of)
              (NP
                (NP (NN synergy))
                (PP (IN in)
                  (NP (DT the) (NN arrangement))))))
          (ADVP (RB then))
          (NP (RB yes)))))
    (, ,)
    (NP (DT that))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ purposeful))))
    (. .)))

mark(is-4, If-2)
expl(is-4, there-3)
advcl(purposeful-18, is-4)
det(form-6, some-5)
nsubj(is-4, form-6)
prep_of(form-6, synergy-8)
det(arrangement-11, the-10)
prep_in(synergy-8, arrangement-11)
advmod(is-4, then-12)
nsubj(is-4, yes-13)
nsubj(purposeful-18, that-15)
aux(purposeful-18, would-16)
cop(purposeful-18, be-17)
root(ROOT-0, purposeful-18)

(ROOT
  (NP ('' '')
    (CC Is)
    (NP
      (NP (DT a) (NN virus))
      (VP (VBN designed)))
    (. ?)))

cc(virus-4, Is-2)
det(virus-4, a-3)
root(ROOT-0, virus-4)
partmod(virus-4, designed-5)

(ROOT
  (NP (DT A) (NN prion) (. ?)))

det(prion-2, A-1)
root(ROOT-0, prion-2)

(ROOT
  (NP
    (NP (DT A) (NN fragment))
    (PP (IN of)
      (NP (NNP RNA)))
    (. ?)))

det(fragment-2, A-1)
root(ROOT-0, fragment-2)
prep_of(fragment-2, RNA-4)

(ROOT
  (NP (DT A) (JJ benzene) (NN molecule) (. ?)))

det(molecule-3, A-1)
amod(molecule-3, benzene-2)
root(ROOT-0, molecule-3)

(ROOT
  (S ('' '')
    (PP (VBG Any)
      (PP (IN of)
        (NP (PRP them))))
    (VP (MD can)
      (VP (VB be)
        (NP (DT a) (NN possibility))))
    (. .)))

prep(possibility-8, Any-2)
pcomp(Any-2, of-3)
prep_of(Any-2, them-4)
aux(possibility-8, can-5)
cop(possibility-8, be-6)
det(possibility-8, a-7)
root(ROOT-0, possibility-8)

(ROOT
  (SBARQ
    (WHADVP (RB '') (WRB How))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB tell)))
    (. ?)))

advmod(tell-5, How-2)
aux(tell-5, can-3)
nsubj(tell-5, you-4)
root(ROOT-0, tell-5)

