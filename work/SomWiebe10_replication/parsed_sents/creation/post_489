(ROOT
  (NP
    (NP (NNP First))
    (, ,)
    (NP
      (NP (NNS thanks))
      (PP (IN for)
        (NP (DT the) (NN reply))))
    (. .)))

root(ROOT-0, First-1)
appos(First-1, thanks-3)
det(reply-6, the-5)
prep_for(thanks-3, reply-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP appreciate)
      (NP (DT a) (JJ good) (NN discussion))
      (PP (IN like)
        (NP
          (NP (DT the) (NN one))
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP 're)
                (VP (VBG having)
                  (NP (RB thus) (RB far)))))))))
    (. .)))

nsubj(appreciate-2, I-1)
root(ROOT-0, appreciate-2)
det(discussion-5, a-3)
amod(discussion-5, good-4)
dobj(appreciate-2, discussion-5)
det(one-8, the-7)
prep_like(appreciate-2, one-8)
nsubj(having-11, we-9)
aux(having-11, 're-10)
rcmod(one-8, having-11)
advmod(far-13, thus-12)
dobj(having-11, far-13)

(ROOT
  (INTJ (JJ Good) (NN luck) (. .)))

root(ROOT-0, Good-1)
dep(Good-1, luck-2)

(ROOT
  (S
    (ADVP (LS Second))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP follow)
              (NP (PRP$ your) (NN argument)))))))
    (. .)))

advmod(sure-6, Second-1)
nsubj(sure-6, I-3)
cop(sure-6, 'm-4)
neg(sure-6, not-5)
root(ROOT-0, sure-6)
nsubj(follow-8, I-7)
dep(sure-6, follow-8)
poss(argument-10, your-9)
dobj(follow-8, argument-10)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (DT the) (NNP Discovery) (NNP Institute))
              (VP (VBZ argues)
                (NP (DT this))
                (ADVP (RB as) (RB well))))))))
    (VP (VBZ does) (RB n't)
      (VP (VB tell)
        (NP (PRP me))
        (NP
          (NP (NN anything))
          (PP (IN about)
            (SBAR (IN whether)
              (S
                (NP (DT the) (NN argument))
                (VP (VBZ is)
                  (ADJP
                    (ADJP (JJ right)
                      (CC or)
                      (JJ wrong))
                    (, ,)
                    (ADJP (JJ good))
                    (CC or)
                    (ADJP (JJ bad)))
                  (, ,)
                  (PP (VBN based)
                    (PP (IN upon)
                      (NP
                        (NP (PRP it) (POS 's))
                        (NNS merits)))))))))))
    (. .)))

aux(say-2, To-1)
csubj(tell-13, say-2)
complm(argues-7, that-3)
det(Institute-6, the-4)
nn(Institute-6, Discovery-5)
nsubj(argues-7, Institute-6)
ccomp(say-2, argues-7)
dobj(argues-7, this-8)
advmod(well-10, as-9)
mwe(well-10, as-9)
advmod(argues-7, well-10)
aux(tell-13, does-11)
neg(tell-13, n't-12)
root(ROOT-0, tell-13)
iobj(tell-13, me-14)
dobj(tell-13, anything-15)
complm(right-21, whether-17)
det(argument-19, the-18)
nsubj(right-21, argument-19)
nsubj(wrong-23, argument-19)
nsubj(good-25, argument-19)
nsubj(bad-27, argument-19)
cop(right-21, is-20)
prepc_about(anything-15, right-21)
prepc_about(anything-15, wrong-23)
conj_or(right-21, wrong-23)
prepc_about(anything-15, good-25)
conj_or(right-21, good-25)
prepc_about(anything-15, bad-27)
conj_or(right-21, bad-27)
prep(right-21, based-29)
pcomp(based-29, upon-30)
poss(merits-33, it-31)
prep_upon(based-29, merits-33)

(ROOT
  (S
    (PP (IN In)
      (NP (NN addition)))
    (, ,)
    (NP (PRP we))
    (VP (VBP 're) (RB not)
      (VP (VBG discussing)
        (SBAR (IN whether)
          (S
            (NP (NNP ID))
            (VP
              (VP (MD should))
              (CC or)
              (VP (MD ought))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN discussed)
                      (PP (IN in)
                        (NP (NN science) (NNS classes))))))))))))
    (. .)))

prep_in(discussing-7, addition-2)
nsubj(discussing-7, we-4)
aux(discussing-7, 're-5)
neg(discussing-7, not-6)
root(ROOT-0, discussing-7)
complm(should-10, whether-8)
nsubj(should-10, ID-9)
xsubj(discussed-15, ID-9)
ccomp(discussing-7, should-10)
ccomp(discussing-7, ought-12)
conj_or(should-10, ought-12)
aux(discussed-15, to-13)
auxpass(discussed-15, be-14)
xcomp(should-10, discussed-15)
nn(classes-18, science-17)
prep_in(discussed-15, classes-18)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (VP (VBG discussing)
        (SBAR (IN whether)
          (S
            (S
              (VP (VBG doing)
                (ADVP (RB so))))
            (VP (VBZ is)
              (ADJP (JJ constitional)))))))
    (. .)))

nsubj(discussing-3, We-1)
aux(discussing-3, 're-2)
root(ROOT-0, discussing-3)
complm(constitional-8, whether-4)
csubj(constitional-8, doing-5)
advmod(doing-5, so-6)
cop(constitional-8, is-7)
ccomp(discussing-3, constitional-8)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN world))
        (PP (IN of)
          (NP
            (NP (NN difference))
            (PP (IN between)
              (NP
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (MD should)
                      (VP (VB be)
                        (VP (VBN done\/is)
                          (NP (DT a) (JJ good) (NN idea)))))))
                (CC and)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ is)
                      (ADJP (RB constitionally) (JJ permissible)))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(world-4, a-3)
nsubj(is-2, world-4)
prep_of(world-4, difference-6)
nsubjpass(done\/is-11, what-8)
aux(done\/is-11, should-9)
auxpass(done\/is-11, be-10)
prep_between(difference-6, done\/is-11)
det(idea-14, a-12)
amod(idea-14, good-13)
dobj(done\/is-11, idea-14)
nsubj(permissible-19, what-16)
cop(permissible-19, is-17)
advmod(permissible-19, constitionally-18)
prep_between(difference-6, permissible-19)
conj_and(done\/is-11, permissible-19)

(ROOT
  (S
    (ADVP (RB Finally))
    (, ,)
    (S
      (VP (TO to)
        (VP (VB claim)
          (SBAR (IN that)
            (S
              (NP (NNP ID))
              (VP (VBZ has)
                (NP
                  (NP (DT no) (NN secular) (NNS purposes))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP are) (RB not)
                        (ADJP (JJ shams))))))))))))
    (VP (VBZ is)
      (NP (RB quite) (DT a) (NN claim)
        (S
          (VP (TO to)
            (VP (VB make))))))
    (. .)))

advmod(claim-18, Finally-1)
aux(claim-4, to-3)
csubj(claim-18, claim-4)
complm(has-7, that-5)
nsubj(has-7, ID-6)
ccomp(claim-4, has-7)
det(purposes-10, no-8)
nn(purposes-10, secular-9)
dobj(has-7, purposes-10)
nsubj(shams-14, purposes-10)
cop(shams-14, are-12)
neg(shams-14, not-13)
rcmod(purposes-10, shams-14)
cop(claim-18, is-15)
advmod(claim-18, quite-16)
det(claim-18, a-17)
root(ROOT-0, claim-18)
aux(make-20, to-19)
infmod(claim-18, make-20)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (PRN (, ,)
        (PP (IN by)
          (S
            (VP (VBG making)
              (NP (PRP$ his) (NN claim)))))
        (, ,))
      (VP (VBN accepted)
        (NP (DT the) (NN responsibility)
          (S
            (VP (TO to)
              (VP
                (VP (VB find)
                  (NP
                    (NP (DT every) (RB possibly) (JJ secular) (NN purpose))
                    (PP (IN of)
                      (NP (NNP ID)))))
                (CC and)
                (VP (VB demostrate)
                  (PP (IN with)
                    (NP (JJ little) (NN doubt)))
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (NP (DT a) (NN sham))))))))))))
    (. .)))

nsubj(accepted-9, You-1)
aux(accepted-9, have-2)
dep(accepted-9, by-4)
pcomp(by-4, making-5)
poss(claim-7, his-6)
dobj(making-5, claim-7)
root(ROOT-0, accepted-9)
det(responsibility-11, the-10)
dobj(accepted-9, responsibility-11)
aux(find-13, to-12)
infmod(responsibility-11, find-13)
det(purpose-17, every-14)
advmod(purpose-17, possibly-15)
amod(purpose-17, secular-16)
dobj(find-13, purpose-17)
prep_of(purpose-17, ID-19)
infmod(responsibility-11, demostrate-21)
conj_and(find-13, demostrate-21)
amod(doubt-24, little-23)
prep_with(demostrate-21, doubt-24)
advmod(sham-29, why-25)
nsubj(sham-29, it-26)
cop(sham-29, is-27)
det(sham-29, a-28)
advcl(demostrate-21, sham-29)

(ROOT
  (S
    (ADVP (RB Remember))
    (PRN (: --)
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBD claimed)
            (SBAR (IN that)
              (S
                (NP (DT no) (JJ such) (NN secular) (NNS purposes))
                (VP (VBP exist)
                  (ADVP (RB whatsoever))))))))
      (: --))
    (NP (PRP you))
    (VP (MD must)
      (VP (VB negate)
        (S
          (NP
            (NP (DT each))
            (CC and)
            (NP (DT every)
              (ADJP (JJ possible)
                (CC and)
                (JJ potential))
              (NN secular) (NN purpose)))
          (VP (TO to)
            (VP (VB prove)
              (NP (PRP$ your) (NN point)))))))
    (. .)))

advmod(negate-16, Remember-1)
mark(claimed-5, because-3)
nsubj(claimed-5, you-4)
parataxis(negate-16, claimed-5)
complm(exist-11, that-6)
det(purposes-10, no-7)
amod(purposes-10, such-8)
nn(purposes-10, secular-9)
nsubj(exist-11, purposes-10)
ccomp(claimed-5, exist-11)
advmod(exist-11, whatsoever-12)
nsubj(negate-16, you-14)
aux(negate-16, must-15)
root(ROOT-0, negate-16)
nsubj(prove-26, each-17)
det(purpose-24, every-19)
amod(purpose-24, possible-20)
conj_and(possible-20, potential-22)
amod(purpose-24, potential-22)
nn(purpose-24, secular-23)
conj_and(each-17, purpose-24)
nsubj(prove-26, purpose-24)
aux(prove-26, to-25)
xcomp(negate-16, prove-26)
poss(point-28, your-27)
dobj(prove-26, point-28)

