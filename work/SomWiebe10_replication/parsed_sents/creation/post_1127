(ROOT
  (S
    (NP (NNP HAHAHA))
    (ADVP (RB there))
    (VP (VBZ 's)
      (ADVP (RB always))
      (NP
        (NP (CD one))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ slips)
              (PP (IN through)
                (NP (DT the) (NN net))))))))
    (. .)))

nsubj(one-5, HAHAHA-1)
advmod(one-5, there-2)
cop(one-5, 's-3)
advmod(one-5, always-4)
root(ROOT-0, one-5)
nsubj(slips-7, one-5)
rcmod(one-5, slips-7)
det(net-10, the-9)
prep_through(slips-7, net-10)

(ROOT
  (S
    (ADVP (RB Firstly))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (NP (JJ concrete) (NN evidence))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP have)
            (VP (VBN evolved))))))
    (. .)))

advmod('s-4, Firstly-1)
expl('s-4, there-3)
root(ROOT-0, 's-4)
amod(evidence-6, concrete-5)
nsubj('s-4, evidence-6)
complm(evolved-10, that-7)
nsubj(evolved-10, we-8)
aux(evolved-10, have-9)
ccomp('s-4, evolved-10)

(ROOT
  (S
    (ADVP (RB Secondly))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (NNP God))
        (VP (VBD did)
          (VP (VB create)
            (NP (NN everything))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP we))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN EVOLVED)
          (PP (IN from)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP he))
                (VP (VBD made))))))))
    (. .)))

advmod(EVOLVED-13, Secondly-1)
mark(create-6, if-3)
nsubj(create-6, God-4)
aux(create-6, did-5)
advcl(EVOLVED-13, create-6)
dobj(create-6, everything-7)
advmod(EVOLVED-13, then-9)
nsubj(EVOLVED-13, we-10)
aux(EVOLVED-13, would-11)
aux(EVOLVED-13, have-12)
root(ROOT-0, EVOLVED-13)
dobj(made-17, what-15)
nsubj(made-17, he-16)
prepc_from(EVOLVED-13, made-17)

(ROOT
  (S
    (NP (NNP Darwin))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN genius))
        (CC and)
        (NP (DT a) (NN legend) (NN man))))
    (. !)))

nsubj(genius-4, Darwin-1)
cop(genius-4, was-2)
det(genius-4, a-3)
root(ROOT-0, genius-4)
det(man-8, a-6)
nn(man-8, legend-7)
conj_and(genius-4, man-8)

(ROOT
  (SQ
    (VP (VB \/) (-RRB- -RRB-)
      (NP (NNP Thirdly))
      (, ,)
      (S
        (VP (VB do) (RB n't)
          (VP (VB take)
            (NP (DT the) (NN bible))
            (ADVP (RB literally))))))
    (. .)))

root(ROOT-0, \/-1)
dobj(\/-1, Thirdly-3)
aux(take-7, do-5)
neg(take-7, n't-6)
dep(\/-1, take-7)
det(bible-9, the-8)
dobj(take-7, bible-9)
advmod(take-7, literally-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (PP (IN in)
            (NP (DT the) (NNP Adam)
              (CC and)
              (NNP Eve))))))
    (VP (VBP bullshit) (RB then)
      (ADVP (RBR more))
      (VP (VB fool)
        (NP (PRP you))))
    (. .)))

mark(believe-3, If-1)
nsubj(believe-3, you-2)
csubj(bullshit-9, believe-3)
det(Adam-6, the-5)
prep_in(believe-3, Adam-6)
prep_in(believe-3, Eve-8)
conj_and(Adam-6, Eve-8)
root(ROOT-0, bullshit-9)
advmod(bullshit-9, then-10)
advmod(bullshit-9, more-11)
dep(bullshit-9, fool-12)
dobj(fool-12, you-13)

(ROOT
  (S
    (NP (DT That) (NN book))
    (VP (VBZ contradicts)
      (S
        (NP (PRP itself))
        (NP (JJR more) (NNS times)))
      (SBAR (IN than)
        (S
          (NP (PRP I))
          (VP (VBP 've)
            (VP (VBN flicked)
              (NP (DT a) (JJ light) (NN switch)))))))
    (. .)))

det(book-2, That-1)
nsubj(contradicts-3, book-2)
root(ROOT-0, contradicts-3)
nsubj(times-6, itself-4)
amod(times-6, more-5)
xcomp(contradicts-3, times-6)
mark(flicked-10, than-7)
nsubj(flicked-10, I-8)
aux(flicked-10, 've-9)
advcl(contradicts-3, flicked-10)
det(switch-13, a-11)
amod(switch-13, light-12)
dobj(flicked-10, switch-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (NN something))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ 's)
              (VP (VBN supposed)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN taken)
                        (ADVP (RB literally))))))))))))
    (. .)))

nsubj(something-4, It-1)
cop(something-4, 's-2)
neg(something-4, not-3)
root(ROOT-0, something-4)
nsubjpass(supposed-7, something-4)
auxpass(supposed-7, 's-6)
rcmod(something-4, supposed-7)
aux(taken-10, to-8)
auxpass(taken-10, be-9)
xcomp(supposed-7, taken-10)
advmod(taken-10, literally-11)

(ROOT
  (SQ
    (VP (VB \/) (-RRB- -RRB-)
      (NP (NN Anyone) (CD hoppin) ('' ''))
      (PP (IN on)
        (FRAG
          (NP (NN ma))
          (NP (JJ ark) (NN tomorrow) (. .))
          (. .))))
    (. ?)))

root(ROOT-0, \/-1)
dobj(\/-1, Anyone-3)
num(Anyone-3, hoppin-4)
prep(\/-1, on-6)
dep(on-6, ma-7)
amod(tomorrow-9, ark-8)
dep(ma-7, tomorrow-9)

