(ROOT
  (S
    (PP
      (ADVP (RB Now))
      (IN for)
      (NP (PRP$ your) (NN claim)
        (S
          (VP (TO to)
            (ADVP (RB even))
            (VP (VB be)
              (ADJP (JJ relevant)
                (PP (TO to)
                  (NP (DT this) (NN question)))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP
        (VP (VB suggest)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP give)
                (NP (PRP us))
                (NP (DT the) (JJ full) (NN picture))))))
        (CC and)
        (VP (VB explain)
          (SBAR (IN whether)
            (CC or)
            (RB not)
            (S
              (NP (DT the) (JJ citrate) (VBG feeding) (NNS bacteria))
              (VP (VBD retained)
                (NP
                  (NP (DT the) (JJ same) (NN efficiency))
                  (, ,)
                  (NP (NN breeding) (NN rate))
                  (, ,)
                  (CC and)
                  (NP (NN functionality)))
                (PP (IN as)
                  (NP (PRP$ their) (JJR earlier) (NNS counter-parts)))))))))
    (. .)))

advmod(suggest-15, Now-1)
poss(claim-4, your-3)
prep_for(suggest-15, claim-4)
aux(relevant-8, to-5)
advmod(relevant-8, even-6)
cop(relevant-8, be-7)
infmod(claim-4, relevant-8)
det(question-11, this-10)
prep_to(relevant-8, question-11)
nsubj(suggest-15, I-13)
nsubj(explain-24, I-13)
aux(suggest-15, would-14)
root(ROOT-0, suggest-15)
complm(give-18, that-16)
nsubj(give-18, you-17)
ccomp(suggest-15, give-18)
iobj(give-18, us-19)
det(picture-22, the-20)
amod(picture-22, full-21)
dobj(give-18, picture-22)
conj_and(suggest-15, explain-24)
complm(retained-32, whether-25)
ccomp(explain-24, not-27)
conj_or(retained-32, not-27)
det(bacteria-31, the-28)
amod(bacteria-31, citrate-29)
amod(bacteria-31, feeding-30)
nsubj(retained-32, bacteria-31)
ccomp(explain-24, retained-32)
det(efficiency-35, the-33)
amod(efficiency-35, same-34)
dobj(retained-32, efficiency-35)
nn(rate-38, breeding-37)
dobj(retained-32, rate-38)
conj_and(efficiency-35, rate-38)
dobj(retained-32, functionality-41)
conj_and(efficiency-35, functionality-41)
poss(counter-parts-45, their-43)
amod(counter-parts-45, earlier-44)
prep_as(retained-32, counter-parts-45)

