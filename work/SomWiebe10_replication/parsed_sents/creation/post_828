(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP
        (ADVP
          (ADVP (RB indeed))
          (RB spiritually))
        (JJ immature)
        (S
          (VP (TO to)
            (VP (VB equate)
              (NP (NN death)
                (CC and)
                (NN decay))
              (PP (IN with)
                (NP (NN evil))))))))
    (. .)))

nsubj(immature-5, It-1)
cop(immature-5, is-2)
advmod(immature-5, indeed-3)
advmod(indeed-3, spiritually-4)
root(ROOT-0, immature-5)
aux(equate-7, to-6)
xcomp(immature-5, equate-7)
dobj(equate-7, death-8)
dobj(equate-7, decay-10)
conj_and(death-8, decay-10)
prep_with(equate-7, evil-12)

(ROOT
  (S
    (PP (IN Without)
      (NP (NN death)))
    (, ,)
    (S
      (NP (NN reproduction))
      (VP (MD would) (RB not)
        (VP (VB be)
          (ADJP (JJ necessary)))))
    (, ,)
    (CC and)
    (S
      (PP (IN without)
        (NP (NN reproduction)))
      (, ,)
      (NP (JJ natural) (NN selection))
      (VP (MD could) (RB not)
        (VP (VB improve)
          (NP
            (NP (DT a) (NN species))
            (PP (IN over)
              (NP (NN time)))))))
    (. .)))

prep_without(necessary-8, death-2)
nsubj(necessary-8, reproduction-4)
aux(necessary-8, would-5)
neg(necessary-8, not-6)
cop(necessary-8, be-7)
root(ROOT-0, necessary-8)
prep_without(improve-18, reproduction-12)
amod(selection-15, natural-14)
nsubj(improve-18, selection-15)
aux(improve-18, could-16)
neg(improve-18, not-17)
conj_and(necessary-8, improve-18)
det(species-20, a-19)
dobj(improve-18, species-20)
prep_over(species-20, time-22)

(ROOT
  (S
    (ADVP (RB BTW))
    (, ,)
    (NP
      (NP (DT the) (NNPS Jews))
      (, ,)
      (SBAR (WP$ whose)
        (S
          (NP (NNS ancestors))
          (VP (VBD wrote)
            (NP (DT the) (NNP Bible)))))
      (, ,))
    (VP (VBP do) (RB not)
      (VP (VB beleive)
        (PP (IN in)
          (NP (NNP Original) (NNP Sin)))))
    (. .)))

advmod(beleive-14, BTW-1)
det(Jews-4, the-3)
nsubj(beleive-14, Jews-4)
dep(wrote-8, whose-6)
nsubj(wrote-8, ancestors-7)
dep(Jews-4, wrote-8)
det(Bible-10, the-9)
dobj(wrote-8, Bible-10)
aux(beleive-14, do-12)
neg(beleive-14, not-13)
root(ROOT-0, beleive-14)
nn(Sin-17, Original-16)
prep_in(beleive-14, Sin-17)

(ROOT
  (SBARQ
    (WHADVP
      (ADVP (RB So))
      (WRB why))
    (SINV
      (VP (MD should))
      (NP (PRP we)))
    (. ?)))

advmod(why-2, So-1)
advmod(should-3, why-2)
root(ROOT-0, should-3)
nsubj(should-3, we-4)

(ROOT
  (S (CC And)
    (PP (IN without)
      (NP (NN decay)))
    (, ,)
    (NP
      (NP (NNS nutrients))
      (PP (IN in)
        (NP
          (ADJP (RB once) (JJ living))
          (NNS things))))
    (VP (MD could) (RB not)
      (VP (VB be)
        (VP (VBN returned)
          (PP (TO to)
            (NP (DT the) (NN soil)))
          (S
            (VP (TO to)
              (VP
                (VP (VB replenish)
                  (NP (PRP it)))
                (CC and)
                (VP (VB enable)
                  (S
                    (NP (NNS plants))
                    (VP (TO to)
                      (VP (VB grow)))))))))))
    (. .)))

cc(returned-13, And-1)
prep_without(returned-13, decay-3)
nsubjpass(returned-13, nutrients-5)
advmod(living-8, once-7)
amod(things-9, living-8)
prep_in(nutrients-5, things-9)
aux(returned-13, could-10)
neg(returned-13, not-11)
auxpass(returned-13, be-12)
root(ROOT-0, returned-13)
det(soil-16, the-15)
prep_to(returned-13, soil-16)
aux(replenish-18, to-17)
xcomp(returned-13, replenish-18)
dobj(replenish-18, it-19)
xcomp(returned-13, enable-21)
conj_and(replenish-18, enable-21)
nsubj(grow-24, plants-22)
aux(grow-24, to-23)
xcomp(enable-21, grow-24)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP
            (NP (DT the) (NN depiction))
            (PP (IN of)
              (NP
                (NP (NN life))
                (ADVP (RB prior)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN Fall))
                      (PP (IN of)
                        (NP (NN Man))))))))
            (, ,)
            (PP (IN with)
              (NP
                (NP
                  (NP (DT no) (NNS animals))
                  (VP (VBG dying)))
                (CC and)
                (NP
                  (NP (DT all))
                  (PP (IN of)
                    (S
                      (NP (PRP them))
                      (VP (VBG being)
                        (VP (VBN vegetarian))))))))
            (, ,))
          (VP (VBZ is)
            (ADJP (JJ ludicrous))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(ludicrous-27, why-3)
det(depiction-5, the-4)
nsubj(ludicrous-27, depiction-5)
prep_of(depiction-5, life-7)
det(Fall-11, the-10)
prep_prior_to(life-7, Fall-11)
prep_of(Fall-11, Man-13)
det(animals-17, no-16)
prep_with(depiction-5, animals-17)
partmod(animals-17, dying-18)
prep_with(depiction-5, all-20)
conj_and(animals-17, all-20)
nsubjpass(vegetarian-24, them-22)
auxpass(vegetarian-24, being-23)
prepc_of(all-20, vegetarian-24)
cop(ludicrous-27, is-26)
advcl('s-2, ludicrous-27)

(ROOT
  (S
    (PP (IN Within)
      (NP (DT a) (JJ few) (NNS years)))
    (, ,)
    (NP
      (NP (DT the) (NN cycle))
      (PP (IN of)
        (NP (NN life))))
    (VP (MD would)
      (VP (VB grind)
        (PP (TO to)
          (NP (DT a) (NN halt)))
        (SBAR (IN because)
          (S
            (S
              (NP (DT the) (NNS animals))
              (VP (MD would)
                (VP (VB have)
                  (VP (VBN eaten)
                    (NP (PDT all) (DT the) (NNS plants))))))
            (CC and)
            (S
              (NP (DT the) (NN world))
              (VP (MD would)
                (VP (VB have)
                  (VP (VBN been)
                    (PP (IN in)
                      (NP (DT a) (JJ static) (NN state)))
                    (ADVP (RB forever))))))))))
    (. .)))

det(years-4, a-2)
amod(years-4, few-3)
prep_within(grind-11, years-4)
det(cycle-7, the-6)
nsubj(grind-11, cycle-7)
prep_of(cycle-7, life-9)
aux(grind-11, would-10)
root(ROOT-0, grind-11)
det(halt-14, a-13)
prep_to(grind-11, halt-14)
mark(eaten-20, because-15)
det(animals-17, the-16)
nsubj(eaten-20, animals-17)
aux(eaten-20, would-18)
aux(eaten-20, have-19)
advcl(grind-11, eaten-20)
predet(plants-23, all-21)
det(plants-23, the-22)
dobj(eaten-20, plants-23)
det(world-26, the-25)
nsubj(been-29, world-26)
aux(been-29, would-27)
aux(been-29, have-28)
advcl(grind-11, been-29)
conj_and(eaten-20, been-29)
det(state-33, a-31)
amod(state-33, static-32)
prep_in(been-29, state-33)
advmod(been-29, forever-34)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBD told)
      (NP (DT the) (NNS animals)
        (CC and)
        (NNS people))
      (, ,)
      (PP
        (ADVP (RB even))
        (IN before)
        (NP (DT the) (NN Fall)))
      (, ,)
      (S
        (VP (TO to) (`` ``)
          (VP
            (VP (VB be)
              (ADJP (JJ fruitful)))
            (CC and)
            (VP (VB multiply)))
          ('' ''))))
    (. .)))

nsubj(told-2, God-1)
xsubj(fruitful-16, God-1)
root(ROOT-0, told-2)
det(animals-4, the-3)
dobj(told-2, animals-4)
dobj(told-2, people-6)
conj_and(animals-4, people-6)
advmod(told-2, even-8)
det(Fall-11, the-10)
prep_before(told-2, Fall-11)
aux(fruitful-16, to-13)
cop(fruitful-16, be-15)
xcomp(told-2, fruitful-16)
xcomp(told-2, multiply-18)
conj_and(fruitful-16, multiply-18)

(ROOT
  (S
    (NP (DT That))
    (VP (MD would)
      (ADVP (RB quickly))
      (VP (VB end)
        (SBAR (IN once)
          (S
            (NP (PDT all) (DT the) (NNS plants))
            (VP (VBD were)
              (VP (VBN eaten)))))))
    (. .)))

nsubj(end-4, That-1)
aux(end-4, would-2)
advmod(end-4, quickly-3)
root(ROOT-0, end-4)
mark(eaten-10, once-5)
predet(plants-8, all-6)
det(plants-8, the-7)
nsubjpass(eaten-10, plants-8)
auxpass(eaten-10, were-9)
advcl(end-4, eaten-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN gospel) (NN message))
        (VP (VBZ is)
          (ADJP (JJ dependent)
            (PP (IN on)
              (NP (DT the) (NNP Genesis) (NNS myths)))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP are)
      (ADJP (JJR better) (RP off))
      (PP (IN without)
        (NP (PRP it))))
    (. .)))

mark(dependent-6, If-1)
det(message-4, the-2)
nn(message-4, gospel-3)
nsubj(dependent-6, message-4)
cop(dependent-6, is-5)
advcl(better-14, dependent-6)
det(myths-10, the-8)
nn(myths-10, Genesis-9)
prep_on(dependent-6, myths-10)
nsubj(better-14, we-12)
cop(better-14, are-13)
root(ROOT-0, better-14)
dep(better-14, off-15)
prep_without(better-14, it-17)

(ROOT
  (S
    (ADVP (RB Fortunately))
    (, ,)
    (NP (DT no) (NN one))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (DT that) (JJ narrow) (JJ minded)
              (CC or)
              (JJ irrational))))))
    (. .)))

advmod(has-5, Fortunately-1)
det(one-4, no-3)
nsubj(has-5, one-4)
xsubj(minded-10, one-4)
root(ROOT-0, has-5)
aux(minded-10, to-6)
cop(minded-10, be-7)
dep(minded-10, that-8)
amod(minded-10, narrow-9)
xcomp(has-5, minded-10)
xcomp(has-5, irrational-12)
conj_or(minded-10, irrational-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NN problem))
      (PP (IN of)
        (NP
          (NP (NN sin))
          (PP (IN among)
            (NP (JJ human) (NNS beings))))))
    (VP (MD would)
      (VP (VB remain)
        (SBAR (RB even) (IN if)
          (S
            (NP (NNP Genesis))
            (VP (VBD had)
              (ADVP (RB never))
              (VP (VBN been)
                (VP (VBN written))))))))
    (. .)))

det(problem-2, The-1)
nsubj(remain-9, problem-2)
prep_of(problem-2, sin-4)
amod(beings-7, human-6)
prep_among(sin-4, beings-7)
aux(remain-9, would-8)
root(ROOT-0, remain-9)
advmod(written-16, even-10)
dep(written-16, if-11)
nsubjpass(written-16, Genesis-12)
aux(written-16, had-13)
neg(written-16, never-14)
auxpass(written-16, been-15)
ccomp(remain-9, written-16)

