(ROOT
  (FRAG
    (PP (IN With)
      (NP (NN belief))
      (. .))
    (. .)))

root(ROOT-0, With-1)
pobj(With-1, belief-2)

(ROOT
  (S
    (S
      (S
        (VP (VBG facing)
          (NP (NN reality))))
      (VP (VBZ does) (RB n't)
        (VP (VB require)
          (NP (`` ``) (NN courage) ('' '')))))
    (: ...)
    (X (CC but)
      (VP (VBD facing)
        (NP (DT a) (NN world))
        (PP (IN with)
          (NP
            (NP (DT no) (NN purpose))
            (PP (IN behind)
              (NP (PRP it))))))
      (. .))
    (. .)))

csubj(require-5, facing-1)
dobj(facing-1, reality-2)
aux(require-5, does-3)
neg(require-5, n't-4)
root(ROOT-0, require-5)
dobj(require-5, courage-7)
dep(facing-11, but-10)
dep(require-5, facing-11)
det(world-13, a-12)
dobj(facing-11, world-13)
det(purpose-16, no-15)
prep_with(facing-11, purpose-16)
prep_behind(purpose-16, it-18)

(ROOT
  (FRAG
    (ADVP
      (ADVP (RB As) (RB far))
      (PP (IN as)
        (NP (PRP you))))
    (NP
      (NP (NN question))
      (PP (IN of) (`` ``)
        (SBARQ
          (WHNP (WP what))
          (SQ (VBP are)
            (NP
              (NP (DT the) (NNS odds))
              (SBAR
                (S
                  (NP (PRP$ your) (NN God))
                  (VP (MD would)
                    (VP (VB be)
                      (NP
                        (NP (DT the) (NN way))
                        (SBAR
                          (S
                            (NP (PRP he))
                            (VP (VBZ is)))))))))))
          (. ?))
        ('' '')))))

advmod(far-2, As-1)
dep(question-5, far-2)
prep_as(far-2, you-4)
root(ROOT-0, question-5)
prep(question-5, of-6)
attr(are-9, what-8)
dep(of-6, are-9)
det(odds-11, the-10)
nsubj(are-9, odds-11)
poss(God-13, your-12)
nsubj(way-17, God-13)
aux(way-17, would-14)
cop(way-17, be-15)
det(way-17, the-16)
rcmod(odds-11, way-17)
nsubj(is-19, he-18)
rcmod(way-17, is-19)

(ROOT
  (INTJ (UH ...)))


(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB truly))
    (VP (VBP do) (RB n't)
      (VP (VB get)
        (NP (DT the) (NN question))))
    (: ...)))

nsubj(get-5, I-1)
advmod(get-5, truly-2)
aux(get-5, do-3)
neg(get-5, n't-4)
root(ROOT-0, get-5)
det(question-7, the-6)
dobj(get-5, question-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD 'd)
        (VP (VB say)
          (NP (CD 1:1)))))
    (: ...)
    (CC but)
    (S
      (NP (DT that))
      (VP (MD would)
        (VP (VB mean)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD knew)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (DT that))
                    (VP (VBD meant)
                      (PP (IN in)
                        (NP (DT the) (JJ first) (NN place))))))))))))
    (. ?)))

nsubj(say-3, I-1)
aux(say-3, 'd-2)
root(ROOT-0, say-3)
dobj(say-3, 1:1-4)
nsubj(mean-9, that-7)
aux(mean-9, would-8)
conj_but(say-3, mean-9)
nsubj(knew-11, I-10)
ccomp(mean-9, knew-11)
dobj(meant-14, what-12)
nsubj(meant-14, that-13)
ccomp(knew-11, meant-14)
det(place-18, the-16)
amod(place-18, first-17)
prep_in(meant-14, place-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (RB awfully) (JJ esoteric)))
    (: ...)))

nsubj(esoteric-4, It-1)
cop(esoteric-4, 's-2)
advmod(esoteric-4, awfully-3)
root(ROOT-0, esoteric-4)

(ROOT
  (S
    (VP (VB Do)
      (S
        (NP (PRP you))
        (VP (VB mean)
          (FRAG
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBP are)
                  (NP (DT the) (NNS odds))))
              (. .))))))
    (. .)))

root(ROOT-0, Do-1)
nsubj(mean-3, you-2)
ccomp(Do-1, mean-3)
nsubj(odds-7, what-4)
cop(odds-7, are-5)
det(odds-7, the-6)
dep(mean-3, odds-7)

(ROOT
  (FRAG
    (WHNP (WDT that))
    (SBAR (IN if)
      (S
        (NP (EX there))
        (VP (VBD were)
          (NP (DT a) (NNP God))
          (SBAR (IN that)
            (S
              (NP (PRP he))
              (VP (MD would)
                (VP (VB want)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (NP (DT a) (NN creation))))))))))))
    (. ?)))

dep(were-4, that-1)
mark(were-4, if-2)
expl(were-4, there-3)
root(ROOT-0, were-4)
det(God-6, a-5)
nsubj(were-4, God-6)
complm(want-10, that-7)
nsubj(want-10, he-8)
xsubj(have-12, he-8)
aux(want-10, would-9)
ccomp(were-4, want-10)
aux(have-12, to-11)
xcomp(want-10, have-12)
det(creation-14, a-13)
dobj(have-12, creation-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD 'd)
        (VP (VB figure)
          (NP (CD 1:1)))))
    (: ...)
    (S
      (SBAR (IN though)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (RB rather) (JJ hard)
              (PP (IN for)
                (NP (DT an) (NN imperfect) (VBG being))))
            (S
              (VP (TO to)
                (VP (VB imagine)
                  (S
                    (S
                      (NP (DT the))
                      (VP (VBZ wants)
                        (PP (IN of)
                          (NP (NNP God)))))
                    (CC but)
                    (S
                      (NP (PRP it))
                      (VP (MD would)
                        (VP (VB seem)
                          (NP (DT any) (NNP God))
                          (PP (IN by)
                            (NP (NN necessity)))))))))))))
      (VP (MD would)
        (VP (`` ``) (VB do) ('' '')
          (NP (NN something)))))
    (. ...)))

nsubj(figure-3, I-1)
aux(figure-3, 'd-2)
root(ROOT-0, figure-3)
dobj(figure-3, 1:1-4)
mark(hard-10, though-6)
nsubj(hard-10, it-7)
xsubj(imagine-16, it-7)
cop(hard-10, 's-8)
advmod(hard-10, rather-9)
csubj(do-31, hard-10)
det(imperfect-13, an-12)
prep_for(hard-10, imperfect-13)
amod(imperfect-13, being-14)
aux(imagine-16, to-15)
xcomp(hard-10, imagine-16)
nsubj(wants-18, the-17)
dep(imagine-16, wants-18)
prep_of(wants-18, God-20)
nsubj(God-26, it-22)
aux(God-26, would-23)
cop(God-26, seem-24)
det(God-26, any-25)
dep(imagine-16, God-26)
conj_but(wants-18, God-26)
prep_by(God-26, necessity-28)
aux(do-31, would-29)
parataxis(figure-3, do-31)
dobj(do-31, something-33)

(ROOT
  (S
    (S
      (NP (RB not))
      (ADVP (RB simply))
      (VP (VB be)
        (ADJP (JJ content))
        (PP (IN as)
          (NP (DT an)
            (ADJP (DT all)
              (ADJP (JJ encompassing) (JJ complete))
              (CC and)
              (ADJP (JJ perfect)))
            (NN whole)))))
    (: ...)
    (S
      (NP (PRP it))
      (VP (MD would)
        (ADVP (RBS most) (RB likely))
        (VP (`` ``) (VB create) ('' '')
          (PP (IN in)
            (NP (DT some) (NN form)))))
      (. .))
    (. .)))

nsubj(content-4, not-1)
advmod(content-4, simply-2)
cop(content-4, be-3)
root(ROOT-0, content-4)
det(whole-12, an-6)
dep(complete-9, all-7)
amod(complete-9, encompassing-8)
amod(whole-12, complete-9)
conj_and(complete-9, perfect-11)
amod(whole-12, perfect-11)
prep_as(content-4, whole-12)
nsubj(create-19, it-14)
aux(create-19, would-15)
advmod(likely-17, most-16)
advmod(create-19, likely-17)
parataxis(content-4, create-19)
det(form-23, some-22)
prep_in(create-19, form-23)

(ROOT
  (FRAG (CC and)
    (SBAR
      (WHNP (WP what))
      (S
        (VP (VBP are)
          (NP (DT the) (NNS chances))
          (SBAR (IN that)
            (S
              (NP (DT this) (NN creation))
              (VP (MD would)
                (ADVP (RB likely))
                (VP (VB be)
                  (NP
                    (NP (DT a) (NN reflection))
                    (PP (IN of)
                      (NP (PRP himself)))
                    (PP (IN in)
                      (NP (DT some) (NN form))))))))))
      (. .))
    (. .)))

dep(chances-5, and-1)
nsubj(chances-5, what-2)
cop(chances-5, are-3)
det(chances-5, the-4)
root(ROOT-0, chances-5)
complm(reflection-13, that-6)
det(creation-8, this-7)
nsubj(reflection-13, creation-8)
aux(reflection-13, would-9)
advmod(reflection-13, likely-10)
cop(reflection-13, be-11)
det(reflection-13, a-12)
ccomp(chances-5, reflection-13)
prep_of(reflection-13, himself-15)
det(form-18, some-17)
prep_in(reflection-13, form-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB say)
        (SBAR
          (S
            (NP (CD 1:1))
            (: ...)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP create)
                  (SBAR
                    (S
                      (NP (PRP$ your) (NN creation))
                      (VP (VBZ reflects)
                        (NP (PRP$ your) (NN character))))))))
            (: ...)
            (VP (VBZ does)
              (NP (PRP it))
              (ADVP (RB not)))))))
    (. ?)))

nsubj(say-3, I-1)
aux(say-3, 'd-2)
root(ROOT-0, say-3)
nsubj(does-15, 1:1-4)
advmod(create-8, when-6)
nsubj(create-8, you-7)
advcl(does-15, create-8)
parataxis(does-15, create-8)
poss(creation-10, your-9)
nsubj(reflects-11, creation-10)
ccomp(create-8, reflects-11)
poss(character-13, your-12)
dobj(reflects-11, character-13)
ccomp(say-3, does-15)
dobj(does-15, it-16)
neg(does-15, not-17)

(ROOT
  (S
    (PP (IN with)
      (NP
        (NP (DT no) (NN reason))
        (PP (IN except)
          (NP (NN cause)
            (CC and)
            (NN effect) (, ,) (NNS electrons)
            (CC and)
            (NNS neutrons)))))
    (, ,)
    (NP (RB yes) (DT that) (NN world))
    (VP (VBZ requires)
      (NP (NN courage))
      (PP (IN for)
        (ADJP (JJ sure))))
    (. .)))

det(reason-3, no-2)
prep_with(requires-16, reason-3)
nn(electrons-9, cause-5)
conj_and(cause-5, effect-7)
nn(electrons-9, effect-7)
prep_except(reason-3, electrons-9)
prep_except(reason-3, neutrons-11)
conj_and(electrons-9, neutrons-11)
advmod(world-15, yes-13)
det(world-15, that-14)
nsubj(requires-16, world-15)
root(ROOT-0, requires-16)
dobj(requires-16, courage-17)
prep_for(requires-16, sure-19)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (DT the) (JJ next) (NN step))
      (VP (VBZ becomes)
        (ADJP (RBR more) (JJ conjectural))))
    (: ...)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB create)
                  (NP (DT this) (`` ``) (NN creation) ('' ''))))))))
      (VP (MD would)
        (NP (PRP it))
        (S
          (VP (VB be)
            (ADJP (JJ proper)
              (S
                (VP (TO to)
                  (VP (VB force)
                    (PRT (RP upon))
                    (NP (PRP it) (JJ absolute) (NN obedience))))))))))
    (. ?)))

advmod(conjectural-7, Now-1)
det(step-4, the-2)
amod(step-4, next-3)
nsubj(conjectural-7, step-4)
cop(conjectural-7, becomes-5)
advmod(conjectural-7, more-6)
root(ROOT-0, conjectural-7)
mark(were-11, if-9)
nsubj(were-11, you-10)
xsubj(create-13, you-10)
csubj(would-18, were-11)
aux(create-13, to-12)
xcomp(were-11, create-13)
det(creation-16, this-14)
dobj(create-13, creation-16)
parataxis(conjectural-7, would-18)
dobj(would-18, it-19)
cop(proper-21, be-20)
dep(would-18, proper-21)
aux(force-23, to-22)
xcomp(proper-21, force-23)
prt(force-23, upon-24)
dep(obedience-27, it-25)
amod(obedience-27, absolute-26)
dobj(force-23, obedience-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB say)
        (SBAR (IN that)
          (S
            (VP (MD would) (RB n't)
              (VP (VB be)
                (ADJP (JJ right))))))))
    (. .) (. .)))

nsubj(say-3, I-1)
aux(say-3, 'd-2)
root(ROOT-0, say-3)
complm(right-8, that-4)
aux(right-8, would-5)
neg(right-8, n't-6)
cop(right-8, be-7)
ccomp(say-3, right-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB say)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD 'd)
              (VP (VB have)
                (S
                  (VP (TO to)
                    (VP (VB give)
                      (NP (PRP it))
                      (NP
                        (NP
                          (NP (DT a) (NN right))
                          (PP (TO to)
                            (NP (NN dissent))))
                        (: ...)
                        (ADVP (NN matter)
                          (PP (IN of)
                            (FRAG
                              (NP
                                (NP (NN fact))
                                (SBAR
                                  (S
                                    (NP (PRP I))
                                    (VP (MD 'd)
                                      (VP (VB give)
                                        (NP (PRP it))
                                        (NP
                                          (NP (DT a) (CD 1:1) (NN chance))
                                          (SBAR (IN that)
                                            (S
                                              (NP (DT the) (JJ only) (NN path))
                                              (VP (MD would)
                                                (VP (VB be)
                                                  (ADJP (JJ free)
                                                    (SBAR
                                                      (S
                                                        (VP (MD will))))))))))))))
                                (. .)))))))))))))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, 'd-2)
root(ROOT-0, say-3)
nsubj(have-6, you-4)
xsubj(give-8, you-4)
aux(have-6, 'd-5)
ccomp(say-3, have-6)
aux(give-8, to-7)
xcomp(have-6, give-8)
iobj(give-8, it-9)
det(right-11, a-10)
dobj(give-8, right-11)
prep_to(right-11, dissent-13)
advmod(right-11, matter-15)
prep(matter-15, of-16)
dep(of-16, fact-17)
nsubj(give-20, I-18)
aux(give-20, 'd-19)
rcmod(fact-17, give-20)
iobj(give-20, it-21)
det(chance-24, a-22)
num(chance-24, 1:1-23)
dobj(give-20, chance-24)
dobj(free-31, chance-24)
complm(free-31, that-25)
det(path-28, the-26)
amod(path-28, only-27)
nsubj(free-31, path-28)
aux(free-31, would-29)
cop(free-31, be-30)
dep(chance-24, free-31)
dep(free-31, will-32)

(ROOT
  (FRAG (CC and)
    (ADVP (RB thus))
    (NP
      (NP (DT an) (JJ imperfect) (NN creation))
      (SBAR
        (FRAG
          (SBAR (IN since)
            (S
              (NP (PRP you))
              (VP (MD can) (RB not)
                (VP (VB have)
                  (NP (DT the) (NN option)
                    (S
                      (VP (TO to)
                        (VP (VB do)
                          (ADJP (JJ wrong))
                          (PP (IN without)
                            (NP (PRP it)))))))))))
          (. .))))
    (. .)))

dep(creation-5, and-1)
dep(creation-5, thus-2)
det(creation-5, an-3)
amod(creation-5, imperfect-4)
root(ROOT-0, creation-5)
mark(have-10, since-6)
nsubj(have-10, you-7)
aux(have-10, can-8)
neg(have-10, not-9)
dep(creation-5, have-10)
det(option-12, the-11)
dobj(have-10, option-12)
aux(wrong-15, to-13)
dep(wrong-15, do-14)
infmod(option-12, wrong-15)
prep_without(wrong-15, it-17)

(ROOT
  (S
    (NP
      (ADJP (RB so) (JJ free))
      (NN will))
    (VP (VBZ is)
      (NP (DT another) (CD 1:1) (NN chance)))
    (. .) (. .)))

advmod(free-2, so-1)
amod(will-3, free-2)
nsubj(chance-7, will-3)
cop(chance-7, is-4)
det(chance-7, another-5)
num(chance-7, 1:1-6)
root(ROOT-0, chance-7)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP we))
    (VP (VBP have)
      (NP (DT a) (NN creation)))
    (. .) (. .)))

advmod(have-3, Now-1)
nsubj(have-3, we-2)
root(ROOT-0, have-3)
det(creation-5, a-4)
dobj(have-3, creation-5)

(ROOT
  (S
    (S (CC and)
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ flawed))))
    (CC and)
    (SINV
      (ADVP (RB yet))
      (VP (VBZ shows))
      (NP
        (NP (NNS similarities))
        (PP (TO to)
          (NP
            (NP (PRP it) (POS 's))
            (NN creator))))
      (. .))
    (. .)))

nsubj(flawed-4, it-2)
cop(flawed-4, 's-3)
root(ROOT-0, flawed-4)
advmod(shows-7, yet-6)
conj_and(flawed-4, shows-7)
nsubj(shows-7, similarities-8)
poss(creator-12, it-10)
prep_to(similarities-8, creator-12)

(ROOT
  (S
    (NP (PRP we))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB give)
            (NP (DT this) (NN creation))
            (NP (DT some) (NN purpose))))))
    (. .) (. .)))

nsubj(need-2, we-1)
xsubj(give-4, we-1)
root(ROOT-0, need-2)
aux(give-4, to-3)
xcomp(need-2, give-4)
det(creation-6, this-5)
iobj(give-4, creation-6)
det(purpose-8, some-7)
dobj(give-4, purpose-8)

(ROOT
  (NP
    (NP (DT some) (NN form))
    (PP (IN of)
      (NP (NN reason)))
    (S
      (VP (TO to)
        (VP (VB exist)
          (FRAG
            (PP (IN of)
              (NP (NNS sorts)))
            (. .)))))
    (. .)))

det(form-2, some-1)
root(ROOT-0, form-2)
prep_of(form-2, reason-4)
aux(exist-6, to-5)
infmod(form-2, exist-6)
dep(exist-6, of-7)
pobj(of-7, sorts-8)

(ROOT
  (S
    (ADVP (RB well))
    (NP (PRP I))
    (VP (VBP figure)
      (SBAR
        (S
          (NP (DT the) (JJ obvious) (NN choice))
          (VP (MD would)
            (VP (VB be)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT the) (JJ very) (NN purpose))
                    (SBAR
                      (S
                        (NP (DT the) (NN creator))
                        (VP (MD would)
                          (VP (VB devise))))))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (JJ great) (NN mystery))
                      (PP (IN of) (`` ``)
                        (SBAR
                          (WHADVP (WRB where))
                          (S
                            (VP (VBD did)
                              (SBAR
                                (S
                                  (NP (PRP I))
                                  (VP (VBP come)
                                    (PP (IN from))))))))))))))))))
    (. ?)))

advmod(figure-3, well-1)
nsubj(figure-3, I-2)
root(ROOT-0, figure-3)
det(choice-6, the-4)
amod(choice-6, obvious-5)
nsubj(be-8, choice-6)
aux(be-8, would-7)
ccomp(figure-3, be-8)
complm(mystery-20, that-9)
det(purpose-12, the-10)
amod(purpose-12, very-11)
dobj(devise-16, purpose-12)
nsubj(mystery-20, purpose-12)
det(creator-14, the-13)
nsubj(devise-16, creator-14)
aux(devise-16, would-15)
rcmod(purpose-12, devise-16)
cop(mystery-20, is-17)
det(mystery-20, a-18)
amod(mystery-20, great-19)
ccomp(be-8, mystery-20)
prep(mystery-20, of-21)
advmod(did-24, where-23)
dep(of-21, did-24)
nsubj(come-26, I-25)
ccomp(did-24, come-26)
prep(come-26, from-27)

(ROOT
  (S
    (VP (VB Keep)
      (PP (IN in)
        (NP (NN mind)))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBD did) (RB not)
            (VP (VB find)
              (NP (NNP God))
              (PRT (RP out))
              (PP (IN of)
                (NP (DT some) (NN need)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (NP (DT an) (NN explanation))))))))))
        (. .)))
    (. .)))

root(ROOT-0, Keep-1)
prep_in(Keep-1, mind-3)
complm(find-8, that-4)
nsubj(find-8, I-5)
aux(find-8, did-6)
neg(find-8, not-7)
ccomp(Keep-1, find-8)
dobj(find-8, God-9)
det(need-13, some-12)
prep_out_of(find-8, need-13)
aux(have-15, to-14)
infmod(need-13, have-15)
det(explanation-17, an-16)
dobj(have-15, explanation-17)

(ROOT
  (S
    (SBAR (IN though)
      (S
        (NP (PRP I))
        (VP (VBP admit)
          (ADVP (RB even))
          (PP (IN as)
            (NP (DT an) (NN atheist))))))
    (NP (DT the) (NN concept))
    (VP (VBD sounded)
      (ADJP (`` ``) (JJ nice) ('' '')))
    (. .)))

mark(admit-3, though-1)
nsubj(admit-3, I-2)
advcl(sounded-10, admit-3)
advmod(admit-3, even-4)
det(atheist-7, an-6)
prep_as(admit-3, atheist-7)
det(concept-9, the-8)
nsubj(sounded-10, concept-9)
root(ROOT-0, sounded-10)
acomp(sounded-10, nice-12)

(ROOT
  (FRAG
    (PP (IN in)
      (NP (JJ other) (NNS words))
      (. .))
    (. .)))

root(ROOT-0, in-1)
amod(words-3, other-2)
pobj(in-1, words-3)

(ROOT
  (S
    (NP (DT a) (JJ beautiful) (NN mystery))
    (VP (MD would)
      (VP (VB be) (`` ``)
        (VP (VBG am)
          (S
            (NP (PRP I))
            (NP (DT an) (NN accident))))))
    (. .) (. .)))

det(mystery-3, a-1)
amod(mystery-3, beautiful-2)
nsubj(am-7, mystery-3)
aux(am-7, would-4)
aux(am-7, be-5)
root(ROOT-0, am-7)
nsubj(accident-10, I-8)
det(accident-10, an-9)
xcomp(am-7, accident-10)

(ROOT
  (SQ (CC or)
    (VBD did)
    (NP (PRP I))
    (VP (VB come)
      (PP (IN from)
        (NP (DT a) (NN creator))))
    (. ?)))

cc(come-4, or-1)
aux(come-4, did-2)
nsubj(come-4, I-3)
root(ROOT-0, come-4)
det(creator-7, a-6)
prep_from(come-4, creator-7)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (: ...)
          (NP (RB now))
          (PP
            (PP
              (NP
                (NP (NNP THAT))
                (SBAR
                  (S
                    (VP (MD would)
                      (VP (VB be)
                        (NP
                          (NP (DT an) (JJ ingenious) (NN idea))
                          (: ...)
                          (S
                            (NP (PRP it))
                            (VP (MD would)
                              (VP (VB be))))))))))
              (IN like)
              (NP (DT a) (NN game)))
            (PP (IN of)
              (NP (NNP hide)))))
        (ADVP (CC and)))
      (VP (VBP seek)))
    (IN with)
    (S
      (NP (PRP$ my))
      (VP (VBZ creation)))
    (. ...)))

nsubj(seek-20, now-3)
npadvmod(now-3, THAT-4)
aux(idea-9, would-5)
cop(idea-9, be-6)
det(idea-9, an-7)
amod(idea-9, ingenious-8)
rcmod(THAT-4, idea-9)
nsubj(be-13, it-11)
aux(be-13, would-12)
dep(idea-9, be-13)
det(game-16, a-15)
prep_like(now-3, game-16)
prep_of(now-3, hide-18)
advmod(now-3, and-19)
root(ROOT-0, seek-20)
dep(seek-20, with-21)
nsubj(creation-23, my-22)
ccomp(seek-20, creation-23)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT the) (JJ ultimate) (NN question))
            (CC and)
            (NP (DT the) (JJ ultimate) (NN purpose))))))
    (: ...)
    (S
      (INTJ (UH yes))
      (, ,)
      (NP (PRP I))
      (VP (MD would)
        (VP (VB give)
          (NP (DT a) (CD 1:1) (NN chance))
          (SBAR (IN that)
            (S
              (NP (DT this))
              (VP (MD would)
                (VP (VB be)
                  (NP
                    (NP (DT the) (JJ perfect) (NN concept))
                    (PP (IN for)
                      (NP
                        (NP (PRP$ my) (NN creation) (POS 's))
                        (`` ``)
                        (S
                          (VP (NNP fulfilling)
                            (NP (NN purpose))))
                        ('' '')))))))
            (. .)))))
    (. .)))

nsubj(question-6, It-1)
aux(question-6, would-2)
cop(question-6, be-3)
det(question-6, the-4)
amod(question-6, ultimate-5)
root(ROOT-0, question-6)
det(purpose-10, the-8)
amod(purpose-10, ultimate-9)
conj_and(question-6, purpose-10)
dep(give-16, yes-12)
nsubj(give-16, I-14)
aux(give-16, would-15)
parataxis(question-6, give-16)
det(chance-19, a-17)
num(chance-19, 1:1-18)
dobj(give-16, chance-19)
complm(concept-26, that-20)
nsubj(concept-26, this-21)
aux(concept-26, would-22)
cop(concept-26, be-23)
det(concept-26, the-24)
amod(concept-26, perfect-25)
ccomp(give-16, concept-26)
poss(creation-29, my-28)
prep_for(concept-26, creation-29)
possessive(creation-29, 's-30)
dep(purpose-33, fulfilling-32)
dep(creation-29, purpose-33)

(ROOT
  (FRAG
    (NP (RB Now) (DT another) (NN problem))
    (: ...)
    (S
      (VP (VBG considering)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP am)
              (NP (DT a) (JJ perfect) (NN creator)))
            (. .)))))
    (. .)))

advmod(problem-3, Now-1)
det(problem-3, another-2)
root(ROOT-0, problem-3)
dep(problem-3, considering-5)
nsubj(creator-10, I-6)
cop(creator-10, am-7)
det(creator-10, a-8)
amod(creator-10, perfect-9)
ccomp(considering-5, creator-10)

(ROOT
  (S (CC but)
    (VP (VB have)
      (VP (VBN made)
        (NP (DT an) (JJ imperfect) (NN being))
        (: ...)
        (FRAG
          (ADJP (VBN doomed)
            (PP (TO to)
              (NP (NNS mistakes)
                (CC and)
                (NN suffering))))
          (. .))))
    (. .)))

cc(made-3, but-1)
aux(made-3, have-2)
root(ROOT-0, made-3)
det(being-6, an-4)
amod(being-6, imperfect-5)
dobj(made-3, being-6)
dep(made-3, doomed-8)
prep_to(doomed-8, mistakes-10)
prep_to(doomed-8, suffering-12)
conj_and(mistakes-10, suffering-12)

(ROOT
  (FRAG (CC and)
    (ADVP (RB now))
    (NP
      (NP (PRP he))
      (SBAR
        (S
          (VP (VBZ has)
            (NP
              (NP (DT a) (NN reason))
              (PP (IN for)
                (NP (NN life)))))))
      (. .))
    (. .)))

dep(he-3, and-1)
dep(he-3, now-2)
root(ROOT-0, he-3)
rcmod(he-3, has-4)
det(reason-6, a-5)
dobj(has-4, reason-6)
prep_for(reason-6, life-8)

(ROOT
  (NP
    (NP (DT the) (NN search))
    (PP (IN for)
      (NP (DT the) (NN truth)))
    (PP (IN of)
      (FRAG
        (NP (PRP me))
        (. .)))
    (. .)))

det(search-2, the-1)
root(ROOT-0, search-2)
det(truth-5, the-4)
prep_for(search-2, truth-5)
prep(search-2, of-6)
dep(of-6, me-7)

(ROOT
  (FRAG
    (NP (DT the) (NN creator) (. .))
    (. .)))

det(creator-2, the-1)
root(ROOT-0, creator-2)

(ROOT
  (S (CC Nor)
    (SBAR
      (SINV
        (VP (VBD was)
          (NP (PRP it)))
        (NP (DT a) (NN need)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (DT this) (JJ innate) (NN courage))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ comes)
                        (PP (IN from)
                          (NP
                            (NP (DT a) (NN world))
                            (PP (IN with)
                              (NP (NN reason)))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD was)
      (ADVP (RB instead))
      (NP (RB just) (DT a) (NN bonus)))
    (. .)))

cc(bonus-24, Nor-1)
cop(it-3, was-2)
dep(bonus-24, it-3)
det(need-5, a-4)
nsubj(it-3, need-5)
aux(have-7, to-6)
infmod(need-5, have-7)
det(courage-10, this-8)
amod(courage-10, innate-9)
dobj(have-7, courage-10)
nsubj(comes-12, courage-10)
rcmod(courage-10, comes-12)
det(world-15, a-14)
prep_from(comes-12, world-15)
prep_with(world-15, reason-17)
nsubj(bonus-24, it-19)
cop(bonus-24, was-20)
advmod(bonus-24, instead-21)
advmod(bonus-24, just-22)
det(bonus-24, a-23)
root(ROOT-0, bonus-24)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP need)
        (S
          (VP (TO to)
            (VP (VB instill)
              (NP
                (NP (DT a) (NN reason))
                (PP (IN for)
                  (NP (DT this) (NN search)))))))))
    (: ...)
    (S
      (NP
        (NP (DT a) (NN reward))
        (PP (IN of)
          (NP
            (NP (NNS sorts))
            (PP (IN since)
              (S
                (VP
                  (ADVP (RB simply))
                  (VBG knowing)
                  (SBAR
                    (S
                      (NP (PRP I))
                      (VP (VBP exist))))))))))
      (VP (VBZ is) (RB not)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP
                (ADVP (RB really))
                (VB provide)
                (NP
                  (NP (NN meaning))
                  (CC or)
                  (RB even)
                  (NP
                    (NP (NN reason))
                    (PP (TO to)
                      (NP (NN search)))))))))))
    (. ...)))

nsubj(need-2, I-1)
xsubj(instill-4, I-1)
root(ROOT-0, need-2)
aux(instill-4, to-3)
xcomp(need-2, instill-4)
det(reason-6, a-5)
dobj(instill-4, reason-6)
det(search-9, this-8)
prep_for(reason-6, search-9)
det(reward-12, a-11)
nsubj(going-22, reward-12)
xsubj(provide-25, reward-12)
prep_of(reward-12, sorts-14)
advmod(knowing-17, simply-16)
prepc_since(sorts-14, knowing-17)
nsubj(exist-19, I-18)
ccomp(knowing-17, exist-19)
aux(going-22, is-20)
neg(going-22, not-21)
parataxis(need-2, going-22)
aux(provide-25, to-23)
advmod(provide-25, really-24)
xcomp(going-22, provide-25)
dobj(provide-25, meaning-26)
dobj(provide-25, even-28)
advmod(meaning-26, even-28)
conj_or(meaning-26, even-28)
dep(meaning-26, reason-29)
prep_to(reason-29, search-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP (PRP it)))
    (. !)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
dobj(have-2, it-3)

(ROOT
  (FRAG
    (NP (DT the))
    (NP (JJ ultimate) (NN reward) (. .))
    (. .)))

root(ROOT-0, the-1)
amod(reward-3, ultimate-2)
dep(the-1, reward-3)

(ROOT
  (S
    (VP (TO to)
      (VP (VB return)
        (FRAG
          (PP (TO to)
            (NP (PRP me)))
          (. .))))
    (. .)))

aux(return-2, to-1)
root(ROOT-0, return-2)
dep(return-2, to-3)
pobj(to-3, me-4)

(ROOT
  (S
    (S
      (NP (PRP$ their) (JJ perfect) (NN creator))
      (VP (VBP ahhh)))
    (: ...)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP (DT a) (NN problem)))
      (. .))
    (. .)))

poss(creator-3, their-1)
amod(creator-3, perfect-2)
nsubj(ahhh-4, creator-3)
root(ROOT-0, ahhh-4)
expl('s-8, there-7)
conj_but(ahhh-4, 's-8)
det(problem-10, a-9)
nsubj('s-8, problem-10)

(ROOT
  (S
    (NP (DT any) (NN reward))
    (VP (VBZ means)
      (NP (DT a) (NN punishment)))
    (. .) (. .)))

det(reward-2, any-1)
nsubj(means-3, reward-2)
root(ROOT-0, means-3)
det(punishment-5, a-4)
dobj(means-3, punishment-5)

(ROOT
  (S (CC and)
    (NP (DT that))
    (VP (VBZ does) (RB n't)
      (VP (VB sound)
        (ADJP (RB very) (JJ benevolent))
        (PP (IN of)
          (NP (DT a) (JJ perfect) (NN creator)))))
    (: ...)))

cc(sound-5, and-1)
nsubj(sound-5, that-2)
aux(sound-5, does-3)
neg(sound-5, n't-4)
root(ROOT-0, sound-5)
advmod(benevolent-7, very-6)
acomp(sound-5, benevolent-7)
det(creator-11, a-9)
amod(creator-11, perfect-10)
prep_of(sound-5, creator-11)

(ROOT
  (INTJ (UH .)))


(ROOT
  (FRAG
    (ADJP (JJ hmm) (. .))
    (. .)))

root(ROOT-0, hmm-1)

(ROOT
  (S
    (ADVP (RB well) (RB then))
    (NP (PRP I))
    (VP (MD will)
      (VP
        (VP (VB come)
          (PP (TO to)
            (NP (NN earth))))
        (CC and)
        (VP (VB live)
          (PP (IN as)
            (NP (PRP them)))
          (PP (IN in)
            (NP (JJ earthly) (NN form)))
          (NP (RB yes)))))
    (. !)))

advmod(then-2, well-1)
advmod(come-5, then-2)
nsubj(come-5, I-3)
nsubj(live-9, I-3)
aux(come-5, will-4)
root(ROOT-0, come-5)
prep_to(come-5, earth-7)
conj_and(come-5, live-9)
prep_as(live-9, them-11)
amod(form-14, earthly-13)
prep_in(live-9, form-14)
dobj(live-9, yes-15)

(ROOT
  (S
    (S
      (VP (VBG perfect)
        (NP (NN idea))))
    (: ...)
    (CC and)
    (ADVP (RB even))
    (S
      (VP (VB allow)
        (S
          (NP (PRP myself))
          (VP (TO to)
            (VP (VB die)
              (PP (IN at)
                (NP (PRP$ their) (NNS hands)
                  (S
                    (VP (TO to)
                      (VP (VB show)
                        (SBAR (IN that)
                          (S
                            (NP (PRP I))
                            (VP (VBP have)
                              (VP (VBN suffered)
                                (SBAR (IN as)
                                  (S
                                    (NP (PRP they))
                                    (VP (VBP have))))))))))))))))))
    (. !)))

root(ROOT-0, perfect-1)
dobj(perfect-1, idea-2)
advmod(perfect-1, even-5)
conj_and(perfect-1, even-5)
ccomp(perfect-1, allow-6)
conj_and(perfect-1, allow-6)
nsubj(die-9, myself-7)
aux(die-9, to-8)
xcomp(allow-6, die-9)
poss(hands-12, their-11)
prep_at(die-9, hands-12)
aux(show-14, to-13)
infmod(hands-12, show-14)
complm(suffered-18, that-15)
nsubj(suffered-18, I-16)
aux(suffered-18, have-17)
ccomp(show-14, suffered-18)
mark(have-21, as-19)
nsubj(have-21, they-20)
advcl(suffered-18, have-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ typical) (JJ atheistic) (NN viewpoint))
        (FRAG
          (WHNP (WDT that))
          (SBAR (IN because)
            (S
              (NP (DT the) (NN believer))
              (VP (VBD lacked)
                (NP (DT the) (NN courage)
                  (S
                    (VP (TO to)
                      (VP (VB live)
                        (PP (IN in)
                          (NP (DT a) (NN world)))
                        (PP (IN without)
                          (NP
                            (NP (DT some) (NN form))
                            (PP (IN of)
                              (NP (NN security) (NN blanket))))))))))))
          (. .))))
    (. .)))

nsubj(viewpoint-6, It-1)
cop(viewpoint-6, 's-2)
det(viewpoint-6, a-3)
amod(viewpoint-6, typical-4)
amod(viewpoint-6, atheistic-5)
root(ROOT-0, viewpoint-6)
dep(lacked-11, that-7)
mark(lacked-11, because-8)
det(believer-10, the-9)
nsubj(lacked-11, believer-10)
dep(viewpoint-6, lacked-11)
det(courage-13, the-12)
dobj(lacked-11, courage-13)
aux(live-15, to-14)
infmod(courage-13, live-15)
det(world-18, a-17)
prep_in(live-15, world-18)
det(form-21, some-20)
prep_without(live-15, form-21)
nn(blanket-24, security-23)
prep_of(form-21, blanket-24)

(ROOT
  (S (CC and)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB make)
        (NP (DT the) (NN rule))
        (SBAR (IN that)
          (FRAG
            (PP (JJ due) (TO to)
              (NP (PRP$ my) (JJ own) (NN sacrifice)))
            (: ...)
            (NP
              (NP (DT all))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ necessary)
                      (S
                        (VP (TO to)
                          (VP (VB return)
                            (PP (TO to)
                              (NP (PRP me)))
                            (NP
                              (NP (DT the) (JJ perfect) (NN creator))
                              (SBAR
                                (S
                                  (VP (VBZ is)
                                    (ADVP (RB simply))
                                    (NP (DT a) (JJ heartfelt) (NN belief))))))))))))))
            (. .)))))
    (. .)))

cc(make-4, and-1)
nsubj(make-4, I-2)
aux(make-4, will-3)
root(ROOT-0, make-4)
det(rule-6, the-5)
dobj(make-4, rule-6)
complm(all-14, that-7)
poss(sacrifice-12, my-10)
amod(sacrifice-12, own-11)
prep_due_to(all-14, sacrifice-12)
dep(make-4, all-14)
nsubj(necessary-17, all-14)
cop(necessary-17, is-16)
rcmod(all-14, necessary-17)
aux(return-19, to-18)
xcomp(necessary-17, return-19)
prep_to(return-19, me-21)
det(creator-24, the-22)
amod(creator-24, perfect-23)
dobj(return-19, creator-24)
cop(belief-29, is-25)
advmod(belief-29, simply-26)
det(belief-29, a-27)
amod(belief-29, heartfelt-28)
rcmod(creator-24, belief-29)

(ROOT
  (FRAG (CC and)
    (NP
      (NP (DT an) (NN apology))
      (ADVP (RB !!)))))

dep(apology-3, and-1)
det(apology-3, an-2)
root(ROOT-0, apology-3)
advmod(apology-3, !!-4)

(ROOT
  (FRAG
    (ADJP (JJ ingenious) (. .))
    (. .)))

root(ROOT-0, ingenious-1)

(ROOT
  (S
    (VP (VB and)
      (ADJP (RB perfectly) (JJ simple)))
    (. !)))

root(ROOT-0, and-1)
advmod(simple-3, perfectly-2)
acomp(and-1, simple-3)

(ROOT
  (S (: ...)
    (S
      (NP
        (ADVP (RB in)))
      (VP (VBZ conclusion)))
    (. ...)))

nsubj(conclusion-3, in-2)
root(ROOT-0, conclusion-3)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD 'd)
        (VP (VB say)
          (SBAR
            (SBAR (IN if)
              (S
                (NP (EX there))
                (VP (VBD were)
                  (NP (DT a) (NNP God)))))
            (: ...)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (EX there))
                (VP (VBZ is))))))))
    (: ...)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (CD 1:1) (NN chance))
          (SBAR
            (S
              (NP (PRP he))
              (VP (MD would)
                (VP (VB be)
                  (ADVP (RB precisely))
                  (SBAR (IN as)
                    (S
                      (NP (PRP we))
                      (VP (VBP perceive)
                        (NP (PRP him))))))))))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, 'd-2)
root(ROOT-0, say-3)
mark(were-6, if-4)
expl(were-6, there-5)
dep(say-3, were-6)
det(God-8, a-7)
nsubj(were-6, God-8)
dobj(is-12, which-10)
expl(is-12, there-11)
dep(were-6, is-12)
expl('s-15, there-14)
parataxis(say-3, 's-15)
det(chance-18, a-16)
num(chance-18, 1:1-17)
nsubj('s-15, chance-18)
dobj(be-21, chance-18)
nsubj(be-21, he-19)
aux(be-21, would-20)
rcmod(chance-18, be-21)
advmod(be-21, precisely-22)
mark(perceive-25, as-23)
nsubj(perceive-25, we-24)
advcl(be-21, perceive-25)
dobj(perceive-25, him-26)

(ROOT
  (FRAG
    (SBAR (IN that)
      (S
        (NP (PRP they))
        (VP (VBP invent)
          (NP (NNP God))))
      (. .))
    (. .)))

dep(invent-3, that-1)
nsubj(invent-3, they-2)
root(ROOT-0, invent-3)
dobj(invent-3, God-4)

(ROOT
  (S
    (PP (IN on)
      (NP (DT the) (NN contrary)))
    (NP (PRP I))
    (VP (VBD came)
      (PP (TO to)
        (NP (DT the) (NN conclusion)))
      (PP (IN from)
        (S
          (VP (VBG looking)
            (PP
              (PP (IN at)
                (NP (DT the) (NN evidence)))
              (CC and)
              (PP (IN from)
                (NP (JJ personal) (NNS experiences))))))))
    (. .)))

det(contrary-3, the-2)
prep_on(came-5, contrary-3)
nsubj(came-5, I-4)
root(ROOT-0, came-5)
det(conclusion-8, the-7)
prep_to(came-5, conclusion-8)
prepc_from(came-5, looking-10)
prepc_from(came-5, looking-10')
conj_and(looking-10, looking-10')
det(evidence-13, the-12)
prep_at(looking-10, evidence-13)
amod(experiences-17, personal-16)
prep_from(looking-10', experiences-17)

(ROOT
  (S
    (NP (DT The) (NN realization))
    (VP (VBD was)
      (ADJP (JJ unavoidable)))
    (. .)))

det(realization-2, The-1)
nsubj(unavoidable-4, realization-2)
cop(unavoidable-4, was-3)
root(ROOT-0, unavoidable-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (NP
        (NP (DT a) (JJ happy) (NN person))
        (PP (IN as)
          (NP (DT an) (NN atheist)))))
    (. .) (. .)))

nsubj(person-5, I-1)
cop(person-5, was-2)
det(person-5, a-3)
amod(person-5, happy-4)
root(ROOT-0, person-5)
det(atheist-8, an-7)
prep_as(person-5, atheist-8)

(ROOT
  (S
    (SBAR (IN though)
      (S
        (NP (PRP I))
        (VP (MD ca) (RB n't)
          (VP (VB describe)
            (NP
              (NP (DT the) (NN happiness))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ comes)
                    (PP (IN from)
                      (S
                        (VP (VBG knowing)
                          (NP (DT this)))))))))))))
    (VP (VBZ is) (RB n't)
      (ADVP (RB just))
      (NP (DT a) (JJ cosmic) (NN accident)))
    (. .)))

mark(describe-5, though-1)
nsubj(describe-5, I-2)
aux(describe-5, ca-3)
neg(describe-5, n't-4)
csubj(accident-18, describe-5)
det(happiness-7, the-6)
dobj(describe-5, happiness-7)
nsubj(comes-9, happiness-7)
rcmod(happiness-7, comes-9)
prepc_from(comes-9, knowing-11)
dobj(knowing-11, this-12)
cop(accident-18, is-13)
neg(accident-18, n't-14)
advmod(accident-18, just-15)
det(accident-18, a-16)
amod(accident-18, cosmic-17)
root(ROOT-0, accident-18)

