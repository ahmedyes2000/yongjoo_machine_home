(ROOT
  (S
    (S
      (NP (NNP ID))
      (VP (VBZ makes)
        (NP (DT no) (NN inference))
        (PP (VBN based)
          (PP (IN on)
            (NP (NNS obsevations) (, ,) (NNS data)
              (CC and)
              (NN experience))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB merely))
    (VP
      (VP (VBZ lifts)
        (NP (PRP$ its) (NNS hands))
        (SBAR
          (WHADVP (WRB when))
          (S
            (VP (VBG seeing)
              (NP (DT the) (NNS data))))))
      (CC and)
      (VP (VBZ argues))
      (, ,)
      (SBAR (IN that) (IN because)
        (S
          (NP (PRP we))
          (VP (VBP do) (RB not)
            (VP (VB know)
              (S
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP it))
                    (VP (VBD happened))))
                (, ,)
                (NP (PRP it))
                (VP (MD should)
                  (VP (VB be) (`` ``)
                    (VP (VBN designed))))
                ('' '')))))))
    (. .)))

nsubj(makes-2, ID-1)
ccomp(lifts-15, makes-2)
det(inference-4, no-3)
dobj(makes-2, inference-4)
prepc_based_on(makes-2, on-6)
pobj(makes-2, obsevations-7)
pobj(makes-2, data-9)
conj_and(obsevations-7, data-9)
pobj(makes-2, experience-11)
conj_and(obsevations-7, experience-11)
nsubj(lifts-15, it-13)
nsubj(argues-23, it-13)
advmod(lifts-15, merely-14)
root(ROOT-0, lifts-15)
poss(hands-17, its-16)
dobj(lifts-15, hands-17)
advmod(seeing-19, when-18)
advcl(lifts-15, seeing-19)
det(data-21, the-20)
dobj(seeing-19, data-21)
conj_and(lifts-15, argues-23)
dep(know-30, that-25)
dep(know-30, because-26)
nsubj(know-30, we-27)
aux(know-30, do-28)
neg(know-30, not-29)
ccomp(lifts-15, know-30)
advmod(happened-33, how-31)
nsubj(happened-33, it-32)
dep(designed-39, happened-33)
nsubjpass(designed-39, it-35)
aux(designed-39, should-36)
auxpass(designed-39, be-37)
ccomp(know-30, designed-39)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (DT all))
      (VP (VBP know)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT that))
            (VP (VBD led)
              (NP (NNP Newton))
              (ADVP (RB astray)))))))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ is) (RB not)
      (ADJP
        (ADJP (RB much) (JJR better))
        (PP (IN than)
          (NP (DT that)))))
    (. .)))

nsubj(know-3, We-1)
advmod(know-3, all-2)
ccomp(better-14, know-3)
advmod(led-6, how-4)
nsubj(led-6, that-5)
ccomp(know-3, led-6)
dobj(led-6, Newton-7)
advmod(led-6, astray-8)
nsubj(better-14, ID-10)
cop(better-14, is-11)
neg(better-14, not-12)
advmod(better-14, much-13)
root(ROOT-0, better-14)
prep_than(better-14, that-16)

