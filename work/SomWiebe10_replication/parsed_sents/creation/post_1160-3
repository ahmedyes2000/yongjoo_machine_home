(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (JJ important)
          (S
            (VP (TO to)
              (VP (VB note)
                (SBAR (IN that)
                  (S
                    (NP (NNP Evolution))
                    (VP (MD could)
                      (VP (VB be)
                        (ADJP (JJ wrong)
                          (CC or)
                          (JJ right))
                        (SBAR (IN whether)
                          (S
                            (NP (NNP God))
                            (VP (VBZ exists)))
                          (CC or)
                          (RB not))))))))))
        (PP (IN in)
          (NP (JJ other) (NNS words)))))
    (, ,)
    (NP (DT the) (CD two) (NNS arguments))
    (, ,)
    (SBAR (IN while)
      (FRAG
        (ADJP (JJ related))))
    (, ,)
    (VP (VBP are) (RB not)
      (ADJP (JJ identical)))
    (. .)))

nsubj(important-3, It-1)
cop(important-3, is-2)
ccomp(identical-31, important-3)
aux(note-5, to-4)
xcomp(important-3, note-5)
complm(wrong-10, that-6)
nsubj(wrong-10, Evolution-7)
nsubj(right-12, Evolution-7)
aux(wrong-10, could-8)
cop(wrong-10, be-9)
ccomp(note-5, wrong-10)
ccomp(note-5, right-12)
conj_or(wrong-10, right-12)
complm(exists-15, whether-13)
nsubj(exists-15, God-14)
ccomp(wrong-10, exists-15)
ccomp(wrong-10, not-17)
conj_or(exists-15, not-17)
amod(words-20, other-19)
prep_in(important-3, words-20)
det(arguments-24, the-22)
num(arguments-24, two-23)
nsubj(identical-31, arguments-24)
mark(related-27, while-26)
dep(identical-31, related-27)
cop(identical-31, are-29)
neg(identical-31, not-30)
root(ROOT-0, identical-31)

