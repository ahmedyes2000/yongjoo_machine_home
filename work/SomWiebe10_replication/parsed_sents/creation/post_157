(ROOT
  (S
    (SBAR (IN In) (NN order)
      (S
        (VP (TO to)
          (VP
            (ADVP (RBR better))
            (VB understand)
            (NP (NNP Intelligent) (NNP Design))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ important)
        (S
          (VP (TO to)
            (VP (VB appreciate)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (PRP it))
                  (VP (VBZ abuses)
                    (CC and)
                    (VBZ conflates)
                    (NP (NNS terminologies))))))))))
    (. .)))

mark(understand-5, In-1)
dep(understand-5, order-2)
aux(understand-5, to-3)
advmod(understand-5, better-4)
dep(important-11, understand-5)
nn(Design-7, Intelligent-6)
dobj(understand-5, Design-7)
nsubj(important-11, it-9)
cop(important-11, is-10)
root(ROOT-0, important-11)
aux(appreciate-13, to-12)
xcomp(important-11, appreciate-13)
advmod(abuses-16, how-14)
nsubj(abuses-16, it-15)
nsubj(conflates-18, it-15)
ccomp(appreciate-13, abuses-16)
ccomp(appreciate-13, conflates-18)
conj_and(abuses-16, conflates-18)
dobj(abuses-16, terminologies-19)

(ROOT
  (S
    (PP (IN For)
      (NP (NN instance)))
    (, ,)
    (S
      (NP (NNP ID))
      (VP (VBZ claims)
        (SBAR (IN that)
          (S
            (NP (NN science))
            (VP (VBZ is)
              (ADJP (JJ unable)
                (S
                  (VP (TO to)
                    (VP (VB explain)
                      (NP (`` ``) (NN design) ('' '')))))))))))
    (CC and)
    (S
      (ADVP (RB yet))
      (NP (PRP it))
      (VP (VBZ appeals)
        (PP (TO to)
          (NP (NN science)))
        (S
          (VP (VBG being)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB explain)
                    (NP (NN design))
                    (PP (IN as)
                      (NP (NN evidence)))
                    (SBAR (IN that)
                      (S
                        (NP (NNP ID))
                        (VP (VBZ has)
                          (NP (NN content)))))))))))))
    (. .)))

prep_for(claims-5, instance-2)
nsubj(claims-5, ID-4)
root(ROOT-0, claims-5)
complm(unable-9, that-6)
nsubj(unable-9, science-7)
cop(unable-9, is-8)
ccomp(claims-5, unable-9)
aux(explain-11, to-10)
xcomp(unable-9, explain-11)
dobj(explain-11, design-13)
advmod(appeals-18, yet-16)
nsubj(appeals-18, it-17)
conj_and(claims-5, appeals-18)
prep_to(appeals-18, science-20)
cop(able-22, being-21)
xcomp(appeals-18, able-22)
aux(explain-24, to-23)
xcomp(able-22, explain-24)
dobj(explain-24, design-25)
prep_as(explain-24, evidence-27)
complm(has-30, that-28)
nsubj(has-30, ID-29)
ccomp(explain-24, has-30)
dobj(has-30, content-31)

(ROOT
  (NP
    (NP (DT These) (NNS forms))
    (PP (IN of)
      (NP
        (NP (NN design))
        (ADJP (RB as) (VBN known))))
    (PP (IN as)
      (NP (JJ regular) (NN design)))
    (VP
      (ADVP (IN as))
      (VBN opposed)
      (PP (TO to)
        (NP (JJ rarefied) (NN design))))
    (. .)))

det(forms-2, These-1)
root(ROOT-0, forms-2)
prep_of(forms-2, design-4)
advmod(known-6, as-5)
amod(design-4, known-6)
amod(design-9, regular-8)
prep_as(forms-2, design-9)
advmod(opposed-11, as-10)
partmod(forms-2, opposed-11)
amod(design-14, rarefied-13)
prep_to(opposed-11, design-14)

(ROOT
  (S
    (PP (IN In)
      (NP (DT an) (JJ excellent) (NN paper)))
    (NP (NNP Wilkins)
      (CC et)
      (NNP al))
    (VP (VBP explain)
      (ADVP
        (NP
          (NP (DT the) (NNS differences))
          (PRN (-LRB- -LRB-)
            (NP (CD 1))
            (-RRB- -RRB-))
          (PRN (: --)
            (S
              (NP (PRP he))
              (ADJP (JJ second)))))
        (RB way))
      (SBAR (IN that)
        (S
          (NP (DT the) (NN inconsistency))
          (VP (MD can)
            (VP (VB be)
              (ADJP (VBN resolved)
                (SBAR
                  (S
                    (VP (VBZ is)
                      (SBAR (IN as)
                        (S
                          (NP (PRP we))
                          (VP (VBP have)
                            (ADVP (RB already))
                            (VP (VBN indicated) (, ,)
                              (PP (IN by)
                                (S
                                  (VP (VBG recognizing)
                                    (NP
                                      (NP (DT a) (NN distinction))
                                      (PP (IN between)
                                        (NP (JJ ordinary) (NN design)
                                          (CC and)
                                          (NN rarefied) (NN design))))))))))))))))))))
    (. .)))

det(paper-4, an-2)
amod(paper-4, excellent-3)
prep_in(explain-8, paper-4)
nsubj(explain-8, Wilkins-5)
conj_et(Wilkins-5, al-7)
nsubj(explain-8, al-7)
root(ROOT-0, explain-8)
det(differences-10, the-9)
npadvmod(way-17, differences-10)
appos(differences-10, 1-12)
dep(second-16, he-15)
dep(differences-10, second-16)
advmod(explain-8, way-17)
complm(resolved-23, that-18)
det(inconsistency-20, the-19)
nsubjpass(resolved-23, inconsistency-20)
aux(resolved-23, can-21)
auxpass(resolved-23, be-22)
ccomp(explain-8, resolved-23)
dep(resolved-23, is-24)
mark(indicated-29, as-25)
nsubj(indicated-29, we-26)
aux(indicated-29, have-27)
advmod(indicated-29, already-28)
advcl(is-24, indicated-29)
prepc_by(indicated-29, recognizing-32)
det(distinction-34, a-33)
dobj(recognizing-32, distinction-34)
amod(design-37, ordinary-36)
prep_between(distinction-34, design-37)
nn(design-40, rarefied-39)
prep_between(distinction-34, design-40)
conj_and(design-37, design-40)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (DT those) (NNS events))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP$ our) (NN background) (NN information))
            (VP (VBZ includes)
              (NP
                (NP (NN information))
                (PP (IN about)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (NNS agents)
                        (CC or)
                        (NNS processes))
                      (VP (VBP produce)
                        (NP
                          (NP (NNS events))
                          (PP (IN of)
                            (NP (JJ high) (NN probability))))))))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD would)
      (VP
        (VP (VB assign)
          (NP (DT those))
          (PP (TO to)
            (NP (DT the) (NNP HP) (NN category))))
        (CC and)
        (VP (VB explain)
          (NP (PRP them))
          (PP (IN with)
            (NP (NN reference)))
          (PP (TO to)
            (NP (NN regularity))))))
    (. .)))

det(events-3, those-2)
prep_for(assign-23, events-3)
advmod(includes-8, where-4)
poss(information-7, our-5)
nn(information-7, background-6)
nsubj(includes-8, information-7)
rcmod(events-3, includes-8)
dobj(includes-8, information-9)
advmod(produce-15, how-11)
nsubj(produce-15, agents-12)
conj_or(agents-12, processes-14)
nsubj(produce-15, processes-14)
prepc_about(information-9, produce-15)
dobj(produce-15, events-16)
amod(probability-19, high-18)
prep_of(events-16, probability-19)
nsubj(assign-23, we-21)
nsubj(explain-30, we-21)
aux(assign-23, would-22)
root(ROOT-0, assign-23)
dobj(assign-23, those-24)
det(category-28, the-26)
nn(category-28, HP-27)
prep_to(assign-23, category-28)
conj_and(assign-23, explain-30)
dobj(explain-30, them-31)
prep_with(explain-30, reference-33)
prep_to(explain-30, regularity-35)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (MD would)
        (VP (VB preserve)
          (NP
            (NP (DT a) (NN place))
            (PP (IN for)
              (NP
                (NP (DT a) (NN class))
                (PP (IN of)
                  (NP (JJ rarefied) (NN design))))))
          (PP (IN in)
            (NP (DT the) (NNP Explanatory) (NNP Filter))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP
          (NP (NNP Dembski) (POS 's))
          (JJR earlier) (NNS arguments))
        (PP (IN about)
          (NP
            (NP (NN design))
            (VP (VBG indicating)
              (NP (NN agent) (NN causation))
              (PP (IN because)
                (NP (PRP$ his) (NNP Explanatory) (NNP Filter)))))))
      (VP (VBZ captures)
        (NP
          (NP
            (NP (PRP$ our) (JJ usual) (NNS means))
            (PP (IN of)
              (S
                (VP (VBG recognizing)
                  (SBAR
                    (S
                      (NP (NN design))
                      (VP (MD would)
                        (ADVP (RB only))
                        (VP (VB apply)
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN class))
                              (PP (IN of)
                                (NP (JJ ordinary) (NN design)))))))))))))
          (, ,) (RB not)
          (NP (DT the) (VBN desired) (JJ rarefied) (NN design)))))
    (. .)))

nsubj(preserve-3, This-1)
aux(preserve-3, would-2)
root(ROOT-0, preserve-3)
det(place-5, a-4)
dobj(preserve-3, place-5)
det(class-8, a-7)
prep_for(place-5, class-8)
amod(design-11, rarefied-10)
prep_of(class-8, design-11)
det(Filter-15, the-13)
nn(Filter-15, Explanatory-14)
prep_in(preserve-3, Filter-15)
poss(arguments-21, Dembski-18)
amod(arguments-21, earlier-20)
nsubj(captures-31, arguments-21)
prep_about(arguments-21, design-23)
partmod(design-23, indicating-24)
nn(causation-26, agent-25)
dobj(indicating-24, causation-26)
poss(Filter-30, his-28)
nn(Filter-30, Explanatory-29)
prep_because(indicating-24, Filter-30)
conj_but(preserve-3, captures-31)
poss(means-34, our-32)
amod(means-34, usual-33)
dobj(captures-31, means-34)
prepc_of(means-34, recognizing-36)
nsubj(apply-40, design-37)
aux(apply-40, would-38)
advmod(apply-40, only-39)
ccomp(recognizing-36, apply-40)
det(class-43, the-42)
prep_to(apply-40, class-43)
amod(design-46, ordinary-45)
prep_of(class-43, design-46)
neg(means-34, not-48)
det(design-52, the-49)
amod(design-52, desired-50)
amod(design-52, rarefied-51)
dep(means-34, design-52)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ only)
        (PP (IN by)
          (NP (DT the) (NN attempt))))
      (S
        (VP (TO to)
          (VP
            (ADVP (RB inconsistently))
            (VB treat)
            (NP (NN agent) (NN causation))
            (PP (IN as)
              (NP (DT a) (JJ privileged) (NNS hypothesis))))))
      (SBAR (IN that)
        (S
          (NP (NNP Dembski))
          (VP (MD can)
            (PRN (-LRB- -LRB-)
              (ADVP (RB erroneously))
              (-RRB- -RRB-))
            (VP (VB claim)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (JJ ordinary) (NN design))
                    (CC and)
                    (NP (JJ rarefied) (NN design)))
                  (VP (VBP share)
                    (NP
                      (NP (DT a) (NN node))
                      (PP (IN on)
                        (NP (DT the) (NNP Explanatory) (NNP Filter))))))))))))
    (. .)))

nsubj(only-3, It-1)
xsubj(treat-9, It-1)
cop(only-3, is-2)
root(ROOT-0, only-3)
det(attempt-6, the-5)
prep_by(only-3, attempt-6)
aux(treat-9, to-7)
advmod(treat-9, inconsistently-8)
xcomp(only-3, treat-9)
nn(causation-11, agent-10)
dobj(treat-9, causation-11)
det(hypothesis-15, a-13)
amod(hypothesis-15, privileged-14)
prep_as(treat-9, hypothesis-15)
complm(claim-22, that-16)
nsubj(claim-22, Dembski-17)
aux(claim-22, can-18)
dep(claim-22, erroneously-20)
ccomp(only-3, claim-22)
complm(share-29, that-23)
amod(design-25, ordinary-24)
nsubj(share-29, design-25)
amod(design-28, rarefied-27)
conj_and(design-25, design-28)
nsubj(share-29, design-28)
ccomp(claim-22, share-29)
det(node-31, a-30)
dobj(share-29, node-31)
det(Filter-35, the-33)
nn(Filter-35, Explanatory-34)
prep_on(node-31, Filter-35)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP
      (NP (NNS instances))
      (PP (IN of)
        (NP (JJ rarefied) (NN design)))
      (, ,)
      (SBAR (IN since)
        (S
          (NP (PRP they))
          (VP (MD can) (RB not)
            (ADVP (RB really))
            (VP (VB compete)
              (PP (IN with)
                (NP (DT the) (`` ``)
                  (S
                    (NP (PRP we))
                    (VP (VBP do) (RB n't)
                      (VP (VB know))))
                  ('' '') (NN explanation)))))))
      (, ,))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN assigned)
          (NP
            (NP (DT the) (NN category))
            (PP (IN of)
              (NP (`` ``) (NN design) ('' '')))))))
    (. .)))

amod(words-3, other-2)
prep_in(assigned-29, words-3)
dobj(compete-15, instances-5)
nsubjpass(assigned-29, instances-5)
amod(design-8, rarefied-7)
prep_of(instances-5, design-8)
mark(compete-15, since-10)
nsubj(compete-15, they-11)
aux(compete-15, can-12)
neg(compete-15, not-13)
advmod(compete-15, really-14)
dep(instances-5, compete-15)
det(explanation-24, the-17)
nsubj(know-22, we-19)
aux(know-22, do-20)
neg(know-22, n't-21)
dep(explanation-24, know-22)
prep_with(compete-15, explanation-24)
aux(assigned-29, can-26)
neg(assigned-29, not-27)
auxpass(assigned-29, be-28)
root(ROOT-0, assigned-29)
det(category-31, the-30)
dobj(assigned-29, category-31)
prep_of(category-31, design-34)

(ROOT
  (S
    (NP
      (NP (NNP Notice))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (NNP ID))
          (VP (VBZ manages)
            (PP (IN by)
              (NP (NN bait)
                (CC and)
                (NN switch)))
            (S
              (VP (TO to)
                (VP (VB claim)
                  (NP (DT both))
                  (SBAR (IN that)
                    (S
                      (NP (NNP ID))
                      (VP (VBZ provides)
                        (NP
                          (NP
                            (NP (DT an) (JJ alternative) (NN explanation))
                            (PP (TO to)
                              (NP (JJ scientific) (NNS explanations))))
                          (CONJP (RB as) (RB well) (IN as))
                          (NP (DT that) (NNP ID)))))))))))))
    (VP (VBZ uses)
      (S
        (NP
          (NP (DT the) (JJ same) (JJ scientific) (NNS approaches))
          (PP (IN as)
            (NP (NN science))))
        (VP (TO to)
          (VP (VB make)
            (NP (PRP$ its) (NN case))))))
    (. .)))

nsubj(uses-26, Notice-1)
advmod(manages-4, how-2)
nsubj(manages-4, ID-3)
xsubj(claim-10, ID-3)
dep(Notice-1, manages-4)
prep_by(manages-4, bait-6)
prep_by(manages-4, switch-8)
conj_and(bait-6, switch-8)
aux(claim-10, to-9)
xcomp(manages-4, claim-10)
dobj(claim-10, both-11)
complm(provides-14, that-12)
nsubj(provides-14, ID-13)
ccomp(claim-10, provides-14)
det(explanation-17, an-15)
amod(explanation-17, alternative-16)
dobj(provides-14, explanation-17)
amod(explanations-20, scientific-19)
prep_to(explanation-17, explanations-20)
det(ID-25, that-24)
dobj(provides-14, ID-25)
conj_and(explanation-17, ID-25)
root(ROOT-0, uses-26)
det(approaches-30, the-27)
amod(approaches-30, same-28)
amod(approaches-30, scientific-29)
nsubj(make-34, approaches-30)
prep_as(approaches-30, science-32)
aux(make-34, to-33)
xcomp(uses-26, make-34)
poss(case-36, its-35)
dobj(make-34, case-36)

(ROOT
  (S
    (S
      (ADJP (JJ Needless)
        (S
          (VP (TO to)
            (VP (VB say))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ trivial)
        (S
          (VP (TO to)
            (VP
              (VP (VB point)
                (PRT (RP out))
                (NP (DT the) (JJ inherent) (NN contradiction)))
              (CC and)
              (VP (VB show)
                (SBAR (IN that) (IN because)
                  (S
                    (PP (IN of)
                      (NP (DT this) (NN conflation)))
                    (, ,)
                    (NP (NNP ID))
                    (VP (VBZ attempts)
                      (S
                        (VP (TO to)
                          (VP (VB claim)
                            (SBAR (IN that)
                              (S
                                (NP (PRP it))
                                (VP (VBZ uses)
                                  (NP (JJ similar) (NNS approaches))
                                  (PP (TO to)
                                    (NP (NN science)))
                                  (S
                                    (VP (TO to)
                                      (VP (VB infer)
                                        (NP (NN design))))))))))))))))))))
    (. .)))

ccomp(trivial-7, Needless-1)
aux(say-3, to-2)
xcomp(Needless-1, say-3)
nsubj(trivial-7, it-5)
cop(trivial-7, is-6)
root(ROOT-0, trivial-7)
aux(point-9, to-8)
xcomp(trivial-7, point-9)
prt(point-9, out-10)
det(contradiction-13, the-11)
amod(contradiction-13, inherent-12)
dobj(point-9, contradiction-13)
xcomp(trivial-7, show-15)
conj_and(point-9, show-15)
complm(attempts-23, that-16)
det(conflation-20, this-19)
prep_because_of(attempts-23, conflation-20)
nsubj(attempts-23, ID-22)
xsubj(claim-25, ID-22)
ccomp(show-15, attempts-23)
aux(claim-25, to-24)
xcomp(attempts-23, claim-25)
complm(uses-28, that-26)
nsubj(uses-28, it-27)
xsubj(infer-34, it-27)
ccomp(claim-25, uses-28)
amod(approaches-30, similar-29)
dobj(uses-28, approaches-30)
prep_to(uses-28, science-32)
aux(infer-34, to-33)
xcomp(uses-28, infer-34)
dobj(infer-34, design-35)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR (RB even)
      (S
        (NP
          (NP (DT a) (JJ cursory) (NN scrutiny))
          (PP (IN of)
            (NP (PRP$ their) (NNS claims))))
        (ADVP (RB quickly))
        (VP (VBZ reveals)
          (SBAR
            (SBAR (IN that)
              (S
                (NP (NNP ID))
                (VP (VBZ relies)
                  (PP (RB not)
                    (PP (IN on)
                      (NP
                        (NP (DT a) (JJ scientific) (NN approach))
                        (PP (IN of)
                          (S
                            (VP (VBG providing)
                              (NP (JJ positive) (NNS explanations)
                                (CC and)
                                (NNS hypothesis)))))))
                    (, ,)
                    (CONJP (CC but)
                      (RB rather))
                    (PP (IN on)
                      (NP (NN elimination)))))))
            (CC and)
            (SBAR (IN since)
              (S
                (NP (PRP they))
                (VP (VBP refuse)
                  (S
                    (VP (TO to)
                      (VP (VB present)
                        (NP (DT any) (NN way)
                          (S
                            (VP (TO to)
                              (VP (VB constrain)
                                (NP
                                  (NP (PRP$ their) (NN designer))
                                  (CC and)
                                  (ADVP (RB thus))
                                  (NP (DT the) (NN design)))))))))))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADJP (JJ unable)
        (S
          (VP (TO to)
            (VP (VB compete)
              (PP (IN with)
                (NP (PRP$ our) (NN ignorance))))))))
    (. .)))

advmod(unable-50, However-1)
advmod(reveals-11, even-3)
det(scrutiny-6, a-4)
amod(scrutiny-6, cursory-5)
nsubj(reveals-11, scrutiny-6)
poss(claims-9, their-8)
prep_of(scrutiny-6, claims-9)
advmod(reveals-11, quickly-10)
dep(unable-50, reveals-11)
complm(relies-14, that-12)
nsubj(relies-14, ID-13)
ccomp(reveals-11, relies-14)
neg(relies-14, not-15)
det(approach-19, a-17)
amod(approach-19, scientific-18)
prep_on(relies-14, approach-19)
prepc_of(approach-19, providing-21)
amod(explanations-23, positive-22)
dobj(providing-21, explanations-23)
dobj(providing-21, hypothesis-25)
conj_and(explanations-23, hypothesis-25)
prep_on(relies-14, elimination-30)
conj_negcc(approach-19, elimination-30)
mark(refuse-34, since-32)
nsubj(refuse-34, they-33)
xsubj(present-36, they-33)
ccomp(reveals-11, refuse-34)
conj_and(relies-14, refuse-34)
aux(present-36, to-35)
xcomp(refuse-34, present-36)
det(way-38, any-37)
dobj(present-36, way-38)
aux(constrain-40, to-39)
infmod(way-38, constrain-40)
poss(designer-42, their-41)
dobj(constrain-40, designer-42)
dobj(constrain-40, thus-44)
advmod(designer-42, thus-44)
conj_and(designer-42, thus-44)
det(design-46, the-45)
dobj(constrain-40, design-46)
conj_and(designer-42, design-46)
nsubj(unable-50, they-48)
cop(unable-50, are-49)
root(ROOT-0, unable-50)
aux(compete-52, to-51)
xcomp(unable-50, compete-52)
poss(ignorance-55, our-54)
prep_with(compete-52, ignorance-55)

(ROOT
  (S
    (S
      (ADJP (JJ Needless)
        (S
          (VP (TO to)
            (VP (VB say))))))
    (, ,)
    (NP (NN science))
    (VP (VBZ has)
      (VP (VBN found)
        (SBAR (IN that)
          (S
            (NP
              (NP (JJ such) (JJ simple) (NNS mechanisms))
              (PP (IN as)
                (NP (NN regularity)
                  (CC and)
                  (NN chance))))
            (VP (MD can)
              (ADVP (IN in) (NN fact))
              (VP
                (VP (VB increase)
                  (NP (NN information)
                    (CC and)
                    (NN complexity)))
                (CC and)
                (VP (VB create)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (VP (VBN called)
                          (PP (IN in)
                            (NP (NNP ID) (NN parlance))))))))
                (NP (`` ``)
                  (NP (JJ specified) (NN complexity))
                  ('' '')
                  (PP (IN in)
                    (NP (DT the) (JJ same) (NN manner))))
                (SBAR (IN as)
                  (S
                    (NP (NNP ID))
                    (VP (VBZ claims)
                      (SBAR (IN that)
                        (S (`` ``)
                          (NP (NNS designers))
                          ('' '')
                          (VP (MD can)
                            (VP (VB create)
                              (NP (JJ such) (NN complexity)))))))))))))))
    (. .)))

ccomp(found-7, Needless-1)
aux(say-3, to-2)
xcomp(Needless-1, say-3)
nsubj(found-7, science-5)
aux(found-7, has-6)
root(ROOT-0, found-7)
complm(increase-19, that-8)
amod(mechanisms-11, such-9)
amod(mechanisms-11, simple-10)
nsubj(increase-19, mechanisms-11)
nsubj(create-24, mechanisms-11)
prep_as(mechanisms-11, regularity-13)
prep_as(mechanisms-11, chance-15)
conj_and(regularity-13, chance-15)
aux(increase-19, can-16)
advmod(increase-19, in-17)
dep(in-17, fact-18)
ccomp(found-7, increase-19)
dobj(increase-19, information-20)
dobj(increase-19, complexity-22)
conj_and(information-20, complexity-22)
ccomp(found-7, create-24)
conj_and(increase-19, create-24)
nsubjpass(called-27, what-25)
auxpass(called-27, is-26)
ccomp(create-24, called-27)
nn(parlance-30, ID-29)
prep_in(called-27, parlance-30)
amod(complexity-33, specified-32)
dobj(increase-19, complexity-33)
det(manner-38, the-36)
amod(manner-38, same-37)
prep_in(complexity-33, manner-38)
mark(claims-41, as-39)
nsubj(claims-41, ID-40)
advcl(increase-19, claims-41)
complm(create-47, that-42)
nsubj(create-47, designers-44)
aux(create-47, can-46)
ccomp(claims-41, create-47)
amod(complexity-49, such-48)
dobj(create-47, complexity-49)

(ROOT
  (S
    (ADVP (RB Finally))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ worth))
      (S
        (VP (VBG pointing)
          (PRT (RP out))
          (SBAR (IN that)
            (S
              (NP (NNP ID))
              (VP (VBZ refuses)
                (S
                  (VP (TO to)
                    (VP (VB admit)
                      (SBAR (IN that)
                        (S
                          (NP (EX there))
                          (VP (VBZ exists)
                            (NP
                              (NP (DT a) (NN theory))
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (VP
                                    (VP (VBZ outcompetes)
                                      (NP (PRP$ their) (JJ preferred) (`` ``) (JJ single) (NN designer) ('' '') (NN thesis)))
                                    (, ,)
                                    (CC and)
                                    (VP (VBZ shows)))))))))))))))))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT a) (NNS hypothesis))
            (PP (IN of)
              (NP (`` ``) (JJ multiple) (NNS designers) ('' ''))))
          (VP (VBZ explains)
            (S
              (NP (DT the) (NNS data))
              (ADJP (RB much) (JJR better)))))))
    (. .)))

advmod(worth-5, Finally-1)
nsubj(worth-5, it-3)
cop(worth-5, is-4)
root(ROOT-0, worth-5)
xcomp(worth-5, pointing-6)
prt(pointing-6, out-7)
complm(refuses-10, that-8)
nsubj(refuses-10, ID-9)
xsubj(admit-12, ID-9)
ccomp(pointing-6, refuses-10)
aux(admit-12, to-11)
xcomp(refuses-10, admit-12)
complm(exists-15, that-13)
expl(exists-15, there-14)
ccomp(admit-12, exists-15)
det(theory-17, a-16)
dobj(exists-15, theory-17)
nsubj(exists-15, theory-17)
nsubj(outcompetes-19, theory-17)
nsubj(shows-29, theory-17)
rcmod(theory-17, outcompetes-19)
poss(thesis-26, their-20)
amod(thesis-26, preferred-21)
amod(thesis-26, single-23)
nn(thesis-26, designer-24)
dobj(outcompetes-19, thesis-26)
rcmod(theory-17, shows-29)
conj_and(outcompetes-19, shows-29)
complm(explains-38, that-30)
det(hypothesis-32, a-31)
nsubj(explains-38, hypothesis-32)
amod(designers-36, multiple-35)
prep_of(hypothesis-32, designers-36)
ccomp(worth-5, explains-38)
det(data-40, the-39)
nsubj(better-42, data-40)
advmod(better-42, much-41)
xcomp(explains-38, better-42)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (POS 's))
          (VP (VB look)
            (PP (IN at)
              (NP
                (NP (DT the) (NN argument))
                (PP (IN in)
                  (NP (JJR more) (NN detail)))))))))
    (: :) (: --)
    (S
      (PP (IN In)
        (NP
          (NP (DT all)
            (ADJP (RB irreducibly) (JJ complex))
            (NNS systems))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP
                (NP (DT the) (NN cause))
                (PP (IN of)
                  (NP (DT the) (NN system))))
              (VP (VBZ is)
                (VP (VBN known)
                  (PP (IN by)
                    (NP (NN experience)
                      (CC or)
                      (NN observation)))))))))
      (, ,)
      (NP
        (NP (JJ intelligent) (NN design))
        (CC or)
        (NP (NN engineering)))
      (VP (VBD played)
        (NP
          (NP (DT a) (NN role))
          (PRN (-LRB- -LRB-)
            (PP (IN in))
            (-RRB- -RRB-)))
        (NP
          (NP (DT the) (NN origin))
          (PP (IN of)
            (NP (DT the) (NN system))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(look-3, 's-2)
ccomp(Let-1, look-3)
det(argument-6, the-5)
prep_at(look-3, argument-6)
amod(detail-9, more-8)
prep_in(argument-6, detail-9)
det(systems-16, all-13)
advmod(complex-15, irreducibly-14)
amod(systems-16, complex-15)
prep_in(played-35, systems-16)
rel(known-25, which-18)
det(cause-20, the-19)
nsubjpass(known-25, cause-20)
det(system-23, the-22)
prep_of(cause-20, system-23)
auxpass(known-25, is-24)
rcmod(systems-16, known-25)
agent(known-25, experience-27)
agent(known-25, observation-29)
conj_or(experience-27, observation-29)
amod(design-32, intelligent-31)
nsubj(played-35, design-32)
conj_or(design-32, engineering-34)
nsubj(played-35, engineering-34)
parataxis(Let-1, played-35)
det(role-37, a-36)
iobj(played-35, role-37)
dep(role-37, in-39)
det(origin-42, the-41)
dobj(played-35, origin-42)
det(system-45, the-44)
prep_of(origin-42, system-45)

(ROOT
  (S
    (ADVP (RB Now))
    (VP (VB remember)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (NN complexity))
            (VP (VBZ refers)
              (PP (TO to)
                (NP (PRP$ our) (NN absence)
                  (S
                    (VP (TO to)
                      (VP (VB understand)
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (VP (TO to)
                              (VP (VB explain)
                                (NP (NN something))))))))))))))
        (, ,)
        (CC and)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN statement))
            (ADVP (RB basically))
            (VP (VBZ states)
              (SBAR (IN that) (`` ``)
                (S
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (S
                        (NP (PRP we))
                        (VP (VBP do) (RB not)
                          (VP (VB understand)
                            (NP (NN something)))))
                      ('' '')
                      (CC and)
                      (S
                        (NP (PRP it))
                        (VP (VBZ is) (`` ``)
                          (ADJP (JJ irreducible))
                          ('' '')))))
                  (ADVP (RB then))
                  (NP (PRP it))
                  (VP (MD must)
                    (VP (VB be)
                      (VP (VBN designed)))))))))))
    (. .)))

advmod(remember-2, Now-1)
root(ROOT-0, remember-2)
complm(refers-5, that-3)
nsubj(refers-5, complexity-4)
ccomp(remember-2, refers-5)
poss(absence-8, our-7)
prep_to(refers-5, absence-8)
aux(understand-10, to-9)
infmod(absence-8, understand-10)
advmod(explain-13, how-11)
aux(explain-13, to-12)
ccomp(understand-10, explain-13)
xcomp(understand-10, explain-13)
dobj(explain-13, something-14)
complm(states-21, that-17)
det(statement-19, the-18)
nsubj(states-21, statement-19)
advmod(states-21, basically-20)
ccomp(remember-2, states-21)
conj_and(refers-5, states-21)
complm(designed-41, that-22)
advmod(understand-28, when-24)
nsubj(understand-28, we-25)
aux(understand-28, do-26)
neg(understand-28, not-27)
advcl(designed-41, understand-28)
dobj(understand-28, something-29)
nsubj(irreducible-35, it-32)
cop(irreducible-35, is-33)
conj_and(understand-28, irreducible-35)
advcl(designed-41, irreducible-35)
advmod(designed-41, then-37)
nsubjpass(designed-41, it-38)
aux(designed-41, must-39)
auxpass(designed-41, be-40)
ccomp(states-21, designed-41)

(ROOT
  (S
    (NP
      (NP (DT The) (NN unwillingness)
        (CC and)
        (NN inability))
      (SBAR
        (S
          (VP (TO to)
            (VP (VB address)
              (NP (RB even) (DT the) (JJ simple) (NN alternative)))))))
    (, ,)
    (VP (VBZ shows)
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP (VBZ is)
            (ADJP
              (ADJP (RBR more) (VBN concerned)
                (PP (IN about)
                  (NP (PRP$ its) (JJ religious) (NN position))))
              (PP (IN than)
                (PP (IN about)
                  (NP (NN science)))))))))
    (. .)))

det(unwillingness-2, The-1)
nsubj(shows-12, unwillingness-2)
conj_and(unwillingness-2, inability-4)
nsubj(shows-12, inability-4)
aux(address-6, to-5)
infmod(unwillingness-2, address-6)
advmod(alternative-10, even-7)
det(alternative-10, the-8)
amod(alternative-10, simple-9)
dobj(address-6, alternative-10)
root(ROOT-0, shows-12)
complm(concerned-17, that-13)
nsubj(concerned-17, ID-14)
cop(concerned-17, is-15)
advmod(concerned-17, more-16)
ccomp(shows-12, concerned-17)
poss(position-21, its-19)
amod(position-21, religious-20)
prep_about(concerned-17, position-21)
prep(concerned-17, than-22)
pcomp(than-22, about-23)
prep_about(than-22, science-24)

(ROOT
  (VP (VB Ask)
    (NP (PRP yourself))
    (: :)
    (SBARQ
      (WHNP (WP What))
      (SQ (VBZ has)
        (NP (NNP ID))
        (VP (VBN done)
          (PP (IN in)
            (NP
              (NP (DT a) (JJ non) (JJ trivial) (NN manner))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ increases)
                    (NP (PRP$ our) (JJ scientific) (NN understanding))
                    (PP (IN in)
                      (NP (DT a) (JJ positive) (NN manner))))))))))
      (. ?))))

root(ROOT-0, Ask-1)
dobj(Ask-1, yourself-2)
dobj(done-7, What-4)
aux(done-7, has-5)
nsubj(done-7, ID-6)
parataxis(Ask-1, done-7)
det(manner-12, a-9)
amod(manner-12, non-10)
amod(manner-12, trivial-11)
prep_in(done-7, manner-12)
nsubj(increases-15, manner-12)
rcmod(manner-12, increases-15)
poss(understanding-18, our-16)
amod(understanding-18, scientific-17)
dobj(increases-15, understanding-18)
det(manner-22, a-20)
amod(manner-22, positive-21)
prep_in(increases-15, manner-22)

(ROOT
  (S
    (NP (NN Nothing))
    (, ,)
    (PP (IN in)
      (NP (NN fact)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ has)
      (VP (VBN attempted)
        (S
          (VP (TO to)
            (VP
              (VP (VB downplay)
                (NP (JJ scientific) (NN knowledge)))
              (, ,)
              (VP (VB misrepresent)
                (NP (JJ scientific) (NNS findings)))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB further)
                    (NP (PRP$ its) (NN case))))))))))
    (. .)))

nsubj(attempted-8, Nothing-1)
xsubj(downplay-10, Nothing-1)
prep_in(attempted-8, fact-4)
nsubj(attempted-8, it-6)
xsubj(downplay-10, it-6)
aux(attempted-8, has-7)
root(ROOT-0, attempted-8)
aux(downplay-10, to-9)
xcomp(attempted-8, downplay-10)
amod(knowledge-12, scientific-11)
dobj(downplay-10, knowledge-12)
dep(downplay-10, misrepresent-14)
amod(findings-16, scientific-15)
dobj(misrepresent-14, findings-16)
aux(further-19, to-18)
xcomp(downplay-10, further-19)
poss(case-21, its-20)
dobj(further-19, case-21)

(ROOT
  (NP
    (NP (JJR More))
    (PP (IN on)
      (NP (DT the) (JJ latter) (NN part)))
    (PP (IN in)
      (NP (DT a) (JJ future) (NN contribution)))
    (. .)))

root(ROOT-0, More-1)
det(part-5, the-3)
amod(part-5, latter-4)
prep_on(More-1, part-5)
det(contribution-9, a-7)
amod(contribution-9, future-8)
prep_in(More-1, contribution-9)

(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (VP (VB Wilkins)
      (PRN (, ,)
        (NP (NNP John) (NNP S))
        (, ,))
      (CC and)
      (VB Wesley)
      (NP (NN R) (NN Elsberry)))
    (. .)))

dep(Wilkins-4, 1-2)
root(ROOT-0, Wilkins-4)
nn(S-7, John-6)
dep(Wilkins-4, S-7)
conj_and(Wilkins-4, Wesley-10)
nn(Elsberry-12, R-11)
dobj(Wilkins-4, Elsberry-12)

(ROOT
  (FRAG
    (NP (CD 2001))
    (. .)))

root(ROOT-0, 2001-1)

(ROOT
  (NP
    (NP
      (NP (DT The) (NNS advantages))
      (PP (IN of)
        (NP
          (NP (NN theft))
          (PP (IN over)
            (NP (NNP toil))))))
    (: :)
    (NP
      (NP (DT the) (NN design))
      (UCP
        (ADJP (JJ inference))
        (CC and)
        (VP (VBG arguing)
          (PP (IN from)
            (NP (NN ignorance))))))
    (. .)))

det(advantages-2, The-1)
root(ROOT-0, advantages-2)
prep_of(advantages-2, theft-4)
prep_over(theft-4, toil-6)
det(design-9, the-8)
dep(advantages-2, design-9)
amod(design-9, inference-10)
amod(design-9, arguing-12)
conj_and(inference-10, arguing-12)
prep_from(arguing-12, ignorance-14)

(ROOT
  (NP
    (NP (NNP Biology)
      (CC and)
      (NNP Philosophy))
    (NP
      (NP (CD 16))
      (PRN (-LRB- -LRB-)
        (NP (NNP November))
        (-RRB- -RRB-))
      (NP (CD :711) (CD -724)))
    (. .)))

root(ROOT-0, Biology-1)
conj_and(Biology-1, Philosophy-3)
dep(Biology-1, 16-4)
appos(16-4, November-6)
num(-724-9, :711-8)
dep(16-4, -724-9)

(ROOT
  (S
    (ADVP (RB However))
    (PRN (, ,)
      (S
        (NP (PRP we))
        (VP (VBP do)
          (VP (VB know)
            (SBAR (IN that)
              (S
                (NP
                  (NP (JJ natural) (NNS pathways))
                  (PP (TO to)
                    (NP
                      (ADJP (RB irreducibly) (JJ complex))
                      (NNS systems))))
                (VP (VBP exist) (, ,)
                  (PP (IN of)
                    (NP (NN course)))
                  (, ,)
                  (SBAR (IN since)
                    (S
                      (NP (DT these) (NNS pathways))
                      (VP (VBP are)
                        (ADJP (JJ natural)))))))))))
      (, ,))
    (NP (DT the) (NN complexity))
    (VP (VBZ disappears))
    (. .)))

advmod(disappears-26, However-1)
nsubj(know-5, we-3)
aux(know-5, do-4)
parataxis(disappears-26, know-5)
complm(exist-13, that-6)
amod(pathways-8, natural-7)
nsubj(exist-13, pathways-8)
advmod(complex-11, irreducibly-10)
amod(systems-12, complex-11)
prep_to(pathways-8, systems-12)
ccomp(know-5, exist-13)
prep_of(exist-13, course-16)
mark(natural-22, since-18)
det(pathways-20, these-19)
nsubj(natural-22, pathways-20)
cop(natural-22, are-21)
advcl(exist-13, natural-22)
det(complexity-25, the-24)
nsubj(disappears-26, complexity-25)
root(ROOT-0, disappears-26)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT the) (JJ same))
    (VP (VBZ applies)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBP provide)
            (NP (DT a) (NN design) (NN explanation))))))
    (. .)))

advmod(applies-5, However-1)
det(same-4, the-3)
nsubj(applies-5, same-4)
root(ROOT-0, applies-5)
advmod(provide-8, when-6)
nsubj(provide-8, we-7)
advcl(applies-5, provide-8)
det(explanation-11, a-9)
nn(explanation-11, design-10)
dobj(provide-8, explanation-11)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN order))
        (PP (IN for)
          (NP (DT the) (NN design) (NN inference)))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ reliable)))))))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB show)
                    (SBAR (IN that)
                      (S
                        (NP (EX there))
                        (VP (VBP are)
                          (NP (DT no) (JJ false) (NNS positives)))))))))))))
    (. .)))

prep_in(has-12, order-2)
det(inference-6, the-4)
nn(inference-6, design-5)
prep_for(order-2, inference-6)
aux(reliable-9, to-7)
cop(reliable-9, be-8)
infmod(order-2, reliable-9)
nsubj(has-12, ID-11)
xsubj(able-15, ID-11)
root(ROOT-0, has-12)
aux(able-15, to-13)
cop(able-15, be-14)
xcomp(has-12, able-15)
aux(show-17, to-16)
xcomp(able-15, show-17)
complm(are-20, that-18)
expl(are-20, there-19)
ccomp(show-17, are-20)
det(positives-23, no-21)
amod(positives-23, false-22)
nsubj(are-20, positives-23)

(ROOT
  (S (CC And)
    (ADVP (RB yet))
    (NP (PRP we))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (S
            (ADVP (RB historically))
            (, ,)
            (NP (NNS people))
            (VP (VBP have)
              (ADVP (RB erroneously))
              (VP (VBN assigned)
                (NP (NN design)
                  (CC and)
                  (NNS designers))
                (PP (TO to)
                  (NP
                    (NP (NN thunder)
                      (CC and)
                      (NN lightning))
                    (, ,)
                    (NP (NN disease))
                    (, ,)
                    (NP (JJ natural) (NNS disasters))
                    (, ,)
                    (NP (JJ solar) (NNS eclipses))
                    (CC and)
                    (NP (RB so) (RB on)))))))
          (, ,) (IN so)
          (S
            (NP
              (NP (DT the) (NN claim))
              (SBAR (IN that)
                (S
                  (NP (NN design) (NNS inferences))
                  (VP (VBP are)
                    (ADJP (JJ reliable))))))
            (VP (VBZ is)
              (ADJP (JJ flawed)))))))
    (. .)))

cc(know-4, And-1)
advmod(know-4, yet-2)
nsubj(know-4, we-3)
root(ROOT-0, know-4)
complm(assigned-11, that-5)
advmod(assigned-11, historically-6)
nsubj(assigned-11, people-8)
aux(assigned-11, have-9)
advmod(assigned-11, erroneously-10)
ccomp(know-4, assigned-11)
dobj(assigned-11, design-12)
dobj(assigned-11, designers-14)
conj_and(design-12, designers-14)
prep_to(assigned-11, thunder-16)
prep_to(assigned-11, lightning-18)
conj_and(thunder-16, lightning-18)
prep_to(assigned-11, disease-20)
conj_and(thunder-16, disease-20)
amod(disasters-23, natural-22)
prep_to(assigned-11, disasters-23)
conj_and(thunder-16, disasters-23)
amod(eclipses-26, solar-25)
prep_to(assigned-11, eclipses-26)
conj_and(thunder-16, eclipses-26)
advmod(on-29, so-28)
prep_to(assigned-11, on-29)
conj_and(thunder-16, on-29)
dep(assigned-11, so-31)
det(claim-33, the-32)
nsubj(flawed-40, claim-33)
complm(reliable-38, that-34)
nn(inferences-36, design-35)
nsubj(reliable-38, inferences-36)
cop(reliable-38, are-37)
dep(claim-33, reliable-38)
cop(flawed-40, is-39)
dep(assigned-11, flawed-40)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP
      (NP (DT the) (JJ mere) (NN fact))
      (SBAR (IN that)
        (S
          (NP (NN design) (NNS inferences))
          (VP (VBP are) (RB not)
            (ADJP (JJ reliable))))))
    (, ,)
    (VP (VBZ does) (RB not)
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (NN science))
            (VP (MD can) (RB not)
              (VP (VB use)
                (NP (NN design) (NNS inferences))
                (ADVP (RB reliably))))))))
    (. .)))

advmod(mean-15, Now-1)
det(fact-5, the-3)
amod(fact-5, mere-4)
nsubj(mean-15, fact-5)
complm(reliable-11, that-6)
nn(inferences-8, design-7)
nsubj(reliable-11, inferences-8)
cop(reliable-11, are-9)
neg(reliable-11, not-10)
dep(fact-5, reliable-11)
aux(mean-15, does-13)
neg(mean-15, not-14)
root(ROOT-0, mean-15)
complm(use-20, that-16)
nsubj(use-20, science-17)
aux(use-20, can-18)
neg(use-20, not-19)
ccomp(mean-15, use-20)
nn(inferences-22, design-21)
dobj(use-20, inferences-22)
advmod(use-20, reliably-23)

(ROOT
  (SINV (CC But)
    (PP (IN for)
      (NP (DT that) (NN science)))
    (VP (VBZ assigns))
    (NP
      (NP (DT a)
        (ADJP (JJ plausible) (JJ positive))
        (NNS hypothesis))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (MD can)
            (VP (VB compete)
              (PP (IN with)
                (NP (JJ other) (NNS explanations))))))))
    (. .)))

cc(assigns-5, But-1)
det(science-4, that-3)
prep_for(assigns-5, science-4)
root(ROOT-0, assigns-5)
det(hypothesis-9, a-6)
amod(positive-8, plausible-7)
amod(hypothesis-9, positive-8)
nsubj(assigns-5, hypothesis-9)
nsubj(compete-12, hypothesis-9)
aux(compete-12, can-11)
rcmod(hypothesis-9, compete-12)
amod(explanations-15, other-14)
prep_with(compete-12, explanations-15)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NN instance))
        (PP (IN in)
          (NP (NN criminology)))))
    (NP (PRP we))
    (VP (VBP look)
      (PP (IN at)
        (NP (NNS means) (, ,) (NNS motives)
          (CC and)
          (NNS opportunities)))
      (, ,)
      (PP (VBN combined)
        (PP (IN with)
          (NP
            (NP (NNS eye-witnesses))
            (, ,)
            (NP (NNS alibis))
            (CC and)
            (NP (JJ physical) (NN evidence)))))
      (S
        (VP (TO to)
          (VP (VB generate)
            (NP
              (NP (DT a) (JJ plausible) (NNS hypothesis))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (MD can)
                    (VP (VB establish) (`` ``)
                      (ADVP (IN beyond)
                        (NP (JJ reasonable) (NN doubt)))
                      ('' '')
                      (NP
                        (NP (DT the) (NN guilt))
                        (CC or)
                        (NP (NN innocence))))))))))))
    (. .)))

prep_for(look-6, instance-2)
prep_in(instance-2, criminology-4)
nsubj(look-6, we-5)
xsubj(generate-23, we-5)
root(ROOT-0, look-6)
prep_at(look-6, means-8)
prep_at(look-6, motives-10)
conj_and(means-8, motives-10)
prep_at(look-6, opportunities-12)
conj_and(means-8, opportunities-12)
prep(look-6, combined-14)
pcomp(combined-14, with-15)
prep_with(combined-14, eye-witnesses-16)
prep_with(combined-14, alibis-18)
conj_and(eye-witnesses-16, alibis-18)
amod(evidence-21, physical-20)
prep_with(combined-14, evidence-21)
conj_and(eye-witnesses-16, evidence-21)
aux(generate-23, to-22)
xcomp(look-6, generate-23)
det(hypothesis-26, a-24)
amod(hypothesis-26, plausible-25)
dobj(generate-23, hypothesis-26)
nsubj(establish-29, hypothesis-26)
aux(establish-29, can-28)
rcmod(hypothesis-26, establish-29)
advmod(establish-29, beyond-31)
amod(doubt-33, reasonable-32)
pobj(beyond-31, doubt-33)
det(guilt-36, the-35)
dobj(establish-29, guilt-36)
dobj(establish-29, innocence-38)
conj_or(guilt-36, innocence-38)

