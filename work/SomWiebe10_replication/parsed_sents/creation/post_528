(ROOT
  (S
    (VP
      (ADVP (RB As)
        (PP (IN for)
          (NP
            (NP (JJ scientific) (NN evidence))
            (PP (IN for)
              (NP (NNP ID))))))
      (VB start)
      (PP (IN with)
        (NP (DT the) (JJ genetic) (NN code))))
    (. .)))

amod(evidence-4, scientific-3)
prep_as_for(start-7, evidence-4)
prep_for(evidence-4, ID-6)
root(ROOT-0, start-7)
det(code-11, the-9)
amod(code-11, genetic-10)
prep_with(start-7, code-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NN day))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP observe)
            (NP (NN nature))
            (, ,)
            (S
              (VP (VBG operating)
                (ADVP (RB freely))))
            (, ,)
            (S
              (VP (VBG putting)
                (PRT (RP together))
                (NP (DT a) (NN code))))))))
    (VP (VBZ is)
      (SBAR
        (NP (DT the) (NN day))
        (IN that)
        (S
          (NP (NNP MicroSoft))
          (VP (MD will)
            (VP (VB lay)
              (PRT (RP off))
              (NP (PDT all) (PRP$ their) (NNS programmers))
              (SBAR (IN because)
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (ADJP (JJ unecessary))))))))))
    (. .)))

det(day-2, The-1)
nsubj(is-14, day-2)
nsubj(observe-4, we-3)
rcmod(day-2, observe-4)
dobj(observe-4, nature-5)
partmod(observe-4, operating-7)
xcomp(observe-4, operating-7)
advmod(operating-7, freely-8)
xcomp(observe-4, putting-10)
prt(putting-10, together-11)
det(code-13, a-12)
dobj(putting-10, code-13)
root(ROOT-0, is-14)
det(day-16, the-15)
dep(lay-20, day-16)
dep(lay-20, that-17)
nsubj(lay-20, MicroSoft-18)
aux(lay-20, will-19)
ccomp(is-14, lay-20)
prt(lay-20, off-21)
predet(programmers-24, all-22)
poss(programmers-24, their-23)
dobj(lay-20, programmers-24)
mark(unecessary-28, because-25)
nsubj(unecessary-28, they-26)
cop(unecessary-28, are-27)
advcl(lay-20, unecessary-28)

(ROOT
  (S
    (ADVP (RB Also))
    (NP (NNP ID))
    (VP (VBD was)
      (ADVP (RB NOT))
      (VP (VBN created)
        (S
          (VP (TO to)
            (VP (VB get) ('' '')
              (NP (NNP God) ('' ''))
              (PP (IN into)
                (NP (NN anything))))))))
    (. .)))

advmod(created-5, Also-1)
nsubjpass(created-5, ID-2)
xsubj(get-7, ID-2)
auxpass(created-5, was-3)
neg(created-5, NOT-4)
root(ROOT-0, created-5)
aux(get-7, to-6)
xcomp(created-5, get-7)
dobj(get-7, God-9)
prep_into(get-7, anything-12)

(ROOT
  (S (CC But)
    (VP (VB thatnk)
      (NP (PRP you))
      (PP (IN for)
        (NP
          (NP (NN onbce))
          (VP
            (ADVP (RB again))
            (VBG demonstrating)
            (NP (PRP$ your) (NN dishonesty))))))
    (. .)))

cc(thatnk-2, But-1)
root(ROOT-0, thatnk-2)
dobj(thatnk-2, you-3)
prep_for(thatnk-2, onbce-5)
advmod(demonstrating-7, again-6)
partmod(onbce-5, demonstrating-7)
poss(dishonesty-9, your-8)
dobj(demonstrating-7, dishonesty-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ clear))
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP (VBZ is)
            (NP
              (NP (DT an) (JJ areligious) (NN approach))
              (PP (TO to)
                (NP (NNS origins))))))))
    (. .)))

nsubj(clear-3, It-1)
cop(clear-3, is-2)
root(ROOT-0, clear-3)
complm(approach-9, that-4)
nsubj(approach-9, ID-5)
cop(approach-9, is-6)
det(approach-9, an-7)
amod(approach-9, areligious-8)
ccomp(clear-3, approach-9)
prep_to(approach-9, origins-11)

(ROOT
  (S
    (S
      (NP (NNP PvMPlease))
      (VP (VBP tell)
        (NP (PRP us))
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (VBZ does)
              (S
                (NP (NNP ID))
                (VP (VB explain)
                  (NP (DT the) (JJ genetic) (NN code)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP
          (ADJP (JJ sure)
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD can)
                  (VP (VB explain)
                    (PP (TO to)
                      (NP (PRP us)))
                    (NP
                      (NP (DT the) (JJ various) (NNS hypotheses))
                      (CC and)
                      (NP (DT the) (NN evidence))))))))
          (ADVP (IN as)
            (PP (TO to)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (NN science))
                  (VP (VBZ explains)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(tell-2, PvMPlease-1)
root(ROOT-0, tell-2)
dobj(tell-2, us-3)
advmod(does-5, how-4)
dep(tell-2, does-5)
nsubj(explain-7, ID-6)
ccomp(does-5, explain-7)
det(code-10, the-8)
amod(code-10, genetic-9)
dobj(explain-7, code-10)
nsubj(sure-15, I-13)
cop(sure-15, am-14)
conj_and(tell-2, sure-15)
nsubj(explain-18, you-16)
aux(explain-18, can-17)
dep(sure-15, explain-18)
prep_to(explain-18, us-20)
det(hypotheses-23, the-21)
amod(hypotheses-23, various-22)
dobj(explain-18, hypotheses-23)
det(evidence-26, the-25)
dobj(explain-18, evidence-26)
conj_and(hypotheses-23, evidence-26)
advmod(explains-31, how-29)
nsubj(explains-31, science-30)
prepc_as_to(sure-15, explains-31)
dobj(explains-31, it-32)

(ROOT
  (S
    (NP (NNP ID))
    (VP (VBZ explains)
      (NP (DT the) (JJ genetic) (NN code))
      (NP
        (NP (DT the) (JJ same) (NN way))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP explain)
              (NP (DT a) (NN computer) (NN code)))))))
    (. .)))

nsubj(explains-2, ID-1)
root(ROOT-0, explains-2)
det(code-5, the-3)
amod(code-5, genetic-4)
iobj(explains-2, code-5)
det(way-8, the-6)
amod(way-8, same-7)
dobj(explains-2, way-8)
nsubj(explain-10, we-9)
rcmod(way-8, explain-10)
det(code-13, a-11)
nn(code-13, computer-12)
dobj(explain-10, code-13)

(ROOT
  (S
    (S
      (NP
        (NP (NNP Again))
        (PP (RB instead) (IN of)
          (S
            (VP (VBG asking)
              (NP (NNS questions))
              (NP
                (NP (DT all))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP have)
                      (S
                        (VP (TO to)
                          (VP (VB do))))))))))))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB demonstrate)
              (NP (DT that) (NN nature)))))))
    (, ,)
    (NP (NN operating))
    (ADVP (RB freely))
    (VP (MD can)
      (VP (VB put)
        (PRT (RP together))
        (NP (PDT such) (DT a) (NN code))))
    (. .)))

nsubj(is-11, Again-1)
xsubj(demonstrate-13, Again-1)
prepc_instead_of(Again-1, asking-4)
iobj(asking-4, questions-5)
dobj(asking-4, all-6)
dobj(have-8, all-6)
nsubj(have-8, you-7)
xsubj(do-10, you-7)
rcmod(all-6, have-8)
aux(do-10, to-9)
xcomp(have-8, do-10)
ccomp(put-20, is-11)
aux(demonstrate-13, to-12)
xcomp(is-11, demonstrate-13)
det(nature-15, that-14)
dobj(demonstrate-13, nature-15)
nsubj(put-20, operating-17)
advmod(put-20, freely-18)
aux(put-20, can-19)
root(ROOT-0, put-20)
prt(put-20, together-21)
predet(code-24, such-22)
det(code-24, a-23)
dobj(put-20, code-24)

(ROOT
  (S
    (ADVP (RB However))
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ obvious)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD will)
              (ADVP (RB never))
              (VP
                (ADVP (RB even))
                (VB attempt)
                (NP (PDT such) (DT a) (NN thing))))))))
    (. .)))

advmod(obvious-4, However-1)
nsubj(obvious-4, it-2)
cop(obvious-4, is-3)
root(ROOT-0, obvious-4)
nsubj(attempt-9, you-5)
aux(attempt-9, will-6)
neg(attempt-9, never-7)
advmod(attempt-9, even-8)
dep(obvious-4, attempt-9)
predet(thing-12, such-10)
det(thing-12, a-11)
dobj(attempt-9, thing-12)

(ROOT
  (FRAG
    (NP (NNP PvM))
    (: :)
    (S (CC But)
      (NP (PRP you))
      (VP (VBP have)
        (VP (VBN made)
          (NP (DT a) (JJ clear) (NN case))
          (SBAR (IN that)
            (S
              (NP (NNP ID))
              (VP (VBZ is)
                (NP
                  (NP (DT all))
                  (PP (IN about)
                    (NP
                      (NP (NN ignorance))
                      (, ,)
                      (NP
                        (NP (PRP$ your) (`` ``) (JJ bottom) (NN line) ('' ''))
                        (VP (VBN betrays) ('' '')
                          (NP (PRP you)))))))))))))
    (. .)))

root(ROOT-0, PvM-1)
cc(made-6, But-3)
nsubj(made-6, you-4)
aux(made-6, have-5)
dep(PvM-1, made-6)
det(case-9, a-7)
amod(case-9, clear-8)
dobj(made-6, case-9)
complm(all-13, that-10)
nsubj(all-13, ID-11)
cop(all-13, is-12)
ccomp(made-6, all-13)
prep_about(all-13, ignorance-15)
poss(line-20, your-17)
amod(line-20, bottom-19)
appos(ignorance-15, line-20)
partmod(line-20, betrays-22)
dobj(betrays-22, you-24)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP you))
    (VP (VBP are)
      (ADVP (RB just))
      (VP (VBG lying)))
    (. .)))

advmod(lying-5, Now-1)
nsubj(lying-5, you-2)
aux(lying-5, are-3)
advmod(lying-5, just-4)
root(ROOT-0, lying-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN stated)
        (SBAR (IN that)
          (S
            (NP (NNP ID))
            (VP (VBZ relies)
              (PP (IN on)
                (NP
                  (NP (PRP$ our) (NN experience))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ means)
                        (SBAR
                          (S
                            (NP (PRP it))
                            (VP (VBZ does)
                              (SBAR
                                (S
                                  (NP (NNP NOT))
                                  (VP (VBP rely)
                                    (PP (IN on)
                                      (NP (PRP$ our) (NN ignorance)))))))))))))))))))
    (. .)))

nsubj(stated-3, I-1)
aux(stated-3, have-2)
root(ROOT-0, stated-3)
complm(relies-6, that-4)
nsubj(relies-6, ID-5)
ccomp(stated-3, relies-6)
poss(experience-9, our-8)
prep_on(relies-6, experience-9)
nsubj(means-12, experience-9)
rcmod(experience-9, means-12)
nsubj(does-14, it-13)
ccomp(means-12, does-14)
nsubj(rely-16, NOT-15)
ccomp(does-14, rely-16)
poss(ignorance-19, our-18)
prep_on(rely-16, ignorance-19)

(ROOT
  (S
    (NP (JJ YOUR) (NN position))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBZ counts)
      (PP (IN on)
        (NP (NN ignorance))))
    (. .)))

amod(position-2, YOUR-1)
nsubj(counts-6, position-2)
advmod(counts-6, however-4)
root(ROOT-0, counts-6)
prep_on(counts-6, ignorance-8)

