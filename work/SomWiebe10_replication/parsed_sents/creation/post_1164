(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB really))
      (VP (VBP do) (RB not)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB where))
            (S
              (VP (TO to)
                (VP (VB start)
                  (PP (IN with)
                    (NP (DT this) (NN one)))
                  (, ,)
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN time))
                      (PP (IN of)
                        (S
                          (VP (VBG writing)
                            (NP (DT this) (NN response))
                            (ADVP (RB apparently))))))))))))))
    (NP (NN evolution))
    (VP (VBZ is)
      (ADJP (JJ incorrect)))
    (. .)))

nsubj(know-5, I-1)
advmod(know-5, really-2)
aux(know-5, do-3)
neg(know-5, not-4)
dep(incorrect-23, know-5)
advmod(start-8, where-6)
aux(start-8, to-7)
xcomp(know-5, start-8)
det(one-11, this-10)
prep_with(start-8, one-11)
det(time-15, the-14)
prep_at(start-8, time-15)
prepc_of(time-15, writing-17)
det(response-19, this-18)
dobj(writing-17, response-19)
advmod(writing-17, apparently-20)
nsubj(incorrect-23, evolution-21)
cop(incorrect-23, is-22)
root(ROOT-0, incorrect-23)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP quote) ('' '')))
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN scientist))
        (SBAR
          (S
            (VP (MD can)
              (VP (VB give)
                (NP (JJ strong) (NN evidence))
                (S
                  (VP (TO to)
                    (VP (VB support)
                      (NP (NN evolution)))))))))))
    (. .)))

nsubj(quote-2, I-1)
dep(is-5, quote-2)
expl(is-5, There-4)
root(ROOT-0, is-5)
det(scientist-7, no-6)
nsubj(is-5, scientist-7)
aux(give-9, can-8)
rcmod(scientist-7, give-9)
amod(evidence-11, strong-10)
dobj(give-9, evidence-11)
aux(support-13, to-12)
xcomp(give-9, support-13)
dobj(support-13, evolution-14)

(ROOT
  (S ('' '')
    (NP (DT every) (NN recognized))
    (ADVP (RB scientist)
      (PP (IN in)
        (NP (NN existence))))
    (VP (MD could)
      (VP (VB give)
        (NP (PRP you))
        (NP
          (NP (NN evidence))
          (PP (IN of)
            (NP (NN evolution))))
        (PP (IN by)
          (S
            (VP (VBG looking)
              (PP (IN at)
                (NP (DT any) (VBG living) (NN thing))))))))
    (. .)))

det(recognized-3, every-2)
nsubj(give-8, recognized-3)
advmod(give-8, scientist-4)
prep_in(scientist-4, existence-6)
aux(give-8, could-7)
root(ROOT-0, give-8)
iobj(give-8, you-9)
dobj(give-8, evidence-10)
prep_of(evidence-10, evolution-12)
prepc_by(give-8, looking-14)
det(thing-18, any-16)
amod(thing-18, living-17)
prep_at(looking-14, thing-18)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN evidence))
        (PP (IN for)
          (NP (NN evolution))))
      (VP (VBZ is)
        (ADVP (DT all) (RP around))
        (NP (PRP us))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does)
      (ADVP (RB however))
      (VP (VB require)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB think)
              (PP (IN in)
                (NP
                  (NP (JJ different) (NNS dimensions))
                  (PP (IN of)
                    (NP (NN time)))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD can)
                        (VP (VB be)
                          (ADJP (JJ hard)
                            (S
                              (VP (TO to)
                                (VP (VB imagine))))))))))))))))
    (. .)))

det(evidence-2, The-1)
nsubj(us-8, evidence-2)
prep_for(evidence-2, evolution-4)
cop(us-8, is-5)
dep(around-7, all-6)
advmod(us-8, around-7)
ccomp(require-13, us-8)
nsubj(require-13, it-10)
aux(require-13, does-11)
advmod(require-13, however-12)
root(ROOT-0, require-13)
nsubj(think-16, you-14)
aux(think-16, to-15)
xcomp(require-13, think-16)
amod(dimensions-19, different-18)
prep_in(think-16, dimensions-19)
nsubj(hard-25, dimensions-19)
prep_of(dimensions-19, time-21)
aux(hard-25, can-23)
cop(hard-25, be-24)
rcmod(dimensions-19, hard-25)
aux(imagine-27, to-26)
xcomp(hard-25, imagine-27)

(ROOT
  (SINV
    (VP (VB \/) (-RRB- -RRB-)
      (NP (NNS \/))
      (-RRB- -RRB-))
    (NP
      (NP (NNP FoxFire))
      (SBAR
        (S
          (VP (VBZ makes)
            (NP (DT a) (JJ great) (NN argument))
            (FRAG
              (PP (IN for)
                (NP (NN evolution)
                  (CC and)
                  (JJ natural) (NN selection)))
              (. .))))))))

root(ROOT-0, \/-1)
dobj(\/-1, \/-3)
nsubj(\/-1, FoxFire-5)
rcmod(FoxFire-5, makes-6)
det(argument-9, a-7)
amod(argument-9, great-8)
dobj(makes-6, argument-9)
dep(makes-6, for-10)
nn(selection-14, evolution-11)
conj_and(evolution-11, natural-13)
nn(selection-14, natural-13)
pobj(for-10, selection-14)

(ROOT
  (S
    (S
      (S
        (NP (PRP I))
        (VP (VBP am)
          (NP (DT an) (NN agnostic))))
      (, ,)
      (CC but)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT no) (NN reason))
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD can) (RB not)
                  (VP (VB believe)
                    (PP (IN in)
                      (NP (NN god)
                        (CC and)
                        (NN evolution)))))))))))
    (, ,)
    (NP (DT the) (CD two))
    (VP (VBP are)
      (ADJP (JJ compatible)))
    (. .)))

nsubj(agnostic-4, I-1)
cop(agnostic-4, am-2)
det(agnostic-4, an-3)
ccomp(are-22, agnostic-4)
expl(is-8, there-7)
conj_but(agnostic-4, is-8)
ccomp(are-22, is-8)
det(reason-10, no-9)
nsubj(is-8, reason-10)
dobj(believe-14, reason-10)
nsubj(believe-14, you-11)
aux(believe-14, can-12)
neg(believe-14, not-13)
rcmod(reason-10, believe-14)
prep_in(believe-14, god-16)
prep_in(believe-14, evolution-18)
conj_and(god-16, evolution-18)
det(two-21, the-20)
nsubj(are-22, two-21)
root(ROOT-0, are-22)
acomp(are-22, compatible-23)

(ROOT
  (NP
    (NP (PRP$ Its)
      (QP (RB really) (RB only)))
    (NP
      (NP (DT the) (NNS people))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VB take)
            (NP (NN everything))
            (PP (IN in)
              (ADVP
                (NP (DT the) (NN bible))
                (RB literally)))
            (, ,)
            (NP
              (NP (DT the) (NNS fundamentalists))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (MD can) (RB not)
                    (VP (VB find)
                      (NP
                        (NP (DT a) (NN place))
                        (PP (IN for)
                          (NP (NN god)
                            (CC and)
                            (NN evolution)))))))))))))
    (. .)))

poss(only-3, Its-1)
quantmod(only-3, really-2)
root(ROOT-0, only-3)
det(people-5, the-4)
dep(only-3, people-5)
nsubj(take-7, people-5)
rcmod(people-5, take-7)
dobj(take-7, everything-8)
prep(take-7, in-9)
det(bible-11, the-10)
npadvmod(literally-12, bible-11)
pcomp(in-9, literally-12)
det(fundamentalists-15, the-14)
dobj(take-7, fundamentalists-15)
nsubj(find-19, fundamentalists-15)
aux(find-19, can-17)
neg(find-19, not-18)
rcmod(fundamentalists-15, find-19)
det(place-21, a-20)
dobj(find-19, place-21)
prep_for(place-21, god-23)
prep_for(place-21, evolution-25)
conj_and(god-23, evolution-25)

