(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (MD can)
                (VP (VB find)
                  (S
                    (S
                      (NP (NN something) (NN evolution))
                      (VP (MD can) (RB not)
                        (VP (VB produce))))
                    (, ,)
                    (CC and)
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (ADJP (JJ characteristic)
                          (PP (IN of)
                            (NP (DT a) (JJ designed) (NN system)))))))))))
          (ADVP (RB then))
          (NP (NNP ID) (NNS gains))
          (VP (VBP merit)))))
    (. .)))

cc(agree-3, And-1)
nsubj(agree-3, I-2)
root(ROOT-0, agree-3)
complm(merit-26, that-4)
mark(find-8, if-5)
nsubj(find-8, you-6)
aux(find-8, can-7)
advcl(merit-26, find-8)
nn(evolution-10, something-9)
nsubj(produce-13, evolution-10)
aux(produce-13, can-11)
neg(produce-13, not-12)
dep(find-8, produce-13)
nsubj(characteristic-18, it-16)
cop(characteristic-18, is-17)
dep(find-8, characteristic-18)
conj_and(produce-13, characteristic-18)
det(system-22, a-20)
amod(system-22, designed-21)
prep_of(characteristic-18, system-22)
advmod(merit-26, then-23)
nn(gains-25, ID-24)
nsubj(merit-26, gains-25)
ccomp(agree-3, merit-26)

