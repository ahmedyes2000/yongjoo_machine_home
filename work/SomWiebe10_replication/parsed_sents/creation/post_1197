(ROOT
  (FRAG
    (INTJ (UH Nope))
    (, ,)
    (NP (RB just) (DT the) (NN opposite))
    (. .)))

dep(opposite-5, Nope-1)
advmod(opposite-5, just-3)
det(opposite-5, the-4)
root(ROOT-0, opposite-5)

(ROOT
  (S
    (NP (NNP \/) (NNP \/) (-RRB- -RRB-) (NNP I))
    (VP (MD 'll)
      (VP (VB talk)
        (PP (IN about)
          (NP (DT both) (NNP Quantum) (NN Physics)
            (CC and)
            (NN DNA) (NN research)))))
    (. .)))

nn(I-4, \/-1)
nn(I-4, \/-2)
nsubj(talk-6, I-4)
aux(talk-6, 'll-5)
root(ROOT-0, talk-6)
preconj(Physics-10, both-8)
nn(Physics-10, Quantum-9)
prep_about(talk-6, Physics-10)
nn(research-13, DNA-12)
prep_about(talk-6, research-13)
conj_and(Physics-10, research-13)

(ROOT
  (S
    (S
      (NP (NNP Quantum) (NNS physics))
      (VP (VBZ is)
        (ADJP (DT a) (JJ complicated) (JJ subject))))
    (, ,)
    (NP (PRP I))
    (VP
      (VP (VBP 've)
        (VP (VBN studied)
          (NP (PRP it))
          (PP (IN for)
            (NP (NNS years)))))
      (CC and)
      (ADVP (RB still))
      (VP (VBP do) (RB n't)
        (ADVP (RB completely))
        (VP (VB understand)
          (NP (PRP it)))))
    (. .)))

nn(physics-2, Quantum-1)
nsubj(subject-6, physics-2)
cop(subject-6, is-3)
dep(subject-6, a-4)
amod(subject-6, complicated-5)
ccomp(studied-10, subject-6)
nsubj(studied-10, I-8)
nsubj(understand-19, I-8)
aux(studied-10, 've-9)
root(ROOT-0, studied-10)
dobj(studied-10, it-11)
prep_for(studied-10, years-13)
advmod(studied-10, still-15)
conj_and(studied-10, still-15)
aux(understand-19, do-16)
neg(understand-19, n't-17)
advmod(understand-19, completely-18)
conj_and(studied-10, understand-19)
dobj(understand-19, it-20)

(ROOT
  (S
    (S
      (NP
        (NP (CD One) (NN thing))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP do)
              (VP (VB know))))))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP (NNP Quantum) (NNS physics))
            (VP (VBZ has)
              (NP (RB absolutely) (NN nothing)
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (PP (IN with)
                        (NP (NNP Evolution))))))))))))
    (, ,)
    (NP (NNP Evolution))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB do)
            (PP (IN with)
              (NP (NNP Biology)))))))
    (. .)))

num(thing-2, One-1)
dobj(know-5, thing-2)
nsubj(is-6, thing-2)
nsubj(know-5, I-3)
aux(know-5, do-4)
rcmod(thing-2, know-5)
ccomp(has-19, is-6)
complm(has-10, that-7)
nn(physics-9, Quantum-8)
nsubj(has-10, physics-9)
ccomp(is-6, has-10)
advmod(nothing-12, absolutely-11)
dobj(has-10, nothing-12)
aux(do-14, to-13)
infmod(nothing-12, do-14)
prep_with(do-14, Evolution-16)
nsubj(has-19, Evolution-18)
xsubj(do-21, Evolution-18)
root(ROOT-0, has-19)
aux(do-21, to-20)
xcomp(has-19, do-21)
prep_with(do-21, Biology-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NN physics)))
    (, ,)
    (NP (NNP Quantum) (NNS mechanics))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ physical) (NN science))
        (VP (VBG dealing)
          (PP (IN with)
            (NP
              (NP (DT the) (NN behavior))
              (PP (IN of)
                (NP (NN matter)
                  (CC and)
                  (NN energy)))))
          (PP (IN on)
            (NP
              (NP (DT the) (NN scale))
              (PP (IN of)
                (NP
                  (NP (NNS atoms))
                  (CC and)
                  (NP (JJ subatomic) (NNS particles)))))))))
    (. .)))

prep_in(science-9, physics-2)
nn(mechanics-5, Quantum-4)
nsubj(science-9, mechanics-5)
cop(science-9, is-6)
det(science-9, a-7)
amod(science-9, physical-8)
root(ROOT-0, science-9)
partmod(science-9, dealing-10)
det(behavior-13, the-12)
prep_with(dealing-10, behavior-13)
prep_of(behavior-13, matter-15)
prep_of(behavior-13, energy-17)
conj_and(matter-15, energy-17)
det(scale-20, the-19)
prep_on(dealing-10, scale-20)
prep_of(scale-20, atoms-22)
amod(particles-25, subatomic-24)
prep_of(scale-20, particles-25)
conj_and(atoms-22, particles-25)

(ROOT
  (S
    (SBAR
      (SBAR
        (SINV
          (VP (VB \/) (-RRB- -RRB-)
            (NP (NNS \/))
            (-RRB- -RRB-))
          (NP
            (NP (NN Everything))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ has)
                  (VP (VBN been)
                    (VP (VBN found)
                      (PP (IN in)
                        (NP (DT the) (JJ fossil) (NN record)))))))))))
      (CC and)
      (SBAR (IN in)
        (S
          (NP (NNP DNA))
          (VP (VBZ seems)
            (S
              (VP (TO to)
                (VP (VB confirm)
                  (SBAR (IN that)
                    (S
                      (NP (NN evolution))
                      (VP (VBZ has)
                        (VP (VBN happened)
                          (PP (IN in)
                            (NP (DT the) (NN past))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP
      (VP (VBZ is)
        (VP (VBG happening)
          (ADVP (RB now))))
      (CC and)
      (VP (MD will)
        (VP (VB continue)
          (S
            (VP (TO to)
              (VP (VB happen)
                (PP (IN in)
                  (NP (DT the) (NN future)))))))))
    (. .)))

dep(happening-30, \/-1)
dobj(\/-1, \/-3)
nsubj(\/-1, Everything-5)
nsubjpass(found-9, Everything-5)
aux(found-9, has-7)
auxpass(found-9, been-8)
rcmod(Everything-5, found-9)
det(record-13, the-11)
amod(record-13, fossil-12)
prep_in(found-9, record-13)
mark(seems-17, in-15)
nsubj(seems-17, DNA-16)
xsubj(confirm-19, DNA-16)
conj_and(\/-1, seems-17)
dep(happening-30, seems-17)
aux(confirm-19, to-18)
xcomp(seems-17, confirm-19)
complm(happened-23, that-20)
nsubj(happened-23, evolution-21)
aux(happened-23, has-22)
ccomp(confirm-19, happened-23)
det(past-26, the-25)
prep_in(happened-23, past-26)
nsubj(happening-30, it-28)
nsubj(continue-34, it-28)
xsubj(happen-36, it-28)
aux(happening-30, is-29)
root(ROOT-0, happening-30)
advmod(happening-30, now-31)
aux(continue-34, will-33)
conj_and(happening-30, continue-34)
aux(happen-36, to-35)
xcomp(continue-34, happen-36)
det(future-39, the-38)
prep_in(happen-36, future-39)

