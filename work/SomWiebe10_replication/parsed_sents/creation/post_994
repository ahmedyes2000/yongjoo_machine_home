(ROOT
  (S
    (S
      (INTJ (UH Yes))
      (, ,)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (JJ right))))
      (, ,)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (JJ impossible)
            (S
              (VP (TO to)
                (VP
                  (VP (VB call)
                    (NP (PRP it))
                    (NP (DT a) (NN certainity)))
                  (, ,)
                  (CC but)
                  (VP
                    (PP (IN for)
                      (NP (DT this) (NN reason)))))))))))
    (: :)
    (S
      (NP
        (NP (DT All) (NN evidence))
        (PP (IN for)
          (NP (NN evolution))))
      (VP (VBZ is)
        (VP (VBN proven))))
    (. .)))

dep(right-5, Yes-1)
nsubj(right-5, you-3)
cop(right-5, are-4)
root(ROOT-0, right-5)
nsubj(impossible-9, it-7)
cop(impossible-9, is-8)
dep(right-5, impossible-9)
aux(call-11, to-10)
xcomp(impossible-9, call-11)
iobj(call-11, it-12)
det(certainity-14, a-13)
dobj(call-11, certainity-14)
xcomp(impossible-9, for-17)
conj_but(call-11, for-17)
det(reason-19, this-18)
pobj(for-17, reason-19)
det(evidence-22, All-21)
nsubjpass(proven-26, evidence-22)
prep_for(evidence-22, evolution-24)
auxpass(proven-26, is-25)
parataxis(right-5, proven-26)

(ROOT
  (S
    (NP (DT The) (NNP EVIDENCE))
    (VP (VBZ is)
      (NP (NN fact)))
    (. .)))

det(EVIDENCE-2, The-1)
nsubj(fact-4, EVIDENCE-2)
cop(fact-4, is-3)
root(ROOT-0, fact-4)

(ROOT
  (SINV
    (S
      (NP (DT The) (NN problem))
      (VP (VBZ is)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ impossible)
                (S
                  (VP (TO to)
                    (VP (VB say) ('' '')
                      (NP (DT This) (NN evidence)))))))))))
    (VP (VBZ means))
    (NP
      (NP (NNP X))
      (, ,)
      (NP
        (NP (NNP X) (RB exactly))
        (, ,)
        (CC and)
        (NP (NNP X) (RB only))))
    (. .)))

det(problem-2, The-1)
nsubj(is-3, problem-2)
dep(means-12, is-3)
nsubj(impossible-6, it-4)
cop(impossible-6, is-5)
ccomp(is-3, impossible-6)
aux(say-8, to-7)
xcomp(impossible-6, say-8)
det(evidence-11, This-10)
dobj(say-8, evidence-11)
root(ROOT-0, means-12)
nsubj(means-12, X-13)
appos(X-13, X-15)
advmod(X-15, exactly-16)
appos(X-13, X-19)
conj_and(X-15, X-19)
advmod(X-19, only-20)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ bothers)
      (NP (PRP me))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NNS people))
          (VP (VBP say)
            (S (`` ``)
              (NP (PRP it))
              (VP (VBZ is)
                (ADVP (RB only))
                (NP (DT a) (NN theory) ('' '')
                  (S
                    (VP (TO to)
                      (VP (VB disprove)
                        (NP (PRP it))))))))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP they))
                (VP (VBP are)
                  (VP (VBG confusing)
                    (NP
                      (NP (DT the) (NN word) (`` ``) (NN theory) ('' ''))
                      (PP (IN with) (`` ``)
                        (NP (NN idea))))))))))))
    (. .)))

nsubj(bothers-3, It-2)
root(ROOT-0, bothers-3)
dobj(bothers-3, me-4)
advmod(say-7, when-5)
nsubj(say-7, people-6)
advcl(bothers-3, say-7)
nsubj(theory-13, it-9)
cop(theory-13, is-10)
advmod(theory-13, only-11)
det(theory-13, a-12)
ccomp(say-7, theory-13)
aux(disprove-16, to-15)
infmod(theory-13, disprove-16)
dobj(disprove-16, it-17)
mark(confusing-22, for-19)
nsubj(confusing-22, they-20)
aux(confusing-22, are-21)
advcl(say-7, confusing-22)
det(theory-26, the-23)
nn(theory-26, word-24)
dobj(confusing-22, theory-26)
prep_with(theory-26, idea-30)

(ROOT
  (S ('' '')
    (NP (RB Here))
    (VP (VBZ 's)
      (NP (DT a) (NN tip))
      (: :)
      (FRAG
        (VP (VBP do) (RB n't)
          (VP (VB use)
            (NP
              (NP (DT the) (NNP Big) (NNP Bang) (NNP Theory))
              (PP (IN as)
                (NP (DT an) (NN example))))
            (PP (IN as)
              (NP (DT another) (NN theory)))
            (, ,)
            (SBAR (IN for)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (ADJP (RB widely) (VBN disputed)))))))))
    (. .)))

nsubj(tip-5, Here-2)
cop(tip-5, 's-3)
det(tip-5, a-4)
root(ROOT-0, tip-5)
aux(use-9, do-7)
neg(use-9, n't-8)
dep(tip-5, use-9)
det(Theory-13, the-10)
nn(Theory-13, Big-11)
nn(Theory-13, Bang-12)
dobj(use-9, Theory-13)
det(example-16, an-15)
prep_as(Theory-13, example-16)
det(theory-19, another-18)
prep_as(use-9, theory-19)
mark(disputed-25, for-21)
nsubjpass(disputed-25, it-22)
auxpass(disputed-25, is-23)
advmod(disputed-25, widely-24)
advcl(use-9, disputed-25)

(ROOT
  (S
    (VP (VB Use)
      (NP
        (NP (DT the) (NNP Theory))
        (PP (IN of)
          (NP (NNP Plate) (NNPS Tectonics)))))
    (. .)))

root(ROOT-0, Use-1)
det(Theory-3, the-2)
dobj(Use-1, Theory-3)
nn(Tectonics-6, Plate-5)
prep_of(Theory-3, Tectonics-6)

(ROOT
  (S
    (NP (NN Anyone)
      (S
        (VP (TO to) (RB not)
          (VP (VB believe)
            (PP (IN in)
              (NP (DT that)))))))
    (VP (VBZ is)
      (NP (DT a) (NN lunatic)))
    (. .)))

nsubj(lunatic-9, Anyone-1)
aux(believe-4, to-2)
neg(believe-4, not-3)
infmod(Anyone-1, believe-4)
prep_in(believe-4, that-6)
cop(lunatic-9, is-7)
det(lunatic-9, a-8)
root(ROOT-0, lunatic-9)

