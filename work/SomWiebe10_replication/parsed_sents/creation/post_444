(ROOT
  (S
    (NP
      (NP
        (NP (NNP =))
        (SBAR
          (S
            (VP (SYM =)
              (NP (PRP I))))))
      (VP (VBN asked)
        (S
          (VP (SYM =)
            (NP (NNS =))))))
    (PRN (-LRB- -LRB-)
      (NP (CD 1))
      (-RRB- -RRB-))
    ('' '')
    (VP (VBZ Ask)
      (NP (PRP yourself))
      (NP
        (NP (DT this) (JJ simple) (NN question))
        (: :)
        (SBARQ
          (WHADVP (WRB How))
          (SQ (VBZ does)
            (NP (NNP ID))
            (VP (VB explain)
              (NP (DT the) (JJ bacterial) (NN flagella)))))))
    (. ?)))

nsubj(Ask-11, =-1)
dep(I-3, =-2)
rcmod(=-1, I-3)
partmod(=-1, asked-4)
dep(=-6, =-5)
ccomp(asked-4, =-6)
dep(Ask-11, 1-8)
root(ROOT-0, Ask-11)
iobj(Ask-11, yourself-12)
det(question-15, this-13)
amod(question-15, simple-14)
dobj(Ask-11, question-15)
advmod(explain-20, How-17)
aux(explain-20, does-18)
nsubj(explain-20, ID-19)
dep(question-15, explain-20)
det(flagella-23, the-21)
amod(flagella-23, bacterial-22)
dobj(explain-20, flagella-23)

(ROOT
  (S
    (VP
      (NP
        (NP (-LRB- -LRB-)
          (QP (CD 2))
          (-RRB- -RRB-))
        ('' '')
        (PP
          (PP
            (NP
              (NP (PRP It))
              (VP (VBZ does)
                (S
                  (ADVP (RB n't))
                  (, ,)
                  (NP (PRP it))
                  (ADVP (RB merely))
                  (VP (VBZ calls)
                    (S
                      (NP (PRP it))
                      (`` ``)
                      (ADJP (VBN designed))
                      ('' '')))))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (NP (DT a) (NN placeholder))))))
            (IN for)
            (NP (PRP$ our) (NN ignorance)))
          (CONJP (IN as))
          (PP (TO to)
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (TO to)
                  (VP (VB explain)
                    (NP (DT the) (NN flagella))))))))))
    (. .)))

root(ROOT-0, 2-2)
conj_as(2-2, 2-2')
npadvmod(2-2, It-5)
dep(It-5, does-6)
neg(calls-11, n't-7)
nsubj(calls-11, it-9)
advmod(calls-11, merely-10)
ccomp(does-6, calls-11)
dep(designed-14, it-12)
dep(calls-11, designed-14)
nsubj(placeholder-19, which-16)
cop(placeholder-19, is-17)
det(placeholder-19, a-18)
rcmod(It-5, placeholder-19)
poss(ignorance-22, our-21)
prep_for(2-2, ignorance-22)
advmod(explain-27, how-25)
aux(explain-27, to-26)
prepc_to(2-2', explain-27)
det(flagella-29, the-28)
dobj(explain-27, flagella-29)

(ROOT
  (S
    (NP (DT That) (NN word))
    (VP (VBZ is) (`` ``)
      (NP (NNP Nobel)))
    (. .)))

det(word-2, That-1)
nsubj(Nobel-5, word-2)
cop(Nobel-5, is-3)
root(ROOT-0, Nobel-5)

(ROOT
  (S ('' '')
    (NP (NNP =))
    (VP (VBD =)
      (SBAR
        (SBARQ
          (WHADVP (WRB Why))
          (SQ (MD should)
            (NP (PRP we))
            (VP (VB accept) (`` ``)
              (NP (NN design))
              ('' '')
              (SBAR (IN as)
                (S
                  (NP
                    (NP (DT a) (NN placeholder))
                    (SBAR
                      (WHADVP (WRB when))
                      (S (`` ``)
                        (NP (PRP we))
                        (VP (VBP do) (RB n't)
                          (VP (VB know)))
                        ('' ''))))
                  (VP (VBZ is)
                    (NP (DT a)
                      (ADJP (RB much) (JJR better))
                      (NN one))))))))))
    (. .)))

nsubj(=-3, =-2)
root(ROOT-0, =-3)
advmod(accept-7, Why-4)
aux(accept-7, should-5)
nsubj(accept-7, we-6)
dep(=-3, accept-7)
dobj(accept-7, design-9)
mark(one-25, as-11)
det(placeholder-13, a-12)
tmod(know-19, placeholder-13)
nsubj(one-25, placeholder-13)
advmod(know-19, when-14)
nsubj(know-19, we-16)
aux(know-19, do-17)
neg(know-19, n't-18)
dep(placeholder-13, know-19)
cop(one-25, is-21)
det(one-25, a-22)
advmod(better-24, much-23)
amod(one-25, better-24)
advcl(accept-7, one-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP appreciate)
      (NP
        (NP (DT the) (JJ wishful) (NN thinking))
        (CC and)
        (NP (DT the)
          (ADJP (RB ever) (JJ prevalent))
          (JJ promissory) (NN note))))
    (. .)))

nsubj(appreciate-2, I-1)
root(ROOT-0, appreciate-2)
det(thinking-5, the-3)
amod(thinking-5, wishful-4)
dobj(appreciate-2, thinking-5)
det(note-11, the-7)
advmod(prevalent-9, ever-8)
amod(note-11, prevalent-9)
amod(note-11, promissory-10)
dobj(appreciate-2, note-11)
conj_and(thinking-5, note-11)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (VP
      (VP (VB blame)
        (NP (PRP it))
        (PP (IN on)
          (NP
            (NP (NN lack))
            (PP (IN of)
              (NP (NN funding))))))
      (CC and)
      (VP
        (ADVP (RB yet))
        (VB insist)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADVP (RB also))
              (VP (VBN taught)
                (PP (IN in)
                  (NP
                    (NP (NNS schools))
                    (PP (IN under)
                      (NP
                        (NP (DT the) (NN guise))
                        (PP (IN of)
                          (NP (`` ``)
                            (NP (RB teach) (DT the) (NN controversy))
                            ('' '')
                            (CC or)
                            (`` ``)
                            (NP (JJ academic) (NN freedom))))))))
                (`` `)
                (ADVP (RB So))
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (NNS hypothesis))
                    (VP (VBZ does)
                      (S
                        (NP (NNP ID))
                        (VP (VB propose)
                          (PP (IN in)
                            (NP (DT a) (JJ non)
                              (ADJP (FW ad) (FW hoc))
                              (NN manner))))))))))))))
    (. ?)))

dep(blame-3, Yes-1)
root(ROOT-0, blame-3)
dobj(blame-3, it-4)
prep_on(blame-3, lack-6)
prep_of(lack-6, funding-8)
advmod(insist-11, yet-10)
conj_and(blame-3, insist-11)
nsubjpass(taught-15, it-12)
auxpass(taught-15, is-13)
advmod(taught-15, also-14)
ccomp(insist-11, taught-15)
prep_in(taught-15, schools-17)
det(guise-20, the-19)
prep_under(schools-17, guise-20)
advmod(controversy-25, teach-23)
det(controversy-25, the-24)
prep_of(guise-20, controversy-25)
amod(freedom-30, academic-29)
prep_of(guise-20, freedom-30)
conj_or(controversy-25, freedom-30)
advmod(taught-15, So-32)
dobj(does-35, what-33)
nsubj(does-35, hypothesis-34)
ccomp(taught-15, does-35)
nsubj(propose-37, ID-36)
ccomp(does-35, propose-37)
det(manner-43, a-39)
amod(manner-43, non-40)
nn(hoc-42, ad-41)
amod(manner-43, hoc-42)
prep_in(propose-37, manner-43)

(ROOT
  (FRAG (`` ``)
    (FRAG
      (S
        (NP (PRP we))
        (VP (VBP do) (RB n't)
          (VP (VB know)
            (SBAR (IN so)
              (S
                (NP (NNP let) (POS 's))
                (VP (VBP call)
                  (S
                    (NP (PRP it))
                    (VP (VBN designed))))))))))
    ('' '')
    (SBAR
      (WHADVP (WRB How))
      (S
        (VP (VBZ does)
          (S
            (NP (JJ real) (NN science))
            (VP (VB explain)
              (NP (PRP it)))))))
    (. ?)))

nsubj(know-5, we-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
mark(call-9, so-6)
nsubj(call-9, let-7)
possessive(let-7, 's-8)
advcl(know-5, call-9)
nsubj(designed-11, it-10)
dep(call-9, designed-11)
advmod(does-14, How-13)
dep(know-5, does-14)
amod(science-16, real-15)
nsubj(explain-17, science-16)
ccomp(does-14, explain-17)
dobj(explain-17, it-18)

(ROOT
  (S (`` ``)
    (NP (PRP we))
    (VP (VBP do) (RB n't)
      (VP (VB know) ('' '')
        (S
          (NP (NNP let) (POS 's))
          (VP (VB develop)
            (NP (JJ new) (NNS hypotheses))))
        (SBAR (IN before)
          (S
            (NP (PRP we))
            (VP (VBP jump)
              (S
                (VP (TO to)
                  (VP (VB conclusionTelling)
                    (NP (NN difference))))))))))
    (: ...)))

nsubj(know-5, we-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
nsubj(develop-9, let-7)
possessive(let-7, 's-8)
ccomp(know-5, develop-9)
amod(hypotheses-11, new-10)
dobj(develop-9, hypotheses-11)
mark(jump-14, before-12)
nsubj(jump-14, we-13)
xsubj(conclusionTelling-16, we-13)
advcl(know-5, jump-14)
aux(conclusionTelling-16, to-15)
xcomp(jump-14, conclusionTelling-16)
dobj(conclusionTelling-16, difference-17)

(ROOT
  (S ('' '')
    (NP (NNP =) (NNP =) (NNP =) (NNP Bowman))
    (VP (VBZ responds)
      (S
        (VP (VBG =)
          (NP
            (NP (NNP =) (NNP =)
              (PRN (-LRB- -LRB-)
                (NP (CD 1))
                (-RRB- -RRB-))
              (NNP Answer))
            (: :)
            (S
              (NP (PRP It))
              (VP (VBZ 's)
                (NP
                  (NP (DT a) (NN machine))
                  (PP (IN with)
                    (NP (JJ functional) (NNS components))))))))))
    (. .)))

nn(Bowman-5, =-2)
nn(Bowman-5, =-3)
nn(Bowman-5, =-4)
nsubj(responds-6, Bowman-5)
root(ROOT-0, responds-6)
xcomp(responds-6, =-7)
nn(Answer-13, =-8)
nn(Answer-13, =-9)
appos(Answer-13, 1-11)
dobj(=-7, Answer-13)
nsubj(machine-18, It-15)
cop(machine-18, 's-16)
det(machine-18, a-17)
dep(Answer-13, machine-18)
amod(components-21, functional-20)
prep_with(machine-18, components-21)

(ROOT
  (S
    (NP (DT The)
      (UCP (NN design)
        (CC and)
        (JJ construct))
      (NN process))
    (VP (VBZ is)
      (ADJP
        (ADJP (RB largely) (JJ unknown))
        (, ,)
        (CC but)
        (ADJP (JJ researchable))))
    (. .)))

det(process-5, The-1)
nn(process-5, design-2)
conj_and(design-2, construct-4)
nn(process-5, construct-4)
nsubj(unknown-8, process-5)
nsubj(researchable-11, process-5)
cop(unknown-8, is-6)
advmod(unknown-8, largely-7)
root(ROOT-0, unknown-8)
conj_but(unknown-8, researchable-11)

(ROOT
  (S
    (PP
      (NP (NNP =) (NNP =))
      (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP (PRP it))
    (VP
      (VP (VBZ does) (RB not)
        (VP (VB explain)))
      (CC but)
      (ADVP (RB rather))
      (VP (VBZ describes)))
    (. .)))

nn(=-2, =-1)
dep(explain-10, =-2)
amod(words-5, other-4)
prep_in(explain-10, words-5)
nsubj(explain-10, it-7)
nsubj(describes-13, it-7)
aux(explain-10, does-8)
neg(explain-10, not-9)
root(ROOT-0, explain-10)
advmod(explain-10, rather-12)
conj_but(explain-10, rather-12)
conj_but(explain-10, describes-13)

(ROOT
  (S (CC And)
    (SBAR (RB so) (IN while)
      (S
        (NP (NN science))
        (VP (VBZ has)
          (PP (IN in)
            (NP (NN fact)))
          (VP (VBN researched)
            (NP
              (NP (DT the) (`` ``) (NN design) ('' ''))
              (CC and)
              (NP (NN construction) (NN process)))))))
    (, ,)
    (NP (NNP ID))
    (VP (VBZ has)
      (VP (VBN done)
        (SBAR
          (WHNP (RB exactly) (WP what))
          (S
            (VP (TO to)
              (VP (VB further)
                (NP (PRP$ its) (NN case))))))))
    (. ?)))

cc(done-19, And-1)
advmod(researched-8, so-2)
dep(researched-8, while-3)
nsubj(researched-8, science-4)
aux(researched-8, has-5)
prep_in(researched-8, fact-7)
dep(done-19, researched-8)
det(design-11, the-9)
dobj(researched-8, design-11)
nn(process-15, construction-14)
dobj(researched-8, process-15)
conj_and(design-11, process-15)
nsubj(done-19, ID-17)
aux(done-19, has-18)
root(ROOT-0, done-19)
advmod(what-21, exactly-20)
nsubj(further-23, what-21)
aux(further-23, to-22)
ccomp(done-19, further-23)
xcomp(done-19, further-23)
poss(case-25, its-24)
dobj(further-23, case-25)

(ROOT
  (S
    (PP (IN =)
      (NP
        (NP (NNP =) (NNP Bowman))
        (PRN (-LRB- -LRB-)
          (NP (CD 2))
          (-RRB- -RRB-))))
    (NP (DT The) (`` ``)
      (VP (VBN designed))
      ('' '') (NN designation))
    (VP (VBZ IS)
      (PP
        (PP (IN in)
          (NP
            (NP (NN fact))
            (NP (DT a) (NN placeholder))))
        (, ,)
        (CC but)
        (PP (IN for)
          (NP (JJ further) (NN study)))))
    (. .)))

nn(Bowman-3, =-2)
prep_=(IS-12, Bowman-3)
appos(Bowman-3, 2-5)
det(designation-11, The-7)
dep(designation-11, designed-9)
nsubj(IS-12, designation-11)
nsubj(IS-12', designation-11)
root(ROOT-0, IS-12)
conj_but(IS-12, IS-12')
prep_in(IS-12, fact-14)
det(placeholder-16, a-15)
dep(fact-14, placeholder-16)
amod(study-21, further-20)
prep_for(IS-12', study-21)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ brings)
      (PRT (RP up))
      (NP (DT a) (JJ common) (NN complaint))
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP (VBZ offers)
            (NP (DT no) (JJ testable) (NNS hypotheses))))))
    (. .)))

nsubj(brings-2, This-1)
root(ROOT-0, brings-2)
prt(brings-2, up-3)
det(complaint-6, a-4)
amod(complaint-6, common-5)
dobj(brings-2, complaint-6)
complm(offers-9, that-7)
nsubj(offers-9, ID-8)
ccomp(brings-2, offers-9)
det(hypotheses-12, no-10)
amod(hypotheses-12, testable-11)
dobj(offers-9, hypotheses-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP submit)
      (SBAR (IN that)
        (S
          (NP (DT a) (NNS hypothesis))
          (VP (VBZ comes)
            (ADVP (RB first))
            (: ;)
            (ADVP
              (NP (DT the) (NN testing))
              (RB later))))))
    (. .)))

nsubj(submit-2, I-1)
root(ROOT-0, submit-2)
complm(comes-6, that-3)
det(hypothesis-5, a-4)
nsubj(comes-6, hypothesis-5)
ccomp(submit-2, comes-6)
advmod(comes-6, first-7)
det(testing-10, the-9)
npadvmod(later-11, testing-10)
advmod(comes-6, later-11)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP (DT no) (NN funding))))
        (, ,)
        (CC and)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (NN stigma))
              (VP (VBN attached)))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ has)
      (VP (VBN been)
        (NP
          (NP (JJ little) (VBG confirming) (NN research))
          (VP (VBN done)
            (PP (IN as)
              (ADVP (RB yet)))))))
    (. .)))

mark('s-3, Since-1)
expl('s-3, there-2)
advcl(research-18, 's-3)
det(funding-5, no-4)
nsubj('s-3, funding-5)
expl(is-9, there-8)
conj_and('s-3, is-9)
advcl(research-18, is-9)
nsubj(is-9, stigma-10)
partmod(stigma-10, attached-11)
expl(research-18, there-13)
aux(research-18, has-14)
cop(research-18, been-15)
amod(research-18, little-16)
amod(research-18, confirming-17)
root(ROOT-0, research-18)
partmod(research-18, done-19)
prep(done-19, as-20)
pcomp(as-20, yet-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP predict)
      (SBAR (IN that)
        (S
          (NP (DT that))
          (VP (MD will)
            (VP
              (VP (VB change)
                (PP (IN with)
                  (NP
                    (NP (DT the) (JJ new) (NN crop))
                    (PP (IN of)
                      (NP
                        (NP (NNS scientists))
                        (, ,)
                        (SBAR
                          (WHNP
                            (NP (DT a) (JJ few))
                            (WHPP (IN of)
                              (WHNP (WP whom))))
                          (S
                            (VP (MD may)
                              (VP (VB see)
                                (NP (PRP$ its) (NN relevance))))))
                        (, ,))))))
              (CC and)
              (VP (VB pursue)
                (NP (PRP it))))))))
    (. .)))

nsubj(predict-2, I-1)
root(ROOT-0, predict-2)
complm(change-6, that-3)
nsubj(change-6, that-4)
nsubj(pursue-24, that-4)
aux(change-6, will-5)
ccomp(predict-2, change-6)
det(crop-10, the-8)
amod(crop-10, new-9)
prep_with(change-6, crop-10)
prep_of(crop-10, scientists-12)
prep_of(few-15, scientists-12)
det(few-15, a-14)
nsubj(see-19, few-15)
aux(see-19, may-18)
rcmod(scientists-12, see-19)
poss(relevance-21, its-20)
dobj(see-19, relevance-21)
ccomp(predict-2, pursue-24)
conj_and(change-6, pursue-24)
dobj(pursue-24, it-25)

(ROOT
  (NP
    (NP (DT A) (NN word))
    (PP (TO to)
      (NP
        (NP (DT any))
        (PP (IN out)
          (NP (RB there)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD may)
              (VP (VB fit)
                (NP (DT that) (NN category))))))))
    (. .)))

det(word-2, A-1)
root(ROOT-0, word-2)
prep_to(word-2, any-4)
nsubj(fit-9, any-4)
prep(any-4, out-5)
pobj(out-5, there-6)
aux(fit-9, may-8)
rcmod(any-4, fit-9)
det(category-11, that-10)
dobj(fit-9, category-11)

