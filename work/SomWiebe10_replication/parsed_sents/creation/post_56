(ROOT
  (S
    (SBAR
      (PRN (: --)
        (NP (NNP Highlander))
        (: --))
      (S (`` ``)
        (NP (PRP I))
        (VP (VBP am)
          (ADJP (JJ sure)
            (SBAR (IN that)
              (S
                (NP (NNP Highlander))
                (VP (VBZ is)
                  (ADJP (JJ familiar)
                    (PP (IN with)
                      (NP
                        (NP (DT the) (JJ foundational) (NNS works))
                        (PP (IN of)
                          (NP (NNP Behe)
                            (CC and)
                            (NNP Dembski)))))))))))))
    (, ,)
    (NP (DT both))
    (VP (VBP rely)
      (PP (IN on)
        (S
          (NP
            (NP (DT the) (NN absence))
            (PP (IN of)
              (NP (NN science))))
          (VP (VBG being)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB explain)
                    (NP (DT a) (JJ particular) (NN feature))
                    (PP (TO to)
                      (NP (NN infer) (`` ``) (NN design) ('' '')))))))))))
    (. .)))

dep(sure-7, Highlander-2)
nsubj(sure-7, I-5)
cop(sure-7, am-6)
dep(rely-22, sure-7)
complm(familiar-11, that-8)
nsubj(familiar-11, Highlander-9)
cop(familiar-11, is-10)
ccomp(sure-7, familiar-11)
det(works-15, the-13)
amod(works-15, foundational-14)
prep_with(familiar-11, works-15)
prep_of(works-15, Behe-17)
prep_of(works-15, Dembski-19)
conj_and(Behe-17, Dembski-19)
nsubj(rely-22, both-21)
root(ROOT-0, rely-22)
det(absence-25, the-24)
nsubj(able-29, absence-25)
prep_of(absence-25, science-27)
cop(able-29, being-28)
prepc_on(rely-22, able-29)
aux(explain-31, to-30)
xcomp(able-29, explain-31)
det(feature-34, a-32)
amod(feature-34, particular-33)
dobj(explain-31, feature-34)
nn(design-38, infer-36)
prep_to(explain-31, design-38)

(ROOT
  (NP ('' '')
    (CC Would)
    (NP
      (NP (DT that))
      (SBAR
        (S
          (NP (DT a) (NN citation))
          (VP (VBP exist)
            (S
              (VP (TO to)
                (VP (VB back)
                  (NP (DT this) (NN one))
                  (PRT (RP up)))))))))
    (. !)))

cc(that-3, Would-2)
root(ROOT-0, that-3)
dobj(exist-6, that-3)
det(citation-5, a-4)
nsubj(exist-6, citation-5)
xsubj(back-8, citation-5)
rcmod(that-3, exist-6)
aux(back-8, to-7)
xcomp(exist-6, back-8)
det(one-10, this-9)
dobj(back-8, one-10)
prt(back-8, up-11)

(ROOT
  (S
    (NP (NN http:\/\/www.talkdesign.org\/faqs\/theftovertoil\/theftovertoil.html))
    (VP (VBZ Basically)
      (S
        (NP (DT the) (NNS steps))
        (ADJP (JJ involve1))))
    (. .)))

nsubj(Basically-2, http:\/\/www.talkdesign.org\/faqs\/theftovertoil\/theftovertoil.html-1)
root(ROOT-0, Basically-2)
det(steps-4, the-3)
nsubj(involve1-5, steps-4)
xcomp(Basically-2, involve1-5)

(ROOT
  (S
    (NP (JJ High) (NN probability))
    (RB then)
    (NP (PRP it))
    (VP (VBD was)
      (VP (VBN caused)
        (PP (IN by)
          (NP (DT a) (NN regularity2)))))
    (. .)))

amod(probability-2, High-1)
nsubjpass(caused-6, probability-2)
advmod(caused-6, then-3)
nsubjpass(caused-6, it-4)
auxpass(caused-6, was-5)
root(ROOT-0, caused-6)
det(regularity2-9, a-8)
agent(caused-6, regularity2-9)

(ROOT
  (S
    (NP (NNP Intermediate) (NN probability))
    (RB then)
    (NP (PRP it))
    (VP (VBD was)
      (VP (VBN caused)
        (PP (IN by)
          (NP (CD chance3)))))
    (. .)))

nn(probability-2, Intermediate-1)
nsubjpass(caused-6, probability-2)
advmod(caused-6, then-3)
nsubjpass(caused-6, it-4)
auxpass(caused-6, was-5)
root(ROOT-0, caused-6)
agent(caused-6, chance3-8)

(ROOT
  (NP
    (NP (JJ Small) (NN probability))
    (: :)
    (NP
      (NP (DT either) (NN chance)
        (CC or)
        (NN design))
      (VP (VBG depending)
        (PP (IN on)
          (NP
            (NP (DT the) (NN existence))
            (PP (IN of)
              (NP
                (NP (DT a) (`` ``) (NN specification) ('' ''))
                (SBAR
                  (S
                    (S
                      (NP (NNP Specification))
                      (VP (VBZ is)
                        (NP (DT a)
                          (ADJP (RB somewhat) (JJ tricky))
                          (NN concept))))
                    (CC but)
                    (S
                      (PP (VBG according)
                        (PP (TO to)
                          (NP (NNP Dembski))))
                      (, ,)
                      (NP
                        (NP (NN function))
                        (PP (IN in)
                          (NP (NN biology))))
                      (VP (MD would)
                        (VP (VB be)
                          (NP (DT a) (JJ sufficient) (NN specification)))))))))))))
    (. .)))

amod(probability-2, Small-1)
root(ROOT-0, probability-2)
preconj(chance-5, either-4)
dep(probability-2, chance-5)
dep(probability-2, design-7)
conj_or(chance-5, design-7)
partmod(chance-5, depending-8)
det(existence-11, the-10)
prep_on(depending-8, existence-11)
det(specification-15, a-13)
prep_of(existence-11, specification-15)
nsubj(concept-22, Specification-17)
cop(concept-22, is-18)
det(concept-22, a-19)
advmod(tricky-21, somewhat-20)
amod(concept-22, tricky-21)
rcmod(specification-15, concept-22)
prepc_according_to(specification-35, to-25)
pobj(specification-35, Dembski-26)
nsubj(specification-35, function-28)
prep_in(function-28, biology-30)
aux(specification-35, would-31)
cop(specification-35, be-32)
det(specification-35, a-33)
amod(specification-35, sufficient-34)
rcmod(specification-15, specification-35)
conj_but(concept-22, specification-35)

(ROOT
  (S
    (ADVP (RB Ironically))
    (, ,)
    (NP (NN function))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP (DT the) (NN outcome))
        (PP (IN of)
          (NP
            (NP (DT the) (NN process))
            (UCP
              (PP (IN of)
                (NP (JJ natural) (NN selection)))
              (CC and)
              (ADVP (RB thus))))))
      (SBAR
        (SBAR (IN whether)
          (S
            (NP (DT the) (JJ low) (NN probability) (NN score))
            (VP (VBD was)
              (VP (VBN caused)
                (PP (IN by)
                  (NP (PRP$ our) (NN ignorance)))))))
        (CC or)
        (SBAR (IN because)
          (S
            (PP (IN of)
              (NP (NN design)))
            (VP (VBZ is)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (DT the) (NN design) (NN inference))
                  (VP (VBZ remains)
                    (PP (IN without)
                      (NP (NN content)))
                    (, ,)
                    (PP (IN in)
                      (NP
                        (NP (NN case))
                        (PP (IN of)
                          (NP (JJ rarefied) (NN design)))))))))))))
    (. .)))

advmod(outcome-7, Ironically-1)
nsubj(outcome-7, function-3)
cop(outcome-7, is-4)
advmod(outcome-7, also-5)
det(outcome-7, the-6)
root(ROOT-0, outcome-7)
det(process-10, the-9)
prep_of(outcome-7, process-10)
dep(process-10, of-11)
amod(selection-13, natural-12)
pobj(of-11, selection-13)
dep(process-10, thus-15)
conj_and(of-11, thus-15)
complm(caused-22, whether-16)
det(score-20, the-17)
amod(score-20, low-18)
nn(score-20, probability-19)
nsubjpass(caused-22, score-20)
nsubj(is-30, score-20)
auxpass(caused-22, was-21)
ccomp(outcome-7, caused-22)
poss(ignorance-25, our-24)
agent(caused-22, ignorance-25)
mark(is-30, because-27)
prep_of(is-30, design-29)
ccomp(outcome-7, is-30)
conj_or(caused-22, is-30)
advmod(remains-35, why-31)
det(inference-34, the-32)
nn(inference-34, design-33)
nsubj(remains-35, inference-34)
advcl(is-30, remains-35)
prep_without(remains-35, content-37)
amod(design-43, rarefied-42)
prep_in_case_of(remains-35, design-43)

(ROOT
  (NP
    (NP (JJ Rarefied) (NN design))
    (: :)
    (S
      (NP (NNP Rarefied) (NN design) (NNS inferences))
      (VP (VB tell)
        (NP (PRP us))
        (NP
          (NP (NN nothing))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (VP (VB be)
                  (ADJP (RB inductively) (JJ generalized)))))))))
    (. .)))

amod(design-2, Rarefied-1)
root(ROOT-0, design-2)
nn(inferences-6, Rarefied-4)
nn(inferences-6, design-5)
nsubj(tell-7, inferences-6)
dep(design-2, tell-7)
iobj(tell-7, us-8)
dobj(tell-7, nothing-9)
nsubj(generalized-14, nothing-9)
aux(generalized-14, can-11)
cop(generalized-14, be-12)
advmod(generalized-14, inductively-13)
rcmod(nothing-9, generalized-14)

(ROOT
  (S
    (S
      (NP (DT The) (NNS authors))
      (VP (VBP observe) ('' '')))
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ in-principle) (NN difference))
        (PP (IN between)
          (NP
            (NP (JJ rarefied)
              (CC and)
              (JJ ordinary) (NN design) (NNS inferences))
            (, ,)
            (VP (VBN based)
              (PP (IN on)
                (NP (DT the) (NN background) (NN knowledge))))
            (ADJP (JJ available)
              (PP (IN about)
                (NP
                  (ADJP
                    (ADJP (JJ ordinary))
                    (, ,)
                    (CC but)
                    (ADJP (RB not) (JJ rarefied))
                    (, ,))
                  (NN design) (NNS agencies))))))))
    (. .)))

det(authors-2, The-1)
nsubj(observe-3, authors-2)
dep(is-6, observe-3)
expl(is-6, There-5)
root(ROOT-0, is-6)
det(difference-9, an-7)
amod(difference-9, in-principle-8)
nsubj(is-6, difference-9)
amod(inferences-15, rarefied-11)
conj_and(rarefied-11, ordinary-13)
amod(inferences-15, ordinary-13)
nn(inferences-15, design-14)
prep_between(difference-9, inferences-15)
partmod(inferences-15, based-17)
det(knowledge-21, the-19)
nn(knowledge-21, background-20)
prep_on(based-17, knowledge-21)
amod(inferences-15, available-22)
amod(agencies-31, ordinary-24)
neg(rarefied-28, not-27)
conj_but(ordinary-24, rarefied-28)
amod(agencies-31, rarefied-28)
nn(agencies-31, design-30)
prep_about(available-22, agencies-31)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT an) (JJ important) (NN observation))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ helps)
            (SBAR
              (S
                (NP (PRP us))
                (VP (VBP understand)
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (JJ historical) (NNS sciences))
                      (VP (MD can)
                        (ADVP (RB accurately))
                        (VP (VB apply) (`` ``)
                          (NP (NN design) (NNS inferences))
                          ('' '')
                          (SBAR (IN while)
                            (S
                              (NP (NNP ID))
                              (VP (VBZ remains)
                                (ADVP (RB scientifically)
                                  (PP (IN without)
                                    (NP (NN content))))))))))))))))))
    (. .)))

nsubj(observation-6, This-2)
cop(observation-6, is-3)
det(observation-6, an-4)
amod(observation-6, important-5)
root(ROOT-0, observation-6)
mark(helps-9, because-7)
nsubj(helps-9, it-8)
advcl(observation-6, helps-9)
nsubj(understand-11, us-10)
ccomp(helps-9, understand-11)
advmod(apply-17, why-12)
amod(sciences-14, historical-13)
nsubj(apply-17, sciences-14)
aux(apply-17, can-15)
advmod(apply-17, accurately-16)
advcl(understand-11, apply-17)
nn(inferences-20, design-19)
dobj(apply-17, inferences-20)
mark(remains-24, while-22)
nsubj(remains-24, ID-23)
advcl(apply-17, remains-24)
advmod(remains-24, scientifically-25)
prep_without(scientifically-25, content-27)

(ROOT
  (S
    (INTJ (RB Sure))
    (, ,)
    (ADVP (RB always))
    (VP (VBZ ready)
      (S
        (VP (TO to)
          (VP (VB please)
            (NP (DT the) (NN audience))))))
    (. .)))

dep(ready-4, Sure-1)
advmod(ready-4, always-3)
root(ROOT-0, ready-4)
aux(please-6, to-5)
xcomp(ready-4, please-6)
det(audience-8, the-7)
dobj(please-6, audience-8)

(ROOT
  (NP (NNP William) (NNP Demsbki) (. .)))

nn(Demsbki-2, William-1)
root(ROOT-0, Demsbki-2)

(ROOT
  (S ('' '')
    (S
      (NP (DT The) (NNP Design) (NNP Inference))
      (: :)
      (S
        (VP (VBG Eliminating)
          (NP (NN Chance))
          (PP (IN through)
            (NP
              (NP (NNP Small) (NNP Probabilities))
              ('' '') (, ,)
              (NP
                (NP (NNP Cambridge) (NNPS Studies))
                (PP (IN in)
                  (NP (NNP Probability) (, ,) (NNP Induction)
                    (CC and)
                    (NNP Decision) (NNP Theory))))))))
      (, ,)
      (VP (VBZ 1998William)
        (NP
          (NP (NNP Dembski))
          (, ,) (`` ``)
          (NP (DT No) (NNP Free) (NNP Lunch)))))
    (: :)
    (S
      (SBAR
        (WHADVP (WRB Why))
        (S
          (NP (NNP Specified) (NNP Complexity))
          (VP (MD Can) (RB not)
            (VP (VB Be)
              (VP (VBN Purchased)
                (PP (IN without)
                  (NP (NNP Intelligence) ('' ''))))))))
      (, ,)
      (NP (NNP Rowman)
        (CC &)
        (NNP Littlefield) (NNPS Publishers) (, ,) (NNP Inc.) (, ,) (JJ 2001Irreducible) (NN Complexity))
      (VP (VBZ is)
        (NP
          (NP (DT an) (NN example))
          (PP (IN of)
            (NP
              (NP
                (NP (NNP Behe) (POS 's))
                (NN formulation))
              (PP (IN of) (`` ``)
                (NP
                  (NP (NN ignorance))
                  (SBAR
                    (S
                      (VP (MD should)
                        (VP (VB be)
                          (VP (VBN called)
                            (NP (NN design))))))))
                ('' '')))))))
    (. .)))

det(Inference-4, The-2)
nn(Inference-4, Design-3)
nsubj(1998William-23, Inference-4)
parataxis(1998William-23, Eliminating-6)
dobj(Eliminating-6, Chance-7)
nn(Probabilities-10, Small-9)
prep_through(Eliminating-6, Probabilities-10)
nn(Studies-14, Cambridge-13)
appos(Probabilities-10, Studies-14)
nn(Theory-21, Probability-16)
conj_and(Probability-16, Induction-18)
nn(Theory-21, Induction-18)
conj_and(Probability-16, Decision-20)
nn(Theory-21, Decision-20)
prep_in(Studies-14, Theory-21)
root(ROOT-0, 1998William-23)
dobj(1998William-23, Dembski-24)
det(Lunch-29, No-27)
nn(Lunch-29, Free-28)
dep(Dembski-24, Lunch-29)
advmod(Purchased-37, Why-31)
nn(Complexity-33, Specified-32)
nsubjpass(Purchased-37, Complexity-33)
aux(Purchased-37, Can-34)
neg(Purchased-37, not-35)
auxpass(Purchased-37, Be-36)
advcl(example-53, Purchased-37)
prep_without(Purchased-37, Intelligence-39)
nn(Complexity-50, Rowman-42)
conj_and(Rowman-42, Littlefield-44)
nn(Complexity-50, Littlefield-44)
nn(Complexity-50, Publishers-45)
dep(Complexity-50, Inc.-47)
amod(Complexity-50, 2001Irreducible-49)
nsubj(example-53, Complexity-50)
cop(example-53, is-51)
det(example-53, an-52)
parataxis(1998William-23, example-53)
poss(formulation-57, Behe-55)
prep_of(example-53, formulation-57)
prep_of(formulation-57, ignorance-60)
aux(called-63, should-61)
auxpass(called-63, be-62)
rcmod(ignorance-60, called-63)
dobj(called-63, design-64)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN case))
        (PP (IN of)
          (NP (NNP Behe)))))
    (, ,)
    (NP (PRP$ his) (JJS biggest) (NN mistake))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP he))
          (VP (VBZ limits)
            (NP (PRP himself))
            (PP (TO to)
              (NP
                (NP (RB only) (JJ Darwinian) (NNS processes))
                (CC and)
                (NP
                  (NP (DT the) (NN concept))
                  (PP (IN of)
                    (NP (JJ original) (NN function))))))))))
    (. .)))

prep_in_case_of(is-9, Behe-4)
poss(mistake-8, his-6)
amod(mistake-8, biggest-7)
nsubj(is-9, mistake-8)
root(ROOT-0, is-9)
complm(limits-12, that-10)
nsubj(limits-12, he-11)
ccomp(is-9, limits-12)
dobj(limits-12, himself-13)
advmod(processes-17, only-15)
amod(processes-17, Darwinian-16)
prep_to(limits-12, processes-17)
det(concept-20, the-19)
prep_to(limits-12, concept-20)
conj_and(processes-17, concept-20)
amod(function-23, original-22)
prep_of(concept-20, function-23)

(ROOT
  (S (RB So)
    (VP (VB let)
      (S
        (NP (PRP me))
        (VP (VB explain)
          (SBAR
            (WHNP (WP what))
            (S
              (S
                (NP (DT the) (NN design) (NN inference))
                (VP (VBZ is)
                  (NP
                    (NP (DT all))
                    (PP (IN about) (: :)
                      (NP
                        (NP (DT The) (NNP Explanatory) (NNP FilterA) (JJ good) (NN overview))
                        (PP (IN of)
                          (NP (DT the) (NN filter))))))))
              (CC and)
              (S
                (NP (PRP$ its) (NNS shortcomings))
                (VP (MD can)
                  (VP (VB be)
                    (VP (VBN found)
                      (PP (IN in)
                        (NP
                          (NP (NNP Wilkins))
                          (, ,)
                          (NP (NNP John) (NNP S))
                          (, ,)
                          (CC and)
                          (NP (NNP Wesley) (NNP R) (NNP Elsberry)))))))))))))
    (. .)))

advmod(let-2, So-1)
root(ROOT-0, let-2)
nsubj(explain-4, me-3)
ccomp(let-2, explain-4)
dep(all-10, what-5)
det(inference-8, the-6)
nn(inference-8, design-7)
nsubj(all-10, inference-8)
cop(all-10, is-9)
dep(explain-4, all-10)
det(overview-17, The-13)
nn(overview-17, Explanatory-14)
nn(overview-17, FilterA-15)
amod(overview-17, good-16)
prep_about(all-10, overview-17)
det(filter-20, the-19)
prep_of(overview-17, filter-20)
poss(shortcomings-23, its-22)
nsubjpass(found-26, shortcomings-23)
aux(found-26, can-24)
auxpass(found-26, be-25)
dep(explain-4, found-26)
conj_and(all-10, found-26)
prep_in(found-26, Wilkins-28)
nn(S-31, John-30)
prep_in(found-26, S-31)
conj_and(Wilkins-28, S-31)
nn(Elsberry-36, Wesley-34)
nn(Elsberry-36, R-35)
prep_in(found-26, Elsberry-36)
conj_and(Wilkins-28, Elsberry-36)

(ROOT
  (FRAG
    (NP (CD 2001))
    (. .)))

root(ROOT-0, 2001-1)

(ROOT
  (NP
    (NP
      (NP (DT The) (NNS advantages))
      (PP (IN of)
        (NP
          (NP (NN theft))
          (PP (IN over)
            (NP (NNP toil))))))
    (: :)
    (NP
      (NP (DT the) (NN design))
      (UCP
        (ADJP (JJ inference))
        (CC and)
        (VP (VBG arguing)
          (PP (IN from)
            (NP (NN ignorance))))))
    (. .)))

det(advantages-2, The-1)
root(ROOT-0, advantages-2)
prep_of(advantages-2, theft-4)
prep_over(theft-4, toil-6)
det(design-9, the-8)
dep(advantages-2, design-9)
amod(design-9, inference-10)
amod(design-9, arguing-12)
conj_and(inference-10, arguing-12)
prep_from(arguing-12, ignorance-14)

(ROOT
  (NP
    (NP (NNP Biology)
      (CC and)
      (NNP Philosophy))
    (NP
      (NP (CD 16))
      (PRN (-LRB- -LRB-)
        (NP (NNP November))
        (-RRB- -RRB-))
      (NP (CD :711) (CD -724)))
    (. .)))

root(ROOT-0, Biology-1)
conj_and(Biology-1, Philosophy-3)
dep(Biology-1, 16-4)
appos(16-4, November-6)
num(-724-9, :711-8)
dep(16-4, -724-9)

