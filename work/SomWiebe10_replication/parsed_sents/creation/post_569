(ROOT
  (S (`` ``)
    (VP (VB Pretty)
      (ADVP (RB much))
      (, ,)
      (ADVP (RB especially))
      (SBAR (IN if)
        (S
          (NP
            (NP (NN anyone))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ has)
                  (ADVP (RB publicly))
                  (VP (VBN known)
                    (NP (JJ pro-ID) (NNS views))
                    (ADVP (RB prior)
                      (PP (TO to)
                        (S
                          (VP (VBG getting)
                            (NP (NN tenure)))))))))))
          (VP (VBZ is)
            (ADJP (VBN bound)
              (S
                (VP (TO to)
                  (VP (RB not) (VB get)
                    (NP (PRP it))))))))))
    (. .)))

root(ROOT-0, Pretty-2)
advmod(Pretty-2, much-3)
advmod(Pretty-2, especially-5)
mark(bound-19, if-6)
nsubj(known-11, anyone-7)
nsubjpass(bound-19, anyone-7)
aux(known-11, has-9)
advmod(known-11, publicly-10)
rcmod(anyone-7, known-11)
amod(views-13, pro-ID-12)
dobj(known-11, views-13)
prepc_prior_to(known-11, getting-16)
dobj(getting-16, tenure-17)
auxpass(bound-19, is-18)
advcl(Pretty-2, bound-19)
aux(get-22, to-20)
neg(get-22, not-21)
xcomp(bound-19, get-22)
dobj(get-22, it-23)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (NP
            (NP (DT the) (NN institution))
            (PP (IN in)
              (NP (NN question))))
          (VP (VBZ does) (RB not)
            (VP (VB feel)
              (NP (DT that))))))
      (NP (NNP ID))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ valid) (NN line))
          (PP (IN of)
            (NP (NN inquiry))))))
    (RB then)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (PRP it))
              (VP (MD would)
                (VP (VB give)
                  (NP (NN tenure))
                  (PP (TO to)
                    (NP
                      (NP (NNS people))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBP subscribe)
                            (PP (TO to)
                              (NP (DT the) (NN theory)))))))))))))))
    (. .)))

mark(feel-9, If-2)
det(institution-4, the-3)
nsubj(feel-9, institution-4)
prep_in(institution-4, question-6)
aux(feel-9, does-7)
neg(feel-9, not-8)
advcl(line-15, feel-9)
dobj(feel-9, that-10)
nsubj(line-15, ID-11)
cop(line-15, is-12)
det(line-15, a-13)
amod(line-15, valid-14)
root(ROOT-0, line-15)
prep_of(line-15, inquiry-17)
advmod(line-15, then-18)
nsubj(see-22, I-19)
aux(see-22, do-20)
neg(see-22, n't-21)
ccomp(line-15, see-22)
advmod(give-26, why-23)
nsubj(give-26, it-24)
aux(give-26, would-25)
advcl(see-22, give-26)
dobj(give-26, tenure-27)
prep_to(give-26, people-29)
nsubj(subscribe-31, people-29)
rcmod(people-29, subscribe-31)
det(theory-34, the-33)
prep_to(subscribe-31, theory-34)

(ROOT
  (S ('' '')
    (NP (PRP We))
    (VP (MD can)
      (VP (VB detect)
        (NP (PRP them))
        (SBAR (IN once)
          (S
            (NP (PRP they))
            (VP (VB happen) (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT all))
                      (SBAR
                        (S
                          (NP (NNP ID))
                          (VP (VBZ is)
                            (VP (VBG claiming)
                              (S
                                (VP (TO to)
                                  (VP (VB be)
                                    (ADJP (JJ able)
                                      (S
                                        (VP (TO to)
                                          (VP (VB do)
                                            (PP (IN in)
                                              (NP (DT that) (NN respect)))))))))))))))))))))))
    (. .)))

nsubj(detect-4, We-2)
aux(detect-4, can-3)
root(ROOT-0, detect-4)
dobj(detect-4, them-5)
mark(happen-8, once-6)
nsubj(happen-8, they-7)
advcl(detect-4, happen-8)
nsubj(all-12, which-10)
cop(all-12, is-11)
ccomp(happen-8, all-12)
dobj(claiming-15, all-12)
nsubj(claiming-15, ID-13)
xsubj(able-18, ID-13)
aux(claiming-15, is-14)
rcmod(all-12, claiming-15)
aux(able-18, to-16)
cop(able-18, be-17)
xcomp(claiming-15, able-18)
aux(do-20, to-19)
xcomp(able-18, do-20)
det(respect-23, that-22)
prep_in(do-20, respect-23)

(ROOT
  (S ('' '')
    (PP (IN By)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NN mechanism))
          (VP (VBZ does)
            (NP (DT the) (NN designer))))))
    (VP (VBP make)
      (NP (DT these) (NNS changes)))
    (. ?)))

dep(make-8, By-2)
dobj(does-5, what-3)
nsubj(does-5, mechanism-4)
pcomp(By-2, does-5)
det(designer-7, the-6)
dobj(does-5, designer-7)
root(ROOT-0, make-8)
det(changes-10, these-9)
dobj(make-8, changes-10)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD ca) (RB n't)
      (NP (PRP we))
      (VP
        (VP (VB look)
          (PP (IN at)
            (NP (JJ past) (NN design) (NNS decisions))))
        (CC and)
        (ADVP (RB then))
        (VP (VB determine)
          (NP (DT an) (JJ overall) (NN pattern))
          (PP (IN from)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP we))
                (VP (MD can) (RB then)
                  (VP (VB determine)
                    (NP (DT the) (JJ next) (NN design) (NN choice))))))))))
    (. ?)))

advmod(look-5, Why-1)
aux(look-5, ca-2)
neg(look-5, n't-3)
nsubj(look-5, we-4)
nsubj(determine-12, we-4)
root(ROOT-0, look-5)
amod(decisions-9, past-7)
nn(decisions-9, design-8)
prep_at(look-5, decisions-9)
advmod(look-5, then-11)
conj_and(look-5, then-11)
conj_and(look-5, determine-12)
det(pattern-15, an-13)
amod(pattern-15, overall-14)
dobj(determine-12, pattern-15)
dobj(determine-21, which-17)
nsubj(determine-21, we-18)
aux(determine-21, can-19)
advmod(determine-21, then-20)
prepc_from(determine-12, determine-21)
det(choice-25, the-22)
amod(choice-25, next-23)
nn(choice-25, design-24)
dobj(determine-21, choice-25)

(ROOT
  (S (`` ``)
    (ADVP (RB Probably))
    (VP (VBD were) (RB n't)
      (NP
        (NP
          (ADJP (RB biologically) (JJ relevant))
          (ADVP (RB though)))
        (PRN (-LRB- -LRB-)
          (SBAR (IN unless)
            (S
              (NP (NN agency))
              (VP (VBD intervened))))
          (-RRB- -RRB-)))
      ('' '')
      (SBAR
        (WHADVP (WRB Why))
        (S
          (VP (VBD did)
            (NP (DT the) (NN agency))))))
    (VP (VB intervene))
    (. ?)))

advmod(relevant-6, Probably-2)
cop(relevant-6, were-3)
neg(relevant-6, n't-4)
advmod(relevant-6, biologically-5)
root(ROOT-0, relevant-6)
advmod(relevant-6, though-7)
mark(intervened-11, unless-9)
nsubj(intervened-11, agency-10)
dep(relevant-6, intervened-11)
advmod(did-15, Why-14)
advcl(relevant-6, did-15)
det(agency-17, the-16)
dobj(did-15, agency-17)
dep(relevant-6, intervene-18)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBD did)
      (NP (DT that) (NN agency))
      (VP (VB originate)))
    (. ?)))

advmod(originate-5, Where-1)
aux(originate-5, did-2)
det(agency-4, that-3)
nsubj(originate-5, agency-4)
root(ROOT-0, originate-5)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBD did)
      (NP (DT that) (NN agency))
      (VP (VB create)
        (NP (NN life))))
    (. ?)))

advmod(create-5, How-1)
aux(create-5, did-2)
det(agency-4, that-3)
nsubj(create-5, agency-4)
root(ROOT-0, create-5)
dobj(create-5, life-6)

(ROOT
  (FRAG (`` ``)
    (FRAG
      (NP
        (NP (NNP Explain))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP you))
            (VP (MD could)
              (VP (VB have) (`` ``)
                (NP (NN life))))))))
    ('' '')
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBZ happens)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (RB even) (JJR simpler))
                (PP (IN than)
                  (NP
                    (NP (DT the) (RBS most) (JJ basic))
                    (PP (IN of)
                      (NP (NNS cells)))))))))))
    (. .)))

root(ROOT-0, Explain-2)
advmod(have-6, how-3)
nsubj(have-6, you-4)
aux(have-6, could-5)
dep(Explain-2, have-6)
dobj(have-6, life-8)
nsubj(happens-11, that-10)
dep(Explain-2, happens-11)
aux(simpler-15, to-12)
cop(simpler-15, be-13)
advmod(simpler-15, even-14)
xcomp(happens-11, simpler-15)
det(basic-19, the-17)
advmod(basic-19, most-18)
prep_than(simpler-15, basic-19)
prep_of(basic-19, cells-21)

(ROOT
  (NP
    (NP
      (NP (`` ``) (JJ long) (NNS chains))
      (PP (IN of)
        (NP (NN self))))
    (VP (VBG replicating)
      (NP (NNS proteins)))
    (. ?)))

amod(chains-3, long-2)
root(ROOT-0, chains-3)
prep_of(chains-3, self-5)
partmod(chains-3, replicating-6)
dobj(replicating-6, proteins-7)

(ROOT
  (FRAG
    (ADJP (JJ proto-cells))
    (. ?)))

root(ROOT-0, proto-cells-1)

(ROOT
  (S ('' '')
    (PP (IN If)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD were)
            (ADJP (JJ true))
            (SBAR
              (ADVP (RB then))
              (WHADVP (WRB why))
              (S (-LRB- -LRB-)
                (NP (RB as) (DT an) (NN example))
                (-RRB- -RRB-)
                (VP (VBD was)
                  (NP (NNP Robert) (NNP J.) (NNP Marks)))))))))
    (VP (VBD asked)
      (S
        (VP (TO to)
          (VP (VB return)
            (VP (VB grant)
              (NP (NN money))
              (NP
                (NP (DT the) (NN moment))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD started)
                      (NP
                        (NP (DT a) (NN lab))
                        (VP (VBN related)
                          (PP (TO to)
                            (NP (NNP ID))))))))))))))
    (. ?)))

dep(asked-17, If-2)
nsubj(true-5, that-3)
cop(true-5, were-4)
pcomp(If-2, true-5)
advmod(Marks-16, then-6)
advmod(Marks-16, why-7)
advmod(example-11, as-9)
det(example-11, an-10)
nsubj(Marks-16, example-11)
cop(Marks-16, was-13)
nn(Marks-16, Robert-14)
nn(Marks-16, J.-15)
ccomp(true-5, Marks-16)
root(ROOT-0, asked-17)
aux(return-19, to-18)
xcomp(asked-17, return-19)
xcomp(return-19, grant-20)
iobj(grant-20, money-21)
det(moment-23, the-22)
dobj(grant-20, moment-23)
nsubj(started-25, he-24)
rcmod(moment-23, started-25)
det(lab-27, a-26)
dobj(started-25, lab-27)
partmod(lab-27, related-28)
prep_to(related-28, ID-30)

(ROOT
  (S (`` ``)
    (VP (VBD Was)
      (NP (PRP he))
      (PP (VBN given)
        (SBAR
          (WHNP (WDT that) (NN money))
          (S
            (VP (TO to)
              (VP (VB start)
                (CC and)
                (VB ID)
                (NP (NN lab))))))))
    (. ?)))

cop(he-3, Was-2)
root(ROOT-0, he-3)
prep(he-3, given-4)
det(money-6, that-5)
nsubj(start-8, money-6)
nsubj(ID-10, money-6)
aux(start-8, to-7)
pcomp(given-4, start-8)
pcomp(given-4, ID-10)
conj_and(start-8, ID-10)
dobj(start-8, lab-11)

(ROOT
  (S
    (PP (IN If)
      (NP (RB not) (RB then)))
    (NP (PRP I))
    (VP (VBP imagine)
      (SBAR (IN that)
        (S
          (NP (PRP$ his) (NNS backers))
          (VP (MD would)
            (VP (VB have)
              (VP (VBN been)
                (ADJP (VBN upset)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP they))
                      (VP (VBD found)
                        (SBAR (IN that)
                          (S
                            (NP (PRP he))
                            (VP (VBD was)
                              (VP (VBG using)
                                (NP (DT the) (NN money))
                                (PP (VBN given)
                                  (PP (TO to)
                                    (NP (PRP him))))))))))))
                (PP (IN for)
                  (NP (DT a) (JJ different) (NN purpose)))))))))
    (. .)))

prep(imagine-5, If-1)
neg(then-3, not-2)
pobj(If-1, then-3)
nsubj(imagine-5, I-4)
root(ROOT-0, imagine-5)
complm(upset-12, that-6)
poss(backers-8, his-7)
nsubjpass(upset-12, backers-8)
aux(upset-12, would-9)
aux(upset-12, have-10)
auxpass(upset-12, been-11)
ccomp(imagine-5, upset-12)
advmod(found-15, when-13)
nsubj(found-15, they-14)
dep(upset-12, found-15)
complm(using-19, that-16)
nsubj(using-19, he-17)
aux(using-19, was-18)
ccomp(found-15, using-19)
det(money-21, the-20)
dobj(using-19, money-21)
prep(using-19, given-22)
pcomp(given-22, to-23)
prep_to(given-22, him-24)
det(purpose-28, a-26)
amod(purpose-28, different-27)
prep_for(upset-12, purpose-28)

(ROOT
  (S ('' '')
    (S
      (ADVP (IN So) (DT all))
      (NP (PRP I))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (S
                  (VP (VBZ is)
                    (NP (NN show))
                    (SBAR (IN that)
                      (S
                        (NP (NNP ID))
                        (VP (VBZ explains)
                          (NP
                            (NP (DT the) (NNS workings))
                            (PP (IN of)
                              (NP
                                (NP (JJ many) (NNS features))
                                (PP (IN of)
                                  (NP (DT the) (JJ natural) (NN world)))))))))))))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD 'll)
        (VP (VB be)
          (ADJP (JJ free)
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP (PRP$ their) (NN research)))))))))
    (. ?)))

advmod(have-5, So-2)
dep(So-2, all-3)
nsubj(have-5, I-4)
xsubj(do-7, I-4)
root(ROOT-0, have-5)
aux(do-7, to-6)
xcomp(have-5, do-7)
cop(show-9, is-8)
ccomp(do-7, show-9)
complm(explains-12, that-10)
nsubj(explains-12, ID-11)
ccomp(show-9, explains-12)
det(workings-14, the-13)
dobj(explains-12, workings-14)
amod(features-17, many-16)
prep_of(workings-14, features-17)
det(world-21, the-19)
amod(world-21, natural-20)
prep_of(features-17, world-21)
nsubj(free-26, they-23)
aux(free-26, 'll-24)
cop(free-26, be-25)
conj_and(have-5, free-26)
aux(do-28, to-27)
xcomp(free-26, do-28)
poss(research-30, their-29)
dobj(do-28, research-30)

(ROOT
  (S (`` ``)
    (PP (IN In)
      (NP (DT a) (JJ scientifically) (NN demonstrable)))
    (NP (NN fashion))
    (VP (VBZ yes))
    (. .)))

det(demonstrable-5, a-3)
amod(demonstrable-5, scientifically-4)
prep_in(yes-7, demonstrable-5)
nsubj(yes-7, fashion-6)
root(ROOT-0, yes-7)

(ROOT
  (S
    (INTJ (UH ''))
    (VP (VB Name)
      (NP (DT some)))
    (. .)))

root(ROOT-0, Name-2)
dobj(Name-2, some-3)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (DT The) (NN nature)
          (CC and)
          (NN origin))
        (PP (IN of)
          (NP
            (NP (DT the) (NN designer))
            (, ,)
            (NP
              (NP (DT the) (NN purpose))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN design))
                  (, ,)
                  (NP
                    (NP (DT the) (JJ current) (NN location))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN designer))
                        (, ,)
                        (NP
                          (NP (DT the) (NN mechanism))
                          (SBAR
                            (WHPP (IN by)
                              (WHNP (WDT which)))
                            (S
                              (NP (DT the) (NN designer))
                              (VP
                                (VP (VBD acted))
                                (, ,)
                                (NP
                                  (NP (DT the) (NN process))
                                  (SBAR
                                    (WHPP (IN by)
                                      (WHNP (WDT which)))
                                    (S
                                      (NP (NN design) (NNS decisions))
                                      (VP (VBD were))))))))))))))))))
      (VP (VBD made)))
    (CC and)
    (S
      (NP (DT the) (NNS reasons))
      (VP (VBZ behind)
        (NP (JJ specific) (NN design) (NNS choices))))
    (. .)))

det(nature-3, The-2)
nsubj(made-38, nature-3)
conj_and(nature-3, origin-5)
nsubj(made-38, origin-5)
det(designer-8, the-7)
prep_of(nature-3, designer-8)
det(purpose-11, the-10)
appos(designer-8, purpose-11)
det(design-14, the-13)
prep_of(purpose-11, design-14)
det(location-18, the-16)
amod(location-18, current-17)
appos(design-14, location-18)
det(designer-21, the-20)
prep_of(location-18, designer-21)
det(mechanism-24, the-23)
appos(designer-21, mechanism-24)
rel(acted-29, which-26)
det(designer-28, the-27)
nsubj(acted-29, designer-28)
rcmod(mechanism-24, acted-29)
det(process-32, the-31)
dobj(acted-29, process-32)
rel(were-37, which-34)
nn(decisions-36, design-35)
nsubj(were-37, decisions-36)
rcmod(process-32, were-37)
root(ROOT-0, made-38)
det(reasons-41, the-40)
nsubj(behind-42, reasons-41)
conj_and(made-38, behind-42)
amod(choices-45, specific-43)
nn(choices-45, design-44)
dobj(behind-42, choices-45)

(ROOT
  (S ('' '')
    (S
      (NP (DT This))
      (VP (VBZ gives)
        (NP (DT a) (JJ good) (NN overview))))
    (: :) (`` ``)
    (S
      (NP
        (NP (NN Talk))
        (PP (IN about)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP
                (NP (NNS purposes))
                (PP (IN for)
                  (NP
                    (NP (WP what))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBD was)
                          (SBAR (RB once) (IN though)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (NP (NN junk) (NN DNA))))))))))))
              (: ...)
              (VP (VBD followed)
                (PP (IN by)
                  (NP
                    (NP (NNS arguments))
                    (PP (IN about)
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (NP (NNP ID))
                          (VP (VBZ has)
                            (VP (VBN been)))))))))))))
      (VP (VBD misrepresented)))
    (. ...)))

nsubj(gives-3, This-2)
root(ROOT-0, gives-3)
det(overview-6, a-4)
amod(overview-6, good-5)
dobj(gives-3, overview-6)
nsubj(misrepresented-32, Talk-9)
advmod(followed-24, how-11)
nsubj(followed-24, purposes-12)
prep_for(purposes-12, what-14)
nsubj(was-16, what-14)
nsubj(DNA-22, what-14)
rcmod(what-14, was-16)
advmod(DNA-22, once-17)
dep(DNA-22, though-18)
aux(DNA-22, to-19)
cop(DNA-22, be-20)
nn(DNA-22, junk-21)
ccomp(was-16, DNA-22)
xcomp(was-16, DNA-22)
prepc_about(Talk-9, followed-24)
prep_by(followed-24, arguments-26)
advmod(been-31, how-28)
nsubj(been-31, ID-29)
aux(been-31, has-30)
prepc_about(arguments-26, been-31)
ccomp(gives-3, misrepresented-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD predictions)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (VP (VBG making))))))))))
    (. .)))

nsubj(sure-4, I-1)
cop(sure-4, 'm-2)
neg(sure-4, not-3)
root(ROOT-0, sure-4)
nsubj(predictions-6, what-5)
dep(sure-4, predictions-6)
nsubj(making-9, it-7)
aux(making-9, 's-8)
ccomp(predictions-6, making-9)

