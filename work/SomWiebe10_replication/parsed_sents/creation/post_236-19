(ROOT
  (S
    (S
      (PP (IN With)
        (NP (NNP ID)))
      (, ,)
      (NP (NNS proponents))
      (VP (VBP assert)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP refuse)
              (S
                (VP (TO to)
                  (VP (VB propose)
                    (NP (NNS hypotheses))
                    (PP (IN on)
                      (NP (DT the) (NN designer) (NN s) (NN identity)))))))))))
    (, ,)
    (VP (VBP do) (RB not)
      (VP (VB propose)
        (NP (DT a) (NN mechanism))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN designer))
        (, ,)
        (VP (VBN he\/she\/it)
          (S
            (VP (VBG \/)
              (NP (PRP they)))))
        (, ,))
      (VP (VBZ has)
        (ADVP (RB never))
        (VP (VBN been)
          (VP (VBN seen)))))
    (. .)))

prep_with(assert-5, ID-2)
nsubj(assert-5, proponents-4)
ccomp(propose-20, assert-5)
complm(refuse-8, that-6)
nsubj(refuse-8, they-7)
xsubj(propose-10, they-7)
ccomp(assert-5, refuse-8)
aux(propose-10, to-9)
xcomp(refuse-8, propose-10)
dobj(propose-10, hypotheses-11)
det(identity-16, the-13)
nn(identity-16, designer-14)
nn(identity-16, s-15)
prep_on(propose-10, identity-16)
aux(propose-20, do-18)
neg(propose-20, not-19)
root(ROOT-0, propose-20)
det(mechanism-22, a-21)
dobj(propose-20, mechanism-22)
det(designer-26, the-25)
nsubjpass(seen-35, designer-26)
partmod(designer-26, he\/she\/it-28)
xcomp(he\/she\/it-28, \/-29)
dobj(\/-29, they-30)
aux(seen-35, has-32)
neg(seen-35, never-33)
auxpass(seen-35, been-34)
conj_and(propose-20, seen-35)

