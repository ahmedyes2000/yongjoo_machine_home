(ROOT
  (SQ (MD Has) (RB n't)
    (NP (NN anybody))
    (ADVP (RB here))
    (VP (VB read)
      (NP (DT a) (JJ molecular) (NN cell) (NN biology) (NN textbook)))
    (. ?)))

aux(read-5, Has-1)
neg(read-5, n't-2)
nsubj(read-5, anybody-3)
advmod(read-5, here-4)
root(ROOT-0, read-5)
det(textbook-10, a-6)
amod(textbook-10, molecular-7)
nn(textbook-10, cell-8)
nn(textbook-10, biology-9)
dobj(read-5, textbook-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN machinery))
      (PP (IN of)
        (NP (DT the) (NN cell))))
    (VP (VBZ is)
      (NP (DT a) (NNP Rube) (NNP Goldberg) (NN apparatus)))
    (. .)))

det(machinery-2, The-1)
nsubj(apparatus-10, machinery-2)
det(cell-5, the-4)
prep_of(machinery-2, cell-5)
cop(apparatus-10, is-6)
det(apparatus-10, a-7)
nn(apparatus-10, Rube-8)
nn(apparatus-10, Goldberg-9)
root(ROOT-0, apparatus-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBD was)
          (VP (VBN designed)))))
    (, ,)
    (NP (DT the) (NN designer))
    (VP (VBD went)
      (PP (TO to)
        (NP
          (NP (DT a) (NN lot))
          (PP (IN of)
            (NP (NN trouble)))))
      (S
        (VP (TO to)
          (VP (VB make)
            (S
              (NP (PRP it))
              (VP (VB look)
                (ADJP (JJ undesigned))))))))
    (. .)))

mark(designed-4, If-1)
nsubjpass(designed-4, it-2)
auxpass(designed-4, was-3)
advcl(went-8, designed-4)
det(designer-7, the-6)
nsubj(went-8, designer-7)
xsubj(make-15, designer-7)
root(ROOT-0, went-8)
det(lot-11, a-10)
prep_to(went-8, lot-11)
prep_of(lot-11, trouble-13)
aux(make-15, to-14)
xcomp(went-8, make-15)
nsubj(look-17, it-16)
ccomp(make-15, look-17)
acomp(look-17, undesigned-18)

(ROOT
  (S
    (S
      (NP (PRP One))
      (VP (MD can)
        (VP (VB compare)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBN designed)))))))
    (CC and)
    (S
      (NP (JJ undesigned) (NNS systems))
      (VP (VBP look)
        (PP (IN like))))
    (. .)))

nsubj(compare-3, One-1)
aux(compare-3, can-2)
root(ROOT-0, compare-3)
nsubj(designed-5, what-4)
ccomp(compare-3, designed-5)
amod(systems-8, undesigned-7)
nsubj(look-9, systems-8)
conj_and(compare-3, look-9)
prep(look-9, like-10)

(ROOT
  (SINV
    (S
      (PP (IN For)
        (NP (NN example)))
      (, ,)
      (NP (DT some) (JJ complex) (JJ electronic) (NNS circuits))
      (VP (VBP are)
        (VP (VBN designed)
          (PP (IN by)
            (NP (NNS engineers)
              (CC and)
              (NNS others))))))
    (VP (VBP are)
      (VP (VBN created)
        (PP (IN through)
          (NP
            (NP (DT the) (NN use))
            (PP (IN of)
              (NP (JJ adaptive) (NNS programs)))))))
    (NP
      (NP (DT that) (NN amount))
      (PP (TO to)
        (NP
          (NP (JJ artificial) (NNS versions))
          (PP (IN of)
            (NP (JJ natural) (NN selection))))))
    (. .)))

prep_for(designed-9, example-2)
det(circuits-7, some-4)
amod(circuits-7, complex-5)
amod(circuits-7, electronic-6)
nsubjpass(designed-9, circuits-7)
auxpass(designed-9, are-8)
dep(created-15, designed-9)
agent(designed-9, engineers-11)
agent(designed-9, others-13)
conj_and(engineers-11, others-13)
auxpass(created-15, are-14)
root(ROOT-0, created-15)
det(use-18, the-17)
prep_through(created-15, use-18)
amod(programs-21, adaptive-20)
prep_of(use-18, programs-21)
det(amount-23, that-22)
nsubjpass(created-15, amount-23)
amod(versions-26, artificial-25)
prep_to(amount-23, versions-26)
amod(selection-29, natural-28)
prep_of(versions-26, selection-29)

(ROOT
  (S
    (S
      (NP
        (NP (DT Both) (NNS kinds))
        (PP (IN of)
          (NP (NNS circuits))))
      (VP (VBP work)))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (NP
          (ADJP (RB distinctly) (JJ different))
          (NNS characteristics))))
    (. .)))

det(kinds-2, Both-1)
nsubj(work-5, kinds-2)
prep_of(kinds-2, circuits-4)
root(ROOT-0, work-5)
nsubj(have-9, they-8)
conj_but(work-5, have-9)
advmod(different-11, distinctly-10)
amod(characteristics-12, different-11)
dobj(have-9, characteristics-12)

(ROOT
  (S
    (S
      (NP (DT The) (JJ designed) (NNS circuits))
      (VP (VBP tend)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (RBR less) (JJ tolerant)
                (PP (IN of)
                  (NP
                    (NP (NNS malfunctions))
                    (PP (IN than)
                      (NP (DT the) (JJ evolved) (NNS circuits)))))))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (RB much) (JJR harder))
        (S
          (VP (TO to)
            (VP (VB figure)
              (PRT (RP out))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (DT the) (JJ undesigned) (NNS circuits))
                  (VP (VBP work)))))))))
    (. .)))

det(circuits-3, The-1)
amod(circuits-3, designed-2)
nsubj(tend-4, circuits-3)
xsubj(tolerant-8, circuits-3)
root(ROOT-0, tend-4)
aux(tolerant-8, to-5)
cop(tolerant-8, be-6)
advmod(tolerant-8, less-7)
xcomp(tend-4, tolerant-8)
prep_of(tolerant-8, malfunctions-10)
det(circuits-14, the-12)
amod(circuits-14, evolved-13)
prep_than(malfunctions-10, circuits-14)
nsubj(harder-19, it-16)
xsubj(figure-21, it-16)
cop(harder-19, 's-17)
advmod(harder-19, much-18)
conj_and(tend-4, harder-19)
aux(figure-21, to-20)
xcomp(harder-19, figure-21)
prt(figure-21, out-22)
advmod(work-27, how-23)
det(circuits-26, the-24)
amod(circuits-26, undesigned-25)
nsubj(work-27, circuits-26)
ccomp(figure-21, work-27)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (NN nature))
        (VP (VBZ is)
          (VP (VBN examined)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ appears)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN undesigned))))))
    (. .)))

amod(words-3, other-2)
prep_in(appears-11, words-3)
advmod(examined-8, when-5)
nsubjpass(examined-8, nature-6)
auxpass(examined-8, is-7)
advcl(appears-11, examined-8)
nsubj(appears-11, it-10)
xsubj(undesigned-14, it-10)
root(ROOT-0, appears-11)
aux(undesigned-14, to-12)
auxpass(undesigned-14, be-13)
xcomp(appears-11, undesigned-14)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ positive) (NN finding))
        (, ,) (RB not)
        (NP (DT a) (NN inference))))
    (. .)))

nsubj(finding-5, This-1)
cop(finding-5, is-2)
det(finding-5, a-3)
amod(finding-5, positive-4)
root(ROOT-0, finding-5)
neg(finding-5, not-7)
det(inference-9, a-8)
dep(finding-5, inference-9)

(ROOT
  (S
    (NP
      (NP (NN None))
      (PP (IN of)
        (NP (DT this))))
    (VP (MD will)
      (VP (VB convince)
        (NP (DT the) (NNP ID) (NNS folks))
        (, ,)
        (PP (IN of)
          (NP (NN course)))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (NP (JJ irrational) (NNS religionists)))))))
    (. .)))

nsubj(convince-5, None-1)
prep_of(None-1, this-3)
aux(convince-5, will-4)
root(ROOT-0, convince-5)
det(folks-8, the-6)
nn(folks-8, ID-7)
dobj(convince-5, folks-8)
prep_of(convince-5, course-11)
mark(religionists-17, because-13)
nsubj(religionists-17, they-14)
cop(religionists-17, are-15)
amod(religionists-17, irrational-16)
advcl(convince-5, religionists-17)

