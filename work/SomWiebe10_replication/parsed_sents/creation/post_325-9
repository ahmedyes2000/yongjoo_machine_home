(ROOT
  (S ('' '')
    (S
      (SBAR
        (ADVP (RB As) (RB long))
        (IN as)
        (S
          (NP (DT a) (NN theory))
          (VP (MD can)
            (VP (VB be)
              (VP (VBN put)
                (PP (IN in)
                  (NP (JJ empirical) (NN harm))))))))
      (VP (VBZ s)
        (NP (NN way) ('' ''))))
    (CC But)
    (S
      (PP (IN for)
        (NP
          (NP
            (NP (`` ``) (JJ intelligent) (NN design) ('' ''))
            (NP (`` ``) (NN theory) ('' '')))
          (PRN (-LRB- -LRB-)
            (SBAR
              (WHNP (WDT whatever))
              (S
                (NP (DT that))
                (VP (VBZ is))))
            (-RRB- -RRB-))))
      (, ,)
      (NP (DT this) (NN premise))
      (VP (VBZ is)
        (ADJP (JJ false))))
    (. .)))

advmod(long-3, As-2)
advmod(put-9, long-3)
dep(put-9, as-4)
det(theory-6, a-5)
nsubjpass(put-9, theory-6)
aux(put-9, can-7)
auxpass(put-9, be-8)
advcl(way-14, put-9)
csubj(way-14, put-9)
amod(harm-12, empirical-11)
prep_in(put-9, harm-12)
cop(way-14, s-13)
root(ROOT-0, way-14)
amod(design-20, intelligent-19)
prep_for(false-34, design-20)
dep(design-20, theory-23)
dobj(is-28, whatever-26)
nsubj(is-28, that-27)
dep(design-20, is-28)
det(premise-32, this-31)
nsubj(false-34, premise-32)
cop(false-34, is-33)
conj_but(way-14, false-34)

