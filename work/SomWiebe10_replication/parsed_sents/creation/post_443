(ROOT
  (S
    (VP
      (VP (VB PvM))
      (: :)
      (NP
        (NP (-LRB- -LRB-)
          (QP (CD 1))
          (-RRB- -RRB-))
        ('' '')
        (PP (IN Ask)
          (S
            (VP (VBG yourself)
              (NP
                (NP (DT this) (JJ simple) (NN question))
                (: :)
                (SBARQ
                  (WHADVP (WRB How))
                  (SQ (VBZ does)
                    (NP (NNP ID))
                    (VP (VB explain)
                      (NP (DT the) (JJ bacterial) (NN flagella))))
                  (. ?))))))))))

root(ROOT-0, PvM-1)
dobj(PvM-1, 1-4)
prepc_ask(1-4, yourself-8)
det(question-11, this-9)
amod(question-11, simple-10)
dobj(yourself-8, question-11)
advmod(explain-16, How-13)
aux(explain-16, does-14)
nsubj(explain-16, ID-15)
dep(question-11, explain-16)
det(flagella-19, the-17)
amod(flagella-19, bacterial-18)
dobj(explain-16, flagella-19)

(ROOT
  (S
    (VP
      (NP
        (NP (-LRB- -LRB-)
          (QP (CD 2))
          (-RRB- -RRB-))
        ('' '')
        (PP
          (PP
            (NP
              (NP (PRP It))
              (VP (VBZ does)
                (S
                  (ADVP (RB n't))
                  (, ,)
                  (NP (PRP it))
                  (ADVP (RB merely))
                  (VP (VBZ calls)
                    (S
                      (NP (PRP it))
                      (`` ``)
                      (ADJP (VBN designed))
                      ('' '')))))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (NP (DT a) (NN placeholder))))))
            (IN for)
            (NP (PRP$ our) (NN ignorance)))
          (CONJP (IN as))
          (PP (TO to)
            (SBAR
              (WHADVP (WRB how))
              (S
                (VP (TO to)
                  (VP (VB explain)
                    (NP (DT the) (NN flagella))))))))))
    (. .)))

root(ROOT-0, 2-2)
conj_as(2-2, 2-2')
npadvmod(2-2, It-5)
dep(It-5, does-6)
neg(calls-11, n't-7)
nsubj(calls-11, it-9)
advmod(calls-11, merely-10)
ccomp(does-6, calls-11)
dep(designed-14, it-12)
dep(calls-11, designed-14)
nsubj(placeholder-19, which-16)
cop(placeholder-19, is-17)
det(placeholder-19, a-18)
rcmod(It-5, placeholder-19)
poss(ignorance-22, our-21)
prep_for(2-2, ignorance-22)
advmod(explain-27, how-25)
aux(explain-27, to-26)
prepc_to(2-2', explain-27)
det(flagella-29, the-28)
dobj(explain-27, flagella-29)

(ROOT
  (S
    (NP (DT That) (NN word))
    (VP (VBZ is) (`` ``)
      (NP (NNP Nobel)))
    (. .)))

det(word-2, That-1)
nsubj(Nobel-5, word-2)
cop(Nobel-5, is-3)
root(ROOT-0, Nobel-5)

(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (CD 1))
    (-RRB- -RRB-)
    (VP (VBZ Answer) (: :)
      (S
        (NP (PRP It))
        (VP (VBZ 's)
          (NP
            (NP (DT a) (NN machine))
            (PP (IN with)
              (NP (JJ functional) (NNS components)))))))
    (. .)))

nsubj(Answer-5, 1-3)
root(ROOT-0, Answer-5)
nsubj(machine-10, It-7)
cop(machine-10, 's-8)
det(machine-10, a-9)
ccomp(Answer-5, machine-10)
parataxis(Answer-5, machine-10)
amod(components-13, functional-12)
prep_with(machine-10, components-13)

(ROOT
  (S
    (NP (DT The)
      (UCP (NN design)
        (CC and)
        (JJ construct))
      (NN process))
    (VP (VBZ is)
      (ADJP
        (ADJP (RB largely) (JJ unknown))
        (, ,)
        (CC but)
        (ADJP (JJ researchable))))
    (. .)))

det(process-5, The-1)
nn(process-5, design-2)
conj_and(design-2, construct-4)
nn(process-5, construct-4)
nsubj(unknown-8, process-5)
nsubj(researchable-11, process-5)
cop(unknown-8, is-6)
advmod(unknown-8, largely-7)
root(ROOT-0, unknown-8)
conj_but(unknown-8, researchable-11)

(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP (DT The) (`` ``)
      (VP (VBN designed))
      ('' '') (NN designation))
    (VP (VBZ IS)
      (PP
        (PP (IN in)
          (NP
            (NP (NN fact))
            (NP (DT a) (NN placeholder))))
        (, ,)
        (CC but)
        (PP (IN for)
          (NP (JJ further) (NN study)))))
    (. .)))

dep(IS-9, 2-2)
det(designation-8, The-4)
dep(designation-8, designed-6)
nsubj(IS-9, designation-8)
nsubj(IS-9', designation-8)
root(ROOT-0, IS-9)
conj_but(IS-9, IS-9')
prep_in(IS-9, fact-11)
det(placeholder-13, a-12)
dep(fact-11, placeholder-13)
amod(study-18, further-17)
prep_for(IS-9', study-18)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ brings)
      (PRT (RP up))
      (NP (DT a) (JJ common) (NN complaint))
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP (VBZ offers)
            (NP (DT no) (JJ testable) (NNS hypotheses))))))
    (. .)))

nsubj(brings-2, This-1)
root(ROOT-0, brings-2)
prt(brings-2, up-3)
det(complaint-6, a-4)
amod(complaint-6, common-5)
dobj(brings-2, complaint-6)
complm(offers-9, that-7)
nsubj(offers-9, ID-8)
ccomp(brings-2, offers-9)
det(hypotheses-12, no-10)
amod(hypotheses-12, testable-11)
dobj(offers-9, hypotheses-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP submit)
      (SBAR (IN that)
        (S
          (NP (DT a) (NNS hypothesis))
          (VP (VBZ comes)
            (ADVP (RB first))
            (: ;)
            (ADVP
              (NP (DT the) (NN testing))
              (RB later))))))
    (. .)))

nsubj(submit-2, I-1)
root(ROOT-0, submit-2)
complm(comes-6, that-3)
det(hypothesis-5, a-4)
nsubj(comes-6, hypothesis-5)
ccomp(submit-2, comes-6)
advmod(comes-6, first-7)
det(testing-10, the-9)
npadvmod(later-11, testing-10)
advmod(comes-6, later-11)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (S
          (NP (EX there))
          (VP (VBZ 's)
            (NP (DT no) (NN funding))))
        (, ,)
        (CC and)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (NN stigma))
              (VP (VBN attached)))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ has)
      (VP (VBN been)
        (NP
          (NP (JJ little) (VBG confirming) (NN research))
          (VP (VBN done)
            (PP (IN as)
              (ADVP (RB yet)))))))
    (. .)))

mark('s-3, Since-1)
expl('s-3, there-2)
advcl(research-18, 's-3)
det(funding-5, no-4)
nsubj('s-3, funding-5)
expl(is-9, there-8)
conj_and('s-3, is-9)
advcl(research-18, is-9)
nsubj(is-9, stigma-10)
partmod(stigma-10, attached-11)
expl(research-18, there-13)
aux(research-18, has-14)
cop(research-18, been-15)
amod(research-18, little-16)
amod(research-18, confirming-17)
root(ROOT-0, research-18)
partmod(research-18, done-19)
prep(done-19, as-20)
pcomp(as-20, yet-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP predict)
      (SBAR (IN that)
        (S
          (NP (DT that))
          (VP (MD will)
            (VP
              (VP (VB change)
                (PP (IN with)
                  (NP
                    (NP (DT the) (JJ new) (NN crop))
                    (PP (IN of)
                      (NP
                        (NP (NNS scientists))
                        (, ,)
                        (SBAR
                          (WHNP
                            (NP (DT a) (JJ few))
                            (WHPP (IN of)
                              (WHNP (WP whom))))
                          (S
                            (VP (MD may)
                              (VP (VB see)
                                (NP (PRP$ its) (NN relevance))))))
                        (, ,))))))
              (CC and)
              (VP (VB pursue)
                (NP (PRP it))))))))
    (. .)))

nsubj(predict-2, I-1)
root(ROOT-0, predict-2)
complm(change-6, that-3)
nsubj(change-6, that-4)
nsubj(pursue-24, that-4)
aux(change-6, will-5)
ccomp(predict-2, change-6)
det(crop-10, the-8)
amod(crop-10, new-9)
prep_with(change-6, crop-10)
prep_of(crop-10, scientists-12)
prep_of(few-15, scientists-12)
det(few-15, a-14)
nsubj(see-19, few-15)
aux(see-19, may-18)
rcmod(scientists-12, see-19)
poss(relevance-21, its-20)
dobj(see-19, relevance-21)
ccomp(predict-2, pursue-24)
conj_and(change-6, pursue-24)
dobj(pursue-24, it-25)

(ROOT
  (NP
    (NP (DT A) (NN word))
    (PP (TO to)
      (NP
        (NP (DT any))
        (PP (IN out)
          (NP (RB there)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD may)
              (VP (VB fit)
                (NP (DT that) (NN category))))))))
    (. .)))

det(word-2, A-1)
root(ROOT-0, word-2)
prep_to(word-2, any-4)
nsubj(fit-9, any-4)
prep(any-4, out-5)
pobj(out-5, there-6)
aux(fit-9, may-8)
rcmod(any-4, fit-9)
det(category-11, that-10)
dobj(fit-9, category-11)

