(ROOT
  (FRAG
    (NP (CD 2))
    (. .)))

root(ROOT-0, 2-1)

(ROOT
  (S
    (ADVP (IN So) (RB far))
    (, ,)
    (NP (JJ many) (NNS people))
    (VP (VBP have)
      (ADVP (RB yet))
      (S
        (VP (TO to)
          (VP (VB realize)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NN concept))
                  (PP (IN of)
                    (NP
                      (NP (`` ``) (NN design) ('' ''))
                      (SBAR (IN as)
                        (S
                          (VP (VBN defined)
                            (PP (IN by)
                              (NP (NNP ID)))))))))
                (VP (VBZ is)
                  (ADVP (RB actually))
                  (ADJP (RB quite) (JJ limited)))))))))
    (. .)))

advmod(have-6, So-1)
advmod(So-1, far-2)
amod(people-5, many-4)
nsubj(have-6, people-5)
xsubj(realize-9, people-5)
root(ROOT-0, have-6)
advmod(have-6, yet-7)
aux(realize-9, to-8)
xcomp(have-6, realize-9)
complm(limited-24, that-10)
det(concept-12, the-11)
nsubj(limited-24, concept-12)
prep_of(concept-12, design-15)
mark(defined-18, as-17)
dep(design-15, defined-18)
prep_by(defined-18, ID-20)
cop(limited-24, is-21)
advmod(limited-24, actually-22)
advmod(limited-24, quite-23)
ccomp(realize-9, limited-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (JJ few))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ familiar)
              (PP (IN with)
                (NP
                  (NP (DT the) (JJ major) (NNS concessions))
                  (VP (VBN made)
                    (PP (IN by)
                      (NP (NNP William) (NNP Dembski)))))))))))
    (. .)))

prep_in(seem-5, fact-2)
nsubj(seem-5, few-4)
xsubj(familiar-8, few-4)
root(ROOT-0, seem-5)
aux(familiar-8, to-6)
cop(familiar-8, be-7)
xcomp(seem-5, familiar-8)
det(concessions-12, the-10)
amod(concessions-12, major-11)
prep_with(familiar-8, concessions-12)
partmod(concessions-12, made-13)
nn(Dembski-16, William-15)
agent(made-13, Dembski-16)

(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (PRP I))
        (VP (VBP proceed))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP I))
    (VP (VBP note)
      (SBAR (IN that)
        (S
          (NP (NNP Dembski))
          (VP (VBZ makes)
            (NP (DT an) (JJ important) (NN concession))
            (PP (TO to)
              (NP (PRP$ his) (NNS critics)))))))
    (. .)))

mark(proceed-3, Before-1)
nsubj(proceed-3, I-2)
advcl(note-8, proceed-3)
advmod(note-8, however-5)
nsubj(note-8, I-7)
root(ROOT-0, note-8)
complm(makes-11, that-9)
nsubj(makes-11, Dembski-10)
ccomp(note-8, makes-11)
det(concession-14, an-12)
amod(concession-14, important-13)
dobj(makes-11, concession-14)
poss(critics-17, his-16)
prep_to(makes-11, critics-17)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ refuses)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP
              (NP (DT the) (JJ second) (NN assumption))
              (VP (VBN noted)
                (PP (IN above))))))))
    (. .)))

nsubj(refuses-2, He-1)
xsubj(make-4, He-1)
root(ROOT-0, refuses-2)
aux(make-4, to-3)
xcomp(refuses-2, make-4)
det(assumption-7, the-5)
amod(assumption-7, second-6)
dobj(make-4, assumption-7)
partmod(assumption-7, noted-8)
prep(noted-8, above-9)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NNP EF))
        (VP (VBZ implies)
          (SBAR (IN that)
            (S
              (NP (JJ certain) (NNS systems))
              (VP (VBP are)
                (ADVP (RB intelligently))
                (VP (VBN designed))))))))
    (, ,)
    (NP (NNP Dembski))
    (VP (VBZ does) (RB not)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ follows)
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP
                      (NP (DT some) (JJ intelligent) (NN designer))
                      (CC or)
                      (NP (JJ other)))))))))))
    (. .)))

advmod(implies-4, When-1)
det(EF-3, the-2)
nsubj(implies-4, EF-3)
advcl(think-15, implies-4)
complm(designed-10, that-5)
amod(systems-7, certain-6)
nsubjpass(designed-10, systems-7)
auxpass(designed-10, are-8)
advmod(designed-10, intelligently-9)
ccomp(implies-4, designed-10)
nsubj(think-15, Dembski-12)
aux(think-15, does-13)
neg(think-15, not-14)
root(ROOT-0, think-15)
nsubj(follows-17, it-16)
ccomp(think-15, follows-17)
complm(is-20, that-18)
expl(is-20, there-19)
ccomp(follows-17, is-20)
det(designer-23, some-21)
amod(designer-23, intelligent-22)
nsubj(is-20, designer-23)
nsubj(is-20, other-25)
conj_or(designer-23, other-25)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ says)
      (SBAR (IN that) (, ,) (`` ``)
        (S
          (SBAR (RB even) (IN though)
            (S
              (PP (IN in)
                (NP (NN practice)))
              (NP (JJ inferring) (NN design))
              (VP (VBZ is)
                (NP
                  (NP (DT the) (JJ first) (NN step))
                  (PP (IN in)
                    (S
                      (VP (VBG identifying)
                        (NP
                          (NP (DT an) (JJ intelligent) (NN agent))
                          (, ,)
                          (VP (VBN taken)
                            (PP (IN by)
                              (NP (PRP itself))))))))))))
          (NP (NN design))
          (VP (VBZ does) (RB not)
            (VP (VB require)
              (SBAR (IN that)
                (S
                  (NP (PDT such) (DT an) (NN agent))
                  (VP (VB be)
                    (VP (VBN posited))))))))))
    (. .)))

nsubj(says-2, He-1)
root(ROOT-0, says-2)
complm(require-28, that-3)
advmod(step-15, even-6)
dep(step-15, though-7)
prep_in(step-15, practice-9)
amod(design-11, inferring-10)
nsubj(step-15, design-11)
cop(step-15, is-12)
det(step-15, the-13)
amod(step-15, first-14)
advcl(require-28, step-15)
prepc_in(step-15, identifying-17)
det(agent-20, an-18)
amod(agent-20, intelligent-19)
dobj(identifying-17, agent-20)
partmod(agent-20, taken-22)
agent(taken-22, itself-24)
nsubj(require-28, design-25)
aux(require-28, does-26)
neg(require-28, not-27)
ccomp(says-2, require-28)
complm(posited-34, that-29)
predet(agent-32, such-30)
det(agent-32, an-31)
nsubjpass(posited-34, agent-32)
auxpass(posited-34, be-33)
ccomp(require-28, posited-34)

(ROOT
  (S
    (NP
      (NP (DT The) (NN notion))
      (PP (IN of)
        (NP
          (NP (NN design))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ emerges)
                (PP (IN from)
                  (NP (DT the) (NN design) (NN inference)))))))))
    (VP (MD must) (RB not)
      (VP (VB be)
        (VP (VBN confused)
          (PP (IN with)
            (NP
              (NP (JJ intelligent) (NN agency) ('' ''))
              (PRN (-LRB- -LRB-)
                (NP (NNP TDI))
                (, ,)
                (NP (NNP 227))
                (-RRB- -RRB-)))))))
    (. .)))

det(notion-2, The-1)
nsubjpass(confused-14, notion-2)
prep_of(notion-2, design-4)
nsubj(emerges-6, design-4)
rcmod(design-4, emerges-6)
det(inference-10, the-8)
nn(inference-10, design-9)
prep_from(emerges-6, inference-10)
aux(confused-14, must-11)
neg(confused-14, not-12)
auxpass(confused-14, be-13)
root(ROOT-0, confused-14)
amod(agency-17, intelligent-16)
prep_with(confused-14, agency-17)
appos(agency-17, TDI-20)
dep(TDI-20, 227-22)

(ROOT
  (NP
    (NP (NN Source))
    (: :)
    (NP
      (NP (NNP Ryan) (NNP Nichols))
      (, ,)
      (NP
        (NP (DT The) (NN Vacuity))
        (PP (IN of)
          (NP
            (NP (NNP Intelligent) (NNP Design) (NNP Theory))
            (SBAR
              (S
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP (NNP TDI))
                    (: :)
                    (NP
                      (NP (DT The) (NNP Design) (NNP Inference))
                      (, ,)
                      (NP (NNP William) (NNP Dembski))))
                  (-RRB- -RRB-))
                (S
                  (PP (IN In)
                    (NP (JJ other) (NNS words)))
                  (, ,)
                  (NP (NN design))
                  (VP (VBZ does) (RB not)
                    (VP (VB imply)
                      (NP (NN designer)))))
                (, ,)
                (CC and)
                (S
                  (PP (IN in)
                    (NP (NN fact)))
                  (, ,)
                  (SBAR (IN as)
                    (S
                      (NP
                        (NP (NNS people))
                        (PP (JJ such) (IN as)
                          (NP (NNP Wesley) (NNP Elsberry))))
                      (VP (VBP have)
                        (VP (VBN shown)))))
                  (, ,)
                  (NP (NNP Intelligent) (NNP Design))
                  (VP (MD can) (RB not)
                    (ADVP (RB even))
                    (VP (VB exclude)
                      (NP (JJ natural) (NN selection))
                      (PP (IN as)
                        (NP (DT a) (`` ``) (NN designer) ('' ''))))))))))))
    (. .)))

root(ROOT-0, Source-1)
nn(Nichols-4, Ryan-3)
dep(Source-1, Nichols-4)
det(Vacuity-7, The-6)
appos(Nichols-4, Vacuity-7)
nn(Theory-11, Intelligent-9)
nn(Theory-11, Design-10)
prep_of(Vacuity-7, Theory-11)
dep(imply-29, TDI-13)
det(Inference-17, The-15)
nn(Inference-17, Design-16)
dep(TDI-13, Inference-17)
nn(Dembski-20, William-19)
appos(Inference-17, Dembski-20)
amod(words-24, other-23)
prep_in(imply-29, words-24)
nsubj(imply-29, design-26)
aux(imply-29, does-27)
neg(imply-29, not-28)
rcmod(Theory-11, imply-29)
dobj(imply-29, designer-30)
prep_in(exclude-50, fact-34)
mark(shown-43, as-36)
nsubj(shown-43, people-37)
nn(Elsberry-41, Wesley-40)
prep_such_as(people-37, Elsberry-41)
aux(shown-43, have-42)
advcl(exclude-50, shown-43)
nn(Design-46, Intelligent-45)
nsubj(exclude-50, Design-46)
aux(exclude-50, can-47)
neg(exclude-50, not-48)
advmod(exclude-50, even-49)
rcmod(Theory-11, exclude-50)
conj_and(imply-29, exclude-50)
amod(selection-52, natural-51)
dobj(exclude-50, selection-52)
det(designer-56, a-54)
prep_as(exclude-50, designer-56)

(ROOT
  (S
    (NP (NNP Crowther))
    (ADVP (RB then))
    (VP (VBZ continues)
      (S
        (VP (TO to)
          (VP (VB confuse)
            (NP
              (NP (DT the) (NN terminology))
              (PP (IN of) (`` ``)
                (NP (NN complexity)
                  (CC and)
                  (NN information))
                ('' '')))
            (SBAR (IN while)
              (S
                (S
                  (VP (VBG ignoring)
                    (SBAR (IN that)
                      (S
                        (NP (NN science))
                        (VP (VBZ has)
                          (VP (VBN shown)
                            (SBAR
                              (WHADVP (WRB how))
                              (S
                                (NP
                                  (NP (NNS processes))
                                  (PP (IN of)
                                    (NP (NN regularity)
                                      (CC and)
                                      (NN chance))))
                                (VP (MD can)
                                  (PP (IN in)
                                    (NP (NN principle)))
                                  (VP (VB explain)
                                    (NP
                                      (NP (NN complexity)
                                        (CC and)
                                        (NN information))
                                      (PRN (, ,)
                                        (CC and)
                                        (ADVP (RB thus))
                                        (NP (NNP ID))
                                        (, ,))
                                      (SBAR
                                        (WHNP (WDT which))
                                        (S
                                          (VP (VBZ lacks)
                                            (NP (PRP$ its) (JJ own) (JJ positive) (NNS explanations))))))))))))))))
                (VP (MD can) (RB not)
                  (ADVP (RB even))
                  (VP (VB compare)
                    (NP (PRP it))
                    (PP (TO to)
                      (NP (JJ scientific) (NNS explanations)))))))))))
    (. .)))

nsubj(continues-3, Crowther-1)
xsubj(confuse-5, Crowther-1)
advmod(continues-3, then-2)
root(ROOT-0, continues-3)
aux(confuse-5, to-4)
xcomp(continues-3, confuse-5)
det(terminology-7, the-6)
dobj(confuse-5, terminology-7)
prep_of(terminology-7, complexity-10)
prep_of(terminology-7, information-12)
conj_and(complexity-10, information-12)
mark(compare-47, while-14)
csubj(compare-47, ignoring-15)
complm(shown-19, that-16)
nsubj(shown-19, science-17)
aux(shown-19, has-18)
ccomp(ignoring-15, shown-19)
advmod(explain-29, how-20)
nsubj(explain-29, processes-21)
prep_of(processes-21, regularity-23)
prep_of(processes-21, chance-25)
conj_and(regularity-23, chance-25)
aux(explain-29, can-26)
prep_in(explain-29, principle-28)
ccomp(shown-19, explain-29)
dobj(explain-29, complexity-30)
nsubj(lacks-39, complexity-30)
dobj(explain-29, information-32)
conj_and(complexity-30, information-32)
nsubj(lacks-39, information-32)
dep(ID-36, and-34)
dep(ID-36, thus-35)
dep(complexity-30, ID-36)
rcmod(complexity-30, lacks-39)
poss(explanations-43, its-40)
amod(explanations-43, own-41)
amod(explanations-43, positive-42)
dobj(lacks-39, explanations-43)
aux(compare-47, can-44)
neg(compare-47, not-45)
advmod(compare-47, even-46)
advcl(confuse-5, compare-47)
dobj(compare-47, it-48)
amod(explanations-51, scientific-50)
prep_to(compare-47, explanations-51)

(ROOT
  (S (CC And)
    (PP (IN that)
      (NP (PRP$ my) (NNS friends)))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN rest))
        (PP (IN of)
          (NP (DT the) (NN story)))))
    (. .)))

cc(rest-8, And-1)
poss(friends-4, my-3)
prep_that(rest-8, friends-4)
cop(rest-8, is-6)
det(rest-8, the-7)
root(ROOT-0, rest-8)
det(story-11, the-10)
prep_of(rest-8, story-11)

