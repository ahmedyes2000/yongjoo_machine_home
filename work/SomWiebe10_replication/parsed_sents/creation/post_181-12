(ROOT
  (S ('' '')
    (S
      (NP (PRP It))
      (VP (VBD was)
        (VP (VBN put)
          (ADVP (RB forth))
          (SBAR (IN that)
            (S
              (NP (DT the) (NN flagellum))
              (VP (VBD was)
                (ADJP (RB irreducibly) (JJ complex))))))))
    (, ,)
    (NP (DT this))
    (VP (VBD was)
      (VP (VBN shown)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ false) ('' '')))))
        (SBAR
          (S
            (NP (DT An) (JJ untestable) (NN claim))
            (VP (MD can) (RB not)
              (VP (VB be)
                (VP (VBN shown)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ false))))))))))))
    (. .)))

nsubjpass(put-4, It-2)
auxpass(put-4, was-3)
ccomp(shown-15, put-4)
advmod(put-4, forth-5)
complm(complex-11, that-6)
det(flagellum-8, the-7)
nsubj(complex-11, flagellum-8)
cop(complex-11, was-9)
advmod(complex-11, irreducibly-10)
ccomp(put-4, complex-11)
nsubjpass(shown-15, this-13)
xsubj(false-18, this-13)
auxpass(shown-15, was-14)
root(ROOT-0, shown-15)
aux(false-18, to-16)
cop(false-18, be-17)
xcomp(shown-15, false-18)
det(claim-22, An-20)
amod(claim-22, untestable-21)
nsubjpass(shown-26, claim-22)
aux(shown-26, can-23)
neg(shown-26, not-24)
auxpass(shown-26, be-25)
ccomp(shown-15, shown-26)
aux(false-29, to-27)
cop(false-29, be-28)
xcomp(shown-26, false-29)

