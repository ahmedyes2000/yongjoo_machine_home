(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (JJ actual) (JJ absolute) (NN proof))
        (PP (IN of)
          (NP (NN evolution))))
      (SBAR (IN as)
        (S
          (NP
            (NP (DT some))
            (PP (IN of)
              (NP (DT the) (NNS people))))
          (ADVP (RB here))
          (VP (VBP have)
            (VP (VBN stated))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(proof-6, no-3)
amod(proof-6, actual-4)
amod(proof-6, absolute-5)
nsubj(is-2, proof-6)
prep_of(proof-6, evolution-8)
mark(stated-16, as-9)
nsubj(stated-16, some-10)
det(people-13, the-12)
prep_of(some-10, people-13)
advmod(stated-16, here-14)
aux(stated-16, have-15)
advcl(is-2, stated-16)

(ROOT
  (S
    (PP (IN Before)
      (NP (NNS people) (NN post) (NNS things)))
    (, ,)
    (NP (PRP they))
    (VP (MD should)
      (ADVP (RB really))
      (VP (VB do)
        (NP (PRP$ their) (NN research))
        (ADVP (RB first))))
    (. .)))

nn(things-4, people-2)
nn(things-4, post-3)
prep_before(do-9, things-4)
nsubj(do-9, they-6)
aux(do-9, should-7)
advmod(do-9, really-8)
root(ROOT-0, do-9)
poss(research-11, their-10)
dobj(do-9, research-11)
advmod(do-9, first-12)

(ROOT
  (S ('' '')
    (ADVP (RB Well))
    (, ,)
    (NP (PRP it))
    (VP (MD might)
      (VP (VB seem)
        (NP
          (NP (JJ obvious))
          (, ,)
          (CC but)
          (NP (PRP$ its)
            (ADJP (RB not) (JJ concrete))
            (NN evidence)))))
    (. .)))

advmod(obvious-7, Well-2)
nsubj(obvious-7, it-4)
aux(obvious-7, might-5)
cop(obvious-7, seem-6)
root(ROOT-0, obvious-7)
poss(evidence-13, its-10)
neg(concrete-12, not-11)
amod(evidence-13, concrete-12)
conj_but(obvious-7, evidence-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD seemed)
      (ADJP (RB pretty) (JJ obvious))
      (SBAR (IN that)
        (S
          (NP (DT the) (NN world))
          (VP (VBD was)
            (ADJP (JJ flat))
            (ADVP (RB once) (RB too))))))
    (. .)))

nsubj(obvious-4, It-1)
cop(obvious-4, seemed-2)
advmod(obvious-4, pretty-3)
root(ROOT-0, obvious-4)
complm(flat-9, that-5)
det(world-7, the-6)
nsubj(flat-9, world-7)
cop(flat-9, was-8)
ccomp(obvious-4, flat-9)
advmod(too-11, once-10)
advmod(flat-9, too-11)

(ROOT
  (X (JJ 2) (. .) (NNP -RRB-)))

root(ROOT-0, 2-1)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (ADVP (RB constantly))
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB prove)
              (NP
                (NP (DT the) (NN theory))
                (PP (IN of)
                  (NP (NN evolution))))
              (PP (IN with)
                (S
                  (VP (VBG suggesting)
                    (NP
                      (NP (DT that) (NN life))
                      (SBAR
                        (S
                          (NP (PRP itself))
                          (VP (VBD was)
                            (VP (VBN generated)
                              (PP (IN in)
                                (NP
                                  (NP (DT a) (NN pool))
                                  (PP (IN of)
                                    (NP (JJ amino) (NNS acids)
                                      (CC and)
                                      (NNS proteins)))))
                              (PP (IN by)
                                (NP (JJ complete) (NN chance))))))))))))))))
    (. .)))

nsubj(trying-4, Science-1)
xsubj(prove-6, Science-1)
aux(trying-4, is-2)
advmod(trying-4, constantly-3)
root(ROOT-0, trying-4)
aux(prove-6, to-5)
xcomp(trying-4, prove-6)
det(theory-8, the-7)
dobj(prove-6, theory-8)
prep_of(theory-8, evolution-10)
prepc_with(prove-6, suggesting-12)
det(life-14, that-13)
dobj(suggesting-12, life-14)
nsubjpass(generated-17, itself-15)
auxpass(generated-17, was-16)
rcmod(life-14, generated-17)
det(pool-20, a-19)
prep_in(generated-17, pool-20)
amod(acids-23, amino-22)
prep_of(pool-20, acids-23)
prep_of(pool-20, proteins-25)
conj_and(acids-23, proteins-25)
amod(chance-28, complete-27)
agent(generated-17, chance-28)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (ADJP
        (ADVP (RB so) (RB far))
        (DT all))
      (NNS experiments)
      (S
        (VP (TO to)
          (VP (VB attempt)
            (S
              (VP (TO to)
                (VP (VB manufacture)
                  (NP
                    (NP (DT a) (NN self))
                    (VP (VBG replicating)
                      (NP
                        (NP (NNP DNA))
                        (VP (VBN based)
                          (NP (NNP Molecule)))))))))))))
    (VP (VBP have)
      (VP (VBN failed)))
    (. .)))

advmod(failed-18, However-1)
advmod(far-4, so-3)
advmod(all-5, far-4)
amod(experiments-6, all-5)
nsubj(failed-18, experiments-6)
aux(attempt-8, to-7)
infmod(experiments-6, attempt-8)
aux(manufacture-10, to-9)
xcomp(attempt-8, manufacture-10)
det(self-12, a-11)
dobj(manufacture-10, self-12)
partmod(self-12, replicating-13)
dobj(replicating-13, DNA-14)
partmod(DNA-14, based-15)
dobj(based-15, Molecule-16)
aux(failed-18, have-17)
root(ROOT-0, failed-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB believe)
            (NP (PRP me))))))
    (, ,)
    (VP (VB look)
      (NP (PRP it))
      (ADVP (RB up)))
    (. .)))

mark(believe-5, If-1)
nsubj(believe-5, you-2)
aux(believe-5, do-3)
neg(believe-5, n't-4)
advcl(look-8, believe-5)
dobj(believe-5, me-6)
root(ROOT-0, look-8)
dobj(look-8, it-9)
advmod(look-8, up-10)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (NN evidence))
        (VP (VBG supporting)
          (NP
            (NP (NNP RNA))
            (VP (VBN based)
              (NP (NNS molecules)))))))
    (. .)))

advmod(is-4, Now-1)
expl(is-4, there-3)
root(ROOT-0, is-4)
nsubj(is-4, evidence-5)
partmod(evidence-5, supporting-6)
dobj(supporting-6, RNA-7)
partmod(RNA-7, based-8)
dobj(based-8, molecules-9)

(ROOT
  (S (CC But)
    (, ,)
    (SBAR (RB even) (IN if)
      (S
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD turned)
              (PRT (RP out))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ successful))))))))
        (, ,)
        (NP (PRP it))
        (VP (MD would)
          (ADVP (RB still))
          (VP (VB pose)
            (NP (DT an) (JJ interesting) (NN paradox))
            (S
              (VP (VBG being)
                (SBAR (IN that)
                  (S
                    (NP (NN science))
                    (VP (VBD created)
                      (NP (DT the) (NN self))
                      (S
                        (VP (VBG replicating)
                          (NP (NN molecule)))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBD did) (RB not)
      (VP (VB create)
        (NP (PRP itself))
        (SBAR (IN as)
          (S
            (NP
              (NP (NN theory))
              (PP (IN of)
                (NP (NN evolution))))
            (VP (VBZ suggests))))))
    (. .)))

cc(create-31, But-1)
advmod(pose-15, even-3)
dep(pose-15, if-4)
nsubj(turned-6, that-5)
dep(pose-15, turned-6)
prt(turned-6, out-7)
aux(successful-10, to-8)
cop(successful-10, be-9)
xcomp(turned-6, successful-10)
nsubj(pose-15, it-12)
aux(pose-15, would-13)
advmod(pose-15, still-14)
dep(create-31, pose-15)
det(paradox-18, an-16)
amod(paradox-18, interesting-17)
dobj(pose-15, paradox-18)
xcomp(pose-15, being-19)
complm(created-22, that-20)
nsubj(created-22, science-21)
ccomp(being-19, created-22)
det(self-24, the-23)
dobj(created-22, self-24)
xcomp(created-22, replicating-25)
dobj(replicating-25, molecule-26)
nsubj(create-31, it-28)
aux(create-31, did-29)
neg(create-31, not-30)
root(ROOT-0, create-31)
dobj(create-31, itself-32)
mark(suggests-37, as-33)
nsubj(suggests-37, theory-34)
prep_of(theory-34, evolution-36)
advcl(create-31, suggests-37)

(ROOT
  (X (JJ 3) (. .) (NNP -RRB-)))

root(ROOT-0, 3-1)

(ROOT
  (S
    (NP (DT The) (JJ last) (NN point))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ fossil) (NN record))
        (SBAR
          (S
            (VP (VBZ is)
              (ADJP (JJ incomplete)))))))
    (. .)))

det(point-3, The-1)
amod(point-3, last-2)
nsubj(record-7, point-3)
cop(record-7, is-4)
det(record-7, the-5)
amod(record-7, fossil-6)
root(ROOT-0, record-7)
cop(incomplete-9, is-8)
rcmod(record-7, incomplete-9)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP do)
        (NP (NN share) (JJ similar) (NN bone) (NNS structures))
        (PP (IN with)
          (NP (JJ other) (NNS animals)))))
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT no) (JJ defined) (JJ developmental) (NN line))))
    (. .)))

nsubj(do-2, We-1)
root(ROOT-0, do-2)
nn(structures-6, share-3)
amod(structures-6, similar-4)
nn(structures-6, bone-5)
dobj(do-2, structures-6)
amod(animals-9, other-8)
prep_with(do-2, animals-9)
expl(is-12, there-11)
conj_but(do-2, is-12)
det(line-16, no-13)
amod(line-16, defined-14)
amod(line-16, developmental-15)
nsubj(is-12, line-16)

(ROOT
  (FRAG (RB Not)
    (VP
      (ADVP (RB even)
        (NP (JJ slight) (NNS mutations))
        (PP (IN within)
          (NP (DT each) (NN generation))))
      (TO to)
      (VP (VB warrant)
        (S
          (NP (EX there))
          (VP (VBG being)
            (NP
              (NP (NN evidence))
              (PP (IN of)
                (NP (NN evolution))))))))
    (. .)))

root(ROOT-0, Not-1)
advmod(warrant-9, even-2)
amod(mutations-4, slight-3)
pobj(even-2, mutations-4)
det(generation-7, each-6)
prep_within(even-2, generation-7)
aux(warrant-9, to-8)
dep(Not-1, warrant-9)
expl(being-11, there-10)
dep(warrant-9, being-11)
nsubj(being-11, evidence-12)
prep_of(evidence-12, evolution-14)

(ROOT
  (S (CC And)
    (PP (IN for)
      (S
        (NP (DT those))
        (VP (VBG reading)
          (NP (DT this)))))
    (NP (PRP I))
    (VP (VBP implore)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP (VB do)
            (NP (PRP$ your) (JJ own))))))
    (. .)))

cc(implore-7, And-1)
nsubj(reading-4, those-3)
prepc_for(implore-7, reading-4)
dobj(reading-4, this-5)
nsubj(implore-7, I-6)
root(ROOT-0, implore-7)
nsubj(do-10, you-8)
aux(do-10, to-9)
xcomp(implore-7, do-10)
poss(own-12, your-11)
dobj(do-10, own-12)

(ROOT
  (S
    (SBAR (IN Though) (, ,)
      (S
        (NP (PRP I))
        (VP
          (VP (MD will)
            (VP (VB add)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (VP (VBG getting)
                      (ADVP (RBR closer)
                        (CC and)
                        (RBR closer))
                      (NP
                        (NP (DT every) (NN year))
                        (PP (TO to)
                          (S
                            (VP (VBG finding)
                              (NP (DT that) (VBG missing) (NN link))))))))))))
          (CC but)
          (VP
            (ADVP (RBR closer)
              (CC and)
              (RBR closer))
            (VBZ does)
            (ADJP (RB not) (JJ equal))))))
    (VP (VBD found))
    (. .)))

mark(add-5, Though-1)
nsubj(add-5, I-3)
nsubj(equal-25, I-3)
aux(add-5, will-4)
csubj(found-26, add-5)
nsubj(getting-8, they-6)
aux(getting-8, are-7)
ccomp(add-5, getting-8)
advmod(getting-8, closer-9)
advmod(getting-8, closer-11)
conj_and(closer-9, closer-11)
det(year-13, every-12)
dobj(getting-8, year-13)
prepc_to(year-13, finding-15)
det(link-18, that-16)
amod(link-18, missing-17)
dobj(finding-15, link-18)
advmod(equal-25, closer-20)
conj_and(closer-20, closer-22)
advmod(equal-25, closer-22)
dep(equal-25, does-23)
neg(equal-25, not-24)
conj_but(add-5, equal-25)
csubj(found-26, equal-25)
root(ROOT-0, found-26)

(ROOT
  (S
    (VP
      (ADVP (RB Now))
      (VBG speaking)
      (PP (IN about)
        (NP (NN creation))))
    (. .)))

advmod(speaking-2, Now-1)
root(ROOT-0, speaking-2)
prep_about(speaking-2, creation-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN read)
        (NP
          (NP (DT a) (NN lot))
          (PP (IN of)
            (NP
              (NP (DT the) (NNS arguments))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (VP (VBG saying)
                      (SBAR (IN that)
                        (S
                          (NP (NN creationism))
                          (VP (VBZ is)
                            (NP
                              (NP (NN faith))
                              (VP (VBN based)))))))))))))))
    (. .)))

nsubj(read-3, I-1)
aux(read-3, have-2)
root(ROOT-0, read-3)
det(lot-5, a-4)
dobj(read-3, lot-5)
det(arguments-8, the-7)
prep_of(lot-5, arguments-8)
nsubj(saying-11, arguments-8)
aux(saying-11, are-10)
rcmod(arguments-8, saying-11)
complm(faith-15, that-12)
nsubj(faith-15, creationism-13)
cop(faith-15, is-14)
ccomp(saying-11, faith-15)
partmod(faith-15, based-16)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (NP
      (NP (PRP$ its)
        (ADJP
          (QP (RB just) (RB as)))
        (NN faith))
      (PP (VBN based)
        (PP (IN as)
          (NP (NN evolution)))))
    (VP (VBZ is))
    (. .)))

advmod(is-10, Well-1)
poss(faith-6, its-3)
quantmod(as-5, just-4)
num(faith-6, as-5)
nsubj(is-10, faith-6)
prep(faith-6, based-7)
pcomp(based-7, as-8)
prep_as(based-7, evolution-9)
root(ROOT-0, is-10)

(ROOT
  (S (CC And)
    (NP (EX there))
    (VP (VBZ is)
      (ADVP (RB just)
        (PP (IN as)
          (NP
            (NP (JJ much) (NN evidence))
            (PRN (, ,)
              (SBAR (IN if)
                (FRAG (RB not)
                  (ADJP (JJR more))))
              (, ,)))))
      (VP (VBG supporting)
        (NP (JJ intelligent) (NN design))
        (SBAR (IN as)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (VP (VBG supporting)
                (NP (NN evolution))))))))
    (. .)))

cc(supporting-13, And-1)
expl(supporting-13, there-2)
aux(supporting-13, is-3)
advmod(supporting-13, just-4)
amod(evidence-7, much-6)
prep_as(just-4, evidence-7)
mark(not-10, if-9)
dep(evidence-7, not-10)
dep(not-10, more-11)
root(ROOT-0, supporting-13)
amod(design-15, intelligent-14)
dobj(supporting-13, design-15)
nsubj(supporting-13, design-15)
mark(supporting-19, as-16)
expl(supporting-19, there-17)
aux(supporting-19, is-18)
advcl(supporting-13, supporting-19)
dobj(supporting-19, evolution-20)
nsubj(supporting-19, evolution-20)

(ROOT
  (S
    (PP (IN In)
      (NP (DT all) (NN fairness)))
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (JJ absolute) (NN proof))
        (PP (IN for)
          (NP (JJ intelligent) (NN design))))
      (ADVP (RB as) (RB well)))
    (. .)))

det(fairness-3, all-2)
prep_in(is-5, fairness-3)
expl(is-5, there-4)
root(ROOT-0, is-5)
det(proof-8, no-6)
amod(proof-8, absolute-7)
nsubj(is-5, proof-8)
amod(design-11, intelligent-10)
prep_for(proof-8, design-11)
advmod(well-13, as-12)
mwe(well-13, as-12)
advmod(is-5, well-13)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (JJR more) (JJ substantial) (NN evidence))
        (PP (IN for)
          (NP (PRP it)))))
    (. .)))

advmod(is-4, However-1)
expl(is-4, there-3)
root(ROOT-0, is-4)
amod(evidence-7, more-5)
amod(evidence-7, substantial-6)
nsubj(is-4, evidence-7)
prep_for(evidence-7, it-9)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP (VBZ is)
        (NP (CD one) (NN example))))
    (: :)
    (S
      (NP (NNP Patterns))
      (VP (VBP occur)
        (ADVP (RB naturally))
        (PP (IN without)
          (NP
            (NP (DT the) (NN need))
            (PP (IN for)
              (NP (DT a) (`` ``) (NN designer) ('' '')))))))
    (. .)))

nsubj(example-4, Here-1)
cop(example-4, is-2)
num(example-4, one-3)
root(ROOT-0, example-4)
nsubj(occur-7, Patterns-6)
parataxis(example-4, occur-7)
advmod(occur-7, naturally-8)
det(need-11, the-10)
prep_without(occur-7, need-11)
det(designer-15, a-13)
prep_for(need-11, designer-15)

(ROOT
  (FRAG
    (PP (IN For)
      (NP (NN example)))
    (: :)
    (NP
      (NP (NNS snowflakes))
      (, ,)
      (NP (NNS tornados))
      (, ,)
      (NP (NNS hurricanes))
      (, ,)
      (NP (NN sand) (NNS dunes))
      (, ,)
      (NP (NNS stalactites))
      (, ,)
      (NP (NNS rivers))
      (, ,)
      (NP
        (NP (NN ocean) (NNS waves))
        (NP (FW etc.) (. .))))
    (. .)))

dep(snowflakes-4, For-1)
pobj(For-1, example-2)
root(ROOT-0, snowflakes-4)
appos(snowflakes-4, tornados-6)
appos(snowflakes-4, hurricanes-8)
nn(dunes-11, sand-10)
appos(snowflakes-4, dunes-11)
appos(snowflakes-4, stalactites-13)
appos(snowflakes-4, rivers-15)
nn(waves-18, ocean-17)
appos(snowflakes-4, waves-18)
dep(waves-18, etc.-19)

(ROOT
  (S
    (NP (DT These) (NNS patterns))
    (VP (VBP are)
      (NP
        (NP (DT a) (JJ natural) (NN result))
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (NNS scientists))
              (VP (VBP categorize)
                (PP (IN as)
                  (NP (NN chaos)))))))))
    (. .)))

det(patterns-2, These-1)
nsubj(result-6, patterns-2)
cop(result-6, are-3)
det(result-6, a-4)
amod(result-6, natural-5)
root(ROOT-0, result-6)
dobj(categorize-10, what-8)
nsubj(categorize-10, scientists-9)
prepc_of(result-6, categorize-10)
prep_as(categorize-10, chaos-12)

(ROOT
  (S
    (NP
      (NP (NNP Science))
      (, ,)
      (PP (IN in)
        (NP
          (NP (NN support))
          (PP (IN of)
            (NP (NN evolution)))))
      (, ,))
    (ADVP (RB also))
    (VP (VBZ uses)
      (NP (NN chaos))
      (S
        (VP (TO to)
          (VP (VB describe)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD was)
                  (PP (IN before)
                    (NP (DT the) (`` ``) (JJ big) (NN bang) ('' ''))))))))))
    (. .)))

nsubj(uses-9, Science-1)
prep_in(Science-1, support-4)
prep_of(support-4, evolution-6)
advmod(uses-9, also-8)
root(ROOT-0, uses-9)
dobj(uses-9, chaos-10)
aux(describe-12, to-11)
xcomp(uses-9, describe-12)
nsubj(was-14, what-13)
ccomp(describe-12, was-14)
det(bang-19, the-16)
amod(bang-19, big-18)
prep_before(was-14, bang-19)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBP are)
      (NP
        (NP (CD three) (JJ basic) (NNS reasons))
        (PP (IN for)
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (NN evolution))
              (VP (VBZ is)
                (NP (RB only)
                  (NP (NN theory))
                  (CC and)
                  (RB not)
                  (NP
                    (NP (DT a) (JJ proven) (NN fact))
                    (NP (CD :1))))))))))
    (. .) (-RRB- -RRB-)))

nsubj(reasons-5, Here-1)
cop(reasons-5, are-2)
num(reasons-5, three-3)
amod(reasons-5, basic-4)
root(ROOT-0, reasons-5)
advmod(theory-11, why-7)
nsubj(theory-11, evolution-8)
cop(theory-11, is-9)
advmod(theory-11, only-10)
prepc_for(reasons-5, theory-11)
prepc_for(reasons-5, not-13)
conj_and(theory-11, not-13)
neg(theory-11, not-13)
det(fact-16, a-14)
amod(fact-16, proven-15)
dep(theory-11, fact-16)
dep(fact-16, :1-17)

(ROOT
  (S
    (NP (NNP Evolution))
    (VP (VBZ has)
      (ADVP (RB never))
      (VP (VBN been)
        (VP (VBN witnessed))))
    (. .)))

nsubjpass(witnessed-5, Evolution-1)
aux(witnessed-5, has-2)
neg(witnessed-5, never-3)
auxpass(witnessed-5, been-4)
root(ROOT-0, witnessed-5)

(ROOT
  (S
    (S
      (NP (DT These) (NNS things))
      (VP (VBP are)
        (ADJP (JJ well-understood))))
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN debate))
          (PP (IN in)
            (NP (DT the) (JJ scientific) (NN community))))))
    (. .)))

det(things-2, These-1)
nsubj(well-understood-4, things-2)
cop(well-understood-4, are-3)
root(ROOT-0, well-understood-4)
expl(is-7, there-6)
conj_and(well-understood-4, is-7)
det(debate-9, no-8)
nsubj(is-7, debate-9)
det(community-13, the-11)
amod(community-13, scientific-12)
prep_in(debate-9, community-13)

(ROOT
  (S
    (INTJ (RB Now))
    (, ,)
    (VP (VB take)
      (NP (NNS codes)))
    (. .)))

dep(take-3, Now-1)
root(ROOT-0, take-3)
dobj(take-3, codes-4)

(ROOT
  (S
    (NP (NNS Codes))
    (VP (VBP do) (RB not)
      (VP (VB occur)
        (PP (IN without)
          (NP
            (NP (DT a) (NN designer))
            (PRN (-LRB- -LRB-)
              (NP (NN programmer))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(occur-4, Codes-1)
aux(occur-4, do-2)
neg(occur-4, not-3)
root(ROOT-0, occur-4)
det(designer-7, a-6)
prep_without(occur-4, designer-7)
appos(designer-7, programmer-9)

(ROOT
  (S
    (NP
      (NP (DT Some) (NNS examples))
      (PP (IN of)
        (NP (DT these))))
    (VP (VBP include)
      (NP (NN stuff))
      (PP (IN like)
        (NP
          (NP (NN music))
          (, ,)
          (NP (NNS blueprints))
          (, ,)
          (NP (NNS languages))
          (, ,)
          (NP (NN computer) (NNS programs))
          (, ,)
          (CC and)
          (NP
            (NP (RB even) (NNS codes))
            (PP (IN of)
              (NP (NNP DNA)))))))
    (. .)))

det(examples-2, Some-1)
nsubj(include-5, examples-2)
prep_of(examples-2, these-4)
root(ROOT-0, include-5)
dobj(include-5, stuff-6)
prep_like(include-5, music-8)
prep_like(include-5, blueprints-10)
conj_and(music-8, blueprints-10)
prep_like(include-5, languages-12)
conj_and(music-8, languages-12)
nn(programs-15, computer-14)
prep_like(include-5, programs-15)
conj_and(music-8, programs-15)
advmod(codes-19, even-18)
prep_like(include-5, codes-19)
conj_and(music-8, codes-19)
prep_of(codes-19, DNA-21)

(ROOT
  (S
    (NP (DT The) (JJ basic) (NN difference))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ happens)
            (PP (IN between)
              (NP (NNS patterns)
                (CC and)
                (NNS codes)))))))
    (. .)))

det(difference-3, The-1)
amod(difference-3, basic-2)
nsubj(is-4, difference-3)
root(ROOT-0, is-4)
nsubj(happens-6, what-5)
ccomp(is-4, happens-6)
prep_between(happens-6, patterns-8)
prep_between(happens-6, codes-10)
conj_and(patterns-8, codes-10)

(ROOT
  (S
    (S
      (NP (NNP Chaos))
      (VP (MD can)
        (VP (VB produce)
          (NP (NNS patterns)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ has)
        (ADVP (RB never))
        (VP (VBN been)
          (VP (VBN shown)
            (S
              (VP (TO to)
                (VP (VB produce)
                  (NP (NNS codes)))))))))
    (. .)))

nsubj(produce-3, Chaos-1)
aux(produce-3, can-2)
root(ROOT-0, produce-3)
dobj(produce-3, patterns-4)
nsubjpass(shown-11, it-7)
xsubj(produce-13, it-7)
aux(shown-11, has-8)
neg(shown-11, never-9)
auxpass(shown-11, been-10)
conj_but(produce-3, shown-11)
aux(produce-13, to-12)
xcomp(shown-11, produce-13)
dobj(produce-13, codes-14)

(ROOT
  (S
    (NP (NNS Codes))
    (VP (VBP store)
      (NP
        (NP (NN information))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (NP
                (ADJP (RB pretty) (JJ good))
                (NN proof))
              (SBAR (IN that)
                (S
                  (NP (NNP DNA))
                  (ADVP (RB just))
                  (VP (MD might)
                    (VP (VB have)
                      (VP (VBN been)
                        (VP (VBN designed)))))))
              (PRN (-LRB- -LRB-)
                (VP (VBN programed))
                (-RRB- -RRB-)))))))
    (. .)))

nsubj(store-2, Codes-1)
root(ROOT-0, store-2)
dobj(store-2, information-3)
nsubj(proof-8, information-3)
cop(proof-8, is-5)
advmod(good-7, pretty-6)
amod(proof-8, good-7)
rcmod(information-3, proof-8)
complm(designed-15, that-9)
nsubjpass(designed-15, DNA-10)
advmod(designed-15, just-11)
aux(designed-15, might-12)
aux(designed-15, have-13)
auxpass(designed-15, been-14)
ccomp(proof-8, designed-15)
dep(proof-8, programed-17)

(ROOT
  (S
    (NP (NNP DNA))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (NN molecule))
        (PP (IN with)
          (NP (DT a) (NN pattern)))))
    (. .)))

nsubj(molecule-5, DNA-1)
cop(molecule-5, is-2)
neg(molecule-5, not-3)
det(molecule-5, a-4)
root(ROOT-0, molecule-5)
det(pattern-8, a-7)
prep_with(molecule-5, pattern-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN code))
        (, ,)
        (NP (RB basically) (DT a) (NN language))
        (, ,)
        (CC and)
        (NP
          (NP (DT a) (NN storage) (NN device))
          (PP (IN for)
            (NP (NN information))))))
    (. .)))

nsubj(code-4, It-1)
cop(code-4, 's-2)
det(code-4, a-3)
root(ROOT-0, code-4)
advmod(language-8, basically-6)
det(language-8, a-7)
conj_and(code-4, language-8)
det(device-13, a-11)
nn(device-13, storage-12)
conj_and(code-4, device-13)
prep_for(device-13, information-15)

(ROOT
  (S
    (NP
      (NP (DT All) (NNS codes))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP know)
            (PP (IN of))))))
    (VP (VBD were)
      (VP (VBN created)
        (PP (IN by)
          (NP (DT a) (JJ conscious) (NN mind)))))
    (. .)))

det(codes-2, All-1)
prep_of(know-5, codes-2)
nsubjpass(created-8, codes-2)
complm(know-5, that-3)
nsubj(know-5, we-4)
dep(codes-2, know-5)
auxpass(created-8, were-7)
root(ROOT-0, created-8)
det(mind-12, a-10)
amod(mind-12, conscious-11)
agent(created-8, mind-12)

(ROOT
  (S
    (NP (NNP Dawkin) (POS 's))
    (ADVP (RB even))
    (VP (VBZ states)
      (SBAR (IN that) (, ,) (`` ``)
        (S
          (NP (NN evolution))
          (VP (VBZ has)
            (VP (VBN been)
              (VP (VBN observed)))))))
    (. .)))

nsubj(states-4, Dawkin-1)
possessive(Dawkin-1, 's-2)
advmod(states-4, even-3)
root(ROOT-0, states-4)
complm(observed-11, that-5)
nsubjpass(observed-11, evolution-8)
aux(observed-11, has-9)
auxpass(observed-11, been-10)
ccomp(states-4, observed-11)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (NN evidence))
    (VP (VBZ dictates)
      (SBAR (IN that)
        (S
          (NP (NNP DNA))
          (VP (VBD was)
            (VP (VBN designed)
              (PP (IN by)
                (NP
                  (NP (DT a) (NN mind))
                  (PP (IN of)
                    (NP (NNS sorts))))))))))
    (. .)))

advmod(dictates-4, Therefore-1)
nsubj(dictates-4, evidence-3)
root(ROOT-0, dictates-4)
complm(designed-8, that-5)
nsubjpass(designed-8, DNA-6)
auxpass(designed-8, was-7)
ccomp(dictates-4, designed-8)
det(mind-11, a-10)
agent(designed-8, mind-11)
prep_of(mind-11, sorts-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NN language)
        (CC and)
        (NN information))
      (PP (IN of)
        (NP (PRP$ our) (JJ very) (JJ own) (NN DNA))))
    (VP (VBZ is)
      (NP
        (NP (NN proof))
        (PP (IN of)
          (NP
            (NP (DT some) (NN sort))
            (PP (IN of)
              (NP (JJ intelligent) (NN design)))))))
    (. .)))

det(language-2, The-1)
nsubj(proof-11, language-2)
conj_and(language-2, information-4)
nsubj(proof-11, information-4)
poss(DNA-9, our-6)
amod(DNA-9, very-7)
amod(DNA-9, own-8)
prep_of(language-2, DNA-9)
cop(proof-11, is-10)
root(ROOT-0, proof-11)
det(sort-14, some-13)
prep_of(proof-11, sort-14)
amod(design-17, intelligent-16)
prep_of(sort-14, design-17)

(ROOT
  (S
    (NP
      (NP (PRP I))
      (PP (IN for)
        (NP (CD one))))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP
            (NP (NNS elements))
            (PP (IN from)
              (NP (DT both) (NN evolution)
                (CC and)
                (NN creation))))
          (, ,)
          (S
            (VP (VBG working)
              (PP (IN in)
                (NP (NN tandem)))))
          (, ,)
          (VP (VBZ is)
            (ADJP (RBR more) (JJ likely))
            (NP
              (NP (DT that) (NN one))
              (CC or)
              (NP (DT the) (JJ other)))))))
    (. .)))

nsubj(believe-4, I-1)
prep_for(I-1, one-3)
root(ROOT-0, believe-4)
complm(likely-19, that-5)
nsubj(likely-19, elements-6)
preconj(evolution-9, both-8)
prep_from(elements-6, evolution-9)
prep_from(elements-6, creation-11)
conj_and(evolution-9, creation-11)
partmod(likely-19, working-13)
prep_in(working-13, tandem-15)
cop(likely-19, is-17)
advmod(likely-19, more-18)
ccomp(believe-4, likely-19)
det(one-21, that-20)
attr(likely-19, one-21)
det(other-24, the-23)
attr(likely-19, other-24)
conj_or(one-21, other-24)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB pick)
                (NP (CD one))))))))
    (NP (PRP I))
    (VP (MD would)
      (VP (VB say)
        (NP (NN creation))))
    (. .)))

cc(say-10, But-1)
mark(had-4, if-2)
nsubj(had-4, I-3)
xsubj(pick-6, I-3)
dep(say-10, had-4)
aux(pick-6, to-5)
xcomp(had-4, pick-6)
dobj(pick-6, one-7)
nsubj(say-10, I-8)
aux(say-10, would-9)
root(ROOT-0, say-10)
dobj(say-10, creation-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (SBAR (RB just) (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ has) (RB n't)
            (VP (VBN been)
              (VP (VBN observed)
                (SBAR (IN while)
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (VP (VBG happening)))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod(observed-9, just-3)
dep(observed-9, that-4)
nsubjpass(observed-9, it-5)
aux(observed-9, has-6)
neg(observed-9, n't-7)
auxpass(observed-9, been-8)
ccomp('s-2, observed-9)
mark(happening-13, while-10)
nsubj(happening-13, it-11)
aux(happening-13, 's-12)
advcl(observed-9, happening-13)

(ROOT
  (S ('' '')
    (NP (PRP He))
    (VP (VBZ goes)
      (PRT (RP on))
      (S
        (VP (TO to)
          (VP (VB say)
            (SBAR (IN that)
              (S
                (NP (PRP$ its))
                (VP (VBP like)
                  (S
                    (VP (VBG coming)
                      (PP (IN upon)
                        (NP (DT a) (NN murder) (NN scene)))
                      (SBAR (IN after)
                        (S
                          (NP (DT the) (NN murder))
                          (VP (VBZ has)
                            (ADVP (RB already))
                            (VP (VBN taken)
                              (NP (NN place)))))))))))))))
    (. .)))

nsubj(goes-3, He-2)
xsubj(say-6, He-2)
root(ROOT-0, goes-3)
prt(goes-3, on-4)
aux(say-6, to-5)
xcomp(goes-3, say-6)
complm(like-9, that-7)
nsubj(like-9, its-8)
ccomp(say-6, like-9)
xcomp(like-9, coming-10)
det(scene-14, a-12)
nn(scene-14, murder-13)
prep_upon(coming-10, scene-14)
mark(taken-20, after-15)
det(murder-17, the-16)
nsubj(taken-20, murder-17)
aux(taken-20, has-18)
advmod(taken-20, already-19)
advcl(coming-10, taken-20)
dobj(taken-20, place-21)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ seems)
        (ADJP (RB pretty) (JJ obvious))))
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT no) (JJ concrete) (NN evidence))))
    (. .)))

nsubj(obvious-4, It-1)
cop(obvious-4, seems-2)
advmod(obvious-4, pretty-3)
root(ROOT-0, obvious-4)
expl(is-7, there-6)
conj_but(obvious-4, is-7)
det(evidence-10, no-8)
amod(evidence-10, concrete-9)
nsubj(is-7, evidence-10)

(ROOT
  (FRAG
    (ADVP (RB Just))
    (NP (JJ obvious) (NNS clues))
    (. .)))

dep(clues-3, Just-1)
amod(clues-3, obvious-2)
root(ROOT-0, clues-3)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (MD might)
      (ADVP (RB as) (RB well))
      (VP (VB be)
        (VP (VBN spelled)
          (PRT (RP out))
          (PP (IN in)
            (NP
              (NP (NNS words))
              (PP (IN of)
                (NP (NNP English))))))))
    (. .)))

nsubjpass(spelled-7, It-2)
aux(spelled-7, might-3)
advmod(well-5, as-4)
mwe(well-5, as-4)
advmod(spelled-7, well-5)
auxpass(spelled-7, be-6)
root(ROOT-0, spelled-7)
prt(spelled-7, out-8)
prep_in(spelled-7, words-10)
prep_of(words-10, English-12)

