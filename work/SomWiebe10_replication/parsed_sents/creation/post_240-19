(ROOT
  (S
    (ADVP (RB However))
    (PRN (, ,)
      (S
        (NP (NNP Keith) (NNP Robison))
        (VP (VBD described)
          (NP (DT a)
            (ADJP (RB very) (JJ similar))
            (NN example))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (JJ simple) (JJ evolutionary) (NNS processes))
              (VP (VBP lead)
                (PP (TO to)
                  (NP
                    (NP (DT a) (NN system))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ is)
                          (NP
                            (NP (NNP IC))
                            (PRN (-LRB- -LRB-)
                              (NP (NN http:\/\/www.talkorigins.org\/faqs\/behe\/review.html))
                              (-RRB- -RRB-)))
                          (ADVP (RB So))))))))))))
      (, ,))
    (NP
      (NP (NN duplication))
      (CC plus)
      (NP
        (NP (DT a) (NN loss))
        (PP (IN of)
          (NP (NN function))))
      (, ,)
      (PP (CC plus)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (CD two) (JJ different) (JJ loss-of-function) (NNS mutations))))))
    (VP (MD can)
      (VP (VB convert)
        (NP (DT a) (JJ single) (NN step) (NN pathway))
        (PP (IN into)
          (NP (DT a) (CD two) (NN step) (NN cascade)))))
    (. .)))

advmod(convert-41, However-1)
nn(Robison-4, Keith-3)
nsubj(described-5, Robison-4)
parataxis(convert-41, described-5)
det(example-9, a-6)
advmod(similar-8, very-7)
amod(example-9, similar-8)
dobj(described-5, example-9)
advmod(lead-14, where-10)
amod(processes-13, simple-11)
amod(processes-13, evolutionary-12)
nsubj(lead-14, processes-13)
advcl(described-5, lead-14)
det(system-17, a-16)
prep_to(lead-14, system-17)
nsubj(IC-20, system-17)
cop(IC-20, is-19)
rcmod(system-17, IC-20)
appos(IC-20, http:\/\/www.talkorigins.org\/faqs\/behe\/review.html-22)
advmod(IC-20, So-24)
nsubj(convert-41, duplication-26)
det(loss-29, a-28)
conj_plus(duplication-26, loss-29)
nsubj(convert-41, loss-29)
prep_of(loss-29, function-31)
conj_plus(duplication-26, plus-33)
prep(duplication-26, plus-33)
nsubj(convert-41, plus-33)
dep(plus-33, one-34)
num(mutations-39, two-36)
amod(mutations-39, different-37)
amod(mutations-39, loss-of-function-38)
prep_of(one-34, mutations-39)
aux(convert-41, can-40)
root(ROOT-0, convert-41)
det(pathway-45, a-42)
amod(pathway-45, single-43)
nn(pathway-45, step-44)
dobj(convert-41, pathway-45)
det(cascade-50, a-47)
num(cascade-50, two-48)
nn(cascade-50, step-49)
prep_into(convert-41, cascade-50)

