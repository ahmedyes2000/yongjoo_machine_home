(ROOT
  (S
    (ADVP (RB Yes))
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB fully) (JJ aware)
        (SBAR
          (WHNP (WP what))
          (SINV
            (NP (DT a) (NNP Solar) (NNP Eclipse))
            (VP (VBZ is))
            (. .)))))
    (. .)))

advmod(aware-5, Yes-1)
nsubj(aware-5, I-2)
cop(aware-5, 'm-3)
advmod(aware-5, fully-4)
root(ROOT-0, aware-5)
dep(is-10, what-6)
det(Eclipse-9, a-7)
nn(Eclipse-9, Solar-8)
nsubj(is-10, Eclipse-9)
dep(aware-5, is-10)

(ROOT
  (S
    (NP (DT the) (NN point))
    (VP (VBD was)
      (NP
        (NP (DT that))
        (RRC
          (ADVP (RB not) (RB only))
          (NP
            (SQ (VBP do)
              (NP (PRP they))
              (VP (VB line)
                (PRT (RP up))
                (NP (DT the) (NN sun)
                  (CC and)
                  (NN moon))))
            (VP (VB fill)
              (NP (DT each) (JJ other))
              (ADVP (RB precisely)))))))
    (. .)))

det(point-2, the-1)
nsubj(that-4, point-2)
cop(that-4, was-3)
root(ROOT-0, that-4)
dep(only-6, not-5)
advmod(fill-15, only-6)
aux(line-9, do-7)
nsubj(line-9, they-8)
dep(fill-15, line-9)
prt(line-9, up-10)
det(sun-12, the-11)
dobj(line-9, sun-12)
dobj(line-9, moon-14)
conj_and(sun-12, moon-14)
rcmod(that-4, fill-15)
det(other-17, each-16)
dobj(fill-15, other-17)
advmod(fill-15, precisely-18)

(ROOT
  (S
    (S
      (ADVP (RB Also))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ silly)
          (S
            (VP (TO to)
              (VP (VB assume)
                (SBAR
                  (S
                    (NP (PRP$ our) (NNS eyes))
                    (VP (MD would)
                      (VP (VB adapt)
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN pitch) (NN black))
                            (PP (IN of)
                              (NP (NN night)))))
                        (SBAR (IN if)
                          (S
                            (NP (EX there))
                            (VP (VBD was)
                              (NP (DT no) (NN moon)))))))))))))))
    (: ...)
    (S
      (NP (PDT half) (DT the) (NN day))
      (NP (PRP we))
      (VP (MD would)
        (ADVP (RB still))
        (VP (VB be)
          (PP (IN in)
            (NP (NN sunlight))))))
    (. .)))

advmod(silly-5, Also-1)
nsubj(silly-5, it-3)
cop(silly-5, 's-4)
root(ROOT-0, silly-5)
aux(assume-7, to-6)
xcomp(silly-5, assume-7)
poss(eyes-9, our-8)
nsubj(adapt-11, eyes-9)
aux(adapt-11, would-10)
ccomp(assume-7, adapt-11)
det(black-15, the-13)
nn(black-15, pitch-14)
prep_to(adapt-11, black-15)
prep_of(black-15, night-17)
mark(was-20, if-18)
expl(was-20, there-19)
advcl(adapt-11, was-20)
det(moon-22, no-21)
nsubj(was-20, moon-22)
predet(day-26, half-24)
det(day-26, the-25)
tmod(be-30, day-26)
nsubj(be-30, we-27)
aux(be-30, would-28)
advmod(be-30, still-29)
parataxis(silly-5, be-30)
prep_in(be-30, sunlight-32)

(ROOT
  (S
    (NP (RB Even) (JJ nocturnal) (NNS animals))
    (VP (VBP require)
      (FRAG
        (ADJP (JJ light)
          (PP (IN at)
            (NP (NN night))))
        (S
          (VP (TO to)
            (VP (VB see))))
        (. .)))
    (. .)))

advmod(animals-3, Even-1)
amod(animals-3, nocturnal-2)
nsubj(require-4, animals-3)
root(ROOT-0, require-4)
dep(require-4, light-5)
prep_at(light-5, night-7)
aux(see-9, to-8)
dep(light-5, see-9)

(ROOT
  (S
    (NP (PRP they))
    (ADVP (RB just))
    (VP (VBP make)
      (NP
        (NP (JJR better) (NN use))
        (PP (IN of)
          (NP (PRP it))))
      (PP (IN by)
        (S
          (NP (PRP it))
          (VP (VBG reflecting)
            (PRT (RP off))
            (NP
              (NP (DT the) (NN back))
              (PP (IN of)
                (NP (DT the) (NN eye))))))))
    (. .)))

nsubj(make-3, they-1)
advmod(make-3, just-2)
root(ROOT-0, make-3)
amod(use-5, better-4)
dobj(make-3, use-5)
prep_of(use-5, it-7)
nsubj(reflecting-10, it-9)
prepc_by(make-3, reflecting-10)
prt(reflecting-10, off-11)
det(back-13, the-12)
dobj(reflecting-10, back-13)
det(eye-16, the-15)
prep_of(back-13, eye-16)

(ROOT
  (FRAG
    (ADJP (FW Anyway) (. .))
    (. .)))

root(ROOT-0, Anyway-1)

(ROOT
  (S
    (NP
      (NP (DT the) (NN list))
      (PP (IN of)
        (NP
          (NP (NNS things))
          (PP (IN in)
            (NP
              (NP (DT this) (NN world))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBP reveal)
                    (SBAR (IN that)
                      (S
                        (NP (PRP they))
                        (VP (VBD were)
                          (VP (VBN designed)
                            (PP (IN for)
                              (NP (PRP$ our) (NN habitation)))))))))))))))
    (VP (VBZ is)
      (ADJP (RB as) (JJ long)
        (PP (IN as)
          (NP
            (NP (DT the) (NN list))
            (PP (IN of)
              (NP
                (NP (NNS things))
                (PP (IN in)
                  (NP (DT this) (NN world)))))))))
    (: ...)))

det(list-2, the-1)
nsubj(long-19, list-2)
prep_of(list-2, things-4)
det(world-7, this-6)
prep_in(things-4, world-7)
nsubj(reveal-9, world-7)
rcmod(world-7, reveal-9)
complm(designed-13, that-10)
nsubjpass(designed-13, they-11)
auxpass(designed-13, were-12)
ccomp(reveal-9, designed-13)
poss(habitation-16, our-15)
prep_for(designed-13, habitation-16)
cop(long-19, is-17)
advmod(long-19, as-18)
root(ROOT-0, long-19)
det(list-22, the-21)
prep_as(long-19, list-22)
prep_of(list-22, things-24)
det(world-27, this-26)
prep_in(things-24, world-27)

(ROOT
  (SBAR (IN if)
    (S
      (NP (PRP you))
      (VP (MD ca) (RB n't)
        (VP (`` ``) (VB see) ('' '')
          (NP (DT that)))))
    (: ...)))

mark(see-6, if-1)
nsubj(see-6, you-2)
aux(see-6, ca-3)
neg(see-6, n't-4)
root(ROOT-0, see-6)
dobj(see-6, that-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP guess)
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD ca) (RB n't)
            (VP (VB change)
              (NP (PRP it)))))))
    (. .)))

nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
nsubj(change-6, I-3)
aux(change-6, ca-4)
neg(change-6, n't-5)
ccomp(guess-2, change-6)
dobj(change-6, it-7)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (MD would) (RB not)
        (VP (VB happen)
          (PP (IN by)
            (NP (NN chance))))))
    (: ...)
    (S
      (PP (IN for)
        (NP
          (NP (NN example))
          (SBAR (IN if)
            (S
              (NP (PRP it))
              (VP (VBD were)
                (ADJP (JJ possible)
                  (S
                    (VP (TO to)
                      (VP (VB stand)
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NN surface))
                            (PP (IN of)
                              (NP (NNP Jupiter))))))))))))))
      (NP (PRP I))
      (ADVP (RB highly))
      (VP (VBP doubt)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT any) (CD 1))
              (PP (IN of)
                (NP
                  (NP (PRP it) (POS 's))
                  (CD 63) (JJ orbiting) (NNS bodies))))
            (VP (MD would)
              (VP (VB exhibit)
                (NP (DT the) (JJ same) (NN effect))))))))
    (. .)))

nsubj(happen-4, This-1)
aux(happen-4, would-2)
neg(happen-4, not-3)
root(ROOT-0, happen-4)
prep_by(happen-4, chance-6)
prep_for(doubt-23, example-9)
mark(possible-13, if-10)
nsubj(possible-13, it-11)
cop(possible-13, were-12)
dep(example-9, possible-13)
aux(stand-15, to-14)
xcomp(possible-13, stand-15)
det(surface-18, the-17)
prep_on(stand-15, surface-18)
prep_of(surface-18, Jupiter-20)
nsubj(doubt-23, I-21)
advmod(doubt-23, highly-22)
parataxis(happen-4, doubt-23)
complm(exhibit-34, that-24)
det(1-26, any-25)
nsubj(exhibit-34, 1-26)
poss(bodies-32, it-28)
num(bodies-32, 63-30)
amod(bodies-32, orbiting-31)
prep_of(1-26, bodies-32)
aux(exhibit-34, would-33)
ccomp(doubt-23, exhibit-34)
det(effect-37, the-35)
amod(effect-37, same-36)
dobj(exhibit-34, effect-37)

(ROOT
  (S
    (NP (DT The) (NN point))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN moon))
            (PP (TO to)
              (NP (NN sun) (NN ratio))))
          (VP (VBZ causes)
            (S
              (NP (PRP them))
              (VP (TO to)
                (VP (VB appear)
                  (NP
                    (NP (DT the) (JJ exact) (NN size))
                    (FRAG (: ...)
                      (VP (VBD got)
                        (NP (PRP it)))
                      (. ?)))))))
          (. .))))
    (. .)))

det(point-2, The-1)
nsubj(is-3, point-2)
root(ROOT-0, is-3)
complm(causes-10, that-4)
det(moon-6, the-5)
nsubj(causes-10, moon-6)
nn(ratio-9, sun-8)
prep_to(moon-6, ratio-9)
ccomp(is-3, causes-10)
nsubj(size-16, them-11)
aux(size-16, to-12)
cop(size-16, appear-13)
det(size-16, the-14)
amod(size-16, exact-15)
xcomp(causes-10, size-16)
dep(size-16, got-18)
dobj(got-18, it-19)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP are)
      (NP (DT the) (NNS odds)))
    (. ?)))

attr(are-2, What-1)
root(ROOT-0, are-2)
det(odds-4, the-3)
nsubj(are-2, odds-4)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NN planet))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (NN life))
          (VP (VBZ exists)))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ only) (NN planet))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT this) (NN spectacle))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN enjoyed))))))))
    (: ...)))

det(planet-3, The-1)
amod(planet-3, only-2)
nsubj(planet-10, planet-3)
advmod(exists-6, where-4)
nsubj(exists-6, life-5)
rcmod(planet-3, exists-6)
cop(planet-10, is-7)
det(planet-10, the-8)
amod(planet-10, only-9)
root(ROOT-0, planet-10)
advmod(enjoyed-16, where-11)
det(spectacle-13, this-12)
nsubjpass(enjoyed-16, spectacle-13)
aux(enjoyed-16, can-14)
auxpass(enjoyed-16, be-15)
rcmod(planet-10, enjoyed-16)

(ROOT
  (S (CC And)
    (NP (DT the) (NN moon))
    (VP (VBZ is)
      (ADJP (JJ essential)
        (PP (TO to)
          (NP (NN life))))
      (SBAR (IN since)
        (S
          (NP (PRP it))
          (VP (VBZ stabilizes)
            (NP (PRP$ our) (NN tilt))
            (PP (IN on)
              (NP (PRP$ our) (NNS axis)))))
        (. .)))
    (. .)))

cc(essential-5, And-1)
det(moon-3, the-2)
nsubj(essential-5, moon-3)
cop(essential-5, is-4)
root(ROOT-0, essential-5)
prep_to(essential-5, life-7)
mark(stabilizes-10, since-8)
nsubj(stabilizes-10, it-9)
advcl(essential-5, stabilizes-10)
poss(tilt-12, our-11)
dobj(stabilizes-10, tilt-12)
poss(axis-15, our-14)
prep_on(stabilizes-10, axis-15)

(ROOT
  (S
    (PP (IN without)
      (NP (PRP it)))
    (NP (DT the) (NN earth))
    (VP (MD would)
      (VP (VB wobble)
        (S
          (VP (VBG causing)
            (NP (JJ massive) (NN climate) (NN change))))))
    (. .)))

prep_without(wobble-6, it-2)
det(earth-4, the-3)
nsubj(wobble-6, earth-4)
aux(wobble-6, would-5)
root(ROOT-0, wobble-6)
xcomp(wobble-6, causing-7)
amod(change-10, massive-8)
nn(change-10, climate-9)
dobj(causing-7, change-10)

(ROOT
  (S
    (NP (DT These) (NNS things))
    (VP (VBP show)
      (NP (NN design)))
    (. .) (. .)))

det(things-2, These-1)
nsubj(show-3, things-2)
root(ROOT-0, show-3)
dobj(show-3, design-4)

(ROOT
  (FRAG (RB not) (: accident)
    (SBAR
      (WHNP (WDT which))
      (S
        (VP (VBZ is)
          (NP (DT the) (NN point)))))
    (. .)))

root(ROOT-0, not-1)
punct(not-1, accident-2)
nsubj(point-6, which-3)
cop(point-6, is-4)
det(point-6, the-5)
dep(not-1, point-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ afraid)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADVP (RB completely))
              (VP (VBG missing)
                (NP (DT that) (NN point))
                (ADVP (RB though))))))))
    (: ...)))

nsubj(afraid-3, I-1)
cop(afraid-3, 'm-2)
root(ROOT-0, afraid-3)
nsubj(missing-7, you-4)
aux(missing-7, are-5)
advmod(missing-7, completely-6)
dep(afraid-3, missing-7)
det(point-9, that-8)
dobj(missing-7, point-9)
advmod(missing-7, though-10)

