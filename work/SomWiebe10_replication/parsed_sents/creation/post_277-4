(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB always))
    (VP
      (VP (VBZ has)
        (VP (VBN been)))
      (CC and)
      (VP
        (ADVP (RB always))
        (MD will)
        (VP (VB be)
          (ADJP (JJ impossible)
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP (DT a) (NN design))
                  (PP (IN without)
                    (NP (DT a) (NN designer))))))))))
    (. .)))

nsubj(been-4, It-1)
nsubj(impossible-9, It-1)
advmod(been-4, always-2)
aux(been-4, has-3)
root(ROOT-0, been-4)
advmod(impossible-9, always-6)
aux(impossible-9, will-7)
cop(impossible-9, be-8)
conj_and(been-4, impossible-9)
aux(have-11, to-10)
xcomp(impossible-9, have-11)
det(design-13, a-12)
dobj(have-11, design-13)
det(designer-16, a-15)
prep_without(have-11, designer-16)

