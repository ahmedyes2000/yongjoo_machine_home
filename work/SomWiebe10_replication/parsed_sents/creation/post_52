(ROOT
  (S
    (SBAR
      (PRN (: --)
        (NP (NNP Highlander))
        (: --))
      (S
        (NP (NNP PvM))
        (VP (VBZ seems)
          (ADJP (JJ unaware)))))
    (NP (NN randomness)
      (CC and)
      (NN design))
    (VP (VBP are)
      (NP
        (ADJP (RB mutually) (JJ exclusive))
        (NNS concepts)))
    (. .)))

dep(unaware-6, Highlander-2)
nsubj(unaware-6, PvM-4)
cop(unaware-6, seems-5)
dep(concepts-13, unaware-6)
nsubj(concepts-13, randomness-7)
conj_and(randomness-7, design-9)
nsubj(concepts-13, design-9)
cop(concepts-13, are-10)
advmod(exclusive-12, mutually-11)
amod(concepts-13, exclusive-12)
root(ROOT-0, concepts-13)

(ROOT
  (S
    (ADVP (RB Pray))
    (VP (VB tell)
      (VP (VBN given)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP have)
              (VP (VBN shown)
                (NP (PRP you))
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (NNP ID))
                    (VP (VBZ defines)
                      (NP (NN design))
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (NP
                              (NP (DT the) (VBN set) (JJ theoretic) (NN complement))
                              (PP (IN of)
                                (NP (DT the) (NN disjunction) (NN regularity-or-chance))))))))))))))))
    (. .)))

advmod(tell-2, Pray-1)
root(ROOT-0, tell-2)
dep(tell-2, given-3)
complm(shown-7, that-4)
nsubj(shown-7, I-5)
aux(shown-7, have-6)
ccomp(given-3, shown-7)
dobj(shown-7, you-8)
advmod(defines-11, how-9)
nsubj(defines-11, ID-10)
dep(shown-7, defines-11)
dobj(defines-11, design-12)
aux(complement-18, to-13)
cop(complement-18, be-14)
det(complement-18, the-15)
amod(complement-18, set-16)
amod(complement-18, theoretic-17)
xcomp(defines-11, complement-18)
det(regularity-or-chance-22, the-20)
nn(regularity-or-chance-22, disjunction-21)
prep_of(complement-18, regularity-or-chance-22)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (DT the)
        (ADJP
          (QP ($ $) (CD 1M)))
        (NN dollar) (NN question)))
    (. .)))

nsubj(question-7, That-1)
cop(question-7, 's-2)
det(question-7, the-3)
num(question-7, $-4)
number($-4, 1M-5)
nn(question-7, dollar-6)
root(ROOT-0, question-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB buy)
              (NP
                (NP (DT a) (NN vowel))
                (, ,)
                (NP (NNP Alex.))))))))))

nsubj(like-3, I-1)
xsubj(buy-5, I-1)
aux(like-3, would-2)
root(ROOT-0, like-3)
aux(buy-5, to-4)
xcomp(like-3, buy-5)
det(vowel-7, a-6)
dobj(buy-5, vowel-7)
appos(vowel-7, Alex.-9)

(ROOT
  (S (CC Or)
    (ADVP (RB perhaps))
    (NP (PRP I))
    (VP (MD should)
      (VP (VB translate)
        (NP (DT this)
          (ADJP (RB somewhat) (JJ technical))
          (NN phrase))))
    (. ?)))

cc(translate-5, Or-1)
advmod(translate-5, perhaps-2)
nsubj(translate-5, I-3)
aux(translate-5, should-4)
root(ROOT-0, translate-5)
det(phrase-9, this-6)
advmod(technical-8, somewhat-7)
amod(phrase-9, technical-8)
dobj(translate-5, phrase-9)

(ROOT
  (S
    (VP (VB Let)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP attempt)
            (S
              (VP (TO to)
                (VP (VB explain))))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(attempt-3, me-2)
xsubj(explain-5, me-2)
ccomp(Let-1, attempt-3)
aux(explain-5, to-4)
xcomp(attempt-3, explain-5)

(ROOT
  (S
    (NP (NNP Design))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (NN compliment))
          (PRN (-LRB- -LRB-)
            (ADJP (RB mutually) (JJ exclusive))
            (-RRB- -RRB-)))
        (PP (IN of)
          (NP (JJ regularity-or-chance) (NNS explanations)))))
    (. .)))

nsubj(compliment-4, Design-1)
cop(compliment-4, is-2)
det(compliment-4, the-3)
root(ROOT-0, compliment-4)
advmod(exclusive-7, mutually-6)
dep(compliment-4, exclusive-7)
amod(explanations-11, regularity-or-chance-10)
prep_of(compliment-4, explanations-11)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (ADJP (JJ wrong)
          (PP (IN in)
            (NP (DT the) (NN sense))))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD may)
              (VP (VB ignore)
                (NP (DT the) (NN fact))
                (SBAR (IN that)
                  (S
                    (NP (NN randomness))
                    (VP (MD can)
                      (ADVP (IN in) (NN fact))
                      (VP (VB be)
                        (NP
                          (NP (DT an) (NN attribute))
                          (PP (IN of)
                            (NP (DT a) (NN designer))))))))))))))
    (CC and)
    (S
      (PP (IN of)
        (NP (NN course)))
      (, ,)
      (NP
        (NP (DT the) (JJ simplistic) (NN statement))
        (SBAR (IN that)
          (S
            (NP (NN randomness)
              (CC and)
              (NN design))
            (VP (VBP are)
              (ADJP (RB mutually) (JJ exclusive))))))
      (ADVP (RB only))
      (VP (VBZ captures)
        (NP
          (NP (NN part))
          (PP (IN of)
            (NP (DT the) (NNP ID) (NN argument))))))
    (. .)))

prep_of(wrong-6, course-2)
nsubj(wrong-6, this-4)
cop(wrong-6, is-5)
root(ROOT-0, wrong-6)
det(sense-9, the-8)
prep_in(wrong-6, sense-9)
complm(ignore-13, that-10)
nsubj(ignore-13, it-11)
aux(ignore-13, may-12)
ccomp(wrong-6, ignore-13)
det(fact-15, the-14)
dobj(ignore-13, fact-15)
complm(attribute-23, that-16)
nsubj(attribute-23, randomness-17)
aux(attribute-23, can-18)
advmod(attribute-23, in-19)
dep(in-19, fact-20)
cop(attribute-23, be-21)
det(attribute-23, an-22)
ccomp(ignore-13, attribute-23)
det(designer-26, a-25)
prep_of(attribute-23, designer-26)
prep_of(captures-42, course-29)
det(statement-33, the-31)
amod(statement-33, simplistic-32)
nsubj(captures-42, statement-33)
complm(exclusive-40, that-34)
nsubj(exclusive-40, randomness-35)
conj_and(randomness-35, design-37)
nsubj(exclusive-40, design-37)
cop(exclusive-40, are-38)
advmod(exclusive-40, mutually-39)
dep(statement-33, exclusive-40)
advmod(captures-42, only-41)
conj_and(wrong-6, captures-42)
dobj(captures-42, part-43)
det(argument-47, the-45)
nn(argument-47, ID-46)
prep_of(part-43, argument-47)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG focusing)
          (PP (IN on)
            (NP (JJ pure) (NN chance))))))
    (, ,)
    (NP (NNP Highlander))
    (VP (VBZ has)
      (VP (VBN shown)
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP
              (VP (VBZ does) (RB not)
                (VP (VB understand)
                  (NP (DT the) (NNP ID) (NN argument))))
              (CC and)
              (VP (VBZ has)
                (VP (VBN highlighted)
                  (NP
                    (NP (CD one))
                    (PP (IN of)
                      (NP (DT the) (JJ major) (NNS problems))))
                  (PP (IN for)
                    (NP (NNP ID)))
                  (, ,)
                  (SBAR
                    (ADVP (RB namely))
                    (IN that)
                    (S
                      (NP (NN regularity)
                        (CC and)
                        (NN chance))
                      (VP (MD can)
                        (VP (VB explain)
                          (NP (NN information)
                            (CC and)
                            (NN complexity))
                          (ADVP (RB quite) (RB well)))))))))))))
    (. .)))

prepc_by(shown-9, focusing-2)
amod(chance-5, pure-4)
prep_on(focusing-2, chance-5)
nsubj(shown-9, Highlander-7)
aux(shown-9, has-8)
root(ROOT-0, shown-9)
complm(understand-14, that-10)
nsubj(understand-14, he-11)
nsubj(highlighted-20, he-11)
aux(understand-14, does-12)
neg(understand-14, not-13)
ccomp(shown-9, understand-14)
det(argument-17, the-15)
nn(argument-17, ID-16)
dobj(understand-14, argument-17)
aux(highlighted-20, has-19)
ccomp(shown-9, highlighted-20)
conj_and(understand-14, highlighted-20)
dobj(highlighted-20, one-21)
det(problems-25, the-23)
amod(problems-25, major-24)
prep_of(one-21, problems-25)
prep_for(highlighted-20, ID-27)
advmod(explain-35, namely-29)
dep(explain-35, that-30)
nsubj(explain-35, regularity-31)
conj_and(regularity-31, chance-33)
nsubj(explain-35, chance-33)
aux(explain-35, can-34)
dep(highlighted-20, explain-35)
dobj(explain-35, information-36)
dobj(explain-35, complexity-38)
conj_and(information-36, complexity-38)
advmod(well-40, quite-39)
advmod(explain-35, well-40)

(ROOT
  (S
    (SBAR (IN Until)
      (S
        (NP (PRP we))
        (VP (VB clarify)
          (NP (DT the) (NN terminology)))))
    (, ,)
    (NP
      (NP (NN highlander) (POS 's))
      (NNS arguments))
    (VP (VBP seem)
      (ADJP (JJ irrelevant))
      (SBAR
        (ADVP (IN at) (JJS best))
        (IN as)
        (S
          (NP (PRP they))
          (VP (VBP argue)
            (NP
              (NP (DT a) (NN strawman) (NN version))
              (PP (IN of)
                (NP (NN reality))))))))
    (. .)))

mark(clarify-3, Until-1)
nsubj(clarify-3, we-2)
advcl(irrelevant-11, clarify-3)
det(terminology-5, the-4)
dobj(clarify-3, terminology-5)
poss(arguments-9, highlander-7)
nsubj(irrelevant-11, arguments-9)
cop(irrelevant-11, seem-10)
root(ROOT-0, irrelevant-11)
advmod(argue-16, at-12)
pobj(at-12, best-13)
dep(argue-16, as-14)
nsubj(argue-16, they-15)
ccomp(irrelevant-11, argue-16)
det(version-19, a-17)
nn(version-19, strawman-18)
dobj(argue-16, version-19)
prep_of(version-19, reality-21)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (VP (VBD asked)
          (PP (IN for)
            (NP (NNS examples))))))
    (, ,)
    (NP (NNP Highlander))
    (VP (VBZ remains)
      (PP (IN without)
        (NP (DT any)))
      (, ,)
      (S
        (VP (VBG exemplifying)
          (ADVP (RB once) (RB again))
          (NP
            (NP (DT the) (JJ scientific) (NN vacuity))
            (PP (IN of)
              (NP (NNP Intelligent) (NNP Design)))))))
    (. .)))

advmod(asked-2, When-1)
advcl(remains-7, asked-2)
prep_for(asked-2, examples-4)
nsubj(remains-7, Highlander-6)
root(ROOT-0, remains-7)
prep_without(remains-7, any-9)
xcomp(remains-7, exemplifying-11)
advmod(again-13, once-12)
advmod(exemplifying-11, again-13)
det(vacuity-16, the-14)
amod(vacuity-16, scientific-15)
dobj(exemplifying-11, vacuity-16)
nn(Design-19, Intelligent-18)
prep_of(vacuity-16, Design-19)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (PRN (, ,)
      (SBAR (IN if)
        (S
          (NP (NN design))
          (VP (VBZ depends)
            (ADVP (RB so) (RB strongly))
            (PP (IN on)
              (NP (DT this) (NN step))))))
      (, ,))
    (SQ (VBP are)
      (NP
        (NP (NNP ID) (NNS proponents))
        (ADJP (JJ unable)
          (S
            (VP (TO to)
              (VP (VB calculate)
                (NP
                  (NP (DT any) (JJ relevant) (NN measure))
                  (PP (IN of)
                    (NP (NN probability))))
                (PP (IN for)))))))
      (VP (VBN said)
        (PP (RB supposedly)
          (NP (`` ``) (JJ designed) ('' '') (NNS systems)))))
    (. ?)))

advmod(said-24, Why-1)
mark(depends-5, if-3)
nsubj(depends-5, design-4)
dep(said-24, depends-5)
advmod(strongly-7, so-6)
advmod(depends-5, strongly-7)
det(step-10, this-9)
prep_on(depends-5, step-10)
auxpass(said-24, are-12)
nn(proponents-14, ID-13)
nsubjpass(said-24, proponents-14)
amod(proponents-14, unable-15)
aux(calculate-17, to-16)
xcomp(unable-15, calculate-17)
det(measure-20, any-18)
amod(measure-20, relevant-19)
dobj(calculate-17, measure-20)
prep_of(measure-20, probability-22)
prep(calculate-17, for-23)
root(ROOT-0, said-24)
prep(said-24, supposedly-25)
amod(systems-29, designed-27)
pobj(supposedly-25, systems-29)

