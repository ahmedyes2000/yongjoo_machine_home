(ROOT
  (S
    (S
      (NP (NNP and))
      (VP (MD could)
        (VP (VB predict)
          (NP (DT the) (JJ next) (NN one)))))
    (, ,)
    (NP (EX there))
    (VP (MD would)
      (ADVP (RB still))
      (VP (VB be)
        (NP
          (NP (DT the) (NN question))
          (PP (IN of)
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP (PRP it))
                (VP (VBD was)
                  (VP (VBN set)
                    (PRT (RP up))
                    (NP (DT that) (NN way))))))))))
    (. .)))

nsubj(predict-3, and-1)
aux(predict-3, could-2)
ccomp(question-13, predict-3)
det(one-6, the-4)
amod(one-6, next-5)
dobj(predict-3, one-6)
expl(question-13, there-8)
aux(question-13, would-9)
advmod(question-13, still-10)
cop(question-13, be-11)
det(question-13, the-12)
root(ROOT-0, question-13)
advmod(set-18, why-15)
nsubjpass(set-18, it-16)
auxpass(set-18, was-17)
prepc_of(question-13, set-18)
prt(set-18, up-19)
det(way-21, that-20)
dobj(set-18, way-21)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (ADVP (RB never))
      (VP (VB answer)
        (NP (DT that))))
    (. .)))

nsubj(answer-4, You-1)
aux(answer-4, can-2)
neg(answer-4, never-3)
root(ROOT-0, answer-4)
dobj(answer-4, that-5)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ evolutionary) (NN track))
      (PRN (, ,)
        (SBAR (IN while)
          (FRAG
            (ADJP (JJ useful))))
        (, ,)))
    (VP (VBZ is)
      (VP (VBN blocked)
        (PP (IN by)
          (NP (NN time)))))
    (. .)))

det(track-3, The-1)
amod(track-3, evolutionary-2)
nsubjpass(blocked-9, track-3)
mark(useful-6, while-5)
dep(track-3, useful-6)
auxpass(blocked-9, is-8)
root(ROOT-0, blocked-9)
agent(blocked-9, time-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD can)
      (ADVP (RB never))
      (VP (VB reveal)
        (NP (DT the) (NN why))
        (ADVP (RB either))))
    (. .)))

nsubj(reveal-4, It-1)
aux(reveal-4, can-2)
neg(reveal-4, never-3)
root(ROOT-0, reveal-4)
det(why-6, the-5)
dobj(reveal-4, why-6)
advmod(reveal-4, either-7)

(ROOT
  (S
    (NP (DT Those))
    (VP (VBP are)
      (NP
        (NP
          (NP (DT the) (NNS questions))
          (NP (DT each)))
        (PP (IN of)
          (NP
            (S
              (NP (PRP us))
              (VP (MD must)
                (VP (VB come)
                  (PP (TO to)
                    (NP (NNS terms)))
                  (PP (IN with)))))
            (, ,)
            (CONJP (IN if) (RB not))
            (NP
              (NP (NN answer))
              (, ,)
              (PP (IN for)
                (NP (PRP ourselves))))))))
    (. .)))

nsubj(questions-4, Those-1)
cop(questions-4, are-2)
det(questions-4, the-3)
root(ROOT-0, questions-4)
dep(questions-4, each-5)
nsubj(come-9, us-7)
aux(come-9, must-8)
prep_of(questions-4, come-9)
prep_to(come-9, terms-11)
prep(come-9, with-12)
prep_of(questions-4, answer-16)
conj_negcc(come-9, answer-16)
prep_for(answer-16, ourselves-19)

(ROOT
  (S
    (NP (NNP Religion))
    (VP (VBZ does)
      (VP (VB provide)
        (NP
          (NP (DT a) (NN framework))
          (PP (IN for)
            (NP (JJ many) (NNS people))))))
    (. .)))

nsubj(provide-3, Religion-1)
aux(provide-3, does-2)
root(ROOT-0, provide-3)
det(framework-5, a-4)
dobj(provide-3, framework-5)
amod(people-8, many-7)
prep_for(framework-5, people-8)

(ROOT
  (S
    (NP
      (NP (DT A)
        (ADJP (RBR more) (JJ interesting))
        (NN thought))
      (PP (IN for)
        (NP (PRP me))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (PP (IN in)
            (NP
              (NP (NNP Buddhism))
              (, ,)
              (NP (DT the) (NN question))))
          (NP (PRP itself))
          (VP (VBZ is)
            (VP (VBN considered)
              (S
                (ADJP (JJ irrelevant))))))))
    (. .)))

det(thought-4, A-1)
advmod(interesting-3, more-2)
amod(thought-4, interesting-3)
nsubj(is-7, thought-4)
prep_for(thought-4, me-6)
root(ROOT-0, is-7)
complm(considered-16, that-8)
prep_in(considered-16, Buddhism-10)
det(question-13, the-12)
appos(Buddhism-10, question-13)
nsubjpass(considered-16, itself-14)
auxpass(considered-16, is-15)
ccomp(is-7, considered-16)
acomp(considered-16, irrelevant-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (SBAR
        (SBAR (IN whether)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT a) (NNP God))
                (, ,)
                (CC or)
                (NP
                  (NP (DT any) (NN issue))
                  (PP (IN of)
                    (NP (NN theology)))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ resonates)))))))))
        (, ,)
        (CC but)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (VBP do)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP adjust)
                    (NP (PRP myself))))))))))
    (. ?)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
neg('s-2, not-3)
complm(is-6, whether-4)
expl(is-6, there-5)
ccomp('s-2, is-6)
det(God-8, a-7)
nsubj(is-6, God-8)
nsubj(do-20, God-8)
det(issue-12, any-11)
nsubj(is-6, issue-12)
conj_or(God-8, issue-12)
nsubj(resonates-16, issue-12)
prep_of(issue-12, theology-14)
rcmod(issue-12, resonates-16)
advmod(do-20, how-19)
ccomp('s-2, do-20)
conj_but(is-6, do-20)
nsubj(adjust-22, I-21)
ccomp(do-20, adjust-22)
dobj(adjust-22, myself-23)

