(ROOT
  (S (`` ``)
    (S
      (NP (EX There))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN definition))
          (PP (IN of) ('' '')
            (NP (JJ intelligent) (NN design))))))
    ('' '')
    (NP (DT that))
    (VP (MD would)
      (VP (VB allow)
        (NP (DT a) (NN scientist)
          (S
            (VP (TO to)
              (VP (VB determine)
                (SBAR (IN if)
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (ADJP (JJ right)
                        (CC or)
                        (JJ wrong)))))))))))
    (. .)))

expl(is-3, There-2)
ccomp(allow-13, is-3)
det(definition-5, no-4)
nsubj(is-3, definition-5)
amod(design-9, intelligent-8)
prep_of(definition-5, design-9)
nsubj(allow-13, that-11)
aux(allow-13, would-12)
root(ROOT-0, allow-13)
det(scientist-15, a-14)
dobj(allow-13, scientist-15)
aux(determine-17, to-16)
infmod(scientist-15, determine-17)
mark(right-21, if-18)
nsubj(right-21, it-19)
nsubj(wrong-23, it-19)
cop(right-21, 's-20)
advcl(determine-17, right-21)
advcl(determine-17, wrong-23)
conj_or(right-21, wrong-23)

