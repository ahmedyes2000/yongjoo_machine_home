(ROOT
  (S
    (NP (PRP We))
    (VP (MD would)
      (VP (VB have)
        (NP
          (NP (DT no) (NN idea))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (NN sin))
              (VP (VBZ is) (, ,)
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP it))
                    (VP (VBD came)
                      (PP (IN from))
                      (, ,)
                      (SBAR
                        (WHADVP (WRB why))
                        (S
                          (NP (PRP we))
                          (VP (VBP need)
                            (NP (PRP$ our) (NN relationship))
                            (PP (IN with)
                              (NP
                                (NP (NNP God))
                                (VP (VBN restored))))))))))
                (, ,)
                (SBAR
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (PRP we))
                      (VP (VBP are)
                        (PP (IN above)
                          (NP (NNS animals))))))
                  (, ,)
                  (CC and)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (DT this) (NN world))
                      (VP (VBD came)
                        (S
                          (VP (TO to)
                            (VP (VB be))))))))))))))
    (. .)))

nsubj(have-3, We-1)
aux(have-3, would-2)
root(ROOT-0, have-3)
det(idea-5, no-4)
dobj(have-3, idea-5)
rel(is-8, what-6)
nsubj(is-8, sin-7)
rcmod(idea-5, is-8)
advmod(came-12, where-10)
nsubj(came-12, it-11)
advcl(is-8, came-12)
prep(came-12, from-13)
advmod(need-17, why-15)
nsubj(need-17, we-16)
advcl(came-12, need-17)
poss(relationship-19, our-18)
dobj(need-17, relationship-19)
prep_with(need-17, God-21)
partmod(God-21, restored-22)
advmod(are-26, why-24)
nsubj(are-26, we-25)
dep(is-8, are-26)
prep_above(are-26, animals-28)
advmod(came-34, how-31)
det(world-33, this-32)
nsubj(came-34, world-33)
xsubj(be-36, world-33)
dep(is-8, came-34)
conj_and(are-26, came-34)
aux(be-36, to-35)
xcomp(came-34, be-36)

