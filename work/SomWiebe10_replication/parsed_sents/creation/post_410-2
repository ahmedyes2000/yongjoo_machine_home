(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN life))
        (VP (VBZ is)
          (PP (TO to)
            (NP (NN complex)))
          (S
            (VP (TO to)
              (VP (VB exist)
                (PP (IN without)
                  (NP (DT a) (NN designer)))))))))
    (, ,)
    (ADVP (RB then))
    (NP (DT that) (NN designer))
    (VP (MD can) (RB not)
      (VP (VB be)
        (NP (DT a) (VBG living) (NN thing))))
    (. .)))

mark(is-3, If-1)
nsubj(is-3, life-2)
xsubj(exist-7, life-2)
advcl(thing-20, is-3)
prep_to(is-3, complex-5)
aux(exist-7, to-6)
xcomp(is-3, exist-7)
det(designer-10, a-9)
prep_without(exist-7, designer-10)
advmod(thing-20, then-12)
det(designer-14, that-13)
nsubj(thing-20, designer-14)
aux(thing-20, can-15)
neg(thing-20, not-16)
cop(thing-20, be-17)
det(thing-20, a-18)
amod(thing-20, living-19)
root(ROOT-0, thing-20)

