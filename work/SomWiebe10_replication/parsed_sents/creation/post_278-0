(ROOT
  (S (: --)
    (NP (PRP It))
    (ADVP (RB always))
    (VP
      (VP (VBZ has)
        (VP (VBN been)))
      (CC and)
      (VP
        (ADVP (RB always))
        (MD will)
        (VP (VB be)
          (ADJP (JJ impossible)
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP (DT a) (NN design))
                  (PP (IN without)
                    (NP (DT a) (NN designer))))))))))
    (. .)))

nsubj(been-5, It-2)
nsubj(impossible-10, It-2)
advmod(been-5, always-3)
aux(been-5, has-4)
root(ROOT-0, been-5)
advmod(impossible-10, always-7)
aux(impossible-10, will-8)
cop(impossible-10, be-9)
conj_and(been-5, impossible-10)
aux(have-12, to-11)
xcomp(impossible-10, have-12)
det(design-14, a-13)
dobj(have-12, design-14)
det(designer-17, a-16)
prep_without(have-12, designer-17)

