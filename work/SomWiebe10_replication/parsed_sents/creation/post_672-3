(ROOT
  (SQ (NNP Does)
    (NP (PRP it))
    (VP (VB have)
      (NP (DT a)
        (ADJP (JJ scientific))
        (NN mechanism)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD could)
              (VP (VB explain)
                (CC and)
                (VB predict)
                (NP
                  (NP (DT the) (`` ``) (NN tree))
                  (PP (IN of)
                    (NP (NN life))))))))
        ('' '')))
    (. ?)))

dep(have-3, Does-1)
nsubj(have-3, it-2)
root(ROOT-0, have-3)
det(mechanism-6, a-4)
amod(mechanism-6, scientific-5)
dobj(have-3, mechanism-6)
nsubj(explain-9, that-7)
nsubj(predict-11, that-7)
aux(explain-9, could-8)
ccomp(mechanism-6, explain-9)
ccomp(mechanism-6, predict-11)
conj_and(explain-9, predict-11)
det(tree-14, the-12)
dobj(explain-9, tree-14)
prep_of(tree-14, life-16)

(ROOT
  (S (CC But)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (ADVP (RB no) ('' ''))
        (NP
          (NP (NNP Theory))
          (PP (IN of)
            (NP (NNP Intelligent) (NNP Design))))))
    ('' '')
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD can)
        (ADVP (RB never))
        (VP (VB be)
          (ADJP (JJ scientific)))))
    (. .)))

expl(is-3, there-2)
root(ROOT-0, is-3)
advmod(is-3, no-4)
nsubj(is-3, Theory-6)
nn(Design-9, Intelligent-8)
prep_of(Theory-6, Design-9)
nsubj(scientific-16, it-12)
aux(scientific-16, can-13)
neg(scientific-16, never-14)
cop(scientific-16, be-15)
conj_and(is-3, scientific-16)

