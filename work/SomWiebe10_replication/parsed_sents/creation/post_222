(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBP assert)
        (SBAR (IN that)
          (S
            (S
              (NP (PRP they))
              (VP (VBP have)
                (VP (VBN been)
                  (VP (VBN heard)))))
            (CC and)
            (S
              (NP (PRP$ their) (NNS arguments))
              (VP (VBP have)
                (VP (VBN been)
                  (VP (VBN refuted)))))))))
    (CC and)
    (S
      (ADVP (RB thus))
      (NP (PRP they))
      (VP (VBP are)
        (ADVP (RB legitimately))
        (VP (VBN ignored)
          (SBAR (IN until)
            (S
              (NP (PRP they))
              (VP (VBP come)
                (PRT (RP up))
                (PP (IN with)
                  (NP
                    (NP (DT some) (JJ actual) (JJ scientific) (NN evidence))
                    (CC and)
                    (NP (NNS arguments))))))))))
    (. .)))

nsubj(assert-3, I-2)
root(ROOT-0, assert-3)
complm(heard-8, that-4)
nsubjpass(heard-8, they-5)
aux(heard-8, have-6)
auxpass(heard-8, been-7)
ccomp(assert-3, heard-8)
poss(arguments-11, their-10)
nsubjpass(refuted-14, arguments-11)
aux(refuted-14, have-12)
auxpass(refuted-14, been-13)
ccomp(assert-3, refuted-14)
conj_and(heard-8, refuted-14)
advmod(ignored-20, thus-16)
nsubjpass(ignored-20, they-17)
auxpass(ignored-20, are-18)
advmod(ignored-20, legitimately-19)
conj_and(assert-3, ignored-20)
mark(come-23, until-21)
nsubj(come-23, they-22)
advcl(ignored-20, come-23)
prt(come-23, up-24)
det(evidence-29, some-26)
amod(evidence-29, actual-27)
amod(evidence-29, scientific-28)
prep_with(come-23, evidence-29)
prep_with(come-23, arguments-31)
conj_and(evidence-29, arguments-31)

(ROOT
  (S ('' '')
    (PP (IN At)
      (NP
        (NP (JJS least))
        (VP (VBN Luskin)
          (ADVP (RB actually)))))
    (VP (VBP provide)
      (SBAR
        (S
          (NP (NN something)
            (S
              (VP (TO to)
                (VP (VB back)
                  (PRT (RP up))
                  (NP (PRP$ his))))))
          (`` ``)
          (VP (VBZ asserts)))))
    (. .)))

prep_at(provide-6, least-3)
partmod(least-3, Luskin-4)
advmod(Luskin-4, actually-5)
root(ROOT-0, provide-6)
nsubj(asserts-13, something-7)
aux(back-9, to-8)
infmod(something-7, back-9)
prt(back-9, up-10)
dobj(back-9, his-11)
ccomp(provide-6, asserts-13)

(ROOT
  (S (: :)
    (NP
      (NP (JJ -) (NNS -RRB-) ('' ''))
      (SBAR
        (WHADVP (WRB Where))
        (S
          (PP (IN in)
            (NP (DT the) (NN article)))
          (NP (PRP you))
          (VP (VBP 're)
            (VP (VBG commenting)
              (PRT (RP on)))))))
    (VP (VBZ does)
      (S
        (NP (PRP it))
        (VP (VB use)
          (NP (DT that) (NN value)))))
    (. ?)))

advmod(commenting-11, Where-5)
det(article-8, the-7)
prep_in(commenting-11, article-8)
nsubj(commenting-11, you-9)
aux(commenting-11, 're-10)
rcmod(-RRB--3, commenting-11)
prt(commenting-11, on-12)
root(ROOT-0, does-13)
nsubj(use-15, it-14)
ccomp(does-13, use-15)
det(value-17, that-16)
dobj(use-15, value-17)

(ROOT
  (S (`` ``) (RB So)
    (VP (VBZ what))
    (. ?)))

advmod(what-3, So-2)
root(ROOT-0, what-3)

(ROOT
  (S
    (NP
      (NP
        (QP (CD 3) (CD billion))
        (NNS years))
      (PP (IN of)
        (NP (NN evolution))))
    (VP (VBZ is)
      (NP (DT a) (JJ loooong) (NN time)))
    (. .)))

number(billion-2, 3-1)
num(years-3, billion-2)
nsubj(time-9, years-3)
prep_of(years-3, evolution-5)
cop(time-9, is-6)
det(time-9, a-7)
amod(time-9, loooong-8)
root(ROOT-0, time-9)

(ROOT
  (S ('' '')
    (ADVP (RB Yeah))
    (, ,)
    (ADVP (RB though))
    (NP (DT the) (NN debate))
    (VP (VBZ is)
      (SBAR (IN whether)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (RB long) (JJ enough))))))
    (. .)))

advmod(is-7, Yeah-2)
advmod(is-7, though-4)
det(debate-6, the-5)
nsubj(is-7, debate-6)
root(ROOT-0, is-7)
complm(enough-12, whether-8)
nsubj(enough-12, it-9)
cop(enough-12, 's-10)
advmod(enough-12, long-11)
ccomp(is-7, enough-12)

(ROOT
  (S ('' '')
    (NP (NNP The))
    (VP (VBZ universe)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB see)
              (ADVP (RB so) (RB far)
                (SBAR
                  (S
                    (VP (VBZ is)
                      (ADJP (RB quite) (JJ simple)))))))))))
    (. .)))

nsubj(universe-3, The-2)
root(ROOT-0, universe-3)
complm(see-7, that-4)
nsubj(see-7, we-5)
aux(see-7, can-6)
ccomp(universe-3, see-7)
advmod(far-9, so-8)
advmod(see-7, far-9)
cop(simple-12, is-10)
advmod(simple-12, quite-11)
dep(far-9, simple-12)

(ROOT
  (FRAG ('' '')
    (NP (NNP Yes))
    (, ,)
    (PP (IN in)
      (NP (DT a) (NN sense)))
    (. .)))

root(ROOT-0, Yes-2)
dep(Yes-2, in-4)
det(sense-6, a-5)
pobj(in-4, sense-6)

(ROOT
  (S
    (SBAR (IN Though)
      (S
        (NP (DT no) (NN one))
        (VP (MD can)
          (VP (VB argue)
            (NP (DT the) (NNS laws))))))
    (VP (VBP have)
      (NP (DT no) (NN structure)))
    (. .)))

mark(argue-5, Though-1)
det(one-3, no-2)
nsubj(argue-5, one-3)
aux(argue-5, can-4)
csubj(have-8, argue-5)
det(laws-7, the-6)
dobj(argue-5, laws-7)
root(ROOT-0, have-8)
det(structure-10, no-9)
dobj(have-8, structure-10)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (RB only) (DT the))
        (VP (VBN evolved)
          (NP (NN life) (NNS forms))
          (PP (IN on)
            (NP
              (NP (DT this) (NN Earth))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP appear)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ complex)))))))))))))
    (. .)))

nsubj(the-5, It-2)
cop(the-5, 's-3)
advmod(the-5, only-4)
root(ROOT-0, the-5)
partmod(the-5, evolved-6)
nn(forms-8, life-7)
dobj(evolved-6, forms-8)
det(Earth-11, this-10)
prep_on(evolved-6, Earth-11)
nsubj(appear-13, Earth-11)
rcmod(Earth-11, appear-13)
aux(complex-16, to-14)
cop(complex-16, be-15)
xcomp(appear-13, complex-16)

(ROOT
  (S ('' '')
    (PP (RB Not)
      (S
        (VP (TO to)
          (VP (VB mention)
            (NP
              (NP (DT the) (NN earth))
              (SBAR
                (WHNP (WDT which))))))))
    (VP (VBZ sustains)
      (NP (PRP them)))
    (. .)))

prep(sustains-8, Not-2)
aux(mention-4, to-3)
dep(Not-2, mention-4)
det(earth-6, the-5)
dobj(mention-4, earth-6)
rcmod(earth-6, which-7)
root(ROOT-0, sustains-8)
dobj(sustains-8, them-9)

(ROOT
  (S ('' '')
    (S
      (S
        (NP (PRP It))
        (VP (VBZ is)
          (ADJP (JJ amazing))
          (SBAR (IN that)
            (S
              (NP
                (NP (NNP evolving) (NNP DNA))
                (PP (IN with)
                  (NP
                    (QP (RB only) (CD 4))
                    (NNS components))))
              (VP (MD can)
                (VP (VB produce)
                  (NP
                    (NP (PDT such) (DT a) (NN complexity))
                    (PP (IN of)
                      (NP (NN life))))))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP it))
        (ADVP (RB obviously))
        (VP (VBZ has))))
    (, ,) (IN so)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP (DT no) (NN need)
          (S
            (VP (TO to)
              (VP (VB claim)
                (SBAR (IN that)
                  (S
                    (NP (DT this))
                    (VP (VBZ is) (`` ``)
                      (ADJP (JJ stunning))
                      ('' ''))))))))))
    (. .)))

nsubj(amazing-4, It-2)
cop(amazing-4, is-3)
root(ROOT-0, amazing-4)
complm(produce-13, that-5)
nn(DNA-7, evolving-6)
nsubj(produce-13, DNA-7)
quantmod(4-10, only-9)
num(components-11, 4-10)
prep_with(DNA-7, components-11)
aux(produce-13, can-12)
ccomp(amazing-4, produce-13)
predet(complexity-16, such-14)
det(complexity-16, a-15)
dobj(produce-13, complexity-16)
prep_of(complexity-16, life-18)
nsubj(has-23, it-21)
advmod(has-23, obviously-22)
conj_but(amazing-4, has-23)
dep(amazing-4, so-25)
expl('s-27, there-26)
ccomp(amazing-4, 's-27)
det(need-29, no-28)
nsubj('s-27, need-29)
aux(claim-31, to-30)
infmod(need-29, claim-31)
complm(stunning-36, that-32)
nsubj(stunning-36, this-33)
cop(stunning-36, is-34)
ccomp(claim-31, stunning-36)

(ROOT
  (S ('' '')
    (S
      (INTJ (`` ``) (UH Well))
      (, ,)
      (NP (PRP it))
      (VP (VBZ has) (RB not)
        (VP (VBN happened)
          (PP (IN in)
            (NP (DT the) (JJ last) (CD 20) (NNS years)))
          (SBAR
            (WHADVP (WRB why))
            (S
              (VP (MD should)
                (ADVP (RB there))
                (VP (VB be)
                  (NP (DT the) (JJS slightest) (NN chance)))))))))
    (IN that)
    (S
      (NP (DT this) (JJ non-scientific) (NN nonsense))
      (VP (MD will)
        (VP (`` ``) (VB encourage) ('' '')
          (NP (`` ``)
            (NP (JJ new) (NNS avenues))
            ('' '')
            (PP (IN of)
              (NP (JJ scientific) (NN research))))
          (PP (IN in)
            (NP (DT the) (NN future))))))
    (. ?)))

dep(happened-8, Well-3)
nsubj(happened-8, it-5)
aux(happened-8, has-6)
neg(happened-8, not-7)
root(ROOT-0, happened-8)
det(years-13, the-10)
amod(years-13, last-11)
num(years-13, 20-12)
prep_in(happened-8, years-13)
advmod(chance-20, why-14)
aux(chance-20, should-15)
advmod(chance-20, there-16)
cop(chance-20, be-17)
det(chance-20, the-18)
amod(chance-20, slightest-19)
advcl(happened-8, chance-20)
dep(happened-8, that-21)
det(nonsense-24, this-22)
amod(nonsense-24, non-scientific-23)
nsubj(encourage-27, nonsense-24)
aux(encourage-27, will-25)
ccomp(happened-8, encourage-27)
amod(avenues-31, new-30)
dobj(encourage-27, avenues-31)
amod(research-35, scientific-34)
prep_of(avenues-31, research-35)
det(future-38, the-37)
prep_in(encourage-27, future-38)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (NP (PRP it))
          (VP (VBD did) (RB n't)
            (VP (VB happen)
              (PP (IN by)
                (NP (NNP unguided)))))))
      (VP (VBZ forces)))
    (, ,) (RB then)
    (S
      (INTJ (UH yes))
      (NP (PRP it))
      (VP (VBZ is)))
    (. .)))

mark(happen-6, If-2)
nsubj(happen-6, it-3)
aux(happen-6, did-4)
neg(happen-6, n't-5)
csubj(forces-9, happen-6)
prep_by(happen-6, unguided-8)
root(ROOT-0, forces-9)
advmod(forces-9, then-11)
dep(is-14, yes-12)
nsubj(is-14, it-13)
ccomp(forces-9, is-14)

(ROOT
  (S
    (VP
      (NP
        (NP (NNS http:\/\/www.evolutionnews.org\/2008\/09\/leading_origin_of_life_researc.html))
        ('' '')
        (SBAR
          (FRAG (CC And)
            (RB even)
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBD was) (`` ``)
                  (ADJP (JJ stunning))
                  ('' ''))))))
        (, ,)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT a) (JJ meaningless) (NN adjective))
                (PP (IN with)
                  (NP
                    (NP (NN respect))
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN discussion))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN nonsense))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBZ is) (`` ``)
                                  (NP (JJ intelligent) (NN design))
                                  ('' ''))))))))))))))))
    (. .)))

root(ROOT-0, http:\/\/www.evolutionnews.org\/2008\/09\/leading_origin_of_life_researc.html-1)
dep(even-4, And-3)
dep(http:\/\/www.evolutionnews.org\/2008\/09\/leading_origin_of_life_researc.html-1, even-4)
mark(stunning-9, if-5)
nsubj(stunning-9, it-6)
cop(stunning-9, was-7)
dep(even-4, stunning-9)
nsubj(adjective-16, that-12)
cop(adjective-16, is-13)
det(adjective-16, a-14)
amod(adjective-16, meaningless-15)
rcmod(http:\/\/www.evolutionnews.org\/2008\/09\/leading_origin_of_life_researc.html-1, adjective-16)
det(discussion-21, the-20)
prep_with_respect_to(adjective-16, discussion-21)
det(nonsense-24, the-23)
prep_of(discussion-21, nonsense-24)
nsubj(design-29, nonsense-24)
cop(design-29, is-26)
amod(design-29, intelligent-28)
rcmod(nonsense-24, design-29)

(ROOT
  (FRAG
    (ADJP (JJ ''))
    (SBAR
      (WHNP (WP What))
      (S (`` ``)
        (VP (VBZ nonsense))))
    (. ?)))

nsubj(nonsense-4, What-2)
dep(''-1, nonsense-4)

(ROOT
  (NP
    (NP (`` ``) (NNP Actually))
    (: ...)))


(ROOT
  (NP (: ...) (NNP http:\/\/www.evolutionnews.org\/2008\/06\/more_similarities_between_flag.html) (NNP http:\/\/www.evolutionnews.org\/2008\/01\/biology_replaces_technology_as.html) (NNP http:\/\/www.evolutionnews.org\/2007\/10\/video_molecular_machines_and_t.html) (: ...)))

nn(http:\/\/www.evolutionnews.org\/2007\/10\/video_molecular_machines_and_t.html-4, http:\/\/www.evolutionnews.org\/2008\/06\/more_similarities_between_flag.html-2)
nn(http:\/\/www.evolutionnews.org\/2007\/10\/video_molecular_machines_and_t.html-4, http:\/\/www.evolutionnews.org\/2008\/01\/biology_replaces_technology_as.html-3)
root(ROOT-0, http:\/\/www.evolutionnews.org\/2007\/10\/video_molecular_machines_and_t.html-4)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S (IN so)
    (ADVP (RB therefore))
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (ADJP (RB pretty) (JJ good))
        (NN reason)
        (S
          (VP (TO to)
            (VP (VB assume)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (MD will)))))))))
    (. .)))

dep(is-4, so-1)
advmod(is-4, therefore-2)
expl(is-4, there-3)
root(ROOT-0, is-4)
advmod(good-6, pretty-5)
amod(reason-7, good-6)
nsubj(is-4, reason-7)
aux(assume-9, to-8)
infmod(reason-7, assume-9)
complm(will-12, that-10)
nsubj(will-12, it-11)
ccomp(assume-9, will-12)

(ROOT
  (S ('' '')
    (S (CC And)
      (, ,)
      (SBAR (IN if)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP (DT the) (JJ actual) (NN goal)
              (PP (IN of) ('' '')
                (NP (JJ intelligent) (NN design)))
              ('' '')))))
      (, ,)
      (NP (NNP why))
      (VP (VBZ is)
        (ADVP (RB there))
        (NP (PDT such) (DT an) (NN emphasis))))
    (IN on)
    (S
      (S
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (DT this) (NN nonsense)))))))
      (VP (VBD introduced)
        (PP (IN into)
          (NP (DT the) (JJ public) (JJ high) (NN school) (NN classroom)))))
    (. ?)))

cc(emphasis-21, And-2)
mark(goal-9, if-4)
nsubj(goal-9, this-5)
cop(goal-9, is-6)
det(goal-9, the-7)
amod(goal-9, actual-8)
advcl(emphasis-21, goal-9)
amod(design-13, intelligent-12)
prep_of(goal-9, design-13)
nsubj(emphasis-21, why-16)
cop(emphasis-21, is-17)
advmod(emphasis-21, there-18)
predet(emphasis-21, such-19)
det(emphasis-21, an-20)
root(ROOT-0, emphasis-21)
dep(emphasis-21, on-22)
csubj(introduced-28, trying-23)
aux(get-25, to-24)
xcomp(trying-23, get-25)
det(nonsense-27, this-26)
dobj(get-25, nonsense-27)
ccomp(emphasis-21, introduced-28)
det(classroom-34, the-30)
amod(classroom-34, public-31)
amod(classroom-34, high-32)
nn(classroom-34, school-33)
prep_into(introduced-28, classroom-34)

(ROOT
  (S (`` ``)
    (ADVP (RB Ummm))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (RB pretty) (JJ sure)
          (SBAR (IN if)
            (S
              (NP
                (NP (DT the) (NN goal))
                (PP (IN of)
                  (NP (NNP ID))))
              (VP (VBZ is)
                (S
                  (VP (TO to)
                    (VP (VB encourage)
                      (NP
                        (NP (JJ new) (NNS avenues))
                        (PP (IN of)
                          (NP
                            (NP (NN research))
                            (PRN (-LRB- -LRB-)
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (NP (PRP you))
                                  (VP (VBP say)
                                    (SBAR
                                      (S
                                        (VP (VBZ is)
                                          (NP
                                            (NP (DT the) (NN goal))
                                            (PP (IN of)
                                              (NP (NNP ID))))))))))
                              (-RRB- -RRB-))))))))))))))
    (, ,) (RB then)
    (S
      (NP (PRP it))
      (ADVP (RB definitely))
      (VP (VBZ has)
        (NP
          (NP
            (NP (PRP it) (POS 's))
            (NN place))
          (PP (IN in)
            (NP (DT the) (NN classroom))))))
    (. .)))

advmod(sure-7, Ummm-2)
nsubj(sure-7, I-4)
cop(sure-7, 'm-5)
advmod(sure-7, pretty-6)
root(ROOT-0, sure-7)
mark(is-13, if-8)
det(goal-10, the-9)
nsubj(is-13, goal-10)
xsubj(encourage-15, goal-10)
prep_of(goal-10, ID-12)
ccomp(sure-7, is-13)
aux(encourage-15, to-14)
xcomp(is-13, encourage-15)
amod(avenues-17, new-16)
dobj(encourage-15, avenues-17)
prep_of(avenues-17, research-19)
dep(say-23, which-21)
nsubj(goal-26, which-21)
nsubj(say-23, you-22)
dep(research-19, say-23)
cop(goal-26, is-24)
det(goal-26, the-25)
ccomp(say-23, goal-26)
prep_of(goal-26, ID-28)
advmod(sure-7, then-31)
nsubj(has-34, it-32)
advmod(has-34, definitely-33)
ccomp(sure-7, has-34)
poss(place-37, it-35)
dobj(has-34, place-37)
det(classroom-40, the-39)
prep_in(place-37, classroom-40)

(ROOT
  (S ('' '')
    (NP (DT This) (NN number))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB be)
            (PP (IN in)
              (NP (NN error)))
            (PP (IN by)
              (NP
                (NP (DT a) (NN factor))
                (PP (IN of)
                  (NP (DT a)
                    (QP (CD trillion)
                      (CC or)
                      (RB so))))))))))
    (. .)))

det(number-3, This-2)
nsubj(seems-4, number-3)
xsubj(be-6, number-3)
root(ROOT-0, seems-4)
aux(be-6, to-5)
xcomp(seems-4, be-6)
prep_in(be-6, error-8)
det(factor-11, a-10)
prep_by(be-6, factor-11)
det(trillion-14, a-13)
prep_of(factor-11, trillion-14)
prep_of(factor-11, so-16)
conj_or(trillion-14, so-16)
quantmod(trillion-14, so-16)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN fool))
    (SQ
      (VP (VBZ wants)
        (NP (NN credit))
        (PP (IN for)
          (NP (DT this) (NN sentence)))))
    (. ?)))

det(fool-2, What-1)
nsubj(wants-3, fool-2)
root(ROOT-0, wants-3)
dobj(wants-3, credit-4)
det(sentence-7, this-6)
prep_for(wants-3, sentence-7)

