(ROOT
  (S
    (NP (DT The) (NNS bacteria))
    (VP (VBN mutated))
    (. .)))

det(bacteria-2, The-1)
nsubj(mutated-3, bacteria-2)
root(ROOT-0, mutated-3)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD did) (RB not)
      (VP (VB evolve)
        (PP (IN into)
          (NP
            (NP (DT a) (JJ new) (NN creature))
            (, ,)
            (VP (VBN granted)
              (SBAR (IN that)
                (S
                  (VP (MD would)
                    (VP (VB take)
                      (NP
                        (NP (NNS millions))
                        (PP (IN of)
                          (NP (NNS years))))
                      (PP (TO to)
                        (NP (NN witness))))))))))))
    (. .)))

nsubj(evolve-4, They-1)
aux(evolve-4, did-2)
neg(evolve-4, not-3)
root(ROOT-0, evolve-4)
det(creature-8, a-6)
amod(creature-8, new-7)
prep_into(evolve-4, creature-8)
partmod(creature-8, granted-10)
complm(take-13, that-11)
aux(take-13, would-12)
ccomp(granted-10, take-13)
dobj(take-13, millions-14)
prep_of(millions-14, years-16)
prep_to(take-13, witness-18)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP they))
        (VP (VBD grew)
          (NP (JJ feathered) (NNS wings)))))
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB be)
        (ADJP (JJ convinced))))
    (. .)))

advmod(convinced-11, Now-1)
mark(grew-5, if-3)
nsubj(grew-5, they-4)
dep(convinced-11, grew-5)
amod(wings-7, feathered-6)
dobj(grew-5, wings-7)
nsubj(convinced-11, I-8)
aux(convinced-11, 'd-9)
cop(convinced-11, be-10)
root(ROOT-0, convinced-11)

(ROOT
  (S (CC But)
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP agree)))
      (, ,))
    (NP (NN mutation))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT a) (VBG driving) (NN force))
          (PP (IN behind)
            (NP (NN evolution))))))
    (. .)))

cc(force-11, But-1)
nsubj(agree-4, I-3)
parataxis(force-11, agree-4)
nsubj(force-11, mutation-6)
aux(force-11, would-7)
cop(force-11, be-8)
det(force-11, a-9)
amod(force-11, driving-10)
root(ROOT-0, force-11)
prep_behind(force-11, evolution-13)

(ROOT
  (S
    (ADVP (RB However))
    (NP (PRP it))
    (VP (VBZ is) (RB n't)
      (VP (VBG evolution)
        (NP (PRP itself))))
    (. .)))

advmod(evolution-5, However-1)
nsubj(evolution-5, it-2)
aux(evolution-5, is-3)
neg(evolution-5, n't-4)
root(ROOT-0, evolution-5)
dobj(evolution-5, itself-6)

(ROOT
  (S
    (NP (NNS Mutations))
    (VP (VBP happen)
      (NP (PDT all) (DT the) (NN time))
      (PP (IN in)
        (NP
          (NP (NN nature))
          (SBAR
            (WHNP (WDT that))
            (S
              (ADVP (RB never))
              (VP (VBP lead)
                (PP (TO to)
                  (NP (DT a) (JJ new) (JJ evolved) (NN state)))
                (PP (IN in))))))))
    (. .)))

nsubj(happen-2, Mutations-1)
root(ROOT-0, happen-2)
predet(time-5, all-3)
det(time-5, the-4)
dobj(happen-2, time-5)
prep_in(happen-2, nature-7)
nsubj(lead-10, nature-7)
neg(lead-10, never-9)
rcmod(nature-7, lead-10)
det(state-15, a-12)
amod(state-15, new-13)
amod(state-15, evolved-14)
prep_to(lead-10, state-15)
prep(lead-10, in-16)

(ROOT
  (S
    (ADVP (RB Now))
    (NP
      (NP (DT the) (NN article))
      (PP (IN about)
        (NP (DT the) (NNS lizards))))
    (VP (VBZ is)
      (ADJP (RB pretty) (JJ amazing)))
    (. .)))

advmod(amazing-9, Now-1)
det(article-3, the-2)
nsubj(amazing-9, article-3)
det(lizards-6, the-5)
prep_about(article-3, lizards-6)
cop(amazing-9, is-7)
advmod(amazing-9, pretty-8)
root(ROOT-0, amazing-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD had) (RB not)
      (VP (VBN seen)
        (NP (DT that))))
    (. .)))

nsubj(seen-4, I-1)
aux(seen-4, had-2)
neg(seen-4, not-3)
root(ROOT-0, seen-4)
dobj(seen-4, that-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP
        (ADVP (RB never))
        (VBN said)
        (UCP
          (NP (DT that) (NN evolution)
            (CC or)
            (NN adaptation))
          (CC or)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (RB ever) (NN someone))
              (VP (VBZ wants)
                (S
                  (VP (TO to)
                    (VP (VB call)
                      (SBAR
                        (S
                          (NP (PRP it))
                          (VP (VBZ does) (RB not)
                            (VP (VB happen))))))))))))))
    (. .)))

nsubj(said-4, I-1)
aux(said-4, have-2)
neg(said-4, never-3)
root(ROOT-0, said-4)
det(evolution-6, that-5)
dobj(said-4, evolution-6)
dobj(said-4, adaptation-8)
conj_or(evolution-6, adaptation-8)
rel(wants-13, what-10)
advmod(someone-12, ever-11)
nsubj(wants-13, someone-12)
xsubj(call-15, someone-12)
dobj(said-4, wants-13)
conj_or(evolution-6, wants-13)
rcmod(evolution-6, wants-13)
aux(call-15, to-14)
xcomp(wants-13, call-15)
nsubj(happen-19, it-16)
aux(happen-19, does-17)
neg(happen-19, not-18)
ccomp(call-15, happen-19)

(ROOT
  (S
    (S
      (NP (DT These) (NNS lizards))
      (VP (MD may)
        (VP (VB adapt)
          (ADVP (IN through) (DT a))
          (PP (IN from)
            (PP (IN of)
              (NP (NN evolution))))
          (S
            (VP (TO to)
              (VP (VB acquire)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ necessary)
                        (S
                          (VP (TO to)
                            (VP (VB survive)
                              (PP (IN in)
                                (NP (DT a) (JJ new) (NN environment))))))))))))))))
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN evidence))
          (PP (IN of)
            (S
              (NP (PRP them))
              (VP (VBG changing)
                (PP (IN into)
                  (NP (DT a)
                    (ADJP (RB completely) (JJ different))
                    (NN creature)))
                (S
                  (VP (TO to)
                    (VP (VB survive))))))))))
    (. .)))

det(lizards-2, These-1)
nsubj(adapt-4, lizards-2)
xsubj(acquire-11, lizards-2)
aux(adapt-4, may-3)
root(ROOT-0, adapt-4)
advmod(adapt-4, through-5)
dep(through-5, a-6)
prep(adapt-4, from-7)
pcomp(from-7, of-8)
prep_of(from-7, evolution-9)
aux(acquire-11, to-10)
xcomp(adapt-4, acquire-11)
nsubj(necessary-14, what-12)
cop(necessary-14, is-13)
ccomp(acquire-11, necessary-14)
aux(survive-16, to-15)
xcomp(necessary-14, survive-16)
det(environment-20, a-18)
amod(environment-20, new-19)
prep_in(survive-16, environment-20)
expl(is-23, there-22)
conj_but(adapt-4, is-23)
det(evidence-25, no-24)
nsubj(is-23, evidence-25)
nsubj(changing-28, them-27)
xsubj(survive-35, them-27)
prepc_of(evidence-25, changing-28)
det(creature-33, a-30)
advmod(different-32, completely-31)
amod(creature-33, different-32)
prep_into(changing-28, creature-33)
aux(survive-35, to-34)
xcomp(changing-28, survive-35)

(ROOT
  (S
    (ADVP (RB Still))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (ADJP (RB pretty) (JJ amazing)))
    (. .)))

advmod(amazing-6, Still-1)
nsubj(amazing-6, that-3)
cop(amazing-6, is-4)
advmod(amazing-6, pretty-5)
root(ROOT-0, amazing-6)

