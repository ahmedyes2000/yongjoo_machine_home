(ROOT
  (SQ (VBZ Does)
    (NP
      (NP (DT the) (NN fact))
      (SBAR (IN that)
        (S
          (NP (NN regularity)
            (CC and)
            (NN chance))
          (VP (VBZ processes)))))
    (, ,)
    (VP (VB contrary)
      (PP (TO to)
        (NP (NNS claims)))
      (PP (IN by)
        (NP (NNP ID) (NNS proponents)))
      (, ,)
      (SBAR
        (SBAR
          (S
            (VP (MD can)
              (PP (IN in)
                (NP
                  (NP (NN fact) (NN increase) (NN information))
                  (CC and)
                  (NP (NN complexity))))
              (VP (VB mean)
                (SBAR (IN that)
                  (S
                    (NP (NNP ID))
                    (VP (VBZ has)
                      (VP (VBN been)
                        (VP (VBN falsified))))))))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (DT the) (`` ``) (NN designer))
            (VP (VBZ is)
              (ADJP (JJ dead) ('' '')))))))
    (. ?)))

aux(contrary-10, Does-1)
det(fact-3, the-2)
dobj(processes-8, fact-3)
nsubj(contrary-10, fact-3)
complm(processes-8, that-4)
nsubj(processes-8, regularity-5)
conj_and(regularity-5, chance-7)
nsubj(processes-8, chance-7)
dep(fact-3, processes-8)
root(ROOT-0, contrary-10)
prep_to(contrary-10, claims-12)
nn(proponents-15, ID-14)
prep_by(contrary-10, proponents-15)
aux(mean-24, can-17)
nn(information-21, fact-19)
nn(information-21, increase-20)
prep_in(mean-24, information-21)
conj_and(information-21, complexity-23)
prep_in(mean-24, complexity-23)
ccomp(contrary-10, mean-24)
complm(falsified-29, that-25)
nsubjpass(falsified-29, ID-26)
aux(falsified-29, has-27)
auxpass(falsified-29, been-28)
ccomp(mean-24, falsified-29)
complm(dead-36, that-31)
det(designer-34, the-32)
nsubj(dead-36, designer-34)
cop(dead-36, is-35)
ccomp(contrary-10, dead-36)
conj_and(mean-24, dead-36)

