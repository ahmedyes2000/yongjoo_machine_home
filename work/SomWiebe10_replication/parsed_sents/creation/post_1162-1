(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ macro) (NN level))
        (PP (IN of)
          (NP (NN evolution))))
      (VP (VBZ has)
        (NP (DT a) (JJ long) (NN way)
          (S
            (VP (TO to)
              (VP (VB go)
                (S
                  (VP (TO to)
                    (VP (VB provide)
                      (NP (NN proof)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (JJ enough) (NN work))
          (VP (VBG going)
            (PRT (RP on))
            (PP (IN in)
              (NP (DT this) (NN subject)))
            (SBAR (IN that)
              (S
                (NP (NNS links))
                (VP (MD can)
                  (ADVP (RB eventually))
                  (VP (VB be)
                    (VP (VBN found))))))))))
    (. .)))

det(level-3, The-1)
amod(level-3, macro-2)
nsubj(has-6, level-3)
prep_of(level-3, evolution-5)
root(ROOT-0, has-6)
det(way-9, a-7)
amod(way-9, long-8)
dobj(has-6, way-9)
aux(go-11, to-10)
infmod(way-9, go-11)
aux(provide-13, to-12)
xcomp(go-11, provide-13)
dobj(provide-13, proof-14)
expl(is-18, there-17)
conj_but(has-6, is-18)
amod(work-20, enough-19)
nsubj(is-18, work-20)
partmod(work-20, going-21)
prt(going-21, on-22)
det(subject-25, this-24)
prep_in(going-21, subject-25)
complm(found-31, that-26)
nsubjpass(found-31, links-27)
aux(found-31, can-28)
advmod(found-31, eventually-29)
auxpass(found-31, be-30)
ccomp(going-21, found-31)

