(ROOT
  (S (IN So)
    (NP (WDT what))
    (, ,)
    (S
      (VP (VBG using)
        (NP (JJ intelligent) (NN design))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN purpose))
        (PP (IN of)
          (NP (DT the) (NN appendix)))))
    (. ?)))

dep(purpose-10, So-1)
nsubj(purpose-10, what-2)
partmod(purpose-10, using-4)
amod(design-6, intelligent-5)
dobj(using-4, design-6)
cop(purpose-10, is-8)
det(purpose-10, the-9)
root(ROOT-0, purpose-10)
det(appendix-13, the-12)
prep_of(purpose-10, appendix-13)

(ROOT
  (S
    (NP (NNP ID))
    (ADVP (RB simply))
    (VP (VBD predicted)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN appendix))
          (VP (MD would)
            (VP (VB have)
              (NP (DT a) (NN function)))))))
    (. .)))

nsubj(predicted-3, ID-1)
advmod(predicted-3, simply-2)
root(ROOT-0, predicted-3)
complm(have-8, that-4)
det(appendix-6, the-5)
nsubj(have-8, appendix-6)
aux(have-8, would-7)
ccomp(predicted-3, have-8)
det(function-10, a-9)
dobj(have-8, function-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN degree))
      (PP (IN of)
        (NP
          (NP (NN specificity))
          (PP (IN in)
            (NP
              (NP (PRP$ our) (NNS predictions))
              (PP (VBG concerning)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (DT an) (NN intelligence))
                    (VP (MD will)
                      (CC or)
                      (MD will) (RB not)
                      (VP (VB do)))))))))))
    (VP (VBZ is)
      (ADJP (VBN limited) (RB due)
        (PP (TO to)
          (NP
            (NP (JJ intelligent) (NNS agents))
            (VP (VBG having)
              (NP
                (NP (NN freedom))
                (PP (IN in)
                  (NP (PRP$ their) (NN creation)))))))))
    (. .)))

det(degree-2, The-1)
nsubjpass(limited-18, degree-2)
prep_of(degree-2, specificity-4)
poss(predictions-7, our-6)
prep_in(specificity-4, predictions-7)
dobj(do-16, what-9)
det(intelligence-11, an-10)
nsubj(do-16, intelligence-11)
aux(do-16, will-12)
prepc_concerning(predictions-7, will-14)
aux(do-16, will-14)
conj_or(do-16, will-14)
neg(do-16, not-15)
prepc_concerning(predictions-7, do-16)
auxpass(limited-18, is-17)
root(ROOT-0, limited-18)
amod(agents-22, intelligent-21)
prep_due_to(limited-18, agents-22)
partmod(agents-22, having-23)
dobj(having-23, freedom-24)
poss(creation-27, their-26)
prep_in(freedom-24, creation-27)

(ROOT
  (NP (FW Exactly) (. .)))

root(ROOT-0, Exactly-1)

(ROOT
  (S
    (NP (NNP Ken) (NNP Miller))
    (VP
      (VP (VBZ has)
        (VP (VBN claimed)
          (S
            (VP (TO to)
              (VP (VB have)
                (VP (VBN tested)
                  (NP
                    (NP (DT a)
                      (ADJP (RB supposedly) (JJ untestable))
                      (NN claim))
                    (, ,)
                    (NP
                      (NP (DT a) (NN claim))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ is)
                            (ADJP (RB supposedly) (JJ religious)))))))))))))
      (CC and)
      (VP (VBZ has)
        (NP (NN nothing)
          (S
            (VP (TO to)
              (VP (VB do)
                (PP (IN with)
                  (NP (NN science)))))))))
    (. .)))

nn(Miller-2, Ken-1)
nsubj(claimed-4, Miller-2)
xsubj(tested-7, Miller-2)
nsubj(has-20, Miller-2)
aux(claimed-4, has-3)
root(ROOT-0, claimed-4)
aux(tested-7, to-5)
aux(tested-7, have-6)
xcomp(claimed-4, tested-7)
det(claim-11, a-8)
advmod(untestable-10, supposedly-9)
amod(claim-11, untestable-10)
dobj(tested-7, claim-11)
det(claim-14, a-13)
appos(claim-11, claim-14)
nsubj(religious-18, claim-14)
cop(religious-18, is-16)
advmod(religious-18, supposedly-17)
rcmod(claim-14, religious-18)
conj_and(claimed-4, has-20)
dobj(has-20, nothing-21)
aux(do-23, to-22)
infmod(nothing-21, do-23)
prep_with(do-23, science-25)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP mean)
      (NP (DT the) (NNP Lenski) (JJ long) (NN term) (NN evolution) (NN experiment)))
    (. ?)))

nsubj(mean-2, You-1)
root(ROOT-0, mean-2)
det(experiment-8, the-3)
nn(experiment-8, Lenski-4)
amod(experiment-8, long-5)
nn(experiment-8, term-6)
nn(experiment-8, evolution-7)
dobj(mean-2, experiment-8)

(ROOT
  (INTJ (UH ...)))


(ROOT
  (S
    (NP (DT The) (NNP Lenski) (NN study))
    (VP (VBD did) (RB not)
      (VP (VB show)
        (NP
          (NP (NN e.) (NNS coli))
          (VP (VBG changing)
            (PP (IN into)
              (NP
                (NP (DT a) (JJ different) (NN species))
                (PP (IN of)
                  (NP
                    (NP (NNS bacteria))
                    (PP (IN via)
                      (NP (JJ undirected) (NNS processes)))))))))))
    (. .)))

det(study-3, The-1)
nn(study-3, Lenski-2)
nsubj(show-6, study-3)
aux(show-6, did-4)
neg(show-6, not-5)
root(ROOT-0, show-6)
nn(coli-8, e.-7)
dobj(show-6, coli-8)
partmod(coli-8, changing-9)
det(species-13, a-11)
amod(species-13, different-12)
prep_into(changing-9, species-13)
prep_of(species-13, bacteria-15)
amod(processes-18, undirected-17)
prep_via(bacteria-15, processes-18)

(ROOT
  (S
    (NP (DT The) (NNS bacteria))
    (VP
      (VP (VBD began)
        (PP (IN as)
          (NP (NN e.) (NNS coli))))
      (CC and)
      (VP (VBD ended)
        (PP (IN as)
          (NP (NN e.) (NNS coli)))))
    (. .)))

det(bacteria-2, The-1)
nsubj(began-3, bacteria-2)
nsubj(ended-8, bacteria-2)
root(ROOT-0, began-3)
nn(coli-6, e.-5)
prep_as(began-3, coli-6)
conj_and(began-3, ended-8)
nn(coli-11, e.-10)
prep_as(ended-8, coli-11)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (NN e.) (NNS coli))
        (VP (VBD did)
          (NP (NN change))
          (PP (IN into)
            (NP (DT a) (JJ different) (NN species))))))
    (, ,)
    (NP (DT the) (NN study))
    (VP (MD would) (RB not)
      (VP (VB justify)
        (S
          (VP (VBG inferring)
            (SBAR (IN that)
              (S
                (NP (DT all) (NN life))
                (VP (VBZ changes)
                  (PP (IN into)
                    (NP
                      (NP (JJ new) (NNS species))
                      (PP (IN via)
                        (NP (JJ non-intelligent) (NNS processes))))))))))))
    (. .)))

advmod(did-5, Even-1)
dep(did-5, if-2)
nn(coli-4, e.-3)
nsubj(did-5, coli-4)
advcl(justify-16, did-5)
dobj(did-5, change-6)
det(species-10, a-8)
amod(species-10, different-9)
prep_into(did-5, species-10)
det(study-13, the-12)
nsubj(justify-16, study-13)
aux(justify-16, would-14)
neg(justify-16, not-15)
root(ROOT-0, justify-16)
xcomp(justify-16, inferring-17)
complm(changes-21, that-18)
det(life-20, all-19)
nsubj(changes-21, life-20)
ccomp(inferring-17, changes-21)
amod(species-24, new-23)
prep_into(changes-21, species-24)
amod(processes-27, non-intelligent-26)
prep_via(species-24, processes-27)

(ROOT
  (S
    (PP (VBG Concerning)
      (NP
        (NP (DT the) (NN paper))
        (VP (VBN published)
          (PP (IN in)
            (NP (NNP Science))))))
    (, ,)
    (NP (DT the) (NN author))
    (VP (VBD claimed)
      (SBAR (IN that)
        (S
          (NP (NNP ID))
          (VP (VBZ is)
            (ADJP (JJ untestable))
            (ADVP (RB immediately))
            (PP (IN after)
              (S
                (VP (VBG claiming)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBD had)
                        (VP (VBN been)
                          (VP (VBN tested)
                            (CC and)
                            (VBN refuted)))))))))))))
    (. .)))

det(paper-3, the-2)
prep_concerning(claimed-10, paper-3)
partmod(paper-3, published-4)
prep_in(published-4, Science-6)
det(author-9, the-8)
nsubj(claimed-10, author-9)
root(ROOT-0, claimed-10)
complm(untestable-14, that-11)
nsubj(untestable-14, ID-12)
cop(untestable-14, is-13)
ccomp(claimed-10, untestable-14)
advmod(untestable-14, immediately-15)
prepc_after(untestable-14, claiming-17)
complm(tested-22, that-18)
nsubjpass(tested-22, it-19)
nsubjpass(refuted-24, it-19)
aux(tested-22, had-20)
auxpass(tested-22, been-21)
ccomp(claiming-17, tested-22)
ccomp(claiming-17, refuted-24)
conj_and(tested-22, refuted-24)

(ROOT
  (S
    (NP (DT This) (NN contradiction))
    (VP (VBD was)
      (VP (VBN ignored)
        (PP (IN by)
          (NP
            (NP (DT the) (NNS reviewers)
              (CC and)
              (NNS editors))
            (PP (IN of)
              (NP (DT the) (NN journal)))))))
    (. .)))

det(contradiction-2, This-1)
nsubjpass(ignored-4, contradiction-2)
auxpass(ignored-4, was-3)
root(ROOT-0, ignored-4)
det(reviewers-7, the-6)
agent(ignored-4, reviewers-7)
agent(ignored-4, editors-9)
conj_and(reviewers-7, editors-9)
det(journal-12, the-11)
prep_of(reviewers-7, journal-12)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB show)
      (NP
        (NP (CD one) (VBN recorded) (NN demonstration))
        (PP (IN of)
          (NP
            (NP (JJ intelligent) (NN design))
            (PP (IN in)
              (NP (NN action)))))))
    (. ?)))

aux(show-3, Can-1)
nsubj(show-3, you-2)
root(ROOT-0, show-3)
num(demonstration-6, one-4)
amod(demonstration-6, recorded-5)
dobj(show-3, demonstration-6)
amod(design-9, intelligent-8)
prep_of(demonstration-6, design-9)
prep_in(design-9, action-11)

(ROOT
  (FRAG
    (NP
      (NP (CD One) (JJ scientific) (NN study))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD would)
            (VP (VB show)
              (NP
                (NP (DT the) (NN manipulation))
                (PP (IN of)
                  (NP (DT a) (NN designer)))))))))
    (. ?)))

num(study-3, One-1)
amod(study-3, scientific-2)
root(ROOT-0, study-3)
nsubj(show-6, study-3)
aux(show-6, would-5)
rcmod(study-3, show-6)
det(manipulation-8, the-7)
dobj(show-6, manipulation-8)
det(designer-11, a-10)
prep_of(manipulation-8, designer-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB remind)
          (NP (PRP you))
          (PP (IN of)
            (S
              (NP
                (NP (JJ many) (NNS examples))
                (PP (IN of)
                  (NP (NN homo) (NNS sapiens))))
              (ADVP (RB intelligently))
              (VP (VBG altering)
                (NP (NNS organisms))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB show)
          (NP (PRP you))
          (NP
            (NP (DT a) (JJ non-homo) (NN sapien))
            (ADJP (JJ live)
              (CC and)
              (JJ in-person)))
          (S
            (VP (VBG designing)
              (NP (NN anything)))))))
    (. .)))

nsubj(remind-3, I-1)
aux(remind-3, could-2)
root(ROOT-0, remind-3)
dobj(remind-3, you-4)
amod(examples-7, many-6)
nsubj(altering-12, examples-7)
nn(sapiens-10, homo-9)
prep_of(examples-7, sapiens-10)
advmod(altering-12, intelligently-11)
prepc_of(remind-3, altering-12)
dobj(altering-12, organisms-13)
nsubj(show-19, I-16)
aux(show-19, can-17)
neg(show-19, not-18)
conj_but(remind-3, show-19)
iobj(show-19, you-20)
det(sapien-23, a-21)
amod(sapien-23, non-homo-22)
dobj(show-19, sapien-23)
amod(sapien-23, live-24)
amod(sapien-23, in-person-26)
conj_and(live-24, in-person-26)
xcomp(show-19, designing-27)
dobj(designing-27, anything-28)

(ROOT
  (S
    (S
      (NP (NNP Intelligent) (NNP Design))
      (VP (VBZ is)
        (VP (VBN inferred)
          (PP (IN from)
            (NP (DT the) (NN evidence))))))
    (, ,)
    (NP
      (NP (RB much))
      (PP (IN like)
        (NP
          (NP (DT the) (JJ intelligent) (NN design))
          (PP (IN of)
            (NP (NNS pyramids))))))
    (VP (VBZ is)
      (VP (VBN inferred)
        (PP (IN from)
          (NP (DT the) (NN evidence)))
        (SBAR (RB even) (IN though)
          (S
            (NP (DT no) (NN one))
            (VP (MD can)
              (ADVP (RB actually))
              (VP (VB show)
                (S
                  (NP (PRP me))
                  (ADJP (JJ Egyptians))
                  (S
                    (VP (VBG building)
                      (S
                        (NP (PRP them))
                        (NP
                          (NP (NNS thousands))
                          (PP (IN of)
                            (NP (NNS years)))))
                      (ADVP (IN ago)))))))))))
    (. .)))

nn(Design-2, Intelligent-1)
nsubjpass(inferred-4, Design-2)
auxpass(inferred-4, is-3)
ccomp(inferred-17, inferred-4)
det(evidence-7, the-6)
prep_from(inferred-4, evidence-7)
nsubjpass(inferred-17, much-9)
det(design-13, the-11)
amod(design-13, intelligent-12)
prep_like(much-9, design-13)
prep_of(design-13, pyramids-15)
auxpass(inferred-17, is-16)
root(ROOT-0, inferred-17)
det(evidence-20, the-19)
prep_from(inferred-17, evidence-20)
advmod(show-27, even-21)
dep(show-27, though-22)
det(one-24, no-23)
nsubj(show-27, one-24)
aux(show-27, can-25)
advmod(show-27, actually-26)
ccomp(inferred-17, show-27)
nsubj(building-30, me-28)
dep(building-30, Egyptians-29)
xcomp(show-27, building-30)
nsubj(thousands-32, them-31)
xcomp(building-30, thousands-32)
prep_of(thousands-32, years-34)
advmod(building-30, ago-35)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (NN example)))
      (, ,)
      (NP (PRP we))
      (VP (MD can)
        (VP (VB predict)
          (SBAR (IN that)
            (S
              (NP (NNP Tom) (NNP Cruise))
              (VP (VBZ s)
                (NP
                  (NP (JJ next) (NN movie))
                  (SBAR
                    (S
                      (VP (MD will)
                        (VP (VB be)
                          (NP (DT an) (NN action) (NN flick)))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD can) (RB not)
        (VP (VB predict)
          (NP
            (NP (DT the) (NN plot))
            (PP (IN of)
              (NP (DT the) (NN movie))))
          (SBAR (IN before)
            (S
              (NP (PRP he))
              (VP (VBZ agrees)
                (PP (TO to)
                  (NP (DT a) (NN part)))))))))
    (. .)))

prep_for(predict-6, example-2)
nsubj(predict-6, we-4)
aux(predict-6, can-5)
root(ROOT-0, predict-6)
complm(movie-12, that-7)
nn(Cruise-9, Tom-8)
nsubj(movie-12, Cruise-9)
cop(movie-12, s-10)
amod(movie-12, next-11)
ccomp(predict-6, movie-12)
aux(flick-17, will-13)
cop(flick-17, be-14)
det(flick-17, an-15)
nn(flick-17, action-16)
rcmod(movie-12, flick-17)
nsubj(predict-23, we-20)
aux(predict-23, can-21)
neg(predict-23, not-22)
conj_but(predict-6, predict-23)
det(plot-25, the-24)
dobj(predict-23, plot-25)
det(movie-28, the-27)
prep_of(plot-25, movie-28)
mark(agrees-31, before-29)
nsubj(agrees-31, he-30)
advcl(predict-23, agrees-31)
det(part-34, a-33)
prep_to(agrees-31, part-34)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBZ does)
      (NP (JJ evolutionary) (NN theory))
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD will)
              (VP (VB be)
                (ADJP (JJ slow)
                  (CC or)
                  (JJ gradual))))))))
    (. ?)))

advmod(say-5, Where-1)
aux(say-5, does-2)
amod(theory-4, evolutionary-3)
nsubj(say-5, theory-4)
root(ROOT-0, say-5)
complm(slow-10, that-6)
nsubj(slow-10, it-7)
nsubj(gradual-12, it-7)
aux(slow-10, will-8)
cop(slow-10, be-9)
ccomp(say-5, slow-10)
ccomp(say-5, gradual-12)
conj_or(slow-10, gradual-12)

(ROOT
  (S
    (NP (JJ Unobserved) (NNS entities))
    (VP (VBP are)
      (VP (VBN allowed)
        (PP (IN in)
          (NP
            (NP (NN science))
            (, ,)
            (NP (JJ such)
              (ADJP (RB as) (JJ dark))
              (NN matter) (NN \/) (NN energy))))))
    (. .)))

amod(entities-2, Unobserved-1)
nsubjpass(allowed-4, entities-2)
auxpass(allowed-4, are-3)
root(ROOT-0, allowed-4)
prep_in(allowed-4, science-6)
amod(energy-13, such-8)
advmod(dark-10, as-9)
amod(energy-13, dark-10)
nn(energy-13, matter-11)
nn(energy-13, \/-12)
appos(science-6, energy-13)

(ROOT
  (S
    (NP (NNP Evolution))
    (VP (VBZ has)
      (VP (VBN been)
        (ADJP (JJ observed)
          (S
            (VP (TO to)
              (VP (VB act)
                (ADVP (RB very) (RB quickly))
                (, ,)
                (ADVP (RB sometimes))))))
        (PP (IN over)
          (NP
            (NP (DT the) (NN course))
            (PP (IN of)
              (NP (NNS decades)))))))
    (. .)))

nsubj(observed-4, Evolution-1)
aux(observed-4, has-2)
cop(observed-4, been-3)
root(ROOT-0, observed-4)
aux(act-6, to-5)
xcomp(observed-4, act-6)
advmod(quickly-8, very-7)
advmod(act-6, quickly-8)
advmod(act-6, sometimes-10)
det(course-13, the-12)
prep_over(observed-4, course-13)
prep_of(course-13, decades-15)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (JJ true))
        (SBAR (IN that)
          (S
            (NP
              (NP (NN evolution))
              (PRN (-LRB- -LRB-)
                (NAC (NN change)
                  (PP (IN over)
                    (NP (NN time))))
                (-RRB- -RRB-)))
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBN observed)
                  (S
                    (VP (TO to)
                      (VP (VB act)
                        (ADVP (RB quickly))))))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT the) (NN theory))
        (PP (IN of)
          (NP (NN evolution))))
      (VP (VBZ has)
        (PP (IN from)
          (NP (NN day) (CD one)))
        (VP (VBN predicted)
          (SBAR (IN that)
            (S
              (NP (DT this) (NN change))
              (VP (VBZ has)
                (ADVP (RB always))
                (VP (VBN occurred)
                  (NP (NN step-by-step)))))))))
    (. .)))

nsubj(true-3, It-1)
cop(true-3, is-2)
root(ROOT-0, true-3)
complm(observed-13, that-4)
nsubjpass(observed-13, evolution-5)
xsubj(act-15, evolution-5)
dep(evolution-5, change-7)
prep_over(change-7, time-9)
aux(observed-13, has-11)
auxpass(observed-13, been-12)
ccomp(true-3, observed-13)
aux(act-15, to-14)
xcomp(observed-13, act-15)
advmod(act-15, quickly-16)
det(theory-20, the-19)
nsubj(predicted-27, theory-20)
prep_of(theory-20, evolution-22)
aux(predicted-27, has-23)
prep_from(predicted-27, day-25)
num(day-25, one-26)
conj_but(true-3, predicted-27)
complm(occurred-33, that-28)
det(change-30, this-29)
nsubj(occurred-33, change-30)
aux(occurred-33, has-31)
advmod(occurred-33, always-32)
ccomp(predicted-27, occurred-33)
dobj(occurred-33, step-by-step-34)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ first) (NN time))
      (SBAR
        (S
          (NP (DT this) (NN prediction))
          (VP (VBD was)
            (VP (VBN made)
              (S
                (VP (VBG using)
                  (NP
                    (NP (DT the) (NN theory))
                    (PP (IN of)
                      (NP (NN evolution)))))))))))
    (VP (VBD was)
      (PP (IN in)
        (NP
          (NP (DT the) (NNP Origin))
          (PP (IN of)
            (NP (NNP Species))))))
    (. .)))

det(time-3, The-1)
amod(time-3, first-2)
nsubj(was-13, time-3)
det(prediction-5, this-4)
nsubjpass(made-7, prediction-5)
auxpass(made-7, was-6)
rcmod(time-3, made-7)
xcomp(made-7, using-8)
det(theory-10, the-9)
dobj(using-8, theory-10)
prep_of(theory-10, evolution-12)
root(ROOT-0, was-13)
det(Origin-16, the-15)
prep_in(was-13, Origin-16)
prep_of(Origin-16, Species-18)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT the) (NNP Cambrian) (NNP Explosion))
    (VP (VBD demonstrated)
      (NP (DT this) (NN prediction)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ false))
              (SBAR (RB even) (IN before)
                (S
                  (NP (JJ random) (JJ natural) (NNS processes))
                  (VP (VBD wrote)
                    (NP
                      (NP (DT the) (NNP Origin))
                      (PP (IN of)
                        (NP (NNP Species))))))))))))
    (. .)))

advmod(demonstrated-6, However-1)
det(Explosion-5, the-3)
nn(Explosion-5, Cambrian-4)
nsubj(demonstrated-6, Explosion-5)
root(ROOT-0, demonstrated-6)
det(prediction-8, this-7)
dobj(demonstrated-6, prediction-8)
aux(false-11, to-9)
cop(false-11, be-10)
infmod(prediction-8, false-11)
advmod(wrote-17, even-12)
dep(wrote-17, before-13)
amod(processes-16, random-14)
amod(processes-16, natural-15)
nsubj(wrote-17, processes-16)
ccomp(false-11, wrote-17)
det(Origin-19, the-18)
dobj(wrote-17, Origin-19)
prep_of(Origin-19, Species-21)

(ROOT
  (NP (JJ Specified) (NN complexity) (. ?)))

amod(complexity-2, Specified-1)
root(ROOT-0, complexity-2)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB qualify)
      (NP (DT that))
      (ADVP (RBR further)))
    (. ?)))

aux(qualify-3, Can-1)
nsubj(qualify-3, you-2)
root(ROOT-0, qualify-3)
dobj(qualify-3, that-4)
advmod(qualify-3, further-5)

(ROOT
  (S
    (NP (JJ Specified) (NN complexity))
    (VP (VBZ describes)
      (NP
        (NP (DT any) (NN sort))
        (PP (IN of)
          (NP (NN pattern)))))
    (. .)))

amod(complexity-2, Specified-1)
nsubj(describes-3, complexity-2)
root(ROOT-0, describes-3)
det(sort-5, any-4)
dobj(describes-3, sort-5)
prep_of(sort-5, pattern-7)

(ROOT
  (S
    (NP (DT Some) (NNS patterns))
    (VP (VBP are)
      (ADJP (JJ specific)
        (CC but)
        (RB not) (JJ complex))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN eg.))
          (, ,)
          (NP (NN gtgtgtgtg)))
        (-RRB- -RRB-)))
    (. .)))

det(patterns-2, Some-1)
nsubj(complex-7, patterns-2)
cop(complex-7, are-3)
dep(complex-7, specific-4)
conj_but(complex-7, not-6)
neg(complex-7, not-6)
root(ROOT-0, complex-7)
dep(complex-7, eg.-9)
appos(eg.-9, gtgtgtgtg-11)

(ROOT
  (S
    (NP (DT Some) (NNS patterns))
    (VP (VBP are)
      (ADJP (JJ complex)
        (CC but)
        (RB not) (JJ specific))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN eg.))
          (, ,)
          (NP (NN ctaagtcg)))
        (-RRB- -RRB-)))
    (. .)))

det(patterns-2, Some-1)
nsubj(specific-7, patterns-2)
cop(specific-7, are-3)
dep(specific-7, complex-4)
conj_but(specific-7, not-6)
neg(specific-7, not-6)
root(ROOT-0, specific-7)
dep(specific-7, eg.-9)
appos(eg.-9, ctaagtcg-11)

(ROOT
  (S
    (NP (DT Some) (NNS patterns))
    (VP (VBP are)
      (ADJP (DT both) (JJ specific)
        (CC and)
        (JJ complex))
      (PRN (-LRB- -LRB-)
        (NP
          (NP (NN eg.))
          (, ,)
          (NP (NN gattaca)))
        (-RRB- -RRB-)))
    (. .)))

det(patterns-2, Some-1)
nsubj(specific-5, patterns-2)
nsubj(complex-7, patterns-2)
cop(specific-5, are-3)
preconj(specific-5, both-4)
root(ROOT-0, specific-5)
conj_and(specific-5, complex-7)
dep(specific-5, eg.-9)
appos(eg.-9, gattaca-11)

(ROOT
  (PP (IN Like)
    (NP (DT the) (NNS bacteria) (NN flagellum))
    (: ...)))

root(ROOT-0, Like-1)
det(flagellum-4, the-2)
nn(flagellum-4, bacteria-3)
pobj(Like-1, flagellum-4)

