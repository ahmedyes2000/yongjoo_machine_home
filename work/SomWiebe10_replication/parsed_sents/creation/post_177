(ROOT
  (S ('' '')
    (S
      (ADVP (RB Features))
      (NP (DT that))
      (VP (VBP appear)
        (SBAR
          (S
            (NP (NN vestigial)
              (CC and)
              (NNS functionless))
            (ADVP (RB actually))
            (VP (VB serve)
              (NP
                (NP (DT a) (NN function))
                (PRN (-LRB- -LRB-)
                  (NP (NN eg.) (, ,) (NN appendix) (, ,) (NN coccyx))
                  (-RRB- -RRB-)))))))
      ('' ''))
    (IN So)
    (S
      (X (WP what))
      (, ,)
      (S
        (VP (VBG using)
          (NP (JJ intelligent) (NN design))))
      (, ,)
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN purpose))
          (PP (IN of)
            (NP (DT the) (NN appendix))))))
    (. ?)))

advmod(appear-4, Features-2)
nsubj(appear-4, that-3)
root(ROOT-0, appear-4)
nsubj(serve-9, vestigial-5)
conj_and(vestigial-5, functionless-7)
nsubj(serve-9, functionless-7)
advmod(serve-9, actually-8)
ccomp(appear-4, serve-9)
det(function-11, a-10)
dobj(serve-9, function-11)
nn(coccyx-17, eg.-13)
dep(coccyx-17, appendix-15)
appos(function-11, coccyx-17)
dep(appear-4, So-20)
dep(purpose-29, what-21)
dep(purpose-29, using-23)
amod(design-25, intelligent-24)
dobj(using-23, design-25)
cop(purpose-29, is-27)
det(purpose-29, the-28)
ccomp(appear-4, purpose-29)
det(appendix-32, the-31)
prep_of(purpose-29, appendix-32)

(ROOT
  (S ('' '')
    (NP (`` ``) (NNP Junk) ('' '') (NNP DNA))
    (VP (VBZ does) (, ,)
      (PP (IN in)
        (NP (NN fact)))
      (, ,)
      (S
        (VP (VB have)
          (NP (DT a) (NN function)))))
    (. .)))

nn(DNA-5, Junk-3)
nsubj(does-6, DNA-5)
root(ROOT-0, does-6)
prep_in(does-6, fact-9)
ccomp(does-6, have-11)
det(function-13, a-12)
dobj(have-11, function-13)

(ROOT
  (S ('' '')
    (NP (NNP Specified))
    (VP (VBZ complexity))
    (. ?)))

nsubj(complexity-3, Specified-2)
root(ROOT-0, complexity-3)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB qualify)
      (NP (DT that))
      (ADVP (RBR further)))
    (. ?)))

aux(qualify-3, Can-1)
nsubj(qualify-3, you-2)
root(ROOT-0, qualify-3)
dobj(qualify-3, that-4)
advmod(qualify-3, further-5)

(ROOT
  (S (`` ``)
    (NP (NNP ID))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ falsifiable)
          (PP (IN by)
            (S
              (VP (VBG testing)
                (NP (PRP$ its) (NNS predictions))))))))
    (. .)))

nsubj(falsifiable-5, ID-2)
aux(falsifiable-5, would-3)
cop(falsifiable-5, be-4)
root(ROOT-0, falsifiable-5)
prepc_by(falsifiable-5, testing-7)
poss(predictions-9, its-8)
dobj(testing-7, predictions-9)

(ROOT
  (S
    (NP (DT Some) (NNS scientists))
    (VP (VBP have)
      (ADVP (RB already))
      (VP (VBN claimed)
        (SBAR (IN that)
          (S
            (NP (NNP ID))
            (VP (VBZ has)
              (VP (VBN been)
                (VP
                  (VP (VBN falsified))
                  (CC and)
                  (VP
                    (ADVP (RB adequately))
                    (VBN refuted) (, ,)
                    (PP (JJ such)
                      (PP (IN as)
                        (NP (NNP Ken) (NNP Miller))))))))))))
    (. .)))

det(scientists-2, Some-1)
nsubj(claimed-5, scientists-2)
aux(claimed-5, have-3)
advmod(claimed-5, already-4)
root(ROOT-0, claimed-5)
complm(falsified-10, that-6)
nsubjpass(falsified-10, ID-7)
nsubjpass(refuted-13, ID-7)
aux(falsified-10, has-8)
auxpass(falsified-10, been-9)
ccomp(claimed-5, falsified-10)
advmod(refuted-13, adequately-12)
ccomp(claimed-5, refuted-13)
conj_and(falsified-10, refuted-13)
nn(Miller-18, Ken-17)
prep_such_as(refuted-13, Miller-18)

(ROOT
  (S ('' '')
    (PP (IN Like)
      (NP
        (NP (DT the) (NNS bacteria) (NN flagellum))
        (: ...)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBD was)
              (VP (VBN claimed)
                (S
                  (VP (TO to)
                    (VP (VB be) (`` ``)
                      (ADJP (RB irreducibly) (JJ complex))
                      ('' '')
                      (PP (IN but)))))))))))
    (VP (VBZ has)
      (ADVP (IN since))
      (VP (VBN been)
        (VP (VBN demonstrated)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADVP (RB otherwise))))))))
    (. .)))

det(flagellum-5, the-3)
nn(flagellum-5, bacteria-4)
prep_like(demonstrated-20, flagellum-5)
nsubjpass(claimed-9, which-7)
auxpass(claimed-9, was-8)
rcmod(flagellum-5, claimed-9)
aux(complex-14, to-10)
cop(complex-14, be-11)
advmod(complex-14, irreducibly-13)
xcomp(claimed-9, complex-14)
prep(complex-14, but-16)
aux(demonstrated-20, has-17)
advmod(demonstrated-20, since-18)
auxpass(demonstrated-20, been-19)
root(ROOT-0, demonstrated-20)
aux(be-22, to-21)
xcomp(demonstrated-20, be-22)
advmod(be-22, otherwise-23)

(ROOT
  (S ('' '')
    (NP (EX There))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP
          (NP (DT a) (NN paper))
          (VP (VBN published)
            (PP (IN in)
              (NP (NNP Science)))))
        (PRN (-LRB- -LRB-)
          (NP (CD 1))
          (-RRB- -RRB-))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ claims)
              (SBAR (IN that)
                (S
                  (NP
                    (NP
                      (NP (DT a) (NN study))
                      (PP (IN by)
                        (NP (NNP Bridgham))))
                    (CC and)
                    (NP
                      (NP (DT a) (NN study))
                      (PP (IN by)
                        (NP (NNP Lenski)))))
                  (ADVP (RB solidly))
                  (VP (VB refute)
                    (NP
                      (NP (DT all) (NNS parts))
                      (PP (IN of)
                        (NP (DT the) (JJ intelligent) (NN design) (NN argument))))))))))))
    (. .)))

expl(is-3, There-2)
root(ROOT-0, is-3)
advmod(is-3, also-4)
det(paper-6, a-5)
nsubj(is-3, paper-6)
nsubj(claims-14, paper-6)
partmod(paper-6, published-7)
prep_in(published-7, Science-9)
appos(paper-6, 1-11)
rcmod(paper-6, claims-14)
complm(refute-26, that-15)
det(study-17, a-16)
nsubj(refute-26, study-17)
prep_by(study-17, Bridgham-19)
det(study-22, a-21)
conj_and(study-17, study-22)
nsubj(refute-26, study-22)
prep_by(study-22, Lenski-24)
advmod(refute-26, solidly-25)
ccomp(claims-14, refute-26)
det(parts-28, all-27)
dobj(refute-26, parts-28)
det(argument-33, the-30)
amod(argument-33, intelligent-31)
nn(argument-33, design-32)
prep_of(parts-28, argument-33)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (VBP mean)
      (NP (DT the) (NNP Lenski) (JJ long) (NN term) (NN evolution) (NN experiment)))
    (. ?)))

nsubj(mean-3, You-2)
root(ROOT-0, mean-3)
det(experiment-9, the-4)
nn(experiment-9, Lenski-5)
amod(experiment-9, long-6)
nn(experiment-9, term-7)
nn(experiment-9, evolution-8)
dobj(mean-3, experiment-9)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (S
      (NP (NNP E.) (NNP Coli) (NNS bacteria))
      (VP (VBD underwent)
        (NP
          (NP (DT a) (JJ significant) (NN change))
          (PRN (-LRB- -LRB-)
            (VP (VBG gaining)
              (NP (DT the) (NN ability)
                (S
                  (VP (TO to)
                    (VP (VB use)
                      (NP
                        (NP (NNP Citric) (NNP Acid))
                        (PP (IN as)
                          (NP (DT a) (NN food) (NN source)))))))))
            (-RRB- -RRB-))
          (PP (IN over)
            (NP
              (NP (DT the) (NN span))
              (PP (IN of)
                (NP (CD twenty) (NNS years))))))))
    (. ?)))

advmod(underwent-5, Where-1)
nn(bacteria-4, E.-2)
nn(bacteria-4, Coli-3)
nsubj(underwent-5, bacteria-4)
root(ROOT-0, underwent-5)
det(change-8, a-6)
amod(change-8, significant-7)
dobj(underwent-5, change-8)
dep(change-8, gaining-10)
det(ability-12, the-11)
dobj(gaining-10, ability-12)
aux(use-14, to-13)
infmod(ability-12, use-14)
nn(Acid-16, Citric-15)
dobj(use-14, Acid-16)
det(source-20, a-18)
nn(source-20, food-19)
prep_as(Acid-16, source-20)
det(span-24, the-23)
prep_over(change-8, span-24)
num(years-27, twenty-26)
prep_of(span-24, years-27)

(ROOT
  (S
    (S
      (NP (DT That) (NN experiment))
      (VP (VBD was)
        (NP
          (NP (DT a)
            (ADJP (RB very) (JJ good))
            (NN example))
          (PP (IN of)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (DT a) (NNS species))
                (VP (MD can)
                  (VP (VB change)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN presence))
                        (PP (IN of)
                          (NP (JJ environmental) (NNS pressures)))))))))))))
    (: ...)
    (S
      (PP (IN without)
        (NP
          (NP (JJ genetic) (NN manipulation))
          (PP (IN from)
            (NP
              (NP (DT a) (`` ``) (NN designer) ('' ''))
              (`` ``)
              (NP (NNP Unsurprisingly))))))
      (NP (DT the)
        (ADJP (RB very) (JJ next))
        (NN sentence))
      (VP (VBZ is)
        (ADJP (NN contradictory))))
    (: :)
    (S
      (NP (DT Those) (JJ alternate) (NNS ideas))
      (, ,)
      (PP (IN unlike)
        (NP
          (NP (DT the) (NNS hypotheses))
          (VP (VBN investigated)
            (PP (IN in)
              (NP (DT these) (NNS papers))))))
      (, ,)
      (VP (VBP remain)
        (ADJP (RB thoroughly) (JJ untested))))
    (. .)))

det(experiment-2, That-1)
nsubj(example-7, experiment-2)
cop(example-7, was-3)
det(example-7, a-4)
advmod(good-6, very-5)
amod(example-7, good-6)
root(ROOT-0, example-7)
advmod(change-13, how-9)
det(species-11, a-10)
nsubj(change-13, species-11)
aux(change-13, can-12)
prepc_of(example-7, change-13)
det(presence-16, the-15)
prep_in(change-13, presence-16)
amod(pressures-19, environmental-18)
prep_of(presence-16, pressures-19)
amod(manipulation-23, genetic-22)
prep_without(contradictory-36, manipulation-23)
det(designer-27, a-25)
prep_from(manipulation-23, designer-27)
dep(designer-27, Unsurprisingly-30)
det(sentence-34, the-31)
advmod(next-33, very-32)
amod(sentence-34, next-33)
nsubj(contradictory-36, sentence-34)
cop(contradictory-36, is-35)
parataxis(example-7, contradictory-36)
det(ideas-40, Those-38)
amod(ideas-40, alternate-39)
nsubj(untested-52, ideas-40)
det(hypotheses-44, the-43)
prep_unlike(untested-52, hypotheses-44)
partmod(hypotheses-44, investigated-45)
det(papers-48, these-47)
prep_in(investigated-45, papers-48)
cop(untested-52, remain-50)
advmod(untested-52, thoroughly-51)
parataxis(example-7, untested-52)

(ROOT
  (SQ
    (VP (VB '') (`` ``)
      (ADVP (RB How) (RB so)))
    (. ?)))

advmod(so-4, How-3)
root(ROOT-0, so-4)

(ROOT
  (S ('' '')
    (S
      (NP (NNP ID))
      (ADVP (RB only))
      (VP (VBZ says)
        (SBAR (IN that)
          (S
            (NP (DT all) (NN DNA))
            (VP (VBZ has)
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP (DT a) (NN purpose))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does) (RB not)
      (VP
        (VP (VB predict)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT that) (NN purpose))
              (VP (VBZ is)))))
        (CC or)
        (VP (VB describe)
          (NP
            (NP (DT a) (NN mechanism))
            (PP (IN for)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP
                    (NP (DT that) (NN part))
                    (PP (IN of)
                      (NP (DT the) (NNP DNA) (NN strand))))
                  (VP (VBD came)
                    (S
                      (VP (TO to)
                        (VP (VB be))))))))))))
    (. .)))

nsubj(says-4, ID-2)
advmod(says-4, only-3)
ccomp(predict-17, says-4)
complm(has-8, that-5)
det(DNA-7, all-6)
nsubj(has-8, DNA-7)
xsubj(have-10, DNA-7)
ccomp(says-4, has-8)
aux(have-10, to-9)
xcomp(has-8, have-10)
det(purpose-12, a-11)
dobj(have-10, purpose-12)
nsubj(predict-17, it-14)
nsubj(describe-23, it-14)
aux(predict-17, does-15)
neg(predict-17, not-16)
root(ROOT-0, predict-17)
dobj(is-21, what-18)
det(purpose-20, that-19)
nsubj(is-21, purpose-20)
ccomp(predict-17, is-21)
conj_or(predict-17, describe-23)
det(mechanism-25, a-24)
dobj(describe-23, mechanism-25)
advmod(came-34, how-27)
det(part-29, that-28)
nsubj(came-34, part-29)
xsubj(be-36, part-29)
det(strand-33, the-31)
nn(strand-33, DNA-32)
prep_of(part-29, strand-33)
prepc_for(mechanism-25, came-34)
aux(be-36, to-35)
xcomp(came-34, be-36)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB show)
      (NP
        (NP (CD one) (VBN recorded) (NN demonstration))
        (PP (IN of)
          (NP
            (NP (JJ intelligent) (NN design))
            (PP (IN in)
              (NP (NN action)))))))
    (. ?)))

aux(show-3, Can-1)
nsubj(show-3, you-2)
root(ROOT-0, show-3)
num(demonstration-6, one-4)
amod(demonstration-6, recorded-5)
dobj(show-3, demonstration-6)
amod(design-9, intelligent-8)
prep_of(demonstration-6, design-9)
prep_in(design-9, action-11)

(ROOT
  (FRAG
    (NP
      (NP (CD One) (JJ scientific) (NN study))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD would)
            (VP (VB show)
              (NP
                (NP (DT the) (NN manipulation))
                (PP (IN of)
                  (NP (DT a) (NN designer)))))))))
    (. ?)))

num(study-3, One-1)
amod(study-3, scientific-2)
root(ROOT-0, study-3)
nsubj(show-6, study-3)
aux(show-6, would-5)
rcmod(study-3, show-6)
det(manipulation-8, the-7)
dobj(show-6, manipulation-8)
det(designer-11, a-10)
prep_of(manipulation-8, designer-11)

(ROOT
  (S ('' '')
    (NP (DT The) (NN alteration))
    (ADVP (IN of)
      (NP (DT an) (NN organism)))
    (VP
      (VP (MD will) (RB not)
        (ADVP (RB always))
        (VP (VB be)
          (ADJP (JJ slow)
            (CC and)
            (JJ gradual))))
      (, ,)
      (CC or)
      (VP (VBZ step-by-step)))
    (. .)))

det(alteration-3, The-2)
nsubj(slow-11, alteration-3)
nsubj(gradual-13, alteration-3)
nsubj(step-by-step-16, alteration-3)
advmod(slow-11, of-4)
det(organism-6, an-5)
pobj(of-4, organism-6)
aux(slow-11, will-7)
neg(slow-11, not-8)
advmod(slow-11, always-9)
cop(slow-11, be-10)
root(ROOT-0, slow-11)
conj_and(slow-11, gradual-13)
conj_or(slow-11, step-by-step-16)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB Where))
        (S
          (VP (VBZ does)
            (NP (JJ evolutionary) (NN theory)))))
      (VP (VBP say)))
    (IN that)
    (S
      (NP (PRP it))
      (VP (MD will)
        (VP (VB be)
          (ADJP (JJ slow)
            (CC or)
            (JJ gradual)))))
    (. ?)))

advmod(does-3, Where-2)
advcl(say-6, does-3)
csubj(say-6, does-3)
amod(theory-5, evolutionary-4)
dobj(does-3, theory-5)
root(ROOT-0, say-6)
dep(say-6, that-7)
nsubj(slow-11, it-8)
nsubj(gradual-13, it-8)
aux(slow-11, will-9)
cop(slow-11, be-10)
ccomp(say-6, slow-11)
ccomp(say-6, gradual-13)
conj_or(slow-11, gradual-13)

(ROOT
  (S
    (NP (NNP Evolution))
    (VP (VBZ has)
      (VP (VBN been)
        (ADJP (JJ observed)
          (S
            (VP (TO to)
              (VP (VB act)
                (ADVP (RB very) (RB quickly))
                (, ,)
                (ADVP (RB sometimes))))))
        (PP (IN over)
          (NP
            (NP (DT the) (NN course))
            (PP (IN of)
              (NP (NNS decades)))))))
    (. .)))

nsubj(observed-4, Evolution-1)
aux(observed-4, has-2)
cop(observed-4, been-3)
root(ROOT-0, observed-4)
aux(act-6, to-5)
xcomp(observed-4, act-6)
advmod(quickly-8, very-7)
advmod(act-6, quickly-8)
advmod(act-6, sometimes-10)
det(course-13, the-12)
prep_over(observed-4, course-13)
prep_of(course-13, decades-15)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (DT That))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ determines)
              (NP (DT the) (JJ fundamental))))))
      (VP (VBZ features)))
    (IN of)
    (S
      (NP (DT an) (NN organism))
      (VP (MD will)
        (VP (VB be)
          (NP
            (NP (JJ logical))
            (CC and)
            (NP (NNP ordered) (-LRB- -LRB-) (NNP eg))))))
    (. .)))

nsubj(determines-4, That-2)
nsubj(features-7, That-2)
rcmod(That-2, determines-4)
det(fundamental-6, the-5)
dobj(determines-4, fundamental-6)
root(ROOT-0, features-7)
dep(features-7, of-8)
det(organism-10, an-9)
nsubj(logical-13, organism-10)
aux(logical-13, will-11)
cop(logical-13, be-12)
ccomp(features-7, logical-13)
nn(eg-17, ordered-15)
ccomp(features-7, eg-17)
conj_and(logical-13, eg-17)

(ROOT
  (SQ
    (VP (VB DNA) (-RRB- -RRB-)
      (ADJP
        (PRN (, ,)
          (ADVP (RB as) (RB opposed))
          (PP (TO to)))
        (JJ random)))
    (. .)))

root(ROOT-0, DNA-1)
advmod(opposed-5, as-4)
dep(to-6, opposed-5)
dep(random-7, to-6)
acomp(DNA-1, random-7)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (DT The) (NNP Theory))
        (PP (IN of)
          (NP (NNP Evolution))))
      (VP (VBZ says)
        (NP (DT the) (JJ same) (NN thing))))
    (: ...)
    (S
      (S
        (NP (NNS features))
        (VP (VBP are) (RB not)
          (ADJP (JJ random))))
      (, ,)
      (NP (PRP they))
      (VP (VBP are)
        (VP (`` ``) (VBN built) ('' '')
          (PP (IN on)
            (NP
              (NP (NNS features))
              (ADJP
                (ADJP (RB already) (JJ present)
                  (PP (IN in)
                    (NP (DT an) (NN organism))))
                (PRN (-LRB- -LRB-)
                  (S
                    (NP (DT A) (NN fish))
                    (VP (MD can) (RB not)
                      (VP (VB give)
                        (NP (NN birth))
                        (PP (TO to)
                          (NP (DT a) (NN bird))))))
                  (-RRB- -RRB-))))))))
    (. .)))

det(Theory-3, The-2)
nsubj(says-6, Theory-3)
prep_of(Theory-3, Evolution-5)
root(ROOT-0, says-6)
det(thing-9, the-7)
amod(thing-9, same-8)
dobj(says-6, thing-9)
nsubj(random-14, features-11)
cop(random-14, are-12)
neg(random-14, not-13)
ccomp(built-19, random-14)
nsubjpass(built-19, they-16)
auxpass(built-19, are-17)
parataxis(says-6, built-19)
prep_on(built-19, features-22)
advmod(present-24, already-23)
amod(features-22, present-24)
det(organism-27, an-26)
prep_in(present-24, organism-27)
det(fish-30, A-29)
nsubj(give-33, fish-30)
aux(give-33, can-31)
neg(give-33, not-32)
dep(present-24, give-33)
dobj(give-33, birth-34)
det(bird-37, a-36)
prep_to(give-33, bird-37)

(ROOT
  (S ('' '')
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN explanation))
        (VP (VBG invoking)
          (NP
            (NP (NN randomness)
              (CC or)
              (NN chance))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD can)
                  (VP (VB explain)
                    (NP (VBN specified) (NN complexity))))))))))
    (. .)))

expl(is-3, There-2)
root(ROOT-0, is-3)
det(explanation-5, no-4)
nsubj(is-3, explanation-5)
partmod(explanation-5, invoking-6)
dobj(invoking-6, randomness-7)
nsubj(explain-12, randomness-7)
dobj(invoking-6, chance-9)
conj_or(randomness-7, chance-9)
nsubj(explain-12, chance-9)
aux(explain-12, can-11)
rcmod(randomness-7, explain-12)
amod(complexity-14, specified-13)
dobj(explain-12, complexity-14)

