(ROOT
  (S
    (S
      (NP (DT The) (NNP Ayn) (NNP Rand) (NNP Center))
      (VP (VBZ says)))
    (: :)
    (S
      (NP (NNP ID))
      (VP (VBZ claims)
        (SBAR (IN that)
          (S
            (NP (NN design))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN inferred)
                  (ADVP (RB merely))
                  (PP (IN from)
                    (NP
                      (ADJP (JJ observed))
                      (NN complexity)
                      (PRN (-LRB- -LRB-)
                        (NP (JJ specified) (NN complexity))
                        (-RRB- -RRB-))
                      (NN i.e.)))
                  (, ,)
                  (SBAR (IN that)
                    (S
                      (NP (NN complexity))
                      (VP (VBZ is)
                        (NP
                          (NP (NN prima) (NN facie) (NN evidence))
                          (PP (IN for)
                            (NP (NN design))))))))))))))
    (. .)))

det(Center-4, The-1)
nn(Center-4, Ayn-2)
nn(Center-4, Rand-3)
nsubj(says-5, Center-4)
root(ROOT-0, says-5)
nsubj(claims-8, ID-7)
parataxis(says-5, claims-8)
complm(inferred-13, that-9)
nsubjpass(inferred-13, design-10)
aux(inferred-13, can-11)
auxpass(inferred-13, be-12)
ccomp(claims-8, inferred-13)
advmod(inferred-13, merely-14)
amod(i.e.-22, observed-16)
nn(i.e.-22, complexity-17)
amod(complexity-20, specified-19)
appos(i.e.-22, complexity-20)
prep_from(inferred-13, i.e.-22)
complm(evidence-29, that-24)
nsubj(evidence-29, complexity-25)
cop(evidence-29, is-26)
nn(evidence-29, prima-27)
nn(evidence-29, facie-28)
ccomp(inferred-13, evidence-29)
prep_for(evidence-29, design-31)

(ROOT
  (S (CC But)
    (PP (IN on)
      (NP (DT this) (NN premise)))
    (, ,)
    (NP
      (NP (DT any) (NN natural))
      (VP (VBG being)
        (ADJP (JJ capable))
        (PP (IN of)
          (S
            (VP (VBG designing)
              (NP
                (NP (DT the) (JJ complex) (NNS features))
                (PP (IN of)
                  (NP (JJ earthly) (NN life)))))))))
    (VP (MD would)
      (VP (VB exhibit)
        (NP (JJ sufficient) (NN complexity))
        (S
          (VP (TO to)
            (VP (VB require)
              (NP (PRP$ its) (JJ own) (NN designer)))))))
    (. .)))

cc(exhibit-19, But-1)
det(premise-4, this-3)
prep_on(exhibit-19, premise-4)
det(natural-7, any-6)
nsubj(exhibit-19, natural-7)
cop(capable-9, being-8)
partmod(natural-7, capable-9)
prepc_of(capable-9, designing-11)
det(features-14, the-12)
amod(features-14, complex-13)
dobj(designing-11, features-14)
amod(life-17, earthly-16)
prep_of(features-14, life-17)
aux(exhibit-19, would-18)
root(ROOT-0, exhibit-19)
amod(complexity-21, sufficient-20)
dobj(exhibit-19, complexity-21)
aux(require-23, to-22)
xcomp(exhibit-19, require-23)
poss(designer-26, its-24)
amod(designer-26, own-25)
dobj(require-23, designer-26)

(ROOT
  (FRAG
    (ADJP (FW yes) (. .))
    (. .)))

root(ROOT-0, yes-1)

(ROOT
  (S
    (NP
      (NP (DT a) (NN scientist))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ creates)
            (NP (NN life))))))
    (VP (VBZ requires)
      (NP (DT a) (NN designer)))
    (. .)))

det(scientist-2, a-1)
nsubj(creates-4, scientist-2)
nsubj(requires-6, scientist-2)
rcmod(scientist-2, creates-4)
dobj(creates-4, life-5)
root(ROOT-0, requires-6)
det(designer-8, a-7)
dobj(requires-6, designer-8)

(ROOT
  (S
    (ADVP (RB still))
    (NP (DT this))
    (VP (VBZ is)
      (ADVP (RB really))
      (NP (PRP$ your) (NN argument)))
    (. ?)))

advmod(argument-6, still-1)
nsubj(argument-6, this-2)
cop(argument-6, is-3)
advmod(argument-6, really-4)
poss(argument-6, your-5)
root(ROOT-0, argument-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (ADJP (RB really) (JJ unimpressive)))
    (. .)))

nsubj(unimpressive-4, That-1)
cop(unimpressive-4, 's-2)
advmod(unimpressive-4, really-3)
root(ROOT-0, unimpressive-4)

(ROOT
  (S (CC Or)
    (VP (VBZ is)
      (ADJP
        (ADJP
          (NP (DT this) (RB just))
          (NP (DT the) (JJ same)))
        (JJ old))
      (SBAR (`` ``)
        (WHNP (WP who))
        (S
          (VP (VBD made)
            (NP
              (NP (NN God) ('' '') (NN argument))
              ('' '')
              (VP (VBN dressed)
                (PRT (RP up))))))))
    (. .)))

cc(old-7, Or-1)
cop(old-7, is-2)
det(just-4, this-3)
dep(old-7, just-4)
det(same-6, the-5)
dep(just-4, same-6)
root(ROOT-0, old-7)
nsubj(made-10, who-9)
ccomp(old-7, made-10)
nn(argument-13, God-11)
dobj(made-10, argument-13)
partmod(argument-13, dressed-15)
prt(dressed-15, up-16)

(ROOT
  (S
    (PP (IN as)
      (NP (DT a) (NN sidenote)))
    (NP
      (NP (DT a) (NN scientist))
      (VP (VBG creating)
        (NP (NN life))))
    (VP (VBZ is)
      (PP (RB not)
        (FRAG
          (NP (DT that))
          (ADJP (JJ impressive))
          (ADVP (RB either))
          (. .))))
    (. .)))

det(sidenote-3, a-2)
prep_as(is-8, sidenote-3)
det(scientist-5, a-4)
nsubj(is-8, scientist-5)
partmod(scientist-5, creating-6)
dobj(creating-6, life-7)
root(ROOT-0, is-8)
prep(is-8, not-9)
dep(not-9, that-10)
dep(that-10, impressive-11)
dep(that-10, either-12)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN equivalent))
        (PP (IN of)
          (S
            (VP
              (VP (VBG burning)
                (NP (DT a) (NN cd)))
              (CC and)
              (VP (VBG saying) (`` ``)
                (NP (NN look))))))))
    (: ...)))

nsubj(equivalent-4, it-1)
cop(equivalent-4, 's-2)
det(equivalent-4, the-3)
root(ROOT-0, equivalent-4)
prepc_of(equivalent-4, burning-6)
det(cd-8, a-7)
dobj(burning-6, cd-8)
prepc_of(equivalent-4, saying-10)
conj_and(burning-6, saying-10)
dobj(saying-10, look-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD made)
      (NP (NN music)))
    (. !)))

nsubj(made-2, I-1)
root(ROOT-0, made-2)
dobj(made-2, music-3)

