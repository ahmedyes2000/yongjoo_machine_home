(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN evidence))
        (PP (IN for)
          (NP (NN evolution))))
      (VP (VBZ is)
        (ADVP (DT all) (RP around))
        (NP (PRP us))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does)
      (ADVP (RB however))
      (VP (VB require)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB think)
              (PP (IN in)
                (NP
                  (NP (JJ different) (NNS dimensions))
                  (PP (IN of)
                    (NP (NN time)))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD can)
                        (VP (VB be)
                          (ADJP (JJ hard)
                            (S
                              (VP (TO to)
                                (VP (VB imagine))))))))))))))))
    (. .)))

det(evidence-2, The-1)
nsubj(us-8, evidence-2)
prep_for(evidence-2, evolution-4)
cop(us-8, is-5)
dep(around-7, all-6)
advmod(us-8, around-7)
ccomp(require-13, us-8)
nsubj(require-13, it-10)
aux(require-13, does-11)
advmod(require-13, however-12)
root(ROOT-0, require-13)
nsubj(think-16, you-14)
aux(think-16, to-15)
xcomp(require-13, think-16)
amod(dimensions-19, different-18)
prep_in(think-16, dimensions-19)
nsubj(hard-25, dimensions-19)
prep_of(dimensions-19, time-21)
aux(hard-25, can-23)
cop(hard-25, be-24)
rcmod(dimensions-19, hard-25)
aux(imagine-27, to-26)
xcomp(hard-25, imagine-27)

