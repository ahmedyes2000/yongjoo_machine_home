(ROOT
  (NP
    (NP (`` ``) (NNP Meaningless) (NNP nonsense) (, ,))
    (PP (IN of)
      (NP (NN course)))
    (. .)))

nn(nonsense-3, Meaningless-2)
root(ROOT-0, nonsense-3)
prep_of(nonsense-3, course-6)

(ROOT
  (S
    (VP (VB Name)
      (NP (DT a) (`` ``) (NN prediction) ('' '')))
    (. .)))

root(ROOT-0, Name-1)
det(prediction-4, a-2)
dobj(Name-1, prediction-4)

(ROOT
  (S ('' '')
    (S (IN So)
      (NP (PRP he))
      (VP (VBZ brings)
        (PRT (RP up))
        (NP
          (NP (NNS pseudogenes))
          (PP (IN in)
            (NP
              (NP (CD one) (NN sentence))
              (PP (IN in)
                (NP (DT a) (NN paragraph) (NN ABOUT) (NN pseudogenes))))))))
    (, ,)
    (NP (NNP and))
    (ADVP (PRP you))
    (VP (VBP say)
      (SBAR (IN that)
        (S
          (VP (VBZ 's)
            (VP (VBG changing)
              (NP (DT the) (NN subject) (NN ???)))))))))

dep(brings-4, So-2)
nsubj(brings-4, he-3)
ccomp(say-18, brings-4)
prt(brings-4, up-5)
dobj(brings-4, pseudogenes-6)
num(sentence-9, one-8)
prep_in(pseudogenes-6, sentence-9)
det(pseudogenes-14, a-11)
nn(pseudogenes-14, paragraph-12)
nn(pseudogenes-14, ABOUT-13)
prep_in(sentence-9, pseudogenes-14)
nsubj(say-18, and-16)
advmod(say-18, you-17)
root(ROOT-0, say-18)
complm(changing-21, that-19)
aux(changing-21, 's-20)
ccomp(say-18, changing-21)
det(???-24, the-22)
nn(???-24, subject-23)
dobj(changing-21, ???-24)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBD was)
      (NP
        (NP (DT the) (JJ original) (NN point))
        (PP (IN in)
          (NP (DT that) (NN case)))))
    (. ?)))

attr(was-2, What-1)
root(ROOT-0, was-2)
det(point-5, the-3)
amod(point-5, original-4)
nsubj(was-2, point-5)
det(case-8, that-7)
prep_in(point-5, case-8)

(ROOT
  (S (`` ``)
    (SBAR (IN If)
      (S
        (NP (NN science))
        (VP (MD ca) (RB n't)
          (VP (VB explain)
            (NP (PRP it))
            (ADVP (RB yet))))))
    (, ,)
    (NP (RB then) (NN science))
    (VP (MD will)
      (VP (VB continue)
        (S
          (VP (TO to)
            (VP (VB explore)
              (NP (NNS alternatives)))))))
    (. .)))

mark(explain-6, If-2)
nsubj(explain-6, science-3)
aux(explain-6, ca-4)
neg(explain-6, n't-5)
advcl(continue-13, explain-6)
dobj(explain-6, it-7)
advmod(explain-6, yet-8)
advmod(science-11, then-10)
nsubj(continue-13, science-11)
xsubj(explore-15, science-11)
aux(continue-13, will-12)
root(ROOT-0, continue-13)
aux(explore-15, to-14)
xcomp(continue-13, explore-15)
dobj(explore-15, alternatives-16)

(ROOT
  (FRAG ('' '')
    (NP (NN Nothing))
    (PP
      (ADVP (JJ wrong))
      (IN with)
      (NP (DT that)))
    (. .)))

root(ROOT-0, Nothing-2)
advmod(with-4, wrong-3)
dep(Nothing-2, with-4)
pobj(with-4, that-5)

(ROOT
  (S
    (NP (NNP ID))
    (VP (VBZ is)
      (ADVP (RB merely))
      (NP (DT a) (JJ useless) (`` ``) (JJ dead) (NN end) ('' '')))
    (: ...)))

nsubj(end-8, ID-1)
cop(end-8, is-2)
advmod(end-8, merely-3)
det(end-8, a-4)
amod(end-8, useless-5)
amod(end-8, dead-7)
root(ROOT-0, end-8)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN While)
        (S
          (VP (VBN Evolution)
            (ADVP (RB simply)))))
      (VP (VBZ declares)))
    (RB all)
    (S
      (NP (NNS problems))
      (VP (VBD solved)
        (PP (IN without)
          (NP (JJ further) (NN notice)))))
    (. .)))

mark(Evolution-3, While-2)
csubj(declares-5, Evolution-3)
advmod(Evolution-3, simply-4)
root(ROOT-0, declares-5)
advmod(declares-5, all-6)
nsubj(solved-8, problems-7)
ccomp(declares-5, solved-8)
amod(notice-11, further-10)
prep_without(solved-8, notice-11)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (: ...)
          (NP (IN to))
          (PP (VB try)
            (SBAR (IN to)
              (S
                (VP (VBP allow)
                  (NP (NNS creationists)))))))
        (PP (TO to)))
      (VP (VBP claim)))
    (IN that)
    (S
      (NP (NN evolution))
      (VP (MD might)
        (VP (VB be)
          (ADJP (JJ wrong)))))
    (. .)))

nsubj(claim-9, to-3)
prep(to-3, try-4)
mark(allow-6, to-5)
pcomp(try-4, allow-6)
dobj(allow-6, creationists-7)
prep(to-3, to-8)
root(ROOT-0, claim-9)
dep(claim-9, that-10)
nsubj(wrong-14, evolution-11)
aux(wrong-14, might-12)
cop(wrong-14, be-13)
ccomp(claim-9, wrong-14)

(ROOT
  (S ('' '')
    (NP (NNP Explain))
    (ADVP (WRB how))
    (VP (`` ``) (VBZ creationists) ('' ''))
    (S
      (VP (VBP are)
        (ADJP (JJ relevant)
          (PP (TO to)
            (NP (DT this) (NN discussion))))))
    (. .)))

nsubj(creationists-5, Explain-2)
advmod(creationists-5, how-3)
root(ROOT-0, creationists-5)
cop(relevant-8, are-7)
ccomp(creationists-5, relevant-8)
det(discussion-11, this-10)
prep_to(relevant-8, discussion-11)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ funny))
      (SBAR (IN because)
        (S
          (S
            (NP (PRP I))
            (ADVP (RB already))
            (VP (VBD named)
              (NP
                (NP (DT some))
                (, ,)
                (VP (VBN provided)
                  (NP (NNS resources))
                  (S
                    (VP (TO to)
                      (VP (VB find)
                        (NP (PRP them)))))))))
          (, ,)
          (CC and)
          (S
            (ADVP (RB yet))
            (NP (PRP you))
            (VP (VBD seemed)
              (S
                (VP
                  (VP (TO to)
                    (VP (VB dodge)
                      (NP (DT the) (NN argument))
                      (ADVP (RB altogether))
                      (: :)
                      (ADVP (RB http:\/\/www.opposingviews.com\/comments\/id-is-science))))
                  (PRN (-LRB- -LRB-)
                    (S
                      (VP
                        (VP (VB see)
                          (NP (DT the) (CD three) (NNS links))
                          (PP (IN from)
                            (NP (DT the) (JJ first) (NN comment))))
                        (CC and)
                        (VP (VB please)
                          (S
                            (VP (VB respond)
                              (ADVP (RB there)))))))
                    (-RRB- -RRB-))))))
          ('' '')
          (CC And)
          (S
            (NP (DT that) (NN statement))
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBN refuted))))))))
    (. .)))

nsubj(funny-4, It-2)
cop(funny-4, 's-3)
root(ROOT-0, funny-4)
mark(named-8, because-5)
nsubj(named-8, I-6)
advmod(named-8, already-7)
advcl(funny-4, named-8)
dobj(named-8, some-9)
partmod(some-9, provided-11)
dobj(provided-11, resources-12)
aux(find-14, to-13)
xcomp(provided-11, find-14)
dobj(find-14, them-15)
advmod(seemed-20, yet-18)
nsubj(seemed-20, you-19)
advcl(funny-4, seemed-20)
conj_and(named-8, seemed-20)
aux(dodge-22, to-21)
ccomp(seemed-20, dodge-22)
det(argument-24, the-23)
dobj(dodge-22, argument-24)
advmod(dodge-22, altogether-25)
advmod(dodge-22, http:\/\/www.opposingviews.com\/comments\/id-is-science-27)
parataxis(dodge-22, see-29)
det(links-32, the-30)
num(links-32, three-31)
dobj(see-29, links-32)
det(comment-36, the-34)
amod(comment-36, first-35)
prep_from(see-29, comment-36)
parataxis(dodge-22, please-38)
conj_and(see-29, please-38)
ccomp(please-38, respond-39)
advmod(respond-39, there-40)
det(statement-45, that-44)
nsubjpass(refuted-48, statement-45)
aux(refuted-48, has-46)
auxpass(refuted-48, been-47)
advcl(funny-4, refuted-48)
conj_and(named-8, refuted-48)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (`` ``) (VB prove) ('' '')
        (S
          (NP (DT that) (NN evolution))
          (VP (MD ca) (RB n't)
            (VP (VB explain)
              (S (`` ``)
                (NP (DT this))
                ('' '')))))))
    (. .)))

nsubj(prove-5, You-1)
aux(prove-5, ca-2)
neg(prove-5, n't-3)
root(ROOT-0, prove-5)
det(evolution-8, that-7)
nsubj(explain-11, evolution-8)
aux(explain-11, ca-9)
neg(explain-11, n't-10)
ccomp(prove-5, explain-11)
dep(explain-11, this-13)

(ROOT
  (S ('' '')
    (PP (IN If)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD were)
            (ADJP (JJ true) (RB then)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (MD would) (RB n't)
                    (VP (VB be)
                      (ADJP (JJ able)))))))))))
    (VP (VBP prove)
      (SBAR
        (S
          (NP (NN evolution))
          (VP (MD can)
            (VP (VB explain)
              (NP (PRP it))
              (ADVP (RB either)))))))
    (. .)))

dep(prove-12, If-2)
nsubj(true-5, that-3)
cop(true-5, were-4)
pcomp(If-2, true-5)
advmod(true-5, then-6)
nsubj(able-11, you-7)
aux(able-11, would-8)
neg(able-11, n't-9)
cop(able-11, be-10)
dep(true-5, able-11)
root(ROOT-0, prove-12)
nsubj(explain-15, evolution-13)
aux(explain-15, can-14)
ccomp(prove-12, explain-15)
dobj(explain-15, it-16)
advmod(explain-15, either-17)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ interesting)
        (PP (IN in)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ refutations)
                (S
                  (VP (TO to)
                    (VP (VB irreducibility)
                      (NP (PRP$ your) (NN referring))
                      (PP (TO to)))))
                (, ,)
                (S
                  (VP (VB feel)
                    (ADJP (JJ free)
                      (S
                        (VP (TO to)
                          (VP (VB cite)
                            (NP
                              (NP (NNP Ken) (NNP Miller))
                              (CC or)
                              (NP (NNP Nick) (NNP Matzke)))))))))))))))
    (. .)))

cc(interesting-4, And-1)
nsubj(interesting-4, I-2)
cop(interesting-4, 'm-3)
root(ROOT-0, interesting-4)
nsubj(refutations-7, what-6)
prepc_in(interesting-4, refutations-7)
aux(irreducibility-9, to-8)
xcomp(refutations-7, irreducibility-9)
poss(referring-11, your-10)
dobj(irreducibility-9, referring-11)
prep(irreducibility-9, to-12)
ccomp(refutations-7, feel-14)
acomp(feel-14, free-15)
aux(cite-17, to-16)
xcomp(free-15, cite-17)
nn(Miller-19, Ken-18)
dobj(cite-17, Miller-19)
nn(Matzke-22, Nick-21)
dobj(cite-17, Matzke-22)
conj_or(Miller-19, Matzke-22)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB highly))
    (VP (VBP doubt)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP know)
            (SBAR
              (S
                (PP (IN of)
                  (NP (NN anything)))
                (NP (PRP I))
                (VP (VBP have) (RB n't)
                  (VP (VBN heard)
                    (ADVP (RB before))))))))))
    (. .)))

nsubj(doubt-3, I-1)
advmod(doubt-3, highly-2)
root(ROOT-0, doubt-3)
nsubj(know-5, you-4)
ccomp(doubt-3, know-5)
prep_of(heard-11, anything-7)
nsubj(heard-11, I-8)
aux(heard-11, have-9)
neg(heard-11, n't-10)
ccomp(know-5, heard-11)
advmod(heard-11, before-12)

(ROOT
  (S ('' '')
    (PP (VBG Mainly)
      (PP (IN because)
        (NP (PRP it))))
    (VP (MD can))
    (. .)))

prep(can-5, Mainly-2)
pcomp(Mainly-2, because-3)
prep_because(Mainly-2, it-4)
root(ROOT-0, can-5)

(ROOT
  (S
    (NP (NNP ''))
    (VP (VBP Prove)
      (NP (PRP it)))
    (. .)))

root(ROOT-0, Prove-2)
dobj(Prove-2, it-3)

(ROOT
  (S ('' '')
    (PP (IN Of)
      (NP
        (NP (NN course))
        (VP (VBG Behe))))
    (VP
      (VP (VBD ignored)
        (NP (DT the) (JJ original) (NN point)))
      (CC and)
      (VP (VBD changed)
        (S
          (NP
            (NP (DT the) (NN subject))
            (PP (TO to)
              (NP (NN something))))
          (ADJP (JJ irrelevant)))))
    (. .)))

prep_of(ignored-5, course-3)
partmod(course-3, Behe-4)
root(ROOT-0, ignored-5)
det(point-8, the-6)
amod(point-8, original-7)
dobj(ignored-5, point-8)
conj_and(ignored-5, changed-10)
det(subject-12, the-11)
nsubj(irrelevant-15, subject-12)
prep_to(subject-12, something-14)
xcomp(changed-10, irrelevant-15)

