(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN studied)
          (NP
            (NP (DT a) (NN lot))
            (PP (IN of)
              (NP (NNP Biology)))))))
    (CC and)
    (S
      (PP (TO to)
        (NP (PRP me)))
      (NP (NN evolution))
      (VP (VBZ has)
        (ADVP (RB indeed))
        (VP (VBN been)
          (VP (VBN proved)))))
    (. .)))

nsubj(studied-3, I-1)
aux(studied-3, 've-2)
root(ROOT-0, studied-3)
det(lot-5, a-4)
dobj(studied-3, lot-5)
prep_of(lot-5, Biology-7)
prep_to(proved-15, me-10)
nsubjpass(proved-15, evolution-11)
aux(proved-15, has-12)
advmod(proved-15, indeed-13)
auxpass(proved-15, been-14)
conj_and(studied-3, proved-15)

(ROOT
  (S
    (NP (DT The) (NN way) (NN science))
    (VP (VBZ uses)
      (SBAR
        (S
          (NP (DT the) (NN word) (`` ``) (NN theory) ('' ''))
          (VP (VBZ is)
            (ADVP (RB not)
              (NP (DT the) (JJ same))
              (PP (IN as)
                (NP (DT the) (NN way))))
            (NP (PRP$ its)
              (ADJP (VBN used)
                (PP (IN by)
                  (NP (DT the) (NN general))))
              (NN public))))))
    (. .)))

det(science-3, The-1)
nn(science-3, way-2)
nsubj(uses-4, science-3)
root(ROOT-0, uses-4)
det(theory-8, the-5)
nn(theory-8, word-6)
nsubj(public-22, theory-8)
cop(public-22, is-10)
neg(public-22, not-11)
det(same-13, the-12)
pobj(not-11, same-13)
det(way-16, the-15)
prep_as(not-11, way-16)
poss(public-22, its-17)
amod(public-22, used-18)
det(general-21, the-20)
prep_by(used-18, general-21)
ccomp(uses-4, public-22)

(ROOT
  (S
    (NP (PRP$ Its))
    (VP (RB not)
      (S
        (NP
          (NP (DT an) (`` ``) (NN assumption) ('' ''))
          (PP (IN of)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP it))
                (VP (VBZ works))))))))
    (. .)))

nsubj(not-2, Its-1)
root(ROOT-0, not-2)
det(assumption-5, an-3)
dep(not-2, assumption-5)
advmod(works-10, how-8)
nsubj(works-10, it-9)
prepc_of(assumption-5, works-10)

(ROOT
  (S
    (VP (VB Its)
      (NP
        (NP (DT a) (JJ proved) (NN explanation))
        (PP (IN of)
          (NP (PRP it)))))
    (. .)))

root(ROOT-0, Its-1)
det(explanation-4, a-2)
amod(explanation-4, proved-3)
dobj(Its-1, explanation-4)
prep_of(explanation-4, it-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN come)
        (PP (IN across)
          (NP
            (NP (JJ many) (JJ religious) (NNS people))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP see)
                  (NP (NN evolution))
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN threat))
                      (SBAR
                        (WHPP (TO to)
                          (WHNP (WP what)))
                        (S
                          (NP (PRP they))
                          (VP (VBP believe)))))))))))))
    (. .)))

nsubj(come-3, I-1)
aux(come-3, have-2)
root(ROOT-0, come-3)
amod(people-7, many-5)
amod(people-7, religious-6)
prep_across(come-3, people-7)
nsubj(see-9, people-7)
rcmod(people-7, see-9)
dobj(see-9, evolution-10)
det(threat-13, a-12)
prep_as(see-9, threat-13)
rel(believe-17, what-15)
nsubj(believe-17, they-16)
rcmod(threat-13, believe-17)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ contradicts)
            (NP (DT the) (NN theory))
            (SBAR (IN that)
              (S
                (NP (NNP God))
                (VP (VBD created)
                  (NP (NN man)))))))))
    (. .)))

nsubj(say-2, They-1)
root(ROOT-0, say-2)
nsubj(contradicts-4, it-3)
ccomp(say-2, contradicts-4)
det(theory-6, the-5)
dobj(contradicts-4, theory-6)
complm(created-9, that-7)
nsubj(created-9, God-8)
ccomp(contradicts-4, created-9)
dobj(created-9, man-10)

(ROOT
  (S (CC But)
    (ADVP (IN at))
    (NP (DT no) (NN point))
    (VP (VBZ has)
      (NP
        (NP (DT the) (NN theory))
        (PP (IN of)
          (NP (NN evolution))))
      (ADVP (RB ever))
      (VP (VBN claimed)
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR
                (WHNP (WP WHO))
                (S
                  (VP (VBD created)
                    (NP
                      (NP (DT the) (NN building) (NNS blocks))
                      (CC or)
                      (NP (DT the) (NN why)))))))))))
    (. .)))

cc(claimed-11, But-1)
advmod(claimed-11, at-2)
det(point-4, no-3)
nsubj(claimed-11, point-4)
xsubj(know-13, point-4)
aux(claimed-11, has-5)
det(theory-7, the-6)
dobj(claimed-11, theory-7)
xsubj(know-13, theory-7)
prep_of(theory-7, evolution-9)
advmod(claimed-11, ever-10)
root(ROOT-0, claimed-11)
aux(know-13, to-12)
xcomp(claimed-11, know-13)
nsubj(created-15, WHO-14)
ccomp(know-13, created-15)
det(blocks-18, the-16)
nn(blocks-18, building-17)
dobj(created-15, blocks-18)
det(why-21, the-20)
dobj(created-15, why-21)
conj_or(blocks-18, why-21)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ my) (NN opinion)))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT a) (NN way)
        (S
          (VP (TO to)
            (VP (VB accept)
              (NP (DT both)))))))
    (. .)))

poss(opinion-3, my-2)
prep_in(is-6, opinion-3)
expl(is-6, there-5)
root(ROOT-0, is-6)
det(way-8, a-7)
nsubj(is-6, way-8)
aux(accept-10, to-9)
infmod(way-8, accept-10)
dobj(accept-10, both-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (SBAR (IN that)
            (S
              (NP (NNP God))
              (VP (VBD created)
                (NP (NN man))
                (ADVP (RB then))))))))
    (NP (NN evolution))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN way))
        (SBAR
          (WHPP (IN by)
            (WHNP (WDT which)))
          (S
            (NP (PRP he))
            (VP (VBD went)
              (PP (IN about)
                (S
                  (VP (VBG doing)
                    (NP (PRP it))))))))))
    (. .)))

mark(believe-3, If-1)
nsubj(believe-3, you-2)
advcl(way-12, believe-3)
complm(created-6, that-4)
nsubj(created-6, God-5)
ccomp(believe-3, created-6)
dobj(created-6, man-7)
advmod(created-6, then-8)
nsubj(way-12, evolution-9)
cop(way-12, is-10)
det(way-12, the-11)
root(ROOT-0, way-12)
rel(went-16, which-14)
nsubj(went-16, he-15)
rcmod(way-12, went-16)
prepc_about(went-16, doing-18)
dobj(doing-18, it-19)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ 's)
      (ADJP (JJ wrong))
      (PP (IN with)
        (WHNP (WDT that))))
    (. ?)))

attr(wrong-3, What-1)
cop(wrong-3, 's-2)
root(ROOT-0, wrong-3)
prep_with(wrong-3, that-5)

(ROOT
  (S
    (S
      (NP (DT The) (JJ general) (NN public))
      (VP (VBZ uses)
        (S
          (NP (DT the) (NN word) (`` ``) (NN theory) ('' ''))
          (VP (TO to)
            (VP (VB describe)
              (NP
                (NP (DT an) (NN assumption))
                (, ,)
                (NP
                  (NP (NN something))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD may)
                        (CC or)
                        (MD may) (RB not)
                        (VP (VB be)
                          (ADJP (JJ true)))))))))))))
    (, ,)
    (NP (NN something) (RB not))
    (VP (VBD proved))
    (. .)))

det(public-3, The-1)
amod(public-3, general-2)
nsubj(uses-4, public-3)
ccomp(proved-26, uses-4)
det(theory-8, the-5)
nn(theory-8, word-6)
nsubj(describe-11, theory-8)
aux(describe-11, to-10)
xcomp(uses-4, describe-11)
det(assumption-13, an-12)
dobj(describe-11, assumption-13)
appos(assumption-13, something-15)
nsubj(true-22, something-15)
aux(true-22, may-17)
rcmod(something-15, may-19)
aux(true-22, may-19)
conj_or(true-22, may-19)
neg(true-22, not-20)
cop(true-22, be-21)
rcmod(something-15, true-22)
nsubj(proved-26, something-24)
neg(something-24, not-25)
root(ROOT-0, proved-26)

(ROOT
  (S
    (ADVP (RB Science))
    (ADVP (RB however))
    (, ,)
    (VP (VBZ uses)
      (NP (PRP it))
      (PP (IN in)
        (NP (PDT quite) (DT a) (JJ different) (NN context))))
    (. .)))

advmod(uses-4, Science-1)
advmod(uses-4, however-2)
root(ROOT-0, uses-4)
dobj(uses-4, it-5)
predet(context-10, quite-7)
det(context-10, a-8)
amod(context-10, different-9)
prep_in(uses-4, context-10)

(ROOT
  (S ('' '')
    (PP
      (NP (NNP Theory) ('' ''))
      (IN for)
      (S
        (VP (VBG science))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN explanation))
        (PP (IN of)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (NN something))
              (VP (VBZ works)))))))
    (. .)))

dep(explanation-8, Theory-2)
prepc_for(explanation-8, science-5)
cop(explanation-8, is-6)
det(explanation-8, the-7)
root(ROOT-0, explanation-8)
advmod(works-12, how-10)
nsubj(works-12, something-11)
prepc_of(explanation-8, works-12)

(ROOT
  (S
    (NP
      (NP (RB Not) (DT an) (NN assumption))
      (PP (IN of)
        (UCP
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP it))
              (VP (MD may)
                (VP (VB work)))))
          (, ,)
          (CC but)
          (ADVP (DT a) (RB thorough)
            (CC and)
            (RB well)))))
    (VP (VBD examined)
      (NP
        (NP (NN explanation))
        (PP (IN of)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP it))
              (VP (VBZ works)))))))
    (. .)))

neg(assumption-3, Not-1)
det(assumption-3, an-2)
nsubj(examined-15, assumption-3)
prep(assumption-3, of-4)
advmod(work-8, how-5)
nsubj(work-8, it-6)
aux(work-8, may-7)
dep(of-4, work-8)
dep(thorough-12, a-11)
dep(of-4, thorough-12)
conj_but(work-8, thorough-12)
conj_but(work-8, well-14)
conj_and(thorough-12, well-14)
root(ROOT-0, examined-15)
dobj(examined-15, explanation-16)
advmod(works-20, how-18)
nsubj(works-20, it-19)
prepc_of(explanation-16, works-20)

(ROOT
  (S
    (NP (NN Nothing))
    (VP (VBZ is)
      (VP (VBN given)
        (NP
          (NP (DT the) (NN status))
          (PP (IN of)
            (NP
              (NP (DT a) (`` ``) (NN theory) ('' ''))
              (PP (IN in)
                (NP (NN science))))))
        (SBAR (IN unless)
          (S
            (NP (PRP it))
            (VP (VBZ has)
              (VP (VBN been)
                (VP
                  (VP (VBN tested)
                    (PP
                      (PP (IN over)
                        (CC and)
                        (IN over))
                      (CC and)
                      (PP (IN over)
                        (ADVP (RB again)))))
                  (CC and)
                  (VP (VBN proved)
                    (PP (IN by)
                      (NP (JJ other) (NNS sciences)
                        (CC and)
                        (NN observation)))))))))))
    (. .)))

nsubjpass(given-3, Nothing-1)
auxpass(given-3, is-2)
root(ROOT-0, given-3)
det(status-5, the-4)
dobj(given-3, status-5)
det(theory-9, a-7)
prep_of(status-5, theory-9)
prep_in(theory-9, science-12)
mark(tested-17, unless-13)
nsubjpass(tested-17, it-14)
nsubjpass(proved-25, it-14)
aux(tested-17, has-15)
auxpass(tested-17, been-16)
advcl(given-3, tested-17)
prep(tested-17, over-18)
prep(tested-17, over-20)
conj_and(over-18, over-20)
prep(tested-17, over-22)
conj_and(over-18, over-22)
pcomp(over-22, again-23)
advcl(given-3, proved-25)
conj_and(tested-17, proved-25)
amod(sciences-28, other-27)
prep_by(proved-25, sciences-28)
prep_by(proved-25, observation-30)
conj_and(sciences-28, observation-30)

(ROOT
  (S
    (VP (VB Take)
      (NP (NN gravity))
      (PP (IN for)
        (NP (NN example))))
    (. .)))

root(ROOT-0, Take-1)
dobj(Take-1, gravity-2)
prep_for(Take-1, example-4)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN Law))
        (PP (IN of)
          (NP
            (NP (NNP Gravity))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ says)
                  (SBAR (IN that)
                    (S
                      (NP (NNS things))
                      (VP (VBP tend)
                        (S
                          (VP (TO to)
                            (VP (VB fall)
                              (ADVP (RB downward)))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(Law-4, the-3)
nsubj(is-2, Law-4)
prep_of(Law-4, Gravity-6)
nsubj(says-9, Gravity-6)
rcmod(Gravity-6, says-9)
complm(tend-12, that-10)
nsubj(tend-12, things-11)
xsubj(fall-14, things-11)
ccomp(says-9, tend-12)
aux(fall-14, to-13)
xcomp(tend-12, fall-14)
advmod(fall-14, downward-15)

(ROOT
  (S (RB Then)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NNP Theory))
        (PP (IN of)
          (NP
            (NP (NNP Gravity))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ explains)
                  (SBAR
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (NNP Gravity))
                        (VP (VBZ is))))
                    (, ,)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ causes)
                          (NP (PRP it)))))
                    (, ,)
                    (CC and)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (PRP it))
                        (VP (VBZ works))))))))))))
    (. .)))

advmod(is-3, Then-1)
expl(is-3, there-2)
root(ROOT-0, is-3)
det(Theory-5, the-4)
nsubj(is-3, Theory-5)
prep_of(Theory-5, Gravity-7)
nsubj(explains-10, Gravity-7)
rcmod(Gravity-7, explains-10)
dobj(is-13, what-11)
nsubj(is-13, Gravity-12)
dep(explains-10, is-13)
nsubj(causes-16, what-15)
dep(is-13, causes-16)
dobj(causes-16, it-17)
advmod(works-22, how-20)
nsubj(works-22, it-21)
dep(explains-10, works-22)
conj_and(is-13, works-22)

