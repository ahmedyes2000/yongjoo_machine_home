(ROOT
  (S ('' '')
    (PP (IN If)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD were)
            (ADJP (JJ true) (RB then)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (MD would) (RB n't)
                    (VP (VB be)
                      (ADJP (JJ able)))))))))))
    (VP (VBP prove)
      (SBAR
        (S
          (NP (NN evolution))
          (VP (MD can)
            (VP (VB explain)
              (NP (PRP it))
              (ADVP (RB either)))))))
    (. .)))

dep(prove-12, If-2)
nsubj(true-5, that-3)
cop(true-5, were-4)
pcomp(If-2, true-5)
advmod(true-5, then-6)
nsubj(able-11, you-7)
aux(able-11, would-8)
neg(able-11, n't-9)
cop(able-11, be-10)
dep(true-5, able-11)
root(ROOT-0, prove-12)
nsubj(explain-15, evolution-13)
aux(explain-15, can-14)
ccomp(prove-12, explain-15)
dobj(explain-15, it-16)
advmod(explain-15, either-17)

