(ROOT
  (S
    (NP
      (NP (DT The) (NN design) (NN inference))
      (VP (VBN reached)
        (PP (VBN based)
          (PP (IN on)
            (NP
              (NP (PRP$ our) (NN knowledge))
              (PP (IN of)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (NN nature))
                    (, ,)
                    (S
                      (VP (VBG operating)
                        (ADVP (RB freely))
                        (NP
                          (NP (NN can))
                          (CC &)
                          (S
                            (VP (MD can) (RB not)
                              (VP (VB do)))))))
                    (, ,)
                    (VP (VBN coupled)
                      (PP (IN with)
                        (NP
                          (NP (PRP$ our) (NN knowledge))
                          (PP (IN of)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (VP (VBG designing)
                                  (NP (NNS agencies)))))))))))))))))
    (VP (MD can)
      (VP (VB do)))
    (. .)))

det(inference-3, The-1)
nn(inference-3, design-2)
nsubj(do-30, inference-3)
partmod(inference-3, reached-4)
prepc_based_on(reached-4, on-6)
poss(knowledge-8, our-7)
pobj(reached-4, knowledge-8)
dobj(coupled-21, what-10)
nsubj(coupled-21, nature-11)
partmod(coupled-21, operating-13)
advmod(operating-13, freely-14)
dobj(operating-13, can-15)
aux(do-19, can-17)
neg(do-19, not-18)
dobj(operating-13, do-19)
conj_and(can-15, do-19)
prepc_of(knowledge-8, coupled-21)
poss(knowledge-24, our-23)
prep_with(coupled-21, knowledge-24)
nsubj(designing-27, what-26)
prepc_of(knowledge-24, designing-27)
dobj(designing-27, agencies-28)
aux(do-30, can-29)
root(ROOT-0, do-30)

(ROOT
  (S
    (NP (NNP PvMWe))
    (VP (VBP do) (RB not)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (S
              (VP (VBG designing)
                (NP (NNS agencies))))
            (VP (MD can)
              (VP (VB design)
                (NP
                  (NP (DT a) (NN genome))
                  (CC or)
                  (NP (DT a) (NN flagella)))))))))
    (. .)))

nsubj(know-4, PvMWe-1)
aux(know-4, do-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
complm(design-9, that-5)
csubj(design-9, designing-6)
dobj(designing-6, agencies-7)
aux(design-9, can-8)
ccomp(know-4, design-9)
det(genome-11, a-10)
dobj(design-9, genome-11)
det(flagella-14, a-13)
dobj(design-9, flagella-14)
conj_or(genome-11, flagella-14)

(ROOT
  (S (CC And)
    (ADVP (RB also))
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (SBAR (`` ``)
        (S
          (NP (PRP we))
          (VP (VBP do) (RB n't)
            (VP (VB know) ('' '')
              (SBAR (IN because)
                (S
                  (NP (PDT all) (DT the) (NNS textbooks))
                  (VP (VBP are)
                    (VP (VBG teaching)
                      (SBAR (IN that)
                        (S
                          (NP (DT a) (NN designer))
                          (VP (VBD was) (RB not)
                            (VP (VBN involved))))))))))))))
    (. .)))

cc(is-4, And-1)
advmod(is-4, also-2)
nsubj(is-4, it-3)
root(ROOT-0, is-4)
neg(is-4, not-5)
nsubj(know-10, we-7)
aux(know-10, do-8)
neg(know-10, n't-9)
ccomp(is-4, know-10)
mark(teaching-17, because-12)
predet(textbooks-15, all-13)
det(textbooks-15, the-14)
nsubj(teaching-17, textbooks-15)
aux(teaching-17, are-16)
advcl(know-10, teaching-17)
complm(involved-23, that-18)
det(designer-20, a-19)
nsubjpass(involved-23, designer-20)
auxpass(involved-23, was-21)
neg(involved-23, not-22)
ccomp(teaching-17, involved-23)

(ROOT
  (S (CC So)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP it))
        (VP (VBZ comes)
          (PP (TO to)
            (S
              (VP (VBG teaching)
                (NP
                  (NP (DT the) (NN theory))
                  (PP (IN of)
                    (NP (NN evolution))))))))))
    (NP (DT the) (JJ only) (JJ real) (NN answer))
    (VP (VBZ is)
      (SBAR (`` ``)
        (S
          (NP (PRP we))
          (VP (VBP do) (RB n't)
            (VP (VB know) ('' '')
              (SBAR (RB as) (IN in)
                (S
                  (NP (PRP we))
                  (VP (VBP do) (RB n't)
                    (VP (VB know)
                      (SBAR (IN whether)
                        (CC or)
                        (RB not)
                        (S
                          (NP
                            (NP (DT the) (NNS transformations))
                            (VP (VBN required)
                              (PP (IN by)
                                (NP (JJ universal) (JJ common) (NN descent)))))
                          (VP (VBP are)
                            (ADJP (RB even) (JJ possible)
                              (PP (IN via)
                                (NP
                                  (NP (DT any) (NN amount))
                                  (PP (IN of)
                                    (NP (VBN accumulated) (NNS mutations))))))))))))))))))
    (. .)))

cc(is-15, So-1)
advmod(comes-4, when-2)
nsubj(comes-4, it-3)
advcl(is-15, comes-4)
prepc_to(comes-4, teaching-6)
det(theory-8, the-7)
dobj(teaching-6, theory-8)
prep_of(theory-8, evolution-10)
det(answer-14, the-11)
amod(answer-14, only-12)
amod(answer-14, real-13)
nsubj(is-15, answer-14)
root(ROOT-0, is-15)
nsubj(know-20, we-17)
aux(know-20, do-18)
neg(know-20, n't-19)
ccomp(is-15, know-20)
advmod(know-27, as-22)
dep(know-27, in-23)
nsubj(know-27, we-24)
aux(know-27, do-25)
neg(know-27, n't-26)
ccomp(know-20, know-27)
complm(possible-40, whether-28)
ccomp(know-27, not-30)
conj_or(possible-40, not-30)
det(transformations-32, the-31)
nsubj(possible-40, transformations-32)
partmod(transformations-32, required-33)
amod(descent-37, universal-35)
amod(descent-37, common-36)
agent(required-33, descent-37)
cop(possible-40, are-38)
advmod(possible-40, even-39)
ccomp(know-27, possible-40)
det(amount-43, any-42)
prep_via(possible-40, amount-43)
amod(mutations-46, accumulated-45)
prep_of(amount-43, mutations-46)

(ROOT
  (NP
    (NP
      (ADJP (RB Very) (JJ simple))
      (ADVP (RB really)))
    (: ...)))

advmod(simple-2, Very-1)
root(ROOT-0, simple-2)
advmod(simple-2, really-3)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no)
        (ADJP (JJ inference)
          (PP (TO to)
            (ADJP (JJS best))))
        (NN explanation)))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(explanation-7, no-3)
amod(explanation-7, inference-4)
prep_to(inference-4, best-6)
nsubj(is-2, explanation-7)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP look)
      (PP (IN at)
        (NP (DT the) (NNS options))))
    (. .)))

nsubj(look-2, We-1)
root(ROOT-0, look-2)
det(options-5, the-4)
prep_at(look-2, options-5)

(ROOT
  (S (CC And)
    (NP (DT the) (JJ anti) (NNP ID) (NN option))
    (VP (VBZ is)
      (S (`` ``)
        (NP (PRP it))
        (VP
          (ADVP (RB just))
          (VBD happened))
        ('' '')))
    (. .)))

cc(is-6, And-1)
det(option-5, the-2)
amod(option-5, anti-3)
nn(option-5, ID-4)
nsubj(is-6, option-5)
root(ROOT-0, is-6)
nsubj(happened-10, it-8)
advmod(happened-10, just-9)
ccomp(is-6, happened-10)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do)
      (VP (VB have)
        (NP
          (NP (JJ direct) (NNS observatiuons))
          (PP (IN of)
            (NP
              (NP (NNS agencies))
              (VP (VBG designing)
                (NP (JJ rotary) (NNS motors))))))))
    (. .)))

nsubj(have-3, We-1)
aux(have-3, do-2)
root(ROOT-0, have-3)
amod(observatiuons-5, direct-4)
dobj(have-3, observatiuons-5)
prep_of(observatiuons-5, agencies-7)
partmod(agencies-7, designing-8)
amod(motors-10, rotary-9)
dobj(designing-8, motors-10)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (NP
        (NP (NNP NEVER))
        (SBAR
          (S
            (VP (VBD observed)
              (SBAR
                (S
                  (NP
                    (NP (NN nature))
                    (, ,)
                    (VP (VBG operating)
                      (ADVP (RB freely)))
                    (, ,))
                  (ADVP (RB even))
                  (VP (VBP come)
                    (ADJP (JJ close))))))))))
    (. .)))

nsubj(have-2, We-1)
root(ROOT-0, have-2)
dobj(have-2, NEVER-3)
rcmod(NEVER-3, observed-4)
nsubj(come-11, nature-5)
partmod(nature-5, operating-7)
advmod(operating-7, freely-8)
advmod(come-11, even-10)
ccomp(observed-4, come-11)
acomp(come-11, close-12)

(ROOT
  (S
    (S
      (NP (JJ PvMThe) (NN design) (NN infernence))
      (VP (VBZ is)
        (ADVP (RB alo))
        (RB not)
        (ADJP (JJ disallowed))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (SBAR (RB just) (IN that)
        (S
          (NP (PRP it))
          (VP (MD can) (RB not)
            (VP (VB compete)
              (PP (IN with)
                (NP (DT the) (`` ``)
                  (S
                    (NP (PRP we))
                    (VP (VBP do) (RB n't)
                      (VP (VB know))))
                  ('' '') (NN explanation)))
              (SBAR (IN as)
                (S
                  (NP (PRP it))
                  (VP (VBZ fails)
                    (S
                      (VP (TO to)
                        (VP (VB add)
                          (NP (NN anything)))))))))))))
    (. .)))

amod(infernence-3, PvMThe-1)
nn(infernence-3, design-2)
nsubj(disallowed-7, infernence-3)
cop(disallowed-7, is-4)
advmod(disallowed-7, alo-5)
neg(disallowed-7, not-6)
ccomp('s-10, disallowed-7)
nsubj('s-10, it-9)
root(ROOT-0, 's-10)
advmod(compete-16, just-11)
dep(compete-16, that-12)
nsubj(compete-16, it-13)
aux(compete-16, can-14)
neg(compete-16, not-15)
ccomp('s-10, compete-16)
det(explanation-25, the-18)
nsubj(know-23, we-20)
aux(know-23, do-21)
neg(know-23, n't-22)
dep(explanation-25, know-23)
prep_with(compete-16, explanation-25)
mark(fails-28, as-26)
nsubj(fails-28, it-27)
xsubj(add-30, it-27)
advcl(compete-16, fails-28)
aux(add-30, to-29)
xcomp(fails-28, add-30)
dobj(add-30, anything-31)

(ROOT
  (S
    (NP (DT The) (NN design) (NN inference))
    (VP (VBZ is)
      (ADJP (JJ disallowed)))
    (. .)))

det(inference-3, The-1)
nn(inference-3, design-2)
nsubj(disallowed-5, inference-3)
cop(disallowed-5, is-4)
root(ROOT-0, disallowed-5)

(ROOT
  (S (CC And)
    (NP (NN experience))
    (VP (VBZ tells)
      (NP (PRP us))
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ makes)
            (NP (PDT all) (DT the) (NN difference))
            (PP (IN in)
              (NP (DT the) (NN world)))
            (SBAR (IN whether)
              (CC or)
              (RB not)
              (S
                (NP
                  (NP (DT that))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (VP (VBG being)
                          (VP (VBN investigated)))))))
                (VP (VBD arose)
                  (PP
                    (PP (IN via)
                      (NP (NN agency) (NN involvement)))
                    (CC or)
                    (PP (IN by)
                      (NP (NN nature))))
                  (, ,)
                  (S
                    (VP (VBG operating)
                      (ADVP (RB freely)))))))))))
    (. .)))

cc(tells-3, And-1)
nsubj(tells-3, experience-2)
root(ROOT-0, tells-3)
dobj(tells-3, us-4)
nsubj(makes-6, it-5)
dep(tells-3, makes-6)
predet(difference-9, all-7)
det(difference-9, the-8)
dobj(makes-6, difference-9)
det(world-12, the-11)
prep_in(makes-6, world-12)
complm(arose-21, whether-13)
ccomp(makes-6, not-15)
conj_or(arose-21, not-15)
nsubjpass(investigated-20, that-16)
nsubj(arose-21, that-16)
nsubj(arose-21', that-16)
aux(investigated-20, is-18)
auxpass(investigated-20, being-19)
rcmod(that-16, investigated-20)
ccomp(makes-6, arose-21)
ccomp(makes-6, arose-21')
conj_or(arose-21, arose-21')
nn(involvement-24, agency-23)
prep_via(arose-21, involvement-24)
prep_by(arose-21', nature-27)
xcomp(arose-21, operating-29)
advmod(operating-29, freely-30)

