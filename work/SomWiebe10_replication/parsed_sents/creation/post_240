(ROOT
  (S
    (NP (NNP Michael) (NNP Behe))
    (VP (MD may)
      (VP (VB be)
        (VP (RBS best) (VBN known)
          (PP
            (PP (IN for)
              (NP
                (NP (PRP$ his) (NNP book) ('' '') (NNP Darwin) (POS 's))
                (NNP Black) (NNP Box) ('' '')))
            (CC and)
            (PP (TO to)
              (NP (DT a) (JJR lesser) (NN extent)))
            (NP (PRP$ its) (NN sequel) ('' ''))))))
    (NP
      (NP (DT The) (NN Edge))
      (PP (IN of)
        (NP (NN evolution)))
      ('' ''))
    (. .)))

nn(Behe-2, Michael-1)
nsubjpass(known-6, Behe-2)
nsubjpass(known-6', Behe-2)
aux(known-6, may-3)
auxpass(known-6, be-4)
advmod(known-6, best-5)
root(ROOT-0, known-6)
conj_and(known-6, known-6')
poss(Darwin-11, his-8)
nn(Darwin-11, book-9)
poss(Box-14, Darwin-11)
nn(Box-14, Black-13)
prep_for(known-6, Box-14)
det(extent-20, a-18)
amod(extent-20, lesser-19)
prep_to(known-6', extent-20)
poss(sequel-22, its-21)
dep(known-6, sequel-22)
det(Edge-25, The-24)
dep(known-6, Edge-25)
prep_of(Edge-25, evolution-27)

(ROOT
  (S
    (NP (DT Both) (NNS books))
    (VP (VBP attempt)
      (S
        (VP (TO to)
          (VP (VB show)
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBZ limits)
                  (PRN (-LRB- -LRB-) (VB edges) (-RRB- -RRB-))
                  (PP (TO to)
                    (NP
                      (NP (JJ evolutionary) (NN theory))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (MD can) (RB not)
                            (VP (VB be)
                              (VP (VBN crossed)))))))))))))))
    (. .)))

det(books-2, Both-1)
nsubj(attempt-3, books-2)
xsubj(show-5, books-2)
root(ROOT-0, attempt-3)
aux(show-5, to-4)
xcomp(attempt-3, show-5)
complm(limits-8, that-6)
expl(limits-8, there-7)
ccomp(show-5, limits-8)
dep(limits-8, edges-10)
amod(theory-14, evolutionary-13)
prep_to(limits-8, theory-14)
nsubjpass(crossed-19, theory-14)
aux(crossed-19, can-16)
neg(crossed-19, not-17)
auxpass(crossed-19, be-18)
rcmod(theory-14, crossed-19)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (: ...)
          (NP (RB thus) (DT a))
          (PP (VBG complicated)
            (NP
              (NP (NN machine))
              (SBAR
                (S
                  (VP (VBD was)
                    (ADVP (RB gradually))
                    (VP (VBN built)
                      (PRT (RP up)))))))))
        (SBAR
          (WHNP (WP$ whose) (NNS effective))
          (S
            (VP (VBG working)))))
      (VP (VBD was)
        (ADJP (JJ dependent)
          (PP (IN upon)
            (NP
              (NP (DT the) (VBG interlocking) (NN action))
              (PP (IN of)
                (NP
                  (NP (JJ very) (JJ numerous) (JJ different) (JJ elementary) (NNS parts))
                  (CC or)
                  (NP (NNS factors)))))))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (JJ many))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS characters)
              (CC and)
              (NNS factors))
            (SBAR
              (WHNP
                (WHNP (WDT which))
                (, ,)
                (NP (WRB when) (JJ new))
                (, ,))
              (S
                (VP (VBD were)
                  (ADVP (RB originally))
                  (NP (RB merely) (DT an) (NN asset))))))))
      (ADVP (RB finally))
      (VP (VBD became)
        (ADJP (JJ necessary))
        (SBAR (IN because)
          (S
            (NP
              (NP (JJ other) (JJ necessary) (NNS characters))
              (CC and)
              (NP (NNS factors)))
            (VP (VBD had)
              (ADVP (RB subsequently))
              (VP (VBN become)
                (S
                  (ADJP (JJ changed)))
                (ADVP (RB so) (RB as)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ dependent)
                          (PP (IN on)
                            (NP (DT the) (JJ former))))))))))))))
    (. .)))

advmod(a-4, thus-3)
poss(effective-12, a-4)
nsubj(dependent-15, a-4)
prep_complicated(a-4, machine-6)
auxpass(built-9, was-7)
advmod(built-9, gradually-8)
rcmod(machine-6, built-9)
prt(built-9, up-10)
nsubj(working-13, effective-12)
rcmod(a-4, working-13)
cop(dependent-15, was-14)
root(ROOT-0, dependent-15)
det(action-19, the-17)
amod(action-19, interlocking-18)
prep_upon(dependent-15, action-19)
amod(parts-25, very-21)
amod(parts-25, numerous-22)
amod(parts-25, different-23)
amod(parts-25, elementary-24)
prep_of(action-19, parts-25)
prep_of(action-19, factors-27)
conj_or(parts-25, factors-27)
nsubj(necessary-48, many-30)
det(characters-33, the-32)
prep_of(many-30, characters-33)
nsubj(asset-45, characters-33)
prep_of(many-30, factors-35)
conj_and(characters-33, factors-35)
nsubj(asset-45, factors-35)
advmod(new-39, when-38)
appos(which-36, new-39)
cop(asset-45, were-41)
advmod(asset-45, originally-42)
advmod(asset-45, merely-43)
det(asset-45, an-44)
rcmod(characters-33, asset-45)
advmod(necessary-48, finally-46)
cop(necessary-48, became-47)
conj_and(dependent-15, necessary-48)
mark(become-57, because-49)
amod(characters-52, other-50)
amod(characters-52, necessary-51)
nsubj(become-57, characters-52)
conj_and(characters-52, factors-54)
nsubj(become-57, factors-54)
aux(become-57, had-55)
advmod(become-57, subsequently-56)
advcl(necessary-48, become-57)
acomp(become-57, changed-58)
advmod(as-60, so-59)
advmod(become-57, as-60)
aux(dependent-63, to-61)
cop(dependent-63, be-62)
dep(as-60, dependent-63)
det(former-66, the-65)
prep_on(dependent-63, former-66)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD must)
        (VP (VB result) (, ,)
          (PP (IN in)
            (NP (NN consequence)))
          (, ,)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT a) (VBG dropping) (RP out))
                (PP (IN of)
                  (PRN (, ,)
                    (CC or)
                    (ADVP (RB even)))
                  (NP
                    (NP (DT a) (JJ slight) (NN change))
                    (PP (IN in)
                      (NP
                        (NP (DT any) (NN one))
                        (PP (IN of)
                          (NP (DT these) (NNS parts))))))))
              (VP (VBZ is)
                (ADJP (RB very) (JJ likely))
                (S
                  (VP (TO to)
                    (VP (VB disturb)
                      (ADVP (RB fatally))
                      (NP (DT the) (JJ whole) (NN machinery)))))))))))
    (: ;)
    (S
      (PP (IN for)
        (NP (DT this) (NN reason)))
      (NP (PRP we))
      (VP (MD should)
        (VP (VB expect)
          (S
            (ADJP
              (ADJP (RB very) (JJ many))
              (, ,)
              (CONJP (IN if) (RB not))
              (ADJP (JJS most))
              (, ,)
              (SBAR
                (S
                  (NP (NNS mutations))
                  (VP (TO to)
                    (VP (VB result)
                      (PP (IN in)
                        (NP (JJ lethal) (NNS factors))))))))))))
    (. ...)))

nsubj(result-3, It-1)
aux(result-3, must-2)
root(ROOT-0, result-3)
prep_in(result-3, consequence-6)
complm(likely-27, that-8)
nsubj(likely-27, a-9)
xsubj(disturb-29, a-9)
amod(a-9, dropping-10)
dep(even-15, or-14)
dep(a-9, even-15)
det(change-18, a-16)
amod(change-18, slight-17)
prep_out_of(a-9, change-18)
det(one-21, any-20)
prep_in(change-18, one-21)
det(parts-24, these-23)
prep_of(one-21, parts-24)
cop(likely-27, is-25)
advmod(likely-27, very-26)
ccomp(result-3, likely-27)
aux(disturb-29, to-28)
xcomp(likely-27, disturb-29)
advmod(disturb-29, fatally-30)
det(machinery-33, the-31)
amod(machinery-33, whole-32)
dobj(disturb-29, machinery-33)
det(reason-37, this-36)
prep_for(expect-40, reason-37)
nsubj(expect-40, we-38)
aux(expect-40, should-39)
parataxis(result-3, expect-40)
advmod(many-42, very-41)
dep(expect-40, many-42)
dep(expect-40, most-46)
conj_negcc(many-42, most-46)
nsubj(result-50, mutations-48)
aux(result-50, to-49)
dep(many-42, result-50)
amod(factors-53, lethal-52)
prep_in(result-50, factors-53)

(ROOT
  (S ('' '')
    (NP (NNP Muller) (NNP 1918))
    (VP (VBP pp))
    (. .)))

nn(1918-3, Muller-2)
nsubj(pp-4, 1918-3)
root(ROOT-0, pp-4)

(ROOT
  (FRAG
    (NP (CD 463-464))
    (. .)))

root(ROOT-0, 463-464-1)

(ROOT
  (S (-LRB- -LRB-)
    (NP
      (NP
        (NP (NN emphasis))
        (PP
          (PP (IN in))
          (PRN
            (NP (DT the)
              (NX (NNP original)))
            (-RRB- -RRB-)))
        ('' ''))
      (: ...)
      (NP
        (NP (DT an)
          (ADJP (JJ embryological)
            (CC or)
            (JJ physiological))
          (NN process))
        (CC or)
        (NP
          (NP
            (NP (NN structure))
            (VP
              (ADVP (RB newly))
              (VBN arisen)
              (PP (IN by)
                (NP (NN gene) (NN mutation)))
              (, ,)
              (PP (IN after)
                (S
                  (VP (VBG becoming)
                    (ADJP (RB once) (VBN established)))))))
          (PRN (-LRB- -LRB-)
            (PP (IN with)
              (CC or)
              (IN without)
              (NP
                (NP (DT the) (NN aid))
                (PP (IN of)
                  (NP (NN selection)))))
            (-RRB- -RRB-))))
      (, ,))
    (ADVP (RB later))
    (VP (VBZ takes)
      (NP
        (ADJP (JJR more)
          (CC and)
          (JJR more))
        (NN part))
      (PP (IN in)
        (NP
          (NP (DT the) (JJ whole) (JJ complex) (NN interplay))
          (PP (IN of)
            (NP (JJ vital) (NNS processes))))))
    (. .)))

nsubj(takes-37, emphasis-2)
prep(emphasis-2, in-3)
det(original-5, the-4)
dep(in-3, original-5)
det(process-13, an-9)
amod(process-13, embryological-10)
conj_or(embryological-10, physiological-12)
amod(process-13, physiological-12)
dep(emphasis-2, process-13)
dep(emphasis-2, structure-15)
conj_or(process-13, structure-15)
advmod(arisen-17, newly-16)
partmod(structure-15, arisen-17)
nn(mutation-20, gene-19)
agent(arisen-17, mutation-20)
prepc_after(arisen-17, becoming-23)
advmod(established-25, once-24)
acomp(becoming-23, established-25)
dep(structure-15, with-27)
dep(structure-15, without-29)
conj_or(with-27, without-29)
det(aid-31, the-30)
pobj(with-27, aid-31)
prep_of(aid-31, selection-33)
advmod(takes-37, later-36)
root(ROOT-0, takes-37)
amod(part-41, more-38)
conj_and(more-38, more-40)
amod(part-41, more-40)
dobj(takes-37, part-41)
det(interplay-46, the-43)
amod(interplay-46, whole-44)
amod(interplay-46, complex-45)
prep_in(takes-37, interplay-46)
amod(processes-49, vital-48)
prep_of(interplay-46, processes-49)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (RB still) (JJ further) (NNS mutations))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP arise)
              (SBAR
                (S
                  (VP (VBP are)
                    (ADVP (RB now))
                    (VP (VBN allowed)
                      (S
                        (VP (TO to)
                          (VP (VB stay)
                            (SBAR (IN if)
                              (S
                                (S
                                  (ADVP (RB only))
                                  (NP (PRP they))
                                  (VP (VBP work)
                                    (PP (IN in)
                                      (NP (NN harmony)))
                                    (PP (IN with)
                                      (NP
                                        (NP (DT all) (NNS genes))
                                        (SBAR
                                          (WHNP (WDT that))
                                          (S
                                            (VP (VBP are)
                                              (ADVP (RB already))
                                              (ADJP (JJ present)))))))))
                                (, ,)
                                (CC and)
                                (, ,)
                                (PP (IN of)
                                  (NP (DT these) (JJ further) (NNS mutations)))))))))))))))))
    (, ,)
    (NP (DT some))
    (VP (MD will)
      (ADVP (RB naturally))
      (VP (VB depend) (, ,)
        (PP (IN for)
          (NP (PRP$ their) (JJ proper) (NN working)))
        (, ,)
        (PP (IN on)
          (NP
            (NP (DT the) (JJ new) (NN process)
              (CC or)
              (NN structure))
            (PP (IN under)
              (NP (NN consideration)))))))
    (. .)))

advmod(mutations-4, still-2)
amod(mutations-4, further-3)
nsubj(arise-6, mutations-4)
nsubjpass(allowed-9, mutations-4)
prep_for(depend-36, mutations-4)
rcmod(mutations-4, arise-6)
auxpass(allowed-9, are-7)
advmod(allowed-9, now-8)
ccomp(arise-6, allowed-9)
aux(stay-11, to-10)
xcomp(allowed-9, stay-11)
mark(work-15, if-12)
advmod(work-15, only-13)
nsubj(work-15, they-14)
advcl(stay-11, work-15)
prep_in(work-15, harmony-17)
det(genes-20, all-19)
prep_with(work-15, genes-20)
nsubj(present-24, genes-20)
cop(present-24, are-22)
advmod(present-24, already-23)
rcmod(genes-20, present-24)
advcl(stay-11, of-28)
conj_and(work-15, of-28)
det(mutations-31, these-29)
amod(mutations-31, further-30)
prep_of(work-15, mutations-31)
nsubj(depend-36, some-33)
aux(depend-36, will-34)
advmod(depend-36, naturally-35)
root(ROOT-0, depend-36)
poss(working-41, their-39)
amod(working-41, proper-40)
prep_for(depend-36, working-41)
det(process-46, the-44)
amod(process-46, new-45)
prep_on(depend-36, process-46)
prep_on(depend-36, structure-48)
conj_or(process-46, structure-48)
prep_under(process-46, consideration-50)

(ROOT
  (S
    (S
      (VP (VBG Being)
        (ADVP (RB thus))
        (VP
          (ADVP (RB finally))
          (VBN woven)
          (PRN (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP it))
                (VP (VBD were))))
            (, ,))
          (PP (IN into)
            (NP
              (NP (DT the)
                (ADJP (RBS most) (JJ intimate))
                (NN fabric))
              (PP (IN of)
                (NP (DT the) (NN organism))))))))
    (, ,)
    (NP (DT the)
      (ADJP (RB once) (JJ novel))
      (NN character))
    (VP
      (VP (MD can)
        (ADVP (RB no) (RB longer))
        (VP (VB be)
          (VP (VBN withdrawn)
            (PP (IN with)
              (NP (NN impunity))))))
      (, ,)
      (CC and)
      (VP (MD may)
        (VP (VB have)
          (VP (VBN become)
            (ADJP
              (ADVP (RB vitally))
              (JJ necessary))))))
    (. .)))

auxpass(woven-4, Being-1)
advmod(woven-4, thus-2)
advmod(woven-4, finally-3)
partmod(withdrawn-27, woven-4)
mark(were-8, as-6)
nsubj(were-8, it-7)
parataxis(woven-4, were-8)
det(fabric-14, the-11)
advmod(intimate-13, most-12)
amod(fabric-14, intimate-13)
prep_into(woven-4, fabric-14)
det(organism-17, the-16)
prep_of(fabric-14, organism-17)
det(character-22, the-19)
advmod(novel-21, once-20)
amod(character-22, novel-21)
nsubjpass(withdrawn-27, character-22)
nsubj(necessary-36, character-22)
aux(withdrawn-27, can-23)
advmod(longer-25, no-24)
advmod(withdrawn-27, longer-25)
auxpass(withdrawn-27, be-26)
root(ROOT-0, withdrawn-27)
prep_with(withdrawn-27, impunity-29)
aux(necessary-36, may-32)
aux(necessary-36, have-33)
cop(necessary-36, become-34)
advmod(necessary-36, vitally-35)
conj_and(withdrawn-27, necessary-36)

(ROOT
  (S ('' '')
    (NP (NNP Muller) (NNP 1939))
    (VP (VBP pp))
    (. .)))

nn(1939-3, Muller-2)
nsubj(pp-4, 1939-3)
root(ROOT-0, pp-4)

(ROOT
  (FRAG
    (NP (CD 271-272))
    (. .)))

root(ROOT-0, 271-272-1)

(ROOT
  (S
    (ADVP (RB However))
    (PRN (, ,)
      (S
        (NP (NNP Keith) (NNP Robison))
        (VP (VBD described)
          (NP (DT a)
            (ADJP (RB very) (JJ similar))
            (NN example))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (JJ simple) (JJ evolutionary) (NNS processes))
              (VP (VBP lead)
                (PP (TO to)
                  (NP
                    (NP (DT a) (NN system))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ is)
                          (NP
                            (NP (NNP IC))
                            (PRN (-LRB- -LRB-)
                              (NP (NN http:\/\/www.talkorigins.org\/faqs\/behe\/review.html))
                              (-RRB- -RRB-)))
                          (ADVP (RB So))))))))))))
      (, ,))
    (NP
      (NP (NN duplication))
      (CC plus)
      (NP
        (NP (DT a) (NN loss))
        (PP (IN of)
          (NP (NN function))))
      (, ,)
      (PP (CC plus)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (CD two) (JJ different) (JJ loss-of-function) (NNS mutations))))))
    (VP (MD can)
      (VP (VB convert)
        (NP (DT a) (JJ single) (NN step) (NN pathway))
        (PP (IN into)
          (NP (DT a) (CD two) (NN step) (NN cascade)))))
    (. .)))

advmod(convert-41, However-1)
nn(Robison-4, Keith-3)
nsubj(described-5, Robison-4)
parataxis(convert-41, described-5)
det(example-9, a-6)
advmod(similar-8, very-7)
amod(example-9, similar-8)
dobj(described-5, example-9)
advmod(lead-14, where-10)
amod(processes-13, simple-11)
amod(processes-13, evolutionary-12)
nsubj(lead-14, processes-13)
advcl(described-5, lead-14)
det(system-17, a-16)
prep_to(lead-14, system-17)
nsubj(IC-20, system-17)
cop(IC-20, is-19)
rcmod(system-17, IC-20)
appos(IC-20, http:\/\/www.talkorigins.org\/faqs\/behe\/review.html-22)
advmod(IC-20, So-24)
nsubj(convert-41, duplication-26)
det(loss-29, a-28)
conj_plus(duplication-26, loss-29)
nsubj(convert-41, loss-29)
prep_of(loss-29, function-31)
conj_plus(duplication-26, plus-33)
prep(duplication-26, plus-33)
nsubj(convert-41, plus-33)
dep(plus-33, one-34)
num(mutations-39, two-36)
amod(mutations-39, different-37)
amod(mutations-39, loss-of-function-38)
prep_of(one-34, mutations-39)
aux(convert-41, can-40)
root(ROOT-0, convert-41)
det(pathway-45, a-42)
amod(pathway-45, single-43)
nn(pathway-45, step-44)
dobj(convert-41, pathway-45)
det(cascade-50, a-47)
num(cascade-50, two-48)
nn(cascade-50, step-49)
prep_into(convert-41, cascade-50)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (ADVP (RB first))
    (VP
      (VP (VBP point)
        (PRT (RP out))
        (SBAR (IN that)
          (S
            (NP
              (NP (RB much))
              (PP (IN of)
                (NP
                  (NP (NNP Behe) (POS 's))
                  (NN argument))))
            (VP (VBZ is)
              (ADVP (RB not)
                (PP (IN with)
                  (NP (JJ evolutionary) (NN theory))))
              (NP (PRP itself))))))
      (CC but)
      (VP
        (ADVP
          (NP (DT a) (NN component))
          (IN of))
        (VBD said)
        (NP
          (NP (NN theory))
          (, ,) (RB namely)
          (NP (JJ natural) (NN selection)))))
    (. .)))

nsubj(point-4, Let-1)
nsubj(said-22, Let-1)
possessive(Let-1, 's-2)
advmod(point-4, first-3)
root(ROOT-0, point-4)
prt(point-4, out-5)
complm(itself-17, that-6)
nsubj(itself-17, much-7)
poss(argument-11, Behe-9)
prep_of(much-7, argument-11)
cop(itself-17, is-12)
neg(itself-17, not-13)
amod(theory-16, evolutionary-15)
prep_with(not-13, theory-16)
ccomp(point-4, itself-17)
det(component-20, a-19)
npadvmod(of-21, component-20)
advmod(said-22, of-21)
conj_but(point-4, said-22)
dobj(said-22, theory-23)
advmod(theory-23, namely-25)
amod(selection-27, natural-26)
dep(theory-23, selection-27)

(ROOT
  (S
    (NP (DT The) (JJ initial) (NNS steps))
    (VP (VBP are)
      (ADJP (JJ neutral))
      (, ,)
      (ADJP (DT neither) (JJ advantageous)
        (CC nor)
        (JJ disadvantageous)))
    (. .)))

det(steps-3, The-1)
amod(steps-3, initial-2)
nsubj(neutral-5, steps-3)
cop(neutral-5, are-4)
root(ROOT-0, neutral-5)
preconj(advantageous-8, neither-7)
acomp(neutral-5, advantageous-8)
acomp(neutral-5, disadvantageous-10)
conj_nor(advantageous-8, disadvantageous-10)

(ROOT
  (S
    (NP (JJ Such) (JJ neutral) (NNS mutations))
    (VP (VBP occur)
      (ADVP (RB regularly)))
    (. .)))

amod(mutations-3, Such-1)
amod(mutations-3, neutral-2)
nsubj(occur-4, mutations-3)
root(ROOT-0, occur-4)
advmod(occur-4, regularly-5)

(ROOT
  (S
    (NP (DT The) (JJ final) (NN step))
    (VP (VBZ locks)
      (PP (IN in)
        (NP (DT the) (NN cascade))))
    (. .)))

det(step-3, The-1)
amod(step-3, final-2)
nsubj(locks-4, step-3)
root(ROOT-0, locks-4)
det(cascade-7, the-6)
prep_in(locks-4, cascade-7)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (NNP ID) (POS 's))
          (NNS objections))
        (PP (TO to)
          (NP (DT the) (JJ above) (NN scenario))))
      (VP (VBP are)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP
              (VP (VBZ involves)
                (NP (JJ neutral) (NNS steps)))
              (CC and)
              (VP (VBP are)
                (ADVP (RB thus) (RB not))
                (ADJP (`` ``) (JJ Darwinian) ('' '')
                  (PP (IN in)
                    (NP (NN nature))))))))))
    (, ,)
    (CC but)
    (S
      (PP (IN like)
        (NP (NNP Darwin)))
      (, ,)
      (NP (JJ evolutionary) (NN science))
      (VP (VBZ accepts)
        (SBAR (IN that)
          (S
            (NP (NN selection))
            (VP (VBZ is)
              (SBAR (CC but)
                (S
                  (NP
                    (NP
                      (NP (CD one))
                      (PP (IN of)
                        (NP (JJ various) (NNS processes))))
                    (CC and)
                    (NP
                      (NP (DT the) (NN importance))
                      (PP (IN of)
                        (NP
                          (NP (NN neutrality))
                          (PP (IN on)
                            (NP (NN evolution)))))))
                  (VP (VBZ has)
                    (VP (VBN been)
                      (VP
                        (ADVP (RB historically))
                        (VBN underestimated)))))))))))
    (. .)))

poss(objections-3, ID-1)
nsubj(are-8, objections-3)
det(scenario-7, the-5)
amod(scenario-7, above-6)
prep_to(objections-3, scenario-7)
root(ROOT-0, are-8)
complm(involves-11, that-9)
nsubj(involves-11, it-10)
nsubj(Darwinian-19, it-10)
ccomp(are-8, involves-11)
amod(steps-13, neutral-12)
dobj(involves-11, steps-13)
cop(Darwinian-19, are-15)
advmod(not-17, thus-16)
neg(Darwinian-19, not-17)
ccomp(are-8, Darwinian-19)
conj_and(involves-11, Darwinian-19)
prep_in(Darwinian-19, nature-22)
prep_like(accepts-30, Darwin-26)
amod(science-29, evolutionary-28)
nsubj(accepts-30, science-29)
conj_but(are-8, accepts-30)
complm(is-33, that-31)
nsubj(is-33, selection-32)
ccomp(accepts-30, is-33)
cc(underestimated-49, but-34)
nsubjpass(underestimated-49, one-35)
amod(processes-38, various-37)
prep_of(one-35, processes-38)
det(importance-41, the-40)
conj_and(one-35, importance-41)
nsubjpass(underestimated-49, importance-41)
prep_of(importance-41, neutrality-43)
prep_on(neutrality-43, evolution-45)
aux(underestimated-49, has-46)
auxpass(underestimated-49, been-47)
advmod(underestimated-49, historically-48)
ccomp(is-33, underestimated-49)

(ROOT
  (S
    (NP (NNP Dembski))
    (, ,)
    (S
      (VP (VBG understanding)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP
              (NP (NNP Behe) (POS 's))
              (NNS flaws))))))
    (VP (VBD redefined)
      (S
        (NP (NNP IC))
        (VP (TO to)
          (VP (VB read)
            (NP (DT A) (NN system))
            (S
              (VP (VBG performing)
                (SBAR
                  (S
                    (NP (DT a) (VBN given) (JJ basic) (NN function))
                    (VP (VBZ is)
                      (ADJP (RB irreducibly) (JJ complex))
                      (SBAR (IN if)
                        (S
                          (NP (PRP it))
                          (VP (VBZ includes)
                            (SBAR
                              (S
                                (NP
                                  (NP (DT a) (NN set))
                                  (PP (IN of)
                                    (NP
                                      (NP (JJ well-matched) (, ,)
                                        (ADJP (RB mutually) (JJ interacting))
                                        (, ,)
                                        (ADJP (RB nonarbitrarily) (JJ individuated))
                                        (NNS parts))
                                      (PP (JJ such) (IN that)
                                        (NP
                                          (NP (DT each) (NN part))
                                          (PP (IN in)
                                            (NP (DT the) (NN set))))))))
                                (VP (VBZ is)
                                  (ADJP (JJ indispensable)
                                    (PP (TO to)
                                      (S
                                        (VP (VBG maintaining)
                                          (NP
                                            (NP (DT the) (NN system) (POS 's))
                                            (ADJP
                                              (ADJP (JJ basic))
                                              (, ,)
                                              (CC and)
                                              (ADJP
                                                (ADVP (RB therefore))
                                                (JJ original))
                                              (, ,))
                                            (NN function)))))))))))))))))))))
    (. .)))

nsubj(redefined-9, Dembski-1)
partmod(redefined-9, understanding-3)
dobj(understanding-3, one-4)
poss(flaws-8, Behe-6)
prep_of(one-4, flaws-8)
root(ROOT-0, redefined-9)
nsubj(read-12, IC-10)
aux(read-12, to-11)
xcomp(redefined-9, read-12)
det(system-14, A-13)
dobj(read-12, system-14)
xcomp(read-12, performing-15)
det(function-19, a-16)
amod(function-19, given-17)
amod(function-19, basic-18)
nsubj(complex-22, function-19)
cop(complex-22, is-20)
advmod(complex-22, irreducibly-21)
ccomp(performing-15, complex-22)
mark(includes-25, if-23)
nsubj(includes-25, it-24)
advcl(complex-22, includes-25)
det(set-27, a-26)
nsubj(indispensable-45, set-27)
amod(parts-36, well-matched-29)
advmod(interacting-32, mutually-31)
amod(parts-36, interacting-32)
advmod(individuated-35, nonarbitrarily-34)
amod(parts-36, individuated-35)
prep_of(set-27, parts-36)
dep(parts-36, such-37)
det(part-40, each-39)
prep_that(parts-36, part-40)
det(set-43, the-42)
prep_in(part-40, set-43)
cop(indispensable-45, is-44)
ccomp(includes-25, indispensable-45)
prepc_to(indispensable-45, maintaining-47)
det(system-49, the-48)
poss(function-57, system-49)
amod(function-57, basic-51)
advmod(original-55, therefore-54)
conj_and(basic-51, original-55)
amod(function-57, original-55)
dobj(maintaining-47, function-57)

(ROOT
  (S
    (NP
      (NP (DT The) (NN set))
      (PP (IN of)
        (NP (DT these) (JJ indispensable) (NNS parts))))
    (VP (VBZ is)
      (VP (VBN known)
        (PP (IN as)
          (NP
            (NP (DT the) (JJ irreducible) (NN core))
            (PP (IN of)
              (NP (DT the) (NN system)))))))
    (. .)))

det(set-2, The-1)
nsubjpass(known-8, set-2)
det(parts-6, these-4)
amod(parts-6, indispensable-5)
prep_of(set-2, parts-6)
auxpass(known-8, is-7)
root(ROOT-0, known-8)
det(core-12, the-10)
amod(core-12, irreducible-11)
prep_as(known-8, core-12)
det(system-15, the-14)
prep_of(core-12, system-15)

(ROOT
  (S
    (PRN (-LRB- -LRB-)
      (NP
        (NP (DT No) (NNP Free) (NNP Lunch))
        (, ,)
        (NP (CD 285)))
      (-RRB- -RRB-))
    (: --)
    (S
      (VP (VB Note)
        (NP
          (NP (DT the) (NN addition))
          (PP (IN of)
            (NP (`` ``) (JJ original) (NN function) ('' ''))))))
    (PRN (, ,)
      (S
        (S
          (NP (DT this))
          (VP (VBZ prevents)
            (S
              (NP
                (NP (DT the) (RBS most) (JJ common) (NNS pathways))
                (PP (IN in)
                  (NP (NN evolution))))
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ irrelevant)
                    (PP (TO to)
                      (S
                        (VP (VBG explaining)
                          (NP (NNP IC) (NNS systems)))))))))))
        (, ,)
        (CC but)
        (S
          (ADVP (RB now))
          (NP (NNP Dembski))
          (VP (VBZ has)
            (S
              (VP (TO to)
                (VP (VB show)
                  (NP (DT that))
                  (ADVP (RB indeed))))))))
      (, ,))
    (NP (JJ original) (NN function))
    (VP (VBD was)
      (VP (VBN maintained)
        (PP (IN in)
          (NP (DT any) (JJ particular) (NN system)))))
    (. .)))

det(Lunch-4, No-2)
nn(Lunch-4, Free-3)
dep(maintained-46, Lunch-4)
appos(Lunch-4, 285-6)
parataxis(maintained-46, Note-9)
det(addition-11, the-10)
dobj(Note-9, addition-11)
amod(function-15, original-14)
prep_of(addition-11, function-15)
nsubj(prevents-19, this-18)
parataxis(maintained-46, prevents-19)
det(pathways-23, the-20)
advmod(pathways-23, most-21)
amod(pathways-23, common-22)
nsubj(irrelevant-28, pathways-23)
prep_in(pathways-23, evolution-25)
aux(irrelevant-28, to-26)
cop(irrelevant-28, be-27)
xcomp(prevents-19, irrelevant-28)
prepc_to(irrelevant-28, explaining-30)
nn(systems-32, IC-31)
dobj(explaining-30, systems-32)
advmod(has-37, now-35)
nsubj(has-37, Dembski-36)
xsubj(show-39, Dembski-36)
conj_but(prevents-19, has-37)
parataxis(maintained-46, has-37)
aux(show-39, to-38)
xcomp(has-37, show-39)
dobj(show-39, that-40)
advmod(show-39, indeed-41)
amod(function-44, original-43)
nsubjpass(maintained-46, function-44)
auxpass(maintained-46, was-45)
root(ROOT-0, maintained-46)
det(system-50, any-48)
amod(system-50, particular-49)
prep_in(maintained-46, system-50)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (DT this))
        (VP (MD may)
          (VP (VB have)
            (VP
              (ADVP (RB temporarily))
              (VBN saved)
              (NP
                (NP (NNP Behe) (POS 's))
                (JJ original) (NN fomulation)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ has)
      (ADVP (RB merely))
      (VP (VBN defined)
        (S
          (NP (NNP IC) (NNS systems))
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (NN something))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBZ is)
                      (ADJP (RB much) (JJR harder))
                      (S
                        (VP (TO to)
                          (VP (VB establish)
                            (SBAR (IN as)
                              (S
                                (NP (PRP it))
                                (VP (VBZ involves)
                                  (NP
                                    (NP (DT a) (JJ historical) (NN component))
                                    (PP (IN of)
                                      (NP (`` ``) (JJ original) (NN function) ('' '')))))))))))))))))))
    (. .)))

mark(saved-6, While-1)
nsubj(saved-6, this-2)
aux(saved-6, may-3)
aux(saved-6, have-4)
advmod(saved-6, temporarily-5)
advcl(defined-15, saved-6)
poss(fomulation-10, Behe-7)
amod(fomulation-10, original-9)
dobj(saved-6, fomulation-10)
nsubj(defined-15, it-12)
aux(defined-15, has-13)
advmod(defined-15, merely-14)
root(ROOT-0, defined-15)
nn(systems-17, IC-16)
nsubj(something-20, systems-17)
aux(something-20, to-18)
cop(something-20, be-19)
xcomp(defined-15, something-20)
nsubj(harder-24, something-20)
cop(harder-24, is-22)
advmod(harder-24, much-23)
rcmod(something-20, harder-24)
aux(establish-26, to-25)
xcomp(harder-24, establish-26)
mark(involves-29, as-27)
nsubj(involves-29, it-28)
advcl(establish-26, involves-29)
det(component-32, a-30)
amod(component-32, historical-31)
dobj(involves-29, component-32)
amod(function-36, original-35)
prep_of(component-32, function-36)

(ROOT
  (S
    (PP (IN For)
      (NP (NN instance)))
    (, ,)
    (NP (PRP$ his) (NNP Irreducible) (NNP Complexity) (NN argument))
    (VP (VBZ relies)
      (PP (IN on)
        (NP (DT the) (-LRB- -LRB-) (NNP erroneous) (-RRB- -RRB-) (NN claim)))
      (SBAR (IN that)
        (S
          (NP
            (NP
              (NP (NNS processes))
              (PP (IN of)
                (NP (NN variation)
                  (CC and)
                  (NN selection))))
            (PRN (-LRB- -LRB-)
              (NP (JJ aka) (JJ Darwinian) (NNS processes))
              (-RRB- -RRB-)))
          (VP (VBP are)
            (ADJP (JJ unable)
              (S
                (VP (TO to)
                  (VP (VB explain)
                    (NP
                      (NP (NNS systems))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBP are) (`` ``)
                            (ADJP
                              (ADJP (RB irreducibly) (JJ complex))
                              (PRN (-LRB- -LRB-)
                                (NP (NNP IC))
                                (-RRB- -RRB-)))
                            ('' '')))))))))))))
    (. .)))

prep_for(relies-8, instance-2)
poss(argument-7, his-4)
nn(argument-7, Irreducible-5)
nn(argument-7, Complexity-6)
nsubj(relies-8, argument-7)
root(ROOT-0, relies-8)
det(claim-14, the-10)
nn(claim-14, erroneous-12)
prep_on(relies-8, claim-14)
complm(unable-27, that-15)
nsubj(unable-27, processes-16)
prep_of(processes-16, variation-18)
prep_of(processes-16, selection-20)
conj_and(variation-18, selection-20)
amod(processes-24, aka-22)
amod(processes-24, Darwinian-23)
appos(processes-16, processes-24)
cop(unable-27, are-26)
ccomp(relies-8, unable-27)
aux(explain-29, to-28)
xcomp(unable-27, explain-29)
dobj(explain-29, systems-30)
nsubj(complex-35, systems-30)
cop(complex-35, are-32)
advmod(complex-35, irreducibly-34)
rcmod(systems-30, complex-35)
dep(complex-35, IC-37)

(ROOT
  (S
    (SBAR (IN In) (NN order)
      (S
        (VP (TO to)
          (VP (VB understand)
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP (NNP Behe))
                (VP (VBZ is)
                  (ADJP (JJ wrong)))))))))
    (, ,)
    (NP (PRP one))
    (VP (VBP need) (RB not)
      (VP (VB look)
        (ADVP
          (ADVP (RBR further))
          (SBAR (IN than)
            (S
              (NP
                (NP (NNP http:\/\/www.talkorigins.org\/faqs\/behe.html) (NNP First))
                (PP (IN of)
                  (NP
                    (NP (PDT all) (DT the) (NN problem))
                    (PP (IN of)
                      (NP
                        (NP (NNP IC) (NNS systems))
                        (CC and)
                        (NP (PRP$ its) (NN solution)))))))
              (VP (VBD was)
                (VP (VBN pointed)
                  (PRT (RP out))
                  (PP (IN by)
                    (NP
                      (NP
                        (NP
                          (NP (DT a) (NNP Nobel) (NNP Prize) (NN winner)
                            (CC and)
                            (JJ evolutionary) (NN scientist))
                          (ADVP
                            (NP (RB almost) (DT a) (NN century))
                            (RB ago)))
                        (PRN (-LRB- -LRB-)
                          (NP (NN http:\/\/www.talkorigins.org\/faqs\/comdesc\/ICsilly.html))
                          (-RRB- -RRB-)))
                      (NP
                        (NP (NNP Muller))
                        (, ,)
                        (NP (NNP H.) (NNP J.))))))))))))))

mark(understand-4, In-1)
dep(understand-4, order-2)
aux(understand-4, to-3)
dep(need-11, understand-4)
advmod(wrong-8, why-5)
nsubj(wrong-8, Behe-6)
cop(wrong-8, is-7)
advcl(understand-4, wrong-8)
nsubj(need-11, one-10)
root(ROOT-0, need-11)
neg(need-11, not-12)
dep(need-11, look-13)
advmod(look-13, further-14)
mark(pointed-29, than-15)
nn(First-17, http:\/\/www.talkorigins.org\/faqs\/behe.html-16)
nsubjpass(pointed-29, First-17)
predet(problem-21, all-19)
det(problem-21, the-20)
prep_of(First-17, problem-21)
nn(systems-24, IC-23)
prep_of(problem-21, systems-24)
poss(solution-27, its-26)
prep_of(problem-21, solution-27)
conj_and(systems-24, solution-27)
auxpass(pointed-29, was-28)
dep(further-14, pointed-29)
prt(pointed-29, out-30)
det(winner-35, a-32)
nn(winner-35, Nobel-33)
nn(winner-35, Prize-34)
agent(pointed-29, winner-35)
amod(scientist-38, evolutionary-37)
agent(pointed-29, scientist-38)
conj_and(winner-35, scientist-38)
advmod(century-41, almost-39)
det(century-41, a-40)
npadvmod(ago-42, century-41)
advmod(winner-35, ago-42)
appos(winner-35, http:\/\/www.talkorigins.org\/faqs\/comdesc\/ICsilly.html-44)
dep(winner-35, Muller-46)
nn(J.-49, H.-48)
appos(Muller-46, J.-49)

(ROOT
  (S
    (VP
      (NP
        (NP (-LRB- -LRB-) (NNP 1918) (-RRB- -RRB-))
        ('' '')
        (NP
          (NP (JJ Genetic) (NN variability))
          (, ,)
          (NP (JJ twin) (NNS hybrids))
          (CC and)
          (NP (JJ constant) (NNS hybrids)))
        (, ,)
        (PP (IN in)
          (NP
            (NP (DT a) (NN case))
            (PP (IN of)
              (NP (VBN balanced) (JJ lethal) (NNS factors)))))))
    (. .)))

root(ROOT-0, 1918-2)
amod(variability-6, Genetic-5)
dep(1918-2, variability-6)
amod(hybrids-9, twin-8)
dep(1918-2, hybrids-9)
conj_and(variability-6, hybrids-9)
amod(hybrids-12, constant-11)
dep(1918-2, hybrids-12)
conj_and(variability-6, hybrids-12)
det(case-16, a-15)
prep_in(1918-2, case-16)
amod(factors-20, balanced-18)
amod(factors-20, lethal-19)
prep_of(case-16, factors-20)

(ROOT
  (S ('' '')
    (NP (NNP Genetics) (CD 3:422))
    (VP (VBZ -499))
    (. .)))

nsubj(-499-4, Genetics-2)
num(Genetics-2, 3:422-3)
root(ROOT-0, -499-4)

(ROOT
  (NP
    (NP (NNP Muller))
    (, ,)
    (NP (NNP H.) (NNP J.))))

root(ROOT-0, Muller-1)
nn(J.-4, H.-3)
appos(Muller-1, J.-4)

(ROOT
  (NP
    (NP
      (NP (-LRB- -LRB-) (NNP 1939) (-RRB- -RRB-))
      ('' '')
      (PP
        (ADVP (RB Reversibility))
        (IN in)
        (NP (NN evolution))))
    (VP (VBN considered)
      (PP (IN from)
        (NP
          (NP (DT the) (NN standpoint))
          (PP (IN of)
            (NP (NNS genetics))))))
    (. .)))

root(ROOT-0, 1939-2)
advmod(1939-2, Reversibility-5)
prep_in(1939-2, evolution-7)
partmod(1939-2, considered-8)
det(standpoint-11, the-10)
prep_from(considered-8, standpoint-11)
prep_of(standpoint-11, genetics-13)

(ROOT
  (FRAG ('' '')
    (NP (NNP Biological) (NNPS Reviews))
    (PP (IN of)
      (NP (DT the) (NNP Cambridge) (NNP Philosophical) (NNP Society) (NNP 14:261) (NNP -280)))
    (. .)))

nn(Reviews-3, Biological-2)
root(ROOT-0, Reviews-3)
dep(Reviews-3, of-4)
det(-280-10, the-5)
nn(-280-10, Cambridge-6)
nn(-280-10, Philosophical-7)
nn(-280-10, Society-8)
nn(-280-10, 14:261-9)
pobj(of-4, -280-10)

