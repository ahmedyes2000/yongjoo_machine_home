(ROOT
  (S ('' '')
    (S
      (ADVP (RB Surely))
      (NP (DT any) (JJ open-minded) (NN individual))
      (VP (MD would)
        (VP (VB agree)
          (SBAR (IN that)
            (S
              (NP (NNP ID))
              (VP (VBZ has)
                (NP
                  (ADJP
                    (ADVP (RBR more) (RB then))
                    (JJ enough))
                  (JJ hypothetical) (NNS constraints))))))))
    (, ,)
    (ADVP (RB otherwise))
    (S
      (NP (PRP you))
      (VP (MD would) (RB n't)
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB argue)
                  (NP (DT the) (NN evidence))
                  (SBAR (IN for)
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (ADJP (JJ wrong)
                          (PP (IN in)
                            (NP (DT the) (JJ first) (NN place))))))))))))))
    (. .)))

advmod(agree-7, Surely-2)
det(individual-5, any-3)
amod(individual-5, open-minded-4)
nsubj(agree-7, individual-5)
aux(agree-7, would-6)
root(ROOT-0, agree-7)
complm(has-10, that-8)
nsubj(has-10, ID-9)
ccomp(agree-7, has-10)
advmod(then-12, more-11)
advmod(enough-13, then-12)
amod(constraints-15, enough-13)
amod(constraints-15, hypothetical-14)
dobj(has-10, constraints-15)
advmod(agree-7, otherwise-17)
nsubj(able-22, you-18)
aux(able-22, would-19)
neg(able-22, n't-20)
cop(able-22, be-21)
ccomp(agree-7, able-22)
aux(argue-24, to-23)
xcomp(able-22, argue-24)
det(evidence-26, the-25)
dobj(argue-24, evidence-26)
mark(wrong-30, for-27)
nsubj(wrong-30, it-28)
cop(wrong-30, was-29)
advcl(argue-24, wrong-30)
det(place-34, the-32)
amod(place-34, first-33)
prep_in(wrong-30, place-34)

