(ROOT
  (S (: --)
    (NP
      (NP (DT These) (CD two) (NNS moves))
      (VP
        (VP (VBG ruling)
          (PRT (RP out))
          (NP (NN regularity)))
        (, ,)
        (CC and)
        (VP
          (ADVP (RB then))
          (VBG ruling)
          (PP (IN out)
            (NP (NN chance))))))
    (VP (VBP constitute)
      (NP (DT the) (NN design) (NN inference)))
    (. .)))

det(moves-4, These-2)
num(moves-4, two-3)
nsubj(constitute-14, moves-4)
dep(moves-4, ruling-5)
prt(ruling-5, out-6)
dobj(ruling-5, regularity-7)
advmod(ruling-11, then-10)
dep(moves-4, ruling-11)
conj_and(ruling-5, ruling-11)
prep_out(ruling-11, chance-13)
root(ROOT-0, constitute-14)
det(inference-17, the-15)
nn(inference-17, design-16)
dobj(constitute-14, inference-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NN conception))
      (PP (IN of)
        (NP
          (NP (NN design))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ emerges)
                (PP (IN from)
                  (NP (DT the) (NN design) (NN inference)))))))))
    (VP (VBZ is)
      (ADVP (RB therefore))
      (VP
        (VP (VBG __)
          (NP (JJ eliminative) (NNS __)))
        (, ,)
        (VP (VBG asserting)
          (PP (IN of)
            (NP (DT an) (NN event))))
        (SBAR
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBZ is) (RB not))))
          (, ,) (RB not)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBZ is)))))))
    (. .)))

det(conception-2, The-1)
nsubj(__-13, conception-2)
prep_of(conception-2, design-4)
nsubj(emerges-6, design-4)
rcmod(design-4, emerges-6)
det(inference-10, the-8)
nn(inference-10, design-9)
prep_from(emerges-6, inference-10)
aux(__-13, is-11)
advmod(__-13, therefore-12)
root(ROOT-0, __-13)
amod(__-15, eliminative-14)
dobj(__-13, __-15)
dep(__-13, asserting-17)
det(event-20, an-19)
prep_of(asserting-17, event-20)
dobj(is-23, what-21)
nsubj(is-23, it-22)
dep(__-13, is-23)
neg(is-23, not-24)
dep(is-23, not-26)
dobj(is-29, what-27)
nsubj(is-29, it-28)
dep(is-23, is-29)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB attribute)
          (NP (DT an) (NN event)
            (S
              (VP (TO to)
                (VP (VB design))))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB say)
            (NP
              (NP (DT that) (NN regularity)
                (CC and)
                (NN chance) (NN hav))
              (VP (VBN been)
                (VP (VBN ruled)
                  (PRT (RP out)))))))))
    (. ...)))

aux(attribute-2, To-1)
csubj(is-7, attribute-2)
det(event-4, an-3)
dobj(attribute-2, event-4)
aux(design-6, to-5)
infmod(event-4, design-6)
root(ROOT-0, is-7)
aux(say-9, to-8)
xcomp(is-7, say-9)
det(hav-14, that-10)
nn(hav-14, regularity-11)
conj_and(regularity-11, chance-13)
nn(hav-14, chance-13)
dobj(say-9, hav-14)
auxpass(ruled-16, been-15)
partmod(hav-14, ruled-16)
prt(ruled-16, out-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN argument))
        (VP (VBD were)
          (ADJP (RB purely) (JJ eliminative)))))
    (, ,)
    (NP (PRP one))
    (VP (MD might)
      (VP (VB be)
        (VP (VBN justified)
          (PP (IN in)
            (S
              (VP (VBG saying)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT the) (NN move))
                      (PP (IN from)
                        (NP
                          (NP (VBN specified) (NN complexity))
                          (PP (TO to)
                            (NP (DT a) (JJ designing) (NN intelligence))))))
                    (VP (VBZ is)
                      (NP
                        (NP (DT an) (NN argument))
                        (PP (IN from)
                          (NP
                            (NP (NN ignorance))
                            (PRN (-LRB- -LRB-)
                              (NP
                                (NP (NN i.) (CD 1.))
                                (, ,)
                                (NP (RB not) (NNP X) (NNP therefore) (NNP Y)))
                              (-RRB- -RRB-))))))))))))))
    (. .)))

mark(eliminative-6, If-1)
det(argument-3, the-2)
nsubj(eliminative-6, argument-3)
cop(eliminative-6, were-4)
advmod(eliminative-6, purely-5)
advcl(justified-11, eliminative-6)
nsubjpass(justified-11, one-8)
aux(justified-11, might-9)
auxpass(justified-11, be-10)
root(ROOT-0, justified-11)
prepc_in(justified-11, saying-13)
complm(argument-26, that-14)
det(move-16, the-15)
nsubj(argument-26, move-16)
amod(complexity-19, specified-18)
prep_from(move-16, complexity-19)
det(intelligence-23, a-21)
amod(intelligence-23, designing-22)
prep_to(complexity-19, intelligence-23)
cop(argument-26, is-24)
det(argument-26, an-25)
ccomp(saying-13, argument-26)
prep_from(argument-26, ignorance-28)
dep(ignorance-28, i.-30)
num(i.-30, 1.-31)
neg(Y-36, not-33)
nn(Y-36, X-34)
nn(Y-36, therefore-35)
appos(i.-30, Y-36)

(ROOT
  (S
    (NP
      (NP
        (QP (CD p.) (CD 111))
        (DT No) (JJ free) (NN LunchBut))
      (SBAR
        (S
          (NP (DT the) (NN argument))
          (VP (VBZ IS)
            (ADJP (RB purely) (JJ eliminative))))))
    (VP (VBD followed)
      (PP (IN by)
        (NP
          (NP (DT an) (JJ inductive) (NN argument))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (MD can) (RB not)
                (VP (VB exclude)
                  (NP (JJ natural) (NN selection))
                  (PP (IN as)
                    (NP (DT a) (NN designer))))))))))
    (. .)))

number(111-2, p.-1)
num(LunchBut-5, 111-2)
det(LunchBut-5, No-3)
amod(LunchBut-5, free-4)
nsubj(followed-11, LunchBut-5)
det(argument-7, the-6)
nsubj(eliminative-10, argument-7)
cop(eliminative-10, IS-8)
advmod(eliminative-10, purely-9)
rcmod(LunchBut-5, eliminative-10)
root(ROOT-0, followed-11)
det(argument-15, an-13)
amod(argument-15, inductive-14)
prep_by(followed-11, argument-15)
nsubj(exclude-19, argument-15)
aux(exclude-19, can-17)
neg(exclude-19, not-18)
rcmod(argument-15, exclude-19)
amod(selection-21, natural-20)
dobj(exclude-19, selection-21)
det(designer-24, a-23)
prep_as(exclude-19, designer-24)

(ROOT
  (SQ
    (VP (VB Need)
      (NP (JJR more)))
    (. ?)))

root(ROOT-0, Need-1)
dobj(Need-1, more-2)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB be)
          (ADJP (JJ sure)))))
    (, ,)
    (NP (NN design))
    (VP (VBZ renders)
      (S
        (NP (NN agency))
        (ADJP (JJ plausible))))
    (. .)))

aux(sure-3, To-1)
cop(sure-3, be-2)
purpcl(renders-6, sure-3)
nsubj(renders-6, design-5)
root(ROOT-0, renders-6)
nsubj(plausible-8, agency-7)
xcomp(renders-6, plausible-8)

(ROOT
  (S (CC But)
    (PP (IN as)
      (NP
        (NP (DT the) (NN negation))
        (PP (IN of)
          (NP (NN regularity)
            (CC and)
            (NN chance)))))
    (, ,)
    (NP (NN design))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN mode))
        (PP (IN of)
          (NP
            (NP (NN explanation))
            (VP
              (ADVP (RB logically))
              (VBN preliminary)
              (PP (TO to)
                (NP (NN agency))))))))
    (. .)))

cc(mode-13, But-1)
det(negation-4, the-3)
prep_as(mode-13, negation-4)
prep_of(negation-4, regularity-6)
prep_of(negation-4, chance-8)
conj_and(regularity-6, chance-8)
nsubj(mode-13, design-10)
cop(mode-13, is-11)
det(mode-13, a-12)
root(ROOT-0, mode-13)
prep_of(mode-13, explanation-15)
advmod(preliminary-17, logically-16)
partmod(explanation-15, preliminary-17)
prep_to(preliminary-17, agency-19)

(ROOT
  (NP
    (NP (NN p.) (CD 19) (NNP The) (NNP Design) (NNP Inference))
    (: --)
    (S
      (SBAR (IN Because)
        (S
          (NP (DT the) (NN design) (NN inference))
          (VP (VBZ is)
            (ADJP (JJ eliminative)))))
      (, ,)
      (NP (NN ther))
      (VP (VBZ is)
        (NP
          (NP (DT no) (`` ``) (NN design) (NN hypothesis) ('' ''))
          (PP (IN against)
            (SBAR
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (DT the) (JJ relevant) (NN chance) (NNS hypotheses))
                  (VP (VBP compete))))
              (, ,)
              (CC and)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (MD must) (RB then)
                    (VP (VB be)
                      (VP (VBN compared)
                        (PP (IN within)
                          (NP (DT a) (NNP Bayesian) (NN confirmation) (NN scheme)))))))))))))
    (. .)))

nn(Inference-5, p.-1)
num(Inference-5, 19-2)
nn(Inference-5, The-3)
nn(Inference-5, Design-4)
root(ROOT-0, Inference-5)
mark(eliminative-12, Because-7)
det(inference-10, the-8)
nn(inference-10, design-9)
nsubj(eliminative-12, inference-10)
cop(eliminative-12, is-11)
advcl(hypothesis-19, eliminative-12)
nsubj(hypothesis-19, ther-14)
cop(hypothesis-19, is-15)
det(hypothesis-19, no-16)
nn(hypothesis-19, design-18)
dep(Inference-5, hypothesis-19)
dobj(compete-27, which-22)
det(hypotheses-26, the-23)
amod(hypotheses-26, relevant-24)
nn(hypotheses-26, chance-25)
nsubj(compete-27, hypotheses-26)
prepc_against(hypothesis-19, compete-27)
nsubjpass(compared-34, which-30)
aux(compared-34, must-31)
advmod(compared-34, then-32)
auxpass(compared-34, be-33)
prepc_against(hypothesis-19, compared-34)
conj_and(compete-27, compared-34)
det(scheme-39, a-36)
nn(scheme-39, Bayesian-37)
nn(scheme-39, confirmation-38)
prep_within(compared-34, scheme-39)

(ROOT
  (S
    (S
      (VP (VBG p.)
        (NP (CD 62))
        (NP
          (NP (DT The) (NNP Design) (NNP InferenceIn))
          ('' '')
          (SBAR
            (S
              (NP (DT No) (NNP Free) (NNP Lunch) ('' '') (NNP Dembski))
              (VP (VBZ attempts)
                (S
                  (VP (TO to)
                    (VP (VB show)
                      (SBAR (IN that)
                        (S
                          (NP
                            (NP (DT the) (NN design) (NN inference))
                            (, ,)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBZ is)
                                  (ADJP (RB purely) (JJ eliminative))))))
                          (VP (VBZ is) (RB not)
                            (NP
                              (NP (DT an) (NN argument))
                              (PP (IN from)
                                (NP (NN ignorance))))
                            (, ,)
                            (SBAR (IN as)
                              (S
                                (NP (PRP I))
                                (VP (VBP have)
                                  (VP (VBN shown)))))))))))))))))
    (, ,)
    (NP (PRP$ his) (NN position))
    (VP (VBZ is)
      (ADJP (JJ flawed)))
    (. .)))

partmod(flawed-39, p.-1)
iobj(p.-1, 62-2)
det(InferenceIn-5, The-3)
nn(InferenceIn-5, Design-4)
dobj(p.-1, InferenceIn-5)
dobj(attempts-12, InferenceIn-5)
det(Dembski-11, No-7)
nn(Dembski-11, Free-8)
nn(Dembski-11, Lunch-9)
nsubj(attempts-12, Dembski-11)
xsubj(show-14, Dembski-11)
rcmod(InferenceIn-5, attempts-12)
aux(show-14, to-13)
xcomp(attempts-12, show-14)
complm(argument-27, that-15)
det(inference-18, the-16)
nn(inference-18, design-17)
nsubj(eliminative-23, inference-18)
nsubj(argument-27, inference-18)
cop(eliminative-23, is-21)
advmod(eliminative-23, purely-22)
rcmod(inference-18, eliminative-23)
cop(argument-27, is-24)
neg(argument-27, not-25)
det(argument-27, an-26)
ccomp(show-14, argument-27)
prep_from(argument-27, ignorance-29)
mark(shown-34, as-31)
nsubj(shown-34, I-32)
aux(shown-34, have-33)
advcl(argument-27, shown-34)
poss(position-37, his-36)
nsubj(flawed-39, position-37)
cop(flawed-39, is-38)
root(ROOT-0, flawed-39)

(ROOT
  (S
    (NP (NNS Others))
    (VP (VBP have)
      (VP (VBN done)
        (ADVP (RB so) (RB as) (RB well))
        (, ,)
        (PP (VBG including)
          (NP
            (NP (NNP Fitelson)
              (CC and)
              (NNP Sober))
            (, ,)
            (NP (NNP Ryan) (NNP Nichols))
            (, ,)
            (NP (NNP Pete) (NNP Dunkelberg))
            (, ,)
            (NP (NNP Mark) (NNP Perahk))
            (, ,)
            (NP (NNP Wesley) (NNP Elsberry))
            (CC and)
            (NP (NNP John) (NNP Wilkins))))))
    (. .)))

nsubj(done-3, Others-1)
aux(done-3, have-2)
root(ROOT-0, done-3)
advmod(well-6, so-4)
advmod(well-6, as-5)
mwe(well-6, as-5)
advmod(done-3, well-6)
prep_including(done-3, Fitelson-9)
prep_including(done-3, Sober-11)
conj_and(Fitelson-9, Sober-11)
nn(Nichols-14, Ryan-13)
prep_including(done-3, Nichols-14)
conj_and(Fitelson-9, Nichols-14)
nn(Dunkelberg-17, Pete-16)
prep_including(done-3, Dunkelberg-17)
conj_and(Fitelson-9, Dunkelberg-17)
nn(Perahk-20, Mark-19)
prep_including(done-3, Perahk-20)
conj_and(Fitelson-9, Perahk-20)
nn(Elsberry-23, Wesley-22)
prep_including(done-3, Elsberry-23)
conj_and(Fitelson-9, Elsberry-23)
nn(Wilkins-26, John-25)
prep_including(done-3, Wilkins-26)
conj_and(Fitelson-9, Wilkins-26)

(ROOT
  (S
    (NP (NNP Section) (NNP 2.10))
    (VP (VBZ is)
      (PP (IN of)
        (NP (JJ especial) (NN interest)))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ addresses)
            (NP
              (NP (DT the) (NN legitimacy))
              (PP (IN of)
                (NP
                  (NP
                    (NP (VBG inferring) (NN design))
                    (PP (IN via)
                      (NP (DT an) (JJ eliminative) (NN argument))))
                  (PRN (-LRB- -LRB-)
                    (NP (DT the) (NN concern)
                      (S
                        (VP (VBG being)
                          (SBAR (IN that)
                            (S
                              (NP (NN design) (NNS inferences))
                              (VP (VBP are)
                                (NP
                                  (NP
                                    (NP (NNS arguments))
                                    (PP (IN from)
                                      (NP (NN ignorance))))
                                  (: --)
                                  (S
                                    (SBAR (IN as)
                                      (S
                                        (NP (PRP we))
                                        (VP (MD shall)
                                          (VP (VB see)))))
                                    (, ,)
                                    (NP (PRP they))
                                    (VP (VBP are) (RB not))))))))))
                    (-RRB- -RRB-)))))))))
    (. .)))

nn(2.10-2, Section-1)
nsubj(is-3, 2.10-2)
root(ROOT-0, is-3)
amod(interest-6, especial-5)
prep_of(is-3, interest-6)
mark(addresses-9, because-7)
nsubj(addresses-9, it-8)
advcl(is-3, addresses-9)
det(legitimacy-11, the-10)
dobj(addresses-9, legitimacy-11)
amod(design-14, inferring-13)
prep_of(legitimacy-11, design-14)
det(argument-18, an-16)
amod(argument-18, eliminative-17)
prep_via(design-14, argument-18)
det(concern-21, the-20)
appos(design-14, concern-21)
dep(concern-21, being-22)
complm(arguments-27, that-23)
nn(inferences-25, design-24)
nsubj(arguments-27, inferences-25)
cop(arguments-27, are-26)
ccomp(being-22, arguments-27)
prep_from(arguments-27, ignorance-29)
mark(see-34, as-31)
nsubj(see-34, we-32)
aux(see-34, shall-33)
advcl(are-37, see-34)
nsubj(are-37, they-36)
dep(arguments-27, are-37)
neg(are-37, not-38)

(ROOT
  (S
    (NP
      (NP (NN p.) (CD 73))
      (NP (DT No) (NNP Free) (NNP LunchThe) (NN argument)))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (NN induction)))
        (, ,)
        (PP (IN with)
          (NP (PDT all) (PRP$ its) (NNS problems))))
      (ADVP (RB namely))
      (SBAR (IN that)
        (S
          (PP (VBG according)
            (PP (TO to)
              (NP
                (NP (NNP Dembski) (RB all) (NNS instances))
                (SBAR
                  (WHPP (IN in)
                    (WHNP (WDT which)))
                  (S
                    (S
                      (NP (PRP we))
                      (VP (VBD identified)
                        (NP (VBN specified) (NN complexity))))
                    (CC and)
                    (S
                      (NP (PRP we))
                      (VP (VBP know)
                        (NP (DT the) (JJ causal) (NN history)))))))))
          (, ,)
          (NP (NN intelligence))
          (VP (VBD was)
            (VP (VBN involved)
              (ADVP (RB as) (RB well)))))))
    (. .)))

nsubj(one-8, p.-1)
num(p.-1, 73-2)
det(argument-6, No-3)
nn(argument-6, Free-4)
nn(argument-6, LunchThe-5)
dep(p.-1, argument-6)
cop(one-8, is-7)
root(ROOT-0, one-8)
prep_of(one-8, induction-10)
predet(problems-15, all-13)
poss(problems-15, its-14)
prep_with(one-8, problems-15)
advmod(one-8, namely-16)
complm(involved-38, that-17)
prepc_according_to(involved-38, to-19)
nn(instances-22, Dembski-20)
advmod(instances-22, all-21)
pobj(involved-38, instances-22)
rel(identified-26, which-24)
nsubj(identified-26, we-25)
rcmod(instances-22, identified-26)
amod(complexity-28, specified-27)
dobj(identified-26, complexity-28)
nsubj(know-31, we-30)
rcmod(instances-22, know-31)
conj_and(identified-26, know-31)
det(history-34, the-32)
amod(history-34, causal-33)
dobj(know-31, history-34)
nsubjpass(involved-38, intelligence-36)
auxpass(involved-38, was-37)
ccomp(one-8, involved-38)
advmod(well-40, as-39)
mwe(well-40, as-39)
advmod(involved-38, well-40)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (NNP Dembski))
    (VP (VBZ claims)
      (SBAR
        (SBAR (IN that) (`` ``)
          (S
            (NP (NN choice))
            (VP (VBZ is)
              (NP
                (NP (DT the) (VBG defining) (NN feature))
                (PP (IN of)
                  (NP (NN intelligence)))))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (VBN specified) (NN complexity))
            (VP (VBZ is)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (PP (IN in)
                    (NP (NN fact)))
                  (NP (PRP we))
                  (VP (VBP identify)
                    (NP (NN choice)))
                  ('' ''))))))))
    (. .)))

prep_in(claims-5, fact-2)
nsubj(claims-5, Dembski-4)
root(ROOT-0, claims-5)
complm(feature-12, that-6)
nsubj(feature-12, choice-8)
cop(feature-12, is-9)
det(feature-12, the-10)
amod(feature-12, defining-11)
ccomp(claims-5, feature-12)
prep_of(feature-12, intelligence-14)
complm(is-19, that-16)
amod(complexity-18, specified-17)
nsubj(is-19, complexity-18)
ccomp(claims-5, is-19)
conj_and(feature-12, is-19)
advmod(identify-24, how-20)
prep_in(identify-24, fact-22)
nsubj(identify-24, we-23)
ccomp(is-19, identify-24)
dobj(identify-24, choice-25)

(ROOT
  (S
    (S
      (NP (DT That) (JJ final) (NN phrase))
      (VP (VBZ dooms)
        (SBAR
          (S
            (NP
              (NP (NNP Intelligent) (NNP Design))
              (PP (IN since)
                (NP
                  (NP (JJ natural) (NNS processes))
                  (PP (IN of)
                    (NP (JJ natural) (NN selection))))))
            (ADVP (RB also))
            (VP (VBP have)
              (NP (`` ``) (NN choice) ('' '')))))))
    (CC and)
    (S
      (ADVP (RB thus))
      (NP (JJ such) (NNS processes))
      (VP (VBP fall)
        (ADVP (RB well))
        (PP (IN within)
          (NP
            (NP (DT the) (NN realm))
            (PP (IN of)
              (NP
                (NP (NNS processes))
                (VP (VBN known)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ able)
                          (S
                            (VP (TO to)
                              (VP (VB generate)
                                (NP (VBN specified) (NN complexity))))))))))))))))
    (. .)))

det(phrase-3, That-1)
amod(phrase-3, final-2)
nsubj(dooms-4, phrase-3)
root(ROOT-0, dooms-4)
nn(Design-6, Intelligent-5)
nsubj(have-14, Design-6)
amod(processes-9, natural-8)
prep_since(Design-6, processes-9)
amod(selection-12, natural-11)
prep_of(processes-9, selection-12)
advmod(have-14, also-13)
ccomp(dooms-4, have-14)
dobj(have-14, choice-16)
advmod(fall-22, thus-19)
amod(processes-21, such-20)
nsubj(fall-22, processes-21)
conj_and(dooms-4, fall-22)
advmod(fall-22, well-23)
det(realm-26, the-25)
prep_within(fall-22, realm-26)
prep_of(realm-26, processes-28)
xsubj(able-32, processes-28)
partmod(processes-28, known-29)
aux(able-32, to-30)
cop(able-32, be-31)
xcomp(known-29, able-32)
aux(generate-34, to-33)
xcomp(able-32, generate-34)
amod(complexity-36, specified-35)
dobj(generate-34, complexity-36)

