(ROOT
  (S (: --)
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB offer)
        (ADVP (RB anymore))
        (PP (IN than)
          (NP
            (NP (NN theory))
            (PP (IN for)
              (NP
                (NP (CD one))
                (CC or)
                (NP (DT the) (JJ other))))))))
    (. .)))

nsubj(offer-5, You-2)
aux(offer-5, ca-3)
neg(offer-5, n't-4)
root(ROOT-0, offer-5)
advmod(offer-5, anymore-6)
prep_than(offer-5, theory-8)
prep_for(theory-8, one-10)
det(other-13, the-12)
prep_for(theory-8, other-13)
conj_or(one-10, other-13)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP (DT an) (JJ open) (NN mind))
          (VP (VBZ is)
            (ADJP
              (ADVP (RB far) (RBR more))
              (JJ important)
              (PP (IN than)
                (NP
                  (NP (RB only) (CD one) (NN view))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (MD can) (RB not)
                        (VP (VB be)
                          (VP (VBN proven)))))))))))))
    (. .)))

nsubj(believe-3, I-1)
advmod(believe-3, just-2)
root(ROOT-0, believe-3)
complm(important-11, that-4)
det(mind-7, an-5)
amod(mind-7, open-6)
nsubj(important-11, mind-7)
cop(important-11, is-8)
advmod(more-10, far-9)
advmod(important-11, more-10)
ccomp(believe-3, important-11)
advmod(view-15, only-13)
num(view-15, one-14)
prep_than(important-11, view-15)
nsubjpass(proven-20, view-15)
aux(proven-20, can-17)
neg(proven-20, not-18)
auxpass(proven-20, be-19)
rcmod(view-15, proven-20)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (VBD was)
      (NP (DT a) (NN racist)))
    (. .)))

cc(racist-5, And-1)
nsubj(racist-5, he-2)
cop(racist-5, was-3)
det(racist-5, a-4)
root(ROOT-0, racist-5)

(ROOT
  (S
    (VP (VB Read)
      (SBAR (IN before)
        (S
          (NP (PRP you))
          (VP (VBP go)
            (PRT (RP up))
            (S
              (VP (TO to)
                (VP (VB call)
                  (PRT (RP out))
                  (NP (DT the) (JJ big) (NNS boys)))))))))
    (. .)))

root(ROOT-0, Read-1)
mark(go-4, before-2)
nsubj(go-4, you-3)
xsubj(call-7, you-3)
advcl(Read-1, go-4)
prt(go-4, up-5)
aux(call-7, to-6)
xcomp(go-4, call-7)
prt(call-7, out-8)
det(boys-11, the-9)
amod(boys-11, big-10)
dobj(call-7, boys-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB see)
            (NP
              (NP (DT the) (NN racist))
              (PP (IN in)
                (NP (PRP$ his) (NNS works))))
            (PP (IN than)
              (NP (PRP I)))))))
    (VP (VBP feel)
      (ADJP (JJ sorry))
      (PP (IN for)
        (NP (PRP you))))
    (. .)))

mark(see-5, If-1)
nsubj(see-5, you-2)
aux(see-5, do-3)
neg(see-5, n't-4)
csubj(feel-13, see-5)
det(racist-7, the-6)
dobj(see-5, racist-7)
poss(works-10, his-9)
prep_in(racist-7, works-10)
prep_than(see-5, I-12)
root(ROOT-0, feel-13)
acomp(feel-13, sorry-14)
prep_for(feel-13, you-16)

(ROOT
  (S
    (VP (VB Note)
      (NP
        (NP (DT the) (NN lack))
        (PP (IN of)
          (NP
            (NP (NN evidence))
            (CC and)
            (NP (DT the) (NN name) (NN calling))))))
    (. .)))

root(ROOT-0, Note-1)
det(lack-3, the-2)
dobj(Note-1, lack-3)
prep_of(lack-3, evidence-5)
det(calling-9, the-7)
nn(calling-9, name-8)
prep_of(lack-3, calling-9)
conj_and(evidence-5, calling-9)

(ROOT
  (NP
    (NP (DT All) (JJ clear) (NN evidence))
    (PP (IN of)
      (NP (DT a) (NN lack)))
    (PP (IN of)
      (NP (NN argument)))
    (. .)))

det(evidence-3, All-1)
amod(evidence-3, clear-2)
root(ROOT-0, evidence-3)
det(lack-6, a-5)
prep_of(evidence-3, lack-6)
prep_of(evidence-3, argument-8)

(ROOT
  (SINV
    (S
      (VP
        (ADVP (RB Well))
        (VBN done)))
    (, ,)
    (VP (VBP purelabor)
      (SBAR (CC but)
        (S
          (NP (PRP you))
          (ADVP (RB surely))
          (VP (MD can)
            (VP (VB do)
              (ADVP
                (ADVP (RBR better))
                (SBAR (IN than)
                  (S
                    (NP (DT this))
                    (ADVP (RB now))
                    (VP (MD can))))))))))
    (NP (PRP you))
    (. ?)))

advmod(done-2, Well-1)
dep(purelabor-4, done-2)
root(ROOT-0, purelabor-4)
cc(do-9, but-5)
nsubj(do-9, you-6)
advmod(do-9, surely-7)
aux(do-9, can-8)
ccomp(purelabor-4, do-9)
advmod(do-9, better-10)
mark(can-14, than-11)
nsubj(can-14, this-12)
advmod(can-14, now-13)
dep(better-10, can-14)
nsubj(purelabor-4, you-15)

(ROOT
  (SQ (CC Or)
    (VBZ are)
    (NP (PRP you))
    (ADJP (JJ unable)
      (S
        (VP (TO to)
          (VP (VB support)
            (NP (RB even) (PRP$ your)
              (ADJP (RBR more) (JJ outrageous))
              (NNS claims))))))
    (. ?)))

cc(unable-4, Or-1)
cop(unable-4, are-2)
nsubj(unable-4, you-3)
root(ROOT-0, unable-4)
aux(support-6, to-5)
xcomp(unable-4, support-6)
advmod(claims-11, even-7)
poss(claims-11, your-8)
advmod(outrageous-10, more-9)
amod(claims-11, outrageous-10)
dobj(support-6, claims-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do)
        (VP (VB understand))))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (NP
        (NP (DT the)
          (ADJP (RBS most) (RB commonly) (JJ observed))
          (JJ modus) (NNS operandus))
        (PP (IN of)
          (NP (NNP ID) (NNS proponents)))))
    (. .)))

nsubj(understand-3, I-1)
aux(understand-3, do-2)
ccomp(operandus-12, understand-3)
nsubj(operandus-12, that-5)
cop(operandus-12, 's-6)
det(operandus-12, the-7)
advmod(observed-10, most-8)
advmod(observed-10, commonly-9)
amod(operandus-12, observed-10)
amod(operandus-12, modus-11)
root(ROOT-0, operandus-12)
nn(proponents-15, ID-14)
prep_of(operandus-12, proponents-15)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP
        (VP (VB feel)
          (ADJP (JJ sorry))
          (PP (IN for)
            (NP (PRP me))))
        (, ,)
        (VP (VB present)
          (NP (DT an) (NN argument)))
        (, ,)
        (VP (VB surprise)
          (NP (PRP us)))
        (, ,)
        (VP (VB enlighten)
          (NP (PRP us)))
        (, ,)
        (S
          (VP (VBG thrill)
            (NP (PRP us))
            (PP (IN with)
              (NP (PRP$ your) (NNS arguments)))))))
    (. .)))

aux(feel-3, Do-1)
neg(feel-3, n't-2)
root(ROOT-0, feel-3)
acomp(feel-3, sorry-4)
prep_for(feel-3, me-6)
dep(feel-3, present-8)
det(argument-10, an-9)
dobj(present-8, argument-10)
dep(feel-3, surprise-12)
dobj(surprise-12, us-13)
dep(feel-3, enlighten-15)
dobj(enlighten-15, us-16)
xcomp(feel-3, thrill-18)
dobj(thrill-18, us-19)
poss(arguments-22, your-21)
prep_with(thrill-18, arguments-22)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (NN contrary)))
    (, ,)
    (NP (PRP I))
    (VP (MD could)
      (VP (VB fill)
        (S
          (NP (JJ countless) (NNS books))
          (VP (TO to)
            (VP (VB support)
              (NP (DT the) (JJ Darwinian)
                (CC and)
                (JJ evolutionary) (NNS theories)))))
        (SBAR (IN while)
          (S
            (NP (DT the) (NN ID) (`` ``) (NN theory) ('' ''))
            (VP (MD can)
              (VP (VB be)
                (ADJP (JJ summarized))
                (SBAR (IN as) (`` ``)
                  (S
                    (NP (PRP I))
                    (VP (VBP do) (RB not)
                      (VP (VB understand)))))))))
        (: :)
        (ADVP (RB thus))
        (VB poof) ('' '') (: --)
        (ADVP (RB As)
          (PP (IN for)
            (NP (NNP Darwin))))
        (, ,)
        (SBAR
          (SBAR
            (S
              (VP (VBP have)
                (S
                  (NP (PRP you))
                  (VP (VB read)
                    (NP (PRP$ his) (NNS books)))))))
          (CC or)
          (SBAR
            (S
              (VP (VBP are)
                (ADVP (RB just))
                (NP
                  (NP (NN brain))
                  (VP (VBN washed)
                    (PP (IN into)
                      (S
                        (VP (VBG thinking)
                          (SBAR (IN that)
                            (S
                              (NP (NN science))
                              (VP (VBZ is)
                                (ADVP (RB always))
                                (ADJP (JJ right))))))))))))))))
    (. .)))

det(contrary-3, the-2)
prep_on(fill-7, contrary-3)
nsubj(fill-7, I-5)
aux(fill-7, could-6)
root(ROOT-0, fill-7)
amod(books-9, countless-8)
nsubj(support-11, books-9)
aux(support-11, to-10)
xcomp(fill-7, support-11)
det(theories-16, the-12)
amod(theories-16, Darwinian-13)
conj_and(Darwinian-13, evolutionary-15)
amod(theories-16, evolutionary-15)
dobj(support-11, theories-16)
mark(summarized-25, while-17)
det(theory-21, the-18)
nn(theory-21, ID-19)
nsubj(summarized-25, theory-21)
aux(summarized-25, can-23)
cop(summarized-25, be-24)
advcl(fill-7, summarized-25)
mark(understand-31, as-26)
nsubj(understand-31, I-28)
aux(understand-31, do-29)
neg(understand-31, not-30)
advcl(summarized-25, understand-31)
advmod(fill-7, thus-33)
dep(fill-7, poof-34)
prep_as_for(fill-7, Darwin-39)
dep(fill-7, have-41)
nsubj(read-43, you-42)
ccomp(have-41, read-43)
poss(books-45, his-44)
dobj(read-43, books-45)
cop(brain-49, are-47)
advmod(brain-49, just-48)
dep(fill-7, brain-49)
conj_or(have-41, brain-49)
partmod(brain-49, washed-50)
prepc_into(washed-50, thinking-52)
complm(right-57, that-53)
nsubj(right-57, science-54)
cop(right-57, is-55)
advmod(right-57, always-56)
ccomp(thinking-52, right-57)

(ROOT
  (S
    (NP (NNS Cattle))
    (VP (VBP follow)
      (NP (DT the) (NN leader))
      (PP (IN without)
        (S
          (VP (VBG questioning)
            (NP (DT the) (NN direction))))))
    (. .)))

nsubj(follow-2, Cattle-1)
root(ROOT-0, follow-2)
det(leader-4, the-3)
dobj(follow-2, leader-4)
prepc_without(follow-2, questioning-6)
det(direction-8, the-7)
dobj(questioning-6, direction-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN read)
        (NP
          (NP
            (NP (JJS most))
            (PP (IN of)
              (NP (PRP$ his) (NNS books))))
          (CC and)
          (NP
            (NP (RB even) (DT some))
            (PP (IN of)
              (NP (PRP$ his) (JJ unpublished) (NNS manuscripts)))))))
    (. .)))

nsubj(read-3, I-1)
aux(read-3, have-2)
root(ROOT-0, read-3)
dobj(read-3, most-4)
poss(books-7, his-6)
prep_of(most-4, books-7)
advmod(some-10, even-9)
dobj(read-3, some-10)
conj_and(most-4, some-10)
poss(manuscripts-14, his-12)
amod(manuscripts-14, unpublished-13)
prep_of(some-10, manuscripts-14)

(ROOT
  (S
    (ADVP (RB Furthermore))
    (, ,)
    (NP
      (NP (NNP Darwinism))
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBZ exists)
            (NP (NN today))))))
    (VP (VBZ is)
      (VP (VBN strengthened)
        (PP (IN by)
          (NP
            (NP (DT a) (JJ vast) (NN amount))
            (PP (IN of)
              (NP (JJ additional) (NN knowledge)))))
        (PP (RB not)
          (ADJP
            (ADJP (RB originally) (JJ accessible))
            (PP (TO to)
              (NP (NNP Darwin)))))))
    (. .)))

advmod(strengthened-9, Furthermore-1)
nsubjpass(strengthened-9, Darwinism-3)
mark(exists-6, as-4)
nsubj(exists-6, it-5)
dep(Darwinism-3, exists-6)
tmod(exists-6, today-7)
auxpass(strengthened-9, is-8)
root(ROOT-0, strengthened-9)
det(amount-13, a-11)
amod(amount-13, vast-12)
agent(strengthened-9, amount-13)
amod(knowledge-16, additional-15)
prep_of(amount-13, knowledge-16)
prep(strengthened-9, not-17)
advmod(accessible-19, originally-18)
pobj(not-17, accessible-19)
prep_to(accessible-19, Darwin-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (NP (DT the) (NN answer))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
det(answer-6, the-5)
dobj(know-4, answer-6)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP I))
    (VP (VBP keep)
      (NP (DT an) (JJ open) (NN mind)))
    (. .)))

advmod(keep-4, However-1)
nsubj(keep-4, I-3)
root(ROOT-0, keep-4)
det(mind-7, an-5)
amod(mind-7, open-6)
dobj(keep-4, mind-7)

(ROOT
  (S
    (NP (DT No) (PRP you))
    (VP (VBP do) (RB n't))
    (. .)))

det(you-2, No-1)
nsubj(do-3, you-2)
root(ROOT-0, do-3)
neg(do-3, n't-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have) (RB not)
      (VP (VBN studied)
        (NP
          (NP (JJ evolutionary) (NN theory))
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP you))
              (ADVP (RB so))
              (ADVP (RB foolishly))
              (VP (VBP describe)
                (PP (IN as)
                  (S
                    (VP (VBG lacking)
                      (NP (NN evidence)))))))))))
    (. .)))

nsubj(studied-4, You-1)
aux(studied-4, have-2)
neg(studied-4, not-3)
root(ROOT-0, studied-4)
amod(theory-6, evolutionary-5)
dobj(studied-4, theory-6)
dobj(describe-11, theory-6)
rel(describe-11, which-7)
nsubj(describe-11, you-8)
advmod(describe-11, so-9)
advmod(describe-11, foolishly-10)
rcmod(theory-6, describe-11)
prepc_as(describe-11, lacking-13)
dobj(lacking-13, evidence-14)

