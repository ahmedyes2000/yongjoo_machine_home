(ROOT
  (S
    (SBAR (IN Before)
      (S
        (NP (PRP I))
        (VP (VBP go)
          (NP (DT any) (JJ further) (NN please)))))
    (VP (VBP note)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (VP (VBG talking)
                (PP (IN about)
                  (S
                    (VP (VBG being)
                      (PP (IN at)
                        (NP (DT a) (`` ``) (NN disadvantage) ('' ''))))))))))
        (CC and)
        (SBAR (RB not) (IN that)
          (S
            (NP (PRP they))
            (VP (VBP 're) (RB not)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ equivelant)))))))))))
    (. .)))

mark(go-3, Before-1)
nsubj(go-3, I-2)
csubj(note-7, go-3)
det(please-6, any-4)
amod(please-6, further-5)
dobj(go-3, please-6)
root(ROOT-0, note-7)
complm(talking-11, that-8)
nsubj(talking-11, I-9)
aux(talking-11, 'm-10)
ccomp(note-7, talking-11)
prepc_about(talking-11, being-13)
det(disadvantage-17, a-15)
prep_at(being-13, disadvantage-17)
dep(going-25, not-20)
dep(going-25, that-21)
nsubj(going-25, they-22)
xsubj(equivelant-28, they-22)
aux(going-25, 're-23)
neg(going-25, not-24)
ccomp(note-7, going-25)
conj_and(talking-11, going-25)
aux(equivelant-28, to-26)
cop(equivelant-28, be-27)
xcomp(going-25, equivelant-28)

(ROOT
  (S
    (PP (IN As) (IN for)
      (NP
        (NP (DT the) (NN number))
        (PP (IN of)
          (NP
            (NP (NNS years))
            (VP (VBN needed))))))
    (, ,)
    (ADVP (RB well))
    (VP (VBZ lets)
      (VP (VB see)))
    (. .)))

det(number-4, the-3)
prep_as_for(lets-10, number-4)
prep_of(number-4, years-6)
partmod(years-6, needed-7)
advmod(lets-10, well-9)
root(ROOT-0, lets-10)
dep(lets-10, see-11)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD would)
      (VP
        (VP (VB continue)
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VBP get)
                (NP (NNS jobs))))))
        (CC and)
        (VP (VB begin)
          (NP
            (NP (DT the) (NN journey))
            (PP (IN of)
              (NP (NN life)))))))
    (. .)))

nsubj(continue-3, We-1)
nsubj(begin-9, We-1)
aux(continue-3, would-2)
root(ROOT-0, continue-3)
mark(get-6, as-4)
nsubj(get-6, they-5)
advcl(continue-3, get-6)
dobj(get-6, jobs-7)
conj_and(continue-3, begin-9)
det(journey-11, the-10)
dobj(begin-9, journey-11)
prep_of(journey-11, life-13)

(ROOT
  (S
    (S
      (NP (DT The) (NN study))
      (VP (MD would)
        (VP (VB continue)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (VBP get)
                (ADJP (JJ married))))))))
    (, ,)
    (NP (PRP$ their) (NN marriage))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN studied))))
    (. .)))

det(study-2, The-1)
nsubj(continue-4, study-2)
aux(continue-4, would-3)
ccomp(studied-14, continue-4)
advmod(married-8, when-5)
nsubj(married-8, they-6)
dep(married-8, get-7)
advcl(continue-4, married-8)
poss(marriage-11, their-10)
nsubjpass(studied-14, marriage-11)
aux(studied-14, would-12)
auxpass(studied-14, be-13)
root(ROOT-0, studied-14)

(ROOT
  (NP
    (NP
      (NP (PRP$ Their) (NN behavior))
      (UCP
        (PP (IN with)
          (NP (PRP$ their) (NNS spouses)))
        (, ,)
        (CC and)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBP have)
              (NP
                (NP (NNS children))
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP they))
                    (VP (VBP treat)
                      (CC and)
                      (VBP deal)
                      (PP (IN with)
                        (NP (PRP$ their) (NNS children))))))))))))
    (. .)))

poss(behavior-2, Their-1)
root(ROOT-0, behavior-2)
dep(behavior-2, with-3)
poss(spouses-5, their-4)
pobj(with-3, spouses-5)
advmod(have-10, when-8)
nsubj(have-10, they-9)
dep(behavior-2, have-10)
conj_and(with-3, have-10)
dobj(have-10, children-11)
advmod(treat-14, how-12)
nsubj(treat-14, they-13)
nsubj(deal-16, they-13)
dep(children-11, treat-14)
dep(children-11, deal-16)
conj_and(treat-14, deal-16)
poss(children-19, their-18)
prep_with(treat-14, children-19)

(ROOT
  (S
    (NP (DT This))
    (VP (MD would)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB continue)
              (SBAR (IN until)
                (S
                  (NP (PRP they))
                  (VP (VBP 're)
                    (ADJP
                      (NP
                        (QP (RB about) (CD 60))
                        (NNS years))
                      (JJ old))))))))))
    (. .)))

nsubj(have-3, This-1)
xsubj(continue-5, This-1)
aux(have-3, would-2)
root(ROOT-0, have-3)
aux(continue-5, to-4)
xcomp(have-3, continue-5)
mark(old-12, until-6)
nsubj(old-12, they-7)
cop(old-12, 're-8)
quantmod(60-10, about-9)
num(years-11, 60-10)
npadvmod(old-12, years-11)
advcl(continue-5, old-12)

(ROOT
  (S
    (S
      (NP (DT The) (NNS data))
      (VP (MD would)
        (ADVP (RB constantly))
        (VP (VB be)
          (VP (VBN compared)))))
    (CC and)
    (S
      (ADVP (RB only))
      (ADVP (RB then))
      (NP (PRP we))
      (VP (MD MAY)
        (VP (VB have)
          (NP
            (NP (DT some) (NN kind))
            (PP (IN of)
              (NP
                (NP (DT an) (NN idea))
                (PP (IN of)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (DT these) (NNS children))
                      (VP (VBD were)
                        (NP (NNP Influenced))
                        (, ,)
                        (ADVP (RB disadvantaged)
                          (CC or)
                          (RB not))))))))))))
    (. .)))

det(data-2, The-1)
nsubjpass(compared-6, data-2)
aux(compared-6, would-3)
advmod(compared-6, constantly-4)
auxpass(compared-6, be-5)
root(ROOT-0, compared-6)
advmod(have-12, only-8)
advmod(have-12, then-9)
nsubj(have-12, we-10)
aux(have-12, MAY-11)
conj_and(compared-6, have-12)
det(kind-14, some-13)
dobj(have-12, kind-14)
det(idea-17, an-16)
prep_of(kind-14, idea-17)
advmod(Influenced-23, how-19)
det(children-21, these-20)
nsubj(Influenced-23, children-21)
cop(Influenced-23, were-22)
prepc_of(idea-17, Influenced-23)
advmod(Influenced-23, disadvantaged-25)
advmod(Influenced-23, not-27)
conj_or(disadvantaged-25, not-27)

(ROOT
  (S
    (NP
      (NP (JJ Many) (JJ scientific) (NNS studies))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBP involve)
            (NP (JJ human) (NN behavior))))))
    (VP (VBP have)
      (VP (VBN taken)
        (NP
          (NP (NNS generations))
          (PP (IN of)
            (NP
              (NP (NNS scientists))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP inherit)
                    (NP (DT the) (NN study))
                    (PP (IN from)
                      (NP
                        (NP (JJ previous) (NNS scientists))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBD spent)
                              (NP (DT a) (NN lifetime))
                              (S
                                (VP (VBG studying)
                                  (NP (JJ certain) (NNS people)))))))))))))))))
    (. .)))

amod(studies-3, Many-1)
amod(studies-3, scientific-2)
nsubj(involve-5, studies-3)
nsubj(taken-9, studies-3)
rcmod(studies-3, involve-5)
amod(behavior-7, human-6)
dobj(involve-5, behavior-7)
aux(taken-9, have-8)
root(ROOT-0, taken-9)
dobj(taken-9, generations-10)
prep_of(generations-10, scientists-12)
nsubj(inherit-14, scientists-12)
rcmod(scientists-12, inherit-14)
det(study-16, the-15)
dobj(inherit-14, study-16)
amod(scientists-19, previous-18)
prep_from(inherit-14, scientists-19)
nsubj(spent-21, scientists-19)
rcmod(scientists-19, spent-21)
det(lifetime-23, a-22)
dobj(spent-21, lifetime-23)
xcomp(spent-21, studying-24)
amod(people-26, certain-25)
dobj(studying-24, people-26)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP you))
    (VP (VBP know)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP I))
          (VP (VBD said)
            (SBAR
              (S
                (NP (EX there))
                (VP (MD can) (RB not)
                  (VP (VB be)
                    (VP (VBN aby)
                      (NP (JJ scientific) (NN proof))
                      (ADVP (RB as) (RB yet))
                      (, ,)
                      (SBAR (IN since)
                        (S
                          (NP
                            (NP (DT the) (NN adoption) (NN policy))
                            (PP (IN by)
                              (NP (DT the) (JJ same) (NN gender) (NNS parents))))
                          (VP (VBZ has) (RB not)
                            (VP (VBN been)
                              (ADVP (RB out))
                              (PP (IN for)
                                (NP (JJ long) (JJ enough) (NN time))))))))))))))))
    (. .)))

advmod(know-3, Now-1)
nsubj(know-3, you-2)
root(ROOT-0, know-3)
advmod(said-6, why-4)
nsubj(said-6, I-5)
advcl(know-3, said-6)
expl(aby-11, there-7)
aux(aby-11, can-8)
neg(aby-11, not-9)
auxpass(aby-11, be-10)
ccomp(said-6, aby-11)
amod(proof-13, scientific-12)
dobj(aby-11, proof-13)
nsubjpass(aby-11, proof-13)
advmod(yet-15, as-14)
advmod(aby-11, yet-15)
mark(been-28, since-17)
det(policy-20, the-18)
nn(policy-20, adoption-19)
nsubj(been-28, policy-20)
det(parents-25, the-22)
amod(parents-25, same-23)
nn(parents-25, gender-24)
prep_by(policy-20, parents-25)
aux(been-28, has-26)
neg(been-28, not-27)
advcl(aby-11, been-28)
advmod(been-28, out-29)
amod(time-33, long-31)
amod(time-33, enough-32)
prep_for(been-28, time-33)

(ROOT
  (S
    (S
      (ADVP (RB Again))
      (VP (VB let)
        (S
          (NP (PRP me))
          (ADJP (JJ reiterate)))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP 'm) (RB not)
              (VP (VBG saying)
                (SBAR
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (MD should) (RB n't)
                        (VP (VB let)
                          (S
                            (NP (JJ same) (NN gender) (NNS partners))
                            (VP
                              (VP (VB adopt)
                                (NP (NNS children)))
                              (CC or)
                              (VP (VB have)
                                (NP
                                  (NP (NN custody))
                                  (PP (IN of)
                                    (NP (NNS children)))))))))))
                  (, ,)
                  (CC but)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP I))
                      (VP (VBP am)
                        (VP (VBG saying))))))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT those) (NNS children))
          (VP (VBP are)
            (PP (IN at)
              (NP (DT a) (NN disadvantage)))))))
    (. .)))

advmod(let-2, Again-1)
csubj(is-30, let-2)
nsubj(reiterate-4, me-3)
xcomp(let-2, reiterate-4)
complm(saying-9, that-5)
nsubj(saying-9, I-6)
aux(saying-9, 'm-7)
neg(saying-9, not-8)
ccomp(let-2, saying-9)
nsubj(let-13, we-10)
aux(let-13, should-11)
neg(let-13, n't-12)
dep(saying-9, let-13)
amod(partners-16, same-14)
nn(partners-16, gender-15)
nsubj(adopt-17, partners-16)
nsubj(have-20, partners-16)
ccomp(let-13, adopt-17)
dobj(adopt-17, children-18)
ccomp(let-13, have-20)
conj_or(adopt-17, have-20)
dobj(have-20, custody-21)
prep_of(custody-21, children-23)
dobj(saying-29, what-26)
nsubj(saying-29, I-27)
aux(saying-29, am-28)
dep(saying-9, saying-29)
conj_but(let-13, saying-29)
root(ROOT-0, is-30)
complm(are-34, that-31)
det(children-33, those-32)
nsubj(are-34, children-33)
ccomp(is-30, are-34)
det(disadvantage-37, a-36)
prep_at(are-34, disadvantage-37)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR (IN if)
          (S
            (NP (EX there))
            (VP (VBZ 's)
              (ADVP (RB ever))
              (VP
                (ADVP (RB really))
                (VBN been)
                (NP (DT a) (JJ real) (NN study))
                (PP (IN about)
                  (NP (DT this)))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
mark(study-13, if-5)
expl(study-13, there-6)
auxpass(study-13, 's-7)
advmod(study-13, ever-8)
advmod(study-13, really-9)
cop(study-13, been-10)
det(study-13, a-11)
amod(study-13, real-12)
advcl(know-4, study-13)
prep_about(study-13, this-15)

(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (JJ SIMPLE) (JJ scientific) (NN test)))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB be)
        (VP (VBG getting)
          (NP
            (NP
              (QP (IN at) (JJS least) (DT a) (CD 100))
              (NNS samples))
            (PP (IN of)
              (NP (DT each) (NN group)))))))
    (. .)))

det(test-5, a-2)
amod(test-5, SIMPLE-3)
amod(test-5, scientific-4)
prep_as(getting-10, test-5)
nsubj(getting-10, I-7)
aux(getting-10, would-8)
aux(getting-10, be-9)
root(ROOT-0, getting-10)
quantmod(100-14, at-11)
mwe(at-11, least-12)
pobj(at-11, least-12)
quantmod(100-14, a-13)
num(samples-15, 100-14)
dobj(getting-10, samples-15)
det(group-18, each-17)
prep_of(samples-15, group-18)

(ROOT
  (NP
    (NP (CD 100))
    (PP (IN from)
      (NP
        (NP (JJ same) (NN gender) (NNS parents))
        (CC and)
        (NP (CD 100))))
    (PP (IN from)
      (NP (JJ heterosexual) (NNS parents)))
    (. .)))

root(ROOT-0, 100-1)
amod(parents-5, same-3)
nn(parents-5, gender-4)
prep_from(100-1, parents-5)
prep_from(100-1, 100-7)
conj_and(parents-5, 100-7)
amod(parents-10, heterosexual-9)
prep_from(100-1, parents-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would) (RB then)
      (VP (VB devide)
        (NP (DT these))
        (PP (IN into)
          (NP
            (NP (NNS groups))
            (PP (IN of)
              (NP (CD 10)))))))
    (. .)))

nsubj(devide-4, I-1)
aux(devide-4, would-2)
advmod(devide-4, then-3)
root(ROOT-0, devide-4)
dobj(devide-4, these-5)
prep_into(devide-4, groups-7)
prep_of(groups-7, 10-9)

(ROOT
  (S
    (NP (DT These) (NNS groups))
    (VP (MD would)
      (VP (VB be)
        (PP (IN of)
          (NP (DT the) (JJ equivelant) (JJ social) (NN standing)))))
    (. .)))

det(groups-2, These-1)
nsubj(be-4, groups-2)
aux(be-4, would-3)
root(ROOT-0, be-4)
det(standing-9, the-6)
amod(standing-9, equivelant-7)
amod(standing-9, social-8)
prep_of(be-4, standing-9)

(ROOT
  (S
    (NP
      (NP
        (NP
          (QP (CD ie) (CD 10))
          (JJ middle) (NN class) (NNS families))
        (PP (IN of)
          (NP (DT each) (NN group))))
      (, ,)
      (NP
        (NP (CD 10))
        (PP (IN of)
          (NP
            (NP (NN minority) (NNS groups))
            (PP (IN of)
              (NP (DT the) (JJ same) (NN standing))))))
      (, ,)
      (NP
        (NP (CD 10))
        (PP (IN of)
          (NP
            (NP (NNS groups))
            (PP (IN with)
              (NP (NNS siblings))))))
      (CC and)
      (NP
        (NP (CD 10))
        (PP
          (PP (IN with)
            (NP (DT no) (NNS siblings)))
          (CC and)
          (PP
            (ADVP (RB so))
            (IN on) (IN until)
            (NP
              (NP (JJ major) (NNS groups))
              (PP (IN of)
                (NP (NNS families))))))))
    (VP (VBP are)
      (VP (VBN represented)))
    (. .)))

number(10-2, ie-1)
num(families-5, 10-2)
amod(families-5, middle-3)
nn(families-5, class-4)
nsubjpass(represented-38, families-5)
det(group-8, each-7)
prep_of(families-5, group-8)
conj_and(families-5, 10-10)
nsubjpass(represented-38, 10-10)
nn(groups-13, minority-12)
prep_of(10-10, groups-13)
det(standing-17, the-15)
amod(standing-17, same-16)
prep_of(groups-13, standing-17)
conj_and(families-5, 10-19)
nsubjpass(represented-38, 10-19)
prep_of(10-19, groups-21)
prep_with(groups-21, siblings-23)
conj_and(families-5, 10-25)
conj_and(families-5, 10-25')
conj_and(10-25, 10-25')
nsubjpass(represented-38, 10-25)
det(siblings-28, no-27)
prep_with(10-25, siblings-28)
advmod(10-25, so-30)
prep(10-25, on-31)
amod(groups-34, major-33)
prep_until(10-25', groups-34)
prep_of(groups-34, families-36)
auxpass(represented-38, are-37)
root(ROOT-0, represented-38)

(ROOT
  (S
    (NP (DT This))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT a) (JJ simple) (NN experiment))
          (ADVP (RB otherwise)))
        (PP
          (NP (DT a) (NN lot)
            (QP (JJR more) (IN than) (CD 100)))
          (IN from)
          (NP
            (NP (DT each) (NN group))
            (SBAR
              (S
                (VP (MD would)
                  (VP (VB be)
                    (VP (VBN needed))))))))))
    (. .)))

nsubj(experiment-6, This-1)
aux(experiment-6, would-2)
cop(experiment-6, be-3)
det(experiment-6, a-4)
amod(experiment-6, simple-5)
root(ROOT-0, experiment-6)
advmod(experiment-6, otherwise-7)
det(lot-9, a-8)
npadvmod(experiment-6, lot-9)
mwe(than-11, more-10)
quantmod(100-12, than-11)
num(lot-9, 100-12)
det(group-15, each-14)
prep_from(experiment-6, group-15)
aux(needed-18, would-16)
auxpass(needed-18, be-17)
rcmod(group-15, needed-18)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP (MD would)
      (VP
        (VP (VB study)
          (NP (DT these) (NNS children)))
        (CC and)
        (VP (VB compare)
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VBP grow)
                (PRT (RP up))))))
        (, ,)
        (VP (VB go)
          (PP (TO to)
            (NP (NN school))))
        (, ,)
        (NP
          (NP (JJ middle) (NN school))
          (, ,)
          (NP (JJ high) (NN school))
          (, ,)
          (NP (NN college))
          (, ,)
          (NP (NNP University)))))
    (. .)))

advmod(study-4, Then-1)
nsubj(study-4, we-2)
nsubj(compare-8, we-2)
nsubj(go-14, we-2)
aux(study-4, would-3)
root(ROOT-0, study-4)
det(children-6, these-5)
dobj(study-4, children-6)
conj_and(study-4, compare-8)
mark(grow-11, as-9)
nsubj(grow-11, they-10)
advcl(compare-8, grow-11)
prt(grow-11, up-12)
conj_and(study-4, go-14)
prep_to(go-14, school-16)
amod(school-19, middle-18)
conj_and(study-4, school-19)
dobj(study-4, school-19)
amod(school-22, high-21)
appos(school-19, school-22)
appos(school-19, college-24)
appos(school-19, University-26)

