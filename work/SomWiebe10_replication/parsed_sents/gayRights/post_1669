(ROOT
  (S
    (VP (VB Stop)
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB sound)
              (ADJP (JJ smart))
              (SBAR (IN because)
                (S
                  (NP (PRP you))
                  (VP (VBP come)
                    (PRT (RP off))
                    (S
                      (VP (VBG looking)
                        (PP (IN like)
                          (NP (DT an) (NN idiot)))))))))))))
    (. .)))

root(ROOT-0, Stop-1)
dep(Stop-1, trying-2)
aux(sound-4, to-3)
xcomp(trying-2, sound-4)
acomp(sound-4, smart-5)
mark(come-8, because-6)
nsubj(come-8, you-7)
advcl(sound-4, come-8)
prt(come-8, off-9)
xcomp(come-8, looking-10)
det(idiot-13, an-12)
prep_like(looking-10, idiot-13)

(ROOT
  (S
    (NP (NNP Homosexuality))
    (VP
      (VP (VBZ is)
        (NP (JJ genetic)))
      (, ,)
      (CC and)
      (ADVP (RB therefore))
      (VP (VBD evolved)))
    (. .)))

nsubj(genetic-3, Homosexuality-1)
nsubj(evolved-7, Homosexuality-1)
cop(genetic-3, is-2)
root(ROOT-0, genetic-3)
advmod(genetic-3, therefore-6)
conj_and(genetic-3, therefore-6)
conj_and(genetic-3, evolved-7)

(ROOT
  (S
    (S
      (VP (VB Look)
        (PP (IN at)
          (NP (NNS animals)))))
    (, ,)
    (NP
      (NP (JJ many) (NNS species))
      (PP (IN of)
        (NP (JJ mammals) (NNS reptiles)
          (CC and)
          (NN fish))))
    (VP (VBP have)
      (NP
        (NP (NNS members))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP are)
              (ADJP (JJ homosexual)))))))
    (. .)))

ccomp(have-12, Look-1)
prep_at(Look-1, animals-3)
amod(species-6, many-5)
nsubj(have-12, species-6)
amod(reptiles-9, mammals-8)
prep_of(species-6, reptiles-9)
prep_of(species-6, fish-11)
conj_and(reptiles-9, fish-11)
root(ROOT-0, have-12)
dobj(have-12, members-13)
nsubj(homosexual-16, members-13)
cop(homosexual-16, are-15)
rcmod(members-13, homosexual-16)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (NN something))
      (VP (VB be)
        (VP (VBG going)
          (PP (IN against)
            (NP (NN nature)))
          (SBAR (IN if)
            (S
              (NP (PRP it))
              (VP (MD can)
                (VP (VB be)
                  (VP (VBN found)
                    (ADJP (RB so) (JJ prevalently))
                    (PP (IN in)
                      (NP (NN nature)))))))))))
    (. ?)))

advmod(going-5, How-1)
aux(going-5, can-2)
nsubj(going-5, something-3)
aux(going-5, be-4)
root(ROOT-0, going-5)
prep_against(going-5, nature-7)
mark(found-12, if-8)
nsubjpass(found-12, it-9)
aux(found-12, can-10)
auxpass(found-12, be-11)
advcl(going-5, found-12)
advmod(prevalently-14, so-13)
acomp(found-12, prevalently-14)
prep_in(found-12, nature-16)

