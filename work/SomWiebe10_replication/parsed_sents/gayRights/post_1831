(ROOT
  (S
    (S
      (ADVP (RB Well))
      (VP (RB not) (VBG bringing)
        (NP (NN religion))
        (PP (IN into)
          (NP
            (NP (DT the) (NN argument))
            (VP (VBZ lets))))))
    (VP (VBP think)
      (ADVP (RB logically))
      (S
        (VP (VBG shall)
          (NP (PRP we)))))
    (. .)))

advmod(bringing-3, Well-1)
neg(bringing-3, not-2)
csubj(think-9, bringing-3)
dobj(bringing-3, religion-4)
det(argument-7, the-6)
prep_into(bringing-3, argument-7)
dep(argument-7, lets-8)
root(ROOT-0, think-9)
advmod(think-9, logically-10)
xcomp(think-9, shall-11)
dobj(shall-11, we-12)

(ROOT
  (SQ
    (VP (VB Consider)
      (NP
        (NP (DT this))
        (, ,)
        (VP (VB imagine)
          (NP
            (NP (DT every) (NN couple))
            (PP (IN in)
              (NP (DT the) (NN world))))
          (PP (IN at)
            (NP
              (NP (DT any) (NN generation))
              (PP (IN in)
                (NP
                  (NP (NN time))
                  (VP (VBN decided)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ homosexual)))))))))))
        (, ,)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (MD would)
              (VP (VB happen)))))))
    (. ?)))

root(ROOT-0, Consider-1)
dobj(Consider-1, this-2)
dep(this-2, imagine-4)
det(couple-6, every-5)
dobj(imagine-4, couple-6)
det(world-9, the-8)
prep_in(couple-6, world-9)
det(generation-12, any-11)
prep_at(imagine-4, generation-12)
prep_in(generation-12, time-14)
xsubj(homosexual-18, time-14)
partmod(time-14, decided-15)
aux(homosexual-18, to-16)
cop(homosexual-18, be-17)
xcomp(decided-15, homosexual-18)
nsubj(happen-22, what-20)
aux(happen-22, would-21)
rcmod(this-2, happen-22)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD would)
        (VP (VB be)
          (NP (DT no) (JJ next) (NN generation))
          (PP (IN because)
            (NP (NNS homosexuals) (NN cant) (NNS reproduce))))))
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP they))
          (VP (MD can))))
      (NP (PRP it))
      (VP (MD would)
        (VP (VB be)
          (VP
            (ADVP (RB unnatural))
            (JJ granted)
            (NP (FW i) (FW am))
            (SBAR
              (S
                (NP (NNP Christian)
                  (CC but)
                  (NNP i))
                (ADVP (RB also))
                (VP (VBP believe)
                  (PP (IN in)
                    (NP (JJ common) (NN logic))))))))))
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD cant)
        (ADVP (RB very) (RB well))
        (VP
          (VP (VB be)
            (ADJP (JJ fruitful)))
          (CC and)
          (VP (VB multiply)
            (SBAR (IN if)
              (S
                (NP (PRP we))
                (VP (VBD were)
                  (NP
                    (NP (DT all))
                    (PP (IN in)
                      (NP (DT a) (JJ same) (NN sex) (NN marriage)))))))))))
    (. .)))

expl(generation-6, There-1)
aux(generation-6, would-2)
cop(generation-6, be-3)
det(generation-6, no-4)
amod(generation-6, next-5)
root(ROOT-0, generation-6)
nn(reproduce-10, homosexuals-8)
nn(reproduce-10, cant-9)
prep_because(generation-6, reproduce-10)
mark(can-14, if-12)
nsubj(can-14, they-13)
advcl(granted-19, can-14)
nsubj(granted-19, it-15)
aux(granted-19, would-16)
aux(granted-19, be-17)
advmod(granted-19, unnatural-18)
conj_and(generation-6, granted-19)
nn(am-21, i-20)
dobj(granted-19, am-21)
nsubj(believe-26, Christian-22)
conj_but(Christian-22, i-24)
nsubj(believe-26, i-24)
advmod(believe-26, also-25)
dep(granted-19, believe-26)
amod(logic-29, common-28)
prep_in(believe-26, logic-29)
nsubj(cant-32, we-31)
conj_but(generation-6, cant-32)
advmod(well-34, very-33)
advmod(cant-32, well-34)
cop(fruitful-36, be-35)
dep(cant-32, fruitful-36)
dep(cant-32, multiply-38)
conj_and(fruitful-36, multiply-38)
mark(all-42, if-39)
nsubj(all-42, we-40)
cop(all-42, were-41)
advcl(multiply-38, all-42)
det(marriage-47, a-44)
amod(marriage-47, same-45)
nn(marriage-47, sex-46)
prep_in(all-42, marriage-47)

