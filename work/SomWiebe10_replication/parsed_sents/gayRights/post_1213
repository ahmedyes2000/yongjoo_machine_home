(ROOT
  (S
    (S
      (NP
        (NP (`` ``)
          (ADJP (VBN Communism))
          (, ,) (JJ Fascism) (, ,)
          (ADJP
            (ADJP (JJ Racism))
            (PRN (-LRB- -LRB-)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (ADJP (RB far) (JJR newer))
                    (SBAR (IN than)
                      (S
                        (NP (PRP we))
                        (VP (VBP are)
                          (VP (VBN taught))))))))
              (-RRB- -RRB-)))
          ('' '') (NN Communism))
        (, ,)
        (PP (IN in)
          (NP (DT a) (NN sense)))
        (, ,))
      (VP (VBZ has)
        (ADVP (RB always))
        (VP (VBN existed))))
    (: ...)
    (S
      (NP (PRP it))
      (ADVP (RB just))
      (VP (VBD was)
        (ADVP (RB never))
        (VP
          (ADVP (RB formally))
          (VBN codified))))
    (. .)))

amod(Communism-18, Communism-2)
amod(Communism-18, Fascism-4)
amod(Communism-18, Racism-6)
nsubj(newer-11, which-8)
cop(newer-11, is-9)
advmod(newer-11, far-10)
dep(Racism-6, newer-11)
mark(taught-15, than-12)
nsubjpass(taught-15, we-13)
auxpass(taught-15, are-14)
advcl(newer-11, taught-15)
nsubj(existed-26, Communism-18)
det(sense-22, a-21)
prep_in(Communism-18, sense-22)
aux(existed-26, has-24)
advmod(existed-26, always-25)
root(ROOT-0, existed-26)
nsubjpass(codified-33, it-28)
advmod(codified-33, just-29)
auxpass(codified-33, was-30)
neg(codified-33, never-31)
advmod(codified-33, formally-32)
parataxis(existed-26, codified-33)

(ROOT
  (S
    (PP (IN As)
      (NP (DT an) (JJ economic) (JJ \/) (JJ political) (NN system)))
    (NP (PRP it))
    (VP (MD can)
      (VP (VB work)
        (PP (IN on)
          (NP
            (NP (DT a) (JJ small) (NN scale))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (JJ single) (NNS tribes))
                (CC or)
                (NP (NN family) (NN group)))
              (-RRB- -RRB-))))
        (, ,)
        (SBAR (IN though)
          (S
            (NP (PRP it))
            (VP (VBZ falls)
              (PRT (RP apart))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (VP (VBN projected)
                    (PP (IN over)
                      (NP (DT a) (JJR larger) (NN group)))))))))))
    (. .)))

det(system-6, an-2)
amod(system-6, economic-3)
amod(system-6, \/-4)
amod(system-6, political-5)
prep_as(work-9, system-6)
nsubj(work-9, it-7)
aux(work-9, can-8)
root(ROOT-0, work-9)
det(scale-13, a-11)
amod(scale-13, small-12)
prep_on(work-9, scale-13)
amod(tribes-16, single-15)
dep(scale-13, tribes-16)
nn(group-19, family-18)
dep(scale-13, group-19)
conj_or(tribes-16, group-19)
mark(falls-24, though-22)
nsubj(falls-24, it-23)
advcl(work-9, falls-24)
prt(falls-24, apart-25)
advmod(projected-27, when-26)
advcl(falls-24, projected-27)
det(group-31, a-29)
amod(group-31, larger-30)
prep_over(projected-27, group-31)

(ROOT
  (S
    (NP (NNP Fascism))
    (VP (VBZ is)
      (ADVP (RB just))
      (NP
        (NP (NN authoritarianism))
        (VP (VBN repackaged))))
    (. .)))

nsubj(authoritarianism-4, Fascism-1)
cop(authoritarianism-4, is-2)
advmod(authoritarianism-4, just-3)
root(ROOT-0, authoritarianism-4)
partmod(authoritarianism-4, repackaged-5)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (NP
          (NP (JJ many) (JJ brutal) (NNS tyrants))
          (PP (IN before)
            (NP (NNP Fascism))))
        (VP (VBN existed))
        (PRN (-LRB- -LRB-)
          (CC and)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (ADJP (JJ sure)
                (SBAR (IN that)
                  (S
                    (NP (EX there))
                    (VP (MD will)
                      (VP (VB be)
                        (ADJP (RB many) (JJR more)))))))))
          (-RRB- -RRB-))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
amod(tyrants-5, many-3)
amod(tyrants-5, brutal-4)
nsubj(were-2, tyrants-5)
prep_before(tyrants-5, Fascism-7)
partmod(tyrants-5, existed-8)
dep(sure-13, and-10)
nsubj(sure-13, I-11)
cop(sure-13, 'm-12)
dep(tyrants-5, sure-13)
parataxis(existed-8, sure-13)
complm(more-19, that-14)
expl(more-19, there-15)
aux(more-19, will-16)
cop(more-19, be-17)
advmod(more-19, many-18)
ccomp(sure-13, more-19)

(ROOT
  (S
    (NP (NNP Racism))
    (VP (VBZ has)
      (ADVP (RB always))
      (VP (VBN been)
        (NP
          (NP (NN part))
          (PP (IN of)
            (NP (DT the) (JJ human) (NN condition))))))
    (: ...)))

nsubj(part-5, Racism-1)
aux(part-5, has-2)
advmod(part-5, always-3)
cop(part-5, been-4)
root(ROOT-0, part-5)
det(condition-9, the-7)
amod(condition-9, human-8)
prep_of(part-5, condition-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT the) (NN idea))
      (SBAR (IN that)
        (S
          (NP (NNS ones))
          (VP (VBP own)
            (SBAR
              (S
                (NP
                  (NP (JJ social) (NN group))
                  (PRN (-LRB- -LRB-)
                    (PP (JJ such) (IN as)
                      (NP
                        (NP (DT a) (NN tribe))
                        (CC or)
                        (NP (NN nation))))
                    (-RRB- -RRB-)))
                (VP (VBZ is)
                  (ADJP (JJ superior)
                    (PP (TO to)
                      (NP (DT all) (NNS others)))))))))))
    (. .)))

nsubj(idea-4, It-1)
cop(idea-4, is-2)
det(idea-4, the-3)
root(ROOT-0, idea-4)
complm(own-7, that-5)
nsubj(own-7, ones-6)
ccomp(idea-4, own-7)
amod(group-9, social-8)
nsubj(superior-19, group-9)
det(tribe-14, a-13)
prep_such_as(group-9, tribe-14)
prep_such_as(group-9, nation-16)
conj_or(tribe-14, nation-16)
cop(superior-19, is-18)
ccomp(own-7, superior-19)
det(others-22, all-21)
prep_to(superior-19, others-22)

(ROOT
  (S ('' '')
    (S
      (INTJ (UH Yes))
      (NP (PRP we))
      (VP (VBP make)
        (NP (NN material) (NN progress))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ does) (RB not)
        (VP (VB mean)
          (S
            (NP (PRP we))
            (VP
              (ADVP (RB always))
              (VB make)
              (NP (JJ moral) (NN progress)))))))
    (. .)))

dep(make-4, Yes-2)
nsubj(make-4, we-3)
root(ROOT-0, make-4)
nn(progress-6, material-5)
dobj(make-4, progress-6)
nsubj(mean-12, that-9)
aux(mean-12, does-10)
neg(mean-12, not-11)
conj_but(make-4, mean-12)
nsubj(make-15, we-13)
advmod(make-15, always-14)
ccomp(mean-12, make-15)
amod(progress-17, moral-16)
dobj(make-15, progress-17)

(ROOT
  (S ('' '')
    (NP (PRP We))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBG making)
          (NP (JJ great) (NNS strides)))))
    (. .)))

nsubj(making-5, We-2)
aux(making-5, have-3)
aux(making-5, been-4)
root(ROOT-0, making-5)
amod(strides-7, great-6)
dobj(making-5, strides-7)

(ROOT
  (S
    (S
      (ADVP (RB Slavery))
      (, ,)
      (PP (IN as)
        (NP (DT a) (JJ global) (NN institution)))
      (, ,)
      (VP (VBZ has)
        (VP (VBN been)
          (VP
            (ADVP (DT all)
              (CC but))
            (VBN eliminated)))))
    (: ...)
    (CC and)
    (S
      (NP (PRP it))
      (ADVP (RB no) (RB longer))
      (VP (VBZ exists)
        (PP (IN as)
          (NP
            (NP (DT a) (JJ legal) (NN entity))
            (PP (IN in)
              (NP
                (NP (RB much))
                (PP (IN of)
                  (NP (DT the) (NN world)))))))))
    (. .)))

advmod(eliminated-12, Slavery-1)
det(institution-6, a-4)
amod(institution-6, global-5)
prep_as(eliminated-12, institution-6)
aux(eliminated-12, has-8)
auxpass(eliminated-12, been-9)
dep(but-11, all-10)
advmod(eliminated-12, but-11)
root(ROOT-0, eliminated-12)
nsubj(exists-18, it-15)
advmod(longer-17, no-16)
advmod(exists-18, longer-17)
conj_and(eliminated-12, exists-18)
det(entity-22, a-20)
amod(entity-22, legal-21)
prep_as(exists-18, entity-22)
prep(entity-22, in-23)
pobj(in-23, much-24)
det(world-27, the-26)
prep_of(much-24, world-27)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS rights))
      (PP (IN of)
        (NP (NNS women))))
    (VP (VBP have)
      (VP (VBN been)
        (S
          (VP (VBG expanding) (: ...)
            (PP (TO to)
              (NP
                (NP (DT the) (NN point))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (PP (IN in)
                      (NP (RB nearly) (DT every) (NN country)))
                    (NP (PRP they))
                    (VP (VBP have)
                      (NP (DT the) (NN right)
                        (S
                          (VP (TO to)
                            (VP (VB own)
                              (NP (NN property)
                                (CC and)
                                (NN vote)))))))))))))))
    (. .)))

det(rights-2, The-1)
nsubj(been-6, rights-2)
prep_of(rights-2, women-4)
aux(been-6, have-5)
root(ROOT-0, been-6)
xcomp(been-6, expanding-7)
det(point-11, the-10)
prep_to(expanding-7, point-11)
advmod(have-18, where-12)
advmod(country-16, nearly-14)
det(country-16, every-15)
prep_in(have-18, country-16)
nsubj(have-18, they-17)
rcmod(point-11, have-18)
det(right-20, the-19)
dobj(have-18, right-20)
aux(own-22, to-21)
infmod(right-20, own-22)
dobj(own-22, property-23)
dobj(own-22, vote-25)
conj_and(property-23, vote-25)

