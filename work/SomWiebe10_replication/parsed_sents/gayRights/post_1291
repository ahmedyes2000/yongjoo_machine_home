(ROOT
  (S
    (NP (NNS Looks))
    (VP (VBP like)
      (SBAR
        (S
          (NP (PRP you))
          (ADVP (RB blindly))
          (VP (VBD took)
            (S
              (NP (DT those))
              (VP (TO to)
                (VP (VB garner)
                  (NP (NN support)))))))))
    (. .)))

nsubj(like-2, Looks-1)
root(ROOT-0, like-2)
nsubj(took-5, you-3)
advmod(took-5, blindly-4)
ccomp(like-2, took-5)
nsubj(garner-8, those-6)
aux(garner-8, to-7)
xcomp(took-5, garner-8)
dobj(garner-8, support-9)

(ROOT
  (S
    (ADVP (RB Well))
    (NP (PRP I))
    (VP (VBP guess)
      (SBAR
        (S
          (NP (NNS looks))
          (VP (MD can)
            (VP (VB be)
              (ADJP (JJ deceiving)))))))
    (. .)))

advmod(guess-3, Well-1)
nsubj(guess-3, I-2)
root(ROOT-0, guess-3)
nsubj(deceiving-7, looks-4)
aux(deceiving-7, can-5)
cop(deceiving-7, be-6)
ccomp(guess-3, deceiving-7)

(ROOT
  (S
    (S
      (FRAG (IN If)
        (NP (PRP he)))
      (NP (PRP himself))
      (VP
        (VP (VBZ marries)
          (NP (PRP her)))
        (CC and)
        (VP
          (ADVP (RB then))
          (VBZ takes)
          (NP (DT another) (NN wife)))))
    (, ,)
    (NP (PRP he))
    (VP (MD may) (RB not)
      (VP
        (VP (VB reduce)
          (NP (PRP$ her) (NN food)
            (CC or)
            (NN clothing)))
        (CC or)
        (VP (VB fail)
          (S
            (VP (TO to)
              (VP (VB sleep)
                (PP (IN with)
                  (NP (PRP her)))
                (PP (IN as)
                  (NP (PRP$ his) (NN wife)))))))))
    (. .)))

dep(marries-4, If-1)
dep(If-1, he-2)
nsubj(marries-4, himself-3)
nsubj(takes-8, himself-3)
ccomp(reduce-15, marries-4)
dobj(marries-4, her-5)
advmod(takes-8, then-7)
conj_and(marries-4, takes-8)
ccomp(reduce-15, takes-8)
det(wife-10, another-9)
dobj(takes-8, wife-10)
nsubj(reduce-15, he-12)
nsubj(fail-21, he-12)
xsubj(sleep-23, he-12)
aux(reduce-15, may-13)
neg(reduce-15, not-14)
root(ROOT-0, reduce-15)
poss(food-17, her-16)
dobj(reduce-15, food-17)
dobj(reduce-15, clothing-19)
conj_or(food-17, clothing-19)
conj_or(reduce-15, fail-21)
aux(sleep-23, to-22)
xcomp(fail-21, sleep-23)
prep_with(sleep-23, her-25)
poss(wife-28, his-27)
prep_as(sleep-23, wife-28)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP he))
        (VP (VBZ fails)
          (PP (IN in)
            (NP
              (NP (DT any))
              (PP (IN of)
                (NP (DT these) (CD three) (NNS ways))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD may)
      (VP (VB leave)
        (PP (IN as)
          (NP (DT a) (JJ free) (NN woman)))
        (PP (IN without)
          (S
            (VP (VBG making)
              (NP (DT any) (NN payment)))))))
    (. .)))

mark(fails-3, If-1)
nsubj(fails-3, he-2)
advcl(leave-13, fails-3)
prep_in(fails-3, any-5)
det(ways-9, these-7)
num(ways-9, three-8)
prep_of(any-5, ways-9)
nsubj(leave-13, she-11)
aux(leave-13, may-12)
root(ROOT-0, leave-13)
det(woman-17, a-15)
amod(woman-17, free-16)
prep_as(leave-13, woman-17)
prepc_without(leave-13, making-19)
det(payment-21, any-20)
dobj(making-19, payment-21)

(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (NNP Exodus) (NNP 21:7) (NNP -11) (NNP NLT))
    (-RRB- -RRB-)
    (VP
      (VP (VBZ Is)
        (NP (DT this) (NN enough)))
      (, ,)
      (CC or)
      (VP
        (VP (MD would))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP like)
              (S
                (NP (PRP me))
                (VP (TO to)
                  (VP (VB keep)
                    (S
                      (VP (VBG going)))))))))))
    (. .)))

nn(NLT-6, Exodus-3)
nn(NLT-6, 21:7-4)
nn(NLT-6, -11-5)
nsubj(enough-10, NLT-6)
cop(enough-10, Is-8)
det(enough-10, this-9)
root(ROOT-0, enough-10)
conj_or(enough-10, would-13)
nsubj(like-15, you-14)
ccomp(would-13, like-15)
nsubj(keep-18, me-16)
aux(keep-18, to-17)
xcomp(like-15, keep-18)
xcomp(keep-18, going-19)

(ROOT
  (S
    (VP (VB Do) (RB not)
      (VP (VB forget)
        (NP (NNP Jake))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP go)
              (PP (TO to)
                (NP (NN church)))
              (NP (DT every) (NN week))
              (, ,)
              (SBAR (IN so)
                (S
                  (NP (PRP I))
                  (VP (VBP know)
                    (NP (RB plenty))
                    (PP (IN about)
                      (NP (NNP Christianity)))))))))))
    (. .)))

aux(forget-3, Do-1)
neg(forget-3, not-2)
root(ROOT-0, forget-3)
dobj(forget-3, Jake-4)
complm(go-7, that-5)
nsubj(go-7, I-6)
ccomp(forget-3, go-7)
prep_to(go-7, church-9)
det(week-11, every-10)
tmod(go-7, week-11)
mark(know-15, so-13)
nsubj(know-15, I-14)
advcl(go-7, know-15)
dobj(know-15, plenty-16)
prep_about(know-15, Christianity-18)

(ROOT
  (FRAG
    (ADVP (RB As) (RB far) (RB as))
    (NP
      (NP (NN racism))
      (PP (IN in)
        (NP
          (NP (DT the) (NNP LDS) (NN church))
          (, ,)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (RB about) (PRP we))
              (ADVP (RB just))
              (VP (VBP look)
                (PP (TO to)
                  (NP (NNP Brigham) (NNP Young)))))))))
    (. ?)))

advmod(as-3, As-1)
advmod(as-3, far-2)
dep(racism-4, as-3)
root(ROOT-0, racism-4)
det(church-8, the-6)
nn(church-8, LDS-7)
prep_in(racism-4, church-8)
advmod(look-14, how-10)
advmod(we-12, about-11)
nsubj(look-14, we-12)
advmod(look-14, just-13)
dep(church-8, look-14)
nn(Young-17, Brigham-16)
prep_to(look-14, Young-17)

(ROOT
  (S (`` ``)
    (NP (NNP Shall) (NNP I))
    (VP (VBP tell)
      (S
        (NP (PRP you))
        (NP
          (NP (DT the) (NN law))
          (PP (IN of)
            (NP
              (NP (NNP God))
              (PP (IN in)
                (NP (NN regard)))))))
      (PP (TO to)
        (NP (DT the) (NNP African) (NNP Race))))
    (. ?)))

nn(I-3, Shall-2)
nsubj(tell-4, I-3)
root(ROOT-0, tell-4)
nsubj(law-7, you-5)
det(law-7, the-6)
xcomp(tell-4, law-7)
prep_of(law-7, God-9)
prep_in(God-9, regard-11)
det(Race-15, the-13)
nn(Race-15, African-14)
prep_to(tell-4, Race-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NNP White) (NN man))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ belongs)
                (PP (TO to)
                  (NP (DT the) (VBN chosen) (NN seed)))))))
        (VP (VBZ mixes)
          (NP (PRP$ his) (NN blood))
          (PP (IN with)
            (NP
              (NP (DT the) (NN seed))
              (PP (IN of)
                (NP (NNP Cain))))))))
    (, ,)
    (NP
      (NP (DT the) (NN penalty))
      (, ,)
      (PP (IN under)
        (NP
          (NP (DT the) (NN law))
          (PP (IN of)
            (NP (NNP God)))))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (NN death))
        (PP (IN on)
          (NP (DT the) (NN spot)))))
    (. .)))

mark(mixes-11, If-1)
det(man-4, the-2)
nn(man-4, White-3)
nsubj(belongs-6, man-4)
nsubj(mixes-11, man-4)
rcmod(man-4, belongs-6)
det(seed-10, the-8)
amod(seed-10, chosen-9)
prep_to(belongs-6, seed-10)
advcl(death-30, mixes-11)
poss(blood-13, his-12)
dobj(mixes-11, blood-13)
det(seed-16, the-15)
prep_with(mixes-11, seed-16)
prep_of(seed-16, Cain-18)
det(penalty-21, the-20)
nsubj(death-30, penalty-21)
det(law-25, the-24)
prep_under(penalty-21, law-25)
prep_of(law-25, God-27)
cop(death-30, is-29)
root(ROOT-0, death-30)
det(spot-33, the-32)
prep_on(death-30, spot-33)

(ROOT
  (S
    (NP (DT This))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB be)
        (ADVP (RB so))))
    (. .)))

nsubj(be-4, This-1)
aux(be-4, will-2)
advmod(be-4, always-3)
root(ROOT-0, be-4)
advmod(be-4, so-5)

(ROOT
  (S
    (NP (NNP Cain))
    (VP (VBZ slew)
      (NP (PRP$ his) (NN brother)))
    (. .)))

nsubj(slew-2, Cain-1)
root(ROOT-0, slew-2)
poss(brother-4, his-3)
dobj(slew-2, brother-4)

(ROOT
  (S (CC and)
    (NP (DT the) (NNP Lord))
    (VP (VBD put)
      (NP (DT a) (NN mark))
      (PP (IN upon)
        (NP
          (NP (PRP him))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is)
                (NP
                  (NP (DT the) (JJ flat) (NN nose))
                  (CC and)
                  (NP (JJ black) (NN skin)))))))))
    (. .)))

cc(put-4, and-1)
det(Lord-3, the-2)
nsubj(put-4, Lord-3)
root(ROOT-0, put-4)
det(mark-6, a-5)
dobj(put-4, mark-6)
prep_upon(put-4, him-8)
nsubj(nose-14, him-8)
cop(nose-14, is-11)
det(nose-14, the-12)
amod(nose-14, flat-13)
rcmod(him-8, nose-14)
amod(skin-17, black-16)
rcmod(him-8, skin-17)
conj_and(nose-14, skin-17)

(ROOT
  (S
    (S
      (VP (VB Shellfish)))
    (: :) (`` ``)
    (S (CC But)
      (PP
        (PP
          (ADVP (DT all))
          (IN in)
          (NP (DT the) (NNS seas)))
        (CC or)
        (PP (IN in)
          (NP
            (NP
              (NP (DT the) (NNS rivers))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP do) (RB not)
                    (VP (VB have)
                      (NP (NNS fins)
                        (CC and)
                        (NNS scales)))))))
            (, ,)
            (NP
              (NP (PDT all) (DT that) (NN move))
              (PP (IN in)
                (NP (DT the) (NN water))))
            (CC or)
            (NP
              (NP (DT any) (VBG living) (NN thing))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (PP (IN in)
                      (NP (DT the) (NN water))))))))))
      (, ,)
      (NP (PRP they))
      (VP (VBP are)
        (NP
          (NP (DT an) (NN abomination))
          (PP (TO to)
            (NP (PRP you))))))
    (. .)))

root(ROOT-0, Shellfish-1)
cc(abomination-40, But-4)
advmod(abomination-40, all-5)
det(seas-8, the-7)
prep_in(abomination-40, seas-8)
det(rivers-12, the-11)
conj_or(seas-8, rivers-12)
nsubj(have-16, rivers-12)
prep_in(abomination-40, rivers-12)
aux(have-16, do-14)
neg(have-16, not-15)
rcmod(rivers-12, have-16)
dobj(have-16, fins-17)
dobj(have-16, scales-19)
conj_and(fins-17, scales-19)
predet(move-23, all-21)
det(move-23, that-22)
conj_or(seas-8, move-23)
conj_or(rivers-12, move-23)
nsubj(have-16, move-23)
det(water-26, the-25)
prep_in(move-23, water-26)
det(thing-30, any-28)
amod(thing-30, living-29)
conj_or(seas-8, thing-30)
conj_or(rivers-12, thing-30)
nsubj(is-32, thing-30)
rcmod(thing-30, is-32)
det(water-35, the-34)
prep_in(is-32, water-35)
nsubj(abomination-40, they-37)
cop(abomination-40, are-38)
det(abomination-40, an-39)
ccomp(Shellfish-1, abomination-40)
prep_to(abomination-40, you-42)

(ROOT
  (S
    (NP (PRP You))
    (VP
      (VP (VBP see)
        (NP
          (NP (DT some) (NNS classes))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ human) (NN family))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (ADJP (JJ black) (, ,) (JJ uncouth) (, ,) (JJ uncomely) (, ,) (JJ disagreeable)
                      (CC and)
                      (JJ low))))))))
        (PP (IN in)
          (NP (PRP$ their) (NNS habits)))
        (, ,)
        (ADVP (RB wild)))
      (, ,)
      (CC and)
      (ADVP (RB seemingly))
      (VP (VBN deprived)
        (PP (IN of)
          (NP
            (NP (RB nearly) (PDT all) (DT the) (NN blessings))
            (PP (IN of)
              (NP
                (NP (DT the) (NN intelligence))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (ADVP (RB generally))
                      (VP (VBN bestowed)
                        (PP (IN upon)
                          (NP (NN mankind)))))))))))))
    (. .)))

nsubj(see-2, You-1)
nsubj(deprived-28, You-1)
root(ROOT-0, see-2)
det(classes-4, some-3)
dobj(see-2, classes-4)
det(family-8, the-6)
amod(family-8, human-7)
prep_of(classes-4, family-8)
nsubj(black-11, family-8)
nsubj(uncouth-13, family-8)
nsubj(uncomely-15, family-8)
nsubj(disagreeable-17, family-8)
nsubj(low-19, family-8)
cop(black-11, are-10)
rcmod(family-8, black-11)
rcmod(family-8, uncouth-13)
conj_and(black-11, uncouth-13)
rcmod(family-8, uncomely-15)
conj_and(black-11, uncomely-15)
rcmod(family-8, disagreeable-17)
conj_and(black-11, disagreeable-17)
rcmod(family-8, low-19)
conj_and(black-11, low-19)
poss(habits-22, their-21)
prep_in(see-2, habits-22)
advmod(see-2, wild-24)
advmod(see-2, seemingly-27)
conj_and(see-2, seemingly-27)
conj_and(see-2, deprived-28)
advmod(blessings-33, nearly-30)
predet(blessings-33, all-31)
det(blessings-33, the-32)
prep_of(deprived-28, blessings-33)
det(intelligence-36, the-35)
prep_of(blessings-33, intelligence-36)
nsubjpass(bestowed-40, intelligence-36)
auxpass(bestowed-40, is-38)
advmod(bestowed-40, generally-39)
rcmod(intelligence-36, bestowed-40)
prep_upon(bestowed-40, mankind-42)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ first) (NN man))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD committed)
            (NP
              (NP (DT the) (JJ odious) (NN crime))
              (PP (IN of)
                (S
                  (VP (VBG killing)
                    (NP
                      (NP (CD one))
                      (PP (IN of)
                        (NP (PRP$ his) (NNS brethren))))))))))))
    (VP (MD will)
      (VP (VB be)
        (VP (VBN cursed)
          (NP
            (NP (DT the) (JJS longest))
            (PP (IN of)
              (NP
                (NP (DT any) (NN one))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNS children))
                    (PP (IN of)
                      (NP (NNP Adam)))))))))))
    (. .)))

det(man-3, The-1)
amod(man-3, first-2)
nsubj(committed-5, man-3)
nsubjpass(cursed-17, man-3)
rcmod(man-3, committed-5)
det(crime-8, the-6)
amod(crime-8, odious-7)
dobj(committed-5, crime-8)
prepc_of(crime-8, killing-10)
dobj(killing-10, one-11)
poss(brethren-14, his-13)
prep_of(one-11, brethren-14)
aux(cursed-17, will-15)
auxpass(cursed-17, be-16)
root(ROOT-0, cursed-17)
det(longest-19, the-18)
dobj(cursed-17, longest-19)
det(one-22, any-21)
prep_of(longest-19, one-22)
det(children-25, the-24)
prep_of(one-22, children-25)
prep_of(children-25, Adam-27)

(ROOT
  (S
    (NP (NNP Cain))
    (VP (VBZ slew)
      (NP (PRP$ his) (NN brother)))
    (. .)))

nsubj(slew-2, Cain-1)
root(ROOT-0, slew-2)
poss(brother-4, his-3)
dobj(slew-2, brother-4)

(ROOT
  (S
    (S
      (NP (NNP Cain))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN been)
            (VP (VBN killed))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN put)
            (NP (DT a) (NN termination))
            (PP (TO to)
              (NP
                (NP (DT that) (NN line))
                (PP (IN of)
                  (NP (JJ human) (NNS beings)))))))))
    (. .)))

nsubjpass(killed-5, Cain-1)
aux(killed-5, might-2)
aux(killed-5, have-3)
auxpass(killed-5, been-4)
root(ROOT-0, killed-5)
nsubj(put-11, that-8)
aux(put-11, would-9)
aux(put-11, have-10)
conj_and(killed-5, put-11)
det(termination-13, a-12)
dobj(put-11, termination-13)
det(line-16, that-15)
prep_to(put-11, line-16)
amod(beings-19, human-18)
prep_of(line-16, beings-19)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBD was) (RB not)
        (S
          (VP (TO to)
            (VP (VB be))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNP Lord))
      (VP (VBD put)
        (NP (DT a) (NN mark))
        (PP (IN upon)
          (NP
            (NP (PRP him))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (NP
                    (NP (DT the) (JJ flat) (NN nose))
                    (CC and)
                    (NP (JJ black) (NN skin))))))))))
    (. .)))

nsubj(was-2, This-1)
xsubj(be-5, This-1)
root(ROOT-0, was-2)
neg(was-2, not-3)
aux(be-5, to-4)
xcomp(was-2, be-5)
det(Lord-9, the-8)
nsubj(put-10, Lord-9)
conj_and(was-2, put-10)
det(mark-12, a-11)
dobj(put-10, mark-12)
prep_upon(put-10, him-14)
nsubj(nose-20, him-14)
cop(nose-20, is-17)
det(nose-20, the-18)
amod(nose-20, flat-19)
rcmod(him-14, nose-20)
amod(skin-23, black-22)
rcmod(him-14, skin-23)
conj_and(nose-20, skin-23)

(ROOT
  (S
    (NP (NNP Trace))
    (VP (VBP mankind)
      (ADVP (RB down)
        (PP (TO to)
          (SBAR (IN after)
            (S
              (S
                (NP
                  (NP (DT the) (NN flood))
                  (, ,)
                  (CC and)
                  (ADVP (RB then))
                  (NP (DT another) (NN curse)))
                (VP (VBZ is)
                  (VP (VBN pronounced)
                    (PP (IN upon)
                      (NP
                        (NP (DT the) (JJ same) (NN race))
                        (: --)
                        (SBAR (IN that)
                          (S
                            (NP (PRP they))
                            (VP (MD should)
                              (VP (VB be)
                                (NP
                                  (NP (DT the) (`` ``) (NN servant))
                                  (PP (IN of)
                                    (NP (NNS servants))))))))
                        (: ;))))))
              ('' '')
              (CC and)
              (S
                (NP (PRP they))
                (VP (MD will)
                  (VP (VB be))))))))
      (, ,)
      (SBAR (IN until)
        (S
          (NP (DT that) (NN curse))
          (VP (VBZ is)
            (VP (VBN removed))))))
    (. .)))

nsubj(mankind-2, Trace-1)
root(ROOT-0, mankind-2)
advmod(mankind-2, down-3)
mark(pronounced-14, after-5)
det(flood-7, the-6)
nsubjpass(pronounced-14, flood-7)
advmod(flood-7, then-10)
conj_and(flood-7, then-10)
nsubjpass(pronounced-14, then-10)
det(curse-12, another-11)
conj_and(flood-7, curse-12)
nsubjpass(pronounced-14, curse-12)
auxpass(pronounced-14, is-13)
prepc_to(down-3, pronounced-14)
det(race-18, the-16)
amod(race-18, same-17)
prep_upon(pronounced-14, race-18)
dep(servant-26, that-20)
nsubj(servant-26, they-21)
aux(servant-26, should-22)
cop(servant-26, be-23)
det(servant-26, the-24)
dep(race-18, servant-26)
prep_of(servant-26, servants-28)
nsubj(be-34, they-32)
aux(be-34, will-33)
prepc_to(down-3, be-34)
conj_and(pronounced-14, be-34)
mark(removed-40, until-36)
det(curse-38, that-37)
nsubjpass(removed-40, curse-38)
auxpass(removed-40, is-39)
advcl(mankind-2, removed-40)

(ROOT
  (S ('' '')
    (S
      (NP (NNPS Mormons))
      (VP (VBD used)
        (NP (DT this))))
    (, ,)
    (CC and)
    (S
      (NP (JJ other) (JJ racist) (NNS statements))
      (VP (VBD made)
        (PP (IN by)
          (NP
            (NP (NNS leaders))
            (PP (IN of)
              (NP (DT the) (NNP Church)))))
        (, ,)
        (PP (IN as)
          (NP (DT a) (NN reason)
            (S
              (VP (TO to)
                (VP (VB oppose)
                  (NP (JJ interracial) (NN marriage)))))))))
    (. .)))

nsubj(used-3, Mormons-2)
root(ROOT-0, used-3)
dobj(used-3, this-4)
amod(statements-9, other-7)
amod(statements-9, racist-8)
nsubj(made-10, statements-9)
conj_and(used-3, made-10)
prep_by(made-10, leaders-12)
det(Church-15, the-14)
prep_of(leaders-12, Church-15)
det(reason-19, a-18)
prep_as(made-10, reason-19)
aux(oppose-21, to-20)
infmod(reason-19, oppose-21)
amod(marriage-23, interracial-22)
dobj(oppose-21, marriage-23)

(ROOT
  (S
    (PP (RB As) (IN for)
      (S
        (VP (VBG forcing)
          (NP (NNS people))
          (S
            (VP (TO to)
              (VP (VB marry)))))))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (SBAR
        (WHADJP (RB exactly) (WP what))
        (S
          (NP (PRP you))
          (VP (VBD said)))))
    (. .)))

advcl(is-9, for-2)
prepc_as_for(is-9, forcing-3)
dobj(forcing-3, people-4)
aux(marry-6, to-5)
xcomp(forcing-3, marry-6)
nsubj(is-9, that-8)
root(ROOT-0, is-9)
dep(said-13, exactly-10)
dep(exactly-10, what-11)
nsubj(said-13, you-12)
ccomp(is-9, said-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (NP (DT a) (JJ homosexual))
          (VP (MD could)
            (VP (VB get)
              (ADJP (JJ married))
              (, ,)
              (ADVP
                (ADVP (RB just) (RB not))
                (PP (TO to)
                  (NP
                    (NP (NN someone))
                    (PP (IN of)
                      (NP (DT the) (JJ same) (NN sex)))))))))))
    (. .)))

nsubj(said-2, You-1)
root(ROOT-0, said-2)
complm(married-8, that-3)
det(homosexual-5, a-4)
nsubj(married-8, homosexual-5)
aux(married-8, could-6)
dep(married-8, get-7)
ccomp(said-2, married-8)
advmod(not-11, just-10)
advmod(married-8, not-11)
prep_to(not-11, someone-13)
det(sex-17, the-15)
amod(sex-17, same-16)
prep_of(someone-13, sex-17)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP (VB marry)
                      (NP (DT the)
                        (ADJP (JJ have)
                          (S
                            (VP (TO to)
                              (VP (VB marry)))))
                        (NN someone))))))))
          (NP (PRP they))
          (VP (VBP do) (RB n't)
            (VP (VB want)
              (PP (TO to)))))))
    (. .)))

nsubj(means-2, This-1)
root(ROOT-0, means-2)
complm(want-17, that-3)
mark(want-6, if-4)
nsubj(want-6, they-5)
xsubj(marry-8, they-5)
advcl(want-17, want-6)
aux(marry-8, to-7)
xcomp(want-6, marry-8)
det(someone-13, the-9)
amod(someone-13, have-10)
aux(marry-12, to-11)
xcomp(have-10, marry-12)
dobj(marry-8, someone-13)
nsubj(want-17, they-14)
aux(want-17, do-15)
neg(want-17, n't-16)
ccomp(means-2, want-17)
prep(want-17, to-18)

(ROOT
  (S ('' '')
    (S
      (NP (-LRB- -LRB-) (NNP Leviticus) (NNP 11:10) (-RRB- -RRB-))
      ('' '')
      (VP
        (ADVP
          (NP
            (NP (PRP They))
            (PRN (-LRB- -LRB-)
              (NP (NN shellfish))
              (-RRB- -RRB-)))
          (RB shall))
        (VB be)
        (NP
          (NP (DT an) (NN abomination))
          (PP (TO to)
            (NP (PRP you))))))
    (: ;)
    (S
      (S
        (NP (PRP you))
        (VP (MD shall) (RB not)
          (VP (VB eat)
            (NP (PRP$ their) (NN flesh)))))
      (, ,)
      (CC but)
      (S
        (NP (PRP you))
        (VP (MD shall)
          (VP (VB regard)
            (NP (PRP$ their) (NNS carcasses))
            (PP (IN as)
              (NP (DT an) (NN abomination)))))))
    (. .)))

nn(11:10-4, Leviticus-3)
nsubj(abomination-14, 11:10-4)
npadvmod(shall-11, They-7)
appos(They-7, shellfish-9)
advmod(abomination-14, shall-11)
cop(abomination-14, be-12)
det(abomination-14, an-13)
root(ROOT-0, abomination-14)
prep_to(abomination-14, you-16)
nsubj(eat-21, you-18)
aux(eat-21, shall-19)
neg(eat-21, not-20)
parataxis(abomination-14, eat-21)
poss(flesh-23, their-22)
dobj(eat-21, flesh-23)
nsubj(regard-28, you-26)
aux(regard-28, shall-27)
parataxis(abomination-14, regard-28)
conj_but(eat-21, regard-28)
poss(carcasses-30, their-29)
dobj(regard-28, carcasses-30)
det(abomination-33, an-32)
prep_as(regard-28, abomination-33)

(ROOT
  (SBARQ
    (SBAR (RB Now)
      (S
        (VP (VBZ lets)
          (VP (VB take)
            (NP (DT the) (NN religion))
            (PRT (RP out))
            (PP (IN of)
              (NP (DT this)))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (PRP we))
      (VP (VB change)
        (NP
          (NP (DT the) (NN definition))
          (PP (IN of)
            (NP (NN marriage))))
        (PP (IN for)
          (NP (DT a) (JJ select) (JJ few)))))
    (. ?)))

advmod(lets-2, Now-1)
dep(change-13, lets-2)
xcomp(lets-2, take-3)
det(religion-5, the-4)
dobj(take-3, religion-5)
prep_out_of(take-3, this-8)
advmod(change-13, why-10)
aux(change-13, should-11)
nsubj(change-13, we-12)
root(ROOT-0, change-13)
det(definition-15, the-14)
dobj(change-13, definition-15)
prep_of(definition-15, marriage-17)
det(few-21, a-19)
amod(few-21, select-20)
prep_for(change-13, few-21)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB take)
            (NP (NN religion))
            (PRT (RP out))
            (PP (IN of)
              (NP (PRP it)))))))
    (. ?)))

nsubj(want-2, You-1)
xsubj(take-4, You-1)
root(ROOT-0, want-2)
aux(take-4, to-3)
xcomp(want-2, take-4)
dobj(take-4, religion-5)
prep_out_of(take-4, it-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (PP (IN about)
        (NP (NN time))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
prep_about('s-2, time-4)

(ROOT
  (S
    (NP (NNP Marriage))
    (VP (VBZ is)
      (NP (DT a) (JJ social) (NN construct)))
    (. .)))

nsubj(construct-5, Marriage-1)
cop(construct-5, is-2)
det(construct-5, a-3)
amod(construct-5, social-4)
root(ROOT-0, construct-5)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ means)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (VP (VBN created)
                (PP (IN by)
                  (NP (NNS people)))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN as)
        (NP (JJ such)))
      (NP (PRP it))
      (VP (VBZ is)
        (PP (IN in)
          (NP (PRP$ our) (NN power)
            (S
              (VP (TO to)
                (VP (VB change)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(means-2, That-1)
root(ROOT-0, means-2)
nsubjpass(created-5, it-3)
auxpass(created-5, was-4)
ccomp(means-2, created-5)
agent(created-5, people-7)
prep_such_as(is-13, such-11)
nsubj(is-13, it-12)
conj_and(means-2, is-13)
poss(power-16, our-15)
prep_in(is-13, power-16)
aux(change-18, to-17)
infmod(power-16, change-18)
dobj(change-18, it-19)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (RB now))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP (RB not) (NN everyone))
            (VP (VBZ is)
              (VP (VBN born)
                (S
                  (ADJP (JJ heterosexual)))))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (NN fact)))
      (NP (JJ many) (NNS people))
      (VP (VBP are)
        (VP (VBN born)
          (S
            (ADJP (JJ homosexual))))))
    (. .)))

nsubj(know-3, We-1)
advmod(know-3, now-2)
root(ROOT-0, know-3)
complm(born-8, that-4)
neg(everyone-6, not-5)
nsubjpass(born-8, everyone-6)
auxpass(born-8, is-7)
ccomp(know-3, born-8)
acomp(born-8, heterosexual-9)
prep_in(born-17, fact-13)
amod(people-15, many-14)
nsubjpass(born-17, people-15)
auxpass(born-17, are-16)
conj_but(know-3, born-17)
acomp(born-17, homosexual-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN marriage))
        (VP (VBZ is)
          (VP (VBN defined)
            (PP (IN as) (IN between)
              (NP
                (NP (RB only) (DT a) (NN man))
                (CC and)
                (NP (DT a) (NN woman))))))))
    (, ,)
    (NP (DT these) (NNS people))
    (VP (VBP are)
      (VP (VBN excluded)
        (PP (IN from)
          (S
            (VP (VBG starting)
              (NP
                (NP (DT a) (NN family))
                (PP (IN of)
                  (NP (PRP$ their) (JJ own)))))))))
    (. .)))

mark(defined-4, If-1)
nsubjpass(defined-4, marriage-2)
auxpass(defined-4, is-3)
advcl(excluded-17, defined-4)
dep(defined-4, as-5)
advmod(man-9, only-7)
det(man-9, a-8)
prep_between(defined-4, man-9)
det(woman-12, a-11)
prep_between(defined-4, woman-12)
conj_and(man-9, woman-12)
det(people-15, these-14)
nsubjpass(excluded-17, people-15)
auxpass(excluded-17, are-16)
root(ROOT-0, excluded-17)
prepc_from(excluded-17, starting-19)
det(family-21, a-20)
dobj(starting-19, family-21)
poss(own-24, their-23)
prep_of(family-21, own-24)

(ROOT
  (S
    (PP (IN In)
      (NP (NN addition)))
    (, ,)
    (S
      (NP (NNS homosexuals))
      (VP (VBP make)
        (ADVP (RB up) (RBR more))
        (PP (IN than) (`` ``)
          (NP (DT a) (JJ select) (JJ few))
          ('' ''))))
    (CC and)
    (S
      (ADVP (RB therefore))
      (NP (PRP it))
      (VP (VBZ affects)
        (NP
          (NP (NNS millions))
          (PP (IN of)
            (NP
              (NP (NNS people))
              (PP (IN in)
                (NP (DT the) (NNP U.S.))))))))
    (. .)))

prep_in(make-5, addition-2)
nsubj(make-5, homosexuals-4)
root(ROOT-0, make-5)
advmod(more-7, up-6)
advmod(make-5, more-7)
det(few-12, a-10)
amod(few-12, select-11)
prep_than(make-5, few-12)
advmod(affects-17, therefore-15)
nsubj(affects-17, it-16)
conj_and(make-5, affects-17)
dobj(affects-17, millions-18)
prep_of(millions-18, people-20)
det(U.S.-23, the-22)
prep_in(people-20, U.S.-23)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (, ,)
    (S
      (VP (VBG extending)
        (NP
          (NP (DT the) (NN definition))
          (PP (IN of)
            (NP (NN marriage))))
        (S
          (VP (TO to)
            (VP (VB include)
              (NP (NNS homosexuals)))))))
    (, ,)
    (VP (MD would)
      (VP (VB have)
        (NP
          (NP (RB absolutely) (DT no) (NN effect))
          (PP (IN on)
            (NP
              (NP (DT the) (NN marriage))
              (PP (IN of)
                (NP (JJ straight) (NNS couples))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(have-16, time-4)
dep(have-16, extending-6)
det(definition-8, the-7)
dobj(extending-6, definition-8)
prep_of(definition-8, marriage-10)
aux(include-12, to-11)
xcomp(extending-6, include-12)
dobj(include-12, homosexuals-13)
aux(have-16, would-15)
root(ROOT-0, have-16)
advmod(effect-19, absolutely-17)
det(effect-19, no-18)
dobj(have-16, effect-19)
det(marriage-22, the-21)
prep_on(effect-19, marriage-22)
amod(couples-25, straight-24)
prep_of(marriage-22, couples-25)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN sense)))
    (NP (NN marriage))
    (VP (VBZ is) (RB n't)
      (VP (VBG being)
        (VP (VBN changed)
          (ADVP (IN at) (DT all)))))
    (. .)))

det(sense-3, this-2)
prep_in(changed-8, sense-3)
nsubjpass(changed-8, marriage-4)
aux(changed-8, is-5)
neg(changed-8, n't-6)
auxpass(changed-8, being-7)
root(ROOT-0, changed-8)
advmod(changed-8, at-9)
pobj(at-9, all-10)

(ROOT
  (S
    (NP (NNS Homosexuals))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN allowed)
          (S
            (VP (TO to)
              (VP (VB marry)
                (SBAR (IN because)
                  (S
                    (NP (NN love))
                    (VP (VBZ knows)
                      (NP (DT no) (NN gender)))))))))))
    (. .)))

nsubjpass(allowed-4, Homosexuals-1)
aux(allowed-4, should-2)
auxpass(allowed-4, be-3)
root(ROOT-0, allowed-4)
aux(marry-6, to-5)
xcomp(allowed-4, marry-6)
mark(knows-9, because-7)
nsubj(knows-9, love-8)
advcl(marry-6, knows-9)
det(gender-11, no-10)
dobj(knows-9, gender-11)

(ROOT
  (S ('' '')
    (S
      (NP (-LRB- -LRB-) (NNP Leviticus) (NNP 11:11) (-RRB- -RRB-))
      ('' '')
      (VP (VB Whatever)
        (SBAR (IN in)
          (S
            (NP (DT the) (NN water))
            (VP (VBZ does) (RB not)
              (VP (VB have)
                (NP (NNS fins)
                  (CC or)
                  (NNS scales))))))))
    (: ;)
    (S
      (NP (DT that))
      (VP (MD shall)
        (VP (VB be)
          (NP
            (NP (DT an) (NN abomination))
            (PP (TO to)
              (NP (PRP you)))))))
    (. .)))

nn(11:11-4, Leviticus-3)
nsubj(Whatever-7, 11:11-4)
root(ROOT-0, Whatever-7)
mark(have-13, in-8)
det(water-10, the-9)
nsubj(have-13, water-10)
aux(have-13, does-11)
neg(have-13, not-12)
advcl(Whatever-7, have-13)
dobj(have-13, fins-14)
dobj(have-13, scales-16)
conj_or(fins-14, scales-16)
nsubj(abomination-22, that-18)
aux(abomination-22, shall-19)
cop(abomination-22, be-20)
det(abomination-22, an-21)
parataxis(Whatever-7, abomination-22)
prep_to(abomination-22, you-24)

(ROOT
  (S
    (VP (VB Give)
      (NP (PRP me))
      (NP
        (NP (DT a) (NN reason))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (NNS homosexuals))
            (VP (MD should)
              (VP (VB raise)
                (NP (NNS children))))))))
    (. .)))

root(ROOT-0, Give-1)
iobj(Give-1, me-2)
det(reason-4, a-3)
dobj(Give-1, reason-4)
advmod(raise-8, why-5)
nsubj(raise-8, homosexuals-6)
aux(raise-8, should-7)
rcmod(reason-4, raise-8)
dobj(raise-8, children-9)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ tired)
        (PP (IN of)
          (S
            (VP (VBG hearing)
              (PP (IN about)
                (NP
                  (NP (DT that) (NN friend))
                  (PP (IN of)
                    (NP (NNP yours)))))))))
      (, ,)
      (S
        (VP (VB give)
          (NP (PRP me))
          (NP (DT an) (JJ actual) (NN reason)))))
    (. .)))

cc(tired-4, And-1)
nsubj(tired-4, I-2)
cop(tired-4, 'm-3)
root(ROOT-0, tired-4)
prepc_of(tired-4, hearing-6)
det(friend-9, that-8)
prep_about(hearing-6, friend-9)
prep_of(friend-9, yours-11)
ccomp(tired-4, give-13)
iobj(give-13, me-14)
det(reason-17, an-15)
amod(reason-17, actual-16)
dobj(give-13, reason-17)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (NP
        (NP (DT the) (NN one))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ wants)
              (NP
                (NP (NN change))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (MD should)
                      (VP (VB have)
                        (S
                          (VP (TO to)
                            (VP (VB answer)
                              (NP (PRP$ my) (NN question))
                              (ADVP (RB first)))))))))))))))
    (. .)))

nsubj(one-4, You-1)
cop(one-4, are-2)
det(one-4, the-3)
root(ROOT-0, one-4)
nsubj(wants-6, one-4)
rcmod(one-4, wants-6)
dobj(wants-6, change-7)
dobj(have-10, change-7)
nsubj(have-10, you-8)
xsubj(answer-12, you-8)
aux(have-10, should-9)
rcmod(change-7, have-10)
aux(answer-12, to-11)
xcomp(have-10, answer-12)
poss(question-14, my-13)
dobj(answer-12, question-14)
advmod(answer-12, first-15)

(ROOT
  (S
    (ADVP (RB Actually))
    (, ,)
    (PP (IN in)
      (NP (JJS most) (NNS places)))
    (NP (PRP it))
    (VP (VBD was) (RB not)
      (ADJP (JJ illegal)
        (PP (IN for)
          (NP (JJ homosexual) (NNS couples)))
        (S
          (VP (TO to)
            (VP (VB adopt))))))
    (. .)))

advmod(illegal-9, Actually-1)
amod(places-5, most-4)
prep_in(illegal-9, places-5)
nsubj(illegal-9, it-6)
cop(illegal-9, was-7)
neg(illegal-9, not-8)
root(ROOT-0, illegal-9)
amod(couples-12, homosexual-11)
prep_for(illegal-9, couples-12)
aux(adopt-14, to-13)
xcomp(illegal-9, adopt-14)

(ROOT
  (S (RB Then)
    (NP (NNS people))
    (VP (VBD started)
      (S
        (VP (VBG making)
          (NP (NNS laws))
          (PP (IN against)
            (NP (PRP it))))))
    (. .)))

advmod(started-3, Then-1)
nsubj(started-3, people-2)
root(ROOT-0, started-3)
xcomp(started-3, making-4)
dobj(making-4, laws-5)
prep_against(making-4, it-7)

(ROOT
  (S
    (S
      (NP (DT These) (NNS laws))
      (VP (VBD were)
        (VP (VBN declared)
          (S
            (ADJP (JJ unconstitutional))))))
    (, ,)
    (CC but)
    (S
      (NP (NNS people))
      (ADVP (RB then))
      (VP (VBD passed)
        (NP (NNS amendments))))
    (. .)))

det(laws-2, These-1)
nsubjpass(declared-4, laws-2)
auxpass(declared-4, were-3)
root(ROOT-0, declared-4)
acomp(declared-4, unconstitutional-5)
nsubj(passed-10, people-8)
advmod(passed-10, then-9)
conj_but(declared-4, passed-10)
dobj(passed-10, amendments-11)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT this) (NN sense))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ wrong))
              (PP (IN about)
                (S
                  (NP (PRP me))
                  (VP (VBG wanting)
                    (NP (DT the) (NN change))))))))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (ADVP (RB still))
      (VP (VB back)
        (PRT (RP up))
        (NP (PRP$ my) (NN point))))
    (. .)))

det(sense-3, this-2)
prep_in(back-18, sense-3)
nsubj(wrong-6, you-4)
cop(wrong-6, are-5)
rcmod(sense-3, wrong-6)
nsubj(wanting-9, me-8)
prepc_about(wrong-6, wanting-9)
det(change-11, the-10)
dobj(wanting-9, change-11)
advmod(back-18, however-13)
nsubj(back-18, I-15)
aux(back-18, will-16)
advmod(back-18, still-17)
root(ROOT-0, back-18)
prt(back-18, up-19)
poss(point-21, my-20)
dobj(back-18, point-21)

(ROOT
  (S
    (NP (NNS Homosexuals))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN allowed)
          (S
            (VP (TO to)
              (VP (VB adopt)
                (SBAR (IN because)
                  (S
                    (NP (PRP they))
                    (VP (VBP have)
                      (VP (VBN been)
                        (VP (VBN shown)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (NP
                                  (ADJP (RB equally) (JJ capable))
                                  (NNS parents))
                                (PP (IN through)
                                  (NP (JJ numerous) (NNS studies) (NN source)))))))))))))))))
    (. .)))

nsubjpass(allowed-4, Homosexuals-1)
aux(allowed-4, should-2)
auxpass(allowed-4, be-3)
root(ROOT-0, allowed-4)
aux(adopt-6, to-5)
xcomp(allowed-4, adopt-6)
mark(shown-11, because-7)
nsubjpass(shown-11, they-8)
aux(shown-11, have-9)
auxpass(shown-11, been-10)
advcl(adopt-6, shown-11)
aux(parents-16, to-12)
cop(parents-16, be-13)
advmod(capable-15, equally-14)
amod(parents-16, capable-15)
xcomp(shown-11, parents-16)
amod(source-20, numerous-18)
nn(source-20, studies-19)
prep_through(parents-16, source-20)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (S
      (NP (JJ homosexual) (NNS parents))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT a) (JJ great) (NN group))
            (PP (IN of)
              (NP (NNS people)
                (S
                  (VP (TO to)
                    (VP (VB adopt)
                      (NP (NNS orphans)))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB therefore))
      (NP (EX there))
      (VP (MD would)
        (VP (VB be)
          (NP (JJR less) (JJ foster) (NNS children)))))
    (. .)))

advmod(group-9, Therefore-1)
amod(parents-4, homosexual-3)
nsubj(group-9, parents-4)
aux(group-9, would-5)
cop(group-9, be-6)
det(group-9, a-7)
amod(group-9, great-8)
root(ROOT-0, group-9)
prep_of(group-9, people-11)
aux(adopt-13, to-12)
infmod(people-11, adopt-13)
dobj(adopt-13, orphans-14)
advmod(children-23, therefore-17)
expl(children-23, there-18)
aux(children-23, would-19)
cop(children-23, be-20)
amod(children-23, less-21)
amod(children-23, foster-22)
conj_and(group-9, children-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NN addition)))
    (, ,)
    (NP (NNS people))
    (VP (MD should)
      (VP (VB have)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB raise)
                (NP (DT a) (NN family))))))))
    (. .)))

prep_in(have-6, addition-2)
nsubj(have-6, people-4)
aux(have-6, should-5)
root(ROOT-0, have-6)
det(right-8, the-7)
dobj(have-6, right-8)
aux(raise-10, to-9)
infmod(right-8, raise-10)
det(family-12, a-11)
dobj(raise-10, family-12)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (PRN (-LRB- -LRB-)
          (NP (NNP Leviticus) (CD 11:12))
          (-RRB- -RRB-))
        (S
          (S
            (NP
              (NP (DT A) (NN girl))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ is)
                    (VP (VBN raped))))))
            (VP (MD must)
              (VP (VB be)
                (VP (VBN put)
                  (PP (TO to)
                    (NP (NN death)))
                  (: :)
                  (SBAR (IN If)
                    (S
                      (NP
                        (NP (DT a) (NN damsel))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ is)
                              (NP (DT a) (JJ virgin))))))
                      (VP (VB be)
                        (VP (VBN betrothed)
                          (NP (JJ unto) (DT an) (NN husband))))))))))
          (, ,)
          (CC and)
          (S
            (NP (DT a) (NN man))
            (VP
              (VP (VBP find)
                (NP (PRP her))
                (PP (IN in)
                  (NP (DT the) (NN city))))
              (, ,)
              (CC and)
              (VP (NN lie)
                (PP (IN with)
                  (NP (PRP her))))))))
      (: ;)
      (ADVP (RB Then))
      (NP (NN ye))
      (VP (MD shall)
        (VP (VB bring)
          (NP (PRP them))
          (PP (DT both) (IN out)
            (NP
              (NP (JJ unto) (DT the) (NN gate))
              (PP (IN of)
                (NP (DT that) (NN city))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN ye))
      (VP (MD shall)
        (VP (VB stone)
          (NP (PRP them))
          (PP (IN with)
            (NP
              (NP
                (NP (NNS stones))
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (VBP die)))))
              (: ;)
              (NP
                (NP (DT the) (NN damsel))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (PRP she))
                    (VP (VBD cried) (RB not)
                      (VP (, ,)
                        (S
                          (VP (VBG being)
                            (PP (IN in)
                              (NP (DT the) (NN city))))))))))
              (: ;)
              (CC and)
              (NP
                (NP (DT the) (NN man))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (PRP he))
                    (VP (VBD hath)
                      (VP (VBN humbled)
                        (NP
                          (NP (PRP$ his) (NN neighbor) (POS 's))
                          (NN wife))))))))))))
    (. .)))

dep(put-13, Leviticus-3)
num(Leviticus-3, 11:12-4)
det(girl-7, A-6)
nsubjpass(raped-10, girl-7)
nsubjpass(put-13, girl-7)
auxpass(raped-10, is-9)
rcmod(girl-7, raped-10)
aux(put-13, must-11)
auxpass(put-13, be-12)
dep(bring-47, put-13)
prep_to(put-13, death-15)
mark(betrothed-25, If-17)
det(damsel-19, a-18)
nsubj(virgin-23, damsel-19)
nsubjpass(betrothed-25, damsel-19)
cop(virgin-23, is-21)
det(virgin-23, a-22)
rcmod(damsel-19, virgin-23)
auxpass(betrothed-25, be-24)
advcl(put-13, betrothed-25)
parataxis(put-13, betrothed-25)
amod(husband-28, unto-26)
det(husband-28, an-27)
dobj(betrothed-25, husband-28)
det(man-32, a-31)
nsubj(find-33, man-32)
conj_and(put-13, find-33)
dep(bring-47, find-33)
dobj(find-33, her-34)
det(city-37, the-36)
prep_in(find-33, city-37)
conj_and(put-13, lie-40)
conj_and(find-33, lie-40)
prep_with(lie-40, her-42)
advmod(bring-47, Then-44)
nsubj(bring-47, ye-45)
aux(bring-47, shall-46)
root(ROOT-0, bring-47)
dobj(bring-47, them-48)
dep(bring-47, both-49)
amod(gate-53, unto-51)
det(gate-53, the-52)
prep_out(bring-47, gate-53)
det(city-56, that-55)
prep_of(gate-53, city-56)
nsubj(stone-61, ye-59)
aux(stone-61, shall-60)
conj_and(bring-47, stone-61)
dobj(stone-61, them-62)
prep_with(stone-61, stones-64)
dobj(die-67, stones-64)
complm(die-67, that-65)
nsubj(die-67, they-66)
dep(stones-64, die-67)
det(damsel-70, the-69)
prep_with(stone-61, damsel-70)
conj_and(stones-64, damsel-70)
dobj(die-67, damsel-70)
dobj(cried-74, damsel-70)
mark(cried-74, because-72)
nsubj(cried-74, she-73)
dep(damsel-70, cried-74)
neg(cried-74, not-75)
dep(cried-74, being-77)
det(city-80, the-79)
prep_in(being-77, city-80)
det(man-84, the-83)
prep_with(stone-61, man-84)
conj_and(stones-64, man-84)
dobj(die-67, man-84)
mark(hath-88, because-86)
nsubj(hath-88, he-87)
dep(man-84, hath-88)
dep(hath-88, humbled-89)
poss(neighbor-91, his-90)
poss(wife-93, neighbor-91)
dobj(humbled-89, wife-93)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (DT no) (NN harm))
        (VP (VBZ is)
          (VP (VBN done)
            (PP (IN by)
              (NP (JJ homosexual) (NN parenting)))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT no) (NN reason)
        (S
          (VP (TO to)
            (VP (VB outlaw)
              (NP (NN adoption))
              (PP (IN by)
                (NP (NNS homosexuals))))))))
    (. .)))

mark(done-5, Since-1)
det(harm-3, no-2)
nsubjpass(done-5, harm-3)
auxpass(done-5, is-4)
advcl(is-11, done-5)
amod(parenting-8, homosexual-7)
agent(done-5, parenting-8)
expl(is-11, there-10)
root(ROOT-0, is-11)
det(reason-13, no-12)
nsubj(is-11, reason-13)
aux(outlaw-15, to-14)
infmod(reason-13, outlaw-15)
dobj(outlaw-15, adoption-16)
prep_by(outlaw-15, homosexuals-18)

(ROOT
  (S
    (NP (NNP Jake) (PRP you))
    (VP (VBP claim)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB not)
            (VP (`` ``) (VB take)
              (NP (NN everything))
              (PP (IN from)
                (NP
                  (NP (DT the) (NN bible))
                  (ADVP (RB literally)
                    (CC and)
                    (RB blindly)))))))))
    ('' '') (. ?)))

nsubj(claim-3, Jake-1)
dep(Jake-1, you-2)
root(ROOT-0, claim-3)
complm(take-9, that-4)
nsubj(take-9, you-5)
aux(take-9, do-6)
neg(take-9, not-7)
ccomp(claim-3, take-9)
dobj(take-9, everything-10)
det(bible-13, the-12)
prep_from(take-9, bible-13)
advmod(bible-13, literally-14)
advmod(bible-13, blindly-16)
conj_and(literally-14, blindly-16)

(ROOT
  (S (CC and)
    (ADVP (RB yet))
    (NP (PRP you))
    (ADVP (RB still))
    (VP (VBP fail)
      (S
        (VP (TO to)
          (VP (VB give)
            (NP (PRP me))
            (NP
              (NP (NNS reasons))
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (NN homosexuality))
                  (VP (VBZ is)
                    (ADJP (JJ wrong))
                    (SBAR (IN that)
                      (S
                        (VP (VBP are) (RB not)
                          (ADJP (JJ religious)))))))))))))
    (. .)))

cc(fail-5, and-1)
advmod(fail-5, yet-2)
nsubj(fail-5, you-3)
xsubj(give-7, you-3)
advmod(fail-5, still-4)
root(ROOT-0, fail-5)
aux(give-7, to-6)
xcomp(fail-5, give-7)
iobj(give-7, me-8)
dobj(give-7, reasons-9)
advmod(wrong-13, why-10)
nsubj(wrong-13, homosexuality-11)
cop(wrong-13, is-12)
rcmod(reasons-9, wrong-13)
complm(religious-17, that-14)
cop(religious-17, are-15)
neg(religious-17, not-16)
ccomp(wrong-13, religious-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB interpret)
        (S
          (NP (DT this))
          (VP (TO to)
            (VP (VB mean)
              (S
                (NP (PRP you))
                (VP (VB have)
                  (NP (DT no) (NNS reasons)))))))))
    (. .)))

nsubj(interpret-4, I-1)
aux(interpret-4, can-2)
advmod(interpret-4, only-3)
root(ROOT-0, interpret-4)
nsubj(mean-7, this-5)
aux(mean-7, to-6)
xcomp(interpret-4, mean-7)
nsubj(have-9, you-8)
ccomp(mean-7, have-9)
det(reasons-11, no-10)
dobj(have-9, reasons-11)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG forcing)
        (NP (PRP$ your) (NN religion))
        (PP (IN on)
          (NP (NNS others)))))
    (. .)))

advmod(forcing-4, Therefore-1)
nsubj(forcing-4, you-2)
aux(forcing-4, are-3)
root(ROOT-0, forcing-4)
poss(religion-6, your-5)
dobj(forcing-4, religion-6)
prep_on(forcing-4, others-8)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (NN someone))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ claims)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ patriotic))))))))))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (DT the)
          (ADJP (JJS least) (JJ American))
          (NN action))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP have)
              (VP (VBN heard)
                (PP (IN in)
                  (NP (DT a) (JJ long) (NN time)))))))))
    (. .)))

nsubj(claims-4, someone-2)
prep_for(action-14, someone-2)
rcmod(someone-2, claims-4)
aux(patriotic-7, to-5)
cop(patriotic-7, be-6)
xcomp(claims-4, patriotic-7)
nsubj(action-14, this-9)
cop(action-14, is-10)
det(action-14, the-11)
dep(American-13, least-12)
amod(action-14, American-13)
root(ROOT-0, action-14)
dobj(heard-17, action-14)
nsubj(heard-17, I-15)
aux(heard-17, have-16)
rcmod(action-14, heard-17)
det(time-21, a-19)
amod(time-21, long-20)
prep_in(heard-17, time-21)

(ROOT
  (FRAG
    (NP (NN Edit))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBD forgot)
        (NP (CD one) (JJR more) (NN Bible) (NN quote))))
    (. .)))

root(ROOT-0, Edit-1)
nsubj(forgot-4, I-3)
dep(Edit-1, forgot-4)
num(quote-8, one-5)
amod(quote-8, more-6)
nn(quote-8, Bible-7)
dobj(forgot-4, quote-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (PRP$ my) (NNS favorites)))))
    (: :)))

nsubj(one-3, It-1)
cop(one-3, 's-2)
root(ROOT-0, one-3)
poss(favorites-6, my-5)
prep_of(one-3, favorites-6)

(ROOT
  (S
    (S
      (ADVP (RB Deuteronomy))
      (NP
        (NP (CD 22:23) (CD -24))
        (VP (VBG Selling)
          (NP (PRP you))))
      (VP (VBZ daughter)
        (PP (IN into)
          (NP (NN slavery)))))
    (: :)
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (DT a) (NN man))
          (VP (VBZ sells)
            (NP (PRP$ his) (NN daughter))
            (PP (IN as)
              (NP (DT a) (NN slave))))))
      (, ,)
      (NP (PRP she))
      (VP (MD will) (RB not)
        (VP (VB be)
          (VP (VBN freed)
            (PP (IN at)
              (NP
                (NP (DT the) (NN end))
                (PP (IN of)
                  (NP (CD six) (NNS years)))))
            (SBAR (IN as)
              (S
                (NP (DT the) (NNS men))
                (VP (VBP are))))))))
    (. .)))

advmod(daughter-6, Deuteronomy-1)
num(-24-3, 22:23-2)
nsubj(daughter-6, -24-3)
partmod(-24-3, Selling-4)
dobj(Selling-4, you-5)
root(ROOT-0, daughter-6)
prep_into(daughter-6, slavery-8)
advmod(sells-13, When-10)
det(man-12, a-11)
nsubj(sells-13, man-12)
advcl(freed-24, sells-13)
poss(daughter-15, his-14)
dobj(sells-13, daughter-15)
det(slave-18, a-17)
prep_as(sells-13, slave-18)
nsubjpass(freed-24, she-20)
aux(freed-24, will-21)
neg(freed-24, not-22)
auxpass(freed-24, be-23)
parataxis(daughter-6, freed-24)
det(end-27, the-26)
prep_at(freed-24, end-27)
num(years-30, six-29)
prep_of(end-27, years-30)
mark(are-34, as-31)
det(men-33, the-32)
nsubj(are-34, men-33)
advcl(freed-24, are-34)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP she))
        (VP (VBZ does) (RB not)
          (VP (VB please)
            (NP
              (NP (DT the) (NN man))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD bought)
                    (NP (PRP her))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD may)
      (VP (VB allow)
        (S
          (NP (PRP her))
          (VP (TO to)
            (VP (VB be)
              (VP (VBN bought)
                (PRT (RP back))
                (ADVP (RB again))))))))
    (. .)))

mark(please-5, If-1)
nsubj(please-5, she-2)
aux(please-5, does-3)
neg(please-5, not-4)
advcl(allow-14, please-5)
det(man-7, the-6)
dobj(please-5, man-7)
nsubj(bought-9, man-7)
rcmod(man-7, bought-9)
dobj(bought-9, her-10)
nsubj(allow-14, he-12)
aux(allow-14, may-13)
root(ROOT-0, allow-14)
nsubjpass(bought-18, her-15)
aux(bought-18, to-16)
auxpass(bought-18, be-17)
xcomp(allow-14, bought-18)
prt(bought-18, back-19)
advmod(bought-18, again-20)

(ROOT
  (S (CC But)
    (NP (PRP he))
    (VP (VBZ is) (RB not)
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP (VB sell)
              (NP (PRP her))
              (PP (TO to)
                (NP (NNS foreigners))))))
        (, ,)
        (SBAR (IN since)
          (S
            (NP (PRP he))
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN one))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD broke)
                      (NP (DT the) (NN contract))
                      (PP (IN with)
                        (NP (PRP her))))))))))))
    (. .)))

cc(allowed-5, But-1)
nsubjpass(allowed-5, he-2)
xsubj(sell-7, he-2)
auxpass(allowed-5, is-3)
neg(allowed-5, not-4)
root(ROOT-0, allowed-5)
aux(sell-7, to-6)
xcomp(allowed-5, sell-7)
dobj(sell-7, her-8)
prep_to(sell-7, foreigners-10)
mark(one-16, since-12)
nsubj(one-16, he-13)
cop(one-16, is-14)
det(one-16, the-15)
advcl(allowed-5, one-16)
nsubj(broke-18, one-16)
rcmod(one-16, broke-18)
det(contract-20, the-19)
dobj(broke-18, contract-20)
prep_with(broke-18, her-22)

(ROOT
  (S
    (S (CC And)
      (SBAR (IN if)
        (S
          (NP
            (NP (DT the) (NN slave) (NN girl) (POS 's))
            (NN owner))
          (VP (VBZ arranges)
            (SBAR (IN for)
              (S
                (NP (PRP her))
                (VP (TO to)
                  (VP (VB marry)
                    (NP (PRP$ his) (NN son)))))))))
      (, ,)
      (NP (PRP he))
      (VP (MD may)
        (ADVP (RB no) (RB longer))
        (VP (VB treat)
          (NP (PRP her))
          (PP (IN as)
            (NP (DT a) (NN slave) (NN girl))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP he))
      (VP (MD must)
        (VP (VB treat)
          (NP (PRP her))
          (PP (IN as)
            (NP (PRP$ his) (NN daughter))))))
    (. .)))

mark(arranges-8, if-2)
det(girl-5, the-3)
nn(girl-5, slave-4)
poss(owner-7, girl-5)
nsubj(arranges-8, owner-7)
advcl(treat-20, arranges-8)
mark(marry-12, for-9)
nsubj(marry-12, her-10)
aux(marry-12, to-11)
advcl(arranges-8, marry-12)
xcomp(arranges-8, marry-12)
poss(son-14, his-13)
dobj(marry-12, son-14)
nsubj(treat-20, he-16)
aux(treat-20, may-17)
advmod(longer-19, no-18)
advmod(treat-20, longer-19)
root(ROOT-0, treat-20)
dobj(treat-20, her-21)
det(girl-25, a-23)
nn(girl-25, slave-24)
prep_as(treat-20, girl-25)
nsubj(treat-30, he-28)
aux(treat-30, must-29)
conj_but(treat-20, treat-30)
dobj(treat-30, her-31)
poss(daughter-34, his-33)
prep_as(treat-30, daughter-34)

