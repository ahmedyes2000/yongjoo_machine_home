(ROOT
  (S
    (PP (IN By)
      (NP (PRP$ your) (`` ``) (NN logic) ('' '')))
    (, ,)
    (SBAR (RB only)
      (S
        (NP
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP are) (DT both)
                  (ADJP (JJ capable))))))
          (PP (IN of)
            (S
              (VP (VBG having)
                (NP (NNS children)
                  (CC and)
                  (NN fit))
                (PP (IN into)
                  (NP
                    (NP (PRP$ your) (NN idea))
                    (PP (IN of)
                      (NP (DT a) (NN role) (NN model)))))))))
        (VP (MD should)
          (VP (VB be)
            (VP (VBN allowed)
              (S
                (VP (TO to)
                  (VP (VB marry)
                    (CC or)
                    (VB adopt)))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG guessing)))
    (. .)))

poss(logic-4, your-2)
prep_by(guessing-35, logic-4)
advmod(allowed-27, only-7)
nsubj(capable-12, those-8)
nsubjpass(allowed-27, those-8)
cop(capable-12, are-10)
dep(capable-12, both-11)
rcmod(those-8, capable-12)
prepc_of(those-8, having-14)
dobj(having-14, children-15)
dobj(having-14, fit-17)
conj_and(children-15, fit-17)
poss(idea-20, your-19)
prep_into(having-14, idea-20)
det(model-24, a-22)
nn(model-24, role-23)
prep_of(idea-20, model-24)
aux(allowed-27, should-25)
auxpass(allowed-27, be-26)
dep(guessing-35, allowed-27)
aux(marry-29, to-28)
xcomp(allowed-27, marry-29)
xcomp(allowed-27, adopt-31)
conj_or(marry-29, adopt-31)
nsubj(guessing-35, I-33)
aux(guessing-35, 'm-34)
root(ROOT-0, guessing-35)

(ROOT
  (S (CC And)
    (NP (DT these))
    (VP (VBP are) (RB not)
      (NP
        (NP (NNS facts))
        (SBAR
          (S
            (NP (PRP we))
            (ADVP (DT all))
            (VP (VBP know)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ true))))))))))
    (. .)))

cc(facts-5, And-1)
nsubj(facts-5, these-2)
cop(facts-5, are-3)
neg(facts-5, not-4)
root(ROOT-0, facts-5)
dobj(know-8, facts-5)
nsubj(know-8, we-6)
xsubj(true-11, we-6)
advmod(know-8, all-7)
rcmod(facts-5, know-8)
aux(true-11, to-9)
cop(true-11, be-10)
xcomp(know-8, true-11)

(ROOT
  (S
    (NP
      (NP (RB Quite) (DT a) (JJ few))
      (PP (IN of)
        (NP (DT these))))
    (VP (VBP are)
      (NP
        (NP (JJ outright) (NNS lies))
        (CC or)
        (NP (NN opinion))))
    (. .)))

advmod(few-3, Quite-1)
det(few-3, a-2)
nsubj(lies-8, few-3)
prep_of(few-3, these-5)
cop(lies-8, are-6)
amod(lies-8, outright-7)
root(ROOT-0, lies-8)
conj_or(lies-8, opinion-10)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP
      (NP (PRP$ your) (NN idea))
      (SBAR
        (SBAR (IN that)
          (S
            (NP (DT the) (NNS parents))
            (VP (MD should)
              (VP (VB be)
                (ADJP (RB straight))
                (SBAR (IN so)
                  (S
                    (NP (DT the) (NNS kids))
                    (VP (MD will)
                      (VP (VB be)
                        (ADJP (RB straight))))))))))
        (: --)
        (CC and)
        (SBAR
          (WHNP
            (WHADJP (WRB how) (JJ many))
            (NNS children))
          (FRAG
            (PP (IN of)
              (NP (JJ gay) (NNS parents)))))))
    (VP (VBP turn)
      (PRT (RP out))
      (NP (JJ gay)))
    (. ?)))

prep_for(turn-26, example-2)
poss(idea-5, your-4)
nsubj(turn-26, idea-5)
dep(straight-11, that-6)
det(parents-8, the-7)
nsubj(straight-11, parents-8)
aux(straight-11, should-9)
cop(straight-11, be-10)
rcmod(idea-5, straight-11)
mark(straight-17, so-12)
det(kids-14, the-13)
nsubj(straight-17, kids-14)
aux(straight-17, will-15)
cop(straight-17, be-16)
advcl(straight-11, straight-17)
advmod(many-21, how-20)
amod(children-22, many-21)
dep(of-23, children-22)
rcmod(idea-5, of-23)
conj_and(straight-11, of-23)
amod(parents-25, gay-24)
pobj(of-23, parents-25)
root(ROOT-0, turn-26)
prt(turn-26, out-27)
dobj(turn-26, gay-28)

(ROOT
  (SQ (VBD Did)
    (NP
      (NP (DT this) (`` ``) (NN fact) ('' ''))
      (PP (IN of)
        (NP (NNP yours))))
    (VP
      (ADVP (RB just) (RB not))
      (VB apply)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (JJ gay) (NNS parents))
          (ADVP (PRP themselves))
          (VP (VBD were)
            (VP (VBN raised)
              (PP (IN by)
                (NP (PRP$ their) (JJ straight) (NNS parents))))))))
    (. ?)))

aux(apply-10, Did-1)
det(fact-4, this-2)
nsubj(apply-10, fact-4)
prep_of(fact-4, yours-7)
advmod(not-9, just-8)
neg(apply-10, not-9)
root(ROOT-0, apply-10)
advmod(raised-17, when-11)
det(parents-14, the-12)
amod(parents-14, gay-13)
nsubjpass(raised-17, parents-14)
advmod(raised-17, themselves-15)
auxpass(raised-17, were-16)
advcl(apply-10, raised-17)
poss(parents-21, their-19)
amod(parents-21, straight-20)
agent(raised-17, parents-21)

(ROOT
  (SBARQ
    (WHNP
      (NP (JJS Most))
      (PP (IN of)
        (NP (DT all))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (VBZ does)
      (NP (DT this))
      (ADVP (RB even))
      (VP (VB begin)
        (S
          (VP (TO to)
            (VP (VB put)
              (NP (NNS kids))
              (PP (IN at)
                (NP (DT a) (NN disadvantage))))))))
    (. ?)))

dep(begin-9, Most-1)
prep_of(Most-1, all-3)
advmod(begin-9, how-5)
aux(begin-9, does-6)
nsubj(begin-9, this-7)
xsubj(put-11, this-7)
advmod(begin-9, even-8)
root(ROOT-0, begin-9)
aux(put-11, to-10)
xcomp(begin-9, put-11)
dobj(put-11, kids-12)
det(disadvantage-15, a-14)
prep_at(put-11, disadvantage-15)

