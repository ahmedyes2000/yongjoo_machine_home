(ROOT
  (S
    (ADVP (RB SocialistBetty))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN read)
          (NP
            (NP (JJ several))
            (PP (IN of)
              (NP (PRP$ your) (NN post))))
          (PP
            (ADVP (RB now))
            (IN on)
            (NP (JJ different) (NNS topics))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (RB very) (JJ clear)
          (PP (TO to)
            (NP (PRP me))))
        (SBAR (IN that)
          (S
            (NP
              (NP (PRP you))
              (SBAR
                (S
                  (NP (PRP yourself))
                  (VP (MD will)
                    (VP (VB believe)
                      (NP (NN anything) (NN someone)))))))
            (VP (VBZ tells)
              (S
                (NP (PRP you))
                (ADJP (RB as) (JJ long))
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBZ promotes)
                      (NP (PRP$ your) (NNS viewpoints)))))))))))
    (. .)))

advmod(read-5, SocialistBetty-1)
nsubj(read-5, I-3)
aux(read-5, 've-4)
root(ROOT-0, read-5)
dobj(read-5, several-6)
poss(post-9, your-8)
prep_of(several-6, post-9)
advmod(read-5, now-10)
amod(topics-13, different-12)
prep_on(read-5, topics-13)
nsubj(clear-18, it-15)
cop(clear-18, 's-16)
advmod(clear-18, very-17)
conj_and(read-5, clear-18)
prep_to(clear-18, me-20)
complm(tells-28, that-21)
nsubj(tells-28, you-22)
nsubj(believe-25, yourself-23)
aux(believe-25, will-24)
rcmod(you-22, believe-25)
nn(someone-27, anything-26)
dobj(believe-25, someone-27)
ccomp(clear-18, tells-28)
nsubj(promotes-34, you-29)
advmod(long-31, as-30)
dep(promotes-34, long-31)
mark(promotes-34, as-32)
nsubj(promotes-34, it-33)
xcomp(tells-28, promotes-34)
poss(viewpoints-36, your-35)
dobj(promotes-34, viewpoints-36)

(ROOT
  (NP (NNP Gay) (NNP Gene) (. ?)))

nn(Gene-2, Gay-1)
root(ROOT-0, Gene-2)

(ROOT
  (S
    (INTJ (UH Please))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (VP (VBN been)
        (VP (VBN proved)
          (NP (DT a) (NN forgery))
          (NP (DT a) (JJ long) (NN time) (RB ago)))))
    (. .)))

dep(proved-6, Please-1)
nsubjpass(proved-6, that-3)
auxpass(proved-6, 's-4)
auxpass(proved-6, been-5)
root(ROOT-0, proved-6)
det(forgery-8, a-7)
iobj(proved-6, forgery-8)
det(time-11, a-9)
amod(time-11, long-10)
dobj(proved-6, time-11)
advmod(time-11, ago-12)

(ROOT
  (S
    (NP (RB Only) (DT the) (JJ pro-gay) (NN community))
    (VP (VBZ keeps)
      (S
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP
                (VP (VB dig)
                  (PRT (RP up))
                  (NP (DT that) (JJ dead) (NN horse)))
                (CC and)
                (VP (VB make)
                  (S
                    (NP (PRP it))
                    (VP (VB walk))))))))))
    (. !)))

advmod(community-4, Only-1)
det(community-4, the-2)
amod(community-4, pro-gay-3)
nsubj(keeps-5, community-4)
root(ROOT-0, keeps-5)
xcomp(keeps-5, trying-6)
aux(dig-8, to-7)
xcomp(trying-6, dig-8)
prt(dig-8, up-9)
det(horse-12, that-10)
amod(horse-12, dead-11)
dobj(dig-8, horse-12)
xcomp(trying-6, make-14)
conj_and(dig-8, make-14)
nsubj(walk-16, it-15)
ccomp(make-14, walk-16)

(ROOT
  (S
    (NP (NNP Homosexuality))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ learned) (NN behavior))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB be)
                (VP (VBN fixed)
                  (SBAR (IN if)
                    (S
                      (VP (VBN dealt)
                        (PP (IN with)
                          (ADVP (RB correctly)))))))))))))
    (. .)))

nsubj(behavior-5, Homosexuality-1)
cop(behavior-5, is-2)
det(behavior-5, a-3)
amod(behavior-5, learned-4)
root(ROOT-0, behavior-5)
nsubjpass(fixed-9, behavior-5)
aux(fixed-9, can-7)
auxpass(fixed-9, be-8)
rcmod(behavior-5, fixed-9)
mark(dealt-11, if-10)
advcl(fixed-9, dealt-11)
prep(dealt-11, with-12)
pcomp(with-12, correctly-13)

(ROOT
  (S
    (PP (RB Just) (IN like)
      (NP (DT an) (JJ alcoholic)))
    (, ,)
    (ADVP (RB though))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NN person))
        (VP
          (VP (VBZ is) (RB n't)
            (ADJP (JJ willing)))
          (CC and)
          (VP (VBZ does) (RB n't)
            (VP
              (VP (VB have)
                (NP (DT the) (NN will-power)))
              (CC or)
              (VP (VB help)
                (PP (IN from)
                  (NP (NNP God)))))))))
    (ADVP (RB then))
    (NP (PRP they))
    (VP (MD 'll)
      (VP (VB fail)))
    (. .)))

advmod(fail-27, Just-1)
advcl(fail-27, like-2)
det(alcoholic-4, an-3)
prep_like(fail-27, alcoholic-4)
advmod(fail-27, though-6)
mark(willing-13, if-8)
det(person-10, the-9)
nsubj(willing-13, person-10)
nsubj(have-17, person-10)
cop(willing-13, is-11)
neg(willing-13, n't-12)
dep(fail-27, willing-13)
aux(have-17, does-15)
neg(have-17, n't-16)
conj_and(willing-13, have-17)
dep(fail-27, have-17)
det(will-power-19, the-18)
dobj(have-17, will-power-19)
conj_and(willing-13, help-21)
conj_or(have-17, help-21)
prep_from(help-21, God-23)
advmod(fail-27, then-24)
nsubj(fail-27, they-25)
aux(fail-27, 'll-26)
root(ROOT-0, fail-27)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (JJ deep) (NN issue))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ requires)
                (NP (NN determination)
                  (CC and)
                  (NN help))
                (S
                  (VP (TO to)
                    (VP (VB overcome))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN overcome)))))
    (. .)))

nsubj(issue-5, It-1)
cop(issue-5, 's-2)
det(issue-5, a-3)
amod(issue-5, deep-4)
root(ROOT-0, issue-5)
nsubj(requires-7, issue-5)
rcmod(issue-5, requires-7)
dobj(requires-7, determination-8)
dobj(requires-7, help-10)
conj_and(determination-8, help-10)
aux(overcome-12, to-11)
xcomp(requires-7, overcome-12)
nsubjpass(overcome-18, it-15)
aux(overcome-18, can-16)
auxpass(overcome-18, be-17)
conj_but(issue-5, overcome-18)
nsubj(requires-7, overcome-18)

