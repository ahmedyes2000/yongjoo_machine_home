(ROOT
  (INTJ (UH NO) (. !)))

root(ROOT-0, NO-1)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG making)
        (NP
          (NP (DT an) (NN assumption))
          (PP (IN as) (TO to)
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP (NNS people))
                (VP (VBP are)
                  (VP (VBN opposed)
                    (PP (TO to)
                      (NP (JJ same) (NN sex) (NN marriage)))))))))))
    (. !)))

nsubj(making-3, You-1)
aux(making-3, 're-2)
root(ROOT-0, making-3)
det(assumption-5, an-4)
dobj(making-3, assumption-5)
advmod(opposed-11, why-8)
nsubjpass(opposed-11, people-9)
auxpass(opposed-11, are-10)
prepc_as_to(assumption-5, opposed-11)
amod(marriage-15, same-13)
nn(marriage-15, sex-14)
prep_to(opposed-11, marriage-15)

(ROOT
  (S
    (VP (VB Show)
      (S
        (NP (PRP me))
        (NP
          (NP (DT the) (NNS data))
          (VP (VBG proving)
            (SBAR (IN that) (`` ``)
              (S
                (NP (NNS people))
                (VP (VBP are)
                  (ADVP (RB just))
                  (VP
                    (ADVP (RB willfully))
                    (VBG denying)
                    (NP (DT this) (NN fact))))))
            (SBAR (IN because)
              (S
                (NP (PRP it))
                (VP (VBZ does) (RB n't)
                  (VP (VB fit)
                    (PP (IN into)
                      (NP (PRP$ their) (NN world) (NN view)))))))))))
    (. .)))

root(ROOT-0, Show-1)
nsubj(data-4, me-2)
det(data-4, the-3)
xcomp(Show-1, data-4)
partmod(data-4, proving-5)
complm(denying-12, that-6)
nsubj(denying-12, people-8)
aux(denying-12, are-9)
advmod(denying-12, just-10)
advmod(denying-12, willfully-11)
ccomp(proving-5, denying-12)
det(fact-14, this-13)
dobj(denying-12, fact-14)
mark(fit-19, because-15)
nsubj(fit-19, it-16)
aux(fit-19, does-17)
neg(fit-19, n't-18)
advcl(proving-5, fit-19)
poss(view-23, their-21)
nn(view-23, world-22)
prep_into(fit-19, view-23)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (PRP me))
        (CC and)
        (NP
          (NP (JJ whole) (NN lot))
          (PP (IN of)
            (NP (JJ other) (NNS people))))))
    (. .)))

nsubj(me-3, That-1)
cop(me-3, 's-2)
root(ROOT-0, me-3)
amod(lot-6, whole-5)
conj_and(me-3, lot-6)
amod(people-9, other-8)
prep_of(lot-6, people-9)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (NN part))
        (PP (IN of)
          (NP (DT the) (NN problem)))))
    (. .)))

nsubj(part-4, This-2)
cop(part-4, is-3)
root(ROOT-0, part-4)
det(problem-7, the-6)
prep_of(part-4, problem-7)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP are)
      (VP (VBG going)
        (PRT (RP off))
        (NP (DT half) (JJ cocked) (VBG making) (NN assumption))
        (PP (DT all) (IN over)
          (NP (DT the) (NN place)))))
    (: ...)))

nsubj(going-3, People-1)
aux(going-3, are-2)
root(ROOT-0, going-3)
prt(going-3, off-4)
det(assumption-8, half-5)
amod(assumption-8, cocked-6)
amod(assumption-8, making-7)
dobj(going-3, assumption-8)
dep(going-3, all-9)
det(place-12, the-11)
prep_over(going-3, place-12)

(ROOT
  (S (CC and)
    (NP (PRP they))
    (VP (VBP are) (RB not)
      (NP
        (ADJP (RB even) (JJ constructive))
        (NNS assumptions)))
    (. .)))

cc(assumptions-7, and-1)
nsubj(assumptions-7, they-2)
cop(assumptions-7, are-3)
neg(assumptions-7, not-4)
advmod(constructive-6, even-5)
amod(assumptions-7, constructive-6)
root(ROOT-0, assumptions-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (JJ other) (NN side))
        (VP (VBZ does) (RB n't)
          (VP (VB agree)
            (PP (IN with)
              (NP (PRP you)))))))
    (, ,)
    (ADVP (RB just))
    (VP
      (VP (VB malign)
        (NP (PRP them)))
      (CC and)
      (VP (VB call)
        (NP (PRP them))
        (NP (NNS names))))
    (. .)))

mark(agree-7, If-1)
det(side-4, the-2)
amod(side-4, other-3)
nsubj(agree-7, side-4)
aux(agree-7, does-5)
neg(agree-7, n't-6)
advcl(malign-12, agree-7)
prep_with(agree-7, you-9)
advmod(malign-12, just-11)
root(ROOT-0, malign-12)
dobj(malign-12, them-13)
conj_and(malign-12, call-15)
iobj(call-15, them-16)
dobj(call-15, names-17)

(ROOT
  (S
    (S
      (NP (DT The) (NN assumption))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ 's)
              (NP
                (NP (CD one) (NN reason))
                (CC and)
                (NP
                  (NP (RB only) (CD one) (NN reason))
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (DT the) (JJ religious) (NN right))
                      (VP (VBZ is)
                        (PP (IN against)
                          (NP (JJ same) (NN sex) (NN marriage)))))))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBP 're)
        (ADJP (JJ bigots))))
    (. .)))

det(assumption-2, The-1)
nsubj(is-3, assumption-2)
root(ROOT-0, is-3)
complm('s-6, that-4)
expl('s-6, there-5)
ccomp(is-3, 's-6)
num(reason-8, one-7)
nsubj('s-6, reason-8)
advmod(reason-12, only-10)
num(reason-12, one-11)
nsubj('s-6, reason-12)
conj_and(reason-8, reason-12)
advmod(is-17, why-13)
det(right-16, the-14)
amod(right-16, religious-15)
nsubj(is-17, right-16)
rcmod(reason-12, is-17)
amod(marriage-21, same-19)
nn(marriage-21, sex-20)
prep_against(is-17, marriage-21)
nsubj(bigots-25, they-23)
cop(bigots-25, 're-24)
parataxis(is-3, bigots-25)

(ROOT
  (S
    (PP (VBN Come)
      (PP (IN on)))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (ADVP (RBR smarter))
      (PP (IN than)
        (NP (DT that))))
    (. !)))

prep('re-5, Come-1)
pcomp(Come-1, on-2)
prep(Come-1, on-2)
nsubj('re-5, you-4)
root(ROOT-0, 're-5)
advmod('re-5, smarter-6)
prep_than('re-5, that-8)

(ROOT
  (S
    (NP (DT The) (NN world))
    (VP (VBZ is) (RB not)
      (ADJP (JJ black)
        (CC and)
        (JJ white)))
    (. .)))

det(world-2, The-1)
nsubj(black-5, world-2)
nsubj(white-7, world-2)
cop(black-5, is-3)
neg(black-5, not-4)
root(ROOT-0, black-5)
conj_and(black-5, white-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS shades))
        (PP (IN in)
          (NP (IN between)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, shades-3)
prep(shades-3, in-4)
pobj(in-4, between-5)

