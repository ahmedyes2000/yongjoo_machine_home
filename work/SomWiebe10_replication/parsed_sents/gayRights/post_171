(ROOT
  (S
    (NP (PRP$ My)
      (ADJP (RB dear))
      (NN Baba))
    (, ,)
    (PP (IN as)
      (NP
        (NP (DT a) (NN scientist))
        (PP (IN in)
          (NP (DT a) (JJ different) (NN field)))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB tell)
        (NP (PRP you))
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ has) (RB not)
              (VP (VBN been)
                (NP (JJ enough) (NN time))
                (S
                  (VP (TO to)
                    (VP (VB come)
                      (PRT (RP up))
                      (PP (IN with)
                        (NP
                          (NP (DT a) (JJ scientific) (NN proof))
                          (NP (DT either) (NN way)))))))))))))
    (. .)))

poss(Baba-3, My-1)
amod(Baba-3, dear-2)
nsubj(tell-15, Baba-3)
det(scientist-7, a-6)
prep_as(tell-15, scientist-7)
det(field-11, a-9)
amod(field-11, different-10)
prep_in(scientist-7, field-11)
nsubj(tell-15, I-13)
aux(tell-15, can-14)
root(ROOT-0, tell-15)
dobj(tell-15, you-16)
complm(time-23, that-17)
expl(time-23, there-18)
aux(time-23, has-19)
neg(time-23, not-20)
cop(time-23, been-21)
amod(time-23, enough-22)
ccomp(tell-15, time-23)
aux(come-25, to-24)
xcomp(time-23, come-25)
prt(come-25, up-26)
det(proof-30, a-28)
amod(proof-30, scientific-29)
prep_with(come-25, proof-30)
det(way-32, either-31)
dep(proof-30, way-32)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (PRP I))
    (VP (VBD did)
      (SBAR
        (S
          (VP (VBP say)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NNS children))
                  (PP (IN from)
                    (NP
                      (NP (NNS homes))
                      (PP (IN with)
                        (NP (JJ same) (NN sex) (NNS parents))))))
                (VP (MD will)
                  (VP
                    (VP (VB grow)
                      (PRT (RP up)))
                    (CC and)
                    (VP (VB become)
                      (NP
                        (ADJP (RB very) (JJ good))
                        (NNS citizens)))))))))))
    (. .)))

advmod(did-4, Besides-1)
nsubj(did-4, I-3)
root(ROOT-0, did-4)
ccomp(did-4, say-5)
complm(grow-16, that-6)
det(children-8, the-7)
nsubj(grow-16, children-8)
prep_from(children-8, homes-10)
amod(parents-14, same-12)
nn(parents-14, sex-13)
prep_with(homes-10, parents-14)
aux(grow-16, will-15)
ccomp(say-5, grow-16)
prt(grow-16, up-17)
cop(citizens-22, become-19)
advmod(good-21, very-20)
amod(citizens-22, good-21)
ccomp(say-5, citizens-22)
conj_and(grow-16, citizens-22)

(ROOT
  (S
    (ADVP (RB Finally))
    (PP (IN as)
      (NP (DT a) (NN father)))
    (NP (PRP I))
    (VP (VBP know)
      (NP (NNS facts))
      (PP (IN about)
        (NP (PRP$ my) (NNS children)))
      (SBAR (IN that)
        (S
          (NP (DT no) (NN doctor) (, ,) (NN psychiatrist)
            (CC or)
            (NN scientist))
          (VP (MD could)
            (VP (VB tell)
              (NP (PRP me)))))))
    (. .)))

advmod(know-6, Finally-1)
det(father-4, a-3)
prep_as(know-6, father-4)
nsubj(know-6, I-5)
root(ROOT-0, know-6)
dobj(know-6, facts-7)
poss(children-10, my-9)
prep_about(know-6, children-10)
complm(tell-19, that-11)
det(doctor-13, no-12)
nsubj(tell-19, doctor-13)
conj_or(doctor-13, psychiatrist-15)
nsubj(tell-19, psychiatrist-15)
conj_or(doctor-13, scientist-17)
nsubj(tell-19, scientist-17)
aux(tell-19, could-18)
ccomp(know-6, tell-19)
dobj(tell-19, me-20)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (NP
          (NP (DT a) (NN matter))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (MD can)
                (VP (VB answer))))))))
    (CC or)
    (S
      (NP (PRP$ my) (NN wife))
      (VP (MD can)))
    (. .)))

nsubj(matter-5, It-1)
cop(matter-5, 's-2)
neg(matter-5, not-3)
det(matter-5, a-4)
root(ROOT-0, matter-5)
dobj(answer-9, matter-5)
rel(answer-9, what-6)
nsubj(answer-9, I-7)
aux(answer-9, can-8)
rcmod(matter-5, answer-9)
poss(wife-12, my-11)
nsubj(can-13, wife-12)
conj_or(matter-5, can-13)
dobj(answer-9, can-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN difference))
        (PP (IN between)
          (NP
            (NP (DT a) (JJ femail) (NN sensitivity))
            (CC and)
            (NP
              (NP (DT that))
              (PP (IN of)
                (NP (DT a) (NN man) (POS 's)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ makes)
                    (NP (PRP$ my) (NN wife)
                      (CC and)
                      (NN I))
                    (NP (DT a) (JJ perft) (NN team)
                      (S
                        (VP (TO to)
                          (VP (VB deal)
                            (PP (IN with)
                              (NP
                                (NP (PRP$ our) (NNS children) (POS 's))
                                (JJ emotional) (NNS needs)))))))))))))))
    (. .)))

nsubj(difference-4, It-1)
cop(difference-4, 's-2)
det(difference-4, the-3)
root(ROOT-0, difference-4)
det(sensitivity-8, a-6)
amod(sensitivity-8, femail-7)
prep_between(difference-4, sensitivity-8)
prep_between(difference-4, that-10)
conj_and(sensitivity-8, that-10)
nsubj(makes-16, that-10)
det(man-13, a-12)
prep_of(that-10, man-13)
possessive(man-13, 's-14)
rcmod(that-10, makes-16)
poss(wife-18, my-17)
dep(makes-16, wife-18)
dep(makes-16, I-20)
conj_and(wife-18, I-20)
det(team-23, a-21)
amod(team-23, perft-22)
dobj(makes-16, team-23)
aux(deal-25, to-24)
infmod(team-23, deal-25)
poss(children-28, our-27)
poss(needs-31, children-28)
amod(needs-31, emotional-30)
prep_with(deal-25, needs-31)

(ROOT
  (S (CC But)
    (NP (DT that))
    (VP (VBZ 's) (RB not)
      (NP (DT the) (NN point)))
    (. .)))

cc(point-6, But-1)
nsubj(point-6, that-2)
cop(point-6, 's-3)
neg(point-6, not-4)
det(point-6, the-5)
root(ROOT-0, point-6)

(ROOT
  (S
    (PP (RB Just) (IN like)
      (NP
        (NP (DT the) (NNS kids))
        (VP (VBG growing)
          (PRT (RP up))
          (PP (IN in)
            (NP (JJ certain) (NNS areas)))
          (PP (IN like)
            (NP (NNP East) (NNP LA))))))
    (, ,)
    (NP (NNP Compton) (NNP etc))
    (VP
      (VP (VBP are)
        (PP (IN at)
          (NP (DT a) (NN disadvantage))))
      (CC but)
      (VP (MD can)
        (VP (VB grow)
          (PRT (RP up))
          (S
            (VP (TO to)
              (VP (VB become)
                (NP
                  (NP (DT the) (NN president))
                  (PP (IN of)
                    (NP (DT the) (VBN united) (NNS states))))))))))
    (. .)))

advmod(are-16, Just-1)
advcl(are-16, like-2)
det(kids-4, the-3)
prep_like(are-16, kids-4)
partmod(kids-4, growing-5)
prt(growing-5, up-6)
amod(areas-9, certain-8)
prep_in(growing-5, areas-9)
nn(LA-12, East-11)
prep_like(growing-5, LA-12)
nn(etc-15, Compton-14)
nsubj(are-16, etc-15)
nsubj(grow-22, etc-15)
xsubj(president-27, etc-15)
root(ROOT-0, are-16)
det(disadvantage-19, a-18)
prep_at(are-16, disadvantage-19)
aux(grow-22, can-21)
conj_but(are-16, grow-22)
prt(grow-22, up-23)
aux(president-27, to-24)
cop(president-27, become-25)
det(president-27, the-26)
xcomp(grow-22, president-27)
det(states-31, the-29)
amod(states-31, united-30)
prep_of(president-27, states-31)

(ROOT
  (S (CC But)
    (S
      (NP (DT the) (NN disadvantage))
      (VP (VBZ is)
        (ADVP (RB still))
        (ADVP (RB there))))
    (CC and)
    (S
      (NP (DT those) (NNS kids))
      (VP (MD will)
        (VP (DT either)
          (VP (VB have)
            (S
              (VP (TO to)
                (VP (VB work)
                  (ADVP (RBR harder))
                  (S
                    (VP (TO to)
                      (VP (VB learn)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (VBZ is)
                              (ADJP
                                (NP (DT a) (VBN given))
                                (PP (TO to)
                                  (NP
                                    (NP (DT the) (NNS kids))
                                    (PP (IN with)
                                      (NP
                                        (NP (JJ opposite) (NN sex) (NNS parents))
                                        (CC or)
                                        (S
                                          (NP (PRP they))
                                          (VP (MD may)
                                            (ADVP (RB never))
                                            (VP (VB get)
                                              (S
                                                (VP (TO to)
                                                  (VP (VB know)
                                                    (NP (JJ certain) (NNS realities))))))))))))
                                (SBAR (IN until)
                                  (S
                                    (NP (PRP they))
                                    (VP (VBP get)
                                      (ADJP (VBN married)
                                        (PP (TO to)
                                          (NP (DT the) (JJ opposite) (NN sex))))))))))))))))))
          (CC and)
          (VP (VB discover)
            (NP (DT a) (JJ whole) (JJ new) (NN world))))))
    (. .)))

det(disadvantage-3, the-2)
nsubj(is-4, disadvantage-3)
root(ROOT-0, is-4)
advmod(is-4, still-5)
advmod(is-4, there-6)
det(kids-9, those-8)
nsubj(have-12, kids-9)
xsubj(work-14, kids-9)
nsubj(discover-47, kids-9)
aux(have-12, will-10)
preconj(have-12, either-11)
conj_and(is-4, have-12)
aux(work-14, to-13)
xcomp(have-12, work-14)
advmod(work-14, harder-15)
aux(learn-17, to-16)
xcomp(work-14, learn-17)
nsubj(a-20, what-18)
cop(a-20, is-19)
ccomp(learn-17, a-20)
amod(a-20, given-21)
det(kids-24, the-23)
prep_to(a-20, kids-24)
amod(parents-28, opposite-26)
nn(parents-28, sex-27)
prep_with(kids-24, parents-28)
nsubj(get-33, they-30)
xsubj(know-35, they-30)
aux(get-33, may-31)
neg(get-33, never-32)
prep_with(kids-24, get-33)
conj_or(parents-28, get-33)
aux(know-35, to-34)
xcomp(get-33, know-35)
amod(realities-37, certain-36)
dobj(know-35, realities-37)
mark(married-41, until-38)
nsubjpass(married-41, they-39)
auxpass(married-41, get-40)
ccomp(a-20, married-41)
det(sex-45, the-43)
amod(sex-45, opposite-44)
prep_to(married-41, sex-45)
conj_and(is-4, discover-47)
conj_and(have-12, discover-47)
det(world-51, a-48)
amod(world-51, whole-49)
amod(world-51, new-50)
dobj(discover-47, world-51)

(ROOT
  (S
    (NP
      (NP (DT Another) (NN point) (JJ many))
      (PP (IN of)
        (NP (PRP us))))
    (ADVP (RB forget))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NN science))
          (VP (VBZ is) (RB not)
            (NP (NN everything))))))
    (. .)))

det(point-2, Another-1)
nsubj(is-7, point-2)
amod(point-2, many-3)
prep_of(point-2, us-5)
advmod(is-7, forget-6)
root(ROOT-0, is-7)
complm(everything-12, that-8)
nsubj(everything-12, science-9)
cop(everything-12, is-10)
neg(everything-12, not-11)
ccomp(is-7, everything-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP it))
        (VP (VBZ comes)
          (PP (TO to)
            (NP
              (NP
                (NP (NNS emotions))
                (PP (IN of)
                  (NP (DT a) (JJ human) (NN being))))
              (, ,)
              (CC or)
              (NP
                (NP (DT the) (NN behavior))
                (PP (IN of)
                  (NP (DT a) (NN child) (NN science)))))))))
    (VP (VBZ has)
      (NP (DT a) (JJ long) (NN way)
        (S
          (VP (TO to)
            (VP (VB go))))))
    (. .)))

advmod(comes-3, When-1)
nsubj(comes-3, it-2)
advcl(has-18, comes-3)
csubj(has-18, comes-3)
prep_to(comes-3, emotions-5)
det(being-9, a-7)
amod(being-9, human-8)
prep_of(emotions-5, being-9)
det(behavior-13, the-12)
prep_to(comes-3, behavior-13)
conj_or(emotions-5, behavior-13)
det(science-17, a-15)
nn(science-17, child-16)
prep_of(behavior-13, science-17)
root(ROOT-0, has-18)
det(way-21, a-19)
amod(way-21, long-20)
dobj(has-18, way-21)
aux(go-23, to-22)
infmod(way-21, go-23)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (NNS 1000s))
          (PP (IN of)
            (NP
              (NP (NNS therapists))
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB help)
                      (NP (NNS people)))))))))))
    (CC but)
    (S
      (S
        (NP (PRP they))
        (VP (VBP admit)
          (SBAR (IN that)
            (S
              (NP (NN help))
              (VP (VBZ comes)
                (PP (IN from)
                  (NP (IN within))))))))
      (, ,)
      (S
        (NP
          (NP (NNS therapists))
          (PRN (-LRB- -LRB-)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (MD could)
                  (VP (VB be)
                    (NP
                      (NP (DT the) (NN scientist))
                      (PP (IN in)
                        (NP (DT this) (NN case))))))))
            (-RRB- -RRB-)))
        (VP (MD ca)
          (ADVP (RB only))
          (VP (VB give)
            (NP (NNS opinions))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, 1000s-3)
prep_of(1000s-3, therapists-5)
xsubj(help-8, therapists-5)
partmod(therapists-5, trying-6)
aux(help-8, to-7)
xcomp(trying-6, help-8)
dobj(help-8, people-9)
nsubj(admit-12, they-11)
conj_but(are-2, admit-12)
complm(comes-15, that-13)
nsubj(comes-15, help-14)
ccomp(admit-12, comes-15)
prep(comes-15, from-16)
pobj(from-16, within-17)
nsubj(give-32, therapists-19)
nsubj(scientist-25, who-21)
aux(scientist-25, could-22)
cop(scientist-25, be-23)
det(scientist-25, the-24)
dep(therapists-19, scientist-25)
det(case-28, this-27)
prep_in(scientist-25, case-28)
aux(give-32, ca-30)
advmod(give-32, only-31)
dep(admit-12, give-32)
dobj(give-32, opinions-33)

(ROOT
  (S
    (NP (DT no) (NNS facts))
    (VP (VBD involved))
    (. .)))

det(facts-2, no-1)
nsubj(involved-3, facts-2)
root(ROOT-0, involved-3)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is) (RB not)
        (NP (NNP Math)
          (CC or)
          (NNP Physics))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (NNS feelings)))
    (. .)))

nsubj(Math-4, This-1)
cop(Math-4, is-2)
neg(Math-4, not-3)
ccomp(feelings-10, Math-4)
conj_or(Math-4, Physics-6)
ccomp(feelings-10, Physics-6)
nsubj(feelings-10, it-8)
cop(feelings-10, 's-9)
root(ROOT-0, feelings-10)

