(ROOT
  (S
    (SBAR (IN If)
      (S
        (ADVP (RB homosexuality))
        (VP (VBZ is)
          (ADJP (JJ unnatural)))))
    (, ,)
    (S
      (ADVP (RB then))
      (ADVP (RB surely))
      (NP (PRP$ its) (NN behavior))
      (VP (MD would) (RB not)
        (VP (VB be)
          (VP (VBN found)
            (PP (IN in)
              (NP
                (NP (NNS humans))
                (PP (IN across)
                  (NP (DT the) (NN globe)))))))))
    (: ;)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is) (: --)
        (S
          (ADJP (VB even)
            (PP (IN in)
              (NP (NNS cultures))))
          (SBAR
            (WHADVP (WRB where))
            (S
              (S
                (VP (VBG acting)
                  (NP (PRP it))
                  (PRT (RP out))))
              (VP (VBZ is)
                (ADJP (JJ punishable)
                  (PP (IN by)
                    (NP (NN death))))))))))
    (. .)))

mark(unnatural-4, If-1)
advmod(unnatural-4, homosexuality-2)
cop(unnatural-4, is-3)
advcl(found-13, unnatural-4)
advmod(found-13, then-6)
advmod(found-13, surely-7)
poss(behavior-9, its-8)
nsubjpass(found-13, behavior-9)
aux(found-13, would-10)
neg(found-13, not-11)
auxpass(found-13, be-12)
root(ROOT-0, found-13)
prep_in(found-13, humans-15)
det(globe-18, the-17)
prep_across(humans-15, globe-18)
nsubj(is-22, it-21)
conj_but(found-13, is-22)
dep(in-25, even-24)
dep(punishable-32, in-25)
pobj(in-25, cultures-26)
advmod(punishable-32, where-27)
csubj(punishable-32, acting-28)
dobj(acting-28, it-29)
prt(acting-28, out-30)
cop(punishable-32, is-31)
parataxis(is-22, punishable-32)
prep_by(punishable-32, death-34)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (ADVP (RB homosexuality))
          (VP (VBD were)
            (NP (DT a) (NN construct)))))
      (, ,)
      (NP (PRP it))
      (VP (MD would) (RB n't)
        (VP (VB exist)
          (PP (IN in)
            (NP (DT the) (JJ non-human) (NN world))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ does)))
    (. .)))

mark(construct-5, If-1)
advmod(construct-5, homosexuality-2)
cop(construct-5, were-3)
det(construct-5, a-4)
advcl(exist-10, construct-5)
nsubj(exist-10, it-7)
aux(exist-10, would-8)
neg(exist-10, n't-9)
root(ROOT-0, exist-10)
det(world-14, the-12)
amod(world-14, non-human-13)
prep_in(exist-10, world-14)
nsubj(does-18, it-17)
conj_but(exist-10, does-18)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ forced) (NN ideal))
      (SBAR
        (WHNP (WDT that))
        (S
          (ADVP (RB homosexuality))
          (VP (VBZ is) (`` ``)
            (ADJP (JJ wrong))
            ('' '')))))
    (, ,)
    (VP (VBZ is)
      (NP (DT a) (NN judgment) (NN call)))
    (. .)))

det(ideal-3, The-1)
amod(ideal-3, forced-2)
nsubj(wrong-8, ideal-3)
nsubj(call-14, ideal-3)
advmod(wrong-8, homosexuality-5)
cop(wrong-8, is-6)
rcmod(ideal-3, wrong-8)
cop(call-14, is-11)
det(call-14, a-12)
nn(call-14, judgment-13)
root(ROOT-0, call-14)

(ROOT
  (S
    (S
      (VP (VBG Living)
        (NP
          (NP
            (NP (CD one) (POS 's))
            (NN life))
          (NP (DT the) (NN way)))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP see)
              (SBAR
                (S
                  (NP (NN fit))
                  (VP (VBZ is) (RB not)
                    (ADJP (JJ wrong))))))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB simply))
    (VP (VBZ is))
    (. .)))

partmod(is-17, Living-1)
poss(life-4, one-2)
dobj(Living-1, life-4)
iobj(Living-1, life-4)
det(way-6, the-5)
dobj(Living-1, way-6)
dep(life-4, way-6)
complm(see-9, that-7)
nsubj(see-9, they-8)
ccomp(Living-1, see-9)
nsubj(wrong-13, fit-10)
cop(wrong-13, is-11)
neg(wrong-13, not-12)
ccomp(see-9, wrong-13)
nsubj(is-17, it-15)
advmod(is-17, simply-16)
root(ROOT-0, is-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (PP (IN like)
        (S
          (VP (VBG telling)
            (NP (DT a) (NN cat)
              (S
                (VP (TO to)
                  (VP (VB stop)
                    (NP (JJ eating) (NN meat))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
prepc_like('s-2, telling-4)
det(cat-6, a-5)
dobj(telling-4, cat-6)
aux(stop-8, to-7)
infmod(cat-6, stop-8)
amod(meat-10, eating-9)
dobj(stop-8, meat-10)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP
          (VP (VB do)
            (NP (PRP it)))
          (CC and)
          (VP (VB get)
            (ADJP (JJ upset))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (MD 'll)
        (ADVP (RB still))
        (VP (VB catch)
          (NP (DT a) (NN bird)))))
    (. .)))

nsubj(do-3, You-1)
nsubj(upset-7, You-1)
aux(do-3, can-2)
root(ROOT-0, do-3)
dobj(do-3, it-4)
dep(upset-7, get-6)
conj_and(do-3, upset-7)
nsubj(catch-13, they-10)
aux(catch-13, 'll-11)
advmod(catch-13, still-12)
conj_but(do-3, catch-13)
det(bird-15, a-14)
dobj(catch-13, bird-15)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP America) (POS 's))
        (NN resistance))
      (PP (TO to)
        (NP (NN sex)
          (CC and)
          (NN sexuality))))
    (ADVP (RB only))
    (VP
      (VP (VB perturb)
        (NP (PRP it)))
      (CC and)
      (VP (VB make)
        (S
          (NP (PRP it))
          (ADJP (JJ dysfunctional)))))
    (. .)))

poss(resistance-3, America-1)
nsubj(perturb-9, resistance-3)
nsubj(make-12, resistance-3)
prep_to(resistance-3, sex-5)
prep_to(resistance-3, sexuality-7)
conj_and(sex-5, sexuality-7)
advmod(perturb-9, only-8)
root(ROOT-0, perturb-9)
dobj(perturb-9, it-10)
conj_and(perturb-9, make-12)
nsubj(dysfunctional-14, it-13)
xcomp(make-12, dysfunctional-14)

(ROOT
  (S
    (VP (VB Judge) (RB not))
    (. .)))

root(ROOT-0, Judge-1)
neg(Judge-1, not-2)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB n't)
      (NP (PRP$ your) (NN place)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP (NNS others))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (VP (TO to)
                    (VP (VB live)
                      (NP (PRP$ their) (NN life)))))))))))
    (. .)))

nsubj(place-5, It-1)
cop(place-5, is-2)
neg(place-5, n't-3)
poss(place-5, your-4)
root(ROOT-0, place-5)
aux(tell-7, to-6)
infmod(place-5, tell-7)
dobj(tell-7, others-8)
advmod(live-11, how-9)
aux(live-11, to-10)
xcomp(tell-7, live-11)
poss(life-13, their-12)
dobj(live-11, life-13)

