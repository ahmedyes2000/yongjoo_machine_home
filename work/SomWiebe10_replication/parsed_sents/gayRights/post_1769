(ROOT
  (SBARQ (`` ``)
    (WHNP (WP Who))
    (SQ
      (VP (VBZ says)
        (SBAR
          (S
            (NP
              (NP (PRP$ your) (NN definition))
              (PP (IN of)
                (NP (NN family))))
            (VP (VBZ is)
              (ADJP (JJ correct)))))))
    (. ?)))

nsubj(says-3, Who-2)
root(ROOT-0, says-3)
poss(definition-5, your-4)
nsubj(correct-9, definition-5)
prep_of(definition-5, family-7)
cop(correct-9, is-8)
ccomp(says-3, correct-9)

(ROOT
  (S ('' '')
    (ADVP (RB Well))
    (, ,)
    (VP (VBP ha) (, ,) (VBP alot)
      (PP (IN of)
        (NP (NNS people)))
      (, ,)
      (PP (VBG including)
        (NP
          (NP (DT the) (NN majority))
          (PP (IN of)
            (NP (NNP California))))))
    (. .)))

advmod(ha-4, Well-2)
root(ROOT-0, ha-4)
dep(ha-4, alot-6)
prep_of(ha-4, people-8)
det(majority-12, the-11)
prep_including(ha-4, majority-12)
prep_of(majority-12, California-14)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP
            (NP (CD two) (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP love)
                  (NP (DT each) (JJ other))))))
          (VP (MD should) (RB not)
            (VP (VB be)
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB adopt)
                      (ADVP (RB merely))
                      (SBAR (IN because)
                        (S
                          (NP (PRP they))
                          (VP (VBP are)
                            (NP (DT the) (JJ same) (NN sex))))))))))))))
    (. ?)))

nsubj(think-3, You-2)
root(ROOT-0, think-3)
complm(able-14, that-4)
num(people-6, two-5)
nsubj(love-8, people-6)
nsubj(able-14, people-6)
rcmod(people-6, love-8)
det(other-10, each-9)
dobj(love-8, other-10)
aux(able-14, should-11)
neg(able-14, not-12)
cop(able-14, be-13)
ccomp(think-3, able-14)
aux(adopt-16, to-15)
xcomp(able-14, adopt-16)
advmod(adopt-16, merely-17)
mark(sex-23, because-18)
nsubj(sex-23, they-19)
cop(sex-23, are-20)
det(sex-23, the-21)
amod(sex-23, same-22)
advcl(adopt-16, sex-23)

(ROOT
  (S (`` ``)
    (VP (VB Merely)
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP think)
            (SBAR (IN that)
              (S
                (VP (VBZ is) (RB not)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (NNS kids))
                      (VP (MD should)
                        (VP (VB be)
                          (VP (VBN raised)))))))))))))
    (. .)))

root(ROOT-0, Merely-2)
mark(think-5, because-3)
nsubj(think-5, I-4)
advcl(Merely-2, think-5)
complm(is-7, that-6)
ccomp(think-5, is-7)
neg(is-7, not-8)
advmod(raised-13, how-9)
nsubjpass(raised-13, kids-10)
aux(raised-13, should-11)
auxpass(raised-13, be-12)
ccomp(is-7, raised-13)

(ROOT
  (S (CC And)
    (VP (VB im)
      (NP
        (NP (RB not) (DT a) (JJ big) (NN fan))
        (PP (IN of)
          (NP
            (NP (JJ single) (NNS people))
            (VP (VBG adopting))))))
    (. .)))

cc(im-2, And-1)
root(ROOT-0, im-2)
neg(fan-6, not-3)
det(fan-6, a-4)
amod(fan-6, big-5)
dobj(im-2, fan-6)
amod(people-9, single-8)
prep_of(fan-6, people-9)
partmod(people-9, adopting-10)

(ROOT
  (S
    (VP (VB Im)
      (S
        (VP
          (VP (RB not) (VBG saying)
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (VBP are)
                  (ADJP (RBR less) (JJ capaple))))))
          (, ,)
          (ADVP (RB im))
          (VP (VBG saying)
            (SBAR (IN that)
              (S
                (NP (PRP$ its))
                (ADJP (RB not) (JJ good)
                  (PP (IN for)
                    (NP (DT the) (NNS kids))))))))))
    (. .)))

root(ROOT-0, Im-1)
neg(saying-3, not-2)
ccomp(Im-1, saying-3)
complm(capaple-8, that-4)
nsubj(capaple-8, they-5)
cop(capaple-8, are-6)
advmod(capaple-8, less-7)
ccomp(saying-3, capaple-8)
advmod(saying-3, im-10)
dep(saying-3, saying-11)
complm(good-15, that-12)
dep(good-15, its-13)
neg(good-15, not-14)
dep(saying-11, good-15)
det(kids-18, the-17)
prep_for(good-15, kids-18)

