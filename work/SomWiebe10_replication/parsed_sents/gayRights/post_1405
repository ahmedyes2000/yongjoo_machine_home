(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (ADVP (RB rightly))
      (VP (VBN understood)
        (NP
          (NP (DT the) (NN conclusion))
          (PP (IN of)
            (NP (PRP$ my) (JJ recent) (NN argument)))
          (SBAR
            (WHPP (IN with)
              (WHNP (WDT which)))
            (S
              (NP (PRP you))
              (VP (VBP do) (RB not)
                (VP (VB agree))))))))
    (. .)))

dep(understood-6, Yes-1)
nsubj(understood-6, you-3)
aux(understood-6, have-4)
advmod(understood-6, rightly-5)
root(ROOT-0, understood-6)
det(conclusion-8, the-7)
dobj(understood-6, conclusion-8)
poss(argument-12, my-10)
amod(argument-12, recent-11)
prep_of(conclusion-8, argument-12)
rel(agree-18, which-14)
nsubj(agree-18, you-15)
aux(agree-18, do-16)
neg(agree-18, not-17)
rcmod(conclusion-8, agree-18)

(ROOT
  (S
    (ADVP (RB Next))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBD stated)
          (PP (IN in)
            (NP (DT the) (JJ second) (NN paragraph)))))
      (, ,))
    (ADVP (RB Now))
    (VP (VBD parenthood)
      (SBAR
        (S
          (VP (VBZ has)
            (NP
              (NP (JJ many) (NNS definitions))
              (CC and)
              (NP
                (NP (DT the) (NNS ones))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP go)
                      (PP (IN into)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP I))
                            (VP (VBD called)
                              (SBAR
                                (S
                                  (NP (`` ``) (NN maintenance) ('' ''))
                                  (VP (VBZ is)
                                    (SBAR
                                      (WHNP (WP what))
                                      (S
                                        (NP (PRP I))
                                        (VP (VBP 'm)
                                          (ADJP (RB directly) (VBN interested)
                                            (PRT (RP in))))))))))))))))))))))
    (. .)))

advmod(parenthood-11, Next-1)
nsubj(stated-4, you-3)
parataxis(parenthood-11, stated-4)
det(paragraph-8, the-6)
amod(paragraph-8, second-7)
prep_in(stated-4, paragraph-8)
advmod(parenthood-11, Now-10)
root(ROOT-0, parenthood-11)
ccomp(parenthood-11, has-12)
amod(definitions-14, many-13)
dobj(has-12, definitions-14)
det(ones-17, the-16)
dobj(has-12, ones-17)
conj_and(definitions-14, ones-17)
nsubj(go-19, ones-17)
rcmod(ones-17, go-19)
dep(called-23, what-21)
dobj(is-27, what-21)
nsubj(called-23, I-22)
prepc_into(go-19, called-23)
nsubj(is-27, maintenance-25)
ccomp(called-23, is-27)
dobj(interested-32, what-28)
nsubjpass(interested-32, I-29)
auxpass(interested-32, 'm-30)
advmod(interested-32, directly-31)
ccomp(is-27, interested-32)
dep(interested-32, in-33)

(ROOT
  (NP
    (NP (PRP$ My) (NN response))
    (: :)
    (NP
      (NP
        (NP (DT The) (NN premise))
        (SBAR
          (S
            (VP (VBZ posits)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN term) (NN parenthood))
                  (VP (VBZ has))))))))
      (, ,)
      (NP (JJ many) (NNS definitions)))
    (. .)))

poss(response-2, My-1)
root(ROOT-0, response-2)
det(premise-5, The-4)
dep(response-2, premise-5)
rcmod(premise-5, posits-6)
complm(has-11, that-7)
det(parenthood-10, the-8)
nn(parenthood-10, term-9)
nsubj(has-11, parenthood-10)
ccomp(posits-6, has-11)
amod(definitions-14, many-13)
appos(premise-5, definitions-14)

(ROOT
  (S
    (NP (DT The) (NN principle))
    (: :)
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (DT a) (NN man)
            (CC or)
            (NN woman))
          (ADVP (RB no) (RB longer))
          (VP (VBZ wants)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ responsible)
                    (PP (IN for)
                      (NP
                        (NP (DT that))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (NP (PRP theirs))))))))))))))
      (, ,)
      (NP (PRP they))
      (ADVP (RB no) (RB longer))
      (VP (VBP have)
        (NP
          (NP (NNS rights))
          (PP (TO to)
            (NP
              (NP (DT that))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (NP (PRP theirs))))))))))
    (. .)))

det(principle-2, The-1)
dep(have-24, principle-2)
advmod(wants-11, When-4)
det(man-6, a-5)
nsubj(wants-11, man-6)
xsubj(responsible-14, man-6)
conj_or(man-6, woman-8)
nsubj(wants-11, woman-8)
xsubj(responsible-14, woman-8)
advmod(longer-10, no-9)
advmod(wants-11, longer-10)
advcl(have-24, wants-11)
aux(responsible-14, to-12)
cop(responsible-14, be-13)
xcomp(wants-11, responsible-14)
prep_for(responsible-14, that-16)
nsubj(theirs-19, that-16)
cop(theirs-19, is-18)
rcmod(that-16, theirs-19)
nsubj(have-24, they-21)
advmod(longer-23, no-22)
advmod(have-24, longer-23)
root(ROOT-0, have-24)
dobj(have-24, rights-25)
prep_to(rights-25, that-27)
nsubj(theirs-30, that-27)
cop(theirs-30, is-29)
rcmod(that-27, theirs-30)

(ROOT
  (S (-LRB- -LRB-)
    (NP (NNP Lucidly))
    (VP (VBD stated)
      (PP (IN for)
        (NP
          (NP (DT the) (NN debate) (-RRB- -RRB-) (NN A.))
          (SBAR
            (S
              (NP (DT A) (NN husband)
                (CC and)
                (NN wife))
              (VP (VBP decide)
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBP want)
                      (S
                        (VP (TO to)
                          (VP (VB get)
                            (ADJP (JJ rid)))))))))))
          (PP (IN of)
            (NP (PRP$ their) (NN house))))))
    (: ;)
    (S
      (NP (PRP they))
      (ADVP (RB no) (RB longer))
      (VP (VBP have)
        (NP (DT a) (NN right)
          (S
            (VP (TO to)
              (VP (VB choose)
                (SBAR
                  (WHNP (WP whom))
                  (S
                    (VP (VBZ receives)
                      (NP (DT the) (NN house)))))))))))
    (. .)))

nsubj(stated-3, Lucidly-2)
root(ROOT-0, stated-3)
det(A.-8, the-5)
nn(A.-8, debate-6)
prep_for(stated-3, A.-8)
det(husband-10, A-9)
nsubj(decide-13, husband-10)
conj_and(husband-10, wife-12)
nsubj(decide-13, wife-12)
rcmod(A.-8, decide-13)
nsubj(want-15, they-14)
xsubj(rid-18, they-14)
ccomp(decide-13, want-15)
aux(rid-18, to-16)
dep(rid-18, get-17)
xcomp(want-15, rid-18)
poss(house-21, their-20)
prep_of(A.-8, house-21)
nsubj(have-26, they-23)
advmod(longer-25, no-24)
advmod(have-26, longer-25)
parataxis(stated-3, have-26)
det(right-28, a-27)
dobj(have-26, right-28)
aux(choose-30, to-29)
infmod(right-28, choose-30)
nsubj(receives-32, whom-31)
ccomp(choose-30, receives-32)
det(house-34, the-33)
dobj(receives-32, house-34)

(ROOT
  (S
    (S
      (NP
        (NP (NNP B.))
        (NP (DT A) (NN husband)
          (CC and)
          (NN wife)))
      (VP (VBP decide)
        (S
          (VP (TO to)
            (VP (VB offer)
              (PRT (RP up))
              (NP (PRP$ their) (NN car))
              (PP (IN for)
                (ADJP (JJ free))))))))
    (: ;)
    (S
      (NP (PRP they))
      (ADVP (RB no) (RB longer))
      (VP (VBP have)
        (NP (DT a) (NN right)
          (S
            (VP (TO to)
              (VP (VB choose)
                (SBAR
                  (WHNP (WP whom))
                  (S
                    (VP (VBZ takes)
                      (NP (DT the) (NN car)))))))))))
    (. .)))

nsubj(decide-6, B.-1)
xsubj(offer-8, B.-1)
det(husband-3, A-2)
dep(B.-1, husband-3)
dep(B.-1, wife-5)
conj_and(husband-3, wife-5)
root(ROOT-0, decide-6)
aux(offer-8, to-7)
xcomp(decide-6, offer-8)
prt(offer-8, up-9)
poss(car-11, their-10)
dobj(offer-8, car-11)
prep_for(offer-8, free-13)
nsubj(have-18, they-15)
advmod(longer-17, no-16)
advmod(have-18, longer-17)
parataxis(decide-6, have-18)
det(right-20, a-19)
dobj(have-18, right-20)
aux(choose-22, to-21)
infmod(right-20, choose-22)
nsubj(takes-24, whom-23)
ccomp(choose-22, takes-24)
det(car-26, the-25)
dobj(takes-24, car-26)

(ROOT
  (S
    (S
      (NP
        (NP (NNP C.))
        (NP (DT A) (NN husband)
          (CC and)
          (NN wife)))
      (VP (VBP decide)
        (S
          (VP (TO to)
            (VP (VB give)
              (PRT (RP up))
              (NP (PRP$ their) (NN animal) (NNS pets)))))))
    (: ;)
    (S
      (NP (PRP they))
      (ADVP (RB no) (RB longer))
      (VP (VBP have)
        (NP (DT a) (NN right)
          (S
            (VP (TO to)
              (VP (VB choose)
                (SBAR
                  (WHNP (WP whom))
                  (S
                    (VP (VBZ receives)
                      (NP (DT the) (NNS pets)))))))))))
    (. .)))

nsubj(decide-6, C.-1)
xsubj(give-8, C.-1)
det(husband-3, A-2)
dep(C.-1, husband-3)
dep(C.-1, wife-5)
conj_and(husband-3, wife-5)
root(ROOT-0, decide-6)
aux(give-8, to-7)
xcomp(decide-6, give-8)
prt(give-8, up-9)
poss(pets-12, their-10)
nn(pets-12, animal-11)
dobj(give-8, pets-12)
nsubj(have-17, they-14)
advmod(longer-16, no-15)
advmod(have-17, longer-16)
parataxis(decide-6, have-17)
det(right-19, a-18)
dobj(have-17, right-19)
aux(choose-21, to-20)
infmod(right-19, choose-21)
nsubj(receives-23, whom-22)
ccomp(choose-21, receives-23)
det(pets-25, the-24)
dobj(receives-23, pets-25)

(ROOT
  (S
    (NP (DT All) (CD three) (NNS examples))
    (VP (VB contradict)
      (NP
        (NP (DT the) (NN reality))
        (PP (IN of)
          (NP
            (NP (DT the) (NN transfer))
            (PP (IN of)
              (NP (NN ownership)))))))
    (. .)))

det(examples-3, All-1)
num(examples-3, three-2)
nsubj(contradict-4, examples-3)
root(ROOT-0, contradict-4)
det(reality-6, the-5)
dobj(contradict-4, reality-6)
det(transfer-9, the-8)
prep_of(reality-6, transfer-9)
prep_of(transfer-9, ownership-11)

(ROOT
  (S
    (ADVP (RB Albeit))
    (, ,)
    (NP (DT a) (NN thief))
    (VP (VBZ is)
      (ADJP (RBR more) (JJ likely)
        (S
          (VP (TO to)
            (VP (VB agree)
              (PP (IN with)
                (NP
                  (NP (DT the) (NNS examples))
                  (PP (IN than)
                    (NP (DT the) (JJ common) (NN person))))))))))
    (. .)))

advmod(likely-7, Albeit-1)
det(thief-4, a-3)
nsubj(likely-7, thief-4)
cop(likely-7, is-5)
advmod(likely-7, more-6)
root(ROOT-0, likely-7)
aux(agree-9, to-8)
xcomp(likely-7, agree-9)
det(examples-12, the-11)
prep_with(agree-9, examples-12)
det(person-16, the-14)
amod(person-16, common-15)
prep_than(examples-12, person-16)

(ROOT
  (S (IN For)
    (NP (DT the) (NN thief))
    (VP (VBZ presumes)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADVP (RB now))
            (NP
              (NP (NN his\/her) (NN property))
              (PP (IN for)
                (NP (DT the) (NN taking))))))))
    (. .)))

dep(presumes-4, For-1)
det(thief-3, the-2)
nsubj(presumes-4, thief-3)
root(ROOT-0, presumes-4)
nsubj(property-9, it-5)
cop(property-9, is-6)
advmod(property-9, now-7)
nn(property-9, his\/her-8)
ccomp(presumes-4, property-9)
det(taking-12, the-11)
prep_for(property-9, taking-12)

(ROOT
  (S
    (NP (DT All) (NNS parents))
    (VP
      (VP (VBP have)
        (NP
          (NP (DT the) (JJ natural) (NN law))
          (PP (IN of)
            (NP
              (NP (NN authority))
              (PP (IN of)
                (NP (NN ownership)))))))
      (CC and)
      (VP (MD must)
        (ADVP (RB first))
        (VP (VB transfer)
          (NP
            (NP (DT that) (NN authority) (NN unto))
            (SBAR
              (S
                (NP
                  (NP (DT another) (NN party))
                  (PP (IN before)
                    (NP (DT another) (NN party))))
                (VP (MD can)
                  (ADVP (RB rightfully))
                  (VP (VB claim)
                    (NP (DT the) (JJ same) (NN authority))
                    (PP (IN over)
                      (NP (DT the) (JJ respective) (NN property)))
                    (SBAR (IN whether)
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (PP (IN of)
                            (NP (NNS children) (, ,) (NNS vehicles) (, ,) (NNS houses) (, ,)
                              (CC or)
                              (NNS pets))))))))))))))
    (. .)))

det(parents-2, All-1)
nsubj(have-3, parents-2)
nsubj(transfer-14, parents-2)
root(ROOT-0, have-3)
det(law-6, the-4)
amod(law-6, natural-5)
dobj(have-3, law-6)
prep_of(law-6, authority-8)
prep_of(authority-8, ownership-10)
aux(transfer-14, must-12)
advmod(transfer-14, first-13)
conj_and(have-3, transfer-14)
det(unto-17, that-15)
nn(unto-17, authority-16)
dobj(transfer-14, unto-17)
det(party-19, another-18)
nsubj(claim-25, party-19)
det(party-22, another-21)
prep_before(party-19, party-22)
aux(claim-25, can-23)
advmod(claim-25, rightfully-24)
rcmod(unto-17, claim-25)
det(authority-28, the-26)
amod(authority-28, same-27)
dobj(claim-25, authority-28)
det(property-32, the-30)
amod(property-32, respective-31)
prep_over(claim-25, property-32)
complm(is-35, whether-33)
nsubj(is-35, it-34)
ccomp(claim-25, is-35)
prep_of(is-35, children-37)
prep_of(is-35, vehicles-39)
conj_or(children-37, vehicles-39)
prep_of(is-35, houses-41)
conj_or(children-37, houses-41)
prep_of(is-35, pets-44)
conj_or(children-37, pets-44)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP s))
        (VP (VB move)
          (PRT (RP on))
          (PP (TO to)
            (NP (DT the) (JJ next) (NN statement))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(move-3, s-2)
ccomp(Let-1, move-3)
prt(move-3, on-4)
det(statement-8, the-6)
amod(statement-8, next-7)
prep_to(move-3, statement-8)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD claimed)))
    (: :)
    (S
      (SBAR (IN Since)
        (S
          (NP
            (NP (DT this))
            (, ,)
            (PRN (-LRB- -LRB-)
              (PP (TO to)
                (NP (NN raise)
                  (CC or)
                  (NN nurture)))
              (-RRB- -RRB-)))
          (, ,)
          (VP (VBZ is)
            (NP
              (NP (DT the)
                (ADJP (RBS most) (JJ important))
                (NN aspect))
              (PP (TO to)
                (NP (`` ``) (JJ parenthood) ('' '')
                  (NP
                    (ADJP (RB then) (DT any))
                    (JJ human)
                    (ADJP (JJ possible)
                      (PP (IN of)
                        (S
                          (VP
                            (VP (VBG possessing)
                              (NP (DT a) (NN nurturing)))
                            (CC or)
                            (VP (VBG raising))))))
                    (NN nature))))))))
      (VP (VBZ is)
        (NP (DT a) (JJ possible) (NN target)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP (DT a) (NN parent))))))))
    (. .)))

nsubj(claimed-2, You-1)
root(ROOT-0, claimed-2)
mark(aspect-18, Since-4)
nsubj(aspect-18, this-5)
dep(this-5, to-8)
pobj(to-8, raise-9)
pobj(to-8, nurture-11)
conj_or(raise-9, nurture-11)
cop(aspect-18, is-14)
det(aspect-18, the-15)
advmod(important-17, most-16)
amod(aspect-18, important-17)
csubj(target-37, aspect-18)
amod(nature-33, parenthood-21)
advmod(any-24, then-23)
amod(nature-33, any-24)
amod(nature-33, human-25)
amod(nature-33, possible-26)
prepc_of(possible-26, possessing-28)
det(nurturing-30, a-29)
dobj(possessing-28, nurturing-30)
prepc_of(possible-26, raising-32)
conj_or(possessing-28, raising-32)
prep_to(aspect-18, nature-33)
cop(target-37, is-34)
det(target-37, a-35)
amod(target-37, possible-36)
parataxis(claimed-2, target-37)
aux(parent-41, to-38)
cop(parent-41, be-39)
det(parent-41, a-40)
infmod(target-37, parent-41)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (ADVP
        (ADVP (RB also))
        (PRN (, ,)
          (ADVP (RB propositionally))
          (, ,)))
      (VBZ establishes)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN argument))
          (VP (VBZ is)
            (VP (VBN based)
              (PP (IN upon)
                (NP
                  (NP (JJ multiple) (NNS definitions))
                  (PP (IN of)
                    (NP (DT the) (JJ same) (NN term))))))))))
    (. .)))

nsubj(establishes-6, It-1)
advmod(establishes-6, also-2)
dep(also-2, propositionally-4)
root(ROOT-0, establishes-6)
complm(based-11, that-7)
det(argument-9, the-8)
nsubjpass(based-11, argument-9)
auxpass(based-11, is-10)
ccomp(establishes-6, based-11)
amod(definitions-14, multiple-13)
prep_upon(based-11, definitions-14)
det(term-18, the-16)
amod(term-18, same-17)
prep_of(definitions-14, term-18)

(ROOT
  (S
    (S
      (NP
        (NP
          (NP (PRP$ My) (NN response))
          (: :)
          (NP
            (NP (NNP Children))
            (PP (IN of)
              (NP (DT the) (NN age) (CD 2)))))
        (, ,)
        (NP (CD 3,4,5,6,7,8,9))
        (, ,))
      (VP (VBP demonstrate)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ possible)
                (PP (IN for)
                  (NP (PRP them))))
              (S
                (VP (TO to)
                  (VP (VB possess)
                    (NP (DT a) (NN nurturing)
                      (CC or)
                      (NN raising) (NN nature))))))))))
    (: ;)
    (S
      (ADVP (RB therefore))
      (NP (PRP they))
      (VP (VBP are)
        (NP (JJ possible) (NNS targets)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP (NNS parents))))))))
    (. .)))

poss(response-2, My-1)
nsubj(demonstrate-12, response-2)
dep(response-2, Children-4)
det(age-7, the-6)
prep_of(Children-4, age-7)
num(age-7, 2-8)
appos(response-2, 3,4,5,6,7,8,9-10)
root(ROOT-0, demonstrate-12)
complm(possible-16, that-13)
nsubj(possible-16, it-14)
xsubj(possess-20, it-14)
cop(possible-16, is-15)
ccomp(demonstrate-12, possible-16)
prep_for(possible-16, them-18)
aux(possess-20, to-19)
xcomp(possible-16, possess-20)
det(nature-25, a-21)
nn(nature-25, nurturing-22)
conj_or(nurturing-22, raising-24)
nn(nature-25, raising-24)
dobj(possess-20, nature-25)
advmod(targets-31, therefore-27)
nsubj(targets-31, they-28)
cop(targets-31, are-29)
amod(targets-31, possible-30)
parataxis(demonstrate-12, targets-31)
aux(parents-34, to-32)
cop(parents-34, be-33)
infmod(targets-31, parents-34)

(ROOT
  (S
    (NP
      (NP (NNS Individuals))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP suffer)
            (PP (IN from)
              (NP
                (NP (NNS diseases))
                (PP (IN of)
                  (NP (DT the) (NN mind)))))))))
    (ADVP (RB also))
    (VP (VBP meet)
      (NP (DT the) (JJ same) (NNS criteria)))
    (. .)))

nsubj(suffer-3, Individuals-1)
nsubj(meet-10, Individuals-1)
rcmod(Individuals-1, suffer-3)
prep_from(suffer-3, diseases-5)
det(mind-8, the-7)
prep_of(diseases-5, mind-8)
advmod(meet-10, also-9)
root(ROOT-0, meet-10)
det(criteria-13, the-11)
amod(criteria-13, same-12)
dobj(meet-10, criteria-13)

(ROOT
  (SQ (MD Should)
    (NP (PRP they))
    (ADVP (RB too))
    (VP (VB be)
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP (VB adopt))))))
    (. ?)))

aux(allowed-5, Should-1)
nsubjpass(allowed-5, they-2)
advmod(allowed-5, too-3)
auxpass(allowed-5, be-4)
root(ROOT-0, allowed-5)
aux(adopt-7, to-6)
xcomp(allowed-5, adopt-7)

(ROOT
  (S
    (NP (NNS Pedophiles))
    (ADVP (RB exactly))
    (VP (VBP meet)
      (NP (DT the) (NNS criteria)))
    (. .)))

nsubj(meet-3, Pedophiles-1)
advmod(meet-3, exactly-2)
root(ROOT-0, meet-3)
det(criteria-5, the-4)
dobj(meet-3, criteria-5)

(ROOT
  (SQ (NNP Should)
    (NP (PRP they))
    (VP (VB be)
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP (VB adopt))))))
    (. ?)))

dep(allowed-4, Should-1)
nsubjpass(allowed-4, they-2)
auxpass(allowed-4, be-3)
root(ROOT-0, allowed-4)
aux(adopt-6, to-5)
xcomp(allowed-4, adopt-6)

(ROOT
  (S
    (NP (DT The) (RBS most) (JJ hardened) (NNS criminals))
    (VP (VBP meet)
      (NP (DT the) (NNS criteria)))
    (. .)))

det(criminals-4, The-1)
advmod(criminals-4, most-2)
amod(criminals-4, hardened-3)
nsubj(meet-5, criminals-4)
root(ROOT-0, meet-5)
det(criteria-7, the-6)
dobj(meet-5, criteria-7)

(ROOT
  (SQ (NNP Should)
    (NP (PRP they))
    (VP (VB be)
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP (VB adopt))))))
    (. ?)))

dep(allowed-4, Should-1)
nsubjpass(allowed-4, they-2)
auxpass(allowed-4, be-3)
root(ROOT-0, allowed-4)
aux(adopt-6, to-5)
xcomp(allowed-4, adopt-6)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ ultimate) (NN conclusion))
      (, ,)
      (VP
        (ADVP (RB logically))
        (VBN deduced)
        (PP (IN from)
          (NP (PRP$ my) (NNS arguments))))
      (, ,))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT no) (NN man))
            (, ,)
            (NP (NN woman))
            (, ,)
            (CC or)
            (NP (NN institution)))
          (VP (VBZ has)
            (NP (NN authority)
              (S
                (VP (TO to)
                  (VP (VB determine)
                    (NP
                      (NP (DT the) (NN recipient))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN transfer))
                          (PP (IN of)
                            (NP
                              (NP (NN authority))
                              (PP (IN of)
                                (NP
                                  (NP (DT that))
                                  (SBAR
                                    (WHNP (WDT which))
                                    (S
                                      (VP (VBZ is) (RB not)
                                        (NP (PRP theirs))
                                        (S
                                          (VP (TO to)
                                            (VP (VB begin)
                                              (PP (IN with))))))))
                                  (, ,)
                                  (PP (VBG including)
                                    (NP (PRP myself))))))))))))))))))
    (. .)))

det(conclusion-3, The-1)
amod(conclusion-3, ultimate-2)
nsubj(is-11, conclusion-3)
advmod(deduced-6, logically-5)
partmod(conclusion-3, deduced-6)
poss(arguments-9, my-8)
prep_from(deduced-6, arguments-9)
root(ROOT-0, is-11)
complm(has-20, that-12)
det(man-14, no-13)
nsubj(has-20, man-14)
conj_or(man-14, woman-16)
nsubj(has-20, woman-16)
conj_or(man-14, institution-19)
nsubj(has-20, institution-19)
ccomp(is-11, has-20)
dobj(has-20, authority-21)
aux(determine-23, to-22)
infmod(authority-21, determine-23)
det(recipient-25, the-24)
dobj(determine-23, recipient-25)
det(transfer-28, the-27)
prep_of(recipient-25, transfer-28)
prep_of(transfer-28, authority-30)
prep_of(authority-30, that-32)
nsubj(theirs-36, that-32)
cop(theirs-36, is-34)
neg(theirs-36, not-35)
rcmod(that-32, theirs-36)
aux(begin-38, to-37)
xcomp(theirs-36, begin-38)
prep(begin-38, with-39)
prep_including(that-32, myself-42)

(ROOT
  (S
    (NP
      (NP (DT No) (NN one))
      (PP (IN in)
        (NP (DT the) (NN world))))
    (VP (VBZ has)
      (NP (DT a) (NN right)
        (S
          (VP (TO to)
            (VP (VB adopt))))))
    (. .)))

det(one-2, No-1)
nsubj(has-6, one-2)
det(world-5, the-4)
prep_in(one-2, world-5)
root(ROOT-0, has-6)
det(right-8, a-7)
dobj(has-6, right-8)
aux(adopt-10, to-9)
infmod(right-8, adopt-10)

(ROOT
  (S
    (NP
      (NP (DT No) (NN institution))
      (PP (IN in)
        (NP (DT the) (NN world))))
    (VP (VBZ has)
      (NP (DT a) (NN right)
        (S
          (VP (TO to)
            (VP (VB adopt))))))
    (. .)))

det(institution-2, No-1)
nsubj(has-6, institution-2)
det(world-5, the-4)
prep_in(institution-2, world-5)
root(ROOT-0, has-6)
det(right-8, a-7)
dobj(has-6, right-8)
aux(adopt-10, to-9)
infmod(right-8, adopt-10)

(ROOT
  (S (-LRB- -LRB-)
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN non) (NN discreet) (NN way))
        (PP (IN of)
          (S
            (VP (VBG using)
              (NP
                (NP (DT the) (NN fallacy))
                (PP (IN of)
                  (NP (NNP ambiguity))))
              (S
                (VP (TO to)
                  (VP (VB argue)
                    (PRT (RP through))
                    (PP (TO to)
                      (NP (DT an) (JJ ambiguous) (NN conclusion)))))))))))
    (. .) (-RRB- -RRB-)))

nsubj(way-7, This-2)
cop(way-7, is-3)
det(way-7, a-4)
nn(way-7, non-5)
nn(way-7, discreet-6)
root(ROOT-0, way-7)
prepc_of(way-7, using-9)
det(fallacy-11, the-10)
dobj(using-9, fallacy-11)
prep_of(fallacy-11, ambiguity-13)
aux(argue-15, to-14)
xcomp(using-9, argue-15)
prt(argue-15, through-16)
det(conclusion-20, an-18)
amod(conclusion-20, ambiguous-19)
prep_to(argue-15, conclusion-20)

(ROOT
  (S
    (PP (IN For)
      (SBAR (IN if)
        (S
          (NP (PRP we))
          (VP (VBP argue)
            (SBAR (IN that)
              (S
                (NP (DT some))
                (VP (VBP have)
                  (NP (DT a) (NN right)
                    (S
                      (VP (TO to)
                        (VP (VB adopt)
                          (ADVP (RB then)))))))))))))
    (NP (PRP we))
    (VP (MD must)
      (VP (VB reason)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP have)
              (NP (NN authority)
                (S
                  (VP (TO to)
                    (VP (VB steal)
                      (NP
                        (NP (DT that))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ belongs)
                              (PP (TO to)
                                (NP (DT another) (NN person))))))))))))))))
    (. .)))

dep(reason-15, For-1)
mark(argue-4, if-2)
nsubj(argue-4, we-3)
pcomp(For-1, argue-4)
complm(have-7, that-5)
nsubj(have-7, some-6)
ccomp(argue-4, have-7)
det(right-9, a-8)
dobj(have-7, right-9)
aux(adopt-11, to-10)
infmod(right-9, adopt-11)
advmod(adopt-11, then-12)
nsubj(reason-15, we-13)
aux(reason-15, must-14)
root(ROOT-0, reason-15)
complm(have-18, that-16)
nsubj(have-18, they-17)
ccomp(reason-15, have-18)
dobj(have-18, authority-19)
aux(steal-21, to-20)
infmod(authority-19, steal-21)
dobj(steal-21, that-22)
nsubj(belongs-24, that-22)
rcmod(that-22, belongs-24)
det(person-27, another-26)
prep_to(belongs-24, person-27)

(ROOT
  (S
    (NP (DT A) (JJ homosexual))
    (VP (VBZ has)
      (ADVP (RB no) (RB right))
      (S
        (VP (TO to)
          (VP (VB adopt)))))
    (. .)))

det(homosexual-2, A-1)
nsubj(has-3, homosexual-2)
xsubj(adopt-7, homosexual-2)
root(ROOT-0, has-3)
advmod(right-5, no-4)
advmod(has-3, right-5)
aux(adopt-7, to-6)
xcomp(has-3, adopt-7)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP
      (NP (DT the) (NN sister))
      (PP (IN of)
        (NP (DT a) (JJ homosexual))))
    (VP (VBZ has)
      (NP (DT the) (NN authority)
        (S
          (VP (TO to)
            (VP (VB transfer)
              (NP
                (NP (NN authority))
                (PP (IN of)
                  (NP (PRP$ her) (NN child))))
              (PP (TO to)
                (NP (PRP$ her) (JJ homosexual) (NN sibling))))))))
    (. .)))

advmod(has-8, However-1)
det(sister-4, the-3)
nsubj(has-8, sister-4)
det(homosexual-7, a-6)
prep_of(sister-4, homosexual-7)
root(ROOT-0, has-8)
det(authority-10, the-9)
dobj(has-8, authority-10)
aux(transfer-12, to-11)
infmod(authority-10, transfer-12)
dobj(transfer-12, authority-13)
poss(child-16, her-15)
prep_of(authority-13, child-16)
poss(sibling-20, her-18)
amod(sibling-20, homosexual-19)
prep_to(transfer-12, sibling-20)

(ROOT
  (S
    (NP (DT No) (NN right))
    (VP (VBZ is)
      (ADJP (JJ necessary)))
    (. .)))

det(right-2, No-1)
nsubj(necessary-4, right-2)
cop(necessary-4, is-3)
root(ROOT-0, necessary-4)

(ROOT
  (S (CC And)
    (NP
      (NP (DT the) (NN friend))
      (PP (IN of)
        (NP (DT the) (NN sister))))
    (VP (VBZ has)
      (ADVP (RB no) (RB right))
      (S
        (VP (TO to)
          (VP (VB determine)
            (NP
              (NP (DT the) (NN recipient))
              (PP (IN of)
                (NP (DT the) (NN authority))))))))
    (. .)))

cc(has-7, And-1)
det(friend-3, the-2)
nsubj(has-7, friend-3)
xsubj(determine-11, friend-3)
det(sister-6, the-5)
prep_of(friend-3, sister-6)
root(ROOT-0, has-7)
advmod(right-9, no-8)
advmod(has-7, right-9)
aux(determine-11, to-10)
xcomp(has-7, determine-11)
det(recipient-13, the-12)
dobj(determine-11, recipient-13)
det(authority-16, the-15)
prep_of(recipient-13, authority-16)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (DT no) (JJ gay))
    (VP (VBZ has)
      (NP (DT a) (NN right)
        (S
          (VP (TO to)
            (VP (VB adopt))))))
    (. .)))

advmod(has-5, Therefore-1)
det(gay-4, no-3)
nsubj(has-5, gay-4)
root(ROOT-0, has-5)
det(right-7, a-6)
dobj(has-5, right-7)
aux(adopt-9, to-8)
infmod(right-7, adopt-9)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ actual) (NN question))
        (PP (IN of)
          (NP (DT the) (NN debate)))))
    (. .)))

nsubj(question-5, Which-1)
cop(question-5, is-2)
det(question-5, the-3)
amod(question-5, actual-4)
root(ROOT-0, question-5)
det(debate-8, the-7)
prep_of(question-5, debate-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN introduction))
      (PP (IN of)
        (S
          (VP (VBG ambiguity)
            (PP (IN into)
              (NP (DT a) (NN debate)))))))
    (VP (VBZ is)
      (ADJP
        (ADJP (NN nothing) (JJR more))
        (PP (IN than)
          (NP (DT an) (NN attempt))))
      (S
        (VP (TO to)
          (VP (VB redefine)
            (NP
              (NP (DT the) (JJ key) (NNS term\/s))
              (PP (IN of)
                (NP (DT the) (NN debate)
                  (S
                    (VP (TO to)
                      (VP (VB prove)
                        (NP (DT a) (VBN predetermined)
                          (QP (DT a) (CD conclusion)))))))))))))
    (. .)))

det(introduction-2, The-1)
nsubj(nothing-9, introduction-2)
xsubj(redefine-15, introduction-2)
prepc_of(introduction-2, ambiguity-4)
det(debate-7, a-6)
prep_into(ambiguity-4, debate-7)
cop(nothing-9, is-8)
root(ROOT-0, nothing-9)
dep(nothing-9, more-10)
det(attempt-13, an-12)
prep_than(nothing-9, attempt-13)
aux(redefine-15, to-14)
xcomp(nothing-9, redefine-15)
det(term\/s-18, the-16)
amod(term\/s-18, key-17)
dobj(redefine-15, term\/s-18)
det(debate-21, the-20)
prep_of(term\/s-18, debate-21)
aux(prove-23, to-22)
infmod(debate-21, prove-23)
det(conclusion-27, a-24)
amod(conclusion-27, predetermined-25)
quantmod(conclusion-27, a-26)
dobj(prove-23, conclusion-27)

(ROOT
  (S (CC And)
    (ADVP (RB moreover))
    (, ,)
    (NP
      (NP (DT the) (JJ explicit) (NN claim))
      (SBAR (IN that)
        (S
          (NP
            (QP (JJR more) (IN than) (CD one))
            (NN definition))
          (VP (MD will)
            (VP (VB be)
              (VP (VBN used)
                (PP (IN for)
                  (NP (DT the) (JJ same) (NN term)))))))))
    (VP (VBZ invalidates)
      (NP
        (NP (DT the) (NN entirety))
        (PP (IN of)
          (NP (DT the) (NN argument)))))
    (. .)))

cc(invalidates-19, And-1)
advmod(invalidates-19, moreover-2)
det(claim-6, the-4)
amod(claim-6, explicit-5)
nsubj(invalidates-19, claim-6)
complm(used-14, that-7)
mwe(than-9, more-8)
quantmod(one-10, than-9)
num(definition-11, one-10)
nsubjpass(used-14, definition-11)
aux(used-14, will-12)
auxpass(used-14, be-13)
dep(claim-6, used-14)
det(term-18, the-16)
amod(term-18, same-17)
prep_for(used-14, term-18)
root(ROOT-0, invalidates-19)
det(entirety-21, the-20)
dobj(invalidates-19, entirety-21)
det(argument-24, the-23)
prep_of(entirety-21, argument-24)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (S
      (VP (VBG disregarding)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP$ your) (NN intent))
            (VP (MD may)
              (CC or)
              (MD may) (RB not)
              (VP (VB be)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP (VB continue)
        (PP (IN with)
          (NP
            (NP (PRP$ my) (NN rebuttal))
            (PP (IN of)
              (NP
                (NP (DT the) (NN remainder))
                (PP (IN of)
                  (NP (PRP$ your) (NN argument)))))))
        (SBAR
          (WHADVP (WRB wherein))
          (S
            (NP (PRP we))
            (VP (VBP disagree))))))
    (. .)))

advmod(continue-15, However-1)
partmod(continue-15, disregarding-3)
dobj(be-11, what-4)
poss(intent-6, your-5)
nsubj(be-11, intent-6)
aux(be-11, may-7)
ccomp(disregarding-3, may-9)
aux(be-11, may-9)
conj_or(be-11, may-9)
neg(be-11, not-10)
ccomp(disregarding-3, be-11)
nsubj(continue-15, I-13)
aux(continue-15, will-14)
root(ROOT-0, continue-15)
poss(rebuttal-18, my-17)
prep_with(continue-15, rebuttal-18)
det(remainder-21, the-20)
prep_of(rebuttal-18, remainder-21)
poss(argument-24, your-23)
prep_of(remainder-21, argument-24)
advmod(disagree-27, wherein-25)
nsubj(disagree-27, we-26)
advcl(continue-15, disagree-27)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD stated)))
    (: :)
    (S
      (SBAR
        (WHADVP (WRB When))
        (S
          (NP (NN adoption))
          (VP (VBZ is)
            (VP (VBG going)
              (S
                (VP (TO to)
                  (VP (VB take)
                    (NP
                      (NP (NN place))
                      (SBAR
                        (S
                          (NP
                            (NP (DT the) (NNS progenitor\/parent\/s))
                            (PP (IN of)
                              (NP (NN origin))))
                          (VP (VBP are)
                            (VP (VBG giving)
                              (PRT (RP up))
                              (NP
                                (NP (PRP$ their) (NN responsibility))
                                (PP (IN of)
                                  (S
                                    (VP (VBG raising)
                                      (CC and)
                                      (VBG nurturing)))))))))))))))))
      (VP (VBD said)
        (NP (NN child))))
    (. .)))

nsubj(stated-2, You-1)
root(ROOT-0, stated-2)
advmod(going-7, When-4)
nsubj(going-7, adoption-5)
xsubj(take-9, adoption-5)
aux(going-7, is-6)
advcl(said-24, going-7)
csubj(said-24, going-7)
aux(take-9, to-8)
xcomp(going-7, take-9)
dobj(take-9, place-10)
det(progenitor\/parent\/s-12, the-11)
nsubj(giving-16, progenitor\/parent\/s-12)
prep_of(progenitor\/parent\/s-12, origin-14)
aux(giving-16, are-15)
rcmod(place-10, giving-16)
prt(giving-16, up-17)
poss(responsibility-19, their-18)
dobj(giving-16, responsibility-19)
prepc_of(responsibility-19, raising-21)
prepc_of(responsibility-19, nurturing-23)
conj_and(raising-21, nurturing-23)
parataxis(stated-2, said-24)
dobj(said-24, child-25)

(ROOT
  (S
    (PP (IN In)
      (NP (DT that) (NN aspect)))
    (, ,)
    (NP (PRP they))
    (VP (VBP give)
      (PRT (RP up))
      (NP (PRP$ their) (NNS rights))
      (S
        (VP (TO to)
          (VP (VB parenthood)))))
    (. .)))

det(aspect-3, that-2)
prep_in(give-6, aspect-3)
nsubj(give-6, they-5)
root(ROOT-0, give-6)
prt(give-6, up-7)
poss(rights-9, their-8)
dobj(give-6, rights-9)
aux(parenthood-11, to-10)
xcomp(give-6, parenthood-11)

(ROOT
  (S
    (NP (PRP$ My) (NN response))
    (: :)
    (S
      (SBAR (IN If)
        (S
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP claim))))
          (VP (VBZ is)
            (ADJP (JJ true)))))
      (ADVP (RB then))
      (VP (VBD let)
        (SBAR
          (S
            (NP (PRP s))
            (VP (VBP test)
              (NP
                (NP (DT the) (NN principle))
                (PP (IN of)
                  (NP (DT that) (NN proposition))))
              (PP (IN by)
                (NP
                  (NP (NN application))
                  (PP (IN of)
                    (NP (DT the) (NN principle))))))))))
    (. .)))

poss(response-2, My-1)
dep(let-11, response-2)
mark(true-9, If-4)
dobj(claim-7, what-5)
nsubj(claim-7, you-6)
csubj(true-9, claim-7)
cop(true-9, is-8)
advcl(let-11, true-9)
csubj(let-11, true-9)
advmod(let-11, then-10)
root(ROOT-0, let-11)
nsubj(test-13, s-12)
ccomp(let-11, test-13)
det(principle-15, the-14)
dobj(test-13, principle-15)
det(proposition-18, that-17)
prep_of(principle-15, proposition-18)
prep_by(test-13, application-20)
det(principle-23, the-22)
prep_of(application-20, principle-23)

