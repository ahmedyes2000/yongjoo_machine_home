(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP
        (NP (DT a) (RB little))
        (VBN confused)
        (PP (IN by)
          (NP (PRP$ your) (NN screen) (NN name)))))
    (. .)))

nsubjpass(confused-5, I-1)
auxpass(confused-5, 'm-2)
det(little-4, a-3)
dep(confused-5, little-4)
root(ROOT-0, confused-5)
poss(name-9, your-7)
nn(name-9, screen-8)
agent(confused-5, name-9)

(ROOT
  (SQ
    (VP (VB Tell)
      (NP (PRP me))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (JJ socialist) (NN country))
          (VP (VBZ allows)
            (NP (JJ same) (NN sex) (NNS marriages))))))
    (. ?)))

root(ROOT-0, Tell-1)
dobj(Tell-1, me-2)
dobj(allows-7, what-4)
amod(country-6, socialist-5)
nsubj(allows-7, country-6)
dep(Tell-1, allows-7)
amod(marriages-10, same-8)
nn(marriages-10, sex-9)
dobj(allows-7, marriages-10)

(ROOT
  (S (CC And)
    (VP (VBP do) (RB n't)
      (VP (VB say)
        (NP
          (NP (NNP Canada))
          (, ,)
          (SBAR (IN because)
            (S
              (NP (PRP it))
              (VP (VBZ 's) (RB not)
                (NP (DT a) (JJ Socialist) (NN country))))))))
    (. .)))

cc(say-4, And-1)
aux(say-4, do-2)
neg(say-4, n't-3)
root(ROOT-0, say-4)
dobj(say-4, Canada-5)
mark(country-13, because-7)
nsubj(country-13, it-8)
cop(country-13, 's-9)
neg(country-13, not-10)
det(country-13, a-11)
amod(country-13, Socialist-12)
dep(Canada-5, country-13)

