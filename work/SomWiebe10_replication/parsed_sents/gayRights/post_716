(ROOT
  (S
    (PP (IN Because)
      (PP (IN of)
        (NP
          (NP (PRP$ their) (NN blindness))
          (PP (TO to)
            (NP (NNP God))))))
    (, ,)
    (NP (PRP He))
    (VP (VBD gave)
      (NP (PRP them))
      (PRT (RP over))
      (PP (TO to)
        (NP (JJ shameful) (NNS lusts))))
    (. .)))

prepc_because_of(gave-9, of-2)
poss(blindness-4, their-3)
pobj(gave-9, blindness-4)
prep_to(blindness-4, God-6)
nsubj(gave-9, He-8)
root(ROOT-0, gave-9)
dobj(gave-9, them-10)
prt(gave-9, over-11)
amod(lusts-14, shameful-13)
prep_to(gave-9, lusts-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD gave)
      (NP (PRP them))
      (PP (RB over)
        (PP (TO to)
          (NP
            (NP (NN sin)
              (CC and)
              (NN sin))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBD did))))))
        (, ,)
        (CC and)
        (PP (IN in)
          (NP (DT every) (NN way) (JJ possible)))))
    (. .)))

nsubj(gave-2, He-1)
nsubj(gave-2', He-1)
root(ROOT-0, gave-2)
conj_and(gave-2, gave-2')
dobj(gave-2, them-3)
advmod(gave-2, over-4)
prep_to(gave-2, sin-6)
dobj(did-10, sin-6)
prep_to(gave-2, sin-8)
conj_and(sin-6, sin-8)
dobj(did-10, sin-8)
nsubj(did-10, they-9)
rcmod(sin-6, did-10)
det(way-15, every-14)
prep_in(gave-2', way-15)
amod(way-15, possible-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB know)
        (SBAR
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (ADVP (RB ever))
              (VP (VBP backslide))))
          (, ,)
          (CC but)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (MD can)
                (VP (VB say)
                  (SBAR (IN that)
                    (S
                      (NP (PRP they))
                      (ADVP (RB never))
                      (VP (VBP slip)
                        (ADVP (RB back))
                        (PP (TO to)
                          (NP (PRP$ their) (JJ old) (NNS ways)))
                        (ADVP (RB once)
                          (PP (IN in)
                            (NP (DT a) (NN while))))))))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, can-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
mark(backslide-8, if-5)
nsubj(backslide-8, they-6)
advmod(backslide-8, ever-7)
dep(know-4, backslide-8)
nsubj(say-13, who-11)
aux(say-13, can-12)
dep(know-4, say-13)
conj_but(backslide-8, say-13)
complm(slip-17, that-14)
nsubj(slip-17, they-15)
neg(slip-17, never-16)
ccomp(say-13, slip-17)
advmod(slip-17, back-18)
poss(ways-22, their-20)
amod(ways-22, old-21)
prep_to(slip-17, ways-22)
advmod(slip-17, once-23)
det(while-26, a-25)
prep_in(once-23, while-26)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB condemn)
      (NP (PRP them))
      (PP (IN for)
        (S
          (ADVP (RB still))
          (VP (VBG living)
            (ADVP (RB together))))))
    (. ?)))

aux(condemn-3, Would-1)
nsubj(condemn-3, you-2)
root(ROOT-0, condemn-3)
dobj(condemn-3, them-4)
advmod(living-7, still-6)
prepc_for(condemn-3, living-7)
advmod(living-7, together-8)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP know)))))
    (VP (VBZ is)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP$ their) (NN faith))
            (VP (VBZ is)
              (VP (VBN shown)
                (PP (IN in)
                  (NP (PRP$ their) (NNS lives)))))))
        (CC and)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT all))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP care)
                      (PRT (RP about))
                      (SBAR (IN as)
                        (S
                          (NP (PRP I))
                          (VP (VBP know)
                            (SBAR (IN that)
                              (S
                                (NP (PRP I))
                                (VP (MD could)
                                  (VP (VB have)
                                    (NP
                                      (NP (DT a) (JJ long) (NN list))
                                      (PP (IN of)
                                        (NP (NNS faults))))
                                    (SBAR (IN that)
                                      (S
                                        (NP (PRP I))
                                        (VP (MD should)
                                          (VP (VB look)
                                            (PP (IN at)
                                              (PP (IN in)
                                                (NP (PRP$ my) (NN life))))))))))))))))))))))))
    (. .)))

dobj(know-3, All-1)
nsubj(is-4, All-1)
nsubj(know-3, I-2)
rcmod(All-1, know-3)
root(ROOT-0, is-4)
complm(shown-9, that-5)
poss(faith-7, their-6)
nsubjpass(shown-9, faith-7)
auxpass(shown-9, is-8)
ccomp(is-4, shown-9)
poss(lives-12, their-11)
prep_in(shown-9, lives-12)
nsubj(all-16, that-14)
cop(all-16, is-15)
ccomp(is-4, all-16)
conj_and(shown-9, all-16)
nsubj(care-18, I-17)
rcmod(all-16, care-18)
prt(care-18, about-19)
mark(know-22, as-20)
nsubj(know-22, I-21)
advcl(care-18, know-22)
complm(have-26, that-23)
nsubj(have-26, I-24)
aux(have-26, could-25)
ccomp(know-22, have-26)
det(list-29, a-27)
amod(list-29, long-28)
dobj(have-26, list-29)
prep_of(list-29, faults-31)
complm(look-35, that-32)
nsubj(look-35, I-33)
aux(look-35, should-34)
ccomp(have-26, look-35)
prep(look-35, at-36)
pcomp(at-36, in-37)
poss(life-39, my-38)
prep_in(at-36, life-39)

(ROOT
  (S
    (S
      (S
        (S
          (VP (VBG Yes)
            (NP (PRP$ your) (NN right))))
        (, ,)
        (NP (PRP it))
        (VP (VBZ is)
          (NP (DT a) (NN sin))))
      (, ,)
      (CC but)
      (SQ (MD should)
        (NP (PRP we))
        (VP (VB try)
          (CC and)
          (VB stop)
          (NP (PRP them))
          (S
            (VP (VBG doing)
              (NP (PRP it)))))))
    (CC or)
    (SINV (MD should)
      (NP (PRP we))
      (VP (VB be)
        (VP (VBG leading)
          (NP (PRP them))
          (PRT (RP out))
          (PP (IN of)
            (NP (NN sin)))
          (PP (IN by)
            (S
              (VP (VBG sharing)
                (NP (PRP$ our) (NN faith))))))))
    (. ?)))

partmod(sin-8, Yes-1)
poss(right-3, your-2)
dobj(Yes-1, right-3)
nsubj(sin-8, it-5)
cop(sin-8, is-6)
det(sin-8, a-7)
root(ROOT-0, sin-8)
aux(try-13, should-11)
nsubj(try-13, we-12)
nsubj(stop-15, we-12)
conj_but(sin-8, try-13)
conj_but(sin-8, stop-15)
conj_and(try-13, stop-15)
dobj(try-13, them-16)
xcomp(try-13, doing-17)
dobj(doing-17, it-18)
aux(leading-23, should-20)
nsubj(leading-23, we-21)
aux(leading-23, be-22)
conj_or(sin-8, leading-23)
dobj(leading-23, them-24)
prep_out_of(leading-23, sin-27)
prepc_by(leading-23, sharing-29)
poss(faith-31, our-30)
dobj(sharing-29, faith-31)

(ROOT
  (S
    (NP (PRP$ My) (NN pastor))
    (VP (VBZ has)
      (NP
        (NP (DT a) (NN saying))
        ('' '')
        (SBAR
          (S
            (NP (PRP They))
            (VP (VBP know)
              (SBAR
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBD were)
                      (PP (IN against)))))
                (, ,)
                (CONJP (CC but)
                  (RB not))
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBD were)
                      (PP (IN for)))))))))))
    (. !)))

poss(pastor-2, My-1)
nsubj(has-3, pastor-2)
root(ROOT-0, has-3)
det(saying-5, a-4)
dobj(has-3, saying-5)
nsubj(know-8, They-7)
rcmod(saying-5, know-8)
nsubj(were-10, what-9)
dep(know-8, were-10)
prep(were-10, against-11)
nsubj(were-16, what-15)
dep(know-8, were-16)
conj_negcc(were-10, were-16)
prep(were-16, for-17)

(ROOT
  (S ('' '')
    (NP (NNP Brian) (NNP Greenaway))
    (VP (VBD was)
      (NP (DT an)
        (NP (NNP Hell) (POS 's))
        (NNP Angel)))
    (. .)))

nn(Greenaway-3, Brian-2)
nsubj(Angel-8, Greenaway-3)
cop(Angel-8, was-4)
det(Angel-8, an-5)
poss(Angel-8, Hell-6)
root(ROOT-0, Angel-8)

(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBZ murdered))
      (, ,)
      (VP (VBD beat)
        (NP (NNS people))
        (PRT (RP up))
        (PP (IN for)
          (NP
            (NP (NN fun))
            (, ,)
            (NP (NN slept) (RP around))
            (CC and)
            (NP (JJ many) (JJ other) (NNS things)))))
      (, ,)
      (PP (IN without)
        (S
          (VP (VBG caring)
            (PP (IN about)
              (NP
                (NP (DT the) (NNS sins))
                (SBAR
                  (S
                    (NP (PRP he))
                    (VP (VBD was)
                      (VP (VBG doing)))))))))))
    (. .)))

nsubj(murdered-2, He-1)
root(ROOT-0, murdered-2)
dep(murdered-2, beat-4)
dobj(beat-4, people-5)
prt(beat-4, up-6)
prep_for(beat-4, fun-8)
prep_for(beat-4, slept-10)
conj_and(fun-8, slept-10)
dep(slept-10, around-11)
amod(things-15, many-13)
amod(things-15, other-14)
prep_for(beat-4, things-15)
conj_and(fun-8, things-15)
prepc_without(murdered-2, caring-18)
det(sins-21, the-20)
prep_about(caring-18, sins-21)
dobj(doing-24, sins-21)
nsubj(doing-24, he-22)
aux(doing-24, was-23)
rcmod(sins-21, doing-24)

(ROOT
  (S
    (NP (CD One) (NN day))
    (NP (PRP he))
    (VP (VBD turned)
      (PP (TO to)
        (NP (NNP Christ)))
      (PP (IN with)
        (NP
          (NP (DT the) (NN help))
          (PP (IN of)
            (NP (JJ caring) (NNS christians))))))
    (. .)))

num(day-2, One-1)
tmod(turned-4, day-2)
nsubj(turned-4, he-3)
root(ROOT-0, turned-4)
prep_to(turned-4, Christ-6)
det(help-9, the-8)
prep_with(turned-4, help-9)
amod(christians-12, caring-11)
prep_of(help-9, christians-12)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP he))
    (NP (JJR more) (NNS deserving))
    (ADVP (RB then))
    (NP (NNS gays))
    (. ?)))

cop(gays-6, Is-1)
nsubj(gays-6, he-2)
amod(deserving-4, more-3)
attr(gays-6, deserving-4)
advmod(gays-6, then-5)
root(ROOT-0, gays-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB say) ('' '')
        (S
          (S
            (NP (PRP It))
            (VP (VBZ says)
              (PP (IN in)
                (NP (DT the) (NN bible)))
              ('' '')
              (SBAR (IN that)
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (ADJP (JJ wrong)))))))
          (, ,)
          (CC or)
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP
                (VP (VB support)
                  (NP (PRP them)))
                (CC and)
                (VP
                  (VP (VB lead)
                    (NP (PRP them))
                    (PP (TO to)
                      (NP (NNP Christ))))
                  (CC and)
                  (VP (VB let)
                    (S
                      (NP (PRP them))
                      (VP (VB discover)
                        (PP (IN for)
                          (NP (PRP themselves)))))))))))
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD need)
              (VP (VB turn)
                (NP (PRP$ their) (NNS hearts))
                (ADVP (RB around))))))))
    (. .)))

nsubj(say-3, You-1)
aux(say-3, can-2)
root(ROOT-0, say-3)
nsubj(says-6, It-5)
dep(say-3, says-6)
det(bible-9, the-8)
prep_in(says-6, bible-9)
complm(wrong-14, that-11)
nsubj(wrong-14, they-12)
cop(wrong-14, are-13)
ccomp(says-6, wrong-14)
nsubj(support-19, you-17)
nsubj(lead-22, you-17)
aux(support-19, can-18)
dep(say-3, support-19)
conj_or(says-6, support-19)
dobj(support-19, them-20)
conj_or(says-6, lead-22)
conj_and(support-19, lead-22)
dobj(lead-22, them-23)
prep_to(lead-22, Christ-25)
conj_and(support-19, let-27)
conj_and(lead-22, let-27)
nsubj(discover-29, them-28)
ccomp(let-27, discover-29)
prep_for(discover-29, themselves-31)
complm(need-34, that-32)
nsubj(need-34, they-33)
ccomp(say-3, need-34)
dep(need-34, turn-35)
poss(hearts-37, their-36)
dobj(turn-35, hearts-37)
advmod(turn-35, around-38)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB add))))))
    (. .)))

nsubj(like-3, I-1)
xsubj(add-5, I-1)
aux(like-3, 'd-2)
root(ROOT-0, like-3)
aux(add-5, to-4)
xcomp(like-3, add-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (DT a) (NN pair))
          (PP (IN of)
            (NP (JJ male) (NNS christians)))
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBP love)
                  (NP (DT each) (JJ other)))
                (CC and)
                (VP (VBP live)
                  (ADVP (RB together)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP claim)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP have)
              (VP (VBN been)
                (ADJP (JJ celibate)
                  (PP (IN since)
                    (S
                      (VP (VBG believing)))))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
det(pair-4, a-3)
dobj(know-2, pair-4)
nsubj(love-9, pair-4)
nsubj(live-13, pair-4)
amod(christians-7, male-6)
prep_of(pair-4, christians-7)
rcmod(pair-4, love-9)
det(other-11, each-10)
dobj(love-9, other-11)
rcmod(pair-4, live-13)
conj_and(love-9, live-13)
advmod(live-13, together-14)
nsubj(claim-18, they-17)
conj_but(know-2, claim-18)
complm(celibate-23, that-19)
nsubj(celibate-23, they-20)
aux(celibate-23, have-21)
cop(celibate-23, been-22)
ccomp(claim-18, celibate-23)
prepc_since(celibate-23, believing-25)

