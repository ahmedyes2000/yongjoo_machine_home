(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (NP
      (NP (NNS advocates))
      (PP (IN of)
        (NP (JJ gay) (NN marriage))))
    (VP (VBP are) (RB not)
      (VP (VBG anti)
        (NP (NN marriage)
          (CC or)
          (NN anti) (NN family))))
    (. .)))

advmod(anti-9, First-1)
nsubj(anti-9, advocates-3)
amod(marriage-6, gay-5)
prep_of(advocates-3, marriage-6)
aux(anti-9, are-7)
neg(anti-9, not-8)
root(ROOT-0, anti-9)
nn(family-13, marriage-10)
conj_or(marriage-10, anti-12)
nn(family-13, anti-12)
dobj(anti-9, family-13)

(ROOT
  (S
    (NP
      (NP (JJ Opposite) (NN sex) (NNS couples))
      (SBAR
        (WHNP (WP who))
        (S
          (VP
            (VP (VBP love)
              (NP (DT each) (JJ other)))
            (CC and)
            (VP (VBP wish)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB get)
                      (ADJP (JJ married)))
                    (CC and)
                    (VP (VB have)
                      (NP (NNS children)))))))))))
    (VP (MD may)
      (VP (VB continue)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (DT this)))))
        (, ,)
        (SBAR (RB just) (IN as)
          (S
            (NP (PRP they))
            (VP (VBP 've)
              (ADVP (RB always))
              (VP (VBN done)))))))
    (. .)))

amod(couples-3, Opposite-1)
nn(couples-3, sex-2)
nsubj(love-5, couples-3)
nsubj(wish-9, couples-3)
nsubj(continue-17, couples-3)
xsubj(do-19, couples-3)
rcmod(couples-3, love-5)
det(other-7, each-6)
dobj(love-5, other-7)
rcmod(couples-3, wish-9)
conj_and(love-5, wish-9)
aux(married-12, to-10)
dep(married-12, get-11)
xcomp(wish-9, married-12)
xcomp(wish-9, have-14)
conj_and(married-12, have-14)
dobj(have-14, children-15)
aux(continue-17, may-16)
root(ROOT-0, continue-17)
aux(do-19, to-18)
xcomp(continue-17, do-19)
dobj(do-19, this-20)
advmod(done-27, just-22)
dep(done-27, as-23)
nsubj(done-27, they-24)
aux(done-27, 've-25)
advmod(done-27, always-26)
ccomp(continue-17, done-27)

(ROOT
  (FRAG (CC And)
    (RB then)
    (NP
      (NP (NN innate))
      (SBAR
        (S
          (VP (VBZ realizations)))))
    (. ?)))

dep(then-2, And-1)
root(ROOT-0, then-2)
dep(then-2, innate-3)
rcmod(innate-3, realizations-4)

(ROOT
  (INTJ (UH Please) (. .)))

root(ROOT-0, Please-1)

(ROOT
  (S
    (PP (IN For)
      (NP (NN something)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ innate)))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP
                (VP (VBN agreed)
                  (PP (IN upon)
                    (ADVP (RB widely)))
                  (, ,)
                  (ADVP (RB consistently)))
                (, ,)
                (CC and)
                (VP
                  (PP (IN from)
                    (NP (NN birth))))))))))
    (. .)))

prep_for(have-9, something-2)
aux(innate-5, to-3)
cop(innate-5, be-4)
infmod(something-2, innate-5)
nsubj(have-9, it-7)
xsubj(agreed-12, it-7)
aux(have-9, would-8)
root(ROOT-0, have-9)
aux(agreed-12, to-10)
auxpass(agreed-12, be-11)
xcomp(have-9, agreed-12)
prep(agreed-12, upon-13)
pcomp(upon-13, widely-14)
advmod(agreed-12, consistently-16)
xcomp(have-9, from-19)
conj_and(agreed-12, from-19)
pobj(from-19, birth-20)

(ROOT
  (NP (DT No) (NNS exceptions) (. .)))

det(exceptions-2, No-1)
root(ROOT-0, exceptions-2)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (PRP I))
        (VP (VBD were)
          (NP
            (NP (DT the) (JJ only) (NN one))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ feels)
                  (SBAR (IN that)
                    (S
                      (NP (NN homosexuality))
                      (VP (VBZ is)
                        (NP (CC nor)
                          (NN unnatural))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ enough)
          (S
            (VP (TO to)
              (VP (VB prove)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN concept))
                    (VP (VBZ is) (RB not)
                      (ADJP (JJ innate)))))))))))
    (. .)))

advmod(one-7, Even-1)
dep(one-7, if-2)
nsubj(one-7, I-3)
cop(one-7, were-4)
det(one-7, the-5)
amod(one-7, only-6)
nsubj(feels-9, one-7)
advcl(enough-19, one-7)
rcmod(one-7, feels-9)
complm(unnatural-14, that-10)
nsubj(unnatural-14, homosexuality-11)
cop(unnatural-14, is-12)
cc(unnatural-14, nor-13)
ccomp(feels-9, unnatural-14)
nsubj(enough-19, it-16)
aux(enough-19, would-17)
cop(enough-19, be-18)
root(ROOT-0, enough-19)
aux(prove-21, to-20)
xcomp(enough-19, prove-21)
complm(innate-27, that-22)
det(concept-24, the-23)
nsubj(innate-27, concept-24)
cop(innate-27, is-25)
neg(innate-27, not-26)
ccomp(prove-21, innate-27)

(ROOT
  (NP (DT The) (NN change) (. ?)))

det(change-2, The-1)
root(ROOT-0, change-2)

(ROOT
  (S
    (NP
      (NP (JJ Same) (NN sex) (NNS couples))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP love)
            (NP (DT each) (JJ other))))))
    (VP (VBP want)
      (NP (JJ similar) (JJ legal) (NNS rights)))
    (. .)))

amod(couples-3, Same-1)
nn(couples-3, sex-2)
nsubj(love-5, couples-3)
nsubj(want-8, couples-3)
rcmod(couples-3, love-5)
det(other-7, each-6)
dobj(love-5, other-7)
root(ROOT-0, want-8)
amod(rights-11, similar-9)
amod(rights-11, legal-10)
dobj(want-8, rights-11)

(ROOT
  (S
    (ADVP (LS Second))
    (, ,)
    (NP (DT the) (NN law))
    (VP (MD should) (RB not)
      (VP (VB be)
        (VP (VBN based)
          (PRT (RP off))
          (PP (IN of)
            (NP (NN religion))))))
    (. .)))

advmod(based-8, Second-1)
det(law-4, the-3)
nsubjpass(based-8, law-4)
aux(based-8, should-5)
neg(based-8, not-6)
auxpass(based-8, be-7)
root(ROOT-0, based-8)
prep_off_of(based-8, religion-11)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (JJ important)
          (PP (IN for)
            (NP (DT a) (NN society))))
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (NNS morals)))))))
    (: ;)
    (S
      (NP
        (NP (JJ individual) (NNS rights))
        (CC and)
        (NP (NN freedom)))
      (VP (MD should)
        (VP (VB be)
          (VP (VBN protected) (, ,)
            (SBAR (IN whether)
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (NP (PRP$ their) (NN right))
                  (PP (TO to)
                    (NP
                      (NP (NN life))
                      (, ,)
                      (NP (NN property))
                      (, ,)
                      (CC or)
                      (NP (NNS opinions)))))))))))
    (. .)))

nsubj(important-3, It-1)
xsubj(have-8, It-1)
cop(important-3, is-2)
root(ROOT-0, important-3)
det(society-6, a-5)
prep_for(important-3, society-6)
aux(have-8, to-7)
xcomp(important-3, have-8)
dobj(have-8, morals-9)
amod(rights-12, individual-11)
nsubjpass(protected-17, rights-12)
conj_and(rights-12, freedom-14)
nsubjpass(protected-17, freedom-14)
aux(protected-17, should-15)
auxpass(protected-17, be-16)
parataxis(important-3, protected-17)
complm(right-23, whether-19)
nsubj(right-23, it-20)
cop(right-23, 's-21)
poss(right-23, their-22)
ccomp(protected-17, right-23)
prep_to(right-23, life-25)
prep_to(right-23, property-27)
conj_or(life-25, property-27)
prep_to(right-23, opinions-30)
conj_or(life-25, opinions-30)

(ROOT
  (S (CC But)
    (NP (DT the) (NN majority))
    (VP (MD should) (RB not)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (NNS rights))
                (PP (IN from)
                  (NP (DT the) (NN minority)))))))))
    (. .)))

cc(able-7, But-1)
det(majority-3, the-2)
nsubj(able-7, majority-3)
aux(able-7, should-4)
neg(able-7, not-5)
cop(able-7, be-6)
root(ROOT-0, able-7)
aux(take-9, to-8)
xcomp(able-7, take-9)
dobj(take-9, rights-10)
det(minority-13, the-12)
prep_from(take-9, minority-13)

(ROOT
  (S
    (ADVP (IN Besides))
    (, ,)
    (NP (RB not) (NN everyone))
    (VP
      (VP (VBZ is)
        (NP (NNP Christian)))
      (, ,)
      (CC or)
      (VP (VBZ believes)
        (SBAR (IN that)
          (S
            (NP (NN nature))
            (VP (VBD was)
              (ADJP (RB divinely) (VBN created)))))))
    (. .)))

advmod(Christian-6, Besides-1)
neg(everyone-4, not-3)
nsubj(Christian-6, everyone-4)
nsubj(believes-9, everyone-4)
cop(Christian-6, is-5)
root(ROOT-0, Christian-6)
conj_or(Christian-6, believes-9)
complm(created-14, that-10)
nsubjpass(created-14, nature-11)
auxpass(created-14, was-12)
advmod(created-14, divinely-13)
ccomp(believes-9, created-14)

(ROOT
  (SBARQ
    (PP (IN As)
      (NP (DT a) (NN secular) (NN state)))
    (, ,)
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (DT the) (NNP Bible))
      (VP (VB supersede)
        (NP (DT the) (NNP Constitution))))
    (. ?)))

det(state-4, a-2)
nn(state-4, secular-3)
prep_as(supersede-10, state-4)
advmod(supersede-10, why-6)
aux(supersede-10, should-7)
det(Bible-9, the-8)
nsubj(supersede-10, Bible-9)
root(ROOT-0, supersede-10)
det(Constitution-12, the-11)
dobj(supersede-10, Constitution-12)

(ROOT
  (S
    (NP (JJ Christian) (NNS beliefs)
      (CC and)
      (NNS dictates))
    (VP (VBP apply)
      (ADVP (RB only))
      (PP (TO to)
        (NP
          (NP (DT those) (NNS people))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP choose)
                (S
                  (VP (TO to)
                    (VP (VB believe)
                      (PP (IN in)
                        (NP (PRP them))))))))))))
    (. .)))

amod(beliefs-2, Christian-1)
nsubj(apply-5, beliefs-2)
conj_and(beliefs-2, dictates-4)
nsubj(apply-5, dictates-4)
root(ROOT-0, apply-5)
advmod(apply-5, only-6)
det(people-9, those-8)
prep_to(apply-5, people-9)
nsubj(choose-11, people-9)
rcmod(people-9, choose-11)
aux(believe-13, to-12)
xcomp(choose-11, believe-13)
prep_in(believe-13, them-15)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN way)
        (S
          (VP (TO to)
            (VP (VB justify)
              (S
                (VP (VBG forcing)
                  (NP (NNS others))
                  (S
                    (VP (TO to)
                      (VP (VB follow)
                        (NP (PRP them))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(way-4, no-3)
nsubj(is-2, way-4)
aux(justify-6, to-5)
infmod(way-4, justify-6)
xcomp(justify-6, forcing-7)
dobj(forcing-7, others-8)
aux(follow-10, to-9)
xcomp(forcing-7, follow-10)
dobj(follow-10, them-11)

