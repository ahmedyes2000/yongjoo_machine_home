(ROOT
  (S
    (VP (VBP Copy)
      (CC and)
      (VBP paste)
      (PP (IN from)
        (NP
          (NP (DT an) (JJR earlier) (NN debate))
          (PP (IN like)
            (NP (DT this))))))
    (. .)))

root(ROOT-0, Copy-1)
conj_and(Copy-1, paste-3)
det(debate-7, an-5)
amod(debate-7, earlier-6)
prep_from(Copy-1, debate-7)
prep_like(debate-7, this-9)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP are)
      (VP (VBN born)
        (NP (JJ gay))))
    (. .)))

nsubjpass(born-3, People-1)
auxpass(born-3, are-2)
root(ROOT-0, born-3)
dobj(born-3, gay-4)

(ROOT
  (S
    (VP (TO To)
      (VP (VB answer)
        (NP
          (NP
            (NP (NNP Pyg) (POS 's))
            (JJ new) (NN twist))
          (PP (IN on)
            (NP (DT this) (NN arguement))))))
    (. .)))

aux(answer-2, To-1)
root(ROOT-0, answer-2)
poss(twist-6, Pyg-3)
amod(twist-6, new-5)
dobj(answer-2, twist-6)
det(arguement-9, this-8)
prep_on(twist-6, arguement-9)

(ROOT
  (S
    (S
      (NP (PRP One))
      (VP (MD could)
        (VP (VB argue)
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (ADJP (RB too) (JJ many))
                  (NNS people))))))))
    (, ,)
    (CC and)
    (S
      (NP (NN homosexuality))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ good) (NN thing))
          (PP (IN in)
            (NP (DT this) (NN case))))))
    (. .)))

nsubj(argue-3, One-1)
aux(argue-3, could-2)
root(ROOT-0, argue-3)
complm(are-6, that-4)
expl(are-6, there-5)
ccomp(argue-3, are-6)
advmod(many-8, too-7)
amod(people-9, many-8)
nsubj(are-6, people-9)
nsubj(thing-16, homosexuality-12)
cop(thing-16, is-13)
det(thing-16, a-14)
amod(thing-16, good-15)
conj_and(argue-3, thing-16)
det(case-19, this-18)
prep_in(thing-16, case-19)

(ROOT
  (S
    (ADVP (RB Regardless))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (ADVP (RB really))
      (NP
        (NP (DT no) (NN end) (NN game))
        (ADVP (RB here))))
    (. .)))

advmod('s-4, Regardless-1)
expl('s-4, there-3)
root(ROOT-0, 's-4)
advmod('s-4, really-5)
det(game-8, no-6)
nn(game-8, end-7)
nsubj('s-4, game-8)
advmod(game-8, here-9)

(ROOT
  (S
    (S
      (NP
        (NP (NNS People))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP are)
              (ADJP (JJ gay))))))
      (VP (VBP have)
        (NP
          (NP (DT no) (NN choice))
          (PP (IN in)
            (NP (DT the) (NN matter))))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (JJ gay) (NN person))
      (VP
        (VP (MD can))
        (CC and)
        (ADVP (RB often))
        (VP (VBZ is)
          (VP (VBN born)
            (PP (IN from)
              (NP (CD two)))
            (PP (RB not)
              (NP (JJ gay) (NNS parents)))))))
    (. .)))

nsubj(gay-4, People-1)
nsubj(have-5, People-1)
cop(gay-4, are-3)
rcmod(People-1, gay-4)
root(ROOT-0, have-5)
det(choice-7, no-6)
dobj(have-5, choice-7)
det(matter-10, the-9)
prep_in(choice-7, matter-10)
det(person-15, a-13)
amod(person-15, gay-14)
nsubj(can-16, person-15)
nsubjpass(born-20, person-15)
conj_and(have-5, can-16)
conj_and(have-5, often-18)
advmod(can-16, often-18)
conj_and(can-16, often-18)
auxpass(born-20, is-19)
conj_and(have-5, born-20)
conj_and(can-16, born-20)
prep_from(born-20, two-22)
prep(born-20, not-23)
amod(parents-25, gay-24)
pobj(not-23, parents-25)

(ROOT
  (S (CC Plus)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT every) (NN level))
        (PP (IN of)
          (NP (JJ gay)))))
    (. .)))

cc('s-3, Plus-1)
expl('s-3, there-2)
root(ROOT-0, 's-3)
det(level-5, every-4)
nsubj('s-3, level-5)
prep_of(level-5, gay-7)

(ROOT
  (S
    (S
      (NP (NNP Human))
      (ADVP (RB sexuality))
      (VP (VBZ looks)
        (PP (IN like)
          (NP (DT a) (NN bell) (NN curve)))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (ADVP (RB really) (RB even))
      (NP (DT an)
        (NP (DT either))
        (CC or)
        (NP (NN situation))))
    (. .)))

nsubj(looks-3, Human-1)
advmod(looks-3, sexuality-2)
ccomp(either-15, looks-3)
det(curve-7, a-5)
nn(curve-7, bell-6)
prep_like(looks-3, curve-7)
nsubj(either-15, it-9)
cop(either-15, 's-10)
neg(either-15, not-11)
advmod(even-13, really-12)
advmod(either-15, even-13)
dep(either-15, an-14)
root(ROOT-0, either-15)
conj_or(either-15, situation-17)

(ROOT
  (S
    (SBAR (IN Though)
      (S
        (NP (JJS most))
        (VP (VBP fall)
          (ADVP
            (ADVP
              (ADVP (RB pretty) (RB heavily))
              (PP (IN on)
                (NP
                  (NP (CD one) (NN side))
                  (CC or)
                  (NP (DT the) (JJ other)))))
            (, ,)
            (CC or)
            (ADVP (IN at) (JJS least))))))
    (VP (VBP claim)
      (PP (TO to)))
    (. .)))

mark(fall-3, Though-1)
nsubj(fall-3, most-2)
csubj(claim-16, fall-3)
advmod(heavily-5, pretty-4)
advmod(fall-3, heavily-5)
num(side-8, one-7)
prep_on(heavily-5, side-8)
det(other-11, the-10)
prep_on(heavily-5, other-11)
conj_or(side-8, other-11)
advmod(fall-3, at-14)
conj_or(heavily-5, at-14)
pobj(at-14, least-15)
root(ROOT-0, claim-16)
prep(claim-16, to-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (RB not) (DT a) (JJ single) (JJ gay) (NN person))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB pass)
                (PP (IN on)
                  (NP (PRP$ their) (NNS genes)))
                (PP (TO to)
                  (NP
                    (NP (DT the) (JJ next) (NN generation))
                    (PP (IN of)
                      (NP (NNS humans)))))))))))
    (, ,)
    (NP
      (NP (RB still) (DT the) (JJ next) (NN generation))
      (PP (IN of)
        (NP (NNS humans))))
    (VP (MD would)
      (VP (VB have)
        (NP
          (NP (DT a) (JJ similar) (NN percentage))
          (PP (IN of)
            (NP (JJ gay) (NNS members))))))
    (. .)))

mark(were-7, If-1)
neg(person-6, not-2)
det(person-6, a-3)
amod(person-6, single-4)
amod(person-6, gay-5)
nsubj(were-7, person-6)
xsubj(pass-9, person-6)
advcl(have-27, were-7)
aux(pass-9, to-8)
xcomp(were-7, pass-9)
poss(genes-12, their-11)
prep_on(pass-9, genes-12)
det(generation-16, the-14)
amod(generation-16, next-15)
prep_to(pass-9, generation-16)
prep_of(generation-16, humans-18)
advmod(generation-23, still-20)
det(generation-23, the-21)
amod(generation-23, next-22)
nsubj(have-27, generation-23)
prep_of(generation-23, humans-25)
aux(have-27, would-26)
root(ROOT-0, have-27)
det(percentage-30, a-28)
amod(percentage-30, similar-29)
dobj(have-27, percentage-30)
amod(members-33, gay-32)
prep_of(percentage-30, members-33)

(ROOT
  (S
    (ADVP (RB Not) (RB just))
    (NP
      (NP (NNS people))
      (, ,)
      (NP (NNS pandas))
      (, ,)
      (NP (NNS swans))
      (, ,)
      (NP (NNS monkeys))
      (, ,)
      (CC and)
      (NP
        (NP (DT every) (JJ other) (NN mamal))
        (PP (IN in)
          (NP (DT the) (NN world)))))
    (VP (VBZ has)
      (NP
        (NP (DT a) (NN percentage))
        (PP (IN of)
          (NP (PRP$ its) (NN population)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ gay)))))))
    (. .)))

dep(just-2, Not-1)
advmod(has-18, just-2)
nsubj(has-18, people-3)
conj_and(people-3, pandas-5)
nsubj(has-18, pandas-5)
conj_and(people-3, swans-7)
nsubj(has-18, swans-7)
conj_and(people-3, monkeys-9)
nsubj(has-18, monkeys-9)
det(mamal-14, every-12)
amod(mamal-14, other-13)
conj_and(people-3, mamal-14)
nsubj(has-18, mamal-14)
det(world-17, the-16)
prep_in(mamal-14, world-17)
root(ROOT-0, has-18)
det(percentage-20, a-19)
dobj(has-18, percentage-20)
nsubj(gay-26, percentage-20)
poss(population-23, its-22)
prep_of(percentage-20, population-23)
cop(gay-26, is-25)
rcmod(percentage-20, gay-26)

(ROOT
  (S
    (S
      (NP (NN linkIf) (CD one))
      (VP (VBD were)
        (S
          (VP (TO to)
            (VP (VB argue)
              (SBAR (IN that)
                (S
                  (S
                    (VP (VBG being)
                      (ADJP (JJ gay))))
                  (VP (VBZ is)
                    (NP (DT a) (NN choice))))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD would)
      (ADVP (RB also))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB argue)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (CD two) (JJ male) (NNS swans))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBP are)
                          (ADJP (JJ gay))))))
                  (, ,)
                  (VP (VBP are)
                    (VP (VBG choosing)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ gay))))))))))))))
    (. .)))

nsubj(were-3, linkIf-1)
xsubj(argue-5, linkIf-1)
num(linkIf-1, one-2)
ccomp(have-16, were-3)
aux(argue-5, to-4)
xcomp(were-3, argue-5)
complm(choice-11, that-6)
cop(gay-8, being-7)
csubj(choice-11, gay-8)
cop(choice-11, is-9)
det(choice-11, a-10)
ccomp(argue-5, choice-11)
nsubj(have-16, they-13)
xsubj(argue-18, they-13)
aux(have-16, would-14)
advmod(have-16, also-15)
root(ROOT-0, have-16)
aux(argue-18, to-17)
xcomp(have-16, argue-18)
complm(choosing-28, that-19)
num(swans-22, two-20)
amod(swans-22, male-21)
nsubj(gay-25, swans-22)
nsubj(choosing-28, swans-22)
xsubj(gay-31, swans-22)
cop(gay-25, are-24)
rcmod(swans-22, gay-25)
aux(choosing-28, are-27)
ccomp(argue-18, choosing-28)
aux(gay-31, to-29)
cop(gay-31, be-30)
xcomp(choosing-28, gay-31)

(ROOT
  (SINV
    (ADVP (RB So))
    (VP (VBP please) (, ,) (VBP find)
      (NP (PRP me)))
    (NP (DT a) (NN swan)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ is)
            (VP (VBG making)
              (NP (DT a) (JJ conscious) (NN decision))
              (ADVP (RB anywhere)))))))
    (. .)))

advmod(please-2, So-1)
root(ROOT-0, please-2)
dep(please-2, find-4)
dobj(please-2, me-5)
det(swan-7, a-6)
nsubj(please-2, swan-7)
nsubj(making-10, that-8)
aux(making-10, is-9)
ccomp(swan-7, making-10)
det(decision-13, a-11)
amod(decision-13, conscious-12)
dobj(making-10, decision-13)
advmod(making-10, anywhere-14)

(ROOT
  (S
    (S
      (NP (NNS Animals))
      (VP (VBP work)
        (PP (IN on)
          (NP (NN instinct)))))
    (, ,)
    (NP (PRP they))
    (VP (VBP do) (RB n't)
      (VP (VB make) (`` ``)
        (NP (NN lifestyle) (NNS choices))))
    (. .)))

nsubj(work-2, Animals-1)
ccomp(make-9, work-2)
prep_on(work-2, instinct-4)
nsubj(make-9, they-6)
aux(make-9, do-7)
neg(make-9, n't-8)
root(ROOT-0, make-9)
nn(choices-12, lifestyle-11)
dobj(make-9, choices-12)

(ROOT
  (S ('' '')
    (ADVP (RB Now))
    (, ,)
    (NP
      (NP (NNS people))
      (PP (IN for)
        (NP (DT the) (JJS most) (NN part))))
    (VP (VBP are) (RB n't)
      (ADJP (JJ slaves)
        (PP (TO to)
          (NP (NN instinct)))))
    (. .)))

advmod(slaves-11, Now-2)
nsubj(slaves-11, people-4)
det(part-8, the-6)
amod(part-8, most-7)
prep_for(people-4, part-8)
cop(slaves-11, are-9)
neg(slaves-11, n't-10)
root(ROOT-0, slaves-11)
prep_to(slaves-11, instinct-13)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP have)
      (NP (PRP it))
      (, ,)
      (ADVP (RB just))
      (PP (IN like)
        (NP (NNS animals))))
    (. .)))

cc(have-3, But-1)
nsubj(have-3, we-2)
root(ROOT-0, have-3)
dobj(have-3, it-4)
advmod(have-3, just-6)
prep_like(have-3, animals-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP one))
        (, ,)
        (PP (IN like)
          (NP (DT the) (JJ gay) (NN swan)))
        (, ,)
        (VP (VBZ has)
          (NP (JJ gay) (NNS instincts)))))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (CD 0) (JJ logical) (NNS reasons))
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD should) (RB not)
              (VP (VB pursue)
                (NP (PRP it))))))))
    (. .)))

mark(has-9, If-1)
nsubj(has-9, one-2)
det(swan-7, the-5)
amod(swan-7, gay-6)
prep_like(has-9, swan-7)
advcl(are-14, has-9)
amod(instincts-11, gay-10)
dobj(has-9, instincts-11)
expl(are-14, there-13)
root(ROOT-0, are-14)
num(reasons-17, 0-15)
amod(reasons-17, logical-16)
nsubj(are-14, reasons-17)
nsubj(pursue-21, they-18)
aux(pursue-21, should-19)
neg(pursue-21, not-20)
rcmod(reasons-17, pursue-21)
dobj(pursue-21, it-22)

(ROOT
  (S
    (NP (NNP Infact))
    (, ,)
    (S (RB not)
      (VP (VBG being)
        (VP (VBN gay)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP 're)
                (ADJP (JJ gay))))))))
    (VP (VBZ leads)
      (PP (TO to)
        (NP
          (ADJP (JJ mental)
            (CC and)
            (JJ physical))
          (NN health) (NNS problems))))
    (. .)))

nsubj(leads-10, Infact-1)
neg(gay-5, not-3)
auxpass(gay-5, being-4)
partmod(leads-10, gay-5)
mark(gay-9, if-6)
nsubj(gay-9, you-7)
cop(gay-9, 're-8)
advcl(gay-5, gay-9)
root(ROOT-0, leads-10)
amod(problems-16, mental-12)
conj_and(mental-12, physical-14)
amod(problems-16, physical-14)
nn(problems-16, health-15)
prep_to(leads-10, problems-16)

