(ROOT
  (FRAG
    (NP (RB Just) (DT a) (NN reminder))
    (: :)
    (S
      (SBAR (IN if)
        (S
          (NP (NNP Prop) (CD 8))
          (VP (VBZ passes))))
      (, ,)
      (NP (JJ gay) (NNS people))
      (VP (MD will)
        (ADVP (RB still))
        (VP (VB be)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB form)
                  (NP (NNS relationships))
                  (PP (IN with)
                    (NP (PRP$ their) (NNS partners))))))))))
    (. .)))

advmod(reminder-3, Just-1)
det(reminder-3, a-2)
root(ROOT-0, reminder-3)
mark(passes-8, if-5)
nsubj(passes-8, Prop-6)
num(Prop-6, 8-7)
advcl(able-15, passes-8)
amod(people-11, gay-10)
nsubj(able-15, people-11)
aux(able-15, will-12)
advmod(able-15, still-13)
cop(able-15, be-14)
dep(reminder-3, able-15)
aux(form-17, to-16)
xcomp(able-15, form-17)
dobj(form-17, relationships-18)
poss(partners-21, their-20)
prep_with(form-17, partners-21)

(ROOT
  (S
    (NP
      (NP (NN Nothing))
      (PP (IN with)
        (NP (NNP Prop) (CD 8))))
    (VP (VBZ has)
      (NP (NN anything)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (S
                  (VP (VBG condemning)
                    (ADVP (RB homosexuality))))))))))
    (. .)))

nsubj(has-5, Nothing-1)
prep_with(Nothing-1, Prop-3)
num(Prop-3, 8-4)
root(ROOT-0, has-5)
dobj(has-5, anything-6)
aux(do-8, to-7)
infmod(anything-6, do-8)
prepc_with(do-8, condemning-10)
advmod(condemning-10, homosexuality-11)

(ROOT
  (S
    (NP
      (NP (NNS Supporters))
      (PP (IN of)
        (NP (NN gay-marriage))))
    (VP (MD may)
      (VP (VB say)
        (NP (DT all))
        (SBAR (IN that)
          (S
            (NP (DT this))
            (VP (VBZ is)
              (SBAR (IN about)
                (S
                  (VP (VBZ is) (`` ``)
                    (NP
                      (NP (CD two) (JJ loving) (NNS people))
                      (VP (VBG getting)
                        (ADJP (JJ married))))))))))))
    (. .)))

nsubj(say-5, Supporters-1)
prep_of(Supporters-1, gay-marriage-3)
aux(say-5, may-4)
root(ROOT-0, say-5)
dobj(say-5, all-6)
complm(is-9, that-7)
nsubj(is-9, this-8)
ccomp(say-5, is-9)
mark(people-15, about-10)
cop(people-15, is-11)
num(people-15, two-13)
amod(people-15, loving-14)
advcl(is-9, people-15)
dep(married-17, getting-16)
partmod(people-15, married-17)

(ROOT
  (S ('' '')
    (S (CC But)
      (NP (PRP it))
      (VP (VBZ 's) (RB not)
        (ADJP (RB that) (JJ simple))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ is)))))))
      (VP (VBZ is)
        (ADJP (RB very) (JJ naive))))
    (. .)))

nsubj(simple-7, it-3)
cop(simple-7, 's-4)
neg(simple-7, not-5)
advmod(simple-7, that-6)
root(ROOT-0, simple-7)
aux(think-11, to-10)
csubj(naive-16, think-11)
nsubj(is-13, it-12)
ccomp(think-11, is-13)
cop(naive-16, is-14)
advmod(naive-16, very-15)
conj_and(simple-7, naive-16)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ possible) (NNS repercussions))
      (PP (IN of)
        (S
          (VP (VBG legalizing)
            (NP (NN gay-marriage))))))
    (VP (VBP are)
      (ADJP (JJ innumerable)
        (CC and)
        (JJ unknown)))
    (. .)))

det(repercussions-3, The-1)
amod(repercussions-3, possible-2)
nsubj(innumerable-8, repercussions-3)
nsubj(unknown-10, repercussions-3)
prepc_of(repercussions-3, legalizing-5)
dobj(legalizing-5, gay-marriage-6)
cop(innumerable-8, are-7)
root(ROOT-0, innumerable-8)
conj_and(innumerable-8, unknown-10)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can) (RB not)
      (VP (VB risk)
        (S
          (VP (TO to)
            (VP (VB leave)
              (NP (DT these) (JJ unknown) (NNS consequences))
              (PP (TO to)
                (NP (NN chance))))))))
    (. .)))

nsubj(risk-4, We-1)
xsubj(leave-6, We-1)
aux(risk-4, can-2)
neg(risk-4, not-3)
root(ROOT-0, risk-4)
aux(leave-6, to-5)
xcomp(risk-4, leave-6)
det(consequences-9, these-7)
amod(consequences-9, unknown-8)
dobj(leave-6, consequences-9)
prep_to(leave-6, chance-11)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP throw)
          (NP
            (NP (DT a) (NN rock))
            (PP (IN in)
              (NP (DT a) (NN pond)))))))
    (, ,)
    (NP (DT the) (NNS ripples))
    (VP (VBP extend)
      (ADVP (RB very) (RB far)))
    (. .)))

advmod(throw-3, When-1)
nsubj(throw-3, you-2)
advcl(extend-12, throw-3)
det(rock-5, a-4)
dobj(throw-3, rock-5)
det(pond-8, a-7)
prep_in(rock-5, pond-8)
det(ripples-11, the-10)
nsubj(extend-12, ripples-11)
root(ROOT-0, extend-12)
advmod(far-14, very-13)
advmod(extend-12, far-14)

(ROOT
  (S
    (NP (NNP Prop) (CD 8))
    (VP (VBZ is) (RB not)
      (VP (VBN focused)
        (ADVP (RB as) (RB much))
        (PP (IN on)
          (NP
            (NP (DT the) (JJ initial) (NN impact))
            (PP (IN of)
              (NP
                (NP (DT the) (NN rock))
                (VP (VBG hitting)
                  (NP (DT the) (NN pond))
                  (SBAR (IN as)
                    (S
                      (NP (PRP we))
                      (VP (VBP are)
                        (PP (IN on)
                          (NP
                            (NP (DT the) (NNS ripples))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (MD will)
                                  (VP (VB result)))))))))))))))))
    (. .)))

nsubjpass(focused-5, Prop-1)
num(Prop-1, 8-2)
auxpass(focused-5, is-3)
neg(focused-5, not-4)
root(ROOT-0, focused-5)
advmod(much-7, as-6)
advmod(focused-5, much-7)
det(impact-11, the-9)
amod(impact-11, initial-10)
prep_on(focused-5, impact-11)
det(rock-14, the-13)
prep_of(impact-11, rock-14)
partmod(rock-14, hitting-15)
det(pond-17, the-16)
dobj(hitting-15, pond-17)
mark(are-20, as-18)
nsubj(are-20, we-19)
advcl(hitting-15, are-20)
det(ripples-23, the-22)
prep_on(are-20, ripples-23)
nsubj(result-26, ripples-23)
aux(result-26, will-25)
rcmod(ripples-23, result-26)

(ROOT
  (NP
    (NP (NNP Yes))
    (PP (IN on)
      (NP (CD 8)))
    (. .)))

root(ROOT-0, Yes-1)
prep_on(Yes-1, 8-3)

(ROOT
  (S
    (NP (NNP God))
    (VP (VBZ bless))
    (. .)))

nsubj(bless-2, God-1)
root(ROOT-0, bless-2)

