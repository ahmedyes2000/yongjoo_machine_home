(ROOT
  (S
    (ADVP (RB Actually))
    (NP
      (NP (DT the) (NN word))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG looking)
              (PP (IN for)))))))
    (VP (VBZ is)
      (VP (VBN called)
        (NP (NN analogy))))
    (. .)))

advmod(called-9, Actually-1)
det(word-3, the-2)
prep_for(looking-6, word-3)
nsubjpass(called-9, word-3)
nsubj(looking-6, you-4)
aux(looking-6, are-5)
rcmod(word-3, looking-6)
auxpass(called-9, is-8)
root(ROOT-0, called-9)
dobj(called-9, analogy-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP
              (NP (NN kind))
              (PP (IN of)
                (NP (DT a) (NN difficulty) (NN concept))))
            (SBAR (IN so)
              (S
                (NP (PRP I))
                (VP (MD will)
                  (VP (VB explain)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(kind-5, it-3)
cop(kind-5, 's-4)
ccomp(know-2, kind-5)
det(concept-9, a-7)
nn(concept-9, difficulty-8)
prep_of(kind-5, concept-9)
mark(explain-13, so-10)
nsubj(explain-13, I-11)
aux(explain-13, will-12)
advcl(kind-5, explain-13)
dobj(explain-13, it-14)

(ROOT
  (S
    (S
      (VP (VBG Making)
        (NP (DT an) (NN analogy))))
    (VP (VBZ is)
      (VP (VBG comparing)
        (NP (NNS similarities))
        (PP (IN between)
          (PP (TO to)
            (NP (NNS ideas))))))
    (. .)))

csubj(comparing-5, Making-1)
det(analogy-3, an-2)
dobj(Making-1, analogy-3)
aux(comparing-5, is-4)
root(ROOT-0, comparing-5)
dobj(comparing-5, similarities-6)
prep(comparing-5, between-7)
pcomp(between-7, to-8)
prep_to(between-7, ideas-9)

(ROOT
  (S (IN So)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP make)
          (NP
            (NP (DT an) (NN analogy))
            (PP (IN between)
              (NP (JJ gay) (NN marriage)
                (CC and)
                (NN interracial) (NN marriage)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG talking)
        (PP (IN about)
          (NP
            (NP (NNS things))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (ADJP (JJ similar)
                    (PP (IN between)
                      (NP (PRP them)))))))))))
    (. .)))

dep(talking-16, So-1)
mark(make-4, if-2)
nsubj(make-4, I-3)
advcl(talking-16, make-4)
det(analogy-6, an-5)
dobj(make-4, analogy-6)
amod(marriage-9, gay-8)
prep_between(analogy-6, marriage-9)
nn(marriage-12, interracial-11)
prep_between(analogy-6, marriage-12)
conj_and(marriage-9, marriage-12)
nsubj(talking-16, I-14)
aux(talking-16, am-15)
root(ROOT-0, talking-16)
prep_about(talking-16, things-18)
nsubj(similar-21, things-18)
cop(similar-21, are-20)
rcmod(things-18, similar-21)
prep_between(similar-21, them-23)

(ROOT
  (S
    (NP
      (NP (DT No) (NN one))
      (PP (IN in)
        (NP (PRP$ their) (JJ right) (NN mind))))
    (VP (MD would)
      (VP (VB take)
        (S
          (NP (DT this))
          (VP (TO to)
            (VP (VB mean)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (VP (VBG asserting)
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBP are)
                            (NP (DT the) (JJ same) (NN thing))))))))))))))
    (. .)))

det(one-2, No-1)
nsubj(take-8, one-2)
poss(mind-6, their-4)
amod(mind-6, right-5)
prep_in(one-2, mind-6)
aux(take-8, would-7)
root(ROOT-0, take-8)
nsubj(mean-11, this-9)
aux(mean-11, to-10)
xcomp(take-8, mean-11)
nsubj(asserting-14, I-12)
aux(asserting-14, am-13)
ccomp(mean-11, asserting-14)
nsubj(thing-19, they-15)
cop(thing-19, are-16)
det(thing-19, the-17)
amod(thing-19, same-18)
ccomp(asserting-14, thing-19)

(ROOT
  (S (CC And)
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR
          (S
            (NP (NN segregation))
            (VP (VBD was)
              (ADVP (RB awhile) (RB ago))
              (, ,)
              (SBAR (IN so)
                (S
                  (NP (PRP you))
                  (VP (MD may)
                    (VP (VB have)
                      (VP (VBN forgotten)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (JJ supreme) (NN court))
      (VP (VBD ruled)
        (SBAR (IN that)
          (S
            (NP (JJ separate))
            (VP (VBZ is) (RB not)
              (ADJP (JJ equal)))))))
    (. .)))

nsubj(know-3, I-2)
root(ROOT-0, know-3)
nsubj(was-5, segregation-4)
ccomp(know-3, was-5)
advmod(ago-7, awhile-6)
advmod(was-5, ago-7)
mark(forgotten-13, so-9)
nsubj(forgotten-13, you-10)
aux(forgotten-13, may-11)
aux(forgotten-13, have-12)
advcl(was-5, forgotten-13)
det(court-18, the-16)
amod(court-18, supreme-17)
nsubj(ruled-19, court-18)
conj_but(know-3, ruled-19)
complm(equal-24, that-20)
nsubj(equal-24, separate-21)
cop(equal-24, is-22)
neg(equal-24, not-23)
ccomp(ruled-19, equal-24)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB have)
        (NP
          (NP (CD one) (CD one) (NN type))
          (PP (IN of)
            (NP
              (NP
                (NP (NN thing))
                (PP (IN for)
                  (NP (CD one) (NN group))))
              (CC and)
              (NP
                (NP (CD one))
                (PP (IN for)
                  (NP (DT another)))))))))
    (. .)))

nsubj(have-4, You-1)
aux(have-4, ca-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
num(type-7, one-5)
num(type-7, one-6)
dobj(have-4, type-7)
prep_of(type-7, thing-9)
num(group-12, one-11)
prep_for(thing-9, group-12)
prep_of(type-7, one-14)
conj_and(thing-9, one-14)
prep_for(one-14, another-16)

(ROOT
  (NP
    (NP (NNP WARNING))
    (: :)
    (NP (NNP Incoming) (NNP analogy))
    (. .)))

root(ROOT-0, WARNING-1)
nn(analogy-4, Incoming-3)
dep(WARNING-1, analogy-4)

(ROOT
  (NP
    (NP (NNP White))
    (NP
      (NP (NN water) (NNS fountains))
      (CC and)
      (NP (JJ black) (NN water) (NNS fountains)))
    (. .)))

root(ROOT-0, White-1)
nn(fountains-3, water-2)
dep(White-1, fountains-3)
amod(fountains-7, black-5)
nn(fountains-7, water-6)
dep(White-1, fountains-7)
conj_and(fountains-3, fountains-7)

(ROOT
  (S
    (VP (VB Straight)
      (NP
        (NP (NNS marriages))
        (CC and)
        (NP (JJ gay) (JJ civil) (NNS unions))))
    (. .)))

root(ROOT-0, Straight-1)
dobj(Straight-1, marriages-2)
amod(unions-6, gay-4)
amod(unions-6, civil-5)
dobj(Straight-1, unions-6)
conj_and(marriages-2, unions-6)

