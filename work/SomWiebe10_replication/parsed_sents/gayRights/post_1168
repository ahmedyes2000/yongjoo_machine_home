(ROOT
  (S (`` ``)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP
          (NP (JJ gay) (NNS activists))
          (CC and)
          (NP (PRP$ their) (NNS supporters)))
        (VP (VB cry)
          (NP (NN discrimination)))))
    (NP (PRP they))
    (VP (MD conveniently)
      (VP (VB avoid)
        (NP
          (NP (DT the) (NN question))
          (PP (IN of)
            (SBAR (IN whether)
              (S
                (NP (JJ homosexual) (NNS relationships))
                (VP (VBP merit)
                  (S
                    (VP (VBG being)
                      (VP (VBN granted)
                        (NP (NN equality))
                        (PP (IN with)
                          (NP (NN marriage)))))))))))))
    (. .)))

advmod(cry-8, when-2)
amod(activists-4, gay-3)
nsubj(cry-8, activists-4)
poss(supporters-7, their-6)
conj_and(activists-4, supporters-7)
nsubj(cry-8, supporters-7)
advcl(conveniently-11, cry-8)
dobj(cry-8, discrimination-9)
nsubj(conveniently-11, they-10)
root(ROOT-0, conveniently-11)
dep(conveniently-11, avoid-12)
det(question-14, the-13)
dobj(avoid-12, question-14)
complm(merit-19, whether-16)
amod(relationships-18, homosexual-17)
nsubj(merit-19, relationships-18)
prepc_of(question-14, merit-19)
auxpass(granted-21, being-20)
xcomp(merit-19, granted-21)
dobj(granted-21, equality-22)
prep_with(granted-21, marriage-24)

(ROOT
  (S (`` ``)
    (ADVP (RB yet))
    (PP (IN with)
      (NP (DT this) (NN statement)))
    (S
      (NP (PRP you))
      (VP (VBP create)
        (NP (DT a) (JJ circular) (NN argument))))
    (: :)
    (S
      (S
        (NP (PRP they))
        (VP (MD can) (RB not)
          (VP (VB be)
            (VP (VBN married)))))
      (, ,)
      (ADVP (RB therefore))
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT no) (NN way))
            (PP (IN in)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (TO to)
                    (VP (VB evaluate)
                      (NP
                        (NP (RB fairly) (DT the) (NN question))
                        (PP (IN of)
                          (SBAR (IN whether)
                            (S
                              (NP (JJ homosexual) (NNS relationships))
                              (VP (VBP merit)
                                (S
                                  (VP (VBG being)
                                    (VP (VBN granted)
                                      (NP (NN equality)))))))))))))))))))
    (. .)))

advmod(create-7, yet-2)
det(statement-5, this-4)
prep_with(create-7, statement-5)
nsubj(create-7, you-6)
root(ROOT-0, create-7)
det(argument-10, a-8)
amod(argument-10, circular-9)
dobj(create-7, argument-10)
nsubjpass(married-16, they-12)
aux(married-16, can-13)
neg(married-16, not-14)
auxpass(married-16, be-15)
parataxis(create-7, married-16)
advmod(married-16, therefore-18)
expl(is-20, there-19)
dep(married-16, is-20)
det(way-22, no-21)
nsubj(is-20, way-22)
nsubj(evaluate-26, which-24)
aux(evaluate-26, to-25)
prepc_in(way-22, evaluate-26)
advmod(question-29, fairly-27)
det(question-29, the-28)
dobj(evaluate-26, question-29)
complm(merit-34, whether-31)
amod(relationships-33, homosexual-32)
nsubj(merit-34, relationships-33)
prepc_of(question-29, merit-34)
auxpass(granted-36, being-35)
xcomp(merit-34, granted-36)
dobj(granted-36, equality-37)

(ROOT
  (SBARQ
    (WHNP
      (WHNP (WDT which))
      (PP (IN of)
        (NP (NN course))))
    (SQ
      (VP (MD would)
        (VP (VB be)
          (ADJP (JJ necessary)
            (PP (IN in)
              (NP (NN order))))
          (SBAR (IN for)
            (S
              (NP (PRP them))
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN married)))))))))
    (. .)))

nsubj(necessary-6, which-1)
prep_of(which-1, course-3)
aux(necessary-6, would-4)
cop(necessary-6, be-5)
root(ROOT-0, necessary-6)
prep_in(necessary-6, order-8)
mark(married-13, for-9)
nsubjpass(married-13, them-10)
aux(married-13, to-11)
auxpass(married-13, be-12)
advcl(necessary-6, married-13)
xcomp(necessary-6, married-13)

(ROOT
  (NP
    (NP (NN ad) (NN nauseum))
    (, ,)
    (NP
      (NP (NN ad) (NN infinitum))
      (, ,)
      (NP (RB yes)))
    (. ?)))

nn(nauseum-2, ad-1)
root(ROOT-0, nauseum-2)
nn(infinitum-5, ad-4)
appos(nauseum-2, infinitum-5)
appos(infinitum-5, yes-7)

