(ROOT
  (S
    (NP (DT The) (NN way)
      (S
        (VP (TO to)
          (VP (VB look)
            (PP (IN at)
              (NP (PRP it)))))))
    (, ,)
    (PP (IN in)
      (NP (PRP$ my) (NN opinion)))
    (, ,)
    (VP (VBZ holds)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD should)
            (VP (VB ask)
              (S
                (NP (PRP yourself))
                (NP
                  (NP (DT the) (NN question) ('' ''))
                  (SBAR
                    (WHPP (IN In)
                      (WHNP (WP what)))
                    (S
                      (NP (NN way))
                      (VP (MD would)
                        (S
                          (VP (VBG allowing)
                            (S
                              (NP (JJ gay) (NNS marriages))
                              (VP (VB make)
                                (S
                                  (NP (PRP me))
                                  (VP (VB think)
                                    (ADJP (JJ different))
                                    (PP (IN about)
                                      (NP
                                        (NP (DT the) (NN value))
                                        (PP (IN of)
                                          (NP (PRP$ my) (JJ own)))))
                                    (, ,)
                                    (FRAG
                                      (ADVP (RB straight))
                                      (, ,)
                                      (NP (NN marriage))
                                      ('' ''))))))))))))))))))
    (. .)))

det(way-2, The-1)
nsubj(holds-12, way-2)
aux(look-4, to-3)
infmod(way-2, look-4)
prep_at(look-4, it-6)
poss(opinion-10, my-9)
prep_in(holds-12, opinion-10)
root(ROOT-0, holds-12)
complm(ask-16, that-13)
nsubj(ask-16, you-14)
aux(ask-16, should-15)
ccomp(holds-12, ask-16)
nsubj(question-19, yourself-17)
det(question-19, the-18)
xcomp(ask-16, question-19)
rel(would-24, what-22)
nsubj(would-24, way-23)
rcmod(question-19, would-24)
xcomp(would-24, allowing-25)
amod(marriages-27, gay-26)
nsubj(make-28, marriages-27)
ccomp(allowing-25, make-28)
nsubj(think-30, me-29)
ccomp(make-28, think-30)
acomp(think-30, different-31)
det(value-34, the-33)
prep_about(think-30, value-34)
poss(own-37, my-36)
prep_of(value-34, own-37)
dep(marriage-41, straight-39)
dep(think-30, marriage-41)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP ask)
          (S
            (NP (PRP yourself))
            (NP (DT this))))))
    (NP (DT the) (NN answer))
    (VP (VBZ is)
      (ADJP (JJ obvious))
      (, ,)
      (PP (IN of)
        (NP
          (NP (NN course))
          (SBAR
            (S
              (NP (PRP it))
              (VP (MD would) (RB n't) (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (ADJP (RB completely) (JJ separate)
                        (PP (IN from)
                          (NP (PRP$ your) (JJ own)))))))))))))
    (. .)))

advmod(ask-3, When-1)
nsubj(ask-3, you-2)
advcl(obvious-9, ask-3)
nsubj(this-5, yourself-4)
xcomp(ask-3, this-5)
det(answer-7, the-6)
nsubj(obvious-9, answer-7)
cop(obvious-9, is-8)
root(ROOT-0, obvious-9)
prep_of(obvious-9, course-12)
nsubj(would-14, it-13)
rcmod(course-12, would-14)
neg(would-14, n't-15)
mark(separate-21, as-17)
nsubj(separate-21, it-18)
cop(separate-21, 's-19)
advmod(separate-21, completely-20)
advcl(would-14, separate-21)
poss(own-24, your-23)
prep_from(separate-21, own-24)

(ROOT
  (S
    (SBAR (IN If) (, ,)
      (PP (IN for)
        (NP (NN instance)))
      (, ,)
      (S
        (NP (CD two))
        (VP (VBD convicted)
          (SBAR
            (S
              (NP (NNS criminals))
              (VP (MD would)
                (VP (VB marry))))))))
    (, ,)
    (NP (PRP you))
    (ADVP (RB probably))
    (VP (MD would) (RB n't)
      (VP (VB attach)
        (NP (DT this) (NN marriage))
        (PP (TO to)
          (NP (PRP$ your) (JJ own)))))
    (. .)))

mark(convicted-7, If-1)
dep(convicted-7, for-3)
pobj(for-3, instance-4)
nsubj(convicted-7, two-6)
advcl(attach-16, convicted-7)
nsubj(marry-10, criminals-8)
aux(marry-10, would-9)
ccomp(convicted-7, marry-10)
nsubj(attach-16, you-12)
advmod(attach-16, probably-13)
aux(attach-16, would-14)
neg(attach-16, n't-15)
root(ROOT-0, attach-16)
det(marriage-18, this-17)
dobj(attach-16, marriage-18)
poss(own-21, your-20)
prep_to(attach-16, own-21)

(ROOT
  (S
    (S
      (S
        (NP
          (NP (DT The) (JJ same) (NNS counts))
          (PP (IN for)
            (NP (JJ gay) (NN marriage)))))
      (, ,)
      (NP (PRP you))
      (VP (MD may) (RB not)
        (VP (VB agree)
          (PP (IN with)
            (NP (PRP it))))))
    (CC but)
    (S
      (NP (DT the) (NN marriage))
      (VP
        (VP (VBZ is)
          (ADJP (RB completely) (JJ separate))
          (PP (IN from)
            (NP (PRP$ your) (JJ own))))
        (CC and)
        (VP (MD would) (RB n't)
          (VP (VB affect)
            (NP (PRP it))
            (PP (IN in)
              (NP (DT any) (NN way)))))))
    (. .)))

det(counts-3, The-1)
amod(counts-3, same-2)
ccomp(agree-11, counts-3)
amod(marriage-6, gay-5)
prep_for(counts-3, marriage-6)
nsubj(agree-11, you-8)
aux(agree-11, may-9)
neg(agree-11, not-10)
root(ROOT-0, agree-11)
prep_with(agree-11, it-13)
det(marriage-16, the-15)
nsubj(separate-19, marriage-16)
nsubj(affect-26, marriage-16)
cop(separate-19, is-17)
advmod(separate-19, completely-18)
conj_but(agree-11, separate-19)
poss(own-22, your-21)
prep_from(separate-19, own-22)
aux(affect-26, would-24)
neg(affect-26, n't-25)
conj_but(agree-11, affect-26)
conj_and(separate-19, affect-26)
dobj(affect-26, it-27)
det(way-30, any-29)
prep_in(affect-26, way-30)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NN argument))
      (SBAR
        (S
          (NP
            (NP (NNS people))
            (VP (VBN opposed)
              (PP (TO to)
                (NP (JJ gay) (NN marriage)))))
          (VP (MD could)
            (VP (VB make))))))
    (VP (VBZ is)
      (NP (DT the) (JJ religious) (NN one)))
    (. .)))

det(argument-3, The-1)
amod(argument-3, only-2)
dobj(make-10, argument-3)
nsubj(one-14, argument-3)
nsubj(make-10, people-4)
partmod(people-4, opposed-5)
amod(marriage-8, gay-7)
prep_to(opposed-5, marriage-8)
aux(make-10, could-9)
rcmod(argument-3, make-10)
cop(one-14, is-11)
det(one-14, the-12)
amod(one-14, religious-13)
root(ROOT-0, one-14)

(ROOT
  (S (CC But)
    (SBAR (IN as)
      (S
        (NP (DT the) (NN constitution))
        (ADVP (RB specifically))
        (VP (VBZ states)
          (NP
            (NP (DT a) (NN division))
            (PP (IN between)
              (NP (NN religion)
                (CC and)
                (NN state)))))))
    (NP (DT this) (NN argument))
    (VP (VBZ is)
      (ADJP (JJ moot)))
    (. .)))

cc(moot-16, But-1)
mark(states-6, as-2)
det(constitution-4, the-3)
nsubj(states-6, constitution-4)
advmod(states-6, specifically-5)
dep(moot-16, states-6)
det(division-8, a-7)
dobj(states-6, division-8)
prep_between(division-8, religion-10)
prep_between(division-8, state-12)
conj_and(religion-10, state-12)
det(argument-14, this-13)
nsubj(moot-16, argument-14)
cop(moot-16, is-15)
root(ROOT-0, moot-16)

