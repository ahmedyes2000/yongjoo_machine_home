(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (ADVP (RB unfortunately))
    (NP (DT that))
    (VP (VBZ is)
      (NP (NN democracy)))
    (. .)))

dep(democracy-6, Yes-1)
advmod(democracy-6, unfortunately-3)
nsubj(democracy-6, that-4)
cop(democracy-6, is-5)
root(ROOT-0, democracy-6)

(ROOT
  (S
    (NP (DT The) (NN constitution))
    (VP (VBZ gives)
      (NP (PRP us))
      (NP (JJ certain) (JJ basic) (NNS rights)))
    (. .)))

det(constitution-2, The-1)
nsubj(gives-3, constitution-2)
root(ROOT-0, gives-3)
iobj(gives-3, us-4)
amod(rights-7, certain-5)
amod(rights-7, basic-6)
dobj(gives-3, rights-7)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (ADJP (JJ perfect))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (DT the) (JJS best) (NN thing))
          (PP (IN out)
            (NP (RB there))))))
    (. !)))

nsubj(perfect-4, It-1)
cop(perfect-4, 's-2)
neg(perfect-4, not-3)
root(ROOT-0, perfect-4)
nsubj(thing-11, it-7)
cop(thing-11, 's-8)
det(thing-11, the-9)
amod(thing-11, best-10)
conj_but(perfect-4, thing-11)
prep(thing-11, out-12)
pobj(out-12, there-13)

(ROOT
  (S
    (S
      (INTJ (UH Oh))
      (, ,)
      (CC and)
      (NP (PRP it))
      (VP (VBZ 's) (RB not)
        (NP (DT the) (JJ same))
        (PP (IN as)
          (NP (JJ civil) (NNS rights)))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBD was)
            (ADJP (JJ black)))))
      (NP (PRP I))
      (VP (MD would)
        (VP (VB be)
          (VP
            (ADVP (RB horribly))
            (VBN offended)
            (PP (IN by)
              (NP (PDT such) (DT a) (NN comparison)))))))
    (. .)))

dep(same-8, Oh-1)
conj_and(same-8, it-4)
nsubj(same-8, it-4)
cop(same-8, 's-5)
neg(same-8, not-6)
det(same-8, the-7)
root(ROOT-0, same-8)
amod(rights-11, civil-10)
prep_as(same-8, rights-11)
mark(black-17, if-14)
nsubj(black-17, I-15)
cop(black-17, was-16)
advcl(offended-22, black-17)
nsubjpass(offended-22, I-18)
aux(offended-22, would-19)
auxpass(offended-22, be-20)
advmod(offended-22, horribly-21)
conj_and(same-8, offended-22)
predet(comparison-26, such-24)
det(comparison-26, a-25)
agent(offended-22, comparison-26)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (VP (VBG fighting)
        (PP (IN for)
          (NP
            (NP (JJ basic) (JJ human) (NNS rights))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBD had)
                  (VP (VBN been)
                    (VP (VBN denied)
                      (NP (PRP them)))))))))))
    (. .)))

nsubj(fighting-3, They-1)
aux(fighting-3, were-2)
root(ROOT-0, fighting-3)
amod(rights-7, basic-5)
amod(rights-7, human-6)
prep_for(fighting-3, rights-7)
nsubjpass(denied-11, rights-7)
aux(denied-11, had-9)
auxpass(denied-11, been-10)
rcmod(rights-7, denied-11)
dobj(denied-11, them-12)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBD were)
        (VP (VBG being)
          (VP (VBN killed))))
      (, ,)
      (CC and)
      (VP (VBD denied)
        (NP
          (NP (NN work) (NNS opportunities))
          (CC and)
          (NP (DT the) (NN right)))
        (S
          (VP (TO to)
            (VP (VB vote))))))
    (. .)))

nsubjpass(killed-4, They-1)
nsubjpass(denied-7, They-1)
aux(killed-4, were-2)
auxpass(killed-4, being-3)
root(ROOT-0, killed-4)
conj_and(killed-4, denied-7)
nn(opportunities-9, work-8)
dobj(denied-7, opportunities-9)
det(right-12, the-11)
dobj(denied-7, right-12)
conj_and(opportunities-9, right-12)
aux(vote-14, to-13)
xcomp(denied-7, vote-14)

(ROOT
  (S
    (NP (NNP Homosexual) (POS 's))
    (VP (VBP are) (RB n't)
      (VP (VBG being)
        (VP (VBN denied)
          (NP
            (NP (NN anything))
            (PRN (-LRB- -LRB-)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is) (RB n't)
                    (VP
                      (ADVP (RB already))
                      (VBN denied)
                      (PP (TO to)
                        (NP
                          (NP (NN everyone) (RB else))
                          (PP (IN in)
                            (NP (DT the) (NN country)))))))))
              (-RRB- -RRB-))))))
    (. .)))

nsubjpass(denied-6, Homosexual-1)
possessive(Homosexual-1, 's-2)
aux(denied-6, are-3)
neg(denied-6, n't-4)
auxpass(denied-6, being-5)
root(ROOT-0, denied-6)
dobj(denied-6, anything-7)
nsubjpass(denied-13, that-9)
auxpass(denied-13, is-10)
neg(denied-13, n't-11)
advmod(denied-13, already-12)
dep(anything-7, denied-13)
prep_to(denied-13, everyone-15)
advmod(everyone-15, else-16)
det(country-19, the-18)
prep_in(everyone-15, country-19)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB just))
    (VP (VBP are) (RB n't)
      (VP (VBG getting)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP they))
            (VP (VBP want))))))
    (. .)))

nsubj(getting-5, They-1)
advmod(getting-5, just-2)
aux(getting-5, are-3)
neg(getting-5, n't-4)
root(ROOT-0, getting-5)
dobj(want-8, what-6)
nsubj(want-8, they-7)
ccomp(getting-5, want-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP want)
          (ADVP (RBR more)))))
    (NP (PRP we))
    (VP (MD can)
      (VP (VB pass)
        (S
          (NP (NNS laws))
          (VP (TO to)
            (VP (VB make)
              (NP (JJR more))
              (PP
                (PP (IN by)
                  (NP (NN majority) (NN vote)))
                (CC or)
                (PP (IN through)
                  (NP (PRP$ our) (VBN elected) (NNS representatives)))))))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, we-2)
advcl(pass-7, want-3)
advmod(want-3, more-4)
nsubj(pass-7, we-5)
aux(pass-7, can-6)
root(ROOT-0, pass-7)
nsubj(make-10, laws-8)
nsubj(make-10', laws-8)
aux(make-10, to-9)
xcomp(pass-7, make-10)
xcomp(pass-7, make-10')
conj_or(make-10, make-10')
dobj(make-10, more-11)
nn(vote-14, majority-13)
prep_by(make-10, vote-14)
poss(representatives-19, our-17)
amod(representatives-19, elected-18)
prep_through(make-10', representatives-19)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT those) (NNS rights))
        (VP (VBP violate)
          (NP (DT the) (JJ constitutional) (NNS ones)))))
    (, ,)
    (NP (DT the) (NNS courts))
    (VP (MD can)
      (VP (VB overturn)
        (NP (PRP them))))
    (. .)))

mark(violate-4, If-1)
det(rights-3, those-2)
nsubj(violate-4, rights-3)
advcl(overturn-12, violate-4)
det(ones-7, the-5)
amod(ones-7, constitutional-6)
dobj(violate-4, ones-7)
det(courts-10, the-9)
nsubj(overturn-12, courts-10)
aux(overturn-12, can-11)
root(ROOT-0, overturn-12)
dobj(overturn-12, them-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT this))
        (VP (VBZ happens))))
    (NP (DT the) (NNS people))
    (VP (MD can)
      (VP (VB amend)
        (NP (DT the) (NN constitution)
          (S
            (VP (TO to)
              (VP (VB pass)
                (NP (DT the) (NN law))
                (ADVP (RB anyway))))))))
    (. .)))

mark(happens-3, If-1)
nsubj(happens-3, this-2)
advcl(amend-7, happens-3)
det(people-5, the-4)
nsubj(amend-7, people-5)
aux(amend-7, can-6)
root(ROOT-0, amend-7)
det(constitution-9, the-8)
dobj(amend-7, constitution-9)
aux(pass-11, to-10)
infmod(constitution-9, pass-11)
det(law-13, the-12)
dobj(pass-11, law-13)
advmod(pass-11, anyway-14)

(ROOT
  (S
    (NP (DT The) (NN constitution))
    (VP (VBD did) (RB n't)
      (VP (VB give)
        (NP (NN anyone))
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB marry)))))))
    (. .)))

det(constitution-2, The-1)
nsubj(give-5, constitution-2)
aux(give-5, did-3)
neg(give-5, n't-4)
root(ROOT-0, give-5)
iobj(give-5, anyone-6)
det(right-8, the-7)
dobj(give-5, right-8)
aux(marry-10, to-9)
infmod(right-8, marry-10)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP have)
      (VP (VBN passed)
        (NP (NNS laws))
        (S
          (VP (VBG allowing)
            (NP
              (NP (NN marriage))
              (PP (IN between)
                (NP
                  (NP (DT a) (NN man))
                  (CC and)
                  (NP (DT a) (NN woman)))))))))
    (. .)))

nsubj(passed-3, People-1)
aux(passed-3, have-2)
root(ROOT-0, passed-3)
dobj(passed-3, laws-4)
xcomp(passed-3, allowing-5)
dobj(allowing-5, marriage-6)
det(man-9, a-8)
prep_between(marriage-6, man-9)
det(woman-12, a-11)
prep_between(marriage-6, woman-12)
conj_and(man-9, woman-12)

(ROOT
  (S
    (S
      (NP (DT These) (NNS laws))
      (VP (VBP apply)
        (ADVP (RB equally))
        (PP (TO to)
          (NP (DT all)))))
    (, ,) (IN so)
    (S
      (NP (JJ equal) (NN protection))
      (VP (VBZ is) (RB n't)
        (VP (VBN violated))))
    (PRN (-LRB- -LRB-)
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (ADJP (JJ sorry)
            (PRN (, ,)
              (S
                (NP (PRP you))
                (VP (VBP have)
                  (NP
                    (QP (RB just) (RB as) (JJ much))
                    (DT a) (NN right)))))
            (S
              (VP (TO to)
                (VP (VB marry)
                  (NP
                    (NP (DT a) (NN member))
                    (PP (IN of)
                      (NP (DT the) (JJ opposite) (NN sex))))
                  (PP (IN as)
                    (NP (NN anyone) (RB else)))))))))
      (-RRB- -RRB-))
    (. .)))

det(laws-2, These-1)
nsubj(apply-3, laws-2)
root(ROOT-0, apply-3)
advmod(apply-3, equally-4)
prep_to(apply-3, all-6)
dep(apply-3, so-8)
amod(protection-10, equal-9)
nsubjpass(violated-13, protection-10)
auxpass(violated-13, is-11)
neg(violated-13, n't-12)
dep(apply-3, violated-13)
nsubj(sorry-17, I-15)
cop(sorry-17, 'm-16)
dep(apply-3, sorry-17)
nsubj(have-20, you-19)
dep(sorry-17, have-20)
quantmod(much-23, just-21)
quantmod(much-23, as-22)
num(right-25, much-23)
det(right-25, a-24)
dobj(have-20, right-25)
aux(marry-27, to-26)
xcomp(sorry-17, marry-27)
det(member-29, a-28)
dobj(marry-27, member-29)
det(sex-33, the-31)
amod(sex-33, opposite-32)
prep_of(member-29, sex-33)
prep_as(marry-27, anyone-35)
advmod(anyone-35, else-36)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB like)
            (NP (PRP it))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP vote)
      (S
        (VP (TO to)
          (VP (VB change)
            (NP (DT the) (NNS laws))))))
    (. .)))

mark(like-5, If-1)
nsubj(like-5, you-2)
aux(like-5, do-3)
neg(like-5, n't-4)
advcl(vote-9, like-5)
dobj(like-5, it-6)
nsubj(vote-9, you-8)
xsubj(change-11, you-8)
root(ROOT-0, vote-9)
aux(change-11, to-10)
xcomp(vote-9, change-11)
det(laws-13, the-12)
dobj(change-11, laws-13)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (NN democracy)))
    (. .)))

nsubj(democracy-3, That-1)
cop(democracy-3, 's-2)
root(ROOT-0, democracy-3)

