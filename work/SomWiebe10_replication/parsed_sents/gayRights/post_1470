(ROOT
  (S
    (NP (PRP I))
    (VP (VBP accept)
      (NP
        (QP (IN at) (JJS least) (CD 90))
        (NN %))
      (PP (IN if)
        (NP
          (NP (RB not) (JJR more))
          (PP (IN of)
            (NP
              (NP (DT the) (NNS people))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP contribute)
                    (PP (TO to)
                      (NP (DT this) (NN site)))))))))))
    (. .)))

nsubj(accept-2, I-1)
root(ROOT-0, accept-2)
quantmod(90-5, at-3)
mwe(at-3, least-4)
pobj(at-3, least-4)
num(%-6, 90-5)
dobj(accept-2, %-6)
neg(more-9, not-8)
prep_if(accept-2, more-9)
det(people-12, the-11)
prep_of(more-9, people-12)
nsubj(contribute-14, people-12)
rcmod(people-12, contribute-14)
det(site-17, this-16)
prep_to(contribute-14, site-17)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB just))
    (VP (VBP happen)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (DT the) (CD three))))
            (SBAR
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP do) (RB not)
                    (VP (VB accept)
                      (ADVP (RB anymore))))))
              (CC and)
              (SBAR (IN that)
                (S
                  (NP (NN decision))
                  (VP (VBD took)
                    (NP (PRP me))
                    (NP (DT a) (NN while))))))))))
    (. .)))

nsubj(happen-3, You-1)
xsubj(one-6, You-1)
advmod(happen-3, just-2)
root(ROOT-0, happen-3)
aux(one-6, to-4)
cop(one-6, be-5)
xcomp(happen-3, one-6)
det(three-9, the-8)
prep_of(one-6, three-9)
nsubj(accept-13, I-10)
aux(accept-13, do-11)
neg(accept-13, not-12)
ccomp(one-6, accept-13)
advmod(accept-13, anymore-14)
complm(took-18, that-16)
nsubj(took-18, decision-17)
ccomp(one-6, took-18)
conj_and(accept-13, took-18)
iobj(took-18, me-19)
det(while-21, a-20)
dobj(took-18, while-21)

(ROOT
  (INTJ (UH Yes) (. !)))

root(ROOT-0, Yes-1)

(ROOT
  (S
    (S
      (NP (NN Everyone))
      (VP (VBZ wishes)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN accepted)
                (PP (IN on)
                  (NP (PRP$ their) (JJ own) (NNS terms)))))))))
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (DT that))
          (VP (VBZ means)
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD must)
                  (VP (VB accept)
                    (NP (DT a) (NN person))
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (PRP they))
                        (VP (VB behave)
                          (PP (IN like)
                            (NP
                              (NP (DT a) (JJ complete) (NN ass))
                              (, ,)
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBZ 's) (RB not)
                                    (NP (NN something)))))))))))))))))
      (NP (PRP I))
      (VP (MD would)
        (VP (VB do))))
    (. .)))

nsubj(wishes-2, Everyone-1)
xsubj(accepted-5, Everyone-1)
root(ROOT-0, wishes-2)
aux(accepted-5, to-3)
auxpass(accepted-5, be-4)
xcomp(wishes-2, accepted-5)
poss(terms-9, their-7)
amod(terms-9, own-8)
prep_on(accepted-5, terms-9)
mark(means-13, if-11)
nsubj(means-13, that-12)
advcl(do-33, means-13)
nsubj(accept-16, I-14)
aux(accept-16, must-15)
ccomp(means-13, accept-16)
det(person-18, a-17)
dobj(accept-16, person-18)
advmod(behave-21, when-19)
nsubj(behave-21, they-20)
advcl(accept-16, behave-21)
det(ass-25, a-23)
amod(ass-25, complete-24)
prep_like(behave-21, ass-25)
nsubj(something-30, ass-25)
cop(something-30, 's-28)
neg(something-30, not-29)
rcmod(ass-25, something-30)
nsubj(do-33, I-31)
aux(do-33, would-32)
conj_but(wishes-2, do-33)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (NN someone) (RB else))
          (VP (VBZ has)
            (NP
              (NP (DT a) (NN problem))
              (PP (IN with)
                (NP (PRP me)))))))
      (NP (PRP they))
      (ADVP (RB usually))
      (VP (VBP state)
        (NP (PRP it))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP have) (RB n't)
        (VP (VBN heard)
          (ADVP (RB much)
            (PP (IN from)
              (NP (NN anyone))))
          (PP (IN except)
            (NP (DT the)
              (ADJP (RB very) (JJ young))
              (NNS ones)))
          (SBAR (IN so)
            (S
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (MD shall))))
              (NP (PRP I))
              (VP (VBP think)))))))
    (. ?)))

mark(has-4, If-1)
nsubj(has-4, someone-2)
advmod(someone-2, else-3)
advcl(state-11, has-4)
det(problem-6, a-5)
dobj(has-4, problem-6)
prep_with(problem-6, me-8)
nsubj(state-11, they-9)
advmod(state-11, usually-10)
root(ROOT-0, state-11)
dobj(state-11, it-12)
nsubj(heard-17, I-14)
aux(heard-17, have-15)
neg(heard-17, n't-16)
conj_but(state-11, heard-17)
advmod(heard-17, much-18)
prep_from(much-18, anyone-20)
det(ones-25, the-22)
advmod(young-24, very-23)
amod(ones-25, young-24)
prep_except(heard-17, ones-25)
mark(think-30, so-26)
nsubj(shall-28, what-27)
dep(think-30, shall-28)
nsubj(think-30, I-29)
advcl(heard-17, think-30)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (RB plenty))
        (PP (IN of)
          (NP
            (NP (NNS people))
            (SBAR
              (WHNP (WP$ whose) (NNS views))
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB agree)
                    (PP (IN with)
                      (SBAR (CC but)
                        (S
                          (NP (PRP I))
                          (VP (VBP accept)
                            (NP (PRP them))
                            (PP (IN for)
                              (SBAR
                                (SBAR
                                  (WHNP (WP who))
                                  (S
                                    (NP (PRP they))
                                    (VP (VBP are))))
                                (CC and)
                                (SBAR
                                  (WHADVP (WRB how))
                                  (S
                                    (NP (PRP they))
                                    (VP (VBP are))))))
                            (, ,)
                            (S
                              (ADVP (RB generally))
                              (VP (VBG speaking)))))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, plenty-3)
prep_of(plenty-3, people-5)
poss(views-7, people-5)
dobj(agree-11, views-7)
rel(agree-11, views-7)
nsubj(agree-11, I-8)
aux(agree-11, do-9)
neg(agree-11, n't-10)
rcmod(people-5, agree-11)
cc(accept-15, but-13)
nsubj(accept-15, I-14)
prepc_with(agree-11, accept-15)
dobj(accept-15, them-16)
dobj(are-20, who-18)
nsubj(are-20, they-19)
prepc_for(accept-15, are-20)
advmod(are-24, how-22)
nsubj(are-24, they-23)
prepc_for(accept-15, are-24)
conj_and(are-20, are-24)
advmod(speaking-27, generally-26)
partmod(accept-15, speaking-27)
xcomp(accept-15, speaking-27)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (JJ only) (NN thing))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP do) (RB not)
              (VP (VB accept))))))
      (, ,)
      (PP (IN across)
        (NP (DT the) (NN board)))
      (, ,))
    (VP (VBP are)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBP are)
                (ADJP (RB ill) (JJ mannered)))
              (CC and)
              (VP (MD can)
                (VP (VB say)
                  (NP (NN nothing))
                  (PP (IN in)
                    (NP
                      (NP (NN defense))
                      (PP (IN of)
                        (NP
                          (NP (PRP$ their) (JJ own) (NNS arguments))
                          (PP (JJ other) (IN than)
                            (NP
                              (S
                                (VP (TO to)
                                  (VP (VB start)
                                    (NP
                                      (NP (DT the) (NN name) (NN calling)
                                        (CC or)
                                        (NN rag))
                                      (PP (IN on)
                                        (NP (DT the) (NN age) (NN routine))))))))))))))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, only-2)
dobj(accept-7, thing-3)
nsubj(those-14, thing-3)
nsubj(accept-7, I-4)
aux(accept-7, do-5)
neg(accept-7, not-6)
rcmod(thing-3, accept-7)
det(board-11, the-10)
prep_across(thing-3, board-11)
cop(those-14, are-13)
root(ROOT-0, those-14)
nsubj(mannered-18, those-14)
nsubj(say-21, those-14)
cop(mannered-18, are-16)
advmod(mannered-18, ill-17)
rcmod(those-14, mannered-18)
aux(say-21, can-20)
rcmod(those-14, say-21)
conj_and(mannered-18, say-21)
dobj(say-21, nothing-22)
prep_in(say-21, defense-24)
poss(arguments-28, their-26)
amod(arguments-28, own-27)
prep_of(defense-24, arguments-28)
dep(arguments-28, other-29)
aux(start-32, to-31)
prep_than(arguments-28, start-32)
det(calling-35, the-33)
nn(calling-35, name-34)
dobj(start-32, calling-35)
dobj(start-32, rag-37)
conj_or(calling-35, rag-37)
det(routine-41, the-39)
nn(routine-41, age-40)
prep_on(calling-35, routine-41)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB wish)
          (S
            (VP (TO to)
              (VP
                (VP (VB have)
                  (NP (PRP$ my) (NN cake)))
                (CC and)
                (VP (VB eat)
                  (NP (PRP it))
                  (ADVP (RB too)))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB understand)
          (SBAR
            (WHADVP (WRB why))
            (S
              (NP (PRP you))
              (VP (MD would)
                (VP (VB accuse)
                  (NP (PRP me))
                  (PP (IN of)
                    (S
                      (VP (VBG wanting)
                        (NP (DT that))))))))))))
    (. .)))

nsubj(wish-4, I-1)
xsubj(have-6, I-1)
aux(wish-4, do-2)
neg(wish-4, n't-3)
root(ROOT-0, wish-4)
aux(have-6, to-5)
xcomp(wish-4, have-6)
poss(cake-8, my-7)
dobj(have-6, cake-8)
xcomp(wish-4, eat-10)
conj_and(have-6, eat-10)
dobj(eat-10, it-11)
advmod(eat-10, too-12)
nsubj(understand-17, I-14)
aux(understand-17, do-15)
neg(understand-17, not-16)
conj_and(wish-4, understand-17)
advmod(accuse-21, why-18)
nsubj(accuse-21, you-19)
aux(accuse-21, would-20)
advcl(understand-17, accuse-21)
dobj(accuse-21, me-22)
prepc_of(accuse-21, wanting-24)
dobj(wanting-24, that-25)

(ROOT
  (S
    (NP
      (NP (DT The) (RB only) (JJ other) (NN thing))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP do) (RB n't)
            (VP (VB understand)
              (ADVP (IN at) (DT all)))))))
    (VP (VBZ is)
      (NP
        (NP
          (NP (PRP$ your) (RB very) (JJ last) (NN sentence))
          (: ;)
          (NP
            (NP (NNP BTW))
            (, ,)
            (SBAR (IN if)
              (S
                (VP (VBP log)
                  (PRT (RP on))
                  (SBAR (IN as)
                    (S
                      (NP (PRP I))
                      (ADVP (RB down))
                      (VP (VB vote) (, ,)
                        (S
                          (NP (PRP you))
                          (VP (MD can)
                            (ADVP (RB down))
                            (VP (VB vote)
                              (ADVP (RB again)))))))))
                (: ;))))
          (-RRB- -RRB-))
        (SBAR
          (WHNP (WP What))
          (S
            (VP (VBZ does)
              (SBAR (IN that)
                (S
                  (VP (VBP mean)))))))))
    (. ?)))

det(thing-4, The-1)
advmod(thing-4, only-2)
amod(thing-4, other-3)
dobj(understand-8, thing-4)
nsubj(sentence-15, thing-4)
nsubj(understand-8, I-5)
aux(understand-8, do-6)
neg(understand-8, n't-7)
rcmod(thing-4, understand-8)
advmod(understand-8, at-9)
pobj(at-9, all-10)
cop(sentence-15, is-11)
poss(sentence-15, your-12)
advmod(sentence-15, very-13)
amod(sentence-15, last-14)
root(ROOT-0, sentence-15)
nsubj(does-35, sentence-15)
nsubj(mean-37, sentence-15)
dep(sentence-15, BTW-17)
mark(log-20, if-19)
dep(BTW-17, log-20)
prt(log-20, on-21)
mark(vote-25, as-22)
nsubj(vote-25, I-23)
advmod(vote-25, down-24)
advcl(log-20, vote-25)
nsubj(vote-30, you-27)
aux(vote-30, can-28)
advmod(vote-30, down-29)
ccomp(vote-25, vote-30)
advmod(vote-30, again-31)
rcmod(sentence-15, does-35)
complm(mean-37, that-36)
ccomp(does-35, mean-37)

(ROOT
  (S
    (NP
      (NP (PRP$ My) (NN vision))
      (PP (IN of)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT this) (NN site))
            (VP (MD should)
              (VP (VB be)))))))
    (VP (VBZ does) (RB not)
      (VP (VB differ)
        (SBAR (IN that)
          (S
            (NP
              (NP (RB much))
              (PP (IN from)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP it))
                    (VP (VBZ is) (, ,)
                      (ADVP (RB however))
                      (, ,)
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP I))
                          (VP (VBP do)))))))))
            (VP (VBP have)
              (NP
                (NP (DT a) (NN problem))
                (PP (IN with)
                  (NP (NN something)))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP
                      (VP (VBP bring)
                        (NP (PRP it))
                        (PRT (RP up)))
                      (CC and)
                      (VP (VBP try)
                        (S
                          (VP (TO to)
                            (VP (VB talk)
                              (PP (IN about)
                                (NP (PRP it))))))))))))))))
    (. !)))

poss(vision-2, My-1)
nsubj(differ-11, vision-2)
dobj(be-8, what-4)
det(site-6, this-5)
nsubj(be-8, site-6)
aux(be-8, should-7)
prepc_of(vision-2, be-8)
aux(differ-11, does-9)
neg(differ-11, not-10)
root(ROOT-0, differ-11)
complm(have-24, that-12)
nsubj(have-24, much-13)
dep(is-17, what-15)
nsubj(is-17, it-16)
prepc_from(much-13, is-17)
advmod(is-17, however-19)
advmod(do-23, when-21)
nsubj(do-23, I-22)
advcl(is-17, do-23)
ccomp(differ-11, have-24)
det(problem-26, a-25)
dobj(have-24, problem-26)
prep_with(problem-26, something-28)
nsubj(bring-30, I-29)
nsubj(try-34, I-29)
xsubj(talk-36, I-29)
rcmod(problem-26, bring-30)
dobj(bring-30, it-31)
prt(bring-30, up-32)
rcmod(problem-26, try-34)
conj_and(bring-30, try-34)
aux(talk-36, to-35)
xcomp(try-34, talk-36)
prep_about(talk-36, it-38)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB bring)
        (NP (PRP it))
        (ADVP
          (ADVP (RB up) (RB again))
          (CC and)
          (ADVP (RB again)
            (SBAR (IN until)
              (S
                (NP (PRP I))
                (VP (MD can)
                  (VP (VB get)
                    (NP
                      (NP (DT the) (NN attention))
                      (PP (IN of)
                        (NP (DT the) (NNS powers))))
                    (SBAR (IN that)
                      (FRAG
                        (VP (VB be))))))))))))
    (. .)))

cc(bring-4, And-1)
nsubj(bring-4, I-2)
aux(bring-4, 'll-3)
root(ROOT-0, bring-4)
dobj(bring-4, it-5)
advmod(again-7, up-6)
advmod(bring-4, again-7)
advmod(bring-4, again-9)
conj_and(again-7, again-9)
mark(get-13, until-10)
nsubj(get-13, I-11)
aux(get-13, can-12)
dep(again-9, get-13)
det(attention-15, the-14)
dobj(get-13, attention-15)
det(powers-18, the-17)
prep_of(attention-15, powers-18)
complm(be-20, that-19)
dep(get-13, be-20)

(ROOT
  (S
    (NP
      (NP (PRP$ My) (NN vision))
      (PP (IN of)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NNS votes))
            (VP (MD should)
              (VP (VB be)
                (VP (VBN used)
                  (ADVP (RB also)))))))))
    (VP (VBZ does) (RB n't)
      (VP (VB differ)
        (NP (DT that))
        (ADVP (RB much)
          (PP (IN from)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD was)
                  (VP (VBN perceived)
                    (PP (IN as)
                      (NP (DT the) (JJ correct) (NN way)))
                    (S
                      (VP (TO to)
                        (VP (VB use)
                          (NP (PRP them)))))
                    (, ,)
                    (SBAR (IN whether)
                      (S
                        (NP (PRP they))
                        (VP (VB be)
                          (ADVP (RB up)
                            (CC or)
                            (RB down)))))))))))))
    (. .)))

poss(vision-2, My-1)
nsubj(differ-12, vision-2)
advmod(used-8, how-4)
nsubjpass(used-8, votes-5)
aux(used-8, should-6)
auxpass(used-8, be-7)
prepc_of(vision-2, used-8)
advmod(used-8, also-9)
aux(differ-12, does-10)
neg(differ-12, n't-11)
root(ROOT-0, differ-12)
dobj(differ-12, that-13)
advmod(differ-12, much-14)
nsubjpass(perceived-18, what-16)
auxpass(perceived-18, was-17)
prepc_from(much-14, perceived-18)
det(way-22, the-20)
amod(way-22, correct-21)
prep_as(perceived-18, way-22)
aux(use-24, to-23)
xcomp(perceived-18, use-24)
dobj(use-24, them-25)
complm(be-29, whether-27)
nsubj(be-29, they-28)
ccomp(perceived-18, be-29)
advmod(be-29, up-30)
advmod(be-29, down-32)
conj_or(up-30, down-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT a) (JJ complete) (NN reason))
                (PP (IN for)
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (NN someone))
                      (VP
                        (VP
                          (ADVP (RB up)
                            (CC or)
                            (RB down))
                          (VBD voted)
                          (S
                            (NP
                              (NP (PRP me))
                              (CC or)
                              (NP (NN anyone)))
                            (ADJP (RB else))))
                        (CC but)
                        (VP
                          (PP (IN down)
                            (NP (NN voting)))
                          (VBZ has)
                          (VP (VBN been)
                            (PP (IN as)
                              (NP (JJ huge) (NN issue)))
                            (PP (IN for)
                              (NP (PRP me)))))))))))))
        (SBAR (IN since)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (NP
                (NP (DT the) (NN one))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD got)
                      (NP (NN hit)))))))))))
    (. .)))

nsubj(have-4, I-1)
xsubj(have-6, I-1)
aux(have-4, do-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
aux(have-6, to-5)
xcomp(have-4, have-6)
det(reason-9, a-7)
amod(reason-9, complete-8)
dobj(have-6, reason-9)
advmod(voted-16, why-11)
nsubj(voted-16, someone-12)
nsubj(been-25, someone-12)
advmod(voted-16, up-13)
conj_or(up-13, down-15)
advmod(voted-16, down-15)
prepc_for(reason-9, voted-16)
nsubj(else-20, me-17)
conj_or(me-17, anyone-19)
nsubj(else-20, anyone-19)
xcomp(voted-16, else-20)
prep_down(been-25, voting-23)
aux(been-25, has-24)
prepc_for(reason-9, been-25)
conj_but(voted-16, been-25)
amod(issue-28, huge-27)
prep_as(been-25, issue-28)
prep_for(been-25, me-30)
mark(one-35, since-31)
nsubj(one-35, I-32)
cop(one-35, 'm-33)
det(one-35, the-34)
advcl(have-4, one-35)
nsubj(got-37, one-35)
rcmod(one-35, got-37)
dobj(got-37, hit-38)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB certainly))
    (VP (VBD did) (RB n't)
      (VP (VB notice)
        (NP
          (NP (NN anyone))
          (VP (VBG stepping)
            (PRT (RP up))
            (S
              (VP (TO to)
                (VP (VB say)
                  (SBAR (IN that)
                    (S
                      (VP (VBD was)
                        (ADJP (JJ wrong))
                        (SBAR (IN before)
                          (S
                            (NP (PRP I))
                            (VP (VBD made)
                              (NP (DT the) (JJ accusatory) (NN debate)))))))))))))))
    (. .)))

nsubj(notice-5, I-1)
advmod(notice-5, certainly-2)
aux(notice-5, did-3)
neg(notice-5, n't-4)
root(ROOT-0, notice-5)
dobj(notice-5, anyone-6)
xsubj(say-10, anyone-6)
partmod(anyone-6, stepping-7)
prt(stepping-7, up-8)
aux(say-10, to-9)
xcomp(stepping-7, say-10)
complm(wrong-13, that-11)
cop(wrong-13, was-12)
ccomp(say-10, wrong-13)
mark(made-16, before-14)
nsubj(made-16, I-15)
advcl(wrong-13, made-16)
det(debate-19, the-17)
amod(debate-19, accusatory-18)
dobj(made-16, debate-19)

(ROOT
  (S
    (NP (NNS People))
    (VP (MD can)
      (ADVP (RB simply))
      (VP
        (VP (VB run)
          (PRT (RP in)
            (CC and)
            (RP out))
          (PP (IN of)
            (NP (NNS debates))))
        (, ,)
        (VP
          (ADVP (RB down))
          (VB vote)
          (NP
            (NP (NN someone))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP do) (RB n't)
                  (VP (VB like)))))))
        (CC and)
        (ADVP (RB up))
        (VP (VB vote)
          (NP (DT those))
          (SBAR
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP do))))
            (CC and)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is) (RB not)
                  (ADJP (JJ right)))))))))
    (. !)))

nsubj(run-4, People-1)
nsubj(vote-12, People-1)
nsubj(vote-20, People-1)
aux(run-4, can-2)
advmod(run-4, simply-3)
root(ROOT-0, run-4)
prt(run-4, in-5)
dep(in-5, and-6)
dep(in-5, out-7)
prep_of(run-4, debates-9)
advmod(vote-12, down-11)
conj_and(run-4, vote-12)
dobj(vote-12, someone-13)
dobj(like-17, someone-13)
nsubj(like-17, they-14)
aux(like-17, do-15)
neg(like-17, n't-16)
rcmod(someone-13, like-17)
advmod(run-4, up-19)
conj_and(run-4, up-19)
conj_and(run-4, vote-20)
dobj(vote-20, those-21)
nsubj(do-23, they-22)
dep(vote-20, do-23)
nsubj(right-28, that-25)
cop(right-28, is-26)
neg(right-28, not-27)
dep(vote-20, right-28)
conj_and(do-23, right-28)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ renders)
      (S
        (NP (DT the) (NNS numbers))
        (ADJP (JJ meaningless))))
    (. .)))

nsubj(renders-2, It-1)
root(ROOT-0, renders-2)
det(numbers-4, the-3)
nsubj(meaningless-5, numbers-4)
xcomp(renders-2, meaningless-5)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB also))
    (VP (VBP have) (RB n't)
      (VP (VBN heard)
        (NP
          (NP (DT any) (NNS suggestions))
          (VP (VBN made)
            (S
              (VP (TO to)
                (VP (VB make)
                  (PP
                    (ADVP
                      (NP (DT the) (NN voting))
                      (RBR better))
                    (IN for)
                    (NP (NN everyone))))))))))
    (. !)))

nsubj(heard-5, I-1)
advmod(heard-5, also-2)
aux(heard-5, have-3)
neg(heard-5, n't-4)
root(ROOT-0, heard-5)
det(suggestions-7, any-6)
dobj(heard-5, suggestions-7)
xsubj(make-10, suggestions-7)
partmod(suggestions-7, made-8)
aux(make-10, to-9)
xcomp(made-8, make-10)
det(voting-12, the-11)
npadvmod(better-13, voting-12)
advmod(make-10, better-13)
prep_for(make-10, everyone-15)

(ROOT
  (INTJ (UH Accepted) (. ?)))

root(ROOT-0, Accepted-1)

