(ROOT
  (S
    (ADVP (RB Joe))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP appreciate)
        (S
          (NP (PRP you))
          (ADJP (JJ compliments)))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP hope)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP know)
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (ADVP (RB really))
                  (VP (VBP do)
                    (VP (VB appreciate)
                      (NP
                        (NP (DT a) (NN lot))
                        (PP (IN of)
                          (NP (PRP$ your) (NNS ideas)))))))))))))
    (. .)))

advmod(appreciate-4, Joe-1)
nsubj(appreciate-4, I-3)
root(ROOT-0, appreciate-4)
nsubj(compliments-6, you-5)
xcomp(appreciate-4, compliments-6)
nsubj(hope-9, I-8)
conj_and(appreciate-4, hope-9)
nsubj(know-11, you-10)
ccomp(hope-9, know-11)
complm(appreciate-16, that-12)
nsubj(appreciate-16, I-13)
advmod(appreciate-16, really-14)
aux(appreciate-16, do-15)
ccomp(know-11, appreciate-16)
det(lot-18, a-17)
dobj(appreciate-16, lot-18)
poss(ideas-21, your-20)
prep_of(lot-18, ideas-21)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP (DT this) (NN argument))))
    (, ,)
    (NP (PRP you))
    (VP (VBP present)
      (NP (DT a)
        (ADJP (RB very) (JJ unique))
        (NN perspective)))
    (. .)))

prepc_as_for(present-7, for-2)
det(argument-4, this-3)
pobj(present-7, argument-4)
nsubj(present-7, you-6)
root(ROOT-0, present-7)
det(perspective-11, a-8)
advmod(unique-10, very-9)
amod(perspective-11, unique-10)
dobj(present-7, perspective-11)

(ROOT
  (S
    (S
      (NP (DT These))
      (VP (VBP are)
        (NP
          (NP (DT the) (NNS foundations))
          (PP (IN of)
            (NP (PRP$ our) (NN society) (NN today))))))
    (, ,)
    (CC but)
    (SINV (VBD had)
      (NP (PRP we))
      (VP (VBN accepted)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBD was)
              (VP (VBG going)
                (PP (IN on) (IN at)
                  (NP
                    (NP (DT the) (NN time))
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (MD may)
                          (ADVP (RB never))
                          (VP (VB have)
                            (VP (VBN come)
                              (PP (TO to)
                                (NP (NN fruition))))))))))))))))
    (. .)))

nsubj(foundations-4, These-1)
cop(foundations-4, are-2)
det(foundations-4, the-3)
root(ROOT-0, foundations-4)
poss(today-8, our-6)
nn(today-8, society-7)
prep_of(foundations-4, today-8)
aux(accepted-13, had-11)
nsubj(accepted-13, we-12)
conj_but(foundations-4, accepted-13)
nsubj(going-16, what-14)
aux(going-16, was-15)
ccomp(accepted-13, going-16)
dep(going-16, on-17)
det(time-20, the-19)
prep_at(going-16, time-20)
dobj(come-25, time-20)
nsubj(come-25, they-21)
aux(come-25, may-22)
neg(come-25, never-23)
aux(come-25, have-24)
rcmod(time-20, come-25)
prep_to(come-25, fruition-27)

(ROOT
  (S
    (NP (DT Another) (NN example))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (NN woman) (POS 's))
          (NN suffrage))))
    (. .)))

det(example-2, Another-1)
nsubj(suffrage-7, example-2)
aux(suffrage-7, would-3)
cop(suffrage-7, be-4)
poss(suffrage-7, woman-5)
root(ROOT-0, suffrage-7)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ common) (NN idea))
      (PP (IN at)
        (NP
          (NP (DT the) (NN time))
          (PRN (-LRB- -LRB-)
            (CC or)
            (ADVP (IN at) (JJS least))
            (NP (NN rationalization))
            (-RRB- -RRB-)))))
    (VP (VBD was)
      (SBAR (IN that)
        (S
          (NP (NNS women))
          (VP (MD would)
            (VP (VB vote)
              (NP (DT the) (JJ same))
              (PP (IN as)
                (NP (PRP$ their) (NNS husbands)))
              (SBAR (IN so)
                (S
                  (NP (PRP$ their) (NN right)
                    (S
                      (VP (TO to)
                        (VP (VB vote)))))
                  (VP (VBD was)
                    (ADJP (JJ irrelevant))))))))))
    (. .)))

det(idea-3, The-1)
amod(idea-3, common-2)
nsubj(was-13, idea-3)
det(time-6, the-5)
prep_at(idea-3, time-6)
dep(rationalization-11, or-8)
dep(rationalization-11, at-9)
pobj(at-9, least-10)
appos(time-6, rationalization-11)
root(ROOT-0, was-13)
complm(vote-17, that-14)
nsubj(vote-17, women-15)
aux(vote-17, would-16)
ccomp(was-13, vote-17)
det(same-19, the-18)
dobj(vote-17, same-19)
poss(husbands-22, their-21)
prep_as(vote-17, husbands-22)
mark(irrelevant-29, so-23)
poss(right-25, their-24)
nsubj(irrelevant-29, right-25)
aux(vote-27, to-26)
infmod(right-25, vote-27)
cop(irrelevant-29, was-28)
advcl(vote-17, irrelevant-29)

(ROOT
  (S
    (S
      (NP (DT This) (NN idea))
      (VP (VBZ seems)
        (S
          (VP (VBG archaic)
            (PP (TO to)
              (NP (PRP us)))
            (NP (NN today))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB back))
      (ADVP (RB then))
      (NP (PRP it))
      (VP (VBD was)
        (NP (DT the) (VBN accepted) (NN norm))))
    (. .)))

det(idea-2, This-1)
nsubj(seems-3, idea-2)
root(ROOT-0, seems-3)
xcomp(seems-3, archaic-4)
prep_to(archaic-4, us-6)
tmod(archaic-4, today-7)
advmod(norm-16, back-10)
advmod(norm-16, then-11)
nsubj(norm-16, it-12)
dep(norm-16, was-13)
det(norm-16, the-14)
amod(norm-16, accepted-15)
conj_but(seems-3, norm-16)

(ROOT
  (S
    (S
      (NP (NNP Progress))
      (ADVP (RB eventually))
      (VP (VBD won)
        (PRT (RP out))))
    (CC and)
    (S
      (NP (NN woman))
      (VP (VBD gained)
        (NP
          (NP (DT the) (NN right))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (ADJP
                  (ADJP (RBS most) (JJ necessary))
                  (PP (TO to)
                    (NP (DT a) (NN democracy))))
                (: :)
                (S
                  (NP (DT the) (NN right))
                  (VP (TO to)
                    (VP (VB vote))))))))))
    (. .)))

nsubj(won-3, Progress-1)
advmod(won-3, eventually-2)
root(ROOT-0, won-3)
prt(won-3, out-4)
nsubj(gained-7, woman-6)
conj_and(won-3, gained-7)
det(right-9, the-8)
dobj(gained-7, right-9)
nsubj(necessary-13, right-9)
cop(necessary-13, is-11)
advmod(necessary-13, most-12)
rcmod(right-9, necessary-13)
det(democracy-16, a-15)
prep_to(necessary-13, democracy-16)
det(right-19, the-18)
nsubj(vote-21, right-19)
aux(vote-21, to-20)
parataxis(necessary-13, vote-21)
xcomp(necessary-13, vote-21)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT both))
        (PP (IN of)
          (NP (DT these) (NNS cases)))))
    (NP (PRP we))
    (VP (MD can)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT the) (NN status) (NN quo))
            (VP (VBZ seems)
              (ADJP (JJ fine)
                (PP (TO to)
                  (NP
                    (NP (DT a) (JJ large) (NN number))
                    (PP (IN of)
                      (NP (NNS people))))))
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP they))
                        (VP (VBP are)
                          (VP (VBN used)
                            (S
                              (VP (TO to)))))))))))))))
    (. .)))

prep_in(see-8, both-2)
det(cases-5, these-4)
prep_of(both-2, cases-5)
nsubj(see-8, we-6)
aux(see-8, can-7)
root(ROOT-0, see-8)
advmod(fine-14, how-9)
det(quo-12, the-10)
nn(quo-12, status-11)
nsubj(fine-14, quo-12)
cop(fine-14, seems-13)
ccomp(see-8, fine-14)
det(number-18, a-16)
amod(number-18, large-17)
prep_to(fine-14, number-18)
prep_of(number-18, people-20)
mark(is-23, because-21)
nsubj(is-23, it-22)
advcl(fine-14, is-23)
dobj(used-27, what-24)
nsubjpass(used-27, they-25)
xsubj(to-28, they-25)
auxpass(used-27, are-26)
ccomp(is-23, used-27)
xcomp(used-27, to-28)

(ROOT
  (S
    (ADVP
      (NP (NNS Others))
      (IN though))
    (, ,)
    (VP
      (VP (VB see)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT an) (NN injustice))
                (VP (VBG occurring)))))))
      (, ,)
      (CC and)
      (VP (VB step)
        (PRT (RP up))
        (S
          (VP (TO to)
            (VP (VB fix)
              (NP (PRP it)))))))
    (. .)))

npadvmod(though-2, Others-1)
advmod(see-4, though-2)
root(ROOT-0, see-4)
complm(is-7, that-5)
expl(is-7, there-6)
ccomp(see-4, is-7)
det(injustice-9, an-8)
nsubj(is-7, injustice-9)
partmod(injustice-9, occurring-10)
conj_and(see-4, step-13)
prt(step-13, up-14)
aux(fix-16, to-15)
xcomp(step-13, fix-16)
dobj(fix-16, it-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (DT this))
          (VP (VBZ explains)
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP (RB so) (JJ many))
                (VP (VBP oppose)
                  (PP
                    (ADVP
                      (NP (JJ gay) (NN marriage))
                      (RBR more))
                    (IN than)
                    (NP (NN anything) (RB else))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
nsubj(explains-4, this-3)
ccomp(believe-2, explains-4)
advmod(oppose-8, why-5)
advmod(many-7, so-6)
nsubj(oppose-8, many-7)
advcl(explains-4, oppose-8)
amod(marriage-10, gay-9)
npadvmod(more-11, marriage-10)
advmod(oppose-8, more-11)
prep_than(oppose-8, anything-13)
advmod(anything-13, else-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ has)
            (ADVP (RB always))
            (VP (VBN been)))))
      (, ,)
      (SBAR
        (WHADVP (WRB why))
        (S
          (VP (VBP change)
            (NP (PRP it))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
nsubj(been-6, what-3)
aux(been-6, has-4)
advmod(been-6, always-5)
ccomp(is-2, been-6)
advmod(change-9, why-8)
advcl(is-2, change-9)
dobj(change-9, it-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (NP (DT a) (JJ conservative))
            (, ,)
            (S (RB so)
              (VP (VB know)
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (VBP mean)
                      (NP
                        (NP (DT no) (NN offense))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP I))
                            (VP (VBP say)
                              (SBAR (IN that)
                                (S
                                  (NP (JJ conservative) (NNS viewpoints))
                                  (VP (VBP have)
                                    (VP (VBN stood)
                                      (PP (IN in)
                                        (NP
                                          (NP (DT the) (NN way))
                                          (PP (IN of)
                                            (NP (JJ positive) (NN change)))))
                                      (PP (IN throughout)
                                        (NP (NN history))))))))))))))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(conservative-6, you-3)
cop(conservative-6, are-4)
det(conservative-6, a-5)
ccomp(know-2, conservative-6)
advmod(know-9, so-8)
dep(conservative-6, know-9)
complm(mean-12, that-10)
nsubj(mean-12, I-11)
ccomp(know-9, mean-12)
det(offense-14, no-13)
dobj(mean-12, offense-14)
tmod(say-17, offense-14)
advmod(say-17, when-15)
nsubj(say-17, I-16)
dep(offense-14, say-17)
complm(stood-22, that-18)
amod(viewpoints-20, conservative-19)
nsubj(stood-22, viewpoints-20)
aux(stood-22, have-21)
ccomp(say-17, stood-22)
det(way-25, the-24)
prep_in(stood-22, way-25)
amod(change-28, positive-27)
prep_of(way-25, change-28)
prep_throughout(stood-22, history-30)

(ROOT
  (S
    (VP (VB Allow)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB respond)
            (ADVP (RB though))))))
    (. .)))

root(ROOT-0, Allow-1)
nsubj(respond-4, me-2)
aux(respond-4, to-3)
xcomp(Allow-1, respond-4)
advmod(respond-4, though-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (NP
        (NP (NN bigotry))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD kept)
              (NP (JJ allowed) (NN slavery))
              (S
                (VP (TO to)
                  (VP (VB continue)
                    (PRN (-LRB- -LRB-)
                      (SBAR (IN although)
                        (S
                          (NP (DT that))
                          (VP (VBD played)
                            (NP (DT a) (NN role)))))
                      (-RRB- -RRB-))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (NP (NN inaction)
                            (CC and)
                            (NN complacency)))))))))))))
    (. .)))

nsubj(bigotry-4, It-1)
cop(bigotry-4, is-2)
neg(bigotry-4, not-3)
root(ROOT-0, bigotry-4)
nsubj(kept-6, bigotry-4)
rcmod(bigotry-4, kept-6)
amod(slavery-8, allowed-7)
dobj(kept-6, slavery-8)
aux(continue-10, to-9)
xcomp(kept-6, continue-10)
mark(played-14, although-12)
nsubj(played-14, that-13)
parataxis(continue-10, played-14)
det(role-16, a-15)
dobj(played-14, role-16)
nsubj(inaction-20, it-18)
cop(inaction-20, is-19)
ccomp(continue-10, inaction-20)
ccomp(continue-10, complacency-22)
conj_and(inaction-20, complacency-22)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP we))
    (VP (VBP see)
      (SBAR
        (S
          (NP (DT the) (JJ same) (NN scenario))
          (VP (VBD repeated)))))
    (. .)))

advmod(see-3, Now-1)
nsubj(see-3, we-2)
root(ROOT-0, see-3)
det(scenario-6, the-4)
amod(scenario-6, same-5)
nsubj(repeated-7, scenario-6)
ccomp(see-3, repeated-7)

(ROOT
  (S
    (S
      (NP (DT A) (NN group))
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBN denied)
            (NP (JJ certain) (NNS rights))))))
    (CC and)
    (S
      (ADVP (RB now))
      (NP (PRP they))
      (VP (VBP are)
        (VP (VBG asking)
          (PP (IN for)
            (NP (PRP them))))))
    (. .)))

det(group-2, A-1)
nsubjpass(denied-5, group-2)
aux(denied-5, has-3)
auxpass(denied-5, been-4)
root(ROOT-0, denied-5)
amod(rights-7, certain-6)
dobj(denied-5, rights-7)
advmod(asking-12, now-9)
nsubj(asking-12, they-10)
aux(asking-12, are-11)
conj_and(denied-5, asking-12)
prep_for(asking-12, them-14)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD used)
        (NP (DT the) (NN word) (NN militant))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB disagree)
              (PP (IN with)
                (NP (PRP$ its) (NNS connotations))))))))
    (. .)))

nsubj(used-2, You-1)
root(ROOT-0, used-2)
det(militant-5, the-3)
nn(militant-5, word-4)
dobj(used-2, militant-5)
nsubj(have-9, I-8)
xsubj(disagree-11, I-8)
conj_and(used-2, have-9)
aux(disagree-11, to-10)
xcomp(have-9, disagree-11)
poss(connotations-14, its-13)
prep_with(disagree-11, connotations-14)

(ROOT
  (SQ
    (S
      (NP (NNP African) (NNPS Americans))
      (VP (VBD were)
        (VP (VBN called)
          (S
            (VP (VBG militant)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP they))
                  (VP (VBD demanded)
                    (NP (JJ civil) (NNS rights))
                    (PP (IN during)
                      (NP (DT the) (NNP 60) (POS 's)))))))))))
    (, ,)
    (SQ (VBD were)
      (NP (PRP they))
      (SBAR (RB just)
        (S
          (VP (VBG being)
            (ADJP (JJ greedy))))))
    (. ?)))

nn(Americans-2, African-1)
nsubjpass(called-4, Americans-2)
auxpass(called-4, were-3)
dep(were-16, called-4)
xcomp(called-4, militant-5)
advmod(demanded-8, when-6)
nsubj(demanded-8, they-7)
advcl(militant-5, demanded-8)
amod(rights-10, civil-9)
dobj(demanded-8, rights-10)
det(60-13, the-12)
prep_during(demanded-8, 60-13)
possessive(60-13, 's-14)
root(ROOT-0, were-16)
nsubj(were-16, they-17)
advmod(greedy-20, just-18)
cop(greedy-20, being-19)
dep(were-16, greedy-20)

(ROOT
  (FRAG (CC Or)
    (S
      (VP (VBD were)
        (UCP
          (S
            (NP (PRP they))
            (VP
              (VP (VBG standing)
                (PRT (RP up)))
              (CC and)
              (VP (VBG demanding)
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (VB be)
                      (VP (VBN given)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (VBD was)
                              (VP (VBN promised)
                                (PP (TO to)
                                  (NP (PRP them)))
                                (PP (IN as)
                                  (NP (NNS children))))))))))))))
          (: :)
          (SBAR (IN that)
            (S
              (NP (DT all) (NNS men))
              (VP (VBP are)
                (VP (VBN created)
                  (ADJP (JJ equal) (, ,) (RB no) (JJ different))
                  (PP (IN from)
                    (NP
                      (NP (PRP$ our) (JJ founding) (NNS fathers))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP
                            (VP (VBD stood)
                              (PRT (RP up))
                              (PP (IN during)
                                (NP (DT the) (NN revolution))))
                            (CC and)
                            (VP (VBD demanded)
                              (NP (PRP$ their) (NNS rights))))))))))))
          (. .))))))

dep(were-2, Or-1)
root(ROOT-0, were-2)
nsubj(standing-4, they-3)
nsubj(demanding-7, they-3)
dep(were-2, standing-4)
prt(standing-4, up-5)
dep(were-2, demanding-7)
conj_and(standing-4, demanding-7)
complm(given-11, that-8)
nsubjpass(given-11, they-9)
auxpass(given-11, be-10)
ccomp(demanding-7, given-11)
nsubjpass(promised-14, what-12)
auxpass(promised-14, was-13)
ccomp(given-11, promised-14)
prep_to(promised-14, them-16)
prep_as(promised-14, children-18)
dep(created-24, that-20)
det(men-22, all-21)
nsubjpass(created-24, men-22)
auxpass(created-24, are-23)
dep(standing-4, created-24)
amod(different-28, equal-25)
advmod(different-28, no-27)
acomp(created-24, different-28)
poss(fathers-32, our-30)
amod(fathers-32, founding-31)
prep_from(created-24, fathers-32)
nsubj(stood-34, fathers-32)
nsubj(demanded-40, fathers-32)
rcmod(fathers-32, stood-34)
prt(stood-34, up-35)
det(revolution-38, the-37)
prep_during(stood-34, revolution-38)
rcmod(fathers-32, demanded-40)
conj_and(stood-34, demanded-40)
poss(rights-42, their-41)
dobj(demanded-40, rights-42)

(ROOT
  (S
    (NP
      (NP (DT No) (JJ different))
      (RRC
        (ADVP (RB then))
        (NP (RB now)))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP
            (NP (DT a) (NN group))
            (PP (IN of)
              (NP (NNS people))))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP (PRP$ their) (NN love)))))))))
    (VP (VBD recognized)
      (PP (IN under)
        (NP (DT the) (NN law))))
    (. .)))

det(different-2, No-1)
nsubj(recognized-16, different-2)
advmod(now-4, then-3)
rcmod(different-2, now-4)
advmod(want-11, where-6)
det(group-8, a-7)
nsubj(want-11, group-8)
xsubj(have-13, group-8)
prep_of(group-8, people-10)
rcmod(different-2, want-11)
aux(have-13, to-12)
xcomp(want-11, have-13)
poss(love-15, their-14)
dobj(have-13, love-15)
root(ROOT-0, recognized-16)
det(law-19, the-18)
prep_under(recognized-16, law-19)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (NN part))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN nation))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ allows)
                        (NP
                          (NP (DT the) (NN pursuit))
                          (PP (IN of)
                            (NP (NN happiness))))))))))))))
    (. .)))

nsubj(want-2, They-1)
xsubj(part-5, They-1)
root(ROOT-0, want-2)
aux(part-5, to-3)
cop(part-5, be-4)
xcomp(want-2, part-5)
det(nation-8, a-7)
prep_of(part-5, nation-8)
nsubj(allows-10, nation-8)
rcmod(nation-8, allows-10)
det(pursuit-12, the-11)
dobj(allows-10, pursuit-12)
prep_of(pursuit-12, happiness-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP
            (NP (PRP$ your) (NN right))
            (PP (IN on)
              (NP
                (NP (CD one) (NN count))
                (, ,)
                (NP (DT that)))))
          (VP (VBZ is)
            (NP (JJ human) (NN nature))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
complm(nature-13, that-3)
poss(right-5, your-4)
nsubj(nature-13, right-5)
num(count-8, one-7)
prep_on(right-5, count-8)
appos(count-8, that-10)
cop(nature-13, is-11)
amod(nature-13, human-12)
ccomp(think-2, nature-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (JJ human) (NN nature)
        (S
          (VP
            (VP (TO to)
              (VP (VB want)
                (NP (NN acceptance))))
            (, ,)
            (CC and)
            (VP (TO to)
              (VP
                (VP (VB want)
                  (NP (NN equality)))
                (, ,)
                (CC and)
                (VP (TO to)
                  (VP (VB want)
                    (NP (DT a) (NN chance))
                    (PP (IN at)
                      (NP (DT the) (NN happiness)))
                    (SBAR (IN that)
                      (S
                        (NP (NN everyone) (RB else))
                        (VP (VBZ takes)
                          (PP (IN for)
                            (ADJP (VBN granted))))))))))))))
    (. .)))

nsubj(nature-4, It-1)
cop(nature-4, is-2)
amod(nature-4, human-3)
root(ROOT-0, nature-4)
aux(want-6, to-5)
dep(nature-4, want-6)
dobj(want-6, acceptance-7)
aux(want-11, to-10)
dep(nature-4, want-11)
conj_and(want-6, want-11)
dobj(want-11, equality-12)
aux(want-16, to-15)
conj_and(want-6, want-16)
conj_and(want-11, want-16)
det(chance-18, a-17)
dobj(want-16, chance-18)
det(happiness-21, the-20)
prep_at(want-16, happiness-21)
complm(takes-25, that-22)
nsubj(takes-25, everyone-23)
advmod(everyone-23, else-24)
ccomp(want-16, takes-25)
prep_for(takes-25, granted-27)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (JJ true))
          (SBAR (IN that)
            (S
              (NP (NNS people))
              (ADVP (RB often))
              (VP (VBP want)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP they))
                    (VP (MD ca) (RB n't)
                      (VP (VB have)))))))))))
    (, ,)
    (NP (DT this))
    (VP (VBZ does) (RB not)
      (ADVP (RB always))
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (PRP$ their) (NNS demands))
            (VP (VBP are)
              (ADJP (JJ unreasonable)))))))
    (. .)))

mark(true-4, Although-1)
nsubj(true-4, it-2)
cop(true-4, is-3)
advcl(mean-19, true-4)
complm(want-8, that-5)
nsubj(want-8, people-6)
advmod(want-8, often-7)
ccomp(true-4, want-8)
dobj(have-13, what-9)
nsubj(have-13, they-10)
aux(have-13, ca-11)
neg(have-13, n't-12)
ccomp(want-8, have-13)
nsubj(mean-19, this-15)
aux(mean-19, does-16)
neg(mean-19, not-17)
advmod(mean-19, always-18)
root(ROOT-0, mean-19)
complm(unreasonable-24, that-20)
poss(demands-22, their-21)
nsubj(unreasonable-24, demands-22)
cop(unreasonable-24, are-23)
ccomp(mean-19, unreasonable-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP see)
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (ADJP (VBN upset)
                    (PP (IN at)
                      (NP
                        (NP (DT those) (NNS people))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBP prevent)
                              (NP (DT these) (NNS people))
                              (PP (IN from)
                                (NP (DT the) (NN happiness)))
                              (SBAR
                                (SBAR
                                  (S
                                    (NP (PRP they))
                                    (VP (VBP seek))))
                                (, ,)
                                (CC and)
                                (SBAR
                                  (WHADVP (WRB why))
                                  (S
                                    (NP (PRP I))
                                    (VP (VBP call)
                                      (SBAR
                                        (S
                                          (NP (PRP them))
                                          (VP (VBZ bigots)))))))))))))))))))))
    (. .)))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
nsubj(see-4, you-3)
ccomp(hope-2, see-4)
advmod(upset-8, why-5)
nsubjpass(upset-8, I-6)
auxpass(upset-8, am-7)
advcl(see-4, upset-8)
det(people-11, those-10)
prep_at(upset-8, people-11)
nsubj(prevent-13, people-11)
rcmod(people-11, prevent-13)
det(people-15, these-14)
dobj(prevent-13, people-15)
det(happiness-18, the-17)
prep_from(prevent-13, happiness-18)
nsubj(seek-20, they-19)
dep(prevent-13, seek-20)
advmod(call-25, why-23)
nsubj(call-25, I-24)
dep(prevent-13, call-25)
conj_and(seek-20, call-25)
nsubj(bigots-27, them-26)
ccomp(call-25, bigots-27)

(ROOT
  (S
    (NP (EX There))
    (ADVP (RB crime))
    (VP (VBZ is) (RB all)
      (ADJP (RB too) (JJ common))
      (, ,)
      (S
        (NP (DT an) (NN inability))
        (VP (TO to)
          (VP (VB put)
            (NP (PRP yourself))
            (PP (IN in)
              (NP (PRP$ your) (NNS neighbors) (NNS shoes)))))))
    (. .)))

expl(is-3, There-1)
advmod(is-3, crime-2)
root(ROOT-0, is-3)
advmod(is-3, all-4)
advmod(common-6, too-5)
acomp(is-3, common-6)
det(inability-9, an-8)
nsubj(put-11, inability-9)
aux(put-11, to-10)
xcomp(is-3, put-11)
dobj(put-11, yourself-12)
poss(shoes-16, your-14)
nn(shoes-16, neighbors-15)
prep_in(put-11, shoes-16)

(ROOT
  (S
    (NP (DT An) (NN inability))
    (VP (TO to)
      (VP (VB recognize)
        (NP
          (NP (DT the) (NN humanity))
          (PP (IN of)
            (NP (NNS others))))))
    (. .)))

det(inability-2, An-1)
nsubj(recognize-4, inability-2)
aux(recognize-4, to-3)
root(ROOT-0, recognize-4)
det(humanity-6, the-5)
dobj(recognize-4, humanity-6)
prep_of(humanity-6, others-8)

(ROOT
  (NP
    (NP (DT An) (NN inability)
      (S
        (VP (TO to)
          (VP (VB empathize)
            (PP (IN with)
              (NP (PRP$ their) (NN suffering)))))))
    (PP (IN in)
      (NP
        (NP (DT a) (NN society))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ does) (RB not)
              (ADVP (RB fully))
              (VP (VB accept)
                (NP (PRP them))))))))
    (. .)))

det(inability-2, An-1)
root(ROOT-0, inability-2)
aux(empathize-4, to-3)
infmod(inability-2, empathize-4)
poss(suffering-7, their-6)
prep_with(empathize-4, suffering-7)
det(society-10, a-9)
prep_in(inability-2, society-10)
nsubj(accept-15, society-10)
aux(accept-15, does-12)
neg(accept-15, not-13)
advmod(accept-15, fully-14)
rcmod(society-10, accept-15)
dobj(accept-15, them-16)

(ROOT
  (S
    (VP (VB Allow)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP
            (ADVP (RB first))
            (VB use)
            (NP
              (NP (DT the) (NN example))
              (PP (IN of)
                (NP (DT the) (JJ American) (NN Revolution))))))))
    (. .)))

root(ROOT-0, Allow-1)
nsubj(use-5, me-2)
aux(use-5, to-3)
advmod(use-5, first-4)
xcomp(Allow-1, use-5)
det(example-7, the-6)
dobj(use-5, example-7)
det(Revolution-11, the-9)
amod(Revolution-11, American-10)
prep_of(example-7, Revolution-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (ADVP (RB often))
      (VP (VB hear)
        (SBAR
          (S
            (NP (NNS people))
            (VP (VBP say) (, ,) (`` ``)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (VBD defeated)
                    (NP (JJ British) (NN tyranny))
                    (PP (IN over)
                      (NP
                        (NP (PRP us))
                        (NP (FW etc.) (. .))))))))))))
    (. .)))

nsubj(hear-4, You-1)
aux(hear-4, will-2)
advmod(hear-4, often-3)
root(ROOT-0, hear-4)
nsubj(say-6, people-5)
ccomp(hear-4, say-6)
nsubj(defeated-10, we-9)
ccomp(say-6, defeated-10)
amod(tyranny-12, British-11)
dobj(defeated-10, tyranny-12)
prep_over(defeated-10, us-14)
dep(us-14, etc.-15)

(ROOT
  (S ('' '')
    (PP
      (X
        (X (WP What))
        (NP (DT a) (NN lot)))
      (IN of)
      (S
        (NP (NNS people))
        (VP (VBP do) (RB n't)
          (VP (VB realize)))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBD had)
            (S
              (NP (PRP it))
              (ADJP (RB pretty) (JJ good)
                (PP (IN under)
                  (NP (DT the) (NNP British)))))))))
    (. .)))

dep(lot-4, What-2)
det(lot-4, a-3)
dep(is-10, lot-4)
nsubj(realize-9, people-6)
aux(realize-9, do-7)
neg(realize-9, n't-8)
prepc_of(is-10, realize-9)
root(ROOT-0, is-10)
complm(had-13, that-11)
nsubj(had-13, we-12)
ccomp(is-10, had-13)
nsubj(good-16, it-14)
advmod(good-16, pretty-15)
xcomp(had-13, good-16)
det(British-19, the-18)
prep_under(good-16, British-19)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD had)
      (NP
        (NP
          (ADJP (RB extremely) (JJ low))
          (NNS taxes))
        (, ,)
        (NP
          (NP
            (NP (NN protection))
            (PP (IN from)
              (NP (NNS others))))
          (, ,)
          (CC and)
          (NP (DT a) (JJ reliable) (NN trading) (NN partner)))))
    (. .)))

nsubj(had-2, We-1)
root(ROOT-0, had-2)
advmod(low-4, extremely-3)
amod(taxes-5, low-4)
dobj(had-2, taxes-5)
appos(taxes-5, protection-7)
prep_from(protection-7, others-9)
det(partner-15, a-12)
amod(partner-15, reliable-13)
nn(partner-15, trading-14)
appos(taxes-5, partner-15)
conj_and(protection-7, partner-15)

(ROOT
  (S
    (ADVP (RB Now))
    (NP
      (NP (DT a) (NN lot))
      (PP (IN of)
        (NP (NN stuff))))
    (VP (VBD happened)
      (SBAR (CC but)
        (S
          (NP (DT the) (JJ condensed) (NN version))
          (VP (VBZ is) (, ,)
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBD wanted)
                  (NP (JJR more))
                  (: :) (`` ``)
                  (S
                    (NP (NNP Taxation))
                    (VP (VB w\/out)
                      (NP
                        (NP (NN representation))
                        ('' '')
                        (CC and)
                        (NP (DT the) (JJ like))))))))))))
    (. .)))

advmod(happened-6, Now-1)
det(lot-3, a-2)
nsubj(happened-6, lot-3)
prep_of(lot-3, stuff-5)
root(ROOT-0, happened-6)
cc(is-11, but-7)
det(version-10, the-8)
amod(version-10, condensed-9)
nsubj(is-11, version-10)
ccomp(happened-6, is-11)
nsubj(wanted-14, we-13)
ccomp(is-11, wanted-14)
dobj(wanted-14, more-15)
nsubj(w\/out-19, Taxation-18)
dep(wanted-14, w\/out-19)
dobj(w\/out-19, representation-20)
det(like-24, the-23)
dobj(w\/out-19, like-24)
conj_and(representation-20, like-24)

(ROOT
  (S (IN So)
    (S
      (S
        (NP (PRP we))
        (VP (VBD had)
          (S
            (NP (PRP it))
            (ADJP (RB pretty) (JJ good))
            (ADVP (RB already)))))
      (, ,)
      (CC but)
      (S
        (NP (PRP we))
        (VP (VBD wanted)
          (NP (NN something))
          (ADVP (RBR more)))))
    (: :)
    (S
      (NP
        (NP (NN liberty))
        (, ,)
        (NP (JJ inalienable) (NNS rights))
        (, ,))
      (NP (NN representative) (NN government)))
    (. .)))

dep(had-3, So-1)
nsubj(had-3, we-2)
root(ROOT-0, had-3)
nsubj(good-6, it-4)
advmod(good-6, pretty-5)
xcomp(had-3, good-6)
advmod(good-6, already-7)
nsubj(wanted-11, we-10)
conj_but(had-3, wanted-11)
dobj(wanted-11, something-12)
advmod(wanted-11, more-13)
dep(government-21, liberty-15)
amod(rights-18, inalienable-17)
appos(liberty-15, rights-18)
nn(government-21, representative-20)
parataxis(had-3, government-21)

