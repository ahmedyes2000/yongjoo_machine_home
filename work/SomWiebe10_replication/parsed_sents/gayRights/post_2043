(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (NNS people))
          (VP (VBP have)
            (NP
              (NP
                (NP (CD two) (JJ fundamental) (NNS rights))
                (VP (VBG relating)
                  (PP (TO to)
                    (NP (DT this) (NN issue)))))
              (: :)
              (NP
                (NP (DT The) (NN right))
                (PP (TO to)
                  (NP (NN self) (NN expression))))
              (CC and)
              (NP (JJ personal) (NNS views\/ideas)))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
nsubj(have-4, people-3)
ccomp(believe-2, have-4)
num(rights-7, two-5)
amod(rights-7, fundamental-6)
dobj(have-4, rights-7)
partmod(rights-7, relating-8)
det(issue-11, this-10)
prep_to(relating-8, issue-11)
det(right-14, The-13)
dobj(have-4, right-14)
conj_and(rights-7, right-14)
nn(expression-17, self-16)
prep_to(right-14, expression-17)
amod(views\/ideas-20, personal-19)
dobj(have-4, views\/ideas-20)
conj_and(rights-7, views\/ideas-20)

(ROOT
  (S
    (NP (DT The) (NN right))
    (VP (TO to)
      (VP (VB be)
        (UCP
          (ADJP (JJ secure) (RB physically))
          (CC and)
          (ADVP (RB emotionally)))))
    (. .)))

det(right-2, The-1)
nsubj(secure-5, right-2)
aux(secure-5, to-3)
cop(secure-5, be-4)
root(ROOT-0, secure-5)
advmod(secure-5, physically-6)
advmod(secure-5, emotionally-8)
conj_and(secure-5, emotionally-8)

(ROOT
  (S
    (ADJP (VB No.))
    (. .)))

root(ROOT-0, No.-1)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (VP (VBG infringing)
      (PP (IN on)
        (NP
          (NP (DT those) (CD two) (NNS rights))
          (PP (IN for)
            (NP (PRP you))))))
    (. ?)))

aux(infringing-3, Is-1)
nsubj(infringing-3, it-2)
root(ROOT-0, infringing-3)
det(rights-7, those-5)
num(rights-7, two-6)
prep_on(infringing-3, rights-7)
prep_for(rights-7, you-9)

(ROOT
  (S
    (ADJP (VB No.))
    (. .)))

root(ROOT-0, No.-1)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB disagree)
          (PP (IN with)
            (NP (PRP it))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ does) (RB n't)
        (VP (VB mean)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD should)
                (VP (VB have)
                  (NP (DT the) (NN right)
                    (S
                      (VP (TO to)
                        (VP (VB say)
                          (SBAR
                            (S
                              (NP (PRP it))
                              (VP (VBZ 's) (RB not)
                                (VP (VBN allowed)
                                  (ADVP (IN at) (DT all)))))))))))))))))
    (. !)))

nsubj(disagree-3, You-1)
aux(disagree-3, can-2)
root(ROOT-0, disagree-3)
prep_with(disagree-3, it-5)
nsubj(mean-11, that-8)
aux(mean-11, does-9)
neg(mean-11, n't-10)
conj_but(disagree-3, mean-11)
nsubj(have-14, you-12)
aux(have-14, should-13)
ccomp(mean-11, have-14)
det(right-16, the-15)
dobj(have-14, right-16)
aux(say-18, to-17)
infmod(right-16, say-18)
nsubjpass(allowed-22, it-19)
auxpass(allowed-22, 's-20)
neg(allowed-22, not-21)
ccomp(say-18, allowed-22)
advmod(allowed-22, at-23)
pobj(at-23, all-24)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT no) (JJ logical) (NN reason)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBZ is) (RB n't)
                    (VP (VBN allowed))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(reason-5, no-3)
amod(reason-5, logical-4)
nsubj('s-2, reason-5)
aux(say-7, to-6)
infmod(reason-5, say-7)
nsubjpass(allowed-11, it-8)
auxpass(allowed-11, is-9)
neg(allowed-11, n't-10)
ccomp(say-7, allowed-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ gets)
          (NP (JJ married) (JJ gay)
            (CC or)
            (JJ straight) (NNS -)))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (VP (VBG expression)
        (NP (PRP$ their) (JJ personal) (NNS ideas))))
    (. .)))

mark(gets-3, If-1)
nsubj(gets-3, someone-2)
advcl(expression-12, gets-3)
amod(gay-5, married-4)
dobj(gets-3, gay-5)
dobj(gets-3, straight-7)
conj_or(gay-5, straight-7)
nsubj(expression-12, they-10)
aux(expression-12, are-11)
root(ROOT-0, expression-12)
poss(ideas-15, their-13)
amod(ideas-15, personal-14)
dobj(expression-12, ideas-15)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (PRP$ their) (NN RIGHT))
        (PP (IN in)
          (NP
            (NP (NNP Canada))
            (CC and)
            (NP (DT the) (NNP United) (NNPS States)))))
      (, ,)
      (PP (IN at)
        (NP (DT the) (RB very) (JJS least))))
    (. .)))

nsubj(RIGHT-4, This-1)
cop(RIGHT-4, is-2)
poss(RIGHT-4, their-3)
root(ROOT-0, RIGHT-4)
prep_in(RIGHT-4, Canada-6)
det(States-10, the-8)
nn(States-10, United-9)
prep_in(RIGHT-4, States-10)
conj_and(Canada-6, States-10)
det(least-15, the-13)
advmod(least-15, very-14)
prep_at(RIGHT-4, least-15)

(ROOT
  (S
    (S
      (NP (NNP Marriage))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ legal) (NN thing))
          (PP (IN between)
            (NP (CD two) (NNS people))))))
    (, ,)
    (CC and)
    (S
      (S
        (NP
          (NP (DT the) (JJ only) (NN part))
          (PP (IN of)
            (NP (PRP it)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ says)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ has)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (NP
                              (NP (NN man))
                              (CC and)
                              (NP (DT a) (NN woman)))))))))))))
        (VP (VBZ lies)
          (PP (IN in)
            (NP
              (NP (NN religion))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (VP (VBN based)
                      (PP (IN on)
                        (NP
                          (NP (NNS ideas))
                          (VP (VBN founded)
                            (NP (NNS centuries))
                            (ADVP (IN ago))
                            (SBAR
                              (WHADVP (WRB when))
                              (S
                                (NP (NNS women))
                                (VP (VBD were)
                                  (VP (VBN considered)
                                    (NP (NNS objects))
                                    (ADVP (RB anyway)))))))))))))))))
      (, ,)
      (CC and)
      (RB thus)
      (S
        (ADJP
          (ADJP (RB fundamentally) (JJ flawed))
          (CC and)
          (ADJP (RB not) (JJ viable)))
        (PP (IN as)
          (NP (DT the) (JJ final) (NN word)))))
    (. .)))

nsubj(thing-5, Marriage-1)
cop(thing-5, is-2)
det(thing-5, a-3)
amod(thing-5, legal-4)
root(ROOT-0, thing-5)
num(people-8, two-7)
prep_between(thing-5, people-8)
det(part-13, the-11)
amod(part-13, only-12)
nsubj(says-17, part-13)
nsubj(lies-26, part-13)
prep_of(part-13, it-15)
rcmod(part-13, says-17)
nsubj(has-19, it-18)
xsubj(man-22, it-18)
ccomp(says-17, has-19)
aux(man-22, to-20)
cop(man-22, be-21)
xcomp(has-19, man-22)
det(woman-25, a-24)
xcomp(has-19, woman-25)
conj_and(man-22, woman-25)
conj_and(thing-5, lies-26)
prep_in(lies-26, religion-28)
nsubjpass(based-31, religion-28)
auxpass(based-31, is-30)
rcmod(religion-28, based-31)
prep_on(based-31, ideas-33)
partmod(ideas-33, founded-34)
dobj(founded-34, centuries-35)
advmod(founded-34, ago-36)
advmod(considered-40, when-37)
nsubjpass(considered-40, women-38)
auxpass(considered-40, were-39)
advcl(founded-34, considered-40)
dobj(considered-40, objects-41)
advmod(considered-40, anyway-42)
conj_and(thing-5, thus-45)
advmod(lies-26, thus-45)
conj_and(lies-26, thus-45)
advmod(flawed-47, fundamentally-46)
dep(lies-26, flawed-47)
neg(viable-50, not-49)
dep(lies-26, viable-50)
conj_and(flawed-47, viable-50)
dep(flawed-47, as-51)
det(word-54, the-52)
amod(word-54, final-53)
pobj(as-51, word-54)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG telling)
            (NP (PRP them))
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (VBP are) (RB not)
                  (VP (VBN allowed)
                    (S
                      (VP (TO to)
                        (VP (VB get)
                          (ADJP (JJ married)))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (JJ first)
        (PP (IN of)
          (S (RB all)
            (VP
              (VP (VBG denying)
                (S
                  (NP (PRP them))
                  (NP (PRP$ their) (NN right)
                    (S
                      (VP (TO to)
                        (VP (VB express)
                          (NP (PRP$ their) (NNS ideas))
                          (PP (IN by)
                            (S
                              (VP (VBG saying)
                                (SBAR
                                  (S
                                    (NP (PRP it))
                                    (VP (VBZ 's) (RB not)
                                      (VP (VBN allowed))))))))))))))
              (, ,)
              (CC and)
              (VP
                (ADVP (RB secondly))
                (VBG denying)
                (NP (PRP them)))
              (NP (PRP$ their) (JJ emotional) (NN security))))))
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (VP (VBG descriminating))))))
    (. .)))

mark(telling-4, If-1)
nsubj(telling-4, you-2)
aux(telling-4, are-3)
advcl(first-17, telling-4)
dobj(telling-4, them-5)
complm(allowed-10, that-6)
nsubjpass(allowed-10, they-7)
xsubj(married-13, they-7)
auxpass(allowed-10, are-8)
neg(allowed-10, not-9)
ccomp(telling-4, allowed-10)
aux(married-13, to-11)
dep(married-13, get-12)
xcomp(allowed-10, married-13)
nsubj(first-17, you-15)
cop(first-17, are-16)
root(ROOT-0, first-17)
advmod(denying-20, all-19)
prepc_of(first-17, denying-20)
nsubj(right-23, them-21)
poss(right-23, their-22)
xcomp(denying-20, right-23)
aux(express-25, to-24)
infmod(right-23, express-25)
poss(ideas-27, their-26)
dobj(express-25, ideas-27)
prepc_by(express-25, saying-29)
nsubjpass(allowed-33, it-30)
auxpass(allowed-33, 's-31)
neg(allowed-33, not-32)
ccomp(saying-29, allowed-33)
advmod(denying-37, secondly-36)
prepc_of(first-17, denying-37)
conj_and(denying-20, denying-37)
dobj(denying-37, them-38)
poss(security-41, their-39)
amod(security-41, emotional-40)
dobj(denying-20, security-41)
mark(descriminating-45, because-42)
nsubj(descriminating-45, you-43)
aux(descriminating-45, 're-44)
advcl(first-17, descriminating-45)

(ROOT
  (FRAG
    (ADJP (JJ FINALLY))
    (. .)))

root(ROOT-0, FINALLY-1)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB matter)
        (PP (TO to)
          (NP (PRP you)))
        (SBAR (IN if)
          (S
            (NP (DT a) (JJ gay) (NN couple))
            (VP (VBZ gets)
              (ADJP (JJ married)))))))
    (. ?)))

dobj(matter-4, What-1)
aux(matter-4, does-2)
nsubj(matter-4, it-3)
root(ROOT-0, matter-4)
prep_to(matter-4, you-6)
mark(married-12, if-7)
det(couple-10, a-8)
amod(couple-10, gay-9)
nsubj(married-12, couple-10)
dep(married-12, gets-11)
advcl(matter-4, married-12)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (VP (VBG hurting)
      (NP (PRP you)))
    (. ?)))

aux(hurting-3, Is-1)
nsubj(hurting-3, it-2)
root(ROOT-0, hurting-3)
dobj(hurting-3, you-4)

(ROOT
  (S
    (ADJP (VB No.))
    (. .)))

root(ROOT-0, No.-1)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (ADVP (RB denying))
    (NP (PRP you))
    (NP
      (NP (DT the) (NN ability))
      (S
        (VP (TO to)
          (VP (VB say)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP do) (RB n't)
                  (VP (VB like)
                    (NP (PRP it))))))))))
    (. ?)))

cop(ability-6, Is-1)
nsubj(ability-6, it-2)
advmod(ability-6, denying-3)
attr(ability-6, you-4)
det(ability-6, the-5)
root(ROOT-0, ability-6)
aux(say-8, to-7)
infmod(ability-6, say-8)
nsubj(like-12, you-9)
aux(like-12, do-10)
neg(like-12, n't-11)
ccomp(say-8, like-12)
dobj(like-12, it-13)

