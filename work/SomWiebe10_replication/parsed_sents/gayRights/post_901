(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT an) (NN argument))
          (PP (IN against)
            (NP (JJ gay) (NN marriage))))))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN argument))
        (PP (IN for)
          (NP
            (NP (`` ``) (JJ traditional) ('' '') (NNS families))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP are)
                  (VP (VBG dropping)
                    (NP (DT the) (NN ball)
                      (S
                        (VP (TO to)
                          (VP (VB step)
                            (PRT (RP up))))))))))))))
    (. .)))

nsubj(argument-5, This-1)
cop(argument-5, is-2)
neg(argument-5, not-3)
det(argument-5, an-4)
ccomp(argument-13, argument-5)
amod(marriage-8, gay-7)
prep_against(argument-5, marriage-8)
nsubj(argument-13, this-10)
cop(argument-13, is-11)
det(argument-13, an-12)
root(ROOT-0, argument-13)
amod(families-18, traditional-16)
prep_for(argument-13, families-18)
nsubj(dropping-21, families-18)
aux(dropping-21, are-20)
rcmod(families-18, dropping-21)
det(ball-23, the-22)
dobj(dropping-21, ball-23)
aux(step-25, to-24)
infmod(ball-23, step-25)
prt(step-25, up-26)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (ADVP (RB really))
        (VP (VBP believe)
          (SBAR (IN that)
            (S
              (NP (NNS children))
              (VP (VBP do)
                (ADVP (RBS best))
                (PP (IN with)
                  (NP
                    (NP (JJ married) (JJ biological) (NNS parents))
                    (PP (IN in)
                      (NP (DT a) (JJ low-conflict) (NN marriage)))))))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBP are)
      (VP (RB n't)
        (NP (PRP you)))
      (ADJP (JJ encouraging) (RB that)))
    (. ?)))

mark(believe-4, If-1)
nsubj(believe-4, you-2)
advmod(believe-4, really-3)
advcl(you-21, believe-4)
complm(do-7, that-5)
nsubj(do-7, children-6)
ccomp(believe-4, do-7)
advmod(do-7, best-8)
amod(parents-12, married-10)
amod(parents-12, biological-11)
prep_with(do-7, parents-12)
det(marriage-16, a-14)
amod(marriage-16, low-conflict-15)
prep_in(parents-12, marriage-16)
advmod(you-21, why-18)
cop(you-21, are-19)
neg(you-21, n't-20)
root(ROOT-0, you-21)
dep(you-21, encouraging-22)
advmod(encouraging-22, that-23)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB also))
    (VP (VBZ seems)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (MD will) (RB not))
                  (CC or)
                  (VP (MD can) (RB not)
                    (VP (VB have)
                      (NP
                        (NP (NNS children))
                        (, ,)
                        (PP (IN like)
                          (NP (PRP me)))
                        (, ,))))))))
          (VP (MD should) (RB not)
            (VP (VB be)
              (VP (VBN allowed)
                (S
                  (VP (TO to)
                    (VP (VB marry)
                      (SBAR (RB even) (IN if)
                        (S
                          (NP (PRP they))
                          (VP (VBP are)
                            (ADJP (JJ heterosexual))))))))))))))
    (. .)))

nsubj(seems-3, It-1)
advmod(seems-3, also-2)
root(ROOT-0, seems-3)
complm(allowed-21, that-4)
nsubj(will-7, those-5)
nsubj(have-12, those-5)
nsubjpass(allowed-21, those-5)
rcmod(those-5, will-7)
neg(will-7, not-8)
aux(have-12, can-10)
neg(have-12, not-11)
rcmod(those-5, have-12)
conj_or(will-7, have-12)
dobj(have-12, children-13)
prep_like(children-13, me-16)
aux(allowed-21, should-18)
neg(allowed-21, not-19)
auxpass(allowed-21, be-20)
ccomp(seems-3, allowed-21)
aux(marry-23, to-22)
xcomp(allowed-21, marry-23)
advmod(heterosexual-28, even-24)
dep(heterosexual-28, if-25)
nsubj(heterosexual-28, they-26)
cop(heterosexual-28, are-27)
ccomp(marry-23, heterosexual-28)

(ROOT
  (SQ
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT the) (JJ logical) (NN end) (NN point))
          (PP (IN of)
            (NP (PRP$ your) (NN argument))))))
    (, ,)
    (SQ (VBP are)
      (NP (PRP you))
      (VP (VBN sure)
        (SBAR
          (S
            (NP (DT this))
            (VP (VBZ is)
              (ADVP (RB really))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP you))
                  (VP (VBP 're)
                    (VP (VBG proposing))))))))))
    (. ?)))

nsubj(point-6, This-1)
cop(point-6, is-2)
det(point-6, the-3)
amod(point-6, logical-4)
nn(point-6, end-5)
dep(sure-13, point-6)
poss(argument-9, your-8)
prep_of(point-6, argument-9)
auxpass(sure-13, are-11)
nsubjpass(sure-13, you-12)
root(ROOT-0, sure-13)
nsubj(is-15, this-14)
ccomp(sure-13, is-15)
advmod(is-15, really-16)
dobj(proposing-20, what-17)
nsubj(proposing-20, you-18)
aux(proposing-20, 're-19)
ccomp(is-15, proposing-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP
          (NP (DT a) (NN problem))
          (PP (IN with)
            (NP (DT that))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 'm) (RB not)
                (ADJP (RB alone))))))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(problem-4, a-3)
dobj(have-2, problem-4)
prep_with(problem-4, that-6)
nsubj(sure-11, I-9)
cop(sure-11, 'm-10)
conj_and(have-2, sure-11)
nsubj(alone-15, I-12)
cop(alone-15, 'm-13)
neg(alone-15, not-14)
dep(sure-11, alone-15)

(ROOT
  (FRAG
    (WHADVP (WRB Why))
    (RB not)
    (VP
      (VP (VB ban)
        (NP (NN divorce)))
      (, ,)
      (VP (VB make)
        (S
          (VP (VBG fighting)
            (ADJP (JJ illegal)))))
      (, ,)
      (CC or)
      (VP (VB forbid)
        (NP (NN adoption))))
    (. ?)))

dep(not-2, Why-1)
root(ROOT-0, not-2)
dep(not-2, ban-3)
dobj(ban-3, divorce-4)
dep(not-2, make-6)
conj_or(ban-3, make-6)
xcomp(make-6, fighting-7)
acomp(fighting-7, illegal-8)
dep(not-2, forbid-11)
conj_or(ban-3, forbid-11)
dobj(forbid-11, adoption-12)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN of)
        (NP (DT those) (NNS things))))
    (VP (VBP are)
      (ADJP (JJR more)
        (PP (IN of)
          (NP (DT a) (NN threat)))
        (PP (TO to)
          (NP
            (NP (DT the) (JJ ideal) (JJ child-rearing) (NN environment))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP propose)
                  (PP (IN than)
                    (NP (JJ gay) (NN marriage))))))))))
    (. .)))

nsubj(more-6, All-1)
det(things-4, those-3)
prep_of(All-1, things-4)
cop(more-6, are-5)
root(ROOT-0, more-6)
det(threat-9, a-8)
prep_of(more-6, threat-9)
det(environment-14, the-11)
amod(environment-14, ideal-12)
amod(environment-14, child-rearing-13)
prep_to(more-6, environment-14)
dobj(propose-16, environment-14)
nsubj(propose-16, you-15)
rcmod(environment-14, propose-16)
amod(marriage-19, gay-18)
prep_than(propose-16, marriage-19)

(ROOT
  (SBARQ
    (WHNP (WRB How) (RB exactly))
    (SQ (VBZ does)
      (NP
        (NP (CD two) (NNS guys))
        (VP (VBG getting)
          (ADJP (JJ married))))
      (VP (VB stop)
        (NP (PRP you))
        (PP (IN from)
          (S
            (VP (VBG providing)
              (NP (PRP$ your) (JJ ideal) (NN environment))
              (PP (TO to)
                (NP (PRP$ your) (NNS children))))))))
    (. ?)))

advmod(exactly-2, How-1)
dep(stop-8, exactly-2)
aux(stop-8, does-3)
num(guys-5, two-4)
nsubj(stop-8, guys-5)
dep(married-7, getting-6)
partmod(guys-5, married-7)
root(ROOT-0, stop-8)
dobj(stop-8, you-9)
prepc_from(stop-8, providing-11)
poss(environment-14, your-12)
amod(environment-14, ideal-13)
dobj(providing-11, environment-14)
poss(children-17, your-16)
prep_to(providing-11, children-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD should) (RB n't))
    (. .)))

nsubj(should-2, It-1)
root(ROOT-0, should-2)
neg(should-2, n't-3)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (JJ other) (NN hand)))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBD noticed)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBD argued)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT the) (NN purpose))
                    (PP (IN of)
                      (NP (NN marriage))))
                  (VP (VBZ is)
                    (S
                      (VP (TO to)
                        (VP (VB have)
                          (NP (NNS children)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT no) (JJ other) (NN purpose))
      (VP (MD should)
        (VP (VB be)
          (VP (VBN allowed)))))
    (. .)))

det(hand-4, the-2)
amod(hand-4, other-3)
prep_on(noticed-7, hand-4)
nsubj(noticed-7, I-6)
root(ROOT-0, noticed-7)
complm(argued-10, that-8)
nsubj(argued-10, you-9)
ccomp(noticed-7, argued-10)
complm(is-16, that-11)
det(purpose-13, the-12)
nsubj(is-16, purpose-13)
xsubj(have-18, purpose-13)
prep_of(purpose-13, marriage-15)
ccomp(argued-10, is-16)
aux(have-18, to-17)
xcomp(is-16, have-18)
dobj(have-18, children-19)
det(purpose-24, no-22)
amod(purpose-24, other-23)
nsubjpass(allowed-27, purpose-24)
aux(allowed-27, should-25)
auxpass(allowed-27, be-26)
conj_and(noticed-7, allowed-27)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ vast) (NN array))
      (PP (IN of)
        (NP
          (NP (JJ legal) (NNS benefits))
          (PP (TO to)
            (NP (NN marriage))))))
    (VP (VBP are)
      (ADJP (RB completely) (JJ irrelevant)
        (PP (IN in)
          (NP (PRP$ your) (NN mind))))
      (, ,)
      (ADVP (RB right)))
    (. ?)))

det(array-3, The-1)
amod(array-3, vast-2)
nsubj(irrelevant-11, array-3)
amod(benefits-6, legal-5)
prep_of(array-3, benefits-6)
prep_to(benefits-6, marriage-8)
cop(irrelevant-11, are-9)
advmod(irrelevant-11, completely-10)
root(ROOT-0, irrelevant-11)
poss(mind-14, your-13)
prep_in(irrelevant-11, mind-14)
advmod(irrelevant-11, right-16)

(ROOT
  (S
    (NP (NNP Fine))
    (, ,)
    (SBAR (IN if)
      (S
        (NP
          (NP (DT the) (JJ sole) (NN purpose))
          (PP (IN of)
            (NP (NN marriage))))
        (VP (VBZ is)
          (PP (IN for)
            (NP (DT the) (NNS children))))))
    (, ,)
    (NP (PRP you))
    (VP (MD will)
      (VP (VB have)
        (NP
          (NP (DT no) (NN objection))
          (PP (TO to)
            (S
              (VP
                (ADVP (RB immediately))
                (VBG stripping)
                (NP
                  (NP (DT all) (JJ legal) (NNS rights))
                  (VP (VBN granted)
                    (PP (TO to)
                      (NP (NNS spouses)))))))))))
    (. .)))

nsubj(have-16, Fine-1)
mark(is-9, if-3)
det(purpose-6, the-4)
amod(purpose-6, sole-5)
nsubj(is-9, purpose-6)
prep_of(purpose-6, marriage-8)
advcl(have-16, is-9)
det(children-12, the-11)
prep_for(is-9, children-12)
nsubj(have-16, you-14)
aux(have-16, will-15)
root(ROOT-0, have-16)
det(objection-18, no-17)
dobj(have-16, objection-18)
advmod(stripping-21, immediately-20)
prepc_to(objection-18, stripping-21)
det(rights-24, all-22)
amod(rights-24, legal-23)
dobj(stripping-21, rights-24)
partmod(rights-24, granted-25)
prep_to(granted-25, spouses-27)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD said)
        (NP (PRP yourself))))
    (, ,)
    (NP
      (NP (DT the) (NN purpose))
      (PP (IN of)
        (NP (NN marriage))))
    (VP (VBZ is) (RB not)
      (S
        (VP (TO to)
          (VP (VB grant)
            (NP (NNS rights))))))
    (. .)))

nsubj(said-2, You-1)
ccomp(is-9, said-2)
dobj(said-2, yourself-3)
det(purpose-6, the-5)
nsubj(is-9, purpose-6)
xsubj(grant-12, purpose-6)
prep_of(purpose-6, marriage-8)
root(ROOT-0, is-9)
neg(is-9, not-10)
aux(grant-12, to-11)
xcomp(is-9, grant-12)
dobj(grant-12, rights-13)

