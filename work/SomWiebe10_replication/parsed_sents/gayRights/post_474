(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB reduce)
          (NP (PRP$ your) (NN argument))
          (PP (TO to)
            (NP
              (NP (DT a) (NN level))
              (PP (IN of) (`` ``)
                (NP (NN well))))))))
    (, ,)
    (NP (NNS dogs))
    (VP (VBP do)
      (NP (PRP it))
      (ADVP (RB too)))
    (. !)))

aux(reduce-2, To-1)
purpcl(do-13, reduce-2)
poss(argument-4, your-3)
dobj(reduce-2, argument-4)
det(level-7, a-6)
prep_to(reduce-2, level-7)
prep_of(level-7, well-10)
nsubj(do-13, dogs-12)
root(ROOT-0, do-13)
dobj(do-13, it-14)
advmod(do-13, too-15)

(ROOT
  (S ('' '')
    (S
      (S
        (VP (VBZ seems)
          (ADVP (RB so))))
      (VP (VBP base)))
    (IN as)
    (S
      (NP (TO to))
      (ADVP (RB hardly))
      (VP (VB be)
        (ADJP (JJ worthy))
        (PP (IN of)
          (NP (NN response)))))
    (. .)))

csubj(base-4, seems-2)
advmod(seems-2, so-3)
root(ROOT-0, base-4)
dep(base-4, as-5)
nsubj(worthy-9, to-6)
advmod(worthy-9, hardly-7)
cop(worthy-9, be-8)
ccomp(base-4, worthy-9)
prep_of(worthy-9, response-11)

(ROOT
  (S
    (NP (NNP Society) (-LRB- -LRB-)
      (NP (DT The) (NNS People))
      (-RRB- -RRB-))
    (ADVP (IN at) (JJ large))
    (ADVP (RB also))
    (VP (VBP have)
      (S
        (NP
          (NP (NNP Rights))
          (CC and)
          (NP (DT the) (NNP Constitutional) (NN ability)))
        (VP (TO to)
          (VP (VB voice)
            (NP (PRP$ their) (NNS Rights))))))
    (. .)))

nsubj(have-9, Society-1)
det(People-4, The-3)
dep(Society-1, People-4)
advmod(have-9, at-6)
advmod(at-6, large-7)
advmod(have-9, also-8)
root(ROOT-0, have-9)
nsubj(voice-16, Rights-10)
det(ability-14, the-12)
nn(ability-14, Constitutional-13)
conj_and(Rights-10, ability-14)
nsubj(voice-16, ability-14)
aux(voice-16, to-15)
ccomp(have-9, voice-16)
xcomp(have-9, voice-16)
poss(Rights-18, their-17)
dobj(voice-16, Rights-18)

(ROOT
  (S (CC And)
    (, ,)
    (PP (IN in)
      (NP
        (NP (NNP State))
        (PP (IN after)
          (NP (NNP State)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NN question))
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBN put)
                  (PP (TO to)
                    (NP (DT The) (NNS People))))))))))
    (, ,)
    (NP (JJ homosexual) (NN marriage))
    (VP (VBZ has)
      (VP (VBN failed)
        (ADVP (RB dismally))))
    (. .)))

cc(failed-20, And-1)
prep_in(failed-20, State-4)
prep_after(State-4, State-6)
advmod(put-12, where-7)
det(question-9, the-8)
nsubjpass(put-12, question-9)
aux(put-12, has-10)
auxpass(put-12, been-11)
rcmod(State-4, put-12)
det(People-15, The-14)
prep_to(put-12, People-15)
amod(marriage-18, homosexual-17)
nsubj(failed-20, marriage-18)
aux(failed-20, has-19)
root(ROOT-0, failed-20)
advmod(failed-20, dismally-21)

(ROOT
  (S
    (ADVP (RB Personally))
    (, ,)
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (DT the) (NN question))
          (VP (VBZ becomes)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (DT a) (NNP Constitutional) (NNP Amendment)))
              (SBAR
                (WHADVP (WRB whereby))
                (S
                  (NP (DT The) (NNS People))
                  (VP (VBP are)
                    (VP (VBN given)
                      (NP (DT the) (NN chance)
                        (S
                          (VP (TO to)
                            (VP (VB voice)
                              (NP
                                (NP (PRP$ their) (NNS desires))
                                (SBAR
                                  (WHPP (IN on)
                                    (WHNP
                                      (WHNP (WP what) (NN type))
                                      (PP (IN of)
                                        (NP (NNP Society)))))
                                  (S
                                    (NP (PRP we))
                                    (VP (MD shall)
                                      (VP (VB live)
                                        (PRT (RP in))))))))))))))))))))
    (. .)))

advmod(hope-4, Personally-1)
nsubj(hope-4, I-3)
root(ROOT-0, hope-4)
det(question-6, the-5)
nsubj(one-8, question-6)
cop(one-8, becomes-7)
ccomp(hope-4, one-8)
det(Amendment-12, a-10)
nn(Amendment-12, Constitutional-11)
prep_of(one-8, Amendment-12)
advmod(given-17, whereby-13)
det(People-15, The-14)
nsubjpass(given-17, People-15)
auxpass(given-17, are-16)
rcmod(one-8, given-17)
det(chance-19, the-18)
dobj(given-17, chance-19)
aux(voice-21, to-20)
infmod(chance-19, voice-21)
poss(desires-23, their-22)
dobj(voice-21, desires-23)
det(type-26, desires-23)
rel(live-31, type-26)
prep_of(type-26, Society-28)
nsubj(live-31, we-29)
aux(live-31, shall-30)
rcmod(desires-23, live-31)
prt(live-31, in-32)

(ROOT
  (S
    (VP
      (VP (VB Take)
        (NP (DT the) (NN matter))
        (PRT (RP out))
        (PP (IN of)
          (NP (DT the) (NNS Courts))))
      (CC and)
      (VP (VB let)
        (S
          (NP (DT The) (NNS People))
          (VP (VB decide)))))
    (. .)))

root(ROOT-0, Take-1)
det(matter-3, the-2)
dobj(Take-1, matter-3)
det(Courts-7, the-6)
prep_out_of(Take-1, Courts-7)
conj_and(Take-1, let-9)
det(People-11, The-10)
nsubj(decide-12, People-11)
ccomp(let-9, decide-12)

(ROOT
  (S
    (ADVP (RB Naturally))
    (, ,)
    (NP (NNS homosexuals))
    (VP (VBP do) (RB n't)
      (VP (VB wish)
        (PP (IN for)
          (NP
            (NP (DT that))
            (, ,)
            (SBAR (IN because)
              (S
                (NP (PRP they))
                (VP (VBP know)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (MD could)
                        (ADVP (RB never))
                        (VP (VB win))))))))))))
    (. .)))

advmod(wish-6, Naturally-1)
nsubj(wish-6, homosexuals-3)
aux(wish-6, do-4)
neg(wish-6, n't-5)
root(ROOT-0, wish-6)
prep_for(wish-6, that-8)
mark(know-12, because-10)
nsubj(know-12, they-11)
dep(that-8, know-12)
nsubj(win-16, they-13)
aux(win-16, could-14)
neg(win-16, never-15)
ccomp(know-12, win-16)

(ROOT
  (S
    (S
      (NP (NNS Dogs))
      (VP (VBP eat)
        (NP (PRP$ their) (JJ own) (NNS feces))
        (PP (IN at)
          (NP (NNS times)))
        (ADVP (RB too))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ does) (RB n't)
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP
                    (NP (DT a) (JJ good) (NN rationale))
                    (PP (IN for)
                      (S
                        (VP (VBG suggesting)
                          (SBAR (IN that)
                            (S
                              (NP (NNS Humans))
                              (VP (MD should))))))))
                  (, ,)
                  (CC or)
                  (NP
                    (NP (DT a) (JJ good) (NN defense))
                    (SBAR (IN if)
                      (S
                        (NP (PRP one))
                        (VP (MD would))))))))))))
    (. .)))

nsubj(eat-2, Dogs-1)
root(ROOT-0, eat-2)
poss(feces-5, their-3)
amod(feces-5, own-4)
dobj(eat-2, feces-5)
prep_at(eat-2, times-7)
advmod(eat-2, too-8)
nsubj(seem-14, that-11)
xsubj(rationale-19, that-11)
aux(seem-14, does-12)
neg(seem-14, n't-13)
conj_but(eat-2, seem-14)
aux(rationale-19, to-15)
cop(rationale-19, be-16)
det(rationale-19, a-17)
amod(rationale-19, good-18)
xcomp(seem-14, rationale-19)
prepc_for(rationale-19, suggesting-21)
complm(should-24, that-22)
nsubj(should-24, Humans-23)
ccomp(suggesting-21, should-24)
det(defense-29, a-27)
amod(defense-29, good-28)
xcomp(seem-14, defense-29)
conj_or(rationale-19, defense-29)
dobj(would-32, defense-29)
mark(would-32, if-30)
nsubj(would-32, one-31)
dep(defense-29, would-32)

(ROOT
  (S
    (NP (NNP Homosexuality))
    (VP (VBZ is)
      (NP (DT a) (`` ``) (JJ deviant) ('' '') (NN behavior)))
    (. .)))

nsubj(behavior-7, Homosexuality-1)
cop(behavior-7, is-2)
det(behavior-7, a-3)
amod(behavior-7, deviant-5)
root(ROOT-0, behavior-7)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP I))
    (VP (VBP use)
      (NP (DT that) (JJ strong) (NN word))
      (ADVP (RB precisely))
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP know)
            (SBAR
              (S
                (NP (PRP it))
                (VP (MD will)
                  (VP (VB generate)
                    (NP (DT a) (JJ strong) (NN reaction))
                    (PP (TO to)
                      (NP (JJ many)))))))))))
    (. .)))

advmod(use-4, Now-1)
nsubj(use-4, I-3)
root(ROOT-0, use-4)
det(word-7, that-5)
amod(word-7, strong-6)
dobj(use-4, word-7)
advmod(use-4, precisely-8)
mark(know-11, because-9)
nsubj(know-11, I-10)
advcl(use-4, know-11)
nsubj(generate-14, it-12)
aux(generate-14, will-13)
ccomp(know-11, generate-14)
det(reaction-17, a-15)
amod(reaction-17, strong-16)
dobj(generate-14, reaction-17)
prep_to(generate-14, many-19)

(ROOT
  (S
    (S
      (VP (VBG None)
        (NP (DT the) (JJR less))))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (ADVP (RB homosexuality))
          (VP (VBZ is)))))
    (. .)))

partmod(is-6, None-1)
det(less-3, the-2)
dobj(None-1, less-3)
nsubj(is-6, that-5)
root(ROOT-0, is-6)
nsubj(is-9, what-7)
advmod(is-9, homosexuality-8)
ccomp(is-6, is-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (`` ``)
      (ADJP (JJ deviant))
      ('' ''))
    (. .)))

nsubj(deviant-4, It-1)
cop(deviant-4, is-2)
root(ROOT-0, deviant-4)

(ROOT
  (FRAG
    (ADVP (RB Not)
      (ADVP (RB so) (RB much))
      (PP (IN in)
        (NP (DT the) (NN sense))))
    (SBAR (IN that)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (UCP
            (ADJP (`` ``) (JJ wicked) ('' ''))
            (, ,)
            (ADJP
              (ADJP (`` ``) (JJ evil) ('' ''))
              (CC or)
              (ADJP (`` ``) (JJ vile) ('' '')))
            (, ,)
            (CC but)
            (PP (IN in)
              (NP
                (NP
                  (NP (DT the) (NN sense))
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (`` ``) (VBZ deviates) ('' '')))))
                (PP (IN from)
                  (NP (DT the) (NN norm)))))))))
    (. .)))

dep(much-3, Not-1)
advmod(much-3, so-2)
root(ROOT-0, much-3)
det(sense-6, the-5)
prep_in(much-3, sense-6)
dep(wicked-11, that-7)
nsubj(wicked-11, it-8)
nsubj(evil-15, it-8)
cop(wicked-11, is-9)
dep(much-3, wicked-11)
dep(much-3, evil-15)
conj_but(wicked-11, evil-15)
conj_but(wicked-11, vile-19)
conj_or(evil-15, vile-19)
dep(much-3, in-23)
conj_but(wicked-11, in-23)
det(sense-25, the-24)
prep_in(wicked-11, sense-25)
dobj(deviates-29, sense-25)
complm(deviates-29, that-26)
nsubj(deviates-29, it-27)
dep(sense-25, deviates-29)
det(norm-33, the-32)
prep_from(sense-25, norm-33)

(ROOT
  (S
    (NP
      (NP
        (QP (RB Approximately) (CD 3))
        (NN %))
      (PP (IN of)
        (NP (DT the) (NN population))))
    (VP (VBP are)
      (ADJP (JJ homosexual)))
    (. .)))

quantmod(3-2, Approximately-1)
num(%-3, 3-2)
nsubj(homosexual-8, %-3)
det(population-6, the-5)
prep_of(%-3, population-6)
cop(homosexual-8, are-7)
root(ROOT-0, homosexual-8)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (CD 97) (NN %))
          (VP (VBP are) (RB n't)))))
    (. .)))

nsubj(means-2, That-1)
root(ROOT-0, means-2)
num(%-4, 97-3)
nsubj(are-5, %-4)
ccomp(means-2, are-5)
neg(are-5, n't-6)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (VP (VB homosexuality)
      (NP (`` ``) (NNPS Deviates) ('' ''))
      (ADVP (RB greatly))
      (PP (IN from)
        (NP (DT the) (NN norm))))
    (. .)))

advmod(homosexuality-3, Therefore-1)
root(ROOT-0, homosexuality-3)
dobj(homosexuality-3, Deviates-5)
advmod(homosexuality-3, greatly-7)
det(norm-10, the-9)
prep_from(homosexuality-3, norm-10)

