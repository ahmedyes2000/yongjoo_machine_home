(ROOT
  (S
    (NP (DT The) (JJ possible) (NNS repurcussions))
    (VP (VBP are)
      (ADJP (JJ innumerable)
        (CC and)
        (JJ unkown)))
    (. ?)))

det(repurcussions-3, The-1)
amod(repurcussions-3, possible-2)
nsubj(innumerable-5, repurcussions-3)
nsubj(unkown-7, repurcussions-3)
cop(innumerable-5, are-4)
root(ROOT-0, innumerable-5)
conj_and(innumerable-5, unkown-7)

(ROOT
  (SBARQ
    (WHNP
      (WHNP (WDT What) (NN kind))
      (PP (IN of)
        (NP (NN argument))))
    (SQ (VBZ is)
      (NP (DT that)))
    (. ?)))

det(kind-2, What-1)
attr(is-5, kind-2)
prep_of(kind-2, argument-4)
root(ROOT-0, is-5)
nsubj(is-5, that-6)

(ROOT
  (S (CC Either)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (RB too) (JJ lazy)
        (S
          (VP (TO to)
            (VP (VB give)
              (NP (DT any) (JJ real) (NN thought))
              (PP (TO to)
                (NP (DT this) (NN matter)))
              (, ,)
              (CC or)
              (NP
                (NP (PRP$ your)
                  (QP (RB just) (RB so) (CD scared)))
                (PP (IN of)
                  (NP (JJ gay) (NNS people))))))))
      (SBAR (IN that)
        (S
          (NP (PRP$ your) (NN brain))
          (VP (VBZ has)
            (VP (VBN shut)
              (PRT (RP down)))))))
    (. .)))

dep(lazy-5, Either-1)
nsubj(lazy-5, you-2)
cop(lazy-5, are-3)
advmod(lazy-5, too-4)
root(ROOT-0, lazy-5)
aux(give-7, to-6)
xcomp(lazy-5, give-7)
det(thought-10, any-8)
amod(thought-10, real-9)
dobj(give-7, thought-10)
det(matter-13, this-12)
prep_to(give-7, matter-13)
poss(scared-19, your-16)
quantmod(scared-19, just-17)
quantmod(scared-19, so-18)
xcomp(lazy-5, scared-19)
conj_or(give-7, scared-19)
dobj(give-7, scared-19)
amod(people-22, gay-21)
prep_of(scared-19, people-22)
complm(shut-27, that-23)
poss(brain-25, your-24)
nsubj(shut-27, brain-25)
aux(shut-27, has-26)
ccomp(lazy-5, shut-27)
prt(shut-27, down-28)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (VP
      (VP (VB take)
        (NP (DT the) (NN time)
          (S
            (VP (TO to)
              (VP (VB list)
                (NP
                  (NP (DT a) (JJ few))
                  (PP (IN of)
                    (NP (DT the) (JJ horrible) (NNS repurcussions)))))))))
      (, ,)
      (CC or)
      (VP (VBP do) (RB n't)
        (VP (VB try)
          (CC and)
          (VB make)
          (NP (DT the) (NN argument))
          (ADVP (IN at) (DT all)))))
    (. .)))

advmod(take-2, Perhaps-1)
root(ROOT-0, take-2)
det(time-4, the-3)
dobj(take-2, time-4)
aux(list-6, to-5)
infmod(time-4, list-6)
det(few-8, a-7)
dobj(list-6, few-8)
det(repurcussions-12, the-10)
amod(repurcussions-12, horrible-11)
prep_of(few-8, repurcussions-12)
aux(try-17, do-15)
neg(try-17, n't-16)
conj_or(take-2, try-17)
conj_or(take-2, make-19)
conj_and(try-17, make-19)
det(argument-21, the-20)
dobj(try-17, argument-21)
advmod(try-17, at-22)
pobj(at-22, all-23)

