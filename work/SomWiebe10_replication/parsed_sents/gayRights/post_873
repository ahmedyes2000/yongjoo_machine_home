(ROOT
  (S
    (FRAG
      (INTJ (UH Yes))
      (, ,)
      (ADVP (RB indeed)))
    (: ;)
    (S (CC and)
      (S
        (NP (NN someone))
        (VP (MD should)
          (VP (VB file)
            (NP
              (NP
                (NP (DT a) (NN class) (NN action) (NN suit) (NN angainst))
                (NP (DT the) (NNP California) (NNP Goverment)))
              (CC and)
              (NP
                (NP (DT the) (NNP California) (NNP Supremem) (NN court))
                (PP (IN for)
                  (NP (PRP$ their) (NN responsibility)))))
            (PP (IN in)
              (NP
                (NP (PDT both) (DT the) (NN overturning))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NNS people) (POS 's))
                    (NN vote))))))))
      (CC and)
      (S
        (VP (VBG causing)
          (NP (DT another) (NN propostion) (NN vote)))))
    (. .)))

dep(indeed-3, Yes-1)
dep(file-8, indeed-3)
nsubj(file-8, someone-6)
nsubj(causing-35, someone-6)
aux(file-8, should-7)
root(ROOT-0, file-8)
det(angainst-13, a-9)
nn(angainst-13, class-10)
nn(angainst-13, action-11)
nn(angainst-13, suit-12)
dobj(file-8, angainst-13)
det(Goverment-16, the-14)
nn(Goverment-16, California-15)
dep(angainst-13, Goverment-16)
det(court-21, the-18)
nn(court-21, California-19)
nn(court-21, Supremem-20)
dobj(file-8, court-21)
conj_and(angainst-13, court-21)
poss(responsibility-24, their-23)
prep_for(court-21, responsibility-24)
predet(overturning-28, both-26)
det(overturning-28, the-27)
prep_in(file-8, overturning-28)
det(people-31, the-30)
poss(vote-33, people-31)
prep_of(overturning-28, vote-33)
conj_and(file-8, causing-35)
det(vote-38, another-36)
nn(vote-38, propostion-37)
dobj(causing-35, vote-38)

(ROOT
  (S
    (S
      (NP (NNP California))
      (VP (VBZ boasts)
        (NP
          (NP (DT the) (NN world) (POS 's))
          (JJ 6th) (NN biggst) (NN economy))))
    (: ;)
    (S
      (ADVP (RB yet))
      (NP (PRP you))
      (VP
        (ADVP (RB still))
        (VBD bamkrupted)
        (NP (PRP it))))
    (. .)))

nsubj(boasts-2, California-1)
root(ROOT-0, boasts-2)
det(world-4, the-3)
poss(economy-8, world-4)
amod(economy-8, 6th-6)
nn(economy-8, biggst-7)
dobj(boasts-2, economy-8)
advmod(bamkrupted-13, yet-10)
nsubj(bamkrupted-13, you-11)
advmod(bamkrupted-13, still-12)
parataxis(boasts-2, bamkrupted-13)
dobj(bamkrupted-13, it-14)

(ROOT
  (NP (NNS Proposterous) (. !)))

root(ROOT-0, Proposterous-1)

(ROOT
  (S
    (VP (VB and)
      (NP
        (NP (DT a) (NN lie))
        (PP (IN of)
          (NP (NN society)))))
    (. .)))

root(ROOT-0, and-1)
det(lie-3, a-2)
dobj(and-1, lie-3)
prep_of(lie-3, society-5)

(ROOT
  (FRAG (CC And)
    (SBAR (IN until)
      (S
        (NP (PRP we))
        (VP
          (VP (VB admit)
            (NP (DT this)))
          (CC and)
          (VP (VB get)
            (PRT (RP over))
            (NP
              (NP (PRP$ our) (JJ SELF-CENTERED) (NNS agendas))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP seek)
                    (ADVP (RB only))
                    (S
                      (VP (TO to)
                        (VP
                          (VP (VB have)
                            (NP (NNS things))
                            (SBAR (IN as)
                              (S
                                (NP (PRP it))
                                (VP (VBZ pleases)
                                  (NP (PRP us))))))
                          (: ;)
                          (CC and)
                          (VP (VB give)
                            (PRT (RP up))
                            (PP (IN on)
                              (S
                                (VP (VBG pursuing)
                                  (NP
                                    (NP (DT some))
                                    (PP (IN of)
                                      (NP (PRP$ our) (NNS rights))))))))))))))
              (: ;)
              (S
                (VP (VBG realizing)
                  (S (`` ``)
                    (NP (PRP you))
                    (VP (MD ca) (RB n't)
                      (ADVP (RB always))
                      (VP (VB get)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP you))
                            (VP (VBP want))))))))))))))
    (. !)))

dep(admit-4, And-1)
mark(admit-4, until-2)
nsubj(admit-4, we-3)
nsubj(get-7, we-3)
root(ROOT-0, admit-4)
dobj(admit-4, this-5)
conj_and(admit-4, get-7)
prt(get-7, over-8)
poss(agendas-11, our-9)
amod(agendas-11, SELF-CENTERED-10)
dobj(get-7, agendas-11)
nsubj(seek-13, agendas-11)
rcmod(agendas-11, seek-13)
advmod(seek-13, only-14)
aux(have-16, to-15)
xcomp(seek-13, have-16)
dobj(have-16, things-17)
mark(pleases-20, as-18)
nsubj(pleases-20, it-19)
advcl(have-16, pleases-20)
dobj(pleases-20, us-21)
xcomp(seek-13, give-24)
conj_and(have-16, give-24)
prt(give-24, up-25)
prepc_on(give-24, pursuing-27)
dobj(pursuing-27, some-28)
poss(rights-31, our-30)
prep_of(some-28, rights-31)
dep(agendas-11, realizing-33)
nsubj(get-39, you-35)
aux(get-39, ca-36)
neg(get-39, n't-37)
advmod(get-39, always-38)
ccomp(realizing-33, get-39)
dobj(want-42, what-40)
nsubj(want-42, you-41)
ccomp(get-39, want-42)

(ROOT
  (S ('' '')
    (S
      (NP (PRP we))
      (VP (MD will)
        (ADVP (RB only))
        (VP (VB keep)
          (S
            (VP
              (VP (VBG going)
                (NP (DT the) (JJ wrong) (NN direction)))
              (CC and)
              (VP (VBG losing)
                (NP (NN ground))))))))
    (: ;)
    (S
      (NP
        (NP (PDT all) (DT the) (NN while))
        (VP (VBG thinking)
          (NP (PRP we))))
      (VBP are)
      (VP (VBG accomplishing)
        (NP (DT the) (NN opposite))))
    (. .)))

nsubj(keep-5, we-2)
aux(keep-5, will-3)
advmod(keep-5, only-4)
root(ROOT-0, keep-5)
ccomp(keep-5, going-6)
det(direction-9, the-7)
amod(direction-9, wrong-8)
dobj(going-6, direction-9)
ccomp(keep-5, losing-11)
conj_and(going-6, losing-11)
dobj(losing-11, ground-12)
predet(while-16, all-14)
det(while-16, the-15)
nsubj(accomplishing-20, while-16)
partmod(while-16, thinking-17)
dobj(thinking-17, we-18)
dep(accomplishing-20, are-19)
parataxis(keep-5, accomplishing-20)
det(opposite-22, the-21)
dobj(accomplishing-20, opposite-22)

(ROOT
  (S
    (NP (NNS Spells))
    (VP
      (VP (VBZ DISASTER))
      (CC and)
      (VP (VBZ CHAOS)))
    (. .)))

nsubj(DISASTER-2, Spells-1)
nsubj(CHAOS-4, Spells-1)
root(ROOT-0, DISASTER-2)
conj_and(DISASTER-2, CHAOS-4)

(ROOT
  (S
    (S
      (NP (PRP$ Their))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN way))
          (SBAR
            (S
              (NP (NNP California))
              (VP (MD could)
                (VP (VB afford)
                  (SBAR
                    (S
                      (NP (DT the) (CD 10))
                      (VP (VBZ 's)
                        (PP (TO to)
                          (ADVP (RB maybe)))))))))))))
    (, ,)
    (NP (CD 100))
    (VP (VBZ 's)
      (PP (IN of)
        (NP
          (NP (NNS millions))
          (PP (IN of)
            (NP
              (NP (NNS dollars))
              (NP (DT this) (NN issue) (NN cost)))))))
    (. .)))

nsubj(way-4, Their-1)
cop(way-4, is-2)
det(way-4, no-3)
dobj(afford-7, way-4)
ccomp('s-15, way-4)
nsubj(afford-7, California-5)
aux(afford-7, could-6)
rcmod(way-4, afford-7)
det(10-9, the-8)
nsubj('s-10, 10-9)
ccomp(afford-7, 's-10)
prep('s-10, to-11)
pcomp(to-11, maybe-12)
nsubj('s-15, 100-14)
root(ROOT-0, 's-15)
prep_of('s-15, millions-17)
prep_of(millions-17, dollars-19)
det(cost-22, this-20)
nn(cost-22, issue-21)
dep(dollars-19, cost-22)

(ROOT
  (NP
    (NP (JJ Good) (NN job))
    (NP (NNS liberals))
    (. !)))

amod(job-2, Good-1)
root(ROOT-0, job-2)
dep(job-2, liberals-3)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN contributed)
        (S
          (VP (TO to)
            (VP (VB bankrupting)
              (NP (PRP$ your) (NN state)))))))
    (. .)))

advmod(contributed-4, Now-1)
nsubj(contributed-4, you-2)
xsubj(bankrupting-6, you-2)
aux(contributed-4, have-3)
root(ROOT-0, contributed-4)
aux(bankrupting-6, to-5)
xcomp(contributed-4, bankrupting-6)
poss(state-8, your-7)
dobj(bankrupting-6, state-8)

(ROOT
  (S
    (PP
      (ADVP (RB Additionally))
      (IN in)
      (NP (NN response)))
    (: :)
    (NP
      (NP (RB So) (RB then))
      (SBAR
        (WHNP
          (WHNP (WDT that) (NN author))
          (PRN (, ,)
            (CC and)
            (ADVP (JJ other))))
        (S
          (VP (VBZ 's)
            (VP (VBG making)
              (NP (DT the) (JJ same) (NN argument))
              (PP (IN about)
                (S
                  (VP (VBG wanting) ('' '')
                    (NP
                      (NP (NNP ALL) (NNS people))
                      (VP (VBG having)
                        (NP (JJ equal) (NNS rights))))
                    ('' '')
                    (PP (RB then)
                      (ADVP (RB also)))))))))))
    (VP (VBZ supports)
      (NP (JJ consentual) (NN pedophilia)))
    (. .)))

advmod(supports-28, Additionally-1)
prep_in(supports-28, response-3)
advmod(then-6, So-5)
det(author-8, then-6)
nsubj(supports-28, then-6)
nsubj(making-13, author-8)
dep(other-11, and-10)
dep(author-8, other-11)
aux(making-13, 's-12)
rcmod(then-6, making-13)
det(argument-16, the-14)
amod(argument-16, same-15)
dobj(making-13, argument-16)
prepc_about(making-13, wanting-18)
nn(people-21, ALL-20)
dobj(wanting-18, people-21)
partmod(people-21, having-22)
amod(rights-24, equal-23)
dobj(having-22, rights-24)
prep(wanting-18, then-26)
dep(then-26, also-27)
root(ROOT-0, supports-28)
amod(pedophilia-30, consentual-29)
dobj(supports-28, pedophilia-30)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB not)
      (VP (VB hurt)
        (NP (NN anyone))
        (ADVP (RB either))))
    (. .)))

nsubj(hurt-4, It-1)
aux(hurt-4, does-2)
neg(hurt-4, not-3)
root(ROOT-0, hurt-4)
dobj(hurt-4, anyone-5)
advmod(hurt-4, either-6)

(ROOT
  (SQ (CC Or)
    (VBZ is)
    (NP (PRP it))
    (SBAR (IN that)
      (S
        (ADVP (RB ultimately))
        (, ,)
        (NP
          (NP
            (NP
              (NP (PRP we))
              (ADVP (RB actually)))
            (, ,)
            (PRN (-LRB- -LRB-)
              (NP (CD truthfully))
              (, ,)
              (PP (IN behind)
                (NP
                  (NP (DT the) (NN smoke))
                  (CC and)
                  (NP (NNS mirrors))))
              (-RRB- -RRB-)))
          (ADVP (RB only)))
        (VP
          (ADVP (RB really))
          (VBP support)
          (NP
            (NP (DT the) (NNS rights))
            (PP (IN of)
              (NP (DT those) (NNS things))))
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (VBP think)
                (SBAR
                  (S
                    (VP
                      (VP (VBP are)
                        (ADJP (JJ acceptable)))
                      (CC or)
                      (VP (VBP are) (RB not)
                        (VP (VBN opposed)
                          (S
                            (VP (TO to))))))))))))))
    (. ?)))

cc(is-2, Or-1)
root(ROOT-0, is-2)
nsubj(is-2, it-3)
complm(support-21, that-4)
advmod(support-21, ultimately-5)
nsubj(support-21, we-7)
advmod(we-7, actually-8)
dep(we-7, truthfully-11)
dep(truthfully-11, behind-13)
det(smoke-15, the-14)
pobj(behind-13, smoke-15)
pobj(behind-13, mirrors-17)
conj_and(smoke-15, mirrors-17)
advmod(we-7, only-19)
advmod(support-21, really-20)
dep(is-2, support-21)
det(rights-23, the-22)
dobj(support-21, rights-23)
det(things-26, those-25)
prep_of(rights-23, things-26)
complm(think-29, that-27)
nsubj(think-29, we-28)
ccomp(support-21, think-29)
cop(acceptable-31, are-30)
ccomp(think-29, acceptable-31)
auxpass(opposed-35, are-33)
neg(opposed-35, not-34)
ccomp(think-29, opposed-35)
conj_or(acceptable-31, opposed-35)
xcomp(opposed-35, to-36)

(ROOT
  (NP (NNP Hmmmm) (: ...)))

root(ROOT-0, Hmmmm-1)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB not)
      (VP (VB take)
        (NP (DT an) (JJ intelligent) (NN philosopher))
        (S
          (VP (TO to)
            (VP (VB understand)
              (SBAR (IN that)
                (S (`` ``)
                  (NP (JJ equal) (NNS rights))
                  ('' '')
                  (VP (VBP are)
                    (NP
                      (NP (DT a) (`` ``) (JJ delusional) (NN illusion) ('' ''))
                      (SBAR
                        (WHADVP (WRB How))
                        (S
                          (NP (NN can) (NN everyone))
                          (VP (VBP have)
                            (NP
                              (NP (JJ equal) (NNS rights))
                              (PP (IN for)
                                (NP
                                  (NP (DT all))
                                  (PP (IN of)
                                    (NP (DT the) (NNS things)))))
                              (SBAR
                                (S
                                  (NP (PRP they))
                                  (VP (VBP want)))))))))))))))))
    (. ?)))

nsubj(take-4, It-1)
aux(take-4, does-2)
neg(take-4, not-3)
root(ROOT-0, take-4)
det(philosopher-7, an-5)
amod(philosopher-7, intelligent-6)
dobj(take-4, philosopher-7)
aux(understand-9, to-8)
xcomp(take-4, understand-9)
complm(illusion-19, that-10)
amod(rights-13, equal-12)
nsubj(illusion-19, rights-13)
cop(illusion-19, are-15)
det(illusion-19, a-16)
amod(illusion-19, delusional-18)
ccomp(understand-9, illusion-19)
advmod(have-24, How-21)
nn(everyone-23, can-22)
nsubj(have-24, everyone-23)
dep(illusion-19, have-24)
amod(rights-26, equal-25)
dobj(have-24, rights-26)
dobj(want-33, rights-26)
prep_for(rights-26, all-28)
det(things-31, the-30)
prep_of(all-28, things-31)
nsubj(want-33, they-32)
rcmod(rights-26, want-33)

