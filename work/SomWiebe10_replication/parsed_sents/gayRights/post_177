(ROOT
  (S
    (NP
      (NP (DT The) (JJ key) (NN point))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ gets)
            (VP (VBN missed)
              (PP (IN in)
                (NP (DT the) (DT this) (NN discussion))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNS parents))
          (VP (VBP are) (RB n't)
            (NP
              (NP (DT the) (JJ only) (NNS ones))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP raise)
                    (NP (NNS children))))))))))
    (. .)))

det(point-3, The-1)
amod(point-3, key-2)
nsubjpass(missed-6, point-3)
nsubj(is-11, point-3)
auxpass(missed-6, gets-5)
rcmod(point-3, missed-6)
predet(discussion-10, the-8)
det(discussion-10, this-9)
prep_in(missed-6, discussion-10)
root(ROOT-0, is-11)
complm(ones-18, that-12)
nsubj(ones-18, parents-13)
cop(ones-18, are-14)
neg(ones-18, n't-15)
det(ones-18, the-16)
amod(ones-18, only-17)
ccomp(is-11, ones-18)
nsubj(raise-20, ones-18)
rcmod(ones-18, raise-20)
dobj(raise-20, children-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD grew)
        (PRT (RP up))
        (PP (IN with)
          (NP (DT a) (JJ single) (NN mother)))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN while)
        (S
          (NP (PRP she))
          (ADVP (RB certainly))
          (VP (VBD did)
            (NP (PRP$ her) (JJS best)))))
      (, ,)
      (NP (PRP she))
      (VP (MD could) (RB n't)
        (VP (VB answer)
          (NP (PDT all) (PRP$ my) (NNS questions))
          (PP (IN as)
            (NP (DT a) (NN boy))))))
    (. .)))

nsubj(grew-2, I-1)
root(ROOT-0, grew-2)
prt(grew-2, up-3)
det(mother-7, a-5)
amod(mother-7, single-6)
prep_with(grew-2, mother-7)
mark(did-13, while-10)
nsubj(did-13, she-11)
advmod(did-13, certainly-12)
advcl(answer-20, did-13)
poss(best-15, her-14)
dobj(did-13, best-15)
nsubj(answer-20, she-17)
aux(answer-20, could-18)
neg(answer-20, n't-19)
conj_and(grew-2, answer-20)
predet(questions-23, all-21)
poss(questions-23, my-22)
dobj(answer-20, questions-23)
det(boy-26, a-25)
prep_as(answer-20, boy-26)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP I))
          (VP (VBD had)
            (NP
              (NP (DT a) (NN grandfather))
              (, ,)
              (NP (NNS uncles))
              (, ,)
              (NP (NN family) (NNS friends))
              (, ,)
              (NP (NNS teachers))
              (, ,)
              (NP (NNS coaches))
              (CC and)
              (NP (NNS others)))
            (SBAR
              (WHNP (WP who))
              (S
                (NP (PRP I))
                (VP (MD could)
                  (VP (VB rely)
                    (PRT (RP on))))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(had-5, why-3)
nsubj(had-5, I-4)
advcl('s-2, had-5)
det(grandfather-7, a-6)
dobj(had-5, grandfather-7)
dobj(had-5, uncles-9)
conj_and(grandfather-7, uncles-9)
nn(friends-12, family-11)
dobj(had-5, friends-12)
conj_and(grandfather-7, friends-12)
dobj(had-5, teachers-14)
conj_and(grandfather-7, teachers-14)
dobj(had-5, coaches-16)
conj_and(grandfather-7, coaches-16)
dobj(had-5, others-18)
conj_and(grandfather-7, others-18)
dobj(rely-22, who-19)
nsubj(rely-22, I-20)
aux(rely-22, could-21)
dep(had-5, rely-22)
prt(rely-22, on-23)

(ROOT
  (S
    (S
      (NP (DT Every) (NN situation))
      (VP
        (VP (VBZ is)
          (ADJP (JJ unique)))
        (PRN (-LRB- -LRB-)
          (PP (IN in)
            (NP
              (NP (PRP$ my) (NN case))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD was)
                    (ADJP
                      (ADJP (RB likely) (JJR better) (IN off))
                      (PP (IN without)
                        (NP (PRP$ my) (NN father))))
                    (PP (IN in)
                      (NP (PRP$ my) (NN home))))))))
          (-RRB- -RRB-))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (ADVP (RB absolutely))
      (VP (VBP feel)
        (SBAR (IN that)
          (S
            (NP (PRP$ their) (JJ collective))
            (VP
              (VP (VBP help))
              (CC but)
              (VP
                (NP (PRP me))
                (PP (IN at)
                  (NP (DT no) (NN disadvantage)))))))))
    (. .)))

det(situation-2, Every-1)
nsubj(unique-4, situation-2)
cop(unique-4, is-3)
root(ROOT-0, unique-4)
dep(unique-4, in-6)
poss(case-8, my-7)
pobj(in-6, case-8)
nsubj(off-13, I-9)
cop(off-13, was-10)
advmod(off-13, likely-11)
dep(off-13, better-12)
rcmod(case-8, off-13)
poss(father-16, my-15)
prep_without(off-13, father-16)
poss(home-19, my-18)
prep_in(off-13, home-19)
nsubj(feel-25, I-23)
advmod(feel-25, absolutely-24)
conj_but(unique-4, feel-25)
complm(help-29, that-26)
poss(collective-28, their-27)
nsubj(help-29, collective-28)
ccomp(feel-25, help-29)
ccomp(feel-25, me-31)
conj_but(help-29, me-31)
det(disadvantage-34, no-33)
prep_at(me-31, disadvantage-34)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT no) (NN reason)
        (S
          (VP (TO to)
            (VP (VB think)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT the) (NNS children))
                    (PP (IN of)
                      (NP (JJ same-sex) (NNS parents))))
                  (VP (MD could) (RB n't)
                    (VP (VB use)
                      (NP (JJ similar) (NNS resources)))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(reason-4, no-3)
nsubj('s-2, reason-4)
aux(think-6, to-5)
infmod(reason-4, think-6)
complm(use-15, that-7)
det(children-9, the-8)
nsubj(use-15, children-9)
amod(parents-12, same-sex-11)
prep_of(children-9, parents-12)
aux(use-15, could-13)
neg(use-15, n't-14)
ccomp(think-6, use-15)
amod(resources-17, similar-16)
dobj(use-15, resources-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB challenge)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB re-consider)
              (SBAR (IN if)
                (S
                  (NP (CD two) (JJ opposite) (NN sex) (NNS parents))
                  (ADVP (RB really))
                  (VP (VBP are)
                    (ADJP (RB so) (JJ necessary))))))))))
    (. .)))

nsubj(challenge-3, I-1)
aux(challenge-3, would-2)
root(ROOT-0, challenge-3)
nsubj(re-consider-6, you-4)
aux(re-consider-6, to-5)
xcomp(challenge-3, re-consider-6)
mark(necessary-15, if-7)
num(parents-11, two-8)
amod(parents-11, opposite-9)
nn(parents-11, sex-10)
nsubj(necessary-15, parents-11)
advmod(necessary-15, really-12)
cop(necessary-15, are-13)
advmod(necessary-15, so-14)
advcl(re-consider-6, necessary-15)

