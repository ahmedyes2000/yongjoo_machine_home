(ROOT
  (S ('' '')
    (S
      (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
      (NP (NNP Homosexuality))
      (VP (VBZ has)
        (ADVP (RB always))
        (VP (VBN existed))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP
          (NP (DT the) (NNS thousands))
          (PP (IN of)
            (NP
              (NP (NNS years))
              (PP (IN of)
                (NP
                  (NP (NN history))
                  (PP (IN of)
                    (NP (NN civilization)))))))))
      (, ,)
      (NP (DT every) (NN society))
      (VP (VBZ has)
        (VP (VBN defined)
          (S
            (ADJP (NN marriage)
              (PP (TO to)
                (NP
                  (NP (CD one) (NN man))
                  (CC and)
                  (NP (CD one) (NNS women))))))
          (, ,)
          (SBAR
            (WHADVP (WRB Why))
            (S
              (VP (VBP do)
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP wish)
                      (S
                        (VP (TO to)
                          (VP (VB change)
                            (NP
                              (NP (DT this) (NN definition))
                              (PP (IN in)
                                (NP (CD 2009))))))))))))))))
    (. ?)))

dep(existed-8, 1-3)
nsubj(existed-8, Homosexuality-5)
aux(existed-8, has-6)
advmod(existed-8, always-7)
root(ROOT-0, existed-8)
det(thousands-13, the-12)
prep_in(defined-24, thousands-13)
prep_of(thousands-13, years-15)
prep_of(years-15, history-17)
prep_of(history-17, civilization-19)
det(society-22, every-21)
nsubj(defined-24, society-22)
aux(defined-24, has-23)
conj_but(existed-8, defined-24)
dep(defined-24, marriage-25)
num(man-28, one-27)
prep_to(marriage-25, man-28)
num(women-31, one-30)
prep_to(marriage-25, women-31)
conj_and(man-28, women-31)
advmod(do-34, Why-33)
advcl(defined-24, do-34)
nsubj(wish-36, we-35)
xsubj(change-38, we-35)
ccomp(do-34, wish-36)
aux(change-38, to-37)
xcomp(wish-36, change-38)
det(definition-40, this-39)
dobj(change-38, definition-40)
prep_in(definition-40, 2009-42)

(ROOT
  (S (`` ``)
    (ADVP (RB Actually))
    (NP (NN marriage))
    (VP (VBD was) (RB not)
      (PP
        (ADVP (RB always))
        (IN between)
        (NP
          (NP (CD one) (NN man))
          (CC and)
          (NP (CD one) (NN woman)))))
    (. .)))

advmod(was-4, Actually-2)
nsubj(was-4, marriage-3)
root(ROOT-0, was-4)
neg(was-4, not-5)
advmod(was-4, always-6)
num(man-9, one-8)
prep_between(was-4, man-9)
num(woman-12, one-11)
prep_between(was-4, woman-12)
conj_and(man-9, woman-12)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (ADVP (RB also))
      (NP
        (NP (DT the) (NN matter))
        (PP (IN of)
          (NP
            (NP (JJ public) (NN opinion))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ has)
                  (VP (VBN changed)
                    (ADVP (RB now))
                    (SBAR (IN that)
                      (S
                        (NP (NNS homosexuals))
                        (VP (MD can)
                          (VP (VB act)
                            (PP (IN in)
                              (NP
                                (NP (DT the)
                                  (ADJP (JJ open)
                                    (CC and)
                                    (JJ reasonable))
                                  (NNS people))
                                (SBAR
                                  (S
                                    (VP (MD can)
                                      (ADVP (RB clearly))
                                      (VP (VB see)))))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBD said)
                                      (SBAR
                                        (S
                                          (NP (NNS homosexuals))
                                          (VP (VBP are)
                                            (NP (DT no) (NN threat))))))))))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(is-2, also-3)
det(matter-5, the-4)
nsubj(is-2, matter-5)
amod(opinion-8, public-7)
prep_of(matter-5, opinion-8)
nsubj(changed-12, opinion-8)
aux(changed-12, has-11)
rcmod(opinion-8, changed-12)
advmod(changed-12, now-13)
complm(act-17, that-14)
nsubj(act-17, homosexuals-15)
aux(act-17, can-16)
ccomp(changed-12, act-17)
det(people-23, the-19)
amod(people-23, open-20)
conj_and(open-20, reasonable-22)
amod(people-23, reasonable-22)
prep_in(act-17, people-23)
aux(see-26, can-24)
advmod(see-26, clearly-25)
rcmod(people-23, see-26)
nsubj(said-28, that-27)
rcmod(people-23, said-28)
nsubj(threat-32, homosexuals-29)
cop(threat-32, are-30)
det(threat-32, no-31)
ccomp(said-28, threat-32)

(ROOT
  (S ('' '')
    (ADVP
      (NP
        (NP (-LRB- -LRB-) (NNP 3) (-RRB- -RRB-))
        (ADVP (RB As)
          (NP (DT a) (JJ civil))))
      (RB right))
    (, ,)
    (VP (MD should)
      (ADVP
        (NP (JJ same) (NN sex))
        (RB marriage))
      (VP (VB be)
        (NP (DT a) (JJ protective) (NNS class\/status))))
    (. ?)))

npadvmod(right-8, 3-3)
advmod(3-3, As-5)
det(civil-7, a-6)
pobj(As-5, civil-7)
advmod(class\/status-17, right-8)
aux(class\/status-17, should-10)
amod(sex-12, same-11)
npadvmod(marriage-13, sex-12)
advmod(class\/status-17, marriage-13)
cop(class\/status-17, be-14)
det(class\/status-17, a-15)
amod(class\/status-17, protective-16)
root(ROOT-0, class\/status-17)

(ROOT
  (SQ
    (VP (VB be)
      (VP (VBN given)
        (NP (DT the) (JJ same) (NN status))
        (PP (IN as)
          (NP
            (NP (JJ other) (NNS catagories))
            (PP (IN of)
              (NP (JJ civil) (NNS rights)))))))
    (. ?)))

auxpass(given-2, be-1)
root(ROOT-0, given-2)
det(status-5, the-3)
amod(status-5, same-4)
dobj(given-2, status-5)
amod(catagories-8, other-7)
prep_as(given-2, catagories-8)
amod(rights-11, civil-10)
prep_of(catagories-8, rights-11)

(ROOT
  (FRAG
    (PP (JJ such) (IN as)
      (NP
        (NP (JJ civil) (NNS rights))
        (PP (IN for)
          (NP
            (NP (NNS minorities))
            (PRN (-LRB- -LRB-)
              (NP (NNP African) (NNPS Americans))
              (-RRB- -RRB-))))))
    (. ?)))

mwe(as-2, such-1)
root(ROOT-0, as-2)
amod(rights-4, civil-3)
pobj(as-2, rights-4)
prep_for(rights-4, minorities-6)
nn(Americans-9, African-8)
appos(minorities-6, Americans-9)

(ROOT
  (NP
    (NP (, ,) (JJ the) (NN aged))
    (PRN (-LRB- -LRB-)
      (NP (JJ senior) (NNS citizens))
      (-RRB- -RRB-))
    (. ?)))

amod(aged-3, the-2)
root(ROOT-0, aged-3)
amod(citizens-6, senior-5)
appos(aged-3, citizens-6)

(ROOT
  (FRAG (, ,)
    (NP (DT the) (NN Handicapp) (. ?))))

det(Handicapp-3, the-2)
root(ROOT-0, Handicapp-3)

(ROOT
  (SQ
    (VP (VB Sex\/Gender))
    (. ?)))

root(ROOT-0, Sex\/Gender-1)

(ROOT
  (PRN (, ,)
    (S
      (VP (VB discrimiantion)
        (VP (VBN based)
          (PP (IN on)
            (NP (NN sex\/gender)))
          (. ?))))))

root(ROOT-0, discrimiantion-2)
prep_based_on(discrimiantion-2, sex\/gender-5)

(ROOT
  (S (`` ``)
    (INTJ (UH Yes))
    (, ,)
    (NP (NNS homosexuals))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN extended)
          (NP
            (NP (DT the) (JJ same) (NNS rights)
              (CC and)
              (NNS protections))
            (VP (VBN granted)
              (PP (TO to)
                (NP (JJ other) (NNS minorities))))))))
    (. .)))

dep(extended-7, Yes-2)
nsubjpass(extended-7, homosexuals-4)
aux(extended-7, should-5)
auxpass(extended-7, be-6)
root(ROOT-0, extended-7)
det(rights-10, the-8)
amod(rights-10, same-9)
dobj(extended-7, rights-10)
dobj(extended-7, protections-12)
conj_and(rights-10, protections-12)
partmod(rights-10, granted-13)
amod(minorities-16, other-15)
prep_to(granted-13, minorities-16)

(ROOT
  (S ('' '')
    (S
      (LST (-LRB- -LRB-) (LS 4) (-RRB- -RRB-))
      (NP (CC And))
      (VP
        (ADVP (PRP we))
        (VBP need)
        (S
          (VP (TO to)
            (VP (VB ask)
              (NP
                (NP (DT the)
                  (ADJP (RBS most) (JJ important)))
                (PP (IN of)
                  (NP (NNS questions)))))))))
    (: ;)
    (S
      (ADVP (RB Does))
      (NP (DT a) (JJ young) (NN child\/toddler))
      (VP (VBD NEED)
        (NP
          (NP (DT a) (NN Mother))
          (CC AND)
          (NP
            (NP (DT a) (NN Father))
            (PP (IN in)
              (NP (PRP$ their) (NN life)))))))
    (. ?)))

dep(need-7, 4-3)
nsubj(need-7, And-5)
xsubj(ask-9, And-5)
advmod(need-7, we-6)
root(ROOT-0, need-7)
aux(ask-9, to-8)
xcomp(need-7, ask-9)
det(important-12, the-10)
advmod(important-12, most-11)
dobj(ask-9, important-12)
prep_of(important-12, questions-14)
advmod(NEED-20, Does-16)
det(child\/toddler-19, a-17)
amod(child\/toddler-19, young-18)
nsubj(NEED-20, child\/toddler-19)
parataxis(need-7, NEED-20)
det(Mother-22, a-21)
dobj(NEED-20, Mother-22)
det(Father-25, a-24)
dobj(NEED-20, Father-25)
conj_and(Mother-22, Father-25)
poss(life-28, their-27)
prep_in(Father-25, life-28)

(ROOT
  (S (`` ``)
    (S
      (S
        (VP (VBG Having)
          (NP
            (NP (DT a) (NN mother))
            (CC and)
            (NP (DT a) (NN father)))))
      (VP (MD may)
        (VP (VB be)
          (NP (DT the) (JJ ideal) (NN situation)))))
    (: ...)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (ADVP (RB always))
        (NP (DT the)
          (ADJP (RBS most) (JJ practical))
          (NN one))))
    (. .)))

csubj(situation-12, Having-2)
det(mother-4, a-3)
dobj(Having-2, mother-4)
det(father-7, a-6)
dobj(Having-2, father-7)
conj_and(mother-4, father-7)
aux(situation-12, may-8)
cop(situation-12, be-9)
det(situation-12, the-10)
amod(situation-12, ideal-11)
root(ROOT-0, situation-12)
nsubj(one-22, it-15)
cop(one-22, is-16)
neg(one-22, not-17)
advmod(one-22, always-18)
det(one-22, the-19)
advmod(practical-21, most-20)
amod(one-22, practical-21)
conj_but(situation-12, one-22)

(ROOT
  (SQ (VBZ Is) (RB n't)
    (NP (PRP it))
    (ADJP (JJR better)
      (PP (IN for)
        (NP (DT a) (NN child))))
    (S
      (VP (TO to)
        (VP (VB have)
          (NP (DT a) (JJ loving) (NN family))
          (, ,)
          (SBAR (RB even) (IN if)
            (S
              (NP (DT that) (NN family))
              (VP (VBZ is) (RB not)
                (NP (DT the) (`` ``) (NN norm) ('' ''))
                (, ,)
                (S (RB then)
                  (VP (TO to)
                    (VP (VB have)
                      (NP
                        (NP (DT no) (NN family))
                        (PP (IN at)
                          (NP (DT all)))))))))))))
    (. ?)))

cop(better-4, Is-1)
neg(better-4, n't-2)
nsubj(better-4, it-3)
root(ROOT-0, better-4)
det(child-7, a-6)
prep_for(better-4, child-7)
aux(have-9, to-8)
dep(better-4, have-9)
det(family-12, a-10)
amod(family-12, loving-11)
dobj(have-9, family-12)
advmod(norm-22, even-14)
dep(norm-22, if-15)
det(family-17, that-16)
nsubj(norm-22, family-17)
xsubj(have-27, family-17)
cop(norm-22, is-18)
neg(norm-22, not-19)
det(norm-22, the-20)
dep(have-9, norm-22)
advmod(have-27, then-25)
aux(have-27, to-26)
xcomp(norm-22, have-27)
det(family-29, no-28)
dobj(have-27, family-29)
prep_at(family-29, all-31)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADVP (RB also))
      (NP
        (NP (DT a) (NN vehicle))
        (PP (IN for)
          (NP
            (NP (JJ dynastic) (NN succession))
            (, ,)
            (NP (NN property) (NN transference))
            (, ,)
            (CC and)
            (NP (JJ political) (NN alliance))))))
    (. .)))

nsubj(vehicle-5, It-1)
cop(vehicle-5, was-2)
advmod(vehicle-5, also-3)
det(vehicle-5, a-4)
root(ROOT-0, vehicle-5)
amod(succession-8, dynastic-7)
prep_for(vehicle-5, succession-8)
nn(transference-11, property-10)
prep_for(vehicle-5, transference-11)
conj_and(succession-8, transference-11)
amod(alliance-15, political-14)
prep_for(vehicle-5, alliance-15)
conj_and(succession-8, alliance-15)

(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (CD 2))
    (-RRB- -RRB-)
    (NP (VBG Why))
    (VP (VBD was) (RB n't)
      (NP
        (NP (JJ same) (NN sex) (NN marriage))
        (ADVP
          (NP (DT an) (NN issue) (CD 200) (NNS years))
          (RB ago))))
    (. ?)))

nsubj(marriage-10, 2-3)
nsubj(marriage-10, Why-5)
cop(marriage-10, was-6)
neg(marriage-10, n't-7)
amod(marriage-10, same-8)
nn(marriage-10, sex-9)
root(ROOT-0, marriage-10)
det(years-14, an-11)
nn(years-14, issue-12)
num(years-14, 200-13)
npadvmod(ago-15, years-14)
advmod(marriage-10, ago-15)

(ROOT
  (FRAG
    (ADVP
      (NP (CD 100) (NNS years))
      (RB ago))
    (. ?)))

num(years-2, 100-1)
npadvmod(ago-3, years-2)
root(ROOT-0, ago-3)

(ROOT
  (FRAG
    (ADVP
      (NP (CD 50) (NNS years))
      (RB ago))
    (. ?)))

num(years-2, 50-1)
npadvmod(ago-3, years-2)
root(ROOT-0, ago-3)

(ROOT
  (FRAG
    (ADVP
      (NP (CD 20) (NNS years))
      (RB ago))
    (. ?)))

num(years-2, 20-1)
npadvmod(ago-3, years-2)
root(ROOT-0, ago-3)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ has)
        (NP (NN change))))
    (. ?)))

nsubj(has-2, What-1)
root(ROOT-0, has-2)
dobj(has-2, change-3)

(ROOT
  (S (`` ``)
    (PP (IN In)
      (NP (JJ Christian)
        (CC and)
        (JJ Muslim) (NN world)))
    (NP (EX there))
    (VP (VBD were)
      (PRN (-LRB- -LRB-)
        (CC and)
        (VP
          (ADVP (RB still))
          (VBP are)
          (NP
            (PRN (, ,)
              (PP (IN in)
                (NP (DT some))))
            (NNS places)))
        (-RRB- -RRB-))
      (NP
        (NP (NNS laws))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD would)
              (VP (VB have)
                (NP (NN lead))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN arrest))
                    (PP (IN of)
                      (NP (NN someone)))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBD was)
                          (VP (VBN known)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (NP (DT a) (JJ homosexual)))))))))))))))))
    (. .)))

amod(world-6, Christian-3)
conj_and(Christian-3, Muslim-5)
amod(world-6, Muslim-5)
prep_in(were-8, world-6)
expl(were-8, there-7)
root(ROOT-0, were-8)
dep(places-16, and-10)
advmod(places-16, still-11)
cop(places-16, are-12)
dep(places-16, in-14)
pobj(in-14, some-15)
dep(were-8, places-16)
nsubj(were-8, laws-18)
nsubj(have-21, laws-18)
aux(have-21, would-20)
rcmod(laws-18, have-21)
dobj(have-21, lead-22)
det(arrest-25, the-24)
prep_to(have-21, arrest-25)
nsubjpass(known-30, arrest-25)
prep_of(arrest-25, someone-27)
auxpass(known-30, was-29)
rcmod(arrest-25, known-30)
aux(homosexual-34, to-31)
cop(homosexual-34, be-32)
det(homosexual-34, a-33)
xcomp(known-30, homosexual-34)

(ROOT
  (S
    (ADVP (RB Thus))
    (NP (EX there))
    (VP (MD would)
      (VP (VB have)
        (VP (VBN been)
          (NP (DT no) (NN way)
            (S
              (VP (TO to)
                (VP
                  (ADVP (RB even))
                  (VB ask)
                  (NP (DT this) (NN question))
                  (SBAR (IN until) (IN after)
                    (S
                      (NP (DT those) (NNS laws))
                      (VP (VBD were)
                        (VP (VBN rolled)
                          (ADVP (RB back)))))))))))))
    (. .)))

advmod(way-7, Thus-1)
expl(way-7, there-2)
aux(way-7, would-3)
aux(way-7, have-4)
cop(way-7, been-5)
det(way-7, no-6)
root(ROOT-0, way-7)
aux(ask-10, to-8)
advmod(ask-10, even-9)
infmod(way-7, ask-10)
det(question-12, this-11)
dobj(ask-10, question-12)
mark(rolled-18, until-13)
dep(rolled-18, after-14)
det(laws-16, those-15)
nsubjpass(rolled-18, laws-16)
auxpass(rolled-18, were-17)
advcl(ask-10, rolled-18)
advmod(rolled-18, back-19)

