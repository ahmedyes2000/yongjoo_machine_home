(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP
          (VP (VBN been)
            (VP (VBG reading)
              (NP (DT the) (JJ opposite) (NN side))
              (PP (IN with)
                (NP
                  (NP (DT a) (NN lot))
                  (PP (IN of)
                    (NP (NN interest)))))))
          (CC and)
          (VP
            (ADVP (RB just)
              (PP (IN like)
                (NP (PRP I))))
            (VBN expected)))))
    (, ,)
    (NP (NNS people))
    (VP (VBP have)
      (VP (VBN brought)
        (PP (IN in)
          (NP
            (NP (DT a) (JJ whole) (NN array))
            (PP (IN of)
              (NP (`` ``)
                (NP (NNS issues))
                ('' '')
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBP have)
                      (NP (RB about) (JJ homosexuality)))))))))))
    (. .)))

nsubj(reading-4, I-1)
nsubj(expected-17, I-1)
aux(reading-4, 've-2)
aux(reading-4, been-3)
ccomp(brought-21, reading-4)
det(side-7, the-5)
amod(side-7, opposite-6)
dobj(reading-4, side-7)
det(lot-10, a-9)
prep_with(reading-4, lot-10)
prep_of(lot-10, interest-12)
advmod(expected-17, just-14)
prep_like(just-14, I-16)
conj_and(reading-4, expected-17)
ccomp(brought-21, expected-17)
nsubj(brought-21, people-19)
aux(brought-21, have-20)
root(ROOT-0, brought-21)
det(array-25, a-23)
amod(array-25, whole-24)
prep_in(brought-21, array-25)
prep_of(array-25, issues-28)
nsubj(have-31, they-30)
rcmod(issues-28, have-31)
advmod(homosexuality-33, about-32)
dobj(have-31, homosexuality-33)

(ROOT
  (S
    (ADVP (RB First))
    (NP (PRP I))
    (VP (VBP read)
      (PP (IN about)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (DT the) (NNS motives))
              (PP (IN of)
                (NP (DT the) (JJ gay) (NN person))))
            (VP (VBP are)
              (ADVP (RB selfishMy))
              (NP
                (NP (NN response))
                (: :)
                (SBAR
                  (WHNP (WP WHO))
                  (S
                    (VP (VBZ CARES))))))))))
    (. ?)))

advmod(read-3, First-1)
nsubj(read-3, I-2)
root(ROOT-0, read-3)
advmod(response-14, how-5)
det(motives-7, the-6)
nsubj(response-14, motives-7)
det(person-11, the-9)
amod(person-11, gay-10)
prep_of(motives-7, person-11)
cop(response-14, are-12)
advmod(response-14, selfishMy-13)
prepc_about(read-3, response-14)
nsubj(CARES-17, WHO-16)
rcmod(response-14, CARES-17)

(ROOT
  (SBARQ
    (WHNP
      (WHADJP (WRB How) (JJ many))
      (NNS times))
    (SQ (VBP have)
      (NP (PRP I))
      (VP (VBN heard)
        (NP (JJ straight) (NNS couples))
        (S
          (VP (VBG saying)
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (MD will)
                  (VP (VB have)
                    (NP (NNS children))
                    (SBAR (IN because)
                      (S
                        (NP (DT that))
                        (`` ``)
                        (VP (VBZ completes)
                          (NP (DT the) (NN family)))
                        ('' '')))))))))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD ca) (RB n't)
              (VP (VB wait)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP
                        (NP (JJ great) (NNS mums))
                        (CC or)
                        (NP (JJ great) (NNS dads))))))))))))
    (. .)))

advmod(many-2, How-1)
amod(times-3, many-2)
dep(heard-6, times-3)
aux(heard-6, have-4)
nsubj(heard-6, I-5)
root(ROOT-0, heard-6)
amod(couples-8, straight-7)
dobj(heard-6, couples-8)
xcomp(heard-6, saying-9)
complm(have-13, that-10)
nsubj(have-13, they-11)
aux(have-13, will-12)
ccomp(saying-9, have-13)
dobj(have-13, children-14)
mark(completes-18, because-15)
nsubj(completes-18, that-16)
advcl(have-13, completes-18)
det(family-20, the-19)
dobj(completes-18, family-20)
complm(wait-27, that-23)
nsubj(wait-27, they-24)
xsubj(mums-31, they-24)
aux(wait-27, ca-25)
neg(wait-27, n't-26)
ccomp(heard-6, wait-27)
aux(mums-31, to-28)
cop(mums-31, be-29)
amod(mums-31, great-30)
xcomp(wait-27, mums-31)
amod(dads-34, great-33)
xcomp(wait-27, dads-34)
conj_or(mums-31, dads-34)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (ADJP (JJ selfish) (RB too)
        (SBAR
          (S
            (VP (VBZ is) (RB n't)
              (NP (PRP it)))))))
    (. ?)))

nsubj(selfish-3, That-1)
cop(selfish-3, 's-2)
root(ROOT-0, selfish-3)
advmod(selfish-3, too-4)
cop(it-7, is-5)
neg(it-7, n't-6)
dep(selfish-3, it-7)

(ROOT
  (SQ (CC But)
    (VBZ is)
    (NP (PRP it))
    (ADJP (JJ wrong))
    (. ?)))

cc(wrong-4, But-1)
cop(wrong-4, is-2)
nsubj(wrong-4, it-3)
root(ROOT-0, wrong-4)

(ROOT
  (NP (CD Hell) (RB no) (. !)))

root(ROOT-0, Hell-1)
advmod(Hell-1, no-2)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN worried)
          (PP (IN of)
            (NP
              (NP (NN someone))
              (SBAR
                (S
                  (VP (VBD did) (RB n't)
                    (VP (VB have)
                      (NP
                        (NP (DT that) (NN streak))
                        (PP (IN of)
                          (NP
                            (NP (NNS selfishness))
                            (PP (IN in)
                              (NP (PRP them)))))))))))))))
    (. .)))

nsubjpass(worried-4, I-1)
aux(worried-4, would-2)
auxpass(worried-4, be-3)
root(ROOT-0, worried-4)
prep_of(worried-4, someone-6)
aux(have-9, did-7)
neg(have-9, n't-8)
rcmod(someone-6, have-9)
det(streak-11, that-10)
dobj(have-9, streak-11)
prep_of(streak-11, selfishness-13)
prep_in(selfishness-13, them-15)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ my) (NN opinion)))
    (, ,)
    (NP
      (NP (DT the) (NNS people))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP make)
            (NP (DT the) (JJS best) (NNS parents))))))
    (VP (VBP are)
      (NP
        (NP (DT the) (NNS ones))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD wanted)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP
                      (NP (NNS parents))
                      (PP (IN in)
                        (NP (DT the) (JJ first) (NN place))))))))))))
    (. .)))

poss(opinion-3, my-2)
prep_in(ones-14, opinion-3)
det(people-6, the-5)
nsubj(make-8, people-6)
nsubj(ones-14, people-6)
rcmod(people-6, make-8)
det(parents-11, the-9)
amod(parents-11, best-10)
dobj(make-8, parents-11)
cop(ones-14, are-12)
det(ones-14, the-13)
root(ROOT-0, ones-14)
nsubj(wanted-16, ones-14)
rcmod(ones-14, wanted-16)
aux(parents-19, to-17)
cop(parents-19, be-18)
xcomp(wanted-16, parents-19)
det(place-23, the-21)
amod(place-23, first-22)
prep_in(parents-19, place-23)

(ROOT
  (S
    (NP
      (NP (RB Not) (RB just) (JJ procreate))
      (PRN (, ,)
        (CC but)
        (ADJP (VBG BE))))
    (VP (VBZ PARENTS)
      (ADVP (RB afterward)))
    (. .)))

neg(procreate-3, Not-1)
advmod(procreate-3, just-2)
nsubj(PARENTS-7, procreate-3)
dep(BE-6, but-5)
dep(procreate-3, BE-6)
root(ROOT-0, PARENTS-7)
advmod(PARENTS-7, afterward-8)

(ROOT
  (S
    (S
      (ADVP (RB Here))
      (NP (PRP we))
      (VP (VBP have)
        (NP
          (NP (NNS people))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP are)
                (VP (VBG begging)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (NP (NNS parents))))))))))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP 're)
        (VP (VBG telling)
          (NP (PRP them))
          (SBAR (`` ``)
            (S
              (NP (PRP you))
              (VP (MD ca) (RB n't)))))))
    (. !)))

advmod(have-3, Here-1)
nsubj(have-3, we-2)
root(ROOT-0, have-3)
dobj(have-3, people-4)
nsubj(begging-7, people-4)
aux(begging-7, are-6)
rcmod(people-4, begging-7)
aux(parents-10, to-8)
cop(parents-10, be-9)
xcomp(begging-7, parents-10)
nsubj(telling-14, we-12)
aux(telling-14, 're-13)
conj_and(have-3, telling-14)
dobj(telling-14, them-15)
nsubj(ca-18, you-17)
dep(telling-14, ca-18)
neg(ca-18, n't-19)

(ROOT
  (S
    (NP (PRP we))
    (VP (MD 'd)
      (VP (RB rather)
        (VP (VB leave)
          (NP (DT the) (NNS kids))
          (PP (IN in)
            (NP (DT the) (NN orphanage))))
        (IN than)
        (VP (VB give)
          (NP (PRP them))
          (PP (TO to)
            (NP (PRP you))))))
    (. !)))

nsubj(leave-4, we-1)
aux(leave-4, 'd-2)
advmod(leave-4, rather-3)
root(ROOT-0, leave-4)
det(kids-6, the-5)
dobj(leave-4, kids-6)
det(orphanage-9, the-8)
prep_in(leave-4, orphanage-9)
dep(leave-4, than-10)
dep(leave-4, give-11)
dobj(give-11, them-12)
prep_to(give-11, you-14)

(ROOT
  (SQ
    (SBAR (`` ``)
      (S (RB Then)
        (NP (PRP it))
        (VP (VBZ 's)
          (PP (IN about)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (ADJP (JJ unnatural)
                    (PP (IN for)
                      (NP (PRP them))))
                  (S
                    (VP (TO to)
                      (VP (VB become)
                        (NP (NNS parents))
                        (SBAR (IN because)
                          (S
                            (PP (IN by)
                              (NP (NN definition)))
                            (NP (PRP they))
                            (VP (MD would)
                              (VP (VB be)
                                (VP (VBN required)
                                  (S
                                    (VP (TO to)
                                      (VP (VB do)
                                        (NP
                                          (NP (NN something))
                                          (SBAR
                                            (WHNP (WDT that))
                                            (S
                                              (VP (VBZ is)
                                                (ADJP (JJ unnatural)))))))))))))))))
                  (SBAR (IN for)
                    (S
                      (NP (PRP them))
                      (ADJP (JJ Right))))
                  (, ,)
                  (ADVP (RB so)))))))))
    (, ,) (MD should)
    (NP (PRP we))
    (VP (VB exclude)
      (NP (DT all) (JJ infertile) (NNS individuals))
      (PP (IN from)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB adopt)))))))
    (. ?)))

advmod('s-4, Then-2)
nsubj('s-4, it-3)
dep(exclude-36, 's-4)
advmod(unnatural-9, how-6)
nsubj(unnatural-9, it-7)
xsubj(parents-14, it-7)
cop(unnatural-9, is-8)
prepc_about('s-4, unnatural-9)
prep_for(unnatural-9, them-11)
aux(parents-14, to-12)
cop(parents-14, become-13)
xcomp(unnatural-9, parents-14)
mark(required-21, because-15)
agent(required-21, definition-17)
nsubjpass(required-21, they-18)
aux(required-21, would-19)
auxpass(required-21, be-20)
advcl(parents-14, required-21)
aux(do-23, to-22)
xcomp(required-21, do-23)
dobj(do-23, something-24)
nsubj(unnatural-27, something-24)
cop(unnatural-27, is-26)
rcmod(something-24, unnatural-27)
mark(Right-30, for-28)
dep(Right-30, them-29)
advcl(unnatural-9, Right-30)
advmod(unnatural-9, so-32)
aux(exclude-36, should-34)
nsubj(exclude-36, we-35)
root(ROOT-0, exclude-36)
det(individuals-39, all-37)
amod(individuals-39, infertile-38)
dobj(exclude-36, individuals-39)
det(right-42, the-41)
prep_from(exclude-36, right-42)
aux(adopt-44, to-43)
infmod(right-42, adopt-44)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (DT the) (JJ above) (NN argument))
        (ADVP (RB basically))
        (VP (VBZ implies)
          (NP (DT that) (NN inability)
            (S
              (VP (TO to)
                (VP (VB conceive\/procreate))))))))
    (VP (VBZ equals)
      (NP (NN inability))
      (S
        (VP (TO to)
          (VP (VB perform)
            (PP (IN as)
              (NP (DT a) (NN parent)))
            (, ,)
            (SBAR (IN because)
              (S
                (NP (NN nature))
                (VP (VBD did) (RB n't)
                  (VP (VB want)
                    (S
                      (NP (PRP you))
                      (VP (TO to)
                        (VP (VB become)
                          (NP (CD one))
                          (PP (IN in)
                            (NP (DT the) (JJ first) (NN place))))))))))))))
    (. .)))

mark(implies-6, Because-1)
det(argument-4, the-2)
amod(argument-4, above-3)
nsubj(implies-6, argument-4)
advmod(implies-6, basically-5)
csubj(equals-11, implies-6)
det(inability-8, that-7)
dobj(implies-6, inability-8)
aux(conceive\/procreate-10, to-9)
infmod(inability-8, conceive\/procreate-10)
root(ROOT-0, equals-11)
dobj(equals-11, inability-12)
aux(perform-14, to-13)
xcomp(equals-11, perform-14)
det(parent-17, a-16)
prep_as(perform-14, parent-17)
mark(want-23, because-19)
nsubj(want-23, nature-20)
aux(want-23, did-21)
neg(want-23, n't-22)
advcl(perform-14, want-23)
nsubj(one-27, you-24)
aux(one-27, to-25)
cop(one-27, become-26)
xcomp(want-23, one-27)
det(place-31, the-29)
amod(place-31, first-30)
prep_in(one-27, place-31)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP see)
      (NP
        (NP (DT an) (JJ old) (NN lady))
        (VP (VBG crossing)
          (NP (DT the) (NN street)))))
    (. .)))

nsubj(see-2, I-1)
root(ROOT-0, see-2)
det(lady-5, an-3)
amod(lady-5, old-4)
dobj(see-2, lady-5)
partmod(lady-5, crossing-6)
det(street-8, the-7)
dobj(crossing-6, street-8)

(ROOT
  (SQ (VBZ Is) (RB n't)
    (NP (DT that))
    (ADJP (JJ ridiculous))
    (. ?)))

cop(ridiculous-4, Is-1)
neg(ridiculous-4, n't-2)
nsubj(ridiculous-4, that-3)
root(ROOT-0, ridiculous-4)

(ROOT
  (S
    (NP
      (NP (DT The) (NN fact))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP have)
            (NP
              (NP (NNS children))
              (PP (IN in)
                (NP (JJ foster) (NN care))))))))
    (VP (VBZ proves)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN ability)
            (S
              (VP (TO to)
                (VP (VB conceive\/procreate)))))
          (VP (VBZ does) (RB not)
            (VP (VB equal)
              (NP (DT the) (NN ability)
                (S
                  (VP (TO to)
                    (VP (VB become)
                      (NP (DT a) (NN parent)))))))))))
    (. .)))

det(fact-2, The-1)
nsubj(proves-10, fact-2)
complm(have-5, that-3)
nsubj(have-5, we-4)
dep(fact-2, have-5)
dobj(have-5, children-6)
amod(care-9, foster-8)
prep_in(children-6, care-9)
root(ROOT-0, proves-10)
complm(equal-18, that-11)
det(ability-13, the-12)
nsubj(equal-18, ability-13)
aux(conceive\/procreate-15, to-14)
infmod(ability-13, conceive\/procreate-15)
aux(equal-18, does-16)
neg(equal-18, not-17)
ccomp(proves-10, equal-18)
det(ability-20, the-19)
dobj(equal-18, ability-20)
aux(parent-24, to-21)
cop(parent-24, become-22)
det(parent-24, a-23)
infmod(ability-20, parent-24)

(ROOT
  (S (IN So)
    (NP (DT the) (CD two))
    (VP (VBP are)
      (ADVP (RB clearly))
      (RB not)
      (ADJP (RB cross) (VBN linked)))
    (. .)))

dep(linked-8, So-1)
det(two-3, the-2)
nsubjpass(linked-8, two-3)
auxpass(linked-8, are-4)
advmod(linked-8, clearly-5)
neg(linked-8, not-6)
advmod(linked-8, cross-7)
root(ROOT-0, linked-8)

(ROOT
  (S (RB Then)
    (NP (PRP it))
    (VP (VBZ 's)
      (PP (IN about)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (NP
                (NP (DT no) (NN one) (POS 's))
                (NN right)
                (S
                  (VP (TO to)
                    (VP (VB adopt)
                      (SBAR (IN because)
                        (S
                          (NP
                            (NP (DT the) (JJ only) (NN person))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBZ has)
                                  (NP
                                    (NP (NN authority))
                                    (PP (IN over)
                                      (NP (DT a) (NN child))))))))
                          (VP (VBZ is)
                            (NP
                              (NP (DT the) (JJ biological) (NN parent))
                              (SBAR
                                (S
                                  (S
                                    (SBAR (RB only)
                                      (S
                                        (NP (PRP they))
                                        (VP (MD can)
                                          (VP (`` ``) (VB appoint) ('' '')
                                            (S
                                              (NP (NN someone))
                                              (VP (TO to)
                                                (VP (VB look)
                                                  (SBAR (IN after)
                                                    (S
                                                      (NP (PRP$ their) (NN childSomeone))
                                                      (ADVP (RB actually))
                                                      (VP (VBD used)
                                                        (NP (DT the) (NN word) (`` ``) (NN property) ('' ''))))))))))))
                                    (, ,)
                                    (NP (DT the) (NN child))
                                    (VP (VBZ is)
                                      (NP
                                        (NP (DT the) (NN property))
                                        (PP (IN of)
                                          (NP (DT the) (JJ biological) (NNS parents))))))
                                  (CC and)
                                  (S
                                    (NP (DT no) (NN institution))
                                    (VP (MD should)
                                      (ADVP (RB ever))
                                      (VP (VB have)
                                        (S
                                          (NP (DT the) (NN right))
                                          (VP
                                            (VP (VB bypass)
                                              (NP (PRP them)))
                                            (CC and)
                                            (VP (VB give)
                                              (NP (DT the) (NN child))
                                              (PP (TO to)
                                                (NP (NN someone) (RB else))))))))))))))))))))))))
    (. .)))

advmod('s-3, Then-1)
nsubj('s-3, it-2)
root(ROOT-0, 's-3)
advmod(right-11, how-5)
nsubj(right-11, it-6)
cop(right-11, is-7)
det(one-9, no-8)
poss(right-11, one-9)
prepc_about('s-3, right-11)
aux(adopt-13, to-12)
infmod(right-11, adopt-13)
mark(parent-27, because-14)
det(person-17, the-15)
amod(person-17, only-16)
nsubj(has-19, person-17)
nsubj(parent-27, person-17)
rcmod(person-17, has-19)
dobj(has-19, authority-20)
det(child-23, a-22)
prep_over(authority-20, child-23)
cop(parent-27, is-24)
det(parent-27, the-25)
amod(parent-27, biological-26)
advcl(adopt-13, parent-27)
advmod(appoint-32, only-28)
nsubj(appoint-32, they-29)
aux(appoint-32, can-30)
dep(property-52, appoint-32)
nsubj(look-36, someone-34)
aux(look-36, to-35)
xcomp(appoint-32, look-36)
mark(used-41, after-37)
poss(childSomeone-39, their-38)
nsubj(used-41, childSomeone-39)
advmod(used-41, actually-40)
advcl(look-36, used-41)
det(property-45, the-42)
nn(property-45, word-43)
dobj(used-41, property-45)
det(child-49, the-48)
nsubj(property-52, child-49)
cop(property-52, is-50)
det(property-52, the-51)
rcmod(parent-27, property-52)
det(parents-56, the-54)
amod(parents-56, biological-55)
prep_of(property-52, parents-56)
det(institution-59, no-58)
nsubj(have-62, institution-59)
aux(have-62, should-60)
advmod(have-62, ever-61)
rcmod(parent-27, have-62)
conj_and(property-52, have-62)
det(right-64, the-63)
nsubj(bypass-65, right-64)
nsubj(give-68, right-64)
ccomp(have-62, bypass-65)
dobj(bypass-65, them-66)
ccomp(have-62, give-68)
conj_and(bypass-65, give-68)
det(child-70, the-69)
dobj(give-68, child-70)
prep_to(give-68, someone-72)
advmod(someone-72, else-73)

(ROOT
  (S
    (S
      (PP (IN Since)
        (SBAR
          (WHADVP (WRB when))
          (S
            (VP (VBP are)
              (ADJP (JJ human)))))))
    (VP (VBZ beings)
      (NP (`` ``) (NN property) ('' '')))
    (. ?)))

csubj(beings-5, Since-1)
advmod(human-4, when-2)
cop(human-4, are-3)
pcomp(Since-1, human-4)
root(ROOT-0, beings-5)
dobj(beings-5, property-7)

(ROOT
  (SINV
    (S
      (PP (IN As)
        (NP (DT a) (NN parent)))
      (, ,) (RB all)
      (NP (PRP you))
      (VP (VBP have)))
    (, ,)
    (VP (VBZ is))
    (NP (DT the) (NN responsibility)
      (S
        (VP (TO to)
          (VP
            (VP (VB raise)
              (NP (DT the) (NN child)))
            (CC and)
            (VP (VB provide)
              (PP (IN for)
                (NP (PRP it))))))))
    (. .)))

det(parent-3, a-2)
prep_as(have-7, parent-3)
advmod(have-7, all-5)
nsubj(have-7, you-6)
ccomp(is-9, have-7)
root(ROOT-0, is-9)
det(responsibility-11, the-10)
nsubj(is-9, responsibility-11)
aux(raise-13, to-12)
infmod(responsibility-11, raise-13)
det(child-15, the-14)
dobj(raise-13, child-15)
infmod(responsibility-11, provide-17)
conj_and(raise-13, provide-17)
prep_for(provide-17, it-19)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP have))))))
    (. .)))

nsubj(all-3, That-1)
cop(all-3, 's-2)
root(ROOT-0, all-3)
dobj(have-5, all-3)
nsubj(have-5, you-4)
rcmod(all-3, have-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB posses)
        (NP (DT a) (NN child))))
    (. .)))

nsubj(posses-4, You-1)
aux(posses-4, do-2)
neg(posses-4, n't-3)
root(ROOT-0, posses-4)
det(child-6, a-5)
dobj(posses-4, child-6)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ has)
      (NP
        (NP
          (NP (NN possession))
          (PP (IN of)
            (NP (DT another) (NN human) (VBG being))))
        (, ,)
        (ADJP (RB however) (JJ young))))
    (. .)))

det(one-2, No-1)
nsubj(has-3, one-2)
root(ROOT-0, has-3)
dobj(has-3, possession-4)
det(human-7, another-6)
prep_of(possession-4, human-7)
amod(human-7, being-8)
advmod(young-11, however-10)
amod(possession-4, young-11)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP I))
    (VP (VBP know)
      (PP (IN for)
        (NP (DT a) (NN fact)))
      (SBAR (IN that)
        (S
          (NP (NN adoption) (NNS agencies))
          (ADVP (RB always))
          (VP (VBP look)
            (PP (IN for)
              (NP
                (NP (NNS people))
                (PP (IN in)
                  (NP
                    (NP (DT the)
                      (ADJP (JJ immediate)
                        (CC or)
                        (JJR larger))
                      (NN family))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD would)
                          (VP (VB foster)
                            (NP (DT the) (NN child))))))))))))))
    (. .)))

advmod(know-4, Now-1)
nsubj(know-4, I-3)
root(ROOT-0, know-4)
det(fact-7, a-6)
prep_for(know-4, fact-7)
complm(look-12, that-8)
nn(agencies-10, adoption-9)
nsubj(look-12, agencies-10)
advmod(look-12, always-11)
ccomp(know-4, look-12)
prep_for(look-12, people-14)
det(family-20, the-16)
amod(family-20, immediate-17)
conj_or(immediate-17, larger-19)
amod(family-20, larger-19)
prep_in(people-14, family-20)
nsubj(foster-23, family-20)
aux(foster-23, would-22)
rcmod(family-20, foster-23)
det(child-25, the-24)
dobj(foster-23, child-25)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB only))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP they))
          (VP (VBP have)
            (VP (VBN exhausted)
              (NP (PDT all) (DT those) (NNS possibilities))
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN child))
                  (VP (VBZ is)
                    (VP (VBN put)
                      (PRT (RP up))
                      (PP (IN for)
                        (NP (NN adoption))))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod('s-2, only-3)
advmod(exhausted-7, when-4)
nsubj(exhausted-7, they-5)
aux(exhausted-7, have-6)
advcl('s-2, exhausted-7)
predet(possibilities-10, all-8)
det(possibilities-10, those-9)
dobj(exhausted-7, possibilities-10)
complm(put-15, that-11)
det(child-13, the-12)
nsubjpass(put-15, child-13)
auxpass(put-15, is-14)
ccomp(exhausted-7, put-15)
prt(put-15, up-16)
prep_for(put-15, adoption-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP help)
      (NP (PRP$ her) (NN cross))
      (PRT (RP over)))
    (. .)))

nsubj(help-2, I-1)
root(ROOT-0, help-2)
poss(cross-4, her-3)
dobj(help-2, cross-4)
prt(help-2, over-5)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP
      (NP (DT no) (NN one))
      (PP (IN in)
        (NP (DT the) (NN family))))
    (VP (VBZ has)
      (VP (VBN offered)
        (S
          (VP (TO to)
            (VP (VB take)
              (PRT (RP over))
              (NP (DT the) (NN responsibility)))))))
    (. !)))

amod(words-3, other-2)
prep_in(offered-11, words-3)
det(one-6, no-5)
nsubj(offered-11, one-6)
xsubj(take-13, one-6)
det(family-9, the-8)
prep_in(one-6, family-9)
aux(offered-11, has-10)
root(ROOT-0, offered-11)
aux(take-13, to-12)
xcomp(offered-11, take-13)
prt(take-13, over-14)
det(responsibility-16, the-15)
dobj(take-13, responsibility-16)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB then))
      (PP (IN in)
        (NP
          (NP (DT the) (NNS hands))
          (PP (IN of)
            (NP (DT the) (NN agency)
              (S
                (VP (TO to)
                  (VP (VB find)
                    (NP (JJ suitable) (NNS parents))
                    (PP (IN from)
                      (NP (DT the) (JJ general) (NN public)))))))))))
    (. .)))

dep(is-3, So-1)
nsubj(is-3, it-2)
root(ROOT-0, is-3)
advmod(is-3, then-4)
det(hands-7, the-6)
prep_in(is-3, hands-7)
det(agency-10, the-9)
prep_of(hands-7, agency-10)
aux(find-12, to-11)
infmod(agency-10, find-12)
amod(parents-14, suitable-13)
dobj(find-12, parents-14)
det(public-18, the-16)
amod(public-18, general-17)
prep_from(find-12, public-18)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (POS 's))
          (VP (VB be)
            (ADJP (JJ realistic))))))
    (, ,)
    (NP (DT the) (NN family))
    (VP
      (VP (VBZ has)
        (VP (VBN absolved)
          (NP (PRP itself))))
      (, ,)
      (CC or)
      (VP (VBZ is) (RB not)
        (ADJP (JJ existent)))
      (, ,)
      (CC or)
      (VP (VBZ is)
        (ADJP (RB mentally) (JJ incapable))))
    (. .)))

ccomp(absolved-9, Let-1)
nsubj(realistic-4, 's-2)
cop(realistic-4, be-3)
ccomp(Let-1, realistic-4)
det(family-7, the-6)
nsubj(absolved-9, family-7)
nsubj(existent-15, family-7)
nsubj(incapable-20, family-7)
aux(absolved-9, has-8)
root(ROOT-0, absolved-9)
dobj(absolved-9, itself-10)
cop(existent-15, is-13)
neg(existent-15, not-14)
conj_or(absolved-9, existent-15)
cop(incapable-20, is-18)
advmod(incapable-20, mentally-19)
conj_or(absolved-9, incapable-20)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG saying)
        (SBAR
          (S
            (NP (NN everybody) (RB else))
            (ADVP (RB then))
            (VP (VBZ has)
              (NP (DT the) (NN right)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (PRP$ their) (NN parent)))))))))))
    (. .)))

advmod(saying-6, Now-1)
nsubj(saying-6, I-3)
aux(saying-6, 'm-4)
neg(saying-6, not-5)
root(ROOT-0, saying-6)
nsubj(has-10, everybody-7)
advmod(everybody-7, else-8)
advmod(has-10, then-9)
ccomp(saying-6, has-10)
det(right-12, the-11)
dobj(has-10, right-12)
aux(parent-16, to-13)
cop(parent-16, be-14)
poss(parent-16, their-15)
infmod(right-12, parent-16)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP do)
            (VP (VB have)
              (NP (DT the) (NN right)
                (S
                  (VP (TO to)
                    (ADVP (IN at) (JJS least))
                    (VP (VB apply)
                      (PP (IN for)
                        (NP (DT the) (NN role)))
                      (, ,)
                      (SBAR (IN whether)
                        (FRAG
                          (ADJP (JJ gay)
                            (CC or)
                            (JJ straight)))))))))))))
    (. .)))

cc(think-3, But-1)
nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(have-6, they-4)
aux(have-6, do-5)
ccomp(think-3, have-6)
det(right-8, the-7)
dobj(have-6, right-8)
aux(apply-12, to-9)
advmod(apply-12, at-10)
pobj(at-10, least-11)
infmod(right-8, apply-12)
det(role-15, the-14)
prep_for(apply-12, role-15)
complm(gay-18, whether-17)
dep(apply-12, gay-18)
dep(apply-12, straight-20)
conj_or(gay-18, straight-20)

(ROOT
  (S (CC But)
    (NP (DT the) (NN child))
    (VP (VBZ is)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ bullied)))))))
    (. !)))

cc(going-5, But-1)
det(child-3, the-2)
nsubj(going-5, child-3)
xsubj(bullied-8, child-3)
aux(going-5, is-4)
root(ROOT-0, going-5)
aux(bullied-8, to-6)
cop(bullied-8, be-7)
xcomp(going-5, bullied-8)

(ROOT
  (SQ
    (ADVP (RB Well))
    (, ,) (VBZ is)
    (NP (DT that))
    (ADVP (RB really)
      (NP (DT an) (NN argument)))
    (. ?)))

advmod(is-3, Well-1)
root(ROOT-0, is-3)
nsubj(is-3, that-4)
advmod(is-3, really-5)
det(argument-7, an-6)
pobj(really-5, argument-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN kid))
        (VP (VBZ is)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB be))))))))
    (VP (VBD bullied)
      (SBAR (IN that)
        (S
          (VP (VBZ 's)
            (SBAR (IN because)
              (S
                (S
                  (NP
                    (NP (DT the) (NNS parents))
                    (PP (IN of)
                      (NP (DT the) (JJ other) (NNS children))))
                  (VP (VBP are)
                    (VP (VBN bigoted))))
                (CC and)
                (S
                  (NP (PRP they))
                  (VP (VBP have)
                    (VP (VBN instilled)
                      (NP
                        (NP (DT that) (NN bigotry))
                        (PP (IN on)
                          (NP (PRP$ their) (JJ bully-kid)))))))))))))
    (. .)))

mark(going-5, If-1)
det(kid-3, the-2)
nsubj(going-5, kid-3)
xsubj(be-7, kid-3)
aux(going-5, is-4)
csubj(bullied-8, going-5)
aux(be-7, to-6)
xcomp(going-5, be-7)
root(ROOT-0, bullied-8)
complm('s-10, that-9)
ccomp(bullied-8, 's-10)
mark(bigoted-19, because-11)
det(parents-13, the-12)
nsubjpass(bigoted-19, parents-13)
det(children-17, the-15)
amod(children-17, other-16)
prep_of(parents-13, children-17)
auxpass(bigoted-19, are-18)
advcl('s-10, bigoted-19)
nsubj(instilled-23, they-21)
aux(instilled-23, have-22)
advcl('s-10, instilled-23)
conj_and(bigoted-19, instilled-23)
det(bigotry-25, that-24)
dobj(instilled-23, bigotry-25)
poss(bully-kid-28, their-27)
prep_on(bigotry-25, bully-kid-28)

(ROOT
  (S
    (NP (NNP Kids))
    (VP (VBP are)
      (VP (VBG bullied)
        (NP
          (NP (JJ everyday))
          (PP (IN for)
            (S
              (VP (VBG being)
                (ADJP (JJ black) (, ,) (JJ Muslim) (, ,) (JJ Asian) (, ,) (JJ tall) (, ,)
                  (ADVP (RB short))
                  (, ,) (JJ ginger))))))
        (NP (FW etc) (FW etc.))))
    (. .)))

nsubj(bullied-3, Kids-1)
aux(bullied-3, are-2)
root(ROOT-0, bullied-3)
iobj(bullied-3, everyday-4)
cop(ginger-17, being-6)
amod(ginger-17, black-7)
amod(ginger-17, Muslim-9)
amod(ginger-17, Asian-11)
amod(ginger-17, tall-13)
advmod(ginger-17, short-15)
prepc_for(everyday-4, ginger-17)
nn(etc.-19, etc-18)
dobj(bullied-3, etc.-19)

(ROOT
  (SQ (NNP Does)
    (NP (DT that))
    (VP (VB mean)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD should)
            (VP (VB take)
              (NP (PRP them))
              (PRT (RP away))
              (PP (IN from)
                (NP (PRP$ their) (JJ black) (, ,) (JJ Muslim)
                  (CC or)
                  (NN ginger) (NNS parents))))))))
    (. ?)))

dep(mean-3, Does-1)
nsubj(mean-3, that-2)
root(ROOT-0, mean-3)
nsubj(take-6, we-4)
aux(take-6, should-5)
ccomp(mean-3, take-6)
dobj(take-6, them-7)
poss(parents-16, their-10)
amod(parents-16, black-11)
conj_or(black-11, Muslim-13)
amod(parents-16, Muslim-13)
conj_or(black-11, ginger-15)
amod(parents-16, ginger-15)
prep_away_from(take-6, parents-16)

(ROOT
  (S
    (NP (DT The) (NN reality))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (DT these) (NNS kids))
          (VP (VBP are)
            (VP (VBG spending)
              (NP (PRP$ their) (NN life))
              (PP (IN in)
                (NP (DT an) (NN orphanage))))))))
    (. .)))

det(reality-2, The-1)
nsubj(is-3, reality-2)
root(ROOT-0, is-3)
det(kids-6, these-5)
nsubj(spending-8, kids-6)
aux(spending-8, are-7)
ccomp(is-3, spending-8)
poss(life-10, their-9)
dobj(spending-8, life-10)
det(orphanage-13, an-12)
prep_in(spending-8, orphanage-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (ADJP (JJ funny))
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (NNS people))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP are)
                    (ADJP (RB otherwise) (JJ unwilling)
                      (S
                        (VP (TO to)
                          (VP (VB adopt)
                            (NP (PRP them))))))))))
            (, ,)
            (VP (VBP think)
              (SBAR (IN that)
                (S
                  (NP (PRP they))
                  (VP (VBP have)
                    (NP
                      (NP (DT the) (NN right))
                      (PP (TO to)
                        (NP (JJ obstruct) (NNS others)))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBP do)))))))))))))
    (. .)))

nsubj(find-2, I-1)
root(ROOT-0, find-2)
nsubj(think-15, it-3)
dep(think-15, funny-4)
advmod(think-15, how-5)
nsubj(unwilling-10, people-6)
nsubj(think-15, people-6)
cop(unwilling-10, are-8)
advmod(unwilling-10, otherwise-9)
rcmod(people-6, unwilling-10)
aux(adopt-12, to-11)
xcomp(unwilling-10, adopt-12)
dobj(adopt-12, them-13)
xcomp(find-2, think-15)
complm(have-18, that-16)
nsubj(have-18, they-17)
ccomp(think-15, have-18)
det(right-20, the-19)
dobj(have-18, right-20)
nsubj(do-25, right-20)
amod(others-23, obstruct-22)
prep_to(right-20, others-23)
rcmod(right-20, do-25)

(ROOT
  (SQ (VBD Did)
    (NP (PRP I))
    (VP (VB do)
      (NP (PRP it))
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP
            (VP
              (ADVP (RB truly))
              (VBD cared)
              (PP (IN for)
                (NP (PRP her))))
            (CC or)
            (VP (VBD did)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP do)
                    (S
                      (VP (VB cause)
                        (SBAR
                          (S
                            (NP (PRP I))
                            (VP (VBD wanted)
                              (S
                                (VP (TO to)
                                  (VP (VB feel)
                                    (ADJP (JJ good))
                                    (PP (IN about)
                                      (NP (PRP myself)))))))))))))))))))
    (. ?)))

aux(do-3, Did-1)
nsubj(do-3, I-2)
root(ROOT-0, do-3)
dobj(do-3, it-4)
mark(cared-8, because-5)
nsubj(cared-8, I-6)
nsubj(did-12, I-6)
advmod(cared-8, truly-7)
advcl(do-3, cared-8)
prep_for(cared-8, her-10)
advcl(do-3, did-12)
conj_or(cared-8, did-12)
nsubj(do-14, I-13)
ccomp(did-12, do-14)
ccomp(do-14, cause-15)
nsubj(wanted-17, I-16)
xsubj(feel-19, I-16)
ccomp(cause-15, wanted-17)
aux(feel-19, to-18)
xcomp(wanted-17, feel-19)
acomp(feel-19, good-20)
prep_about(feel-19, myself-22)

(ROOT
  (S (CC And)
    (NP (PRP they))
    (VP (VB justify)
      (NP (PRP it))
      (PP (IN with)
        (NP
          (NP (DT an) (NN array))
          (PP (IN of)
            (NP (JJ bigoted) (NN crap))))))
    (. .)))

cc(justify-3, And-1)
nsubj(justify-3, they-2)
root(ROOT-0, justify-3)
dobj(justify-3, it-4)
det(array-7, an-6)
prep_with(justify-3, array-7)
amod(crap-10, bigoted-9)
prep_of(array-7, crap-10)

(ROOT
  (S (CC And)
    (NP (PDT all) (DT this) (NN time))
    (, ,)
    (NP (DT those) (NNS kids))
    (VP (VBP remain)
      (PP (IN in)
        (NP
          (NP (DT the) (NN orphanage))
          (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (MD could)
                (VP (VB be)
                  (PP (IN in)
                    (NP
                      (NP
                        (NP (DT the) (NNS hands))
                        (PP (IN of)
                          (NP
                            (ADJP (RB very) (JJ loving))
                            (, ,) (JJ very) (NN caring))))
                      (, ,)
                      (NP
                        (ADJP (RB very) (JJ responsible))
                        (NNS people))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (MD could)
                            (VP
                              (VP (VB give)
                                (NP (PRP them))
                                (NP
                                  (NP (DT a)
                                    (ADJP (RB much) (JJR better))
                                    (NN life))
                                  (, ,)
                                  (NP (DT a)
                                    (ADJP (RB much) (JJR better))
                                    (NN education))))
                              (CC and)
                              (VP
                                (ADJP (RB much) (JJR more))
                                (PP (TO to)
                                  (NP (NN experience)))))))))))))))))
    (. .)))

cc(remain-8, And-1)
predet(time-4, all-2)
det(time-4, this-3)
nsubj(remain-8, time-4)
det(kids-7, those-6)
nsubj(remain-8, kids-7)
root(ROOT-0, remain-8)
det(orphanage-11, the-10)
prep_in(remain-8, orphanage-11)
tmod(be-16, orphanage-11)
advmod(be-16, when-13)
nsubj(be-16, they-14)
aux(be-16, could-15)
dep(orphanage-11, be-16)
det(hands-19, the-18)
prep_in(be-16, hands-19)
advmod(loving-22, very-21)
amod(caring-25, loving-22)
amod(caring-25, very-24)
prep_of(hands-19, caring-25)
advmod(responsible-28, very-27)
amod(people-29, responsible-28)
appos(hands-19, people-29)
nsubj(give-32, people-29)
nsubj(more-45, people-29)
aux(give-32, could-31)
rcmod(hands-19, give-32)
rcmod(people-29, give-32)
iobj(give-32, them-33)
det(life-37, a-34)
advmod(better-36, much-35)
amod(life-37, better-36)
dobj(give-32, life-37)
det(education-42, a-39)
advmod(better-41, much-40)
amod(education-42, better-41)
appos(life-37, education-42)
advmod(more-45, much-44)
rcmod(hands-19, more-45)
rcmod(people-29, more-45)
conj_and(give-32, more-45)
prep_to(more-45, experience-47)

(ROOT
  (SQ (NNP Does)
    (NP (PRP it))
    (VP (VB matter))
    (. ?)))

dep(matter-3, Does-1)
nsubj(matter-3, it-2)
root(ROOT-0, matter-3)

(ROOT
  (FRAG
    (ADVP (RB As) (RB long))
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBD did) (RB n't)
          (VP (VB help)
            (NP (PRP her))
            (SBAR (IN because)
              (S
                (NP (PRP I))
                (VP (VBD wanted)
                  (S
                    (VP (TO to)
                      (VP (VB steal)
                        (NP (PRP$ her) (NN purse))
                        (PP (IN in)
                          (NP (DT the) (NN process)))
                        (ADVP (RB then)))))
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (VP (VBZ is)
                        (NP (DT the) (NN harm) (NN ????))))))))))))))

advmod(long-2, As-1)
root(ROOT-0, long-2)
mark(help-7, as-3)
nsubj(help-7, I-4)
aux(help-7, did-5)
neg(help-7, n't-6)
dep(long-2, help-7)
dobj(help-7, her-8)
mark(wanted-11, because-9)
nsubj(wanted-11, I-10)
xsubj(steal-13, I-10)
advcl(help-7, wanted-11)
aux(steal-13, to-12)
xcomp(wanted-11, steal-13)
poss(purse-15, her-14)
dobj(steal-13, purse-15)
det(process-18, the-17)
prep_in(steal-13, process-18)
advmod(steal-13, then-19)
advmod(????-24, where-20)
cop(????-24, is-21)
det(????-24, the-22)
nn(????-24, harm-23)
advcl(wanted-11, ????-24)

(ROOT
  (FRAG (RB So) (WP what)
    (SBAR (IN if)
      (S
        (NP (NNS gays))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB satisfy)
                (NP (PRP$ their) (JJ parental) (NNS instincts))
                (PP (IN by)
                  (S
                    (VP (VBG caring)
                      (PP (IN for)
                        (NP (DT a) (NN child))))))))))))
    (. ?)))

root(ROOT-0, So-1)
dep(So-1, what-2)
mark(want-5, if-3)
nsubj(want-5, gays-4)
xsubj(satisfy-7, gays-4)
dep(So-1, want-5)
aux(satisfy-7, to-6)
xcomp(want-5, satisfy-7)
poss(instincts-10, their-8)
amod(instincts-10, parental-9)
dobj(satisfy-7, instincts-10)
prepc_by(satisfy-7, caring-12)
det(child-15, a-14)
prep_for(caring-12, child-15)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ does)
      (NP (DT that))
      (VP (VB undermine)
        (NP
          (NP (DT the) (NN care))
          (CC and)
          (NP (DT the) (NN love)))))
    (. ?)))

advmod(undermine-4, How-1)
aux(undermine-4, does-2)
nsubj(undermine-4, that-3)
root(ROOT-0, undermine-4)
det(care-6, the-5)
dobj(undermine-4, care-6)
det(love-9, the-8)
dobj(undermine-4, love-9)
conj_and(care-6, love-9)

(ROOT
  (SQ (MD Do) (RB n't)
    (NP (JJ straight) (NNS couples))
    (VP (VB do)
      (NP (DT the) (JJ same)))
    (. ?)))

aux(do-5, Do-1)
neg(do-5, n't-2)
amod(couples-4, straight-3)
nsubj(do-5, couples-4)
root(ROOT-0, do-5)
det(same-7, the-6)
dobj(do-5, same-7)

