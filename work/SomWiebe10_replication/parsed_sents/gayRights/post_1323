(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG letting)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP know)
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (VBD were)
                    (VP (VBG acting)
                      (PP (IN like)
                        (NP (DT a) (NN chore))))))))))))
    (. .)))

nsubj(letting-3, I-1)
aux(letting-3, was-2)
root(ROOT-0, letting-3)
nsubj(know-5, you-4)
ccomp(letting-3, know-5)
complm(acting-9, that-6)
nsubj(acting-9, you-7)
aux(acting-9, were-8)
ccomp(know-5, acting-9)
det(chore-12, a-11)
prep_like(acting-9, chore-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (ADJP (JJ accurate)))
    (. .)))

nsubj(accurate-3, It-1)
cop(accurate-3, was-2)
root(ROOT-0, accurate-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB call)
        (S
          (NP (PRP you))
          (NP (DT a) (NNP Mormon))
          (SBAR (RB as) (IN if)
            (S
              (NP (PRP it))
              (VP (VBD were)
                (NP (DT an) (NN insult))))))))
    (. .)))

nsubj(call-4, I-1)
aux(call-4, did-2)
neg(call-4, n't-3)
root(ROOT-0, call-4)
nsubj(insult-13, you-5)
det(Mormon-7, a-6)
dep(insult-13, Mormon-7)
advmod(insult-13, as-8)
dep(insult-13, if-9)
nsubj(insult-13, it-10)
cop(insult-13, were-11)
det(insult-13, an-12)
xcomp(call-4, insult-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG asking)
        (SBAR (IN if) (IN that)
          (S
            (NP (DT that))
            (VP (VBD was)
              (NP
                (NP (DT the) (`` ``) (NN insult) ('' ''))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBD were)
                      (VP (VBG referring)
                        (PP (TO to))))))))))))
    (. .)))

nsubj(asking-3, I-1)
aux(asking-3, was-2)
root(ROOT-0, asking-3)
mark(insult-10, if-4)
dep(insult-10, that-5)
nsubj(insult-10, that-6)
cop(insult-10, was-7)
det(insult-10, the-8)
advcl(asking-3, insult-10)
dobj(referring-14, insult-10)
prep_to(referring-14, insult-10)
nsubj(referring-14, you-12)
aux(referring-14, were-13)
rcmod(insult-10, referring-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (NP
        (NP (DT the) (NN one))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ has)
              (VP (VBN made)
                (NP (PRP$ our) (NN disagreement))
                (PP (RBR more) (IN about)
                  (NP
                    (NP (PRP you))
                    (CC and)
                    (NP (PRP me))))
                (, ,)
                (PP (IN than)
                  (NP (DT the) (JJ actual) (NNS facts)))))))))
    (. .)))

nsubj(one-4, You-1)
cop(one-4, 're-2)
det(one-4, the-3)
root(ROOT-0, one-4)
nsubj(made-7, one-4)
aux(made-7, has-6)
rcmod(one-4, made-7)
poss(disagreement-9, our-8)
dobj(made-7, disagreement-9)
advmod(made-7, more-10)
prep_about(made-7, you-12)
prep_about(made-7, me-14)
conj_and(you-12, me-14)
det(facts-19, the-17)
amod(facts-19, actual-18)
prep_than(made-7, facts-19)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (DT the)
        (ADJP (RB only) (JJ pointless))
        (NN part)))
    (. .)))

nsubj(part-6, That-1)
cop(part-6, 's-2)
det(part-6, the-3)
advmod(pointless-5, only-4)
amod(part-6, pointless-5)
root(ROOT-0, part-6)

(ROOT
  (SBARQ
    (WHADVP (RB So))
    (SQ
      (SQ (VBP do)
        (NP (PRP you))
        (VP (VB have)
          (NP (DT any) (JJR more) (NNS arguments))))
      (, ,)
      (CC or)
      (SQ (VBP are)
        (NP (PRP we))
        (VP (VBN done)
          (ADVP (RB here)))))
    (. ?)))

advmod(have-4, So-1)
aux(have-4, do-2)
nsubj(have-4, you-3)
root(ROOT-0, have-4)
det(arguments-7, any-5)
amod(arguments-7, more-6)
dobj(have-4, arguments-7)
auxpass(done-12, are-10)
nsubjpass(done-12, we-11)
conj_or(have-4, done-12)
advmod(done-12, here-13)

