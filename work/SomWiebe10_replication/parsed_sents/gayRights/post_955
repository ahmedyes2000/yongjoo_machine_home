(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB all)
        (PP (IN for)
          (NP (JJ same) (NN sex) (NNS couples))))
      (VP (VBG getting)
        (ADJP (JJ married))))
    (. .)))

nsubj(married-9, I-1)
aux(married-9, 'm-2)
advmod(married-9, all-3)
amod(couples-7, same-5)
nn(couples-7, sex-6)
prep_for(all-3, couples-7)
dep(married-9, getting-8)
root(ROOT-0, married-9)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (DT the) (JJ legal) (NN part))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP disagree)
            (PP (IN with))))))
    (. .)))

cc(part-6, But-1)
nsubj(part-6, it-2)
cop(part-6, 's-3)
det(part-6, the-4)
amod(part-6, legal-5)
root(ROOT-0, part-6)
complm(disagree-9, that-7)
nsubj(disagree-9, I-8)
ccomp(part-6, disagree-9)
prep(disagree-9, with-10)

(ROOT
  (S
    (ADVP (RB IMHO))
    (, ,)
    (NP
      (NP (DT the) (NN legality))
      (PP (IN of)
        (NP (NN marriage))))
    (VP (MD should)
      (VP (VB have)
        (NP (NN nothing))
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NN government) (NN recognition)
                  (CC or)
                  (NNS benefits))))))))
    (. .)))

advmod(have-8, IMHO-1)
det(legality-4, the-3)
nsubj(have-8, legality-4)
prep_of(legality-4, marriage-6)
aux(have-8, should-7)
root(ROOT-0, have-8)
dobj(have-8, nothing-9)
aux(do-11, to-10)
xcomp(have-8, do-11)
nn(recognition-14, government-13)
prep_with(do-11, recognition-14)
prep_with(do-11, benefits-16)
conj_or(recognition-14, benefits-16)

(ROOT
  (S
    (NP (NNS Governments))
    (VP (MD should)
      (VP (VB have)
        (NP (DT a) (NN concept))
        (PP (IN for)
          (NP
            (NP (JJ Civil) (NNS Unions))
            (PP (IN for)
              (NP (DT any) (CD two) (NNS people)))))
        (S
          (VP (TO to)
            (VP (VB enter)
              (PP (IN into)))))))
    (. .)))

nsubj(have-3, Governments-1)
xsubj(enter-14, Governments-1)
aux(have-3, should-2)
root(ROOT-0, have-3)
det(concept-5, a-4)
dobj(have-3, concept-5)
amod(Unions-8, Civil-7)
prep_for(have-3, Unions-8)
det(people-12, any-10)
num(people-12, two-11)
prep_for(Unions-8, people-12)
aux(enter-14, to-13)
xcomp(have-3, enter-14)
prep(enter-14, into-15)

(ROOT
  (NP
    (NP (DT A) (NN contract))
    (PP (IN between)
      (NP
        (NP (DT the) (NN couple))
        (CC and)
        (NP (DT the) (NN State))))
    (PP (IN in)
      (NP (NN essence)))
    (. .)))

det(contract-2, A-1)
root(ROOT-0, contract-2)
det(couple-5, the-4)
prep_between(contract-2, couple-5)
det(State-8, the-7)
prep_between(contract-2, State-8)
conj_and(couple-5, State-8)
prep_in(contract-2, essence-10)

(ROOT
  (SBAR (IN If)
    (S
      (NP (DT the) (NN government))
      (VP (VBZ wants)
        (S
          (VP (TO to)
            (VP (VB provide)
              (NP
                (NP (NNS benefits))
                (, ,)
                (NP (JJ i.e.) (NN tax) (NNS deductions))
                (, ,))
              (PP (TO to)
                (NP
                  (NP (NNS people))
                  (PP (IN in)
                    (NP (DT a) (NN union)))))
              (PP (IN as)
                (NP
                  (NP (DT a) (NN result))
                  (PP (IN of)
                    (S
                      (NP (PRP them))
                      (VP (VBG having)
                        (NP
                          (NP (NNS kids))
                          (, ,)
                          (S
                            (S
                              (VP (VBG owning)
                                (NP (NN property))))
                            (, ,) (FW etc) (, ,)
                            (S
                              (VP
                                (ADVP (RB then))
                                (VB do)
                                (PP
                                  (ADVP (RB so))
                                  (IN as)
                                  (NP (NN encouragement)
                                    (CC and)
                                    (NN recognition)))
                                (SBAR (IN that)
                                  (S
                                    (NP (JJ stable) (NNS relationships))
                                    (VP (MD can)
                                      (VP (VB benefit)
                                        (NP
                                          (NP (DT the) (JJR greater) (NN good))
                                          (PP (IN of)
                                            (NP
                                              (NP (NN society))
                                              (PRN (-LRB- -LRB-)
                                                (SBAR (RB not) (IN that)
                                                  (S
                                                    (NP (JJ single) (NNS people))
                                                    (VP (VBP do) (RB n't))
                                                    (ADVP (RB as) (RB well)))
                                                  (. .))
                                                (-RRB- -RRB-)))))))))))))))))))))))))

mark(wants-4, If-1)
det(government-3, the-2)
nsubj(wants-4, government-3)
xsubj(provide-6, government-3)
root(ROOT-0, wants-4)
aux(provide-6, to-5)
xcomp(wants-4, provide-6)
dobj(provide-6, benefits-7)
amod(deductions-11, i.e.-9)
nn(deductions-11, tax-10)
appos(benefits-7, deductions-11)
prep_to(provide-6, people-14)
det(union-17, a-16)
prep_in(people-14, union-17)
det(result-20, a-19)
prep_as(provide-6, result-20)
nsubj(having-23, them-22)
prepc_of(result-20, having-23)
dobj(having-23, kids-24)
dep(kids-24, owning-26)
dobj(owning-26, property-27)
dep(owning-26, etc-29)
advmod(do-32, then-31)
dep(owning-26, do-32)
advmod(do-32, so-33)
prep_as(do-32, encouragement-35)
prep_as(do-32, recognition-37)
conj_and(encouragement-35, recognition-37)
complm(benefit-42, that-38)
amod(relationships-40, stable-39)
nsubj(benefit-42, relationships-40)
aux(benefit-42, can-41)
ccomp(do-32, benefit-42)
det(good-45, the-43)
amod(good-45, greater-44)
dobj(benefit-42, good-45)
prep_of(good-45, society-47)
dep(do-53, not-49)
dep(do-53, that-50)
amod(people-52, single-51)
nsubj(do-53, people-52)
dep(society-47, do-53)
neg(do-53, n't-54)
advmod(well-56, as-55)
mwe(well-56, as-55)
advmod(do-53, well-56)

(ROOT
  (S
    (NP (NNP Marriage))
    (ADVP (RB then))
    (VP (MD should)
      (VP (VB be)
        (PRN (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP (VBZ has)
                (VP (VBN become)))))
          (, ,))
        (NP (DT a) (JJ religious) (NN institution))))
    (. .)))

nsubj(institution-13, Marriage-1)
advmod(institution-13, then-2)
aux(institution-13, should-3)
cop(institution-13, be-4)
mark(become-9, as-6)
nsubj(become-9, it-7)
aux(become-9, has-8)
parataxis(institution-13, become-9)
det(institution-13, a-11)
amod(institution-13, religious-12)
root(ROOT-0, institution-13)

(ROOT
  (S
    (S
      (VP (VB Let)
        (NP
          (NP (DT each) (NN faith))
          (PP (IN in)
            (NP (DT the) (NN world))))))
    (VP (VBP decide)
      (SBAR (IN if)
        (S
          (NP (PRP they))
          (VP (MD will)
            (VP (VB allow)
              (NP (PRP$ their) (JJ religious) (NNS leaders)
                (CC and)
                (NNS followers))
              (S
                (VP (TO to)
                  (VP (VB participate)
                    (PP (IN in)
                      (NP (JJ same) (NN sex) (NNS marriages)))))))))
        (CC or)
        (RB not)))
    (. .)))

csubj(decide-7, Let-1)
det(faith-3, each-2)
dobj(Let-1, faith-3)
det(world-6, the-5)
prep_in(faith-3, world-6)
root(ROOT-0, decide-7)
mark(allow-11, if-8)
nsubj(allow-11, they-9)
aux(allow-11, will-10)
advcl(decide-7, allow-11)
poss(leaders-14, their-12)
amod(leaders-14, religious-13)
dobj(allow-11, leaders-14)
dobj(allow-11, followers-16)
conj_and(leaders-14, followers-16)
aux(participate-18, to-17)
xcomp(allow-11, participate-18)
amod(marriages-22, same-20)
nn(marriages-22, sex-21)
prep_in(participate-18, marriages-22)
advcl(decide-7, not-24)
conj_or(allow-11, not-24)

