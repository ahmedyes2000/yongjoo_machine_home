(ROOT
  (S (`` ``)
    (NP (PRP Me))
    (VP (VBG saying)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (NP
              (NP (DT a) (NN chore))
              (SBAR
                (S
                  (VP (VBD was)
                    (ADVP (RB never))
                    (NP (DT an) (NN argument))))))))))
    (. .)))

nsubj(saying-3, Me-2)
root(ROOT-0, saying-3)
complm(chore-8, that-4)
nsubj(chore-8, you-5)
cop(chore-8, 're-6)
det(chore-8, a-7)
ccomp(saying-3, chore-8)
cop(argument-12, was-9)
neg(argument-12, never-10)
det(argument-12, an-11)
rcmod(chore-8, argument-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (DT a) (NN statement))
        (PP (IN about)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP I))
              (VP (VBP feel)))))))
    (. .)))

nsubj(statement-4, It-1)
cop(statement-4, was-2)
det(statement-4, a-3)
root(ROOT-0, statement-4)
advmod(feel-8, how-6)
nsubj(feel-8, I-7)
prepc_about(statement-4, feel-8)

(ROOT
  (S ('' '')
    (NP (NNP Well) (NNP I))
    (VP (VBP do) (RB n't)
      (VP (VB care)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBP think)
              (PP (IN of)
                (NP (PRP me))))))))
    (. .)))

nn(I-3, Well-2)
nsubj(care-6, I-3)
aux(care-6, do-4)
neg(care-6, n't-5)
root(ROOT-0, care-6)
dobj(think-9, what-7)
nsubj(think-9, you-8)
ccomp(care-6, think-9)
prep_of(think-9, me-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB keep)
        (NP (PRP$ your) (NN childish) (NNS feelings))
        (PP (TO to)
          (NP (PRP yourself)))))
    (. .)))

nsubj(keep-3, You-1)
aux(keep-3, can-2)
root(ROOT-0, keep-3)
poss(feelings-6, your-4)
nn(feelings-6, childish-5)
dobj(keep-3, feelings-6)
prep_to(keep-3, yourself-8)

(ROOT
  (NP (: :)
    (NP (NNP D))
    (SBAR
      (SBAR (`` ``)
        (S
          (NP (PRP we))
          (VP (VBP live)
            (PP (IN in)
              (NP
                (NP (DT a) (NN country))
                (PP (IN of)
                  (NP (JJ religious) (NN freedom))))))))
      (: ...)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (NN religion))
          (VP (VBZ has)
            (NP
              (NP (DT the) (NN freedom))
              (PP (TO to)
                (NP (NNS oppress))))))))
    (. .)))

root(ROOT-0, D-2)
nsubj(live-5, we-4)
dep(D-2, live-5)
det(country-8, a-7)
prep_in(live-5, country-8)
amod(freedom-11, religious-10)
prep_of(country-8, freedom-11)
advmod(has-15, where-13)
nsubj(has-15, religion-14)
dep(live-5, has-15)
det(freedom-17, the-16)
dobj(has-15, freedom-17)
prep_to(freedom-17, oppress-19)

(ROOT
  (S ('' '')
    (NP (NNP FALSENow) (PRP you))
    (VP (VBP are)
      (VP (VBG blaming)
        (NP (NNP America))))
    (. .)))

nsubj(blaming-5, FALSENow-2)
dep(FALSENow-2, you-3)
aux(blaming-5, are-4)
root(ROOT-0, blaming-5)
dobj(blaming-5, America-6)

(ROOT
  (S
    (ADVP (RB Well))
    (NP (PRP I))
    (VP (VBP 'm)
      (PP (IN on)
        (NP (NNP Americas) (NN side))))
    (. .)))

advmod('m-3, Well-1)
nsubj('m-3, I-2)
root(ROOT-0, 'm-3)
nn(side-6, Americas-5)
prep_on('m-3, side-6)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD should)
      (VP (VB be)
        (ADJP (RBR more) (JJ grateful)
          (S
            (VP (TO to)
              (VP (VB live)
                (PP (IN in)
                  (NP (DT this) (NN country)))))))))
    (. .)))

nsubj(grateful-5, You-1)
aux(grateful-5, should-2)
cop(grateful-5, be-3)
advmod(grateful-5, more-4)
root(ROOT-0, grateful-5)
aux(live-7, to-6)
xcomp(grateful-5, live-7)
det(country-10, this-9)
prep_in(live-7, country-10)

