(ROOT
  (S
    (NP (DT the) (JJ same) (NN similarity))
    (VP (VBZ 's)
      (VP (MD can)
        (VP (VB be)
          (VP (VBN found)
            (PP (IN throughout)
              (NP (NN humanity)))))))
    (. .)))

det(similarity-3, the-1)
amod(similarity-3, same-2)
nsubjpass(found-7, similarity-3)
aux(found-7, 's-4)
aux(found-7, can-5)
auxpass(found-7, be-6)
root(ROOT-0, found-7)
prep_throughout(found-7, humanity-9)

(ROOT
  (S
    (ADVP (RB just))
    (SBAR (IN because)
      (S
        (NP (DT a) (NN guy))
        (VP (VBZ has)
          (NP (DT a) (JJ high) (NN voice)))))
    (, ,)
    (VP (VBZ does) (RB n't)
      (VP (VB make)
        (NP (PRP him) (JJ gay))))
    (. .)))

advmod(make-12, just-1)
mark(has-5, because-2)
det(guy-4, a-3)
nsubj(has-5, guy-4)
dep(make-12, has-5)
det(voice-8, a-6)
amod(voice-8, high-7)
dobj(has-5, voice-8)
aux(make-12, does-10)
neg(make-12, n't-11)
root(ROOT-0, make-12)
dobj(make-12, him-13)
amod(him-13, gay-14)

(ROOT
  (S
    (NP (EX there))
    (VP (VBZ is)
      (NP (NN man)
        (CC and)
        (NN woman)))
    (. .)))

expl(is-2, there-1)
root(ROOT-0, is-2)
nsubj(is-2, man-3)
nsubj(is-2, woman-5)
conj_and(man-3, woman-5)

(ROOT
  (S
    (NP (DT that))
    (VP (VBZ 's)
      (ADVP (RB just))
      (NP
        (NP (DT the) (NN way))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is))))))
    (. .)))

nsubj(way-5, that-1)
cop(way-5, 's-2)
advmod(way-5, just-3)
det(way-5, the-4)
root(ROOT-0, way-5)
nsubj(is-7, it-6)
rcmod(way-5, is-7)

(ROOT
  (S
    (S
      (VP (VBG being)
        (ADJP (JJ gay))))
    (VP (VBZ is) (RB not)
      (PP (IN in)
        (NP (DT this) (NN balance))))
    (. .)))

cop(gay-2, being-1)
csubj(is-3, gay-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
det(balance-7, this-6)
prep_in(is-3, balance-7)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (DT the) (NN way))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBD was)
              (VP (VBN intended)))))))
    (. .)))

nsubj(way-5, it-1)
cop(way-5, 's-2)
neg(way-5, not-3)
det(way-5, the-4)
root(ROOT-0, way-5)
nsubjpass(intended-8, it-6)
auxpass(intended-8, was-7)
rcmod(way-5, intended-8)

(ROOT
  (S
    (VP (VB do) (RB n't)
      (VP (VB get)
        (S
          (NP (PRP me))
          (ADJP (JJ wrong)))))
    (. .)))

aux(get-3, do-1)
neg(get-3, n't-2)
root(ROOT-0, get-3)
nsubj(wrong-5, me-4)
xcomp(get-3, wrong-5)

(ROOT
  (S
    (SBAR
      (WHNP (WP what))
      (S
        (NP (NNS people))
        (VP (VBP do))))
    (VP (VBZ is)
      (ADVP (RB there))
      (NP (NN decision)))
    (. .)))

dobj(do-3, what-1)
nsubj(do-3, people-2)
csubj(decision-6, do-3)
cop(decision-6, is-4)
advmod(decision-6, there-5)
root(ROOT-0, decision-6)

(ROOT
  (S (CC but)
    (PRN (, ,)
      (S
        (VP (VB do) (RB n't)
          (VP (VB insult)
            (NP (PRP$ my) (NN intelligence))
            (PP (IN by)
              (S
                (VP (VBG saying)))))))
      (, ,))
    (`` ``)
    (NP (FW i))
    (VP (VBD was)
      (VP (VBN born)
        (NP (DT this) (NN way))))
    (. .)))

cc(born-14, but-1)
aux(insult-5, do-3)
neg(insult-5, n't-4)
parataxis(born-14, insult-5)
poss(intelligence-7, my-6)
dobj(insult-5, intelligence-7)
prepc_by(insult-5, saying-9)
nsubjpass(born-14, i-12)
auxpass(born-14, was-13)
root(ROOT-0, born-14)
det(way-16, this-15)
dobj(born-14, way-16)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD can)
              (ADVP (RB nit))
              (VP
                (VP (VB pick)
                  (NP (NNP similarity) (POS 's))
                  (PP (IN between)
                    (NP (NNS gays))))
                (, ,)
                (CC and)
                (VP (VB call)
                  (S
                    (NP (PRP it))
                    (ADJP (JJ genetics))))))))))
    (. .)))

nsubj(think-4, i-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
nsubj(pick-8, you-5)
nsubj(call-15, you-5)
aux(pick-8, can-6)
advmod(pick-8, nit-7)
ccomp(think-4, pick-8)
dobj(pick-8, similarity-9)
possessive(similarity-9, 's-10)
prep_between(pick-8, gays-12)
ccomp(think-4, call-15)
conj_and(pick-8, call-15)
nsubj(genetics-17, it-16)
xcomp(call-15, genetics-17)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP 'm)
      (NP
        (NP (DT a) (CD 6) (NN foot))
        (, ,)
        (ADJP (JJ white) (NN male))))
    (. .)))

nsubj(foot-5, i-1)
cop(foot-5, 'm-2)
det(foot-5, a-3)
num(foot-5, 6-4)
root(ROOT-0, foot-5)
dep(male-8, white-7)
amod(foot-5, male-8)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP am)
      (ADJP (RB straight)))
    (. .)))

nsubj(straight-3, i-1)
cop(straight-3, am-2)
root(ROOT-0, straight-3)

(ROOT
  (SQ (VBZ does)
    (NP (DT that))
    (VP (VB mean)
      (SBAR (IN that)
        (S
          (NP (DT all)
            (ADJP (CD 6) (NN ft.) (JJ white))
            (NNS males))
          (VP (VBP are)
            (ADJP (RB straight))))))
    (. .)))

aux(mean-3, does-1)
nsubj(mean-3, that-2)
root(ROOT-0, mean-3)
complm(straight-11, that-4)
det(males-9, all-5)
number(white-8, 6-6)
dep(white-8, ft.-7)
amod(males-9, white-8)
nsubj(straight-11, males-9)
cop(straight-11, are-10)
ccomp(mean-3, straight-11)

(ROOT
  (S
    (VP (VB no.)
      (ADVP (DT no) (NN matter)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP you))
            (VP (VBP look)
              (PP (IN at)
                (NP (DT the) (NN world))))))))
    (. .)))

root(ROOT-0, no.-1)
dep(matter-3, no-2)
advmod(no.-1, matter-3)
advmod(look-6, how-4)
nsubj(look-6, you-5)
dep(matter-3, look-6)
det(world-9, the-8)
prep_at(look-6, world-9)

(ROOT
  (S
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN ying))
        (CC and)
        (NP (DT a) (NN yang))))
    (. .)))

expl(is-2, there-1)
root(ROOT-0, is-2)
det(ying-4, a-3)
nsubj(is-2, ying-4)
det(yang-7, a-6)
nsubj(is-2, yang-7)
conj_and(ying-4, yang-7)

(ROOT
  (S
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (RB up))
        (CC and)
        (NP (DT a) (NN down))))
    (. .)))

expl('s-2, there-1)
root(ROOT-0, 's-2)
det(up-4, a-3)
nsubj('s-2, up-4)
det(down-7, a-6)
nsubj('s-2, down-7)
conj_and(up-4, down-7)

(ROOT
  (S
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN left))
        (CC and)
        (NP (DT a) (NN right))))
    (. .)))

expl('s-2, there-1)
root(ROOT-0, 's-2)
det(left-4, a-3)
nsubj('s-2, left-4)
det(right-7, a-6)
nsubj('s-2, right-7)
conj_and(left-4, right-7)

