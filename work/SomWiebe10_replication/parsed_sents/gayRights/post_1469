(ROOT
  (S
    (NP (PRP You))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR (IN that)
              (S
                (NP
                  (NP (RB only) (PRP$ your) (NN vision))
                  (PP (IN of)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (DT this) (NN site))
                        (VP (MD should)
                          (VP (VB be)))))))
                (VP (VBZ is)
                  (NP (DT the) (JJ valid) (NN vision)))))))))
    (. .)))

nsubj(seem-2, You-1)
xsubj(think-4, You-1)
root(ROOT-0, seem-2)
aux(think-4, to-3)
xcomp(seem-2, think-4)
complm(vision-18, that-5)
advmod(vision-8, only-6)
poss(vision-8, your-7)
nsubj(vision-18, vision-8)
dobj(be-14, what-10)
det(site-12, this-11)
nsubj(be-14, site-12)
aux(be-14, should-13)
prepc_of(vision-8, be-14)
cop(vision-18, is-15)
det(vision-18, the-16)
amod(vision-18, valid-17)
ccomp(think-4, vision-18)

(ROOT
  (S
    (NP
      (NP (RB Only) (PRP$ your) (NN vision))
      (PP (IN of)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (NNS votes))
            (VP (MD should)
              (VP (VB be)
                (VP (VBN used))))))))
    (VP (VBZ is)
      (NP (DT the) (JJ right) (NN one)))
    (. .)))

advmod(vision-3, Only-1)
poss(vision-3, your-2)
nsubj(one-13, vision-3)
advmod(used-9, how-5)
nsubjpass(used-9, votes-6)
aux(used-9, should-7)
auxpass(used-9, be-8)
prepc_of(vision-3, used-9)
cop(one-13, is-10)
det(one-13, the-11)
amod(one-13, right-12)
root(ROOT-0, one-13)

(ROOT
  (S (CC And)
    (PP (IN on)
      (NP
        (NP (NN top))
        (PP (IN of)
          (NP
            (NP (DT all))
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (VP (VB add)
                        (NP
                          (ADJP (RB even) (JJR more))
                          (NNS rules))
                        (PP (IN like))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB leave)
            (NP
              (NP (DT a) (NN reason))
              (VP (VBG explaining)
                (SBAR
                  (WHADVP (WRB why))
                  (S
                    (NP (PRP they))
                    (ADVP (RB down))
                    (VP (VBD voted)
                      (NP (PRP you)))))))))))
    (. .)))

cc(have-17, And-1)
dobj(want-8, all-5)
prep_like(add-10, all-5)
prep_on_top_of(have-17, all-5)
complm(want-8, that-6)
nsubj(want-8, you-7)
xsubj(add-10, you-7)
dep(all-5, want-8)
aux(add-10, to-9)
xcomp(want-8, add-10)
advmod(more-12, even-11)
amod(rules-13, more-12)
dobj(add-10, rules-13)
nsubj(have-17, you-16)
xsubj(leave-19, you-16)
root(ROOT-0, have-17)
aux(leave-19, to-18)
xcomp(have-17, leave-19)
det(reason-21, a-20)
dobj(leave-19, reason-21)
partmod(reason-21, explaining-22)
advmod(voted-26, why-23)
nsubj(voted-26, they-24)
advmod(voted-26, down-25)
advcl(explaining-22, voted-26)
dobj(voted-26, you-27)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ seems)
      (ADJP (JJ strange)
        (PP (IN from)
          (NP
            (NP (NN someone))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ wants)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN accepted))))))))))))
    (. .)))

nsubj(strange-3, That-1)
cop(strange-3, seems-2)
root(ROOT-0, strange-3)
prep_from(strange-3, someone-5)
nsubj(wants-7, someone-5)
rcmod(someone-5, wants-7)
aux(accepted-10, to-8)
auxpass(accepted-10, be-9)
xcomp(wants-7, accepted-10)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (SBAR (IN like)
          (S
            (NP (PRP you))
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN accepted)
                      (PP (IN on)
                        (NP (PRP$ your) (NNS terms))))))))))))
    (CC but)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (S
            (VP (TO to)
              (VP (VB have)
                (S
                  (VP (TO to)
                    (VP (VB accept)
                      (NP (NNS others))
                      (PP (IN on)
                        (NP (PRP$ their) (NNS terms))))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
mark(want-5, like-3)
nsubj(want-5, you-4)
xsubj(accepted-8, you-4)
advcl('s-2, want-5)
aux(accepted-8, to-6)
auxpass(accepted-8, be-7)
xcomp(want-5, accepted-8)
poss(terms-11, your-10)
prep_on(accepted-8, terms-11)
nsubj(want-16, you-13)
xsubj(have-18, you-13)
aux(want-16, do-14)
neg(want-16, n't-15)
conj_but('s-2, want-16)
aux(have-18, to-17)
xcomp(want-16, have-18)
aux(accept-20, to-19)
xcomp(have-18, accept-20)
dobj(accept-20, others-21)
poss(terms-24, their-23)
prep_on(accept-20, terms-24)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP want)
      (S
        (NP (NN ot))
        (VP
          (VP (VB have)
            (NP (PRP$ your) (NN cake)))
          (CC and)
          (VP (VB eat)
            (NP (PRP it))
            (ADVP (RB too))))))
    (. .)))

nsubj(want-2, You-1)
root(ROOT-0, want-2)
nsubj(have-4, ot-3)
nsubj(eat-8, ot-3)
ccomp(want-2, have-4)
poss(cake-6, your-5)
dobj(have-4, cake-6)
ccomp(want-2, eat-8)
conj_and(have-4, eat-8)
dobj(eat-8, it-9)
advmod(eat-8, too-10)

(ROOT
  (PRN
    (S
      (NP
        (NP
          (NP
            (NP (JJ Human) (NN nature))
            (, ,)
            (NP
              (NP (PRP I))
              (SBAR
                (S
                  (VP (VBP guess))
                  (: ;))))
            (-RRB- -RRB-))
          (NP
            (NP (NNP BTW))
            (, ,)
            (SBAR (IN if)
              (S
                (VP (VBP log)
                  (PRT (RP on))
                  (PP (IN as)
                    (NP (NN downvote))))))))
        (, ,)
        (NP (PRP you)))
      (VP (MD can)
        (ADVP (RB down))
        (VP (VB vote)
          (FRAG
            (ADVP (RB again))
            (: ;)))))
    (-RRB- -RRB-)))

amod(nature-2, Human-1)
nsubj(vote-19, nature-2)
appos(nature-2, I-4)
rcmod(I-4, guess-5)
dep(nature-2, BTW-8)
mark(log-11, if-10)
dep(BTW-8, log-11)
prt(log-11, on-12)
prep_as(log-11, downvote-14)
appos(nature-2, you-16)
aux(vote-19, can-17)
advmod(vote-19, down-18)
root(ROOT-0, vote-19)
dep(vote-19, again-20)

