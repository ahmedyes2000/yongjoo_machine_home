(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBZ gets)
        (NP (NN custody))
        (SBAR (IN if)
          (S
            (NP (DT a) (JJ straight) (NN couple))
            (VP (VBZ breaks)
              (PRT (RP up)))))))
    (. ?)))

nsubj(gets-2, Who-1)
root(ROOT-0, gets-2)
dobj(gets-2, custody-3)
mark(breaks-8, if-4)
det(couple-7, a-5)
amod(couple-7, straight-6)
nsubj(breaks-8, couple-7)
advcl(gets-2, breaks-8)
prt(breaks-8, up-9)

(ROOT
  (NP (DT The) (JJ better) (NN parent) (. .)))

det(parent-3, The-1)
amod(parent-3, better-2)
root(ROOT-0, parent-3)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (MD would)
        (VP (VB get)
          (SBAR
            (S
              (NP (NN custody))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (JJ gay) (NN couple))
                  (SBAR
                    (S
                      (VP (VBZ breaks)
                        (PRT (RP up))))))))))))
    (. ?)))

nsubj(get-3, Who-1)
aux(get-3, would-2)
root(ROOT-0, get-3)
nsubj(couple-8, custody-4)
cop(couple-8, is-5)
det(couple-8, a-6)
amod(couple-8, gay-7)
ccomp(get-3, couple-8)
rcmod(couple-8, breaks-9)
prt(breaks-9, up-10)

(ROOT
  (NP (DT The) (JJ better) (NN parent) (. .)))

det(parent-3, The-1)
amod(parent-3, better-2)
root(ROOT-0, parent-3)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP they))
      (VP (VB determine)
        (NP (DT the) (JJR better) (NN parent))))
    (. ?)))

advmod(determine-4, How-1)
aux(determine-4, do-2)
nsubj(determine-4, they-3)
root(ROOT-0, determine-4)
det(parent-7, the-5)
amod(parent-7, better-6)
dobj(determine-4, parent-7)

(ROOT
  (S
    (NP (DT The) (JJ same) (NN way))
    (NP (PRP they))
    (VP (MD would)
      (PP (IN with)
        (NP (DT a) (JJ straight) (NN couple))))
    (. .)))

det(way-3, The-1)
amod(way-3, same-2)
nsubj(would-5, way-3)
nsubj(would-5, they-4)
root(ROOT-0, would-5)
det(couple-9, a-7)
amod(couple-9, straight-8)
prep_with(would-5, couple-9)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP (DT no) (NNS differences))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (NNP father) (POS 's))
          (VP (VBP have)
            (VP (VBN been)
              (VP (VBG fighting)
                (PP (IN for)
                  (NP (PRP$ their) (NNS rights)))
                (PP (TO to)
                  (NP (PRP$ their) (NNS children)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
det(differences-4, no-3)
nsubj(are-2, differences-4)
mark(fighting-11, because-6)
nsubj(fighting-11, father-7)
possessive(father-7, 's-8)
aux(fighting-11, have-9)
aux(fighting-11, been-10)
advcl(are-2, fighting-11)
poss(rights-14, their-13)
prep_for(fighting-11, rights-14)
poss(children-17, their-16)
prep_to(fighting-11, children-17)

(ROOT
  (S (CC And)
    (NP (RB yes))
    (, ,)
    (NP (NNS parents))
    (VP (MD should)
      (VP (VB get)
        (ADJP (JJ married))
        (SBAR (IN before)
          (S
            (NP (PRP they))
            (VP (VBP adopt))))))
    (. .)))

cc(married-7, And-1)
nsubj(married-7, yes-2)
nsubj(married-7, parents-4)
aux(married-7, should-5)
dep(married-7, get-6)
root(ROOT-0, married-7)
mark(adopt-10, before-8)
nsubj(adopt-10, they-9)
advcl(married-7, adopt-10)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (DT a) (JJ great) (NN reason)
        (S
          (VP (TO to)
            (VP (VB let)
              (S
                (NP (NNS gays))
                (VP (VB get)
                  (ADJP (JJ married)))))))))
    (. .)))

nsubj(reason-5, That-1)
cop(reason-5, 's-2)
det(reason-5, a-3)
amod(reason-5, great-4)
root(ROOT-0, reason-5)
aux(let-7, to-6)
infmod(reason-5, let-7)
nsubj(married-10, gays-8)
dep(married-10, get-9)
ccomp(let-7, married-10)

(ROOT
  (S
    (VP (VB Thank)
      (NP (PRP you)))
    (, ,)
    (NP (NNP Tugman))
    (. .)))

root(ROOT-0, Thank-1)
dobj(Thank-1, you-2)
dep(Thank-1, Tugman-4)

