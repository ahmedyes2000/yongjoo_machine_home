(ROOT
  (S
    (LST (JJ First))
    (ADVP (IN of) (DT all))
    (, ,)
    (VP (VB calm)
      (ADVP (RB down) (RB there))
      (, ,)
      (NP (NNP Bill)))
    (. ...)))

dep(calm-5, First-1)
advmod(calm-5, of-2)
dep(of-2, all-3)
root(ROOT-0, calm-5)
advmod(there-7, down-6)
advmod(calm-5, there-7)
dobj(calm-5, Bill-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB like)
          (NP (PRP it))
          (PP (IN because)
            (NP (PRP I))))))
    (PRN
      (S
        (NP (PRP myself))
        (VP (VBP am) (RB not)
          (ADJP (JJ gay))))
      (, ,))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB approve)
          (PP (IN of)
            (NP (DT the) (JJ gay) (NN lifestyle))))))
    (. .)))

nsubj(like-4, I-1)
aux(like-4, do-2)
neg(like-4, n't-3)
root(ROOT-0, like-4)
dobj(like-4, it-5)
prep_because(like-4, I-7)
nsubj(gay-11, myself-8)
cop(gay-11, am-9)
neg(gay-11, not-10)
dep(like-4, gay-11)
nsubj(approve-17, I-14)
aux(approve-17, do-15)
neg(approve-17, n't-16)
conj_and(like-4, approve-17)
det(lifestyle-21, the-19)
amod(lifestyle-21, gay-20)
prep_of(approve-17, lifestyle-21)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP do)
      (SBAR
        (S
          (VP (VBP think)
            (SBAR
              (S
                (NP (PRP they))
                (VP (MD should)
                  (VP (VB be)
                    (ADJP (JJ able)
                      (S
                        (VP (TO to)
                          (VP (VB do)
                            (SBAR (IN that) (IN if)
                              (S
                                (NP (PRP they))
                                (VP (VBP want))))))))))))))))
    (. .)))

cc(do-3, But-1)
nsubj(do-3, I-2)
root(ROOT-0, do-3)
ccomp(do-3, think-4)
nsubj(able-8, they-5)
aux(able-8, should-6)
cop(able-8, be-7)
ccomp(think-4, able-8)
aux(do-10, to-9)
xcomp(able-8, do-10)
complm(want-14, that-11)
dep(want-14, if-12)
nsubj(want-14, they-13)
ccomp(do-10, want-14)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (DT a) (JJ weird) (JJ little) (NN part))
          (PP (IN of)
            (NP (PRP me))))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP know)))
      (, ,))
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (SBAR
          (WHADVP (RB just) (WRB how))
          (S
            (NP (PRP I))
            (VP (VBP feel))))))
    (. .)))

nsubj(part-6, It-1)
cop(part-6, 's-2)
det(part-6, a-3)
amod(part-6, weird-4)
amod(part-6, little-5)
root(ROOT-0, part-6)
prep_of(part-6, me-8)
nsubj(know-11, I-10)
dep(part-6, know-11)
nsubj('s-15, that-14)
conj_but(part-6, 's-15)
advmod(how-17, just-16)
advmod(feel-19, how-17)
nsubj(feel-19, I-18)
ccomp('s-15, feel-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB like)
        (NP (PRP it))))
    (. .)))

nsubj(like-4, I-1)
aux(like-4, do-2)
neg(like-4, n't-3)
root(ROOT-0, like-4)
dobj(like-4, it-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB prove)
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is) (RB n't)
                (ADJP (NN anything) (JJ wrong)
                  (PP (IN with)
                    (NP (PRP it))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB prove)
          (NP (PRP it))
          (ADVP
            (ADVP (RB just) (RB as) (RB much))
            (SBAR (IN as)
              (S
                (NP (PRP you))
                (VP (MD ca) (RB n't))))))))
    (. .)))

nsubj(prove-4, I-1)
aux(prove-4, ca-2)
neg(prove-4, n't-3)
root(ROOT-0, prove-4)
complm(is-7, that-5)
expl(is-7, there-6)
ccomp(prove-4, is-7)
neg(is-7, n't-8)
dep(wrong-10, anything-9)
acomp(is-7, wrong-10)
prep_with(wrong-10, it-12)
nsubj(prove-18, I-15)
aux(prove-18, ca-16)
neg(prove-18, n't-17)
conj_but(prove-4, prove-18)
dobj(prove-18, it-19)
advmod(much-22, just-20)
advmod(much-22, as-21)
advmod(prove-18, much-22)
mark(ca-25, as-23)
nsubj(ca-25, you-24)
ccomp(much-22, ca-25)
neg(ca-25, n't-26)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN way)
        (S
          (VP (TO to)
            (VP (VB prove)
              (NP (PRP it))
              (ADVP (DT either) (NN way)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(way-4, no-3)
nsubj(is-2, way-4)
aux(prove-6, to-5)
infmod(way-4, prove-6)
dobj(prove-6, it-7)
dep(way-9, either-8)
advmod(prove-6, way-9)

