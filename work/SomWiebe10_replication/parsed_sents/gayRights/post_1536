(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP 've)
                (VP (VBN been)
                  (VP (VBG reading)
                    (NP
                      (NP (DT all))
                      (PP (IN of)
                        (NP (PRP$ my) (NNS arguments))))
                    (PP (IN on)
                      (NP (DT this) (NN topic))))))))
          (CC but)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (VP (VBG proposing)
                  (SBAR
                    (S
                      (VP (VBZ is)
                        (PP (IN for)
                          (NP (DT the) (NN government)
                            (S
                              (VP (TO to)
                                (VP
                                  (VP
                                    (VP (VB stop)
                                      (S
                                        (VP (VBG using)
                                          (S
                                            (NP (DT the) (NN word))
                                            (`` ``)
                                            (ADJP (NN marriage))
                                            ('' '')))))
                                    (CC and)
                                    (VP (VB replace)
                                      (NP (PRP it))
                                      (PP (IN with)
                                        (NP (DT the) (NNS words))))
                                    (NP (`` ``) (JJ civil) (NN union) ('' '')))
                                  (CC and)
                                  (VP (VB have)
                                    (S
                                      (NP (DT those) (CD 2) (NNS words))
                                      (VP (VB apply)
                                        (PP (TO to)
                                          (NP
                                            (ADJP (JJ heterosexual)
                                              (CC and)
                                              (JJ homosexual))
                                            (NNS unions)))))))))))))))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
mark(reading-9, if-5)
nsubj(reading-9, you-6)
aux(reading-9, 've-7)
aux(reading-9, been-8)
dep(know-4, reading-9)
dobj(reading-9, all-10)
poss(arguments-13, my-12)
prep_of(all-10, arguments-13)
det(topic-16, this-15)
prep_on(reading-9, topic-16)
dobj(proposing-21, what-18)
nsubj(proposing-21, I-19)
aux(proposing-21, 'm-20)
dep(know-4, proposing-21)
conj_but(reading-9, proposing-21)
ccomp(proposing-21, is-22)
det(government-25, the-24)
prep_for(is-22, government-25)
aux(stop-27, to-26)
infmod(government-25, stop-27)
xcomp(stop-27, using-28)
det(word-30, the-29)
dep(marriage-32, word-30)
dep(using-28, marriage-32)
infmod(government-25, replace-35)
conj_and(stop-27, replace-35)
dobj(replace-35, it-36)
det(words-39, the-38)
prep_with(replace-35, words-39)
amod(union-42, civil-41)
dobj(stop-27, union-42)
infmod(government-25, have-45)
conj_and(stop-27, have-45)
det(words-48, those-46)
num(words-48, 2-47)
nsubj(apply-49, words-48)
ccomp(have-45, apply-49)
amod(unions-54, heterosexual-51)
conj_and(heterosexual-51, homosexual-53)
amod(unions-54, homosexual-53)
prep_to(apply-49, unions-54)

(ROOT
  (S
    (NP (DT This))
    (VP (MD would)
      (VP (VB give)
        (NP (JJ homosexual) (NNS unions))
        (NP
          (NP (DT the) (JJ same) (NNS rights))
          (PP (IN as)
            (NP (JJ heterosexual) (NNS unions))))))
    (. .)))

nsubj(give-3, This-1)
aux(give-3, would-2)
root(ROOT-0, give-3)
amod(unions-5, homosexual-4)
iobj(give-3, unions-5)
det(rights-8, the-6)
amod(rights-8, same-7)
dobj(give-3, rights-8)
amod(unions-11, heterosexual-10)
prep_as(rights-8, unions-11)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR (IN If)
      (S
        (NP (DT the) (NN government))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (DT this) (NN advice))))))))
    (, ,)
    (NP (DT the) (NNS churches))
    (VP (MD would)
      (ADVP (RB still))
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB deny)
                (S
                  (VP (TO to)
                    (VP (VB perform)
                      (NP (JJ homosexual) (NN wedding) (NNS ceremonies)))))))))))
    (. .)))

advmod(able-17, However-1)
mark(were-6, If-3)
det(government-5, the-4)
nsubj(were-6, government-5)
xsubj(take-8, government-5)
advcl(able-17, were-6)
aux(take-8, to-7)
xcomp(were-6, take-8)
det(advice-10, this-9)
dobj(take-8, advice-10)
det(churches-13, the-12)
nsubj(able-17, churches-13)
aux(able-17, would-14)
advmod(able-17, still-15)
cop(able-17, be-16)
root(ROOT-0, able-17)
aux(deny-19, to-18)
xcomp(able-17, deny-19)
aux(perform-21, to-20)
xcomp(deny-19, perform-21)
amod(ceremonies-24, homosexual-22)
nn(ceremonies-24, wedding-23)
dobj(perform-21, ceremonies-24)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN case)))
    (NP (NNS gays))
    (VP (VBP do) (RB n't)
      (VP (VB miss)
        (PRT (RP out))
        (PP (IN on)
          (NP (DT any) (`` ``) (NNS rights) ('' '')))
        (SBAR (IN because)
          (S
            (NP
              (NP (DT a) (NN wedding) (NN ceremony))
              (PRN (-LRB- -LRB-)
                (VP (VBN performed)
                  (PP (IN by)
                    (NP
                      (NP (DT a) (NN representative))
                      (PP (IN of)
                        (NP (DT a) (VBN given) (NN religion))))))
                (-RRB- -RRB-)))
            (VP (VBZ is) (RB not)
              (NP (DT a) (NN right)))))))
    (. .)))

det(case-3, this-2)
prep_in(miss-7, case-3)
nsubj(miss-7, gays-4)
aux(miss-7, do-5)
neg(miss-7, n't-6)
root(ROOT-0, miss-7)
prt(miss-7, out-8)
det(rights-12, any-10)
prep_on(miss-7, rights-12)
mark(right-31, because-14)
det(ceremony-17, a-15)
nn(ceremony-17, wedding-16)
nsubj(right-31, ceremony-17)
dep(ceremony-17, performed-19)
det(representative-22, a-21)
prep_by(performed-19, representative-22)
det(religion-26, a-24)
amod(religion-26, given-25)
prep_of(representative-22, religion-26)
cop(right-31, is-28)
neg(right-31, not-29)
det(right-31, a-30)
advcl(miss-7, right-31)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN government))
        (VP (VBD were)
          (S
            (VP (TO to)
              (VP (VB use)
                (NP
                  (NP (DT the) (NN word) (`` ``) (NN marriage) ('' ''))
                  (PP (IN for)
                    (NP (JJ homosexual) (NNS unions))))))))))
    (, ,)
    (NP (RB then))
    (VP (MD would)
      (ADVP (RB churches))
      (VP (VB be)
        (VP (VBN required)
          (S
            (VP (TO to)
              (VP (VB perform)
                (NP (JJ homosexual) (NN wedding) (NNS ceremonies))))))))
    (. ?)))

mark(were-4, If-1)
det(government-3, the-2)
nsubj(were-4, government-3)
xsubj(use-6, government-3)
advcl(required-20, were-4)
aux(use-6, to-5)
xcomp(were-4, use-6)
det(marriage-10, the-7)
nn(marriage-10, word-8)
dobj(use-6, marriage-10)
amod(unions-14, homosexual-13)
prep_for(marriage-10, unions-14)
nsubjpass(required-20, then-16)
aux(required-20, would-17)
advmod(required-20, churches-18)
auxpass(required-20, be-19)
root(ROOT-0, required-20)
aux(perform-22, to-21)
xcomp(required-20, perform-22)
amod(ceremonies-25, homosexual-23)
nn(ceremonies-25, wedding-24)
dobj(perform-22, ceremonies-25)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (FRAG
        (ADVP (RB so))))
    (, ,)
    (SQ (MD would) (RB n't)
      (NP (DT this))
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN government))
            (VP (VBZ is)
              (VP (VBG telling)
                (NP
                  (NP (DT the) (NN church))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP it))
                      (VP (MD can)
                        (CC and)
                        (MD can) (RB not)
                        (VP (VB do))))))))))))
    (. ?)))

mark(so-2, If-1)
advcl(mean-7, so-2)
aux(mean-7, would-4)
neg(mean-7, n't-5)
nsubj(mean-7, this-6)
root(ROOT-0, mean-7)
complm(telling-12, that-8)
det(government-10, the-9)
nsubj(telling-12, government-10)
aux(telling-12, is-11)
ccomp(mean-7, telling-12)
det(church-14, the-13)
dobj(telling-12, church-14)
dobj(do-21, church-14)
rel(do-21, what-15)
nsubj(do-21, it-16)
aux(do-21, can-17)
rcmod(church-14, can-19)
aux(do-21, can-19)
conj_and(do-21, can-19)
neg(do-21, not-20)
rcmod(church-14, do-21)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (NP
      (NP (DT a) (JJ good) (NN idea))
      (PP (IN for)
        (NP (DT the) (NN government)
          (S
            (VP (TO to)
              (VP (VB get)
                (PP (IN into)
                  (NP
                    (NP (DT the) (`` ``) (NN business) ('' ''))
                    (PP (IN of)
                      (NP (NN religion)))))))))))
    (. ?)))

cop(idea-5, Is-1)
nsubj(idea-5, it-2)
det(idea-5, a-3)
amod(idea-5, good-4)
root(ROOT-0, idea-5)
det(government-8, the-7)
prep_for(idea-5, government-8)
aux(get-10, to-9)
infmod(government-8, get-10)
det(business-14, the-12)
prep_into(get-10, business-14)
prep_of(business-14, religion-17)

(ROOT
  (SQ (CC And)
    (SBAR (IN if)
      (S
        (NP (DT the) (NNS churches))
        (VP (VBP are)
          (VP (VBN forced)
            (S
              (VP (TO to)
                (VP (VB perform)
                  (NP (JJ homosexual) (NNS weddings)))))))))
    (, ,) (MD would)
    (NP (JJ gay) (NNS couples))
    (ADVP (RB automatically))
    (VP (VB be)
      (VP (VBN accepted)
        (PP (IN by)
          (NP (DT the) (NN congregation)))))
    (. ?)))

cc(accepted-17, And-1)
mark(forced-6, if-2)
det(churches-4, the-3)
nsubjpass(forced-6, churches-4)
xsubj(perform-8, churches-4)
auxpass(forced-6, are-5)
advcl(accepted-17, forced-6)
aux(perform-8, to-7)
xcomp(forced-6, perform-8)
amod(weddings-10, homosexual-9)
dobj(perform-8, weddings-10)
aux(accepted-17, would-12)
amod(couples-14, gay-13)
nsubjpass(accepted-17, couples-14)
advmod(accepted-17, automatically-15)
auxpass(accepted-17, be-16)
root(ROOT-0, accepted-17)
det(congregation-20, the-19)
agent(accepted-17, congregation-20)

