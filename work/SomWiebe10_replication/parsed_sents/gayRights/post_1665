(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (CD 2) (NN shot)
          (CC and)
          (JJ simple) (NNS points))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN made))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
num(shot-4, 2-3)
nsubj(are-2, shot-4)
amod(points-7, simple-6)
nsubj(are-2, points-7)
conj_and(shot-4, points-7)
aux(made-10, to-8)
auxpass(made-10, be-9)
infmod(shot-4, made-10)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Firstly))
        (, ,)
        (VP (VBZ is)
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT no) (NN need)
                  (S
                    (VP (TO to)
                      (VP (VB run)
                        (NP (DT a) (NN country))
                        (PP (VBN based)
                          (PP (IN on)
                            (NP (NN religion)))))))))))))
      (, ,)
      (NP (DT this))
      (VP
        (VP (VBD happened)
          (PP (IN in)
            (NP (NNP Saudi) (NNP Arabia))))
        (CC and)
        (VP (VBP look)
          (PP (IN at)
            (NP (DT the) (NN crime) (, ,) (NN injustice)
              (CC and)
              (NN autocracy)))
          (ADVP (RB there)))))
    (, ,)
    (S
      (ADVP (RB quite))
      (ADVP (RB simply))
      (NP (PRP we))
      (VP (MD should)
        (VP (VB run)
          (NP (DT a) (NN nation))
          (PP (VBN based)
            (PP (IN on)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT the) (NN majority))
                  (VP (VBP deem)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ acceptable)))))))))))))
    (, ,)
    (S
      (PP (IN in)
        (NP
          (NP (DT the) (NN case))
          (PP (IN of)
            (NP (PRP$ my) (NN country)))))
      (, ,)
      (NP (DT the) (NNP UK) (, ,) (JJ gay) (NN marriage))
      (VP (VBZ is)
        (ADJP (JJ acceptable))))
    (, ,)
    (S
      (NP (NN murder)
        (CC and)
        (NN rape))
      (VP (VBP are) (RB not)))
    (. .)))

advmod(is-3, Firstly-1)
ccomp(happened-18, is-3)
complm(is-6, that-4)
expl(is-6, there-5)
ccomp(is-3, is-6)
det(need-8, no-7)
nsubj(is-6, need-8)
aux(run-10, to-9)
infmod(need-8, run-10)
det(country-12, a-11)
dobj(run-10, country-12)
prep(run-10, based-13)
pcomp(based-13, on-14)
prep_on(based-13, religion-15)
nsubj(happened-18, this-17)
nsubj(look-23, this-17)
root(ROOT-0, happened-18)
nn(Arabia-21, Saudi-20)
prep_in(happened-18, Arabia-21)
conj_and(happened-18, look-23)
det(crime-26, the-25)
prep_at(look-23, crime-26)
prep_at(look-23, injustice-28)
conj_and(crime-26, injustice-28)
prep_at(look-23, autocracy-30)
conj_and(crime-26, autocracy-30)
advmod(look-23, there-31)
advmod(run-37, quite-33)
advmod(run-37, simply-34)
nsubj(run-37, we-35)
aux(run-37, should-36)
ccomp(happened-18, run-37)
det(nation-39, a-38)
dobj(run-37, nation-39)
prepc_based_on(run-37, on-41)
dep(deem-45, what-42)
det(majority-44, the-43)
nsubj(deem-45, majority-44)
xsubj(acceptable-48, majority-44)
pcomp(run-37, deem-45)
aux(acceptable-48, to-46)
cop(acceptable-48, be-47)
xcomp(deem-45, acceptable-48)
det(case-52, the-51)
prep_in(acceptable-63, case-52)
poss(country-55, my-54)
prep_of(case-52, country-55)
det(marriage-61, the-57)
nn(marriage-61, UK-58)
amod(marriage-61, gay-60)
nsubj(acceptable-63, marriage-61)
cop(acceptable-63, is-62)
ccomp(happened-18, acceptable-63)
nsubj(are-68, murder-65)
conj_and(murder-65, rape-67)
nsubj(are-68, rape-67)
ccomp(happened-18, are-68)
neg(are-68, not-69)

(ROOT
  (SBARQ
    (WHADVP (WRB Secondly))
    (PRN (, ,)
      (S
        (NP (NNS people))
        (VP (VBP do)
          (SBAR
            (S
              (NP (NNP NOT))
              (VP (VBP choose)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (JJ gay) (, ,) (JJ scientific) (NN evidence) (NNS shows))
                      (SBAR (IN that)
                        (S
                          (NP (NNS people))
                          (VP (VBP are)
                            (VP (VBN born)
                              (NP (NNP GAY))))))))))))))
      (, ,))
    (SQ (MD would)
      (NP (PRP you))
      (VP (RB not) (VB allow)
        (S
          (NP
            (NP (DT a) (NN person))
            (PP (IN with)
              (NP (NNS dyslexia)
                (CC or)
                (NNS downs) (NN syndrome))))
          (VP (TO to)
            (VP (VB marry))))))
    (. ?)))

advmod(allow-23, Secondly-1)
nsubj(do-4, people-3)
dep(allow-23, do-4)
nsubj(choose-6, NOT-5)
xsubj(shows-13, NOT-5)
ccomp(do-4, choose-6)
aux(shows-13, to-7)
cop(shows-13, be-8)
amod(shows-13, gay-9)
amod(shows-13, scientific-11)
nn(shows-13, evidence-12)
xcomp(choose-6, shows-13)
complm(born-17, that-14)
nsubjpass(born-17, people-15)
auxpass(born-17, are-16)
ccomp(shows-13, born-17)
dobj(born-17, GAY-18)
aux(allow-23, would-20)
nsubj(allow-23, you-21)
neg(allow-23, not-22)
root(ROOT-0, allow-23)
det(person-25, a-24)
nsubj(marry-32, person-25)
prep_with(person-25, dyslexia-27)
nn(syndrome-30, downs-29)
prep_with(person-25, syndrome-30)
conj_or(dyslexia-27, syndrome-30)
aux(marry-32, to-31)
xcomp(allow-23, marry-32)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (VP (VBN born)
        (S
          (ADJP (JJ different)
            (PP (TO to)
              (NP (PRP us)))))))
    (. .)))

nsubjpass(born-3, They-1)
auxpass(born-3, are-2)
root(ROOT-0, born-3)
acomp(born-3, different-4)
prep_to(different-4, us-6)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB sum)
          (PRT (RP up))
          (, ,)
          (NP
            (NP (NN anyone))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ feels)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (ADJP (JJ wrong)
                          (SBAR
                            (S
                              (VP (VBZ is)
                                (VP (VBG being)
                                  (PP (IN over)
                                    (NP (JJ religious)
                                      (CC and)
                                      (JJ fundamentalist))))))))))))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD can) (RB not)
      (VP (VB let)
        (S
          (NP
            (NP (DT a)
              (ADJP
                (NP (CD 2000) (NN year))
                (JJ old))
              (NN book))
            (PP (IN with)
              (NP (DT no) (JJ known) (NN author))))
          (VP (VB govern)
            (NP (DT the) (NNS freedoms))
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP have))))))))
    (. .)))

aux(sum-2, To-1)
purpcl(let-22, sum-2)
prt(sum-2, up-3)
dobj(sum-2, anyone-5)
nsubj(feels-7, anyone-5)
rcmod(anyone-5, feels-7)
complm(wrong-11, that-8)
nsubj(wrong-11, it-9)
cop(wrong-11, is-10)
ccomp(feels-7, wrong-11)
aux(being-13, is-12)
dep(wrong-11, being-13)
prep_over(being-13, religious-15)
prep_over(being-13, fundamentalist-17)
conj_and(religious-15, fundamentalist-17)
nsubj(let-22, we-19)
aux(let-22, can-20)
neg(let-22, not-21)
root(ROOT-0, let-22)
det(book-27, a-23)
num(year-25, 2000-24)
npadvmod(old-26, year-25)
amod(book-27, old-26)
nsubj(govern-32, book-27)
det(author-31, no-29)
amod(author-31, known-30)
prep_with(book-27, author-31)
ccomp(let-22, govern-32)
det(freedoms-34, the-33)
dobj(govern-32, freedoms-34)
nsubj(have-36, we-35)
dep(govern-32, have-36)

(ROOT
  (S
    (NP (DT A) (JJ simple) (NN referendum))
    (VP (MD will)
      (VP (VB fix)
        (NP (NNS things))))
    (. .)))

det(referendum-3, A-1)
amod(referendum-3, simple-2)
nsubj(fix-5, referendum-3)
aux(fix-5, will-4)
root(ROOT-0, fix-5)
dobj(fix-5, things-6)

