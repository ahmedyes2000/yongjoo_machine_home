(ROOT
  (S
    (S
      (NP (DT The) (NNP Bible))
      (VP (VBZ is)
        (ADJP (JJ clear))))
    (CC and)
    (S
      (NP (NNP God))
      (VP (VBD did)
        (VP (VB destroy)
          (NP (NNP Sodom)
            (CC and)
            (NNP Gomahara))
          (PP (IN over)
            (NP
              (NP (DT the) (`` ``) (JJ unnatural) ('' '') (NN sin))
              (PP (IN of)
                (NP (DT that) (NN city))))))))
    (. .)))

det(Bible-2, The-1)
nsubj(clear-4, Bible-2)
cop(clear-4, is-3)
root(ROOT-0, clear-4)
nsubj(destroy-8, God-6)
aux(destroy-8, did-7)
conj_and(clear-4, destroy-8)
dobj(destroy-8, Sodom-9)
dobj(destroy-8, Gomahara-11)
conj_and(Sodom-9, Gomahara-11)
det(sin-17, the-13)
amod(sin-17, unnatural-15)
prep_over(destroy-8, sin-17)
det(city-20, that-19)
prep_of(sin-17, city-20)

(ROOT
  (S
    (VP (VBG Winning)
      (NP (DT this) (NN argument))
      (PP (IN on)
        (NP (DT a) (NN website) (NNS changes) (NN nothing))))
    (. .)))

root(ROOT-0, Winning-1)
det(argument-3, this-2)
dobj(Winning-1, argument-3)
det(nothing-8, a-5)
nn(nothing-8, website-6)
nn(nothing-8, changes-7)
prep_on(Winning-1, nothing-8)

(ROOT
  (S
    (NP (DT The) (JJ final) (NN word))
    (VP (VBZ is)
      (PP (IN with)
        (NP
          (NP (DT the) (NN creator)
            (PRN (-LRB- -LRB-)
              (NP
                (NP (NN blah))
                (, ,)
                (NP (NN blah)))
              (-RRB- -RRB-))
            (NN aetheist))
          (, ,)
          (NP
            (NP (DT no) (NN god))
            (, ,)
            (NP (JJ yeah) (NN right))))))
    (. .)))

det(word-3, The-1)
amod(word-3, final-2)
nsubj(is-4, word-3)
root(ROOT-0, is-4)
det(aetheist-13, the-6)
nn(aetheist-13, creator-7)
dep(aetheist-13, blah-9)
appos(blah-9, blah-11)
prep_with(is-4, aetheist-13)
det(god-16, no-15)
appos(aetheist-13, god-16)
amod(right-19, yeah-18)
appos(god-16, right-19)

(ROOT
  (S
    (S
      (VP (VB Let)
        (S
          (NP (POS 's))
          (VP (VB see)
            (FRAG
              (SBAR
                (WHNP (WP$ whose)
                  (NP (JJ right)))
                (FRAG
                  (WHADVP (WRB when)))))))))
    (NP (PRP you))
    (VP (VBP die))
    (. .)))

dep(die-8, Let-1)
nsubj(see-3, 's-2)
ccomp(Let-1, see-3)
poss(right-5, whose-4)
dep(when-6, right-5)
dep(see-3, when-6)
nsubj(die-8, you-7)
root(ROOT-0, die-8)

(ROOT
  (S (RB Not)
    (NP (DT the) (NN time)
      (S
        (VP (TO to)
          (VP (VB discover)
            (NP (PRP you))))))
    (VP (VBD were)
      (ADJP (JJ wrong)))
    (. .)))

neg(wrong-8, Not-1)
det(time-3, the-2)
nsubj(wrong-8, time-3)
aux(discover-5, to-4)
infmod(time-3, discover-5)
dobj(discover-5, you-6)
cop(wrong-8, were-7)
root(ROOT-0, wrong-8)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (DT another))
    (VP (VBZ warning)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP
            (VP (VBP are))
            (CC and)
            (VP (MD will)
              (VP (VB be)
                (VP (VBN judged))))))))
    (. .)))

advmod(warning-4, Again-1)
nsubj(warning-4, another-3)
root(ROOT-0, warning-4)
complm(are-7, that-5)
nsubj(are-7, you-6)
nsubjpass(judged-11, you-6)
ccomp(warning-4, are-7)
aux(judged-11, will-9)
auxpass(judged-11, be-10)
ccomp(warning-4, judged-11)
conj_and(are-7, judged-11)

(ROOT
  (S
    (S
      (NP (DT The) (NN clock))
      (VP (VBZ is)
        (VP (VBG ticking))))
    (: ...)
    (S
      (VP (VB tick) (, ,) (VB tock) (, ,)
        (ADVP (RB tick))
        (, ,) (VB tock))
      (: ...))))

det(clock-2, The-1)
nsubj(ticking-4, clock-2)
aux(ticking-4, is-3)
root(ROOT-0, ticking-4)
parataxis(ticking-4, tick-6)
dep(tick-6, tock-8)
advmod(tick-6, tick-10)
dep(tick-6, tock-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hear)
      (NP (DT the) (NN closet) (NN calling)))
    (. .)))

nsubj(hear-2, I-1)
root(ROOT-0, hear-2)
det(calling-5, the-3)
nn(calling-5, closet-4)
dobj(hear-2, calling-5)

(ROOT
  (FRAG
    (ADVP (RB Now))
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBZ 's)
          (ADJP (JJ funny))))
      (: ...))))

root(ROOT-0, Now-1)
nsubj(funny-4, that-2)
cop(funny-4, 's-3)
dep(Now-1, funny-4)

