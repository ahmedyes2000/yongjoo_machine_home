(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG having)
        (NP (DT a) (JJ hard) (NN time) (RB not))
        (S
          (VP (VBG resorting)
            (PP (TO to)
              (NP (JJ petty) (NN argument) (NNS tactics)))
            (PP (JJ such))))
        (SBAR (IN as) (`` ``)
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ stupid))))
          ('' ''))))
    (. .)))

nsubj(having-3, I-1)
aux(having-3, 'm-2)
root(ROOT-0, having-3)
det(time-6, a-4)
amod(time-6, hard-5)
dobj(having-3, time-6)
neg(time-6, not-7)
xcomp(having-3, resorting-8)
amod(tactics-12, petty-10)
nn(tactics-12, argument-11)
prep_to(resorting-8, tactics-12)
prep(resorting-8, such-13)
mark(stupid-18, as-14)
nsubj(stupid-18, you-16)
cop(stupid-18, are-17)
advcl(having-3, stupid-18)

(ROOT
  (S (CC But)
    (VP (VB let)
      (S
        (NP (PRP me))
        (VP (VB be)
          (ADJP (JJ clear)))))
    (. .)))

cc(let-2, But-1)
root(ROOT-0, let-2)
nsubj(clear-5, me-3)
cop(clear-5, be-4)
ccomp(let-2, clear-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP ask)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP stop)
            (CC and)
            (VBP think)
            (PP (RB prior)
              (PP (TO to)
                (S
                  (VP (VBG engaging)
                    (PP (IN in)
                      (NP (NN discussion)))))))))))
    (. .)))

nsubj(ask-2, I-1)
root(ROOT-0, ask-2)
complm(stop-5, that-3)
nsubj(stop-5, you-4)
nsubj(think-7, you-4)
ccomp(ask-2, stop-5)
ccomp(ask-2, think-7)
conj_and(stop-5, think-7)
prepc_prior_to(stop-5, engaging-10)
prep_in(engaging-10, discussion-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (CD one) (JJ further) (NN question))
        (PP (IN for)
          (NP (PRP you)))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
num(question-5, one-3)
amod(question-5, further-4)
dobj(have-2, question-5)
prep_for(question-5, you-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (ADVP (RB homosexuality))
        (VP (VBZ goes)
          (PP (IN against)
            (NP (NN nature)))
          (SBAR (IN as)
            (S
              (NP (PRP you))
              (VP (VBP say)))))))
    (, ,)
    (NP (RB then))
    (VP (VBZ is)
      (NP
        (NP (PRP it))
        (SBAR
          (S
            (NP (DT a) (NN choice) (NNS people))
            (VP (VBP make))))))
    (. ?)))

mark(goes-3, If-1)
advmod(goes-3, homosexuality-2)
advcl(it-12, goes-3)
prep_against(goes-3, nature-5)
mark(say-8, as-6)
nsubj(say-8, you-7)
advcl(goes-3, say-8)
nsubj(it-12, then-10)
cop(it-12, is-11)
root(ROOT-0, it-12)
dobj(make-16, it-12)
det(people-15, a-13)
nn(people-15, choice-14)
nsubj(make-16, people-15)
rcmod(it-12, make-16)

(ROOT
  (SBARQ
    (FRAG (CC And)
      (PP (IN if)
        (ADVP (RB so))))
    (, ,)
    (SBARQ
      (WHADVP (WRB when))
      (SQ (VBD did)
        (NP (PRP you))
        (VP (VB choose)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ heterosexual))))))))
    (. ?)))

dep(choose-8, And-1)
dep(And-1, if-2)
pcomp(if-2, so-3)
advmod(choose-8, when-5)
aux(choose-8, did-6)
nsubj(choose-8, you-7)
xsubj(heterosexual-11, you-7)
root(ROOT-0, choose-8)
aux(heterosexual-11, to-9)
cop(heterosexual-11, be-10)
xcomp(choose-8, heterosexual-11)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB _))
    (VP (VBP ARE)
      (ADJP (RB _) (JJ stupid)))
    (. .)))

nsubj(stupid-5, You-1)
advmod(stupid-5, _-2)
cop(stupid-5, ARE-3)
advmod(stupid-5, _-4)
root(ROOT-0, stupid-5)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (VP (VBN gotten)
          (ADVP (DT that) (IN out))
          (PP (IN of)
            (NP (DT the) (NN way)))
          (, ,)
          (ADVP (VB let)))))
    (VP (VBZ 's)
      (VP (VB discuss)
        (SBARQ
          (WHADVP (WRB why)))))
    (. .)))

aux(gotten-2, Having-1)
csubj(discuss-11, gotten-2)
dep(gotten-2, that-3)
det(way-7, the-6)
prep_out_of(gotten-2, way-7)
advmod(gotten-2, let-9)
aux(discuss-11, 's-10)
root(ROOT-0, discuss-11)
dep(discuss-11, why-12)

(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (NP (PRP you))
    (VP (VBP think)
      (NP
        (NP (DT a) (NN boy))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ sees)
              (SBAR
                (S
                  (NP
                    (NP (DT a) (NN picture))
                    (PP (IN of)
                      (NP (DT a) (`` ``) (JJ normal) ('' '') (NN family))))
                  (VP (MD will)
                    (VP (VB be)
                      (VP (VBN confused)
                        (SBAR (IN that)
                          (S
                            (NP (PRP$ his) (`` ``) (NN mom) ('' ''))
                            (VP (VBZ has)
                              (NP (NNS muscles)))))))))))))))
    (. .)))

advmod(think-4, First-1)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
det(boy-6, a-5)
dobj(think-4, boy-6)
nsubj(sees-8, boy-6)
rcmod(boy-6, sees-8)
det(picture-10, a-9)
nsubjpass(confused-19, picture-10)
det(family-16, a-12)
amod(family-16, normal-14)
prep_of(picture-10, family-16)
aux(confused-19, will-17)
auxpass(confused-19, be-18)
ccomp(sees-8, confused-19)
complm(has-25, that-20)
poss(mom-23, his-21)
nsubj(has-25, mom-23)
ccomp(confused-19, has-25)
dobj(has-25, muscles-26)

(ROOT
  (S
    (NP (DT A)
      (ADJP (CD 2) (NN year) (JJ old)))
    (VP (VBZ is)
      (ADJP
        (ADJP (RB well) (JJ aware)
          (PP (IN of)
            (NP (NN gender) (NNS differences))))
        (CC and)
        (ADJP (RB perfectly) (JJ capable)
          (PP (IN of)
            (S
              (VP (VBG understanding)
                (SBAR (IN that)
                  (S
                    (NP (PRP he))
                    (VP (VBZ has)
                      (NP
                        (NP (CD two) (NNS dads))
                        (, ,)
                        (CONJP (RB rather) (IN than))
                        (NP
                          (NP (DT a) (NN mom))
                          (CC and)
                          (NP (DT a) (NN dad)))))))))))))
    (. .)))

det(old-4, A-1)
number(old-4, 2-2)
dep(old-4, year-3)
nsubj(aware-7, old-4)
nsubj(capable-13, old-4)
cop(aware-7, is-5)
advmod(aware-7, well-6)
root(ROOT-0, aware-7)
nn(differences-10, gender-9)
prep_of(aware-7, differences-10)
advmod(capable-13, perfectly-12)
conj_and(aware-7, capable-13)
prepc_of(capable-13, understanding-15)
complm(has-18, that-16)
nsubj(has-18, he-17)
ccomp(understanding-15, has-18)
num(dads-20, two-19)
dobj(has-18, dads-20)
det(mom-25, a-24)
dobj(has-18, mom-25)
conj_negcc(dads-20, mom-25)
det(dad-28, a-27)
conj_negcc(dads-20, dad-28)
conj_and(mom-25, dad-28)

(ROOT
  (S
    (ADVP (RB Secondly))
    (, ,)
    (NP (PRP you))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP (NN child))
          (VP (MD will)
            (VP (VB feel)
              (NP (NN hurt)
                (CC and)
                (NN pain))
              (PP (IN at)
                (NP (DT the) (`` ``) (JJ cruel) (NN truth) ('' ''))))))))
    (. .)))

advmod(believe-4, Secondly-1)
nsubj(believe-4, you-3)
root(ROOT-0, believe-4)
complm(feel-8, that-5)
nsubj(feel-8, child-6)
aux(feel-8, will-7)
ccomp(believe-4, feel-8)
dobj(feel-8, hurt-9)
dobj(feel-8, pain-11)
conj_and(hurt-9, pain-11)
det(truth-16, the-13)
amod(truth-16, cruel-15)
prep_at(feel-8, truth-16)

(ROOT
  (SBARQ
    (WHNP (WDT What)
      (NP (JJ cruel) (NN truth)))
    (SQ (VBZ is)
      (NP (DT that))
      (ADVP (RB exactly)))
    (. ?)))

det(truth-3, What-1)
amod(truth-3, cruel-2)
attr(is-4, truth-3)
root(ROOT-0, is-4)
nsubj(is-4, that-5)
advmod(is-4, exactly-6)

(ROOT
  (SBARQ
    (WHNP (WDT That)
      (NP (PRP he)))
    (SQ (VBD was)
      (VP (VBN adopted)
        (PP (IN by)
          (NP (CD two) (JJ loving) (NNS people)))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN given)
                (NP (DT a) (JJR better) (NN life))
                (SBAR (IN than)
                  (S
                    (NP (PRP he))
                    (ADVP (RB otherwise))
                    (VP (MD would)
                      (VP (VB have)
                        (VP (VBN had))))))))))))
    (. ?)))

det(he-2, That-1)
nsubjpass(adopted-4, he-2)
auxpass(adopted-4, was-3)
root(ROOT-0, adopted-4)
num(people-8, two-6)
amod(people-8, loving-7)
agent(adopted-4, people-8)
aux(given-11, to-9)
auxpass(given-11, be-10)
xcomp(adopted-4, given-11)
det(life-14, a-12)
amod(life-14, better-13)
dobj(given-11, life-14)
mark(had-20, than-15)
nsubj(had-20, he-16)
advmod(had-20, otherwise-17)
aux(had-20, would-18)
aux(had-20, have-19)
advcl(given-11, had-20)

(ROOT
  (S
    (ADVP (RB Finally))
    (, ,)
    (NP (NNP STD) (POS 's))
    (VP (VBP are)
      (ADJP (JJ contractable)
        (PP (IN by)
          (NP (NNS heterosexuals))))
      (ADVP (RB too)))
    (. .)))

advmod(contractable-6, Finally-1)
nsubj(contractable-6, STD-3)
possessive(STD-3, 's-4)
cop(contractable-6, are-5)
root(ROOT-0, contractable-6)
prep_by(contractable-6, heterosexuals-8)
advmod(contractable-6, too-9)

