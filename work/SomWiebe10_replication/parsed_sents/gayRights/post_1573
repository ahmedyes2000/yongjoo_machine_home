(ROOT
  (SINV (`` ``)
    (S
      (NP
        (NP (DT That) (NN guy))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD was)
              (VP (VBN engaged)
                (ADVP (RB then)))))))
      (`` ``)
      (VP (VBD turned)
        (NP (JJ gay))))
    ('' '')
    (VP (VBD was)
      (ADVP (RB already)))
    (NP (NNP gay))
    (. .)))

det(guy-3, That-2)
nsubjpass(engaged-6, guy-3)
nsubj(turned-9, guy-3)
auxpass(engaged-6, was-5)
rcmod(guy-3, engaged-6)
advmod(engaged-6, then-7)
ccomp(was-12, turned-9)
dobj(turned-9, gay-10)
root(ROOT-0, was-12)
advmod(was-12, already-13)
nsubj(was-12, gay-14)

(ROOT
  (S
    (NP (NNP Society))
    (VP (VBD told)
      (NP (PRP him))
      (SBAR
        (S
          (NP (PRP he))
          (VP (VBD was) (RB n't)
            (NP
              (NP (JJ gay))
              (, ,)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (SBAR
                      (WHADVP (WRB why))
                      (S
                        (NP (PRP it))
                        (VP (VBD took)
                          (ADVP (RB so) (RB long))
                          (S
                            (VP (TO to)
                              (VP (VB figure)
                                (PRT (RP out))))))))))))))))
    (. .)))

nsubj(told-2, Society-1)
root(ROOT-0, told-2)
dobj(told-2, him-3)
nsubj(gay-7, he-4)
cop(gay-7, was-5)
neg(gay-7, n't-6)
dep(told-2, gay-7)
nsubj('s-10, gay-7)
rcmod(gay-7, 's-10)
advmod(took-13, why-11)
nsubj(took-13, it-12)
xsubj(figure-17, it-12)
advcl('s-10, took-13)
advmod(long-15, so-14)
advmod(took-13, long-15)
aux(figure-17, to-16)
xcomp(took-13, figure-17)
prt(figure-17, out-18)

(ROOT
  (S ('' '')
    (NP (NNP Please))
    (VP (VBP give)
      (NP (PRP me))
      (NP
        (NP (DT an) (NN example))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NN society))
            (VP (VBZ tells)
              (NP (NN anyone))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ gay))))))))))
    (. .)))

nsubj(give-3, Please-2)
root(ROOT-0, give-3)
iobj(give-3, me-4)
det(example-6, an-5)
dobj(give-3, example-6)
advmod(tells-9, where-7)
nsubj(tells-9, society-8)
rcmod(example-6, tells-9)
dobj(tells-9, anyone-10)
aux(gay-13, to-11)
cop(gay-13, be-12)
xcomp(tells-9, gay-13)

(ROOT
  (S ('' '')
    (NP (NNP The))
    (ADVP (RB right)
      (PP (TO to)
        (NP (NN vote))))
    (VP (VBZ is)
      (VP (VBG being)
        (VP (VBN stolen)
          (PP (IN in)
            (NP (NNP CA))))))
    (. .)))

nsubjpass(stolen-8, The-2)
advmod(stolen-8, right-3)
prep_to(right-3, vote-5)
aux(stolen-8, is-6)
auxpass(stolen-8, being-7)
root(ROOT-0, stolen-8)
prep_in(stolen-8, CA-10)

(ROOT
  (S
    (ADVP (RB Twice))
    (S
      (NP
        (NP (DT the) (NN majority))
        (PP (IN of)
          (NP (NNS people))))
      (VP (VBD voted)
        (S
          (VP (TO to)
            (VP (VB define)
              (NP (NN marriage))
              (ADVP (RB clearly)))))))
    (CC and)
    (S
      (NP (RB twice) (DT the) (JJ homosexuality) (NN community))
      (VP (VBZ has)
        (VP (VBN tried)
          (S
            (VP (TO to)
              (VP (VB overturn)
                (NP
                  (NP (DT the) (NN will))
                  (PP (IN of)
                    (NP (DT the) (NNS people))))
                (PP (IN by)
                  (S
                    (VP (VBG using)
                      (NP (NNS judges)))))))))))
    (. .)))

advmod(voted-6, Twice-1)
det(majority-3, the-2)
nsubj(voted-6, majority-3)
xsubj(define-8, majority-3)
prep_of(majority-3, people-5)
root(ROOT-0, voted-6)
aux(define-8, to-7)
xcomp(voted-6, define-8)
dobj(define-8, marriage-9)
advmod(define-8, clearly-10)
advmod(community-15, twice-12)
det(community-15, the-13)
amod(community-15, homosexuality-14)
nsubj(tried-17, community-15)
xsubj(overturn-19, community-15)
aux(tried-17, has-16)
conj_and(voted-6, tried-17)
aux(overturn-19, to-18)
xcomp(tried-17, overturn-19)
det(will-21, the-20)
dobj(overturn-19, will-21)
det(people-24, the-23)
prep_of(will-21, people-24)
prepc_by(overturn-19, using-26)
dobj(using-26, judges-27)

(ROOT
  (S
    (NP
      (NP (DT The) (NN pursuit))
      (PP (IN of)
        (NP (NN happiness))))
    (VP (VBZ is)
      (PP (IN in)
        (NP
          (NP (DT the) (NN declaration))
          (PP (IN of)
            (NP
              (NP (NN independence))
              (CC and)
              (NP (RB not) (DT the) (NNP Constitution)))))))
    (. .)))

det(pursuit-2, The-1)
nsubj(is-5, pursuit-2)
prep_of(pursuit-2, happiness-4)
root(ROOT-0, is-5)
det(declaration-8, the-7)
prep_in(is-5, declaration-8)
prep_of(declaration-8, independence-10)
neg(Constitution-14, not-12)
det(Constitution-14, the-13)
prep_of(declaration-8, Constitution-14)
conj_and(independence-10, Constitution-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT this))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN justification))
            (PP (IN for)
              (NP (DT the) (NN right)
                (S
                  (VP (TO to)
                    (VP (VB marry)
                      (NP
                        (NP (NN whomever))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP want))))))))))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB also))
    (VP (VBZ justifies)
      (NP
        (NP (NN everything) (RB else))
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB think)
                (PP (IN of))
                (, ,)
                (ADVP
                  (ADVP (RB so) (RB long))
                  (SBAR (IN as)
                    (S
                      (NP (PRP it))
                      (VP (VBZ makes)
                        (S
                          (NP (DT the) (NN pursuer))
                          (ADJP (JJ happy)))))))))))))
    (. .)))

mark(justification-5, If-1)
nsubj(justification-5, this-2)
cop(justification-5, is-3)
det(justification-5, the-4)
advcl(justifies-17, justification-5)
det(right-8, the-7)
prep_for(justification-5, right-8)
aux(marry-10, to-9)
infmod(right-8, marry-10)
dobj(marry-10, whomever-11)
dobj(want-13, whomever-11)
nsubj(want-13, you-12)
rcmod(whomever-11, want-13)
nsubj(justifies-17, it-15)
advmod(justifies-17, also-16)
root(ROOT-0, justifies-17)
dobj(justifies-17, everything-18)
prep_of(think-22, everything-18)
advmod(everything-18, else-19)
nsubj(think-22, you-20)
aux(think-22, can-21)
rcmod(everything-18, think-22)
advmod(long-26, so-25)
advmod(think-22, long-26)
mark(makes-29, as-27)
nsubj(makes-29, it-28)
ccomp(long-26, makes-29)
det(pursuer-31, the-30)
nsubj(happy-32, pursuer-31)
xcomp(makes-29, happy-32)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (JJ constitutional) (NN right)
        (S
          (VP (TO to)
            (VP (VB marry)
              (NP
                (NP (NN whomever))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP want))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(right-5, no-3)
amod(right-5, constitutional-4)
nsubj(is-2, right-5)
aux(marry-7, to-6)
infmod(right-5, marry-7)
dobj(marry-7, whomever-8)
dobj(want-10, whomever-8)
nsubj(want-10, you-9)
rcmod(whomever-8, want-10)

(ROOT
  (S
    (NP (DT Every) (NN citizen))
    (VP (VBZ is)
      (ADJP (RB equally) (VBN protected)
        (PP (IN with)
          (NP (DT the) (NN right)
            (S
              (VP (TO to)
                (VP (VB marry)
                  (NP
                    (NP (DT a) (NN member))
                    (PP (IN of)
                      (NP (DT the) (JJ opposite) (NN sex)))))))))))
    (. .)))

det(citizen-2, Every-1)
nsubjpass(protected-5, citizen-2)
auxpass(protected-5, is-3)
advmod(protected-5, equally-4)
root(ROOT-0, protected-5)
det(right-8, the-7)
prep_with(protected-5, right-8)
aux(marry-10, to-9)
infmod(right-8, marry-10)
det(member-12, a-11)
dobj(marry-10, member-12)
det(sex-16, the-14)
amod(sex-16, opposite-15)
prep_of(member-12, sex-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (ADJP (JJ gay)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB marry))))))
    (. .)))

mark(gay-4, If-1)
nsubj(gay-4, you-2)
cop(gay-4, 're-3)
advcl(have-7, gay-4)
nsubj(have-7, you-6)
root(ROOT-0, have-7)
det(right-9, the-8)
dobj(have-7, right-9)
aux(marry-11, to-10)
infmod(right-9, marry-11)

(ROOT
  (SBARQ
    (FRAG (RB So)
      (ADVP (RB again)))
    (, ,)
    (SBARQ
      (WHNP
        (WHNP (WP what))
        (ADJP (JJ right)))
      (SQ (VBP are)
        (NP (PRP you))
        (VP (VBG being)
          (VP (VBN denied)))))
    (. ?)))

dep(denied-9, So-1)
dep(So-1, again-2)
attr(denied-9, what-4)
amod(what-4, right-5)
aux(denied-9, are-6)
nsubjpass(denied-9, you-7)
auxpass(denied-9, being-8)
root(ROOT-0, denied-9)

(ROOT
  (S
    (NP (NN Visitation) (NNS rights))
    (VP (VBP are)
      (ADVP (RB already))
      (VP (VBN granted)
        (PP (IN in)
          (NP
            (NP (DT the) (NN state))
            (PP (IN of)
              (NP (NNP CA)))))
        (, ,)
        (SBAR (IN as)
          (S
            (VP (VBP are)
              (NP
                (NP (NN inheritance))
                (CC and)
                (NP
                  (NP (DT all) (JJ other) (NNS rights))
                  (PP (IN of)
                    (NP
                      (NP (JJ married) (NNS couples))
                      (, ,)
                      (NP
                        (NP (NN es))
                        (PP (IN per)
                          (NP
                            (NP (NNP Gov.) (NNP Davis))
                            (PP (IN in)
                              (NP (CD 2000)))))))))))))))
    (. .)))

nn(rights-2, Visitation-1)
nsubjpass(granted-5, rights-2)
auxpass(granted-5, are-3)
advmod(granted-5, already-4)
root(ROOT-0, granted-5)
det(state-8, the-7)
prep_in(granted-5, state-8)
prep_of(state-8, CA-10)
mark(inheritance-14, as-12)
cop(inheritance-14, are-13)
advcl(granted-5, inheritance-14)
det(rights-18, all-16)
amod(rights-18, other-17)
advcl(granted-5, rights-18)
conj_and(inheritance-14, rights-18)
amod(couples-21, married-20)
prep_of(rights-18, couples-21)
appos(couples-21, es-23)
nn(Davis-26, Gov.-25)
prep_per(es-23, Davis-26)
prep_in(Davis-26, 2000-28)

(ROOT
  (S ('' '')
    (ADVP (RB Lol))
    (, ,)
    (VP (VBP see)
      (SBAR
        (S
          (ADVP (RB again))
          (, ,)
          (NP (PRP I))
          (VP (VBP am)
            (VP (VBN flabbergasted)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ is)
                    (ADJP (JJ impossible)
                      (PP (IN for)
                        (NP (PRP you))))
                    (S
                      (VP (TO to)
                        (VP (VB accept)
                          (SBAR (IN that)
                            (S
                              (NP (NN someone))
                              (VP (MD might)
                                (VP (VB have)
                                  (S
                                    (NP (DT an) (NN opinion))
                                    (ADJP (JJ different)))
                                  (PP (IN from)
                                    (NP (NNP yours))))))))))))))))))
    (. .)))

advmod(see-4, Lol-2)
root(ROOT-0, see-4)
advmod(flabbergasted-9, again-5)
nsubjpass(flabbergasted-9, I-7)
auxpass(flabbergasted-9, am-8)
ccomp(see-4, flabbergasted-9)
complm(impossible-13, that-10)
nsubj(impossible-13, it-11)
xsubj(accept-17, it-11)
cop(impossible-13, is-12)
ccomp(flabbergasted-9, impossible-13)
prep_for(impossible-13, you-15)
aux(accept-17, to-16)
xcomp(impossible-13, accept-17)
complm(have-21, that-18)
nsubj(have-21, someone-19)
aux(have-21, might-20)
ccomp(accept-17, have-21)
det(opinion-23, an-22)
nsubj(different-24, opinion-23)
xcomp(have-21, different-24)
prep_from(have-21, yours-26)

(ROOT
  (FRAG
    (NP (NNP ''))
    (ADVP (RB Really))
    (. ?)))

dep(''-1, Really-2)

(ROOT
  (S (IN So)
    (NP (DT no) (JJ gay) (NN person))
    (VP (VBZ has)
      (ADVP (RB ever))
      (VP (VBN been)
        (VP (VBN killed)
          (PP (IN for)
            (S
              (VP (VBG being)
                (ADJP (JJ gay))))))))
    (. ?)))

dep(killed-8, So-1)
det(person-4, no-2)
amod(person-4, gay-3)
nsubjpass(killed-8, person-4)
aux(killed-8, has-5)
advmod(killed-8, ever-6)
auxpass(killed-8, been-7)
root(ROOT-0, killed-8)
cop(gay-11, being-10)
prepc_for(killed-8, gay-11)

(ROOT
  (S (`` ``)
    (NP (JJ African) (JJ American) (NNS people))
    (VP (VBP have)
      (VP (VBN killed)
        (NP (JJ white) (NNS people))
        (ADVP (RB before))))
    (. .)))

amod(people-4, African-2)
amod(people-4, American-3)
nsubj(killed-6, people-4)
aux(killed-6, have-5)
root(ROOT-0, killed-6)
amod(people-8, white-7)
dobj(killed-6, people-8)
advmod(killed-6, before-9)

(ROOT
  (SQ (NNP Does)
    (NP (DT that))
    (VP (VB make)
      (NP (DT all) (JJ black) (NNS people) (NNS murderers)))
    (. ?)))

dep(make-3, Does-1)
nsubj(make-3, that-2)
root(ROOT-0, make-3)
det(murderers-7, all-4)
amod(murderers-7, black-5)
nn(murderers-7, people-6)
dobj(make-3, murderers-7)

(ROOT
  (FRAG
    (PP (IN Of)
      (NP (NN course) (RB not)))
    (. .)))

root(ROOT-0, Of-1)
pobj(Of-1, course-2)
neg(course-2, not-3)

(ROOT
  (S
    (NP
      (NP (DT The) (NN fact))
      (SBAR (IN that)
        (S
          (NP (DT some) (NN nut-case))
          (VP (VBZ has)
            (VP (VBN murdered)
              (NP (DT a) (JJ gay) (NN person))
              (SBAR (IN before)
                (S
                  (VP (VBZ does) (RB not)
                    (VP (VB make)
                      (NP
                        (NP (NN everyone))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ believes))))))))))))))
    (ADVP (RB homosexuality))
    (VP (VBZ is)
      (ADJP (JJ wrong)
        (PP (IN into)
          (NP (DT a) (NN murderer)))))
    (. .)))

det(fact-2, The-1)
nsubj(wrong-20, fact-2)
complm(murdered-7, that-3)
det(nut-case-5, some-4)
nsubj(murdered-7, nut-case-5)
aux(murdered-7, has-6)
dep(fact-2, murdered-7)
det(person-10, a-8)
amod(person-10, gay-9)
dobj(murdered-7, person-10)
mark(make-14, before-11)
aux(make-14, does-12)
neg(make-14, not-13)
advcl(murdered-7, make-14)
dobj(make-14, everyone-15)
nsubj(believes-17, everyone-15)
rcmod(everyone-15, believes-17)
advmod(wrong-20, homosexuality-18)
cop(wrong-20, is-19)
root(ROOT-0, wrong-20)
det(murderer-23, a-22)
prep_into(wrong-20, murderer-23)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (PP
      (PP (IN in)
        (NP
          (NP (NN fear))
          (PP (IN for)
            (NP (PRP$ your) (NN life)))))
      (ADVP (RB often)))
    (. ?)))

root(ROOT-0, Are-1)
nsubj(Are-1, you-2)
prep_in(Are-1, fear-4)
poss(life-7, your-6)
prep_for(fear-4, life-7)
dep(Are-1, often-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (S (IN so)
          (NP (PRP I))
          (VP (VBP am)
            (ADJP (JJ sad))))
        (, ,)
        (CC but)
        (S
          (NP (PRP I))
          (ADVP (NN sort) (IN of))
          (VP (VBP doubt)
            (NP (PRP it))))))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (ADVP (RB just))
      (NP
        (NP
          (NP (RB not) (DT the) (NN way))
          (SBAR
            (S
              (NP (DT the) (NN world))
              (VP (VBZ is)
                (ADVP (RB anymore))))))
        (PRN (-LRB- -LRB-)
          (PP (IN in)
            (NP (DT this) (NN country)))
          (-RRB- -RRB-))))
    (. .)))

mark(sad-5, If-1)
dep(sad-5, so-2)
nsubj(sad-5, I-3)
cop(sad-5, am-4)
advcl(way-19, sad-5)
nsubj(doubt-11, I-8)
dep(of-10, sort-9)
advmod(doubt-11, of-10)
conj_but(sad-5, doubt-11)
advcl(way-19, doubt-11)
dobj(doubt-11, it-12)
nsubj(way-19, that-14)
cop(way-19, 's-15)
advmod(way-19, just-16)
neg(way-19, not-17)
det(way-19, the-18)
root(ROOT-0, way-19)
det(world-21, the-20)
nsubj(is-22, world-21)
rcmod(way-19, is-22)
advmod(is-22, anymore-23)
dep(way-19, in-25)
det(country-27, this-26)
pobj(in-25, country-27)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (ADJP (JJ afraid)
      (S
        (VP (TO to)
          (VP (VB express)
            (NP (PRP$ your) (NN opinion))
            (PP (IN about)
              (NP (DT this) (NN topic)))))))
    (. ?)))

cop(afraid-3, Are-1)
nsubj(afraid-3, you-2)
root(ROOT-0, afraid-3)
aux(express-5, to-4)
xcomp(afraid-3, express-5)
poss(opinion-7, your-6)
dobj(express-5, opinion-7)
det(topic-10, this-9)
prep_about(express-5, topic-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP doubt)
      (NP (PRP it)))
    (. .)))

nsubj(doubt-2, I-1)
root(ROOT-0, doubt-2)
dobj(doubt-2, it-3)

(ROOT
  (S ('' '')
    (NP (NNP Please))
    (VP (VBP give)
      (NP (PRP me))
      (NP
        (NP (DT an) (NN example))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NN society))
            (VP (VBZ tells)
              (NP (NN anyone))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ gay))))))))))
    (. .)))

nsubj(give-3, Please-2)
root(ROOT-0, give-3)
iobj(give-3, me-4)
det(example-6, an-5)
dobj(give-3, example-6)
advmod(tells-9, where-7)
nsubj(tells-9, society-8)
rcmod(example-6, tells-9)
dobj(tells-9, anyone-10)
aux(gay-13, to-11)
cop(gay-13, be-12)
xcomp(tells-9, gay-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am))
    (. .)))

nsubj(am-2, I-1)
root(ROOT-0, am-2)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP tell)
          (NP
            (NP (NNS people))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP I))
                (VP (VBP think))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP LOSE)
      (NP (NNP MY) (NNP JOB)))
    (. .)))

mark(tell-3, If-1)
nsubj(tell-3, I-2)
advcl(LOSE-10, tell-3)
dobj(tell-3, people-4)
dobj(think-7, people-4)
rel(think-7, what-5)
nsubj(think-7, I-6)
rcmod(people-4, think-7)
nsubj(LOSE-10, I-9)
root(ROOT-0, LOSE-10)
nn(JOB-12, MY-11)
dobj(LOSE-10, JOB-12)

(ROOT
  (S
    (SQ
      (NP (DT That))
      (VP (VBZ 's)
        (ADJP (VBN why)
          (PRN
            (S
              (NP (PRP I))
              (VP (VBZ post)
                (NP (RB here))
                (FRAG
                  (ADVP (RB anonymously))
                  (: :))))
            (-RRB- -RRB-)))))
    ('' '')
    (NP (DT The) (NNP Mormon)
      (CC and)
      (JJ catholic) (NNS churches))
    (PRN (, ,)
      (PP (CC but)
        (NP (RB especially) (DT the) (JJ Mormon) (NNS churches)))
      (, ,))
    (VP (VBD spent)
      (SBAR
        (S
          (NP
            (NP (NNS millions))
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB deny)
                    (NP
                      (NP (DT a) (NN group))
                      (PP (IN of)
                        (NP (NNS people))))
                    (NP
                      (NP (DT a) (JJ human) (NN right))
                      ('' '')
                      (VP (VBG Marrying)
                        (NP
                          (NP (NNS members))
                          (PP (IN of)
                            (NP (DT the) (JJ same) (NN sex)))))))))))
          (VP (VBZ is) (RB not)
            (NP (DT a) (JJ human) (NN right))))))
    (. .)))

nsubjpass(why-3, That-1)
auxpass(why-3, 's-2)
dep(spent-23, why-3)
nsubj(post-5, I-4)
dep(why-3, post-5)
dobj(post-5, here-6)
dep(post-5, anonymously-7)
det(churches-15, The-11)
nn(churches-15, Mormon-12)
conj_and(Mormon-12, catholic-14)
nn(churches-15, catholic-14)
nsubj(spent-23, churches-15)
dep(spent-23, but-17)
advmod(churches-21, especially-18)
det(churches-21, the-19)
amod(churches-21, Mormon-20)
dep(but-17, churches-21)
root(ROOT-0, spent-23)
xsubj(deny-27, millions-24)
nsubj(right-46, millions-24)
partmod(millions-24, trying-25)
aux(deny-27, to-26)
xcomp(trying-25, deny-27)
det(group-29, a-28)
iobj(deny-27, group-29)
prep_of(group-29, people-31)
det(right-34, a-32)
amod(right-34, human-33)
dobj(deny-27, right-34)
partmod(right-34, Marrying-36)
dobj(Marrying-36, members-37)
det(sex-41, the-39)
amod(sex-41, same-40)
prep_of(members-37, sex-41)
cop(right-46, is-42)
neg(right-46, not-43)
det(right-46, a-44)
amod(right-46, human-45)
ccomp(spent-23, right-46)

(ROOT
  (FRAG
    (ADVP (RB Sorry))
    (. .)))

root(ROOT-0, Sorry-1)

(ROOT
  (S
    (SBAR (IN Until)
      (S
        (NP (PRP you))
        (VP (MD can)
          (VP (VB show)
            (NP (PRP me))
            (SBAR
              (WHNP (WP what))
              (S
                (NP (JJ human) (NN right))
                (VP (VBZ is)
                  (VP (VBG being)
                    (VP (VBN denied))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (RB else))
            (VP (TO to)
              (VP (VB go)
                (PP (IN with)
                  (NP (DT this)))))))))
    (. .)))

mark(show-4, Until-1)
nsubj(show-4, you-2)
aux(show-4, can-3)
advcl(know-16, show-4)
dobj(show-4, me-5)
dobj(denied-11, what-6)
amod(right-8, human-7)
nsubjpass(denied-11, right-8)
aux(denied-11, is-9)
auxpass(denied-11, being-10)
dep(show-4, denied-11)
nsubj(know-16, I-13)
aux(know-16, do-14)
neg(know-16, n't-15)
root(ROOT-0, know-16)
advmod(go-20, where-17)
nsubj(go-20, else-18)
aux(go-20, to-19)
xcomp(know-16, go-20)
prep_with(go-20, this-22)

(ROOT
  (S
    (ADVP (RB As) (RB far)
      (SBAR (IN as)
        (S
          (NP (DT the) (NNS donations))
          (VP (VBP go)))))
    (, ,)
    (NP (DT the) (NNP Mormon) (NN church) (NNP DID) (NNP NOT))
    (VP (VB DONATE)
      (NP (DT A) (NN DIME)))
    (. .)))

advmod(far-2, As-1)
advmod(DONATE-13, far-2)
mark(go-6, as-3)
det(donations-5, the-4)
nsubj(go-6, donations-5)
ccomp(far-2, go-6)
det(NOT-12, the-8)
nn(NOT-12, Mormon-9)
nn(NOT-12, church-10)
nn(NOT-12, DID-11)
nsubj(DONATE-13, NOT-12)
root(ROOT-0, DONATE-13)
det(DIME-15, A-14)
dobj(DONATE-13, DIME-15)

(ROOT
  (S
    (NP (DT Neither))
    (VP (VBD did)
      (NP
        (NP (DT the) (JJ Catholic) (NN church))
        (PRN (-LRB- -LRB-)
          (S
            (NP (PRP I))
            (VP (VBP think) (, ,)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP 'm) (RB not)
                    (ADJP (JJ positive)
                      (PP (IN about)
                        (NP (PRP them)))))))))
          (-RRB- -RRB-))))
    (. .)))

nsubj(did-2, Neither-1)
root(ROOT-0, did-2)
det(church-5, the-3)
amod(church-5, Catholic-4)
dobj(did-2, church-5)
nsubj(think-8, I-7)
dep(church-5, think-8)
nsubj(positive-13, I-10)
cop(positive-13, 'm-11)
neg(positive-13, not-12)
ccomp(think-8, positive-13)
prep_about(positive-13, them-15)

(ROOT
  (S
    (NP
      (NP (NNS MEMBERS))
      (PP (IN of)
        (NP
          (NP (DT these) (NNS churches))
          (VP (VBN donated)
            (PP (TO to)
              (NP
                (NP (DT a) (NN cause))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBD believed))))))))))
    (VP (VBD was)
      (ADJP (JJ right)))
    (. .)))

nsubj(right-12, MEMBERS-1)
det(churches-4, these-3)
prep_of(MEMBERS-1, churches-4)
partmod(churches-4, donated-5)
det(cause-8, a-7)
prep_to(donated-5, cause-8)
dobj(believed-10, cause-8)
nsubj(believed-10, they-9)
rcmod(cause-8, believed-10)
cop(right-12, was-11)
root(ROOT-0, right-12)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP have)
      (NP (DT the) (NN right)))
    (. .)))

nsubj(have-2, They-1)
root(ROOT-0, have-2)
det(right-4, the-3)
dobj(have-2, right-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN problem))
        (PP (IN with)
          (NP (NNS protests)))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(problem-4, no-3)
dobj(have-2, problem-4)
prep_with(problem-4, protests-6)

(ROOT
  (S ('' '')
    (PP
      (NP (CD One) (NN example))
      (IN of)
      (NP
        (NP (NN society))
        (VP (VBG telling)
          (NP (NN someone))
          (NP (PRP they)))))
    (VP (VBP 're)
      (ADJP (JJ gay)))
    (. ?)))

num(example-3, One-2)
npadvmod(gay-10, example-3)
prep_of(gay-10, society-5)
partmod(society-5, telling-6)
iobj(telling-6, someone-7)
dobj(telling-6, they-8)
cop(gay-10, 're-9)
root(ROOT-0, gay-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN problem))
        (PP (IN with)
          (NP
            (NP (NN vandalism) (, ,) (NN violence) (, ,) (NN riots) (, ,) (NN assault) (, ,) (NN disenfranchisement) (, ,)
              (CC and)
              (NN attack))
            (PP (IN of)
              (NP (JJ religious) (NN liberty)))
            (PRN (-LRB- -LRB-)
              (VP (VBG suing)
                (S
                  (VP (TO to)
                    (VP (VB remove)
                      (NP
                        (NP (NN tax) (JJ exempt) (NN status))
                        (PP (IN of)
                          (NP
                            (NP (NNS people))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBP disagree)
                                  (PP (IN with)
                                    (NP (PRP them)))))))))))))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(problem-4, a-3)
dobj(have-2, problem-4)
prep_with(problem-4, vandalism-6)
prep_with(problem-4, violence-8)
conj_and(vandalism-6, violence-8)
prep_with(problem-4, riots-10)
conj_and(vandalism-6, riots-10)
prep_with(problem-4, assault-12)
conj_and(vandalism-6, assault-12)
prep_with(problem-4, disenfranchisement-14)
conj_and(vandalism-6, disenfranchisement-14)
prep_with(problem-4, attack-17)
conj_and(vandalism-6, attack-17)
amod(liberty-20, religious-19)
prep_of(vandalism-6, liberty-20)
dep(vandalism-6, suing-22)
aux(remove-24, to-23)
xcomp(suing-22, remove-24)
nn(status-27, tax-25)
amod(status-27, exempt-26)
dobj(remove-24, status-27)
prep_of(status-27, people-29)
nsubj(disagree-31, people-29)
rcmod(people-29, disagree-31)
prep_with(disagree-31, them-33)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBN opposed)
          (PP (TO to)
            (NP (PRP it)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT the) (NN homosexuality))
              (VP (VBD was)
                (VP
                  (VP (VBN attacked))
                  (CC and)
                  (VP (VBN mocked)
                    (CC and)
                    (VBN derided)))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP oppose)
        (NP (PRP it))
        (ADVP (RB now))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP they))
            (VP (VBP do)
              (NP (DT the) (JJ same) (NN thing))
              (PP (TO to)
                (NP (PRP$ their) (NNS enemies))))))))
    (. .)))

nsubjpass(opposed-3, I-1)
auxpass(opposed-3, was-2)
root(ROOT-0, opposed-3)
prep_to(opposed-3, it-5)
advmod(attacked-10, when-6)
det(homosexuality-8, the-7)
nsubjpass(attacked-10, homosexuality-8)
nsubjpass(mocked-12, homosexuality-8)
auxpass(attacked-10, was-9)
advcl(opposed-3, attacked-10)
advcl(opposed-3, mocked-12)
conj_and(attacked-10, mocked-12)
conj_and(attacked-10, derided-14)
conj_and(mocked-12, derided-14)
nsubj(oppose-17, I-16)
parataxis(opposed-3, oppose-17)
dobj(oppose-17, it-18)
advmod(oppose-17, now-19)
advmod(do-22, when-20)
nsubj(do-22, they-21)
advcl(oppose-17, do-22)
det(thing-25, the-23)
amod(thing-25, same-24)
dobj(do-22, thing-25)
poss(enemies-28, their-27)
prep_to(do-22, enemies-28)

(ROOT
  (FRAG
    (NP (PRP You))
    (. !)))

root(ROOT-0, You-1)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB just))
    (VP (VBD did))
    (. !)))

nsubj(did-3, You-1)
advmod(did-3, just-2)
root(ROOT-0, did-3)

(ROOT
  (S
    (VP
      (PP (TO To)
        (NP (NNP Joe))))
    (. .)))

root(ROOT-0, To-1)
pobj(To-1, Joe-2)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (NP (DT another) (NN example)))))
    (VP (VBP look)
      (PP (IN at)
        (NP
          (NP (DT any) (NN showing))
          (PP (IN of)
            (NP
              (NP (DT a) (JJ gay) (NN person))
              (PP (IN on)
                (NP (DT a) (NN TV) (NN show))))))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
csubj(look-6, want-3)
det(example-5, another-4)
dobj(want-3, example-5)
root(ROOT-0, look-6)
det(showing-9, any-8)
prep_at(look-6, showing-9)
det(person-13, a-11)
amod(person-13, gay-12)
prep_of(showing-9, person-13)
det(show-17, a-15)
nn(show-17, TV-16)
prep_on(person-13, show-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP act)
          (PP (IN like)
            (NP (NNP x))))))
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (JJ gay)))
    (. .)))

mark(act-3, If-1)
nsubj(act-3, you-2)
advcl(gay-8, act-3)
prep_like(act-3, x-5)
nsubj(gay-8, you-6)
cop(gay-8, are-7)
root(ROOT-0, gay-8)

