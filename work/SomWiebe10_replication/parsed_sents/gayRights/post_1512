(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would)
      (NP (NN anyone))
      (VP (VB chop)
        (NP (PRP you))
        (PP (TO to)
          (NP (NNS pieces)))
        (PP (IN for)
          (S
            (VP (VBG putting)
              (PRT (RP up))
              (NP (DT a)
                (ADJP (RB well) (VBN written))
                (NN rebuttal)))))))
    (. ?)))

advmod(chop-4, Why-1)
aux(chop-4, would-2)
nsubj(chop-4, anyone-3)
root(ROOT-0, chop-4)
dobj(chop-4, you-5)
prep_to(chop-4, pieces-7)
prepc_for(chop-4, putting-9)
prt(putting-9, up-10)
det(rebuttal-14, a-11)
advmod(written-13, well-12)
amod(rebuttal-14, written-13)
dobj(putting-9, rebuttal-14)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (NP
      (NP (PRP me))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP fear)))))
    (. ?)))

cop(me-3, Is-1)
nsubj(me-3, it-2)
root(ROOT-0, me-3)
dobj(fear-5, me-3)
nsubj(fear-5, you-4)
rcmod(me-3, fear-5)

(ROOT
  (FRAG (RB Not)
    (NP
      (NP (DT the) (JJ Catholic) (NN church))
      (PP (CC but)
        (NP (NNS others))))
    (. .)))

root(ROOT-0, Not-1)
det(church-4, the-2)
amod(church-4, Catholic-3)
dep(Not-1, church-4)
prep(church-4, but-5)
dep(but-5, others-6)

(ROOT
  (S
    (NP (DT Some))
    (ADVP (RB even))
    (VP (VBP ordain)
      (NP (JJ gay) (NNS people))
      (PP (IN into)
        (NP
          (NP (DT the) (NN priesthood))
          (CC or)
          (NP (DT the) (NN ministry)))))
    (. .)))

nsubj(ordain-3, Some-1)
advmod(ordain-3, even-2)
root(ROOT-0, ordain-3)
amod(people-5, gay-4)
dobj(ordain-3, people-5)
det(priesthood-8, the-7)
prep_into(ordain-3, priesthood-8)
det(ministry-11, the-10)
prep_into(ordain-3, ministry-11)
conj_or(priesthood-8, ministry-11)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ tells)
      (NP (PRP me))
      (NP
        (NP (NN something))
        (SBAR
          (S
            (VP (VBZ has)
              (VP (VBN changed)
                (PP (IN through)
                  (NP (DT the) (NNS years)))))))))
    (. .)))

nsubj(tells-2, That-1)
root(ROOT-0, tells-2)
iobj(tells-2, me-3)
dobj(tells-2, something-4)
aux(changed-6, has-5)
rcmod(something-4, changed-6)
det(years-9, the-8)
prep_through(changed-6, years-9)

(ROOT
  (SQ (MD Could)
    (NP (PRP it))
    (VP (VB be)
      (NP
        (NP (DT the) (JJ medical) (NNS findings))
        (PP (IN of)
          (NP
            (NP (PDT all) (DT those) (JJ poor) (JJ dead) (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBN succumbed)
                  (PP (TO to)
                    (NP
                      (NP (NNP AIDS))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBD changed)
                            (NP (PRP$ their) (NNS minds))))))))))))))
    (. ?)))

aux(findings-6, Could-1)
nsubj(findings-6, it-2)
cop(findings-6, be-3)
det(findings-6, the-4)
amod(findings-6, medical-5)
root(ROOT-0, findings-6)
predet(people-12, all-8)
det(people-12, those-9)
amod(people-12, poor-10)
amod(people-12, dead-11)
prep_of(findings-6, people-12)
nsubj(succumbed-14, people-12)
rcmod(people-12, succumbed-14)
prep_to(succumbed-14, AIDS-16)
nsubj(changed-18, AIDS-16)
rcmod(AIDS-16, changed-18)
poss(minds-20, their-19)
dobj(changed-18, minds-20)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB certainly))
    (VP (MD would)
      (VP
        (VP (VB mine))
        (CC or)
        (PRN
          (PP (IN at)
            (NP (DT the) (RB very) (JJS least)))
          (, ,))
        (VP (VB re-think)
          (NP (PRP it)))))
    (. .)))

nsubj(mine-4, It-1)
nsubj(re-think-11, It-1)
advmod(mine-4, certainly-2)
aux(mine-4, would-3)
root(ROOT-0, mine-4)
dep(mine-4, at-6)
det(least-9, the-7)
advmod(least-9, very-8)
pobj(at-6, least-9)
conj_or(mine-4, re-think-11)
dobj(re-think-11, it-12)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NNS people))
        (VP (VBP are)
          (VP (VBN born)
            (NP (DT this) (NN way))))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (PRP they))
      (VP (VB help)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP they))
            (VP (VBD were)
              (VP (VBN born)
                (S
                  (VP (TO to)
                    (VP (VB be))))))))))
    (. ?)))

mark(born-4, If-1)
nsubjpass(born-4, people-2)
auxpass(born-4, are-3)
advcl(help-11, born-4)
det(way-6, this-5)
dobj(born-4, way-6)
advmod(help-11, how-8)
aux(help-11, can-9)
nsubj(help-11, they-10)
root(ROOT-0, help-11)
dobj(born-15, what-12)
nsubjpass(born-15, they-13)
xsubj(be-17, they-13)
auxpass(born-15, were-14)
ccomp(help-11, born-15)
aux(be-17, to-16)
xcomp(born-15, be-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN heard)
          (PP (IN of)
            (NP
              (NP (NNS people))
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB repress)
                      (NP (PRP$ their) (NN desire)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (PP (IN with)
                                (NP (PRP$ their) (JJ own) (NN sex))))))))))))))))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP they))
              (VP (MD could)
                (ADVP (RB possibly))
                (VP (VB know)
                  (PP (IN about)
                    (NP (PRP$ their) (NNS hormones))))))))))
    (. !)))

nsubj(heard-3, I-1)
aux(heard-3, 've-2)
root(ROOT-0, heard-3)
prep_of(heard-3, people-5)
xsubj(repress-8, people-5)
partmod(people-5, trying-6)
aux(repress-8, to-7)
xcomp(trying-6, repress-8)
poss(desire-10, their-9)
dobj(repress-8, desire-10)
aux(be-12, to-11)
infmod(desire-10, be-12)
poss(sex-16, their-14)
amod(sex-16, own-15)
prep_with(be-12, sex-16)
nsubj(know-21, I-18)
aux(know-21, do-19)
neg(know-21, n't-20)
conj_but(heard-3, know-21)
advmod(know-26, how-22)
nsubj(know-26, they-23)
aux(know-26, could-24)
advmod(know-26, possibly-25)
ccomp(know-21, know-26)
poss(hormones-29, their-28)
prep_about(know-26, hormones-29)

(ROOT
  (S
    (NP (JJ Many) (NNPS Catholics))
    (VP (VBP have)
      (VP (VBN tried)
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT the) (NN church))
                  (VP (VBZ says)
                    (SBAR
                      (S
                        (VP (VBZ is)
                          (ADJP (JJ right)
                            (S
                              (VP (TO to)
                                (VP (VB do)
                                  (S (: ...)
                                    (S
                                      (NP (DT some))
                                      (VP (VBP have)
                                        (VP (VBN failed))))
                                    (CC and)
                                    (S
                                      (NP (DT some))
                                      (VP (VBP have) (RB not))))))))
                          (, ,)
                          (PP (IN on)
                            (NP (DT some) (NN level))))))))))))))
    (. .)))

amod(Catholics-2, Many-1)
nsubj(tried-4, Catholics-2)
xsubj(do-6, Catholics-2)
aux(tried-4, have-3)
root(ROOT-0, tried-4)
aux(do-6, to-5)
xcomp(tried-4, do-6)
dep(says-10, what-7)
nsubj(right-12, what-7)
det(church-9, the-8)
nsubj(says-10, church-9)
ccomp(do-6, says-10)
cop(right-12, is-11)
ccomp(says-10, right-12)
aux(do-14, to-13)
xcomp(right-12, do-14)
nsubj(failed-18, some-16)
aux(failed-18, have-17)
dep(do-14, failed-18)
nsubj(have-21, some-20)
dep(do-14, have-21)
conj_and(failed-18, have-21)
neg(have-21, not-22)
det(level-26, some-25)
prep_on(right-12, level-26)

(ROOT
  (S
    (VP (VB Look)
      (PP (IN at)
        (NP
          (NP (PRP it))
          (NP (DT this) (NN way))))
      (PP (IN for)
        (NP (DT a) (NN moment))))
    (. .)))

root(ROOT-0, Look-1)
prep_at(Look-1, it-3)
det(way-5, this-4)
dep(it-3, way-5)
det(moment-8, a-7)
prep_for(Look-1, moment-8)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (ADJP (RB straight))))
    (: ...)
    (S
      (NP (PRP you))
      (VP (VBD were)
        (VP (VBN born)
          (NP (DT that) (NN way)))))
    (. .)))

nsubj(straight-3, You-1)
cop(straight-3, 're-2)
root(ROOT-0, straight-3)
nsubjpass(born-7, you-5)
auxpass(born-7, were-6)
parataxis(straight-3, born-7)
det(way-9, that-8)
dobj(born-7, way-9)

(ROOT
  (S
    (NP
      (NP (CD 90) (NN %))
      (PP (IN of)
        (NP
          (NP (DT the) (NN rest))
          (PP (IN of)
            (NP (DT the) (NN world))))))
    (VP (VBZ is)
      (ADJP (JJ gay))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (VP (VBN born)
              (NP (DT that) (NN way)))))))
    (. .)))

num(%-2, 90-1)
nsubj(gay-10, %-2)
det(rest-5, the-4)
prep_of(%-2, rest-5)
det(world-8, the-7)
prep_of(rest-5, world-8)
cop(gay-10, is-9)
root(ROOT-0, gay-10)
mark(born-14, because-11)
nsubjpass(born-14, they-12)
auxpass(born-14, were-13)
advcl(gay-10, born-14)
det(way-16, that-15)
dobj(born-14, way-16)

(ROOT
  (SQ
    (SQ (MD Could)
      (NP (NN I)
        (CC or)
        (NN anyone))
      (VP (VB convince)
        (NP (PRP you))))
    (, ,)
    (CC or)
    (SQ (MD would)
      (NP (PRP you))
      (VP (VB be)
        (ADJP (JJ happy))
        (SBAR (IN if)
          (S
            (NP (NN someone))
            (VP (VBD were)
              (S
                (VP (TO to)
                  (VP (VB try)
                    (CC and)
                    (VB change)
                    (NP (PRP you))
                    (PP (IN into)
                      (S
                        (VP (VBG being)
                          (ADJP (JJ gay)))))))))))))
    (. ?)))

aux(convince-5, Could-1)
nsubj(convince-5, I-2)
conj_or(I-2, anyone-4)
nsubj(convince-5, anyone-4)
root(ROOT-0, convince-5)
dobj(convince-5, you-6)
aux(happy-12, would-9)
nsubj(happy-12, you-10)
cop(happy-12, be-11)
conj_or(convince-5, happy-12)
mark(were-15, if-13)
nsubj(were-15, someone-14)
advcl(happy-12, were-15)
aux(try-17, to-16)
xcomp(were-15, try-17)
xcomp(were-15, change-19)
conj_and(try-17, change-19)
dobj(try-17, you-20)
cop(gay-23, being-22)
prepc_into(try-17, gay-23)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (SBAR (IN that)
            (S
              (VP (MD would)
                (VP (VB be)
                  (ADJP (JJ possible)))))))))
    (, ,)
    (VP (VBP do))
    (NP (PRP you))
    (. ?)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
ccomp(do-10, think-4)
complm(possible-8, that-5)
aux(possible-8, would-6)
cop(possible-8, be-7)
ccomp(think-4, possible-8)
root(ROOT-0, do-10)
nsubj(do-10, you-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB also))
      (ADJP (JJ interesting)
        (PP (TO to)
          (NP (PRP me))))
      (SBAR (IN that)
        (S
          (NP (DT the) (NNS churches))
          (VP (VBP have)
            (VP (VBN softened)
              (NP
                (NP (PRP$ their) (NNS views))
                (PP (IN of)
                  (NP (DT this))))
              (ADVP (RB too)))))))
    (. .)))

nsubj(interesting-4, It-1)
cop(interesting-4, 's-2)
advmod(interesting-4, also-3)
root(ROOT-0, interesting-4)
prep_to(interesting-4, me-6)
complm(softened-11, that-7)
det(churches-9, the-8)
nsubj(softened-11, churches-9)
aux(softened-11, have-10)
ccomp(interesting-4, softened-11)
poss(views-13, their-12)
dobj(softened-11, views-13)
prep_of(views-13, this-15)
advmod(softened-11, too-16)

