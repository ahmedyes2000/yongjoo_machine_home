(ROOT
  (S
    (NP
      (NP (NNP First))
      (PP (IN of)
        (NP
          (NP (DT all))
          (, ,)
          (NP (DT these) (NNS groups)))))
    (VP (VBP are)
      (ADJP (RB too) (JJ small)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (DT any) (JJ statistical) (NN meaning)))))))
    (. .)))

nsubj(small-9, First-1)
prep_of(First-1, all-3)
det(groups-6, these-5)
appos(all-3, groups-6)
cop(small-9, are-7)
advmod(small-9, too-8)
root(ROOT-0, small-9)
aux(have-11, to-10)
xcomp(small-9, have-11)
det(meaning-14, any-12)
amod(meaning-14, statistical-13)
dobj(have-11, meaning-14)

(ROOT
  (S
    (ADVP (LS Second))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN indication))
        (PP (IN of)
          (NP
            (SBAR
              (WHADVP (WRB how))
              (S
                (S
                  (NP (DT these))
                  (ADVP (RB so))
                  (VP (VBD called)
                    (SBAR
                      (S
                        (NP (NNS studies))
                        (VP (VBD were)
                          (VP (VBN conducted)
                            (PRN (, ,)
                              (SBAR
                                (WHADVP (WRB how))
                                (S
                                  (NP (NNS participants))
                                  (VP (VBD were)
                                    (VP (VBN chosen)))))
                              (, ,))
                            (SBAR
                              (WHADVP (WRB how))
                              (S
                                (NP (NNS questions))
                                (VP (VBD were)
                                  (VP (VBN phrased)))))))))))
                (, ,)
                (CC or)
                (S
                  (NP (NNS answers))
                  (VP (VBD were)
                    (VP (VBN graded))))))
            (, ,)
            (CC or)
            (ADVP (RB even))
            (NP
              (NP (DT the) (JJS least) (NN indication))
              (PP (IN of)
                (NP (NN anything)))
              (VP (VBG resembling)
                (NP (DT a) (JJ double) (JJ blind))))))))
    (. .)))

advmod(is-4, Second-1)
expl(is-4, there-3)
root(ROOT-0, is-4)
det(indication-6, no-5)
nsubj(is-4, indication-6)
advmod(called-11, how-8)
nsubj(called-11, these-9)
advmod(called-11, so-10)
dep(indication-35, called-11)
nsubjpass(conducted-14, studies-12)
auxpass(conducted-14, were-13)
ccomp(called-11, conducted-14)
advmod(chosen-19, how-16)
nsubjpass(chosen-19, participants-17)
auxpass(chosen-19, were-18)
parataxis(conducted-14, chosen-19)
advmod(phrased-24, how-21)
nsubjpass(phrased-24, questions-22)
auxpass(phrased-24, were-23)
ccomp(conducted-14, phrased-24)
nsubjpass(graded-29, answers-27)
auxpass(graded-29, were-28)
conj_or(called-11, graded-29)
dep(indication-35, graded-29)
prep_of(indication-6, even-32)
advmod(indication-35, even-32)
conj_or(indication-35, even-32)
det(indication-35, the-33)
amod(indication-35, least-34)
prep_of(indication-6, indication-35)
prep_of(indication-35, anything-37)
partmod(indication-35, resembling-38)
det(blind-41, a-39)
amod(blind-41, double-40)
attr(resembling-38, blind-41)

(ROOT
  (S
    (NP
      (NP (RB Even) (NN adoption))
      (PP (IN of)
        (NP (NNS puppies))))
    (NP (DT these) (NNS days))
    (VP (VBZ is)
      (ADJP (JJ subject)
        (PP (TO to)
          (NP
            (NP (DT a) (JJ certain) (NN amount))
            (PP (IN of)
              (S
                (VP (VBG screening)
                  (PP (IN by)
                    (NP (DT the) (JJR better) (NN run) (NNS shelters))))))))))
    (. .)))

advmod(adoption-2, Even-1)
nsubj(subject-8, adoption-2)
prep_of(adoption-2, puppies-4)
det(days-6, these-5)
nsubj(subject-8, days-6)
cop(subject-8, is-7)
root(ROOT-0, subject-8)
det(amount-12, a-10)
amod(amount-12, certain-11)
prep_to(subject-8, amount-12)
prepc_of(amount-12, screening-14)
det(shelters-19, the-16)
amod(shelters-19, better-17)
nn(shelters-19, run-18)
prep_by(screening-14, shelters-19)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB have)
      (NP (DT a) (JJ fenced) (NN yard)))
    (. ?)))

aux(have-3, Do-1)
nsubj(have-3, you-2)
root(ROOT-0, have-3)
det(yard-6, a-4)
amod(yard-6, fenced-5)
dobj(have-3, yard-6)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB have)
      (NP (DT a) (JJ stable) (NN home)))
    (. ?)))

aux(have-3, Do-1)
nsubj(have-3, you-2)
root(ROOT-0, have-3)
det(home-6, a-4)
amod(home-6, stable-5)
dobj(have-3, home-6)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (VP
      (ADVP (RB tempermentally))
      (VBN suited)
      (PP (TO to)
        (S
          (VP (VBG caring)
            (PP (IN for)
              (NP (DT a) (NN puppy)))))))
    (. ?)))

auxpass(suited-4, Are-1)
nsubjpass(suited-4, you-2)
advmod(suited-4, tempermentally-3)
root(ROOT-0, suited-4)
prepc_to(suited-4, caring-6)
det(puppy-9, a-8)
prep_for(caring-6, puppy-9)

(ROOT
  (NP (FW Etc.) (. .)))

root(ROOT-0, Etc.-1)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (VP (VBD stated)
          (ADVP (RB previously)))))
    (, ,)
    (NP
      (NP (DT a) (NN stable))
      (, ,)
      (NP (JJ opposite) (NN sex) (NN parent) (NN home))
      (, ,))
    (VP (VBZ is)
      (NP (DT the) (JJ ideal) (NN environment)
        (S
          (VP (TO to)
            (VP (VB raise)
              (NP (NNS children)))))))
    (. .)))

mark(stated-2, As-1)
advcl(environment-16, stated-2)
advmod(stated-2, previously-3)
det(stable-6, a-5)
nsubj(environment-16, stable-6)
amod(home-11, opposite-8)
nn(home-11, sex-9)
nn(home-11, parent-10)
appos(stable-6, home-11)
cop(environment-16, is-13)
det(environment-16, the-14)
amod(environment-16, ideal-15)
root(ROOT-0, environment-16)
aux(raise-18, to-17)
infmod(environment-16, raise-18)
dobj(raise-18, children-19)

(ROOT
  (S
    (NP (PRP$ Your) (CD three) (NN post) (NN rant))
    (VP (VBZ shows)
      (NP (NN nothing))
      (S
        (VP (TO to)
          (VP (VB refute)
            (NP (DT that) (NN claim))))))
    (. .)))

poss(rant-4, Your-1)
num(rant-4, three-2)
nn(rant-4, post-3)
nsubj(shows-5, rant-4)
root(ROOT-0, shows-5)
dobj(shows-5, nothing-6)
aux(refute-8, to-7)
xcomp(shows-5, refute-8)
det(claim-10, that-9)
dobj(refute-8, claim-10)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP
          (NP (DT the) (NNS researchers))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP cite)))))
        (VP (MD wo) (RB n't)
          (VP (VB waste)
            (NP
              (NP (PRP$ their) (NN time))
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB compare)
                      (NP (JJ same) (NN sex) (NNS couples))
                      (PP (TO to)
                        (NP (DT that) (NN model))))))))))))
    (VP (VBZ speaks)
      (PP (IN for)
        (NP (PRP itself))))
    (. .)))

complm(waste-8, That-1)
det(researchers-3, the-2)
dobj(cite-5, researchers-3)
nsubj(waste-8, researchers-3)
nsubj(cite-5, you-4)
rcmod(researchers-3, cite-5)
aux(waste-8, wo-6)
neg(waste-8, n't-7)
csubj(speaks-20, waste-8)
poss(time-10, their-9)
dobj(waste-8, time-10)
xsubj(compare-13, time-10)
partmod(time-10, trying-11)
aux(compare-13, to-12)
xcomp(trying-11, compare-13)
amod(couples-16, same-14)
nn(couples-16, sex-15)
dobj(compare-13, couples-16)
det(model-19, that-18)
prep_to(compare-13, model-19)
root(ROOT-0, speaks-20)
prep_for(speaks-20, itself-22)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP know)
        (ADVP (RBR better))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADVP (IN at) (DT all))
            (ADJP (JJ honest)))))
      (, ,)
      (ADVP (RB so))
      (VP (VB do)
        (NP (PRP you))))
    (. .)))

nsubj(know-2, They-1)
nsubj(do-14, They-1)
root(ROOT-0, know-2)
advmod(know-2, better-3)
mark(honest-11, if-6)
nsubj(honest-11, you-7)
cop(honest-11, are-8)
advmod(honest-11, at-9)
pobj(at-9, all-10)
advcl(do-14, honest-11)
advmod(do-14, so-13)
conj_and(know-2, do-14)
dobj(do-14, you-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (ADJP (JJ gay)))))
    (, ,)
    (VP (VB accept)
      (NP (PRP yourself))
      (PP (IN for)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP
              (VP (VBP are))
              (CC and)
              (VP (VBP try)
                (S
                  (VP (TO to)
                    (VP (VB live)
                      (NP
                        (NP (DT the)
                          (ADJP
                            (ADJP (JJ happiest))
                            (CC and)
                            (ADJP (JJS best)))
                          (NN life))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (MD can)
                              (PP (IN on)
                                (NP (DT that) (NN basis))))))))))))))))
    (. .)))

mark(gay-4, If-1)
nsubj(gay-4, you-2)
cop(gay-4, 're-3)
advcl(accept-6, gay-4)
root(ROOT-0, accept-6)
dobj(accept-6, yourself-7)
dobj(are-11, what-9)
nsubj(are-11, you-10)
nsubj(try-13, you-10)
xsubj(live-15, you-10)
prepc_for(accept-6, are-11)
prepc_for(accept-6, try-13)
conj_and(are-11, try-13)
aux(live-15, to-14)
xcomp(try-13, live-15)
det(life-20, the-16)
amod(life-20, happiest-17)
conj_and(happiest-17, best-19)
amod(life-20, best-19)
dobj(live-15, life-20)
dobj(can-22, life-20)
nsubj(can-22, you-21)
rcmod(life-20, can-22)
det(basis-25, that-24)
prep_on(can-22, basis-25)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD can)
          (VP (VB do)
            (NP (DT that))))))
    (, ,)
    (NP (PRP$ my) (NN hat))
    (VP (VBZ 's)
      (ADJP (IN off)
        (PP (TO to)
          (NP (PRP you)))))
    (. .)))

mark(do-4, If-1)
nsubj(do-4, you-2)
aux(do-4, can-3)
advcl(off-10, do-4)
dobj(do-4, that-5)
poss(hat-8, my-7)
nsubj(off-10, hat-8)
cop(off-10, 's-9)
root(ROOT-0, off-10)
prep_to(off-10, you-12)

(ROOT
  (S
    (PP (IN Among)
      (NP (JJ other) (JJ major) (NNS considerations)))
    (, ,)
    (NP (WDT what))
    (VP (VBZ passes)
      (SBAR (IN for)
        (S
          (NP (DT a) (NN control) (NN group))
          (VP (VBZ is)
            (NP
              (NP (NNS children))
              (PP (IN from)
                (NP (JJ broken) (NNS homes))))))))
    (. .)))

amod(considerations-4, other-2)
amod(considerations-4, major-3)
prep_among(passes-7, considerations-4)
nsubj(passes-7, what-6)
root(ROOT-0, passes-7)
mark(children-13, for-8)
det(group-11, a-9)
nn(group-11, control-10)
nsubj(children-13, group-11)
cop(children-13, is-12)
advcl(passes-7, children-13)
amod(homes-16, broken-15)
prep_from(children-13, homes-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (ADJP (JJ insecure)
            (PP (IN in)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP you))
                  (VP
                    (VP (VBP are))
                    (, ,)
                    (CC and)
                    (VP (VBP believe)
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (MD can)
                            (VP (VB prop)
                              (NP (DT that))
                              (PRT (RP up))
                              (PP (IN by)
                                (S
                                  (VP (VBG dragging)
                                    (NP (DT an) (JJ innocent) (NN child))
                                    (PP (IN into)
                                      (NP (DT the) (NN mix)))))))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP
        (ADJP (JJ selfish))
        (, ,)
        (ADJP (JJ irresponsible))
        (CC and)
        (ADJP (NN unworthy)
          (PP (IN of)
            (NP (NN respect))))))
    (. .)))

mark(insecure-4, If-1)
nsubj(insecure-4, you-2)
cop(insecure-4, 're-3)
advcl(selfish-28, insecure-4)
dobj(are-8, what-6)
nsubj(are-8, you-7)
nsubj(believe-11, you-7)
prepc_in(insecure-4, are-8)
prepc_in(insecure-4, believe-11)
conj_and(are-8, believe-11)
nsubj(prop-14, you-12)
aux(prop-14, can-13)
ccomp(believe-11, prop-14)
dobj(prop-14, that-15)
prt(prop-14, up-16)
prepc_by(prop-14, dragging-18)
det(child-21, an-19)
amod(child-21, innocent-20)
dobj(dragging-18, child-21)
det(mix-24, the-23)
prep_into(dragging-18, mix-24)
nsubj(selfish-28, you-26)
nsubj(irresponsible-30, you-26)
cop(selfish-28, are-27)
root(ROOT-0, selfish-28)
conj_and(selfish-28, irresponsible-30)
conj_and(selfish-28, unworthy-32)
prep_of(unworthy-32, respect-34)

(ROOT
  (S
    (NP
      (NP (NN Anyone))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ thinks)
            (SBAR
              (S
                (NP (PRP they))
                (VP (MD should)
                  (VP (VB be)
                    (ADJP (JJ able)
                      (S
                        (VP (TO to)
                          (VP (VB buy)
                            (NP (DT a) (NN kid))
                            (SBAR (IN in) (NN order)
                              (S
                                (VP (TO to)
                                  (VP (VB feed)
                                    (NP (PRP$ their) (NN ego))))))))))))))))))
    (VP (VBZ is) (RB not)
      (NP (DT a) (JJ good) (NN person)))
    (. .)))

nsubj(thinks-3, Anyone-1)
nsubj(person-22, Anyone-1)
rcmod(Anyone-1, thinks-3)
nsubj(able-7, they-4)
aux(able-7, should-5)
cop(able-7, be-6)
ccomp(thinks-3, able-7)
aux(buy-9, to-8)
xcomp(able-7, buy-9)
det(kid-11, a-10)
dobj(buy-9, kid-11)
mark(feed-15, in-12)
dep(feed-15, order-13)
aux(feed-15, to-14)
purpcl(buy-9, feed-15)
poss(ego-17, their-16)
dobj(feed-15, ego-17)
cop(person-22, is-18)
neg(person-22, not-19)
det(person-22, a-20)
amod(person-22, good-21)
root(ROOT-0, person-22)

(ROOT
  (S
    (VP (VB Give)
      (NP (PRP me))
      (NP
        (NP (DT a) (NN break))
        (FRAG
          (NP (NNP !!!) (NNP RE))
          (: :) (`` ``)
          (S (CC So)
            (NP (PRP you))
            (VP (MD would)
              (VP (VB punish)
                (NP
                  (NP (DT the) (NN child))
                  (CC and)
                  (NP
                    (NP (DT the) (NN child) (POS 's))
                    (NNS parents)))
                (PP (IN for)
                  (NP
                    (NP (DT an) (NN injustice))
                    (VP (VBN committed)
                      (PP (IN by)
                        (NP (NN someone) (RB else)))))))))
          (: -) (. ?))))))

root(ROOT-0, Give-1)
iobj(Give-1, me-2)
det(break-4, a-3)
dobj(Give-1, break-4)
nn(RE-6, !!!-5)
dep(break-4, RE-6)
cc(punish-12, So-9)
nsubj(punish-12, you-10)
aux(punish-12, would-11)
dep(RE-6, punish-12)
det(child-14, the-13)
dobj(punish-12, child-14)
det(child-17, the-16)
poss(parents-19, child-17)
dobj(punish-12, parents-19)
conj_and(child-14, parents-19)
det(injustice-22, an-21)
prep_for(punish-12, injustice-22)
partmod(injustice-22, committed-23)
agent(committed-23, someone-25)
advmod(someone-25, else-26)

(ROOT
  (S (`` ``)
    (VP (VBZ Is)
      (VP (VBG English)
        (NP (PRP$ your) (JJ second) (NN language))))
    (. ?)))

aux(English-3, Is-2)
root(ROOT-0, English-3)
poss(language-6, your-4)
amod(language-6, second-5)
dobj(English-3, language-6)

(ROOT
  (S
    (NP (PRP$ Your) (JJ own) (NNS quotes)
      (S
        (VP
          (VP (VB refute)
            (NP (PRP$ your) (NN position)))
          (CC and)
          (VP (VB show)
            (SBAR (IN that)
              (S
                (NP (NNS children))
                (VP (VBD raised)
                  (PP (IN by)
                    (NP (JJ same) (NN sex) (NNS couples))))))))))
    (VP (VBP are)
      (ADVP
        (ADVP (IN at) (JJS least))
        (RB as))
      (VP (VBN screwed)
        (ADVP
          (ADVP (RB up)
            (PP (IN in)
              (NP (DT the) (NN head))))
          (, ,)
          (CC and)
          (ADVP (RB likely) (RBR more) (RB so))
          (, ,))
        (PP (IN than)
          (NP
            (NP (NNS children))
            (VP (VBN raised)
              (PP (IN in)
                (NP (JJ broken) (NNS homes))))))))
    (. .)))

poss(quotes-3, Your-1)
amod(quotes-3, own-2)
nsubjpass(screwed-20, quotes-3)
dep(quotes-3, refute-4)
poss(position-6, your-5)
dobj(refute-4, position-6)
dep(quotes-3, show-8)
conj_and(refute-4, show-8)
complm(raised-11, that-9)
nsubj(raised-11, children-10)
ccomp(show-8, raised-11)
amod(couples-15, same-13)
nn(couples-15, sex-14)
prep_by(raised-11, couples-15)
auxpass(screwed-20, are-16)
advmod(screwed-20, at-17)
pobj(at-17, least-18)
advmod(at-17, as-19)
root(ROOT-0, screwed-20)
advmod(screwed-20, up-21)
det(head-24, the-23)
prep_in(up-21, head-24)
advmod(so-29, likely-27)
advmod(so-29, more-28)
advmod(screwed-20, so-29)
conj_and(up-21, so-29)
prep_than(screwed-20, children-32)
partmod(children-32, raised-33)
amod(homes-36, broken-35)
prep_in(raised-33, homes-36)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP you))
              (VP (VB define)
                (NP (`` ``) (NN disadvantage) ('' ''))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT this))
      (ADVP (RB clearly))
      (VP (VBZ is)
        (NP
          (NP (CD one))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ happens)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP
                        (NP (DT the) (NN essence))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN topic))
                            (PP (IN in)
                              (NP (DT the) (JJ first) (NN place)))))))))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
advmod(define-7, how-5)
nsubj(define-7, you-6)
ccomp(know-4, define-7)
dobj(define-7, disadvantage-9)
nsubj(one-16, this-13)
advmod(one-16, clearly-14)
cop(one-16, is-15)
conj_but(know-4, one-16)
nsubj(happens-19, one-16)
rcmod(one-16, happens-19)
aux(essence-23, to-20)
cop(essence-23, be-21)
det(essence-23, the-22)
xcomp(happens-19, essence-23)
det(topic-26, the-25)
prep_of(essence-23, topic-26)
det(place-30, the-28)
amod(place-30, first-29)
prep_in(topic-26, place-30)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ is)
      (VP (VBG talking)
        (PP (IN about)
          (NP (`` ``) (JJ punishing) ('' '') (NN anyone)))))
    (. .)))

det(one-2, No-1)
nsubj(talking-4, one-2)
aux(talking-4, is-3)
root(ROOT-0, talking-4)
amod(anyone-9, punishing-7)
prep_about(talking-4, anyone-9)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (NP
            (NP (NN part))
            (PP (IN of)
              (NP (DT a) (JJ same) (NN sex) (NN couple)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP
        (ADJP (RB quite)
          (ADVP (RB obviously) (RB well))
          (JJ aware))
        (SBAR (IN that)
          (S
            (NP (NN union))
            (VP (MD WILL)
              (VP (VB NOT)
                (NP (JJ PRODUCE) (NNS CHILDREN))))))))
    (. .)))

mark(part-4, If-1)
nsubj(part-4, you-2)
cop(part-4, are-3)
advcl(aware-16, part-4)
det(couple-9, a-6)
amod(couple-9, same-7)
nn(couple-9, sex-8)
prep_of(part-4, couple-9)
nsubj(aware-16, you-11)
cop(aware-16, are-12)
advmod(aware-16, quite-13)
advmod(well-15, obviously-14)
advmod(aware-16, well-15)
root(ROOT-0, aware-16)
complm(NOT-20, that-17)
nsubj(NOT-20, union-18)
aux(NOT-20, WILL-19)
ccomp(aware-16, NOT-20)
amod(CHILDREN-22, PRODUCE-21)
dobj(NOT-20, CHILDREN-22)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADVP (RB evidently))
      (PP (IN of)
        (NP (DT the) (NN view)))
      (SBAR (IN that)
        (S
          (NP (JJ human) (NNS children))
          (VP (MD should)
            (VP (VB be)
              (NP
                (NP (DT a) (JJ free) (NN market) (NN item))
                (PP (IN of)
                  (NP (NN commerce))))))))
      (, ,)
      (SBAR (IN as)
        (FRAG
          (ADJP (JJ available)
            (PP (IN as)
              (NP
                (NP (DT a) (NN puppy))
                (PP (IN at)
                  (NP (DT a) (NN pound)))))))))
    (. .)))

nsubj(are-2, You-1)
root(ROOT-0, are-2)
advmod(are-2, evidently-3)
det(view-6, the-5)
prep_of(are-2, view-6)
complm(item-15, that-7)
amod(children-9, human-8)
nsubj(item-15, children-9)
aux(item-15, should-10)
cop(item-15, be-11)
det(item-15, a-12)
amod(item-15, free-13)
nn(item-15, market-14)
ccomp(are-2, item-15)
prep_of(item-15, commerce-17)
mark(available-20, as-19)
advcl(are-2, available-20)
det(puppy-23, a-22)
prep_as(available-20, puppy-23)
det(pound-26, a-25)
prep_at(puppy-23, pound-26)

