(ROOT
  (S
    (NP (JJ Gay) (NNS couples))
    (VP (VBP are)
      (ADVP (RB just))
      (PP (IN like)
        (NP (JJ straight) (NNS couples))))
    (. .)))

amod(couples-2, Gay-1)
nsubj(are-3, couples-2)
root(ROOT-0, are-3)
advmod(are-3, just-4)
amod(couples-7, straight-6)
prep_like(are-3, couples-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP tend)
      (S
        (VP (TO to)
          (VP
            (ADVP (RB fully))
            (VB judge) (, ,)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP you))
                (VP (VBP do) (RB n't)
                  (ADVP (RB fully))
                  (VP (VB understand)))))))))
    (. .)))

nsubj(tend-2, You-1)
xsubj(judge-5, You-1)
root(ROOT-0, tend-2)
aux(judge-5, to-3)
advmod(judge-5, fully-4)
xcomp(tend-2, judge-5)
dobj(understand-12, what-7)
nsubj(understand-12, you-8)
aux(understand-12, do-9)
neg(understand-12, n't-10)
advmod(understand-12, fully-11)
ccomp(judge-5, understand-12)

(ROOT
  (S
    (NP (JJ Gay) (NNS parents))
    (VP (VBP get)
      (NP
        (NP (NNS things))
        (VP (VBN done))))
    (. .)))

amod(parents-2, Gay-1)
nsubj(get-3, parents-2)
root(ROOT-0, get-3)
dobj(get-3, things-4)
partmod(things-4, done-5)

(ROOT
  (S
    (SBAR (RB Just)
      (S
        (PP (IN like)
          (NP (DT a) (JJ modern) (JJ straight) (NN couple)))
        (VP (MD might)
          (VP (VB have)
            (NP
              (NP (NNP a) ('' '') (NNP Mr.) (NNP Mom))
              ('' '')
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ stays)
                    (NP (NN home))))))))))
    (, ,)
    (SBAR (IN while)
      (S
        (NP (DT the) (NN wife))
        (VP (VBZ goes)
          (S
            (VP (TO to)
              (VP (VB work)))))))
    (, ,)
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (DT that) (NN couple) (NN wont))
            (VP (VB be)
              (ADJP (JJ good))
              (NP (NNS parents)))))))
    (. .)))

advmod(have-8, Just-1)
det(couple-6, a-3)
amod(couple-6, modern-4)
amod(couple-6, straight-5)
prep_like(have-8, couple-6)
aux(have-8, might-7)
dep(mean-27, have-8)
nn(Mom-12, a-9)
nn(Mom-12, Mr.-11)
dobj(have-8, Mom-12)
nsubj(home-16, who-14)
cop(home-16, stays-15)
rcmod(Mom-12, home-16)
mark(goes-21, while-18)
det(wife-20, the-19)
nsubj(goes-21, wife-20)
xsubj(work-23, wife-20)
dep(mean-27, goes-21)
aux(work-23, to-22)
xcomp(goes-21, work-23)
aux(mean-27, does-25)
neg(mean-27, n't-26)
root(ROOT-0, mean-27)
complm(good-33, that-28)
det(wont-31, that-29)
nn(wont-31, couple-30)
nsubj(good-33, wont-31)
cop(good-33, be-32)
ccomp(mean-27, good-33)
attr(good-33, parents-34)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ many) (JJ untraditional) (NNS families))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP make)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBP work)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(families-5, many-3)
amod(families-5, untraditional-4)
nsubj(are-2, families-5)
nsubj(make-7, families-5)
rcmod(families-5, make-7)
nsubj(work-9, it-8)
ccomp(make-7, work-9)

(ROOT
  (S
    (SBAR (RB Just) (IN because)
      (S
        (NP (PRP they))
        (VP (VBP do) (RB n't)
          (VP (VB have)
            (PP (TO to)
              (NP (NN body) (NNS parts)))))))
    (PRN
      (S
        (NP (PRP you))
        (VP (VBP find)
          (ADJP (JJ fit))))
      (, ,))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD ca) (RB n't)
              (VP (VB raise)
                (NP (NNS children))))))))
    (. .)))

advmod(have-6, Just-1)
dep(have-6, because-2)
nsubj(have-6, they-3)
aux(have-6, do-4)
neg(have-6, n't-5)
advcl(mean-16, have-6)
csubj(mean-16, have-6)
nn(parts-9, body-8)
prep_to(have-6, parts-9)
nsubj(find-11, you-10)
parataxis(mean-16, find-11)
acomp(find-11, fit-12)
aux(mean-16, does-14)
neg(mean-16, n't-15)
root(ROOT-0, mean-16)
nsubj(raise-20, they-17)
aux(raise-20, ca-18)
neg(raise-20, n't-19)
ccomp(mean-16, raise-20)
dobj(raise-20, children-21)

(ROOT
  (S
    (NP (CD One) (NN father))
    (VP (MD can)
      (VP (VB take)
        (PP (IN on)
          (NP
            (NP (DT the) (NN role))
            (PP (IN of)
              (NP (DT the) (NN mother)))))))
    (. .)))

num(father-2, One-1)
nsubj(take-4, father-2)
aux(take-4, can-3)
root(ROOT-0, take-4)
det(role-7, the-6)
prep_on(take-4, role-7)
det(mother-10, the-9)
prep_of(role-7, mother-10)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP (JJ feminine))
          (CC and)
          (NP (NN caring) (, ,) (NN loving)
            (CC et)
            (NN cetera)))))
    (. .)))

nsubj(feminine-4, He-1)
aux(feminine-4, can-2)
cop(feminine-4, be-3)
root(ROOT-0, feminine-4)
conj_and(feminine-4, caring-6)
conj_and(feminine-4, loving-8)
conj_et(caring-6, loving-8)
conj_and(feminine-4, cetera-10)
conj_et(caring-6, cetera-10)

(ROOT
  (S
    (NP
      (NP (DT These) (`` ``) (NNS roles) ('' ''))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP place)
            (PP (IN on)
              (NP (NNS parents)))))))
    (VP (VBP are)
      (ADVP (RB just))
      (NP (DT an) (NN illusion)))
    (. .)))

det(roles-3, These-1)
dobj(place-6, roles-3)
nsubj(illusion-12, roles-3)
nsubj(place-6, you-5)
rcmod(roles-3, place-6)
prep_on(place-6, parents-8)
cop(illusion-12, are-9)
advmod(illusion-12, just-10)
det(illusion-12, an-11)
root(ROOT-0, illusion-12)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (CD one) (, ,) (JJ right) (NN way))
      (S
        (VP (TO to)
          (VP (VB raise)
            (NP (DT a) (NN child))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(way-7, no-3)
num(way-7, one-4)
amod(way-7, right-6)
nsubj(is-2, way-7)
aux(raise-9, to-8)
xcomp(is-2, raise-9)
det(child-11, a-10)
dobj(raise-9, child-11)

