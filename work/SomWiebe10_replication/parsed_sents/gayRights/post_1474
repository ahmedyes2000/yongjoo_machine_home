(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP stop)
          (S
            (VP (VBG writing)
              (PP (TO to)
                (NP (PRP me))))))))
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB stop)))
    (. .)))

advmod(stop-3, When-1)
nsubj(stop-3, you-2)
advcl(stop-9, stop-3)
xcomp(stop-3, writing-4)
prep_to(writing-4, me-6)
nsubj(stop-9, I-7)
aux(stop-9, 'll-8)
root(ROOT-0, stop-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN intention))
        (PP (IN on)
          (S
            (VP (VBG answering)
              (NP (PRP you))
              (ADVP (RB otherwise))))))
      (SBAR (CC but)
        (S
          (NP (PRP I))
          (VP (MD wo) (RB n't)
            (VP (VB have)
              (S
                (NP (PRP you))
                (VP (VB write)
                  (NP
                    (NP (NN garbage))
                    (PP (IN about)
                      (NP (PRP me))))
                  (PP (IN without)
                    (S
                      (VP (VBG defending)
                        (NP (PRP myself))))))))))))
    (: ...)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(intention-4, no-3)
dobj(have-2, intention-4)
prepc_on(intention-4, answering-6)
dobj(answering-6, you-7)
advmod(answering-6, otherwise-8)
cc(have-13, but-9)
nsubj(have-13, I-10)
aux(have-13, wo-11)
neg(have-13, n't-12)
dep(have-2, have-13)
nsubj(write-15, you-14)
ccomp(have-13, write-15)
dobj(write-15, garbage-16)
prep_about(garbage-16, me-18)
prepc_without(write-15, defending-20)
dobj(defending-20, myself-21)

(ROOT
  (SBARQ (RB So)
    (WHADVP (WRB why))
    (SQ (VBP do) (RB n't)
      (NP (PRP you))
      (VP (VB leave)
        (ADVP (RB well)
          (ADVP
            (ADVP (RB enough) (JJ alone))
            (PRN (CC and)
              (S
                (NP (PRP I))
                (VP (MD 'll)
                  (VP (VB have)
                    (NP (NN nothing))
                    (S
                      (VP (TO to)
                        (VP (VB reply))))))))
            (PP (TO to))))))
    (. .)))

advmod(leave-6, So-1)
advmod(leave-6, why-2)
aux(leave-6, do-3)
neg(leave-6, n't-4)
nsubj(leave-6, you-5)
root(ROOT-0, leave-6)
advmod(alone-9, well-7)
advmod(alone-9, enough-8)
advmod(leave-6, alone-9)
dep(have-13, and-10)
nsubj(have-13, I-11)
aux(have-13, 'll-12)
dep(alone-9, have-13)
dobj(have-13, nothing-14)
aux(reply-16, to-15)
xcomp(have-13, reply-16)
prep(alone-9, to-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (RB real) (JJ simple)))
    (. !)))

nsubj(simple-4, It-1)
cop(simple-4, 's-2)
advmod(simple-4, real-3)
root(ROOT-0, simple-4)

