(ROOT
  (S
    (NP
      (NP (NN None))
      (PP (IN of)
        (NP
          (NP (NNP Focus))
          (PP (IN on)
            (NP (DT the) (NNS Families) (NNS arguments))))))
    (VP (VBP have)
      (NP
        (NP (DT any) (NN bearing))
        (PP (IN on)
          (NP (DT the) (NN argument)))))
    (. .)))

nsubj(have-8, None-1)
prep_of(None-1, Focus-3)
det(arguments-7, the-5)
nn(arguments-7, Families-6)
prep_on(Focus-3, arguments-7)
root(ROOT-0, have-8)
det(bearing-10, any-9)
dobj(have-8, bearing-10)
det(argument-13, the-12)
prep_on(bearing-10, argument-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP say)
      (SBAR
        (S
          (NP (NNS kids))
          (VP (VBP are)
            (ADJP
              (ADJP (JJR better) (RP off)
                (PP (IN in)
                  (NP
                    (ADJP (JJ married)
                      (NP (CD 2)))
                    (NN parent) (NNS households))))
              (PP (IN with)
                (NP (PRP$ their) (JJ biological) (NNS parents))))))))
    (. .)))

nsubj(say-2, They-1)
root(ROOT-0, say-2)
nsubj(better-5, kids-3)
cop(better-5, are-4)
ccomp(say-2, better-5)
dep(better-5, off-6)
amod(households-11, married-8)
dep(married-8, 2-9)
nn(households-11, parent-10)
prep_in(better-5, households-11)
poss(parents-15, their-13)
amod(parents-15, biological-14)
prep_with(better-5, parents-15)

(ROOT
  (S
    (NP (NNP Seems))
    (VP (VBP like)
      (SBAR
        (S (, ,)
          (SBAR (IN if)
            (FRAG
              (NP (NN anything))))
          (, ,)
          (NP (DT this))
          (VP (VBZ is)
            (NP
              (NP (DT an) (NN argument))
              (PP (IN for)
                (NP (JJ same) (NN sex) (NN adoption))))))))
    (. .)))

nsubj(like-2, Seems-1)
root(ROOT-0, like-2)
mark(anything-5, if-4)
advcl(argument-10, anything-5)
nsubj(argument-10, this-7)
cop(argument-10, is-8)
det(argument-10, an-9)
ccomp(like-2, argument-10)
amod(adoption-14, same-12)
nn(adoption-14, sex-13)
prep_for(argument-10, adoption-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB argue)
        (SBAR (IN that)
          (S
            (NP
              (NP (NN anything))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ gets)
                    (NP (NNS children))
                    (PRT (RP out))
                    (PP
                      (PP (IN of)
                        (NP
                          (NP (DT the) (JJ foster) (NN system)
                            (CC and)
                            (NN out))
                          (PP (IN of)
                            (NP (NNS orphanages)))))
                      (CC and)
                      (PP (IN into)
                        (NP (DT a) (VBG loving) (NN home))))))))
            (VP (VBZ is)
              (NP
                (NP (DT a) (JJ positive) (NN step))
                (PP (IN for)
                  (NP (DT the) (NNS children)))))))))
    (. .)))

nsubj(argue-3, I-1)
aux(argue-3, 'd-2)
root(ROOT-0, argue-3)
complm(step-26, that-4)
nsubj(gets-7, anything-5)
nsubj(step-26, anything-5)
rcmod(anything-5, gets-7)
dobj(gets-7, children-8)
det(system-13, the-11)
amod(system-13, foster-12)
prep_out_of(gets-7, system-13)
prep_out_of(gets-7, out-15)
conj_and(system-13, out-15)
prep_of(system-13, orphanages-17)
rcmod(anything-5, into-19)
conj_and(gets-7, into-19)
det(home-22, a-20)
amod(home-22, loving-21)
pobj(into-19, home-22)
cop(step-26, is-23)
det(step-26, a-24)
amod(step-26, positive-25)
ccomp(argue-3, step-26)
det(children-29, the-28)
prep_for(step-26, children-29)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (ADJP
          (ADVP (RBS most) (RB likely))
          (JJ true))))
    (CC but)
    (S
      (NP
        (NP (DT the) (NNS kids))
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (VP (VBG talking) (IN about))))))
      (VP (VBP have)
        (ADVP (RB already))
        (VP (VBN been)
          (VP (VBN put)
            (PRT (RP up))
            (PP (IN for)
              (NP (NN adoption)))
            (PP (IN by)
              (NP (PRP$ their) (JJ biological) (NNS parents)))))))
    (. .)))

nsubj(true-5, This-1)
cop(true-5, is-2)
advmod(likely-4, most-3)
advmod(true-5, likely-4)
root(ROOT-0, true-5)
det(kids-8, the-7)
dobj(talking-11, kids-8)
nsubjpass(put-16, kids-8)
nsubj(talking-11, we-9)
aux(talking-11, 're-10)
rcmod(kids-8, talking-11)
dep(talking-11, about-12)
aux(put-16, have-13)
advmod(put-16, already-14)
auxpass(put-16, been-15)
conj_but(true-5, put-16)
prt(put-16, up-17)
prep_for(put-16, adoption-19)
poss(parents-23, their-21)
amod(parents-23, biological-22)
agent(put-16, parents-23)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB no) (RB longer))
      (NP
        (NP (DT an) (NN option))
        (PP (IN for)
          (NP (PRP them)))))
    (. .)))

nsubj(option-6, This-1)
cop(option-6, is-2)
advmod(longer-4, no-3)
advmod(option-6, longer-4)
det(option-6, an-5)
root(ROOT-0, option-6)
prep_for(option-6, them-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN question))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP need)
            (S
              (VP (TO to)
                (VP (VB answer))))))))
    (VP (VBZ is)
      (SBAR (IN whether)
        (S
          (NP (PRP they))
          (VP (VBP 're)
            (UCP
              (ADJP
                (ADJP (JJR better) (RP off)
                  (PP (IN in)
                    (NP (DT a) (JJ gay) (NN household))))
                (PP (IN than)
                  (NP (DT an) (NN orphanage))))
              (CC or)
              (VP (VBG bouncing)
                (PP (IN from)
                  (NP (NN house)))
                (S
                  (VP (TO to)
                    (VP (VB house)
                      (PP (IN in)
                        (NP (JJ foster) (NN care))))))))))))
    (. .)))

det(question-2, The-1)
dobj(need-4, question-2)
nsubj(is-7, question-2)
nsubj(need-4, we-3)
xsubj(answer-6, we-3)
rcmod(question-2, need-4)
aux(answer-6, to-5)
xcomp(need-4, answer-6)
root(ROOT-0, is-7)
complm(better-11, whether-8)
nsubj(better-11, they-9)
nsubj(bouncing-21, they-9)
cop(better-11, 're-10)
ccomp(is-7, better-11)
dep(better-11, off-12)
det(household-16, a-14)
amod(household-16, gay-15)
prep_in(better-11, household-16)
det(orphanage-19, an-18)
prep_than(better-11, orphanage-19)
ccomp(is-7, bouncing-21)
conj_or(better-11, bouncing-21)
prep_from(bouncing-21, house-23)
aux(house-25, to-24)
xcomp(bouncing-21, house-25)
amod(care-28, foster-27)
prep_in(house-25, care-28)

(ROOT
  (S
    (NP (NN Nobody))
    (VP (MD can)
      (VP (VB argue)
        (SBAR (IN that)
          (S
            (NP
              (NP (JJ foster) (NN care))
              (CC or)
              (NP (DT an) (NN orphanage)))
            (VP (VBZ is)
              (ADVP (RBR better) (IN than))
              (NP (DT a) (VBG loving) (NN home))
              (, ,)
              (SBAR (IN whether)
                (S
                  (NP (DT the) (NNS parents))
                  (VP (VBP are)
                    (NP (JJ straight) (, ,) (JJ gay) (, ,) (JJ black) (, ,) (JJ white) (, ,) (JJ religious) (NN atheist)
                      (CC or)
                      (NN anything) (NN else))))))))))
    (. .)))

nsubj(argue-3, Nobody-1)
aux(argue-3, can-2)
root(ROOT-0, argue-3)
complm(home-15, that-4)
amod(care-6, foster-5)
nsubj(home-15, care-6)
det(orphanage-9, an-8)
conj_or(care-6, orphanage-9)
nsubj(home-15, orphanage-9)
cop(home-15, is-10)
advmod(than-12, better-11)
advmod(home-15, than-12)
det(home-15, a-13)
amod(home-15, loving-14)
ccomp(argue-3, home-15)
complm(atheist-30, whether-17)
det(parents-19, the-18)
nsubj(atheist-30, parents-19)
cop(atheist-30, are-20)
amod(atheist-30, straight-21)
amod(atheist-30, gay-23)
amod(atheist-30, black-25)
amod(atheist-30, white-27)
amod(atheist-30, religious-29)
ccomp(home-15, atheist-30)
nn(else-33, anything-32)
ccomp(home-15, else-33)
conj_or(atheist-30, else-33)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB also))
    (VP (VBP argue)
      (SBAR (IN that)
        (S
          (NP (NN divorce))
          (VP (VBZ is)
            (ADJP (JJ bad)
              (PP (IN for)
                (NP (NNS children))))))))
    (. .)))

nsubj(argue-3, They-1)
advmod(argue-3, also-2)
root(ROOT-0, argue-3)
complm(bad-7, that-4)
nsubj(bad-7, divorce-5)
cop(bad-7, is-6)
ccomp(argue-3, bad-7)
prep_for(bad-7, children-9)

(ROOT
  (NP (DT No) (NN kidding) (. !)))

det(kidding-2, No-1)
root(ROOT-0, kidding-2)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (DT that))
    (VP (VBZ has)
      (NP
        (NP (DT no) (NN bearing))
        (PP (IN on)
          (NP (DT the) (NN argument)))))
    (. .)))

advmod(has-4, Again-1)
nsubj(has-4, that-3)
root(ROOT-0, has-4)
det(bearing-6, no-5)
dobj(has-4, bearing-6)
det(argument-9, the-8)
prep_on(bearing-6, argument-9)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (PRP we))
        (VP (MD wo) (RB n't)
          (VP (VB let)
            (NP (JJ same) (NN sex) (NNS partners))))))
    (VP (VB marry)
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD ca) (RB n't)
            (ADVP (RB possibly))
            (VP (VB get)
              (ADJP (VBN divorced)))))))
    (. .)))

mark(let-5, Since-1)
nsubj(let-5, we-2)
aux(let-5, wo-3)
neg(let-5, n't-4)
csubj(marry-9, let-5)
amod(partners-8, same-6)
nn(partners-8, sex-7)
dobj(let-5, partners-8)
root(ROOT-0, marry-9)
nsubjpass(divorced-15, they-10)
aux(divorced-15, ca-11)
neg(divorced-15, n't-12)
advmod(divorced-15, possibly-13)
auxpass(divorced-15, get-14)
ccomp(marry-9, divorced-15)

