(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (NP (DT an) (NN atheist))))
    (, ,) (IN so)
    (S
      (NP
        (NP (DT the) (NN discussion))
        (PP (IN of)
          (SBAR (IN whether)
            (S
              (NP (NN homosexuality))
              (VP (VBZ is)
                (NP (DT a) (NN sin)))))))
      (VP (VBZ does) (RB not)
        (ADVP (RB even))
        (VP (VB have)
          (NP (DT a) (NN point))
          (SBAR
            (ADVP (RB as) (RB far))
            (IN as)
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (ADJP (JJ concerned))))))))
    (. .)))

nsubj(atheist-4, I-1)
cop(atheist-4, 'm-2)
det(atheist-4, an-3)
root(ROOT-0, atheist-4)
dep(atheist-4, so-6)
det(discussion-8, the-7)
nsubj(have-18, discussion-8)
complm(sin-14, whether-10)
nsubj(sin-14, homosexuality-11)
cop(sin-14, is-12)
det(sin-14, a-13)
prepc_of(discussion-8, sin-14)
aux(have-18, does-15)
neg(have-18, not-16)
advmod(have-18, even-17)
ccomp(atheist-4, have-18)
det(point-20, a-19)
dobj(have-18, point-20)
advmod(far-22, as-21)
advmod(concerned-26, far-22)
dep(concerned-26, as-23)
nsubj(concerned-26, I-24)
cop(concerned-26, 'm-25)
dep(have-18, concerned-26)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (PP (RB completely)
      (PP
        (ADVP (RB aside))
        (IN from)
        (NP (NN opinion))))
    (, ,)
    (NP
      (NP (DT the) (`` ``) (NN logic) ('' ''))
      (VP (VBN used)
        (PP (IN in)
          (NP (DT this) (NN argument)))))
    (VP (VBZ is)
      (ADJP (RB totally) (JJ absurd)))
    (. .)))

advmod(absurd-18, However-1)
advmod(absurd-18, completely-3)
prep_aside_from(absurd-18, opinion-6)
det(logic-10, the-8)
nsubj(absurd-18, logic-10)
partmod(logic-10, used-12)
det(argument-15, this-14)
prep_in(used-12, argument-15)
cop(absurd-18, is-16)
advmod(absurd-18, totally-17)
root(ROOT-0, absurd-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB believe)
                (PP (IN in)
                  (NP (NN god)))))))))
    (, ,)
    (VP (VB fine)
      (PP (IN with)
        (NP (PRP me))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
xsubj(believe-5, you-2)
advcl(fine-9, want-3)
aux(believe-5, to-4)
xcomp(want-3, believe-5)
prep_in(believe-5, god-7)
root(ROOT-0, fine-9)
prep_with(fine-9, me-11)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB use)
                  (NP (NN religion))
                  (S
                    (VP (TO to)
                      (VP (VB hate)
                        (NP (NNS others)))))))))))
      (, ,)
      (NP (DT that))
      (VP (VBZ 's) (RB not)
        (ADJP (JJ fine)
          (PP (IN with)
            (NP (PRP me))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VB respect)
        (NP (PRP$ your) (NN right)
          (S
            (VP (TO to)
              (VP (VB think)
                (SBAR
                  (WHNP (WDT whatever))
                  (S
                    (NP (PRP you))
                    (VP (VBP please))))))))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
xsubj(use-5, you-2)
advcl(fine-14, want-3)
aux(use-5, to-4)
xcomp(want-3, use-5)
dobj(use-5, religion-6)
aux(hate-8, to-7)
xcomp(use-5, hate-8)
dobj(hate-8, others-9)
nsubj(fine-14, that-11)
cop(fine-14, 's-12)
neg(fine-14, not-13)
root(ROOT-0, fine-14)
prep_with(fine-14, me-16)
nsubj(respect-20, I-19)
conj_but(fine-14, respect-20)
poss(right-22, your-21)
dobj(respect-20, right-22)
aux(think-24, to-23)
infmod(right-22, think-24)
dobj(please-27, whatever-25)
nsubj(please-27, you-26)
ccomp(think-24, please-27)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP
                  (VP (VB have)
                    (NP (NNS opinions)))
                  (CC and)
                  (VP (VB make)
                    (NP (NNS arguments))))))))))
    (, ,)
    (S
      (INTJ (VB please))
      (VP (VB think)
        (PRT (RP about))
        (SBAR (IN whether)
          (S
            (NP (PRP they))
            (VP (VBP make))))))
    (VP (VBP sense)
      (ADVP (RB now))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP 're) (RB not)
            (NP (CD 17))))))
    (. .)))

cc(sense-19, But-1)
mark(going-5, if-2)
nsubj(going-5, you-3)
xsubj(have-7, you-3)
aux(going-5, 're-4)
dep(sense-19, going-5)
aux(have-7, to-6)
xcomp(going-5, have-7)
dobj(have-7, opinions-8)
xcomp(going-5, make-10)
conj_and(have-7, make-10)
dobj(make-10, arguments-11)
dep(think-14, please-13)
csubj(sense-19, think-14)
prt(think-14, about-15)
complm(make-18, whether-16)
nsubj(make-18, they-17)
ccomp(think-14, make-18)
root(ROOT-0, sense-19)
advmod(sense-19, now-20)
complm(17-25, that-21)
nsubj(17-25, you-22)
cop(17-25, 're-23)
neg(17-25, not-24)
ccomp(sense-19, 17-25)

(ROOT
  (S
    (S
      (ADVP (RB Hopefully))
      (NP (DT this))
      (VP (VBZ does) (RB not)
        (VP (VB sound)
          (NP (JJ rude)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBD upsets)
          (NP (PRP me))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (NNS people))
              (ADVP (RB just))
              (VP (VBP parrot)
                (NP
                  (NP (NNS things))
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBP 're)
                        (VP (VBN taught)
                          (PP (IN without)
                            (S
                              (VP (VBG thinking)
                                (NP (NNS critically)))))))))))))))
      (, ,)
      (CC and)
      (S
        (NP (NN religion))
        (VP (VBZ is)
          (NP
            (NP (DT a) (JJ big) (NN source))
            (PP (IN of)
              (NP (DT that)))))))
    (. .)))

advmod(sound-5, Hopefully-1)
nsubj(sound-5, this-2)
aux(sound-5, does-3)
neg(sound-5, not-4)
root(ROOT-0, sound-5)
dobj(sound-5, rude-6)
nsubj(upsets-10, it-9)
conj_but(sound-5, upsets-10)
dobj(upsets-10, me-11)
advmod(parrot-15, when-12)
nsubj(parrot-15, people-13)
advmod(parrot-15, just-14)
advcl(upsets-10, parrot-15)
dobj(parrot-15, things-16)
nsubjpass(taught-19, they-17)
auxpass(taught-19, 're-18)
rcmod(things-16, taught-19)
prepc_without(taught-19, thinking-21)
dobj(thinking-21, critically-22)
nsubj(source-29, religion-25)
cop(source-29, is-26)
det(source-29, a-27)
amod(source-29, big-28)
conj_but(sound-5, source-29)
conj_and(upsets-10, source-29)
prep_of(source-29, that-31)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ hurts)
      (NP (NN society))
      (, ,)
      (PP (IN like)
        (NP (`` ``) (RB just) (JJ following) (NNS orders))))
    (. .)))

nsubj(hurts-2, It-1)
root(ROOT-0, hurts-2)
dobj(hurts-2, society-3)
advmod(orders-9, just-7)
amod(orders-9, following-8)
prep_like(hurts-2, orders-9)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP (DT the) (NN argument))))
    (, ,)
    (NP (NN god))
    (ADVP (RB first))
    (VP (VBD created)
      (NP (NNP Adam)))
    (. .)))

prepc_according_to(created-8, to-2)
det(argument-4, the-3)
pobj(created-8, argument-4)
nsubj(created-8, god-6)
advmod(created-8, first-7)
root(ROOT-0, created-8)
dobj(created-8, Adam-9)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (PRP he))
      (VP (VBD went)
        (PP (IN through)
          (NP (PDT all) (DT the) (NNS animals)))
        (PP (IN on)
          (NP (NN earth)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (NN none))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBD were)
        (NP (DT a) (JJ good) (NN mate))))
    (. .)))

advmod(went-3, Then-1)
nsubj(went-3, he-2)
root(ROOT-0, went-3)
predet(animals-7, all-5)
det(animals-7, the-6)
prep_through(went-3, animals-7)
prep_on(went-3, earth-9)
nsubj(mate-18, none-12)
prep_of(none-12, them-14)
cop(mate-18, were-15)
det(mate-18, a-16)
amod(mate-18, good-17)
conj_and(went-3, mate-18)

(ROOT
  (S (IN So)
    (NP (NN god))
    (VP (VBD created)
      (SBAR
        (S
          (NP
            (NP (NNP Eve))
            (, ,)
            (ADVP (RB therefore)))
          (ADVP (RB homosexuality))
          (VP (VBZ is)
            (ADJP (JJ wrong))))))
    (. .)))

dep(created-3, So-1)
nsubj(created-3, god-2)
root(ROOT-0, created-3)
nsubj(wrong-9, Eve-4)
advmod(Eve-4, therefore-6)
advmod(wrong-9, homosexuality-7)
cop(wrong-9, is-8)
ccomp(created-3, wrong-9)

(ROOT
  (S
    (VP (VB QED))
    (. .)))

root(ROOT-0, QED-1)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP
        (NP (RB only) (CD one) (NN problem))
        (PP (IN with)
          (NP (DT that)))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
advmod(problem-5, only-3)
num(problem-5, one-4)
nsubj('s-2, problem-5)
prep_with(problem-5, that-7)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (NP (DT no) (JJ other) (NNS men))
        (PP (IN on)
          (NP (NN earth))))
      (PP (IN throughout)
        (NP (PDT all) (DT this))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
det(men-5, no-3)
amod(men-5, other-4)
nsubj(were-2, men-5)
prep_on(men-5, earth-7)
predet(this-10, all-9)
prep_throughout(were-2, this-10)

(ROOT
  (S
    (S
      (ADVP (RB Therefore))
      (VP (VBG god)
        (ADVP (RB never))))
    (, ,)
    (ADVP (RB ever))
    (VP (VBD said)
      (S (`` ``)
        (INTJ (UH oh))
        (, ,)
        (INTJ (UH well))
        (, ,)
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB fit)
            (PP (IN with)
              (NP (DT this) (JJ other) (NN dude)))
            (, ,)
            (ADVP (RB either))))))
    (. .)))

advmod(god-2, Therefore-1)
dep(said-6, god-2)
neg(god-2, never-3)
advmod(said-6, ever-5)
root(ROOT-0, said-6)
dep(fit-15, oh-8)
dep(fit-15, well-10)
nsubj(fit-15, you-12)
aux(fit-15, do-13)
neg(fit-15, n't-14)
ccomp(said-6, fit-15)
det(dude-19, this-17)
amod(dude-19, other-18)
prep_with(fit-15, dude-19)
advmod(fit-15, either-21)

(ROOT
  (S ('' '')
    (S
      (NP (EX There))
      (VP (VBD was)
        (NP
          (NP (RB only) (CD one) (NN man))
          (PP (IN on)
            (NP (DT the) (NN planet))))))
    (, ,)
    (NP (JJ gay))
    (VP (VBD was) (RB not)
      (ADVP (RB even))
      (NP
        (NP (DT an) (NN option))
        (PP (IN for)
          (NP (NN god)))
        (S
          (VP (TO to)
            (VP (VB dismiss))))))
    (. .)))

expl(was-3, There-2)
ccomp(was-12, was-3)
advmod(man-6, only-4)
num(man-6, one-5)
nsubj(was-3, man-6)
det(planet-9, the-8)
prep_on(man-6, planet-9)
nsubj(was-12, gay-11)
root(ROOT-0, was-12)
neg(was-12, not-13)
advmod(was-12, even-14)
det(option-16, an-15)
attr(was-12, option-16)
prep_for(option-16, god-18)
aux(dismiss-20, to-19)
infmod(option-16, dismiss-20)

