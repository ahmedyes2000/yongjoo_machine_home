(ROOT
  (SQ (MD Can)
    (NP (DT a) (NN person))
    (VP (VB have)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB choose)
              (SBAR (IN if)
                (S
                  (NP (PRP they))
                  (VP (MD can)
                    (VP (VB marry))))
                (CC or)
                (RB not)))))))
    (. ?)))

aux(have-4, Can-1)
det(person-3, a-2)
nsubj(have-4, person-3)
root(ROOT-0, have-4)
det(right-6, the-5)
dobj(have-4, right-6)
aux(choose-8, to-7)
infmod(right-6, choose-8)
mark(marry-12, if-9)
nsubj(marry-12, they-10)
aux(marry-12, can-11)
advcl(choose-8, marry-12)
advcl(choose-8, not-14)
conj_or(marry-12, not-14)

(ROOT
  (SQ
    (S
      (NP (PRP I))
      (VP (VBP mean)))
    (, ,)
    (SQ (VBZ does)
      (NP (DT a) (JJ total) (NN stranger))
      (VP (VB have)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB change)
                (NP
                  (NP (NN someone) (POS 's))
                  (NN life))
                (PP (RB completely) (IN by)
                  (S
                    (VP (VBG opposing)
                      (NP (PRP$ their) (NN marriage)))))))))))
    (. ?)))

nsubj(mean-2, I-1)
dep(have-8, mean-2)
aux(have-8, does-4)
det(stranger-7, a-5)
amod(stranger-7, total-6)
nsubj(have-8, stranger-7)
root(ROOT-0, have-8)
det(right-10, the-9)
dobj(have-8, right-10)
aux(change-12, to-11)
infmod(right-10, change-12)
poss(life-15, someone-13)
dobj(change-12, life-15)
advmod(change-12, completely-16)
prepc_by(change-12, opposing-18)
poss(marriage-20, their-19)
dobj(opposing-18, marriage-20)

(ROOT
  (FRAG
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD said)
          (INTJ (UH yes) (, ,) (UH why)))))
    (. ?)))

mark(said-3, If-1)
nsubj(said-3, you-2)
root(ROOT-0, said-3)
dep(said-3, yes-4)
dep(yes-4, why-6)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (NP
      (NP (DT that))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB feel)
                  (SBAR (IN that)
                    (S
                      (NP (PRP you))
                      (VP (VBP have)
                        (NP (JJR more) (NN power))
                        (SBAR (IN than)
                          (S
                            (NP (PRP they))
                            (VP (VBP do))))))))))))))
    (. ?)))

cop(that-3, Is-1)
nsubj(that-3, it-2)
root(ROOT-0, that-3)
dobj(want-5, that-3)
nsubj(want-5, you-4)
xsubj(feel-7, you-4)
rcmod(that-3, want-5)
aux(feel-7, to-6)
xcomp(want-5, feel-7)
complm(have-10, that-8)
nsubj(have-10, you-9)
ccomp(feel-7, have-10)
amod(power-12, more-11)
dobj(have-10, power-12)
mark(do-15, than-13)
nsubj(do-15, they-14)
advcl(have-10, do-15)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (NP
      (NP (DT that))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB feel)
                  (SBAR (IN like)
                    (S
                      (NP (PRP you))
                      (VP (VBP 're)
                        (PP (IN above)
                          (NP (PRP them)))))))))))))
    (. ?)))

cop(that-3, Is-1)
nsubj(that-3, it-2)
root(ROOT-0, that-3)
dobj(want-5, that-3)
nsubj(want-5, you-4)
xsubj(feel-7, you-4)
rcmod(that-3, want-5)
aux(feel-7, to-6)
xcomp(want-5, feel-7)
mark('re-10, like-8)
nsubj('re-10, you-9)
advcl(feel-7, 're-10)
prep_above('re-10, them-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (ADVP (RB so))
        (, ,)
        (VP (VBP imagine)
          (NP (DT that) (NN someone)))))
    (VP (VBZ opposes)
      (NP (PRP$ your) (NN marriage)))
    (. .)))

mark(imagine-4, If-1)
advmod(imagine-4, so-2)
csubj(opposes-7, imagine-4)
det(someone-6, that-5)
dobj(imagine-4, someone-6)
root(ROOT-0, opposes-7)
poss(marriage-9, your-8)
dobj(opposes-7, marriage-9)

(ROOT
  (SQ (MD Can)
    (NP (NN u))
    (VP (VB accept)
      (NP (DT this)))
    (. ?)))

aux(accept-3, Can-1)
nsubj(accept-3, u-2)
root(ROOT-0, accept-3)
dobj(accept-3, this-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB say)
        (NP (NN no.))))))

nsubj(say-3, I-1)
aux(say-3, 'll-2)
root(ROOT-0, say-3)
dobj(say-3, no.-4)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ has)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB choose)
              (SBAR
                (SBAR (IN if)
                  (S
                    (NP (PRP they))
                    (VP (MD can)
                      (VP (VB marry)))))
                (CC or)
                (SBAR (RB not) (IN unless)
                  (S
                    (NP (PRP they))
                    (VP (VBP have)
                      (NP (DT a) (JJ real) (JJ head-nodding) (NN reason)))))))))))
    (. .)))

det(one-2, No-1)
nsubj(has-3, one-2)
root(ROOT-0, has-3)
det(right-5, the-4)
dobj(has-3, right-5)
aux(choose-7, to-6)
infmod(right-5, choose-7)
mark(marry-11, if-8)
nsubj(marry-11, they-9)
aux(marry-11, can-10)
dep(choose-7, marry-11)
dep(have-16, not-13)
dep(have-16, unless-14)
nsubj(have-16, they-15)
dep(choose-7, have-16)
conj_or(marry-11, have-16)
det(reason-20, a-17)
amod(reason-20, real-18)
amod(reason-20, head-nodding-19)
dobj(have-16, reason-20)

