(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB expect)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB believe)
            (SBAR (IN that)
              (S
                (NP (PRP YOU))
                (VP (VBP do) (RB n't)
                  (VP (VB care)
                    (PP (IN about)
                      (NP (NNS points)))))))))))
    (. ?)))

aux(expect-3, Do-1)
nsubj(expect-3, you-2)
root(ROOT-0, expect-3)
nsubj(believe-6, me-4)
aux(believe-6, to-5)
xcomp(expect-3, believe-6)
complm(care-11, that-7)
nsubj(care-11, YOU-8)
aux(care-11, do-9)
neg(care-11, n't-10)
ccomp(believe-6, care-11)
prep_about(care-11, points-13)

(ROOT
  (FRAG
    (NP (PRP YOU))
    (, ,)
    (SBAR
      (WHNP (WP who))
      (S
        (VP (VBP do)
          (NP (NN everything))
          (PP (IN in)
            (NP (PRP$ your) (NN power)
              (S
                (VP (TO to)
                  (VP (VB collect)
                    (NP (PRP them))
                    (SBAR (RB so) (IN that)
                      (S
                        (NP (PRP it))
                        (VP (VBZ 's)
                          (PP (IN at)
                            (NP
                              (NP (DT the) (NN point))
                              (PP (IN of)
                                (S
                                  (VP (VBG being)
                                    (ADJP (JJ ridiculous))))))))))))))))))
    (. !)))

root(ROOT-0, YOU-1)
nsubj(do-4, who-3)
dep(YOU-1, do-4)
dobj(do-4, everything-5)
poss(power-8, your-7)
prep_in(do-4, power-8)
aux(collect-10, to-9)
infmod(power-8, collect-10)
dobj(collect-10, them-11)
advmod('s-15, so-12)
dep('s-15, that-13)
nsubj('s-15, it-14)
advcl(collect-10, 's-15)
det(point-18, the-17)
prep_at('s-15, point-18)
cop(ridiculous-21, being-20)
prepc_of(point-18, ridiculous-21)

(ROOT
  (S
    (NP (DT Those))
    (VP (VBP are)
      (NP
        (NP (NNS things))
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD 'll)
              (ADVP (RB never))
              (VP (VB give)
                (PRT (RP up))
                (PP (IN on))))))))
    (. .)))

nsubj(things-3, Those-1)
cop(things-3, are-2)
root(ROOT-0, things-3)
prep_on(give-7, things-3)
nsubj(give-7, I-4)
aux(give-7, 'll-5)
neg(give-7, never-6)
rcmod(things-3, give-7)
prt(give-7, up-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB fight)
          (NP (PRP it))
          (PP (IN for)
            (NP (PRP me))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB fight)
          (NP (PRP it))
          (PP (IN for)
            (NP
              (NP (PRP you))
              (CC and)
              (NP (NN anyone) (RB else)))))))
    (. .)))

nsubj(fight-3, I-1)
aux(fight-3, 'll-2)
root(ROOT-0, fight-3)
dobj(fight-3, it-4)
prep_for(fight-3, me-6)
nsubj(fight-10, I-8)
aux(fight-10, 'll-9)
conj_and(fight-3, fight-10)
dobj(fight-10, it-11)
prep_for(fight-10, you-13)
prep_for(fight-10, anyone-15)
conj_and(you-13, anyone-15)
advmod(anyone-15, else-16)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN matter))
        (PP (IN of)
          (NP
            (NP (NN record))
            (PP
              (PP (IN on)
                (NP (DT this) (NN site)))
              (CC and)
              (PP (IN in)
                (NP (PRP$ my) (NN life))))))))
    (. .)))

nsubj(matter-4, That-1)
cop(matter-4, 's-2)
det(matter-4, a-3)
root(ROOT-0, matter-4)
prep_of(matter-4, record-6)
prep_of(matter-4, record-6')
conj_and(record-6, record-6')
det(site-9, this-8)
prep_on(record-6, site-9)
poss(life-13, my-12)
prep_in(record-6', life-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could)
      (VP (VB hate)
        (NP (PRP you))
        (PRN (CC but)
          (S
            (ADVP (RB still))
            (VP (VB stand)
              (PRT (RP up)))))
        (PP (IN for)
          (NP (PRP$ your) (NN right)
            (S
              (VP (TO to)
                (VP (VB be))))))))
    (. .)))

nsubj(hate-3, I-1)
aux(hate-3, could-2)
root(ROOT-0, hate-3)
dobj(hate-3, you-4)
dep(stand-7, but-5)
advmod(stand-7, still-6)
parataxis(hate-3, stand-7)
prt(stand-7, up-8)
poss(right-11, your-10)
prep_for(hate-3, right-11)
aux(be-13, to-12)
infmod(right-11, be-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD tried)
      (S
        (VP (TO to)
          (VP (VB give)
            (NP (PRP me))
            (NP (PRP$ your) (NNS points))))))
    (. ?)))

nsubj(tried-2, You-1)
xsubj(give-4, You-1)
root(ROOT-0, tried-2)
aux(give-4, to-3)
xcomp(tried-2, give-4)
iobj(give-4, me-5)
poss(points-7, your-6)
dobj(give-4, points-7)

(ROOT
  (FRAG
    (INTJ (UH Yes))
    (, ,)
    (NP (NN right))
    (: ...)))

dep(right-3, Yes-1)
root(ROOT-0, right-3)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP you))
        (VP (VBP know)
          (NP
            (NP (RB darned) (RB well))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP
                  (VP (MD can) (RB not)
                    (VP (VB be)
                      (VP (VBN done))))
                  (CC nor)
                  (VP (MD would)))))))))
    (NP (PRP I))
    (VP (VBP expect)
      (NP
        (NP
          (NP (DT that))
          (PP (IN of)
            (NP (NN anyone))))
        (CC and)
        (NP
          (NP (JJS least))
          (PP (IN of)
            (NP (DT all) (NN you))))))
    (. !)))

advmod(know-3, when-1)
nsubj(know-3, you-2)
advcl(expect-14, know-3)
advmod(well-5, darned-4)
dobj(know-3, well-5)
nsubjpass(done-10, well-5)
aux(done-10, can-7)
neg(done-10, not-8)
auxpass(done-10, be-9)
rcmod(well-5, done-10)
rcmod(well-5, would-12)
conj_nor(done-10, would-12)
nsubj(expect-14, I-13)
root(ROOT-0, expect-14)
dobj(expect-14, that-15)
prep_of(that-15, anyone-17)
dobj(expect-14, least-19)
conj_and(that-15, least-19)
det(you-22, all-21)
prep_of(least-19, you-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (NP
        (NP (DT the) (NN one))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD started)
              (NP (NN name) (NN calling)))))))
    (. ?)))

nsubj(one-4, I-1)
cop(one-4, 'm-2)
det(one-4, the-3)
root(ROOT-0, one-4)
nsubj(started-6, one-4)
rcmod(one-4, started-6)
nn(calling-8, name-7)
dobj(started-6, calling-8)

(ROOT
  (S
    (INTJ (VB Please))
    (VP (VB tell)
      (NP (PRP me))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (VP (VBG joking))))))
    (. !)))

dep(tell-2, Please-1)
root(ROOT-0, tell-2)
dobj(tell-2, me-3)
nsubj(joking-6, you-4)
aux(joking-6, 're-5)
dep(tell-2, joking-6)

(ROOT
  (S
    (PP (IN Outside)
      (PP (IN of)
        (NP
          (NP (DT this) (NN argument))
          (PP (IN between)
            (NP (PRP us))))))
    (, ,)
    (VP (VB tell)
      (NP (PRP me))
      (SBAR
        (WHNP (WP who))
        (, ,)
        (S
          (NP (WDT what))
          (VP (VB and)
            (FRAG
              (WHADVP (WRB where)))))))
    (. !)))

prepc_outside_of(tell-8, of-2)
det(argument-4, this-3)
pobj(tell-8, argument-4)
prep_between(argument-4, us-6)
root(ROOT-0, tell-8)
dobj(tell-8, me-9)
dobj(and-13, who-10)
nsubj(and-13, what-12)
dep(tell-8, and-13)
dep(and-13, where-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB always))
      (ADJP (JJ interested)
        (PP (IN in)
          (S
            (VP (VBG negotiating)
              (PP (IN with)
                (NP
                  (NP (NN anyone))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (MD will)
                        (VP (VB listen))))))))))))
    (. .)))

nsubj(interested-4, I-1)
cop(interested-4, am-2)
advmod(interested-4, always-3)
root(ROOT-0, interested-4)
prepc_in(interested-4, negotiating-6)
prep_with(negotiating-6, anyone-8)
nsubj(listen-11, anyone-8)
aux(listen-11, will-10)
rcmod(anyone-8, listen-11)

(ROOT
  (S
    (NP (JJ Successful) (NNS negotiations))
    (VP (VBP need)
      (NP (CD two) (NNS people))
      (S
        (VP (TO to)
          (VP (VB want)
            (S
              (VP (TO to)
                (VP (VB resolve)
                  (NP (NN something)))))))))
    (. .)))

amod(negotiations-2, Successful-1)
nsubj(need-3, negotiations-2)
root(ROOT-0, need-3)
num(people-5, two-4)
dobj(need-3, people-5)
aux(want-7, to-6)
xcomp(need-3, want-7)
aux(resolve-9, to-8)
xcomp(want-7, resolve-9)
dobj(resolve-9, something-10)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (VP (VBN straightened)
          (PP (IN out)
            (NP
              (NP (DT the) (JJ terrible) (NN incident))
              (PP (IN with)
                (NP (NN repubgal))))))))
    (. ?)))

dobj(think-4, Who-1)
aux(think-4, do-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
dep(think-4, straightened-5)
det(incident-9, the-7)
amod(incident-9, terrible-8)
prep_out(straightened-5, incident-9)
prep_with(incident-9, repubgal-11)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP you))
    (VP (VBP bet)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (ADJP (VBN entitled)))))
      (, ,)
      (SBAR (RB just) (IN as)
        (S
          (NP (NN everyone) (RB else))
          (VP (VBZ is)
            (UCP
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN treated)
                      (ADVP (RB fairly))))))
              (CC and)
              (PP (IN like)
                (NP (DT a) (NN human) (VBG being))))))))
    (. .)))

dep(bet-4, Yes-1)
nsubj(bet-4, you-3)
root(ROOT-0, bet-4)
nsubjpass(entitled-7, I-5)
auxpass(entitled-7, 'm-6)
ccomp(bet-4, entitled-7)
advmod(is-13, just-9)
dep(is-13, as-10)
nsubj(is-13, everyone-11)
advmod(everyone-11, else-12)
ccomp(bet-4, is-13)
aux(treated-16, to-14)
auxpass(treated-16, be-15)
dep(is-13, treated-16)
advmod(treated-16, fairly-17)
dep(is-13, like-19)
conj_and(treated-16, like-19)
det(human-21, a-20)
pobj(like-19, human-21)
amod(human-21, being-22)

