(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB care)))
    (. ?)))

advmod(care-4, Why-1)
aux(care-4, should-2)
nsubj(care-4, I-3)
root(ROOT-0, care-4)

(ROOT
  (SQ
    (SQ
      (NP (NNP Explain) (CD one))
      (VP (VB reason)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP I))
            (VP (MD should)
              (VP (VB care) (, ,)
                (SBAR (IN as)
                  (S
                    (NP (PRP I))
                    (VP (VBD said)
                      (ADVP (RB above)))))
                (, ,)
                (SBAR (IN if)
                  (S
                    (NP (DT the) (NN kid))
                    (VP (VBZ comes)
                      (ADJP (IN out) (JJ okay)))))))))))
    (, ,)
    (CC and)
    (SQ (VBZ is)
      (VP (VBN taken)
        (NP (VB care) (IN of))))
    (. ?)))

nsubj(reason-3, Explain-1)
nsubjpass(taken-23, Explain-1)
num(Explain-1, one-2)
root(ROOT-0, reason-3)
advmod(care-7, why-4)
nsubj(care-7, I-5)
aux(care-7, should-6)
advcl(reason-3, care-7)
mark(said-11, as-9)
nsubj(said-11, I-10)
advcl(care-7, said-11)
advmod(said-11, above-12)
mark(comes-17, if-14)
det(kid-16, the-15)
nsubj(comes-17, kid-16)
advcl(care-7, comes-17)
dep(okay-19, out-18)
acomp(comes-17, okay-19)
auxpass(taken-23, is-22)
conj_and(reason-3, taken-23)
dep(of-25, care-24)
dobj(taken-23, of-25)

(ROOT
  (S
    (S
      (NP (NNS People))
      (VP (VBP come)
        (PRT (RP out))
        (PP (IN of)
          (NP (JJ single) (NN parent)))))
    (, ,)
    (CC and)
    (ADVP (RB single-sex))
    (, ,)
    (S
      (NP (NNS relationships))
      (ADJP (RB just) (JJ fine)))
    (. .)))

nsubj(come-2, People-1)
nsubj(fine-13, People-1)
root(ROOT-0, come-2)
amod(parent-6, single-5)
prep_out_of(come-2, parent-6)
advmod(come-2, single-sex-9)
conj_and(come-2, single-sex-9)
dep(fine-13, relationships-11)
advmod(fine-13, just-12)
ccomp(come-2, fine-13)
conj_and(come-2, fine-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP say)
      (S
        (VP (VB go)
          (ADVP (RB ahead)))))
    (. .)))

nsubj(say-2, I-1)
root(ROOT-0, say-2)
ccomp(say-2, go-3)
advmod(go-3, ahead-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP am)
              (ADJP (RB so) (JJ high)
                (CC and)
                (JJ mighty)
                (SBAR (IN that)
                  (S
                    (NP (PRP$ my) (JJ own) (NN opinion))
                    (VP (VBZ justifies)
                      (NP
                        (NP (DT the) (NN rule))
                        (PP (IN of)
                          (NP (NN behavior))))
                      (PP (IN for)
                        (NP
                          (NP (DT a) (JJ whole) (NN section))
                          (PP (IN of)
                            (NP (NN society))))))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, not-3)
root(ROOT-0, think-4)
nsubj(high-8, I-5)
nsubj(mighty-10, I-5)
cop(high-8, am-6)
advmod(high-8, so-7)
ccomp(think-4, high-8)
ccomp(think-4, mighty-10)
conj_and(high-8, mighty-10)
complm(justifies-15, that-11)
poss(opinion-14, my-12)
amod(opinion-14, own-13)
nsubj(justifies-15, opinion-14)
ccomp(high-8, justifies-15)
det(rule-17, the-16)
dobj(justifies-15, rule-17)
prep_of(rule-17, behavior-19)
det(section-23, a-21)
amod(section-23, whole-22)
prep_for(justifies-15, section-23)
prep_of(section-23, society-25)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADVP (RB just))
        (RB not)
        (ADJP (RB that) (JJ self-confident))))
    (, ,)
    (NP (PRP I))
    (VP (VBP guess))
    (: ...)))

nsubj(self-confident-6, I-1)
cop(self-confident-6, am-2)
advmod(self-confident-6, just-3)
neg(self-confident-6, not-4)
advmod(self-confident-6, that-5)
ccomp(guess-9, self-confident-6)
nsubj(guess-9, I-8)
root(ROOT-0, guess-9)

(ROOT
  (S (CC But)
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG getting)
        (PRT (RP off))
        (NP (NN subject))))
    (. .)))

cc(getting-5, But-1)
nsubj(getting-5, I-3)
aux(getting-5, 'm-4)
root(ROOT-0, getting-5)
prt(getting-5, off-6)
dobj(getting-5, subject-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP (PRP$ my) (NN place)
        (S
          (VP (TO to)
            (VP (VB care))))))
    (. .)))

nsubj(place-5, It-1)
cop(place-5, 's-2)
neg(place-5, not-3)
poss(place-5, my-4)
root(ROOT-0, place-5)
aux(care-7, to-6)
infmod(place-5, care-7)

(ROOT
  (S
    (NP
      (NP (DT The) (`` ``) (NNS birds))
      (CC and)
      (NP (DT the) (NNS bees))
      ('' ''))
    (VP (VBP get)
      (SBAR
        (S
          (VP (VBD explained)
            (ADJP (RB just) (JJ fine)
              (PP (TO to)
                (NP
                  (NP (NNS boys)
                    (CC and)
                    (NNS girls))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (ADVP (RB never))
                      (VP (VBD had)
                        (NP (DT the) (NN opportunity)
                          (S
                            (VP (TO to)
                              (VP (VB have)
                                (NP (NNS mothers)
                                  (CC or)
                                  (NNS fathers))))))))))))))))
    (. .)))

det(birds-3, The-1)
nsubj(get-8, birds-3)
det(bees-6, the-5)
conj_and(birds-3, bees-6)
nsubj(get-8, bees-6)
root(ROOT-0, get-8)
ccomp(get-8, explained-9)
advmod(fine-11, just-10)
acomp(explained-9, fine-11)
prep_to(fine-11, boys-13)
nsubj(had-18, boys-13)
prep_to(fine-11, girls-15)
conj_and(boys-13, girls-15)
nsubj(had-18, girls-15)
neg(had-18, never-17)
rcmod(boys-13, had-18)
det(opportunity-20, the-19)
dobj(had-18, opportunity-20)
aux(have-22, to-21)
infmod(opportunity-20, have-22)
dobj(have-22, mothers-23)
dobj(have-22, fathers-25)
conj_or(mothers-23, fathers-25)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP know)
            (NP
              (NP (PRP it))
              (, ,)
              (NP (NNP Bill)))))))
    (. .)))

cc(think-3, And-1)
nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(know-5, you-4)
ccomp(think-3, know-5)
dobj(know-5, it-6)
appos(it-6, Bill-8)

