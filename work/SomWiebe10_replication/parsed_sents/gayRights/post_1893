(ROOT
  (S
    (ADVP (RB No) (RB obviously))
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (DT the) (NN state))
            (VP (VBZ has)
              (NP (DT the) (NN right)
                (S
                  (VP (TO to)
                    (VP (VB force)
                      (S
                        (NP (NNS churches))
                        (VP (TO to)
                          (VP (VB marry)
                            (NP (NNS gays))))))))))))))
    (. .)))

advmod(obviously-2, No-1)
advmod(think-6, obviously-2)
nsubj(think-6, I-3)
aux(think-6, do-4)
neg(think-6, n't-5)
root(ROOT-0, think-6)
det(state-8, the-7)
nsubj(has-9, state-8)
ccomp(think-6, has-9)
det(right-11, the-10)
dobj(has-9, right-11)
aux(force-13, to-12)
infmod(right-11, force-13)
nsubj(marry-16, churches-14)
aux(marry-16, to-15)
xcomp(force-13, marry-16)
dobj(marry-16, gays-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ intolerant))))))))
    (NP (DT that))
    (VP (VBZ is)
      (NP (PRP$ their) (NN business)))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, they-2)
xsubj(intolerant-6, they-2)
advcl(business-10, want-3)
aux(intolerant-6, to-4)
cop(intolerant-6, be-5)
xcomp(want-3, intolerant-6)
nsubj(business-10, that-7)
cop(business-10, is-8)
poss(business-10, their-9)
root(ROOT-0, business-10)

(ROOT
  (S
    (ADVP (RB However))
    (PP (IN in)
      (NP (DT a) (JJ similar) (NN vein)))
    (NP (PRP I))
    (VP (VBP do)
      (SBAR
        (S
          (VP (VBP think)
            (SBAR
              (S
                (NP (DT all) (NNS religions))
                (VP (MD should)
                  (VP (VB lose)
                    (NP (PRP$ their) (NN tax) (JJ exempt) (NN status))))))))))
    (. .)))

advmod(do-7, However-1)
det(vein-5, a-3)
amod(vein-5, similar-4)
prep_in(do-7, vein-5)
nsubj(do-7, I-6)
root(ROOT-0, do-7)
ccomp(do-7, think-8)
det(religions-10, all-9)
nsubj(lose-12, religions-10)
aux(lose-12, should-11)
ccomp(think-8, lose-12)
poss(status-16, their-13)
nn(status-16, tax-14)
amod(status-16, exempt-15)
dobj(lose-12, status-16)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (PRP I))
        (VP (VBP think)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ violates)))))))
    (NP (DT the) (NNP Lemon) (NNP Test))
    (VP (VBD decided)
      (PP (IN in)
        (NP (NNP Lemon)
          (CC v.)
          (NNP Kurtzman)))
      (PP (IN for)
        (S
          (VP (VBG testing)
            (NP
              (NP (DT the) (NN violation))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN establishment) (NN clause))
                  (PP (IN of)
                    (NP (DT the) (NNP First) (NNP Amendment))))))))))
    (. .)))

mark(think-3, Because-1)
nsubj(think-3, I-2)
advcl(decided-9, think-3)
nsubj(violates-5, it-4)
ccomp(think-3, violates-5)
det(Test-8, the-6)
nn(Test-8, Lemon-7)
nsubj(decided-9, Test-8)
root(ROOT-0, decided-9)
prep_in(decided-9, Lemon-11)
prep_in(decided-9, Kurtzman-13)
conj_v.(Lemon-11, Kurtzman-13)
prepc_for(decided-9, testing-15)
det(violation-17, the-16)
dobj(testing-15, violation-17)
det(clause-21, the-19)
nn(clause-21, establishment-20)
prep_of(violation-17, clause-21)
det(Amendment-25, the-23)
nn(Amendment-25, First-24)
prep_of(clause-21, Amendment-25)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ forces)
        (NP (DT the) (NN government)
          (S
            (VP (TO to)
              (VP (VB decide)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (NP (NNS religions))
                    (VP (VBP are)
                      (ADJP (JJ legitimate)))))))))))
    (CC and)
    (S
      (NP (DT this))
      (`` ``)
      (ADVP (RB needlessly))
      (VP (VBZ entangles)
        (NP
          (NP (DT the) (NN government))
          (PP (IN in)
            (NP (NN religion))))))
    (. .)))

nsubj(forces-2, It-1)
root(ROOT-0, forces-2)
det(government-4, the-3)
dobj(forces-2, government-4)
aux(decide-6, to-5)
infmod(government-4, decide-6)
dobj(legitimate-10, which-7)
nsubj(legitimate-10, religions-8)
cop(legitimate-10, are-9)
ccomp(decide-6, legitimate-10)
nsubj(entangles-15, this-12)
advmod(entangles-15, needlessly-14)
conj_and(forces-2, entangles-15)
det(government-17, the-16)
dobj(entangles-15, government-17)
prep_in(government-17, religion-19)

(ROOT
  (S ('' '')
    (PP (IN Furthermore)
      (NP
        (NP (DT all))
        (PP (IN of)
          (NP
            (NP (DT the) (NN money))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (VP (VBN lost)
                    (PP (IN in)
                      (NP (JJ exempt) (NNS taxes)))
                    (PP (IN from)
                      (NP (NNS churches)))))))))))
    (VP (VBZ does) (RB not)
      (VP (VB benefit)
        (NP
          (NP (DT the) (JJ entire) (NN country))
          (, ,) (RB only)
          (NP
            (NP (NNS members))
            (PP (IN of)
              (NP (DT that) (NN religion)))))))
    (. .)))

prep_furthermore(benefit-17, all-3)
det(money-6, the-5)
prep_of(all-3, money-6)
nsubjpass(lost-9, money-6)
auxpass(lost-9, is-8)
rcmod(money-6, lost-9)
amod(taxes-12, exempt-11)
prep_in(lost-9, taxes-12)
prep_from(lost-9, churches-14)
aux(benefit-17, does-15)
neg(benefit-17, not-16)
root(ROOT-0, benefit-17)
det(country-20, the-18)
amod(country-20, entire-19)
dobj(benefit-17, country-20)
advmod(country-20, only-22)
dep(country-20, members-23)
det(religion-26, that-25)
prep_of(members-23, religion-26)

(ROOT
  (S
    (ADVP (RB Yes))
    (S
      (NP
        (NP (NN money))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ goes)
              (PP (TO to)
                (NP (NN charity)))))))
      (VP
        (VP (VBZ benefits)
          (NP (NN everyone)))
        (, ,)
        (CC but)
        (ADVP (RB then))
        (SBAR (RB only) (IN that)
          (S
            (NP (NN money))
            (VP (MD should)
              (VP (VB be)
                (VP (VBN deducted)
                  (PP (IN from)
                    (NP (PRP$ their) (NNS taxes))))))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD should)
        (VP (VB pay)
          (NP (NN tax))
          (PP (IN on)
            (NP (DT the) (NN rest))))))
    (. .)))

advmod(benefits-7, Yes-1)
nsubj(goes-4, money-2)
nsubj(benefits-7, money-2)
rcmod(money-2, goes-4)
prep_to(goes-4, charity-6)
root(ROOT-0, benefits-7)
dobj(benefits-7, everyone-8)
advmod(benefits-7, then-11)
conj_but(benefits-7, then-11)
advmod(deducted-17, only-12)
dep(deducted-17, that-13)
nsubjpass(deducted-17, money-14)
aux(deducted-17, should-15)
auxpass(deducted-17, be-16)
ccomp(benefits-7, deducted-17)
conj_but(benefits-7, deducted-17)
poss(taxes-20, their-19)
prep_from(deducted-17, taxes-20)
nsubj(pay-24, they-22)
aux(pay-24, should-23)
conj_and(benefits-7, pay-24)
dobj(pay-24, tax-25)
det(rest-28, the-27)
prep_on(pay-24, rest-28)

(ROOT
  (S
    (NP (DT This))
    (ADVP (RB also))
    (VP (VBZ fails)
      (NP (DT the) (NNP Lemon) (NNP Test))
      (SBAR (IN because)
        (S
          (ADVP (RB again))
          (NP (PRP it))
          (VP (VBZ forces)
            (NP (DT the) (NN government)
              (S
                (VP (TO to)
                  (VP (VB decide)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (NP (NNS religions))
                        (VP (VBP are)
                          (ADJP (JJ legitimate)
                            (CC and)
                            (JJ worthy))
                          (PP (IN of)
                            (NP (NN tax) (NN exemption))))))))))))))
    (. .)))

nsubj(fails-3, This-1)
advmod(fails-3, also-2)
root(ROOT-0, fails-3)
det(Test-6, the-4)
nn(Test-6, Lemon-5)
dobj(fails-3, Test-6)
mark(forces-10, because-7)
advmod(forces-10, again-8)
nsubj(forces-10, it-9)
advcl(fails-3, forces-10)
det(government-12, the-11)
dobj(forces-10, government-12)
aux(decide-14, to-13)
infmod(government-12, decide-14)
dobj(legitimate-18, which-15)
nsubj(legitimate-18, religions-16)
nsubj(worthy-20, religions-16)
cop(legitimate-18, are-17)
ccomp(decide-14, legitimate-18)
ccomp(decide-14, worthy-20)
conj_and(legitimate-18, worthy-20)
nn(exemption-23, tax-22)
prep_of(legitimate-18, exemption-23)

(ROOT
  (FRAG
    (ADVP (RB So))
    (SBAR (IN for)
      (S
        (NP (PRP you))
        (VP (VBZ is)
          (NP
            (NP (DT the)
              (ADJP (JJ second) (JJS best))
              (NN option))
            (VP (VBG allowing)
              (NP (NNS gays))
              (S
                (VP (TO to)
                  (VP
                    (VP (VB be)
                      (VP (VBN married)))
                    (CC or)
                    (VP (VB do)
                      (S
                        (NP (PRP you))
                        (VP (VB jump)
                          (PP (RB straight) (IN from)
                            (NP
                              (NP (RB only) (JJ civil) (NNS unions))
                              (PP (IN for)
                                (NP
                                  (NP (DT all))
                                  (PP (TO to)
                                    (NP (DT no) (JJ gay) (NNS marriages))))))))))))))))))
    (. ?)))

root(ROOT-0, So-1)
mark(option-8, for-2)
nsubj(option-8, you-3)
cop(option-8, is-4)
det(option-8, the-5)
amod(option-8, second-6)
dep(second-6, best-7)
dep(So-1, option-8)
partmod(option-8, allowing-9)
dobj(allowing-9, gays-10)
aux(married-13, to-11)
auxpass(married-13, be-12)
xcomp(allowing-9, married-13)
xcomp(allowing-9, do-15)
conj_or(married-13, do-15)
nsubj(jump-17, you-16)
ccomp(do-15, jump-17)
advmod(jump-17, straight-18)
advmod(unions-22, only-20)
amod(unions-22, civil-21)
prep_from(jump-17, unions-22)
prep_for(unions-22, all-24)
det(marriages-28, no-26)
amod(marriages-28, gay-27)
prep_to(all-24, marriages-28)

