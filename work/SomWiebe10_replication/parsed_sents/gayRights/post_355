(ROOT
  (S
    (NP (JJ Logical) (NNS minds))
    (VP (VBP think)
      (PP (IN in)
        (NP (DT a) (JJ specific) (NN way))))
    (. .)))

amod(minds-2, Logical-1)
nsubj(think-3, minds-2)
root(ROOT-0, think-3)
det(way-7, a-5)
amod(way-7, specific-6)
prep_in(think-3, way-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN something))
        (VP (MD can)
          (VP (VB be)
            (VP (VBN proven)
              (PP (IN by)
                (NP (NNS facts)))
              (ADVP (RB then)))))))
    (NP (PRP it))
    (VP (VBZ exists))
    (. .)))

mark(proven-5, If-1)
nsubjpass(proven-5, something-2)
aux(proven-5, can-3)
auxpass(proven-5, be-4)
advcl(exists-10, proven-5)
agent(proven-5, facts-7)
advmod(proven-5, then-8)
nsubj(exists-10, it-9)
root(ROOT-0, exists-10)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN case)))
    (NP (EX there))
    (VP (VBP are)
      (NP (DT NO) (NNS facts)
        (S
          (VP (TO to)
            (VP (VB show)
              (SBAR (IN that)
                (S
                  (NP (NN homosexuality))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (JJ genetic))
                      (CC or)
                      (NP (NN chemical)))))))))))
    (. .)))

det(case-3, this-2)
prep_in(are-5, case-3)
expl(are-5, there-4)
root(ROOT-0, are-5)
det(facts-7, NO-6)
nsubj(are-5, facts-7)
aux(show-9, to-8)
infmod(facts-7, show-9)
complm(genetic-14, that-10)
nsubj(genetic-14, homosexuality-11)
cop(genetic-14, is-12)
det(genetic-14, a-13)
ccomp(show-9, genetic-14)
ccomp(show-9, chemical-16)
conj_or(genetic-14, chemical-16)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (PRP it))
    (VP (VBZ is) (RB n't)
      (NP (DT a) (NN possibility))
      (SBAR (IN for)
        (S
          (NP (PRP me))
          (VP (TO to)
            (VP (VB be)
              (VP (VBG making)
                (NP
                  (NP (DT an) (`` ``) (JJ entire) (NN arguement))
                  (VP (VBN based)
                    (PRT (RP off))))
                (PP (IN of)
                  (NP (NN ignorance)))
                ('' '')
                (SBAR (IN since)
                  (S
                    (NP (EX there))
                    (VP (VBP are)
                      (NP (DT no) (NNS facts)
                        (S
                          (VP (TO to)
                            (VP (VB back)
                              (PRT (RP up))
                              (NP (DT that) (NN assumption)))))))))))))))
    (. .)))

advmod(possibility-6, Therefore-1)
nsubj(possibility-6, it-2)
cop(possibility-6, is-3)
neg(possibility-6, n't-4)
det(possibility-6, a-5)
root(ROOT-0, possibility-6)
mark(making-11, for-7)
nsubj(making-11, me-8)
aux(making-11, to-9)
aux(making-11, be-10)
advcl(possibility-6, making-11)
xcomp(possibility-6, making-11)
det(arguement-15, an-12)
amod(arguement-15, entire-14)
dobj(making-11, arguement-15)
partmod(arguement-15, based-16)
prt(based-16, off-17)
prep_of(making-11, ignorance-19)
mark(are-23, since-21)
expl(are-23, there-22)
advcl(making-11, are-23)
det(facts-25, no-24)
nsubj(are-23, facts-25)
aux(back-27, to-26)
infmod(facts-25, back-27)
prt(back-27, up-28)
det(assumption-30, that-29)
dobj(back-27, assumption-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (ADVP (RB happily))
      (VP
        (VP (VB buy)
          (PP (IN into)
            (NP (DT that) (NN logic))))
        (CC or)
        (VP
          (ADVP (RB even))
          (VB give)
          (NP (PRP it))
          (NP
            (NP (DT a) (NN chance))
            (SBAR (IN if)
              (S
                (NP (EX there))
                (VP (VBD was)
                  (NP (NNP ANY) (NN indication))
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (MD could)
                        (VP (VB exist))))))))))))
    (. .)))

nsubj(buy-4, I-1)
nsubj(give-10, I-1)
aux(buy-4, will-2)
advmod(buy-4, happily-3)
root(ROOT-0, buy-4)
det(logic-7, that-6)
prep_into(buy-4, logic-7)
advmod(give-10, even-9)
conj_or(buy-4, give-10)
iobj(give-10, it-11)
det(chance-13, a-12)
dobj(give-10, chance-13)
mark(was-16, if-14)
expl(was-16, there-15)
dep(chance-13, was-16)
nn(indication-18, ANY-17)
nsubj(was-16, indication-18)
complm(exist-22, that-19)
nsubj(exist-22, it-20)
aux(exist-22, could-21)
ccomp(was-16, exist-22)

(ROOT
  (S
    (ADVP (RB However))
    (NP (EX there))
    (VP (VBZ has)
      (VP (VBN been)
        (NP
          (NP (NN nothing))
          (PP (CC but)
            (NP
              (NP (`` ``) (NNS possibilities) ('' ''))
              (CC and)
              (NP (NNS theories)))))
        (PP (IN in)
          (NP
            (NP (DT that) (NN line))
            (PP (IN of)
              (NP (NN thought)))))))
    (. .)))

advmod(nothing-5, However-1)
expl(nothing-5, there-2)
aux(nothing-5, has-3)
cop(nothing-5, been-4)
root(ROOT-0, nothing-5)
prep(nothing-5, but-6)
dep(but-6, possibilities-8)
dep(but-6, theories-11)
conj_and(possibilities-8, theories-11)
det(line-14, that-13)
prep_in(nothing-5, line-14)
prep_of(line-14, thought-16)

(ROOT
  (SBARQ (RB So)
    (WHADVP (WRB how))
    (SQ (VBZ is)
      (NP (NN information))
      (VP (VBN based)
        (PP (IN on)
          (NP (NNS theories)
            (CC and)
            (NNS possibilities)))
        (NP
          (NP (DT any) (JJR more) (NN IGNORANT))
          (PP (IN than)
            (NP (PRP$ my) (NN claim))))))
    (. ?)))

advmod(based-5, So-1)
advmod(based-5, how-2)
auxpass(based-5, is-3)
nsubjpass(based-5, information-4)
root(ROOT-0, based-5)
prep_on(based-5, theories-7)
prep_on(based-5, possibilities-9)
conj_and(theories-7, possibilities-9)
det(IGNORANT-12, any-10)
amod(IGNORANT-12, more-11)
dobj(based-5, IGNORANT-12)
poss(claim-15, my-14)
prep_than(IGNORANT-12, claim-15)

(ROOT
  (S
    (ADVP (RB Really))
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB do)
            (ADVP (RBR better))
            (PP (IN than)
              (NP (DT that)))))))
    (. !)))

advmod(have-3, Really-1)
nsubj(have-3, you-2)
xsubj(do-5, you-2)
root(ROOT-0, have-3)
aux(do-5, to-4)
xcomp(have-3, do-5)
advmod(do-5, better-6)
prep_than(do-5, that-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP need)
      (NP
        (QP (JJR more) (IN than) (RB just))
        (DT a) (JJ strong) (NN opinion))
      (S
        (VP (TO to)
          (VP (VB debate)
            (NP (DT a) (NN topic))
            (PP (IN like)
              (NP (DT this) (NN !!)))))))))

nsubj(need-2, You-1)
root(ROOT-0, need-2)
quantmod(than-4, more-3)
num(opinion-8, than-4)
quantmod(than-4, just-5)
det(opinion-8, a-6)
amod(opinion-8, strong-7)
dobj(need-2, opinion-8)
aux(debate-10, to-9)
xcomp(need-2, debate-10)
det(topic-12, a-11)
dobj(debate-10, topic-12)
det(!!-15, this-14)
prep_like(debate-10, !!-15)

