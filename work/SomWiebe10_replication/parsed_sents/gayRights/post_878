(ROOT
  (S
    (ADVP (RB Ok))
    (, ,)
    (NP (DT that))
    (VP (MD may)
      (VP (VB be)))
    (: ...)))

advmod(be-5, Ok-1)
nsubj(be-5, that-3)
aux(be-5, may-4)
root(ROOT-0, be-5)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB not)
        (VP (VB know))))
    (: ...)
    (CC but)
    (S
      (NP (DT the))
      ('' '')
      (VP
        (VP (VB NO) ('' '')
          (NP
            (NP (NN side))
            (SBAR
              (S
                (VP (VBZ is)
                  (NP
                    (NP (NN definitely)
                      (CC and)
                      (NN unarguably))
                    (PRN (-LRB- -LRB-)
                      (SBAR (IN as)
                        (S
                          (ADVP (RB already))
                          (VP (VBN evidenced))))
                      (-RRB- -RRB-))
                    (ADJP
                      (ADJP (RB very) (JJ myopic))
                      (CC and)
                      (ADJP (RB self) (VBN centered)))))))))
        (, ,)
        (CC and)
        (VP (VB unintelligent)
          (PP (IN in)
            (NP
              (NP (NN basis)
                (CC and)
                (NN rhetorical) (NNS construct))
              (, ,)
              (CC or)
              (NP (DT the) (NN lacking))))
          (ADVP (RB thereof)))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
nsubj(NO-9, the-7)
nsubj(unintelligent-28, the-7)
conj_but(know-4, NO-9)
dobj(NO-9, side-11)
cop(definitely-13, is-12)
rcmod(side-11, definitely-13)
rcmod(side-11, unarguably-15)
conj_and(definitely-13, unarguably-15)
mark(evidenced-19, as-17)
advmod(evidenced-19, already-18)
dep(definitely-13, evidenced-19)
advmod(myopic-22, very-21)
amod(definitely-13, myopic-22)
advmod(centered-25, self-24)
amod(definitely-13, centered-25)
conj_and(myopic-22, centered-25)
conj_but(know-4, unintelligent-28)
conj_and(NO-9, unintelligent-28)
nn(construct-33, basis-30)
conj_and(basis-30, rhetorical-32)
nn(construct-33, rhetorical-32)
prep_in(unintelligent-28, construct-33)
det(lacking-37, the-36)
prep_in(unintelligent-28, lacking-37)
conj_or(construct-33, lacking-37)
advmod(unintelligent-28, thereof-38)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ unarguable))
      (SBAR (IN that)
        (S
          (NP (PRP$ their) (NNS positions) (NN ABSOLUTELY))
          (ADVP (RB only))
          (VP (VBZ uses)
            (NP
              (NP (DT the) (NN basis))
              (PP (IN for)
                (NP
                  (NP (PRP$ their) (NN claim))
                  (PP (IN for)
                    (NP
                      (NP (NNP SSM) (JJ narrow) (NN mindedly))
                      (CC and)
                      (NP (CD one) (NNS sided)))))))
            (, ,)
            (PP (IN without)
              (S
                (VP (VBG considering)
                  (NP
                    (NP (DT the) (JJ other)
                      (CC and)
                      (JJ EQUAL) (NN side))
                    (PP (IN of)
                      (NP
                        (NP (DT those) (JJ same) (NNS arguments))
                        (PP (IN about)
                          (NP (`` ``) (NN equality) ('' '')
                            (CC and)
                            (`` ``) (NN discrimination)))))))))))))
    (. .)))

nsubj(unarguable-3, It-1)
cop(unarguable-3, is-2)
root(ROOT-0, unarguable-3)
complm(uses-9, that-4)
poss(ABSOLUTELY-7, their-5)
nn(ABSOLUTELY-7, positions-6)
nsubj(uses-9, ABSOLUTELY-7)
advmod(uses-9, only-8)
ccomp(unarguable-3, uses-9)
det(basis-11, the-10)
dobj(uses-9, basis-11)
poss(claim-14, their-13)
prep_for(basis-11, claim-14)
nn(mindedly-18, SSM-16)
amod(mindedly-18, narrow-17)
prep_for(claim-14, mindedly-18)
num(sided-21, one-20)
prep_for(claim-14, sided-21)
conj_and(mindedly-18, sided-21)
prepc_without(uses-9, considering-24)
det(side-29, the-25)
amod(side-29, other-26)
conj_and(other-26, EQUAL-28)
amod(side-29, EQUAL-28)
dobj(considering-24, side-29)
det(arguments-33, those-31)
amod(arguments-33, same-32)
prep_of(side-29, arguments-33)
prep_about(arguments-33, equality-36)
prep_about(arguments-33, discrimination-40)
conj_and(equality-36, discrimination-40)

(ROOT
  (S ('' '')
    (ADVP (RB Basically))
    (, ,)
    (NP
      (NP (PRP$ its)
        (NP
          (NP (DT the) (JJ whole) (NN use))
          (NP (RB only) (DT the) (NNS parts))))
      (CC or)
      (NP
        (NP (NN position))
        (PP (IN of)
          (NP
            (NP (DT an) (NN argument)
              (CC or)
              (NN example))
            (PP (IN as)
              (NP (PRP it)))))))
    (VP (VBZ suits)
      (NP (PRP$ your) (NN agenda)))
    (: ;)
    (CC but)
    (ADVP (RB not) (RB as))
    (S
      (NP (PRP it))
      (VP (VBZ does) (RB not)))
    (. .)))

advmod(suits-20, Basically-2)
conj_but(suits-20, Basically-2)
poss(use-7, its-4)
det(use-7, the-5)
amod(use-7, whole-6)
conj_but(suits-20, use-7)
nsubj(suits-20, use-7)
advmod(parts-10, only-8)
det(parts-10, the-9)
dep(use-7, parts-10)
conj_or(use-7, position-12)
conj_but(suits-20, position-12)
nsubj(suits-20, position-12)
det(argument-15, an-14)
prep_of(position-12, argument-15)
prep_of(position-12, example-17)
conj_or(argument-15, example-17)
prep_as(argument-15, it-19)
root(ROOT-0, suits-20)
poss(agenda-22, your-21)
dobj(suits-20, agenda-22)
dep(as-26, not-25)
advmod(suits-20, as-26)
conj_but(suits-20, as-26)
nsubj(does-28, it-27)
ccomp(suits-20, does-28)
conj_but(suits-20, does-28)
neg(does-28, not-29)

(ROOT
  (S
    (NP
      (NP (DT That))
      (SBAR
        (S
          (VP (VBZ is)
            (VP (RB not)
              (ADVP (RB really))
              (VBG being) ('' '')
              (NP
                (NP (NNP EQUAL))
                ('' '')
                (SBAR
                  (S
                    (VP (VBP nd) ('' '')
                      (NP (NN FAIR))
                      ('' ''))))))))))
    (ADVP (RB now))
    (VP (VBZ is)
      (NP (PRP it)))
    (. ?)))

nsubj(it-15, That-1)
aux(EQUAL-7, is-2)
neg(EQUAL-7, not-3)
advmod(EQUAL-7, really-4)
cop(EQUAL-7, being-5)
rcmod(That-1, EQUAL-7)
rcmod(EQUAL-7, nd-9)
dobj(nd-9, FAIR-11)
advmod(it-15, now-13)
cop(it-15, is-14)
root(ROOT-0, it-15)

(ROOT
  (S
    (INTJ (VB Please))
    (VP
      (VP (VB open)
        (NP (PRP$ your) (NNS minds)))
      (CC and)
      (VP (VB quit)
        (S
          (VP
            (VP (VBG having)
              (NP (PRP$ your) (NN cake)))
            (CC and)
            (VP (VBG eating)
              (NP (PRP it))
              (ADVP (RB too)))))))
    (. .)))

dep(open-2, Please-1)
root(ROOT-0, open-2)
poss(minds-4, your-3)
dobj(open-2, minds-4)
conj_and(open-2, quit-6)
ccomp(quit-6, having-7)
poss(cake-9, your-8)
dobj(having-7, cake-9)
ccomp(quit-6, eating-11)
conj_and(having-7, eating-11)
dobj(eating-11, it-12)
advmod(eating-11, too-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD can) (RB not)
          (VP (VB see)
            (NP (DT this))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (VBP are) (`` ``)
      (VP
        (ADVP (RB still))
        (VBG doing)
        (NP (PRP it))))
    (. !)))

mark(see-5, If-1)
nsubj(see-5, you-2)
aux(see-5, can-3)
neg(see-5, not-4)
advcl(doing-13, see-5)
dobj(see-5, this-6)
advmod(doing-13, then-8)
nsubj(doing-13, you-9)
aux(doing-13, are-10)
advmod(doing-13, still-12)
root(ROOT-0, doing-13)
dobj(doing-13, it-14)

