(ROOT
  (S
    (S
      (NP (NNP Jake))
      (VP (VBD said)))
    (: :)
    (S
      (NP (PRP It))
      (VP (VBZ hurts)
        (NP (NNS families))))
    (, ,)
    (S
      (X
        (X (DT the) (JJR more))
        (NP (JJ gay) (NN marriage)))
      (X
        (X (DT the) (JJR less))
        (NP (NNS families)))
      (NP (EX there))
      (VP (MD will)
        (VP (VB be))))
    (, ,)
    (S
      (NP (NNS children))
      (VP (VBP need)
        (S
          (NP
            (NP (DT a) (NN mother))
            (CC and)
            (NP (DT a) (NN father)))
          (VP (TO to)
            (VP (VB look)
              (PRT (RP up))
              (PP (TO to)))))))
    (. .)))

nsubj(said-2, Jake-1)
root(ROOT-0, said-2)
nsubj(hurts-5, It-4)
parataxis(said-2, hurts-5)
dobj(hurts-5, families-6)
det(more-9, the-8)
dep(marriage-11, more-9)
amod(marriage-11, gay-10)
dep(be-17, marriage-11)
det(less-13, the-12)
dep(families-14, less-13)
dep(be-17, families-14)
expl(be-17, there-15)
aux(be-17, will-16)
ccomp(said-2, be-17)
nsubj(need-20, children-19)
ccomp(said-2, need-20)
det(mother-22, a-21)
nsubj(look-27, mother-22)
det(father-25, a-24)
conj_and(mother-22, father-25)
nsubj(look-27, father-25)
aux(look-27, to-26)
xcomp(need-20, look-27)
prt(look-27, up-28)
prep(look-27, to-29)

(ROOT
  (NP
    (NP (JJ Good) (NN job))
    (VP (VBG voting)
      (NP (DT that) (JJ idiotic) (NN statement))
      (PP (IN down)
        (NP (NN everyone))))
    (. .)))

amod(job-2, Good-1)
root(ROOT-0, job-2)
partmod(job-2, voting-3)
det(statement-6, that-4)
amod(statement-6, idiotic-5)
dobj(voting-3, statement-6)
prep_down(voting-3, everyone-8)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ seems)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT a) (NN lot))
              (PP (IN of)
                (NP
                  (NP
                    (NP (JJ open) (NNS people))
                    (ADVP (RB here)))
                  (, ,)
                  (CC and)
                  (ADVP (IN at) (JJS least))
                  (NP
                    (NP (CD one))
                    (ADJP (RB very) (JJ popular))
                    (ADVP (RB openly))
                    (NP (JJ gay) (NN member))))))))))
    (. .)))

expl(seems-2, There-1)
xsubj(lot-6, There-1)
root(ROOT-0, seems-2)
aux(lot-6, to-3)
cop(lot-6, be-4)
det(lot-6, a-5)
xcomp(seems-2, lot-6)
amod(people-9, open-8)
prep_of(lot-6, people-9)
advmod(people-9, here-10)
prep_of(lot-6, at-13)
advmod(people-9, at-13)
conj_and(people-9, at-13)
pobj(at-13, least-14)
prep_of(lot-6, one-15)
conj_and(people-9, one-15)
advmod(popular-17, very-16)
amod(one-15, popular-17)
advmod(one-15, openly-18)
amod(member-20, gay-19)
dep(one-15, member-20)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ okay))
      (S
        (ADVP (RB jake))
        (, ,)
        (VP (VB be)
          (ADJP (JJ brave)))))
    (. .)))

nsubj(okay-3, it-1)
cop(okay-3, 's-2)
root(ROOT-0, okay-3)
advmod(brave-7, jake-4)
cop(brave-7, be-6)
ccomp(okay-3, brave-7)

(ROOT
  (S
    (S (CC and)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP do)
              (VP (VB choose)
                (S
                  (VP (TO to)
                    (VP (RB not) (VB come)
                      (PRT (RP out)))))))))
        (, ,)
        (NP (DT that))
        (VP (VBZ 's)
          (ADJP (JJ okay)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP understand)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (NP (DT a) (JJ cold) (JJ hard) (NN world))
            (PP (IN out)
              (NP (RB there)))
            (PP (IN for)
              (NP (DT a) (JJ gay) (NN person)))))))
    (. .)))

cc(okay-13, and-1)
mark(choose-5, if-2)
nsubj(choose-5, you-3)
xsubj(come-8, you-3)
aux(choose-5, do-4)
advcl(okay-13, choose-5)
aux(come-8, to-6)
neg(come-8, not-7)
xcomp(choose-5, come-8)
prt(come-8, out-9)
nsubj(okay-13, that-11)
cop(okay-13, 's-12)
ccomp(understand-16, okay-13)
nsubj(understand-16, I-15)
root(ROOT-0, understand-16)
nsubj(world-22, it-17)
cop(world-22, 's-18)
det(world-22, a-19)
amod(world-22, cold-20)
amod(world-22, hard-21)
ccomp(understand-16, world-22)
prep(world-22, out-23)
pobj(out-23, there-24)
det(person-28, a-26)
amod(person-28, gay-27)
prep_for(world-22, person-28)

(ROOT
  (S (CC but)
    (VP (VB know)
      (NP
        (NP (DT this))
        (ADVP (IN at) (JJS least))))
    (. .)))

cc(know-2, but-1)
root(ROOT-0, know-2)
dobj(know-2, this-3)
advmod(this-3, at-4)
pobj(at-4, least-5)

(ROOT
  (S
    (SBAR
      (WHNP (WDT whatever))
      (S
        (NP (PRP you))
        (VP (VBP do))))
    (, ,)
    (SBAR
      (WHNP (WDT whatever))
      (S
        (NP (PRP you))
        (VP (VBP say))))
    (, ,)
    (ADVP (DT no) (NN matter)
      (SBAR
        (WHADJP (WRB how) (JJ much))
        (S
          (NP (PRP you))
          (VP (VBP deny)
            (NP (PRP it))))))
    (, ,)
    (NP (PRP I))
    (ADVP (IN at) (JJS least))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB know)
        (SBAR (IN that)
          (S
            (PRN (, ,)
              (S
                (NP (PRP you))
                (VP (VBP jake)))
              (, ,))
            (VP (VBP are)
              (ADJP (JJ gay)))))))
    (. .)))

dobj(do-3, whatever-1)
nsubj(do-3, you-2)
dep(know-22, do-3)
dobj(say-7, whatever-5)
nsubj(say-7, you-6)
dep(know-22, say-7)
dep(matter-10, no-9)
advmod(know-22, matter-10)
advmod(much-12, how-11)
dep(deny-14, much-12)
nsubj(deny-14, you-13)
dep(matter-10, deny-14)
dobj(deny-14, it-15)
nsubj(know-22, I-17)
advmod(know-22, at-18)
pobj(at-18, least-19)
aux(know-22, will-20)
advmod(know-22, always-21)
root(ROOT-0, know-22)
complm(gay-29, that-23)
nsubj(jake-26, you-25)
parataxis(gay-29, jake-26)
cop(gay-29, are-28)
ccomp(know-22, gay-29)

(ROOT
  (S (CC and)
    (NP (PRP I))
    (VP (VBP accept)
      (NP (DT that)))
    (. .)))

cc(accept-3, and-1)
nsubj(accept-3, I-2)
root(ROOT-0, accept-3)
dobj(accept-3, that-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (NP
          (NP (DT the) (NN source))
          (PP (IN of)
            (SBAR (IN that)
              (S
                (NP (NN idea))
                (VP (VBZ has)
                  (VP (VBN been)
                    (VP (VBN explored)
                      (ADJP (JJ enough))
                      (ADVP (RB though)))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
det(source-6, the-5)
dobj(think-4, source-6)
complm(explored-12, that-8)
nsubjpass(explored-12, idea-9)
aux(explored-12, has-10)
auxpass(explored-12, been-11)
prepc_of(source-6, explored-12)
acomp(explored-12, enough-13)
advmod(explored-12, though-14)

(ROOT
  (S (CC And)
    (ADVP (RB personally))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP believe)
        (PP (IN in)
          (S
            (VP (VBG humilating)
              (NP (JJ idiotic) (NNS statements))
              (PP (IN as)
                (NP
                  (NP (DT a) (NN form))
                  (PP (IN of)
                    (NP (JJ social) (NN punishment))))))))))
    (, ,) (IN so)
    (S
      (NP (RB here))
      (VP (VBZ goes)))
    (. .)))

cc(believe-5, And-1)
advmod(believe-5, personally-2)
nsubj(believe-5, I-4)
root(ROOT-0, believe-5)
prepc_in(believe-5, humilating-7)
amod(statements-9, idiotic-8)
dobj(humilating-7, statements-9)
det(form-12, a-11)
prep_as(humilating-7, form-12)
amod(punishment-15, social-14)
prep_of(form-12, punishment-15)
dep(believe-5, so-17)
nsubj(goes-19, here-18)
ccomp(believe-5, goes-19)

(ROOT
  (S
    (ADVP (RB Hopefully))
    (NP (PRP you))
    (VP (VBP read)
      (NP (DT this) (NN Jake)))
    (. .)))

advmod(read-3, Hopefully-1)
nsubj(read-3, you-2)
root(ROOT-0, read-3)
det(Jake-5, this-4)
dobj(read-3, Jake-5)

(ROOT
  (S
    (NP (JJ gay) (NN marriage))
    (VP (VBD =)
      (NP (JJR less) (NNS families))
      (SBAR (RB only) (IN if)
        (S
          (NP (PRP you))
          (VP (VBP believe)
            (SBAR (IN that)
              (S
                (NP (NNS people))
                (VP (MD would)
                  (VP (VB choose)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ gay)
                            (PP (RB instead) (IN of)
                              (ADJP (JJ heterosexual)))))))))))))))
    (. .)))

amod(marriage-2, gay-1)
nsubj(=-3, marriage-2)
root(ROOT-0, =-3)
amod(families-5, less-4)
dobj(=-3, families-5)
advmod(believe-9, only-6)
dep(believe-9, if-7)
nsubj(believe-9, you-8)
dep(=-3, believe-9)
complm(choose-13, that-10)
nsubj(choose-13, people-11)
xsubj(gay-16, people-11)
aux(choose-13, would-12)
ccomp(believe-9, choose-13)
aux(gay-16, to-14)
cop(gay-16, be-15)
xcomp(choose-13, gay-16)
prep_instead_of(gay-16, heterosexual-19)

(ROOT
  (S
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBZ is))))
    (PRN (, ,)
      (S
        (NP (PRP you))
        (VP (VBP jake) (, ,) (VBP think)
          (NP
            (NP (DT that) (NN someone))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (VBZ is)
                    (ADVP (RB otherwise))
                    (VP (VBN attracted)
                      (PP (TO to)
                        (NP (DT the) (JJ opposite) (NN sex)))))
                  (, ,)
                  (VP (MD would)
                    (VP (VB have)
                      (VP (VBN had)
                        (NP (NNS kids)))))
                  (CC and)
                  (VP (VBD raised)
                    (NP (PRP them)))))))))
      (, ,))
    (VP (MD will)
      (ADVP (RB now))
      (VP
        (VP (VB move)
          (PP (IN in) (IN with)
            (NP
              (NP (NN someone))
              (PP (IN of)
                (NP (DT the) (JJ same) (NN sex))))))
        (CC and)
        (RB not)
        (VP (VB have)
          (NP (NNS kids)))))
    (. .)))

nsubj(is-2, that-1)
csubj(move-29, is-2)
nsubj(jake-5, you-4)
parataxis(move-29, jake-5)
dep(jake-5, think-7)
det(someone-9, that-8)
dobj(jake-5, someone-9)
nsubjpass(attracted-13, someone-9)
nsubjpass(had-21, someone-9)
nsubjpass(raised-24, someone-9)
auxpass(attracted-13, is-11)
advmod(attracted-13, otherwise-12)
rcmod(someone-9, attracted-13)
det(sex-17, the-15)
amod(sex-17, opposite-16)
prep_to(attracted-13, sex-17)
aux(had-21, would-19)
aux(had-21, have-20)
rcmod(someone-9, had-21)
conj_and(attracted-13, had-21)
dobj(had-21, kids-22)
rcmod(someone-9, raised-24)
conj_and(attracted-13, raised-24)
dobj(raised-24, them-25)
aux(move-29, will-27)
advmod(move-29, now-28)
root(ROOT-0, move-29)
dep(move-29, in-30)
prep_with(move-29, someone-32)
det(sex-36, the-34)
amod(sex-36, same-35)
prep_of(someone-32, sex-36)
conj_and(move-29, not-38)
neg(move-29, not-38)
dep(move-29, have-39)
dobj(have-39, kids-40)

(ROOT
  (S
    (VP (VBG ignoring)
      (PP (IN for)
        (NP (DT a) (NN moment)))
      (SBAR (IN that)
        (S
          (NP (DT this))
          (VP (VBZ is) (RB n't)
            (ADVP (DT all) (RB together))
            (ADJP (JJ bad))
            (SBAR (IN since)
              (S
                (NP (EX there))
                (VP (VBP are)
                  (NP
                    (ADJP (RB too) (JJ many))
                    (NNS people)))))))))
    (. .)))

root(ROOT-0, ignoring-1)
det(moment-4, a-3)
prep_for(ignoring-1, moment-4)
complm(bad-11, that-5)
nsubj(bad-11, this-6)
cop(bad-11, is-7)
neg(bad-11, n't-8)
dep(together-10, all-9)
advmod(bad-11, together-10)
ccomp(ignoring-1, bad-11)
mark(are-14, since-12)
expl(are-14, there-13)
advcl(bad-11, are-14)
advmod(many-16, too-15)
amod(people-17, many-16)
nsubj(are-14, people-17)

(ROOT
  (SBARQ
    (WHNP
      (WHNP (WP what) (NN kind))
      (PP (IN of)
        (NP (NN person))))
    (SQ
      (VP (MD would)
        (VP (VB think)
          (SBAR (IN that)
            (S
              (VP (MD may)
                (VP (VB be)
                  (NP (DT the) (NN case)))))))))
    (. ?)))

det(kind-2, what-1)
nsubj(think-6, kind-2)
prep_of(kind-2, person-4)
aux(think-6, would-5)
root(ROOT-0, think-6)
complm(case-11, that-7)
aux(case-11, may-8)
cop(case-11, be-9)
det(case-11, the-10)
ccomp(think-6, case-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (PP (IN for)
          (NP (PRP myself)))
        (, ,)
        (S
          (VP (VBG being)
            (ADJP (RB very) (JJ comfortable))
            (PP (IN in)
              (NP (PRP$ my) (NN heterosexuality)))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would) (RB not)
      (ADVP (RB magically))
      (VP (VB turn)
        (NP (JJ gay))
        (SBAR (IN because)
          (S
            (NP (DT a) (NN law))
            (VP (VBD was)
              (VP (VBN passed)))))))
    (. .)))

nsubj(know-2, I-1)
ccomp(turn-17, know-2)
prep_for(know-2, myself-4)
cop(comfortable-8, being-6)
advmod(comfortable-8, very-7)
xcomp(know-2, comfortable-8)
poss(heterosexuality-11, my-10)
prep_in(comfortable-8, heterosexuality-11)
nsubj(turn-17, I-13)
aux(turn-17, would-14)
neg(turn-17, not-15)
advmod(turn-17, magically-16)
root(ROOT-0, turn-17)
dobj(turn-17, gay-18)
mark(passed-23, because-19)
det(law-21, a-20)
nsubjpass(passed-23, law-21)
auxpass(passed-23, was-22)
advcl(turn-17, passed-23)

(ROOT
  (SQ (VBP do)
    (NP (PRP you))
    (VP (VB fear) (, ,) (VB jake) (, ,)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD may)
            (ADVP (RB magically))
            (VP (VB turn)
              (NP (JJ gay))
              (SBAR (IN if)
                (S
                  (NP (DT a) (NN law))
                  (VP (VBD were)
                    (VP (VBN passed))))))))))
    (. ?)))

aux(fear-3, do-1)
nsubj(fear-3, you-2)
root(ROOT-0, fear-3)
dep(fear-3, jake-5)
complm(turn-11, that-7)
nsubj(turn-11, you-8)
aux(turn-11, may-9)
advmod(turn-11, magically-10)
ccomp(fear-3, turn-11)
dobj(turn-11, gay-12)
mark(passed-17, if-13)
det(law-15, a-14)
nsubjpass(passed-17, law-15)
auxpass(passed-17, were-16)
advcl(turn-11, passed-17)

(ROOT
  (FRAG
    (SBAR (IN because)
      (S
        (NP (DT that))
        (VP (VBZ is)
          (ADVP (RB really))
          (NP
            (NP (DT the) (JJ only) (NN reason))
            (PP (IN for)
              (NP (PRP$ your) (NN statement)))))))
    (. .)))

mark(reason-7, because-1)
nsubj(reason-7, that-2)
cop(reason-7, is-3)
advmod(reason-7, really-4)
det(reason-7, the-5)
amod(reason-7, only-6)
root(ROOT-0, reason-7)
poss(statement-10, your-9)
prep_for(reason-7, statement-10)

(ROOT
  (S
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (ADVP (RB actually))
          (VP (VBP think)
            (PP (IN about)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP$ your))
                  (VP (VBD wrote))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP mean)))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (NP (DT the)
        (ADJP (RB only) (JJ possible))
        (NN end) (NN conclusion)))
    (. .)))

mark(think-4, if-1)
nsubj(think-4, you-2)
advmod(think-4, actually-3)
advcl(mean-11, think-4)
dobj(wrote-8, what-6)
nsubj(wrote-8, your-7)
prepc_about(think-4, wrote-8)
nsubj(mean-11, I-10)
ccomp(conclusion-19, mean-11)
nsubj(conclusion-19, that-13)
cop(conclusion-19, 's-14)
det(conclusion-19, the-15)
advmod(possible-17, only-16)
amod(conclusion-19, possible-17)
nn(conclusion-19, end-18)
root(ROOT-0, conclusion-19)

(ROOT
  (S (CC and)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP do)
          (VP (VB stand)
            (PP (IN behind)
              (NP (DT that) (NN statement) (NN jake)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB ask)
            (NP (PRP myself)))))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (NP (NN kind))
            (PP (IN of)
              (NP (NN person))))
          (VP (MD would)
            (VP (VB have)
              (NP (PDT such) (DT a) (JJ ridiculous) (NN fear)))))))
    (. .)))

cc(have-12, and-1)
mark(stand-5, if-2)
nsubj(stand-5, you-3)
aux(stand-5, do-4)
advcl(have-12, stand-5)
det(jake-9, that-7)
nn(jake-9, statement-8)
prep_behind(stand-5, jake-9)
nsubj(have-12, I-11)
xsubj(ask-14, I-11)
root(ROOT-0, have-12)
aux(ask-14, to-13)
xcomp(have-12, ask-14)
dobj(ask-14, myself-15)
dobj(have-22, what-17)
nsubj(have-22, kind-18)
prep_of(kind-18, person-20)
aux(have-22, would-21)
ccomp(have-12, have-22)
predet(fear-26, such-23)
det(fear-26, a-24)
amod(fear-26, ridiculous-25)
dobj(have-22, fear-26)

(ROOT
  (S (CC and)
    (NP (PRP I))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB think)
        (PP (IN of)
          (NP (CD one) (NN kind) (NN jake)))))
    (. .)))

cc(think-5, and-1)
nsubj(think-5, I-2)
aux(think-5, can-3)
advmod(think-5, only-4)
root(ROOT-0, think-5)
num(jake-9, one-7)
nn(jake-9, kind-8)
prep_of(think-5, jake-9)

(ROOT
  (NP
    (NP (DT a) (NN closet))
    (NP (JJ gay) (NN person))
    (. .)))

det(closet-2, a-1)
root(ROOT-0, closet-2)
amod(person-4, gay-3)
dep(closet-2, person-4)

(ROOT
  (S (IN so)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB come)
                (PRT (RP out))))))))
    (, ,)
    (S
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (VP (VBG assuming)
              (PP (IN from)
                (NP (PRP$ your) (NN statement)))))))
      (ADVP (RB deep) (RB down))
      (NP (PRP you))
      (VP (VBP do)))
    (, ,) (RB then)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN place))
          (PP (IN for)
            (NP (PRP it))))))
    (. .)))

dep(do-19, so-1)
mark(want-4, if-2)
nsubj(want-4, you-3)
xsubj(come-6, you-3)
dep(do-19, want-4)
aux(come-6, to-5)
xcomp(want-4, come-6)
prt(come-6, out-7)
dobj(assuming-12, which-9)
nsubj(assuming-12, I-10)
aux(assuming-12, 'm-11)
dep(do-19, assuming-12)
poss(statement-15, your-14)
prep_from(assuming-12, statement-15)
advmod(down-17, deep-16)
advmod(do-19, down-17)
nsubj(do-19, you-18)
root(ROOT-0, do-19)
advmod(do-19, then-21)
nsubj(place-25, this-22)
cop(place-25, is-23)
det(place-25, the-24)
ccomp(do-19, place-25)
prep_for(place-25, it-27)

