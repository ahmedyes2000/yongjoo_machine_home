(ROOT
  (S
    (NP (NNP Pat))
    (, ,)
    (PRN
      (S
        (NP (PRP I))
        (VP (VBP agree)
          (PP (IN with)
            (NP (NN everything))))))
    (NP (PRP you))
    (VP (VBP say)
      (ADVP (RB here))
      (, ,)
      (PP (IN except)
        (NP
          (NP (DT the) (NN point))
          (SBAR (IN that)
            (S
              (NP (DT all) (JJ gay) (NNS parents))
              (VP (VBP have)
                (NP (NNS step-families))
                (PP (IN by)
                  (NP (NN default)))))))))
    (. .)))

nsubj(say-8, Pat-1)
nsubj(agree-4, I-3)
parataxis(say-8, agree-4)
prep_with(agree-4, everything-6)
nsubj(say-8, you-7)
root(ROOT-0, say-8)
advmod(say-8, here-9)
det(point-13, the-12)
prep_except(say-8, point-13)
complm(have-18, that-14)
det(parents-17, all-15)
amod(parents-17, gay-16)
nsubj(have-18, parents-17)
dep(point-13, have-18)
dobj(have-18, step-families-19)
prep_by(have-18, default-21)

(ROOT
  (S
    (SBAR (IN Unless)
      (S
        (NP (PRP we))
        (VP (VBP consider)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT a) (JJ heterosexual) (NN couple))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ creates)
                      (NP (PRP$ their) (NN family))
                      (PP (IN by)
                        (NP
                          (NP (NN use))
                          (PP (IN of)
                            (NP (NN donor) (NN sperm)))))))))
              (VP (VBZ is)
                (VP (VBG creating)
                  (NP (`` ``)
                    (NP (NN step-children))
                    (, ,) ('' ''))
                  (ADVP (RB then)))))))))
    (NP (PRP we))
    (VP (MD can) (RB not)
      (VP (VB say)
        (NP
          (NP
            (NP (DT this))
            (PP (IN about)
              (NP (NN lesbian) (NNS couples)))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP do)
                  (NP (DT the) (JJ same))))))
          (, ,)
          (CC or)
          (NP
            (NP (JJ gay) (NNS men))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VB conceive)
                  (NP (PRP$ their) (NNS children))
                  (PP (IN by)
                    (NP
                      (NP (NN way))
                      (PP (IN of)
                        (NP (DT a) (NN surrogate))))))))))))
    (. .)))

mark(consider-3, Unless-1)
nsubj(consider-3, we-2)
advcl(say-27, consider-3)
complm(creating-18, that-4)
det(couple-7, a-5)
amod(couple-7, heterosexual-6)
nsubj(creates-9, couple-7)
nsubj(creating-18, couple-7)
rcmod(couple-7, creates-9)
poss(family-11, their-10)
dobj(creates-9, family-11)
prep_by(creates-9, use-13)
nn(sperm-16, donor-15)
prep_of(use-13, sperm-16)
aux(creating-18, is-17)
ccomp(consider-3, creating-18)
dobj(creating-18, step-children-20)
advmod(creating-18, then-23)
nsubj(say-27, we-24)
aux(say-27, can-25)
neg(say-27, not-26)
root(ROOT-0, say-27)
dobj(say-27, this-28)
nsubj(do-33, this-28)
nn(couples-31, lesbian-30)
prep_about(this-28, couples-31)
rcmod(this-28, do-33)
det(same-35, the-34)
dobj(do-33, same-35)
amod(men-39, gay-38)
conj_or(this-28, men-39)
nsubj(conceive-41, men-39)
rcmod(men-39, conceive-41)
poss(children-43, their-42)
dobj(conceive-41, children-43)
prep_by(conceive-41, way-45)
det(surrogate-48, a-47)
prep_of(way-45, surrogate-48)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do) (RB n't)
      (VP (VB consider)
        (NP
          (NP (JJ straight) (NNS couples))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP use)
                (NP (DT a) (JJ surrogate) (NN mom)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ step-parents))))))))))))
    (. .)))

nsubj(consider-4, We-1)
aux(consider-4, do-2)
neg(consider-4, n't-3)
root(ROOT-0, consider-4)
amod(couples-6, straight-5)
dobj(consider-4, couples-6)
nsubj(use-8, couples-6)
rcmod(couples-6, use-8)
det(mom-11, a-9)
amod(mom-11, surrogate-10)
dobj(use-8, mom-11)
aux(step-parents-14, to-12)
cop(step-parents-14, be-13)
infmod(mom-11, step-parents-14)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (PRP we))
    (VP (VBP do) (RB n't)
      (ADVP (RB even))
      (VP (VB consider)
        (NP
          (NP (JJ straight) (NNS couples))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP adopt)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ step-parents)))))))))))
    (. .)))

prep_in(consider-8, fact-2)
nsubj(consider-8, we-4)
aux(consider-8, do-5)
neg(consider-8, n't-6)
advmod(consider-8, even-7)
root(ROOT-0, consider-8)
amod(couples-10, straight-9)
dobj(consider-8, couples-10)
nsubj(adopt-12, couples-10)
rcmod(couples-10, adopt-12)
aux(step-parents-15, to-13)
cop(step-parents-15, be-14)
xcomp(adopt-12, step-parents-15)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (INTJ (UH no))
    (, ,)
    (NP (JJ gay) (NNS couples))
    (VP (VBP are) (RB not)
      (ADJP (JJ step-families)
        (PP (IN by)
          (NP (NN default)))))
    (. .)))

advmod(step-families-9, So-1)
dep(step-families-9, no-3)
amod(couples-6, gay-5)
nsubj(step-families-9, couples-6)
cop(step-families-9, are-7)
neg(step-families-9, not-8)
root(ROOT-0, step-families-9)
prep_by(step-families-9, default-11)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (DT all) (NNS kinds))
        (PP (IN of)
          (NP (JJ gay-parented) (NNS families))))
      (, ,)
      (SBAR (RB just) (IN as)
        (S
          (NP (EX there))
          (VP (VBP are)
            (NP
              (NP (DT all) (NNS kinds))
              (PP (IN of)
                (NP (JJ straight-parented) (NNS families))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
det(kinds-4, all-3)
nsubj(are-2, kinds-4)
amod(families-7, gay-parented-6)
prep_of(kinds-4, families-7)
advmod(are-12, just-9)
dep(are-12, as-10)
expl(are-12, there-11)
dep(are-2, are-12)
det(kinds-14, all-13)
nsubj(are-12, kinds-14)
amod(families-17, straight-parented-16)
prep_of(kinds-14, families-17)

(ROOT
  (S
    (ADVP (RB Really))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (ADVP (RB just))
      (NP
        (NP (DT all) (NNS kinds))
        (PP (IN of)
          (NP (NNS families)))))
    (. .)))

advmod(are-4, Really-1)
expl(are-4, there-3)
root(ROOT-0, are-4)
advmod(are-4, just-5)
det(kinds-7, all-6)
nsubj(are-4, kinds-7)
prep_of(kinds-7, families-9)

(ROOT
  (FRAG (: :)
    (VP (VBD -RRB-) (RB Not)
      (VP (, ,)
        (ADVP (RB again))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP disagree)
              (PP (IN with)
                (NP (NN anything)))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN remainder))
                  (PP (IN of)
                    (NP (PRP$ your) (NN post))))))))))
    (. .)))

root(ROOT-0, Not-3)
advmod(disagree-9, again-5)
dep(disagree-9, that-7)
nsubj(disagree-9, I-8)
dep(Not-3, disagree-9)
prep_with(disagree-9, anything-11)
det(remainder-14, the-13)
prep_in(disagree-9, remainder-14)
poss(post-17, your-16)
prep_of(remainder-14, post-17)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are)
        (ADJP (RB absolutely) (JJ right)
          (SBAR (IN that)
            (S
              (NP (NNP FOF))
              (VP (VBZ tries)
                (S
                  (VP (TO to)
                    (VP (VB turn)
                      (NP (DT this))
                      (PP (IN into)
                        (NP
                          (NP (DT a) (NN comparison))
                          (PP (IN of)
                            (NP
                              (NP (NNS families))
                              (VP (VBG parenting)
                                (NP
                                  (NP (JJ biological) (NNS children))
                                  (PP (IN vs.)
                                    (NP (NNS families) (NN parenting) (NNS children))))
                                (PP (IN as)
                                  (NP
                                    (NP (DT a) (NN result))
                                    (PP (IN of)
                                      (NP (NN divorce)
                                        (CC or)
                                        (NN abandonment)))))))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (NP (DT a) (JJ ridiculous) (NN comparison)
          (S
            (VP (TO to)
              (VP (VB make)
                (PP (IN as) (`` ``)
                  (NP (NN proof))
                  ('' ''))
                (SBAR (IN that)
                  (S
                    (NP (NNS gays))
                    (VP (VBP are)
                      (NP
                        (ADJP (`` ``) (JJ inadequate) ('' '')
                          (CC or)
                          (`` ``) (NN substandard) ('' ''))
                        (NNS parents)))))))))))
    (. .)))

nsubj(right-4, You-1)
cop(right-4, are-2)
advmod(right-4, absolutely-3)
root(ROOT-0, right-4)
complm(tries-7, that-5)
nsubj(tries-7, FOF-6)
xsubj(turn-9, FOF-6)
ccomp(right-4, tries-7)
aux(turn-9, to-8)
xcomp(tries-7, turn-9)
dobj(turn-9, this-10)
det(comparison-13, a-12)
prep_into(turn-9, comparison-13)
prep_of(comparison-13, families-15)
partmod(families-15, parenting-16)
amod(children-18, biological-17)
dobj(parenting-16, children-18)
nn(children-22, families-20)
nn(children-22, parenting-21)
prep_vs.(children-18, children-22)
det(result-25, a-24)
prep_as(parenting-16, result-25)
prep_of(result-25, divorce-27)
prep_of(result-25, abandonment-29)
conj_or(divorce-27, abandonment-29)
nsubj(comparison-36, that-32)
cop(comparison-36, is-33)
det(comparison-36, a-34)
amod(comparison-36, ridiculous-35)
conj_and(right-4, comparison-36)
aux(make-38, to-37)
infmod(comparison-36, make-38)
prep_as(make-38, proof-41)
complm(parents-53, that-43)
nsubj(parents-53, gays-44)
cop(parents-53, are-45)
conj_or(substandard-51, inadequate-47)
amod(parents-53, inadequate-47)
amod(parents-53, substandard-51)
ccomp(make-38, parents-53)

