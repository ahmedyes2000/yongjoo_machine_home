(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (NP
          (NP (DT an) (JJ interesting) (NN way))
          (PP (IN of)
            (S
              (VP (VBG looking)
                (PP (IN at)
                  (NP (NNS things)))))))))
    (, ,)
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (MD may)
            (VP (VB be)
              (ADJP (RB so) (JJ rude))
              (SBAR (IN as)
                (S
                  (VP (TO to)
                    (VP (VB question)
                      (NP (PRP you))))))))))
      (, ,)
      (NP (PRP I))
      (VP (VBP am)
        (ADVP (RB simply))
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB ask) ('' '')
                (SBAR
                  (WHADVP (WRB WHY))
                  (S
                    (VP (VBP do)
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBP think)
                            (SBAR
                              (S
                                (NP (PRP you))
                                (VP (MD would) (RB n't)
                                  (VP (VB be)
                                    (ADJP (JJ happy))))))))))))))))))
    (. ?)))

nsubj(way-5, That-1)
cop(way-5, 's-2)
det(way-5, an-3)
amod(way-5, interesting-4)
root(ROOT-0, way-5)
prepc_of(way-5, looking-7)
prep_at(looking-7, things-9)
mark(rude-17, if-12)
nsubj(rude-17, I-13)
aux(rude-17, may-14)
cop(rude-17, be-15)
advmod(rude-17, so-16)
advcl(going-26, rude-17)
mark(question-20, as-18)
aux(question-20, to-19)
advcl(rude-17, question-20)
xcomp(rude-17, question-20)
dobj(question-20, you-21)
nsubj(going-26, I-23)
xsubj(ask-28, I-23)
aux(going-26, am-24)
advmod(going-26, simply-25)
conj_but(way-5, going-26)
aux(ask-28, to-27)
xcomp(going-26, ask-28)
advmod(do-31, WHY-30)
advcl(ask-28, do-31)
nsubj(think-33, you-32)
ccomp(do-31, think-33)
nsubj(happy-38, you-34)
aux(happy-38, would-35)
neg(happy-38, n't-36)
cop(happy-38, be-37)
ccomp(think-33, happy-38)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (VBD grew)
        (PRT (RP up))
        (PP (IN with)
          (NP (CD two) (NNS dads)))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD would)
        (ADVP (RB definitely))
        (VP (VB consider)
          (S
            (NP (PRP myself))
            (ADJP (JJR happier))
            (ADVP (IN than) (RBS most))))))
    (. .)))

nsubj(grew-3, I-2)
root(ROOT-0, grew-3)
prt(grew-3, up-4)
num(dads-7, two-6)
prep_with(grew-3, dads-7)
nsubj(consider-12, I-9)
aux(consider-12, would-10)
advmod(consider-12, definitely-11)
conj_and(grew-3, consider-12)
nsubj(happier-14, myself-13)
xcomp(consider-12, happier-14)
advmod(happier-14, than-15)
advmod(than-15, most-16)

(ROOT
  (S (CC Yet)
    (NP
      (NP (DT a) (JJ single) (NN case))
      (NP (DT a) (NN study)))
    (VP (VBZ does) (RB not)
      (VP (VB make)))
    (. .)))

cc(make-9, Yet-1)
det(case-4, a-2)
amod(case-4, single-3)
nsubj(make-9, case-4)
det(study-6, a-5)
dep(case-4, study-6)
aux(make-9, does-7)
neg(make-9, not-8)
root(ROOT-0, make-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will) (, ,)
        (ADVP (RB however))
        (, ,)
        (VP (VB say)
          (NP (DT that) (NNS kids))
          (PP (IN with)
            (NP
              (NP (RB only) (CD one) (NN parent))
              (CC or)
              (NP (JJR worse))))
          (ADVP (RB yet)))))
    (, ,)
    (NP (DT NO) (NNS parents))
    (VP (VBP are)
      (ADJP
        (ADJP (RB significantly) (RBR more) (JJ UNhappy))
        (PP (IN than)
          (NP (JJS MOST) (NNS kids))))
      (PP (IN with)
        (NP (CD two) (NNS parents))))
    (: ...)))

nsubj(say-6, I-1)
aux(say-6, will-2)
advmod(say-6, however-4)
ccomp(UNhappy-22, say-6)
det(kids-8, that-7)
dobj(say-6, kids-8)
advmod(parent-12, only-10)
num(parent-12, one-11)
prep_with(say-6, parent-12)
prep_with(say-6, worse-14)
conj_or(parent-12, worse-14)
advmod(say-6, yet-15)
det(parents-18, NO-17)
nsubj(UNhappy-22, parents-18)
cop(UNhappy-22, are-19)
advmod(UNhappy-22, significantly-20)
advmod(UNhappy-22, more-21)
root(ROOT-0, UNhappy-22)
amod(kids-25, MOST-24)
prep_than(UNhappy-22, kids-25)
num(parents-28, two-27)
prep_with(UNhappy-22, parents-28)

(ROOT
  (S
    (NP (RB Just)
      (NP (DT a) (NN question))
      (CC and)
      (NP (DT a) (NN thought)))
    (, ,)
    (VP (VBP pay)
      (S
        (NP (PRP me))
        (ADJP (RB no) (JJ heed))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP wish))))))
    (. .)))

advmod(question-3, Just-1)
det(question-3, a-2)
nsubj(pay-8, question-3)
det(thought-6, a-5)
conj_and(question-3, thought-6)
nsubj(pay-8, thought-6)
root(ROOT-0, pay-8)
nsubj(wish-14, me-9)
advmod(heed-11, no-10)
dep(wish-14, heed-11)
mark(wish-14, if-12)
nsubj(wish-14, you-13)
xcomp(pay-8, wish-14)

