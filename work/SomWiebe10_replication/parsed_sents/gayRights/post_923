(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure))
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (DT this) (JJ weak) (NN argument))
          (VP (VBD was)
            (VP
              (ADVP (RB even))
              (VBN included))))))
    (. .)))

nsubj(sure-4, I-1)
cop(sure-4, 'm-2)
neg(sure-4, not-3)
root(ROOT-0, sure-4)
advmod(included-11, why-5)
det(argument-8, this-6)
amod(argument-8, weak-7)
nsubjpass(included-11, argument-8)
auxpass(included-11, was-9)
advmod(included-11, even-10)
advcl(sure-4, included-11)

(ROOT
  (S
    (NP (DT The) (JJ heterosexual) (NN couple))
    (VP (VBZ feels)
      (SBAR (IN that)
        (S
          (NP (PRP$ their) (NNS rights))
          (VP (VBP are)
            (VP (VBG being)
              (VP (VBN infringed)
                (PP (RB upon))))))))
    (. ?)))

det(couple-3, The-1)
amod(couple-3, heterosexual-2)
nsubj(feels-4, couple-3)
root(ROOT-0, feels-4)
complm(infringed-10, that-5)
poss(rights-7, their-6)
nsubjpass(infringed-10, rights-7)
aux(infringed-10, are-8)
auxpass(infringed-10, being-9)
ccomp(feels-4, infringed-10)
prep(infringed-10, upon-11)

(ROOT
  (NP
    (NP (NNP Becuase))
    (PP (IN of)
      (NP (DT the) (NN wording)))
    (PP (IN on)
      (NP (DT a) (JJ legal) (NN document)))
    (. ?)))

root(ROOT-0, Becuase-1)
det(wording-4, the-3)
prep_of(Becuase-1, wording-4)
det(document-8, a-6)
amod(document-8, legal-7)
prep_on(Becuase-1, document-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (ADVP (RB still))
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP (VB get)
              (ADJP (JJ married)))))))
    (. .)))

nsubjpass(allowed-4, They-1)
xsubj(married-7, They-1)
auxpass(allowed-4, are-2)
advmod(allowed-4, still-3)
root(ROOT-0, allowed-4)
aux(married-7, to-5)
dep(married-7, get-6)
xcomp(allowed-4, married-7)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP
        (NP (DT the) (NNS rights))
        (PP (IN of)
          (NP
            (NP (DT the) (JJ gay) (NN couple))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (VBP wish)
                    (S
                      (VP (TO to)
                        (VP (VB marry)))))
                  (CC and)
                  (VP (MD wo) (RB n't)
                    (VP (VB be)
                      (ADJP (JJ able)
                        (PP (TO to)
                          (SBAR (IN if)
                            (S
                              (NP (DT this) (NN proposition))
                              (VP (VBZ passes))))))))))))))
      (. ?))))

root(ROOT-0, What-1)
dep(What-1, about-2)
det(rights-4, the-3)
pobj(about-2, rights-4)
det(couple-8, the-6)
amod(couple-8, gay-7)
prep_of(rights-4, couple-8)
nsubj(wish-10, couple-8)
nsubj(able-17, couple-8)
rcmod(couple-8, wish-10)
aux(marry-12, to-11)
xcomp(wish-10, marry-12)
aux(able-17, wo-14)
neg(able-17, n't-15)
cop(able-17, be-16)
rcmod(couple-8, able-17)
conj_and(wish-10, able-17)
mark(passes-22, if-19)
det(proposition-21, this-20)
nsubj(passes-22, proposition-21)
prepc_to(able-17, passes-22)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (VBZ 's)
      (NP
        (NP (NNS rights))
        (SBAR
          (S
            (VP (VBP have)
              (ADVP (RB really))
              (VP (VBN been)
                (VP (VBN trampled))))))))
    (. ?)))

attr('s-2, Who-1)
root(ROOT-0, 's-2)
nsubj('s-2, rights-3)
aux(trampled-7, have-4)
advmod(trampled-7, really-5)
auxpass(trampled-7, been-6)
rcmod(rights-3, trampled-7)

(ROOT
  (FRAG
    (NP
      (NP (NNS Words))
      (PP (IN on)
        (NP (DT a) (NN document))))
    (PP (FW vs.)
      (NP (JJ actual) (JJ legal) (NNS rights)))
    (PP (IN as)
      (NP
        (NP (DT a) (NN citizen))
        (PP (IN of)
          (NP (DT the) (NNP U.S.)))))))

root(ROOT-0, Words-1)
det(document-4, a-3)
prep_on(Words-1, document-4)
dep(Words-1, vs.-5)
amod(rights-8, actual-6)
amod(rights-8, legal-7)
pobj(vs.-5, rights-8)
dep(Words-1, as-9)
det(citizen-11, a-10)
pobj(as-9, citizen-11)
det(U.S.-14, the-13)
prep_of(citizen-11, U.S.-14)

