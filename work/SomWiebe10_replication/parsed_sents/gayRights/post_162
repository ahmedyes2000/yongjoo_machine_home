(ROOT
  (S
    (NP (PRP You))
    (VP (MD should)
      (VP
        (VP
          (PRN (, ,)
            (ADVP (RB perhaps))
            (, ,))
          (VB question)
          (NP (PRP$ your) (NNS assumptions))
          (SBAR (IN that)
            (S
              (NP (DT a) (NN child))
              (VP (`` ``) (VBZ needs) ('' '')))))
        (NP (CD two) (NNS parents))))
    (. .)))

nsubj(question-6, You-1)
aux(question-6, should-2)
dep(question-6, perhaps-4)
root(ROOT-0, question-6)
poss(assumptions-8, your-7)
dobj(question-6, assumptions-8)
complm(needs-13, that-9)
det(child-11, a-10)
nsubj(needs-13, child-11)
ccomp(question-6, needs-13)
num(parents-16, two-15)
dobj(question-6, parents-16)

(ROOT
  (S
    (S
      (PP (IN For)
        (NP (DT the) (NNS reasons)))
      (NP (PRP I))
      (VP (VBD stated)
        (PP (IN before)
          (NP
            (NP (DT the) (JJ variable) (NN personality))
            (PP (IN of)
              (NP
                (NP (DT the) (NN child)
                  (CC and)
                  (NN variable) (NN personality))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN parent))
                    (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-))))))))))
    (PRN (, ,)
      (S
        (NP (PRP one))
        (VP (MD can)
          (VP (VB make)
            (NP
              (NP (JJ general) (NNS statements))
              (PP (IN of)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ is)
                      (ADJP
                        (ADJP (JJ common)
                          (PP (TO to)
                            (NP (DT all) (NNS children))))
                        (CC and)
                        (ADJP (JJ common)
                          (PP (TO to)
                            (NP (DT all) (NNS parents)))))))))))))
      (, ,))
    (CC but)
    (S
      (NP (PRP one))
      (ADVP (RB really))
      (VP (MD ca) (RB n't)
        (VP (VB say)
          (ADVP (RB definitively))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (JJ specific) (NNS needs))
                (PP (IN of)
                  (NP (CD one) (NN child))))
              (VP (VBP are)
                (NP
                  (NP (DT the) (JJ same) (JJ specific) (NNS needs))
                  (PP (IN of)
                    (NP (DT another))))))))))
    (. .)))

det(reasons-3, the-2)
prep_for(stated-5, reasons-3)
nsubj(stated-5, I-4)
root(ROOT-0, stated-5)
det(personality-9, the-7)
amod(personality-9, variable-8)
prep_before(stated-5, personality-9)
det(personality-15, the-11)
nn(personality-15, child-12)
conj_and(child-12, variable-14)
nn(personality-15, variable-14)
prep_of(personality-9, personality-15)
det(parent-18, the-17)
prep_of(personality-15, parent-18)
dep(parent-18, s-20)
nsubj(make-25, one-23)
aux(make-25, can-24)
dep(stated-5, make-25)
amod(statements-27, general-26)
dobj(make-25, statements-27)
nsubj(common-31, what-29)
nsubj(common-36, what-29)
cop(common-31, is-30)
prepc_of(statements-27, common-31)
det(children-34, all-33)
prep_to(common-31, children-34)
prepc_of(statements-27, common-36)
conj_and(common-31, common-36)
det(parents-39, all-38)
prep_to(common-36, parents-39)
nsubj(say-46, one-42)
advmod(say-46, really-43)
aux(say-46, ca-44)
neg(say-46, n't-45)
conj_but(stated-5, say-46)
advmod(say-46, definitively-47)
complm(needs-59, that-48)
det(needs-51, the-49)
amod(needs-51, specific-50)
nsubj(needs-59, needs-51)
num(child-54, one-53)
prep_of(needs-51, child-54)
cop(needs-59, are-55)
det(needs-59, the-56)
amod(needs-59, same-57)
amod(needs-59, specific-58)
ccomp(say-46, needs-59)
prep_of(needs-59, another-61)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (ADVP (DT no) (NN doubt))
      (VP (VB find)
        (NP (NNS individuals))
        (PP (IN in)
          (NP
            (NP (DT all) (NNS cutlures))
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (VBD got)
                    (PRT (RP along))
                    (PP (RB just)
                      (ADJP (JJ fine)))
                    (PP (IN with)
                      (NP
                        (NP (RB only) (CD one) (NN parent))
                        (PP (IN of)
                          (NP (DT either) (NN gender))))))
                  (CC and)
                  (VP
                    (ADVP (RB likely))
                    (MD will)
                    (VP (VB find)
                      (NP
                        (NP (NNS individuals))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBD had)
                              (NP
                                (NP
                                  (QP (JJR more) (IN than) (CD two)))
                                (SBAR
                                  (WHNP (WP who))
                                  (S
                                    (VP (VBD profited)
                                      (PP (IN from)
                                        (NP (DT that) (NN arrangement))))))))))))))))))))
    (. .)))

nsubj(find-5, You-1)
aux(find-5, will-2)
dep(doubt-4, no-3)
advmod(find-5, doubt-4)
root(ROOT-0, find-5)
dobj(find-5, individuals-6)
det(cutlures-9, all-8)
prep_in(find-5, cutlures-9)
nsubj(got-11, cutlures-9)
nsubj(find-25, cutlures-9)
rcmod(cutlures-9, got-11)
prt(got-11, along-12)
prep(got-11, just-13)
pobj(just-13, fine-14)
advmod(parent-18, only-16)
num(parent-18, one-17)
prep_with(got-11, parent-18)
det(gender-21, either-20)
prep_of(parent-18, gender-21)
advmod(find-25, likely-23)
aux(find-25, will-24)
rcmod(cutlures-9, find-25)
conj_and(got-11, find-25)
dobj(find-25, individuals-26)
nsubj(had-28, individuals-26)
rcmod(individuals-26, had-28)
mwe(than-30, more-29)
quantmod(two-31, than-30)
dobj(had-28, two-31)
nsubj(profited-33, two-31)
rcmod(two-31, profited-33)
det(arrangement-36, that-35)
prep_from(profited-33, arrangement-36)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will)
      (ADVP (RB also))
      (VP (VB find)
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP
              (NP (NNS individuals))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD had)
                    (S
                      (NP (WDT what))
                      (VP (VBZ is)
                        (VP (VBN considered)
                          (PP (IN by)
                            (NP (DT some)))
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (NP (DT the) (`` ``) (JJ optimum) (JJ parental) (NN arrangement) ('' ''))))))))
                    (NP
                      (NP (CD two) (NNS parents))
                      (PP (IN of)
                        (NP (JJ opposite) (NNS genders)))))))))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (ADVP (RB permanently))
                (VP (VBN scarred)
                  (PP (IN by)
                    (NP (DT that) (NN experience))))))))))
    (. .)))

nsubj(find-4, You-1)
aux(find-4, will-2)
advmod(find-4, also-3)
root(ROOT-0, find-4)
dobj(find-4, plenty-5)
nsubjpass(scarred-31, plenty-5)
prep_of(plenty-5, individuals-7)
nsubj(had-9, individuals-7)
rcmod(individuals-7, had-9)
nsubjpass(considered-12, what-10)
xsubj(arrangement-21, what-10)
auxpass(considered-12, is-11)
ccomp(had-9, considered-12)
agent(considered-12, some-14)
aux(arrangement-21, to-15)
cop(arrangement-21, be-16)
det(arrangement-21, the-17)
amod(arrangement-21, optimum-19)
amod(arrangement-21, parental-20)
xcomp(considered-12, arrangement-21)
num(parents-24, two-23)
dobj(had-9, parents-24)
amod(genders-27, opposite-26)
prep_of(parents-24, genders-27)
auxpass(scarred-31, are-29)
advmod(scarred-31, permanently-30)
rcmod(plenty-5, scarred-31)
det(experience-34, that-33)
agent(scarred-31, experience-34)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN of)
        (NP (DT this)))
      (S
        (VP (TO to)
          (VP (VB say)
            (NP (DT the) (NN assumption))
            (SBAR (IN that)
              (S
                (NP (DT a) (NN child))
                (VP (VBZ needs)
                  (S
                    (NP
                      (NP (CD two) (NNS parents))
                      (PP (IN of)
                        (NP (JJ opposite) (NN gender))))
                    (VP (TO to)
                      (VP (VB grow)
                        (PRT (RP up))
                        (ADJP (JJ happy)
                          (CC and)
                          (JJ well-adjusted))))))))))))
    (VP (VBZ is)
      (ADJP (JJ likely)
        (PP (IN as)
          (ADJP (JJ false))))
      (SBAR (IN as)
        (S
          (NP
            (NP (DT the) (NN assumption))
            (NP (DT the) (NN child)))
          (VP (VBZ needs)
            (NP (CD two))))))
    (. .)))

nsubj(likely-24, All-1)
prep_of(All-1, this-3)
aux(say-5, to-4)
infmod(All-1, say-5)
det(assumption-7, the-6)
dobj(say-5, assumption-7)
complm(needs-11, that-8)
det(child-10, a-9)
nsubj(needs-11, child-10)
ccomp(say-5, needs-11)
num(parents-13, two-12)
nsubj(grow-18, parents-13)
amod(gender-16, opposite-15)
prep_of(parents-13, gender-16)
aux(grow-18, to-17)
xcomp(needs-11, grow-18)
prt(grow-18, up-19)
acomp(grow-18, happy-20)
acomp(grow-18, well-adjusted-22)
conj_and(happy-20, well-adjusted-22)
cop(likely-24, is-23)
root(ROOT-0, likely-24)
prep_as(likely-24, false-26)
mark(needs-32, as-27)
det(assumption-29, the-28)
nsubj(needs-32, assumption-29)
det(child-31, the-30)
dep(assumption-29, child-31)
advcl(likely-24, needs-32)
dobj(needs-32, two-33)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD dare)
        (VP (VB say))))
    (CC and)
    (S
      (PP (IN from)
        (NP (JJ personal) (NN experience)))
      (NP (DT some) (NNS children))
      (VP (VBP need)
        (NP (DT no) (NN parent))
        (ADVP (IN at) (DT all))))
    (. .)))

nsubj(dare-2, I-1)
root(ROOT-0, dare-2)
dep(dare-2, say-3)
amod(experience-7, personal-6)
prep_from(need-10, experience-7)
det(children-9, some-8)
nsubj(need-10, children-9)
conj_and(dare-2, need-10)
det(parent-12, no-11)
dobj(need-10, parent-12)
advmod(need-10, at-13)
pobj(at-13, all-14)

