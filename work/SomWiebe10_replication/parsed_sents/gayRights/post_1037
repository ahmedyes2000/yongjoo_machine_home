(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR (IN though)
      (S
        (NP
          (NP (DT the) (JJ pure) (, ,) (JJ clean) (NN cut) (NN definition))
          (PP (IN of)
            (NP (NN marriage))))
        (VP (MD may)
          (VP (VB say)
            (SBAR (IN that)
              (S
                (NP (DT the) (NN state)
                  (CC or)
                  (NN government))
                (VP (VBZ recognizes)
                  (NP
                    (NP (PRP$ their) (NN union))
                    (PRN (-LRB- -LRB-)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP (PRP I))
                          (VP (VBP see)
                            (NP (DT no) (NNS faults))
                            (PP (IN with)))))
                      (-RRB- -RRB-))))))))))
    (, ,)
    (NP (JJ actual) (NN marriage) (NNS ceremonies))
    (VP (VBP are)
      (VP (VBN performed)
        (PP (IN for)
          (NP
            (NP (NN enjoyment))
            (CC and)
            (NP (JJ religious) (NN sake))))
        (, ,)
        (PP (IN in)
          (NP
            (NP (NN order))
            (PP (IN for)
              (NP (PRP$ their) (NN religion)
                (S
                  (VP (TO to)
                    (VP (VB recognize)
                      (NP (PRP$ their) (NN union)))))))))))
    (. .)))

advmod(performed-35, Now-1)
mark(say-13, though-3)
det(definition-9, the-4)
amod(definition-9, pure-5)
amod(definition-9, clean-7)
nn(definition-9, cut-8)
nsubj(say-13, definition-9)
prep_of(definition-9, marriage-11)
aux(say-13, may-12)
advcl(performed-35, say-13)
complm(recognizes-19, that-14)
det(state-16, the-15)
nsubj(recognizes-19, state-16)
conj_or(state-16, government-18)
nsubj(recognizes-19, government-18)
ccomp(say-13, recognizes-19)
poss(union-21, their-20)
dobj(recognizes-19, union-21)
dep(see-25, which-23)
nsubj(see-25, I-24)
dep(union-21, see-25)
det(faults-27, no-26)
dobj(see-25, faults-27)
prep(see-25, with-28)
amod(ceremonies-33, actual-31)
nn(ceremonies-33, marriage-32)
nsubjpass(performed-35, ceremonies-33)
auxpass(performed-35, are-34)
root(ROOT-0, performed-35)
prep_for(performed-35, enjoyment-37)
amod(sake-40, religious-39)
prep_for(performed-35, sake-40)
conj_and(enjoyment-37, sake-40)
prep_in(performed-35, order-43)
poss(religion-46, their-45)
prep_for(order-43, religion-46)
aux(recognize-48, to-47)
infmod(religion-46, recognize-48)
poss(union-50, their-49)
dobj(recognize-48, union-50)

(ROOT
  (SINV
    (FRAG
      (ADVP (RB So)))
    (, ,)
    (VP (VBZ is)
      (ADJP (NN marriage)))
    (NP (DT a) (NN secular) (NN thing))
    (. ?)))

dep(marriage-4, So-1)
cop(marriage-4, is-3)
root(ROOT-0, marriage-4)
det(thing-7, a-5)
nn(thing-7, secular-6)
nsubj(marriage-4, thing-7)

(ROOT
  (S ('' '')
    (NP (NN Nobody))
    (VP (VBZ is)
      (VP (VBG arguing)
        (PRT (RP about))
        (SBAR (IN whether)
          (CC or)
          (RB not)
          (S
            (NP (NNS churches))
            (VP (MD should)
              (VP (VB sanction)
                (NP (JJ same-sex) (NNS marriages))))))))
    (. .)))

nsubj(arguing-4, Nobody-2)
aux(arguing-4, is-3)
root(ROOT-0, arguing-4)
prt(arguing-4, about-5)
complm(sanction-11, whether-6)
ccomp(arguing-4, not-8)
conj_or(sanction-11, not-8)
nsubj(sanction-11, churches-9)
aux(sanction-11, should-10)
ccomp(arguing-4, sanction-11)
amod(marriages-13, same-sex-12)
dobj(sanction-11, marriages-13)

(ROOT
  (S ('' '')
    (NP (DT The) (NN topic) (NN header))
    (VP (VBD chose)
      (S
        (VP
          (VP (TO to)
            (VP (VB generalize)
              (NP (NN marriage))))
          (CC and)
          (VP (RB not) (TO to)
            (VP (VB restrict)
              (NP (DT this) (NN argument)))))))
    (. .)))

det(header-4, The-2)
nn(header-4, topic-3)
nsubj(chose-5, header-4)
root(ROOT-0, chose-5)
aux(generalize-7, to-6)
ccomp(chose-5, generalize-7)
dobj(generalize-7, marriage-8)
neg(restrict-12, not-10)
aux(restrict-12, to-11)
ccomp(chose-5, restrict-12)
conj_and(generalize-7, restrict-12)
det(argument-14, this-13)
dobj(restrict-12, argument-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD felt)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (JJ fair)
              (PP (IN for)
                (NP (PRP me))))
            (S
              (VP (TO to)
                (VP (VB argue)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(felt-2, I-1)
root(ROOT-0, felt-2)
complm(fair-6, that-3)
nsubj(fair-6, it-4)
xsubj(argue-10, it-4)
cop(fair-6, was-5)
ccomp(felt-2, fair-6)
prep_for(fair-6, me-8)
aux(argue-10, to-9)
xcomp(fair-6, argue-10)
dobj(argue-10, it-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR (IN that)
        (S
          (VP (MD might)
            (ADVP (RBR better))
            (VP
              (VP (VB clarify)
                (NP (PRP$ my) (NN point)
                  (CC and)
                  (NN argument)))
              (CC and)
              (VP (VB nullify)
                (NP
                  (NP (DT some))
                  ('' '')
                  (VP (VBN Wrong)))))))))
    (. .)))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
complm(clarify-6, that-3)
aux(clarify-6, might-4)
advmod(clarify-6, better-5)
ccomp(hope-2, clarify-6)
poss(point-8, my-7)
dobj(clarify-6, point-8)
dobj(clarify-6, argument-10)
conj_and(point-8, argument-10)
ccomp(hope-2, nullify-12)
conj_and(clarify-6, nullify-12)
dobj(nullify-12, some-13)
partmod(some-13, Wrong-15)

(ROOT
  (S
    (S
      (ADJP (JJ Wrong)))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP (RB already) (JJ wrong) ('' '')
        (SBAR
          (S
            (VP (VBZ comments))))))
    (. .)))

ccomp(wrong-6, Wrong-1)
nsubj(wrong-6, you-3)
cop(wrong-6, 're-4)
advmod(wrong-6, already-5)
root(ROOT-0, wrong-6)
dep(wrong-6, comments-8)

(ROOT
  (S
    (ADVP (RB Yes))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NNS individuals))
        (VP (VBP wish)
          (S
            (VP (TO to)
              (VP (VB have)
                (S
                  (NP (PRP it))
                  (VP (VB be)
                    (NP (RB solely) (DT the) (NN state))))))))))
    (NP (DT that))
    (VP (VBZ recognizes)
      (NP (PRP them)))
    (. .)))

advmod(recognizes-15, Yes-1)
mark(wish-6, if-3)
det(individuals-5, the-4)
nsubj(wish-6, individuals-5)
xsubj(have-8, individuals-5)
dep(recognizes-15, wish-6)
aux(have-8, to-7)
xcomp(wish-6, have-8)
nsubj(state-13, it-9)
cop(state-13, be-10)
advmod(state-13, solely-11)
det(state-13, the-12)
ccomp(have-8, state-13)
nsubj(recognizes-15, that-14)
root(ROOT-0, recognizes-15)
dobj(recognizes-15, them-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP feel)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP are)
            (VP (VBG arguing)
              (PP (IN for)
                (NP (RB roughly) (DT the) (JJ same) (NN thing))))))))
    (. .)))

nsubj(feel-2, I-1)
root(ROOT-0, feel-2)
complm(arguing-6, that-3)
nsubj(arguing-6, we-4)
aux(arguing-6, are-5)
ccomp(feel-2, arguing-6)
advmod(thing-11, roughly-8)
det(thing-11, the-9)
amod(thing-11, same-10)
prep_for(arguing-6, thing-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am) (RB not)
        (VP (VBG saying)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN state))
              (VP (MD should) (RB not)
                (VP (VB recognize)
                  (NP (PRP them)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP am) (RB not)
        (VP (VBG saying)
          (SBAR (IN that)
            (S
              (NP (DT the) (NNP Hindu) (NN faith))
              (VP (MD should) (RB n't))))))
      (ADVP (RB as) (RB well)))
    (. .)))

nsubj(saying-4, I-1)
aux(saying-4, am-2)
neg(saying-4, not-3)
root(ROOT-0, saying-4)
complm(recognize-10, that-5)
det(state-7, the-6)
nsubj(recognize-10, state-7)
aux(recognize-10, should-8)
neg(recognize-10, not-9)
ccomp(saying-4, recognize-10)
dobj(recognize-10, them-11)
nsubj(saying-17, I-14)
aux(saying-17, am-15)
neg(saying-17, not-16)
conj_and(saying-4, saying-17)
complm(should-22, that-18)
det(faith-21, the-19)
nn(faith-21, Hindu-20)
nsubj(should-22, faith-21)
ccomp(saying-17, should-22)
neg(should-22, n't-23)
advmod(well-25, as-24)
mwe(well-25, as-24)
advmod(saying-17, well-25)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG saying)
          (SBAR (IN that)
            (S
              (SBAR (IN if)
                (S
                  (NP (DT a) (NN group))
                  (VP (VBZ does) (RB not)
                    (VP (VB wish)
                      (S
                        (VP (TO to)
                          (VP (VB recognize)
                            (NP (PRP them)))))))))
              (, ,)
              (ADVP (RB already))
              (VP
                (ADVP (RB firmly))
                (VBZ holds)
                (NP (DT the) (NN belief))
                (SBAR (IN that)
                  (S
                    (NP (PRP$ their) (NN act))
                    (VP (VBZ is) (`` ``)
                      (ADJP (JJ wrong))
                      ('' ''))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBG violating)
        (NP
          (NP (PRP$ their)
            (NP (-LRB- -LRB-)
              (NP (DT the) (NN religion) (POS 's))
              (-RRB- -RRB-) (NNS rights)))
          (S
            (VP (TO to)
              (VP (VB force)
                (NP (NN recognition))))))))
    (. .)))

nsubj(saying-3, I-1)
aux(saying-3, am-2)
ccomp(violating-30, saying-3)
complm(holds-17, that-4)
mark(wish-10, if-5)
det(group-7, a-6)
nsubj(wish-10, group-7)
xsubj(recognize-12, group-7)
aux(wish-10, does-8)
neg(wish-10, not-9)
advcl(holds-17, wish-10)
aux(recognize-12, to-11)
xcomp(wish-10, recognize-12)
dobj(recognize-12, them-13)
advmod(holds-17, already-15)
advmod(holds-17, firmly-16)
ccomp(saying-3, holds-17)
det(belief-19, the-18)
dobj(holds-17, belief-19)
complm(wrong-25, that-20)
poss(act-22, their-21)
nsubj(wrong-25, act-22)
cop(wrong-25, is-23)
ccomp(holds-17, wrong-25)
nsubj(violating-30, it-28)
aux(violating-30, is-29)
root(ROOT-0, violating-30)
poss(rights-37, their-31)
det(religion-34, the-33)
poss(rights-37, religion-34)
dobj(violating-30, rights-37)
aux(force-39, to-38)
infmod(rights-37, force-39)
dobj(force-39, recognition-40)

(ROOT
  (S ('' '')
    (PP (TO To)
      (NP (NNP clarify)))
    (, ,)
    (NP (JJ same-sex) (NNS couples))
    (VP
      (VP (VBP do) (RB not))
      (CC and)
      (VP (MD should) (RB not)
        (VP (VB request)
          (NP (JJ religious) (NNS institutions))
          (S
            (VP (TO to)
              (VP (VB sanction)
                (NP (PRP$ their) (NNS marriages))))))))
    (. .)))

prep_to(do-7, clarify-3)
amod(couples-6, same-sex-5)
nsubj(do-7, couples-6)
nsubj(request-12, couples-6)
root(ROOT-0, do-7)
neg(do-7, not-8)
aux(request-12, should-10)
neg(request-12, not-11)
conj_and(do-7, request-12)
amod(institutions-14, religious-13)
dobj(request-12, institutions-14)
aux(sanction-16, to-15)
xcomp(request-12, sanction-16)
poss(marriages-18, their-17)
dobj(sanction-16, marriages-18)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBP are))
      (CC and)
      (VP (MD should)
        (VP (VB be)
          (ADJP (JJ appealing)
            (PP (TO to)
              (NP (DT the) (NN government)
                (S
                  (VP (TO to)
                    (VP (VB sanction)
                      (NP (PRP$ their) (NNS marriages)))))))))))
    (. .)))

nsubj(are-2, They-1)
nsubj(appealing-6, They-1)
root(ROOT-0, are-2)
aux(appealing-6, should-4)
cop(appealing-6, be-5)
conj_and(are-2, appealing-6)
det(government-9, the-8)
prep_to(appealing-6, government-9)
aux(sanction-11, to-10)
infmod(government-9, sanction-11)
poss(marriages-13, their-12)
dobj(sanction-11, marriages-13)

(ROOT
  (S ('' '')
    (NP (NNP Not))
    (ADVP (RB fully))
    (VP (VBZ true))
    (. .)))

nsubj(true-4, Not-2)
advmod(true-4, fully-3)
root(ROOT-0, true-4)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (JJ same) (NN sex) (NN couple))
        (VP (VBZ wishes)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP (DT a) (JJ religious) (NN ceremony))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP they))
    (VP (VBP have)
      (NP (DT every) (NN right)
        (S
          (VP (TO to)
            (VP (VB do)
              (ADVP (RB so))))))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (DT the) (NN religion))
          (VP (VBZ is) (RB not)
            (VP (VBG being)
              (VP (VBN forced)
                (S
                  (VP (TO to)
                    (VP (VB change)
                      (ADJP (JJ due)
                        (PP (TO to)
                          (NP (PRP$ their)
                            (PRN (-LRB- -LRB-)
                              (NP (NN individual) (POS 's))
                              (-RRB- -RRB-))
                            (NNS beliefs)))))))))))))
    (. .)))

mark(wishes-6, If-1)
det(couple-5, a-2)
amod(couple-5, same-3)
nn(couple-5, sex-4)
nsubj(wishes-6, couple-5)
xsubj(have-8, couple-5)
advcl(have-15, wishes-6)
aux(have-8, to-7)
xcomp(wishes-6, have-8)
det(ceremony-11, a-9)
amod(ceremony-11, religious-10)
dobj(have-8, ceremony-11)
advmod(have-15, then-13)
nsubj(have-15, they-14)
root(ROOT-0, have-15)
det(right-17, every-16)
dobj(have-15, right-17)
aux(do-19, to-18)
infmod(right-17, do-19)
advmod(do-19, so-20)
mark(forced-28, if-22)
det(religion-24, the-23)
nsubjpass(forced-28, religion-24)
xsubj(change-30, religion-24)
aux(forced-28, is-25)
neg(forced-28, not-26)
auxpass(forced-28, being-27)
advcl(have-15, forced-28)
aux(change-30, to-29)
xcomp(forced-28, change-30)
acomp(change-30, due-31)
poss(beliefs-38, their-33)
appos(beliefs-38, individual-35)
possessive(individual-35, 's-36)
prep_to(due-31, beliefs-38)

