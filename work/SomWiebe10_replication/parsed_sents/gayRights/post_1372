(ROOT
  (S
    (VP (VB Thank)
      (S
        (NP (PRP you))
        (ADJP (JJ Kroticfate)
          (PP (IN for)
            (S
              (VP
                (VP (VBG coming)
                  (ADJP (JJ clean)))
                (CC and)
                (VP (VBG admitting)
                  (SBAR (IN that)
                    (S
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP you))
                          (VP (VBD did))))
                      (VP (VBD was)
                        (ADJP (JJ wrong))))))))))))
    (. .)))

root(ROOT-0, Thank-1)
nsubj(Kroticfate-3, you-2)
xcomp(Thank-1, Kroticfate-3)
prepc_for(Kroticfate-3, coming-5)
acomp(coming-5, clean-6)
prepc_for(Kroticfate-3, admitting-8)
conj_and(coming-5, admitting-8)
complm(wrong-14, that-9)
dobj(did-12, what-10)
nsubj(did-12, you-11)
csubj(wrong-14, did-12)
cop(wrong-14, was-13)
ccomp(admitting-8, wrong-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB try)
        (CC and)
        (VB post)
        (NP
          (NP (DT that))
          (PP (IN for)
            (NP (PRP you))))
        (PP (IN on)
          (NP (DT the)
            (ADJP (JJ FATE)
              (CC or)
              (JJ KROTICFATE))
            (NN debate)))
        (SBAR (IN since)
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (VP (VBG having)
                (NP
                  (NP (NN computer) (NN problem))
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NN site))
                      (ADVP (RB right) (RB now)))))))))))
    (. .)))

nsubj(try-3, I-1)
nsubj(post-5, I-1)
aux(try-3, 'll-2)
root(ROOT-0, try-3)
conj_and(try-3, post-5)
dobj(try-3, that-6)
prep_for(that-6, you-8)
det(debate-14, the-10)
amod(debate-14, FATE-11)
conj_or(FATE-11, KROTICFATE-13)
amod(debate-14, KROTICFATE-13)
prep_on(try-3, debate-14)
mark(having-18, since-15)
nsubj(having-18, we-16)
aux(having-18, 're-17)
advcl(try-3, having-18)
nn(problem-20, computer-19)
dobj(having-18, problem-20)
det(site-23, the-22)
prep_on(problem-20, site-23)
advmod(now-25, right-24)
advmod(site-23, now-25)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (ADJP (JJ proud)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBD did)
                (NP (DT this))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (NNS others))
            (VP (MD will)
              (VP (VB give)
                (NP (PRP you))
                (NP
                  (NP (DT the) (JJ second) (NN chance))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP deserve)))))))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP I))
            (VP (MD will))))))
    (. .)))

nsubj(proud-3, I-1)
cop(proud-3, am-2)
root(ROOT-0, proud-3)
nsubj(did-5, you-4)
dep(proud-3, did-5)
dobj(did-5, this-6)
nsubj(think-9, I-8)
conj_and(proud-3, think-9)
nsubj(give-12, others-10)
aux(give-12, will-11)
ccomp(think-9, give-12)
iobj(give-12, you-13)
det(chance-16, the-14)
amod(chance-16, second-15)
dobj(give-12, chance-16)
dobj(deserve-18, chance-16)
nsubj(deserve-18, you-17)
rcmod(chance-16, deserve-18)
mark(will-22, as-20)
nsubj(will-22, I-21)
advcl(think-9, will-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (ADVP (RB now))
      (VP
        (ADVP (RB gladly))
        (VB add)
        (NP (PRP you))
        (PP (TO to)
          (NP (PRP$ my) (NN ally) (NN list)))
        (PP (IN for)
          (S
            (VP (VBG being)
              (ADJP (JJ courageous) (RB enough)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB tell)
                        (NP (PRP us)))
                      (CC and)
                      (VP (VB make)
                        (S
                          (NP (PRP it))
                          (ADJP (RB right)))))))))))))
    (. .)))

nsubj(add-5, I-1)
aux(add-5, will-2)
advmod(add-5, now-3)
advmod(add-5, gladly-4)
root(ROOT-0, add-5)
dobj(add-5, you-6)
poss(list-10, my-8)
nn(list-10, ally-9)
prep_to(add-5, list-10)
cop(courageous-13, being-12)
prepc_for(add-5, courageous-13)
advmod(courageous-13, enough-14)
aux(tell-16, to-15)
xcomp(courageous-13, tell-16)
dobj(tell-16, us-17)
xcomp(courageous-13, make-19)
conj_and(tell-16, make-19)
nsubj(right-21, it-20)
xcomp(make-19, right-21)

