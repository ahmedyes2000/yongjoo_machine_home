(ROOT
  (X (JJ 1) (. .) (NNP -RRB-)))

root(ROOT-0, 1-1)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (JJ few) (NNS scholars\/linguists))
        (VP (VBP agree)
          (SBAR (IN that)
            (S (`` ``)
              (NP (NNS homosexuals))
              ('' '')
              (VP (VBZ is)
                (NP
                  (NP (DT a) (JJ fair) (NN translation))
                  (PP (IN of)
                    (NP (DT the) (JJ original) (NN text))))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (RB absolutely) (JJ right)))
    (. .)))

mark(agree-5, If-1)
det(scholars\/linguists-4, a-2)
amod(scholars\/linguists-4, few-3)
nsubj(agree-5, scholars\/linguists-4)
advcl(right-23, agree-5)
complm(translation-13, that-6)
nsubj(translation-13, homosexuals-8)
cop(translation-13, is-10)
det(translation-13, a-11)
amod(translation-13, fair-12)
ccomp(agree-5, translation-13)
det(text-17, the-15)
amod(text-17, original-16)
prep_of(translation-13, text-17)
advmod(right-23, then-19)
nsubj(right-23, you-20)
cop(right-23, are-21)
advmod(right-23, absolutely-22)
root(ROOT-0, right-23)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (PP (IN like)
        (S
          (VP (VBG saying)
            (SBAR
              (S
                (NP (NNS non-believers))
                (VP (VBP are)
                  (ADJP (JJ incapable)
                    (PP (IN of)
                      (S
                        (VP (VBG understanding)
                          (NP (PRP$ your) (NNS ways)))))))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
prepc_like('s-2, saying-4)
nsubj(incapable-7, non-believers-5)
cop(incapable-7, are-6)
ccomp(saying-4, incapable-7)
prepc_of(incapable-7, understanding-9)
poss(ways-11, your-10)
dobj(understanding-9, ways-11)

(ROOT
  (S
    (NP (DT An) (NN argument))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN evaluted)
          (PP (IN for)
            (NP
              (NP (PRP$ its) (NN reasoning))
              (, ,)
              (SBAR (RB not)
                (WHNP (WP who))
                (S
                  (VP (VBD said)
                    (NP (PRP it))))))))))
    (. .)))

det(argument-2, An-1)
nsubjpass(evaluted-5, argument-2)
aux(evaluted-5, should-3)
auxpass(evaluted-5, be-4)
root(ROOT-0, evaluted-5)
poss(reasoning-8, its-7)
prep_for(evaluted-5, reasoning-8)
nsubj(said-12, reasoning-8)
dep(said-12, not-10)
rcmod(reasoning-8, said-12)
dobj(said-12, it-13)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADVP (RB also))
      (NP
        (NP
          (QP (JJR more) (IN than) (DT a) (JJ few))
          (NNS contradictions))
        (PP (IN in)
          (NP (DT the) (NNP Bible)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
advmod(are-2, also-3)
mwe(than-5, more-4)
quantmod(few-7, than-5)
quantmod(few-7, a-6)
num(contradictions-8, few-7)
nsubj(are-2, contradictions-8)
det(Bible-11, the-10)
prep_in(contradictions-8, Bible-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD 'd)
      (VP (VB have)
        (NP
          (NP (DT a)
            (ADJP (RB much) (JJR stronger))
            (NN argument))
          (PP (IN by)
            (S
              (VP (VBG saying)
                (SBAR (IN that)
                  (S
                    (NP (EX there))
                    (VP (VBP are) (RB n't)
                      (ADJP (JJ many)))))))))))
    (. .)))

nsubj(have-3, You-1)
aux(have-3, 'd-2)
root(ROOT-0, have-3)
det(argument-7, a-4)
advmod(stronger-6, much-5)
amod(argument-7, stronger-6)
dobj(have-3, argument-7)
prepc_by(argument-7, saying-9)
complm(are-12, that-10)
expl(are-12, there-11)
ccomp(saying-9, are-12)
neg(are-12, n't-13)
acomp(are-12, many-14)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (DT some) (NNS groups))
            (VP (VBP have)
              (NP
                (NP (CD 40) (JJ +) (NNS members))
                (PP (IN in)
                  (NP
                    (NP (JJ complete) (NN agreement))
                    (PP (IN with)
                      (NP (DT each) (JJ other) (NN sometimes)))))))))))
    (. .)))

cc(sure-4, And-1)
nsubj(sure-4, I-2)
cop(sure-4, 'm-3)
root(ROOT-0, sure-4)
det(groups-6, some-5)
nsubj(have-7, groups-6)
dep(sure-4, have-7)
num(members-10, 40-8)
amod(members-10, +-9)
dobj(have-7, members-10)
amod(agreement-13, complete-12)
prep_in(members-10, agreement-13)
det(sometimes-17, each-15)
amod(sometimes-17, other-16)
prep_with(agreement-13, sometimes-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (ADJP (JJ impossible)))
    (. .)))

nsubj(impossible-4, It-1)
cop(impossible-4, 's-2)
neg(impossible-4, not-3)
root(ROOT-0, impossible-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP
          (NP (JJ enough) (NN background))
          (PP (IN in)
            (NP
              (NP (JJ Greek) (NNS nor))
              (PP (IN in)
                (NP (DT the) (NNP Bible)))))
          (SBAR
            (S
              (NP (PRP itself))
              (VP (TO to)
                (VP (VB figure)
                  (NP (PRP it))
                  (PRT (RP out)))))))))
    (. .)))

nsubj(have-4, I-1)
aux(have-4, do-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
amod(background-6, enough-5)
dobj(have-4, background-6)
amod(nor-9, Greek-8)
prep_in(background-6, nor-9)
det(Bible-12, the-11)
prep_in(nor-9, Bible-12)
nsubj(figure-15, itself-13)
aux(figure-15, to-14)
infmod(background-6, figure-15)
rcmod(background-6, figure-15)
dobj(figure-15, it-16)
prt(figure-15, out-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN translation))
        (VP (VBZ is)
          (ADJP (JJ accurate)
            (SBAR
              (S (-LRB- -LRB-)
                (NP (WDT which))
                (VP (VBZ neither))))))))
    (NP (PRP you)
      (CC or)
      (PRP I))
    (VP (MD can)
      (ADVP (RB really))
      (VP (VB know)))
    (. ...)))

mark(accurate-5, If-1)
det(translation-3, the-2)
nsubj(accurate-5, translation-3)
cop(accurate-5, is-4)
advcl(know-14, accurate-5)
nsubj(neither-8, which-7)
dep(accurate-5, neither-8)
nsubj(know-14, you-9)
conj_or(you-9, I-11)
nsubj(know-14, I-11)
aux(know-14, can-12)
advmod(know-14, really-13)
root(ROOT-0, know-14)

(ROOT
  (S
    (S
      (ADVP (RB -RRB-))
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBP 're)
        (ADJP (RB absolutely) (JJ right))))
    (CC and)
    (S
      (NP (DT this) (NN passage))
      (VP (VBZ does)
        (VP (VB speak)
          (PP (IN against)
            (NP (JJ homosexuality) (CD .2))))))
    (. .) (-RRB- -RRB-)))

advmod(right-6, then-2)
nsubj(right-6, you-3)
cop(right-6, 're-4)
advmod(right-6, absolutely-5)
root(ROOT-0, right-6)
det(passage-9, this-8)
nsubj(speak-11, passage-9)
aux(speak-11, does-10)
conj_and(right-6, speak-11)
amod(.2-14, homosexuality-13)
prep_against(speak-11, .2-14)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB matter)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP I))
            (VP (VBP believe)
              (SBAR
                (S
                  (NP (DT the) (NN universe))
                  (VP (VBD was)
                    (VP (VBN created))))))))))
    (. ?)))

dobj(matter-4, What-1)
aux(matter-4, does-2)
nsubj(matter-4, it-3)
root(ROOT-0, matter-4)
advmod(believe-7, how-5)
nsubj(believe-7, I-6)
ccomp(matter-4, believe-7)
det(universe-9, the-8)
nsubjpass(created-11, universe-9)
auxpass(created-11, was-10)
ccomp(believe-7, created-11)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB only))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (NNP God))
              (VP (VBD created)
                (NP (DT the) (NN universe)))))
          (PRN (-LRB- -LRB-)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP He))
                (VP (MD might)
                  (VP (VB have)))))
            (-RRB- -RRB-))
          (NP (PRP we))
          (VP (MD can) (RB not)
            (VP (VB use)
              (NP (PRP$ our) (NN existence))
              (PP (IN as)
                (NP
                  (NP (NN proof))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(said-3, I-1)
advmod(said-3, only-2)
root(ROOT-0, said-3)
complm(use-19, that-4)
mark(created-7, if-5)
nsubj(created-7, God-6)
advcl(use-19, created-7)
det(universe-9, the-8)
dobj(created-7, universe-9)
dobj(have-14, which-11)
nsubj(have-14, He-12)
aux(have-14, might-13)
parataxis(use-19, have-14)
nsubj(use-19, we-16)
aux(use-19, can-17)
neg(use-19, not-18)
ccomp(said-3, use-19)
poss(existence-21, our-20)
dobj(use-19, existence-21)
prep_as(use-19, proof-23)
prep_of(proof-23, it-25)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBN discredited)
      (NP (NNP Creationism)))
    (. .)))

nsubj(discredited-3, I-1)
neg(discredited-3, never-2)
root(ROOT-0, discredited-3)
dobj(discredited-3, Creationism-4)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (PRP I))
        (VP (VBD had))))
    (, ,)
    (NP (DT that))
    (VP (VBZ does) (RB not)
      (ADVP (RB necessarily))
      (VP (VB mean)
        (S
          (NP (PRP I))
          (VP (VB believe)
            (PP (IN in) ('' '')
              (NP (NNP Evolution)))))))
    (. .)))

advmod(had-4, Even-1)
dep(had-4, if-2)
nsubj(had-4, I-3)
advcl(mean-10, had-4)
nsubj(mean-10, that-6)
aux(mean-10, does-7)
neg(mean-10, not-8)
advmod(mean-10, necessarily-9)
root(ROOT-0, mean-10)
nsubj(believe-12, I-11)
ccomp(mean-10, believe-12)
prep_in(believe-12, Evolution-15)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (VBP 're)
      (ADJP
        (ADJP (JJ quick)
          (S
            (VP (TO to)
              (VP (VB assume)
                (NP (PRP$ my) (NNS beliefs))))))
        (CC and)
        (ADJP (RB even) (JJR quicker)
          (S
            (VP (TO to)
              (VP (VB disprove)
                (NP (PRP them))))))))
    (. .)))

nsubj(quick-4, You-2)
nsubj(quicker-11, You-2)
cop(quick-4, 're-3)
root(ROOT-0, quick-4)
aux(assume-6, to-5)
xcomp(quick-4, assume-6)
poss(beliefs-8, my-7)
dobj(assume-6, beliefs-8)
advmod(quicker-11, even-10)
conj_and(quick-4, quicker-11)
aux(disprove-13, to-12)
xcomp(quicker-11, disprove-13)
dobj(disprove-13, them-14)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (NP
      (NP (DT the) (NNP Big) (NNP Bang))
      (CC and)
      (NP (NNP Evolution)))
    (VP
      (VP (VBP are)
        (ADVP
          (NP (CD two))
          (RB entirely))
        (NP (JJ different) (NNS theories)))
      (CC and)
      (VP (MD should)
        (VP (VB be)
          (VP (VBN addressed)
            (PP (IN as)
              (NP (JJ such) (CD .3)))))))
    (. .) (-RRB- -RRB-)))

advmod(theories-12, Also-1)
det(Bang-5, the-3)
nn(Bang-5, Big-4)
nsubj(theories-12, Bang-5)
nsubjpass(addressed-16, Bang-5)
conj_and(Bang-5, Evolution-7)
nsubj(theories-12, Evolution-7)
cop(theories-12, are-8)
npadvmod(entirely-10, two-9)
advmod(theories-12, entirely-10)
amod(theories-12, different-11)
root(ROOT-0, theories-12)
aux(addressed-16, should-14)
auxpass(addressed-16, be-15)
conj_and(theories-12, addressed-16)
amod(.3-19, such-18)
prep_as(addressed-16, .3-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (ADJP (JJ crucial)
        (S
          (VP (TO to)
            (VP (VB accept)
              (NP (NNP God))
              (PP (IN as)
                (NP (DT an) (NN author)
                  (S
                    (VP (TO to)
                      (VP (VB understand)
                        (S
                          (NP (DT an) (NN argument))
                          (VP (VB put)
                            (ADVP (RB forth))))))))))))))
    (. .)))

nsubj(crucial-4, It-1)
cop(crucial-4, is-2)
neg(crucial-4, not-3)
root(ROOT-0, crucial-4)
aux(accept-6, to-5)
xcomp(crucial-4, accept-6)
dobj(accept-6, God-7)
det(author-10, an-9)
prep_as(accept-6, author-10)
aux(understand-12, to-11)
infmod(author-10, understand-12)
det(argument-14, an-13)
nsubj(put-15, argument-14)
ccomp(understand-12, put-15)
advmod(put-15, forth-16)

