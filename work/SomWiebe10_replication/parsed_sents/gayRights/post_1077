(ROOT
  (SINV
    (FRAG
      (INTJ (UH Oh) (UH baloney)))
    (, ,)
    (VP (VBZ prevents))
    (NP
      (NP (NNS employers))
      (PP (IN from)
        (S
          (VP (VBG acquiring)
            (NP (JJ good) (NN talent))))))
    (. ?)))

dep(prevents-4, Oh-1)
dep(Oh-1, baloney-2)
root(ROOT-0, prevents-4)
nsubj(prevents-4, employers-5)
prepc_from(employers-5, acquiring-7)
amod(talent-9, good-8)
dobj(acquiring-7, talent-9)

(ROOT
  (SBARQ
    (WHNP
      (WHADJP (WRB How) (JJ many))
      (NNS times))
    (SQ (VBZ has)
      (NP (DT this))
      (VP (VBN been)
        (VP (VBN thrown)
          (PP (IN in)
            (NP
              (NP (DT the) (JJ public) (NN face))
              (PP (IN with)
                (NP (NN absolutly)))))
          (PP (TO to)
            (NP (NN substance)))
          (PP (TO to)
            (NP (DT the) (NN claim))))))
    (. .)))

advmod(many-2, How-1)
amod(times-3, many-2)
attr(thrown-7, times-3)
aux(thrown-7, has-4)
nsubjpass(thrown-7, this-5)
auxpass(thrown-7, been-6)
root(ROOT-0, thrown-7)
det(face-11, the-9)
amod(face-11, public-10)
prep_in(thrown-7, face-11)
prep_with(face-11, absolutly-13)
prep_to(thrown-7, substance-15)
det(claim-18, the-17)
prep_to(thrown-7, claim-18)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD will)
        (VP (VB agree) ('' '')
          (NP
            (NP (JJ Civil) (NNS Unions))
            ('' '')
            (SBAR
              (S
                (VP (MD should)
                  (VP (VB be)
                    (VP (VBN allowed))))))))))
    (CC and)
    (S
      (NP (DT this))
      (VP (MD would)
        (VP (VB provide)
          (NP
            (NP
              (NP (DT the) (NNS protections))
              (PP (IN under)
                (NP (DT the) (NNP Constitution))))
            (, ,)
            (CONJP (CC but)
              (RB not))
            (NP
              (NP (NN marriage))
              (, ,)
              (NP
                (NP (NN marriage))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ has)
                      (VP (VBN been)
                        (NP
                          (NP (DT the) (NN way))
                          (SBAR
                            (S
                              (NP (PRP it))
                              (VP (VBZ has)
                                (VP (VBN been)
                                  (PP (IN for)
                                    (NP
                                      (NP (NNS thousands))
                                      (PP (IN of)
                                        (NP (NNS years))))))))))))))))))))
    (. .)))

nsubj(agree-3, I-1)
aux(agree-3, will-2)
root(ROOT-0, agree-3)
amod(Unions-6, Civil-5)
dobj(agree-3, Unions-6)
aux(allowed-10, should-8)
auxpass(allowed-10, be-9)
rcmod(Unions-6, allowed-10)
nsubj(provide-14, this-12)
aux(provide-14, would-13)
conj_and(agree-3, provide-14)
det(protections-16, the-15)
dobj(provide-14, protections-16)
det(Constitution-19, the-18)
prep_under(protections-16, Constitution-19)
dobj(provide-14, marriage-23)
conj_negcc(protections-16, marriage-23)
appos(marriage-23, marriage-25)
nsubj(way-30, marriage-25)
aux(way-30, has-27)
cop(way-30, been-28)
det(way-30, the-29)
rcmod(marriage-25, way-30)
dobj(been-33, way-30)
nsubj(been-33, it-31)
aux(been-33, has-32)
rcmod(way-30, been-33)
prep_for(been-33, thousands-35)
prep_of(thousands-35, years-37)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB change)
          (NP (PRP it)))))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ reckless)
          (CC and)
          (JJ careless))))
    (. .)))

aux(change-2, To-1)
csubj(reckless-6, change-2)
csubj(careless-8, change-2)
dobj(change-2, it-3)
aux(reckless-6, would-4)
cop(reckless-6, be-5)
root(ROOT-0, reckless-6)
conj_and(reckless-6, careless-8)

(ROOT
  (S
    (VP
      (NP (NNP Avery) (JJ bad) (NN example)
        (S
          (VP (TO to)
            (VP (VB provide)
              (NP
                (NP (PRP$ our) (JJR younger) (NN population))
                (CC and)
                (NP (DT the) (NN world)))
              (SBAR (IN that) (IN because)
                (S
                  (NP (PRP you))
                  (VP (VBP feel)
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP are)
                          (ADJP (VBN entitled))))))))
              (, ,)
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (MD can)
                    (VP (VB dismantle)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (VP (VBZ has)
                            (VP (VBN been)
                              (VP (VBN put)
                                (PP (IN in)
                                  (NP
                                    (NP (NN place))
                                    (PP (IN for)
                                      (NP (DT a) (NN reason)
                                        (CC and)
                                        (NN purpose)))))))))))))))))))
    (. .)))

nn(example-3, Avery-1)
amod(example-3, bad-2)
root(ROOT-0, example-3)
aux(provide-5, to-4)
infmod(example-3, provide-5)
poss(population-8, our-6)
amod(population-8, younger-7)
dobj(provide-5, population-8)
det(world-11, the-10)
dobj(provide-5, world-11)
conj_and(population-8, world-11)
complm(feel-15, that-12)
dep(feel-15, because-13)
nsubj(feel-15, you-14)
ccomp(provide-5, feel-15)
nsubjpass(entitled-18, you-16)
auxpass(entitled-18, are-17)
ccomp(feel-15, entitled-18)
complm(dismantle-23, that-20)
nsubj(dismantle-23, you-21)
aux(dismantle-23, can-22)
ccomp(provide-5, dismantle-23)
nsubjpass(put-27, what-24)
aux(put-27, has-25)
auxpass(put-27, been-26)
ccomp(dismantle-23, put-27)
prep_in(put-27, place-29)
det(reason-32, a-31)
prep_for(place-29, reason-32)
prep_for(place-29, purpose-34)
conj_and(reason-32, purpose-34)

(ROOT
  (S
    (NP
      (NP (DT A) (NN reason)
        (CC and)
        (NN purpose))
      (NP (DT that)))
    (VP (VBZ gets)
      (NP
        (NP (NN loss))
        (PP (IN from)
          (NP (NN generaton))))
      (PP (TO to)
        (NP (NN generation))))
    (. .)))

det(reason-2, A-1)
nsubj(gets-6, reason-2)
conj_and(reason-2, purpose-4)
nsubj(gets-6, purpose-4)
dep(reason-2, that-5)
root(ROOT-0, gets-6)
dobj(gets-6, loss-7)
prep_from(loss-7, generaton-9)
prep_to(gets-6, generation-11)

