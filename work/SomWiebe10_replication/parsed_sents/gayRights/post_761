(ROOT
  (S (`` ``)
    (NP (NNP Thirdly))
    (, ,)
    (VP (VB consider)
      (S
        (NP (PRP yourself))
        (ADJP (JJ dead)
          (PP (TO to)
            (NP
              (NP (PRP$ your) (JJ old) (NN nature))
              (CC and)
              (NP (PRP$ your) (JJ carnal) (NN nature)))))))
    (. .)))

nsubj(consider-4, Thirdly-2)
root(ROOT-0, consider-4)
nsubj(dead-6, yourself-5)
xcomp(consider-4, dead-6)
poss(nature-10, your-8)
amod(nature-10, old-9)
prep_to(dead-6, nature-10)
poss(nature-14, your-12)
amod(nature-14, carnal-13)
prep_to(dead-6, nature-14)
conj_and(nature-10, nature-14)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP
        (VP (VB obey)
          (NP
            (NP (DT the) (NN lust))
            (PP (IN of)
              (NP (PRP$ your) (NN flesh)))))
        (, ,)
        (VP
          (ADVP (RB rather))
          (VB subject)
          (NP (PRP yourself))
          (PP (TO to)
            (NP
              (NP (DT the) (NN Spirit))
              (PP (IN of)
                (NP (NNP God))))))
        (CC and)
        (VP (VB live)
          (PP (IN for)
            (NP (NNP God))))))
    (. .)))

aux(obey-3, Do-1)
neg(obey-3, n't-2)
root(ROOT-0, obey-3)
det(lust-5, the-4)
dobj(obey-3, lust-5)
poss(flesh-8, your-7)
prep_of(lust-5, flesh-8)
advmod(subject-11, rather-10)
conj_and(obey-3, subject-11)
dobj(subject-11, yourself-12)
det(Spirit-15, the-14)
prep_to(subject-11, Spirit-15)
prep_of(Spirit-15, God-17)
conj_and(obey-3, live-19)
prep_for(live-19, God-21)

(ROOT
  (S ('' '')
    (NP (NNP Torturing) (NNP yourself))
    (VP (VBZ is) (RB not)
      (ADJP (JJ healthy)))
    (. .)))

nn(yourself-3, Torturing-2)
nsubj(healthy-6, yourself-3)
cop(healthy-6, is-4)
neg(healthy-6, not-5)
root(ROOT-0, healthy-6)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP$ your))
        (VP (VBP are)
          (VP (VBG saying)))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD must)
            (VP (VB torture)
              (NP (PRP yourself))
              (PP (TO to)
                (NP
                  (NP (JJ obey) (NN god) (POS 's))
                  (JJ supposed) (`` ``)
                  (NX (NN word)))))))))
    (. .)))

dobj(saying-4, What-1)
nsubj(saying-4, your-2)
aux(saying-4, are-3)
csubj(is-5, saying-4)
root(ROOT-0, is-5)
complm(torture-9, that-6)
nsubj(torture-9, you-7)
aux(torture-9, must-8)
ccomp(is-5, torture-9)
dobj(torture-9, yourself-10)
amod(god-13, obey-12)
poss(word-17, god-13)
amod(word-17, supposed-15)
prep_to(torture-9, word-17)

(ROOT
  (S ('' '')
    (NP (WP What))
    (ADVP (RB kind)
      (PP (IN of)
        (NP (NN god))))
    (VP (MD would)
      (VP (VB want)
        (NP (DT a) (NN person)
          (S
            (VP (TO to)
              (VP (VB do)
                (NP (DT that))))))))
    (. ?)))

nsubj(want-7, What-2)
advmod(want-7, kind-3)
prep_of(kind-3, god-5)
aux(want-7, would-6)
root(ROOT-0, want-7)
det(person-9, a-8)
dobj(want-7, person-9)
aux(do-11, to-10)
infmod(person-9, do-11)
dobj(do-11, that-12)

(ROOT
  (S
    (NP
      (NP (DT The) (RB only) (JJ logical) (NN conclusion))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB think)
              (PP (IN of)))))))
    (VP (VBZ is)
      (NP (DT a) (JJ cruel) (NN one)))
    (. .)))

det(conclusion-4, The-1)
advmod(conclusion-4, only-2)
amod(conclusion-4, logical-3)
prep_of(think-7, conclusion-4)
nsubj(one-12, conclusion-4)
nsubj(think-7, I-5)
aux(think-7, can-6)
rcmod(conclusion-4, think-7)
cop(one-12, is-9)
det(one-12, a-10)
amod(one-12, cruel-11)
root(ROOT-0, one-12)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (SBAR (IN like)
          (S
            (NP (PRP you))
            (VP (VBP 've)
              (VP (VBN made)
                (S
                  (NP (PRP it))
                  (NP
                    (NP (DT some) (NN sort))
                    (PP (IN of)
                      (NP
                        (NP (`` ``) (NN righteous) (NN test) ('' ''))
                        (PP (IN in)
                          (NP (PRP$ your) (NN mind)))))))))))))
    (: ;)
    (S
      (NP
        (NP (NN something))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP think)
              (SBAR
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP need)
                      (S
                        (VP (TO to)
                          (VP (VB overcome)))))))
                (CC but)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (MD ca) (RB n't)
                      (VP (VB see))))))))))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (NN god))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD would)
                    (VP (VB do)
                      (NP (DT that))
                      (PP (TO to)
                        (NP (DT a) (NN person))))))))
            (VP (VBZ is) (RB n't)
              (ADJP (JJ worth)
                (S
                  (VP (VBG worshiping)
                    (PP (IN in)
                      (NP (DT the) (JJ first) (NN place)))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
mark(made-6, like-3)
nsubj(made-6, you-4)
aux(made-6, 've-5)
advcl('s-2, made-6)
nsubj(sort-9, it-7)
det(sort-9, some-8)
xcomp(made-6, sort-9)
nn(test-13, righteous-12)
prep_of(sort-9, test-13)
poss(mind-17, your-16)
prep_in(test-13, mind-17)
nsubj(is-32, something-19)
nsubj(think-21, you-20)
rcmod(something-19, think-21)
nsubj(need-23, you-22)
xsubj(overcome-25, you-22)
dep(think-21, need-23)
aux(overcome-25, to-24)
xcomp(need-23, overcome-25)
dobj(see-31, what-27)
nsubj(see-31, you-28)
aux(see-31, ca-29)
neg(see-31, n't-30)
dep(think-21, see-31)
conj_but(need-23, see-31)
parataxis('s-2, is-32)
complm(worth-45, that-33)
det(god-35, a-34)
nsubj(do-38, god-35)
nsubj(worth-45, god-35)
aux(do-38, would-37)
rcmod(god-35, do-38)
dobj(do-38, that-39)
det(person-42, a-41)
prep_to(do-38, person-42)
cop(worth-45, is-43)
neg(worth-45, n't-44)
ccomp(is-32, worth-45)
dep(worth-45, worshiping-46)
det(place-50, the-48)
amod(place-50, first-49)
prep_in(worshiping-46, place-50)

