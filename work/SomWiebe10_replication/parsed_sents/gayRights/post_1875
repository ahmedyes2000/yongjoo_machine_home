(ROOT
  (S
    (VP (VB Replace)
      (NP
        (NP (DT the) (NN word) (`` ``) (NN marriage) ('' ''))
        (PP (IN in)
          (NP (NN government) (NNS documents))))
      (PP (IN with)
        (NP (DT the) (NN word) (`` ``) (JJ civil) (NN union) ('' ''))))
    (, ,)
    (NP (NNP ta) (NNP da))
    (. !)))

root(ROOT-0, Replace-1)
det(marriage-5, the-2)
nn(marriage-5, word-3)
dobj(Replace-1, marriage-5)
nn(documents-9, government-8)
prep_in(marriage-5, documents-9)
det(union-15, the-11)
nn(union-15, word-12)
amod(union-15, civil-14)
prep_with(Replace-1, union-15)
nn(da-19, ta-18)
dep(Replace-1, da-19)

(ROOT
  (S
    (NP (DT The) (NN government))
    (ADVP (RB then))
    (VP
      (ADVP (RB only))
      (VBZ deals)
      (PP (IN with)
        (NP
          (NP (JJ civil) (NNS unions))
          (PP (IN between)
            (NP (CD two)))))
      (S
        (VP (VBG consenting)
          (NP
            (NP (NNS adults))
            (PP (IN of)
              (NP (DT any) (NN gender)))))))
    (. .)))

det(government-2, The-1)
nsubj(deals-5, government-2)
advmod(deals-5, then-3)
advmod(deals-5, only-4)
root(ROOT-0, deals-5)
amod(unions-8, civil-7)
prep_with(deals-5, unions-8)
prep_between(unions-8, two-10)
xcomp(deals-5, consenting-11)
dobj(consenting-11, adults-12)
det(gender-15, any-14)
prep_of(adults-12, gender-15)

(ROOT
  (S ('' '')
    (S
      (NP (NNP Society))
      (VP (VBZ has)
        (S
          (VP (TO to)
            (VP (VB change))))))
    (CC and)
    (S
      (NP
        (NP (PRP we))
        (PP (IN as)
          (NP (JJ rational) (JJ human) (NNS beings))))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB acknowledge)
              (SBAR (IN that)
                (S
                  (SBAR (RB even)
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP we))
                      (VP (VBP do) (RB n't)
                        (VP (VB approve)
                          (PP (IN of)
                            (NP
                              (NP (NN someone) (POS 's))
                              (NNS choices)))))))
                  (NP (PRP they))
                  (VP (VBP have)
                    (NP (DT a) (NN right)
                      (S
                        (VP (TO to)
                          (VP (VB make)
                            (NP (PRP them))))))))))))))
    (. .)))

nsubj(has-3, Society-2)
xsubj(change-5, Society-2)
root(ROOT-0, has-3)
aux(change-5, to-4)
xcomp(has-3, change-5)
nsubj(have-12, we-7)
xsubj(acknowledge-14, we-7)
amod(beings-11, rational-9)
amod(beings-11, human-10)
prep_as(we-7, beings-11)
conj_and(has-3, have-12)
aux(acknowledge-14, to-13)
xcomp(have-12, acknowledge-14)
complm(have-27, that-15)
advmod(approve-21, even-16)
advmod(approve-21, when-17)
nsubj(approve-21, we-18)
aux(approve-21, do-19)
neg(approve-21, n't-20)
dep(have-27, approve-21)
poss(choices-25, someone-23)
prep_of(approve-21, choices-25)
nsubj(have-27, they-26)
ccomp(acknowledge-14, have-27)
det(right-29, a-28)
dobj(have-27, right-29)
aux(make-31, to-30)
infmod(right-29, make-31)
dobj(make-31, them-32)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB accept)
            (SBAR (IN that)
              (S
                (NP (DT all) (NNS humans))
                (VP (VBP are)
                  (VP (VBN entitled)
                    (S
                      (VP (TO to)
                        (VP (VB equal)
                          (NP (NN treatment))
                          (PP (IN under)
                            (NP (DT the) (NN law))))))))))))))
    (. .)))

nsubj(have-2, We-1)
xsubj(accept-4, We-1)
root(ROOT-0, have-2)
aux(accept-4, to-3)
xcomp(have-2, accept-4)
complm(entitled-9, that-5)
det(humans-7, all-6)
nsubjpass(entitled-9, humans-7)
xsubj(equal-11, humans-7)
auxpass(entitled-9, are-8)
ccomp(accept-4, entitled-9)
aux(equal-11, to-10)
xcomp(entitled-9, equal-11)
dobj(equal-11, treatment-12)
det(law-15, the-14)
prep_under(equal-11, law-15)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN treated)
          (ADVP (RB differently))
          (PP (IN by)
            (NP
              (NP (DT the) (NN law))
              (PP (RB because) (IN of)
                (NP
                  (NP (PRP$ their) (JJ social) (NN class))
                  (, ,)
                  (NP (PRP$ their) (NN gender))
                  (, ,)
                  (NP (PRP$ their) (JJ sexual) (NNS preferences))
                  (, ,)
                  (NP (PRP$ their) (NN race))
                  (, ,)
                  (CC or)
                  (NP (DT any) (JJ other) (NNS traits))))))
          (SBAR (IN unless)
            (S
              (NP (PRP they))
              (VP (VBP have)
                (PP (IN in)
                  (NP (DT some) (NN way)))
                (VP (VBN harmed)
                  (NP (DT another) (NN person))
                  (PP (IN through)
                    (NP (JJ direct) (NN action)
                      (CC or)
                      (NN inaction))))))))))
    (. .)))

det(one-2, No-1)
nsubjpass(treated-5, one-2)
aux(treated-5, should-3)
auxpass(treated-5, be-4)
root(ROOT-0, treated-5)
advmod(treated-5, differently-6)
det(law-9, the-8)
agent(treated-5, law-9)
poss(class-14, their-12)
amod(class-14, social-13)
prep_because_of(law-9, class-14)
poss(gender-17, their-16)
prep_because_of(law-9, gender-17)
conj_or(class-14, gender-17)
poss(preferences-21, their-19)
amod(preferences-21, sexual-20)
prep_because_of(law-9, preferences-21)
conj_or(class-14, preferences-21)
poss(race-24, their-23)
prep_because_of(law-9, race-24)
conj_or(class-14, race-24)
det(traits-29, any-27)
amod(traits-29, other-28)
prep_because_of(law-9, traits-29)
conj_or(class-14, traits-29)
mark(harmed-36, unless-30)
nsubj(harmed-36, they-31)
aux(harmed-36, have-32)
det(way-35, some-34)
prep_in(harmed-36, way-35)
advcl(treated-5, harmed-36)
det(person-38, another-37)
dobj(harmed-36, person-38)
amod(action-41, direct-40)
prep_through(harmed-36, action-41)
prep_through(harmed-36, inaction-43)
conj_or(action-41, inaction-43)

(ROOT
  (S
    (NP (NNP Marriage))
    (VP (MD would) (RB then)
      (VP (VB be)
        (NP
          (NP (DT a) (NN word))
          (VP (VBN reserved)
            (PP (IN for)
              (NP (NNS individuals)
                (CC and)
                (NNS churches)))
            (S
              (VP (TO to)
                (VP (VB define))))))))
    (. .)))

nsubj(word-6, Marriage-1)
aux(word-6, would-2)
advmod(word-6, then-3)
cop(word-6, be-4)
det(word-6, a-5)
root(ROOT-0, word-6)
partmod(word-6, reserved-7)
prep_for(reserved-7, individuals-9)
prep_for(reserved-7, churches-11)
conj_and(individuals-9, churches-11)
aux(define-13, to-12)
xcomp(reserved-7, define-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN church))
        (VP (VBZ decides)
          (SBAR (IN that)
            (S
              (NP (RB only)
                (NP (DT a) (NN man))
                (CC and)
                (NP (DT a) (NN woman)))
              (VP (MD can)
                (VP (VB marry)
                  (ADVP (RB then)))))))))
    (NP (JJ same) (NN sex) (NNS couples))
    (VP (MD will) (RB not)
      (VP (VB be)
        (VP (VBN recognized)
          (PP (IN as)
            (S
              (VP (VBG being)
                (VP (VBN married)
                  (PP (IN by)
                    (NP
                      (NP (DT that) (NN church)
                        (CC or)
                        (NNS members))
                      (PP (IN of)
                        (NP (DT that) (NN church))))))))))))
    (. .)))

mark(decides-4, If-1)
det(church-3, a-2)
nsubj(decides-4, church-3)
advcl(recognized-21, decides-4)
complm(marry-13, that-5)
advmod(man-8, only-6)
det(man-8, a-7)
nsubj(marry-13, man-8)
det(woman-11, a-10)
conj_and(man-8, woman-11)
nsubj(marry-13, woman-11)
aux(marry-13, can-12)
ccomp(decides-4, marry-13)
advmod(marry-13, then-14)
amod(couples-17, same-15)
nn(couples-17, sex-16)
nsubjpass(recognized-21, couples-17)
aux(recognized-21, will-18)
neg(recognized-21, not-19)
auxpass(recognized-21, be-20)
root(ROOT-0, recognized-21)
auxpass(married-24, being-23)
prepc_as(recognized-21, married-24)
det(church-27, that-26)
agent(married-24, church-27)
agent(married-24, members-29)
conj_or(church-27, members-29)
det(church-32, that-31)
prep_of(church-27, church-32)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD would)
        (ADVP (RB still))
        (VP (VB receive)
          (NP
            (NP (DT the) (JJ same) (NNS benefits))
            (PP (IN of)
              (NP (DT a) (JJ civil) (NN union)))))))
    (PRN (-LRB- -LRB-)
      (S
        (ADVP (RB previously))
        (VP (VBN known)
          (PP (IN by)
            (NP
              (NP (DT the) (NN government))
              (PP (IN as)
                (NP (DT a) (`` ``) (NN marriage) ('' '')))))))
      (-RRB- -RRB-))
    (CC but)
    (S
      (NP
        (NP (DT the) (`` ``) (NN sanctity))
        (PP (IN of)
          (NP (NN marriage) ('' ''))))
      (VP (VBZ is)
        (VP (VBN maintained)
          (PP (IN for)
            (NP
              (NP (NNS groups))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP do) (RB not)
                    (VP (VB approve)
                      (PP (IN of)
                        (NP (JJ same) (NN sex) (NNS couples))))))))))))
    (. .)))

nsubj(receive-4, They-1)
aux(receive-4, would-2)
advmod(receive-4, still-3)
root(ROOT-0, receive-4)
det(benefits-7, the-5)
amod(benefits-7, same-6)
dobj(receive-4, benefits-7)
det(union-11, a-9)
amod(union-11, civil-10)
prep_of(benefits-7, union-11)
advmod(known-14, previously-13)
dep(receive-4, known-14)
det(government-17, the-16)
prep_by(known-14, government-17)
det(marriage-21, a-19)
prep_as(government-17, marriage-21)
det(sanctity-27, the-25)
nsubjpass(maintained-32, sanctity-27)
prep_of(sanctity-27, marriage-29)
auxpass(maintained-32, is-31)
conj_but(receive-4, maintained-32)
prep_for(maintained-32, groups-34)
nsubj(approve-38, groups-34)
aux(approve-38, do-36)
neg(approve-38, not-37)
rcmod(groups-34, approve-38)
amod(couples-42, same-40)
nn(couples-42, sex-41)
prep_of(approve-38, couples-42)

(ROOT
  (S
    (NP (NNP Marriage))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN word))
        (SBAR
          (WHNP (WP$ whose)
            (NP (NN connotation)
              (CC and)
              (NN definition)))
          (S
            (VP (VBP differ)
              (PP (IN from)
                (NP (NN individual)))
              (PP (TO to)
                (NP (NN individual))))))))
    (. .)))

nsubj(word-4, Marriage-1)
cop(word-4, is-2)
det(word-4, a-3)
root(ROOT-0, word-4)
poss(connotation-6, word-4)
nsubj(differ-9, connotation-6)
conj_and(connotation-6, definition-8)
nsubj(differ-9, definition-8)
rcmod(word-4, differ-9)
prep_from(differ-9, individual-11)
prep_to(differ-9, individual-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NN use))
      (PP (IN of)
        (NP
          (NP (DT the) (NN word))
          (PP (IN by)
            (NP (NN government))))))
    (VP (VBZ is)
      (NP
        (NP (NN provocation))
        (PP (IN for)
          (NP (NN misunderstanding)
            (CC and)
            (NN schism)))))
    (. .)))

det(use-2, The-1)
nsubj(provocation-9, use-2)
det(word-5, the-4)
prep_of(use-2, word-5)
prep_by(word-5, government-7)
cop(provocation-9, is-8)
root(ROOT-0, provocation-9)
prep_for(provocation-9, misunderstanding-11)
prep_for(provocation-9, schism-13)
conj_and(misunderstanding-11, schism-13)

(ROOT
  (SQ (MD Will)
    (NP (NNS people))
    (ADVP (RB immediately))
    (VP (VB say) ('' '')
      (S
        (INTJ (UH Wow))
        (, ,)
        (NP (DT the) (NN government))
        (VP (VBZ is) (RB n't)
          (VP (VBG calling)
            (NP (PRP$ your) (NN union))
            (NP (DT a) (NN marriage)))))
      (SBAR (IN so)
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (ADJP (JJ OK)
              (PP (IN with)
                (NP (PRP you))))
            (ADVP (RB now)))
          (, ,) ('' ''))))
    (. ?)))

aux(say-4, Will-1)
nsubj(say-4, people-2)
advmod(say-4, immediately-3)
root(ROOT-0, say-4)
dep(calling-12, Wow-6)
det(government-9, the-8)
nsubj(calling-12, government-9)
aux(calling-12, is-10)
neg(calling-12, n't-11)
ccomp(say-4, calling-12)
poss(union-14, your-13)
dep(calling-12, union-14)
det(marriage-16, a-15)
dobj(calling-12, marriage-16)
mark(OK-20, so-17)
nsubj(OK-20, I-18)
cop(OK-20, 'm-19)
advcl(say-4, OK-20)
prep_with(OK-20, you-22)
advmod(OK-20, now-23)

(ROOT
  (S
    (ADJP (VB No.))
    (. .)))

root(ROOT-0, No.-1)

(ROOT
  (S (CC But)
    (NP (DT that))
    (VP (VBZ 's)
      (ADJP (RB too) (JJ bad)))
    (. .)))

cc(bad-5, But-1)
nsubj(bad-5, that-2)
cop(bad-5, 's-3)
advmod(bad-5, too-4)
root(ROOT-0, bad-5)

(ROOT
  (S
    (NP
      (UCP
        (NP (DT A) (CD hundred))
        (CC and)
        (ADVP (RB fifty))
        (ADVP
          (NP (NNS years))
          (RB ago)))
      (NNS people))
    (VP
      (VP (VBN looked)
        (PP (IN at)
          (NP
            (NP (DT a) (NN freedman))
            (VP (VBG walking)
              (PRT (RP down))
              (NP (DT the) (NN street))))))
      (CC and)
      (VP (VBN said) ('' '')
        (NP (NN Somebody) (NN aught)))
      (S
        (VP (TO to)
          (VP (VB sell)
            (NP (PRP him))))))
    (. .)))

det(hundred-2, A-1)
nn(people-7, hundred-2)
advmod(ago-6, fifty-4)
npadvmod(ago-6, years-5)
conj_and(hundred-2, ago-6)
nn(people-7, ago-6)
nsubj(looked-8, people-7)
nsubj(said-17, people-7)
xsubj(sell-22, people-7)
root(ROOT-0, looked-8)
det(freedman-11, a-10)
prep_at(looked-8, freedman-11)
partmod(freedman-11, walking-12)
prt(walking-12, down-13)
det(street-15, the-14)
dobj(walking-12, street-15)
conj_and(looked-8, said-17)
nn(aught-20, Somebody-19)
dobj(said-17, aught-20)
aux(sell-22, to-21)
xcomp(looked-8, sell-22)
dobj(sell-22, him-23)

