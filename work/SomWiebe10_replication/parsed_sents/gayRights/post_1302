(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD said)
        (SBAR
          (S
            (NP (PRP she))
            (VP (MD should) (RB not)
              (VP (VB accuse)
                (NP
                  (NP (DT the) (NN country))
                  (PP (IN of)
                    (NP (NN oppression))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBG pointing)
          (PRT (RP out))
          (SBAR (IN that)
            (S
              (NP (PRP$ our) (NN country))
              (VP (VBZ has)
                (NP
                  (NP (DT a) (NN history))
                  (PP (IN of)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(said-2, You-1)
root(ROOT-0, said-2)
nsubj(accuse-6, she-3)
aux(accuse-6, should-4)
neg(accuse-6, not-5)
ccomp(said-2, accuse-6)
det(country-8, the-7)
dobj(accuse-6, country-8)
prep_of(country-8, oppression-10)
nsubj(pointing-14, I-12)
aux(pointing-14, was-13)
conj_and(said-2, pointing-14)
prt(pointing-14, out-15)
complm(has-19, that-16)
poss(country-18, our-17)
nsubj(has-19, country-18)
ccomp(pointing-14, has-19)
det(history-21, a-20)
dobj(has-19, history-21)
prep_of(history-21, it-23)

(ROOT
  (S (CC And)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBD said)
          (SBAR (RB even) (IN though)
            (S
              (NP (JJ past) (NN oppression))
              (VP (MD may)
                (VP (VB have)
                  (VP (VBN been)
                    (ADJP (JJR worse))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does) (RB not)
      (VP (VB take)
        (PRT (RP away))
        (PP (IN from)
          (NP (DT the) (NN oppression)))
        (ADVP (RB now))))
    (. .)))

cc(take-17, And-1)
mark(said-4, as-2)
nsubj(said-4, I-3)
advcl(take-17, said-4)
advmod(worse-12, even-5)
dep(worse-12, though-6)
amod(oppression-8, past-7)
nsubj(worse-12, oppression-8)
aux(worse-12, may-9)
aux(worse-12, have-10)
cop(worse-12, been-11)
ccomp(said-4, worse-12)
nsubj(take-17, it-14)
aux(take-17, does-15)
neg(take-17, not-16)
root(ROOT-0, take-17)
det(oppression-21, the-20)
prep_away_from(take-17, oppression-21)
advmod(take-17, now-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD had)
          (NP (DT a)
            (ADJP (JJ true)
              (CC or)
              (JJ false))
            (NN question)))))
    (, ,) (`` ``)
    (VP (VBZ Is)
      (NP
        (NP (NNP America))
        (PP (VBN based)
          (PP (IN on)
            (NP (NN majority) (NNS rules))))))
    (. ?)))

mark(had-3, If-1)
nsubj(had-3, you-2)
advcl(America-12, had-3)
det(question-8, a-4)
amod(question-8, true-5)
conj_or(true-5, false-7)
amod(question-8, false-7)
dobj(had-3, question-8)
cop(America-12, Is-11)
root(ROOT-0, America-12)
prepc_based_on(America-12, on-14)
nn(rules-16, majority-15)
pobj(America-12, rules-16)

(ROOT
  (S
    (ADVP (RB ''))
    (, ,)
    (NP (DT the) (NN answer))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ false))))
    (. .)))

det(answer-4, the-3)
nsubj(false-7, answer-4)
aux(false-7, would-5)
cop(false-7, be-6)
root(ROOT-0, false-7)

(ROOT
  (S
    (NP (DT The) (NN system))
    (VP (VBZ is)
      (VP (VBN set)
        (PRT (RP up))
        (PP (IN with)
          (S
            (NP
              (NP (NN majority) (NNS rules)
                (CC and)
                (NN minority) (NNS rights))
              (PP (IN with)
                (NP (DT the) (NN latter))))
            (RB not)
            (VP (VBG being)
              (NP (DT an) (NN afterthought)))))))
    (. .)))

det(system-2, The-1)
nsubjpass(set-4, system-2)
auxpass(set-4, is-3)
root(ROOT-0, set-4)
prt(set-4, up-5)
nn(rules-8, majority-7)
nsubj(afterthought-18, rules-8)
nn(rights-11, minority-10)
conj_and(rules-8, rights-11)
nsubj(afterthought-18, rights-11)
det(latter-14, the-13)
prep_with(rules-8, latter-14)
neg(afterthought-18, not-15)
cop(afterthought-18, being-16)
det(afterthought-18, an-17)
prepc_with(set-4, afterthought-18)

(ROOT
  (S
    (NP (DT The) (NNS founders))
    (ADVP (RB specifically))
    (VP (VBD set)
      (NP (PRP it))
      (ADVP (RB up) (DT that) (NN way))
      (S
        (VP (TO to)
          (VP (VB avoid)
            (NP
              (NP (DT the) (NN kind))
              (PP (IN of)
                (NP (NN oppression))))
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (VBD experienced)
                  (PP (IN in)
                    (NP (NNP Great) (NNP Britain))))))))))
    (. .)))

det(founders-2, The-1)
nsubj(set-4, founders-2)
xsubj(avoid-10, founders-2)
advmod(set-4, specifically-3)
root(ROOT-0, set-4)
dobj(set-4, it-5)
advmod(set-4, up-6)
dep(up-6, that-7)
dep(up-6, way-8)
aux(avoid-10, to-9)
xcomp(set-4, avoid-10)
det(kind-12, the-11)
dobj(avoid-10, kind-12)
prep_of(kind-12, oppression-14)
complm(experienced-17, that-15)
nsubj(experienced-17, they-16)
ccomp(avoid-10, experienced-17)
nn(Britain-20, Great-19)
prep_in(experienced-17, Britain-20)

(ROOT
  (S
    (NP (DT The) (NN majority))
    (VP (VBZ does) (RB not)
      (VP (VB have)
        (NP (DT the) (JJ legal) (NN right)
          (S
            (VP (TO to)
              (VP (VB oppress)
                (NP (DT the) (NN minority))))))))
    (. .)))

det(majority-2, The-1)
nsubj(have-5, majority-2)
aux(have-5, does-3)
neg(have-5, not-4)
root(ROOT-0, have-5)
det(right-8, the-6)
amod(right-8, legal-7)
dobj(have-5, right-8)
aux(oppress-10, to-9)
infmod(right-8, oppress-10)
det(minority-12, the-11)
dobj(oppress-10, minority-12)

(ROOT
  (S
    (ADVP (RB Morally))
    (NP (PRP I))
    (ADVP (RB strongly))
    (VP (VBP disagree)
      (PP (IN with)
        (NP (PRP you)))
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ oppressed) (NN minority))
          (VP (MD should)
            (ADVP (RB just))
            (VP
              (VP (`` ``) (VB get)
                (PP (IN over)
                  (NP (PRP it))))
              (CC or)
              (VP (VB move)
                (PP (TO to)
                  (NP (DT another) (NN country)))))))))
    (. .)))

advmod(disagree-4, Morally-1)
nsubj(disagree-4, I-2)
advmod(disagree-4, strongly-3)
root(ROOT-0, disagree-4)
prep_with(disagree-4, you-6)
complm(get-14, that-7)
det(minority-10, the-8)
amod(minority-10, oppressed-9)
nsubj(get-14, minority-10)
nsubj(move-18, minority-10)
aux(get-14, should-11)
advmod(get-14, just-12)
ccomp(disagree-4, get-14)
prep_over(get-14, it-16)
ccomp(disagree-4, move-18)
conj_or(get-14, move-18)
det(country-21, another-20)
prep_to(move-18, country-21)

(ROOT
  (S ('' '')
    (NP (RB Should) (DT the) (NNS slaves))
    (VP (VBP have)
      (ADVP (RB just))
      (VP (VBN gotten)
        (PP (IN over)
          (NP (PRP it)))))
    (. ?)))

advmod(slaves-4, Should-2)
det(slaves-4, the-3)
nsubj(gotten-7, slaves-4)
aux(gotten-7, have-5)
advmod(gotten-7, just-6)
root(ROOT-0, gotten-7)
prep_over(gotten-7, it-9)

(ROOT
  (S (CC But)
    (PP (IN of)
      (NP (NN course)))
    (NP (NNS morals))
    (VP (VBP are)
      (NP
        (NP (NNS opinions))
        (SBAR (IN so)
          (S
            (NP
              (NP (DT neither))
              (PP (IN of)
                (NP (PRP us))))
            (VP (VBZ is)
              (ADJP (JJ right)))))))
    (. .)))

cc(opinions-6, But-1)
prep_of(opinions-6, course-3)
nsubj(opinions-6, morals-4)
cop(opinions-6, are-5)
root(ROOT-0, opinions-6)
mark(right-12, so-7)
nsubj(right-12, neither-8)
prep_of(neither-8, us-10)
cop(right-12, is-11)
dep(opinions-6, right-12)

(ROOT
  (S
    (ADVP (RB Legally))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP you))
    (VP (MD could) (RB n't)
      (VP (VB be)
        (ADJP (RBR more) (JJ incorrect))))
    (. .)))

advmod(incorrect-10, Legally-1)
advmod(incorrect-10, however-3)
nsubj(incorrect-10, you-5)
aux(incorrect-10, could-6)
neg(incorrect-10, n't-7)
cop(incorrect-10, be-8)
advmod(incorrect-10, more-9)
root(ROOT-0, incorrect-10)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (VP (VBD failed)
      (S
        (VP (TO to)
          (VP (VB respond)
            (PP (TO to)
              (NP (DT that) (NN point)))
            (, ,)
            (ADVP (RB typically))))))
    (. .)))

cc(failed-3, But-1)
nsubj(failed-3, you-2)
xsubj(respond-5, you-2)
root(ROOT-0, failed-3)
aux(respond-5, to-4)
xcomp(failed-3, respond-5)
det(point-8, that-7)
prep_to(respond-5, point-8)
advmod(respond-5, typically-10)

(ROOT
  (S
    (NP
      (NP (DT No) (NN everything))
      (PP (IN in)
        (NP (DT that) (NN video))))
    (VP (VBZ is) (RB not)
      (ADJP (JJ true)))
    (. .)))

det(everything-2, No-1)
nsubj(true-8, everything-2)
det(video-5, that-4)
prep_in(everything-2, video-5)
cop(true-8, is-6)
neg(true-8, not-7)
root(ROOT-0, true-8)

(ROOT
  (S
    (NP (NNP Proposition) (CD 8))
    (VP (VBD had)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP (NNS schools)
                  (CC or)
                  (NNS children))))))))
    (. .)))

nsubj(had-3, Proposition-1)
num(Proposition-1, 8-2)
root(ROOT-0, had-3)
dobj(had-3, nothing-4)
aux(do-6, to-5)
infmod(nothing-4, do-6)
prep_with(do-6, schools-8)
prep_with(do-6, children-10)
conj_or(schools-8, children-10)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBD said)
          (PP (IN in)
            (NP (DT another) (JJ recent) (NN post)))
          (, ,)
          (PP (IN under)
            (NP (NNP California))))))
    (NP (NN law) (NNS parents))
    (VP (MD can)
      (VP (VB remove)
        (NP (PRP$ their) (NNS children))
        (PP (IN from)
          (NP (DT any) (NN health)
            (CC or)
            (NN family) (NN lesson)))))
    (. .)))

mark(said-3, As-1)
nsubj(said-3, I-2)
advcl(remove-14, said-3)
det(post-7, another-5)
amod(post-7, recent-6)
prep_in(said-3, post-7)
prep_under(said-3, California-10)
nn(parents-12, law-11)
nsubj(remove-14, parents-12)
aux(remove-14, can-13)
root(ROOT-0, remove-14)
poss(children-16, their-15)
dobj(remove-14, children-16)
det(lesson-22, any-18)
nn(lesson-22, health-19)
conj_or(health-19, family-21)
nn(lesson-22, family-21)
prep_from(remove-14, lesson-22)

(ROOT
  (S
    (NP (NNP Proposition) (CD 8))
    (VP (VBD did) (RB not)
      (ADVP (RB even))
      (VP (VB mention)
        (NP
          (NP (NNS kids))
          (CC or)
          (NP (NN adoption)
            (CC or)
            (NN education)))))
    (. .)))

nsubj(mention-6, Proposition-1)
num(Proposition-1, 8-2)
aux(mention-6, did-3)
neg(mention-6, not-4)
advmod(mention-6, even-5)
root(ROOT-0, mention-6)
dobj(mention-6, kids-7)
dobj(mention-6, adoption-9)
conj_or(kids-7, adoption-9)
conj_or(kids-7, education-11)
conj_or(adoption-9, education-11)

(ROOT
  (S ('' '')
    (PP (IN In)
      (NP
        (NP (DT a) (NN democracy))
        (SBAR (IN if)
          (S
            (NP (DT the) (NN majority))
            (VP (VBP believe)
              (NP (DT that) (NN something)))))))
    (VP (VBZ is)
      (ADJP (JJ wrong) (RB then)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ fair)))))))
    (. .)))

det(democracy-4, a-3)
prep_in(wrong-12, democracy-4)
mark(believe-8, if-5)
det(majority-7, the-6)
nsubj(believe-8, majority-7)
dep(democracy-4, believe-8)
det(something-10, that-9)
dobj(believe-8, something-10)
cop(wrong-12, is-11)
root(ROOT-0, wrong-12)
advmod(wrong-12, then-13)
nsubj(fair-16, it-14)
cop(fair-16, is-15)
dep(wrong-12, fair-16)

(ROOT
  (S
    (NP (DT The) (NN minority))
    (VP (MD can)
      (VP
        (VP (VB get)
          (PRT (RP over))
          (NP (PRP it)))
        (CC or)
        (VP (VB move)
          (PP (TO to)
            (NP (DT another) (NN country))))))
    (. .)))

det(minority-2, The-1)
nsubj(get-4, minority-2)
nsubj(move-8, minority-2)
aux(get-4, can-3)
root(ROOT-0, get-4)
prt(get-4, over-5)
dobj(get-4, it-6)
conj_or(get-4, move-8)
det(country-11, another-10)
prep_to(move-8, country-11)

(ROOT
  (S ('' '')
    (NP (NNP Once))
    (ADVP (RB again))
    (VP
      (ADVP (PRP you))
      (VBP demonstrate)
      (NP
        (NP (PRP$ your) (JJ complete) (NN lack))
        (PP (IN of)
          (NP
            (NP (NN understanding))
            (PP (IN of)
              (NP (DT the) (NNP Constitution)))))))
    (. .)))

nsubj(demonstrate-5, Once-2)
advmod(demonstrate-5, again-3)
advmod(demonstrate-5, you-4)
root(ROOT-0, demonstrate-5)
poss(lack-8, your-6)
amod(lack-8, complete-7)
dobj(demonstrate-5, lack-8)
prep_of(lack-8, understanding-10)
det(Constitution-13, the-12)
prep_of(understanding-10, Constitution-13)

