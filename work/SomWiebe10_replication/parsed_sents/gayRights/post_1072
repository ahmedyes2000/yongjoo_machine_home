(ROOT
  (S (`` ``)
    (ADVP (RB then))
    (NP (PRP I))
    (VP (VBP dare)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP (VB tell)
            (NP (DT that))
            (PP (TO to)
              (NP (NNP Elton) (NNP John)))))))
    (. .)))

advmod(dare-4, then-2)
nsubj(dare-4, I-3)
root(ROOT-0, dare-4)
nsubj(tell-7, you-5)
aux(tell-7, to-6)
xcomp(dare-4, tell-7)
dobj(tell-7, that-8)
nn(John-11, Elton-10)
prep_to(tell-7, John-11)

(ROOT
  (S
    (NP (NNP PS) (NNP Id))
    (VP (VBP stand)
      (PRT (RP back))
      (NP (DT a) (JJ few) (NNS feet))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBD told)
            (NP (PRP him))
            (SBAR (RB so) (IN if)
              (S
                (NP (PRP I))
                (VP (VBD was)
                  (NP (PRP you)))))))))
    (. .)))

nn(Id-2, PS-1)
nsubj(stand-3, Id-2)
root(ROOT-0, stand-3)
prt(stand-3, back-4)
det(feet-7, a-5)
amod(feet-7, few-6)
dobj(stand-3, feet-7)
advmod(told-10, when-8)
nsubj(told-10, I-9)
advcl(stand-3, told-10)
dobj(told-10, him-11)
advmod(you-16, so-12)
dep(you-16, if-13)
nsubj(you-16, I-14)
cop(you-16, was-15)
dep(told-10, you-16)

(ROOT
  (S
    (NP (PDT All) (DT the) (NNS cases))
    (ADVP (RB loudly))
    (VP (VBD trumpeted)
      (SBAR (IN as) (`` ``)
        (S
          (NP
            (NP (NNS homosexuals))
            (VP (VBG suing)
              (NP (NNS churches))
              ('' '')
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBP have)
                    (VP (VBN seen)))))))
          (VP (VBP have)
            (VP (VBN turned)
              (PRT (RP out))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (RB quite) (JJ different))
                    (SBAR (IN once)
                      (S
                        (NP (DT the) (JJ full) (NNS facts))
                        (VP (VBP are)
                          (VP (VBN brought)
                            (ADVP (RB forward))))))))))))))
    (. .)))

predet(cases-3, All-1)
det(cases-3, the-2)
nsubj(trumpeted-5, cases-3)
advmod(trumpeted-5, loudly-4)
root(ROOT-0, trumpeted-5)
mark(turned-17, as-6)
nsubj(turned-17, homosexuals-8)
xsubj(different-22, homosexuals-8)
partmod(homosexuals-8, suing-9)
dobj(suing-9, churches-10)
complm(seen-15, that-12)
nsubj(seen-15, I-13)
aux(seen-15, have-14)
ccomp(suing-9, seen-15)
aux(turned-17, have-16)
advcl(trumpeted-5, turned-17)
prt(turned-17, out-18)
aux(different-22, to-19)
cop(different-22, be-20)
advmod(different-22, quite-21)
xcomp(turned-17, different-22)
mark(brought-28, once-23)
det(facts-26, the-24)
amod(facts-26, full-25)
nsubjpass(brought-28, facts-26)
auxpass(brought-28, are-27)
advcl(different-22, brought-28)
advmod(brought-28, forward-29)

(ROOT
  (S
    (PP (IN As)
      (NP (DT an) (NN example)))
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB point)
        (PP (TO to)
          (NP (DT the) (NN case)))
        (SBAR
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT a) (JJ homosexual) (NN couple))
              (VP (VBD sued)
                (NP (DT a) (NN church))
                (PP (IN over)
                  (NP
                    (NP (DT the) (NN use))
                    (PP (IN of)
                      (NP (PRP$ their) (NN pavilion))))))))
          (: ...)
          (SBAR (IN that)
            (S
              (S
                (NP (NN pavilion))
                (VP (VBD was)
                  (VP (VBN rented)
                    (PRT (RP out))
                    (PP (TO to)
                      (NP
                        (NP (DT those))
                        (PP (IN outside)
                          (NP (DT the) (NN church))))))))
              (, ,)
              (CC and)
              (S
                (ADVP (RB thus))
                (S
                  (VP (VBG barring)
                    (NP (NNS homosexuals))))
                (VP (VBD was)
                  (NP
                    (NP (DT an) (NN act))
                    (PP (IN of)
                      (NP (NN discrimination))))))))
          (: ...)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (MD would)
                (VP (VB have)
                  (VP (VBN happened)
                    (SBAR (IN if)
                      (S
                        (NP (DT the) (NN church))
                        (VP (VBD had)
                          (VP (VBN refused)
                            (S
                              (VP (TO to)
                                (VP (VB marry)
                                  (NP (DT a) (JJ mixed) (NN race) (NN couple)))))))))))))))))
    (. .)))

det(example-3, an-2)
prep_as(point-6, example-3)
nsubj(point-6, I-4)
aux(point-6, 'll-5)
root(ROOT-0, point-6)
det(case-9, the-8)
prep_to(point-6, case-9)
advmod(sued-14, where-10)
det(couple-13, a-11)
amod(couple-13, homosexual-12)
nsubj(sued-14, couple-13)
dep(point-6, sued-14)
det(church-16, a-15)
dobj(sued-14, church-16)
det(use-19, the-18)
prep_over(sued-14, use-19)
poss(pavilion-22, their-21)
prep_of(use-19, pavilion-22)
dep(rented-27, that-24)
nsubjpass(rented-27, pavilion-25)
auxpass(rented-27, was-26)
dep(sued-14, rented-27)
prt(rented-27, out-28)
prep_to(rented-27, those-30)
det(church-33, the-32)
prep_outside(those-30, church-33)
advmod(act-41, thus-36)
csubj(act-41, barring-37)
dobj(barring-37, homosexuals-38)
cop(act-41, was-39)
det(act-41, an-40)
dep(sued-14, act-41)
conj_and(rented-27, act-41)
prep_of(act-41, discrimination-43)
nsubj(happened-48, which-45)
aux(happened-48, would-46)
aux(happened-48, have-47)
dep(sued-14, happened-48)
mark(refused-53, if-49)
det(church-51, the-50)
nsubj(refused-53, church-51)
xsubj(marry-55, church-51)
aux(refused-53, had-52)
advcl(happened-48, refused-53)
aux(marry-55, to-54)
xcomp(refused-53, marry-55)
det(couple-59, a-56)
amod(couple-59, mixed-57)
nn(couple-59, race-58)
dobj(marry-55, couple-59)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP$ my) (NN spelling))
      (VP (VBZ sucks)
        (ADJP (JJ sorry))))
    ('' '')
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB recommend)
        (S
          (S
            (VP (VBG using)
              (NP (NN firefox))))
          (: ...)
          (S
            (NP (PRP it))
            (VP (VBZ has)
              (NP
                (NP (DT a) (NN spell) (NN checker))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP
                      (VP (VBZ underlines)
                        (NP (JJ misspelled) (NNS words)))
                      (CC and)
                      (VP (VBZ lets)
                        (S
                          (NP (PRP you))
                          (VP (VB correct)
                            (NP (PRP them))
                            (PP (IN by)
                              (S
                                (ADVP (RB right))
                                (VP (VBG clicking)
                                  (PP (IN on)
                                    (NP (PRP them))))))))))))))))))
    (. .)))

poss(spelling-3, my-2)
nsubj(sucks-4, spelling-3)
ccomp(recommend-9, sucks-4)
acomp(sucks-4, sorry-5)
nsubj(recommend-9, I-7)
aux(recommend-9, 'd-8)
root(ROOT-0, recommend-9)
dep(recommend-9, using-10)
dobj(using-10, firefox-11)
nsubj(has-14, it-13)
parataxis(using-10, has-14)
det(checker-17, a-15)
nn(checker-17, spell-16)
dobj(has-14, checker-17)
nsubj(underlines-19, checker-17)
nsubj(lets-23, checker-17)
rcmod(checker-17, underlines-19)
amod(words-21, misspelled-20)
dobj(underlines-19, words-21)
rcmod(checker-17, lets-23)
conj_and(underlines-19, lets-23)
nsubj(correct-25, you-24)
ccomp(lets-23, correct-25)
dobj(correct-25, them-26)
advmod(clicking-29, right-28)
prepc_by(correct-25, clicking-29)
prep_on(clicking-29, them-31)

(ROOT
  (S
    (S
      (NP (NNP Bad) (NNP spelling))
      (VP (VBZ has)
        (ADVP (RB always))
        (VP (VBN been)
          (NP
            (NP (DT a) (NN problem))
            (PP (IN for)
              (NP (PRP me)))))))
    (: ...)
    (S (IN so)
      (NP (PRP I))
      (VP (VBP use)
        (S
          (NP (PRP it))
          (ADJP (RB quite) (RB often)))
        (PRN (-LRB- -LRB-)
          (S
            (NP (PRP I))
            (VP (VBD misspelled)
              (VP (VB recommend)
                (PP (IN above)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP I))
                      (VP (VBD was)
                        (VP (VBG typing)
                          (NP (DT this))))))))))
          (-RRB- -RRB-))))
    (. .)))

nn(spelling-2, Bad-1)
nsubj(problem-7, spelling-2)
aux(problem-7, has-3)
advmod(problem-7, always-4)
cop(problem-7, been-5)
det(problem-7, a-6)
root(ROOT-0, problem-7)
prep_for(problem-7, me-9)
dep(use-13, so-11)
nsubj(use-13, I-12)
parataxis(problem-7, use-13)
nsubj(often-16, it-14)
advmod(often-16, quite-15)
xcomp(use-13, often-16)
nsubj(misspelled-19, I-18)
parataxis(use-13, misspelled-19)
dep(misspelled-19, recommend-20)
advmod(typing-25, when-22)
nsubj(typing-25, I-23)
aux(typing-25, was-24)
prepc_above(recommend-20, typing-25)
dobj(typing-25, this-26)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP dont)
      (VP (VB think)
        (NP
          (NP (NNP Im))
          (VP (VBG asking)
            (PP (IN for)
              (S
                (VP (VBG anyting)
                  (ADVP (RBR more) (IN than))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (JJ homosexual) (NNS couples))
                      (VP (VBP say)
                        (S
                          (NP (PRP they))
                          (ADJP (JJ dont))
                          (S
                            (VP
                              (VP (VB have))
                              (CC and)
                              (VP (VB want)
                                (ADVP (RB right))))))))))))))))
    (. ?)))

nsubj(dont-3, I-2)
root(ROOT-0, dont-3)
xcomp(dont-3, think-4)
dobj(think-4, Im-5)
partmod(Im-5, asking-6)
prepc_for(asking-6, anyting-8)
advmod(than-10, more-9)
advmod(anyting-8, than-10)
dobj(say-14, what-11)
amod(couples-13, homosexual-12)
nsubj(say-14, couples-13)
ccomp(anyting-8, say-14)
nsubj(have-17, they-15)
nsubj(want-19, they-15)
dep(have-17, dont-16)
xcomp(say-14, have-17)
xcomp(say-14, want-19)
conj_and(have-17, want-19)
advmod(want-19, right-20)

(ROOT
  (S
    (S
      (INTJ (`` ``) (UH Yes))
      (NP (PRP you))
      (VP (VBP are)))
    (: ...)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (ADJP (JJ polygamy))))
    (. .)))

dep(are-4, Yes-2)
nsubj(are-4, you-3)
root(ROOT-0, are-4)
nsubj(polygamy-8, that-6)
cop(polygamy-8, is-7)
parataxis(are-4, polygamy-8)

(ROOT
  (S
    (NP (NNS Homosexuals))
    (VP (VBP are)
      (VP (VBG asking)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (MD can)
              (VP (VB enter)
                (PP (IN into)
                  (NP (JJ monogamous) (NNS relationships)))))))))
    (. .)))

nsubj(asking-3, Homosexuals-1)
aux(asking-3, are-2)
root(ROOT-0, asking-3)
complm(enter-7, that-4)
nsubj(enter-7, they-5)
aux(enter-7, can-6)
ccomp(asking-3, enter-7)
amod(relationships-10, monogamous-9)
prep_into(enter-7, relationships-10)

(ROOT
  (S ('' '')
    (NP (NNP Why))
    (VP (MD should)
      (ADVP
        (ADVP
          (NP (CD one) (NN relationship) (NN ie))
          (RB homosexual))
        (NP (CD one)))
      (VP (VB have)
        (NP
          (NP (NN precedence))
          (PP (IN over)
            (NP (PRP ours))))))
    (. ?)))

nsubj(have-9, Why-2)
aux(have-9, should-3)
num(ie-6, one-4)
nn(ie-6, relationship-5)
npadvmod(homosexual-7, ie-6)
advmod(have-9, homosexual-7)
dep(homosexual-7, one-8)
root(ROOT-0, have-9)
dobj(have-9, precedence-10)
prep_over(precedence-10, ours-12)

(ROOT
  (S (`` ``)
    (S
      (NP (PRP They))
      (VP (VBP do) (RB n't)
        (VP (VB want)
          (NP (NN precedence)))))
    (: ...)
    (S
      (NP (PRP they))
      (VP (VBP want)
        (NP (NN equality))
        (PP (IN with)
          (NP (NNS heterosexuals)))))
    (. .)))

nsubj(want-5, They-2)
aux(want-5, do-3)
neg(want-5, n't-4)
root(ROOT-0, want-5)
dobj(want-5, precedence-6)
nsubj(want-9, they-8)
parataxis(want-5, want-9)
dobj(want-9, equality-10)
prep_with(want-9, heterosexuals-12)

(ROOT
  (S ('' '')
    (PP (IN Wait)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (ADVP (RB adultry)))))
    (VP (VBZ is)
      (ADJP (JJ wrong)))
    (. ?)))

nsubj(say-4, you-3)
prepc_wait(wrong-7, say-4)
advmod(say-4, adultry-5)
cop(wrong-7, is-6)
root(ROOT-0, wrong-7)

(ROOT
  (S ('' '')
    (S
      (NP (NNP Are) (PRP you))
      (VP (VBG referring)
        (PP (TO to)
          (NP
            (NP
              (NP (DT the) (NN emotion))
              (SBAR (IN that)
                (S
                  (NP
                    (NP (NNP Elton))
                    (CC and)
                    (NP (PRP$ his) (NN partner)))
                  (VP (VBP feel)))))
            (CC or)
            (NP (PRP$ their) (JJ legal) (NN status))))))
    (: ...)
    (S
      (SBAR (IN because)
        (S
          (NP (PRP I))
          (VP (VBP agree)
            (PP (IN with)
              (NP (PRP you)))
            (PP
              (PP (IN on)
                (NP (DT the) (JJ first) (NN count)))
              (PRN (-LRB- -LRB-)
                (ADJP (RB emotionally)
                  (SBAR
                    (S
                      (NP (PRP$ their) (NN bond))
                      (VP (VBZ is)
                        (ADJP (RB as) (JJ tight)
                          (PP (IN as)
                            (NP (DT a) (JJ heterosexual) (NNS couples))))))))
                (-RRB- -RRB-))
              (CC but)
              (PP (IN from)
                (NP (DT a) (JJ legal) (NN standpoint)))))))
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB disagree)
          (PP (IN with)
            (NP (PRP you))))))
    (. .)))

nsubj(referring-4, Are-2)
dep(Are-2, you-3)
root(ROOT-0, referring-4)
det(emotion-7, the-6)
prep_to(referring-4, emotion-7)
dobj(feel-13, emotion-7)
complm(feel-13, that-8)
nsubj(feel-13, Elton-9)
poss(partner-12, his-11)
conj_and(Elton-9, partner-12)
nsubj(feel-13, partner-12)
dep(emotion-7, feel-13)
poss(status-17, their-15)
amod(status-17, legal-16)
prep_to(referring-4, status-17)
conj_or(emotion-7, status-17)
dobj(feel-13, status-17)
mark(agree-21, because-19)
nsubj(agree-21, I-20)
nsubj(agree-21', I-20)
conj_but(agree-21, agree-21')
advcl(disagree-47, agree-21)
advcl(disagree-47, agree-21')
prep_with(agree-21, you-23)
det(count-27, the-25)
amod(count-27, first-26)
prep_on(agree-21, count-27)
dep(agree-21, emotionally-29)
poss(bond-31, their-30)
nsubj(tight-34, bond-31)
cop(tight-34, is-32)
advmod(tight-34, as-33)
dep(emotionally-29, tight-34)
det(couples-38, a-36)
amod(couples-38, heterosexual-37)
prep_as(tight-34, couples-38)
det(standpoint-44, a-42)
amod(standpoint-44, legal-43)
prep_from(agree-21', standpoint-44)
nsubj(disagree-47, I-45)
aux(disagree-47, 'll-46)
parataxis(referring-4, disagree-47)
prep_with(disagree-47, you-49)

(ROOT
  (SBARQ (`` ``)
    (WHADVP (WRB When))
    (SQ (VBP did)
      (NP (PRP I)))
    (. ?)))

advmod(did-3, When-2)
root(ROOT-0, did-3)
nsubj(did-3, I-4)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ polygamous) (NN relationship))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT all) (NNS parties))
          (VP (VBP know)
            (PP (IN about)
              (NP (NN everyone) (RB else))))))
      (, ,))
    (VP (VBP are) (RB not)
      (ADJP (RB morally) (JJ wrong)
        (PP (IN in)
          (NP
            (NP (PRP$ my) (NN view))
            (PRN (-LRB- -LRB-)
              (SBAR (IN though)
                (S
                  (NP (PRP I))
                  (VP (VBP 'm)
                    (PP (IN into)
                      (NP (NN monogamy)))
                    (NP (PRP myself)))))
              (-RRB- -RRB-))))))
    (. .)))

det(relationship-3, A-1)
amod(relationship-3, polygamous-2)
nsubj(wrong-16, relationship-3)
advmod(know-8, where-5)
det(parties-7, all-6)
nsubj(know-8, parties-7)
rcmod(relationship-3, know-8)
prep_about(know-8, everyone-10)
advmod(everyone-10, else-11)
cop(wrong-16, are-13)
neg(wrong-16, not-14)
advmod(wrong-16, morally-15)
root(ROOT-0, wrong-16)
poss(view-19, my-18)
prep_in(wrong-16, view-19)
mark(myself-26, though-21)
nsubj(myself-26, I-22)
cop(myself-26, 'm-23)
prep_into(myself-26, monogamy-25)
dep(view-19, myself-26)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ polygamous) (NN relationship))
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP
            (NP
              (QP (CD one)
                (CC or)
                (JJR more)))
            (PP (IN of)
              (NP (DT the) (NNS people))))
          (VP (VBP do) (RB n't)
            (VP (VB know)
              (PP (IN about)
                (NP (DT the) (NNS others))))))))
    (PRN (-LRB- -LRB-)
      (VP (VB say)
        (NP (DT a) (NN man))
        (S
          (VP
            (VP (VBG cheating)
              (PP (IN on)
                (NP (PRP$ his) (NN wife))))
            (CONJP (CC but)
              (RB not))
            (VP (VBG telling)
              (NP (DT the) (NN woman))
              (SBAR (IN that)
                (S
                  (NP (PRP he))
                  (VP (VBZ is)
                    (PP (IN with)
                      (SBAR (IN that)
                        (S
                          (NP (PRP he))
                          (VP (VBZ is)
                            (VP (VBN married)))))))))))))
      (-RRB- -RRB-))
    (VP (VBZ is)
      (ADVP (RB only))
      (ADJP (JJ immoral)
        (PP (IN for)
          (NP (DT the) (NN person))))
      (S
        (VP (VBG doing)
          (NP (DT the) (VBG lying)))))
    (. .)))

det(relationship-3, A-1)
amod(relationship-3, polygamous-2)
nsubj(immoral-41, relationship-3)
advmod(know-13, where-4)
nsubj(know-13, one-5)
conj_or(one-5, more-7)
quantmod(one-5, more-7)
nsubj(know-13, more-7)
det(people-10, the-9)
prep_of(one-5, people-10)
aux(know-13, do-11)
neg(know-13, n't-12)
rcmod(relationship-3, know-13)
det(others-16, the-15)
prep_about(know-13, others-16)
dep(immoral-41, say-18)
det(man-20, a-19)
dobj(say-18, man-20)
dep(say-18, cheating-21)
poss(wife-24, his-23)
prep_on(cheating-21, wife-24)
dep(say-18, telling-27)
conj_negcc(cheating-21, telling-27)
det(woman-29, the-28)
dobj(telling-27, woman-29)
complm(is-32, that-30)
nsubj(is-32, he-31)
ccomp(telling-27, is-32)
complm(married-37, that-34)
nsubjpass(married-37, he-35)
auxpass(married-37, is-36)
prepc_with(is-32, married-37)
cop(immoral-41, is-39)
advmod(immoral-41, only-40)
root(ROOT-0, immoral-41)
det(person-44, the-43)
prep_for(immoral-41, person-44)
xcomp(immoral-41, doing-45)
dobj(doing-45, the-46)
amod(the-46, lying-47)

(ROOT
  (S ('' '')
    (S (CC And)
      (ADVP
        (ADVP (RB as) (RB far))
        (PP (IN as)
          (NP (PRP$ your) (NN comment))))
      (NP (RB about) (JJ gay) (NNS Christians))
      (VP (VBZ thats)
        (ADJP (RB as) (JJ possible)
          (PP (IN as)
            (NP (DT a)
              (ADJP
                (NP
                  (QP (CD three) (CD hundred))
                  (NN pound))
                (JJ sexy))
              (NN swimsuit) (NN model))))))
    (, ,)
    (NP (DT neither))
    (VP (VBP are)
      (ADJP (JJ suitable)
        (CC nor)
        (JJ possible))
      (, ,)
      (ADJP (JJ sorry)))
    (. .)))

cc(thats-11, And-2)
advmod(far-4, as-3)
advmod(thats-11, far-4)
poss(comment-7, your-6)
prep_as(far-4, comment-7)
advmod(Christians-10, about-8)
amod(Christians-10, gay-9)
nsubj(thats-11, Christians-10)
ccomp(suitable-25, thats-11)
advmod(possible-13, as-12)
acomp(thats-11, possible-13)
det(model-21, a-15)
number(hundred-17, three-16)
num(pound-18, hundred-17)
npadvmod(sexy-19, pound-18)
amod(model-21, sexy-19)
nn(model-21, swimsuit-20)
prep_as(possible-13, model-21)
nsubj(suitable-25, neither-23)
nsubj(possible-27, neither-23)
cop(suitable-25, are-24)
root(ROOT-0, suitable-25)
conj_nor(suitable-25, possible-27)
acomp(suitable-25, sorry-29)

(ROOT
  (S ('' '')
    (PP (IN Though)
      (S
        (NP (PRP it))
        (VP (VBZ 's) (RB not)
          (NP
            (NP (PRP$ my) (NN taste))
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD would) (RB n't)
                  (VP (VB be)
                    (ADJP (RB overly) (JJ surprised))
                    (SBAR (IN if)
                      (S
                        (NP (PRP you))
                        (VP (MD could)
                          (VP (VB find)
                            (NP (DT a) (JJ 300lb) (NN swimsuit) (NN model))
                            (ADVP
                              (NP (DT that) (NN someone))
                              (IN out))
                            (ADVP (RB there))))))))))))))
    (VP (VBD found)
      (ADJP (JJ sexy)))
    (. .)))

nsubj(taste-7, it-3)
cop(taste-7, 's-4)
neg(taste-7, not-5)
poss(taste-7, my-6)
dobj(surprised-13, taste-7)
prepc_though(found-26, taste-7)
nsubj(surprised-13, I-8)
aux(surprised-13, would-9)
neg(surprised-13, n't-10)
cop(surprised-13, be-11)
advmod(surprised-13, overly-12)
rcmod(taste-7, surprised-13)
mark(find-17, if-14)
nsubj(find-17, you-15)
aux(find-17, could-16)
advcl(surprised-13, find-17)
det(model-21, a-18)
amod(model-21, 300lb-19)
nn(model-21, swimsuit-20)
dobj(find-17, model-21)
det(someone-23, that-22)
npadvmod(out-24, someone-23)
advmod(find-17, out-24)
advmod(find-17, there-25)
root(ROOT-0, found-26)
acomp(found-26, sexy-27)

(ROOT
  (FRAG
    (ADVP (RB As)
      (PP (TO to)
        (NP (JJ gay) (NNS Christians))))
    (: ...)))

root(ROOT-0, As-1)
amod(Christians-4, gay-3)
prep_to(As-1, Christians-4)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (DT those))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP identify)
                (S
                  (NP (PRP themselves))
                  (ADJP (RB as) (JJ such)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP
          (NP (DT no) (NN problem))
          (VP (VBG agreeing)
            (PP (IN with)
              (NP (PRP them)))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, those-3)
nsubj(identify-5, those-3)
rcmod(those-3, identify-5)
nsubj(such-8, themselves-6)
advmod(such-8, as-7)
xcomp(identify-5, such-8)
nsubj(have-12, I-11)
conj_and(are-2, have-12)
det(problem-14, no-13)
dobj(have-12, problem-14)
partmod(problem-14, agreeing-15)
prep_with(agreeing-15, them-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP
          (NP (JJ many) (JJ different) (JJ Christian) (NNS factions))
          (PP (IN out)
            (NP (RB there))))
        (: ...)
        (CC and)
        (NP
          (NP (JJ many) (NN claim))
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBP are)
                (NP
                  (NP (DT the) (JJ only) (`` ``) (JJ true) ('' '') (NNS Christians))
                  (, ,)
                  (PP (IN with)
                    (NP
                      (NP (NN everyone) (RB else))
                      (VP (VBG being)
                        (ADJP (JJ wrong)))))))))
          (PRN (-LRB- -LRB-)
            (CC or)
            (ADJP (JJ evil))
            (-RRB- -RRB-)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(factions-6, many-3)
amod(factions-6, different-4)
amod(factions-6, Christian-5)
nsubj(are-2, factions-6)
prep(factions-6, out-7)
pobj(out-7, there-8)
amod(claim-12, many-11)
nsubj(are-2, claim-12)
conj_and(factions-6, claim-12)
complm(Christians-21, that-13)
nsubj(Christians-21, they-14)
cop(Christians-21, are-15)
det(Christians-21, the-16)
amod(Christians-21, only-17)
amod(Christians-21, true-19)
dep(claim-12, Christians-21)
prep_with(Christians-21, everyone-24)
advmod(everyone-24, else-25)
cop(wrong-27, being-26)
partmod(everyone-24, wrong-27)
dep(evil-30, or-29)
dep(claim-12, evil-30)

(ROOT
  (S ('' '')
    (S
      (NP (PRP It))
      (VP (MD should)
        (VP (VB be)
          (ADJP (JJ evident))
          (SBAR (IN that) (IN if)
            (S
              (NP
                (NP (DT the) (NN purpose))
                (PP (IN of)
                  (NP (NN marriage))))
              (VP (VBZ is)
                (S
                  (VP (TO to)
                    (VP (VB attach)
                      (NP (NNS mothers)
                        (CC and)
                        (NNS fathers))
                      (PP
                        (PP (TO to)
                          (NP (PRP$ their) (NNS children)))
                        (CC and)
                        (PP (TO to)
                          (NP (CD one) (DT another)))))))))))))
    (, ,) (RB then)
    (S
      (NP (DT the) (JJ dual) (NN gender) (NN requirement))
      (VP (VBZ is)
        (ADJP (RB perfectly) (JJ permissible))))
    (. .)))

nsubj(evident-5, It-2)
aux(evident-5, should-3)
cop(evident-5, be-4)
root(ROOT-0, evident-5)
complm(is-12, that-6)
dep(is-12, if-7)
det(purpose-9, the-8)
nsubj(is-12, purpose-9)
prep_of(purpose-9, marriage-11)
ccomp(evident-5, is-12)
aux(attach-14, to-13)
xcomp(is-12, attach-14)
dobj(attach-14, mothers-15)
dobj(attach-14, fathers-17)
conj_and(mothers-15, fathers-17)
poss(children-20, their-19)
prep_to(attach-14, children-20)
prep_to(attach-14, one-23)
conj_and(children-20, one-23)
dep(one-23, another-24)
advmod(evident-5, then-26)
det(requirement-30, the-27)
amod(requirement-30, dual-28)
nn(requirement-30, gender-29)
nsubj(permissible-33, requirement-30)
cop(permissible-33, is-31)
advmod(permissible-33, perfectly-32)
ccomp(evident-5, permissible-33)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBG focusing)
              (PP (IN on)
                (NP (NN marriage)))
              (SBAR (IN as)
                (S
                  (NP (PRP it))
                  (VP (VBZ relates)
                    (PP (TO to)
                      (S
                        (VP (VBG having)
                          (NP
                            (NP (NNS children))
                            (PRN (-LRB- -LRB-)
                              (NP
                                (NP (DT either))
                                (PP
                                  (PP (IN through)
                                    (NP
                                      (NP (DT some))
                                      (ADJP (JJ nod-nod) (, ,) (JJ wink-wink))))
                                  (: ...)
                                  (CC or)
                                  (PP (IN via)
                                    (NP (NN adoption)))))
                              (-RRB- -RRB-))))))))))))))
    (. .)))

nsubj(seem-3, You-2)
xsubj(focusing-6, You-2)
root(ROOT-0, seem-3)
aux(focusing-6, to-4)
aux(focusing-6, be-5)
xcomp(seem-3, focusing-6)
prep_on(focusing-6, marriage-8)
mark(relates-11, as-9)
nsubj(relates-11, it-10)
advcl(focusing-6, relates-11)
prepc_to(relates-11, having-13)
dobj(having-13, children-14)
dep(children-14, either-16)
dep(children-14, either-16')
conj_or(either-16, either-16')
prep_through(either-16, some-18)
amod(wink-wink-21, nod-nod-19)
amod(some-18, wink-wink-21)
prep_via(either-16', adoption-25)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN state))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (JJ same) (NN sex) (NNS unions))
            (VP (VBD \/)
              (SBAR
                (S
                  (NP (NNS marriages))
                  (VP (VBP are) (RB not)
                    (VP (VBN recognized))))))))))
    (NP (PRP they))
    (VP (VBP do) (RB not)
      (VP (VB have)
        (NP
          (NP (DT the) (JJ same) (NNS rights))
          (PP (IN as)
            (NP (DT a) (JJ married) (NN couple))))))
    (. .)))

det(state-3, a-2)
prep_in(have-16, state-3)
advmod(\/-8, where-4)
amod(unions-7, same-5)
nn(unions-7, sex-6)
nsubj(\/-8, unions-7)
rcmod(state-3, \/-8)
nsubjpass(recognized-12, marriages-9)
auxpass(recognized-12, are-10)
neg(recognized-12, not-11)
ccomp(\/-8, recognized-12)
nsubj(have-16, they-13)
aux(have-16, do-14)
neg(have-16, not-15)
root(ROOT-0, have-16)
det(rights-19, the-17)
amod(rights-19, same-18)
dobj(have-16, rights-19)
det(couple-23, a-21)
amod(couple-23, married-22)
prep_as(rights-19, couple-23)

(ROOT
  (SQ
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (JJ many) (NNS couples))
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBP are)
                  (VP (VBN married)))
                (CC but)
                (VP (VBP do) (RB not)
                  (VP (VB have)
                    (NP (NNS children))))))))))
    (, ,)
    (SQ (VBZ is)
      (NP (PRP$ their) (NN marriage))
      (ADVP (RB somehow))
      (ADJP (JJ invalid)))
    (. ?)))

expl(are-2, There-1)
dep(invalid-18, are-2)
amod(couples-4, many-3)
nsubj(are-2, couples-4)
nsubjpass(married-7, couples-4)
nsubj(have-11, couples-4)
auxpass(married-7, are-6)
rcmod(couples-4, married-7)
aux(have-11, do-9)
neg(have-11, not-10)
rcmod(couples-4, have-11)
conj_but(married-7, have-11)
dobj(have-11, children-12)
cop(invalid-18, is-14)
poss(marriage-16, their-15)
nsubj(invalid-18, marriage-16)
advmod(invalid-18, somehow-17)
root(ROOT-0, invalid-18)

(ROOT
  (S (CC And)
    (NP (DT that))
    (VP (VBZ is)
      (NP (DT the) (NN question)))
    (: ...)))

cc(question-5, And-1)
nsubj(question-5, that-2)
cop(question-5, is-3)
det(question-5, the-4)
root(ROOT-0, question-5)

(ROOT
  (SQ (NNP Should)
    (NP (JJ homosexual) (NNS couples))
    (VP (VB be)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB enjoy)
              (NP (DT the) (JJ same) (NNS rights))
              (PP (IN as)
                (NP (JJ heterosexual) (NNS ones))))))))
    (. .)))

dep(able-5, Should-1)
amod(couples-3, homosexual-2)
nsubj(able-5, couples-3)
cop(able-5, be-4)
root(ROOT-0, able-5)
aux(enjoy-7, to-6)
xcomp(able-5, enjoy-7)
det(rights-10, the-8)
amod(rights-10, same-9)
dobj(enjoy-7, rights-10)
amod(ones-13, heterosexual-12)
prep_as(enjoy-7, ones-13)

(ROOT
  (S
    (S
      (PP (TO To)
        (NP (PRP me)))
      (NP (DT the) (NN answer))
      (VP (VBZ is)
        (ADVP (RB easily))
        (NP (UH yes))))
    (: ...)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP they))
          (VP (VBP have)
            (NP
              (NP (JJ identical) (NNS rights))
              (ADVP (RB then))
              (SBAR
                (WHADVP (WRB why))
                (S
                  (VP (VBZ does)
                    (NP (DT the) (NN name))
                    (PP (IN at)
                      (NP
                        (NP (DT the) (NN top))
                        (PP (IN of)
                          (NP (DT the) (NN form))))))
                  (NP (PRP they))))))))
      (NP (NN sign))
      (VP (VBP need)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ different)))))))
    (. ?)))

prep_to(yes-7, me-2)
det(answer-4, the-3)
nsubj(yes-7, answer-4)
cop(yes-7, is-5)
advmod(yes-7, easily-6)
root(ROOT-0, yes-7)
mark(have-12, if-10)
nsubj(have-12, they-11)
advcl(need-28, have-12)
amod(rights-14, identical-13)
dobj(have-12, rights-14)
advmod(rights-14, then-15)
advmod(does-17, why-16)
rcmod(rights-14, does-17)
det(name-19, the-18)
dobj(does-17, name-19)
det(top-22, the-21)
prep_at(does-17, top-22)
det(form-25, the-24)
prep_of(top-22, form-25)
dep(does-17, they-26)
nsubj(need-28, sign-27)
xsubj(different-31, sign-27)
conj_and(yes-7, need-28)
aux(different-31, to-29)
cop(different-31, be-30)
xcomp(need-28, different-31)

(ROOT
  (SBARQ
    (ADVP (RB Legally))
    (WHNP (WDT that) (NN name))
    (SQ
      (VP (MD would)
        (VP
          (VP (VB be)
            (NP
              (NP (DT the) (JJ only) (NN difference))
              (PP (IN between)
                (NP
                  (NP (JJ Civil) (NNS Unions))
                  (CC and)
                  (NP (NNP Marriage))))))
          (: ...)
          (SBAR (RB so)
            (WHADVP (WRB why))
            (S
              (VP (VBP call)
                (S
                  (NP (PRP it))
                  (ADJP
                    (NP (NN something))
                    (JJ different)))))))))
    (. ?)))

advmod(difference-8, Legally-1)
det(name-3, that-2)
nsubj(difference-8, name-3)
aux(difference-8, would-4)
cop(difference-8, be-5)
det(difference-8, the-6)
amod(difference-8, only-7)
root(ROOT-0, difference-8)
amod(Unions-11, Civil-10)
prep_between(difference-8, Unions-11)
prep_between(difference-8, Marriage-13)
conj_and(Unions-11, Marriage-13)
advmod(call-17, so-15)
advmod(call-17, why-16)
ccomp(difference-8, call-17)
parataxis(difference-8, call-17)
nsubj(different-20, it-18)
npadvmod(different-20, something-19)
xcomp(call-17, different-20)

(ROOT
  (S (`` ``)
    (S
      (NP (DT The) (JJ homosexual) (NN community))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (SBAR (IN if)
              (S
                (NP (NN marriage))
                (VP (VBZ is)
                  (VP (VBN granted)
                    (PP (TO to)
                      (NP (PRP them)))))))
            (NP (PRP they))
            (VP (MD will) (RB not)
              (VP (VB use)
                (S
                  (NP (PRP it))
                  (VP (TO to)
                    (VP
                      (VP (VB sue)
                        (NP (NNS churches)))
                      (CC or)
                      (VP (VB push)
                        (NP (NNS agendas))
                        (PP (IN in)
                          (NP (NNS schools)))))))))))))
    (, ,)
    (CC yet)
    (S
      (NP (PRP they))
      (VP
        (VP (VBP are))
        (CC and)
        (VP (MD will)
          (VP (VB do)
            (NP (RB just) (DT that))))))
    (. .)))

det(community-4, The-2)
amod(community-4, homosexual-3)
nsubj(said-5, community-4)
root(ROOT-0, said-5)
complm(use-16, that-6)
mark(granted-10, if-7)
nsubjpass(granted-10, marriage-8)
auxpass(granted-10, is-9)
advcl(use-16, granted-10)
prep_to(granted-10, them-12)
nsubj(use-16, they-13)
aux(use-16, will-14)
neg(use-16, not-15)
ccomp(said-5, use-16)
nsubj(sue-19, it-17)
nsubj(push-22, it-17)
aux(sue-19, to-18)
xcomp(use-16, sue-19)
dobj(sue-19, churches-20)
xcomp(use-16, push-22)
conj_or(sue-19, push-22)
dobj(push-22, agendas-23)
prep_in(push-22, schools-25)
nsubj(are-29, they-28)
nsubj(do-32, they-28)
conj_yet(said-5, are-29)
aux(do-32, will-31)
conj_yet(said-5, do-32)
conj_and(are-29, do-32)
advmod(that-34, just-33)
dobj(do-32, that-34)

(ROOT
  (NP
    (NP (NNP ''))
    (PRN (-LRB- -LRB-)
      (NP (NNP Citation) (NNP needed))
      (-RRB- -RRB-))
    (PP (IN on)
      (NP (DT that) (NN one)))
    (. .)))

nn(needed-4, Citation-3)
appos(''-1, needed-4)
det(one-8, that-7)
prep_on(''-1, one-8)

