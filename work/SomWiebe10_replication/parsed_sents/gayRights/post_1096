(ROOT
  (S
    (NP
      (NP (DT The) (NN failure))
      (PP (IN of)
        (NP (DT the) (NNS courts))))
    (VP (MD should) (RB not)
      (VP (VB be)
        (NP (DT a) (NN reason)
          (S
            (VP (TO to)
              (VP (VB deny)
                (NP (JJ same) (NN sex) (NNS couples))
                (NP (DT the) (JJ same) (NNS rights)
                  (CC and)
                  (NNS privileges))))))))
    (. .)))

det(failure-2, The-1)
nsubj(reason-10, failure-2)
det(courts-5, the-4)
prep_of(failure-2, courts-5)
aux(reason-10, should-6)
neg(reason-10, not-7)
cop(reason-10, be-8)
det(reason-10, a-9)
root(ROOT-0, reason-10)
aux(deny-12, to-11)
infmod(reason-10, deny-12)
amod(couples-15, same-13)
nn(couples-15, sex-14)
iobj(deny-12, couples-15)
det(rights-18, the-16)
amod(rights-18, same-17)
dobj(deny-12, rights-18)
dobj(deny-12, privileges-20)
conj_and(rights-18, privileges-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NN reason))
      (SBAR
        (S
          (NP (JJ same) (NN sex) (NN marriage))
          (VP (MD should)
            (VP (VB be)
              (VP (VBN legalized)))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB protect)
            (NP
              (NP (DT the) (JJ religious) (NNS freedoms))
              (PP (IN of)
                (NP (NNS others))))))))
    (. .)))

det(reason-2, The-1)
nsubj(is-9, reason-2)
xsubj(protect-11, reason-2)
amod(marriage-5, same-3)
nn(marriage-5, sex-4)
nsubjpass(legalized-8, marriage-5)
aux(legalized-8, should-6)
auxpass(legalized-8, be-7)
rcmod(reason-2, legalized-8)
root(ROOT-0, is-9)
aux(protect-11, to-10)
xcomp(is-9, protect-11)
det(freedoms-14, the-12)
amod(freedoms-14, religious-13)
dobj(protect-11, freedoms-14)
prep_of(freedoms-14, others-16)

(ROOT
  (S
    (NP
      (NP (DT Any) (NN law))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ permits)
            (SBAR
              (S
                (NP (JJ same) (NN sex) (NN marriage))
                (VP (MD should)
                  (ADVP (RB also))
                  (VP (VB include)
                    (NP
                      (NP (NNS provisions))
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBP permit)
                            (S
                              (NP (NNS people))
                              (VP (TO to)
                                (VP (VB exercise)
                                  (NP
                                    (NP (PRP$ their) (JJ own) (NN freedom))
                                    (PP (IN of)
                                      (NP (NN religion))))
                                  (S
                                    (VP (TO to)
                                      (VP (RB not) (VB get)))))))))))))))))))
    (VP (VBD involved)
      (PP (IN with)
        (NP (JJ such) (NNS ceremonies)))
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (PP (IN against)
              (NP (PRP$ their) (NN religion)))))))
    (. .)))

det(law-2, Any-1)
nsubj(permits-4, law-2)
nsubj(involved-25, law-2)
rcmod(law-2, permits-4)
amod(marriage-7, same-5)
nn(marriage-7, sex-6)
nsubj(include-10, marriage-7)
aux(include-10, should-8)
advmod(include-10, also-9)
ccomp(permits-4, include-10)
dobj(include-10, provisions-11)
nsubj(permit-13, provisions-11)
rcmod(provisions-11, permit-13)
nsubj(exercise-16, people-14)
aux(exercise-16, to-15)
xcomp(permit-13, exercise-16)
poss(freedom-19, their-17)
amod(freedom-19, own-18)
dobj(exercise-16, freedom-19)
prep_of(freedom-19, religion-21)
aux(get-24, to-22)
neg(get-24, not-23)
xcomp(exercise-16, get-24)
root(ROOT-0, involved-25)
amod(ceremonies-28, such-27)
prep_with(involved-25, ceremonies-28)
mark(is-31, if-29)
nsubj(is-31, it-30)
advcl(involved-25, is-31)
poss(religion-34, their-33)
prep_against(is-31, religion-34)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (JJ same) (NN sex) (NN marriage))
          (VP (VBZ is)
            (VP (VBN dealt)
              (PP (IN with)
                (PP (IN in)
                  (NP (NNP Canada))))
              (ADVP (RB presently)))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
advmod(dealt-8, how-3)
amod(marriage-6, same-4)
nn(marriage-6, sex-5)
nsubjpass(dealt-8, marriage-6)
auxpass(dealt-8, is-7)
ccomp(is-2, dealt-8)
prep(dealt-8, with-9)
pcomp(with-9, in-10)
prep_in(with-9, Canada-11)
advmod(dealt-8, presently-12)

(ROOT
  (S
    (NP (NNP Noone))
    (VP (VBZ is)
      (VP (VBN forced)
        (S
          (VP (TO to)
            (VP (VB perform)
              (NP (DT a) (JJ same) (NN sex) (NN marriage) (NN ceremony)))))))
    (. .)))

nsubjpass(forced-3, Noone-1)
xsubj(perform-5, Noone-1)
auxpass(forced-3, is-2)
root(ROOT-0, forced-3)
aux(perform-5, to-4)
xcomp(forced-3, perform-5)
det(ceremony-10, a-6)
amod(ceremony-10, same-7)
nn(ceremony-10, sex-8)
nn(ceremony-10, marriage-9)
dobj(perform-5, ceremony-10)

