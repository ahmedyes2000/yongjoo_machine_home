(ROOT
  (S
    (ADVP (RB Aegiltheugly))
    (, ,)
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP want)))))
          (VP (VBZ is)
            (NP
              (NP (JJ equal) (NNS rights))
              (PP (IN under)
                (NP (DT the) (NN law))))))))
    (. .)))

advmod(believe-4, Aegiltheugly-1)
nsubj(believe-4, I-3)
root(ROOT-0, believe-4)
complm(rights-11, that-5)
dobj(want-8, all-6)
nsubj(rights-11, all-6)
nsubj(want-8, they-7)
rcmod(all-6, want-8)
cop(rights-11, is-9)
amod(rights-11, equal-10)
ccomp(believe-4, rights-11)
det(law-14, the-13)
prep_under(rights-11, law-14)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN seen)
        (SBAR
          (WHADVP (WRB how))
          (S (`` ``)
            (S
              (VP
                (VP (VB separate))
                (CC but)
                (VP (VB equal))))
            ('' '')
            (VP (VBD worked)
              (PP (IN in)
                (NP (DT the) (JJ segregated) (NN south))))))))
    (. .)))

nsubj(seen-3, We-1)
aux(seen-3, 've-2)
root(ROOT-0, seen-3)
advmod(worked-10, how-4)
ccomp(worked-10, separate-6)
csubj(worked-10, separate-6)
conj_but(separate-6, equal-8)
ccomp(worked-10, equal-8)
csubj(worked-10, equal-8)
ccomp(seen-3, worked-10)
det(south-14, the-12)
amod(south-14, segregated-13)
prep_in(worked-10, south-14)

(ROOT
  (NP (NNP Michelle)))

root(ROOT-0, Michelle-1)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD did) (RB n't)
      (VP (VB work)))
    (. .)))

nsubj(work-4, It-1)
aux(work-4, did-2)
neg(work-4, n't-3)
root(ROOT-0, work-4)

(ROOT
  (S ('' '')
    (NP (NNP Separate) (NNP ''))
    (VP (MD can)
      (ADVP (RB never))
      (VP (VB be)
        (ADJP (`` ``) (JJ equal) ('' ''))))
    (. .)))

nsubj(equal-8, Separate-2)
aux(equal-8, can-4)
neg(equal-8, never-5)
cop(equal-8, be-6)
root(ROOT-0, equal-8)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB firmly))
    (VP (VBP believe)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN word) (NN marriage))
          (VP (MD can)
            (VP (VB be)
              (VP (VBN replaced)
                (PP (IN by)
                  (NP
                    (NP (NN union))
                    (, ,)
                    (NP (JJ civil) (NN union))
                    (, ,)
                    (CC or)
                    (NP (NN household))))
                (PP (IN in)
                  (NP (JJ legal) (NNS documents)
                    (CC and)
                    (NN law)))))))))
    (. .)))

nsubj(believe-3, I-1)
advmod(believe-3, firmly-2)
root(ROOT-0, believe-3)
complm(replaced-10, that-4)
det(marriage-7, the-5)
nn(marriage-7, word-6)
nsubjpass(replaced-10, marriage-7)
aux(replaced-10, can-8)
auxpass(replaced-10, be-9)
ccomp(believe-3, replaced-10)
agent(replaced-10, union-12)
amod(union-15, civil-14)
agent(replaced-10, union-15)
conj_or(union-12, union-15)
agent(replaced-10, household-18)
conj_or(union-12, household-18)
amod(documents-21, legal-20)
prep_in(replaced-10, documents-21)
prep_in(replaced-10, law-23)
conj_and(documents-21, law-23)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP we))
          (VP (MD should)
            (VP (VB do))))))
    (. .)))

prep_in('s-5, fact-2)
nsubj('s-5, that-4)
root(ROOT-0, 's-5)
dobj(do-9, what-6)
nsubj(do-9, we-7)
aux(do-9, should-8)
ccomp('s-5, do-9)

(ROOT
  (S (RB Then) (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBN registered)
            (PP (IN in)
              (NP (DT that) (NN status)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (NP
        (NP (PDT all) (DT the) (JJ financial) (NNS obligations))
        (CC and)
        (NP (NNS rights)))
      (SBAR (IN that)
        (S
          (NP (RB only) (VBN married) (NNS couples))
          (VP (MD can)
            (VP (VB share)
              (PP (IN in)
                (NP (RB now))))))))
    (. .)))

advmod(have-12, Then-1)
mark(registered-6, if-3)
nsubjpass(registered-6, you-4)
auxpass(registered-6, are-5)
advcl(have-12, registered-6)
det(status-9, that-8)
prep_in(registered-6, status-9)
nsubj(have-12, you-11)
root(ROOT-0, have-12)
predet(obligations-16, all-13)
det(obligations-16, the-14)
amod(obligations-16, financial-15)
dobj(have-12, obligations-16)
dobj(have-12, rights-18)
conj_and(obligations-16, rights-18)
complm(share-24, that-19)
advmod(couples-22, only-20)
amod(couples-22, married-21)
nsubj(share-24, couples-22)
aux(share-24, can-23)
ccomp(have-12, share-24)
prep(share-24, in-25)
pobj(in-25, now-26)

(ROOT
  (S (CC And)
    (NP (DT that))
    (VP (VBZ includes)
      (NP (NN divorce)))
    (. .)))

cc(includes-3, And-1)
nsubj(includes-3, that-2)
root(ROOT-0, includes-3)
dobj(includes-3, divorce-4)

(ROOT
  (S (RB Then)
    (NP (PRP we))
    (VP (MD could)
      (VP (VB let)
        (S
          (NP (DT the) (NNS churches))
          (VP (VB marry)
            (NP (NNS people))
            (PP (IN under)
              (NP (PRP$ their) (NNS beliefs)
                (CC and)
                (NNS procedures)))))))
    (. .)))

advmod(let-4, Then-1)
nsubj(let-4, we-2)
aux(let-4, could-3)
root(ROOT-0, let-4)
det(churches-6, the-5)
nsubj(marry-7, churches-6)
ccomp(let-4, marry-7)
dobj(marry-7, people-8)
poss(beliefs-11, their-10)
prep_under(marry-7, beliefs-11)
prep_under(marry-7, procedures-13)
conj_and(beliefs-11, procedures-13)

(ROOT
  (S
    (NP
      (NP (DT That) (NN way))
      (, ,)
      (NP
        (NP (DT the) (JJ sacred) (NN covenant))
        (PP (IN of)
          (NP (NN marriage)))))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN protected)
          (PP (IN in)
            (NP (PRP$ your) (NN church))))))
    (. .)))

det(way-2, That-1)
nsubjpass(protected-11, way-2)
det(covenant-6, the-4)
amod(covenant-6, sacred-5)
appos(way-2, covenant-6)
prep_of(covenant-6, marriage-8)
aux(protected-11, would-9)
auxpass(protected-11, be-10)
root(ROOT-0, protected-11)
poss(church-14, your-13)
prep_in(protected-11, church-14)

(ROOT
  (SQ (MD Would)
    (NP (DT that))
    (VP (RB not) (VB satisfy)
      (NP (NN everyone)))
    (. ?)))

aux(satisfy-4, Would-1)
nsubj(satisfy-4, that-2)
neg(satisfy-4, not-3)
root(ROOT-0, satisfy-4)
dobj(satisfy-4, everyone-5)

