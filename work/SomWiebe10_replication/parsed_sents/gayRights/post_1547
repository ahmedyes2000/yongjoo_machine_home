(ROOT
  (S
    (NP
      (NP (DT The) (JJ specific) (NN thing))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD requested)))))
    (VP (VBD was)
      (SBAR (IN for)
        (S
          (NP (PRP me))
          (VP (TO to)
            (VP (VB give)
              (NP (PRP you))
              (NP
                (NP (DT a) (JJ legitimate) (NN reason))
                (SBAR
                  (WHADVP (WRB why))
                  (S
                    (NP (NN someone))
                    (VP (MD would)
                      (VP (VB oppose)
                        (NP (JJ gay) (NN marriage))
                        (PP (IN for)
                          (NP
                            (NP (NNS reasons))
                            (PP (JJ other) (IN than)
                              (NP (NN religion)))))))))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, specific-2)
dobj(requested-5, thing-3)
nsubj(was-6, thing-3)
nsubj(requested-5, you-4)
rcmod(thing-3, requested-5)
root(ROOT-0, was-6)
mark(give-10, for-7)
nsubj(give-10, me-8)
aux(give-10, to-9)
advcl(was-6, give-10)
xcomp(was-6, give-10)
iobj(give-10, you-11)
det(reason-14, a-12)
amod(reason-14, legitimate-13)
dobj(give-10, reason-14)
advmod(oppose-18, why-15)
nsubj(oppose-18, someone-16)
aux(oppose-18, would-17)
rcmod(reason-14, oppose-18)
amod(marriage-20, gay-19)
dobj(oppose-18, marriage-20)
prep_for(oppose-18, reasons-22)
dep(reasons-22, other-23)
prep_than(reasons-22, religion-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did)
      (NP (DT that)))
    (. .)))

nsubj(did-2, I-1)
root(ROOT-0, did-2)
dobj(did-2, that-3)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD will)
      (ADVP (RB just))
      (VP
        (VP (VB look)
          (PP (IN at)
            (NP (PRP you)))
          (PP (IN in)
            (NP (DT the) (NN eye))))
        (, ,)
        (VP (VB turn)
          (PRT (RP around)))
        (, ,)
        (CC and)
        (VP (VB roll)
          (NP (PRP$ his) (NNS eyes)))))
    (. .)))

nsubj(look-4, He-1)
nsubj(turn-11, He-1)
nsubj(roll-15, He-1)
aux(look-4, will-2)
advmod(look-4, just-3)
root(ROOT-0, look-4)
prep_at(look-4, you-6)
det(eye-9, the-8)
prep_in(look-4, eye-9)
conj_and(look-4, turn-11)
prt(turn-11, around-12)
conj_and(look-4, roll-15)
poss(eyes-17, his-16)
dobj(roll-15, eyes-17)

(ROOT
  (S
    (NP (PRP$ My) (NN argument))
    (VP (VBZ does) (RB not)
      (VP (VB call)
        (NP (NNS people) (NNS names))))
    (. .)))

poss(argument-2, My-1)
nsubj(call-5, argument-2)
aux(call-5, does-3)
neg(call-5, not-4)
root(ROOT-0, call-5)
nn(names-7, people-6)
dobj(call-5, names-7)

(ROOT
  (S
    (NP (PRP$ Your) (NN argument))
    (VP (VBZ calls)
      (NP
        (NP (NN anyone))
        (VP (VBN opposed)
          (PP (TO to)
            (NP
              (NP (JJ gay) (NN marriage))
              (ADJP (DT a) (JJ bigot)
                (CC or)
                (JJ ignorant)))))))
    (. .)))

poss(argument-2, Your-1)
nsubj(calls-3, argument-2)
root(ROOT-0, calls-3)
dobj(calls-3, anyone-4)
partmod(anyone-4, opposed-5)
amod(marriage-8, gay-7)
prep_to(opposed-5, marriage-8)
dep(bigot-10, a-9)
amod(marriage-8, bigot-10)
amod(marriage-8, ignorant-12)
conj_or(bigot-10, ignorant-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NN side))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (PP (IN on))))))
    (VP (VBZ is)
      (VP (VBN considered)
        (S
          (ADJP (JJ liberal)))))
    (. .)))

det(side-2, The-1)
nsubjpass(considered-7, side-2)
nsubj('re-4, you-3)
rcmod(side-2, 're-4)
prep('re-4, on-5)
auxpass(considered-7, is-6)
root(ROOT-0, considered-7)
acomp(considered-7, liberal-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN side))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (PP (IN on))))))
    (VP (VBZ is)
      (VP (VBN seen)
        (S
          (ADJP (RB as) (JJ conservative)))))
    (. .)))

det(side-2, The-1)
nsubjpass(seen-7, side-2)
nsubj('m-4, I-3)
rcmod(side-2, 'm-4)
prep('m-4, on-5)
auxpass(seen-7, is-6)
root(ROOT-0, seen-7)
advmod(conservative-9, as-8)
acomp(seen-7, conservative-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB categorize)
        (NP (PRP$ my) (NN argument))
        (PP (IN as)
          (ADJP (JJ conservative)))
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBZ takes)
              (NP
                (NP (DT a) (NN middle))
                (PP (IN of)
                  (NP (DT the) (NN road) (NN approach)))))))))
    (. .)))

nsubj(categorize-4, I-1)
aux(categorize-4, do-2)
neg(categorize-4, n't-3)
root(ROOT-0, categorize-4)
poss(argument-6, my-5)
dobj(categorize-4, argument-6)
prep_as(categorize-4, conservative-8)
mark(takes-11, because-9)
nsubj(takes-11, it-10)
advcl(categorize-4, takes-11)
det(middle-13, a-12)
dobj(takes-11, middle-13)
det(approach-17, the-15)
nn(approach-17, road-16)
prep_of(middle-13, approach-17)

(ROOT
  (S
    (VP (VB Take)
      (NP
        (NP (DT a) (JJ little))
        (SBAR
          (S (-LRB- -LRB-)
            (NP (PRP$ your) (NNS rights))
            (-RRB- -RRB-)
            (VP (VBP give)
              (NP
                (NP (DT a) (JJ little))
                (PRN (-LRB- -LRB-)
                  (S
                    (VP (VB leave)
                      (NP (DT the) (NN word))
                      (ADVP (RB behind))))
                  (-RRB- -RRB-))))))))
    (. .)))

root(ROOT-0, Take-1)
det(little-3, a-2)
dobj(Take-1, little-3)
poss(rights-6, your-5)
nsubj(give-8, rights-6)
rcmod(little-3, give-8)
det(little-10, a-9)
dobj(give-8, little-10)
dep(little-10, leave-12)
det(word-14, the-13)
dobj(leave-12, word-14)
advmod(leave-12, behind-15)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP call)
            (NP (NN negotiation))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
dobj(call-5, what-3)
nsubj(call-5, I-4)
ccomp(is-2, call-5)
dobj(call-5, negotiation-6)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN side))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (PP (IN on))))))
      (VP
        (VP (VBZ is) (RB not)
          (ADJP (JJ interested)
            (PP (IN in)
              (NP (NN negotiation)))))
        (CC and)
        (VP (VBZ is)
          (VP (VBN seen)
            (PP (IN as)
              (NP (JJ militant)))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (DT a)
            (NP (`` ``)
              (NP (PRP$ my) (NN way))
              (CC or)
              (NP (DT the) (NN highway))
              ('' ''))
            (NN approach))
          (CC and)
          (ADVP (RB then))
          (NP
            (NP (PRP$ your) (NN side) (NNS acts))
            (VP (VBN surprised)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP they))
                  (VP (VB encounter)
                    (NP (NN resistance))))))))))
    (. .)))

det(side-2, The-1)
nsubj(interested-8, side-2)
nsubjpass(seen-13, side-2)
nsubj('re-4, you-3)
rcmod(side-2, 're-4)
prep('re-4, on-5)
cop(interested-8, is-6)
neg(interested-8, not-7)
root(ROOT-0, interested-8)
prep_in(interested-8, negotiation-10)
auxpass(seen-13, is-12)
conj_and(interested-8, seen-13)
prep_as(seen-13, militant-15)
nsubj(approach-27, it-17)
cop(approach-27, 's-18)
det(approach-27, a-19)
poss(way-22, my-21)
nn(approach-27, way-22)
det(highway-25, the-24)
conj_or(way-22, highway-25)
nn(approach-27, highway-25)
parataxis(interested-8, approach-27)
parataxis(interested-8, then-29)
advmod(approach-27, then-29)
conj_and(approach-27, then-29)
poss(acts-32, your-30)
nn(acts-32, side-31)
parataxis(interested-8, acts-32)
conj_and(approach-27, acts-32)
partmod(acts-32, surprised-33)
advmod(encounter-36, when-34)
nsubj(encounter-36, they-35)
advcl(surprised-33, encounter-36)
dobj(encounter-36, resistance-37)

(ROOT
  (S
    (S
      (S
        (NP (DT The) (NN side)))
      (NP (PRP$ your))
      (ADVP (RB on))
      (VP (VBZ wants)
        (S
          (NP (NNS people))
          (VP (TO to)
            (VP (VB put)
              (NP (PRP themselves))
              (PP (IN in)
                (NP (PRP$ their) (NNS shoes))))))))
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP are) (RB not)
        (ADJP (JJ willing)
          (S
            (VP (TO to)
              (VP (VB put)
                (NP (PRP themselves))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NNS shoes))
                    (PP (IN of)
                      (NP (DT the) (JJ other) (NN side)))))))))))
    (. .)))

det(side-2, The-1)
dep(wants-5, side-2)
nsubj(wants-5, your-3)
advmod(wants-5, on-4)
root(ROOT-0, wants-5)
nsubj(put-8, people-6)
aux(put-8, to-7)
xcomp(wants-5, put-8)
dobj(put-8, themselves-9)
poss(shoes-12, their-11)
prep_in(put-8, shoes-12)
nsubj(willing-17, they-14)
cop(willing-17, are-15)
neg(willing-17, not-16)
conj_but(wants-5, willing-17)
aux(put-19, to-18)
xcomp(willing-17, put-19)
dobj(put-19, themselves-20)
det(shoes-23, the-22)
prep_in(put-19, shoes-23)
det(side-27, the-25)
amod(side-27, other-26)
prep_of(shoes-23, side-27)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD said)
      (SBAR (IN that) (, ,) (`` ``)
        (S
          (NP (PRP I))
          (VP (VBP feel)
            (SBAR (IN that)
              (S
                (NP (NN bigotry)
                  (CC or)
                  (NN ignorance))
                (VP (VBP are)
                  (NP (DT the) (JJ only) (NNS reasons)
                    (S
                      (VP (TO to)
                        (VP (VB oppose)
                          (NP (DT this) (NN issue)))))))))))))
    (. .)))

nsubj(said-2, You-1)
root(ROOT-0, said-2)
complm(feel-7, that-3)
nsubj(feel-7, I-6)
ccomp(said-2, feel-7)
complm(reasons-15, that-8)
nsubj(reasons-15, bigotry-9)
conj_or(bigotry-9, ignorance-11)
nsubj(reasons-15, ignorance-11)
cop(reasons-15, are-12)
det(reasons-15, the-13)
amod(reasons-15, only-14)
ccomp(feel-7, reasons-15)
aux(oppose-17, to-16)
infmod(reasons-15, oppose-17)
det(issue-19, this-18)
dobj(oppose-17, issue-19)

(ROOT
  (S
    (NP
      (NP (DT The) (NN side))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (PP (IN on))))))
    (VP (VBZ is)
      (VP (VBN seen)
        (PP (IN as)
          (S
            (VP (VBG being)
              (VP (VBN based)
                (PP (IN on)
                  (NP (NN religion)))))))))
    (. .)))

det(side-2, The-1)
nsubjpass(seen-7, side-2)
nsubj('m-4, I-3)
rcmod(side-2, 'm-4)
prep('m-4, on-5)
auxpass(seen-7, is-6)
root(ROOT-0, seen-7)
auxpass(based-10, being-9)
prepc_as(seen-7, based-10)
prep_on(based-10, religion-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB categorize)
        (NP (PRP$ my) (NN argument))
        (PP (IN as)
          (S
            (VP (VBG being)
              (VP (VBN based)
                (PP (IN on)
                  (NP (NN religion)))))))
        (SBAR (IN because)
          (S
            (NP (PRP$ my) (NN argument))
            (VP (VBZ does) (RB not)
              (VP (VB invoke)
                (NP (NN religion))))))))
    (. .)))

nsubj(categorize-4, I-1)
aux(categorize-4, do-2)
neg(categorize-4, n't-3)
root(ROOT-0, categorize-4)
poss(argument-6, my-5)
dobj(categorize-4, argument-6)
auxpass(based-9, being-8)
prepc_as(categorize-4, based-9)
prep_on(based-9, religion-11)
mark(invoke-17, because-12)
poss(argument-14, my-13)
nsubj(invoke-17, argument-14)
aux(invoke-17, does-15)
neg(invoke-17, not-16)
advcl(categorize-4, invoke-17)
dobj(invoke-17, religion-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ invokes)
      (NP (JJ human) (NN nature)))
    (. .)))

nsubj(invokes-2, It-1)
root(ROOT-0, invokes-2)
amod(nature-4, human-3)
dobj(invokes-2, nature-4)

(ROOT
  (S
    (NP (PRP$ My) (NN argument))
    (VP (VBZ is)
      (ADVP (RB also))
      (ADJP (JJ constructive)
        (PP (IN in)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ alienates)
                (NP
                  (NP (DT a) (JJR smaller) (NN group))
                  (PP (IN on)
                    (NP (DT the) (JJ religious) (NN right))))))))))
    (. .)))

poss(argument-2, My-1)
nsubj(constructive-5, argument-2)
cop(constructive-5, is-3)
advmod(constructive-5, also-4)
root(ROOT-0, constructive-5)
complm(alienates-9, that-7)
nsubj(alienates-9, it-8)
prepc_in(constructive-5, alienates-9)
det(group-12, a-10)
amod(group-12, smaller-11)
dobj(alienates-9, group-12)
det(right-16, the-14)
amod(right-16, religious-15)
prep_on(group-12, right-16)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (JJ pragmatic)
          (CC and)
          (JJ rational))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT that)))
          (S
            (NP (PRP it))
            (VP (VBZ gets)
              (SBAR
                (S
                  (VP (VBZ gays)
                    (NP (PRP$ their) (NNS rights))
                    (ADVP (RBR sooner))))))))))
    (CC and)
    (RB all)
    (S
      (NP (PRP they))
      (VP (VBP are)
        (VP (VBG leaving)
          (PP (IN on)
            (NP
              (NP (DT the) (NN table))
              (SBAR
                (S
                  (VP (VBZ is)
                    (ADVP (RB just))
                    (NP (DT a) (NN word))))))))))
    (. .)))

nsubj(pragmatic-3, It-1)
nsubj(rational-5, It-1)
cop(pragmatic-3, is-2)
root(ROOT-0, pragmatic-3)
conj_and(pragmatic-3, rational-5)
dep(gets-9, in-6)
pobj(in-6, that-7)
nsubj(gets-9, it-8)
ccomp(pragmatic-3, gets-9)
ccomp(gets-9, gays-10)
poss(rights-12, their-11)
dobj(gays-10, rights-12)
advmod(gays-10, sooner-13)
advmod(pragmatic-3, all-15)
conj_and(pragmatic-3, all-15)
nsubj(leaving-18, they-16)
aux(leaving-18, are-17)
ccomp(pragmatic-3, leaving-18)
det(table-21, the-20)
prep_on(leaving-18, table-21)
cop(word-25, is-22)
advmod(word-25, just-23)
det(word-25, a-24)
rcmod(table-21, word-25)

(ROOT
  (S
    (NP (NNS People))
    (VP (MD can)
      (VP (VB want)
        (NP
          (NP (DT all))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP want)))))))
    (. .)))

nsubj(want-3, People-1)
aux(want-3, can-2)
root(ROOT-0, want-3)
dobj(want-3, all-4)
dobj(want-6, all-4)
nsubj(want-6, they-5)
rcmod(all-4, want-6)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (JJ unreasonable))))))
    (. .)))

nsubj(said-3, I-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
nsubj(unreasonable-6, it-4)
cop(unreasonable-6, was-5)
ccomp(said-3, unreasonable-6)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is) (RB not)
            (ADJP (JJ practical)
              (PP (IN at)
                (NP
                  (NP (DT this) (NN point))
                  (PP (IN in)
                    (NP
                      (NP (NN time))
                      (PP (IN as)
                        (NP (NN evidence))))))))
            (PP (IN by)
              (NP (NN proposition) (CD 8)))))))
    (. .)))

nsubj(think-3, I-1)
advmod(think-3, just-2)
root(ROOT-0, think-3)
complm(practical-8, that-4)
nsubj(practical-8, it-5)
cop(practical-8, is-6)
neg(practical-8, not-7)
ccomp(think-3, practical-8)
det(point-11, this-10)
prep_at(practical-8, point-11)
prep_in(point-11, time-13)
prep_as(time-13, evidence-15)
prep_by(practical-8, proposition-17)
num(proposition-17, 8-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (NP (NNS gays))
            (VP (MD will)
              (ADVP (RB eventually))
              (VP (VB win)))))))
    (. .)))

nsubj(said-3, I-1)
aux(said-3, have-2)
root(ROOT-0, said-3)
complm(win-8, that-4)
nsubj(win-8, gays-5)
aux(win-8, will-6)
advmod(win-8, eventually-7)
ccomp(said-3, win-8)

(ROOT
  (SBARQ (CC But)
    (WHADVP (WRB why))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (JJ right)
                (UCP
                  (ADVP (RB now))
                  (CC and)
                  (PP (IN at)
                    (WHNP (WP what))))
                (NN cost)))))))
    (. ?)))

cc(have-5, But-1)
advmod(have-5, why-2)
aux(have-5, does-3)
nsubj(have-5, it-4)
xsubj(cost-13, it-4)
root(ROOT-0, have-5)
aux(cost-13, to-6)
cop(cost-13, be-7)
amod(cost-13, right-8)
dep(cost-13, now-9)
conj_and(now-9, at-11)
dep(cost-13, at-11)
pobj(at-11, what-12)
xcomp(have-5, cost-13)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBD thought)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD gave)
            (NP (DT a) (JJ perfect) (NN example))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT this))
                (VP (VBD was) (RB not)
                  (NP (DT the) (NN case)))))))))
    (. .)))

nsubj(thought-3, I-2)
root(ROOT-0, thought-3)
nsubj(gave-5, I-4)
ccomp(thought-3, gave-5)
det(example-8, a-6)
amod(example-8, perfect-7)
dobj(gave-5, example-8)
advmod(case-14, where-9)
nsubj(case-14, this-10)
cop(case-14, was-11)
neg(case-14, not-12)
det(case-14, the-13)
advcl(gave-5, case-14)

(ROOT
  (S
    (VP
      (VP (VB Take)
        (NP (PRP$ your) (NN time)))
      (, ,)
      (VP (VB regroup))
      (, ,)
      (VP
        (VP (VB do)
          (NP
            (NP (DT a) (`` ``)
              (S
                (NP (NNS lessons))
                (VP (VBD learned)))
              ('' '') (NN analysis))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBD went)
                    (ADJP (JJ wrong)
                      (CC and)
                      (JJ why))))))))
        (CC and)
        (ADVP (RB then))
        (VP (VB try)
          (ADVP (RB again) (RB later)))))
    (. .)))

root(ROOT-0, Take-1)
poss(time-3, your-2)
dobj(Take-1, time-3)
dep(Take-1, regroup-5)
dep(Take-1, do-7)
det(analysis-13, a-8)
nsubj(learned-11, lessons-10)
dep(analysis-13, learned-11)
dobj(do-7, analysis-13)
nsubj(went-16, what-15)
prepc_of(analysis-13, went-16)
acomp(went-16, wrong-17)
acomp(went-16, why-19)
conj_and(wrong-17, why-19)
dep(Take-1, then-21)
advmod(do-7, then-21)
conj_and(do-7, then-21)
dep(Take-1, try-22)
conj_and(do-7, try-22)
advmod(later-24, again-23)
advmod(try-22, later-24)

(ROOT
  (S
    (NP (NNS People))
    (VP (MD can)
      (VP (VB want)
        (NP (DT all))
        (SBAR
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP want))))
          (CC but)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ does) (RB not)
                (VP (VB mean)
                  (SBAR
                    (SBAR (IN that)
                      (S
                        (NP (PRP they))
                        (VP (VBP are)
                          (VP (VBN entitled)
                            (PP (TO to)
                              (NP (PRP it)))))))
                    (CC or)
                    (SBAR
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (VP (VBP deserve)
                            (NP (PRP it)))))
                      (CC or)
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (VP (VBP have)
                            (NP (DT a) (NN right))
                            (PP (TO to)
                              (NP (PRP it)))))))))))))))
    (. .)))

nsubj(want-3, People-1)
aux(want-3, can-2)
root(ROOT-0, want-3)
dobj(want-3, all-4)
nsubj(want-6, they-5)
dep(want-3, want-6)
nsubj(mean-11, that-8)
aux(mean-11, does-9)
neg(mean-11, not-10)
dep(want-3, mean-11)
conj_but(want-6, mean-11)
complm(entitled-15, that-12)
nsubjpass(entitled-15, they-13)
auxpass(entitled-15, are-14)
ccomp(mean-11, entitled-15)
prep_to(entitled-15, it-17)
dep(deserve-21, that-19)
nsubj(deserve-21, they-20)
ccomp(mean-11, deserve-21)
conj_or(entitled-15, deserve-21)
dobj(deserve-21, it-22)
dep(have-26, that-24)
nsubj(have-26, they-25)
conj_or(entitled-15, have-26)
conj_or(deserve-21, have-26)
det(right-28, a-27)
dobj(have-26, right-28)
prep_to(have-26, it-30)

(ROOT
  (S
    (NP (DT The) (NN status) (NN quo))
    (VP (VBZ does) (RB not)
      (VP (VB seem)
        (ADVP (RB right)
          (PP (TO to)
            (NP (PRP me))))))
    (. .)))

det(quo-3, The-1)
nn(quo-3, status-2)
nsubj(seem-6, quo-3)
aux(seem-6, does-4)
neg(seem-6, not-5)
root(ROOT-0, seem-6)
advmod(seem-6, right-7)
prep_to(right-7, me-9)

(ROOT
  (S
    (ADVP (RB Otherwise))
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB never))
      (VP (VB have)
        (VP (VBN suggested)
          (S
            (VP (TO to)
              (VP (VB bypass)
                (NP (PRP them))))))))
    (. .)))

advmod(suggested-6, Otherwise-1)
nsubj(suggested-6, I-2)
xsubj(bypass-8, I-2)
aux(suggested-6, would-3)
neg(suggested-6, never-4)
aux(suggested-6, have-5)
root(ROOT-0, suggested-6)
aux(bypass-8, to-7)
xcomp(suggested-6, bypass-8)
dobj(bypass-8, them-9)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD saw)
        (NP
          (NP (DT an) (NN injustice))
          (VP (VBG occurring)))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD tried)
        (S
          (VP (TO to)
            (VP (VB think)
              (PP (IN of)
                (NP (DT a) (JJ pragmatic) (NN approach)))
              (PP (IN towards)
                (S
                  (VP
                    (VP (VBG getting)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP I))
                          (VP (VBP consider)
                            (ADJP (JJ important))))))
                    (CC and)
                    (VP (VBG leaving)
                      (PP (IN behind)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP I))
                            (VP (VBP do) (RB n't)
                              (VP (VB consider)
                                (ADJP (JJ important))
                                (PP (IN in)
                                  (NP
                                    (NP (DT the) (JJS shortest) (NN amount))
                                    (PP (IN of)
                                      (NP (NN time)))))))))))))))))))
    (. .)))

nsubj(saw-2, I-1)
root(ROOT-0, saw-2)
det(injustice-4, an-3)
dobj(saw-2, injustice-4)
partmod(injustice-4, occurring-5)
nsubj(tried-8, I-7)
xsubj(think-10, I-7)
conj_and(saw-2, tried-8)
aux(think-10, to-9)
xcomp(tried-8, think-10)
det(approach-14, a-12)
amod(approach-14, pragmatic-13)
prep_of(think-10, approach-14)
prepc_towards(think-10, getting-16)
dobj(consider-19, what-17)
nsubj(consider-19, I-18)
ccomp(getting-16, consider-19)
acomp(consider-19, important-20)
prepc_towards(think-10, leaving-22)
conj_and(getting-16, leaving-22)
dobj(consider-28, what-24)
nsubj(consider-28, I-25)
aux(consider-28, do-26)
neg(consider-28, n't-27)
prepc_behind(leaving-22, consider-28)
acomp(consider-28, important-29)
det(amount-33, the-31)
amod(amount-33, shortest-32)
prep_in(consider-28, amount-33)
prep_of(amount-33, time-35)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (NP (PRP$ my) (NN contribution)))
    (. .)))

nsubj(contribution-4, That-1)
cop(contribution-4, was-2)
poss(contribution-4, my-3)
root(ROOT-0, contribution-4)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBD was)
        (NP
          (NP (PRP$ my) (NN way))
          (PP (IN of)
            (S
              (VP
                (VP (VBG stepping)
                  (PRT (RP up))
                  (PP (TO to)
                    (NP (DT the) (NN plate))))
                (CC and)
                (VP (VBG trying)
                  (S
                    (VP (TO to)
                      (VP (VB fix)
                        (NP (NNS things))))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD got)
        (SBAR
          (S
            (VP (VBD slammed))))))
    (. .)))

nsubj(way-4, That-1)
cop(way-4, was-2)
poss(way-4, my-3)
root(ROOT-0, way-4)
prepc_of(way-4, stepping-6)
prt(stepping-6, up-7)
det(plate-10, the-9)
prep_to(stepping-6, plate-10)
prepc_of(way-4, trying-12)
conj_and(stepping-6, trying-12)
aux(fix-14, to-13)
xcomp(trying-12, fix-14)
dobj(fix-14, things-15)
nsubj(got-18, I-17)
conj_and(way-4, got-18)
ccomp(got-18, slammed-19)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ explains)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP
            (NP (NNS others))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP
                  (VP (VBP have)
                    (VP (VBN tried)
                      (S
                        (VP (TO to)
                          (VP (VB help)
                            (NP (DT the) (JJ gay) (NN community)))))))
                  (CC but)
                  (VP (VBD encountered)
                    (NP (DT the) (JJ negative) (NN feed))
                    (ADVP (RB back)))))))
          (VP (VBP have)
            (VP (VBN stopped)
              (S
                (VP (VBG supporting)
                  (NP (JJ gay) (NN marriage))
                  (ADVP (RBR more))
                  (PP (IN than)
                    (NP (NN anything) (RB else))))))))))
    (. .)))

nsubj(explains-2, This-1)
root(ROOT-0, explains-2)
advmod(stopped-20, why-3)
nsubj(tried-7, others-4)
nsubj(encountered-14, others-4)
nsubj(stopped-20, others-4)
aux(tried-7, have-6)
rcmod(others-4, tried-7)
aux(help-9, to-8)
xcomp(tried-7, help-9)
det(community-12, the-10)
amod(community-12, gay-11)
dobj(help-9, community-12)
rcmod(others-4, encountered-14)
conj_but(tried-7, encountered-14)
det(feed-17, the-15)
amod(feed-17, negative-16)
dobj(encountered-14, feed-17)
advmod(encountered-14, back-18)
aux(stopped-20, have-19)
advcl(explains-2, stopped-20)
xcomp(stopped-20, supporting-21)
amod(marriage-23, gay-22)
dobj(supporting-21, marriage-23)
advmod(supporting-21, more-24)
prep_than(supporting-21, anything-26)
advmod(anything-26, else-27)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBD allowed)
          (NP (NN slavery))
          (S
            (VP (TO to)
              (VP (VB continue)))))))
    (VP (VBD was) (RB not)
      (NP (NN inaction)
        (CC and)
        (NN complacency)))
    (. .)))

nsubj(allowed-2, What-1)
csubj(inaction-8, allowed-2)
dobj(allowed-2, slavery-3)
aux(continue-5, to-4)
xcomp(allowed-2, continue-5)
cop(inaction-8, was-6)
neg(inaction-8, not-7)
root(ROOT-0, inaction-8)
conj_and(inaction-8, complacency-10)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBD were)
      (VP (VBG working)
        (PP (IN towards)
          (S
            (VP (VBG fixing)
              (NP (PRP it)))))))
    (. .)))

nsubj(working-3, People-1)
aux(working-3, were-2)
root(ROOT-0, working-3)
prepc_towards(working-3, fixing-5)
dobj(fixing-5, it-6)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBD allowed)
          (NP (NN slavery))
          (S
            (VP (TO to)
              (VP (VB continue)
                (PP (IN for)
                  (ADVP (RB as) (RB long)))
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (VP (VBD did))))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ takes)
            (NP (NN time))
            (S
              (VP (TO to)
                (VP (VB change)
                  (NP (DT the) (NN world)))))))))
    (. .)))

nsubj(allowed-2, What-1)
csubj(is-12, allowed-2)
dobj(allowed-2, slavery-3)
aux(continue-5, to-4)
xcomp(allowed-2, continue-5)
prep(continue-5, for-6)
advmod(long-8, as-7)
pcomp(for-6, long-8)
mark(did-11, as-9)
nsubj(did-11, it-10)
advcl(continue-5, did-11)
root(ROOT-0, is-12)
complm(takes-15, that-13)
nsubj(takes-15, it-14)
ccomp(is-12, takes-15)
dobj(takes-15, time-16)
aux(change-18, to-17)
xcomp(takes-15, change-18)
det(world-20, the-19)
dobj(change-18, world-20)

(ROOT
  (S
    (NP (DT Some) (NNS people))
    (ADVP (RB just))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB be)
              (PP (IN around)
                (NP (JJ other) (NNS people))))))))
    (. .)))

det(people-2, Some-1)
nsubj(want-6, people-2)
xsubj(be-8, people-2)
advmod(want-6, just-3)
aux(want-6, do-4)
neg(want-6, n't-5)
root(ROOT-0, want-6)
aux(be-8, to-7)
xcomp(want-6, be-8)
amod(people-11, other-10)
prep_around(be-8, people-11)

(ROOT
  (S
    (S
      (NP (DT The) (JJ gay) (NN community))
      (VP (VBZ is) (RB not)
        (VP (VBG asking)
          (PP (IN for)
            (NP (JJ certain) (NNS rights))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBG demanding)
        (NP (PRP them))))
    (. .)))

det(community-3, The-1)
amod(community-3, gay-2)
nsubj(asking-6, community-3)
aux(asking-6, is-4)
neg(asking-6, not-5)
ccomp(demanding-13, asking-6)
amod(rights-9, certain-8)
prep_for(asking-6, rights-9)
nsubj(demanding-13, it-11)
aux(demanding-13, is-12)
root(ROOT-0, demanding-13)
dobj(demanding-13, them-14)

(ROOT
  (S
    (S
      (NP (DT The) (JJ gay) (NN community))
      (VP (VBZ is) (RB not)
        (ADJP (JJ interested)
          (PP (IN in)
            (S
              (VP (VBG negotiating)))))))
    (CC and)
    (S
      (NP (DT this) (NN stance))
      (VP (VBZ is)
        (VP (VBG alienating)
          (NP
            (NP (DT a) (NN lot))
            (PP (IN of)
              (NP (JJ potential) (NNS allies)))))))
    (. .)))

det(community-3, The-1)
amod(community-3, gay-2)
nsubj(interested-6, community-3)
cop(interested-6, is-4)
neg(interested-6, not-5)
root(ROOT-0, interested-6)
prepc_in(interested-6, negotiating-8)
det(stance-11, this-10)
nsubj(alienating-13, stance-11)
aux(alienating-13, is-12)
conj_and(interested-6, alienating-13)
det(lot-15, a-14)
dobj(alienating-13, lot-15)
amod(allies-18, potential-17)
prep_of(lot-15, allies-18)

(ROOT
  (S
    (NP (DT The) (JJ gay) (NN community))
    (VP
      (VP (VBZ is)
        (VP (VBG taking)
          (NP
            (NP (DT an))
            (PP (IN in)
              (NP (PRP$ your) (NN face) (NN approach))))))
      (CC and)
      (VP (VBP are)
        (ADJP (VBN surprised)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT the) (JJ other) (NN side))
              (VP (VBZ responds)
                (PP (IN in)
                  (NP (NN kind)))))))))
    (. .)))

det(community-3, The-1)
amod(community-3, gay-2)
nsubj(taking-5, community-3)
nsubjpass(surprised-13, community-3)
aux(taking-5, is-4)
root(ROOT-0, taking-5)
dobj(taking-5, an-6)
poss(approach-10, your-8)
nn(approach-10, face-9)
prep_in(an-6, approach-10)
auxpass(surprised-13, are-12)
conj_and(taking-5, surprised-13)
advmod(responds-18, when-14)
det(side-17, the-15)
amod(side-17, other-16)
nsubj(responds-18, side-17)
dep(surprised-13, responds-18)
prep_in(responds-18, kind-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NN group))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBD followed)
            (NP (NNP Martin) (NNP Luther) (NNP King))))))
    (VP (VBD were) (RB not)
      (ADJP (JJ militant)))
    (. .)))

det(group-2, The-1)
nsubj(followed-4, group-2)
nsubj(militant-10, group-2)
rcmod(group-2, followed-4)
nn(King-7, Martin-5)
nn(King-7, Luther-6)
dobj(followed-4, King-7)
cop(militant-10, were-8)
neg(militant-10, not-9)
root(ROOT-0, militant-10)

(ROOT
  (S
    (NP (DT The) (NNP Black) (NNP Panthers))
    (VP (VBD were))
    (. .)))

det(Panthers-3, The-1)
nn(Panthers-3, Black-2)
nsubj(were-4, Panthers-3)
root(ROOT-0, were-4)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS gays))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP are)
            (ADVP (RB peacefully))
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB advance)
                    (NP (PRP$ their) (NN agenda))))))))))
    (VP (VBP are) (RB not)
      (ADJP (JJ militant)))
    (. .)))

det(gays-2, The-1)
nsubj(trying-6, gays-2)
nsubj(militant-13, gays-2)
aux(trying-6, are-4)
advmod(trying-6, peacefully-5)
rcmod(gays-2, trying-6)
aux(advance-8, to-7)
xcomp(trying-6, advance-8)
poss(agenda-10, their-9)
dobj(advance-8, agenda-10)
cop(militant-13, are-11)
neg(militant-13, not-12)
root(ROOT-0, militant-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS ones))
      (VP (VBG vandalizing)
        (NP (NNS churches))))
    (VP (VBP are))
    (. .)))

det(ones-2, The-1)
nsubj(are-5, ones-2)
partmod(ones-2, vandalizing-3)
dobj(vandalizing-3, churches-4)
root(ROOT-0, are-5)

(ROOT
  (S
    (NP (DT The) (JJ gay) (NN community))
    (VP (VBZ wants)
      (S
        (VP (TO to)
          (VP (VB portray)
            (NP (PRP itself))
            (PP (IN as)
              (S
                (VP (VBG being)
                  (NP
                    (NP (DT the) (JJ new) (JJ civil) (NNS rights) (NN fighters))
                    (PP (IN of)
                      (NP (PRP$ our) (NN generation)))))))))))
    (. .)))

det(community-3, The-1)
amod(community-3, gay-2)
nsubj(wants-4, community-3)
xsubj(portray-6, community-3)
root(ROOT-0, wants-4)
aux(portray-6, to-5)
xcomp(wants-4, portray-6)
dobj(portray-6, itself-7)
cop(fighters-14, being-9)
det(fighters-14, the-10)
amod(fighters-14, new-11)
amod(fighters-14, civil-12)
nn(fighters-14, rights-13)
prepc_as(portray-6, fighters-14)
poss(generation-17, our-16)
prep_of(fighters-14, generation-17)

(ROOT
  (S
    (NP (DT The) (JJ black) (NN community))
    (VP (VBZ finds)
      (S
        (NP (DT this))
        (ADJP (RB highly) (JJ offensive))))
    (. .)))

det(community-3, The-1)
amod(community-3, black-2)
nsubj(finds-4, community-3)
root(ROOT-0, finds-4)
nsubj(offensive-7, this-5)
advmod(offensive-7, highly-6)
xcomp(finds-4, offensive-7)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (JJS worst))
        (SBAR
          (S
            (NP (DT a) (JJ gay) (NN man))
            (VP (VBZ has)
              (VP (VBN had)
                (S
                  (VP (TO to)
                    (VP
                      (VP
                        (ADVP (RB openly))
                        (VB endure)
                        (PP (IN in)
                          (NP (DT the) (JJ last) (CD 10) (NNS years))))
                      (CC and)
                      (VP (VB compare)
                        (NP (DT that))
                        (PP (TO to)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (DT a) (JJ black) (NN man))
                              (VP (VBD had)
                                (S
                                  (VP (TO to)
                                    (VP (VB endure)
                                      (PP (IN during)
                                        (NP (DT the) (NNP 60) (POS 's))))))))))))))))))))
    (. .)))

attr(is-2, What-1)
root(ROOT-0, is-2)
det(worst-4, the-3)
nsubj(is-2, worst-4)
dobj(had-9, worst-4)
det(man-7, a-5)
amod(man-7, gay-6)
nsubj(had-9, man-7)
xsubj(endure-12, man-7)
aux(had-9, has-8)
rcmod(worst-4, had-9)
aux(endure-12, to-10)
advmod(endure-12, openly-11)
xcomp(had-9, endure-12)
det(years-17, the-14)
amod(years-17, last-15)
num(years-17, 10-16)
prep_in(endure-12, years-17)
xcomp(had-9, compare-19)
conj_and(endure-12, compare-19)
dobj(compare-19, that-20)
dep(had-26, what-22)
det(man-25, a-23)
amod(man-25, black-24)
nsubj(had-26, man-25)
xsubj(endure-28, man-25)
prepc_to(compare-19, had-26)
aux(endure-28, to-27)
xcomp(had-26, endure-28)
det(60-31, the-30)
prep_during(endure-28, 60-31)
possessive(60-31, 's-32)

(ROOT
  (S
    (NP (DT That))
    (VP
      (VP (VBZ does) (RB not)
        (VP (VB make)
          (S
            (NP (PRP them))
            (NP (DT a) (NN bigot)))))
      (CC nor)
      (VP (VBZ does)
        (S
          (NP (PRP it))
          (VP (VB make)
            (S
              (NP (PRP them))
              (ADJP (JJ ignorant)))))))
    (. .)))

nsubj(make-4, That-1)
nsubj(does-9, That-1)
aux(make-4, does-2)
neg(make-4, not-3)
root(ROOT-0, make-4)
nsubj(bigot-7, them-5)
det(bigot-7, a-6)
xcomp(make-4, bigot-7)
conj_nor(make-4, does-9)
nsubj(make-11, it-10)
ccomp(does-9, make-11)
nsubj(ignorant-13, them-12)
xcomp(make-11, ignorant-13)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT no) (NN comparison)))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(comparison-4, no-3)
nsubj('s-2, comparison-4)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ gay) (NN community))
        (PP (IN as)
          (NP
            (NP (DT the) (JJ new) (JJ civil) (NNS rights) (NN fighters))
            (PP (IN of)
              (NP (PRP$ our) (NN generation))))))
      (VP (VBZ is)
        (NP (DT an) (NN exaggeration))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN tactic))
          (VP (VBN meant)
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (PRP them))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP they))
                      (VP (VBP want) (, ,)
                        (S
                          (NP (NN nothing))
                          (ADJP (RB else)))))))))))))
    (. .)))

det(community-3, The-1)
amod(community-3, gay-2)
nsubj(exaggeration-15, community-3)
det(fighters-9, the-5)
amod(fighters-9, new-6)
amod(fighters-9, civil-7)
nn(fighters-9, rights-8)
prep_as(community-3, fighters-9)
poss(generation-12, our-11)
prep_of(fighters-9, generation-12)
cop(exaggeration-15, is-13)
det(exaggeration-15, an-14)
root(ROOT-0, exaggeration-15)
nsubj(tactic-20, it-17)
cop(tactic-20, is-18)
det(tactic-20, a-19)
parataxis(exaggeration-15, tactic-20)
xsubj(get-23, tactic-20)
partmod(tactic-20, meant-21)
aux(get-23, to-22)
xcomp(meant-21, get-23)
dobj(get-23, them-24)
dobj(want-27, what-25)
nsubj(want-27, they-26)
dep(get-23, want-27)
nsubj(else-30, nothing-29)
xcomp(want-27, else-30)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBD promised)
      (NP (NNS gays))
      (NP
        (NP (DT the) (NN right))
        (PP (TO to)
          (NP (NN marriage)))))
    (. .)))

det(one-2, No-1)
nsubj(promised-3, one-2)
root(ROOT-0, promised-3)
iobj(promised-3, gays-4)
det(right-6, the-5)
dobj(promised-3, right-6)
prep_to(right-6, marriage-8)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD can)
      (VP
        (VP (VB have)
          (NP
            (NP (PRP$ their) (NN love))
            (ADJP (RB legally) (VBN recognized)))
          (PP (IN under)
            (NP (DT a) (JJ different) (NN name))))
        (CC and)
        (RB not)
        (VP (VB suffer)
          (PP (RB because) (IN of)
            (NP (PRP it))))))
    (. .)))

nsubj(have-3, They-1)
aux(have-3, can-2)
root(ROOT-0, have-3)
poss(love-5, their-4)
dobj(have-3, love-5)
advmod(recognized-7, legally-6)
amod(love-5, recognized-7)
det(name-11, a-9)
amod(name-11, different-10)
prep_under(have-3, name-11)
conj_and(have-3, not-13)
neg(have-3, not-13)
dep(have-3, suffer-14)
prep_because_of(suffer-14, it-17)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP (NN part))
          (PP (IN of)
            (NP
              (NP (DT a) (NN nation))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ allows)
                    (NP
                      (NP (DT the) (NN pursuit))
                      (PP (IN of)
                        (NP (NN happiness))))
                    (PP (IN without)
                      (NP
                        (NP (DT the))
                        (VP (VBG having)
                          (NP (DT the) (NN word) (NN marriage)))))))))))))
    (. .)))

nsubj(part-4, They-1)
aux(part-4, can-2)
cop(part-4, be-3)
root(ROOT-0, part-4)
det(nation-7, a-6)
prep_of(part-4, nation-7)
nsubj(allows-9, nation-7)
rcmod(nation-7, allows-9)
det(pursuit-11, the-10)
dobj(allows-9, pursuit-11)
prep_of(pursuit-11, happiness-13)
prep_without(allows-9, the-15)
partmod(the-15, having-16)
det(marriage-19, the-17)
nn(marriage-19, word-18)
dobj(having-16, marriage-19)

(ROOT
  (S
    (NP (DT The) (NN word) (NN marriage))
    (VP (MD will) (RB not)
      (ADVP (RB magically))
      (VP (VB get)
        (S
          (NP (PRP them))
          (VP (TO to)
            (VP (VB be)
              (UCP
                (NP (NN acceptance))
                (CC nor)
                (S
                  (VP (VB get)
                    (S
                      (NP (PRP them))
                      (NP
                        (NP (DT a) (NN chance))
                        (PP (IN at)
                          (NP (DT the) (NN happiness)))))
                    (SBAR (IN that)
                      (S
                        (NP (NN everyone) (RB else))
                        (VP (VBZ takes)
                          (PP (IN for)
                            (ADJP (VBN granted))))))))))))))
    (. .)))

det(marriage-3, The-1)
nn(marriage-3, word-2)
nsubj(get-7, marriage-3)
aux(get-7, will-4)
neg(get-7, not-5)
advmod(get-7, magically-6)
root(ROOT-0, get-7)
nsubj(acceptance-11, them-8)
nsubj(get-13, them-8)
aux(acceptance-11, to-9)
cop(acceptance-11, be-10)
xcomp(get-7, acceptance-11)
xcomp(get-7, get-13)
conj_nor(acceptance-11, get-13)
nsubj(chance-16, them-14)
det(chance-16, a-15)
xcomp(get-13, chance-16)
det(happiness-19, the-18)
prep_at(chance-16, happiness-19)
complm(takes-23, that-20)
nsubj(takes-23, everyone-21)
advmod(everyone-21, else-22)
ccomp(get-13, takes-23)
prep_for(takes-23, granted-25)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB find)
            (NP (NN happiness))
            (PP (IN within)
              (NP (PRP themselves)))))))
    (. .)))

nsubj(have-2, They-1)
xsubj(find-4, They-1)
root(ROOT-0, have-2)
aux(find-4, to-3)
xcomp(have-2, find-4)
dobj(find-4, happiness-5)
prep_within(find-4, themselves-7)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (MD can)
      (VP (VB grant)
        (NP (PRP it))
        (PP (TO to)
          (NP (PRP them)))
        (SBAR (IN so)
          (S
            (NP (DT no) (NN one))
            (VP (MD can)
              (VP (VB deny)
                (NP (PRP it))
                (PP (TO to)
                  (NP (PRP them)))))))))
    (. .)))

det(one-2, No-1)
nsubj(grant-4, one-2)
aux(grant-4, can-3)
root(ROOT-0, grant-4)
dobj(grant-4, it-5)
prep_to(grant-4, them-7)
mark(deny-12, so-8)
det(one-10, no-9)
nsubj(deny-12, one-10)
aux(deny-12, can-11)
advcl(grant-4, deny-12)
dobj(deny-12, it-13)
prep_to(deny-12, them-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP hope)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP see)
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (ADJP (VBN upset)
                    (PP (IN at)
                      (NP
                        (NP (DT those) (JJ hypocritical) (NNS gays))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBP say)
                              (S
                                (VP
                                  (VP (`` ``) (VB empathize)
                                    (PP (IN with)
                                      (NP (PRP$ our) (NN suffering)))
                                    (PP (IN in)
                                      (NP
                                        (NP (DT a) (NN society))
                                        (SBAR
                                          (WHNP (WDT that))
                                          (S
                                            (VP (VBZ does) (RB not)
                                              (ADVP (RB fully))
                                              (VP (VB accept)
                                                (NP (PRP us)))))))))
                                  ('' '')
                                  (CC and)
                                  (VP
                                    (VP
                                      (ADVP (RB then))
                                      (VB turn)
                                      (PRT (RP around)))
                                    (CC and)
                                    (VP (VB vandalize)
                                      (NP (NNS churches)))))))))))))))))))
    (. .)))

nsubj(hope-2, I-1)
root(ROOT-0, hope-2)
nsubj(see-4, you-3)
ccomp(hope-2, see-4)
advmod(upset-8, why-5)
nsubjpass(upset-8, I-6)
auxpass(upset-8, am-7)
advcl(see-4, upset-8)
det(gays-12, those-10)
amod(gays-12, hypocritical-11)
prep_at(upset-8, gays-12)
nsubj(say-14, gays-12)
rcmod(gays-12, say-14)
ccomp(say-14, empathize-16)
poss(suffering-19, our-18)
prep_with(empathize-16, suffering-19)
det(society-22, a-21)
prep_in(empathize-16, society-22)
nsubj(accept-27, society-22)
aux(accept-27, does-24)
neg(accept-27, not-25)
advmod(accept-27, fully-26)
rcmod(society-22, accept-27)
dobj(accept-27, us-28)
advmod(turn-32, then-31)
ccomp(say-14, turn-32)
conj_and(empathize-16, turn-32)
prt(turn-32, around-33)
conj_and(empathize-16, vandalize-35)
conj_and(turn-32, vandalize-35)
dobj(vandalize-35, churches-36)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (DT that))
      (VP (VBZ is)
        (NP (DT a) (JJ real) (NN crime))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB not) (RB very))
        (VP (VBG accepting)
          (PP (IN of)
            (NP (DT the) (JJ other) (NN side))))))
    (. .)))

advmod(crime-6, Now-1)
nsubj(crime-6, that-2)
cop(crime-6, is-3)
det(crime-6, a-4)
amod(crime-6, real-5)
root(ROOT-0, crime-6)
nsubj(accepting-12, it-8)
aux(accepting-12, is-9)
dep(very-11, not-10)
advmod(accepting-12, very-11)
conj_and(crime-6, accepting-12)
det(side-16, the-14)
amod(side-16, other-15)
prep_of(accepting-12, side-16)

(ROOT
  (S (RB Not)
    (S
      (VP
        (VP (VBG granting)
          (NP (NNS gays))
          (NP (DT the) (NN word) (NN marriage)))
        (CC but)
        (VP (VBG granting)
          (NP (PRP them))
          (NP (DT the) (JJ same) (NNS rights)))))
    (VP
      (VP (VBZ does) (RB not)
        (VP (VB make)
          (NP (CD one))
          (NP (DT a) (NN bigot))))
      (CC nor)
      (VP (VBZ does)
        (SBAR
          (S
            (NP (PRP it))
            (VP
              (VP (VBP make)
                (NP (CD one) (NN ignorant)))
              (CC nor)
              (VP (VBZ does)
                (S
                  (NP (PRP it))
                  (VP (VB hurt)
                    (NP (DT the) (JJ gay) (NN community))))))))))
    (. .)))

neg(make-15, Not-1)
csubj(make-15, granting-2)
csubj(does-20, granting-2)
iobj(granting-2, gays-3)
det(marriage-6, the-4)
nn(marriage-6, word-5)
dobj(granting-2, marriage-6)
conj_but(granting-2, granting-8)
csubj(make-15, granting-8)
iobj(granting-8, them-9)
det(rights-12, the-10)
amod(rights-12, same-11)
dobj(granting-8, rights-12)
aux(make-15, does-13)
neg(make-15, not-14)
root(ROOT-0, make-15)
iobj(make-15, one-16)
det(bigot-18, a-17)
dobj(make-15, bigot-18)
conj_nor(make-15, does-20)
nsubj(make-22, it-21)
nsubj(does-26, it-21)
ccomp(does-20, make-22)
num(ignorant-24, one-23)
dobj(make-22, ignorant-24)
ccomp(does-20, does-26)
conj_nor(make-22, does-26)
nsubj(hurt-28, it-27)
ccomp(does-26, hurt-28)
det(community-31, the-29)
amod(community-31, gay-30)
dobj(hurt-28, community-31)

(ROOT
  (SINV
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP are)
                (VP (VBG empathizing)
                  (PP (IN with)
                    (NP (DT the) (JJ other) (NN side))))))))))
    (, ,)
    (VP (VBP do))
    (NP (PRP you))
    (. ?)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
ccomp(do-13, think-4)
nsubj(empathizing-7, they-5)
aux(empathizing-7, are-6)
ccomp(think-4, empathizing-7)
det(side-11, the-9)
amod(side-11, other-10)
prep_with(empathizing-7, side-11)
root(ROOT-0, do-13)
nsubj(do-13, you-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP guess)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBD forgot)
            (S
              (VP (TO to)
                (VP (VB put)
                  (PP (IN on)
                    (NP (PRP$ their) (NNS neighbors) (NNS shoes))))))))))
    (. .)))

nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
nsubj(forgot-4, they-3)
xsubj(put-6, they-3)
ccomp(guess-2, forgot-4)
aux(put-6, to-5)
xcomp(forgot-4, put-6)
poss(shoes-10, their-8)
nn(shoes-10, neighbors-9)
prep_on(put-6, shoes-10)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB think)
      (SBAR (IN that)
        (WHADVP (WRB when))
        (S
          (NP (NNS gays))
          (VP (VBP call)
            (S
              (NP (DT the) (JJ other) (NN side))
              (ADJP
                (ADJP (JJ hateful)
                  (CC and)
                  (JJ bigot)
                  (CC and)
                  (JJ ignorant))
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (VBP are)
                      (ADJP (JJ able)
                        (S
                          (VP (TO to)
                            (VP (VB see)
                              (NP
                                (NP (DT the) (NN humanity))
                                (PP (IN of)
                                  (NP (DT the) (JJ other) (NN side)))))))))))))))))
    (. ?)))

aux(think-3, Do-1)
nsubj(think-3, you-2)
root(ROOT-0, think-3)
complm(call-7, that-4)
advmod(call-7, when-5)
nsubj(call-7, gays-6)
ccomp(think-3, call-7)
det(side-10, the-8)
amod(side-10, other-9)
nsubj(bigot-13, side-10)
nsubj(ignorant-15, side-10)
dep(bigot-13, hateful-11)
xcomp(call-7, bigot-13)
xcomp(call-7, ignorant-15)
conj_and(bigot-13, ignorant-15)
complm(able-19, that-16)
nsubj(able-19, they-17)
cop(able-19, are-18)
ccomp(bigot-13, able-19)
aux(see-21, to-20)
xcomp(able-19, see-21)
det(humanity-23, the-22)
dobj(see-21, humanity-23)
det(side-27, the-25)
amod(side-27, other-26)
prep_of(humanity-23, side-27)

(ROOT
  (SQ (NNP Does)
    (NP (JJ maligning) (NN someone))
    (VP (VB help)
      (S
        (NP (PRP you))
        (VP
          (VP (VB solve)
            (NP (PRP$ your) (NNS differences)))
          (CC or)
          (VP (VBZ does)
            (S
              (NP (PRP it))
              (VP (VB hinder)))))))
    (. ?)))

dep(help-4, Does-1)
amod(someone-3, maligning-2)
nsubj(help-4, someone-3)
root(ROOT-0, help-4)
nsubj(solve-6, you-5)
nsubj(does-10, you-5)
ccomp(help-4, solve-6)
poss(differences-8, your-7)
dobj(solve-6, differences-8)
ccomp(help-4, does-10)
conj_or(solve-6, does-10)
nsubj(hinder-12, it-11)
ccomp(does-10, hinder-12)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP it))
        (VP (VBZ hinders))))
    (, ,)
    (NP (NNP why))
    (VP (VBP do)
      (NP (PRP it)))
    (. .)))

cc(do-7, And-1)
mark(hinders-4, if-2)
nsubj(hinders-4, it-3)
advcl(do-7, hinders-4)
nsubj(do-7, why-6)
root(ROOT-0, do-7)
dobj(do-7, it-8)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN value))
    (SQ (VBZ is)
      (NP
        (NP (RB there))
        (PP (IN in)
          (S
            (VP (VBG calling)
              (NP (NN someone))
              (NP (DT a) (NN bigot)))))))
    (. ?)))

det(value-2, What-1)
attr(is-3, value-2)
root(ROOT-0, is-3)
nsubj(is-3, there-4)
prepc_in(there-4, calling-6)
iobj(calling-6, someone-7)
det(bigot-9, a-8)
dobj(calling-6, bigot-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT a) (JJ great) (NN tactic)))
    (. .)))

nsubj(tactic-5, It-1)
cop(tactic-5, is-2)
det(tactic-5, a-3)
amod(tactic-5, great-4)
root(ROOT-0, tactic-5)

(ROOT
  (S
    (NP (DT The) (NNPS Nazis))
    (VP (VBD used)
      (NP (PRP it))
      (PP (IN with)
        (NP (JJ great) (NN success)))
      (S
        (VP (TO to)
          (VP (VB get)
            (S
              (NP (NNS people))
              (VP (TO to)
                (VP (VB think)
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBD was)
                        (ADJP (JJ OK)
                          (S
                            (VP (TO to)
                              (VP (VB kill)
                                (NP (NNPS Jews))
                                (SBAR (IN because)
                                  (S (, ,)
                                    (PP (IN after)
                                      (NP (DT all)))
                                    (, ,)
                                    (NP (NNPS Jews))
                                    (VP (VBD were)
                                      (VP (VBN vermin)))))))))))))))))))
    (. .)))

det(Nazis-2, The-1)
nsubj(used-3, Nazis-2)
xsubj(get-9, Nazis-2)
root(ROOT-0, used-3)
dobj(used-3, it-4)
amod(success-7, great-6)
prep_with(used-3, success-7)
aux(get-9, to-8)
xcomp(used-3, get-9)
nsubj(think-12, people-10)
aux(think-12, to-11)
xcomp(get-9, think-12)
complm(OK-16, that-13)
nsubj(OK-16, it-14)
cop(OK-16, was-15)
ccomp(think-12, OK-16)
aux(kill-18, to-17)
xcomp(OK-16, kill-18)
dobj(kill-18, Jews-19)
mark(vermin-27, because-20)
prep_after(vermin-27, all-23)
nsubjpass(vermin-27, Jews-25)
auxpass(vermin-27, were-26)
advcl(kill-18, vermin-27)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP see))
    (. ?)))

nsubj(see-2, You-1)
root(ROOT-0, see-2)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR
        (S
          (NP
            (NP (DT that))
            (ADJP (JJ same)
              (CC but)
              (JJ separate)))
          (VP (VBZ is) (RB not)
            (ADJP (JJ good))
            (SBAR
              (ADVP (RB enough) (RB as))
              (IN though)
              (S
                (ADVP (RB as) (RB soon))
                (NP (NNS gays))
                (VP (VBP are)
                  (VP (VBN allowed)
                    (S
                      (VP (TO to)
                        (VP (VB marry)
                          (SBAR
                            (S
                              (NP (DT the) (NNS bigots))
                              (VP (MD will)
                                (ADVP (RB suddenly))
                                (VP (VB see)
                                  (NP
                                    (NP (DT the) (NNS errors))
                                    (PP (IN of)
                                      (NP (PRP$ their) (NNS ways)))))))))))))))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
nsubj(good-9, that-3)
amod(that-3, same-4)
amod(that-3, separate-6)
conj_but(same-4, separate-6)
cop(good-9, is-7)
neg(good-9, not-8)
ccomp(say-2, good-9)
advmod(as-11, enough-10)
advmod(allowed-17, as-11)
dep(allowed-17, though-12)
advmod(soon-14, as-13)
advmod(allowed-17, soon-14)
nsubjpass(allowed-17, gays-15)
xsubj(marry-19, gays-15)
auxpass(allowed-17, are-16)
ccomp(good-9, allowed-17)
aux(marry-19, to-18)
xcomp(allowed-17, marry-19)
det(bigots-21, the-20)
nsubj(see-24, bigots-21)
aux(see-24, will-22)
advmod(see-24, suddenly-23)
ccomp(marry-19, see-24)
det(errors-26, the-25)
dobj(see-24, errors-26)
poss(ways-29, their-28)
prep_of(errors-26, ways-29)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's) (RB not)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB happen))))))
    (. .)))

nsubj(going-4, That-1)
xsubj(happen-6, That-1)
aux(going-4, 's-2)
neg(going-4, not-3)
root(ROOT-0, going-4)
aux(happen-6, to-5)
xcomp(going-4, happen-6)

(ROOT
  (S
    (NP
      (NP (PDT All) (DT the) (NN litigation))
      (PP (IN in)
        (NP (DT the) (NN world))))
    (VP (MD will)
      (ADVP (RB never))
      (VP (VB force)
        (NP (DT a) (NN bigot)
          (S
            (VP (TO to)
              (VP (VB accept)
                (NP (PRP you))))))))
    (. .)))

predet(litigation-3, All-1)
det(litigation-3, the-2)
nsubj(force-9, litigation-3)
det(world-6, the-5)
prep_in(litigation-3, world-6)
aux(force-9, will-7)
neg(force-9, never-8)
root(ROOT-0, force-9)
det(bigot-11, a-10)
dobj(force-9, bigot-11)
aux(accept-13, to-12)
infmod(bigot-11, accept-13)
dobj(accept-13, you-14)

