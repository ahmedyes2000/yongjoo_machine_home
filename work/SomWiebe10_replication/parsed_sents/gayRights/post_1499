(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (ADVP (RB exactly))
      (NP
        (NP (DT the) (NN caliber))
        (PP (IN of)
          (NP (NN response)))
        (SBAR
          (S
            (NP (PRP I))
            (VP (MD would)
              (VP (VB expect)
                (PP (IN from)
                  (NP (DT a) (JJ homophobic) (NN person)))))))))
    (. .)))

nsubj(caliber-5, That-1)
cop(caliber-5, is-2)
advmod(caliber-5, exactly-3)
det(caliber-5, the-4)
root(ROOT-0, caliber-5)
dobj(expect-10, caliber-5)
prep_of(caliber-5, response-7)
nsubj(expect-10, I-8)
aux(expect-10, would-9)
rcmod(caliber-5, expect-10)
det(person-14, a-12)
amod(person-14, homophobic-13)
prep_from(expect-10, person-14)

(ROOT
  (SQ
    (VP (VB Pick)
      (NP (DT a) (JJ different) (NN word)))
    (. ?)))

root(ROOT-0, Pick-1)
det(word-4, a-2)
amod(word-4, different-3)
dobj(Pick-1, word-4)

(ROOT
  (S
    (NP
      (NP (PRP You))
      (CC and)
      (NP
        (NP (NNS millions))
        (PP (IN of)
          (NP (NNS others)))))
    (VP (MD will)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how)
            (ADJP (RB alike)))
          (S
            (NP (PRP we))
            (ADVP (RB really))
            (VP (VBP are))))))
    (. .)))

nsubj(see-7, You-1)
conj_and(You-1, millions-3)
nsubj(see-7, millions-3)
prep_of(millions-3, others-5)
aux(see-7, will-6)
root(ROOT-0, see-7)
advmod(are-12, how-8)
dep(how-8, alike-9)
nsubj(are-12, we-10)
advmod(are-12, really-11)
ccomp(see-7, are-12)

(ROOT
  (FRAG
    (WHNP
      (NP (JJ Different))
      (WHPP (IN from)
        (WHNP (WP what))))
    (. ?)))

root(ROOT-0, Different-1)
prep_from(Different-1, what-3)

(ROOT
  (SQ
    (VP (VB Marriage))
    (. ?)))

root(ROOT-0, Marriage-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB care)
        (SBAR (IN if)
          (S
            (NP (NN tradition))
            (VP (VBZ has)
              (ADVP (RB heretofore))
              (VP (VBN dictated)
                (NP
                  (NP (DT a) (NN union))
                  (PP (IN between)
                    (NP
                      (NP (DT a) (NN man))
                      (CC and)
                      (NP (DT a) (NN woman)))))
                (PP (IN because))
                (, ,)
                (S
                  (VP (VB guess)
                    (NP (WP what))))))))))
    (. ?)))

nsubj(care-4, I-1)
aux(care-4, do-2)
neg(care-4, n't-3)
root(ROOT-0, care-4)
mark(dictated-9, if-5)
nsubj(dictated-9, tradition-6)
aux(dictated-9, has-7)
advmod(dictated-9, heretofore-8)
advcl(care-4, dictated-9)
det(union-11, a-10)
dobj(dictated-9, union-11)
det(man-14, a-13)
prep_between(union-11, man-14)
det(woman-17, a-16)
prep_between(union-11, woman-17)
conj_and(man-14, woman-17)
prep(dictated-9, because-18)
dep(dictated-9, guess-20)
dobj(guess-20, what-21)

(ROOT
  (S
    (S
      (NP (NN Tradition))
      (VP (VBZ is)
        (PP (IN on)
          (NP
            (NP (DT the) (NN verge))
            (PP (IN of)
              (S
                (VP (VBG being)
                  (VP (VBN expanded)
                    (S
                      (VP (TO to)
                        (VP (VB incorporate)
                          (NP (NNS homosexuals))
                          (ADVP (RB as) (RB well)))))))))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (JJ high) (NN time))))
    (. .)))

nsubj(is-2, Tradition-1)
root(ROOT-0, is-2)
det(verge-5, the-4)
prep_on(is-2, verge-5)
auxpass(expanded-8, being-7)
prepc_of(verge-5, expanded-8)
aux(incorporate-10, to-9)
xcomp(expanded-8, incorporate-10)
dobj(incorporate-10, homosexuals-11)
advmod(well-13, as-12)
mwe(well-13, as-12)
advmod(incorporate-10, well-13)
nsubj(time-18, it-15)
cop(time-18, 's-16)
amod(time-18, high-17)
conj_and(is-2, time-18)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP are)
        (ADJP (JJ different)
          (PP (IN from)
            (NP
              (NP (DT the) (NN majority))
              (PP (IN of)
                (NP
                  (NP (NNS people))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP live)
                        (PP (IN on)
                          (NP (DT this) (NN earth) (NN insofar)))
                        (SBAR (IN as)
                          (S
                            (NP (PRP we))
                            (VP (VBP are)
                              (ADVP (RB only))
                              (VP (VBN attracted)
                                (PP (TO to)
                                  (NP (PRP$ our) (JJ own) (NN sex)))))))))))))))))
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (ADVP (RB also))
        (NP
          (NP
            (NP (DT the) (JJ same))
            (PP (IN in)
              (NP (JJ many) (NNS ways))))
          (CONJP (IN if) (RB not))
          (NP (DT every) (JJ other) (NN way)))))
    (. .)))

nsubj(different-3, We-1)
cop(different-3, are-2)
root(ROOT-0, different-3)
det(majority-6, the-5)
prep_from(different-3, majority-6)
prep_of(majority-6, people-8)
nsubj(live-10, people-8)
rcmod(people-8, live-10)
det(insofar-14, this-12)
nn(insofar-14, earth-13)
prep_on(live-10, insofar-14)
mark(attracted-19, as-15)
nsubjpass(attracted-19, we-16)
auxpass(attracted-19, are-17)
advmod(attracted-19, only-18)
advcl(live-10, attracted-19)
poss(sex-23, our-21)
amod(sex-23, own-22)
prep_to(attracted-19, sex-23)
nsubj(same-29, we-25)
cop(same-29, are-26)
advmod(same-29, also-27)
det(same-29, the-28)
conj_but(different-3, same-29)
amod(ways-32, many-31)
prep_in(same-29, ways-32)
det(way-37, every-35)
amod(way-37, other-36)
conj_but(different-3, way-37)
conj_negcc(same-29, way-37)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT another) (NN post)))
      (NP (PRP I))
      (VP (VBD told)
        (NP (PRP you))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP have)
              (ADVP (RB already))
              (VP (VBN shown)
                (NP (PRP you))
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP we))
                    (VP (VBP are)
                      (ADJP (JJ different)))))))))))
    (CC and)
    (S
      (NP (PRP you))
      (VP
        (VP (MD could) (RB n't))
        (CC or)
        (VP (MD would) (RB n't)
          (VP (VB accept)
            (NP (DT that))))))
    (. .)))

det(post-3, another-2)
prep_in(told-5, post-3)
nsubj(told-5, I-4)
root(ROOT-0, told-5)
dobj(told-5, you-6)
complm(shown-11, that-7)
nsubj(shown-11, we-8)
aux(shown-11, have-9)
advmod(shown-11, already-10)
ccomp(told-5, shown-11)
dobj(shown-11, you-12)
advmod(different-16, how-13)
nsubj(different-16, we-14)
cop(different-16, are-15)
dep(shown-11, different-16)
nsubj(could-19, you-18)
nsubj(accept-24, you-18)
conj_and(told-5, could-19)
neg(could-19, n't-20)
aux(accept-24, would-22)
neg(accept-24, n't-23)
conj_and(told-5, accept-24)
conj_or(could-19, accept-24)
dobj(accept-24, that-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG forcing)
        (NP
          (NP (PRP you))
          (CC or)
          (NP (DT the) (NN world)))
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (NN anything) (NNP Joe)))))))
    (. .)))

nsubj(forcing-4, I-1)
aux(forcing-4, 'm-2)
neg(forcing-4, not-3)
root(ROOT-0, forcing-4)
dobj(forcing-4, you-5)
det(world-8, the-7)
dobj(forcing-4, world-8)
conj_or(you-5, world-8)
aux(do-10, to-9)
xcomp(forcing-4, do-10)
nn(Joe-12, anything-11)
dobj(do-10, Joe-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (S
          (NP (DT the) (JJ final) (NNS votes))
          (VP
            (VP (VBP are)
              (PP (IN in)))
            (CC and)
            (VP (VBD tallied))))
        (CC and)
        (S
          (S
            (NP (PRP we))
            (VP (VBP win) (, ,)
              (ADVP (RB bit)
                (PP (IN by)
                  (NP (NN bit)
                    (CC and)
                    (NN mile))))
              (PP (IN by)
                (NP (NN mile)))
              (: ...)
              (NP (PRP you))))
          (CC and)
          (S
            (NP (DT the) (NN rest))
            (VP (MD will)
              (VP (VB see)
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBD had)
                      (NP
                        (NP (NN nothing))
                        (PP (TO to)
                          (NP (NN fear)))))))))))))
    (, ,)
    (S
      (ADJP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB object)
              (PP (TO to)))))))
    (CC and)
    (S
      (ADJP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB lose))))))
    (. .)))

advmod(are-5, When-1)
det(votes-4, the-2)
amod(votes-4, final-3)
nsubj(are-5, votes-4)
nsubj(tallied-8, votes-4)
advcl(nothing-33, are-5)
prep(are-5, in-6)
conj_and(are-5, tallied-8)
advcl(nothing-33, tallied-8)
nsubj(win-11, we-10)
conj_and(are-5, win-11)
advcl(nothing-33, win-11)
advmod(win-11, bit-13)
prep_by(bit-13, bit-15)
prep_by(bit-13, mile-17)
conj_and(bit-15, mile-17)
prep_by(win-11, mile-19)
dobj(win-11, you-21)
det(rest-24, the-23)
nsubj(see-26, rest-24)
aux(see-26, will-25)
conj_and(are-5, see-26)
conj_and(win-11, see-26)
nsubj(had-28, you-27)
ccomp(see-26, had-28)
dobj(had-28, nothing-29)
prep_to(nothing-29, fear-31)
root(ROOT-0, nothing-33)
aux(object-35, to-34)
xcomp(nothing-33, object-35)
prep(object-35, to-36)
conj_and(nothing-33, nothing-38)
aux(lose-40, to-39)
xcomp(nothing-38, lose-40)

