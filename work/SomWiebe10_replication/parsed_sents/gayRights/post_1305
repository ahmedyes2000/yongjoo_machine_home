(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBD taught)
        (NP (PRP you))
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (TO to)
              (VP (VB read)))))))
    (. ?)))

nsubj(taught-2, Who-1)
root(ROOT-0, taught-2)
dobj(taught-2, you-3)
advmod(read-6, how-4)
aux(read-6, to-5)
xcomp(taught-2, read-6)

(ROOT
  (S (`` ``)
    (PP (IN If))
    (NP (PRP you))
    (VP (VBP do) (RB n't))
    (. ...)))

prep(do-4, If-2)
nsubj(do-4, you-3)
root(ROOT-0, do-4)
neg(do-4, n't-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG blaming)
        (NP (PRP$ your) (NN religion))
        (PP (IN for)
          (NP (VBG oppressing) (NNS people)))))
    (. .)))

nsubj(blaming-3, I-1)
aux(blaming-3, am-2)
root(ROOT-0, blaming-3)
poss(religion-5, your-4)
dobj(blaming-3, religion-5)
amod(people-8, oppressing-7)
prep_for(blaming-3, people-8)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NN religion))
      (VP (VBN used)))
    (VP
      (VP (VBZ lies))
      (CC and)
      (VP (VBP fear)
        (ADJP (JJ mongering)))
      (, ,)
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP (VB change)
              (NP
                (NP (DT the) (NN law))
                (PP (IN via)
                  (NP (`` ``) (NN democracy) ('' ''))))
              (, ,)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (ADVP (RB so))))))))))
    (. .)))

poss(religion-2, Your-1)
nsubj(lies-4, religion-2)
nsubj(fear-6, religion-2)
partmod(religion-2, used-3)
root(ROOT-0, lies-4)
conj_and(lies-4, fear-6)
acomp(fear-6, mongering-7)
mark(change-12, in-9)
dep(change-12, order-10)
aux(change-12, to-11)
purpcl(lies-4, change-12)
det(law-14, the-13)
dobj(change-12, law-14)
prep_via(law-14, democracy-17)
aux(do-21, to-20)
xcomp(change-12, do-21)
advmod(do-21, so-22)

(ROOT
  (S (CC And)
    (NP (DT that))
    (VP (VBZ is)
      (ADJP (JJ wrong))
      (, ,)
      (PP (IN in)
        (NP (PRP$ my) (NN opinion))))
    (. .)))

cc(wrong-4, And-1)
nsubj(wrong-4, that-2)
cop(wrong-4, is-3)
root(ROOT-0, wrong-4)
poss(opinion-8, my-7)
prep_in(wrong-4, opinion-8)

(ROOT
  (SBARQ (CC And)
    (WHNP (WP what))
    (SQ
      (VP (VBZ lies)))
    (. ?)))

cc(lies-3, And-1)
nsubj(lies-3, what-2)
root(ROOT-0, lies-3)

(ROOT
  (S
    (ADJP (JJ http:\/\/www.samspadesf.com\/2008\/10\/prop-8-lies-and-facts-you-sort-them-out.html))
    (NP (DT Those))
    (VP (VBD were)
      (NP (DT the) (`` ``) (NNS facts) ('' ''))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (JJ Mormon) (NN church))
            (, ,)
            (PP (IN from)
              (NP (NNP Utah)))
            (, ,))
          (VP (VBD paid)
            (S
              (VP (TO to)
                (VP (VB spread)
                  (PP (IN in)
                    (NP (NNP California))))))))))
    (. .)))

dep(facts-6, http:\/\/www.samspadesf.com\/2008\/10\/prop-8-lies-and-facts-you-sort-them-out.html-1)
nsubj(facts-6, Those-2)
cop(facts-6, were-3)
det(facts-6, the-4)
root(ROOT-0, facts-6)
complm(paid-16, that-8)
det(church-11, the-9)
amod(church-11, Mormon-10)
nsubj(paid-16, church-11)
xsubj(spread-18, church-11)
prep_from(church-11, Utah-14)
ccomp(facts-6, paid-16)
aux(spread-18, to-17)
xcomp(paid-16, spread-18)
prep_in(spread-18, California-20)

(ROOT
  (S
    (NP
      (NP (NN None))
      (PP (IN of)
        (NP (PRP it))))
    (VP (VBD was)
      (ADJP (JJ true)))
    (. .)))

nsubj(true-5, None-1)
prep_of(None-1, it-3)
cop(true-5, was-4)
root(ROOT-0, true-5)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBD was)
      (ADVP (RB only))
      (VP (VBG challenging)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB make)
              (NP (DT an)
                (ADVP (RB actually))
                (NN point)))))))
    (. .)))

nsubj(challenging-5, I-2)
aux(challenging-5, was-3)
advmod(challenging-5, only-4)
root(ROOT-0, challenging-5)
nsubj(make-8, you-6)
aux(make-8, to-7)
xcomp(challenging-5, make-8)
det(point-11, an-9)
advmod(point-11, actually-10)
dobj(make-8, point-11)

(ROOT
  (S
    (NP (WDT Which))
    (, ,)
    (PP (IN at)
      (NP (DT the) (NN time)))
    (, ,)
    (NP (PRP you))
    (VP (VBD were) (RB not)
      (VP (VBG doing)))
    (. .)))

nsubj(doing-10, Which-1)
det(time-5, the-4)
prep_at(doing-10, time-5)
nsubj(doing-10, you-7)
aux(doing-10, were-8)
neg(doing-10, not-9)
root(ROOT-0, doing-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (ADVP (RB actually))
      (VP (VB want)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB shut)
              (PRT (RP up)))))))
    (. .)))

nsubj(want-5, I-1)
aux(want-5, did-2)
neg(want-5, n't-3)
advmod(want-5, actually-4)
root(ROOT-0, want-5)
nsubj(shut-8, you-6)
aux(shut-8, to-7)
xcomp(want-5, shut-8)
prt(shut-8, up-9)

(ROOT
  (NP ('' '')
    (CC And)
    (NP
      (NP (PRP I))
      (SBAR
        (S
          (VP (VBP 'm) (RB not)
            (VP (VBG accusing)
              (NP
                (NP (DT the) (NN country))
                (PP (IN of)
                  (NP (NN everything)))))))))
    (. .)))

cc(I-3, And-2)
root(ROOT-0, I-3)
aux(accusing-6, 'm-4)
neg(accusing-6, not-5)
rcmod(I-3, accusing-6)
det(country-8, the-7)
dobj(accusing-6, country-8)
prep_of(country-8, everything-10)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBD meant)
      (NP (NN anything)))
    (. .)))

nsubj(meant-3, I-2)
root(ROOT-0, meant-3)
dobj(meant-3, anything-4)

(ROOT
  (S (CC But)
    (NP (NN everything))
    (VP (VBZ does)
      (NP (NN work))
      (, ,)
      (ADVP (RB too)))
    (. .)))

cc(does-3, But-1)
nsubj(does-3, everything-2)
root(ROOT-0, does-3)
dobj(does-3, work-4)
advmod(does-3, too-6)

(ROOT
  (SINV
    (PP (IN Because)
      (NP (NN everything)))
    (VP (VBZ includes))
    (NP (NN anything))
    (. .)))

prep_because(includes-3, everything-2)
root(ROOT-0, includes-3)
nsubj(includes-3, anything-4)

(ROOT
  (S (CC And)
    (NP (RB no))
    (, ,)
    (NP (PRP I))
    (VP (VBD did) (RB n't)
      (VP (VB accuse)
        (NP
          (NP (DT the) (NN country))
          (PP (IN of)
            (NP (NN anything)
              (CC or)
              (NN everything))))))
    (. .)))

cc(accuse-7, And-1)
nsubj(accuse-7, no-2)
nsubj(accuse-7, I-4)
aux(accuse-7, did-5)
neg(accuse-7, n't-6)
root(ROOT-0, accuse-7)
det(country-9, the-8)
dobj(accuse-7, country-9)
prep_of(country-9, anything-11)
prep_of(country-9, everything-13)
conj_or(anything-11, everything-13)

