(ROOT
  (FRAG
    (NP (CD 5))
    (. .)))

root(ROOT-0, 5-1)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD were)
      (ADJP (JJ right)
        (S
          (VP (TO to)
            (VP (VB say) (`` ``)
              (NP (DT no) (NN offense))
              (, ,) ('' '')
              (SBAR (IN because)
                (S
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN member))
                      (PP (IN of)
                        (NP (DT a) (JJ heterosexual) (, ,) (JJ interracial) (NN couple)))))
                  (NP (PRP I))
                  (VP (VBP am)
                    (VP (VBN tempted)
                      (S
                        (VP (TO to)
                          (VP (VB take)
                            (NP (NN offense))))))))))))))
    (. .)))

nsubj(right-3, You-1)
cop(right-3, were-2)
root(ROOT-0, right-3)
aux(say-5, to-4)
xcomp(right-3, say-5)
det(offense-8, no-7)
dobj(say-5, offense-8)
mark(tempted-23, because-11)
det(member-14, a-13)
prep_as(tempted-23, member-14)
det(couple-20, a-16)
amod(couple-20, heterosexual-17)
amod(couple-20, interracial-19)
prep_of(member-14, couple-20)
nsubjpass(tempted-23, I-21)
xsubj(take-25, I-21)
auxpass(tempted-23, am-22)
advcl(say-5, tempted-23)
aux(take-25, to-24)
xcomp(tempted-23, take-25)
dobj(take-25, offense-26)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB also))
    (VP (VBP do) (RB not)
      (VP (VB understand)
        (NP (PRP$ your) (JJ next) (NN sentence))))
    (. .)))

nsubj(understand-5, I-1)
advmod(understand-5, also-2)
aux(understand-5, do-3)
neg(understand-5, not-4)
root(ROOT-0, understand-5)
poss(sentence-8, your-6)
amod(sentence-8, next-7)
dobj(understand-5, sentence-8)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ false))
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (JJ gay) (NN marriage))
              (VP (VBD were)
                (ADJP (JJ legal)))))
          (, ,)
          (NP (DT that))
          (VP (MD would)
            (VP (VB mean)
              (SBAR (IN that)
                (S
                  (NP (NN polygamy))
                  (VP (MD would)
                    (VP (VB be)
                      (ADJP (JJ legal)))))))))))
    (. .)))

nsubj(false-3, It-1)
cop(false-3, is-2)
root(ROOT-0, false-3)
complm(mean-13, that-4)
mark(legal-9, if-5)
amod(marriage-7, gay-6)
nsubj(legal-9, marriage-7)
cop(legal-9, were-8)
advcl(mean-13, legal-9)
nsubj(mean-13, that-11)
aux(mean-13, would-12)
ccomp(false-3, mean-13)
complm(legal-18, that-14)
nsubj(legal-18, polygamy-15)
aux(legal-18, would-16)
cop(legal-18, be-17)
ccomp(mean-13, legal-18)

(ROOT
  (S
    (NP
      (NP (DT The) (NN reason))
      (SBAR
        (WHNP (WDT that))
        (S
          (ADVP (RB polygamy))
          (VP (MD would) (RB not)
            (VP (VB be)
              (VP (VBN permitted)
                (SBAR (IN if)
                  (S
                    (NP (JJ gay) (NN marriage))
                    (VP (VBD were)
                      (ADJP (JJ legal)))))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NN polygamy))
          (VP (VBZ is)
            (ADJP (JJ illegal)
              (PP (IN under)
                (NP (JJ separate) (NNS laws))))))))
    (. .)))

det(reason-2, The-1)
nsubjpass(permitted-8, reason-2)
nsubj(is-14, reason-2)
advmod(permitted-8, polygamy-4)
aux(permitted-8, would-5)
neg(permitted-8, not-6)
auxpass(permitted-8, be-7)
rcmod(reason-2, permitted-8)
mark(legal-13, if-9)
amod(marriage-11, gay-10)
nsubj(legal-13, marriage-11)
cop(legal-13, were-12)
advcl(permitted-8, legal-13)
root(ROOT-0, is-14)
complm(illegal-18, that-15)
nsubj(illegal-18, polygamy-16)
cop(illegal-18, is-17)
ccomp(is-14, illegal-18)
amod(laws-21, separate-20)
prep_under(illegal-18, laws-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB say)
                    (SBAR (IN that)
                      (S
                        (NP (PRP you))
                        (VP (VBP think)
                          (SBAR (IN that)
                            (S
                              (SBAR (IN if)
                                (S
                                  (NP (JJ gay) (NN marriage))
                                  (VP (VBZ becomes)
                                    (ADJP (JJ legal)))))
                              (, ,)
                              (NP (DT that))
                              (ADVP (RB automatically))
                              (VP (VBZ means)
                                (SBAR (IN that)
                                  (S
                                    (NP (NN polygamy))
                                    (VP (MD will)
                                      (VP (VB become)
                                        (ADJP (JJ legal))))))))))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
nsubj(trying-5, you-3)
xsubj(say-7, you-3)
aux(trying-5, are-4)
ccomp(believe-2, trying-5)
aux(say-7, to-6)
xcomp(trying-5, say-7)
complm(think-10, that-8)
nsubj(think-10, you-9)
ccomp(say-7, think-10)
complm(means-20, that-11)
mark(legal-16, if-12)
amod(marriage-14, gay-13)
nsubj(legal-16, marriage-14)
cop(legal-16, becomes-15)
advcl(means-20, legal-16)
nsubj(means-20, that-18)
advmod(means-20, automatically-19)
ccomp(think-10, means-20)
complm(legal-25, that-21)
nsubj(legal-25, polygamy-22)
aux(legal-25, will-23)
cop(legal-25, become-24)
ccomp(means-20, legal-25)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT a) (NN straw) (NN man))
      (ADVP (RB fallacy))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN presented)
              (NP (DT no) (NN evidence))
              (SBAR (IN that)
                (S
                  (NP (DT this))
                  (VP (VBZ is)
                    (ADJP (JJ true))))))))))
    (. .)))

nsubj(man-5, This-1)
cop(man-5, is-2)
det(man-5, a-3)
nn(man-5, straw-4)
root(ROOT-0, man-5)
advmod(man-5, fallacy-6)
mark(presented-11, because-8)
nsubj(presented-11, you-9)
aux(presented-11, have-10)
advcl(man-5, presented-11)
det(evidence-13, no-12)
dobj(presented-11, evidence-13)
complm(true-17, that-14)
nsubj(true-17, this-15)
cop(true-17, is-16)
ccomp(presented-11, true-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB believe)
        (PRN
          (S
            (NP (DT any) (JJ such) (NN evidence))
            (VP (VBZ exists) (, ,)
              (SBAR (IN unless)
                (S
                  (NP (PRP you))
                  (VP (VBP have)
                    (NP (DT the) (NN ability)
                      (S
                        (VP (TO to)
                          (VP (VB see)
                            (NP
                              (NP (DT the) (NN future))
                              (, ,)
                              (PP (IN in)
                                (SBAR
                                  (WHNP
                                    (WHNP (WDT which) (NN case))
                                    (ADVP (RB surely)))
                                  (S
                                    (NP (PRP you))
                                    (VP (VBP have)
                                      (S
                                        (NP (NN something))
                                        (ADJP (JJR better)
                                          (S
                                            (VP (TO to)
                                              (VP (VB do)
                                                (PP (IN with)
                                                  (NP (PRP$ your) (NN time)))
                                                (SBAR (IN than)
                                                  (S
                                                    (VP (VBP argue)
                                                      (PP (IN with)
                                                        (NP (PRP me)))))))))))))))
                              (: :)))))))))))
          (-RRB- -RRB-))
        (SBAR
          (S
            (S
              (ADVP (RB Finally))
              (, ,)
              (NP (PRP you))
              (VP (VBP say)
                (S (`` ``)
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP (DT a) (NN reason)))
                  ('' ''))
                (SBAR (IN that)
                  (S
                    (NP (JJ gay) (NN marriage))
                    (VP (VBZ is)
                      (ADJP (JJ illegal)))))))
            (, ,)
            (CC but)
            (S
              (NP (PRP you))
              (VP (VBP do) (RB not)
                (VP (VB specify)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)))))))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
det(evidence-7, any-5)
amod(evidence-7, such-6)
nsubj(exists-8, evidence-7)
parataxis(believe-4, exists-8)
mark(have-12, unless-10)
nsubj(have-12, you-11)
advcl(exists-8, have-12)
det(ability-14, the-13)
dobj(have-12, ability-14)
aux(see-16, to-15)
infmod(ability-14, see-16)
det(future-18, the-17)
dobj(see-16, future-18)
det(case-22, which-21)
dobj(have-25, case-22)
advmod(case-22, surely-23)
nsubj(have-25, you-24)
prepc_in(future-18, have-25)
nsubj(better-27, something-26)
xcomp(have-25, better-27)
aux(do-29, to-28)
xcomp(better-27, do-29)
poss(time-32, your-31)
prep_with(do-29, time-32)
mark(argue-34, than-33)
advcl(do-29, argue-34)
prep_with(argue-34, me-36)
advmod(say-42, Finally-39)
nsubj(say-42, you-41)
dep(believe-4, say-42)
expl(is-45, there-44)
ccomp(say-42, is-45)
det(reason-47, a-46)
nsubj(is-45, reason-47)
complm(illegal-53, that-49)
amod(marriage-51, gay-50)
nsubj(illegal-53, marriage-51)
cop(illegal-53, is-52)
ccomp(say-42, illegal-53)
nsubj(specify-59, you-56)
aux(specify-59, do-57)
neg(specify-59, not-58)
dep(believe-4, specify-59)
conj_but(say-42, specify-59)
dobj(is-62, what-60)
nsubj(is-62, it-61)
ccomp(specify-59, is-62)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP (DT a) (NN reason)))))
    (, ,)
    (VP (VB name)
      (NP (PRP it)))
    (. .)))

mark(is-3, If-1)
expl(is-3, there-2)
advcl(name-7, is-3)
det(reason-5, a-4)
nsubj(is-3, reason-5)
root(ROOT-0, name-7)
dobj(name-7, it-8)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NN assertion))
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ current) (NN situation))
          (VP (VBZ is)
            (ADVP (RB automatically))
            (ADJP (JJS best))
            (SBAR (IN because) (`` ``)
              (S
                (NP
                  (NP (NNS thousands))
                  (PP (IN of)
                    (NP
                      (NP (NNS years))
                      (PP (IN of)
                        (NP (JJ human) (NN history))))))
                (VP (VBP have)
                  (VP (VBN evolved)
                    (PP (TO to)
                      (NP (DT this) (NN point))))))
              ('' ''))))))
    (VP (VBZ is)
      (ADJP (JJ laughable)))
    (. .)))

poss(assertion-2, Your-1)
nsubj(laughable-25, assertion-2)
complm(best-9, that-3)
det(situation-6, the-4)
amod(situation-6, current-5)
nsubj(best-9, situation-6)
cop(best-9, is-7)
advmod(best-9, automatically-8)
dep(assertion-2, best-9)
mark(evolved-19, because-10)
nsubj(evolved-19, thousands-12)
prep_of(thousands-12, years-14)
amod(history-17, human-16)
prep_of(years-14, history-17)
aux(evolved-19, have-18)
advcl(best-9, evolved-19)
det(point-22, this-21)
prep_to(evolved-19, point-22)
cop(laughable-25, is-24)
root(ROOT-0, laughable-25)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sorry))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)))
    (. .)))

nsubj(sorry-3, I-1)
cop(sorry-3, 'm-2)
root(ROOT-0, sorry-3)
nsubj(is-7, it-6)
conj_but(sorry-3, is-7)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NNS 1940s)))
    (, ,)
    (NP
      (NP (NNS thousands))
      (PP (IN of)
        (NP
          (NP (NNS years))
          (PP (IN of)
            (NP (JJ human) (NN history))))))
    (VP (VBD had)
      (VP (VBN evolved)
        (PP (TO to)
          (NP (DT the) (NNP Holocaust)))))
    (. .)))

det(1940s-3, the-2)
prep_in(evolved-12, 1940s-3)
nsubj(evolved-12, thousands-5)
prep_of(thousands-5, years-7)
amod(history-10, human-9)
prep_of(years-7, history-10)
aux(evolved-12, had-11)
root(ROOT-0, evolved-12)
det(Holocaust-15, the-14)
prep_to(evolved-12, Holocaust-15)

(ROOT
  (SQ (NNP Does)
    (NP (DT that))
    (VP (VB mean)
      (SBAR
        (S
          (NP (DT the) (NNP Holocaust))
          (VP (VBD was)
            (ADJP (JJ good))))))
    (. ?)))

dep(mean-3, Does-1)
nsubj(mean-3, that-2)
root(ROOT-0, mean-3)
det(Holocaust-5, the-4)
nsubj(good-7, Holocaust-5)
cop(good-7, was-6)
ccomp(mean-3, good-7)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ true) (NN history))
      (PP (IN of)
        (NP (NN humanity))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN tale))
        (PP (IN of)
          (NP (NNS ups)
            (CC and)
            (NNS downs)))
        (, ,)
        (PP (IN of)
          (NP (NN progress)
            (CC and)
            (NNS regress)))))
    (. .)))

det(history-3, The-1)
amod(history-3, true-2)
nsubj(tale-8, history-3)
prep_of(history-3, humanity-5)
cop(tale-8, is-6)
det(tale-8, a-7)
root(ROOT-0, tale-8)
prep_of(tale-8, ups-10)
prep_of(tale-8, downs-12)
conj_and(ups-10, downs-12)
prep_of(tale-8, progress-15)
prep_of(tale-8, regress-17)
conj_and(progress-15, regress-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NN right))
      (PP (IN for)
        (NP (PRP me)))
      (S
        (VP (TO to)
          (VP (VB marry)
            (NP (PRP$ my) (NN boyfriend))))))
    (VP (VBD was)
      (ADVP (RB also))
      (NP (RB once) (DT a) (JJ NEW) (NN right)))
    (. .)))

det(right-2, The-1)
nsubj(right-14, right-2)
prep_for(right-2, me-4)
aux(marry-6, to-5)
infmod(right-2, marry-6)
poss(boyfriend-8, my-7)
dobj(marry-6, boyfriend-8)
cop(right-14, was-9)
advmod(right-14, also-10)
advmod(right-14, once-11)
det(right-14, a-12)
amod(right-14, NEW-13)
root(ROOT-0, right-14)

(ROOT
  (S
    (S
      (NP (NNP Humanity))
      (VP (VBZ has)
        (VP (VBN made)
          (NP (DT some) (JJ serious) (JJ bad) (NNS calls)))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBD seemed)
        (PP (IN like)
          (NP (JJ good) (NNS ideas)))
        (PP (TO to)
          (NP
            (NP (DT the) (NNS people))
            (PP (IN of)
              (NP (DT the) (NN time)))))))
    (. .)))

nsubj(made-3, Humanity-1)
aux(made-3, has-2)
root(ROOT-0, made-3)
det(calls-7, some-4)
amod(calls-7, serious-5)
amod(calls-7, bad-6)
dobj(made-3, calls-7)
nsubj(seemed-11, they-10)
conj_but(made-3, seemed-11)
amod(ideas-14, good-13)
prep_like(seemed-11, ideas-14)
det(people-17, the-16)
prep_to(seemed-11, people-17)
det(time-20, the-19)
prep_of(people-17, time-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (S
          (NP (PRP you))
          (ADVP (RB truly))
          (VP (VBP believe)
            (SBAR (IN that)
              (S
                (NP (DT the) (NN status) (NN quo))
                (VP (VBZ is)
                  (ADJP (JJ good)))))))
        (CC and)
        (S
          (NP (DT the) (JJ current) (NN change))
          (VP (VBZ is)
            (ADJP (JJ bad))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP need)
      (NP (DT a) (JJR better) (NN argument))
      (SBAR (IN than) (`` ``)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (ADJP (JJ good))
            (SBAR (IN because)
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (SBAR
                    (WHADVP (WRB how))
                    (S
                      (NP (NNS things))
                      (VP (VBP are)))))))))))
    (. .)))

mark(believe-4, If-1)
nsubj(believe-4, you-2)
advmod(believe-4, truly-3)
advcl(need-19, believe-4)
complm(good-10, that-5)
det(quo-8, the-6)
nn(quo-8, status-7)
nsubj(good-10, quo-8)
cop(good-10, is-9)
ccomp(believe-4, good-10)
det(change-14, the-12)
amod(change-14, current-13)
nsubj(bad-16, change-14)
cop(bad-16, is-15)
conj_and(believe-4, bad-16)
advcl(need-19, bad-16)
nsubj(need-19, you-18)
root(ROOT-0, need-19)
det(argument-22, a-20)
amod(argument-22, better-21)
dobj(need-19, argument-22)
mark(good-27, than-23)
nsubj(good-27, this-25)
cop(good-27, is-26)
advcl(need-19, good-27)
mark('s-30, because-28)
nsubj('s-30, it-29)
advcl(good-27, 's-30)
advmod(are-33, how-31)
nsubj(are-33, things-32)
ccomp('s-30, are-33)

(ROOT
  (S ('' '') (-LRB- -LRB-)
    (NP (IN if) (NN you))
    (PRN
      (S
        (VP (VB want)
          (PP (TO to)))))
    (VP (VBP be)
      (VP (VBN taken)
        (NP
          (NP
            (NP (NNP seriously))
            (, ,)
            (ADJP (JJ anyway))
            (-RRB- -RRB-))
          (ADJP (CD 7)))))
    (. .)))

amod(you-4, if-3)
nsubjpass(taken-8, you-4)
parataxis(taken-8, want-5)
prep(want-5, to-6)
auxpass(taken-8, be-7)
root(ROOT-0, taken-8)
dobj(taken-8, seriously-9)
amod(seriously-9, anyway-11)
amod(seriously-9, 7-13)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (`` ``) (NN situation) ('' ''))
        (PP (IN of)
          (NP
            (NP (DT the) (NNS gays))
            (SBAR
              (WHPP (TO to)
                (WHNP (WDT which)))
              (S
                (NP (PRP you))
                (VP (VBP refer))))))))
    (. ?)))

attr(is-2, What-1)
root(ROOT-0, is-2)
det(situation-5, the-3)
nsubj(is-2, situation-5)
det(gays-9, the-8)
prep_of(situation-5, gays-9)
rel(refer-13, which-11)
nsubj(refer-13, you-12)
rcmod(gays-9, refer-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB also))
      (ADJP (JJ interesting)
        (PP (TO to)
          (NP (PRP me))))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBD put)
            (NP (DT the) (NN word) (NN compassion))
            (PP (IN in)
              (NP (NNS quotes)))
            (, ,)
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (VBP see)
                  (NP
                    (NP (DT no) (NN compassion))
                    (PP (IN for)
                      (NP
                        (NP (NNS gays))
                        (PRN (-LRB- -LRB-)
                          (CC and)
                          (NP
                            (NP (PRP$ their) (JJ mysterious))
                            (NP (`` ``) (NN situation) ('' '')))
                          (-RRB- -RRB-)))))
                  (PP (IN on)
                    (NP
                      (NP (NN display))
                      (PP (IN in)
                        (NP (PRP$ your) (NN argument))))))))))))
    (. .)))

nsubj(interesting-4, It-1)
cop(interesting-4, 's-2)
advmod(interesting-4, also-3)
root(ROOT-0, interesting-4)
prep_to(interesting-4, me-6)
complm(put-9, that-7)
nsubj(put-9, you-8)
ccomp(interesting-4, put-9)
det(compassion-12, the-10)
nn(compassion-12, word-11)
dobj(put-9, compassion-12)
prep_in(put-9, quotes-14)
mark(see-18, as-16)
nsubj(see-18, I-17)
advcl(put-9, see-18)
det(compassion-20, no-19)
dobj(see-18, compassion-20)
prep_for(compassion-20, gays-22)
dep(mysterious-26, and-24)
poss(mysterious-26, their-25)
dep(gays-22, mysterious-26)
dep(mysterious-26, situation-28)
prep_on(see-18, display-32)
poss(argument-35, your-34)
prep_in(display-32, argument-35)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (S
      (NP (PRP I))
      (VP
        (VP (VBP am)
          (ADJP (JJ open-minded)))
        (CC and)
        (VP (VBP realize)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP
                (VP (VBP are)
                  (ADVP (RB probably))
                  (VP (VBG telling)
                    (NP (DT the) (NN truth))))
                (CC and)
                (VP (VBP are) (RB not)
                  (NP (RB just) (DT some) (NN bigot)))))))))
    (, ,) (IN so)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (MD 'd)
            (VP (VB like)
              (S
                (VP (TO to)
                  (VP (VB provide)
                    (NP
                      (NP (NNS examples))
                      (PP (IN of)
                        (NP (NNS times)))))))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (VBP have)
                    (VP (VBN demonstrated)
                      (NP
                        (NP (NN compassion))
                        (PP (IN for)
                          (NP (NNS homosexuals))))))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD would)
        (VP (VB be)
          (ADJP (JJ delighted)
            (S
              (VP (TO to)
                (VP (VB hear)
                  (NP (DT that) (NN evidence))
                  (ADVP (RB as) (RB well)))))))))
    (. .)))

advmod(open-minded-5, However-1)
nsubj(open-minded-5, I-3)
nsubj(realize-7, I-3)
cop(open-minded-5, am-4)
root(ROOT-0, open-minded-5)
conj_and(open-minded-5, realize-7)
complm(telling-12, that-8)
nsubj(telling-12, you-9)
aux(telling-12, are-10)
advmod(telling-12, probably-11)
ccomp(realize-7, telling-12)
det(truth-14, the-13)
dobj(telling-12, truth-14)
cop(bigot-20, are-16)
neg(bigot-20, not-17)
advmod(bigot-20, just-18)
det(bigot-20, some-19)
ccomp(realize-7, bigot-20)
conj_and(telling-12, bigot-20)
dep(open-minded-5, so-22)
mark(like-26, if-23)
nsubj(like-26, you-24)
xsubj(provide-28, you-24)
aux(like-26, 'd-25)
advcl(delighted-43, like-26)
aux(provide-28, to-27)
xcomp(like-26, provide-28)
dobj(provide-28, examples-29)
prep_of(examples-29, times-31)
advmod(demonstrated-35, when-32)
nsubj(demonstrated-35, you-33)
aux(demonstrated-35, have-34)
advcl(like-26, demonstrated-35)
dobj(demonstrated-35, compassion-36)
prep_for(compassion-36, homosexuals-38)
nsubj(delighted-43, I-40)
aux(delighted-43, would-41)
cop(delighted-43, be-42)
ccomp(open-minded-5, delighted-43)
aux(hear-45, to-44)
xcomp(delighted-43, hear-45)
det(evidence-47, that-46)
dobj(hear-45, evidence-47)
advmod(well-49, as-48)
mwe(well-49, as-48)
advmod(hear-45, well-49)

(ROOT
  (S
    (NP (DT No) (NN problem))
    (, ,)
    (NP (PRP I))
    (ADVP (RB always))
    (VP (VBP make)
      (NP
        (NP (NN time))
        (PP (IN for)
          (NP
            (ADJP (JJ courteous)
              (CC and)
              (JJ rational))
            (NN discussion)))))
    (. .)))

det(problem-2, No-1)
nsubj(make-6, problem-2)
nsubj(make-6, I-4)
advmod(make-6, always-5)
root(ROOT-0, make-6)
dobj(make-6, time-7)
amod(discussion-12, courteous-9)
conj_and(courteous-9, rational-11)
amod(discussion-12, rational-11)
prep_for(time-7, discussion-12)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NN claim))
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBP are)
            (NP
              (NP
                (NP (NNS differences))
                (PP (IN in)
                  (NP (NN gender))))
              (CONJP (CC but)
                (RB not))
              (NP (NN race)))))))
    (VP (VBP lead)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB think)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (VP (VBG talking)
                    (PP (IN about)
                      (NP (NNS genetics)))))))))))
    (. .)))

poss(claim-2, Your-1)
nsubj(lead-12, claim-2)
complm(are-5, that-3)
expl(are-5, there-4)
dep(claim-2, are-5)
nsubj(are-5, differences-6)
prep_in(differences-6, gender-8)
nsubj(are-5, race-11)
conj_negcc(differences-6, race-11)
root(ROOT-0, lead-12)
nsubj(think-15, me-13)
aux(think-15, to-14)
xcomp(lead-12, think-15)
nsubj(talking-18, you-16)
aux(talking-18, are-17)
ccomp(think-15, talking-18)
prep_about(talking-18, genetics-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP 'm)
          (VP (VBG understanding)
            (NP (PRP$ your) (NN argument))
            (ADVP (RB correctly))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBG saying)
              (SBAR (IN that)
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADJP (JJ fine)
                      (S
                        (VP (TO to)
                          (VP (VB treat)
                            (NP (NNS groups))
                            (ADVP (RB differently))
                            (PP (IN under)
                              (NP (DT the) (NN law))))))))))
              (SBAR (IN if)
                (S
                  (NP (PRP$ their) (NN DNA))
                  (VP (VBZ is)
                    (ADJP (JJ different))))))))))
    (. .)))

mark(understanding-4, If-1)
nsubj(understanding-4, I-2)
aux(understanding-4, 'm-3)
advcl(seem-10, understanding-4)
poss(argument-6, your-5)
dobj(understanding-4, argument-6)
advmod(understanding-4, correctly-7)
nsubj(seem-10, you-9)
xsubj(saying-13, you-9)
root(ROOT-0, seem-10)
aux(saying-13, to-11)
aux(saying-13, be-12)
xcomp(seem-10, saying-13)
complm(fine-17, that-14)
nsubj(fine-17, it-15)
cop(fine-17, 's-16)
ccomp(saying-13, fine-17)
aux(treat-19, to-18)
xcomp(fine-17, treat-19)
dobj(treat-19, groups-20)
advmod(treat-19, differently-21)
det(law-24, the-23)
prep_under(treat-19, law-24)
mark(different-29, if-25)
poss(DNA-27, their-26)
nsubj(different-29, DNA-27)
cop(different-29, is-28)
advcl(saying-13, different-29)

(ROOT
  (NP
    (NP (NNP Am) (NNP I))
    (VP (VBG understanding)
      (NP (PRP$ your) (NN argument))
      (ADVP (RB correctly)))
    (. ?)))

nn(I-2, Am-1)
root(ROOT-0, I-2)
partmod(I-2, understanding-3)
poss(argument-5, your-4)
dobj(understanding-3, argument-5)
advmod(understanding-3, correctly-6)

(ROOT
  (S
    (NP (DT That))
    (ADVP (RB also))
    (VP (VBZ troubles)
      (NP (PRP me)))
    (. .)))

nsubj(troubles-3, That-1)
advmod(troubles-3, also-2)
root(ROOT-0, troubles-3)
dobj(troubles-3, me-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB like)
        (NP
          (NP (DT the) (NN idea))
          (PP (IN of)
            (S
              (VP (VBG establishing)
                (NP (JJ legal) (NN precedent))
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (JJ equal) (NN protection))
                      (PP (IN under)
                        (NP (DT the) (NN law))))
                    (VP (MD can)
                      (VP (VB be)
                        (VP (VBN discarded)
                          (PP (VBN based)
                            (PP (IN on)
                              (NP (NNS genetics)))))))))))))))
    (. .)))

nsubj(like-4, I-1)
aux(like-4, do-2)
neg(like-4, not-3)
root(ROOT-0, like-4)
det(idea-6, the-5)
dobj(like-4, idea-6)
prepc_of(idea-6, establishing-8)
amod(precedent-10, legal-9)
dobj(establishing-8, precedent-10)
complm(discarded-19, that-11)
amod(protection-13, equal-12)
nsubjpass(discarded-19, protection-13)
det(law-16, the-15)
prep_under(protection-13, law-16)
aux(discarded-19, can-17)
auxpass(discarded-19, be-18)
ccomp(establishing-8, discarded-19)
prepc_based_on(discarded-19, on-21)
pobj(discarded-19, genetics-22)

(ROOT
  (S
    (ADVP (RB Surely))
    (NP (PRP you))
    (VP (MD can)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (DT that))
            (VP (MD might)
              (VP (VB be)
                (VP (VBN abused))))))))
    (. .)))

advmod(see-4, Surely-1)
nsubj(see-4, you-2)
aux(see-4, can-3)
root(ROOT-0, see-4)
advmod(abused-9, how-5)
nsubjpass(abused-9, that-6)
aux(abused-9, might-7)
auxpass(abused-9, be-8)
ccomp(see-4, abused-9)

(ROOT
  (FRAG
    (NP (CD 6))
    (. .)))

root(ROOT-0, 6-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB understand)
        (SBAR
          (WHADVP (WRB how))
          (S
            (S
              (VP (VBG allowing)
                (NP (JJ homosexual) (NNS couples))
                (S
                  (VP (TO to)
                    (VP (VB marry))))))
            (VP (VBZ implies)
              (SBAR (IN that)
                (S
                  (NP (NNS men)
                    (CC and)
                    (NNS women))
                  (VP (VBP are)
                    (ADJP (JJ identical))))))))))
    (. .)))

nsubj(understand-4, I-1)
aux(understand-4, do-2)
neg(understand-4, not-3)
root(ROOT-0, understand-4)
advmod(implies-11, how-5)
csubj(implies-11, allowing-6)
amod(couples-8, homosexual-7)
dobj(allowing-6, couples-8)
aux(marry-10, to-9)
xcomp(allowing-6, marry-10)
ccomp(understand-4, implies-11)
complm(identical-17, that-12)
nsubj(identical-17, men-13)
conj_and(men-13, women-15)
nsubj(identical-17, women-15)
cop(identical-17, are-16)
ccomp(implies-11, identical-17)

