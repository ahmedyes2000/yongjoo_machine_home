(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's) (RB not)
        (ADVP (RB really))
        (SBAR (IN that)
          (S
            (NP (NNS gays))
            (VP (MD should)
              (VP (VB adopt)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (SBAR (RB just) (IN that)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB care)))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
neg('s-2, not-3)
advmod('s-2, really-4)
complm(adopt-8, that-5)
nsubj(adopt-8, gays-6)
aux(adopt-8, should-7)
ccomp('s-2, adopt-8)
nsubj('s-12, it-11)
conj_but('s-2, 's-12)
advmod(care-18, just-13)
dep(care-18, that-14)
nsubj(care-18, I-15)
aux(care-18, do-16)
neg(care-18, n't-17)
ccomp('s-12, care-18)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (S
          (ADVP (RB long) (RB as))
          (NP (DT the) (NNS parents))
          (VP (VBP are) (RB n't)
            (VP (VBN messed)
              (PRT (RP up)))))
        (CC and)
        (S
          (NP (DT the) (NN kid))
          (VP (VBZ comes)
            (PRT (RP out))
            (PP (IN of)
              (NP (NN childhood)))
            (ADVP (UH OK))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (NP (PRP$ my) (NN place)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN whether)
                (S
                  (NP (PRP they))
                  (VP (MD can)
                    (CC or)
                    (MD ca) (RB n't)
                    (VP (VB adopt))))))))))
    (. .)))

mark(messed-8, As-1)
advmod(as-3, long-2)
advmod(messed-8, as-3)
det(parents-5, the-4)
nsubjpass(messed-8, parents-5)
auxpass(messed-8, are-6)
neg(messed-8, n't-7)
advcl(place-23, messed-8)
prt(messed-8, up-9)
det(kid-12, the-11)
nsubj(comes-13, kid-12)
conj_and(messed-8, comes-13)
advcl(place-23, comes-13)
prep_out_of(comes-13, childhood-16)
advmod(comes-13, OK-17)
nsubj(place-23, it-19)
cop(place-23, 's-20)
neg(place-23, not-21)
poss(place-23, my-22)
root(ROOT-0, place-23)
aux(say-25, to-24)
infmod(place-23, say-25)
complm(adopt-32, whether-26)
nsubj(adopt-32, they-27)
aux(adopt-32, can-28)
ccomp(say-25, ca-30)
aux(adopt-32, ca-30)
conj_or(adopt-32, ca-30)
neg(adopt-32, n't-31)
ccomp(say-25, adopt-32)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (ADVP (RB really))
      (NP
        (NP (DT the) (JJ only) (NN thing))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD should)
              (VP (VB matter)
                (PP (TO to)
                  (NP (NN anyone)))))))))
    (. .)))

nsubj(thing-6, That-1)
cop(thing-6, 's-2)
advmod(thing-6, really-3)
det(thing-6, the-4)
amod(thing-6, only-5)
root(ROOT-0, thing-6)
nsubj(matter-9, thing-6)
aux(matter-9, should-8)
rcmod(thing-6, matter-9)
prep_to(matter-9, anyone-11)

