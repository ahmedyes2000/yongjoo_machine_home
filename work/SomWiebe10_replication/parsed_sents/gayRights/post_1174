(ROOT
  (S
    (NP
      (NP (JJS Most))
      (PP (IN of)
        (NP (NNPS Americans) (NNP don) (NNP t))))
    (VP (VBP want)
      (SBAR
        (SBAR
          (S
            (VP (TO to)
              (VP (VB legalize)
                (NP (JJ gay) (NN marriage))))))
        (, ,)
        (CC but)
        (SBAR
          (WHADVP (WRB how))
          (S
            (VP (VBZ does)
              (S
                (NP (DT that))
                (VP (VB affect)
                  (NP
                    (NP (DT all))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP oppose)
                          (NP (PRP it)))))))))))))
    (. ?)))

nsubj(want-6, Most-1)
nn(t-5, Americans-3)
nn(t-5, don-4)
prep_of(Most-1, t-5)
root(ROOT-0, want-6)
aux(legalize-8, to-7)
dep(want-6, legalize-8)
amod(marriage-10, gay-9)
dobj(legalize-8, marriage-10)
advmod(does-14, how-13)
dep(want-6, does-14)
conj_but(legalize-8, does-14)
nsubj(affect-16, that-15)
ccomp(does-14, affect-16)
dobj(affect-16, all-17)
nsubj(oppose-19, all-17)
rcmod(all-17, oppose-19)
dobj(oppose-19, it-20)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (JJ gay) (NNS couples))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB get)
                (ADJP (JJ married))))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (ADVP (RB up)
          (PP (TO to)
            (NP (DT the) (JJ whole) (NN world))))
        (S
          (VP (TO to)
            (VP (VB decide)
              (SBAR (IN whether)
                (CC or)
                (RB not)
                (S
                  (NP (PRP they))
                  (VP (MD can)))))))))
    (. ?)))

mark(want-4, If-1)
amod(couples-3, gay-2)
nsubj(want-4, couples-3)
xsubj(married-7, couples-3)
advcl(is-10, want-4)
aux(married-7, to-5)
dep(married-7, get-6)
xcomp(want-4, married-7)
advmod(is-10, why-9)
root(ROOT-0, is-10)
nsubj(is-10, it-11)
advmod(it-11, up-12)
det(world-16, the-14)
amod(world-16, whole-15)
prep_to(up-12, world-16)
aux(decide-18, to-17)
infmod(it-11, decide-18)
complm(can-23, whether-19)
ccomp(decide-18, not-21)
conj_or(can-23, not-21)
nsubj(can-23, they-22)
ccomp(decide-18, can-23)

(ROOT
  (PP (TO To)
    (NP
      (NP
        (NP (DT all) (VBG opposing))
        (CC and)
        (NP (JJ opposite-sex) (NNS couples)))
      (: ;)
      (SBARQ
        (WHADVP (WRB why))
        (SQ (MD should)
          (NP (PRP you))
          (VP (VB get)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP
                    (ADVP (RB happily))
                    (VBN married)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN one))
                        (SBAR
                          (S
                            (S
                              (NP (PRP you))
                              (VP (VBP love)))
                            (CC and)
                            (S
                              (NP (JJ same) (NN sex) (NNS couples))
                              (VP (VBP are)
                                (VP (VBN denied)
                                  (NP
                                    (NP (DT the) (NN right))
                                    (PP (IN in)
                                      (NP (JJS most) (NNS states)))))))))))))))))
        (. ?)))))

root(ROOT-0, To-1)
pobj(To-1, all-2)
amod(all-2, opposing-3)
amod(couples-6, opposite-sex-5)
pobj(To-1, couples-6)
conj_and(all-2, couples-6)
advmod(get-11, why-8)
aux(get-11, should-9)
nsubj(get-11, you-10)
xsubj(married-15, you-10)
dep(all-2, get-11)
aux(married-15, to-12)
auxpass(married-15, be-13)
advmod(married-15, happily-14)
xcomp(get-11, married-15)
det(one-18, the-17)
prep_to(married-15, one-18)
nsubj(love-20, you-19)
rcmod(one-18, love-20)
amod(couples-24, same-22)
nn(couples-24, sex-23)
nsubjpass(denied-26, couples-24)
auxpass(denied-26, are-25)
rcmod(one-18, denied-26)
conj_and(love-20, denied-26)
det(right-28, the-27)
dobj(denied-26, right-28)
amod(states-31, most-30)
prep_in(right-28, states-31)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (NP
          (NP
            (QP (CC or)
              (RB not)))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP think)
                (S
                  (VP (VBG being)
                    (ADJP (JJ gay))))))))
        (VP (VBZ is)
          (ADJP (JJ wrong)))))
    (NP (NN doesn) (NN t))
    (VP (VBP matter))
    (. .)))

complm(wrong-9, Whether-1)
cc(not-3, or-2)
dobj(think-5, not-3)
nsubj(wrong-9, not-3)
nsubj(think-5, you-4)
rcmod(not-3, think-5)
cop(gay-7, being-6)
xcomp(think-5, gay-7)
cop(wrong-9, is-8)
ccomp(matter-12, wrong-9)
nn(t-11, doesn-10)
nsubj(matter-12, t-11)
root(ROOT-0, matter-12)

(ROOT
  (S
    (NP (EX There))
    (VP (MD will)
      (ADVP (RB still))
      (VP (VB be)
        (NP (JJ gay) (NNS couples))
        (SBAR (RB so)
          (WHADVP (WRB why) (RB not))
          (S
            (VP (VBD let)
              (SBAR
                (S
                  (NP (PRP them))
                  (VP (VBP live)
                    (NP (NN life))
                    (PP (IN as)
                      (ADVP (RB happily)))
                    (SBAR (IN as)
                      (S
                        (NP (PRP you))
                        (VP (VBP are))))))))))))
    (. .)))

expl(couples-6, There-1)
aux(couples-6, will-2)
advmod(couples-6, still-3)
cop(couples-6, be-4)
amod(couples-6, gay-5)
root(ROOT-0, couples-6)
advmod(let-10, so-7)
advmod(not-9, why-8)
advmod(let-10, not-9)
dep(couples-6, let-10)
nsubj(live-12, them-11)
ccomp(let-10, live-12)
dobj(live-12, life-13)
prep(live-12, as-14)
pcomp(as-14, happily-15)
mark(are-18, as-16)
nsubj(are-18, you-17)
advcl(live-12, are-18)

