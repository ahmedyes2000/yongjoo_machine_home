(ROOT
  (FRAG
    (FRAG (CC But)
      (RB then)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ happens)
            (SBAR (IN if)
              (S
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (NN family))
                      (PP (IN with)
                        (NP
                          (NP (DT a) (NN mother))
                          (CC and)
                          (NP (DT a) (NN father)))))))
                (, ,)
                (CC but)
                (, ,)
                (S
                  (INTJ (UH say))
                  (, ,)
                  (S
                    (NP (PRP they))
                    (VP (VBP get)
                      (ADJP (VBN divorced))))
                  (, ,)
                  (CC or)
                  (S
                    (NP (DT a) (NN parent))
                    (VP (VBZ dies))))))))))
    (, ,)
    (CC or)
    (FRAG
      (NP (NN something))
      (, ,)
      (CC and)
      (S
        (NP (RB then))
        (ADVP (RB there))
        (VP (VBZ is)
          (NP (RB only) (CD one) (NN parent))))
      (. ?))))

dep(then-2, But-1)
root(ROOT-0, then-2)
nsubj(happens-4, what-3)
nsubj(is-7, what-3)
dep(then-2, happens-4)
mark(is-7, if-5)
expl(is-7, there-6)
advcl(happens-4, is-7)
det(family-9, a-8)
nsubj(is-7, family-9)
det(mother-12, a-11)
prep_with(family-9, mother-12)
det(father-15, a-14)
prep_with(family-9, father-15)
conj_and(mother-12, father-15)
dep(divorced-23, say-19)
nsubjpass(divorced-23, they-21)
auxpass(divorced-23, get-22)
advcl(happens-4, divorced-23)
conj_but(is-7, divorced-23)
det(parent-27, a-26)
nsubj(dies-28, parent-27)
conj_but(is-7, dies-28)
conj_or(divorced-23, dies-28)
dep(then-2, or-30)
dep(then-2, something-31)
dep(something-31, and-33)
nsubj(parent-39, then-34)
advmod(parent-39, there-35)
cop(parent-39, is-36)
advmod(parent-39, only-37)
num(parent-39, one-38)
dep(something-31, parent-39)

(ROOT
  (SQ (VBZ Is)
    (NP (DT the) (NN child))
    (VP (VBG going)
      (S
        (VP (TO to)
          (VP
            (VP (VB come)
              (PRT (RP out))
              (PP (IN of)
                (NP
                  (NP (NN childhood))
                  (`` ``)
                  (VP (VBN messed)
                    (PRT (RP up))))))
            (, ,) ('' '')
            (CC or)
            (VP
              (ADJP (JJ different))
              (, ,)
              (SBAR (IN like)
                (S
                  (NP (PRP you))
                  (VP (VBP say)
                    (SBAR
                      (S
                        (VP (MD would)
                          (VP (VB happen)))))))))))))
    (. ?)))

aux(going-4, Is-1)
det(child-3, the-2)
nsubj(going-4, child-3)
xsubj(come-6, child-3)
root(ROOT-0, going-4)
aux(come-6, to-5)
xcomp(going-4, come-6)
prep_out_of(come-6, childhood-9)
partmod(childhood-9, messed-11)
prt(messed-11, up-12)
xcomp(going-4, different-16)
conj_or(come-6, different-16)
mark(say-20, like-18)
nsubj(say-20, you-19)
advcl(different-16, say-20)
aux(happen-22, would-21)
ccomp(say-20, happen-22)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (RB plenty))
          (PP (IN of)
            (NP
              (NP (NNS examples))
              (PP (IN of)
                (NP
                  (NP (JJ successful) (, ,) (JJ well-rounded) (NNS adults))
                  (VP (VBG coming)
                    (PRT (RP out))
                    (PP (IN of)
                      (NP
                        (NP (NNS homes))
                        (PP (IN of)
                          (NP
                            (NP (DT all) (NNS types))
                            (, ,)
                            (NP
                              (NP (NNS ones))
                              (PP (IN with)
                                (NP (RB only) (DT a) (NN father))))))))
                    (, ,)
                    (ADJP (JJ many)
                      (PP (IN with)
                        (NP (RB only) (DT a) (NN mother))))))))))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB see)
          (NP (DT the) (NN difference))
          (, ,)
          (PP (IN in)
            (NP (PRP$ your) (NN example)))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (JJ single) (NN parent))
                  (CC or)
                  (NP
                    (NP (CD two) (NNS parents))
                    (PP (IN of)
                      (NP (DT the) (JJ same) (NN gender)))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, plenty-3)
prep_of(plenty-3, examples-5)
amod(adults-10, successful-7)
amod(adults-10, well-rounded-9)
prep_of(examples-5, adults-10)
partmod(adults-10, coming-11)
prep_out_of(coming-11, homes-14)
det(types-17, all-16)
prep_of(homes-14, types-17)
appos(types-17, ones-19)
advmod(father-23, only-21)
det(father-23, a-22)
prep_with(ones-19, father-23)
acomp(coming-11, many-25)
advmod(mother-29, only-27)
det(mother-29, a-28)
prep_with(many-25, mother-29)
dep(are-2, so-31)
nsubj(see-35, I-32)
aux(see-35, do-33)
neg(see-35, n't-34)
ccomp(are-2, see-35)
det(difference-37, the-36)
dobj(see-35, difference-37)
poss(example-41, your-40)
prep_in(see-35, example-41)
mark(is-45, if-43)
expl(is-45, there-44)
advcl(see-35, is-45)
det(parent-48, a-46)
amod(parent-48, single-47)
nsubj(is-45, parent-48)
num(parents-51, two-50)
nsubj(is-45, parents-51)
conj_or(parent-48, parents-51)
det(gender-55, the-53)
amod(gender-55, same-54)
prep_of(parents-51, gender-55)

