(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP (DT a)
        (ADJP (JJ musing)
          (PP (IN from)
            (NP (PRP$ my) (CD 86) (NN yr))))
        (JJ old) (NN mother)))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(mother-10, a-3)
amod(mother-10, musing-4)
poss(yr-8, my-6)
num(yr-8, 86-7)
prep_from(musing-4, yr-8)
amod(mother-10, old-9)
dobj(have-2, mother-10)

(ROOT
  (S
    (S
      (SBAR (IN Since)
        (S
          (NP (DT the) (JJ Christian) (NN argument))
          (VP (VBZ is)
            (SBAR (IN that)
              (S
                (NP (NNS Gay))
                (VP (VBZ is)
                  (NP (DT a) (NN choice))))))))
      (, ,)
      (NP (PRP it))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN overcome)
            (CC and)
            (VBN whatnot)))))
    (: ...)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (NNP NOT))
          (VP (VBN proven)
            (S
              (VP (TO to)
                (VP (VB be)
                  (PP (IN by)
                    (NP
                      (NP (NN birth))
                      (PRN (-LRB- -LRB-)
                        (NP (NNP whatever))
                        (-RRB- -RRB-))
                      (: ...)
                      (NP (NN ok)))))))))
        (, ,)
        (SBAR (IN so)
          (S
            (NP (PRP IT))
            (VP (VBZ IS)
              (VP (VBN proven)
                (S
                  (NP (PRP we))
                  (RB all)
                  (VP (VB have)
                    (NP
                      (NP (DT a) (JJ male) (NN side))
                      (CC AND)
                      (NP
                        (NP (DT a) (JJ female) (NN side))
                        (PP (IN of)
                          (NP (DT the) (NN brain)))))))))))
        (PRN (-LRB- -LRB-)
          (S
            (NP (NN everybody))
            (VP (VBP agree)))
          (. ?) (-RRB- -RRB-))))))

mark(is-5, Since-1)
det(argument-4, the-2)
amod(argument-4, Christian-3)
nsubj(is-5, argument-4)
advcl(overcome-15, is-5)
complm(choice-10, that-6)
nsubj(choice-10, Gay-7)
cop(choice-10, is-8)
det(choice-10, a-9)
ccomp(is-5, choice-10)
nsubjpass(overcome-15, it-12)
nsubjpass(whatnot-17, it-12)
aux(overcome-15, can-13)
auxpass(overcome-15, be-14)
root(ROOT-0, overcome-15)
conj_and(overcome-15, whatnot-17)
nsubj(NOT-21, it-19)
cop(NOT-21, 's-20)
parataxis(overcome-15, NOT-21)
xsubj(be-24, NOT-21)
partmod(NOT-21, proven-22)
aux(be-24, to-23)
xcomp(proven-22, be-24)
prep_by(be-24, birth-26)
appos(birth-26, whatever-28)
dep(birth-26, ok-31)
mark(proven-36, so-33)
nsubjpass(proven-36, IT-34)
auxpass(proven-36, IS-35)
advcl(NOT-21, proven-36)
nsubj(have-39, we-37)
advmod(have-39, all-38)
ccomp(proven-36, have-39)
det(side-42, a-40)
amod(side-42, male-41)
dobj(have-39, side-42)
det(side-46, a-44)
amod(side-46, female-45)
dobj(have-39, side-46)
conj_and(side-42, side-46)
det(brain-49, the-48)
prep_of(side-46, brain-49)
nsubj(agree-52, everybody-51)
parataxis(NOT-21, agree-52)

(ROOT
  (S (IN so)
    (NP (DT the) (JJ real) (NN difference))
    (VP (VBZ is)
      (NP (PRP$ our) (JJ physical) (NNS bodies)))
    (. .)))

dep(bodies-8, so-1)
det(difference-4, the-2)
amod(difference-4, real-3)
nsubj(bodies-8, difference-4)
cop(bodies-8, is-5)
poss(bodies-8, our-6)
amod(bodies-8, physical-7)
root(ROOT-0, bodies-8)

(ROOT
  (S
    (VP (VBN Made)
      (ADVP (RB differently))
      (SBAR (IN so)
        (S
          (NP (PRP we))
          (VP (VBP are)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB carry)
                    (PRT (RP out))
                    (NP
                      (NP (JJ different) (NNS tasks))
                      (PP (IN in)
                        (NP (DT the) (NN world))))))))))))
    (. .)))

root(ROOT-0, Made-1)
advmod(Made-1, differently-2)
mark(able-6, so-3)
nsubj(able-6, we-4)
cop(able-6, are-5)
advcl(Made-1, able-6)
aux(carry-8, to-7)
xcomp(able-6, carry-8)
prt(carry-8, out-9)
amod(tasks-11, different-10)
dobj(carry-8, tasks-11)
det(world-14, the-13)
prep_in(tasks-11, world-14)

(ROOT
  (FRAG (RB Not)
    (VP (TO to)
      (VP (VB say)
        (SBAR
          (S
            (NP (DT those))
            (VP (VBP are)
              (NP
                (NP (DT THE) (JJ ONLY) (NNS tasks))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP
                      (VP (MD can)
                        (VP (VB do)))
                      (CC or)
                      (VP (VBP are)
                        (VP (VBN allowed)
                          (S
                            (VP (TO to)
                              (VP (VB do)))))))))))))))
    (. .)))

root(ROOT-0, Not-1)
aux(say-3, to-2)
dep(Not-1, say-3)
nsubj(tasks-8, those-4)
cop(tasks-8, are-5)
det(tasks-8, THE-6)
amod(tasks-8, ONLY-7)
ccomp(say-3, tasks-8)
nsubj(do-11, we-9)
nsubjpass(allowed-14, we-9)
xsubj(do-16, we-9)
aux(do-11, can-10)
rcmod(tasks-8, do-11)
auxpass(allowed-14, are-13)
rcmod(tasks-8, allowed-14)
conj_or(do-11, allowed-14)
aux(do-16, to-15)
xcomp(allowed-14, do-16)

(ROOT
  (S
    (NP
      (NP (NNP Kinda))
      (PP (IN like)
        (NP
          (NP (DT the) (JJ ONLY) (NN use))
          (PP (IN of)
            (NP (NN water))))))
    (VP (VBZ is) (RB not)
      (PP (IN as)
        (NP (DT a)
          (ADJP (JJ liquid)
            (S
              (VP (TO to)
                (VP (VB drink)
                  (NP
                    (CONJP (CC but)
                      (RB as))
                    (NP
                      (NP (NN ice) (NNS cubes))
                      (, ,)
                      (NP (NN steam)))
                    (, ,)
                    (NP (NN ect)))))))
          (NN ect))))
    (. .)))

nsubj(is-8, Kinda-1)
det(use-5, the-3)
amod(use-5, ONLY-4)
prep_like(Kinda-1, use-5)
prep_of(use-5, water-7)
root(ROOT-0, is-8)
neg(is-8, not-9)
det(ect-23, a-11)
amod(ect-23, liquid-12)
aux(drink-14, to-13)
xcomp(liquid-12, drink-14)
cc(cubes-18, as-16)
nn(cubes-18, ice-17)
dobj(drink-14, cubes-18)
appos(cubes-18, steam-20)
dep(cubes-18, ect-22)
prep_as(is-8, ect-23)

(ROOT
  (NP (`` ``)
    (NP
      (NP (NN out))
      (PP (IN of)
        (NP (CD one))))
    (ADJP (RB so) (JJ great))
    (VP (VBN come)
      (ADJP (JJ many) ('' '')))
    (. .)))

root(ROOT-0, out-2)
prep_of(out-2, one-4)
advmod(great-6, so-5)
amod(out-2, great-6)
partmod(out-2, come-7)
acomp(come-7, many-8)

(ROOT
  (SQ
    (S
      (NP (PRP$ My) (NNS mothers))
      (ADVP (RB querry))
      (VP (VBZ was\/is)
        (SBAR
          (S
            (NP (DT this))
            (: ;)
            (SBAR (IN If)
              (S
                (NP (DT a) (NN man)
                  (CC and)
                  (NN woman))
                (VP (VBP are)
                  (VP (VBG having)
                    (NP
                      (NP (NN sex))
                      (CC and)
                      (NP (DT the) (NN woman)))))))
            (VP (VBZ is)
              (ADJP
                (ADJP (JJR more))
                (PP (IN in)
                  (NP
                    (NP (DT the) (JJ male) (NN side))
                    (PP (IN of)
                      (NP (PRP$ her) (NN brain)))))))))))
    (, ,)
    (SQ (VBP are)
      (NP (PRP they))
      (VP (VBG having)
        (NP (JJ homosexual) (NNS relations))))
    (. ?)))

poss(mothers-2, My-1)
nsubj(was\/is-4, mothers-2)
advmod(was\/is-4, querry-3)
dep(having-30, was\/is-4)
nsubj(more-19, this-5)
mark(having-13, If-7)
det(man-9, a-8)
nsubj(having-13, man-9)
conj_and(man-9, woman-11)
nsubj(having-13, woman-11)
aux(having-13, are-12)
parataxis(more-19, having-13)
dobj(having-13, sex-14)
det(woman-17, the-16)
dobj(having-13, woman-17)
conj_and(sex-14, woman-17)
cop(more-19, is-18)
ccomp(was\/is-4, more-19)
det(side-23, the-21)
amod(side-23, male-22)
prep_in(more-19, side-23)
poss(brain-26, her-25)
prep_of(side-23, brain-26)
aux(having-30, are-28)
nsubj(having-30, they-29)
root(ROOT-0, having-30)
amod(relations-32, homosexual-31)
dobj(having-30, relations-32)

(ROOT
  (SQ (VBZ Is)
    (NP (DT the) (NN male))
    (NP (NNP gay))
    (. ?)))

cop(gay-4, Is-1)
det(male-3, the-2)
nsubj(gay-4, male-3)
root(ROOT-0, gay-4)

(ROOT
  (FRAG (CC And)
    (ADVP
      (NP (DT the) (NN vice))
      (RB versa))
    (. .)))

dep(versa-4, And-1)
det(vice-3, the-2)
npadvmod(versa-4, vice-3)
root(ROOT-0, versa-4)

(ROOT
  (SBARQ
    (WHADVP (WRB When))
    (SQ
      (NP (DT a) (`` ``) (JJ straight) ('' '') (NN male))
      (VP (VBZ wants)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (JJ anal) (NN sex) (NNS w\/his))
                (SBAR
                  (S
                    (NP (NN wife))
                    (VP (VBZ is)
                      (ADVP (RB there))
                      (NP (DT an) (JJ underlying) (NNS gayness)))))))))))
    (. ?)))

advmod(wants-7, When-1)
det(male-6, a-2)
amod(male-6, straight-4)
nsubj(wants-7, male-6)
xsubj(have-9, male-6)
root(ROOT-0, wants-7)
aux(have-9, to-8)
xcomp(wants-7, have-9)
amod(w\/his-12, anal-10)
nn(w\/his-12, sex-11)
dobj(have-9, w\/his-12)
nsubj(gayness-18, wife-13)
cop(gayness-18, is-14)
advmod(gayness-18, there-15)
det(gayness-18, an-16)
amod(gayness-18, underlying-17)
rcmod(w\/his-12, gayness-18)

