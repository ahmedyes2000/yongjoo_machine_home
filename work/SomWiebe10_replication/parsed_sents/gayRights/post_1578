(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN today) (POS 's))
        (NN society)))
    (NP (NNS people))
    (VP (VBD discriminate)
      (PP (IN against)
        (NP (NNS homosexuals)))
      (NP (PDT all) (DT the) (NN time)))
    (. .)))

poss(society-4, today-2)
prep_in(discriminate-6, society-4)
nsubj(discriminate-6, people-5)
root(ROOT-0, discriminate-6)
prep_against(discriminate-6, homosexuals-8)
predet(time-11, all-9)
det(time-11, the-10)
dobj(discriminate-6, time-11)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN classroom)))
    (, ,)
    (X (IN at))
    (NP (NNS people))
    (VP (VBZ 's)
      (NP
        (NP (NNS offices))
        (, ,)
        (PP (IN in)
          (NP
            (NP (NNS people) (POS 's))
            (JJ own) (NNS families)))))
    (. .)))

det(classroom-3, the-2)
prep_in(offices-8, classroom-3)
dep(offices-8, at-5)
nsubj(offices-8, people-6)
cop(offices-8, 's-7)
root(ROOT-0, offices-8)
poss(families-14, people-11)
amod(families-14, own-13)
prep_in(offices-8, families-14)

(ROOT
  (S
    (S
      (NP (NNS People))
      (VP (VBP are)
        (ADJP (JJ upset))))
    (, ,)
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (NP
          (NP (RB just) (NNS reasons))
          (PP (IN for)
            (S
              (VP (VBG being)
                (ADJP (JJ upset))))))))
    (. .)))

nsubj(upset-3, People-1)
cop(upset-3, are-2)
root(ROOT-0, upset-3)
nsubj(have-7, they-6)
conj_and(upset-3, have-7)
advmod(reasons-9, just-8)
dobj(have-7, reasons-9)
cop(upset-12, being-11)
prepc_for(reasons-9, upset-12)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ tells)
          (NP (PRP you))
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBD were)
                (S
                  (VP (TO to)
                    (VP (VB live)
                      (PP (IN in)
                        (NP
                          (NP (DT a) (NN country))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBZ promises) (`` ``)
                                (NP
                                  (NP (NN life))
                                  (, ,)
                                  (NP (NN liberty))
                                  (CC and)
                                  (NP
                                    (NP (DT the) (NN pursuit))
                                    (PP (IN of)
                                      (NP (NN happiness)))))
                                ('' '')
                                (SBAR (CC but)
                                  (S
                                    (ADVP (RB later))
                                    (NP (PRP you))
                                    (VP (VBP find)
                                      (PRT (RP out))
                                      (SBAR (IN that)
                                        (S
                                          (NP (DT this))
                                          (VP (VBZ is)
                                            (NP (DT a) (NN lie))))))))))))))))))))))
    (, ,) (MD would) (RB n't)
    (NP (PRP you))
    (VP (VB be)
      (ADJP (JJ upset)))
    (. ?)))

mark(tells-3, If-1)
nsubj(tells-3, someone-2)
advcl(upset-40, tells-3)
dobj(tells-3, you-4)
complm(were-7, that-5)
nsubj(were-7, you-6)
xsubj(live-9, you-6)
ccomp(tells-3, were-7)
aux(live-9, to-8)
xcomp(were-7, live-9)
det(country-12, a-11)
prep_in(live-9, country-12)
nsubj(promises-14, country-12)
rcmod(country-12, promises-14)
dobj(promises-14, life-16)
dobj(promises-14, liberty-18)
conj_and(life-16, liberty-18)
det(pursuit-21, the-20)
dobj(promises-14, pursuit-21)
conj_and(life-16, pursuit-21)
prep_of(pursuit-21, happiness-23)
cc(find-28, but-25)
advmod(find-28, later-26)
nsubj(find-28, you-27)
dep(promises-14, find-28)
prt(find-28, out-29)
complm(lie-34, that-30)
nsubj(lie-34, this-31)
cop(lie-34, is-32)
det(lie-34, a-33)
ccomp(find-28, lie-34)
aux(upset-40, would-36)
neg(upset-40, n't-37)
nsubj(upset-40, you-38)
cop(upset-40, be-39)
root(ROOT-0, upset-40)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB be)
      (ADJP (RB pretty) (JJ fucking)
        (SBAR
          (S
            (VP (VBD pissed)
              (PRT (RP off)))))))
    (. ?)))

aux(fucking-5, Would-1)
nsubj(fucking-5, you-2)
cop(fucking-5, be-3)
advmod(fucking-5, pretty-4)
root(ROOT-0, fucking-5)
dep(fucking-5, pissed-6)
prt(pissed-6, off-7)

(ROOT
  (FRAG
    (ADVP (RB Once) (RB again))
    (, ,)
    (S
      (S
        (NP
          (NP (NN anger))
          (PP (TO to)
            (NP
              (NP (DT the) (NN point))
              (PP (IN of)
                (NP (NN violence))))))
        (VP (VBZ is)
          (ADJP (JJ wrong))))
      (, ,)
      (CC but)
      (S
        (S
          (VP (VBG fighting)
            (PP (IN for)
              (NP (PRP$ your) (NNS rights)))))
        (VP (VBZ is)
          (ADJP (JJ reasonable)))))
    (: ...)))

advmod(again-2, Once-1)
root(ROOT-0, again-2)
nsubj(wrong-11, anger-4)
det(point-7, the-6)
prep_to(anger-4, point-7)
prep_of(point-7, violence-9)
cop(wrong-11, is-10)
dep(again-2, wrong-11)
csubj(reasonable-19, fighting-14)
poss(rights-17, your-16)
prep_for(fighting-14, rights-17)
cop(reasonable-19, is-18)
dep(again-2, reasonable-19)
conj_but(wrong-11, reasonable-19)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S
    (ADVP (RB hell))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ American)))
    (. .)))

advmod(American-5, hell-1)
nsubj(American-5, it-3)
cop(American-5, 's-4)
root(ROOT-0, American-5)

(ROOT
  (PP (IN As)
    (PP (IN for)
      (NP
        (NP (DT the) (NN vote))
        (PP (IN on)
          (NP (NN prop.)))))))

root(ROOT-0, As-1)
pcomp(As-1, for-2)
det(vote-4, the-3)
prep_for(As-1, vote-4)
prep_on(vote-4, prop.-6)

(ROOT
  (S
    (NP
      (NP (CD 8))
      (, ,)
      (NP (DT the) (NN majority)))
    (VP (MD should)
      (ADVP (RB never))
      (VP (VB have)
        (NP (DT the) (NN power)
          (S
            (VP (TO to)
              (VP (VB take)
                (PRT (RP away))
                (NP (NNS rights))
                (PP (IN from)
                  (NP (DT a) (NN minority) (NN group)))))))))
    (. .)))

nsubj(have-7, 8-1)
det(majority-4, the-3)
appos(8-1, majority-4)
aux(have-7, should-5)
neg(have-7, never-6)
root(ROOT-0, have-7)
det(power-9, the-8)
dobj(have-7, power-9)
aux(take-11, to-10)
infmod(power-9, take-11)
prt(take-11, away-12)
dobj(take-11, rights-13)
det(group-17, a-15)
nn(group-17, minority-16)
prep_from(take-11, group-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (VP (VBN happened)
        (PP (IN in)
          (NP (PRP$ our) (NN past)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (JJ other) (NNS groups))
            (VP (VBD were)
              (VP (VBN discriminated)
                (PP (IN against))
                (PP (VBN based)
                  (PP (IN on)
                    (NP (NN race))))))))))
    (. .)))

nsubj(happened-3, It-1)
aux(happened-3, has-2)
root(ROOT-0, happened-3)
poss(past-6, our-5)
prep_in(happened-3, past-6)
advmod(discriminated-11, when-7)
amod(groups-9, other-8)
nsubjpass(discriminated-11, groups-9)
auxpass(discriminated-11, were-10)
advcl(happened-3, discriminated-11)
prep(discriminated-11, against-12)
prepc_based_on(discriminated-11, on-14)
pobj(discriminated-11, race-15)

(ROOT
  (S
    (S
      (NP (NNS People))
      (VP (VBD voted)
        (PP (IN on)
          (NP (NNS laws) (NNS democratically)))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB eventually))
      (NP (NNS courts))
      (VP (VBD overturned)
        (NP (DT these) (NNS laws))))
    (. .)))

nsubj(voted-2, People-1)
root(ROOT-0, voted-2)
nn(democratically-5, laws-4)
prep_on(voted-2, democratically-5)
advmod(overturned-10, eventually-8)
nsubj(overturned-10, courts-9)
conj_but(voted-2, overturned-10)
det(laws-12, these-11)
dobj(overturned-10, laws-12)

(ROOT
  (S
    (NP (JJ Such))
    (VP (VBD was)
      (NP
        (NP (DT the) (NN case))
        (PP (IN in)
          (NP (NNP California))))
      (PP (IN before)
        (NP (NN prop.))))))

nsubj(case-4, Such-1)
cop(case-4, was-2)
det(case-4, the-3)
root(ROOT-0, case-4)
prep_in(case-4, California-6)
prep_before(case-4, prop.-8)

(ROOT
  (S
    (ADVP (RB Right) (RB now))
    (, ,)
    (PP (IN in)
      (S
        (NP
          (NP (JJ many) (NNS places))
          (PP (IN throughout)
            (NP (DT the) (NNP U.S.))))
        (VP (VBG being)
          (ADJP (JJ homosexual)))))
    (VP (VBZ is)
      (NP (NN something)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ ashamed)
                (PP (IN of))))))))
    (. .)))

advmod(now-2, Right-1)
advmod(something-13, now-2)
amod(places-6, many-5)
nsubj(homosexual-11, places-6)
det(U.S.-9, the-8)
prep_throughout(places-6, U.S.-9)
cop(homosexual-11, being-10)
prepc_in(something-13, homosexual-11)
cop(something-13, is-12)
root(ROOT-0, something-13)
aux(ashamed-16, to-14)
cop(ashamed-16, be-15)
infmod(something-13, ashamed-16)
prep(ashamed-16, of-17)

(ROOT
  (S
    (NP (CD 8))
    (VP (VBD was)
      (VP (VBN passed)))
    (. .)))

nsubjpass(passed-3, 8-1)
auxpass(passed-3, was-2)
root(ROOT-0, passed-3)

(ROOT
  (S
    (NP (DT The) (NNP California) (JJ supreme) (NN court))
    (VP (VBD deemed)
      (SBAR (IN that)
        (S
          (NP (JJ disallowing) (NNS homosexuals)
            (S
              (VP (TO to)
                (VP (VB marry)))))
          (VP (VBD was)
            (ADJP (JJ discriminatory))))))
    (. .)))

det(court-4, The-1)
nn(court-4, California-2)
amod(court-4, supreme-3)
nsubj(deemed-5, court-4)
root(ROOT-0, deemed-5)
complm(discriminatory-12, that-6)
amod(homosexuals-8, disallowing-7)
nsubj(discriminatory-12, homosexuals-8)
aux(marry-10, to-9)
infmod(homosexuals-8, marry-10)
cop(discriminatory-12, was-11)
ccomp(deemed-5, discriminatory-12)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD came)
      (PP (TO to)
        (NP (DT this) (NN conclusion)))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBD had)
            (S
              (VP (TO to)
                (VP (VB base)
                  (NP (PRP$ their) (NN decision))
                  (PP (IN on)
                    (NP (NNS facts))))))))))
    (. .)))

nsubj(came-2, They-1)
root(ROOT-0, came-2)
det(conclusion-5, this-4)
prep_to(came-2, conclusion-5)
mark(had-8, because-6)
nsubj(had-8, they-7)
xsubj(base-10, they-7)
advcl(came-2, had-8)
aux(base-10, to-9)
xcomp(had-8, base-10)
poss(decision-12, their-11)
dobj(base-10, decision-12)
prep_on(base-10, facts-14)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (DT the) (NN issue))
        (VP (VBD was)
          (VP (VBN put)
            (PP (TO to)
              (NP (DT a) (NN vote)))))))
    (, ,)
    (NP (NNS people))
    (VP (MD could)
      (VP (VB base)
        (NP
          (NP (PRP$ their) (NN decision))
          (SBAR
            (WHPP (IN on)
              (WHNP (WDT whatever)))
            (FRAG
              (S
                (VP (VBZ reasons)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBD wanted))))))
              (: :)
              (NP
                (NP (PRP$ their) (JJ religious) (NNS views))
                (, ,)
                (NP (PRP$ their) (NN ignorance))
                (, ,)
                (NP
                  (NP (PRP$ their) (NN intolerance))
                  (CC and)
                  (NP (FW bigotry) (FW etc.))))
              (. .))))))
    (. .)))

advmod(put-5, When-1)
det(issue-3, the-2)
nsubjpass(put-5, issue-3)
auxpass(put-5, was-4)
advcl(base-12, put-5)
det(vote-8, a-7)
prep_to(put-5, vote-8)
nsubj(base-12, people-10)
aux(base-12, could-11)
root(ROOT-0, base-12)
poss(decision-14, their-13)
dobj(base-12, decision-14)
rel(views-23, whatever-16)
dep(views-23, reasons-17)
nsubj(wanted-19, they-18)
ccomp(reasons-17, wanted-19)
poss(views-23, their-21)
amod(views-23, religious-22)
rcmod(decision-14, views-23)
poss(ignorance-26, their-25)
appos(views-23, ignorance-26)
poss(intolerance-29, their-28)
appos(views-23, intolerance-29)
nn(etc.-32, bigotry-31)
appos(views-23, etc.-32)
conj_and(intolerance-29, etc.-32)

(ROOT
  (S
    (SBAR (RB Just) (IN because)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB want)
            (NP
              (NP (DT a) (JJ certain) (NN group))
              (PP (IN of)
                (NP (NNS people))))
            (S
              (VP (TO to) (RB not)
                (VP (VB have)
                  (NP (NNS rights)))))))))
    (VP (VBZ does) (RB n't)
      (VP (VB allow)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB take)
              (NP (DT those) (NNS rights))
              (PRT (RP away))
              (PP (IN from)
                (NP (PRP them))))))))
    (. .)))

advmod(want-6, Just-1)
dep(want-6, because-2)
nsubj(want-6, you-3)
aux(want-6, do-4)
neg(want-6, n't-5)
advcl(allow-18, want-6)
csubj(allow-18, want-6)
det(group-9, a-7)
amod(group-9, certain-8)
dobj(want-6, group-9)
prep_of(group-9, people-11)
aux(have-14, to-12)
neg(have-14, not-13)
xcomp(want-6, have-14)
dobj(have-14, rights-15)
aux(allow-18, does-16)
neg(allow-18, n't-17)
root(ROOT-0, allow-18)
nsubj(take-21, you-19)
aux(take-21, to-20)
xcomp(allow-18, take-21)
det(rights-23, those-22)
dobj(take-21, rights-23)
prep_away_from(take-21, them-26)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP (DT a) (NN reason))))))
    (. .)))

nsubj(have-2, You-1)
xsubj(have-4, You-1)
root(ROOT-0, have-2)
aux(have-4, to-3)
xcomp(have-2, have-4)
det(reason-6, a-5)
dobj(have-4, reason-6)

(ROOT
  (FRAG
    (NP (DT A)
      (ADJP (RB damn) (JJ good))
      (NN one))
    (. .)))

det(one-4, A-1)
advmod(good-3, damn-2)
amod(one-4, good-3)
root(ROOT-0, one-4)

(ROOT
  (S
    (ADVP (IN So) (RB now))
    (, ,)
    (ADVP (RB tallblondebigotedguy))
    (, ,)
    (NP (WDT what))
    (VP (VBP are)
      (NP (PRP$ your) (NNS reasons)))
    (. ?)))

advmod(reasons-9, So-1)
advmod(So-1, now-2)
advmod(reasons-9, tallblondebigotedguy-4)
nsubj(reasons-9, what-6)
cop(reasons-9, are-7)
poss(reasons-9, your-8)
root(ROOT-0, reasons-9)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB find)
        (ADJP (RB so) (JJ wrong))
        (PP (IN with)
          (NP
            (NP (CD two) (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP love)
                  (NP
                    (NP (DT each) (JJ other))
                    (VP (VBG being)
                      (VP (VBN allowed)
                        (S
                          (VP (TO to)
                            (VP (VB enter)
                              (PP (IN into)
                                (NP (JJ legal) (NN marriage))))))))))))))))
    (. ?)))

dobj(find-4, What-1)
aux(find-4, do-2)
nsubj(find-4, you-3)
root(ROOT-0, find-4)
advmod(wrong-6, so-5)
acomp(find-4, wrong-6)
num(people-9, two-8)
prep_with(find-4, people-9)
nsubj(love-11, people-9)
rcmod(people-9, love-11)
det(other-13, each-12)
dobj(love-11, other-13)
xsubj(enter-17, other-13)
auxpass(allowed-15, being-14)
partmod(other-13, allowed-15)
aux(enter-17, to-16)
xcomp(allowed-15, enter-17)
amod(marriage-20, legal-19)
prep_into(enter-17, marriage-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP swear)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (VP (VBG listening)
              (PP (TO to)
                (NP (PRP$ your) (NNS reasons)))
              (ADVP (RB now)))))))
    (. .)))

nsubj(swear-2, I-1)
root(ROOT-0, swear-2)
complm(listening-6, that-3)
nsubj(listening-6, I-4)
aux(listening-6, am-5)
ccomp(swear-2, listening-6)
poss(reasons-9, your-8)
prep_to(listening-6, reasons-9)
advmod(listening-6, now-10)

(ROOT
  (SBARQ
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNS kids))
        (VP (VBP think)
          (SBAR
            (S
              (NP (NN something))
              (VP (VBZ is)
                (ADJP (JJ lame))))))))
    (WHNP (WP what))
    (SQ
      (VP (VBP do)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP say))))))
    (. ?)))

advmod(think-3, When-1)
nsubj(think-3, kids-2)
dep(do-8, think-3)
nsubj(lame-6, something-4)
cop(lame-6, is-5)
ccomp(think-3, lame-6)
nsubj(do-8, what-7)
root(ROOT-0, do-8)
nsubj(say-10, they-9)
ccomp(do-8, say-10)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (VP (VB hide)
        (UCP
          (PP (IN behind)
            (NP
              (NP (JJ false) (NNS pretenses))
              (PP (IN of)
                (NP (NN discrimination)))))
          (, ,)
          (CC or)
          (SBAR (IN that)
            (S
              (NP (NNS people))
              (VP (VBP do) (RB n't)
                (VP (VB respect)
                  (NP (PRP$ your) (NNS views))
                  (, ,)
                  (SBAR (IN because) (IN until)
                    (S
                      (NP (PRP you))
                      (VP (MD can)
                        (VP (VB give)
                          (NP (PRP me))
                          (NP
                            (NP (PRP$ your) (NN reasoning))
                            (, ,)
                            (SBAR
                              (WHNP (DT all)
                                (WHPP (IN of)
                                  (WHNP (WDT that))))
                              (S
                                (VP (VBZ is)
                                  (ADJP (JJ irrelevant)))))))))))))))))
    (. .)))

aux(hide-3, Do-1)
neg(hide-3, n't-2)
root(ROOT-0, hide-3)
dep(hide-3, behind-4)
amod(pretenses-6, false-5)
pobj(behind-4, pretenses-6)
prep_of(pretenses-6, discrimination-8)
complm(respect-15, that-11)
nsubj(respect-15, people-12)
aux(respect-15, do-13)
neg(respect-15, n't-14)
dep(hide-3, respect-15)
conj_or(behind-4, respect-15)
poss(views-17, your-16)
dobj(respect-15, views-17)
mark(give-23, because-19)
dep(give-23, until-20)
nsubj(give-23, you-21)
aux(give-23, can-22)
advcl(respect-15, give-23)
iobj(give-23, me-24)
poss(reasoning-26, your-25)
dobj(give-23, reasoning-26)
pobj(of-29, reasoning-26)
dep(of-29, all-28)
nsubj(irrelevant-32, of-29)
cop(irrelevant-32, is-31)
rcmod(reasoning-26, irrelevant-32)

(ROOT
  (S (`` ``)
    (NP (DT That))
    (VP (VBZ 's)
      (ADJP (JJ gay)))
    (. .)))

nsubj(gay-4, That-2)
cop(gay-4, 's-3)
root(ROOT-0, gay-4)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT this) (NN fact))
          (ADVP (RB alone))
          (VP (VBZ speaks)
            (NP
              (NP (NNS volumes))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN homophobia))
                  (PP (IN in)
                    (NP
                      (NP (NN today) (POS 's))
                      (NN society))))))))))
    (. .)))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
det(fact-5, this-4)
nsubj(speaks-7, fact-5)
advmod(speaks-7, alone-6)
ccomp(think-3, speaks-7)
dobj(speaks-7, volumes-8)
det(homophobia-11, the-10)
prep_of(volumes-8, homophobia-11)
poss(society-15, today-13)
prep_in(homophobia-11, society-15)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (VP (VBG looking)
        (PP (IN at)
          (NP
            (NP (DT the) (JJ extreme) (NNS examples))
            (PP (IN at)
              (NP
                (NP (DT the) (NN expense))
                (PP (IN of)
                  (NP (DT the) (JJ whole) (NN picture)))))))))
    (. .)))

nsubj(looking-3, You-1)
aux(looking-3, are-2)
root(ROOT-0, looking-3)
det(examples-7, the-5)
amod(examples-7, extreme-6)
prep_at(looking-3, examples-7)
det(expense-10, the-9)
prep_at(examples-7, expense-10)
det(picture-14, the-12)
amod(picture-14, whole-13)
prep_of(expense-10, picture-14)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD could) (RB not)
                (VP (VB marry)
                  (NP
                    (NP (DT the) (NN person))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBD loved))))))))))))
    (, ,) (MD would)
    (NP (PRP you))
    (VP (VB be)
      (ADJP (JJ upset)))
    (. ?)))

mark(said-3, If-1)
nsubj(said-3, someone-2)
advcl(upset-16, said-3)
nsubj(marry-7, you-4)
aux(marry-7, could-5)
neg(marry-7, not-6)
ccomp(said-3, marry-7)
det(person-9, the-8)
dobj(marry-7, person-9)
dobj(loved-11, person-9)
nsubj(loved-11, you-10)
rcmod(person-9, loved-11)
aux(upset-16, would-13)
nsubj(upset-16, you-14)
cop(upset-16, be-15)
root(ROOT-0, upset-16)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB do)
      (SBAR
        (WHNP (WDT whatever))
        (S
          (NP (PRP you))
          (VP (MD could)
            (S
              (VP (TO to)
                (VP (VB fix)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP you))
                      (VP (VBN perceived)
                        (PP (IN as)
                          (NP (DT a) (JJ grave) (NN injustice)))))))))))))
    (. ?)))

aux(do-3, Would-1)
nsubj(do-3, you-2)
root(ROOT-0, do-3)
dep(could-6, whatever-4)
nsubj(could-6, you-5)
xsubj(fix-8, you-5)
ccomp(do-3, could-6)
aux(fix-8, to-7)
xcomp(could-6, fix-8)
dobj(perceived-11, what-9)
nsubj(perceived-11, you-10)
ccomp(fix-8, perceived-11)
det(injustice-15, a-13)
amod(injustice-15, grave-14)
prep_as(perceived-11, injustice-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP want)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB understand)
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBP do) (RB not)
                    (VP (VB condone)
                      (NP (NN violence)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (JJ legal) (NN action))
      (VP (VBZ is)
        (ADVP (RB perfectly))
        (PP (IN within)
          (NP
            (NP (NNS people) (POS 's))
            (NNS rights)))))
    (. .)))

nsubj(want-2, I-1)
root(ROOT-0, want-2)
nsubj(understand-5, you-3)
aux(understand-5, to-4)
xcomp(want-2, understand-5)
complm(condone-10, that-6)
nsubj(condone-10, I-7)
aux(condone-10, do-8)
neg(condone-10, not-9)
ccomp(understand-5, condone-10)
dobj(condone-10, violence-11)
amod(action-15, legal-14)
nsubj(is-16, action-15)
conj_but(want-2, is-16)
advmod(is-16, perfectly-17)
poss(rights-21, people-19)
prep_within(is-16, rights-21)

