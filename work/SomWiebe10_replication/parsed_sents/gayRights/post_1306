(ROOT
  (S
    (NP (DT No) (NN I))
    (VP (VBP read)
      (NP (DT that))
      (ADVP (RB correctly)))
    (. .)))

det(I-2, No-1)
nsubj(read-3, I-2)
root(ROOT-0, read-3)
dobj(read-3, that-4)
advmod(read-3, correctly-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD knew)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD would)
            (VP (VB go)
              (ADVP (RB there)))))))
    (. .)))

nsubj(knew-2, I-1)
root(ROOT-0, knew-2)
nsubj(go-5, you-3)
aux(go-5, would-4)
ccomp(knew-2, go-5)
advmod(go-5, there-6)

(ROOT
  (S (-LRB- -LRB-)
    (NP (DT That))
    (VP (VBZ means)
      (VP (VB prove)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (ADVP (RB actually))
            (VP (VBP are)
              (VP (VBZ lies)))))))
    (. .) (-RRB- -RRB-)))

nsubj(means-3, That-2)
root(ROOT-0, means-3)
dep(means-3, prove-4)
complm(lies-9, that-5)
nsubj(lies-9, they-6)
advmod(lies-9, actually-7)
aux(lies-9, are-8)
ccomp(prove-4, lies-9)

(ROOT
  (S
    (NP (NNS Thats))
    (SBAR
      (WHADVP (WRB why))
      (S
        (NP (PRP I))
        (VP (VBD was)
          (ADJP (RB so) (JJ specific)))))
    (. .)))

dep(specific-6, Thats-1)
advmod(specific-6, why-2)
nsubj(specific-6, I-3)
cop(specific-6, was-4)
advmod(specific-6, so-5)
root(ROOT-0, specific-6)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG betting)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD did)
              (VP (VB want)
                (S
                  (NP (PRP me))
                  (VP (TO to)
                    (VP (VB shut)
                      (PRT (RP up)))))
                (PRN (CC or)
                  (S
                    (NP (PRP you))
                    (VP (MD would) (RB n't)
                      (VP (VB have)
                        (VP (VBN made)
                          (NP (DT the) (NN request))
                          (PP (VBN based)
                            (PP (IN on)
                              (NP (DT the) (NN assumption)))))))))
                (SBAR (IN that)
                  (S
                    (NP (PRP I))
                    (VP (VBD had)
                      (ADVP (RB no)
                        (NP (JJ other) (NNS arguments)))
                      (VP (VBN left)))))))))))
    (. .)))

cc(betting-4, And-1)
nsubj(betting-4, I-2)
aux(betting-4, 'm-3)
root(ROOT-0, betting-4)
nsubj(want-7, you-5)
aux(want-7, did-6)
ccomp(betting-4, want-7)
nsubj(shut-10, me-8)
aux(shut-10, to-9)
xcomp(want-7, shut-10)
prt(shut-10, up-11)
dep(made-17, or-12)
nsubj(made-17, you-13)
aux(made-17, would-14)
neg(made-17, n't-15)
aux(made-17, have-16)
parataxis(want-7, made-17)
det(request-19, the-18)
dobj(made-17, request-19)
prepc_based_on(made-17, on-21)
det(assumption-23, the-22)
pobj(made-17, assumption-23)
complm(left-30, that-24)
nsubj(left-30, I-25)
aux(left-30, had-26)
advmod(left-30, no-27)
amod(arguments-29, other-28)
pobj(no-27, arguments-29)
ccomp(want-7, left-30)

(ROOT
  (SBARQ (RB So)
    (WHNP (WP who))
    (SQ
      (VP (VBD taught)
        (NP (PRP you))
        (ADVP (WRB how))
        (PP (TO to)
          (NP (NN type)))))
    (. ?)))

advmod(taught-3, So-1)
nsubj(taught-3, who-2)
root(ROOT-0, taught-3)
dobj(taught-3, you-4)
advmod(taught-3, how-5)
prep_to(taught-3, type-7)

(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBD was)
      (ADVP (RB only))
      (VP (VBG challenging)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB make)
              (NP (DT an)
                (ADVP (RB actually))
                (NN point)))))))
    (. .)))

nsubj(challenging-5, I-2)
aux(challenging-5, was-3)
advmod(challenging-5, only-4)
root(ROOT-0, challenging-5)
nsubj(make-8, you-6)
aux(make-8, to-7)
xcomp(challenging-5, make-8)
det(point-11, an-9)
advmod(point-11, actually-10)
dobj(make-8, point-11)

(ROOT
  (S ('' '')
    (S
      (NP (DT That) (NN link))
      (VP (VBD said)
        (NP (NN nothing))
        (PP (IN about)
          (NP (PRP$ my) (NN church)))))
    (, ,)
    (NP (PRP you))
    (ADVP (RB still))
    (VP (VBP have) (RB not)
      (VP (VBN explained)
        (SBAR
          (WHADJP (RB exactly) (WP what))
          (S
            (NP (PRP$ my) (NN church))
            (VP (VBD did)
              (S
                (VP (TO to)
                  (VP (VB oppress)
                    (NP (PRP you))))))))))
    (. .)))

det(link-3, That-2)
nsubj(said-4, link-3)
ccomp(explained-14, said-4)
dobj(said-4, nothing-5)
poss(church-8, my-7)
prep_about(said-4, church-8)
nsubj(explained-14, you-10)
advmod(explained-14, still-11)
aux(explained-14, have-12)
neg(explained-14, not-13)
root(ROOT-0, explained-14)
dep(did-19, exactly-15)
dep(exactly-15, what-16)
poss(church-18, my-17)
nsubj(did-19, church-18)
xsubj(oppress-21, church-18)
ccomp(explained-14, did-19)
aux(oppress-21, to-20)
xcomp(did-19, oppress-21)
dobj(oppress-21, you-22)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB just))
    (VP (VBD repeated)
      (NP (PRP yourself)))
    (. .)))

nsubj(repeated-3, You-1)
advmod(repeated-3, just-2)
root(ROOT-0, repeated-3)
dobj(repeated-3, yourself-4)

(ROOT
  (S
    (NP
      (NP (DT Some))
      (PP (IN of)
        (NP
          (NP (DT those) (`` ``) (NNS facts) ('' ''))
          (FRAG
            (WHADVP (WRB where))))))
    (ADVP (RB only))
    (VP (VBZ opinions))
    (. .)))

nsubj(opinions-9, Some-1)
det(facts-5, those-3)
prep_of(Some-1, facts-5)
dep(facts-5, where-7)
advmod(opinions-9, only-8)
root(ROOT-0, opinions-9)

(ROOT
  (S (RB So)
    (VP (VB prove)
      (SBAR (IN that)
        (S
          (NP (PRP$ my) (NN church) (NN spread))
          (VP (VBZ lies)))))
    (. .)))

advmod(prove-2, So-1)
root(ROOT-0, prove-2)
complm(lies-7, that-3)
poss(spread-6, my-4)
nn(spread-6, church-5)
nsubj(lies-7, spread-6)
ccomp(prove-2, lies-7)

