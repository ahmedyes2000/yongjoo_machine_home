(ROOT
  (S
    (S
      (VP
        (VP
          (VP (VBG Understanding)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ causes)
                  (NP
                    (NP (NNS deafness))
                    (CC or)
                    (NP (JJ other) (JJ physical) (NNS conditions)))))))
          (: --)
          (CC and)
          (VP (VBG learning)
            (S
              (VP (TO to)
                (VP (VB treat)
                  (S
                    (NP
                      (NP (NNS people))
                      (PP (IN with)
                        (NP (NN dignity)
                          (CC and)
                          (NN respect))))
                    (: --)
                    (VP (VBZ is) (RB not)
                      (PP
                        (NP (DT the) (JJ same))
                        (IN as)
                        (S
                          (VP (VBG inventing)
                            (NP (DT a) (JJ new) (NN philosophy))
                            (PP (IN on)
                              (NP (NN sexuality)
                                (CC and)
                                (NN gender)))))))))))))
        (CC and)
        (VP (VBG pretending)
          (NP (PRP it)))))
    (VP (VBZ has)
      (NP
        (NP (DT a) (NN basis))
        (PP (IN in)
          (NP (NN science)
            (CC or)
            (NN Biblical) (NN tradition)))))
    (. .)))

csubj(has-36, Understanding-1)
nsubj(causes-3, what-2)
ccomp(Understanding-1, causes-3)
dobj(causes-3, deafness-4)
amod(conditions-8, other-6)
amod(conditions-8, physical-7)
dobj(causes-3, conditions-8)
conj_or(deafness-4, conditions-8)
conj_and(Understanding-1, learning-11)
csubj(has-36, learning-11)
aux(treat-13, to-12)
xcomp(learning-11, treat-13)
nsubj(is-20, people-14)
prep_with(people-14, dignity-16)
prep_with(people-14, respect-18)
conj_and(dignity-16, respect-18)
ccomp(treat-13, is-20)
neg(is-20, not-21)
det(same-23, the-22)
npadvmod(is-20, same-23)
prepc_as(is-20, inventing-25)
det(philosophy-28, a-26)
amod(philosophy-28, new-27)
dobj(inventing-25, philosophy-28)
prep_on(inventing-25, sexuality-30)
prep_on(inventing-25, gender-32)
conj_and(sexuality-30, gender-32)
conj_and(Understanding-1, pretending-34)
csubj(has-36, pretending-34)
dobj(pretending-34, it-35)
root(ROOT-0, has-36)
det(basis-38, a-37)
dobj(has-36, basis-38)
nn(tradition-43, science-40)
conj_or(science-40, Biblical-42)
nn(tradition-43, Biblical-42)
prep_in(basis-38, tradition-43)

(ROOT
  (FRAG
    (SBAR
      (WHNP (WDT Which))
      (S
        (ADVP (RB again))
        (, ,)
        (VP (VBZ has) (RB not)
          (VP (VBN been)
            (VP (`` ``) (VBN proven) ('' '')
              (PP (IN at)
                (NP (DT all))))))))
    (. .)))

nsubjpass(proven-8, Which-1)
advmod(proven-8, again-2)
aux(proven-8, has-4)
neg(proven-8, not-5)
auxpass(proven-8, been-6)
root(ROOT-0, proven-8)
prep_at(proven-8, all-11)

(ROOT
  (S
    (NP
      (NP (PRP You))
      (CC and)
      (NP (JJ many) (JJ other) (NNS people)))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB believe)
            (NP (PRP it))
            (SBAR
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBZ works)
                    (PP (IN for)
                      (NP (PRP you))))))
              (, ,)
              (CC and)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ 's)
                    (ADJP (JJ fine))))))))))
    (. .)))

nsubj(want-6, You-1)
xsubj(believe-8, You-1)
amod(people-5, many-3)
amod(people-5, other-4)
conj_and(You-1, people-5)
nsubj(want-6, people-5)
xsubj(believe-8, people-5)
root(ROOT-0, want-6)
aux(believe-8, to-7)
xcomp(want-6, believe-8)
dobj(believe-8, it-9)
mark(works-12, because-10)
nsubj(works-12, it-11)
dep(believe-8, works-12)
prep_for(works-12, you-14)
nsubj(fine-19, that-17)
cop(fine-19, 's-18)
dep(believe-8, fine-19)
conj_and(works-12, fine-19)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ 's) (RB not)
        (NP
          (NP (NN proof))
          (PP (IN of)
            (NP (NN fact))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's) (RB not)
        (NP
          (NP (NN justification))
          (PP (IN for)
            (NP (VBG rewriting) (NNP Scripture))))))
    (. .)))

nsubj(proof-4, That-1)
cop(proof-4, 's-2)
neg(proof-4, not-3)
root(ROOT-0, proof-4)
prep_of(proof-4, fact-6)
nsubj(justification-11, it-8)
cop(justification-11, 's-9)
neg(justification-11, not-10)
conj_and(proof-4, justification-11)
amod(Scripture-14, rewriting-13)
prep_for(justification-11, Scripture-14)

(ROOT
  (S ('' '')
    (S
      (S
        (NP (PRP We))
        (ADVP (DT all))
        (VP (VBP want)
          (NP (NN progress))))
      (, ,)
      (CC but)
      (S
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (PP (IN on)
                (NP (DT the) (JJ wrong) (NN road))))))
        (, ,)
        (NP (NN progress))
        (VP (VBZ means)
          (S
            (VP
              (VP (VBG doing)
                (NP (DT an) (NN about-turn)))
              (CC and)
              (VP (VBG walking)
                (ADVP (RB back))
                (PP (TO to)
                  (NP (DT the) (JJ right) (NN road)))))))))
    (: ;)
    (S
      (PP (IN in)
        (NP (DT that) (NN case)))
      (, ,)
      (NP
        (NP (DT the) (NN man))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ turns)
              (PRT (RP back))
              (ADVP (JJS soonest))))))
      (VP (VBZ is)
        (NP (DT the) (RBS most) (JJ progressive))))
    (. .)))

nsubj(want-4, We-2)
advmod(want-4, all-3)
root(ROOT-0, want-4)
dobj(want-4, progress-5)
mark('re-10, if-8)
nsubj('re-10, you-9)
advcl(means-17, 're-10)
det(road-14, the-12)
amod(road-14, wrong-13)
prep_on('re-10, road-14)
nsubj(means-17, progress-16)
conj_but(want-4, means-17)
ccomp(means-17, doing-18)
det(about-turn-20, an-19)
dobj(doing-18, about-turn-20)
ccomp(means-17, walking-22)
conj_and(doing-18, walking-22)
advmod(walking-22, back-23)
det(road-27, the-25)
amod(road-27, right-26)
prep_to(walking-22, road-27)
det(case-31, that-30)
prep_in(progressive-42, case-31)
det(man-34, the-33)
nsubj(turns-36, man-34)
nsubj(progressive-42, man-34)
rcmod(man-34, turns-36)
prt(turns-36, back-37)
advmod(turns-36, soonest-38)
cop(progressive-42, is-39)
det(progressive-42, the-40)
advmod(progressive-42, most-41)
parataxis(want-4, progressive-42)

(ROOT
  (NP (NNP '') (NNP C.) (NNP S.) (NNP Lewis)))

nn(Lewis-4, C.-2)
nn(Lewis-4, S.-3)
root(ROOT-0, Lewis-4)

