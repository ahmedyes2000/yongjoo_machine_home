(ROOT
  (SQ (VBZ Does)
    (NP (NN anybody))
    (ADVP (RB actually))
    (VP (VB read)
      (NP (NN philosophy)))
    (. ?)))

aux(read-4, Does-1)
nsubj(read-4, anybody-2)
advmod(read-4, actually-3)
root(ROOT-0, read-4)
dobj(read-4, philosophy-5)

(ROOT
  (SQ (NNP Does)
    (NP (NN anyone))
    (VP (VB study)
      (S
        (VP (VBG ANYTHING)
          (ADVP (RB anymore)))))
    (. ?)))

dep(study-3, Does-1)
nsubj(study-3, anyone-2)
root(ROOT-0, study-3)
xcomp(study-3, ANYTHING-4)
advmod(ANYTHING-4, anymore-5)

(ROOT
  (S (CC Or)
    (, ,)
    (S
      (VP (TO to)
        (VP (VB be)
          (ADJP (JJR clearer)))))
    (, ,)
    (VP (VBP call)
      (S
        (ADVP (RB homosexuality))
        (ADVP
          (NP (DT a) (NN sin))
          (RB all))
        (NP (PRP you))
        (VP
          (VP (VBP want))
          (, ,)
          (CC but)
          (VP (VBP remember)
            (SBAR (IN that)
              (S
                (S
                  (VP
                    (VP (VBG wearing)
                      (NP
                        (NP (NNS clothes))
                        (PP (IN of)
                          (NP
                            (NP (CD two) (JJ different) (NNS kinds))
                            (PP (IN of)
                              (NP (NN fiber)))))))
                    (, ,)
                    (VP (VBG interacting)
                      (PP (IN with)
                        (NP
                          (NP (NNS women))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBP are)
                                (VP (VBG menstruating))))))))
                    (, ,)
                    (VP (VBG eating)
                      (NP (NN shellfish)))
                    (, ,)
                    (VP (VBG doing)
                      (NP (NN work))
                      (PP (IN on)
                        (NP (NNP Saturday))))
                    (, ,)
                    (CC and)
                    (VP (VBG working)
                      (PP (IN for)
                        (NP (DT a) (NN credit) (NN card) (NN company))))))
                (VP (VBP are)
                  (ADVP (RB also))
                  (ADJP (RB pretty) (JJ sinful)))))))))
    (. .)))

cc(call-7, Or-1)
aux(clearer-5, to-3)
cop(clearer-5, be-4)
dep(call-7, clearer-5)
root(ROOT-0, call-7)
advmod(want-13, homosexuality-8)
det(sin-10, a-9)
npadvmod(all-11, sin-10)
advmod(want-13, all-11)
nsubj(want-13, you-12)
nsubj(remember-16, you-12)
ccomp(call-7, want-13)
ccomp(call-7, remember-16)
conj_but(want-13, remember-16)
complm(sinful-52, that-17)
csubj(sinful-52, wearing-18)
dobj(wearing-18, clothes-19)
num(kinds-23, two-21)
amod(kinds-23, different-22)
prep_of(clothes-19, kinds-23)
prep_of(kinds-23, fiber-25)
conj_and(wearing-18, interacting-27)
csubj(sinful-52, interacting-27)
prep_with(interacting-27, women-29)
nsubj(menstruating-32, women-29)
aux(menstruating-32, are-31)
rcmod(women-29, menstruating-32)
conj_and(wearing-18, eating-34)
csubj(sinful-52, eating-34)
dobj(eating-34, shellfish-35)
conj_and(wearing-18, doing-37)
csubj(sinful-52, doing-37)
dobj(doing-37, work-38)
prep_on(doing-37, Saturday-40)
conj_and(wearing-18, working-43)
csubj(sinful-52, working-43)
det(company-48, a-45)
nn(company-48, credit-46)
nn(company-48, card-47)
prep_for(working-43, company-48)
cop(sinful-52, are-49)
advmod(sinful-52, also-50)
advmod(sinful-52, pretty-51)
ccomp(remember-16, sinful-52)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP
                  (VP (VB disregard)
                    (NP (PRP$ your) (JJ own) (NNS sins)))
                  (CC and)
                  (VP (VB focus)
                    (PP (IN on)
                      (NP
                        (NP (DT the) (NNS ones))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP like))))))
                    (, ,)
                    (ADJP (JJ fine))))))))))
    (, ,)
    (ADVP (RB just))
    (VP (VB be)
      (ADJP (JJ aware)
        (PP (IN of)
          (NP (PRP$ your) (NN choice)
            (S
              (VP (TO to)
                (VP (VB do)
                  (ADVP (RB so)))))))))
    (. .)))

mark(going-4, If-1)
nsubj(going-4, you-2)
xsubj(disregard-6, you-2)
aux(going-4, 're-3)
advcl(aware-22, going-4)
aux(disregard-6, to-5)
xcomp(going-4, disregard-6)
poss(sins-9, your-7)
amod(sins-9, own-8)
dobj(disregard-6, sins-9)
xcomp(going-4, focus-11)
conj_and(disregard-6, focus-11)
det(ones-14, the-13)
prep_on(focus-11, ones-14)
dobj(like-16, ones-14)
nsubj(like-16, you-15)
rcmod(ones-14, like-16)
acomp(focus-11, fine-18)
advmod(aware-22, just-20)
cop(aware-22, be-21)
root(ROOT-0, aware-22)
poss(choice-25, your-24)
prep_of(aware-22, choice-25)
aux(do-27, to-26)
infmod(choice-25, do-27)
advmod(do-27, so-28)

(ROOT
  (S
    (S
      (SBAR (IN As)
        (S
          (SBAR (IN for)
            (FRAG
              (ADJP (JJ right)
                (CC and)
                (JJ wrong))))
          (, ,)
          (NP
            (NP (DT the) (JJ major) (JJ moral) (NNS systems))
            (, ,)
            (PP (IN like)
              (NP (NN deontology)))
            (, ,))
          (VP (VBD founded)
            (PP (IN by)
              (NP
                (NP (NNP Immanual) (NNP Kant))
                (, ,)
                (NP (DT a) (JJ staunch) (NNP Christian))))
            (, ,)
            (ADVP (RB really)))))
      (VP (VBZ forms)
        (NP (DT no) (JJ valid) (NN argument))
        (PP (IN against)
          (ADJP (RB homosexuality) (JJ other)))
        (SBAR (IN than) (, ,) (`` ``)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (ADVP (RB really))
              (VP (VB like)
                (NP (PRP it))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (JJ gross)))
    (. .)))

mark(founded-15, As-1)
mark(right-3, for-2)
advcl(founded-15, right-3)
conj_and(right-3, wrong-5)
advcl(founded-15, wrong-5)
det(systems-10, the-7)
amod(systems-10, major-8)
amod(systems-10, moral-9)
nsubj(founded-15, systems-10)
prep_like(systems-10, deontology-13)
csubj(forms-25, founded-15)
nn(Kant-18, Immanual-17)
prep_by(founded-15, Kant-18)
det(Christian-22, a-20)
amod(Christian-22, staunch-21)
appos(Kant-18, Christian-22)
advmod(founded-15, really-24)
ccomp(gross-44, forms-25)
det(argument-28, no-26)
amod(argument-28, valid-27)
dobj(forms-25, argument-28)
advmod(other-31, homosexuality-30)
prep_against(forms-25, other-31)
mark(like-39, than-32)
nsubj(like-39, I-35)
aux(like-39, do-36)
neg(like-39, n't-37)
advmod(like-39, really-38)
advcl(forms-25, like-39)
dobj(like-39, it-40)
nsubj(gross-44, it-42)
cop(gross-44, 's-43)
root(ROOT-0, gross-44)

(ROOT
  (S ('' '')
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)
        (SBAR
          (WHNP (WP what))
          (, ,)
          (S
            (NP (PRP I))
            (VP (VBP think)
              (SBAR
                (S
                  (NP (JJ eating) (NN beef))
                  (VP (VBZ is)
                    (NP (JJ gross))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD 'd)
        (ADVP (RB hardly))
        (VP (VB call)
          (NP (PRP it))
          (NP (DT a) (NN sin)))))
    (. .)))

dep(know-5, Well-2)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
dep(think-9, what-6)
nsubj(think-9, I-8)
ccomp(know-5, think-9)
amod(beef-11, eating-10)
nsubj(gross-13, beef-11)
cop(gross-13, is-12)
ccomp(think-9, gross-13)
nsubj(call-19, I-16)
aux(call-19, 'd-17)
advmod(call-19, hardly-18)
conj_but(know-5, call-19)
iobj(call-19, it-20)
det(sin-22, a-21)
dobj(call-19, sin-22)

(ROOT
  (S
    (VP (VB Let)
      (ADVP (RB alone))
      (NP
        (NP (NNP Jeremy) (NNP Bentham))
        (CC and)
        (NP
          (NP (NNP John) (NNP Stuart) (NNP Mill))
          (, ,)
          (NP
            (NP (NNS founders))
            (PP (IN of)
              (NP (NNP Utilitarianism))))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP have)
                (ADVP
                  (ADJP (NN nothing))
                  (ADVP (RB much) (IN at) (DT all)))
                (S
                  (VP (TO to)
                    (VP (VB say)
                      (PP (IN about)
                        (NP (NN homosexuality))))))))))))
    (. .)))

root(ROOT-0, Let-1)
advmod(Let-1, alone-2)
nn(Bentham-4, Jeremy-3)
dobj(Let-1, Bentham-4)
nn(Mill-8, John-6)
nn(Mill-8, Stuart-7)
dobj(Let-1, Mill-8)
conj_and(Bentham-4, Mill-8)
appos(Mill-8, founders-10)
nsubj(have-15, founders-10)
prep_of(founders-10, Utilitarianism-12)
rcmod(Mill-8, have-15)
rcmod(founders-10, have-15)
dep(at-18, nothing-16)
advmod(at-18, much-17)
advmod(have-15, at-18)
pobj(at-18, all-19)
aux(say-21, to-20)
xcomp(have-15, say-21)
prep_about(say-21, homosexuality-23)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (VP (VBZ is)
      (ADVP (RB homosexuality))
      (NP (DT a) (NN sin)))
    (. ?)))

advmod(sin-6, So-1)
cop(sin-6, is-3)
advmod(sin-6, homosexuality-4)
det(sin-6, a-5)
root(ROOT-0, sin-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ depends)
      (ADVP (RB strongly))
      (PP (IN on)
        (NP
          (SBAR
            (WHNP (WP who))
            (S
              (NP (PRP you))
              (VP (VBP ask))))
          (CC and)
          (NP
            (NP (PRP$ their) (NNS biases))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP they))
                (VP (VBP are) (RB n't)
                  (ADVP (RB likely))
                  (VP (VBG trying)
                    (S
                      (VP (TO to)
                        (VP (VB control))))))))))))
    (. .)))

nsubj(depends-2, It-1)
root(ROOT-0, depends-2)
advmod(depends-2, strongly-3)
dobj(ask-7, who-5)
rel(ask-7, who-5)
nsubj(ask-7, you-6)
prep_on(depends-2, ask-7)
poss(biases-10, their-9)
prep_on(depends-2, biases-10)
conj_and(ask-7, biases-10)
dobj(trying-17, biases-10)
rel(trying-17, which-12)
nsubj(trying-17, they-13)
xsubj(control-19, they-13)
aux(trying-17, are-14)
neg(trying-17, n't-15)
advmod(trying-17, likely-16)
rcmod(biases-10, trying-17)
aux(control-19, to-18)
xcomp(trying-17, control-19)

(ROOT
  (SQ (VBZ Is)
    (NP (NN homosexuality))
    (ADJP (JJ wrong))
    (. ?)))

cop(wrong-3, Is-1)
nsubj(wrong-3, homosexuality-2)
root(ROOT-0, wrong-3)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (VP (VB try)
      (S
        (VP (VBG taking)
          (NP (CD ethics) (CD 101)))))
    (. .)))

dep(try-3, Well-1)
root(ROOT-0, try-3)
xcomp(try-3, taking-4)
num(101-6, ethics-5)
dobj(taking-4, 101-6)

(ROOT
  (S
    (NP
      (NP (NNP First))
      (PP (IN of)
        (NP
          (NP (DT all))
          (, ,)
          (NP (`` ``) (NN sin) ('' '')))))
    (VP (VBZ is)
      (ADJP (RB far) (RB too) (JJ subjective)
        (SBAR
          (S
            (NP (DT a) (NN word))
            (VP (TO to)
              (VP (VB be)
                (VP (VBN used)
                  (PP (IN in)
                    (NP (DT this) (NN case))))))))))
    (. .)))

nsubj(subjective-11, First-1)
prep_of(First-1, all-3)
appos(all-3, sin-6)
cop(subjective-11, is-8)
advmod(subjective-11, far-9)
advmod(subjective-11, too-10)
root(ROOT-0, subjective-11)
det(word-13, a-12)
nsubjpass(used-16, word-13)
aux(used-16, to-14)
auxpass(used-16, be-15)
dep(subjective-11, used-16)
det(case-19, this-18)
prep_in(used-16, case-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB easily))
      (VP (VBN confused)
        (PP (IN with)
          (NP
            (NP
              (NP (NNS notions))
              (PP (JJ such) (IN as)
                (NP (NN right))))
            (CC and)
            (ADJP (JJ wrong) (, ,) (JJ good)
              (CC and)
              (JJ evil))))))
    (. .)))

nsubjpass(confused-4, It-1)
auxpass(confused-4, is-2)
advmod(confused-4, easily-3)
root(ROOT-0, confused-4)
prep_with(confused-4, notions-6)
prep_such_as(notions-6, right-9)
prep_with(confused-4, wrong-11)
conj_and(notions-6, wrong-11)
conj_and(notions-6, good-13)
conj_and(wrong-11, good-13)
conj_and(notions-6, evil-15)
conj_and(wrong-11, evil-15)

(ROOT
  (S
    (NP (NNP Sin))
    (VP (VBZ implies)
      (NP
        (NP (DT an) (NN act))
        (VP (VBN prohibited)
          (PP (IN by)
            (NP (DT a) (JJ particular) (NN religion))))))
    (. .)))

nsubj(implies-2, Sin-1)
root(ROOT-0, implies-2)
det(act-4, an-3)
dobj(implies-2, act-4)
partmod(act-4, prohibited-5)
det(religion-9, a-7)
amod(religion-9, particular-8)
agent(prohibited-5, religion-9)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS lots))
        (PP (IN of)
          (NP (NNS religions)))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, lots-3)
prep_of(lots-3, religions-5)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ is)
          (VP (VBN considered)
            (NP
              (NP (DT a) (NN sin))
              (PP (IN in)
                (NP (CD one))))))))
    (VP (VBZ is) (RB not)
      (PP (IN in)
        (NP (DT another))))
    (. .)))

nsubjpass(considered-3, What-1)
auxpass(considered-3, is-2)
csubj(is-8, considered-3)
det(sin-5, a-4)
dobj(considered-3, sin-5)
prep_in(sin-5, one-7)
root(ROOT-0, is-8)
neg(is-8, not-9)
prep_in(is-8, another-11)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBD was)
          (VP (VBN considered)
            (NP
              (NP (DT a) (NN sin))
              (PP (IN in)
                (NP (NN antiquity))))))))
    (VP (VBZ is)
      (ADVP (RB now))
      (VP (VBN considered)
        (S
          (ADJP (JJ acceptable)))))
    (. .)))

nsubjpass(considered-3, What-1)
auxpass(considered-3, was-2)
csubjpass(considered-10, considered-3)
det(sin-5, a-4)
dobj(considered-3, sin-5)
prep_in(sin-5, antiquity-7)
auxpass(considered-10, is-8)
advmod(considered-10, now-9)
root(ROOT-0, considered-10)
acomp(considered-10, acceptable-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB pick)
                (CC and)
                (VB choose)
                (NP
                  (NP (PRP$ your) (NNS sins))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which) (JJ many) (NNS people))
                    (S
                      (VP (VBP do)))))))))))
    (, ,)
    (VP (VB fine))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
xsubj(pick-5, you-2)
advcl(fine-16, want-3)
aux(pick-5, to-4)
xcomp(want-3, pick-5)
xcomp(want-3, choose-7)
conj_and(pick-5, choose-7)
poss(sins-9, your-8)
dobj(pick-5, sins-9)
det(people-13, sins-9)
amod(people-13, many-12)
nsubj(do-14, people-13)
rcmod(sins-9, do-14)
root(ROOT-0, fine-16)

(ROOT
  (S
    (ADVP (RB Just))
    (VP
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBN done)
                (ADVP (RB so)))))))
      (CC and)
      (VP (VB be)
        (ADJP (JJ capable)
          (PP (IN of)
            (S
              (VP
                (VP (VBG understanding)
                  (NP (DT that)))
                (CONJP (RB as) (RB well) (IN as))
                (VP (VBG applying)
                  (ADVP (RB as) (RB much))
                  (S
                    (VP (VBG meaning)
                      (SBAR (IN as)
                        (S
                          (VP (VBZ is)
                            (ADJP (JJ reasonable)
                              (PP (TO to)
                                (NP (DT any) (NN act))))))))))))))))
    (. .)))

advmod(know-2, Just-1)
root(ROOT-0, know-2)
complm(done-6, that-3)
nsubj(done-6, you-4)
aux(done-6, have-5)
ccomp(know-2, done-6)
advmod(done-6, so-7)
cop(capable-10, be-9)
conj_and(know-2, capable-10)
prepc_of(capable-10, understanding-12)
dobj(understanding-12, that-13)
prepc_of(capable-10, applying-17)
conj_and(understanding-12, applying-17)
advmod(much-19, as-18)
advmod(applying-17, much-19)
xcomp(applying-17, meaning-20)
mark(reasonable-23, as-21)
cop(reasonable-23, is-22)
advcl(meaning-20, reasonable-23)
det(act-26, any-25)
prep_to(reasonable-23, act-26)

