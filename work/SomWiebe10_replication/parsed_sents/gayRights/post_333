(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN response))
        (PP (TO to)
          (NP
            (NP (PRP$ my) (NN assertion))
            (SBAR (IN that)
              (S
                (NP (RB only) (DT an) (NN atheist))
                (VP (MD can)
                  (VP (VB be)
                    (ADJP (RB truly) (JJ moral))
                    (SBAR (IN because)
                      (S
                        (NP (JJ religious) (NNS folks))
                        (VP (VBP have)
                          (NP
                            (NP (JJ mixed) (NNS motives))
                            (SBAR
                              (S
                                (NP (PRP they))
                                (ADVP (RB also))
                                (VP (VBP want)
                                  (S
                                    (VP (TO to)
                                      (VP (VB earn)
                                        (NP (DT a) (NN ticket))
                                        (PP (TO to)
                                          (NP (NN heaven)))))))))))))))))))))
    (NP (PRP you))
    (VP (VBP claim)
      (SBAR (IN that)
        (S
          (NP (NNS Christians))
          (VP (VBP are)
            (ADJP (JJ different)
              (PP (IN from)
                (NP (JJ other) (JJ religious) (NNS types))))
            (SBAR (IN because)
              (S
                (NP (PRP they))
                (VP (VBP know)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (MD ca) (RB n't)
                        (VP (VB get)
                          (PP (TO to)
                            (NP (NN heaven)))
                          (PP (IN by)
                            (S
                              (VP (VBG being)
                                (ADJP (`` ``) (JJ good))))))))))))))))
    (. .)))

prep_in(claim-30, response-2)
poss(assertion-5, my-4)
prep_to(response-2, assertion-5)
dobj(moral-13, assertion-5)
complm(moral-13, that-6)
advmod(atheist-9, only-7)
det(atheist-9, an-8)
nsubj(moral-13, atheist-9)
aux(moral-13, can-10)
cop(moral-13, be-11)
advmod(moral-13, truly-12)
dep(assertion-5, moral-13)
mark(have-17, because-14)
amod(folks-16, religious-15)
nsubj(have-17, folks-16)
advcl(moral-13, have-17)
amod(motives-19, mixed-18)
dobj(have-17, motives-19)
dobj(want-22, motives-19)
nsubj(want-22, they-20)
advmod(want-22, also-21)
rcmod(motives-19, want-22)
aux(earn-24, to-23)
xcomp(want-22, earn-24)
det(ticket-26, a-25)
dobj(earn-24, ticket-26)
prep_to(earn-24, heaven-28)
nsubj(claim-30, you-29)
root(ROOT-0, claim-30)
complm(different-34, that-31)
nsubj(different-34, Christians-32)
cop(different-34, are-33)
ccomp(claim-30, different-34)
amod(types-38, other-36)
amod(types-38, religious-37)
prep_from(different-34, types-38)
mark(know-41, because-39)
nsubj(know-41, they-40)
advcl(different-34, know-41)
nsubj(get-45, they-42)
aux(get-45, ca-43)
neg(get-45, n't-44)
ccomp(know-41, get-45)
prep_to(get-45, heaven-47)
cop(good-51, being-49)
prepc_by(get-45, good-51)

(ROOT
  (S ('' '')
    (ADVP (RB Instead))
    (, ,)
    (NP (PRP you))
    (VP (VBP say) (, ,) (`` ``)
      (SBAR
        (S
          (NP (NNS Christians))
          (VP (VBP believe)
            (SBAR (IN that)
              (S
                (S
                  (VP (VBG accepting)
                    (NP
                      (NP (NNP Jesus) (NNP Christ))
                      (PP (IN as)
                        (NP
                          (NP
                            (NP (NNP God) (POS 's))
                            (NNP Son))
                          (CC and)
                          (NP
                            (NP (DT the) (NN forgiveness))
                            (PP (IN of)
                              (NP
                                (NP (PRP$ their) (NN sin))
                                (PP (IN by)
                                  (NP (NN grace))))))
                          (: ...))))))
                (VP (VBZ is)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ enables)
                        (S
                          (NP (PRP them))
                          (VP (TO to)
                            (VP (VB go)
                              (PP (TO to)
                                (NP (NN heaven))))))))))))))))
    (. .)))

advmod(say-5, Instead-2)
nsubj(say-5, you-4)
root(ROOT-0, say-5)
nsubj(believe-9, Christians-8)
ccomp(say-5, believe-9)
complm(is-27, that-10)
csubj(is-27, accepting-11)
nn(Christ-13, Jesus-12)
dobj(accepting-11, Christ-13)
poss(Son-17, God-15)
prep_as(Christ-13, Son-17)
det(forgiveness-20, the-19)
prep_as(Christ-13, forgiveness-20)
conj_and(Son-17, forgiveness-20)
poss(sin-23, their-22)
prep_of(forgiveness-20, sin-23)
prep_by(sin-23, grace-25)
ccomp(believe-9, is-27)
nsubj(enables-29, what-28)
ccomp(is-27, enables-29)
nsubj(go-32, them-30)
aux(go-32, to-31)
xcomp(enables-29, go-32)
prep_to(go-32, heaven-34)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP die))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (ADJP (JJ dead)))
    (. .)))

advmod(die-3, When-1)
nsubj(die-3, you-2)
advcl(dead-7, die-3)
nsubj(dead-7, you-5)
cop(dead-7, 're-6)
root(ROOT-0, dead-7)

(ROOT
  (NP (FW Period) (. .)))

root(ROOT-0, Period-1)

(ROOT
  (S (CC And)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT no) (NN resurrection))
        (PP (IN except)
          (PP (IN for)
            (NP (NNP Jesus))))))
    (. .)))

cc('s-3, And-1)
expl('s-3, there-2)
root(ROOT-0, 's-3)
det(resurrection-5, no-4)
nsubj('s-3, resurrection-5)
prepc_except_for(resurrection-5, for-7)
pobj(resurrection-5, Jesus-8)

(ROOT
  (S
    (ADVP (RB Furthermore))
    (, ,)
    (NP (PRP he))
    (VP (VBZ does) (RB n't)
      (VP (VB reward)
        (CC or)
        (VB punish)
        (NP (NNS people))
        (PP (IN in)
          (NP (DT this) (NN world)))
        (, ,)
        (ADVP (RB either))))
    (. .)))

advmod(reward-6, Furthermore-1)
nsubj(reward-6, he-3)
nsubj(punish-8, he-3)
aux(reward-6, does-4)
neg(reward-6, n't-5)
root(ROOT-0, reward-6)
conj_or(reward-6, punish-8)
dobj(reward-6, people-9)
det(world-12, this-11)
prep_in(reward-6, world-12)
advmod(reward-6, either-14)
conj_or(reward-6, either-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ leaves)
      (NP (DT that) (NN responsibility))
      (PP (TO to)
        (NP
          (NP (JJ other) (NNS people))
          (CC and)
          (NP (PRP$ their) (NNS societies)))))
    (. .)))

nsubj(leaves-2, He-1)
root(ROOT-0, leaves-2)
det(responsibility-4, that-3)
dobj(leaves-2, responsibility-4)
amod(people-7, other-6)
prep_to(leaves-2, people-7)
poss(societies-10, their-9)
prep_to(leaves-2, societies-10)
conj_and(people-7, societies-10)

(ROOT
  (S
    (PP (IN In)
      (ADJP (JJ short)))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (JJ devine) (NN reward)
          (CC or)
          (NN punishment))
        (PP (IN at)
          (NP (DT all)))))
    (. .)))

prep_in(is-5, short-2)
expl(is-5, there-4)
root(ROOT-0, is-5)
det(reward-8, no-6)
amod(reward-8, devine-7)
nsubj(is-5, reward-8)
nsubj(is-5, punishment-10)
conj_or(reward-8, punishment-10)
prep_at(reward-8, all-12)

(ROOT
  (S
    (S
      (S
        (NP (PRP You))
        (VP (VBP live)
          (NP (PRP$ your) (NN life))))
      (CC and)
      (S
        (S
          (ADVP (RB then))
          (NP (PRP you))
          (VP (VBP die)))
        (, ,)
        (CC and)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB worship)
                        (NP (NN god)))
                      (CC and)
                      (VP (VB obey)
                        (NP (PRP$ his) (NNS instructions)))))))))
          (, ,)
          (NP (DT that))
          (VP (VBZ 's)
            (NP
              (NP (PRP$ your) (NN choice))
              (PRN (-LRB- -LRB-)
                (NP (JJ free) (NN will))
                (-RRB- -RRB-)))))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ 's)
        (NP
          (NP (DT no) (NN benefit))
          (PP (TO to)
            (NP (PRP you))))))
    (. .)))

nsubj(live-2, You-1)
root(ROOT-0, live-2)
poss(life-4, your-3)
dobj(live-2, life-4)
advmod(die-8, then-6)
nsubj(die-8, you-7)
conj_and(live-2, die-8)
mark(want-13, if-11)
nsubj(want-13, you-12)
xsubj(worship-15, you-12)
advcl(choice-25, want-13)
aux(worship-15, to-14)
xcomp(want-13, worship-15)
dobj(worship-15, god-16)
xcomp(want-13, obey-18)
conj_and(worship-15, obey-18)
poss(instructions-20, his-19)
dobj(obey-18, instructions-20)
nsubj(choice-25, that-22)
cop(choice-25, 's-23)
poss(choice-25, your-24)
conj_and(live-2, choice-25)
conj_and(die-8, choice-25)
amod(will-28, free-27)
appos(choice-25, will-28)
expl('s-33, there-32)
conj_but(live-2, 's-33)
det(benefit-35, no-34)
nsubj('s-33, benefit-35)
prep_to(benefit-35, you-37)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ does) (RB n't)
      (ADVP (RB even))
      (VP (VB keep)
        (NP
          (NP (NN track))
          (PP (IN of)
            (NP
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ does))))
              (CC and)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ does) (RB n't)))))))))
    (. .)))

nsubj(keep-5, He-1)
aux(keep-5, does-2)
neg(keep-5, n't-3)
advmod(keep-5, even-4)
root(ROOT-0, keep-5)
dobj(keep-5, track-6)
nsubj(does-9, who-8)
prep_of(track-6, does-9)
nsubj(does-12, who-11)
prep_of(track-6, does-12)
conj_and(does-9, does-12)
neg(does-12, n't-13)

(ROOT
  (S
    (ADVP (RB Furthermore))
    (, ,)
    (NP (PRP he))
    (VP (VBZ points)
      (PRT (RP out))
      (SBAR (IN that)
        (S (, ,)
          (ADVP (JJ contrary)
            (PP (TO to)
              (NP (PRP$ your) (NN statement))))
          (, ,)
          (NP (PRP he))
          (VP (VBZ 's)
            (ADVP (RB never))
            (NP
              (NP (JJ sacrificed) (NN anything))
              (PP (IN for)
                (NP (NNS humans))))
            (, ,)
            (SBAR (IN because)
              (S
                (NP (PRP he))
                (ADVP (RB always))
                (VP (VBZ has)
                  (NP
                    (NP
                      (NP (NN everything))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (MD could)
                            (ADVP (RB ever))
                            (VP (VB want))))))
                    (, ,)
                    (CC and)
                    (NP
                      (NP (NN anything))
                      (SBAR
                        (S
                          (NP (PRP he))
                          (VP (VBZ does)
                            (SBAR (IN for)
                              (S
                                (NP (PRP us))
                                (VP (VBZ is)
                                  (NP
                                    (NP (DT no) (NN skin))
                                    (PP (IN off)
                                      (NP (PRP$ his) (NN nose)))))))))))))))))))
    (. .)))

advmod(points-4, Furthermore-1)
nsubj(points-4, he-3)
root(ROOT-0, points-4)
prt(points-4, out-5)
complm(anything-17, that-6)
poss(statement-11, your-10)
prep_contrary_to(anything-17, statement-11)
nsubj(anything-17, he-13)
cop(anything-17, 's-14)
neg(anything-17, never-15)
amod(anything-17, sacrificed-16)
ccomp(points-4, anything-17)
prep_for(anything-17, humans-19)
mark(has-24, because-21)
nsubj(has-24, he-22)
advmod(has-24, always-23)
advcl(anything-17, has-24)
dobj(has-24, everything-25)
dobj(want-29, everything-25)
nsubj(want-29, he-26)
aux(want-29, could-27)
advmod(want-29, ever-28)
rcmod(everything-25, want-29)
conj_and(everything-25, anything-32)
nsubj(does-34, he-33)
rcmod(anything-32, does-34)
mark(skin-39, for-35)
nsubj(skin-39, us-36)
cop(skin-39, is-37)
det(skin-39, no-38)
advcl(does-34, skin-39)
poss(nose-42, his-41)
prep_off(skin-39, nose-42)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ is) (RB n't)
      (ADJP (RB even) (JJ capable)
        (PP (IN of)
          (NP (NN sacrifice)))))
    (. .)))

nsubj(capable-5, He-1)
cop(capable-5, is-2)
neg(capable-5, n't-3)
advmod(capable-5, even-4)
root(ROOT-0, capable-5)
prep_of(capable-5, sacrifice-7)

(ROOT
  (S ('' '')
    (ADVP (UH OK))
    (, ,) (RB so)
    (NP (PRP you))
    (VP (VBD spell)
      (PRT (RP out))
      (NP (DT a) (JJ particular) (NN way)
        (S
          (VP (TO to)
            (VP (VB earn)
              (NP (DT that) (NN ticket)))))))
    (. .)))

advmod(spell-6, OK-2)
advmod(spell-6, so-4)
nsubj(spell-6, you-5)
root(ROOT-0, spell-6)
prt(spell-6, out-7)
det(way-10, a-8)
amod(way-10, particular-9)
dobj(spell-6, way-10)
aux(earn-12, to-11)
infmod(way-10, earn-12)
det(ticket-14, that-13)
dobj(earn-12, ticket-14)

(ROOT
  (SINV
    (VP
      (ADVP (RB Even))
      (VBG seeing)
      (NP (PRP$ his) (JJ so-called) (NN son))
      (PP (IN on)
        (NP (DT the) (NN cross))))
    (VP (VBD did) (RB n't)
      (VP (VB cause)
        (NP (PRP him))))
    (NP (DT any) (NN displeasure))
    (. .)))

advmod(seeing-2, Even-1)
root(ROOT-0, seeing-2)
poss(son-5, his-3)
amod(son-5, so-called-4)
dobj(seeing-2, son-5)
det(cross-8, the-7)
prep_on(seeing-2, cross-8)
aux(cause-11, did-9)
neg(cause-11, n't-10)
dep(seeing-2, cause-11)
dobj(cause-11, him-12)
det(displeasure-14, any-13)
nsubj(seeing-2, displeasure-14)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ 's)
      (ADJP (RB not) (JJ human))
      (, ,)
      (SBAR (IN after)
        (FRAG
          (NP (DT all))))
      (, ,)
      (CC and)
      (VP (MD can) (RB not)
        (VP (VB suffer))))
    (. .)))

nsubj(human-4, He-1)
nsubj(suffer-12, He-1)
cop(human-4, 's-2)
neg(human-4, not-3)
root(ROOT-0, human-4)
mark(all-7, after-6)
advcl(human-4, all-7)
aux(suffer-12, can-10)
neg(suffer-12, not-11)
conj_and(human-4, suffer-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (ADJP (JJ possible)))
    (. .)))

nsubj(possible-4, It-1)
cop(possible-4, 's-2)
neg(possible-4, not-3)
root(ROOT-0, possible-4)

(ROOT
  (S (CC And)
    (NP (PRP he))
    (VP (MD ca) (RB n't)
      (VP (VB be)
        (ADJP (JJ pleased))
        (, ,)
        (ADVP (RB either))))
    (. .)))

cc(pleased-6, And-1)
nsubj(pleased-6, he-2)
aux(pleased-6, ca-3)
neg(pleased-6, n't-4)
cop(pleased-6, be-5)
root(ROOT-0, pleased-6)
advmod(pleased-6, either-8)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ 's)
      (ADJP (RB already) (JJ perfect)))
    (. .)))

nsubj(perfect-4, He-1)
cop(perfect-4, 's-2)
advmod(perfect-4, already-3)
root(ROOT-0, perfect-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBZ is) (RB not)
      (ADJP (JJ humanoid))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (JJ many) (NNS people))
          (VP (VBP like)
            (S
              (VP (TO to)
                (VP (VB imagine))))))))
    (. .)))

nsubj(humanoid-4, He-1)
cop(humanoid-4, is-2)
neg(humanoid-4, not-3)
root(ROOT-0, humanoid-4)
mark(like-9, as-6)
amod(people-8, many-7)
nsubj(like-9, people-8)
xsubj(imagine-11, people-8)
advcl(humanoid-4, like-9)
aux(imagine-11, to-10)
xcomp(like-9, imagine-11)

(ROOT
  (SQ
    (PP (VBN Given)
      (NP (DT that) (NN information)))
    (, ,) (MD can)
    (NP (PRP you))
    (ADVP (RB honestly))
    (VP (VB say)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD would)
            (VP (VB continue)
              (S
                (VP (TO to)
                  (VP (VB worship)
                    (NP (PRP him))
                    (UCP
                      (ADJP (IN as) (RB devoutly) (RB as)))
                    (ADVP (RB before))
                    (, ,)
                    (S
                      (VP (VBG knowing)
                        (SBAR (IN that)
                          (S
                            (NP (PRP you))
                            (VP (MD will)
                              (VP (VB get)
                                (NP
                                  (NP (RB absolutely) (NN nothing))
                                  (PP (IN in)
                                    (NP (NN return))))))))))))))))))
    (. ?)))

prep(say-8, Given-1)
det(information-3, that-2)
dep(Given-1, information-3)
aux(say-8, can-5)
nsubj(say-8, you-6)
advmod(say-8, honestly-7)
root(ROOT-0, say-8)
complm(continue-12, that-9)
nsubj(continue-12, you-10)
xsubj(worship-14, you-10)
aux(continue-12, would-11)
ccomp(say-8, continue-12)
aux(worship-14, to-13)
xcomp(continue-12, worship-14)
dobj(worship-14, him-15)
dep(as-18, as-16)
advmod(as-18, devoutly-17)
dep(worship-14, as-18)
advmod(worship-14, before-19)
xcomp(worship-14, knowing-21)
complm(get-25, that-22)
nsubj(get-25, you-23)
aux(get-25, will-24)
ccomp(knowing-21, get-25)
advmod(nothing-27, absolutely-26)
dobj(get-25, nothing-27)
prep_in(nothing-27, return-29)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD can))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP I))
    (VP (MD will)
      (VP (VB award)
        (S
          (NP (PRP you))
          (NP
            (NP (DT a) (JJ special) (NN Purity))
            (PP (IN of)
              (NP (NNP Motives) (NN award)))))))
    (. .)))

mark(can-3, If-1)
nsubj(can-3, you-2)
advcl(award-8, can-3)
advmod(award-8, then-5)
nsubj(award-8, I-6)
aux(award-8, will-7)
root(ROOT-0, award-8)
nsubj(Purity-12, you-9)
det(Purity-12, a-10)
amod(Purity-12, special-11)
xcomp(award-8, Purity-12)
nn(award-15, Motives-14)
prep_of(Purity-12, award-15)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT those) (NNS awards))
          (VP (MD will)
            (VP (VB be)
              (ADJP (RB quite) (JJ rare))
              (, ,)
              (ADVP (RB indeed)))))))
    (. .)))

cc(think-3, But-1)
nsubj(think-3, I-2)
root(ROOT-0, think-3)
det(awards-5, those-4)
nsubj(rare-9, awards-5)
aux(rare-9, will-6)
cop(rare-9, be-7)
advmod(rare-9, quite-8)
ccomp(think-3, rare-9)
advmod(rare-9, indeed-11)

(ROOT
  (S (CC But)
    (ADVP (RB surely))
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD could)
              (VP
                (VP (VB live)
                  (NP
                    (NP (DT a) (NN life))
                    (PP (IN of)
                      (NP
                        (NP (JJ total) (NN evil))
                        (CC and)
                        (NP (JJ massive) (NN cruelty))))))
                (CC and)
                (VP
                  (ADVP (RB still))
                  (VB get)
                  (NP (DT a) (JJ Go-To-Heaven-Free) (NN card))
                  (ADVP (RB just))
                  (PP (IN by) (`` ``)
                    (S
                      (VP (VBG accepting)
                        (NP
                          (NP (NNP Jesus) (NNP Christ))
                          (PP (IN as)
                            (NP
                              (NP
                                (NP (NNP God) (POS 's))
                                (NNP Son))
                              (CC and)
                              (NP
                                (NP (DT the) (NN forgiveness))
                                (PP (IN of)
                                  (NP (-LRB- -LRB-) (PRP$ your) (-RRB- -RRB-) (NN sin)))))))
                        (PP (IN by)
                          (NP (NN grace)))))))))))))
    (. .)))

cc(think-6, But-1)
advmod(think-6, surely-2)
nsubj(think-6, you-3)
aux(think-6, do-4)
neg(think-6, n't-5)
root(ROOT-0, think-6)
nsubj(live-9, you-7)
nsubj(get-20, you-7)
aux(live-9, could-8)
ccomp(think-6, live-9)
det(life-11, a-10)
dobj(live-9, life-11)
amod(evil-14, total-13)
prep_of(life-11, evil-14)
amod(cruelty-17, massive-16)
prep_of(life-11, cruelty-17)
conj_and(evil-14, cruelty-17)
advmod(get-20, still-19)
ccomp(think-6, get-20)
conj_and(live-9, get-20)
det(card-23, a-21)
amod(card-23, Go-To-Heaven-Free-22)
dobj(get-20, card-23)
advmod(get-20, just-24)
prep(get-20, by-25)
dep(by-25, accepting-27)
nn(Christ-29, Jesus-28)
dobj(accepting-27, Christ-29)
poss(Son-33, God-31)
prep_as(Christ-29, Son-33)
det(forgiveness-36, the-35)
prep_as(Christ-29, forgiveness-36)
conj_and(Son-33, forgiveness-36)
poss(sin-41, your-39)
prep_of(forgiveness-36, sin-41)
prep_by(accepting-27, grace-43)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD 'd)
                (VP (VB present)
                  (S
                    (NP (DT some) (JJ weasel) (NNS words))
                    (VP (TO to)
                      (VP (VB say)
                        (SBAR (IN that)
                          (S
                            (NP (PRP you))
                            (VP (MD ca) (RB n't)
                              (ADVP (RB really))
                              (VP (VB do)
                                (NP (DT the) (JJ former)
                                  (CC and)
                                  (DT the) (NN latter))
                                (PP (IN at)
                                  (NP (DT the) (JJ same) (NN time)))))))))))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBZ is) (RB n't)
          (NP
            (NP (DT the) (NN behavior))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ impresses)
                  (NP (NNP God))))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT the) (JJ accepting) (NN part))))
    (. .)))

nsubj(sure-4, I-2)
cop(sure-4, 'm-3)
root(ROOT-0, sure-4)
nsubj(present-7, you-5)
aux(present-7, 'd-6)
dep(sure-4, present-7)
det(words-10, some-8)
amod(words-10, weasel-9)
nsubj(say-12, words-10)
aux(say-12, to-11)
xcomp(present-7, say-12)
complm(do-18, that-13)
nsubj(do-18, you-14)
aux(do-18, ca-15)
neg(do-18, n't-16)
advmod(do-18, really-17)
ccomp(say-12, do-18)
det(latter-23, the-19)
amod(latter-23, former-20)
conj_and(former-20, the-22)
amod(latter-23, the-22)
dobj(do-18, latter-23)
det(time-27, the-25)
amod(time-27, same-26)
prep_at(do-18, time-27)
nsubj(behavior-34, it-30)
cop(behavior-34, is-31)
neg(behavior-34, n't-32)
det(behavior-34, the-33)
nsubj(impresses-36, behavior-34)
ccomp(part-43, behavior-34)
rcmod(behavior-34, impresses-36)
dobj(impresses-36, God-37)
nsubj(part-43, it-39)
cop(part-43, 's-40)
det(part-43, the-41)
amod(part-43, accepting-42)
conj_but(sure-4, part-43)

(ROOT
  (FRAG
    (INTJ (UH OK))
    (, ,)
    (ADVP (RB whatever))
    (. .)))

dep(whatever-3, OK-1)
root(ROOT-0, whatever-3)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (ADVP (RB still))
        (VP (VB impress)
          (NP (PRP him))
          (ADVP
            (ADVP (RB favorably))
            (CC or)
            (ADVP (RB unfavorably)))
          (, ,)
          (ADVP (RB right)))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (MD may)
        (VP (VB influence)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP he))
              (VP (VBZ sends)
                (NP (PRP you))
                (PP (IN after)
                  (NP (NN death)))))))))
    (. .)))

nsubj(impress-4, You-1)
aux(impress-4, can-2)
advmod(impress-4, still-3)
root(ROOT-0, impress-4)
dobj(impress-4, him-5)
advmod(impress-4, favorably-6)
advmod(impress-4, unfavorably-8)
conj_or(favorably-6, unfavorably-8)
advmod(impress-4, right-10)
nsubj(influence-15, that-13)
aux(influence-15, may-14)
conj_and(impress-4, influence-15)
advmod(sends-18, where-16)
nsubj(sends-18, he-17)
advcl(influence-15, sends-18)
dobj(sends-18, you-19)
prep_after(sends-18, death-21)

(ROOT
  (FRAG (CC But)
    (SBAR
      (WHADJP (WRB how)
        (ADJP (IN about)))
      (S
        (VP (VBG taking)
          (NP (DT a) (JJ quick) (NN test))
          (S
            (VP (TO to)
              (VP (VB check)
                (NP
                  (NP (DT the) (NN purity))
                  (PP (IN of)
                    (NP (PRP$ your) (NNS motives))))))))))
    (. .)))

dep(taking-4, But-1)
advmod(about-3, how-2)
dep(taking-4, about-3)
root(ROOT-0, taking-4)
det(test-7, a-5)
amod(test-7, quick-6)
dobj(taking-4, test-7)
aux(check-9, to-8)
xcomp(taking-4, check-9)
det(purity-11, the-10)
dobj(check-9, purity-11)
poss(motives-14, your-13)
prep_of(purity-11, motives-14)

(ROOT
  (S
    (VP (VB Imagine)
      (SBAR (IN that)
        (S
          (NP (NNP God))
          (VP
            (VP (VBD came)
              (PP (TO to)
                (NP (PRP you))))
            (CC and)
            (VP (VBD explained)
              (SBAR (IN that)
                (S
                  (S
                    (NP (PRP he))
                    (VP (VBD did) (RB n't)
                      (VP (VB supervise)
                        (NP
                          (NP (DT the) (NN writing))
                          (PP (IN of)
                            (NP (DT the) (NNP Bible)))))))
                  (CC and)
                  (S
                    (NP (PRP it))
                    (VP (VBZ has)
                      (NP (DT some) (NNS errors)))))))))))
    (. .)))

root(ROOT-0, Imagine-1)
complm(came-4, that-2)
nsubj(came-4, God-3)
nsubj(explained-8, God-3)
ccomp(Imagine-1, came-4)
prep_to(came-4, you-6)
ccomp(Imagine-1, explained-8)
conj_and(came-4, explained-8)
complm(supervise-13, that-9)
nsubj(supervise-13, he-10)
aux(supervise-13, did-11)
neg(supervise-13, n't-12)
ccomp(explained-8, supervise-13)
det(writing-15, the-14)
dobj(supervise-13, writing-15)
det(Bible-18, the-17)
prep_of(writing-15, Bible-18)
nsubj(has-21, it-20)
ccomp(explained-8, has-21)
conj_and(supervise-13, has-21)
det(errors-23, some-22)
dobj(has-21, errors-23)

(ROOT
  (S
    (ADVP (RBS Most) (RB importantly))
    (, ,)
    (NP (EX there))
    (ADVP (RB really))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NNP Heaven)
          (CC or)
          (NNP Hell))
        (, ,)
        (CC or)
        (ADVP (RB indeed))
        (NP
          (NP (DT any) (NN afterlife))
          (PP (IN for)
            (NP (NNS humans))))))
    (. .)))

advmod(importantly-2, Most-1)
advmod(is-6, importantly-2)
expl(is-6, there-4)
advmod(is-6, really-5)
root(ROOT-0, is-6)
det(Heaven-8, no-7)
nsubj(is-6, Heaven-8)
nsubj(is-6, Hell-10)
conj_or(Heaven-8, Hell-10)
nsubj(is-6, indeed-13)
advmod(Heaven-8, indeed-13)
conj_or(Heaven-8, indeed-13)
det(afterlife-15, any-14)
nsubj(is-6, afterlife-15)
conj_or(Heaven-8, afterlife-15)
prep_for(afterlife-15, humans-17)

