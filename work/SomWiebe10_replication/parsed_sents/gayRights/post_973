(ROOT
  (S
    (S
      (NP (NNP Sivan))
      (VP (VBD claimed) ('' '')))
    (CC But)
    (S
      (NP (JJ same) (NN sex) (NN marriage))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT the) (NN goal))
          (PP (IN of)
            (NP (DT the) (JJ gay) (NNS lobbies))))))
    (. .)))

nsubj(claimed-2, Sivan-1)
root(ROOT-0, claimed-2)
amod(marriage-7, same-5)
nn(marriage-7, sex-6)
nsubj(goal-11, marriage-7)
cop(goal-11, is-8)
neg(goal-11, not-9)
det(goal-11, the-10)
conj_but(claimed-2, goal-11)
det(lobbies-15, the-13)
amod(lobbies-15, gay-14)
prep_of(goal-11, lobbies-15)

(ROOT
  (S ('' '')
    (S (IN So)
      (NP (PRP it))
      (VP (MD should)
        (VP (VB be)
          (ADJP (JJ easy)
            (PP (IN for)
              (NP (NNP Sivan))))
          (S
            (VP (TO to)
              (VP (VB provide)
                (NP (CD 25) (NNS statements))
                (PP (IN from)
                  (NP (`` ``) (JJ gay) (NNS lobbies) ('' '')))
                (PP (IN with)
                  (NP
                    (NP (JJ external) (NNS links))
                    (PP (IN of)
                      (NP (NN course)))))))))))
    (, ,)
    (ADVP (RB explicitly))
    (S
      (S
        (VP (VBG stating)
          (NP (DT that) (JJ same-sex) (NN marriage))))
      (VP (VBZ is) (RB not)
        (NP (DT the) (NN goal) ('' ''))))
    (. .)))

dep(easy-6, So-2)
nsubj(easy-6, it-3)
aux(easy-6, should-4)
cop(easy-6, be-5)
root(ROOT-0, easy-6)
prep_for(easy-6, Sivan-8)
aux(provide-10, to-9)
xcomp(easy-6, provide-10)
num(statements-12, 25-11)
dobj(provide-10, statements-12)
amod(lobbies-16, gay-15)
prep_from(provide-10, lobbies-16)
amod(links-20, external-19)
prep_with(provide-10, links-20)
prep_of(links-20, course-22)
advmod(easy-6, explicitly-24)
csubj(goal-32, stating-25)
det(marriage-28, that-26)
amod(marriage-28, same-sex-27)
dobj(stating-25, marriage-28)
cop(goal-32, is-29)
neg(goal-32, not-30)
det(goal-32, the-31)
ccomp(easy-6, goal-32)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (NNP Sivan))
          (VP
            (VP (VBZ does)
              (NP (RB not)))
            (CC or)
            (VP (MD can) (RB not)))))
      (, ,)
      (ADVP (RB then))
      (NP (NNP Sivan))
      (VP (VBZ is)
        (VP (VBG posting)
          (NP (JJ false) (NN information)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT every) (NN claim))
        (PP (IN by)
          (NP (NNP Sivan))))
      (VP (MD must)
        (VP (VB be)
          (VP (VBN interpretted)
            (PP (IN in)
              (NP
                (NP (NN light))
                (PP (IN of)
                  (NP (DT that)))))))))
    (. .)))

mark(does-3, If-1)
nsubj(does-3, Sivan-2)
advcl(posting-12, does-3)
dobj(does-3, not-4)
conj_or(does-3, can-6)
advcl(posting-12, can-6)
neg(can-6, not-7)
advmod(posting-12, then-9)
nsubj(posting-12, Sivan-10)
aux(posting-12, is-11)
root(ROOT-0, posting-12)
amod(information-14, false-13)
dobj(posting-12, information-14)
det(claim-18, every-17)
nsubjpass(interpretted-23, claim-18)
prep_by(claim-18, Sivan-20)
aux(interpretted-23, must-21)
auxpass(interpretted-23, be-22)
conj_and(posting-12, interpretted-23)
prep_in(interpretted-23, light-25)
prep_of(light-25, that-27)

