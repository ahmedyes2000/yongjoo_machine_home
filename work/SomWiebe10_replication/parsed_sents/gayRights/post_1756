(ROOT
  (S
    (S
      (NP (NNP Let) (POS 's))
      (ADVP (RB just))
      (VP (VBP say)
        (SBAR (IN that)
          (S
            (SBAR
              (ADVP
                (NP (CD 5) (NNS years))
                (RB ago))
              (WHADVP (WRB when))
              (S
                (NP (PRP I))
                (VP (VBD married)
                  (NP (PRP$ my) (NN husband)))))
            (, ,)
            (NP (JJ homosexual) (NN marriage))
            (VP (VBD was)
              (ADJP (JJ legal)))))))
    (: ...)
    (S
      (NP (DT this))
      (VP (MD would)
        (VP (VB have)
          (VP (VBN had)
            (NP (RB absolutely) (DT no) (NN effect))
            (PP (IN on)
              (NP (PRP$ my) (NN choice)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (VP (VBN married)
                        (PP (TO to)
                          (NP (PRP him)))))))))))))
    (. !)))

nsubj(say-4, Let-1)
possessive(Let-1, 's-2)
advmod(say-4, just-3)
root(ROOT-0, say-4)
complm(legal-18, that-5)
num(years-7, 5-6)
npadvmod(ago-8, years-7)
advmod(married-11, ago-8)
advmod(married-11, when-9)
nsubj(married-11, I-10)
dep(legal-18, married-11)
poss(husband-13, my-12)
dobj(married-11, husband-13)
amod(marriage-16, homosexual-15)
nsubj(legal-18, marriage-16)
cop(legal-18, was-17)
ccomp(say-4, legal-18)
nsubj(had-23, this-20)
aux(had-23, would-21)
aux(had-23, have-22)
parataxis(say-4, had-23)
advmod(effect-26, absolutely-24)
det(effect-26, no-25)
dobj(had-23, effect-26)
poss(choice-29, my-28)
prep_on(had-23, choice-29)
aux(married-32, to-30)
auxpass(married-32, get-31)
infmod(choice-29, married-32)
prep_to(married-32, him-34)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (MD would)
              (VP (VB be)
                (NP (JJR less) (NNS families))))))))
    (. ?)))

advmod(say-4, Why-1)
aux(say-4, do-2)
nsubj(say-4, you-3)
root(ROOT-0, say-4)
complm(families-10, that-5)
expl(families-10, there-6)
aux(families-10, would-7)
cop(families-10, be-8)
amod(families-10, less-9)
ccomp(say-4, families-10)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB define)
        (NP (DT a) (NN family))))
    (. ?)))

advmod(define-4, How-1)
aux(define-4, do-2)
nsubj(define-4, you-3)
root(ROOT-0, define-4)
det(family-6, a-5)
dobj(define-4, family-6)

(ROOT
  (FRAG
    (NP
      (NP (NNS People))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP care)
            (PP (IN for)
              (NP (DT each) (JJ other)))))))
    (. ?)))

root(ROOT-0, People-1)
nsubj(care-3, People-1)
rcmod(People-1, care-3)
det(other-6, each-5)
prep_for(care-3, other-6)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS thousands))
        (PP (IN of)
          (NP (NNS kids))))
      (PP (IN in)
        (NP (NNS orphanages)))
      (PP (DT all) (IN over)
        (NP
          (NP (DT the) (NN world))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (MD would)
                (VP (VB be)
                  (ADJP
                    (ADJP
                      (NP
                        (QP (DT a) (CD billion))
                        (NNS times))
                      (JJR better))
                    (PP (IN off)
                      (S
                        (VP (VBG being)
                          (VP (VBN raised)
                            (PP (IN by)
                              (NP
                                (NP (CD 2) (NNS homosexuals))
                                (VP
                                  (ADVP (IN than))
                                  (VBN left)
                                  (PP (IN in)
                                    (NP (DT the) (NN orphanage))))))))))))))))))
    (. !)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, thousands-3)
prep_of(thousands-3, kids-5)
prep_in(are-2, orphanages-7)
dep(are-2, all-8)
det(world-11, the-10)
prep_over(are-2, world-11)
nsubj(better-18, world-11)
aux(better-18, would-13)
cop(better-18, be-14)
quantmod(billion-16, a-15)
num(times-17, billion-16)
npadvmod(better-18, times-17)
rcmod(world-11, better-18)
auxpass(raised-21, being-20)
prepc_off(better-18, raised-21)
num(homosexuals-24, 2-23)
agent(raised-21, homosexuals-24)
advmod(left-26, than-25)
partmod(homosexuals-24, left-26)
det(orphanage-29, the-28)
prep_in(left-26, orphanage-29)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP agree)
        (PP (IN with)
          (NP (PRP you)))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP
              (ADVP (DT all))
              (VBP need)
              (NP (DT a)
                (ADJP (NN male)
                  (CC and)
                  (JJ female))
                (NN role) (NN model))
              (S
                (VP (TO to)
                  (VP (VB look)
                    (PRT (RP up))
                    (PP (TO to))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT this))
      (VP (VBZ does) (RB not)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP (DT a) (JJ biological) (NN parent))))))))
    (. !)))

nsubj(agree-2, I-1)
root(ROOT-0, agree-2)
prep_with(agree-2, you-4)
complm(need-8, that-5)
nsubj(need-8, we-6)
advmod(need-8, all-7)
ccomp(agree-2, need-8)
det(model-14, a-9)
amod(model-14, male-10)
conj_and(male-10, female-12)
amod(model-14, female-12)
nn(model-14, role-13)
dobj(need-8, model-14)
aux(look-16, to-15)
xcomp(need-8, look-16)
prt(look-16, up-17)
prep(look-16, to-18)
nsubj(have-24, this-21)
xsubj(parent-29, this-21)
aux(have-24, does-22)
neg(have-24, not-23)
conj_but(agree-2, have-24)
aux(parent-29, to-25)
cop(parent-29, be-26)
det(parent-29, a-27)
amod(parent-29, biological-28)
xcomp(have-24, parent-29)

