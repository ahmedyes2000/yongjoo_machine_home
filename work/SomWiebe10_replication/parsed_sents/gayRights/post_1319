(ROOT
  (S
    (INTJ (UH Wow))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (NP (DT a) (NN chore)))
    (. .)))

dep(chore-6, Wow-1)
nsubj(chore-6, you-3)
cop(chore-6, are-4)
det(chore-6, a-5)
root(ROOT-0, chore-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBG calling)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD closed)
              (SBAR
                (S
                  (VP (VBD minded)))))))))
    (. .)))

nsubj(calling-3, I-1)
aux(calling-3, am-2)
root(ROOT-0, calling-3)
nsubj(closed-5, you-4)
ccomp(calling-3, closed-5)
ccomp(closed-5, minded-6)

(ROOT
  (S
    (ADVP (IN So) (DT no))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ brainwashed)))
    (. .)))

advmod(brainwashed-7, So-1)
dep(So-1, no-2)
nsubj(brainwashed-7, I-4)
cop(brainwashed-7, 'm-5)
neg(brainwashed-7, not-6)
root(ROOT-0, brainwashed-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG fighting)
        (PP (IN for)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP I))
              (VP
                (VP (VBP know))
                (, ,)
                (CC and)
                (VP (VBP understand))))))))
    (. .)))

nsubj(fighting-3, I-1)
aux(fighting-3, 'm-2)
root(ROOT-0, fighting-3)
dobj(know-7, what-5)
nsubj(know-7, I-6)
nsubj(understand-10, I-6)
prepc_for(fighting-3, know-7)
prepc_for(fighting-3, understand-10)
conj_and(know-7, understand-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP 'm) (RB not)
            (NP (DT an) (JJ immoral) (NN person))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(person-8, I-3)
cop(person-8, 'm-4)
neg(person-8, not-5)
det(person-8, an-6)
amod(person-8, immoral-7)
ccomp(know-2, person-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do)
      (VP (RB n't)
        (ADJP (`` ``) (JJ sin))))
    (. .)))

nsubj(sin-5, I-1)
aux(sin-5, do-2)
neg(sin-5, n't-3)
root(ROOT-0, sin-5)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP 'm)
      (NP
        (NP (DT a)
          (ADJP (RB really) (JJ good))
          (NN person))
        (, ,)
        (PP (IN in)
          (NP (NN fact)))))
    (. .)))

nsubj(person-7, I-2)
cop(person-7, 'm-3)
det(person-7, a-4)
advmod(good-6, really-5)
amod(person-7, good-6)
root(ROOT-0, person-7)
prep_in(person-7, fact-10)

(ROOT
  (S
    (ADVP (IN So)
      (PP (TO to)
        (NP (PRP me))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ feels)
      (SBAR (IN like)
        (S
          (NP (NNS people))
          (VP (VBP want)
            (S
              (NP (NNP LGBT) (NNS people))
              (VP (TO to)
                (VP (VB be)
                  (NP
                    (NP (DT all) (NN sinning))
                    (CC and)
                    (NP (NNS rebels)
                      (CC and)
                      (NNS haters))))))))))
    (. .)))

advmod(feels-6, So-1)
prep_to(So-1, me-3)
nsubj(feels-6, it-5)
root(ROOT-0, feels-6)
mark(want-9, like-7)
nsubj(want-9, people-8)
advcl(feels-6, want-9)
nn(people-11, LGBT-10)
nsubj(sinning-15, people-11)
aux(sinning-15, to-12)
cop(sinning-15, be-13)
det(sinning-15, all-14)
xcomp(want-9, sinning-15)
xcomp(want-9, rebels-17)
conj_and(sinning-15, rebels-17)
conj_and(sinning-15, haters-19)
conj_and(rebels-17, haters-19)

(ROOT
  (S
    (ADJP (VB No.))
    (. .)))

root(ROOT-0, No.-1)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (NP (RB just)
        (NP (NN fun))
        (, ,)
        (ADJP (JJ sweet))
        (, ,)
        (NP
          (NP (NNS people))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (ADVP (RB constantly))
                (VP (VBN attacked)
                  (PP (IN by)
                    (NP
                      (NP (DT a) (JJ single) (NN idea))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (VP (VBZ 's)
                            (VP (VBN seeded)
                              (NP
                                (NP (PRP it) (POS 's))
                                (JJ silly) (JJ little) (NN butt))
                              (PP (IN into)
                                (NP
                                  (NP (DT a) (JJ whole) (NN mess))
                                  (PP (IN of)
                                    (NP
                                      (NP (NNS people) (POS 's))
                                      (NNS heads))))))))))))))))))
    (. .)))

nsubj(fun-4, We-1)
cop(fun-4, 're-2)
advmod(fun-4, just-3)
root(ROOT-0, fun-4)
amod(fun-4, sweet-6)
appos(fun-4, people-8)
nsubjpass(attacked-12, people-8)
auxpass(attacked-12, are-10)
advmod(attacked-12, constantly-11)
rcmod(people-8, attacked-12)
det(idea-16, a-14)
amod(idea-16, single-15)
agent(attacked-12, idea-16)
nsubjpass(seeded-19, idea-16)
auxpass(seeded-19, 's-18)
rcmod(idea-16, seeded-19)
poss(butt-24, it-20)
amod(butt-24, silly-22)
amod(butt-24, little-23)
dobj(seeded-19, butt-24)
det(mess-28, a-26)
amod(mess-28, whole-27)
prep_into(seeded-19, mess-28)
poss(heads-32, people-30)
prep_of(mess-28, heads-32)

(ROOT
  (S
    (S
      (NP (DT The) (NNS sinners))
      (VP (VBP are)
        (NP
          (NP (DT those) (JJ hot) (JJ Catholic) (NN school) (NNS girls))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP take)
                (NP (PRP$ their) (NNS shirts))
                (PP (RB off) (IN for)
                  (NP
                    (NP (NNS girls))
                    (VP (VBN gone)
                      (ADVP (RB wild))
                      (NP (DT the) (NN second)))))))))))
    (NP (PRP they))
    (VP (VBP get)
      (PRT (RP out))
      (PP (IN of)
        (NP (DT the) (NN house))))
    (. .)))

det(sinners-2, The-1)
nsubj(girls-8, sinners-2)
cop(girls-8, are-3)
det(girls-8, those-4)
amod(girls-8, hot-5)
amod(girls-8, Catholic-6)
nn(girls-8, school-7)
nsubj(take-10, girls-8)
dep(get-21, girls-8)
rcmod(girls-8, take-10)
poss(shirts-12, their-11)
dobj(take-10, shirts-12)
advmod(take-10, off-13)
prep_for(take-10, girls-15)
partmod(girls-15, gone-16)
advmod(gone-16, wild-17)
det(second-19, the-18)
dobj(gone-16, second-19)
nsubj(get-21, they-20)
root(ROOT-0, get-21)
det(house-25, the-24)
prep_out_of(get-21, house-25)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ 's)
            (ADJP (JJ wrong)
              (PP (IN with)
                (NP (DT the) (JJ white) (NN picket) (NN fence) (NN scenario))))))))
    (. .)))

prep_in(is-5, fact-2)
nsubj(is-5, that-4)
root(ROOT-0, is-5)
nsubj(wrong-8, what-6)
cop(wrong-8, 's-7)
ccomp(is-5, wrong-8)
det(scenario-14, the-10)
amod(scenario-14, white-11)
nn(scenario-14, picket-12)
nn(scenario-14, fence-13)
prep_with(wrong-8, scenario-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (ADJP (RB too) (JJ straight))
        (NN edge)))
    (. .)))

nsubj(edge-5, It-1)
cop(edge-5, 's-2)
advmod(straight-4, too-3)
amod(edge-5, straight-4)
root(ROOT-0, edge-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ willing)
              (S
                (VP (TO to)
                  (VP (VB attempt)
                    (S
                      (VP (TO to)
                        (VP (VB see)
                          (NP (DT the) (NN issue))
                          (PP (IN from)
                            (NP
                              (NP
                                (NP (DT the) (JJ other) (NN person) (POS 's))
                                (NN point))
                              (PP (IN of)
                                (NP (NN view))))))))))))))))
    (. .)))

nsubj(have-2, You-1)
xsubj(willing-5, You-1)
root(ROOT-0, have-2)
aux(willing-5, to-3)
cop(willing-5, be-4)
xcomp(have-2, willing-5)
aux(attempt-7, to-6)
xcomp(willing-5, attempt-7)
aux(see-9, to-8)
xcomp(attempt-7, see-9)
det(issue-11, the-10)
dobj(see-9, issue-11)
det(person-15, the-13)
amod(person-15, other-14)
poss(point-17, person-15)
prep_from(see-9, point-17)
prep_of(point-17, view-19)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP grow)
              (PRT (RP up))
              (SBAR (IN in)
                (S
                  (NP (DT those) (NNS houses))
                  (VP (VBP do) (RB n't))))))))
      (, ,)
      (PP (IN in)
        (NP (PRP$ my) (NN experience)))
      (, ,))
    (ADVP (RB even))
    (VP (VBP know)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (DT the) (JJ real) (NN world))
          (VP (VBZ is)))))
    (. .)))

det(people-2, The-1)
nsubj(grow-4, people-2)
nsubj(know-17, people-2)
rcmod(people-2, grow-4)
prt(grow-4, up-5)
mark(do-9, in-6)
det(houses-8, those-7)
nsubj(do-9, houses-8)
advcl(grow-4, do-9)
neg(do-9, n't-10)
poss(experience-14, my-13)
prep_in(people-2, experience-14)
advmod(know-17, even-16)
root(ROOT-0, know-17)
dobj(is-22, what-18)
det(world-21, the-19)
amod(world-21, real-20)
nsubj(is-22, world-21)
ccomp(know-17, is-22)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG opening)
          (NP (PRP$ your) (NN mind)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP want)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP (VB try)
            (CC and)
            (VB think)
            (PP (IN of)
              (NP (NN homosexuality)))
            (PP (IN as)
              (NP (`` ``)
                (NP (RB not) (DT a) (NN sin))
                ('' '')
                (PP (IN for)
                  (NP
                    (NP (RB maybe) (RB just))
                    (NP (DT a) (NN minute))))))))))
    (. .)))

prepc_by(want-7, opening-2)
poss(mind-4, your-3)
dobj(opening-2, mind-4)
nsubj(want-7, I-6)
root(ROOT-0, want-7)
nsubj(try-10, you-8)
nsubj(think-12, you-8)
aux(try-10, to-9)
xcomp(want-7, try-10)
xcomp(want-7, think-12)
conj_and(try-10, think-12)
prep_of(try-10, homosexuality-14)
neg(sin-19, not-17)
det(sin-19, a-18)
prep_as(try-10, sin-19)
prep(sin-19, for-21)
advmod(just-23, maybe-22)
pobj(for-21, just-23)
det(minute-25, a-24)
dep(just-23, minute-25)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP$ your) (NN faith))
          (VP (VBZ tells)
            (NP (PRP you))
            (UCP (RB not)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (NP (DT that)))))
              (, ,)
              (CC but)
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (NN method))
                      (PP (IN of)
                        (NP
                          (NP (NN self) (NN preservation))
                          (PP (IN of)
                            (NP (DT the) (NNP Church))))))))))))))
    (. .)))

cc(know-3, And-1)
nsubj(know-3, I-2)
root(ROOT-0, know-3)
poss(faith-5, your-4)
nsubj(tells-6, faith-5)
ccomp(know-3, tells-6)
dobj(tells-6, you-7)
dep(tells-6, not-8)
aux(do-10, to-9)
dep(not-8, do-10)
dobj(do-10, that-11)
nsubj(method-17, that-14)
cop(method-17, is-15)
det(method-17, a-16)
dep(tells-6, method-17)
conj_but(not-8, method-17)
nn(preservation-20, self-19)
prep_of(method-17, preservation-20)
det(Church-23, the-22)
prep_of(preservation-20, Church-23)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB change)
              (S
                (NP (PRP you))
                (NP (JJ entire) (NNS ideals)))
              (ADVP (RB forever)))))))
    (. .)))

nsubj(have-4, You-1)
xsubj(change-6, You-1)
aux(have-4, do-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
aux(change-6, to-5)
xcomp(have-4, change-6)
nsubj(ideals-9, you-7)
amod(ideals-9, entire-8)
xcomp(change-6, ideals-9)
advmod(change-6, forever-10)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP want)
      (S
        (NP (PRP you))
        (VP (TO to)
          (VP (VB imagine) (, ,)
            (CC and)
            (VB think)))))
    (. .)))

nsubj(want-3, I-1)
advmod(want-3, just-2)
root(ROOT-0, want-3)
nsubj(imagine-6, you-4)
nsubj(think-9, you-4)
aux(imagine-6, to-5)
xcomp(want-3, imagine-6)
xcomp(want-3, think-9)
conj_and(imagine-6, think-9)

(ROOT
  (S (RB Then)
    (SBAR (IN once)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (VP (VBN done)))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (VP
        (VP (VB go)
          (ADVP (RB back)))
        (CC and)
        (VP (VB apply)
          (NP (DT those) (NNS thoughts)))))
    (. .)))

advmod(go-9, Then-1)
mark(done-5, once-2)
nsubjpass(done-5, you-3)
auxpass(done-5, 're-4)
advcl(go-9, done-5)
nsubj(go-9, you-7)
nsubj(apply-12, you-7)
aux(go-9, can-8)
root(ROOT-0, go-9)
advmod(go-9, back-10)
conj_and(go-9, apply-12)
det(thoughts-14, those-13)
dobj(apply-12, thoughts-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP (DT a) (JJ bad) (NN thing)
        (S
          (VP (TO to)
            (VP (VB do))))))
    (. .)))

nsubj(thing-6, It-1)
cop(thing-6, 's-2)
neg(thing-6, not-3)
det(thing-6, a-4)
amod(thing-6, bad-5)
root(ROOT-0, thing-6)
aux(do-8, to-7)
infmod(thing-6, do-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (PP (IN like)
          (S
            (VP (VBG looking)
              (PP (IN in)
                (NP (DT a) (NN mirror))))))))
    (: ...)
    (S
      (ADVP (RB just))
      (VP (VB get)
        (NP (DT a) (JJ little) (JJ outside) (NN prospective))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
prepc_like('s-2, looking-4)
det(mirror-7, a-6)
prep_in(looking-4, mirror-7)
advmod(get-10, just-9)
parataxis('s-2, get-10)
det(prospective-14, a-11)
amod(prospective-14, little-12)
amod(prospective-14, outside-13)
dobj(get-10, prospective-14)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB vote)
        (ADVP (RB however))
        (NP (PRP you))
        (PP (IN like))))
    (. .)))

nsubj(vote-3, You-1)
aux(vote-3, can-2)
root(ROOT-0, vote-3)
advmod(vote-3, however-4)
dobj(vote-3, you-5)
prep(vote-3, like-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (PRP$ your) (NN right)))
    (. .)))

nsubj(right-4, It-1)
cop(right-4, 's-2)
poss(right-4, your-3)
root(ROOT-0, right-4)

(ROOT
  (S (CC But)
    (, ,)
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP I))
        (VP (MD can)
          (VP (VB do)
            (SBAR (IN about)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (S
                    (VP (VB try)
                      (CC and)
                      (VB help))))))))))
    (NP (PRP you))
    (VP (VBP understand)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADVP (RB blindly)
              (S
                (VP (VBG hurting)
                  (NP (NNS people)
                    (CC and)
                    (NNS families))
                  (PP (IN by)
                    (S
                      (VP (VBG voting)
                        (NP (DT this) (NN way))))))))))))
    (. .)))

cc(understand-14, But-1)
dobj(do-6, what-3)
nsubj(do-6, I-4)
aux(do-6, can-5)
dep(understand-14, do-6)
mark(is-9, about-7)
nsubj(is-9, it-8)
advcl(do-6, is-9)
ccomp(is-9, try-10)
ccomp(is-9, help-12)
conj_and(try-10, help-12)
nsubj(understand-14, you-13)
root(ROOT-0, understand-14)
complm(are-17, that-15)
nsubj(are-17, you-16)
ccomp(understand-14, are-17)
advmod(are-17, blindly-18)
dep(blindly-18, hurting-19)
dobj(hurting-19, people-20)
dobj(hurting-19, families-22)
conj_and(people-20, families-22)
prepc_by(hurting-19, voting-24)
det(way-26, this-25)
dobj(voting-24, way-26)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN tried)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (DT this) (NN issue))
              (PP (IN from)
                (NP
                  (NP (PRP$ your) (NN point))
                  (PP (IN of)
                    (NP
                      (NP (NN view))
                      (, ,)
                      (NP
                        (NP (DT that))
                        (PP (IN of)
                          (NP (NN someone)))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ believes)
                              (SBAR (IN that)
                                (S
                                  (NP (NN homosexuality))
                                  (VP (VBZ is)
                                    (ADJP (JJ wrong))
                                    (SBAR (IN because)
                                      (S
                                        (NP (DT the) (NN bible))
                                        (VP (VBZ says)
                                          (S
                                            (NP (PRP it))
                                            (VP (TO to)
                                              (VP (VB be)
                                                (ADVP (RB so))))))))))))))))))))))))
    (. .)))

nsubj(tried-3, I-1)
xsubj(see-5, I-1)
aux(tried-3, have-2)
root(ROOT-0, tried-3)
aux(see-5, to-4)
xcomp(tried-3, see-5)
det(issue-7, this-6)
dobj(see-5, issue-7)
poss(point-10, your-9)
prep_from(see-5, point-10)
prep_of(point-10, view-12)
appos(view-12, that-14)
nsubj(believes-18, that-14)
prep_of(that-14, someone-16)
rcmod(that-14, believes-18)
complm(wrong-22, that-19)
nsubj(wrong-22, homosexuality-20)
cop(wrong-22, is-21)
ccomp(believes-18, wrong-22)
mark(says-26, because-23)
det(bible-25, the-24)
nsubj(says-26, bible-25)
advcl(wrong-22, says-26)
nsubj(be-29, it-27)
aux(be-29, to-28)
xcomp(says-26, be-29)
advmod(be-29, so-30)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD hurt)
      (NP
        (NP (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (ADVP (RB just))
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB love)
                    (CC and)
                    (VB raise)
                    (NP (DT a) (NN family))))))))))
    (. .)))

nsubj(hurt-2, You-1)
root(ROOT-0, hurt-2)
dobj(hurt-2, people-3)
nsubj(want-6, people-3)
advmod(want-6, just-5)
rcmod(people-3, want-6)
aux(love-8, to-7)
xcomp(want-6, love-8)
xcomp(want-6, raise-10)
conj_and(love-8, raise-10)
det(family-12, a-11)
dobj(love-8, family-12)

(ROOT
  (S (CC And)
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG hurting)
        (NP
          (NP (NNS families))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (ADVP (RB already))
                (VP (VBN established)
                  (PP (IN by)
                    (S
                      (VP
                        (VP (VBG invalidating)
                          (NP (PRP$ their) (NN love))
                          (PP (IN for)
                            (NP (DT each) (JJ other))))
                        (, ,)
                        (CC and)
                        (VP (VBG telling)
                          (NP (PRP them))
                          (NP
                            (NP (PRP it) (POS 's))
                            (NN blasphemy)))))))))))))
    (. .)))

cc(hurting-4, And-1)
nsubj(hurting-4, you-2)
aux(hurting-4, are-3)
root(ROOT-0, hurting-4)
dobj(hurting-4, families-5)
nsubjpass(established-9, families-5)
auxpass(established-9, are-7)
advmod(established-9, already-8)
rcmod(families-5, established-9)
agent(established-9, invalidating-11)
poss(love-13, their-12)
dobj(invalidating-11, love-13)
det(other-16, each-15)
prep_for(invalidating-11, other-16)
agent(established-9, telling-19)
conj_and(invalidating-11, telling-19)
iobj(telling-19, them-20)
poss(blasphemy-23, it-21)
dobj(telling-19, blasphemy-23)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBD said)
          (NP
            (NP
              (NP (DT that))
              (PP (IN about)
                (NP (PRP$ your) (NN family))))
            (CC or)
            (NP
              (NP (DT a) (NN member))
              (PP (IN of)
                (NP (PRP$ your) (NN family))))))))
    (, ,) (MD would) (RB n't)
    (NP (PRP it))
    (VP (VB hurt)
      (NP (PRP you)))
    (. ?)))

mark(said-3, If-1)
nsubj(said-3, someone-2)
advcl(hurt-18, said-3)
dobj(said-3, that-4)
poss(family-7, your-6)
prep_about(that-4, family-7)
det(member-10, a-9)
dobj(said-3, member-10)
conj_or(that-4, member-10)
poss(family-13, your-12)
prep_of(member-10, family-13)
aux(hurt-18, would-15)
neg(hurt-18, n't-16)
nsubj(hurt-18, it-17)
root(ROOT-0, hurt-18)
dobj(hurt-18, you-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD forgot)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (NP
              (NP (DT a) (NNP Mormon))
              (, ,)
              (CC and)
              (ADVP (RB not) (RB just))
              (NP (DT a) (NNP Christian)))))))
    (. .)))

nsubj(forgot-2, I-1)
root(ROOT-0, forgot-2)
nsubj(Mormon-6, you-3)
cop(Mormon-6, 're-4)
det(Mormon-6, a-5)
ccomp(forgot-2, Mormon-6)
dep(just-10, not-9)
ccomp(forgot-2, just-10)
advmod(Mormon-6, just-10)
conj_and(Mormon-6, just-10)
det(Christian-12, a-11)
ccomp(forgot-2, Christian-12)
conj_and(Mormon-6, Christian-12)

(ROOT
  (S
    (NP
      (NP (DT A) (NN family))
      (, ,)
      (PP (TO to)
        (NP (PRP me)))
      (, ,))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN unit))
        (PP (IN of)
          (NP
            (NP (NNS people))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP love)
                  (NP (DT each) (JJ other)))))))))
    (. .)))

det(family-2, A-1)
nsubj(unit-9, family-2)
prep_to(family-2, me-5)
cop(unit-9, is-7)
det(unit-9, a-8)
root(ROOT-0, unit-9)
prep_of(unit-9, people-11)
nsubj(love-13, people-11)
rcmod(people-11, love-13)
det(other-15, each-14)
dobj(love-13, other-15)

(ROOT
  (S
    (SBAR (IN With)
      (FRAG (CC or)
        (PP (IN without)
          (NP (NNS children)))))
    (, ,)
    (PP
      (PP
        (PP (IN with))
        (CC or)
        (PP (IN without)
          (NP (DT a) (JJ traditional) (NN marriage))))
      (, ,)
      (PP (IN with))
      (CC or)
      (PP (IN without)
        (NP (NN money))))
    (, ,)
    (NP
      (NP (DT a) (NN house))
      (CC or)
      (NP (RB even) (DT a) (NN marriage)))
    (VP (VBP license))
    (. .)))

mark(or-2, With-1)
advcl(license-24, or-2)
dep(or-2, without-3)
pobj(without-3, children-4)
prep(license-24, with-6)
conj_or(with-6, without-8)
prep(license-24, without-8)
det(marriage-11, a-9)
amod(marriage-11, traditional-10)
pobj(without-8, marriage-11)
conj_or(with-6, with-13)
prep(license-24, with-13)
conj_or(with-6, without-15)
prep(license-24, without-15)
pobj(without-15, money-16)
det(house-19, a-18)
nsubj(license-24, house-19)
advmod(marriage-23, even-21)
det(marriage-23, a-22)
conj_or(house-19, marriage-23)
nsubj(license-24, marriage-23)
root(ROOT-0, license-24)

(ROOT
  (S
    (NP (DT A) (NN family))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP who))
        (S
          (NP (PRP you))
          (VP (MD can)
            (ADVP (RB always))
            (VP (VB count)
              (PRT (RP on)))))))
    (. .)))

det(family-2, A-1)
nsubj(is-3, family-2)
root(ROOT-0, is-3)
dobj(count-8, who-4)
nsubj(count-8, you-5)
aux(count-8, can-6)
advmod(count-8, always-7)
ccomp(is-3, count-8)
prt(count-8, on-9)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBG being)
        (VP (VBD said))))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN father))
        (CC and)
        (NP (DT a) (NN mother))))
    (. .)))

nsubjpass(said-3, That-1)
auxpass(said-3, being-2)
partmod(have-6, said-3)
nsubj(have-6, I-5)
root(ROOT-0, have-6)
det(father-8, a-7)
dobj(have-6, father-8)
det(mother-11, a-10)
dobj(have-6, mother-11)
conj_and(father-8, mother-11)

(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB also))
      (VP (VBP have)
        (NP
          (NP (DT a) (NN step) (NN mother))
          (, ,)
          (NP (DT a) (NN step) (NN father)))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (DT a) (NN sister))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (DT a) (NN brother))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (PRP$ my) (NN niece))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP
          (NP
            (NP
              (NP (PRP$ my) (NN niece) (POS 's))
              (NN father))
            (, ,)
            (NP
              (NP (PRP$ my) (JJ nieces) (NN father) (POS 's))
              (NN family)))
          (, ,)
          (NP
            (NP (PRP$ my) (NNS cousins))
            (PP (IN in)
              (NP (NNP Japan))))
          (, ,)
          (NP
            (NP (PRP$ my) (NNS cousins))
            (PP (IN in)
              (NP (NNP Poland))))
          (, ,)
          (NP
            (NP (PRP$ my) (NNS cousins))
            (PP (IN in)
              (NP (NNP Colorado))))
          (, ,)
          (NP
            (NP (PRP$ my) (NNS aunts))
            (CC and)
            (NP (NNS uncles)))
          (, ,)
          (CC and)
          (NP (PRP$ my) (NN grandma)))))
    (. .)))

nsubj(have-3, I-1)
advmod(have-3, also-2)
root(ROOT-0, have-3)
det(mother-6, a-4)
nn(mother-6, step-5)
dobj(have-3, mother-6)
det(father-10, a-8)
nn(father-10, step-9)
appos(mother-6, father-10)
nsubj(have-13, I-12)
ccomp(have-3, have-13)
det(sister-15, a-14)
dobj(have-13, sister-15)
nsubj(have-18, I-17)
ccomp(have-3, have-18)
det(brother-20, a-19)
dobj(have-18, brother-20)
nsubj(have-23, I-22)
ccomp(have-3, have-23)
poss(niece-25, my-24)
dobj(have-23, niece-25)
nsubj(have-28, I-27)
ccomp(have-3, have-28)
poss(niece-30, my-29)
poss(father-32, niece-30)
dobj(have-28, father-32)
poss(father-36, my-34)
amod(father-36, nieces-35)
poss(family-38, father-36)
appos(father-32, family-38)
poss(cousins-41, my-40)
dobj(have-28, cousins-41)
conj_and(father-32, cousins-41)
prep_in(cousins-41, Japan-43)
poss(cousins-46, my-45)
dobj(have-28, cousins-46)
conj_and(father-32, cousins-46)
prep_in(cousins-46, Poland-48)
poss(cousins-51, my-50)
dobj(have-28, cousins-51)
conj_and(father-32, cousins-51)
prep_in(cousins-51, Colorado-53)
poss(aunts-56, my-55)
dobj(have-28, aunts-56)
conj_and(father-32, aunts-56)
conj_and(father-32, uncles-58)
conj_and(aunts-56, uncles-58)
poss(grandma-62, my-61)
dobj(have-28, grandma-62)
conj_and(father-32, grandma-62)

(ROOT
  (NP (DT All) (NN family) (. .)))

det(family-2, All-1)
root(ROOT-0, family-2)

(ROOT
  (S (CC But)
    (SBAR (RB even) (IN if)
      (S
        (NP (PRP I))
        (VP (VBD accepted)
          (NP (DT that)))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB still))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB forfeit)
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (MD ca) (RB n't)
                    (VP (VB find)
                      (NP (NN anything))
                      (ADVP (RB else) (JJ wrong)
                        (PP (IN with)
                          (NP (PRP it)))))))))))))
    (. .)))

cc(have-11, But-1)
advmod(accepted-5, even-2)
dep(accepted-5, if-3)
nsubj(accepted-5, I-4)
dep(have-11, accepted-5)
dobj(accepted-5, that-6)
nsubj(have-11, I-8)
xsubj(forfeit-13, I-8)
aux(have-11, would-9)
advmod(have-11, still-10)
root(ROOT-0, have-11)
aux(forfeit-13, to-12)
xcomp(have-11, forfeit-13)
complm(find-18, that-14)
nsubj(find-18, I-15)
aux(find-18, ca-16)
neg(find-18, n't-17)
ccomp(forfeit-13, find-18)
dobj(find-18, anything-19)
advmod(wrong-21, else-20)
advmod(find-18, wrong-21)
prep_with(wrong-21, it-23)

(ROOT
  (SBARQ (CC But)
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (SBAR
          (WHNP (WP who))
          (S
            (NP (PRP$ my) (NN family))
            (VP (VBZ is))))))
    (. ?)))

cc(know-4, But-1)
aux(know-4, do-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
dobj(is-8, who-5)
poss(family-7, my-6)
nsubj(is-8, family-7)
ccomp(know-4, is-8)

(ROOT
  (FRAG
    (NP (PRP$ My) (NN mother))
    (. .)))

poss(mother-2, My-1)
root(ROOT-0, mother-2)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (PRP it)))
    (. .)))

nsubj(it-3, That-1)
cop(it-3, 's-2)
root(ROOT-0, it-3)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NN father))
      (VP (VBZ is)
        (NP
          (NP (DT an) (NN abuser))
          (CC and)
          (NP (DT a) (VBG recovering) (NN alcoholic)))))
    (, ,)
    (NP (PRP$ my) (NN brother)
      (CC and)
      (NN sister))
    (VP
      (VP (VBP are) (DT both)
        (ADJP (JJ schizophrenic)))
      (CC and)
      (VP (VBN gone)))
    (. .)))

poss(father-2, My-1)
nsubj(abuser-5, father-2)
cop(abuser-5, is-3)
det(abuser-5, an-4)
ccomp(schizophrenic-17, abuser-5)
det(alcoholic-9, a-7)
amod(alcoholic-9, recovering-8)
conj_and(abuser-5, alcoholic-9)
ccomp(schizophrenic-17, alcoholic-9)
poss(brother-12, my-11)
nsubj(schizophrenic-17, brother-12)
nsubj(gone-19, brother-12)
conj_and(brother-12, sister-14)
nsubj(schizophrenic-17, sister-14)
cop(schizophrenic-17, are-15)
dep(schizophrenic-17, both-16)
root(ROOT-0, schizophrenic-17)
conj_and(schizophrenic-17, gone-19)

(ROOT
  (SBARQ (RB So)
    (WHADVP (WRB why))
    (SQ (VBZ is)
      (NP
        (NP (PRP$ my) (NN mother))
        (NP (PRP$ my) (NN family))))
    (. ?)))

advmod(is-3, So-1)
advmod(is-3, why-2)
root(ROOT-0, is-3)
poss(mother-5, my-4)
nsubj(is-3, mother-5)
poss(family-7, my-6)
dep(mother-5, family-7)

(ROOT
  (S
    (S
      (SBAR (IN Because)
        (S
          (NP (PRP she))
          (VP (VBD taught)
            (NP (PRP me))
            (PP (RB right) (IN from)
              (ADJP (JJ wrong))))))
      (, ,)
      (NP (PRP she))
      (ADVP (RB never))
      (VP (VBD turned)
        (NP (PRP$ her) (NN back))
        (PP (IN on)
          (NP (PRP me)))))
    (, ,)
    (CC and)
    (S
      (NP (PRP she))
      (VP (MD will)
        (ADVP (RB always))
        (VP (VB love)
          (NP (PRP me)))))
    (. .)))

mark(taught-3, Because-1)
nsubj(taught-3, she-2)
advcl(turned-11, taught-3)
dobj(taught-3, me-4)
advmod(taught-3, right-5)
prep_from(taught-3, wrong-7)
nsubj(turned-11, she-9)
neg(turned-11, never-10)
root(ROOT-0, turned-11)
poss(back-13, her-12)
dobj(turned-11, back-13)
prep_on(turned-11, me-15)
nsubj(love-21, she-18)
aux(love-21, will-19)
advmod(love-21, always-20)
conj_and(turned-11, love-21)
dobj(love-21, me-22)

(ROOT
  (S (CC And)
    (NP (RB yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ young)))
    (. .)))

cc(young-6, And-1)
nsubj(young-6, yes-2)
nsubj(young-6, I-4)
cop(young-6, 'm-5)
root(ROOT-0, young-6)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP
      (VP (VBP 've)
        (VP (VBN been)
          (PP (IN through)
            (NP
              (NP (DT a) (NN lot))
              (PP (IN of)
                (NP (NN shit)))))))
      (, ,)
      (CC and)
      (VP (VBD had)
        (NP
          (NP (DT a) (NN lot))
          (PP (IN of)
            (NP (NN life) (NN experience))))))
    (. .)))

nsubj(been-4, I-2)
nsubj(had-12, I-2)
aux(been-4, 've-3)
root(ROOT-0, been-4)
det(lot-7, a-6)
prep_through(been-4, lot-7)
prep_of(lot-7, shit-9)
conj_and(been-4, had-12)
det(lot-14, a-13)
dobj(had-12, lot-14)
nn(experience-17, life-16)
prep_of(lot-14, experience-17)

(ROOT
  (S (CC And)
    (PP (IN at)
      (NP
        (NP (DT the) (NN end))
        (PP (IN of)
          (NP (DT the) (NN day)))))
    (NP (DT all) (NN I) (NN need))
    (VP (VBZ is)
      (NP
        (NP (DT that) (NN love))
        (PP (IN from)
          (NP (PRP$ my) (NN mother)))))
    (. .)))

cc(love-13, And-1)
det(end-4, the-3)
prep_at(love-13, end-4)
det(day-7, the-6)
prep_of(end-4, day-7)
det(need-10, all-8)
nn(need-10, I-9)
nsubj(love-13, need-10)
cop(love-13, is-11)
det(love-13, that-12)
root(ROOT-0, love-13)
poss(mother-16, my-15)
prep_from(love-13, mother-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP she))
        (VP (VBD were)
          (ADJP (JJ gay)
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD would) (RB n't)
                  (VP (VB care) (, ,)
                    (SBAR (IN if)
                      (S
                        (NP (PRP she))
                        (VP (VBD were)
                          (ADJP (JJ autistic)
                            (SBAR
                              (S
                                (NP (PRP I))
                                (VP (MD would) (RB n't)
                                  (VP (VB care)))))))))
                    (, ,)
                    (SBAR (IN if)
                      (S
                        (NP (PRP she))
                        (VP (VBD were) (RB n't)
                          (ADVP (RB even))
                          (NP (PRP$ my) (JJ real) (NN mother)))))))))))))
    (NP (PRP I))
    (VP (MD would) (RB n't)
      (VP (VB give)
        (NP (DT a) (NN damn))))
    (. .)))

mark(gay-4, If-1)
nsubj(gay-4, she-2)
cop(gay-4, were-3)
advcl(give-30, gay-4)
nsubj(care-8, I-5)
aux(care-8, would-6)
neg(care-8, n't-7)
dep(gay-4, care-8)
mark(autistic-13, if-10)
nsubj(autistic-13, she-11)
cop(autistic-13, were-12)
advcl(care-8, autistic-13)
nsubj(care-17, I-14)
aux(care-17, would-15)
neg(care-17, n't-16)
dep(autistic-13, care-17)
mark(mother-26, if-19)
nsubj(mother-26, she-20)
cop(mother-26, were-21)
neg(mother-26, n't-22)
advmod(mother-26, even-23)
poss(mother-26, my-24)
amod(mother-26, real-25)
advcl(care-8, mother-26)
nsubj(give-30, I-27)
aux(give-30, would-28)
neg(give-30, n't-29)
root(ROOT-0, give-30)
det(damn-32, a-31)
dobj(give-30, damn-32)

(ROOT
  (FRAG
    (SBAR (IN because)
      (S
        (NP (PRP she))
        (VP (VBZ loves)
          (NP (PRP me)))))
    (. .)))

mark(loves-3, because-1)
nsubj(loves-3, she-2)
root(ROOT-0, loves-3)
dobj(loves-3, me-4)

(ROOT
  (S (IN So)
    (NP (PRP I))
    (VP
      (VP (VBP know))
      (, ,)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT all))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ takes)
                  (S
                    (VP (TO to)
                      (VP (VB raise)
                        (NP (DT a) (JJ good) (NN kid)))))))))
          (VP (VBZ is)
            (NP (NN love)
              (CC and)
              (NN dedication))))))
    (. .)))

dep(know-3, So-1)
nsubj(know-3, I-2)
root(ROOT-0, know-3)
dep(love-15, that-5)
dobj(takes-8, all-6)
nsubj(love-15, all-6)
nsubj(takes-8, it-7)
xsubj(raise-10, it-7)
rcmod(all-6, takes-8)
aux(raise-10, to-9)
xcomp(takes-8, raise-10)
det(kid-13, a-11)
amod(kid-13, good-12)
dobj(raise-10, kid-13)
cop(love-15, is-14)
ccomp(know-3, love-15)
ccomp(know-3, dedication-17)
conj_and(love-15, dedication-17)

(ROOT
  (S
    (NP (NNP Screw) (DT the) (NNP Church))
    (, ,)
    (VP (VB screw)
      (NP (DT the) (NN State)))
    (. .)))

nn(Church-3, Screw-1)
det(Church-3, the-2)
nsubj(screw-5, Church-3)
root(ROOT-0, screw-5)
det(State-7, the-6)
dobj(screw-5, State-7)

(ROOT
  (S (IN So)
    (NP
      (NP (DT that) (CD one) (JJ little) (NN fact))
      (, ,)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN bible))
          (VP (VBZ says)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ 's)
                  (ADJP (JJ wrong))))))))
      (, ,))
    (VP (VBZ is) (RB n't)
      (ADJP (JJ enough)
        (PP (IN for)
          (NP (PRP me)))))
    (. .)))

dep(enough-17, So-1)
det(fact-5, that-2)
num(fact-5, one-3)
amod(fact-5, little-4)
nsubj(enough-17, fact-5)
dep(says-10, that-7)
det(bible-9, the-8)
nsubj(says-10, bible-9)
dep(fact-5, says-10)
nsubj(wrong-13, it-11)
cop(wrong-13, 's-12)
ccomp(says-10, wrong-13)
cop(enough-17, is-15)
neg(enough-17, n't-16)
root(ROOT-0, enough-17)
prep_for(enough-17, me-19)

(ROOT
  (S (CC But)
    (ADVP (IN at) (JJS least))
    (NP (PRP I))
    (VP (VBP have)
      (VP
        (VP (VBN opened)
          (NP (PRP$ my) (NN mind)))
        (CC and)
        (VP (VBN tried)
          (S
            (VP (TO to)
              (VP (VB understand)
                (NP (PRP it))))))))
    (. .)))

advmod(opened-6, at-2)
pobj(at-2, least-3)
nsubj(opened-6, I-4)
nsubj(tried-10, I-4)
xsubj(understand-12, I-4)
aux(opened-6, have-5)
root(ROOT-0, opened-6)
poss(mind-8, my-7)
dobj(opened-6, mind-8)
conj_and(opened-6, tried-10)
aux(understand-12, to-11)
xcomp(tried-10, understand-12)
dobj(understand-12, it-13)

(ROOT
  (S
    (NP (PRP$ My) (NN mind))
    (VP (VBZ is)
      (ADVP (RB always))
      (ADJP (JJ open))
      (, ,)
      (SBAR
        (ADVP (IN at) (JJS least))
        (WHADVP (WRB when))
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (VP (VBG talking)
              (PP (TO to)
                (NP (JJ logical) (NNS people)))
              (ADVP (RB -LRB-) (RB ie)))))))
    (. .)))

poss(mind-2, My-1)
nsubj(open-5, mind-2)
cop(open-5, is-3)
advmod(open-5, always-4)
root(ROOT-0, open-5)
advmod(talking-12, at-7)
pobj(at-7, least-8)
advmod(talking-12, when-9)
nsubj(talking-12, I-10)
aux(talking-12, 'm-11)
ccomp(open-5, talking-12)
amod(people-15, logical-14)
prep_to(talking-12, people-15)
advmod(talking-12, ie-17)

(ROOT
  (S
    (NP (RB not))
    (VP (VBP belligerent)
      (CC or)
      (VBP insane))
    (-RRB- -RRB-) (. .)))

nsubj(belligerent-2, not-1)
nsubj(insane-4, not-1)
root(ROOT-0, belligerent-2)
conj_or(belligerent-2, insane-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ bisexual))
      (, ,)
      (S
        (VP (VB remember))))
    (. ?)))

nsubj(bisexual-3, I-1)
cop(bisexual-3, 'm-2)
root(ROOT-0, bisexual-3)
ccomp(bisexual-3, remember-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBN attracted)
        (PP (TO to)
          (NP (NNS girls)))
        (SBAR (IN before)
          (S
            (NP (PRP I))
            (VP (VBD had)
              (ADVP (RB even))
              (VP (VBN seen)
                (NP (DT a) (NN television))))))))
    (. .)))

nsubjpass(attracted-3, I-1)
auxpass(attracted-3, was-2)
root(ROOT-0, attracted-3)
prep_to(attracted-3, girls-5)
mark(seen-10, before-6)
nsubj(seen-10, I-7)
aux(seen-10, had-8)
advmod(seen-10, even-9)
advcl(attracted-3, seen-10)
det(television-12, a-11)
dobj(seen-10, television-12)

