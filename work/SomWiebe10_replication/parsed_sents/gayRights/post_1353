(ROOT
  (S
    (NP (DT The) (NN argument))
    (VP (VBZ is)
      (ADJP (JJ invalid)))
    (. .)))

det(argument-2, The-1)
nsubj(invalid-4, argument-2)
cop(invalid-4, is-3)
root(ROOT-0, invalid-4)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ is)
          (ADJP (RB particularly) (JJ true)
            (PP (IN in)
              (NP (CD one) (NN instance)))))))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN inferred)
          (SBAR (IN as)
            (S
              (ADVP (RB universally))
              (ADJP (JJ true)
                (PP (IN in)
                  (NP (DT all) (NNS instances)))))))))
    (. .)))

nsubj(true-4, What-1)
cop(true-4, is-2)
advmod(true-4, particularly-3)
csubjpass(inferred-11, true-4)
num(instance-7, one-6)
prep_in(true-4, instance-7)
aux(inferred-11, can-8)
neg(inferred-11, not-9)
auxpass(inferred-11, be-10)
root(ROOT-0, inferred-11)
mark(true-14, as-12)
advmod(true-14, universally-13)
advcl(inferred-11, true-14)
det(instances-17, all-16)
prep_in(true-14, instances-17)

(ROOT
  (S
    (ADVP (RB Arguments))
    (NP
      (NP (DT that) (NN reason))
      (PP (IN from)
        (NP
          (NP (DT that))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is)
                (ADJP (JJ true)
                  (PP (IN in)
                    (NP
                      (NP (CD one) (NN example))
                      (PP (TO to)
                        (NP
                          (NP (DT a) (NN conclusion))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBZ is)
                                (ADJP (JJ universal))))))))))))))))
    (VP (VBZ is)
      (ADJP (JJ fallacious)))
    (. .)))

advmod(fallacious-19, Arguments-1)
det(reason-3, that-2)
nsubj(fallacious-19, reason-3)
prep_from(reason-3, that-5)
nsubj(true-8, that-5)
cop(true-8, is-7)
rcmod(that-5, true-8)
num(example-11, one-10)
prep_in(true-8, example-11)
det(conclusion-14, a-13)
prep_to(example-11, conclusion-14)
nsubj(universal-17, conclusion-14)
cop(universal-17, is-16)
rcmod(conclusion-14, universal-17)
cop(fallacious-19, is-18)
root(ROOT-0, fallacious-19)

(ROOT
  (NP
    (NP (NNP Example))
    (: :)
    (S
      (S
        (S
          (NP (NN andsoccer))
          (VP (VBZ has)
            (NP (NN hair))))
        (, ,)
        (NP (NN andsoccer))
        (VP (VBZ is)
          (NP (DT a) (NN male))))
      (: ;)
      (S
        (ADVP (RB therefore))
        (, ,)
        (NP (DT all) (NNS males))
        (VP (VBP have)
          (NP (NN hair)))))
    (. .)))

root(ROOT-0, Example-1)
nsubj(has-4, andsoccer-3)
ccomp(male-10, has-4)
dobj(has-4, hair-5)
nsubj(male-10, andsoccer-7)
cop(male-10, is-8)
det(male-10, a-9)
dep(Example-1, male-10)
advmod(have-16, therefore-12)
det(males-15, all-14)
nsubj(have-16, males-15)
parataxis(male-10, have-16)
dobj(have-16, hair-17)

(ROOT
  (S
    (ADVP (RB Moreover))
    (, ,)
    (SBAR
      (WHNP (WP what))
      (S
        (VP (VBZ is)
          (ADJP (JJ true)))))
    (NP
      (NP (NN today))
      (PP (IN of)
        (NP (PRP$ your) (NN judgment))))
    (VP (MD may) (RB not)
      (VP (VB be)
        (ADJP (RB necessarily) (JJ true)
          (PP (IN in)
            (NP (NN fact))))))
    (. .)))

advmod(true-14, Moreover-1)
nsubj(true-5, what-3)
cop(true-5, is-4)
dep(true-14, true-5)
nsubj(true-14, today-6)
poss(judgment-9, your-8)
prep_of(today-6, judgment-9)
aux(true-14, may-10)
neg(true-14, not-11)
cop(true-14, be-12)
advmod(true-14, necessarily-13)
root(ROOT-0, true-14)
prep_in(true-14, fact-16)

(ROOT
  (S
    (S
      (SBAR (IN Though)
        (S
          (NP (PRP$ your) (NN judgment))
          (VP (MD may)
            (VP (VB be)
              (ADJP (JJ valid))
              (NP (NN today))))))
      (NP (PRP$ your) (NN judgment))
      (VP (VBZ precludes)
        (NP (PRP$ your) (NN right)
          (S
            (VP (TO to)
              (VP (VB change)
                (NP (PRP$ your) (NN mind))
                (PP (IN about)
                  (NP (NN something)))))))))
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (JJ unaware)
        (PP (IN of)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD would)
                (VP (VB alter)
                  (NP (PRP$ your) (NN judgment)))))))))
    (. .)))

mark(valid-6, Though-1)
poss(judgment-3, your-2)
nsubj(valid-6, judgment-3)
aux(valid-6, may-4)
cop(valid-6, be-5)
advcl(precludes-10, valid-6)
attr(valid-6, today-7)
tmod(valid-6, today-7)
poss(judgment-9, your-8)
nsubj(precludes-10, judgment-9)
dep(unaware-21, precludes-10)
poss(right-12, your-11)
dobj(precludes-10, right-12)
aux(change-14, to-13)
infmod(right-12, change-14)
poss(mind-16, your-15)
dobj(change-14, mind-16)
prep_about(change-14, something-18)
nsubj(unaware-21, you-19)
cop(unaware-21, are-20)
root(ROOT-0, unaware-21)
nsubj(alter-25, that-23)
aux(alter-25, would-24)
prepc_of(unaware-21, alter-25)
poss(judgment-27, your-26)
dobj(alter-25, judgment-27)

(ROOT
  (S
    (SBAR (RB Just) (IN because)
      (S
        (NP (PRP you))
        (VP (VBP have)
          (VP (VBN judged)
            (SBAR (IN that)
              (S
                (NP (DT a) (NN person))
                (VP (VBZ is) (RB not)
                  (NP (JJ gay) (NN today)))))))))
    (VP (VBZ does) (RB n't)
      (VP (VB rule)
        (PRT (RP out))
        (NP (DT the) (NN possibility))
        (SBAR (IN that)
          (S
            (NP (DT the) (NN judgment))
            (VP (MD may)
              (VP (VB change)
                (PP (IN in)
                  (NP (DT the) (NN future)))))))))
    (. .)))

advmod(judged-5, Just-1)
dep(judged-5, because-2)
nsubj(judged-5, you-3)
aux(judged-5, have-4)
advcl(rule-15, judged-5)
csubj(rule-15, judged-5)
complm(today-12, that-6)
det(person-8, a-7)
nsubj(today-12, person-8)
cop(today-12, is-9)
neg(today-12, not-10)
amod(today-12, gay-11)
ccomp(judged-5, today-12)
aux(rule-15, does-13)
neg(rule-15, n't-14)
root(ROOT-0, rule-15)
prt(rule-15, out-16)
det(possibility-18, the-17)
dobj(rule-15, possibility-18)
complm(change-23, that-19)
det(judgment-21, the-20)
nsubj(change-23, judgment-21)
aux(change-23, may-22)
ccomp(rule-15, change-23)
det(future-26, the-25)
prep_in(change-23, future-26)

(ROOT
  (S
    (NP (CD One) (JJ last) (NN statement))
    (, ,)
    (PP (IN for)
      (NP (PRP you)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ obvious))
      (SBAR (IN that)
        (S
          (NP (DT all) (NNS homosexuals))
          (VP (VBD were)
            (VP (VBN raised)
              (PP (IN by)
                (NP (NNS heterosexuals))))))))
    (. .)))

num(statement-3, One-1)
amod(statement-3, last-2)
nsubj(obvious-10, statement-3)
prep_for(obvious-10, you-6)
nsubj(obvious-10, it-8)
cop(obvious-10, 's-9)
root(ROOT-0, obvious-10)
complm(raised-15, that-11)
det(homosexuals-13, all-12)
nsubjpass(raised-15, homosexuals-13)
auxpass(raised-15, were-14)
ccomp(obvious-10, raised-15)
agent(raised-15, heterosexuals-17)

(ROOT
  (S (CC And)
    (PP (IN by)
      (NP
        (NP (NN reason))
        (PP (IN of)
          (NP (JJ such)))))
    (, ,)
    (NP (NN nobody))
    (VP (MD can)
      (ADVP (RB validly))
      (VP (VB argue)
        (SBAR (IN that)
          (S
            (NP (DT the) (JJ parents) (JJ sexual) (NN orientation))
            (VP (VBZ predetermines)
              (NP
                (NP (DT the) (JJ sexual) (NN orientation))
                (PP (IN of)
                  (NP (PRP$ their) (NNS children)))))))))
    (. .)))

cc(argue-10, And-1)
prep_by(argue-10, reason-3)
prep_of(reason-3, such-5)
nsubj(argue-10, nobody-7)
aux(argue-10, can-8)
advmod(argue-10, validly-9)
root(ROOT-0, argue-10)
complm(predetermines-16, that-11)
det(orientation-15, the-12)
amod(orientation-15, parents-13)
amod(orientation-15, sexual-14)
nsubj(predetermines-16, orientation-15)
ccomp(argue-10, predetermines-16)
det(orientation-19, the-17)
amod(orientation-19, sexual-18)
dobj(predetermines-16, orientation-19)
poss(children-22, their-21)
prep_of(orientation-19, children-22)

(ROOT
  (PRN (-LRB- -LRB-)
    (S
      (NP (PRP$ your))
      (ADJP (VB welcome)))
    (-RRB- -RRB-)))

dep(welcome-3, your-2)
root(ROOT-0, welcome-3)

