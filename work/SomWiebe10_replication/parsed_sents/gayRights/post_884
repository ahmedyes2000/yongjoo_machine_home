(ROOT
  (S
    (PP (IN Because)
      (NP
        (NP (CD one))
        (S
          (S
            (VP
              (VP (MD can) (RB not)
                (VP (VB exist)))
              (CC nor)
              (VP (VBP act) (`` ``)
                (NP
                  (NP (RB outside))
                  (PP (IN of)
                    (NP (NN nature))))
                ('' ''))))
          (, ,) (FW i.e.) (, ,)
          (S
            (VP
              (ADVP (RB there))
              (VBG being)
              (NP (DT no) (`` ``) (NN outside) ('' '')))))))
    (, ,)
    (NP
      (NP (DT all))
      (SBAR (IN that)
        (S
          (NP (PRP one))
          (VP (VBZ does)))))
    (VP (VBZ is)
      (ADJP (RB necessarily) (JJ natural)))
    (. .)))

prep_because(natural-29, one-2)
aux(exist-5, can-3)
neg(exist-5, not-4)
dep(one-2, exist-5)
dep(one-2, act-7)
conj_nor(exist-5, act-7)
dobj(act-7, outside-9)
prep_of(outside-9, nature-11)
dep(exist-5, i.e.-14)
advmod(outside-20, there-16)
cop(outside-20, being-17)
det(outside-20, no-18)
dep(exist-5, outside-20)
dobj(does-26, all-23)
nsubj(natural-29, all-23)
complm(does-26, that-24)
nsubj(does-26, one-25)
dep(all-23, does-26)
cop(natural-29, is-27)
advmod(natural-29, necessarily-28)
root(ROOT-0, natural-29)

(ROOT
  (S
    (NP (PRP$ Your) (NN argument))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (NN assumption))))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN purpose))
            (PP (IN of)
              (NP
                (NP (DT a) (JJ single) (JJ human) (NN life))
                (CC and)
                (NP
                  (NP (DT the) (NN purpose))
                  (PP (IN of)
                    (NP (NNP ALL) (JJ human) (NN life)))))))
          (VP (VBZ is)
            (NP (NN procreation))))))
    (. .)))

poss(argument-2, Your-1)
nsubj(one-4, argument-2)
cop(one-4, is-3)
root(ROOT-0, one-4)
prep_of(one-4, assumption-6)
complm(procreation-23, that-7)
det(purpose-9, the-8)
nsubj(procreation-23, purpose-9)
det(life-14, a-11)
amod(life-14, single-12)
amod(life-14, human-13)
prep_of(purpose-9, life-14)
det(purpose-17, the-16)
prep_of(purpose-9, purpose-17)
conj_and(life-14, purpose-17)
nn(life-21, ALL-19)
amod(life-21, human-20)
prep_of(purpose-17, life-21)
cop(procreation-23, is-22)
ccomp(one-4, procreation-23)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (NN nothing) (NN anyone))
        (SBAR
          (S
            (VP (MD can)
              (VP (VB do)
                (S
                  (VP (TO to)
                    (VP (VB prevent)
                      (NP
                        (NP (DT the) (JJ emotional) (NN marriage))
                        (PP (IN of)
                          (NP
                            (QP (CD two)
                              (CC or)
                              (JJR more))
                            (NNS individuals))))
                      (PP (TO to)
                        (NP (CD one) (DT another)))
                      (SBAR (IN if)
                        (S
                          (NP (PRP they))
                          (ADVP (RB so))
                          (VP (VBP choose)))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
nn(anyone-4, nothing-3)
nsubj(is-2, anyone-4)
aux(do-6, can-5)
rcmod(anyone-4, do-6)
aux(prevent-8, to-7)
xcomp(do-6, prevent-8)
det(marriage-11, the-9)
amod(marriage-11, emotional-10)
dobj(prevent-8, marriage-11)
num(individuals-16, two-13)
conj_or(two-13, more-15)
quantmod(two-13, more-15)
num(individuals-16, more-15)
prep_of(marriage-11, individuals-16)
prep_to(prevent-8, one-18)
dep(one-18, another-19)
mark(choose-23, if-20)
nsubj(choose-23, they-21)
advmod(choose-23, so-22)
advcl(prevent-8, choose-23)

(ROOT
  (S
    (NP
      (NP (PRP They))
      (CC and)
      (NP (PRP$ their) (NNS detractors)))
    (ADVP (RB often))
    (VP (VBP do) (RB not)
      (VP
        (VP (VB understand))
        (CC or)
        (PRN (, ,)
          (PP (IN in)
            (NP (DT the) (JJS least)))
          (, ,))
        (VP (VB forget)
          (NP
            (NP (DT the) (JJS fullest) (NNS implications))
            (PP (IN of)
              (NP
                (NP (DT the) (NN concept))
                (PP (IN of)
                  (NP (`` ``) (NN marriage) ('' '')))))))))
    (. .)))

nsubj(understand-8, They-1)
nsubj(forget-15, They-1)
poss(detractors-4, their-3)
conj_and(They-1, detractors-4)
nsubj(understand-8, detractors-4)
advmod(understand-8, often-5)
aux(understand-8, do-6)
neg(understand-8, not-7)
root(ROOT-0, understand-8)
dep(understand-8, in-11)
det(least-13, the-12)
pobj(in-11, least-13)
conj_or(understand-8, forget-15)
det(implications-18, the-16)
amod(implications-18, fullest-17)
dobj(forget-15, implications-18)
det(concept-21, the-20)
prep_of(implications-18, concept-21)
prep_of(concept-21, marriage-24)

(ROOT
  (S
    (ADVP (RB Certainly))
    (, ,)
    (NP
      (NP (DT those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBD rail)
            (PP (IN against)
              (NP (JJ same-sex) (NN marriage)))
            (PP (IN as)
              (NP
                (NP (DT a) (JJ potential) (NN redefinition))
                (PP (IN of)
                  (NP (`` ``) (NN marriage) ('' '')))))))))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB miss)
            (NP
              (NP (DT the) (NN irony))
              (PP (IN of)
                (NP
                  (NP (PRP$ their)
                    (ADJP (RB very) (JJ limited))
                    (NN understanding))
                  (PP (IN of)
                    (NP (DT the)
                      (ADJP (RB much) (JJR broader))
                      (NN concept))))))))))
    (. .)))

advmod(seem-17, Certainly-1)
nsubj(rail-5, those-3)
nsubj(seem-17, those-3)
xsubj(miss-19, those-3)
rcmod(those-3, rail-5)
amod(marriage-8, same-sex-7)
prep_against(rail-5, marriage-8)
det(redefinition-12, a-10)
amod(redefinition-12, potential-11)
prep_as(rail-5, redefinition-12)
prep_of(redefinition-12, marriage-15)
root(ROOT-0, seem-17)
aux(miss-19, to-18)
xcomp(seem-17, miss-19)
det(irony-21, the-20)
dobj(miss-19, irony-21)
poss(understanding-26, their-23)
advmod(limited-25, very-24)
amod(understanding-26, limited-25)
prep_of(irony-21, understanding-26)
det(concept-31, the-28)
advmod(broader-30, much-29)
amod(concept-31, broader-30)
prep_of(understanding-26, concept-31)

(ROOT
  (S
    (NP (NNS Communities))
    (VP (MD may)
      (CC or)
      (MD may) (RB not)
      (VP (VB be)
        (PP (IN at)
          (NP (NN liberty)))
        (S
          (VP (TO to)
            (VP (VB suppress)
              (NP
                (NP (JJ official) (NN recognition))
                (PP (IN of)
                  (NP
                    (NP (DT a) (`` ``) (NN marriage) ('' ''))
                    (PP (IN of)
                      (NP
                        (QP (CD two)
                          (CC or)
                          (JJR more))
                        (NNS people)))))))))))
    (. .)))

nsubj(be-6, Communities-1)
aux(be-6, may-2)
aux(be-6, may-4)
conj_or(be-6, may-4)
neg(be-6, not-5)
root(ROOT-0, be-6)
prep_at(be-6, liberty-8)
aux(suppress-10, to-9)
xcomp(be-6, suppress-10)
amod(recognition-12, official-11)
dobj(suppress-10, recognition-12)
det(marriage-16, a-14)
prep_of(recognition-12, marriage-16)
num(people-22, two-19)
conj_or(two-19, more-21)
quantmod(two-19, more-21)
num(people-22, more-21)
prep_of(marriage-16, people-22)

(ROOT
  (S
    (PP (IN As)
      (NP (DT a)
        (ADJP (RBR more) (JJ advanced))
        (NN thinker)))
    (, ,)
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB little))
      (VP (VBN bothered)
        (PP (IN by)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (NNS communities))
              (VP
                (VP (VBP allow))
                (CC or)
                (VP (VBD disallow)
                  (PP (IN on)
                    (NP (DT this) (NN issue))))))))))
    (. .)))

det(thinker-5, a-2)
advmod(advanced-4, more-3)
amod(thinker-5, advanced-4)
prep_as(bothered-10, thinker-5)
nsubjpass(bothered-10, I-7)
auxpass(bothered-10, am-8)
advmod(bothered-10, little-9)
root(ROOT-0, bothered-10)
dobj(allow-14, what-12)
nsubj(allow-14, communities-13)
nsubj(disallow-16, communities-13)
agent(bothered-10, allow-14)
agent(bothered-10, disallow-16)
conj_or(allow-14, disallow-16)
det(issue-19, this-18)
prep_on(disallow-16, issue-19)

(ROOT
  (S
    (NP (DT An) (JJ authentic) (NN marriage))
    (VP (VBZ is)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP
            (NP (DT the) (NN heart))
            (, ,)
            (NP
              (NP (NN mind))
              (, ,)
              (NP (NN spirit)))))))
    (. .)))

det(marriage-3, An-1)
amod(marriage-3, authentic-2)
nsubj(one-5, marriage-3)
cop(one-5, is-4)
root(ROOT-0, one-5)
det(heart-8, the-7)
prep_of(one-5, heart-8)
appos(heart-8, mind-10)
appos(mind-10, spirit-12)

(ROOT
  (S
    (NP
      (NP (DT No) (NN government) (, ,) (NN vote) (, ,) (NN voter) (, ,) (NN law)
        (CC or)
        (NN court))
      (SBAR
        (S
          (VP (MD can)
            (VP (VB allow)
              (CC or)
              (VB disallow)
              (NP (WP what)))))))
    (VP (VBZ is)
      (NP
        (NP (RB quite) (JJ outside))
        (PP (IN of)
          (NP (PRP$ their) (NN control)))))
    (. .)))

det(government-2, No-1)
nsubj(outside-18, government-2)
conj_or(government-2, vote-4)
nsubj(outside-18, vote-4)
conj_or(government-2, voter-6)
nsubj(outside-18, voter-6)
conj_or(government-2, law-8)
nsubj(outside-18, law-8)
conj_or(government-2, court-10)
nsubj(outside-18, court-10)
aux(allow-12, can-11)
rcmod(government-2, allow-12)
rcmod(government-2, disallow-14)
conj_or(allow-12, disallow-14)
dobj(allow-12, what-15)
cop(outside-18, is-16)
advmod(outside-18, quite-17)
root(ROOT-0, outside-18)
poss(control-21, their-20)
prep_of(outside-18, control-21)

(ROOT
  (S
    (S
      (NP (DT That) (NNS communities))
      (VP
        (VP (VBP create)
          (NP
            (NP (DT a) (NN bit))
            (PP (IN of)
              (NP
                (NP (NN paper))
                (CC and)
                (NP (DT a) (NN stamp))))))
        (CC and)
        (VP
          (ADVP (RB then))
          (VBP deny)
          (NP
            (QP (DT some) (JJ few))))
        (S
          (VP (TO to)
            (VP (VB participate)
              (PP (IN in)
                (NP
                  (NP (NN ownership))
                  (PP (IN of)
                    (NP (DT that) (JJ unnecessary) (NN paper))))))))))
    (CC and)
    (S
      (NP (NN stamp))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ ludicrous) (NN self) (NN inflation))
          (PP (IN of)
            (NP (JJ childish) (JJ human) (NNS beings))))))
    (. .)))

det(communities-2, That-1)
nsubj(create-3, communities-2)
nsubj(deny-13, communities-2)
xsubj(participate-17, communities-2)
root(ROOT-0, create-3)
det(bit-5, a-4)
dobj(create-3, bit-5)
prep_of(bit-5, paper-7)
det(stamp-10, a-9)
prep_of(bit-5, stamp-10)
conj_and(paper-7, stamp-10)
advmod(deny-13, then-12)
conj_and(create-3, deny-13)
quantmod(few-15, some-14)
dobj(deny-13, few-15)
aux(participate-17, to-16)
xcomp(create-3, participate-17)
prep_in(participate-17, ownership-19)
det(paper-23, that-21)
amod(paper-23, unnecessary-22)
prep_of(ownership-19, paper-23)
nsubj(inflation-30, stamp-25)
cop(inflation-30, is-26)
det(inflation-30, a-27)
amod(inflation-30, ludicrous-28)
nn(inflation-30, self-29)
conj_and(create-3, inflation-30)
amod(beings-34, childish-32)
amod(beings-34, human-33)
prep_of(inflation-30, beings-34)

(ROOT
  (S
    (S
      (NP (DT Those))
      (ADJP (RB genuinely) (VBN committed)
        (PP (TO to)
          (NP (CD one)))))
    (NP (DT another))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN need))
        (PP (IN of)
          (NP (NN community) (NN approval)))))
    (. .)))

dep(committed-3, Those-1)
advmod(committed-3, genuinely-2)
dep(have-7, committed-3)
prep_to(committed-3, one-5)
nsubj(have-7, another-6)
root(ROOT-0, have-7)
det(need-9, no-8)
dobj(have-7, need-9)
nn(approval-12, community-11)
prep_of(need-9, approval-12)

(ROOT
  (S
    (S
      (SBAR (IN Although)
        (FRAG
          (ADJP (JJ true))))
      (, ,)
      (NP (DT the) (NNS species))
      (VP (MD will) (RB not)
        (VP (VB continue)
          (PP (IN without)
            (NP
              (NP (DT a) (JJ sufficient) (NN number))
              (PP (IN of)
                (NP
                  (NP (NNS individuals))
                  (VP (VBG reproducing)))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP assume)
      (ADVP (RB also))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN duty))
              (PP (IN of)
                (NP
                  (NP (RB either) (DT every))
                  (CC or)
                  (NP
                    (QP (IN at) (JJS least) (DT some))
                    (NNS individuals))))
              (S
                (VP (TO to)
                  (VP (VB do)
                    (ADVP (RB so))))))))))
    (. .)))

mark(true-2, Although-1)
advcl(continue-8, true-2)
det(species-5, the-4)
nsubj(continue-8, species-5)
aux(continue-8, will-6)
neg(continue-8, not-7)
ccomp(assume-18, continue-8)
det(number-12, a-10)
amod(number-12, sufficient-11)
prep_without(continue-8, number-12)
prep_of(number-12, individuals-14)
partmod(individuals-14, reproducing-15)
nsubj(assume-18, you-17)
root(ROOT-0, assume-18)
advmod(assume-18, also-19)
complm(duty-24, that-20)
nsubj(duty-24, it-21)
cop(duty-24, is-22)
det(duty-24, the-23)
ccomp(assume-18, duty-24)
advmod(every-27, either-26)
prep_of(duty-24, every-27)
quantmod(some-31, at-29)
mwe(at-29, least-30)
pobj(at-29, least-30)
num(individuals-32, some-31)
prep_of(duty-24, individuals-32)
conj_or(every-27, individuals-32)
aux(do-34, to-33)
infmod(duty-24, do-34)
advmod(do-34, so-35)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB submit)
        (S
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT no) (JJ such) (NN duty)
                (S
                  (VP (TO to)
                    (VP (`` ``) (VB carry)
                      (PRT (RP on))
                      (NP (DT the) (NN species))
                      ('' '')))))))
          (, ,)
          (S
            (ADVP (RB however))
            (, ,)
            (NP (PRP one))
            (VP
              (VP (VBZ is)
                (ADVP (RB certainly)))
              (CC and)
              (VP (MD ought)
                (ADVP (RB certainly))
                (VP (VB be)
                  (ADJP (JJ free)
                    (S
                      (VP (TO to)
                        (VP (VB do)
                          (SBAR (RB so) (IN if)
                            (S
                              (NP (PRP one))
                              (VP (VBZ wishes)))))))))))))))
    (. .)))

nsubj(submit-3, I-1)
aux(submit-3, would-2)
root(ROOT-0, submit-3)
expl(is-5, there-4)
dep(submit-3, is-5)
det(duty-8, no-6)
amod(duty-8, such-7)
nsubj(is-5, duty-8)
aux(carry-11, to-9)
infmod(duty-8, carry-11)
prt(carry-11, on-12)
det(species-14, the-13)
dobj(carry-11, species-14)
advmod(is-20, however-17)
nsubj(is-20, one-19)
dep(is-5, is-20)
advmod(is-20, certainly-21)
dep(is-5, ought-23)
conj_and(is-20, ought-23)
advmod(ought-23, certainly-24)
cop(free-26, be-25)
dep(ought-23, free-26)
aux(do-28, to-27)
xcomp(free-26, do-28)
advmod(wishes-32, so-29)
dep(wishes-32, if-30)
nsubj(wishes-32, one-31)
ccomp(do-28, wishes-32)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP one))
        (VP (VBZ is) (RB not)
          (ADJP (JJ free)
            (S
              (VP (TO to)
                (VP (VB do)
                  (SBAR
                    (S
                      (NP (CC nor))
                      (VP (MD ought)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (ADJP (JJ free)
                                (S
                                  (VP (TO to)
                                    (VP (VB do))))))))))))))))))
    (VP (VBZ is)
      (VP (VBG compel)
        (NP (DT a) (JJ false) (NN duty))
        (S
          (VP (TO to)
            (VP (VB reproduce)
              (PP (IN on)
                (NP
                  (NP (DT every) (JJ individual) (NN member))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (JJ abstract) (NN idea))
                      (PP (IN of) (`` ``)
                        (NP (NNS species))
                        ('' '')))))))))))
    (. .)))

dobj(free-5, What-1)
nsubj(free-5, one-2)
cop(free-5, is-3)
neg(free-5, not-4)
csubj(compel-16, free-5)
aux(do-7, to-6)
xcomp(free-5, do-7)
nsubj(ought-9, nor-8)
xsubj(free-12, nor-8)
ccomp(do-7, ought-9)
aux(free-12, to-10)
cop(free-12, be-11)
xcomp(ought-9, free-12)
aux(do-14, to-13)
xcomp(free-12, do-14)
aux(compel-16, is-15)
root(ROOT-0, compel-16)
det(duty-19, a-17)
amod(duty-19, false-18)
dobj(compel-16, duty-19)
aux(reproduce-21, to-20)
xcomp(compel-16, reproduce-21)
det(member-25, every-23)
amod(member-25, individual-24)
prep_on(reproduce-21, member-25)
det(idea-29, the-27)
amod(idea-29, abstract-28)
prep_of(member-25, idea-29)
prep_of(idea-29, species-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD must)
      (ADVP (RB also))
      (VP (VB submit)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN word)
              (CC and)
              (NN utterance) (`` ``) (NN marriage) ('' ''))
            (VP (VBZ has)
              (NP (JJ many) (NNS meanings))
              (PP (VBG depending)
                (PP (IN on)
                  (NP
                    (NP
                      (NP (DT the) (NN one))
                      (VP (VBG using)
                        (NP (PRP it))))
                    (CC and)
                    (NP
                      (NP (NN context))
                      (PP (IN of)
                        (NP (PRP$ its) (NN use))))))))))))
    (. .)))

nsubj(submit-4, I-1)
aux(submit-4, must-2)
advmod(submit-4, also-3)
root(ROOT-0, submit-4)
complm(has-13, that-5)
det(word-7, the-6)
nsubj(has-13, word-7)
nn(marriage-11, utterance-9)
conj_and(word-7, marriage-11)
nsubj(has-13, marriage-11)
ccomp(submit-4, has-13)
amod(meanings-15, many-14)
dobj(has-13, meanings-15)
prepc_depending_on(has-13, on-17)
det(one-19, the-18)
pobj(has-13, one-19)
partmod(one-19, using-20)
dobj(using-20, it-21)
pobj(has-13, context-23)
conj_and(one-19, context-23)
poss(use-26, its-25)
prep_of(context-23, use-26)

(ROOT
  (S
    (NP (JJ Individual) (JJ human) (NNS beings))
    (VP (`` ``) (VBD marry) ('' '')
      (NP (PRP themselves))
      (PP (TO to)
        (NP (CD one) (DT another)))
      (PP (IN in)
        (NP
          (NP (DT an)
            (ADJP (RB enormously) (JJ diverse))
            (NN number))
          (PP (IN of)
            (NP (NNS ways))))))
    (. .)))

amod(beings-3, Individual-1)
amod(beings-3, human-2)
nsubj(marry-5, beings-3)
root(ROOT-0, marry-5)
dobj(marry-5, themselves-7)
prep_to(marry-5, one-9)
dep(one-9, another-10)
det(number-15, an-12)
advmod(diverse-14, enormously-13)
amod(number-15, diverse-14)
prep_in(marry-5, number-15)
prep_of(number-15, ways-17)

(ROOT
  (S
    (ADVP (RB Mere))
    (`` ``)
    (NP (JJS best) (NNS friends))
    ('' '')
    (VP (VBP are)
      (VP (VBN married)
        (PP (TO to)
          (NP (CD one) (DT another)))))
    (. .)))

advmod(married-7, Mere-1)
amod(friends-4, best-3)
nsubjpass(married-7, friends-4)
auxpass(married-7, are-6)
root(ROOT-0, married-7)
prep_to(married-7, one-9)
dep(one-9, another-10)

(ROOT
  (S
    (NP (NN Employer)
      (CC and)
      (NN employee))
    (VP (VBP are)
      (VP (`` ``) (JJ married) ('' '')
        (PP (IN from)
          (NP
            (NP (DT a) (JJ certain) (NN form))
            (PP (IN of)
              (NP (NN view)))))))
    (. .)))

nsubj(married-6, Employer-1)
conj_and(Employer-1, employee-3)
nsubj(married-6, employee-3)
aux(married-6, are-4)
root(ROOT-0, married-6)
det(form-11, a-9)
amod(form-11, certain-10)
prep_from(married-6, form-11)
prep_of(form-11, view-13)

(ROOT
  (S
    (NP (PRP One))
    (VP (VBZ is)
      (ADJP (`` ``) (JJ married) ('' '')
        (PP (TO to)
          (NP
            (NP (CD one) (POS 's))
            (NNS pets))))
      (SBAR (IN if)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT a) (JJ mutual) (NN love))
              (, ,)
              (NP (JJ mutual) (NN dependence)))))))
    (. .)))

nsubj(married-4, One-1)
cop(married-4, is-2)
root(ROOT-0, married-4)
poss(pets-9, one-7)
prep_to(married-4, pets-9)
mark(is-12, if-10)
expl(is-12, there-11)
advcl(married-4, is-12)
det(love-15, a-13)
amod(love-15, mutual-14)
nsubj(is-12, love-15)
amod(dependence-18, mutual-17)
appos(love-15, dependence-18)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Same-sex))
        (CC and)
        (PRN (, ,)
          (ADVP (RB indeed))
          (ADVP (RB differently))
          (ADJP (JJ sexed)))
        (NP
          (NP (NNS couples))
          (CC and)
          (NP (RB even) (JJ large) (NNS groups))))
      (PP (IN of)
        (NP (NNS individuals))))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBG marrying)
          (NP (PRP themselves))
          (PP (TO to)
            (NP (CD one) (DT another)))
          (SBAR (IN since)
            (S
              (PP (IN before)
                (NP
                  (NP (DT the) (NN dawn))
                  (PP (IN of)
                    (NP (DT this) (NN species)))))
              (NP (PRP we))
              (VP (VBP call)
                (NP (`` ``) (NN humanity) ('' ''))))))))
    (. .)))

nsubj(marrying-16, Same-sex-1)
dep(sexed-6, indeed-4)
dep(sexed-6, differently-5)
dep(Same-sex-1, sexed-6)
conj_and(Same-sex-1, couples-7)
nsubj(marrying-16, couples-7)
advmod(groups-11, even-9)
amod(groups-11, large-10)
conj_and(Same-sex-1, groups-11)
conj_and(couples-7, groups-11)
prep_of(Same-sex-1, individuals-13)
aux(marrying-16, have-14)
aux(marrying-16, been-15)
root(ROOT-0, marrying-16)
dobj(marrying-16, themselves-17)
prep_to(marrying-16, one-19)
dep(one-19, another-20)
mark(call-29, since-21)
det(dawn-24, the-23)
prep_before(call-29, dawn-24)
det(species-27, this-26)
prep_of(dawn-24, species-27)
nsubj(call-29, we-28)
advcl(marrying-16, call-29)
dobj(call-29, humanity-31)

