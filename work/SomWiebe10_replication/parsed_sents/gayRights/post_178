(ROOT
  (S
    (S
      (VP (VB Thank)
        (NP (PRP you))
        (PP (IN for)
          (NP
            (NP (PRP$ your) (NN note))
            (CC but)
            (NP (DT the) (NN word) ('' '') (NNP Disadvantage))
            ('' '')))))
    (VP (VBZ is)
      (SBAR
        (WHADJP (RB exactly) (WP what))
        (S
          (NP (PRP you))
          (VP (VBD were)))))
    (. .)))

csubj(is-12, Thank-1)
dobj(Thank-1, you-2)
poss(note-5, your-4)
prep_for(Thank-1, note-5)
det(Disadvantage-10, the-7)
nn(Disadvantage-10, word-8)
prep_for(Thank-1, Disadvantage-10)
conj_but(note-5, Disadvantage-10)
root(ROOT-0, is-12)
dep(were-16, exactly-13)
dep(exactly-13, what-14)
nsubj(were-16, you-15)
ccomp(is-12, were-16)

(ROOT
  (S
    (PP (RB Instead) (IN of)
      (S
        (VP (VBG having)
          (NP (NN someone))
          (PP (IN at)
            (NP (NN home))))))
    (NP (PRP you))
    (VP (VBD had)
      (S
        (VP (TO to)
          (VP (VB go)
            (PP (TO to)
              (NP (NNS alternatives)))))))
    (. .)))

advcl(had-8, of-2)
prepc_instead_of(had-8, having-3)
dobj(having-3, someone-4)
prep_at(having-3, home-6)
nsubj(had-8, you-7)
xsubj(go-10, you-7)
root(ROOT-0, had-8)
aux(go-10, to-9)
xcomp(had-8, go-10)
prep_to(go-10, alternatives-12)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (VP (VBN called) (`` ``)
        (S
          (VP (VBG being)
            (PP (IN at)
              (NP (DT a) (NN disadvantage)))))))
    (. .)))

nsubjpass(called-3, That-1)
auxpass(called-3, is-2)
root(ROOT-0, called-3)
xcomp(called-3, being-5)
det(disadvantage-8, a-7)
prep_at(being-5, disadvantage-8)

(ROOT
  (S ('' '')
    (PP (VBN Based)
      (PP (IN on)
        (NP
          (NP
            (NP (DT that) (JJ same) (NN experience))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBD had)))))
          (, ,)
          (NP
            (NP (DT the) (NNS children))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP live)
                  (PP (IN with)
                    (NP (JJ same) (NN sex) (NNS parents))))))))))
    (VP (MD will)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB go)
              (NP (NN o) (NNS alternatives))
              (ADVP (RB hence)))))
        (S
          (VP (VBG being)
            (ADJP (JJ disadvantaged))))))
    (. .)))

prepc_based_on(have-19, on-3)
det(experience-6, that-4)
amod(experience-6, same-5)
dobj(had-8, experience-6)
pobj(have-19, experience-6)
nsubj(had-8, you-7)
rcmod(experience-6, had-8)
det(children-11, the-10)
appos(experience-6, children-11)
nsubj(live-13, children-11)
rcmod(children-11, live-13)
amod(parents-17, same-15)
nn(parents-17, sex-16)
prep_with(live-13, parents-17)
aux(have-19, will-18)
root(ROOT-0, have-19)
aux(go-21, to-20)
xcomp(have-19, go-21)
nn(alternatives-23, o-22)
dobj(go-21, alternatives-23)
advmod(go-21, hence-24)
cop(disadvantaged-26, being-25)
xcomp(have-19, disadvantaged-26)

(ROOT
  (S
    (S
      (INTJ (VB Please))
      (VP (VB notice)
        (SBAR (IN that)
          (S
            (NP (NN disadvantage))
            (VP (VBZ does) (RB n't)
              (VP (VB mean) (`` ``)
                (NP (RB not) (RB as) (JJ good))))))))
    (, ,) ('' '')
    (NP (PRP it))
    (VP
      (ADVP (RB simply))
      (VBZ means)
      (S
        (VP (RB not) (VBG having)
          (NP (DT the) (JJ same) (NNS opportunities)))))
    (. .)))

dep(notice-2, Please-1)
ccomp(means-16, notice-2)
complm(mean-7, that-3)
nsubj(mean-7, disadvantage-4)
aux(mean-7, does-5)
neg(mean-7, n't-6)
ccomp(notice-2, mean-7)
neg(good-11, not-9)
advmod(good-11, as-10)
dobj(mean-7, good-11)
nsubj(means-16, it-14)
advmod(means-16, simply-15)
root(ROOT-0, means-16)
neg(having-18, not-17)
ccomp(means-16, having-18)
xcomp(means-16, having-18)
det(opportunities-21, the-19)
amod(opportunities-21, same-20)
dobj(having-18, opportunities-21)

(ROOT
  (S
    (VP (VB Thank)
      (NP (PRP you)))))

root(ROOT-0, Thank-1)
dobj(Thank-1, you-2)

