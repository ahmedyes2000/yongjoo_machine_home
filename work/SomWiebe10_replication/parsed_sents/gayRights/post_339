(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (NP
      (NP (NN preference))
      (PP (IN for)
        (NP (JJ homosexual) (NNS relationships))))
    (VP
      (VP (VBZ has)
        (NP (DT a) (JJ genetic) (NN origin))
        (SBAR (RB just) (IN as)
          (S
            (NP
              (NP (DT any) (JJ other) (NN sort))
              (PP (IN of)
                (NP
                  (NP
                    (NP (JJ sexual) (NN behavior))
                    (, ,)
                    (ADVP (RB however)))
                  (, ,)
                  (NP
                    (NP (JJ genetic) (NN predisposition))
                    (PP (IN for)
                      (NP (JJ certain) (NNS behaviors)))))))
            (VP (VBZ does) (RB not)
              (VP (VB imply)
                (NP (CD one) (NN will)))))))
      (CC or)
      (VP (MD ought))
      (S
        (VP (TO to)
          (VP (VB act)
            (PP (IN on)
              (NP (DT that) (NN predisposition)))))))
    (. .)))

prep_of(has-8, course-2)
nsubj(has-8, preference-4)
xsubj(act-36, preference-4)
amod(relationships-7, homosexual-6)
prep_for(preference-4, relationships-7)
root(ROOT-0, has-8)
det(origin-11, a-9)
amod(origin-11, genetic-10)
dobj(has-8, origin-11)
advmod(imply-30, just-12)
dep(imply-30, as-13)
det(sort-16, any-14)
amod(sort-16, other-15)
nsubj(imply-30, sort-16)
amod(behavior-19, sexual-18)
prep_of(sort-16, behavior-19)
advmod(behavior-19, however-21)
amod(predisposition-24, genetic-23)
appos(behavior-19, predisposition-24)
amod(behaviors-27, certain-26)
prep_for(predisposition-24, behaviors-27)
aux(imply-30, does-28)
neg(imply-30, not-29)
dep(has-8, imply-30)
num(will-32, one-31)
dobj(imply-30, will-32)
conj_or(has-8, ought-34)
aux(act-36, to-35)
xcomp(has-8, act-36)
det(predisposition-39, that-38)
prep_on(act-36, predisposition-39)

(ROOT
  (S
    (S
      (NP (NNP Genetics))
      (ADVP (RB simply))
      (VP (VBZ sets)
        (NP
          (NP (DT the) (NNS parameters))
          (PP (IN of)
            (NP (DT a) (NN life))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ does) (RB not)
      (VP (VB dictate)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (NNS choices) (NN one))
            (VP (MD will)
              (VP (VB make)
                (PP (IN in)
                  (NP (NN behavior)))
                (PP (IN within)
                  (NP (DT those) (NNS parameters)))))))))
    (. .)))

nsubj(sets-3, Genetics-1)
advmod(sets-3, simply-2)
ccomp(dictate-13, sets-3)
det(parameters-5, the-4)
dobj(sets-3, parameters-5)
det(life-8, a-7)
prep_of(parameters-5, life-8)
nsubj(dictate-13, it-10)
aux(dictate-13, does-11)
neg(dictate-13, not-12)
root(ROOT-0, dictate-13)
dobj(make-18, which-14)
nn(one-16, choices-15)
nsubj(make-18, one-16)
aux(make-18, will-17)
ccomp(dictate-13, make-18)
prep_in(make-18, behavior-20)
det(parameters-23, those-22)
prep_within(make-18, parameters-23)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ is)
      (ADJP (RB necessarily) (VBN constrained)
        (PP (IN by)
          (NP (NN preference)))
        (SBAR (IN unless)
          (S
            (NP (PRP they))
            (VP (VBP choose)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (SBAR
                      (WHNP (WDT which))
                      (S (, ,)
                        (SBAR (IN if)
                          (S
                            (NP (PRP you))
                            (VP (VBP think)
                              (PP (IN about)
                                (NP (PRP it))))))
                        (, ,)
                        (VP (VBZ is) (RB n't)
                          (ADJP (JJ constraint))
                          (ADVP (IN at) (DT all)))))))))))))
    (. .)))

det(one-2, No-1)
nsubjpass(constrained-5, one-2)
auxpass(constrained-5, is-3)
advmod(constrained-5, necessarily-4)
root(ROOT-0, constrained-5)
agent(constrained-5, preference-7)
mark(choose-10, unless-8)
nsubj(choose-10, they-9)
xsubj(be-12, they-9)
ccomp(constrained-5, choose-10)
aux(be-12, to-11)
xcomp(choose-10, be-12)
dep(constraint-23, which-13)
mark(think-17, if-15)
nsubj(think-17, you-16)
dep(constraint-23, think-17)
prep_about(think-17, it-19)
cop(constraint-23, is-21)
neg(constraint-23, n't-22)
ccomp(be-12, constraint-23)
advmod(constraint-23, at-24)
pobj(at-24, all-25)

(ROOT
  (S
    (S
      (NP
        (NP (JJ Genetically-rooted) (NN preference))
        (PP (IN for)
          (NP
            (NP
              (NP (NN sex))
              (PP (IN with)
                (NP (DT the) (JJ same) (NN gender))))
            (CC or)
            (NP
              (NP (DT the) (JJ opposite) (NN gender))
              (CC or)
              (NP (NN something) (RB else))))))
      (ADVP (RB entirely))
      (VP (VBZ is) (RB n't)
        (NP
          (NP (DT a) (NN collar))
          (PP (IN around)
            (NP
              (NP (NN anyone) (POS 's))
              (NN neck))))
        (, ,)
        (ADVP (RB however))))
    (, ,)
    (NP (DT the) (JJ genetic) (NN need)
      (S
        (VP (TO to)
          (VP
            (VP (VB consume)
              (NP (NN fuel)
                (CC and)
                (NN fluid)))
            (CC and)
            (VP (VB air)
              (S
                (VP (TO to)
                  (VP (VB continue)
                    (NP (NN living))))))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN leg) (NN iron))
        (VP (VBN locked)
          (PP (TO to)
            (NP (PRP us) (DT all))))))
    (. .)))

amod(preference-2, Genetically-rooted-1)
nsubj(collar-20, preference-2)
prep_for(preference-2, sex-4)
det(gender-8, the-6)
amod(gender-8, same-7)
prep_with(sex-4, gender-8)
det(gender-12, the-10)
amod(gender-12, opposite-11)
prep_for(preference-2, gender-12)
conj_or(sex-4, gender-12)
conj_or(sex-4, something-14)
conj_or(gender-12, something-14)
advmod(something-14, else-15)
advmod(collar-20, entirely-16)
cop(collar-20, is-17)
neg(collar-20, n't-18)
det(collar-20, a-19)
ccomp(iron-44, collar-20)
poss(neck-24, anyone-22)
prep_around(collar-20, neck-24)
advmod(collar-20, however-26)
det(need-30, the-28)
amod(need-30, genetic-29)
nsubj(iron-44, need-30)
aux(consume-32, to-31)
infmod(need-30, consume-32)
dobj(consume-32, fuel-33)
dobj(consume-32, fluid-35)
conj_and(fuel-33, fluid-35)
infmod(need-30, air-37)
conj_and(consume-32, air-37)
aux(continue-39, to-38)
xcomp(air-37, continue-39)
dobj(continue-39, living-40)
cop(iron-44, is-41)
det(iron-44, a-42)
nn(iron-44, leg-43)
root(ROOT-0, iron-44)
partmod(iron-44, locked-45)
prep_to(locked-45, us-47)
det(us-47, all-48)

(ROOT
  (S
    (NP
      (NP (NN None))
      (PP (IN of)
        (NP (DT this))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB say) (, ,)
            (SBAR (IN as)
              (S
                (NP
                  (NP (JJ many) (NNS critics))
                  (PP (IN of)
                    (NP
                      (NP (NN homosexuality))
                      (, ,)
                      (NP (NN asexuality))
                      (, ,)
                      (NP (NN bisexuality))
                      (CC or)
                      (NP
                        (NP (DT any) (JJ other) (NN type))
                        (PP (IN of)
                          (NP
                            (NP (JJ sexual) (NN behavior) (NN OTHER))
                            (PP (IN than)
                              (NP (NN heterosexuality)))))))))
                (VP (VBP are)
                  (VP (VBP want)
                    (S
                      (VP (TO to)
                        (VP (VB do))))))))
            (, ,)
            (SBAR (IN that) (IN because)
              (S
                (NP (CD one) (NN CAN))
                (VP (VBP choose)
                  (NP (DT a) (JJ heterosexual) (NN lifestyle))
                  (SBAR (IN that)
                    (S
                      (NP (CD one) (NN MUST))
                      (VP (VBP choose)
                        (NP (PRP it))))))))))))
    (. .)))

nsubj(is-4, None-1)
xsubj(say-6, None-1)
prep_of(None-1, this-3)
root(ROOT-0, is-4)
aux(say-6, to-5)
xcomp(is-4, say-6)
mark(want-28, as-8)
amod(critics-10, many-9)
nsubj(want-28, critics-10)
xsubj(do-30, critics-10)
prep_of(critics-10, homosexuality-12)
prep_of(critics-10, asexuality-14)
conj_or(homosexuality-12, asexuality-14)
prep_of(critics-10, bisexuality-16)
conj_or(homosexuality-12, bisexuality-16)
det(type-20, any-18)
amod(type-20, other-19)
prep_of(critics-10, type-20)
conj_or(homosexuality-12, type-20)
amod(OTHER-24, sexual-22)
nn(OTHER-24, behavior-23)
prep_of(type-20, OTHER-24)
prep_than(OTHER-24, heterosexuality-26)
aux(want-28, are-27)
advcl(say-6, want-28)
aux(do-30, to-29)
xcomp(want-28, do-30)
complm(choose-36, that-32)
dep(choose-36, because-33)
num(CAN-35, one-34)
nsubj(choose-36, CAN-35)
ccomp(say-6, choose-36)
det(lifestyle-39, a-37)
amod(lifestyle-39, heterosexual-38)
dobj(choose-36, lifestyle-39)
complm(choose-43, that-40)
num(MUST-42, one-41)
nsubj(choose-43, MUST-42)
ccomp(choose-36, choose-43)
dobj(choose-43, it-44)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP
          (NP (DT a) (NN predisposition))
          (PP (IN toward)
            (NP (NN homosexuality))))
        (ADVP (RB still))
        (VP (VBZ allows)
          (NP (NN freedom))
          (S
            (VP (TO to)
              (VP (VB choose)
                (NP (DT a) (JJ different) (NN lifestyle))))))))
    (VP (VBZ is) (RB n't)
      (NP
        (NP (NN criticism))
        (PP (IN against)
          (NP (NN homosexuality))))
      (ADVP (DT any) (RBR more))
      (SBAR (IN than)
        (S
          (NP
            (NP (NN freedom))
            (PP (IN of)
              (NP
                (NP (NN choice))
                (PP (IN in)
                  (NP
                    (NP (CD one) (POS 's))
                    (NN heterosexuality))))))
          (VP (VBZ is)
            (NP
              (NP (NN criticism))
              (PP (IN of)
                (NP (DT that) (NN lifestyle))))))))
    (. .)))

complm(allows-7, That-1)
det(predisposition-3, a-2)
nsubj(allows-7, predisposition-3)
prep_toward(predisposition-3, homosexuality-5)
advmod(allows-7, still-6)
csubj(criticism-16, allows-7)
dobj(allows-7, freedom-8)
aux(choose-10, to-9)
xcomp(allows-7, choose-10)
det(lifestyle-13, a-11)
amod(lifestyle-13, different-12)
dobj(choose-10, lifestyle-13)
cop(criticism-16, is-14)
neg(criticism-16, n't-15)
root(ROOT-0, criticism-16)
prep_against(criticism-16, homosexuality-18)
dep(more-20, any-19)
advmod(criticism-16, more-20)
mark(criticism-30, than-21)
nsubj(criticism-30, freedom-22)
prep_of(freedom-22, choice-24)
poss(heterosexuality-28, one-26)
prep_in(choice-24, heterosexuality-28)
cop(criticism-30, is-29)
advcl(criticism-16, criticism-30)
det(lifestyle-33, that-32)
prep_of(criticism-30, lifestyle-33)

(ROOT
  (S
    (NP (NNS Heterosexuals))
    (VP (MD can)
      (VP (VB choose)
        (NP
          (ADJP (JJ homosexual)
            (CC or)
            (JJ bisexual)
            (CC or)
            (JJ asexual))
          (NN behavior))
        (SBAR (RB even) (IN if)
          (S
            (NP (PRP they))
            (ADVP (RB usually))
            (VP
              (VP (VBP do) (RB n't))
              (CC and)
              (VP (VBP believe)
                (SBAR
                  (S
                    (NP (PRP they))
                    (ADVP (RB never))
                    (VP (MD will))))))))))
    (. .)))

nsubj(choose-3, Heterosexuals-1)
aux(choose-3, can-2)
root(ROOT-0, choose-3)
dep(bisexual-6, homosexual-4)
amod(behavior-9, bisexual-6)
conj_or(bisexual-6, asexual-8)
amod(behavior-9, asexual-8)
dobj(choose-3, behavior-9)
advmod(do-14, even-10)
dep(do-14, if-11)
nsubj(do-14, they-12)
nsubj(believe-17, they-12)
advmod(do-14, usually-13)
dep(choose-3, do-14)
neg(do-14, n't-15)
dep(choose-3, believe-17)
conj_and(do-14, believe-17)
nsubj(will-20, they-18)
neg(will-20, never-19)
ccomp(believe-17, will-20)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD can) (RB not)
      (VP (VB claim)
        (NP (DT the) (NN ability)
          (S
            (VP (TO to)
              (VP (VB predict)
                (NP
                  (NP (DT all) (JJ future) (NNS choices))
                  (VP (VBN given)
                    (NP (DT the) (NN truth))
                    (SBAR (IN that)
                      (S
                        (NP (DT no) (NN one))
                        (VP (MD can)
                          (VP (VB predict)
                            (NP (PDT all) (DT the) (JJ future) (NNS contexts)))))))
                  (SBAR
                    (WHPP (IN in)
                      (WHNP (WDT which)))
                    (S
                      (NP (PRP one))
                      (VP (MD will)
                        (VP (VB find)
                          (NP (PRP oneself)))))))))))))
    (. .)))

nsubj(claim-4, One-1)
aux(claim-4, can-2)
neg(claim-4, not-3)
root(ROOT-0, claim-4)
det(ability-6, the-5)
dobj(claim-4, ability-6)
aux(predict-8, to-7)
infmod(ability-6, predict-8)
det(choices-11, all-9)
amod(choices-11, future-10)
dobj(predict-8, choices-11)
partmod(choices-11, given-12)
det(truth-14, the-13)
dobj(given-12, truth-14)
complm(predict-19, that-15)
det(one-17, no-16)
nsubj(predict-19, one-17)
aux(predict-19, can-18)
ccomp(given-12, predict-19)
predet(contexts-23, all-20)
det(contexts-23, the-21)
amod(contexts-23, future-22)
dobj(predict-19, contexts-23)
rel(find-28, which-25)
nsubj(find-28, one-26)
aux(find-28, will-27)
rcmod(choices-11, find-28)
dobj(find-28, oneself-29)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP (DT that) (NN one))
    (VP (MD can)
      (VP (VB choose)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP
              (NP (NNS preferences))
              (SBAR
                (S
                  (NP (PRP one))
                  (VP (VBZ expresses)
                    (PP (IN through)
                      (NP (NN behavior)))))))
            (VP (VBZ is) (RB n't)
              (NP
                (NP (JJ automatic) (NN criticism))
                (PP (IN of)
                  (NP
                    (NP (DT any) (JJ particular) (NN choice))
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN set))
                        (PP (IN of)
                          (NP (NNS alternatives)))))))))))))
    (. .)))

dep(choose-6, No-1)
det(one-4, that-3)
nsubj(choose-6, one-4)
aux(choose-6, can-5)
root(ROOT-0, choose-6)
dobj(criticism-16, which-7)
dobj(expresses-10, preferences-8)
nsubj(criticism-16, preferences-8)
nsubj(expresses-10, one-9)
rcmod(preferences-8, expresses-10)
prep_through(expresses-10, behavior-12)
cop(criticism-16, is-13)
neg(criticism-16, n't-14)
amod(criticism-16, automatic-15)
ccomp(choose-6, criticism-16)
det(choice-20, any-18)
amod(choice-20, particular-19)
prep_of(criticism-16, choice-20)
det(set-23, the-22)
prep_in(choice-20, set-23)
prep_of(set-23, alternatives-25)

(ROOT
  (S
    (NP
      (NP (JJ Many))
      (PP (IN among)
        (NP
          (NP (NNS critics))
          (PP (IN of)
            (NP (NN homosexuality))))))
    (VP (VBP claim)
      (SBAR
        (S
          (NP (DT the) (NN lifestyle)
            (S
              (VP (TO to)
                (VP (VB be) (`` ``)
                  (ADJP (JJ unnatural))
                  ('' '')
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ is)
                        (ADJP (JJ nonsensical))
                        (SBAR (IN because)
                          (S (, ,)
                            (PP (IN by)
                              (NP (NN definition)))
                            (, ,)
                            (NP (NN anything) (CD one))
                            (VP (MD can)
                              (VP (VB do))))))))))))
          (VP (VBZ is)
            (ADJP (RB necessarily) (JJ natural))))))
    (. .)))

nsubj(claim-6, Many-1)
prep_among(Many-1, critics-3)
prep_of(critics-3, homosexuality-5)
root(ROOT-0, claim-6)
det(lifestyle-8, the-7)
nsubj(natural-28, lifestyle-8)
aux(unnatural-12, to-9)
cop(unnatural-12, be-10)
infmod(lifestyle-8, unnatural-12)
nsubj(nonsensical-16, which-14)
cop(nonsensical-16, is-15)
ccomp(unnatural-12, nonsensical-16)
mark(do-25, because-17)
prep_by(do-25, definition-20)
nsubj(do-25, anything-22)
num(anything-22, one-23)
aux(do-25, can-24)
advcl(nonsensical-16, do-25)
cop(natural-28, is-26)
advmod(natural-28, necessarily-27)
ccomp(claim-6, natural-28)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD can) (RB not)
      (VP (VB do)
        (NP
          (NP (NN something))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (NP (`` ``)
                  (NP (RB outside))
                  (PP (IN of)
                    (NP (NN nature)))
                  ('' ''))
                (SBAR (IN because)
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP (DT no) (`` ``) (NN outside) ('' '')))))))))))
    (. .)))

nsubj(do-4, One-1)
aux(do-4, can-2)
neg(do-4, not-3)
root(ROOT-0, do-4)
dobj(do-4, something-5)
nsubj(outside-9, something-5)
cop(outside-9, is-7)
rcmod(something-5, outside-9)
prep_of(outside-9, nature-11)
mark(is-15, because-13)
expl(is-15, there-14)
advcl(outside-9, is-15)
det(outside-18, no-16)
nsubj(is-15, outside-18)

(ROOT
  (S
    (NP (DT All))
    (VP
      (VP
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP have)
              (VP (VBN done)))))
        (, ,)
        (VP (VBP do))
        (CC or)
        (VP (MD will)
          (VP (VB do)
            (SBAR
              (S
                (VP (VBZ is)
                  (ADJP (JJ natural))))))))
      (CC and)
      (VP (MD can) (RB not)
        (VP (VB be)
          (ADVP (RB otherwise)))))
    (. .)))

nsubj(do-7, All-1)
nsubj(do-10, All-1)
nsubj(be-16, All-1)
dep(done-5, that-2)
nsubj(done-5, we-3)
aux(done-5, have-4)
ccomp(do-7, done-5)
root(ROOT-0, do-7)
aux(do-10, will-9)
conj_or(do-7, do-10)
cop(natural-12, is-11)
ccomp(do-10, natural-12)
aux(be-16, can-14)
neg(be-16, not-15)
conj_and(do-7, be-16)
advmod(be-16, otherwise-17)

(ROOT
  (S
    (NP (NNP Genetics))
    (VP (VBZ establishes)
      (NP (DT the) (JJ available) (NNS choices)))
    (. .)))

nsubj(establishes-2, Genetics-1)
root(ROOT-0, establishes-2)
det(choices-5, the-3)
amod(choices-5, available-4)
dobj(establishes-2, choices-5)

(ROOT
  (S
    (ADVP (LS Second))
    (, ,)
    (NP (DT these) (NNS persons))
    (ADVP (RB also))
    (VP
      (VP (VBP point)
        (PRT (RP out))
        (SBAR (IN that)
          (S
            (NP (NN homosexuality))
            (VP (VBZ is)
              (ADJP (JJ non-reproductive))))))
      (CC and)
      (VP
        (ADVP (RB therefore))
        (NP (DT a) (NN threat))
        (PP (TO to)
          (NP
            (NP (DT the) (NN survival))
            (PP (IN of)
              (NP (DT the) (NN species)))))))
    (. .)))

advmod(point-6, Second-1)
det(persons-4, these-3)
nsubj(point-6, persons-4)
advmod(point-6, also-5)
root(ROOT-0, point-6)
prt(point-6, out-7)
complm(non-reproductive-11, that-8)
nsubj(non-reproductive-11, homosexuality-9)
cop(non-reproductive-11, is-10)
ccomp(point-6, non-reproductive-11)
advmod(threat-15, therefore-13)
det(threat-15, a-14)
conj_and(point-6, threat-15)
det(survival-18, the-17)
prep_to(threat-15, survival-18)
det(species-21, the-20)
prep_of(survival-18, species-21)

(ROOT
  (S
    (NP (DT This))
    (VP (MD could)
      (ADVP (RB only))
      (VP (VB be)
        (ADJP (JJ true))
        (SBAR (IN if)
          (S (`` ``)
            (NP
              (NP (NN survival))
              (PP (IN of)
                (NP (DT the) (NN species))))
            ('' '')
            (VP (VBD were)
              (NP
                (NP (DT a) (NN duty))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN head))
                    (PP (IN of)
                      (NP (DT every) (NN individual)))))))))))
    (. .)))

nsubj(true-5, This-1)
aux(true-5, could-2)
advmod(true-5, only-3)
cop(true-5, be-4)
root(ROOT-0, true-5)
mark(duty-15, if-6)
nsubj(duty-15, survival-8)
det(species-11, the-10)
prep_of(survival-8, species-11)
cop(duty-15, were-13)
det(duty-15, a-14)
advcl(true-5, duty-15)
det(head-18, the-17)
prep_on(duty-15, head-18)
det(individual-21, every-20)
prep_of(head-18, individual-21)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB clearly))
    (VP (VBZ is) (RB not))
    (. .)))

nsubj(is-3, It-1)
advmod(is-3, clearly-2)
root(ROOT-0, is-3)
neg(is-3, not-4)

(ROOT
  (S ('' '')
    (NP (NNP Species) (NNP ''))
    (VP (VBZ is)
      (NP (DT an) (JJ abstract) (NN concept)))
    (. .)))

nsubj(concept-7, Species-2)
cop(concept-7, is-4)
det(concept-7, an-5)
amod(concept-7, abstract-6)
root(ROOT-0, concept-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (NP
        (NP (NN something))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ exists)
              (PP (IN in)
                (CC and)
                (IN of)
                (NP (PRP itself))))))))
    (. .)))

nsubj(something-4, It-1)
cop(something-4, is-2)
neg(something-4, not-3)
root(ROOT-0, something-4)
nsubj(exists-6, something-4)
nsubj(exists-6', something-4)
rcmod(something-4, exists-6)
rcmod(something-4, exists-6')
conj_and(exists-6, exists-6')
prep_in(exists-6, itself-10)
prep_of(exists-6', itself-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB merely))
      (NP
        (NP (DT a) (NN way))
        (PP (IN of)
          (S
            (VP (VBG speaking)
              (PP (IN of)
                (NP
                  (NP (DT all) (JJ human) (NNS individuals))
                  (PP (IN as)
                    (NP (DT a) (NN set))))))))))
    (. .)))

nsubj(way-5, It-1)
cop(way-5, is-2)
advmod(way-5, merely-3)
det(way-5, a-4)
root(ROOT-0, way-5)
prepc_of(way-5, speaking-7)
det(individuals-11, all-9)
amod(individuals-11, human-10)
prep_of(speaking-7, individuals-11)
det(set-14, a-13)
prep_as(individuals-11, set-14)

(ROOT
  (S
    (S
      (SBAR (IN That)
        (S
          (NP (EX there))
          (VP (VBZ IS)
            (NP
              (NP (DT a) (JJ human) (NN species))
              (PP (IN in)
                (NP (DT no) (NN way)))))))
      (VP (VBZ implies)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBP MUST)
              (VP (VB be)
                (NP (DT a) (JJ human) (NN species))))))))
    (CC and)
    (ADVP (RB therefore))
    (S
      (NP (DT each) (JJ individual) (NN human) (VBG being))
      (VP (VBZ has)
        (NP (DT the) (NN duty)
          (S
            (VP (TO to)
              (VP (VB reproduce)))))))
    (. .)))

complm(IS-3, That-1)
expl(IS-3, there-2)
csubj(implies-10, IS-3)
det(species-6, a-4)
amod(species-6, human-5)
nsubj(IS-3, species-6)
det(way-9, no-8)
prep_in(species-6, way-9)
root(ROOT-0, implies-10)
expl(species-16, there-11)
aux(species-16, MUST-12)
cop(species-16, be-13)
det(species-16, a-14)
amod(species-16, human-15)
ccomp(implies-10, species-16)
advmod(implies-10, therefore-18)
conj_and(implies-10, therefore-18)
det(human-21, each-19)
amod(human-21, individual-20)
nsubj(has-23, human-21)
amod(human-21, being-22)
ccomp(implies-10, has-23)
conj_and(implies-10, has-23)
det(duty-25, the-24)
dobj(has-23, duty-25)
aux(reproduce-27, to-26)
infmod(duty-25, reproduce-27)

(ROOT
  (S
    (NP
      (NP (NNP Reproduction))
      (CC and)
      (NP
        (NP (DT the) (NN reason))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP one))
            (VP (VBZ chooses)
              (S
                (VP (TO to)
                  (VP (VB reproduce)))))))))
    (VP (VBP are)
      (ADVP (RB always))
      (ADJP (JJ individual)
        (CC and)
        (JJ relative))
      (PP (TO to)
        (NP
          (NP (CD one) (POS 's))
          (JJ own) (NN life))))
    (. .)))

nsubj(individual-12, Reproduction-1)
nsubj(relative-14, Reproduction-1)
det(reason-4, the-3)
conj_and(Reproduction-1, reason-4)
nsubj(individual-12, reason-4)
advmod(chooses-7, why-5)
nsubj(chooses-7, one-6)
xsubj(reproduce-9, one-6)
rcmod(reason-4, chooses-7)
aux(reproduce-9, to-8)
xcomp(chooses-7, reproduce-9)
cop(individual-12, are-10)
advmod(individual-12, always-11)
root(ROOT-0, individual-12)
conj_and(individual-12, relative-14)
poss(life-19, one-16)
amod(life-19, own-18)
prep_to(individual-12, life-19)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (JJ inescapable) (NN necessity)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (NNS children)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(necessity-5, no-3)
amod(necessity-5, inescapable-4)
nsubj(is-2, necessity-5)
aux(make-7, to-6)
infmod(necessity-5, make-7)
dobj(make-7, children-8)

(ROOT
  (S
    (S
      (ADVP (RB Certainly))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (DT the) (JJ human) (NN species))
          (VP (VBZ comes)
            (PP (TO to)
              (NP (DT an) (NN end))))))
      (NP (PRP it))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT a) (NN tragedy))
            (PP (IN for)
              (NP (JJ human) (NNS beings)))))))
    (CC but)
    (S
      (NP (PRP we))
      (VP (MD can)
        (VP (VB be)
          (ADJP (RB quite) (JJ satisfied)
            (SBAR
              (S
                (NP
                  (NP (NN nature)
                    (CC and)
                    (NN life))
                  (PP (IN on)
                    (NP (NNP Earth))))
                (VP (MD will)
                  (VP (VB continue)
                    (PP (IN with)
                      (CC or)
                      (IN without)
                      (NP (JJ human) (NNS beings)))))))))))
    (. .)))

advmod(tragedy-15, Certainly-1)
mark(comes-7, if-3)
det(species-6, the-4)
amod(species-6, human-5)
nsubj(comes-7, species-6)
dep(tragedy-15, comes-7)
det(end-10, an-9)
prep_to(comes-7, end-10)
nsubj(tragedy-15, it-11)
aux(tragedy-15, would-12)
cop(tragedy-15, be-13)
det(tragedy-15, a-14)
root(ROOT-0, tragedy-15)
amod(beings-18, human-17)
prep_for(tragedy-15, beings-18)
nsubj(satisfied-24, we-20)
aux(satisfied-24, can-21)
cop(satisfied-24, be-22)
advmod(satisfied-24, quite-23)
conj_but(tragedy-15, satisfied-24)
nsubj(continue-31, nature-25)
nsubj(continue-31', nature-25)
conj_and(nature-25, life-27)
nsubj(continue-31, life-27)
prep_on(nature-25, Earth-29)
aux(continue-31, will-30)
dep(satisfied-24, continue-31)
dep(satisfied-24, continue-31')
conj_or(continue-31, continue-31')
amod(beings-36, human-35)
prep_with(continue-31, beings-36)
prep_without(continue-31', beings-36)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB up)
        (PP (TO to)
          (NP (PRP you))))
      (S
        (VP (TO to)
          (VP
            (ADVP (RB actually))
            (VB make)
            (NP (DT the) (NN choice))))))
    (. .)))

nsubj(is-2, It-1)
xsubj(make-8, It-1)
root(ROOT-0, is-2)
advmod(is-2, up-3)
prep_to(up-3, you-5)
aux(make-8, to-6)
advmod(make-8, actually-7)
xcomp(is-2, make-8)
det(choice-10, the-9)
dobj(make-8, choice-10)

(ROOT
  (S
    (NP (NNP Human) (NNS beings))
    (VP
      (VP (VBP are)
        (NP
          (NP (RB certainly) (DT an) (NN element))
          (PP (IN of)
            (NP (NN nature)))))
      (CC but)
      (VP (MD can) (RB not)
        (VP (VB claim)
          (S
            (VP (TO to)
              (VP (VB be)
                (NP
                  (NP (DT an) (JJ essential) (NN element))
                  (PP (IN of)
                    (NP (NN nature))))))))))
    (. .)))

nn(beings-2, Human-1)
nsubj(element-6, beings-2)
nsubj(claim-12, beings-2)
xsubj(element-17, beings-2)
cop(element-6, are-3)
advmod(element-6, certainly-4)
det(element-6, an-5)
root(ROOT-0, element-6)
prep_of(element-6, nature-8)
aux(claim-12, can-10)
neg(claim-12, not-11)
conj_but(element-6, claim-12)
aux(element-17, to-13)
cop(element-17, be-14)
det(element-17, an-15)
amod(element-17, essential-16)
xcomp(claim-12, element-17)
prep_of(element-17, nature-19)

(ROOT
  (S
    (S
      (NP (JJ Sexual) (NN behavior))
      (VP (VBP CAN)
        (VP (VB be)
          (ADJP (JJ reproductive)))))
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN implication))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBP MUST)
                (VP (VB be)
                  (ADJP (JJ reproductive)))))))))
    (CC and)
    (S
      (ADVP (RB certainly)
        (NP (DT no) (NN implication)))
      (NP (PRP it))
      (VP (MD must)
        (ADVP (RB ALWAYS))
        (VP (VB be)
          (ADJP (JJ reproductive)))))
    (. .)))

amod(behavior-2, Sexual-1)
nsubj(reproductive-5, behavior-2)
aux(reproductive-5, CAN-3)
cop(reproductive-5, be-4)
root(ROOT-0, reproductive-5)
expl(is-8, there-7)
conj_but(reproductive-5, is-8)
det(implication-10, no-9)
nsubj(is-8, implication-10)
dobj(reproductive-14, implication-10)
nsubj(reproductive-14, it-11)
aux(reproductive-14, MUST-12)
cop(reproductive-14, be-13)
rcmod(implication-10, reproductive-14)
advmod(reproductive-23, certainly-16)
det(implication-18, no-17)
pobj(certainly-16, implication-18)
nsubj(reproductive-23, it-19)
aux(reproductive-23, must-20)
advmod(reproductive-23, ALWAYS-21)
cop(reproductive-23, be-22)
conj_and(reproductive-5, reproductive-23)

(ROOT
  (S
    (ADVP (RB Even))
    (NP (JJS most) (NNS heterosexuals))
    (VP (VBP enjoy)
      (NP (JJ non-reproductive) (NN sex)))
    (. .)))

advmod(enjoy-4, Even-1)
amod(heterosexuals-3, most-2)
nsubj(enjoy-4, heterosexuals-3)
root(ROOT-0, enjoy-4)
amod(sex-6, non-reproductive-5)
dobj(enjoy-4, sex-6)

(ROOT
  (S
    (ADVP (DT All)
      (PP (IN in)
        (NP (DT all))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT all) (JJ human) (JJ sexual) (NN behavior))
        (VP (VBD were)
          (ADJP (RB necessarily) (JJ reproductive)))))
    (, ,)
    (NP (DT the) (NN Earth))
    (VP (MD would)
      (ADVP (RB swiftly))
      (VP (VB become)
        (S
          (VP (NN overrun)
            (PP (IN by)
              (NP
                (NP (JJ human) (NNS beings))
                (SBAR
                  (S
                    (NP (NNP OR) (JJ human) (NNS beings))
                    (VP (MD would)
                      (ADVP (RB severely))
                      (VP (VB limit)
                        (NP (PRP$ their) (JJ sexual) (NN behavior))
                        (S
                          (VP (TO to)
                            (VP (VB limit)
                              (NP
                                (NP (DT the) (NN creation))
                                (PP (IN of)
                                  (NP
                                    (NP (JJR more))
                                    (PP (IN like)
                                      (NP (PRP them))))))
                              (PP (IN for)
                                (NP (JJ practical) (NNS reasons) (RB not) (JJ religious) (NNS ones))))))))))))))))
    (. .)))

advmod(become-18, All-1)
prep_in(All-1, all-3)
mark(reproductive-12, if-5)
det(behavior-9, all-6)
amod(behavior-9, human-7)
amod(behavior-9, sexual-8)
nsubj(reproductive-12, behavior-9)
cop(reproductive-12, were-10)
advmod(reproductive-12, necessarily-11)
advcl(become-18, reproductive-12)
det(Earth-15, the-14)
nsubj(become-18, Earth-15)
aux(become-18, would-16)
advmod(become-18, swiftly-17)
root(ROOT-0, become-18)
ccomp(become-18, overrun-19)
amod(beings-22, human-21)
prep_by(overrun-19, beings-22)
nn(beings-25, OR-23)
amod(beings-25, human-24)
nsubj(limit-28, beings-25)
aux(limit-28, would-26)
advmod(limit-28, severely-27)
rcmod(beings-22, limit-28)
poss(behavior-31, their-29)
amod(behavior-31, sexual-30)
dobj(limit-28, behavior-31)
aux(limit-33, to-32)
xcomp(limit-28, limit-33)
det(creation-35, the-34)
dobj(limit-33, creation-35)
prep_of(creation-35, more-37)
prep_like(more-37, them-39)
amod(ones-45, practical-41)
nn(ones-45, reasons-42)
neg(ones-45, not-43)
amod(ones-45, religious-44)
prep_for(limit-33, ones-45)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP (JJ much) (NN reason)
        (S
          (VP (TO to)
            (VP (VB insist)
              (SBAR (IN that)
                (S
                  (NP (JJ human) (NNS beings))
                  (VP (VBP restrict)
                    (NP
                      (NP (NN reproduction))
                      (PP (IN for)
                        (NP (JJ practical) (NNS reasons))))
                    (ADVP (RB already))))))))))
    (. .)))

prep_of(is-5, course-2)
expl(is-5, there-4)
root(ROOT-0, is-5)
amod(reason-7, much-6)
nsubj(is-5, reason-7)
aux(insist-9, to-8)
infmod(reason-7, insist-9)
complm(restrict-13, that-10)
amod(beings-12, human-11)
nsubj(restrict-13, beings-12)
ccomp(insist-9, restrict-13)
dobj(restrict-13, reproduction-14)
amod(reasons-17, practical-16)
prep_for(reproduction-14, reasons-17)
advmod(restrict-13, already-18)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN light))
        (PP (IN of)
          (NP (DT those)
            (ADJP (RB quite) (JJ obvious))
            (JJ practical) (NNS concerns)))))
    (, ,)
    (NP (PRP one))
    (VP (MD would)
      (VP (VB expect)
        (NP (JJ human) (NNS cultures))
        (S
          (VP (TO to)
            (VP (VB embrace)
              (NP (JJ non-reproductive)
                (CC and)
                (JJ non-heterosexual) (NN sex))
              (PP (RB rather) (IN than)
                (S
                  (ADVP (RB continually))
                  (VP (VBG criticizing)
                    (NP (PRP them))))))))))
    (. .)))

prep_in(expect-12, light-2)
det(concerns-8, those-4)
advmod(obvious-6, quite-5)
amod(concerns-8, obvious-6)
amod(concerns-8, practical-7)
prep_of(light-2, concerns-8)
nsubj(expect-12, one-10)
aux(expect-12, would-11)
root(ROOT-0, expect-12)
amod(cultures-14, human-13)
dobj(expect-12, cultures-14)
aux(embrace-16, to-15)
xcomp(expect-12, embrace-16)
amod(sex-20, non-reproductive-17)
conj_and(non-reproductive-17, non-heterosexual-19)
amod(sex-20, non-heterosexual-19)
dobj(embrace-16, sex-20)
advmod(embrace-16, rather-21)
advmod(criticizing-24, continually-23)
prepc_than(embrace-16, criticizing-24)
dobj(criticizing-24, them-25)

(ROOT
  (S (CC But)
    (, ,)
    (ADVP (RB perhaps))
    (, ,)
    (NP
      (NP (DT the) (NN criticism))
      (PP (IN of)
        (NP (JJ non-reproductive) (NN sex))))
    (VP (VBZ is)
      (ADVP (RB merely))
      (NP
        (NP
          (NP (DT the) (NN noise))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ squeakiest) (NNS wheels))
              (PP (IN on)
                (NP (DT the) (NN cart))))))
        (CONJP (RB rather) (IN than))
        (NP
          (NP (DT the) (NN opinion))
          (PP (IN of)
            (NP (DT the) (NN majority))))))
    (. .)))

advmod(noise-13, perhaps-3)
det(criticism-6, the-5)
nsubj(noise-13, criticism-6)
amod(sex-9, non-reproductive-8)
prep_of(criticism-6, sex-9)
cop(noise-13, is-10)
advmod(noise-13, merely-11)
det(noise-13, the-12)
root(ROOT-0, noise-13)
det(wheels-17, the-15)
amod(wheels-17, squeakiest-16)
prep_of(noise-13, wheels-17)
det(cart-20, the-19)
prep_on(wheels-17, cart-20)
det(opinion-24, the-23)
conj_negcc(noise-13, opinion-24)
det(majority-27, the-26)
prep_of(opinion-24, majority-27)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADVP (RB no) (VB doubt))
        (, ,)
        (SBAR (IN although)
          (S
            (NP (DT a) (NN heterosexual))
            (VP (VBZ prefers)
              (NP (DT the) (JJ opposite) (NN gender))
              (PP (IN as)
                (NP (DT a) (JJ sexual) (NN partner))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADJP
        (ADVP (IN at) (JJS least))
        (JJ capable)
        (PP (IN of)
          (S
            (VP (VBG choosing)
              (ADVP (RB differently)))))))
    (. .)))

expl(is-2, There-1)
ccomp(are-19, is-2)
advmod(is-2, no-3)
dep(no-3, doubt-4)
mark(prefers-9, although-6)
det(heterosexual-8, a-7)
nsubj(prefers-9, heterosexual-8)
advcl(is-2, prefers-9)
det(gender-12, the-10)
amod(gender-12, opposite-11)
dobj(prefers-9, gender-12)
det(partner-16, a-14)
amod(partner-16, sexual-15)
prep_as(prefers-9, partner-16)
nsubj(are-19, they-18)
root(ROOT-0, are-19)
advmod(capable-22, at-20)
pobj(at-20, least-21)
acomp(are-19, capable-22)
prepc_of(capable-22, choosing-24)
advmod(choosing-24, differently-25)

(ROOT
  (S
    (ADVP (RB Homosexuality))
    (, ,)
    (NP (NN bisexuality)
      (CC or)
      (NN asexuality))
    (VP (VBP are)
      (NP
        (NP (NNS options))
        (ADJP (JJ open)
          (PP (TO to)
            (NP (PRP them))))))
    (. .)))

advmod(options-7, Homosexuality-1)
nsubj(options-7, bisexuality-3)
conj_or(bisexuality-3, asexuality-5)
nsubj(options-7, asexuality-5)
cop(options-7, are-6)
root(ROOT-0, options-7)
amod(options-7, open-8)
prep_to(open-8, them-10)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ limits)
            (NP (PRP$ their) (NNS choices))))))
    (VP (VBZ is)
      (NP
        (NP (PRP$ their) (NN thinking)
          (CC and)
          (NNS emotions))
        (CC and)
        (, ,)
        (PP (IN of)
          (NP (NN course) (NN context)))))
    (. .)))

nsubj(limits-3, All-1)
nsubj(thinking-8, All-1)
rcmod(All-1, limits-3)
poss(choices-5, their-4)
dobj(limits-3, choices-5)
cop(thinking-8, is-6)
poss(thinking-8, their-7)
root(ROOT-0, thinking-8)
conj_and(thinking-8, emotions-10)
conj_and(thinking-8, of-13)
nn(context-15, course-14)
pobj(of-13, context-15)

(ROOT
  (X
    (ADVP (RB So))
    (NP (RB too) (DT the) (NN homosexual)
      (CC or)
      (DT the) (NN asexual))
    (. .)))

dep(homosexual-4, So-1)
advmod(homosexual-4, too-2)
det(homosexual-4, the-3)
root(ROOT-0, homosexual-4)
det(asexual-7, the-6)
conj_or(homosexual-4, asexual-7)

(ROOT
  (S
    (S
      (SBAR (IN Although)
        (S
          (NP (DT the) (JJ homosexual))
          (VP (VBZ prefers)
            (NP
              (NP (DT the) (JJ same) (NN sex))
              (CC or)
              (NP
                (NP (DT the) (NN asexual))
                (NP
                  (NP (DT no) (NN sex))
                  (ADVP (IN at) (DT all))))))))
      (, ,)
      (NP (DT the) (JJ first))
      (VP (MD can)
        (ADVP (RB conceivably))
        (VP (VB choose)
          (NP (JJ sexual) (NNS relations))
          (PP (IN with)
            (NP
              (NP (DT a) (JJ different) (NN gender))
              (VP (VBN given)
                (NP
                  (NP (DT a) (JJ different) (NN frame))
                  (PP (IN of)
                    (NP (NN mind))))))))))
    (CC and)
    (S
      (NP
        (NP (DT a) (JJ different) (NN context))
        (CC and)
        (NP (DT the) (NN asexual)))
      (VP (MD could)
        (ADVP (RB conceivably))
        (VP (VB choose)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (NN sex))
                  (VP (VBN given)
                    (NP (DT those))
                    (NP (JJ same) (NNS conditions))))))))))
    (. .)))

mark(prefers-4, Although-1)
det(homosexual-3, the-2)
nsubj(prefers-4, homosexual-3)
advcl(choose-20, prefers-4)
det(sex-7, the-5)
amod(sex-7, same-6)
dobj(prefers-4, sex-7)
det(asexual-10, the-9)
dobj(prefers-4, asexual-10)
conj_or(sex-7, asexual-10)
det(sex-12, no-11)
dep(asexual-10, sex-12)
advmod(sex-12, at-13)
pobj(at-13, all-14)
det(first-17, the-16)
nsubj(choose-20, first-17)
aux(choose-20, can-18)
advmod(choose-20, conceivably-19)
root(ROOT-0, choose-20)
amod(relations-22, sexual-21)
dobj(choose-20, relations-22)
det(gender-26, a-24)
amod(gender-26, different-25)
prep_with(choose-20, gender-26)
partmod(gender-26, given-27)
det(frame-30, a-28)
amod(frame-30, different-29)
dobj(given-27, frame-30)
prep_of(frame-30, mind-32)
det(context-36, a-34)
amod(context-36, different-35)
nsubj(choose-42, context-36)
xsubj(have-44, context-36)
det(asexual-39, the-38)
conj_and(context-36, asexual-39)
nsubj(choose-42, asexual-39)
xsubj(have-44, asexual-39)
aux(choose-42, could-40)
advmod(choose-42, conceivably-41)
conj_and(choose-20, choose-42)
aux(have-44, to-43)
xcomp(choose-42, have-44)
dobj(have-44, sex-45)
partmod(sex-45, given-46)
iobj(given-46, those-47)
amod(conditions-49, same-48)
dobj(given-46, conditions-49)

(ROOT
  (S
    (S
      (NP (NNP Genetics))
      (VP (VBZ originates)
        (NP
          (NP (DT the) (NN preference))
          (CC and)
          (NP (JJ specific) (JJ available) (NNS choices)))))
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ does) (RB not)
        (VP (VB dictate)
          (NP (DT the) (JJ specific) (NNS behaviors))
          (PP (IN within)
            (NP
              (NP (CD one) (POS 's))
              (NN power)
              (S
                (VP (TO to)
                  (VP (VB choose)
                    (PP (IN among)
                      (NP (NNS alternatives)))))))))))
    (. .)))

nsubj(originates-2, Genetics-1)
root(ROOT-0, originates-2)
det(preference-4, the-3)
dobj(originates-2, preference-4)
amod(choices-8, specific-6)
amod(choices-8, available-7)
dobj(originates-2, choices-8)
conj_and(preference-4, choices-8)
nsubj(dictate-13, it-10)
aux(dictate-13, does-11)
neg(dictate-13, not-12)
conj_but(originates-2, dictate-13)
det(behaviors-16, the-14)
amod(behaviors-16, specific-15)
dobj(dictate-13, behaviors-16)
poss(power-20, one-18)
prep_within(dictate-13, power-20)
aux(choose-22, to-21)
infmod(power-20, choose-22)
prep_among(choose-22, alternatives-24)

