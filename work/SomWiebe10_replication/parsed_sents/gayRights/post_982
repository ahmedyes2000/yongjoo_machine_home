(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VB apologize)
        (PP (IN for)
          (S
            (VP (VBG being)
              (ADJP (RB blissfully) (JJ unaware)
                (PP (IN of)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (NP (PRP you))
                      (VP (VBP are)
                        (VP (VBG referring)
                          (PP (TO to))
                          (PP (IN in)
                            (NP
                              (NP (DT the) (JJ first) (NN section))
                              (PP (IN of)
                                (NP (PRP$ your) (NN reply))))))))))))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB certainly))
    (VP (VBZ does) (RB n't)
      (VP (VB apply)
        (PP (TO to)
          (NP (NNP Tamara)))
        (PRN (, ,)
          (S
            (NP (PRP I))
            (VP (VBP hope)))
          (, ,))
        (SBAR (IN unless)
          (S
            (NP (PRP you))
            (VP (VBP know)
              (NP
                (NP (NN something))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP do) (RB n't))))))))))
    (. .)))

nsubj(apologize-2, I-1)
ccomp(apply-25, apologize-2)
cop(unaware-6, being-4)
advmod(unaware-6, blissfully-5)
prepc_for(apologize-2, unaware-6)
dobj(referring-11, who-8)
nsubj(referring-11, you-9)
aux(referring-11, are-10)
prepc_of(unaware-6, referring-11)
prep(referring-11, to-12)
det(section-16, the-14)
amod(section-16, first-15)
prep_in(referring-11, section-16)
poss(reply-19, your-18)
prep_of(section-16, reply-19)
nsubj(apply-25, it-21)
advmod(apply-25, certainly-22)
aux(apply-25, does-23)
neg(apply-25, n't-24)
root(ROOT-0, apply-25)
prep_to(apply-25, Tamara-27)
nsubj(hope-30, I-29)
parataxis(apply-25, hope-30)
mark(know-34, unless-32)
nsubj(know-34, you-33)
advcl(apply-25, know-34)
dobj(know-34, something-35)
dobj(do-37, something-35)
nsubj(do-37, I-36)
rcmod(something-35, do-37)
neg(do-37, n't-38)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD KNOW)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ does) (RB n't)
            (VP (VB apply)
              (PP (TO to)
                (NP (PRP me))))))))
    (: ...)))

nsubj(KNOW-2, I-1)
root(ROOT-0, KNOW-2)
nsubj(apply-6, it-3)
aux(apply-6, does-4)
neg(apply-6, n't-5)
ccomp(KNOW-2, apply-6)
prep_to(apply-6, me-8)

(ROOT
  (S
    (ADVP (RB However))
    (NP (PRP she))
    (VP (VBD did) (RB indeed)
      (VP (VB lose)
        (NP
          (NP (NN part))
          (PP (IN of)
            (NP (PRP$ her) (NN brain))))
        (PP
          (PP (IN from)
            (NP (DT that) (NN process)))
          (, ,) (RB because)
          (PP (IN of)
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (ADVP (RB really))
                  (VP (VB appreciate)
                    (NP (DT that) (NN comment))))))))))
    (. ...)))

advmod(lose-5, However-1)
nsubj(lose-5, she-2)
aux(lose-5, did-3)
advmod(lose-5, indeed-4)
root(ROOT-0, lose-5)
dobj(lose-5, part-6)
poss(brain-9, her-8)
prep_of(part-6, brain-9)
det(process-12, that-11)
prep_from(lose-5, process-12)
complm(appreciate-21, that-16)
nsubj(appreciate-21, I-17)
aux(appreciate-21, do-18)
neg(appreciate-21, n't-19)
advmod(appreciate-21, really-20)
prepc_because_of(lose-5, appreciate-21)
det(comment-23, that-22)
dobj(appreciate-21, comment-23)

(ROOT
  (S (: ...)
    (S (CC and)
      (NP (RB yes) (PRP it))
      (VP (VBZ does)))
    (: ...)
    (S
      (S
        (VP (TO to)
          (VP (VB think)
            (ADVP (RB otherwise)))))
      (VP (MD would)
        (VP (VB be))))
    (. ...)))

cc(does-5, and-2)
advmod(it-4, yes-3)
nsubj(does-5, it-4)
root(ROOT-0, does-5)
aux(think-8, to-7)
csubj(be-11, think-8)
advmod(think-8, otherwise-9)
aux(be-11, would-10)
parataxis(does-5, be-11)

(ROOT
  (NP (FW .) (. .)))


(ROOT
  (FRAG
    (ADVP (RB well))
    (: ...)))

root(ROOT-0, well-1)

(ROOT
  (NP (FW .) (. .)))


(ROOT
  (FRAG
    (ADJP
      (ADVP (NN kind) (IN of))
      (JJ stupid))
    (: ...)))

dep(of-2, kind-1)
advmod(stupid-3, of-2)
root(ROOT-0, stupid-3)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S (CC and)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB apply)
                  (NP (PRP it))
                  (PP (TO to)
                    (NP (NNP God))))))))))
    (, ,)
    (ADVP (RB well))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP
              (NP (DT any))
              (PP (IN of)
                (NP (PRP it))))
            (VP (VBZ applies)
              (SBAR
                (S
                  (S
                    (VP (TO to)
                      (VP (VB Him))))
                  (: ...)
                  (CC or)
                  (, ,)
                  (S
                    (VP (VBD were)
                      (S
                        (NP (PRP you))
                        (ADJP (RB even) (JJ replying)
                          (PP (TO to)
                            (SBAR
                              (WHNP (WP what))
                              (S
                                (NP (PRP I))
                                (VP (VBD said))))))))))))))))
    (. ?)))

cc(see-17, and-1)
mark(trying-5, if-2)
nsubj(trying-5, you-3)
xsubj(apply-7, you-3)
aux(trying-5, are-4)
advcl(see-17, trying-5)
aux(apply-7, to-6)
xcomp(trying-5, apply-7)
dobj(apply-7, it-8)
prep_to(apply-7, God-10)
advmod(see-17, well-12)
nsubj(see-17, I-14)
aux(see-17, do-15)
neg(see-17, n't-16)
root(ROOT-0, see-17)
advmod(applies-22, how-18)
nsubj(applies-22, any-19)
prep_of(any-19, it-21)
ccomp(see-17, applies-22)
aux(Him-24, to-23)
dep(applies-22, Him-24)
dep(applies-22, were-28)
conj_or(Him-24, were-28)
nsubj(replying-31, you-29)
advmod(replying-31, even-30)
xcomp(were-28, replying-31)
dobj(said-35, what-33)
nsubj(said-35, I-34)
prepc_to(replying-31, said-35)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB just))
      (ADJP
        (NP (DT a) (RB little))
        (JJ confused)))
    (: ...)))

nsubj(confused-6, I-1)
cop(confused-6, 'm-2)
advmod(confused-6, just-3)
det(little-5, a-4)
npadvmod(confused-6, little-5)
root(ROOT-0, confused-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP mean)
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP guess)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP you))
                  (VP (VBD got)
                    (PRT (RP out))
                    (NP (PRP$ your) (NNS dictionary\/thesaurus))
                    (S
                      (VP (TO to)
                        (VP (VB look)
                          (PRT (RP up))
                          (NP (DT those) (NNS words)))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP suppose)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD may)
            (VP (VB have)
              (VP (VBN gotten)
                (NP
                  (NP (DT a) (JJ few) (NNS definitions)
                    (CC and)
                    (NNS meanings))
                  (VP (VBN distorted)
                    (ADVP (CC but))))))))))
    (: ...)))

nsubj(mean-2, I-1)
ccomp(suppose-18, mean-2)
nsubj(guess-4, I-3)
ccomp(mean-2, guess-4)
advmod(got-7, when-5)
nsubj(got-7, you-6)
advcl(guess-4, got-7)
prt(got-7, out-8)
poss(dictionary\/thesaurus-10, your-9)
dobj(got-7, dictionary\/thesaurus-10)
aux(look-12, to-11)
xcomp(got-7, look-12)
prt(look-12, up-13)
det(words-15, those-14)
dobj(look-12, words-15)
nsubj(suppose-18, I-17)
root(ROOT-0, suppose-18)
complm(gotten-23, that-19)
nsubj(gotten-23, you-20)
aux(gotten-23, may-21)
aux(gotten-23, have-22)
ccomp(suppose-18, gotten-23)
det(definitions-26, a-24)
amod(definitions-26, few-25)
dobj(gotten-23, definitions-26)
dobj(gotten-23, meanings-28)
conj_and(definitions-26, meanings-28)
partmod(definitions-26, distorted-29)
advmod(distorted-29, but-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (: ...)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S
    (INTJ (VB please))
    (VP (VB explain))
    (. ?)))

dep(explain-2, please-1)
root(ROOT-0, explain-2)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (NP (PRP me))
            (VP (TO to)
              (VP (VB discuss)
                (S
                  (S
                    (NP
                      (NP (DT the) (NN validity))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NNP Bible))
                          (, ,)
                          (SBAR
                            (WHNP (DT all))
                            (S
                              (NP (PRP you))
                              (VP (MD need)
                                (VP (VB do))))))))
                    (VP (VBZ is)
                      (VP (VB ask))))
                  (: ;)
                  (S
                    (SBAR (IN if)
                      (S
                        (NP (PRP you))
                        (VP (VBP need)
                          (NP
                            (NP (NN proof))
                            (PP (IN of)
                              (NP
                                (NP (DT a) (NN deity))
                                (PRN (-LRB- -LRB-)
                                  (NP (NNP God))
                                  (-RRB- -RRB-))))))))
                    (NP (DT the) (NN proof))
                    (VP (VBZ is)
                      (ADVP (DT all) (RP around))
                      (NP (PRP you))))
                  (, ,) (RB all)
                  (S
                    (NP (PRP you))
                    (VP (MD need)
                      (VP (VB do)))))))))))
    (VP (VBZ is)
      (VP
        (VP (VB open)
          (NP (PRP$ your) (NN mind)))
        (CC and)
        (VP (VB consider)
          (NP
            (NP (DT the) (NN proof))
            (CC and)
            (NP (DT the) (NNS facts))))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
csubj(open-42, want-3)
csubj(consider-46, want-3)
nsubj(discuss-6, me-4)
aux(discuss-6, to-5)
xcomp(want-3, discuss-6)
det(validity-8, the-7)
nsubj(ask-18, validity-8)
det(Bible-11, the-10)
prep_of(validity-8, Bible-11)
dobj(need-15, all-13)
rel(need-15, all-13)
nsubj(need-15, you-14)
rcmod(Bible-11, need-15)
dep(need-15, do-16)
aux(ask-18, is-17)
dep(discuss-6, ask-18)
mark(need-22, if-20)
nsubj(need-22, you-21)
advcl(you-35, need-22)
dobj(need-22, proof-23)
det(deity-26, a-25)
prep_of(proof-23, deity-26)
appos(deity-26, God-28)
det(proof-31, the-30)
nsubj(you-35, proof-31)
cop(you-35, is-32)
dep(around-34, all-33)
advmod(you-35, around-34)
parataxis(ask-18, you-35)
advmod(ask-18, all-37)
nsubj(need-39, you-38)
dep(ask-18, need-39)
dep(need-39, do-40)
aux(open-42, is-41)
root(ROOT-0, open-42)
poss(mind-44, your-43)
dobj(open-42, mind-44)
conj_and(open-42, consider-46)
det(proof-48, the-47)
dobj(consider-46, proof-48)
det(facts-51, the-50)
dobj(consider-46, facts-51)
conj_and(proof-48, facts-51)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (DT that))
        (VP (VBZ does) (RB n't)
          (VP (VB work)))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (ADVP (RB still))
      (VP (VB ask)
        (PP (IN about)
          (NP (DT that)))
        (ADVP (RB too))))
    (. .)))

cc(ask-11, But-1)
mark(work-6, if-2)
nsubj(work-6, that-3)
aux(work-6, does-4)
neg(work-6, n't-5)
advcl(ask-11, work-6)
nsubj(ask-11, you-8)
aux(ask-11, can-9)
advmod(ask-11, still-10)
root(ROOT-0, ask-11)
prep_about(ask-11, that-13)
advmod(ask-11, too-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD had)
        (NP
          (NP (DT a) (NN chemistry) (NN teacher))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD had)
                (NP (DT a) (NN brain) (NN tumor))
                (, ,)
                (ADVP (RB miraculously))))))))
    (, ,)
    (NP (PRP she))
    (VP (VBD lived))
    (. .)))

nsubj(had-2, I-1)
ccomp(lived-15, had-2)
det(teacher-5, a-3)
nn(teacher-5, chemistry-4)
dobj(had-2, teacher-5)
nsubj(had-7, teacher-5)
rcmod(teacher-5, had-7)
det(tumor-10, a-8)
nn(tumor-10, brain-9)
dobj(had-7, tumor-10)
advmod(had-7, miraculously-12)
nsubj(lived-15, she-14)
root(ROOT-0, lived-15)

