(ROOT
  (S
    (NP (NNP God))
    (VP (MD can)
      (ADVP (RB certainly))
      (VP (VB make)
        (NP (DT the) (NNS decisions))
        (PP (IN in)
          (NP (PRP$ your) (NN church)))))
    (. .)))

nsubj(make-4, God-1)
aux(make-4, can-2)
advmod(make-4, certainly-3)
root(ROOT-0, make-4)
det(decisions-6, the-5)
dobj(make-4, decisions-6)
poss(church-9, your-8)
prep_in(make-4, church-9)

(ROOT
  (S
    (ADVP (RB Unfortunately))
    (, ,)
    (NP (PRP he))
    (VP (VBZ is) (RB not)
      (PP (IN in)
        (NP
          (NP (NN charge))
          (PP (IN of)
            (NP (DT the) (NN government))))))
    (. .)))

advmod(is-4, Unfortunately-1)
nsubj(is-4, he-3)
root(ROOT-0, is-4)
neg(is-4, not-5)
prep_in(is-4, charge-7)
det(government-10, the-9)
prep_of(charge-7, government-10)

(ROOT
  (SQ
    (VP (VB Remember)
      (NP (DT the) (NN phrase)
        (S (`` ``)
          (VP (VB give)
            (NP
              (NP (DT that))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (NP
                      (NP (NNP Caesar) (POS 's))
                      (NN unto) (NN Caesar))))))))))
    (. ?)))

root(ROOT-0, Remember-1)
det(phrase-3, the-2)
dobj(Remember-1, phrase-3)
dep(phrase-3, give-5)
dobj(give-5, that-6)
nsubj(Caesar-12, that-6)
cop(Caesar-12, is-8)
poss(Caesar-12, Caesar-9)
nn(Caesar-12, unto-11)
rcmod(that-6, Caesar-12)

(ROOT
  (S ('' '')
    (NP (DT The) (NN government))
    (VP (VBZ has)
      (VP (VBN recognized)
        (NP (`` ``)
          (NP (NNS marriages))
          ('' '')
          (PP (IN as)
            (NP (JJ civil) (NNS unions))))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ legal) (NN system))
            (PP (IN since)
              (NP (DT the) (NN beginning)))))))
    (. .)))

det(government-3, The-2)
nsubj(recognized-5, government-3)
aux(recognized-5, has-4)
root(ROOT-0, recognized-5)
dobj(recognized-5, marriages-7)
amod(unions-11, civil-10)
prep_as(marriages-7, unions-11)
det(system-15, the-13)
amod(system-15, legal-14)
prep_in(recognized-5, system-15)
det(beginning-18, the-17)
prep_since(system-15, beginning-18)

(ROOT
  (S
    (ADVP (RB Unfortunately))
    (, ,)
    (NP (PRP we))
    (VP (VBD used)
      (NP
        (NP (`` ``)
          (NP (DT that) (NN word))
          ('' '')
          (PP (RB instead) (IN of)
            (NP
              (NP (`` ``) (JJ civil) (NNS unions) ('' ''))
              (CC or)
              (NP (`` ``) (NNS households) ('' '')))))
        (CC or)
        (SBAR
          (WHNP (WDT whatever))
          (S
            (NP (RB else) (PRP you))
            (VP (VBP choose)
              (S
                (VP (TO to)
                  (VP (VB call)
                    (NP (PRP them))))))))))
    (. .)))

advmod(used-4, Unfortunately-1)
nsubj(used-4, we-3)
root(ROOT-0, used-4)
det(word-7, that-6)
dobj(used-4, word-7)
amod(unions-13, civil-12)
prep_instead_of(word-7, unions-13)
prep_instead_of(word-7, households-17)
conj_or(unions-13, households-17)
rel(choose-23, whatever-20)
advmod(you-22, else-21)
nsubj(choose-23, you-22)
xsubj(call-25, you-22)
dobj(used-4, choose-23)
conj_or(word-7, choose-23)
rcmod(word-7, choose-23)
aux(call-25, to-24)
xcomp(choose-23, call-25)
dobj(call-25, them-26)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NN order))
        (PP (IN for)
          (NP (DT all) (NNS people)))
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (JJ equal) (NNS rights)))))))
    (, ,)
    (NP (PRP we))
    (ADVP (RB either))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP
            (VP (VB change)
              (NP
                (NP (DT the) (NN word) (`` ``) (NN marriage) ('' ''))
                (PP (TO to)
                  (NP (NN something))))
              (PP (IN like)
                (NP (`` ``) (JJ civil) (NNS unions) ('' '')))
              (PP (IN in)
                (NP
                  (NP (DT all))
                  (PP (IN of)
                    (NP (DT the) (JJ legal) (NNS documents)
                      (CC and)
                      (NNS laws))))))
            (, ,)
            (CC or)
            (ADVP (RB just))
            (VP
              (VP (VB take)
                (NP (DT the) (JJR easier) (NN route)))
              (CC and)
              (VP (VB allow)
                (NP (NN everyone))
                (S
                  (VP (TO to)
                    (VP (VB use)
                      (NP
                        (NP (DT the) (NN term) (`` ``) (NN marriage) ('' ''))
                        (PP (IN in)
                          (NP (DT the) (JJ legal) (NN sense)))))))))))))
    (. .)))

prep_in(need-13, order-2)
det(people-5, all-4)
prep_for(order-2, people-5)
aux(have-7, to-6)
infmod(order-2, have-7)
amod(rights-9, equal-8)
dobj(have-7, rights-9)
nsubj(need-13, we-11)
xsubj(change-15, we-11)
advmod(need-13, either-12)
root(ROOT-0, need-13)
aux(change-15, to-14)
xcomp(need-13, change-15)
det(marriage-19, the-16)
nn(marriage-19, word-17)
dobj(change-15, marriage-19)
prep_to(marriage-19, something-22)
amod(unions-26, civil-25)
prep_like(change-15, unions-26)
prep_in(change-15, all-29)
det(documents-33, the-31)
amod(documents-33, legal-32)
prep_of(all-29, documents-33)
prep_of(all-29, laws-35)
conj_and(documents-33, laws-35)
xcomp(need-13, just-38)
advmod(change-15, just-38)
conj_or(change-15, just-38)
xcomp(need-13, take-39)
conj_or(change-15, take-39)
det(route-42, the-40)
amod(route-42, easier-41)
dobj(take-39, route-42)
conj_or(change-15, allow-44)
conj_and(take-39, allow-44)
dobj(allow-44, everyone-45)
aux(use-47, to-46)
xcomp(allow-44, use-47)
det(marriage-51, the-48)
nn(marriage-51, term-49)
dobj(use-47, marriage-51)
det(sense-56, the-54)
amod(sense-56, legal-55)
prep_in(marriage-51, sense-56)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD ca) (RB n't)
      (NP (PRP we))
      (VP (VB allow)
        (NP
          (NP (CD two) (JJ different) (NNS meanings))
          (PP (IN for)
            (NP (DT the) (JJ same) (NN word))))))
    (. ?)))

advmod(allow-5, Why-1)
aux(allow-5, ca-2)
neg(allow-5, n't-3)
nsubj(allow-5, we-4)
root(ROOT-0, allow-5)
num(meanings-8, two-6)
amod(meanings-8, different-7)
dobj(allow-5, meanings-8)
det(word-12, the-10)
amod(word-12, same-11)
prep_for(meanings-8, word-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (SBAR (IN like)
        (S
          (NP (PRP it))
          (VP (VBZ has)
            (ADVP (RB never))
            (VP (VBN been)
              (VP (VBN done)))))))
    (. ?)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
neg('s-2, not-3)
mark(done-9, like-4)
nsubjpass(done-9, it-5)
aux(done-9, has-6)
neg(done-9, never-7)
auxpass(done-9, been-8)
advcl('s-2, done-9)

(ROOT
  (NP (NNP Michelle)))

root(ROOT-0, Michelle-1)

