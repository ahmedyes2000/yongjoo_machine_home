(ROOT
  (S
    (PP (VBN Compared)
      (PP (TO to)
        (NP
          (NP
            (NP (NNS children))
            (PP (IN with)
              (NP (DT a) (NN father))))
          (CC and)
          (NP
            (NP (DT a) (NN mother))
            (VP
              (VP (VBN married)
                (PP (TO to)
                  (NP (DT each) (JJ other))))
              (CC and)
              (VP (VBG getting)
                (PRT (RP along))
                (PP (IN with)
                  (NP (DT each) (JJ other)))))))))
    (, ,)
    (NP (DT the) (NN answer))
    (VP (VBZ is)
      (NP (UH yes)))
    (. .)))

prepc_compared_to(yes-24, to-2)
pobj(yes-24, children-3)
det(father-6, a-5)
prep_with(children-3, father-6)
det(mother-9, a-8)
conj_and(children-3, mother-9)
pobj(yes-24, mother-9)
dep(mother-9, married-10)
det(other-13, each-12)
prep_to(married-10, other-13)
dep(mother-9, getting-15)
conj_and(married-10, getting-15)
det(other-19, each-18)
prep_along_with(getting-15, other-19)
det(answer-22, the-21)
nsubj(yes-24, answer-22)
cop(yes-24, is-23)
root(ROOT-0, yes-24)

(ROOT
  (S
    (PP (VBN Compared)
      (PP (TO to)
        (NP
          (NP (NNS children))
          (VP (VBG living)
            (PP (IN in)
              (NP (DT an) (NN orphanage)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ hard)
        (S
          (VP (TO to)
            (VP (VB say))))))
    (. .)))

prepc_compared_to(hard-11, to-2)
pobj(hard-11, children-3)
partmod(children-3, living-4)
det(orphanage-7, an-6)
prep_in(living-4, orphanage-7)
nsubj(hard-11, it-9)
cop(hard-11, 's-10)
root(ROOT-0, hard-11)
aux(say-13, to-12)
xcomp(hard-11, say-13)

