(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ is)
      (VP (VBG redefining)
        (NP
          (NP (DT the) (NN definition))
          (PP (IN of)
            (NP (NN marriage))))))
    (. .)))

det(one-2, No-1)
nsubj(redefining-4, one-2)
aux(redefining-4, is-3)
root(ROOT-0, redefining-4)
det(definition-6, the-5)
dobj(redefining-4, definition-6)
prep_of(definition-6, marriage-8)

(ROOT
  (SINV
    (ADJP (JJ Marriage))
    (VP (VBZ means)
      (ADVP (RB quite))
      (ADVP (RB literally)
        (NP (DT the) (NN joining))
        (PP (IN of)
          (NP (NNS entities))))
      (VP (VB be)
        (NP (PRP it))))
    (NP
      (NP (NNS buisnesses))
      (, ,)
      (NP (NNS ideas))
      (, ,)
      (NP (NNS people))
      (, ,)
      (NP
        (NP (NNS elements))
        (: ...)
        (NP (FW etc.))))
    (. .)))

dep(means-2, Marriage-1)
root(ROOT-0, means-2)
advmod(means-2, quite-3)
advmod(means-2, literally-4)
det(joining-6, the-5)
pobj(literally-4, joining-6)
prep_of(literally-4, entities-8)
cop(it-10, be-9)
dep(means-2, it-10)
nsubj(means-2, buisnesses-11)
appos(buisnesses-11, ideas-13)
appos(buisnesses-11, people-15)
appos(buisnesses-11, elements-17)
dep(elements-17, etc.-19)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP
        (NP (DT the) (NN sake))
        (PP (IN of)
          (NP
            (NP (NNS things))
            (S
              (S
                (VP (VBG changing)))
              (: ...)
              (S
                (NP (RB here))
                (VP (VBP are)
                  (NP
                    (NP (DT some) (NNS words))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBP have)
                          (VP (VBN changed))))))))
              (: :)
              (S
                (VP (VB Commit)))
              (: :)
              (S
                (VP (TO to)
                  (VP (VB come)
                    (ADVP (RB together)
                      (CC but)
                      (RB now))))))))))
    (NP (PRP it))
    (VP
      (ADVP (RB also))
      (VBZ means)
      (NP
        (NP (DT a) (NN number))
        (PP (IN of)
          (NP (JJ other) (NNS things)))))
    (. .)))

cc(means-26, But-1)
det(sake-4, the-3)
prep_for(means-26, sake-4)
prep_of(sake-4, things-6)
dep(things-6, changing-7)
nsubj(words-12, here-9)
cop(words-12, are-10)
det(words-12, some-11)
parataxis(changing-7, words-12)
nsubj(changed-15, words-12)
aux(changed-15, have-14)
rcmod(words-12, changed-15)
parataxis(changing-7, Commit-17)
aux(come-20, to-19)
parataxis(changing-7, come-20)
advmod(come-20, together-21)
advmod(come-20, now-23)
conj_but(together-21, now-23)
nsubj(means-26, it-24)
advmod(means-26, also-25)
root(ROOT-0, means-26)
det(number-28, a-27)
dobj(means-26, number-28)
amod(things-31, other-30)
prep_of(number-28, things-31)

(ROOT
  (NP
    (NP (NN Luxury))
    (: :)
    (S
      (S
        (VP
          (ADVP (RB originally))
          (VBN meant)
          (NP (NNS lasciviousness)
            (CC or)
            (NN lustCookie))))
      (: :)
      (S
        (S
          (NP (DT both))
          (VP
            (VP (VBZ means)
              (NP (NN food)))
            (CC and)
            (VP
              (ADVP (RB now))
              (VBZ has)
              (NP
                (NP (NN tech))
                (VP (VBG meaning)
                  (PP (IN as)
                    (NP
                      (NP
                        (NP (NN wellMouse))
                        (: :)
                        (ADJP (JJ animal)
                          (CC and)
                          (JJ techScroll)))
                      (: :)
                      (NP
                        (NP (JJ ancient) (NN piece))
                        (PP (IN of)
                          (NP (NN paper)))))))))))
        (: ...)
        (CC and)
        (S
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (PRP one))
              (VP (VBZ moves)
                (PRT (RP down))
                (NP
                  (NP (DT the) (NN screenUndertaker))
                  (: :)
                  (NP (JJ old) (NN meaning) (NN entrepreneur))))))
          (, ,)
          (ADVP (RB now))
          (NP (NN entrepreneur))
          (VP (VBZ means)
            (NP (JJ small) (NN business) (NN ownerInspire)))))
      (: :)
      (S
        (VP (TO to)
          (VP (VB breath)
            (SBAR
              (S
                (NP
                  (NP (NN life))
                  (PP (IN into)
                    (NP (RB now))))
                (ADVP (RB also))
                (VP (VBZ means)
                  (S
                    (VP (TO to)
                      (VP (VB elicit))))))))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB move)
            (PP (TO to)
              (NP (NN action) (NN etc.)))))))
    (. .)))

root(ROOT-0, Luxury-1)
advmod(meant-4, originally-3)
dep(Luxury-1, meant-4)
dobj(meant-4, lasciviousness-5)
dobj(meant-4, lustCookie-7)
conj_or(lasciviousness-5, lustCookie-7)
nsubj(means-10, both-9)
nsubj(has-14, both-9)
parataxis(meant-4, means-10)
dobj(means-10, food-11)
advmod(has-14, now-13)
parataxis(meant-4, has-14)
conj_and(means-10, has-14)
dobj(has-14, tech-15)
partmod(tech-15, meaning-16)
prep_as(meaning-16, wellMouse-18)
amod(wellMouse-18, animal-20)
amod(wellMouse-18, techScroll-22)
conj_and(animal-20, techScroll-22)
amod(piece-25, ancient-24)
dep(wellMouse-18, piece-25)
prep_of(piece-25, paper-27)
advmod(moves-32, how-30)
nsubj(moves-32, one-31)
dep(means-43, moves-32)
prt(moves-32, down-33)
det(screenUndertaker-35, the-34)
dobj(moves-32, screenUndertaker-35)
amod(entrepreneur-39, old-37)
nn(entrepreneur-39, meaning-38)
dep(screenUndertaker-35, entrepreneur-39)
advmod(means-43, now-41)
nsubj(means-43, entrepreneur-42)
parataxis(meant-4, means-43)
conj_and(means-10, means-43)
amod(ownerInspire-46, small-44)
nn(ownerInspire-46, business-45)
dobj(means-43, ownerInspire-46)
aux(breath-49, to-48)
parataxis(meant-4, breath-49)
nsubj(means-54, life-50)
xsubj(elicit-56, life-50)
prep(life-50, into-51)
pobj(into-51, now-52)
advmod(means-54, also-53)
ccomp(breath-49, means-54)
aux(elicit-56, to-55)
xcomp(means-54, elicit-56)
aux(move-59, to-58)
dep(meant-4, move-59)
nn(etc.-62, action-61)
prep_to(move-59, etc.-62)

(ROOT
  (S
    (S
      (S
        (VP (VB Nice))
        (: :))
      (VP (VBP use)
        (S
          (VP (TO to)
            (VP (VB mean) (`` ``)
              (ADJP (RB not)
                (S
                  (VP (TO to)
                    (VP (VB know)))))
              ('' ''))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB now))
      (NP (PRP it))
      (VP (VBZ means)
        (NP
          (NP (NN something) (NN well))
          (: ...)
          (ADJP (JJ nice)))))
    (. .)))

csubj(use-3, Nice-1)
root(ROOT-0, use-3)
aux(mean-5, to-4)
xcomp(use-3, mean-5)
acomp(mean-5, not-7)
aux(know-9, to-8)
xcomp(not-7, know-9)
advmod(means-15, now-13)
nsubj(means-15, it-14)
conj_but(use-3, means-15)
nn(well-17, something-16)
dobj(means-15, well-17)
amod(well-17, nice-19)

(ROOT
  (NP (: :) (JJ -RRB-) (NN good) (. .)))


(ROOT
  (S
    (NP
      (NP (NNP Bundle))
      (PP (IN of)
        (NP
          (NP (NNP sticks))
          (PP (IN in)
            (NP (DT the) (JJ old) (NN english))))))
    (ADVP (RB now))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ derogatory) (NN wordGay))
        (: :)
        (VP (VBN meant)
          (ADJP
            (ADJP (JJ happy))
            (CC or)
            (RB merry)
            (ADJP (RB so) (RB quite) (JJ litterally)))
          (SBAR
            (WHADVP (WRB when))
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (NN everyone))
                  (VP (VBD was)
                    (ADJP (JJ happy)))))
              (NP (PRP it))
              (VP (VBD meant)
                (SBAR
                  (S
                    (NP (NN everyone))
                    (VP (VBD was)
                      (ADJP (JJ gay)))))))))))
    (. .)))

nsubj(wordGay-12, Bundle-1)
prep_of(Bundle-1, sticks-3)
det(english-7, the-5)
amod(english-7, old-6)
prep_in(sticks-3, english-7)
advmod(wordGay-12, now-8)
cop(wordGay-12, is-9)
det(wordGay-12, a-10)
amod(wordGay-12, derogatory-11)
root(ROOT-0, wordGay-12)
partmod(wordGay-12, meant-14)
acomp(meant-14, happy-15)
acomp(meant-14, merry-17)
advmod(happy-15, merry-17)
conj_or(happy-15, merry-17)
advmod(litterally-20, so-18)
advmod(litterally-20, quite-19)
dep(happy-15, litterally-20)
advmod(meant-27, when-21)
advmod(happy-25, when-22)
nsubj(happy-25, everyone-23)
cop(happy-25, was-24)
advcl(meant-27, happy-25)
nsubj(meant-27, it-26)
advcl(meant-14, meant-27)
nsubj(gay-30, everyone-28)
cop(gay-30, was-29)
ccomp(meant-27, gay-30)

(ROOT
  (S
    (ADVP (RB Obviously))
    (NP (DT the) (NN meaning))
    (VP (VBZ has)
      (VP (VBN changed)))
    (. .)))

advmod(changed-5, Obviously-1)
det(meaning-3, the-2)
nsubj(changed-5, meaning-3)
aux(changed-5, has-4)
root(ROOT-0, changed-5)

(ROOT
  (S (CC But)
    (PP (IN in)
      (NP
        (NP (DT the) (NN case))
        (PP (IN of)
          (NP (NN marriage)))))
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (ADJP (VBG changing))
      (, ,)
      (ADVP
        (ADVP (IN at) (JJS least) (RB not))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ true) (NN sense))
            (PP (IN of)
              (NP (NN change))))))
      (SBAR (IN as)
        (S
          (VP (VBD noted)
            (ADVP (RB above))))))
    (. .)))

cc(changing-10, But-1)
det(case-4, the-3)
prep_in(changing-10, case-4)
prep_of(case-4, marriage-6)
nsubj(changing-10, it-7)
cop(changing-10, is-8)
neg(changing-10, not-9)
root(ROOT-0, changing-10)
advmod(changing-10, at-12)
pobj(at-12, least-13)
dep(at-12, not-14)
det(sense-18, the-16)
amod(sense-18, true-17)
prep_in(at-12, sense-18)
prep_of(sense-18, change-20)
mark(noted-22, as-21)
advcl(changing-10, noted-22)
advmod(noted-22, above-23)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB still))
    (VP (VBZ means)
      (S
        (VP (TO to)
          (VP (VB come)
            (ADVP (RB together))
            (, ,)
            (PP (TO to)
              (NP (NN bind))))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB join))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB create)
            (NP
              (NP (DT a) (NN union))
              (: ...)
              (NP (FW etc.)))))))
    (. .)))

nsubj(means-3, It-1)
xsubj(come-5, It-1)
xsubj(join-12, It-1)
xsubj(create-15, It-1)
advmod(means-3, still-2)
root(ROOT-0, means-3)
aux(come-5, to-4)
xcomp(means-3, come-5)
advmod(come-5, together-6)
prep_to(come-5, bind-9)
aux(join-12, to-11)
xcomp(means-3, join-12)
aux(create-15, to-14)
xcomp(means-3, create-15)
det(union-17, a-16)
dobj(create-15, union-17)
dep(union-17, etc.-19)

(ROOT
  (S
    (NP (DT All) (NNS citizens))
    (VP (MD should)
      (VP (VB have)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP
                (VP (VB choose)
                  (NP (PRP$ their) (NN life) (NN partner)))
                (, ,)
                (VP (VB marry)
                  (NP (PRP them)))
                (, ,)
                (CC and)
                (VP (VB enjoy)
                  (NP
                    (NP (DT the) (NNS benefits))
                    (PP (IN of)
                      (S
                        (VP (VBG doing)
                          (ADVP (RB so)))))))))))))
    (. .)))

det(citizens-2, All-1)
nsubj(have-4, citizens-2)
aux(have-4, should-3)
root(ROOT-0, have-4)
det(right-6, the-5)
dobj(have-4, right-6)
aux(choose-8, to-7)
infmod(right-6, choose-8)
poss(partner-11, their-9)
nn(partner-11, life-10)
dobj(choose-8, partner-11)
infmod(right-6, marry-13)
conj_and(choose-8, marry-13)
dobj(marry-13, them-14)
infmod(right-6, enjoy-17)
conj_and(choose-8, enjoy-17)
det(benefits-19, the-18)
dobj(enjoy-17, benefits-19)
prepc_of(benefits-19, doing-21)
advmod(doing-21, so-22)

