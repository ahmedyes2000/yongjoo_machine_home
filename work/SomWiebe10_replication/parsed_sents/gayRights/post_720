(ROOT
  (S
    (NP
      (NP (NNP Homosexuality))
      (CC or)
      (NP
        (NP (DT any) (NN sort))
        (PP (IN of)
          (NP (JJ human) (JJ sexual) (NN expression)))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (`` ``) (NN sin) ('' ''))
        (PP (RB only) (IN in)
          (NP
            (NP (DT a) (JJ narrowly-focused) (NN set))
            (PP (IN of)
              (NP (NNS values)))))))
    (. .)))

nsubj(sin-12, Homosexuality-1)
det(sort-4, any-3)
conj_or(Homosexuality-1, sort-4)
nsubj(sin-12, sort-4)
amod(expression-8, human-6)
amod(expression-8, sexual-7)
prep_of(sort-4, expression-8)
cop(sin-12, is-9)
det(sin-12, a-10)
root(ROOT-0, sin-12)
advmod(sin-12, only-14)
det(set-18, a-16)
amod(set-18, narrowly-focused-17)
prep_in(sin-12, set-18)
prep_of(set-18, values-20)

(ROOT
  (SQ
    (S
      (NP
        (NP (DT The) (JJ real) (NN question))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB ask))))))
      (VP (VBZ is) (, ,)
        (SBAR
          (S
            (S
              (VP (VBG assuming)
                (NP (PRP you))))
            (VP (VBP love)
              (NP (PRP$ your) (JJ own) (JJ individual) (NN life)))))))
    (, ,)
    (SQ (MD would)
      (NP
        (NP (JJ homosexual) (NN behavior))
        (PP (IN on)
          (NP (PRP$ your) (NN part))))
      (VP (VB be)
        (NP
          (NP (DT a) (`` ``) (NN sin) ('' ''))
          (, ,)
          (ADJP (`` ``) (JJ immoral) ('' '')
            (CC or)
            (`` ``) (JJ unethical) ('' '')))
        (PP (VBG according)
          (PP (TO to)
            (NP
              (NP (PRP$ your) (JJ own) (NN set))
              (PP (IN of)
                (NP (NNS values))))))))
    (. ?)))

det(question-3, The-1)
amod(question-3, real-2)
nsubj(is-6, question-3)
aux(ask-5, to-4)
infmod(question-3, ask-5)
dep(sin-25, is-6)
csubj(love-10, assuming-8)
dobj(assuming-8, you-9)
ccomp(is-6, love-10)
poss(life-14, your-11)
amod(life-14, own-12)
amod(life-14, individual-13)
dobj(love-10, life-14)
aux(sin-25, would-16)
amod(behavior-18, homosexual-17)
nsubj(sin-25, behavior-18)
poss(part-21, your-20)
prep_on(behavior-18, part-21)
cop(sin-25, be-22)
det(sin-25, a-23)
root(ROOT-0, sin-25)
amod(sin-25, immoral-29)
conj_or(unethical-33, immoral-29)
amod(sin-25, unethical-33)
prepc_according_to(sin-25, to-36)
poss(set-39, your-37)
amod(set-39, own-38)
pobj(sin-25, set-39)
prep_of(set-39, values-41)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (JJ own) (NN right))
      (PP (TO to)
        (NP (PRP$ your) (NN life))))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP
          (ADVP (RB factually)
            (CC and)
            (RB logically))
          (VBN extended)
          (S
            (VP (TO to)
              (VP (VB justify)
                (S
                  (NP (DT any))
                  (`` ``)
                  (ADJP (JJ right)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN life))
                        (PP (IN of)
                          (NP (DT another))))))
                  ('' ''))))))))
    (. .)))

poss(right-3, Your-1)
amod(right-3, own-2)
nsubjpass(extended-13, right-3)
poss(life-6, your-5)
prep_to(right-3, life-6)
aux(extended-13, can-7)
neg(extended-13, not-8)
auxpass(extended-13, be-9)
advmod(extended-13, factually-10)
conj_and(factually-10, logically-12)
advmod(extended-13, logically-12)
root(ROOT-0, extended-13)
aux(justify-15, to-14)
xcomp(extended-13, justify-15)
dep(right-18, any-16)
dep(justify-15, right-18)
det(life-21, the-20)
prep_to(right-18, life-21)
prep_of(life-21, another-23)

(ROOT
  (S
    (PP (JJ Due) (TO to)
      (NP (NNS circumstances)))
    (PRN (, ,)
      (S
        (NP (PRP one))
        (VP (MD may)
          (VP (VB be)
            (NP (DT a) (NN liberty)
              (S
                (VP (TO to)
                  (VP (VB compel)
                    (NP
                      (NP (DT the) (NN life))
                      (PP (IN of)
                        (NP (DT another))))))))
            (, ,)
            (ADVP (RB however)))))
      (, ,))
    (NP (PRP one))
    (VP (MD can) (RB not)
      (VP (VB have)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB do)
                (ADVP (RB so))))))))
    (. .)))

prep_due_to(have-22, circumstances-3)
nsubj(liberty-9, one-5)
aux(liberty-9, may-6)
cop(liberty-9, be-7)
det(liberty-9, a-8)
parataxis(have-22, liberty-9)
aux(compel-11, to-10)
infmod(liberty-9, compel-11)
det(life-13, the-12)
dobj(compel-11, life-13)
prep_of(life-13, another-15)
advmod(liberty-9, however-17)
nsubj(have-22, one-19)
aux(have-22, can-20)
neg(have-22, not-21)
root(ROOT-0, have-22)
det(right-24, the-23)
dobj(have-22, right-24)
aux(do-26, to-25)
infmod(right-24, do-26)
advmod(do-26, so-27)

(ROOT
  (S
    (NP (DT No) (JJ such) (NN right))
    (VP (VBZ exists))
    (. .)))

det(right-3, No-1)
amod(right-3, such-2)
nsubj(exists-4, right-3)
root(ROOT-0, exists-4)

(ROOT
  (S
    (S
      (NP
        (NP (CD One) (POS 's))
        (JJ own) (NNS values))
      (VP (MD must)
        (VP (VB reign)
          (NP
            (NP (JJ supreme))
            (PP (IN in)
              (NP
                (NP (CD one) (POS 's))
                (JJ own) (NN life))))
          (SBAR (RB even) (IN if)
            (S
              (NP (DT those) (NNS values))
              (VP (VBP are)
                (PP (IN in)
                  (NP
                    (NP (DT some) (NN way))
                    (VP (VBN borrowed)
                      (PP (IN from)
                        (NP
                          (NP (DT the) (NNS values))
                          (PP (IN of)
                            (NP (NNS others)))))
                      (, ,)
                      (ADVP (RB however)))))))))))
    (, ,)
    (NP
      (NP (CD one) (POS 's))
      (JJ own) (NNS values))
    (, ,)
    (ADVP (RB again))
    (, ,)
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP
          (ADVP (RB factually)
            (CC and)
            (RB logically))
          (VBN extended)
          (S
            (VP (TO to)
              (VP (VB become)
                (NP
                  (NP (DT the) (JJ involuntary) (NNS values))
                  (PP (IN of)
                    (NP (DT another))))))))))
    (. .)))

poss(values-4, One-1)
amod(values-4, own-3)
nsubj(reign-6, values-4)
aux(reign-6, must-5)
ccomp(extended-43, reign-6)
dobj(reign-6, supreme-7)
poss(life-12, one-9)
amod(life-12, own-11)
prep_in(supreme-7, life-12)
advmod(are-17, even-13)
dep(are-17, if-14)
det(values-16, those-15)
nsubj(are-17, values-16)
dep(reign-6, are-17)
det(way-20, some-19)
prep_in(are-17, way-20)
partmod(way-20, borrowed-21)
det(values-24, the-23)
prep_from(borrowed-21, values-24)
prep_of(values-24, others-26)
advmod(borrowed-21, however-28)
poss(values-33, one-30)
amod(values-33, own-32)
nsubjpass(extended-43, values-33)
advmod(extended-43, again-35)
aux(extended-43, can-37)
neg(extended-43, not-38)
auxpass(extended-43, be-39)
advmod(extended-43, factually-40)
conj_and(factually-40, logically-42)
advmod(extended-43, logically-42)
root(ROOT-0, extended-43)
aux(values-48, to-44)
cop(values-48, become-45)
det(values-48, the-46)
amod(values-48, involuntary-47)
xcomp(extended-43, values-48)
prep_of(values-48, another-50)

(ROOT
  (S
    (NP (DT That))
    (ADVP (RB homosexuality))
    (VP (VBZ is)
      (ADVP (RB universally))
      (NP
        (NP (DT a) (`` ``) (NN sin) ('' ''))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ narrow) (NN view))
            (PP (IN of)
              (NP (JJ Judeo-Christian-Muslim) (NNS beliefs)))))
        (SBAR
          (S
            (VP (VBZ is)
              (VP (VBN debated)
                (ADVP (RB even))
                (PP (IN among)
                  (NP
                    (NP (NNS members))
                    (PP (IN of)
                      (NP (DT those) (NNS philosophies)))))))))))
    (. .)))

nsubj(sin-7, That-1)
advmod(sin-7, homosexuality-2)
cop(sin-7, is-3)
advmod(sin-7, universally-4)
det(sin-7, a-5)
root(ROOT-0, sin-7)
det(view-12, the-10)
amod(view-12, narrow-11)
prep_in(sin-7, view-12)
amod(beliefs-15, Judeo-Christian-Muslim-14)
prep_of(view-12, beliefs-15)
auxpass(debated-17, is-16)
rcmod(sin-7, debated-17)
advmod(debated-17, even-18)
prep_among(debated-17, members-20)
det(philosophies-23, those-22)
prep_of(members-20, philosophies-23)

(ROOT
  (S
    (NP (DT Those) (NNS beliefs))
    (, ,)
    (NP (DT those) (NNS values))
    (VP
      (VP (VBP are) (RB not)
        (ADJP (JJ universal)))
      (CC and)
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP (VBN argued)
            (PP (IN as)
              (NP (JJ such)))))))
    (. .)))

det(beliefs-2, Those-1)
nsubj(universal-8, beliefs-2)
nsubjpass(argued-13, beliefs-2)
det(values-5, those-4)
nsubj(universal-8, values-5)
cop(universal-8, are-6)
neg(universal-8, not-7)
root(ROOT-0, universal-8)
aux(argued-13, can-10)
neg(argued-13, not-11)
auxpass(argued-13, be-12)
conj_and(universal-8, argued-13)
prep_such_as(argued-13, such-15)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (ADVP (RB homosexuality))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN sin))
        (: ...)
        (PP (TO to)
          (NP (DT some)))))
    (. .)))

dep(sin-6, Yes-1)
advmod(sin-6, homosexuality-3)
cop(sin-6, is-4)
det(sin-6, a-5)
root(ROOT-0, sin-6)
prep_to(sin-6, some-9)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is) (RB n't)
      (PP (TO to)
        (NP (NNS others))))
    (. .)))

dep(is-4, No-1)
nsubj(is-4, it-3)
root(ROOT-0, is-4)
neg(is-4, n't-5)
prep_to(is-4, others-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT an) (JJ ethical) (NN struggle))
            (PP (IN on)
              (NP (DT the) (NN issue)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (SBAR
        (S
          (NP (DT this))
          (VP (VBZ does)
            (SBAR
              (S
                (NP (CD one) (NN individual))
                (VP (VBP have)
                  (NP (DT any) (NN right)
                    (S
                      (VP (TO to)
                        (VP (VB compel)
                          (NP (PRP$ their) (NNS values))
                          (PP (IN onto)
                            (NP (DT another))))))))))))
        (, ,)
        (CC whether)
        (S
          (NP (PRP they))
          (VP (VBP be)
            (PP
              (PP (IN in)
                (NP (NN support)))
              (CC or)
              (PP (IN against)
                (NP (JJ human) (JJ homosexual) (NN behavior))))))))
    (. ?)))

mark(is-3, If-1)
expl(is-3, there-2)
advcl(is-12, is-3)
det(struggle-6, an-4)
amod(struggle-6, ethical-5)
nsubj(is-3, struggle-6)
det(issue-9, the-8)
prep_on(struggle-6, issue-9)
nsubj(is-12, it-11)
root(ROOT-0, is-12)
nsubj(does-14, this-13)
ccomp(is-12, does-14)
num(individual-16, one-15)
nsubj(have-17, individual-16)
ccomp(does-14, have-17)
det(right-19, any-18)
dobj(have-17, right-19)
aux(compel-21, to-20)
infmod(right-19, compel-21)
poss(values-23, their-22)
dobj(compel-21, values-23)
prep_onto(compel-21, another-25)
nsubj(be-29, they-28)
nsubj(be-29', they-28)
ccomp(is-12, be-29)
conj_whether(does-14, be-29)
conj_whether(does-14, be-29')
conj_or(be-29, be-29')
prep_in(be-29, support-31)
amod(behavior-36, human-34)
amod(behavior-36, homosexual-35)
prep_against(be-29', behavior-36)

(ROOT
  (FRAG
    (NP (NNS Facts)
      (CC and)
      (NN logic))
    (VP (VB suggest)
      (NP (DT the) (NN answer))
      (PP (TO to)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ no.)))))))))

root(ROOT-0, Facts-1)
conj_and(Facts-1, logic-3)
dep(Facts-1, suggest-4)
det(answer-6, the-5)
dobj(suggest-4, answer-6)
nsubj(no.-10, that-8)
cop(no.-10, is-9)
prepc_to(suggest-4, no.-10)

(ROOT
  (S
    (NP
      (NP
        (NP (NN Nothing))
        (ADJP (RB genuinely) (JJ factual)))
      (CC and)
      (NP (DT no)
        (ADJP (RB consistently) (JJ logical))
        (NN argument)))
    (VP
      (ADVP (RB thus) (RB far))
      (VBZ leads)
      (PP (TO to)
        (NP (DT the) (NN conclusion)))
      (SBAR (IN that)
        (S
          (NP
            (NP (JJ homosexual) (NN behavior))
            (PP (IN among)
              (NP (JJ human) (NNS beings))))
          (VP (VBZ is)
            (ADJP
              (ADJP (JJ objectively))
              (CC and)
              (ADJP
                (ADVP (RB universally))
                (JJ sinful))
              (, ,)
              (ADJP (JJ immoral))
              (, ,)
              (ADJP (JJ unethical)))))))
    (. .)))

nsubj(leads-11, Nothing-1)
advmod(factual-3, genuinely-2)
amod(Nothing-1, factual-3)
det(argument-8, no-5)
advmod(logical-7, consistently-6)
amod(argument-8, logical-7)
conj_and(Nothing-1, argument-8)
nsubj(leads-11, argument-8)
advmod(far-10, thus-9)
advmod(leads-11, far-10)
root(ROOT-0, leads-11)
det(conclusion-14, the-13)
prep_to(leads-11, conclusion-14)
complm(objectively-22, that-15)
amod(behavior-17, homosexual-16)
nsubj(objectively-22, behavior-17)
nsubj(sinful-25, behavior-17)
nsubj(immoral-27, behavior-17)
nsubj(unethical-29, behavior-17)
amod(beings-20, human-19)
prep_among(behavior-17, beings-20)
cop(objectively-22, is-21)
ccomp(leads-11, objectively-22)
advmod(sinful-25, universally-24)
ccomp(leads-11, sinful-25)
conj_and(objectively-22, sinful-25)
ccomp(leads-11, immoral-27)
conj_and(objectively-22, immoral-27)
ccomp(leads-11, unethical-29)
conj_and(objectively-22, unethical-29)

(ROOT
  (SBARQ
    (S
      (NP (DT The) (NN question))
      (VP (MD must)
        (ADVP (RB always))
        (VP (VB be))))
    (, ,)
    (WHNP (WP what))
    (SQ
      (VP (VBZ does)
        (NP (DT the) (JJ individual) (NN value))))
    (. ?)))

det(question-2, The-1)
nsubj(be-5, question-2)
aux(be-5, must-3)
advmod(be-5, always-4)
dep(does-8, be-5)
dobj(does-8, what-7)
nsubj(does-8, what-7)
root(ROOT-0, does-8)
det(value-11, the-9)
amod(value-11, individual-10)
dobj(does-8, value-11)

(ROOT
  (FRAG (WRB Why) (. ?)))

root(ROOT-0, Why-1)

(ROOT
  (FRAG
    (PP (VBG According)
      (PP (TO to)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ factual)
              (NP (NN information)))))))
    (. ?)))

root(ROOT-0, According-1)
pcomp(According-1, to-2)
nsubj(factual-4, what-3)
prepc_to(According-1, factual-4)
dobj(factual-4, information-5)

(ROOT
  (FRAG
    (PP (VBG According)
      (PP (TO to)
        (NP (WDT what) (NN reason))))
    (. ?)))

root(ROOT-0, According-1)
pcomp(According-1, to-2)
dep(reason-4, what-3)
prep_to(According-1, reason-4)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ Judeo-Christian) (NNS philosophies))
        (CC and)
        (NP (NNS religions)))
      (VP (VBP have)
        (NP (DT a) (JJ long) (NN tradition))
        (, ,)
        (ADVP (RB however))))
    (, ,)
    (CC and)
    (S
      (PP (IN despite)
        (NP
          (NP (DT the) (NNS claims))
          (PP (IN of)
            (NP (PRP$ their) (NNS adherents)))))
      (, ,)
      (NP (PRP they))
      (VP
        (VP (VBP have)
          (ADVP (RB never)))
        (CC and)
        (VP
          (ADVP (RB never))
          (MD will)
          (VP (VB reflect)
            (NP (NN anything))
            (S
              (VP (VBG resembling)
                (NP (JJ authentically) (JJ objective)
                  (CC and)
                  (JJ universal) (NNS values))))))))
    (. .)))

det(philosophies-3, The-1)
amod(philosophies-3, Judeo-Christian-2)
nsubj(have-6, philosophies-3)
conj_and(philosophies-3, religions-5)
nsubj(have-6, religions-5)
root(ROOT-0, have-6)
det(tradition-9, a-7)
amod(tradition-9, long-8)
dobj(have-6, tradition-9)
advmod(have-6, however-11)
det(claims-16, the-15)
prep_despite(have-22, claims-16)
poss(adherents-19, their-18)
prep_of(claims-16, adherents-19)
nsubj(have-22, they-21)
nsubj(reflect-27, they-21)
conj_and(have-6, have-22)
neg(have-22, never-23)
neg(reflect-27, never-25)
aux(reflect-27, will-26)
conj_and(have-6, reflect-27)
conj_and(have-22, reflect-27)
dobj(reflect-27, anything-28)
xcomp(reflect-27, resembling-29)
amod(objective-31, authentically-30)
attr(resembling-29, objective-31)
amod(values-34, universal-33)
attr(resembling-29, values-34)
conj_and(objective-31, values-34)

(ROOT
  (S
    (S
      (NP (PRP They))
      (ADVP (RB therefore))
      (VP (MD can) (RB not)
        (VP (VB speak)
          (PP (IN in)
            (NP
              (NP (JJ universal) (NNS terms))
              (PP (IN in)
                (NP (NN relation)))))
          (PP (TO to)
            (NP (PRP$ their) (JJ own) (NN group) (NN value) (NNS sets))))))
    (, ,)
    (CC nor)
    (SQ (MD can)
      (NP (PRP they))
      (VP
        (ADVP (RB rationally))
        (VB compel)
        (NP (PRP$ their) (NNS values))
        (PP (IN on)
          (NP
            (NP (NNS non-members))
            (PP (IN of)
              (NP (PRP$ their) (JJ respective) (NNS groups)))))))
    (. .)))

nsubj(speak-5, They-1)
advmod(speak-5, therefore-2)
aux(speak-5, can-3)
neg(speak-5, not-4)
root(ROOT-0, speak-5)
amod(terms-8, universal-7)
prep_in(speak-5, terms-8)
prep_in(terms-8, relation-10)
poss(sets-16, their-12)
amod(sets-16, own-13)
nn(sets-16, group-14)
nn(sets-16, value-15)
prep_to(speak-5, sets-16)
aux(compel-22, can-19)
nsubj(compel-22, they-20)
advmod(compel-22, rationally-21)
conj_nor(speak-5, compel-22)
poss(values-24, their-23)
dobj(compel-22, values-24)
prep_on(compel-22, non-members-26)
poss(groups-30, their-28)
amod(groups-30, respective-29)
prep_of(non-members-26, groups-30)

(ROOT
  (S
    (NP
      (NP (JJ Whatever) (NNS rights))
      (NP (CD one)))
    (VP (VBZ has)
      (VP (VBN derives)
        (PP
          (PP (IN from)
            (NP
              (NP (DT the) (NN fact))
              (PP (IN of)
                (NP
                  (NP (CD one) (POS 's))
                  (JJ own) (NN life)))))
          (CC and)
          (PP (IN from)
            (ADVP (RB nowhere) (RB else))))))
    (. .)))

amod(rights-2, Whatever-1)
nsubj(derives-5, rights-2)
dep(rights-2, one-3)
aux(derives-5, has-4)
root(ROOT-0, derives-5)
det(fact-8, the-7)
prep_from(derives-5, fact-8)
poss(life-13, one-10)
amod(life-13, own-12)
prep_of(fact-8, life-13)
advmod(else-17, nowhere-16)
prep_from(derives-5, else-17)
conj_and(fact-8, else-17)

