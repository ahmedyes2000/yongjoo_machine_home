(ROOT
  (S
    (NP (`` ``)
      (NP (DT The) (NN idea))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP have)
            (NP
              (NP (DT a)
                (ADJP
                  (ADVP (RB somehow))
                  (JJR higher))
                (NN knowledge))
              (PP (IN of)
                (NP (NN homosexuality)))))))
      (: --)
      (NP
        (NP (DT a) (NN grasp))
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP it))
              (VP (VBZ means)
                (S
                  (VP (TO to)
                    (VP (VB be) (`` ``)
                      (ADJP (JJ gay))
                      ('' '')
                      (SBAR (IN that)
                        (S
                          (VP (VBZ has) (RB n't)
                            (VP (VBN existed)
                              (PP (IN in)
                                (NP
                                  (NP (DT all))
                                  (PP (IN of)
                                    (NP (JJ human) (NN history)))))))))))))))))
      (, ,))
    (VP (VBZ is)
      (ADJP (JJ arrogant)
        (CC and)
        (JJ self-deceiving)))
    (. .)))

det(idea-3, The-2)
nsubj(arrogant-36, idea-3)
nsubj(self-deceiving-38, idea-3)
complm(have-6, that-4)
nsubj(have-6, we-5)
dep(idea-3, have-6)
det(knowledge-10, a-7)
advmod(higher-9, somehow-8)
amod(knowledge-10, higher-9)
dobj(have-6, knowledge-10)
prep_of(knowledge-10, homosexuality-12)
det(grasp-15, a-14)
dep(idea-3, grasp-15)
dep(means-19, what-17)
nsubj(means-19, it-18)
xsubj(gay-23, it-18)
prepc_of(grasp-15, means-19)
aux(gay-23, to-20)
cop(gay-23, be-21)
xcomp(means-19, gay-23)
complm(existed-28, that-25)
aux(existed-28, has-26)
neg(existed-28, n't-27)
ccomp(gay-23, existed-28)
prep_in(existed-28, all-30)
amod(history-33, human-32)
prep_of(all-30, history-33)
cop(arrogant-36, is-35)
root(ROOT-0, arrogant-36)
conj_and(arrogant-36, self-deceiving-38)

(ROOT
  (S ('' '')
    (ADVP (RB Okay))
    (, ,)
    (NP
      (NP (RB so) (DT the) (NN fact))
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VB progress)
              (PP (IN as)
                (NP (JJ human) (NNS beings))))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBP know)
              (ADVP (RBR more) (RB now))
              (PP (IN about)
                (NP
                  (NP (NNS things))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBD were)
                        (ADJP (VBN misunderstood)
                          (PP (IN in)
                            (NP (DT the) (NN past))))))))))))))
    (VP (VBZ is)
      (ADJP (JJ arrogant)
        (CC and)
        (JJ self-deceiving)))
    (. ?)))

advmod(arrogant-28, Okay-2)
advmod(fact-6, so-4)
det(fact-6, the-5)
nsubj(arrogant-28, fact-6)
nsubj(self-deceiving-30, fact-6)
dep(progress-9, that-7)
nsubj(progress-9, we-8)
dep(fact-6, progress-9)
amod(beings-12, human-11)
prep_as(progress-9, beings-12)
dep(know-16, that-14)
nsubj(know-16, we-15)
dep(fact-6, know-16)
conj_and(progress-9, know-16)
advmod(now-18, more-17)
advmod(know-16, now-18)
prep_about(know-16, things-20)
nsubjpass(misunderstood-23, things-20)
auxpass(misunderstood-23, were-22)
rcmod(things-20, misunderstood-23)
det(past-26, the-25)
prep_in(misunderstood-23, past-26)
cop(arrogant-28, is-27)
root(ROOT-0, arrogant-28)
conj_and(arrogant-28, self-deceiving-30)

(ROOT
  (S
    (NP (NNS Changes))
    (VP (VBP happen)
      (NP (PDT all) (DT the) (NN time)))
    (. .)))

nsubj(happen-2, Changes-1)
root(ROOT-0, happen-2)
predet(time-5, all-3)
det(time-5, the-4)
dobj(happen-2, time-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP do) (RB n't)
          (VP (VB keep)
            (PRT (RP up))
            (PP (IN with)
              (NP (PRP it)))
            (PP (IN as)
              (NP (DT a) (NN society)))))))
    (, ,)
    (NP (PRP we))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB live)
        (PP (IN in)
          (NP (DT the) (NN past)))))
    (. .)))

mark(keep-5, If-1)
nsubj(keep-5, we-2)
aux(keep-5, do-3)
neg(keep-5, n't-4)
advcl(live-16, keep-5)
prt(keep-5, up-6)
prep_with(keep-5, it-8)
det(society-11, a-10)
prep_as(keep-5, society-11)
nsubj(live-16, we-13)
aux(live-16, will-14)
advmod(live-16, always-15)
root(ROOT-0, live-16)
det(past-19, the-18)
prep_in(live-16, past-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP prefer)
      (S
        (VP (TO to)
          (VP (VB go)
            (ADVP (RB forward))
            (, ,)
            (ADVP (RB not) (RB back))))))
    (. .)))

nsubj(prefer-2, I-1)
xsubj(go-4, I-1)
root(ROOT-0, prefer-2)
aux(go-4, to-3)
xcomp(prefer-2, go-4)
advmod(go-4, forward-5)
dep(back-8, not-7)
advmod(go-4, back-8)

(ROOT
  (S
    (NP (NNP Jesus))
    (VP (VBD did)
      (ADVP (RB too))
      (, ,)
      (PP (IN by)
        (NP (DT the) (NN way))))
    (. .)))

nsubj(did-2, Jesus-1)
root(ROOT-0, did-2)
advmod(did-2, too-3)
det(way-7, the-6)
prep_by(did-2, way-7)

(ROOT
  (NP
    (NP (NNP Case))
    (PP (IN in)
      (NP (NN point)))
    (: ...)))

root(ROOT-0, Case-1)
prep_in(Case-1, point-3)

(ROOT
  (S
    (NP (PRP$ My) (NNS grandparents))
    (VP (VBD were)
      (NP (NNP Deaf)))
    (. .)))

poss(grandparents-2, My-1)
nsubj(Deaf-4, grandparents-2)
cop(Deaf-4, were-3)
root(ROOT-0, Deaf-4)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP they))
        (VP (VBD were)
          (VP (VBG growing)
            (PRT (RP up))))))
    (, ,)
    (S
      (VP (VBG being)
        (NP (NNP Deaf))))
    (VP (VBD was)
      (VP (VBN considered)
        (PP
          (NP (DT the) (JJ same))
          (IN as)
          (S
            (VP (VBG being)
              (ADJP (RB mentally) (JJ retarded)))))))
    (. .)))

advmod(growing-4, When-1)
nsubj(growing-4, they-2)
aux(growing-4, were-3)
advcl(considered-10, growing-4)
prt(growing-4, up-5)
cop(Deaf-8, being-7)
csubjpass(considered-10, Deaf-8)
auxpass(considered-10, was-9)
root(ROOT-0, considered-10)
det(same-12, the-11)
npadvmod(considered-10, same-12)
cop(retarded-16, being-14)
advmod(retarded-16, mentally-15)
prepc_as(considered-10, retarded-16)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (VP
        (VP (VBN abused))
        (CC and)
        (VP (VBN treated)
          (SBAR (RB as) (IN though)
            (S
              (NP (PRP they))
              (VP (VBD were)
                (ADJP
                  (ADJP (JJ stupid))
                  (CC and)
                  (ADJP (RB not) (JJ worth)))))))
        (NP (DT a) (JJ whole) (NN lot))
        (PP (TO to)
          (NP (NN society)))))
    (. .)))

nsubjpass(abused-3, They-1)
nsubjpass(treated-5, They-1)
auxpass(abused-3, were-2)
root(ROOT-0, abused-3)
conj_and(abused-3, treated-5)
advmod(stupid-10, as-6)
dep(stupid-10, though-7)
nsubj(stupid-10, they-8)
nsubj(worth-13, they-8)
cop(stupid-10, were-9)
ccomp(treated-5, stupid-10)
neg(worth-13, not-12)
ccomp(treated-5, worth-13)
conj_and(stupid-10, worth-13)
det(lot-16, a-14)
amod(lot-16, whole-15)
dobj(abused-3, lot-16)
prep_to(abused-3, society-18)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP we))
    (VP
      (VP (VBP 've)
        (VP (VBN learned)
          (NP
            (NP (DT a) (NN lot))
            (PP (IN about)
              (NP (NNS deafness))))))
      (CC and)
      (VP (VBP have)
        (VP (VBN come)
          (S
            (VP (TO to)
              (VP (VB understand)
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (VBZ is) (RB n't)
                      (NP
                        (NP (NN something))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ has)
                              (NP (NN anything)
                                (S
                                  (VP (TO to)
                                    (VP (VB do)
                                      (PP (IN with)
                                        (NP (JJ mental) (NN dificiency))))))))))))))))))))
    (. .)))

advmod(learned-5, Now-1)
nsubj(learned-5, we-3)
nsubj(come-12, we-3)
xsubj(understand-14, we-3)
aux(learned-5, 've-4)
root(ROOT-0, learned-5)
det(lot-7, a-6)
dobj(learned-5, lot-7)
prep_about(lot-7, deafness-9)
aux(come-12, have-11)
conj_and(learned-5, come-12)
aux(understand-14, to-13)
xcomp(come-12, understand-14)
complm(something-19, that-15)
nsubj(something-19, it-16)
cop(something-19, is-17)
neg(something-19, n't-18)
ccomp(understand-14, something-19)
nsubj(has-21, something-19)
rcmod(something-19, has-21)
dobj(has-21, anything-22)
aux(do-24, to-23)
infmod(anything-22, do-24)
amod(dificiency-27, mental-26)
prep_with(do-24, dificiency-27)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (DT some) (JJ great) (NNS minds))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP are)
              (VP (VBN located)
                (PP (IN in)
                  (NP
                    (NP (NNS people))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (MD can) (RB not)
                          (VP (VB hear)))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
det(minds-5, some-3)
amod(minds-5, great-4)
nsubj(are-2, minds-5)
nsubjpass(located-8, minds-5)
auxpass(located-8, are-7)
rcmod(minds-5, located-8)
prep_in(located-8, people-10)
nsubj(hear-14, people-10)
aux(hear-14, can-12)
neg(hear-14, not-13)
rcmod(people-10, hear-14)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (RB just) (CD one) (NN example)))
    (. .)))

nsubj(example-5, That-1)
cop(example-5, 's-2)
advmod(example-5, just-3)
num(example-5, one-4)
root(ROOT-0, example-5)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (NN progress))
              (VP (MD should) (RB n't)
                (VP (VB happen)
                  (PP (RB because) (IN of)
                    (NP
                      (NP (PRP$ your) (JJ own) (JJ personal) (NNS views))
                      (PP (IN on)
                        (NP (DT an) (NN issue))))))))))))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (ADJP (JJ arrogant))))))
    (. .)))

aux(say-2, To-1)
csubj(is-17, say-2)
complm(happen-7, that-3)
nsubj(happen-7, progress-4)
aux(happen-7, should-5)
neg(happen-7, n't-6)
ccomp(say-2, happen-7)
poss(views-13, your-10)
amod(views-13, own-11)
amod(views-13, personal-12)
prep_because_of(happen-7, views-13)
det(issue-16, an-15)
prep_on(views-13, issue-16)
root(ROOT-0, is-17)
nsubj(arrogant-20, what-18)
cop(arrogant-20, is-19)
ccomp(is-17, arrogant-20)

