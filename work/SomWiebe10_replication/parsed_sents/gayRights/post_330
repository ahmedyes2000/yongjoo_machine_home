(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (NP (`` ``) (NN sin) ('' ''))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN word))
        (SBAR
          (WHNP (WP$ whose) (NNS definition))
          (S
            (VP (VBZ is)
              (ADJP (JJ subject)
                (PP (TO to)
                  (NP
                    (NP (JJ individual) (NN point))
                    (PP (IN of)
                      (NP (NN view)))))))))))
    (. .)))

prep_of(word-9, course-2)
nsubj(word-9, sin-5)
cop(word-9, is-7)
det(word-9, a-8)
root(ROOT-0, word-9)
poss(definition-11, word-9)
nsubj(subject-13, definition-11)
cop(subject-13, is-12)
rcmod(word-9, subject-13)
amod(point-16, individual-15)
prep_to(subject-13, point-16)
prep_of(point-16, view-18)

(ROOT
  (S ('' '')
    (NP (NNP Sin) (NNP ''))
    (VP (VBZ is)
      (ADJP (RB necessarily) (JJ narrow-minded)))
    (. .)))

nsubj(narrow-minded-6, Sin-2)
cop(narrow-minded-6, is-4)
advmod(narrow-minded-6, necessarily-5)
root(ROOT-0, narrow-minded-6)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP (PRP I))
        (VP (VBP am)
          (NP
            (NP (DT a) (NN member))
            (PP (IN of)
              (NP (`` ``) (NN society) ('' ''))))
          (PP (IN in)
            (NP (JJ general) (NNS means)))
          (SBAR (IN that)
            (S
              (NP (NN society))
              (VP (VBZ approves)
                (PP (IN of)
                  (NP
                    (NP (DT all))
                    (PP (IN of)
                      (NP (PRP$ my) (NNS views)))))))))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (NP (PRP it))
    (ADVP (RB also))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT some) (NNS members))
            (PP (IN of)
              (NP (DT that) (JJ same) (`` ``) (FW society) ('' ''))))
          (VP (VBP do) (RB not)))))
    (. .)))

complm(member-5, That-1)
nsubj(member-5, I-2)
cop(member-5, am-3)
det(member-5, a-4)
ccomp(means-26, member-5)
prep_of(member-5, society-8)
amod(means-12, general-11)
prep_in(member-5, means-12)
complm(approves-15, that-13)
nsubj(approves-15, society-14)
ccomp(member-5, approves-15)
prep_of(approves-15, all-17)
poss(views-20, my-19)
prep_of(all-17, views-20)
advmod(means-26, however-22)
nsubj(means-26, it-24)
advmod(means-26, also-25)
root(ROOT-0, means-26)
complm(do-36, that-27)
det(members-29, some-28)
nsubj(do-36, members-29)
det(society-34, that-31)
amod(society-34, same-32)
prep_of(members-29, society-34)
ccomp(means-26, do-36)
neg(do-36, not-37)

(ROOT
  (S
    (S
      (SBAR (IN That)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (NP
              (NP (DT a) (NN member))
              (PP (IN of)
                (NP (`` ``) (NN society) ('' '')))))))
      (VP (VBZ does) (RB not)
        (VP (VB imply)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP am)
                (NP
                  (NP (DT a) (NN member))
                  (PP (IN of)
                    (NP (`` ``) (NN majority) ('' ''))))))))))
    (CC but)
    (, ,)
    (S
      (S
        (VP (VBG being)
          (NP
            (NP (DT a) (NN member) (NN outside))
            (PP (IN of)
              (NP (DT the) (NN majority))))))
      (VP (VBZ does) (RB not)
        (VP (VB imply)
          (SBAR
            (S
              (NP (PRP$ my) (NN viewpoint))
              (VP (VBZ is)
                (ADJP (JJ incorrect))))))))
    (CC or)
    (S
      (NP
        (NP (DT that))
        (PP (IN of)
          (NP (DT the) (NN majority))))
      (ADVP (RB necessarily))
      (VP (VBP correct)))
    (. .)))

complm(member-5, That-1)
nsubj(member-5, I-2)
cop(member-5, am-3)
det(member-5, a-4)
csubj(imply-12, member-5)
prep_of(member-5, society-8)
aux(imply-12, does-10)
neg(imply-12, not-11)
root(ROOT-0, imply-12)
nsubj(member-16, I-13)
cop(member-16, am-14)
det(member-16, a-15)
ccomp(imply-12, member-16)
prep_of(member-16, majority-19)
cop(outside-26, being-23)
det(outside-26, a-24)
nn(outside-26, member-25)
csubj(imply-32, outside-26)
det(majority-29, the-28)
prep_of(outside-26, majority-29)
aux(imply-32, does-30)
neg(imply-32, not-31)
conj_but(imply-12, imply-32)
poss(viewpoint-34, my-33)
nsubj(incorrect-36, viewpoint-34)
cop(incorrect-36, is-35)
ccomp(imply-32, incorrect-36)
nsubj(correct-43, that-38)
det(majority-41, the-40)
prep_of(that-38, majority-41)
advmod(correct-43, necessarily-42)
conj_or(imply-12, correct-43)

(ROOT
  (S
    (NP (NNP Might))
    (VP
      (VP (VBZ does) (RB not)
        (VP (VB imply)
          (ADVP (RB right))))
      (, ,)
      (CC nor)
      (VP (VBZ does)
        (ADVP (RB right))
        (ADVP (RB necessarily))
        (VP (VB come)
          (PP (IN with)
            (NP (NN might))))))
    (. .)))

nsubj(imply-4, Might-1)
nsubj(come-11, Might-1)
aux(imply-4, does-2)
neg(imply-4, not-3)
root(ROOT-0, imply-4)
advmod(imply-4, right-5)
aux(come-11, does-8)
advmod(come-11, right-9)
advmod(come-11, necessarily-10)
conj_nor(imply-4, come-11)
prep_with(come-11, might-13)

(ROOT
  (S
    (S
      (VP (VBG Being)
        (NP (DT an) (JJ abstract))))
    (, ,)
    (NP (`` ``) (NN society) ('' ''))
    (VP (MD can) (RB neither)
      (VP (VB approve)
        (NP
          (NP (CC nor)
            (NN disapprove))
          (PP (IN of)
            (NP (NN anything))))))
    (. .)))

cop(abstract-3, Being-1)
det(abstract-3, an-2)
partmod(approve-10, abstract-3)
nsubj(approve-10, society-6)
aux(approve-10, can-8)
advmod(approve-10, neither-9)
root(ROOT-0, approve-10)
cc(disapprove-12, nor-11)
dobj(approve-10, disapprove-12)
prep_of(disapprove-12, anything-14)

(ROOT
  (S
    (NP
      (NP (RB Only) (JJ individual) (NNS members))
      (PP (IN of)
        (NP (NN society))))
    (VP (MD can)
      (VP (VB do)
        (NP (DT that))))
    (. .)))

advmod(members-3, Only-1)
amod(members-3, individual-2)
nsubj(do-7, members-3)
prep_of(members-3, society-5)
aux(do-7, can-6)
root(ROOT-0, do-7)
dobj(do-7, that-8)

(ROOT
  (S ('' '')
    (S
      (NP (NNP Society))
      ('' '')
      (VP (VBZ is)
        (ADVP (RB simply))
        (NP (DT a) (NN term)
          (S
            (VP (TO to)
              (VP (VB refer)
                (PP (TO to))))))))
    (RB all)
    (S
      (NP
        (NP (NNS individuals))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP consider)
              (NP (PRP themselves))
              (NP (NNS members))))))
      (PP (IN of)
        (NP (PRP it))))
    (. .)))

nsubj(term-7, Society-2)
cop(term-7, is-4)
advmod(term-7, simply-5)
det(term-7, a-6)
root(ROOT-0, term-7)
aux(refer-9, to-8)
infmod(term-7, refer-9)
prep(refer-9, to-10)
advmod(term-7, all-11)
ccomp(term-7, individuals-12)
nsubj(consider-14, individuals-12)
rcmod(individuals-12, consider-14)
iobj(consider-14, themselves-15)
dobj(consider-14, members-16)
dep(individuals-12, of-17)
pobj(of-17, it-18)

(ROOT
  (S
    (ADVP (DT No) (NN doubt))
    (PRN (, ,)
      (S
        (NP (PRP$ my) (NNS views))
        (VP (VBP exclude)
          (NP (PRP me))
          (PP (IN from)
            (NP
              (NP (PRP$ your) (NN definition))
              (PP (IN of)
                (NP (`` ``) (NN society) ('' '')))))
          (, ,)
          (ADVP (RB however))))
      (, ,))
    (NP (PRP$ your) (NNS views))
    (VP (VBP exclude)
      (NP (PRP you))
      (PP
        (PP (IN from)
          (NP (NN mine)))
        (CC and)
        (PP (IN from)
          (NP (DT the) (NN definition))))
      (PP (IN by)
        (NP
          (NP (NNS others))
          (PP (IN of)
            (NP (DT the) (JJ same))))))
    (. .)))

dep(doubt-2, No-1)
advmod(exclude-20, doubt-2)
poss(views-5, my-4)
nsubj(exclude-6, views-5)
parataxis(exclude-20, exclude-6)
dobj(exclude-6, me-7)
poss(definition-10, your-9)
prep_from(exclude-6, definition-10)
prep_of(definition-10, society-13)
advmod(exclude-6, however-16)
poss(views-19, your-18)
nsubj(exclude-20, views-19)
root(ROOT-0, exclude-20)
dobj(exclude-20, you-21)
prep_from(exclude-20, mine-23)
det(definition-27, the-26)
prep_from(exclude-20, definition-27)
conj_and(mine-23, definition-27)
prep_by(exclude-20, others-29)
det(same-32, the-31)
prep_of(others-29, same-32)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must)
      (ADVP (RB always))
      (VP (VB keep)
        (PP (IN in)
          (NP (NN mind)))
        (SBAR (IN that) (, ,)
          (S
            (SBAR (IN although)
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (NP
                    (NP (DT a) (NN member))
                    (PP (IN of)
                      (NP (DT a) (NN group)))))))
            (, ,)
            (NP (PRP you))
            (VP (MD may)
              (CC or)
              (MD may) (RB not)
              (VP (VB have)
                (NP (DT the) (NN justification)
                  (S
                    (VP (TO to)
                      (VP (VB speak)
                        (PP (IN for)
                          (NP
                            (NP (DT the) (NN group))
                            (PP (IN as)
                              (NP (DT a) (NN whole)))))))))))))))
    (. .)))

nsubj(keep-4, You-1)
aux(keep-4, must-2)
advmod(keep-4, always-3)
root(ROOT-0, keep-4)
prep_in(keep-4, mind-6)
complm(have-23, that-7)
mark(member-13, although-9)
nsubj(member-13, you-10)
cop(member-13, are-11)
det(member-13, a-12)
advcl(have-23, member-13)
det(group-16, a-15)
prep_of(member-13, group-16)
nsubj(have-23, you-18)
aux(have-23, may-19)
ccomp(keep-4, may-21)
aux(have-23, may-21)
conj_or(have-23, may-21)
neg(have-23, not-22)
ccomp(keep-4, have-23)
det(justification-25, the-24)
dobj(have-23, justification-25)
aux(speak-27, to-26)
infmod(justification-25, speak-27)
det(group-30, the-29)
prep_for(speak-27, group-30)
det(whole-33, a-32)
prep_as(group-30, whole-33)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (SBAR
            (SBAR
              (S
                (NP (DT a) (NN thing))
                (VP (TO to)
                  (VP (VB be)
                    (NP (DT a) (`` ``) (NN sin) ('' ''))))))
            (CC or)
            (SBAR (IN because)
              (S
                (NP
                  (NP (DT the) (NN majority))
                  (PP (IN of)
                    (NP (DT a) (NN group))))
                (VP (VBP believe)
                  (SBAR
                    (S
                      (NP (DT a) (NN thing)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (NP (DT a) (NN sin))))))
                      (VP (VBZ does) (RB not)
                        (VP (VB imply)
                          (NP (DT the) (JJ entire) (NN group)))))))))))))
    (VP
      (VP (VBZ believes)
        (S
          (NP (PRP it))
          (VP (TO to)
            (VP (VB be)
              (NP (DT a) (NN sin))))))
      (CC or)
      (VP (MD must)))
    (. .)))

mark(believe-3, Because-1)
nsubj(believe-3, you-2)
csubj(believes-32, believe-3)
det(thing-5, a-4)
nsubj(sin-10, thing-5)
aux(sin-10, to-6)
cop(sin-10, be-7)
det(sin-10, a-8)
dep(believe-3, sin-10)
mark(believe-19, because-13)
det(majority-15, the-14)
nsubj(believe-19, majority-15)
det(group-18, a-17)
prep_of(majority-15, group-18)
dep(believe-3, believe-19)
conj_or(sin-10, believe-19)
det(thing-21, a-20)
nsubj(imply-28, thing-21)
aux(sin-25, to-22)
cop(sin-25, be-23)
det(sin-25, a-24)
infmod(thing-21, sin-25)
aux(imply-28, does-26)
neg(imply-28, not-27)
ccomp(believe-19, imply-28)
det(group-31, the-29)
amod(group-31, entire-30)
dobj(imply-28, group-31)
root(ROOT-0, believes-32)
nsubj(sin-37, it-33)
aux(sin-37, to-34)
cop(sin-37, be-35)
det(sin-37, a-36)
xcomp(believes-32, sin-37)
conj_or(believes-32, must-39)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP
          (NP (PRP you))
          (CC or)
          (ADVP (RB even))
          (NP (JJS most)))
        (VP (VBP consider)
          (SBAR
            (S
              (NP (`` ``) (NN sin) ('' ''))
              (VP (VBZ is)
                (NP (DT no) (NN implication))))))))
    (NP (DT an) (NN individual))
    (VP
      (VP (VBZ does))
      (CC or)
      (VP (VBP MUST)
        (VP
          (VP (VB define)
            (S
              (NP (PRP it))
              (NP (DT the) (JJ same) (NN way))))
          (CC or)
          (ADVP (RB even))
          (VP (VB use)
            (NP (DT the) (NN term))
            (ADVP (IN at) (DT all))))))
    (. .)))

dep(consider-6, What-1)
dobj(implication-12, What-1)
nsubj(consider-6, you-2)
advmod(you-2, even-4)
conj_or(you-2, even-4)
nsubj(consider-6, even-4)
conj_or(you-2, most-5)
nsubj(consider-6, most-5)
dep(does-15, consider-6)
nsubj(implication-12, sin-8)
cop(implication-12, is-10)
det(implication-12, no-11)
ccomp(consider-6, implication-12)
det(individual-14, an-13)
nsubj(does-15, individual-14)
nsubj(define-18, individual-14)
root(ROOT-0, does-15)
aux(define-18, MUST-17)
conj_or(does-15, define-18)
nsubj(way-22, it-19)
det(way-22, the-20)
amod(way-22, same-21)
xcomp(define-18, way-22)
conj_or(does-15, even-24)
advmod(define-18, even-24)
conj_or(define-18, even-24)
conj_or(does-15, use-25)
conj_or(define-18, use-25)
det(term-27, the-26)
dobj(use-25, term-27)
advmod(use-25, at-28)
pobj(at-28, all-29)

(ROOT
  (S
    (NP (PRP I))
    (NP (PRP myself))
    (VP (VBP have)
      (NP
        (NP (DT no) (NN need))
        (PP (IN of)
          (NP
            (NP (DT the) (NN concept))
            (PP (IN of)
              (NP (`` ``) (NN sin) ('' '')))))))
    (. .)))

nsubj(have-3, I-1)
nsubj(have-3, myself-2)
root(ROOT-0, have-3)
det(need-5, no-4)
dobj(have-3, need-5)
det(concept-8, the-7)
prep_of(need-5, concept-8)
prep_of(concept-8, sin-11)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ my) (NN view)))
    (, ,)
    (PP (IN in)
      (NP
        (NP (NN light))
        (PP (IN of)
          (NP (NN fact)
            (CC and)
            (NN logic)))
        (, ,)
        (PP (IN in)
          (NP
            (NP
              (NP (NN light))
              (PP (IN of)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP I))
                    (VP (VBP value))))))
            (CC and)
            (NP (PRP$ my) (JJ own) (JJ personal) (NNS goals))))))
    (, ,)
    (NP (DT a) (NN thing))
    (VP (VBZ is)
      (ADJP (DT either) (JJ rational)
        (CC or)
        (JJ irrational)))
    (. .)))

poss(view-3, my-2)
prep_in(rational-28, view-3)
prep_in(rational-28, light-6)
prep_of(light-6, fact-8)
prep_of(light-6, logic-10)
conj_and(fact-8, logic-10)
prep_in(light-6, light-13)
dobj(value-17, what-15)
nsubj(value-17, I-16)
prepc_of(light-13, value-17)
poss(goals-22, my-19)
amod(goals-22, own-20)
amod(goals-22, personal-21)
prep_in(light-6, goals-22)
conj_and(light-13, goals-22)
det(thing-25, a-24)
nsubj(rational-28, thing-25)
nsubj(irrational-30, thing-25)
cop(rational-28, is-26)
preconj(rational-28, either-27)
root(ROOT-0, rational-28)
conj_or(rational-28, irrational-30)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBD were)
          (NP
            (NP (DT a) (`` ``) (NN sin) ('' ''))
            (PP (IN in)
              (NP (PRP$ my) (NN view)))))))
    (PRN (, ,)
      (S
        (NP (PRP it))
        (VP (MD would)
          (VP (VB be)
            (ADJP (NN anything)
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP think))))))))
      (, ,))
    (VP (VBP feel) (, ,) (VBP say)
      (CC or)
      (VBP do)
      (NP
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ contradicts)
              (NP (PRP$ my) (JJ own) (NNS values)))))
        (CC and)
        (NP (NNS goals))))
    (. .)))

mark(were-3, If-1)
expl(were-3, there-2)
advcl(feel-19, were-3)
csubj(feel-19, were-3)
csubj(say-21, were-3)
csubj(do-23, were-3)
det(sin-6, a-4)
nsubj(were-3, sin-6)
poss(view-10, my-9)
prep_in(sin-6, view-10)
nsubj(anything-15, it-12)
aux(anything-15, would-13)
cop(anything-15, be-14)
parataxis(feel-19, anything-15)
nsubj(think-17, I-16)
dep(anything-15, think-17)
root(ROOT-0, feel-19)
conj_or(feel-19, say-21)
conj_or(feel-19, do-23)
nsubj(contradicts-25, that-24)
dobj(feel-19, contradicts-25)
poss(values-28, my-26)
amod(values-28, own-27)
dobj(contradicts-25, values-28)
dobj(feel-19, goals-30)
conj_and(contradicts-25, goals-30)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (MD may)
          (CC or)
          (MD may) (RB not)
          (VP (VB be)
            (NP
              (NP (DT a) (`` ``) (NN sin) ('' ''))
              (PP (IN in)
                (NP
                  (NP (PRP$ my) (NN book))
                  (PP (IN in)
                    (NP (DT no) (NN way))))))))))
    (VP (VBZ implies)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP
            (VP (VBZ is))
            (CC or)
            (VP (MD must)
              (VP (VB be)
                (PP (TO to)
                  (NP (DT another)))))))))
    (. .)))

nsubj(sin-9, What-1)
aux(sin-9, may-2)
aux(sin-9, may-4)
conj_or(sin-9, may-4)
csubj(implies-17, may-4)
neg(sin-9, not-5)
cop(sin-9, be-6)
det(sin-9, a-7)
csubj(implies-17, sin-9)
poss(book-13, my-12)
prep_in(sin-9, book-13)
det(way-16, no-15)
prep_in(book-13, way-16)
root(ROOT-0, implies-17)
dobj(is-20, what-18)
nsubj(is-20, it-19)
nsubj(be-23, it-19)
ccomp(implies-17, is-20)
aux(be-23, must-22)
ccomp(implies-17, be-23)
conj_or(is-20, be-23)
prep_to(be-23, another-25)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (ADVP (DT no) (NN doubt))
        (NP
          (NP (NNS values)
            (CC and)
            (NNS goals))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP hold)))))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (MD would)
              (VP (VB judge)
                (PP (IN as) (`` ``)
                  (ADJP (JJ sinful))
                  ('' ''))
                (PP (IN in)
                  (NP (PRP$ my) (NN view)))))))
        (, ,)
        (ADVP (RB however))))
    (, ,)
    (NP (PRP$ my) (NN view))
    (VP (VBZ is)
      (ADVP (DT no) (RBR more))
      (NP
        (NP (DT an) (NN imperative))
        (PP (IN in)
          (NP (PRP$ your) (NN life))))
      (SBAR (IN than)
        (S
          (NP (PRP$ yours))
          (VP (VBZ is)
            (PP (IN in)
              (NP
                (NP (NN mine))
                (CC or)
                (NP
                  (NP (DT the) (NNS lives))
                  (PP (IN of)
                    (NP (NNS others))))))))))
    (. .)))

expl(are-2, There-1)
ccomp(is-26, are-2)
dep(doubt-4, no-3)
advmod(are-2, doubt-4)
nsubj(are-2, values-5)
dobj(hold-9, values-5)
nsubj(are-2, goals-7)
conj_and(values-5, goals-7)
dobj(hold-9, goals-7)
nsubj(hold-9, you-8)
rcmod(values-5, hold-9)
complm(judge-13, that-10)
nsubj(judge-13, I-11)
aux(judge-13, would-12)
ccomp(are-2, judge-13)
prep_as(judge-13, sinful-16)
poss(view-20, my-19)
prep_in(judge-13, view-20)
advmod(are-2, however-22)
poss(view-25, my-24)
nsubj(is-26, view-25)
root(ROOT-0, is-26)
dep(more-28, no-27)
advmod(is-26, more-28)
det(imperative-30, an-29)
attr(is-26, imperative-30)
poss(life-33, your-32)
prep_in(imperative-30, life-33)
mark(is-36, than-34)
nsubj(is-36, yours-35)
advcl(is-26, is-36)
prep_in(is-36, mine-38)
det(lives-41, the-40)
prep_in(is-36, lives-41)
conj_or(mine-38, lives-41)
prep_of(lives-41, others-43)

(ROOT
  (S
    (VP (VB Keep)
      (PP (IN in)
        (NP
          (NP (NN mind)
            (UCP
              (S
                (NP (DT the) (NN fact))
                (NP
                  (NP (DT that) (`` ``) (NN society) ('' ''))
                  (, ,)
                  (PP (IN in)
                    (NP (NN general)))))
              (CC and)
              (SBAR (IN as)
                (S
                  (NP (PRP you))
                  (VP (VBP seem)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBG using)
                            (SBAR
                              (S
                                (NP (PRP it))
                                (, ,)
                                (ADVP (RB necessarily))
                                (VP (VBZ includes)
                                  (NP (NNP ALL) (NNS views)))))
                            (, ,)
                            (FRAG (RB not)
                              (ADVP (RB simply)))))))))))
            (NN yours))
          (CC or)
          (NP
            (NP (DT those))
            (PP (IN of)
              (NP (DT the) (NN abstract) (`` ``) (NN majority) ('' '')))))))
    (. .)))

root(ROOT-0, Keep-1)
nn(yours-29, mind-3)
det(fact-5, the-4)
dep(society-8, fact-5)
det(society-8, that-6)
dep(yours-29, society-8)
prep_in(society-8, general-12)
mark(seem-16, as-14)
nsubj(seem-16, you-15)
xsubj(using-19, you-15)
conj_and(society-8, seem-16)
dep(yours-29, seem-16)
aux(using-19, to-17)
aux(using-19, be-18)
xcomp(seem-16, using-19)
nsubj(includes-23, it-20)
advmod(includes-23, necessarily-22)
ccomp(using-19, includes-23)
nn(views-25, ALL-24)
dobj(includes-23, views-25)
dep(using-19, not-27)
dep(not-27, simply-28)
prep_in(Keep-1, yours-29)
prep_in(Keep-1, those-31)
conj_or(yours-29, those-31)
det(majority-36, the-33)
nn(majority-36, abstract-34)
prep_of(those-31, majority-36)

(ROOT
  (S ('' '')
    (S
      (NP (NNP Majority))
      ('' '')
      (VP (VBZ does)))
    (RB not)
    (S
      (S
        (VP (VB equate)
          (PP (TO to) (`` ``)
            (NP (NN society))
            ('' ''))
          (SBAR (IN although)
            (S
              (NP (DT every) (NN society))
              (ADVP (RB indeed))
              (VP (VBZ has)
                (NP (DT a) (NN majority) (NN opinion)))))))
      (NP (DT that))
      (VP (VBZ is)
        (ADVP (RB continually))
        (VP (VBG changing))))
    (. .)))

nsubj(does-4, Majority-2)
root(ROOT-0, does-4)
neg(does-4, not-5)
dep(changing-22, equate-6)
prep_to(equate-6, society-9)
mark(has-15, although-11)
det(society-13, every-12)
nsubj(has-15, society-13)
advmod(has-15, indeed-14)
advcl(equate-6, has-15)
det(opinion-18, a-16)
nn(opinion-18, majority-17)
dobj(has-15, opinion-18)
nsubj(changing-22, that-19)
aux(changing-22, is-20)
advmod(changing-22, continually-21)
ccomp(does-4, changing-22)

