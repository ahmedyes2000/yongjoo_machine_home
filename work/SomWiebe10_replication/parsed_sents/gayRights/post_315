(ROOT
  (S
    (NP
      (NP (DT Every) (NN one))
      (VP (VBN born)))
    (VP (VBZ is)
      (ADJP (JJ prone)
        (PP (TO to)
          (NP
            (NP (NN something))
            (CC or)
            (NP (DT the) (JJ other))))))
    (. .)))

det(one-2, Every-1)
nsubj(prone-5, one-2)
partmod(one-2, born-3)
cop(prone-5, is-4)
root(ROOT-0, prone-5)
prep_to(prone-5, something-7)
det(other-10, the-9)
prep_to(prone-5, other-10)
conj_or(something-7, other-10)

(ROOT
  (S
    (S
      (NP (NNS People))
      (VP (VBP are)
        (VP (VBN born)
          (S
            (ADJP (JJ prone)
              (PP (TO to)
                (NP (JJ same) (NN sex) (NNS attractions))))))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP choose)
        (S
          (VP (TO to)
            (VP (VB give)
              (PP (IN into)
                (NP (PRP it))))))))
    (. .)))

nsubjpass(born-3, People-1)
auxpass(born-3, are-2)
root(ROOT-0, born-3)
acomp(born-3, prone-4)
amod(attractions-8, same-6)
nn(attractions-8, sex-7)
prep_to(prone-4, attractions-8)
nsubj(choose-11, they-10)
xsubj(give-13, they-10)
conj_and(born-3, choose-11)
aux(give-13, to-12)
xcomp(choose-11, give-13)
prep_into(give-13, it-15)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS people))
        (VP (VBN born)
          (S
            (ADJP (JJ prone)
              (PP (TO to)
                (NP
                  (NP (NN sex) (NN addiction))
                  (, ,)
                  (NP (NN alcoholism))
                  (, ,)
                  (NP (NN obesity))
                  (CC and)
                  (NP (NNP ETC.)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, people-3)
partmod(people-3, born-4)
acomp(born-4, prone-5)
nn(addiction-8, sex-7)
prep_to(prone-5, addiction-8)
prep_to(prone-5, alcoholism-10)
conj_and(addiction-8, alcoholism-10)
prep_to(prone-5, obesity-12)
conj_and(addiction-8, obesity-12)
prep_to(prone-5, ETC.-14)
conj_and(addiction-8, ETC.-14)

(ROOT
  (S
    (NP (PRP We))
    (ADVP (DT all))
    (VP (VBP have)
      (NP (JJ certain) (NNS desires)
        (CC and)
        (NNS tendencies))
      (PP (IN toward)
        (NP (JJ specific) (NNS problems))))
    (. .)))

nsubj(have-3, We-1)
advmod(have-3, all-2)
root(ROOT-0, have-3)
amod(desires-5, certain-4)
dobj(have-3, desires-5)
dobj(have-3, tendencies-7)
conj_and(desires-5, tendencies-7)
amod(problems-10, specific-9)
prep_toward(have-3, problems-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB control)
              (NP (PRP$ my) (NNS desires))
              (PP (IN for)
                (NP
                  (NP (NN sex))
                  (PP (IN with)
                    (NP (JJ other) (NNS women))))))))))
    (CC or)
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB be)
          (VP (VBN married)
            (ADVP (RB very) (RB long))))))
    (. .)))

nsubj(have-2, I-1)
xsubj(control-4, I-1)
root(ROOT-0, have-2)
aux(control-4, to-3)
xcomp(have-2, control-4)
poss(desires-6, my-5)
dobj(control-4, desires-6)
prep_for(control-4, sex-8)
amod(women-11, other-10)
prep_with(sex-8, women-11)
nsubjpass(married-17, I-13)
aux(married-17, will-14)
neg(married-17, not-15)
auxpass(married-17, be-16)
conj_or(have-2, married-17)
advmod(long-19, very-18)
advmod(married-17, long-19)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP give)
          (PP (IN in)
            (PP (TO to)
              (NP (PRP$ my) (NNS desires))))
          (SBAR (IN than)
            (S
              (NP (PRP I))
              (VP (VBP am)
                (VP (VBN hooked)
                  (CC and)
                  (VBN become))))))))
    (VP (VBD enslaved)
      (PP (TO to)
        (NP (PRP it))))
    (. .)))

mark(give-3, If-1)
nsubj(give-3, I-2)
csubj(enslaved-14, give-3)
prep(give-3, in-4)
pcomp(in-4, to-5)
poss(desires-7, my-6)
prep_to(in-4, desires-7)
mark(hooked-11, than-8)
nsubjpass(hooked-11, I-9)
nsubjpass(become-13, I-9)
auxpass(hooked-11, am-10)
advcl(give-3, hooked-11)
advcl(give-3, become-13)
conj_and(hooked-11, become-13)
root(ROOT-0, enslaved-14)
prep_to(enslaved-14, it-16)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP (VB control)
        (NP (PRP it))))
    (: ...)))

nsubj(control-3, We-1)
aux(control-3, can-2)
root(ROOT-0, control-3)
dobj(control-3, it-4)

(ROOT
  (NP (FW .) (. .)))


(ROOT
  (NP
    (NP (JJ same) (NN sex))
    (NP
      (NP (NNS attractions))
      (CC or)
      (NP (JJ opposite) (NN sex) (NNS attractions)))
    (. .)))

amod(sex-2, same-1)
root(ROOT-0, sex-2)
dep(sex-2, attractions-3)
amod(attractions-7, opposite-5)
nn(attractions-7, sex-6)
dep(sex-2, attractions-7)
conj_or(attractions-3, attractions-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP say)
      (SBAR
        (S
          (NP (NN religion))
          (VP (VBZ is)
            (NP (DT a) (NN scam))))))
    (. .)))

nsubj(say-2, You-1)
root(ROOT-0, say-2)
nsubj(scam-6, religion-3)
cop(scam-6, is-4)
det(scam-6, a-5)
ccomp(say-2, scam-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP say)
        (SBAR
          (S
            (NP (NN religion))
            (VP (VBZ is)
              (ADJP (JJ dangerous)))))))
    (, ,)
    (CC but)
    (S
      (NP (JJ true) (NNS Christianity))
      (VP (VBZ is) (RB not)
        (NP (NN religion))
        (, ,)
        (SBAR (IN although)
          (S
            (NP (EX there))
            (VP (VBP are)
              (NP
                (NP (DT some))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP make)
                      (NP (NN religion))
                      (PRT (RP out))
                      (PP (IN of)
                        (NP (PRP it))))))))))))
    (. .)))

nsubj(say-2, I-1)
root(ROOT-0, say-2)
nsubj(dangerous-5, religion-3)
cop(dangerous-5, is-4)
ccomp(say-2, dangerous-5)
amod(Christianity-9, true-8)
nsubj(religion-12, Christianity-9)
cop(religion-12, is-10)
neg(religion-12, not-11)
conj_but(say-2, religion-12)
mark(are-16, although-14)
expl(are-16, there-15)
advcl(religion-12, are-16)
nsubj(are-16, some-17)
nsubj(make-19, some-17)
rcmod(some-17, make-19)
dobj(make-19, religion-20)
prep_out_of(make-19, it-23)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (DT the) (NN problem))
          (VP (VBZ comes)
            (PRT (RP in))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
advmod(comes-6, where-3)
det(problem-5, the-4)
nsubj(comes-6, problem-5)
advcl(is-2, comes-6)
prt(comes-6, in-7)

