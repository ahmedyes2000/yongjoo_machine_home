(ROOT
  (S
    (NP
      (NP (NNP Children))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP grow)
            (PRT (RP up))
            (PP (IN with)
              (NP (JJ single) (NNS parents)))))))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT no) (JJ different) (JJ then) (NNS children))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP grow)
                (PRT (RP up))
                (PP (IN with)
                  (NP (CD two) (NNS fathers)))))))
        (, ,)
        (CC or)
        (NP (CD two) (NNS mothers))))
    (. .)))

nsubj(grow-3, Children-1)
nsubj(children-12, Children-1)
rcmod(Children-1, grow-3)
prt(grow-3, up-4)
amod(parents-7, single-6)
prep_with(grow-3, parents-7)
cop(children-12, is-8)
det(children-12, no-9)
amod(children-12, different-10)
amod(children-12, then-11)
root(ROOT-0, children-12)
nsubj(grow-14, children-12)
rcmod(children-12, grow-14)
prt(grow-14, up-15)
num(fathers-18, two-17)
prep_with(grow-14, fathers-18)
num(mothers-22, two-21)
conj_or(children-12, mothers-22)
nsubj(grow-14, mothers-22)

(ROOT
  (S
    (NP (NNP Sexuality))
    (VP (VBZ does) (RB n't)
      (VP (VB change)
        (NP
          (NP (DT the) (NN person))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP are)))))))
    (. .)))

nsubj(change-4, Sexuality-1)
aux(change-4, does-2)
neg(change-4, n't-3)
root(ROOT-0, change-4)
det(person-6, the-5)
dobj(change-4, person-6)
nsubj(are-8, you-7)
rcmod(person-6, are-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ bi))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADVP (RB still))
        (NP
          (NP (DT the) (JJ same) (NN person))
          (SBAR (IN that)
            (S
              (NP (NN everybody))
              (VP (VBD knew)
                (NP (PRP me))
                (SBAR (RB as) (IN before)
                  (S
                    (NP (PRP they))
                    (VP (VBD knew)
                      (SBAR
                        (S
                          (NP (FW i))
                          (VP (VBD was)
                            (VP (VBN bi))))))))))))))
    (. .)))

nsubj(bi-3, I-1)
cop(bi-3, 'm-2)
root(ROOT-0, bi-3)
nsubj(person-11, I-6)
cop(person-11, 'm-7)
advmod(person-11, still-8)
det(person-11, the-9)
amod(person-11, same-10)
conj_and(bi-3, person-11)
complm(knew-14, that-12)
nsubj(knew-14, everybody-13)
dep(person-11, knew-14)
dobj(knew-14, me-15)
advmod(knew-19, as-16)
dep(knew-19, before-17)
nsubj(knew-19, they-18)
dep(knew-14, knew-19)
nsubjpass(bi-22, i-20)
auxpass(bi-22, was-21)
ccomp(knew-19, bi-22)

(ROOT
  (S (IN So)
    (SBAR (IN if)
      (S
        (S
          (NP (PRP I))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB get)
                  (NP (DT a) (NN girlfriend)))))))
        (, ,)
        (CC and)
        (S
          (S
            (NP (PRP we))
            (VP (VBD got)
              (ADJP (JJ married))))
          (, ,)
          (CC and)
          (S
            (NP (PRP we))
            (VP (VBD wanted)
              (NP (DT a) (NN child)))))))
    (, ,)
    (NP (PRP we))
    (VP (MD could) (RB n't)
      (VP (VB get)
        (NP (CD one))
        (SBAR (IN because)
          (S
            (NP (PRP we))
            (VP (VBP 're)
              (NP (DT both) (NNS females)))))))
    (. ?)))

dep(get-24, So-1)
mark(were-4, if-2)
nsubj(were-4, I-3)
xsubj(get-6, I-3)
advcl(get-24, were-4)
aux(get-6, to-5)
xcomp(were-4, get-6)
det(girlfriend-8, a-7)
dobj(get-6, girlfriend-8)
nsubj(married-13, we-11)
dep(married-13, got-12)
conj_and(were-4, married-13)
advcl(get-24, married-13)
nsubj(wanted-17, we-16)
conj_and(were-4, wanted-17)
conj_and(married-13, wanted-17)
det(child-19, a-18)
dobj(wanted-17, child-19)
nsubj(get-24, we-21)
aux(get-24, could-22)
neg(get-24, n't-23)
root(ROOT-0, get-24)
dobj(get-24, one-25)
mark(females-30, because-26)
nsubj(females-30, we-27)
cop(females-30, 're-28)
det(females-30, both-29)
advcl(get-24, females-30)

(ROOT
  (S
    (NP (JJ becuase) (NNS people))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (SBAR
          (S
            (NP (DT the) (NN child))
            (VP (MD would)
              (VP (VB grow)
                (PRT (RP up))
                (PP (IN like)
                  (NP (DT any) (JJ other) (NN child)))))))))
    (. ?)))

amod(people-2, becuase-1)
nsubj(think-5, people-2)
aux(think-5, do-3)
neg(think-5, n't-4)
root(ROOT-0, think-5)
det(child-7, the-6)
nsubj(grow-9, child-7)
aux(grow-9, would-8)
ccomp(think-5, grow-9)
prt(grow-9, up-10)
det(child-14, any-12)
amod(child-14, other-13)
prep_like(grow-9, child-14)

(ROOT
  (FRAG
    (SBAR (IN because)
      (S
        (NP (NNS people))
        (VP (VBP think)
          (SBAR (IN that)
            (S
              (NP (PRP we))
              (VP (VBP are)
                (NP
                  (NP (DT a) (NN disadvantage))
                  (PP (IN for)
                    (NP (DT that) (NN child))))))))))
    (. ?)))

mark(think-3, because-1)
nsubj(think-3, people-2)
root(ROOT-0, think-3)
complm(disadvantage-8, that-4)
nsubj(disadvantage-8, we-5)
cop(disadvantage-8, are-6)
det(disadvantage-8, a-7)
ccomp(think-3, disadvantage-8)
det(child-11, that-10)
prep_for(disadvantage-8, child-11)

(ROOT
  (S
    (S
      (NP (PRP$ your) (JJ exact) (NNS words))
      (VP (VBP are) (`` ``)
        (NP
          (NP (NNS children))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP grow)
                (ADVP (RB up)
                  (PP (IN in)
                    (NP (DT any) (JJ other) (NN family) (NN form))))
                (NP
                  (NP (JJ single) (NN parent) (NN family))
                  (, ,)
                  (VP (VBN divorced))
                  (, ,)
                  (SBAR
                    (S
                      (NP
                        (NP (NN step) (NN family))
                        (, ,)
                        (CC or)
                        (NP (JJ co-habiting) (NNS parents) (NN dont))
                        ('' ''))
                      (VP (VBP do)
                        (ADVP
                          (ADVP (RB as) (RB well))
                          (PP (IN by)
                            (NP
                              (QP (RB up) (TO to) (NN half)))
                            (PP (IN in)
                              (NP (DT these) (NNS measures)))))
                        (PP (VBN compared)
                          (PP (TO to)
                            (NP
                              (NP (NNS children))
                              (VP (VBG living)
                                (PP (IN with)
                                  (NP
                                    (NP (PRP$ their) (JJ own) (JJ married) (NN mother))
                                    (CC and)
                                    (NP (NN father))))))))))))
                ('' '')))))))
    (PRN
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB think)
            (SBAR (IN that)
              (S
                (S
                  (VP (VBG having)
                    (NP (JJ same) (NN sex) (NNS parents))))
                (VP (VBP are)
                  (ADJP (RB any) (JJ different))
                  (PP (RB then)
                    (S
                      (VP (VBG having)
                        (S
                          (NP
                            (NP (JJ opposite) (NN sex) (NNS parents))
                            (, ,)
                            (NP (NN ok))
                            (, ,))
                          (VP (VB yeah)
                            (S
                              (NP (PRP$ their))
                              (NP (DT the) (JJ same) (NN sex))))))))))))))
      (, ,)
      (S
        (NP (PRP they))
        (VP (VBP have)
          (NP (DT the) (JJ same) (NNS parts))))
      (, ,))
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (VP (VB matter))))
    (. .)))

poss(words-3, your-1)
amod(words-3, exact-2)
nsubj(children-6, words-3)
cop(children-6, are-4)
root(ROOT-0, children-6)
nsubj(grow-8, children-6)
rcmod(children-6, grow-8)
advmod(grow-8, up-9)
det(form-14, any-11)
amod(form-14, other-12)
nn(form-14, family-13)
prep_in(up-9, form-14)
amod(family-17, single-15)
nn(family-17, parent-16)
dobj(grow-8, family-17)
dobj(do-29, family-17)
partmod(family-17, divorced-19)
nn(family-22, step-21)
nsubj(do-29, family-22)
amod(dont-27, co-habiting-25)
nn(dont-27, parents-26)
conj_or(family-22, dont-27)
nsubj(do-29, dont-27)
rcmod(family-17, do-29)
advmod(well-31, as-30)
mwe(well-31, as-30)
advmod(do-29, well-31)
quantmod(half-35, up-33)
dep(half-35, to-34)
prep_by(well-31, half-35)
det(measures-38, these-37)
prep_in(well-31, measures-38)
prepc_compared_to(do-29, to-40)
pobj(do-29, children-41)
partmod(children-41, living-42)
poss(mother-47, their-44)
amod(mother-47, own-45)
amod(mother-47, married-46)
prep_with(living-42, mother-47)
prep_with(living-42, father-49)
conj_and(mother-47, father-49)
nsubj(think-54, I-51)
aux(think-54, do-52)
neg(think-54, n't-53)
dep(children-6, think-54)
complm(different-62, that-55)
csubj(different-62, having-56)
amod(parents-59, same-57)
nn(parents-59, sex-58)
dobj(having-56, parents-59)
cop(different-62, are-60)
advmod(different-62, any-61)
ccomp(think-54, different-62)
prep(different-62, then-63)
dep(then-63, having-64)
amod(parents-67, opposite-65)
nn(parents-67, sex-66)
nsubj(yeah-71, parents-67)
appos(parents-67, ok-69)
ccomp(having-64, yeah-71)
nsubj(sex-75, their-72)
det(sex-75, the-73)
amod(sex-75, same-74)
xcomp(yeah-71, sex-75)
nsubj(have-78, they-77)
dep(think-54, have-78)
det(parts-81, the-79)
amod(parts-81, same-80)
dobj(have-78, parts-81)
nsubj(matter-87, it-84)
aux(matter-87, does-85)
neg(matter-87, n't-86)
conj_but(children-6, matter-87)
nsubj(grow-8, matter-87)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD can)
        (ADVP (RB still))
        (VP (VB provide)
          (NP (DT the) (NN money)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (NN home))
        (CC and)
        (NP (NN everything) (RB else)))
      (VP (VBD needed)
        (SBAR (RB just) (RB as) (RB much) (IN as)
          (S
            (NP (DT an) (JJ opposite) (NN sex) (NN couple))
            (VP (MD can))))))
    (. .)))

nsubj(provide-4, They-1)
aux(provide-4, can-2)
advmod(provide-4, still-3)
root(ROOT-0, provide-4)
det(money-6, the-5)
dobj(provide-4, money-6)
det(home-10, the-9)
nsubj(needed-14, home-10)
conj_and(home-10, everything-12)
nsubj(needed-14, everything-12)
advmod(everything-12, else-13)
conj_and(provide-4, needed-14)
advmod(can-23, just-15)
advmod(can-23, as-16)
advmod(can-23, much-17)
dep(can-23, as-18)
det(couple-22, an-19)
amod(couple-22, opposite-20)
nn(couple-22, sex-21)
nsubj(can-23, couple-22)
ccomp(needed-14, can-23)

