(ROOT
  (S (`` ``)
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBD stated)
          (PP (IN in)
            (NP (PRP$ my) (JJ previous) (NN argument))))))
    (NP
      (NP (DT the) (NN practice))
      (PP (IN of)
        (NP
          (NP (JJ legal) (NN recognition))
          (PP (IN of)
            (NP
              (NP (NNS aspects))
              (PP (IN of)
                (NP (JJ homosexual) (NNS unions))))))))
    (VP (VBZ is)
      (ADJP (JJ new)
        (CC and)
        (JJ unprecedented)))
    (. .)))

mark(stated-4, As-2)
nsubj(stated-4, I-3)
dep(new-20, stated-4)
poss(argument-8, my-6)
amod(argument-8, previous-7)
prep_in(stated-4, argument-8)
det(practice-10, the-9)
nsubj(new-20, practice-10)
nsubj(unprecedented-22, practice-10)
amod(recognition-13, legal-12)
prep_of(practice-10, recognition-13)
prep_of(recognition-13, aspects-15)
amod(unions-18, homosexual-17)
prep_of(aspects-15, unions-18)
cop(new-20, is-19)
root(ROOT-0, new-20)
conj_and(new-20, unprecedented-22)

(ROOT
  (S ('' '')
    (S
      (NP (NNP First))
      (VP (VBP result)
        (PP (IN on)
          (NP (NN google)))))
    (: :) (`` ``)
    (S
      (NP (DT The) (JJ first) (NN country)
        (S
          (VP (TO to)
            (VP (VB allow)
              (NP (JJ same-sex) (NNS couples))
              (S
                (VP (TO to)
                  (VP (VB enter)
                    (PP (IN into)
                      (NP
                        (ADJP (RB legally) (VBN recognized))
                        (NN marriage))))))))))
      (VP (VBD was)
        (NP
          (NP (DT the) (NNPS Netherlands))
          (, ,)
          (ADJP (JJ effective)
            (PP (IN in)
              (NP (CD 2001)))))))
    (. .)))

nsubj(result-3, First-2)
root(ROOT-0, result-3)
prep_on(result-3, google-5)
det(country-10, The-8)
amod(country-10, first-9)
nsubj(Netherlands-23, country-10)
aux(allow-12, to-11)
infmod(country-10, allow-12)
amod(couples-14, same-sex-13)
dobj(allow-12, couples-14)
aux(enter-16, to-15)
xcomp(allow-12, enter-16)
advmod(recognized-19, legally-18)
amod(marriage-20, recognized-19)
prep_into(enter-16, marriage-20)
cop(Netherlands-23, was-21)
det(Netherlands-23, the-22)
ccomp(result-3, Netherlands-23)
amod(Netherlands-23, effective-25)
prep_in(effective-25, 2001-27)

(ROOT
  (S
    (S
      (NP (NNP Marriage))
      (VP (VBD used)
        (S
          (VP (TO to)
            (VP (VB be)
              (PP (IN between)
                (NP
                  (NP (DT a) (NN man))
                  (CC and)
                  (NP (DT the) (NNS women)))))))))
    (NP (PRP he))
    (VP (VBD bought)
      (ADVP (RB essentially)))
    (. .)))

nsubj(used-2, Marriage-1)
xsubj(be-4, Marriage-1)
dep(bought-12, used-2)
aux(be-4, to-3)
xcomp(used-2, be-4)
det(man-7, a-6)
prep_between(be-4, man-7)
det(women-10, the-9)
prep_between(be-4, women-10)
conj_and(man-7, women-10)
nsubj(bought-12, he-11)
root(ROOT-0, bought-12)
advmod(bought-12, essentially-13)

(ROOT
  (S
    (NP (NNP Society))
    (VP (VBZ changes))
    (. .)))

nsubj(changes-2, Society-1)
root(ROOT-0, changes-2)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ does) (RB not)
      (VP (VB equate)
        (PP (TO to)
          (NP
            (NP (DT a) (NN destruction))
            (PP (IN of)
              (NP (NN language)))))))
    (. .)))

nsubj(equate-4, This-1)
aux(equate-4, does-2)
neg(equate-4, not-3)
root(ROOT-0, equate-4)
det(destruction-7, a-6)
prep_to(equate-4, destruction-7)
prep_of(destruction-7, language-9)

(ROOT
  (S ('' '')
    (NP (WP What))
    (ADVP (RB proponents))
    (PP (IN of)
      (NP (DT the) (NN phrase)))
    (NP (`` ``) (JJ gay) (NN marriage) ('' '') (NN demand))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN rest))
            (PP (IN of)
              (NP (NN society))))
          (VP (VB be)
            (VP (VBN forced)
              (S
                (VP (TO to)
                  (VP (VB accept)
                    (NP
                      (NP (PRP$ their) (JJ own) (NN standard))
                      (PP (IN of)
                        (NP
                          (NP (DT the) (NN meaning))
                          (PP (IN of)
                            (NP (DT those) (NNS words))))))))))))))
    (. .)))

nsubj(is-12, What-2)
advmod(is-12, proponents-3)
det(phrase-6, the-5)
prep_of(is-12, phrase-6)
amod(demand-11, gay-8)
nn(demand-11, marriage-9)
nsubj(is-12, demand-11)
root(ROOT-0, is-12)
complm(forced-19, that-13)
det(rest-15, the-14)
nsubjpass(forced-19, rest-15)
prep_of(rest-15, society-17)
auxpass(forced-19, be-18)
ccomp(is-12, forced-19)
aux(accept-21, to-20)
xcomp(forced-19, accept-21)
poss(standard-24, their-22)
amod(standard-24, own-23)
dobj(accept-21, standard-24)
det(meaning-27, the-26)
prep_of(standard-24, meaning-27)
det(words-30, those-29)
prep_of(meaning-27, words-30)

(ROOT
  (S (CC And)
    (NP (PRP they))
    (VP (VBP seek)
      (S
        (VP (TO to)
          (VP (VB force)
            (NP (DT this))
            (PP (IN by)
              (S
                (VP (VBG attempting)
                  (S
                    (VP (TO to)
                      (VP (VB enshrine)
                        (NP (PRP$ their) (JJ own) (JJ particular) (NN minority) (NN definition))
                        (PP (IN upon)
                          (NP (DT the) (NN majority)))))))))))))
    (. .)))

cc(seek-3, And-1)
nsubj(seek-3, they-2)
xsubj(force-5, they-2)
root(ROOT-0, seek-3)
aux(force-5, to-4)
xcomp(seek-3, force-5)
dobj(force-5, this-6)
prepc_by(force-5, attempting-8)
aux(enshrine-10, to-9)
xcomp(attempting-8, enshrine-10)
poss(definition-15, their-11)
amod(definition-15, own-12)
amod(definition-15, particular-13)
nn(definition-15, minority-14)
dobj(enshrine-10, definition-15)
det(majority-18, the-17)
prep_upon(enshrine-10, majority-18)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (VBP mean) (, ,)
      (ADVP (RB just))
      (PP (IN like)
        (NP (JJ interracial) (NN marriage))))
    (. ?)))

nsubj(mean-3, You-2)
root(ROOT-0, mean-3)
advmod(mean-3, just-5)
amod(marriage-8, interracial-7)
prep_like(mean-3, marriage-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD ca) (RB n't)
          (VP (VB see)
            (NP (DT the) (NN comparison))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB really) (JJ sorry)))
    (. .)))

mark(see-5, If-1)
nsubj(see-5, you-2)
aux(see-5, ca-3)
neg(see-5, n't-4)
advcl(sorry-12, see-5)
det(comparison-7, the-6)
dobj(see-5, comparison-7)
nsubj(sorry-12, I-9)
cop(sorry-12, 'm-10)
advmod(sorry-12, really-11)
root(ROOT-0, sorry-12)

(ROOT
  (S ('' '')
    (S
      (SBAR (RB Even)
        (S
          (PP (IN at)
            (NP (PRP$ their) (NN peak)))
          (, ,)
          (NP (DT the) (NNPS Nazis))
          (ADVP (RB never))
          (VP (VBD had)
            (NP
              (NP (DT a) (NN majority))
              (PP (IN of)
                (NP (JJ political) (NN affiliation)))))))
      (, ,)
      (NP (PRP they))
      (VP (VBD took)
        (NP (NN power))
        (PP (IN as)
          (NP (DT a) (JJ political) (NN minority)))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (NN look))
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBP havok)
              (NP (PRP they))))))
      (VP (VBD wreaked)
        (PP (IN upon)
          (NP
            (NP (PRP$ their) (JJ own) (NN citizenry))
            (CC and)
            (NP (DT the) (NNS values))))
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP they))
            (VP (VBD imposed)
              (PP (IN by)
                (NP (NN force)))
              (PP (IN upon)
                (NP (DT the) (NN majority))))))))
    (. !)))

advmod(had-10, Even-2)
poss(peak-5, their-4)
prep_at(had-10, peak-5)
det(Nazis-8, the-7)
nsubj(had-10, Nazis-8)
neg(had-10, never-9)
dep(took-18, had-10)
det(majority-12, a-11)
dobj(had-10, majority-12)
amod(affiliation-15, political-14)
prep_of(majority-12, affiliation-15)
nsubj(took-18, they-17)
root(ROOT-0, took-18)
dobj(took-18, power-19)
det(minority-23, a-21)
amod(minority-23, political-22)
prep_as(took-18, minority-23)
nsubj(havok-28, look-26)
nsubj(wreaked-30, look-26)
rcmod(look-26, havok-28)
dobj(havok-28, they-29)
conj_but(took-18, wreaked-30)
poss(citizenry-34, their-32)
amod(citizenry-34, own-33)
prep_upon(wreaked-30, citizenry-34)
det(values-37, the-36)
prep_upon(wreaked-30, values-37)
conj_and(citizenry-34, values-37)
dobj(imposed-40, which-38)
nsubj(imposed-40, they-39)
ccomp(wreaked-30, imposed-40)
prep_by(imposed-40, force-42)
det(majority-45, the-44)
prep_upon(imposed-40, majority-45)

(ROOT
  (S (`` ``)
    (PP
      (ADVP (RB Yes))
      (IN because)
      (NP
        (NP (DT the) (JJ LGBT) (NN movement))
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB gain)
                (NP (JJ civil) (NNS rights))))))))
    (VP (VBZ is)
      (ADVP (RB exactly))
      (PP (IN like)
        (NP (DT the) (JJ Nazi) (NN regime))))
    (. .)))

advmod(is-12, Yes-2)
det(movement-6, the-4)
amod(movement-6, LGBT-5)
xsubj(gain-9, movement-6)
prep_because(is-12, movement-6)
partmod(movement-6, trying-7)
aux(gain-9, to-8)
xcomp(trying-7, gain-9)
amod(rights-11, civil-10)
dobj(gain-9, rights-11)
root(ROOT-0, is-12)
advmod(is-12, exactly-13)
det(regime-17, the-15)
amod(regime-17, Nazi-16)
prep_like(is-12, regime-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (S
          (NP (PRP you))
          (VP (VB read)
            (NP (CD 1984))
            (ADVP
              (ADVP (RB very) (RB carefully))
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP think)
                    (SBAR
                      (S
                        (NP
                          (NP (NN anything))
                          (PP (IN in)
                            (NP (PRP it))))
                        (VP (MD can)
                          (VP (VB be)
                            (VP (VBN applied)
                              (PP (TO to)
                                (S
                                  (VP (VBG being)
                                    (PP (IN against)
                                      (NP (JJ same-sex) (NN marriage)))))))))))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
nsubj(read-6, you-5)
ccomp(think-4, read-6)
dobj(read-6, 1984-7)
advmod(carefully-9, very-8)
advmod(read-6, carefully-9)
mark(think-12, if-10)
nsubj(think-12, you-11)
dep(carefully-9, think-12)
nsubjpass(applied-18, anything-13)
prep_in(anything-13, it-15)
aux(applied-18, can-16)
auxpass(applied-18, be-17)
ccomp(think-12, applied-18)
prepc_to(applied-18, being-20)
amod(marriage-23, same-sex-22)
prep_against(being-20, marriage-23)

(ROOT
  (S
    (PP (IN Since)
      (NP (RB then)))
    (, ,)
    (NP
      (NP (CD six) (JJ other) (NNS countries))
      (CC and)
      (NP (CD seven) (NNP U.S.) (NNS states)))
    (VP (VBP have)
      (VP (VBN followed)
        (NP (NN suit))
        (, ,)
        (SBAR (IN though)
          (S
            (NP
              (NP (NNS voters))
              (PP (IN in)
                (NP (NNP California))))
            (VP (VBN revoked)
              (NP (PRP it))
              (PP (IN through)
                (NP
                  (NP (NN passage))
                  (PP (IN of)
                    (NP (NNP Proposition) (CD 8))))))))))
    (. .)))

prep(followed-12, Since-1)
pobj(Since-1, then-2)
num(countries-6, six-4)
amod(countries-6, other-5)
nsubj(followed-12, countries-6)
num(states-10, seven-8)
nn(states-10, U.S.-9)
conj_and(countries-6, states-10)
nsubj(followed-12, states-10)
aux(followed-12, have-11)
root(ROOT-0, followed-12)
dobj(followed-12, suit-13)
mark(revoked-19, though-15)
nsubj(revoked-19, voters-16)
prep_in(voters-16, California-18)
advcl(followed-12, revoked-19)
dobj(revoked-19, it-20)
prep_through(revoked-19, passage-22)
prep_of(passage-22, Proposition-24)
num(Proposition-24, 8-25)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBP find)
      (NP
        (NP (DT no) (JJ logical) (NN pathway))
        (PP (IN for)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (JJ same-sex) (NN marriage))
              (VP (MD could)
                (VP
                  (VP (VB lead)
                    (PP (TO to) (`` ``)
                      (NP
                        (NP (DT a) (NN state))
                        (PP (IN of)
                          (NP (JJ total) (NN decay))))))
                  (CC and)
                  (VP (VB ruin)))))))))
    (. .)))

cc(find-3, And-1)
nsubj(find-3, I-2)
root(ROOT-0, find-3)
det(pathway-6, no-4)
amod(pathway-6, logical-5)
dobj(find-3, pathway-6)
advmod(lead-12, how-8)
amod(marriage-10, same-sex-9)
nsubj(lead-12, marriage-10)
nsubj(ruin-21, marriage-10)
aux(lead-12, could-11)
prepc_for(pathway-6, lead-12)
det(state-16, a-15)
prep_to(lead-12, state-16)
amod(decay-19, total-18)
prep_of(state-16, decay-19)
prepc_for(pathway-6, ruin-21)
conj_and(lead-12, ruin-21)

(ROOT
  (S ('' '')
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP
          (NP (DT some) (NN class))
          (NP (DT A) (NN fear)))
        (VP (VBG mongering)
          (ADVP (RB right) (RB there)))))
    (. .)))

nsubj(class-5, That-2)
cop(class-5, 's-3)
det(class-5, some-4)
root(ROOT-0, class-5)
det(fear-7, A-6)
dep(class-5, fear-7)
partmod(class-5, mongering-8)
advmod(there-10, right-9)
advmod(mongering-8, there-10)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB work)
      (PP (IN for)
        (NP (NNP NOM))))
    (. ?)))

aux(work-3, Do-1)
nsubj(work-3, you-2)
root(ROOT-0, work-3)
prep_for(work-3, NOM-5)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (MD would) (RB n't)
      (VP (VB call)
        (S
          (NP (DT that))
          (ADJP (JJ unprecedented)))))
    (. .)))

nsubj(call-5, I-2)
aux(call-5, would-3)
neg(call-5, n't-4)
root(ROOT-0, call-5)
nsubj(unprecedented-7, that-6)
xcomp(call-5, unprecedented-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB make)
                  (SBAR
                    (S
                      (NP
                        (NP (DT a) (JJ strong) (NN claim))
                        (PP (JJ such) (IN as)
                          (NP (NN something))))
                      (VP (VBZ has)
                        (ADVP (RB never))
                        (VP (VBN been)
                          (VP (VBN practiced)))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD should)
      (VP (VB be)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP you))
              (ADVP (RB actually))
              (VP (VBP know)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP you))
                    (VP (VBP are)
                      (VP (VBG talking) (IN about)))))))))))
    (. .)))

mark(going-4, If-1)
nsubj(going-4, you-2)
xsubj(make-6, you-2)
aux(going-4, are-3)
advcl(sure-21, going-4)
aux(make-6, to-5)
xcomp(going-4, make-6)
det(claim-9, a-7)
amod(claim-9, strong-8)
nsubjpass(practiced-16, claim-9)
prep_such_as(claim-9, something-12)
aux(practiced-16, has-13)
neg(practiced-16, never-14)
auxpass(practiced-16, been-15)
ccomp(make-6, practiced-16)
nsubj(sure-21, you-18)
aux(sure-21, should-19)
cop(sure-21, be-20)
root(ROOT-0, sure-21)
nsubj(know-24, you-22)
advmod(know-24, actually-23)
dep(sure-21, know-24)
dobj(talking-28, what-25)
nsubj(talking-28, you-26)
aux(talking-28, are-27)
ccomp(know-24, talking-28)
dep(talking-28, about-29)

(ROOT
  (S
    (SBAR
      (ADVP (RB Therefore))
      (IN as)
      (S
        (NP (PRP I))
        (VP (VBD said)
          (S
            (VP (VBG using)
              (NP (JJ traditional) (NN marriage))
              (PP (IN as)
                (NP
                  (NP (DT an) (NN argument))
                  (PP (IN against)
                    (NP (JJ same-sex) (NN marriage))))))))))
    (VP (VBZ is)
      (ADVP (RB just))
      (PP (IN like)
        (S
          (VP (VBG using)
            (NP (JJ traditional) (NN marriage))
            (PP (IN as)
              (NP
                (NP (DT an) (NN argument))
                (PP (IN against)
                  (NP (JJ interracial) (NN marriage)))))))))
    (. .)))

advmod(said-4, Therefore-1)
dep(said-4, as-2)
nsubj(said-4, I-3)
advcl(is-14, said-4)
csubj(is-14, said-4)
xcomp(said-4, using-5)
amod(marriage-7, traditional-6)
dobj(using-5, marriage-7)
det(argument-10, an-9)
prep_as(using-5, argument-10)
amod(marriage-13, same-sex-12)
prep_against(argument-10, marriage-13)
root(ROOT-0, is-14)
advmod(is-14, just-15)
prepc_like(is-14, using-17)
amod(marriage-19, traditional-18)
dobj(using-17, marriage-19)
det(argument-22, an-21)
prep_as(using-17, argument-22)
amod(marriage-25, interracial-24)
prep_against(argument-22, marriage-25)

(ROOT
  (S (CC And)
    (NP
      (NP (PRP$ your) (NN argument))
      (PP (IN about)
        (NP (NN language))))
    (VP (VBD was)
      (ADVP (RB really))
      (NP
        (ADJP (RB just) (JJ wordy))
        (, ,) (NNS vacuous) (, ,) (JJ pseudo-intellectual) (NN babble)))
    (. .)))

cc(babble-14, And-1)
poss(argument-3, your-2)
nsubj(babble-14, argument-3)
prep_about(argument-3, language-5)
cop(babble-14, was-6)
advmod(babble-14, really-7)
advmod(wordy-9, just-8)
amod(babble-14, wordy-9)
dep(babble-14, vacuous-11)
amod(babble-14, pseudo-intellectual-13)
root(ROOT-0, babble-14)

(ROOT
  (S
    (NP (NNS Words)
      (CC and)
      (NN language))
    (VP (VBP change)
      (PP (IN over)
        (NP (NN time))))
    (. .)))

nsubj(change-4, Words-1)
conj_and(Words-1, language-3)
nsubj(change-4, language-3)
root(ROOT-0, change-4)
prep_over(change-4, time-6)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT a) (JJ natural) (NN phenomenon)))
    (. .)))

nsubj(phenomenon-5, This-1)
cop(phenomenon-5, is-2)
det(phenomenon-5, a-3)
amod(phenomenon-5, natural-4)
root(ROOT-0, phenomenon-5)

(ROOT
  (S
    (NP (NNS Cultures))
    (VP (VBP are) (RB not)
      (ADJP (JJ stagnant)))
    (. .)))

nsubj(stagnant-4, Cultures-1)
cop(stagnant-4, are-2)
neg(stagnant-4, not-3)
root(ROOT-0, stagnant-4)

