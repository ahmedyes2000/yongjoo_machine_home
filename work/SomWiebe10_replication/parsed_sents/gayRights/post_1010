(ROOT
  (S
    (NP (NNS Lets))
    (VP (VB begin)
      (PP (IN with)
        (NP (DT this)))
      (. .))
    (. .)))

nsubj(begin-2, Lets-1)
root(ROOT-0, begin-2)
prep_with(begin-2, this-4)

(ROOT
  (S
    (NP (NN love))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ profoundly) (NN tender))
        (, ,)
        (NP
          (NP (JJ passionate) (NN affection))
          (PP (IN for)
            (NP
              (NP (DT another) (NN person))
              (, ,)
              (NP
                (NP (DT a) (NN feeling))
                (PP (IN of)
                  (NP (JJ warm) (JJ personal) (NN attachment)))))))
        (CC or)
        (NP (JJ deep) (NN affection))))
    (. .)))

nsubj(tender-5, love-1)
cop(tender-5, is-2)
det(tender-5, a-3)
amod(tender-5, profoundly-4)
root(ROOT-0, tender-5)
amod(affection-8, passionate-7)
conj_or(tender-5, affection-8)
det(person-11, another-10)
prep_for(affection-8, person-11)
det(feeling-14, a-13)
appos(person-11, feeling-14)
amod(attachment-18, warm-16)
amod(attachment-18, personal-17)
prep_of(feeling-14, attachment-18)
amod(affection-21, deep-20)
conj_or(tender-5, affection-21)

(ROOT
  (FRAG
    (ADVP (RB Now))
    (NP (DT a) (NN question) (. .))
    (. .)))

dep(question-3, Now-1)
det(question-3, a-2)
root(ROOT-0, question-3)

(ROOT
  (SBARQ
    (SBAR (IN if)
      (S
        (NP (DT a) (NN woman))
        (VP (VBZ has)
          (NP (DT the) (NN right)
            (S
              (VP (TO to)
                (VP (VB love)
                  (NP (DT a) (NN man)))))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBD cant)
      (NP (DT a) (NN woman))
      (VP (VB love)
        (S
          (NP
            (NP (DT a) (NN woman))
            (CC or)
            (NP (DT a) (NN man)))
          (VP (VB love)
            (NP (DT a) (NN man))))))
    (. ?)))

mark(has-4, if-1)
det(woman-3, a-2)
nsubj(has-4, woman-3)
advcl(love-16, has-4)
det(right-6, the-5)
dobj(has-4, right-6)
aux(love-8, to-7)
infmod(right-6, love-8)
det(man-10, a-9)
dobj(love-8, man-10)
advmod(love-16, why-12)
aux(love-16, cant-13)
det(woman-15, a-14)
nsubj(love-16, woman-15)
root(ROOT-0, love-16)
det(woman-18, a-17)
nsubj(love-22, woman-18)
det(man-21, a-20)
conj_or(woman-18, man-21)
nsubj(love-22, man-21)
ccomp(love-16, love-22)
det(man-24, a-23)
dobj(love-22, man-24)

(ROOT
  (S
    (S
      (NP (NN Love))
      (VP (VBZ is)
        (NP (NN love))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ has)
        (NP (DT no) (NN gender))))
    (. .)))

nsubj(love-3, Love-1)
cop(love-3, is-2)
root(ROOT-0, love-3)
nsubj(has-6, it-5)
conj_and(love-3, has-6)
det(gender-8, no-7)
dobj(has-6, gender-8)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP you))
        (VP (VB grow)
          (CC and)
          (VB develop))))
    (NP (PRP you))
    (VP (VBP become)
      (VP (VBN attracted)
        (PP
          (PP (TO to)
            (NP (NNS things)))
          (CC and)
          (PP (IN for)
            (NP (DT some) (PRP$ its)
              (UCP
                (NP (DT the) (JJ opposite) (NN sex))
                (CC and)
                (PP (IN for)))
              (NNS others)))
          (NP (PRP$ its) (JJ the) (JJ same) (NN sex)))))
    (. .)))

mark(grow-3, As-1)
nsubj(grow-3, you-2)
nsubj(develop-5, you-2)
advcl(attracted-8, grow-3)
conj_and(grow-3, develop-5)
advcl(attracted-8, develop-5)
nsubjpass(attracted-8, you-6)
nsubjpass(attracted-8', you-6)
auxpass(attracted-8, become-7)
root(ROOT-0, attracted-8)
conj_and(attracted-8, attracted-8')
prep_to(attracted-8, things-10)
det(others-20, some-13)
predet(others-20, some-13)
poss(others-20, its-14)
det(sex-17, the-15)
amod(sex-17, opposite-16)
nn(others-20, sex-17)
conj_and(sex-17, for-19)
prep(sex-17, for-19)
nn(others-20, for-19)
prep_for(attracted-8', others-20)
poss(sex-24, its-21)
amod(sex-24, the-22)
amod(sex-24, same-23)
dep(attracted-8, sex-24)

(ROOT
  (S
    (NP (NNS Gays))
    (VP (VBP are)
      (ADJP (RB as) (JJ normal)
        (PP (IN as)
          (NP
            (NP (NNS straights))
            (CC or)
            (NP (NN anything) (RB else)))))
      (PP (IN in)
        (NP (DT this) (NN world))))
    (. .)))

nsubj(normal-4, Gays-1)
cop(normal-4, are-2)
advmod(normal-4, as-3)
root(ROOT-0, normal-4)
prep_as(normal-4, straights-6)
prep_as(normal-4, anything-8)
conj_or(straights-6, anything-8)
advmod(anything-8, else-9)
det(world-12, this-11)
prep_in(normal-4, world-12)

(ROOT
  (SBARQ
    (PP (IN Besides))
    (, ,)
    (WHNP (WP who))
    (SQ (VBP are)
      (NP
        (NP (DT any))
        (PP (IN of)
          (NP (PRP us)))
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (NNP NORMAL))
                  (VP (VBZ is)))))))))
    (. ?)))

prep(are-4, Besides-1)
attr(are-4, who-3)
root(ROOT-0, are-4)
nsubj(are-4, any-5)
prep_of(any-5, us-7)
aux(say-9, to-8)
infmod(any-5, say-9)
dobj(is-12, what-10)
nsubj(is-12, NORMAL-11)
ccomp(say-9, is-12)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN been)
          (PP (IN on)
            (NP (JJ several) (NNS websites)))
          (PP (IN about)
            (NP (DT this) (JJ gay) (NN marriage) (NN thing))))))
    (CC and)
    (S
      (NP
        (NP (JJS most))
        (PP (IN of)
          (NP (PRP them))))
      (VP (VBD argued)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBP wouldnt)
              (VP (VB be)
                (ADJP (JJ right)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NNS eyes))
                      (PP (IN of)
                        (NP (`` ``) (NN god) ('' ''))))))))))))
    (. .)))

nsubj(been-3, I-1)
aux(been-3, 've-2)
root(ROOT-0, been-3)
amod(websites-6, several-5)
prep_on(been-3, websites-6)
det(thing-11, this-8)
amod(thing-11, gay-9)
nn(thing-11, marriage-10)
prep_about(been-3, thing-11)
nsubj(argued-16, most-13)
prep_of(most-13, them-15)
conj_and(been-3, argued-16)
complm(wouldnt-19, that-17)
nsubj(wouldnt-19, it-18)
ccomp(argued-16, wouldnt-19)
cop(right-21, be-20)
dep(wouldnt-19, right-21)
det(eyes-24, the-23)
prep_in(right-21, eyes-24)
prep_of(eyes-24, god-27)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP I))
    (VP (VBP dont)
      (SBAR
        (SBAR
          (S
            (VP (VBP believe)
              (PP (IN in)
                (NP (NN god))))))
        (, ,)
        (CC but)
        (SBAR (IN if)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (ADVP (IN in) (NN fact))
              (NP (DT a) (NN god))
              (PP (IN than)
                (SBARQ
                  (WHADVP (WRB why))
                  (SQ (MD would)
                    (NP (PRP he))
                    (VP (VB have)
                      (VP (VBN made)
                        (NP (NNS gays))
                        (SBAR (IN if)
                          (S
                            (NP (PRP he))
                            (VP (VBP wouldnt)
                              (VP (VB approve)
                                (PP (IN of)
                                  (NP (PRP them))))))))))
                  (. ?))))))))))

advmod(dont-4, Now-1)
nsubj(dont-4, I-3)
root(ROOT-0, dont-4)
dep(dont-4, believe-5)
prep_in(believe-5, god-7)
mark(is-12, if-10)
expl(is-12, there-11)
dep(dont-4, is-12)
conj_but(believe-5, is-12)
advmod(is-12, in-13)
dep(in-13, fact-14)
det(god-16, a-15)
nsubj(is-12, god-16)
prep(is-12, than-17)
advmod(made-22, why-18)
aux(made-22, would-19)
nsubj(made-22, he-20)
aux(made-22, have-21)
dep(than-17, made-22)
dobj(made-22, gays-23)
mark(wouldnt-26, if-24)
nsubj(wouldnt-26, he-25)
advcl(made-22, wouldnt-26)
dep(wouldnt-26, approve-27)
prep_of(approve-27, them-29)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB just))
    (VP (VBP doesnt)
      (VP (VB make)
        (NP (DT any) (NN sense))))
    (. .)))

nsubj(doesnt-3, It-1)
advmod(doesnt-3, just-2)
root(ROOT-0, doesnt-3)
xcomp(doesnt-3, make-4)
det(sense-6, any-5)
dobj(make-4, sense-6)

(ROOT
  (S
    (NP (JJ Other) (NNS websites))
    (VP (VBP have)
      (VP (VBN tried)
        (S
          (VP (VBG arguing)
            (SBAR (IN that)
              (S
                (NP (NNS gays))
                (VP (VBP are)
                  (NP
                    (NP (DT the) (NN reason))
                    (PP (IN for)
                      (NP (NNP AIDS)
                        (CC and)
                        (NNP STDS)))))))))))
    (. .)))

amod(websites-2, Other-1)
nsubj(tried-4, websites-2)
aux(tried-4, have-3)
root(ROOT-0, tried-4)
xcomp(tried-4, arguing-5)
complm(reason-10, that-6)
nsubj(reason-10, gays-7)
cop(reason-10, are-8)
det(reason-10, the-9)
ccomp(arguing-5, reason-10)
prep_for(reason-10, AIDS-12)
prep_for(reason-10, STDS-14)
conj_and(AIDS-12, STDS-14)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is) (RB not)
      (ADJP (JJ true)))
    (. .)))

nsubj(true-4, This-1)
cop(true-4, is-2)
neg(true-4, not-3)
root(ROOT-0, true-4)

(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBD search)
        (PP (IN for)
          (NP
            (NP (DT the) (NN answer))
            (PP (TO to)
              (NP (DT the) (NN quesion)))))
        (`` ``)
        (SBAR
          (SBARQ
            (WHADVP (WRB where))
            (SQ (VBD did)
              (NP (NNP AIDS))
              (VP (VB orginate)
                (PP (IN from))))
            (. ?)))))))

mark(search-3, If-1)
nsubj(search-3, you-2)
root(ROOT-0, search-3)
det(answer-6, the-5)
prep_for(search-3, answer-6)
det(quesion-9, the-8)
prep_to(answer-6, quesion-9)
advmod(orginate-14, where-11)
aux(orginate-14, did-12)
nsubj(orginate-14, AIDS-13)
dep(search-3, orginate-14)
prep(orginate-14, from-15)

(ROOT
  (S ('' '')
    (S
      (NP (PRP you))
      (VP (MD would)
        (VP (VB find)
          (NP (JJ several) (JJ different) (NNS answers)))))
    (, ,)
    (CC but)
    (S
      (NP (NN none))
      (VP (MD would)
        (VP (VB say)
          (NP (NN anything))
          (PP (IN about)
            (NP (NNS gays))))))
    (. .)))

nsubj(find-4, you-2)
aux(find-4, would-3)
root(ROOT-0, find-4)
amod(answers-7, several-5)
amod(answers-7, different-6)
dobj(find-4, answers-7)
nsubj(say-12, none-10)
aux(say-12, would-11)
conj_but(find-4, say-12)
dobj(say-12, anything-13)
prep_about(say-12, gays-15)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP are)
      (VP (VBG trying)
        (NP (PRP$ their) (JJS hardest))
        (S
          (VP (TO to)
            (VP (VB prove)
              (SBAR
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (ADVP (RB homosexuality))
                    (VP (MD should) (RB not)
                      (VP (VB be)
                        (VP (VBN allowed)
                          (PP (IN by)
                            (S
                              (VP (VBG throwing)
                                (NP (JJ false) (NN information))
                                (ADVP (RB around))))))))))
                (CC and)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD will)
                      (VP (VB get)
                        (NP (PRP you) (DT no))
                        (FRAG
                          (WHADVP (WRB where)))))))))))))
    (. .)))

nsubj(trying-3, People-1)
aux(trying-3, are-2)
root(ROOT-0, trying-3)
poss(hardest-5, their-4)
dobj(trying-3, hardest-5)
aux(prove-7, to-6)
xcomp(trying-3, prove-7)
nsubjpass(allowed-13, that-8)
advmod(allowed-13, homosexuality-9)
aux(allowed-13, should-10)
neg(allowed-13, not-11)
auxpass(allowed-13, be-12)
dep(prove-7, allowed-13)
agent(allowed-13, throwing-15)
amod(information-17, false-16)
dobj(throwing-15, information-17)
advmod(throwing-15, around-18)
nsubj(get-22, that-20)
aux(get-22, will-21)
dep(prove-7, get-22)
conj_and(allowed-13, get-22)
dobj(get-22, you-23)
dep(you-23, no-24)
dep(get-22, where-25)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB cant))
    (VP (VBP help)
      (SBAR
        (WHNP (WP who))
        (S
          (NP (PRP you))
          (VP (VBP love)))))
    (. .)))

nsubj(help-3, You-1)
advmod(help-3, cant-2)
root(ROOT-0, help-3)
dobj(love-6, who-4)
nsubj(love-6, you-5)
ccomp(help-3, love-6)

(ROOT
  (S
    (NP
      (NP (DT Another) (NN thing))
      (SBAR (IN that)
        (S
          (NP (NNS people))
          (VP (VBP are)
            (VP (VBG trying)
              (ADVP (VB say)))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (JJ gay) (NNS parents))
          (VP (MD will)
            (VP (VB raise)
              (NP (JJ gay) (NNS children)))))))
    (. .)))

det(thing-2, Another-1)
dobj(trying-6, thing-2)
nsubj(is-8, thing-2)
complm(trying-6, that-3)
nsubj(trying-6, people-4)
aux(trying-6, are-5)
dep(thing-2, trying-6)
advmod(trying-6, say-7)
root(ROOT-0, is-8)
complm(raise-13, that-9)
amod(parents-11, gay-10)
nsubj(raise-13, parents-11)
aux(raise-13, will-12)
ccomp(is-8, raise-13)
amod(children-15, gay-14)
dobj(raise-13, children-15)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is) (RB n't)
      (ADJP (JJ true))
      (ADVP (RB either)))
    (. .)))

nsubj(true-4, This-1)
cop(true-4, is-2)
neg(true-4, n't-3)
root(ROOT-0, true-4)
advmod(true-4, either-5)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ goes)
      (PRT (RP back))
      (PP (TO to)
        (NP (DT the) (JJ asexual) (NN thing))))
    (. .)))

nsubj(goes-2, This-1)
root(ROOT-0, goes-2)
prt(goes-2, back-3)
det(thing-7, the-5)
amod(thing-7, asexual-6)
prep_to(goes-2, thing-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ gay)))))))))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ gay)))))))
    (. .)))

mark(going-4, If-1)
nsubj(going-4, you-2)
xsubj(gay-7, you-2)
aux(going-4, 're-3)
advcl(going-10, going-4)
aux(gay-7, to-5)
cop(gay-7, be-6)
xcomp(going-4, gay-7)
nsubj(going-10, you-8)
xsubj(gay-13, you-8)
aux(going-10, are-9)
root(ROOT-0, going-10)
aux(gay-13, to-11)
cop(gay-13, be-12)
xcomp(going-10, gay-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB n't)
      (VP (VB matter)
        (SBAR
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ raises)
                (NP (PRP you)))))
          (CC or)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP$ your) (NN religion))
              (VP
                (VP (VBZ is))
                (CC or)
                (VP
                  (NP (NN anything))
                  (SBAR (IN that)
                    (S
                      (NP (PRP you))
                      (VP (VBP have)
                        (NP (DT any) (NN control))
                        (PP (IN over))))))))))))
    (. .)))

nsubj(matter-4, It-1)
aux(matter-4, does-2)
neg(matter-4, n't-3)
root(ROOT-0, matter-4)
nsubj(raises-6, who-5)
dep(matter-4, raises-6)
dobj(raises-6, you-7)
dobj(is-12, what-9)
poss(religion-11, your-10)
nsubj(is-12, religion-11)
dep(matter-4, is-12)
conj_or(raises-6, is-12)
conj_or(raises-6, anything-14)
conj_or(is-12, anything-14)
complm(have-17, that-15)
nsubj(have-17, you-16)
ccomp(anything-14, have-17)
det(control-19, any-18)
dobj(have-17, control-19)
prep(have-17, over-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (DT a) (JJ gay) (NN couple) (NN bothwho))
          (VP (VBZ has)
            (NP
              (NP (CD two) (NNS daughters))
              (PP (IN of)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBP are)
                      (ADJP (RB straight)))))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
det(bothwho-6, a-3)
amod(bothwho-6, gay-4)
nn(bothwho-6, couple-5)
nsubj(has-7, bothwho-6)
ccomp(know-2, has-7)
num(daughters-9, two-8)
dobj(has-7, daughters-9)
prep(daughters-9, of-10)
nsubj(straight-13, which-11)
cop(straight-13, are-12)
pcomp(of-10, straight-13)

(ROOT
  (S (IN So)
    (NP (DT that))
    (VP (VBZ is)
      (NP (NN proof))
      (SBAR (IN that)
        (S
          (NP (DT that) (NN suggestion))
          (VP (VBZ is)
            (ADVP (RB indeed))
            (ADJP (JJ false))))))
    (. .)))

dep(proof-4, So-1)
nsubj(proof-4, that-2)
cop(proof-4, is-3)
root(ROOT-0, proof-4)
complm(false-10, that-5)
det(suggestion-7, that-6)
nsubj(false-10, suggestion-7)
cop(false-10, is-8)
advmod(false-10, indeed-9)
ccomp(proof-4, false-10)

(ROOT
  (S (CC And)
    (ADVP (RB as)
      (PP (IN for)
        (NP
          (NP (DT the) (NNS statements))
          (VP (VBG saying)
            (SBAR (IN that)
              (S
                (NP (JJ gay) (NNS marriages))
                (VP (VBP are)
                  (ADJP (JJ unatural)
                    (SBAR (IN because)
                      (S
                        (PP (IN in)
                          (NP (`` ``) (JJ traditional) ('' '') (NNS marriages)))
                        (NP (DT the) (NN man)
                          (CC and)
                          (NN woman))
                        (VP (MD can)
                          (VP (VB have)
                            (NP (NNS children))))))))))))))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (RB plenty))
        (PP (IN of)
          (NP
            (NP (JJ straight) (NNS couples))
            (PP (IN out)
              (NP (RB there)))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP are)
              (VP (VBG popping)
                (PRT (RP out))
                (NP (NNS children))
                (UCP
                  (VP (VBN left))
                  (CC and)
                  (ADJP (JJ right)))))))))
    (. !)))

cc(are-27, And-1)
det(statements-5, the-4)
prep_as_for(are-27, statements-5)
partmod(statements-5, saying-6)
complm(unatural-11, that-7)
amod(marriages-9, gay-8)
nsubj(unatural-11, marriages-9)
cop(unatural-11, are-10)
ccomp(saying-6, unatural-11)
mark(have-23, because-12)
amod(marriages-17, traditional-15)
prep_in(have-23, marriages-17)
det(man-19, the-18)
nsubj(have-23, man-19)
conj_and(man-19, woman-21)
nsubj(have-23, woman-21)
aux(have-23, can-22)
ccomp(unatural-11, have-23)
dobj(have-23, children-24)
expl(are-27, there-26)
root(ROOT-0, are-27)
nsubj(are-27, plenty-28)
nsubj(popping-36, plenty-28)
amod(couples-31, straight-30)
prep_of(plenty-28, couples-31)
prep(couples-31, out-32)
pobj(out-32, there-33)
aux(popping-36, are-35)
rcmod(plenty-28, popping-36)
prt(popping-36, out-37)
dobj(popping-36, children-38)
dep(popping-36, left-39)
dep(popping-36, right-41)
conj_and(left-39, right-41)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB n't)
      (VP (VB matter)
        (SBAR
          (WHADJP (WRB how) (JJ many))
          (S
            (S
              (NP (NNS gays))
              (ADVP (RB there))
              (VP (VBP are)
                (SBAR (IN because)
                  (S
                    (NP (EX there))
                    (VP (MD will)
                      (ADVP (RB always))
                      (VP (VB be)
                        (NP (JJ straight) (NNS couples))))))))
            (CC and)
            (S
              (NP (EX there))
              (VP (MD will)
                (ADVP (RB always))
                (VP (VB be)
                  (NP
                    (NP (JJR more) (NNS children))
                    (VP (VBG being)
                      (VP (VBN born)))))))))))
    (. .)))

nsubj(matter-4, It-1)
aux(matter-4, does-2)
neg(matter-4, n't-3)
root(ROOT-0, matter-4)
advmod(many-6, how-5)
dep(are-9, many-6)
nsubj(are-9, gays-7)
advmod(are-9, there-8)
dep(matter-4, are-9)
mark(couples-16, because-10)
expl(couples-16, there-11)
aux(couples-16, will-12)
advmod(couples-16, always-13)
cop(couples-16, be-14)
amod(couples-16, straight-15)
advcl(are-9, couples-16)
expl(children-23, there-18)
aux(children-23, will-19)
advmod(children-23, always-20)
cop(children-23, be-21)
amod(children-23, more-22)
dep(matter-4, children-23)
conj_and(are-9, children-23)
auxpass(born-25, being-24)
partmod(children-23, born-25)

(ROOT
  (S (CC And)
    (PP (RB as) (IN for)
      (NP (NNS gays)))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (RB plenty))
        (PP (IN of)
          (NP
            (NP (NNS ways))
            (PP (IN for)
              (NP (PRP them)))))
        (S
          (VP (TO to)
            (VP
              (ADVP (RB also))
              (VB have)
              (NP (NNS children)))))))
    (. .)))

cc(are-7, And-1)
prep_as_for(are-7, gays-4)
expl(are-7, there-6)
root(ROOT-0, are-7)
nsubj(are-7, plenty-8)
prep_of(plenty-8, ways-10)
prep_for(ways-10, them-12)
aux(have-15, to-13)
advmod(have-15, also-14)
infmod(plenty-8, have-15)
dobj(have-15, children-16)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (VBZ is)
      (NP
        (NP (NN anyone))
        (PP (IN in)
          (NP (DT this) (NN world)
            (S
              (VP (TO to)
                (VP (VB say)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (NP (NN someone) (RB else))
                      (VP (MD can)
                        (VP (VB fall)
                          (PP (IN in)
                            (NP (NN love)))
                          (PP (IN with)))))))))))))
    (. ?)))

attr(is-2, Who-1)
root(ROOT-0, is-2)
nsubj(is-2, anyone-3)
det(world-6, this-5)
prep_in(anyone-3, world-6)
aux(say-8, to-7)
infmod(world-6, say-8)
dep(fall-13, who-9)
nsubj(fall-13, someone-10)
advmod(someone-10, else-11)
aux(fall-13, can-12)
ccomp(say-8, fall-13)
prep_in(fall-13, love-15)
prep(fall-13, with-16)

(ROOT
  (S (CC So)
    (VP
      (VP (VBZ lets)
        (PRT (VBN put))
        (NP (DT that) (NN arguement))
        (PP (TO to)
          (NP (DT a) (NN rest))))
      (PRN (, ,)
        (INTJ (VB please))))
    (. !)))

cc(lets-2, So-1)
root(ROOT-0, lets-2)
prt(lets-2, put-3)
det(arguement-5, that-4)
dobj(lets-2, arguement-5)
det(rest-8, a-7)
prep_to(lets-2, rest-8)
dep(lets-2, please-10)

(ROOT
  (S
    (NP (NNS Gays))
    (VP (VBP deserve)
      (NP
        (NP (DT the) (JJ same) (NNS rights))
        (PP (IN as)
          (NP (NNS straights)))))
    (. .)))

nsubj(deserve-2, Gays-1)
root(ROOT-0, deserve-2)
det(rights-5, the-3)
amod(rights-5, same-4)
dobj(deserve-2, rights-5)
prep_as(rights-5, straights-7)

(ROOT
  (S
    (NP (NNS Gays))
    (VP (VBP are)
      (ADJP (RB no) (JJ different)
        (PP (IN than)
          (NP (NNS straights)))))
    (. .)))

nsubj(different-4, Gays-1)
cop(different-4, are-2)
advmod(different-4, no-3)
root(ROOT-0, different-4)
prep_than(different-4, straights-6)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP wake)
        (PRT (RP up))
        (NP (DT every) (NN morning))))
    (CC and)
    (S
      (NP (PRP they))
      (VP (VBP have)
        (NP (DT a) (NN life))))
    (. .)))

nsubj(wake-2, They-1)
root(ROOT-0, wake-2)
prt(wake-2, up-3)
det(morning-5, every-4)
tmod(wake-2, morning-5)
nsubj(have-8, they-7)
conj_and(wake-2, have-8)
det(life-10, a-9)
dobj(have-8, life-10)

(ROOT
  (S
    (NP (DT The) (JJ only) (NN thing))
    (VP (VBZ thats)
      (ADJP (JJ different))
      (SBAR (IN about)
        (S
          (NP (PRP them))
          (VP (VBZ is)
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP love)
                  (NP
                    (NP
                      (NP (NN someone))
                      (PP (IN of)
                        (NP (DT the) (JJ same) (NN sex))))
                    (CONJP (RB rather) (IN than))
                    (NP (DT the) (NN opposite))))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, only-2)
nsubj(thats-4, thing-3)
root(ROOT-0, thats-4)
acomp(thats-4, different-5)
mark(is-8, about-6)
nsubj(is-8, them-7)
advcl(thats-4, is-8)
nsubj(love-10, they-9)
ccomp(is-8, love-10)
dobj(love-10, someone-11)
det(sex-15, the-13)
amod(sex-15, same-14)
prep_of(someone-11, sex-15)
det(opposite-19, the-18)
dobj(love-10, opposite-19)
conj_negcc(someone-11, opposite-19)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (ADVP (RB absolutely))
      (NP
        (NP (DT no) (NN reason))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (DT a) (JJ gay) (NN couple))
            (VP (MD should) (RB not)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB get)
                          (ADJP (JJ married)))
                        (CC and)
                        (VP (VB have)
                          (NP
                            (NP (DT the) (JJ same) (NNS rights))
                            (PP (IN as)
                              (NP (DT a) (JJ straight) (NN couple)))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(is-2, absolutely-3)
det(reason-5, no-4)
nsubj(is-2, reason-5)
advmod(able-13, why-6)
det(couple-9, a-7)
amod(couple-9, gay-8)
nsubj(able-13, couple-9)
aux(able-13, should-10)
neg(able-13, not-11)
cop(able-13, be-12)
rcmod(reason-5, able-13)
aux(married-16, to-14)
dep(married-16, get-15)
xcomp(able-13, married-16)
xcomp(able-13, have-18)
conj_and(married-16, have-18)
det(rights-21, the-19)
amod(rights-21, same-20)
dobj(have-18, rights-21)
det(couple-25, a-23)
amod(couple-25, straight-24)
prep_as(rights-21, couple-25)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP say)
      (SBAR (IN that)
        (S
          (S
            (VP (VBG being)
              (ADJP (JJ gay))))
          (VP (VBZ is)
            (NP (NN choice))))))
    (. .)))

nsubj(say-2, People-1)
root(ROOT-0, say-2)
complm(choice-7, that-3)
cop(gay-5, being-4)
csubj(choice-7, gay-5)
cop(choice-7, is-6)
ccomp(say-2, choice-7)

(ROOT
  (S
    (INTJ (UH Well))
    (, ,)
    (VP (VB heres)
      (FRAG
        (NP (DT another) (NN question) (. .))))
    (. .)))

dep(heres-3, Well-1)
root(ROOT-0, heres-3)
det(question-5, another-4)
dep(heres-3, question-5)

(ROOT
  (SQ (VBP do)
    (NP (PRP you))
    (VP
      (VP (VB wake)
        (PRT (RP up))
        (PP (IN in)
          (NP (DT the) (NN morning))))
      (CC and)
      (VP (VB say)
        (S (`` ``)
          (NP (NN hey))
          (, ,)
          (NP (PRP I))
          (VP (VBP think)
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBP 'm)
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (RB straight))
                          (NP (NN today))))))))))
          ('' ''))))
    (. ?)))

aux(wake-3, do-1)
nsubj(wake-3, you-2)
nsubj(say-9, you-2)
root(ROOT-0, wake-3)
prt(wake-3, up-4)
det(morning-7, the-6)
prep_in(wake-3, morning-7)
conj_and(wake-3, say-9)
nsubj(think-14, hey-11)
nsubj(think-14, I-13)
ccomp(say-9, think-14)
nsubj(going-17, I-15)
xsubj(straight-20, I-15)
aux(going-17, 'm-16)
ccomp(think-14, going-17)
aux(straight-20, to-18)
cop(straight-20, be-19)
xcomp(going-17, straight-20)
attr(straight-20, today-21)
tmod(straight-20, today-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (ADVP (RB so))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
advmod(think-4, so-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are) (RB not)
      (VP (VBN born)
        (S
          (ADJP (JJ straight)
            (CC or)
            (JJ gay)))))
    (. .)))

nsubjpass(born-4, You-1)
auxpass(born-4, are-2)
neg(born-4, not-3)
root(ROOT-0, born-4)
acomp(born-4, straight-5)
acomp(born-4, gay-7)
conj_or(straight-5, gay-7)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (VP (VBN born)
        (S
          (ADJP (JJ asexual)))))
    (. .)))

nsubjpass(born-3, You-1)
auxpass(born-3, are-2)
root(ROOT-0, born-3)
acomp(born-3, asexual-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (NP (DT no) (JJ sexual) (NN orientation)))
    (. .)))

nsubj(have-2, You-1)
root(ROOT-0, have-2)
det(orientation-5, no-3)
amod(orientation-5, sexual-4)
dobj(have-2, orientation-5)

