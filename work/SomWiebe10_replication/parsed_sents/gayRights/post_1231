(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD might)
            (VP (VB be)
              (VP (VBG missing)
                (NP
                  (NP (DT a) (JJ logical) (NN factor))
                  (PP (IN of)
                    (NP (PRP$ your) (NN argument))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(missing-6, you-3)
aux(missing-6, might-4)
aux(missing-6, be-5)
ccomp(think-2, missing-6)
det(factor-9, a-7)
amod(factor-9, logical-8)
dobj(missing-6, factor-9)
poss(argument-12, your-11)
prep_of(factor-9, argument-12)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 've)
        (VP (VBN pointed)
          (PRT (RP out)))))
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (CD 50\/50) (NN representation))
        (PP (IN in)
          (NP (NN college)))))
    (. .)))

nsubj(pointed-3, You-1)
aux(pointed-3, 've-2)
dep('s-6, pointed-3)
prt(pointed-3, out-4)
expl('s-6, there-5)
root(ROOT-0, 's-6)
det(representation-9, a-7)
num(representation-9, 50\/50-8)
nsubj('s-6, representation-9)
prep_in(representation-9, college-11)

(ROOT
  (S (IN So)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (NP (DT a) (JJ college-age) (NN daughter)))))
    (, ,)
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB tell)
          (NP (PRP her))
          (SBAR (IN that)
            (S
              (NP (PRP she))
              (VP (MD could)
                (VP (VB succeed)
                  (ADVP (RB just))
                  (PP (IN like)
                    (NP (DT the) (NNS men))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP she))
      (VP (MD could)
        (VP (VB expect)
          (NP (NNS people))
          (S
            (VP
              (VP (VBG telling)
                (NP (PRP her))
                (SBAR (IN that)
                  (S
                    (NP (PRP she))
                    (VP (MD could) (RB n't)
                      (VP (VB do)
                        (NP (PRP it)))))))
              (CC and)
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB undercut)
                      (NP (PRP her)))))))))))
    (. .)))

dep(tell-11, So-1)
mark(had-4, if-2)
nsubj(had-4, I-3)
dep(tell-11, had-4)
det(daughter-7, a-5)
amod(daughter-7, college-age-6)
dobj(had-4, daughter-7)
nsubj(tell-11, I-9)
aux(tell-11, would-10)
root(ROOT-0, tell-11)
dobj(tell-11, her-12)
complm(succeed-16, that-13)
nsubj(succeed-16, she-14)
aux(succeed-16, could-15)
ccomp(tell-11, succeed-16)
advmod(succeed-16, just-17)
det(men-20, the-19)
prep_like(succeed-16, men-20)
nsubj(expect-25, she-23)
aux(expect-25, could-24)
conj_but(tell-11, expect-25)
dobj(expect-25, people-26)
dep(expect-25, telling-27)
dobj(telling-27, her-28)
complm(do-33, that-29)
nsubj(do-33, she-30)
aux(do-33, could-31)
neg(do-33, n't-32)
ccomp(telling-27, do-33)
dobj(do-33, it-34)
dep(expect-25, trying-36)
conj_and(telling-27, trying-36)
aux(undercut-38, to-37)
xcomp(trying-36, undercut-38)
dobj(undercut-38, her-39)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB also))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB argue)
            (PP (IN with)
              (NP
                (NP (PRP$ your) (NN use))
                (PP (IN of)
                  (NP (`` ``) (JJ traditional) ('' '') (NN marriage)))))))))
    (. .)))

nsubj(have-3, I-1)
xsubj(argue-5, I-1)
advmod(have-3, also-2)
root(ROOT-0, have-3)
aux(argue-5, to-4)
xcomp(have-3, argue-5)
poss(use-8, your-7)
prep_with(argue-5, use-8)
amod(marriage-13, traditional-11)
prep_of(use-8, marriage-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (NP (PRP I))
          (VP
            (VP (VBP bring)
              (PRT (RP up))
              (NP
                (NP (DT the) (NNPS Victorians))
                (NP (DT a) (NN lot))))
            (, ,)
            (CC but)
            (VP (VBP go)
              (VP (VB read) ('' '')
                (NP (NNP Oliver) (NN Twist))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubj(bring-4, I-3)
nsubj(go-12, I-3)
ccomp(know-2, bring-4)
prt(bring-4, up-5)
det(Victorians-7, the-6)
dobj(bring-4, Victorians-7)
det(lot-9, a-8)
dep(Victorians-7, lot-9)
ccomp(know-2, go-12)
conj_but(bring-4, go-12)
xcomp(go-12, read-13)
nn(Twist-16, Oliver-15)
dobj(read-13, Twist-16)

(ROOT
  (FRAG ('' '')
    (NP (NN Maybe) (RB just))
    (PP
      (ADVP (DT the))
      (RB first)
      (NP (JJ few) (NNS chapters)))
    (. .)))

root(ROOT-0, Maybe-2)
advmod(Maybe-2, just-3)
dep(Maybe-2, the-4)
advmod(the-4, first-5)
amod(chapters-7, few-6)
pobj(the-4, chapters-7)

(ROOT
  (S
    (S
      (NP (NNS Adults))
      (VP
        (VP (VBN starved)
          (CC and)
          (VBN jailed))
        (CC and)
        (VP (VBD beat)
          (NP (JJ tiny) (NNS children))
          (PP (IN in)
            (NP
              (NP (DT the) (JJ Victorian) (NN era)
                (CC and)
                (NN thought) (NN nothing))
              (PP (IN of)
                (NP (PRP it))))))))
    (: ;)
    (S
      (NP (NNS children))
      (VP (VBD were) (RB n't)
        (NP
          (NP (DT the) (NN purpose))
          (PP (IN of)
            (NP (NN marriage))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (NNS people))
            (VP (VBP claim)
              (ADVP (RB now)))))))
    (. .)))

nsubj(starved-2, Adults-1)
nsubj(jailed-4, Adults-1)
nsubj(beat-6, Adults-1)
root(ROOT-0, starved-2)
conj_and(starved-2, jailed-4)
conj_and(starved-2, beat-6)
amod(children-8, tiny-7)
dobj(beat-6, children-8)
det(era-12, the-10)
amod(era-12, Victorian-11)
prep_in(beat-6, era-12)
nn(nothing-15, thought-14)
prep_in(beat-6, nothing-15)
conj_and(era-12, nothing-15)
prep_of(era-12, it-17)
nsubj(purpose-23, children-19)
cop(purpose-23, were-20)
neg(purpose-23, n't-21)
det(purpose-23, the-22)
parataxis(starved-2, purpose-23)
prep_of(purpose-23, marriage-25)
mark(claim-29, as-27)
nsubj(claim-29, people-28)
advcl(purpose-23, claim-29)
advmod(claim-29, now-30)

(ROOT
  (S
    (NP (NNP Marriage))
    (VP (VBD was)
      (NP
        (NP (DT all))
        (PP (IN about)
          (NP (JJ social)
            (CC and)
            (JJ economic) (NN stability)))))
    (. .)))

nsubj(all-3, Marriage-1)
cop(all-3, was-2)
root(ROOT-0, all-3)
amod(stability-8, social-5)
conj_and(social-5, economic-7)
amod(stability-8, economic-7)
prep_about(all-3, stability-8)

(ROOT
  (S
    (S
      (NP (NNP Children))
      (VP (VBD were)
        (ADVP (RB just))
        (NP (DT a) (NN side) (NN result))))
    (CC and)
    (S
      (NP (PRP you))
      (ADVP (RB only))
      (VP (VBD needed)
        (NP (CD one) (NN male))
        (S
          (VP (TO to)
            (VP (VB survive)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP (PRP$ your) (NN heir)
                      (CC and)
                      (JJ social) (NN bargaining) (NN chip))))))))))
    (. .)))

nsubj(result-6, Children-1)
cop(result-6, were-2)
advmod(result-6, just-3)
det(result-6, a-4)
nn(result-6, side-5)
root(ROOT-0, result-6)
nsubj(needed-10, you-8)
advmod(needed-10, only-9)
conj_and(result-6, needed-10)
num(male-12, one-11)
dobj(needed-10, male-12)
aux(survive-14, to-13)
xcomp(needed-10, survive-14)
aux(heir-18, to-15)
cop(heir-18, be-16)
poss(heir-18, your-17)
xcomp(survive-14, heir-18)
amod(chip-22, social-20)
nn(chip-22, bargaining-21)
xcomp(survive-14, chip-22)
conj_and(heir-18, chip-22)

(ROOT
  (S (-LRB- -LRB-)
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (PP (IN in)
          (NP (DT the) (NNP Bible)))))
    (: ;)
    (S
      (NP (NNS children))
      (VP (VBP are)
        (UCP (RB not)
          (ADVP (RB treasure))
          (, ,)
          (CC but)
          (NP
            (NP (DT a) (`` ``) (NN quiver) (JJ full) ('' ''))
            (PP (IN of)
              (NP (NNS arrows)))))))
    (. .) (-RRB- -RRB-)))

nsubj('s-3, It-2)
root(ROOT-0, 's-3)
det(Bible-6, the-5)
prep_in('s-3, Bible-6)
nsubj(are-9, children-8)
parataxis('s-3, are-9)
dep(are-9, not-10)
dep(not-10, treasure-11)
det(quiver-16, a-14)
dep(are-9, quiver-16)
conj_but(not-10, quiver-16)
amod(quiver-16, full-17)
prep_of(quiver-16, arrows-20)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Today) (POS 's))
        (NN view))
      (PP (IN of)
        (NP
          (NP (NNS children))
          (PP (IN as)
            (NP (NNP all-important))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ modern) (NN luxury))
        (, ,) (RB not)
        (NP (DT a) (JJ traditional) (NN function))))
    (. .)))

poss(view-3, Today-1)
nsubj(luxury-11, view-3)
prep_of(view-3, children-5)
prep_as(children-5, all-important-7)
cop(luxury-11, is-8)
det(luxury-11, a-9)
amod(luxury-11, modern-10)
root(ROOT-0, luxury-11)
neg(luxury-11, not-13)
det(function-16, a-14)
amod(function-16, traditional-15)
dep(luxury-11, function-16)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ my) (NN view)))
    (, ,)
    (NP (JJ Western) (NN marriage))
    (VP (VBD evolved)
      (PP (IN from) (`` ``)
        (NP
          (NP (CD one) (NN man))
          (PP (IN with)
            (NP
              (QP (RB as) (JJ many))
              (NNS wives)))))
      (SBAR (IN as)
        (S
          (NP (PRP he))
          (VP (MD could)
            (VP (VB afford) ('' '')
              (PP (TO to)
                (NP
                  (NP (`` ``) (CD one) (NN man))
                  (PP (IN with)
                    (NP
                      (NP (CD one) (NN wife))
                      (SBAR
                        (WHNP (WP$ whose)
                          (NP (NN property)))
                        (S
                          (NP (PRP he))
                          (VP (VBD owned))))))
                  ('' '')))
              (PP (TO to)
                (NP
                  (NP (`` ``) (NN one) (NN man)
                    (CC and)
                    (NN woman))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (MD could)
                        (VP (VB keep)
                          (NP (PRP$ her) (NN property))
                          ('' '')
                          (PP (TO to)
                            (NP (`` ``)
                              (NP (CD one) (NN man))
                              (CC and)
                              (NP
                                (NP (CD one) (NN woman))
                                (SBAR
                                  (WHNP (WP who))
                                  (S
                                    (VP (MD could)
                                      (VP
                                        (VP (VB divorce)
                                          (NP (PRP him)))
                                        (CC and)
                                        (VP
                                          (ADVP (RB still))
                                          (VB keep)
                                          (NP (NN custody)))))))))))))))))))))
    (. .)))

poss(view-3, my-2)
prep_in(evolved-7, view-3)
amod(marriage-6, Western-5)
nsubj(evolved-7, marriage-6)
root(ROOT-0, evolved-7)
num(man-11, one-10)
prep_from(evolved-7, man-11)
quantmod(many-14, as-13)
num(wives-15, many-14)
prep_with(man-11, wives-15)
mark(afford-19, as-16)
nsubj(afford-19, he-17)
aux(afford-19, could-18)
advcl(evolved-7, afford-19)
num(man-24, one-23)
prep_to(afford-19, man-24)
num(wife-27, one-26)
prep_with(man-24, wife-27)
poss(property-29, wife-27)
dobj(owned-31, property-29)
rel(owned-31, property-29)
nsubj(owned-31, he-30)
rcmod(wife-27, owned-31)
prep_to(afford-19, one-35)
conj_and(man-36, one-35)
nn(man-36, one-35)
nsubj(keep-41, one-35)
prep_to(afford-19, man-36)
nsubj(keep-41, man-36)
prep_to(afford-19, woman-38)
conj_and(man-36, woman-38)
nsubj(keep-41, woman-38)
aux(keep-41, could-40)
rcmod(man-36, keep-41)
poss(property-43, her-42)
dobj(keep-41, property-43)
num(man-48, one-47)
prep_to(keep-41, man-48)
num(woman-51, one-50)
prep_to(keep-41, woman-51)
conj_and(man-48, woman-51)
nsubj(divorce-54, woman-51)
nsubj(keep-58, woman-51)
aux(divorce-54, could-53)
rcmod(woman-51, divorce-54)
dobj(divorce-54, him-55)
advmod(keep-58, still-57)
rcmod(woman-51, keep-58)
conj_and(divorce-54, keep-58)
dobj(keep-58, custody-59)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (VP
        (VP (VBN taken)
          (NP
            (NP (NN biology) (, ,) (NN anatomy)
              (CC and)
              (NN physiology))
            (, ,)
            (CC and)
            (NP
              (NP
                (NP (DT a) (JJ major) (POS 's))
                (NN worth))
              (PP (IN of)
                (NP (NN psychology) (NNS classes))))
            (, ,)))
        (CC and)
        (VP (VBN done)
          (ADVP (RB as) (RB well))
          (PP (IN as)
            (NP (DT the) (NNS males))))))
    (. .)))

nsubj(taken-3, I-1)
nsubj(done-20, I-1)
aux(taken-3, 've-2)
root(ROOT-0, taken-3)
dobj(taken-3, biology-4)
dobj(taken-3, anatomy-6)
conj_and(biology-4, anatomy-6)
dobj(taken-3, physiology-8)
conj_and(biology-4, physiology-8)
det(major-12, a-11)
poss(worth-14, major-12)
dobj(taken-3, worth-14)
conj_and(biology-4, worth-14)
nn(classes-17, psychology-16)
prep_of(worth-14, classes-17)
conj_and(taken-3, done-20)
advmod(well-22, as-21)
mwe(well-22, as-21)
advmod(done-20, well-22)
det(males-25, the-24)
prep_as(done-20, males-25)

(ROOT
  (S ('' '')
    (NP (NNP Marriages))
    (ADVP (RB also))
    (VP (VBD shifted)
      (PP (IN from)
        (S
          (VP (VBN arranged)
            (PP (TO to)
              (NP
                (NP (NN love))
                (VP (VBZ matches))))))))
    (. .)))

nsubj(shifted-4, Marriages-2)
advmod(shifted-4, also-3)
root(ROOT-0, shifted-4)
prepc_from(shifted-4, arranged-6)
prep_to(arranged-6, love-8)
dep(love-8, matches-9)

(ROOT
  (S (CC And)
    (NP (JJ homosexual) (NN marriage))
    (VP (VBD was)
      (ADVP (IN around)
        (PP (IN for)
          (NP (DT the) (JJ British)
            (CC and)
            (JJ French))))
      (PP (IN in)
        (NP
          (NP (DT the) (JJ early) (NNP Middle) (NNPS Ages))
          (, ,)
          (NP (DT the) (NNPS Picts))
          (, ,)
          (CC and)
          (NP (DT the) (NNPS Romans))))
      (SBAR (IN until)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (VP (VBN banned)
              (PP (IN as)
                (NP (DT a) (JJ political) (NN move))))))))
    (. .)))

cc(was-4, And-1)
amod(marriage-3, homosexual-2)
nsubj(was-4, marriage-3)
root(ROOT-0, was-4)
advmod(was-4, around-5)
dep(British-8, the-7)
prep_for(around-5, British-8)
prep_for(around-5, French-10)
conj_and(British-8, French-10)
det(Ages-15, the-12)
amod(Ages-15, early-13)
nn(Ages-15, Middle-14)
prep_in(was-4, Ages-15)
det(Picts-18, the-17)
prep_in(was-4, Picts-18)
conj_and(Ages-15, Picts-18)
det(Romans-22, the-21)
prep_in(was-4, Romans-22)
conj_and(Ages-15, Romans-22)
mark(banned-26, until-23)
nsubjpass(banned-26, it-24)
auxpass(banned-26, was-25)
advcl(was-4, banned-26)
det(move-30, a-28)
amod(move-30, political-29)
prep_as(banned-26, move-30)

(ROOT
  (S
    (PP (VBN Given)
      (NP (DT the) (JJR bigger) (NN picture)))
    (, ,)
    (NP (PRP I))
    (VP (VBP see)
      (NP (DT no) (NN reason)
        (S (RB not)
          (VP (TO to)
            (VP (VB bring)
              (NP (PRP it))
              (ADVP (RB back))
              (NP (NN today)))))))
    (. .)))

prep(see-7, Given-1)
det(picture-4, the-2)
amod(picture-4, bigger-3)
dep(Given-1, picture-4)
nsubj(see-7, I-6)
root(ROOT-0, see-7)
det(reason-9, no-8)
dobj(see-7, reason-9)
neg(bring-12, not-10)
aux(bring-12, to-11)
infmod(reason-9, bring-12)
dobj(bring-12, it-13)
advmod(bring-12, back-14)
tmod(bring-12, today-15)

(ROOT
  (S
    (INTJ (UH Oh))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG loving)
        (NP (DT this) (NN discussion))
        (ADVP (RB too))))
    (. .)))

dep(loving-5, Oh-1)
nsubj(loving-5, I-3)
aux(loving-5, 'm-4)
root(ROOT-0, loving-5)
det(discussion-7, this-6)
dobj(loving-5, discussion-7)
advmod(loving-5, too-8)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (NP
          (NP (DT the) (NN opposite))
          (PP (IN of)
            (NP (PRP me))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB usually))
      (NP (JJ such) (NNS people))
      (VP (VBP do) (RB n't)
        (VP (VB have)
          (NP (PRP$ your) (NN calm))
          (, ,)
          (PP (IN for)
            (NP (DT some) (JJ odd) (NN reason))))))
    (. .)))

nsubj(opposite-4, You-1)
cop(opposite-4, 're-2)
det(opposite-4, the-3)
root(ROOT-0, opposite-4)
prep_of(opposite-4, me-6)
advmod(have-14, usually-9)
amod(people-11, such-10)
nsubj(have-14, people-11)
aux(have-14, do-12)
neg(have-14, n't-13)
conj_and(opposite-4, have-14)
poss(calm-16, your-15)
dobj(have-14, calm-16)
det(reason-21, some-19)
amod(reason-21, odd-20)
prep_for(have-14, reason-21)

(ROOT
  (PRN (: :)
    (S
      (VP (VB D)))))


(ROOT
  (S
    (S
      (NP (NNP Science) (NNS classes))
      (VP (VBP are)
        (NP (DT a) (NN prerequisite))))
    (, ,)
    (CC and)
    (S
      (NP (NNS women)
        (CC and)
        (NNS men))
      (VP (VBP are)
        (VP (VBG passing)
          (NP (PRP them))
          (ADVP (RB equally)))))
    (. .)))

nn(classes-2, Science-1)
nsubj(prerequisite-5, classes-2)
cop(prerequisite-5, are-3)
det(prerequisite-5, a-4)
root(ROOT-0, prerequisite-5)
nsubj(passing-12, women-8)
conj_and(women-8, men-10)
nsubj(passing-12, men-10)
aux(passing-12, are-11)
conj_and(prerequisite-5, passing-12)
dobj(passing-12, them-13)
advmod(passing-12, equally-14)

(ROOT
  (S (IN So) (, ,)
    (SBAR (IN since)
      (S
        (NP (PRP they))
        (VP (VBP show)
          (NP
            (NP (DT the) (JJ same) (NN aptitude))
            (PP (IN for)
              (NP
                (NP (DT the) (JJ same) (NNS subjects))
                (PP (IN on)
                  (NP (DT the) (JJR lower) (NNS levels)))))))))
    (, ,)
    (NP (NN something))
    (VP (MD must)
      (VP (VB be)
        (VP (VBG stepping)
          (PRT (RP in))
          (S
            (VP (TO to)
              (VP (VB select)
                (PP (IN for)
                  (NP
                    (NP (DT a) (NN career))
                    (PP (IN in)
                      (NP (DT the) (NNS sciences)))))))))))
    (. .)))

dep(stepping-21, So-1)
mark(show-5, since-3)
nsubj(show-5, they-4)
advcl(stepping-21, show-5)
det(aptitude-8, the-6)
amod(aptitude-8, same-7)
dobj(show-5, aptitude-8)
det(subjects-12, the-10)
amod(subjects-12, same-11)
prep_for(aptitude-8, subjects-12)
det(levels-16, the-14)
amod(levels-16, lower-15)
prep_on(subjects-12, levels-16)
nsubj(stepping-21, something-18)
aux(stepping-21, must-19)
aux(stepping-21, be-20)
root(ROOT-0, stepping-21)
prt(stepping-21, in-22)
aux(select-24, to-23)
xcomp(stepping-21, select-24)
det(career-27, a-26)
prep_for(select-24, career-27)
det(sciences-30, the-29)
prep_in(career-27, sciences-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD read)
      (NP (DT an) (NN account))
      (PP (IN by)
        (NP (DT a) (JJ female) (NN scientist)))
      (PP (IN with)
        (NP
          (NP (CD two) (JJ email) (NNS accounts))
          (, ,)
          (NP
            (NP (CD one))
            (PP (IN with)
              (NP (PRP$ her) (NNS initials))))
          (, ,)
          (NP
            (NP (CD one))
            (PP (IN with)
              (NP (PRP$ her) (NN name)))))))
    (. .)))

nsubj(read-2, I-1)
root(ROOT-0, read-2)
det(account-4, an-3)
dobj(read-2, account-4)
det(scientist-8, a-6)
amod(scientist-8, female-7)
prep_by(read-2, scientist-8)
num(accounts-12, two-10)
amod(accounts-12, email-11)
prep_with(read-2, accounts-12)
appos(accounts-12, one-14)
poss(initials-17, her-16)
prep_with(one-14, initials-17)
appos(accounts-12, one-19)
poss(name-22, her-21)
prep_with(one-19, name-22)

(ROOT
  (S
    (S
      (NP (NNS Colleagues))
      (VP
        (VP (VBD assumed)
          (SBAR
            (S
              (NP
                (NP (DT the) (NN account))
                (PP (IN with)
                  (NP (DT the) (NNS initials))))
              (VP (VBD was)
                (ADJP (JJ male))))))
        (CC and)
        (VP (VBD kept)
          (NP (DT that) (NN account))
          (PP (IN in)
            (NP
              (NP (DT the) (NN loop))
              (PP (IN with)
                (NP (NN news)
                  (CC and)
                  (NNS rumors))))))))
    (: ;)
    (S
      (NP (PRP they))
      (VP (VBD ignored)
        (NP (DT the) (NN one))
        (PP (IN with)
          (NP (PRP$ her) (JJ first) (NN name)))
        (PP (IN on)
          (NP (PRP it)))))
    (. .)))

nsubj(assumed-2, Colleagues-1)
nsubj(kept-11, Colleagues-1)
root(ROOT-0, assumed-2)
det(account-4, the-3)
nsubj(male-9, account-4)
det(initials-7, the-6)
prep_with(account-4, initials-7)
cop(male-9, was-8)
ccomp(assumed-2, male-9)
conj_and(assumed-2, kept-11)
det(account-13, that-12)
dobj(kept-11, account-13)
det(loop-16, the-15)
prep_in(kept-11, loop-16)
prep_with(loop-16, news-18)
prep_with(loop-16, rumors-20)
conj_and(news-18, rumors-20)
nsubj(ignored-23, they-22)
parataxis(assumed-2, ignored-23)
det(one-25, the-24)
dobj(ignored-23, one-25)
poss(name-29, her-27)
amod(name-29, first-28)
prep_with(ignored-23, name-29)
prep_on(ignored-23, it-31)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was) (RB n't)
      (NP
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBD did) (RB n't)
              (VP (VB like)
                (CC or)
                (VB know)
                (NP (PRP her))))))
        (: ;)
        (S
          (NP (PRP they))
          (VP (VBD did) (RB n't)
            (VP (VB like)
              (CC or)
              (VB know)
              (NP (DT the) (JJ other) (NN account))
              (ADVP (RB either)))))))
    (. .)))

nsubj(like-16, It-1)
nsubj(know-18, It-1)
cop(like-16, was-2)
neg(like-16, n't-3)
dep(like-8, that-4)
nsubj(like-8, they-5)
nsubj(know-10, they-5)
aux(like-8, did-6)
neg(like-8, n't-7)
dep(like-16, like-8)
conj_or(like-8, know-10)
dep(like-16, know-10)
dobj(like-8, her-11)
nsubj(like-16, they-13)
aux(like-16, did-14)
neg(like-16, n't-15)
root(ROOT-0, like-16)
conj_or(like-16, know-18)
det(account-21, the-19)
amod(account-21, other-20)
dobj(like-16, account-21)
advmod(like-16, either-22)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (CD one) (NN example))
        (PP (IN of)
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP
                (NP (PRP$ your) (NN career))
                (PP (IN as)
                  (NP (DT a) (NN scientist))))
              (VP (VBZ is)
                (VP (VBN defined)
                  (PP (IN by)
                    (NP
                      (NP (JJ passive) (NN discrimination))
                      (PP (IN in)
                        (NP (DT a) (JJ publish-or-perish) (NN field)))))
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (PRP$ your) (NNS colleagues))
                      (VP (VBP are)
                        (ADJP (JJ all-important))))))))))))
    (. .)))

nsubj(example-4, That-1)
cop(example-4, 's-2)
num(example-4, one-3)
root(ROOT-0, example-4)
advmod(defined-13, how-6)
poss(career-8, your-7)
nsubjpass(defined-13, career-8)
det(scientist-11, a-10)
prep_as(career-8, scientist-11)
auxpass(defined-13, is-12)
prepc_of(example-4, defined-13)
amod(discrimination-16, passive-15)
agent(defined-13, discrimination-16)
det(field-20, a-18)
amod(field-20, publish-or-perish-19)
prep_in(discrimination-16, field-20)
advmod(all-important-25, where-21)
poss(colleagues-23, your-22)
nsubj(all-important-25, colleagues-23)
cop(all-important-25, are-24)
advcl(defined-13, all-important-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB see)
                (NP (DT a) (JJ similar) (NN effect) (NN might) (NN chip))
                (PP (IN in)
                  (PP (IN at)
                    (NP (DT the) (JJ grad) (NN student) (NN level))))))))))
    (. .)))

nsubj(sure-3, I-1)
cop(sure-3, 'm-2)
root(ROOT-0, sure-3)
advmod(see-7, how-4)
nsubj(see-7, you-5)
aux(see-7, can-6)
dep(sure-3, see-7)
det(chip-12, a-8)
amod(chip-12, similar-9)
nn(chip-12, effect-10)
nn(chip-12, might-11)
dobj(see-7, chip-12)
prep(see-7, in-13)
pcomp(in-13, at-14)
det(level-18, the-15)
amod(level-18, grad-16)
nn(level-18, student-17)
prep_at(in-13, level-18)

