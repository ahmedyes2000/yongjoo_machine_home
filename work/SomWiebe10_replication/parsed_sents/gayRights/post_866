(ROOT
  (SINV
    (VP (VBZ Is) (RB not)
      (NP
        (NP (DT the) (JJ very) (NN basis))
        (PP (IN for)
          (NP (JJ same) (NN sex)))))
    (NP
      (NP (NN marriage))
      (, ,)
      (NP (`` ``) (NNP EQUALITY) (NNP ?!)))))

cop(basis-5, Is-1)
neg(basis-5, not-2)
det(basis-5, the-3)
amod(basis-5, very-4)
root(ROOT-0, basis-5)
amod(sex-8, same-7)
prep_for(basis-5, sex-8)
nsubj(basis-5, marriage-9)
nn(?!-13, EQUALITY-12)
appos(marriage-9, ?!-13)

(ROOT
  (S ('' '')
    (ADVP (IN So) (RB then))
    (, ,)
    (NP (RB now) (DT that) (PRP YOU))
    (VP (VBD mentioned)
      (NP
        (NP (PRP it))
        (: :)
        (SBARQ
          (WHADVP (WRB Why))
          (SQ (MD should)
            (NP
              (NP (NN someone))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ wants)
                    (S
                      (VP (TO to)
                        (VP (VB paractice)
                          (ADVP (RB beastiality)))))))))
            (VP (VB be)
              (VP (VBN denied)
                (NP (PRP$ their) (`` ``) (NN right) ('' ''))
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (ADVP (RB so))))))))
          (. ?))))))

advmod(mentioned-8, So-2)
advmod(So-2, then-3)
advmod(YOU-7, now-5)
det(YOU-7, that-6)
nsubj(mentioned-8, YOU-7)
root(ROOT-0, mentioned-8)
dobj(mentioned-8, it-9)
advmod(denied-20, Why-11)
aux(denied-20, should-12)
nsubj(wants-15, someone-13)
nsubjpass(denied-20, someone-13)
rcmod(someone-13, wants-15)
aux(paractice-17, to-16)
xcomp(wants-15, paractice-17)
advmod(paractice-17, beastiality-18)
auxpass(denied-20, be-19)
dep(it-9, denied-20)
poss(right-23, their-21)
dobj(denied-20, right-23)
aux(do-26, to-25)
xcomp(denied-20, do-26)
advmod(do-26, so-27)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ does) (RB not)
      (VP (VB harm)
        (NP (NN anyone))))
    (. .)))

nsubj(harm-5, It-2)
aux(harm-5, does-3)
neg(harm-5, not-4)
root(ROOT-0, harm-5)
dobj(harm-5, anyone-6)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP
        (NP
          (NP (NNS people))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP want)
                (PP (TO to)
                  (NP (NN murder)))))))
        (, ,)
        (CC and)
        (NP
          (NP (NNS people))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP (VB die)))))))))
      (. ?))))

root(ROOT-0, What-1)
dep(What-1, about-2)
pobj(about-2, people-3)
nsubj(want-5, people-3)
rcmod(people-3, want-5)
prep_to(want-5, murder-7)
pobj(about-2, people-10)
conj_and(people-3, people-10)
nsubj(want-12, people-10)
rcmod(people-10, want-12)
aux(die-14, to-13)
xcomp(want-12, die-14)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP us))
        (VP
          (VP (VB hook)
            (NP (PRP them))
            (PRT (RP up)))
          (CC and)
          (VP (VB legalize)
            (NP (DT that))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(hook-3, us-2)
nsubj(legalize-7, us-2)
ccomp(Let-1, hook-3)
dobj(hook-3, them-4)
prt(hook-3, up-5)
ccomp(Let-1, legalize-7)
conj_and(hook-3, legalize-7)
dobj(legalize-7, that-8)

(ROOT
  (FRAG
    (ADVP (RB Supposedly))
    (, ,)
    (PP (VBG according)
      (PP (TO to)
        (NP
          (NP (DT that) (JJ same) (NNP SSM) (NN agenda) (NN agument) (NN basis))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ is)
                (NP (DT another) (NN person)
                  (S
                    (VP (TO to)
                      (VP (VB determine)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP
                              (VP (VBZ is))
                              (CC and)
                              (VP (VBZ is) (RB not)
                                (ADJP (JJ acceptable))))))))))))))))
    (. ?)))

root(ROOT-0, Supposedly-1)
prepc_according_to(Supposedly-1, to-4)
det(basis-10, that-5)
amod(basis-10, same-6)
nn(basis-10, SSM-7)
nn(basis-10, agenda-8)
nn(basis-10, agument-9)
pobj(Supposedly-1, basis-10)
nsubj(person-15, basis-10)
cop(person-15, is-13)
det(person-15, another-14)
rcmod(basis-10, person-15)
aux(determine-17, to-16)
infmod(person-15, determine-17)
nsubj(is-19, what-18)
nsubj(acceptable-23, what-18)
ccomp(determine-17, is-19)
cop(acceptable-23, is-21)
neg(acceptable-23, not-22)
ccomp(determine-17, acceptable-23)
conj_and(is-19, acceptable-23)

(ROOT
  (S (: ...)
    (CC or)
    (NP (WDT what))
    (VP
      (VP (VBZ is))
      (CC and)
      (VP (VBZ is) (RB not)
        (ADJP (JJ right))))
    (. ?)))

conj_or(is-4, what-3)
nsubj(is-4, what-3)
nsubj(right-8, what-3)
root(ROOT-0, is-4)
cop(right-8, is-6)
neg(right-8, not-7)
conj_and(is-4, right-8)

(ROOT
  (SBAR (RB Just) (IN because)
    (S
      (S
        (NP (PRP you))
        (VP (VBP disagree)))
      (: ;)
      (CC or)
      (S
        (NP (PRP you))
        (VP (VBP think)
          (S
            (NP (PRP it))
            (ADJP (JJ gross)
              (CC or)
              (JJ unacceptable)))))
      (: ;)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ gives)
            (NP (PRP us))
            (NP (DT the) (NN right)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB try))
                    (CC and)
                    (`` ``)
                    (VP (VB force)
                      (NP
                        (NP (DT that))
                        (PP (IN on)
                          (NP (DT another)))))
                    (, ,)
                    (CC and)
                    (VP (VB deniy)
                      (S
                        (NP (PRP them))
                        (`` ``)
                        (NP (JJ inalienable) (NNS rights))))))))))))
    (. ?)))

advmod(disagree-4, Just-1)
dep(disagree-4, because-2)
nsubj(disagree-4, you-3)
root(ROOT-0, disagree-4)
nsubj(think-8, you-7)
conj_or(disagree-4, think-8)
nsubj(gross-10, it-9)
nsubj(unacceptable-12, it-9)
xcomp(think-8, gross-10)
xcomp(think-8, unacceptable-12)
conj_or(gross-10, unacceptable-12)
nsubj(gives-15, what-14)
parataxis(disagree-4, gives-15)
iobj(gives-15, us-16)
det(right-18, the-17)
dobj(gives-15, right-18)
aux(try-20, to-19)
infmod(right-18, try-20)
infmod(right-18, force-23)
conj_and(try-20, force-23)
dobj(force-23, that-24)
prep_on(that-24, another-26)
infmod(right-18, deniy-29)
conj_and(try-20, deniy-29)
dep(rights-33, them-30)
amod(rights-33, inalienable-32)
dep(deniy-29, rights-33)

(ROOT
  (S ('' '')
    (PP (IN For)
      (NP
        (NP (DT that) (NN matter))
        (, ,)
        (UCP
          (FRAG
            (WHNP (WP who)))
          (CC or)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ determines)
                (S
                  (NP (WDT what))
                  (NP (NNS rights)))))))))
    (VP (VBP are) (`` ``)
      (ADJP (JJ inalianable)))
    (. ?)))

det(matter-4, that-3)
prep_for(inalianable-14, matter-4)
dep(matter-4, who-6)
nsubj(determines-9, what-8)
dep(matter-4, determines-9)
conj_or(who-6, determines-9)
nsubj(rights-11, what-10)
xcomp(determines-9, rights-11)
cop(inalianable-14, are-12)
root(ROOT-0, inalianable-14)

(ROOT
  (S ('' '')
    (NP (RB So) (JJ then))
    (ADVP (PRP we))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB allow)
            (NP (NNP ALL) (NNS rights))
            (ADVP (RB then))))))
    (. .)))

advmod(then-3, So-2)
nsubj(have-5, then-3)
xsubj(allow-7, then-3)
advmod(have-5, we-4)
root(ROOT-0, have-5)
aux(allow-7, to-6)
xcomp(have-5, allow-7)
nn(rights-9, ALL-8)
dobj(allow-7, rights-9)
advmod(allow-7, then-10)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB urinate)
                (PP (IN in)
                  (NP (DT the) (NN neighborhood) (NN park)))
                (, ,)
                (PP (IN at)
                  (NP
                    (NP (NN night))
                    (SBAR
                      (WHADVP (WRB where))
                      (S (RB not)
                        (VP (VBG exposing)
                          (PP (TO to)
                            (NP (NN anyone))))))))))))))
    (. ?)))

dep(want-4, What-1)
mark(want-4, if-2)
nsubj(want-4, I-3)
xsubj(urinate-6, I-3)
root(ROOT-0, want-4)
aux(urinate-6, to-5)
xcomp(want-4, urinate-6)
det(park-10, the-8)
nn(park-10, neighborhood-9)
prep_in(urinate-6, park-10)
prep_at(urinate-6, night-13)
advmod(exposing-16, where-14)
neg(exposing-16, not-15)
rcmod(night-13, exposing-16)
prep_to(exposing-16, anyone-18)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP I))
      (VP (VB be)
        (VP (VBN denied)
          (NP (DT that) (NN right)))))
    (. ?)))

advmod(denied-5, Why-1)
aux(denied-5, should-2)
nsubjpass(denied-5, I-3)
auxpass(denied-5, be-4)
root(ROOT-0, denied-5)
det(right-7, that-6)
dobj(denied-5, right-7)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (VBZ does)
      (NP (PRP it))
      (VP (VB harm)))
    (. ?)))

dobj(harm-4, Who-1)
aux(harm-4, does-2)
nsubj(harm-4, it-3)
root(ROOT-0, harm-4)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP they))
      (VP (VB be) (`` ``)
        (VP (VBN discriminated)
          (PP (IN against)))))
    (. .)))

advmod(discriminated-6, Why-1)
aux(discriminated-6, should-2)
nsubjpass(discriminated-6, they-3)
auxpass(discriminated-6, be-4)
root(ROOT-0, discriminated-6)
prep(discriminated-6, against-7)

(ROOT
  (S
    (NP (NNP Public) (NN urination) (NNS laws))
    (VP (VBP are) (`` ``)
      (ADJP (JJ discriminatory)))
    (. .)))

nn(laws-3, Public-1)
nn(laws-3, urination-2)
nsubj(discriminatory-6, laws-3)
cop(discriminatory-6, are-4)
root(ROOT-0, discriminatory-6)

(ROOT
  (NP ('' '')
    (CC Are)
    (NP
      (NP (PRP you))
      (VP (VBG starting)
        (S
          (VP (TO to)
            (VP (VB understand)
              (NP
                (NP (DT the) (NN definition))
                (PP (IN of)
                  (NP (`` ``)
                    (NP (NNP pandora) (POS 's))
                    (NN box) ('' ''))))
              (ADVP (RB yet)))))))
    (. ?)))

cc(you-3, Are-2)
root(ROOT-0, you-3)
xsubj(understand-6, you-3)
partmod(you-3, starting-4)
aux(understand-6, to-5)
xcomp(starting-4, understand-6)
det(definition-8, the-7)
dobj(understand-6, definition-8)
poss(box-13, pandora-11)
prep_of(definition-8, box-13)
advmod(understand-6, yet-15)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBP do)
      (NP (PRP we))
      (VP (VB draw)
        (NP (DT the) (NN line))))
    (. ?)))

advmod(draw-4, Where-1)
aux(draw-4, do-2)
nsubj(draw-4, we-3)
root(ROOT-0, draw-4)
det(line-6, the-5)
dobj(draw-4, line-6)

(ROOT
  (S (CC Or)
    (VBP do)
    (NP (PRP you))
    (VP (VB realize)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are)
            (ADVP (RB indirectly))
            (VP (VBG advocating)
              (NP
                (NP
                  (NP (DT the) (NN drawing))
                  (PP (IN of)
                    (NP (DT NO) (NNS LINES))))
                (, ,)
                (CC and)
                (NP
                  (NP (DT the) (NN erasing))
                  (PP (IN of)
                    (NP (JJ many))))))))))
    (. ?)))

cc(realize-4, Or-1)
dep(realize-4, do-2)
nsubj(realize-4, you-3)
root(ROOT-0, realize-4)
nsubj(advocating-8, you-5)
aux(advocating-8, are-6)
advmod(advocating-8, indirectly-7)
ccomp(realize-4, advocating-8)
det(drawing-10, the-9)
dobj(advocating-8, drawing-10)
det(LINES-13, NO-12)
prep_of(drawing-10, LINES-13)
det(erasing-17, the-16)
dobj(advocating-8, erasing-17)
conj_and(drawing-10, erasing-17)
prep_of(erasing-17, many-19)

(ROOT
  (S
    (INTJ (UH Hey))
    (, ,)
    (NP
      (NP (`` ``) (NNP EQUAL) ('' ''))
      (NP (NNS means)))
    ('' '')
    (VP (VBZ EQUAL))
    (. !)))

dep(EQUAL-8, Hey-1)
nsubj(EQUAL-8, EQUAL-4)
dep(EQUAL-4, means-6)
root(ROOT-0, EQUAL-8)

(ROOT
  (NP ('' '')
    (CC and)
    (NP
      (NP (`` ``)
        (NP
          (ADJP (JJ right)
            (PP (TO to) ('' '')
              (NP (NNS means))
              (`` ``)))
          (NN right))
        (PP (TO to))
        ('' ''))
      (CC and)
      (NP
        (NP (NN escecially))
        (, ,)
        (NP (`` ``)
          (NP (NN DISCRIMINATION) ('' '') (NN means))
          ('' '')
          (VP (VBN DISCRIMINATION)))))
    (. !)))

amod(right-9, right-4)
prep_to(right-4, means-7)
root(ROOT-0, right-9)
prep(right-9, to-10)
conj_and(right-9, escecially-13)
nn(means-18, DISCRIMINATION-16)
appos(escecially-13, means-18)
partmod(means-18, DISCRIMINATION-20)

(ROOT
  (S ('' '')
    (NP (NNP Or))
    (VP (VBP are)
      (NP
        (NP (PRP you))
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP
                (VP (VB have)
                  (NP (PRP$ your) (NN cake)))
                (CC and)
                (VP (VB eat)
                  (NP (PRP it))
                  (ADVP (RB too)))))))))
    (. ?)))

nsubj(you-4, Or-2)
cop(you-4, are-3)
root(ROOT-0, you-4)
xsubj(have-7, you-4)
partmod(you-4, trying-5)
aux(have-7, to-6)
xcomp(trying-5, have-7)
poss(cake-9, your-8)
dobj(have-7, cake-9)
xcomp(trying-5, eat-11)
conj_and(have-7, eat-11)
dobj(eat-11, it-12)
advmod(eat-11, too-13)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP you))
    (ADVP (RB certainly))
    (VP (VBP are))
    (. .)))

dep(are-5, Yes-1)
nsubj(are-5, you-3)
advmod(are-5, certainly-4)
root(ROOT-0, are-5)

(ROOT
  (S
    (NP
      (NP (DT The) (NN fact))
      (SBAR (IN that)
        (S
          (NP (PRP one))
          (VP
            (VP (MD may) (RB not)
              (VP (VB have)
                (VP (VBN intended)
                  (S
                    (VP (TO to))))))
            (, ,)
            (CC nor)
            (VP (VBD realized)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBD were)))))))))
    (, ,)
    (VP (VBZ does) (RB not)
      (VP
        (VP (VB exonerate)
          (S
            (NP (PRP one))
            (VP (VB form)
              (NP
                (NP (DT the) (NNS guiltiness))
                (PP (IN of)
                  (NP (JJ such)))))))
        (, ,)
        (CC nor)
        (VP (VB preclude)
          (NP (CD one))
          (PP (IN from)
            (NP (DT the) (NN responsibility))))))
    (. .)))

det(fact-2, The-1)
dobj(intended-8, fact-2)
nsubj(exonerate-18, fact-2)
nsubj(preclude-27, fact-2)
complm(intended-8, that-3)
nsubj(intended-8, one-4)
xsubj(to-9, one-4)
nsubj(realized-12, one-4)
aux(intended-8, may-5)
neg(intended-8, not-6)
aux(intended-8, have-7)
dep(fact-2, intended-8)
xcomp(intended-8, to-9)
dep(fact-2, realized-12)
conj_nor(intended-8, realized-12)
nsubj(were-14, they-13)
ccomp(realized-12, were-14)
aux(exonerate-18, does-16)
neg(exonerate-18, not-17)
root(ROOT-0, exonerate-18)
nsubj(form-20, one-19)
ccomp(exonerate-18, form-20)
det(guiltiness-22, the-21)
dobj(form-20, guiltiness-22)
prep_of(guiltiness-22, such-24)
conj_nor(exonerate-18, preclude-27)
dobj(preclude-27, one-28)
det(responsibility-31, the-30)
prep_from(preclude-27, responsibility-31)

(ROOT
  (S (-LRB- -LRB-) (`` ``)
    (NP
      (NP (PRP You))
      ('' '')
      (CC and)
      (NP (JJ other) (NN pronoun) (NNS references)))
    (VP (VBP are)
      (ADJP
        (ADJP (JJ general))
        (CC and)
        (ADJP (RB not) (VBN aimed)
          (PP (IN at)
            (NP
              (NP (NN author))
              (PP (IN in)
                (NP (NN reply))))))))
    (, ,)
    (CC but)
    (ADVP (RB only))
    (S (`` ``)
      (S
        (PP (IN as)
          (NP (DT the) (NNS shoes)))
        (NP
          (NP (NNS fits))
          ('' '')
          (PP (IN for)
            (NP (JJ rhetorical) (NNS purposes)))
          (-RRB- -RRB-))
        (VP (VBP BTW)))
      (: :)
      (S
        (NP (DT this) (NN excerp))
        (ADVP (RB pretty) (RB much))
        (VP (VBZ addresses)
          (NP
            (NP
              (QP (RB almost) (DT all)))
            (PP (IN of)
              (NP
                (NP (DT the) (NNS comments))
                (PP (IN in)
                  (NP
                    (NP (NN support))
                    (PP (IN of)
                      (NP (NNP SSM)))))))
            (, ,)
            (PP (IN in)
              (NP
                (NP
                  (NP (CD one) (NN way))
                  (CC or)
                  (NP (DT another)))
                (: ;)
                (SBAR (IN as)
                  (S
                    (NP (PRP it))
                    (ADVP (RB completely))
                    (VP (VBZ obliterates)
                      (NP
                        (NP (DT the) (JJ primary) (NN basis))
                        (PP (IN of)
                          (NP (DT the) (NNP SSM) (NN argument)))))))))))))
    (. .)))

conj_and(general-10, You-3)
nsubjpass(general-10, You-3)
nsubjpass(aimed-13, You-3)
amod(references-8, other-6)
nn(references-8, pronoun-7)
conj_and(You-3, references-8)
conj_and(general-10, references-8)
nsubjpass(general-10, references-8)
auxpass(general-10, are-9)
cop(general-10, are-9)
root(ROOT-0, general-10)
neg(aimed-13, not-12)
conj_and(general-10, aimed-13)
prep_at(aimed-13, author-15)
prep_in(author-15, reply-17)
advmod(general-10, only-20)
conj_but(general-10, only-20)
det(shoes-24, the-23)
prep_as(BTW-31, shoes-24)
nsubj(BTW-31, fits-25)
amod(purposes-29, rhetorical-28)
prep_for(fits-25, purposes-29)
ccomp(general-10, BTW-31)
conj_but(general-10, BTW-31)
det(excerp-34, this-33)
nsubj(addresses-37, excerp-34)
advmod(much-36, pretty-35)
advmod(addresses-37, much-36)
parataxis(BTW-31, addresses-37)
quantmod(all-39, almost-38)
dobj(addresses-37, all-39)
det(comments-42, the-41)
prep_of(all-39, comments-42)
prep_in(comments-42, support-44)
prep_of(support-44, SSM-46)
num(way-50, one-49)
prep_in(all-39, way-50)
prep_in(all-39, another-52)
conj_or(way-50, another-52)
mark(obliterates-57, as-54)
nsubj(obliterates-57, it-55)
advmod(obliterates-57, completely-56)
dep(way-50, obliterates-57)
det(basis-60, the-58)
amod(basis-60, primary-59)
dobj(obliterates-57, basis-60)
det(argument-64, the-62)
nn(argument-64, SSM-63)
prep_of(basis-60, argument-64)

(ROOT
  (S ('' '')
    (NP (CC And))
    (ADVP (RB so) (RB then))
    (PRN (, ,)
      (NP (NNP likewise) (, ,) (NNP why))
      (VP (MD should)))
    (NP (NNS pedophiles))
    (ADVP (RB also))
    (VP (VBP be)
      (VP (VBN deinied)
        (NP (DT the) (JJ same) (NN oppostunity))
        (S
          (VP (TO to)
            (VP (VB love)
              (CC and)
              (VB care)
              (PP (IN for)
                (NP
                  (NP (NN somone))
                  (PP (IN of)
                    (NP (PRP$ their) (JJ sexual) (NN preference)
                      (CC and)
                      (NN orientation) (NNS ??))))))))))))

nsubjpass(deinied-13, And-2)
advmod(then-4, so-3)
advmod(deinied-13, then-4)
nn(why-8, likewise-6)
nsubj(should-9, why-8)
parataxis(deinied-13, should-9)
nsubjpass(deinied-13, pedophiles-10)
advmod(deinied-13, also-11)
auxpass(deinied-13, be-12)
root(ROOT-0, deinied-13)
det(oppostunity-16, the-14)
amod(oppostunity-16, same-15)
dobj(deinied-13, oppostunity-16)
aux(love-18, to-17)
xcomp(deinied-13, love-18)
xcomp(deinied-13, care-20)
conj_and(love-18, care-20)
prep_for(love-18, somone-22)
poss(preference-26, their-24)
amod(preference-26, sexual-25)
prep_of(somone-22, preference-26)
nn(??-29, orientation-28)
prep_of(somone-22, ??-29)
conj_and(preference-26, ??-29)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (JJ concentual))
          (PRN (: ;)
            (CC or)
            (ADVP (IN at) (JJS least))
            (PP (IN at)
              (NP (JJ certain) (NN age) (NN minimum)))
            (, ,)))))
    (VP (VBP like)
      (NP
        (NP (NN say))
        (, ,)
        (NP (CD 12))
        (CC or)
        (NP (CD 13))))
    (. .)))

mark(concentual-4, If-1)
nsubj(concentual-4, it-2)
cop(concentual-4, is-3)
csubj(like-14, concentual-4)
dep(at-9, or-6)
dep(at-9, at-7)
pobj(at-7, least-8)
dep(concentual-4, at-9)
amod(minimum-12, certain-10)
nn(minimum-12, age-11)
pobj(at-9, minimum-12)
root(ROOT-0, like-14)
dobj(like-14, say-15)
dobj(like-14, 12-17)
conj_or(say-15, 12-17)
dobj(like-14, 13-19)
conj_or(say-15, 13-19)

(ROOT
  (SBAR (WP what) (IN if)
    (S
      (NP (PRP they))
      (VP (VBD were) (`` ``)
        (VP (VBN born)
          (NP (DT that) (NN way)))))
    (. ?)))

dep(born-6, what-1)
dep(born-6, if-2)
nsubjpass(born-6, they-3)
auxpass(born-6, were-4)
root(ROOT-0, born-6)
det(way-8, that-7)
dobj(born-6, way-8)

(ROOT
  (S ('' '')
    (NP (PRP They))
    (VP (VBP are) (`` ``)
      (NP (NNS people))
      (ADVP (RB too)))
    (. .)))

nsubj(people-5, They-2)
cop(people-5, are-3)
root(ROOT-0, people-5)
advmod(people-5, too-6)

(ROOT
  (S ('' '')
    (NP (JJ Pedophilia) (NNS laws)
      (CC and)
      (NN beastiality) (NNS laws))
    (VP
      (VP (VBP are) (`` ``)
        (ADJP (JJ discriminatory))
        ('' ''))
      (CC and)
      (VP (VBP violate)
        (NP (PRP$ their) (NNS rights))
        (S
          (VP (TO to)
            (VP (VB excercise)
              (NP (PRP$ their) (NN freedom)))))))
    (. .)))

amod(laws-3, Pedophilia-2)
nsubj(discriminatory-9, laws-3)
nsubj(violate-12, laws-3)
nn(laws-6, beastiality-5)
conj_and(laws-3, laws-6)
nsubj(discriminatory-9, laws-6)
cop(discriminatory-9, are-7)
root(ROOT-0, discriminatory-9)
conj_and(discriminatory-9, violate-12)
poss(rights-14, their-13)
dobj(violate-12, rights-14)
aux(excercise-16, to-15)
xcomp(violate-12, excercise-16)
poss(freedom-18, their-17)
dobj(excercise-16, freedom-18)

(ROOT
  (S
    (ADVP (RB Maybe) (RB almost))
    (NP (NNP ALL) (NNS laws))
    (VP (VBP are)
      (ADVP (RB then)))
    (. .)))

advmod(almost-2, Maybe-1)
advmod(are-5, almost-2)
nn(laws-4, ALL-3)
nsubj(are-5, laws-4)
root(ROOT-0, are-5)
advmod(are-5, then-6)

(ROOT
  (PP (IN After)
    (NP
      (NP (DT all))
      (, ,) (`` ``)
      (SBARQ
        (WHNP (WP who))
        (SQ (VBZ does)
          (NP (PRP it))
          (VP (VB hurt)))
        (. ?)))))

root(ROOT-0, After-1)
pobj(After-1, all-2)
dobj(hurt-8, who-5)
aux(hurt-8, does-6)
nsubj(hurt-8, it-7)
dep(all-2, hurt-8)

