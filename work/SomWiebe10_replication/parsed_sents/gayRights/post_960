(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (NP
      (NP (DT a) (NN problem))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (EX there))
          (VP (MD may)
            (VP (VB be)
              (ADJP
                (ADJP (JJR more))
                (PP (IN with)
                  (NP
                    (NP (DT this) (NN idea))
                    (PP (IN of)
                      (S
                        (VP (VBG making)
                          (NP (NN marriage))
                          (PP (RB not)
                            (NP (DT a) (JJ legal) (NN issue))))))))))))))
    (VP (VBZ is)
      (NP
        (NP (DT that))
        (PP (IN of)
          (NP (NN divorce)))))
    (. .)))

advmod(is-21, Well-1)
det(problem-4, a-3)
dobj(more-10, problem-4)
nsubj(is-21, problem-4)
rel(more-10, which-6)
expl(more-10, there-7)
aux(more-10, may-8)
cop(more-10, be-9)
rcmod(problem-4, more-10)
det(idea-13, this-12)
prep_with(more-10, idea-13)
prepc_of(idea-13, making-15)
dobj(making-15, marriage-16)
prep(making-15, not-17)
det(issue-20, a-18)
amod(issue-20, legal-19)
pobj(not-17, issue-20)
root(ROOT-0, is-21)
attr(is-21, that-22)
prep_of(that-22, divorce-24)

(ROOT
  (S
    (NP (DT The) (NN way))
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB presently))
      (NP
        (NP (NN setup))
        (SBAR
          (S
            (S
              (S
                (NP (DT the) (NN government))
                (ADVP (RB also))
                (VP (VBZ deals)
                  (PP (IN with)
                    (NP (NN divorce)))))
              (, ,)
              (CC but)
              (S
                (NP (DT a) (NN divorce) (NN case))
                (VP (MD could) (RB not)
                  (VP (VB be)
                    (VP (VBN settled)
                      (PP (IN in)
                        (NP (NN court)))
                      (SBAR (IN if)
                        (S
                          (NP (DT the) (NN marriage))
                          (VP (VBD was)
                            (ADVP (RB never))
                            (VP (VBN considered)
                              (S
                                (VP (TO to)
                                  (VP (VB be)
                                    (ADJP (JJ legal))))))))))))))
            (CC or)
            (S
              (NP
                (ADVP (IN at) (JJS least))
                (NP (NN something))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (MD can)
                      (VP (VB be)
                        (VP (VBN considered)
                          (S
                            (ADJP (JJ legal)))))))))
              (, ,)
              (ADVP (RB however))
              (NP (PRP I))
              (VP (VBP do) (RB n't)
                (VP (VB mean)
                  (S
                    (VP (TO to)
                      (VP (VB convey)
                        (SBAR (IN that)
                          (S
                            (NP (PRP it))
                            (VP (MD would)
                              (VP (VB make)
                                (S
                                  (NP (PRP it))
                                  (ADJP (JJ illegal))))))))))))))))
      (, ,)
      (SBAR (RB just) (IN that)
        (S
          (NP (PRP it))
          (VP (MD would) (RB n't)
            (VP (VB be)
              (VP (VBN covered)
                (PP (IN in)
                  (NP (PRP$ our) (NNS laws)))
                (ADVP (RB anymore))))))))
    (. .)))

det(way-2, The-1)
nsubj(setup-6, way-2)
nsubj(setup-6, it-3)
cop(setup-6, is-4)
advmod(setup-6, presently-5)
root(ROOT-0, setup-6)
det(government-8, the-7)
nsubj(deals-10, government-8)
advmod(deals-10, also-9)
rcmod(setup-6, deals-10)
prep_with(deals-10, divorce-12)
det(case-17, a-15)
nn(case-17, divorce-16)
nsubjpass(settled-21, case-17)
aux(settled-21, could-18)
neg(settled-21, not-19)
auxpass(settled-21, be-20)
rcmod(setup-6, settled-21)
conj_but(deals-10, settled-21)
prep_in(settled-21, court-23)
mark(considered-29, if-24)
det(marriage-26, the-25)
nsubjpass(considered-29, marriage-26)
auxpass(considered-29, was-27)
neg(considered-29, never-28)
advcl(settled-21, considered-29)
aux(legal-32, to-30)
cop(legal-32, be-31)
xcomp(considered-29, legal-32)
advmod(something-36, at-34)
pobj(at-34, least-35)
nsubjpass(considered-40, something-36)
nsubj(mean-47, something-36)
xsubj(convey-49, something-36)
aux(considered-40, can-38)
auxpass(considered-40, be-39)
rcmod(something-36, considered-40)
acomp(considered-40, legal-41)
advmod(mean-47, however-43)
nsubj(mean-47, I-44)
xsubj(convey-49, I-44)
aux(mean-47, do-45)
neg(mean-47, n't-46)
rcmod(setup-6, mean-47)
conj_or(deals-10, mean-47)
aux(convey-49, to-48)
xcomp(mean-47, convey-49)
complm(make-53, that-50)
nsubj(make-53, it-51)
aux(make-53, would-52)
ccomp(convey-49, make-53)
nsubj(illegal-55, it-54)
xcomp(make-53, illegal-55)
advmod(covered-63, just-57)
dep(covered-63, that-58)
nsubjpass(covered-63, it-59)
aux(covered-63, would-60)
neg(covered-63, n't-61)
auxpass(covered-63, be-62)
dep(setup-6, covered-63)
poss(laws-66, our-65)
prep_in(covered-63, laws-66)
advmod(covered-63, anymore-67)

(ROOT
  (INTJ (UH Oh) (. !)))

root(ROOT-0, Oh-1)

(ROOT
  (FRAG (CC and)
    (NP (DT another) (NN thing)
      (SBAR
        (S
          (VP (VBZ is)
            (PP (IN for)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP
                      (VP (VBP are)
                        (ADJP (JJ atheists)))
                      (CC or)
                      (VP
                        (ADVP (RB simply))
                        (VBP do) (RB n't)
                        (VP (VB choose)
                          (S
                            (S
                              (VP (TO to)
                                (VP (VB go)
                                  (PP (TO to)
                                    (NP (NN church))))))
                            (SBARQ
                              (WHADVP (WRB how))
                              (SQ (MD would)
                                (NP (DT that))
                                (VP (VB work)))
                              (. ?))))))))))))))))

dep(thing-3, and-1)
det(thing-3, another-2)
root(ROOT-0, thing-3)
ccomp(thing-3, is-4)
prep_for(is-4, those-6)
nsubj(atheists-9, those-6)
nsubj(choose-14, those-6)
cop(atheists-9, are-8)
rcmod(those-6, atheists-9)
advmod(choose-14, simply-11)
aux(choose-14, do-12)
neg(choose-14, n't-13)
rcmod(those-6, choose-14)
conj_or(atheists-9, choose-14)
aux(go-16, to-15)
dep(choose-14, go-16)
prep_to(go-16, church-18)
advmod(work-22, how-19)
aux(work-22, would-20)
nsubj(work-22, that-21)
dep(go-16, work-22)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBP mean)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR
                  (S
                    (VP (VBZ is)
                      (ADVP (RB simply))
                      (SBAR (IN that)
                        (S
                          (NP (DT the) (NN idea))
                          (VP (VBZ is)
                            (VP (VBG going)
                              (S
                                (VP (TO to)
                                  (VP (VB take)
                                    (PP
                                      (ADVP
                                        (NP (DT a) (NN lot))
                                        (RBR more))
                                      (IN than)
                                      (NP (RB just) (DT an) (NN idea)))))))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD 'll)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN covered)
                (PP (IN on)
                  (NP (DT all) (NNS bases)))))))
        (S
          (VP (TO to)
            (VP
              (ADVP (RB even))
              (VB work))))))
    (: ...)))

dep(mean-3, What-1)
nsubj(mean-3, I-2)
xsubj(say-5, I-2)
dep(have-25, mean-3)
aux(say-5, to-4)
xcomp(mean-3, say-5)
ccomp(say-5, is-6)
advmod(is-6, simply-7)
complm(going-12, that-8)
det(idea-10, the-9)
nsubj(going-12, idea-10)
xsubj(take-14, idea-10)
aux(going-12, is-11)
ccomp(is-6, going-12)
aux(take-14, to-13)
xcomp(going-12, take-14)
det(lot-16, a-15)
npadvmod(more-17, lot-16)
advmod(take-14, more-17)
advmod(idea-21, just-19)
det(idea-21, an-20)
prep_than(take-14, idea-21)
nsubj(have-25, it-23)
xsubj(covered-28, it-23)
xsubj(work-34, it-23)
aux(have-25, 'll-24)
root(ROOT-0, have-25)
aux(covered-28, to-26)
auxpass(covered-28, be-27)
xcomp(have-25, covered-28)
det(bases-31, all-30)
prep_on(covered-28, bases-31)
aux(work-34, to-32)
advmod(work-34, even-33)
xcomp(have-25, work-34)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S
    (S
      (ADVP (RB however))
      (NP
        (NP (DT the) (NN intent))
        (PP (IN behind)
          (NP (DT the) (NN idea)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (ADVP (RB necessarily))
      (VP (VB disagree)
        (PP (IN with)
          (NP (PRP it)))))
    (. .)))

advmod(intent-3, however-1)
det(intent-3, the-2)
ccomp(disagree-12, intent-3)
det(idea-6, the-5)
prep_behind(intent-3, idea-6)
nsubj(disagree-12, I-8)
aux(disagree-12, do-9)
neg(disagree-12, n't-10)
advmod(disagree-12, necessarily-11)
root(ROOT-0, disagree-12)
prep_with(disagree-12, it-14)

