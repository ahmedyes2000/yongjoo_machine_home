(ROOT
  (SINV
    (PP (IN Within)
      (NP
        (NP (PRP$ my) (JJ varied) (NN circle))
        (PP (IN of)
          (NP (NNS friends)))))
    (VP (VBZ is))
    (NP
      (NP (DT a) (NN lesbian) (NN couple))
      (PP (IN in)
        (NP (PRP$ their) (JJ early) (NNS 50s)))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP have)
            (VP (VBN been)
              (ADVP (RB together))
              (PP (IN for)
                (NP (CD 30) (NNS years))))))))
    (. .)))

poss(circle-4, my-2)
amod(circle-4, varied-3)
prep_within(is-7, circle-4)
prep_of(circle-4, friends-6)
root(ROOT-0, is-7)
det(couple-10, a-8)
nn(couple-10, lesbian-9)
nsubj(is-7, couple-10)
nsubj(been-17, couple-10)
poss(50s-14, their-12)
amod(50s-14, early-13)
prep_in(couple-10, 50s-14)
aux(been-17, have-16)
rcmod(couple-10, been-17)
advmod(been-17, together-18)
num(years-21, 30-20)
prep_for(been-17, years-21)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP live)
        (PP (IN in)
          (NP (JJ inner-suburban) (NNP Sydney)))))
    (, ,)
    (NP (NNP Australia))
    (, ,)
    (SBAR
      (WHADVP (WRB where))
      (S
        (ADJP (RB pretty) (JJ much))))
    (, ,)
    (NP (NN no-one))
    (VP (VBZ cares)
      (PP (IN about)
        (NP
          (NP
            (NP (DT the) (NN gender))
            (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-)))
          (PP (IN of)
            (NP (DT a) (NN couple))))))
    (. .)))

nsubj(live-2, They-1)
ccomp(cares-14, live-2)
amod(Sydney-5, inner-suburban-4)
prep_in(live-2, Sydney-5)
nsubj(cares-14, Australia-7)
advmod(much-11, where-9)
advmod(much-11, pretty-10)
advcl(cares-14, much-11)
nsubj(cares-14, no-one-13)
root(ROOT-0, cares-14)
det(gender-17, the-16)
prep_about(cares-14, gender-17)
dep(gender-17, s-19)
det(couple-23, a-22)
prep_of(gender-17, couple-23)

(ROOT
  (S
    (NP (DT These) (NNS pioneers))
    (VP (VBP have)
      (VP (VBN managed)
        (ADVP (RB very) (RB well))
        (S
          (VP (TO to)
            (VP (VB raise)
              (NP (NNS children))
              (PP (IN despite)
                (NP
                  (NP (DT the) (NN lack))
                  (PP (IN of)
                    (NP
                      (NP
                        (ADJP (JJ societal)
                          (CC and)
                          (JJ legal))
                        (NN support))
                      (PP (IN in)
                        (NP (DT the) (NNP US))))))))))))
    (. .)))

det(pioneers-2, These-1)
nsubj(managed-4, pioneers-2)
xsubj(raise-8, pioneers-2)
aux(managed-4, have-3)
root(ROOT-0, managed-4)
advmod(well-6, very-5)
advmod(managed-4, well-6)
aux(raise-8, to-7)
xcomp(managed-4, raise-8)
dobj(raise-8, children-9)
det(lack-12, the-11)
prep_despite(raise-8, lack-12)
amod(support-17, societal-14)
conj_and(societal-14, legal-16)
amod(support-17, legal-16)
prep_of(lack-12, support-17)
det(US-20, the-19)
prep_in(support-17, US-20)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (ADVP (RB always))
      (VP (VBN struck)
        (S
          (NP (PRP me))
          (ADJP (RB as) (JJ strange)))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (NN country))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ is)
                    (ADVP (RB so))
                    (VP (VBN consumed)
                      (PP (IN by)
                        (NP
                          (NP (DT the) (VBN supposed) (NN welfare))
                          (PP (IN of)
                            (NP (DT these) (NNS children))))))))))
            (VP (VBZ is)
              (ADVP (RB only))
              (VP
                (ADVP (RB now))
                (VBG beginning)
                (S
                  (VP (TO to)
                    (VP (VB look)
                      (PP (IN at)
                        (NP
                          (NP (DT a) (NN system))
                          (PP (IN of)
                            (NP (JJ universal) (NN health) (NN care)))))
                      (SBAR (IN that)
                        (S
                          (NP
                            (NP (JJ many) (JJ other) (JJ developed) (NNS countries))
                            (PRN (-LRB- -LRB-)
                              (NP (NNP e.g.) (NNP UK))
                              (, ,)
                              (NP (NNP Sweden) (, ,) (NNP Australia))
                              (, ,)
                              (NP (NNP Canada) (, ,) (NNP France))
                              (-RRB- -RRB-)))
                          (VP (VBP have)
                            (VP (VBN had)
                              (PP (IN for)
                                (NP (NNS decades))))))))))))))))
    (. .)))

nsubj(struck-4, It-1)
aux(struck-4, has-2)
advmod(struck-4, always-3)
root(ROOT-0, struck-4)
nsubj(strange-7, me-5)
advmod(strange-7, as-6)
xcomp(struck-4, strange-7)
complm(beginning-25, that-8)
det(country-10, a-9)
nsubjpass(consumed-14, country-10)
nsubj(beginning-25, country-10)
xsubj(look-27, country-10)
auxpass(consumed-14, is-12)
advmod(consumed-14, so-13)
rcmod(country-10, consumed-14)
det(welfare-18, the-16)
amod(welfare-18, supposed-17)
agent(consumed-14, welfare-18)
det(children-21, these-20)
prep_of(welfare-18, children-21)
aux(beginning-25, is-22)
advmod(beginning-25, only-23)
advmod(beginning-25, now-24)
ccomp(struck-4, beginning-25)
aux(look-27, to-26)
xcomp(beginning-25, look-27)
det(system-30, a-29)
prep_at(look-27, system-30)
amod(care-34, universal-32)
nn(care-34, health-33)
prep_of(system-30, care-34)
complm(had-53, that-35)
amod(countries-39, many-36)
amod(countries-39, other-37)
amod(countries-39, developed-38)
nsubj(had-53, countries-39)
nn(UK-42, e.g.-41)
appos(countries-39, UK-42)
nn(Australia-46, Sweden-44)
dep(UK-42, Australia-46)
nn(France-50, Canada-48)
dep(UK-42, France-50)
aux(had-53, have-52)
ccomp(look-27, had-53)
prep_for(had-53, decades-55)

(ROOT
  (S
    (ADVP (RB Certainly))
    (NP (EX there))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (JJR more) (NN harm))
          (VP (VBN done)
            (PP (TO to)
              (NP (NNP US) (NNS children))))
          (SBAR (WP$ whose)
            (S
              (NP (NNS families))
              (VP (VBP are)
                (VP (VBN damaged)
                  (CC or)
                  (VBN compromised)
                  (PP (IN by)
                    (NP
                      (NP (DT the) (NN burden))
                      (PP (IN of)
                        (NP
                          (NP (JJ inferior) (JJ public) (NN health) (NN care))
                          (CC or)
                          (NP (JJ unethical) (NNS insurers))))))
                  (PP (IN than)
                    (NP (NN anything)))
                  (S
                    (VP (VBG affecting)
                      (NP
                        (NP (NNS children))
                        (PP (IN of)
                          (NP (JJ gay) (NNS couples)))))))))))))
    (. .)))

advmod(harm-6, Certainly-1)
expl(harm-6, there-2)
aux(harm-6, would-3)
cop(harm-6, be-4)
amod(harm-6, more-5)
root(ROOT-0, harm-6)
partmod(harm-6, done-7)
nn(children-10, US-9)
prep_to(done-7, children-10)
dep(damaged-14, whose-11)
nsubjpass(damaged-14, families-12)
nsubjpass(compromised-16, families-12)
auxpass(damaged-14, are-13)
dep(harm-6, damaged-14)
dep(harm-6, compromised-16)
conj_or(damaged-14, compromised-16)
det(burden-19, the-18)
agent(damaged-14, burden-19)
amod(care-24, inferior-21)
amod(care-24, public-22)
nn(care-24, health-23)
prep_of(burden-19, care-24)
amod(insurers-27, unethical-26)
prep_of(burden-19, insurers-27)
conj_or(care-24, insurers-27)
prep_than(damaged-14, anything-29)
xcomp(damaged-14, affecting-30)
dobj(affecting-30, children-31)
amod(couples-34, gay-33)
prep_of(children-31, couples-34)

(ROOT
  (S
    (NP (DT The) (NNP US) (JJ moral) (NNS masses))
    (VP (MD should)
      (VP (VB get)
        (NP (PRP$ their) (NNS priorities))
        (ADVP (RB right))))
    (. .)))

det(masses-4, The-1)
nn(masses-4, US-2)
amod(masses-4, moral-3)
nsubj(get-6, masses-4)
aux(get-6, should-5)
root(ROOT-0, get-6)
poss(priorities-8, their-7)
dobj(get-6, priorities-8)
advmod(get-6, right-9)

(ROOT
  (S
    (PP (IN By)
      (NP (DT the) (NN way)))
    (, ,)
    (NP (NNP Australia))
    (VP (VBZ has)
      (ADVP (RB just))
      (VP
        (ADVP (RB formally))
        (VBN identified)
        (NP
          (NP (NNS dozens))
          (PP (IN of)
            (NP
              (NP (NNS ways))
              (SBAR
                (WHPP (IN in)
                  (WHNP (WDT which)))
                (S
                  (NP (PRP$ our) (JJ current) (NNS laws))
                  (VP (VBZ disadvantage)
                    (NP (JJ gay) (NNS people))))))))))
    (. .)))

det(way-3, the-2)
prep_by(identified-9, way-3)
nsubj(identified-9, Australia-5)
aux(identified-9, has-6)
advmod(identified-9, just-7)
advmod(identified-9, formally-8)
root(ROOT-0, identified-9)
dobj(identified-9, dozens-10)
prep_of(dozens-10, ways-12)
rel(disadvantage-18, which-14)
poss(laws-17, our-15)
amod(laws-17, current-16)
nsubj(disadvantage-18, laws-17)
rcmod(ways-12, disadvantage-18)
amod(people-20, gay-19)
dobj(disadvantage-18, people-20)

(ROOT
  (S
    (ADVP (RB Right) (RB now))
    (, ,)
    (NP (DT these))
    (VP (VBP are)
      (PP (IN in)
        (NP
          (NP (DT the) (NN process))
          (PP (IN of)
            (S
              (VP (VBG being)
                (VP (VBN rewritten))))))))
    (. .)))

advmod(now-2, Right-1)
advmod(are-5, now-2)
nsubj(are-5, these-4)
root(ROOT-0, are-5)
det(process-8, the-7)
prep_in(are-5, process-8)
auxpass(rewritten-11, being-10)
prepc_of(process-8, rewritten-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ wonderful) (NN thing))
        (PP (IN for)
          (NP (PRP$ our) (NN society)))))
    (. .)))

nsubj(thing-5, It-1)
cop(thing-5, 's-2)
det(thing-5, a-3)
amod(thing-5, wonderful-4)
root(ROOT-0, thing-5)
poss(society-8, our-7)
prep_for(thing-5, society-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP look)
      (ADVP (RB forward))
      (PP (TO to)
        (NP (DT the) (NN day)))
      (SBAR
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NN everyone))
            (VP (VBZ is)
              (ADJP (JJ equal)
                (PP (IN at)
                  (NP (NN law)))))))
        (CC and)
        (SBAR
          (S
            (NP (PRP$ our) (NN community))
            (VP (VBZ is)
              (VP (VBN comprised)
                (PP (IN of)
                  (NP
                    (NP (JJ many) (JJ different) (NNS types))
                    (PP (IN of)
                      (NP (NNS people)))))))))
        (, ,)
        (S (RB all)
          (VP (VBG contributing)
            (NP (PRP$ their) (NN diversity))
            (PP (TO to)
              (NP
                (NP (DT a) (JJ rich)
                  (CC and)
                  (JJ elevated) (NN way))
                (PP (IN of)
                  (NP (NN living)))))))))
    (. .)))

nsubj(look-2, I-1)
root(ROOT-0, look-2)
advmod(look-2, forward-3)
det(day-6, the-5)
prep_to(look-2, day-6)
advmod(equal-10, when-7)
nsubj(equal-10, everyone-8)
cop(equal-10, is-9)
dep(contributing-26, equal-10)
prep_at(equal-10, law-12)
poss(community-15, our-14)
nsubjpass(comprised-17, community-15)
auxpass(comprised-17, is-16)
ccomp(look-2, comprised-17)
conj_and(contributing-26, comprised-17)
amod(types-21, many-19)
amod(types-21, different-20)
prep_of(comprised-17, types-21)
prep_of(types-21, people-23)
advmod(contributing-26, all-25)
ccomp(look-2, contributing-26)
poss(diversity-28, their-27)
dobj(contributing-26, diversity-28)
det(way-34, a-30)
amod(way-34, rich-31)
conj_and(rich-31, elevated-33)
amod(way-34, elevated-33)
prep_to(contributing-26, way-34)
prep_of(way-34, living-36)

(ROOT
  (S
    (PP (IN In)
      (NP (NNP Australia)))
    (, ,)
    (NP (PRP it))
    (VP (MD will)
      (VP (VB come)))
    (. .)))

prep_in(come-6, Australia-2)
nsubj(come-6, it-4)
aux(come-6, will-5)
root(ROOT-0, come-6)

(ROOT
  (S
    (FRAG
      (PP (IN In)
        (NP (DT the) (NNP US)))
      (: ...)
      (ADVP (RB well)))
    (, ,)
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB see)
        (S
          (NP (PRP it))
          (VP (VBG happening)
            (NP (DT any) (NN time))
            (ADVP (RB soon))))))
    (. .)))

dep(well-5, In-1)
det(US-3, the-2)
pobj(In-1, US-3)
dep(see-10, well-5)
nsubj(see-10, I-7)
aux(see-10, ca-8)
neg(see-10, n't-9)
root(ROOT-0, see-10)
nsubj(happening-12, it-11)
dep(see-10, happening-12)
det(time-14, any-13)
dobj(happening-12, time-14)
advmod(happening-12, soon-15)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (ADJP (JJ happy) (, ,) (JJ stable)
        (CC and)
        (JJ affluent))
      (ADVP (NNS thanks)
        (PP (TO to)
          (NP
            (NP (NNS years))
            (PP (IN of)
              (NP (JJ hard) (NN work)
                (CC and)
                (JJ long) (, ,) (JJ steady) (NNS careers)))))))
    (. .)))

nsubj(happy-3, They-1)
nsubj(stable-5, They-1)
nsubj(affluent-7, They-1)
cop(happy-3, are-2)
root(ROOT-0, happy-3)
conj_and(happy-3, stable-5)
conj_and(happy-3, affluent-7)
prep_thanks_to(happy-3, years-10)
amod(work-13, hard-12)
prep_of(years-10, work-13)
amod(careers-18, long-15)
amod(careers-18, steady-17)
prep_of(years-10, careers-18)
conj_and(work-13, careers-18)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN son))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ has)
              (ADVP (RB just))
              (VP (VBN finished)
                (NP (JJ high) (NN school))))))))
    (. .)))

nsubj(have-2, They-1)
root(ROOT-0, have-2)
det(son-4, a-3)
dobj(have-2, son-4)
nsubj(finished-8, son-4)
aux(finished-8, has-6)
advmod(finished-8, just-7)
rcmod(son-4, finished-8)
amod(school-10, high-9)
dobj(finished-8, school-10)

(ROOT
  (S
    (S
      (NP
        (NP (CD One))
        (PP (IN of)
          (NP (PRP$ his) (NNS parents))))
      (VP (VBZ is)
        (NP (PRP$ his) (NN birth) (NN mother))))
    (: ;)
    (S
      (NP (DT the) (JJ other))
      (VP (VBZ is)
        (VP (VBN related)
          (PP (IN through)
            (NP
              (NP (DT the) (NN sperm))
              (PP (IN of)
                (NP (DT the) (NN father))))))))
    (. .)))

nsubj(mother-8, One-1)
poss(parents-4, his-3)
prep_of(One-1, parents-4)
cop(mother-8, is-5)
poss(mother-8, his-6)
nn(mother-8, birth-7)
root(ROOT-0, mother-8)
det(other-11, the-10)
nsubjpass(related-13, other-11)
auxpass(related-13, is-12)
parataxis(mother-8, related-13)
det(sperm-16, the-15)
prep_through(related-13, sperm-16)
det(father-19, the-18)
prep_of(sperm-16, father-19)

(ROOT
  (S
    (S
      (NP (PRP$ Their) (NN son))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ handsome) (, ,)
            (ADJP (JJ good-natured) (, ,) (JJ polite) (, ,) (JJ clever)
              (CC and)
              (JJ amiable))
            (NN boy))
          (PP (IN with)
            (NP (DT a) (JJ bright) (NN future))))
        (SBAR (IN because)
          (S
            (PP (IN in)
              (NP
                (NP (DT a) (JJ free) (, ,) (JJ open) (NN society))
                (PP (IN like)
                  (NP (NNP Australia)))))
            (, ,)
            (NP (DT no) (NN church))
            (VP (VBZ overwhelms)
              (NP
                (NP (DT the) (JJ moral) (NNS judgments))
                (PP (IN of)
                  (NP (DT the) (NN population)))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (VBZ is)
        (PP (IN at)
          (NP (DT no) (NN disadvantage)))))
    (. .)))

poss(son-2, Their-1)
nsubj(boy-14, son-2)
cop(boy-14, is-3)
det(boy-14, a-4)
amod(boy-14, handsome-5)
amod(boy-14, good-natured-7)
conj_and(good-natured-7, polite-9)
amod(boy-14, polite-9)
conj_and(good-natured-7, clever-11)
amod(boy-14, clever-11)
conj_and(good-natured-7, amiable-13)
amod(boy-14, amiable-13)
root(ROOT-0, boy-14)
det(future-18, a-16)
amod(future-18, bright-17)
prep_with(boy-14, future-18)
mark(overwhelms-31, because-19)
det(society-25, a-21)
amod(society-25, free-22)
amod(society-25, open-24)
prep_in(overwhelms-31, society-25)
prep_like(society-25, Australia-27)
det(church-30, no-29)
nsubj(overwhelms-31, church-30)
advcl(boy-14, overwhelms-31)
det(judgments-34, the-32)
amod(judgments-34, moral-33)
dobj(overwhelms-31, judgments-34)
det(population-37, the-36)
prep_of(judgments-34, population-37)
nsubj(is-41, he-40)
conj_and(boy-14, is-41)
det(disadvantage-44, no-43)
prep_at(is-41, disadvantage-44)

(ROOT
  (S
    (S
      (PP (IN In)
        (NP (DT the) (NNP US)))
      (NP (DT the) (NN problem))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT the) (NN gender))
          (PP (IN of)
            (NP (DT the) (NN couple))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN society))
          (PP (IN around)
            (NP (PRP them)))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ disadvantages)
                (NP (DT the) (NNS children))))))))
    (. .)))

det(US-3, the-2)
prep_in(gender-9, US-3)
det(problem-5, the-4)
nsubj(gender-9, problem-5)
cop(gender-9, is-6)
neg(gender-9, not-7)
det(gender-9, the-8)
root(ROOT-0, gender-9)
det(couple-12, the-11)
prep_of(gender-9, couple-12)
nsubj(society-17, it-14)
cop(society-17, is-15)
det(society-17, the-16)
parataxis(gender-9, society-17)
nsubj(disadvantages-21, society-17)
prep_around(society-17, them-19)
rcmod(society-17, disadvantages-21)
det(children-23, the-22)
dobj(disadvantages-21, children-23)

(ROOT
  (S
    (ADVP (RB Unfortunately))
    (NP
      (NP (DT this) (NN kind))
      (PP (IN of)
        (NP (NN issue))))
    (VP (VBZ is)
      (ADVP (RB always))
      (NP (DT a) (NNS numbers) (NN thing)))
    (. .)))

advmod(thing-10, Unfortunately-1)
det(kind-3, this-2)
nsubj(thing-10, kind-3)
prep_of(kind-3, issue-5)
cop(thing-10, is-6)
advmod(thing-10, always-7)
det(thing-10, a-8)
nn(thing-10, numbers-9)
root(ROOT-0, thing-10)

(ROOT
  (SBARQ
    (WHADVP
      (ADVP
        (NP
          (NP (DT The) (NN law) (NNS moves))
          (ADVP (RB slowly)
            (PP (IN behind)
              (NP (NN society)))))
        (RB but))
      (WRB when))
    (SQ (VBZ does)
      (NP
        (NP (DT any) (NN law))
        (PP (IN on)
          (NP (DT a) (JJ moral) (NN issue))))
      (VP
        (VP (VB precede)
          (NP (DT the) (NN need)))
        (CC or)
        (VP (VB want)
          (PP (IN of)
            (NP (DT the) (NN population))))))
    (. ?)))

det(moves-3, The-1)
nn(moves-3, law-2)
npadvmod(but-7, moves-3)
advmod(moves-3, slowly-4)
prep_behind(slowly-4, society-6)
advmod(when-8, but-7)
advmod(precede-16, when-8)
aux(precede-16, does-9)
det(law-11, any-10)
nsubj(precede-16, law-11)
nsubj(want-20, law-11)
det(issue-15, a-13)
amod(issue-15, moral-14)
prep_on(law-11, issue-15)
root(ROOT-0, precede-16)
det(need-18, the-17)
dobj(precede-16, need-18)
conj_or(precede-16, want-20)
det(population-23, the-22)
prep_of(want-20, population-23)

(ROOT
  (S (IN So)
    (NP (EX there))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT a) (JJ critical) (NN mass))
              (PP (IN of)
                (NP
                  (NP (NNS people))
                  (VP (VBG demanding)
                    (NP
                      (NP (JJ legal) (NN recognition))
                      (: :)
                      (NP (DT the) (NNS pioneers)))))))))))
    (. .)))

dep(has-3, So-1)
expl(has-3, there-2)
xsubj(mass-8, there-2)
root(ROOT-0, has-3)
aux(mass-8, to-4)
cop(mass-8, be-5)
det(mass-8, a-6)
amod(mass-8, critical-7)
xcomp(has-3, mass-8)
prep_of(mass-8, people-10)
partmod(people-10, demanding-11)
amod(recognition-13, legal-12)
dobj(demanding-11, recognition-13)
det(pioneers-16, the-15)
dep(recognition-13, pioneers-16)

