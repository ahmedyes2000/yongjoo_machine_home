(ROOT
  (SQ
    (VP (VB Let)
      (S
        (NP (POS 's))
        (VP (VB stay)
          (PP (IN on)
            (NP (NN subject)))))
      (, ,)
      (ADJP (JJ okay)))
    (. ?)))

root(ROOT-0, Let-1)
nsubj(stay-3, 's-2)
ccomp(Let-1, stay-3)
prep_on(stay-3, subject-5)
acomp(Let-1, okay-7)

(ROOT
  (S
    (S
      (VP (VBG Saying)
        (SBAR (IN that)
          (S
            (NP
              (NP (CD two) (NNS people))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP love)
                    (SBAR
                      (S
                        (NP (DT each) (JJ other))
                        (VP (MD ca) (RB n't)
                          (VP (VB get)))))))))
            (VP (VBD married)
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (MD will)
                    (VP (VB open)
                      (NP
                        (NP (DT the) (NN door))
                        (PP (IN for)
                          (NP (JJ other) (NNS groups)))))))))))))
    (VP (VBZ is)
      (NP (DT a) (JJ ridiculous) (NN argument)))
    (. .)))

csubj(argument-25, Saying-1)
complm(married-12, that-2)
num(people-4, two-3)
nsubj(love-6, people-4)
nsubj(married-12, people-4)
rcmod(people-4, love-6)
det(other-8, each-7)
nsubj(get-11, other-8)
aux(get-11, ca-9)
neg(get-11, n't-10)
ccomp(love-6, get-11)
ccomp(Saying-1, married-12)
mark(open-16, because-13)
nsubj(open-16, it-14)
aux(open-16, will-15)
advcl(married-12, open-16)
det(door-18, the-17)
dobj(open-16, door-18)
amod(groups-21, other-20)
prep_for(door-18, groups-21)
cop(argument-25, is-22)
det(argument-25, a-23)
amod(argument-25, ridiculous-24)
root(ROOT-0, argument-25)

(ROOT
  (S
    (PP (IN By)
      (NP
        (NP (DT that) (NN logic))
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD should)
              (VP (VB get)
                (ADJP (JJ rid)
                  (PP (IN of)
                    (NP (NN marriage))))
                (ADVP (RB altogether))))))))
    (, ,)
    (NP
      (NP (DT this) (NN way) (NN none))
      (PP (IN of)
        (NP (DT that))))
    (VP (MD can)
      (VP (VB happen)))
    (. .)))

det(logic-3, that-2)
dobj(rid-7, logic-3)
prep_by(happen-18, logic-3)
nsubj(rid-7, we-4)
aux(rid-7, should-5)
dep(rid-7, get-6)
rcmod(logic-3, rid-7)
prep_of(rid-7, marriage-9)
advmod(rid-7, altogether-10)
det(none-14, this-12)
nn(none-14, way-13)
nsubj(happen-18, none-14)
prep_of(none-14, that-16)
aux(happen-18, can-17)
root(ROOT-0, happen-18)

(ROOT
  (S
    (SBAR (RB Just) (IN because)
      (S
        (NP (DT an) (NN institution))
        (VP (VBZ is)
          (ADJP (JJ old)))))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD should) (RB n't)
              (VP (VB be)
                (VP (VBN changed))))))))
    (. .)))

advmod(old-6, Just-1)
dep(old-6, because-2)
det(institution-4, an-3)
nsubj(old-6, institution-4)
cop(old-6, is-5)
advcl(mean-9, old-6)
csubj(mean-9, old-6)
aux(mean-9, does-7)
neg(mean-9, n't-8)
root(ROOT-0, mean-9)
nsubjpass(changed-14, it-10)
aux(changed-14, should-11)
neg(changed-14, n't-12)
auxpass(changed-14, be-13)
ccomp(mean-9, changed-14)

(ROOT
  (S
    (ADVP (RB Actually))
    (, ,)
    (NP
      (NP (DT the) (NN fact))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (RB so) (JJ old))))))
    (VP (VBZ is)
      (ADJP
        (ADJP (RB even) (JJR more))
        (PP (IN of)
          (NP
            (NP (DT a) (NN reason))
            (PP (IN for)
              (NP (PRP it))))))
      (S
        (VP (TO to)
          (VP (VB change)))))
    (. .)))

advmod(more-12, Actually-1)
det(fact-4, the-3)
nsubj(more-12, fact-4)
xsubj(change-19, fact-4)
complm(old-9, that-5)
nsubj(old-9, it-6)
cop(old-9, is-7)
advmod(old-9, so-8)
dep(fact-4, old-9)
cop(more-12, is-10)
advmod(more-12, even-11)
root(ROOT-0, more-12)
det(reason-15, a-14)
prep_of(more-12, reason-15)
prep_for(reason-15, it-17)
aux(change-19, to-18)
xcomp(more-12, change-19)

(ROOT
  (S
    (S
      (NP (PRP$ Our) (NN thinking))
      (VP (VBZ has)
        (VP (VBN advanced)
          (PP (IN since)
            (NP (RB then))))))
    (CC and)
    (S
      (NP (PRP$ our) (NNS institutions))
      (VP (MD should)
        (VP (VB reflect)
          (NP (DT that)))))
    (. .)))

poss(thinking-2, Our-1)
nsubj(advanced-4, thinking-2)
aux(advanced-4, has-3)
root(ROOT-0, advanced-4)
prep(advanced-4, since-5)
pobj(since-5, then-6)
poss(institutions-9, our-8)
nsubj(reflect-11, institutions-9)
aux(reflect-11, should-10)
conj_and(advanced-4, reflect-11)
dobj(reflect-11, that-12)

(ROOT
  (S
    (S
      (NP (NNS Homosexuals))
      (VP (VBP are) (RB n't)
        (VP (VBG asking)
          (NP (NN anyone))
          (S
            (VP (TO to)
              (VP (VB change)
                (NP
                  (NP (PRP$ their) (NN way))
                  (PP (IN of)
                    (NP (NN life))))))))))
    (: ...)
    (S
      (NP (PRP they))
      (ADVP (RB just))
      (VP (VBP want)
        (NP (DT the) (JJ same) (NNS rights))
        (SBAR (IN that)
          (S
            (NP (NN everyone) (RB else))
            (VP (VBZ has) (: :)
              (S
                (NP (DT the) (NN right))
                (VP (TO to)
                  (VP (VB marry)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (NP (PRP they))
                        (VP (VBP love))))))))))))
    (. .)))

nsubj(asking-4, Homosexuals-1)
aux(asking-4, are-2)
neg(asking-4, n't-3)
root(ROOT-0, asking-4)
dobj(asking-4, anyone-5)
aux(change-7, to-6)
xcomp(asking-4, change-7)
poss(way-9, their-8)
dobj(change-7, way-9)
prep_of(way-9, life-11)
nsubj(want-15, they-13)
advmod(want-15, just-14)
parataxis(asking-4, want-15)
det(rights-18, the-16)
amod(rights-18, same-17)
dobj(want-15, rights-18)
complm(has-22, that-19)
nsubj(has-22, everyone-20)
advmod(everyone-20, else-21)
ccomp(want-15, has-22)
det(right-25, the-24)
nsubj(marry-27, right-25)
aux(marry-27, to-26)
ccomp(has-22, marry-27)
parataxis(has-22, marry-27)
xcomp(has-22, marry-27)
dobj(love-30, who-28)
nsubj(love-30, they-29)
ccomp(marry-27, love-30)

(ROOT
  (S
    (ADVP (RB So))
    (VP (VB allow)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB repeat)
            (NP
              (NP (DT the) (NN question))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBD failed)
                    (S
                      (VP (TO to)
                        (VP (VB answer) (: :)
                          (SBARQ
                            (WHADVP (WRB How))
                            (SQ (MD can)
                              (NP (JJ gay) (NN marriage))
                              (VP (VB hurt)
                                (NP (DT any) (NN one))))
                            (. ?)))))))))))))))

advmod(allow-2, So-1)
root(ROOT-0, allow-2)
nsubj(repeat-5, me-3)
aux(repeat-5, to-4)
xcomp(allow-2, repeat-5)
det(question-7, the-6)
dobj(repeat-5, question-7)
dobj(failed-9, question-7)
nsubj(failed-9, you-8)
xsubj(answer-11, you-8)
rcmod(question-7, failed-9)
aux(answer-11, to-10)
xcomp(failed-9, answer-11)
advmod(hurt-17, How-13)
aux(hurt-17, can-14)
amod(marriage-16, gay-15)
nsubj(hurt-17, marriage-16)
parataxis(answer-11, hurt-17)
det(one-19, any-18)
dobj(hurt-17, one-19)

