(ROOT
  (S
    (VP
      (VP (VB Refer)
        (PP (TO to)
          (NP
            (NP (DT all) (JJ Civil) (NNS Unions))
            (PP (IN as)
              (NP (JJ such))))))
      (CC and)
      (VP (VB let)
        (S
          (NP (NNP Churches))
          (VP (VB use)
            (NP (DT the) (NN term) (NN marriage))))))
    (. .)))

root(ROOT-0, Refer-1)
det(Unions-5, all-3)
amod(Unions-5, Civil-4)
prep_to(Refer-1, Unions-5)
prep_such_as(Unions-5, such-7)
conj_and(Refer-1, let-9)
nsubj(use-11, Churches-10)
ccomp(let-9, use-11)
det(marriage-14, the-12)
nn(marriage-14, term-13)
dobj(use-11, marriage-14)

(ROOT
  (S
    (S
      (NP (DT The) (JJ only) (NN discrimination))
      (VP (MD would)
        (VP (VB come)
          (PP (IN from)
            (NP (NNS churches))))))
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB happen)
                (ADVP (DT no) (NN matter)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP you))
                      (VP (VBP call)
                        (NP (PRP it))))))))))))
    (. .)))

det(discrimination-3, The-1)
amod(discrimination-3, only-2)
nsubj(come-5, discrimination-3)
aux(come-5, would-4)
root(ROOT-0, come-5)
prep_from(come-5, churches-7)
nsubj(going-11, that-9)
xsubj(happen-13, that-9)
aux(going-11, 's-10)
conj_and(come-5, going-11)
aux(happen-13, to-12)
xcomp(going-11, happen-13)
dep(matter-15, no-14)
advmod(happen-13, matter-15)
dobj(call-18, what-16)
nsubj(call-18, you-17)
dep(matter-15, call-18)
dobj(call-18, it-19)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB simply))
    (VP (VBP do) (RB n't)
      (VP (VB agree)
        (PP (IN with)
          (NP (PRP$ your) (NNS objections)))))
    (. .)))

nsubj(agree-5, I-1)
advmod(agree-5, simply-2)
aux(agree-5, do-3)
neg(agree-5, n't-4)
root(ROOT-0, agree-5)
poss(objections-8, your-7)
prep_with(agree-5, objections-8)

