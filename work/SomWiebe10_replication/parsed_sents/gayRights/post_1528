(ROOT
  (NP
    (NP (`` ``) (NN Point) (CD one))
    (: :)
    (S
      (S
        (NP (PRP I))
        (VP (VBP am)
          (NP (DT a) (NN purist))))
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP want)
          (S
            (NP (DT the) (NN word) (`` ``) (NN marriage) ('' ''))
            (VP (TO to)
              (VP (VB mean)
                (SBAR
                  (WHADJP (RB exactly) (WP what))
                  (S
                    (NP
                      (NP (DT those))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBD invented)
                            (NP (DT the) (NN word) (NNS years))
                            (ADVP (IN ago))))))
                    (VP (VBD defined)
                      (S
                        (NP (PRP it))
                        (VP (TO to)
                          (VP (VB be) (, ,) (`` ``)
                            (FRAG
                              (NP (DT A) (JJ civil) (NN union))
                              (PP (IN between)
                                (NP
                                  (NP (DT a) (NN man))
                                  (CC and)
                                  (NP (DT a) (NN woman)))))))))))))))))
    (. .)))

root(ROOT-0, Point-2)
num(Point-2, one-3)
nsubj(purist-8, I-5)
cop(purist-8, am-6)
det(purist-8, a-7)
dep(Point-2, purist-8)
nsubj(want-11, I-10)
dep(Point-2, want-11)
conj_and(purist-8, want-11)
det(marriage-15, the-12)
nn(marriage-15, word-13)
nsubj(mean-18, marriage-15)
aux(mean-18, to-17)
xcomp(want-11, mean-18)
dep(defined-28, exactly-19)
dep(exactly-19, what-20)
nsubj(invented-23, those-21)
nsubj(defined-28, those-21)
rcmod(those-21, invented-23)
det(years-26, the-24)
nn(years-26, word-25)
tmod(invented-23, years-26)
advmod(invented-23, ago-27)
ccomp(mean-18, defined-28)
nsubj(be-31, it-29)
aux(be-31, to-30)
xcomp(defined-28, be-31)
det(union-36, A-34)
amod(union-36, civil-35)
dep(be-31, union-36)
dep(union-36, between-37)
det(man-39, a-38)
pobj(between-37, man-39)
det(woman-42, a-41)
pobj(between-37, woman-42)
conj_and(man-39, woman-42)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB change)
              (NP
                (NP (DT the) (NN meaning))
                (PP (IN of)
                  (NP (DT the) (NN word))))
              (PP (IN to) ('' '')
                (NP
                  (NP (DT The) (VBG loving) (NN union))
                  (PP (IN between)
                    (NP (CD two) (NNS individuals))))))))))
    (. .)))

nsubj(want-5, I-2)
xsubj(change-7, I-2)
aux(want-5, do-3)
neg(want-5, n't-4)
root(ROOT-0, want-5)
aux(change-7, to-6)
xcomp(want-5, change-7)
det(meaning-9, the-8)
dobj(change-7, meaning-9)
det(word-12, the-11)
prep_of(meaning-9, word-12)
det(union-17, The-15)
amod(union-17, loving-16)
prep_to(change-7, union-17)
num(individuals-20, two-19)
prep_between(union-17, individuals-20)

(ROOT
  (S
    (NP (PRP I))
    (, ,)
    (PP (IN for)
      (NP (CD one)))
    (, ,)
    (VP (VBP am) (RB not)
      (PP (IN in)
        (NP
          (NP (DT a) (NN war))
          (PP (IN of)
            (NP (DT any) (NN kind))))))
    (. .)))

nsubj(am-6, I-1)
prep_for(am-6, one-4)
root(ROOT-0, am-6)
neg(am-6, not-7)
det(war-10, a-9)
prep_in(am-6, war-10)
det(kind-13, any-12)
prep_of(war-10, kind-13)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP use)
        (NP (NN logic))))
    (CC and)
    (S
      (INTJ (UH yes))
      (, ,)
      (NP (PRP I))
      (VP (VBP do)
        (NP (NN use) (NN emotion))
        (ADVP (IN along)
          (PP (IN with)
            (NP (NN logic))))
        (SBAR (IN in) (NN order)
          (S
            (VP (TO to)
              (VP (VB get)
                (NP (DT some) (NNS points))
                (PRT (RP across))))))))
    (. .)))

nsubj(use-2, I-1)
root(ROOT-0, use-2)
dobj(use-2, logic-3)
dep(do-8, yes-5)
nsubj(do-8, I-7)
conj_and(use-2, do-8)
nn(emotion-10, use-9)
dobj(do-8, emotion-10)
prep_along_with(do-8, logic-13)
mark(get-17, in-14)
dep(get-17, order-15)
aux(get-17, to-16)
purpcl(do-8, get-17)
det(points-19, some-18)
dobj(get-17, points-19)
prt(get-17, across-20)

(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (PRP I))
    (VP (MD can)
      (VP (VB agree)
        (PP (IN on)
          (NP
            (NP (DT the) (JJR larger) (NN picture))
            (PP (IN of)
              (NP
                (NP (NNS people))
                (VP (VBG wanting)
                  (NP (NN something))
                  (SBAR
                    (SBAR
                      (S
                        (NP (PRP they))
                        (VP (VBP are) (RB not)
                          (ADJP (VBN entitled)
                            (PP (TO to))))))
                    (CC but)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ decides)
                          (SBAR
                            (S
                              (NP (PRP we))
                              (VP (VBP are) (RB not)
                                (PP (IN in)
                                  (NP (DT this) (NN case)))))))))))))))))
    (. ?)))

prep_of(agree-5, course-2)
nsubj(agree-5, I-3)
aux(agree-5, can-4)
root(ROOT-0, agree-5)
det(picture-9, the-7)
amod(picture-9, larger-8)
prep_on(agree-5, picture-9)
prep_of(picture-9, people-11)
partmod(people-11, wanting-12)
dobj(wanting-12, something-13)
nsubjpass(entitled-17, they-14)
auxpass(entitled-17, are-15)
neg(entitled-17, not-16)
dep(wanting-12, entitled-17)
prep(entitled-17, to-18)
nsubj(decides-21, who-20)
dep(wanting-12, decides-21)
conj_but(entitled-17, decides-21)
nsubj(are-23, we-22)
ccomp(decides-21, are-23)
neg(are-23, not-24)
det(case-27, this-26)
prep_in(are-23, case-27)

(ROOT
  (NP (NN Straight) (NNS people) (. !)))

nn(people-2, Straight-1)
root(ROOT-0, people-2)

(ROOT
  (SQ (VBZ Is)
    (NP (DT this))
    (PP (IN in)
      (NP (DT any) (NN way)))
    (ADVP (RB just))
    (. ?)))

root(ROOT-0, Is-1)
nsubj(Is-1, this-2)
det(way-5, any-4)
prep_in(Is-1, way-5)
advmod(Is-1, just-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (S
          (S
            (NP (PRP it))
            (VP (VBZ is)))
          (CC and)
          (S
            (NP (PRP I))
            (VP (MD would) (RB n't)
              (VP (VB think)
                (SBAR (RB so) (IN if)
                  (S
                    (NP (DT the) (NNS tables))
                    (VP (VBD were)
                      (VP (VBN turned)))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
nsubj(is-6, it-5)
dep(think-4, is-6)
nsubj(think-11, I-8)
aux(think-11, would-9)
neg(think-11, n't-10)
dep(think-4, think-11)
conj_and(is-6, think-11)
advmod(turned-17, so-12)
dep(turned-17, if-13)
det(tables-15, the-14)
nsubjpass(turned-17, tables-15)
auxpass(turned-17, were-16)
ccomp(think-11, turned-17)

(ROOT
  (S ('' '')
    (PP (IN If)
      (NP
        (NP (DT a) (NNP Civil) (NNP Union))
        (SBAR
          (S
            (VP (VBD was)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP they))
                  (VP (VBD defined)))))))))
    (VP (VBP Marriage)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (RB then))
              (SBAR
                (WHNP (WP what))))))))
    (. ?)))

det(Union-5, a-3)
nn(Union-5, Civil-4)
prep_if(Marriage-10, Union-5)
rcmod(Union-5, was-6)
dobj(defined-9, what-7)
nsubj(defined-9, they-8)
ccomp(was-6, defined-9)
root(ROOT-0, Marriage-10)
aux(then-13, to-11)
cop(then-13, be-12)
xcomp(Marriage-10, then-13)
rcmod(then-13, what-14)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB now))
    (VP (VBP have)
      (PP (DT both) (IN of)
        (NP (DT the) (NNS words)))
      (NP
        (NP (JJ and\/or) (NNS statements))
        (SBAR
          (WHPP (IN by)
            (WHNP (WDT which)))
          (S
            (NP (DT the) (NN union))
            (VP (VBZ is)
              (VP (VBN known)))))))
    (. .)))

nsubj(have-3, You-1)
advmod(have-3, now-2)
root(ROOT-0, have-3)
dep(have-3, both-4)
det(words-7, the-6)
prep_of(have-3, words-7)
amod(statements-9, and\/or-8)
dobj(have-3, statements-9)
agent(known-15, statements-9)
det(union-13, the-12)
nsubjpass(known-15, union-13)
auxpass(known-15, is-14)
rcmod(statements-9, known-15)

(ROOT
  (SQ (NNP Does)
    (NP (DT this))
    (VP (VB mean)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB have)
              (NP (DT neither)))))))
    (. ?)))

dep(mean-3, Does-1)
nsubj(mean-3, this-2)
root(ROOT-0, mean-3)
nsubj(have-6, we-4)
aux(have-6, can-5)
ccomp(mean-3, have-6)
dobj(have-6, neither-7)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S (, ,)
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (NN state))))
        (, ,)
        (NP (PRP we))
        (VP (VBP are) (RB not)
          (VP (VBN entitled)
            (PP (TO to)
              (NP (PRP it)))
            (ADVP (RB then))))))
    (WHNP (WP what))
    (SQ
      (VP (VBZ shall)
        (NP
          (NP (NNS people))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP wish)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB be)
                        (VP (VBN married)))
                      (CC and)
                      (VP (VB enjoy)
                        (S
                          (NP (DT a) (NNP Civil) (NNP Union))
                          (VP (VB be)
                            (VP (VBN called))))))))))))))
    (. ?)))

mark(entitled-10, If-1)
mark(state-5, as-3)
nsubj(state-5, you-4)
advcl(entitled-10, state-5)
nsubjpass(entitled-10, we-7)
auxpass(entitled-10, are-8)
neg(entitled-10, not-9)
dep(shall-15, entitled-10)
prep_to(entitled-10, it-12)
advmod(entitled-10, then-13)
nsubj(shall-15, what-14)
root(ROOT-0, shall-15)
dobj(shall-15, people-16)
nsubj(wish-18, people-16)
rcmod(people-16, wish-18)
aux(married-21, to-19)
auxpass(married-21, be-20)
xcomp(wish-18, married-21)
xcomp(wish-18, enjoy-23)
conj_and(married-21, enjoy-23)
det(Union-26, a-24)
nn(Union-26, Civil-25)
nsubjpass(called-28, Union-26)
auxpass(called-28, be-27)
ccomp(enjoy-23, called-28)

(ROOT
  (SBARQ (CC And)
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (PRP it))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB change))))))
    (. ?)))

cc(have-5, And-1)
advmod(have-5, why-2)
aux(have-5, should-3)
nsubj(have-5, it-4)
xsubj(change-7, it-4)
root(ROOT-0, have-5)
aux(change-7, to-6)
xcomp(have-5, change-7)

(ROOT
  (S
    (NP (PDT All) (DT any) (JJ gay) (NN couple))
    (VP (VBZ wishes)
      (S
        (VP (TO to)
          (VP (VB have)
            (S
              (VP (VBP are)
                (NP
                  (NP (DT the) (NNS things))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP are)
                        (ADVP (RB already))
                        (VP (VBN defined)
                          (PP (IN by)
                            (NP (DT these) (NNS words))))))))))))))
    (. .)))

predet(couple-4, All-1)
det(couple-4, any-2)
amod(couple-4, gay-3)
nsubj(wishes-5, couple-4)
xsubj(have-7, couple-4)
root(ROOT-0, wishes-5)
aux(have-7, to-6)
xcomp(wishes-5, have-7)
cop(things-10, are-8)
det(things-10, the-9)
ccomp(have-7, things-10)
nsubjpass(defined-14, things-10)
auxpass(defined-14, are-12)
advmod(defined-14, already-13)
rcmod(things-10, defined-14)
det(words-17, these-16)
agent(defined-14, words-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP change)
          (NP (PRP it)))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (MD must)
      (VP (VB define)
        (NP (PRP it))))
    (. .)))

mark(change-3, If-1)
nsubj(change-3, you-2)
advcl(define-9, change-3)
dobj(change-3, it-4)
advmod(define-9, then-6)
nsubj(define-9, you-7)
aux(define-9, must-8)
root(ROOT-0, define-9)
dobj(define-9, it-10)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (DT the) (NN ball))
      (VP (VBZ starts)
        (S
          (VP (TO to)
            (VP (VB roll)
              (ADVP (RB again))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN direction))
                  (PP (IN of)
                    (S
                      (VP (RB not) (VBG being)
                        (ADJP (JJ equal))
                        (PP (TO to)
                          (NP (NNP Heterosexual) (NNS people)))))))))))))
    (: ...)
    (CC but)
    (S
      (NP (PRP we))
      (VP (VBP are)
        (PP (IN in)
          (NP
            (NP (DT all) (NNS ways))
            (PP (CC but)
              (NP (CD one)))))))
    (. .)))

advmod(starts-4, Then-1)
det(ball-3, the-2)
nsubj(starts-4, ball-3)
xsubj(roll-6, ball-3)
root(ROOT-0, starts-4)
aux(roll-6, to-5)
xcomp(starts-4, roll-6)
advmod(roll-6, again-7)
det(direction-10, the-9)
prep_in(roll-6, direction-10)
neg(equal-14, not-12)
cop(equal-14, being-13)
prepc_of(direction-10, equal-14)
nn(people-17, Heterosexual-16)
prep_to(equal-14, people-17)
nsubj(are-21, we-20)
conj_but(starts-4, are-21)
det(ways-24, all-23)
prep_in(are-21, ways-24)
prep(ways-24, but-25)
dep(but-25, one-26)

