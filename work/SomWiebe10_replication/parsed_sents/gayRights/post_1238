(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB disagree)
        (PP (IN with)
          (NP (PRP$ your) (NN argument)))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT All) (NNS things))
              (VP (VBG being)
                (VP (JJ equal)
                  (NP (DT the) (NNS children)))))
            (VP (VBP are)
              (ADJP (JJR better) (RP off))
              (PP (IN with)
                (NP
                  (NP (DT a) (VBG loving) (NN mom))
                  (CC and)
                  (NP (NN dad)))))))))
    (. .)))

nsubj(disagree-4, I-1)
aux(disagree-4, do-2)
neg(disagree-4, n't-3)
root(ROOT-0, disagree-4)
poss(argument-7, your-6)
prep_with(disagree-4, argument-7)
complm(better-16, that-8)
det(things-10, All-9)
nsubj(better-16, things-10)
aux(equal-12, being-11)
partmod(things-10, equal-12)
det(children-14, the-13)
dobj(equal-12, children-14)
cop(better-16, are-15)
ccomp(disagree-4, better-16)
dep(better-16, off-17)
det(mom-21, a-19)
amod(mom-21, loving-20)
prep_with(better-16, mom-21)
prep_with(better-16, dad-23)
conj_and(mom-21, dad-23)

(ROOT
  (S (CC But)
    (NP (DT all) (NNS things))
    (VP (VBP are)
      (ADVP (RB never))
      (ADJP (JJ equal)))
    (. .)))

cc(equal-6, But-1)
det(things-3, all-2)
nsubj(equal-6, things-3)
cop(equal-6, are-4)
neg(equal-6, never-5)
root(ROOT-0, equal-6)

(ROOT
  (S
    (NP (JJ Many) (NNS children))
    (VP (VBP do) (RB not)
      (VP (VB grow)
        (PRT (RP up))
        (PP (IN with)
          (NP
            (NP (DT a) (JJ LOVING) (NN mom)
              (CC and)
              (NN dad))
            (, ,)
            (SBAR
              (WHADVP (RB even) (WRB when))
              (S
                (NP (DT the) (NN family))
                (VP (VBZ starts)
                  (PP (IN with)
                    (NP (DT a) (NN mom)
                      (CC and)
                      (NN dad))))))))))
    (. .)))

amod(children-2, Many-1)
nsubj(grow-5, children-2)
aux(grow-5, do-3)
neg(grow-5, not-4)
root(ROOT-0, grow-5)
prt(grow-5, up-6)
det(mom-10, a-8)
amod(mom-10, LOVING-9)
prep_with(grow-5, mom-10)
tmod(starts-18, mom-10)
prep_with(grow-5, dad-12)
conj_and(mom-10, dad-12)
tmod(starts-18, dad-12)
advmod(when-15, even-14)
advmod(starts-18, when-15)
det(family-17, the-16)
nsubj(starts-18, family-17)
dep(mom-10, starts-18)
det(mom-21, a-20)
prep_with(starts-18, mom-21)
prep_with(starts-18, dad-23)
conj_and(mom-21, dad-23)

(ROOT
  (S
    (S
      (ADVP (RB Often))
      (NP (NNS children))
      (VP
        (VP (VBP are)
          (VP (VBN born)
            (PRT (RP out))
            (PP (IN of)
              (NP (NN wed-lock)))))
        (CC and)
        (ADVP (RB only))
        (VP (VBP have)
          (NP (DT a) (NN mom)))))
    (, ,)
    (CC or)
    (S
      (NP (DT the) (NN dad))
      (VP
        (VP (VBZ leaves))
        (, ,)
        (VP (VBZ dies))
        (, ,)
        (VP (VBZ is)
          (VP (VBN jailed)))
        (, ,)
        (NP
          (NP (FW etc.))
          (, ,)
          (NP (FW etc.)))))
    (. .)))

advmod(born-4, Often-1)
nsubjpass(born-4, children-2)
nsubj(have-10, children-2)
auxpass(born-4, are-3)
root(ROOT-0, born-4)
prep_out_of(born-4, wed-lock-7)
advmod(born-4, only-9)
conj_and(born-4, only-9)
conj_and(born-4, have-10)
det(mom-12, a-11)
dobj(have-10, mom-12)
det(dad-16, the-15)
nsubj(leaves-17, dad-16)
conj_or(born-4, leaves-17)
dep(leaves-17, dies-19)
auxpass(jailed-22, is-21)
dep(leaves-17, jailed-22)
dobj(leaves-17, etc.-24)
appos(etc.-24, etc.-26)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP (DT these) (NNS situations)))
    (. ?)))

root(ROOT-0, What-1)
dep(What-1, about-2)
det(situations-4, these-3)
pobj(about-2, situations-4)

(ROOT
  (FRAG
    (ADVP (RB So))
    (SBAR (IN if)
      (S
        (NP
          (NP (CD two) (NNS people))
          (PP (IN of)
            (NP (DT the) (JJ same) (NN sex))))
        (VP
          (VP (VBP are)
            (PP (IN in)
              (NP (NN love))))
          (CC and)
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB start)
                  (NP
                    (NP (DT a) (NN family))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBP are)
                          (S
                            (NP (PRP you))
                            (VP (TO to)
                              (VP (VB say)
                                (SBAR (IN that)
                                  (S
                                    (NP (PRP they))
                                    (VP (MD will) (RB not)
                                      (VP (VB make)
                                        (NP (JJ good) (, ,) (JJ loving) (NNS parents))))))))))))))))))))
    (. ?)))

root(ROOT-0, So-1)
mark(are-9, if-2)
num(people-4, two-3)
nsubj(are-9, people-4)
nsubj(want-13, people-4)
xsubj(start-15, people-4)
det(sex-8, the-6)
amod(sex-8, same-7)
prep_of(people-4, sex-8)
dep(So-1, are-9)
prep_in(are-9, love-11)
dep(So-1, want-13)
conj_and(are-9, want-13)
aux(start-15, to-14)
xcomp(want-13, start-15)
det(family-17, a-16)
dobj(start-15, family-17)
nsubj(are-19, family-17)
rcmod(family-17, are-19)
nsubj(say-22, you-20)
aux(say-22, to-21)
xcomp(are-19, say-22)
complm(make-27, that-23)
nsubj(make-27, they-24)
aux(make-27, will-25)
neg(make-27, not-26)
ccomp(say-22, make-27)
amod(parents-31, good-28)
amod(parents-31, loving-30)
dobj(make-27, parents-31)

(ROOT
  (SQ (MD Would)
    (NP (DT the) (NN child))
    (VP (VB have)
      (VP (VBN been)
        (ADJP (JJR better) (RP off))
        (PP (IN with)
          (NP (PDT both) (DT a) (NN mom)
            (CC and)
            (NN dad)))))
    (. .)))

aux(better-6, Would-1)
det(child-3, the-2)
nsubj(better-6, child-3)
aux(better-6, have-4)
cop(better-6, been-5)
root(ROOT-0, better-6)
dep(better-6, off-7)
preconj(mom-11, both-9)
det(mom-11, a-10)
prep_with(better-6, mom-11)
prep_with(better-6, dad-13)
conj_and(mom-11, dad-13)

(ROOT
  (FRAG
    (ADVP (RB Maybe))
    (. ?)))

root(ROOT-0, Maybe-1)

(ROOT
  (SQ (NNP Does)
    (NP (PRP it))
    (VP (VB matter))
    (. ?)))

dep(matter-3, Does-1)
nsubj(matter-3, it-2)
root(ROOT-0, matter-3)

(ROOT
  (NP (NN No.)))

root(ROOT-0, No.-1)

