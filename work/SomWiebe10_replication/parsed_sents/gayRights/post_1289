(ROOT
  (SBARQ (RB So)
    (WHNP (WP what))
    (SQ
      (NP (PRP you))
      (VP (VBP are)
        (VP (VBG saying)
          (SBAR
            (S
              (VP (VBZ is)
                (SBAR (IN that)
                  (S
                    (NP (CD two) (NNS men))
                    (VP (MD can)
                      (ADVP (RB never))
                      (VP (VB love)
                        (NP (DT each) (JJ other))
                        (PP (IN in)
                          (NP (DT a) (JJ romantic) (NN way)))))))))))))
    (. ?)))

advmod(saying-5, So-1)
dobj(saying-5, what-2)
nsubj(saying-5, you-3)
aux(saying-5, are-4)
root(ROOT-0, saying-5)
ccomp(saying-5, is-6)
complm(love-12, that-7)
num(men-9, two-8)
nsubj(love-12, men-9)
aux(love-12, can-10)
neg(love-12, never-11)
ccomp(is-6, love-12)
det(other-14, each-13)
dobj(love-12, other-14)
det(way-18, a-16)
amod(way-18, romantic-17)
prep_in(love-12, way-18)

(ROOT
  (NP
    (NP
      (NP (DT That))
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD can)
            (ADVP (RB never))
            (VP (VB want)
              (S
                (VP (TO to)
                  (VP (VB spend)
                    (NP
                      (NP (DT the) (NN rest))
                      (PP (IN of)
                        (NP (PRP$ their) (NNS lives))))))))))))
    (ADJP (RB together))
    (, ,)
    (PP
      (PP (IN through)
        (NP
          (NP (JJ good) (NNS times))
          (CC and)
          (NP (JJ bad))))
      (, ,)
      (PP (IN in)
        (NP (NN sickness)))
      (CC and)
      (PP (IN in)
        (NP (NN health))))
    (. ?)))

root(ROOT-0, That-1)
conj_and(That-1, That-1')
conj_and(That-1, That-1'')
dobj(want-5, That-1)
dobj(want-5, That-1')
dobj(want-5, That-1'')
nsubj(want-5, they-2)
xsubj(spend-7, they-2)
aux(want-5, can-3)
neg(want-5, never-4)
rcmod(That-1, want-5)
aux(spend-7, to-6)
xcomp(want-5, spend-7)
det(rest-9, the-8)
dobj(spend-7, rest-9)
poss(lives-12, their-11)
prep_of(rest-9, lives-12)
amod(That-1, together-13)
amod(times-17, good-16)
prep_through(That-1, times-17)
prep_through(That-1, bad-19)
conj_and(times-17, bad-19)
prep_in(That-1', sickness-22)
prep_in(That-1'', health-25)

(ROOT
  (S
    (NP (DT The) (NN bible))
    (VP (VBZ says)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD should)))))
    (. .)))

det(bible-2, The-1)
nsubj(says-3, bible-2)
root(ROOT-0, says-3)
nsubj(should-5, we-4)
ccomp(says-3, should-5)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How)
        (PP (IN about)
          (NP
            (NP (DT the) (NN part))
            (PP (IN of)
              (NP (DT the) (NNP Bible))))))
      (S
        (NP (DT that))
        (VP (VBZ says))))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (DT a) (NN man))
        (VP (VBZ sleeps)
          (PP (IN with)
            (NP (PRP$ his) (NN daughter))))))
    (NP (PRP they))
    (ADVP (DT both))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN put)
          (PP (TO to)
            (NP (NN death))))))
    (. .)))

advmod(says-9, How-1)
det(part-4, the-3)
prep_about(How-1, part-4)
det(Bible-7, the-6)
prep_of(part-4, Bible-7)
nsubj(says-9, that-8)
dep(put-22, says-9)
advmod(sleeps-14, when-11)
det(man-13, a-12)
nsubj(sleeps-14, man-13)
advcl(put-22, sleeps-14)
poss(daughter-17, his-16)
prep_with(sleeps-14, daughter-17)
nsubjpass(put-22, they-18)
advmod(put-22, both-19)
aux(put-22, should-20)
auxpass(put-22, be-21)
root(ROOT-0, put-22)
prep_to(put-22, death-24)

(ROOT
  (S
    (S
      (VP (VB Allow)
        (S
          (NP (PRP me))
          (VP (TO to)
            (VP (VB repeat)
              (NP
                (NP (DT that))
                (PP (IN for)
                  (NP (PRP you))))
              (: :)
              (SBAR (IN if)
                (S
                  (NP (DT a) (JJ little) (NN girl))
                  (VP (VBZ is)
                    (VP (VBN raped)
                      (PP (IN by)
                        (NP (PRP$ her) (NN dad))))))))))))
    (, ,)
    (NP (PRP she))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN killed))))
    (. .)))

ccomp(killed-22, Allow-1)
nsubj(repeat-4, me-2)
aux(repeat-4, to-3)
xcomp(Allow-1, repeat-4)
dobj(repeat-4, that-5)
prep_for(that-5, you-7)
mark(raped-14, if-9)
det(girl-12, a-10)
amod(girl-12, little-11)
nsubjpass(raped-14, girl-12)
auxpass(raped-14, is-13)
advcl(repeat-4, raped-14)
parataxis(repeat-4, raped-14)
poss(dad-17, her-16)
agent(raped-14, dad-17)
nsubjpass(killed-22, she-19)
aux(killed-22, should-20)
auxpass(killed-22, be-21)
root(ROOT-0, killed-22)

(ROOT
  (S
    (PP (IN By)
      (S
        (VP (VBG basing)
          (NP (PRP$ your) (NNS ideas))
          (PP (IN on)
            (NP
              (NP (NN religion))
              (, ,)
              (CC and)
              (RB not)
              (NP (NN reason)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADVP (RB essentially))
      (VP (VBG creating)
        (NP (DT a) (NN theocracy))))
    (. .)))

prepc_by(creating-15, basing-2)
poss(ideas-4, your-3)
dobj(basing-2, ideas-4)
prep_on(basing-2, religion-6)
prep_on(basing-2, not-9)
conj_and(religion-6, not-9)
neg(religion-6, not-9)
dep(religion-6, reason-10)
nsubj(creating-15, you-12)
aux(creating-15, are-13)
advmod(creating-15, essentially-14)
root(ROOT-0, creating-15)
det(theocracy-17, a-16)
dobj(creating-15, theocracy-17)

(ROOT
  (SQ (VBP Are)
    (NP (PRP you))
    (VP (VBN familiar)
      (PP (IN with)
        (NP (DT the) (JJ first) (NN amendment))))
    (. ?)))

auxpass(familiar-3, Are-1)
nsubjpass(familiar-3, you-2)
root(ROOT-0, familiar-3)
det(amendment-7, the-5)
amod(amendment-7, first-6)
prep_with(familiar-3, amendment-7)

(ROOT
  (S
    (NP (NNP Congress))
    (VP (MD shall)
      (VP (VB make)
        (SBAR
          (S
            (NP
              (NP (DT no) (NN law))
              (VP (VBG respecting)
                (NP
                  (NP (DT an) (NN establishment))
                  (PP (IN of)
                    (NP (NN religionA) (NN law))))
                (PP (VBN based)
                  (PP (IN on)
                    (NP (JJ religious) (NNS reasons))))))
            (VP (VBZ is)
              (NP
                (NP (DT an) (NN establishment))
                (PP (IN of)
                  (NP
                    (NP (NN religion))
                    (PP (IN by)
                      (NP (NN definition)))))))))))
    (. .)))

nsubj(make-3, Congress-1)
aux(make-3, shall-2)
root(ROOT-0, make-3)
det(law-5, no-4)
nsubj(establishment-18, law-5)
partmod(law-5, respecting-6)
det(establishment-8, an-7)
dobj(respecting-6, establishment-8)
nn(law-11, religionA-10)
prep_of(establishment-8, law-11)
prepc_based_on(respecting-6, on-13)
amod(reasons-15, religious-14)
pobj(respecting-6, reasons-15)
cop(establishment-18, is-16)
det(establishment-18, an-17)
ccomp(make-3, establishment-18)
prep_of(establishment-18, religion-20)
prep_by(religion-20, definition-22)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NN definition))
      (PP (IN of)
        (NP (NN family))))
    (VP (VBZ is)
      (ADJP (RB equally) (JJ bullshit)))
    (. .)))

poss(definition-2, Your-1)
nsubj(bullshit-7, definition-2)
prep_of(definition-2, family-4)
cop(bullshit-7, is-5)
advmod(bullshit-7, equally-6)
root(ROOT-0, bullshit-7)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBD had)
          (NP
            (NP (DT a) (NN religion))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD said)
                  (SBAR
                    (S
                      (NP (JJ black) (NNS people))
                      (VP (VBD were)
                        (ADJP (JJ evil))))))))))))
    (, ,) (MD could)
    (NP (PRP I))
    (VP (VB make)
      (NP
        (NP (NNS laws))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD would)
              (VP (VB discriminate)
                (PP (IN against)
                  (NP (PRP them)))))))))
    (. ?)))

mark(had-3, If-1)
nsubj(had-3, I-2)
advcl(make-15, had-3)
det(religion-5, a-4)
dobj(had-3, religion-5)
nsubj(said-7, religion-5)
rcmod(religion-5, said-7)
amod(people-9, black-8)
nsubj(evil-11, people-9)
cop(evil-11, were-10)
ccomp(said-7, evil-11)
aux(make-15, could-13)
nsubj(make-15, I-14)
root(ROOT-0, make-15)
dobj(make-15, laws-16)
nsubj(discriminate-19, laws-16)
aux(discriminate-19, would-18)
rcmod(laws-16, discriminate-19)
prep_against(discriminate-19, them-21)

(ROOT
  (S
    (ADVP (RB Well))
    (NP (PRP$ your) (JJ own) (NN church))
    (VP (VBD thought)
      (ADVP (RB so) (RB up))
      (PP (IN until)
        (NP (DT the) (NNS 1970s))))
    (. .)))

advmod(thought-5, Well-1)
poss(church-4, your-2)
amod(church-4, own-3)
nsubj(thought-5, church-4)
root(ROOT-0, thought-5)
advmod(up-7, so-6)
advmod(thought-5, up-7)
det(1970s-10, the-9)
prep_until(thought-5, 1970s-10)

(ROOT
  (S
    (SBAR (IN Until)
      (S
        (NP (PRP you))
        (VP (VBP give)
          (NP (PRP me))
          (NP
            (NP (DT an) (JJ actual) (NN reason))
            (PP (IN as) (TO to)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (NNS gays))
                  (VP (MD should) (RB not)
                    (VP (VB adopt))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADVP (RB still))
      (NP
        (NP (DT a) (NN fool))
        (PP (IN for)
          (S
            (VP (VBG denying)
              (NP (NNPS Americans) (NNS rights)))))))
    (. .)))

mark(give-3, Until-1)
nsubj(give-3, you-2)
advcl(fool-20, give-3)
iobj(give-3, me-4)
det(reason-7, an-5)
amod(reason-7, actual-6)
dobj(give-3, reason-7)
advmod(adopt-14, why-10)
nsubj(adopt-14, gays-11)
aux(adopt-14, should-12)
neg(adopt-14, not-13)
prepc_as_to(reason-7, adopt-14)
nsubj(fool-20, you-16)
cop(fool-20, are-17)
advmod(fool-20, still-18)
det(fool-20, a-19)
root(ROOT-0, fool-20)
prepc_for(fool-20, denying-22)
nn(rights-24, Americans-23)
dobj(denying-22, rights-24)

(ROOT
  (FRAG (WRB Why) (. ?)))

root(ROOT-0, Why-1)

(ROOT
  (S
    (NP (PRP$ Your) (NN failure)
      (S
        (VP (TO to)
          (VP (VB recognize)
            (NP (NN love))
            (PRT (RP in))
            (ADVP
              (ADVP
                (ADVP (RBR more) (RB then))
                (NP (DT the) (JJ narrow) (NNS forms)))
              (SBAR (IN that)
                (S
                  (NP (PRP$ your) (NN religion))
                  (VP (VBZ defines)))))))))
    (VP (VBZ shows)
      (NP (DT both) (JJ narrow) (NNS mindedness)
        (CC and)
        (NN bigotry)))
    (. .)))

poss(failure-2, Your-1)
nsubj(shows-16, failure-2)
aux(recognize-4, to-3)
infmod(failure-2, recognize-4)
dobj(recognize-4, love-5)
prt(recognize-4, in-6)
advmod(then-8, more-7)
advmod(recognize-4, then-8)
det(forms-11, the-9)
amod(forms-11, narrow-10)
dep(then-8, forms-11)
dep(defines-15, that-12)
poss(religion-14, your-13)
nsubj(defines-15, religion-14)
ccomp(then-8, defines-15)
root(ROOT-0, shows-16)
preconj(mindedness-19, both-17)
amod(mindedness-19, narrow-18)
dobj(shows-16, mindedness-19)
dobj(shows-16, bigotry-21)
conj_and(mindedness-19, bigotry-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD can)
      (VP
        (VP (VB say)
          (NP (DT this)))
        (CC and)
        (VP (VB know)
          (SBAR (IN that) (IN in)
            (S
              (NP (DT no) (NN way))
              (VP (VBP am)
                (S
                  (NP (PRP I))
                  (VP (VBG being)
                    (ADJP (JJ arrogant)))))))
          (, ,)
          (SBAR (IN because)
            (S
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBD were)
                    (S
                      (VP (TO to)
                        (VP (VB ask)
                          (NP (PRP me))
                          (SBAR
                            (WHADVP (WRB why))
                            (S
                              (NP (PRP I))
                              (VP (VBP believe)
                                (SBAR
                                  (S
                                    (NP (DT any) (NN action))
                                    (VP (VBZ is)
                                      (ADJP (DT either) (JJ moral)
                                        (CC or)
                                        (JJ immoral))))))))))))))
              (, ,)
              (NP (PRP I))
              (VP (MD could)
                (VP
                  (VP (VB give)
                    (NP (PRP you))
                    (NP (NNS reasons)))
                  (, ,)
                  (CC and)
                  (RB not)
                  (VP
                    (ADVP (RB mindlessly))
                    (VB quote)
                    (NP (DT some) (NN book))))))))))
    (. .)))

nsubj(say-3, I-1)
nsubj(know-6, I-1)
aux(say-3, can-2)
root(ROOT-0, say-3)
dobj(say-3, this-4)
conj_and(say-3, know-6)
complm(am-11, that-7)
dep(am-11, in-8)
det(way-10, no-9)
nsubj(am-11, way-10)
ccomp(know-6, am-11)
nsubj(arrogant-14, I-12)
cop(arrogant-14, being-13)
dep(am-11, arrogant-14)
mark(give-36, because-16)
mark(were-19, if-17)
nsubj(were-19, you-18)
xsubj(ask-21, you-18)
advcl(give-36, were-19)
aux(ask-21, to-20)
xcomp(were-19, ask-21)
dobj(ask-21, me-22)
advmod(believe-25, why-23)
nsubj(believe-25, I-24)
advcl(ask-21, believe-25)
det(action-27, any-26)
nsubj(moral-30, action-27)
nsubj(immoral-32, action-27)
cop(moral-30, is-28)
preconj(moral-30, either-29)
ccomp(believe-25, moral-30)
ccomp(believe-25, immoral-32)
conj_or(moral-30, immoral-32)
nsubj(give-36, I-34)
aux(give-36, could-35)
advcl(know-6, give-36)
iobj(give-36, you-37)
dobj(give-36, reasons-38)
advcl(know-6, not-41)
conj_and(give-36, not-41)
neg(give-36, not-41)
advmod(quote-43, mindlessly-42)
dep(give-36, quote-43)
det(book-45, some-44)
dobj(quote-43, book-45)

(ROOT
  (S
    (S
      (SBAR (IN Whether)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (ADJP (JJ right)
              (CC or)
              (JJ wrong)))))
      (VP (VBZ is)
        (ADVP (RB certainly))
        (ADJP (JJ debatable))))
    (, ,)
    (CC but)
    (S
      (ADVP (IN at) (JJS least))
      (NP (PRP I))
      (VP (MD can)
        (VP (VB back)
          (PRT (RP up))
          (NP (PRP$ my) (NNS beliefs)))))
    (. .)))

complm(right-4, Whether-1)
nsubj(right-4, I-2)
nsubj(wrong-6, I-2)
cop(right-4, am-3)
csubj(debatable-9, right-4)
conj_or(right-4, wrong-6)
csubj(debatable-9, wrong-6)
cop(debatable-9, is-7)
advmod(debatable-9, certainly-8)
root(ROOT-0, debatable-9)
advmod(back-16, at-12)
pobj(at-12, least-13)
nsubj(back-16, I-14)
aux(back-16, can-15)
conj_but(debatable-9, back-16)
prt(back-16, up-17)
poss(beliefs-19, my-18)
dobj(back-16, beliefs-19)

(ROOT
  (SBARQ
    (WHNP
      (WHNP (WP What))
      (PP (IN in)
        (NP
          (NP (PRP$ your) (CD 18) (NNS years))
          (PP (IN of)
            (NP (NN life))))))
    (SQ
      (VP (VBZ allows)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB be)
              (ADJP (RB so) (JJ certain)
                (PP (IN of)
                  (NP (DT this) (NN claim)))))))))
    (. ?)))

nsubj(allows-8, What-1)
poss(years-5, your-3)
num(years-5, 18-4)
prep_in(What-1, years-5)
prep_of(years-5, life-7)
root(ROOT-0, allows-8)
nsubj(certain-13, you-9)
aux(certain-13, to-10)
cop(certain-13, be-11)
advmod(certain-13, so-12)
xcomp(allows-8, certain-13)
det(claim-16, this-15)
prep_of(certain-13, claim-16)

(ROOT
  (SQ (VBP Are)
    (NP (DT all))
    (ADJP
      (ADJP (JJ homosexuals))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP claim)
            (S
              (VP (TO to)
                (VP (VB be)
                  (PP (IN in)
                    (NP (NN love) (VBG lying))))))))))
    (. ?)))

cop(homosexuals-3, Are-1)
nsubj(homosexuals-3, all-2)
root(ROOT-0, homosexuals-3)
nsubj(claim-5, who-4)
dep(homosexuals-3, claim-5)
aux(be-7, to-6)
xcomp(claim-5, be-7)
prep_in(be-7, love-9)
amod(love-9, lying-10)

(ROOT
  (S (CC And)
    (ADVP (RB now))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG calling)
        (S
          (NP (PRP me))
          (ADJP (JJ arrogant)))))
    (. ?)))

cc(calling-5, And-1)
advmod(calling-5, now-2)
nsubj(calling-5, you-3)
aux(calling-5, are-4)
root(ROOT-0, calling-5)
nsubj(arrogant-7, me-6)
xcomp(calling-5, arrogant-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (NP
        (NP (DT the) (NN one))
        (VP (VBG stepping)
          (PP (IN on)
            (NP
              (NP (NNS people) (POS 's))
              (NN liberty))))))
    (. ?)))

nsubj(one-5, I-1)
cop(one-5, am-2)
neg(one-5, not-3)
det(one-5, the-4)
root(ROOT-0, one-5)
partmod(one-5, stepping-6)
poss(liberty-10, people-8)
prep_on(stepping-6, liberty-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (NP
        (NP (DT the) (NN one))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ is)
              (VP (VBG calling)
                (NP (DT an) (JJ entire) (NN group))
                (PP (IN of)
                  (SBARQ
                    (WHNP (WP humanity))
                    (SQ (MD Would)
                      (NP (PRP you))
                      (VP (VB marry)
                        (NP (DT a) (NN man))))
                    (. ?)))))))))))

nsubj(one-5, I-1)
cop(one-5, am-2)
neg(one-5, not-3)
det(one-5, the-4)
root(ROOT-0, one-5)
nsubj(calling-8, one-5)
aux(calling-8, is-7)
rcmod(one-5, calling-8)
det(group-11, an-9)
amod(group-11, entire-10)
dobj(calling-8, group-11)
prep(calling-8, of-12)
dep(marry-16, humanity-13)
aux(marry-16, Would-14)
nsubj(marry-16, you-15)
dep(of-12, marry-16)
det(man-18, a-17)
dobj(marry-16, man-18)

(ROOT
  (SBARQ
    (WHADVP
      (ADVP (RB Then))
      (WRB why))
    (SQ (MD should)
      (NP (DT a) (NN lesbian))
      (VP (VB be)
        (VP (VBN forced)
          (S
            (VP (TO to)
              (VP (VB marry)
                (NP (DT a) (NN man))))))))
    (. ?)))

advmod(why-2, Then-1)
advmod(forced-7, why-2)
aux(forced-7, should-3)
det(lesbian-5, a-4)
nsubjpass(forced-7, lesbian-5)
auxpass(forced-7, be-6)
root(ROOT-0, forced-7)
aux(marry-9, to-8)
xcomp(forced-7, marry-9)
det(man-11, a-10)
dobj(marry-9, man-11)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB claim)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (VBP are) (RB not)
                (VP (VBG denying)
                  (NP
                    (NP (NNS people))
                    (SBAR
                      (S
                        (NP (NNS rights))
                        (VP (VBZ is)
                          (ADJP (RB as) (JJ ludacris))
                          (SBAR (IN as)
                            (S
                              (NP (DT the) (NN argument) (NNS segregationists))
                              (VP (VBD used)
                                (S
                                  (VP (TO to)
                                    (VP (VB keep)
                                      (S
                                        (NP (JJ interracial) (NN marriage))
                                        (ADJP (JJ illegal))))))))))))))))))))
    (: :) (`` ``)
    (S
      (S
        (NP (PRP we))
        (VP (VBP 're) (RB not)
          (VP (VBG violating)
            (NP (PRP$ their) (NNS rights))
            (, ,)
            (SBAR (IN because)
              (S
                (NP (DT no) (NN one))
                (VP (MD can)
                  (VP (VB marry)
                    (NP
                      (NP (RB outside))
                      (PP (IN of)
                        (NP (PRP$ their) (NN gender)))))))))))
      (, ,) (RB not)
      (S
        (ADVP (RB just))
        (NP (NNS blacks))))
    (. .)))

aux(claim-2, To-1)
root(ROOT-0, claim-2)
complm(denying-7, that-3)
nsubj(denying-7, you-4)
aux(denying-7, are-5)
neg(denying-7, not-6)
ccomp(claim-2, denying-7)
dobj(denying-7, people-8)
nsubj(ludacris-12, rights-9)
cop(ludacris-12, is-10)
advmod(ludacris-12, as-11)
rcmod(people-8, ludacris-12)
mark(used-17, as-13)
det(segregationists-16, the-14)
nn(segregationists-16, argument-15)
nsubj(used-17, segregationists-16)
xsubj(keep-19, segregationists-16)
advcl(ludacris-12, used-17)
aux(keep-19, to-18)
xcomp(used-17, keep-19)
amod(marriage-21, interracial-20)
nsubj(illegal-22, marriage-21)
xcomp(keep-19, illegal-22)
nsubj(violating-28, we-25)
aux(violating-28, 're-26)
neg(violating-28, not-27)
ccomp(claim-2, violating-28)
poss(rights-30, their-29)
dobj(violating-28, rights-30)
mark(marry-36, because-32)
det(one-34, no-33)
nsubj(marry-36, one-34)
aux(marry-36, can-35)
advcl(violating-28, marry-36)
dobj(marry-36, outside-37)
poss(gender-40, their-39)
prep_of(outside-37, gender-40)
neg(violating-28, not-42)
advmod(blacks-44, just-43)
dep(violating-28, blacks-44)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN problem))
        (PP (IN with)
          (NP (DT the) (NN fact))))
      (SBAR (IN that)
        (S
          (NP (PRP$ your) (JJ only) (NNS reasons))
          (VP (VBP stem)
            (PP
              (PP (IN from)
                (NP (DT a)
                  (ADJP (CD 2,000) (NN year) (JJ old))
                  (NN book)))
              (, ,)
              (CC and)
              (RB not)
              (PP (IN from)
                (NP (NN reason))))))))
    (. .)))

nsubj(have-3, I-2)
root(ROOT-0, have-3)
det(problem-5, a-4)
dobj(have-3, problem-5)
det(fact-8, the-7)
prep_with(problem-5, fact-8)
complm(stem-13, that-9)
poss(reasons-12, your-10)
amod(reasons-12, only-11)
nsubj(stem-13, reasons-12)
ccomp(have-3, stem-13)
prep(stem-13, from-14)
det(book-19, a-15)
number(old-18, 2,000-16)
dep(old-18, year-17)
amod(book-19, old-18)
pobj(from-14, book-19)
prep(stem-13, not-22)
conj_and(from-14, not-22)
neg(from-14, not-22)
dep(from-14, from-23)
pobj(from-23, reason-24)

(ROOT
  (SQ (NNP Should)
    (NP (PRP we))
    (VP (VB make)
      (S
        (NP (NN shellfish))
        (ADJP (JJ illegal))))
    (. ?)))

dep(make-3, Should-1)
nsubj(make-3, we-2)
root(ROOT-0, make-3)
nsubj(illegal-5, shellfish-4)
xcomp(make-3, illegal-5)

