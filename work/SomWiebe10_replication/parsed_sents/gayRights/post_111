(ROOT
  (S
    (S
      (S
        (VP (VBG Allowing)
          (NP (JJ gay) (NN marriage))))
      (VP (MD would)
        (VP (VB cause)
          (NP
            (NP (DT a) (NN number))
            (PP (IN of)
              (NP
                (NP (JJ other) (NNS principles))
                (VP (VBG surrounding)
                  (NP (NN marriage))
                  (S
                    (VP (TO to)
                      (VP (VB come)
                        (PP (IN under)
                          (NP (NN attack)))))))))))))
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ many) (JJ possible) (NNS ways))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (JJ gay) (NN marriage))
            (VP (MD could)
              (VP (VB lead)
                (PP (TO to)
                  (NP (JJ other) (NNS attacks)))
                (PP (IN on)
                  (NP
                    (NP (DT the) (JJ basic) (NNS principles))
                    (PP (IN of)
                      (NP (NN marriage)))))))))))
    (. .)))

csubj(cause-5, Allowing-1)
amod(marriage-3, gay-2)
dobj(Allowing-1, marriage-3)
aux(cause-5, would-4)
dep(are-18, cause-5)
det(number-7, a-6)
dobj(cause-5, number-7)
amod(principles-10, other-9)
prep_of(number-7, principles-10)
partmod(principles-10, surrounding-11)
dobj(surrounding-11, marriage-12)
aux(come-14, to-13)
xcomp(surrounding-11, come-14)
prep_under(come-14, attack-16)
expl(are-18, There-17)
root(ROOT-0, are-18)
amod(ways-21, many-19)
amod(ways-21, possible-20)
nsubj(are-18, ways-21)
rel(lead-27, which-23)
amod(marriage-25, gay-24)
nsubj(lead-27, marriage-25)
aux(lead-27, could-26)
rcmod(ways-21, lead-27)
amod(attacks-30, other-29)
prep_to(lead-27, attacks-30)
det(principles-34, the-32)
amod(principles-34, basic-33)
prep_on(lead-27, principles-34)
prep_of(principles-34, marriage-36)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ possible))
      (SBAR (IN that)
        (S
          (NP (JJ gay) (NN marriage))
          (VP (MD will)
            (VP (VB be)
              (VP (VBN seen)
                (PP (IN as)
                  (NP (DT an) (NN opportunity)))
                (PP (IN by)
                  (NP (NNS polygamists)
                    (CC and)
                    (NNS polyamorists)))
                (S
                  (VP (TO to)
                    (VP (VB attempt)
                      (S
                        (VP (TO to)
                          (VP (VB obtain)
                            (NP (NN marriage) (NNS rights))))))))))))))
    (. .)))

nsubj(possible-3, It-1)
cop(possible-3, is-2)
root(ROOT-0, possible-3)
complm(seen-9, that-4)
amod(marriage-6, gay-5)
nsubjpass(seen-9, marriage-6)
aux(seen-9, will-7)
auxpass(seen-9, be-8)
ccomp(possible-3, seen-9)
det(opportunity-12, an-11)
prep_as(seen-9, opportunity-12)
agent(seen-9, polygamists-14)
agent(seen-9, polyamorists-16)
conj_and(polygamists-14, polyamorists-16)
aux(attempt-18, to-17)
xcomp(seen-9, attempt-18)
aux(obtain-20, to-19)
xcomp(attempt-18, obtain-20)
nn(rights-22, marriage-21)
dobj(obtain-20, rights-22)

(ROOT
  (S
    (NP (WP What) (NN logic))
    (VP (MD could)
      (VP (VB stop)
        (NP (DT this))
        (SBAR (IN if)
          (S
            (NP (NN marriage))
            (VP (VBZ is)
              (VP (VBN offered)
                (PP (TO to)
                  (NP (NNS homosexuals)))))))))
    (. .)))

dep(logic-2, What-1)
nsubj(stop-4, logic-2)
aux(stop-4, could-3)
root(ROOT-0, stop-4)
dobj(stop-4, this-5)
mark(offered-9, if-6)
nsubjpass(offered-9, marriage-7)
auxpass(offered-9, is-8)
advcl(stop-4, offered-9)
prep_to(offered-9, homosexuals-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (JJ traditional) (NN definition))
          (PP (IN of)
            (NP (NN marriage))))
        (VP (VBZ is)
          (VP (VBN stretched)
            (S
              (VP (TO to)
                (VP (VB include)
                  (NP (NNS homosexuals)))))))))
    (, ,)
    (NP (WP what) (NN rationale))
    (VP (MD could)
      (VP (VB prevent)
        (NP (PRP it))
        (PP (IN from)
          (S
            (VP (VBG being)
              (VP (VBN stretched)
                (S
                  (VP (TO to)
                    (VP (VB include)
                      (NP (NN polygamy)
                        (CC and)
                        (NN polyamory)))))))))))
    (. .)))

mark(stretched-8, If-1)
det(definition-4, the-2)
amod(definition-4, traditional-3)
nsubjpass(stretched-8, definition-4)
xsubj(include-10, definition-4)
prep_of(definition-4, marriage-6)
auxpass(stretched-8, is-7)
advcl(prevent-16, stretched-8)
aux(include-10, to-9)
xcomp(stretched-8, include-10)
dobj(include-10, homosexuals-11)
dep(rationale-14, what-13)
nsubj(prevent-16, rationale-14)
aux(prevent-16, could-15)
root(ROOT-0, prevent-16)
dobj(prevent-16, it-17)
auxpass(stretched-20, being-19)
prepc_from(prevent-16, stretched-20)
aux(include-22, to-21)
xcomp(stretched-20, include-22)
dobj(include-22, polygamy-23)
dobj(include-22, polyamory-25)
conj_and(polygamy-23, polyamory-25)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ same) (NNS justifications))
        (PP (IN for)
          (NP (JJ gay) (NN marriage))))
      (VP (MD could)
        (VP (VB be)
          (VP (VBN put)
            (ADVP (RB forward))
            (PP (IN by)
              (NP (NNS polygamists)
                (CC and)
                (NNS polyamorists)))))))
    (: ;)
    (S
      (NP (DT That) (RB there) (NN relationship))
      (VP (VBZ is)
        (VP (VBN based)
          (PP (IN on)
            (NP (NN love)
              (CC and)
              (NN commitment))))))
    (. .)))

det(justifications-3, The-1)
amod(justifications-3, same-2)
nsubjpass(put-9, justifications-3)
amod(marriage-6, gay-5)
prep_for(justifications-3, marriage-6)
aux(put-9, could-7)
auxpass(put-9, be-8)
root(ROOT-0, put-9)
advmod(put-9, forward-10)
agent(put-9, polygamists-12)
agent(put-9, polyamorists-14)
conj_and(polygamists-12, polyamorists-14)
det(relationship-18, That-16)
advmod(relationship-18, there-17)
nsubjpass(based-20, relationship-18)
auxpass(based-20, is-19)
parataxis(put-9, based-20)
prep_on(based-20, love-22)
prep_on(based-20, commitment-24)
conj_and(love-22, commitment-24)

(ROOT
  (S (CC And)
    (, ,)
    (ADVP (RB obviously))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (NN marriage))
        (VP (VBZ is)
          (VP (VBN extended)
            (PP (TO to)
              (NP (DT these) (NNS groups)))))))
    (, ,)
    (NP
      (NP
        (NP (DT the) (JJ traditional) (NN institution))
        (PP (IN of)
          (NP (NN marriage))))
      (CC and)
      (NP
        (NP (DT the) (NNS principles))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ stands)
              (PRT (RP on)))))))
    (VP (MD will)
      (VP (VB be)
        (VP (VBN damaged))))
    (. .)))

cc(damaged-27, And-1)
advmod(damaged-27, obviously-3)
mark(extended-8, if-5)
nsubjpass(extended-8, marriage-6)
auxpass(extended-8, is-7)
advcl(damaged-27, extended-8)
det(groups-11, these-10)
prep_to(extended-8, groups-11)
det(institution-15, the-13)
amod(institution-15, traditional-14)
nsubjpass(damaged-27, institution-15)
prep_of(institution-15, marriage-17)
det(principles-20, the-19)
conj_and(institution-15, principles-20)
dobj(stands-23, principles-20)
nsubjpass(damaged-27, principles-20)
complm(stands-23, that-21)
nsubj(stands-23, it-22)
dep(principles-20, stands-23)
prt(stands-23, on-24)
aux(damaged-27, will-25)
auxpass(damaged-27, be-26)
root(ROOT-0, damaged-27)

