(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADVP (NN nothing))
        (ADJP (JJR more))
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN than)
                (S
                  (NP (PRP I))
                  (VP (VBP believe)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (NNP GOD))
                        (VP (VBZ says)
                          (SBAR
                            (S
                              (VP (VBZ is)
                                (ADJP (JJ true))))))))))))))))
    (CC and)
    (S
      (NP (PRP$ HIS)
        (ADJP (VBN spoken) (, ,) (VBN written)
          (CC or)
          (VBN revealed))
        (NN WORD))
      (VP (VBZ is)
        (ADJP (JJ true))))
    (. .)))

expl(is-2, There-1)
xsubj(say-6, There-1)
root(ROOT-0, is-2)
advmod(is-2, nothing-3)
acomp(is-2, more-4)
aux(say-6, to-5)
xcomp(is-2, say-6)
mark(believe-9, than-7)
nsubj(believe-9, I-8)
advcl(say-6, believe-9)
dep(says-12, what-10)
nsubj(true-14, what-10)
nsubj(says-12, GOD-11)
ccomp(believe-9, says-12)
cop(true-14, is-13)
ccomp(says-12, true-14)
poss(WORD-22, HIS-16)
amod(WORD-22, spoken-17)
conj_or(spoken-17, written-19)
amod(WORD-22, written-19)
conj_or(spoken-17, revealed-21)
amod(WORD-22, revealed-21)
nsubj(true-24, WORD-22)
cop(true-24, is-23)
conj_and(is-2, true-24)

(ROOT
  (S
    (NP
      (NP (NNP Alot))
      (PP (IN of)
        (NP (NNS people))))
    (ADVP (RB just))
    (VP (MD ca) (RB n't)
      (VP (VB get)
        (NP (PRP it))
        (SBAR (IN because)
          (S
            (NP (PRP they))
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB live)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (PRP they))
                        (VP (VBP want)
                          (S
                            (VP (TO to)
                              (VP (VB live)))))))))))))))
    (. .)))

nsubj(get-7, Alot-1)
prep_of(Alot-1, people-3)
advmod(get-7, just-4)
aux(get-7, ca-5)
neg(get-7, n't-6)
root(ROOT-0, get-7)
dobj(get-7, it-8)
mark(want-11, because-9)
nsubj(want-11, they-10)
xsubj(live-13, they-10)
advcl(get-7, want-11)
aux(live-13, to-12)
xcomp(want-11, live-13)
advmod(want-16, how-14)
nsubj(want-16, they-15)
xsubj(live-18, they-15)
ccomp(live-13, want-16)
aux(live-18, to-17)
xcomp(want-16, live-18)

(ROOT
  (SQ (MD Can)
    (NP (DT a) (JJ homosexual))
    (VP (VB prove)
      (SBAR
        (S
          (NP (NN he\/she))
          (VP (VBD was)
            (VP (VBN born)
              (NP (DT this) (NN way)))))))
    (. ?)))

aux(prove-4, Can-1)
det(homosexual-3, a-2)
nsubj(prove-4, homosexual-3)
root(ROOT-0, prove-4)
nsubjpass(born-7, he\/she-5)
auxpass(born-7, was-6)
ccomp(prove-4, born-7)
det(way-9, this-8)
dobj(born-7, way-9)

(ROOT
  (S (CC and)
    (PP (IN on)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (NN basis))
          (VP (MD would)))))
    (NP (PRP you))
    (VP (VBP say)
      (NP (DT that)))
    (. ?)))

cc(say-7, and-1)
dep(say-7, on-2)
dobj(would-5, what-3)
nsubj(would-5, basis-4)
pcomp(on-2, would-5)
nsubj(say-7, you-6)
root(ROOT-0, say-7)
dobj(say-7, that-8)

