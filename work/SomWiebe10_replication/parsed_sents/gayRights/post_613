(ROOT
  (S
    (S
      (VP (VBN Mangueken)))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ glad)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP agree)
              (PP (IN on)
                (NP
                  (NP (DT the) (NNS non-sinfulness))
                  (PP (IN of)
                    (NP (NN homosexuality))))))))))
    (. .)))

partmod(glad-5, Mangueken-1)
nsubj(glad-5, I-3)
cop(glad-5, 'm-4)
root(ROOT-0, glad-5)
nsubj(agree-7, we-6)
dep(glad-5, agree-7)
det(non-sinfulness-10, the-9)
prep_on(agree-7, non-sinfulness-10)
prep_of(non-sinfulness-10, homosexuality-12)

(ROOT
  (S (CC But)
    (NP (PRP you))
    (VP
      (ADVP (RB also))
      (VBD said) ('' '')
      (S
        (VP
          (VP (VB Live))
          (CC and)
          (VP (VB let)
            (SBAR
              (S
                (NP (JJ live))
                (VP (VBZ is)
                  (ADVP (RB hardly))
                  (NP
                    (NP (DT a) (JJ good) (NN basis))
                    (PP (IN for)
                      (NP (NN morality)))))))))))
    (. .)))

cc(said-4, But-1)
nsubj(said-4, you-2)
advmod(said-4, also-3)
root(ROOT-0, said-4)
ccomp(said-4, Live-6)
ccomp(said-4, let-8)
conj_and(Live-6, let-8)
nsubj(basis-14, live-9)
cop(basis-14, is-10)
advmod(basis-14, hardly-11)
det(basis-14, a-12)
amod(basis-14, good-13)
ccomp(let-8, basis-14)
prep_for(basis-14, morality-16)

(ROOT
  (S
    (S
      (NP (NNP Granted))
      (, ,)
      (PP (IN on)
        (NP (DT an) (JJ individual) (NN level)))
      (, ,)
      (NP (PRP one))
      (VP (VBZ is) (RB not)
        (ADJP (RB morally) (JJ REQUIRED)
          (S
            (VP (TO to)
              (VP (VB intervene)
                (PRN (-LRB- -LRB-)
                  (SBAR (IN If)
                    (S
                      (NP (PRP one))
                      (VP (VBZ fears)
                        (PP (IN for)
                          (NP
                            (NP (CD one) (POS 's))
                            (JJ own) (NN safety)))
                        (, ,)
                        (PP (IN for)
                          (NP (NN example))))))
                  (-RRB- -RRB-))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP one))
      (VP (VBZ is)
        (ADJP (RB morally) (JJ PERMITTED))
        (S
          (VP (TO to)
            (VP (VB do)
              (ADVP (RB so)))))))
    (. .)))

nsubj(REQUIRED-12, Granted-1)
det(level-6, an-4)
amod(level-6, individual-5)
prep_on(REQUIRED-12, level-6)
nsubj(REQUIRED-12, one-8)
cop(REQUIRED-12, is-9)
neg(REQUIRED-12, not-10)
advmod(REQUIRED-12, morally-11)
root(ROOT-0, REQUIRED-12)
aux(intervene-14, to-13)
xcomp(REQUIRED-12, intervene-14)
mark(fears-18, If-16)
nsubj(fears-18, one-17)
parataxis(intervene-14, fears-18)
poss(safety-23, one-20)
amod(safety-23, own-22)
prep_for(fears-18, safety-23)
prep_for(fears-18, example-26)
nsubj(PERMITTED-33, one-30)
xsubj(do-35, one-30)
cop(PERMITTED-33, is-31)
advmod(PERMITTED-33, morally-32)
conj_but(REQUIRED-12, PERMITTED-33)
aux(do-35, to-34)
xcomp(PERMITTED-33, do-35)
advmod(do-35, so-36)

(ROOT
  (S (CC But)
    (PP (IN on)
      (NP (DT a) (JJ social) (NN level)))
    (, ,)
    (NP (DT a) (JJ civil) (NN society))
    (VP (VBZ is)
      (NP
        (NP (DT both))
        (VP (VBN permitted)
          (CC and)
          (VBN required)
          (S
            (VP (TO to)
              (VP (VB intervene)))))))
    (. .)))

cc(both-11, But-1)
det(level-5, a-3)
amod(level-5, social-4)
prep_on(both-11, level-5)
det(society-9, a-7)
amod(society-9, civil-8)
nsubj(both-11, society-9)
cop(both-11, is-10)
root(ROOT-0, both-11)
xsubj(intervene-16, both-11)
partmod(both-11, permitted-12)
partmod(both-11, required-14)
conj_and(permitted-12, required-14)
aux(intervene-16, to-15)
xcomp(permitted-12, intervene-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (PP (IN for)
        (NP (DT this) (NN reason)))
      (SBAR (IN that)
        (S
          (NP (NNP invading) (NNP Iraq))
          (VP (VBD was)
            (NP (DT a) (JJ moral) (NN thing)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (PRN (-LRB- -LRB-)
                      (SBAR (IN although)
                        (S (RB not)
                          (VP (VBN handled)
                            (ADVP (RB particularly))
                            (ADVP (RB well)))))
                      (-RRB- -RRB-))))))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
det(reason-5, this-4)
prep_for(is-2, reason-5)
complm(thing-12, that-6)
nn(Iraq-8, invading-7)
nsubj(thing-12, Iraq-8)
cop(thing-12, was-9)
det(thing-12, a-10)
amod(thing-12, moral-11)
ccomp(is-2, thing-12)
aux(do-14, to-13)
infmod(thing-12, do-14)
mark(handled-18, although-16)
neg(handled-18, not-17)
parataxis(do-14, handled-18)
advmod(handled-18, particularly-19)
advmod(handled-18, well-20)

(ROOT
  (S (CC But)
    (NP (DT that))
    (VP (VBZ 's)
      (NP (DT another) (NN topic)))
    (. .)))

cc(topic-5, But-1)
nsubj(topic-5, that-2)
cop(topic-5, 's-3)
det(topic-5, another-4)
root(ROOT-0, topic-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP reiterate))
    (. .)))

nsubj(reiterate-2, I-1)
root(ROOT-0, reiterate-2)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN everyone))
        (VP (VBD swore)
          (NP (DT the) (JJ following) (NN oath)))))
    (, ,)
    (NP (PRP we))
    (VP (MD would)
      (VP (VB need)
        (NP (DT no) (JJ other) (JJ moral) (NN law))))
    (. .)))

mark(swore-3, If-1)
nsubj(swore-3, everyone-2)
advcl(need-10, swore-3)
det(oath-6, the-4)
amod(oath-6, following-5)
dobj(swore-3, oath-6)
nsubj(need-10, we-8)
aux(need-10, would-9)
root(ROOT-0, need-10)
det(law-14, no-11)
amod(law-14, other-12)
amod(law-14, moral-13)
dobj(need-10, law-14)

(ROOT
  (S ('' '')
    (NP (NN Everyone))
    (VP (VBZ has)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WDT whatever))
                (S
                  (NP (PRP they))
                  (VP (VBP want)))))))))
    (. .)))

nsubj(has-3, Everyone-2)
root(ROOT-0, has-3)
det(right-5, the-4)
dobj(has-3, right-5)
aux(do-7, to-6)
infmod(right-5, do-7)
dobj(want-10, whatever-8)
nsubj(want-10, they-9)
ccomp(do-7, want-10)

(ROOT
  (S ('' '')
    (NP (DT This) (NN oath))
    (VP (VBZ demands)
      (SBAR (IN that)
        (S
          (NP (PRP$ my) (NNS rights))
          (VP
            (VP (VB be)
              (ADJP (JJ respected)))
            (, ,)
            (CC and)
            (VP
              (ADVP (RB also))
              (VBZ demands)
              (SBAR (IN that)
                (S
                  (NP (PRP I))
                  (VP (VB respect)
                    (NP
                      (NP (DT the) (JJ same) (NNS rights))
                      (PP (IN of)
                        (NP (NNS others))))))))))))
    (. .)))

det(oath-3, This-2)
nsubj(demands-4, oath-3)
root(ROOT-0, demands-4)
complm(respected-9, that-5)
poss(rights-7, my-6)
nsubj(respected-9, rights-7)
nsubj(demands-13, rights-7)
cop(respected-9, be-8)
ccomp(demands-4, respected-9)
advmod(demands-13, also-12)
ccomp(demands-4, demands-13)
conj_and(respected-9, demands-13)
complm(respect-16, that-14)
nsubj(respect-16, I-15)
ccomp(demands-13, respect-16)
det(rights-19, the-17)
amod(rights-19, same-18)
dobj(respect-16, rights-19)
prep_of(rights-19, others-21)

(ROOT
  (S
    (PP (IN In)
      (NP (DT a) (JJ free) (NN society)))
    (NP (NN nothing) (RB else))
    (VP (VBZ is)
      (ADJP (JJ necessary)))
    (. .)))

det(society-4, a-2)
amod(society-4, free-3)
prep_in(necessary-8, society-4)
nsubj(necessary-8, nothing-5)
advmod(nothing-5, else-6)
cop(necessary-8, is-7)
root(ROOT-0, necessary-8)

(ROOT
  (S
    (S
      (VP
        (VP (TO To)
          (VP (VB call)
            (ADVP (RB homosexuality))
            (NP (DT a) (NN sin))))
        (, ,)
        (CC and)
        (VP (TO to)
          (VP (VB try)
            (CC and)
            (VB stop)
            (NP (PRP it))))))
    (, ,)
    (VP (VBZ violates)
      (NP (DT this) (JJ simple) (NN idea)))
    (. .)))

aux(call-2, To-1)
ccomp(violates-14, call-2)
advmod(call-2, homosexuality-3)
det(sin-5, a-4)
dobj(call-2, sin-5)
aux(try-9, to-8)
conj_and(call-2, try-9)
ccomp(violates-14, try-9)
conj_and(call-2, stop-11)
conj_and(try-9, stop-11)
dobj(try-9, it-12)
root(ROOT-0, violates-14)
det(idea-17, this-15)
amod(idea-17, simple-16)
dobj(violates-14, idea-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ pops)
      (PRT (RP up))
      (PP (IN in)
        (NP
          (NP (DT the) (NNS people))
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VB walk)
                  (PP (IN by)))
                (CC and)
                (VP (VB ignore)
                  (NP
                    (NP (CD one) (NN person) (RB physically))
                    (VP (VBG hurting)
                      (NP (DT another) (NN person)))))))))))
    (. .)))

nsubj(pops-2, It-1)
root(ROOT-0, pops-2)
prt(pops-2, up-3)
det(people-6, the-5)
prep_in(pops-2, people-6)
nsubj(walk-8, people-6)
nsubj(ignore-11, people-6)
rcmod(people-6, walk-8)
prep(walk-8, by-9)
rcmod(people-6, ignore-11)
conj_and(walk-8, ignore-11)
num(person-13, one-12)
dobj(ignore-11, person-13)
advmod(person-13, physically-14)
partmod(person-13, hurting-15)
det(person-17, another-16)
dobj(hurting-15, person-17)

(ROOT
  (NP (NNP Sid)))

root(ROOT-0, Sid-1)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP disagree))
    (. .)))

nsubj(disagree-2, I-1)
root(ROOT-0, disagree-2)

(ROOT
  (S ('' '')
    (NP (NNP Live)
      (CC and)
      (NN Let) (NNS Live) ('' ''))
    (VP (VBZ does) (RB not)
      (VP (VB preclude)
        (S
          (VP (VBG stopping)
            (NP (CD one) (NN person))
            (PP (IN from)
              (S
                (VP (VBG hurting)
                  (NP (DT another)))))))))
    (. .)))

nn(Live-5, Live-2)
conj_and(Live-2, Let-4)
nn(Live-5, Let-4)
nsubj(preclude-9, Live-5)
aux(preclude-9, does-7)
neg(preclude-9, not-8)
root(ROOT-0, preclude-9)
xcomp(preclude-9, stopping-10)
num(person-12, one-11)
dobj(stopping-10, person-12)
prepc_from(stopping-10, hurting-14)
dobj(hurting-14, another-15)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT no) (JJ moral) (NN law))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ says)
              (SBAR
                (S
                  (NP (PRP one))
                  (VP (MD must)
                    (VP (VB tolerate)
                      (NP (JJ gross) (NN immorality)))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(law-5, no-3)
amod(law-5, moral-4)
nsubj(is-2, law-5)
nsubj(says-7, law-5)
rcmod(law-5, says-7)
nsubj(tolerate-10, one-8)
aux(tolerate-10, must-9)
ccomp(says-7, tolerate-10)
amod(immorality-12, gross-11)
dobj(tolerate-10, immorality-12)

(ROOT
  (S ('' '')
    (NP (NNP Live)
      (CC and)
      (NN Let) (NNS Live) ('' ''))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ universal) (NN principle))
        (, ,) (RB not) (RB just)
        (NP (PRP$ my) (JJ personal) (NN one))))
    (. .)))

nn(Live-5, Live-2)
conj_and(Live-2, Let-4)
nn(Live-5, Let-4)
nsubj(principle-10, Live-5)
cop(principle-10, is-7)
det(principle-10, a-8)
amod(principle-10, universal-9)
root(ROOT-0, principle-10)
neg(principle-10, not-12)
advmod(principle-10, just-13)
poss(one-16, my-14)
amod(one-16, personal-15)
dep(principle-10, one-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ applies)
      (PP
        (CONJP (RB not) (RB just))
        (PP (TO to)
          (NP (PRP myself)))
        (, ,)
        (CC but)
        (PP (TO to)
          (NP (JJ other))))
      (ADVP (RB as) (RB well)))
    (. .)))

nsubj(applies-2, It-1)
root(ROOT-0, applies-2)
neg(just-4, not-3)
preconj(applies-2, just-4)
prep_to(applies-2, myself-6)
prep_to(applies-2, other-10)
conj_but(myself-6, other-10)
advmod(well-12, as-11)
mwe(well-12, as-11)
advmod(applies-2, well-12)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBP accept)
          (NP (PRP it))
          (PP (IN as)
            (NP (PRP$ my) (NN principle))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP acknowledge)
      (SBAR (IN that)
        (S
          (NP (NN EVERYONE))
          (VP (VBZ has)
            (NP
              (NP (DT the) (NN right)
                (S
                  (VP (TO to) ('' '')
                    (VP (VB Live) ('' '')))))
              (, ,)
              (CONJP (RB as) (RB well) (IN as))
              (NP (DT the) (NN responsibility)
                (S
                  (VP (TO to) ('' '')
                    (VP (VB Let)
                      (NP (NNP Live) ('' '')))))))))))
    (. .)))

advmod(accept-3, When-1)
nsubj(accept-3, I-2)
advcl(acknowledge-10, accept-3)
dobj(accept-3, it-4)
poss(principle-7, my-6)
prep_as(accept-3, principle-7)
nsubj(acknowledge-10, I-9)
root(ROOT-0, acknowledge-10)
complm(has-13, that-11)
nsubj(has-13, EVERYONE-12)
ccomp(acknowledge-10, has-13)
det(right-15, the-14)
dobj(has-13, right-15)
aux(Live-18, to-16)
infmod(right-15, Live-18)
det(responsibility-25, the-24)
dobj(has-13, responsibility-25)
conj_and(right-15, responsibility-25)
aux(Let-28, to-26)
infmod(responsibility-25, Let-28)
dobj(Let-28, Live-29)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ harms)
          (NP (DT another))
          (PP (IN without)
            (NP (NN justification))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP they))
    (VP
      (VP (VBP violate)
        (NP (DT the) (JJ social) (NN contract)))
      (CC and)
      (VP (MD may)
        (VP (VB be)
          (VP (VBN stopped\/punished)))))
    (. .)))

mark(harms-3, If-1)
nsubj(harms-3, someone-2)
advcl(violate-10, harms-3)
dobj(harms-3, another-4)
prep_without(harms-3, justification-6)
advmod(violate-10, then-8)
nsubj(violate-10, they-9)
nsubjpass(stopped\/punished-17, they-9)
root(ROOT-0, violate-10)
det(contract-13, the-11)
amod(contract-13, social-12)
dobj(violate-10, contract-13)
aux(stopped\/punished-17, may-15)
auxpass(stopped\/punished-17, be-16)
conj_and(violate-10, stopped\/punished-17)

