(ROOT
  (S
    (INTJ (UH Okay))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB pretty) (JJ sure)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBD did) (RB n't)
              (VP (VB understand)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP I))
                    (VP (VBD was)
                      (VP (VBG saying)
                        (NP (DT the) (JJ first) (NN time))))))))))))
    (. .)))

dep(sure-6, Okay-1)
nsubj(sure-6, I-3)
cop(sure-6, 'm-4)
advmod(sure-6, pretty-5)
root(ROOT-0, sure-6)
nsubj(understand-10, you-7)
aux(understand-10, did-8)
neg(understand-10, n't-9)
dep(sure-6, understand-10)
dobj(saying-14, what-11)
nsubj(saying-14, I-12)
aux(saying-14, was-13)
ccomp(understand-10, saying-14)
det(time-17, the-15)
amod(time-17, first-16)
dobj(saying-14, time-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD will)
      (VP (VB take)
        (NP (DT the) (NN blame))
        (PP (IN for)
          (NP (DT this)))
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (ADVP (RB probably))
            (VP (VBD did) (RB n't)
              (VP (VB word)
                (NP (PRP it))
                (ADVP (RB clearly))))))))
    (. .)))

nsubj(take-3, I-1)
aux(take-3, will-2)
root(ROOT-0, take-3)
det(blame-5, the-4)
dobj(take-3, blame-5)
prep_for(take-3, this-7)
mark(word-13, because-8)
nsubj(word-13, I-9)
advmod(word-13, probably-10)
aux(word-13, did-11)
neg(word-13, n't-12)
advcl(take-3, word-13)
dobj(word-13, it-14)
advmod(word-13, clearly-15)

(ROOT
  (S
    (ADVP (RB Instead))
    (, ,)
    (NP (PRP I))
    (VP (MD will)
      (VP
        (VP (VB point)
          (PRT (RP out))
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBP are)
                (NP
                  (NP (JJ many) (NN process))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP exist))))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBP are)
                        (ADJP (JJ complicated))))))))))
        (, ,)
        (CC but)
        (ADVP (RB also))
        (VP (VB have)
          (NP (JJ natural) (NNS explanations)))))
    (. .)))

advmod(point-5, Instead-1)
nsubj(point-5, I-3)
nsubj(have-21, I-3)
aux(point-5, will-4)
root(ROOT-0, point-5)
prt(point-5, out-6)
complm(are-9, that-7)
expl(are-9, there-8)
ccomp(point-5, are-9)
amod(process-11, many-10)
nsubj(are-9, process-11)
nsubj(exist-13, process-11)
rcmod(process-11, exist-13)
nsubj(complicated-17, which-15)
cop(complicated-17, are-16)
rcmod(process-11, complicated-17)
advmod(point-5, also-20)
conj_but(point-5, also-20)
conj_but(point-5, have-21)
amod(explanations-23, natural-22)
dobj(have-21, explanations-23)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN concept))
        (PP (IN of)
          (NP (NN quantum) (NNS physics))))
      (VP (VBZ is)
        (ADJP (JJ complicated))
        (, ,)
        (SBAR (IN so)
          (S
            (VP (VBZ is)
              (NP (JJ planetary) (NN formation)
                (CC and)
                (NN biology)))))))
    (: ...)
    (S
      (ADVP (RB however))
      (NP
        (NP (DT each))
        (PP (IN of)
          (NP (DT these) (NN process))))
      (VP (VBZ has)
        (NP
          (NP (DT a) (JJ natural) (NN explanation))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (VP (VB be)
                  (VP (`` ``) (VBN proven) ('' '')
                    (PP (IN by)
                      (NP (NN science)))))))))))
    (. .)))

det(concept-2, The-1)
nsubj(complicated-7, concept-2)
nn(physics-5, quantum-4)
prep_of(concept-2, physics-5)
cop(complicated-7, is-6)
root(ROOT-0, complicated-7)
mark(formation-12, so-9)
cop(formation-12, is-10)
amod(formation-12, planetary-11)
advcl(complicated-7, formation-12)
advcl(complicated-7, biology-14)
conj_and(formation-12, biology-14)
advmod(has-21, however-16)
nsubj(has-21, each-17)
det(process-20, these-19)
prep_of(each-17, process-20)
parataxis(complicated-7, has-21)
det(explanation-24, a-22)
amod(explanation-24, natural-23)
dobj(has-21, explanation-24)
nsubjpass(proven-29, explanation-24)
aux(proven-29, can-26)
auxpass(proven-29, be-27)
rcmod(explanation-24, proven-29)
agent(proven-29, science-32)

(ROOT
  (S
    (S
      (NP (PRP One))
      (VP (MD could)
        (VP (VB argue)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT all))
                (PP (IN of)
                  (NP (DT these) (NNS things))))
              (VP (VBD came)
                (PRT (RP about))
                (PP (IN by)
                  (NP (NN magic)))))))))
    (: ...)
    (CC but)
    (S
      (NP (PRP one))
      (VP (MD may)
        (ADVP (RB also))
        (VP (VB want)
          (S
            (VP (TO to)
              (VP
                (VP (VB repeat)
                  (NP (JJ fourth) (NN grade) (NN science)))
                (CC and)
                (VP (VB leave)
                  (NP (DT the) (NN thinking))
                  (PP (TO to)
                    (NP (DT the) (NNS adults))))))))))
    (. .)))

nsubj(argue-3, One-1)
aux(argue-3, could-2)
root(ROOT-0, argue-3)
complm(came-9, that-4)
nsubj(came-9, all-5)
det(things-8, these-7)
prep_of(all-5, things-8)
ccomp(argue-3, came-9)
prt(came-9, about-10)
prep_by(came-9, magic-12)
nsubj(want-18, one-15)
xsubj(repeat-20, one-15)
aux(want-18, may-16)
advmod(want-18, also-17)
conj_but(argue-3, want-18)
aux(repeat-20, to-19)
xcomp(want-18, repeat-20)
amod(science-23, fourth-21)
nn(science-23, grade-22)
dobj(repeat-20, science-23)
xcomp(want-18, leave-25)
conj_and(repeat-20, leave-25)
det(thinking-27, the-26)
dobj(leave-25, thinking-27)
det(adults-30, the-29)
prep_to(leave-25, adults-30)

(ROOT
  (NP
    (NP (NNP Third) (NNP Paragraph))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBD talked)
        (PP (IN about)
          (NP (JJ homosexual) (NNS siblings)))
        (S
          (VP (VBG helping)
            (S
              (NP (PRP$ their) (NNS brothers))
              (VP (VB reproduce)))))))
    (. .)))

nn(Paragraph-2, Third-1)
root(ROOT-0, Paragraph-2)
nsubj(talked-5, I-4)
dep(Paragraph-2, talked-5)
amod(siblings-8, homosexual-7)
prep_about(talked-5, siblings-8)
xcomp(talked-5, helping-9)
poss(brothers-11, their-10)
nsubj(reproduce-12, brothers-11)
ccomp(helping-9, reproduce-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD got)
      (NP (DT this))
      (PP (IN from)
        (NP
          (NP (DT the) (NN video))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBD posted)))))))
    (. .)))

nsubj(got-2, I-1)
root(ROOT-0, got-2)
dobj(got-2, this-3)
det(video-6, the-5)
prep_from(got-2, video-6)
dobj(posted-8, video-6)
nsubj(posted-8, I-7)
rcmod(video-6, posted-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN been)
          (ADJP (JJ able)
            (S
              (VP (TO to)
                (VP (VB find)
                  (NP
                    (NP (DT no) (JJ other) (NN source))
                    (PP (IN for)
                      (NP (PRP it)))))))))))
    (: ...)
    (S (IN so)
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB claim)
          (S
            (NP (PRP it))
            (VP (TO to)
              (VP (VB be)
                (NP (NN fact))))))))
    (. .)))

nsubj(able-4, I-1)
aux(able-4, have-2)
cop(able-4, been-3)
root(ROOT-0, able-4)
aux(find-6, to-5)
xcomp(able-4, find-6)
det(source-9, no-7)
amod(source-9, other-8)
dobj(find-6, source-9)
prep_for(source-9, it-11)
dep(claim-17, so-13)
nsubj(claim-17, I-14)
aux(claim-17, will-15)
neg(claim-17, not-16)
parataxis(able-4, claim-17)
nsubj(fact-21, it-18)
aux(fact-21, to-19)
cop(fact-21, be-20)
xcomp(claim-17, fact-21)

(ROOT
  (S
    (ADVP (RB Nevertheless))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP you))
        (VP (VBD said))))
    (, ,)
    (NP (NN religion))
    (VP (VBD helped)
      (SBAR (RB not)
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBD increased)
              (NP (NN reproduction)))))
        (, ,)
        (CC but)
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADJP (JJ beneficial)
                (PP (TO to)
                  (NP (DT the) (NNS societies) (NN survival))))
              (PRN (-LRB- -LRB-)
                (S
                  (NP (JJ i.e.) (NNS people))
                  (VP (VBD did) (RB n't)
                    (VP (VB kill)
                      (NP (DT each) (JJ other)))))
                (-RRB- -RRB-)))))))
    (. .)))

advmod(helped-8, Nevertheless-1)
mark(said-5, as-3)
nsubj(said-5, you-4)
advcl(helped-8, said-5)
nsubj(helped-8, religion-7)
root(ROOT-0, helped-8)
dep(increased-12, not-9)
mark(increased-12, because-10)
nsubj(increased-12, it-11)
dep(helped-8, increased-12)
dobj(increased-12, reproduction-13)
mark(beneficial-19, because-16)
nsubj(beneficial-19, it-17)
cop(beneficial-19, was-18)
dep(helped-8, beneficial-19)
conj_but(increased-12, beneficial-19)
det(survival-23, the-21)
nn(survival-23, societies-22)
prep_to(beneficial-19, survival-23)
amod(people-26, i.e.-25)
nsubj(kill-29, people-26)
aux(kill-29, did-27)
neg(kill-29, n't-28)
parataxis(beneficial-19, kill-29)
det(other-31, each-30)
dobj(kill-29, other-31)

(ROOT
  (SQ (MD Could) (RB n't)
    (NP (NN homosexuality))
    (VP (VB have)
      (NP (DT the) (JJ same) (NN effect)))
    (. ?)))

aux(have-4, Could-1)
neg(have-4, n't-2)
nsubj(have-4, homosexuality-3)
root(ROOT-0, have-4)
det(effect-7, the-5)
amod(effect-7, same-6)
dobj(have-4, effect-7)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP
          (NP (DT a) (NN percentage))
          (PP (IN of)
            (NP
              (NP (DT the) (NN population))
              (VP (VBG being)
                (ADJP (JJ homosexual))))))
        (VP (VBZ bonded)
          (NP
            (NP (DT the) (NN society))
            (PP (IN in)
              (NP (DT some) (NN way)))))))
    (, ,) (MD would) (RB n't)
    (NP (DT this))
    (VP (VB be)
      (ADJP (JJ beneficial))
      (ADVP (RB as) (RB well)))
    (. ?)))

mark(bonded-9, If-1)
det(percentage-3, a-2)
nsubj(bonded-9, percentage-3)
det(population-6, the-5)
prep_of(percentage-3, population-6)
cop(homosexual-8, being-7)
partmod(population-6, homosexual-8)
advcl(beneficial-20, bonded-9)
det(society-11, the-10)
dobj(bonded-9, society-11)
det(way-14, some-13)
prep_in(society-11, way-14)
aux(beneficial-20, would-16)
neg(beneficial-20, n't-17)
nsubj(beneficial-20, this-18)
cop(beneficial-20, be-19)
root(ROOT-0, beneficial-20)
advmod(well-22, as-21)
mwe(well-22, as-21)
advmod(beneficial-20, well-22)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ has)
      (VP (VBN been)
        (VP (VBN seen)
          (PP (IN in)
            (NP (NN animal) (NNS populations))))))
    (: ...)))

nsubjpass(seen-4, This-1)
aux(seen-4, has-2)
auxpass(seen-4, been-3)
root(ROOT-0, seen-4)
nn(populations-7, animal-6)
prep_in(seen-4, populations-7)

(ROOT
  (S
    (VP (VB Allow)
      (S
        (NP (PRP me))
        (VP (TO to)
          (VP (VB try)
            (ADVP (RB again))))))
    (. .)))

root(ROOT-0, Allow-1)
nsubj(try-4, me-2)
aux(try-4, to-3)
xcomp(Allow-1, try-4)
advmod(try-4, again-5)

(ROOT
  (FRAG
    (ADJP (IN although) (RB obviously) (RB not))
    (ADJP (FW humans) (. .))))

dep(not-3, although-1)
advmod(not-3, obviously-2)
root(ROOT-0, not-3)
dep(not-3, humans-4)

(ROOT
  (S
    (PP (IN As)
      (ADVP (RB far)
        (PP (IN as)
          (NP (PRP$ your) (NN argument)))))
    (NP (DT that) (NN homosexuality))
    (VP
      (VP (VBZ causes)
        (NP
          (NP (DT a) (NN break))
          (PP (IN in)
            (NP (DT the) (JJ genetic) (NN chain)))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB therefore))
        (MD would) (RB n't)
        (VP (VB be)
          (VP (VBN passed)
            (PRT (RP on))))))
    (: ...)
    (S
      (INTJ (VB please))
      (VP (VB check)
        (PRT (RP out))
        (NP (DT these) (JJ lnks)
          (QP (CD 1)
            (CC and)
            (CD 2)))))
    (. .)))

prep(causes-8, As-1)
pcomp(As-1, far-2)
poss(argument-5, your-4)
prep_as(far-2, argument-5)
det(homosexuality-7, that-6)
nsubj(causes-8, homosexuality-7)
nsubjpass(passed-21, homosexuality-7)
root(ROOT-0, causes-8)
det(break-10, a-9)
dobj(causes-8, break-10)
det(chain-14, the-12)
amod(chain-14, genetic-13)
prep_in(break-10, chain-14)
advmod(passed-21, therefore-17)
aux(passed-21, would-18)
neg(passed-21, n't-19)
auxpass(passed-21, be-20)
conj_and(causes-8, passed-21)
prt(passed-21, on-22)
dep(check-25, please-24)
parataxis(causes-8, check-25)
prt(check-25, out-26)
det(1-29, these-27)
amod(1-29, lnks-28)
dobj(check-25, 1-29)
dobj(check-25, 2-31)
conj_and(1-29, 2-31)

(ROOT
  (S
    (NP (PRP They))
    (DT both)
    (VP (VBP talk)
      (PP (IN about)
        (SBAR
          (WHADVP (WRB how))
          (S
            (SBAR
              (X
                (X (DT the) (JJR more))
                (NP (JJR older) (NNS brothers)))
              (S
                (NP (PRP you))
                (VP (VBP have))))
            (, ,)
            (X (DT the)
              (ADJP (RBR more) (JJ likely)))
            (NP (PRP it))
            (VP (VBZ is)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP 're)
                    (NP (DT a) (JJ homosexual))))))))))
    (. .)))

nsubj(talk-3, They-1)
dep(talk-3, both-2)
root(ROOT-0, talk-3)
advmod(is-17, how-5)
det(more-7, the-6)
dep(brothers-9, more-7)
amod(brothers-9, older-8)
dep(have-11, brothers-9)
nsubj(have-11, you-10)
dep(is-17, have-11)
det(likely-15, the-13)
advmod(likely-15, more-14)
dep(is-17, likely-15)
nsubj(is-17, it-16)
prepc_about(talk-3, is-17)
nsubj(homosexual-21, you-18)
cop(homosexual-21, 're-19)
det(homosexual-21, a-20)
ccomp(is-17, homosexual-21)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NNS genes))
            (PP (IN of)
              (NP (NNS homosexuals))))
          (VP (VBP are)
            (ADVP (RB still))
            (ADJP (JJ likely)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN passed)
                      (PRT (RP on))
                      (PP (IN through)
                        (NP (PRP$ their) (JJR older) (NNS siblings))))))))
            (, ,)
            (SBAR (RB even) (IN though)
              (FRAG (RB not)
                (ADVP (RB directly))))))))
    (. .)))

nsubj(means-2, This-1)
root(ROOT-0, means-2)
complm(likely-10, that-3)
det(genes-5, the-4)
nsubj(likely-10, genes-5)
prep_of(genes-5, homosexuals-7)
cop(likely-10, are-8)
advmod(likely-10, still-9)
ccomp(means-2, likely-10)
aux(passed-13, to-11)
auxpass(passed-13, be-12)
xcomp(likely-10, passed-13)
prt(passed-13, on-14)
poss(siblings-18, their-16)
amod(siblings-18, older-17)
prep_through(passed-13, siblings-18)
advmod(not-22, even-20)
dep(not-22, though-21)
dep(likely-10, not-22)
dep(not-22, directly-23)

(ROOT
  (S
    (ADVP (RB Finally))
    (NP (PRP we))
    (VP (VBP arrive)
      (PP (IN at)
        (NP
          (NP (PRP$ your)
            (ADJP (RBS most) (JJ offensive))
            (NN argument))
          (, ,)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP you))
              (VP (VBP call)
                (S
                  (NP (NNS homosexuals))
                  (`` ``)
                  (NP
                    (NP (NNS freaks))
                    (PP (IN of)
                      (NP (NN nature))))
                  ('' ''))))))))
    (. .)))

advmod(arrive-3, Finally-1)
nsubj(arrive-3, we-2)
root(ROOT-0, arrive-3)
poss(argument-8, your-5)
advmod(offensive-7, most-6)
amod(argument-8, offensive-7)
prep_at(arrive-3, argument-8)
advmod(call-12, where-10)
nsubj(call-12, you-11)
rcmod(argument-8, call-12)
dep(freaks-15, homosexuals-13)
dep(call-12, freaks-15)
prep_of(freaks-15, nature-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB rage)
          (NP (NN way))
          (PP (TO to)
            (ADJP (JJ hard)))
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD tried)
                (S
                  (VP (TO to)
                    (VP (VB respond)
                      (PP (TO to)
                        (NP (DT this) (NN claim) (PRP myself))))))))))))
    (, ,)
    (CC so)
    (S
      (INTJ (VB please))
      (VP (VB check)
        (PRT (RP out))
        (NP
          (NP (DT this) (NN site))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ addresses)
                (NP (PRP$ your) (NN argument))
                (SBAR (IN that)
                  (S
                    (NP (NN homosexuality))
                    (ADVP (RB somehow))
                    (VP (VBZ is)
                      (NP (DT a) (NN way)
                        (S
                          (VP (TO to)
                            (VP (VB stop)
                              (NP
                                (NP (`` ``) (JJ bad) ('' '') (NNS genes))
                                (PP (IN from)
                                  (S
                                    (VP (VBG passing)
                                      (PRT (RP on)))))))))))))))))))
    (. .)))

nsubj(rage-3, I-1)
nsubj(check-19, I-1)
aux(rage-3, would-2)
root(ROOT-0, rage-3)
dobj(rage-3, way-4)
prep_to(rage-3, hard-6)
mark(tried-9, if-7)
nsubj(tried-9, I-8)
xsubj(respond-11, I-8)
advcl(rage-3, tried-9)
aux(respond-11, to-10)
xcomp(tried-9, respond-11)
det(claim-14, this-13)
prep_to(respond-11, claim-14)
dep(claim-14, myself-15)
dep(check-19, please-18)
conj_so(rage-3, check-19)
prt(check-19, out-20)
det(site-22, this-21)
dobj(check-19, site-22)
nsubj(addresses-24, site-22)
rcmod(site-22, addresses-24)
poss(argument-26, your-25)
dobj(addresses-24, argument-26)
complm(way-32, that-27)
nsubj(way-32, homosexuality-28)
advmod(way-32, somehow-29)
cop(way-32, is-30)
det(way-32, a-31)
ccomp(addresses-24, way-32)
aux(stop-34, to-33)
infmod(way-32, stop-34)
amod(genes-38, bad-36)
dobj(stop-34, genes-38)
prepc_from(genes-38, passing-40)
prt(passing-40, on-41)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (PRN (-LRB- -LRB-)
        (CC and)
        (NP
          (NP (JJ many) (NNS species))
          (PP (IN of)
            (NP (NNS animals))))
        (-RRB- -RRB-)))
    (VP (VBP live)
      (PP (IN in)
        (NP (NNS groups))))
    (. .)))

nsubj(live-9, People-1)
dep(species-5, and-3)
amod(species-5, many-4)
dep(People-1, species-5)
prep_of(species-5, animals-7)
root(ROOT-0, live-9)
prep_in(live-9, groups-11)

(ROOT
  (S
    (NP
      (NP (NNS People))
      (SBAR (WP$ whose)
        (S
          (NP (NNS groups))
          (VP (VBP survive)))))
    (VP (VBP are)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB pass)
              (PP (IN on)
                (NP (PRP$ their) (NNS genes))))))))
    (. .)))

dobj(survive-4, People-1)
nsubj(able-6, People-1)
dep(survive-4, whose-2)
nsubj(survive-4, groups-3)
dep(People-1, survive-4)
cop(able-6, are-5)
root(ROOT-0, able-6)
aux(pass-8, to-7)
xcomp(able-6, pass-8)
poss(genes-11, their-10)
prep_on(pass-8, genes-11)

(ROOT
  (S
    (NP
      (NP (DT Those) (JJ genetic) (NNS traits))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBP help)
            (NP (DT the) (NN society))
            (PP (IN as)
              (NP (DT a) (NN whole)
                (S
                  (VP (TO to)
                    (VP (VB survive))))))))))
    (, ,)
    (VP (VBP are)
      (VP (VBN passed)
        (PRT (RP along))))
    (. .)))

det(traits-3, Those-1)
amod(traits-3, genetic-2)
nsubj(help-5, traits-3)
nsubjpass(passed-15, traits-3)
rcmod(traits-3, help-5)
det(society-7, the-6)
dobj(help-5, society-7)
det(whole-10, a-9)
prep_as(help-5, whole-10)
aux(survive-12, to-11)
infmod(whole-10, survive-12)
auxpass(passed-15, are-14)
root(ROOT-0, passed-15)
prt(passed-15, along-16)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (SBAR (IN if)
      (S
        (S
          (NP (DT some) (NN homosexuality))
          (VP (VBZ helps)
            (NP (DT a) (NN group)
              (S
                (VP (TO to)
                  (VP (VB survive)))))))
        (CC and)
        (S
          (ADVP (RB homosexuality))
          (VP (VBZ is)
            (ADVP (RB somehow))
            (NP (JJ genetic))
            (, ,)
            (ADVP (RB then)))
          (NP
            (NP (DT those) (NNS groups))
            (PP (IN with)
              (NP
                (NP (NNS genes))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP cause)
                      (NP
                        (NP (DT a) (JJ certain) (NN percentage))
                        (PP (IN of)
                          (NP (DT the) (NN population)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (ADJP (JJ homosexual)))))))))))))))))
    (, ,)
    (VP (MD will)
      (VP (VB survive)))
    (. .)))

advmod(survive-35, Therefore-1)
mark(helps-6, if-3)
det(homosexuality-5, some-4)
nsubj(helps-6, homosexuality-5)
nsubj(genetic-15, homosexuality-5)
dep(survive-35, helps-6)
det(group-8, a-7)
dobj(helps-6, group-8)
aux(survive-10, to-9)
infmod(group-8, survive-10)
advmod(genetic-15, homosexuality-12)
cop(genetic-15, is-13)
advmod(genetic-15, somehow-14)
conj_and(helps-6, genetic-15)
dep(survive-35, genetic-15)
advmod(genetic-15, then-17)
det(groups-19, those-18)
dep(genetic-15, groups-19)
prep_with(groups-19, genes-21)
nsubj(cause-23, genes-21)
rcmod(genes-21, cause-23)
det(percentage-26, a-24)
amod(percentage-26, certain-25)
dobj(cause-23, percentage-26)
det(population-29, the-28)
prep_of(percentage-26, population-29)
aux(homosexual-32, to-30)
cop(homosexual-32, be-31)
infmod(population-29, homosexual-32)
aux(survive-35, will-34)
root(ROOT-0, survive-35)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN way) (NN nature)))
    (VP (VBZ does)
      (VP (`` ``) (VB see) ('' '')))
    (NP
      (NP (DT the) (NN effect))
      (PP (IN of)
        (NP
          (NP (CD one) (NN person))
          (PP (IN on)
            (NP (DT another))))))
    (. .)))

det(nature-4, this-2)
nn(nature-4, way-3)
prep_in(see-7, nature-4)
aux(see-7, does-5)
root(ROOT-0, see-7)
det(effect-10, the-9)
dep(see-7, effect-10)
num(person-13, one-12)
prep_of(effect-10, person-13)
prep_on(person-13, another-15)

(ROOT
  (S
    (PP (IN In)
      (NP (PRP$ your) (JJ second) (NN paragraph)))
    (NP (PRP you))
    (VP (VBP argue)
      (SBAR (IN that)
        (S
          (NP
            (NP (JJ complex) (NN process))
            (, ,)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD can)
                  (ADVP (RB only))
                  (VP (VB be)
                    (VP (VBN understood)
                      (PP (IN by)
                        (NP (NN intelligence))))))))
            (, ,))
          (VP (VBP require)
            (NP (DT an) (JJ intelligent) (NN designer))))))
    (. .)))

poss(paragraph-4, your-2)
amod(paragraph-4, second-3)
prep_in(argue-6, paragraph-4)
nsubj(argue-6, you-5)
root(ROOT-0, argue-6)
complm(require-19, that-7)
amod(process-9, complex-8)
nsubjpass(understood-15, process-9)
nsubj(require-19, process-9)
aux(understood-15, can-12)
advmod(understood-15, only-13)
auxpass(understood-15, be-14)
rcmod(process-9, understood-15)
agent(understood-15, intelligence-17)
ccomp(argue-6, require-19)
det(designer-22, an-20)
amod(designer-22, intelligent-21)
dobj(require-19, designer-22)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VB respect)
        (NP (PRP you))
        (PP (IN as)
          (NP (DT a) (NN debater)))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP (MD will) (RB not)
        (VP (VB call)
          (NP
            (NP (PRP$ your) (NN logic))
            (VP (VBG fucking)
              (ADJP (JJ retarded)))))))
    (. .)))

nsubj(respect-2, I-1)
root(ROOT-0, respect-2)
dobj(respect-2, you-3)
det(debater-6, a-5)
prep_as(respect-2, debater-6)
dep(respect-2, so-8)
nsubj(call-12, I-9)
aux(call-12, will-10)
neg(call-12, not-11)
ccomp(respect-2, call-12)
poss(logic-14, your-13)
dobj(call-12, logic-14)
partmod(logic-14, fucking-15)
acomp(fucking-15, retarded-16)

