(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (NNS people))
        (VP (VBP say)
          (SBAR (IN that)
            (S (`` ``)
              (NP (NNS gays))
              ('' '')
              (VP (MD will)
                (VP (VB be) (`` ``)
                  (VP (VBG living)
                    (PP (IN among)
                      (NP (PRP us) ('' '')))))))))))
    (NP (PRP it))
    (VP (VBZ sounds)
      (SBAR (IN like)
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (VP (VBG referring)
              (PP (TO to)
                (NP
                  (NP (NNS aliens))
                  (CC or)
                  (NP (DT some) (JJ unknown) (NN life) (NN form)))))))))
    (. .)))

advmod(say-3, When-1)
nsubj(say-3, people-2)
advcl(sounds-16, say-3)
complm(living-11, that-4)
nsubj(living-11, gays-6)
aux(living-11, will-8)
aux(living-11, be-9)
ccomp(say-3, living-11)
prep_among(living-11, us-13)
nsubj(sounds-16, it-15)
root(ROOT-0, sounds-16)
mark(referring-20, like-17)
nsubj(referring-20, you-18)
aux(referring-20, 're-19)
advcl(sounds-16, referring-20)
prep_to(referring-20, aliens-22)
det(form-27, some-24)
amod(form-27, unknown-25)
nn(form-27, life-26)
prep_to(referring-20, form-27)
conj_or(aliens-22, form-27)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NN fact))
      (PP (IN of)
        (NP (DT the) (NN matter))))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBP are)
            (NP (NNS people))))))
    (. .)))

cc(is-7, But-1)
det(fact-3, the-2)
nsubj(is-7, fact-3)
det(matter-6, the-5)
prep_of(fact-3, matter-6)
root(ROOT-0, is-7)
nsubj(people-11, they-9)
cop(people-11, are-10)
ccomp(is-7, people-11)

(ROOT
  (S
    (NP (JJ Gay) (NNS people))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB be)
        (PP (IN among)
          (NP (PRP us)))))
    (. .)))

amod(people-2, Gay-1)
nsubj(be-5, people-2)
aux(be-5, will-3)
advmod(be-5, always-4)
root(ROOT-0, be-5)
prep_among(be-5, us-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP re)
      (S (RB not)
        (VP (VBG going)
          (ADVP (RB anywhere)))))
    (. .)))

nsubj(re-2, They-1)
root(ROOT-0, re-2)
neg(going-4, not-3)
xcomp(re-2, going-4)
advmod(going-4, anywhere-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ s) (RB not)
      (SBAR (IN like)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (NP
              (NP (DT a) (JJ separate) (NN species))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD can)
                    (VP (VB be)
                      (ADJP (JJ extinct)))))))))))
    (. .)))

nsubj(s-2, It-1)
root(ROOT-0, s-2)
neg(s-2, not-3)
mark(species-9, like-4)
nsubj(species-9, they-5)
cop(species-9, are-6)
det(species-9, a-7)
amod(species-9, separate-8)
advcl(s-2, species-9)
nsubj(extinct-13, species-9)
aux(extinct-13, can-11)
cop(extinct-13, be-12)
rcmod(species-9, extinct-13)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP say)
      (VP
        (VP (VB stop)
          (NP (NN fighting)))
        (CC and)
        (VP (VB let)
          (S
            (NP (PRP them))
            (VP (VB live))))))
    (. .)))

nsubj(say-2, I-1)
root(ROOT-0, say-2)
dep(say-2, stop-3)
dobj(stop-3, fighting-4)
dep(say-2, let-6)
conj_and(stop-3, let-6)
nsubj(live-8, them-7)
ccomp(let-6, live-8)

(ROOT
  (S
    (S
      (VP
        (VP (VBG Living))
        (, ,)
        (VP (VBG breathing))))
    (, ,)
    (NP (JJ human) (NNS beings))
    (ADVP (RB just))
    (VP (VBP like)
      (S
        (NP (PRP you)
          (CC and)
          (PRP me))))
    (. .)))

ccomp(like-8, Living-1)
dep(Living-1, breathing-3)
amod(beings-6, human-5)
nsubj(like-8, beings-6)
advmod(like-8, just-7)
root(ROOT-0, like-8)
dep(like-8, you-9)
dep(like-8, me-11)
conj_and(you-9, me-11)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD will)
      (VP (VB be)
        (VP (VBG living)
          (PP (IN among)
            (NP (PRP us)))
          (SBAR (IN whether)
            (CC or)
            (RB not)
            (S
              (NP (JJ gay) (NN marriage))
              (VP (VBZ is)
                (VP (VBN legalized))))))))
    (. .)))

nsubj(living-4, They-1)
aux(living-4, will-2)
aux(living-4, be-3)
root(ROOT-0, living-4)
prep_among(living-4, us-6)
complm(legalized-13, whether-7)
ccomp(living-4, not-9)
conj_or(legalized-13, not-9)
amod(marriage-11, gay-10)
nsubjpass(legalized-13, marriage-11)
auxpass(legalized-13, is-12)
ccomp(living-4, legalized-13)

(ROOT
  (S
    (NP (JJ Gay) (NNS couples))
    (VP (VBP are)
      (ADVP (DT no) (RBR more))
      (VP (VBG playing)
        (NP (NN house))
        (PP (IN than)
          (NP
            (NP (NNS kids))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VB marry)
                  (ADJP (JJ young)))))))))
    (. .)))

amod(couples-2, Gay-1)
nsubj(playing-6, couples-2)
aux(playing-6, are-3)
dep(more-5, no-4)
advmod(playing-6, more-5)
root(ROOT-0, playing-6)
dobj(playing-6, house-7)
prep_than(playing-6, kids-9)
nsubj(marry-11, kids-9)
rcmod(kids-9, marry-11)
acomp(marry-11, young-12)

(ROOT
  (S
    (NP (DT A) (NN man))
    (VP (MD can)
      (VP (VB fall)
        (PP (IN in)
          (NP
            (NP (NN love))
            (PP (IN with)
              (NP (DT a) (NN man)))))
        (SBAR (RB just) (IN like)
          (S
            (NP (DT a) (NN man))
            (VP (MD can)
              (VP (VB fall)
                (PP (IN in)
                  (NP (NN love)))
                (PP (IN with)
                  (NP (DT a) (NN woman)))))))))
    (. .)))

det(man-2, A-1)
nsubj(fall-4, man-2)
aux(fall-4, can-3)
root(ROOT-0, fall-4)
prep_in(fall-4, love-6)
det(man-9, a-8)
prep_with(love-6, man-9)
advmod(fall-15, just-10)
dep(fall-15, like-11)
det(man-13, a-12)
nsubj(fall-15, man-13)
aux(fall-15, can-14)
ccomp(fall-4, fall-15)
prep_in(fall-15, love-17)
det(woman-20, a-19)
prep_with(fall-15, woman-20)

(ROOT
  (SBARQ (CC And)
    (WHNP (WP who))
    (SQ
      (VP (VBZ says)
        (SBAR
          (S
            (NP
              (NP (NNS marriages))
              (PP (IN between)
                (NP (DT a) (JJ gay) (NN couple))))
            (VP (VBD won)
              (NP (NN t) (JJ last)))))))
    (. ?)))

cc(says-3, And-1)
nsubj(says-3, who-2)
root(ROOT-0, says-3)
nsubj(won-9, marriages-4)
det(couple-8, a-6)
amod(couple-8, gay-7)
prep_between(marriages-4, couple-8)
ccomp(says-3, won-9)
dobj(won-9, t-10)
amod(t-10, last-11)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (NNS days)))
    (, ,)
    (NP (JJ opposite-sex) (JJ married) (NNS couples))
    (VP (VBP are)
      (VP (VBG getting)
        (NP (NNS divorces))
        (ADVP (RB left)
          (CC and)
          (RB right))
        (, ,)
        (FRAG
          (X (WP what))
          (PP (IN about)
            (NP (PRP$ their) (NNS children))))))
    (. ?)))

advmod(days-2, Now-1)
ccomp(getting-8, days-2)
amod(couples-6, opposite-sex-4)
amod(couples-6, married-5)
nsubj(getting-8, couples-6)
aux(getting-8, are-7)
root(ROOT-0, getting-8)
dobj(getting-8, divorces-9)
advmod(getting-8, left-10)
advmod(getting-8, right-12)
conj_and(left-10, right-12)
dep(getting-8, what-14)
dep(what-14, about-15)
poss(children-17, their-16)
pobj(about-15, children-17)

(ROOT
  (S
    (NP
      (NP (NNP Should))
      (VP (VBG getting)))
    (VP (VBD divorced)
      (VP (VB be)
        (ADJP (JJ illegal)
          (PP (RB because) (IN of)
            (NP (DT that) (NN reason))))
        (ADVP (RB too))))
    (. ?)))

nsubj(divorced-3, Should-1)
partmod(Should-1, getting-2)
root(ROOT-0, divorced-3)
cop(illegal-5, be-4)
dep(divorced-3, illegal-5)
det(reason-9, that-8)
prep_because_of(illegal-5, reason-9)
advmod(illegal-5, too-10)

(ROOT
  (S
    (NP (JJ Other) (NNS people))
    (VP (VBP are)
      (ADJP (JJ free)
        (S
          (VP (TO to)
            (VP (VB live)
              (NP (PRP$ their) (NNS lives))
              (ADVP (RB happily))
              (PP (IN without)
                (NP
                  (NP (DT the) (JJ whole) (NN world))
                  (VP (VBG scrutinizing)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (NP (PRP they))
                        (VP (VBP fall)
                          (PP (IN in)
                            (NP (NN love)))
                          (PP (IN with)))))))))))))
    (. .)))

amod(people-2, Other-1)
nsubj(free-4, people-2)
cop(free-4, are-3)
root(ROOT-0, free-4)
aux(live-6, to-5)
xcomp(free-4, live-6)
poss(lives-8, their-7)
dobj(live-6, lives-8)
advmod(live-6, happily-9)
det(world-13, the-11)
amod(world-13, whole-12)
prep_without(live-6, world-13)
partmod(world-13, scrutinizing-14)
dep(fall-17, who-15)
nsubj(fall-17, they-16)
ccomp(scrutinizing-14, fall-17)
prep_in(fall-17, love-19)
prep(fall-17, with-20)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP they))
      (VP (VB get)
        (S
          (VP (TO to)
            (VP (VB dictate)
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP
                    (NP (DT those))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBP are)
                          (ADJP (JJ gay))))))
                  (VP (VBP get)
                    (S
                      (VP (TO to)
                        (VP (VB live))))))))))))
    (. ?)))

advmod(get-4, Why-1)
aux(get-4, should-2)
nsubj(get-4, they-3)
xsubj(dictate-6, they-3)
root(ROOT-0, get-4)
aux(dictate-6, to-5)
xcomp(get-4, dictate-6)
advmod(get-12, how-7)
nsubj(gay-11, those-8)
nsubj(get-12, those-8)
xsubj(live-14, those-8)
cop(gay-11, are-10)
rcmod(those-8, gay-11)
ccomp(dictate-6, get-12)
aux(live-14, to-13)
xcomp(get-12, live-14)

