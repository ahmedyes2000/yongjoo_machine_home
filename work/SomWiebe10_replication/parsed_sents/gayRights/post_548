(ROOT
  (FRAG
    (ADJP (DT no)
      (ADJP (JJ apology)
        (PP (TO to)
          (NP (PRP you))))
      (, ,)
      (ADJP (JJ sorry)))
    (. .)))

dep(apology-2, no-1)
root(ROOT-0, apology-2)
prep_to(apology-2, you-4)
dep(apology-2, sorry-6)

(ROOT
  (S
    (S
      (VP (TO to)
        (VP
          (ADVP (RB even))
          (VB suggest)
          (SBAR
            (S
              (NP (EX there))
              (VP (VBZ 's)
                (NP
                  (NP (DT a) (JJ gay) (`` ``) (NN lifestyle) ('' ''))
                  (SBAR
                    (S
                      (VP (VBZ does)))))))))))
    (VP (VBP show)
      (SBAR
        (WHADVP (WRB how)
          (ADJP (JJ naive)))
        (S
          (NP (PRP you))
          (VP (VBP are)))))
    (. .)))

aux(suggest-3, to-1)
advmod(suggest-3, even-2)
csubj(show-12, suggest-3)
expl('s-5, there-4)
ccomp(suggest-3, 's-5)
det(lifestyle-9, a-6)
amod(lifestyle-9, gay-7)
nsubj('s-5, lifestyle-9)
rcmod(lifestyle-9, does-11)
root(ROOT-0, show-12)
advmod(are-16, how-13)
dep(how-13, naive-14)
nsubj(are-16, you-15)
ccomp(show-12, are-16)

(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD would)
          (VP (VB have)
            (VP (VBN phrased)
              (S
                (NP (PRP it))
                (VP (VBG gay)
                  (NP (`` ``) (NN orientation) ('' ''))
                  (ADVP (RB then)))))))))
    (NP (PRP you))
    (VP (MD 'd)
      (VP (VB be)
        (ADJP (JJ correct))))
    (. .)))

mark(phrased-5, if-1)
nsubj(phrased-5, you-2)
aux(phrased-5, would-3)
aux(phrased-5, have-4)
advcl(correct-15, phrased-5)
nsubj(gay-7, it-6)
dep(phrased-5, gay-7)
dobj(gay-7, orientation-9)
advmod(gay-7, then-11)
nsubj(correct-15, you-12)
aux(correct-15, 'd-13)
cop(correct-15, be-14)
root(ROOT-0, correct-15)

(ROOT
  (S
    (PP (IN by)
      (S
        (VP (VBG using)
          (NP (`` ``) (NN lifestyle) ('' '')))))
    (NP (PRP you))
    (VP (VBP 're)
      (VP (VBG assuming)
        (S
          (NP (NNS people))
          (ADJP (JJ CHOOSE)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ gay)))))))))
    (. .)))

prepc_by(assuming-8, using-2)
dobj(using-2, lifestyle-4)
nsubj(assuming-8, you-6)
aux(assuming-8, 're-7)
root(ROOT-0, assuming-8)
nsubj(CHOOSE-10, people-9)
xcomp(assuming-8, CHOOSE-10)
aux(gay-13, to-11)
cop(gay-13, be-12)
xcomp(CHOOSE-10, gay-13)

(ROOT
  (S
    (NP
      (NP (DT No) (JJ gay) (NN person))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP know)))))
    (VP (VBZ feels)
      (SBAR
        (S
          (NP (PRP they))
          (VP (VBD had)
            (NP
              (NP (DT any) (NN choice))
              (PP (IN in)
                (NP (DT the) (NN matter))))))))
    (. .)))

det(person-3, No-1)
amod(person-3, gay-2)
dobj(know-5, person-3)
nsubj(feels-6, person-3)
nsubj(know-5, I-4)
rcmod(person-3, know-5)
root(ROOT-0, feels-6)
nsubj(had-8, they-7)
ccomp(feels-6, had-8)
det(choice-10, any-9)
dobj(had-8, choice-10)
det(matter-13, the-12)
prep_in(choice-10, matter-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB apologize)
            (PP (TO to)
              (NP (DT every) (JJ gay) (NN person)))
            (PP (IN for)
              (S
                (VP (VBG making)
                  (NP (PDT such) (DT a) (JJ false) (NN assumption)))))))))
    (. .)))

nsubj(need-2, You-1)
xsubj(apologize-4, You-1)
root(ROOT-0, need-2)
aux(apologize-4, to-3)
xcomp(need-2, apologize-4)
det(person-8, every-6)
amod(person-8, gay-7)
prep_to(apologize-4, person-8)
prepc_for(apologize-4, making-10)
predet(assumption-14, such-11)
det(assumption-14, a-12)
amod(assumption-14, false-13)
dobj(making-10, assumption-14)

