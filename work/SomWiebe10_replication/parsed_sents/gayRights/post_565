(ROOT
  (SQ (VBP Are)
    (NP (NNS people))
    (VP (VBN born)
      (NP (JJ gay)))
    (. ?)))

auxpass(born-3, Are-1)
nsubjpass(born-3, people-2)
root(ROOT-0, born-3)
dobj(born-3, gay-4)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would)
      (NP
        (NP (NN anyone))
        (PP (IN in)
          (NP (PRP$ their) (JJ right) (NN mind))))
      (VP (VB get)
        (PP (IN in)
          (NP
            (NP (DT a) (JJ detailed) (NN argument))
            (PP (IN over)
              (NP
                (NP (NNS intricacies))
                (PP (IN of)
                  (NP (JJ genetic) (NN science)))))))
        (PP (IN with)
          (NP
            (NP (DT a) (NN group))
            (PP (IN of)
              (NP
                (NP (NNS people))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP are)
                      (ADVP (RB still))
                      (VP
                        (ADVP (RB ideologically))
                        (VBN conflicted)
                        (PP (IN about)
                          (NP
                            (NP (DT the) (JJ basic) (NNS facts))
                            (PP (IN of)
                              (NP (NN evolution)))))))))))))))
    (. ?)))

advmod(get-8, Why-1)
aux(get-8, would-2)
nsubj(get-8, anyone-3)
poss(mind-7, their-5)
amod(mind-7, right-6)
prep_in(anyone-3, mind-7)
root(ROOT-0, get-8)
det(argument-12, a-10)
amod(argument-12, detailed-11)
prep_in(get-8, argument-12)
prep_over(argument-12, intricacies-14)
amod(science-17, genetic-16)
prep_of(intricacies-14, science-17)
det(group-20, a-19)
prep_with(get-8, group-20)
prep_of(group-20, people-22)
nsubjpass(conflicted-27, people-22)
auxpass(conflicted-27, are-24)
advmod(conflicted-27, still-25)
advmod(conflicted-27, ideologically-26)
rcmod(people-22, conflicted-27)
det(facts-31, the-29)
amod(facts-31, basic-30)
prep_about(conflicted-27, facts-31)
prep_of(facts-31, evolution-33)

(ROOT
  (S
    (NP (DT The) (JJ essential) (NN question))
    (ADVP (RB here))
    (VP (VBZ is)
      (SBAR (IN whether)
        (CC or)
        (RB not)
        (S
          (NP (JJ human) (NNS beings))
          (VP (VBP have)
            (NP (DT the) (NN right)
              (S
                (VP (TO to)
                  (VP (VB define)
                    (NP (PRP themselves))))))
            (, ,)
            (PP (VBG according)
              (PP (TO to)
                (NP
                  (NP (PRP$ their) (JJ own) (NNS perceptions))
                  (PP (IN of)
                    (NP (PRP themselves))))))))))
    (. .)))

det(question-3, The-1)
amod(question-3, essential-2)
nsubj(is-5, question-3)
advmod(is-5, here-4)
root(ROOT-0, is-5)
complm(have-11, whether-6)
ccomp(is-5, not-8)
conj_or(have-11, not-8)
amod(beings-10, human-9)
nsubj(have-11, beings-10)
ccomp(is-5, have-11)
det(right-13, the-12)
dobj(have-11, right-13)
aux(define-15, to-14)
infmod(right-13, define-15)
dobj(define-15, themselves-16)
prepc_according_to(have-11, to-19)
poss(perceptions-22, their-20)
amod(perceptions-22, own-21)
pobj(have-11, perceptions-22)
prep_of(perceptions-22, themselves-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB say)
        (SBAR
          (S
            (NP (DT the) (NNS odds))
            (VP (VBP are)
              (ADVP (NN way))
              (ADJP
                (ADJP (JJ high)
                  (PP (IN against)
                    (S
                      (ADVP (RB gayness))
                      (VP (VBG being)
                        (NP (DT a) (NN decision))))))
                (CC and)
                (ADJP (RB much) (JJR higher)))
              (PP (IN for)
                (S
                  (NP (PRP it))
                  (VP (VBG being)
                    (NP (DT a) (JJ genetic) (NN predetermination))))))))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, 'd-2)
root(ROOT-0, say-3)
det(odds-5, the-4)
nsubj(high-8, odds-5)
nsubj(higher-16, odds-5)
cop(high-8, are-6)
advmod(high-8, way-7)
ccomp(say-3, high-8)
advmod(decision-13, gayness-10)
cop(decision-13, being-11)
det(decision-13, a-12)
prepc_against(high-8, decision-13)
advmod(higher-16, much-15)
ccomp(say-3, higher-16)
conj_and(high-8, higher-16)
nsubj(predetermination-22, it-18)
cop(predetermination-22, being-19)
det(predetermination-22, a-20)
amod(predetermination-22, genetic-21)
prepc_for(high-8, predetermination-22)

(ROOT
  (S (CC But)
    (, ,)
    (PP (IN in)
      (NP (DT the) (JJR larger) (NN picture)))
    (, ,)
    (SBAR
      (WHADVP (WRB why))
      (S
        (VP (VBZ does))))
    (VP (VBZ is)
      (NP (NN matter)))
    (. ?)))

cc(matter-11, But-1)
det(picture-6, the-4)
amod(picture-6, larger-5)
prep_in(matter-11, picture-6)
advmod(does-9, why-8)
advcl(matter-11, does-9)
csubj(matter-11, does-9)
cop(matter-11, is-10)
root(ROOT-0, matter-11)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (DT a) (NN person))
        (VP
          (VP (VBZ is)
            (ADJP (JJ gay)))
          (CC or)
          (VP (VBZ chooses)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ gay)))))))))
    (WHNP (WDT what) (NN business))
    (SQ
      (VP (VBZ is)
        (NP
          (NP (PRP it))
          (PP (IN of)
            (NP (NNS anyones))))))
    (. ?)))

mark(gay-5, If-1)
det(person-3, a-2)
nsubj(gay-5, person-3)
nsubj(chooses-7, person-3)
xsubj(gay-10, person-3)
cop(gay-5, is-4)
dep(it-14, gay-5)
conj_or(gay-5, chooses-7)
dep(it-14, chooses-7)
aux(gay-10, to-8)
cop(gay-10, be-9)
xcomp(chooses-7, gay-10)
det(business-12, what-11)
nsubj(it-14, business-12)
cop(it-14, is-13)
root(ROOT-0, it-14)
prep_of(it-14, anyones-16)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB care)
        (SBAR
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBP am)
                (ADJP (JJ gay)
                  (CC or)
                  (JJ straight)
                  (CC or)
                  (JJ bi)))))
          (CC or)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (VBD had)
                (NP (DT some) (NN surgery)
                  (S
                    (VP (TO to)
                      (VP (VB look)
                        (PP (IN like)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP you))
                              (VP (VBP think)
                                (SBAR
                                  (S
                                    (NP (PRP I))
                                    (VP (VBP 'm)
                                      (VP (VBN supposed)
                                        (S
                                          (VP (TO to)
                                            (VP (VB be))))))))))))))))))))))
    (. ?)))

advmod(care-4, Why-1)
aux(care-4, do-2)
nsubj(care-4, you-3)
root(ROOT-0, care-4)
mark(straight-10, if-5)
nsubj(straight-10, I-6)
nsubj(bi-12, I-6)
cop(straight-10, am-7)
dep(straight-10, gay-8)
dep(care-4, straight-10)
dep(care-4, bi-12)
conj_or(straight-10, bi-12)
mark(had-16, if-14)
nsubj(had-16, I-15)
dep(care-4, had-16)
conj_or(straight-10, had-16)
det(surgery-18, some-17)
dobj(had-16, surgery-18)
aux(look-20, to-19)
infmod(surgery-18, look-20)
dep(think-24, what-22)
dobj(supposed-27, what-22)
nsubj(think-24, you-23)
prepc_like(look-20, think-24)
nsubjpass(supposed-27, I-25)
xsubj(be-29, I-25)
auxpass(supposed-27, 'm-26)
ccomp(think-24, supposed-27)
aux(be-29, to-28)
xcomp(supposed-27, be-29)

(ROOT
  (S
    (NP (NN Everyone))
    (VP (VBZ agrees)
      (SBAR (IN that)
        (S
          (NP (NN love))
          (VP (VBZ is)
            (ADJP (JJ blind))))))
    (. .)))

nsubj(agrees-2, Everyone-1)
root(ROOT-0, agrees-2)
complm(blind-6, that-3)
nsubj(blind-6, love-4)
cop(blind-6, is-5)
ccomp(agrees-2, blind-6)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (ADVP (RB just))
          (NP
            (NP (DT a) (NN matter))
            (PP (IN of)
              (SBAR
                (WHNP (WP who))
                (S
                  (NP (PRP you))
                  (VP (VBP fall)
                    (PP (IN in)
                      (NP (NN love)))
                    (PP (IN with))))))))))
    (. ?)))

dep(matter-7, What-1)
mark(matter-7, if-2)
nsubj(matter-7, it-3)
cop(matter-7, 's-4)
advmod(matter-7, just-5)
det(matter-7, a-6)
root(ROOT-0, matter-7)
dep(fall-11, who-9)
nsubj(fall-11, you-10)
prepc_of(matter-7, fall-11)
prep_in(fall-11, love-13)
prep(fall-11, with-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADVP (RB almost)
        (NP (CD 65)))
      (NP
        (NP (PRP I))
        (SBAR
          (S
            (S
              (NP (PRP I))
              (ADVP (RB still))
              (VP (VBP do) (RB n't)
                (VP (VB understand)
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (NNS people))
                      (VP (VBP choose)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (PP (IN in)
                                (NP (CD one) (NN religion))))))))))))
            (CC or)
            (S
              (NP (DT another))
              (ADVP (RB then))
              (VP (VBP assume)
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (VBP have)
                      (NP (DT the) (NN right)
                        (S
                          (VP (TO to)
                            (VP (VB force-fit)
                              (NP (NN everyone))
                              (PP (IN into)
                                (NP (PRP$ their) (JJ religious) (NN template))))))))))))))))
    (. .)))

nsubj(I-5, I-1)
cop(I-5, am-2)
advmod(I-5, almost-3)
pobj(almost-3, 65-4)
root(ROOT-0, I-5)
nsubj(understand-10, I-6)
advmod(understand-10, still-7)
aux(understand-10, do-8)
neg(understand-10, n't-9)
rcmod(I-5, understand-10)
advmod(choose-13, why-11)
nsubj(choose-13, people-12)
xsubj(be-15, people-12)
advcl(understand-10, choose-13)
aux(be-15, to-14)
xcomp(choose-13, be-15)
num(religion-18, one-17)
prep_in(be-15, religion-18)
nsubj(assume-22, another-20)
advmod(assume-22, then-21)
rcmod(I-5, assume-22)
conj_or(understand-10, assume-22)
complm(have-25, that-23)
nsubj(have-25, they-24)
ccomp(assume-22, have-25)
det(right-27, the-26)
dobj(have-25, right-27)
aux(force-fit-29, to-28)
infmod(right-27, force-fit-29)
dobj(force-fit-29, everyone-30)
poss(template-34, their-32)
amod(template-34, religious-33)
prep_into(force-fit-29, template-34)

(ROOT
  (S
    (NP
      (NP (DT A) (NN person) (POS 's))
      (NN religion))
    (VP (VBZ is)
      (ADVP (RB definitely))
      (RB not)
      (ADJP (RB genetically) (VBN determined)))
    (. .)))

det(person-2, A-1)
poss(religion-4, person-2)
nsubjpass(determined-9, religion-4)
auxpass(determined-9, is-5)
advmod(determined-9, definitely-6)
neg(determined-9, not-7)
advmod(determined-9, genetically-8)
root(ROOT-0, determined-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP
        (ADVP (RB easily))
        (, ,)
        (CC or)
        (ADVP (IN at) (JJS least) (RB readily))
        (, ,))
      (VP (VBN changed)))
    (. .)))

nsubjpass(changed-10, It-1)
auxpass(changed-10, is-2)
advmod(changed-10, easily-3)
conj_or(easily-3, at-6)
advmod(changed-10, at-6)
pobj(at-6, least-7)
advmod(at-6, readily-8)
root(ROOT-0, changed-10)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP change)
      (NP
        (NP (PRP$ their) (NNS minds))
        (PP (IN about)
          (NP (NN religion))))
      (NP (PDT all) (DT the) (NN time)))
    (. .)))

nsubj(change-2, People-1)
root(ROOT-0, change-2)
poss(minds-4, their-3)
iobj(change-2, minds-4)
prep_about(minds-4, religion-6)
predet(time-9, all-7)
det(time-9, the-8)
dobj(change-2, time-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP assert)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (DT each)
          (VP (VBP have)
            (NP (DT that) (NN right))))))
    (. .)))

nsubj(assert-2, I-1)
root(ROOT-0, assert-2)
complm(have-6, that-3)
nsubj(have-6, we-4)
dep(have-6, each-5)
ccomp(assert-2, have-6)
det(right-8, that-7)
dobj(have-6, right-8)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP
        (NP (NN society))
        (SBAR (`` ``)
          (S
            (VP (VBZ s)
              (NP (NNS rules))))))
      (VP (VB be)
        (VP (VBN made)
          (S
            (VP (TO to)
              (VP (VB comport)
                (PP (IN with)
                  (NP (NN anything)))
                (PP (IN as)
                  (NP
                    (NP (NN fungible))
                    (PP (IN as)
                      (NP (NN religion)))))))))))
    (. ?)))

advmod(made-8, Why-1)
aux(made-8, should-2)
nsubjpass(made-8, society-3)
cop(rules-6, s-5)
dep(society-3, rules-6)
auxpass(made-8, be-7)
root(ROOT-0, made-8)
aux(comport-10, to-9)
xcomp(made-8, comport-10)
prep_with(comport-10, anything-12)
prep_as(comport-10, fungible-14)
prep_as(fungible-14, religion-16)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (JJ myriad) (NNS arguments))
        (PP (IN against)
          (NP (DT the) (JJ fundamental) (JJ human) (NN right)))
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ human)))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
amod(arguments-4, myriad-3)
nsubj(are-2, arguments-4)
det(right-9, the-6)
amod(right-9, fundamental-7)
amod(right-9, human-8)
prep_against(arguments-4, right-9)
aux(human-12, to-10)
cop(human-12, be-11)
infmod(arguments-4, human-12)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (RB only) (CD one) (NN argument))
        (PP (IN for)
          (NP (PRP it)))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(argument-5, only-3)
num(argument-5, one-4)
nsubj(is-2, argument-5)
prep_for(argument-5, it-7)

(ROOT
  (S
    (NP (DT That))
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ right)))
    (. .)))

nsubj(right-4, That-1)
nsubj(right-4, it-2)
cop(right-4, is-3)
root(ROOT-0, right-4)

(ROOT
  (S
    (NP (JJ Does) (NN anyone))
    (ADVP (RB really))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP (NN someone))
          (VP (MD would)
            (ADVP (RB just))
            (VP
              (VP (VB wake-up)
                (NP (CD one))
                (NP (JJ fine) (NN morning)))
              (CC and)
              (VP (VB decide)
                (S
                  (VP (TO to)
                    (VP (VB change)
                      (NP (PRP$ their) (JJ sexual) (NN orientation))
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (NP
                              (NP (NN someone))
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (VP (VBZ attracts)
                                    (NP (NN bigotry))
                                    (ADVP (RB almost) (RB anywhere))
                                    (PP (IN in)
                                      (NP (DT the) (NN world)))))))))))))))))))
    (. .)))

amod(anyone-2, Does-1)
nsubj(think-4, anyone-2)
advmod(think-4, really-3)
root(ROOT-0, think-4)
complm(wake-up-9, that-5)
nsubj(wake-up-9, someone-6)
nsubj(decide-14, someone-6)
xsubj(change-16, someone-6)
aux(wake-up-9, would-7)
advmod(wake-up-9, just-8)
ccomp(think-4, wake-up-9)
dobj(wake-up-9, one-10)
amod(morning-12, fine-11)
tmod(wake-up-9, morning-12)
ccomp(think-4, decide-14)
conj_and(wake-up-9, decide-14)
aux(change-16, to-15)
xcomp(decide-14, change-16)
poss(orientation-19, their-17)
amod(orientation-19, sexual-18)
dobj(change-16, orientation-19)
aux(someone-22, to-20)
cop(someone-22, be-21)
xcomp(change-16, someone-22)
nsubj(attracts-24, someone-22)
rcmod(someone-22, attracts-24)
dobj(attracts-24, bigotry-25)
advmod(anywhere-27, almost-26)
advmod(attracts-24, anywhere-27)
det(world-30, the-29)
prep_in(attracts-24, world-30)

(ROOT
  (S
    (S
      (VP (VBG Being)
        (ADJP (JJ gay)
          (CC or)
          (JJ lesbian))))
    (VP (VBZ attracts)
      (NP
        (NP (NN anger))
        (PP (IN of)
          (NP
            (NP (DT the)
              (ADJP (RB morally) (JJ rigid)))
            (CC and)
            (NP (DT the) (NN sexually-uncertain)))))
      (ADVP (RB everywhere)))
    (. .)))

cop(gay-2, Being-1)
csubj(attracts-5, gay-2)
conj_or(gay-2, lesbian-4)
csubj(attracts-5, lesbian-4)
root(ROOT-0, attracts-5)
dobj(attracts-5, anger-6)
det(rigid-10, the-8)
advmod(rigid-10, morally-9)
prep_of(anger-6, rigid-10)
det(sexually-uncertain-13, the-12)
prep_of(anger-6, sexually-uncertain-13)
conj_and(rigid-10, sexually-uncertain-13)
advmod(attracts-5, everywhere-14)

(ROOT
  (S
    (S
      (INTJ (RB Sure))
      (NP (EX there))
      (VP (VBP are)
        (ADJP (JJ few))))
    (NP (NNS people))
    (VP (VBP are)
      (VP (VBN wired)
        (NP
          (NP (DT that) (NN way))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (MD would)
                (VP (VB choose)
                  (S
                    (VP
                      (VP (TO to)
                        (VP (VB side)
                          (PP (IN with)
                            (NP (DT the) (NN under-dog)))))
                      (CC and)
                      (VP (TO to)
                        (VP (VB be)
                          (PP (IN with)
                            (NP (DT the) (NN outcast))))))))))))))
    (. .)))

dep(are-3, Sure-1)
expl(are-3, there-2)
dep(wired-7, are-3)
acomp(are-3, few-4)
nsubjpass(wired-7, people-5)
auxpass(wired-7, are-6)
root(ROOT-0, wired-7)
det(way-9, that-8)
dobj(wired-7, way-9)
nsubj(choose-13, way-9)
aux(choose-13, would-12)
rcmod(way-9, choose-13)
aux(side-15, to-14)
ccomp(choose-13, side-15)
det(under-dog-18, the-17)
prep_with(side-15, under-dog-18)
aux(be-21, to-20)
ccomp(choose-13, be-21)
conj_and(side-15, be-21)
det(outcast-24, the-23)
prep_with(be-21, outcast-24)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD were)
      (NP
        (NP (DT a) (JJ few) (CD brave) (NNS souls))
        (SBAR
          (WHNP (WP who))
          (S (RB so)
            (VP (VBN identified)
              (PP (IN with)
                (NP
                  (NP (DT the) (NN plight))
                  (PP (IN of)
                    (NP (NNPS Jews))))))))))
    (. .)))

expl(were-2, There-1)
root(ROOT-0, were-2)
det(souls-6, a-3)
amod(souls-6, few-4)
num(souls-6, brave-5)
nsubj(were-2, souls-6)
nsubj(identified-9, souls-6)
advmod(identified-9, so-8)
rcmod(souls-6, identified-9)
det(plight-12, the-11)
prep_with(identified-9, plight-12)
prep_of(plight-12, Jews-14)

(ROOT
  (FRAG
    (SBAR (IN that)
      (S
        (NP (PRP they))
        (VP (VBD wore)
          (NP (DT the) (JJ yellow) (NN star))
          (SBAR (RB even) (IN though)
            (S
              (NP (PRP they))
              (ADVP (PRP themselves))
              (VP (VBD were) (RB not)
                (ADJP (RB genetically) (JJ Jewish))))))))
    (. .)))

dep(wore-3, that-1)
nsubj(wore-3, they-2)
root(ROOT-0, wore-3)
det(star-6, the-4)
amod(star-6, yellow-5)
dobj(wore-3, star-6)
advmod(Jewish-14, even-7)
dep(Jewish-14, though-8)
nsubj(Jewish-14, they-9)
advmod(Jewish-14, themselves-10)
cop(Jewish-14, were-11)
neg(Jewish-14, not-12)
advmod(Jewish-14, genetically-13)
dep(wore-3, Jewish-14)

(ROOT
  (S
    (NP
      (NP (CD One))
      (PP (IN of)
        (NP (DT those)
          (ADJP (JJ brave))
          (NNS souls))))
    (VP (VBD was)
      (NP
        (NP (DT the) (NNP King))
        (PP (IN of)
          (NP (NNP Denmark)))))
    (. .)))

nsubj(King-8, One-1)
det(souls-5, those-3)
amod(souls-5, brave-4)
prep_of(One-1, souls-5)
cop(King-8, was-6)
det(King-8, the-7)
root(ROOT-0, King-8)
prep_of(King-8, Denmark-10)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ few) (JJ white) (NNS people))
      (PP (IN in)
        (NP (NN apartheid))))
    (VP (VBD infected)
      (SBAR
        (S
          (NP (NNP South) (NNP Africa))
          (VP (VBD made)
            (NP (DT that) (NN choice))))
        (, ,)
        (CC but)
        (S (RB not)
          (ADJP (JJ many)))))
    (. .)))

det(people-4, A-1)
amod(people-4, few-2)
amod(people-4, white-3)
nsubj(infected-7, people-4)
prep_in(people-4, apartheid-6)
root(ROOT-0, infected-7)
nn(Africa-9, South-8)
nsubj(made-10, Africa-9)
nsubj(many-16, Africa-9)
ccomp(infected-7, made-10)
det(choice-12, that-11)
dobj(made-10, choice-12)
neg(many-16, not-15)
ccomp(infected-7, many-16)
conj_but(made-10, many-16)

