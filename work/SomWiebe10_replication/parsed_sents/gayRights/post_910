(ROOT
  (S
    (NP
      (NP (DT The) (NNS amendments))
      (PP
        (PP (TO to)
          (NP (DT the) (NNP Constitution)))
        (PRN (CC and)
          (, ,)
          (ADVP (RB indeed))
          (, ,)
          (NP
            (NP (DT the) (NN record))
            (PP (IN of)
              (NP (DT the) (NN debate))))))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBD took)
            (NP (NN place))
            (PP (IN before)
              (CC and)
              (IN during)
              (NP (PRP$ its) (NN writing)))))))
    (VP (VB attest)
      (PP (TO to)
        (NP
          (NP (DT the) (NN trend))
          (PP (IN of)
            (S
              (VP (VBG using)
                (NP (DT the) (NN spirit)
                  (CC and)
                  (NN wording))
                (S
                  (VP
                    (VP (TO to)
                      (VP (VB remove)
                        (NP (JJ prejudicial) (NNS limits))
                        (PP (IN on)
                          (NP (NNS liberties)))))
                    (CONJP (RB rather) (IN than))
                    (VP (TO to)
                      (VP (VB institute)
                        (NP (PRP them))))))))))))
    (. .)))

det(amendments-2, The-1)
nsubj(took-16, amendments-2)
nsubj(took-16', amendments-2)
nsubj(attest-23, amendments-2)
det(Constitution-5, the-4)
prep_to(amendments-2, Constitution-5)
dep(record-11, and-6)
dep(record-11, indeed-8)
det(record-11, the-10)
dep(amendments-2, record-11)
det(debate-14, the-13)
prep_of(record-11, debate-14)
rcmod(amendments-2, took-16)
rcmod(amendments-2, took-16')
conj_and(took-16, took-16')
dobj(took-16, place-17)
poss(writing-22, its-21)
prep_before(took-16, writing-22)
prep_during(took-16', writing-22)
root(ROOT-0, attest-23)
det(trend-26, the-25)
prep_to(attest-23, trend-26)
prepc_of(trend-26, using-28)
det(spirit-30, the-29)
dobj(using-28, spirit-30)
dobj(using-28, wording-32)
conj_and(spirit-30, wording-32)
aux(remove-34, to-33)
dep(using-28, remove-34)
amod(limits-36, prejudicial-35)
dobj(remove-34, limits-36)
prep_on(remove-34, liberties-38)
aux(institute-42, to-41)
dep(using-28, institute-42)
conj_negcc(remove-34, institute-42)
dobj(institute-42, them-43)

(ROOT
  (S
    (ADVP (RB Certainly))
    (, ,)
    (SBAR (IN that)
      (S
        (NP (NN history))
        (VP (VBZ is)
          (NP
            (NP (DT a) (NN bit))
            (PP (IN of)
              (NP
                (NP (DT a) (VBN mixed) (NN bag))
                (PP (IN in)
                  (NP (DT that) (NN regard)))))))))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (PP (IN in)
      (NP (DT the) (NN end)))
    (, ,)
    (NP (NNP U.S.) (NN culture))
    (VP (VBZ has)
      (VP (VBN seen)
        (ADJP (JJ fit)
          (S
            (VP (TO to)
              (VP
                (VP (VB reverse)
                  (NP (JJ past) (NNS mistakes)))
                (CC and)
                (VP (VB restore)
                  (NP
                    (NP (DT the) (JJS greatest) (NN degree))
                    (PP (IN of)
                      (NP (NN liberty))))
                  (PP (TO to)
                    (NP (DT the) (JJS greatest) (NN number))))))))))
    (. .)))

advmod(seen-25, Certainly-1)
dep(bit-7, that-3)
nsubj(bit-7, history-4)
cop(bit-7, is-5)
det(bit-7, a-6)
dep(seen-25, bit-7)
det(bag-11, a-9)
amod(bag-11, mixed-10)
prep_of(bit-7, bag-11)
det(regard-14, that-13)
prep_in(bag-11, regard-14)
advmod(seen-25, however-16)
det(end-20, the-19)
prep_in(seen-25, end-20)
nn(culture-23, U.S.-22)
nsubj(seen-25, culture-23)
aux(seen-25, has-24)
root(ROOT-0, seen-25)
acomp(seen-25, fit-26)
aux(reverse-28, to-27)
xcomp(fit-26, reverse-28)
amod(mistakes-30, past-29)
dobj(reverse-28, mistakes-30)
xcomp(fit-26, restore-32)
conj_and(reverse-28, restore-32)
det(degree-35, the-33)
amod(degree-35, greatest-34)
dobj(restore-32, degree-35)
prep_of(degree-35, liberty-37)
det(number-41, the-39)
amod(number-41, greatest-40)
prep_to(restore-32, number-41)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (JJ past) (NNS generations))
        (VP (VBP have)
          (VP (VBN seen)
            (ADJP (JJ fit)
              (S
                (VP (TO to)
                  (VP (VB do)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBD was)
                          (ADVP (RB ultimately))
                          (NP (DT the) (JJ right) (NN thing)))))))))))))
    (, ,)
    (NP (PRP we))
    (VP (VBP earn)
      (NP
        (NP (PRP$ our) (NN inheritance))
        (PP (IN of)
          (NP (PRP$ their) (JJ good) (NN thinking))))
      (PP (IN by)
        (S
          (VP (VBG continuing)
            (S
              (VP (TO to)
                (VP (VB do)
                  (NP (DT that) (JJ same)))))))))
    (. .)))

mark(seen-5, If-1)
amod(generations-3, past-2)
nsubj(seen-5, generations-3)
aux(seen-5, have-4)
advcl(earn-17, seen-5)
acomp(seen-5, fit-6)
aux(do-8, to-7)
xcomp(fit-6, do-8)
nsubj(thing-14, what-9)
cop(thing-14, was-10)
advmod(thing-14, ultimately-11)
det(thing-14, the-12)
amod(thing-14, right-13)
ccomp(do-8, thing-14)
nsubj(earn-17, we-16)
root(ROOT-0, earn-17)
poss(inheritance-19, our-18)
dobj(earn-17, inheritance-19)
poss(thinking-23, their-21)
amod(thinking-23, good-22)
prep_of(inheritance-19, thinking-23)
prepc_by(earn-17, continuing-25)
aux(do-27, to-26)
xcomp(continuing-25, do-27)
det(same-29, that-28)
dobj(do-27, same-29)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (VP (VB use)
        (S
          (NP
            (NP (DT the) (NNP Constitution))
            (CC and)
            (NP (DT every) (NN constitution)))
          (VP (TO to)
            (VP
              (VP (VB enhance)
                (NP (NN liberty)))
              (CONJP (RB rather) (IN than))
              (VP (VB destroy)
                (NP (PRP it))))))))
    (. .)))

nsubj(use-3, We-1)
aux(use-3, must-2)
root(ROOT-0, use-3)
det(Constitution-5, the-4)
nsubj(enhance-10, Constitution-5)
nsubj(destroy-14, Constitution-5)
det(constitution-8, every-7)
conj_and(Constitution-5, constitution-8)
nsubj(enhance-10, constitution-8)
aux(enhance-10, to-9)
xcomp(use-3, enhance-10)
dobj(enhance-10, liberty-11)
xcomp(use-3, destroy-14)
conj_negcc(enhance-10, destroy-14)
dobj(destroy-14, it-15)

(ROOT
  (S
    (NP (PRP$ Our) (NNS children))
    (VP (MD will) (RB either)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP
              (VP (VB suffer)
                (NP (PRP$ our) (NNS mistakes)))
              (: ...)
              (CC or)
              (VP (VB correct)
                (NP (PRP$ our) (NN stupidity))))))))
    (. .)))

poss(children-2, Our-1)
nsubj(have-5, children-2)
xsubj(suffer-7, children-2)
aux(have-5, will-3)
advmod(have-5, either-4)
root(ROOT-0, have-5)
aux(suffer-7, to-6)
xcomp(have-5, suffer-7)
poss(mistakes-9, our-8)
dobj(suffer-7, mistakes-9)
xcomp(have-5, correct-12)
conj_or(suffer-7, correct-12)
poss(stupidity-14, our-13)
dobj(correct-12, stupidity-14)

