(ROOT
  (S
    (NP (PRP I))
    (VP (VBP suspect)
      (SBAR
        (S
          (NP
            (NP (DT a) (JJ philosophical) (NN fallacy))
            (PP (IN in)
              (NP (DT the) (NNP Family) (NNP Research) (NNP Council))))
          (VP (VBZ s)
            (NP (NN argument))
            (ADVP (RB here))))))
    (. .)))

nsubj(suspect-2, I-1)
root(ROOT-0, suspect-2)
det(fallacy-5, a-3)
amod(fallacy-5, philosophical-4)
nsubj(argument-12, fallacy-5)
det(Council-10, the-7)
nn(Council-10, Family-8)
nn(Council-10, Research-9)
prep_in(fallacy-5, Council-10)
cop(argument-12, s-11)
ccomp(suspect-2, argument-12)
advmod(argument-12, here-13)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP write)))
    (, ,)
    (NP (DT This) (NN response))
    (VP (VBZ is)
      (UCP
        (VP (VBN followed)
          (PP (IN by)
            (NP
              (NP (DT the) (NN purpose))
              (PP (IN of)
                (NP
                  (NP (NN marriage))
                  (SBAR
                    (S
                      (VP (VBZ is)
                        (S
                          (VP (TO to)
                            (VP (VB have)
                              (NP
                                (NP (NNS children))
                                (PRN (-LRB- -LRB-)
                                  (NP (CD 4) (NN percent))
                                  (-RRB- -RRB-))
                                (, ,)
                                (SBAR
                                  (WHNP (WDT which))
                                  (S
                                    (ADVP (RB also))
                                    (VP (VBZ recognizes)
                                      (NP (DT a) (NN purposeful)))))))))))))))))
        (CC and)
        (RB thus)
        (NP
          (NP (JJ natural) (NN design))
          (PP (IN for)
            (NP (JJ human) (NN sexuality))))))
    (. .)))

nsubj(write-2, They-1)
ccomp(is-6, write-2)
det(response-5, This-4)
nsubj(is-6, response-5)
root(ROOT-0, is-6)
det(purpose-10, the-9)
prep_followed_by(is-6, purpose-10)
prep_of(purpose-10, marriage-12)
rcmod(marriage-12, is-13)
aux(have-15, to-14)
xcomp(is-13, have-15)
dobj(have-15, children-16)
nsubj(recognizes-24, children-16)
num(percent-19, 4-18)
appos(children-16, percent-19)
advmod(recognizes-24, also-23)
rcmod(children-16, recognizes-24)
det(purposeful-26, a-25)
dobj(recognizes-24, purposeful-26)
conj_and(is-6, thus-28)
amod(design-30, natural-29)
dep(is-6, design-30)
amod(sexuality-33, human-32)
prep_for(design-30, sexuality-33)

(ROOT
  (S
    (NP (DT This))
    (, ,)
    (ADVP (RB admittedly))
    (, ,)
    (VP (MD may)
      (VP (VB have)
        (NP (DT some) (NN validity))))
    (. .)))

nsubj(have-6, This-1)
advmod(have-6, admittedly-3)
aux(have-6, may-5)
root(ROOT-0, have-6)
det(validity-8, some-7)
dobj(have-6, validity-8)

(ROOT
  (S
    (NP
      (NP (NNP Marriage))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBZ has)
            (VP (VBN been)
              (VP
                (ADVP (RB traditionally))
                (VBN defined))))))
      (, ,))
    (VP (MD may)
      (VP (VB imply)
        (NP (NN procreation))))
    (. .)))

nsubj(imply-11, Marriage-1)
mark(defined-8, as-3)
nsubjpass(defined-8, it-4)
aux(defined-8, has-5)
auxpass(defined-8, been-6)
advmod(defined-8, traditionally-7)
dep(Marriage-1, defined-8)
aux(imply-11, may-10)
root(ROOT-0, imply-11)
dobj(imply-11, procreation-12)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (NNP David) (NNP Hume))
        (VP (VBD argued))))
    (, ,)
    (NP
      (NP (NNS questions))
      (PP (IN about)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (MD ought)
              (S
                (VP (TO to)
                  (VP (VB be)))))))))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN derived)
          (PP (IN from)
            (NP
              (NP (NNS questions))
              (PP (IN about)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ is))))))))))
    (. .)))

advmod(derived-17, However-1)
mark(argued-6, as-3)
nn(Hume-5, David-4)
nsubj(argued-6, Hume-5)
advcl(derived-17, argued-6)
nsubjpass(derived-17, questions-8)
nsubj(ought-11, what-10)
prepc_about(questions-8, ought-11)
aux(be-13, to-12)
xcomp(ought-11, be-13)
aux(derived-17, can-14)
neg(derived-17, not-15)
auxpass(derived-17, be-16)
root(ROOT-0, derived-17)
prep_from(derived-17, questions-19)
nsubj(is-22, what-21)
prepc_about(questions-19, is-22)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ fundamental) (NN question))
      (PP (IN in)
        (NP (DT this) (NN debate))))
    (VP (VBZ is) (: :)
      (SQ (MD Should)
        (NP
          (NP (CD two))
          (SBAR
            (S
              (VP (VBG consenting)
                (NP
                  (NP (JJ male) (NNS adults))
                  (, ,)
                  (PP (IN for)
                    (NP (NN example)))
                  (, ,))))))
        (VP (VB be)
          (VP (VBN allowed)
            (NP (DT the) (NN right)
              (S
                (VP (TO to)
                  (VP (VB marry)))))))))
    (. ?)))

det(question-3, The-1)
amod(question-3, fundamental-2)
nsubj(is-7, question-3)
det(debate-6, this-5)
prep_in(question-3, debate-6)
root(ROOT-0, is-7)
aux(allowed-19, Should-9)
nsubjpass(allowed-19, two-10)
rcmod(two-10, consenting-11)
amod(adults-13, male-12)
dobj(consenting-11, adults-13)
prep_for(adults-13, example-16)
auxpass(allowed-19, be-18)
parataxis(is-7, allowed-19)
det(right-21, the-20)
dobj(allowed-19, right-21)
aux(marry-23, to-22)
infmod(right-21, marry-23)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB respond)
          (SBAR (IN as)
            (S
              (NP (NNP FRC))
              (VP (VBZ has)
                (VP (VBN done) (, ,)
                  (PP (IN by)
                    (S
                      (VP (VBG appealing)
                        (PP (TO to)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (VP (VBZ is)))))))))))))))
    (PRN (-LRB- -LRB-)
      (CC or)
      (S
        (NP (WDT what))
        (VP (VBZ has)
          (ADVP (RB always))
          (VP (VBN been))))
      (-RRB- -RRB-))
    (CC and)
    (S
      (ADVP (RB therefore))
      (NP (WDT what))
      (VP (MD should)
        (VP (VB be)
          (PRN (, ,)
            (S
              (VP (VBZ is)
                (ADJP (JJ fallacious))
                (SBAR (IN because)
                  (S
                    (NP (DT these))
                    (VP (VBP are)
                      (NP (CD two))
                      (ADVP (RB fundamentally))))))))
          (NP (JJ different) (NNS questions)))))
    (. .)))

aux(respond-2, To-1)
root(ROOT-0, respond-2)
mark(done-6, as-3)
nsubj(done-6, FRC-4)
aux(done-6, has-5)
advcl(respond-2, done-6)
prepc_by(done-6, appealing-9)
nsubj(is-12, what-11)
prepc_to(appealing-9, is-12)
dep(been-18, or-14)
nsubj(been-18, what-15)
aux(been-18, has-16)
advmod(been-18, always-17)
dep(respond-2, been-18)
advmod(questions-34, therefore-21)
nsubj(questions-34, what-22)
aux(questions-34, should-23)
cop(questions-34, be-24)
cop(fallacious-27, is-26)
parataxis(questions-34, fallacious-27)
mark(two-31, because-28)
nsubj(two-31, these-29)
cop(two-31, are-30)
advcl(fallacious-27, two-31)
advmod(two-31, fundamentally-32)
amod(questions-34, different-33)
conj_and(respond-2, questions-34)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP$ their) (NN argument))
        (VP (VBZ rests)
          (PP (IN on)
            (NP (DT this) (NN assumption))))))
    (, ,)
    (NP (PRP it))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN questioned)
          (PP (IN for)
            (NP (PRP$ its) (NN validity))))))
    (. .)))

mark(rests-4, As-1)
poss(argument-3, their-2)
nsubj(rests-4, argument-3)
advcl(questioned-12, rests-4)
det(assumption-7, this-6)
prep_on(rests-4, assumption-7)
nsubjpass(questioned-12, it-9)
aux(questioned-12, should-10)
auxpass(questioned-12, be-11)
root(ROOT-0, questioned-12)
poss(validity-15, its-14)
prep_for(questioned-12, validity-15)

