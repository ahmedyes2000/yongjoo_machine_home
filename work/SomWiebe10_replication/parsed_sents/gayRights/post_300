(ROOT
  (S
    (LST (JJ First))
    (PP (IN of)
      (NP (DT all)))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB say)
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (VBP am)
                  (ADJP (RB highly) (JJ insulted)
                    (PP (IN by)
                      (NP (PRP$ your) (NN comment)))))))))))
    (. .)))

dep(have-6, First-1)
prep_of(have-6, all-3)
nsubj(have-6, I-5)
xsubj(say-8, I-5)
root(ROOT-0, have-6)
aux(say-8, to-7)
xcomp(have-6, say-8)
complm(insulted-13, that-9)
nsubj(insulted-13, I-10)
cop(insulted-13, am-11)
advmod(insulted-13, highly-12)
ccomp(say-8, insulted-13)
poss(comment-16, your-15)
prep_by(insulted-13, comment-16)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (DT a) (NN mother))
              (VP (MD can) (RB not)
                (VP (VB give)
                  (NP (PRP$ her) (JJ male) (NN child))
                  (NP
                    (NP (NN guidance))
                    (PRN (-LRB- -LRB-)
                      (CC or)
                      (NP
                        (NP (NN father))
                        (PP (TO to)
                          (NP (NN daughter))))
                      (-RRB- -RRB-))))))))))
    (VP (VBZ is)
      (ADJP (JJ ludicrous)
        (CC and)
        (JJ inflammatory)))
    (. .)))

aux(say-2, To-1)
csubj(ludicrous-20, say-2)
csubj(inflammatory-22, say-2)
complm(give-8, that-3)
det(mother-5, a-4)
nsubj(give-8, mother-5)
aux(give-8, can-6)
neg(give-8, not-7)
ccomp(say-2, give-8)
poss(child-11, her-9)
amod(child-11, male-10)
dep(give-8, child-11)
dobj(give-8, guidance-12)
dep(father-15, or-14)
dep(guidance-12, father-15)
prep_to(father-15, daughter-17)
cop(ludicrous-20, is-19)
root(ROOT-0, ludicrous-20)
conj_and(ludicrous-20, inflammatory-22)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD were)
      (VP (VBN given)
        (PP (TO to)
          (NP (NNS families)))
        (SBAR
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD wanted)
                (NP (PRP them))
                (PP (IN with)
                  (NP
                    (NP (DT all))
                    (PP (IN of)
                      (NP (PRP$ their) (NNS hearts))))))))
          (, ,)
          (CC and)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD had)
                (S
                  (VP (TO to)
                    (VP (VB fight)
                      (NP
                        (NP (DT every) (NN step))
                        (PP (IN of)
                          (NP (DT the) (NN way)))))))
                (S
                  (VP (TO to)
                    (VP (VB bring)
                      (NP (PRP them))
                      (ADVP (RB home)))))))))))
    (. .)))

nsubjpass(given-3, They-1)
auxpass(given-3, were-2)
root(ROOT-0, given-3)
prep_to(given-3, families-5)
nsubj(wanted-7, who-6)
dep(given-3, wanted-7)
dobj(wanted-7, them-8)
prep_with(wanted-7, all-10)
poss(hearts-13, their-12)
prep_of(all-10, hearts-13)
nsubj(had-17, who-16)
dep(given-3, had-17)
conj_and(wanted-7, had-17)
aux(fight-19, to-18)
xcomp(had-17, fight-19)
det(step-21, every-20)
dobj(fight-19, step-21)
det(way-24, the-23)
prep_of(step-21, way-24)
aux(bring-26, to-25)
xcomp(had-17, bring-26)
dobj(bring-26, them-27)
advmod(bring-26, home-28)

(ROOT
  (S
    (ADVP (RB Once) (RB there))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (VP (VBG showered)
        (PP (IN with)
          (NP (NN love)
            (CC and)
            (NN affection)))))
    (. .)))

advmod(there-2, Once-1)
advmod(showered-6, there-2)
nsubj(showered-6, they-4)
aux(showered-6, are-5)
root(ROOT-0, showered-6)
prep_with(showered-6, love-8)
prep_with(showered-6, affection-10)
conj_and(love-8, affection-10)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NN thing))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (MD might)
            (VP (VB make)
              (S
                (NP (PRP$ their) (NNS lives))
                (ADJP (RBR easier))))))))
    (VP (MD would)
      (VP (VB be)
        (SBAR (IN if)
          (S
            (NP (PRP they))
            (VP (VBD were) (RB not)
              (VP (VBD stared)
                (ADVP (IN at)
                  (PP (IN with)
                    (NP (NN contempt))))
                (PP (IN by)
                  (NP
                    (NP (DT the) (NNS bigots))
                    (PP (IN of)
                      (NP (DT this) (NN country)))))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, only-2)
nsubj(make-6, thing-3)
nsubj(be-11, thing-3)
aux(make-6, might-5)
rcmod(thing-3, make-6)
poss(lives-8, their-7)
nsubj(easier-9, lives-8)
xcomp(make-6, easier-9)
aux(be-11, would-10)
root(ROOT-0, be-11)
mark(stared-16, if-12)
nsubjpass(stared-16, they-13)
auxpass(stared-16, were-14)
neg(stared-16, not-15)
advcl(be-11, stared-16)
advmod(stared-16, at-17)
prep_with(at-17, contempt-19)
det(bigots-22, the-21)
agent(stared-16, bigots-22)
det(country-25, this-24)
prep_of(bigots-22, country-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN been)
        (NP
          (NP (DT a) (JJ single) (NN parent))
          (PP (TO to)
            (NP
              (NP (DT a) (NN son))
              (PP (IN for)
                (NP
                  (NP
                    (NP (JJS most))
                    (PP (IN of)
                      (NP
                        (NP (PRP$ his) (CD 16) (NNS years))
                        (CC and)
                        (S
                          (NP (PRP he))
                          (VP (VBZ is)
                            (ADJP
                              (ADJP (RB very) (JJ well-adjusted))
                              (, ,)
                              (ADJP (JJ well-informed))
                              (CC and)
                              (ADJP (JJ open-minded))))))))
                  (PRN (-LRB- -LRB-)
                    (SBAR (IN if)
                      (S
                        (NP (PRP I))
                        (VP (VBP do)
                          (VP (VB say)
                            (ADVP (RB so))
                            (NP (PRP myself)))))
                      (: ;))
                    (-RRB- -RRB-)))))))))
    (-RRB- -RRB-) (. .)))

nsubj(parent-6, I-1)
aux(parent-6, have-2)
cop(parent-6, been-3)
det(parent-6, a-4)
amod(parent-6, single-5)
root(ROOT-0, parent-6)
det(son-9, a-8)
prep_to(parent-6, son-9)
prep_for(son-9, most-11)
poss(years-15, his-13)
num(years-15, 16-14)
prep_of(most-11, years-15)
nsubj(well-adjusted-20, he-17)
nsubj(well-informed-22, he-17)
nsubj(open-minded-24, he-17)
cop(well-adjusted-20, is-18)
advmod(well-adjusted-20, very-19)
prep_of(most-11, well-adjusted-20)
conj_and(years-15, well-adjusted-20)
conj_and(years-15, well-informed-22)
conj_and(well-adjusted-20, well-informed-22)
conj_and(years-15, open-minded-24)
conj_and(well-adjusted-20, open-minded-24)
mark(say-29, if-26)
nsubj(say-29, I-27)
aux(say-29, do-28)
dep(most-11, say-29)
advmod(say-29, so-30)
dobj(say-29, myself-31)

(ROOT
  (S
    (ADVP (RB Secondly))
    (, ,)
    (SBAR (IN while)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (S
            (NP (DT no) (NNS studies))
            (VP (TO to)
              (VP (VB support)
                (NP (PRP$ my) (NN claim))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (NNS lots))
        (PP (IN of)
          (NP (JJ personal) (NN experience)))))
    (. .)))

advmod(have-14, Secondly-1)
mark(have-5, while-3)
nsubj(have-5, I-4)
advcl(have-14, have-5)
det(studies-7, no-6)
nsubj(support-9, studies-7)
aux(support-9, to-8)
ccomp(have-5, support-9)
xcomp(have-5, support-9)
poss(claim-11, my-10)
dobj(support-9, claim-11)
nsubj(have-14, I-13)
root(ROOT-0, have-14)
dobj(have-14, lots-15)
amod(experience-18, personal-17)
prep_of(lots-15, experience-18)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG raising)
          (NP (PRP$ my) (NN son))
          (PP (IN with)
            (NP (PRP$ my) (JJ same-sex) (NN partner))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBP 've)
            (ADVP (RB already))
            (VP (VBN stated)))))
      (, ,)
      (NP (PRP he))
      (VP (VBZ is)
        (VP (VBG doing)
          (ADJP (RB exceptionally) (JJ well)))))
    (. .)))

nsubj(raising-3, I-1)
aux(raising-3, am-2)
root(ROOT-0, raising-3)
poss(son-5, my-4)
dobj(raising-3, son-5)
poss(partner-9, my-7)
amod(partner-9, same-sex-8)
prep_with(raising-3, partner-9)
mark(stated-16, as-12)
nsubj(stated-16, I-13)
aux(stated-16, 've-14)
advmod(stated-16, already-15)
advcl(doing-20, stated-16)
nsubj(doing-20, he-18)
aux(doing-20, is-19)
conj_and(raising-3, doing-20)
advmod(well-22, exceptionally-21)
acomp(doing-20, well-22)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (NP
          (NP (JJ several) (JJ same-sex) (NNS couples))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP have)
                (VP (VBN adopted))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD ca) (RB n't)
        (VP (VB think)
          (PP (IN of)
            (NP (CD one) (NN instance)))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT these) (NNS children))
              (VP (VBP are) (`` ``)
                (ADJP (JJ disadvantaged))
                ('' '')))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
amod(couples-5, several-3)
amod(couples-5, same-sex-4)
dobj(know-2, couples-5)
nsubj(adopted-8, couples-5)
aux(adopted-8, have-7)
rcmod(couples-5, adopted-8)
nsubj(think-13, I-10)
aux(think-13, ca-11)
neg(think-13, n't-12)
conj_and(know-2, think-13)
num(instance-16, one-15)
prep_of(think-13, instance-16)
advmod(disadvantaged-22, where-17)
det(children-19, these-18)
nsubj(disadvantaged-22, children-19)
cop(disadvantaged-22, are-20)
advcl(think-13, disadvantaged-22)

(ROOT
  (SQ (MD Can)
    (NP (EX there))
    (VP (VB be)
      (NP
        (NP (NNS challenges))
        (PP (IN in)
          (NP (DT these) (NNS circumstances)))))
    (. ?)))

aux(be-3, Can-1)
expl(be-3, there-2)
root(ROOT-0, be-3)
dep(be-3, challenges-4)
det(circumstances-7, these-6)
prep_in(challenges-4, circumstances-7)

(ROOT
  (FRAG
    (PP (IN Of)
      (NP (NN course)))
    (. .)))

root(ROOT-0, Of-1)
pobj(Of-1, course-2)

(ROOT
  (S (CC But)
    (NP (WP what) (NN child))
    (VP (VBZ does) (RB n't)
      (VP (VB provide)
        (NP (DT a) (NN challenge))
        (PP (TO to)
          (NP
            (NP (PRP$ their) (NN parent))
            (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-))))
        (PP (IN at)
          (NP (DT some) (NN point)))))
    (. .)))

cc(provide-6, But-1)
dep(child-3, what-2)
nsubj(provide-6, child-3)
aux(provide-6, does-4)
neg(provide-6, n't-5)
root(ROOT-0, provide-6)
det(challenge-8, a-7)
dobj(provide-6, challenge-8)
poss(parent-11, their-10)
prep_to(provide-6, parent-11)
dep(parent-11, s-13)
det(point-17, some-16)
prep_at(provide-6, point-17)

(ROOT
  (S
    (SBAR (IN If)
      (FRAG
        (NP (NN anything))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP (DT these) (JJ adopted) (NNS children))
            (VP (VBP are)
              (ADJP (JJR better) (RP off))
              (PP (IN than)
                (NP (JJ many) (NNS children))))))))
    (. .)))

mark(anything-2, If-1)
advcl(say-6, anything-2)
nsubj(say-6, I-4)
aux(say-6, would-5)
root(ROOT-0, say-6)
complm(better-12, that-7)
det(children-10, these-8)
amod(children-10, adopted-9)
nsubj(better-12, children-10)
cop(better-12, are-11)
ccomp(say-6, better-12)
dep(better-12, off-13)
amod(children-16, many-15)
prep_than(better-12, children-16)

