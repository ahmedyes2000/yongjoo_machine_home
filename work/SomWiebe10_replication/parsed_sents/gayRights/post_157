(ROOT
  (S
    (NP (DT The) (NN question))
    (VP (VBZ attempts)
      (S
        (VP (TO to)
          (VP (VB disguise)
            (PP (IN in)
              (NP (DT a)
                (ADJP (JJR kinder)
                  (CC and)
                  (JJR gentler))
                (NN way)))
            (NP
              (NP (DT a)
                (ADJP (RB very) (JJ ugly))
                (NN assertion))
              (SBAR
                (S
                  (NP (JJ homosexual) (NNS individuals))
                  (VP (VBP are)
                    (ADJP (JJ unfit)
                      (PP (TO to)
                        (NP (NN parent))))))))))))
    (. .)))

det(question-2, The-1)
nsubj(attempts-3, question-2)
xsubj(disguise-5, question-2)
root(ROOT-0, attempts-3)
aux(disguise-5, to-4)
xcomp(attempts-3, disguise-5)
det(way-11, a-7)
amod(way-11, kinder-8)
conj_and(kinder-8, gentler-10)
amod(way-11, gentler-10)
prep_in(disguise-5, way-11)
det(assertion-15, a-12)
advmod(ugly-14, very-13)
amod(assertion-15, ugly-14)
dobj(disguise-5, assertion-15)
amod(individuals-17, homosexual-16)
nsubj(unfit-19, individuals-17)
cop(unfit-19, are-18)
rcmod(assertion-15, unfit-19)
prep_to(unfit-19, parent-21)

(ROOT
  (S
    (NP (DT That) (NN assertion))
    (VP (VBZ has)
      (S
        (NP (JJ little)
          (CC or)
          (NN nothing))
        (VP (TO to)
          (VP (VB do)
            (PP (IN with)
              (NP (NNS children)
                (CC and)
                (NN everything)))
            (S
              (VP (TO to)
                (VP (VB do)
                  (PP (IN with)
                    (NP
                      (NP (JJ unsubstantiated) (NN prejudice))
                      (CC and)
                      (NP (JJ brutal) (NNS politics)))))))))))
    (. .)))

det(assertion-2, That-1)
nsubj(has-3, assertion-2)
root(ROOT-0, has-3)
nsubj(do-8, little-4)
xsubj(do-14, little-4)
conj_or(little-4, nothing-6)
nsubj(do-8, nothing-6)
xsubj(do-14, nothing-6)
aux(do-8, to-7)
ccomp(has-3, do-8)
xcomp(has-3, do-8)
prep_with(do-8, children-10)
prep_with(do-8, everything-12)
conj_and(children-10, everything-12)
aux(do-14, to-13)
xcomp(do-8, do-14)
amod(prejudice-17, unsubstantiated-16)
prep_with(do-14, prejudice-17)
amod(politics-20, brutal-19)
prep_with(do-14, politics-20)
conj_and(prejudice-17, politics-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (CD one) (POS 's))
          (NN concern))
        (VP (VBZ is)
          (PP (IN with)
            (NP (DT the) (NN child))))))
    (, ,)
    (NP
      (NP (RB then))
      (SBAR
        (S
          (VP (VBP ask)
            (NP
              (NP (NNS questions))
              (PP (VBG regarding)
                (NP
                  (NP
                    (NP (DT the) (NN child) (POS 's))
                    (NN state))
                  (PP (IN of)
                    (NP (NN happiness))))))
            (, ,)
            (SBAR (RB not) (IN whether)
              (FRAG (CC or)
                (RB not)
                (NP (DT the) (NN parent))))))))
    (VP (VBZ is)
      (VP (VBG sleeping)
        (PP (IN with)
          (SBAR
            (WHNP (WP who))
            (S
              (NP (PRP you))
              (VP (VBP believe)
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (MD ought)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBG sleeping)
                              (PP (IN with)))))))))))))))
    (. .)))

mark(is-5, If-1)
poss(concern-4, one-2)
nsubj(is-5, concern-4)
advcl(sleeping-28, is-5)
det(child-8, the-7)
prep_with(is-5, child-8)
nsubj(sleeping-28, then-10)
rcmod(then-10, ask-11)
dobj(ask-11, questions-12)
det(child-15, the-14)
poss(state-17, child-15)
prep_regarding(questions-12, state-17)
prep_of(state-17, happiness-19)
dep(not-24, not-21)
dep(not-24, whether-22)
dep(not-24, or-23)
dep(ask-11, not-24)
det(parent-26, the-25)
dep(not-24, parent-26)
aux(sleeping-28, is-27)
root(ROOT-0, sleeping-28)
dep(believe-32, who-30)
dobj(ought-34, who-30)
nsubj(believe-32, you-31)
prepc_with(sleeping-28, believe-32)
nsubj(ought-34, they-33)
xsubj(sleeping-37, they-33)
ccomp(believe-32, ought-34)
aux(sleeping-37, to-35)
aux(sleeping-37, be-36)
xcomp(ought-34, sleeping-37)
prep(sleeping-37, with-38)

(ROOT
  (S
    (NP
      (NP (CD One) (POS 's))
      (JJ true) (NN focus))
    (VP (VBZ is)
      (VP (VBN revealed)
        (PP (IN in)
          (NP
            (NP (DT the) (NN question))
            (ADVP (PRP itself))))))
    (. .)))

poss(focus-4, One-1)
amod(focus-4, true-3)
nsubjpass(revealed-6, focus-4)
auxpass(revealed-6, is-5)
root(ROOT-0, revealed-6)
det(question-9, the-8)
prep_in(revealed-6, question-9)
advmod(question-9, itself-10)

(ROOT
  (S
    (NP
      (NP (DT Those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP attempt)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP
                    (NP (DT a)
                      (ADJP (RB very) (JJ ugly))
                      (NN value) (NN statement))
                    (PP (IN about)
                      (NP (NNS homosexuals))))
                  (PP (IN without))
                  (, ,)
                  (PP (IN in)
                    (NP (PRP$ their) (NNS minds)))
                  (, ,)
                  (S
                    (VP (VBG being)
                      (ADJP (JJ obvious)
                        (PP (IN about)
                          (NP (PRP it)))))))))))))
    (VP (VBP wish)
      (S
        (NP (EX there))
        (VP (TO to)
          (VP (VB be)
            (NP
              (NP (DT some) (NN truth))
              (PP
                (PP (TO to)
                  (NP (PRP$ their) (NNS generalities)))
                (CC and)
                (PP (`` ``) (IN on)
                  (NP (NNS averages) ('' '')))))))))
    (. .)))

nsubj(attempt-3, Those-1)
nsubj(wish-23, Those-1)
rcmod(Those-1, attempt-3)
aux(make-5, to-4)
xcomp(attempt-3, make-5)
det(statement-10, a-6)
advmod(ugly-8, very-7)
amod(statement-10, ugly-8)
nn(statement-10, value-9)
dobj(make-5, statement-10)
prep_about(statement-10, homosexuals-12)
prep(make-5, without-13)
poss(minds-17, their-16)
prep_in(make-5, minds-17)
cop(obvious-20, being-19)
partmod(make-5, obvious-20)
xcomp(make-5, obvious-20)
prep_about(obvious-20, it-22)
root(ROOT-0, wish-23)
expl(truth-28, there-24)
aux(truth-28, to-25)
cop(truth-28, be-26)
det(truth-28, some-27)
xcomp(wish-23, truth-28)
xcomp(wish-23, truth-28')
conj_and(truth-28, truth-28')
poss(generalities-31, their-30)
prep_to(truth-28, generalities-31)
prep_on(truth-28', averages-35)

(ROOT
  (S
    (NP (DT A) (JJ human) (NN being))
    (VP (VBZ is) (RB not)
      (NP (DT a) (NN generality)))
    (. .)))

det(being-3, A-1)
amod(being-3, human-2)
nsubj(generality-7, being-3)
cop(generality-7, is-4)
neg(generality-7, not-5)
det(generality-7, a-6)
root(ROOT-0, generality-7)

(ROOT
  (S
    (NP (DT A) (JJ human) (NN being))
    (VP (VBZ is)
      (NP (DT an) (NN average)))
    (. .)))

det(being-3, A-1)
amod(being-3, human-2)
nsubj(average-6, being-3)
cop(average-6, is-4)
det(average-6, an-5)
root(ROOT-0, average-6)

(ROOT
  (S
    (NP (DT A) (JJ human) (NN being))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (NN label) (, ,)
          (CC or)
          (NN class) (, ,))
        (CC or)
        (NP (NN category))))
    (. .)))

det(being-3, A-1)
amod(being-3, human-2)
nsubj(label-7, being-3)
cop(label-7, is-4)
neg(label-7, not-5)
det(label-7, a-6)
root(ROOT-0, label-7)
conj_or(label-7, class-10)
conj_or(label-7, category-13)

(ROOT
  (S
    (S
      (NP (DT A) (JJ human) (NN being))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN specific))
          (PP (IN with)
            (NP
              (NP (NNS truths))
              (ADJP (JJ applicable)
                (PP (TO to)
                  (NP (PRP them)))))))))
    (CC and)
    (S
      (NP (PRP them))
      (ADJP (RB alone)))
    (. .)))

det(being-3, A-1)
amod(being-3, human-2)
nsubj(specific-6, being-3)
cop(specific-6, is-4)
det(specific-6, a-5)
root(ROOT-0, specific-6)
prep_with(specific-6, truths-8)
amod(truths-8, applicable-9)
prep_to(applicable-9, them-11)
dep(alone-14, them-13)
conj_and(specific-6, alone-14)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ is)
          (ADJP (JJ true)
            (PP (IN of)
              (NP (CD one)))))))
    (VP (VBZ is) (RB not)
      (ADJP (RB necessarily) (JJ true)
        (PP (IN of)
          (NP (DT another))))
      (SBAR (IN unless)
        (S
          (NP (DT that) (NN truth))
          (VP (VBZ has)
            (VP (VBN been)
              (VP (VBN substantiated)
                (PP (IN in)
                  (NP (JJ close) (NN examination)))))))))
    (. .)))

nsubj(true-3, What-1)
cop(true-3, is-2)
csubj(true-9, true-3)
prep_of(true-3, one-5)
cop(true-9, is-6)
neg(true-9, not-7)
advmod(true-9, necessarily-8)
root(ROOT-0, true-9)
prep_of(true-9, another-11)
mark(substantiated-17, unless-12)
det(truth-14, that-13)
nsubjpass(substantiated-17, truth-14)
aux(substantiated-17, has-15)
auxpass(substantiated-17, been-16)
advcl(true-9, substantiated-17)
amod(examination-20, close-19)
prep_in(substantiated-17, examination-20)

(ROOT
  (S
    (NP (DT The) (NN mean-spirited))
    (VP (MD will)
      (VP
        (VP (VB find)
          (NP
            (NP (NN something) (JJ true))
            (PP (IN of)
              (NP
                (NP (CD one))
                (CC or)
                (NP (DT a) (JJ few) (NNS individuals))))))
        (CC and)
        (ADVP (RB then))
        (VP (VB wash)
          (NP (NNS thousands))
          (PP (IN with)
            (NP (DT that) (VBN isolated) (NN truth)
              (S
                (VP (TO to)
                  (VP (VB advance)
                    (NP
                      (NP (PRP$ their) (NN agenda))
                      (PP (IN of)
                        (NP (NNS meanness))))))))))))
    (. .)))

det(mean-spirited-2, The-1)
nsubj(find-4, mean-spirited-2)
nsubj(wash-15, mean-spirited-2)
aux(find-4, will-3)
root(ROOT-0, find-4)
dobj(find-4, something-5)
amod(something-5, true-6)
prep_of(something-5, one-8)
det(individuals-12, a-10)
amod(individuals-12, few-11)
prep_of(something-5, individuals-12)
conj_or(one-8, individuals-12)
advmod(find-4, then-14)
conj_and(find-4, then-14)
conj_and(find-4, wash-15)
dobj(wash-15, thousands-16)
det(truth-20, that-18)
amod(truth-20, isolated-19)
prep_with(wash-15, truth-20)
aux(advance-22, to-21)
infmod(truth-20, advance-22)
poss(agenda-24, their-23)
dobj(advance-22, agenda-24)
prep_of(agenda-24, meanness-26)

(ROOT
  (S
    (NP
      (NP (DT Those)
        (ADJP (RB genuinely) (JJ interested)))
      (PP (IN in)
        (NP (DT the) (NN truth))))
    (VP (MD will)
      (VP
        (VP (VB seek)
          (NP (NN fact)))
        (CC and)
        (VP (VB apply)
          (SBAR
            (WHNP (WDT whatever))
            (S
              (S
                (NP (NN truth))
                (VP (MD can)
                  (VP (VB be)
                    (VP (VBN extracted)
                      (PP (IN from)
                        (NP (DT those) (NNS facts)))
                      (PP (TO to)
                        (NP
                          (NP (DT those))
                          (VP (VBN examined))))))))
              (CC and)
              (S
                (NP (PRP they))
                (ADJP (RB alone))))))))
    (. .)))

det(interested-3, Those-1)
advmod(interested-3, genuinely-2)
nsubj(seek-8, interested-3)
nsubj(apply-11, interested-3)
det(truth-6, the-5)
prep_in(interested-3, truth-6)
aux(seek-8, will-7)
root(ROOT-0, seek-8)
dobj(seek-8, fact-9)
conj_and(seek-8, apply-11)
dep(extracted-16, whatever-12)
nsubjpass(extracted-16, truth-13)
aux(extracted-16, can-14)
auxpass(extracted-16, be-15)
dep(apply-11, extracted-16)
det(facts-19, those-18)
prep_from(extracted-16, facts-19)
prep_to(extracted-16, those-21)
partmod(those-21, examined-22)
dep(alone-25, they-24)
dep(apply-11, alone-25)
conj_and(extracted-16, alone-25)

(ROOT
  (S
    (NP
      (NP (DT Those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP ask)
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBP believe)
                  (S
                    (NP (NNS homosexuals))
                    (VP (TO to)
                      (VP
                        (VP (VB be)
                          (ADJP
                            (ADJP
                              (ADVP (RB somehow))
                              (JJ sub-human)
                              (CC or)
                              (JJ dysfunctional)
                              (PP (IN in)
                                (NP (PRP$ their) (NNS abilities))))
                            (CC and)
                            (ADJP (JJR lesser)))
                          (PP (IN in)
                            (NP (NN value)))
                          (PP (TO to)
                            (NP (DT the) (NN heterosexual))))
                        (CC and)
                        (ADVP (RB then))
                        (VP (VB set)
                          (PRT (RP out))
                          (S
                            (VP (TO to)
                              (VP (VB find)))))))))))))))
    (VP (VBZ trivialities)
      (S
        (VP (TO to)
          (VP (VB support)
            (NP (PRP$ their) (NNS prejudices))))))
    (. .)))

nsubj(ask-3, Those-1)
nsubj(trivialities-29, Those-1)
xsubj(support-31, Those-1)
rcmod(Those-1, ask-3)
nsubj(believe-5, it-4)
ccomp(ask-3, believe-5)
nsubj(sub-human-10, homosexuals-6)
nsubj(dysfunctional-12, homosexuals-6)
nsubj(lesser-17, homosexuals-6)
nsubj(set-25, homosexuals-6)
xsubj(find-28, homosexuals-6)
aux(sub-human-10, to-7)
cop(sub-human-10, be-8)
advmod(sub-human-10, somehow-9)
xcomp(believe-5, sub-human-10)
xcomp(believe-5, dysfunctional-12)
conj_or(sub-human-10, dysfunctional-12)
poss(abilities-15, their-14)
prep_in(sub-human-10, abilities-15)
xcomp(believe-5, lesser-17)
conj_and(sub-human-10, lesser-17)
prep_in(sub-human-10, value-19)
det(heterosexual-22, the-21)
prep_to(sub-human-10, heterosexual-22)
xcomp(believe-5, then-24)
advmod(sub-human-10, then-24)
conj_and(sub-human-10, then-24)
xcomp(believe-5, set-25)
conj_and(sub-human-10, set-25)
prt(set-25, out-26)
aux(find-28, to-27)
xcomp(set-25, find-28)
root(ROOT-0, trivialities-29)
aux(support-31, to-30)
xcomp(trivialities-29, support-31)
poss(prejudices-33, their-32)
dobj(support-31, prejudices-33)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB apply)
          (NP
            (NP (DT those) (NNS truths))
            (PP (IN in)
              (NP (JJ general) (NNS ways))))
          (PP (TO to)
            (NP
              (NP (DT those))
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP perceive)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (NP
                            (NP (NNS members))
                            (PP (IN of)
                              (NP (DT a) (NN class)))))))))))))))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB be)
        (NP (DT a) (JJ tentative) (NN exercise))))
    (. .)))

aux(apply-2, To-1)
csubj(exercise-23, apply-2)
det(truths-4, those-3)
dobj(apply-2, truths-4)
amod(ways-7, general-6)
prep_in(truths-4, ways-7)
prep_to(apply-2, those-9)
dobj(perceive-11, those-9)
nsubj(perceive-11, you-10)
xsubj(members-14, you-10)
rcmod(those-9, perceive-11)
aux(members-14, to-12)
cop(members-14, be-13)
xcomp(perceive-11, members-14)
det(class-17, a-16)
prep_of(members-14, class-17)
aux(exercise-23, can-18)
advmod(exercise-23, only-19)
cop(exercise-23, be-20)
det(exercise-23, a-21)
amod(exercise-23, tentative-22)
root(ROOT-0, exercise-23)

(ROOT
  (S
    (NP (NNP Substantiation))
    (VP (VBZ is)
      (VP (VBN required)
        (SBAR (IN before)
          (S
            (NP (PRP one))
            (VP (MD can)
              (VP (VB justify)
                (S
                  (VP (VBG acting)
                    (PP (IN on)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP one))
                          (VP (VBZ believes)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (ADJP (JJ true)))))))))))))))))
    (. .)))

nsubjpass(required-3, Substantiation-1)
auxpass(required-3, is-2)
root(ROOT-0, required-3)
mark(justify-7, before-4)
nsubj(justify-7, one-5)
aux(justify-7, can-6)
advcl(required-3, justify-7)
xcomp(justify-7, acting-8)
dep(believes-12, what-10)
nsubj(believes-12, one-11)
xsubj(true-15, one-11)
prepc_on(acting-8, believes-12)
aux(true-15, to-13)
cop(true-15, be-14)
xcomp(believes-12, true-15)

(ROOT
  (FRAG
    (WHADVP (WRB Why))
    (RB not)
    (VP (VB ask)
      (NP (JJ such) (NNS generalities))
      (SBAR (IN as)
        (S
          (VP (VBP are)
            (NP
              (NP (NNS children))
              (PP (IN with)
                (NP
                  (NP (JJ heterosexual) (NNS parents))
                  (PP (IN at)
                    (NP (DT a) (NN disadvantage))))))))))
    (. ?)))

dep(not-2, Why-1)
root(ROOT-0, not-2)
dep(not-2, ask-3)
amod(generalities-5, such-4)
dobj(ask-3, generalities-5)
mark(children-8, as-6)
cop(children-8, are-7)
advcl(ask-3, children-8)
amod(parents-11, heterosexual-10)
prep_with(children-8, parents-11)
det(disadvantage-14, a-13)
prep_at(parents-11, disadvantage-14)

(ROOT
  (S
    (NP
      (NP (DT The) (NN question))
      (PP (IN as)
        (NP (JJ stated))))
    (VP (VBZ is)
      (ADJP (JJ unanswerable)))
    (. .)))

det(question-2, The-1)
nsubj(unanswerable-6, question-2)
prep_as(question-2, stated-4)
cop(unanswerable-6, is-5)
root(ROOT-0, unanswerable-6)

(ROOT
  (S
    (S
      (NP (DT Some) (NNS children))
      (VP
        (VP (VBP are))
        (CC and)
        (VP (MD will)
          (VP (VB be)))))
    (, ,)
    (NP (DT some))
    (VP (MD will) (RB not))
    (. .)))

det(children-2, Some-1)
nsubj(are-3, children-2)
nsubj(be-6, children-2)
ccomp(will-9, are-3)
aux(be-6, will-5)
conj_and(are-3, be-6)
ccomp(will-9, be-6)
nsubj(will-9, some-8)
root(ROOT-0, will-9)
neg(will-9, not-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ depends)
      (ADVP
        (ADVP (RB as) (RB much))
        (PP (IN on)
          (NP
            (NP (DT the) (NNS qualities))
            (PP (IN of)
              (NP (DT the) (NN child))))))
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBZ does)
            (PP (IN on)
              (NP
                (NP (DT the) (NNS qualities))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN parent))
                    (CC or)
                    (NP (NNS parents))))))))))
    (. .)))

nsubj(depends-2, It-1)
root(ROOT-0, depends-2)
advmod(much-4, as-3)
advmod(depends-2, much-4)
det(qualities-7, the-6)
prep_on(much-4, qualities-7)
det(child-10, the-9)
prep_of(qualities-7, child-10)
mark(does-13, as-11)
nsubj(does-13, it-12)
advcl(depends-2, does-13)
det(qualities-16, the-15)
prep_on(does-13, qualities-16)
det(parent-19, the-18)
prep_of(qualities-16, parent-19)
prep_of(qualities-16, parents-21)
conj_or(parent-19, parents-21)

(ROOT
  (SQ (VBP Are)
    (NP (JJ heterosexual) (NNS parents))
    (PP (IN at)
      (NP
        (NP (DT a) (NN disadvantage))
        (PP (IN with)
          (NP (JJ same-sex) (NNS children)))))
    (. ?)))

root(ROOT-0, Are-1)
amod(parents-3, heterosexual-2)
nsubj(Are-1, parents-3)
det(disadvantage-6, a-5)
prep_at(Are-1, disadvantage-6)
amod(children-9, same-sex-8)
prep_with(disadvantage-6, children-9)

(ROOT
  (S
    (S
      (NP (DT Some))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP are))))))
    (, ,)
    (NP (NNS others))
    (VP (VBP do) (RB not))
    (. .)))

nsubj(believe-2, Some-1)
ccomp(do-7, believe-2)
nsubj(are-4, they-3)
ccomp(believe-2, are-4)
nsubj(do-7, others-6)
root(ROOT-0, do-7)
neg(do-7, not-8)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (PRP it))
    (VP (VBZ depends)
      (PP (IN on)
        (NP
          (NP (DT the) (NNS qualities))
          (PP (IN of)
            (NP
              (NP
                (NP (NN parent))
                (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-)))
              (CC and)
              (NP (NN child)))))))
    (. .)))

advmod(depends-4, Again-1)
nsubj(depends-4, it-3)
root(ROOT-0, depends-4)
det(qualities-7, the-6)
prep_on(depends-4, qualities-7)
prep_of(qualities-7, parent-9)
dep(parent-9, s-11)
prep_of(qualities-7, child-14)
conj_and(parent-9, child-14)

(ROOT
  (SQ (VBP Are)
    (NP (JJ homosexual) (NNS parents))
    (PP (IN at)
      (NP
        (NP (DT a) (NN disadvantage))
        (PP (IN with)
          (NP (JJ same-sex) (NNS children)))))
    (. ?)))

root(ROOT-0, Are-1)
amod(parents-3, homosexual-2)
nsubj(Are-1, parents-3)
det(disadvantage-6, a-5)
prep_at(Are-1, disadvantage-6)
amod(children-9, same-sex-8)
prep_with(disadvantage-6, children-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NN problem))
      (PP (IN with)
        (NP (DT this) (NN thinking))))
    (VP (VBZ is)
      (NP
        (NP (PRP$ its) (NNS generalities))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (MD can) (RB not)
              (VP (VB fit)
                (NP (DT every) (JJ single) (JJ specific) (NN case) (JJ homosexual) (NN OR) (NN heterosexual))))))))
    (. .)))

det(problem-2, The-1)
nsubj(generalities-8, problem-2)
det(thinking-5, this-4)
prep_with(problem-2, thinking-5)
cop(generalities-8, is-6)
poss(generalities-8, its-7)
root(ROOT-0, generalities-8)
nsubj(fit-12, generalities-8)
aux(fit-12, can-10)
neg(fit-12, not-11)
rcmod(generalities-8, fit-12)
det(heterosexual-19, every-13)
amod(heterosexual-19, single-14)
amod(heterosexual-19, specific-15)
nn(heterosexual-19, case-16)
amod(heterosexual-19, homosexual-17)
nn(heterosexual-19, OR-18)
dobj(fit-12, heterosexual-19)

(ROOT
  (NP (JJ Same) (NN conclusion) (. .)))

amod(conclusion-2, Same-1)
root(ROOT-0, conclusion-2)

(ROOT
  (S
    (S
      (NP (JJ Aggressive) (NNS generalities))
      (VP (MD will)
        (VP (VB treat)
          (NP (DT some) (NNS individuals))
          (ADVP (RB too) (RB kindly)))))
    (CC and)
    (S
      (NP (DT some))
      (ADJP (RB too) (JJ savagely)))
    (. .)))

amod(generalities-2, Aggressive-1)
nsubj(treat-4, generalities-2)
nsubj(savagely-12, generalities-2)
aux(treat-4, will-3)
root(ROOT-0, treat-4)
det(individuals-6, some-5)
dobj(treat-4, individuals-6)
advmod(kindly-8, too-7)
advmod(treat-4, kindly-8)
dep(savagely-12, some-10)
advmod(savagely-12, too-11)
conj_and(treat-4, savagely-12)

(ROOT
  (S
    (VP (VB Keep)
      (NP (PRP$ your) (NNS prejudices))
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP like))))))
    (. .)))

root(ROOT-0, Keep-1)
poss(prejudices-3, your-2)
dep(Keep-1, prejudices-3)
dobj(Keep-1, all-4)
dobj(like-6, all-4)
nsubj(like-6, you-5)
rcmod(all-4, like-6)

(ROOT
  (S
    (S
      (VP (VBG Dressing)
        (NP (PRP$ your) (JJ ugly) (NNS prejudices))
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (PRP them)))))))
    (VP (VBP appear)
      (SBAR (IN as)
        (S
          (NP (JJ unbiased) (JJ scientific) (NN inquiry))
          (VP (VBZ works)
            (PP
              (PP (IN with)
                (NP (DT some)))
              (, ,) (RB not)
              (PP (IN with)
                (NP (NNS others))))))))
    (. .)))

csubj(appear-8, Dressing-1)
poss(prejudices-4, your-2)
amod(prejudices-4, ugly-3)
dobj(Dressing-1, prejudices-4)
aux(make-6, to-5)
xcomp(Dressing-1, make-6)
dobj(make-6, them-7)
root(ROOT-0, appear-8)
mark(works-13, as-9)
amod(inquiry-12, unbiased-10)
amod(inquiry-12, scientific-11)
nsubj(works-13, inquiry-12)
advcl(appear-8, works-13)
prep_with(works-13, some-15)
neg(works-13, not-17)
prep_with(works-13, others-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP believe)
      (S
        (NP (NNS homosexuals))
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ sub-human))))))
    (. ?)))

nsubj(believe-2, You-1)
root(ROOT-0, believe-2)
nsubj(sub-human-6, homosexuals-3)
aux(sub-human-6, to-4)
cop(sub-human-6, be-5)
xcomp(believe-2, sub-human-6)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP 'm)
        (ADJP (VBN convinced)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD 'll)
                (ADVP (RB never))
                (VP (VB prove)
                  (NP (PRP it))))))))
      (CC and)
      (VP (MD will)
        (VP (VB do)
          (S
            (NP (PRP yourself)
              (CC and)
              (NNS others))
            (ADJP (RBR more) (JJ harm)
              (PP (IN than)
                (ADJP (JJ good)))))
          (PP (IN in)
            (NP (DT the) (NN process))))))
    (. .)))

nsubjpass(convinced-3, I-1)
nsubj(do-11, I-1)
auxpass(convinced-3, 'm-2)
root(ROOT-0, convinced-3)
nsubj(prove-7, you-4)
aux(prove-7, 'll-5)
neg(prove-7, never-6)
dep(convinced-3, prove-7)
dobj(prove-7, it-8)
aux(do-11, will-10)
conj_and(convinced-3, do-11)
nsubj(harm-16, yourself-12)
conj_and(yourself-12, others-14)
nsubj(harm-16, others-14)
advmod(harm-16, more-15)
xcomp(do-11, harm-16)
prep_than(harm-16, good-18)
det(process-21, the-20)
prep_in(do-11, process-21)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (ADVP (RB authentically))
    (VP
      (VP (VB want)
        (NP (DT the) (NN truth)))
      (CC or)
      (VP (VB do)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP wish)
              (S
                (VP (TO to)
                  (VP (VB comfort)
                    (NP (PRP$ your) (JJ own) (JJ mean) (NN spirit))))))))))
    (. ?)))

aux(want-4, Do-1)
nsubj(want-4, you-2)
nsubj(do-8, you-2)
advmod(want-4, authentically-3)
root(ROOT-0, want-4)
det(truth-6, the-5)
dobj(want-4, truth-6)
conj_or(want-4, do-8)
nsubj(wish-10, you-9)
xsubj(comfort-12, you-9)
ccomp(do-8, wish-10)
aux(comfort-12, to-11)
xcomp(wish-10, comfort-12)
poss(spirit-16, your-13)
amod(spirit-16, own-14)
amod(spirit-16, mean-15)
dobj(comfort-12, spirit-16)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN one))
    (SQ
      (VP (MD should)
        (VP (VB ask)
          (S
            (S
              (VP (VBZ is) (: :)
                (SQ (VBZ Is)
                  (NP (DT this) (NN child))
                  (ADJP (JJ happy)))))
            (CC and)
            (S
              (VP (VBN cared)
                (PP (IN for)
                  (ADVP (RB adequately)))))))))
    (. ?)))

det(one-2, What-1)
nsubj(ask-4, one-2)
aux(ask-4, should-3)
root(ROOT-0, ask-4)
dep(ask-4, is-5)
cop(happy-10, Is-7)
det(child-9, this-8)
nsubj(happy-10, child-9)
parataxis(is-5, happy-10)
dep(ask-4, cared-12)
conj_and(is-5, cared-12)
prep(cared-12, for-13)
pcomp(for-13, adequately-14)

(ROOT
  (S
    (NP (DT The) (NNS answers))
    (VP
      (VP
        (ADVP (RB necessarily))
        (VBP depend)
        (PP (IN on)
          (NP (NNS specifics)))
        (S
          (VP (VBG belonging)
            (PP (TO to)
              (NP (RB no) (CD one) (RB else))))))
      (CC but)
      (VP
        (NP (DT the) (NN child))
        (PP (IN in)
          (NP (NN question)))))
    (. .)))

det(answers-2, The-1)
nsubj(depend-4, answers-2)
advmod(depend-4, necessarily-3)
root(ROOT-0, depend-4)
prep_on(depend-4, specifics-6)
xcomp(depend-4, belonging-7)
advmod(one-10, no-9)
prep_to(belonging-7, one-10)
advmod(one-10, else-11)
det(child-14, the-13)
conj_but(depend-4, child-14)
prep_in(child-14, question-16)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP we))
        (ADVP (DT all))
        (VP (VBP know))))
    (, ,)
    (NP (NN happiness))
    (VP (VBZ is)
      (ADVP (RB only))
      (NP (DT an) (JJ individual) (NN assessment)))
    (. .)))

mark(know-4, As-1)
nsubj(know-4, we-2)
advmod(know-4, all-3)
advcl(assessment-11, know-4)
nsubj(assessment-11, happiness-6)
cop(assessment-11, is-7)
advmod(assessment-11, only-8)
det(assessment-11, an-9)
amod(assessment-11, individual-10)
root(ROOT-0, assessment-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT an) (JJ elementary) (NN thing)
        (S
          (VP (TO to)
            (VP (VB show)
              (SBAR (IN that)
                (S
                  (NP (DT any) (JJ single) (NN heterosexual))
                  (VP (MD can)
                    (VP (VB be)
                      (ADJP
                        (NP (DT every) (RB bit))
                        (RB as) (JJ dysfunctional))
                      (PP (IN in)
                        (NP (NN parenting)))
                      (PP (IN as)
                        (NP (DT any) (JJ single) (NN homosexual))))))))))))
    (. .)))

nsubj(thing-5, It-1)
cop(thing-5, is-2)
det(thing-5, an-3)
amod(thing-5, elementary-4)
root(ROOT-0, thing-5)
aux(show-7, to-6)
infmod(thing-5, show-7)
complm(dysfunctional-17, that-8)
det(heterosexual-11, any-9)
amod(heterosexual-11, single-10)
nsubj(dysfunctional-17, heterosexual-11)
aux(dysfunctional-17, can-12)
cop(dysfunctional-17, be-13)
det(bit-15, every-14)
dep(dysfunctional-17, bit-15)
advmod(dysfunctional-17, as-16)
ccomp(show-7, dysfunctional-17)
prep_in(dysfunctional-17, parenting-19)
det(homosexual-23, any-21)
amod(homosexual-23, single-22)
prep_as(dysfunctional-17, homosexual-23)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN made)
          (PP
            (PP (IN for)
              (NP (PRP you)))
            (CC or)
            (PP (IN by)
              (NP (PRP you))))
          (PP (IN for)
            (NP (DT another))))))
    (. .)))

nsubjpass(made-5, It-1)
nsubjpass(made-5', It-1)
aux(made-5, can-2)
neg(made-5, not-3)
auxpass(made-5, be-4)
root(ROOT-0, made-5)
conj_or(made-5, made-5')
prep_for(made-5, you-7)
agent(made-5', you-10)
prep_for(made-5, another-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP (PRP it))
          (ADVP (RB also))
          (VP (VBZ elementary)
            (S
              (VP (TO to)
                (VP (VB show)
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT any) (JJ single) (JJ heterosexual) (NN couple))
                        (CC or)
                        (NP (NN group)))
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP
                            (NP (DT every) (RB bit))
                            (RB as) (JJ dysfunctional))
                          (PP (IN in)
                            (NP (NN parenting)))
                          (PP (IN as)
                            (NP
                              (NP (DT any) (JJ single) (JJ homosexual) (NN couple))
                              (CC or)
                              (NP (NN group)))))))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
nsubj(elementary-5, it-3)
xsubj(show-7, it-3)
advmod(elementary-5, also-4)
ccomp(believe-2, elementary-5)
aux(show-7, to-6)
xcomp(elementary-5, show-7)
complm(dysfunctional-20, that-8)
det(couple-12, any-9)
amod(couple-12, single-10)
amod(couple-12, heterosexual-11)
nsubj(dysfunctional-20, couple-12)
conj_or(couple-12, group-14)
nsubj(dysfunctional-20, group-14)
aux(dysfunctional-20, to-15)
cop(dysfunctional-20, be-16)
det(bit-18, every-17)
dep(dysfunctional-20, bit-18)
advmod(dysfunctional-20, as-19)
ccomp(show-7, dysfunctional-20)
xcomp(show-7, dysfunctional-20)
prep_in(dysfunctional-20, parenting-22)
det(couple-27, any-24)
amod(couple-27, single-25)
amod(couple-27, homosexual-26)
prep_as(dysfunctional-20, couple-27)
prep_as(dysfunctional-20, group-29)
conj_or(couple-27, group-29)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP (NN course)))
      (, ,)
      (NP
        (NP (DT the) (NN opposite))
        (PP (IN of)
          (NP (DT this))))
      (VP (VBZ is)
        (ADVP (RB also))
        (ADJP (RB likely) (JJ true))))
    (: :)
    (S
      (NP (EX there))
      (VP (VBP are)
        (NP
          (NP
            (NP
              (ADJP (RB very) (JJ capable))
              (NN heterosexual))
            (CC AND)
            (NP (JJ homosexual) (NNS couples)))
          (CC or)
          (NP
            (NP (NNS groups))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP it))
                (VP (VBZ comes)
                  (PP (TO to)
                    (NP (NN parenting))))))))))
    (. .)))

prep_of(true-11, course-2)
det(opposite-5, the-4)
nsubj(true-11, opposite-5)
prep_of(opposite-5, this-7)
cop(true-11, is-8)
advmod(true-11, also-9)
advmod(true-11, likely-10)
root(ROOT-0, true-11)
expl(are-14, there-13)
parataxis(true-11, are-14)
advmod(capable-16, very-15)
amod(heterosexual-17, capable-16)
nsubj(are-14, heterosexual-17)
amod(couples-20, homosexual-19)
nsubj(are-14, couples-20)
conj_and(heterosexual-17, couples-20)
nsubj(are-14, groups-22)
conj_or(heterosexual-17, groups-22)
tmod(comes-25, groups-22)
advmod(comes-25, when-23)
nsubj(comes-25, it-24)
dep(groups-22, comes-25)
prep_to(comes-25, parenting-27)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ matters)
          (NP
            (NP (JJS most))
            (PP (IN in)
              (NP (DT a) (JJ parent-child) (NN relationship)))))))
    (VP (VBZ is) (RB n't)
      (SBAR
        (WHNP (WP who))
        (S
          (NP (DT the) (NN parent))
          (VP (VBZ has)
            (NP
              (NP (JJ sexual) (NNS relations))
              (PP (IN with)
                (NP (IN but)))))))
      (SBAR (IN whether)
        (CC or)
        (RB not)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP
                (NP (JJ mutual) (NN love))
                (CC and)
                (NP (NN support)))
              (CC and)
              (NP
                (NP (JJ healthy) (NNS relations))
                (PP (IN between)
                  (NP (NN parent)
                    (CC and)
                    (NN child)))))))))
    (. .)))

nsubj(matters-2, What-1)
csubj(is-8, matters-2)
dobj(matters-2, most-3)
det(relationship-7, a-5)
amod(relationship-7, parent-child-6)
prep_in(most-3, relationship-7)
root(ROOT-0, is-8)
neg(is-8, n't-9)
dobj(has-13, who-10)
det(parent-12, the-11)
nsubj(has-13, parent-12)
ccomp(is-8, has-13)
amod(relations-15, sexual-14)
dobj(has-13, relations-15)
prep(relations-15, with-16)
pobj(with-16, but-17)
complm(is-22, whether-18)
ccomp(is-8, not-20)
conj_or(is-22, not-20)
expl(is-22, there-21)
ccomp(is-8, is-22)
amod(love-24, mutual-23)
nsubj(is-22, love-24)
nsubj(is-22, support-26)
conj_and(love-24, support-26)
amod(relations-29, healthy-28)
nsubj(is-22, relations-29)
conj_and(love-24, relations-29)
prep_between(relations-29, parent-31)
prep_between(relations-29, child-33)
conj_and(parent-31, child-33)

(ROOT
  (SQ (VBZ Is)
    (NP (DT the) (NN parent))
    (NP (DT an) (JJ adequate) (NN guardian))
    (. ?)))

cop(guardian-6, Is-1)
det(parent-3, the-2)
nsubj(guardian-6, parent-3)
det(guardian-6, an-4)
amod(guardian-6, adequate-5)
root(ROOT-0, guardian-6)

(ROOT
  (SQ (VBP Are)
    (NP
      (NP (DT the) (NN child) (POS 's))
      (NP (JJ emotional) (NNS needs)))
    (ADJP (JJ fulfilled))
    (. ?)))

cop(fulfilled-7, Are-1)
det(child-3, the-2)
nsubj(fulfilled-7, child-3)
possessive(child-3, 's-4)
amod(needs-6, emotional-5)
dep(child-3, needs-6)
root(ROOT-0, fulfilled-7)

