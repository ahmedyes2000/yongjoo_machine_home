(ROOT
  (S
    (S
      (SBAR (IN If)
        (FRAG
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP say))))))
      (VP (VBZ is)
        (ADJP (JJ true))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP
          (NP (DT a) (NN murderer) (, ,) (NN rapist) (, ,)
            (CC or)
            (NN someone))
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBZ is)
                  (NP
                    (NP (DT an) (JJ awful) (NN person))
                    (PP
                      (ADVP (DT all))
                      (IN of)
                      (NP (PRP$ their) (NNS lives)))))
                (, ,)
                (VP (VBZ repents)
                  (PP (IN before)
                    (NP (NN death))))
                (CC and)
                (VP (VBZ goes)
                  (PP (TO to)
                    (NP (NN heaven))))))))
        (, ,)
        (CC and)
        (NP
          (NP (RB yet) (DT a) (JJ gay) (NN man\/woman))
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBZ hurts)
                  (NP (DT no) (NN one)))
                (, ,)
                (CC but)
                (VP (VBZ seems)
                  (S
                    (VP (TO to)
                      (VP (`` ``) (VB offend) ('' '')
                        (NP (NNS people))
                        (PP (RB just) (IN by)
                          (S
                            (VP (VBG being)
                              (NP (PRP themselves)))))))))))))
        (, ,))
      (VP (MD can) (RB not)
        (VP (VB go)
          (PP (TO to)
            (NP (NN heaven)))
          (SBAR (IN because)
            (S
              (NP (PRP they))
              (VP (MD wo) (RB n't)
                (VP (VB repent))))))))
    (: ...)))

mark(say-4, If-1)
dobj(say-4, what-2)
nsubj(say-4, you-3)
csubj(true-6, say-4)
cop(true-6, is-5)
root(ROOT-0, true-6)
det(murderer-10, a-9)
nsubj(person-20, murderer-10)
nsubj(repents-26, murderer-10)
nsubj(goes-30, murderer-10)
nsubj(go-58, murderer-10)
conj_or(murderer-10, rapist-12)
nsubj(person-20, rapist-12)
nsubj(go-58, rapist-12)
conj_or(murderer-10, someone-15)
nsubj(person-20, someone-15)
nsubj(go-58, someone-15)
cop(person-20, is-17)
det(person-20, an-18)
amod(person-20, awful-19)
rcmod(murderer-10, person-20)
advmod(person-20, all-21)
poss(lives-24, their-23)
prep_of(person-20, lives-24)
rcmod(murderer-10, repents-26)
conj_and(person-20, repents-26)
prep_before(repents-26, death-28)
rcmod(murderer-10, goes-30)
conj_and(person-20, goes-30)
prep_to(goes-30, heaven-32)
advmod(man\/woman-38, yet-35)
det(man\/woman-38, a-36)
amod(man\/woman-38, gay-37)
conj_and(murderer-10, man\/woman-38)
nsubj(hurts-40, man\/woman-38)
nsubj(seems-45, man\/woman-38)
rcmod(man\/woman-38, hurts-40)
det(one-42, no-41)
dobj(hurts-40, one-42)
rcmod(man\/woman-38, seems-45)
conj_but(hurts-40, seems-45)
aux(offend-48, to-46)
xcomp(seems-45, offend-48)
dobj(offend-48, people-50)
advmod(offend-48, just-51)
cop(themselves-54, being-53)
prepc_by(offend-48, themselves-54)
aux(go-58, can-56)
neg(go-58, not-57)
conj_and(true-6, go-58)
prep_to(go-58, heaven-60)
mark(repent-65, because-61)
nsubj(repent-65, they-62)
aux(repent-65, wo-63)
neg(repent-65, n't-64)
advcl(go-58, repent-65)

(ROOT
  (S (: ...)
    (S
      (ADVP (RB then))
      (NP (DT that) (NNP God))
      (VP (VBZ is)
        (NP
          (NP (DT a)
            (ADJP (RB not) (DT a))
            (NN God))
          (PP (TO to)
            (NP (PRP me))))
        (ADVP (RB anymore))
        (, ,)
        (FRAG (CC but)
          (NP (DT the) (NNP devil)))))
    (. .)))

advmod(God-9, then-2)
det(God-4, that-3)
nsubj(God-9, God-4)
cop(God-9, is-5)
det(God-9, a-6)
neg(a-8, not-7)
amod(God-9, a-8)
root(ROOT-0, God-9)
prep_to(God-9, me-11)
advmod(God-9, anymore-12)
dep(devil-16, but-14)
det(devil-16, the-15)
dep(God-9, devil-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ religious))
      (SBAR (IN as)
        (S
          (NP (PRP you))
          (VP (MD can)
            (VP (VB tell))))))
    (. .)))

nsubj(religious-4, I-1)
cop(religious-4, 'm-2)
neg(religious-4, not-3)
root(ROOT-0, religious-4)
mark(tell-8, as-5)
nsubj(tell-8, you-6)
aux(tell-8, can-7)
advcl(religious-4, tell-8)

(ROOT
  (S
    (S
      (NP (DT This) (NN country))
      (VP (VBD was)
        (VP (VBN founded)
          (PP (IN on)
            (NP (JJ religious) (NN freedom))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB yet))
      (NP (PRP it))
      (VP (VBZ seems)
        (SBAR
          (S
            (NP (PRP we))
            (VP (VBP have)
              (NP (DT no) (NN freedom)
                (S (RB not)
                  (VP (TO to)
                    (VP (VB believe)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (NNS others))
                          (VP (VBP choose)
                            (SBAR (IN for)
                              (S
                                (NP (PRP us))
                                (VP (TO to)
                                  (VP (VB believe)))))))))))))))))
    (. .)))

det(country-2, This-1)
nsubjpass(founded-4, country-2)
auxpass(founded-4, was-3)
root(ROOT-0, founded-4)
amod(freedom-7, religious-6)
prep_on(founded-4, freedom-7)
advmod(seems-12, yet-10)
nsubj(seems-12, it-11)
conj_and(founded-4, seems-12)
nsubj(have-14, we-13)
ccomp(seems-12, have-14)
det(freedom-16, no-15)
dobj(have-14, freedom-16)
neg(believe-19, not-17)
aux(believe-19, to-18)
infmod(freedom-16, believe-19)
dep(choose-22, what-20)
dobj(believe-26, what-20)
nsubj(choose-22, others-21)
ccomp(believe-19, choose-22)
mark(believe-26, for-23)
nsubj(believe-26, us-24)
aux(believe-26, to-25)
advcl(choose-22, believe-26)
xcomp(choose-22, believe-26)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am) (RB not)
        (ADJP (`` ``) (FW saved) ('' ''))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBD have) (RB not) (`` ``)
        (VP (VBN found)
          (NP (NNS jesus))
          ('' '')
          (ADVP (RB yet)))))
    (. .)))

nsubj(saved-5, I-1)
cop(saved-5, am-2)
neg(saved-5, not-3)
root(ROOT-0, saved-5)
nsubj(found-12, I-8)
aux(found-12, have-9)
neg(found-12, not-10)
conj_and(saved-5, found-12)
dobj(found-12, jesus-13)
advmod(found-12, yet-15)

(ROOT
  (S
    (ADVP (RBS Most) (RB likely))
    (NP (PRP I))
    (ADVP (RB never))
    (VP (MD will))
    (. .)))

advmod(likely-2, Most-1)
advmod(will-5, likely-2)
nsubj(will-5, I-3)
neg(will-5, never-4)
root(ROOT-0, will-5)

(ROOT
  (S
    (ADVP (RB Maybe))
    (S
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ means)
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD will)
                  (VP (VB go)
                    (PP (TO to)
                      (NP (NN hell))))))))))
      (, ,)
      (ADVP (RB however))
      (, ,)
      (VP (VBZ is) (RB n't)
        (SBAR (IN that)
          (S
            (NP (PRP$ my) (NN choice))
            (VP (TO to)
              (VP (VB make)))))))
    (CC and)
    (S
      (NP (NNP God))
      (VP (VBZ 's)
        (NP
          (NP (NN responsibility))
          (, ,) (RB not)
          (NP (NN everyone) (RB else) (POS 's)))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB judge)
              (NP (PRP me)))))))
    (. ?)))

advmod(is-12, Maybe-1)
nsubj(means-3, that-2)
dep(is-12, means-3)
nsubj(go-6, I-4)
aux(go-6, will-5)
ccomp(means-3, go-6)
prep_to(go-6, hell-8)
advmod(is-12, however-10)
root(ROOT-0, is-12)
neg(is-12, n't-13)
complm(make-18, that-14)
poss(choice-16, my-15)
nsubj(make-18, choice-16)
aux(make-18, to-17)
ccomp(is-12, make-18)
xcomp(is-12, make-18)
nsubj(responsibility-22, God-20)
xsubj(judge-30, God-20)
cop(responsibility-22, 's-21)
conj_and(is-12, responsibility-22)
neg(responsibility-22, not-24)
poss(responsibility-22, everyone-25)
advmod(everyone-25, else-26)
aux(judge-30, to-29)
xcomp(responsibility-22, judge-30)
dobj(judge-30, me-31)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (PRP it))
        (VP (VBZ seems)
          (PP (TO to)
            (NP (PRP me)))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PDT all) (DT the) (JJ religious) (NNS followers))
              (VP (VBP seem)
                (S
                  (VP (TO to)
                    (VP (VB think)
                      (NP (NNP God)))))))))))
    (VP
      (VP (MD ca) (RB n't)
        (VP (VB handle)
          (NP (PRP$ his) (NN job))))
      (, ,)
      (CC and)
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (PDT all) (DT the) (NN judging))
              (PP (IN for)
                (NP (PRP him))))))))
    (. .)))

mark(seems-3, Because-1)
nsubj(seems-3, it-2)
csubj(handle-18, seems-3)
csubj(want-23, seems-3)
prep_to(seems-3, me-5)
complm(seem-12, that-7)
predet(followers-11, all-8)
det(followers-11, the-9)
amod(followers-11, religious-10)
nsubj(seem-12, followers-11)
xsubj(think-14, followers-11)
ccomp(seems-3, seem-12)
aux(think-14, to-13)
xcomp(seem-12, think-14)
dobj(think-14, God-15)
aux(handle-18, ca-16)
neg(handle-18, n't-17)
root(ROOT-0, handle-18)
poss(job-20, his-19)
dobj(handle-18, job-20)
conj_and(handle-18, want-23)
aux(do-25, to-24)
xcomp(want-23, do-25)
predet(judging-28, all-26)
det(judging-28, the-27)
dobj(do-25, judging-28)
prep_for(do-25, him-30)

(ROOT
  (SBARQ
    (FRAG (RB Well))
    (, ,)
    (SBARQ
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (ADVP (RB truly))
          (VP (VBP believe)
            (SBAR
              (S
                (NP (PRP he))
                (VP
                  (VP (VBZ is) (RB all)
                    (ADJP (JJ powerful)))
                  (CC and)
                  (VP (VBZ is)
                    (NP (DT the) (NN one))
                    (S
                      (VP (TO to)
                        (VP (VB judge)
                          (NP (PRP him))))))))))))
      (, ,)
      (WHADVP (WRB why))
      (SQ (MD ca) (RB n't)
        (NP (PRP we))
        (VP (VB leave)
          (NP (NNS homosexuals))
          (ADVP (RB alone)))))
    (. ?)))

dep(leave-23, Well-1)
mark(believe-6, if-3)
nsubj(believe-6, you-4)
advmod(believe-6, truly-5)
advcl(leave-23, believe-6)
nsubj(powerful-10, he-7)
cop(powerful-10, is-8)
advmod(powerful-10, all-9)
ccomp(believe-6, powerful-10)
cop(one-14, is-12)
det(one-14, the-13)
ccomp(believe-6, one-14)
conj_and(powerful-10, one-14)
aux(judge-16, to-15)
xcomp(one-14, judge-16)
dobj(judge-16, him-17)
advmod(leave-23, why-19)
aux(leave-23, ca-20)
neg(leave-23, n't-21)
nsubj(leave-23, we-22)
root(ROOT-0, leave-23)
dobj(leave-23, homosexuals-24)
advmod(leave-23, alone-25)

(ROOT
  (S
    (VP
      (VP (VB Go)
        (PP (IN after)
          (NP
            (NP (DT the)
              (ADJP (RB really) (JJ bad))
              (NNS people))
            (, ,)
            (SBAR
              (WHNP (WP who))
              (S
                (VP
                  (VP (VBD hurt)
                    (NP (JJ other) (NNS people))
                    (NP (PDT all) (DT the) (NN time)))
                  (, ,)
                  (CC and)
                  (ADVP (RB then))
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (DT that) (NN situation))
                      (VP (VBZ is)
                        (VP (VBN taken)
                          (NP (VB care) (IN of))))))))))))
      (, ,) (RB then)
      (VP (VB take)
        (NP
          (NP (NN care))
          (PP (IN of)
            (NP (DT the) (JJR lesser) (NNS evils))))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP see)
              (NP (PRP them)))))))
    (. .)))

root(ROOT-0, Go-1)
det(people-6, the-3)
advmod(bad-5, really-4)
amod(people-6, bad-5)
prep_after(Go-1, people-6)
nsubj(hurt-9, people-6)
rcmod(people-6, hurt-9)
amod(people-11, other-10)
iobj(hurt-9, people-11)
predet(time-14, all-12)
det(time-14, the-13)
dobj(hurt-9, time-14)
rcmod(people-6, then-17)
advmod(hurt-9, then-17)
conj_and(hurt-9, then-17)
advmod(taken-22, when-18)
det(situation-20, that-19)
nsubjpass(taken-22, situation-20)
auxpass(taken-22, is-21)
rcmod(people-6, taken-22)
advcl(hurt-9, taken-22)
conj_and(hurt-9, taken-22)
dep(of-24, care-23)
dobj(taken-22, of-24)
advmod(Go-1, then-26)
dep(Go-1, take-27)
dobj(take-27, care-28)
det(evils-32, the-30)
amod(evils-32, lesser-31)
prep_of(care-28, evils-32)
mark(see-35, as-33)
nsubj(see-35, you-34)
advcl(take-27, see-35)
dobj(see-35, them-36)

