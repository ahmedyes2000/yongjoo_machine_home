(ROOT
  (S
    (S
      (S
        (VP (TO To)
          (ADVP (RB merely))
          (VP (VB say) ('' '')
            (NP (PRP We)))))
      (VP (VBP do) (RB not)
        (VP (VB know))))
    (, ,)
    (ADVP (RB therefore))
    (S
      (INTJ (UH yes))
      (, ,)
      (NP (NNS people))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN born)
            (NP
              (NP (JJ gay))
              ('' '')
              (SBAR
                (S
                  (VP (VBZ is) (RB not)
                    (NP
                      (NP (DT an) (NN argument))
                      (PP (IN for)
                        (NP (DT this) (NN position))))))))))))
    (. .)))

aux(say-3, To-1)
advmod(say-3, merely-2)
csubj(know-8, say-3)
dobj(say-3, We-5)
aux(know-8, do-6)
neg(know-8, not-7)
root(ROOT-0, know-8)
advmod(know-8, therefore-10)
dep(born-16, yes-11)
nsubjpass(born-16, people-13)
aux(born-16, can-14)
auxpass(born-16, be-15)
ccomp(know-8, born-16)
dobj(born-16, gay-17)
cop(argument-22, is-19)
neg(argument-22, not-20)
det(argument-22, an-21)
rcmod(gay-17, argument-22)
det(position-25, this-24)
prep_for(argument-22, position-25)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (NNS others))
        (VP (VBP have)
          (VP (VBN pointed)
            (PRT (RP out))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RBR more) (RB closely))
      (NP
        (NP (DT a) (NN refusal))
        (PP (IN of)
          (NP
            (NP (DT the) (NN position))
            (PP (IN than)
              (NP (DT a) (NN support) (RB thereof)))))))
    (. .)))

mark(pointed-4, As-1)
nsubj(pointed-4, others-2)
aux(pointed-4, have-3)
advcl(refusal-12, pointed-4)
prt(pointed-4, out-5)
nsubj(refusal-12, it-7)
cop(refusal-12, is-8)
advmod(closely-10, more-9)
advmod(refusal-12, closely-10)
det(refusal-12, a-11)
root(ROOT-0, refusal-12)
det(position-15, the-14)
prep_of(refusal-12, position-15)
det(support-18, a-17)
prep_than(position-15, support-18)
advmod(support-18, thereof-19)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBZ portend)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (JJ only) (NN conclusion))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD can)
                  (VP (VB come)
                    (PP (IN from)
                      (NP (DT this) (NN debate))))))))
          (VP (VBZ is)
            (NP
              (NP (DT both) (NNS sides))
              (PRN (-LRB- -LRB-)
                (CC and)
                (NP
                  (NP (NNS people))
                  (PP (IN in)
                    (NP (DT the) (NN middle))))
                (-RRB- -RRB-))
              (SBAR
                (S
                  (VP (TO to)
                    (VP
                      (VP
                        (ADVP (RB just))
                        (VB throw)
                        (PRT (RP up))
                        (NP (PRP$ their) (NNS hands)))
                      (CC and)
                      (VP (VB say)
                        (NP
                          (NP (DT some) (NN form))
                          (PP (IN of)))
                        ('' '')
                        (ADVP (RB So)))
                      (NP (WP what)))))))))))
    (. ?)))

nsubj(portend-2, I-1)
root(ROOT-0, portend-2)
complm(sides-15, that-3)
det(conclusion-6, the-4)
amod(conclusion-6, only-5)
nsubj(come-9, conclusion-6)
nsubj(sides-15, conclusion-6)
aux(come-9, can-8)
rcmod(conclusion-6, come-9)
det(debate-12, this-11)
prep_from(come-9, debate-12)
cop(sides-15, is-13)
det(sides-15, both-14)
ccomp(portend-2, sides-15)
dep(people-18, and-17)
dep(sides-15, people-18)
det(middle-21, the-20)
prep_in(people-18, middle-21)
aux(throw-25, to-23)
advmod(throw-25, just-24)
infmod(sides-15, throw-25)
prt(throw-25, up-26)
poss(hands-28, their-27)
dobj(throw-25, hands-28)
infmod(sides-15, say-30)
conj_and(throw-25, say-30)
det(form-32, some-31)
dobj(say-30, form-32)
prep(form-32, of-33)
advmod(say-30, So-35)
dobj(throw-25, what-36)

(ROOT
  (SQ (VBP Are)
    (NP (NNS people))
    (VP (VBN born)
      (NP (JJ gay)))
    (. ?)))

auxpass(born-3, Are-1)
nsubjpass(born-3, people-2)
root(ROOT-0, born-3)
dobj(born-3, gay-4)

(ROOT
  (NP
    (NP
      (NP (NNP Yes))
      (, ,)
      (RRC
        (ADVP (RB so))
        (NP (WP what))))
    (. ?)))

root(ROOT-0, Yes-1)
advmod(what-4, so-3)
rcmod(Yes-1, what-4)

(ROOT
  (SQ (VBP Are)
    (NP (NNS people))
    (VP (VBN born)
      (NP (JJ gay)))
    (. ?)))

auxpass(born-3, Are-1)
nsubjpass(born-3, people-2)
root(ROOT-0, born-3)
dobj(born-3, gay-4)

(ROOT
  (NP
    (NP
      (NP (NNP No))
      (, ,)
      (RRC
        (ADVP (RB so))
        (NP (WP what))))
    (. ?)))

root(ROOT-0, No-1)
advmod(what-4, so-3)
rcmod(No-1, what-4)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB completely))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP (JJ human) (NN sexuality))
          (VP (VBZ is) (RB not)
            (ADVP (RB binary))
            (SBAR (IN by)
              (S
                (S
                  (NP (DT any))
                  (VP (VBZ means)))
                (: ;)
                (S (CC but)
                  (NP (DT this))
                  (VP (VBZ does) (RB not)
                    (VP (VB attempt)
                      (S
                        (VP (TO to)
                          (VP (VB answer)
                            (NP (DT the) (NN question))))))))))
            (, ,) (`` ``)
            (SQ (VBP Are)
              (NP (NNS people))
              (VP (VBN born)
                (NP (JJ gay))))))))
    (. ?)))

nsubj(agree-3, I-1)
advmod(agree-3, completely-2)
root(ROOT-0, agree-3)
complm(is-7, that-4)
amod(sexuality-6, human-5)
nsubj(is-7, sexuality-6)
ccomp(agree-3, is-7)
neg(is-7, not-8)
advmod(is-7, binary-9)
mark(means-12, by-10)
nsubj(means-12, any-11)
advcl(is-7, means-12)
cc(attempt-18, but-14)
nsubj(attempt-18, this-15)
xsubj(answer-20, this-15)
aux(attempt-18, does-16)
neg(attempt-18, not-17)
parataxis(means-12, attempt-18)
aux(answer-20, to-19)
xcomp(attempt-18, answer-20)
det(question-22, the-21)
dobj(answer-20, question-22)
auxpass(born-27, Are-25)
nsubjpass(born-27, people-26)
dep(is-7, born-27)
dobj(born-27, gay-28)

