(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP$ my))
    (VP (VBP view)
      (PP (IN on)
        (NP (DT the) (NN topic)))
      (NP (PRP itself)))
    (. .)))

advmod(view-4, Now-1)
nsubj(view-4, my-3)
root(ROOT-0, view-4)
det(topic-7, the-6)
prep_on(view-4, topic-7)
dobj(view-4, itself-8)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP
          (NP (CD three) (NNS points))
          (: :)
          (NP (NNP Point) (CD one)))))
    (: :)
    (S
      (S
        (NP (PRP I))
        (VP (VBP am)
          (NP (DT a) (NN purist))))
      (CC and)
      (S
        (NP (PRP I))
        (VP (VBP want)
          (S
            (NP (DT the) (NN word) (`` ``) (NN marriage) ('' ''))
            (VP (TO to)
              (VP (VB mean)
                (SBAR
                  (WHADJP (RB exactly) (WP what))
                  (S
                    (NP
                      (NP (DT those))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBD invented)
                            (NP (DT the) (NN word) (NNS years))
                            (ADVP (IN ago))))))
                    (VP (VBD defined)
                      (S
                        (NP (PRP it))
                        (VP (TO to)
                          (VP (VB be) (, ,) (`` ``)
                            (FRAG
                              (NP (DT A) (JJ civil) (NN union))
                              (PP (IN between)
                                (NP
                                  (NP (DT a) (NN man))
                                  (CC and)
                                  (NP (DT a) (NN woman)))))))))))))))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
num(points-4, three-3)
dobj(have-2, points-4)
dep(points-4, Point-6)
num(Point-6, one-7)
nsubj(purist-12, I-9)
cop(purist-12, am-10)
det(purist-12, a-11)
parataxis(have-2, purist-12)
nsubj(want-15, I-14)
parataxis(have-2, want-15)
conj_and(purist-12, want-15)
det(marriage-19, the-16)
nn(marriage-19, word-17)
nsubj(mean-22, marriage-19)
aux(mean-22, to-21)
xcomp(want-15, mean-22)
dep(defined-32, exactly-23)
dep(exactly-23, what-24)
nsubj(invented-27, those-25)
nsubj(defined-32, those-25)
rcmod(those-25, invented-27)
det(years-30, the-28)
nn(years-30, word-29)
tmod(invented-27, years-30)
advmod(invented-27, ago-31)
ccomp(mean-22, defined-32)
nsubj(be-35, it-33)
aux(be-35, to-34)
xcomp(defined-32, be-35)
det(union-40, A-38)
amod(union-40, civil-39)
dep(be-35, union-40)
dep(union-40, between-41)
det(man-43, a-42)
pobj(between-41, man-43)
det(woman-46, a-45)
pobj(between-41, woman-46)
conj_and(man-43, woman-46)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB change)
              (NP
                (NP (DT the) (NN meaning))
                (PP (IN of)
                  (NP (DT the) (NN word))))
              (PP (IN to) ('' '')
                (NP
                  (NP (DT The) (VBG loving) (NN union))
                  (PP (IN between)
                    (NP (CD two) (NNS individuals))))))))))
    (. .)))

nsubj(want-5, I-2)
xsubj(change-7, I-2)
aux(want-5, do-3)
neg(want-5, n't-4)
root(ROOT-0, want-5)
aux(change-7, to-6)
xcomp(want-5, change-7)
det(meaning-9, the-8)
dobj(change-7, meaning-9)
det(word-12, the-11)
prep_of(meaning-9, word-12)
det(union-17, The-15)
amod(union-17, loving-16)
prep_to(change-7, union-17)
num(individuals-20, two-19)
prep_between(union-17, individuals-20)

(ROOT
  (S ('' '')
    (PP (IN Point)
      (NP
        (NP (CD two))
        (: :)
        (SBAR (RB Just) (IN because)
          (S
            (NP (NN someone))
            (VP (VBZ wants)
              (NP (NN something)))))))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (VP (VBN entitled)
                (PP (TO to)
                  (NP (PRP it)))))))))
    (. .)))

prep_point(mean-12, two-3)
advmod(wants-8, Just-5)
dep(wants-8, because-6)
nsubj(wants-8, someone-7)
dep(two-3, wants-8)
dobj(wants-8, something-9)
aux(mean-12, does-10)
neg(mean-12, n't-11)
root(ROOT-0, mean-12)
complm(entitled-16, that-13)
nsubjpass(entitled-16, they-14)
auxpass(entitled-16, are-15)
ccomp(mean-12, entitled-16)
prep_to(entitled-16, it-18)

(ROOT
  (S (IN So) (, ,)
    (SBAR
      (ADVP (DT no) (NN matter))
      (WHADVP (WRB how))
      (S
        (NP (JJ noble) (NNS gays))
        (VP (MD may)
          (VP (VB be)))))
    (, ,)
    (ADVP (DT no) (NN matter)
      (SBAR
        (WHADJP (WRB how) (JJ important))
        (S
          (NP (DT the) (NN word))
          (VP (VBZ is)
            (PP (TO to)
              (NP (PRP them)))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are) (RB not)
      (ADJP (VBN entitled)
        (PP (TO to)
          (NP (PRP it)))))
    (. .)))

dep(entitled-24, So-1)
dep(matter-4, no-3)
advmod(be-9, matter-4)
advmod(be-9, how-5)
amod(gays-7, noble-6)
nsubj(be-9, gays-7)
aux(be-9, may-8)
dep(entitled-24, be-9)
dep(matter-12, no-11)
advmod(entitled-24, matter-12)
advmod(important-14, how-13)
dep(is-17, important-14)
det(word-16, the-15)
nsubj(is-17, word-16)
dep(matter-12, is-17)
prep_to(is-17, them-19)
nsubjpass(entitled-24, they-21)
auxpass(entitled-24, are-22)
neg(entitled-24, not-23)
root(ROOT-0, entitled-24)
prep_to(entitled-24, it-26)

(ROOT
  (NP
    (NP (NNP Point) (CD three))
    (: :)
    (S
      (NP (NNP Gays))
      (VP (VBD started)
        (NP (DT this) (`` ``) (NN war) ('' ''))
        (PP (IN by)
          (S
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB take)
                    (NP
                      (NP (NN something))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP
                            (VP (VBP feel)
                              (ADVP (RB strongly))
                              (PP (IN about)))
                            (CC but)
                            (VP (VBP are) (RB not)
                              (ADJP (RB necessarily) (VBN entitled)
                                (PP (TO to))))))))))))))))
    (. .)))

root(ROOT-0, Point-1)
num(Point-1, three-2)
nsubj(started-5, Gays-4)
dep(Point-1, started-5)
det(war-8, this-6)
dobj(started-5, war-8)
prepc_by(started-5, trying-11)
aux(take-13, to-12)
xcomp(trying-11, take-13)
dobj(take-13, something-14)
prep_about(feel-16, something-14)
nsubj(feel-16, they-15)
nsubjpass(entitled-23, they-15)
rcmod(something-14, feel-16)
advmod(feel-16, strongly-17)
auxpass(entitled-23, are-20)
neg(entitled-23, not-21)
advmod(entitled-23, necessarily-22)
rcmod(something-14, entitled-23)
conj_but(feel-16, entitled-23)
prep(entitled-23, to-24)

(ROOT
  (S
    (NP (NNS Straights))
    (VP (VBD responded)
      (PP (IN like)
        (NP
          (NP (NN anyone))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ has)
                (VP (VBN had)
                  (S
                    (NP (NN someone))
                    (VP (VB try)
                      (S
                        (VP (TO to)
                          (VP (VB take)
                            (NP (NN something))
                            (ADVP (RB away)))))))
                  (SBAR (IN that)
                    (S
                      (VP (VBZ does) (RB n't)
                        (ADVP (RB necessarily))
                        (VP (VB belonged)
                          (PP (TO to)
                            (NP (PRP them))))))))))))))
    (. .)))

nsubj(responded-2, Straights-1)
root(ROOT-0, responded-2)
prep_like(responded-2, anyone-4)
nsubj(had-7, anyone-4)
aux(had-7, has-6)
rcmod(anyone-4, had-7)
nsubj(try-9, someone-8)
xsubj(take-11, someone-8)
ccomp(had-7, try-9)
aux(take-11, to-10)
xcomp(try-9, take-11)
dobj(take-11, something-12)
advmod(take-11, away-13)
complm(belonged-18, that-14)
aux(belonged-18, does-15)
neg(belonged-18, n't-16)
advmod(belonged-18, necessarily-17)
ccomp(had-7, belonged-18)
prep_to(belonged-18, them-20)

(ROOT
  (S
    (NP (NNS Gays))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB force)
            (S
              (NP (NNS straights))
              (VP (TO to)
                (VP (VB share)
                  (NP (DT the) (NN word)))))))))
    (. .)))

nsubj(want-2, Gays-1)
xsubj(force-4, Gays-1)
root(ROOT-0, want-2)
aux(force-4, to-3)
xcomp(want-2, force-4)
nsubj(share-7, straights-5)
aux(share-7, to-6)
xcomp(force-4, share-7)
det(word-9, the-8)
dobj(share-7, word-9)

(ROOT
  (S (CC But)
    (S
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB force)
              (NP (NN someone))
              (PP (IN into)
                (S
                  (VP (VBG doing)
                    (NP
                      (NP (NN something))
                      (SBAR
                        (S
                          (NP (PRP they))
                          (VP (VBP do) (RB n't)
                            (VP (VB want)
                              (ADVP (RB usually)))))))))))))))
    (VP (VBZ results)
      (PP (IN in)
        (S
          (NP (PRP them))
          (VP (VBG resisting)
            (PP (IN with)
              (NP
                (ADJP (JJ equal)
                  (CC or)
                  (JJR greater))
                (NN force)))))))
    (. .)))

cc(results-14, But-1)
csubj(results-14, trying-2)
aux(force-4, to-3)
xcomp(trying-2, force-4)
dobj(force-4, someone-5)
prepc_into(force-4, doing-7)
dobj(doing-7, something-8)
dobj(want-12, something-8)
nsubj(want-12, they-9)
aux(want-12, do-10)
neg(want-12, n't-11)
rcmod(something-8, want-12)
advmod(want-12, usually-13)
root(ROOT-0, results-14)
nsubj(resisting-17, them-16)
prepc_in(results-14, resisting-17)
amod(force-22, equal-19)
conj_or(equal-19, greater-21)
amod(force-22, greater-21)
prep_with(resisting-17, force-22)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB thus))
    (VP (VBP propose)
      (SBAR (IN that)
        (S
          (NP (NNS gays))
          (VP
            (VP (VB create)
              (NP (DT a) (JJ new) (NN word)))
            (CC and)
            (VP (VB stop)
              (NP (DT this) (`` ``) (NN war)))))))
    (. .)))

nsubj(propose-3, I-1)
advmod(propose-3, thus-2)
root(ROOT-0, propose-3)
complm(create-6, that-4)
nsubj(create-6, gays-5)
nsubj(stop-11, gays-5)
ccomp(propose-3, create-6)
det(word-9, a-7)
amod(word-9, new-8)
dobj(create-6, word-9)
ccomp(propose-3, stop-11)
conj_and(create-6, stop-11)
det(war-14, this-12)
dobj(stop-11, war-14)

