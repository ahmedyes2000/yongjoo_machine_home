(ROOT
  (FRAG
    (NP (NNP RE))
    (: :) (`` ``)
    (S (CC So)
      (NP (NNS children))
      (VP (MD should) (RB not)
        (VP (VB be)
          (VP (VBN placed)
            (PP (IN in)
              (NP
                (ADJP (RB potentially) (JJ loving))
                (NNS homes)))))))
    (. ?)))

root(ROOT-0, RE-1)
cc(placed-9, So-4)
nsubjpass(placed-9, children-5)
aux(placed-9, should-6)
neg(placed-9, not-7)
auxpass(placed-9, be-8)
dep(RE-1, placed-9)
advmod(loving-12, potentially-11)
amod(homes-13, loving-12)
prep_in(placed-9, homes-13)

(ROOT
  (S (`` ``)
    (NP (NNP Children))
    (VP (MD should)
      (VP (VB be)
        (PP (IN in)
          (NP (NNS homes)))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP they))
            (VP (VBP have)
              (NP (DT some) (NN chance)
                (S
                  (VP (TO to)
                    (VP (VB grow)
                      (PRT (RP up))
                      (ADJP (JJ normal)))))))))))
    (. .)))

nsubj(be-4, Children-2)
aux(be-4, should-3)
root(ROOT-0, be-4)
prep_in(be-4, homes-6)
advmod(have-9, where-7)
nsubj(have-9, they-8)
advcl(be-4, have-9)
det(chance-11, some-10)
dobj(have-9, chance-11)
aux(grow-13, to-12)
infmod(chance-11, grow-13)
prt(grow-13, up-14)
acomp(grow-13, normal-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (NP
            (NP (DT a) (JJ gay) (NN penguin))
            (PP (IN for)
              (NP (DT a) (NN pet)))))))
    (, ,)
    (VP (VB go)
      (PP (IN for)
        (NP (PRP it))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
advcl(go-11, want-3)
det(penguin-6, a-4)
amod(penguin-6, gay-5)
dobj(want-3, penguin-6)
det(pet-9, a-8)
prep_for(penguin-6, pet-9)
root(ROOT-0, go-11)
prep_for(go-11, it-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (NP (RB absolutely) (DT no) (NN right)
        (S
          (VP (TO to)
            (VP (VB impose)
              (NP (PRP$ your) (NN will)
                (CC and)
                (NN lifestyle))
              (PP (IN on)
                (NP (DT an) (JJ innocent) (NN child))))))))
    (. .)))

nsubj(have-2, You-1)
root(ROOT-0, have-2)
advmod(right-5, absolutely-3)
det(right-5, no-4)
dobj(have-2, right-5)
aux(impose-7, to-6)
infmod(right-5, impose-7)
poss(will-9, your-8)
dobj(impose-7, will-9)
dobj(impose-7, lifestyle-11)
conj_and(will-9, lifestyle-11)
det(child-15, an-13)
amod(child-15, innocent-14)
prep_on(impose-7, child-15)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (JJ lame) (NN rap))
      (PP (IN about)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (PRP it))
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ okay)
                  (PP (IN because)
                    (NP
                      (NP (JJ other) (NNS people))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBP are) (RB n't)
                            (NP (JJ gay) (NN screw))
                            (PP (IN up)
                              (NP
                                (NP (NNS children) (POS 's))
                                (NNS lives)))))))))))))))
    (VP (VBZ is)
      (ADJP (JJ disgusting)))
    (. .)))

poss(rap-3, Your-1)
amod(rap-3, lame-2)
nsubj(disgusting-23, rap-3)
advmod(okay-9, how-5)
nsubj(okay-9, it-6)
aux(okay-9, should-7)
cop(okay-9, be-8)
prepc_about(rap-3, okay-9)
amod(people-12, other-11)
prep_because(okay-9, people-12)
nsubj(screw-17, people-12)
cop(screw-17, are-14)
neg(screw-17, n't-15)
amod(screw-17, gay-16)
rcmod(people-12, screw-17)
poss(lives-21, children-19)
prep_up(screw-17, lives-21)
cop(disgusting-23, is-22)
root(ROOT-0, disgusting-23)

(ROOT
  (S
    (NP (CD Two) (NNS wrongs))
    (VP (VBP do) (RB n't)
      (VP (VB make)
        (NP (DT a) (NN right))))
    (. .)))

num(wrongs-2, Two-1)
nsubj(make-5, wrongs-2)
aux(make-5, do-3)
neg(make-5, n't-4)
root(ROOT-0, make-5)
det(right-7, a-6)
dobj(make-5, right-7)

(ROOT
  (NP
    (NP (PRP$ My) (JJ last) (NN post))
    (PP (IN on)
      (NP (DT the) (NN topic)))
    (. .)))

poss(post-3, My-1)
amod(post-3, last-2)
root(ROOT-0, post-3)
det(topic-6, the-5)
prep_on(post-3, topic-6)

