(ROOT
  (S
    (S
      (INTJ (UH Well))
      (, ,)
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (ADJP (RB entirely) (JJ sure)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP you))
              (VP (VBP mean)
                (ADVP (RB now))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP guess)
        (SBAR (IN that)
          (S
            (NP (`` ``) (NN divorce) ('' ''))
            (VP (MD would)
              (VP (VB have)
                (S
                  (VP (TO to)
                    (VP
                      (ADVP (RB also))
                      (VB have)
                      (NP (DT an) (JJ alternate) (NN name)))))
                (SBAR (IN because)
                  (S
                    (NP (PRP it))
                    (VP (VBZ deals)
                      (PP (IN with)
                        (NP
                          (NP (DT the) (NN separation))
                          (PP (IN of)
                            (NP (CD two) (`` ``) (JJ married) ('' '') (NNS people))))))))))))))
    (. .)))

dep(sure-7, Well-1)
nsubj(sure-7, I-3)
cop(sure-7, 'm-4)
neg(sure-7, not-5)
advmod(sure-7, entirely-6)
root(ROOT-0, sure-7)
dobj(mean-10, what-8)
nsubj(mean-10, you-9)
dep(sure-7, mean-10)
advmod(mean-10, now-11)
nsubj(guess-15, I-14)
conj_but(sure-7, guess-15)
complm(have-21, that-16)
nsubj(have-21, divorce-18)
xsubj(have-24, divorce-18)
aux(have-21, would-20)
ccomp(guess-15, have-21)
aux(have-24, to-22)
advmod(have-24, also-23)
xcomp(have-21, have-24)
det(name-27, an-25)
amod(name-27, alternate-26)
dobj(have-24, name-27)
mark(deals-30, because-28)
nsubj(deals-30, it-29)
advcl(have-21, deals-30)
det(separation-33, the-32)
prep_with(deals-30, separation-33)
num(people-39, two-35)
amod(people-39, married-37)
prep_of(separation-33, people-39)

(ROOT
  (S
    (ADVP (RB Simply))
    (NP
      (NP (NN put))
      (, ,)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBD meant)
            (S
              (VP (TO to)
                (VP (VB say))))))))
    (VP (VBD was)
      (SBAR (IN that)
        (S
          (S
            (NP
              (NP (JJ many) (NNS laws)
                (CC and)
                (NNS specifics))
              (PP (IN of)
                (NP (DT the) (NN system))))
            (VP (MD would)
              (VP (VB have)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN altered)
                        (PRN (, ,)
                          (SBAR (IN whether)
                            (FRAG
                              (ADVP (RB severely)
                                (CC or)
                                (RB not))))
                          (, ,)))))))))
          (CC and)
          (S
            (NP (PRP I))
            (VP (VBP 'm) (RB not)
              (ADJP (JJ sure))
              (SBAR
                (WHADVP (WRB how)
                  (ADJP (JJ easy)))
                (S
                  (NP (PRP it))
                  (VP (MD would)
                    (ADVP (RB necessarily))
                    (VP (VB be)
                      (S
                        (VP (TO to)
                          (VP (VB do)))))))))))))
    (: ...)))

advmod(was-9, Simply-1)
nsubj(was-9, put-2)
rel(meant-6, what-4)
nsubj(meant-6, I-5)
xsubj(say-8, I-5)
rcmod(put-2, meant-6)
aux(say-8, to-7)
xcomp(meant-6, say-8)
root(ROOT-0, was-9)
complm(have-19, that-10)
amod(laws-12, many-11)
nsubj(have-19, laws-12)
xsubj(altered-22, laws-12)
conj_and(laws-12, specifics-14)
nsubj(have-19, specifics-14)
xsubj(altered-22, specifics-14)
det(system-17, the-16)
prep_of(laws-12, system-17)
aux(have-19, would-18)
ccomp(was-9, have-19)
aux(altered-22, to-20)
auxpass(altered-22, be-21)
xcomp(have-19, altered-22)
dep(severely-25, whether-24)
parataxis(altered-22, severely-25)
parataxis(altered-22, not-27)
conj_or(severely-25, not-27)
nsubj(sure-33, I-30)
cop(sure-33, 'm-31)
neg(sure-33, not-32)
ccomp(was-9, sure-33)
conj_and(have-19, sure-33)
advmod(be-39, how-34)
dep(how-34, easy-35)
nsubj(be-39, it-36)
aux(be-39, would-37)
advmod(be-39, necessarily-38)
ccomp(sure-33, be-39)
aux(do-41, to-40)
xcomp(be-39, do-41)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S
    (ADVP (RB thus))
    (, ,)
    (NP (PRP it))
    (VP (MD 'd)
      (VP (VB take)
        (NP
          (NP (DT a) (NN lot))
          (PP (IN of)
            (NP (NN work)
              (CC and)
              (JJ careful) (NN planning))))))
    (: ...)))

advmod(take-5, thus-1)
nsubj(take-5, it-3)
aux(take-5, 'd-4)
root(ROOT-0, take-5)
det(lot-7, a-6)
dobj(take-5, lot-7)
nn(planning-12, work-9)
conj_and(work-9, careful-11)
nn(planning-12, careful-11)
prep_of(lot-7, planning-12)

