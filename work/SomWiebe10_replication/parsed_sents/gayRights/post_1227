(ROOT
  (S ('' '')
    (S
      (FRAG (: ...)
        (ADVP
          (NP
            (NP (PRP it))
            (ADVP
              (NP (NN can))
              (RB no)))
          (RB longer))
        (NP
          (NP (NN say))
          (PP (IN that))))
      (NP (DT a) (NN child))
      (VP (MD should)
        (VP (VB have)
          (NP (DT a) (NN mother)))))
    (CC and)
    (S
      (NP
        (NP
          (NP (NN father))
          (ADJP (IN if) (JJ possible)))
        (PP (RB instead) (IN of)
          (NP (DT a) (JJ same-sex))))
      (VP (VBD set)
        (PP (IN of)
          (NP (NNS parents)))))
    (. .)))

npadvmod(longer-6, it-3)
npadvmod(no-5, can-4)
advmod(it-3, no-5)
dep(say-7, longer-6)
dep(have-12, say-7)
prep(say-7, that-8)
det(child-10, a-9)
nsubj(have-12, child-10)
aux(have-12, should-11)
root(ROOT-0, have-12)
det(mother-14, a-13)
dobj(have-12, mother-14)
nsubj(set-23, father-16)
dep(possible-18, if-17)
amod(father-16, possible-18)
det(same-sex-22, a-21)
prep_instead_of(father-16, same-sex-22)
conj_and(have-12, set-23)
prep_of(set-23, parents-25)

(ROOT
  (S ('' '')
    (S
      (NP (NN Everyone))
      (VP (VBZ believes)
        (SBAR (IN that)
          (S
            (NP (DT a) (NN child))
            (VP (MD should)
              (VP (VB have)
                (NP
                  (NP (DT a) (NN mother)
                    (CC and)
                    (NN father))
                  (, ,)
                  (ADJP (IN if) (JJ possible)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP we))
      (ADVP (RB certainly))
      (VP (VBP do) (RB n't)
        (VP
          (VP (VB take)
            (NP (DT the) (NNS children))
            (PRT (RP away))
            (PP (IN from)
              (NP (JJ single) (NNS mothers))))
          (CC and)
          (VP (VB give)
            (NP (PRP them))
            (PP (TO to)
              (NP (JJ two-parent) (NNS families)))))))
    (. .)))

nsubj(believes-3, Everyone-2)
root(ROOT-0, believes-3)
complm(have-8, that-4)
det(child-6, a-5)
nsubj(have-8, child-6)
aux(have-8, should-7)
ccomp(believes-3, have-8)
det(mother-10, a-9)
dobj(have-8, mother-10)
dobj(have-8, father-12)
conj_and(mother-10, father-12)
dep(possible-15, if-14)
amod(mother-10, possible-15)
nsubj(take-22, we-18)
nsubj(give-30, we-18)
advmod(take-22, certainly-19)
aux(take-22, do-20)
neg(take-22, n't-21)
conj_but(believes-3, take-22)
det(children-24, the-23)
dobj(take-22, children-24)
amod(mothers-28, single-27)
prep_away_from(take-22, mothers-28)
conj_but(believes-3, give-30)
conj_and(take-22, give-30)
dobj(give-30, them-31)
amod(families-34, two-parent-33)
prep_to(give-30, families-34)

(ROOT
  (S
    (NP
      (NP (DT An) (NN ideal))
      (PP (IN for)
        (NP (DT an) (JJ imaginary) (NN child))))
    (VP (VBZ has)
      (NP (NN nothing)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN with)
                (NP
                  (NP (NNS people) (POS 's))
                  (JJ daily) (NNS lives))))))))
    (. .)))

det(ideal-2, An-1)
nsubj(has-7, ideal-2)
det(child-6, an-4)
amod(child-6, imaginary-5)
prep_for(ideal-2, child-6)
root(ROOT-0, has-7)
dobj(has-7, nothing-8)
aux(do-10, to-9)
infmod(nothing-8, do-10)
poss(lives-15, people-12)
amod(lives-15, daily-14)
prep_with(do-10, lives-15)

(ROOT
  (S
    (NP
      (NP (DT A) (NN child))
      (PP (IN with)
        (NP
          (ADJP (VBN involved))
          (NNS grandparents))))
    (VP (MD may)
      (VP
        (VP (VB do)
          (SBAR
            (WHNP (WP what))
            (S
              (NP
                (NP (DT any) (JJ single) (NN mom) (POS 's))
                (NN child))
              (VP (VBZ does)))))
        (CC and)
        (VP (VB turn)
          (PP (TO to)
            (NP
              (NP (DT the) (NN grandparent))
              (PP (IN for)
                (NP
                  (NP (DT a) (NN role) (NN model))
                  (PP (IN of)
                    (NP
                      (NP (DT that) (NN gender) (, ,)
                        (CC or)
                        (NN bond))
                      (ADVP (RB closely)
                        (PP (IN with)
                          (NP (DT an) (NN uncle)
                            (CC or)
                            (NN aunt)))))))))))))
    (. .)))

det(child-2, A-1)
nsubj(do-7, child-2)
nsubj(turn-16, child-2)
amod(grandparents-5, involved-4)
prep_with(child-2, grandparents-5)
aux(do-7, may-6)
root(ROOT-0, do-7)
dobj(does-14, what-8)
det(mom-11, any-9)
amod(mom-11, single-10)
poss(child-13, mom-11)
nsubj(does-14, child-13)
ccomp(do-7, does-14)
conj_and(do-7, turn-16)
det(grandparent-19, the-18)
prep_to(turn-16, grandparent-19)
det(model-23, a-21)
nn(model-23, role-22)
prep_for(grandparent-19, model-23)
det(gender-26, that-25)
prep_of(model-23, gender-26)
prep_of(model-23, bond-29)
conj_or(gender-26, bond-29)
advmod(gender-26, closely-30)
det(uncle-33, an-32)
prep_with(closely-30, uncle-33)
prep_with(closely-30, aunt-35)
conj_or(uncle-33, aunt-35)

(ROOT
  (S (CC And)
    (SBAR (IN since)
      (S
        (S
          (NP (JJ many) (NN lesbian) (NNS couples))
          (VP (VBP have)
            (NP (NNS children))
            (PP (IN from)
              (NP
                (NP (CD one) (NN partner) (POS 's))
                (JJ previous) (NN relationship)))))
        (, ,)
        (CC and)
        (S
          (NP (PRP they))
          (VP (MD will)
            (VP (VB be)
              (ADVP
                (NP (DT a) (NN couple))
                (RB regardless))
              (SBAR (IN if)
                (S
                  (NP (PRP they))
                  (VP (VBP 're)
                    (VP (VBN married))))
                (CC or)
                (RB not)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP
              (VP (VBG hinting)
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (MD would)
                      (VP (VB be)
                        (ADJP (JJS best))
                        (S
                          (VP (TO to)
                            (VP (VB take)
                              (NP (DT the) (NN child))
                              (PP (IN from)
                                (NP (DT the) (NN lesbian)))
                              (ADVP (RB regardless)
                                (PP (IN of)
                                  (SBAR
                                    (WHADVP (WRB how))
                                    (S
                                      (NP (NN custody))
                                      (VP (VBD was)
                                        (VP (VBN arranged)))))))))))))))
              (PRN (: --)
                (CC or)
                (S
                  (NP
                    (NP (DT the) (NNS reasons))
                    (PP (IN for)
                      (NP (PRP her))))
                  (VP (VBG having)
                    (NP (NN custody))))
                (: --))
              (CC and)
              (VP (VBG giving)
                (NP (PRP it))
                (PP (TO to)
                  (NP (DT the) (NN ex-husband)))
                (SBAR (IN if)
                  (S
                    (NP (PRP he))
                    (ADVP (RB only))
                    (VP (VBZ gets)
                      (NP (DT a) (NN girlfriend)))))))))))
    (. .)))

cc(seem-30, And-1)
mark(have-6, since-2)
amod(couples-5, many-3)
nn(couples-5, lesbian-4)
nsubj(have-6, couples-5)
advcl(seem-30, have-6)
dobj(have-6, children-7)
num(partner-10, one-9)
poss(relationship-13, partner-10)
amod(relationship-13, previous-12)
prep_from(have-6, relationship-13)
nsubj(be-18, they-16)
aux(be-18, will-17)
conj_and(have-6, be-18)
advcl(seem-30, be-18)
det(couple-20, a-19)
npadvmod(regardless-21, couple-20)
advmod(be-18, regardless-21)
mark(married-25, if-22)
nsubjpass(married-25, they-23)
auxpass(married-25, 're-24)
advcl(be-18, married-25)
advcl(be-18, not-27)
conj_or(married-25, not-27)
nsubj(seem-30, you-29)
xsubj(hinting-33, you-29)
root(ROOT-0, seem-30)
aux(hinting-33, to-31)
aux(hinting-33, be-32)
xcomp(seem-30, hinting-33)
complm(best-38, that-34)
nsubj(best-38, it-35)
aux(best-38, would-36)
cop(best-38, be-37)
ccomp(hinting-33, best-38)
aux(take-40, to-39)
xcomp(best-38, take-40)
det(child-42, the-41)
dobj(take-40, child-42)
det(lesbian-45, the-44)
prep_from(take-40, lesbian-45)
advmod(arranged-51, how-48)
nsubjpass(arranged-51, custody-49)
auxpass(arranged-51, was-50)
prepc_regardless_of(take-40, arranged-51)
dep(having-58, or-53)
det(reasons-55, the-54)
nsubj(having-58, reasons-55)
prep_for(reasons-55, her-57)
parataxis(hinting-33, having-58)
parataxis(giving-62, having-58)
dobj(having-58, custody-59)
xcomp(seem-30, giving-62)
conj_and(hinting-33, giving-62)
dobj(giving-62, it-63)
det(ex-husband-66, the-65)
prep_to(giving-62, ex-husband-66)
mark(gets-70, if-67)
nsubj(gets-70, he-68)
advmod(gets-70, only-69)
advcl(giving-62, gets-70)
det(girlfriend-72, a-71)
dobj(gets-70, girlfriend-72)

