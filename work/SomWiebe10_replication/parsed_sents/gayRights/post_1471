(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT a) (JJ complete) (NN reason))
                (PP (IN for)
                  (SBAR
                    (WHADVP (WRB why))
                    (S
                      (NP (NN someone))
                      (VP
                        (VP
                          (ADVP (RB up)
                            (CC or)
                            (RB down))
                          (VBD voted)
                          (S
                            (NP
                              (NP (PRP me))
                              (CC or)
                              (NP (NN anyone)))
                            (ADJP (RB else))))
                        (CC but)
                        (VP
                          (PP (IN down)
                            (NP (NN voting)))
                          (VBZ has)
                          (VP (VBN been)
                            (PP (IN as)
                              (NP (JJ huge) (NN issue)))
                            (PP (IN for)
                              (NP (PRP me)))))))))))))
        (SBAR (IN since)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (NP
                (NP (DT the) (NN one))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD got)
                      (NP (NN hit)))))))))))
    (. .)))

nsubj(have-5, I-2)
xsubj(have-7, I-2)
aux(have-5, do-3)
neg(have-5, n't-4)
root(ROOT-0, have-5)
aux(have-7, to-6)
xcomp(have-5, have-7)
det(reason-10, a-8)
amod(reason-10, complete-9)
dobj(have-7, reason-10)
advmod(voted-17, why-12)
nsubj(voted-17, someone-13)
nsubj(been-26, someone-13)
advmod(voted-17, up-14)
conj_or(up-14, down-16)
advmod(voted-17, down-16)
prepc_for(reason-10, voted-17)
nsubj(else-21, me-18)
conj_or(me-18, anyone-20)
nsubj(else-21, anyone-20)
xcomp(voted-17, else-21)
prep_down(been-26, voting-24)
aux(been-26, has-25)
prepc_for(reason-10, been-26)
conj_but(voted-17, been-26)
amod(issue-29, huge-28)
prep_as(been-26, issue-29)
prep_for(been-26, me-31)
mark(one-36, since-32)
nsubj(one-36, I-33)
cop(one-36, 'm-34)
det(one-36, the-35)
advcl(have-5, one-36)
nsubj(got-38, one-36)
rcmod(one-36, got-38)
dobj(got-38, hit-39)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB certainly))
    (VP (VBD did) (RB n't)
      (VP (VB notice)
        (NP
          (NP (NN anyone))
          (VP (VBG stepping)
            (PRT (RP up))
            (S
              (VP (TO to)
                (VP (VB say)
                  (SBAR (IN that)
                    (S
                      (VP (VBD was)
                        (ADJP (JJ wrong))
                        (SBAR (IN before)
                          (S
                            (NP (PRP I))
                            (VP (VBD made)
                              (NP (DT the) (JJ accusatory) (NN debate)))))))))))))))
    (. .)))

nsubj(notice-5, I-1)
advmod(notice-5, certainly-2)
aux(notice-5, did-3)
neg(notice-5, n't-4)
root(ROOT-0, notice-5)
dobj(notice-5, anyone-6)
xsubj(say-10, anyone-6)
partmod(anyone-6, stepping-7)
prt(stepping-7, up-8)
aux(say-10, to-9)
xcomp(stepping-7, say-10)
complm(wrong-13, that-11)
cop(wrong-13, was-12)
ccomp(say-10, wrong-13)
mark(made-16, before-14)
nsubj(made-16, I-15)
advcl(wrong-13, made-16)
det(debate-19, the-17)
amod(debate-19, accusatory-18)
dobj(made-16, debate-19)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (VBP are)
      (NP
        (NP (DT the) (NN one))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBD started)
              (PP (IN with)
                (NP (DT the) (NN name) (NN calling))))))))
    (. .)))

nsubj(one-5, You-2)
cop(one-5, are-3)
det(one-5, the-4)
root(ROOT-0, one-5)
nsubj(started-7, one-5)
rcmod(one-5, started-7)
det(calling-11, the-9)
nn(calling-11, name-10)
prep_with(started-7, calling-11)

(ROOT
  (S
    (SQ
      (NP (PRP I))
      (VP (VBP guess)
        (PRN
          (S
            (NP (DT that))
            (VP (VBZ 's)
              (SBARQ
                (WHNP (WP what))
                (SQ
                  (VP (VBZ makes)
                    (S
                      (NP (PRP you))
                      (NP (DT a) (NN liberal)))))
                (: ;))))
          (-RRB- -RRB-))))
    ('' '')
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB wish)
        (S
          (VP (TO to)
            (VP
              (VP (VB have)
                (NP (PRP$ my) (NN cake)))
              (CC and)
              (VP (VB eat)
                (NP (PRP it))
                (ADVP (RB too))
                (PRN (CC and)
                  (S
                    (NP (PRP I))
                    (VP (VBP do) (RB not)
                      (VP (VB understand)
                        (SBAR
                          (WHADVP (WRB why))
                          (S
                            (NP (PRP you))
                            (VP (MD would)
                              (VP (VB accuse)
                                (NP (PRP me))))))))))
                (PP (IN of)
                  (S
                    (VP (VBG wanting)
                      (NP (DT that)))))))))))
    (. .)))

nsubj(guess-2, I-1)
dep(wish-16, guess-2)
nsubj('s-4, that-3)
parataxis(guess-2, 's-4)
nsubj(makes-6, what-5)
dep('s-4, makes-6)
nsubj(liberal-9, you-7)
det(liberal-9, a-8)
xcomp(makes-6, liberal-9)
nsubj(wish-16, I-13)
xsubj(have-18, I-13)
aux(wish-16, do-14)
neg(wish-16, n't-15)
root(ROOT-0, wish-16)
aux(have-18, to-17)
xcomp(wish-16, have-18)
poss(cake-20, my-19)
dobj(have-18, cake-20)
xcomp(wish-16, eat-22)
conj_and(have-18, eat-22)
dobj(eat-22, it-23)
advmod(eat-22, too-24)
dep(understand-29, and-25)
nsubj(understand-29, I-26)
aux(understand-29, do-27)
neg(understand-29, not-28)
parataxis(eat-22, understand-29)
advmod(accuse-33, why-30)
nsubj(accuse-33, you-31)
aux(accuse-33, would-32)
advcl(understand-29, accuse-33)
dobj(accuse-33, me-34)
prepc_of(eat-22, wanting-36)
dobj(wanting-36, that-37)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (VBD said)
      (SBAR (IN that) (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ appears)
            (PP (TO to)
              (NP (PRP me)))
            (SBAR (IN that)
              (S
                (NP (PRP you))
                (VP (VBP are) (RB not)
                  (ADJP (JJ interested)
                    (PP (IN in)
                      (S
                        (VP (VBG negotiating))))))))))))
    (. .)))

nsubj(said-3, I-2)
root(ROOT-0, said-3)
complm(appears-7, that-4)
dep(appears-7, because-5)
nsubj(appears-7, it-6)
ccomp(said-3, appears-7)
prep_to(appears-7, me-9)
complm(interested-14, that-10)
nsubj(interested-14, you-11)
cop(interested-14, are-12)
neg(interested-14, not-13)
ccomp(appears-7, interested-14)
prepc_in(interested-14, negotiating-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (SBAR (IN that)
        (S
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP feel)
                  (SBAR (IN that)
                    (S
                      (NP (PRP you))
                      (VP (VBP are)
                        (VP (VBN entitled)
                          (PP (TO to)
                            (NP (NN something)))
                          (PP (TO to)))))))))
            (VP (MD should)
              (ADVP (RB just))
              (VP (VB demand)
                (NP (PRP it)))))
          (CC and)
          (S
            (ADVP (RB then))
            (NP (PRP you))
            (VP (VBP expect)
              (S
                (VP (TO to)
                  (VP (VB get)
                    (NP (PRP it))))))))))
    (. .)))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
complm(demand-16, that-3)
advmod(feel-6, when-4)
nsubj(feel-6, you-5)
advcl(demand-16, feel-6)
csubj(demand-16, feel-6)
complm(entitled-10, that-7)
nsubjpass(entitled-10, you-8)
auxpass(entitled-10, are-9)
ccomp(feel-6, entitled-10)
prep_to(entitled-10, something-12)
prep(entitled-10, to-13)
aux(demand-16, should-14)
advmod(demand-16, just-15)
ccomp(seems-2, demand-16)
dobj(demand-16, it-17)
advmod(expect-21, then-19)
nsubj(expect-21, you-20)
xsubj(get-23, you-20)
ccomp(seems-2, expect-21)
conj_and(demand-16, expect-21)
aux(get-23, to-22)
xcomp(expect-21, get-23)
dobj(get-23, it-24)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP see)
            (S
              (VP (VBG happening)
                (PP (IN between)
                  (NP
                    (NP (DT the) (JJ religious) (NN right))
                    (CC and)
                    (NP (DT the) (JJ gay) (NN community))))))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
dobj(see-5, what-3)
nsubj(see-5, I-4)
ccomp(is-2, see-5)
xcomp(see-5, happening-6)
det(right-10, the-8)
amod(right-10, religious-9)
prep_between(happening-6, right-10)
det(community-14, the-12)
amod(community-14, gay-13)
prep_between(happening-6, community-14)
conj_and(right-10, community-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP tell)
      (NP (PRP you))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP see)
            (SBAR (IN because)
              (S
                (NP (PRP it))
                (VP (MD may)
                  (VP (VB be)
                    (PP (IN of)
                      (NP (DT some) (NN value)))
                    (PP (TO to)
                      (NP (PRP you)))))))))))
    (. .)))

nsubj(tell-2, I-1)
root(ROOT-0, tell-2)
dobj(tell-2, you-3)
dep(see-6, what-4)
dobj(be-10, what-4)
nsubj(see-6, I-5)
dep(tell-2, see-6)
mark(be-10, because-7)
nsubj(be-10, it-8)
aux(be-10, may-9)
advcl(see-6, be-10)
det(value-13, some-12)
prep_of(be-10, value-13)
prep_to(be-10, you-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG standing)
        (PP (IN outside)
          (S
            (VP (VBG looking)
              (PRT (RP in)))))))
    (. .)))

nsubj(standing-3, I-1)
aux(standing-3, 'm-2)
root(ROOT-0, standing-3)
prepc_outside(standing-3, looking-5)
prt(looking-5, in-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (DT a) (JJ different) (NN point))
        (PP (IN of)
          (NP (NN view)))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(point-5, a-3)
amod(point-5, different-4)
dobj(have-2, point-5)
prep_of(point-5, view-7)

(ROOT
  (SQ
    (SBAR
      (WHADVP (WRB When))
      (S
        (S
          (NP (CD two) (JJ blind) (NNS men))
          (VP (VBP try)
            (S
              (VP (TO to)
                (VP (VB describe)
                  (NP (DT an) (NN elephant))
                  (PP (TO to)
                    (NP (DT each) (JJ other))))))))
        (, ,)
        (CC and)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (VP (VBG standing)
              (PP (IN on)
                (NP
                  (NP (DT the) (JJ opposite) (NN end))
                  (PP (IN of)
                    (NP (DT the) (NN elephant))))))))))
    (, ,) (MD should)
    (NP (NN one) (NN man))
    (VP (VB discard)
      (NP
        (NP
          (NP (DT the) (JJ other) (NN man) (POS 's))
          (NN point))
        (PP (IN of)
          (NP (NN view))))
      (PP (IN as)
        (UCP
          (ADJP (JJ wrong))
          (CC or)
          (NP
            (SQ (MD should)
              (NP (PRP he))
              (VP (VB consider)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (DT the) (JJ other))
                    (VP (VBZ is)
                      (VP (VBG telling)
                        (NP (PRP him))
                        (PRT (RP in))))))))
            (VP (VB order)
              (S
                (VP (TO to)
                  (VP (VB come)
                    (PRT (RP up))
                    (PP (IN with)
                      (NP (DT a)
                        (ADJP (RBR more) (JJ complete))
                        (NN picture)))))))))))
    (. ?)))

advmod(try-5, When-1)
num(men-4, two-2)
amod(men-4, blind-3)
nsubj(try-5, men-4)
xsubj(describe-7, men-4)
advcl(discard-29, try-5)
aux(describe-7, to-6)
xcomp(try-5, describe-7)
det(elephant-9, an-8)
dobj(describe-7, elephant-9)
det(other-12, each-11)
prep_to(describe-7, other-12)
nsubj(standing-17, they-15)
aux(standing-17, are-16)
conj_and(try-5, standing-17)
advcl(discard-29, standing-17)
det(end-21, the-19)
amod(end-21, opposite-20)
prep_on(standing-17, end-21)
det(elephant-24, the-23)
prep_of(end-21, elephant-24)
aux(discard-29, should-26)
nn(man-28, one-27)
nsubj(discard-29, man-28)
root(ROOT-0, discard-29)
det(man-32, the-30)
amod(man-32, other-31)
poss(point-34, man-32)
dobj(discard-29, point-34)
prep_of(point-34, view-36)
prep_as(discard-29, wrong-38)
aux(consider-42, should-40)
nsubj(consider-42, he-41)
dep(order-50, consider-42)
dobj(telling-47, what-43)
det(other-45, the-44)
nsubj(telling-47, other-45)
aux(telling-47, is-46)
ccomp(consider-42, telling-47)
dobj(telling-47, him-48)
prt(telling-47, in-49)
prep_as(discard-29, order-50)
conj_or(wrong-38, order-50)
aux(come-52, to-51)
xcomp(order-50, come-52)
prt(come-52, up-53)
det(picture-58, a-55)
advmod(complete-57, more-56)
amod(picture-58, complete-57)
prep_with(come-52, picture-58)

(ROOT
  (S
    (VP (VB Think)
      (PP (IN about)
        (NP
          (NP (DT that))
          (PP (IN for)
            (NP (DT a) (NN moment)))))
      (SBAR (IN because)
        (S
          (S
            (NP (PRP we))
            (VP (VBP are)
              (PP (IN on)
                (NP
                  (NP (JJ different) (NNS ends))
                  (PP (IN of)
                    (NP (DT the) (NN elephant)))))))
          (CC and)
          (S
            (NP (PRP I))
            (VP (VBP 'm)
              (ADVP (RB just))
              (VP (VBG providing)
                (NP (NN input))
                (PP (IN from)
                  (SBAR
                    (WHADVP (WRB where))
                    (S
                      (NP (PRP I))
                      (VP (VBP 'm)
                        (VP (VBG standing)
                          (PP (IN in)
                            (NP (DT the) (NNS hopes)))
                          (SBAR (IN that)
                            (S
                              (NP (PRP it))
                              (VP (VBZ is)
                                (PP (IN of)
                                  (NP
                                    (NP (DT some) (NN benefit))
                                    (PP (TO to)
                                      (NP (PRP you)))))))))))))))))))
    (. .)))

root(ROOT-0, Think-1)
prep_about(Think-1, that-3)
det(moment-6, a-5)
prep_for(that-3, moment-6)
mark(are-9, because-7)
nsubj(are-9, we-8)
advcl(Think-1, are-9)
amod(ends-12, different-11)
prep_on(are-9, ends-12)
det(elephant-15, the-14)
prep_of(ends-12, elephant-15)
nsubj(providing-20, I-17)
aux(providing-20, 'm-18)
advmod(providing-20, just-19)
advcl(Think-1, providing-20)
conj_and(are-9, providing-20)
dobj(providing-20, input-21)
advmod(standing-26, where-23)
nsubj(standing-26, I-24)
aux(standing-26, 'm-25)
prepc_from(providing-20, standing-26)
det(hopes-29, the-28)
prep_in(standing-26, hopes-29)
complm(is-32, that-30)
nsubj(is-32, it-31)
ccomp(standing-26, is-32)
det(benefit-35, some-34)
prep_of(is-32, benefit-35)
prep_to(benefit-35, you-37)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBD was)
        (VP (VBN hit)
          (PP (IN before)
            (SBAR (CC but)
              (S
                (NP (PRP I))
                (VP (VBP do) (RB n't)
                  (VP (VB care)
                    (PP (IN about)
                      (NP (DT the) (NNS points)))))))))))
    (IN so)
    (S
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (VP (VB come)
          (ADVP (RB naturally))
          (PP (TO to)
            (NP (PRP me)))
          (S
            (VP (TO to)
              (VP (VB think)
                (SBAR (IN that)
                  (S
                    (NP (DT an) (NN adult))
                    (VP (MD would)
                      (VP (VB care)
                        (PP (IN about)
                          (NP (DT some) (JJ lousy) (NNS points)))))))))))))
    (. .)))

nsubjpass(hit-4, I-2)
auxpass(hit-4, was-3)
root(ROOT-0, hit-4)
cc(care-10, but-6)
nsubj(care-10, I-7)
aux(care-10, do-8)
neg(care-10, n't-9)
prepc_before(hit-4, care-10)
det(points-13, the-12)
prep_about(care-10, points-13)
dep(hit-4, so-14)
nsubj(come-18, it-15)
xsubj(think-23, it-15)
aux(come-18, does-16)
neg(come-18, n't-17)
ccomp(hit-4, come-18)
advmod(come-18, naturally-19)
prep_to(come-18, me-21)
aux(think-23, to-22)
xcomp(come-18, think-23)
complm(care-28, that-24)
det(adult-26, an-25)
nsubj(care-28, adult-26)
aux(care-28, would-27)
ccomp(think-23, care-28)
det(points-32, some-30)
amod(points-32, lousy-31)
prep_about(care-28, points-32)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ is) (RB n't))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP I))
    (VP (MD 'll)
      (ADVP (RB just))
      (VP (VB STFU)
        (SBAR (IN because)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB have)
                (NP
                  (NP (DT a) (NN dog))
                  (PP (IN in)
                    (NP (DT this) (NN fight))))))))))
    (. .)))

mark(is-3, If-1)
nsubj(is-3, it-2)
advcl(STFU-10, is-3)
neg(is-3, n't-4)
advmod(STFU-10, then-6)
nsubj(STFU-10, I-7)
aux(STFU-10, 'll-8)
advmod(STFU-10, just-9)
root(ROOT-0, STFU-10)
mark(have-15, because-11)
nsubj(have-15, I-12)
aux(have-15, do-13)
neg(have-15, n't-14)
advcl(STFU-10, have-15)
det(dog-17, a-16)
dobj(have-15, dog-17)
det(fight-20, this-19)
prep_in(dog-17, fight-20)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP I))
          (`` ``)
          (VP (VBD did) (RB n't)
            (VP (VB step)
              (PRT (RP up))
              (S
                (VP (TO to)
                  (VP (VB say)
                    (SBAR (IN that)
                      (S
                        (NP (PRP it))
                        (VP (VBD was)
                          (ADJP (JJ wrong)))))))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
advmod(step-8, why-3)
nsubj(step-8, I-4)
xsubj(say-11, I-4)
aux(step-8, did-6)
neg(step-8, n't-7)
advcl('s-2, step-8)
prt(step-8, up-9)
aux(say-11, to-10)
xcomp(step-8, say-11)
complm(wrong-15, that-12)
nsubj(wrong-15, it-13)
cop(wrong-15, was-14)
ccomp(say-11, wrong-15)

(ROOT
  (S ('' '')
    (PP
      (PP
        (NP
          (NP
            (ADVP (CC But))
            (NP
              (ADVP (RB after))
              (DT the) (NN fact)))
          (NN I))
        (PP (IN tried)))
      (PP (TO to)
        (S
          (VP (VB give)
            (NP (PRP you))
            (NP
              (NP (DT some))
              (PP (IN of)
                (NP (PRP$ my) (NNS points)))
              (SBAR (IN because)
                (S
                  (NP (PRP I))
                  (VP (VBD realized)
                    (NP (DT that))))))))))
    (PRN
      (NP (PRP they))
      (VP (VBD were)
        (ADJP (JJ important)
          (PP (TO to)))))
    (NP (PRP you)
      (CC and)
      (PRP they))
    (VP (VBD were) (RB n't)
      (ADJP (JJ important)
        (PP (TO to)
          (NP (PRP me)))))
    (. .) ('' '')))

advmod(fact-5, But-2)
advmod(fact-5, after-3)
det(fact-5, the-4)
nn(I-6, fact-5)
dep(tried-7, I-6)
prep(important-28, tried-7)
prepc_to(tried-7, give-9)
iobj(give-9, you-10)
dobj(give-9, some-11)
poss(points-14, my-13)
prep_of(some-11, points-14)
mark(realized-17, because-15)
nsubj(realized-17, I-16)
dep(some-11, realized-17)
dobj(realized-17, that-18)
nsubj(important-21, they-19)
cop(important-21, were-20)
parataxis(important-28, important-21)
prep(important-21, to-22)
nsubj(important-28, you-23)
conj_and(you-23, they-25)
nsubj(important-28, they-25)
cop(important-28, were-26)
neg(important-28, n't-27)
root(ROOT-0, important-28)
prep_to(important-28, me-30)

(ROOT
  (S
    (NP (NNS People))
    (VP (MD can)
      (ADVP (RB simply))
      (VP
        (VP (VB run)
          (PRT (RP in)
            (CC and)
            (RP out))
          (PP (IN of)
            (NP (NNS debates))))
        (, ,)
        (VP
          (ADVP (RB down))
          (VB vote)
          (NP
            (NP (NN someone))
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP do) (RB n't)
                  (VP (VB like)))))))
        (CC and)
        (ADVP (RB up))
        (VP (VB vote)
          (NP (DT those))
          (SBAR
            (SBAR
              (S
                (NP (PRP they))
                (VP (VBP do))))
            (CC and)
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is) (RB not)
                  (ADJP (JJ right)))))))))
    (. !)))

nsubj(run-4, People-1)
nsubj(vote-12, People-1)
nsubj(vote-20, People-1)
aux(run-4, can-2)
advmod(run-4, simply-3)
root(ROOT-0, run-4)
prt(run-4, in-5)
dep(in-5, and-6)
dep(in-5, out-7)
prep_of(run-4, debates-9)
advmod(vote-12, down-11)
conj_and(run-4, vote-12)
dobj(vote-12, someone-13)
dobj(like-17, someone-13)
nsubj(like-17, they-14)
aux(like-17, do-15)
neg(like-17, n't-16)
rcmod(someone-13, like-17)
advmod(run-4, up-19)
conj_and(run-4, up-19)
conj_and(run-4, vote-20)
dobj(vote-20, those-21)
nsubj(do-23, they-22)
dep(vote-20, do-23)
nsubj(right-28, that-25)
cop(right-28, is-26)
neg(right-28, not-27)
dep(vote-20, right-28)
conj_and(do-23, right-28)

(ROOT
  (S (`` ``)
    (S
      (INTJ (UH Yes))
      (, ,)
      (NP (DT that))
      (VP (VBZ 's)
        (ADJP (JJ right))))
    (CC and)
    (S
      (NP (NN life))
      (VP (VBZ is) (RB not)
        (ADJP (JJ fair))))
    (. .)))

dep(right-6, Yes-2)
nsubj(right-6, that-4)
cop(right-6, 's-5)
root(ROOT-0, right-6)
nsubj(fair-11, life-8)
cop(fair-11, is-9)
neg(fair-11, not-10)
conj_and(right-6, fair-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD learned)
      (NP (RB that) (DT a) (JJ long) (NN time) (RB ago)))
    (. .)))

nsubj(learned-2, I-1)
root(ROOT-0, learned-2)
advmod(time-6, that-3)
det(time-6, a-4)
amod(time-6, long-5)
dobj(learned-2, time-6)
advmod(time-6, ago-7)

(ROOT
  (S
    (S
      (NP (DT The) (NN difference))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP accept)
              (NP (DT the) (NN fact))
              (SBAR (IN that)
                (S
                  (NP (NN life))
                  (VP (VBZ is) (RB not)
                    (ADJP (JJ fair))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP learn)
        (NP (DT the) (NNS rules))
        (SBAR (RB so) (IN that)
          (S
            (NP (PRP I))
            (VP (MD can)
              (VP (VB bend)
                (NP (PRP them))))))))
    (. .)))

det(difference-2, The-1)
nsubj(is-3, difference-2)
root(ROOT-0, is-3)
complm(accept-6, that-4)
nsubj(accept-6, I-5)
ccomp(is-3, accept-6)
det(fact-8, the-7)
dobj(accept-6, fact-8)
complm(fair-13, that-9)
nsubj(fair-13, life-10)
cop(fair-13, is-11)
neg(fair-13, not-12)
ccomp(accept-6, fair-13)
nsubj(learn-16, I-15)
conj_and(is-3, learn-16)
det(rules-18, the-17)
dobj(learn-16, rules-18)
advmod(bend-23, so-19)
dep(bend-23, that-20)
nsubj(bend-23, I-21)
aux(bend-23, can-22)
advcl(learn-16, bend-23)
dobj(bend-23, them-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB try)
        (S
          (VP (TO to)
            (VP (VB change)
              (NP (DT the) (NNS rules)))))))
    (. .)))

nsubj(try-4, I-1)
xsubj(change-6, I-1)
aux(try-4, do-2)
neg(try-4, n't-3)
root(ROOT-0, try-4)
aux(change-6, to-5)
xcomp(try-4, change-6)
det(rules-8, the-7)
dobj(change-6, rules-8)

(ROOT
  (S
    (SQ
      (NP (PRP I))
      (VP (VBP guess)
        (PRN
          (S
            (NP (DT that))
            (VP (VBZ 's)
              (SBARQ
                (WHNP (WP what))
                (SQ
                  (VP (VBZ makes)
                    (S
                      (NP (PRP me))
                      (ADJP (JJ conservative)))))
                (: ;))))
          (-RRB- -RRB-))))
    ('' '')
    (NP (DT The) (JJ only) (NN thing))
    (PRN
      (S
        (NP (PRP I))
        (VP (VBP do) (RB not)
          (VP (VB accept)
            (PRN (, ,)
              (PP (IN across)
                (NP (DT the) (NN board)))
              (, ,))))))
    (VP (VBP are)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP
              (VP (VBP are)
                (ADJP (RB ill) (JJ mannered)))
              (CC and)
              (VP (MD can)
                (VP (VB say)
                  (NP (NN nothing))
                  (PP (IN in)
                    (NP
                      (NP (NN defense))
                      (PP (IN of)
                        (NP
                          (NP (PRP$ their) (JJ own) (NNS arguments))
                          (PP (JJ other) (IN than)
                            (NP
                              (S
                                (VP (TO to)
                                  (VP (VB start)
                                    (NP
                                      (NP (DT the) (NN name) (NN calling)
                                        (CC or)
                                        (NN rag))
                                      (PP (IN on)
                                        (NP (DT the) (NN age) (NN routine))))))))))))))))))))
    (. .)))

nsubj(guess-2, I-1)
dep(those-25, guess-2)
nsubj('s-4, that-3)
parataxis(guess-2, 's-4)
nsubj(makes-6, what-5)
dep('s-4, makes-6)
nsubj(conservative-8, me-7)
xcomp(makes-6, conservative-8)
det(thing-14, The-12)
amod(thing-14, only-13)
nsubj(those-25, thing-14)
nsubj(accept-18, I-15)
aux(accept-18, do-16)
neg(accept-18, not-17)
parataxis(those-25, accept-18)
dep(accept-18, across-20)
det(board-22, the-21)
pobj(across-20, board-22)
cop(those-25, are-24)
root(ROOT-0, those-25)
nsubj(mannered-29, those-25)
nsubj(say-32, those-25)
cop(mannered-29, are-27)
advmod(mannered-29, ill-28)
rcmod(those-25, mannered-29)
aux(say-32, can-31)
rcmod(those-25, say-32)
conj_and(mannered-29, say-32)
dobj(say-32, nothing-33)
prep_in(say-32, defense-35)
poss(arguments-39, their-37)
amod(arguments-39, own-38)
prep_of(defense-35, arguments-39)
dep(arguments-39, other-40)
aux(start-43, to-42)
prep_than(arguments-39, start-43)
det(calling-46, the-44)
nn(calling-46, name-45)
dobj(start-43, calling-46)
dobj(start-43, rag-48)
conj_or(calling-46, rag-48)
det(routine-52, the-50)
nn(routine-52, age-51)
prep_on(calling-46, routine-52)

