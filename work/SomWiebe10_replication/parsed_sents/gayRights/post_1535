(ROOT
  (S
    (PP (IN As)
      (PP (RB far) (IN as)
        (NP (PRP$ your) (`` ``)
          (S
            (NP (JJ separate))
            (VP (VBZ is) (RB not)
              (ADJP (JJ equal))))
          ('' '') (NN statement))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB simply))
    (VP (VBZ does) (RB not)
      (VP (VB apply)
        (PP (TO to)
          (NP (DT this) (NN situation)))))
    (. .)))

prep(apply-17, As-1)
advmod(As-1, far-2)
pcomp(As-1, as-3)
poss(statement-11, your-4)
nsubj(equal-9, separate-6)
cop(equal-9, is-7)
neg(equal-9, not-8)
dep(statement-11, equal-9)
prep_as(As-1, statement-11)
nsubj(apply-17, it-13)
advmod(apply-17, simply-14)
aux(apply-17, does-15)
neg(apply-17, not-16)
root(ROOT-0, apply-17)
det(situation-20, this-19)
prep_to(apply-17, situation-20)

(ROOT
  (S
    (NP (DT That) (NN statement))
    (VP (VBD applied)
      (PP (TO to)
        (NP
          (NP (DT the) (NN situation))
          (PP (IN between)
            (NP (NNS blacks)
              (CC and)
              (NNS whites))))))
    (. .)))

det(statement-2, That-1)
nsubj(applied-3, statement-2)
root(ROOT-0, applied-3)
det(situation-6, the-5)
prep_to(applied-3, situation-6)
prep_between(situation-6, blacks-8)
prep_between(situation-6, whites-10)
conj_and(blacks-8, whites-10)

(ROOT
  (S
    (NP
      (NP (CD One) (NN example))
      (PRN (-LRB- -LRB-)
        (PP (IN for)
          (NP (NNS illustrations) (NNS purposes)))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP (NN schooling)))
    (. .)))

num(example-2, One-1)
nsubj(schooling-9, example-2)
dep(example-2, for-4)
nn(purposes-6, illustrations-5)
pobj(for-4, purposes-6)
cop(schooling-9, is-8)
root(ROOT-0, schooling-9)

(ROOT
  (S
    (S
      (NP (DT The) (NN idea))
      (VP (VBD was)
        (SBAR (IN that)
          (S
            (NP (NNS blacks))
            (VP (MD would)
              (VP (VB have)
                (NP (PRP$ their) (JJ own) (NNS schools))))))))
    (CC and)
    (S
      (NP (NNS whites))
      (VP (MD would)
        (VP (VB have)
          (NP (PRP$ their) (JJ own) (NN school)))))
    (. .)))

det(idea-2, The-1)
nsubj(was-3, idea-2)
root(ROOT-0, was-3)
complm(have-7, that-4)
nsubj(have-7, blacks-5)
aux(have-7, would-6)
ccomp(was-3, have-7)
poss(schools-10, their-8)
amod(schools-10, own-9)
dobj(have-7, schools-10)
nsubj(have-14, whites-12)
aux(have-14, would-13)
conj_and(was-3, have-14)
poss(school-17, their-15)
amod(school-17, own-16)
dobj(have-14, school-17)

(ROOT
  (S (CC But)
    (ADVP (IN since)
      (PP (IN at)
        (SBAR (IN that)
          (S
            (NP (NN time) (NNS whites))
            (VP (VBD were)
              (ADJP (RBR more) (JJ affluent))
              (PP (IN than)
                (NP (NNS blacks))))))))
    (, ,)
    (NP (PRP$ their) (NNS children))
    (VP (VBD were)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB enjoy)
              (NP
                (NP (DT a) (JJR higher) (NN level))
                (PP (IN of)
                  (NP (NN education)))))))))
    (. .)))

cc(able-16, But-1)
advmod(able-16, since-2)
complm(affluent-9, that-4)
nn(whites-6, time-5)
nsubj(affluent-9, whites-6)
cop(affluent-9, were-7)
advmod(affluent-9, more-8)
prepc_at(since-2, affluent-9)
prep_than(affluent-9, blacks-11)
poss(children-14, their-13)
nsubj(able-16, children-14)
cop(able-16, were-15)
root(ROOT-0, able-16)
aux(enjoy-18, to-17)
xcomp(able-16, enjoy-18)
det(level-21, a-19)
amod(level-21, higher-20)
dobj(enjoy-18, level-21)
prep_of(level-21, education-23)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (JJ current) (NN situation)))
    (NP (JJ heterosexual) (NNS couples))
    (VP (VBP are) (RB not)
      (ADJP (RB necessarily) (RBR more) (JJ affluent))
      (PP (IN than)
        (NP (NNS gays))))
    (. .)))

det(situation-4, the-2)
amod(situation-4, current-3)
prep_in(affluent-11, situation-4)
amod(couples-6, heterosexual-5)
nsubj(affluent-11, couples-6)
cop(affluent-11, are-7)
neg(affluent-11, not-8)
advmod(affluent-11, necessarily-9)
advmod(affluent-11, more-10)
root(ROOT-0, affluent-11)
prep_than(affluent-11, gays-13)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (DT no) (NN reason)
        (S
          (VP (TO to)
            (VP (VB assume)
              (SBAR (IN that)
                (S
                  (NP (DT a) (JJ heterosexual) (NN union))
                  (VP (MD would)
                    (VP (VB be)
                      (ADJP (JJR better))
                      (PP (IN than)
                        (NP (DT a) (JJ homosexual) (NN union))))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(reason-4, no-3)
nsubj('s-2, reason-4)
aux(assume-6, to-5)
infmod(reason-4, assume-6)
complm(better-13, that-7)
det(union-10, a-8)
amod(union-10, heterosexual-9)
nsubj(better-13, union-10)
aux(better-13, would-11)
cop(better-13, be-12)
ccomp(assume-6, better-13)
det(union-17, a-15)
amod(union-17, homosexual-16)
prep_than(better-13, union-17)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (ADVP (RB also))
      (NP (DT no) (NN reason)
        (S
          (VP (TO to)
            (VP (VB assume)
              (NP (DT that))
              (PP (IN by)
                (S
                  (VP (VBG calling)
                    (NP (DT a) (JJ homosexual) (NN union))
                    (NP
                      (NP (DT a) (`` ``) (NN marriage) ('' ''))
                      (SBAR (IN that)
                        (S
                          (NP (PRP they))
                          (VP (MD will)
                            (VP (VB receive)
                              (NP
                                (NP (DT a) (`` ``) (JJR higher) (NN level))
                                ('' '')
                                (PP (IN of)
                                  (NP (NNS benefits))))
                              (SBAR (IN than) (IN if)
                                (S
                                  (NP (PRP they))
                                  (VP
                                    (ADVP (RB just))
                                    (VBD called)
                                    (NP (PRP it))
                                    (NP (DT a) (JJ civil) (NN union))))))))))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
advmod('s-2, also-3)
det(reason-5, no-4)
nsubj('s-2, reason-5)
aux(assume-7, to-6)
infmod(reason-5, assume-7)
dobj(assume-7, that-8)
prepc_by(assume-7, calling-10)
det(union-13, a-11)
amod(union-13, homosexual-12)
iobj(calling-10, union-13)
det(marriage-16, a-14)
dobj(calling-10, marriage-16)
complm(receive-21, that-18)
nsubj(receive-21, they-19)
aux(receive-21, will-20)
dep(marriage-16, receive-21)
det(level-25, a-22)
amod(level-25, higher-24)
dobj(receive-21, level-25)
prep_of(level-25, benefits-28)
mark(called-33, than-29)
dep(called-33, if-30)
nsubj(called-33, they-31)
advmod(called-33, just-32)
advcl(receive-21, called-33)
iobj(called-33, it-34)
det(union-37, a-35)
amod(union-37, civil-36)
dobj(called-33, union-37)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP
      (NP (DT the) (NN statement))
      (ADJP (`` ``) (JJ separate)
        (CC but)
        (JJ equal) ('' '')))
    (VP (VBZ does) (RB not)
      (VP (VB apply)))
    (. .)))

advmod(apply-12, Therefore-1)
det(statement-4, the-3)
nsubj(apply-12, statement-4)
amod(statement-4, separate-6)
amod(statement-4, equal-8)
conj_but(separate-6, equal-8)
aux(apply-12, does-10)
neg(apply-12, not-11)
root(ROOT-0, apply-12)

