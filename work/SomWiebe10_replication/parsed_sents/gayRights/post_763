(ROOT
  (S (`` ``)
    (VP (VB My)
      (NP (NN friend)))
    (. .)))

root(ROOT-0, My-2)
dobj(My-2, friend-3)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD will) (RB either)
      (VP (VB suffer)
        (PP
          (PP (IN for)
            (S
              (VP (VBG sinning))))
          (CC or)
          (PP (IN for)
            (S
              (VP (VBG doing)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ 's)
                      (ADJP (JJ right)))))))))))
    (. .)))

nsubj(suffer-4, You-1)
aux(suffer-4, will-2)
advmod(suffer-4, either-3)
root(ROOT-0, suffer-4)
prepc_for(suffer-4, sinning-6)
prepc_for(suffer-4, doing-9)
conj_or(sinning-6, doing-9)
nsubj(right-12, what-10)
cop(right-12, 's-11)
ccomp(doing-9, right-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN god))
        (VP (VBD desired)
          (S
            (VP (TO to)
              (VP (VB rescue)
                (NP (NNS people))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB rescue)
        (NP (NN everyone))))
    (. .)))

mark(desired-3, If-1)
nsubj(desired-3, god-2)
xsubj(rescue-5, god-2)
advcl(rescue-10, desired-3)
aux(rescue-5, to-4)
xcomp(desired-3, rescue-5)
dobj(rescue-5, people-6)
nsubj(rescue-10, he-8)
aux(rescue-10, would-9)
root(ROOT-0, rescue-10)
dobj(rescue-10, everyone-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would) (RB n't)
      (VP (VB matter)
        (SBAR (IN if)
          (S
            (NP (PRP they))
            (VP (VBD believed)))
          (CC or)
          (RB not))))
    (. .)))

nsubj(matter-4, It-1)
aux(matter-4, would-2)
neg(matter-4, n't-3)
root(ROOT-0, matter-4)
mark(believed-7, if-5)
nsubj(believed-7, they-6)
advcl(matter-4, believed-7)
advcl(matter-4, not-9)
conj_or(believed-7, not-9)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD would)
      (ADVP (RB also))
      (VP (VB have)
        (NP (DT the) (NN omniscience)
          (S
            (VP (TO to)
              (VP (VB see)
                (NP
                  (NP (DT the) (NNS choices))
                  (SBAR
                    (S
                      (NP (NNS people))
                      (VP (MD will)
                        (ADVP (RB already))
                        (VP (VB make))))))))))))
    (. .)))

nsubj(have-4, He-1)
aux(have-4, would-2)
advmod(have-4, also-3)
root(ROOT-0, have-4)
det(omniscience-6, the-5)
dobj(have-4, omniscience-6)
aux(see-8, to-7)
infmod(omniscience-6, see-8)
det(choices-10, the-9)
dobj(see-8, choices-10)
dobj(make-14, choices-10)
nsubj(make-14, people-11)
aux(make-14, will-12)
advmod(make-14, already-13)
rcmod(choices-10, make-14)

(ROOT
  (S
    (SBAR
      (SBAR
        (S
          (VP (MD Would)
            (VP (VB make)
              (NP
                (NP (DT the) (JJ entire) (NN thing))
                (ADJP (RB quite) (JJ redundant)))))))
      (CC and)
      (SBAR (IN if)
        (S
          (NP (PRP he))
          (VP (MD would) (RB n't)
            (VP (VB have)
              (NP
                (NP (DT the) (NN omniscience))
                (CC nor)
                (NP (DT the) (NN power)
                  (S
                    (VP (TO to)
                      (VP (VB intervene))))))
              (, ,)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (VP (VBP call)))))))))
    (NP (PRP him))
    (VP (VBD god) (, ,)
      (ADVP (RB then)))
    (. ?)))

aux(make-2, Would-1)
dep(god-25, make-2)
det(thing-5, the-3)
amod(thing-5, entire-4)
dobj(make-2, thing-5)
advmod(redundant-7, quite-6)
amod(thing-5, redundant-7)
mark(have-13, if-9)
nsubj(have-13, he-10)
aux(have-13, would-11)
neg(have-13, n't-12)
conj_and(make-2, have-13)
dep(god-25, have-13)
det(omniscience-15, the-14)
dobj(have-13, omniscience-15)
det(power-18, the-17)
dobj(have-13, power-18)
conj_nor(omniscience-15, power-18)
aux(intervene-20, to-19)
infmod(power-18, intervene-20)
advmod(call-23, why-22)
advcl(have-13, call-23)
nsubj(god-25, him-24)
root(ROOT-0, god-25)
advmod(god-25, then-27)

(ROOT
  (S (`` ``)
    (NP (NNS Humans))
    (VP (VBP are)
      (PP (IN in)
        (NP
          (NP (DT a) (NN battle))
          (PP (IN for)
            (NP (PRP$ their) (NNS souls))))))
    (. .)))

nsubj(are-3, Humans-2)
root(ROOT-0, are-3)
det(battle-6, a-5)
prep_in(are-3, battle-6)
poss(souls-9, their-8)
prep_for(battle-6, souls-9)

(ROOT
  (S ('' '')
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB see)
              (NP (DT some) (JJ hard) (NN evidence))
              (PP (IN for)
                (NP
                  (NP (DT the) (NN existence))
                  (PP (IN of)
                    (NP
                      (NP (NNS souls))
                      (PP (IN in)
                        (NP (DT the) (JJ first) (NN place))))))))))))
    (. .)))

nsubj(like-4, I-2)
xsubj(see-6, I-2)
aux(like-4, 'd-3)
root(ROOT-0, like-4)
aux(see-6, to-5)
xcomp(like-4, see-6)
det(evidence-9, some-7)
amod(evidence-9, hard-8)
dobj(see-6, evidence-9)
det(existence-12, the-11)
prep_for(see-6, existence-12)
prep_of(existence-12, souls-14)
det(place-18, the-16)
amod(place-18, first-17)
prep_in(souls-14, place-18)

(ROOT
  (S ('' '')
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (DT either)
          (VP (VB surrender)
            (PP (TO to)
              (NP (DT the) (NN enemy))))
          (CC and)
          (VP (VB sit)
            (PP (IN in)
              (NP
                (NP (DT a) (NN cell))
                (PP (IN as)
                  (NP
                    (NP (NN satan) (POS 's))
                    (NN prisoner)))))))))
    (CC or)
    (S
      (NP (PRP you))
      (VP (MD can)
        (VP
          (VP (VB suffer)
            (PP (IN with)
              (NP
                (NP (NNP Jesus) (NNP Christ))
                (PP (IN as)
                  (NP (DT a) (NN soilder))))))
          (CC and)
          (VP (VB take)
            (NP (DT some) (NNS hits))))))
    (. .)))

nsubj(surrender-5, You-2)
nsubj(sit-10, You-2)
aux(surrender-5, can-3)
preconj(surrender-5, either-4)
root(ROOT-0, surrender-5)
det(enemy-8, the-7)
prep_to(surrender-5, enemy-8)
conj_and(surrender-5, sit-10)
det(cell-13, a-12)
prep_in(sit-10, cell-13)
poss(prisoner-17, satan-15)
prep_as(cell-13, prisoner-17)
nsubj(suffer-21, you-19)
nsubj(take-29, you-19)
aux(suffer-21, can-20)
conj_or(surrender-5, suffer-21)
nn(Christ-24, Jesus-23)
prep_with(suffer-21, Christ-24)
det(soilder-27, a-26)
prep_as(Christ-24, soilder-27)
conj_or(surrender-5, take-29)
conj_and(suffer-21, take-29)
det(hits-31, some-30)
dobj(take-29, hits-31)

(ROOT
  (S ('' '')
    (NP (NNP God))
    (VP (VBZ is)
      (ADJP (RB ultimately) (JJ responsible)
        (PP (IN for)
          (NP
            (NP (NN satan) (POS 's))
            (NNS actions))))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (DT this))
          (VP (VBZ is)
            (NP (DT the) (NN case))))))
    (. .)))

nsubj(responsible-5, God-2)
cop(responsible-5, is-3)
advmod(responsible-5, ultimately-4)
root(ROOT-0, responsible-5)
poss(actions-9, satan-7)
prep_for(responsible-5, actions-9)
mark(case-15, if-11)
nsubj(case-15, this-12)
cop(case-15, is-13)
det(case-15, the-14)
advcl(responsible-5, case-15)

(ROOT
  (S
    (VP (VBZ Does) (RB n't)
      (VP (VB sound)
        (PP (IN like)
          (NP (DT a) (JJ good) (NN god)))
        (PP (TO to)
          (NP (PRP me)))))
    (. .)))

aux(sound-3, Does-1)
neg(sound-3, n't-2)
root(ROOT-0, sound-3)
det(god-7, a-5)
amod(god-7, good-6)
prep_like(sound-3, god-7)
prep_to(sound-3, me-9)

(ROOT
  (S
    (NP (RB Just) (NNS sounds))
    (VP (VBP like)
      (NP
        (NP (DT a) (JJ cruel) (, ,) (JJ slave-driving) (NN tyrant))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ likes)
              (S
                (VP (TO to)
                  (VP (VB play)
                    (NP (JJ useless) (NNS games))))))))))
    (. .)))

advmod(sounds-2, Just-1)
nsubj(like-3, sounds-2)
root(ROOT-0, like-3)
det(tyrant-8, a-4)
amod(tyrant-8, cruel-5)
amod(tyrant-8, slave-driving-7)
dobj(like-3, tyrant-8)
nsubj(likes-10, tyrant-8)
rcmod(tyrant-8, likes-10)
aux(play-12, to-11)
xcomp(likes-10, play-12)
amod(games-14, useless-13)
dobj(play-12, games-14)

(ROOT
  (S ('' '')
    (ADVP (RB Secondly))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (VP (VBG making)
        (NP (DT an) (NN assumption))
        (PP (IN from)
          (NP
            (NP (DT a) (NN perspective))
            (PP (IN of)
              (NP (NN someone)))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ 's)
                  (ADVP (RB obviously))
                  (VP
                    (ADVP (RB never))
                    (VBN experienced)
                    (NP
                      (NP (DT a) (JJ true) (NN encounter))
                      (PP (IN with)
                        (NP (DT the)
                          (ADJP (RB very) (JJ real))
                          (NN God))))))))))))
    (: ...)))

advmod(making-6, Secondly-2)
nsubj(making-6, you-4)
aux(making-6, 're-5)
root(ROOT-0, making-6)
det(assumption-8, an-7)
dobj(making-6, assumption-8)
det(perspective-11, a-10)
prep_from(making-6, perspective-11)
nsubjpass(experienced-18, perspective-11)
prep_of(perspective-11, someone-13)
auxpass(experienced-18, 's-15)
advmod(experienced-18, obviously-16)
neg(experienced-18, never-17)
rcmod(perspective-11, experienced-18)
det(encounter-21, a-19)
amod(encounter-21, true-20)
dobj(experienced-18, encounter-21)
det(God-26, the-23)
advmod(real-25, very-24)
amod(God-26, real-25)
prep_with(encounter-21, God-26)

(ROOT
  (SBARQ
    (WHADVP (RB '') (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)))
    (. ?)))

advmod(know-5, How-2)
aux(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)

(ROOT
  (S ('' '')
    (NP (WP What))
    (VP (VBZ is)
      (NP
        (NP (SYM a))
        (, ,) (`` ``)
        (NP
          (NP (JJ true) (NN encounter))
          (PP (IN with)
            (NP (DT the)
              (ADJP (RB very) (JJ real))
              (NN God))))))
    (. ?)))

nsubj(a-4, What-2)
cop(a-4, is-3)
root(ROOT-0, a-4)
amod(encounter-8, true-7)
dep(a-4, encounter-8)
det(God-13, the-10)
advmod(real-12, very-11)
amod(God-13, real-12)
prep_with(encounter-8, God-13)

(ROOT
  (S ('' '')
    (S
      (SBAR (IN If)
        (S
          (NP (PRP$ your) (NN christian))
          (VP (VBZ god))))
      (ADVP (RB really))
      (VP (VBZ exists)))
    (, ,)
    (NP (PRP he))
    (VP (MD would)
      (VP (VB make)
        (S
          (NP (PRP it))
          (ADJP (JJ obvious)
            (PP (TO to)
              (NP (NN everyone))))
          (SBAR (RB even) (IN with)
            (S
              (NP (JJ free))
              (VP (MD will)
                (VP (VB intact))))))))
    (. .)))

mark(god-5, If-2)
poss(christian-4, your-3)
nsubj(god-5, christian-4)
advcl(exists-7, god-5)
csubj(exists-7, god-5)
advmod(exists-7, really-6)
ccomp(make-11, exists-7)
nsubj(make-11, he-9)
aux(make-11, would-10)
root(ROOT-0, make-11)
nsubj(intact-20, it-12)
dep(intact-20, obvious-13)
prep_to(obvious-13, everyone-15)
advmod(intact-20, even-16)
dep(intact-20, with-17)
nsubj(intact-20, free-18)
aux(intact-20, will-19)
xcomp(make-11, intact-20)

(ROOT
  (FRAG
    (ADVP (RB ''))
    (: ...)
    (SBAR
      (WHNP (WP who))
      (S
        (VP (VBZ sets)
          (S
            (NP (NNS people))
            (ADJP (JJ free)
              (PP (IN from)
                (NP (NN lust)
                  (CC and)
                  (NNS dysfunctions))))))))
    (. .)))

nsubj(sets-4, who-3)
dep(''-1, sets-4)
nsubj(free-6, people-5)
xcomp(sets-4, free-6)
prep_from(free-6, lust-8)
prep_from(free-6, dysfunctions-10)
conj_and(lust-8, dysfunctions-10)

(ROOT
  (S ('' '')
    (S
      (NP (NN Lust))
      (VP (VBZ is)
        (ADJP (JJ natural))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP
            (NP (NN part))
            (PP (IN of)
              (NP (NN nature))))
          (CC and)
          (NP
            (NP (RB yes))
            (, ,)
            (NP (JJ human) (NN nature))))
        (, ,)
        (ADVP (RB as) (RB well))))
    (. .)))

nsubj(natural-4, Lust-2)
cop(natural-4, is-3)
root(ROOT-0, natural-4)
nsubj(part-8, it-6)
cop(part-8, 's-7)
parataxis(natural-4, part-8)
prep_of(part-8, nature-10)
parataxis(natural-4, yes-12)
conj_and(part-8, yes-12)
amod(nature-15, human-14)
appos(yes-12, nature-15)
advmod(well-18, as-17)
mwe(well-18, as-17)
advmod(part-8, well-18)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would)
      (NP
        (NP (PRP$ your) (NN christian))
        (ADJP
          (ADJP (JJ god))
          (PRN (-LRB- -LRB-)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ is)
                  (ADJP (JJ perfect)))))
            (-RRB- -RRB-))))
      (VP (VB make)
        (NP (DT an)
          (ADJP (JJ imperfect))
          (NN creation))))
    (. ?)))

advmod(make-11, Why-1)
aux(make-11, would-2)
poss(christian-4, your-3)
nsubj(make-11, christian-4)
amod(christian-4, god-5)
nsubj(perfect-9, who-7)
cop(perfect-9, is-8)
dep(god-5, perfect-9)
root(ROOT-0, make-11)
det(creation-14, an-12)
amod(creation-14, imperfect-13)
dobj(make-11, creation-14)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT the) (NNS motivations))
            (PP (IN for)
              (S
                (VP (VBG wanting)
                  (S
                    (NP (DT all) (NNS people))
                    (VP (TO to)
                      (PRN (-LRB- -LRB-) (VB ultimately) (-RRB- -RRB-))
                      (VP (VB torture)
                        (NP (PRP themselves))))))))))))
    (. ?)))

nsubj(motivations-5, What-1)
aux(motivations-5, would-2)
cop(motivations-5, be-3)
det(motivations-5, the-4)
root(ROOT-0, motivations-5)
prepc_for(motivations-5, wanting-7)
det(people-9, all-8)
nsubj(torture-14, people-9)
aux(torture-14, to-10)
dep(torture-14, ultimately-12)
xcomp(wanting-7, torture-14)
dobj(torture-14, themselves-15)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD would)
      (NP (PRP he))
      (VP (VB focus)
        (PP (IN on)
          (NP
            (NP (CD one) (JJ tiny) (NN rock))
            (PP (IN in)
              (NP (DT the) (JJ entire) (NN universe)))))))
    (. ?)))

advmod(focus-4, Why-1)
aux(focus-4, would-2)
nsubj(focus-4, he-3)
root(ROOT-0, focus-4)
num(rock-8, one-6)
amod(rock-8, tiny-7)
prep_on(focus-4, rock-8)
det(universe-12, the-10)
amod(universe-12, entire-11)
prep_in(rock-8, universe-12)

(ROOT
  (S
    (VP (VBZ Does) (RB n't)
      (VP (VB make)
        (NP (NN sense))))
    (. .)))

aux(make-3, Does-1)
neg(make-3, n't-2)
root(ROOT-0, make-3)
dobj(make-3, sense-4)

(ROOT
  (S ('' '')
    (NP (NNP God))
    (VP
      (VP (VBD came)
        (PP (IN in)
          (NP
            (NP (DT the) (NN form))
            (PP (IN of)
              (NP (NN man)))))
        (PP (IN in)
          (NP
            (NP (DT the) (NN person))
            (PP (IN of)
              (NP (NNP Jesus) (NNP Christ))))))
      (CC and)
      (VP
        (VP (VBD suffered)
          (PP (IN with)
            (NP (PRP us)))
          (PP (IN against)
            (NP (NN sin))))
        (CC and)
        (VP (VBD won)
          (NP (PRP$ our) (NN freedom)))))
    (. .)))

nsubj(came-3, God-2)
nsubj(suffered-16, God-2)
root(ROOT-0, came-3)
det(form-6, the-5)
prep_in(came-3, form-6)
prep_of(form-6, man-8)
det(person-11, the-10)
prep_in(came-3, person-11)
nn(Christ-14, Jesus-13)
prep_of(person-11, Christ-14)
conj_and(came-3, suffered-16)
prep_with(suffered-16, us-18)
prep_against(suffered-16, sin-20)
conj_and(came-3, won-22)
conj_and(suffered-16, won-22)
poss(freedom-24, our-23)
dobj(won-22, freedom-24)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD paid)
      (PP (IN for)
        (NP (PRP$ our) (NN debt))))
    (. .)))

nsubj(paid-2, He-1)
root(ROOT-0, paid-2)
poss(debt-5, our-4)
prep_for(paid-2, debt-5)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (ADJP (JJ special) (RB enough)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP$ your) (NN god))
                        (VP (VBZ wants))))))))))))
    (. ?)))

aux(think-3, Do-1)
nsubj(think-3, you-2)
root(ROOT-0, think-3)
nsubj(special-6, you-4)
cop(special-6, 're-5)
ccomp(think-3, special-6)
advmod(special-6, enough-7)
aux(know-9, to-8)
xcomp(special-6, know-9)
dobj(wants-13, what-10)
poss(god-12, your-11)
nsubj(wants-13, god-12)
ccomp(know-9, wants-13)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (NNP Firstly))
        (: :)
        (NP (NNP Jesus)))
      (VP (VBD was)
        (ADVP (RB only))
        (VP (VBN written) (IN about)
          (PP (IN in)
            (NP (NNS gospels))))))
    (CC and)
    (S
      (S
        (VP (VBZ has)
          (NP
            (NP (DT no) (JJ other) (NNS references))
            (PP (TO to)
              (NP (PRP him)))
            (PP (IN in)
              (NP
                (NP (NN history))
                (PRN (-LRB- -LRB-)
                  (PP
                    (PP (IN during))
                    (CC or)
                    (PP
                      (ADVP (RB shortly))
                      (IN after)
                      (NP (PRP$ his) (NN time))))
                  (-RRB- -RRB-)))))))
      (VP (VBZ whatsoever)))
    (. .)))

nsubjpass(written-7, Firstly-2)
dep(Firstly-2, Jesus-4)
auxpass(written-7, was-5)
advmod(written-7, only-6)
root(ROOT-0, written-7)
dep(written-7, about-8)
prep_in(written-7, gospels-10)
csubj(whatsoever-28, has-12)
det(references-15, no-13)
amod(references-15, other-14)
dobj(has-12, references-15)
prep_to(references-15, him-17)
prep_in(references-15, history-19)
dep(history-19, during-21)
advmod(after-24, shortly-23)
dep(history-19, after-24)
conj_or(during-21, after-24)
poss(time-26, his-25)
pobj(after-24, time-26)
conj_and(written-7, whatsoever-28)

(ROOT
  (FRAG
    (NP (NNP Second))
    (: :)
    (S
      (PP (IN in)
        (NP (DT the) (NN bible)))
      (, ,)
      (NP (DT the) (NNS romans))
      (VP (VBD treated)
        (S
          (NP (NNP Jesus) (JJ special))
          (ADJP (RB as) (VBN opposed)
            (PP (TO to)
              (NP
                (NP (JJ traditional) (JJ civil) (NNS executions))
                (PP (IN during)
                  (NP (DT the) (NN time)))))))))
    (. .)))

root(ROOT-0, Second-1)
det(bible-5, the-4)
prep_in(treated-9, bible-5)
det(romans-8, the-7)
nsubj(treated-9, romans-8)
dep(Second-1, treated-9)
nsubj(opposed-13, Jesus-10)
amod(Jesus-10, special-11)
advmod(opposed-13, as-12)
xcomp(treated-9, opposed-13)
amod(executions-17, traditional-15)
amod(executions-17, civil-16)
prep_to(opposed-13, executions-17)
det(time-20, the-19)
prep_during(executions-17, time-20)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS romans))
        (SBAR
          (WHNP
            (WHNP (WP who))
            (PRN (-LRB- -LRB-)
              (ADVP (RB supposedly))
              (-RRB- -RRB-)))
          (S
            (VP (VBD crucified)
              (SBAR
                (S
                  (NP (PRP him))
                  (VP (VBD did) (RB not)
                    (VP (VB believe)
                      (NP (PRP he))))))))))
      (VP (VBD was)
        (NP
          (NP (DT the) (NN son))
          (PP (IN of)
            (NP (NN god)
              (CC or)
              (NN anything) (NN special))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (ADVP (RB somehow))
      (VP (VBD gave)
        (NP (PRP him))
        (NP (JJ special) (NN treatment))
        (ADVP (RB anyway))))
    (. ?)))

det(romans-2, The-1)
nsubj(crucified-7, romans-2)
nsubj(son-15, romans-2)
dep(who-3, supposedly-5)
rcmod(romans-2, crucified-7)
nsubj(believe-11, him-8)
aux(believe-11, did-9)
neg(believe-11, not-10)
ccomp(crucified-7, believe-11)
dobj(believe-11, he-12)
cop(son-15, was-13)
det(son-15, the-14)
root(ROOT-0, son-15)
nn(special-20, god-17)
conj_or(god-17, anything-19)
nn(special-20, anything-19)
prep_of(son-15, special-20)
nsubj(gave-25, they-23)
advmod(gave-25, somehow-24)
conj_but(son-15, gave-25)
iobj(gave-25, him-26)
amod(treatment-28, special-27)
dobj(gave-25, treatment-28)
advmod(gave-25, anyway-29)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (VP (VBZ makes)
      (NP (DT no) (NN sense)))
    (. .)))

advmod(makes-3, Again-1)
root(ROOT-0, makes-3)
det(sense-5, no-4)
dobj(makes-3, sense-5)

(ROOT
  (SINV
    (ADVP (RB Even))
    (ADJP (RBR more) (JJ ridiculous))
    (VP (VBZ is))
    (NP (DT the) (NN fact)
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBD made)
            (NP (DT a) (JJ separate) (NN grave))
            (PP (IN for)
              (NP (PRP him)))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NN tradition))
                (VP (VBD was)
                  (S
                    (VP (TO to)
                      (VP (VB throw)
                        (NP (PRP them))
                        (PP (IN in)
                          (NP (DT a) (JJ mass) (NN grave)))))))))))))
    (. .)))

advmod(is-4, Even-1)
advmod(ridiculous-3, more-2)
dep(is-4, ridiculous-3)
root(ROOT-0, is-4)
det(fact-6, the-5)
nsubj(is-4, fact-6)
complm(made-9, that-7)
nsubj(made-9, they-8)
ccomp(fact-6, made-9)
det(grave-12, a-10)
amod(grave-12, separate-11)
dobj(made-9, grave-12)
prep_for(made-9, him-14)
advmod(was-17, when-15)
nsubj(was-17, tradition-16)
xsubj(throw-19, tradition-16)
advcl(made-9, was-17)
aux(throw-19, to-18)
xcomp(was-17, throw-19)
dobj(throw-19, them-20)
det(grave-24, a-22)
amod(grave-24, mass-23)
prep_in(throw-19, grave-24)

(ROOT
  (NP
    (NP (NNP Thirdly))
    (: :)
    (NP
      (NP (DT the) (VBN supposed) (NNS testimonials))
      (PP (TO to)
        (S
          (VP (VBG seeing)
            (NP (NNP Jesus))
            (SBAR (IN after)
              (S
                (NP (NN death))
                (VP (VBP are)
                  (ADJP (JJ inconsistent) (RB even)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP
                          (NP (DT the) (JJ multiple) (NNS parties))
                          (VP (VBG witnessing)
                            (NP (PRP it))))
                        (VP (VBD were)
                          (ADJP (JJ present)))))))))))))
    (. .)))

root(ROOT-0, Thirdly-1)
det(testimonials-5, the-3)
amod(testimonials-5, supposed-4)
dep(Thirdly-1, testimonials-5)
prepc_to(testimonials-5, seeing-7)
dobj(seeing-7, Jesus-8)
mark(inconsistent-12, after-9)
nsubj(inconsistent-12, death-10)
cop(inconsistent-12, are-11)
advcl(seeing-7, inconsistent-12)
advmod(inconsistent-12, even-13)
advmod(present-21, when-14)
det(parties-17, the-15)
amod(parties-17, multiple-16)
nsubj(present-21, parties-17)
partmod(parties-17, witnessing-18)
dobj(witnessing-18, it-19)
cop(present-21, were-20)
dep(inconsistent-12, present-21)

(ROOT
  (S ('' '')
    (NP (DT That))
    (VP (VBZ 's)
      (ADJP (JJ worth))
      (S
        (VP (VBG suffering)
          (PP (IN for)
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBZ means)
                  (S
                    (VP (VBG gaining)
                      (NP (NN life) (JJ eternal)))))))))))
    (. .)))

nsubj(worth-4, That-2)
cop(worth-4, 's-3)
root(ROOT-0, worth-4)
xcomp(worth-4, suffering-5)
mark(means-9, if-7)
nsubj(means-9, it-8)
prepc_for(suffering-5, means-9)
xcomp(means-9, gaining-10)
dobj(gaining-10, life-11)
amod(life-11, eternal-12)

(ROOT
  (S ('' '')
    (S
      (SBAR
        (WHADVP (WRB How))
        (S
          (VP (VBP do))))
      (NP (PRP you))
      (VP (VBP know)))
    (PRN
      (NP (PRP you))
      (VP (MD 'll)))
    (S
      (NP (NN gain))
      (VP (VBZ eternal)
        (NP (NN life))))
    (. ?)))

advmod(do-3, How-2)
dep(know-5, do-3)
nsubj(know-5, you-4)
root(ROOT-0, know-5)
nsubj('ll-7, you-6)
dep(know-5, 'll-7)
nsubj(eternal-9, gain-8)
ccomp(know-5, eternal-9)
dobj(eternal-9, life-10)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 're) (RB not)
              (ADVP (RB just))
              (VP (VBG wasting)
                (NP (PRP$ your) (NN time))))))))
    (. ?)))

advmod(know-4, How-1)
aux(know-4, do-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
nsubj(wasting-9, you-5)
aux(wasting-9, 're-6)
neg(wasting-9, not-7)
advmod(wasting-9, just-8)
ccomp(know-4, wasting-9)
poss(time-11, your-10)
dobj(wasting-9, time-11)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB know)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (ADVP (RB even))
              (VP (VBG worshiping)
                (NP (DT the) (JJ right) (NN god))))))))
    (. ?)))

advmod(know-4, How-1)
aux(know-4, do-2)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
nsubj(worshiping-8, you-5)
aux(worshiping-8, 're-6)
advmod(worshiping-8, even-7)
ccomp(know-4, worshiping-8)
det(god-11, the-9)
amod(god-11, right-10)
dobj(worshiping-8, god-11)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ sounds)
      (ADJP (RB pretty) (JJ arrogant)
        (PP (TO to)
          (NP (PRP me)))))
    (. .)))

nsubj(sounds-2, That-1)
root(ROOT-0, sounds-2)
advmod(arrogant-4, pretty-3)
acomp(sounds-2, arrogant-4)
prep_to(arrogant-4, me-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd) (RB rather)
      (VP (VB suffer)
        (PP (IN for)
          (S
            (VP (VBG choosing)
              (NP (DT the) (JJ right) (NN path)))))))
    (. .)))

nsubj(suffer-4, I-1)
aux(suffer-4, 'd-2)
advmod(suffer-4, rather-3)
root(ROOT-0, suffer-4)
prepc_for(suffer-4, choosing-6)
det(path-9, the-7)
amod(path-9, right-8)
dobj(choosing-6, path-9)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (ADVP (RB too))
      (NP
        (NP (JJ many) (NNS questions))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP arise)
              (ADVP (RB even))
              (PP (IN from)
                (NP (DT the) (NN assumption)))
              (SBAR (IN that)
                (S
                  (NP (DT a) (JJ theistic) (NN god))
                  (ADVP (RB really))
                  (VP (VBZ does)
                    (VP (VB exist))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
advmod('s-2, too-3)
amod(questions-5, many-4)
nsubj('s-2, questions-5)
nsubj(arise-7, questions-5)
rcmod(questions-5, arise-7)
advmod(arise-7, even-8)
det(assumption-11, the-10)
prep_from(arise-7, assumption-11)
complm(exist-18, that-12)
det(god-15, a-13)
amod(god-15, theistic-14)
nsubj(exist-18, god-15)
advmod(exist-18, really-16)
aux(exist-18, does-17)
ccomp(arise-7, exist-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ funny)
        (PP (TO to)
          (NP (PRP me))))
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (PP (IN for)
                (NP
                  (NP (DT any) (NN reason))
                  (PP (JJ other) (IN than)
                    (NP (NN religion)))))
              (NP (PRP you))
              (VP (VBD acted)
                (NP
                  (NP (DT the) (NN way))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBD did))))))))
          (, ,)
          (NP (PRP you))
          (VP (MD 'd)
            (VP (VB be)
              (VP (VBN considered)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ crazy)))))))))))
    (. .)))

nsubj(funny-3, It-1)
cop(funny-3, 's-2)
root(ROOT-0, funny-3)
prep_to(funny-3, me-5)
complm(considered-24, that-6)
mark(acted-15, if-7)
det(reason-10, any-9)
prep_for(acted-15, reason-10)
dep(reason-10, other-11)
prep_than(reason-10, religion-13)
nsubj(acted-15, you-14)
advcl(considered-24, acted-15)
det(way-17, the-16)
dobj(acted-15, way-17)
dobj(did-19, way-17)
nsubj(did-19, you-18)
rcmod(way-17, did-19)
nsubjpass(considered-24, you-21)
aux(considered-24, 'd-22)
auxpass(considered-24, be-23)
ccomp(funny-3, considered-24)
aux(crazy-27, to-25)
cop(crazy-27, be-26)
xcomp(considered-24, crazy-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (SBAR (IN about)
              (S
                (NP (NN time) (NNS psychiatrists))
                (VP (VBP start)
                  (S
                    (VP (VBG evaluating)
                      (NP (NN religion))))))))))
      (, ,)
      (ADVP (RB as) (RB well)))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj('s-4, it-3)
ccomp(think-2, 's-4)
mark(start-8, about-5)
nn(psychiatrists-7, time-6)
nsubj(start-8, psychiatrists-7)
advcl('s-4, start-8)
xcomp(start-8, evaluating-9)
dobj(evaluating-9, religion-10)
advmod(well-13, as-12)
mwe(well-13, as-12)
advmod(think-2, well-13)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (NNP Pascal) (POS 's))
        (NNP Wager))
      (VP (VBZ is)
        (NP (DT a) (JJ false) (NN dichotomy))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (VP (VBZ 's) (RB not)
          (ADVP (RB just))))
      (, ,) (`` ``)
      (S
        (SBAR (IN If)
          (S
            (NP (PRP$ my) (NN christian) (NN god))
            (VP (VBZ is) (RB n't)
              (ADJP (JJ real)))))
        (, ,)
        (ADVP (RB then))
        (NP (PRP I))
        (VP (VBP have)
          (ADVP (NN nothing))
          (S
            (VP (TO to)
              (VP (VB worry)
                (PRT (RP about))
                (ADVP (RB anyway))
                (SBAR (IN since)
                  (S
                    (NP (PRP I))
                    (VP (VBP 'm)
                      (VP
                        (VP (VBG taking)
                          (NP (DT the) (JJ safe) (NN route)))
                        (CC and)
                        (VP (VBG believing))))))))))))
    (. .)))

poss(Wager-4, Pascal-2)
nsubj(dichotomy-8, Wager-4)
cop(dichotomy-8, is-5)
det(dichotomy-8, a-6)
amod(dichotomy-8, false-7)
root(ROOT-0, dichotomy-8)
nsubj('s-11, it-10)
parataxis(dichotomy-8, 's-11)
neg('s-11, not-12)
advmod('s-11, just-13)
mark(real-22, If-16)
poss(god-19, my-17)
nn(god-19, christian-18)
nsubj(real-22, god-19)
cop(real-22, is-20)
neg(real-22, n't-21)
advcl(have-26, real-22)
advmod(have-26, then-24)
nsubj(have-26, I-25)
xsubj(worry-29, I-25)
dep('s-11, have-26)
advmod(have-26, nothing-27)
aux(worry-29, to-28)
xcomp(have-26, worry-29)
prt(worry-29, about-30)
advmod(worry-29, anyway-31)
mark(taking-35, since-32)
nsubj(taking-35, I-33)
nsubj(believing-40, I-33)
aux(taking-35, 'm-34)
advcl(worry-29, taking-35)
det(route-38, the-36)
amod(route-38, safe-37)
dobj(taking-35, route-38)
advcl(worry-29, believing-40)
conj_and(taking-35, believing-40)

(ROOT
  (S ('' '')
    (PP (IN In)
      (NP (NN reality)))
    (, ,)
    (NP
      (NP (DT any) (NN one))
      (PP (IN of)
        (NP
          (NP (DT the) (NNS thousands))
          (PP (IN of)
            (NP
              (NP (NNS gods))
              (PP (IN in)
                (NP (NN history))))))))
    (VP (VBP are)
      (ADVP (RB also))
      (NP (DT a) (NN possibility)))
    (. .)))

prep_in(possibility-17, reality-3)
det(one-6, any-5)
nsubj(possibility-17, one-6)
det(thousands-9, the-8)
prep_of(one-6, thousands-9)
prep_of(thousands-9, gods-11)
prep_in(gods-11, history-13)
cop(possibility-17, are-14)
advmod(possibility-17, also-15)
det(possibility-17, a-16)
root(ROOT-0, possibility-17)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (PP (IN about)
            (NP (PRP you))))))
    (, ,)
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP
            (VP (VBD believed))
            (CC and)
            (ADVP (RB then))
            (VP
              (ADVP (RB only))
              (VBD realized)
              (NP (JJ many) (, ,) (JJ many) (NNS years))
              (SBAR
                (ADVP (RB later))
                (IN that)
                (S
                  (NP (PRP I))
                  (VP (VBD was)
                    (ADJP (JJ wrong)))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD would)
        (VP (VB be)
          (VP (VBN devastated)))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
prep_about(know-4, you-6)
mark(believed-11, if-9)
nsubj(believed-11, I-10)
nsubj(realized-15, I-10)
advcl(devastated-29, believed-11)
advmod(believed-11, then-13)
conj_and(believed-11, then-13)
advcl(devastated-29, then-13)
advmod(realized-15, only-14)
conj_and(believed-11, realized-15)
advcl(devastated-29, realized-15)
amod(years-19, many-16)
amod(years-19, many-18)
tmod(realized-15, years-19)
advmod(wrong-24, later-20)
dep(wrong-24, that-21)
nsubj(wrong-24, I-22)
cop(wrong-24, was-23)
dep(realized-15, wrong-24)
nsubjpass(devastated-29, I-26)
aux(devastated-29, would-27)
auxpass(devastated-29, be-28)
conj_but(know-4, devastated-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB 've)
        (VP (VBN been)
          (NP
            (NP (DT a) (JJ complete) (NN waste))
            (PP (IN of)
              (NP (NN time)))))))
    (. .)))

nsubj(waste-7, It-1)
aux(waste-7, would-2)
aux(waste-7, 've-3)
cop(waste-7, been-4)
det(waste-7, a-5)
amod(waste-7, complete-6)
root(ROOT-0, waste-7)
prep_of(waste-7, time-9)

(ROOT
  (S
    (ADVP (RB \))
    (`` ``)
    (NP (NNP God))
    (VP (VBZ desires)
      (S
        (VP (TO to)
          (VP (VB rescue)
            (NP (PRP us))
            (PP (IN from)
              (S
                (VP (VBG suffering)
                  (PP (IN as)
                    (NP (NNS sinners)))))))))
      (, ,)
      (CC but)
      (SBAR (IN that)
        (S
          (VP (VBZ means)
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD 'll)
                  (VP (VB need)
                    (S
                      (VP (TO to)
                        (VP (VB suffer)
                          (NP (NN ridicule))
                          (PP (IN as)
                            (NP (PRP$ His) (NNS children))))))))))))))
    (. .)))

advmod(desires-4, \-1)
nsubj(desires-4, God-3)
xsubj(rescue-6, God-3)
nsubj(means-15, God-3)
root(ROOT-0, desires-4)
aux(rescue-6, to-5)
xcomp(desires-4, rescue-6)
dobj(rescue-6, us-7)
prepc_from(rescue-6, suffering-9)
prep_as(suffering-9, sinners-11)
complm(means-15, that-14)
ccomp(desires-4, means-15)
conj_but(desires-4, means-15)
nsubj(need-18, we-16)
xsubj(suffer-20, we-16)
aux(need-18, 'll-17)
ccomp(means-15, need-18)
aux(suffer-20, to-19)
xcomp(need-18, suffer-20)
dobj(suffer-20, ridicule-21)
poss(children-24, His-23)
prep_as(suffer-20, children-24)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ kind-of)
        (S
          (VP
            (VP
              (ADVP (RB backwards)
                (PP (IN for)
                  (NP (NN god))))
              (TO to)
              (VP (VB make)
                (NP
                  (NP (DT a) (NN system))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ is)
                        (VP (VBN guaranteed)
                          (S
                            (VP (TO to)
                              (VP (VB send)
                                (NP
                                  (NP (NNS billions))
                                  (PP (IN of)
                                    (NP (NNS people))))
                                (PP (TO to)
                                  (NP (NN hell)))))))))))))
            (, ,) (RB then)
            (VP (VB pretend)
              (SBAR
                (S
                  (NP (PRP he))
                  (VP (VBZ cares)))))))))
    (. .)))

nsubj(kind-of-4, It-2)
cop(kind-of-4, 's-3)
root(ROOT-0, kind-of-4)
advmod(make-9, backwards-5)
prep_for(backwards-5, god-7)
aux(make-9, to-8)
dep(kind-of-4, make-9)
det(system-11, a-10)
dobj(make-9, system-11)
nsubjpass(guaranteed-14, system-11)
auxpass(guaranteed-14, is-13)
rcmod(system-11, guaranteed-14)
aux(send-16, to-15)
xcomp(guaranteed-14, send-16)
dobj(send-16, billions-17)
prep_of(billions-17, people-19)
prep_to(send-16, hell-21)
advmod(make-9, then-23)
dep(make-9, pretend-24)
nsubj(cares-26, he-25)
ccomp(pretend-24, cares-26)

