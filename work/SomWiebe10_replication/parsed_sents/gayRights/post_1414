(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD sated) (: :) (`` ``)
        (S
          (NP (DT The) (NNS progenitors))
          (VP (VB give)
            (PRT (RP up))
            (NP (PRP$ their) (NN authority))
            (PP (TO to)
              (NP
                (NP (DT the) (NN child))
                (NP (DT the) (NN second))))))))
    (NP (PRP they))
    (VP (VBP give)
      (NP (PRP it))
      (PRT (RP up))
      (PP (IN for)
        (NP (NN adoption))))
    (. .)))

nsubj(sated-2, You-1)
dep(give-17, sated-2)
det(progenitors-6, The-5)
nsubj(give-7, progenitors-6)
ccomp(sated-2, give-7)
prt(give-7, up-8)
poss(authority-10, their-9)
dobj(give-7, authority-10)
det(child-13, the-12)
prep_to(give-7, child-13)
det(second-15, the-14)
dep(child-13, second-15)
nsubj(give-17, they-16)
root(ROOT-0, give-17)
dobj(give-17, it-18)
prt(give-17, up-19)
prep_for(give-17, adoption-21)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sorry)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR (IN that)
                (S
                  (NP (PRP$ your) (NN conclusion))
                  (VP (VBZ is)
                    (VP (VBN flawed)
                      (PP (IN in)
                        (NP (DT that) (NN regard))))))))))))
    (. .)))

nsubj(sorry-3, I-1)
cop(sorry-3, 'm-2)
root(ROOT-0, sorry-3)
aux(say-5, to-4)
xcomp(sorry-3, say-5)
complm(flawed-10, that-6)
poss(conclusion-8, your-7)
nsubjpass(flawed-10, conclusion-8)
auxpass(flawed-10, is-9)
ccomp(say-5, flawed-10)
det(regard-13, that-12)
prep_in(flawed-10, regard-13)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (NP (PRP$ your) (NN argument))
        (VP (VBZ is)
          (ADJP (JJ willful)))))
    (NP
      (NP (NN deception))
      (CC or)
      (NP (DT a) (JJ logical) (NN error)))
    (VP (VBZ remains)
      (SBAR (IN for)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB decide))))))
    (. .)))

complm(willful-5, Whether-1)
poss(argument-3, your-2)
nsubj(willful-5, argument-3)
cop(willful-5, is-4)
ccomp(remains-11, willful-5)
nsubj(remains-11, deception-6)
det(error-10, a-8)
amod(error-10, logical-9)
conj_or(deception-6, error-10)
nsubj(remains-11, error-10)
root(ROOT-0, remains-11)
mark(decide-15, for-12)
nsubj(decide-15, you-13)
aux(decide-15, to-14)
advcl(remains-11, decide-15)
xcomp(remains-11, decide-15)

(ROOT
  (S
    (NP (NNP Next) (, ,))
    (VP (VBD reread)
      (NP
        (NP (DT the) (NN conclusion))
        (FRAG (CC and)
          (NP
            (NP (PRP you))
            (SBAR
              (S
                (VP (MD will)
                  (VP (VB find)))
                (: :)))
            (. .)))))
    (. .)))

nsubj(reread-3, Next-1)
root(ROOT-0, reread-3)
det(conclusion-5, the-4)
dobj(reread-3, conclusion-5)
dep(you-7, and-6)
dep(conclusion-5, you-7)
aux(find-9, will-8)
rcmod(you-7, find-9)

(ROOT
  (S
    (NP
      (NP (DT the) (NN choice))
      (PP (IN as) (TO to)
        (SBAR
          (WHNP (WP whom))
          (S
            (NP (DT the) (NN child))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN adopted)
                  (PP (IN by)))))))))
    (VP (MD must)
      (VP (VB remain)
        (NP
          (NP (DT the) (JJ sole) (NN authority))
          (PP (IN of)
            (NP
              (NP (DT the) (NNS progenitors))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN child))
                  (CC or)
                  (NP (NNS relatives)))))))))
    (: ...)))

det(choice-2, the-1)
nsubj(authority-16, choice-2)
dep(adopted-10, whom-5)
det(child-7, the-6)
nsubjpass(adopted-10, child-7)
aux(adopted-10, can-8)
auxpass(adopted-10, be-9)
prepc_as_to(choice-2, adopted-10)
prep(adopted-10, by-11)
aux(authority-16, must-12)
cop(authority-16, remain-13)
det(authority-16, the-14)
amod(authority-16, sole-15)
root(ROOT-0, authority-16)
det(progenitors-19, the-18)
prep_of(authority-16, progenitors-19)
det(child-22, the-21)
prep_of(progenitors-19, child-22)
prep_of(progenitors-19, relatives-24)
conj_or(child-22, relatives-24)

(ROOT
  (S
    (NP (DT The) (NN child))
    (VP (VBZ remains)
      (PP (IN under)
        (NP
          (NP (DT the) (NN authority))
          (PP (IN of)
            (NP (DT the) (NN parent)))))
      (SBAR (IN until)
        (S
          (NP (DT the) (NN child))
          (VP (VBZ is)
            (VP (VBN adopted))))))
    (. .)))

det(child-2, The-1)
nsubj(remains-3, child-2)
root(ROOT-0, remains-3)
det(authority-6, the-5)
prep_under(remains-3, authority-6)
det(parent-9, the-8)
prep_of(authority-6, parent-9)
mark(adopted-14, until-10)
det(child-12, the-11)
nsubjpass(adopted-14, child-12)
auxpass(adopted-14, is-13)
advcl(remains-3, adopted-14)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD attempted)
        (S
          (VP (TO to)
            (VP (VB redefine)
              (NP
                (NP (DT that))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD was)
                      (ADVP (RB previously))
                      (VP (VBN defined)
                        (PP (IN in)
                          (NP (DT the) (NN argument)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ your) (NN argument))
      (VP (VBZ is)
        (VP (VBG attempting)
          (S
            (VP (TO to)
              (VP (VB establish)
                (NP (DT the) (JJ straw-man) (NN fallacy))))))))
    (. .)))

nsubj(attempted-2, You-1)
xsubj(redefine-4, You-1)
root(ROOT-0, attempted-2)
aux(redefine-4, to-3)
xcomp(attempted-2, redefine-4)
dobj(redefine-4, that-5)
nsubjpass(defined-9, that-5)
auxpass(defined-9, was-7)
advmod(defined-9, previously-8)
rcmod(that-5, defined-9)
det(argument-12, the-11)
prep_in(defined-9, argument-12)
poss(argument-16, your-15)
nsubj(attempting-18, argument-16)
xsubj(establish-20, argument-16)
aux(attempting-18, is-17)
conj_and(attempted-2, attempting-18)
aux(establish-20, to-19)
xcomp(attempting-18, establish-20)
det(fallacy-23, the-21)
amod(fallacy-23, straw-man-22)
dobj(establish-20, fallacy-23)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (PRP you))
    (VP (VBD stated) (: :) (`` ``)
      (S
        (NP (PRP You))
        (VP (MD must)
          (ADVP (RB also))
          (VP (VB note)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NN acceptance))
                  (PP (IN by)
                    (NP (NN society))))
                (VP (VBZ makes)
                  (S
                    (NP (PRP it))
                    (NP (DT an) (NN institution))))))))))
    (. .)))

advmod(stated-4, Again-1)
nsubj(stated-4, you-3)
root(ROOT-0, stated-4)
nsubj(note-10, You-7)
aux(note-10, must-8)
advmod(note-10, also-9)
ccomp(stated-4, note-10)
complm(makes-16, that-11)
det(acceptance-13, the-12)
nsubj(makes-16, acceptance-13)
prep_by(acceptance-13, society-15)
ccomp(note-10, makes-16)
nsubj(institution-19, it-17)
det(institution-19, an-18)
xcomp(makes-16, institution-19)

(ROOT
  (S (`` ``)
    (ADVP (RB Therefore))
    (PP (IN in)
      (NP
        (NP (NN accord))
        (PP (IN with)
          (NP (DT that) (NN proposition)))))
    (S
      (NP (DT the) (NN following))
      (VP (VBZ is)
        (ADJP (JJ valid))))
    (: :)
    (S
      (NP (NNP Society))
      (VP (VBZ accepts)
        (ADVP (RB homosexuality))))
    (. .)))

advmod(valid-11, Therefore-2)
prep_in(valid-11, accord-4)
det(proposition-7, that-6)
prep_with(accord-4, proposition-7)
det(following-9, the-8)
nsubj(valid-11, following-9)
cop(valid-11, is-10)
root(ROOT-0, valid-11)
nsubj(accepts-14, Society-13)
parataxis(valid-11, accepts-14)
advmod(accepts-14, homosexuality-15)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (NN homosexuality))
    (VP (VBZ is)
      (NP (DT an) (NN institution)))
    (. .)))

advmod(institution-6, Therefore-1)
nsubj(institution-6, homosexuality-3)
cop(institution-6, is-4)
det(institution-6, an-5)
root(ROOT-0, institution-6)

(ROOT
  (S
    (NP (NNP Society))
    (VP (VBZ accepts)
      (NP (NN masturbation)))
    (. .)))

nsubj(accepts-2, Society-1)
root(ROOT-0, accepts-2)
dobj(accepts-2, masturbation-3)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (NN masturbation))
    (VP (VBZ is)
      (NP (DT an) (NN institution)))
    (. .)))

advmod(institution-6, Therefore-1)
nsubj(institution-6, masturbation-3)
cop(institution-6, is-4)
det(institution-6, an-5)
root(ROOT-0, institution-6)

(ROOT
  (S
    (NP (NNP Society))
    (VP (VBZ accepts)
      (ADVP (RB stupidity)))
    (. .)))

nsubj(accepts-2, Society-1)
root(ROOT-0, accepts-2)
advmod(accepts-2, stupidity-3)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP
          (VP (VBP are) (RB not)
            (ADJP (JJ willing)
              (PP (TO to))))
          (CC or)
          (VP (MD can) (RB not)
            (VP
              (VP (VB take)
                (NP (NN responsibility))
                (PP (IN for)
                  (S
                    (VP (VBG maintaining)
                      (NP (DT a) (NN child))))))
              (CC and)
              (VP (`` ``) (VB give) ('' '')
                (NP (PRP it)))
              (ADVP (RB up)
                (PP (IN for)
                  (NP (NN adoption)))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP lose)
      (NP (DT all) (NNS rights))
      (PP (TO to)
        (NP (DT that) (NN child))))
    (. .)))

mark(willing-5, If-1)
nsubj(willing-5, you-2)
nsubj(take-10, you-2)
cop(willing-5, are-3)
neg(willing-5, not-4)
advcl(lose-26, willing-5)
prep(willing-5, to-6)
aux(take-10, can-8)
neg(take-10, not-9)
conj_or(willing-5, take-10)
advcl(lose-26, take-10)
dobj(take-10, responsibility-11)
prepc_for(take-10, maintaining-13)
det(child-15, a-14)
dobj(maintaining-13, child-15)
conj_or(willing-5, give-18)
conj_and(take-10, give-18)
dobj(give-18, it-20)
advmod(take-10, up-21)
prep_for(up-21, adoption-23)
nsubj(lose-26, you-25)
root(ROOT-0, lose-26)
det(rights-28, all-27)
dobj(lose-26, rights-28)
det(child-31, that-30)
prep_to(lose-26, child-31)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (NN stupidity))
    (VP (VBZ is)
      (NP (DT an) (NN institution)))
    (. .)))

advmod(institution-6, Therefore-1)
nsubj(institution-6, stupidity-3)
cop(institution-6, is-4)
det(institution-6, an-5)
root(ROOT-0, institution-6)

(ROOT
  (S
    (NP (NNP Society))
    (VP (VBZ accepts)
      (WHNP (WDT whatever)))
    (. .)))

nsubj(accepts-2, Society-1)
root(ROOT-0, accepts-2)
dobj(accepts-2, whatever-3)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (WDT whatever))
    (VP (VBZ is)
      (NP (DT an) (NN institution)))
    (. .)))

advmod(institution-6, Therefore-1)
nsubj(institution-6, whatever-3)
cop(institution-6, is-4)
det(institution-6, an-5)
root(ROOT-0, institution-6)

(ROOT
  (S
    (NP (NNP Reductio) (NN ad))
    (VP (VBP absurdum))
    (. !)))

nn(ad-2, Reductio-1)
nsubj(absurdum-3, ad-2)
root(ROOT-0, absurdum-3)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (PRP you))
    (VP (VBD stated) (: :) (`` ``)
      (S
        (SBAR (IN If)
          (S
            (NP (PRP you))
            (VP
              (VP (VBP are) (RB not)
                (ADJP (JJ willing)
                  (PP (TO to))))
              (CC or)
              (VP (MD can) (RB not)
                (VP
                  (VP (VB take)
                    (NP (NN responsibility))
                    (PP (IN for)
                      (S
                        (VP (VBG maintaining)
                          (NP (DT a) (NN child))))))
                  (CC and)
                  (VP (`` ``) (VB give) ('' '')
                    (NP (PRP it)))
                  (ADVP (RB up)
                    (PP (IN for)
                      (NP (NN adoption)))))))))
        (, ,)
        (NP (PRP you))
        (VP (VBP lose)
          (NP (DT all) (NNS rights))
          (PP (TO to)
            (NP (DT that) (NN child))))))
    (. .)))

advmod(stated-4, Again-1)
nsubj(stated-4, you-3)
root(ROOT-0, stated-4)
mark(willing-11, If-7)
nsubj(willing-11, you-8)
nsubj(take-16, you-8)
cop(willing-11, are-9)
neg(willing-11, not-10)
advcl(lose-32, willing-11)
prep(willing-11, to-12)
aux(take-16, can-14)
neg(take-16, not-15)
conj_or(willing-11, take-16)
advcl(lose-32, take-16)
dobj(take-16, responsibility-17)
prepc_for(take-16, maintaining-19)
det(child-21, a-20)
dobj(maintaining-19, child-21)
conj_or(willing-11, give-24)
conj_and(take-16, give-24)
dobj(give-24, it-26)
advmod(take-16, up-27)
prep_for(up-27, adoption-29)
nsubj(lose-32, you-31)
ccomp(stated-4, lose-32)
det(rights-34, all-33)
dobj(lose-32, rights-34)
det(child-37, that-36)
prep_to(lose-32, child-37)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP What))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB mean)
        (PP (IN by)
          (S
            (VP (VBG maintaining)
              (NP (DT a) (NN child)))))))
    (. ?)))

dobj(mean-5, What-2)
aux(mean-5, do-3)
nsubj(mean-5, you-4)
root(ROOT-0, mean-5)
prepc_by(mean-5, maintaining-7)
det(child-9, a-8)
dobj(maintaining-7, child-9)

(ROOT
  (S
    (NP (PRP$ Your) (NNS arguments))
    (VP (VBP are)
      (VP (VBG validating)
        (NP (PRP$ my) (NNS arguments))))
    (. .)))

poss(arguments-2, Your-1)
nsubj(validating-4, arguments-2)
aux(validating-4, are-3)
root(ROOT-0, validating-4)
poss(arguments-6, my-5)
dobj(validating-4, arguments-6)

(ROOT
  (S
    (NP (NNS Parents))
    (VP
      (VP (VBP maintain)
        (NP
          (NP (PRP$ their) (NNS cars) (, ,) (NNS houses) (, ,) (NNS lawns) (, ,) (NNS toilets) (, ,) (NNS tubs) (, ,) (NN sex) (NNS toys))
          (, ,)
          (NP (FW etc.))))
      (, ,)
      (CC but)
      (ADVP (RB never))
      (SBAR
        (SBAR
          (SINV (MD can)
            (NP (PRP it))
            (VP (VB be)
              (VP (VBN said)
                (SBAR (IN that)
                  (S
                    (NP (PRP they))
                    (VP (VBP maintain)
                      (NP (PRP$ their) (NNS children)))))))))
        (, ,)
        (SBAR (IN unless)
          (S
            (PP (IN of)
              (NP (NN course)))
            (NP (PRP they))
            (VP (VBP are)
              (ADVP (RB alike))
              (NP (NNS janitors)
                (CC and)
                (NN maintenance) (NNS personnel)))))))
    (. .)))

nsubj(maintain-2, Parents-1)
root(ROOT-0, maintain-2)
poss(toys-15, their-3)
nn(toys-15, cars-4)
dep(toys-15, houses-6)
dep(toys-15, lawns-8)
dep(toys-15, toilets-10)
dep(toys-15, tubs-12)
dep(toys-15, sex-14)
dobj(maintain-2, toys-15)
appos(toys-15, etc.-17)
advmod(maintain-2, never-20)
conj_but(maintain-2, never-20)
neg(maintain-2, never-20)
aux(said-24, can-21)
nsubjpass(said-24, it-22)
auxpass(said-24, be-23)
conj_but(maintain-2, said-24)
complm(maintain-27, that-25)
nsubj(maintain-27, they-26)
ccomp(said-24, maintain-27)
poss(children-29, their-28)
dobj(maintain-27, children-29)
mark(janitors-37, unless-31)
prep_of(janitors-37, course-33)
nsubj(janitors-37, they-34)
cop(janitors-37, are-35)
advmod(janitors-37, alike-36)
dep(said-24, janitors-37)
nn(personnel-40, maintenance-39)
dep(said-24, personnel-40)
conj_and(janitors-37, personnel-40)

(ROOT
  (S
    (NP
      (NP (NNS Parents))
      (PRN (, ,)
        (PP (IN through)
          (PP (IN out)
            (NP
              (NP (DT the) (NN life))
              (PP (IN of)
                (NP (CC either)
                  (NP (PRP themselves))
                  (CC or)
                  (NP (PRP$ their) (NNS children)))))))
        (, ,)))
    (ADVP (RB always))
    (VP (VBP strive)
      (S
        (VP (TO to)
          (VP
            (VP (VB care)
              (PP (IN for)
                (NP
                  (NP (PRP$ their) (NN progeny))
                  (SBAR
                    (WHPP (IN in)
                      (WHNP (WDT whatever)))
                    (S
                      (NP (NN capacity))
                      (VP (VBZ is)
                        (VP (VBN required)
                          (PP (IN at)
                            (NP (DT any) (VBN given) (NN time))))))))))
            (CC and)
            (VP (VB provide)
              (NP (DT both) (JJ tangible)
                (CC and)
                (JJ abstract) (NNS necessities)))))))
    (. .)))

nsubj(strive-15, Parents-1)
xsubj(care-17, Parents-1)
dep(Parents-1, through-3)
pcomp(through-3, out-4)
det(life-6, the-5)
prep_out(through-3, life-6)
preconj(themselves-9, either-8)
prep_of(life-6, themselves-9)
poss(children-12, their-11)
prep_of(life-6, children-12)
conj_or(themselves-9, children-12)
advmod(strive-15, always-14)
root(ROOT-0, strive-15)
aux(care-17, to-16)
xcomp(strive-15, care-17)
poss(progeny-20, their-19)
prep_for(care-17, progeny-20)
rel(required-25, whatever-22)
nsubjpass(required-25, capacity-23)
auxpass(required-25, is-24)
rcmod(progeny-20, required-25)
det(time-29, any-27)
amod(time-29, given-28)
prep_at(required-25, time-29)
xcomp(strive-15, provide-31)
conj_and(care-17, provide-31)
det(necessities-36, both-32)
amod(necessities-36, tangible-33)
conj_and(tangible-33, abstract-35)
amod(necessities-36, abstract-35)
dobj(provide-31, necessities-36)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP assert)))
    (: :)
    (S
      (NP (PRP I))
      (VP (MD must)
        (ADVP (RB lastly))
        (VP (VB note)
          (SBAR (IN that)
            (S
              (NP
                (NP (JJS most))
                (PP (IN of)
                  (NP (PRP$ your) (JJ first) (NN paragraph))))
              (VP (VBZ has)
                (NP
                  (NP (DT no) (JJ psychological) (NN validity))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN nature))
                      (PP (IN of)
                        (NP (NN homosexuality))))))))))))
    (. .)))

nsubj(assert-2, You-1)
root(ROOT-0, assert-2)
nsubj(note-7, I-4)
aux(note-7, must-5)
advmod(note-7, lastly-6)
parataxis(assert-2, note-7)
complm(has-14, that-8)
nsubj(has-14, most-9)
poss(paragraph-13, your-11)
amod(paragraph-13, first-12)
prep_of(most-9, paragraph-13)
ccomp(note-7, has-14)
det(validity-17, no-15)
amod(validity-17, psychological-16)
dobj(has-14, validity-17)
det(nature-20, the-19)
prep_in(validity-17, nature-20)
prep_of(nature-20, homosexuality-22)

(ROOT
  (S
    (NP (PRP$ Your) (JJ final) (NN statement) (NN doesn))
    (VP (VBP t)
      (VP (VB challenge)
        (NP
          (NP (DT any) (NN assertion))
          (PP (IN in)
            (NP (NN paragraph) (CD one))))))
    (. .)))

poss(doesn-4, Your-1)
amod(doesn-4, final-2)
nn(doesn-4, statement-3)
nsubj(t-5, doesn-4)
root(ROOT-0, t-5)
xcomp(t-5, challenge-6)
det(assertion-8, any-7)
dobj(challenge-6, assertion-8)
prep_in(assertion-8, paragraph-10)
num(paragraph-10, one-11)

(ROOT
  (S
    (ADVP (RB Moreover))
    (, ,)
    (NP
      (NP (NN paragraph) (CD one))
      (PP (IN of)
        (NP (DT the) (NN argument))))
    (VP
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT a) (JJ psychological) (NN description))
          (PP (IN of)
            (NP (DT any) (NN subject)))))
      (CC and)
      (VP
        (ADVP (RB hence))
        (MD can) (RB not)
        (VP (VB be)
          (ADJP (RB psychologically) (JJ valid)
            (CC or)
            (JJ invalid)))))
    (. .)))

advmod(description-12, Moreover-1)
nsubj(description-12, paragraph-3)
nsubj(valid-22, paragraph-3)
num(paragraph-3, one-4)
det(argument-7, the-6)
prep_of(paragraph-3, argument-7)
cop(description-12, is-8)
neg(description-12, not-9)
det(description-12, a-10)
amod(description-12, psychological-11)
root(ROOT-0, description-12)
det(subject-15, any-14)
prep_of(description-12, subject-15)
advmod(valid-22, hence-17)
aux(valid-22, can-18)
neg(valid-22, not-19)
cop(valid-22, be-20)
advmod(valid-22, psychologically-21)
conj_and(description-12, valid-22)
conj_and(description-12, invalid-24)
conj_or(valid-22, invalid-24)

(ROOT
  (S
    (ADVP (RB Hence))
    (NP (DT the) (NN term))
    (VP (`` ``) (VBP give)
      (ADVP (RB him\/her))
      (ADVP (RB up)
        (PP (IN for)
          (NP (NN adoption)))))
    ('' '') (. .)))

advmod(give-5, Hence-1)
det(term-3, the-2)
nsubj(give-5, term-3)
root(ROOT-0, give-5)
advmod(give-5, him\/her-6)
advmod(give-5, up-7)
prep_for(up-7, adoption-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB however))
      (NP
        (NP (DT an) (NN argument))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADVP (RB demonstratively))
              (VP (VBN evidenced)
                (PP (IN by)
                  (NP
                    (NP (DT the) (NNS deeds))
                    (PP (IN of)
                      (NP (NNS homosexuals)))))))))))
    (. .)))

nsubj(argument-5, It-1)
cop(argument-5, is-2)
advmod(argument-5, however-3)
det(argument-5, an-4)
root(ROOT-0, argument-5)
nsubjpass(evidenced-9, argument-5)
auxpass(evidenced-9, is-7)
advmod(evidenced-9, demonstratively-8)
rcmod(argument-5, evidenced-9)
det(deeds-12, the-11)
agent(evidenced-9, deeds-12)
prep_of(deeds-12, homosexuals-14)

(ROOT
  (S
    (NP (DT No) (NN attempt))
    (VP (VBD was)
      (VP (VBN made)
        (PP (IN in)
          (NP (PRP$ my) (NN argument)
            (S
              (VP (TO to)
                (VP (VB suggest)
                  (NP
                    (NP
                      (NP (DT a) (NN description))
                      (PP (IN of)
                        (NP (DT the) (NN mind))))
                    (CC or)
                    (NP
                      (NP (DT the) (NN thought) (NNS processes))
                      (PP (IN of)
                        (NP (JJ male)
                          (CC or)
                          (JJ female) (NNS homosexuals))))))))))))
    (. .)))

det(attempt-2, No-1)
nsubjpass(made-4, attempt-2)
auxpass(made-4, was-3)
root(ROOT-0, made-4)
poss(argument-7, my-6)
prep_in(made-4, argument-7)
aux(suggest-9, to-8)
infmod(argument-7, suggest-9)
det(description-11, a-10)
dobj(suggest-9, description-11)
det(mind-14, the-13)
prep_of(description-11, mind-14)
det(processes-18, the-16)
nn(processes-18, thought-17)
dobj(suggest-9, processes-18)
conj_or(description-11, processes-18)
amod(homosexuals-23, male-20)
conj_or(male-20, female-22)
amod(homosexuals-23, female-22)
prep_of(processes-18, homosexuals-23)

(ROOT
  (FRAG (CC And)
    (S
      (VP (VB lastly) (, ,)
        (SBAR (IN if)
          (S
            (NP (NNS homosexuals))
            (VP (VBP are)
              (VP (IN that)
                (S
                  (VP (VBG caring)
                    (SBAR
                      (SBARQ
                        (WHADVP (WRB why))
                        (SQ (MD would)
                          (NP (PRP they))
                          (VP (VB adopt)
                            (NP (DT a) (NN baby))
                            (SBAR (IN that)
                              (S
                                (NP (PRP they))
                                (VP (MD can) (RB not)
                                  (VP (VB breast)
                                    (NP (NN feed))))))))
                        (. ?)))))))))))))

dep(lastly-2, And-1)
root(ROOT-0, lastly-2)
mark(that-7, if-4)
nsubj(that-7, homosexuals-5)
aux(that-7, are-6)
advcl(lastly-2, that-7)
xcomp(that-7, caring-8)
advmod(adopt-12, why-9)
aux(adopt-12, would-10)
nsubj(adopt-12, they-11)
dep(caring-8, adopt-12)
det(baby-14, a-13)
dobj(adopt-12, baby-14)
complm(breast-19, that-15)
nsubj(breast-19, they-16)
aux(breast-19, can-17)
neg(breast-19, not-18)
ccomp(adopt-12, breast-19)
dobj(breast-19, feed-20)

(ROOT
  (S (IN For)
    (NP (NN breastmilk))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJS best) (NN milk))
        (PP (IN for)
          (NP (NNS infants)))))
    (. .)))

dep(milk-6, For-1)
nsubj(milk-6, breastmilk-2)
cop(milk-6, is-3)
det(milk-6, the-4)
amod(milk-6, best-5)
root(ROOT-0, milk-6)
prep_for(milk-6, infants-8)

(ROOT
  (S
    (NP
      (NP (DT All) (NNS companies))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP produce)
            (NP (NN baby) (NN formula))))))
    (VP (VBP admit)
      (SBAR (IN that)
        (S
          (NP (PRP$ their) (NNS products))
          (VP (VBP are)
            (ADJP (JJ second))
            (ADVP (RBS best))))))
    (. .)))

det(companies-2, All-1)
nsubj(produce-4, companies-2)
nsubj(admit-7, companies-2)
rcmod(companies-2, produce-4)
nn(formula-6, baby-5)
dobj(produce-4, formula-6)
root(ROOT-0, admit-7)
complm(second-12, that-8)
poss(products-10, their-9)
nsubj(second-12, products-10)
cop(second-12, are-11)
ccomp(admit-7, second-12)
advmod(second-12, best-13)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ natural) (NN order))
      (PP (IN of)
        (NP
          (NP (NN life))
          (PP (IN among)
            (NP (NNS animals))))))
    (VP (VBZ is)
      (VP (VBN predicated)
        (PP (IN upon)
          (NP
            (NP (DT the) (NN breast) (NN milk))
            (PP (IN of)
              (NP (DT the) (NN mother)))))))
    (. .)))

det(order-3, The-1)
amod(order-3, natural-2)
nsubjpass(predicated-9, order-3)
prep_of(order-3, life-5)
prep_among(life-5, animals-7)
auxpass(predicated-9, is-8)
root(ROOT-0, predicated-9)
det(milk-13, the-11)
nn(milk-13, breast-12)
prep_upon(predicated-9, milk-13)
det(mother-16, the-15)
prep_of(milk-13, mother-16)

(ROOT
  (S
    (S (CC And)
      (SBAR (RB just) (IN because)
        (S
          (NP (JJ female) (NNS homosexuals))
          (VP (MD can)
            (VP (VB be)
              (VP (VBN made)
                (ADJP (JJ pregnant)
                  (PP (IN by)
                    (NP (NNS methods))))
                (ADVP (JJ contrary)
                  (PP (TO to)
                    (NP (NN nature) (NN doesn) (NN t)))))))))
      (VP (VBP mean)
        (SBAR
          (S
            (NP (PRP they))
            (VP (MD should)
              (VP (VB be)
                (NP (DT a) (NN mother))))))))
    (: ;)
    (S
      (PP (IN for)
        (PP (IN by)
          (NP
            (NP (NN reason))
            (PP (IN of)
              (NP (PRP$ their) (NN nature))))))
      (NP (PRP they))
      (VP (MD will) (RB not)
        (ADVP (RB naturally))
        (VP (VB become)
          (NP (NNS mothers)))))
    (. .)))

cc(mean-17, And-1)
advmod(made-8, just-2)
dep(made-8, because-3)
amod(homosexuals-5, female-4)
nsubjpass(made-8, homosexuals-5)
aux(made-8, can-6)
auxpass(made-8, be-7)
csubj(mean-17, made-8)
acomp(made-8, pregnant-9)
prep_by(pregnant-9, methods-11)
nn(t-16, nature-14)
nn(t-16, doesn-15)
prep_contrary_to(made-8, t-16)
root(ROOT-0, mean-17)
nsubj(mother-22, they-18)
aux(mother-22, should-19)
cop(mother-22, be-20)
det(mother-22, a-21)
ccomp(mean-17, mother-22)
prep(mothers-35, for-24)
pcomp(for-24, by-25)
prep_by(for-24, reason-26)
poss(nature-29, their-28)
prep_of(reason-26, nature-29)
nsubj(mothers-35, they-30)
aux(mothers-35, will-31)
neg(mothers-35, not-32)
advmod(mothers-35, naturally-33)
cop(mothers-35, become-34)
parataxis(mean-17, mothers-35)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must)
      (ADVP (RB also))
      (VP (VB note)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN acceptance))
              (PP (IN by)
                (NP (NN society))))
            (VP (VBZ makes)
              (S
                (NP (PRP it))
                (NP (DT an) (NN institution))))))))
    (. .)))

nsubj(note-4, You-1)
aux(note-4, must-2)
advmod(note-4, also-3)
root(ROOT-0, note-4)
complm(makes-10, that-5)
det(acceptance-7, the-6)
nsubj(makes-10, acceptance-7)
prep_by(acceptance-7, society-9)
ccomp(note-4, makes-10)
nsubj(institution-13, it-11)
det(institution-13, an-12)
xcomp(makes-10, institution-13)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (PRP$ My) (NN response))
        (: :)
        (NP (PRP$ Your) (NN argument)))
      (VP (VBZ is)
        (NP
          (NP (DT an) (JJ excellent) (NN example))
          (PP (IN of)
            (NP (DT the) (NN fallacy))))))
    (, ,)
    (VP (VBZ self-refutation))
    (. .)))

poss(response-3, My-2)
nsubj(example-10, response-3)
poss(argument-6, Your-5)
dep(response-3, argument-6)
cop(example-10, is-7)
det(example-10, an-8)
amod(example-10, excellent-9)
ccomp(self-refutation-15, example-10)
det(fallacy-13, the-12)
prep_of(example-10, fallacy-13)
root(ROOT-0, self-refutation-15)

(ROOT
  (S
    (NP (DT The) (NN argument))
    (VP (VBZ affirms)
      (PP (IN in)
        (NP (CD one) (NN statement)))
      (SBAR (IN that)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP it))
            (VP (VBZ denies)
              (PP (IN in)
                (NP (DT another))))))))
    (. .)))

det(argument-2, The-1)
nsubj(affirms-3, argument-2)
root(ROOT-0, affirms-3)
num(statement-6, one-5)
prep_in(affirms-3, statement-6)
complm(denies-10, that-7)
dobj(denies-10, which-8)
nsubj(denies-10, it-9)
dep(affirms-3, denies-10)
prep_in(denies-10, another-12)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB argument))
    (VP (VBZ asserts)
      (SBAR (IN that)
        (S
          (NP (DT a) (NN progenitor))
          (VP (VBZ gives)
            (PRT (RP up))
            (NP (PRP$ its) (NN authority))
            (PP (TO to)
              (NP
                (NP (DT the) (NN child))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (DT the) (NN progenitor))
                    (VP (VBZ gives)
                      (PRT (RP up))
                      (NP
                        (NP (DT the) (NN child))
                        (PP (IN for)
                          (NP (NN adoption)))))))))))))
    (. .)))

nsubj(asserts-3, You-1)
advmod(asserts-3, argument-2)
root(ROOT-0, asserts-3)
complm(gives-7, that-4)
det(progenitor-6, a-5)
nsubj(gives-7, progenitor-6)
ccomp(asserts-3, gives-7)
prt(gives-7, up-8)
poss(authority-10, its-9)
dobj(gives-7, authority-10)
det(child-13, the-12)
prep_to(gives-7, child-13)
tmod(gives-17, child-13)
advmod(gives-17, when-14)
det(progenitor-16, the-15)
nsubj(gives-17, progenitor-16)
dep(child-13, gives-17)
prt(gives-17, up-18)
det(child-20, the-19)
dobj(gives-17, child-20)
prep_for(child-20, adoption-22)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB therefore))
    (VP (MD must)
      (VP (VB be)
        (ADJP
          (ADVP (RB also))
          (JJ true))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NN state) (NNS agencies))
            (VP (VBP give)
              (PRT (RP up))
              (NP
                (NP (NNS children))
                (PP (IN for)
                  (NP (NN adoption)))
                (SBAR
                  (S
                    (NP (PRP they))
                    (ADVP (RB too))
                    (VP (VBP have)
                      (NP (DT no) (NN authority)))))))))))
    (. .)))

nsubj(true-6, It-1)
advmod(true-6, therefore-2)
aux(true-6, must-3)
cop(true-6, be-4)
advmod(true-6, also-5)
root(ROOT-0, true-6)
advmod(give-10, when-7)
nn(agencies-9, state-8)
nsubj(give-10, agencies-9)
advcl(true-6, give-10)
prt(give-10, up-11)
dobj(give-10, children-12)
prep_for(children-12, adoption-14)
nsubj(have-17, they-15)
advmod(have-17, too-16)
rcmod(children-12, have-17)
det(authority-19, no-18)
dobj(have-17, authority-19)

(ROOT
  (NP
    (NP
      (NP (NNP Explain))
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (DT the) (NN argument))
          (VP (VBZ expresses)
            (NP
              (NP (DT the) (NN denial))
              (PP (IN of)
                (NP (NN authority))))))))
    (PP (IN for)
      (NP (DT the) (NN progenitor)))
    (PP (IN in)
      (NP
        (NP (DT the) (NN case))
        (PP (IN of)
          (NP (NN adoption)))
        (SBAR (IN while)
          (S
            (ADVP (RB consequently))
            (VP (VBG implying)
              (NP
                (NP (DT the) (NN affirmation))
                (PP (IN of)
                  (NP
                    (NP (NN authority))
                    (PP (IN of)
                      (NP (NN state) (NNS agencies)))))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (ADVP (RB too))
                    (VP (VBP seek)
                      (NP
                        (NP (NN adoption))
                        (PP (IN for)
                          (NP (DT a) (NN child)))))))))))))
    (. .)))

root(ROOT-0, Explain-1)
advmod(expresses-5, why-2)
det(argument-4, the-3)
nsubj(expresses-5, argument-4)
rcmod(Explain-1, expresses-5)
det(denial-7, the-6)
dobj(expresses-5, denial-7)
prep_of(denial-7, authority-9)
det(progenitor-12, the-11)
prep_for(Explain-1, progenitor-12)
det(case-15, the-14)
prep_in(Explain-1, case-15)
prep_of(case-15, adoption-17)
mark(implying-20, while-18)
advmod(implying-20, consequently-19)
dep(case-15, implying-20)
det(affirmation-22, the-21)
dobj(implying-20, affirmation-22)
nsubj(seek-30, affirmation-22)
prep_of(affirmation-22, authority-24)
nn(agencies-27, state-26)
prep_of(authority-24, agencies-27)
advmod(seek-30, too-29)
rcmod(affirmation-22, seek-30)
dobj(seek-30, adoption-31)
det(child-34, a-33)
prep_for(adoption-31, child-34)

