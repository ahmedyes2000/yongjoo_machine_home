(ROOT
  (S
    (S
      (VP
        (ADVP (RB Also))
        (VBN known)
        (PP (IN as)
          (NP (DT the) (NN love) (NN contract)))))
    (, ,)
    (NP
      (NP (DT the) (NN registration))
      (PP (IN of)
        (NP
          (NP (DT the) (NN union))
          (PP (IN of)
            (NP (JJ gay) (NNS couples))))))
    (VP (VBZ has)
      (VP (VBN been)
        (VP (VBN carried)
          (PRT (RP out))
          (ADVP (RB successfully))
          (PP (IN in)
            (NP
              (NP (NNS countries))
              (PP (JJ such) (IN as)
                (NP (NNP Finland) (, ,) (NNP Sweden) (, ,) (NNP Denmark) (, ,) (NNP Belgium)
                  (CC and)
                  (NNP Spain))))))))
    (. .)))

advmod(known-2, Also-1)
dep(carried-18, known-2)
det(contract-6, the-4)
nn(contract-6, love-5)
prep_as(known-2, contract-6)
det(registration-9, the-8)
nsubjpass(carried-18, registration-9)
det(union-12, the-11)
prep_of(registration-9, union-12)
amod(couples-15, gay-14)
prep_of(union-12, couples-15)
aux(carried-18, has-16)
auxpass(carried-18, been-17)
root(ROOT-0, carried-18)
prt(carried-18, out-19)
advmod(carried-18, successfully-20)
prep_in(carried-18, countries-22)
prep_such_as(countries-22, Finland-25)
prep_such_as(countries-22, Sweden-27)
conj_and(Finland-25, Sweden-27)
prep_such_as(countries-22, Denmark-29)
conj_and(Finland-25, Denmark-29)
prep_such_as(countries-22, Belgium-31)
conj_and(Finland-25, Belgium-31)
prep_such_as(countries-22, Spain-33)
conj_and(Finland-25, Spain-33)

(ROOT
  (S
    (NP (DT This))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT an) (NN avenue))
          (PP (IN for)
            (NP (JJ gay) (NNS couples)))
          (S
            (VP (TO to)
              (VP (VB declare)
                (NP (PRP$ their) (NN union))
                (PP (TO to)
                  (NP (DT the) (NN world)))))))))
    (. .)))

nsubj(avenue-5, This-1)
aux(avenue-5, would-2)
cop(avenue-5, be-3)
det(avenue-5, an-4)
root(ROOT-0, avenue-5)
amod(couples-8, gay-7)
prep_for(avenue-5, couples-8)
aux(declare-10, to-9)
infmod(avenue-5, declare-10)
poss(union-12, their-11)
dobj(declare-10, union-12)
det(world-15, the-14)
prep_to(declare-10, world-15)

(ROOT
  (S
    (NP
      (NP (DT The) (NN practice))
      (PP (IN in)
        (NP
          (NP (NNS countries))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VB implement)
                (NP (DT this) (NN system))))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB allow)
            (NP (JJ registered) (NNS couples))
            (S
              (VP
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN entitled)
                      (PP (TO to)
                        (NP (JJ joint) (NN insurance) (NN coverage))))))
                (CC and)
                (VP (TO to)
                  (VP (VB allow)
                    (S
                      (NP (PRP them))
                      (VP (TO to)
                        (VP (VB file)
                          (PP (IN for)
                            (NP
                              (NP (JJ joint) (NN tax) (NNS returns))
                              (CONJP (RB as) (RB well) (IN as))
                              (NP (NN inheritance)
                                (CC and)
                                (NNS tenants) (NNS rights)))))))))))))))
    (. .)))

det(practice-2, The-1)
nsubj(is-9, practice-2)
xsubj(allow-11, practice-2)
prep_in(practice-2, countries-4)
nsubj(implement-6, countries-4)
rcmod(countries-4, implement-6)
det(system-8, this-7)
dobj(implement-6, system-8)
root(ROOT-0, is-9)
aux(allow-11, to-10)
xcomp(is-9, allow-11)
amod(couples-13, registered-12)
dobj(allow-11, couples-13)
aux(entitled-16, to-14)
auxpass(entitled-16, be-15)
dep(allow-11, entitled-16)
amod(coverage-20, joint-18)
nn(coverage-20, insurance-19)
prep_to(entitled-16, coverage-20)
aux(allow-23, to-22)
dep(allow-11, allow-23)
conj_and(entitled-16, allow-23)
nsubj(file-26, them-24)
aux(file-26, to-25)
xcomp(allow-23, file-26)
amod(returns-30, joint-28)
nn(returns-30, tax-29)
prep_for(file-26, returns-30)
nn(rights-37, inheritance-34)
conj_and(inheritance-34, tenants-36)
nn(rights-37, tenants-36)
prep_for(file-26, rights-37)
conj_and(returns-30, rights-37)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (JJ other) (NN hand)))
    (, ,)
    (NP (PDT such) (DT a) (NN proposal))
    (VP (VBZ makes)
      (NP (DT no) (NNS incursions))
      (PP (IN into)
        (NP
          (NP (DT the) (NN sanctity))
          (PP (IN of)
            (NP
              (NP (DT the) (NN institution))
              (PP (IN of)
                (NP (NN marriage)))
              (ADVP (PRP itself))))))
      (, ,)
      (S
        (ADVP (RB thereby))
        (VP (VBG proving)
          (ADJP (JJ acceptable)
            (PP (TO to)
              (NP
                (NP (DT the) (JJ religious) (NNS sections))
                (PP (IN of)
                  (NP (NN society)))))))))
    (. .)))

det(hand-4, the-2)
amod(hand-4, other-3)
prep_on(makes-9, hand-4)
predet(proposal-8, such-6)
det(proposal-8, a-7)
nsubj(makes-9, proposal-8)
root(ROOT-0, makes-9)
det(incursions-11, no-10)
dobj(makes-9, incursions-11)
det(sanctity-14, the-13)
prep_into(makes-9, sanctity-14)
det(institution-17, the-16)
prep_of(sanctity-14, institution-17)
prep_of(institution-17, marriage-19)
advmod(institution-17, itself-20)
advmod(proving-23, thereby-22)
partmod(makes-9, proving-23)
xcomp(makes-9, proving-23)
acomp(proving-23, acceptable-24)
det(sections-28, the-26)
amod(sections-28, religious-27)
prep_to(acceptable-24, sections-28)
prep_of(sections-28, society-30)

