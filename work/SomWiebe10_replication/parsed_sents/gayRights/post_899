(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN day)
        (CC and)
        (NN age)))
    (, ,)
    (NP (JJ many) (JJ gay) (NNS couples))
    (VP (VBP choose)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP (NNS children))))))
    (. .)))

det(day-3, this-2)
prep_in(choose-10, day-3)
conj_and(day-3, age-5)
prep_in(choose-10, age-5)
amod(couples-9, many-7)
amod(couples-9, gay-8)
nsubj(choose-10, couples-9)
xsubj(have-12, couples-9)
root(ROOT-0, choose-10)
aux(have-12, to-11)
xcomp(choose-10, have-12)
dobj(have-12, children-13)

(ROOT
  (S
    (S
      (VP (VBG Using)
        (NP
          (NP (DT the) (NN rationale))
          (PP (IN of)
            (NP (DT the) (JJ above) (NN argument))))))
    (, ,)
    (NP (PRP they))
    (VP (MD should)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB marry)))))))
    (. .)))

partmod(able-12, Using-1)
det(rationale-3, the-2)
dobj(Using-1, rationale-3)
det(argument-7, the-5)
amod(argument-7, above-6)
prep_of(rationale-3, argument-7)
nsubj(able-12, they-9)
aux(able-12, should-10)
cop(able-12, be-11)
root(ROOT-0, able-12)
aux(marry-14, to-13)
xcomp(able-12, marry-14)

(ROOT
  (S
    (S
      (NP (DT The) (NN reality))
      (VP (VBZ is)
        (SBAR (IN that)
          (S
            (NP (NNP the) ('' '') (NNP Yes))
            (PP (IN on)
              (NP (CD 8)))
            ('' '')
            (NP (NN crowd))
            (VP (VBP are) (RB n't)
              (VP (VBN concerned)
                (PP (IN with)
                  (NP
                    (NP (DT the) (NN wellbeing))
                    (PP (IN of)
                      (NP (NNS children)))))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADVP (RB just))
      (VP (VBG anti)
        (NP (JJ gay))))
    (. .)))

det(reality-2, The-1)
nsubj(is-3, reality-2)
ccomp(anti-24, is-3)
complm(concerned-14, that-4)
nn(Yes-7, the-5)
nsubjpass(concerned-14, Yes-7)
prep_on(concerned-14, 8-9)
nsubjpass(concerned-14, crowd-11)
auxpass(concerned-14, are-12)
neg(concerned-14, n't-13)
ccomp(is-3, concerned-14)
det(wellbeing-17, the-16)
prep_with(concerned-14, wellbeing-17)
prep_of(wellbeing-17, children-19)
nsubj(anti-24, they-21)
aux(anti-24, are-22)
advmod(anti-24, just-23)
root(ROOT-0, anti-24)
dobj(anti-24, gay-25)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (ADVP (RB really))
        (VP (VBD were)
          (VP (VBN concerned)
            (PP (IN with)
              (NP (NNS children)))))))
    (NP (PRP they))
    (VP (MD would)
      (VP (VB be)
        (VP (VBG working)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP
                  (NP (NN divorce))
                  (ADJP (RB much) (JJR harder)))))))))
    (. .)))

mark(concerned-5, If-1)
nsubjpass(concerned-5, they-2)
advmod(concerned-5, really-3)
auxpass(concerned-5, were-4)
advcl(working-11, concerned-5)
prep_with(concerned-5, children-7)
nsubj(working-11, they-8)
aux(working-11, would-9)
aux(working-11, be-10)
root(ROOT-0, working-11)
aux(make-13, to-12)
xcomp(working-11, make-13)
dobj(make-13, divorce-14)
advmod(harder-16, much-15)
amod(divorce-14, harder-16)

(ROOT
  (S
    (ADVP (RB Personally))
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP it))
          (VP (MD would)
            (VP (VB be)
              (ADJP (JJ good))
              (SBAR (IN if)
                (S
                  (NP (JJ divorced) (NNS couples))
                  (VP (VBD had)
                    (S
                      (VP (TO to)
                        (VP (VB pay)
                          (NP (JJR higher) (NNS taxes))
                          (PP (IN for)
                            (NP
                              (NP (CD 10) (NNS years))
                              (PP (VBG following)
                                (NP (DT a) (NN divorce))))))))))))))))
    (. .)))

advmod(think-3, Personally-1)
nsubj(think-3, I-2)
root(ROOT-0, think-3)
nsubj(good-7, it-4)
aux(good-7, would-5)
cop(good-7, be-6)
ccomp(think-3, good-7)
mark(had-11, if-8)
amod(couples-10, divorced-9)
nsubj(had-11, couples-10)
advcl(good-7, had-11)
aux(pay-13, to-12)
xcomp(had-11, pay-13)
amod(taxes-15, higher-14)
dobj(pay-13, taxes-15)
num(years-18, 10-17)
prep_for(pay-13, years-18)
det(divorce-21, a-20)
prep_following(years-18, divorce-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (ADVP (RB also))
      (VP (VB be)
        (ADJP (JJ good)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (DT a) (NN law))
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ says)
                        (SBAR (IN that)
                          (S
                            (SBAR (IN if)
                              (S
                                (NP (DT a) (NN baby))
                                (VP (VBZ is)
                                  (VP (VBN born)
                                    (PRT (RP out))
                                    (PP (IN of)
                                      (NP (NN wedlock)))))))
                            (, ,)
                            (NP (DT the) (NN father)
                              (CC and)
                              (NN mother))
                            (ADVP (RB automatically))
                            (VP (VBP become)
                              (VP (JJ married)
                                (PP (IN upon)
                                  (NP
                                    (NP (DT the) (NN birth))
                                    (PP (IN of)
                                      (NP (DT the) (NN baby)))))))))))))))))))
    (. .)))

nsubj(good-5, It-1)
aux(good-5, would-2)
advmod(good-5, also-3)
cop(good-5, be-4)
root(ROOT-0, good-5)
aux(have-7, to-6)
xcomp(good-5, have-7)
det(law-9, a-8)
dobj(have-7, law-9)
nsubj(says-11, law-9)
rcmod(law-9, says-11)
complm(married-28, that-12)
mark(born-17, if-13)
det(baby-15, a-14)
nsubjpass(born-17, baby-15)
auxpass(born-17, is-16)
advcl(married-28, born-17)
prep_out_of(born-17, wedlock-20)
det(father-23, the-22)
nsubj(married-28, father-23)
conj_and(father-23, mother-25)
nsubj(married-28, mother-25)
advmod(married-28, automatically-26)
aux(married-28, become-27)
ccomp(says-11, married-28)
det(birth-31, the-30)
prep_upon(married-28, birth-31)
det(baby-34, the-33)
prep_of(birth-31, baby-34)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN issue))
        (ADVP (RB really))
        (VP (VBZ is)
          (VP (VBG having)
            (NP
              (NP (NNS children))
              (VP (VBN raised)
                (PP (IN by)
                  (NP (CD two) (NN parent) (NNS families)))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD should)
      (VP (VB be)
        (VP (VBG advocating)
          (NP (DT those) (NNS approaches))
          (, ,)
          (S (RB not)
            (VP (VBG trying)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (SBAR
                      (S
                        (NP (DT some) (NNS families))
                        (VP (VBP feel)
                          (SBAR
                            (S
                              (NP (PRP they))
                              (VP (VBP are)
                                (NP (JJ second) (NN class))))))))))))))))
    (. .)))

mark(having-6, If-1)
det(issue-3, the-2)
nsubj(having-6, issue-3)
advmod(having-6, really-4)
aux(having-6, is-5)
advcl(advocating-17, having-6)
dobj(having-6, children-7)
partmod(children-7, raised-8)
num(families-12, two-10)
nn(families-12, parent-11)
agent(raised-8, families-12)
nsubj(advocating-17, they-14)
aux(advocating-17, should-15)
aux(advocating-17, be-16)
root(ROOT-0, advocating-17)
det(approaches-19, those-18)
dobj(advocating-17, approaches-19)
neg(trying-22, not-21)
partmod(advocating-17, trying-22)
xcomp(advocating-17, trying-22)
aux(make-24, to-23)
xcomp(trying-22, make-24)
det(families-26, some-25)
nsubj(feel-27, families-26)
ccomp(make-24, feel-27)
nsubj(class-31, they-28)
cop(class-31, are-29)
amod(class-31, second-30)
ccomp(feel-27, class-31)

(ROOT
  (FRAG
    (NP (PRP It))))

root(ROOT-0, It-1)

