(ROOT
  (S
    (NP (PRP$ your) (NN proof))
    (VP (VBD was)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBP are)
            (NP (JJ gay) (NNS animals))))))
    (. .)))

poss(proof-2, your-1)
nsubj(was-3, proof-2)
root(ROOT-0, was-3)
expl(are-5, there-4)
ccomp(was-3, are-5)
amod(animals-7, gay-6)
nsubj(are-5, animals-7)

(ROOT
  (SBARQ
    (SBAR (IN so)
      (S
        (NP (PRP$ my) (NN response))
        (VP (MD would)
          (VP (VB be)
            (SBAR
              (WHADJP (WRB how) (JJ many)
                (PP (IN of)
                  (NP (PRP them))))
              (S
                (NP (DT that))
                (VP (VBP have)
                  (VP (VBN mated)
                    (NP (NNS pairs))))))))))
    (, ,)
    (SQ (VBP are)
      (NP (JJ gay) (NNP mated) (NNS pairs)))
    (. ?)))

mark(be-5, so-1)
poss(response-3, my-2)
nsubj(be-5, response-3)
aux(be-5, would-4)
advcl(are-15, be-5)
advmod(many-7, how-6)
dep(mated-12, many-7)
prep_of(many-7, them-9)
nsubj(mated-12, that-10)
aux(mated-12, have-11)
ccomp(be-5, mated-12)
dobj(mated-12, pairs-13)
root(ROOT-0, are-15)
amod(pairs-18, gay-16)
nn(pairs-18, mated-17)
nsubj(are-15, pairs-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBP are)
          (VP (MD would)))))
    (NP (DT this))
    (VP (VBP help)
      (CC or)
      (VBP deter)
      (NP (PRP$ their) (NN survival)))
    (. ?)))

mark(are-3, If-1)
expl(are-3, there-2)
advcl(help-6, are-3)
dep(are-3, would-4)
nsubj(help-6, this-5)
nsubj(deter-8, this-5)
root(ROOT-0, help-6)
conj_or(help-6, deter-8)
poss(survival-10, their-9)
dobj(help-6, survival-10)

(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD could)
          (VP (VB answer)
            (NP (DT this))
            (ADVP (RB then))))))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB have)
        (NP
          (NP (DT an) (NN analogy))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD would) (DT both)
                (VP (VB answer)
                  (NP
                    (NP (DT the) (NN topic))
                    (CC and)
                    (NP (PRP$ your) (JJ other) (NN opponent))))))))))
    (. .)))

mark(answer-4, if-1)
nsubj(answer-4, you-2)
aux(answer-4, could-3)
advcl(have-9, answer-4)
dobj(answer-4, this-5)
advmod(answer-4, then-6)
nsubj(have-9, you-7)
aux(have-9, would-8)
root(ROOT-0, have-9)
det(analogy-11, an-10)
dobj(have-9, analogy-11)
nsubj(answer-15, analogy-11)
aux(answer-15, would-13)
dep(answer-15, both-14)
rcmod(analogy-11, answer-15)
det(topic-17, the-16)
dobj(answer-15, topic-17)
poss(opponent-21, your-19)
amod(opponent-21, other-20)
dobj(answer-15, opponent-21)
conj_and(topic-17, opponent-21)

(ROOT
  (NP (NN chillax)))

root(ROOT-0, chillax-1)

