(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (ADJP (JJ possible)
        (S
          (VP (TO to)
            (VP (`` ``) (VB turn)
              (NP (JJ gay))
              ('' ''))))))
    (. .)))

nsubj(possible-4, It-1)
cop(possible-4, 's-2)
neg(possible-4, not-3)
root(ROOT-0, possible-4)
aux(turn-7, to-5)
xcomp(possible-4, turn-7)
dobj(turn-7, gay-8)

(ROOT
  (S
    (NP (NNP Being) (NNP gay))
    (VP (VBZ is)
      (NP
        (NP (NN something))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP 're)
              (VP (VBN born)
                (PP (IN with))))))))
    (. .)))

nn(gay-2, Being-1)
nsubj(something-4, gay-2)
cop(something-4, is-3)
root(ROOT-0, something-4)
prep_with(born-7, something-4)
nsubjpass(born-7, you-5)
auxpass(born-7, 're-6)
rcmod(something-4, born-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP (DT a) (NN choice)))
    (. .)))

nsubj(choice-5, It-1)
cop(choice-5, 's-2)
neg(choice-5, not-3)
det(choice-5, a-4)
root(ROOT-0, choice-5)

