(ROOT
  (NP
    (NP
      (NP (PRP$ Your) (NN comment))
      (PP (IN above)
        (NP
          (NP (NNS states))
          (: :) (`` ``)
          (S
            (NP (NNP Homosexual) (POS 's))
            (VP (VBD were)
              (VP (VBN given)
                (NP
                  (NP (NN protection))
                  (PP (IN from)
                    (NP (NN discrimination)
                      (CC and)
                      (JJ same) (NNS rights))))
                (NP
                  (NP
                    (ADJP (RB as) (VBN married))
                    (NNS couples))
                  (PRN (-LRB- -LRB-)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ is)
                          (NP (NN discrimination))
                          (, ,)
                          (PP (IN by)
                            (NP (DT the) (NN way))))))
                    (-RRB- -RRB-))))))
          ('' ''))))
    (NP
      (LST (JJ First))
      (, ,)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (VBZ is)
            (NP (DT this) (NN discrimination))))))
    (. ?)))

poss(comment-2, Your-1)
root(ROOT-0, comment-2)
prep_above(comment-2, states-4)
nsubjpass(given-10, Homosexual-7)
possessive(Homosexual-7, 's-8)
auxpass(given-10, were-9)
dep(states-4, given-10)
iobj(given-10, protection-11)
nn(rights-16, discrimination-13)
conj_and(discrimination-13, same-15)
nn(rights-16, same-15)
prep_from(protection-11, rights-16)
advmod(married-18, as-17)
amod(couples-19, married-18)
dobj(given-10, couples-19)
nsubj(discrimination-23, which-21)
cop(discrimination-23, is-22)
dep(couples-19, discrimination-23)
det(way-27, the-26)
prep_by(discrimination-23, way-27)
dep(discrimination-35, First-30)
advmod(discrimination-35, how-32)
cop(discrimination-35, is-33)
det(discrimination-35, this-34)
dep(comment-2, discrimination-35)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (VP (VBG giving)
        (NP (NN someone))
        (NP (JJ equal) (NNS rights) (NN discrimination))))
    (. ?)))

advmod(giving-3, How-1)
aux(giving-3, is-2)
root(ROOT-0, giving-3)
iobj(giving-3, someone-4)
amod(discrimination-7, equal-5)
nn(discrimination-7, rights-6)
dobj(giving-3, discrimination-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (RB morally) (JJ wrong))
      (S
        (VP (TO to)
          (VP (VB allow)
            (NP (JJ same) (NN sex) (NNS couples))
            (S
              (VP (TO to)
                (VP (VB marry))))))))
    (: ...)))

nsubj(know-2, I-1)
ccomp(wrong-7, know-2)
nsubj(wrong-7, it-4)
xsubj(allow-9, it-4)
cop(wrong-7, is-5)
advmod(wrong-7, morally-6)
root(ROOT-0, wrong-7)
aux(allow-9, to-8)
xcomp(wrong-7, allow-9)
amod(couples-12, same-10)
nn(couples-12, sex-11)
dobj(allow-9, couples-12)
aux(marry-14, to-13)
xcomp(allow-9, marry-14)

(ROOT
  (FRAG
    (NP (NNP Right))
    (. ?)))

root(ROOT-0, Right-1)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (PRP I))
        (VP (VBD said)
          (ADVP (RB before)))))
    (, ,)
    (NP (DT that))
    (VP (VBD was)
      (NP
        (NP (DT the) (JJ same) (NN argument))
        (VP (VBN used)
          (PP (IN against)
            (NP (JJ inter-racial) (NN marriage))
            (ADVP
              (NP (RB just) (DT a) (JJ few) (NNS years))
              (RB ago))))))
    (. .)))

advmod(argument-12, Well-1)
mark(said-5, as-3)
nsubj(said-5, I-4)
advcl(argument-12, said-5)
advmod(said-5, before-6)
nsubj(argument-12, that-8)
cop(argument-12, was-9)
det(argument-12, the-10)
amod(argument-12, same-11)
root(ROOT-0, argument-12)
partmod(argument-12, used-13)
amod(marriage-16, inter-racial-15)
prep_against(used-13, marriage-16)
advmod(years-20, just-17)
det(years-20, a-18)
amod(years-20, few-19)
npadvmod(ago-21, years-20)
advmod(used-13, ago-21)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP (DT an) (JJ empty) (NN argument))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (MD wo) (RB n't)
        (VP (VB hold)
          (PRT (RP up))
          (PP (TO to)
            (NP (DT the) (NNP Constitution))))))
    (. .)))

nsubj(argument-5, It-1)
cop(argument-5, 's-2)
det(argument-5, an-3)
amod(argument-5, empty-4)
root(ROOT-0, argument-5)
nsubj(hold-10, it-7)
aux(hold-10, wo-8)
neg(hold-10, n't-9)
conj_and(argument-5, hold-10)
prt(hold-10, up-11)
det(Constitution-14, the-13)
prep_to(hold-10, Constitution-14)

(ROOT
  (S (IN So)
    (NP (PRP you))
    (VP (MD 'd)
      (ADVP (RBR better))
      (VP (VB come)
        (PRT (RP up))
        (PP (IN with)
          (NP (NN something) (RB else)))))
    (. .)))

dep(come-5, So-1)
nsubj(come-5, you-2)
aux(come-5, 'd-3)
advmod(come-5, better-4)
root(ROOT-0, come-5)
prt(come-5, up-6)
prep_with(come-5, something-8)
advmod(something-8, else-9)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ
      (VP (VBZ is)
        (VP (VBG being)
          (VP (VBN discriminated)
            (PP (IN against))))))
    (. ?)))

nsubjpass(discriminated-4, Who-1)
aux(discriminated-4, is-2)
auxpass(discriminated-4, being-3)
root(ROOT-0, discriminated-4)
prep(discriminated-4, against-5)

(ROOT
  (SBARQ
    (FRAG (RB Second))
    (, ,)
    (SBARQ
      (SBAR (IN if)
        (S
          (NP (NNS Homosexuals))
          (VP (VBP have)
            (VP (VBN been)
              (VP (VBN given)
                (NP (NN protection))
                (PP (IN from)
                  (NP
                    (NP (NN discrimination))
                    (CC and)
                    (NP (DT the) (JJ same) (NNS rights))))
                (PP (IN as)
                  (NP (JJ married) (NNS couples))))))))
      (, ,)
      (WHADVP
        (ADVP (RB then))
        (WRB why))
      (SQ (MD ca) (RB n't)
        (NP (PRP they))
        (VP (VB be)
          (VP (VBN married)))))
    (. ?)))

dep(married-25, Second-1)
mark(given-7, if-3)
nsubjpass(given-7, Homosexuals-4)
aux(given-7, have-5)
auxpass(given-7, been-6)
advcl(married-25, given-7)
dobj(given-7, protection-8)
prep_from(given-7, discrimination-10)
det(rights-14, the-12)
amod(rights-14, same-13)
prep_from(given-7, rights-14)
conj_and(discrimination-10, rights-14)
amod(couples-17, married-16)
prep_as(given-7, couples-17)
advmod(why-20, then-19)
advmod(married-25, why-20)
aux(married-25, ca-21)
neg(married-25, n't-22)
nsubjpass(married-25, they-23)
auxpass(married-25, be-24)
root(ROOT-0, married-25)

(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP
      (ADVP (RB really))
      (VBN given)
      (NP (JJ much) (NN thought))
      (PP (TO to)
        (NP (PRP$ your) (NN opinion))))
    (. ?)))

aux(given-4, Have-1)
nsubj(given-4, you-2)
advmod(given-4, really-3)
root(ROOT-0, given-4)
amod(thought-6, much-5)
dobj(given-4, thought-6)
poss(opinion-9, your-8)
prep_to(given-4, opinion-9)

(ROOT
  (S
    (VP (VB Give)
      (NP (PRP me))
      (NP (DT a) (JJ legitimate) (NN argument))
      (PP (IN for)
        (S
          (VP (VBG banning)
            (NP (JJ same) (NN sex) (NN marriage))))))
    (. .)))

root(ROOT-0, Give-1)
iobj(Give-1, me-2)
det(argument-5, a-3)
amod(argument-5, legitimate-4)
dobj(Give-1, argument-5)
prepc_for(Give-1, banning-7)
amod(marriage-10, same-8)
nn(marriage-10, sex-9)
dobj(banning-7, marriage-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (S
        (NP (PRP we))
        (DT both)
        (VP (VB agree)
          (SBAR (IN that)
            (S
              (NP (NN marriage))
              (VP (VBZ is)
                (NP (DT a) (JJ good) (NN thing))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(agree-5, we-3)
dep(agree-5, both-4)
ccomp(think-2, agree-5)
complm(thing-11, that-6)
nsubj(thing-11, marriage-7)
cop(thing-11, is-8)
det(thing-11, a-9)
amod(thing-11, good-10)
ccomp(agree-5, thing-11)

(ROOT
  (S
    (NP (PRP It))
    (VP
      (VP (VBZ helps)
        (S
          (VP (TO to)
            (VP (VB stabilize)
              (NP (NN society))))))
      (CC and)
      (VP (VBZ is)
        (NP
          (NP (DT an) (JJ enriching) (NN experience))
          (PP (IN for)
            (NP
              (NP (DT the) (NN couple))
              (CC and)
              (NP (PRP$ their) (NN family)))))))
    (. .)))

nsubj(helps-2, It-1)
xsubj(stabilize-4, It-1)
root(ROOT-0, helps-2)
aux(stabilize-4, to-3)
xcomp(helps-2, stabilize-4)
dobj(stabilize-4, society-5)
cop(experience-10, is-7)
det(experience-10, an-8)
amod(experience-10, enriching-9)
conj_and(helps-2, experience-10)
det(couple-13, the-12)
prep_for(experience-10, couple-13)
poss(family-16, their-15)
prep_for(experience-10, family-16)
conj_and(couple-13, family-16)

(ROOT
  (SBARQ
    (FRAG (RB So))
    (, ,)
    (SBARQ
      (SBAR (IN if)
        (S
          (NP (PRP we))
          (VP (VBP agree)
            (SBAR (IN that)
              (S
                (NP (NN marriage))
                (VP (VBZ is)
                  (ADJP (JJ good))))))))
      (, ,)
      (WHADVP (WRB how))
      (SQ (MD can)
        (NP (NN marriage))
        (ADVP (RB also))
        (VP (VB be)
          (ADJP (JJ bad)))))
    (. ?)))

dep(bad-16, So-1)
mark(agree-5, if-3)
nsubj(agree-5, we-4)
advcl(bad-16, agree-5)
complm(good-9, that-6)
nsubj(good-9, marriage-7)
cop(good-9, is-8)
ccomp(agree-5, good-9)
advmod(bad-16, how-11)
aux(bad-16, can-12)
nsubj(bad-16, marriage-13)
advmod(bad-16, also-14)
cop(bad-16, be-15)
root(ROOT-0, bad-16)

(ROOT
  (FRAG
    (SBAR
      (WHADVP (WRB How))
      (S
        (NP
          (NP (NN can))
          (PP (VBG including)
            (NP
              (NP (JJR more) (NNS people))
              (PP (IN in)
                (NP (DT a) (JJ good) (NN thing))))))
        (VP (VB be)
          (ADJP (JJ bad)))))
    (. ?)))

advmod(bad-11, How-1)
nsubj(bad-11, can-2)
amod(people-5, more-4)
prep_including(can-2, people-5)
det(thing-9, a-7)
amod(thing-9, good-8)
prep_in(people-5, thing-9)
cop(bad-11, be-10)
root(ROOT-0, bad-11)

