(ROOT
  (S
    (ADVP (RB yup))
    (, ,)
    (NP (NNS gays))
    (VP (MD should)
      (VP (VB have)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB marry)
                (NP
                  (NP (NN becoz))
                  (SBAR
                    (S
                      (S
                        (NP (PRP they))
                        (VP (VBP are)
                          (VP (VBN attracted)
                            (PP (TO to)
                              (NP (DT each) (JJ other))))))
                      (: ...)
                      (CC and)
                      (S
                        (SBAR (IN if)
                          (S
                            (NP (PRP they))
                            (VP (VBP are)
                              (PP (IN in)
                                (NP (JJ true) (NN love))))))
                        (ADVP (RB then))
                        (NP (PRP they))
                        (VP (MD should)
                          (VP (VB proceed)))))))))))))
    (. .) (. .)))

advmod(have-5, yup-1)
nsubj(have-5, gays-3)
aux(have-5, should-4)
root(ROOT-0, have-5)
det(right-7, the-6)
dobj(have-5, right-7)
aux(marry-9, to-8)
infmod(right-7, marry-9)
dobj(marry-9, becoz-10)
nsubjpass(attracted-13, they-11)
auxpass(attracted-13, are-12)
rcmod(becoz-10, attracted-13)
det(other-16, each-15)
prep_to(attracted-13, other-16)
mark(are-21, if-19)
nsubj(are-21, they-20)
advcl(proceed-28, are-21)
amod(love-24, true-23)
prep_in(are-21, love-24)
advmod(proceed-28, then-25)
nsubj(proceed-28, they-26)
aux(proceed-28, should-27)
rcmod(becoz-10, proceed-28)
conj_and(attracted-13, proceed-28)

(ROOT
  (S (CC and)
    (NP (PRP it))
    (VP (MD will)
      (ADVP (RB also))
      (VP (VB help)
        (S
          (VP (TO to)
            (VP (VB decrease)
              (NP (DT the) (NN population)))))))
    (: ...)))

cc(help-5, and-1)
nsubj(help-5, it-2)
xsubj(decrease-7, it-2)
aux(help-5, will-3)
advmod(help-5, also-4)
root(ROOT-0, help-5)
aux(decrease-7, to-6)
xcomp(help-5, decrease-7)
det(population-9, the-8)
dobj(decrease-7, population-9)

