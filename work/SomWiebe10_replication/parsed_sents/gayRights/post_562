(ROOT
  (S
    (NP (PRP$ My) (NN argument))
    (VP (VBZ is)
      (ADJP (JJ clear)))
    (. .)))

poss(argument-2, My-1)
nsubj(clear-4, argument-2)
cop(clear-4, is-3)
root(ROOT-0, clear-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (VP (VBG arguing)
        (NP (DT the) (NN messenger))))
    (. .)))

nsubj(arguing-3, You-1)
aux(arguing-3, 're-2)
root(ROOT-0, arguing-3)
det(messenger-5, the-4)
dobj(arguing-3, messenger-5)

(ROOT
  (NP (NNP Whoopteedoo) (NNP !!!)))

nn(!!!-2, Whoopteedoo-1)
root(ROOT-0, !!!-2)

(ROOT
  (S
    (VP (VBP Are) (RB n't)
      (ADJP
        (NP (PRP you))
        (JJ good)
        (PP (IN at)
          (S
            (VP (VBG finger-pointing)
              (CC and)
              (VBG saying)
              (NP (PRP$ your) (JJ wrong)))))))
    (. .)))

cop(good-4, Are-1)
neg(good-4, n't-2)
npadvmod(good-4, you-3)
root(ROOT-0, good-4)
prepc_at(good-4, finger-pointing-6)
prepc_at(good-4, saying-8)
conj_and(finger-pointing-6, saying-8)
poss(wrong-10, your-9)
dobj(finger-pointing-6, wrong-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (NP
              (NP (JJ first) (NN sentence))
              (SBAR
                (S
                  (VP (MD would)
                    (VP (VB be)
                      (ADJP (RBS most) (JJ useful))
                      (PP (TO to)
                        (NP (PRP you)))
                      (, ,)
                      (S
                        (ADVP (RB now))
                        (VP
                          (ADVP (RB meekly))
                          (VBG squandering)
                          (PP (IN in)
                            (NP
                              (NP (PRP$ your) (NN sense))
                              (PP (IN of)
                                (NP (NN loss))))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(sentence-6, you-3)
cop(sentence-6, 're-4)
amod(sentence-6, first-5)
ccomp(think-2, sentence-6)
aux(useful-10, would-7)
cop(useful-10, be-8)
advmod(useful-10, most-9)
rcmod(sentence-6, useful-10)
prep_to(useful-10, you-12)
advmod(squandering-16, now-14)
advmod(squandering-16, meekly-15)
ccomp(useful-10, squandering-16)
xcomp(useful-10, squandering-16)
poss(sense-19, your-18)
prep_in(squandering-16, sense-19)
prep_of(sense-19, loss-21)

(ROOT
  (FRAG
    (PP (IN For)
      (NP
        (NP (DT the) (NN sake))
        (PP (IN of)
          (S
            (VP (VBG edifying)
              (NP (PRP$ your) (NN naivety)))))))
    (: :) (`` ``)
    (S
      (NP (PRP You))
      (VP (VBZ analysis)
        (S
          (NP
            (NP (NN fails) ('' ''))
            (-LRB- -LRB-)
            (PP (IN why))))))
    (. ?)))

dep(analysis-11, For-1)
det(sake-3, the-2)
pobj(For-1, sake-3)
prepc_of(sake-3, edifying-5)
poss(naivety-7, your-6)
dobj(edifying-5, naivety-7)
nsubj(analysis-11, You-10)
root(ROOT-0, analysis-11)
dep(analysis-11, fails-12)
prep(fails-12, why-15)

(ROOT
  (FRAG (WRB how) (. ?)))

root(ROOT-0, how-1)

(ROOT
  (FRAG
    (ADJP (FW counter-evidence) (. ?))
    (ADJP (JJ -RRB-))))

root(ROOT-0, counter-evidence-1)

(ROOT
  (S
    (FRAG
      (NP (NNP and)))
    ('' '')
    (NP (PRP You))
    (VP (VBP 're)
      (ADJP (JJ low)
        (PP (IN on)
          (NP (NN knowledge) ('' '')
            (S
              (VP (VB -LRB-)
                (FRAG
                  (WHADVP (WRB where)))))))))
    (. ?)))

dep(low-5, and-1)
nsubj(low-5, You-3)
cop(low-5, 're-4)
root(ROOT-0, low-5)
prep_on(low-5, knowledge-7)
dep(knowledge-7, where-10)

(ROOT
  (SQ
    (VP (VB elaborate))
    (. ?)))

root(ROOT-0, elaborate-1)

(ROOT
  (NP
    (NP (NNP educate))
    (PP (IN with)
      (FRAG
        (ADJP (RBR more) (JJ knowlegde))
        (. ?)))
    (-RRB- -RRB-)))

root(ROOT-0, educate-1)
prep(educate-1, with-2)
advmod(knowlegde-4, more-3)
dep(with-2, knowlegde-4)

(ROOT
  (SQ (VBZ is)
    (NP (DT a) (NN peurile))
    (ADJP (`` ``) (JJ rebuttal) ('' ''))
    (. .)))

cop(rebuttal-5, is-1)
det(peurile-3, a-2)
nsubj(rebuttal-5, peurile-3)
root(ROOT-0, rebuttal-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (ADVP (RB even))
      (VP (VB know)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP I))
            (VP (VBD took)
              (NP (DT the) (NN time))
              (PP (TO to)
                (NP (DT this)
                  (ADJP (JJ pathetic))
                  (NN response) (NN !!))))))))))

nsubj(know-5, I-1)
aux(know-5, do-2)
neg(know-5, n't-3)
advmod(know-5, even-4)
root(ROOT-0, know-5)
advmod(took-8, why-6)
nsubj(took-8, I-7)
advcl(know-5, took-8)
det(time-10, the-9)
dobj(took-8, time-10)
det(!!-15, this-12)
amod(!!-15, pathetic-13)
nn(!!-15, response-14)
prep_to(took-8, !!-15)

(ROOT
  (S
    (NP (PRP$ My) (NN point))
    (VP (VBZ has)
      (VP (VBN been)
        (VP (VBN made))))
    (. .)))

poss(point-2, My-1)
nsubjpass(made-5, point-2)
aux(made-5, has-3)
auxpass(made-5, been-4)
root(ROOT-0, made-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ active)
                    (PP (IN about)
                      (NP (DT an) (NN issue)))))))))))
    (, ,)
    (S
      (VP (MD might)
        (ADVP (RB as) (RB well))
        (VP (VB have)
          (NP
            (NP (DT a) (JJ well-structured) (NN set))
            (PP (IN of)
              (NP (NNS arguments)
                (CC and)
                (NNS facts)))))))
    (VP (VBD laid)
      (PRT (RP out))
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBD took)
            (NP (DT the) (NN liberty)
              (S
                (VP (TO to)
                  (VP (VB do)))))
            (, ,)
            (PP (RB instead) (IN of)
              (S
                (VP (VBG cowering)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN corner))
                      (PP (IN with)
                        (NP
                          (NP (PRP$ your) (NNP trivial) (CD 4) (NN sentence))
                          (`` ``)
                          (NP (NN response))
                          ('' ''))))))))))))
    (. .)))

mark(going-4, If-1)
nsubj(going-4, you-2)
xsubj(active-7, you-2)
aux(going-4, 're-3)
advcl(laid-23, going-4)
aux(active-7, to-5)
cop(active-7, be-6)
xcomp(going-4, active-7)
det(issue-10, an-9)
prep_about(active-7, issue-10)
aux(have-15, might-12)
advmod(well-14, as-13)
mwe(well-14, as-13)
advmod(have-15, well-14)
csubj(laid-23, have-15)
det(set-18, a-16)
amod(set-18, well-structured-17)
dobj(have-15, set-18)
prep_of(set-18, arguments-20)
prep_of(set-18, facts-22)
conj_and(arguments-20, facts-22)
root(ROOT-0, laid-23)
prt(laid-23, out-24)
mark(took-27, as-25)
nsubj(took-27, I-26)
advcl(laid-23, took-27)
det(liberty-29, the-28)
dobj(took-27, liberty-29)
aux(do-31, to-30)
infmod(liberty-29, do-31)
prepc_instead_of(took-27, cowering-35)
det(corner-38, the-37)
prep_in(cowering-35, corner-38)
poss(sentence-43, your-40)
nn(sentence-43, trivial-41)
num(sentence-43, 4-42)
prep_with(corner-38, sentence-43)
dep(sentence-43, response-45)

(ROOT
  (NP (CD Cheerio) (RB then) (. .)))

root(ROOT-0, Cheerio-1)
advmod(Cheerio-1, then-2)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (NN contrary)))
    (, ,)
    (NP (PRP$ my) (NN knowledge))
    (VP (VBZ suffices))
    (. .)))

det(contrary-3, the-2)
prep_on(suffices-7, contrary-3)
poss(knowledge-6, my-5)
nsubj(suffices-7, knowledge-6)
root(ROOT-0, suffices-7)

(ROOT
  (S
    (NP
      (NP (NNP Yeah))
      (`` ``)
      (NP
        (NP (NNS influences))
        (PP (IN in)
          (NP (NN pregnancy))))
      ('' ''))
    (VP (VBP include)
      (NP (NN birth) (NNS defects)
        (CC and)
        (NNS deformities)))
    ('' '') (. .)))

nsubj(include-7, Yeah-1)
dep(Yeah-1, influences-3)
prep_in(influences-3, pregnancy-5)
root(ROOT-0, include-7)
nn(defects-9, birth-8)
dobj(include-7, defects-9)
dobj(include-7, deformities-11)
conj_and(defects-9, deformities-11)

(ROOT
  (SINV
    (VP (VBG Mutating)
      (NP (PRP$ your)
        (ADJP (RB biologically) (JJ intrinsic))
        (NN drive))
      (S
        (VP (TO to)
          (VP (VB reproduce)
            (NP (PRP$ your) (JJ own) (NNS genes))))))
    (VP (VBZ is)
      (NP (NNP NOT)))
    (NP
      (NP (DT a) (`` ``) (NN pregnancy) (NN influence) ('' ''))
      (VP (VBN !!!!!!!!!)))))

root(ROOT-0, Mutating-1)
poss(drive-5, your-2)
advmod(intrinsic-4, biologically-3)
amod(drive-5, intrinsic-4)
dobj(Mutating-1, drive-5)
aux(reproduce-7, to-6)
xcomp(Mutating-1, reproduce-7)
poss(genes-10, your-8)
amod(genes-10, own-9)
dobj(reproduce-7, genes-10)
cop(NOT-12, is-11)
aux(Mutating-1, NOT-12)
det(influence-16, a-13)
nn(influence-16, pregnancy-15)
nsubj(Mutating-1, influence-16)
partmod(influence-16, !!!!!!!!!-18)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (PP (IN like)
        (S
          (VP (VBG saying) (`` ``)
            (S
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (DT a) (NN care))
                  (VP (VBZ is)
                    (VP (VBN made)
                      (PP (IN in)
                        (NP (DT a) (NN factory)))
                      (, ,)
                      (ADVP (RB occasionally))
                      (SBAR
                        (WHADVP (WRB when))
                        (S
                          (NP (PRP it))
                          (VP (VBZ comes)
                            (PRT (RP out))
                            (PP (IN on)
                              (NP (DT the) (NN conveyor) (NN belt))))))))))
              (, ,)
              (ADVP (RB sometimes))
              (NP (DT some) (`` ``) (NN influence) ('' ''))
              (VP (VBZ happens)
                (SBAR (IN that)
                  (S
                    (VP (VBZ causes)
                      (S
                        (NP (PRP it))
                        (VP (TO to)
                          (VP
                            (ADVP (RB only))
                            (VB go)
                            (PP (IN in)
                              (NP (NN reverse))))))))))
              ('' ''))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
prepc_like('s-2, saying-4)
advmod(made-10, when-6)
det(care-8, a-7)
nsubjpass(made-10, care-8)
auxpass(made-10, is-9)
advcl(happens-30, made-10)
det(factory-13, a-12)
prep_in(made-10, factory-13)
advmod(made-10, occasionally-15)
advmod(comes-18, when-16)
nsubj(comes-18, it-17)
advcl(made-10, comes-18)
prt(comes-18, out-19)
det(belt-23, the-21)
nn(belt-23, conveyor-22)
prep_on(comes-18, belt-23)
advmod(happens-30, sometimes-25)
det(influence-28, some-26)
nsubj(happens-30, influence-28)
ccomp(saying-4, happens-30)
complm(causes-32, that-31)
ccomp(happens-30, causes-32)
nsubj(go-36, it-33)
aux(go-36, to-34)
advmod(go-36, only-35)
xcomp(causes-32, go-36)
prep_in(go-36, reverse-38)

(ROOT
  (S
    (PP (IN As)
      (NP (NN homo) (NNS sapiens)))
    (, ,)
    (NP (PRP we))
    (VP (VBP 're)
      (VP (VBN designed)
        (S
          (VP (TO to)
            (VP (VB reproduce))))))
    (. .)))

nn(sapiens-3, homo-2)
prep_as(designed-7, sapiens-3)
nsubjpass(designed-7, we-5)
xsubj(reproduce-9, we-5)
auxpass(designed-7, 're-6)
root(ROOT-0, designed-7)
aux(reproduce-9, to-8)
xcomp(designed-7, reproduce-9)

(ROOT
  (S
    (S
      (NP
        (NP (NNS Tendencies))
        (PP (TO to)
          (NP (RB not))))
      (VP (VBP do)
        (SBAR (IN that)
          (S (-LRB- -LRB-)
            (NP (NN homosexuality))
            (-RRB- -RRB-)
            (VP (VBP are) (RB not)
              (ADJP (RB just) (JJ counter-productive)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP they))
      (VP (VBP 're)
        (ADJP (JJ anatomically-biologically-productive))
        (PRN (-LRB- -LRB-)
          (ADVP (RB i.e.))
          (ADJP (JJ nonexistent))
          (-RRB- -RRB-))))
    (. .)))

nsubj(do-4, Tendencies-1)
prep(Tendencies-1, to-2)
pobj(to-2, not-3)
root(ROOT-0, do-4)
complm(counter-productive-12, that-5)
nsubj(counter-productive-12, homosexuality-7)
cop(counter-productive-12, are-9)
neg(counter-productive-12, not-10)
advmod(counter-productive-12, just-11)
ccomp(do-4, counter-productive-12)
nsubj(anatomically-biologically-productive-17, they-15)
cop(anatomically-biologically-productive-17, 're-16)
conj_but(do-4, anatomically-biologically-productive-17)
dep(nonexistent-20, i.e.-19)
dep(anatomically-biologically-productive-17, nonexistent-20)

(ROOT
  (S
    (NP (NNP Behavior) (NNS traits))
    (VP (VBP are)
      (ADVP (RB NOT))
      (VP
        (ADVP (RB so) (RB much))
        (VBN determined)
        (PP (IN by)
          (NP (NNS genes)))))
    (. .)))

nn(traits-2, Behavior-1)
nsubjpass(determined-7, traits-2)
auxpass(determined-7, are-3)
neg(determined-7, NOT-4)
advmod(much-6, so-5)
advmod(determined-7, much-6)
root(ROOT-0, determined-7)
agent(determined-7, genes-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (JJ anatomical) (NNS traits))
        (PP (JJ such) (IN as)
          (NP
            (NP (NN pigment))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (ADJP (JJ gene-based)))))))))
    (. .)))

nsubj(traits-4, It-1)
cop(traits-4, 's-2)
amod(traits-4, anatomical-3)
root(ROOT-0, traits-4)
prep_such_as(traits-4, pigment-7)
nsubj(gene-based-10, pigment-7)
cop(gene-based-10, are-9)
rcmod(pigment-7, gene-based-10)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (`` ``) (NN comeback) ('' ''))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (MD can)
            (ADVP (RB even))
            (VP (VB call)
              (NP (PRP$ your) (JJ pathetic) (NN whimper))
              (NP
                (NP (DT a) (`` ``) (NN rebuttal) ('' ''))
                (PRN (-LRB- -LRB-)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (PP (IN for)
                        (NP
                          (NP (DT the) (NN sake))
                          (PP (IN of)
                            (S
                              (VP (VBG wanting)
                                (S
                                  (VP (TO to)
                                    (VP (VB do)
                                      (NP (DT the) (NN world) (`` ``) (NN rebuttal) ('' '') (NN justice))))))))))
                      (, ,)
                      (VP (VBD let)
                        (SBAR
                          (S
                            (NP (PRP 's))
                            (RB not)
                            (VP (VBP say)
                              (SBAR
                                (S
                                  (NP (PRP$ your) (NNS comments))
                                  (VP (VBD were)
                                    (ADVP (RB even))
                                    (NP
                                      (NP (DT an) (NN attempt))
                                      (PP (IN at)
                                        (NP (DT that)))))))))))))
                  (-RRB- -RRB-))))))))
    (ADVP (RB merely))
    (VP (VBZ says)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP lack)
              (NP (NN knowledge)))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (PRP$ my) (NN analysis))
            (VP (VBZ fails))))))
    (. .)))

poss(comeback-3, Your-1)
nsubj(says-47, comeback-3)
mark(call-9, if-5)
nsubj(call-9, you-6)
aux(call-9, can-7)
advmod(call-9, even-8)
dep(comeback-3, call-9)
poss(whimper-12, your-10)
amod(whimper-12, pathetic-11)
dep(call-9, whimper-12)
det(rebuttal-15, a-13)
dobj(call-9, rebuttal-15)
nsubj(let-33, which-18)
det(sake-21, the-20)
prep_for(let-33, sake-21)
prepc_of(sake-21, wanting-23)
aux(do-25, to-24)
xcomp(wanting-23, do-25)
det(justice-31, the-26)
nn(justice-31, world-27)
nn(justice-31, rebuttal-29)
dobj(do-25, justice-31)
dep(rebuttal-15, let-33)
nsubj(say-36, 's-34)
neg(say-36, not-35)
ccomp(let-33, say-36)
poss(comments-38, your-37)
nsubj(attempt-42, comments-38)
cop(attempt-42, were-39)
advmod(attempt-42, even-40)
det(attempt-42, an-41)
ccomp(say-36, attempt-42)
prep_at(attempt-42, that-44)
advmod(says-47, merely-46)
root(ROOT-0, says-47)
complm(lack-50, that-48)
nsubj(lack-50, I-49)
ccomp(says-47, lack-50)
dobj(lack-50, knowledge-51)
complm(fails-56, that-53)
poss(analysis-55, my-54)
nsubj(fails-56, analysis-55)
ccomp(says-47, fails-56)
conj_and(lack-50, fails-56)

