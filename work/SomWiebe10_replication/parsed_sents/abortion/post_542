(ROOT
  (S
    (NP (PRP you))
    (ADVP (RB ever))
    (VP (VBP hear)
      (PP (IN of)
        (NP (NN adoption))))
    (. ?)))

nsubj(hear-3, you-1)
advmod(hear-3, ever-2)
root(ROOT-0, hear-3)
prep_of(hear-3, adoption-5)

(ROOT
  (S
    (VP (VB Check)
      (PP (IN into)
        (NP
          (NP (DT the) (NN amount))
          (PP (IN of)
            (NP
              (NP (NNS couples))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (VP (VBG trying)
                      (S
                        (VP (TO to)
                          (VP (VB adopt)
                            (ADVP (RB sometime))))))))))))))
    (. .)))

root(ROOT-0, Check-1)
det(amount-4, the-3)
prep_into(Check-1, amount-4)
prep_of(amount-4, couples-6)
nsubj(trying-9, couples-6)
aux(trying-9, are-8)
rcmod(couples-6, trying-9)
aux(adopt-11, to-10)
xcomp(trying-9, adopt-11)
advmod(adopt-11, sometime-12)

(ROOT
  (S ('' '')
    (NP (NNP Genetically))
    (VP
      (VP (VBZ deformed))
      ('' '')
      (CC and)
      (VP (VBZ everything)))
    (. .)))

nsubj(deformed-3, Genetically-2)
nsubj(everything-6, Genetically-2)
root(ROOT-0, deformed-3)
conj_and(deformed-3, everything-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NN problem))
      (PP (IN with)
        (NP (PRP you) (NNS people))))
    (VP (VBZ is)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB see)
              (NP (DT the) (NN baby))
              (PP (IN as)
                (NP (DT a) (JJ real) (NN person))))))))
    (. .)))

det(problem-2, The-1)
nsubj(is-6, problem-2)
dep(people-5, you-4)
prep_with(problem-2, people-5)
root(ROOT-0, is-6)
nsubj(see-10, you-7)
aux(see-10, do-8)
neg(see-10, n't-9)
ccomp(is-6, see-10)
det(baby-12, the-11)
dobj(see-10, baby-12)
det(person-16, a-14)
amod(person-16, real-15)
prep_as(see-10, person-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT all))
        (PP (IN about)
          (NP (DT the) (JJ poor) (JJ innocent) (NN woman)))))
    (. .)))

nsubj(all-3, It-1)
cop(all-3, 's-2)
root(ROOT-0, all-3)
det(woman-8, the-5)
amod(woman-8, poor-6)
amod(woman-8, innocent-7)
prep_about(all-3, woman-8)

(ROOT
  (S
    (VP (VB Give)
      (NP (PRP me))
      (NP (DT a) (NN break)))
    (. .)))

root(ROOT-0, Give-1)
iobj(Give-1, me-2)
det(break-4, a-3)
dobj(Give-1, break-4)

(ROOT
  (S
    (NP
      (NP (DT NO) (NN sex))
      (, ,)
      (NP (DT NO) (NN baby)))
    (VP (VBZ is)
      (NP (DT the)
        (ADJP (JJ free) (JJ available))
        (JJ low-cost) (NN birth) (NN control)))
    (. .)))

det(sex-2, NO-1)
nsubj(control-12, sex-2)
det(baby-5, NO-4)
appos(sex-2, baby-5)
cop(control-12, is-6)
det(control-12, the-7)
amod(available-9, free-8)
amod(control-12, available-9)
amod(control-12, low-cost-10)
nn(control-12, birth-11)
root(ROOT-0, control-12)

(ROOT
  (S
    (PP (IN After)
      (NP (DT that)))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (NP (NN responsibility)))
    (. .)))

prep_after(have-5, that-2)
nsubj(have-5, you-4)
root(ROOT-0, have-5)
dobj(have-5, responsibility-6)

(ROOT
  (SQ
    (VP (VB Remember)
      (NP (DT that)))
    (. ?)))

root(ROOT-0, Remember-1)
dobj(Remember-1, that-2)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN baby))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ innocent)
                (PP (IN in)
                  (NP
                    (NP (DT this) (JJ whole) (NN issue))
                    (, ,) (RB not)
                    (NP (DT the) (NN parent))))))))))
    (. .)))

nsubj(baby-4, It-1)
cop(baby-4, 's-2)
det(baby-4, the-3)
root(ROOT-0, baby-4)
nsubj(innocent-7, baby-4)
cop(innocent-7, is-6)
rcmod(baby-4, innocent-7)
det(issue-11, this-9)
amod(issue-11, whole-10)
prep_in(innocent-7, issue-11)
neg(issue-11, not-13)
det(parent-15, the-14)
dep(issue-11, parent-15)

