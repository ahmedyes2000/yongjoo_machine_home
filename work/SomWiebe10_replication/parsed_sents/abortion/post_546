(ROOT
  (S (`` ``)
    (NP (PRP$ Our) (NN nation))
    (VP (VBD was)
      (VP (VBN founded)
        (PP (IN on)
          (NP (DT the) (NN principle)))
        (SBAR (IN that)
          (S
            (NP (DT all) (JJ human) (NNS beings))
            (VP (VBP are)
              (VP (VBN created)
                (S
                  (ADJP (JJ equal)))))))))
    (. .)))

poss(nation-3, Our-2)
nsubjpass(founded-5, nation-3)
auxpass(founded-5, was-4)
root(ROOT-0, founded-5)
det(principle-8, the-7)
prep_on(founded-5, principle-8)
complm(created-14, that-9)
det(beings-12, all-10)
amod(beings-12, human-11)
nsubjpass(created-14, beings-12)
auxpass(created-14, are-13)
ccomp(founded-5, created-14)
acomp(created-14, equal-15)

(ROOT
  (S
    (NP (DT That))
    (ADVP (RB never))
    (VP (VBD meant)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP are) (RB all)
            (VP (VBN created)
              (NP (DT the) (JJ same)))))))
    (. .)))

nsubj(meant-3, That-1)
neg(meant-3, never-2)
root(ROOT-0, meant-3)
complm(created-8, that-4)
nsubjpass(created-8, we-5)
auxpass(created-8, are-6)
advmod(created-8, all-7)
ccomp(meant-3, created-8)
det(same-10, the-9)
dobj(created-8, same-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBD bothered)
          (S
            (VP (TO to)
              (VP (VB pick)
                (PRT (RP up))
                (NP (DT a) (NN science) (NN book))
                (ADVP (RB now))))))))
    (NP (DT an)
      (ADJP
        (ADVP (RB again) (RB there))
        (JJ simple)))
    (VP (MD would) (RB n't)
      (VP (VB be)
        (NP (DT any) (NNS issues))))
    (. .)))

mark(bothered-3, If-1)
nsubj(bothered-3, someone-2)
xsubj(pick-5, someone-2)
advcl(issues-19, bothered-3)
aux(pick-5, to-4)
xcomp(bothered-3, pick-5)
prt(pick-5, up-6)
det(book-9, a-7)
nn(book-9, science-8)
dobj(pick-5, book-9)
advmod(pick-5, now-10)
det(simple-14, an-11)
advmod(there-13, again-12)
advmod(simple-14, there-13)
nsubj(issues-19, simple-14)
aux(issues-19, would-15)
neg(issues-19, n't-16)
cop(issues-19, be-17)
det(issues-19, any-18)
root(ROOT-0, issues-19)

(ROOT
  (S
    (ADVP (RB Ultimately))
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN argument))
        (PP (IN between)
          (NP
            (NP (DT the) (NN educated))
            (CC and)
            (NP (DT the) (NN uneducated))))))
    (. .)))

advmod(argument-5, Ultimately-1)
nsubj(argument-5, this-2)
cop(argument-5, is-3)
det(argument-5, an-4)
root(ROOT-0, argument-5)
det(educated-8, the-7)
prep_between(argument-5, educated-8)
det(uneducated-11, the-10)
prep_between(argument-5, uneducated-11)
conj_and(educated-8, uneducated-11)

(ROOT
  (S
    (NP (NNP Controversy))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB exist)
        (SBAR (IN if)
          (S
            (NP (DT both) (NNS parties))
            (VP (VBP have)
              (NP
                (NP (DT a) (JJ sound) (NN argument))
                (PP (IN in)
                  (NP (DT the) (JJ first) (NN place)))))))))
    (. .)))

nsubj(exist-4, Controversy-1)
aux(exist-4, can-2)
advmod(exist-4, only-3)
root(ROOT-0, exist-4)
mark(have-8, if-5)
det(parties-7, both-6)
nsubj(have-8, parties-7)
advcl(exist-4, have-8)
det(argument-11, a-9)
amod(argument-11, sound-10)
dobj(have-8, argument-11)
det(place-15, the-13)
amod(place-15, first-14)
prep_in(argument-11, place-15)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP it))
        (VP (VBZ stands)
          (NP
            (NP (DT the) (`` ``) (JJ pro-lifers) (CD \/) (NN anti))
            (SBAR
              (S
                (NP
                  (NP (NNS women) (POS 's))
                  (NNS rights))
                (VP (VBP bridage) ('' ''))))))))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN lot))
        (PP (IN of)
          (S
            (VP (VBG catching)
              (PRT (RP up))
              (S
                (VP (TO to)
                  (VP (VB do)))))))))
    (. .)))

mark(stands-3, As-1)
nsubj(stands-3, it-2)
csubj(have-14, stands-3)
det(anti-8, the-4)
amod(anti-8, pro-lifers-6)
num(anti-8, \/-7)
dobj(stands-3, anti-8)
dobj(bridage-12, anti-8)
poss(rights-11, women-9)
nsubj(bridage-12, rights-11)
rcmod(anti-8, bridage-12)
root(ROOT-0, have-14)
det(lot-16, a-15)
dobj(have-14, lot-16)
prepc_of(lot-16, catching-18)
prt(catching-18, up-19)
aux(do-21, to-20)
xcomp(catching-18, do-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (S
        (NP
          (NP (DT the) (NNS lives))
          (PP (IN of)
            (NP (DT all) (JJ human) (NNS beings))))
        (VP (VB have)
          (NP (JJ equal) (NN value)
            (CC and)
            (NN worth))
          (, ,)
          (ADVP (RB regardless)
            (PP (IN of)
              (NP
                (NP (PRP$ our) (JJ relative) (NNS skills))
                (, ,)
                (NP (NN intelligence))
                (, ,)
                (CC and)
                (NP
                  (NP (DT the) (NNS differences))
                  (PP (IN in)
                    (NP (PRP$ our) (JJ physical) (NN ability)
                      (CC or)
                      (NN health))))))))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
det(lives-4, the-3)
nsubj(have-9, lives-4)
det(beings-8, all-6)
amod(beings-8, human-7)
prep_of(lives-4, beings-8)
ccomp(means-2, have-9)
amod(value-11, equal-10)
dobj(have-9, value-11)
dobj(have-9, worth-13)
conj_and(value-11, worth-13)
poss(skills-19, our-17)
amod(skills-19, relative-18)
prep_regardless_of(have-9, skills-19)
prep_regardless_of(have-9, intelligence-21)
conj_and(skills-19, intelligence-21)
det(differences-25, the-24)
prep_regardless_of(have-9, differences-25)
conj_and(skills-19, differences-25)
poss(ability-29, our-27)
amod(ability-29, physical-28)
prep_in(differences-25, ability-29)
prep_in(differences-25, health-31)
conj_or(ability-29, health-31)

(ROOT
  (S
    (NP
      (NP (DT The) (NN denigration))
      (PP (IN of)
        (NP (DT these) (NNS values))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN denigration))
        (PP (IN of)
          (NP (DT the) (JJ human) (NN race)))))
    (. .)))

det(denigration-2, The-1)
nsubj(denigration-8, denigration-2)
det(values-5, these-4)
prep_of(denigration-2, values-5)
cop(denigration-8, is-6)
det(denigration-8, the-7)
root(ROOT-0, denigration-8)
det(race-12, the-10)
amod(race-12, human-11)
prep_of(denigration-8, race-12)

(ROOT
  (NP ('' '')
    (CC And)
    (NP
      (ADVP (RB yet))
      (, ,)
      (SBAR (IN if)
        (S
          (S
            (NP (PRP they))
            (VP (VBP are)
              (NP (VBN convicted) (NNS felons))))
          (, ,)
          (S
            (NP (PRP you))
            (VP
              (VP (VBP throw)
                (NP (PRP$ your) (NNS airs)))
              (CC and)
              (VP (VBZ graces)
                (PP (IN about)
                  (NP
                    (NP (DT the) (NN sanctity))
                    (PP (IN of)
                      (NP
                        (NP (NN life))
                        (PP (RB out) (IN of)
                          (NP
                            (NP (DT the) (NN window))
                            (PP (IN in)
                              (NP
                                (NP (NN exchange))
                                (PP (IN for)
                                  (NP (DT a) (JJ swift) (NN execution)))))))))))))))))
    (. .)))

cc(yet-3, And-2)
root(ROOT-0, yet-3)
mark(felons-9, if-5)
nsubj(felons-9, they-6)
dep(felons-9, are-7)
amod(felons-9, convicted-8)
dep(yet-3, felons-9)
nsubj(throw-12, you-11)
nsubj(graces-16, you-11)
dep(felons-9, throw-12)
poss(airs-14, your-13)
dobj(throw-12, airs-14)
dep(felons-9, graces-16)
conj_and(throw-12, graces-16)
det(sanctity-19, the-18)
prep_about(graces-16, sanctity-19)
prep_of(sanctity-19, life-21)
det(window-25, the-24)
prep_out_of(life-21, window-25)
prep_in(window-25, exchange-27)
det(execution-31, a-29)
amod(execution-31, swift-30)
prep_for(exchange-27, execution-31)

(ROOT
  (S
    (NP
      (NP (DT All))
      (PP (IN of)
        (NP
          (NP (DT these) (JJ erronous) (NNS beliefs))
          (PP (IN about)
            (NP
              (NP (NN abortion)
                (CC and)
                (NN sanctity))
              (PP (IN of)
                (NP (NN life))))))))
    (VP (VBP stem)
      (PP (IN from)
        (NP
          (NP (NN religion))
          (CONJP (RB rather) (IN than))
          (NP (NN reality)))))
    (. .)))

nsubj(stem-12, All-1)
det(beliefs-5, these-3)
amod(beliefs-5, erronous-4)
prep_of(All-1, beliefs-5)
prep_about(beliefs-5, abortion-7)
prep_about(beliefs-5, sanctity-9)
conj_and(abortion-7, sanctity-9)
prep_of(abortion-7, life-11)
root(ROOT-0, stem-12)
prep_from(stem-12, religion-14)
prep_from(stem-12, reality-17)
conj_negcc(religion-14, reality-17)

(ROOT
  (S
    (NP (NNP Life))
    (VP (VBZ is) (RB not)
      (ADJP (JJ sacred)))
    (. .)))

nsubj(sacred-4, Life-1)
cop(sacred-4, is-2)
neg(sacred-4, not-3)
root(ROOT-0, sacred-4)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP die)
      (NP (DT every) (JJ single) (NN day))
      (PP (IN from)
        (NP
          (ADJP (RB completely) (JJ random))
          (NNS issues))))
    (. .)))

nsubj(die-2, People-1)
root(ROOT-0, die-2)
det(day-5, every-3)
amod(day-5, single-4)
tmod(die-2, day-5)
advmod(random-8, completely-7)
amod(issues-9, random-8)
prep_from(die-2, issues-9)

(ROOT
  (S
    (NP (RB Just) (NN visit) (NNS \/))
    (VP (VBP work)
      (PP (IN in)
        (NP
          (NP (DT a) (NN hospital))
          (PP (IN for)
            (NP (DT a) (NN day))))))
    (. .)))

advmod(\/-3, Just-1)
nn(\/-3, visit-2)
nsubj(work-4, \/-3)
root(ROOT-0, work-4)
det(hospital-7, a-6)
prep_in(work-4, hospital-7)
det(day-10, a-9)
prep_for(hospital-7, day-10)

(ROOT
  (S
    (S
      (NP (NNP Death))
      (VP (VBZ is)
        (ADJP (JJ sad))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (NP
          (NP (DT an) (NN inevitability)
            (CC and)
            (NN nobody))
          (SBAR
            (S
              (VP (VBZ is)
                (VP (VBG going)
                  (S
                    (VP (TO to)
                      (VP (VB save)
                        (NP (PRP you))
                        (SBAR (IN after)
                          (S
                            (NP (PRP you))
                            (VP (VBP die))))))))))))))
    (. .)))

nsubj(sad-3, Death-1)
cop(sad-3, is-2)
root(ROOT-0, sad-3)
nsubj(inevitability-9, it-6)
cop(inevitability-9, is-7)
det(inevitability-9, an-8)
conj_but(sad-3, inevitability-9)
conj_but(sad-3, nobody-11)
conj_and(inevitability-9, nobody-11)
aux(going-13, is-12)
rcmod(inevitability-9, going-13)
aux(save-15, to-14)
xcomp(going-13, save-15)
dobj(save-15, you-16)
mark(die-19, after-17)
nsubj(die-19, you-18)
advcl(save-15, die-19)

