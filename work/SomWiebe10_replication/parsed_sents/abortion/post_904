(ROOT
  (S
    (NP
      (NP (DT The) (NN number))
      (PP (IN of)
        (NP
          (NP (NNS people))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP want)
                (S
                  (VP (TO to)
                    (VP (VB adopt)
                      (NP (DT a) (NN child)))))))))))
    (, ,)
    (VP (VBZ does) (RB not)
      (VP (VB equate)
        (PP (TO to)
          (NP
            (NP (DT the) (NN number))
            (PP (IN of)
              (NP
                (NP (NNS people))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (MD can))))))))))
    (. .)))

det(number-2, The-1)
nsubj(equate-14, number-2)
prep_of(number-2, people-4)
nsubj(want-6, people-4)
rcmod(people-4, want-6)
aux(adopt-8, to-7)
xcomp(want-6, adopt-8)
det(child-10, a-9)
dobj(adopt-8, child-10)
aux(equate-14, does-12)
neg(equate-14, not-13)
root(ROOT-0, equate-14)
det(number-17, the-16)
prep_to(equate-14, number-17)
prep_of(number-17, people-19)
nsubj(can-21, people-19)
rcmod(people-19, can-21)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS thousands))
        (PP (IN of)
          (NP
            (NP (NNS children))
            (VP (VBG dying)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN adopted))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, thousands-3)
prep_of(thousands-3, children-5)
xsubj(adopted-9, children-5)
partmod(children-5, dying-6)
aux(adopted-9, to-7)
auxpass(adopted-9, be-8)
xcomp(dying-6, adopted-9)

(ROOT
  (S
    (NP (NNP Abortion))
    (VP (VBZ lowers)
      (NP (DT that) (NN number)))
    (. .)))

nsubj(lowers-2, Abortion-1)
root(ROOT-0, lowers-2)
det(number-4, that-3)
dobj(lowers-2, number-4)

