(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBP have)
      (VP (VBN heard)
        (PP (IN of)
          (NP (NN adoption)))))
    (. .)))

dep(heard-5, Yes-1)
nsubj(heard-5, I-3)
aux(heard-5, have-4)
root(ROOT-0, heard-5)
prep_of(heard-5, adoption-7)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD 'll)
              (VP (VB find)
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBD had)
                      (ADVP (RB actually))
                      (VP (VBN read)
                        (NP (PRP$ my) (NN comment))))))))))))
    (CC and)
    (S (RB not)
      (SBAR
        (WHADJP (RB just) (WP what))
        (S
          (NP (PRP you))
          (VP (VBD wanted)
            (S
              (VP (TO to)
                (VP (VB see)))))))
      (, ,)
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBD thought)
              (SBAR
                (S
                  (NP (NN abortion))
                  (VP (VBD was)
                    (ADJP (JJ right)
                      (CC or)
                      (JJ good))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(find-5, you-3)
aux(find-5, 'll-4)
ccomp(think-2, find-5)
mark(read-10, if-6)
nsubj(read-10, you-7)
aux(read-10, had-8)
advmod(read-10, actually-9)
advcl(find-5, read-10)
poss(comment-12, my-11)
dobj(read-10, comment-12)
neg(said-24, not-14)
dep(wanted-18, just-15)
dep(just-15, what-16)
nsubj(wanted-18, you-17)
xsubj(see-20, you-17)
dep(said-24, wanted-18)
aux(see-20, to-19)
xcomp(wanted-18, see-20)
nsubj(said-24, I-22)
neg(said-24, never-23)
conj_and(think-2, said-24)
complm(thought-27, that-25)
nsubj(thought-27, I-26)
ccomp(said-24, thought-27)
nsubj(right-30, abortion-28)
nsubj(good-32, abortion-28)
cop(right-30, was-29)
ccomp(thought-27, right-30)
ccomp(thought-27, good-32)
conj_or(right-30, good-32)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG arguing)
        (PP (IN about)
          (NP
            (NP (DT the) (NN legality))
            (PP (IN of)
              (NP (PRP it)))))))
    (. .)))

nsubj(arguing-3, I-1)
aux(arguing-3, was-2)
root(ROOT-0, arguing-3)
det(legality-6, the-5)
prep_about(arguing-3, legality-6)
prep_of(legality-6, it-8)

(ROOT
  (S
    (S
      (S
        (VP (VBG Saying)
          (S (`` ``)
            (NP (NN everyone))
            (VP (MD should)
              (ADVP (RB just))
              (VP (VB be)
                (ADJP (JJ responsible))))
            ('' ''))))
      (VP (VBZ is)
        (ADJP (DT all) (JJ well)
          (CC and)
          (JJ good))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (NP (DT a)
          (ADJP (RB completely) (JJ absurd))
          (NN proposal)
          (S
            (VP (TO to)
              (VP
                (ADVP (RB actually))
                (VB solve)
                (NP (DT any) (NNS problems))))))))
    (. .)))

csubj(well-11, Saying-1)
csubj(good-13, Saying-1)
nsubj(responsible-7, everyone-3)
aux(responsible-7, should-4)
advmod(responsible-7, just-5)
cop(responsible-7, be-6)
ccomp(Saying-1, responsible-7)
cop(well-11, is-9)
dep(well-11, all-10)
root(ROOT-0, well-11)
conj_and(well-11, good-13)
nsubj(proposal-21, that-16)
cop(proposal-21, 's-17)
det(proposal-21, a-18)
advmod(absurd-20, completely-19)
amod(proposal-21, absurd-20)
conj_but(well-11, proposal-21)
aux(solve-24, to-22)
advmod(solve-24, actually-23)
infmod(proposal-21, solve-24)
det(problems-26, any-25)
dobj(solve-24, problems-26)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD might)
      (ADVP (RB as) (RB well))
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NN solution))
              (PP (IN for)
                (NP (PRP$ our) (NN health) (NN care) (NN system))))
            (VP (VBZ is)
              (PP (IN for)
                (NP (NNS people)))
              (S
                (VP (TO to)
                  (VP
                    (ADVP (RB just))
                    (VB stop)
                    (VP (VBG getting)
                      (ADJP (JJ sick)))))))))))
    (. .)))

nsubj(say-5, You-1)
aux(say-5, might-2)
advmod(well-4, as-3)
mwe(well-4, as-3)
advmod(say-5, well-4)
root(ROOT-0, say-5)
complm(is-14, that-6)
det(solution-8, the-7)
nsubj(is-14, solution-8)
xsubj(stop-19, solution-8)
poss(system-13, our-10)
nn(system-13, health-11)
nn(system-13, care-12)
prep_for(solution-8, system-13)
ccomp(say-5, is-14)
prep_for(is-14, people-16)
aux(stop-19, to-17)
advmod(stop-19, just-18)
xcomp(is-14, stop-19)
dep(sick-21, getting-20)
dep(stop-19, sick-21)

(ROOT
  (S
    (NP (DT The) (NN housing) (NN crisis))
    (VP (MD can)
      (ADVP (RB easily))
      (VP (VB be)
        (VP (VBN solved)
          (PP (IN by)
            (NP (NN everyone)))
          (S
            (VP (VBG being)
              (ADJP (RBR more) (JJ responsible))
              (PP (IN with)
                (NP (PRP$ their) (NN money))))))))
    (. .)))

det(crisis-3, The-1)
nn(crisis-3, housing-2)
nsubjpass(solved-7, crisis-3)
aux(solved-7, can-4)
advmod(solved-7, easily-5)
auxpass(solved-7, be-6)
root(ROOT-0, solved-7)
agent(solved-7, everyone-9)
cop(responsible-12, being-10)
advmod(responsible-12, more-11)
xcomp(solved-7, responsible-12)
poss(money-15, their-14)
prep_with(responsible-12, money-15)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP live)
        (PP (IN in)
          (NP (DT the) (JJ real) (NN world)))))
    (, ,)
    (CC and)
    (S
      (PP (IN in)
        (NP (DT the) (JJ real) (NN world)))
      (NP (JJ criminalizing) (NN abortion))
      (VP (VBZ does) (RB not)
        (VP (VB help)
          (NP
            (NP (JJ unborn) (NNS babies))
            (, ,)
            (RRC
              (ADVP (DT no) (NN matter))
              (ADJP
                (WHADVP (WRB how))
                (JJ innocent)))))))
    (. .)))

nsubj(live-2, I-1)
root(ROOT-0, live-2)
det(world-6, the-4)
amod(world-6, real-5)
prep_in(live-2, world-6)
det(world-12, the-10)
amod(world-12, real-11)
prep_in(help-17, world-12)
amod(abortion-14, criminalizing-13)
nsubj(help-17, abortion-14)
aux(help-17, does-15)
neg(help-17, not-16)
conj_and(live-2, help-17)
amod(babies-19, unborn-18)
dobj(help-17, babies-19)
dep(matter-22, no-21)
rcmod(babies-19, matter-22)
advmod(innocent-24, how-23)
dep(matter-22, innocent-24)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB merely))
    (VP (VBZ makes)
      (S
        (NP (NN abortion))
        (ADJP (JJ unsafe))))
    (. .)))

nsubj(makes-3, It-1)
advmod(makes-3, merely-2)
root(ROOT-0, makes-3)
nsubj(unsafe-5, abortion-4)
xcomp(makes-3, unsafe-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP welcome)
      (NP (PRP$ your) (NNS comments))
      (PP (IN on)
        (NP
          (NP (DT the) (NN issue))
          (PP (IN of)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (VBG criminalizing) (NN abortion))
                (ADVP (RB actually))
                (VP (VBZ causes)
                  (NP
                    (NP (DT the) (NN loss))
                    (PP (IN of)
                      (NP (JJR more) (NNS lives)))))))))))
    (. .)))

nsubj(welcome-2, I-1)
root(ROOT-0, welcome-2)
poss(comments-4, your-3)
dobj(welcome-2, comments-4)
det(issue-7, the-6)
prep_on(welcome-2, issue-7)
advmod(causes-13, how-9)
amod(abortion-11, criminalizing-10)
nsubj(causes-13, abortion-11)
advmod(causes-13, actually-12)
prepc_of(issue-7, causes-13)
det(loss-15, the-14)
dobj(causes-13, loss-15)
amod(lives-18, more-17)
prep_of(loss-15, lives-18)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (DT the) (NN stance))
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (NNS women))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (MD would)
                              (VP (VB seek)
                                (NP (NN abortion)))))))
                      (VP (VBP deserve)
                        (S
                          (VP (TO to)
                            (VP (VB die)))))))))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (JJ welcome)
          (PP (TO to)
            (NP (DT that) (NN opinion))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB again))
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (ADVP (RB really))
        (VP (VB seem)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (JJ pro-life))))))))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
xsubj(take-5, you-2)
advcl(welcome-20, want-3)
aux(take-5, to-4)
xcomp(want-3, take-5)
det(stance-7, the-6)
dobj(take-5, stance-7)
complm(deserve-14, that-8)
nsubj(seek-12, women-9)
nsubj(deserve-14, women-9)
xsubj(die-16, women-9)
aux(seek-12, would-11)
rcmod(women-9, seek-12)
dobj(seek-12, abortion-13)
ccomp(take-5, deserve-14)
aux(die-16, to-15)
xcomp(deserve-14, die-16)
nsubj(welcome-20, you-18)
cop(welcome-20, are-19)
root(ROOT-0, welcome-20)
det(opinion-23, that-22)
prep_to(welcome-20, opinion-23)
advmod(seem-31, again-26)
nsubj(seem-31, it-27)
xsubj(pro-life-34, it-27)
aux(seem-31, does-28)
neg(seem-31, n't-29)
advmod(seem-31, really-30)
conj_but(welcome-20, seem-31)
aux(pro-life-34, to-32)
cop(pro-life-34, be-33)
xcomp(seem-31, pro-life-34)

