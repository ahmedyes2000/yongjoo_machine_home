(ROOT
  (S
    (S
      (NP (PRP We))
      (, ,)
      (PP (IN as)
        (NP (NNS americans)))
      (, ,)
      (VP
        (ADVP (RB no) (RBR longer) (RB legally))
        (VBP support)
        (NP (NN slavery))))
    (CC and)
    (S
      (ADVP (RB therefore))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ consistent)))))
      (, ,)
      (VP (MD must)
        (VP (VB do)
          (NP
            (NP (DT all))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (ADJP (JJ possible)
                    (S
                      (VP (TO to)
                        (VP (VB liberate)
                          (NP (DT the) (NN mother))
                          (PP (IN from)
                            (NP (NN slavery)))
                          (PP (TO to)
                            (NP
                              (NP (DT that) (`` ``) (JJ full) (JJ human) (NN being) ('' ''))
                              (VP (VBG growing)
                                (PP (IN inside)
                                  (NP (PRP her)))))))))))))))))
    (. .)))

nsubj(support-9, We-1)
nsubj(do-19, We-1)
prep_as(support-9, americans-4)
advmod(legally-8, no-6)
advmod(legally-8, longer-7)
advmod(support-9, legally-8)
root(ROOT-0, support-9)
dobj(support-9, slavery-10)
advmod(do-19, therefore-12)
aux(consistent-16, to-14)
cop(consistent-16, be-15)
dep(do-19, consistent-16)
aux(do-19, must-18)
conj_and(support-9, do-19)
dobj(do-19, all-20)
nsubj(possible-23, all-20)
cop(possible-23, is-22)
rcmod(all-20, possible-23)
aux(liberate-25, to-24)
xcomp(possible-23, liberate-25)
det(mother-27, the-26)
dobj(liberate-25, mother-27)
prep_from(liberate-25, slavery-29)
det(being-35, that-31)
amod(being-35, full-33)
amod(being-35, human-34)
prep_to(liberate-25, being-35)
partmod(being-35, growing-37)
prep_inside(growing-37, her-39)

