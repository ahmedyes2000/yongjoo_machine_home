(ROOT
  (S
    (NP (NNS Gametes))
    (VP (MD may) (RB not)
      (ADVP (RB even))
      (VP (VB be)
        (ADJP (JJ alive))))
    (. .)))

nsubj(alive-6, Gametes-1)
aux(alive-6, may-2)
neg(alive-6, not-3)
advmod(alive-6, even-4)
cop(alive-6, be-5)
root(ROOT-0, alive-6)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR (IN if)
            (S
              (NP (NNS scientists))
              (VP (VBP use)
                (NP (DT a)
                  (ADJP (RB significantly) (JJ different))
                  (NN approach))))))))
    (, ,)
    (CC but)
    (S
      (PP (IN in)
        (NP (NN philosophy)))
      (S
        (NP (PRP we))
        (ADVP (RB occasionally))
        (VP (VB discuss)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (ADJP (JJ alive)))))))
      (CC and)
      (S
        (S
          (NP (WDT what))
          (VP (VBZ is)
            (ADJP (JJ inanimate))))
        (, ,)
        (CC and)
        (S
          (NP (PRP I))
          (VP (VBP 'm) (RB not)
            (ADJP (JJ sure))
            (SBAR (IN that)
              (S
                (NP (NNS gametes))
                (VP (VBP qualify))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
mark(use-7, if-5)
nsubj(use-7, scientists-6)
advcl(know-4, use-7)
det(approach-11, a-8)
advmod(different-10, significantly-9)
amod(approach-11, different-10)
dobj(use-7, approach-11)
prep_in(discuss-18, philosophy-15)
nsubj(discuss-18, we-16)
advmod(discuss-18, occasionally-17)
conj_but(know-4, discuss-18)
nsubj(alive-21, what-19)
cop(alive-21, is-20)
ccomp(discuss-18, alive-21)
nsubj(inanimate-25, what-23)
cop(inanimate-25, is-24)
conj_but(know-4, inanimate-25)
conj_and(discuss-18, inanimate-25)
nsubj(sure-31, I-28)
cop(sure-31, 'm-29)
neg(sure-31, not-30)
conj_and(discuss-18, sure-31)
conj_and(inanimate-25, sure-31)
complm(qualify-34, that-32)
nsubj(qualify-34, gametes-33)
ccomp(sure-31, qualify-34)

(ROOT
  (S
    (S
      (NP (DT A) (NN sperm) (NN cell))
      (VP (MD might)
        (VP (VB be)
          (VP (VBN considered)
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP
                    (NP (DT a) (NN form))
                    (PP (IN of)
                      (NP (NN metabolism)))))))))))
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure)))
    (. .)))

det(cell-3, A-1)
nn(cell-3, sperm-2)
nsubjpass(considered-6, cell-3)
aux(considered-6, might-4)
auxpass(considered-6, be-5)
dep(sure-16, considered-6)
aux(have-8, to-7)
xcomp(considered-6, have-8)
det(form-10, a-9)
dobj(have-8, form-10)
prep_of(form-10, metabolism-12)
nsubj(sure-16, I-13)
cop(sure-16, 'm-14)
neg(sure-16, not-15)
root(ROOT-0, sure-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (NN sperm))
          (VP (VBP are)
            (VP (VBN affected)
              (PP (IN by)
                (NP
                  (NP (JJ outside) (NNS chemicals))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (MD can)
                        (VP (VB cause)
                          (S
                            (NP (PRP them))
                            (VP (TO to)
                              (VP (VB speed)
                                (PRT (RP up))))))))))))))))
    (. .)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
complm(affected-6, that-3)
nsubjpass(affected-6, sperm-4)
auxpass(affected-6, are-5)
ccomp(know-2, affected-6)
amod(chemicals-9, outside-8)
agent(affected-6, chemicals-9)
nsubj(cause-12, chemicals-9)
aux(cause-12, can-11)
rcmod(chemicals-9, cause-12)
nsubj(speed-15, them-13)
aux(speed-15, to-14)
xcomp(cause-12, speed-15)
prt(speed-15, up-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (SBAR
            (WHADVP (WRB how))
            (S
              (NP (DT that))
              (VP (VBZ works))))
          (CC or)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NN process))
              (VP (VBZ is)
                (VP (VBN called))))))))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)
advmod(works-7, how-5)
nsubj(works-7, that-6)
dep(know-4, works-7)
dobj(called-13, what-9)
det(process-11, the-10)
nsubjpass(called-13, process-11)
auxpass(called-13, is-12)
dep(know-4, called-13)
conj_or(works-7, called-13)

(ROOT
  (S
    (NP (DT An) (NN egg))
    (VP (VBZ does) (RB n't)
      (VP (VB have)
        (NP
          (NP (DT a) (NN metabolism))
          (PRN (-LRB- -LRB-)
            (SBAR
              (ADVP (RB as) (RB far))
              (IN as)
              (S
                (NP (PRP I))
                (VP (VBP know))))
            (-RRB- -RRB-)))))
    (. .)))

det(egg-2, An-1)
nsubj(have-5, egg-2)
aux(have-5, does-3)
neg(have-5, n't-4)
root(ROOT-0, have-5)
det(metabolism-7, a-6)
dobj(have-5, metabolism-7)
advmod(far-10, as-9)
advmod(know-13, far-10)
dep(know-13, as-11)
nsubj(know-13, I-12)
dep(metabolism-7, know-13)

(ROOT
  (S
    (S
      (VP (VBG Having)
        (NP (DT a) (NN metabolism))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ necessary) (NN condition))
        (PP (IN for)
          (NP (NN life)))))
    (. .)))

csubj(condition-7, Having-1)
det(metabolism-3, a-2)
dobj(Having-1, metabolism-3)
cop(condition-7, is-4)
det(condition-7, a-5)
amod(condition-7, necessary-6)
root(ROOT-0, condition-7)
prep_for(condition-7, life-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS cases))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBD found)
            (ADJP (RB especially) (JJ interesting))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP we))
                (VP (VBD discussed)
                  (NP (DT this) (NN topic)))))))))
    (VP (VBD were)
      (NP (NNS seeds)
        (CC and)
        (NNS viruses)))
    (. .)))

det(cases-2, The-1)
nsubj(seeds-14, cases-2)
complm(found-5, that-3)
nsubj(found-5, we-4)
dep(cases-2, found-5)
advmod(interesting-7, especially-6)
acomp(found-5, interesting-7)
advmod(discussed-10, when-8)
nsubj(discussed-10, we-9)
advcl(found-5, discussed-10)
det(topic-12, this-11)
dobj(discussed-10, topic-12)
cop(seeds-14, were-13)
root(ROOT-0, seeds-14)
conj_and(seeds-14, viruses-16)

(ROOT
  (S
    (NP (NNP Seeds) ('' '') (NNP dormancy))
    (VP (VBD made)
      (S
        (NP (PRP it))
        (ADJP (JJ hard)
          (S
            (VP (TO to)
              (VP (VB decide)
                (SBAR (IN if)
                  (S
                    (NP (PRP they))
                    (VP (VBD stopped)
                      (S
                        (VP (VBG being)
                          (ADJP (JJ alive)
                            (PP (IN for)
                              (NP (DT a) (NN time))))))))
                  (CC or)
                  (RB not))))))))
    (. .)))

nn(dormancy-3, Seeds-1)
nsubj(made-4, dormancy-3)
root(ROOT-0, made-4)
nsubj(hard-6, it-5)
xcomp(made-4, hard-6)
aux(decide-8, to-7)
xcomp(hard-6, decide-8)
mark(stopped-11, if-9)
nsubj(stopped-11, they-10)
advcl(decide-8, stopped-11)
cop(alive-13, being-12)
xcomp(stopped-11, alive-13)
det(time-16, a-15)
prep_for(alive-13, time-16)
advcl(decide-8, not-18)
conj_or(stopped-11, not-18)

(ROOT
  (S
    (NP
      (NP (NN Frozen) (NNS cells))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (MD can)
            (VP (VB be)
              (VP (VBN revived)))))))
    (VP (VBP have)
      (NP (DT the) (JJ same) (NN problem)))
    (. .)))

nn(cells-2, Frozen-1)
nsubjpass(revived-6, cells-2)
nsubj(have-7, cells-2)
aux(revived-6, can-4)
auxpass(revived-6, be-5)
rcmod(cells-2, revived-6)
root(ROOT-0, have-7)
det(problem-10, the-8)
amod(problem-10, same-9)
dobj(have-7, problem-10)

(ROOT
  (S
    (NP (DT This))
    (VP (MD can)
      (VP (VB affect)
        (NP (DT the) (NN debate))
        (PP (IN over)
          (NP
            (NP (DT the) (NNS ethics))
            (PP (IN of)
              (NP (JJ embryonic) (NN stem) (NN cell) (NN research)))))))
    (. .)))

nsubj(affect-3, This-1)
aux(affect-3, can-2)
root(ROOT-0, affect-3)
det(debate-5, the-4)
dobj(affect-3, debate-5)
det(ethics-8, the-7)
prep_over(affect-3, ethics-8)
amod(research-13, embryonic-10)
nn(research-13, stem-11)
nn(research-13, cell-12)
prep_of(ethics-8, research-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (PRP$ their))
          (VP (VBG being)
            (VP (VBN frozen))))
        (VP (VBZ means)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBP are) (RB not)
                (ADJP (JJ alive)))))
          (PRN (-LRB- -LRB-)
            (SBAR (RB even) (IN if)
              (S
                (NP (PRP they))
                (VP (MD can)
                  (ADVP (RB potentially))
                  (VP (VB be)
                    (VP (VBN brought)
                      (PRT (RP back))
                      (PP (TO to)
                        (NP (NN life))))))))
            (-RRB- -RRB-)))))
    (, ,)
    (NP (RB then))
    (VP (MD can)
      (NP (PRP they))
      (S
        (VP (VB be)
          (VP (VBN killed)))))
    (. ?)))

mark(means-5, If-1)
nsubj(means-5, their-2)
auxpass(frozen-4, being-3)
partmod(their-2, frozen-4)
advcl(can-25, means-5)
complm(alive-10, that-6)
nsubj(alive-10, they-7)
cop(alive-10, are-8)
neg(alive-10, not-9)
ccomp(means-5, alive-10)
advmod(brought-18, even-12)
dep(brought-18, if-13)
nsubjpass(brought-18, they-14)
aux(brought-18, can-15)
advmod(brought-18, potentially-16)
auxpass(brought-18, be-17)
parataxis(means-5, brought-18)
prt(brought-18, back-19)
prep_to(brought-18, life-21)
nsubj(can-25, then-24)
root(ROOT-0, can-25)
dobj(can-25, they-26)
auxpass(killed-28, be-27)
dep(can-25, killed-28)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBP talk)
        (NP (RB about) (`` ``) (JJ live) (NN sperm) ('' ''))
        (ADVP (RB sometimes)))
      (CC but)
      (VP (VBZ electricians)
        (NP (NN talk))
        (PP (IN about)
          (NP
            (NP (NNS wires))
            (VP (VBG being)
              (ADJP (`` ``) (JJ live) ('' ''))
              (ADVP (RB too)))))))
    (. .)))

nsubj(talk-2, We-1)
nsubj(electricians-10, We-1)
root(ROOT-0, talk-2)
advmod(sperm-6, about-3)
amod(sperm-6, live-5)
dobj(talk-2, sperm-6)
advmod(talk-2, sometimes-8)
conj_but(talk-2, electricians-10)
dobj(electricians-10, talk-11)
prep_about(electricians-10, wires-13)
cop(live-16, being-14)
partmod(wires-13, live-16)
advmod(live-16, too-18)

(ROOT
  (S
    (S
      (NP (NNS Viruses))
      (VP (VBP are)
        (ADJP (JJ interesting) (RB too))
        (, ,)
        (SBAR (IN because)
          (S
            (NP (PRP they))
            (VP (VBP do) (RB n't)
              (VP (VB grow)))))))
    (PRN (, ,)
      (S
        (NP (PRP they))
        (VP (VBP lack)
          (NP (DT a) (NN metabolism))))
      (, ,))
    (CC and)
    (S
      (NP (PRP they))
      (VP (MD ca) (RB n't)
        (VP (VB reproduce)
          (NP (PRP themselves)))))
    (. .)))

nsubj(interesting-3, Viruses-1)
cop(interesting-3, are-2)
root(ROOT-0, interesting-3)
advmod(interesting-3, too-4)
mark(grow-10, because-6)
nsubj(grow-10, they-7)
aux(grow-10, do-8)
neg(grow-10, n't-9)
advcl(interesting-3, grow-10)
nsubj(lack-13, they-12)
dep(interesting-3, lack-13)
det(metabolism-15, a-14)
dobj(lack-13, metabolism-15)
nsubj(reproduce-21, they-18)
aux(reproduce-21, ca-19)
neg(reproduce-21, n't-20)
conj_and(interesting-3, reproduce-21)
dobj(reproduce-21, themselves-22)

(ROOT
  (S
    (NP (NNP New) (NNS viruses))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB be)
        (VP (VBN made)
          (SBAR (IN if)
            (S
              (NP (PRP they))
              (VP (VB inject)
                (NP
                  (NP (PRP$ their) (NN DNA))
                  (PRN (-LRB- -LRB-)
                    (CC or)
                    (S
                      (NP (PRP I))
                      (VP (VBP guess)
                        (NP (NNP RNA))))
                    (-RRB- -RRB-))
                  (PP (IN into)
                    (NP (DT a) (VBG living) (NNS non-virus))))))))))
    (. .)))

nn(viruses-2, New-1)
nsubjpass(made-6, viruses-2)
aux(made-6, can-3)
advmod(made-6, only-4)
auxpass(made-6, be-5)
root(ROOT-0, made-6)
mark(inject-9, if-7)
nsubj(inject-9, they-8)
advcl(made-6, inject-9)
poss(DNA-11, their-10)
dobj(inject-9, DNA-11)
dep(guess-15, or-13)
nsubj(guess-15, I-14)
dep(DNA-11, guess-15)
dobj(guess-15, RNA-16)
det(non-virus-21, a-19)
amod(non-virus-21, living-20)
prep_into(DNA-11, non-virus-21)

(ROOT
  (S (-LRB- -LRB-)
    (NP (RB Later) (PRP I))
    (VP (VBD learned)
      (SBAR (IN that)
        (S
          (NP (NNS prions))
          (VP (VBP raise)
            (NP (DT the) (JJ same) (NNS issues))))))
    (. .)))

advmod(I-3, Later-2)
nsubj(learned-4, I-3)
root(ROOT-0, learned-4)
complm(raise-7, that-5)
nsubj(raise-7, prions-6)
ccomp(learned-4, raise-7)
det(issues-10, the-8)
amod(issues-10, same-9)
dobj(raise-7, issues-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD 'd)
      (ADVP (RB actually))
      (VP
        (ADVP (RB never))
        (VBN heard)
        (PP (IN of)
          (NP (PRP them)))
        (SBAR (IN until)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBG reading)
                (PP (IN about)
                  (NP (NNP BSE)))))))))
    (. .) (-RRB- -RRB-)))

nsubj(heard-5, I-1)
aux(heard-5, 'd-2)
advmod(heard-5, actually-3)
neg(heard-5, never-4)
root(ROOT-0, heard-5)
prep_of(heard-5, them-7)
mark(reading-11, until-8)
nsubj(reading-11, I-9)
aux(reading-11, was-10)
advcl(heard-5, reading-11)
prep_about(reading-11, BSE-13)

(ROOT
  (S
    (NP (NNS Plasmids))
    (VP (VBP are)
      (NP
        (NP (NN something))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBD learned)
              (PP (IN about) (RB because))
              (PP (IN of)
                (NP (DT this) (NN discussion))))))))
    (. .)))

nsubj(something-3, Plasmids-1)
cop(something-3, are-2)
root(ROOT-0, something-3)
dobj(learned-5, something-3)
nsubj(learned-5, I-4)
rcmod(something-3, learned-5)
prep(learned-5, about-6)
dep(about-6, because-7)
det(discussion-10, this-9)
prep_of(learned-5, discussion-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (PP (TO to)
        (NP (PRP me)))
      (SBAR (IN that)
        (S
          (SBAR
            (WHNP (WDT whatever))
            (S
              (NP
                (NP (NN category))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBD put)
                      (NP
                        (NP (NNS viruses))
                        (, ,)
                        (NP (NNS plasmids))
                        (, ,)
                        (CC and)
                        (NP (NNS prions)))
                      (PP (IN into))))))
              (VP (VBZ is)
                (ADVP (RB probably))
                (NP (DT the) (NN category)))))
          (NP (PRP you))
          (VP (MD should)
            (VP (VB use)
              (PP (IN for)
                (NP (NNS gametes))))))))
    (. .)))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
prep_to(seems-2, me-4)
complm(use-23, that-5)
dobj(category-20, whatever-6)
nsubj(category-20, category-7)
nsubj(put-9, you-8)
rcmod(category-7, put-9)
dobj(put-9, viruses-10)
dobj(put-9, plasmids-12)
conj_and(viruses-10, plasmids-12)
dobj(put-9, prions-15)
conj_and(viruses-10, prions-15)
prep(put-9, into-16)
cop(category-20, is-17)
advmod(category-20, probably-18)
det(category-20, the-19)
dep(use-23, category-20)
nsubj(use-23, you-21)
aux(use-23, should-22)
ccomp(seems-2, use-23)
prep_for(use-23, gametes-25)

(ROOT
  (S
    (NP (NNP Sperm))
    (VP
      (VP (VBP are)
        (ADJP (JJ motile)
          (PP (IN for)
            (NP
              (NP (DT a) (NN period))
              (PP (IN of)
                (NP (NN time)))))))
      (, ,)
      (CC but)
      (ADVP (RB so))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN lizard) (POS 's))
          (NN tail))))
    (. .)))

nsubj(motile-3, Sperm-1)
cop(motile-3, are-2)
root(ROOT-0, motile-3)
det(period-6, a-5)
prep_for(motile-3, period-6)
prep_of(period-6, time-8)
advmod(motile-3, so-11)
conj_but(motile-3, so-11)
cop(tail-16, is-12)
det(lizard-14, a-13)
poss(tail-16, lizard-14)
conj_but(motile-3, tail-16)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD might)
        (VP (VB be)
          (ADJP (`` ``) (JJ live) ('' '')
            (PP (IN in)
              (NP
                (NP (DT some) (NN sense))
                (PP (IN of)
                  (S
                    (VP (VBG being)
                      (ADJP (JJ active)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB n't)
        (ADJP (JJ alive))))
    (. .)))

nsubj(live-5, It-1)
aux(live-5, might-2)
cop(live-5, be-3)
root(ROOT-0, live-5)
det(sense-9, some-8)
prep_in(live-5, sense-9)
cop(active-12, being-11)
prepc_of(sense-9, active-12)
nsubj(alive-18, it-15)
cop(alive-18, is-16)
neg(alive-18, n't-17)
conj_but(live-5, alive-18)

(ROOT
  (S
    (NP (DT A) (NN sperm))
    (VP (MD can) (RB not)
      (VP (VB make)
        (NP (DT another) (NN sperm))))
    (. .)))

det(sperm-2, A-1)
nsubj(make-5, sperm-2)
aux(make-5, can-3)
neg(make-5, not-4)
root(ROOT-0, make-5)
det(sperm-7, another-6)
dobj(make-5, sperm-7)

(ROOT
  (S (-LRB- -LRB-)
    (NP (JJ Can) (NNS eggs))
    (ADVP (RB ever))
    (VP (VB make)
      (NP (JJ other) (NNS eggs)))
    (. ?)))

amod(eggs-3, Can-2)
nsubj(make-5, eggs-3)
advmod(make-5, ever-4)
root(ROOT-0, make-5)
amod(eggs-7, other-6)
dobj(make-5, eggs-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)))
    (. .)))

nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
root(ROOT-0, know-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP know)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP do) (RB n't))))
        (ADVP (RB usually))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR (IN if)
            (S
              (NP (DT some) (JJ weird) (JJ mutant) (NNS eggs))
              (VP (VBP do)
                (ADVP (RB occasionally))))))))
    (. .) (-RRB- -RRB-)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
complm(do-5, that-3)
nsubj(do-5, they-4)
ccomp(know-2, do-5)
neg(do-5, n't-6)
advmod(know-2, usually-7)
nsubj(know-13, I-10)
aux(know-13, do-11)
neg(know-13, n't-12)
conj_but(know-2, know-13)
mark(do-19, if-14)
det(eggs-18, some-15)
amod(eggs-18, weird-16)
amod(eggs-18, mutant-17)
nsubj(do-19, eggs-18)
advcl(know-13, do-19)
advmod(do-19, occasionally-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN thing))
        (VP (VBZ is) (RB n't)
          (NP
            (NP (DT the) (NN type))
            (PP (IN of)
              (NP (NN thing)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD can)
                  (VP (VB make)
                    (NP
                      (NP (DT another))
                      (PP (IN of)
                        (NP (PRP$ its) (NN type))))))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (VP (VBN supposed)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN considered)
                (NP
                  (NP (DT a) (NN form))
                  (PP (IN of)
                    (NP (NN life))))))))))
    (. .)))

mark(type-7, If-1)
det(thing-3, a-2)
nsubj(type-7, thing-3)
cop(type-7, is-4)
neg(type-7, n't-5)
det(type-7, the-6)
nsubj(make-12, type-7)
advcl(supposed-22, type-7)
prep_of(type-7, thing-9)
aux(make-12, can-11)
rcmod(type-7, make-12)
dobj(make-12, another-13)
poss(type-16, its-15)
prep_of(another-13, type-16)
advmod(supposed-22, then-18)
nsubjpass(supposed-22, it-19)
xsubj(considered-25, it-19)
auxpass(supposed-22, is-20)
neg(supposed-22, not-21)
root(ROOT-0, supposed-22)
aux(considered-25, to-23)
auxpass(considered-25, be-24)
xcomp(supposed-22, considered-25)
det(form-27, a-26)
dobj(considered-25, form-27)
prep_of(form-27, life-29)

