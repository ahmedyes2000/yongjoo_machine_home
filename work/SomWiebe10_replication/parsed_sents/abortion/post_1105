(ROOT
  (S
    (NP (NNP Abstinence))
    (ADVP (RB prior)
      (PP (TO to)
        (NP
          (NP
            (NP (NN marriage))
            (-LRB- -LRB-)
            (NP (DT both) (NNS parties))
            (-RRB- -RRB-))
          (CC and)
          (NP
            (NP (NN fidelity))
            (PP (IN within)
              (NP (NN marriage)))))))
    (VP (VBZ is)
      (NP (DT the) (JJS safest) (JJ sexual) (NN practice) (NN period)))
    (. .)))

nsubj(period-18, Abstinence-1)
prep_prior_to(period-18, marriage-4)
det(parties-7, both-6)
dep(marriage-4, parties-7)
conj_and(marriage-4, fidelity-10)
prep_prior_to(period-18, fidelity-10)
prep_within(fidelity-10, marriage-12)
cop(period-18, is-13)
det(period-18, the-14)
amod(period-18, safest-15)
amod(period-18, sexual-16)
nn(period-18, practice-17)
root(ROOT-0, period-18)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (ADJP
        (ADJP
          (NP (DT the) (JJ ideal) (NN anything))
          (JJR less))
        (SBAR (IN than)
          (S
            (NP (DT that))
            (VP (VBZ is)
              (NP (DT a) (NN degradation)))))))
    (. .)))

nsubj(less-6, That-1)
cop(less-6, 's-2)
det(anything-5, the-3)
amod(anything-5, ideal-4)
npadvmod(less-6, anything-5)
root(ROOT-0, less-6)
mark(degradation-11, than-7)
nsubj(degradation-11, that-8)
cop(degradation-11, is-9)
det(degradation-11, a-10)
dep(less-6, degradation-11)

(ROOT
  (FRAG (CC and)
    (ADVP (RB even) (RBR more) (RB so)
      (SBAR (IN if)
        (S
          (NP (PRP I))
          (VP (VBD raised)
            (NP (PRP him))
            (PP (IN for)
              (NP (DT the) (JJ last) (NN 18yrs)))))
        (. ?)))))

dep(so-4, and-1)
advmod(so-4, even-2)
advmod(so-4, more-3)
root(ROOT-0, so-4)
mark(raised-7, if-5)
nsubj(raised-7, I-6)
dep(so-4, raised-7)
dobj(raised-7, him-8)
det(18yrs-12, the-10)
amod(18yrs-12, last-11)
prep_for(raised-7, 18yrs-12)

(ROOT
  (NP (CD Yeah) (RB right) (. .)))

root(ROOT-0, Yeah-1)
advmod(Yeah-1, right-2)

(ROOT
  (S
    (VP (VB Try)
      (NP
        (NP (DT that))
        (PP (IN in)
          (NP
            (NP (DT a) (NN court))
            (PP (IN of)
              (NP (NN law)))))))
    (. .)))

root(ROOT-0, Try-1)
dobj(Try-1, that-2)
det(court-5, a-4)
prep_in(that-2, court-5)
prep_of(court-5, law-7)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD should)
              (VP (VB reduce)
                (NP
                  (NP (DT the) (NN number))
                  (PP (IN of)
                    (NP (NNS abortions))))))))))
    (. ?)))

advmod(think-4, Why-1)
aux(think-4, do-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
nsubj(reduce-7, we-5)
aux(reduce-7, should-6)
ccomp(think-4, reduce-7)
det(number-9, the-8)
dobj(reduce-7, number-9)
prep_of(number-9, abortions-11)

(ROOT
  (SINV
    (VP (VBZ Is))
    (NP (PRP it))
    (SBAR (IN because)
      (S
        (NP (PRP you))
        (VP (VBP know)
          (PP (IN in)
            (NP
              (NP (PRP$ your) (NN heart))
              (PP (IN of)
                (NP (NN heart)))))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ takes)
                (NP
                  (NP (DT the) (NN life))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (JJ human) (NN being))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (JJ early) (NNS stages))
                          (PP (IN of)
                            (NP (NN development)))))))))))))
      (. ?))))

root(ROOT-0, Is-1)
nsubj(Is-1, it-2)
mark(know-5, because-3)
nsubj(know-5, you-4)
dep(Is-1, know-5)
poss(heart-8, your-7)
prep_in(know-5, heart-8)
prep_of(heart-8, heart-10)
complm(takes-13, that-11)
nsubj(takes-13, it-12)
ccomp(know-5, takes-13)
det(life-15, the-14)
dobj(takes-13, life-15)
det(being-19, a-17)
amod(being-19, human-18)
prep_of(life-15, being-19)
det(stages-23, the-21)
amod(stages-23, early-22)
prep_in(being-19, stages-23)
prep_of(stages-23, development-25)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP are)
        (VP (VBG drowning)
          (PP (IN in)
            (NP
              (NP (DT a) (NN sea))
              (PP (IN of)
                (NP (NNS condoms)
                  (CC and)
                  (NN sex) (NN ed))))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP
        (VP (VBZ has)
          (VP (VBN increased)
            (NP
              (NP (DT the) (NN rate))
              (PP (IN of)
                (NP (NN abortion))))))
        (, ,) (RB not)
        (VP (VBD decreased)
          (NP (PRP it)))))
    (. .)))

nsubj(drowning-3, We-1)
aux(drowning-3, are-2)
root(ROOT-0, drowning-3)
det(sea-6, a-5)
prep_in(drowning-3, sea-6)
prep_of(sea-6, condoms-8)
nn(ed-11, sex-10)
prep_of(sea-6, ed-11)
conj_and(condoms-8, ed-11)
nsubj(increased-15, it-13)
aux(increased-15, has-14)
conj_and(drowning-3, increased-15)
det(rate-17, the-16)
dobj(increased-15, rate-17)
prep_of(rate-17, abortion-19)
neg(increased-15, not-21)
dep(increased-15, decreased-22)
dobj(decreased-22, it-23)

(ROOT
  (S
    (NP (NNP Abstinence))
    (VP
      (VP (VBZ has) (RB not)
        (VP (VBN been)
          (VP (VBN tried)
            (CC and)
            (VBN found)
            (S
              (VP (VBG wanting))))))
      (, ,)
      (CC but)
      (VP (VBD found)
        (NP
          (ADJP (JJ hard)
            (CC and)
            (JJ left))
          (NNS untried))))
    (. .)))

nsubjpass(tried-5, Abstinence-1)
nsubjpass(found-7, Abstinence-1)
nsubjpass(found-11, Abstinence-1)
aux(tried-5, has-2)
neg(tried-5, not-3)
auxpass(tried-5, been-4)
root(ROOT-0, tried-5)
conj_and(tried-5, found-7)
xcomp(tried-5, wanting-8)
conj_but(tried-5, found-11)
amod(untried-15, hard-12)
conj_and(hard-12, left-14)
amod(untried-15, left-14)
dobj(found-11, untried-15)

(ROOT
  (S
    (PP (VBN Come)
      (PP (IN on)))
    (NP (NNP let) (POS 's))
    (VP (VBD set)
      (NP (JJ high) (NNS standards))
      (PP (IN for)
        (NP
          (NP (PRP ourselves))
          (CC and)
          (NP (PRP$ our) (NNS kids) (, ,) (RB not) (JJ low) (NNS ones)))))
    (. .)))

prep(set-5, Come-1)
pcomp(Come-1, on-2)
prep(Come-1, on-2)
nsubj(set-5, let-3)
possessive(let-3, 's-4)
root(ROOT-0, set-5)
amod(standards-7, high-6)
dobj(set-5, standards-7)
prep_for(set-5, ourselves-9)
poss(ones-16, our-11)
nn(ones-16, kids-12)
neg(ones-16, not-14)
amod(ones-16, low-15)
prep_for(set-5, ones-16)
conj_and(ourselves-9, ones-16)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP (DT the) (NN beginning))
        (PP (IN of)
          (NP (NN life)))
        (: ;)
        (PP (VBG According)
          (PP (TO to)
            (NP
              (NP (DT the) (NN text) (NN book) (NN definition))
              (PP (IN of)
                (NP (NN life))))))))
    (NP (CC both)
      (NP (DT the) (NN egg))
      (CC and)
      (NP (NN sperm)))
    (VP (VBP are)
      (ADJP (JJ alive)))
    (. .)))

det(beginning-3, the-2)
prep_on(alive-21, beginning-3)
prep_of(beginning-3, life-5)
prepc_according_to(beginning-3, to-8)
det(definition-12, the-9)
nn(definition-12, text-10)
nn(definition-12, book-11)
pobj(beginning-3, definition-12)
prep_of(definition-12, life-14)
preconj(egg-17, both-15)
det(egg-17, the-16)
nsubj(alive-21, egg-17)
conj_and(egg-17, sperm-19)
nsubj(alive-21, sperm-19)
cop(alive-21, are-20)
root(ROOT-0, alive-21)

(ROOT
  (S
    (PP (IN At)
      (NP
        (NP (DT the) (NN point))
        (PP (IN of)
          (NP (NN conception)))))
    (NP (PRP you))
    (VP (VBP have)
      (NP
        (NP (DT a) (JJ complete) (NN DNA))
        (CC and)
        (NP (DT a) (JJ different) (NN one)))
      (PP (IN from)
        (NP (DT both) (NNS parents))))
    (. .)))

det(point-3, the-2)
prep_at(have-7, point-3)
prep_of(point-3, conception-5)
nsubj(have-7, you-6)
root(ROOT-0, have-7)
det(DNA-10, a-8)
amod(DNA-10, complete-9)
dobj(have-7, DNA-10)
det(one-14, a-12)
amod(one-14, different-13)
dobj(have-7, one-14)
conj_and(DNA-10, one-14)
det(parents-17, both-16)
prep_from(have-7, parents-17)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT an) (VBN accepted) (JJ scientific) (NN fact))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is) (RB not)
              (PP (IN in)
                (NP (NN question))))))))
    (. .)))

nsubj(fact-6, That-1)
cop(fact-6, 's-2)
det(fact-6, an-3)
amod(fact-6, accepted-4)
amod(fact-6, scientific-5)
root(ROOT-0, fact-6)
nsubj(is-8, fact-6)
rcmod(fact-6, is-8)
neg(is-8, not-9)
prep_in(is-8, question-11)

(ROOT
  (S
    (NP (DT The) (NN question))
    (VP (VBZ is)
      (NP
        (NP (WP what) (NN kind))
        (PP (IN of)
          (NP (NN life)))))
    (. ?)))

det(question-2, The-1)
nsubj(kind-5, question-2)
cop(kind-5, is-3)
dep(kind-5, what-4)
root(ROOT-0, kind-5)
prep_of(kind-5, life-7)

(ROOT
  (NP
    (NP (NN cat))
    (, ,)
    (NP
      (NP (NN dog))
      (CC or)
      (NP (DT a) (NN chicken)))
    (. ?)))

root(ROOT-0, cat-1)
appos(cat-1, dog-3)
det(chicken-6, a-5)
appos(cat-1, chicken-6)
conj_or(dog-3, chicken-6)

(ROOT
  (S
    (INTJ (UH Nope))
    (, ,)
    (NP (NNS humans))
    (VP (VB produce)
      (NP (NNS humans)))
    (. .)))

dep(produce-4, Nope-1)
nsubj(produce-4, humans-3)
root(ROOT-0, produce-4)
dobj(produce-4, humans-5)

(ROOT
  (S
    (PP (IN About)
      (S
        (VP (VBG killing)
          (NP (PRP$ your) (NN neighbor)))))
    (: ;)
    (S
      (ADVP (RB So) (RB long)
        (SBAR (IN as)
          (S
            (NP (PRP he))
            (VP (VBZ is) (RB not)
              (VP
                (ADVP (RB fully))
                (VBN grown))))))
      (NP (PRP I))
      (VP (MD can)
        (VP (VB kill)
          (NP (PRP him)))))
    (. ?)))

prepc_about(kill-16, killing-2)
poss(neighbor-4, your-3)
dobj(killing-2, neighbor-4)
advmod(long-7, So-6)
advmod(kill-16, long-7)
mark(grown-13, as-8)
nsubjpass(grown-13, he-9)
auxpass(grown-13, is-10)
neg(grown-13, not-11)
advmod(grown-13, fully-12)
ccomp(long-7, grown-13)
nsubj(kill-16, I-14)
aux(kill-16, can-15)
root(ROOT-0, kill-16)
dobj(kill-16, him-17)

(ROOT
  (S (IN So) (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP
            (NP (DT the) (NNS neighbors) (NN kid))
            (SBAR
              (WHNP (WP who))
              (S
                (NP (PRP I))
                (VP (VBP have)
                  (VP (VBN been)
                    (VP (VBG raising)
                      (PP (IN for)
                        (NP (DT the) (JJ past) (CD nine) (NNS months)))
                      (SBAR (IN since)
                        (S
                          (NP (PRP$ his) (NNS parents))
                          (VP (VBD abandoned)
                            (NP (PRP him))))))))))))))
    (: ;)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ OK)
        (S
          (VP (TO to)
            (VP (VB kill)
              (NP (PRP him))
              (SBAR (IN if)
                (S
                  (NP (PRP I))
                  (VP (VBP determine)
                    (SBAR (IN that)
                      (S
                        (NP (PRP I))
                        (VP (VBP 'm)
                          (ADVP (RB no) (RB longer))
                          (ADJP (JJ stable) (RB enough)
                            (S
                              (VP (TO to)
                                (VP (VB raise)
                                  (NP (PRP him)))))))))))))))))
    (. ?)))

dep(OK-27, So-1)
mark(kid-8, if-3)
nsubj(kid-8, it-4)
cop(kid-8, 's-5)
det(kid-8, the-6)
nn(kid-8, neighbors-7)
dobj(raising-13, kid-8)
dep(OK-27, kid-8)
rel(raising-13, who-9)
nsubj(raising-13, I-10)
aux(raising-13, have-11)
aux(raising-13, been-12)
rcmod(kid-8, raising-13)
det(months-18, the-15)
amod(months-18, past-16)
num(months-18, nine-17)
prep_for(raising-13, months-18)
mark(abandoned-22, since-19)
poss(parents-21, his-20)
nsubj(abandoned-22, parents-21)
advcl(raising-13, abandoned-22)
dobj(abandoned-22, him-23)
nsubj(OK-27, it-25)
cop(OK-27, 's-26)
root(ROOT-0, OK-27)
aux(kill-29, to-28)
xcomp(OK-27, kill-29)
dobj(kill-29, him-30)
mark(determine-33, if-31)
nsubj(determine-33, I-32)
advcl(kill-29, determine-33)
complm(stable-39, that-34)
nsubj(stable-39, I-35)
cop(stable-39, 'm-36)
advmod(longer-38, no-37)
advmod(stable-39, longer-38)
ccomp(determine-33, stable-39)
advmod(stable-39, enough-40)
aux(raise-42, to-41)
xcomp(stable-39, raise-42)
dobj(raise-42, him-43)

