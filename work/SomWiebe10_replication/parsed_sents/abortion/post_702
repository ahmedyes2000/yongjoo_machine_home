(ROOT
  (NP
    (NP (NN Couple))
    (PP (IN of)
      (NP (NNS questions)))
    (PP (IN for)
      (NP (PRP you)))
    (. .)))

root(ROOT-0, Couple-1)
prep_of(Couple-1, questions-3)
prep_for(Couple-1, you-5)

(ROOT
  (NP
    (NP (NNP First))
    (PP (IN of)
      (NP
        (NP (DT all))
        (, ,)
        (NP (NNP Aristotle))))
    (. ?)))

root(ROOT-0, First-1)
prep_of(First-1, all-3)
appos(all-3, Aristotle-5)

(ROOT
  (S
    (NP (DT Some) (JJ male) (NNS spiders))
    (VP (VBP do)
      (S
        (NP (NN something))
        (ADJP (JJ similar)))
      (, ,)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP they))
          (VP
            (ADVP (RB basically))
            (VB mate)
            (PRN (, ,)
              (ADVP (RB atrophy))
              (, ,))
            (CC and)
            (VB become)
            (NP (DT an) (NN organ))))))
    (. .)))

det(spiders-3, Some-1)
amod(spiders-3, male-2)
nsubj(do-4, spiders-3)
root(ROOT-0, do-4)
nsubj(similar-6, something-5)
xcomp(do-4, similar-6)
advmod(organ-18, where-8)
nsubj(become-16, they-9)
nsubj(organ-18, they-9)
advmod(organ-18, basically-10)
dep(organ-18, mate-11)
dep(organ-18, atrophy-13)
advcl(do-4, become-16)
conj_and(organ-18, become-16)
cop(organ-18, become-16)
det(organ-18, an-17)
advcl(do-4, organ-18)

(ROOT
  (S (IN So)
    (NP (DT an) (JJ individual) (NN organism))
    (VP (MD can)
      (ADVP (RB simply))
      (VP (VB become)
        (NP
          (NP (DT a) (NN part))
          (PP (IN of)
            (NP (DT another) (NN organism))))))
    (. .)))

dep(part-9, So-1)
det(organism-4, an-2)
amod(organism-4, individual-3)
nsubj(part-9, organism-4)
aux(part-9, can-5)
advmod(part-9, simply-6)
cop(part-9, become-7)
det(part-9, a-8)
root(ROOT-0, part-9)
det(organism-12, another-11)
prep_of(part-9, organism-12)

(ROOT
  (S
    (NP (NNP Gestation))
    (VP (VBZ is)
      (NP
        (NP (DT this) (NN process))
        (PP (IN in)
          (NP (NN reverse)))))
    (. .)))

nsubj(process-4, Gestation-1)
cop(process-4, is-2)
det(process-4, this-3)
root(ROOT-0, process-4)
prep_in(process-4, reverse-6)

(ROOT
  (S
    (NP (NNP Aristotle))
    (VP (VBZ is)
      (ADJP (JJ relevant)
        (PP (IN in)
          (NP (DT this) (NN discussion)))))
    (. ?)))

nsubj(relevant-3, Aristotle-1)
cop(relevant-3, is-2)
root(ROOT-0, relevant-3)
det(discussion-6, this-5)
prep_in(relevant-3, discussion-6)

(ROOT
  (S
    (ADVP (RB Traditionally))
    (, ,)
    (NP (PRP one))
    (VP (MD would)
      (VP (VB say) ('' '')
        (S
          (S
            (NP (NNP Aristotle))
            (VP (VBZ says)
              (NP (NN such-and-such))))
          (CC and)
          (S
            (NP (DT this))
            (VP (VBZ is))))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP he))
            (VP (VBZ 's)
              (ADJP (JJ right)))))))
    (. .)))

advmod(say-5, Traditionally-1)
nsubj(say-5, one-3)
aux(say-5, would-4)
root(ROOT-0, say-5)
nsubj(says-8, Aristotle-7)
dep(say-5, says-8)
dobj(says-8, such-and-such-9)
nsubj(is-12, this-11)
dep(say-5, is-12)
conj_and(says-8, is-12)
advmod(right-16, why-13)
nsubj(right-16, he-14)
cop(right-16, 's-15)
advcl(say-5, right-16)

(ROOT
  (S ('' '')
    (NP (RB not) (JJ just) ('' '') (NN Aristotle))
    (VP (VBZ says))
    (. ...)))

neg(Aristotle-5, not-2)
amod(Aristotle-5, just-3)
nsubj(says-6, Aristotle-5)
root(ROOT-0, says-6)

(ROOT
  (INTJ (UH .)))


(ROOT
  (FRAG
    (ADVP (RB so) (RB there))
    (. .)))

advmod(there-2, so-1)
root(ROOT-0, there-2)

(ROOT
  (S ('' '')
    (ADVP (LS Second))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN difference))
        (PP (IN between)
          (NP
            (ADJP
              (ADJP (RB financially) (JJ dependent))
              (, ,)
              (CC or)
              (ADJP (RB therapeutically) (JJ dependent))
              (, ,)
              (CC and)
              (ADJP (RB organically) (JJ dependent)))))))
    (. .)))

advmod('s-5, Second-2)
expl('s-5, there-4)
root(ROOT-0, 's-5)
det(difference-7, a-6)
nsubj('s-5, difference-7)
advmod(dependent-10, financially-9)
prep_between(difference-7, dependent-10)
advmod(dependent-14, therapeutically-13)
prep_between(difference-7, dependent-14)
conj_or(dependent-10, dependent-14)
advmod(dependent-18, organically-17)
prep_between(difference-7, dependent-18)
conj_and(dependent-10, dependent-18)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB see)
        (NP
          (NP (DT this))
          (PP (IN in)
            (NP (NN reverse))))))
    (. .)))

nsubj(see-3, You-1)
aux(see-3, can-2)
root(ROOT-0, see-3)
dobj(see-3, this-4)
prep_in(this-4, reverse-6)

(ROOT
  (S
    (NP (NN http:\/\/en.wikipedia.org\/wiki\/Cymothoa_exigua))
    (PRN
      (S
        (NP (DT This))
        (VP (VBZ is)
          (NP
            (NP (DT a) (JJ parasitic) (NN bug-thing))
            (PRN (-LRB- -LRB-)
              (S
                (VP (VB Do) (RB n't)
                  (VP (VB be)
                    (VP (VBN put)
                      (PRT (RP off))
                      (PP (IN by)
                        (NP (PRP$ my) (JJ scientific) (NN jargon)))))))
              (-RRB- -RRB-))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ attaches)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN tongue))
                      (PP (IN of)
                        (NP (DT a) (JJ certain) (NN fish)))))))))))
      (, ,))
    (VP
      (VP (VBZ drains)
        (NP (PRP it))
        (PP (IN of)
          (NP (NN blood))))
      (, ,)
      (CC and)
      (VP
        (ADVP (RB eventually))
        (VBZ becomes)
        (NP
          (NP (DT the) (NN fish) (POS 's))
          (NN replacement) (NN tongue))))
    (. .)))

nsubj(drains-28, http:\/\/en.wikipedia.org\/wiki\/Cymothoa_exigua-1)
nsubj(bug-thing-6, This-2)
cop(bug-thing-6, is-3)
det(bug-thing-6, a-4)
amod(bug-thing-6, parasitic-5)
nsubj(attaches-19, bug-thing-6)
parataxis(drains-28, bug-thing-6)
aux(put-11, Do-8)
neg(put-11, n't-9)
auxpass(put-11, be-10)
dep(bug-thing-6, put-11)
prt(put-11, off-12)
poss(jargon-16, my-14)
amod(jargon-16, scientific-15)
agent(put-11, jargon-16)
rcmod(bug-thing-6, attaches-19)
det(tongue-22, the-21)
prep_to(attaches-19, tongue-22)
det(fish-26, a-24)
amod(fish-26, certain-25)
prep_of(tongue-22, fish-26)
root(ROOT-0, drains-28)
dobj(drains-28, it-29)
prep_of(drains-28, blood-31)
advmod(tongue-40, eventually-34)
cop(tongue-40, becomes-35)
det(fish-37, the-36)
poss(tongue-40, fish-37)
nn(tongue-40, replacement-39)
conj_and(drains-28, tongue-40)

(ROOT
  (S
    (PP (IN At)
      (NP (DT that) (NN point)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ stops)
      (S
        (VP (VBG being)
          (NP
            (NP
              (NP (PRP it) (POS 's))
              (JJ own) (NN bug-thing)
              (CC and)
              (NN becomes) (NN part))
            (PP (IN of)
              (NP (DT the) (NN fish)))))))
    (. .)))

det(point-3, that-2)
prep_at(stops-6, point-3)
nsubj(stops-6, it-5)
root(ROOT-0, stops-6)
cop(bug-thing-11, being-7)
poss(bug-thing-11, it-8)
amod(bug-thing-11, own-10)
xcomp(stops-6, bug-thing-11)
nn(part-14, becomes-13)
xcomp(stops-6, part-14)
conj_and(bug-thing-11, part-14)
det(fish-17, the-16)
prep_of(bug-thing-11, fish-17)

