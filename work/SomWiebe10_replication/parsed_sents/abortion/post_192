(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ grateful)
        (PP (IN for)
          (NP
            (NP (DT the) (NN discussion))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (VP (VBN allowed)
                    (PP (IN on)
                      (NP (DT this) (NN site)))))))))))
    (. .)))

nsubj(grateful-3, I-1)
cop(grateful-3, 'm-2)
root(ROOT-0, grateful-3)
det(discussion-6, the-5)
prep_for(grateful-3, discussion-6)
nsubjpass(allowed-9, discussion-6)
auxpass(allowed-9, is-8)
rcmod(discussion-6, allowed-9)
det(site-12, this-11)
prep_on(allowed-9, site-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP dod) (RB not)
      (VP (VB have)
        (NP (NN time))
        (S
          (VP (TO to)
            (VP (VB read)
              (NP (PDT all) (DT the) (NNS comments)
                (CC and)
                (NNS debates)))))))
    (. .)))

nsubj(dod-2, I-1)
root(ROOT-0, dod-2)
neg(dod-2, not-3)
dep(dod-2, have-4)
dobj(have-4, time-5)
aux(read-7, to-6)
xcomp(have-4, read-7)
dep(comments-10, all-8)
det(comments-10, the-9)
dobj(read-7, comments-10)
dobj(read-7, debates-12)
conj_and(comments-10, debates-12)

(ROOT
  (S
    (VP (VB Thank)
      (NP (PRP you))
      (PP (IN for)
        (NP (DT this) (NN chance)
          (S
            (VP (TO to)
              (VP (VB speak)))))))
    (. !)))

root(ROOT-0, Thank-1)
dobj(Thank-1, you-2)
det(chance-5, this-4)
prep_for(Thank-1, chance-5)
aux(speak-7, to-6)
infmod(chance-5, speak-7)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (VP (VBG speaking)
          (PP (IN about)
            (NP
              (NP (DT the) (NN right))
              (PP (TO to)
                (NP (NN abortion)))))
          (SBAR (IN because)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (NP
                  (NP (DT the) (NN law))
                  (PP (IN of)
                    (NP (PRP$ our) (NN land))))))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB also))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (PP (IN at)
            (NP (CD one) (NN time)))
          (, ,)
          (NP (NN slavery))
          (VP (VBD was)
            (VP (VBN allowed)
              (PP (IN in)
                (NP (PRP$ our) (NN land)))
              (SBAR (IN because)
                (S
                  (NP (PRP it))
                  (VP (VBD was)
                    (NP
                      (NP (DT the) (NN law))
                      (PP (IN of)
                        (NP (DT the) (NN land))))))))))))
    (. .)))

advmod(speaking-2, When-1)
advcl(know-19, speaking-2)
det(right-5, the-4)
prep_about(speaking-2, right-5)
prep_to(right-5, abortion-7)
mark(law-12, because-8)
nsubj(law-12, it-9)
cop(law-12, is-10)
det(law-12, the-11)
advcl(speaking-2, law-12)
poss(land-15, our-14)
prep_of(law-12, land-15)
nsubj(know-19, I-17)
advmod(know-19, also-18)
root(ROOT-0, know-19)
complm(allowed-27, that-20)
num(time-23, one-22)
prep_at(allowed-27, time-23)
nsubjpass(allowed-27, slavery-25)
auxpass(allowed-27, was-26)
ccomp(know-19, allowed-27)
poss(land-30, our-29)
prep_in(allowed-27, land-30)
mark(law-35, because-31)
nsubj(law-35, it-32)
cop(law-35, was-33)
det(law-35, the-34)
advcl(allowed-27, law-35)
det(land-38, the-37)
prep_of(law-35, land-38)

(ROOT
  (SBARQ
    (WHNP
      (WHNP (WP What))
      (PP (IN about)
        (NP (PDT all) (DT the) (NNS issues))))
    (S
      (VP (VBG surrounding)
        (NP (DT the) (JJ racial) (NN discrimanation))
        (PP (IN in)
          (NP (DT this) (NN land)))))
    (. ?)))

dep(surrounding-6, What-1)
predet(issues-5, all-3)
det(issues-5, the-4)
prep_about(What-1, issues-5)
root(ROOT-0, surrounding-6)
det(discrimanation-9, the-7)
amod(discrimanation-9, racial-8)
dobj(surrounding-6, discrimanation-9)
det(land-12, this-11)
prep_in(surrounding-6, land-12)

(ROOT
  (SQ (VBD Was)
    (NP (DT that))
    (PP (RB not) (IN at)
      (NP
        (NP (CD one) (NN time))
        (NP
          (NP (DT the) (NN law))
          (PP (IN of)
            (NP (PRP$ our) (NN land))))))
    (. ?)))

root(ROOT-0, Was-1)
nsubj(Was-1, that-2)
neg(Was-1, not-3)
num(time-6, one-5)
prep_at(Was-1, time-6)
det(law-8, the-7)
dep(time-6, law-8)
poss(land-11, our-10)
prep_of(law-8, land-11)

(ROOT
  (SBARQ (CC And)
    (WHNP (WP what))
    (SQ (VBD was)
      (ADJP
        (ADVP (DT that) (DT all))
        (JJ worth)))
    (. ?)))

cc(worth-6, And-1)
attr(worth-6, what-2)
cop(worth-6, was-3)
dep(all-5, that-4)
advmod(worth-6, all-5)
root(ROOT-0, worth-6)

(ROOT
  (NP
    (NP (DT The) (NN cost))
    (PP (IN of)
      (NP
        (NP (DT the) (NN ink))
        (CC and)
        (NP
          (NP (DT the) (NN paper))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBD made)
                (S
                  (NP (PRP it))
                  (NP (DT a) (NN law)))))))))
    (. ?)))

det(cost-2, The-1)
root(ROOT-0, cost-2)
det(ink-5, the-4)
prep_of(cost-2, ink-5)
det(paper-8, the-7)
prep_of(cost-2, paper-8)
conj_and(ink-5, paper-8)
nsubj(made-10, paper-8)
rcmod(paper-8, made-10)
nsubj(law-13, it-11)
det(law-13, a-12)
xcomp(made-10, law-13)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do) (RB n't)
      (VP (VB need)
        (NP (JJ human) (NNS laws))
        (S
          (VP (TO to)
            (VP (VB know)
              (NP
                (NP (DT the) (NN law))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ is)
                      (VP (VBN written)
                        (PP (IN into)
                          (NP (DT every) (JJ human) (NN heart)))))))))))))
    (. .)))

nsubj(need-4, We-1)
aux(need-4, do-2)
neg(need-4, n't-3)
root(ROOT-0, need-4)
amod(laws-6, human-5)
dobj(need-4, laws-6)
aux(know-8, to-7)
xcomp(need-4, know-8)
det(law-10, the-9)
dobj(know-8, law-10)
nsubjpass(written-13, law-10)
auxpass(written-13, is-12)
rcmod(law-10, written-13)
det(heart-17, every-15)
amod(heart-17, human-16)
prep_into(written-13, heart-17)

(ROOT
  (S
    (S
      (NP (PRP We))
      (ADVP (DT all))
      (VP (VBP know)
        (ADJP (JJ right)
          (CC and)
          (JJ wrong))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP do) (RB n't)
        (VP (VB need)
          (S
            (NP (NN someone) (RB else))
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP us))))))))
    (. .)))

nsubj(know-3, We-1)
advmod(know-3, all-2)
root(ROOT-0, know-3)
acomp(know-3, right-4)
acomp(know-3, wrong-6)
conj_and(right-4, wrong-6)
nsubj(need-11, we-8)
aux(need-11, do-9)
neg(need-11, n't-10)
conj_and(know-3, need-11)
nsubj(tell-15, someone-12)
advmod(someone-12, else-13)
aux(tell-15, to-14)
xcomp(need-11, tell-15)
dobj(tell-15, us-16)

(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB just))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB stop)
            (S
              (VP (VBG joking)
                (NP (PRP ourselves))))))))
    (. .)))

nsubj(need-3, We-1)
xsubj(stop-5, We-1)
advmod(need-3, just-2)
root(ROOT-0, need-3)
aux(stop-5, to-4)
xcomp(need-3, stop-5)
xcomp(stop-5, joking-6)
dobj(joking-6, ourselves-7)

