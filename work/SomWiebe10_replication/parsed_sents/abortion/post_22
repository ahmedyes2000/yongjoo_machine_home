(ROOT
  (S
    (NP (DT A) (NN woman))
    (VP (VBZ has)
      (NP (DT the) (JJ sole) (NN right)
        (S
          (VP (TO to)
            (VP (VB decide)
              (S
                (VP (TO to)
                  (VP (VB seek)
                    (NP (DT an) (NN abortion))))))))))
    (. .)))

det(woman-2, A-1)
nsubj(has-3, woman-2)
root(ROOT-0, has-3)
det(right-6, the-4)
amod(right-6, sole-5)
dobj(has-3, right-6)
aux(decide-8, to-7)
infmod(right-6, decide-8)
aux(seek-10, to-9)
xcomp(decide-8, seek-10)
det(abortion-12, an-11)
dobj(seek-10, abortion-12)

(ROOT
  (S
    (NP (DT A) (NN woman))
    (VP (VBZ carries)
      (NP (DT a) (NN child))
      (PP (IN during)
        (NP (NN pregnancy)
          (CC and)
          (NN undergoes) (NNS child-birth))))
    (. .)))

det(woman-2, A-1)
nsubj(carries-3, woman-2)
root(ROOT-0, carries-3)
det(child-5, a-4)
dobj(carries-3, child-5)
nn(child-birth-10, pregnancy-7)
conj_and(pregnancy-7, undergoes-9)
nn(child-birth-10, undergoes-9)
prep_during(carries-3, child-birth-10)

(ROOT
  (S
    (S
      (NP (NN No-one) (RB else))
      (VP (VBZ carries)
        (NP
          (NP (DT the) (NN child))
          (PP (IN for)
            (NP (PRP her))))))
    (: ;)
    (S
      (S
        (NP (PRP it))
        (VP (MD will)
          (VP (VB be)
            (NP (PRP$ her) (NN responsibility))
            (ADVP (RB alone)))))
      (, ,)
      (CC and)
      (S
        (ADVP (RB thus))
        (NP (PRP she))
        (VP (MD should)
          (VP (VB have)
            (NP (DT the) (JJ sole) (NN right)
              (S
                (VP (TO to)
                  (VP (VB decide)))))))))
    (. .)))

nsubj(carries-3, No-one-1)
advmod(No-one-1, else-2)
root(ROOT-0, carries-3)
det(child-5, the-4)
dobj(carries-3, child-5)
prep_for(child-5, her-7)
nsubj(responsibility-13, it-9)
aux(responsibility-13, will-10)
cop(responsibility-13, be-11)
poss(responsibility-13, her-12)
parataxis(carries-3, responsibility-13)
advmod(responsibility-13, alone-14)
advmod(have-20, thus-17)
nsubj(have-20, she-18)
aux(have-20, should-19)
parataxis(carries-3, have-20)
conj_and(responsibility-13, have-20)
det(right-23, the-21)
amod(right-23, sole-22)
dobj(have-20, right-23)
aux(decide-25, to-24)
infmod(right-23, decide-25)

(ROOT
  (S
    (S
      (NP (DT These))
      (VP (VBP are)
        (ADJP (JJ important)
          (SBAR
            (S
              (NP
                (NP (NNS events))
                (PP (IN in)
                  (NP (DT a) (NN woman))))
              (VP (VBZ s)
                (NP (NN life))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP she))
          (VP (VBZ does) (RB not)
            (VP (VB want)
              (S
                (VP (TO to)
                  (VP (VB go)
                    (PP (IN through)
                      (NP
                        (NP (DT the) (JJ full) (CD nine) (NNS months))
                        (CC and)
                        (NP (JJ subsequent) (NN birth)))))))))))
      (, ,)
      (ADVP (RB then))
      (NP (PRP she))
      (VP (MD should)
        (VP (VB have)
          (NP (DT the) (NN right)
            (S
              (VP (TO to)
                (VP (VB choose)
                  (S (RB not)
                    (VP (TO to)
                      (VP (VB do)
                        (ADVP (RB so))))))))))))
    (. .)))

nsubj(important-3, These-1)
cop(important-3, are-2)
root(ROOT-0, important-3)
nsubj(life-9, events-4)
det(woman-7, a-6)
prep_in(events-4, woman-7)
cop(life-9, s-8)
dep(important-3, life-9)
mark(want-16, if-12)
nsubj(want-16, she-13)
xsubj(go-18, she-13)
aux(want-16, does-14)
neg(want-16, not-15)
advcl(have-31, want-16)
aux(go-18, to-17)
xcomp(want-16, go-18)
det(months-23, the-20)
amod(months-23, full-21)
num(months-23, nine-22)
prep_through(go-18, months-23)
amod(birth-26, subsequent-25)
prep_through(go-18, birth-26)
conj_and(months-23, birth-26)
advmod(have-31, then-28)
nsubj(have-31, she-29)
aux(have-31, should-30)
conj_and(important-3, have-31)
det(right-33, the-32)
dobj(have-31, right-33)
aux(choose-35, to-34)
infmod(right-33, choose-35)
neg(do-38, not-36)
aux(do-38, to-37)
xcomp(choose-35, do-38)
advmod(do-38, so-39)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADJP (JJ few)
        (SBAR (IN if)
          (S
            (NP
              (NP (DT any) (JJ other) (NNS cases))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP
                    (NP (NN something))
                    (PP (IN with)
                      (NP (JJ such) (JJ profound) (NNS consequences))))
                  (VP (VBZ is)
                    (VP (VBN forced)
                      (PP (IN upon)
                        (NP
                          (NP (DT a) (JJ human) (NN being))
                          (PP (IN against)
                            (NP (NNS her\/his))))))))))
            (VP (MD will))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
acomp(are-2, few-3)
mark(will-22, if-4)
det(cases-7, any-5)
amod(cases-7, other-6)
nsubj(will-22, cases-7)
advmod(forced-15, where-8)
nsubjpass(forced-15, something-9)
amod(consequences-13, such-11)
amod(consequences-13, profound-12)
prep_with(something-9, consequences-13)
auxpass(forced-15, is-14)
rcmod(cases-7, forced-15)
det(being-19, a-17)
amod(being-19, human-18)
prep_upon(forced-15, being-19)
prep_against(being-19, her\/his-21)
ccomp(few-3, will-22)

