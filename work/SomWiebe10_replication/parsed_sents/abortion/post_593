(ROOT
  (S
    (NP (DT The) (NN sperm)
      (CC and)
      (NN egg))
    (VP (VBP have)
      (NP (NN DNA) (NNS patterns))
      (PP (IN from)
        (NP (DT the) (NNS parents))))
    (. .)))

det(sperm-2, The-1)
nsubj(have-5, sperm-2)
conj_and(sperm-2, egg-4)
nsubj(have-5, egg-4)
root(ROOT-0, have-5)
nn(patterns-7, DNA-6)
dobj(have-5, patterns-7)
det(parents-10, the-9)
prep_from(have-5, parents-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN combination))
        (PP (IN of)
          (NP (DT the) (NN DNA) (NNS patterns)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ creates)
              (NP (DT a) (JJ new) (NN person)))))))
    (. .)))

nsubj(combination-4, It-1)
cop(combination-4, is-2)
det(combination-4, the-3)
root(ROOT-0, combination-4)
nsubj(creates-10, combination-4)
det(patterns-8, the-6)
nn(patterns-8, DNA-7)
prep_of(combination-4, patterns-8)
rcmod(combination-4, creates-10)
det(person-13, a-11)
amod(person-13, new-12)
dobj(creates-10, person-13)

(ROOT
  (S
    (NP
      (NP (NNP Sperm))
      (PP (IN by)
        (NP (PRP itself))))
    (VP (VBZ does) (RB not)
      (VP (VB become)
        (NP (DT a) (JJ new) (NN life))))
    (. .)))

nsubj(life-9, Sperm-1)
prep_by(Sperm-1, itself-3)
aux(life-9, does-4)
neg(life-9, not-5)
cop(life-9, become-6)
det(life-9, a-7)
amod(life-9, new-8)
root(ROOT-0, life-9)

(ROOT
  (S
    (NP
      (NP (DT An) (NN egg))
      (PP (IN by)
        (NP (PRP itself))))
    (VP (VBZ does) (RB not)
      (VP (VB become)
        (NP (DT a) (JJ new) (NN life))))
    (. .)))

det(egg-2, An-1)
nsubj(life-10, egg-2)
prep_by(egg-2, itself-4)
aux(life-10, does-5)
neg(life-10, not-6)
cop(life-10, become-7)
det(life-10, a-8)
amod(life-10, new-9)
root(ROOT-0, life-10)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP combine)
        (NP (DT the) (CD two))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (NP (DT a) (JJ new) (NN life))))
    (. .)))

nsubj(combine-2, You-1)
root(ROOT-0, combine-2)
det(two-4, the-3)
dobj(combine-2, two-4)
nsubj(have-7, you-6)
conj_and(combine-2, have-7)
det(life-10, a-8)
amod(life-10, new-9)
dobj(have-7, life-10)

(ROOT
  (S
    (NP (DT A) (JJ new) (NN person))
    (VP (MD will)
      (VP (VB come)
        (PP (IN into)
          (NP
            (NP (DT the) (NN world))
            (PP (IN in)
              (NP (CD nine) (NNS months)))))
        (ADVP
          (ADVP (RB as) (RB long))
          (SBAR (IN as)
            (S
              (NP (NN nothing))
              (VP (VBZ happens)
                (PP (TO to)
                  (NP (DT the) (JJ unborn) (NN child)))
                (PP (IN during)
                  (NP (DT that) (NN period)))))))))
    (. .)))

det(person-3, A-1)
amod(person-3, new-2)
nsubj(come-5, person-3)
aux(come-5, will-4)
root(ROOT-0, come-5)
det(world-8, the-7)
prep_into(come-5, world-8)
num(months-11, nine-10)
prep_in(world-8, months-11)
advmod(long-13, as-12)
advmod(come-5, long-13)
mark(happens-16, as-14)
nsubj(happens-16, nothing-15)
ccomp(long-13, happens-16)
det(child-20, the-18)
amod(child-20, unborn-19)
prep_to(happens-16, child-20)
det(period-23, that-22)
prep_during(happens-16, period-23)

