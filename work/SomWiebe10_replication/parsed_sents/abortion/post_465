(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP
          (NP (DT the) (NN logic))
          (PP (IN behind)
            (NP
              (NP (DT this) (NN argument))
              (PP (IN as) (TO to)
                (SBAR
                  (WHADVP (WRB why))
                  (S
                    (NP (DT a) (NN woman))
                    (VP (MD should)
                      (VP (VB have)
                        (NP
                          (NP (DT no) (JJ legal) (NN control))
                          (PP (IN over)
                            (NP (PRP$ her) (NN body) (NNS parts))))))))))))))
    (, ,)
    (NP (PRP you)
      (CC and)
      (PRP I))
    (VP (VBP have)
      (VP (VBN committed)
        (NP
          (NP (NN murder))
          (, ,)
          (CC or)
          (NP (NN man-slaughter)))))
    (. .)))

prepc_according_to(committed-27, to-2)
det(logic-4, the-3)
pobj(committed-27, logic-4)
det(argument-7, this-6)
prep_behind(logic-4, argument-7)
advmod(have-14, why-10)
det(woman-12, a-11)
nsubj(have-14, woman-12)
aux(have-14, should-13)
prepc_as_to(argument-7, have-14)
det(control-17, no-15)
amod(control-17, legal-16)
dobj(have-14, control-17)
poss(parts-21, her-19)
nn(parts-21, body-20)
prep_over(control-17, parts-21)
nsubj(committed-27, you-23)
conj_and(you-23, I-25)
nsubj(committed-27, I-25)
aux(committed-27, have-26)
root(ROOT-0, committed-27)
dobj(committed-27, murder-28)
dobj(committed-27, man-slaughter-31)
conj_or(murder-28, man-slaughter-31)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP
          (NP (NNS thousands))
          (PP (IN of)
            (NP (JJ innocent) (NNS children)))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP are)
                (VP (VBG dying)
                  (NP (NN everyday))
                  (PP (IN through)
                    (NP
                      (NP (NN lack))
                      (PP (IN of)
                        (NP
                          (NP (PDT such) (DT a) (JJ simple) (NN thing))
                          (PP (IN as)
                            (NP (DT a) (VBG functioning) (NN kidney))))))))))))
        (, ,)
        (CC or)
        (NP (NN bone) (NN marrow))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, thousands-3)
nsubj(dying-9, thousands-3)
amod(children-6, innocent-5)
prep_of(thousands-3, children-6)
aux(dying-9, are-8)
rcmod(thousands-3, dying-9)
dobj(dying-9, everyday-10)
prep_through(dying-9, lack-12)
predet(thing-17, such-14)
det(thing-17, a-15)
amod(thing-17, simple-16)
prep_of(lack-12, thing-17)
det(kidney-21, a-19)
amod(kidney-21, functioning-20)
prep_as(thing-17, kidney-21)
nn(marrow-25, bone-24)
nsubj(are-2, marrow-25)
conj_or(thousands-3, marrow-25)
nsubj(dying-9, marrow-25)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP choose)
          (S
            (VP (TO to)
              (VP
                (VP (VB retain)
                  (NP (PRP$ your) (NN body) (NNS parts)))
                (, ,)
                (CC or)
                (VP (VB choose)
                  (S
                    (VP (TO to)
                      (VP (RB not) (VB undergo)
                        (NP (DT a) (JJ painful) (NN process))))))))))))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBG killing)
        (NP (DT those) (NNS children))
        (PP (IN through)
          (NP (PRP$ your) (NN inaction)))))
    (. .)))

advmod(choose-3, When-1)
nsubj(choose-3, you-2)
xsubj(retain-5, you-2)
advcl(killing-20, choose-3)
aux(retain-5, to-4)
xcomp(choose-3, retain-5)
poss(parts-8, your-6)
nn(parts-8, body-7)
dobj(retain-5, parts-8)
xcomp(choose-3, choose-11)
conj_or(retain-5, choose-11)
aux(undergo-14, to-12)
neg(undergo-14, not-13)
xcomp(choose-11, undergo-14)
det(process-17, a-15)
amod(process-17, painful-16)
dobj(undergo-14, process-17)
nsubj(killing-20, you-18)
aux(killing-20, are-19)
root(ROOT-0, killing-20)
det(children-22, those-21)
dobj(killing-20, children-22)
poss(inaction-25, your-24)
prep_through(killing-20, inaction-25)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP know)
          (SBAR (IN that)
            (S
              (S
                (NP (DT a) (NN child))
                (VP (MD will)
                  (VP (VB die))))
              (CC and)
              (S
                (NP (PRP you))
                (VP (VBP do)
                  (NP (NN nothing))
                  (S
                    (VP (TO to)
                      (VP (VB prevent)
                        (NP (PRP it))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (VP (VBN murdered)
        (NP (DT that) (NN child))))
    (. .)))

mark(know-3, If-1)
nsubj(know-3, you-2)
advcl(murdered-19, know-3)
complm(die-8, that-4)
det(child-6, a-5)
nsubj(die-8, child-6)
aux(die-8, will-7)
ccomp(know-3, die-8)
nsubj(do-11, you-10)
ccomp(know-3, do-11)
conj_and(die-8, do-11)
dobj(do-11, nothing-12)
aux(prevent-14, to-13)
xcomp(do-11, prevent-14)
dobj(prevent-14, it-15)
nsubj(murdered-19, you-17)
aux(murdered-19, have-18)
root(ROOT-0, murdered-19)
det(child-21, that-20)
dobj(murdered-19, child-21)

(ROOT
  (S
    (PP (VBG According)
      (PP (TO to)
        (NP
          (NP (DT the) (NN logic))
          (SBAR (IN that)
            (S
              (NP (DT a) (NN woman))
              (VP (MD must)
                (VP (VB give)
                  (PRT (RP up))
                  (NP
                    (NP (NN control))
                    (PP (IN of)
                      (NP (PRP$ her) (NN body) (NNS parts))))
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN sake))
                      (PP (IN of)
                        (S
                          (VP (VBG saving)
                            (NP (DT a) (NN life))))))))))))))
    (, ,)
    (NP (DT all) (NNS people))
    (VP (MD must)
      (VP (VB do)
        (ADVP (RB so))))
    (. .)))

prepc_according_to(do-27, to-2)
det(logic-4, the-3)
pobj(do-27, logic-4)
complm(give-9, that-5)
det(woman-7, a-6)
nsubj(give-9, woman-7)
aux(give-9, must-8)
dep(logic-4, give-9)
prt(give-9, up-10)
dobj(give-9, control-11)
poss(parts-15, her-13)
nn(parts-15, body-14)
prep_of(control-11, parts-15)
det(sake-18, the-17)
prep_for(give-9, sake-18)
prepc_of(sake-18, saving-20)
det(life-22, a-21)
dobj(saving-20, life-22)
det(people-25, all-24)
nsubj(do-27, people-25)
aux(do-27, must-26)
root(ROOT-0, do-27)
advmod(do-27, so-28)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN abortion))
        (VP (MD should)
          (VP (VB be)
            (ADJP (JJ illegal))
            (, ,)
            (ADVP (RB so))))))
    (ADVP (RB also))
    (VP (MD should)
      (VP (VB non-compliance)
        (PP (IN with)
          (NP
            (NP (JJ other) (JJ medical) (NNS procedures))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD can)
                  (VP (VB save)
                    (NP (NNS lives))))))))))
    (. .)))

mark(illegal-5, If-1)
nsubj(illegal-5, abortion-2)
aux(illegal-5, should-3)
cop(illegal-5, be-4)
advcl(non-compliance-10, illegal-5)
csubj(non-compliance-10, illegal-5)
advmod(illegal-5, so-7)
advmod(non-compliance-10, also-8)
aux(non-compliance-10, should-9)
root(ROOT-0, non-compliance-10)
amod(procedures-14, other-12)
amod(procedures-14, medical-13)
prep_with(non-compliance-10, procedures-14)
nsubj(save-17, procedures-14)
aux(save-17, can-16)
rcmod(procedures-14, save-17)
dobj(save-17, lives-18)

