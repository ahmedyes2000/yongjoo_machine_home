(ROOT
  (S
    (NP
      (NP (DT A) (NN clump))
      (PP (IN of)
        (NP (NNS cells))))
    (VP (VBZ is) (RB not)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (VP (VBN aborted)))))
      (, ,)
      (S
        (VP (VB do)
          (NP (PRP$ your) (NN research))
          (ADVP (RB first)))))
    (. .)))

det(clump-2, A-1)
nsubj(is-5, clump-2)
prep_of(clump-2, cells-4)
root(ROOT-0, is-5)
neg(is-5, not-6)
nsubjpass(aborted-9, what-7)
auxpass(aborted-9, is-8)
ccomp(is-5, aborted-9)
ccomp(is-5, do-11)
poss(research-13, your-12)
dobj(do-11, research-13)
advmod(do-11, first-14)

(ROOT
  (X (CC But)
    (S
      (VP (VB let)
        (SBAR
          (S
            (NP (PRP 's))
            (VP (VBP say)
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN sake))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN argument))
                            (: ;)
                            (SBARQ
                              (WHNP
                                (WHNP (WP what) (NN kind))
                                (PP (IN of)
                                  (NP (NNS cells))))
                              (SQ (VBP are)
                                (NP (PRP they)))
                              (. ?))))))))))))))))

dep(let-2, But-1)
root(ROOT-0, let-2)
nsubj(say-4, 's-3)
ccomp(let-2, say-4)
nsubj(are-6, they-5)
ccomp(say-4, are-6)
det(sake-9, the-8)
prep_for(are-6, sake-9)
det(argument-12, the-11)
prep_of(sake-9, argument-12)
det(kind-15, what-14)
attr(are-18, kind-15)
prep_of(kind-15, cells-17)
dep(argument-12, are-18)
nsubj(are-18, they-19)

(ROOT
  (S
    (NP
      (NP (DT A) (NN child))
      (VP (VBN conceived)))
    (VP
      (VP (VBZ is)
        (ADJP (JJ worthy)
          (PP (IN of)
            (NP (NN life)))))
      (CC and)
      (VP (MD should)
        (VP (VB have)
          (NP (DT every) (NN opportunity)
            (S
              (VP (TO to)
                (VP (VB live)
                  (NP (PRP it)))))))))
    (. .)))

det(child-2, A-1)
nsubj(worthy-5, child-2)
nsubj(have-10, child-2)
partmod(child-2, conceived-3)
cop(worthy-5, is-4)
root(ROOT-0, worthy-5)
prep_of(worthy-5, life-7)
aux(have-10, should-9)
conj_and(worthy-5, have-10)
det(opportunity-12, every-11)
dobj(have-10, opportunity-12)
aux(live-14, to-13)
infmod(opportunity-12, live-14)
dobj(live-14, it-15)

(ROOT
  (FRAG
    (NP (NN chicken))
    (. ?)))

root(ROOT-0, chicken-1)

(ROOT
  (S
    (NP (DT no) (PRP they))
    (VP (VBP are)
      (ADJP (JJ human)))
    (. .)))

det(they-2, no-1)
nsubj(human-4, they-2)
cop(human-4, are-3)
root(ROOT-0, human-4)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP (DT the) (NN issue))
        (PP (IN of)
          (NP (NNP dependency)))))
    (: :)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (RB wholly) (JJ dependent)
        (PP (IN on)
          (NP
            (NP (JJ other) (VBG living) (NNS beings))
            (PP (IN for)
              (NP (PRP$ your) (NN existence)))))))
    (. .)))

det(issue-3, the-2)
prep_on(dependent-10, issue-3)
prep_of(issue-3, dependency-5)
nsubj(dependent-10, you-7)
cop(dependent-10, are-8)
advmod(dependent-10, wholly-9)
root(ROOT-0, dependent-10)
amod(beings-14, other-12)
amod(beings-14, living-13)
prep_on(dependent-10, beings-14)
poss(existence-17, your-16)
prep_for(beings-14, existence-17)

(ROOT
  (S
    (PP (IN By)
      (NP (PRP$ your) (NN logic)))
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ OK)
          (S
            (VP (TO to)
              (VP (VB kill)
                (NP (PRP you))
                (SBAR (IN if)
                  (S
                    (NP
                      (NP (DT the) (NN issue))
                      (PP (IN of)
                        (NP (NNP dependency))))
                    (VP (VBD was)
                      (NP
                        (NP (DT all))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBD was)
                              (VP (VBN needed)
                                (S
                                  (VP (TO to)
                                    (VP (VB justify)
                                      (NP (PRP$ your) (NN death)))))))))))))))))))
    (. .)))

poss(logic-3, your-2)
prep_by(OK-7, logic-3)
nsubj(OK-7, it-4)
aux(OK-7, would-5)
cop(OK-7, be-6)
root(ROOT-0, OK-7)
aux(kill-9, to-8)
xcomp(OK-7, kill-9)
dobj(kill-9, you-10)
mark(all-17, if-11)
det(issue-13, the-12)
nsubj(all-17, issue-13)
prep_of(issue-13, dependency-15)
cop(all-17, was-16)
advcl(kill-9, all-17)
nsubjpass(needed-20, all-17)
auxpass(needed-20, was-19)
rcmod(all-17, needed-20)
aux(justify-22, to-21)
xcomp(needed-20, justify-22)
poss(death-24, your-23)
dobj(justify-22, death-24)

(ROOT
  (S (CC And)
    (ADVP (RB further) (RBR more))
    (NP (PRP we))
    (VP (MD could)
      (VP (VB extend)
        (NP (DT this))
        (PP (TO to)
          (NP
            (NP (DT the) (NN mentally))
            (CC and)
            (NP (RB physically) (NNS handicapped))))))
    (. .)))

cc(extend-6, And-1)
advmod(more-3, further-2)
advmod(extend-6, more-3)
nsubj(extend-6, we-4)
aux(extend-6, could-5)
root(ROOT-0, extend-6)
dobj(extend-6, this-7)
det(mentally-10, the-9)
prep_to(extend-6, mentally-10)
advmod(handicapped-13, physically-12)
prep_to(extend-6, handicapped-13)
conj_and(mentally-10, handicapped-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD could)
      (VP (VB apply)
        (PP (TO to)
          (NP
            (NP
              (NP (DT the) (JJ sick))
              (CC and)
              (NP (NN suffering)))
            (, ,)
            (NP
              (NP (NNS people))
              (PP (IN with)
                (NP (NN cancer))))
            (CC and)
            (NP
              (NP (PDT all) (DT those))
              (PP (IN in)
                (NP (NNS hospitals))))))))
    (. .)))

nsubj(apply-3, It-1)
aux(apply-3, could-2)
root(ROOT-0, apply-3)
det(sick-6, the-5)
prep_to(apply-3, sick-6)
prep_to(apply-3, suffering-8)
conj_and(sick-6, suffering-8)
prep_to(apply-3, people-10)
conj_and(sick-6, people-10)
prep_with(people-10, cancer-12)
predet(those-15, all-14)
prep_to(apply-3, those-15)
conj_and(sick-6, those-15)
prep_in(those-15, hospitals-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NN logic))
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP use)))))
    (VP (VBZ is)
      (ADVP (RB exactly))
      (NP
        (NP (DT the) (NN logic))
        (SBAR
          (S
            (NP (DT the) (NNP Third) (NNP Reich))
            (VP (VBD used)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP it))
                  (VP (VBD began)
                    (S
                      (VP (VBG doing)
                        (NP (DT these) (JJ very) (NNS things)))))))))))
      (: ;)
      (SBAR (RB long) (IN before)
        (S
          (NP (PRP it))
          (VP (VBD got)
            (S
              (VP (TO to)
                (VP (VB exterminating)
                  (NP
                    (QP (CD 6) (CD million))
                    (NNPS Jews)))))))))
    (. .)))

det(logic-2, The-1)
dobj(use-4, logic-2)
nsubj(logic-8, logic-2)
nsubj(use-4, you-3)
rcmod(logic-2, use-4)
cop(logic-8, is-5)
advmod(logic-8, exactly-6)
det(logic-8, the-7)
root(ROOT-0, logic-8)
det(Reich-11, the-9)
nn(Reich-11, Third-10)
nsubj(used-12, Reich-11)
rcmod(logic-8, used-12)
advmod(began-15, when-13)
nsubj(began-15, it-14)
advcl(used-12, began-15)
xcomp(began-15, doing-16)
det(things-19, these-17)
amod(things-19, very-18)
dobj(doing-16, things-19)
advmod(got-24, long-21)
dep(got-24, before-22)
nsubj(got-24, it-23)
xsubj(exterminating-26, it-23)
parataxis(logic-8, got-24)
aux(exterminating-26, to-25)
xcomp(got-24, exterminating-26)
number(million-28, 6-27)
num(Jews-29, million-28)
dobj(exterminating-26, Jews-29)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB agree)
          (PP (IN with)
            (NP (DT the) (NNP Third) (NNP Reich)))
          (SBAR (IN that)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP
                  (NP (JJ such) (NN thing))
                  (PP (IN as)
                    (NP
                      (NP (DT a) (NN life) (NN unworthy))
                      (PP (IN of)
                        (NP (NN life))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)))
    (. .)))

nsubj(agree-3, You-1)
aux(agree-3, may-2)
root(ROOT-0, agree-3)
det(Reich-7, the-5)
nn(Reich-7, Third-6)
prep_with(agree-3, Reich-7)
complm(is-10, that-8)
expl(is-10, there-9)
ccomp(agree-3, is-10)
amod(thing-12, such-11)
nsubj(is-10, thing-12)
det(unworthy-16, a-14)
nn(unworthy-16, life-15)
prep_as(thing-12, unworthy-16)
prep_of(unworthy-16, life-18)
nsubj(do-22, I-21)
conj_but(agree-3, do-22)
neg(do-22, n't-23)

