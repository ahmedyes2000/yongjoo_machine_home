(ROOT
  (SBARQ
    (WHPP (IN In)
      (WHNP (WDT what) (NN way)))
    (SQ (VBZ is)
      (VP (VBG underwriting)
        (NP
          (NP (DT the) (NNS views))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ pro) (NN life) (NN side))
              (ADJP (JJ fair)
                (PP (TO to)
                  (NP (DT the) (JJ pro) (NN choice) (NN side)))))))))
    (. ?)))

det(way-3, what-2)
prep_in(underwriting-5, way-3)
aux(underwriting-5, is-4)
root(ROOT-0, underwriting-5)
det(views-7, the-6)
dobj(underwriting-5, views-7)
det(side-12, the-9)
amod(side-12, pro-10)
nn(side-12, life-11)
prep_of(views-7, side-12)
amod(side-12, fair-13)
det(side-18, the-15)
amod(side-18, pro-16)
nn(side-18, choice-17)
prep_to(fair-13, side-18)

(ROOT
  (SINV
    (S
      (NP (DT This))
      (VP (VBZ is)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT the) (NNP MCP))
            (VP (VBD did))))))
    (, ,)
    (VP (VBD said)
      (SBAR
        (S
          (NP (DT the) (NN default) (NN position))
          (VP (MD should)
            (VP (VB be))))))
    (NP
      (NP (DT the) (JJ pro) (NN life))
      (, ,)
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ ignores)
            (NP
              (NP (DT the) (NN view)
                (CC and)
                (NNS rights))
              (PP (IN of)
                (NP (DT the) (JJ pro) (NN choice) (NN side))))))))
    (. .)))

nsubj(is-2, This-1)
ccomp(said-8, is-2)
dobj(did-6, what-3)
det(MCP-5, the-4)
nsubj(did-6, MCP-5)
ccomp(is-2, did-6)
root(ROOT-0, said-8)
det(position-11, the-9)
nn(position-11, default-10)
nsubj(be-13, position-11)
aux(be-13, should-12)
ccomp(said-8, be-13)
det(life-16, the-14)
amod(life-16, pro-15)
nsubj(said-8, life-16)
nsubj(ignores-19, life-16)
rcmod(life-16, ignores-19)
det(view-21, the-20)
dobj(ignores-19, view-21)
dobj(ignores-19, rights-23)
conj_and(view-21, rights-23)
det(side-28, the-25)
amod(side-28, pro-26)
nn(side-28, choice-27)
prep_of(view-21, side-28)

(ROOT
  (SINV
    (VP (VBG Removing)
      (NP (DT the) (NNP MCP)))
    (VP (VBZ allows))
    (NP
      (NP (NNS institutions))
      (PP (IN in)
        (NP
          (NP (JJ other) (NNS countries))
          (PP (IN on)
            (NP
              (NP (DT both) (NNS sides))
              (PP (IN of)
                (NP (DT the) (NN issue)
                  (S
                    (VP (TO to)
                      (VP (VB petition)
                        (PP (IN for)
                          (NP (NN aid)))))))))))))
    (. .)))

root(ROOT-0, Removing-1)
det(MCP-3, the-2)
dobj(Removing-1, MCP-3)
dep(Removing-1, allows-4)
nsubj(Removing-1, institutions-5)
amod(countries-8, other-7)
prep_in(institutions-5, countries-8)
det(sides-11, both-10)
prep_on(countries-8, sides-11)
det(issue-14, the-13)
prep_of(sides-11, issue-14)
aux(petition-16, to-15)
infmod(issue-14, petition-16)
prep_for(petition-16, aid-18)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADVP (NN nothing))
        (VP
          (ADVP (RB implicitly))
          (VBG stating)
          (SBAR (IN that)
            (S
              (NP (PDT all) (DT the) (NN aid))
              (VP (VBZ is)
                (VP (VBG going)
                  (PP (TO to)
                    (NP
                      (NP (NNS institutions))
                      (SBAR
                        (WHNP (WDT that))
                        (S
                          (ADVP (RB only))
                          (VP (VB promote)
                            (NP (NNS abortions))))))))))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB simply))
    (VP (VBZ allows)
      (S
        (NP (PRP them))
        (VP
          (NP
            (NP (DT the) (JJ same) (NN right))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (JJ pro) (NN life) (NNS entities))
                (VP (VBP have)))))
          (PRN (-LRB- -LRB-)
            (PP (RB exclusively) (IN under)
              (NP (DT the) (NNP MCP)))
            (-RRB- -RRB-)))))
    (. .)))

expl(stating-5, There-1)
aux(stating-5, is-2)
advmod(stating-5, nothing-3)
advmod(stating-5, implicitly-4)
ccomp(allows-21, stating-5)
complm(going-11, that-6)
predet(aid-9, all-7)
det(aid-9, the-8)
nsubj(going-11, aid-9)
aux(going-11, is-10)
ccomp(stating-5, going-11)
prep_to(going-11, institutions-13)
nsubj(promote-16, institutions-13)
advmod(promote-16, only-15)
rcmod(institutions-13, promote-16)
dobj(promote-16, abortions-17)
nsubj(allows-21, it-19)
advmod(allows-21, simply-20)
root(ROOT-0, allows-21)
nsubj(right-25, them-22)
det(right-25, the-23)
amod(right-25, same-24)
ccomp(allows-21, right-25)
dobj(have-30, right-25)
rel(have-30, which-26)
amod(entities-29, pro-27)
nn(entities-29, life-28)
nsubj(have-30, entities-29)
rcmod(right-25, have-30)
advmod(under-33, exclusively-32)
dep(right-25, under-33)
det(MCP-35, the-34)
pobj(under-33, MCP-35)

(ROOT
  (S
    (NP (DT the) (NNP MCP))
    (VP (VBD was)
      (ADJP (RB completely) (JJ undemocratic)
        (PP (IN by)
          (S
            (VP (VBG refusing)
              (NP (DT any) (NN chance)
                (S
                  (VP (TO to)
                    (VP (VB ask)
                      (PP (IN for)
                        (NP (NN aid)))
                      (PP (TO to)
                        (NP
                          (NP (DT those))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBP promote)
                                (NP (NN abortion))))))))))))))))
    (. .)))

det(MCP-2, the-1)
nsubj(undemocratic-5, MCP-2)
cop(undemocratic-5, was-3)
advmod(undemocratic-5, completely-4)
root(ROOT-0, undemocratic-5)
prepc_by(undemocratic-5, refusing-7)
det(chance-9, any-8)
dobj(refusing-7, chance-9)
aux(ask-11, to-10)
infmod(chance-9, ask-11)
prep_for(ask-11, aid-13)
prep_to(ask-11, those-15)
nsubj(promote-17, those-15)
rcmod(those-15, promote-17)
dobj(promote-17, abortion-18)

(ROOT
  (S
    (PP (IN Besides)
      (NP
        (NP (DT the) (JJ bad) (NN allegory))
        (PP (IN of)
          (NP
            (NP (NN abortion))
            (PP (TO to)
              (NP (NN slavery)))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP start)
      (PP (IN with)
        (NP (DT a) (JJ false) (NN premise)))
      (SBAR (IN that)
        (S
          (NP (NN everyone))
          (VP (VBZ agrees)
            (PP (IN on)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (JJ human) (NN life))
                  (VP (VBZ begins)))))))))
    (. .)))

det(allegory-4, the-2)
amod(allegory-4, bad-3)
prep_besides(start-11, allegory-4)
prep_of(allegory-4, abortion-6)
prep_to(abortion-6, slavery-8)
nsubj(start-11, you-10)
root(ROOT-0, start-11)
det(premise-15, a-13)
amod(premise-15, false-14)
prep_with(start-11, premise-15)
complm(agrees-18, that-16)
nsubj(agrees-18, everyone-17)
ccomp(start-11, agrees-18)
advmod(begins-23, when-20)
amod(life-22, human-21)
nsubj(begins-23, life-22)
prepc_on(agrees-18, begins-23)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT the) (NN case))
        (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (PP (IN as)
              (PP (IN with)
                (NP (NN slavery))))
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT no) (NN confusion))
                (PP (IN about)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (ADJP (JJ wrong))))))
                (PRN (-LRB- -LRB-)
                  (CC and)
                  (S
                    (NP (RB even) (WDT that))
                    (VP (VBZ is)
                      (NP
                        (NP (DT a) (JJ contemporary) (NN lack))
                        (PP (IN of)
                          (NP (NN confusion))))
                      (, ,)
                      (SBAR (IN because)
                        (S
                          (NP
                            (NP (DT the) (NNS states))
                            (PP (IN of)
                              (NP (NN succession))))
                          (VP
                            (ADVP (RB certainly))
                            (VBD held)
                            (NP
                              (NP (DT a) (JJ different) (NN point))
                              (PP (IN of)
                                (NP (NN view))))
                            (WHPP (IN during)
                              (WHNP (WDT that) (NN time))))))))
                  (-RRB- -RRB-))))))))
    (. .)))

nsubj(case-5, This-1)
cop(case-5, is-2)
neg(case-5, not-3)
det(case-5, the-4)
root(ROOT-0, case-5)
advmod(is-12, where-7)
prep(is-12, as-8)
pcomp(as-8, with-9)
prep_with(as-8, slavery-10)
expl(is-12, there-11)
rcmod(case-5, is-12)
det(confusion-14, no-13)
nsubj(is-12, confusion-14)
nsubj(wrong-18, what-16)
cop(wrong-18, is-17)
prepc_about(confusion-14, wrong-18)
dep(lack-26, and-20)
advmod(that-22, even-21)
nsubj(lack-26, that-22)
cop(lack-26, is-23)
det(lack-26, a-24)
amod(lack-26, contemporary-25)
dep(confusion-14, lack-26)
prep_of(lack-26, confusion-28)
mark(held-36, because-30)
det(states-32, the-31)
nsubj(held-36, states-32)
prep_of(states-32, succession-34)
advmod(held-36, certainly-35)
advcl(lack-26, held-36)
det(point-39, a-37)
amod(point-39, different-38)
dobj(held-36, point-39)
prep_of(point-39, view-41)
det(time-44, that-43)
prep_during(held-36, time-44)

(ROOT
  (S
    (PP (IN About)
      (NP (JJ individual) (NNS contributions)))
    (NP (PRP I))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP (DT the) (JJ same))
          (VP (MD can)
            (VP (VB be)
              (VP (VBN done)
                (PP (IN for)
                  (NP (DT the) (JJ pro) (NN life) (NN side)))
                (ADVP (RB as) (RB well))))))))
    (. .)))

amod(contributions-3, individual-2)
prep_about(agree-5, contributions-3)
nsubj(agree-5, I-4)
root(ROOT-0, agree-5)
complm(done-11, that-6)
det(same-8, the-7)
nsubjpass(done-11, same-8)
aux(done-11, can-9)
auxpass(done-11, be-10)
ccomp(agree-5, done-11)
det(side-16, the-13)
amod(side-16, pro-14)
nn(side-16, life-15)
prep_for(done-11, side-16)
advmod(well-18, as-17)
mwe(well-18, as-17)
advmod(done-11, well-18)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (PP (IN beside)
        (NP (DT the) (NN point))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
det(point-5, the-4)
prep_beside('s-2, point-5)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (JJ federal) (NN aid))
        (VP (VBZ is)
          (VP (VBG being)
            (VP (VBN given)
              (PRT (RP out)))))))
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT no) (NN reason))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (MD should)
            (VP (VB favor)
              (NP
                (NP (CD one) (NN side))
                (PP (IN over)
                  (NP (DT the) (JJ other))))))))
      (, ,)
      (SBAR (IN if)
        (S
          (S
            (VP (VBN done)
              (PP (IN in)
                (NP (NN consonance)))
              (PP (IN with)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP$ our) (NN country))
                    (VP (VBZ feels)
                      (PP (IN about)
                        (NP
                          (NP (DT this) (NN question))
                          (PP (IN than)
                            (NP (DT the) (NN aid) (NN money)))))))))))
          (VP (MD will)
            (VP (VB be)
              (VP (VBN split)
                (S
                  (ADJP (RB fifty) (JJ fifty)))))))))
    (. .)))

mark(given-6, If-1)
amod(aid-3, federal-2)
nsubjpass(given-6, aid-3)
aux(given-6, is-4)
auxpass(given-6, being-5)
advcl(is-9, given-6)
prt(given-6, out-7)
expl(is-9, there-8)
root(ROOT-0, is-9)
det(reason-11, no-10)
nsubj(is-9, reason-11)
complm(favor-15, that-12)
nsubj(favor-15, it-13)
aux(favor-15, should-14)
ccomp(is-9, favor-15)
num(side-17, one-16)
dobj(favor-15, side-17)
det(other-20, the-19)
prep_over(side-17, other-20)
mark(split-40, if-22)
csubjpass(split-40, done-23)
prep_in(done-23, consonance-25)
advmod(feels-30, how-27)
poss(country-29, our-28)
nsubj(feels-30, country-29)
prepc_with(done-23, feels-30)
det(question-33, this-32)
prep_about(feels-30, question-33)
det(money-37, the-35)
nn(money-37, aid-36)
prep_than(question-33, money-37)
aux(split-40, will-38)
auxpass(split-40, be-39)
advcl(is-9, split-40)
advmod(fifty-42, fifty-41)
acomp(split-40, fifty-42)

