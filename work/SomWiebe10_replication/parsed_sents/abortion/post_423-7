(ROOT
  (S
    (NP (PRP I))
    (VP
      (ADVP (RB never))
      (VBD said)
      (SBAR (IN that)
        (S
          (NP (NNS existents))
          (VP (VBP do) (RB n't)
            (VP (VB possess)
              (NP (NN identity))
              (PRN (-LRB- -LRB-)
                (S
                  (ADVP (RB maybe))
                  (NP (PRP I))
                  (VP (MD should)
                    (VP (VB stick)
                      (NP (NNS words))
                      (PP (IN in)
                        (NP (PRP$ your) (NN mouth))))))
                (. ?) (-RRB- -RRB-)))))))))

nsubj(said-3, I-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
complm(possess-8, that-4)
nsubj(possess-8, existents-5)
aux(possess-8, do-6)
neg(possess-8, n't-7)
ccomp(said-3, possess-8)
dobj(possess-8, identity-9)
advmod(stick-14, maybe-11)
nsubj(stick-14, I-12)
aux(stick-14, should-13)
parataxis(possess-8, stick-14)
dobj(stick-14, words-15)
poss(mouth-18, your-17)
prep_in(stick-14, mouth-18)

(ROOT
  (S (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB simply))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP do) (RB n't)
              (VP (VB identify)
                (NP (PRP themselves))))))))
    (: ;)
    (S
      (NP (RB hence) (DT the) (NN need))
      (PP (IN for)
        (NP (NNS proofs))))
    (. .)))

nsubj(said-4, I-2)
advmod(said-4, simply-3)
root(ROOT-0, said-4)
complm(identify-9, that-5)
nsubj(identify-9, they-6)
aux(identify-9, do-7)
neg(identify-9, n't-8)
ccomp(said-4, identify-9)
dobj(identify-9, themselves-10)
advmod(need-14, hence-12)
det(need-14, the-13)
parataxis(said-4, need-14)
dep(need-14, for-15)
pobj(for-15, proofs-16)

