(ROOT
  (S
    (NP (DT A) (JJ human) (NN being))
    (VP (VBZ has)
      (NP
        (NP (DT no) (JJ moral) (NN obligation))
        (PP (TO to)
          (NP (DT another) (NN person)
            (S
              (VP (TO to)
                (VP (VB allow)
                  (NP (DT that) (NN person))
                  (NP
                    (NP (DT the) (NN use))
                    (PP (IN of)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (VP (VBZ is)
                            (NP (PRP theirs))
                            (, ,)
                            (SBAR (RB even) (IN if)
                              (S
                                (NP (DT that) (JJ second) (NN person))
                                (VP (VBZ needs)
                                  (S
                                    (NP (PRP it))
                                    (VP (TO to)
                                      (VP (VB survive)))))))))))))))))))
    (. .)))

det(being-3, A-1)
amod(being-3, human-2)
nsubj(has-4, being-3)
root(ROOT-0, has-4)
det(obligation-7, no-5)
amod(obligation-7, moral-6)
dobj(has-4, obligation-7)
det(person-10, another-9)
prep_to(obligation-7, person-10)
aux(allow-12, to-11)
infmod(person-10, allow-12)
det(person-14, that-13)
iobj(allow-12, person-14)
det(use-16, the-15)
dobj(allow-12, use-16)
nsubj(theirs-20, what-18)
cop(theirs-20, is-19)
prepc_of(use-16, theirs-20)
advmod(needs-27, even-22)
dep(needs-27, if-23)
det(person-26, that-24)
amod(person-26, second-25)
nsubj(needs-27, person-26)
dep(theirs-20, needs-27)
nsubj(survive-30, it-28)
aux(survive-30, to-29)
xcomp(needs-27, survive-30)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP disagree))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 've)
      (VP (VBN got)
        (NP
          (NP (DT a)
            (ADJP (RB really) (JJ excellent))
            (NN proposition))
          (PP (IN for)
            (NP (PRP you))))))
    (. .)))

mark(disagree-3, If-1)
nsubj(disagree-3, you-2)
advcl(got-7, disagree-3)
nsubj(got-7, I-5)
aux(got-7, 've-6)
root(ROOT-0, got-7)
det(proposition-11, a-8)
advmod(excellent-10, really-9)
amod(proposition-11, excellent-10)
dobj(got-7, proposition-11)
prep_for(proposition-11, you-13)

