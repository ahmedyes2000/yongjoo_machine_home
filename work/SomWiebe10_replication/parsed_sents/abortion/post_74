(ROOT
  (S
    (NP (NNP Abortion))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (JJ just) (NN response))
        (PP (TO to)
          (NP
            (NP (JJ social) (NNS problems))
            (VP (VBG facing)
              (NP
                (NP (DT the) (NN unborn))
                (SBAR
                  (S
                    (SBAR (IN If)
                      (S
                        (NP (DT a) (NN child))
                        (VP (VBZ is)
                          (ADJP (JJ likely)
                            (S
                              (VP (TO to)
                                (VP (VB face)
                                  (NP (JJ social) (NNS difficulties)))))))))
                    (, ,)
                    (NP (DT this))
                    (VP (VBZ is)
                      (ADVP (RB absolutely))
                      (NP (DT no) (NN reason)
                        (S
                          (VP (TO to)
                            (VP (VB seek)
                              (NP (DT an) (NN abortion)))))))))))))))
    (. .)))

nsubj(response-6, Abortion-1)
cop(response-6, is-2)
neg(response-6, not-3)
det(response-6, a-4)
amod(response-6, just-5)
root(ROOT-0, response-6)
amod(problems-9, social-8)
prep_to(response-6, problems-9)
partmod(problems-9, facing-10)
det(unborn-12, the-11)
dobj(facing-10, unborn-12)
mark(likely-17, If-13)
det(child-15, a-14)
nsubj(likely-17, child-15)
cop(likely-17, is-16)
advcl(reason-27, likely-17)
aux(face-19, to-18)
xcomp(likely-17, face-19)
amod(difficulties-21, social-20)
dobj(face-19, difficulties-21)
nsubj(reason-27, this-23)
cop(reason-27, is-24)
advmod(reason-27, absolutely-25)
det(reason-27, no-26)
rcmod(unborn-12, reason-27)
aux(seek-29, to-28)
infmod(reason-27, seek-29)
det(abortion-31, an-30)
dobj(seek-29, abortion-31)

(ROOT
  (S
    (NP
      (NP (DT The) (NN notion))
      (SBAR (IN that)
        (S
          (NP (DT a) (NN child))
          (VP
            (VP (MD will)
              (VP (VB be)
                (ADJP
                  (ADJP (JJ unhappy) (JJ due))
                  (PP (TO to)
                    (NP (DT these) (NNS conditions))))))
            (CC or)
            (VP (MD will)
              (VP (VB have)
                (NP
                  (NP (DT no) (NNS chances))
                  (PP (IN of)
                    (NP (NN success))))))))))
    (VP (VBZ is)
      (ADJP (JJ ludicrous)))
    (. .)))

det(notion-2, The-1)
nsubj(ludicrous-21, notion-2)
complm(notion-2, that-3)
det(child-5, a-4)
nsubj(notion-2, child-5)
nsubj(have-15, child-5)
aux(notion-2, will-6)
cop(notion-2, be-7)
amod(notion-2, unhappy-8)
det(conditions-12, these-11)
prep_due_to(notion-2, conditions-12)
aux(have-15, will-14)
conj_or(notion-2, have-15)
nsubj(ludicrous-21, have-15)
det(chances-17, no-16)
dobj(have-15, chances-17)
prep_of(chances-17, success-19)
cop(ludicrous-21, is-20)
root(ROOT-0, ludicrous-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ easy)
        (S
          (VP (TO to)
            (VP (VB find)
              (NP
                (NP (NNS examples))
                (PP (IN of)
                  (NP (JJ poor)
                    (CC and)
                    (JJ neglected) (NNS children)))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP have)
                      (VP (VBN grown)
                        (PRT (RP up))
                        (S
                          (VP (TO to)
                            (VP (VB become)
                              (NP
                                (ADJP
                                  (ADJP (JJ thriving))
                                  (, ,)
                                  (ADJP (JJ successful))
                                  (, ,)
                                  (CC and)
                                  (ADJP (JJ happy)))
                                (NNS adults)))))))))))))))
    (. .)))

nsubj(easy-3, It-1)
cop(easy-3, is-2)
root(ROOT-0, easy-3)
aux(find-5, to-4)
xcomp(easy-3, find-5)
dobj(find-5, examples-6)
nsubj(grown-14, examples-6)
amod(children-11, poor-8)
conj_and(poor-8, neglected-10)
amod(children-11, neglected-10)
prep_of(examples-6, children-11)
aux(grown-14, have-13)
rcmod(examples-6, grown-14)
prt(grown-14, up-15)
aux(adults-24, to-16)
cop(adults-24, become-17)
amod(adults-24, thriving-18)
conj_and(thriving-18, successful-20)
amod(adults-24, successful-20)
conj_and(thriving-18, happy-23)
amod(adults-24, happy-23)
xcomp(grown-14, adults-24)

(ROOT
  (S
    (PP (IN In)
      (NP (DT any) (NN case)))
    (, ,)
    (S
      (SBAR (IN if)
        (S
          (NP (JJ social) (NNS problems))
          (VP (VBP are)
            (NP (DT the) (NN concern)))))
      (, ,)
      (NP (DT these) (NNS problems))
      (VP (MD should)
        (VP (VB be)
          (VP (VBN addressed)))))
    (: ;)
    (S
      (NP (NN abortion))
      (VP (VBZ is)
        (NP (DT a) (JJ terrible) (NN band-aid))))
    (. .)))

det(case-3, any-2)
prep_in(addressed-16, case-3)
mark(concern-10, if-5)
amod(problems-7, social-6)
nsubj(concern-10, problems-7)
cop(concern-10, are-8)
det(concern-10, the-9)
advcl(addressed-16, concern-10)
det(problems-13, these-12)
nsubjpass(addressed-16, problems-13)
aux(addressed-16, should-14)
auxpass(addressed-16, be-15)
root(ROOT-0, addressed-16)
nsubj(band-aid-22, abortion-18)
cop(band-aid-22, is-19)
det(band-aid-22, a-20)
amod(band-aid-22, terrible-21)
parataxis(addressed-16, band-aid-22)

(ROOT
  (S
    (S
      (VP (VBG Saying)
        (SBAR (IN that)
          (S
            (NP (DT a) (NN child))
            (VP (MD would)
              (VP (VB encounter)
                (NP (JJ social) (NNS problems))
                (PP (IN during)
                  (NP
                    (ADJP (PRP$ his)
                      (CC or)
                      (PRP$ her))
                    (NN development)))))))))
    (VP (VBZ is) (RB not)
      (PP
        (NP (DT the) (JJ same))
        (IN as)
        (S
          (VP (VBG saying)
            (SBAR (IN that)
              (S
                (NP (PRP he)
                  (CC or)
                  (PRP she))
                (VP (VBZ is)
                  (ADJP
                    (ADVP (RBR better) (RB off))
                    (JJ dead)))))))))
    (. .)))

csubj(is-14, Saying-1)
complm(encounter-6, that-2)
det(child-4, a-3)
nsubj(encounter-6, child-4)
aux(encounter-6, would-5)
ccomp(Saying-1, encounter-6)
amod(problems-8, social-7)
dobj(encounter-6, problems-8)
amod(development-13, his-10)
conj_or(his-10, her-12)
poss(his-10, her-12)
amod(development-13, her-12)
prep_during(encounter-6, development-13)
root(ROOT-0, is-14)
neg(is-14, not-15)
det(same-17, the-16)
npadvmod(is-14, same-17)
prepc_as(is-14, saying-19)
complm(dead-27, that-20)
nsubj(dead-27, he-21)
conj_or(he-21, she-23)
nsubj(dead-27, she-23)
cop(dead-27, is-24)
advmod(off-26, better-25)
advmod(dead-27, off-26)
ccomp(saying-19, dead-27)

