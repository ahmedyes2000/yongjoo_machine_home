(ROOT
  (S
    (NP (NNP Abortion))
    (VP (MD should)
      (ADVP (RB definetly))
      (VP (VB be)
        (VP (VBN banned))))
    (. !)))

nsubjpass(banned-5, Abortion-1)
aux(banned-5, should-2)
advmod(banned-5, definetly-3)
auxpass(banned-5, be-4)
root(ROOT-0, banned-5)

(ROOT
  (S
    (S
      (NP (PRP$ Their))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN lot))
          (PP (IN of)
            (NP (NNS things)
              (S
                (VP (TO to)
                  (VP (VB prevent)
                    (NP
                      (NP (NNS pregnancies))
                      (PP (JJ such) (IN as)
                        (NP
                          (NP (NNS condoms))
                          (, ,)
                          (NP (NN birth) (NN control)))))))))))))
    (CC and)
    (S
      (S
        (VP (VBG getting)
          (NP (PRP$ your) (NNS tubes))))
      (VP (VBD tied)))
    (. !)))

nsubj(lot-4, Their-1)
cop(lot-4, is-2)
det(lot-4, a-3)
root(ROOT-0, lot-4)
prep_of(lot-4, things-6)
aux(prevent-8, to-7)
infmod(things-6, prevent-8)
dobj(prevent-8, pregnancies-9)
prep_such_as(pregnancies-9, condoms-12)
nn(control-15, birth-14)
appos(condoms-12, control-15)
csubj(tied-20, getting-17)
poss(tubes-19, your-18)
dobj(getting-17, tubes-19)
conj_and(lot-4, tied-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP know)
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP are) (RB not)
                (ADJP
                  (ADJP (JJ old) (NN enough))
                  (CC or)
                  (ADJP (RB financially) (JJ stable)
                    (S
                      (VP (TO to)
                        (VP (VB take)
                          (NP
                            (NP (NN care))
                            (PP (IN of)
                              (NP (DT a) (NN child)))))))))))))))
    (ADVP (RB then))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP
          (NP (NN sex))
          (, ,) (RB just)
          (NP (NN use) (NN protection)))))
    (. .)))

mark(know-3, If-1)
nsubj(know-3, you-2)
advcl(have-21, know-3)
csubj(have-21, know-3)
nsubj(enough-8, you-4)
nsubj(stable-11, you-4)
cop(enough-8, are-5)
neg(enough-8, not-6)
dep(enough-8, old-7)
ccomp(know-3, enough-8)
advmod(stable-11, financially-10)
ccomp(know-3, stable-11)
conj_or(enough-8, stable-11)
aux(take-13, to-12)
xcomp(stable-11, take-13)
dobj(take-13, care-14)
det(child-17, a-16)
prep_of(care-14, child-17)
advmod(have-21, then-18)
aux(have-21, do-19)
neg(have-21, n't-20)
root(ROOT-0, have-21)
dobj(have-21, sex-22)
advmod(sex-22, just-24)
nn(protection-26, use-25)
dep(sex-22, protection-26)

(ROOT
  (S
    (VP (VB Do) (RB n't)
      (ADVP (RB just))
      (VP (VB look)
        (PP (IN for)
          (NP
            (NP (DT the) (JJ easy) (NN way))
            (PP (RB out) (RB because) (IN of)
              (NP (PRP$ your) (NN mistake)))))))
    (. !)))

aux(look-4, Do-1)
neg(look-4, n't-2)
advmod(look-4, just-3)
root(ROOT-0, look-4)
det(way-8, the-6)
amod(way-8, easy-7)
prep_for(look-4, way-8)
advmod(way-8, out-9)
poss(mistake-13, your-12)
prep_because_of(way-8, mistake-13)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP do) (RB n't)
      (VP
        (VP (VB get)
          (SBAR
            (WHADVP (WRB how))
            (S
              (SBAR (IN if)
                (S
                  (NP (PRP you))
                  (VP (VBP kill)
                    (NP (NN somebody))
                    (ADVP (RB then)))))
              (NP (PRP you))
              (VP (VBP get)
                (VP (VBN charged)
                  (PP (IN for)
                    (NP (NN murder))))))))
        (, ,)
        (CC and)
        (VP (VB spend)
          (NP
            (NP (DT the) (NN rest))
            (PP (IN of)
              (NP (PRP$ your) (NN life))))
          (PP (IN in)
            (NP (NN prison))))))
    (: ...)))

nsubj(get-4, i-1)
nsubj(spend-18, i-1)
aux(get-4, do-2)
neg(get-4, n't-3)
root(ROOT-0, get-4)
advmod(charged-13, how-5)
mark(kill-8, if-6)
nsubj(kill-8, you-7)
advcl(charged-13, kill-8)
dobj(kill-8, somebody-9)
advmod(kill-8, then-10)
nsubjpass(charged-13, you-11)
auxpass(charged-13, get-12)
ccomp(get-4, charged-13)
prep_for(charged-13, murder-15)
conj_and(get-4, spend-18)
det(rest-20, the-19)
dobj(spend-18, rest-20)
poss(life-23, your-22)
prep_of(rest-20, life-23)
prep_in(spend-18, prison-25)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S
    (SBAR
      (WHADVP (WRB when)
        (PP (IN on)
          (NP (DT the) (JJ other) (NN hand))))
      (S
        (VP (VBG having)
          (NP (DT an) (NN abortion)))))
    (VP (VBZ is)
      (VP (VBG murdering)
        (NP (DT a) (NN baby))))
    (. .)))

advmod(having-6, when-1)
det(hand-5, the-3)
amod(hand-5, other-4)
prep_on(when-1, hand-5)
advcl(murdering-10, having-6)
csubj(murdering-10, having-6)
det(abortion-8, an-7)
dobj(having-6, abortion-8)
aux(murdering-10, is-9)
root(ROOT-0, murdering-10)
det(baby-12, a-11)
dobj(murdering-10, baby-12)

(ROOT
  (S
    (S
      (PP (TO To)
        (NP (PRP me)))
      (NP (DT that) (NN doesnt))
      (VP (VBP make)
        (NP (DT any) (NN sense))))
    (: ...)
    (CC and)
    (S
      (NP (DT some) (NNS people))
      (VP (VBP say)
        (PRN (CC but)
          (SBAR
            (WHNP (WP what))
            (S
              (SBAR (IN if)
                (S
                  (NP (DT the) (NN person))
                  (VP (VBD got))))
              (VP (VBD raped)
                (CC and)
                (VBD ended)
                (PRT (RP up))
                (NP (JJ pregnant))))))))
    (: ...)))

prep_to(make-5, me-2)
det(doesnt-4, that-3)
nsubj(make-5, doesnt-4)
root(ROOT-0, make-5)
det(sense-7, any-6)
dobj(make-5, sense-7)
det(people-11, some-10)
nsubj(say-12, people-11)
conj_and(make-5, say-12)
dep(raped-19, but-13)
dep(raped-19, what-14)
mark(got-18, if-15)
det(person-17, the-16)
nsubj(got-18, person-17)
csubj(raped-19, got-18)
csubj(ended-21, got-18)
parataxis(say-12, raped-19)
parataxis(say-12, ended-21)
conj_and(raped-19, ended-21)
prt(raped-19, up-22)
dobj(raped-19, pregnant-23)

(ROOT
  (NP (FW .) (. .)))


(ROOT
  (S
    (S
      (ADVP (RB well))
      (NP (PRP you))
      (VP (MD can)
        (VP (VB give)
          (NP (PRP it))
          (PRT (RP up))
          (PP (IN for)
            (NP (NN adoption))))))
    (, ,)
    (NP (FW i))
    (VP (VBP feel)
      (SBAR (IN that)
        (S
          (NP
            (NP (NNS women))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP have)
                  (NP (NNS abortions))))))
          (VP
            (VP (VBP are)
              (ADJP (JJ selfish)))
            (CC and)
            (VP (VBP are)
              (ADVP (RB only))
              (VP (VBG thinking)
                (PP (IN about)
                  (NP (PRP themselves)))))))))
    (. .)))

advmod(give-4, well-1)
nsubj(give-4, you-2)
aux(give-4, can-3)
ccomp(feel-11, give-4)
dobj(give-4, it-5)
prt(give-4, up-6)
prep_for(give-4, adoption-8)
nsubj(feel-11, i-10)
root(ROOT-0, feel-11)
complm(selfish-18, that-12)
nsubj(have-15, women-13)
nsubj(selfish-18, women-13)
nsubj(thinking-22, women-13)
rcmod(women-13, have-15)
dobj(have-15, abortions-16)
cop(selfish-18, are-17)
ccomp(feel-11, selfish-18)
aux(thinking-22, are-20)
advmod(thinking-22, only-21)
ccomp(feel-11, thinking-22)
conj_and(selfish-18, thinking-22)
prep_about(thinking-22, themselves-24)

(ROOT
  (S
    (NP (PRP They))
    (ADVP (RB really))
    (VP (VBP do) (RB n't)
      (VP (VB care)
        (SBAR
          (SBAR
            (WHPP (IN about)
              (WHNP (WP what)))
            (S
              (NP (DT the) (NN baby))
              (VP (VBZ goes)
                (PRT (RP through)))))
          (CC and)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (ADJP (RB completely) (JJ wrong))))))))
    (. !)))

nsubj(care-5, They-1)
advmod(care-5, really-2)
aux(care-5, do-3)
neg(care-5, n't-4)
root(ROOT-0, care-5)
dep(goes-10, about-6)
pobj(about-6, what-7)
det(baby-9, the-8)
nsubj(goes-10, baby-9)
dep(care-5, goes-10)
prt(goes-10, through-11)
nsubj(wrong-16, that-13)
cop(wrong-16, is-14)
advmod(wrong-16, completely-15)
dep(care-5, wrong-16)
conj_and(goes-10, wrong-16)

