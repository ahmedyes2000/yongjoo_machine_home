(ROOT
  (S
    (ADVP (RB Biologically))
    (, ,)
    (NP (DT a) (JJ new) (JJ distinct) (JJ human) (NN organism))
    (VP (VBZ is)
      (VP (VBN created)
        (PP (IN at)
          (NP (NN conception)))))
    (. .)))

advmod(created-9, Biologically-1)
det(organism-7, a-3)
amod(organism-7, new-4)
amod(organism-7, distinct-5)
amod(organism-7, human-6)
nsubjpass(created-9, organism-7)
auxpass(created-9, is-8)
root(ROOT-0, created-9)
prep_at(created-9, conception-11)

(ROOT
  (S
    (NP (NNP Jon))
    (VP (VBZ is)
      (ADJP (JJ right))
      (SBAR (IN that)
        (S
          (NP (DT the) (NN issue))
          (VP (VBZ is) (RB not)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NN life))
                (VP (VBZ begins))))
            (, ,)
            (SBAR (IN because)
              (S
                (NP (PRP we))
                (VP (VBP know)
                  (NP (DT that)))))))))
    (. .)))

nsubj(right-3, Jon-1)
cop(right-3, is-2)
root(ROOT-0, right-3)
complm(is-7, that-4)
det(issue-6, the-5)
nsubj(is-7, issue-6)
ccomp(right-3, is-7)
neg(is-7, not-8)
advmod(begins-11, when-9)
nsubj(begins-11, life-10)
advcl(is-7, begins-11)
mark(know-15, because-13)
nsubj(know-15, we-14)
advcl(is-7, know-15)
dobj(know-15, that-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP hear)
      (NP
        (NP (DT a) (NN rustle))
        (PP (IN in)
          (NP (DT the)
            (NX (NNS bushes))))))
    (. .)))

nsubj(hear-2, You-1)
root(ROOT-0, hear-2)
det(rustle-4, a-3)
dobj(hear-2, rustle-4)
det(bushes-7, the-6)
prep_in(rustle-4, bushes-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD could)
      (VP (VB be)
        (NP (DT a) (NNS deer))))
    (. .)))

nsubj(deer-5, It-1)
aux(deer-5, could-2)
cop(deer-5, be-3)
det(deer-5, a-4)
root(ROOT-0, deer-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD could)
      (VP (VB be)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (PRP$ your) (NNS friends))))))
    (. .)))

nsubj(one-4, It-1)
aux(one-4, could-2)
cop(one-4, be-3)
root(ROOT-0, one-4)
poss(friends-7, your-6)
prep_of(one-4, friends-7)

(ROOT
  (SQ (VBP Do)
    (NP (PRP you))
    (VP (VB shot))
    (. ?)))

aux(shot-3, Do-1)
nsubj(shot-3, you-2)
root(ROOT-0, shot-3)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (S
      (FRAG
        (WHADVP (WRB when))
        (ADJP (JJ uncertain)))
      (NP (PRP you))
      (VP (VBP err)
        (PP (IN on)
          (NP
            (NP (DT the) (NN side))
            (PP (IN of)
              (NP (NN life)))))))
    (. .)))

amod(words-3, other-2)
prep_in(err-8, words-3)
dep(uncertain-6, when-5)
dep(err-8, uncertain-6)
nsubj(err-8, you-7)
root(ROOT-0, err-8)
det(side-11, the-10)
prep_on(err-8, side-11)
prep_of(side-11, life-13)

(ROOT
  (FRAG
    (ADVP (RB Always))
    (. .)))

root(ROOT-0, Always-1)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT that) (NN life))
          (VP (VBZ has)
            (NP (NN value))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
advmod(has-6, when-3)
det(life-5, that-4)
nsubj(has-6, life-5)
advcl(is-2, has-6)
dobj(has-6, value-7)

(ROOT
  (S
    (NP
      (NP (DT The) (NN value))
      (PP (IN of)
        (NP (DT a) (JJ new) (JJ human) (NN life))))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP (PRP we))
          (VP (VBP disagree)))))
    (. .)))

det(value-2, The-1)
nsubj(is-8, value-2)
det(life-7, a-4)
amod(life-7, new-5)
amod(life-7, human-6)
prep_of(value-2, life-7)
root(ROOT-0, is-8)
advmod(disagree-11, where-9)
nsubj(disagree-11, we-10)
advcl(is-8, disagree-11)

(ROOT
  (FRAG
    (SBAR (IN Whether)
      (S
        (NP (DT this) (JJ new) (NN life))
        (VP (VBZ deserves)
          (NP (NN protection))
          (PP (IN under)
            (NP (DT the) (NN law))))))
    (. .)))

complm(deserves-5, Whether-1)
det(life-4, this-2)
amod(life-4, new-3)
nsubj(deserves-5, life-4)
root(ROOT-0, deserves-5)
dobj(deserves-5, protection-6)
det(law-9, the-8)
prep_under(deserves-5, law-9)

(ROOT
  (S
    (SBAR (IN Whether)
      (S
        (NP
          (QP (CC or)
            (RB not)))
        (VP (VBZ is))))
    (VP (VBZ has)
      (NP
        (NP (SYM a))
        ('' '')
        (VP (VBN soul))))
    (. .) ('' '')))

complm(is-4, Whether-1)
cc(not-3, or-2)
nsubj(is-4, not-3)
csubj(has-5, is-4)
root(ROOT-0, has-5)
dobj(has-5, a-6)
partmod(a-6, soul-8)

(ROOT
  (SBARQ (RB So)
    (SBAR (IN if)
      (S
        (NP (EX there))
        (VP
          (VP (VBZ is) (RB not)
            (NP
              (NP (DT a) (NN consensus))
              (PP (IN about)
                (NP (NN value)))))
          (, ,)
          (CC and)
          (ADVP (RB probably))
          (VP
            (ADVP (RB never))
            (MD will)
            (VP (VB be))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBZ is)
      (NP
        (NP (DT that))
        (SBAR
          (S
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP want)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (ADJP (JJ able)
                            (S
                              (VP (TO to)
                                (VP (VB dispose)
                                  (PP (IN of)
                                    (NP (NNS embryos)
                                      (CC and)
                                      (NNS fetuses)))
                                  (`` ``)
                                  (PP (IN on)
                                    (NP (NN demand)))
                                  ('' ''))))))))))))
            (ADVP (RB automatically))
            (VP (VBP win))))))
    (. ?)))

advmod(is-18, So-1)
mark(consensus-7, if-2)
expl(consensus-7, there-3)
cop(consensus-7, is-4)
neg(consensus-7, not-5)
det(consensus-7, a-6)
advcl(is-18, consensus-7)
prep_about(consensus-7, value-9)
advmod(consensus-7, probably-12)
conj_and(consensus-7, probably-12)
advcl(is-18, probably-12)
neg(be-15, never-13)
aux(be-15, will-14)
conj_and(consensus-7, be-15)
advcl(is-18, be-15)
advmod(is-18, why-17)
root(ROOT-0, is-18)
nsubj(is-18, that-19)
dobj(win-37, that-19)
nsubj(want-22, those-20)
nsubj(win-37, those-20)
rcmod(those-20, want-22)
aux(able-25, to-23)
cop(able-25, be-24)
xcomp(want-22, able-25)
aux(dispose-27, to-26)
xcomp(able-25, dispose-27)
prep_of(dispose-27, embryos-29)
prep_of(dispose-27, fetuses-31)
conj_and(embryos-29, fetuses-31)
prep_on(dispose-27, demand-34)
advmod(win-37, automatically-36)
rcmod(that-19, win-37)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN burden))
        (PP (IN of)
          (NP
            (NP (NN proof))
            (PP (IN on)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP think)
                      (SBAR
                        (S
                          (NP (DT all) (NN life))
                          (VP (VBZ has)
                            (NP (NN value))))))))))))))
    (. ?)))

advmod(is-2, Why-1)
root(ROOT-0, is-2)
det(burden-4, the-3)
nsubj(is-2, burden-4)
prep_of(burden-4, proof-6)
prep_on(proof-6, those-8)
nsubj(think-10, those-8)
rcmod(those-8, think-10)
det(life-12, all-11)
nsubj(has-13, life-12)
ccomp(think-10, has-13)
dobj(has-13, value-14)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBZ wants)
          (S
            (VP (TO to)
              (VP
                (VP (VB take)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (ADVP (RB biologically))
                        (NP (DT a) (JJ human) (NN organism))))))
                (CC and)
                (VP (VB end)
                  (NP (PRP$ its) (NN existence)))))))))
    (, ,)
    (SQ (VBZ is)
      (NP
        (NP (PRP it))
        (ADVP (RB not)
          (PP (IN on)
            (NP (PRP them))))
        (S
          (VP (TO to)
            (VP (VB prove)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (NN life) (NNP DOES) (NNP NOT))
                    (PP (IN for)
                      (NP (JJ certain))))
                  (VP (VBP have)
                    (NP (NN value))))))))))
    (. ?)))

mark(wants-3, If-1)
nsubj(wants-3, someone-2)
xsubj(take-5, someone-2)
advcl(is-17, wants-3)
aux(take-5, to-4)
xcomp(wants-3, take-5)
nsubj(organism-11, what-6)
cop(organism-11, is-7)
advmod(organism-11, biologically-8)
det(organism-11, a-9)
amod(organism-11, human-10)
ccomp(take-5, organism-11)
xcomp(wants-3, end-13)
conj_and(take-5, end-13)
poss(existence-15, its-14)
dobj(end-13, existence-15)
root(ROOT-0, is-17)
nsubj(is-17, it-18)
advmod(it-18, not-19)
prep_on(not-19, them-21)
aux(prove-23, to-22)
infmod(it-18, prove-23)
complm(have-30, that-24)
nn(NOT-27, life-25)
nn(NOT-27, DOES-26)
nsubj(have-30, NOT-27)
prep_for(NOT-27, certain-29)
ccomp(prove-23, have-30)
dobj(have-30, value-31)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (MD can) (RB not)
          (VP (VB know)
            (SBAR (IN for)
              (S
                (NP (JJ certain))
                (VP (MD should))))))))
    (NP (PRP we))
    (ADVP (RB not) (RB always))
    (VP (VBP err)
      (PP (IN on)
        (NP
          (NP (DT the) (NN side))
          (PP (IN of)
            (NP
              (NP (NN life))
              (, ,) (RB not)
              (NP (NN death)))))))
    (. ?)))

mark(know-5, If-1)
nsubj(know-5, we-2)
aux(know-5, can-3)
neg(know-5, not-4)
advcl(err-12, know-5)
mark(should-8, for-6)
nsubj(should-8, certain-7)
advcl(know-5, should-8)
nsubj(err-12, we-9)
dep(always-11, not-10)
advmod(err-12, always-11)
root(ROOT-0, err-12)
det(side-15, the-14)
prep_on(err-12, side-15)
prep_of(side-15, life-17)
neg(life-17, not-19)
dep(life-17, death-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (VP (VBN reminded)
        (PP (IN of)
          (NP
            (NP (DT an) (NN analogy))
            (PP (IN from)
              (NP (PRP$ my) (NN philosophy) (NN professor)))))
        (PP (IN in)
          (NP (NN college)))))
    (. .)))

nsubjpass(reminded-3, I-1)
auxpass(reminded-3, am-2)
root(ROOT-0, reminded-3)
det(analogy-6, an-5)
prep_of(reminded-3, analogy-6)
poss(professor-10, my-8)
nn(professor-10, philosophy-9)
prep_from(analogy-6, professor-10)
prep_in(reminded-3, college-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (VP (VBG hunting)
        (PP (IN in)
          (NP
            (NP (DT the) (NNS woods))
            (PP (IN with)
              (NP (PRP$ your) (NNS friends)))))))
    (. .)))

nsubj(hunting-3, You-1)
aux(hunting-3, are-2)
root(ROOT-0, hunting-3)
det(woods-6, the-5)
prep_in(hunting-3, woods-6)
poss(friends-9, your-8)
prep_with(woods-6, friends-9)

