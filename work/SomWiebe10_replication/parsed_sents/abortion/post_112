(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADJP (JJ wrong))
      (S
        (VP (TO to)
          (VP (VB consider)
            (S
              (NP (NN abortion))
              (NP
                (NP (DT a) (NN tool))
                (PP (IN in)
                  (NP
                    (NP (NN crime) (NN prevention) (NNP Stephen) (NNP J.) (NNP Dubner))
                    (CC and)
                    (NP (NNP Steven) (NNP D.) (NNP Levitt)))))))))
      (, ,)
      (PP (IN from)
        (NP (DT the) (NN essay)))
      (SBAR
        (SBARQ
          (WHADVP (WRB Where))
          (SQ (VBP Have)
            (NP (DT All))
            (NP
              (NP (DT the) (NNPS Criminals))
              (ADJP (VBN Gone))))
          (. ?))))))

nsubj(wrong-3, It-1)
xsubj(consider-5, It-1)
cop(wrong-3, is-2)
root(ROOT-0, wrong-3)
aux(consider-5, to-4)
xcomp(wrong-3, consider-5)
nsubj(tool-8, abortion-6)
det(tool-8, a-7)
xcomp(consider-5, tool-8)
nn(Dubner-14, crime-10)
nn(Dubner-14, prevention-11)
nn(Dubner-14, Stephen-12)
nn(Dubner-14, J.-13)
prep_in(tool-8, Dubner-14)
nn(Levitt-18, Steven-16)
nn(Levitt-18, D.-17)
prep_in(tool-8, Levitt-18)
conj_and(Dubner-14, Levitt-18)
det(essay-22, the-21)
prep_from(wrong-3, essay-22)
advmod(Have-24, Where-23)
dep(wrong-3, Have-24)
nsubj(Have-24, All-25)
det(Criminals-27, the-26)
dep(Have-24, Criminals-27)
amod(Criminals-27, Gone-28)

(ROOT
  (SQ
    (VP (VB Want)
      (S
        (VP (TO to)
          (VP (VB understand)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBD made)
                  (NP (DT the) (NN crime) (NN rate) (NN drop))
                  (PP (IN in)
                    (NP (DT the) (NNS 1990s))))))))))
    (. ?)))

root(ROOT-0, Want-1)
aux(understand-3, to-2)
xcomp(Want-1, understand-3)
nsubj(made-5, what-4)
ccomp(understand-3, made-5)
det(drop-9, the-6)
nn(drop-9, crime-7)
nn(drop-9, rate-8)
dobj(made-5, drop-9)
det(1990s-12, the-11)
prep_in(made-5, 1990s-12)

(ROOT
  (S
    (VP (VB Look)
      (ADVP (RB back)
        (PP (TO to)
          (NP (DT the) (NNP Roe)
            (CC v.)
            (NNP Wade) (NN decision))))
      (PP (IN in)
        (NP
          (NP (CD 1973))
          (`` ``)
          (S
            (VP (TO To)
              (VP (VB discover)
                (SBAR (IN that)
                  (S
                    (NP (NN abortion))
                    (VP (VBD was)
                      (NP
                        (NP (CD one))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (JJS greatest) (JJ crime-lowering) (NNS factors))
                            (PP (IN in)
                              (NP
                                (NP
                                  (NP (JJ American) (NN history))
                                  (SBAR
                                    (S
                                      (VP (VBZ is) (, ,)
                                        (S
                                          (NP (NNS needless))
                                          (VP (TO to)
                                            (VP (VB say))))))))
                                (, ,)
                                (NP (VBG jarring))))))))))))))))
    (. .)))

root(ROOT-0, Look-1)
advmod(Look-1, back-2)
det(decision-8, the-4)
nn(decision-8, Roe-5)
conj_v.(Roe-5, Wade-7)
nn(decision-8, Wade-7)
prep_to(back-2, decision-8)
prep_in(Look-1, 1973-10)
aux(discover-13, To-12)
infmod(1973-10, discover-13)
complm(one-17, that-14)
nsubj(one-17, abortion-15)
cop(one-17, was-16)
ccomp(discover-13, one-17)
det(factors-22, the-19)
amod(factors-22, greatest-20)
amod(factors-22, crime-lowering-21)
prep_of(one-17, factors-22)
amod(history-25, American-24)
prep_in(factors-22, history-25)
rcmod(history-25, is-26)
nsubj(say-30, needless-28)
aux(say-30, to-29)
xcomp(is-26, say-30)
appos(history-25, jarring-32)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ feels)
        (ADJP (RBR less) (JJ Darwinian)
          (PP (IN than)
            (NP (NNP Swiftian))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ calls)
        (S
          (VP (TO to)
            (VP (VB mind)
              (NP
                (NP (DT a)
                  (ADVP (RB long) (RB ago))
                  (NN dart))
                (VP (VBN attributed)
                  (PP (TO to)
                    (NP (NNP G.) (NNP K.) (NNP Chesterton))))))))))
    (: :)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (EX there))
          (VP (VBP aren)
            (S
              (NP (JJ t) (JJ enough) (NNS hats))
              (VP (TO to)
                (VP (VB go)
                  (PRT (RP around))))))))
      (, ,)
      (NP (DT the) (NN problem) (NN isn) (NN t))
      (VP (VBD solved)
        (PP (IN by)
          (S
            (VP (VBG lopping)
              (PRT (RP off))
              (NP (DT some) (NNS heads)))))))
    (. .)))

nsubj(feels-2, It-1)
root(ROOT-0, feels-2)
advmod(Darwinian-4, less-3)
acomp(feels-2, Darwinian-4)
prep_than(Darwinian-4, Swiftian-6)
nsubj(calls-9, it-8)
xsubj(mind-11, it-8)
parataxis(feels-2, calls-9)
aux(mind-11, to-10)
xcomp(calls-9, mind-11)
det(dart-15, a-12)
advmod(ago-14, long-13)
advmod(dart-15, ago-14)
dobj(mind-11, dart-15)
partmod(dart-15, attributed-16)
nn(Chesterton-20, G.-18)
nn(Chesterton-20, K.-19)
prep_to(attributed-16, Chesterton-20)
advmod(aren-24, when-22)
expl(aren-24, there-23)
advcl(solved-36, aren-24)
amod(hats-27, t-25)
amod(hats-27, enough-26)
nsubj(go-29, hats-27)
aux(go-29, to-28)
xcomp(aren-24, go-29)
prt(go-29, around-30)
det(t-35, the-32)
nn(t-35, problem-33)
nn(t-35, isn-34)
nsubj(solved-36, t-35)
parataxis(feels-2, solved-36)
prepc_by(solved-36, lopping-38)
prt(lopping-38, off-39)
det(heads-41, some-40)
dobj(lopping-38, heads-41)

(ROOT
  (S
    (NP (DT The) (NN crime) (NN drop))
    (VP (VBD was) (, ,)
      (PP (IN in)
        (NP
          (NP (DT the) (NN language))
          (PP (IN of)
            (NP (NNS economists)))))
      (, ,)
      (NP
        (NP (DT an) (`` ``) (JJ unintended) (NN benefit) ('' ''))
        (PP (IN of)
          (NP (JJ legalized) (NN abortion)))))
    (. .)))

det(drop-3, The-1)
nn(drop-3, crime-2)
nsubj(benefit-15, drop-3)
cop(benefit-15, was-4)
det(language-8, the-7)
prep_in(benefit-15, language-8)
prep_of(language-8, economists-10)
det(benefit-15, an-12)
amod(benefit-15, unintended-14)
root(ROOT-0, benefit-15)
amod(abortion-19, legalized-18)
prep_of(benefit-15, abortion-19)

(ROOT
  (S (CC But)
    (NP (PRP one))
    (VP (VBP need) (RB not)
      (VP (VB oppose)
        (NP
          (NP (NN abortion))
          (PP (IN on)
            (NP (JJ moral)
              (CC or)
              (JJ religious) (NNS grounds))))
        (S
          (VP (TO to)
            (VP (VB feel)
              (VP (VBN shaken)
                (PP (IN by)
                  (NP
                    (NP (DT the) (NN notion))
                    (PP (IN of)
                      (NP
                        (NP (DT a) (JJ private) (NNS sadness))
                        (VP (VBG being)
                          (VP (VBN converted)
                            (PP (IN into)
                              (NP (DT a) (JJ public) (NN good)))))))))))))))
    (. .)))

cc(need-3, But-1)
nsubj(need-3, one-2)
root(ROOT-0, need-3)
neg(need-3, not-4)
dep(need-3, oppose-5)
dobj(oppose-5, abortion-6)
amod(grounds-11, moral-8)
conj_or(moral-8, religious-10)
amod(grounds-11, religious-10)
prep_on(abortion-6, grounds-11)
aux(feel-13, to-12)
xcomp(oppose-5, feel-13)
dep(feel-13, shaken-14)
det(notion-17, the-16)
prep_by(shaken-14, notion-17)
det(sadness-21, a-19)
amod(sadness-21, private-20)
prep_of(notion-17, sadness-21)
auxpass(converted-23, being-22)
partmod(sadness-21, converted-23)
det(good-27, a-25)
amod(good-27, public-26)
prep_into(converted-23, good-27)

(ROOT
  (NP
    (NP (NNP ''))
    (PRN (-LRB- -LRB-)
      (NP (CD 34))
      (-RRB- -RRB-))))

appos(''-1, 34-3)

