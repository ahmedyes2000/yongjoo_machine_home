(ROOT
  (INTJ (UH .)))


(ROOT
  (SQ (VBZ is) (RB n't)
    (NP (PRP it))
    (ADJP (JJ true))
    (. ?)))

cop(true-4, is-1)
neg(true-4, n't-2)
nsubj(true-4, it-3)
root(ROOT-0, true-4)

(ROOT
  (S (: ...)
    (PP (IN oh)
      (NP (NN right)))
    (NP (PRP I))
    (VP (VBP remember)
      (NP
        (NP (DT the) (NN logic))
        ('' '')
        (SBAR
          (S
            (NP (PRP You))
            (VP (VBP do) (RB n't)
              (VP (VB make)
                (NP (NNS laws))
                (PP (VBN based)
                  (PP (IN on)
                    (NP (NNS exceptions))))))))
        (PP (TO to)
          (NP
            (NP (DT the) (NN norm))
            ('' '')
            (SBAR
              (S
                (NP (PRP You))
                (VP (VBP do) (RB n't)
                  (VP (VB have)
                    (S
                      (VP (TO to)
                        (VP (VB convince)
                          (NP (PRP me))
                          (SBAR (IN that)
                            (S
                              (NP (JJ high) (NN abortion) (NNS rates))
                              (VP (VBP represent)
                                (NP (DT the) (JJS deepest) (NN poverty))))))))))))))))
    (. .)))

prep_oh(remember-5, right-3)
nsubj(remember-5, I-4)
root(ROOT-0, remember-5)
det(logic-7, the-6)
dobj(remember-5, logic-7)
nsubj(make-12, You-9)
aux(make-12, do-10)
neg(make-12, n't-11)
rcmod(logic-7, make-12)
dobj(make-12, laws-13)
prepc_based_on(make-12, on-15)
pobj(make-12, exceptions-16)
det(norm-19, the-18)
prep_to(logic-7, norm-19)
dobj(have-24, norm-19)
nsubj(have-24, You-21)
xsubj(convince-26, You-21)
aux(have-24, do-22)
neg(have-24, n't-23)
rcmod(norm-19, have-24)
aux(convince-26, to-25)
xcomp(have-24, convince-26)
dobj(convince-26, me-27)
complm(represent-32, that-28)
amod(rates-31, high-29)
nn(rates-31, abortion-30)
nsubj(represent-32, rates-31)
ccomp(convince-26, represent-32)
det(poverty-35, the-33)
amod(poverty-35, deepest-34)
dobj(represent-32, poverty-35)

