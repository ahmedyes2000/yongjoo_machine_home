(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have) (RB not)
        (VP (VBN presented)
          (NP
            (NP (DT any) (NNS facts))
            (, ,)
            (NP
              (ADJP (RB only) (JJ arbitrary))
              (NNS assertions))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP you))
                (VP (VBP do) (RB not)
                  (VP (VB bother)
                    (S
                      (VP (TO to)
                        (VP (VB support)
                          (PP (IN except)
                            (PP (IN with)
                              (NP (JJ lexicographic) (NNS irrelevancies)))))))))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBP proceed)
        (SBAR (RB as) (IN if)
          (S
            (NP
              (NP (PRP$ your) (NN method))
              (PP (IN of)
                (NP (NN thinking))))
            (VP (VBD were)
              (ADJP (RB axiomatically) (JJ valid)))))))
    (. .)))

nsubj(presented-4, You-1)
aux(presented-4, have-2)
neg(presented-4, not-3)
root(ROOT-0, presented-4)
det(facts-6, any-5)
dobj(presented-4, facts-6)
advmod(arbitrary-9, only-8)
amod(assertions-10, arbitrary-9)
appos(facts-6, assertions-10)
dobj(bother-15, assertions-10)
rel(bother-15, which-11)
nsubj(bother-15, you-12)
xsubj(support-17, you-12)
aux(bother-15, do-13)
neg(bother-15, not-14)
rcmod(facts-6, bother-15)
rcmod(assertions-10, bother-15)
aux(support-17, to-16)
xcomp(bother-15, support-17)
prep(support-17, except-18)
pcomp(except-18, with-19)
amod(irrelevancies-21, lexicographic-20)
prep_with(except-18, irrelevancies-21)
advmod(proceed-26, then-24)
nsubj(proceed-26, you-25)
conj_and(presented-4, proceed-26)
advmod(valid-35, as-27)
dep(valid-35, if-28)
poss(method-30, your-29)
nsubj(valid-35, method-30)
prep_of(method-30, thinking-32)
cop(valid-35, were-33)
advmod(valid-35, axiomatically-34)
ccomp(proceed-26, valid-35)

