(ROOT
  (S (CC So)
    (SBAR
      (WHNP (WP what))
      (FRAG
        (ADVP (RB then))))
    (, ,)
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT the) (`` ``) (JJ the) (NN purpose))
          (SBAR
            (WHPP (IN for)
              (WHNP (WDT which)))
            (S
              (NP (PRP it))
              (VP (VBD was)
                (VP (VBN designed) ('' ''))))))
        (CONJP (IN if) (RB not))
        (NP (NN procreation))))
    (. ?)))

dep(then-3, what-2)
dep(purpose-9, then-3)
cop(purpose-9, is-5)
det(purpose-9, the-6)
amod(purpose-9, the-8)
root(ROOT-0, purpose-9)
rel(designed-14, which-11)
nsubjpass(designed-14, it-12)
auxpass(designed-14, was-13)
rcmod(purpose-9, designed-14)
conj_negcc(purpose-9, procreation-18)

(ROOT
  (NP (NNP Pleasure) (NNP ?!)))

nn(?!-2, Pleasure-1)
root(ROOT-0, ?!-2)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do) (RB n't)
      (VP (VB analyze)
        (NP
          (NP (JJ other) (NNS types))
          (PP (IN of)
            (NP (NN activity))))
        (PP (IN for)
          (NP (PRP$ their) (JJ moral) (NN fiber)))))
    (. .)))

nsubj(analyze-4, We-1)
aux(analyze-4, do-2)
neg(analyze-4, n't-3)
root(ROOT-0, analyze-4)
amod(types-6, other-5)
dobj(analyze-4, types-6)
prep_of(types-6, activity-8)
poss(fiber-12, their-10)
amod(fiber-12, moral-11)
prep_for(analyze-4, fiber-12)

(ROOT
  (SQ (VBP Do)
    (NP (PRP we))
    (VP (VB talk)
      (PP (IN about)
        (NP
          (NP (DT the) (NN morality))
          (PP (IN of)
            (NP (NN football))))))
    (. ?)))

aux(talk-3, Do-1)
nsubj(talk-3, we-2)
root(ROOT-0, talk-3)
det(morality-6, the-5)
prep_about(talk-3, morality-6)
prep_of(morality-6, football-8)

(ROOT
  (NP
    (NP (DT The) (NN morality))
    (PP (IN of)
      (NP (NN swimming)))
    (. ?)))

det(morality-2, The-1)
root(ROOT-0, morality-2)
prep_of(morality-2, swimming-4)

(ROOT
  (NP
    (NP (DT The) (NN morality))
    (PP (IN of)
      (NP (VBG sleeping)))
    (. ?)))

det(morality-2, The-1)
root(ROOT-0, morality-2)
prep_of(morality-2, sleeping-4)

(ROOT
  (S
    (NP
      (NP (NNS Laws))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP I))
          (VP (VBD stated)
            (ADVP (RBR earlier)))))
      (, ,))
    (VP (MD should)
      (VP
        (VP (VB be)
          (VP (VBN based)
            (PP (IN on)
              (NP
                (NP (DT the) (NN good))
                (PP (IN of)
                  (NP (NN society)))))))
        (, ,)
        (ADVP (RB namely))
        (VP (RB not)
          (S
            (VP (VBG causing)
              (NP (NN harm))
              (PP (TO to)
                (NP (JJ other) (NNS people)))))
          (, ,)
          (SBAR (IN while)
            (S
              (VP (VBG protecting)
                (NP
                  (NP (DT each) (NN person) (POS 's))
                  (JJ individual) (NNS rights))
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (NP
                        (NP (DT all) (NNS things))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBP do) (RB not)
                              (VP (VB cause)
                                (NP (NN harm))
                                (PP (TO to)
                                  (NP (NNS others)))))))))))))))))
    (. .)))

dobj(stated-5, Laws-1)
nsubjpass(based-10, Laws-1)
mark(stated-5, as-3)
nsubj(stated-5, I-4)
dep(Laws-1, stated-5)
advmod(stated-5, earlier-6)
aux(based-10, should-8)
auxpass(based-10, be-9)
root(ROOT-0, based-10)
det(good-13, the-12)
prep_on(based-10, good-13)
prep_of(good-13, society-15)
advmod(based-10, namely-17)
dep(based-10, not-18)
xcomp(not-18, causing-19)
dobj(causing-19, harm-20)
amod(people-23, other-22)
prep_to(causing-19, people-23)
mark(protecting-26, while-25)
advcl(not-18, protecting-26)
det(person-28, each-27)
poss(rights-31, person-28)
amod(rights-31, individual-30)
dobj(protecting-26, rights-31)
aux(do-33, to-32)
xcomp(protecting-26, do-33)
det(things-35, all-34)
dobj(do-33, things-35)
nsubj(cause-39, things-35)
aux(cause-39, do-37)
neg(cause-39, not-38)
rcmod(things-35, cause-39)
dobj(cause-39, harm-40)
prep_to(cause-39, others-42)

(ROOT
  (S
    (S
      (NP (NNP Ethics))
      (VP (VBP are) (RB not)
        (VP (VBN fixed))))
    (, ,)
    (NP (RB else) (PRP we))
    (VP (MD would) (RB all)
      (VP (VB have)
        (NP (JJ identical) (JJ ethical) (NNS standards))))
    (. .)))

nsubjpass(fixed-4, Ethics-1)
auxpass(fixed-4, are-2)
neg(fixed-4, not-3)
ccomp(have-10, fixed-4)
advmod(we-7, else-6)
nsubj(have-10, we-7)
aux(have-10, would-8)
advmod(have-10, all-9)
root(ROOT-0, have-10)
amod(standards-13, identical-11)
amod(standards-13, ethical-12)
dobj(have-10, standards-13)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB account)
        (PP (IN for)
          (NP (DT the) (NNS differences)))
        (SBAR (IN if)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (PP (CC but)
                      (NP (CD one) (NN ideal)))))))))))
    (. ?)))

advmod(account-4, How-1)
aux(account-4, do-2)
nsubj(account-4, you-3)
root(ROOT-0, account-4)
det(differences-7, the-6)
prep_for(account-4, differences-7)
mark(is-10, if-8)
expl(is-10, there-9)
xsubj(be-12, there-9)
advcl(account-4, is-10)
aux(be-12, to-11)
xcomp(is-10, be-12)
prep(be-12, but-13)
num(ideal-15, one-14)
dep(but-13, ideal-15)

(ROOT
  (S
    (VP (VB LoL)
      (PP (IN at)
        (NP
          (NP (DT the) (JJ sexual) (NN revolution))
          (VP (VBG bringing)
            (NP (NN bondage))))))
    (. .)))

root(ROOT-0, LoL-1)
det(revolution-5, the-3)
amod(revolution-5, sexual-4)
prep_at(LoL-1, revolution-5)
partmod(revolution-5, bringing-6)
dobj(bringing-6, bondage-7)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP (JJ safe) (NN sex))
      (ADVP (RB prior)
        (PP (TO to)
          (NP (NN marriage))))
      (ADJP (JJ harmful)
        (PP (TO to)
          (NP
            (NP (DT both) (NNS parties))
            (, ,)
            (ADVP (RB though))))))
    (. ?)))

advmod(harmful-8, How-1)
cop(harmful-8, is-2)
amod(sex-4, safe-3)
nsubj(harmful-8, sex-4)
prep_prior_to(harmful-8, marriage-7)
root(ROOT-0, harmful-8)
det(parties-11, both-10)
prep_to(harmful-8, parties-11)
advmod(parties-11, though-13)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP
          (VP (VBP 're)
            (ADJP (JJ responsible)))
          (, ,)
          (NP
            (NP (DT no) (NN transmission))
            (PP (IN of)
              (NP
                (NP (NNP STD) (POS 's))
                (, ,)
                (NP (DT no) (JJ unwanted) (NNS pregnancies))))))))
    (, ,)
    (WHNP (WP what))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN damage))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP speak)
              (PP (IN of)))))))
    (. ?)))

mark(responsible-4, If-1)
nsubj(responsible-4, you-2)
cop(responsible-4, 're-3)
advcl(is-17, responsible-4)
det(transmission-7, no-6)
dobj(responsible-4, transmission-7)
prep_of(transmission-7, STD-9)
possessive(STD-9, 's-10)
det(pregnancies-14, no-12)
amod(pregnancies-14, unwanted-13)
appos(STD-9, pregnancies-14)
attr(is-17, what-16)
root(ROOT-0, is-17)
det(damage-19, the-18)
nsubj(is-17, damage-19)
prep_of(speak-21, damage-19)
nsubj(speak-21, you-20)
rcmod(damage-19, speak-21)

(ROOT
  (S
    (VP (VB Say)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's) (RB not)
            (ADVP (RB so))))))
    (. !)))

root(ROOT-0, Say-1)
nsubj('s-3, it-2)
ccomp(Say-1, 's-3)
neg('s-3, not-4)
advmod('s-3, so-5)

(ROOT
  (S
    (PP (IN As)
      (PP (IN for)
        (NP
          (NP (DT the) (NN life) (NN expectancy))
          (PP (IN of)
            (NP (DT a) (JJ gay) (NN man))))))
    (, ,)
    (VP (VB consider)
      (NP
        (NP (DT this))
        (: :)
        (S
          (NP (NNS homosexuals))
          (VP (VBP are)
            (ADJP
              (ADJP
                (ADVP
                  (NP (CD 26) (NNS times))
                  (RBR more))
                (JJ likely)
                (S
                  (VP (TO to)
                    (VP (VB die)
                      (PP (IN from)
                        (NP (NN suicide)))))))
              (CC and)
              (ADJP
                (ADVP
                  (NP (CD 87) (NNS times))
                  (RBR more))
                (JJ likely)
                (S
                  (VP (TO to)
                    (VP (VB die)
                      (PP (IN from)
                        (NP (NN murder)))
                      (PP (IN than)
                        (NP (NNS heterosexuals))))))))))))
    (. .)))

prepc_as_for(consider-11, for-2)
det(expectancy-5, the-3)
nn(expectancy-5, life-4)
pobj(consider-11, expectancy-5)
det(man-9, a-7)
amod(man-9, gay-8)
prep_of(expectancy-5, man-9)
root(ROOT-0, consider-11)
dobj(consider-11, this-12)
nsubj(likely-19, homosexuals-14)
nsubj(likely-28, homosexuals-14)
cop(likely-19, are-15)
num(times-17, 26-16)
npadvmod(more-18, times-17)
advmod(likely-19, more-18)
dep(this-12, likely-19)
aux(die-21, to-20)
xcomp(likely-19, die-21)
prep_from(die-21, suicide-23)
num(times-26, 87-25)
npadvmod(more-27, times-26)
advmod(likely-28, more-27)
dep(this-12, likely-28)
conj_and(likely-19, likely-28)
aux(die-30, to-29)
xcomp(likely-28, die-30)
prep_from(die-30, murder-32)
prep_than(die-30, heterosexuals-34)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ says)
      (NP (DT a) (NN lot))
      (PP (IN about)
        (NP
          (NP (JJR more))
          (PP (IN about)
            (NP (NN tolerance)))))
      (SBAR (IN than)
        (S
          (NP (PRP it))
          (VP (VBZ does)
            (PP (IN about)
              (NP (NN lifestyle)))))))
    (. .)))

nsubj(says-2, Which-1)
root(ROOT-0, says-2)
det(lot-4, a-3)
dobj(says-2, lot-4)
prep_about(says-2, more-6)
prep_about(more-6, tolerance-8)
mark(does-11, than-9)
nsubj(does-11, it-10)
advcl(says-2, does-11)
prep_about(does-11, lifestyle-13)

(ROOT
  (S
    (ADVP (RB Nonetheless))
    (, ,)
    (NP (PRP$ your) (NN argument))
    (VP (VBZ is)
      (ADJP (JJ moot))
      (ADVP (RB anyway))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (NNS homosexuals))
          (VP (VBP do) (RB not)
            (VP (VB choose)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ homosexual))))))))))
    (. .)))

advmod(moot-6, Nonetheless-1)
poss(argument-4, your-3)
nsubj(moot-6, argument-4)
cop(moot-6, is-5)
root(ROOT-0, moot-6)
advmod(moot-6, anyway-7)
mark(choose-13, because-9)
nsubj(choose-13, homosexuals-10)
xsubj(homosexual-16, homosexuals-10)
aux(choose-13, do-11)
neg(choose-13, not-12)
advcl(moot-6, choose-13)
aux(homosexual-16, to-14)
cop(homosexual-16, be-15)
xcomp(choose-13, homosexual-16)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ 's) (RB not)
        (NP (DT a) (NN lifestyle) (NN choice))))
    (, ,) (IN so)
    (S
      (NP (PRP it))
      (VP (MD can) (RB not)
        (VP (VB be)
          (ADJP (JJ right)
            (CC or)
            (JJ wrong)))))
    (. .)))

nsubj(choice-6, That-1)
cop(choice-6, 's-2)
neg(choice-6, not-3)
det(choice-6, a-4)
nn(choice-6, lifestyle-5)
root(ROOT-0, choice-6)
dep(choice-6, so-8)
nsubj(right-13, it-9)
nsubj(wrong-15, it-9)
aux(right-13, can-10)
neg(right-13, not-11)
cop(right-13, be-12)
ccomp(choice-6, right-13)
ccomp(choice-6, wrong-15)
conj_or(right-13, wrong-15)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB say)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP make)
            (S
              (NP (DT a) (NN choice))
              (VP (TO to)
                (VP (VB walk)
                  (NP
                    (NP (NN barefoot))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (VBP are)
                          (ADVP (RB also))
                          (VP (VBG making)
                            (NP (DT the) (NN choice)
                              (S
                                (VP (TO to)
                                  (VP (VB host)
                                    (NP
                                      (NP (DT a) (NN ringworm) (NN inside))
                                      (PP (IN of)
                                        (NP (PRP you))))))))))))))))))))
    (. ?)))

aux(say-3, Would-1)
nsubj(say-3, you-2)
root(ROOT-0, say-3)
advmod(make-6, when-4)
nsubj(make-6, you-5)
advcl(say-3, make-6)
det(choice-8, a-7)
nsubj(walk-10, choice-8)
aux(walk-10, to-9)
xcomp(make-6, walk-10)
dobj(walk-10, barefoot-11)
nsubj(making-15, you-12)
aux(making-15, are-13)
advmod(making-15, also-14)
rcmod(barefoot-11, making-15)
det(choice-17, the-16)
dobj(making-15, choice-17)
aux(host-19, to-18)
infmod(choice-17, host-19)
det(inside-22, a-20)
nn(inside-22, ringworm-21)
dobj(host-19, inside-22)
prep_of(inside-22, you-24)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (NP
          (NP (NN something))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD could)
                (VP (VB be)
                  (NP
                    (NP (DT a) (NN consequence))
                    (PP (IN of)
                      (NP (DT that) (NN choice)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ 's) (RB not)
        (NP
          (NP (DT a) (NN choice))
          (SBAR
            (S
              (NP (PRP you))
              (VP (VBP 've)
                (VP (VBN made))))))))
    (. .)))

nsubj(something-3, It-1)
cop(something-3, 's-2)
root(ROOT-0, something-3)
nsubj(consequence-8, something-3)
aux(consequence-8, could-5)
cop(consequence-8, be-6)
det(consequence-8, a-7)
rcmod(something-3, consequence-8)
det(choice-11, that-10)
prep_of(consequence-8, choice-11)
nsubj(choice-18, it-14)
cop(choice-18, 's-15)
neg(choice-18, not-16)
det(choice-18, a-17)
conj_but(something-3, choice-18)
dobj(made-21, choice-18)
nsubj(made-21, you-19)
aux(made-21, 've-20)
rcmod(choice-18, made-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT an) (NN effect)))
    (. .)))

nsubj(effect-4, It-1)
cop(effect-4, 's-2)
det(effect-4, an-3)
root(ROOT-0, effect-4)

(ROOT
  (S
    (ADVP (RB Similarly))
    (, ,)
    (NP (NN impregnation))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN effect))
        (PP (IN of)
          (NP (NN sex)))))
    (. .)))

advmod(effect-6, Similarly-1)
nsubj(effect-6, impregnation-3)
cop(effect-6, is-4)
det(effect-6, an-5)
root(ROOT-0, effect-6)
prep_of(effect-6, sex-8)

(ROOT
  (FRAG (RB Not)
    (NP
      (NP (DT a) (NN choice))
      (PP (IN in)
        (CC and)
        (IN of)
        (NP (PRP itself))))
    (. .)))

root(ROOT-0, Not-1)
det(choice-3, a-2)
dep(Not-1, choice-3)
dep(Not-1, choice-3')
conj_and(choice-3, choice-3')
prep_in(choice-3, itself-7)
prep_of(choice-3', itself-7)

(ROOT
  (S
    (NP (DT The) (NN choice))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB come)
            (ADVP (RB prior)
              (PP (TO to)
                (NP
                  (NP (NN impregnation))
                  (, ,)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP (PRP one))
                      (VP (MD can)
                        (VP (VB choose)
                          (S
                            (VP (TO to)
                              (VP (VB prevent)
                                (NP (PRP it))
                                (PP (IN through)
                                  (NP (NN contraception)))))))))))))))))
    (. .)))

det(choice-2, The-1)
nsubj(ought-3, choice-2)
xsubj(come-5, choice-2)
root(ROOT-0, ought-3)
aux(come-5, to-4)
xcomp(ought-3, come-5)
prep_prior_to(come-5, impregnation-8)
tmod(choose-13, impregnation-8)
advmod(choose-13, when-10)
nsubj(choose-13, one-11)
xsubj(prevent-15, one-11)
aux(choose-13, can-12)
dep(impregnation-8, choose-13)
aux(prevent-15, to-14)
xcomp(choose-13, prevent-15)
dobj(prevent-15, it-16)
prep_through(prevent-15, contraception-18)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB say)
        (SBAR
          (SBAR
            (S
              (NP (NN man))
              (VP (VBZ has)
                (NP (DT a) (NN nature)))))
          (CC and)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (VP (VBN fixed))))))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, would-2)
root(ROOT-0, say-3)
nsubj(has-5, man-4)
ccomp(say-3, has-5)
det(nature-7, a-6)
dobj(has-5, nature-7)
complm(fixed-12, that-9)
nsubjpass(fixed-12, it-10)
auxpass(fixed-12, is-11)
ccomp(say-3, fixed-12)
conj_and(has-5, fixed-12)

(ROOT
  (S (CC But)
    (ADVP (RB sometimes))
    (NP (PRP it))
    (VP (VBZ comes)
      (PP (IN after)))
    (. .)))

cc(comes-4, But-1)
advmod(comes-4, sometimes-2)
nsubj(comes-4, it-3)
root(ROOT-0, comes-4)
prep(comes-4, after-5)

(ROOT
  (S
    (ADVP (RB Nonetheless))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB up)
        (PP (TO to)
          (NP (DT the) (NN individual)
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP (DT that) (NN choice)))))))))
    (. .)))

advmod('s-4, Nonetheless-1)
nsubj('s-4, it-3)
root(ROOT-0, 's-4)
advmod('s-4, up-5)
det(individual-8, the-7)
prep_to(up-5, individual-8)
aux(make-10, to-9)
infmod(individual-8, make-10)
det(choice-12, that-11)
dobj(make-10, choice-12)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS examples))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD gave)))))
    (VP (VBP represent)
      (SBAR
        (S
          (NP (DT the) (NNS reasons) (NN abortion))
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ accessible)))))))))
    (. .)))

det(examples-2, The-1)
dobj(gave-4, examples-2)
nsubj(represent-5, examples-2)
nsubj(gave-4, I-3)
rcmod(examples-2, gave-4)
root(ROOT-0, represent-5)
det(abortion-8, the-6)
nn(abortion-8, reasons-7)
nsubj(ought-9, abortion-8)
xsubj(accessible-12, abortion-8)
ccomp(represent-5, ought-9)
aux(accessible-12, to-10)
cop(accessible-12, be-11)
xcomp(ought-9, accessible-12)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (MD should) (RB not)
            (VP (VB be)
              (VP (VBN used)
                (PP (IN as)
                  (NP (NN birth) (NN control)))))))))
    (. .)))

nsubj(agree-2, I-1)
root(ROOT-0, agree-2)
complm(used-8, that-3)
nsubjpass(used-8, it-4)
aux(used-8, should-5)
neg(used-8, not-6)
auxpass(used-8, be-7)
ccomp(agree-2, used-8)
nn(control-11, birth-10)
prep_as(used-8, control-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (MD ought)
            (S
              (VP (TO to)
                (VP (VB reduce)
                  (NP (DT the) (NN number)))))))))
    (. .)))

nsubj(agree-2, I-1)
root(ROOT-0, agree-2)
complm(ought-5, that-3)
nsubj(ought-5, we-4)
xsubj(reduce-7, we-4)
ccomp(agree-2, ought-5)
aux(reduce-7, to-6)
xcomp(ought-5, reduce-7)
det(number-9, the-8)
dobj(reduce-7, number-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP believe)
      (SBAR
        (S
          (NP
            (NP (JJ comprehensive) (JJ sexual) (NN education))
            (PP (IN with)
              (NP
                (NP (NN access))
                (PP (TO to)
                  (NP (NN contraception))))))
          (VP (VBZ is)
            (NP
              (NP (DT the) (JJS best) (NN way))
              (SBAR
                (S
                  (VP (TO to)
                    (VP (VB achieve)
                      (NP (DT that)))))))))))
    (. .)))

nsubj(believe-2, I-1)
root(ROOT-0, believe-2)
amod(education-5, comprehensive-3)
amod(education-5, sexual-4)
nsubj(way-13, education-5)
prep_with(education-5, access-7)
prep_to(access-7, contraception-9)
cop(way-13, is-10)
det(way-13, the-11)
amod(way-13, best-12)
ccomp(believe-2, way-13)
aux(achieve-15, to-14)
infmod(way-13, achieve-15)
dobj(achieve-15, that-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP seem)
      (S
        (VP (TO to)
          (VP (VB think)
            (SBAR (IN that)
              (S
                (S
                  (VP
                    (VP
                      (ADVP (RB just))
                      (VBG telling)
                      (S
                        (NP (PRP them))
                        (RB not)
                        (VP (TO to)
                          (VP (VB do)
                            (NP (PRP it))))))
                    (CC and)
                    (VP (VBG crossing)
                      (NP (PRP$ our) (NNS fingers)))))
                (VP (VBZ is)
                  (ADJP (JJS best)))))))))
    (. .)))

nsubj(seem-2, You-1)
xsubj(think-4, You-1)
root(ROOT-0, seem-2)
aux(think-4, to-3)
xcomp(seem-2, think-4)
complm(best-18, that-5)
advmod(telling-7, just-6)
csubj(best-18, telling-7)
nsubj(do-11, them-8)
neg(do-11, not-9)
aux(do-11, to-10)
xcomp(telling-7, do-11)
dobj(do-11, it-12)
conj_and(telling-7, crossing-14)
csubj(best-18, crossing-14)
poss(fingers-16, our-15)
dobj(crossing-14, fingers-16)
cop(best-18, is-17)
ccomp(think-4, best-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADVP (RB just))
      (: ...)
      (FRAG
        (VP (VBN jaded))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod('s-2, just-3)
dep('s-2, jaded-5)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADVP
        (NP
          (QP (RB about) (CD 150,000))
          (NNS children))
        (RB up))
      (PP (IN for)
        (NP
          (NP (NN adoption))
          (PP (IN per)
            (NP (NN year))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
quantmod(150,000-4, about-3)
num(children-5, 150,000-4)
npadvmod(up-6, children-5)
advmod(are-2, up-6)
prep_for(are-2, adoption-8)
prep_per(adoption-8, year-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (JJ sure)
        (SBAR
          (WHADJP (WRB how) (JJ many))
          (S
            (NP (NNP adoptive))
            (VP (VBZ couples))))))
    (. .)))

nsubj(sure-4, I-1)
cop(sure-4, 'm-2)
neg(sure-4, not-3)
root(ROOT-0, sure-4)
advmod(many-6, how-5)
dep(couples-8, many-6)
nsubj(couples-8, adoptive-7)
dep(sure-4, couples-8)

(ROOT
  (S (CC And)
    (NP (PRP it))
    (VP (VBZ is)
      (PP (IN for)
        (NP (DT this) (NN reason)))
      (SBAR (IN that)
        (S
          (S
            (NP (PRP I))
            (ADVP (RB strongly))
            (VP (VBP believe)
              (PP (IN in)
                (S (RB not)
                  (VP (VBG banning)
                    (NP (NNS abortions)))))))
          (CC and)
          (S
            (NP (PRP I))
            (ADVP (RB strongly))
            (VP (VBP believe)
              (SBAR (IN that)
                (S
                  (NP (JJ abstinence) (JJ only) (NN education))
                  (VP (MD should)
                    (VP (VB be)
                      (VP (VBN replaced)
                        (PP (IN by)
                          (NP (JJ comprehensive) (JJ sexual) (NN education)))))))))))))
    (. .)))

cc(is-3, And-1)
nsubj(is-3, it-2)
root(ROOT-0, is-3)
det(reason-6, this-5)
prep_for(is-3, reason-6)
complm(believe-10, that-7)
nsubj(believe-10, I-8)
advmod(believe-10, strongly-9)
ccomp(is-3, believe-10)
neg(banning-13, not-12)
prepc_in(believe-10, banning-13)
dobj(banning-13, abortions-14)
nsubj(believe-18, I-16)
advmod(believe-18, strongly-17)
ccomp(is-3, believe-18)
conj_and(believe-10, believe-18)
complm(replaced-25, that-19)
amod(education-22, abstinence-20)
amod(education-22, only-21)
nsubjpass(replaced-25, education-22)
aux(replaced-25, should-23)
auxpass(replaced-25, be-24)
ccomp(believe-18, replaced-25)
amod(education-29, comprehensive-27)
amod(education-29, sexual-28)
agent(replaced-25, education-29)

(ROOT
  (SQ
    (S
      (NP (PRP$ My) (NN point))
      (VP (VBZ is)))
    (, ,)
    (SQ (MD would)
      (NP (JJ adoptive) (NNS couples))
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB keep)
                (NP (NN demand))
                (ADVP (RB up)
                  (PP (IN for)
                    (SBAR (IN that)
                      (S
                        (NP (JJ many) (JJ unwanted) (NNS children))
                        (VP (VBD were)
                          (NP (PRP we)))))))
                (S
                  (VP (TO to)
                    (VP (VB abolish)
                      (NP (NN abortion))
                      (NP (NN today)))))))))))
    (. ?)))

poss(point-2, My-1)
nsubj(is-3, point-2)
dep(able-9, is-3)
aux(able-9, would-5)
amod(couples-7, adoptive-6)
nsubj(able-9, couples-7)
cop(able-9, be-8)
root(ROOT-0, able-9)
aux(keep-11, to-10)
xcomp(able-9, keep-11)
dobj(keep-11, demand-12)
advmod(keep-11, up-13)
complm(we-20, that-15)
amod(children-18, many-16)
amod(children-18, unwanted-17)
nsubj(we-20, children-18)
cop(we-20, were-19)
prepc_for(up-13, we-20)
aux(abolish-22, to-21)
xcomp(keep-11, abolish-22)
dobj(abolish-22, abortion-23)
tmod(abolish-22, today-24)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (VP (VB let)
      (S
        (NP (PRP me))
        (VP (VB specify))))
    (. .)))

advmod(let-3, Again-1)
root(ROOT-0, let-3)
nsubj(specify-5, me-4)
ccomp(let-3, specify-5)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBP say) (`` ``)
          (NP (NN prohibition)))))
    (VP (VBZ does) (RB n't)
      (VP (VB work) ('' '')
        (S
          (NP (PRP I))
          (VP (VB mean)
            (NP
              (NP (NN prohibition))
              (PP (IN of)
                (NP (NNS things))))))
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (VBP recognize)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (NP (JJ false) (NNS laws))))))))))
    (. .)))

advmod(say-3, When-1)
nsubj(say-3, I-2)
advcl(work-8, say-3)
csubj(work-8, say-3)
dobj(say-3, prohibition-5)
aux(work-8, does-6)
neg(work-8, n't-7)
root(ROOT-0, work-8)
nsubj(mean-11, I-10)
ccomp(work-8, mean-11)
dobj(mean-11, prohibition-12)
prep_of(prohibition-12, things-14)
complm(recognize-17, that-15)
nsubj(recognize-17, people-16)
xsubj(laws-21, people-16)
ccomp(work-8, recognize-17)
aux(laws-21, to-18)
cop(laws-21, be-19)
amod(laws-21, false-20)
xcomp(recognize-17, laws-21)

(ROOT
  (S
    (NP (DT These))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (NNS laws))
          (PP (VBG regarding)
            (NP (PRP$ our) (NNS bodies))))))
    (. .)))

nsubj(laws-4, These-1)
aux(laws-4, would-2)
cop(laws-4, be-3)
root(ROOT-0, laws-4)
poss(bodies-7, our-6)
prep_regarding(laws-4, bodies-7)

(ROOT
  (S
    (NP
      (NP
        (NP (NNS Laws))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP tell)
              (NP (PRP us))
              (SBAR
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP (PRP we))
                    (VP (MD can)
                      (VP (VB use)
                        (NP (PRP them))
                        (PRN (-LRB- -LRB-)
                          (NP (NN sex))
                          (-RRB- -RRB-))))))
                (CC and)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP we))
                    (VP (MD can)
                      (VP (VB put)
                        (PP (IN in)
                          (NP (PRP them))))))))))))
      (PRN (-LRB- -LRB-)
        (NP (NNS drugs))
        (-RRB- -RRB-)))
    (VP (VBP do) (RB not)
      (VP (VB work)))
    (. .)))

nsubj(tell-3, Laws-1)
nsubj(work-25, Laws-1)
rcmod(Laws-1, tell-3)
dobj(tell-3, us-4)
advmod(use-8, how-5)
nsubj(use-8, we-6)
aux(use-8, can-7)
dep(tell-3, use-8)
dobj(use-8, them-9)
dep(use-8, sex-11)
dobj(put-17, what-14)
nsubj(put-17, we-15)
aux(put-17, can-16)
dep(tell-3, put-17)
conj_and(use-8, put-17)
prep_in(put-17, them-19)
appos(Laws-1, drugs-21)
aux(work-25, do-23)
neg(work-25, not-24)
root(ROOT-0, work-25)

(ROOT
  (S
    (NP (NNS People))
    (VP (VBP recognize)
      (NP
        (NP (DT the) (NN invalidity))
        (PP (IN of)
          (NP (DT these) (NNS laws))))
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP understand)
            (SBAR
              (S
                (NP (PRP$ their) (NNS bodies))
                (VP (VBP are)
                  (ADVP (RB ultimately))
                  (NP (PRP theirs))
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (PP (IN with)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP they))
                              (VP (VBP please)))))))))))))))
    (. .)))

nsubj(recognize-2, People-1)
root(ROOT-0, recognize-2)
det(invalidity-4, the-3)
dobj(recognize-2, invalidity-4)
det(laws-7, these-6)
prep_of(invalidity-4, laws-7)
mark(understand-10, because-8)
nsubj(understand-10, they-9)
advcl(recognize-2, understand-10)
poss(bodies-12, their-11)
nsubj(theirs-15, bodies-12)
cop(theirs-15, are-13)
advmod(theirs-15, ultimately-14)
ccomp(understand-10, theirs-15)
aux(do-17, to-16)
xcomp(theirs-15, do-17)
dobj(please-21, what-19)
nsubj(please-21, they-20)
prepc_with(do-17, please-21)

(ROOT
  (S
    (ADVP (RB Just))
    (VP
      (VP (VB go)
        (PP (IN through)
          (NP (DT the) (NN supermarket) (NN check-out))))
      (CC and)
      (VP (VB peruse)
        (NP (DT the) (JJS latest) (NN magazine) (NNS covers))))
    (. .)))

advmod(go-2, Just-1)
root(ROOT-0, go-2)
det(check-out-6, the-4)
nn(check-out-6, supermarket-5)
prep_through(go-2, check-out-6)
conj_and(go-2, peruse-8)
det(covers-12, the-9)
amod(covers-12, latest-10)
nn(covers-12, magazine-11)
dobj(peruse-8, covers-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (DT this))
                (VP (VBZ does)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (JJ male) (NN mind))
                      (CC and)
                      (NP (DT the) (NN way)))))))))))
    (NP (PRP it))
    (VP (VBZ victimizes)
      (NP
        (NP (NNS women))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADJP (JJ numb)))))))
    (. .)))

mark(know-5, If-1)
nsubj(know-5, you-2)
aux(know-5, do-3)
neg(know-5, n't-4)
advcl(victimizes-17, know-5)
dobj(does-8, what-6)
nsubj(does-8, this-7)
ccomp(know-5, does-8)
det(mind-12, the-10)
amod(mind-12, male-11)
prep_to(does-8, mind-12)
det(way-15, the-14)
prep_to(does-8, way-15)
conj_and(mind-12, way-15)
nsubj(victimizes-17, it-16)
root(ROOT-0, victimizes-17)
dobj(victimizes-17, women-18)
nsubj(numb-21, you-19)
cop(numb-21, are-20)
rcmod(women-18, numb-21)

(ROOT
  (S
    (NP (NNP Holy))
    (VP (VBD cow)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 've)
            (VP (VBN got)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (ADJP (JJ joking))))))))))
    (. !)))

nsubj(cow-2, Holy-1)
root(ROOT-0, cow-2)
nsubj(got-5, you-3)
xsubj(joking-8, you-3)
aux(got-5, 've-4)
ccomp(cow-2, got-5)
aux(joking-8, to-6)
cop(joking-8, be-7)
xcomp(got-5, joking-8)

(ROOT
  (S
    (NP (JJ Victimizes) (NNS women))
    (VP (VBZ ?!))))

amod(women-2, Victimizes-1)
nsubj(?!-3, women-2)
root(ROOT-0, ?!-3)

(ROOT
  (SINV
    (PP (IN Because)
      (NP
        (NP (NN part))
        (PP (IN of)
          (NP
            (NP (DT that) (VBN fixed) (NN nature))
            (PP (IN of)
              (NP (NN man)))))))
    (VP (VBZ is))
    (SBAR (IN that)
      (S
        (NP
          (NP (DT each))
          (PP (IN of)
            (NP (PRP us))))
        (VP (VBZ has)
          (NP
            (NP (NNS impulses)
              (CC and)
              (NNS desires))
            (PP (IN of)
              (NP (DT a) (JJ sexual) (NN nature)))))))
    (. .)))

prep_because(is-9, part-2)
det(nature-6, that-4)
amod(nature-6, fixed-5)
prep_of(part-2, nature-6)
prep_of(nature-6, man-8)
root(ROOT-0, is-9)
dep(has-14, that-10)
nsubj(has-14, each-11)
prep_of(each-11, us-13)
dep(is-9, has-14)
dobj(has-14, impulses-15)
dobj(has-14, desires-17)
conj_and(impulses-15, desires-17)
det(nature-21, a-19)
amod(nature-21, sexual-20)
prep_of(impulses-15, nature-21)

(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP me))
        (VP (VB start)
          (S
            (NP
              (NP (DT a) (JJ new) (NN debate))
              (PP (IN for)
                (NP (DT this))))
            (ADJP (RB alone))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(start-3, me-2)
ccomp(Let-1, start-3)
det(debate-6, a-4)
amod(debate-6, new-5)
nsubj(alone-9, debate-6)
prep_for(debate-6, this-8)
xcomp(start-3, alone-9)

(ROOT
  (S
    (INTJ (VB Please))
    (VP (VB visit)
      (NP (PRP it))
      (PP (IN at)
        (NP
          (NP (NNP http:\/\/www.createdebate.com\/debate\/show\/) (NNP Do_magazines_victimize_women))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (NP
                  (NP (DT all))
                  (PP (IN for)
                    (NP (NN teaching) (NNS kids)))
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ 's)
                        (NP
                          (NP (JJS best))
                          (PP (IN for)
                            (NP (PRP them))))))))))))))
    (. .)))

dep(visit-2, Please-1)
root(ROOT-0, visit-2)
dobj(visit-2, it-3)
nn(Do_magazines_victimize_women-6, http:\/\/www.createdebate.com\/debate\/show\/-5)
prep_at(visit-2, Do_magazines_victimize_women-6)
nsubj(all-9, I-7)
cop(all-9, 'm-8)
rcmod(Do_magazines_victimize_women-6, all-9)
nsubj(best-15, all-9)
nn(kids-12, teaching-11)
prep_for(all-9, kids-12)
cop(best-15, 's-14)
rcmod(all-9, best-15)
prep_for(best-15, them-17)

(ROOT
  (S (CC And)
    (NP (WDT what))
    (VP (VBZ 's)
      (ADJP
        (ADJP (JJS best))
        (SBAR (IN for)
          (S
            (NP (PRP them))
            (VP (VBP are)
              (NP (DT the) (NNS tools)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP
                        (NP (DT the) (JJS best) (NNS decisions))
                        (PP (IN for)
                          (NP (PRP themselves)))))))))))))
    (. .)))

cc(best-4, And-1)
nsubj(best-4, what-2)
cop(best-4, 's-3)
root(ROOT-0, best-4)
mark(tools-9, for-5)
nsubj(tools-9, them-6)
cop(tools-9, are-7)
det(tools-9, the-8)
ccomp(best-4, tools-9)
aux(make-11, to-10)
infmod(tools-9, make-11)
det(decisions-14, the-12)
amod(decisions-14, best-13)
dobj(make-11, decisions-14)
prep_for(decisions-14, themselves-16)

(ROOT
  (S (CC And)
    (NP (DT those) (NNS decisions))
    (, ,)
    (S
      (VP (VB like)
        (NP (PRP it))
        (CC or)
        (RB not)))
    (, ,)
    (VP (VBP are)
      (ADVP (RB ultimately))
      (PP (RP up)
        (PP (TO to)
          (NP (PRP them))))
      (S
        (VP (TO to)
          (VP (VB make)))))
    (. .)))

cc(are-10, And-1)
det(decisions-3, those-2)
nsubj(are-10, decisions-3)
xsubj(make-16, decisions-3)
ccomp(are-10, like-5)
dobj(like-5, it-6)
conj_or(like-5, not-8)
neg(like-5, not-8)
ccomp(are-10, not-8)
root(ROOT-0, are-10)
advmod(are-10, ultimately-11)
prep(are-10, up-12)
prep_to(up-12, them-14)
aux(make-16, to-15)
xcomp(are-10, make-16)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ naiive)
        (S
          (VP (TO to)
            (VP (VB believe)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT all))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (MD will)
                          (VP (VB take))))))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (JJ strong) (NN voice) (NN repetitively))
                      (VP (VBG shouting)
                        (NP (DT the) (NN abstinence) (NN mantra))
                        (SBAR (IN in) (NN order)
                          (S
                            (VP (TO to)
                              (VP (VB keep)
                                (NP (NNS people))
                                (PP (IN from)
                                  (S
                                    (VP (VBG having)
                                      (NP (JJ premarital) (NN sex)))))))))))))))))))
    (. .)))

nsubj(naiive-3, It-1)
cop(naiive-3, 's-2)
root(ROOT-0, naiive-3)
aux(believe-5, to-4)
xcomp(naiive-3, believe-5)
complm(repetitively-15, that-6)
dobj(take-10, all-7)
nsubj(repetitively-15, all-7)
nsubj(take-10, it-8)
aux(take-10, will-9)
rcmod(all-7, take-10)
cop(repetitively-15, is-11)
det(repetitively-15, a-12)
amod(repetitively-15, strong-13)
nn(repetitively-15, voice-14)
ccomp(believe-5, repetitively-15)
partmod(repetitively-15, shouting-16)
det(mantra-19, the-17)
nn(mantra-19, abstinence-18)
dobj(shouting-16, mantra-19)
mark(keep-23, in-20)
dep(keep-23, order-21)
aux(keep-23, to-22)
purpcl(shouting-16, keep-23)
dobj(keep-23, people-24)
prepc_from(keep-23, having-26)
amod(sex-28, premarital-27)
dobj(having-26, sex-28)

(ROOT
  (S
    (NP (NNP Abstinence))
    (VP (VBZ is)
      (VP (VB fail)
        (NP (NN proof))))
    (. .)))

nsubj(fail-3, Abstinence-1)
aux(fail-3, is-2)
root(ROOT-0, fail-3)
dobj(fail-3, proof-4)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB fail)
          (PP (TO to)
            (NP (NN abstain))))))
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (VP (VBG abstaining)))))
      (NP (PRP you))
      (VP (MD will)
        (ADVP (RB never))
        (VP (VB get)
          (ADJP (JJ pregnant)))))
    (. .)))

nsubj(fail-3, You-1)
aux(fail-3, may-2)
root(ROOT-0, fail-3)
prep_to(fail-3, abstain-5)
mark(abstaining-10, if-7)
nsubj(abstaining-10, you-8)
aux(abstaining-10, are-9)
advcl(pregnant-15, abstaining-10)
nsubj(pregnant-15, you-11)
aux(pregnant-15, will-12)
neg(pregnant-15, never-13)
dep(pregnant-15, get-14)
conj_but(fail-3, pregnant-15)

(ROOT
  (S
    (ADVP (RB However))
    (NP (NN contraception))
    (VP (VBZ is) (RB not)
      (ADVP (RB so)))
    (. .)))

advmod(is-3, However-1)
nsubj(is-3, contraception-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
advmod(is-3, so-5)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (ADVP (RB also))
        (VP (VB fail)
          (S
            (VP (TO to)
              (VP (VB use)
                (NP (PRP it))))))))
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP use)
            (NP (PRP it)))))
      (, ,)
      (NP (PRP it))
      (VP (MD can)
        (VP (VB fail))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB get)
          (ADJP (JJ pregnant)))))
    (. .)))

nsubj(fail-4, You-1)
xsubj(use-6, You-1)
aux(fail-4, can-2)
advmod(fail-4, also-3)
root(ROOT-0, fail-4)
aux(use-6, to-5)
xcomp(fail-4, use-6)
dobj(use-6, it-7)
mark(use-11, if-9)
nsubj(use-11, you-10)
advcl(fail-16, use-11)
dobj(use-11, it-12)
nsubj(fail-16, it-14)
aux(fail-16, can-15)
conj_but(fail-4, fail-16)
nsubj(pregnant-21, you-18)
aux(pregnant-21, will-19)
dep(pregnant-21, get-20)
conj_and(fail-4, pregnant-21)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (RB that) (JJ simple)))
    (. .)))

nsubj(simple-4, It-1)
cop(simple-4, 's-2)
advmod(simple-4, that-3)
root(ROOT-0, simple-4)

(ROOT
  (S (-LRB- -LRB-)
    (S (CC And)
      (NP (DT those))
      (VP (VBZ impulses)))
    (CC and)
    (S
      (NP (NNS desires))
      (VP (VBP are) (RB not)
        (ADJP (JJ wrong))))
    (. .) (-RRB- -RRB-)))

nsubj(impulses-4, those-3)
root(ROOT-0, impulses-4)
nsubj(wrong-9, desires-6)
cop(wrong-9, are-7)
neg(wrong-9, not-8)
conj_and(impulses-4, wrong-9)

(ROOT
  (S (CC And)
    (NP (DT this))
    (VP (VBZ is)
      (NP (DT a) (JJ fine) (NN way)
        (S
          (VP (TO to)
            (VP (VB teach)
              (NP (JJ sexual) (NN education)))))))
    (. .)))

cc(way-6, And-1)
nsubj(way-6, this-2)
cop(way-6, is-3)
det(way-6, a-4)
amod(way-6, fine-5)
root(ROOT-0, way-6)
aux(teach-8, to-7)
infmod(way-6, teach-8)
amod(education-10, sexual-9)
dobj(teach-8, education-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm) (RB not)
        (PP (IN against)
          (NP (DT an) (JJ abstinent-leaning) (NN program)))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (CD one))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ does) (RB not)
              (VP (VB promote)
                (NP (JJ healthy) (JJ sexual) (NNS habits))
                (ADVP (IN at) (DT all)))))))
      (VP (VBZ is)
        (ADJP (JJ dangerous))))
    (. .)))

nsubj('m-2, I-1)
root(ROOT-0, 'm-2)
neg('m-2, not-3)
det(program-7, an-5)
amod(program-7, abstinent-leaning-6)
prep_against('m-2, program-7)
nsubj(promote-14, one-10)
nsubj(dangerous-21, one-10)
aux(promote-14, does-12)
neg(promote-14, not-13)
rcmod(one-10, promote-14)
amod(habits-17, healthy-15)
amod(habits-17, sexual-16)
dobj(promote-14, habits-17)
advmod(promote-14, at-18)
pobj(at-18, all-19)
cop(dangerous-21, is-20)
conj_but('m-2, dangerous-21)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 've)
      (VP (VBN got)
        (S
          (VP (TO to)
            (VP (VB take)
              (PP (IN into)
                (NP (NN account)))
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (MD will)
                      (VP (VB fail)
                        (PP (TO to)
                          (NP (NN abstain)))))))))))))
    (. .)))

nsubj(got-3, We-1)
xsubj(take-5, We-1)
aux(got-3, 've-2)
root(ROOT-0, got-3)
aux(take-5, to-4)
xcomp(got-3, take-5)
prep_into(take-5, account-7)
dobj(take-5, those-8)
nsubj(fail-11, those-8)
aux(fail-11, will-10)
rcmod(those-8, fail-11)
prep_to(fail-11, abstain-13)

(ROOT
  (S (RB Not)
    (S
      (VP (VBG doing)
        (ADVP (RB so))))
    (VP (VBZ is)
      (ADJP (JJ heartless)))
    (. .)))

neg(heartless-5, Not-1)
csubj(heartless-5, doing-2)
advmod(doing-2, so-3)
cop(heartless-5, is-4)
root(ROOT-0, heartless-5)

(ROOT
  (S
    (ADVP (RB As) (RB far)
      (SBAR (IN as)
        (S
          (NP (DT the) (NNP Ted) (NNP Bundy) (NN bit))
          (VP (VBZ goes)))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB really))
    (VP (VB see)
      (NP (DT no) (NN bearing))
      (ADVP (RB here)))
    (. .)))

advmod(far-2, As-1)
advmod(see-12, far-2)
mark(goes-8, as-3)
det(bit-7, the-4)
nn(bit-7, Ted-5)
nn(bit-7, Bundy-6)
nsubj(goes-8, bit-7)
ccomp(far-2, goes-8)
nsubj(see-12, I-10)
advmod(see-12, really-11)
root(ROOT-0, see-12)
det(bearing-14, no-13)
dobj(see-12, bearing-14)
advmod(see-12, here-15)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (ADVP (RB specifically))
      (VP (VBG regarding)
        (NP
          (NP (NN pornography))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP I))
              (VP (MD 'd)
                (VP (VB be)
                  (ADJP (JJ glad)
                    (S
                      (VP (TO to)
                        (VP (VB debate)
                          (NP
                            (NP (DT the) (NNS merits))
                            (PP (IN of)
                              (PP (IN in)
                                (NP (DT another) (NN debate))))))))))))))))
    (. .)))

nsubj(regarding-4, That-1)
aux(regarding-4, 's-2)
advmod(regarding-4, specifically-3)
root(ROOT-0, regarding-4)
dobj(regarding-4, pornography-5)
dobj(glad-11, pornography-5)
rel(glad-11, which-7)
nsubj(glad-11, I-8)
aux(glad-11, 'd-9)
cop(glad-11, be-10)
rcmod(pornography-5, glad-11)
aux(debate-13, to-12)
xcomp(glad-11, debate-13)
det(merits-15, the-14)
dobj(debate-13, merits-15)
prep(merits-15, of-16)
pcomp(of-16, in-17)
det(debate-19, another-18)
prep_in(of-16, debate-19)

(ROOT
  (S
    (S
      (NP (NNP Final))
      (VP (VBD thought)))
    (: :)
    (S
      (NP (NNP Morals))
      (VP (VBP are)
        (ADJP (JJ relative))
        (, ,)
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT all))
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP 'm)
                      (VP (VBG trying)
                        (S
                          (VP (TO to)
                            (VP (VB push)
                              (PP (IN on)
                                (NP (PRP you))))))))))))))))
    (. .)))

nsubj(thought-2, Final-1)
root(ROOT-0, thought-2)
nsubj(relative-6, Morals-4)
cop(relative-6, are-5)
parataxis(thought-2, relative-6)
nsubj(all-10, which-8)
cop(all-10, is-9)
ccomp(relative-6, all-10)
dobj(trying-13, all-10)
nsubj(trying-13, I-11)
xsubj(push-15, I-11)
aux(trying-13, 'm-12)
rcmod(all-10, trying-13)
aux(push-15, to-14)
xcomp(trying-13, push-15)
prep_on(push-15, you-17)

(ROOT
  (S
    (NP (PRP$ My) (JJ only) (`` ``)
      (NX (NNP push))
      ('' ''))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (RB not)
          (VP (VB push)
            (NP (NN legislation))
            (PP (IN on)
              (NP
                (NP (NNS others))
                (VP (VBN based)
                  (ADVP (RB solely))
                  (PP (IN on)
                    (NP (PRP$ your) (JJ moral) (NNS beliefs))))))))))
    (. .)))

poss(push-4, My-1)
amod(push-4, only-2)
nsubj(is-6, push-4)
root(ROOT-0, is-6)
complm(push-10, that-7)
nsubj(push-10, you-8)
neg(push-10, not-9)
ccomp(is-6, push-10)
dobj(push-10, legislation-11)
prep_on(push-10, others-13)
partmod(others-13, based-14)
advmod(based-14, solely-15)
poss(beliefs-19, your-17)
amod(beliefs-19, moral-18)
prep_on(based-14, beliefs-19)

(ROOT
  (S
    (S
      (VP (VBG Acting)
        (PP (IN upon)
          (NP (PRP them)))))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (NN matter))
        (PP (IN of)
          (NP (NNS ethics)
            (CC or)
            (NN morality)))))
    (. .)))

csubj(matter-7, Acting-1)
prep_upon(Acting-1, them-3)
cop(matter-7, is-4)
neg(matter-7, not-5)
det(matter-7, a-6)
root(ROOT-0, matter-7)
prep_of(matter-7, ethics-9)
prep_of(matter-7, morality-11)
conj_or(ethics-9, morality-11)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB never))
      (VP (VBN understood)
        (SBAR
          (WHADVP (WRB how))
          (S
            (NP (JJ sexual) (NN activity))
            (VP (VBD came)
              (PP (IN under)
                (NP (DT the) (NN morality) (NN umbrella)))
              (S
                (VP (TO to)
                  (VP (VB begin)
                    (PP (IN with))))))))))
    (. .)))

nsubj(understood-4, I-1)
aux(understood-4, 've-2)
neg(understood-4, never-3)
root(ROOT-0, understood-4)
advmod(came-8, how-5)
amod(activity-7, sexual-6)
nsubj(came-8, activity-7)
xsubj(begin-14, activity-7)
ccomp(understood-4, came-8)
det(umbrella-12, the-10)
nn(umbrella-12, morality-11)
prep_under(came-8, umbrella-12)
aux(begin-14, to-13)
xcomp(came-8, begin-14)
prep(begin-14, with-15)

(ROOT
  (S
    (ADVP (RB So) (RB long)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ consensual))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ 's)
      (NP (DT no) (NN justification)))
    (. .)))

advmod(long-2, So-1)
advmod('s-9, long-2)
mark(consensual-6, as-3)
nsubj(consensual-6, it-4)
cop(consensual-6, is-5)
ccomp(long-2, consensual-6)
expl('s-9, there-8)
root(ROOT-0, 's-9)
det(justification-11, no-10)
nsubj('s-9, justification-11)

