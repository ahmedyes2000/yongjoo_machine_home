(ROOT
  (S
    (NP (PRP I))
    (VP (VBP find)
      (SBAR
        (S
          (NP
            (NP (DT the) (NN fact))
            (SBAR (IN that)
              (S
                (NP (EX there))
                (VP (VBP are)
                  (NP
                    (NP (NNS instances))
                    (SBAR
                      (WHADVP (WRB where))
                      (S
                        (NP (NNS women))
                        (VP (VBP think)
                          (SBAR (IN that)
                            (S
                              (NP (PRP it))
                              (VP (VBZ is)
                                (ADJP (JJ right)
                                  (S
                                    (VP (TO to)
                                      (VP (VB abort)
                                        (NP
                                          (NP (DT the) (NN birth))
                                          (PP (IN of)
                                            (NP (DT a) (NN child)))))))))))))))))))
          (VP (VBZ is)
            (ADJP (RB incredibly) (JJ outrageous))))))
    (. !)))

nsubj(find-2, I-1)
root(ROOT-0, find-2)
det(fact-4, the-3)
nsubj(is-23, fact-4)
complm(are-7, that-5)
expl(are-7, there-6)
dep(fact-4, are-7)
nsubj(are-7, instances-8)
advmod(think-11, where-9)
nsubj(think-11, women-10)
rcmod(instances-8, think-11)
complm(right-15, that-12)
nsubj(right-15, it-13)
cop(right-15, is-14)
ccomp(think-11, right-15)
aux(abort-17, to-16)
xcomp(right-15, abort-17)
det(birth-19, the-18)
dobj(abort-17, birth-19)
det(child-22, a-21)
prep_of(birth-19, child-22)
ccomp(find-2, is-23)
advmod(outrageous-25, incredibly-24)
acomp(is-23, outrageous-25)

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB think)
          (SBAR (IN that)
            (S
              (NP (NNS people))
              (VP (MD would) (RB rather)
                (VP (VB cut)
                  (PP (IN of)
                    (NP
                      (NP (NN life))
                      (PP (IN in)
                        (NP (PRP$ its) (NN entirety)))))
                  (SBAR (IN than)
                    (S
                      (VP (TO to)
                        (VP (VB take)
                          (NP
                            (NP (JJ wiser) (NNS options))
                            (, ,)
                            (PP (JJ such) (IN as)
                              (S
                                (VP (VBG setting)
                                  (NP (PRP$ their) (NN child))
                                  (PRT (RP up))
                                  (PP (IN for)
                                    (NP (DT an) (NN adoption))))))))))))))))))
    (, ,)
    (CC or)
    (ADVP (RB even) (RB personally))
    (S
      (VP (VBG entrusting)
        (NP (DT the) (NN baby))
        (PP (TO to)
          (NP (NN someone) (NN close)))
        (PP (TO to)
          (NP (PRP them)))))
    (. .)))

aux(think-2, To-1)
root(ROOT-0, think-2)
complm(cut-7, that-3)
nsubj(cut-7, people-4)
aux(cut-7, would-5)
advmod(cut-7, rather-6)
ccomp(think-2, cut-7)
prep_of(cut-7, life-9)
poss(entirety-12, its-11)
prep_in(life-9, entirety-12)
mark(take-15, than-13)
aux(take-15, to-14)
advcl(cut-7, take-15)
xcomp(cut-7, take-15)
amod(options-17, wiser-16)
dobj(take-15, options-17)
prepc_such_as(options-17, setting-21)
poss(child-23, their-22)
dobj(setting-21, child-23)
prt(setting-21, up-24)
det(adoption-27, an-26)
prep_for(setting-21, adoption-27)
advmod(personally-31, even-30)
advmod(think-2, personally-31)
conj_or(think-2, personally-31)
conj_or(think-2, entrusting-32)
det(baby-34, the-33)
dobj(entrusting-32, baby-34)
nn(close-37, someone-36)
prep_to(entrusting-32, close-37)
prep_to(entrusting-32, them-39)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP I))
          (VP (MD could) (`` ``)
            (ADVP (RB personally))
            ('' '')
            (VP (VB define)
              (NP (DT the) (NN word) (`` ``) (NN abortion) (, ,) ('' ''))))))
      (ADVP (RB then))
      (NP (PRP it))
      (VP (MD would)
        (VP (VB be)
          (SBAR (IN as)
            (S
              (VP (VBZ follows) (: :) (`` ``)
                (S
                  (NP
                    (NP (NNP ABORTION))
                    (: :)
                    (NP
                      (NP (DT The) (NN term))
                      (SBAR
                        (S
                          (VP (VBZ refers)
                            (PP (TO to)
                              (NP (DT the) (JJ irrational) (NN decision))))))))
                  (VP (TO to)
                    (VP (VB KILL)
                      (NP (DT the) (NN child))
                      (SBAR (IN before)
                        (S
                          (NP (PRP it))
                          (VP (VBZ has)
                            (VP (VBN been)
                              (VP (VBN birthed)
                                (PP (IN from)
                                  (NP (DT the) (NN womb))))))))
                      ('' ')
                      (PRN
                        (S
                          (NP (PRP I))
                          (VP (VBP am) (RB not)
                            (VP (VBG going)
                              (PP (TO to)
                                (NP (JJ sugar-coat) (NNS abortions)))))))
                      (, ,)
                      (SBAR (IN because)
                        (S
                          (NP (PRP it))
                          (VP (VBZ 's)
                            (ADJP (JJ true))))))))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADJP (NN nothing) (JJ short)
        (PP (IN of)
          (NP (NN murder)))))
    (. !)))

mark(define-7, If-1)
nsubj(define-7, I-2)
aux(define-7, could-3)
advmod(define-7, personally-5)
advcl(be-17, define-7)
det(abortion-11, the-8)
nn(abortion-11, word-9)
dobj(define-7, abortion-11)
advmod(be-17, then-14)
nsubj(be-17, it-15)
aux(be-17, would-16)
ccomp(short-60, be-17)
mark(follows-19, as-18)
advcl(be-17, follows-19)
nsubj(KILL-32, ABORTION-22)
det(term-25, The-24)
dep(ABORTION-22, term-25)
rcmod(term-25, refers-26)
det(decision-30, the-28)
amod(decision-30, irrational-29)
prep_to(refers-26, decision-30)
aux(KILL-32, to-31)
xcomp(follows-19, KILL-32)
det(child-34, the-33)
dobj(KILL-32, child-34)
mark(birthed-39, before-35)
nsubjpass(birthed-39, it-36)
aux(birthed-39, has-37)
auxpass(birthed-39, been-38)
advcl(KILL-32, birthed-39)
det(womb-42, the-41)
prep_from(birthed-39, womb-42)
nsubj(going-47, I-44)
aux(going-47, am-45)
neg(going-47, not-46)
parataxis(KILL-32, going-47)
amod(abortions-50, sugar-coat-49)
prep_to(going-47, abortions-50)
mark(true-55, because-52)
nsubj(true-55, it-53)
cop(true-55, 's-54)
advcl(KILL-32, true-55)
nsubj(short-60, they-57)
cop(short-60, are-58)
dep(short-60, nothing-59)
root(ROOT-0, short-60)
prep_of(short-60, murder-62)

(ROOT
  (S
    (S (`` ``)
      (S
        (NP (DT The) (NNS children))
        (VP (VBP are)
          (VP (VBN killed)
            (SBAR (IN before)
              (S
                (NP (PRP they))
                (VP (MD can)
                  (ADVP (RB even))
                  (VP (VB process)
                    (NP (DT the) (NN thought)))))))))
      ('' '')
      (VP (VBZ is)
        (NP (CD one) (NN term))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP have)
              (VP (VBN seen)
                (NP (DT a) (JJ few) (NNS times))
                (PP (IN in)
                  (NP (DT this) (NN debate)))))))
        (PRN (-LRB- -LRB-)
          (S
            (S
              (PP (IN of)
                (NP (NN course)))
              (NP (PRP they))
              (VP (VBP have)
                (VP (VBN been)
                  (VP (VBN worded)
                    (ADVP (RB differently))))))
            (, ,)
            (CC but)
            (S
              (ADVP (RB again))
              (, ,)
              (NP (PRP I))
              (VP (VBP am) (RB not)
                (ADVP (RB here))
                (S
                  (VP (TO to)
                    (VP (VB sugar-coat)
                      (NP
                        (NP (DT this) (NN sort))
                        (PP (IN of)
                          (NP (NN thing))))))))))
          (-RRB- -RRB-))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD can)
        (VP (VB say)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN mother\/father))
              (VP (VBZ has)
                (VP (VBN STOLEN)
                  (NP
                    (NP (DT the) (NN right)
                      (CC and)
                      (NN privilege))
                    (PP (IN of)
                      (NP (NN thought))))
                  (PP (IN from)
                    (NP (DT these) (NNS children)))
                  (PP (IN by)
                    (S
                      (VP (VBG killing)
                        (NP (PRP them))))))))))))
    (. .)))

det(children-3, The-2)
nsubjpass(killed-5, children-3)
auxpass(killed-5, are-4)
ccomp(term-16, killed-5)
csubj(term-16, killed-5)
mark(process-10, before-6)
nsubj(process-10, they-7)
aux(process-10, can-8)
advmod(process-10, even-9)
advcl(killed-5, process-10)
det(thought-12, the-11)
dobj(process-10, thought-12)
cop(term-16, is-14)
num(term-16, one-15)
root(ROOT-0, term-16)
complm(seen-20, that-17)
nsubj(seen-20, I-18)
aux(seen-20, have-19)
ccomp(term-16, seen-20)
det(times-23, a-21)
amod(times-23, few-22)
dobj(seen-20, times-23)
det(debate-26, this-25)
prep_in(seen-20, debate-26)
prep_of(worded-33, course-29)
nsubjpass(worded-33, they-30)
aux(worded-33, have-31)
auxpass(worded-33, been-32)
parataxis(term-16, worded-33)
advmod(worded-33, differently-34)
advmod(am-40, again-37)
nsubj(am-40, I-39)
xsubj(sugar-coat-44, I-39)
parataxis(term-16, am-40)
conj_but(worded-33, am-40)
neg(am-40, not-41)
advmod(am-40, here-42)
aux(sugar-coat-44, to-43)
xcomp(am-40, sugar-coat-44)
det(sort-46, this-45)
dobj(sugar-coat-44, sort-46)
prep_of(sort-46, thing-48)
nsubj(say-54, I-52)
aux(say-54, can-53)
conj_and(term-16, say-54)
complm(STOLEN-59, that-55)
det(mother\/father-57, the-56)
nsubj(STOLEN-59, mother\/father-57)
aux(STOLEN-59, has-58)
ccomp(say-54, STOLEN-59)
det(right-61, the-60)
dobj(STOLEN-59, right-61)
dobj(STOLEN-59, privilege-63)
conj_and(right-61, privilege-63)
prep_of(right-61, thought-65)
det(children-68, these-67)
prep_from(STOLEN-59, children-68)
prepc_by(STOLEN-59, killing-70)
dobj(killing-70, them-71)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP have)
        (ADVP (RB also))
        (VP (VBN denied)
          (NP (PRP them))
          (PP (IN of)
            (NP
              (NP (NN love))
              (, ,)
              (NP (NN care))
              (, ,)
              (NP (NN protection))
              (CC and)
              (NP
                (NP (JJS most))
                (PP (IN of)
                  (NP (DT all)))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP have)
      (VP (VBN denied)
        (NP (PRP them))
        (PP (IN of)
          (NP (DT a) (NN life)))))
    (. .)))

nsubj(denied-4, They-1)
aux(denied-4, have-2)
advmod(denied-4, also-3)
ccomp(denied-19, denied-4)
dobj(denied-4, them-5)
prep_of(denied-4, love-7)
prep_of(denied-4, care-9)
conj_and(love-7, care-9)
prep_of(denied-4, protection-11)
conj_and(love-7, protection-11)
prep_of(denied-4, most-13)
conj_and(love-7, most-13)
prep_of(most-13, all-15)
nsubj(denied-19, they-17)
aux(denied-19, have-18)
root(ROOT-0, denied-19)
dobj(denied-19, them-20)
det(life-23, a-22)
prep_of(denied-19, life-23)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (VP (VBN stated)
            (ADVP (RB previously))))))
    (, ,)
    (NP (PRP I))
    (VP (MD can) (RB not)
      (ADVP (RB even))
      (VP (VB begin)
        (S
          (VP (TO to)
            (VP (VB understand)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (RB so) (JJ many) (JJ pregnant) (NNS women))
                  (VP (VBP do) (RB not)
                    (VP (VB consider)
                      (S
                        (VP
                          (VP (VBG putting)
                            (ADVP
                              (NP (DT the) (NN child))
                              (RB up))
                            (PP (IN for)
                              (NP (DT an) (NN adoption))))
                          (CONJP (RB rather) (IN than))
                          (VP
                            (ADVP (RB simply))
                            (VBG cutting)
                            (NP (DT the) (NN child))
                            (ADVP (RB off) (RB completely))))))))))))))
    (. !)))

mark(stated-4, As-1)
nsubj(stated-4, I-2)
aux(stated-4, have-3)
advcl(begin-11, stated-4)
advmod(stated-4, previously-5)
nsubj(begin-11, I-7)
xsubj(understand-13, I-7)
aux(begin-11, can-8)
neg(begin-11, not-9)
advmod(begin-11, even-10)
root(ROOT-0, begin-11)
aux(understand-13, to-12)
xcomp(begin-11, understand-13)
advmod(consider-21, why-14)
advmod(women-18, so-15)
amod(women-18, many-16)
amod(women-18, pregnant-17)
nsubj(consider-21, women-18)
aux(consider-21, do-19)
neg(consider-21, not-20)
advcl(understand-13, consider-21)
ccomp(consider-21, putting-22)
det(child-24, the-23)
npadvmod(up-25, child-24)
advmod(putting-22, up-25)
det(adoption-28, an-27)
prep_for(putting-22, adoption-28)
advmod(cutting-32, simply-31)
ccomp(consider-21, cutting-32)
conj_negcc(putting-22, cutting-32)
det(child-34, the-33)
dobj(cutting-32, child-34)
advmod(completely-36, off-35)
advmod(cutting-32, completely-36)

(ROOT
  (S
    (ADVP (RB Surely))
    (NP
      (NP (DT the) (NN majority))
      (PP (IN of)
        (NP (PRP you))))
    (NP (DT all))
    (VP (MD would)
      (VP (VB agree)
        (PP (IN with)
          (NP (PRP me)))
        (SBAR (IN that)
          (S
            (NP (DT a) (NN child))
            (VP (VBZ has)
              (NP (PRP$ its) (NNS rights)))))
        (SBAR (RB even) (IN if)
          (S
            (NP (PRP it))
            (VP (MD can) (RB not)
              (VP (VB understand)
                (NP (PRP them))))))))
    (. !)))

advmod(agree-8, Surely-1)
det(majority-3, the-2)
nsubj(agree-8, majority-3)
prep_of(majority-3, you-5)
nsubj(agree-8, all-6)
aux(agree-8, would-7)
root(ROOT-0, agree-8)
prep_with(agree-8, me-10)
complm(has-14, that-11)
det(child-13, a-12)
nsubj(has-14, child-13)
ccomp(agree-8, has-14)
poss(rights-16, its-15)
dobj(has-14, rights-16)
advmod(understand-22, even-17)
dep(understand-22, if-18)
nsubj(understand-22, it-19)
aux(understand-22, can-20)
neg(understand-22, not-21)
ccomp(agree-8, understand-22)
dobj(understand-22, them-23)

(ROOT
  (S
    (S (CC But)
      (SBAR
        (NP (DT the) (NN second))
        (IN that)
        (S
          (NP (DT an) (NN abortion))
          (VP (VBZ begins))))
      (, ,)
      (NP (PRP you))
      (VP (VBP have)
        (VP (VBN stripped)
          (NP
            (NP (DT that) (NN child))
            (PP (IN of)
              (NP
                (NP (PRP it) (POS 's))
                (NNS rights)))))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (ADVP (DT no) (NN way)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP (MD can)
                (ADVP (RB ever))
                (VP (VB make)
                  (NP (NNS amends)))))))))
    (. .)))

det(second-3, the-2)
dep(begins-7, second-3)
dep(begins-7, that-4)
det(abortion-6, an-5)
nsubj(begins-7, abortion-6)
dep(stripped-11, begins-7)
nsubj(stripped-11, you-9)
nsubj(is-21, you-9)
aux(stripped-11, have-10)
root(ROOT-0, stripped-11)
det(child-13, that-12)
dobj(stripped-11, child-13)
poss(rights-17, it-15)
prep_of(child-13, rights-17)
expl(is-21, there-20)
conj_and(stripped-11, is-21)
dep(way-23, no-22)
advmod(is-21, way-23)
complm(make-28, that-24)
nsubj(make-28, you-25)
aux(make-28, can-26)
advmod(make-28, ever-27)
ccomp(way-23, make-28)
dobj(make-28, amends-29)

(ROOT
  (S (CC And)
    (S
      (INTJ (UH no))
      (, ,)
      (NP (PRP I))
      (VP (VBP am) (RB not)
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB send)
                (NP (NN anyone))
                (PP (IN on)
                  (NP (DT a) (NN guilt-trip)))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB be)
          (ADJP (JJ glad)
            (S
              (VP (TO to)
                (VP (VB know)
                  (SBAR (IN that)
                    (S
                      (NP
                        (NP (DT some))
                        (PP (IN of)
                          (NP (PRP you))))
                      (VP (VBP have)
                        (VP (VBN come)
                          (S
                            (VP
                              (VP (TO to)
                                (VP (VB realize)
                                  (SBAR
                                    (WHNP (WP what))
                                    (S
                                      (NP (RB exactly) (DT an) (NN abortion))
                                      (VP (VBZ does))))))
                              (, ,)
                              (CC and)
                              (RB not)
                              (VP
                                (ADVP (RB just))
                                (TO to)
                                (VP (VB think)
                                  (PP (IN of)
                                    (NP (DT the) (NN process)))
                                  (PP (IN as) (`` ``)
                                    (S
                                      (VP (VBG stabbing)
                                        (NP (NN someone))
                                        (PP (IN in)
                                          (NP (DT the) (NN vagina)))))))))))))))))))))
    (. .)))

dep(trying-7, no-2)
nsubj(trying-7, I-4)
xsubj(send-9, I-4)
aux(trying-7, am-5)
neg(trying-7, not-6)
root(ROOT-0, trying-7)
aux(send-9, to-8)
xcomp(trying-7, send-9)
dobj(send-9, anyone-10)
det(guilt-trip-13, a-12)
prep_on(send-9, guilt-trip-13)
nsubj(glad-19, I-16)
aux(glad-19, would-17)
cop(glad-19, be-18)
conj_but(trying-7, glad-19)
aux(know-21, to-20)
xcomp(glad-19, know-21)
complm(come-27, that-22)
nsubj(come-27, some-23)
prep_of(some-23, you-25)
aux(come-27, have-26)
ccomp(know-21, come-27)
aux(realize-29, to-28)
ccomp(come-27, realize-29)
dobj(does-34, what-30)
advmod(abortion-33, exactly-31)
det(abortion-33, an-32)
nsubj(does-34, abortion-33)
ccomp(realize-29, does-34)
ccomp(come-27, not-37)
conj_and(realize-29, not-37)
neg(realize-29, not-37)
advmod(think-40, just-38)
aux(think-40, to-39)
dep(realize-29, think-40)
det(process-43, the-42)
prep_of(think-40, process-43)
prep(think-40, as-44)
dep(as-44, stabbing-46)
dobj(stabbing-46, someone-47)
det(vagina-50, the-49)
prep_in(stabbing-46, vagina-50)

