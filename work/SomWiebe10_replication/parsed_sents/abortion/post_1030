(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN seen) ('' '')
          (NP (NNP Silent) (NNP Scream))
          ('' '')
          (NP (CD four) (NNS times) (RB already)))))
    (: ;)
    (S
      (S
        (NP (PRP I))
        (VP (VBD was)
          (ADJP (JJ convent-schooled))))
      (CC and)
      (S
        (ADVP (RB thus))
        (ADVP (RB unsurprisingly))
        (NP (PRP I))
        (VP (VBP 've)
          (VP (VBN been)
            (VP (VBN shown)
              (NP
                (NP (NNS lots))
                (PP (IN of)
                  (NP
                    (ADJP (RB graphically) (JJ disgusting))
                    (NN abortion) (NNS pictures)))))))))
    (. .)))

nsubj(seen-3, I-1)
aux(seen-3, 've-2)
root(ROOT-0, seen-3)
nn(Scream-6, Silent-5)
dobj(seen-3, Scream-6)
num(times-9, four-8)
dobj(seen-3, times-9)
advmod(times-9, already-10)
nsubj(convent-schooled-14, I-12)
cop(convent-schooled-14, was-13)
parataxis(seen-3, convent-schooled-14)
advmod(shown-21, thus-16)
advmod(shown-21, unsurprisingly-17)
nsubjpass(shown-21, I-18)
aux(shown-21, 've-19)
auxpass(shown-21, been-20)
parataxis(seen-3, shown-21)
conj_and(convent-schooled-14, shown-21)
dobj(shown-21, lots-22)
advmod(disgusting-25, graphically-24)
amod(pictures-27, disgusting-25)
nn(pictures-27, abortion-26)
prep_of(lots-22, pictures-27)

(ROOT
  (S (CC And)
    (NP (NN y'))
    (VP (VBP know)
      (NP (WP what)))
    (. ?)))

cc(know-3, And-1)
nsubj(know-3, y'-2)
root(ROOT-0, know-3)
dobj(know-3, what-4)

(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (PRP they))
        (VP (MD ca) (RB n't)
          (VP
            (VP (VB think))
            (, ,)
            (VP (VB feel))
            (, ,)
            (VP (VB see))
            (, ,)
            (VP (VB hear))
            (, ,)
            (CC or)
            (VP (VB remember)
              (PP (IN than)
                (PP (IN by)
                  (NP (DT all) (NNS means)))))))))
    (, ,)
    (VP (VB kill)
      (NP (NN em)))
    (. .)))

mark(think-5, if-1)
nsubj(think-5, they-2)
nsubj(feel-7, they-2)
nsubj(see-9, they-2)
nsubj(hear-11, they-2)
nsubj(remember-14, they-2)
aux(think-5, ca-3)
neg(think-5, n't-4)
advcl(kill-20, think-5)
conj_or(think-5, feel-7)
advcl(kill-20, feel-7)
conj_or(think-5, see-9)
advcl(kill-20, see-9)
conj_or(think-5, hear-11)
advcl(kill-20, hear-11)
conj_or(think-5, remember-14)
advcl(kill-20, remember-14)
prep(remember-14, than-15)
pcomp(than-15, by-16)
det(means-18, all-17)
prep_by(than-15, means-18)
root(ROOT-0, kill-20)
dobj(kill-20, em-21)

(ROOT
  (S ('' '')
    (S
      (ADVP (IN So)
        (NP
          (NP (DT this) (JJ new) (NN argument))
          (ADVP (RB that) ('' ''))))
      (NP (NNP Silent) (NNP Scream))
      ('' '')
      (VP (VBZ contradicts)
        (NP
          (NP (PRP$ your) (JJR earlier) (NN premise))
          (SBAR (IN that)
            (S
              (NP (DT the) (NN fetus))
              (VP (VBZ does)
                (S
                  (NP (NNP NOT))
                  (`` ``)
                  (VP (VB think) (, ,) (VB feel) (, ,) (VB see)))))))))
    (, ,)
    (CC or)
    (S
      (NP (NNP hear))
      ('' '')
      (VP (VBZ is)
        (ADVP (RB simply))
        (ADJP
          (ADVP (RB logically))
          (JJ inconsistent))))
    (. .)))

advmod(contradicts-11, So-2)
det(argument-5, this-3)
amod(argument-5, new-4)
pobj(So-2, argument-5)
advmod(argument-5, that-6)
nn(Scream-9, Silent-8)
nsubj(contradicts-11, Scream-9)
root(ROOT-0, contradicts-11)
poss(premise-14, your-12)
amod(premise-14, earlier-13)
dobj(contradicts-11, premise-14)
dobj(does-18, premise-14)
complm(does-18, that-15)
det(fetus-17, the-16)
nsubj(does-18, fetus-17)
dep(premise-14, does-18)
nsubj(think-21, NOT-19)
ccomp(does-18, think-21)
dep(think-21, feel-23)
dep(think-21, see-25)
nsubj(inconsistent-33, hear-28)
cop(inconsistent-33, is-30)
advmod(inconsistent-33, simply-31)
advmod(inconsistent-33, logically-32)
conj_or(contradicts-11, inconsistent-33)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADVP (RB still))
      (VP
        (ADVP (RB not) (RB remotely))
        (VBN persuaded)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ preferable)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB ruin)
                        (NP
                          (NP (NNS women) (POS 's))
                          (NNS lives)))
                      (CC or)
                      (VP (VB leave)
                        (S
                          (NP (PRP them))
                          (VP (TO to)
                            (VP (VB die)
                              (PP (IN in)
                                (NP (JJ back) (NNS alleys))))))))))))))))
    (. .)))

nsubjpass(persuaded-6, I-1)
auxpass(persuaded-6, 'm-2)
advmod(persuaded-6, still-3)
dep(remotely-5, not-4)
advmod(persuaded-6, remotely-5)
root(ROOT-0, persuaded-6)
complm(preferable-10, that-7)
nsubj(preferable-10, it-8)
cop(preferable-10, is-9)
ccomp(persuaded-6, preferable-10)
aux(ruin-12, to-11)
xcomp(preferable-10, ruin-12)
poss(lives-15, women-13)
dobj(ruin-12, lives-15)
xcomp(preferable-10, leave-17)
conj_or(ruin-12, leave-17)
nsubj(die-20, them-18)
aux(die-20, to-19)
xcomp(leave-17, die-20)
amod(alleys-23, back-22)
prep_in(die-20, alleys-23)

(ROOT
  (FRAG
    (NP (NNP DNA))
    (. ?)))

root(ROOT-0, DNA-1)

(ROOT
  (S
    (NP (PRP$ Your) (NN sperm))
    (VP (VBZ has)
      (NP (NN DNA)))
    (. .)))

poss(sperm-2, Your-1)
nsubj(has-3, sperm-2)
root(ROOT-0, has-3)
dobj(has-3, DNA-4)

(ROOT
  (S
    (NP (PRP$ Your) (NN hair)
      (CC and)
      (NN skin) (NNS cells))
    (VP (VBP have)
      (NP (NN DNA)))
    (. .)))

poss(hair-2, Your-1)
nsubj(have-6, hair-2)
nn(cells-5, skin-4)
conj_and(hair-2, cells-5)
nsubj(have-6, cells-5)
root(ROOT-0, have-6)
dobj(have-6, DNA-7)

(ROOT
  (S
    (NP (PRP$ Your) (NN saliva))
    (VP (VBZ has)
      (NP (NN DNA)))
    (. .)))

poss(saliva-2, Your-1)
nsubj(has-3, saliva-2)
root(ROOT-0, has-3)
dobj(has-3, DNA-4)

(ROOT
  (SQ (VBP Are)
    (NP
      (NP (NN sperm) (, ,) (NN hair) (, ,) (NN skin) (, ,)
        (CC and)
        (NN spit))
      (ADJP
        (ADVP (RB also))
        (JJ human)))
    (ADJP (JJ beings)
      (PP (IN in)
        (NP (PRP$ their) (JJ own) (NNS rights))))
    (. ?)))

cop(beings-12, Are-1)
nsubj(beings-12, sperm-2)
conj_and(sperm-2, hair-4)
nsubj(beings-12, hair-4)
conj_and(sperm-2, skin-6)
nsubj(beings-12, skin-6)
conj_and(sperm-2, spit-9)
nsubj(beings-12, spit-9)
advmod(human-11, also-10)
amod(sperm-2, human-11)
root(ROOT-0, beings-12)
poss(rights-16, their-14)
amod(rights-16, own-15)
prep_in(beings-12, rights-16)

(ROOT
  (S
    (FRAG
      (PP (IN About)
        (NP (`` ``) (NN thinking) (, ,) (NN feeling) (, ,) (NN seeing)
          (CC and)
          (NN hearing))))
    ('' '')
    (NP (PRP you))
    (VP (VBD conceded)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT an) (NN fetus))
            (VP (VBN slated)
              (PP (IN for)
                (NP (NN abortion)))))
          (VP (VBZ is) (RB not)
            (ADJP (JJ capable)
              (PP (IN of)
                (S
                  (VP (VBG doing)
                    (NP (DT these) (NNS things))
                    (PP (IN in)
                      (NP (PRP$ your) (NN post)))
                    (PP (IN above))))))))))
    (. .)))

dep(conceded-12, About-1)
pobj(About-1, thinking-3)
pobj(About-1, feeling-5)
conj_and(thinking-3, feeling-5)
pobj(About-1, seeing-7)
conj_and(thinking-3, seeing-7)
pobj(About-1, hearing-9)
conj_and(thinking-3, hearing-9)
nsubj(conceded-12, you-11)
root(ROOT-0, conceded-12)
complm(capable-21, that-13)
det(fetus-15, an-14)
nsubj(capable-21, fetus-15)
partmod(fetus-15, slated-16)
prep_for(slated-16, abortion-18)
cop(capable-21, is-19)
neg(capable-21, not-20)
ccomp(conceded-12, capable-21)
prepc_of(capable-21, doing-23)
det(things-25, these-24)
dobj(doing-23, things-25)
poss(post-28, your-27)
prep_in(doing-23, post-28)
prep(doing-23, above-29)

(ROOT
  (S
    (VP (VBG '')
      (PP (IN By)
        (NP (PRP$ your) (NN logic))))
    (: ...)))

root(ROOT-0, By-2)
poss(logic-4, your-3)
pobj(By-2, logic-4)

