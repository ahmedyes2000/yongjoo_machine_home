(ROOT
  (FRAG
    (NP (CD 1))
    (. .)))

root(ROOT-0, 1-1)

(ROOT
  (S
    (NP (DT The) (NN left))
    (VP (VBZ is)
      (ADVP (RB generally))
      (NP
        (NP
          (NP (NN anti) (NN war))
          (, ,)
          (NP (JJ pro) (NN healthcare))
          (, ,) (FW pro))
        (VP (VBG helping)
          (NP
            (NP (VBG starving) (NNS people))
            (PP (IN in)
              (NP (NNP Africa)))
            (, ,)
            (NP (FW etc))
            (, ,)
            (SBAR
              (WHNP (DT all)
                (WHPP (IN of)
                  (WHNP (WDT which))))
              (S
                (VP (VBZ saves)
                  (NP (NNS lives)))))))))
    (. .)))

det(left-2, The-1)
nsubj(war-6, left-2)
cop(war-6, is-3)
advmod(war-6, generally-4)
nn(war-6, anti-5)
root(ROOT-0, war-6)
amod(healthcare-9, pro-8)
appos(war-6, healthcare-9)
dep(war-6, pro-11)
partmod(war-6, helping-12)
amod(people-14, starving-13)
dobj(helping-12, people-14)
prep_in(people-14, Africa-16)
appos(people-14, etc-18)
pobj(of-21, etc-18)
dep(of-21, all-20)
nsubj(saves-23, of-21)
rcmod(people-14, saves-23)
rcmod(etc-18, saves-23)
dobj(saves-23, lives-24)

(ROOT
  (S
    (INTJ (RB Sure))
    (, ,)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (NNS bitches))
        (PRN (-LRB- -LRB-)
          (CC and)
          (S
            (NP (PRP I))
            (VP (VBP do) (RB n't)
              (VP (VB use)
                (NP (DT that) (NN term))
                (ADVP (RB lightly)))))
          (-RRB- -RRB-))
        (SBAR
          (WHNP (WP who))
          (S
            (ADVP (RB simply))
            (VP (VBP do) (RB n't)
              (VP (VB care)))))))
    (. .)))

dep(are-4, Sure-1)
expl(are-4, there-3)
root(ROOT-0, are-4)
nsubj(are-4, bitches-5)
nsubj(care-20, bitches-5)
dep(use-11, and-7)
nsubj(use-11, I-8)
aux(use-11, do-9)
neg(use-11, n't-10)
dep(bitches-5, use-11)
det(term-13, that-12)
dobj(use-11, term-13)
advmod(use-11, lightly-14)
advmod(care-20, simply-17)
aux(care-20, do-18)
neg(care-20, n't-19)
rcmod(bitches-5, care-20)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (JJ vast) (JJ vast) (JJ vast) (NN majority))
      (PP (IN of)
        (NP (NNS abortions))))
    (VP (VBP are)
      (VP (VBN performed)
        (PP (IN by)
          (NP
            (NP (NNS women))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP feel)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (ADVP (RB simply))
                      (VP (VBP have)
                        (NP (DT no) (NN choice))))))))))))
    (. .)))

cc(performed-10, But-1)
det(majority-6, the-2)
amod(majority-6, vast-3)
amod(majority-6, vast-4)
amod(majority-6, vast-5)
nsubjpass(performed-10, majority-6)
prep_of(majority-6, abortions-8)
auxpass(performed-10, are-9)
root(ROOT-0, performed-10)
agent(performed-10, women-12)
nsubj(feel-14, women-12)
rcmod(women-12, feel-14)
nsubj(have-17, they-15)
advmod(have-17, simply-16)
ccomp(feel-14, have-17)
det(choice-19, no-18)
dobj(have-17, choice-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is) (RB not)
      (NP (DT a) (NN party)))
    (. .)))

nsubj(party-5, It-1)
cop(party-5, is-2)
neg(party-5, not-3)
det(party-5, a-4)
root(ROOT-0, party-5)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (PRP$ their) (NN choice))
        (, ,)
        (NP
          (NP (NN something))
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP have)
                (S
                  (VP (TO to)
                    (VP (VB live)
                      (PP (IN with)))))))))))
    (. .)))

cc(choice-5, But-1)
nsubj(choice-5, it-2)
cop(choice-5, 's-3)
poss(choice-5, their-4)
root(ROOT-0, choice-5)
appos(choice-5, something-7)
dobj(have-9, something-7)
prep_with(live-11, something-7)
nsubj(have-9, they-8)
xsubj(live-11, they-8)
rcmod(something-7, have-9)
aux(live-11, to-10)
xcomp(have-9, live-11)

(ROOT
  (S
    (NP (RB Not) (DT the) (JJ right) (NN wing))
    (, ,)
    (SBAR (RB not)
      (S
        (NP (PRP you))
        (ADVP (RB personally))))
    (, ,)
    (S
      (ADVP (RB just))
      (NP (PRP her)))
    (, ,)
    (ADVP
      (NP (DT no) (NN one))
      (RB else))
    (VP (VBZ 's)
      (NP (NN business)))
    (. .)))

neg(wing-4, Not-1)
det(wing-4, the-2)
amod(wing-4, right-3)
nsubj(business-17, wing-4)
dep(you-7, not-6)
dep(business-17, you-7)
advmod(you-7, personally-8)
advmod(her-11, just-10)
ccomp(business-17, her-11)
det(one-14, no-13)
npadvmod(else-15, one-14)
advmod(business-17, else-15)
cop(business-17, 's-16)
root(ROOT-0, business-17)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NN thing))
      (VP (VBG making)
        (S
          (NP (NNS abortions))
          (ADJP (JJ illegal))
          (S
            (VP (MD would)
              (VP (VB change)))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN number))
        (PP (IN of)
          (NP
            (NP (NNS mothers))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP die)
                  (PP (IN with)
                    (NP (DT the) (NN child))))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, only-2)
nsubj(number-11, thing-3)
partmod(thing-3, making-4)
nsubj(change-8, abortions-5)
dep(change-8, illegal-6)
aux(change-8, would-7)
xcomp(making-4, change-8)
cop(number-11, is-9)
det(number-11, the-10)
root(ROOT-0, number-11)
prep_of(number-11, mothers-13)
nsubj(die-15, mothers-13)
rcmod(mothers-13, die-15)
det(child-18, the-17)
prep_with(die-15, child-18)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ changes)
              (ADVP (DT no) (NN matter)
                (SBAR
                  (WHADVP (WRB how))
                  (S
                    (NP
                      (NP (RB pretty) (DT this) (JJ anti) (NN abortion) (NN idea))
                      (SBAR (IN that) (`` ``)
                        (S
                          (SBAR (IN if)
                            (S
                              (NP (PRP we))
                              (ADVP (RB just))
                              (VP (VB shove)
                                (S
                                  (NP (WDT what))
                                  (NP (PRP we))))))
                          (ADVP (RB really))
                          (ADVP (RB really))
                          (VP
                            (ADVP (RB really))
                            (VBP feel)
                            (PRT (RP down))
                            (NP
                              (NP (NN everyone) (POS 's))
                              (NN throat) (NN everyone))))))
                    (VP (MD will)
                      (VP (VB live)
                        (ADVP (RB happily))
                        (ADVP (RB ever)))))))))))
      (PP (IN after))
      (, ,)
      (ADJP (JJ amen))
      ('' '')
      (SBAR (IN that)
        (S
          (VP (VBZ 's) (RB not)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP it))
                (VP (VBZ works))))))))
    (. .)))

nsubj(amen-37, That-1)
cop(amen-37, 's-2)
dobj(changes-5, all-3)
attr(amen-37, all-3)
nsubj(changes-5, it-4)
rcmod(all-3, changes-5)
dep(matter-7, no-6)
advmod(changes-5, matter-7)
advmod(live-32, how-8)
advmod(idea-13, pretty-9)
det(idea-13, this-10)
amod(idea-13, anti-11)
nn(idea-13, abortion-12)
nsubj(live-32, idea-13)
complm(feel-25, that-14)
mark(shove-19, if-16)
nsubj(shove-19, we-17)
advmod(shove-19, just-18)
advcl(feel-25, shove-19)
csubj(feel-25, shove-19)
nsubj(we-21, what-20)
xcomp(shove-19, we-21)
advmod(feel-25, really-22)
advmod(feel-25, really-23)
advmod(feel-25, really-24)
dep(idea-13, feel-25)
prt(feel-25, down-26)
poss(everyone-30, everyone-27)
nn(everyone-30, throat-29)
dobj(feel-25, everyone-30)
aux(live-32, will-31)
dep(matter-7, live-32)
advmod(live-32, happily-33)
advmod(live-32, ever-34)
prep(amen-37, after-35)
root(ROOT-0, amen-37)
complm('s-40, that-39)
ccomp(amen-37, 's-40)
neg('s-40, not-41)
advmod(works-44, how-42)
nsubj(works-44, it-43)
ccomp('s-40, works-44)

(ROOT
  (S
    (NP (NNP Woman))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBG having)
          (NP
            (NP
              (NP (NNS abortions))
              (NP (CD one) (NN way)))
            (CC or)
            (NP
              (NP (DT another))
              (, ,)
              (ADJP (JJ legal)
                (CC or)
                (JJ illegal))
              (, ,)
              (PP (IN since)
                (NP
                  (NP (DT the) (NN beginning))
                  (PP (IN of)
                    (NP (NN time))))))))))
    (. .)))

nsubj(having-4, Woman-1)
aux(having-4, have-2)
aux(having-4, been-3)
root(ROOT-0, having-4)
dobj(having-4, abortions-5)
num(way-7, one-6)
dep(abortions-5, way-7)
dobj(having-4, another-9)
conj_or(abortions-5, another-9)
amod(another-9, legal-11)
amod(another-9, illegal-13)
conj_or(legal-11, illegal-13)
det(beginning-17, the-16)
prep_since(another-9, beginning-17)
prep_of(beginning-17, time-19)

(ROOT
  (FRAG
    (PP (IN As)
      (PP (IN for)
        (NP
          (NP (PRP$ your) (NN point))
          (PP (IN about)
            (NP (NN rape))))))
    (. .)))

root(ROOT-0, As-1)
pcomp(As-1, for-2)
poss(point-4, your-3)
prep_for(As-1, point-4)
prep_about(point-4, rape-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (DT the) (NN fault))
        (PP (IN of)
          (NP (DT the) (`` ``) (NN child) ('' ''))))
      (SBAR (RB only) (IN because)
        (S
          (NP (DT the) (`` ``) (NN child) ('' ''))
          (VP (VBZ does) (RB n't)
            (VP (VB exist))))))
    (. .)))

nsubj(fault-5, It-1)
cop(fault-5, 's-2)
neg(fault-5, not-3)
det(fault-5, the-4)
root(ROOT-0, fault-5)
det(child-9, the-7)
prep_of(fault-5, child-9)
advmod(exist-19, only-11)
dep(exist-19, because-12)
det(child-15, the-13)
nsubj(exist-19, child-15)
aux(exist-19, does-17)
neg(exist-19, n't-18)
dep(fault-5, exist-19)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB consider)
            (NP (DT a) (NN fetus))
            (NP (DT a) (NN life))
            (, ,)
            (PP (IN from)
              (NP (PRP$ my) (NN standpoint)))))))
    (NP (DT the) (NN right))
    (VP (VBZ is)
      (ADJP (RBR more) (VBN concerned)
        (PP (IN with)
          (NP
            (NP (JJ vague) (JJ moral) (NNS standards))
            (VP
              (ADVP (RB only))
              (VBN shared)
              (PP (IN by)
                (NP (DT the) (NN right)))
              (PP (IN than)
                (S
                  (VP
                    (VP (VBG saving)
                      (NP (NNS lives)))
                    (, ,)
                    (CC but)
                    (VP (VBG whatever)
                      (NP (CD .2)))))))))))
    (. .)))

mark(consider-5, Since-1)
nsubj(consider-5, I-2)
aux(consider-5, do-3)
neg(consider-5, n't-4)
advcl(concerned-18, consider-5)
det(fetus-7, a-6)
iobj(consider-5, fetus-7)
det(life-9, a-8)
dobj(consider-5, life-9)
poss(standpoint-13, my-12)
prep_from(consider-5, standpoint-13)
det(right-15, the-14)
nsubjpass(concerned-18, right-15)
auxpass(concerned-18, is-16)
advmod(concerned-18, more-17)
root(ROOT-0, concerned-18)
amod(standards-22, vague-20)
amod(standards-22, moral-21)
prep_with(concerned-18, standards-22)
advmod(shared-24, only-23)
partmod(standards-22, shared-24)
det(right-27, the-26)
agent(shared-24, right-27)
prepc_than(shared-24, saving-29)
dobj(saving-29, lives-30)
prepc_than(shared-24, whatever-33)
conj_but(saving-29, whatever-33)
dobj(whatever-33, .2-34)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (UCP
        (NP
          (NP (DT a) (NN cluster))
          (PP (IN of)
            (NP (NNS cells))))
        (CC and)
        (SBAR (IN if)
          (S
            (NP (PRP she))
            (VP (VBZ wants)
              (S
                (VP (TO to)
                  (VP (VB abort)
                    (NP (PRP it))
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ 's)
                          (NP (PRP$ her) (NN choice))))))))))))
      (, ,)
      (ADVP (RB again))
      (, ,)
      (FRAG (RB not)
        (NP (CD yours) (CD .4))))
    (. .)))

nsubj(cluster-4, It-1)
cop(cluster-4, 's-2)
det(cluster-4, a-3)
root(ROOT-0, cluster-4)
prep_of(cluster-4, cells-6)
mark(wants-10, if-8)
nsubj(wants-10, she-9)
xsubj(abort-12, she-9)
conj_and(cluster-4, wants-10)
aux(abort-12, to-11)
xcomp(wants-10, abort-12)
dobj(abort-12, it-13)
nsubj(choice-17, it-14)
cop(choice-17, 's-15)
poss(choice-17, her-16)
dep(abort-12, choice-17)
advmod(cluster-4, again-19)
dep(cluster-4, not-21)
num(.4-23, yours-22)
dep(not-21, .4-23)

(ROOT
  (S
    (NP (NNS facts)
      (CC and)
      (NN logic))
    (ADVP (RB never))
    (VP (VBP vary))
    (. .)))

nsubj(vary-5, facts-1)
conj_and(facts-1, logic-3)
nsubj(vary-5, logic-3)
neg(vary-5, never-4)
root(ROOT-0, vary-5)

(ROOT
  (S
    (S
      (NP (NNS People))
      (VP (VBP are)
        (ADJP (JJ wrong)
          (PP (IN about)
            (NP (NNS facts)
              (CC and)
              (NN logic))))
        (, ,)
        (PP (CC but)
          (IN in)
          (CC and)
          (IN of)
          (NP (PRP themselves)))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (ADJP (JJ constant)))
    (. .)))

nsubj(wrong-3, People-1)
nsubj(wrong-3', People-1)
cop(wrong-3, are-2)
conj_and(wrong-3, wrong-3')
ccomp(constant-17, wrong-3)
ccomp(constant-17, wrong-3')
prep_about(wrong-3, facts-5)
prep_about(wrong-3, logic-7)
conj_and(facts-5, logic-7)
cc(wrong-3, but-9)
prep_in(wrong-3, themselves-13)
prep_of(wrong-3', themselves-13)
nsubj(constant-17, they-15)
cop(constant-17, are-16)
root(ROOT-0, constant-17)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN fact))
        (SBAR
          (S
            (NP (DT the) (NN earth))
            (VP (VBZ is)
              (NP
                (NP (NN round))
                (PP (IN for)
                  (NP (NN example)))))))))
    (. .)))

nsubj(fact-4, It-1)
cop(fact-4, is-2)
det(fact-4, a-3)
root(ROOT-0, fact-4)
det(earth-6, the-5)
nsubj(round-8, earth-6)
cop(round-8, is-7)
rcmod(fact-4, round-8)
prep_for(round-8, example-10)

(ROOT
  (S
    (S
      (S
        (NP (DT Some))
        (VP (VBP have)
          (NP
            (NP (DT the) (`` ``) (NN opinion) ('' ''))
            (SBAR
              (S
                (NP (PRP it))
                (VP (VBZ is) (RB not)))))))
      (, ,)
      (CC but)
      (S
        (NP (DT this))
        (VP (VBZ is) (RB not)
          (NP (DT an) (NN opinion)))))
    (, ,)
    (NP (DT this))
    (VP (VBZ is)
      (ADVP (RB simply))
      (ADJP (JJ wrong)))
    (. .)))

nsubj(have-2, Some-1)
ccomp(wrong-21, have-2)
det(opinion-5, the-3)
dobj(have-2, opinion-5)
nsubj(is-8, it-7)
rcmod(opinion-5, is-8)
neg(is-8, not-9)
nsubj(opinion-16, this-12)
cop(opinion-16, is-13)
neg(opinion-16, not-14)
det(opinion-16, an-15)
conj_but(have-2, opinion-16)
ccomp(wrong-21, opinion-16)
nsubj(wrong-21, this-18)
cop(wrong-21, is-19)
advmod(wrong-21, simply-20)
root(ROOT-0, wrong-21)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN fact))
        (PP (IN at)
          (NP
            (NP (DT the) (NN bottom))
            (PP (IN of)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (DT a) (NN fetus))
                  (VP (VBZ becomes)
                    (NP
                      (NP (NN self-aware))
                      (, ,)
                      (NP
                        (NP (NNS people))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (NP
                              (NP (NN study) (NN biology))
                              (PP (IN for)
                                (NP
                                  (NP (DT a) (NN decade))
                                  (PP (IN before)
                                    (S
                                      (VP (VBG becoming)
                                        (NP (DT a) (NN doctor))))))))
                            (VP (VBP believe)
                              (S
                                (NP (DT this))
                                (VP (TO to)
                                  (VP (VB be)
                                    (PP (IN around)
                                      (NP (DT the) (JJ 3rd) (NN trimester)))))))))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(fact-4, a-3)
nsubj(is-2, fact-4)
det(bottom-7, the-6)
prep_at(fact-4, bottom-7)
advmod(self-aware-13, when-9)
det(fetus-11, a-10)
nsubj(self-aware-13, fetus-11)
cop(self-aware-13, becomes-12)
prepc_of(bottom-7, self-aware-13)
appos(self-aware-13, people-15)
rel(believe-26, who-16)
nn(biology-18, study-17)
nsubj(believe-26, biology-18)
det(decade-21, a-20)
prep_for(biology-18, decade-21)
prepc_before(decade-21, becoming-23)
det(doctor-25, a-24)
attr(becoming-23, doctor-25)
rcmod(people-15, believe-26)
nsubj(be-29, this-27)
aux(be-29, to-28)
xcomp(believe-26, be-29)
det(trimester-33, the-31)
amod(trimester-33, 3rd-32)
prep_around(be-29, trimester-33)

(ROOT
  (S
    (SBAR
      (WHNP (WDT Whatever))
      (S
        (NP (DT the) (NN answer))
        (ADVP (RB really))
        (VP (VBZ is))))
    (, ,)
    (NP (PRP I))
    (VP (VBP trust)
      (NP
        (NP (DT the) (NN dude))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD studied)
              (NP (PRP it))
              (PP (IN for)
                (NP (DT a) (NN decade)))
              (PP (IN over)
                (NP
                  (NP (NNS people))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP think)
                        (S
                          (NP (PRP they))
                          (VP
                            (VP (VB speak)
                              (PP (IN in)
                                (NP (NNS tongues))))
                            (CC and)
                            (VP (VB give)
                              (NP (PRP$ their) (JJ live) (NNS savings))
                              (PP (TO to)
                                (NP (NNP Jerry) (NNP Falwell))))))))))))))))
    (. .)))

dobj(is-5, Whatever-1)
det(answer-3, the-2)
nsubj(is-5, answer-3)
advmod(is-5, really-4)
dep(trust-8, is-5)
nsubj(trust-8, I-7)
root(ROOT-0, trust-8)
det(dude-10, the-9)
dobj(trust-8, dude-10)
nsubj(studied-12, dude-10)
rcmod(dude-10, studied-12)
dobj(studied-12, it-13)
det(decade-16, a-15)
prep_for(studied-12, decade-16)
prep_over(studied-12, people-18)
nsubj(think-20, people-18)
rcmod(people-18, think-20)
nsubj(speak-22, they-21)
nsubj(give-26, they-21)
ccomp(think-20, speak-22)
prep_in(speak-22, tongues-24)
ccomp(think-20, give-26)
conj_and(speak-22, give-26)
poss(savings-29, their-27)
amod(savings-29, live-28)
dobj(give-26, savings-29)
nn(Falwell-32, Jerry-31)
prep_to(give-26, Falwell-32)

(ROOT
  (SQ (VBZ Is)
    (NP (DT the) (JJ exact) (NN moment))
    (NP
      (NP (RB as) (JJ definite))
      (PP (IN as)
        (NP
          (NP (DT the) (NN shape))
          (PP (IN of)
            (NP (DT the) (NN earth))))))
    (. ?)))

cop(definite-6, Is-1)
det(moment-4, the-2)
amod(moment-4, exact-3)
nsubj(definite-6, moment-4)
advmod(definite-6, as-5)
root(ROOT-0, definite-6)
det(shape-9, the-8)
prep_as(definite-6, shape-9)
det(earth-12, the-11)
prep_of(shape-9, earth-12)

(ROOT
  (FRAG
    (INTJ (UH No))
    (, ,)
    (ADVP (RB probably) (RB not))
    (. .)))

dep(not-4, No-1)
advmod(not-4, probably-3)
root(ROOT-0, not-4)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (DT that) (JJ big)
          (UCP
            (NP (DT a) (NN mystery))
            (, ,)
            (CC and)
            (SBAR
              (SBAR (IN while)
                (S
                  (NP (DT a) (JJ valid) (NN opinion))
                  (VP (MD may)
                    (VP (VB vary)
                      (PP (IN by)
                        (NP (DT a) (NN month)))))))
              (CC or)
              (SBAR (IN so)
                (S
                  (PP (IN of)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (DT this)
                          (ADJP (JJ elusive))
                          (NN self-awareness))
                        (VP (VBZ begins)))))
                  (, ,)
                  (NP (PRP it))
                  (ADVP (RBS most) (RB certainly))
                  (VP (VBZ is) (RB not)
                    (PP (RB upon)))))))
          (NN conception))
        (, ,)
        (CC or)
        (NP
          (NP
            (ADJP (VB even) (CD 2)
              (CC or)
              (CD 3))
            (NNS months))
          (ADVP (RB later)))))
    (. .)))

nsubj(conception-35, it-2)
cop(conception-35, 's-3)
neg(conception-35, not-4)
det(conception-35, that-5)
amod(conception-35, big-6)
det(mystery-8, a-7)
nn(conception-35, mystery-8)
mark(vary-16, while-11)
det(opinion-14, a-12)
amod(opinion-14, valid-13)
nsubj(vary-16, opinion-14)
aux(vary-16, may-15)
conj_and(mystery-8, vary-16)
nn(conception-35, vary-16)
det(month-19, a-18)
prep_by(vary-16, month-19)
mark(is-32, so-21)
dep(is-32, of-22)
advmod(begins-27, when-23)
det(self-awareness-26, this-24)
amod(self-awareness-26, elusive-25)
nsubj(begins-27, self-awareness-26)
pcomp(of-22, begins-27)
nsubj(is-32, it-29)
advmod(certainly-31, most-30)
advmod(is-32, certainly-31)
conj_and(mystery-8, is-32)
conj_or(vary-16, is-32)
neg(is-32, not-33)
prep(is-32, upon-34)
root(ROOT-0, conception-35)
dep(2-39, even-38)
amod(months-42, 2-39)
conj_or(2-39, 3-41)
amod(months-42, 3-41)
conj_or(conception-35, months-42)
advmod(months-42, later-43)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG talking)
        (PP
          (PP (IN about)
            (NP (NN self-awareness)))
          (, ,) (RB as)
          (PP (IN in)
            (NP (NNS feelings))))))
    (. .)))

nsubj(talking-3, I-1)
aux(talking-3, 'm-2)
root(ROOT-0, talking-3)
prep_about(talking-3, self-awareness-5)
advmod(talking-3, as-7)
prep_in(talking-3, feelings-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ akin)
        (PP (IN at)
          (NP
            (NP (DT that) (NN point))
            (PP (TO to)
              (S
                (VP (VBG saying)
                  (SBAR
                    (S
                      (NP (DT the) (NN earth))
                      (VP (VBZ has)
                        (S
                          (VP (TO to)
                            (VP (VB be)
                              (ADJP (JJ flat))
                              (SBAR (IN because)
                                (S
                                  (SBAR
                                    (WHADVP (WRB when))
                                    (S
                                      (NP (PRP I))
                                      (VP (VBP stand)
                                        (PP (IN on)
                                          (NP (PRP$ my) (NN roof))))))
                                  (NP (PRP I))
                                  (VP (MD ca) (RB n't)
                                    (VP (VB see)
                                      (S
                                        (NP (PRP it))
                                        (VP (NN curve))))))))))))))))))))
    (. .)))

nsubj(akin-3, It-1)
cop(akin-3, 's-2)
root(ROOT-0, akin-3)
det(point-6, that-5)
prep_at(akin-3, point-6)
prepc_to(point-6, saying-8)
det(earth-10, the-9)
nsubj(has-11, earth-10)
xsubj(flat-14, earth-10)
ccomp(saying-8, has-11)
aux(flat-14, to-12)
cop(flat-14, be-13)
xcomp(has-11, flat-14)
mark(see-25, because-15)
advmod(stand-18, when-16)
nsubj(stand-18, I-17)
advcl(see-25, stand-18)
poss(roof-21, my-20)
prep_on(stand-18, roof-21)
nsubj(see-25, I-22)
aux(see-25, ca-23)
neg(see-25, n't-24)
advcl(flat-14, see-25)
nsubj(curve-27, it-26)
ccomp(see-25, curve-27)

(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN difference))
        (PP (IN between)
          (NP
            (NP
              (NP (DT an) (NN argument))
              (PP (IN with)
                (NP (CD two) (JJ different) (NNS opinions))))
            (, ,)
            (CC and)
            (NP (DT the) (NN abortion) (NN debate))))))
    (. .)))

nsubj(difference-4, Here-1)
cop(difference-4, 's-2)
det(difference-4, the-3)
root(ROOT-0, difference-4)
det(argument-7, an-6)
prep_between(difference-4, argument-7)
num(opinions-11, two-9)
amod(opinions-11, different-10)
prep_with(argument-7, opinions-11)
det(debate-16, the-14)
nn(debate-16, abortion-15)
prep_between(difference-4, debate-16)
conj_and(argument-7, debate-16)

(ROOT
  (S
    (S
      (VP (VB Indulge)
        (NP (PRP me))))
    (, ,)
    (NP (PRP I))
    (VP (VBP enjoy)
      (S
        (VP (VBG coming)
          (PRT (RP up))
          (PP (IN with)
            (NP
              (NP (NNS analogies))
              (SBAR
                (S
                  (NP (CD .2) (NNS people))
                  (VP (VBP are)
                    (VP (VBG walking)
                      (PP (IN through)
                        (NP (DT a) (NN forest))))))))))))
    (. .)))

ccomp(enjoy-5, Indulge-1)
dobj(Indulge-1, me-2)
nsubj(enjoy-5, I-4)
root(ROOT-0, enjoy-5)
xcomp(enjoy-5, coming-6)
prt(coming-6, up-7)
prep_with(coming-6, analogies-9)
dobj(walking-13, analogies-9)
num(people-11, .2-10)
nsubj(walking-13, people-11)
aux(walking-13, are-12)
rcmod(analogies-9, walking-13)
det(forest-16, a-15)
prep_through(walking-13, forest-16)

(ROOT
  (S
    (NP (CD 1))
    (VP (VBZ wants)
      (S
        (VP (TO to)
          (VP (VB go)
            (NP
              (NP (NN left))
              (, ,)
              (NP (DT the) (JJ other) (NN right)))))))
    (. .)))

nsubj(wants-2, 1-1)
xsubj(go-4, 1-1)
root(ROOT-0, wants-2)
aux(go-4, to-3)
xcomp(wants-2, go-4)
dobj(go-4, left-5)
det(right-9, the-7)
amod(right-9, other-8)
appos(left-5, right-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NN one))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ wants)
            (S
              (VP (TO to)
                (VP (VB go)
                  (ADVP (RB right)))))))))
    (VP (VBZ says)
      (SBAR
        (S
          (NP (PRP they))
          (DT both)
          (VP (VBP have)
            (S
              (VP (TO to)
                (VP (VB go)
                  (ADVP (RB right)))))))))
    (. .)))

det(one-2, The-1)
nsubj(wants-4, one-2)
nsubj(says-8, one-2)
rcmod(one-2, wants-4)
aux(go-6, to-5)
xcomp(wants-4, go-6)
advmod(go-6, right-7)
root(ROOT-0, says-8)
nsubj(have-11, they-9)
xsubj(go-13, they-9)
dep(have-11, both-10)
ccomp(says-8, have-11)
aux(go-13, to-12)
xcomp(have-11, go-13)
advmod(go-13, right-14)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN one))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ wants)
              (S
                (VP (TO to)
                  (VP (VB go)
                    (ADVP (RB left)))))))))
      (VP (VBZ says)
        (SBAR
          (S
            (NP (PRP$ his) (NN friend))
            (VP (MD can)
              (VP (VB go)
                (ADVP (RB right))
                (SBAR (IN if)
                  (S
                    (NP (PRP he))
                    (VP (VBZ likes))))))))))
    (, ,)
    (CC but)
    (S
      (PP (IN for)
        (NP (PRP himself)))
      (, ,)
      (NP (PRP he))
      (VP (VBZ thinks)
        (SBAR
          (S
            (NP (PRP he))
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ able)
                  (S
                    (VP (TO to)
                      (VP (VB choose)))))))))))
    (. .)))

det(one-2, The-1)
nsubj(wants-4, one-2)
nsubj(says-8, one-2)
rcmod(one-2, wants-4)
aux(go-6, to-5)
xcomp(wants-4, go-6)
advmod(go-6, left-7)
root(ROOT-0, says-8)
poss(friend-10, his-9)
nsubj(go-12, friend-10)
aux(go-12, can-11)
ccomp(says-8, go-12)
advmod(go-12, right-13)
mark(likes-16, if-14)
nsubj(likes-16, he-15)
advcl(go-12, likes-16)
prep_for(thinks-23, himself-20)
nsubj(thinks-23, he-22)
conj_but(says-8, thinks-23)
nsubj(able-27, he-24)
aux(able-27, should-25)
cop(able-27, be-26)
ccomp(thinks-23, able-27)
aux(choose-29, to-28)
xcomp(able-27, choose-29)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN gist))
        (PP (IN of)
          (NP (PRP it)))))
    (. .)))

nsubj(gist-4, That-1)
cop(gist-4, 's-2)
det(gist-4, the-3)
root(ROOT-0, gist-4)
prep_of(gist-4, it-6)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's) (RB not)
      (NP
        (NP (DT a) (NN matter))
        (PP (IN of)
          (NP
            (NP (CD two) (NNS sides))
            (VP (VBG fighting)
              (PP (IN about)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (NN everyone))
                    (VP (MD should)
                      (VP (VB do)))))))))))
    (. .)))

nsubj(matter-5, It-1)
cop(matter-5, 's-2)
neg(matter-5, not-3)
det(matter-5, a-4)
root(ROOT-0, matter-5)
num(sides-8, two-7)
prep_of(matter-5, sides-8)
partmod(sides-8, fighting-9)
dobj(do-14, what-11)
nsubj(do-14, everyone-12)
aux(do-14, should-13)
prepc_about(fighting-9, do-14)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADVP (IN about)
          (NP (CD one) (NN side)))
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB force)
                (NP (NN everyone))
                (S
                  (VP (TO to)
                    (VP (VB do)
                      (NP
                        (NP (NN something))
                        (SBAR
                          (S
                            (NP (PRP they))
                            (VP (MD may)
                              (CC or)
                              (MD may) (RB not)
                              (VP (VB want)
                                (S
                                  (VP (TO to)
                                    (VP (VB and)
                                      (NP (DT the) (JJ other) (NN saying))
                                      (SBAR (IN since)
                                        (S
                                          (NP (PRP we))
                                          (ADVP (RB really))
                                          (VP (VBP do) (RB n't)
                                            (VP (VB know)
                                              (SBAR
                                                (WHADVP (WRB where))
                                                (S
                                                  (NP (DT either))
                                                  (VP (VBZ leads)))))))))))))))))))))))))
    (, ,)
    (NP (NNS people))
    (VP (MD should)
      (VP (VB have)
        (NP (DT the) (NN choice))))
    (. .)))

nsubj(trying-6, It-1)
xsubj(force-8, It-1)
aux(trying-6, 's-2)
advmod(trying-6, about-3)
num(side-5, one-4)
pobj(about-3, side-5)
ccomp(have-36, trying-6)
aux(force-8, to-7)
xcomp(trying-6, force-8)
dobj(force-8, everyone-9)
aux(do-11, to-10)
xcomp(force-8, do-11)
dobj(do-11, something-12)
dobj(want-18, something-12)
nsubj(want-18, they-13)
xsubj(and-20, they-13)
aux(want-18, may-14)
rcmod(something-12, may-16)
aux(want-18, may-16)
conj_or(want-18, may-16)
neg(want-18, not-17)
rcmod(something-12, want-18)
aux(and-20, to-19)
xcomp(want-18, and-20)
det(saying-23, the-21)
amod(saying-23, other-22)
dobj(and-20, saying-23)
mark(know-29, since-24)
nsubj(know-29, we-25)
advmod(know-29, really-26)
aux(know-29, do-27)
neg(know-29, n't-28)
advcl(and-20, know-29)
advmod(leads-32, where-30)
nsubj(leads-32, either-31)
advcl(know-29, leads-32)
nsubj(have-36, people-34)
aux(have-36, should-35)
root(ROOT-0, have-36)
det(choice-38, the-37)
dobj(have-36, choice-38)

(ROOT
  (S
    (NP
      (NP (DT A) (NN fetus))
      (PP (IN before)
        (NP (DT the) (JJ third) (NN trimester))))
    (VP (VBZ has)
      (NP
        (NP (CD 0) (NN capacity))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB feel)))))))
    (. .)))

det(fetus-2, A-1)
nsubj(has-7, fetus-2)
det(trimester-6, the-4)
amod(trimester-6, third-5)
prep_before(fetus-2, trimester-6)
root(ROOT-0, has-7)
num(capacity-9, 0-8)
dobj(has-7, capacity-9)
aux(feel-11, to-10)
infmod(capacity-9, feel-11)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP 're) (RB not)
        (ADJP (JJ sad)
          (PP (IN about)
            (S
              (VP (VBG being)
                (VP (VBN aborted))))))))
    (, ,)
    (S
      (NP (PRP it))
      (VP (VBZ does) (RB n't)
        (VP (VB hurt)
          (NP (PRP them)))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP do) (RB n't)
        (VP (VB have)
          (NP (DT these) (JJ human) (NNS emotions))
          (ADVP (RB yet)))))
    (. .)))

nsubj(sad-4, They-1)
cop(sad-4, 're-2)
neg(sad-4, not-3)
root(ROOT-0, sad-4)
auxpass(aborted-7, being-6)
prepc_about(sad-4, aborted-7)
nsubj(hurt-12, it-9)
aux(hurt-12, does-10)
neg(hurt-12, n't-11)
ccomp(sad-4, hurt-12)
dobj(hurt-12, them-13)
nsubj(have-18, they-15)
aux(have-18, do-16)
neg(have-18, n't-17)
ccomp(sad-4, have-18)
det(emotions-21, these-19)
amod(emotions-21, human-20)
dobj(have-18, emotions-21)
advmod(have-18, yet-22)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP I))
          (VP (VBP 'm)
            (VP (VBG talking) (IN about))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
dobj(talking-6, what-3)
nsubj(talking-6, I-4)
aux(talking-6, 'm-5)
ccomp(is-2, talking-6)
dep(talking-6, about-7)

(ROOT
  (S
    (SBAR (IN That)
      (S
        (NP (DT an) (RB already) (VBN born) (NN child))
        (VP (VBZ likes)
          (NP (PRP$ its) (NN mom))
          (PP (IN in)
            (NP (DT no) (NN way))))))
    (VP (VBZ invalidates)
      (NP (DT this) (NN point) (CD .3)))
    (. .)))

complm(likes-6, That-1)
det(child-5, an-2)
advmod(child-5, already-3)
amod(child-5, born-4)
nsubj(likes-6, child-5)
csubj(invalidates-12, likes-6)
poss(mom-8, its-7)
dobj(likes-6, mom-8)
det(way-11, no-10)
prep_in(likes-6, way-11)
root(ROOT-0, invalidates-12)
det(point-14, this-13)
dobj(invalidates-12, point-14)
num(point-14, .3-15)

(ROOT
  (S (CC And)
    (ADVP (RB here))
    (VP (VBZ is)
      (NP (DT the) (NN disconnect)))
    (, ,)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (RB absolutely) (JJ correct))))
    (. .)))

cc(disconnect-5, And-1)
advmod(disconnect-5, here-2)
cop(disconnect-5, is-3)
det(disconnect-5, the-4)
root(ROOT-0, disconnect-5)
nsubj(correct-10, you-7)
cop(correct-10, are-8)
advmod(correct-10, absolutely-9)
ccomp(disconnect-5, correct-10)

(ROOT
  (S (CC But)
    (NP
      (NP (DT the) (NN leap))
      (ADJP (RB so) (JJ many)
        (PP (IN on)
          (NP
            (NP (DT the) (NN right))
            (SBAR
              (S
                (VP (VBP are) (RB not)
                  (ADJP (JJ willing)
                    (S
                      (VP (TO to)
                        (VP (VB make))))))))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NN abortion))
          (VP (VBZ is)
            (ADVP (RB always))
            (NP (NN something)
              (S
                (VP (TO to)
                  (VP (VB anguish)
                    (PRT (RP over))))))))))
    (. .)))

cc(is-14, But-1)
det(leap-3, the-2)
nsubj(is-14, leap-3)
advmod(many-5, so-4)
amod(leap-3, many-5)
det(right-8, the-7)
prep_on(many-5, right-8)
cop(willing-11, are-9)
neg(willing-11, not-10)
rcmod(right-8, willing-11)
aux(make-13, to-12)
xcomp(willing-11, make-13)
root(ROOT-0, is-14)
complm(something-19, that-15)
nsubj(something-19, abortion-16)
cop(something-19, is-17)
advmod(something-19, always-18)
ccomp(is-14, something-19)
aux(anguish-21, to-20)
infmod(something-19, anguish-21)
prt(anguish-21, over-22)

