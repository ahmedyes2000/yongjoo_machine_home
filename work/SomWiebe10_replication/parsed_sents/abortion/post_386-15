(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP
          (NP (DT the) (JJ ultimate) (JJ individual) (NN responsibility))
          (SBAR
            (S
              (S
                (NP (PRP we))
                (VP (MD will)
                  (ADVP (RB ever))
                  (VP (VB have)
                    (VP
                      (PRN (-LRB- -LRB-)
                        (PP (TO to)
                          (NP
                            (NP (DT that))
                            (PP (IN of)
                              (NP (PRP$ our) (NN offspring)))))
                        (-RRB- -RRB-))
                      (MD can)
                      (VP (VB be)
                        (VP (VBN neglected)))))))
              (CC and)
              (S
                (NP (DT the) (NN decision))
                (VP (VBD made)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ leads)
                        (PP (TO to)
                          (NP (DT this)))))))))))
        (VP (MD can)
          (VP (VB be)
            (VP (VBN accepted)
              (PP (IN with)
                (NP (DT no) (NN recourse))))))))
    (, ,)
    (NP (PRP$ our) (NN society))
    (VP (VBZ is)
      (VP (VBG degenerating)))
    (. .)))

advmod(accepted-30, When-1)
det(responsibility-5, the-2)
amod(responsibility-5, ultimate-3)
amod(responsibility-5, individual-4)
nsubjpass(accepted-30, responsibility-5)
nsubjpass(neglected-19, we-6)
aux(neglected-19, will-7)
advmod(neglected-19, ever-8)
aux(neglected-19, have-9)
dep(neglected-19, to-11)
pobj(to-11, that-12)
poss(offspring-15, our-14)
prep_of(that-12, offspring-15)
aux(neglected-19, can-17)
auxpass(neglected-19, be-18)
rcmod(responsibility-5, neglected-19)
det(decision-22, the-21)
nsubj(made-23, decision-22)
rcmod(responsibility-5, made-23)
conj_and(neglected-19, made-23)
nsubj(leads-25, which-24)
ccomp(made-23, leads-25)
prep_to(leads-25, this-27)
aux(accepted-30, can-28)
auxpass(accepted-30, be-29)
advcl(degenerating-38, accepted-30)
det(recourse-33, no-32)
prep_with(accepted-30, recourse-33)
poss(society-36, our-35)
nsubj(degenerating-38, society-36)
aux(degenerating-38, is-37)
root(ROOT-0, degenerating-38)

