(ROOT
  (S
    (NP (NNP Animal))
    (ADVP (RB cruelty))
    (VP (VBZ is)
      (ADVP (RB NOT))
      (NP (DT a) (JJ political) (NN problem))
      (, ,)
      (SBAR (IN unless)
        (S
          (NP (PRP you))
          (VP (VBP are)
            (NP (DT a) (NN collectivist))))))
    (. .)))

nsubj(problem-7, Animal-1)
advmod(problem-7, cruelty-2)
cop(problem-7, is-3)
neg(problem-7, NOT-4)
det(problem-7, a-5)
amod(problem-7, political-6)
root(ROOT-0, problem-7)
mark(collectivist-13, unless-9)
nsubj(collectivist-13, you-10)
cop(collectivist-13, are-11)
det(collectivist-13, a-12)
advcl(problem-7, collectivist-13)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (NN animal) (NN abuse))
        (VP (MD should)
          (VP (VB be)
            (ADJP (JJ condemned) (RB morally))))))
    (, ,)
    (NP (PRP it))
    (VP (MD should) (RB not)
      (VP (VB be)
        (ADJP (JJ illegal))))
    (. .)))

mark(condemned-6, Although-1)
nn(abuse-3, animal-2)
nsubj(condemned-6, abuse-3)
aux(condemned-6, should-4)
cop(condemned-6, be-5)
advcl(illegal-13, condemned-6)
advmod(condemned-6, morally-7)
nsubj(illegal-13, it-9)
aux(illegal-13, should-10)
neg(illegal-13, not-11)
cop(illegal-13, be-12)
root(ROOT-0, illegal-13)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (VP (VB deal)
        (PP (IN with)
          (NP (DT a) (NN thing)))
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (VBZ is) (, ,)
              (ADVP (RB now))
              (SBAR
                (WHADVP (WRB how))
                (S
                  (NP (PRP we))
                  (VP (MD can)
                    (VP
                      (VP (VB imagine)
                        (NP (PRP it)))
                      (CC or)
                      (VP (VB emote)
                        (S
                          (NP (PRP it))
                          (VP (TO to)
                            (VP (VB be))))))))))))))
    (. .)))

nsubj(deal-3, We-1)
aux(deal-3, must-2)
root(ROOT-0, deal-3)
det(thing-6, a-5)
prep_with(deal-3, thing-6)
mark(is-9, as-7)
nsubj(is-9, it-8)
advcl(deal-3, is-9)
advmod(is-9, now-11)
advmod(imagine-15, how-12)
nsubj(imagine-15, we-13)
nsubj(emote-18, we-13)
aux(imagine-15, can-14)
ccomp(is-9, imagine-15)
dobj(imagine-15, it-16)
ccomp(is-9, emote-18)
conj_or(imagine-15, emote-18)
nsubj(be-21, it-19)
aux(be-21, to-20)
xcomp(emote-18, be-21)

(ROOT
  (S
    (ADVP (RB Frankly))
    (, ,)
    (NP (PRP$ your))
    (VP (VBP question) (, ,) (`` ``)
      (SBARQ
        (WHADVP (WRB Where))
        (SQ (VBP do)
          (NP (PRP you))
          (VP (VB get)
            (NP (DT the) (NN notion))
            (SBAR (IN that)
              (S
                (NP (NNS humans))
                (VP (VBP have)
                  (NP (NNS rights)))))))
        (. ?)))))

advmod(question-4, Frankly-1)
nsubj(question-4, your-3)
root(ROOT-0, question-4)
advmod(get-10, Where-7)
aux(get-10, do-8)
nsubj(get-10, you-9)
dep(question-4, get-10)
det(notion-12, the-11)
dobj(get-10, notion-12)
complm(have-15, that-13)
nsubj(have-15, humans-14)
ccomp(get-10, have-15)
dobj(have-15, rights-16)

(ROOT
  (S ('' '')
    (S
      (S
        (VP (VBZ is)))
      (VP (VBP scarier)))
    (IN than)
    (S
      (NP (DT any)
        (ADJP (RB coldly) (JJ rational))
        (NN argument) (NN I))
      (VP (MD could)
        (ADVP (RB ever))
        (VP (VB make)
          (PP (IN about)
            (NP (NN anything))))))
    (. .)))

csubj(scarier-3, is-2)
root(ROOT-0, scarier-3)
dep(scarier-3, than-4)
det(I-9, any-5)
advmod(rational-7, coldly-6)
amod(I-9, rational-7)
nn(I-9, argument-8)
nsubj(make-12, I-9)
aux(make-12, could-10)
advmod(make-12, ever-11)
ccomp(scarier-3, make-12)
prep_about(make-12, anything-14)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB also))
    (VP (VBP do) (RB n't)
      (VP (VB see)
        (S
          (NP (PRP you))
          (VP (VBG asking)
            (PP (IN about)
              (NP
                (NP (DT the) (JJ moral) (NNS implications))
                (PP (IN of)
                  (NP (DT the) (NN view)))))
            (SBAR (IN that)
              (S
                (NP (DT a) (JJ pregnant) (NN woman))
                (VP (MD should)
                  (VP (VB be)
                    (VP (VBN forced)
                      (PP (IN into)
                        (NP
                          (NP (DT the) (JJ metaphysical) (NN status))
                          (PP (IN of)
                            (NP (DT a) (JJ plastic) (NN incubator))))))))))))))
    (. .)))

nsubj(see-5, I-1)
advmod(see-5, also-2)
aux(see-5, do-3)
neg(see-5, n't-4)
root(ROOT-0, see-5)
nsubj(asking-7, you-6)
dep(see-5, asking-7)
det(implications-11, the-9)
amod(implications-11, moral-10)
prep_about(asking-7, implications-11)
det(view-14, the-13)
prep_of(implications-11, view-14)
complm(forced-21, that-15)
det(woman-18, a-16)
amod(woman-18, pregnant-17)
nsubjpass(forced-21, woman-18)
aux(forced-21, should-19)
auxpass(forced-21, be-20)
ccomp(asking-7, forced-21)
det(status-25, the-23)
amod(status-25, metaphysical-24)
prep_into(forced-21, status-25)
det(incubator-29, a-27)
amod(incubator-29, plastic-28)
prep_of(status-25, incubator-29)

(ROOT
  (S
    (NP (NNS Animals))
    (VP
      (VP (VBP do) (RB not)
        (VP (VB have)
          (NP (NNS rights))))
      (CC and)
      (VP (VBP are)
        (NP
          (NP (DT the) (NN property))
          (PP (IN of)
            (NP (PRP$ their) (NNS owners))))))
    (. .)))

nsubj(have-4, Animals-1)
aux(have-4, do-2)
neg(have-4, not-3)
root(ROOT-0, have-4)
dobj(have-4, rights-5)
cop(property-9, are-7)
det(property-9, the-8)
conj_and(have-4, property-9)
poss(owners-12, their-11)
prep_of(property-9, owners-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP deny)
          (NP (DT this)))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (MD can) (RB not)
      (VP (VB claim)
        (NP (DT a) (NN right)
          (S
            (VP (TO to)
              (VP
                (VP (VB eat)
                  (NP (NN meat)))
                (CC and)
                (VP (VB wear)
                  (NP (NN leather)))))))))
    (. .)))

mark(deny-3, If-1)
nsubj(deny-3, you-2)
advcl(claim-10, deny-3)
dobj(deny-3, this-4)
advmod(claim-10, then-6)
nsubj(claim-10, you-7)
aux(claim-10, can-8)
neg(claim-10, not-9)
root(ROOT-0, claim-10)
det(right-12, a-11)
dobj(claim-10, right-12)
aux(eat-14, to-13)
infmod(right-12, eat-14)
dobj(eat-14, meat-15)
infmod(right-12, wear-17)
conj_and(eat-14, wear-17)
dobj(wear-17, leather-18)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (VP (VBN lost)
          (NP
            (NP (DT any) (JJ principled) (NN argument))
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD can)
                  (VP (VB make)
                    (PP (IN for)
                      (NP (DT these) (NNS practices)))))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP make)
            (NP (JJ pragmatic) (NNS arguments)))))
      (, ,)
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBZ confess)
        (PP (TO to)
          (S
            (VP (VBG being)
              (NP
                (NP (DT a) (NN murderer))
                (CONJP (RB as) (RB well) (IN as))
                (NP (DT a) (NN hypocrite))))))))
    (. .)))

nsubj(lost-3, You-1)
aux(lost-3, have-2)
root(ROOT-0, lost-3)
det(argument-6, any-4)
amod(argument-6, principled-5)
dobj(lost-3, argument-6)
dobj(make-9, argument-6)
nsubj(make-9, you-7)
aux(make-9, can-8)
rcmod(argument-6, make-9)
det(practices-12, these-11)
prep_for(make-9, practices-12)
mark(make-17, if-15)
nsubj(make-17, you-16)
advcl(confess-23, make-17)
amod(arguments-19, pragmatic-18)
dobj(make-17, arguments-19)
advmod(confess-23, then-21)
nsubj(confess-23, you-22)
conj_and(lost-3, confess-23)
cop(murderer-27, being-25)
det(murderer-27, a-26)
prepc_to(confess-23, murderer-27)
det(hypocrite-32, a-31)
prepc_to(confess-23, hypocrite-32)
conj_and(murderer-27, hypocrite-32)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB also))
    (VP (VBP make)
      (NP (DT a) (JJ great) (NN leap))
      (PP (IN down)
        (NP (DT a) (RB very) (JJ slippery) (NN slope))))
    (. .)))

nsubj(make-3, You-1)
advmod(make-3, also-2)
root(ROOT-0, make-3)
det(leap-6, a-4)
amod(leap-6, great-5)
dobj(make-3, leap-6)
det(slope-11, a-8)
advmod(slope-11, very-9)
amod(slope-11, slippery-10)
prep_down(make-3, slope-11)

(ROOT
  (S
    (S
      (NP
        (NP (NNS Degrees))
        (PP (IN of) (`` ``)
          (FRAG
            (ADVP (RB out))
            (PP (IN of)
              (NP (DT the) (NN birth) (NN canal))))
          ('' '')))
      (VP (VBZ is) (RB not)
        (ADJP (JJ fundamental))
        (ADVP (RB here))))
    (: ;)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (ADJP (JJ fundamental)))))
      (VP (VBZ is)
        (NP
          (NP (DT the) (NN nature))
          (PP (IN of)
            (NP (DT the) (NN entity))))))
    (. .)))

nsubj(fundamental-12, Degrees-1)
prep(Degrees-1, of-2)
det(canal-8, the-6)
nn(canal-8, birth-7)
prep_out_of(of-2, canal-8)
cop(fundamental-12, is-10)
neg(fundamental-12, not-11)
root(ROOT-0, fundamental-12)
advmod(fundamental-12, here-13)
nsubj(fundamental-17, what-15)
cop(fundamental-17, is-16)
csubj(nature-20, fundamental-17)
cop(nature-20, is-18)
det(nature-20, the-19)
parataxis(fundamental-12, nature-20)
det(entity-23, the-22)
prep_of(nature-20, entity-23)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (DT a) (NN fetus))
    (VP (VBZ becomes)
      (NP
        (NP (DT a) (NN person))
        (PP (IN at)
          (NP (NN birth)))))
    (. .)))

advmod(person-7, Again-1)
det(fetus-4, a-3)
nsubj(person-7, fetus-4)
cop(person-7, becomes-5)
det(person-7, a-6)
root(ROOT-0, person-7)
prep_at(person-7, birth-9)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NNS laws))
        (PP (IN of)
          (NP (NN nature))))
      (ADVP (RB eventually))
      (VP (VBP result)
        (PP (IN in)
          (NP
            (NP
              (NP (DT a) (NN fetus))
              (VP (VBG becoming)
                (NP
                  (NP (NN survivable))
                  (, ,)
                  (ADJP (RB fully) (VBN formed)))))
            (, ,)
            (NP
              (NP (PRP$ its) (NNS organs))
              (VP (VBG functioning)
                (ADVP (RB autonomously))))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (JJ whole) (NN organism))
              (VP (VBG becoming)
                (ADJP (RB metaphysically) (JJ independent))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN at)
        (NP (DT that) (NN time)))
      (, ,)
      (NP
        (NP (DT the) (NN law))
        (PP (IN of)
          (NP (NN cause-and-effect))))
      (VP (VBZ induces)
        (NP (NN childbirth))))
    (. .)))

det(laws-2, The-1)
nsubj(result-6, laws-2)
prep_of(laws-2, nature-4)
advmod(result-6, eventually-5)
root(ROOT-0, result-6)
det(fetus-9, a-8)
prep_in(result-6, fetus-9)
partmod(fetus-9, becoming-10)
attr(becoming-10, survivable-11)
advmod(formed-14, fully-13)
amod(survivable-11, formed-14)
poss(organs-17, its-16)
prep_in(result-6, organs-17)
conj_and(fetus-9, organs-17)
partmod(organs-17, functioning-18)
advmod(functioning-18, autonomously-19)
det(organism-24, the-22)
amod(organism-24, whole-23)
prep_in(result-6, organism-24)
conj_and(fetus-9, organism-24)
partmod(organism-24, becoming-25)
advmod(independent-27, metaphysically-26)
acomp(becoming-25, independent-27)
det(time-32, that-31)
prep_at(induces-38, time-32)
det(law-35, the-34)
nsubj(induces-38, law-35)
prep_of(law-35, cause-and-effect-37)
conj_and(result-6, induces-38)
dobj(induces-38, childbirth-39)

(ROOT
  (S
    (NP
      (NP (NNP Nature))
      (, ,)
      (CC or)
      (NP (NN reality))
      (, ,))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ sets)
            (NP
              (NP (DT the) (NN standard))
              (, ,)
              (NP (RB not) (JJ medical) (NN technology))
              (CC or)
              (NP
                (NP (DT the)
                  (ADJP (JJ arbitrary))
                  (NN say-so))
                (PP (IN of)
                  (NP (NNS people)))))))))
    (. .)))

nsubj(is-6, Nature-1)
conj_or(Nature-1, reality-4)
nsubj(is-6, reality-4)
root(ROOT-0, is-6)
nsubj(sets-8, what-7)
ccomp(is-6, sets-8)
det(standard-10, the-9)
dobj(sets-8, standard-10)
neg(technology-14, not-12)
amod(technology-14, medical-13)
dobj(sets-8, technology-14)
conj_or(standard-10, technology-14)
det(say-so-18, the-16)
amod(say-so-18, arbitrary-17)
dobj(sets-8, say-so-18)
conj_or(standard-10, say-so-18)
prep_of(say-so-18, people-20)

