(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (S
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT a) (NN car) (NN crash))))
            (, ,)
            (CC and)
            (S
              (NP (CD two) (NNS people))
              (VP (VBP are)
                (ADVP (RB somehow))
                (VP (VBN fused)
                  (ADVP (RB together))
                  (PP (IN in)
                    (NP (PDT such) (DT a) (NN way)))
                  (SBAR (IN that)
                    (S
                      (NP (PRP one))
                      (VP (MD will)
                        (VP (VB live)))))))))
          (CC and)
          (S
            (NP (DT the) (JJ other))
            (VP (MD will)
              (VP (VB die)
                (SBAR
                  (SBAR (IN if)
                    (S
                      (VP (VBD seperated))))
                  (, ,)
                  (CC but)
                  (SBAR (IN if)
                    (S
                      (VP (VBD left))))))))))
      (ADVP (RB together))
      (NP (DT both))
      (VP (MD will)
        (VP (VB die))))
    (, ,) (RB then)
    (S
      (NP (DT the) (NN doctor))
      (VP
        (VP (VBZ has)
          (NP (DT a) (JJ tough) (NN decision)
            (S
              (VP (TO to)
                (VP (VB make))))))
        (, ,)
        (CC but)
        (VP
          (ADVP (RB ultimately))
          (MD should)
          (VP (VB make)))))
    (. .)))

mark(is-3, If-1)
expl(is-3, there-2)
advcl(die-37, is-3)
det(crash-6, a-4)
nn(crash-6, car-5)
nsubj(is-3, crash-6)
num(people-10, two-9)
nsubjpass(fused-13, people-10)
auxpass(fused-13, are-11)
advmod(fused-13, somehow-12)
conj_and(is-3, fused-13)
advcl(die-37, fused-13)
advmod(fused-13, together-14)
predet(way-18, such-16)
det(way-18, a-17)
prep_in(fused-13, way-18)
complm(live-22, that-19)
nsubj(live-22, one-20)
aux(live-22, will-21)
ccomp(fused-13, live-22)
det(other-25, the-24)
nsubj(die-27, other-25)
aux(die-27, will-26)
conj_and(is-3, die-27)
advcl(die-37, die-27)
mark(seperated-29, if-28)
dep(die-27, seperated-29)
mark(left-33, if-32)
dep(die-27, left-33)
conj_but(seperated-29, left-33)
advmod(die-37, together-34)
nsubj(die-37, both-35)
aux(die-37, will-36)
root(ROOT-0, die-37)
advmod(die-37, then-39)
det(doctor-41, the-40)
nsubj(has-42, doctor-41)
nsubj(make-52, doctor-41)
ccomp(die-37, has-42)
det(decision-45, a-43)
amod(decision-45, tough-44)
dobj(has-42, decision-45)
aux(make-47, to-46)
infmod(decision-45, make-47)
advmod(make-52, ultimately-50)
aux(make-52, should-51)
ccomp(die-37, make-52)
conj_but(has-42, make-52)

