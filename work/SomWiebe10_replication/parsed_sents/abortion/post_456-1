(ROOT
  (S (RB Only)
    (NP (PRP she))
    (VP (VBZ knows)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ is)
            (UCP
              (ADJP (JJS best)
                (PP (IN for)
                  (NP
                    (ADJP (PRP$ her)
                      (CC and)
                      (PRP$ her))
                    (NN situation))))
              (CC and)
              (VP (VBG being)
                (VP (VBN forced)
                  (S
                    (VP (TO to)
                      (VP (VB give)
                        (NP
                          (NP (NN birth))
                          (PP (TO to)
                            (NP (DT a) (NN child) (NNS changes))))
                        (NP (DT a) (NNS mothers) (NN life)))))
                  (ADVP (RB forever)))))
            (, ,)
            (SBAR (RB rather)
              (S
                (NP (PRP it))
                (VP
                  (VP (VB be)
                    (NP (DT a) (NN choice)
                      (S
                        (VP (TO to)
                          (VP (VB keep)
                            (NP (DT the) (NN child)))))))
                  (CC or)
                  (VP (VB give)
                    (NP (DT that) (NN child))
                    (PRT (RP up))
                    (PP (IN for)
                      (NP (NN adoption)))))))))))
    (. .)))

advmod(knows-3, Only-1)
nsubj(knows-3, she-2)
root(ROOT-0, knows-3)
nsubj(best-6, what-4)
nsubjpass(forced-14, what-4)
cop(best-6, is-5)
ccomp(knows-3, best-6)
amod(situation-11, her-8)
conj_and(her-8, her-10)
poss(her-8, her-10)
amod(situation-11, her-10)
prep_for(best-6, situation-11)
auxpass(forced-14, being-13)
ccomp(knows-3, forced-14)
conj_and(best-6, forced-14)
aux(give-16, to-15)
xcomp(forced-14, give-16)
iobj(give-16, birth-17)
det(changes-21, a-19)
nn(changes-21, child-20)
prep_to(birth-17, changes-21)
det(life-24, a-22)
nn(life-24, mothers-23)
dobj(give-16, life-24)
advmod(forced-14, forever-25)
advmod(choice-31, rather-27)
nsubj(choice-31, it-28)
nsubj(give-37, it-28)
cop(choice-31, be-29)
det(choice-31, a-30)
ccomp(best-6, choice-31)
aux(keep-33, to-32)
infmod(choice-31, keep-33)
det(child-35, the-34)
dobj(keep-33, child-35)
ccomp(best-6, give-37)
conj_or(choice-31, give-37)
det(child-39, that-38)
dobj(give-37, child-39)
prt(give-37, up-40)
prep_for(give-37, adoption-42)

(ROOT
  (S
    (S (CC and)
      (NP (RBS most) (JJ unwanted) (NNS pregnancies))
      (VP (VBP are)
        (NP
          (NP (DT the) (NN burden))
          (PP (IN of)
            (NP (JJ poor) (NNS women)))
          (SBAR
            (WHNP (WP who))
            (S
              (VP
                (VP (VBP do) (RB n't))
                (CC either)
                (VP (MD ca) (RB n't)
                  (VP (VB care)
                    (PP (IN for)
                      (NP (PRP them)))
                    (ADVP (RB properly))))))))))
    (CC or)
    (S
      (NP (PRP she))
      (VP (VBD was)
        (NP
          (NP (DT a) (NN victim))
          (PP (IN of)
            (NP
              (NP (NN rape)
                (CC or)
                (NN incest))
              (CC and)
              (NP (DT no) (NN way)))))
        (SBAR (MD should)
          (S
            (NP (PRP she))
            (VP (VB be)
              (VP (VBN forced)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP (DT that) (NN child)))))))))))
    (. ...)))

advmod(pregnancies-4, most-2)
amod(pregnancies-4, unwanted-3)
nsubj(burden-7, pregnancies-4)
cop(burden-7, are-5)
det(burden-7, the-6)
root(ROOT-0, burden-7)
nsubj(do-12, burden-7)
amod(women-10, poor-9)
prep_of(burden-7, women-10)
rcmod(burden-7, do-12)
neg(do-12, n't-13)
dep(do-12, either-14)
aux(care-17, ca-15)
neg(care-17, n't-16)
conj(do-12, care-17)
prep_for(care-17, them-19)
advmod(care-17, properly-20)
nsubj(victim-25, she-22)
cop(victim-25, was-23)
det(victim-25, a-24)
conj_or(burden-7, victim-25)
nsubj(do-12, victim-25)
prep_of(victim-25, rape-27)
prep_of(victim-25, incest-29)
conj_or(rape-27, incest-29)
det(way-32, no-31)
prep_of(victim-25, way-32)
conj_and(rape-27, way-32)
dep(forced-36, should-33)
nsubjpass(forced-36, she-34)
auxpass(forced-36, be-35)
dep(victim-25, forced-36)
aux(have-38, to-37)
xcomp(forced-36, have-38)
det(child-40, that-39)
dobj(have-38, child-40)

