(ROOT
  (NP (NN pig) (NNS fetuses) (. ?)))

nn(fetuses-2, pig-1)
root(ROOT-0, fetuses-2)

(ROOT
  (S
    (PP (IN By)
      (NP (DT the) (NN way)))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP do) (RB n't)
          (VP (VB recall)
            (NP (DT any) (NN proof))
            (SBAR
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN fetus))
                  (VP (VBZ lacks)
                    (NP (DT the) (`` ``) (JJ rational) (NN faculty)))))
              (, ,) ('' '')
              (CC and)
              (SBAR (IN since)
                (S
                  (NP (PRP you))
                  (VP (VBP 're)
                    (VP (VBG bringing)
                      (NP (PRP it))
                      (PRT (RP up))))))))))
      (, ,))
    (NP
      (NP (DT the) (NN burden))
      (PP (IN of)
        (NP (NN proof))))
    (VP (VBZ is)
      (PP (IN on)
        (NP (PRP you))))
    (. .)))

det(way-3, the-2)
prep_by(is-33, way-3)
nsubj(recall-8, I-5)
aux(recall-8, do-6)
neg(recall-8, n't-7)
parataxis(is-33, recall-8)
det(proof-10, any-9)
dobj(recall-8, proof-10)
complm(lacks-14, that-11)
det(fetus-13, the-12)
nsubj(lacks-14, fetus-13)
ccomp(recall-8, lacks-14)
det(faculty-18, the-15)
amod(faculty-18, rational-17)
dobj(lacks-14, faculty-18)
mark(bringing-25, since-22)
nsubj(bringing-25, you-23)
aux(bringing-25, 're-24)
ccomp(recall-8, bringing-25)
conj_and(lacks-14, bringing-25)
dobj(bringing-25, it-26)
prt(bringing-25, up-27)
det(burden-30, the-29)
nsubj(is-33, burden-30)
prep_of(burden-30, proof-32)
root(ROOT-0, is-33)
prep_on(is-33, you-35)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR (RB just) (IN because)
      (S
        (NP (DT a) (NN being))
        (VP (VBZ does) (RB n't)
          (VP (VB speak)))))
    (, ,)
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (JJ irrational)))))))
    (. .)))

advmod(mean-13, However-1)
advmod(speak-9, just-3)
dep(speak-9, because-4)
det(being-6, a-5)
nsubj(speak-9, being-6)
aux(speak-9, does-7)
neg(speak-9, n't-8)
dep(mean-13, speak-9)
aux(mean-13, does-11)
neg(mean-13, n't-12)
root(ROOT-0, mean-13)
nsubj(irrational-16, it-14)
cop(irrational-16, 's-15)
ccomp(mean-13, irrational-16)

(ROOT
  (S
    (ADVP (RB Furthermore))
    (, ,)
    (SBAR (IN if)
      (S
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (VP (VBG going)
              (S
                (VP (TO to)
                  (VP (VB differentiate)
                    (PP (IN between)
                      (NP (NNS beings)))))))))
        (, ,) (RB then)
        (S
          (NP (PRP you))
          (VP (MD must)
            (VP (VB include)
              (S
                (VP
                  (VP (VBG supernatural)
                    (NP (NNS beings)))
                  (-LRB- -LRB-)
                  (SBAR (IN whether)
                    (CC or)
                    (RB not)
                    (S
                      (NP (PRP they))
                      (VP (VBP exist))))
                  (-RRB- -RRB-)))
              (PP (IN into)
                (NP (PRP$ your) (NN assertion)))
              (, ,)
              (SBAR (IN since)
                (S
                  (NP (NNP God))
                  (VP (VBZ is)
                    (NP (DT a) (JJ rational) (NN being))
                    (PRN (-LRB- -LRB-)
                      (ADVP (RB even))
                      (ADJP (IN if)
                        (ADVP (RB only)
                          (PP (IN in)
                            (NP (NN concept)))))
                      (-RRB- -RRB-))))))))))
    (PRN (, ,)
      (S
        (NP (PRP$ your) (NN logic))
        (VP (VBZ dictates)
          (SBAR (IN that)
            (S
              (NP (PRP He))
              (VP (MD must)
                (VP (VB be)
                  (NP (DT a) (NN man))))))))
      (, ,))
    (NP
      (NP (RB hence) (PRP$ your) (NN choice))
      (PP (IN of)
        (NP (NN differentiation))))
    (VP (VBZ is)
      (ADJP (JJ flawed)))
    (. .)))

advmod(flawed-59, Furthermore-1)
mark(going-6, if-3)
nsubj(going-6, you-4)
xsubj(differentiate-8, you-4)
aux(going-6, 're-5)
dep(flawed-59, going-6)
aux(differentiate-8, to-7)
xcomp(going-6, differentiate-8)
prep_between(differentiate-8, beings-10)
advmod(going-6, then-12)
nsubj(include-15, you-13)
aux(include-15, must-14)
dep(going-6, include-15)
ccomp(include-15, supernatural-16)
dobj(supernatural-16, beings-17)
dep(exist-23, whether-19)
ccomp(supernatural-16, not-21)
conj_or(exist-23, not-21)
nsubj(exist-23, they-22)
ccomp(supernatural-16, exist-23)
poss(assertion-27, your-26)
prep_into(include-15, assertion-27)
mark(being-34, since-29)
nsubj(being-34, God-30)
cop(being-34, is-31)
det(being-34, a-32)
amod(being-34, rational-33)
advcl(include-15, being-34)
dep(if-37, even-36)
dep(being-34, if-37)
advmod(if-37, only-38)
prep_in(only-38, concept-40)
poss(logic-44, your-43)
nsubj(dictates-45, logic-44)
parataxis(flawed-59, dictates-45)
complm(man-51, that-46)
nsubj(man-51, He-47)
aux(man-51, must-48)
cop(man-51, be-49)
det(man-51, a-50)
ccomp(dictates-45, man-51)
advmod(choice-55, hence-53)
poss(choice-55, your-54)
nsubj(flawed-59, choice-55)
prep_of(choice-55, differentiation-57)
cop(flawed-59, is-58)
root(ROOT-0, flawed-59)

