(ROOT
  (S (CC and)
    (NP (DT that))
    (VP (VBZ is)
      (SBAR
        (SBAR
          (WHADJP (RB exactly) (WP what))
          (S
            (NP (PRP they))
            (VP (VBP are)
              (VP (VBG doing)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (VP (VBG KILLING)
                      (NP (DT A) (NN CHILD)
                        (CC or)
                        (NN fetus)))))))))
        (CC or)
        (SBAR
          (WHNP (WDT whatever))
          (S
            (NP (PRP you))
            (VP (MD would)
              (VP (VB like)
                (S
                  (VP (TO to)
                    (VP (VB justify)
                      (NP (PRP it))
                      (SBAR (IN as)
                        (S
                          (VP (TO to)
                            (VP (VB make)
                              (S
                                (NP (PRP yourself))
                                (VP (VB feel)
                                  (ADVP (RBR better)))))))))))))))))
    (. .)))

cc(is-3, and-1)
nsubj(is-3, that-2)
root(ROOT-0, is-3)
dep(doing-8, exactly-4)
dep(exactly-4, what-5)
nsubj(doing-8, they-6)
aux(doing-8, are-7)
dep(is-3, doing-8)
advmod(KILLING-10, when-9)
advcl(doing-8, KILLING-10)
det(CHILD-12, A-11)
dobj(KILLING-10, CHILD-12)
dobj(KILLING-10, fetus-14)
conj_or(CHILD-12, fetus-14)
dobj(like-19, whatever-16)
nsubj(like-19, you-17)
xsubj(justify-21, you-17)
aux(like-19, would-18)
dep(is-3, like-19)
conj_or(doing-8, like-19)
aux(justify-21, to-20)
xcomp(like-19, justify-21)
dobj(justify-21, it-22)
mark(make-25, as-23)
aux(make-25, to-24)
advcl(justify-21, make-25)
xcomp(justify-21, make-25)
nsubj(feel-27, yourself-26)
ccomp(make-25, feel-27)
advmod(feel-27, better-28)

