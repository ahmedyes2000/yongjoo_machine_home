(ROOT
  (S
    (S
      (NP (PRP I))
      (ADVP (RB only)
        (PP (IN down)
          (NP
            (NP
              (NP (NN vote))
              (PRN (: faulty)
                (NP (NN logic))
                (: :))
              (-RRB- -RRB-))
            (CC and)
            (NP (NN insult)))))
      (VP (VBZ is)
        (NP
          (NP (DT no) (NN argument))
          (, ,)
          (SBAR
            (S
              (S
                (INTJ (VB please))
                (VP (VB deal)
                  (PP (IN with)
                    (NP (NN ihe) (NN issue)))
                  (PP (IN at)
                    (NP (NN hand)))))
              (CC and)
              (ADVP (RB actually))
              (S
                (VP (VB respond)
                  (PP (TO to)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ is)
                          (VP (VBN said)))))))))))))
    (CC and)
    (RB not)
    (S
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP think))))
      (VP (VBZ is)
        (VP (VBN said))))
    (. .)))

nsubj(argument-13, I-1)
advmod(argument-13, only-2)
prep_down(only-2, vote-4)
punct(logic-6, faulty-5)
dep(vote-4, logic-6)
prep_down(only-2, insult-10)
conj_and(vote-4, insult-10)
cop(argument-13, is-11)
det(argument-13, no-12)
root(ROOT-0, argument-13)
dep(deal-16, please-15)
rcmod(argument-13, deal-16)
nn(issue-19, ihe-18)
prep_with(deal-16, issue-19)
prep_at(deal-16, hand-21)
rcmod(argument-13, actually-23)
advmod(deal-16, actually-23)
conj_and(deal-16, actually-23)
rcmod(argument-13, respond-24)
conj_and(deal-16, respond-24)
nsubjpass(said-28, what-26)
auxpass(said-28, is-27)
prepc_to(respond-24, said-28)
conj_and(argument-13, not-30)
neg(argument-13, not-30)
dobj(think-33, what-31)
nsubj(think-33, you-32)
csubjpass(said-35, think-33)
auxpass(said-35, is-34)
ccomp(argument-13, said-35)

