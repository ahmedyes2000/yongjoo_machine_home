(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (NP (JJ pro) (NN choice))
      (PP (IN because)
        (NP
          (NP (CD 1) (: :) (CD Whether))
          (CC or)
          (S (RB not)
            (VP (TO to)
              (VP (VB have)
                (NP
                  (NP (DT an) (NN abortion))
                  (SBAR
                    (S
                      (VP (VBZ is)
                        (NP
                          (NP (DT a) (JJ personal) (JJ medical) (NN decision))
                          (PP (IN by)
                            (NP
                              (NP (DT the) (NN woman))
                              (VP (VBG carrying)
                                (NP
                                  (NP (DT the) (NN baby))
                                  (PP (IN about)
                                    (SBAR
                                      (WHNP (WP what))
                                      (S
                                        (VP (TO to)
                                          (VP (VB do)
                                            (PP (IN with)
                                              (NP (PRP$ her) (JJ own) (NN body)))))))))))))))))))))))
    (. .)))

nsubj(choice-4, I-1)
cop(choice-4, am-2)
amod(choice-4, pro-3)
root(ROOT-0, choice-4)
num(Whether-8, 1-6)
prep_because(choice-4, Whether-8)
neg(have-12, not-10)
aux(have-12, to-11)
prep_because(choice-4, have-12)
conj_or(Whether-8, have-12)
infmod(Whether-8, have-12)
det(abortion-14, an-13)
dobj(have-12, abortion-14)
cop(decision-19, is-15)
det(decision-19, a-16)
amod(decision-19, personal-17)
amod(decision-19, medical-18)
rcmod(abortion-14, decision-19)
det(woman-22, the-21)
prep_by(decision-19, woman-22)
partmod(woman-22, carrying-23)
det(baby-25, the-24)
dobj(carrying-23, baby-25)
nsubj(do-29, what-27)
aux(do-29, to-28)
prepc_about(baby-25, do-29)
poss(body-33, her-31)
amod(body-33, own-32)
prep_with(do-29, body-33)

(ROOT
  (S
    (NP
      (NP (DT The) (NN fate))
      (PP (IN of)
        (NP (PRP$ her) (NN fetus))))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT the) (NN business))
        (PP (IN of)
          (NP
            (NP (NN anyone))
            (PP (IN except)
              (NP
                (ADJP (PRP$ her)
                  (CC and)
                  (PRP$ her))
                (NN doctor)))))))
    (. .)))

det(fate-2, The-1)
nsubj(business-9, fate-2)
poss(fetus-5, her-4)
prep_of(fate-2, fetus-5)
cop(business-9, is-6)
neg(business-9, not-7)
det(business-9, the-8)
root(ROOT-0, business-9)
prep_of(business-9, anyone-11)
amod(doctor-16, her-13)
conj_and(her-13, her-15)
poss(her-13, her-15)
amod(doctor-16, her-15)
prep_except(anyone-11, doctor-16)

(ROOT
  (X
    (NP (CD 5))
    (: :)
    (FRAG
      (SBAR (IN If)
        (S
          (NP (NN abortion))
          (VP (VBD were)
            (NP
              (NP
                (ADJP (JJ illegal)
                  (CC and)
                  (JJ considered))
                (NN murder))
              (ADVP (RB then))
              (SBAR
                (S
                  (NP
                    (NP (DT the) (NN mother))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBD had)
                          (NP (DT the) (NN abortion))))))
                  (VP (MD would)
                    (VP (VB have)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN prosecuted)
                              (PP (IN for)
                                (NP (JJ first) (NN degree) (NN murder))))))))))))))))
    (. .)))

root(ROOT-0, 5-1)
mark(murder-9, If-3)
nsubj(murder-9, abortion-4)
cop(murder-9, were-5)
amod(murder-9, illegal-6)
conj_and(illegal-6, considered-8)
amod(murder-9, considered-8)
dep(5-1, murder-9)
dobj(have-18, murder-9)
advmod(murder-9, then-10)
det(mother-12, the-11)
nsubj(had-14, mother-12)
nsubj(have-18, mother-12)
xsubj(prosecuted-21, mother-12)
rcmod(mother-12, had-14)
det(abortion-16, the-15)
dobj(had-14, abortion-16)
aux(have-18, would-17)
rcmod(murder-9, have-18)
aux(prosecuted-21, to-19)
auxpass(prosecuted-21, be-20)
xcomp(have-18, prosecuted-21)
amod(murder-25, first-23)
nn(murder-25, degree-24)
prep_for(prosecuted-21, murder-25)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP find)
        (S
          (NP (DT that))
          (ADJP (RB morally) (JJ wrong)))))
    (CC but)
    (S
      (NP (PRP I))
      (ADVP (RB also))
      (VP (VBP find)
        (S
          (NP (PRP it))
          (ADJP (RB economically) (JJ wrong))
          (SBAR (IN as)
            (S
              (NP (PRP it))
              (VP (MD will)
                (VP
                  (VP (VB increase)
                    (NP (DT the) (NN prison) (NN population)))
                  (CC and)
                  (VP
                    (ADVP (RB once) (RB again))
                    (VB redirect)
                    (NP (PRP$ my) (NN tax) (NNS dollars))
                    (PP (IN from)
                      (NP (NNS causes)))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (MD 'd) (RB rather)
                          (VP (VB see)
                            (S
                              (NP (PRP them))
                              (VP (VB go)
                                (PP (TO to))))))))))))))))
    (. .)))

nsubj(find-2, I-1)
root(ROOT-0, find-2)
nsubj(wrong-5, that-3)
advmod(wrong-5, morally-4)
xcomp(find-2, wrong-5)
nsubj(find-9, I-7)
advmod(find-9, also-8)
conj_but(find-2, find-9)
nsubj(increase-16, it-10)
nsubj(redirect-23, it-10)
advmod(wrong-12, economically-11)
dep(increase-16, wrong-12)
mark(increase-16, as-13)
nsubj(increase-16, it-14)
aux(increase-16, will-15)
xcomp(find-9, increase-16)
det(population-19, the-17)
nn(population-19, prison-18)
dobj(increase-16, population-19)
advmod(again-22, once-21)
advmod(redirect-23, again-22)
xcomp(find-9, redirect-23)
conj_and(increase-16, redirect-23)
poss(dollars-26, my-24)
nn(dollars-26, tax-25)
dobj(redirect-23, dollars-26)
prep_from(redirect-23, causes-28)
nsubj(see-32, I-29)
aux(see-32, 'd-30)
advmod(see-32, rather-31)
dep(redirect-23, see-32)
nsubj(go-34, them-33)
ccomp(see-32, go-34)
prep(go-34, to-35)

(ROOT
  (S
    (LST (LS 2))
    (: :)
    (NP (DT A) (NN fetus))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (JJ human) (NN being))
        (, ,)
        (VP (VBG meaning)
          (S
            (VP (VBG terminating)
              (SBAR
                (S
                  (NP (DT a) (NN pregnancy))
                  (VP (VBZ is) (RB not)
                    (NP (NN murder))))))))))
    (. .)))

dep(being-9, 2-1)
det(fetus-4, A-3)
nsubj(being-9, fetus-4)
cop(being-9, is-5)
neg(being-9, not-6)
det(being-9, a-7)
amod(being-9, human-8)
root(ROOT-0, being-9)
partmod(being-9, meaning-11)
xcomp(meaning-11, terminating-12)
det(pregnancy-14, a-13)
nsubj(murder-17, pregnancy-14)
cop(murder-17, is-15)
neg(murder-17, not-16)
ccomp(terminating-12, murder-17)

(ROOT
  (S (IN For)
    (NP
      (NP (NN evidence))
      (PP (IN of)
        (NP (DT this))))
    (VP (VBP consider)
      (SBAR (IN whether)
        (S
          (NP (DT a) (JJ first)
            (CC or)
            (JJ second) (NN trimester) (NN fetus))
          (VP (MD could)
            (VP (VB live)
              (PP (IN on)
                (NP (PRP$ its) (JJ own)))
              (, ,)
              (PP (IN without)
                (NP
                  (NP (DT the) (NN asistance))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN mother))
                      (CC or)
                      (NP (JJ medical) (NN technology)))))))))))
    (. .)))

dep(consider-5, For-1)
nsubj(consider-5, evidence-2)
prep_of(evidence-2, this-4)
root(ROOT-0, consider-5)
complm(live-14, whether-6)
dep(first-8, a-7)
nsubj(live-14, first-8)
amod(fetus-12, second-10)
nn(fetus-12, trimester-11)
conj_or(first-8, fetus-12)
nsubj(live-14, fetus-12)
aux(live-14, could-13)
ccomp(consider-5, live-14)
poss(own-17, its-16)
prep_on(live-14, own-17)
det(asistance-21, the-20)
prep_without(live-14, asistance-21)
det(mother-24, the-23)
prep_of(asistance-21, mother-24)
amod(technology-27, medical-26)
prep_of(asistance-21, technology-27)
conj_or(mother-24, technology-27)

(ROOT
  (SINV
    (ADVP (RB Also))
    (VP (VBP consider)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN bible))
          (VP (VBZ does) (RB not)
            (VP (VB consider)
              (NP (NNS fetuses)))))))
    (NP
      (NP (JJ legal) (JJ human) (NNS beings))
      (PRN (-LRB- -LRB-)
        (NP (NNP Exodus)
          (QP (CD 21:22) (CD -25)))
        (-RRB- -RRB-))
      (, ,)
      (SBAR (IN so)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT no) (JJ religious) (NN argument))
              (VP (VBG supporting)
                (NP (DT the) (JJ pro) (NN life) (NN position))))))))
    (. .)))

advmod(consider-2, Also-1)
root(ROOT-0, consider-2)
complm(consider-8, that-3)
det(bible-5, the-4)
nsubj(consider-8, bible-5)
aux(consider-8, does-6)
neg(consider-8, not-7)
ccomp(consider-2, consider-8)
dobj(consider-8, fetuses-9)
amod(beings-12, legal-10)
amod(beings-12, human-11)
nsubj(consider-2, beings-12)
appos(beings-12, Exodus-14)
number(-25-16, 21:22-15)
num(Exodus-14, -25-16)
mark(is-21, so-19)
expl(is-21, there-20)
dep(beings-12, is-21)
det(argument-24, no-22)
amod(argument-24, religious-23)
nsubj(is-21, argument-24)
partmod(argument-24, supporting-25)
det(position-29, the-26)
amod(position-29, pro-27)
nn(position-29, life-28)
dobj(supporting-25, position-29)

(ROOT
  (S
    (LST (LS 3))
    (: :)
    (NP (NNS People))
    (VP (MD should) (RB not)
      (VP (VB be)
        (VP (VBN punished)
          (PP (IN for)
            (NP (NN birth) (NN control)))
          (S
            (VP (VBG failing)))
          (, ,)
          (PP (IN for)
            (S
              (VP (VBG being)
                (ADJP (JJ uninformed)
                  (PP
                    (PP (IN about)
                      (SBAR
                        (WHADVP (WRB how))
                        (S
                          (NP (NNS babies))
                          (VP (VBP are)
                            (VP (VBN made))))))
                    (CC or)
                    (PP (IN for)
                      (NP (JJ general) (NN immaturity)))))))))))
    (. .)))

dep(punished-7, 3-1)
nsubjpass(punished-7, People-3)
aux(punished-7, should-4)
neg(punished-7, not-5)
auxpass(punished-7, be-6)
root(ROOT-0, punished-7)
nn(control-10, birth-9)
prep_for(punished-7, control-10)
xcomp(punished-7, failing-11)
cop(uninformed-15, being-14)
prepc_for(punished-7, uninformed-15)
prepc_for(punished-7, uninformed-15')
conj_or(uninformed-15, uninformed-15')
advmod(made-20, how-17)
nsubjpass(made-20, babies-18)
auxpass(made-20, are-19)
prepc_about(uninformed-15, made-20)
amod(immaturity-24, general-23)
prep_for(uninformed-15', immaturity-24)

(ROOT
  (S
    (S
      (NP (DT A) (NN baby))
      (VP (VBZ is)
        (NP (DT an)
          (ADJP (RB extremely) (JJ expensive))
          (NN thing))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (CD two) (NNS parents))
            (VP
              (VP (VBD were)
                (ADJP (JJ unprepared) (RB financially)))
              (CC or)
              (VP (VBP lack)
                (S
                  (NP (DT the) (NN maturity))
                  (ADJP (JJ necessary)
                    (S
                      (VP (TO to)
                        (VP (VB raise)
                          (NP
                            (NP (DT a) (NN child))
                            (PP (IN in)
                              (NP (JJ modern) (NNS times)))))))))))))))
    (RB then)
    (S
      (NP (DT a) (NN pregnancy))
      (VP (MD could)
        (VP (VB ruin)
          (NP
            (NP (DT the) (NNS lives))
            (PP (IN of)
              (UCP
                (NP
                  (NP (RB not) (RB only))
                  (NP (DT the) (NNS parents)))
                (CC but)
                (PP (IN of)
                  (NP (DT the) (NN child))))))
          (ADVP (RB as) (RB well)))))
    (. .)))

det(baby-2, A-1)
nsubj(thing-7, baby-2)
cop(thing-7, is-3)
det(thing-7, an-4)
advmod(expensive-6, extremely-5)
amod(thing-7, expensive-6)
root(ROOT-0, thing-7)
mark(unprepared-13, if-9)
num(parents-11, two-10)
nsubj(unprepared-13, parents-11)
nsubj(lack-16, parents-11)
cop(unprepared-13, were-12)
advcl(thing-7, unprepared-13)
advmod(unprepared-13, financially-14)
advcl(thing-7, lack-16)
conj_or(unprepared-13, lack-16)
det(maturity-18, the-17)
nsubj(necessary-19, maturity-18)
xcomp(lack-16, necessary-19)
aux(raise-21, to-20)
xcomp(necessary-19, raise-21)
det(child-23, a-22)
dobj(raise-21, child-23)
amod(times-26, modern-25)
prep_in(child-23, times-26)
advmod(thing-7, then-27)
det(pregnancy-29, a-28)
nsubj(ruin-31, pregnancy-29)
aux(ruin-31, could-30)
ccomp(thing-7, ruin-31)
det(lives-33, the-32)
dobj(ruin-31, lives-33)
prep(lives-33, of-34)
neg(only-36, not-35)
pobj(of-34, only-36)
det(parents-38, the-37)
dep(only-36, parents-38)
pobj(of-34, of-40)
conj_but(only-36, of-40)
det(child-42, the-41)
prep_of(only-36, child-42)
advmod(well-44, as-43)
mwe(well-44, as-43)
advmod(ruin-31, well-44)

(ROOT
  (S
    (LST (LS 4))
    (: :)
    (NP (DT An) (JJ unplanned) (NN pregnancy))
    (VP (MD can)
      (VP (VB have)
        (NP (JJ negative) (NNS consequences))
        (PP
          (CONJP (RB not) (JJ only))
          (PP (IN for)
            (NP (DT the) (NN mother) (, ,) (NN father)
              (CC and)
              (NN child)))
          (, ,)
          (CONJP (CC but)
            (RB also))
          (PP (IN for)
            (NP
              (NP (DT the) (NN society))
              (SBAR
                (S
                  (NP (PRP they))
                  (VP (VBP are)
                    (NP
                      (NP (DT a) (NN part))
                      (PP (IN of)))))))))))
    (. .)))

dep(have-7, 4-1)
det(pregnancy-5, An-3)
amod(pregnancy-5, unplanned-4)
nsubj(have-7, pregnancy-5)
aux(have-7, can-6)
root(ROOT-0, have-7)
amod(consequences-9, negative-8)
dobj(have-7, consequences-9)
neg(only-11, not-10)
preconj(have-7, only-11)
det(mother-14, the-13)
prep_for(have-7, mother-14)
prep_for(have-7, father-16)
conj_and(mother-14, father-16)
prep_for(have-7, child-18)
conj_and(mother-14, child-18)
det(society-24, the-23)
prep_for(have-7, society-24)
conj_and(mother-14, society-24)
nsubj(part-28, they-25)
cop(part-28, are-26)
det(part-28, a-27)
rcmod(society-24, part-28)
prep(part-28, of-29)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT this) (NN family))
        (VP (VBD was) (RB not)
          (ADJP (RB financially) (JJ able)
            (S
              (VP (TO to)
                (VP (VB raise)
                  (NP (DT a) (NN child)))))))))
    (, ,)
    (NP (DT the) (NN public))
    (VP (VBZ ends)
      (PRT (RP up))
      (S
        (VP (VBG paying)
          (PP (IN for)
            (NP (PRP them)))
          (PP (IN through)
            (NP
              (NP (NN welfare) (NNS programs))
              (, ,)
              (NP (FW etc.) (. .)))))))
    (. .)))

mark(able-7, If-1)
det(family-3, this-2)
nsubj(able-7, family-3)
cop(able-7, was-4)
neg(able-7, not-5)
advmod(able-7, financially-6)
advcl(ends-15, able-7)
aux(raise-9, to-8)
xcomp(able-7, raise-9)
det(child-11, a-10)
dobj(raise-9, child-11)
det(public-14, the-13)
nsubj(ends-15, public-14)
root(ROOT-0, ends-15)
prt(ends-15, up-16)
xcomp(ends-15, paying-17)
prep_for(paying-17, them-19)
nn(programs-22, welfare-21)
prep_through(paying-17, programs-22)
appos(programs-22, etc.-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would) (RB rather)
      (VP (VB see)
        (S
          (NP (PRP$ my) (NN tax) (NNS dollars))
          (VP (VB go)
            (PP (TO to)
              (NP
                (ADJP (RBR more) (JJ productive))
                (NNS causes)))))))
    (. .)))

nsubj(see-4, I-1)
aux(see-4, would-2)
advmod(see-4, rather-3)
root(ROOT-0, see-4)
poss(dollars-7, my-5)
nn(dollars-7, tax-6)
nsubj(go-8, dollars-7)
ccomp(see-4, go-8)
advmod(productive-11, more-10)
amod(causes-12, productive-11)
prep_to(go-8, causes-12)

