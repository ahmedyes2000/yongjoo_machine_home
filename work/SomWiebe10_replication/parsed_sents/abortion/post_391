(ROOT
  (FRAG
    (NP (NNP Dear) (NNP Pepper))
    (: :)
    (S
      (NP (PRP You))
      (VP (VBD asked) (: :) (`` ``)
        (SBARQ
          (WHADVP (RB So))
          (SQ (VBP are)
            (NP (PRP you))
            (VP (VBG suggesting)
              (NP
                (NP (DT that) (NNS cats) (, ,) (NNS rats) (, ,) (NNS birds)
                  (CC and)
                  (NNS dolphins))
                (SBAR
                  (S
                    (VP (VBP do) (RB not)
                      (VP (VB think))))))))
          (. ?))))))

nn(Pepper-2, Dear-1)
root(ROOT-0, Pepper-2)
nsubj(asked-5, You-4)
dep(Pepper-2, asked-5)
advmod(suggesting-11, So-8)
aux(suggesting-11, are-9)
nsubj(suggesting-11, you-10)
dep(asked-5, suggesting-11)
det(cats-13, that-12)
dobj(suggesting-11, cats-13)
dobj(suggesting-11, rats-15)
conj_and(cats-13, rats-15)
dobj(suggesting-11, birds-17)
conj_and(cats-13, birds-17)
dobj(suggesting-11, dolphins-19)
conj_and(cats-13, dolphins-19)
aux(think-22, do-20)
neg(think-22, not-21)
rcmod(cats-13, think-22)

(ROOT
  (FRAG (`` ``)
    (INTJ (UH Yes))
    (. .)))


(ROOT
  (FRAG (CC Or)
    (RB maybe)
    (NP
      (NP (DT a) (NN chimp))
      (VP
        (VP (VBN worked)
          (PP (IN at)
            (NP
              (NP (PRP$ your) (NN computer))
              (PP (IN for)
                (NP (DT a) (NN while)))))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP it))
              (VP (VBN accessed)
                (NP (DT the) (NN net))))))
        (CC and)
        (VP (VBN discussed)
          (PP (IN with)
            (NP (DT an) (NNP MIT) (NN professor))))
        (NP
          (NP (DT the) (NNS dangers))
          (PP (IN of)
            (NP
              (NP (NN government) (NN interference))
              (PP (IN in)
                (NP (DT the) (NN economy))))))))
    (. ?)))

dep(maybe-2, Or-1)
root(ROOT-0, maybe-2)
det(chimp-4, a-3)
dep(maybe-2, chimp-4)
dep(chimp-4, worked-5)
poss(computer-8, your-7)
prep_at(worked-5, computer-8)
det(while-11, a-10)
prep_for(computer-8, while-11)
advmod(accessed-14, where-12)
nsubj(accessed-14, it-13)
advcl(worked-5, accessed-14)
det(net-16, the-15)
dobj(accessed-14, net-16)
dep(chimp-4, discussed-18)
conj_and(worked-5, discussed-18)
det(professor-22, an-20)
nn(professor-22, MIT-21)
prep_with(discussed-18, professor-22)
det(dangers-24, the-23)
dobj(worked-5, dangers-24)
nn(interference-27, government-26)
prep_of(dangers-24, interference-27)
det(economy-30, the-29)
prep_in(interference-27, economy-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (VP (VBG being)
        (VP (VBZ facetious))))
    (. .)))

nsubj(facetious-5, I-1)
aux(facetious-5, 'm-2)
neg(facetious-5, not-3)
aux(facetious-5, being-4)
root(ROOT-0, facetious-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (RB quite) (JJ serious)))
    (. .)))

nsubj(serious-4, I-1)
cop(serious-4, 'm-2)
advmod(serious-4, quite-3)
root(ROOT-0, serious-4)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB stress)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT a) (NN process))
                      (PP (IN of)
                        (NP (NN thought))))
                    (VP (VBZ is)
                      (ADJP (RB far) (JJ different)
                        (PP (IN from)
                          (NP
                            (NP (DT a) (NN beaver))
                            (VP (VBG making)
                              (NP
                                (NP (DT a) (NN dam))
                                (VP (VBN prompted)
                                  (PP (IN by)
                                    (NP (PRP$ his) (JJ biological) (NN programming))))))))))))))))))
    (: --)
    (CC and)
    (ADVP
      (ADVP (RB so) (RB forth))
      (PP (IN in)
        (NP (NN regard))
        (PP (TO to)
          (NP (PDT all) (DT the) (JJ other) (NNS activities)))))
    (S
      (NP (DT the) (JJR lower) (NNS animals))
      (VP (VBP engage)
        (PRT (RP in))))
    (. .)))

nsubj(trying-3, I-1)
xsubj(stress-5, I-1)
aux(trying-3, am-2)
root(ROOT-0, trying-3)
aux(stress-5, to-4)
xcomp(trying-3, stress-5)
complm(different-13, that-6)
det(process-8, a-7)
nsubj(different-13, process-8)
prep_of(process-8, thought-10)
cop(different-13, is-11)
advmod(different-13, far-12)
ccomp(stress-5, different-13)
det(beaver-16, a-15)
prep_from(different-13, beaver-16)
partmod(beaver-16, making-17)
det(dam-19, a-18)
dobj(making-17, dam-19)
partmod(dam-19, prompted-20)
poss(programming-24, his-22)
amod(programming-24, biological-23)
agent(prompted-20, programming-24)
advmod(forth-28, so-27)
advmod(trying-3, forth-28)
conj_and(trying-3, forth-28)
prep_in(forth-28, regard-30)
predet(activities-35, all-32)
det(activities-35, the-33)
amod(activities-35, other-34)
prep_to(forth-28, activities-35)
det(animals-38, the-36)
amod(animals-38, lower-37)
nsubj(engage-39, animals-38)
ccomp(trying-3, engage-39)
conj_and(trying-3, engage-39)
prt(engage-39, in-40)

(ROOT
  (S
    (NP
      (NP (NN None))
      (PP (IN of)
        (NP (DT that))))
    (VP (VBZ is)
      (VP (VBN thought)))
    (. .)))

nsubjpass(thought-5, None-1)
prep_of(None-1, that-3)
auxpass(thought-5, is-4)
root(ROOT-0, thought-5)

(ROOT
  (SINV (CC Nor)
    (VBZ is)
    (NP (NN thought))
    (NP (DT the) (NN response)
      (S
        (VP (TO to)
          (VP (VB stimuli)))))
    (. .)))

cc(thought-3, Nor-1)
cop(thought-3, is-2)
root(ROOT-0, thought-3)
det(response-5, the-4)
dep(thought-3, response-5)
aux(stimuli-7, to-6)
infmod(response-5, stimuli-7)

(ROOT
  (S
    (NP (DT A) (JJ different) (NN process))
    (VP (VBZ is)
      (VP (VBN involved)
        (NP
          (SBAR
            (WHADVP (WRB when))
            (PRN (, ,)
              (INTJ (VB say))
              (, ,))
            (S
              (NP (PRP we))
              (VP (VB discuss)
                (NP
                  (NP (PRP$ our) (VBG differing) (NNS points))
                  (PP (IN of)
                    (NP (NN view))))))))))
    (. .)))

det(process-3, A-1)
amod(process-3, different-2)
nsubjpass(involved-5, process-3)
auxpass(involved-5, is-4)
root(ROOT-0, involved-5)
advmod(discuss-11, when-6)
dep(discuss-11, say-8)
nsubj(discuss-11, we-10)
dobj(involved-5, discuss-11)
poss(points-14, our-12)
amod(points-14, differing-13)
dobj(discuss-11, points-14)
prep_of(points-14, view-16)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD could) (RB not)
      (VP (VB hold)
        (NP (DT this) (NN discussion))
        (PP (IN with)
          (NP
            (NP (DT any))
            (PP (IN of)
              (NP (DT the) (JJR lower) (NNS animals)))))))
    (. .)))

nsubj(hold-4, I-1)
aux(hold-4, could-2)
neg(hold-4, not-3)
root(ROOT-0, hold-4)
det(discussion-6, this-5)
dobj(hold-4, discussion-6)
prep_with(hold-4, any-8)
det(animals-12, the-10)
amod(animals-12, lower-11)
prep_of(any-8, animals-12)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (SBAR (IN that)
          (S
            (VP (VBZ is))))))
    (. ?)))

advmod(think-4, Why-1)
aux(think-4, do-2)
nsubj(think-4, you-3)
root(ROOT-0, think-4)
complm(is-6, that-5)
ccomp(think-4, is-6)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (ADVP
      (ADVP (RB merely))
      (PP (IN because)
        (NP
          (NP (PRP you))
          (CC and)
          (NP
            (NP (PRP I))
            (NP (NN share))))))
    (NP (DT the) (JJ same) (NN language))
    (. ?)))

cop(language-11, Is-1)
nsubj(language-11, it-2)
advmod(language-11, merely-3)
prep_because(merely-3, you-5)
prep_because(merely-3, I-7)
conj_and(you-5, I-7)
dep(I-7, share-8)
det(language-11, the-9)
amod(language-11, same-10)
root(ROOT-0, language-11)

(ROOT
  (SQ (CC Or)
    (VBZ is)
    (NP (NN something))
    (ADJP
      (ADVP (RB else))
      (VBN involved))
    (. ?)))

cc(involved-5, Or-1)
aux(involved-5, is-2)
nsubj(involved-5, something-3)
advmod(involved-5, else-4)
root(ROOT-0, involved-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (ADVP (RB merely))
      (VP (VB suggest)
        (NP (PRP it))))
    (. .)))

nsubj(suggest-5, I-1)
aux(suggest-5, do-2)
neg(suggest-5, n't-3)
advmod(suggest-5, merely-4)
root(ROOT-0, suggest-5)
dobj(suggest-5, it-6)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (S
      (ADVP (RB suppose))
      (NP (PRP we))
      (VP (VBP are)
        (PP (IN in)
          (NP (DT the) (JJ same) (NN room)))))
    (CC and)
    (S
      (PP (IN in)
        (NP (NN silence)))
      (NP (PRP I))
      (VP (VBP point)
        (PP (TO to)
          (NP (DT a) (NN chair)))))
    (. .)))

prep_for(are-6, example-2)
advmod(are-6, suppose-4)
nsubj(are-6, we-5)
root(ROOT-0, are-6)
det(room-10, the-8)
amod(room-10, same-9)
prep_in(are-6, room-10)
prep_in(point-15, silence-13)
nsubj(point-15, I-14)
conj_and(are-6, point-15)
det(chair-18, a-17)
prep_to(point-15, chair-18)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD would)
      (VP (VB know)
        (ADVP (RB immediately))
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT that) (NN object))
            (VP (VBD was))))))
    (. .)))

nsubj(know-3, You-1)
aux(know-3, would-2)
root(ROOT-0, know-3)
advmod(know-3, immediately-4)
dobj(was-8, what-5)
det(object-7, that-6)
nsubj(was-8, object-7)
ccomp(know-3, was-8)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP I))
        (ADVP (RB also))
        (VP (VBD pointed)
          (PP (TO to)
            (NP (DT a) (NN dining) (NN table))))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (ADVP (RB again))
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBG pointing)
                (PP (TO to))))))))
    (. .)))

cc(know-14, And-1)
mark(pointed-5, if-2)
nsubj(pointed-5, I-3)
advmod(pointed-5, also-4)
advcl(know-14, pointed-5)
det(table-9, a-7)
nn(table-9, dining-8)
prep_to(pointed-5, table-9)
nsubj(know-14, you-11)
aux(know-14, would-12)
advmod(know-14, again-13)
root(ROOT-0, know-14)
dobj(pointing-18, what-15)
nsubj(pointing-18, I-16)
aux(pointing-18, was-17)
ccomp(know-14, pointing-18)
prep(pointing-18, to-19)

(ROOT
  (S (RB Then)
    (VP (VB suppose)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD stated) (, ,) (`` ``)
            (S
              (NP (PRP I))
              (VP (VB need)
                (NP (JJR more) (NN furniture))))))))
    (. .)))

advmod(suppose-2, Then-1)
root(ROOT-0, suppose-2)
nsubj(stated-4, I-3)
ccomp(suppose-2, stated-4)
nsubj(need-8, I-7)
ccomp(stated-4, need-8)
amod(furniture-10, more-9)
dobj(need-8, furniture-10)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (MD would)
      (VP (VB know)
        (ADVP (RB instantly))
        (SBAR (IN that)
          (S
            (SBAR
              (WHNP (WP what))
              (S
                (NP (PRP I))
                (VP (VBD meant)
                  (X (VBD was)))))
            (NP (PRP I))
            (VP (VBP need)
              (NP
                (NP (DT another) (NN chair))
                (, ,)
                (CC or)
                (NP
                  (NP (DT a) (NN bed))
                  (CC or)
                  (NP (DT a) (NN side) (NN table)))))))))
    (. .)))

nsubj(know-4, You-2)
aux(know-4, would-3)
root(ROOT-0, know-4)
advmod(know-4, instantly-5)
complm(need-12, that-6)
dobj(meant-9, what-7)
nsubj(meant-9, I-8)
dep(need-12, meant-9)
dep(meant-9, was-10)
nsubj(need-12, I-11)
ccomp(know-4, need-12)
det(chair-14, another-13)
dobj(need-12, chair-14)
det(bed-18, a-17)
dobj(need-12, bed-18)
conj_or(chair-14, bed-18)
det(table-22, a-20)
nn(table-22, side-21)
conj_or(chair-14, table-22)
conj_or(bed-18, table-22)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN example))
        (PP (IN of)
          (NP (NN concept) (NN formation)))))
    (. .)))

nsubj(example-4, This-1)
cop(example-4, is-2)
det(example-4, an-3)
root(ROOT-0, example-4)
nn(formation-7, concept-6)
prep_of(example-4, formation-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT an) (JJ abstract) (NN process))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (ADJP (JJ unique)
                (S
                  (VP (TO to)
                    (VP (VB man)
                      (SBAR (IN because) (RB only)
                        (S
                          (NP (PRP we))
                          (VP (VBP have)
                            (NP
                              (NP (DT the) (NN kind))
                              (PP (IN of)
                                (NP
                                  (NP (NN consciousness))
                                  (VP (VBN required)
                                    (S
                                      (VP (TO to)
                                        (VP (VB do)
                                          (NP
                                            (NP (DT that) (NN kind))
                                            (PP (IN of)
                                              (NP (JJ mental) (NN work)))))))))))))))))))))))
    (. .)))

nsubj(process-5, It-1)
cop(process-5, is-2)
det(process-5, an-3)
amod(process-5, abstract-4)
root(ROOT-0, process-5)
nsubj(unique-8, process-5)
cop(unique-8, is-7)
rcmod(process-5, unique-8)
aux(man-10, to-9)
xcomp(unique-8, man-10)
mark(have-14, because-11)
advmod(have-14, only-12)
nsubj(have-14, we-13)
advcl(man-10, have-14)
det(kind-16, the-15)
dobj(have-14, kind-16)
prep_of(kind-16, consciousness-18)
xsubj(do-21, consciousness-18)
partmod(consciousness-18, required-19)
aux(do-21, to-20)
xcomp(required-19, do-21)
det(kind-23, that-22)
dobj(do-21, kind-23)
amod(work-26, mental-25)
prep_of(kind-23, work-26)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (PP (IN for)
          (NP
            (NP (DT the) (NN rest))
            (PP (IN of)
              (NP (PRP$ your) (NNS comments)))))
        (, ,)
        (NP (PRP I))
        (VP (VBP regret)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP do) (RB not)
                      (VP (VB agree)
                        (PP (IN with)
                          (NP (NN anything)))))))))))))
    (NP (PRP you))
    (VP (VBD wrote))
    (. .)))

mark(regret-10, As-1)
det(rest-4, the-3)
prep_for(regret-10, rest-4)
poss(comments-7, your-6)
prep_of(rest-4, comments-7)
nsubj(regret-10, I-9)
xsubj(say-12, I-9)
advcl(wrote-20, regret-10)
aux(say-12, to-11)
xcomp(regret-10, say-12)
nsubj(agree-16, I-13)
aux(agree-16, do-14)
neg(agree-16, not-15)
ccomp(say-12, agree-16)
prep_with(agree-16, anything-18)
nsubj(wrote-20, you-19)
root(ROOT-0, wrote-20)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBD said)
          (ADVP (RB before)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB consider)
        (NP
          (NP (DT a) (NN fetus))
          (NP (DT a) (JJ human) (NN being)))))
    (. .)))

mark(said-3, As-1)
nsubj(said-3, I-2)
advcl(consider-9, said-3)
advmod(said-3, before-4)
nsubj(consider-9, I-6)
aux(consider-9, do-7)
neg(consider-9, not-8)
root(ROOT-0, consider-9)
det(fetus-11, a-10)
dobj(consider-9, fetus-11)
iobj(consider-9, fetus-11)
det(being-14, a-12)
amod(being-14, human-13)
dobj(consider-9, being-14)
dep(fetus-11, being-14)

(ROOT
  (S
    (ADVP (RB Consequently))
    (NP (PRP I))
    (VP (MD can) (RB not)
      (VP (VB agree)
        (PP (IN with)
          (NP
            (NP (PRP$ your) (NNS statements))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (DT all))
                (VP (VBP follow)
                  (PP (IN from)
                    (NP (DT that) (NN premise))))))))))
    (. .)))

advmod(agree-5, Consequently-1)
nsubj(agree-5, I-2)
aux(agree-5, can-3)
neg(agree-5, not-4)
root(ROOT-0, agree-5)
poss(statements-8, your-7)
prep_with(agree-5, statements-8)
dobj(follow-12, statements-8)
rel(follow-12, which-10)
nsubj(follow-12, all-11)
rcmod(statements-8, follow-12)
det(premise-15, that-14)
prep_from(follow-12, premise-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP affirm)
      (NP (PRP it))
      (PP (IN with)
        (NP (JJ full) (NN conviction))))
    (. .)))

nsubj(affirm-2, I-1)
root(ROOT-0, affirm-2)
dobj(affirm-2, it-3)
amod(conviction-6, full-5)
prep_with(affirm-2, conviction-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB consider)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ virtuous)
              (S
                (VP (TO to)
                  (VP (VB compromise)
                    (PP (IN on)
                      (NP
                        (NP (DT the) (NN principle))
                        (PP (IN of)
                          (NP (JJ individual) (NNS rights)))))))))))))
    (. .)))

nsubj(consider-4, I-1)
aux(consider-4, do-2)
neg(consider-4, not-3)
root(ROOT-0, consider-4)
nsubj(virtuous-6, it-5)
xsubj(compromise-8, it-5)
ccomp(consider-4, virtuous-6)
aux(compromise-8, to-7)
xcomp(virtuous-6, compromise-8)
det(principle-11, the-10)
prep_on(compromise-8, principle-11)
amod(rights-14, individual-13)
prep_of(principle-11, rights-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB accept)
        (NP
          (NP (DT the) (NN initiation))
          (PP (IN of)
            (NP (NN force))))
        (PP (IN as)
          (NP
            (NP (DT a) (JJ proper) (NN mode))
            (PP (IN of)
              (NP (JJ civilized) (, ,) (JJ moral) (NN conduct)))))))
    (. .)))

nsubj(accept-4, I-1)
aux(accept-4, do-2)
neg(accept-4, not-3)
root(ROOT-0, accept-4)
det(initiation-6, the-5)
dobj(accept-4, initiation-6)
prep_of(initiation-6, force-8)
det(mode-12, a-10)
amod(mode-12, proper-11)
prep_as(accept-4, mode-12)
amod(conduct-17, civilized-14)
amod(conduct-17, moral-16)
prep_of(mode-12, conduct-17)

(ROOT
  (S
    (PP (IN Of)
      (NP (PDT all) (PRP$ your) (NNS assertions)))
    (NP (DT the) (CD one) (JJS most) (NN grievously) (NNS horrific))
    (VP (VBZ is)
      (NP (PRP$ your) (NN statement))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT a) (NN fetus))
            (PP (`` ``) (IN at)
              (NP (DT some))))
          (VP (VBP point)
            (SBAR
              (S
                (NP (PRP$ its) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB live)))))
                (VP (MD should)
                  (VP (VB supersede)
                    (NP
                      (NP (DT a) (NN woman) (POS 's))
                      (NN right)
                      (S
                        (VP (TO to)
                          (VP (VB abort)
                            (NP (PRP it))))))))))))))
    (. .)))

predet(assertions-4, all-2)
poss(assertions-4, your-3)
prep_of(statement-12, assertions-4)
det(horrific-9, the-5)
num(horrific-9, one-6)
amod(horrific-9, most-7)
nn(horrific-9, grievously-8)
nsubj(statement-12, horrific-9)
cop(statement-12, is-10)
poss(statement-12, your-11)
root(ROOT-0, statement-12)
complm(point-19, that-13)
det(fetus-15, a-14)
nsubj(point-19, fetus-15)
prep_at(fetus-15, some-18)
ccomp(statement-12, point-19)
poss(right-21, its-20)
nsubj(supersede-25, right-21)
aux(live-23, to-22)
infmod(right-21, live-23)
aux(supersede-25, should-24)
ccomp(point-19, supersede-25)
det(woman-27, a-26)
poss(right-29, woman-27)
dobj(supersede-25, right-29)
aux(abort-31, to-30)
infmod(right-29, abort-31)
dobj(abort-31, it-32)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ says)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT a) (NN woman) (POS 's))
            (NNS rights))
          (VP (MD should)
            (VP (VB be)
              (PP (IN at)
                (NP
                  (NP (DT the) (NN mercy))
                  (PP (IN of)
                    (SBAR
                      (WHNP (WP whoever))
                      (S
                        (VP (VBZ decides)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (DT that) (NN point))
                              (VP (VBZ is)))))))))))))))
    (. .)))

nsubj(says-3, This-2)
root(ROOT-0, says-3)
complm(be-10, that-4)
det(woman-6, a-5)
poss(rights-8, woman-6)
nsubj(be-10, rights-8)
aux(be-10, should-9)
ccomp(says-3, be-10)
det(mercy-13, the-12)
prep_at(be-10, mercy-13)
nsubj(decides-16, whoever-15)
prepc_of(mercy-13, decides-16)
dobj(is-20, what-17)
det(point-19, that-18)
nsubj(is-20, point-19)
ccomp(decides-16, is-20)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB enjoy)
      (S
        (VP (VBG having)
          (NP
            (NP (DT a) (`` ``) (NN right) ('' ''))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ is)
                  (ADJP (JJ conditional)
                    (PP (IN upon)
                      (SBAR
                        (WHNP
                          (WHADJP (WRB how) (JJ much))
                          (NN time))
                        (S
                          (NP (DT an) (NN egg))
                          (VP (VBZ spends)
                            (PP (IN in)
                              (NP (PRP$ your) (NN womb)))))))))))))))
    (. ?)))

aux(enjoy-3, Would-1)
nsubj(enjoy-3, you-2)
root(ROOT-0, enjoy-3)
xcomp(enjoy-3, having-4)
det(right-7, a-5)
dobj(having-4, right-7)
nsubj(conditional-11, right-7)
cop(conditional-11, is-10)
rcmod(right-7, conditional-11)
advmod(much-14, how-13)
amod(time-15, much-14)
dobj(spends-18, time-15)
det(egg-17, an-16)
nsubj(spends-18, egg-17)
prepc_upon(conditional-11, spends-18)
poss(womb-21, your-20)
prep_in(spends-18, womb-21)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB consider)
        (S
          (NP (PRP it))
          (NP (PRP$ your) (NN duty)
            (S
              (VP (TO to)
                (VP (VB give)
                  (NP (NN birth)))))))
        (, ,)
        (SBAR (IN since)
          (S
            (NP (NN someone) (RB else))
            (VP (VBZ says)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (MD must)))))))))
    (. ?)))

advmod(consider-4, Perhaps-1)
nsubj(consider-4, you-2)
aux(consider-4, would-3)
root(ROOT-0, consider-4)
nsubj(duty-7, it-5)
poss(duty-7, your-6)
xcomp(consider-4, duty-7)
aux(give-9, to-8)
infmod(duty-7, give-9)
dobj(give-9, birth-10)
mark(says-15, since-12)
nsubj(says-15, someone-13)
advmod(someone-13, else-14)
advcl(consider-4, says-15)
nsubj(must-17, you-16)
ccomp(says-15, must-17)

(ROOT
  (S
    (PP (IN In)
      (NP (DT any) (NN case)))
    (, ,)
    (NP (DT a) (`` ``) (JJ conditional) (NN right) ('' ''))
    (VP (VBZ is) (RB not)
      (NP (DT a) (NN right))
      (ADVP (IN at) (DT all)))
    (. .)))

det(case-3, any-2)
prep_in(right-13, case-3)
det(right-8, a-5)
amod(right-8, conditional-7)
nsubj(right-13, right-8)
cop(right-13, is-10)
neg(right-13, not-11)
det(right-13, a-12)
root(ROOT-0, right-13)
advmod(right-13, at-14)
pobj(at-14, all-15)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ wholesale) (NN destruction))
        (PP (IN of)
          (NP (JJ individual) (NNS rights)))))
    (. .)))

nsubj(destruction-5, It-1)
cop(destruction-5, is-2)
det(destruction-5, the-3)
amod(destruction-5, wholesale-4)
root(ROOT-0, destruction-5)
amod(rights-8, individual-7)
prep_of(destruction-5, rights-8)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD wrote) (: :) (`` ``)
      (S
        (NP (PRP You))
        (VP (MD ought)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP
                  (ADJP (RBR more) (JJ careful))
                  (SBAR (IN as)
                    (S
                      (NP (PRP it))
                      (VP (VBZ 's)
                        (SBAR
                          (S
                            (NP
                              (NP (DT a) (JJ scientific) (NN fact))
                              (SBAR (IN that)
                                (S
                                  (NP (DT these) (NNS animals))
                                  (ADVP (DT all))
                                  (VP (VBP do)))))
                            (VP (VBP think)))
                          (, ,)
                          (CC and)
                          (S
                            (PP (IN in)
                              (NP
                                (NP (DT the) (NN case))
                                (PP (IN of)
                                  (NP (NNS dolphins)))))
                            (, ,)
                            (VP (MD might)
                              (ADVP (RB very) (RB well))
                              (VP (VB think)
                                (ADVP
                                  (ADVP (RBR more))
                                  (SBAR (IN than)
                                    (S
                                      (NP (NNS humans))
                                      (VP (VBP do)))))))))))))))))))
    (. .)))

nsubj(wrote-2, You-1)
root(ROOT-0, wrote-2)
nsubj(ought-6, You-5)
xsubj(careful-10, You-5)
ccomp(wrote-2, ought-6)
aux(careful-10, to-7)
cop(careful-10, be-8)
advmod(careful-10, more-9)
xcomp(ought-6, careful-10)
mark('s-13, as-11)
nsubj('s-13, it-12)
ccomp(careful-10, 's-13)
det(fact-16, a-14)
amod(fact-16, scientific-15)
dobj(do-21, fact-16)
nsubj(think-22, fact-16)
nsubj(think-34, fact-16)
complm(do-21, that-17)
det(animals-19, these-18)
nsubj(do-21, animals-19)
advmod(do-21, all-20)
dep(fact-16, do-21)
ccomp('s-13, think-22)
det(case-27, the-26)
prep_in(think-34, case-27)
prep_of(case-27, dolphins-29)
aux(think-34, might-31)
advmod(well-33, very-32)
advmod(think-34, well-33)
ccomp('s-13, think-34)
conj_and(think-22, think-34)
advmod(think-34, more-35)
mark(do-38, than-36)
nsubj(do-38, humans-37)
dep(more-35, do-38)

(ROOT
  (S ('' '')
    (NP (PRP$ Your) (NN assertion))
    (VP
      (VP (VBZ is) (RB not)
        (NP (DT an) (NN argument)))
      (: --)
      (CC nor)
      (VP (VBZ is)
        (ADJP
          (NP (PRP it))
          (JJ persuasive))))
    (. .)))

poss(assertion-3, Your-2)
nsubj(argument-7, assertion-3)
nsubj(persuasive-12, assertion-3)
cop(argument-7, is-4)
neg(argument-7, not-5)
det(argument-7, an-6)
root(ROOT-0, argument-7)
cop(persuasive-12, is-10)
npadvmod(persuasive-12, it-11)
conj_nor(argument-7, persuasive-12)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NN allusion))
      (PP (TO to) (`` ``)
        (NP (JJ scientific) (NN fact))
        ('' '')))
    (VP (VBZ is)
      (PP (IN of)
        (NP (DT the) (JJ same) (NN type))))
    (. .)))

poss(allusion-2, Your-1)
nsubj(is-8, allusion-2)
amod(fact-6, scientific-5)
prep_to(allusion-2, fact-6)
root(ROOT-0, is-8)
det(type-12, the-10)
amod(type-12, same-11)
prep_of(is-8, type-12)

(ROOT
  (S (CC But)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ curious)
        (S
          (VP (TO to)
            (VP (VB know)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (PRP you))
                  (VP (VBP believe)
                    (SBAR
                      (S
                        (NP (DT the) (JJR lower) (NNS animals))
                        (VP (MD can)
                          (VP (VB think)))))))))))))
    (. .)))

cc(curious-4, But-1)
nsubj(curious-4, I-2)
cop(curious-4, am-3)
root(ROOT-0, curious-4)
aux(know-6, to-5)
xcomp(curious-4, know-6)
advmod(believe-9, why-7)
nsubj(believe-9, you-8)
advcl(know-6, believe-9)
det(animals-12, the-10)
amod(animals-12, lower-11)
nsubj(think-14, animals-12)
aux(think-14, can-13)
ccomp(believe-9, think-14)

(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP (VBN read)
      (NP
        (NP (DT an) (NN article))
        (VP (VBN written)
          (PP (IN by)
            (NP (DT a) (NN rat))))))
    (. ?)))

aux(read-3, Have-1)
nsubj(read-3, you-2)
root(ROOT-0, read-3)
det(article-5, an-4)
dobj(read-3, article-5)
partmod(article-5, written-6)
det(rat-9, a-8)
agent(written-6, rat-9)

(ROOT
  (SQ (VBP Have)
    (NP (PRP you))
    (VP (VBN observed)
      (NP
        (NP (NNS cats))
        (VP (VBG working)
          (S
            (VP (TO to)
              (VP (VB send)
                (NP (DT a) (NN man))
                (PP (TO to)
                  (NP (DT the) (NN moon)))))))))
    (. ?)))

aux(observed-3, Have-1)
nsubj(observed-3, you-2)
root(ROOT-0, observed-3)
dobj(observed-3, cats-4)
xsubj(send-7, cats-4)
partmod(cats-4, working-5)
aux(send-7, to-6)
xcomp(working-5, send-7)
det(man-9, a-8)
dobj(send-7, man-9)
det(moon-12, the-11)
prep_to(send-7, moon-12)

