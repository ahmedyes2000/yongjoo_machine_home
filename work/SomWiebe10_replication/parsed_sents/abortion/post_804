(ROOT
  (S (`` ``)
    (SBAR (IN because)
      (S
        (NP
          (NP (NN abortion))
          (VP (VBG being)
            (ADJP (JJ illegal))))
        (VP (VBZ is)
          (ADJP (IN about) (RB as) (JJ useful))
          (SBAR (IN as)
            (S
              (S
                (VP (VBG making)
                  (S
                    (NP (NN masterbation))
                    (ADJP (JJ illegal)))))
              (, ,) (`` ``)
              (NP (DT This))
              (VP (VBZ is) (RB not)
                (NP (DT the) (JJ same) (NN case))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN life))
        (VP (VBG forming)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP (VBP are)
                (VP (VBG doing)
                  (NP (PRP$ your) (JJ own) (NN thing) (RB as))
                  (PP (VBN compared)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN life))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBZ takes)
                              (NP (NN place))
                              (PP (IN after)
                                (NP (DT the) (NN conception))))))))))))))))
    (. .)))

mark(useful-9, because-2)
nsubj(useful-9, abortion-3)
cop(illegal-5, being-4)
partmod(abortion-3, illegal-5)
cop(useful-9, is-6)
dep(useful-9, about-7)
advmod(useful-9, as-8)
advcl(is-24, useful-9)
mark(case-21, as-10)
dep(case-21, making-11)
nsubj(illegal-13, masterbation-12)
xcomp(making-11, illegal-13)
nsubj(case-21, This-16)
cop(case-21, is-17)
neg(case-21, not-18)
det(case-21, the-19)
amod(case-21, same-20)
advcl(useful-9, case-21)
expl(is-24, there-23)
root(ROOT-0, is-24)
det(life-26, no-25)
nsubj(is-24, life-26)
partmod(life-26, forming-27)
advmod(doing-31, when-28)
nsubj(doing-31, you-29)
aux(doing-31, are-30)
advcl(forming-27, doing-31)
poss(thing-34, your-32)
amod(thing-34, own-33)
dobj(doing-31, thing-34)
advmod(thing-34, as-35)
prepc_compared_to(doing-31, to-37)
det(life-39, the-38)
pobj(doing-31, life-39)
nsubj(takes-41, life-39)
rcmod(life-39, takes-41)
dobj(takes-41, place-42)
det(conception-45, the-44)
prep_after(takes-41, conception-45)

(ROOT
  (S
    (NP (DT A) (NN gamete))
    (VP (MD would)
      (ADVP (RB still))
      (VP (VB remain)
        (NP (DT a) (NN gamete))
        (SBAR (IN if)
          (S
            (NP (EX there))
            (VP (VBZ 's)
              (NP
                (NP (DT no) (NN union))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP occur))))))))))
    (. .)))

det(gamete-2, A-1)
nsubj(gamete-7, gamete-2)
aux(gamete-7, would-3)
advmod(gamete-7, still-4)
cop(gamete-7, remain-5)
det(gamete-7, a-6)
root(ROOT-0, gamete-7)
mark('s-10, if-8)
expl('s-10, there-9)
advcl(gamete-7, 's-10)
det(union-12, no-11)
nsubj('s-10, union-12)
nsubj(occur-14, union-12)
rcmod(union-12, occur-14)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are)
      (VP (VBG talking)
        (ADVP (RB here))
        (PP (IN about)
          (NP
            (NP (DT the)
              (ADJP (VBN formed))
              (NN life))
            (CONJP (CC and)
              (RB not))
            (NP
              (NP (DT the) (`` ``) (NN half-life) ('' ''))
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (VBP suggest)))))))))
    (. .)))

nsubj(talking-3, We-1)
aux(talking-3, are-2)
root(ROOT-0, talking-3)
advmod(talking-3, here-4)
det(life-8, the-6)
amod(life-8, formed-7)
prep_about(talking-3, life-8)
det(half-life-13, the-11)
prep_about(talking-3, half-life-13)
conj_negcc(life-8, half-life-13)
dobj(suggest-17, half-life-13)
complm(suggest-17, that-15)
nsubj(suggest-17, you-16)
dep(half-life-13, suggest-17)

(ROOT
  (S
    (PP (IN In)
      (NP (DT that) (NN case)))
    (NP (PRP we))
    (VP (VBP 're)
      (S
        (NP (DT all))
        (VP (VB be)
          (NP
            (NP (NNS murderers))
            (PP (IN of)
              (NP (JJ little) (NN life)))))))
    (. .)))

det(case-3, that-2)
prep_in('re-5, case-3)
nsubj('re-5, we-4)
root(ROOT-0, 're-5)
nsubj(murderers-8, all-6)
cop(murderers-8, be-7)
ccomp('re-5, murderers-8)
amod(life-11, little-10)
prep_of(murderers-8, life-11)

