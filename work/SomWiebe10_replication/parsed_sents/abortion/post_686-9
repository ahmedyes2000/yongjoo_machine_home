(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN thing))
        (VP (VBZ is) (RB n't)
          (NP
            (NP (DT the) (NN type))
            (PP (IN of)
              (NP (NN thing)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (MD can)
                  (VP (VB make)
                    (NP
                      (NP (DT another))
                      (PP (IN of)
                        (NP (PRP$ its) (NN type))))))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (VP (VBN supposed)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN considered)
                (NP
                  (NP (DT a) (NN form))
                  (PP (IN of)
                    (NP (NN life))))))))))
    (. .)))

mark(type-7, If-1)
det(thing-3, a-2)
nsubj(type-7, thing-3)
cop(type-7, is-4)
neg(type-7, n't-5)
det(type-7, the-6)
nsubj(make-12, type-7)
advcl(supposed-22, type-7)
prep_of(type-7, thing-9)
aux(make-12, can-11)
rcmod(type-7, make-12)
dobj(make-12, another-13)
poss(type-16, its-15)
prep_of(another-13, type-16)
advmod(supposed-22, then-18)
nsubjpass(supposed-22, it-19)
xsubj(considered-25, it-19)
auxpass(supposed-22, is-20)
neg(supposed-22, not-21)
root(ROOT-0, supposed-22)
aux(considered-25, to-23)
auxpass(considered-25, be-24)
xcomp(supposed-22, considered-25)
det(form-27, a-26)
dobj(considered-25, form-27)
prep_of(form-27, life-29)

