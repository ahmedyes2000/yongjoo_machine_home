(ROOT
  (S
    (VP (VB TWO)
      (S (`` ``)
        (SBAR (IN If)
          (S
            (NP (PRP I))
            (VP (VBD was)
              (VP (VBG arguing)
                (PP (IN for)
                  (NP (NN conception)))
                (PP (IN as)
                  (NP (DT THE) (NN start)))))))
        (, ,)
        (NP (PRP I))
        (VP (MD would)
          (VP (VB begin)
            (PP (IN with)
              (NP (DT a) (JJ nasty) (NN question)))
            (: :)
            (SBARQ
              (SBARQ
                (WHNP (WP What))
                (SQ (VBZ is)
                  (NP
                    (NP (DT the) (JJ first) (NN stage))
                    (PP (IN of)
                      (NP (JJ human) (NN development))))
                  (VBG called)))
              (, ,)
              (CC and)
              (SBARQ
                (WHADVP (WRB when))
                (SQ (VBZ does)
                  (NP (DT that) (NN stage))
                  (VP (VB begin)))
                (. ?)))))))))

root(ROOT-0, TWO-1)
mark(arguing-6, If-3)
nsubj(arguing-6, I-4)
aux(arguing-6, was-5)
advcl(begin-15, arguing-6)
prep_for(arguing-6, conception-8)
det(start-11, THE-10)
prep_as(arguing-6, start-11)
nsubj(begin-15, I-13)
aux(begin-15, would-14)
ccomp(TWO-1, begin-15)
det(question-19, a-17)
amod(question-19, nasty-18)
prep_with(begin-15, question-19)
attr(is-22, What-21)
parataxis(begin-15, is-22)
det(stage-25, the-23)
amod(stage-25, first-24)
nsubj(is-22, stage-25)
amod(development-28, human-27)
prep_of(stage-25, development-28)
dep(is-22, called-29)
advmod(begin-36, when-32)
aux(begin-36, does-33)
det(stage-35, that-34)
nsubj(begin-36, stage-35)
parataxis(begin-15, begin-36)
conj_and(is-22, begin-36)

(ROOT
  (S
    (S
      (NP (JJ Many) (NNS people))
      (VP (MD will)
        (VP (VB answer)
          (NP (NN zygote)))))
    (CC and)
    (S
      (NP (PRP you))
      (VP (MD will)
        (VP (VB have)
          (NP (PRP them)))))
    (. .)))

amod(people-2, Many-1)
nsubj(answer-4, people-2)
aux(answer-4, will-3)
root(ROOT-0, answer-4)
dobj(answer-4, zygote-5)
nsubj(have-9, you-7)
aux(have-9, will-8)
conj_and(answer-4, have-9)
dobj(have-9, them-10)

(ROOT
  (S
    (S
      (NP (DT A) (VBN fertilized) (NN egg))
      (VP (VBZ is)
        (NP (DT a) (JJ human) (NN cell))
        (ADVP (RB too))
        (, ,)
        (PP
          (PP (IN of)
            (NP (NN course)))
          (, ,)
          (CC but)
          (PP (IN with)
            (NP (DT a) (NN difference))))))
    (: :)
    (S
      (NP (DT that) (JJ single) (NN cell))
      (VP (VBZ grows)
        (SBAR (IN until)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADVP (RB indisputably))
              (NP (DT a) (JJ human) (NN being)))))))
    (. .)))

det(egg-3, A-1)
amod(egg-3, fertilized-2)
nsubj(cell-7, egg-3)
cop(cell-7, is-4)
det(cell-7, a-5)
amod(cell-7, human-6)
root(ROOT-0, cell-7)
conj_but(cell-7, cell-7')
advmod(cell-7, too-8)
prep_of(cell-7, course-11)
det(difference-16, a-15)
prep_with(cell-7', difference-16)
det(cell-20, that-18)
amod(cell-20, single-19)
nsubj(grows-21, cell-20)
parataxis(cell-7, grows-21)
mark(being-28, until-22)
nsubj(being-28, it-23)
cop(being-28, is-24)
advmod(being-28, indisputably-25)
det(being-28, a-26)
amod(being-28, human-27)
advcl(grows-21, being-28)

(ROOT
  (S
    (NP (DT No) (NN gamete))
    (ADVP (RB ever))
    (VP (VBZ does))
    (. .)))

det(gamete-2, No-1)
nsubj(does-4, gamete-2)
advmod(does-4, ever-3)
root(ROOT-0, does-4)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (DT a) (JJ human) (NN life))
          (VP
            (VP (VBZ begins))
            (PRN (-LRB- -LRB-)
              (S
                (VP (VBZ starts)
                  (S
                    (VP (TO to)
                      (VP (VB grow)
                        (PP (IN into)
                          (NP (DT an) (JJ adult) (NN human))))))))
              (-RRB- -RRB-))
            (ADVP (RB immediately)
              (PP (IN after)
                (NP (NN conception))))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
advmod(begins-7, why-3)
det(life-6, a-4)
amod(life-6, human-5)
nsubj(begins-7, life-6)
advcl(is-2, begins-7)
parataxis(begins-7, starts-9)
aux(grow-11, to-10)
xcomp(starts-9, grow-11)
det(human-15, an-13)
amod(human-15, adult-14)
prep_into(grow-11, human-15)
advmod(begins-7, immediately-17)
prep_after(immediately-17, conception-19)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN abortion) (NN debate)))
    (, ,)
    (NP (NNS pro-choicers))
    (VP (VBP like)
      (S
        (VP (TO to)
          (VP (VB say)
            (SBAR (IN that)
              (S
                (NP (DT a) (NN fetus))
                (VP (VBZ is) (RB n't)
                  (NP
                    (NP (DT a) (NN person))
                    (, ,)
                    (CONJP (CC but)
                      (RB merely))
                    (NP (DT a) (JJ _) (JJ potential) (NN _) (NN person))))))))))
    (. .)))

det(debate-4, the-2)
nn(debate-4, abortion-3)
prep_in(like-7, debate-4)
nsubj(like-7, pro-choicers-6)
xsubj(say-9, pro-choicers-6)
root(ROOT-0, like-7)
aux(say-9, to-8)
xcomp(like-7, say-9)
complm(person-16, that-10)
det(fetus-12, a-11)
nsubj(person-16, fetus-12)
cop(person-16, is-13)
neg(person-16, n't-14)
det(person-16, a-15)
ccomp(say-9, person-16)
det(person-24, a-20)
amod(person-24, _-21)
amod(person-24, potential-22)
nn(person-24, _-23)
ccomp(say-9, person-24)
conj_merely(person-16, person-24)

(ROOT
  (S (-LRB- -LRB-)
    (PP (IN Of)
      (NP (NN course)))
    (, ,)
    (NP (PRP they))
    (VP (VBP reserve)
      (S
        (NP (DT the) (NN right))
        (VP (TO to)
          (VP (VB define) (`` ``)
            (NP (NN person))
            ('' '')
            (PP (TO to)
              (NP (PRP themselves)))))))
    (. !) (-RRB- -RRB-)))

prep_of(reserve-6, course-3)
nsubj(reserve-6, they-5)
root(ROOT-0, reserve-6)
det(right-8, the-7)
nsubj(define-10, right-8)
aux(define-10, to-9)
xcomp(reserve-6, define-10)
dobj(define-10, person-12)
prep_to(define-10, themselves-15)

(ROOT
  (S
    (S
      (NP (CD Two) (NNS gametes))
      (VP (VBP are)
        (NP
          (NP (DT a) (JJ potential) (NN human))
          (SBAR (IN if)
            (S
              (NP (PRP one))
              (VP (VBZ is)
                (NP (DT a) (NN sperm))))))))
    (CC and)
    (S
      (NP (DT the) (JJ other))
      (VP (VBZ is)
        (NP (DT an) (NN egg))))
    (. .)))

num(gametes-2, Two-1)
nsubj(human-6, gametes-2)
cop(human-6, are-3)
det(human-6, a-4)
amod(human-6, potential-5)
root(ROOT-0, human-6)
mark(sperm-11, if-7)
nsubj(sperm-11, one-8)
cop(sperm-11, is-9)
det(sperm-11, a-10)
dep(human-6, sperm-11)
det(other-14, the-13)
nsubj(egg-17, other-14)
cop(egg-17, is-15)
det(egg-17, an-16)
conj_and(human-6, egg-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (VBP 're)
          (NP
            (NP (DT both) (NN sperm))
            (CC or)
            (NP (DT both))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP (DT any) (JJ potential) (NNS humans))))
    (. .)))

mark(sperm-5, If-1)
nsubj(sperm-5, they-2)
cop(sperm-5, 're-3)
det(sperm-5, both-4)
advcl(have-13, sperm-5)
conj_or(sperm-5, both-7)
advcl(have-13, both-7)
advmod(have-13, then-9)
nsubj(have-13, you-10)
aux(have-13, do-11)
neg(have-13, n't-12)
root(ROOT-0, have-13)
det(humans-16, any-14)
amod(humans-16, potential-15)
dobj(have-13, humans-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 've)
      (ADVP (RB just))
      (VP (VBN got)
        (NP (JJ human) (NNS parts))))
    (. .)))

nsubj(got-4, You-1)
aux(got-4, 've-2)
advmod(got-4, just-3)
root(ROOT-0, got-4)
amod(parts-6, human-5)
dobj(got-4, parts-6)

(ROOT
  (S
    (S
      (NP (DT A) (NN chlorine) (NN atom))
      (VP (VBZ is) (RB n't)
        (NP
          (PRN (-LRB- -LRB-)
            (NP (NN table))
            (-RRB- -RRB-))
          (NNS salt))))
    (, ,)
    (CC and)
    (S
      (NP (DT neither))
      (VP (VBZ is)
        (NP (DT a) (NN sodium) (NN atom))))
    (. .)))

det(atom-3, A-1)
nn(atom-3, chlorine-2)
nsubj(salt-9, atom-3)
cop(salt-9, is-4)
neg(salt-9, n't-5)
appos(salt-9, table-7)
root(ROOT-0, salt-9)
nsubj(atom-16, neither-12)
cop(atom-16, is-13)
det(atom-16, a-14)
nn(atom-16, sodium-15)
conj_and(salt-9, atom-16)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP need)
        (NP (DT both))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP need)
        (NP (PRP them))
        (PP (TO to)
          (NP (NN bond)))
        (SBAR (IN before)
          (S
            (NP (PRP you))
            (VP (VBP have)
              (NP (NN salt)))))))
    (. .)))

nsubj(need-2, You-1)
root(ROOT-0, need-2)
dobj(need-2, both-3)
nsubj(need-7, you-6)
conj_and(need-2, need-7)
dobj(need-7, them-8)
prep_to(need-7, bond-10)
mark(have-13, before-11)
nsubj(have-13, you-12)
advcl(need-7, have-13)
dobj(have-13, salt-14)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT the) (JJ correct) (NN answer))
    (VP (VBZ is)
      (ADJP (JJ gamete))
      (S
        (VP (VBG beginning)
          (PP (IN at)
            (NP (NNS meiosis))))))
    (. .)))

advmod(gamete-7, However-1)
det(answer-5, the-3)
amod(answer-5, correct-4)
nsubj(gamete-7, answer-5)
cop(gamete-7, is-6)
root(ROOT-0, gamete-7)
xcomp(gamete-7, beginning-8)
prep_at(beginning-8, meiosis-10)

(ROOT
  (S
    (NP
      (NP (DT A) (NN sperm))
      (CC and)
      (NP (DT an) (NN egg)))
    (VP (VBP are)
      (ADJP (JJ analogous)
        (PP (TO to)
          (NP
            (NP (DT the) (NN chlorine))
            (CC and)
            (NP (DT the) (NN sodium))))))
    (. .)))

det(sperm-2, A-1)
nsubj(analogous-7, sperm-2)
det(egg-5, an-4)
conj_and(sperm-2, egg-5)
nsubj(analogous-7, egg-5)
cop(analogous-7, are-6)
root(ROOT-0, analogous-7)
det(chlorine-10, the-9)
prep_to(analogous-7, chlorine-10)
det(sodium-13, the-12)
prep_to(analogous-7, sodium-13)
conj_and(chlorine-10, sodium-13)

(ROOT
  (S
    (SBAR (IN Until)
      (S
        (NP (PRP you))
        (VP (VBP get)
          (NP (DT both)))))
    (, ,)
    (NP (PRP you))
    (ADVP (RB only))
    (VP (VBP have)
      (NP (NNS pieces)))
    (. .)))

mark(get-3, Until-1)
nsubj(get-3, you-2)
advcl(have-8, get-3)
dobj(get-3, both-4)
nsubj(have-8, you-6)
advmod(have-8, only-7)
root(ROOT-0, have-8)
dobj(have-8, pieces-9)

(ROOT
  (S
    (S
      (PP (IN Until)
        (NP (DT the) (CD two) (NN fuse)))
      (, ,)
      (NP (PRP you))
      (VP (MD may)
        (VP (VB have)
          (NP
            (NP (DT a) (JJ full) (NN set))
            (PP (IN of)
              (NP (NNS pieces)))))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (VP (VBG _)
          (NP
            (NP (DT all) (NN _))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP have))))))))
    (. .)))

det(fuse-4, the-2)
num(fuse-4, two-3)
prep_until(have-8, fuse-4)
nsubj(have-8, you-6)
aux(have-8, may-7)
root(ROOT-0, have-8)
det(set-11, a-9)
amod(set-11, full-10)
dobj(have-8, set-11)
prep_of(set-11, pieces-13)
nsubj(_-18, that-16)
aux(_-18, 's-17)
conj_but(have-8, _-18)
det(_-20, all-19)
dobj(_-18, _-20)
dobj(have-22, _-20)
nsubj(have-22, you-21)
rcmod(_-20, have-22)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBD was)
          (NP (JJR younger)))))
    (NP (PRP I))
    (VP (VBD took)
      (PRT (RP apart))
      (NP (DT a) (NN calculator))
      (ADVP (RB once)))
    (. .)))

advmod(younger-4, When-1)
nsubj(younger-4, I-2)
cop(younger-4, was-3)
advcl(took-6, younger-4)
nsubj(took-6, I-5)
root(ROOT-0, took-6)
prt(took-6, apart-7)
det(calculator-9, a-8)
dobj(took-6, calculator-9)
advmod(took-6, once-10)

(ROOT
  (PRN
    (S
      (S
        (NP (PRP I))
        (ADVP (RB still))
        (VP (VBD had)
          (NP
            (NP (DT all))
            (PP (IN of)
              (NP (DT the) (NNS parts))))))
      (, ,)
      (CC but)
      (S
        (NP (PRP I))
        (VP (VBD did) (RB n't)
          (VP (VB have)
            (NP (DT a) (NN calculator))
            (FRAG
              (ADVP (RB anymore))
              (: :))))))
    (-RRB- -RRB-)))

nsubj(had-3, I-1)
advmod(had-3, still-2)
root(ROOT-0, had-3)
dobj(had-3, all-4)
det(parts-7, the-6)
prep_of(all-4, parts-7)
nsubj(have-13, I-10)
aux(have-13, did-11)
neg(have-13, n't-12)
conj_but(had-3, have-13)
det(calculator-15, a-14)
dobj(have-13, calculator-15)
dep(have-13, anymore-16)

(ROOT
  (S ('' '')
    (ADVP (RB Well))
    (, ,)
    (NP (DT that))
    (VP (VBZ is)
      (ADJP
        (ADVP (NN kind) (IN of))
        (JJ funny)
        (PP (TO to)
          (NP
            (NP (PRP me))
            (PP (IN in)
              (NP (DT a) (NN way)))))))
    (. .)))

advmod(funny-8, Well-2)
nsubj(funny-8, that-4)
cop(funny-8, is-5)
dep(of-7, kind-6)
advmod(funny-8, of-7)
root(ROOT-0, funny-8)
prep_to(funny-8, me-10)
det(way-13, a-12)
prep_in(me-10, way-13)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ pro-life))
        (PP (CC but)
          (NP (DT an) (NN atheist)))))
    (, ,)
    (CC and)
    (S
      (NP (JJ pro-life) (NNS atheists))
      (VP (VBP get)
        (ADJP (VBN annoyed)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (VBP 're)
                (ADVP (RB arbitrarily))
                (VP (VBN lumped)
                  (ADVP (RB together))
                  (PP (IN with)
                    (NP (JJ religious) (NNS fundamentalists))))))))))
    (. .)))

nsubj(pro-life-3, I-1)
cop(pro-life-3, 'm-2)
root(ROOT-0, pro-life-3)
prep(pro-life-3, but-4)
det(atheist-6, an-5)
dep(but-4, atheist-6)
amod(atheists-10, pro-life-9)
nsubjpass(annoyed-12, atheists-10)
auxpass(annoyed-12, get-11)
conj_and(pro-life-3, annoyed-12)
advmod(lumped-17, when-13)
nsubjpass(lumped-17, they-14)
auxpass(lumped-17, 're-15)
advmod(lumped-17, arbitrarily-16)
dep(annoyed-12, lumped-17)
amod(fundamentalists-21, religious-20)
prep_together_with(lumped-17, fundamentalists-21)

(ROOT
  (S
    (NP (NN Someone))
    (VP (VBD asked)
      (NP (PRP me))
      (PRN (-LRB- -LRB-)
        (PP (IN around)
          (NP
            (NP (DT the) (NN time))
            (PP (IN of)
              (NP
                (NP (DT the) (NN election))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (NNP Palin))
                    (VP (VBD caused)
                      (NP
                        (NP (NN talk))
                        (PP (IN of)
                          (NP (NN abortion))))
                      (S
                        (VP (TO to)
                          (VP (VB spike)))))))))))
        (-RRB- -RRB-))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP I))
          (VP (MD could)
            (VP
              (VP (VB be)
                (NP (DT an) (NN atheist)))
              (CC and)
              (VP (VB be)
                (VP (VBN opposed)
                  (PP (TO to)
                    (NP (NN contraception))))))))))
    (. .)))

nsubj(asked-2, Someone-1)
root(ROOT-0, asked-2)
dobj(asked-2, me-3)
dep(asked-2, around-5)
det(time-7, the-6)
pobj(around-5, time-7)
det(election-10, the-9)
prep_of(time-7, election-10)
tmod(caused-13, election-10)
advmod(caused-13, when-11)
nsubj(caused-13, Palin-12)
dep(election-10, caused-13)
dobj(caused-13, talk-14)
prep_of(talk-14, abortion-16)
aux(spike-18, to-17)
xcomp(caused-13, spike-18)
advmod(atheist-25, how-20)
nsubj(atheist-25, I-21)
nsubjpass(opposed-28, I-21)
aux(atheist-25, could-22)
cop(atheist-25, be-23)
det(atheist-25, an-24)
dep(asked-2, atheist-25)
auxpass(opposed-28, be-27)
dep(asked-2, opposed-28)
conj_and(atheist-25, opposed-28)
prep_to(opposed-28, contraception-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD said)
      (SBAR (IN that)
        (S
          (NP (DT that))
          (VP (VBD was)
            (NP (DT a) (JJ stupid) (NN question))
            (PP (IN because) ('' '')
              (NP
                (NP (PRP I))
                (SBAR
                  (S
                    (VP (VBP do) (RB n't)
                      (VP (VB care)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (NNS people))
                            (VP (VBP do)
                              (PP (IN with)
                                (NP (PRP$ their) (NNS gametes) ('' ''))))))))))))))))
    (. .)))

nsubj(said-2, I-1)
root(ROOT-0, said-2)
complm(question-8, that-3)
nsubj(question-8, that-4)
cop(question-8, was-5)
det(question-8, a-6)
amod(question-8, stupid-7)
ccomp(said-2, question-8)
prep_because(question-8, I-11)
aux(care-14, do-12)
neg(care-14, n't-13)
rcmod(I-11, care-14)
dobj(do-17, what-15)
nsubj(do-17, people-16)
ccomp(care-14, do-17)
poss(gametes-20, their-19)
prep_with(do-17, gametes-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBD told)
        (NP (PRP him))
        (SBAR (IN that)
          (S
            (NP (DT the) (NN government))
            (VP (MD could)
              (VP (VB put)
                (NP (NN condom) (NNS dispensers))
                (PP (IN on)
                  (NP (DT every) (NN street) (NN corner)))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'd)
        (ADVP (RB mostly))
        (VP (VB be)
          (VP (VBN concerned)
            (PP (IN about)
              (S
                (NP (PRP it))
                (VP (VBG leading)
                  (PP (TO to)
                    (NP (JJR more) (NN littering))))))))))
    (. .)))

nsubj(told-2, I-1)
root(ROOT-0, told-2)
dobj(told-2, him-3)
complm(put-8, that-4)
det(government-6, the-5)
nsubj(put-8, government-6)
aux(put-8, could-7)
ccomp(told-2, put-8)
nn(dispensers-10, condom-9)
dobj(put-8, dispensers-10)
det(corner-14, every-12)
nn(corner-14, street-13)
prep_on(put-8, corner-14)
nsubjpass(concerned-20, I-16)
aux(concerned-20, 'd-17)
advmod(concerned-20, mostly-18)
auxpass(concerned-20, be-19)
conj_and(told-2, concerned-20)
nsubj(leading-23, it-22)
prepc_about(concerned-20, leading-23)
amod(littering-26, more-25)
prep_to(leading-23, littering-26)

(ROOT
  (S
    (NP (NNS Gametes))
    (VP (VBP are) (RB n't)
      (NP (NNS humans)))
    (. .)))

nsubj(humans-4, Gametes-1)
cop(humans-4, are-2)
neg(humans-4, n't-3)
root(ROOT-0, humans-4)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP are)
        (NP (JJ human) (NNS cells))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD 'll)
                (VP (VB agree)
                  (SBAR (IN that)
                    (S
                      (VP (VBZ 's)
                        (VP (VBG saying)
                          (NP (DT a) (JJ different) (NN thing)))))))))))))
    (. .)))

nsubj(cells-4, They-1)
cop(cells-4, are-2)
amod(cells-4, human-3)
root(ROOT-0, cells-4)
nsubj(sure-9, I-7)
cop(sure-9, 'm-8)
conj_but(cells-4, sure-9)
nsubj(agree-12, you-10)
aux(agree-12, 'll-11)
dep(sure-9, agree-12)
complm(saying-15, that-13)
aux(saying-15, 's-14)
ccomp(agree-12, saying-15)
det(thing-18, a-16)
amod(thing-18, different-17)
dobj(saying-15, thing-18)

