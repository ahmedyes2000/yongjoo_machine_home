(ROOT
  (S
    (S
      (NP (NNP Mike))
      (VP (VBD said) ('' '')))
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (VP (VBG thinking)
              (PP (IN of)
                (NP (NN personhood)))))))
      (, ,)
      (SBAR (IN because)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (ADVP (RB simply))
            (ADVP
              (NP (DT no) (NN question))
              (IN about))
            (SBAR (IN whether)
              (CC or)
              (RB not)
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (VP (VBG ending)
                    (NP (DT a) (NN life))))))))))
    (. .)))

nsubj(said-2, Mike-1)
dep(think-5, said-2)
nsubj(think-5, I-4)
root(ROOT-0, think-5)
nsubj(thinking-8, you-6)
aux(thinking-8, 're-7)
ccomp(think-5, thinking-8)
prep_of(thinking-8, personhood-10)
mark(is-14, because-12)
expl(is-14, there-13)
advcl(think-5, is-14)
advmod(is-14, simply-15)
det(question-17, no-16)
npadvmod(about-18, question-17)
advmod(is-14, about-18)
complm(ending-24, whether-19)
ccomp(is-14, not-21)
conj_or(ending-24, not-21)
nsubj(ending-24, you-22)
aux(ending-24, are-23)
ccomp(is-14, ending-24)
det(life-26, a-25)
dobj(ending-24, life-26)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP I))
    (VP (VBD was)
      (VP (VBG referring)
        (S
          (VP (TO to)
            (VP (`` ``) (VB personhood) ('' '')
              (PP (IN throughout)
                (NP (PRP$ my) (NN post))))))))
    (. .)))

dep(referring-5, Yes-1)
nsubj(referring-5, I-3)
xsubj(personhood-8, I-3)
aux(referring-5, was-4)
root(ROOT-0, referring-5)
aux(personhood-8, to-6)
xcomp(referring-5, personhood-8)
poss(post-12, my-11)
prep_throughout(personhood-8, post-12)

(ROOT
  (FRAG
    (ADVP (RB Certainly))
    (RB not)
    (PP (IN at)
      (NP
        (NP (NN conception))
        (, ,)
        (PP (IN by)
          (NP
            (NP (PRP$ my) (NN way))
            (PP (IN of)
              (S
                (VP (VBG thinking))))))))
    (. .)))

dep(not-2, Certainly-1)
root(ROOT-0, not-2)
dep(not-2, at-3)
pobj(at-3, conception-4)
poss(way-8, my-7)
prep_by(conception-4, way-8)
prepc_of(way-8, thinking-10)

(ROOT
  (FRAG
    (ADVP (RB Possibly))
    (RB not)
    (PP (IN until)
      (NP (VBG birth)))
    (. .)))

dep(not-2, Possibly-1)
root(ROOT-0, not-2)
dep(not-2, until-3)
pobj(until-3, birth-4)

(ROOT
  (S
    (VP (VB Arguably)
      (ADVP (RB sometime))
      (PP (IN in)
        (NP (IN between))))
    (. .)))

root(ROOT-0, Arguably-1)
advmod(Arguably-1, sometime-2)
prep(Arguably-1, in-3)
pobj(in-3, between-4)

(ROOT
  (S (CC But)
    (PP
      (ADVP (RB aside))
      (IN from)
      (NP (JJ chronological) (NNS definitions)))
    (, ,)
    (NP
      (NP (DT the) (NN acquisition))
      (PP (IN of)
        (NP
          (NP (JJR higher) (NN consciousness) (NN characteristic))
          (PP (IN of)
            (NP
              (NP (NNS humans))
              (PP (IN from)
                (NP (NN birth) (NN onward))))))))
    (VP (VBZ is)
      (NP (PRP$ my)
        (ADJP (JJ functional))
        (NN definition)))
    (. .)))

cc(definition-21, But-1)
amod(definitions-5, chronological-4)
prep_aside_from(definition-21, definitions-5)
det(acquisition-8, the-7)
nsubj(definition-21, acquisition-8)
amod(characteristic-12, higher-10)
nn(characteristic-12, consciousness-11)
prep_of(acquisition-8, characteristic-12)
prep_of(characteristic-12, humans-14)
nn(onward-17, birth-16)
prep_from(humans-14, onward-17)
cop(definition-21, is-18)
poss(definition-21, my-19)
amod(definition-21, functional-20)
root(ROOT-0, definition-21)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB just))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT that))
            (VP (VBZ happens))))))
    (. .)))

nsubj(know-5, I-1)
advmod(know-5, just-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
advmod(happens-8, when-6)
nsubj(happens-8, that-7)
advcl(know-5, happens-8)

(ROOT
  (S (CC And)
    (SBAR (IN since)
      (S
        (NP (DT no) (NN one) (RB else))
        (VP (VBZ does)
          (ADVP (RB either)))))
    (, ,)
    (NP (PRP we))
    (VP (MD should)
      (VP (VB leave)
        (PRT (RP up))
        (PP (TO to)
          (NP
            (NP (DT each))
            (PP (IN of)
              (NP (PRP us)))))))
    (. .)))

cc(leave-11, And-1)
mark(does-6, since-2)
det(one-4, no-3)
nsubj(does-6, one-4)
advmod(one-4, else-5)
advcl(leave-11, does-6)
advmod(does-6, either-7)
nsubj(leave-11, we-9)
aux(leave-11, should-10)
root(ROOT-0, leave-11)
prt(leave-11, up-12)
prep_to(leave-11, each-14)
prep_of(each-14, us-16)

(ROOT
  (NP (NNP Sid)))

root(ROOT-0, Sid-1)

(ROOT
  (S
    (NP
      (NP (DT The) (NN idea))
      (PP (IN of)
        (NP (`` ``)
          (NP (NN life))
          ('' '')
          (PP (IN in)
            (CC and)
            (IN of)
            (NP (PRP itself))))))
    (VP (VBZ is) (RB not)
      (ADJP (JJ important)
        (PP (TO to)
          (NP (DT this) (NN debate)))))
    (. .)))

det(idea-2, The-1)
nsubj(important-13, idea-2)
prep_of(idea-2, life-5)
prep_of(idea-2, life-5')
conj_and(life-5, life-5')
prep_in(life-5, itself-10)
prep_of(life-5', itself-10)
cop(important-13, is-11)
neg(important-13, not-12)
root(ROOT-0, important-13)
det(debate-16, this-15)
prep_to(important-13, debate-16)

(ROOT
  (S
    (S
      (NP (DT This) (NN sound))
      (VP (VBZ 's)
        (ADJP (JJ strange))))
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (VBP know)))
      (, ,))
    (CC but)
    (S
      (NP (JJ many) (NNS things))
      (VP (VBP are)
        (ADJP (`` ``) (JJ alive) ('' '')
          (SBAR (IN that)
            (S
              (PP (IN as)
                (NP (DT a) (NN society)))
              (NP (PRP we))
              (VP (VBP have)
                (NP
                  (NP (DT no) (NNS compunctions))
                  (PP (IN about)
                    (NP (VBG killing))))))))))
    (. .)))

det(sound-2, This-1)
nsubj(strange-4, sound-2)
cop(strange-4, 's-3)
root(ROOT-0, strange-4)
nsubj(know-7, I-6)
dep(strange-4, know-7)
amod(things-11, many-10)
nsubj(alive-14, things-11)
cop(alive-14, are-12)
conj_but(strange-4, alive-14)
complm(have-21, that-16)
det(society-19, a-18)
prep_as(have-21, society-19)
nsubj(have-21, we-20)
ccomp(alive-14, have-21)
det(compunctions-23, no-22)
dobj(have-21, compunctions-23)
prep_about(compunctions-23, killing-25)

(ROOT
  (NP
    (NP (JJ Many) (NNS animals))
    (PP (IN for)
      (NP (NN food)))
    (, ,)
    (NP
      (NP (NNS insects))
      (PP (IN as)
        (NP (NNS pests))))
    (, ,)
    (NP
      (NP (NN skin) (NNS cells))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBZ scrape)
            (NP (PRP$ our) (NN knee))))))
    (. .)))

amod(animals-2, Many-1)
root(ROOT-0, animals-2)
prep_for(animals-2, food-4)
appos(animals-2, insects-6)
prep_as(insects-6, pests-8)
nn(cells-11, skin-10)
appos(animals-2, cells-11)
tmod(scrape-14, cells-11)
advmod(scrape-14, when-12)
nsubj(scrape-14, we-13)
dep(cells-11, scrape-14)
poss(knee-16, our-15)
dobj(scrape-14, knee-16)

(ROOT
  (S
    (S
      (NP
        (NP (DT All))
        (PP (IN of)
          (NP (DT these) (NNS things))))
      (VP (VBP are)
        (ADJP (JJ alive))))
    (, ,)
    (CC but)
    (S
      (VP (VBG killing)
        (S
          (NP (PRP them))
          (VP (VBZ is)
            (PRN (-LRB- -LRB-)
              (PP (IN for)
                (NP
                  (NP (JJS most))
                  (PP (IN of)
                    (NP (PRP us)))))
              (-RRB- -RRB-))))
        (PP (RB not)
          (ADJP (JJ controversial)))))
    (. .)))

nsubj(alive-6, All-1)
nsubj(killing-9, All-1)
det(things-4, these-3)
prep_of(All-1, things-4)
cop(alive-6, are-5)
root(ROOT-0, alive-6)
conj_but(alive-6, killing-9)
nsubj(is-11, them-10)
ccomp(killing-9, is-11)
dep(is-11, for-13)
pobj(for-13, most-14)
prep_of(most-14, us-16)
prep(killing-9, not-18)
pobj(not-18, controversial-19)

(ROOT
  (S
    (NP (PRP We))
    (ADVP (RB even))
    (VP (VBD let)
      (SBAR
        (S
          (NP (NNS people))
          (VP (VBP die)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP they))
                (VP (VBP are)
                  (PP (IN in)
                    (NP
                      (NP (DT a) (JJ vegetative) (NN state))
                      (PRN (-LRB- -LRB-)
                        (NP
                          (NP (JJS most))
                          (PP (IN of)
                            (NP (DT the) (NN time))))
                        (-RRB- -RRB-)))))))))))
    (. .)))

nsubj(let-3, We-1)
advmod(let-3, even-2)
root(ROOT-0, let-3)
nsubj(die-5, people-4)
ccomp(let-3, die-5)
advmod(are-8, when-6)
nsubj(are-8, they-7)
advcl(die-5, are-8)
det(state-12, a-10)
amod(state-12, vegetative-11)
prep_in(are-8, state-12)
dep(state-12, most-14)
det(time-17, the-16)
prep_of(most-14, time-17)

(ROOT
  (S (IN So)
    (NP (`` ``) (NN life) ('' ''))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT the) (NN standard))
        (PP (IN for)
          (NP
            (NP (DT the) (NN debate))
            (PP (IN on)
              (NP (NN abortion)))))))
    (. .)))

dep(standard-8, So-1)
nsubj(standard-8, life-3)
cop(standard-8, is-5)
neg(standard-8, not-6)
det(standard-8, the-7)
root(ROOT-0, standard-8)
det(debate-11, the-10)
prep_for(standard-8, debate-11)
prep_on(debate-11, abortion-13)

(ROOT
  (S
    (NP (DT The) (NN standard))
    (VP (MD must)
      (VP (VB be)
        (NP
          (NP (NN HUMAN) (NN life))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP I))
              (VP (VBP treat)
                (ADJP (RB as) (JJ synonymous))
                (PP (IN with) (`` ``)
                  (ADJP (JJ personhood))
                  ('' ''))))))))
    (. .)))

det(standard-2, The-1)
nsubj(life-6, standard-2)
aux(life-6, must-3)
cop(life-6, be-4)
nn(life-6, HUMAN-5)
root(ROOT-0, life-6)
dobj(treat-10, life-6)
rel(treat-10, which-8)
nsubj(treat-10, I-9)
rcmod(life-6, treat-10)
advmod(synonymous-12, as-11)
acomp(treat-10, synonymous-12)
prep_with(treat-10, personhood-15)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (NN respect))
        (PP (TO to)
          (NP
            (NP (DT a) (VBN fertilized) (NN egg))
            (, ,)
            (NP (NN embryo))
            (, ,)
            (CC or)
            (NP (NN fetus))))))
    (, ,)
    (NP (DT the) (NN question))
    (VP (VBZ is)
      (SBARQ
        (WHADVP (WRB When))
        (SQ (VBZ does)
          (NP (PRP it))
          (VP (VB become)
            (NP (DT a) (NN person))))
        (. ?)))))

det(egg-6, a-4)
amod(egg-6, fertilized-5)
prep_with_respect_to(is-15, egg-6)
conj_or(egg-6, embryo-8)
prep_with_respect_to(is-15, embryo-8)
conj_or(egg-6, fetus-11)
prep_with_respect_to(is-15, fetus-11)
det(question-14, the-13)
nsubj(is-15, question-14)
root(ROOT-0, is-15)
advmod(person-21, When-16)
aux(person-21, does-17)
nsubj(person-21, it-18)
cop(person-21, become-19)
det(person-21, a-20)
dep(is-15, person-21)

