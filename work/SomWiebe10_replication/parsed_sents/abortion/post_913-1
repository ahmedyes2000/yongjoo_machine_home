(ROOT
  (S (CC But)
    (ADVP (RB as) (RB far))
    (PP (IN as)
      (NP (DT the) (NN rape) (NN situation)))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN gone)
          (UCP
            (ADVP (RB back))
            (CC and)
            (VP
              (ADVP (RB forth)
                (NP (DT a) (RB bit)))
              (VBG thinking)
              (PP (IN about)
                (NP (PRP it))))))))
    (: ...)
    (CC and)
    (S
      (NP (PRP I))
      (ADVP (RB just))
      (VP (VBP do) (RB n't)
        (VP (VB think)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (MD can)
                (VP (VB justify)
                  (S
                    (VP (VBG taking)
                      (NP (DT a) (JJ human) (NN life))))))
              (, ,)
              (SBAR (IN As)
                (S
                  (VP (VBD horrid)
                    (SBAR (IN as)
                      (S
                        (NP (DT that) (NN situation))
                        (VP (VBZ is))))))))))))
    (. .)))

advmod(far-3, as-2)
advmod(gone-11, far-3)
det(situation-7, the-5)
nn(situation-7, rape-6)
prep_as(gone-11, situation-7)
nsubj(gone-11, I-9)
aux(gone-11, 've-10)
root(ROOT-0, gone-11)
dep(gone-11, back-12)
advmod(thinking-17, forth-14)
det(bit-16, a-15)
pobj(forth-14, bit-16)
dep(gone-11, thinking-17)
conj_and(back-12, thinking-17)
prep_about(thinking-17, it-19)
nsubj(think-26, I-22)
advmod(think-26, just-23)
aux(think-26, do-24)
neg(think-26, n't-25)
conj_and(gone-11, think-26)
complm(justify-30, that-27)
nsubj(justify-30, it-28)
aux(justify-30, can-29)
ccomp(think-26, justify-30)
xcomp(justify-30, taking-31)
det(life-34, a-32)
amod(life-34, human-33)
dobj(taking-31, life-34)
mark(horrid-37, As-36)
dep(justify-30, horrid-37)
mark(is-41, as-38)
det(situation-40, that-39)
nsubj(is-41, situation-40)
advcl(horrid-37, is-41)

(ROOT
  (S
    (NP
      (NP (DT The) (NN fact))
      (SBAR (IN that)
        (S
          (NP (NNS women))
          (VP (MD will)
            (VP (VB get)
              (NP (JJ illegal) (NNS abortions)))))))
    (VP (VBZ is)
      (ADVP (RB really))
      (NP
        (NP (RB not) (DT a) (JJ sufficient) (NN reason))
        (SBAR
          (S
            (VP (TO to)
              (VP (VB make)
                (S
                  (NP (PRP it))
                  (ADJP (JJ legal))))))))
      (, ,)
      (SBAR (IN unless)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (NN proof))
            (SBAR (IN that)
              (S
                (NP (RB just) (RB as) (JJ many) (NNS abortions))
                (VP (MD will)
                  (VP (VB occur)
                    (NP (DT either) (NN way))))))))))
    (. .)))

det(fact-2, The-1)
nsubj(reason-14, fact-2)
complm(get-6, that-3)
nsubj(get-6, women-4)
aux(get-6, will-5)
dep(fact-2, get-6)
amod(abortions-8, illegal-7)
dobj(get-6, abortions-8)
cop(reason-14, is-9)
advmod(reason-14, really-10)
neg(reason-14, not-11)
det(reason-14, a-12)
amod(reason-14, sufficient-13)
root(ROOT-0, reason-14)
aux(make-16, to-15)
infmod(reason-14, make-16)
nsubj(legal-18, it-17)
xcomp(make-16, legal-18)
mark(is-22, unless-20)
expl(is-22, there-21)
advcl(reason-14, is-22)
nsubj(is-22, proof-23)
complm(occur-30, that-24)
advmod(abortions-28, just-25)
advmod(abortions-28, as-26)
amod(abortions-28, many-27)
nsubj(occur-30, abortions-28)
aux(occur-30, will-29)
ccomp(is-22, occur-30)
det(way-32, either-31)
dobj(occur-30, way-32)

