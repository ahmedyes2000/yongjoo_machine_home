(ROOT
  (S
    (S
      (NP (NNP Rape))
      (VP (VBZ is)
        (NP (DT an)
          (ADJP (JJ arbitrary))
          (NN exception))))
    (: ;)
    (S
      (NP (NN abortion))
      (VP (MD must)
        (VP (VB be)
          (ADJP (JJ available)
            (PP (IN in)
              (NP (DT all) (NNS pregnancies)))))))
    (. .)))

nsubj(exception-5, Rape-1)
cop(exception-5, is-2)
det(exception-5, an-3)
amod(exception-5, arbitrary-4)
root(ROOT-0, exception-5)
nsubj(available-10, abortion-7)
aux(available-10, must-8)
cop(available-10, be-9)
parataxis(exception-5, available-10)
det(pregnancies-13, all-12)
prep_in(available-10, pregnancies-13)

(ROOT
  (S
    (NP
      (NP (JJ Many) (NNS opponents))
      (PP (IN of)
        (NP (NN abortion))))
    (VP (VBP allow)
      (PP (IN for)
        (NP (NN abortion)))
      (PP (IN in)
        (NP
          (NP (NNS instances))
          (PP (IN of)
            (NP (NN rape))))))
    (. .)))

amod(opponents-2, Many-1)
nsubj(allow-5, opponents-2)
prep_of(opponents-2, abortion-4)
root(ROOT-0, allow-5)
prep_for(allow-5, abortion-7)
prep_in(allow-5, instances-9)
prep_of(instances-9, rape-11)

(ROOT
  (S (CC But)
    (, ,)
    (NP (DT this))
    (VP (VBZ assigns)
      (NP (NNS rights))
      (PP
        (ADVP (RB arbitrarily))
        (TO to)
        (NP
          (NP (DT the) (JJ unborn) (`` ``) (JJ bastard) (NN child) ('' ''))
          (PP (IN as)
            (PP (VBN compared)
              (PP (TO to)
                (NP (DT an) (JJ ordinarily-conceived) (NN child))))))))
    (. .)))

cc(assigns-4, But-1)
nsubj(assigns-4, this-3)
root(ROOT-0, assigns-4)
dobj(assigns-4, rights-5)
advmod(assigns-4, arbitrarily-6)
det(child-12, the-8)
amod(child-12, unborn-9)
amod(child-12, bastard-11)
prep_to(assigns-4, child-12)
prepc_as(child-12, compared-15)
prepc_compared_to(child-12, to-16)
det(child-19, an-17)
amod(child-19, ordinarily-conceived-18)
prepc_as(child-12, child-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ confers)
      (NP (JJR lower) (NNS rights))
      (PP (IN on)
        (NP (DT the) (JJ unborn) (`` ``) (NN bastard) (NN child) ('' ''))))
    (. .)))

nsubj(confers-2, It-1)
root(ROOT-0, confers-2)
amod(rights-4, lower-3)
dobj(confers-2, rights-4)
det(child-10, the-6)
amod(child-10, unborn-7)
nn(child-10, bastard-9)
prep_on(confers-2, child-10)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADJP (JJ wrong)))
    (. .)))

nsubj(wrong-3, This-1)
cop(wrong-3, is-2)
root(ROOT-0, wrong-3)

(ROOT
  (S
    (NP (DT The) (NN solution))
    (, ,)
    (ADVP (RB though))
    (, ,)
    (VP (MD can) (RB not)
      (VP (VB be)
        (S
          (VP (TO to)
            (VP (VB ban)
              (NP (NNS abortions))
              (ADVP (RB even))
              (PP (IN in)
                (NP
                  (NP (NNS cases))
                  (PP (IN of)
                    (NP (NN rape))))))))))
    (. .)))

det(solution-2, The-1)
nsubj(be-8, solution-2)
advmod(be-8, though-4)
aux(be-8, can-6)
neg(be-8, not-7)
root(ROOT-0, be-8)
aux(ban-10, to-9)
xcomp(be-8, ban-10)
dobj(ban-10, abortions-11)
advmod(ban-10, even-12)
prep_in(ban-10, cases-14)
prep_of(cases-14, rape-16)

(ROOT
  (S
    (ADVP (RB Instead))
    (, ,)
    (NP (DT the) (NN solution))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB legalize)
            (NP
              (NP (DT all) (NNS forms))
              (PP (IN of)
                (NP (NN abortion))))))))
    (. .)))

advmod(is-5, Instead-1)
det(solution-4, the-3)
nsubj(is-5, solution-4)
xsubj(legalize-7, solution-4)
root(ROOT-0, is-5)
aux(legalize-7, to-6)
xcomp(is-5, legalize-7)
det(forms-9, all-8)
dobj(legalize-7, forms-9)
prep_of(forms-9, abortion-11)

