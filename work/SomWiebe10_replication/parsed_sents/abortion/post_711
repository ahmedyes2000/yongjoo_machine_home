(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (ADJP (JJ interesting)
        (PP (TO to)
          (NP (PRP me))))
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP you))
          (VP (MD can) (RB not)
            (VP (VB make)
              (NP
                (NP (DT the) (NN assertion))
                (PP (IN about)
                  (NP (NNS absolutes))))
              (PP (IN without)
                (S
                  (VP (VBG contradicting)
                    (NP (PRP yourself))))))))))
    (. .)))

nsubj(interesting-3, It-1)
cop(interesting-3, 's-2)
root(ROOT-0, interesting-3)
prep_to(interesting-3, me-5)
advmod(make-10, how-6)
nsubj(make-10, you-7)
aux(make-10, can-8)
neg(make-10, not-9)
ccomp(interesting-3, make-10)
det(assertion-12, the-11)
dobj(make-10, assertion-12)
prep_about(assertion-12, absolutes-14)
prepc_without(make-10, contradicting-16)
dobj(contradicting-16, yourself-17)

(ROOT
  (S ('' '')
    (NP (NNP Life))
    (VP (VBZ is)
      (ADJP (JJ worth))
      (S
        (VP (VBG protecting)
          (NP
            (CONJP (CC but)
              (RB not))
            (NP (RB equally) (RB so))
            ('' '')
            (NP
              (NP (DT That))
              (SBAR
                (S
                  (VP (VBZ 's)
                    (NP (DT an) (JJ absolute) (NN statement))))))))))
    (. .)))

nsubj(worth-4, Life-2)
cop(worth-4, is-3)
root(ROOT-0, worth-4)
xcomp(worth-4, protecting-5)
cc(so-9, not-7)
advmod(so-9, equally-8)
dobj(protecting-5, so-9)
dep(so-9, That-11)
cop(statement-15, 's-12)
det(statement-15, an-13)
amod(statement-15, absolute-14)
rcmod(That-11, statement-15)

(ROOT
  (S
    (INTJ (DT That) (VBZ is))
    (, ,)
    (S
      (NP (PRP I))
      (VP (VBP have) (RB n't)
        (VP (VBN seen)
          (NP
            (NP (NNS people) (POS 's))
            (NNS attitudes))
          (PP (IN about)
            (SBAR
              (WHADVP (WRB how))
              (S
                (NP (PRP they))
                (VP (VBP think)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (MD should)
                        (VP (VB be)
                          (VP (VBN treated)
                            (NP (NN change))))))))))))))
    (. .)))

dep(seen-7, That-1)
dep(That-1, is-2)
nsubj(seen-7, I-4)
aux(seen-7, have-5)
neg(seen-7, n't-6)
root(ROOT-0, seen-7)
poss(attitudes-10, people-8)
dobj(seen-7, attitudes-10)
advmod(think-14, how-12)
nsubj(think-14, they-13)
prepc_about(seen-7, think-14)
nsubjpass(treated-18, they-15)
aux(treated-18, should-16)
auxpass(treated-18, be-17)
ccomp(think-14, treated-18)
dobj(treated-18, change-19)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ thinks)
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD should)
            (VP (VB be)
              (VP
                (VP (VBN lied)
                  (S
                    (VP (TO to))))
                (CC or)
                (VP (VBD cheated)
                  (PRT (RP on)))
                (CC or)
                (VP (VBN stolen)
                  (PP (IN from)))))))))
    (. .)))

det(one-2, No-1)
nsubj(thinks-3, one-2)
root(ROOT-0, thinks-3)
nsubjpass(lied-7, they-4)
nsubjpass(cheated-10, they-4)
nsubjpass(stolen-13, they-4)
aux(lied-7, should-5)
auxpass(lied-7, be-6)
ccomp(thinks-3, lied-7)
xcomp(lied-7, to-8)
ccomp(thinks-3, cheated-10)
conj_or(lied-7, cheated-10)
prt(cheated-10, on-11)
ccomp(thinks-3, stolen-13)
conj_or(lied-7, stolen-13)
prep(stolen-13, from-14)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ thinks)
      (SBAR
        (S
          (NP (NNS others))
          (VP (VBP have)
            (NP (DT the) (NN right)
              (S
                (VP (TO to)
                  (VP (VB murder)
                    (NP (PRP them))))))))))
    (. .)))

det(one-2, No-1)
nsubj(thinks-3, one-2)
root(ROOT-0, thinks-3)
nsubj(have-5, others-4)
ccomp(thinks-3, have-5)
det(right-7, the-6)
dobj(have-5, right-7)
aux(murder-9, to-8)
infmod(right-7, murder-9)
dobj(murder-9, them-10)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ seems)
        (PP (TO to)
          (NP (PRP me)))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (ADVP (RB basically))
              (VP (VBG saying)
                (NP (DT that) (NN everything) (NNS changes))))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (PDT all) (DT a) (NN matter))
          (PP (IN of)
            (NP (NN perspective))))
        (SBAR (IN so)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (ADJP (JJ impossible)
                (S
                  (VP (TO to)
                    (VP (VB know)
                      (NP (NN anything)))))))))))
    (. .)))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
prep_to(seems-2, me-4)
nsubj(saying-8, you-5)
aux(saying-8, are-6)
advmod(saying-8, basically-7)
ccomp(seems-2, saying-8)
det(changes-11, that-9)
nn(changes-11, everything-10)
dobj(saying-8, changes-11)
nsubj(matter-17, it-13)
cop(matter-17, 's-14)
predet(matter-17, all-15)
det(matter-17, a-16)
conj_and(seems-2, matter-17)
prep_of(matter-17, perspective-19)
mark(impossible-23, so-20)
nsubj(impossible-23, it-21)
cop(impossible-23, 's-22)
advcl(matter-17, impossible-23)
aux(know-25, to-24)
xcomp(impossible-23, know-25)
dobj(know-25, anything-26)

(ROOT
  (SBAR (IN If)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (ADVP (RB so))
        (SBAR
          (SBARQ
            (WHNP (WP what))
            (SQ (VBP are)
              (NP (PRP you))
              (VP (VBG basing)
                (NP (PRP$ your) (JJ own) (NN arguement))
                (PRT (RP on))))
            (. ?)))))))

mark(is-3, If-1)
nsubj(is-3, that-2)
root(ROOT-0, is-3)
advmod(is-3, so-4)
dep(basing-8, what-5)
pobj(on-12, what-5)
aux(basing-8, are-6)
nsubj(basing-8, you-7)
dep(is-3, basing-8)
poss(arguement-11, your-9)
amod(arguement-11, own-10)
dobj(basing-8, arguement-11)
prt(basing-8, on-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (SBAR (RB only) (IN if)
        (S
          (NP (EX there))
          (VP (VBP are)
            (NP
              (NP (JJ moral) (NNS absolutes))
              (SBAR
                (S
                  (NP (NN slavery))
                  (VP (VBZ is)
                    (NP
                      (NP (JJ wrong-all) (NNS men))
                      (SBAR
                        (S
                          (VP (VBP are)
                            (VP (VBN created)
                              (SBAR
                                (S
                                  (NP (JJ equal-child) (NN abuse))
                                  (VP (VBZ is)
                                    (NP
                                      (NP (JJ wrong-the) (NN genocide))
                                      (PP (IN of)
                                        (NP
                                          (NP
                                            (QP (CD 7) (CD million)))
                                          (SBAR
                                            (S
                                              (NP (NNPS Jews))
                                              (VP (VBZ is)
                                                (ADJP (JJ wrong))
                                                (SBAR (IN that)
                                                  (S
                                                    (NP (PRP we))
                                                    (VP (VBP have)
                                                      (NP (NN something)
                                                        (S
                                                          (VP (TO to)
                                                            (VP (VB stand)
                                                              (PRT (RP on)))))))))))))))))))))))))))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod(are-6, only-3)
dep(are-6, if-4)
expl(are-6, there-5)
ccomp('s-2, are-6)
amod(absolutes-8, moral-7)
nsubj(are-6, absolutes-8)
nsubj(men-12, slavery-9)
cop(men-12, is-10)
amod(men-12, wrong-all-11)
rcmod(absolutes-8, men-12)
auxpass(created-14, are-13)
rcmod(men-12, created-14)
amod(abuse-16, equal-child-15)
nsubj(genocide-19, abuse-16)
cop(genocide-19, is-17)
amod(genocide-19, wrong-the-18)
ccomp(created-14, genocide-19)
number(million-22, 7-21)
prep_of(genocide-19, million-22)
nsubj(wrong-25, Jews-23)
cop(wrong-25, is-24)
rcmod(million-22, wrong-25)
complm(have-28, that-26)
nsubj(have-28, we-27)
ccomp(wrong-25, have-28)
dobj(have-28, something-29)
aux(stand-31, to-30)
infmod(something-29, stand-31)
prt(stand-31, on-32)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBP are)
          (ADJP (RB no) (JJ moral)))))
    (VP (VBZ absolutes)
      (SBAR
        (WHADVP (WRB how))
        (S
          (VP (VBP do)
            (SBAR
              (S
                (NP (PRP we))
                (VP (VBP know)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (VP (TO to)
                        (VP
                          (VP (VB change)
                            (NP (NNS laws)))
                          (CC or)
                          (VP
                            (ADVP (RB correctly))
                            (VB interpret)
                            (NP (PRP them))))))))))))))
    (. ?)))

mark(are-3, If-1)
expl(are-3, there-2)
csubj(absolutes-6, are-3)
advmod(moral-5, no-4)
acomp(are-3, moral-5)
root(ROOT-0, absolutes-6)
advmod(do-8, how-7)
ccomp(absolutes-6, do-8)
nsubj(know-10, we-9)
ccomp(do-8, know-10)
advmod(change-13, when-11)
aux(change-13, to-12)
xcomp(know-10, change-13)
dobj(change-13, laws-14)
advmod(interpret-17, correctly-16)
xcomp(know-10, interpret-17)
conj_or(change-13, interpret-17)
dobj(interpret-17, them-18)

(ROOT
  (SBAR (IN If)
    (S
      (NP (PRP you))
      (VP (VBP do) (RB n't)
        (VP (VB believe)
          (PP (IN in)
            (NP (JJ moral) (NNS absolutes)))
          (PP (IN by)
            (SBARQ
              (WHNP (WDT what) (NN criteria))
              (SQ (VBP are)
                (NP (PRP you))
                (VP (VBG basing)
                  (NP (PRP$ your) (NN belief))
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBZ is)
                        (ADJP (JJ right)
                          (S
                            (VP (TO to)
                              (VP (VB end)
                                (NP
                                  (NP (DT the) (NN life))
                                  (PP (IN of)
                                    (NP
                                      (NP (NNS babies))
                                      (PP (IN in)
                                        (NP (DT the) (NN womb)))))))))))))))
              (. ?))))))))

mark(believe-5, If-1)
nsubj(believe-5, you-2)
aux(believe-5, do-3)
neg(believe-5, n't-4)
root(ROOT-0, believe-5)
amod(absolutes-8, moral-7)
prep_in(believe-5, absolutes-8)
prep(believe-5, by-9)
det(criteria-11, what-10)
dep(basing-14, criteria-11)
aux(basing-14, are-12)
nsubj(basing-14, you-13)
dep(by-9, basing-14)
poss(belief-16, your-15)
dobj(basing-14, belief-16)
complm(right-20, that-17)
nsubj(right-20, it-18)
cop(right-20, is-19)
ccomp(basing-14, right-20)
aux(end-22, to-21)
xcomp(right-20, end-22)
det(life-24, the-23)
dobj(end-22, life-24)
prep_of(life-24, babies-26)
det(womb-29, the-28)
prep_in(babies-26, womb-29)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP (DT no) (NNP God)))))
    (, ,)
    (NP (WP what) (NN paradigm))
    (VP (VBZ is)
      (S
        (NP (EX there))
        (VP (TO to)
          (VP (VB go)
            (PP (IN by))))))
    (. ?)))

mark(is-3, If-1)
expl(is-3, there-2)
advcl(is-9, is-3)
det(God-5, no-4)
nsubj(is-3, God-5)
dep(paradigm-8, what-7)
nsubj(is-9, paradigm-8)
root(ROOT-0, is-9)
expl(go-12, there-10)
aux(go-12, to-11)
xcomp(is-9, go-12)
prep(go-12, by-13)

(ROOT
  (FRAG
    (NP (NN Nothing))
    (: :)
    (S
      (NP (DT each) (NN man))
      (VP (VBZ does)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is)
              (ADJP (JJ right)
                (PP (IN in)
                  (NP (PRP$ their) (JJ own) (NNS eyes)))))))))
    (. .)))

root(ROOT-0, Nothing-1)
det(man-4, each-3)
nsubj(does-5, man-4)
dep(Nothing-1, does-5)
nsubj(right-8, what-6)
cop(right-8, is-7)
ccomp(does-5, right-8)
poss(eyes-12, their-10)
amod(eyes-12, own-11)
prep_in(right-8, eyes-12)

(ROOT
  (S (CC And)
    (ADVP (RB besides))
    (, ,)
    (VP (VBZ says)
      (WHNP (WP who)))
    (. ?)))

cc(says-4, And-1)
advmod(says-4, besides-2)
root(ROOT-0, says-4)
dobj(says-4, who-5)

(ROOT
  (FRAG
    (SBAR
      (SBAR
        (WHPP (IN In)
          (WHNP (WDT which) (NN case)))
        (S
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP 're)
                (NP
                  (NP (DT the) (JJS strongest))
                  (CC and)
                  (NP (JJS richest))))))
          (NP (PRP you))
          (VP (VBP get)
            (NP (PRP$ your) (NN way)))))
      (CC and)
      (SBAR (IN if)
        (S
          (NP (PRP$ your))
          (ADJP (JJR weaker)
            (CC and)
            (JJR poorer)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP 're)
                  (PRT (RP out))
                  (PP (IN of)
                    (NP (NN luck))))))))))
    (. .)))

dep(get-12, In-1)
det(case-3, which-2)
pobj(In-1, case-3)
mark(strongest-8, if-4)
nsubj(strongest-8, you-5)
nsubj(richest-10, you-5)
cop(strongest-8, 're-6)
det(strongest-8, the-7)
advcl(get-12, strongest-8)
conj_and(strongest-8, richest-10)
advcl(get-12, richest-10)
nsubj(get-12, you-11)
nsubj(weaker-18, you-11)
root(ROOT-0, get-12)
poss(way-14, your-13)
dobj(get-12, way-14)
mark(weaker-18, if-16)
dep(weaker-18, your-17)
conj_and(get-12, weaker-18)
conj_and(get-12, poorer-20)
conj_and(weaker-18, poorer-20)
nsubj('re-22, you-21)
dep(weaker-18, 're-22)
prep_out_of('re-22, luck-25)

(ROOT
  (S
    (SBAR (IN Because)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB believe)
            (NP (NN life))))))
    (VP (VBZ is)
      (ADJP (JJ worth))
      (S
        (VP (VBG protecting)
          (PP (IN at)
            (NP
              (NP (DT every) (NN point))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ makes)
                    (NP (PRP it))
                    (ADVP (RB so))))))))))
    (. ?)))

mark(believe-5, Because-1)
nsubj(believe-5, you-2)
aux(believe-5, do-3)
neg(believe-5, n't-4)
csubj(worth-8, believe-5)
dobj(believe-5, life-6)
cop(worth-8, is-7)
root(ROOT-0, worth-8)
xcomp(worth-8, protecting-9)
det(point-12, every-11)
prep_at(protecting-9, point-12)
nsubj(makes-14, point-12)
rcmod(point-12, makes-14)
dobj(makes-14, it-15)
advmod(makes-14, so-16)

(ROOT
  (S
    (NP
      (NP (DT Those) (NNS laws))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBP govern)
            (NP (PRP$ our) (NN society))))))
    (VP (VBP are)
      (VP (VBN based)
        (PP (IN on)
          (NP
            (NP (JJ moral) (NNS absolutes))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP stem)
                  (ADVP (RB directly))
                  (PP (IN from)
                    (NP (DT the) (CD ten) (NNS commandments))))))))))
    (. .)))

det(laws-2, Those-1)
nsubj(govern-4, laws-2)
nsubjpass(based-8, laws-2)
rcmod(laws-2, govern-4)
poss(society-6, our-5)
dobj(govern-4, society-6)
auxpass(based-8, are-7)
root(ROOT-0, based-8)
amod(absolutes-11, moral-10)
prep_on(based-8, absolutes-11)
nsubj(stem-13, absolutes-11)
rcmod(absolutes-11, stem-13)
advmod(stem-13, directly-14)
det(commandments-18, the-16)
num(commandments-18, ten-17)
prep_from(stem-13, commandments-18)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBP 've)
          (VP
            (ADVP (RB already))
            (VBN said) (, ,)
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP you))
                (VP (VBP take)
                  (NP
                    (NP (NNP God))
                    (PP (RB out) (IN of)
                      (NP (DT the) (NN equation)))))))))))
    (NP (PRP you))
    (VP (VBP are)
      (PP (IN on)
        (NP
          (NP (DT the) (`` ``) (JJ slippery) (NN slope) ('' ''))
          (SBAR
            (S
              (NP (PRP you))
              (VP
                (VP (VBP speak)
                  (PP (IN of)))
                (CC and)
                (VP (VBP are)
                  (VP (VBN reduced)
                    (PP (TO to)
                      (NP (JJ personal) (NNS beliefs)))))))))))
    (. .)))

mark(said-5, As-1)
nsubj(said-5, I-2)
aux(said-5, 've-3)
advmod(said-5, already-4)
advcl(are-16, said-5)
advmod(take-9, when-7)
nsubj(take-9, you-8)
advcl(said-5, take-9)
dobj(take-9, God-10)
det(equation-14, the-13)
prep_out_of(God-10, equation-14)
nsubj(are-16, you-15)
root(ROOT-0, are-16)
det(slope-21, the-18)
amod(slope-21, slippery-20)
prep_on(are-16, slope-21)
prep_of(speak-24, slope-21)
nsubj(speak-24, you-23)
nsubjpass(reduced-28, you-23)
rcmod(slope-21, speak-24)
auxpass(reduced-28, are-27)
rcmod(slope-21, reduced-28)
conj_and(speak-24, reduced-28)
amod(beliefs-31, personal-30)
prep_to(reduced-28, beliefs-31)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ does) (RB n't)
      (VP (VB change)
        (NP
          (NP
            (NP (DT the) (NN nature))
            (PP (IN of)
              (NP (NNP God))))
          (CC or)
          (NP
            (NP (DT the) (JJ moral) (NN code))
            (SBAR
              (S
                (NP (PRP He))
                (VP (VBZ 's)
                  (VP (VBN prescribed)
                    (PP (IN for)
                      (NP (NN mankind)))))))))))
    (. .)))

nsubj(change-4, That-1)
aux(change-4, does-2)
neg(change-4, n't-3)
root(ROOT-0, change-4)
det(nature-6, the-5)
dobj(change-4, nature-6)
prep_of(nature-6, God-8)
det(code-12, the-10)
amod(code-12, moral-11)
dobj(change-4, code-12)
conj_or(nature-6, code-12)
nsubjpass(prescribed-15, He-13)
auxpass(prescribed-15, 's-14)
rcmod(code-12, prescribed-15)
prep_for(prescribed-15, mankind-17)

(ROOT
  (S
    (ADVP (RB Frankly))
    (NP (PRP I))
    (VP (VBP see)
      (NP
        (NP (DT a) (JJ direct) (NN correlation))
        (PP (IN between)
          (NP
            (NP
              (NP (DT the) (NN rejecting))
              (PP (IN of)
                (NP (NNP God))))
            (CC and)
            (NP
              (NP (DT the) (VBG increasing) (NNS lawlessness))
              (PP (IN of)
                (NP (PRP$ our) (NN society))))))))
    (. .)))

advmod(see-3, Frankly-1)
nsubj(see-3, I-2)
root(ROOT-0, see-3)
det(correlation-6, a-4)
amod(correlation-6, direct-5)
dobj(see-3, correlation-6)
det(rejecting-9, the-8)
prep_between(correlation-6, rejecting-9)
prep_of(rejecting-9, God-11)
det(lawlessness-15, the-13)
amod(lawlessness-15, increasing-14)
prep_between(correlation-6, lawlessness-15)
conj_and(rejecting-9, lawlessness-15)
poss(society-18, our-17)
prep_of(lawlessness-15, society-18)

(ROOT
  (S
    (NP
      (NP (PRP$ Our) (NNS laws))
      (, ,)
      (PP (IN without)
        (NP
          (NP (DT the) (NN belief))
          (PP (IN in)
            (NP (NNP God)))
          (S
            (VP (TO to)
              (VP (VB back)
                (NP (PRP them))
                (PRT (RP up)))))))
      (, ,))
    (VP (VBP do) (RB n't)
      (VP (VB motivate)
        (NP (JJ many) (NNS people))
        (S
          (VP (TO to)
            (VP (VB follow)
              (NP (PRP them)))))))
    (. .)))

poss(laws-2, Our-1)
nsubj(motivate-16, laws-2)
det(belief-6, the-5)
prep_without(laws-2, belief-6)
prep_in(belief-6, God-8)
aux(back-10, to-9)
infmod(belief-6, back-10)
dobj(back-10, them-11)
prt(back-10, up-12)
aux(motivate-16, do-14)
neg(motivate-16, n't-15)
root(ROOT-0, motivate-16)
amod(people-18, many-17)
dobj(motivate-16, people-18)
aux(follow-20, to-19)
xcomp(motivate-16, follow-20)
dobj(follow-20, them-21)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP state)
        (SBAR (IN that)
          (S
            (NP (NN society) (, ,) (NN religion)
              (CC and)
              (NN law))
            (RB all)
            (VP (VB change)
              (PRT (RP over))
              (NP (NN time)))))))
    (PRN (-LRB- -LRB-)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ 's)
            (NP (DT another) (JJ absolute) (NN statement)))))
      (-RRB- -RRB-))
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP have) (RB not)
        (VP (VBN seen)
          (NP (JJ morals) (NN change)))))
    (. .)))

nsubj(state-2, You-1)
root(ROOT-0, state-2)
complm(change-10, that-3)
nsubj(change-10, society-4)
conj_and(society-4, religion-6)
nsubj(change-10, religion-6)
conj_and(society-4, law-8)
nsubj(change-10, law-8)
advmod(change-10, all-9)
ccomp(state-2, change-10)
prt(change-10, over-11)
dobj(change-10, time-12)
nsubj(statement-18, that-14)
cop(statement-18, 's-15)
det(statement-18, another-16)
amod(statement-18, absolute-17)
dep(state-2, statement-18)
nsubj(seen-24, I-21)
aux(seen-24, have-22)
neg(seen-24, not-23)
conj_but(state-2, seen-24)
amod(change-26, morals-25)
dobj(seen-24, change-26)

