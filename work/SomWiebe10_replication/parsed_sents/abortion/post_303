(ROOT
  (S
    (NP (NNP DNA))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ distinguishes)
            (NP (DT any) (NN organism))
            (PP (IN from)
              (NP (DT every) (JJ other)))
            (, ,)
            (PP (VBG according)
              (PP (TO to)
                (NP
                  (NP (NN science))
                  (PRN (-LRB- -LRB-)
                    (NP (NNP Biology) (NNP specifically))
                    (-RRB- -RRB-)))))))))
    (. .)))

nsubj(is-2, DNA-1)
root(ROOT-0, is-2)
nsubj(distinguishes-4, what-3)
ccomp(is-2, distinguishes-4)
det(organism-6, any-5)
dobj(distinguishes-4, organism-6)
det(other-9, every-8)
prep_from(distinguishes-4, other-9)
prepc_according_to(distinguishes-4, to-12)
pobj(distinguishes-4, science-13)
nn(specifically-16, Biology-15)
appos(science-13, specifically-16)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (PRP we))
    (VP (VBP 're)
      (VP (VBG talking)
        (PP (IN about)
          (NP (NNP HUMAN) (NNP DNA)))))
    (. .)))

advmod(talking-5, Again-1)
nsubj(talking-5, we-3)
aux(talking-5, 're-4)
root(ROOT-0, talking-5)
nn(DNA-8, HUMAN-7)
prep_about(talking-5, DNA-8)

(ROOT
  (S
    (NP (NNP Justice) (, ,) (NNP Morality) (, ,)
      (CC and)
      (NNP Ethics))
    (VP (VBP are)
      (ADJP (RB inherently) (JJ non-secular)))
    (. .)))

nsubj(non-secular-9, Justice-1)
conj_and(Justice-1, Morality-3)
nsubj(non-secular-9, Morality-3)
conj_and(Justice-1, Ethics-6)
nsubj(non-secular-9, Ethics-6)
cop(non-secular-9, are-7)
advmod(non-secular-9, inherently-8)
root(ROOT-0, non-secular-9)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP$ our) (NN system))
          (VP (VBD were)
            (UCP
              (ADJP (RB truly) (JJ secular))
              (CC and)
              (VP (VBN based)
                (PP (IN on)
                  (NP (DT the) (NNP Enlightenment))))))))
      (, ,)
      (NP (EX there))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT no) (NN reference))
            (PP (TO to)
              (NP (DT a) (NNP Creator)))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NNP First) (NNP Amendment))
      (VP (MD would)
        (ADVP (RB never))
        (VP (VB have)
          (VP (VBN included)
            (NP
              (NP (NN anything))
              (ADJP (RB remotely) (JJ pertaining)))
            (PP (TO to)
              (NP (NN religion)))))))
    (. .)))

mark(secular-6, If-1)
poss(system-3, our-2)
nsubjpass(secular-6, system-3)
nsubjpass(based-8, system-3)
auxpass(secular-6, were-4)
cop(secular-6, were-4)
advmod(secular-6, truly-5)
advcl(reference-17, secular-6)
conj_and(secular-6, based-8)
advcl(reference-17, based-8)
det(Enlightenment-11, the-10)
prep_on(based-8, Enlightenment-11)
expl(reference-17, there-13)
aux(reference-17, would-14)
cop(reference-17, be-15)
det(reference-17, no-16)
root(ROOT-0, reference-17)
det(Creator-20, a-19)
prep_to(reference-17, Creator-20)
det(Amendment-25, the-23)
nn(Amendment-25, First-24)
nsubj(included-29, Amendment-25)
aux(included-29, would-26)
neg(included-29, never-27)
aux(included-29, have-28)
conj_and(reference-17, included-29)
dobj(included-29, anything-30)
advmod(pertaining-32, remotely-31)
amod(anything-30, pertaining-32)
prep_to(included-29, religion-34)

(ROOT
  (SBARQ
    (SBAR (IN As)
      (FRAG
        (PP (IN for)
          (NP (DT the) (NN practice)))))
    (, ,)
    (WHADVP (WRB where)
      (ADJP (RB else)))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB get)
        (NP (NNS laws))
        (PP (IN against)
          (NP
            (NP (NN murder) (, ,) (NN rape) (, ,)
              (CC and)
              (NN theft) (, ,))
            (PP (IN except)
              (PP (IN from)
                (NP (NN religion))))))))
    (. ?)))

mark(for-2, As-1)
advcl(get-10, for-2)
det(practice-4, the-3)
pobj(for-2, practice-4)
advmod(get-10, where-6)
dep(where-6, else-7)
aux(get-10, do-8)
nsubj(get-10, you-9)
root(ROOT-0, get-10)
dobj(get-10, laws-11)
nn(rape-15, murder-13)
prep_against(get-10, rape-15)
prep_against(get-10, theft-18)
conj_and(rape-15, theft-18)
prep(rape-15, except-20)
pcomp(except-20, from-21)
prep_from(except-20, religion-22)

(ROOT
  (SINV
    (ADVP (RB Relativism))
    (VP (VBZ holds))
    (NP
      (NP (DT no) (NN standard))
      (, ,)
      (SBAR (IN for)
        (S
          (NP
            (NP (DT the) (NN one))
            (PP (IN on)
              (NP (NN trial))))
          (VP (MD can)
            (ADVP (RB always))
            (VP (VB say) (`` ``)
              (ADVP (RB well))
              (SBAR (IN that)
                (S
                  (VP (MD may)
                    (VP (VB be)
                      (ADJP (JJ good)
                        (PP (IN for)
                          (NP (PRP you))))
                      (ADVP (CC but)))))))))))
    (: ...)))

advmod(holds-2, Relativism-1)
root(ROOT-0, holds-2)
det(standard-4, no-3)
nsubj(holds-2, standard-4)
dobj(say-13, standard-4)
mark(say-13, for-6)
det(one-8, the-7)
nsubj(say-13, one-8)
prep_on(one-8, trial-10)
aux(say-13, can-11)
advmod(say-13, always-12)
dep(standard-4, say-13)
advmod(say-13, well-15)
complm(good-19, that-16)
aux(good-19, may-17)
cop(good-19, be-18)
ccomp(say-13, good-19)
prep_for(good-19, you-21)
advmod(good-19, but-22)

(ROOT
  (S ('' '')
    (S
      (ADVP (RB Now))
      (NP (PRP you))
      (VP (MD may)
        (VP (VB object)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN law))
              (VP (VBZ is) (RB n't)
                (ADJP (JJ relative))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT that))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ has)
              (NP (DT a) (JJ relativ) (NN basis))))))
      (VP (VBZ is)
        (ADJP (RB inherently) (JJ relative))))
    (. .)))

advmod(object-5, Now-2)
nsubj(object-5, you-3)
aux(object-5, may-4)
root(ROOT-0, object-5)
complm(relative-11, that-6)
det(law-8, the-7)
nsubj(relative-11, law-8)
cop(relative-11, is-9)
neg(relative-11, n't-10)
ccomp(object-5, relative-11)
nsubj(has-16, that-14)
nsubj(relative-22, that-14)
rcmod(that-14, has-16)
det(basis-19, a-17)
amod(basis-19, relativ-18)
dobj(has-16, basis-19)
cop(relative-22, is-20)
advmod(relative-22, inherently-21)
conj_but(object-5, relative-22)

(ROOT
  (S
    (SBAR
      (ADVP (RB Thus))
      (IN if)
      (S
        (NP (PRP$ our) (JJ justice\/legal) (NN system))
        (VP (VBZ is)
          (VP (VBN based)
            (PP (IN on)
              (NP (NN something)))
            (ADVP (RB as) (JJ relative)
              (PP (IN as) (`` ``)
                (NP (JJ cultual\/social) (NNS norms))
                ('' '')))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB likewise))
      (, ,)
      (ADVP (RB fundamentally))
      (ADJP (JJ relative)))
    (. .)))

advmod(based-7, Thus-1)
dep(based-7, if-2)
poss(system-5, our-3)
amod(system-5, justice\/legal-4)
nsubjpass(based-7, system-5)
auxpass(based-7, is-6)
advcl(relative-23, based-7)
prep_on(based-7, something-9)
advmod(relative-11, as-10)
advmod(based-7, relative-11)
amod(norms-15, cultual\/social-14)
prep_as(relative-11, norms-15)
nsubj(relative-23, it-18)
cop(relative-23, is-19)
advmod(relative-23, likewise-20)
advmod(relative-23, fundamentally-22)
root(ROOT-0, relative-23)

(ROOT
  (S (CC But)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (NP (DT a) (NN tangent))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB discuss)
          (NP (PRP it))
          (ADVP (DT no) (RBR further)))))
    (. .)))

nsubj(tangent-5, this-2)
cop(tangent-5, is-3)
det(tangent-5, a-4)
root(ROOT-0, tangent-5)
nsubj(discuss-9, I-7)
aux(discuss-9, 'll-8)
conj_and(tangent-5, discuss-9)
dobj(discuss-9, it-10)
dep(further-12, no-11)
advmod(discuss-9, further-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (NP
        (NP (NN job))
        (SBAR
          (S
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB refute)
                    (SBAR (IN that)
                      (S
                        (NP (DT an) (NN embryo)
                          (CC or)
                          (NN fetus))
                        (VP (VBZ is) (RB n't)
                          (NP (DT a) (JJ human) (NN being)))))))))))))
    (. .)))

nsubj(job-3, You-1)
cop(job-3, 're-2)
root(ROOT-0, job-3)
rcmod(job-3, is-4)
aux(refute-6, to-5)
xcomp(is-4, refute-6)
complm(being-16, that-7)
det(embryo-9, an-8)
nsubj(being-16, embryo-9)
conj_or(embryo-9, fetus-11)
nsubj(being-16, fetus-11)
cop(being-16, is-12)
neg(being-16, n't-13)
det(being-16, a-14)
amod(being-16, human-15)
ccomp(refute-6, being-16)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ 's)
      (NP (RB only) (CD 2) (NNS ways))
      (: :)
      (NP (CD 1)))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
advmod(ways-5, only-3)
num(ways-5, 2-4)
nsubj('s-2, ways-5)
nsubj('s-2, 1-7)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP are) (RB n't)
      (NP
        (NP
          (NP (JJ human))
          (PRN (-LRB- -LRB-)
            (S
              (NP (PRP they))
              (VP (VBP are)))
            (-RRB- -RRB-)))
        (PRN (: ;)
          (NP (CD 2)))))
    (. .)))

nsubj(human-4, they-1)
cop(human-4, are-2)
neg(human-4, n't-3)
root(ROOT-0, human-4)
nsubj(are-7, they-6)
dep(human-4, are-7)
dep(human-4, 2-10)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ sure)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD 'd)
              (VP (VB agree)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (NN something))
                      (PP (IN like)
                        (NP (NN bipedality))))
                    (VP (VBZ is)
                      (ADJP (JJ trivial)))))))))))
    (. .)))

nsubj(sure-3, I-1)
cop(sure-3, 'm-2)
root(ROOT-0, sure-3)
nsubj(agree-6, you-4)
aux(agree-6, 'd-5)
dep(sure-3, agree-6)
complm(trivial-12, that-7)
nsubj(trivial-12, something-8)
prep_like(something-8, bipedality-10)
cop(trivial-12, is-11)
ccomp(agree-6, trivial-12)

(ROOT
  (S
    (NP (PRP they))
    (VP (VBP are) (RB n't)
      (NP
        (NP (VBG living) (NNS beings))
        (PRN (-LRB- -LRB-)
          (S
            (NP (PRP they))
            (VP (VBP are)))
          (-RRB- -RRB-))))
    (. .)))

nsubj(beings-5, they-1)
cop(beings-5, are-2)
neg(beings-5, n't-3)
amod(beings-5, living-4)
root(ROOT-0, beings-5)
nsubj(are-8, they-7)
dep(beings-5, are-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP claim)
          (S
            (NP (NN something))
            (ADJP (RB as) (JJ obscure)
              (PP (IN as)
                (NP (NNP dependency))))))))
    (, ,)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBP are)
        (ADJP
          (ADVP (RB no) (RBR more))
          (VBN protected)
          (SBAR (IN than)
            (S
              (NP (PRP they))
              (VP
                (VP (VBP are))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP you))
                    (VP (VBP are) (RB not)
                      (ADJP
                        (ADJP (JJ biologically)
                          (CC or)
                          (JJ ecologicaly))
                        (CC or)
                        (ADJP (RB socially) (JJ independent))))))))))))
    (, ,)
    (CC and)
    (ADVP (RB therefore))
    (S
      (NP
        (NP (PRP$ your) (NN reasoning))
        (PP (IN for)
          (NP (NN abortion))))
      (VP (MD could)
        (VP (VB be)
          (VP (VBN extended)
            (PP (TO to)
              (NP (PRP you)))))))
    (. .)))

mark(claim-3, If-1)
nsubj(claim-3, you-2)
advcl(protected-15, claim-3)
nsubj(obscure-6, something-4)
advmod(obscure-6, as-5)
xcomp(claim-3, obscure-6)
prep_as(obscure-6, dependency-8)
advmod(protected-15, then-10)
nsubjpass(protected-15, you-11)
auxpass(protected-15, are-12)
advmod(more-14, no-13)
advmod(protected-15, more-14)
root(ROOT-0, protected-15)
mark(are-18, than-16)
nsubj(are-18, they-17)
dep(protected-15, are-18)
mark(biologically-24, for-20)
nsubj(biologically-24, you-21)
nsubj(ecologicaly-26, you-21)
nsubj(independent-29, you-21)
cop(biologically-24, are-22)
neg(biologically-24, not-23)
advcl(are-18, biologically-24)
advcl(are-18, ecologicaly-26)
conj_or(biologically-24, ecologicaly-26)
advmod(independent-29, socially-28)
advcl(are-18, independent-29)
conj_or(biologically-24, independent-29)
advmod(protected-15, therefore-32)
conj_and(protected-15, therefore-32)
poss(reasoning-34, your-33)
nsubjpass(extended-39, reasoning-34)
prep_for(reasoning-34, abortion-36)
aux(extended-39, could-37)
auxpass(extended-39, be-38)
ccomp(protected-15, extended-39)
conj_and(protected-15, extended-39)
prep_to(extended-39, you-41)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP make)
            (NP (DT the) (NN claim))
            (`` ``)
            (S
              (NP (PRP it))
              (VP (VBZ does) (RB n't)
                (VP (VB look)
                  (ADJP (JJ human)))))
            ('' ''))))
      (NP (DT that))
      (ADVP (RB only))
      (VP (VBZ applies)
        (PP (IN within)
          (NP (DT the) (JJ first) (CD 3) (NNS wks)))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB then))
      (NP (PRP$ your) (NN ratioale))
      (VP (MD could)
        (ADVP (RB also))
        (VP (VB apply)
          (PP (TO to)
            (NP
              (NP (DT the) (NNS handicapped))
              (CC or)
              (NP
                (NP (RB even) (NNS people))
                (PP (IN of)
                  (NP (JJ different) (NN hair) (, ,) (NN eye) (, ,)
                    (CC or)
                    (NN skin) (NN color)))))))))
    (. .)))

mark(make-3, If-1)
nsubj(make-3, you-2)
advcl(applies-15, make-3)
det(claim-5, the-4)
dobj(make-3, claim-5)
nsubj(look-10, it-7)
aux(look-10, does-8)
neg(look-10, n't-9)
dep(make-3, look-10)
acomp(look-10, human-11)
nsubj(applies-15, that-13)
advmod(applies-15, only-14)
root(ROOT-0, applies-15)
det(wks-20, the-17)
amod(wks-20, first-18)
num(wks-20, 3-19)
prep_within(applies-15, wks-20)
advmod(apply-28, then-23)
poss(ratioale-25, your-24)
nsubj(apply-28, ratioale-25)
aux(apply-28, could-26)
advmod(apply-28, also-27)
conj_and(applies-15, apply-28)
det(handicapped-31, the-30)
prep_to(apply-28, handicapped-31)
advmod(people-34, even-33)
prep_to(apply-28, people-34)
conj_or(handicapped-31, people-34)
amod(eye-39, different-36)
nn(eye-39, hair-37)
prep_of(people-34, eye-39)
nn(color-43, skin-42)
prep_of(people-34, color-43)
conj_or(eye-39, color-43)

(ROOT
  (S
    (NP (NNS Tumors))
    (VP (VBP are) (RB n't)
      (NP
        (NP (NNS organisms))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP 're)
              (NP
                (NP (NN part))
                (PP (IN of)
                  (NP
                    (NP (DT an) (NN organism))
                    (PRN (: ;)
                      (CC or)
                      (ADVP (RB rather))
                      (NP (DT the) (NN corruption) (RB thereof)))))))))))
    (. .)))

nsubj(organisms-4, Tumors-1)
cop(organisms-4, are-2)
neg(organisms-4, n't-3)
root(ROOT-0, organisms-4)
nsubj(part-7, they-5)
cop(part-7, 're-6)
rcmod(organisms-4, part-7)
det(organism-10, an-9)
prep_of(part-7, organism-10)
dep(corruption-15, or-12)
dep(corruption-15, rather-13)
det(corruption-15, the-14)
dep(organism-10, corruption-15)
advmod(corruption-15, thereof-16)

(ROOT
  (SINV
    (S
      (NP
        (NP (JJ Unfertilized) (NNS eggs))
        (CC &)
        (NP (NN sperm)))
      (VP (VBP do) (RB n't)
        (VP (VB have)
          (NP (JJ complete) (NN DNA))
          (: ;)
          (ADVP
            (ADVP (RB only) (RB half))
            (PRN (: ;)
              (CC and)
              (ADVP (RB again)))))))
    (, ,)
    (VP (VBP are) (RB n't)
      (ADJP (JJ complete)))
    (NP
      (NP (NNS organisms))
      (, ,)
      (NP
        (NP (JJ only) (NN part))
        (PP (IN of)
          (NP (DT another) (NN organism)))))
    (. .)))

amod(eggs-2, Unfertilized-1)
nsubj(have-7, eggs-2)
conj_and(eggs-2, sperm-4)
nsubj(have-7, sperm-4)
aux(have-7, do-5)
neg(have-7, n't-6)
ccomp(complete-19, have-7)
amod(DNA-9, complete-8)
dobj(have-7, DNA-9)
advmod(half-12, only-11)
advmod(have-7, half-12)
dep(again-15, and-14)
dep(half-12, again-15)
cop(complete-19, are-17)
neg(complete-19, n't-18)
root(ROOT-0, complete-19)
nsubj(complete-19, organisms-20)
amod(part-23, only-22)
appos(organisms-20, part-23)
det(organism-26, another-25)
prep_of(part-23, organism-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NN union))
      (PP (IN of)
        (NP
          (NP (DT a) (JJ human) (NN sperm) (NN cell))
          (, ,)
          (CC and)
          (NP (JJ human) (NN egg))
          (, ,))))
    (VP (VBZ produces)
      (NP
        (NP (DT a) (JJ new) (JJ human) (NN being))
        (PRN (-LRB- -LRB-)
          (S
            (VP (VB see)
              (NP (DT the) (JJ above))))
          (-RRB- -RRB-))))
    (. .)))

det(union-2, The-1)
nsubj(produces-13, union-2)
det(cell-7, a-4)
amod(cell-7, human-5)
nn(cell-7, sperm-6)
prep_of(union-2, cell-7)
amod(egg-11, human-10)
prep_of(union-2, egg-11)
conj_and(cell-7, egg-11)
root(ROOT-0, produces-13)
det(being-17, a-14)
amod(being-17, new-15)
amod(being-17, human-16)
dobj(produces-13, being-17)
dep(being-17, see-19)
det(above-21, the-20)
dobj(see-19, above-21)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (NP (DT the) (NN debate))
      (VP (VBZ is) (RB n't)
        (PP (IN about)
          (NP
            (NP (DT the) (JJ theological) (NNS foundations))
            (PP (IN of)
              (NP
                (NP (DT the) (NNP United) (NNPS States))
                (PP (IN of)
                  (NP (NNP America)))))))))
    (: ;)
    (S
      (ADVP (RB though))
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ undeniable))))
    (. .)))

advmod(is-4, Now-1)
det(debate-3, the-2)
nsubj(is-4, debate-3)
root(ROOT-0, is-4)
neg(is-4, n't-5)
det(foundations-9, the-7)
amod(foundations-9, theological-8)
prep_about(is-4, foundations-9)
det(States-13, the-11)
nn(States-13, United-12)
prep_of(foundations-9, States-13)
prep_of(States-13, America-15)
advmod(undeniable-20, though-17)
nsubj(undeniable-20, it-18)
cop(undeniable-20, 's-19)
parataxis(is-4, undeniable-20)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB like)
              (NP (PRP it))
              (PRN (-LRB- -LRB-)
                (PP (IN whether)
                  (ADJP (JJ rational)
                    (CC or)
                    (JJ otherwise)))
                (-RRB- -RRB-))))))
      (, ,)
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (JJ free)
          (S
            (VP (TO to)
              (VP (VB move)
                (SBAR
                  (S
                    (NP (NNP China))
                    (VP (VBZ has)
                      (NP (DT a) (JJ nice) (NNP Godless) (NN government)))))))))))
    (: ;)
    (S
      (NP (NNP Russia))
      (VP (VBZ does)
        (ADVP (RB too))))
    (. .)))

mark(like-5, If-1)
nsubj(like-5, you-2)
aux(like-5, do-3)
neg(like-5, n't-4)
advcl(free-16, like-5)
dobj(like-5, it-6)
dep(like-5, whether-8)
pobj(whether-8, rational-9)
pobj(whether-8, otherwise-11)
conj_or(rational-9, otherwise-11)
nsubj(free-16, you-14)
cop(free-16, are-15)
root(ROOT-0, free-16)
aux(move-18, to-17)
xcomp(free-16, move-18)
nsubj(has-20, China-19)
ccomp(move-18, has-20)
det(government-24, a-21)
amod(government-24, nice-22)
nn(government-24, Godless-23)
dobj(has-20, government-24)
nsubj(does-27, Russia-26)
parataxis(free-16, does-27)
advmod(does-27, too-28)

(ROOT
  (S
    (ADVP (RB However))
    (: ;)
    (NP (DT the) (NN argument))
    (VP (VBZ is)
      (ADJP (RB purely) (JJ logical)))
    (. .)))

advmod(logical-7, However-1)
det(argument-4, the-3)
nsubj(logical-7, argument-4)
cop(logical-7, is-5)
advmod(logical-7, purely-6)
root(ROOT-0, logical-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP deny)
          (NP (DT a) (NNP Creator)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP deny)
      (NP (DT any) (JJ reasonable) (NN source))
      (PP (IN for)
        (S
          (NP
            (NP (DT the) (`` ``) (JJ inalienable) (NNS rights) ('' ''))
            (, ,)
            (CC and)
            (ADVP (RB therefore))
            (NP (DT all) (NNS rights))
            (, ,))
          (VP (VBG including)
            (S
              (NP (DT the) (JJ so-called))
              (`` ``)
              (ADJP (JJ right)
                (S
                  (VP (TO to)
                    (VP (VB choose)))))
              ('' '')))))
      (, ,)
      (SBAR (IN since)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (ADVP (RB no) (RB longer))
            (NP
              (NP (DT any) (JJ rational) (NN basis))
              (PP (IN for)
                (NP (NN equality))))))))
    (. .)))

mark(deny-3, If-1)
nsubj(deny-3, you-2)
advcl(deny-8, deny-3)
det(Creator-5, a-4)
dobj(deny-3, Creator-5)
nsubj(deny-8, you-7)
root(ROOT-0, deny-8)
det(source-11, any-9)
amod(source-11, reasonable-10)
dobj(deny-8, source-11)
det(rights-16, the-13)
amod(rights-16, inalienable-15)
nsubj(including-24, rights-16)
advmod(rights-16, therefore-20)
conj_and(rights-16, therefore-20)
nsubj(including-24, therefore-20)
det(rights-22, all-21)
conj_and(rights-16, rights-22)
nsubj(including-24, rights-22)
prepc_for(deny-8, including-24)
det(so-called-26, the-25)
dep(right-28, so-called-26)
dep(including-24, right-28)
aux(choose-30, to-29)
xcomp(right-28, choose-30)
mark(is-35, since-33)
expl(is-35, there-34)
advcl(deny-8, is-35)
advmod(longer-37, no-36)
advmod(is-35, longer-37)
det(basis-40, any-38)
amod(basis-40, rational-39)
nsubj(is-35, basis-40)
prep_for(basis-40, equality-42)

