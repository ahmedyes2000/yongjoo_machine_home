(ROOT
  (NP
    (NP (NNP Odd))
    (, ,)
    (NP
      (NP (DT that))
      (PP (IN in)
        (NP (PRP$ our) (JJ bad) (NN economy)))
      (SBAR (IN that)
        (S
          (S
            (NP (PRP we))
            (VP (MD ca) (RB n't)
              (VP (VB find)
                (NP (NN money))
                (PP (IN for)
                  (NP
                    (NP (NN alot))
                    (PP (IN of)
                      (NP (NNS things))))))))
          (CC but)
          (S
            (NP (PRP we))
            (VP (MD can)
              (VP (VB find)
                (NP (NN money))
                (S
                  (VP (TO to)
                    (VP (VB kill)
                      (NP (NNS children)))))))))))
    (. .)))

root(ROOT-0, Odd-1)
appos(Odd-1, that-3)
poss(economy-7, our-5)
amod(economy-7, bad-6)
prep_in(that-3, economy-7)
dep(find-12, that-8)
nsubj(find-12, we-9)
aux(find-12, ca-10)
neg(find-12, n't-11)
dep(that-3, find-12)
dobj(find-12, money-13)
prep_for(find-12, alot-15)
prep_of(alot-15, things-17)
nsubj(find-21, we-19)
aux(find-21, can-20)
dep(that-3, find-21)
conj_but(find-12, find-21)
dobj(find-21, money-22)
aux(kill-24, to-23)
xcomp(find-21, kill-24)
dobj(kill-24, children-25)

