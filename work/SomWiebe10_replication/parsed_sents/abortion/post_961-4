(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (MD should)
      (NP (PRP he))
      (VP (VB have)
        (NP
          (NP (DT no) (NN say))
          (PP (IN in)
            (NP (DT a) (NN child))))
        (SBAR (IN that)
          (S
            (NP (PRP he))
            (VP (MD would)
              (VP (VB have)
                (S
                  (VP (TO to)
                    (VP (VB bear)
                      (NP (JJ legal) (NN responsibility))
                      (PP (TO to)
                        (SBAR (IN if)
                          (S
                            (NP (PRP it))
                            (VP (VBD were)
                              (VP (VBN born)))))))))))))))
    (. ?)))

advmod(have-4, Why-1)
aux(have-4, should-2)
nsubj(have-4, he-3)
root(ROOT-0, have-4)
det(say-6, no-5)
dobj(have-4, say-6)
det(child-9, a-8)
prep_in(say-6, child-9)
complm(have-13, that-10)
nsubj(have-13, he-11)
xsubj(bear-15, he-11)
aux(have-13, would-12)
ccomp(have-4, have-13)
aux(bear-15, to-14)
xcomp(have-13, bear-15)
amod(responsibility-17, legal-16)
dobj(bear-15, responsibility-17)
mark(born-22, if-19)
nsubjpass(born-22, it-20)
auxpass(born-22, were-21)
prepc_to(bear-15, born-22)

