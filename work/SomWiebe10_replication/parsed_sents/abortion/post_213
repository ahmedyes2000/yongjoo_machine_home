(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (JJ correct)
        (SBAR (IN that)
          (S
            (NP (NN prolife))
            (VP (VBZ means)
              (NP (DT all) (NN life)))))))
    (. .)))

nsubj(correct-3, You-1)
cop(correct-3, are-2)
root(ROOT-0, correct-3)
complm(means-6, that-4)
nsubj(means-6, prolife-5)
ccomp(correct-3, means-6)
det(life-8, all-7)
dobj(means-6, life-8)

(ROOT
  (S
    (NP
      (NP (NN HTe) (NNS ideologies))
      (PP (IN of)
        (NP (DT both) (JJ political) (NNS parties))))
    (VP (VBZ falls)
      (ADJP (RB woefully) (JJ short)
        (PP (IN in)
          (NP (NN comparison))))
      (PP (TO to)
        (NP
          (NP (DT the) (NN whole))
          (PP (IN of)
            (NP
              (ADJP (NNP Catholic) (JJ social))
              (NN justice) (NN teaching))))))
    (. .)))

nn(ideologies-2, HTe-1)
nsubj(falls-7, ideologies-2)
det(parties-6, both-4)
amod(parties-6, political-5)
prep_of(ideologies-2, parties-6)
root(ROOT-0, falls-7)
advmod(short-9, woefully-8)
acomp(falls-7, short-9)
prep_in(short-9, comparison-11)
det(whole-14, the-13)
prep_to(falls-7, whole-14)
amod(social-17, Catholic-16)
amod(teaching-19, social-17)
nn(teaching-19, justice-18)
prep_of(whole-14, teaching-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (NN inarguable))
        (, ,)
        (NP (JJ biological) (NN fact))))
    (. .)))

nsubj(inarguable-3, It-1)
cop(inarguable-3, is-2)
root(ROOT-0, inarguable-3)
amod(fact-6, biological-5)
appos(inarguable-3, fact-6)

(ROOT
  (S
    (NP
      (NP (DT The) (NN question))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ remains)
            (PP (IN before)
              (NP (PRP us)))
            (ADVP (RB then))))))
    (, ,)
    (VP (VBZ is)
      (SBARQ
        (WHADVP (WRB when))
        (SQ (VBZ does)
          (NP (PRP it))
          (VP (VB constitute)
            (NP
              (NP (DT a) (NN person))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD should)
                    (VP (VB have)
                      (NP (NN protection))
                      (PP (IN under)
                        (NP (DT the) (NN law))))))))))
        (. ?)))))

det(question-2, The-1)
nsubj(remains-4, question-2)
nsubj(is-9, question-2)
rcmod(question-2, remains-4)
prep_before(remains-4, us-6)
advmod(remains-4, then-7)
root(ROOT-0, is-9)
advmod(constitute-13, when-10)
aux(constitute-13, does-11)
nsubj(constitute-13, it-12)
dep(is-9, constitute-13)
det(person-15, a-14)
dobj(constitute-13, person-15)
nsubj(have-18, person-15)
aux(have-18, should-17)
rcmod(person-15, have-18)
dobj(have-18, protection-19)
det(law-22, the-21)
prep_under(have-18, law-22)

(ROOT
  (S
    (SBAR (IN IF)
      (S
        (NP (PRP you))
        (ADVP (RB broadly))
        (VP (VB interpret)
          (NP
            (NP (DT the) (NNS intentions))
            (PP (IN of)
              (NP
                (NP (PRP$ our) (NN nation) (POS 's))
                (VBG founding) (NNS fahters))))
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP they))
              (VP (VBD wrote)
                (NP (DT those) (NN opening) (NNS words))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN Declaration))
                    (PP (IN of)
                      (NP (NN Independence)))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN moment))
        (PP (IN of)
          (NP (NN conception)))))
    (. .)))

mark(interpret-4, IF-1)
nsubj(interpret-4, you-2)
advmod(interpret-4, broadly-3)
advcl(moment-28, interpret-4)
det(intentions-6, the-5)
dobj(interpret-4, intentions-6)
poss(nation-9, our-8)
poss(fahters-12, nation-9)
amod(fahters-12, founding-11)
prep_of(intentions-6, fahters-12)
advmod(wrote-15, when-13)
nsubj(wrote-15, they-14)
advcl(interpret-4, wrote-15)
det(words-18, those-16)
nn(words-18, opening-17)
dobj(wrote-15, words-18)
det(Declaration-21, the-20)
prep_to(wrote-15, Declaration-21)
prep_of(Declaration-21, Independence-23)
nsubj(moment-28, it-25)
cop(moment-28, is-26)
det(moment-28, the-27)
root(ROOT-0, moment-28)
prep_of(moment-28, conception-30)

(ROOT
  (S
    (S
      (VP (VBN INdeed)
        (NP
          (NP (DT the) (NNP Church) (POS 's))
          (NNS teachings))
        (PP (IN on)
          (NP (JJ social) (NN justice)
            (CC and)
            (NN life) (NNS issues) (NNS hinges)))
        (PP (IN on)
          (NP (DT this) (NN point)))))
    (: :)
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (NP (PRP$ our) (NN humanity))
        (, ,) (RB not)
        (NP
          (NP (PRP$ our) (NN utility)
            (CC or)
            (NN sentience))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD should)
                (VP (VB determine)
                  (NP (NNS rights)
                    (CC and)
                    (NN protection))
                  (PP (IN under)
                    (NP (NN hte) (NN law))))))))))
    (. .)))

root(ROOT-0, INdeed-1)
det(Church-3, the-2)
poss(teachings-5, Church-3)
dobj(INdeed-1, teachings-5)
amod(justice-8, social-7)
prep_on(INdeed-1, justice-8)
nn(hinges-12, life-10)
nn(hinges-12, issues-11)
prep_on(INdeed-1, hinges-12)
conj_and(justice-8, hinges-12)
det(point-15, this-14)
prep_on(INdeed-1, point-15)
nsubj(humanity-20, It-17)
cop(humanity-20, is-18)
poss(humanity-20, our-19)
parataxis(INdeed-1, humanity-20)
neg(humanity-20, not-22)
poss(utility-24, our-23)
attr(humanity-20, utility-24)
nsubj(determine-30, utility-24)
attr(humanity-20, sentience-26)
conj_or(utility-24, sentience-26)
nsubj(determine-30, sentience-26)
aux(determine-30, should-29)
rcmod(utility-24, determine-30)
dobj(determine-30, rights-31)
dobj(determine-30, protection-33)
conj_and(rights-31, protection-33)
nn(law-36, hte-35)
prep_under(determine-30, law-36)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (VP (VBP do) (RB not)
          (VP (VB have)
            (NP (DT the) (NN right)
              (S
                (VP (TO to)
                  (VP (VB live)
                    (CC and)
                    (VB breathe)))))))))
    (, ,)
    (NP (JJ universal) (NN health) (NN care))
    (VP (VBZ is)
      (NP (DT an) (NN absurdity))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (PRP it))
          (VP (MD can) (RB not)
            (VP (VB be)
              (ADJP (JJ universal)))))))
    (. .)))

cc(absurdity-19, And-1)
mark(have-6, if-2)
nsubj(have-6, we-3)
aux(have-6, do-4)
neg(have-6, not-5)
advcl(absurdity-19, have-6)
det(right-8, the-7)
dobj(have-6, right-8)
aux(live-10, to-9)
infmod(right-8, live-10)
infmod(right-8, breathe-12)
conj_and(live-10, breathe-12)
amod(care-16, universal-14)
nn(care-16, health-15)
nsubj(absurdity-19, care-16)
cop(absurdity-19, is-17)
det(absurdity-19, an-18)
root(ROOT-0, absurdity-19)
mark(universal-26, for-21)
nsubj(universal-26, it-22)
aux(universal-26, can-23)
neg(universal-26, not-24)
cop(universal-26, be-25)
advcl(absurdity-19, universal-26)

(ROOT
  (S
    (NP
      (NP (DT The) (NN alleviation))
      (PP (IN of)
        (NP (NN poverty))))
    (VP (VBZ becomes)
      (ADJP (JJ moot))
      (, ,)
      (SBAR (IN for)
        (S
          (NP (DT those) (NN impoverished))
          (VP (MD can)
            (ADVP (RB simply))
            (VP (VB be)
              (VP
                (VP (VBN disposed)
                  (PP (IN of)))
                (CONJP (RB rather) (IN than))
                (VP (VBN fed)
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN crack))
                      (PP (IN of)
                        (NP (DT a) (NN gavel))))))
                (PP (IN on)
                  (NP (DT a) (JJ judicial) (NN bench)))))))))
    (. .)))

det(alleviation-2, The-1)
nsubj(moot-6, alleviation-2)
prep_of(alleviation-2, poverty-4)
cop(moot-6, becomes-5)
root(ROOT-0, moot-6)
mark(disposed-14, for-8)
det(impoverished-10, those-9)
nsubj(disposed-14, impoverished-10)
nsubj(fed-18, impoverished-10)
aux(disposed-14, can-11)
advmod(disposed-14, simply-12)
aux(disposed-14, be-13)
advcl(moot-6, disposed-14)
prep(disposed-14, of-15)
advcl(moot-6, fed-18)
conj_negcc(disposed-14, fed-18)
det(crack-21, the-20)
prep_at(fed-18, crack-21)
det(gavel-24, a-23)
prep_of(crack-21, gavel-24)
det(bench-28, a-26)
amod(bench-28, judicial-27)
prep_on(disposed-14, bench-28)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS ideals))
      (PP (IN of)
        (NP
          (NP (JJ personal) (NN freedom))
          (, ,)
          (NP
            (NP (DT the)
              (ADJP (JJ right) (TO to) (JJ free))
              (NN speech))
            (CC and)
            (NP
              (NP (DT the) (NN practice))
              (PP (IN of)
                (NP (NN religion))))))))
    (VP (VBP become)
      (NP
        (NP (DT an) (NN farce))
        (, ,)
        (SBAR (IN for)
          (S
            (NP (EX there))
            (VP (VBP are)
              (NP
                (NP (DT those))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBP have) (RB not)
                      (VP (VBN been)
                        (VP (VBN allowed)
                          (S
                            (VP (TO to)
                              (VP (VB choose)))))))))))))))
    (. .)))

det(ideals-2, The-1)
nsubj(farce-19, ideals-2)
amod(freedom-5, personal-4)
prep_of(ideals-2, freedom-5)
det(speech-11, the-7)
amod(free-10, right-8)
dep(free-10, to-9)
amod(speech-11, free-10)
appos(freedom-5, speech-11)
det(practice-14, the-13)
appos(freedom-5, practice-14)
conj_and(speech-11, practice-14)
prep_of(practice-14, religion-16)
cop(farce-19, become-17)
det(farce-19, an-18)
root(ROOT-0, farce-19)
mark(are-23, for-21)
expl(are-23, there-22)
dep(farce-19, are-23)
nsubj(are-23, those-24)
nsubjpass(allowed-29, those-24)
aux(allowed-29, have-26)
neg(allowed-29, not-27)
auxpass(allowed-29, been-28)
rcmod(those-24, allowed-29)
aux(choose-31, to-30)
xcomp(allowed-29, choose-31)

(ROOT
  (S
    (NP (NNP Life))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ fundamental) (NN right))
        (SBAR
          (WHPP (IN from)
            (WHNP (WDT which)))
          (S
            (NP (PDT all)
              (NP (JJ other) (NNS freedoms))
              (CC and)
              (NP
                (NP (PRP$ our) (NN dignity))
                (PP (IN as)
                  (NP (JJ human) (NNS persons)))))
            (VP (VBZ flows))))))
    (. .)))

nsubj(right-5, Life-1)
cop(right-5, is-2)
det(right-5, the-3)
amod(right-5, fundamental-4)
root(ROOT-0, right-5)
rel(flows-17, which-7)
dep(freedoms-10, all-8)
amod(freedoms-10, other-9)
nsubj(flows-17, freedoms-10)
poss(dignity-13, our-12)
conj_and(freedoms-10, dignity-13)
nsubj(flows-17, dignity-13)
amod(persons-16, human-15)
prep_as(dignity-13, persons-16)
rcmod(right-5, flows-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBP do) (RB not)
          (VP (VB take)
            (S
              (NP (NNS steps))
              (VP (TO to)
                (VP
                  (ADVP (RB universally))
                  (VB guarantee)
                  (NP (PRP it)))))))))
    (, ,)
    (X
      (ADVP (RB then))
      (NP (DT the) (JJ only) (NN freedom)))
    (NP (PRP we))
    (VP (VBP have)
      (VP (VBZ is)
        (NP (JJ pure) (NN fantasy))))
    (. .)))

mark(take-5, If-1)
nsubj(take-5, we-2)
aux(take-5, do-3)
neg(take-5, not-4)
advcl(fantasy-20, take-5)
nsubj(guarantee-9, steps-6)
aux(guarantee-9, to-7)
advmod(guarantee-9, universally-8)
xcomp(take-5, guarantee-9)
dobj(guarantee-9, it-10)
dep(freedom-15, then-12)
det(freedom-15, the-13)
amod(freedom-15, only-14)
dep(fantasy-20, freedom-15)
nsubj(fantasy-20, we-16)
aux(fantasy-20, have-17)
cop(fantasy-20, is-18)
amod(fantasy-20, pure-19)
root(ROOT-0, fantasy-20)

(ROOT
  (S
    (ADVP (RB Therfore))
    (, ,)
    (NP
      (NP (DT the) (NN protection))
      (PP (IN of)
        (NP
          (NP (DT the) (NN right))
          (PP (TO to)
            (NP (NN life))))))
    (VP (MD must)
      (VP (VB take)
        (NP (NN precedence))
        (PP (IN over)
          (NP
            (NP (DT all) (JJ other) (NNS issues))
            (PP (IN in)
              (NP
                (ADJP (NNP Catholic) (JJ social))
                (NN justice) (NN teaching)))))
        (, ,)
        (SBAR (IN for)
          (S
            (PP (IN without)
              (NP (PRP it)))
            (, ,)
            (NP (DT all))
            (ADVP (RB else))
            (VP (VBZ is)
              (ADJP (JJ meaningless)))))))
    (. .)))

advmod(take-11, Therfore-1)
det(protection-4, the-3)
nsubj(take-11, protection-4)
det(right-7, the-6)
prep_of(protection-4, right-7)
prep_to(right-7, life-9)
aux(take-11, must-10)
root(ROOT-0, take-11)
dobj(take-11, precedence-12)
det(issues-16, all-14)
amod(issues-16, other-15)
prep_over(take-11, issues-16)
amod(social-19, Catholic-18)
amod(teaching-21, social-19)
nn(teaching-21, justice-20)
prep_in(issues-16, teaching-21)
mark(meaningless-30, for-23)
prep_without(meaningless-30, it-25)
nsubj(meaningless-30, all-27)
advmod(meaningless-30, else-28)
cop(meaningless-30, is-29)
advcl(take-11, meaningless-30)

(ROOT
  (S (CC And)
    (SBAR (IN while)
      (S
        (NP (PDT all) (DT these) (NNS issues))
        (VP (VBP are)
          (UCP
            (PP (IN of)
              (NP
                (NP (JJ great) (NN importance))
                (, ,)
                (NP (DT the) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB live)
                        (SBAR
                          (S
                            (VP (VBZ is)
                              (NP
                                (NP (DT the)
                                  (ADJP (JJ abosolute)
                                    (CC and)
                                    (JJ fundamental))
                                  (NN foundation))
                                (PP (IN of)
                                  (NP (DT all)
                                    (ADJP (NNP Catholic) (JJ socail))
                                    (NN justice) (NN teaching)))))))))))))
            (, ,)
            (CC and)
            (SBAR (IN as)
              (FRAG
                (PP (JJ such))))))))
    (, ,)
    (VP (MD must)
      (VP (VB take)
        (NP (NN precedence))
        (PP (IN over)
          (NP (JJ other) (NNS concerns)))))
    (. .)))

cc(take-33, And-1)
mark(are-6, while-2)
predet(issues-5, all-3)
det(issues-5, these-4)
nsubj(are-6, issues-5)
dep(take-33, are-6)
dep(are-6, of-7)
amod(importance-9, great-8)
pobj(of-7, importance-9)
det(right-12, the-11)
appos(importance-9, right-12)
aux(live-14, to-13)
infmod(right-12, live-14)
cop(foundation-20, is-15)
det(foundation-20, the-16)
amod(foundation-20, abosolute-17)
conj_and(abosolute-17, fundamental-19)
amod(foundation-20, fundamental-19)
ccomp(live-14, foundation-20)
det(teaching-26, all-22)
amod(socail-24, Catholic-23)
amod(teaching-26, socail-24)
nn(teaching-26, justice-25)
prep_of(foundation-20, teaching-26)
mark(such-30, as-29)
dep(are-6, such-30)
conj_and(of-7, such-30)
aux(take-33, must-32)
root(ROOT-0, take-33)
dobj(take-33, precedence-34)
amod(concerns-37, other-36)
prep_over(take-33, concerns-37)

(ROOT
  (S
    (NP
      (NP (DT The) (NN crux))
      (PP (IN of)
        (NP (NNP Roe)
          (CC v.)
          (NNP Wade))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ denies)
            (ADJP (JJ personhood)
              (PP (TO to)
                (NP (DT the) (JJ unborn) (NN child))))))))
    (. .)))

det(crux-2, The-1)
nsubj(is-7, crux-2)
prep_of(crux-2, Roe-4)
prep_of(crux-2, Wade-6)
conj_v.(Roe-4, Wade-6)
root(ROOT-0, is-7)
complm(denies-10, that-8)
nsubj(denies-10, it-9)
ccomp(is-7, denies-10)
acomp(denies-10, personhood-11)
det(child-15, the-13)
amod(child-15, unborn-14)
prep_to(personhood-11, child-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP (VB argue)
        (NP
          (NP (DT this) (NN way))
          (CC and)
          (NP (DT that) (NN way)))
        (PP (IN about)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (`` ``) (NN life) ('' ''))
              (VP (VBZ begins)))))))
    (. .)))

nsubj(argue-3, We-1)
aux(argue-3, can-2)
root(ROOT-0, argue-3)
det(way-5, this-4)
dobj(argue-3, way-5)
det(way-8, that-7)
dobj(argue-3, way-8)
conj_and(way-5, way-8)
advmod(begins-14, when-10)
nsubj(begins-14, life-12)
prepc_about(argue-3, begins-14)

(ROOT
  (S
    (S (CC But)
      (NP (DT the) (NN truth))
      (VP (VBZ is) (, ,)
        (ADVP (RB regardless)
          (PP (IN of)
            (NP (NN faith)
              (CC or)
              (NN anything))))
        (ADJP (RB else))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP (JJ scientific) (NN fact))
      (SBAR (IN that)
        (S
          (NP (NN life))
          (VP (VBZ begins)
            (PP (IN at)
              (NP (NN conception)))))))
    (. .)))

cc(else-11, But-1)
det(truth-3, the-2)
nsubj(else-11, truth-3)
cop(else-11, is-4)
prep_regardless_of(else-11, faith-8)
conj_or(faith-8, anything-10)
prep_regardless_of(else-11, anything-10)
ccomp(fact-16, else-11)
nsubj(fact-16, it-13)
cop(fact-16, is-14)
amod(fact-16, scientific-15)
root(ROOT-0, fact-16)
complm(begins-19, that-17)
nsubj(begins-19, life-18)
ccomp(fact-16, begins-19)
prep_at(begins-19, conception-21)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can)
      (VP (VB have)
        (NP (JJ theological) (NNS debates))
        (PP (IN about)
          (SBAR
            (WHADVP (WRB how)
              (CC and)
              (WRB when))
            (S
              (NP (DT a) (NN soul))
              (VP (VBZ enters)
                (NP (DT the) (NN body))))))
        (, ,)
        (SBAR (IN whether)
          (S
            (NP (PRP we))
            (VP (VBP have)
              (NP (DT a) (NN soul))
              (PP (IN at)
                (NP
                  (NP (DT all))
                  (, ,)
                  (NP (FW etc.)))))))))
    (. .)))

nsubj(have-3, We-1)
aux(have-3, can-2)
root(ROOT-0, have-3)
amod(debates-5, theological-4)
dobj(have-3, debates-5)
advmod(enters-12, how-7)
dep(how-7, and-8)
dep(how-7, when-9)
det(soul-11, a-10)
nsubj(enters-12, soul-11)
prepc_about(have-3, enters-12)
det(body-14, the-13)
dobj(enters-12, body-14)
complm(have-18, whether-16)
nsubj(have-18, we-17)
ccomp(have-3, have-18)
det(soul-20, a-19)
dobj(have-18, soul-20)
prep_at(have-18, all-22)
appos(all-22, etc.-24)

(ROOT
  (S (CC But)
    (NP (PRP we))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (DT all) (JJ human) (NNS beings))
          (VP (VBP begin)
            (PP (IN as)
              (NP (DT a) (JJ single) (JJ complete) (NN cell)))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (NN egg)
                  (CC and)
                  (NN sperm))
                (VP (VB unite)
                  (S
                    (VP (TO to)
                      (VP (VB form)
                        (NP (DT a)
                          (ADJP (JJ new)
                            (CC and)
                            (JJ unique))
                          (JJ human) (NN DNA) (NN chain))))))))))))
    (. .)))

cc(know-3, But-1)
nsubj(know-3, we-2)
root(ROOT-0, know-3)
complm(begin-8, that-4)
det(beings-7, all-5)
amod(beings-7, human-6)
nsubj(begin-8, beings-7)
ccomp(know-3, begin-8)
det(cell-13, a-10)
amod(cell-13, single-11)
amod(cell-13, complete-12)
prep_as(begin-8, cell-13)
advmod(unite-18, when-14)
nsubj(unite-18, egg-15)
xsubj(form-20, egg-15)
conj_and(egg-15, sperm-17)
nsubj(unite-18, sperm-17)
xsubj(form-20, sperm-17)
advcl(begin-8, unite-18)
aux(form-20, to-19)
xcomp(unite-18, form-20)
det(chain-27, a-21)
amod(chain-27, new-22)
conj_and(new-22, unique-24)
amod(chain-27, unique-24)
amod(chain-27, human-25)
nn(chain-27, DNA-26)
dobj(form-20, chain-27)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP know)
      (SBAR (IN that)
        (S
          (NP (DT this) (NN cell))
          (VP (VBZ is)
            (ADJP (JJ alive))))))
    (. .)))

nsubj(know-2, We-1)
root(ROOT-0, know-2)
complm(alive-7, that-3)
det(cell-5, this-4)
nsubj(alive-7, cell-5)
cop(alive-7, is-6)
ccomp(know-2, alive-7)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ takes)
        (PP (IN in)
          (NP
            (NP (NNS nutrients)
              (CC and)
              (NNS disposes))
            (PP (IN of)
              (NP (JJ biological) (NN waste)))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP it))
      (ADVP (RB immediately))
      (VP (VBZ sets)
        (PP (IN about)
          (S
            (VP (VBG reproducing)
              (NP (PRP itself))
              (PP (IN in)
                (NP (DT an) (NN attempt)
                  (S
                    (VP (TO to)
                      (VP (VB form)
                        (NP
                          (NP (DT the) (JJ human) (NN person))
                          (SBAR
                            (S
                              (NP (PRP$ its) (JJ genetic) (NN instruction))
                              (VP (VBZ tells)
                                (S
                                  (NP (PRP it))
                                  (VP (TO to)
                                    (VP (VB become))))))))))))))))))
    (. .)))

nsubj(takes-2, It-1)
root(ROOT-0, takes-2)
prep_in(takes-2, nutrients-4)
prep_in(takes-2, disposes-6)
conj_and(nutrients-4, disposes-6)
amod(waste-9, biological-8)
prep_of(nutrients-4, waste-9)
nsubj(sets-14, it-12)
advmod(sets-14, immediately-13)
conj_and(takes-2, sets-14)
prepc_about(sets-14, reproducing-16)
dobj(reproducing-16, itself-17)
det(attempt-20, an-19)
prep_in(reproducing-16, attempt-20)
aux(form-22, to-21)
infmod(attempt-20, form-22)
det(person-25, the-23)
amod(person-25, human-24)
dobj(form-22, person-25)
dobj(tells-29, person-25)
poss(instruction-28, its-26)
amod(instruction-28, genetic-27)
nsubj(tells-29, instruction-28)
rcmod(person-25, tells-29)
nsubj(become-32, it-30)
aux(become-32, to-31)
xcomp(tells-29, become-32)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN beginning))
        (PP (IN of)
          (NP (JJ human) (NN life)))))
    (. .)))

nsubj(beginning-4, This-1)
cop(beginning-4, is-2)
det(beginning-4, the-3)
root(ROOT-0, beginning-4)
amod(life-7, human-6)
prep_of(beginning-4, life-7)

