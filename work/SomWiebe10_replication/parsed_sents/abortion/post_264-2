(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (NP
            (NP (DT a) (NN choice))
            (PP (IN between)
              (NP
                (NP (NN abortion))
                (, ,)
                (CC and)
                (NP (DT both) (NNS people) (NN dieing))
                (, ,) (FW i)))))))
    (NP (NN dont))
    (VP (VBP have)
      (NP
        (NP (DT a) (NN problem))
        (PP (IN with)
          (NP (DT that)))))
    (. .)))

mark(choice-5, if-1)
nsubj(choice-5, it-2)
cop(choice-5, 's-3)
det(choice-5, a-4)
advcl(have-16, choice-5)
prep_between(choice-5, abortion-7)
det(dieing-12, both-10)
nn(dieing-12, people-11)
prep_between(choice-5, dieing-12)
conj_and(abortion-7, dieing-12)
nn(abortion-7, dieing-12)
dep(abortion-7, i-14)
nsubj(have-16, dont-15)
root(ROOT-0, have-16)
det(problem-18, a-17)
dobj(have-16, problem-18)
prep_with(problem-18, that-20)

(ROOT
  (S
    (NP
      (NP (PRP$ my) (JJ main) (NN problem))
      (PP (IN with)
        (NP (PRP it))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN man))
          (VP (VBZ has)
            (NP
              (NP
                (ADJP (RB absolutly) (DT no))
                (NN say))
              (PP (IN in)
                (NP (DT this))))))))
    (. .)))

poss(problem-3, my-1)
amod(problem-3, main-2)
nsubj(is-6, problem-3)
prep_with(problem-3, it-5)
root(ROOT-0, is-6)
complm(has-10, that-7)
det(man-9, the-8)
nsubj(has-10, man-9)
ccomp(is-6, has-10)
advmod(no-12, absolutly-11)
amod(say-13, no-12)
dobj(has-10, say-13)
prep_in(say-13, this-15)

