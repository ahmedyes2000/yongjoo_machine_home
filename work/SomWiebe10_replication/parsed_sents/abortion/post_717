(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ looks)
      (SBAR (IN like)
        (S
          (NP (PRP we))
          (VP (VBP agree)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NN emotion))
                  (PP (IN of)
                    (NP (DT the) (NN mother))))
                (VP (VBZ does) (RB not)
                  (VP (VB change)
                    (SBAR (IN whether)
                      (S
                        (NP
                          (NP (DT the) (NN act))
                          (PP (IN of)
                            (NP (NN abortion))))
                        (VP (VBZ is)
                          (ADJP (JJ right)
                            (CC or)
                            (JJ wrong)))))))))))))
    (. .)))

nsubj(looks-2, It-1)
root(ROOT-0, looks-2)
mark(agree-5, like-3)
nsubj(agree-5, we-4)
advcl(looks-2, agree-5)
complm(change-14, that-6)
det(emotion-8, the-7)
nsubj(change-14, emotion-8)
det(mother-11, the-10)
prep_of(emotion-8, mother-11)
aux(change-14, does-12)
neg(change-14, not-13)
ccomp(agree-5, change-14)
complm(right-21, whether-15)
det(act-17, the-16)
nsubj(right-21, act-17)
nsubj(wrong-23, act-17)
prep_of(act-17, abortion-19)
cop(right-21, is-20)
ccomp(change-14, right-21)
ccomp(change-14, wrong-23)
conj_or(right-21, wrong-23)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (SBAR (RB just)
      (S
        (VP (TO to)
          (VP (VB clarify)))))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (NP (PRP I))
        (VP (VBD said)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT a) (NN mother) (POS 's))
                (NN grief))
              (VP (VBZ is)
                (ADJP (JJ illogical))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD should)
      (VP (VB have)
        (VP
          (VP (VBN said)
            (SBAR (IN that)
              (S
                (NP (PRP it))
                (VP (VBZ is)
                  (PP (IN without)
                    (NP (NN logic)))))))
          (PRN (, ,)
            (INTJ (DT that) (VBZ is))
            (, ,))
          (PP (VBN based)
            (PP (IN on)
              (NP (NN emotion)))))))
    (. .)))

advmod(said-21, Also-1)
advmod(clarify-5, just-3)
aux(clarify-5, to-4)
dep(said-21, clarify-5)
advmod(said-9, when-7)
nsubj(said-9, I-8)
advcl(said-21, said-9)
complm(illogical-16, that-10)
det(mother-12, a-11)
poss(grief-14, mother-12)
nsubj(illogical-16, grief-14)
cop(illogical-16, is-15)
ccomp(said-9, illogical-16)
nsubj(said-21, I-18)
aux(said-21, should-19)
aux(said-21, have-20)
root(ROOT-0, said-21)
complm(is-24, that-22)
nsubj(is-24, it-23)
ccomp(said-21, is-24)
prep_without(is-24, logic-26)
dep(said-21, that-28)
dep(that-28, is-29)
prepc_based_on(said-21, on-32)
pobj(said-21, emotion-33)

(ROOT
  (S
    (NP (DT A) (NN fetus))
    (VP
      (VP (VBZ has)
        (NP
          (NP (DT no) (NN conception))
          (PP (IN of)
            (NP
              (NP (DT any))
              (PP (IN of)
                (NP (DT this)))))))
      (, ,)
      (VP (VBZ does) (RB not)
        (VP (VB think)))
      (, ,)
      (CC and)
      (VP (MD can) (RB not)
        (VP (VB make)
          (NP (DT any) (NNS decisions)))))
    (. .)))

det(fetus-2, A-1)
nsubj(has-3, fetus-2)
nsubj(think-13, fetus-2)
nsubj(make-18, fetus-2)
root(ROOT-0, has-3)
det(conception-5, no-4)
dobj(has-3, conception-5)
prep_of(conception-5, any-7)
prep_of(any-7, this-9)
aux(think-13, does-11)
neg(think-13, not-12)
conj_and(has-3, think-13)
aux(make-18, can-16)
neg(make-18, not-17)
conj_and(has-3, make-18)
det(decisions-20, any-19)
dobj(make-18, decisions-20)

(ROOT
  (S
    (NP
      (NP (DT An) (JJ additional) (NN reason))
      (SBAR
        (S
          (NP (PRP I))
          (VP (MD would)
            (VP (VB say)
              (NP (DT a) (JJ live) (NN person)))))))
    (VP (VBZ has)
      (NP
        (NP (JJR more) (NN value))
        (SBAR
          (S
            (VP (VBZ is)
              (SBAR (IN that)
                (S
                  (NP (PRP they))
                  (VP (VBP have)
                    (VP (VBN accumulated)
                      (NP (NN experience))
                      (PP (IN in)
                        (NP
                          (NP (PRP$ their) (NN life))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBZ has)
                                (NP
                                  (NP (NN value))
                                  (PP (IN in)
                                    (NP
                                      (NP (JJ many) (NNS ways))
                                      (, ,)
                                      (UCP (DT both)
                                        (ADVP (RB personally))
                                        (CC and)
                                        (PP (TO to)
                                          (NP (JJ other) (NNS people))))))))))
                          (PRN (-LRB- -LRB-)
                            (NP
                              (NP (NNS friends))
                              (, ,)
                              (NP
                                (NP (NN product))
                                (PP (IN of)
                                  (NP
                                    (NP (PRP$ their) (NN work))
                                    (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-)))))
                              (, ,)
                              (NP (FW etc)))
                            (-RRB- -RRB-)))))))))))))
    (. .)))

det(reason-3, An-1)
amod(reason-3, additional-2)
nsubj(has-10, reason-3)
nsubj(say-6, I-4)
aux(say-6, would-5)
rcmod(reason-3, say-6)
det(person-9, a-7)
amod(person-9, live-8)
dobj(say-6, person-9)
root(ROOT-0, has-10)
amod(value-12, more-11)
dobj(has-10, value-12)
rcmod(value-12, is-13)
complm(accumulated-17, that-14)
nsubj(accumulated-17, they-15)
aux(accumulated-17, have-16)
ccomp(is-13, accumulated-17)
dobj(accumulated-17, experience-18)
poss(life-21, their-20)
prep_in(accumulated-17, life-21)
nsubj(has-23, life-21)
rcmod(life-21, has-23)
dobj(has-23, value-24)
amod(ways-27, many-26)
prep_in(value-24, ways-27)
dep(ways-27, both-29)
dep(both-29, personally-30)
dep(ways-27, to-32)
conj_and(both-29, to-32)
amod(people-34, other-33)
pobj(to-32, people-34)
dep(life-21, friends-36)
appos(friends-36, product-38)
poss(work-41, their-40)
prep_of(product-38, work-41)
dep(work-41, s-43)
appos(friends-36, etc-46)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (VP (VB say)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (NN person))
              (PP (IN with)
                (NP
                  (NP (JJ advanced) (NNP Alzheimer) (POS 's))
                  (NNP Disease))))
            (VP (VBZ has)
              (NP
                (NP (JJR less) (NN value))
                (PP (IN than)
                  (NP (NN someone)))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ does) (RB not)
                      (VP (VB have)
                        (NP (DT the) (NN disease)))))))
              (, ,)
              (ADVP (RB all) (RB else)
                (S
                  (VP (VBG being)
                    (ADJP (JJ equal))))))))))
    (. .)))

nsubj(say-3, I-1)
aux(say-3, would-2)
root(ROOT-0, say-3)
complm(has-12, that-4)
det(person-6, a-5)
nsubj(has-12, person-6)
amod(Alzheimer-9, advanced-8)
poss(Disease-11, Alzheimer-9)
prep_with(person-6, Disease-11)
ccomp(say-3, has-12)
amod(value-14, less-13)
dobj(has-12, value-14)
nsubj(have-20, value-14)
prep_than(value-14, someone-16)
aux(have-20, does-18)
neg(have-20, not-19)
rcmod(value-14, have-20)
det(disease-22, the-21)
dobj(have-20, disease-22)
advmod(else-25, all-24)
advmod(has-12, else-25)
cop(equal-27, being-26)
dep(else-25, equal-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB believe)
        (SBAR (IN that)
          (S
            (VP (VBZ makes)
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (VBP ok)
                    (S
                      (VP (TO to)
                        (VP (VB kill)
                          (NP (DT that) (NN person)))))))))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, not-3)
root(ROOT-0, believe-4)
complm(makes-6, that-5)
ccomp(believe-4, makes-6)
nsubj(ok-8, it-7)
xsubj(kill-10, it-7)
ccomp(makes-6, ok-8)
aux(kill-10, to-9)
xcomp(ok-8, kill-10)
det(person-12, that-11)
dobj(kill-10, person-12)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB impact)
        (NP
          (NP (DT a) (NN decision))
          (PP (JJ such) (IN as)
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ 's)
                  (NP
                    (NP (NN life))
                    (SBAR
                      (S
                        (NP (PRP I))
                        (VP (MD would)
                          (VP (VB save)
                            (SBAR (IN if)
                              (S
                                (NP (PRP I))
                                (VP (VBD had)
                                  (S
                                    (VP (TO to)
                                      (VP (VB make)
                                        (NP (DT a) (NN choice))))))))))))))))))))
    (. .)))

nsubj(impact-3, It-1)
aux(impact-3, would-2)
root(ROOT-0, impact-3)
det(decision-5, a-4)
dobj(impact-3, decision-5)
nsubj(life-10, who-8)
cop(life-10, 's-9)
prepc_such_as(decision-5, life-10)
dobj(save-13, life-10)
nsubj(save-13, I-11)
aux(save-13, would-12)
rcmod(life-10, save-13)
mark(had-16, if-14)
nsubj(had-16, I-15)
xsubj(make-18, I-15)
advcl(save-13, had-16)
aux(make-18, to-17)
xcomp(had-16, make-18)
det(choice-20, a-19)
dobj(make-18, choice-20)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB also))
    (VP (VBP think)
      (S
        (NP (DT these) (NNS terms))
        (VP (VB extend)
          (PP (TO to)
            (NP (NNS animals))))))
    (. .)))

nsubj(think-3, I-1)
advmod(think-3, also-2)
root(ROOT-0, think-3)
det(terms-5, these-4)
nsubj(extend-6, terms-5)
ccomp(think-3, extend-6)
prep_to(extend-6, animals-8)

(ROOT
  (S
    (ADVP (RB Essentially))
    (, ,)
    (NP (PRP I))
    (VP (VBP value)
      (NP
        (NP
          (NP (DT an) (NN entity) (POS 's))
          (NN combination))
        (PP (IN of)
          (NP
            (NP (NNS types)
              (CC and)
              (NNS amounts))
            (PP (IN of)
              (NP (JJ cognitive) (NNS abilities)))
            (ADVP (IN along)
              (PP (IN with)
                (NP
                  (NP (NN experience))
                  (, ,)
                  (NP (NN potential))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (DT the) (NN value) (NNS others) (NN place))
                    (PP (IN on)
                      (NP (DT that) (NN entity)))))))))))
    (. .)))

advmod(value-4, Essentially-1)
nsubj(value-4, I-3)
root(ROOT-0, value-4)
det(entity-6, an-5)
poss(combination-8, entity-6)
dobj(value-4, combination-8)
prep_of(combination-8, types-10)
prep_of(combination-8, amounts-12)
conj_and(types-10, amounts-12)
amod(abilities-15, cognitive-14)
prep_of(types-10, abilities-15)
prep_along_with(types-10, experience-18)
prep_along_with(types-10, potential-20)
conj_and(experience-18, potential-20)
det(place-26, the-23)
nn(place-26, value-24)
nn(place-26, others-25)
prep_along_with(types-10, place-26)
conj_and(experience-18, place-26)
det(entity-29, that-28)
prep_on(place-26, entity-29)

(ROOT
  (S
    (ADVP (IN So)
      (PP (TO to)
        (NP (PRP me))))
    (, ,)
    (NP (DT an) (JJ unborn) (NN child))
    (VP (VBZ has)
      (NP
        (NP (DT no) (NN value))
        (PP (JJ other) (IN than)
          (SBAR (IN that)
            (S
              (NP (DT the) (NNS parents))
              (VP (VB place)
                (PP (IN on)
                  (NP (PRP it)))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (JJ first))
                    (VP (VBD conceived))))
                (, ,)
                (PP (RB up)
                  (PP (TO to)
                    (NP (DT some) (NN amount)))
                  (CC less)
                  (PP (IN than)
                    (NP
                      (NP
                        (NP (DT the) (NN value))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN mother))
                            (ADVP (RB up)
                              (PP (TO to))))))
                      (CC and)
                      (NP (RB even) (JJ past) (NN birth)))))))))))
    (. .)))

advmod(has-8, So-1)
prep_to(So-1, me-3)
det(child-7, an-5)
amod(child-7, unborn-6)
nsubj(has-8, child-7)
root(ROOT-0, has-8)
det(value-10, no-9)
dobj(has-8, value-10)
dep(value-10, other-11)
complm(place-16, that-13)
det(parents-15, the-14)
nsubj(place-16, parents-15)
nsubj(place-16', parents-15)
prepc_than(value-10, place-16)
prepc_than(value-10, place-16')
conj_less(place-16, place-16')
prep_on(place-16, it-18)
advmod(conceived-21, when-19)
nsubj(conceived-21, first-20)
advcl(place-16, conceived-21)
advmod(place-16, up-23)
det(amount-26, some-25)
prep_to(place-16, amount-26)
det(value-30, the-29)
prep_than(place-16', value-30)
det(mother-33, the-32)
prep_of(value-30, mother-33)
advmod(mother-33, up-34)
prep(up-34, to-35)
advmod(birth-39, even-37)
amod(birth-39, past-38)
prep_than(place-16', birth-39)
conj_and(value-30, birth-39)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP welcome)
      (NP
        (NP
          (NP (NNS questions))
          (SBAR
            (WHPP (IN about)
              (WHNP (WP what)))
            (S
              (NP (PRP I))
              (VP (VBP 've)
                (VP (VBN laid)
                  (PRT (RP out)))))))
        (CONJP (RB as) (RB well) (IN as))
        (NP (NNS challenges))))
    (. .)))

nsubj(welcome-2, I-1)
root(ROOT-0, welcome-2)
dobj(welcome-2, questions-3)
rel(laid-8, what-5)
nsubj(laid-8, I-6)
aux(laid-8, 've-7)
rcmod(questions-3, laid-8)
prt(laid-8, out-9)
dobj(welcome-2, challenges-13)
conj_and(questions-3, challenges-13)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD may)
        (VP (VB be)
          (NP
            (NP (NNS cases))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT the) (NN mother))
                (VP (VBZ considers)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (MD might)
                        (VP (VB have)
                          (VP (VBN come)
                            (PP (IN of)
                              (NP (DT the) (NN child)))))))))))))))
    (, ,)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBP 're)
            (VP (VBG talking)
              (PP (IN about)
                (NP (DT a) (NN situation)))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (DT the) (NN mother))
                  (VP (VBZ believes)
                    (SBAR
                      (S
                        (NP (PRP she))
                        (VP
                          (VP (VBD made)
                            (NP (DT the) (JJ appropriate) (NN decision)))
                          (CC but)
                          (VP
                            (ADVP (RB still))
                            (VBZ feels)
                            (ADJP (JJ grief)))))))))))))
      (, ,)
      (NP (PRP I))
      (VP (MD would)
        (VP (VB venture)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (JJS most))
                      (PP (IN of)
                        (NP (DT the) (NN grief))))
                    (VP (VBZ does) (RB not)
                      (VP (VB stem)
                        (PP (IN from)
                          (NP (DT a) (JJ logical) (NN place)))))))))))))
    (. .)))

expl(cases-4, There-1)
aux(cases-4, may-2)
cop(cases-4, be-3)
root(ROOT-0, cases-4)
advmod(considers-8, where-5)
det(mother-7, the-6)
nsubj(considers-8, mother-7)
rcmod(cases-4, considers-8)
nsubj(come-12, what-9)
aux(come-12, might-10)
aux(come-12, have-11)
ccomp(considers-8, come-12)
det(child-15, the-14)
prep_of(come-12, child-15)
advmod(talking-21, when-18)
nsubj(talking-21, we-19)
aux(talking-21, 're-20)
advcl(venture-41, talking-21)
det(situation-24, a-23)
prep_about(talking-21, situation-24)
advmod(believes-28, where-25)
det(mother-27, the-26)
nsubj(believes-28, mother-27)
advcl(talking-21, believes-28)
nsubj(made-30, she-29)
nsubj(feels-36, she-29)
ccomp(believes-28, made-30)
det(decision-33, the-31)
amod(decision-33, appropriate-32)
dobj(made-30, decision-33)
advmod(feels-36, still-35)
ccomp(believes-28, feels-36)
conj_but(made-30, feels-36)
acomp(feels-36, grief-37)
nsubj(venture-41, I-39)
xsubj(say-43, I-39)
aux(venture-41, would-40)
conj_but(cases-4, venture-41)
aux(say-43, to-42)
xcomp(venture-41, say-43)
complm(stem-51, that-44)
nsubj(stem-51, most-45)
det(grief-48, the-47)
prep_of(most-45, grief-48)
aux(stem-51, does-49)
neg(stem-51, not-50)
ccomp(say-43, stem-51)
det(place-55, a-53)
amod(place-55, logical-54)
prep_from(stem-51, place-55)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD might)
        (VP (VB be)
          (VP (VBG making)
            (S
              (NP (DT this))
              (ADJP (RBR more) (JJ confusing)))))))
    (, ,)
    (CC but)
    (S
      (S
        (ADVP (RB perhaps))
        (NP (PRP it))
        (VP (VBZ is)
          (ADJP (JJR clearer))
          (S
            (VP (TO to)
              (VP
                (ADVP (RB simply))
                (VB say)
                (SBAR (IN that)
                  (S
                    (NP (NN someone))
                    (VP (MD can)
                      (VP (VB grieve)
                        (ADVP (CC both)
                          (RB logically)
                          (CC and)
                          (RB emotionally))
                        (PP (IN at)
                          (NP (DT the) (JJ same) (NN time))))))))))))
      (, ,)
      (CC and)
      (S
        (NP (DT the) (NN emotion))
        (VP (MD may)
          (VP (VB result)
            (PP (IN from)
              (NP
                (ADJP (JJ logical)
                  (CC and)
                  (JJ illogical))
                (NNS bases)))))))
    (. .)))

nsubj(making-4, I-1)
aux(making-4, might-2)
aux(making-4, be-3)
root(ROOT-0, making-4)
nsubj(confusing-7, this-5)
advmod(confusing-7, more-6)
xcomp(making-4, confusing-7)
advmod(clearer-13, perhaps-10)
nsubj(clearer-13, it-11)
xsubj(say-16, it-11)
cop(clearer-13, is-12)
conj_but(making-4, clearer-13)
aux(say-16, to-14)
advmod(say-16, simply-15)
xcomp(clearer-13, say-16)
complm(grieve-20, that-17)
nsubj(grieve-20, someone-18)
aux(grieve-20, can-19)
ccomp(say-16, grieve-20)
preconj(logically-22, both-21)
advmod(grieve-20, logically-22)
advmod(grieve-20, emotionally-24)
conj_and(logically-22, emotionally-24)
det(time-28, the-26)
amod(time-28, same-27)
prep_at(grieve-20, time-28)
det(emotion-32, the-31)
nsubj(result-34, emotion-32)
aux(result-34, may-33)
conj_but(making-4, result-34)
conj_and(clearer-13, result-34)
amod(bases-39, logical-36)
conj_and(logical-36, illogical-38)
amod(bases-39, illogical-38)
prep_from(result-34, bases-39)

(ROOT
  (S
    (ADVP (RB Now))
    (PP (IN on)
      (PP (TO to)
        (NP (DT the) (JJ other) (JJ interesting) (NNS points))))
    (NP (PRP you))
    (VP (VBP bring)
      (PRT (RP up)))
    (. .)))

advmod(bring-9, Now-1)
prep(bring-9, on-2)
pcomp(on-2, to-3)
det(points-7, the-4)
amod(points-7, other-5)
amod(points-7, interesting-6)
prep_to(on-2, points-7)
nsubj(bring-9, you-8)
root(ROOT-0, bring-9)
prt(bring-9, up-10)

(ROOT
  (S
    (NP (DT The) (JJ first))
    (VP (VBZ is)
      (NP (NN sleep)))
    (. .)))

det(first-2, The-1)
nsubj(sleep-4, first-2)
cop(sleep-4, is-3)
root(ROOT-0, sleep-4)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADVP (RB indeed))
      (NP
        (NP (DT the) (NN sort))
        (PP (IN of)
          (NP (NN discussion)))
        (SBAR
          (S
            (NP (PRP I))
            (VP (VBP think)
              (SBAR
                (S
                  (NP (PRP we))
                  (ADVP (DT all))
                  (VP (MD should)
                    (VP (VB be)
                      (ADJP (JJ having)))))))))))
    (. .)))

nsubj(sort-5, This-1)
cop(sort-5, is-2)
advmod(sort-5, indeed-3)
det(sort-5, the-4)
root(ROOT-0, sort-5)
prep_of(sort-5, discussion-7)
nsubj(think-9, I-8)
rcmod(sort-5, think-9)
nsubj(having-14, we-10)
advmod(having-14, all-11)
aux(having-14, should-12)
cop(having-14, be-13)
ccomp(think-9, having-14)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ wrong)
              (S
                (VP (TO to)
                  (VP (VB kill)
                    (NP
                      (NP (NN someone))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBZ is)
                            (ADJP (RB asleep))))))))))))
        (, ,)
        (CC and)
        (S
          (NP
            (NP (PRP$ our) (NN value))
            (PP (IN of)
              (NP (DT a) (NN person))))
          (VP (VBZ is) (RB not)
            (VP (VBN based)
              (PP (IN on)
                (NP (NN potential))))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ (VBZ is)
      (NP (PRP it))
      (ADJP (JJ wrong)))
    (. .)))

mark(wrong-4, If-1)
nsubj(wrong-4, it-2)
cop(wrong-4, is-3)
advcl(wrong-27, wrong-4)
aux(kill-6, to-5)
xcomp(wrong-4, kill-6)
dobj(kill-6, someone-7)
nsubj(asleep-10, someone-7)
cop(asleep-10, is-9)
rcmod(someone-7, asleep-10)
poss(value-14, our-13)
nsubjpass(based-20, value-14)
det(person-17, a-16)
prep_of(value-14, person-17)
auxpass(based-20, is-18)
neg(based-20, not-19)
conj_and(wrong-4, based-20)
advcl(wrong-27, based-20)
prep_on(based-20, potential-22)
advmod(wrong-27, why-24)
cop(wrong-27, is-25)
nsubj(wrong-27, it-26)
root(ROOT-0, wrong-27)

(ROOT
  (S
    (NP (DT The) (JJ first) (NN reason))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN person))
          (VP (VBZ is)
            (ADJP (JJ conscious))
            (ADVP (RB prior)
              (PP (TO to)
                (S
                  (VP (VBG going)
                    (S
                      (VP (TO to)
                        (VP (VB sleep)))))))))))
      (, ,)
      (CC and)
      (VP (MD must)
        (VP (VB go)
          (S
            (VP (TO to)
              (VP (VB sleep)
                (SBAR (IN in) (NN order)
                  (S
                    (VP (TO to)
                      (VP (VB sustain)
                        (NP (NN consciousness)
                          (CC and)
                          (NN health))
                        (PP (IN in)
                          (NP (DT the) (JJ long) (NN term)))))))))))))
    (. .)))

det(reason-3, The-1)
amod(reason-3, first-2)
nsubj(conscious-9, reason-3)
nsubj(go-18, reason-3)
xsubj(sleep-20, reason-3)
aux(conscious-9, is-4)
complm(conscious-9, that-5)
det(person-7, the-6)
nsubj(conscious-9, person-7)
cop(conscious-9, is-8)
root(ROOT-0, conscious-9)
prepc_prior_to(conscious-9, going-12)
aux(sleep-14, to-13)
xcomp(going-12, sleep-14)
aux(go-18, must-17)
conj_and(conscious-9, go-18)
aux(sleep-20, to-19)
xcomp(go-18, sleep-20)
mark(sustain-24, in-21)
dep(sustain-24, order-22)
aux(sustain-24, to-23)
purpcl(sleep-20, sustain-24)
dobj(sustain-24, consciousness-25)
dobj(sustain-24, health-27)
conj_and(consciousness-25, health-27)
det(term-31, the-29)
amod(term-31, long-30)
prep_in(sustain-24, term-31)

(ROOT
  (S
    (ADVP (RB Additionally))
    (PRN (, ,)
      (SBAR (IN since)
        (S
          (NP (PRP we))
          (ADVP (DT all))
          (VP (MD must)
            (VP (VB sleep)))))
      (, ,))
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (RB not) (VB be)
                (VP (VBN killed)
                  (SBAR (IN while)
                    (S
                      (ADJP (RB asleep))
                      (ADVP (RB then)))))))))))
    (NP (PRP you))
    (VP (MD should) (RB not)
      (VP (VB kill)
        (NP
          (NP (NN someone))
          (SBAR
            (WHNP (RB else) (WP who))
            (S
              (VP (VBZ is)
                (ADJP (RB asleep))))))))
    (. .)))

advmod(kill-22, Additionally-1)
mark(sleep-7, since-3)
nsubj(sleep-7, we-4)
advmod(sleep-7, all-5)
aux(sleep-7, must-6)
parataxis(kill-22, sleep-7)
mark(want-11, if-9)
nsubj(want-11, you-10)
xsubj(killed-15, you-10)
dep(kill-22, want-11)
aux(killed-15, to-12)
neg(killed-15, not-13)
auxpass(killed-15, be-14)
xcomp(want-11, killed-15)
mark(asleep-17, while-16)
advcl(killed-15, asleep-17)
advmod(asleep-17, then-18)
nsubj(kill-22, you-19)
aux(kill-22, should-20)
neg(kill-22, not-21)
root(ROOT-0, kill-22)
dobj(kill-22, someone-23)
nsubj(asleep-27, someone-23)
advmod(who-25, else-24)
cop(asleep-27, is-26)
rcmod(someone-23, asleep-27)

