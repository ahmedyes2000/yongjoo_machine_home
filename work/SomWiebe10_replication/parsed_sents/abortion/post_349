(ROOT
  (S
    (NP (JJ Late) (NN term) (NNS abortions))
    (VP (VBP are)
      (ADJP (JJ rare)
        (CC and)
        (JJ only)
        (S
          (VP (TO to)
            (VP (VB save)
              (NP
                (NP (DT the) (NN life))
                (PP (IN of)
                  (NP (DT the) (NN woman)))))))))
    (. .)))

amod(abortions-3, Late-1)
nn(abortions-3, term-2)
nsubj(rare-5, abortions-3)
nsubj(only-7, abortions-3)
cop(rare-5, are-4)
root(ROOT-0, rare-5)
conj_and(rare-5, only-7)
aux(save-9, to-8)
xcomp(rare-5, save-9)
det(life-11, the-10)
dobj(save-9, life-11)
det(woman-14, the-13)
prep_of(life-11, woman-14)

(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (JJ graphic))
      (, ,)
      (SBAR (IN so)
        (S
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN end) (NNS results))
              (PP (IN of)
                (NP
                  (NP (NNS bombs))
                  (VP (VBG being)
                    (VP (VBN dropped)
                      (PP (IN on)
                        (NP (JJ innocent) (NNS women)
                          (CC and)
                          (NNS children)))
                      (PP (IN in)
                        (NP (NNP Iraq))))))))))))
    (. .)))

dep(graphic-4, So-1)
nsubj(graphic-4, it-2)
cop(graphic-4, 's-3)
root(ROOT-0, graphic-4)
mark(results-10, so-6)
cop(results-10, is-7)
det(results-10, the-8)
nn(results-10, end-9)
advcl(graphic-4, results-10)
prep_of(results-10, bombs-12)
auxpass(dropped-14, being-13)
partmod(bombs-12, dropped-14)
amod(women-17, innocent-16)
prep_on(dropped-14, women-17)
prep_on(dropped-14, children-19)
conj_and(women-17, children-19)
prep_in(dropped-14, Iraq-21)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB still))
    (VP (VBZ does) (RB n't)
      (VP (VB address)
        (NP
          (NP (DT the) (NN issue))
          (PP (IN of)
            (NP (NN privacy))))))
    (. .)))

nsubj(address-5, It-1)
advmod(address-5, still-2)
aux(address-5, does-3)
neg(address-5, n't-4)
root(ROOT-0, address-5)
det(issue-7, the-6)
dobj(address-5, issue-7)
prep_of(issue-7, privacy-9)

(ROOT
  (S
    (NP (NNS Abortions))
    (VP (VBP are) (RB n't)
      (PP (IN for)
        (NP (JJ public) (NN viewing))))
    (. .)))

nsubj(are-2, Abortions-1)
root(ROOT-0, are-2)
neg(are-2, n't-3)
amod(viewing-6, public-5)
prep_for(are-2, viewing-6)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB use)
          (NP (NN shock)))))
    (RB all)
    (S
      (NP (PRP you))
      (VP (VBP want)
        (SBAR (CC but)
          (S
            (NP (PRP it))
            (VP (VBZ 's) (RB not)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP (VB work)
                      (PP (IN on)
                        (NP (NN everyone))))))))))))
    (. .)))

nsubj(use-3, You-1)
aux(use-3, can-2)
root(ROOT-0, use-3)
dobj(use-3, shock-4)
advmod(use-3, all-5)
nsubj(want-7, you-6)
ccomp(use-3, want-7)
cc(going-12, but-8)
nsubj(going-12, it-9)
xsubj(work-14, it-9)
aux(going-12, 's-10)
neg(going-12, not-11)
ccomp(want-7, going-12)
aux(work-14, to-13)
xcomp(going-12, work-14)
prep_on(work-14, everyone-16)

(ROOT
  (S
    (NP
      (NP (DT The) (NN question))
      (PP (IN of)
        (NP (NN abortion))))
    (VP (VBZ is)
      (ADVP (RB still))
      (NP (DT a) (JJ privacy\/medical) (NN decision)))
    (. .)))

det(question-2, The-1)
nsubj(decision-9, question-2)
prep_of(question-2, abortion-4)
cop(decision-9, is-5)
advmod(decision-9, still-6)
det(decision-9, a-7)
amod(decision-9, privacy\/medical-8)
root(ROOT-0, decision-9)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP do) (RB n't)
        (VP (VB believe)
          (PP (IN in)
            (NP (NN abortion))))))
    (, ,)
    (NP (DT no) (NN one))
    (VP (VBZ is)
      (VP (VBG forcing)
        (S
          (NP (PRP you))
          (VP (TO to)
            (VP (VB have)
              (NP (CD one)))))))
    (. .)))

nsubj(believe-4, You-1)
aux(believe-4, do-2)
neg(believe-4, n't-3)
ccomp(forcing-11, believe-4)
prep_in(believe-4, abortion-6)
det(one-9, no-8)
nsubj(forcing-11, one-9)
aux(forcing-11, is-10)
root(ROOT-0, forcing-11)
nsubj(have-14, you-12)
aux(have-14, to-13)
xcomp(forcing-11, have-14)
dobj(have-14, one-15)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP are) (RB n't)
      (VP (VBG living)
        (PP (IN in)
          (NP (NNP China)))))
    (. .)))

nsubj(living-4, We-1)
aux(living-4, are-2)
neg(living-4, n't-3)
root(ROOT-0, living-4)
prep_in(living-4, China-6)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP want)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (CD 20) (NNS kids))
                (, ,)
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ 's)
                      (NP (PRP$ your) (NN choice)))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD would) (RB n't)
        (VP (VB insist)
          (SBAR (IN that)
            (S
              (NP (NNS laws))
              (VP (MD must)
                (VP (VB be)
                  (VP (VBN passed)
                    (S
                      (VP (VBG forcing)
                        (S
                          (NP (PRP you))
                          (VP (TO to)
                            (VP (VB limit)
                              (NP
                                (NP (DT the) (NN size))
                                (PP (IN of)
                                  (NP (PRP$ your) (NN family)))))))))))))))))
    (. .)))

nsubj(want-2, You-1)
xsubj(have-4, You-1)
root(ROOT-0, want-2)
aux(have-4, to-3)
xcomp(want-2, have-4)
num(kids-6, 20-5)
dobj(have-4, kids-6)
nsubj(choice-11, kids-6)
cop(choice-11, 's-9)
poss(choice-11, your-10)
rcmod(kids-6, choice-11)
nsubj(insist-16, I-13)
aux(insist-16, would-14)
neg(insist-16, n't-15)
conj_and(want-2, insist-16)
complm(passed-21, that-17)
nsubjpass(passed-21, laws-18)
aux(passed-21, must-19)
auxpass(passed-21, be-20)
ccomp(insist-16, passed-21)
xcomp(passed-21, forcing-22)
nsubj(limit-25, you-23)
aux(limit-25, to-24)
xcomp(forcing-22, limit-25)
det(size-27, the-26)
dobj(limit-25, size-27)
poss(family-30, your-29)
prep_of(size-27, family-30)

(ROOT
  (S
    (PP (IN By)
      (NP (DT the) (JJ same) (NN reasoning)))
    (, ,)
    (NP (PRP you))
    (VP (VBP have)
      (ADVP (RB no) (RB right))
      (S
        (VP (TO to)
          (VP (VB tell)
            (NP
              (NP (JJ other) (NNS people))
              (SBAR
                (WHNP
                  (WHADJP (WRB how) (JJ many))
                  (NNS children))
                (S
                  (NP (PRP they))
                  (VP (MD must)
                    (VP (VB have))))))))))
    (. .)))

det(reasoning-4, the-2)
amod(reasoning-4, same-3)
prep_by(have-7, reasoning-4)
nsubj(have-7, you-6)
xsubj(tell-11, you-6)
root(ROOT-0, have-7)
advmod(right-9, no-8)
advmod(have-7, right-9)
aux(tell-11, to-10)
xcomp(have-7, tell-11)
amod(people-13, other-12)
dobj(tell-11, people-13)
advmod(many-15, how-14)
amod(children-16, many-15)
dobj(have-19, children-16)
rel(have-19, children-16)
nsubj(have-19, they-17)
aux(have-19, must-18)
rcmod(people-13, have-19)

