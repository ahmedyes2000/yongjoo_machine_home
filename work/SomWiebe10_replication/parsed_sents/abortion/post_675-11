(ROOT
  (S
    (S
      (NP (NNP Logic))
      (VP (MD can)
        (VP (VB point)
          (PRT (RP out))
          (SBAR (IN that)
            (S
              (NP (DT an) (NN argument))
              (VP (VBZ is)
                (ADJP (JJ invalid))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD ca) (RB n't)
        (VP (VB speak)
          (PP (TO to)
            (NP
              (NP (DT the) (NN merit))
              (PP (IN of)
                (NP (DT a) (NN definition))))))))
    (. .)))

nsubj(point-3, Logic-1)
aux(point-3, can-2)
root(ROOT-0, point-3)
prt(point-3, out-4)
complm(invalid-9, that-5)
det(argument-7, an-6)
nsubj(invalid-9, argument-7)
cop(invalid-9, is-8)
ccomp(point-3, invalid-9)
nsubj(speak-15, it-12)
aux(speak-15, ca-13)
neg(speak-15, n't-14)
conj_but(point-3, speak-15)
det(merit-18, the-17)
prep_to(speak-15, merit-18)
det(definition-21, a-20)
prep_of(merit-18, definition-21)

