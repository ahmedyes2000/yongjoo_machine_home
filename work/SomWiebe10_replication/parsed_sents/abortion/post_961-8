(ROOT
  (S
    (NP (PRP He))
    (VP
      (VP (VBZ wants)
        (NP (DT the) (NN child)))
      (, ,)
      (VP (VBZ is)
        (ADJP (JJ willing)
          (S
            (VP (TO to)
              (VP (VB raise)
                (NP (DT this) (NN child))
                (PP (IN without)
                  (NP
                    (NP (DT any) (JJ financial) (NN support))
                    (PP (IN from)
                      (NP (DT the) (NN mother))))))))))
      (CC and)
      (VP (VBZ is)
        (ADJP (JJ willing)
          (S
            (VP (TO to)
              (VP (VB bear)
                (NP
                  (NP (DT all) (JJ financial) (NN burden))
                  (PP (IN of)
                    (NP (DT the) (NN mother))))
                (SBAR (IN while)
                  (S
                    (NP (PRP she))
                    (VP (VBZ is)
                      (ADJP (JJ unable)
                        (S
                          (VP (TO to)
                            (VP (VB work))))))))))))))
    (. .)))

nsubj(wants-2, He-1)
nsubj(willing-7, He-1)
nsubj(willing-21, He-1)
root(ROOT-0, wants-2)
det(child-4, the-3)
dobj(wants-2, child-4)
cop(willing-7, is-6)
conj_and(wants-2, willing-7)
aux(raise-9, to-8)
xcomp(willing-7, raise-9)
det(child-11, this-10)
dobj(raise-9, child-11)
det(support-15, any-13)
amod(support-15, financial-14)
prep_without(raise-9, support-15)
det(mother-18, the-17)
prep_from(support-15, mother-18)
cop(willing-21, is-20)
conj_and(wants-2, willing-21)
aux(bear-23, to-22)
xcomp(willing-21, bear-23)
det(burden-26, all-24)
amod(burden-26, financial-25)
dobj(bear-23, burden-26)
det(mother-29, the-28)
prep_of(burden-26, mother-29)
mark(unable-33, while-30)
nsubj(unable-33, she-31)
cop(unable-33, is-32)
advcl(bear-23, unable-33)
aux(work-35, to-34)
xcomp(unable-33, work-35)

