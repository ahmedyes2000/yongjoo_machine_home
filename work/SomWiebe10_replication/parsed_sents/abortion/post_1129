(ROOT
  (S
    (NP
      (NP (NNP No))
      (, ,)
      (PP (IN of)
        (NP (NN course) (NNS abortions))))
    (VP (MD should) (RB not)
      (VP (VB be)
        (VP (VBN banned)
          (SBAR (IN for)
            (S
              (NP (PRP you))
              (VP (MD would)
                (VP (VB have)
                  (NP (PRP them))
                  (PP
                    (ADVP
                      (ADVP (RB anyway))
                      (RB regardless))
                    (IN of)
                    (NP (NN safety) (, ,) (NN funding)
                      (CC or)
                      (NN anything)))
                  (ADVP (RB else)
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD might)
                          (VP (VB get)
                            (PP (IN in)
                              (NP (DT the) (NN way)))))))))))))))
    (. .)))

nsubjpass(banned-9, No-1)
nn(abortions-5, course-4)
prep_of(No-1, abortions-5)
aux(banned-9, should-6)
neg(banned-9, not-7)
auxpass(banned-9, be-8)
root(ROOT-0, banned-9)
mark(have-13, for-10)
nsubj(have-13, you-11)
aux(have-13, would-12)
advcl(banned-9, have-13)
dobj(have-13, them-14)
advmod(have-13, anyway-15)
advmod(anyway-15, regardless-16)
prep_of(have-13, safety-18)
prep_of(have-13, funding-20)
conj_or(safety-18, funding-20)
prep_of(have-13, anything-22)
conj_or(safety-18, anything-22)
advmod(have-13, else-23)
nsubj(get-26, that-24)
aux(get-26, might-25)
dep(else-23, get-26)
det(way-29, the-28)
prep_in(get-26, way-29)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD would)
        (VP (VB be)
          (ADVP (RB back))
          (PP (IN in)
            (NP
              (NP (DT the) (NNS days))
              (PP (IN of)
                (NP (DT the) (NN butcher) (NNS shops))))))))
    (CC and)
    (S
      (NP (DT that))
      (VP (MD would) (RB n't)
        (VP (VB be)
          (ADJP (JJ good)
            (PP (IN for)
              (NP (NN anyone)))))))
    (. .)))

nsubj(be-3, We-1)
aux(be-3, would-2)
root(ROOT-0, be-3)
advmod(be-3, back-4)
det(days-7, the-6)
prep_in(be-3, days-7)
det(shops-11, the-9)
nn(shops-11, butcher-10)
prep_of(days-7, shops-11)
nsubj(good-17, that-13)
aux(good-17, would-14)
neg(good-17, n't-15)
cop(good-17, be-16)
conj_and(be-3, good-17)
prep_for(good-17, anyone-19)

(ROOT
  (S
    (NP (NNP Abortion))
    (VP
      (VP (VBZ is) (RB not)
        (NP (DT a) (JJ trivial) (NN matter)))
      (CC and)
      (VP (VBZ is)
        (NP
          (NP (CD one))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD must)
                (VP (VB be)
                  (VP (VBN thought)
                    (PRT (RP out))
                    (ADVP (RB thoroughly))
                    (PP (IN by)
                      (NP
                        (NP (DT the) (NN person)
                          (CC or)
                          (NNS persons))
                        (VP (VBN involved))))))))))))
    (. .)))

nsubj(matter-6, Abortion-1)
cop(matter-6, is-2)
neg(matter-6, not-3)
det(matter-6, a-4)
amod(matter-6, trivial-5)
root(ROOT-0, matter-6)
cop(one-9, is-8)
conj_and(matter-6, one-9)
nsubjpass(thought-13, one-9)
aux(thought-13, must-11)
auxpass(thought-13, be-12)
rcmod(one-9, thought-13)
prt(thought-13, out-14)
advmod(thought-13, thoroughly-15)
det(person-18, the-17)
agent(thought-13, person-18)
agent(thought-13, persons-20)
conj_or(person-18, persons-20)
partmod(person-18, involved-21)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP
        (VP (MD would) (RB n't)
          (VP (VB like)
            (S
              (VP (TO to)
                (VP (VB see)
                  (S
                    (NP (PRP us))
                    (VP (VB take)
                      (NP (PDT such) (DT a) (JJ serious) (NN step))
                      (ADVP (RB lightly)))))))))
        (CC nor)
        (VP (MD would))))
    (NP (PRP I))
    (VP (VBP like)
      (S
        (VP (TO to)
          (VP (VB see)
            (S
              (NP (PRP us))
              (VP (VB take)
                (ADVP
                  (NP (DT a) (NN step))
                  (RB backwards))
                (PP (IN in)
                  (NP (NN time)))))))))
    (. .)))

nsubj(like-4, I-1)
xsubj(see-6, I-1)
aux(like-4, would-2)
neg(like-4, n't-3)
dep(like-17, like-4)
aux(see-6, to-5)
xcomp(like-4, see-6)
nsubj(take-8, us-7)
ccomp(see-6, take-8)
predet(step-12, such-9)
det(step-12, a-10)
amod(step-12, serious-11)
dobj(take-8, step-12)
advmod(take-8, lightly-13)
conj_nor(like-4, would-15)
dep(like-17, would-15)
nsubj(like-17, I-16)
xsubj(see-19, I-16)
root(ROOT-0, like-17)
aux(see-19, to-18)
xcomp(like-17, see-19)
nsubj(take-21, us-20)
ccomp(see-19, take-21)
det(step-23, a-22)
npadvmod(backwards-24, step-23)
advmod(take-21, backwards-24)
prep_in(take-21, time-26)

