(ROOT
  (S (CC And)
    (SBAR (IN while)
      (S
        (NP (JJ pro-life))
        (RB all)
        (VP (VB give)
          (NP
            (NP (DT the) (JJ same) (NN answer))
            (: :)
            (S
              (NP (NN life))
              (VP (VBZ begins)
                (PP (IN at)
                  (NP (NN conception)))))))))
    (PRN (, ,)
      (S
        (NP (DT all) (JJ human) (NNS beings))
        (VP (VBP are)
          (ADVP (RB also))
          (NP (JJ human) (NNS persons))))
      (, ,))
    (NP (DT the) (JJ pro-choice) (NN side))
    (VP (VBZ has)
      (NP (DT no) (JJ official) (NN answer)))
    (. .)))

cc(has-26, And-1)
mark(give-5, while-2)
nsubj(give-5, pro-life-3)
advmod(give-5, all-4)
dep(has-26, give-5)
det(answer-8, the-6)
amod(answer-8, same-7)
dobj(give-5, answer-8)
nsubj(begins-11, life-10)
dep(answer-8, begins-11)
prep_at(begins-11, conception-13)
det(beings-17, all-15)
amod(beings-17, human-16)
nsubj(persons-21, beings-17)
cop(persons-21, are-18)
advmod(persons-21, also-19)
amod(persons-21, human-20)
parataxis(has-26, persons-21)
det(side-25, the-23)
amod(side-25, pro-choice-24)
nsubj(has-26, side-25)
root(ROOT-0, has-26)
det(answer-29, no-27)
amod(answer-29, official-28)
dobj(has-26, answer-29)

(ROOT
  (S
    (S
      (NP (DT This) (NN fact))
      (VP (VBZ bears)
        (NP (DT a) (NN consequence))))
    (: :)
    (S
      (SBAR (IN while)
        (S
          (NP (DT the) (JJ pro-life) (NN answer))
          (VP (VBZ gives)
            (NP (DT a) (JJ concrete) (JJ solid) (JJ starting) (NN point)))))
      (, ,)
      (NP (DT the) (JJ pro-choice) (NN side))
      (VP (VBZ is)
        (ADVP (IN at)
          (NP (DT any) (NN rate)))
        (ADJP (JJ incoherent)
          (PP (IN within)
            (NP (PRP itself))))))
    (. .)))

det(fact-2, This-1)
nsubj(bears-3, fact-2)
root(ROOT-0, bears-3)
det(consequence-5, a-4)
dobj(bears-3, consequence-5)
mark(gives-11, while-7)
det(answer-10, the-8)
amod(answer-10, pro-life-9)
nsubj(gives-11, answer-10)
advcl(incoherent-25, gives-11)
det(point-16, a-12)
amod(point-16, concrete-13)
amod(point-16, solid-14)
amod(point-16, starting-15)
dobj(gives-11, point-16)
det(side-20, the-18)
amod(side-20, pro-choice-19)
nsubj(incoherent-25, side-20)
cop(incoherent-25, is-21)
advmod(incoherent-25, at-22)
det(rate-24, any-23)
pobj(at-22, rate-24)
parataxis(bears-3, incoherent-25)
prep_within(incoherent-25, itself-27)

(ROOT
  (S
    (S
      (VP (VBG Allowing)
        (NP (NN abortion))))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB lead)
        (S
          (VP (TO to)
            (VP (VB kill)
              (UCP
                (SBAR
                  (WHNP (WP what))
                  (S (, ,)
                    (PP (IN for)
                      (NP
                        (NP (DT some))
                        (PP (IN of)
                          (NP (DT the) (JJ pro-choice) (NNS advocates)))))
                    (, ,)
                    (VP (VBZ is)
                      (NP (DT a) (JJ human) (NN being)))))
                (CC and)
                (PP (IN with)
                  (NP
                    (NP (DT a) (NN right))
                    (PP (TO to)
                      (NP (NN life)))))))))))
    (. .)))

csubj(lead-5, Allowing-1)
dobj(Allowing-1, abortion-2)
aux(lead-5, will-3)
advmod(lead-5, always-4)
root(ROOT-0, lead-5)
aux(kill-7, to-6)
xcomp(lead-5, kill-7)
nsubj(being-20, what-8)
prep_for(being-20, some-11)
det(advocates-15, the-13)
amod(advocates-15, pro-choice-14)
prep_of(some-11, advocates-15)
cop(being-20, is-17)
det(being-20, a-18)
amod(being-20, human-19)
dep(kill-7, being-20)
dep(kill-7, with-22)
conj_and(being-20, with-22)
det(right-24, a-23)
pobj(with-22, right-24)
prep_to(right-24, life-26)

(ROOT
  (S
    (NP (PRP$ My) (NN point))
    (VP (VBZ is) (: :)
      (SBARQ
        (SBAR (IN since)
          (S
            (NP (PRP we))
            (VP
              (VP (MD can) (RB not)
                (ADVP (RB apparently))
                (VP (VB reach)
                  (NP (DT a) (JJ common) (NN definition))
                  (PP (IN on)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (NP (DT a) (JJ human) (NN being))
                        (VP (MD should)
                          (VP (VB be)
                            (VP (VBN recognized)
                              (PP (IN as)
                                (NP (JJ such)))))))))))
              (CC and)
              (ADVP (RB consequently))
              (VP (VBD respected)
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (ADJP (JJ right)
                        (PP (TO to)
                          (NP (NN life)))))))))))
        (, ,)
        (SQ (MD should) (RB n't)
          (NP (PRP we))
          (VP (VB take)
            (PP (IN as)
              (NP
                (NP (NN answer))
                (SBAR
                  (WHNP
                    (NP (DT the) (RBS most) (JJ safe))
                    (WHPP (IN of)
                      (WHNP (DT all) (WDT which))))
                  (S
                    (VP (VBZ is)
                      (PP (IN at)
                        (NP
                          (NP (NN conception) (RB just))
                          (PP (IN in)
                            (NP (NN case))))))))))))
        (. ?)))))

poss(point-2, My-1)
nsubj(is-3, point-2)
root(ROOT-0, is-3)
mark(reach-10, since-5)
nsubj(reach-10, we-6)
nsubj(respected-26, we-6)
aux(reach-10, can-7)
neg(reach-10, not-8)
advmod(reach-10, apparently-9)
advcl(take-36, reach-10)
det(definition-13, a-11)
amod(definition-13, common-12)
dobj(reach-10, definition-13)
advmod(recognized-21, when-15)
det(being-18, a-16)
amod(being-18, human-17)
nsubjpass(recognized-21, being-18)
aux(recognized-21, should-19)
auxpass(recognized-21, be-20)
prepc_on(reach-10, recognized-21)
prep_such_as(recognized-21, such-23)
advmod(reach-10, consequently-25)
conj_and(reach-10, consequently-25)
advcl(take-36, consequently-25)
conj_and(reach-10, respected-26)
advcl(take-36, respected-26)
nsubj(right-29, it-27)
cop(right-29, 's-28)
ccomp(respected-26, right-29)
prep_to(right-29, life-31)
aux(take-36, should-33)
neg(take-36, n't-34)
nsubj(take-36, we-35)
parataxis(is-3, take-36)
prep_as(take-36, answer-38)
prep_of(safe-41, answer-38)
det(safe-41, the-39)
advmod(safe-41, most-40)
nsubj(is-45, safe-41)
dep(which-44, all-43)
rcmod(answer-38, is-45)
prep_at(is-45, conception-47)
advmod(conception-47, just-48)
prep_in(conception-47, case-50)

(ROOT
  (FRAG
    (ADVP (RB Example))
    (: :)
    (SBAR (IN if)
      (S
        (S
          (NP (PRP we))
          (VP (VBP go)
            (S
              (VP (VBG hunting)
                (PP (IN with)
                  (NP (DT a) (NN friend)))))))
        (CC and)
        (S
          (NP (PRP we))
          (VP (VBP hear)
            (NP
              (NP (DT the) (NN sound))
              (PP (IN of)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ seems)
                      (SBAR
                        (S
                          (NP (DT a) (NN stag))
                          (VP (MD should) (RB n't)
                            (NP (PRP we))
                            (VP (VB double)
                              (NP (NN check))
                              (SBAR
                                (SBAR (IN if)
                                  (S
                                    (NP (PRP it))
                                    (VP (VBZ is) (RB n't)
                                      (NP (PRP$ our) (NN friend))
                                      (ADVP (RB instead)))))
                                (, ,)
                                (CC and)
                                (SBAR (IN if)
                                  (S
                                    (NP (PRP we))
                                    (VP (MD can) (RB not)
                                      (VP (VB reach)
                                        (NP (DT a) (NN conclusion)
                                          (S (RB not)
                                            (VP (TO to)
                                              (VP (VB shoot)))))))))))))))))))))))
    (. ?)))

root(ROOT-0, Example-1)
mark(go-5, if-3)
nsubj(go-5, we-4)
dep(Example-1, go-5)
xcomp(go-5, hunting-6)
det(friend-9, a-8)
prep_with(hunting-6, friend-9)
nsubj(hear-12, we-11)
dep(Example-1, hear-12)
conj_and(go-5, hear-12)
det(sound-14, the-13)
dobj(hear-12, sound-14)
nsubj(seems-17, what-16)
prepc_of(sound-14, seems-17)
det(stag-19, a-18)
nsubj(double-23, stag-19)
aux(double-23, should-20)
neg(double-23, n't-21)
dobj(double-23, we-22)
ccomp(seems-17, double-23)
dobj(double-23, check-24)
mark(friend-30, if-25)
nsubj(friend-30, it-26)
cop(friend-30, is-27)
neg(friend-30, n't-28)
poss(friend-30, our-29)
dep(double-23, friend-30)
advmod(friend-30, instead-31)
mark(reach-38, if-34)
nsubj(reach-38, we-35)
aux(reach-38, can-36)
neg(reach-38, not-37)
dep(double-23, reach-38)
conj_and(friend-30, reach-38)
det(conclusion-40, a-39)
dobj(reach-38, conclusion-40)
neg(shoot-43, not-41)
aux(shoot-43, to-42)
infmod(conclusion-40, shoot-43)

