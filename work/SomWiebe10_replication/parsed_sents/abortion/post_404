(ROOT
  (S (IN So)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (JJ metaphysical) (NN independence))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ creates)
              (ADJP (JJ personhood)))))))
    (. ?)))

dep(independence-5, So-1)
nsubj(independence-5, it-2)
cop(independence-5, is-3)
amod(independence-5, metaphysical-4)
root(ROOT-0, independence-5)
nsubj(creates-7, independence-5)
rcmod(independence-5, creates-7)
acomp(creates-7, personhood-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP guess)
      (SBAR
        (S
          (NP (NNP Siamese) (NNS twins))
          (VP (VBP are)
            (ADVP (RB really))
            (NP
              (NP (CD one) (NN person))
              (, ,) (RB not)
              (NP (CD two)))))))
    (. .)))

nsubj(guess-2, I-1)
root(ROOT-0, guess-2)
nn(twins-4, Siamese-3)
nsubj(person-8, twins-4)
cop(person-8, are-5)
advmod(person-8, really-6)
num(person-8, one-7)
ccomp(guess-2, person-8)
neg(person-8, not-10)
dep(person-8, two-11)

(ROOT
  (S
    (FRAG
      (PP (IN If)))
    ('' '')
    (NP (NNP Exotic) (, ,) (NNP borderline) (, ,)
      (CC or)
      (NNP abnormal))
    (NP (NNS cases))
    (VP (VBP do) (RB not)
      (VP (VB define)
        (NP
          (NP (DT the) (NN principle)
            (CC or)
            (NN category))
          (, ,) ('' '')
          (ADVP (RB then)))
        (SBAR
          (WHADVP (WRB why))
          (S
            (VP (MD can)
              (NP (PRP we))
              (S
                (VP (RB not) (VB outlaw)
                  (NP (JJ partial-birth) (NNS abortions)))))))))
    (. ?)))

dep(define-12, If-1)
nsubj(define-12, Exotic-3)
conj_or(Exotic-3, borderline-5)
nsubj(define-12, borderline-5)
conj_or(Exotic-3, abnormal-8)
nsubj(define-12, abnormal-8)
nsubj(define-12, cases-9)
aux(define-12, do-10)
neg(define-12, not-11)
root(ROOT-0, define-12)
det(principle-14, the-13)
dobj(define-12, principle-14)
dobj(define-12, category-16)
conj_or(principle-14, category-16)
advmod(principle-14, then-19)
advmod(can-21, why-20)
advcl(define-12, can-21)
dobj(can-21, we-22)
neg(outlaw-24, not-23)
dep(can-21, outlaw-24)
amod(abortions-26, partial-birth-25)
dobj(outlaw-24, abortions-26)

(ROOT
  (S
    (NP
      (NP (NN Anyone))
      (ADJP (JJ willing)
        (S
          (VP (TO to)
            (VP (VB read)
              (NP (DT the) (NN description))
              (PRN (-LRB- -LRB-)
                (CC or)
                (VP (VBP watch)
                  (NP (DT a) (NN video)))
                (-RRB- -RRB-))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN process))
                  (SBAR
                    (S
                      (VP (MD can)
                        (ADVP (RB only))
                        (VP (VB conclude)
                          (NP
                            (NP (DT that))
                            (PP (IN at)
                              (NP (JJ minimum) (CD 4\/5)))
                            (PP (IN of)
                              (NP
                                (NP (DT a) (`` ``) (JJ birthed) ('' '') (NN fetus))
                                (PRN (-LRB- -LRB-)
                                  (VP
                                    (ADVP (RB generally))
                                    (VBN called)
                                    (NP (DT a) (NN baby)))
                                  (-RRB- -RRB-))))))))))))))))
    (VP (VBZ is)
      (VP (VBN killed)))
    (. .)))

nsubjpass(killed-36, Anyone-1)
amod(Anyone-1, willing-2)
aux(read-4, to-3)
xcomp(willing-2, read-4)
det(description-6, the-5)
dobj(read-4, description-6)
dep(watch-9, or-8)
dep(read-4, watch-9)
det(video-11, a-10)
dobj(watch-9, video-11)
det(process-15, the-14)
prep_of(read-4, process-15)
aux(conclude-18, can-16)
advmod(conclude-18, only-17)
rcmod(process-15, conclude-18)
dobj(conclude-18, that-19)
amod(4\/5-22, minimum-21)
prep_at(that-19, 4\/5-22)
det(fetus-28, a-24)
amod(fetus-28, birthed-26)
prep_of(that-19, fetus-28)
advmod(called-31, generally-30)
dep(fetus-28, called-31)
det(baby-33, a-32)
dobj(called-31, baby-33)
auxpass(killed-36, is-35)
root(ROOT-0, killed-36)

(ROOT
  (S
    (NP
      (NP (NNS Degrees))
      (PP (IN of) (`` ``)
        (FRAG
          (ADVP (RB out))
          (PP (IN of)
            (NP (DT the) (NN birth) (NN canal))))
        ('' '')))
    (VP (VBP ARE)
      (ADJP (JJ fundamental))
      (SBAR
        (ADVP (RB here))
        (IN since)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN centered)
              (NP (PRP$ your) (JJ entire) (NN argument))
              (PP (IN around)
                (NP (DT this) (NN word))))))))
    (. .)))

nsubj(fundamental-11, Degrees-1)
prep(Degrees-1, of-2)
det(canal-8, the-6)
nn(canal-8, birth-7)
prep_out_of(of-2, canal-8)
cop(fundamental-11, ARE-10)
root(ROOT-0, fundamental-11)
advmod(centered-16, here-12)
dep(centered-16, since-13)
nsubj(centered-16, you-14)
aux(centered-16, have-15)
ccomp(fundamental-11, centered-16)
poss(argument-19, your-17)
amod(argument-19, entire-18)
dobj(centered-16, argument-19)
det(word-22, this-21)
prep_around(centered-16, word-22)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP ask)
      (S
        (NP (PRP you))
        (ADVP (RB yet) (RB again))
        (VP (TO to)
          (VP (VB define)
            (SBAR
              (WHADVP (WRB when) (RB exactly))
              (S
                (NP (`` ``) (NN birth) ('' ''))
                (VP (VBZ occurs))))))))
    (. .)))

nsubj(ask-2, I-1)
root(ROOT-0, ask-2)
nsubj(define-7, you-3)
advmod(again-5, yet-4)
advmod(define-7, again-5)
aux(define-7, to-6)
xcomp(ask-2, define-7)
advmod(exactly-9, when-8)
advmod(occurs-13, exactly-9)
nsubj(occurs-13, birth-11)
advcl(define-7, occurs-13)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP have)
        (ADVP (RB now))
        (VP (VBN scoured)
          (NP (DT the) (NN site))))
      (CC and)
      (VP (VBD read)
        (NP
          (NP (DT each))
          (PP (IN of)
            (NP (PRP$ your) (NNS comments))))
        (NP (JJ several) (NNS times))))
    (. .)))

nsubj(scoured-4, I-1)
nsubj(read-8, I-1)
aux(scoured-4, have-2)
advmod(scoured-4, now-3)
root(ROOT-0, scoured-4)
det(site-6, the-5)
dobj(scoured-4, site-6)
conj_and(scoured-4, read-8)
iobj(read-8, each-9)
poss(comments-12, your-11)
prep_of(each-9, comments-12)
amod(times-14, several-13)
dobj(read-8, times-14)

(ROOT
  (S (RB Not)
    (NP (RB once))
    (VP (VBP do)
      (SBAR
        (S
          (NP (PRP you))
          (ADVP (RB actually))
          (VP (VBP list)
            (NP
              (NP (DT a) (NN reason))
              (PP (IN for)
                (NP (PRP$ your) (NN assertion))))
            (SBAR (IN that)
              (S
                (NP (`` ``) (NN birth) ('' ''))
                (VP (VBZ creates)
                  (ADJP (JJ personhood)))))))))
    (. .)))

neg(do-3, Not-1)
nsubj(do-3, once-2)
root(ROOT-0, do-3)
nsubj(list-6, you-4)
advmod(list-6, actually-5)
ccomp(do-3, list-6)
det(reason-8, a-7)
dobj(list-6, reason-8)
poss(assertion-11, your-10)
prep_for(reason-8, assertion-11)
complm(creates-16, that-12)
nsubj(creates-16, birth-14)
ccomp(list-6, creates-16)
acomp(creates-16, personhood-17)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJS closest) (NN thing))
        (PP (TO to)
          (NP
            (NP (DT a) (NN reason))
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP have)
                  (VP (VBN given))))))))
      (VP (VBZ is) (, ,) (`` ``)
        (NP
          (NP (DT the) (NNS laws))
          (PP (IN of)
            (NP (NN nature)))
          (ADVP (RB eventually))
          (NP
            (NP
              (NP (NN result))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN fetus))
                  (VP (VBG becoming)
                    (NP
                      (NP (NN survivable))
                      (, ,)
                      (ADJP (RB fully) (VBN formed)))))))
            (, ,)
            (NP
              (NP (PRP$ its) (NNS organs))
              (VP (VBG functioning)
                (ADVP (RB autonomously))))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (JJ whole) (NN organism))
              (VP (VBG becoming)
                (ADJP (RB metaphysically) (JJ independent))))))))
    (, ,)
    (CC and)
    (S
      (PP (IN at)
        (NP (DT that) (NN time)))
      (, ,)
      (NP
        (NP (DT the) (NN law))
        (PP (IN of)
          (NP (NN cause-and-effect))))
      (VP (VBZ induces)
        (NP (NN childbirth))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, closest-2)
nsubj(laws-14, thing-3)
det(reason-6, a-5)
prep_to(thing-3, reason-6)
dobj(given-9, reason-6)
nsubj(given-9, you-7)
aux(given-9, have-8)
rcmod(reason-6, given-9)
cop(laws-14, is-10)
det(laws-14, the-13)
root(ROOT-0, laws-14)
prep_of(laws-14, nature-16)
advmod(laws-14, eventually-17)
dep(laws-14, result-18)
det(fetus-21, a-20)
prep_in(result-18, fetus-21)
partmod(fetus-21, becoming-22)
attr(becoming-22, survivable-23)
advmod(formed-26, fully-25)
amod(survivable-23, formed-26)
poss(organs-29, its-28)
dep(laws-14, organs-29)
conj_and(result-18, organs-29)
partmod(organs-29, functioning-30)
advmod(functioning-30, autonomously-31)
det(organism-36, the-34)
amod(organism-36, whole-35)
dep(laws-14, organism-36)
conj_and(result-18, organism-36)
partmod(organism-36, becoming-37)
advmod(independent-39, metaphysically-38)
acomp(becoming-37, independent-39)
det(time-44, that-43)
prep_at(induces-50, time-44)
det(law-47, the-46)
nsubj(induces-50, law-47)
prep_of(law-47, cause-and-effect-49)
conj_and(laws-14, induces-50)
dobj(induces-50, childbirth-51)

(ROOT
  (S ('' '')
    (NP (PRP You))
    (VP (MD must) (RB not)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP
              (NP (CD 28) (NN %))
              (PP (IN of)
                (NP (NNP US) (NNS births))))
            (VP (VBP are) (RB not)
              (VP (VBN induced)
                (ADVP (RB naturally))))))))
    (. .)))

nsubj(know-5, You-2)
aux(know-5, must-3)
neg(know-5, not-4)
root(ROOT-0, know-5)
complm(induced-14, that-6)
num(%-8, 28-7)
nsubjpass(induced-14, %-8)
nn(births-11, US-10)
prep_of(%-8, births-11)
auxpass(induced-14, are-12)
neg(induced-14, not-13)
ccomp(know-5, induced-14)
advmod(induced-14, naturally-15)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must) (RB not)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (NN baby))
              (NP (CD 24) (NNS weeks))
              (PP (IN from)
                (NP (NN conception))))
            (VP (MD can)
              (VP (VB live)
                (PP
                  (PP (IN on)
                    (NP
                      (NP (NNS machines))
                      (VP (VBG providing)
                        (NP
                          (NP (DT the) (NNS functions))
                          (PP (IN of)
                            (NP
                              (NP (NNS organs))
                              (PP (IN for)
                                (NP (NNS months)))))))))
                  (CC and)
                  (PP (IN within)
                    (FRAG
                      (NP (DT a) (JJ few) (NNS years))
                      (VP (VB be)
                        (NP (DT a) (JJ normal) (JJ healthy) (NN child))))))))))))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, must-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
complm(live-13, that-5)
det(baby-7, a-6)
nsubj(live-13, baby-7)
nsubj(live-13', baby-7)
num(weeks-9, 24-8)
dep(baby-7, weeks-9)
prep_from(baby-7, conception-11)
aux(live-13, can-12)
ccomp(know-4, live-13)
ccomp(know-4, live-13')
conj_and(live-13, live-13')
prep_on(live-13, machines-15)
prep_within(live-13', machines-15)
partmod(machines-15, providing-16)
det(functions-18, the-17)
dobj(providing-16, functions-18)
prep_of(functions-18, organs-20)
prep_for(organs-20, months-22)
det(years-27, a-25)
amod(years-27, few-26)
dep(live-13, years-27)
cop(child-32, be-28)
det(child-32, a-29)
amod(child-32, normal-30)
amod(child-32, healthy-31)
dep(years-27, child-32)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD must) (RB not)
        (VP (VB know)
          (SBAR (IN that)
            (S
              (NP (NN birth))
              (VP (VBZ does) (RB not)
                (VP (VB make)
                  (S
                    (NP (DT a) (NN human))
                    (ADJP (RB fully) (JJ independent)
                      (PP (IN from)
                        (NP (PRP$ its) (NN mother))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB still))
      (ADJP (RB physically) (JJ attached)))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, must-2)
neg(know-4, not-3)
ccomp(attached-22, know-4)
complm(make-9, that-5)
nsubj(make-9, birth-6)
aux(make-9, does-7)
neg(make-9, not-8)
ccomp(know-4, make-9)
det(human-11, a-10)
nsubj(independent-13, human-11)
advmod(independent-13, fully-12)
xcomp(make-9, independent-13)
poss(mother-16, its-15)
prep_from(independent-13, mother-16)
nsubj(attached-22, it-18)
cop(attached-22, is-19)
advmod(attached-22, still-20)
advmod(attached-22, physically-21)
root(ROOT-0, attached-22)

(ROOT
  (S
    (NP (NNP Partial-birth) (NN abortion))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ political) (NN term))
        (PP (IN for)
          (NP
            (NP (NNP Intact) (NN dilation)
              (CC and)
              (NN extraction))
            (CC and)
            (NP
              (NP (JJ several) (NNS variants))
              (PRN (-LRB- -LRB-)
                (NP (NN http:\/\/en.wikipedia.org\/wiki\/Partial-birth_abortion))
                (-RRB- -RRB-)))))))
    (. .)))

nn(abortion-2, Partial-birth-1)
nsubj(term-6, abortion-2)
cop(term-6, is-3)
det(term-6, a-4)
amod(term-6, political-5)
root(ROOT-0, term-6)
nn(dilation-9, Intact-8)
prep_for(term-6, dilation-9)
prep_for(term-6, extraction-11)
conj_and(dilation-9, extraction-11)
amod(variants-14, several-13)
prep_for(term-6, variants-14)
conj_and(dilation-9, variants-14)
appos(variants-14, http:\/\/en.wikipedia.org\/wiki\/Partial-birth_abortion-16)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must) (RB not)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP (RB not) (DT all) (NNS fetuses))
            (VP (VBP are)
              (ADJP (JJ survivable)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (VP (VBD birthed))))))))))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, must-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
complm(survivable-10, that-5)
neg(fetuses-8, not-6)
det(fetuses-8, all-7)
nsubj(survivable-10, fetuses-8)
cop(survivable-10, are-9)
ccomp(know-4, survivable-10)
advmod(birthed-12, when-11)
dep(survivable-10, birthed-12)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must) (RB not)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP (RB not) (DT all) (NNS fetuses))
            (VP (VBP are)
              (ADJP
                (ADJP (RB fully) (VBN formed))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (VP (VBD birthed))))))))))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, must-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
complm(formed-11, that-5)
neg(fetuses-8, not-6)
det(fetuses-8, all-7)
nsubj(formed-11, fetuses-8)
cop(formed-11, are-9)
advmod(formed-11, fully-10)
ccomp(know-4, formed-11)
advmod(birthed-13, when-12)
dep(formed-11, birthed-13)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must) (RB not)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP
              (NP (JJ spontaneous) (NNS abortions))
              (PRN (-LRB- -LRB-)
                (NP (NNS miscarriages))
                (-RRB- -RRB-)))
            (VP (VBP occur)
              (PP (IN on)
                (NP (DT a) (JJ regular) (NN basis))))))))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, must-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
complm(occur-11, that-5)
amod(abortions-7, spontaneous-6)
nsubj(occur-11, abortions-7)
appos(abortions-7, miscarriages-9)
ccomp(know-4, occur-11)
det(basis-15, a-13)
amod(basis-15, regular-14)
prep_on(occur-11, basis-15)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD must) (RB not)
      (VP (VB know)
        (SBAR (IN that)
          (S
            (NP
              (NP (DT a) (JJ fetus) (CD 5) (NNS seconds))
              (PP (IN before)
                (NP (NN birth))))
            (VP (VBZ is)
              (ADJP (RB physically) (JJ identical)
                (PP (IN in)
                  (NP
                    (NP (DT every) (NN way))
                    (PP (TO to)
                      (NP (DT the) (JJ same) (NN organism))))))
              (UCP
                (NP
                  (NP (CD 5) (NNS seconds))
                  (PP (IN after)
                    (NP (NN birth))))
                (CC and)
                (SBAR (IN that)
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP
                        (NP (DT no) (JJ magical) (JJ physical) (NN transformation))
                        (PP (IN during)
                          (NP (DT the) (VBG birthing) (NN process)))))))))))))
    (. .)))

nsubj(know-4, You-1)
aux(know-4, must-2)
neg(know-4, not-3)
root(ROOT-0, know-4)
complm(identical-14, that-5)
det(seconds-9, a-6)
amod(seconds-9, fetus-7)
num(seconds-9, 5-8)
nsubj(identical-14, seconds-9)
prep_before(seconds-9, birth-11)
cop(identical-14, is-12)
advmod(identical-14, physically-13)
ccomp(know-4, identical-14)
det(way-17, every-16)
prep_in(identical-14, way-17)
det(organism-21, the-19)
amod(organism-21, same-20)
prep_to(way-17, organism-21)
num(seconds-23, 5-22)
attr(identical-14, seconds-23)
prep_after(seconds-23, birth-25)
complm(is-29, that-27)
expl(is-29, there-28)
attr(identical-14, is-29)
conj_and(seconds-23, is-29)
det(transformation-33, no-30)
amod(transformation-33, magical-31)
amod(transformation-33, physical-32)
nsubj(is-29, transformation-33)
det(process-37, the-35)
amod(process-37, birthing-36)
prep_during(transformation-33, process-37)

(ROOT
  (S
    (S
      (ADVP (RB Wendy))
      (, ,)
      (NP (PRP you))
      (VP (VBP are) (RB not)
        (VP (VBG debating)
          (NP (DT the) (NN issue))
          (PP (IN at)
            (NP (NN hand)))
          (, ,)
          (S
            (VP (CC but)
              (VP
                (ADVP (RB simply))
                (VBG discounting)
                (NP (PRP$ my) (NNS statements))
                (PP (IN as)
                  (ADJP (JJ meaningless))))
              (CC and)
              (VP (VBG repeating)
                (SBAR (IN that)
                  (S
                    (NP (PRP you))
                    (VP (VBP have)
                      (VP (VBN laid)
                        (PRT (RP out))
                        (NP
                          (NP (DT a) (JJ solid) (NN case))
                          (PP (IN for)
                            (NP (PRP$ your) (NN position))))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (NP (PRP you))
                            (VP (VBP have) (RB not))))))))))))))
    (: ;)
    (S
      (NP (PRP you))
      (VP (VBP have) (RB not)
        (VP (VBN laid)
          (PP (IN out)
            (NP (DT any) (NN case))))))
    (. .)))

advmod(debating-6, Wendy-1)
nsubj(debating-6, you-3)
aux(debating-6, are-4)
neg(debating-6, not-5)
root(ROOT-0, debating-6)
det(issue-8, the-7)
dobj(debating-6, issue-8)
prep_at(debating-6, hand-10)
advmod(discounting-14, simply-13)
dep(debating-6, discounting-14)
poss(statements-16, my-15)
dobj(discounting-14, statements-16)
prep_as(discounting-14, meaningless-18)
dep(debating-6, repeating-20)
conj_and(discounting-14, repeating-20)
complm(laid-24, that-21)
nsubj(laid-24, you-22)
aux(laid-24, have-23)
ccomp(repeating-20, laid-24)
prt(laid-24, out-25)
det(case-28, a-26)
amod(case-28, solid-27)
dobj(laid-24, case-28)
poss(position-31, your-30)
prep_for(case-28, position-31)
dobj(have-34, which-32)
nsubj(have-34, you-33)
dep(laid-24, have-34)
neg(have-34, not-35)
nsubj(laid-40, you-37)
aux(laid-40, have-38)
neg(laid-40, not-39)
parataxis(debating-6, laid-40)
det(case-43, any-42)
prep_out(laid-40, case-43)

(ROOT
  (S
    (INTJ (VB Please))
    (VP (VB debate)
      (NP (DT the) (NN issue))
      (SBAR (IN so)
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB see)
              (NP (DT the) (NN truth)))))))
    (. .)))

dep(debate-2, Please-1)
root(ROOT-0, debate-2)
det(issue-4, the-3)
dobj(debate-2, issue-4)
mark(see-8, so-5)
nsubj(see-8, we-6)
aux(see-8, can-7)
advcl(debate-2, see-8)
det(truth-10, the-9)
dobj(see-8, truth-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT a) (NN physician))
          (VP (VBG pulling)
            (NP
              (NP (DT a) (NN fetus))
              (PP (RB out) (IN of)
                (NP (DT the) (NN birth) (NN canal))))))
        (VP (VBZ does) (RB not)
          (VP (VB constitute)
            (NP (DT a) (NN birth))))))
    (, ,)
    (NP
      (NP (RB then) (DT neither))
      (PP (IN of)
        (NP (PRP$ my) (NNS children))))
    (VP (VBD were) (`` ``)
      (VP (VBN born)))
    (. .)))

mark(constitute-14, If-1)
det(physician-3, a-2)
nsubj(constitute-14, physician-3)
partmod(physician-3, pulling-4)
det(fetus-6, a-5)
dobj(pulling-4, fetus-6)
det(canal-11, the-9)
nn(canal-11, birth-10)
prep_out_of(fetus-6, canal-11)
aux(constitute-14, does-12)
neg(constitute-14, not-13)
advcl(born-25, constitute-14)
det(birth-16, a-15)
dobj(constitute-14, birth-16)
advmod(neither-19, then-18)
nsubjpass(born-25, neither-19)
poss(children-22, my-21)
prep_of(neither-19, children-22)
auxpass(born-25, were-23)
root(ROOT-0, born-25)

(ROOT
  (S ('' '')
    (NP (DT Both))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN pulled)
              (PP (IN in)
                (NP
                  (NP (DT the) (JJ final) (NNS minutes))
                  (PP (IN of)
                    (NP (NN labor))))))))))
    (. .)))

nsubj(need-3, Both-2)
xsubj(pulled-6, Both-2)
root(ROOT-0, need-3)
aux(pulled-6, to-4)
auxpass(pulled-6, be-5)
xcomp(need-3, pulled-6)
det(minutes-10, the-8)
amod(minutes-10, final-9)
prep_in(pulled-6, minutes-10)
prep_of(minutes-10, labor-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT a) (NN physician))
          (VP (VBG pulling)
            (NP
              (NP (DT a) (NN fetus))
              (PP (RB out) (IN of)
                (NP (DT the) (NN birth) (NN canal))))))
        (VP (VBZ does) (RB not)
          (VP (VB constitute)
            (NP (DT a) (NN birth))))))
    (, ,)
    (NP
      (NP (RB then) (DT a) (NN physician))
      (VP (VBG performing)
        (NP (DT a) (NNP Cesarean))
        (ADVP (RB certainly))))
    (VP (MD would) (RB not)
      (VP (VB constitute)
        (NP (DT a) (NN birth))))
    (. .)))

mark(constitute-14, If-1)
det(physician-3, a-2)
nsubj(constitute-14, physician-3)
partmod(physician-3, pulling-4)
det(fetus-6, a-5)
dobj(pulling-4, fetus-6)
det(canal-11, the-9)
nn(canal-11, birth-10)
prep_out_of(fetus-6, canal-11)
aux(constitute-14, does-12)
neg(constitute-14, not-13)
advcl(constitute-27, constitute-14)
det(birth-16, a-15)
dobj(constitute-14, birth-16)
advmod(physician-20, then-18)
det(physician-20, a-19)
nsubj(constitute-27, physician-20)
partmod(physician-20, performing-21)
det(Cesarean-23, a-22)
dobj(performing-21, Cesarean-23)
advmod(performing-21, certainly-24)
aux(constitute-27, would-25)
neg(constitute-27, not-26)
root(ROOT-0, constitute-27)
det(birth-29, a-28)
dobj(constitute-27, birth-29)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (DT both))
        (PP (IN of)
          (NP (PRP$ my) (NNS children)))))
    (, ,)
    (NP
      (NP (DT the) (`` ``) (NNS laws))
      (PP (IN of)
        (NP (NN nature) (NNP DID) (NNP NOT))))
    (VP (VB induce)
      (NP
        (NP
          (NP (DT a) (JJ biological) (NN process))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ expels)))))
        (CC and)
        (NP
          (NP (NN organism))
          (VP
            (ADVP (RB fully))
            (VBN developed)
            (S
              (VP (TO to)
                (VP (VB function)
                  (ADVP (RB autonomously)))))
            ('' '')))))
    (. .)))

prep_for(induce-14, both-2)
poss(children-5, my-4)
prep_of(both-2, children-5)
det(laws-9, the-7)
nsubj(induce-14, laws-9)
nn(NOT-13, nature-11)
nn(NOT-13, DID-12)
prep_of(laws-9, NOT-13)
root(ROOT-0, induce-14)
det(process-17, a-15)
amod(process-17, biological-16)
dobj(induce-14, process-17)
nsubj(expels-19, process-17)
rcmod(process-17, expels-19)
dobj(induce-14, organism-21)
conj_and(process-17, organism-21)
nsubj(expels-19, organism-21)
xsubj(function-25, organism-21)
advmod(developed-23, fully-22)
partmod(organism-21, developed-23)
aux(function-25, to-24)
xcomp(developed-23, function-25)
advmod(function-25, autonomously-26)

(ROOT
  (S
    (S
      (NP (DT Both))
      (VP (VBD were)
        (VP (VBN induced)
          (PP (IN with)
            (NP (NN medicine))))))
    (, ,)
    (NP (NN labor))
    (VP (VBD did) (RB not)
      (ADVP (RB naturally))
      (VP (VB occur)))
    (. .)))

nsubjpass(induced-3, Both-1)
auxpass(induced-3, were-2)
ccomp(occur-11, induced-3)
prep_with(induced-3, medicine-5)
nsubj(occur-11, labor-7)
aux(occur-11, did-8)
neg(occur-11, not-9)
advmod(occur-11, naturally-10)
root(ROOT-0, occur-11)

(ROOT
  (S
    (S
      (NP (DT Both))
      (VP (VBD were)
        (VP (VBN born)
          (S
            (VP (VBN attached)
              (PP (TO to)
                (NP (DT an) (JJ umbilical) (NN cord))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBD were) (RB not)
      (ADJP (JJ autonomous)))
    (. .)))

nsubjpass(born-3, Both-1)
auxpass(born-3, were-2)
ccomp(autonomous-13, born-3)
dep(born-3, attached-4)
det(cord-8, an-6)
amod(cord-8, umbilical-7)
prep_to(attached-4, cord-8)
nsubj(autonomous-13, they-10)
cop(autonomous-13, were-11)
neg(autonomous-13, not-12)
root(ROOT-0, autonomous-13)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are)
        (ADJP (JJ correct))))
    (, ,)
    (S
      (NP (NN cesarean) (NNS births))
      (VP (VBP do) (RB not)
        (VP (VB change)
          (NP (DT the) (NN debate)))))
    (, ,)
    (S
      (NP (PRP they))
      (VP (VBP make)
        (S
          (NP (PRP it))
          (NP
            (NP (DT a) (JJR stronger) (NN case))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP
                  (VP
                    (ADVP (RB personhood))
                    (VBZ has)
                    (NP (NN nothing)
                      (S
                        (VP (TO to)
                          (VP (VB do)
                            (PP (IN with)
                              (NP (DT the) (NN birth))))))))
                  (CC and)
                  (VP (MD must)
                    (VP (VB exist)
                      (ADVP (RB before)))))))))))
    (. .)))

nsubj(correct-3, You-1)
cop(correct-3, are-2)
root(ROOT-0, correct-3)
nn(births-6, cesarean-5)
nsubj(change-9, births-6)
aux(change-9, do-7)
neg(change-9, not-8)
ccomp(correct-3, change-9)
det(debate-11, the-10)
dobj(change-9, debate-11)
nsubj(make-14, they-13)
ccomp(correct-3, make-14)
nsubj(case-18, it-15)
det(case-18, a-16)
amod(case-18, stronger-17)
xcomp(make-14, case-18)
nsubj(has-21, case-18)
nsubj(exist-30, case-18)
advmod(has-21, personhood-20)
rcmod(case-18, has-21)
dobj(has-21, nothing-22)
aux(do-24, to-23)
infmod(nothing-22, do-24)
det(birth-27, the-26)
prep_with(do-24, birth-27)
aux(exist-30, must-29)
rcmod(case-18, exist-30)
conj_and(has-21, exist-30)
advmod(exist-30, before-31)

