(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB believe)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (ADJP (JJ easy)
                  (S
                    (VP (TO to)
                      (VP (VB end)
                        (PRT (RP up))
                        (PP (IN like)
                          (NP (NNPS Nazis)))))))))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, do-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
complm(easy-9, that-5)
nsubj(easy-9, it-6)
aux(easy-9, would-7)
cop(easy-9, be-8)
ccomp(believe-4, easy-9)
aux(end-11, to-10)
xcomp(easy-9, end-11)
prt(end-11, up-12)
prep_like(end-11, Nazis-14)

(ROOT
  (S
    (PP (IN For)
      (NP (CD one) (NN thing)))
    (, ,)
    (NP (PRP we))
    (VP (VBP have)
      (NP (PRP$ their) (JJ cautionary) (NN example)))
    (. .)))

num(thing-3, one-2)
prep_for(have-6, thing-3)
nsubj(have-6, we-5)
root(ROOT-0, have-6)
poss(example-9, their-7)
amod(example-9, cautionary-8)
dobj(have-6, example-9)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB also))
      (VP (VB point)
        (PRT (RP out))
        (SBAR (IN that)
          (S
            (NP (PRP we))
            (VP (VBD did)
              (ADVP (RB intentionally))
              (VP (VB kill)
                (NP (JJ innocent) (NNS Germans)
                  (CC and)
                  (NNS Japanese))
                (PP (IN in)
                  (NP
                    (NP (PRP$ our) (NN fight))
                    (PP (IN against)
                      (NP (NN fascism)))))))))))
    (. .)))

nsubj(point-4, I-1)
aux(point-4, would-2)
advmod(point-4, also-3)
root(ROOT-0, point-4)
prt(point-4, out-5)
complm(kill-10, that-6)
nsubj(kill-10, we-7)
aux(kill-10, did-8)
advmod(kill-10, intentionally-9)
ccomp(point-4, kill-10)
amod(Germans-12, innocent-11)
dobj(kill-10, Germans-12)
dobj(kill-10, Japanese-14)
conj_and(Germans-12, Japanese-14)
poss(fight-17, our-16)
prep_in(kill-10, fight-17)
prep_against(fight-17, fascism-19)

(ROOT
  (S
    (NP (PRP We))
    (VP
      (VP (VBZ regretted)
        (NP (PRP it)))
      (, ,)
      (CC but)
      (VP (VBD did)
        (NP (PRP it))
        (ADVP (RB anyway))))
    (. .)))

nsubj(regretted-2, We-1)
nsubj(did-6, We-1)
root(ROOT-0, regretted-2)
dobj(regretted-2, it-3)
conj_but(regretted-2, did-6)
dobj(did-6, it-7)
advmod(did-6, anyway-8)

(ROOT
  (S
    (NP (PRP$ My) (NN point))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (ADVP (RB already))
          (VP (VB break)
            (NP
              (NP (DT this) (JJ basic) (NN tenet))
              (PP (IN of)
                (NP
                  (NP (NNP Natural) (NNP Law))
                  (SBAR
                    (S
                      (NP (EX there))
                      (VP (VBZ is)
                        (NP
                          (NP (NN nothing) (JJ absolute))
                          (PP (IN about)
                            (NP (PRP it))))))))))))))
    (. .)))

poss(point-2, My-1)
nsubj(is-3, point-2)
root(ROOT-0, is-3)
complm(break-7, that-4)
nsubj(break-7, we-5)
advmod(break-7, already-6)
ccomp(is-3, break-7)
det(tenet-10, this-8)
amod(tenet-10, basic-9)
dobj(break-7, tenet-10)
nn(Law-13, Natural-12)
prep_of(tenet-10, Law-13)
expl(is-15, there-14)
rcmod(Law-13, is-15)
nsubj(is-15, nothing-16)
amod(nothing-16, absolute-17)
prep_about(nothing-16, it-19)

(ROOT
  (S
    (S
      (ADVP (RB So))
      (, ,) (`` ``)
      (NP (JJ innocent) (JJ human) (NNS beings))
      (VP (MD should) (RB not)
        (VP (VB be)
          (VP
            (ADVP (RB intentionally))
            (VBN killed)
            (PP (IN without)
              (NP (DT a) (JJ good) (NN reason)))))))
    ('' '')
    (VP (VBZ appears)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (PRP$ our) (JJ practical) (NN standard))))))
    (. .)))

advmod(killed-11, So-1)
amod(beings-6, innocent-4)
amod(beings-6, human-5)
nsubjpass(killed-11, beings-6)
aux(killed-11, should-7)
neg(killed-11, not-8)
auxpass(killed-11, be-9)
advmod(killed-11, intentionally-10)
ccomp(appears-17, killed-11)
csubj(appears-17, killed-11)
det(reason-15, a-13)
amod(reason-15, good-14)
prep_without(killed-11, reason-15)
root(ROOT-0, appears-17)
aux(standard-22, to-18)
cop(standard-22, be-19)
poss(standard-22, our-20)
amod(standard-22, practical-21)
xcomp(appears-17, standard-22)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP state)
      (NP (PRP$ their) (NN position))
      (SBAR (IN as) (, ,)
        (S (`` ``)
          (S
            (NP (JJ innocent) (NN life))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN destroyed)
                  (SBAR (IN because)
                    (S
                      (NP (PRP it))
                      (VP (VBZ has) (RB not)
                        (VP (VBN moved)
                          (PRT (RP through))
                          (NP (JJ enough) (`` ``) (JJ functional) (, ,) (NNS behavioral) (, ,) (JJ physical)
                            (CC and)
                            (JJ social) (NNS dimensions) ('' ''))
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (VP (VBN considered)
                                  (NP (DT a) (NN person))))))))))))))
          (, ,) ('' '')
          (CC but)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (DT an) (JJ additional) (JJ important) (NNS criteria))
              (SBAR (IN once)
                (S
                  (NP (PRP we))
                  (VP (VBP go)
                    (PP (IN from)
                      (SBARQ (`` ``)
                        (WHADVP (WRB when))
                        (SQ (VBZ does)
                          (NP (DT a) (NN human))
                          (VP (VB begin)))
                        (. ?)))))))))))))

nsubj(state-2, You-1)
root(ROOT-0, state-2)
poss(position-4, their-3)
dobj(state-2, position-4)
mark(destroyed-12, as-5)
amod(life-9, innocent-8)
nsubjpass(destroyed-12, life-9)
aux(destroyed-12, can-10)
auxpass(destroyed-12, be-11)
advcl(state-2, destroyed-12)
mark(moved-17, because-13)
nsubj(moved-17, it-14)
aux(moved-17, has-15)
neg(moved-17, not-16)
advcl(destroyed-12, moved-17)
prt(moved-17, through-18)
amod(dimensions-28, enough-19)
amod(dimensions-28, functional-21)
conj_and(functional-21, behavioral-23)
amod(dimensions-28, behavioral-23)
conj_and(functional-21, physical-25)
amod(dimensions-28, physical-25)
conj_and(functional-21, social-27)
amod(dimensions-28, social-27)
dobj(moved-17, dimensions-28)
aux(considered-32, to-30)
auxpass(considered-32, be-31)
xcomp(moved-17, considered-32)
det(person-34, a-33)
dobj(considered-32, person-34)
expl(is-39, there-38)
advcl(state-2, is-39)
conj_but(destroyed-12, is-39)
det(criteria-43, an-40)
amod(criteria-43, additional-41)
amod(criteria-43, important-42)
nsubj(is-39, criteria-43)
mark(go-46, once-44)
nsubj(go-46, we-45)
advcl(is-39, go-46)
prep(go-46, from-47)
advmod(begin-53, when-49)
aux(begin-53, does-50)
det(human-52, a-51)
nsubj(begin-53, human-52)
dep(from-47, begin-53)

(ROOT
  (S ('' '')
    (NP (TO to))
    (VP (`` ``) (VBZ is)
      (ADJP
        (NP (NN abortion))
        (JJ legal)))
    (. ?)))

nsubj(legal-6, to-2)
cop(legal-6, is-4)
npadvmod(legal-6, abortion-5)
root(ROOT-0, legal-6)

(ROOT
  (S ('' '')
    (NP (PRP$ Their))
    (VP (VBZ is)
      (ADVP (RB now))
      (NP
        (NP (DT another) (NN person) (POS 's))
        (NN well)
        (S
          (VP (VBG being)
            (PP (IN at)
              (NP (NN stake)))))))
    (. .)))

nsubj(well-8, Their-2)
cop(well-8, is-3)
advmod(well-8, now-4)
det(person-6, another-5)
poss(well-8, person-6)
root(ROOT-0, well-8)
dep(well-8, being-9)
prep_at(being-9, stake-11)

(ROOT
  (S
    (NP
      (NP (DT Any) (NNS rights))
      (SBAR
        (S
          (NP (PRP we))
          (VP (VBP assign)
            (PP (TO to)
              (NP (DT the) (NN fetus)))))))
    (VP (MD will)
      (ADVP (RB always))
      (VP (VB need)
        (S
          (VP (TO to)
            (VP (VB be)
              (PP (VBN compared)
                (PP (TO to)
                  (NP
                    (NP (DT those))
                    (PP (IN of)
                      (NP (DT the) (JJ pregnant) (NN woman))))))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (NP (PRP we))
                  (VP (VBP consider)
                    (NP
                      (NP (DT the) (NNS implications))
                      (PP (IN of)
                        (NP (NN abortion))))))))))))
    (. .)))

det(rights-2, Any-1)
dobj(assign-4, rights-2)
nsubj(need-10, rights-2)
xsubj(be-12, rights-2)
nsubj(assign-4, we-3)
rcmod(rights-2, assign-4)
det(fetus-7, the-6)
prep_to(assign-4, fetus-7)
aux(need-10, will-8)
advmod(need-10, always-9)
root(ROOT-0, need-10)
aux(be-12, to-11)
xcomp(need-10, be-12)
prepc_compared_to(be-12, to-14)
pobj(be-12, those-15)
det(woman-19, the-17)
amod(woman-19, pregnant-18)
prep_of(those-15, woman-19)
advmod(consider-22, when-20)
nsubj(consider-22, we-21)
advcl(be-12, consider-22)
det(implications-24, the-23)
dobj(consider-22, implications-24)
prep_of(implications-24, abortion-26)

