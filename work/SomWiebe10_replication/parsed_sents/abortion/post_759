(ROOT
  (SQ (MD Could)
    (NP (PRP I))
    (ADVP (RB ever) (RB personally))
    (VP (VB see)
      (S
        (NP (PRP$ my) (NN mate))
        (VP (VB go)
          (PP (IN through)
            (NP (NN abortion))))))
    (. ?)))

aux(see-5, Could-1)
nsubj(see-5, I-2)
advmod(personally-4, ever-3)
advmod(see-5, personally-4)
root(ROOT-0, see-5)
poss(mate-7, my-6)
nsubj(go-8, mate-7)
ccomp(see-5, go-8)
prep_through(go-8, abortion-10)

(ROOT
  (SQ
    (VP (VB See)
      (S
        (NP (PRP$ my) (NN seed))
        (VP (VB fade)
          (PRT (RP away)))))
    (. ?)))

root(ROOT-0, See-1)
poss(seed-3, my-2)
nsubj(fade-4, seed-3)
ccomp(See-1, fade-4)
prt(fade-4, away-5)

(ROOT
  (FRAG
    (NP (NNP No))
    (ADVP (RB never))
    (. .)))

root(ROOT-0, No-1)
neg(No-1, never-2)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP
        (VP (VB burn)
          (PP (IN into)
            (NP (PRP$ my) (JJ very) (NN heart))))
        (CC and)
        (VP (VB leave)
          (NP (DT a) (JJ big) (NN scar)))))
    (. .)))

nsubj(burn-3, It-1)
nsubj(leave-9, It-1)
aux(burn-3, would-2)
root(ROOT-0, burn-3)
poss(heart-7, my-5)
amod(heart-7, very-6)
prep_into(burn-3, heart-7)
conj_and(burn-3, leave-9)
det(scar-12, a-10)
amod(scar-12, big-11)
dobj(leave-9, scar-12)

(ROOT
  (S (CC But)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (NNS people))
        (PP (IN out)
          (NP (RB there)))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP are)
              (ADJP (JJ willing)))))))
    (. .)))

cc(are-3, But-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
nsubj(are-3, people-4)
nsubj(willing-9, people-4)
prep(people-4, out-5)
pobj(out-5, there-6)
cop(willing-9, are-8)
rcmod(people-4, willing-9)

(ROOT
  (S
    (NP (DT Those) (NNS people))
    (VP (VBP deserve)
      (NP (DT that) (NN choice))
      (SBAR (RB even) (IN if)
        (S
          (NP (PRP it))
          (VP (VBZ means)
            (SBAR (IN that)
              (S
                (NP (DT a) (NN life))
                (VP (MD wo) (RB n't)
                  (VP (VB enter)
                    (NP (DT this) (NN world))))))))))
    (. .)))

det(people-2, Those-1)
nsubj(deserve-3, people-2)
root(ROOT-0, deserve-3)
det(choice-5, that-4)
dobj(deserve-3, choice-5)
advmod(means-9, even-6)
dep(means-9, if-7)
nsubj(means-9, it-8)
dep(deserve-3, means-9)
complm(enter-15, that-10)
det(life-12, a-11)
nsubj(enter-15, life-12)
aux(enter-15, wo-13)
neg(enter-15, n't-14)
ccomp(means-9, enter-15)
det(world-17, this-16)
dobj(enter-15, world-17)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (VBP 're)
        (ADVP (RB just))
        (VP (VBG hurting)
          (NP (PRP themselves)))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBZ 's) (RB not)
          (NP (PRP$ my) (NN choice))))
      (CC and)
      (S
        (NP (PRP I))
        (VP (MD wo) (RB n't)
          (VP (VB stop)
            (NP (PRP them))))))
    (. .)))

nsubj(hurting-4, They-1)
aux(hurting-4, 're-2)
advmod(hurting-4, just-3)
root(ROOT-0, hurting-4)
dobj(hurting-4, themselves-5)
nsubj(choice-12, it-8)
cop(choice-12, 's-9)
neg(choice-12, not-10)
poss(choice-12, my-11)
conj_but(hurting-4, choice-12)
nsubj(stop-17, I-14)
aux(stop-17, wo-15)
neg(stop-17, n't-16)
conj_but(hurting-4, stop-17)
conj_and(choice-12, stop-17)
dobj(stop-17, them-18)

