(ROOT
  (S
    (PP (IN By)
      (NP (PRP$ your) (NN logic)))
    (NP (PRP it))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ OK)
          (S
            (VP (TO to)
              (VP (VB kill)
                (NP (PRP you))
                (SBAR (IN if)
                  (S
                    (NP
                      (NP (DT the) (NN issue))
                      (PP (IN of)
                        (NP (NNP dependency))))
                    (VP (VBD was)
                      (NP
                        (NP (DT all))
                        (SBAR
                          (WHNP (WDT that))
                          (S
                            (VP (VBD was)
                              (VP (VBN needed)
                                (S
                                  (VP (TO to)
                                    (VP (VB justify)
                                      (NP (PRP$ your) (NN death)))))))))))))))))))
    (. .)))

poss(logic-3, your-2)
prep_by(OK-7, logic-3)
nsubj(OK-7, it-4)
aux(OK-7, would-5)
cop(OK-7, be-6)
root(ROOT-0, OK-7)
aux(kill-9, to-8)
xcomp(OK-7, kill-9)
dobj(kill-9, you-10)
mark(all-17, if-11)
det(issue-13, the-12)
nsubj(all-17, issue-13)
prep_of(issue-13, dependency-15)
cop(all-17, was-16)
advcl(kill-9, all-17)
nsubjpass(needed-20, all-17)
auxpass(needed-20, was-19)
rcmod(all-17, needed-20)
aux(justify-22, to-21)
xcomp(needed-20, justify-22)
poss(death-24, your-23)
dobj(justify-22, death-24)

