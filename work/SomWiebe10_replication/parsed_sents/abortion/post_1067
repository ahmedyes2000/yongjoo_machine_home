(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (VP (VBG questioning)
          (NP
            (NP (DT the) (JJ underlying) (NN principle))
            (PP (IN in)
              (NP (NN play))))
          (ADVP (RB here)))))
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN connection))
          (PP (IN between)
            (NP
              (NP (PDT all) (DT the) (NNS examples))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD gave)))))))))
    (. .)))

nsubj(questioning-3, I-1)
aux(questioning-3, 'm-2)
root(ROOT-0, questioning-3)
det(principle-6, the-4)
amod(principle-6, underlying-5)
dobj(questioning-3, principle-6)
prep_in(principle-6, play-8)
advmod(questioning-3, here-9)
expl(is-12, there-11)
conj_and(questioning-3, is-12)
det(connection-14, a-13)
nsubj(is-12, connection-14)
predet(examples-18, all-16)
det(examples-18, the-17)
prep_between(connection-14, examples-18)
dobj(gave-20, examples-18)
nsubj(gave-20, I-19)
rcmod(examples-18, gave-20)

(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD ca) (RB n't)
          (VP (VB see)
            (NP (DT the) (JJ underlying) (NN principle))
            (ADVP (RB here))))))
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB know)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (TO to)
              (VP (VB tell)
                (NP (PRP you))))))))
    (. .)))

mark(see-5, if-1)
nsubj(see-5, you-2)
aux(see-5, ca-3)
neg(see-5, n't-4)
advcl(know-13, see-5)
det(principle-8, the-6)
amod(principle-8, underlying-7)
dobj(see-5, principle-8)
advmod(see-5, here-9)
nsubj(know-13, I-10)
aux(know-13, do-11)
neg(know-13, n't-12)
root(ROOT-0, know-13)
nsubj(tell-16, what-14)
aux(tell-16, to-15)
ccomp(know-13, tell-16)
xcomp(know-13, tell-16)
dobj(tell-16, you-17)

(ROOT
  (S
    (S
      (NP (DT The) (NN argument))
      (VP (VBZ looks)
        (PP (IN like)
          (NP (DT this)))))
    (: :)
    (S
      (S
        (NP (NNP X))
        (VP (VBZ is) (RB not)
          (ADJP (JJ worthy)
            (PP (IN of)
              (NP
                (NP (NN life))
                (PP (RB because) (IN of)
                  (NP (NNP Y))))))))
      (, ,)
      (ADVP (RB therefore))
      (S
        (NP (PRP we))
        (VP (VBP 're)
          (ADJP (JJ justified)
            (PP (IN in)
              (S
                (VP (VBG killing)
                  (NP (PRP it)))))))))
    (. .)))

det(argument-2, The-1)
nsubj(looks-3, argument-2)
root(ROOT-0, looks-3)
prep_like(looks-3, this-5)
nsubj(worthy-10, X-7)
cop(worthy-10, is-8)
neg(worthy-10, not-9)
parataxis(looks-3, worthy-10)
prep_of(worthy-10, life-12)
prep_because_of(life-12, Y-15)
advmod(worthy-10, therefore-17)
nsubj(justified-20, we-18)
cop(justified-20, 're-19)
dep(worthy-10, justified-20)
prepc_in(justified-20, killing-22)
dobj(killing-22, it-23)

(ROOT
  (S
    (S
      (NP (RB Now))
      (ADVP (RB just))
      (VP
        (VP (VB put)
          (NP
            (NP (NNPS Jews))
            (, ,)
            (NP (NNS slaves))
            (, ,)
            (NP (NNS embryos))
            (CC or)
            (NP (WP what)))
          (PP
            (ADVP (RB ever))
            (IN in)
            (NP
              (NP (NN place))
              (PP (IN of) ('' '')
                (NP (NNP X))))))
        ('' '')
        (CC and)
        (VP (VB put)
          (NP (PRP$ your) (NN reason))
          (PP (IN in)
            (NP
              (NP (NN place))
              (PP (IN of) ('' '')
                (NP (NNP Y))))))))
    ('' '')
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP 've)
        (VP (VBN got)
          (NP (PRP$ your) (NN argument)))))
    (. .)))

nsubj(put-3, Now-1)
nsubj(put-19, Now-1)
advmod(put-3, just-2)
root(ROOT-0, put-3)
dobj(put-3, Jews-4)
dobj(put-3, slaves-6)
conj_or(Jews-4, slaves-6)
dobj(put-3, embryos-8)
conj_or(Jews-4, embryos-8)
dobj(put-3, what-10)
conj_or(Jews-4, what-10)
advmod(put-3, ever-11)
prep_in(put-3, place-13)
prep_of(place-13, X-16)
conj_and(put-3, put-19)
poss(reason-21, your-20)
dobj(put-19, reason-21)
prep_in_place_of(put-19, Y-26)
nsubj(got-31, you-29)
aux(got-31, 've-30)
conj_and(put-3, got-31)
poss(argument-33, your-32)
dobj(got-31, argument-33)

(ROOT
  (SQ (MD Can)
    (NP (PRP you))
    (VP (VB see)
      (NP
        (NP (DT the) (NN analogy))
        (PP (IN between)
          (NP (PRP them))))
      (ADVP (RB now)))
    (. ?)))

aux(see-3, Can-1)
nsubj(see-3, you-2)
root(ROOT-0, see-3)
det(analogy-5, the-4)
dobj(see-3, analogy-5)
prep_between(analogy-5, them-7)
advmod(see-3, now-8)

(ROOT
  (S (IN So)
    (NP (PRP$ my) (JJ principal) (NN objection))
    (VP (VBZ is)
      (PP (IN with)
        (NP
          (NP (NNP the) ('' '') (NNP Y))
          ('' '')
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (PRP you))
              (VP (VBP have)
                (NP (DT an) (NN embryo))
                (PP (IN for) ('' '')
                  (NP (NNP X)))))))))
    ('' '')))

dep(is-5, So-1)
poss(objection-4, my-2)
amod(objection-4, principal-3)
nsubj(is-5, objection-4)
root(ROOT-0, is-5)
nn(Y-9, the-7)
prep_with(is-5, Y-9)
tmod(have-13, Y-9)
advmod(have-13, when-11)
nsubj(have-13, you-12)
dep(Y-9, have-13)
det(embryo-15, an-14)
dobj(have-13, embryo-15)
prep_for(have-13, X-18)

