(ROOT
  (SINV (RB So)
    (VP (VBZ is))
    (NP
      (NP
        (NP (DT a) (NN human))
        (PP (IN in)
          (NP (NN development))))
      (, ,)
      (VP
        (ADVP (RB also))
        (VBN known)
        (PP (IN as)
          (NP (DT an) (NN embryo)
            (CC or)
            (NN fetus)))
        (, ,)
        (PP (IN among)
          (NP
            (NP (JJ other) (NNS names))
            (VP (VBG depending)
              (PRT (RP upon))
              (NP
                (NP (NN point))
                (PP (IN of)
                  (NP (NN development))))
              (, ,)
              (FRAG (RB not)
                (ADJP (JJ human))
                (. ?)))))))))

advmod(is-2, So-1)
root(ROOT-0, is-2)
det(human-4, a-3)
nsubj(is-2, human-4)
prep_in(human-4, development-6)
advmod(known-9, also-8)
partmod(human-4, known-9)
det(embryo-12, an-11)
prep_as(known-9, embryo-12)
prep_as(known-9, fetus-14)
conj_or(embryo-12, fetus-14)
amod(names-18, other-17)
prep_among(known-9, names-18)
partmod(names-18, depending-19)
prt(depending-19, upon-20)
dobj(depending-19, point-21)
prep_of(point-21, development-23)
dep(depending-19, not-25)
dep(not-25, human-26)

(ROOT
  (S (CC But)
    (NP (PRP they))
    (VP (VBP are))
    (. .)))

cc(are-3, But-1)
nsubj(are-3, they-2)
root(ROOT-0, are-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (JJ high) (NN school) (NN biology)))
    (. .)))

nsubj(biology-5, It-1)
cop(biology-5, 's-2)
amod(biology-5, high-3)
nn(biology-5, school-4)
root(ROOT-0, biology-5)

(ROOT
  (S
    (PP (TO To)
      (NP (DT the) (NN beginning)))
    (, ,)
    (S
      (VP (VBG giving)
        (NP (NN birth))))
    (VP (VBZ is) (RB not)
      (NP (DT a) (NN sentence)))
    (. .)))

det(beginning-3, the-2)
prep_to(sentence-10, beginning-3)
csubj(sentence-10, giving-5)
dobj(giving-5, birth-6)
cop(sentence-10, is-7)
neg(sentence-10, not-8)
det(sentence-10, a-9)
root(ROOT-0, sentence-10)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN consequence))
        (, ,)
        (PP (CC but)
          (NP
            (NP (DT a) (JJ deserved) (NN one))
            (PRN (-LRB- -LRB-)
              (SBAR (IN as)
                (S
                  (NP (DT all) (JJ true) (NNS consequences))
                  (VP (VBP are))))
              (-RRB- -RRB-))))))
    (. .)))

nsubj(consequence-4, It-1)
cop(consequence-4, is-2)
det(consequence-4, a-3)
root(ROOT-0, consequence-4)
prep(consequence-4, but-6)
det(one-9, a-7)
amod(one-9, deserved-8)
dep(but-6, one-9)
mark(are-15, as-11)
det(consequences-14, all-12)
amod(consequences-14, true-13)
nsubj(are-15, consequences-14)
dep(one-9, are-15)

(ROOT
  (S (CC And)
    (PP (IN of)
      (NP (NN course)))
    (, ,)
    (S
      (VP (VBG being)
        (ADJP (JJ pro-life))))
    (VP (VBZ refers)
      (PP (TO to)
        (NP
          (NP (DT the) (JJ actual) (, ,) (JJ real) (NN quality))
          (PP (IN of)
            (NP
              (NP (NN life))
              (: ;)
              (NP (RB not)
                (NP (DT the) (JJ whimsical) (, ,) (JJ transitory) (NN one))
                (ADVP (RB as)
                  (PP (IN in))))
              (: :)))))
      (S
        (VP (`` ``) (VB get)
          (NP (DT a) (NN life))
          ('' '')))
      (: ;)
      (SBAR (IN though)
        (S
          (NP (PRP we))
          (VP (VBP are)
            (ADJP (JJ pro-that))
            (ADVP (RB as) (RB well))))))
    (. .)))

cc(refers-7, And-1)
prep_of(refers-7, course-3)
cop(pro-life-6, being-5)
csubj(refers-7, pro-life-6)
root(ROOT-0, refers-7)
det(quality-13, the-9)
amod(quality-13, actual-10)
amod(quality-13, real-12)
prep_to(refers-7, quality-13)
prep_of(quality-13, life-15)
neg(one-22, not-17)
det(one-22, the-18)
amod(one-22, whimsical-19)
amod(one-22, transitory-21)
dep(life-15, one-22)
advmod(one-22, as-23)
prep(as-23, in-24)
ccomp(refers-7, get-27)
det(life-29, a-28)
dobj(get-27, life-29)
mark(pro-that-35, though-32)
nsubj(pro-that-35, we-33)
cop(pro-that-35, are-34)
advcl(refers-7, pro-that-35)
parataxis(refers-7, pro-that-35)
advmod(well-37, as-36)
mwe(well-37, as-36)
advmod(pro-that-35, well-37)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR
      (WHADVP (WRB where))
      (S
        (NP
          (NP (DT the) (NN birth))
          (PP (IN of)
            (NP (DT a) (NN child))))
        (ADVP (RB actually))
        (VP (VBZ threatens)
          (NP
            (NP (DT the) (JJ actual) (NN life))
            (PP (IN of)
              (NP (DT the) (NN mother)))))))
    (, ,)
    (NP (RB almost) (DT no) (NN one))
    (VP (VBZ believes)
      (SBAR
        (S
          (NP (NN abortion))
          (VP (MD should) (RB n't)
            (VP (VB be)
              (VP (VBN considered)))))))
    (. .)))

advmod(believes-21, Now-1)
advmod(threatens-10, where-3)
det(birth-5, the-4)
nsubj(threatens-10, birth-5)
det(child-8, a-7)
prep_of(birth-5, child-8)
advmod(threatens-10, actually-9)
advcl(believes-21, threatens-10)
det(life-13, the-11)
amod(life-13, actual-12)
dobj(threatens-10, life-13)
det(mother-16, the-15)
prep_of(life-13, mother-16)
advmod(one-20, almost-18)
det(one-20, no-19)
nsubj(believes-21, one-20)
root(ROOT-0, believes-21)
nsubjpass(considered-26, abortion-22)
aux(considered-26, should-23)
neg(considered-26, n't-24)
auxpass(considered-26, be-25)
ccomp(believes-21, considered-26)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (ADVP (RB still))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN treated)
          (PP (IN as)
            (NP (DT any) (JJ other) (NN killing))))))
    (. .)))

cc(treated-6, But-1)
nsubjpass(treated-6, it-2)
advmod(treated-6, still-3)
aux(treated-6, must-4)
auxpass(treated-6, be-5)
root(ROOT-0, treated-6)
det(killing-10, any-8)
amod(killing-10, other-9)
prep_as(treated-6, killing-10)

(ROOT
  (S
    (ADVP (RB Interestingly))
    (, ,)
    (PP (IN in)
      (NP
        (NP (DT the) (NN Declaration))
        (PP (IN of)
          (NP (NN Independence)))))
    (, ,)
    (NP (DT the) (CD three))
    (VP (VBD mentioned)
      (SBAR
        (S
          (NP (JJ inalienable) (NNS rights))
          (VP (VBP are)
            (VP (VBN listed)
              (PP (IN in)
                (NP (DT a) (JJ peculiar) (NN order)))
              (: :)
              (ADVP (RB almost) (RB as))
              (SBAR (IN if)
                (S
                  (NP (EX there))
                  (VP (VBZ 's)
                    (NP (DT a) (NN priority))))))))))
    (. .)))

advmod(mentioned-11, Interestingly-1)
det(Declaration-5, the-4)
prep_in(mentioned-11, Declaration-5)
prep_of(Declaration-5, Independence-7)
det(three-10, the-9)
nsubj(mentioned-11, three-10)
root(ROOT-0, mentioned-11)
amod(rights-13, inalienable-12)
nsubjpass(listed-15, rights-13)
auxpass(listed-15, are-14)
ccomp(mentioned-11, listed-15)
det(order-19, a-17)
amod(order-19, peculiar-18)
prep_in(listed-15, order-19)
advmod(as-22, almost-21)
advmod(listed-15, as-22)
mark('s-25, if-23)
expl('s-25, there-24)
advcl(listed-15, 's-25)
det(priority-27, a-26)
nsubj('s-25, priority-27)

(ROOT
  (S
    (LST (-LRB- -LRB-) (NN understated) (-RRB- -RRB-))
    (PP (IN For)
      (NP
        (SBAR (IN if)
          (S
            (NP
              (NP (CD one) (POS 's))
              (NN happiness))
            (VP (VBZ takes)
              (VP (VB precedence)
                (PRT (RP over))
                (NP (PRP$ your) (NN property))
                (PRN (, ,)
                  (ADVP (RB right)
                    (S
                      (VP (TO to)
                        (VP (VB speak)
                          (ADVP (RB freely))))))
                  (, ,))))))
        (CC or)
        (NP (RB even) (NN life))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (EX there))
            (VP (MD might)
              (VP
                (NP (PRP me))
                (PP
                  (ADVP
                    (NP (DT a) (JJ little) (NN mix))
                    (RB up))
                  (IN at)
                  (NP (DT the) (NN courthouse)))))))))
    (. .)))

dep(see-26, understated-2)
mark(takes-9, if-5)
poss(happiness-8, one-6)
nsubj(takes-9, happiness-8)
prep_for(see-26, takes-9)
xcomp(takes-9, precedence-10)
prt(precedence-10, over-11)
poss(property-13, your-12)
dobj(precedence-10, property-13)
dep(precedence-10, right-15)
aux(speak-17, to-16)
dep(right-15, speak-17)
advmod(speak-17, freely-18)
advmod(life-22, even-21)
conj_or(takes-9, life-22)
prep_for(see-26, life-22)
nsubj(see-26, I-24)
aux(see-26, can-25)
root(ROOT-0, see-26)
advmod(me-30, why-27)
expl(me-30, there-28)
aux(me-30, might-29)
advcl(see-26, me-30)
det(mix-33, a-31)
amod(mix-33, little-32)
npadvmod(up-34, mix-33)
advmod(me-30, up-34)
det(courthouse-37, the-36)
prep_at(me-30, courthouse-37)

(ROOT
  (S
    (NP
      (NP (DT No) (JJ real) (NN scientist))
      (CC or)
      (NP (NN doctor)))
    (VP (MD would)
      (VP (VB deny)
        (NP (DT that))))
    (. .)))

det(scientist-3, No-1)
amod(scientist-3, real-2)
nsubj(deny-7, scientist-3)
conj_or(scientist-3, doctor-5)
nsubj(deny-7, doctor-5)
aux(deny-7, would-6)
root(ROOT-0, deny-7)
dobj(deny-7, that-8)

(ROOT
  (S
    (ADVP (RB Well))
    (, ,)
    (VP (VBP are)
      (NP (PRP they))
      (PP (RB not)
        (NP (NNS beings))))
    (. ?)))

advmod(they-4, Well-1)
cop(they-4, are-3)
root(ROOT-0, they-4)
prep(they-4, not-5)
pobj(not-5, beings-6)

(ROOT
  (SQ (VBP Do)
    (NP (PRP they))
    (VP (RB not) (VB exist))
    (. ?)))

aux(exist-4, Do-1)
nsubj(exist-4, they-2)
neg(exist-4, not-3)
root(ROOT-0, exist-4)

(ROOT
  (SQ (VBP Are)
    (NP
      (NP (PRP they))
      (NP (RB not)))
    (ADJP (JJ real))
    (. ?)))

cop(real-4, Are-1)
nsubj(real-4, they-2)
dep(they-2, not-3)
root(ROOT-0, real-4)

(ROOT
  (SQ (VBP Are)
    (NP (PRP they))
    (ADJP (RB not) (VBN present))
    (. ?)))

aux(present-4, Are-1)
nsubj(present-4, they-2)
neg(present-4, not-3)
root(ROOT-0, present-4)

(ROOT
  (SBARQ
    (WHADVP
      (ADVP (RB Then))
      (WRB how))
    (SQ (MD can)
      (NP (PRP you))
      (VP
        (ADVP (RB physically))
        (VB remove)
        (NP (DT the) (JJ imaginary))))
    (. ?)))

advmod(how-2, Then-1)
advmod(remove-6, how-2)
aux(remove-6, can-3)
nsubj(remove-6, you-4)
advmod(remove-6, physically-5)
root(ROOT-0, remove-6)
det(imaginary-8, the-7)
dobj(remove-6, imaginary-8)

(ROOT
  (S
    (FRAG
      (INTJ (RB Now))
      (, ,)
      (PP (TO to)
        (NP (DT the) (JJ middle) (NN part))))
    (: ;)
    (S
      (NP (DT the) (NN issue))
      (VP (VBZ is)
        (PP (IN about)
          (NP
            (NP
              (NP (DT the) (NNS rights))
              (PP (IN of)
                (NP (CD two) (JJ human) (NNS beings))))
            (: :)
            (NP
              (NP (DT a) (NN mother))
              (CC and)
              (NP (DT a) (NN child)))))))
    (. .)))

dep(is-10, Now-1)
dep(Now-1, to-3)
det(part-6, the-4)
amod(part-6, middle-5)
pobj(to-3, part-6)
det(issue-9, the-8)
nsubj(is-10, issue-9)
root(ROOT-0, is-10)
det(rights-13, the-12)
prep_about(is-10, rights-13)
num(beings-17, two-15)
amod(beings-17, human-16)
prep_of(rights-13, beings-17)
det(mother-20, a-19)
dep(rights-13, mother-20)
det(child-23, a-22)
dep(rights-13, child-23)
conj_and(mother-20, child-23)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's) (RB not)
      (ADJP (RB even) (JJ debatable))
      (SBAR (IN since)
        (S
          (NP
            (NP (DT any) (NN doctor))
            (PP (JJ worth)
              (NP (PRP$ their) (NN degree))))
          (VP (MD must)
            (VP (VB admit)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN child))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (VBG living) (JJ human) (NN being))
                      (PP (IN from)
                        (NP (DT the) (NN beginning))))))))))))
    (. .)))

nsubj(debatable-5, That-1)
cop(debatable-5, 's-2)
neg(debatable-5, not-3)
advmod(debatable-5, even-4)
root(ROOT-0, debatable-5)
mark(admit-13, since-6)
det(doctor-8, any-7)
nsubj(admit-13, doctor-8)
prep(doctor-8, worth-9)
poss(degree-11, their-10)
dep(worth-9, degree-11)
aux(admit-13, must-12)
advcl(debatable-5, admit-13)
complm(being-21, that-14)
det(child-16, the-15)
nsubj(being-21, child-16)
cop(being-21, is-17)
det(being-21, a-18)
amod(being-21, living-19)
amod(being-21, human-20)
ccomp(admit-13, being-21)
det(beginning-24, the-23)
prep_from(being-21, beginning-24)

