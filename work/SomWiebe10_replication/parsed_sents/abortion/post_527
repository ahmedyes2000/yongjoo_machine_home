(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ does)
      (VP (VB appear)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP
                  (NP (DT a) (NN catch-22))
                  (-LRB- -LRB-)
                  (NP
                    (NP
                      (ADJP (JJ have)))
                    (NP (PRP you))))
                (VP (VBN read)
                  (NP (DT that) (NN book)))))))))
    (. ?)))

nsubj(appear-3, it-1)
xsubj(catch-22-7, it-1)
aux(appear-3, does-2)
root(ROOT-0, appear-3)
aux(catch-22-7, to-4)
cop(catch-22-7, be-5)
det(catch-22-7, a-6)
xcomp(appear-3, catch-22-7)
dep(catch-22-7, have-9)
dep(have-9, you-10)
partmod(catch-22-7, read-11)
det(book-13, that-12)
dobj(read-11, book-13)

(ROOT
  (NP (: ...) (JJ great) (NN book) (. .)))

amod(book-3, great-2)
root(ROOT-0, book-3)

(ROOT
  (S (`` ``)
    (NP (EX there))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ dead) (NN man))
        (PP (IN in)
          (NP (PRP$ my) (NN tent)))))
    (. .)))

expl('s-3, there-2)
root(ROOT-0, 's-3)
det(man-6, a-4)
amod(man-6, dead-5)
nsubj('s-3, man-6)
poss(tent-9, my-8)
prep_in(man-6, tent-9)

(ROOT
  (S
    (NP (NN liberty)
      (CC and)
      (NN life))
    (VP (VBP are) (RB not)
      (NP (JJ separate) (NNS issues)))
    (. .)))

nsubj(issues-7, liberty-1)
conj_and(liberty-1, life-3)
nsubj(issues-7, life-3)
cop(issues-7, are-4)
neg(issues-7, not-5)
amod(issues-7, separate-6)
root(ROOT-0, issues-7)

(ROOT
  (NP
    (NP
      (NP (NN life))
      (PP
        (PP (IN without)
          (NP (NN liberty)))
        (PRN (-LRB- -LRB-)
          (CC and)
          (VP (VBD screw)
            (NP (PDT all) (DT the) (JJ other) (NNS kinds))))))
    (: ...)))

root(ROOT-0, life-1)
prep_without(life-1, liberty-3)
dep(screw-6, and-5)
dep(life-1, screw-6)
predet(kinds-10, all-7)
det(kinds-10, the-8)
amod(kinds-10, other-9)
dobj(screw-6, kinds-10)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT the) (NN freedom))
        (PP (IN of)
          (NP (JJ simple) (NNS BEING)))
        (SBAR
          (WHNP (WDT that))
          (PRN
            (S
              (NP (PRP we))
              (VP (VBP are)
                (VP (VBG talking) (IN about))))
            (-RRB- -RRB-))
          (S
            (VP (VBZ is)
              (ADJP (RB essentially) (JJ meaningless)))))))
    (. .)))

nsubj(freedom-4, it-1)
cop(freedom-4, 's-2)
det(freedom-4, the-3)
root(ROOT-0, freedom-4)
nsubj(meaningless-16, freedom-4)
amod(BEING-7, simple-6)
prep_of(freedom-4, BEING-7)
nsubj(talking-11, we-9)
aux(talking-11, are-10)
dep(meaningless-16, talking-11)
dep(talking-11, about-12)
cop(meaningless-16, is-14)
advmod(meaningless-16, essentially-15)
rcmod(freedom-4, meaningless-16)

(ROOT
  (S
    (NP (DT this))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (NP (DT the) (NN freedom)
          (S
            (VP (TO to)
              (VP (VB walk)
                (PRT (RP around))
                (NP
                  (NP (NN punching) (NNS people))
                  (PP (IN in)
                    (NP (DT the) (NN face))))))))))
    (. .)))

nsubj(mean-4, this-1)
aux(mean-4, does-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
det(freedom-6, the-5)
dobj(mean-4, freedom-6)
aux(walk-8, to-7)
infmod(freedom-6, walk-8)
prt(walk-8, around-9)
nn(people-11, punching-10)
dobj(walk-8, people-11)
det(face-14, the-13)
prep_in(people-11, face-14)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (NP (DT the) (NN freedom)
        (S
          (VP (TO to)
            (VP (VB walk)
              (PRT (RP around))
              (PP (IN without)
                (S
                  (VP (VBG being)
                    (VP (VBN told)
                      (SBAR (IN that)
                        (S
                          (NP (PRP you))
                          (VP (MD may)
                            (CC or)
                            (MD may) (RB not)
                            (VP (VB walk)
                              (PRT (RP around)))))))))))))))
    (. .)))

nsubj(freedom-4, it-1)
cop(freedom-4, is-2)
det(freedom-4, the-3)
root(ROOT-0, freedom-4)
aux(walk-6, to-5)
infmod(freedom-4, walk-6)
prt(walk-6, around-7)
auxpass(told-10, being-9)
prepc_without(walk-6, told-10)
complm(walk-17, that-11)
nsubj(walk-17, you-12)
aux(walk-17, may-13)
ccomp(told-10, may-15)
aux(walk-17, may-15)
conj_or(walk-17, may-15)
neg(walk-17, not-16)
ccomp(told-10, walk-17)
prt(walk-17, around-18)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (NP (DT the) (NN freedom)
        (S
          (VP (TO to)
            (VP (VB speak)
              (PP (IN without)
                (S
                  (VP (VBG being)
                    (VP (VBN told)
                      (SBAR
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (TO to)
                              (VP (VB say)))))
                        (CC or)
                        (SBAR
                          (WHADVP (WRB when)
                            (CC and)
                            (WRB how))
                          (S
                            (VP (TO to)
                              (VP (VB say)
                                (NP (PRP it))))))))))))))))
    (. .)))

nsubj(freedom-4, it-1)
cop(freedom-4, is-2)
det(freedom-4, the-3)
root(ROOT-0, freedom-4)
aux(speak-6, to-5)
infmod(freedom-4, speak-6)
auxpass(told-9, being-8)
prepc_without(speak-6, told-9)
nsubj(say-12, what-10)
nsubj(say-18, what-10)
aux(say-12, to-11)
dep(told-9, say-12)
advmod(say-18, when-14)
dep(when-14, and-15)
dep(when-14, how-16)
aux(say-18, to-17)
dep(told-9, say-18)
conj_or(say-12, say-18)
dobj(say-18, it-19)

(ROOT
  (FRAG
    (NP (DT This))
    (. .)))

root(ROOT-0, This-1)

(ROOT
  (S
    (NP (NNS THIS))
    (VP (VBZ is)
      (NP (DT the) (NN freedom))
      (SBAR (IN that)
        (S
          (NP (FW i))
          (VP (VBP am)
            (VP (VBG speak)
              (PP (IN of)))))))
    (. .)))

nsubj(freedom-4, THIS-1)
cop(freedom-4, is-2)
det(freedom-4, the-3)
root(ROOT-0, freedom-4)
complm(speak-8, that-5)
nsubj(speak-8, i-6)
aux(speak-8, am-7)
ccomp(freedom-4, speak-8)
prep(speak-8, of-9)

(ROOT
  (S
    (NP
      (NP (DT the) (JJ ultimate) (NN right))
      (PP (IN of)
        (NP
          (NP (NN choice))
          (PP (IN over)
            (NP (CD one))))))
    (VP (VBZ 's)
      (NP (JJ own) (NN body)))
    (. .)))

det(right-3, the-1)
amod(right-3, ultimate-2)
nsubj(body-10, right-3)
prep_of(right-3, choice-5)
prep_over(choice-5, one-7)
cop(body-10, 's-8)
amod(body-10, own-9)
root(ROOT-0, body-10)

(ROOT
  (S
    (VP (VB OWN)
      (NP (NN body)))
    (. .)))

root(ROOT-0, OWN-1)
dobj(OWN-1, body-2)

(ROOT
  (S
    (NP (NNP ''))
    (VP (VBZ -RRB-))
    (. .)))


(ROOT
  (S
    (NP (DT that))
    (VP (VBZ 's)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (FW i))
          (VP
            (VP (VBD proposed)
              (SBAR (IN that)
                (S
                  (SBAR (IN if)
                    (S
                      (NP (DT the) (JJ medical) (NN community))
                      (VP (VBZ thinks)
                        (NP (PRP it))
                        (PP (IN worth)
                          (NP (DT the) (NN cost)
                            (CC and)
                            (NN effort)))
                        (S
                          (VP (TO to)
                            (VP (VB support)
                              (NP (DT the) (NN life))))))))
                  (: ...)
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (NP (DT a) (JJ different) (NN procedure))
                    (ADVP (RB altogether))))))
            (CC and)
            (VP (VBZ frees)
              (NP (DT the) (NN woman))
              (PP (IN from)
                (NP
                  (NP (DT the) (NN enslavement))
                  (PP (IN of)
                    (NP
                      (NP (DT a) (VBN forced) (NN pregnancy))
                      (PRN (-LRB- -LRB-)
                        (PP (IN as)
                          (UCP
                            (ADJP (IN in))
                            (: :)
                            (NP
                              (NP (NNS laws))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBP ban)
                                    (NP (JJ aborted) (NNS pregnancies))))))))
                        (-RRB- -RRB-)))))))))))
    (. .)))

nsubj('s-2, that-1)
root(ROOT-0, 's-2)
advmod(proposed-5, why-3)
nsubj(proposed-5, i-4)
nsubj(frees-30, i-4)
advcl('s-2, proposed-5)
complm(procedure-27, that-6)
mark(thinks-11, if-7)
det(community-10, the-8)
amod(community-10, medical-9)
nsubj(thinks-11, community-10)
xsubj(support-19, community-10)
advcl(procedure-27, thinks-11)
dobj(thinks-11, it-12)
det(cost-15, the-14)
prep_worth(thinks-11, cost-15)
prep_worth(thinks-11, effort-17)
conj_and(cost-15, effort-17)
aux(support-19, to-18)
xcomp(thinks-11, support-19)
det(life-21, the-20)
dobj(support-19, life-21)
nsubj(procedure-27, it-23)
cop(procedure-27, 's-24)
det(procedure-27, a-25)
amod(procedure-27, different-26)
ccomp(proposed-5, procedure-27)
advmod(procedure-27, altogether-28)
advcl('s-2, frees-30)
conj_and(proposed-5, frees-30)
det(woman-32, the-31)
dobj(frees-30, woman-32)
det(enslavement-35, the-34)
prep_from(frees-30, enslavement-35)
det(pregnancy-39, a-37)
amod(pregnancy-39, forced-38)
prep_of(enslavement-35, pregnancy-39)
dep(pregnancy-39, as-41)
pobj(as-41, in-42)
dep(in-42, laws-44)
nsubj(ban-46, laws-44)
rcmod(laws-44, ban-46)
amod(pregnancies-48, aborted-47)
dobj(ban-46, pregnancies-48)

(ROOT
  (FRAG (RB not)
    (NP
      (NP (DT that))
      (PP (IN of)
        (NP (NNS others))))
    (. .)))

root(ROOT-0, not-1)
dep(not-1, that-2)
prep_of(that-2, others-4)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN right))
        (SBAR
          (WHPP (IN for)
            (WHNP (WDT which)))
          (S
            (NP (PRP you))
            (VP (VBP have)
              (VP (VBD said)
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP are)
                      (ADJP (JJ willing)
                        (S
                          (VP (TO to)
                            (VP (VB die)
                              (SBAR (IN for)
                                (S
                                  (VP (TO to)
                                    (VP (VB ensure)
                                      (SBAR (IN that)
                                        (S
                                          (VP (VBZ is)
                                            (ADJP (JJ possible)
                                              (PP (IN for)
                                                (NP (NNS others))))))))))))))))))))))))
    (. .)))

nsubj(right-4, it-1)
cop(right-4, is-2)
det(right-4, the-3)
root(ROOT-0, right-4)
rel(said-9, which-6)
nsubj(said-9, you-7)
aux(said-9, have-8)
rcmod(right-4, said-9)
nsubj(willing-12, you-10)
cop(willing-12, are-11)
ccomp(said-9, willing-12)
aux(die-14, to-13)
xcomp(willing-12, die-14)
mark(ensure-17, for-15)
aux(ensure-17, to-16)
advcl(die-14, ensure-17)
xcomp(die-14, ensure-17)
complm(possible-20, that-18)
cop(possible-20, is-19)
ccomp(ensure-17, possible-20)
prep_for(possible-20, others-22)

(ROOT
  (S
    (NP (DT that))
    (VP (VBZ is)
      (NP (PRP$ your) (NN choice)))
    (. .)))

nsubj(choice-4, that-1)
cop(choice-4, is-2)
poss(choice-4, your-3)
root(ROOT-0, choice-4)

(ROOT
  (SINV
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBD had)
            (NP
              (NP (DT that) (NN choice))
              (VP (VBN made)
                (PP (IN for)
                  (NP (PRP you)))
                (SBAR (IN as)
                  (S
                    (NP
                      (NP (DT the) (VBN drafted) (NNS boy-soldiers))
                      (PP (IN of)
                        (NP (NN vietnam))))
                    (VP (VBD had)
                      (S
                        (NP (PRP it))
                        (VP (VBN made)
                          (PP (IN for)
                            (NP (PRP them)))))))))))))
      (NP (PRP it))
      (VP (MD would) (RB n't)
        (VP (VB be)
          (ADJP (JJ free)))))
    (, ,)
    (VP (MD would))
    (NP (PRP it))
    (. ?)))

mark(had-3, if-1)
nsubj(had-3, you-2)
advcl(free-24, had-3)
det(choice-5, that-4)
dobj(had-3, choice-5)
partmod(choice-5, made-6)
prep_for(made-6, you-8)
mark(had-15, as-9)
det(boy-soldiers-12, the-10)
amod(boy-soldiers-12, drafted-11)
nsubj(had-15, boy-soldiers-12)
prep_of(boy-soldiers-12, vietnam-14)
advcl(made-6, had-15)
nsubj(made-17, it-16)
ccomp(had-15, made-17)
prep_for(made-17, them-19)
nsubj(free-24, it-20)
aux(free-24, would-21)
neg(free-24, n't-22)
cop(free-24, be-23)
ccomp(would-26, free-24)
root(ROOT-0, would-26)
nsubj(would-26, it-27)

(ROOT
  (S
    (PP (IN in)
      (NP (NN fact)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (VP (VBN drafted)
            (PP (IN into)
              (NP
                (NP (DT the) (NN army))
                (, ,)
                (NP (NN mr.) (NN richardson))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN enslaved)
          (PP (TO to)
            (NP (PRP$ your) (JJ own) (NN country))))))
    (. .)))

prep_in(enslaved-18, fact-2)
mark(drafted-7, if-4)
nsubjpass(drafted-7, you-5)
auxpass(drafted-7, were-6)
advcl(enslaved-18, drafted-7)
det(army-10, the-9)
prep_into(drafted-7, army-10)
nn(richardson-13, mr.-12)
appos(army-10, richardson-13)
nsubjpass(enslaved-18, you-15)
aux(enslaved-18, would-16)
auxpass(enslaved-18, be-17)
root(ROOT-0, enslaved-18)
poss(country-22, your-20)
amod(country-22, own-21)
prep_to(enslaved-18, country-22)

(ROOT
  (S
    (S
      (NP (DT this))
      (VP (VBZ is)
        (NP
          (NP (DT an) (NN issue))
          (PP (IN of)
            (NP (NN freedom))))))
    (, ,)
    (FRAG
      (INTJ (UH yes)))
    (. .)))

nsubj(issue-4, this-1)
cop(issue-4, is-2)
det(issue-4, an-3)
root(ROOT-0, issue-4)
prep_of(issue-4, freedom-6)
dep(issue-4, yes-8)

(ROOT
  (S (CC but)
    (NP (DT this))
    (VP (VBZ is) (RB n't)
      (VP (VBN JUST)
        (PP (IN about)
          (NP
            (NP (`` ``) (JJ reproductive) ('' '') (NN freedom))
            (, ,)
            (NP (NN mr.) (NN richardson))))))
    (. .)))

cc(JUST-5, but-1)
nsubjpass(JUST-5, this-2)
auxpass(JUST-5, is-3)
neg(JUST-5, n't-4)
root(ROOT-0, JUST-5)
amod(freedom-10, reproductive-8)
prep_about(JUST-5, freedom-10)
nn(richardson-13, mr.-12)
appos(freedom-10, richardson-13)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN freedom))
        (PP (IN of)
          (NP (DT the) (JJ whole) (NN woman)))))
    (. .)))

nsubj(freedom-4, it-1)
cop(freedom-4, is-2)
det(freedom-4, the-3)
root(ROOT-0, freedom-4)
det(woman-8, the-6)
amod(woman-8, whole-7)
prep_of(freedom-4, woman-8)

(ROOT
  (S
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP ban)
            (NP (NN abortion)))))
      (, ,)
      (NP (PRP you))
      (VP (VB reduce)
        (NP (NNS women))
        (PRT (RP down))
        (SBAR
          (SBAR
            (S
              (VP (TO to)
                (VP (VB merely)
                  (NP (PRP$ their) (NNS wombs))))))
          (CC and)
          (SBAR
            (WHNP (WP what))
            (S
              (NP (PRP they))
              (VP (MD can)
                (VP (VB do)
                  (CC and)
                  (VB define)
                  (NP
                    (NP (DT the) (NN woman))
                    (CONJP (RB as) (RB merely))
                    (NP (DT that))))))))))
    (: :)
    (S
      (NP
        (NP (DT a) (JJ reproductive) (NN organ))
        (VP (VBN housed)
          (PP (IN in)
            (NP (NN skin)
              (CC and)
              (NN bone)
              (CC and)
              (NN muscle)))))
      (VP (VBD topped)
        (PRT (RP off))
        (PP (IN with)
          (NP (DT a) (JJ useless) (NN brain)))))
    (. .)))

mark(ban-3, if-1)
nsubj(ban-3, you-2)
advcl(reduce-7, ban-3)
dobj(ban-3, abortion-4)
nsubj(reduce-7, you-6)
root(ROOT-0, reduce-7)
dobj(reduce-7, women-8)
prt(reduce-7, down-9)
aux(merely-11, to-10)
dep(reduce-7, merely-11)
poss(wombs-13, their-12)
dobj(merely-11, wombs-13)
dobj(do-18, what-15)
nsubj(do-18, they-16)
nsubj(define-20, they-16)
aux(do-18, can-17)
dep(reduce-7, do-18)
conj_and(merely-11, do-18)
conj_and(merely-11, define-20)
conj_and(do-18, define-20)
det(woman-22, the-21)
dobj(do-18, woman-22)
dobj(do-18, that-25)
conj_merely(woman-22, that-25)
det(organ-29, a-27)
amod(organ-29, reproductive-28)
nsubj(topped-37, organ-29)
partmod(organ-29, housed-30)
prep_in(housed-30, skin-32)
prep_in(housed-30, bone-34)
conj_and(skin-32, bone-34)
prep_in(housed-30, muscle-36)
conj_and(skin-32, muscle-36)
parataxis(reduce-7, topped-37)
prt(topped-37, off-38)
det(brain-42, a-40)
amod(brain-42, useless-41)
prep_with(topped-37, brain-42)

(ROOT
  (S
    (NP
      (NP (DT the) (NN woman) (POS 's))
      (NN woman) (NNS parts))
    (VP (VBP are)
      (ADJP
        (ADJP (JJR greater))
        (SBAR (IN than)
          (S
            (NP
              (NP (DT the) (NN sum))
              (PP (IN of)
                (NP (PRP$ her) (NN whole))))
            (VP (VBZ is)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP you))
                  (ADVP (RB then))
                  (VP (VBP say)))))))))
    (. .)))

det(woman-2, the-1)
poss(parts-5, woman-2)
nn(parts-5, woman-4)
nsubj(greater-7, parts-5)
cop(greater-7, are-6)
root(ROOT-0, greater-7)
mark(is-14, than-8)
det(sum-10, the-9)
nsubj(is-14, sum-10)
poss(whole-13, her-12)
prep_of(sum-10, whole-13)
dep(greater-7, is-14)
dobj(say-18, what-15)
nsubj(say-18, you-16)
advmod(say-18, then-17)
ccomp(is-14, say-18)

(ROOT
  (FRAG
    (NP
      (NP (FW i))
      (SBAR
        (S
          (VP (VBP say)))))
    (: :)
    (S (MD would)
      (NP (PRP you))
      (VP (VB feel)
        (NP (DT the) (JJ same) (NN way))
        (SBAR (IN if)
          (S
            (NP (PRP it))
            (VP (VBD were)
              (NP (PRP you)))))))
    (. ?)))

root(ROOT-0, i-1)
rcmod(i-1, say-2)
dep(feel-6, would-4)
nsubj(feel-6, you-5)
dep(i-1, feel-6)
det(way-9, the-7)
amod(way-9, same-8)
dobj(feel-6, way-9)
mark(you-13, if-10)
nsubj(you-13, it-11)
cop(you-13, were-12)
advcl(feel-6, you-13)

(ROOT
  (S
    (NP (DT that))
    (VP (VBZ 's)
      (NP (DT the) (JJ whole) (NN point)))
    (. .)))

nsubj(point-5, that-1)
cop(point-5, 's-2)
det(point-5, the-3)
amod(point-5, whole-4)
root(ROOT-0, point-5)

(ROOT
  (UCP
    (S (MD would)
      (NP (PRP you))
      (VP (VB say)))
    (: :)
    (NP
      (NP (PRP I))
      (SBAR
        (S
          (NP (PRP I))
          (, ,)
          (VP (VBP say)
            (NP (DT the) (NN I)))))
      (PP (IN with)
        (S
          (VP (VBG feeling)
            (NP
              (NP (NNP !!!))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (ADJP (JJ worth)
                      (PP (CC less)
                        (PP (IN than)
                          (NP (PRP$ my) (NN womb)))))))))))))
    (. .)))

dep(say-3, would-1)
nsubj(say-3, you-2)
root(ROOT-0, say-3)
dep(say-3, I-5)
nsubj(say-8, I-6)
rcmod(I-5, say-8)
det(I-10, the-9)
dobj(say-8, I-10)
prepc_with(I-5, feeling-12)
dobj(feeling-12, !!!-13)
nsubj(worth-16, I-14)
cop(worth-16, am-15)
rcmod(!!!-13, worth-16)
cc(worth-16, less-17)
poss(womb-20, my-19)
prep_than(worth-16, womb-20)

(ROOT
  (NP (-LRB- -LRB-)
    (NP (NNP ARE))
    (NP
      (NP (PRP you))
      (ADJP (JJ worth) (JJR less))
      (ADVP (RB then))
      (NP (CD one) (NN part)))
    (PP (IN of)
      (NP (PRP you)))
    (. ?)))

root(ROOT-0, ARE-2)
dep(ARE-2, you-3)
amod(you-3, worth-4)
dep(worth-4, less-5)
advmod(you-3, then-6)
num(part-8, one-7)
dep(you-3, part-8)
prep_of(ARE-2, you-10)

(ROOT
  (S (RB Is)
    (NP (PRP$ your))
    (VP (VBZ freedom))
    (. ?) (-RRB- -RRB-)))

advmod(freedom-3, Is-1)
nsubj(freedom-3, your-2)
root(ROOT-0, freedom-3)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am)
      (ADJP
        (ADJP (JJR less))
        (PP (IN than)
          (NP (PRP$ my) (NN womb)))))
    (. .)))

nsubj(less-3, I-1)
cop(less-3, am-2)
root(ROOT-0, less-3)
poss(womb-6, my-5)
prep_than(less-3, womb-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB no) (RB right))
      (S
        (VP (TO to)
          (VP (VB do)
            (SBAR (IN as)
              (S
                (NP (PRP I))
                (VP (VBP please)
                  (S
                    (VP
                      (PRN (-LRB- -LRB-)
                        (PP (IN with)
                          (NP (PRP$ my) (NN body)))
                        (-RRB- -RRB-))
                      (PP (IN for)
                        (NP
                          (NP (DT the) (NN sake))
                          (PP (IN of)
                            (NP (PRP$ my) (NN womb)))))))
                  (SBAR (IN because)
                    (S
                      (NP (NN nature))
                      (VP (VBZ has)
                        (VP (VBN designated)
                          (NP (PRP$ my) (NN womb)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (NP (DT the) (NN carrier)))))))))))))))))
    (. .)))

nsubj(have-2, I-1)
xsubj(do-6, I-1)
root(ROOT-0, have-2)
advmod(right-4, no-3)
advmod(have-2, right-4)
aux(do-6, to-5)
xcomp(have-2, do-6)
mark(please-9, as-7)
nsubj(please-9, I-8)
advcl(do-6, please-9)
ccomp(please-9, with-11)
poss(body-13, my-12)
pobj(with-11, body-13)
det(sake-17, the-16)
prep_for(with-11, sake-17)
poss(womb-20, my-19)
prep_of(sake-17, womb-20)
mark(designated-24, because-21)
nsubj(designated-24, nature-22)
aux(designated-24, has-23)
advcl(please-9, designated-24)
poss(womb-26, my-25)
dobj(designated-24, womb-26)
aux(carrier-30, to-27)
cop(carrier-30, be-28)
det(carrier-30, the-29)
infmod(womb-26, carrier-30)

(ROOT
  (SBARQ
    (WHADVP (WRB how))
    (SQ (VBZ does)
      (NP (DT that))
      (VP (VB make)
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP feel)
              (S
                (VP (TO to)
                  (VP (VB know)
                    (SBAR (IN that)
                      (S
                        (NP (PRP you))
                        (VP (VBP are)
                          (ADJP (JJ worth)
                            (PP (CC less)
                              (PP (IN than)
                                (NP
                                  (NP (DT a) (JJ single) (NN part))
                                  (PP (IN of)
                                    (NP (PRP you))))))))))))))))))
    (. ?)))

advmod(make-4, how-1)
aux(make-4, does-2)
nsubj(make-4, that-3)
root(ROOT-0, make-4)
nsubj(feel-6, you-5)
xsubj(know-8, you-5)
ccomp(make-4, feel-6)
aux(know-8, to-7)
xcomp(feel-6, know-8)
complm(worth-12, that-9)
nsubj(worth-12, you-10)
cop(worth-12, are-11)
ccomp(know-8, worth-12)
cc(worth-12, less-13)
det(part-17, a-15)
amod(part-17, single-16)
prep_than(worth-12, part-17)
prep_of(part-17, you-19)

(ROOT
  (INTJ (UH ...)))


(ROOT
  (S (: ...)
    (ADJP (RB mr.) (JJ richardson))
    (, ,)
    (NP (FW i))
    (ADVP (RB never))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBD said)
            (SBAR
              (S
                (NP (NN abortion))
                (VP (VBD was)
                  (ADJP (JJ unnatural)))))))))
    (. .)))

advmod(richardson-3, mr.-2)
dep(said-7, richardson-3)
nsubj(said-7, i-5)
neg(said-7, never-6)
root(ROOT-0, said-7)
nsubj(said-9, you-8)
ccomp(said-7, said-9)
nsubj(unnatural-12, abortion-10)
cop(unnatural-12, was-11)
ccomp(said-9, unnatural-12)

(ROOT
  (S
    (NP
      (NP (FW i))
      (VP (VBN mentioned)
        (NP
          (NP (NN nature))
          (CC and)
          (NP (JJ medical) (NN science)))
        (SBAR (IN because)
          (S
            (NP (PRP you))
            (VP (VBD did))))))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADVP (RB merely))
            (NP
              (NP (NN nature))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBZ designs)
                    (NP (DT a) (NN woman)
                      (S
                        (VP (TO to)
                          (VP (VB carry)
                            (NP (DT the) (NN child))))))))))))))
    (. .)))

nsubj(say-10, i-1)
partmod(i-1, mentioned-2)
dobj(mentioned-2, nature-3)
amod(science-6, medical-5)
dobj(mentioned-2, science-6)
conj_and(nature-3, science-6)
mark(did-9, because-7)
nsubj(did-9, you-8)
advcl(mentioned-2, did-9)
root(ROOT-0, say-10)
nsubj(nature-14, it-11)
cop(nature-14, 's-12)
advmod(nature-14, merely-13)
ccomp(say-10, nature-14)
nsubj(designs-16, nature-14)
rcmod(nature-14, designs-16)
det(woman-18, a-17)
dobj(designs-16, woman-18)
aux(carry-20, to-19)
infmod(woman-18, carry-20)
det(child-22, the-21)
dobj(carry-20, child-22)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP say)
      (SBAR
        (S
          (NP (DT the) (NN child))
          (VP (VBZ has)
            (NP (DT no) (NN choice))))))
    (. .)))

nsubj(say-2, you-1)
root(ROOT-0, say-2)
det(child-4, the-3)
nsubj(has-5, child-4)
ccomp(say-2, has-5)
det(choice-7, no-6)
dobj(has-5, choice-7)

(ROOT
  (SQ (VBD did)
    (NP (FW i))
    (VP (VB choose)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (DT a) (NN woman))))))
    (. ?)))

aux(choose-3, did-1)
nsubj(choose-3, i-2)
xsubj(woman-7, i-2)
root(ROOT-0, choose-3)
aux(woman-7, to-4)
cop(woman-7, be-5)
det(woman-7, a-6)
xcomp(choose-3, woman-7)

(ROOT
  (SQ (VBD did)
    (NP (PRP you))
    (VP (VB choose)
      (S
        (VP (TO to)
          (VP (VB be)
            (NP (DT a) (NN man))))))
    (. ?)))

aux(choose-3, did-1)
nsubj(choose-3, you-2)
xsubj(man-7, you-2)
root(ROOT-0, choose-3)
aux(man-7, to-4)
cop(man-7, be-5)
det(man-7, a-6)
xcomp(choose-3, man-7)

(ROOT
  (S
    (NP (PRP we))
    (VP (VBD had)
      (NP
        (NP (DT no) (NN choice))
        (PP (IN in)
          (NP (PRP$ our) (NN sex)))))
    (. .)))

nsubj(had-2, we-1)
root(ROOT-0, had-2)
det(choice-4, no-3)
dobj(had-2, choice-4)
poss(sex-7, our-6)
prep_in(choice-4, sex-7)

(ROOT
  (S
    (NP (DT that))
    (VP (VBZ 's)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (FW i))
          (VP (VBP 've)
            (VP (VBN been)
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (PRT (RP across)))))))))))
    (. .)))

nsubj('s-2, that-1)
root(ROOT-0, 's-2)
dobj(trying-7, what-3)
nsubj(trying-7, i-4)
xsubj(get-9, i-4)
aux(trying-7, 've-5)
aux(trying-7, been-6)
ccomp('s-2, trying-7)
aux(get-9, to-8)
xcomp(trying-7, get-9)
prt(get-9, across-10)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP have)
      (NP (DT a) (NN choice)
        (S
          (VP (TO to)
            (VP (RB not) (VB bear)
              (NP (DT a) (NN child))))))
      (, ,)
      (ADVP (RB though)))
    (. .)))

nsubj(have-2, i-1)
root(ROOT-0, have-2)
det(choice-4, a-3)
dobj(have-2, choice-4)
aux(bear-7, to-5)
neg(bear-7, not-6)
infmod(choice-4, bear-7)
det(child-9, a-8)
dobj(bear-7, child-9)
advmod(have-2, though-11)

(ROOT
  (SBARQ
    (WHADVP (IN that))
    (SQ (VBZ is)
      (NP (DT the) (NN freedom) (FW i))
      (VP (VBN have)
        (PP (IN over)
          (NP (PRP$ my) (NN body)))
        (, ,)
        (SBAR (IN though)
          (S
            (NP (FW i))
            (VP (VBD chose) (RB not)
              (NP (DT the) (NN form)))))))
    (. .)))

advmod(have-6, that-1)
auxpass(have-6, is-2)
det(freedom-4, the-3)
nsubjpass(have-6, freedom-4)
dep(freedom-4, i-5)
root(ROOT-0, have-6)
poss(body-9, my-8)
prep_over(have-6, body-9)
mark(chose-13, though-11)
nsubj(chose-13, i-12)
advcl(have-6, chose-13)
neg(chose-13, not-14)
det(form-16, the-15)
dobj(chose-13, form-16)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ does) (RB n't)
      (VP (VB matter)
        (NP
          (NP (NN intent))
          (PP (IN of)
            (NP
              (NP
                (NP (NN lack))
                (PP (IN of)
                  (NP (NN intent)
                    (CC or)
                    (NN accident))))
              (CC or)
              (NP
                (NP (NN design))
                (PP (IN of)
                  (NP (NN nature)))))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT a) (NN fetus))
            (VP (VBZ is)
              (PP (IN inside)
                (NP (DT the) (NN womb))))))))
    (: ...)))

nsubj(matter-4, it-1)
aux(matter-4, does-2)
neg(matter-4, n't-3)
root(ROOT-0, matter-4)
dobj(matter-4, intent-5)
prep_of(intent-5, lack-7)
prep_of(lack-7, intent-9)
prep_of(lack-7, accident-11)
conj_or(intent-9, accident-11)
prep_of(intent-5, design-13)
conj_or(lack-7, design-13)
prep_of(design-13, nature-15)
advmod(is-19, when-16)
det(fetus-18, a-17)
nsubj(is-19, fetus-18)
advcl(matter-4, is-19)
det(womb-22, the-21)
prep_inside(is-19, womb-22)

(ROOT
  (SBAR (IN if)
    (S
      (NP (NNP MY) (NN freedom))
      (VP (VBZ is)
        (PP (IN at)
          (NP (NN stake)))))
    (: ...)))

mark(is-4, if-1)
nn(freedom-3, MY-2)
nsubj(is-4, freedom-3)
root(ROOT-0, is-4)
prep_at(is-4, stake-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP (DT a) (NN right)
        (S
          (VP (TO to)
            (VP (VB keep)
              (NP (PRP it)))))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
det(right-4, a-3)
dobj(have-2, right-4)
aux(keep-6, to-5)
infmod(right-4, keep-6)
dobj(keep-6, it-7)

(ROOT
  (S
    (NP (PRP$ my) (NN body))
    (VP (VBZ IS)
      (NP (PRP$ my) (NN choice)))
    (. .)))

poss(body-2, my-1)
nsubj(choice-5, body-2)
cop(choice-5, IS-3)
poss(choice-5, my-4)
root(ROOT-0, choice-5)

(ROOT
  (FRAG
    (ADVP (RB again))
    (. .)))

root(ROOT-0, again-1)

(ROOT
  (S
    (VP (VB see)
      (NP (DT the) (JJ last) (NN paragraph)))
    (. .)))

root(ROOT-0, see-1)
det(paragraph-4, the-2)
amod(paragraph-4, last-3)
dobj(see-1, paragraph-4)

(ROOT
  (SBAR (IN because)
    (S
      (NP (EX there))
      (VP (VBP are)
        (NP
          (NP (NNS choices))
          (PP (IN in)
            (NP (DT the) (NN choice))))))
    (: ...)))

mark(are-3, because-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
nsubj(are-3, choices-4)
det(choice-7, the-6)
prep_in(choices-4, choice-7)

(ROOT
  (S
    (NP (NN abortion))
    (VP (VBZ is)
      (NP (CD one))
      (SBAR (IN until)
        (S
          (NP
            (NP (DT the) (NN life))
            (PP (IN of)
              (NP (DT the) (VBG growing) (NN fetus))))
          (VP (VBZ outweighs)
            (NP
              (NP (DT the) (NNS demands))
              (PP (IN of)
                (NP
                  (NP (NN freedom))
                  (PP (IN of)
                    (NP (DT the) (NN mother))))))))))
    (. .)))

nsubj(one-3, abortion-1)
cop(one-3, is-2)
root(ROOT-0, one-3)
mark(outweighs-11, until-4)
det(life-6, the-5)
nsubj(outweighs-11, life-6)
det(fetus-10, the-8)
amod(fetus-10, growing-9)
prep_of(life-6, fetus-10)
advcl(one-3, outweighs-11)
det(demands-13, the-12)
dobj(outweighs-11, demands-13)
prep_of(demands-13, freedom-15)
det(mother-18, the-17)
prep_of(freedom-15, mother-18)

(ROOT
  (S
    (VP (VB come)
      (PRT (RP on)))
    (. .)))

root(ROOT-0, come-1)
prt(come-1, on-2)

(ROOT
  (S (CC but)
    (NP (DT that))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD can)
              (ADVP (RB simply))
              (VP (VB allow)
                (NP
                  (NP (DT the) (NN enslavement))
                  (PP (IN of)
                    (NP (CD one) (NN individual))))
                (PP (TO to)
                  (NP (DT another)))))))))
    (. .)))

cc(mean-5, but-1)
nsubj(mean-5, that-2)
aux(mean-5, does-3)
neg(mean-5, n't-4)
root(ROOT-0, mean-5)
nsubj(allow-9, you-6)
aux(allow-9, can-7)
advmod(allow-9, simply-8)
ccomp(mean-5, allow-9)
det(enslavement-11, the-10)
dobj(allow-9, enslavement-11)
num(individual-14, one-13)
prep_of(enslavement-11, individual-14)
prep_to(allow-9, another-16)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (JJ medical) (NN community))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ has)
                  (VP (VBN provided)
                    (NP
                      (NP (NNS women))
                      (PP (IN with)
                        (NP (DT a) (JJ safe) (NN means))))
                    (PP (TO to)
                      (NP (NN something) (NNS women))))))))
          (VP (VBP have)
            (VP (VBN been)
              (VP (VBG doing)
                (SBAR (IN for)
                  (S
                    (NP
                      (NP (NNS thousands))
                      (PP (IN of)
                        (NP (NNS years))))
                    (VP (MD must)
                      (VP (VB provide)
                        (NP (DT an) (NN alternative))))))))))))
    (. .)))

nsubj(means-2, it-1)
root(ROOT-0, means-2)
complm(doing-20, that-3)
det(community-6, the-4)
amod(community-6, medical-5)
nsubj(provided-9, community-6)
nsubj(doing-20, community-6)
aux(provided-9, has-8)
rcmod(community-6, provided-9)
dobj(provided-9, women-10)
det(means-14, a-12)
amod(means-14, safe-13)
prep_with(women-10, means-14)
nn(women-17, something-16)
prep_to(provided-9, women-17)
aux(doing-20, have-18)
aux(doing-20, been-19)
ccomp(means-2, doing-20)
mark(provide-26, for-21)
nsubj(provide-26, thousands-22)
prep_of(thousands-22, years-24)
aux(provide-26, must-25)
advcl(doing-20, provide-26)
det(alternative-28, an-27)
dobj(provide-26, alternative-28)

(ROOT
  (S
    (NP (DT that))
    (VP (VBZ 's)
      (NP (DT all)))
    (. .)))

nsubj(all-3, that-1)
cop(all-3, 's-2)
root(ROOT-0, all-3)

(ROOT
  (S
    (NP (EX there))
    (VP (VBP need) (RB n't)
      (VP (VB be)
        (NP (DT a) (JJ catch-22))))
    (: ...)))

expl(need-2, there-1)
root(ROOT-0, need-2)
neg(need-2, n't-3)
cop(catch-22-6, be-4)
det(catch-22-6, a-5)
dep(need-2, catch-22-6)
nsubj(need-2, catch-22-6)

(ROOT
  (S
    (NP (EX there))
    (VP (VBZ does) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT a) (JJ dead) (NN man))
                (PP (IN in)
                  (NP (PRP$ your) (NN tent))))
              (, ,)
              (S (RB so)
                (VP (TO to)
                  (VP (VB speak)))))))))
    (. .)))

expl(have-4, there-1)
xsubj(man-9, there-1)
aux(have-4, does-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
aux(man-9, to-5)
cop(man-9, be-6)
det(man-9, a-7)
amod(man-9, dead-8)
xcomp(have-4, man-9)
poss(tent-12, your-11)
prep_in(man-9, tent-12)
advmod(speak-16, so-14)
aux(speak-16, to-15)
xcomp(man-9, speak-16)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP 're)
      (NP
        (NP (DT the) (JJ only) (NN person))
        (SBAR
          (S
            (NP (FW i))
            (VP (VBP feel)
              (SBAR (IN like)
                (S
                  (NP (FW i))
                  (VP (MD can)
                    (ADVP (RB actually))
                    (VP (VB speak)
                      (PP (IN with)
                        (NP
                          (NP (RB about) (DT this) (NN subject))
                          (PRN (-LRB- -LRB-)
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (NP (NN doesn) (NN t))
                                (ADVP (RB just))
                                (VP (VBP agree)
                                  (PP (IN with)
                                    (NP (PRP me))))))
                            (-RRB- -RRB-)))))))))))))
    (. .)))

nsubj(person-5, you-1)
cop(person-5, 're-2)
det(person-5, the-3)
amod(person-5, only-4)
root(ROOT-0, person-5)
nsubj(feel-7, i-6)
rcmod(person-5, feel-7)
mark(speak-12, like-8)
nsubj(speak-12, i-9)
aux(speak-12, can-10)
advmod(speak-12, actually-11)
advcl(feel-7, speak-12)
advmod(subject-16, about-14)
det(subject-16, this-15)
prep_with(speak-12, subject-16)
dobj(agree-22, who-18)
nn(t-20, doesn-19)
nsubj(agree-22, t-20)
advmod(agree-22, just-21)
dep(subject-16, agree-22)
prep_with(agree-22, me-24)

(ROOT
  (S
    (S
      (ADVP (RB so))
      (, ,)
      (NP (PRP you))
      (VP (VBP know)))
    (: ...)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (ADVP (RB still))
            (VP (VBG thinking)
              (SBAR
                (S
                  (NP (FW i))
                  (VP (VBP 'm)
                    (VP (VBG saying)
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBP 're)
                            (VP (VBG saying)
                              (NP (NNS things))))))))))))))
      (NP (PRP you))
      (VP (VBP 're) (RB not)))
    (. .)))

advmod(know-4, so-1)
nsubj(know-4, you-3)
root(ROOT-0, know-4)
mark(thinking-10, if-6)
nsubj(thinking-10, you-7)
aux(thinking-10, 're-8)
advmod(thinking-10, still-9)
advcl('re-19, thinking-10)
nsubj(saying-13, i-11)
aux(saying-13, 'm-12)
ccomp(thinking-10, saying-13)
nsubj(saying-16, you-14)
aux(saying-16, 're-15)
ccomp(saying-13, saying-16)
dobj(saying-16, things-17)
nsubj('re-19, you-18)
parataxis(know-4, 're-19)
neg('re-19, not-20)

(ROOT
  (S
    (ADVP (RB well) (RB then))
    (, ,)
    (ADVP (RB just))
    (VP (VB tell)
      (NP (PRP me)))
    (. .)))

advmod(then-2, well-1)
advmod(tell-5, then-2)
advmod(tell-5, just-4)
root(ROOT-0, tell-5)
dobj(tell-5, me-6)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP do)
      (ADVP (RB sometimes))
      (VP (VB read)
        (S
          (NP (NNS things))
          (ADJP (JJ wrong)))))
    (. .)))

nsubj(read-4, i-1)
aux(read-4, do-2)
advmod(read-4, sometimes-3)
root(ROOT-0, read-4)
nsubj(wrong-6, things-5)
xcomp(read-4, wrong-6)

(ROOT
  (S
    (NP (FW i))
    (VP (VBP 'm) (RB not)
      (VP (VBG fucking)
        (ADJP (JJ perfect))))
    (. .)))

nsubj(fucking-4, i-1)
aux(fucking-4, 'm-2)
neg(fucking-4, not-3)
root(ROOT-0, fucking-4)
acomp(fucking-4, perfect-5)

(ROOT
  (S
    (S
      (NP (PRP it))
      (VP (VBD was)
        (NP
          (NP (DT the) (JJ last) (NN thing))
          (SBAR
            (S
              (NP (FW i))
              (VP (VBD said) (, ,)
                (S
                  (VP (VBG k.r.)
                    (SBAR
                      (S
                        (NP (EX there))
                        (VP (VBP are)
                          (NP
                            (NP (DT some) (NNS people))
                            (PP (IN on)
                              (NP (RB here)))
                            (SBAR
                              (WHNP (WDT that))
                              (S
                                (VP (VBP think)
                                  (SBAR (IN that) (IN because)
                                    (S
                                      (NP (FW i))
                                      (VP (MD will)
                                        (VP
                                          (ADVP (RB never))
                                          (PP (IN under)
                                            (NP (DT any) (NNS circumstances))))))))))))))))))))))
    (: ...)
    (CC and)
    (S
      (NP (FW i))
      (VP (VBP do) (RB n't)
        (VP (VB care)
          (SBAR (IN if)
            (S
              (NP (PRP it))
              (VP (VBD meant)
                (SBAR (IN that)
                  (S
                    (NP
                      (QP (CD ten) (CD million))
                      (NNS babies))
                    (VP (MD would)
                      (VP (VB die)
                        (VP (VB support)
                          (NP
                            (NP (DT the) (JJ forced) (NN use))
                            (PP (IN of)
                              (NP
                                (NP
                                  (NP
                                    (NP (CD one) (NN person) (POS 's))
                                    (NN body))
                                  (PP (IN for)
                                    (NP (DT the) (NNS needs)))
                                  (, ,)
                                  (VP (VBZ wants))
                                  (, ,))
                                (CC or)
                                (NP
                                  (NP (NNS expectations))
                                  (PP (IN of)
                                    (NP (DT another))))))))))))))))))
    (. .)))

nsubj(thing-5, it-1)
cop(thing-5, was-2)
det(thing-5, the-3)
amod(thing-5, last-4)
root(ROOT-0, thing-5)
dobj(said-7, thing-5)
nsubj(said-7, i-6)
rcmod(thing-5, said-7)
xcomp(said-7, k.r.-9)
expl(are-11, there-10)
ccomp(k.r.-9, are-11)
det(people-13, some-12)
nsubj(are-11, people-13)
nsubj(think-17, people-13)
prep(people-13, on-14)
pobj(on-14, here-15)
rcmod(people-13, think-17)
complm(never-22, that-18)
dep(never-22, because-19)
nsubj(never-22, i-20)
aux(never-22, will-21)
ccomp(think-17, never-22)
det(circumstances-25, any-24)
prep_under(never-22, circumstances-25)
nsubj(care-31, i-28)
aux(care-31, do-29)
neg(care-31, n't-30)
conj_and(thing-5, care-31)
dobj(said-7, care-31)
mark(meant-34, if-32)
nsubj(meant-34, it-33)
advcl(care-31, meant-34)
complm(die-40, that-35)
number(million-37, ten-36)
num(babies-38, million-37)
nsubj(die-40, babies-38)
aux(die-40, would-39)
ccomp(meant-34, die-40)
xcomp(die-40, support-41)
det(use-44, the-42)
amod(use-44, forced-43)
dobj(support-41, use-44)
num(person-47, one-46)
poss(body-49, person-47)
prep_of(use-44, body-49)
det(needs-52, the-51)
prep_for(body-49, needs-52)
dep(body-49, wants-54)
prep_of(use-44, expectations-57)
conj_or(body-49, expectations-57)
prep_of(expectations-57, another-59)

(ROOT
  (PP (IN for)
    (NP (WDT whatever) (NN reason))
    (: ...)))

root(ROOT-0, for-1)
dep(reason-3, whatever-2)
pobj(for-1, reason-3)

(ROOT
  (S
    (SBAR
      (WHNP (WP who))
      (S
        (VP (VBP think)
          (SBAR (IN that) (IN because)
            (S
              (NP (FW i))
              (VP (MD would)
                (ADVP (RB never))
                (VP (VB support)
                  (NP (DT that)))))))))
    (, ,)
    (ADVP (RB obviously))
    (NP (FW i))
    (ADVP (RB just))
    (VP (VBP do) (RB n't)
      (VP (VB give)
        (NP
          (NP (CD two) (NNS shits))
          (PP (IN about)
            (NP (NN life)
              (CC and)
              (JJ innocent) (NNS beings))))))
    (. .)))

nsubj(think-2, who-1)
dep(give-16, think-2)
complm(support-8, that-3)
dep(support-8, because-4)
nsubj(support-8, i-5)
aux(support-8, would-6)
neg(support-8, never-7)
ccomp(think-2, support-8)
dobj(support-8, that-9)
advmod(give-16, obviously-11)
nsubj(give-16, i-12)
advmod(give-16, just-13)
aux(give-16, do-14)
neg(give-16, n't-15)
root(ROOT-0, give-16)
num(shits-18, two-17)
dobj(give-16, shits-18)
nn(beings-23, life-20)
conj_and(life-20, innocent-22)
nn(beings-23, innocent-22)
prep_about(shits-18, beings-23)

(ROOT
  (S
    (ADVP (RB obviously))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's) (RB not)
      (ADJP (JJ true)))
    (. .)))

advmod(true-6, obviously-1)
nsubj(true-6, that-3)
cop(true-6, 's-4)
neg(true-6, not-5)
root(ROOT-0, true-6)

