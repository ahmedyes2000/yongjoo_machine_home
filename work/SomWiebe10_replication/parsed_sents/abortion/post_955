(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD should)
        (ADVP (RBR further))
        (VP (VB say)
          (S
            (VP (TO to)
              (VP (VB disprove)
                (NP (DT this) (NN argument))
                (SBAR
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP have)
                        (S
                          (VP (TO to)
                            (VP (VB falsify)
                              (NP
                                (NP (PRP it) (POS 's))
                                (JJ key) (NN premise))))))))
                  (CC and)
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBZ is)))))))))))
    (: :)
    (S
      (NP (NN abortion))
      (VP (VBZ takes)
        (S
          (NP
            (NP (DT the) (NN life))
            (PP (IN of)
              (NP (DT an) (JJ innocent) (NN human))))
          (VP (VBG being)
            (NP
              (NP (DT That))
              ('' '')
              (SBAR
                (WHADVP (WRB why))
                (S
                  (NP (DT this) (JJ whole) (NN debate))
                  (VP (VBZ hinges)
                    (PP (IN on)
                      (NP
                        (NP (CD one) (JJ key) (NN question))
                        (: :)
                        (SBARQ
                          (WHNP (WP What))
                          (SQ (VBZ is)
                            (NP (PRP it)))
                          (. ?))))))))))))))

nsubj(say-4, I-1)
xsubj(disprove-6, I-1)
aux(say-4, should-2)
advmod(say-4, further-3)
root(ROOT-0, say-4)
aux(disprove-6, to-5)
xcomp(say-4, disprove-6)
det(argument-8, this-7)
dobj(disprove-6, argument-8)
nsubj(have-10, you-9)
xsubj(falsify-12, you-9)
dep(disprove-6, have-10)
aux(falsify-12, to-11)
xcomp(have-10, falsify-12)
poss(premise-16, it-13)
amod(premise-16, key-15)
dobj(falsify-12, premise-16)
nsubj(is-19, that-18)
dep(disprove-6, is-19)
conj_and(have-10, is-19)
nsubj(takes-22, abortion-21)
parataxis(say-4, takes-22)
det(life-24, the-23)
nsubj(That-30, life-24)
det(human-28, an-26)
amod(human-28, innocent-27)
prep_of(life-24, human-28)
cop(That-30, being-29)
dep(takes-22, That-30)
advmod(hinges-36, why-32)
det(debate-35, this-33)
amod(debate-35, whole-34)
nsubj(hinges-36, debate-35)
rcmod(That-30, hinges-36)
num(question-40, one-38)
amod(question-40, key-39)
prep_on(hinges-36, question-40)
attr(is-43, What-42)
dep(question-40, is-43)
nsubj(is-43, it-44)

(ROOT
  (S (CC And)
    (ADVP (RB genetically))
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ human)))
    (. .)))

cc(human-5, And-1)
advmod(human-5, genetically-2)
nsubj(human-5, it-3)
cop(human-5, is-4)
root(ROOT-0, human-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (NP
        (NP
          (NP (PRP it) (POS 's))
          (JJ own)
          (ADJP (JJ unique)
            (CC and)
            (JJ complete))
          (NN chromosome))
        (SBAR
          (WHNP (WDT which))
          (S
            (VP (VBZ makes)
              (S
                (NP (PRP it))
                (ADJP
                  (ADJP (JJ distinct)
                    (PP (IN from)
                      (NP
                        (NP (PRP it) (POS 's))
                        (NNS parents))))
                  (CC and)
                  (ADJP (RB wholly) (JJ different))))
              (PP (IN from)
                (NP
                  (NP (DT the) (NN egg)
                    (CC and)
                    (NN sperm))
                  (VP (VBN used)
                    (S
                      (VP (TO to)
                        (VP (VB create)
                          (NP (PRP it)))))))))))))
    (. .)))

nsubj(has-2, It-1)
root(ROOT-0, has-2)
poss(chromosome-9, it-3)
amod(chromosome-9, own-5)
amod(chromosome-9, unique-6)
conj_and(unique-6, complete-8)
amod(chromosome-9, complete-8)
dobj(has-2, chromosome-9)
nsubj(makes-11, chromosome-9)
rcmod(chromosome-9, makes-11)
nsubj(distinct-13, it-12)
nsubj(different-20, it-12)
xcomp(makes-11, distinct-13)
poss(parents-17, it-15)
prep_from(distinct-13, parents-17)
advmod(different-20, wholly-19)
xcomp(makes-11, different-20)
conj_and(distinct-13, different-20)
det(egg-23, the-22)
prep_from(makes-11, egg-23)
xsubj(create-28, egg-23)
prep_from(makes-11, sperm-25)
conj_and(egg-23, sperm-25)
xsubj(create-28, sperm-25)
partmod(egg-23, used-26)
aux(create-28, to-27)
xcomp(used-26, create-28)
dobj(create-28, it-29)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (S
          (NP (DT this) (NN syllogism))
          (VP (VBZ is)
            (ADJP (JJ sound))))
        (CC and)
        (S
          (NP
            (NP (PRP it) (POS 's))
            (NNS premises))
          (VP (VBP are)
            (ADJP (JJ verifiable))))))
    (NP (PRP you))
    (VP (MD will)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB resort)
              (PP (TO to)
                (NP
                  (ADJP (JJ irrationality)
                    (CC and)
                    (JJ unscientific))
                  (NNS assertions))))))
        (S
          (VP (TO to)
            (VP (VB disprove)
              (NP (PRP it)))))))
    (. .)))

mark(sound-5, Since-1)
det(syllogism-3, this-2)
nsubj(sound-5, syllogism-3)
cop(sound-5, is-4)
advcl(have-14, sound-5)
poss(premises-9, it-7)
nsubj(verifiable-11, premises-9)
cop(verifiable-11, are-10)
conj_and(sound-5, verifiable-11)
advcl(have-14, verifiable-11)
nsubj(have-14, you-12)
xsubj(resort-16, you-12)
xsubj(disprove-23, you-12)
aux(have-14, will-13)
root(ROOT-0, have-14)
aux(resort-16, to-15)
xcomp(have-14, resort-16)
amod(assertions-21, irrationality-18)
conj_and(irrationality-18, unscientific-20)
amod(assertions-21, unscientific-20)
prep_to(resort-16, assertions-21)
aux(disprove-23, to-22)
xcomp(have-14, disprove-23)
dobj(disprove-23, it-24)

