(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (JJ other) (NN hand)))
    (, ,)
    (SBAR (IN if)
      (S
        (S
          (NP (NN someone))
          (VP (VBD needed)
            (NP (NN life) (NN support))))
        (, ,)
        (CC and)
        (S
          (NP (PRP they))
          (VP (VBD were)
            (PP (IN in)
              (NP
                (NP (DT the) (NN process))
                (PP (IN of)
                  (S
                    (VP
                      (VP (VBG trying)
                        (S
                          (VP (TO to)
                            (VP (VB get)
                              (NP (PRP it))
                              (PP (IN from)
                                (NP (PRP you)))
                              (PP (IN without)
                                (NP (PRP$ your) (NN consent)))))))
                      (, ,)
                      (ADVP (RB then))
                      (VP (VBG denying)))))))))))
    (NP (PRP it))
    (VP (MD would)
      (ADVP (RB probably))
      (RB not)
      (VP (VB be)
        (NP (NN murder))))
    (. .)))

det(hand-4, the-2)
amod(hand-4, other-3)
prep_on(murder-36, hand-4)
mark(needed-8, if-6)
nsubj(needed-8, someone-7)
dep(murder-36, needed-8)
nn(support-10, life-9)
dobj(needed-8, support-10)
nsubj(were-14, they-13)
conj_and(needed-8, were-14)
dep(murder-36, were-14)
det(process-17, the-16)
prep_in(were-14, process-17)
prepc_of(process-17, trying-19)
aux(get-21, to-20)
xcomp(trying-19, get-21)
dobj(get-21, it-22)
prep_from(get-21, you-24)
poss(consent-27, your-26)
prep_without(get-21, consent-27)
advmod(trying-19, then-29)
dep(trying-19, denying-30)
nsubj(murder-36, it-31)
aux(murder-36, would-32)
advmod(murder-36, probably-33)
neg(murder-36, not-34)
cop(murder-36, be-35)
root(ROOT-0, murder-36)

