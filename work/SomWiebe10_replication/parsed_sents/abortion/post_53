(ROOT
  (NP
    (NP (DT No) (NN woman) (`` ``)
      (NX
        (S
          (VP (VBZ wants))))
      ('' ''))
    (NP
      (NP (DT an) (NN abortion))
      (: ;)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (SBAR
            (S
              (NP (RB only) (DT the)
                (ADJP (JJS least) (JJ bad))
                (NN alternative) (NNS Women))
              (VP (VBP do) (RB not)
                (VP (`` ``) (VB want) ('' '')
                  (NP (NNS abortions)))))))))
    (. .)))

det(wants-4, No-1)
dep(wants-4, woman-2)
root(ROOT-0, wants-4)
det(abortion-7, an-6)
dep(wants-4, abortion-7)
nsubj(is-10, it-9)
dep(abortion-7, is-10)
advmod(Women-16, only-11)
det(Women-16, the-12)
dep(bad-14, least-13)
amod(Women-16, bad-14)
nn(Women-16, alternative-15)
nsubj(want-20, Women-16)
aux(want-20, do-17)
neg(want-20, not-18)
ccomp(is-10, want-20)
dobj(want-20, abortions-22)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP find)
      (NP (PRP themselves))
      (PP (IN in)
        (NP
          (NP (DT a) (NN position))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP (NN abortion))
              (VP (VBZ is)
                (NP
                  (NP (DT the)
                    (ADJP (RBR less) (JJ bad)))
                  (PP (IN between)
                    (NP (JJ bad) (NNS alternatives))))))))))
    (. .)))

nsubj(find-2, They-1)
root(ROOT-0, find-2)
dobj(find-2, themselves-3)
det(position-6, a-5)
prep_in(find-2, position-6)
rel(bad-13, which-8)
nsubj(bad-13, abortion-9)
cop(bad-13, is-10)
det(bad-13, the-11)
advmod(bad-13, less-12)
rcmod(position-6, bad-13)
amod(alternatives-16, bad-15)
prep_between(bad-13, alternatives-16)

(ROOT
  (S
    (S
      (NP (DT This) (NN argument))
      (VP (VBZ is)
        (ADJP (JJ important)
          (PP (IN in)
            (S
              (VP (VBG explaining)
                (SBAR (IN that)
                  (S
                    (NP (NN abortion))
                    (VP (VBZ is) (RB not)
                      (PP (IN about)
                        (NP (DT a) (JJ malicious) (NN desire)
                          (S
                            (VP
                              (VP (TO to) (`` ``)
                                (VP (VB kill)
                                  (NP (NNS babies)))
                                ('' ''))
                              (CC or)
                              (ADVP (RB even))
                              (VP (TO to)
                                (VP (VB express)
                                  (NP (PRP$ their) (NN right)
                                    (S
                                      (VP (TO to)
                                        (VP (VB choose))))))))))))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (PP (IN about)
          (S
            (VP (VBG allowing)
              (NP (NNS women))
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (DT the) (JJS best) (NN choice))
                    (SBAR (IN that)
                      (S
                        (NP (PRP they))
                        (VP (MD can))))))))))))
    (. .)))

det(argument-2, This-1)
nsubj(important-4, argument-2)
cop(important-4, is-3)
root(ROOT-0, important-4)
prepc_in(important-4, explaining-6)
complm(is-9, that-7)
nsubj(is-9, abortion-8)
ccomp(explaining-6, is-9)
neg(is-9, not-10)
det(desire-14, a-12)
amod(desire-14, malicious-13)
prep_about(is-9, desire-14)
aux(kill-17, to-15)
dep(desire-14, kill-17)
dobj(kill-17, babies-18)
dep(desire-14, even-21)
advmod(kill-17, even-21)
conj_or(kill-17, even-21)
aux(express-23, to-22)
dep(desire-14, express-23)
conj_or(kill-17, express-23)
poss(right-25, their-24)
dobj(express-23, right-25)
aux(choose-27, to-26)
infmod(right-25, choose-27)
nsubj(is-30, it-29)
parataxis(important-4, is-30)
prepc_about(is-30, allowing-32)
dobj(allowing-32, women-33)
aux(make-35, to-34)
xcomp(allowing-32, make-35)
det(choice-38, the-36)
amod(choice-38, best-37)
dobj(make-35, choice-38)
complm(can-41, that-39)
nsubj(can-41, they-40)
ccomp(make-35, can-41)

