(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (S
          (VP (TO to)
            (VP (VB look)
              (PP (IN at)
                (NP
                  (NP (DT the) (NN concept))
                  (PP (IN of)
                    (NP (JJ natural) (NN law))))))))))
    (, ,)
    (CC and)
    (S
      (NP (WDT what))
      (VP (MD would)
        (VP (VB allow)
          (S
            (NP (DT those) (NNS rights))
            (VP (TO to)
              (VP (VB be)
                (VP (VBN violated))))))))
    (. .)))

nsubj(have-2, You-1)
xsubj(look-4, You-1)
root(ROOT-0, have-2)
aux(look-4, to-3)
xcomp(have-2, look-4)
det(concept-7, the-6)
prep_at(look-4, concept-7)
amod(law-10, natural-9)
prep_of(concept-7, law-10)
nsubj(allow-15, what-13)
aux(allow-15, would-14)
conj_and(have-2, allow-15)
det(rights-17, those-16)
nsubjpass(violated-20, rights-17)
aux(violated-20, to-18)
auxpass(violated-20, be-19)
xcomp(allow-15, violated-20)

(ROOT
  (SQ (VBP Do)
    (NP
      (NP (DT the) (NNS laws))
      (PP (IN of)
        (NP (DT the) (NN state))))
    (VP (VB have)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB violate)
              (NP (DT those) (JJ natural) (NNS rights)))))))
    (. ?)))

aux(have-7, Do-1)
det(laws-3, the-2)
nsubj(have-7, laws-3)
det(state-6, the-5)
prep_of(laws-3, state-6)
root(ROOT-0, have-7)
det(right-9, the-8)
dobj(have-7, right-9)
aux(violate-11, to-10)
infmod(right-9, violate-11)
det(rights-14, those-12)
amod(rights-14, natural-13)
dobj(violate-11, rights-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB argue)
        (SBAR (IN that)
          (S
            (INTJ (UH yes))
            (, ,)
            (NP (PRP they))
            (VP (VBP do))))))
    (. .)))

nsubj(argue-3, I-1)
aux(argue-3, 'd-2)
root(ROOT-0, argue-3)
complm(do-8, that-4)
dep(do-8, yes-5)
nsubj(do-8, they-7)
ccomp(argue-3, do-8)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD may)
        (VP (VB be)
          (NP (JJ natural) (NN law)))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is) (RB n't)
        (NP
          (NP (DT a) (JJ natural) (NN law))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ states) (, ,)
                (PP (IN for)
                  (NP (NN example)))
                (, ,)
                (SBAR
                  (WHNP (WDT that))
                  (PRN (, ,)
                    (INTJ (UH oh))
                    (, ,))
                  (S
                    (NP (PRP you))
                    (VP (MD ca) (RB n't)
                      (VP (VB smoke)
                        (NP (NN marijuana))))))))))))
    (. .)))

expl(law-5, There-1)
aux(law-5, may-2)
cop(law-5, be-3)
amod(law-5, natural-4)
root(ROOT-0, law-5)
expl(is-9, there-8)
conj_but(law-5, is-9)
neg(is-9, n't-10)
det(law-13, a-11)
amod(law-13, natural-12)
nsubj(is-9, law-13)
nsubj(states-15, law-13)
rcmod(law-13, states-15)
prep_for(states-15, example-18)
dobj(smoke-27, that-20)
dep(smoke-27, oh-22)
nsubj(smoke-27, you-24)
aux(smoke-27, ca-25)
neg(smoke-27, n't-26)
ccomp(states-15, smoke-27)
dobj(smoke-27, marijuana-28)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD 'd)
            (VP (VB be)
              (VP (VBN hardpressed)
                (S
                  (VP (TO to)
                    (VP (VB find)
                      (NP
                        (NP (NN someone))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ believes)
                              (SBAR (IN that)
                                (S
                                  (VP (VBZ is)
                                    (NP (DT a) (JJ natural) (NN law))))))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubjpass(hardpressed-6, you-3)
aux(hardpressed-6, 'd-4)
auxpass(hardpressed-6, be-5)
ccomp(think-2, hardpressed-6)
aux(find-8, to-7)
xcomp(hardpressed-6, find-8)
dobj(find-8, someone-9)
nsubj(believes-11, someone-9)
nsubj(law-16, someone-9)
rcmod(someone-9, believes-11)
complm(law-16, that-12)
cop(law-16, is-13)
det(law-16, a-14)
amod(law-16, natural-15)
ccomp(believes-11, law-16)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT the) (NN state))
    (VP (MD can)
      (VP (VB imprison)
        (NP (PRP you))
        (PP (IN for)
          (S
            (VP
              (VP (VBG doing)
                (ADVP (RB so)))
              (, ,)
              (ADVP (RB thusly))
              (VP (VBG infringing)
                (PP (IN on)
                  (NP (PRP$ your) (JJ Natural)
                    (NAC (NNP Right)
                      (PP (TO to)
                        (NP
                          (NP (NN liberty))
                          (, ,)
                          (CC and)
                          (NP
                            (NP (DT the) (NN pursuit))
                            (PP (IN of)
                              (NP (NN happiness)))))))))))))))
    (. .)))

advmod(imprison-6, However-1)
det(state-4, the-3)
nsubj(imprison-6, state-4)
aux(imprison-6, can-5)
root(ROOT-0, imprison-6)
dobj(imprison-6, you-7)
prepc_for(imprison-6, doing-9)
advmod(doing-9, so-10)
advmod(doing-9, thusly-12)
dep(doing-9, infringing-13)
poss(Natural-16, your-15)
prep_on(infringing-13, Natural-16)
dep(Natural-16, Right-17)
prep_to(Right-17, liberty-19)
det(pursuit-23, the-22)
prep_to(Right-17, pursuit-23)
conj_and(liberty-19, pursuit-23)
prep_of(pursuit-23, happiness-25)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ 's)
        (NP
          (NP (DT no) (JJ Natural) (NN Law))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ says)
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP (VBP have)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ loyal)
                              (PP (TO to)
                                (NP (PRP$ your) (NN country))))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NNP State))
      (VP (VBZ has)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB kill)
                (NP (PRP you))
                (SBAR (IN if)
                  (S
                    (NP (PRP you))
                    (VP (VBP commit)
                      (NP (NNS treason))
                      (, ,)
                      (S
                        (VP (VBG violating)
                          (NP (PRP$ your) (NNP Natural) (NNP Right))
                          (PP (TO to)
                            (NP (NN life))))))))))))))
    (. .)))

expl('s-2, There-1)
root(ROOT-0, 's-2)
det(Law-5, no-3)
amod(Law-5, Natural-4)
nsubj('s-2, Law-5)
nsubj(says-7, Law-5)
rcmod(Law-5, says-7)
nsubj(have-9, you-8)
xsubj(loyal-12, you-8)
ccomp(says-7, have-9)
aux(loyal-12, to-10)
cop(loyal-12, be-11)
xcomp(have-9, loyal-12)
poss(country-15, your-14)
prep_to(loyal-12, country-15)
det(State-19, the-18)
nsubj(has-20, State-19)
conj_but('s-2, has-20)
det(right-22, the-21)
dobj(has-20, right-22)
aux(kill-24, to-23)
infmod(right-22, kill-24)
dobj(kill-24, you-25)
mark(commit-28, if-26)
nsubj(commit-28, you-27)
advcl(kill-24, commit-28)
dobj(commit-28, treason-29)
partmod(commit-28, violating-31)
xcomp(commit-28, violating-31)
poss(Right-34, your-32)
nn(Right-34, Natural-33)
dobj(violating-31, Right-34)
prep_to(violating-31, life-36)

