(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP
          (NP (NN viability))
          (PP (IN in)
            (NP (DT an)
              (ADJP (JJ arbitrary))
              (NN environment))))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN criterion))
            (PP (IN for)
              (NP (NN life)))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP contend)
      (ADVP (RB then))
      (, ,)
      (PP (IN by)
        (NP
          (NP (PRP$ your) (NN logic))
          (, ,)
          (SBAR (IN that)
            (S
              (NP (PRP you))
              (VP
                (VP (VBP are) (RB not)
                  (ADJP (JJ alive)))
                (, ,)
                (CC and)
                (VP
                  (ADVP (RB therefore))
                  (MD can) (RB not)
                  (VP (VB be)
                    (VP (VBN killed))))))))))
    (. .)))

mark(criterion-9, if-1)
nsubj(criterion-9, viability-2)
det(environment-6, an-4)
amod(environment-6, arbitrary-5)
prep_in(viability-2, environment-6)
cop(criterion-9, is-7)
det(criterion-9, the-8)
advcl(contend-14, criterion-9)
prep_for(criterion-9, life-11)
nsubj(contend-14, I-13)
root(ROOT-0, contend-14)
advmod(contend-14, then-15)
poss(logic-19, your-18)
prep_by(contend-14, logic-19)
dep(alive-25, that-21)
nsubj(alive-25, you-22)
nsubjpass(killed-32, you-22)
cop(alive-25, are-23)
neg(alive-25, not-24)
dep(logic-19, alive-25)
advmod(killed-32, therefore-28)
aux(killed-32, can-29)
neg(killed-32, not-30)
auxpass(killed-32, be-31)
dep(logic-19, killed-32)
conj_and(alive-25, killed-32)

