(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP
      (NP (NNP relying))
      (PP (IN on)
        (NP (NN reality))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN foundation))
        (PP (IN of)
          (NP (JJ logical) (, ,) (JJ rational) (NN argument)))))
    (. .)))

dep(foundation-8, No-1)
nsubj(foundation-8, relying-3)
prep_on(relying-3, reality-5)
cop(foundation-8, is-6)
det(foundation-8, the-7)
root(ROOT-0, foundation-8)
amod(argument-13, logical-10)
amod(argument-13, rational-12)
prep_of(foundation-8, argument-13)

(ROOT
  (S
    (VP (VBN Yawn))
    (. .)))

root(ROOT-0, Yawn-1)

(ROOT
  (S
    (NP (DT That))
    (VP (VBD was)
      (ADJP (RB even) (JJ funnier)
        (PP (TO to)
          (NP (PRP me))))
      (PP (IN than)
        (NP (PRP$ your) (NN bit)))
      (PP (IN about)
        (NP
          (NP (JJ high) (NN school) (NN biology))
          (VP (VBG supporting)
            (NP (PRP$ your) (NN case))))))
    (. .)))

nsubj(funnier-4, That-1)
cop(funnier-4, was-2)
advmod(funnier-4, even-3)
root(ROOT-0, funnier-4)
prep_to(funnier-4, me-6)
poss(bit-9, your-8)
prep_than(funnier-4, bit-9)
amod(biology-13, high-11)
nn(biology-13, school-12)
prep_about(funnier-4, biology-13)
partmod(biology-13, supporting-14)
poss(case-16, your-15)
dobj(supporting-14, case-16)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are)
        (ADVP (RB obviously))
        (ADJP (RB completely) (RB philosophically) (JJ uninitiated))))
    (, ,) (IN so)
    (S
      (NP (PRP I))
      (VP (MD could)
        (VP (VB have)
          (NP
            (NP (DT a) (NN lot))
            (PP (IN of)
              (NP (NN fun))))
          (ADVP (RB here)))))
    (. .)))

nsubj(uninitiated-6, You-1)
cop(uninitiated-6, are-2)
advmod(uninitiated-6, obviously-3)
advmod(uninitiated-6, completely-4)
advmod(uninitiated-6, philosophically-5)
root(ROOT-0, uninitiated-6)
dep(uninitiated-6, so-8)
nsubj(have-11, I-9)
aux(have-11, could-10)
ccomp(uninitiated-6, have-11)
det(lot-13, a-12)
dobj(have-11, lot-13)
prep_of(lot-13, fun-15)
advmod(have-11, here-16)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (VP (VBP try)
      (NP (DT this) (NN one)))
    (. .)))

nsubj(try-3, Let-1)
possessive(Let-1, 's-2)
root(ROOT-0, try-3)
det(one-5, this-4)
dobj(try-3, one-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP admit)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (NNP Existence))
            (VP (VBZ is)
              (NP
                (NP (`` ``) (DT an))
                ('' '')
                (SBAR
                  (S
                    (NP (NNP axiom) (, ,) (NNP Identity))
                    (VP (VBZ is) (RB not))))))))
        (, ,)
        (CC but)
        (SBAR (IN that)
          (S
            (NP (NNP Truth)
              (CC and)
              (NNP Fact))
            (VP (VBP are)
              (NP (DT the) (`` ``) (JJ fundamental) ('' '') (NNS axioms)))))))
    (. .)))

nsubj(admit-2, You-1)
root(ROOT-0, admit-2)
complm(an-7, that-3)
nsubj(an-7, Existence-4)
cop(an-7, is-5)
ccomp(admit-2, an-7)
nn(Identity-11, axiom-9)
nsubj(is-12, Identity-11)
rcmod(an-7, is-12)
neg(is-12, not-13)
complm(axioms-25, that-16)
nsubj(axioms-25, Truth-17)
conj_and(Truth-17, Fact-19)
nsubj(axioms-25, Fact-19)
cop(axioms-25, are-20)
det(axioms-25, the-21)
amod(axioms-25, fundamental-23)
ccomp(admit-2, axioms-25)
conj_but(an-7, axioms-25)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (S
          (NP (NNP Existence))
          (VP (VBZ is) (RB not)
            (ADJP (JJ fundamental))))
        (, ,)
        (CC and)
        (S
          (NP (NNS existents))
          (VP (VBP do) (RB n't)
            (VP (VB possess)
              (NP (NNP Identity))
              (, ,)
              (ADVP (RB then)))))))
    (WHNP (WP what) (RB exactly))
    (SQ
      (VP (VBZ is)
        (ADJP (JJ true)
          (CC or)
          (JJ factual))))
    (. ?)))

mark(fundamental-5, If-1)
nsubj(fundamental-5, Existence-2)
cop(fundamental-5, is-3)
neg(fundamental-5, not-4)
dep(true-18, fundamental-5)
nsubj(possess-11, existents-8)
aux(possess-11, do-9)
neg(possess-11, n't-10)
conj_and(fundamental-5, possess-11)
dep(true-18, possess-11)
dobj(possess-11, Identity-12)
advmod(possess-11, then-14)
nsubj(true-18, what-15)
nsubj(factual-20, what-15)
advmod(what-15, exactly-16)
cop(true-18, is-17)
root(ROOT-0, true-18)
conj_or(true-18, factual-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NN description))
      (PP (IN of)
        (NP
          (NP (NNS things))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBP are)
                (SBAR (RB not)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP they))
                      (VP (VBP are))))
                  (, ,)
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (NP (PRP you))
                      (VP (VBP do) (RB not)
                        (ADVP (RB even))
                        (VP (VB know))))))))))))
    (VP (VBP exist)
      (SBAR
        (S
          (PP (IN until)
            (NP (PRP you)))
          (NP (PRP they))
          (VP (VBP have)
            (VP (VBN been)
              (VP (VBN proven)
                (S
                  (ADJP (JJ factual)
                    (CC and)
                    (JJ true)))))))))
    (. ?)))

det(description-2, The-1)
nsubj(exist-18, description-2)
prep_of(description-2, things-4)
nsubj(are-6, things-4)
rcmod(things-4, are-6)
dep(are-10, not-7)
dobj(are-10, what-8)
nsubj(are-10, they-9)
dep(are-6, are-10)
dobj(know-17, which-12)
nsubj(know-17, you-13)
aux(know-17, do-14)
neg(know-17, not-15)
advmod(know-17, even-16)
dep(are-10, know-17)
root(ROOT-0, exist-18)
prep_until(proven-24, you-20)
nsubjpass(proven-24, they-21)
aux(proven-24, have-22)
auxpass(proven-24, been-23)
ccomp(exist-18, proven-24)
acomp(proven-24, factual-25)
acomp(proven-24, true-27)
conj_and(factual-25, true-27)

(ROOT
  (NP (NNP LOL)))

root(ROOT-0, LOL-1)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG losing)
          (NP
            (NP (NN track))
            (PP (IN of)
              (NP
                (NP (PDT all) (DT the) (JJ logical) (NNS fallacies))
                (SBAR
                  (S
                    (NP (PRP you))
                    (VP
                      (VP (VBP are)
                        (ADJP (JJ scoring)))
                      (, ,)
                      (CC but)
                      (VP (VB add)
                        (NP
                          (NP (NN self-contradiction))
                          (: :) (`` ``)
                          (SBARQ
                            (WHNP
                              (WHNP (JJ Relying))
                              (PP (IN on)
                                (NP (DT a) (JJ formal) (NN authority))))
                            (SQ (VBZ is)
                              (NP
                                (NP (DT the) (NN foundation))
                                (PP (IN of)
                                  (NP
                                    (NP
                                      (ADJP (JJ logical) (, ,) (RB even) (JJ rational))
                                      (NN argument))
                                    (, ,) ('' '')
                                    (VP (VBN followed)
                                      (PP (IN by))))))))
                          ('' ''))))))))))))
    (: ...)
    (S
      (NP (JJ authoritative) (NN definition))
      (VP (MD may)
        (ADVP (RB plausibly))
        (VP (VB be)
          (ADJP (JJ incorrect)))))
    (. .)))

nsubj(losing-3, I-1)
aux(losing-3, am-2)
root(ROOT-0, losing-3)
dobj(losing-3, track-4)
predet(fallacies-9, all-6)
det(fallacies-9, the-7)
amod(fallacies-9, logical-8)
prep_of(track-4, fallacies-9)
nsubj(scoring-12, you-10)
nsubj(add-15, you-10)
cop(scoring-12, are-11)
rcmod(fallacies-9, scoring-12)
rcmod(fallacies-9, add-15)
conj_but(scoring-12, add-15)
dobj(add-15, self-contradiction-16)
attr(is-24, Relying-19)
det(authority-23, a-21)
amod(authority-23, formal-22)
prep_on(Relying-19, authority-23)
dep(self-contradiction-16, is-24)
det(foundation-26, the-25)
nsubj(is-24, foundation-26)
amod(rational-31, logical-28)
advmod(rational-31, even-30)
amod(argument-32, rational-31)
prep_of(foundation-26, argument-32)
partmod(argument-32, followed-35)
prep(followed-35, by-36)
amod(definition-40, authoritative-39)
nsubj(incorrect-44, definition-40)
aux(incorrect-44, may-41)
advmod(incorrect-44, plausibly-42)
cop(incorrect-44, be-43)
parataxis(losing-3, incorrect-44)

(ROOT
  (S ('' '')
    (NP (NNP No))
    (VP (VBP wonder)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB think)
              (SBAR
                (S
                  (NP (NNP Identity))
                  (VP (VBZ is)
                    (NP (DT an) (NN axiom))))))))))
    (. .)))

nsubj(wonder-3, No-2)
root(ROOT-0, wonder-3)
nsubj(think-7, you-4)
aux(think-7, do-5)
neg(think-7, n't-6)
ccomp(wonder-3, think-7)
nsubj(axiom-11, Identity-8)
cop(axiom-11, is-9)
det(axiom-11, an-10)
ccomp(think-7, axiom-11)

(ROOT
  (S
    (NP (PRP You))
    (ADVP (RB just))
    (VP (VBP make)
      (S
        (NP (PRP it))
        (ADJP (RB too) (JJ easy)
          (PP (IN for)
            (NP (PRP me))))))
    (. .)))

nsubj(make-3, You-1)
advmod(make-3, just-2)
root(ROOT-0, make-3)
nsubj(easy-6, it-4)
advmod(easy-6, too-5)
xcomp(make-3, easy-6)
prep_for(easy-6, me-8)

(ROOT
  (S
    (S
      (NP (NN Something))
      (VP (VBZ tells)
        (NP (PRP me))
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD would) (RB n't)
              (VP (VB know)
                (ADVP (RB epistemology))
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN residue))
                    (PP (IN in)
                      (NP (DT a) (RB freshly) (VBN used) (NN urinal)))))))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (DT the)
          (ADJP (JJ retarded)
            (CC and)
            (`` ``) (JJ handicapped) ('' ''))
          (NN DO))
        (VP (VBP possess)
          (NP (DT a) (JJ rational) (NN faculty))
          (, ,)
          (SBAR (IN although)
            (FRAG
              (PP (IN in)
                (NP (JJ varying) (NNS degrees)))))))
      (, ,)
      (CC and)
      (S
        (NP (PRP$ their) (NNS rights))
        (VP (VBP are)
          (PP (IN in)
            (NP (NN fact)))
          (ADJP (JJ delimited)
            (PP (TO to)
              (NP
                (NP (DT the) (NN extent))
                (PP (IN of)
                  (NP
                    (NP (PRP$ their) (JJ mental) (NN capacity))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ is)
                          (SBAR
                            (WHADJP (RB exactly) (WP what))
                            (S
                              (NP (PRP one))
                              (VP (MD would)
                                (VP (VB predict)
                                  (SBAR (IN if)
                                    (S
                                      (NP
                                        (NP (NN man) (POS 's))
                                        (NNS rights))
                                      (VP (VBP are)
                                        (ADVP (RB logically))
                                        (VP (VBN derived)
                                          (PP (IN from)
                                            (NP (PRP$ his) (NN nature)))
                                          (PP (IN as)
                                            (NP (DT the) (JJ rational) (NN animal))))))))))))))))))))))
    (. .)))

nsubj(tells-2, Something-1)
root(ROOT-0, tells-2)
dobj(tells-2, me-3)
nsubj(know-7, you-4)
aux(know-7, would-5)
neg(know-7, n't-6)
dep(tells-2, know-7)
advmod(know-7, epistemology-8)
det(residue-11, the-10)
prep_from(know-7, residue-11)
det(urinal-16, a-13)
advmod(urinal-16, freshly-14)
amod(urinal-16, used-15)
prep_in(residue-11, urinal-16)
det(DO-25, the-19)
dep(handicapped-23, retarded-20)
cc(handicapped-23, and-21)
amod(DO-25, handicapped-23)
nsubj(possess-26, DO-25)
conj_but(tells-2, possess-26)
det(faculty-29, a-27)
amod(faculty-29, rational-28)
dobj(possess-26, faculty-29)
mark(in-32, although-31)
advcl(possess-26, in-32)
amod(degrees-34, varying-33)
pobj(in-32, degrees-34)
poss(rights-38, their-37)
nsubj(delimited-42, rights-38)
cop(delimited-42, are-39)
prep_in(delimited-42, fact-41)
conj_but(tells-2, delimited-42)
conj_and(possess-26, delimited-42)
det(extent-45, the-44)
prep_to(delimited-42, extent-45)
poss(capacity-49, their-47)
amod(capacity-49, mental-48)
prep_of(extent-45, capacity-49)
nsubj(is-52, capacity-49)
rcmod(capacity-49, is-52)
dep(predict-57, exactly-53)
dep(exactly-53, what-54)
nsubj(predict-57, one-55)
aux(predict-57, would-56)
ccomp(is-52, predict-57)
mark(derived-64, if-58)
poss(rights-61, man-59)
nsubjpass(derived-64, rights-61)
auxpass(derived-64, are-62)
advmod(derived-64, logically-63)
advcl(predict-57, derived-64)
poss(nature-67, his-66)
prep_from(derived-64, nature-67)
det(animal-71, the-69)
amod(animal-71, rational-70)
prep_as(derived-64, animal-71)

(ROOT
  (S
    (NP (NNS Fetuses))
    (VP (VBP do) (RB not)
      (VP (VB have)
        (NP (DT any) (JJ such) (NN capacity))))
    (. .)))

nsubj(have-4, Fetuses-1)
aux(have-4, do-2)
neg(have-4, not-3)
root(ROOT-0, have-4)
det(capacity-7, any-5)
amod(capacity-7, such-6)
dobj(have-4, capacity-7)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP I))
        (VP (VBD read))))
    (, ,) (`` ``)
    (NP (NNP Consciousness))
    (VP (VBZ is) (RB not)
      (NP (DT an) (NN axiom)))
    (. .)))

advmod(read-3, When-1)
nsubj(read-3, I-2)
advcl(axiom-10, read-3)
nsubj(axiom-10, Consciousness-6)
cop(axiom-10, is-7)
neg(axiom-10, not-8)
det(axiom-10, an-9)
root(ROOT-0, axiom-10)

(ROOT
  (SINV
    (S
      (NP (PRP You))
      (VP (VBP do)
        (NP
          (NP (NNP KNOW))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT an) (NN axiom))
              (VP (VBZ is)))))))
    (, ,)
    (VP (VBP do) (RB n't))
    (NP (PRP YOU))
    (. ?)))

nsubj(do-2, You-1)
ccomp(do-9, do-2)
dobj(do-2, KNOW-3)
dobj(is-7, KNOW-3)
rel(is-7, what-4)
det(axiom-6, an-5)
nsubj(is-7, axiom-6)
rcmod(KNOW-3, is-7)
root(ROOT-0, do-9)
neg(do-9, n't-10)
nsubj(do-9, YOU-11)

(ROOT
  (S ('' '')
    (S
      (S
        (NP (-LRB- -LRB-) (NN emphasis) (NNS mine) (-RRB- -RRB-)))
      (, ,)
      (NP (PRP I))
      (ADVP (RB almost))
      (VP (VBD fell)))
    (IN on)
    (S
      (NP (VBP the) (NN floor))
      (PP (IN with)
        (NP (NN laughter))))
    (. .)))

nn(mine-4, emphasis-3)
ccomp(fell-9, mine-4)
nsubj(fell-9, I-7)
advmod(fell-9, almost-8)
root(ROOT-0, fell-9)
dep(fell-9, on-10)
dep(floor-12, the-11)
ccomp(fell-9, floor-12)
dep(floor-12, with-13)
pobj(with-13, laughter-14)

(ROOT
  (S
    (S
      (NP (DT That) (NN target))
      (VP (VBZ is)
        (ADJP (RB so) (JJ easy))
        (S
          (VP (TO to)
            (VP (VB hit))))))
    (, ,)
    (NP (PRP I))
    (VP (MD wo) (RB n't)
      (VP (VB bother)
        (S
          (VP (VBG shooting)
            (PP (IN at)
              (NP (PRP it)))))))
    (. .)))

det(target-2, That-1)
nsubj(easy-5, target-2)
xsubj(hit-7, target-2)
cop(easy-5, is-3)
advmod(easy-5, so-4)
ccomp(bother-12, easy-5)
aux(hit-7, to-6)
xcomp(easy-5, hit-7)
nsubj(bother-12, I-9)
aux(bother-12, wo-10)
neg(bother-12, n't-11)
root(ROOT-0, bother-12)
xcomp(bother-12, shooting-13)
prep_at(shooting-13, it-15)

