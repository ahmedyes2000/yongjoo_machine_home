(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP it))
          (VP (VBD did) (RB not)
            (VP (VB pose)
              (NP (DT a) (NN hardship)
                (S
                  (VP (TO to)
                    (VP (VB provide)
                      (NP (DT the) (NN aid))))))))))
      (, ,)
      (ADVP (RB then))
      (NP (PRP it))
      (VP (MD might)
        (VP (VB be)
          (VP (VBN depraved)
            (S
              (ADJP (JJ indeifference)
                (PP (TO to)
                  (NP (JJ human) (NN life)))))))))
    (, ,)
    (CC but)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD did)
            (VP (VB impose)
              (NP (DT a) (NN hardship))))))
      (NP (PRP it))
      (VP (MD might) (RB not)
        (ADVP (RB even))
        (VP (VB be)
          (NP (DT that)))))
    (. .)))

mark(pose-5, If-1)
nsubj(pose-5, it-2)
aux(pose-5, did-3)
neg(pose-5, not-4)
advcl(depraved-17, pose-5)
det(hardship-7, a-6)
dobj(pose-5, hardship-7)
aux(provide-9, to-8)
infmod(hardship-7, provide-9)
det(aid-11, the-10)
dobj(provide-9, aid-11)
advmod(depraved-17, then-13)
nsubjpass(depraved-17, it-14)
aux(depraved-17, might-15)
auxpass(depraved-17, be-16)
root(ROOT-0, depraved-17)
acomp(depraved-17, indeifference-18)
amod(life-21, human-20)
prep_to(indeifference-18, life-21)
mark(impose-27, if-24)
nsubj(impose-27, it-25)
aux(impose-27, did-26)
advcl(that-35, impose-27)
det(hardship-29, a-28)
dobj(impose-27, hardship-29)
nsubj(that-35, it-30)
aux(that-35, might-31)
neg(that-35, not-32)
advmod(that-35, even-33)
cop(that-35, be-34)
conj_but(depraved-17, that-35)

