(ROOT
  (S
    (VP (VB Let)
      (S
        (NP (PRP me))
        (VP (VB clarify)
          (NP (PRP$ my) (NN position))
          (, ,)
          (SBAR (IN since)
            (S
              (NP (PRP I))
              (VP (VBD misstated)
                (NP (PRP it))))))))
    (. .)))

root(ROOT-0, Let-1)
nsubj(clarify-3, me-2)
ccomp(Let-1, clarify-3)
poss(position-5, my-4)
dobj(clarify-3, position-5)
mark(misstated-9, since-7)
nsubj(misstated-9, I-8)
advcl(clarify-3, misstated-9)
dobj(misstated-9, it-10)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ first) (NN question))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ needs)
            (S
              (VP (TO to)
                (VP (VB be))))))))
    (VP (VBD asked)
      (SBAR
        (S
          (VP (VBZ is))))
      ('' '')
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (NP (NN kind))
            (PP (IN of)
              (NP (NN life))))
          (VP (VBZ is)
            (NP (PRP it))))))
    (. ?)))

det(question-3, The-1)
amod(question-3, first-2)
nsubj(needs-5, question-3)
nsubj(asked-8, question-3)
rcmod(question-3, needs-5)
aux(be-7, to-6)
xcomp(needs-5, be-7)
root(ROOT-0, asked-8)
ccomp(asked-8, is-9)
dobj(it-16, what-11)
nsubj(it-16, kind-12)
prep_of(kind-12, life-14)
cop(it-16, is-15)
ccomp(asked-8, it-16)

(ROOT
  (S (CC But)
    (NP (NN praise))
    (VP (VB be)
      (VP
        (PP (TO to)
          (NP (NNP God)))
        (SBAR (IN that)
          (S
            (NP (PRP He))
            (VP (VBZ has)
              (VP (VBN provided)
                (NP (DT a) (NN solution))
                (PP (TO to)
                  (NP
                    (NP (DT the) (CD two) (JJS greatest) (NNS problems) (NN man) (NNS faces))
                    (, ,)
                    (NP (NN guilt))
                    (CC and)
                    (NP (NN death))))))))))
    (. .)))

cc(to-4, But-1)
nsubj(to-4, praise-2)
aux(to-4, be-3)
root(ROOT-0, to-4)
pobj(to-4, God-5)
dep(provided-9, that-6)
nsubj(provided-9, He-7)
aux(provided-9, has-8)
ccomp(to-4, provided-9)
det(solution-11, a-10)
dobj(provided-9, solution-11)
det(faces-18, the-13)
num(faces-18, two-14)
amod(faces-18, greatest-15)
nn(faces-18, problems-16)
nn(faces-18, man-17)
prep_to(provided-9, faces-18)
prep_to(provided-9, guilt-20)
conj_and(faces-18, guilt-20)
prep_to(provided-9, death-22)
conj_and(faces-18, death-22)

(ROOT
  (S
    (S
      (PP (IN With)
        (NP (NNP God)))
      (NP (EX there))
      (VP (VBZ is)
        (NP (NN forgiveness))))
    (, ,)
    (FRAG (CC but)
      (RB not)
      (PP (IN without)
        (NP (JJ great) (NN cost))))
    (. .)))

prep_with(is-4, God-2)
expl(is-4, there-3)
root(ROOT-0, is-4)
nsubj(is-4, forgiveness-5)
dep(not-8, but-7)
dep(is-4, not-8)
dep(not-8, without-9)
amod(cost-11, great-10)
pobj(without-9, cost-11)

(ROOT
  (S ('' '')
    (PP (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP (DT a) (JJ human) (NN life))
          (ADVP (RB then))
          (NP
            (NP (DT no) (NN reason))
            (PP (IN for)
              (NP (NN abortion)))))))
    (VP (VBZ is)
      (ADJP (JJ adequate)))
    (. .)))

nsubj(life-7, it-3)
cop(life-7, is-4)
det(life-7, a-5)
amod(life-7, human-6)
prepc_if(adequate-14, life-7)
advmod(life-7, then-8)
det(reason-10, no-9)
attr(life-7, reason-10)
prep_for(reason-10, abortion-12)
cop(adequate-14, is-13)
root(ROOT-0, adequate-14)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (DT no) (JJ further) (NNS questions))
    (VP (VBP are)
      (VP (VBN needed)))
    (. .)))

advmod(needed-6, Therefore-1)
det(questions-4, no-2)
amod(questions-4, further-3)
nsubjpass(needed-6, questions-4)
auxpass(needed-6, are-5)
root(ROOT-0, needed-6)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (ADJP (RB rather) (JJ disturbing)))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB have)
                  (NP (NN sex))
                  (PP (IN without)
                    (NP (NNS commitments)))
                  (ADVP
                    (ADVP (RB so) (RB badly))
                    (SBAR (IN that)
                      (S
                        (NP (PRP we))
                        (VP (VBP are)
                          (ADJP (JJ willing)
                            (S
                              (VP (TO to)
                                (VP (VB kill)
                                  (NP
                                    (NP (DT the) (NN result))
                                    (PP (IN of)
                                      (NP (DT that) (JJ sexual) (NN union)))))))))))))))))))
    (. .)))

nsubj(find-2, I-1)
root(ROOT-0, find-2)
nsubj(disturbing-5, it-3)
advmod(disturbing-5, rather-4)
xcomp(find-2, disturbing-5)
complm(want-8, that-6)
nsubj(want-8, we-7)
xsubj(have-10, we-7)
ccomp(find-2, want-8)
aux(have-10, to-9)
xcomp(want-8, have-10)
dobj(have-10, sex-11)
prep_without(have-10, commitments-13)
advmod(badly-15, so-14)
advmod(have-10, badly-15)
dep(willing-19, that-16)
nsubj(willing-19, we-17)
cop(willing-19, are-18)
ccomp(badly-15, willing-19)
aux(kill-21, to-20)
xcomp(willing-19, kill-21)
det(result-23, the-22)
dobj(kill-21, result-23)
det(union-27, that-25)
amod(union-27, sexual-26)
prep_of(result-23, union-27)

(ROOT
  (S (CC But)
    (VP (VBZ is) (RB n't)
      (SBAR
        (SBAR (IN that)
          (S
            (PP
              (ADVP (RB just))
              (IN like)
              (NP (JJ human) (NN nature)))
            (, ,)
            (NP (NN everything))
            (VP (VBZ is)
              (ADJP (RB just) (JJ fine)
                (PP (IN until)
                  (NP
                    (NP (NN something) (NNS conflicts))
                    (PP (IN with)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP we))
                          (VP
                            (VP (VBP want))
                            (CC and)
                            (VP (VBZ stands)
                              (PP (IN between)
                                (NP (PRP us))))))))))))))
        (CC and)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP we))
            (VP (VBP desire))))))
    (. .)))

cc(is-2, But-1)
root(ROOT-0, is-2)
neg(is-2, n't-3)
complm(fine-13, that-4)
advmod(fine-13, just-5)
amod(nature-8, human-7)
prep_like(fine-13, nature-8)
nsubj(fine-13, everything-10)
cop(fine-13, is-11)
advmod(fine-13, just-12)
ccomp(is-2, fine-13)
nn(conflicts-16, something-15)
prep_until(fine-13, conflicts-16)
dobj(want-20, what-18)
nsubj(want-20, we-19)
nsubj(stands-22, we-19)
prepc_with(conflicts-16, want-20)
prepc_with(conflicts-16, stands-22)
conj_and(want-20, stands-22)
prep_between(stands-22, us-24)
dobj(desire-28, what-26)
nsubj(desire-28, we-27)
ccomp(is-2, desire-28)
conj_and(fine-13, desire-28)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP (NNS laws))
      (VP (VBP get)
        (ADVP (RB broke))))
    (, ,)
    (S
      (NP (NN peace) (NNS treaties))
      (VP (VBD ignored)))
    (, ,)
    (S
      (NP (NN property))
      (VP (VBN taken)))
    (CC and)
    (S
      (NP (NNS people))
      (VP (VBD killed)))
    (. .)))

advmod(get-3, Then-1)
nsubj(get-3, laws-2)
root(ROOT-0, get-3)
advmod(get-3, broke-4)
nn(treaties-7, peace-6)
nsubj(ignored-8, treaties-7)
ccomp(get-3, ignored-8)
conj_and(get-3, ignored-8)
nsubj(taken-11, property-10)
conj_and(get-3, taken-11)
nsubj(killed-14, people-13)
conj_and(get-3, killed-14)

(ROOT
  (S (CC But)
    (NP (DT the) (RBS most) (JJ heinous) (NN crime))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBP make)
            (S
              (NP (NNS laws))
              (VP (TO to)
                (VP (VB exonerate)
                  (NP (PRP ourselves)))))))))
    (. .)))

cc(is-6, But-1)
det(crime-5, the-2)
advmod(crime-5, most-3)
amod(crime-5, heinous-4)
nsubj(is-6, crime-5)
root(ROOT-0, is-6)
advmod(make-9, when-7)
nsubj(make-9, we-8)
advcl(is-6, make-9)
nsubj(exonerate-12, laws-10)
aux(exonerate-12, to-11)
xcomp(make-9, exonerate-12)
dobj(exonerate-12, ourselves-13)

(ROOT
  (FRAG
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP we))
        (VP (VBP call)
          (ADJP (JJ evil))
          (, ,)
          (S
            (ADJP (JJ good))))))
    (. .)))

advmod(call-3, When-1)
nsubj(call-3, we-2)
root(ROOT-0, call-3)
acomp(call-3, evil-4)
dep(call-3, good-6)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (MD may)
        (VP (VB be)
          (ADJP (JJ guiltless)
            (PP (IN before)
              (NP (DT the) (NN law)))))))
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ does) (RB n't)
        (VP (VB mean)
          (SBAR
            (S
              (NP (PRP we))
              (VP (VBP are) (RB not)
                (PP (IN without)
                  (NP (JJ real) (NN quilt)))))))))
    (. .)))

nsubj(guiltless-4, We-1)
aux(guiltless-4, may-2)
cop(guiltless-4, be-3)
root(ROOT-0, guiltless-4)
det(law-7, the-6)
prep_before(guiltless-4, law-7)
nsubj(mean-12, that-9)
aux(mean-12, does-10)
neg(mean-12, n't-11)
conj_but(guiltless-4, mean-12)
nsubj(are-14, we-13)
ccomp(mean-12, are-14)
neg(are-14, not-15)
amod(quilt-18, real-17)
prep_without(are-14, quilt-18)

