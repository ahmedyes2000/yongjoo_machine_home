(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR
            (S
              (NP (CD one) (NN person))
              (VP (VBZ has)
                (NP (DT no) (NN right))
                (PP (TO to)
                  (NP (NN freedom)))
                (SBAR (IN because)
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (ADVP (RB only))
                      (PP (IN for)
                        (NP (DT a) (JJ short) (NN time))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP make)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ allowable)
            (PP (IN for)
              (NP (DT every) (NN person)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN enslaved)
                        (PP (TO to)
                          (NP
                            (NP (DT another))
                            (PP (IN for)
                              (NP
                                (NP (RB only) (DT a) (JJ short) (NN period))
                                (PP (IN of)
                                  (NP (NN time)))))))))))))))))
    (. .)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(make-21, say-3)
num(person-5, one-4)
nsubj(has-6, person-5)
ccomp(say-3, has-6)
det(right-8, no-7)
dobj(has-6, right-8)
prep_to(has-6, freedom-10)
mark('s-13, because-11)
nsubj('s-13, it-12)
advcl(has-6, 's-13)
advmod('s-13, only-14)
det(time-18, a-16)
amod(time-18, short-17)
prep_for('s-13, time-18)
nsubj(make-21, you-20)
root(ROOT-0, make-21)
nsubj(allowable-23, it-22)
ccomp(make-21, allowable-23)
det(person-26, every-25)
prep_for(allowable-23, person-26)
aux(enslaved-29, to-27)
auxpass(enslaved-29, be-28)
infmod(person-26, enslaved-29)
prep_to(enslaved-29, another-31)
advmod(period-36, only-33)
det(period-36, a-34)
amod(period-36, short-35)
prep_for(another-31, period-36)
prep_of(period-36, time-38)

