(ROOT
  (S
    (NP (FW i))
    (VP
      (ADVP (RBS most))
      (VBP def))
    (. .)))

nsubj(def-3, i-1)
advmod(def-3, most-2)
root(ROOT-0, def-3)

(ROOT
  (S
    (VP (VB think)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (MD should)
            (VP (VB be)
              (ADJP (RB still) (JJ legal)
                (PP (IN for)
                  (NP
                    (NP (DT those))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBP have)
                          (VP (VBN been)
                            (VP (VBN raped))))))))))))))
    (. .)))

root(ROOT-0, think-1)
complm(legal-7, that-2)
nsubj(legal-7, it-3)
aux(legal-7, should-4)
cop(legal-7, be-5)
advmod(legal-7, still-6)
ccomp(think-1, legal-7)
prep_for(legal-7, those-9)
nsubjpass(raped-13, those-9)
aux(raped-13, have-11)
auxpass(raped-13, been-12)
rcmod(those-9, raped-13)

(ROOT
  (S
    (S
      (NP (DT These) (NNS girls))
      (VP (MD would)
        (VP
          (VP (VB have)
            (VP (VBN been)
              (VP (VBN raped))))
          (CC and)
          (ADVP (RB then))
          (VP (VB have)
            (NP
              (NP (DT a) (JJ new) (NN situation))
              (SBAR
                (S
                  (NP (PRP they))
                  (ADVP (RB also))
                  (VP (VBP have)
                    (S
                      (VP (TO to)
                        (VP (VB deal)
                          (PP (IN with)
                            (ADVP (RB along)))
                          (PP (IN with)
                            (NP (DT the) (NN rape))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (MD could)
        (VP (VB be)
          (ADJP (JJ stressful)))))
    (. .)))

det(girls-2, These-1)
nsubjpass(raped-6, girls-2)
nsubj(have-9, girls-2)
aux(raped-6, would-3)
aux(raped-6, have-4)
auxpass(raped-6, been-5)
root(ROOT-0, raped-6)
advmod(raped-6, then-8)
conj_and(raped-6, then-8)
conj_and(raped-6, have-9)
det(situation-12, a-10)
amod(situation-12, new-11)
dobj(have-9, situation-12)
dobj(have-15, situation-12)
nsubj(have-15, they-13)
xsubj(deal-17, they-13)
advmod(have-15, also-14)
rcmod(situation-12, have-15)
aux(deal-17, to-16)
xcomp(have-15, deal-17)
prepc_along_with(deal-17, along-19)
det(rape-22, the-21)
prep_with(deal-17, rape-22)
nsubj(stressful-28, that-25)
aux(stressful-28, could-26)
cop(stressful-28, be-27)
conj_and(raped-6, stressful-28)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (DT those))
        (PP (IN of)
          (NP (PRP you)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ says)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT the) (NN reason))
                    (PP (IN for)
                      (NP (PRP it)))
                    (S
                      (VP (TO to) (RB not)
                        (VP (VB be)
                          (ADJP (JJ legal))))))
                  (VP (VBZ is)
                    (VP (VB cause)
                      (NP (PRP$ its) (NN murder)))))))))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB technically))
    (VP (VBZ is) (RB not)
      (NP (NN murder))
      (SBAR (IN because)
        (S
          (SBAR (IN if)
            (S
              (NP (NN someone))
              (VP (VBZ is)
                (VP
                  (VP (VBN raped))
                  (CC and)
                  (ADVP (RB then))
                  (VP (VB find)
                    (PRT (RP out)))))))
          (NP (PRP they))
          (VP (VBP are)
            (ADJP (JJ pregnate)
              (SBAR
                (S
                  (VP (MD would)
                    (VP (VB be)
                      (PP (IN in)
                        (NP
                          (NP (PDT such) (DT a) (JJ short) (NN time))
                          (VP (VBN spand)
                            (SBAR (IN that)
                              (S
                                (NP (DT the) (NN baby))
                                (VP (MD would) (RB not)
                                  (ADVP (RB even))
                                  (VP (VB be)
                                    (NP (DT an) (NN embryo))
                                    (ADVP (RB yet))))))))))))))))))
    (. .)))

nsubj(says-6, those-2)
prep_for(murder-25, those-2)
prep_of(those-2, you-4)
rcmod(those-2, says-6)
complm(cause-17, that-7)
det(reason-9, the-8)
nsubj(cause-17, reason-9)
prep_for(reason-9, it-11)
aux(legal-15, to-12)
neg(legal-15, not-13)
cop(legal-15, be-14)
infmod(reason-9, legal-15)
aux(cause-17, is-16)
ccomp(says-6, cause-17)
poss(murder-19, its-18)
dobj(cause-17, murder-19)
nsubj(murder-25, it-21)
advmod(murder-25, technically-22)
cop(murder-25, is-23)
neg(murder-25, not-24)
root(ROOT-0, murder-25)
mark(pregnate-37, because-26)
mark(raped-30, if-27)
nsubjpass(raped-30, someone-28)
nsubj(find-33, someone-28)
auxpass(raped-30, is-29)
advcl(pregnate-37, raped-30)
advmod(raped-30, then-32)
conj_and(raped-30, then-32)
advcl(pregnate-37, then-32)
conj_and(raped-30, find-33)
advcl(pregnate-37, find-33)
prt(find-33, out-34)
nsubj(pregnate-37, they-35)
cop(pregnate-37, are-36)
advcl(murder-25, pregnate-37)
aux(be-39, would-38)
dep(pregnate-37, be-39)
predet(time-44, such-41)
det(time-44, a-42)
amod(time-44, short-43)
prep_in(be-39, time-44)
partmod(time-44, spand-45)
complm(embryo-54, that-46)
det(baby-48, the-47)
nsubj(embryo-54, baby-48)
aux(embryo-54, would-49)
neg(embryo-54, not-50)
advmod(embryo-54, even-51)
cop(embryo-54, be-52)
det(embryo-54, an-53)
ccomp(spand-45, embryo-54)
advmod(embryo-54, yet-55)

(ROOT
  (S
    (S
      (NP (EX there))
      (VP (VBP are)
        (NP
          (NP (DT those) (NNS situations))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (NP (DT an) (NN embryo))))))))
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBD had)
        (NP
          (NP (DT no) (JJ human) (NN connection))
          (FRAG
            (SBARQ
              (WHNP (WP what))
              (ADVP (RB so) (RB ever)))))))
    (. .)))

expl(are-2, there-1)
root(ROOT-0, are-2)
det(situations-4, those-3)
nsubj(are-2, situations-4)
advmod(embryo-9, where-5)
nsubj(embryo-9, it-6)
cop(embryo-9, is-7)
det(embryo-9, an-8)
rcmod(situations-4, embryo-9)
nsubj(had-12, it-11)
conj_but(are-2, had-12)
det(connection-15, no-13)
amod(connection-15, human-14)
dobj(had-12, connection-15)
dep(connection-15, what-16)
advmod(ever-18, so-17)
advmod(what-16, ever-18)

(ROOT
  (S
    (S
      (NP (PRP it))
      (VP
        (VP (VBZ has)
          (ADVP (RB never))
          (VP (VBN created)
            (NP (NNS memories))))
        (CC or)
        (VP
          (ADVP (RB even))
          (VBZ knows)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (VP (VBG going)
                  (PRT (RP on)))))))))
    (, ,) (IN so)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBD were)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN killed)
                    (PP (IN by)
                      (NP (NN abortion))))))))))
      (NP (FW i))
      (VP (VBP feel)
        (SBAR (RB as) (IN if)
          (S
            (NP (PRP it))
            (VP (MD would) (RB not)
              (ADVP (RB really))
              (VP (VB matter)))))))
    (. .)))

nsubj(created-4, it-1)
nsubj(knows-8, it-1)
aux(created-4, has-2)
neg(created-4, never-3)
root(ROOT-0, created-4)
dobj(created-4, memories-5)
advmod(knows-8, even-7)
conj_or(created-4, knows-8)
nsubj(going-11, what-9)
aux(going-11, is-10)
ccomp(knows-8, going-11)
prt(going-11, on-12)
dep(created-4, so-14)
mark(were-17, if-15)
nsubj(were-17, it-16)
xsubj(killed-20, it-16)
advcl(feel-24, were-17)
aux(killed-20, to-18)
auxpass(killed-20, be-19)
xcomp(were-17, killed-20)
agent(killed-20, abortion-22)
nsubj(feel-24, i-23)
ccomp(created-4, feel-24)
advmod(matter-31, as-25)
dep(matter-31, if-26)
nsubj(matter-31, it-27)
aux(matter-31, would-28)
neg(matter-31, not-29)
advmod(matter-31, really-30)
ccomp(feel-24, matter-31)

