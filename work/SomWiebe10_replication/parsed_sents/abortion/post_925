(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB simply))
      (VP (VBN seen)
        (NP
          (NP (DT no) (NN argument))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ comes)
                (S
                  (ADJP (JJ close)
                    (PP (TO to)
                      (NP
                        (NP (JJ proper) (NN justification))
                        (PP (IN for)
                          (NP (DT the) (NN taking))))))
                  (NP
                    (NP (DT the) (NN life))
                    (PP (IN of)
                      (NP (DT a) (JJ innocent) (JJ human) (NN being)))))))))))
    (. .)))

nsubj(seen-5, I-2)
aux(seen-5, have-3)
advmod(seen-5, simply-4)
root(ROOT-0, seen-5)
det(argument-7, no-6)
dobj(seen-5, argument-7)
nsubj(comes-9, argument-7)
rcmod(argument-7, comes-9)
acomp(comes-9, close-10)
amod(justification-13, proper-12)
prep_to(close-10, justification-13)
det(taking-16, the-15)
prep_for(justification-13, taking-16)
det(life-18, the-17)
dep(close-10, life-18)
det(being-23, a-20)
amod(being-23, innocent-21)
amod(being-23, human-22)
prep_of(life-18, being-23)

(ROOT
  (S ('' '')
    (S
      (NP (RB So) (DT a) (NN thirteen) (NN year))
      (NP (JJ old) (NN girl))
      (VP (VBZ gets)
        (VP (VBN raped))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP 're)
        (VP (VBG saying)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN govenrment))
              (VP (VBP have)
                (NP (DT the) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB force)
                        (NP (DT that) (NN girl)
                          (S
                            (VP (TO to)
                              (VP (VB keep)
                                (NP (PRP$ her) (JJ unwanted) (NN baby))))))))))))))))
    (. ?)))

advmod(year-5, So-2)
det(year-5, a-3)
nn(year-5, thirteen-4)
nsubjpass(raped-9, year-5)
tmod(raped-9, year-5)
amod(girl-7, old-6)
nsubjpass(raped-9, girl-7)
auxpass(raped-9, gets-8)
root(ROOT-0, raped-9)
nsubj(saying-14, you-12)
aux(saying-14, 're-13)
conj_and(raped-9, saying-14)
complm(have-18, that-15)
det(govenrment-17, the-16)
nsubj(have-18, govenrment-17)
ccomp(saying-14, have-18)
det(right-20, the-19)
dobj(have-18, right-20)
aux(force-22, to-21)
infmod(right-20, force-22)
det(girl-24, that-23)
dobj(force-22, girl-24)
aux(keep-26, to-25)
infmod(girl-24, keep-26)
poss(baby-29, her-27)
amod(baby-29, unwanted-28)
dobj(keep-26, baby-29)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do)
      (VP (VB realize)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBP are)
              (NP
                (NP (NNS problems))
                (PP (IN with)
                  (NP (NN abortion)))
                (, ,)
                (PP (IN for)
                  (NP
                    (NP (NN example))
                    (, ,)
                    (NP
                      (NP (DT the) (NN amount))
                      (PP (IN of)
                        (NP
                          (NP (NNS people))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBP have)
                                (NP
                                  (NP (JJ unsafe) (NN sex))
                                  (SBAR (IN because)
                                    (S
                                      (NP (PRP they))
                                      (VP (VBP know)
                                        (SBAR
                                          (S
                                            (NP (PRP they))
                                            (VP (MD can)
                                              (VP (DT either)
                                                (VP (VB take)
                                                  (NP (DT the) (NN morning))
                                                  (PP (IN after)
                                                    (NP (NN pill))))
                                                (CC or)
                                                (VP (VB have)
                                                  (NP
                                                    (NP (DT an) (NN abortion))
                                                    (SBAR
                                                      (S
                                                        (VP (VBZ is)
                                                          (ADJP (JJ rediculous)))))))))))))))))))))))))))))
    (. .)))

nsubj(realize-3, I-1)
aux(realize-3, do-2)
root(ROOT-0, realize-3)
complm(are-6, that-4)
expl(are-6, there-5)
ccomp(realize-3, are-6)
nsubj(are-6, problems-7)
prep_with(problems-7, abortion-9)
prep_for(problems-7, example-12)
det(amount-15, the-14)
appos(example-12, amount-15)
prep_of(amount-15, people-17)
nsubj(have-19, people-17)
rcmod(people-17, have-19)
amod(sex-21, unsafe-20)
dobj(have-19, sex-21)
mark(know-24, because-22)
nsubj(know-24, they-23)
dep(sex-21, know-24)
nsubj(take-28, they-25)
nsubj(have-34, they-25)
aux(take-28, can-26)
preconj(take-28, either-27)
ccomp(know-24, take-28)
det(morning-30, the-29)
tmod(take-28, morning-30)
prep_after(take-28, pill-32)
ccomp(know-24, have-34)
conj_or(take-28, have-34)
det(abortion-36, an-35)
dobj(have-34, abortion-36)
cop(rediculous-38, is-37)
rcmod(abortion-36, rediculous-38)

(ROOT
  (S (CC But)
    (PRN (, ,)
      (S
        (NP (PRP I))
        (VP (MD 'd)
          (VP (VB like)
            (S
              (VP (TO to)
                (VP (VB know)
                  (SBAR (IN that)
                    (S
                      (S
                        (SBAR (IN if)
                          (S
                            (NP (DT the) (JJ contraception) (FW i))
                            (VP (VBD was)
                              (VP (VBG using)))))
                        (VP (VBD did) (RB n't)
                          (VP (VB work))))
                      (CC and)
                      (S
                        (NP (PRP I))
                        (VP (VBD fell)
                          (ADJP (JJ pregnant))
                          (PP (IN through)
                            (NP
                              (NP (DT no) (NN fault))
                              (PP (IN of)
                                (NP (PRP$ my) (JJ own)))))))))))))))
      (, ,))
    (NP (PRP I))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB very) (JJ happy))
        (SBAR (IN that)
          (S
            (NP (PRP I))
            (VP (VBP have)
              (NP (DT the) (NN option)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP (DT an) (NN abortion)))))))))))
    (. .)))

cc(happy-33, But-1)
nsubj(like-5, I-3)
xsubj(know-7, I-3)
aux(like-5, 'd-4)
parataxis(happy-33, like-5)
aux(know-7, to-6)
xcomp(like-5, know-7)
complm(work-17, that-8)
mark(using-14, if-9)
det(i-12, the-10)
amod(i-12, contraception-11)
nsubj(using-14, i-12)
aux(using-14, was-13)
csubj(work-17, using-14)
aux(work-17, did-15)
neg(work-17, n't-16)
ccomp(know-7, work-17)
nsubj(fell-20, I-19)
ccomp(know-7, fell-20)
conj_and(work-17, fell-20)
acomp(fell-20, pregnant-21)
det(fault-24, no-23)
prep_through(fell-20, fault-24)
poss(own-27, my-26)
prep_of(fault-24, own-27)
nsubj(happy-33, I-29)
aux(happy-33, would-30)
cop(happy-33, be-31)
advmod(happy-33, very-32)
root(ROOT-0, happy-33)
complm(have-36, that-34)
nsubj(have-36, I-35)
ccomp(happy-33, have-36)
det(option-38, the-37)
dobj(have-36, option-38)
aux(have-40, to-39)
infmod(option-38, have-40)
det(abortion-42, an-41)
dobj(have-40, abortion-42)

(ROOT
  (SBARQ
    (WHADVP (WRB Also))
    (, ,)
    (WHADVP (WRB when))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB begin)
        (PP (TO to)
          (NP (NN class)))
        (NP
          (NP (DT a) (NN fetus))
          (PP (IN as)
            (NP (DT a) (NN human))))))
    (. ?)))

advmod(begin-6, Also-1)
advmod(begin-6, when-3)
aux(begin-6, do-4)
nsubj(begin-6, you-5)
root(ROOT-0, begin-6)
prep_to(begin-6, class-8)
det(fetus-10, a-9)
dobj(begin-6, fetus-10)
det(human-13, a-12)
prep_as(fetus-10, human-13)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB personally))
    (VP (MD would) (RB not)
      (VP (VB think)
        (PP (IN of)
          (NP (PRP it)))
        (PP (IN as)
          (NP
            (NP (DT a) (JJ human) (NN untill))
            (PP (IN about)
              (NP (CD 12) (NNS weeks)))))))
    (. .)))

nsubj(think-5, I-1)
advmod(think-5, personally-2)
aux(think-5, would-3)
neg(think-5, not-4)
root(ROOT-0, think-5)
prep_of(think-5, it-7)
det(untill-11, a-9)
amod(untill-11, human-10)
prep_as(think-5, untill-11)
num(weeks-14, 12-13)
prep_about(untill-11, weeks-14)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBP doesnt) (RB even)
        (VP (VB enter)
          (NP (DT the) (JJ fetal) (NN stage) (NN untill))
          (NP (DT the) (JJ 11th) (NN week)))))
    (, ,)
    (ADVP (RB surely))
    (S
      (NP
        (NP (NN abortion))
        (PP (IN before)
          (NP (DT this) (NN stage))))
      (VP (VBZ is) (RB not)
        (ADJP (JJ inhumane))))
    (. ?)))

nsubj(doesnt-2, It-1)
root(ROOT-0, doesnt-2)
advmod(doesnt-2, even-3)
dep(doesnt-2, enter-4)
det(untill-8, the-5)
amod(untill-8, fetal-6)
nn(untill-8, stage-7)
dobj(enter-4, untill-8)
det(week-11, the-9)
amod(week-11, 11th-10)
tmod(enter-4, week-11)
advmod(doesnt-2, surely-13)
nsubj(inhumane-20, abortion-14)
det(stage-17, this-16)
prep_before(abortion-14, stage-17)
cop(inhumane-20, is-18)
neg(inhumane-20, not-19)
ccomp(doesnt-2, inhumane-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBD was)
          (NP
            (NP (DT a) (NN contraception))
            (PP (IN out)
              (NP (RB there)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD was)
                  (ADJP
                    (NP (CD 100) (NN %))
                    (JJ effective)))))))))
    (, ,)
    (ADVP (RB then))
    (NP (DT this))
    (VP (MD would)
      (VP (VB be)
        (NP (DT a)
          (ADJP (RBR more) (JJ valid))
          (NN arguement))))
    (. .)))

mark(was-3, If-1)
expl(was-3, there-2)
advcl(arguement-21, was-3)
det(contraception-5, a-4)
nsubj(was-3, contraception-5)
nsubj(effective-12, contraception-5)
prep(contraception-5, out-6)
pobj(out-6, there-7)
cop(effective-12, was-9)
num(%-11, 100-10)
npadvmod(effective-12, %-11)
rcmod(contraception-5, effective-12)
advmod(arguement-21, then-14)
nsubj(arguement-21, this-15)
aux(arguement-21, would-16)
cop(arguement-21, be-17)
det(arguement-21, a-18)
advmod(valid-20, more-19)
amod(arguement-21, valid-20)
root(ROOT-0, arguement-21)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (VBP 'm)
        (ADJP (JJ young)))
      (, ,)
      (CC and)
      (VP (VBP have)
        (NP
          (NP (NNS dreams)
            (CC and)
            (NNS aspirations))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (MD could)
                (ADVP (RB never))
                (VP (VB fulfill)
                  (SBAR (IN if)
                    (S
                      (NP (PRP I))
                      (VP (VBD became)
                        (ADJP (JJ pregnant))))))))))))
    (. .)))

nsubj(young-3, I-1)
nsubj(have-6, I-1)
cop(young-3, 'm-2)
root(ROOT-0, young-3)
conj_and(young-3, have-6)
dobj(have-6, dreams-7)
dobj(fulfill-14, dreams-7)
dobj(have-6, aspirations-9)
conj_and(dreams-7, aspirations-9)
dobj(fulfill-14, aspirations-9)
complm(fulfill-14, that-10)
nsubj(fulfill-14, I-11)
aux(fulfill-14, could-12)
neg(fulfill-14, never-13)
dep(dreams-7, fulfill-14)
mark(pregnant-18, if-15)
nsubj(pregnant-18, I-16)
cop(pregnant-18, became-17)
advcl(fulfill-14, pregnant-18)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN contraception))
        (VP (MD ca) (RB n't)
          (VP (VB garrentee)
            (SBAR (IN that)
              (S
                (NP (FW i))
                (VP (MD wo) (RB n't)
                  (VP (VB get)
                    (ADJP (JJ pregnant))))))))))
    (, ,)
    (NP (PRP I))
    (ADVP (RB definately))
    (VP (VBP want)
      (S
        (NP (DT the) (NN choice))
        (VP (TO to)
          (VP (VB have)
            (NP (DT an) (NN abortion))
            (SBAR (IN if)
              (S
                (NP (FW i))
                (VP (VBD needed)
                  (NP (CD one)))))))))
    (. .)))

mark(garrentee-5, If-1)
nsubj(garrentee-5, contraception-2)
aux(garrentee-5, ca-3)
neg(garrentee-5, n't-4)
advcl(want-15, garrentee-5)
complm(pregnant-11, that-6)
nsubj(pregnant-11, i-7)
aux(pregnant-11, wo-8)
neg(pregnant-11, n't-9)
dep(pregnant-11, get-10)
ccomp(garrentee-5, pregnant-11)
nsubj(want-15, I-13)
advmod(want-15, definately-14)
root(ROOT-0, want-15)
det(choice-17, the-16)
nsubj(have-19, choice-17)
aux(have-19, to-18)
xcomp(want-15, have-19)
det(abortion-21, an-20)
dobj(have-19, abortion-21)
mark(needed-24, if-22)
nsubj(needed-24, i-23)
advcl(have-19, needed-24)
dobj(needed-24, one-25)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 're)
        (NP
          (NP (NN view))
          (SBAR
            (S
              (VP (VBZ seems)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (RB very) (JJ black)
                        (CC and)
                        (JJ white)))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP seem)
        (S
          (VP (TO to)
            (VP (VB dismiss)
              (NP
                (NP (DT the) (JJ huge) (JJ gray) (NN area))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ exists))))))))))
    (. .)))

nsubj(view-3, You-1)
cop(view-3, 're-2)
root(ROOT-0, view-3)
rcmod(view-3, seems-4)
aux(black-8, to-5)
cop(black-8, be-6)
advmod(black-8, very-7)
xcomp(seems-4, black-8)
xcomp(seems-4, white-10)
conj_and(black-8, white-10)
nsubj(seem-14, you-13)
xsubj(dismiss-16, you-13)
conj_and(view-3, seem-14)
aux(dismiss-16, to-15)
xcomp(seem-14, dismiss-16)
det(area-20, the-17)
amod(area-20, huge-18)
amod(area-20, gray-19)
dobj(dismiss-16, area-20)
nsubj(exists-22, area-20)
rcmod(area-20, exists-22)

(ROOT
  (S
    (NP (NNP Abortion))
    (VP
      (VP (VBZ exists)
        (PP (IN for)
          (NP (DT a) (NN reason))))
      (CC and)
      (VP (MD should) (RB not)
        (VP (VB be)
          (VP (VBN banned)))))))

nsubj(exists-2, Abortion-1)
nsubjpass(banned-10, Abortion-1)
root(ROOT-0, exists-2)
det(reason-5, a-4)
prep_for(exists-2, reason-5)
aux(banned-10, should-7)
neg(banned-10, not-8)
auxpass(banned-10, be-9)
conj_and(exists-2, banned-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB imagine)
          (SBAR
            (S
              (NP (DT the) (NN girl))
              (VP (MD would)
                (VP
                  (ADVP (RB never))
                  (RB really)
                  (NP (NN bond))
                  (PP (IN with)
                    (NP (PRP$ her) (NN baby))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN child))
      (VP (MD would)
        (VP (VB have)
          (S
            (VP (TO to)
              (VP
                (VP (VB grow)
                  (PRT (RP up))
                  (S
                    (VP (VBG knowing)
                      (PP (IN of)
                        (NP (PRP$ its) (NN conception))))))
                (CC and)
                (VP (VB live)
                  (PP (IN with)
                    (NP (DT the) (NN knowledge)))
                  (SBAR (IN that)
                    (S
                      (NP (PRP it))
                      (VP (VBD was) (RB not)
                        (VP (VBD wanted))))))))))))
    (. .)))

nsubj(imagine-3, I-1)
aux(imagine-3, would-2)
root(ROOT-0, imagine-3)
det(girl-5, the-4)
nsubj(bond-9, girl-5)
aux(bond-9, would-6)
neg(bond-9, never-7)
advmod(bond-9, really-8)
ccomp(imagine-3, bond-9)
poss(baby-12, her-11)
prep_with(bond-9, baby-12)
det(child-16, the-15)
nsubj(have-18, child-16)
xsubj(grow-20, child-16)
aux(have-18, would-17)
conj_and(imagine-3, have-18)
aux(grow-20, to-19)
xcomp(have-18, grow-20)
prt(grow-20, up-21)
xcomp(grow-20, knowing-22)
poss(conception-25, its-24)
prep_of(knowing-22, conception-25)
xcomp(have-18, live-27)
conj_and(grow-20, live-27)
det(knowledge-30, the-29)
prep_with(live-27, knowledge-30)
complm(wanted-35, that-31)
nsubjpass(wanted-35, it-32)
auxpass(wanted-35, was-33)
neg(wanted-35, not-34)
ccomp(live-27, wanted-35)

(ROOT
  (FRAG
    (ADVP (RB Surely))
    (SBAR
      (WHNP (WDT that))
      (S
        (VP (VBZ is)
          (ADJP (RB justification) (JJ enough)))))
    (. ?)))

root(ROOT-0, Surely-1)
nsubj(enough-5, that-2)
cop(enough-5, is-3)
advmod(enough-5, justification-4)
dep(Surely-1, enough-5)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is) (RB not)
      (SBAR
        (S
          (NP (DT a) (NN life) (NN anyone))
          (VP (MD would)
            (VP (VB want))))
        (, ,)
        (CC and)
        (S
          (ADVP (RB surely))
          (VP (VBG aborting)
            (SBAR (IN that)
              (S
                (NP
                  (NP (NN baby))
                  (PP (IN in)
                    (NP
                      (NP (PRP$ its) (JJ early) (NNS stages))
                      (PP (IN of)
                        (NP (NN development))))))
                (VP (MD would)
                  (VP (VB be)
                    (NP (DT the) (JJR better) (NN thing)
                      (S
                        (VP (TO to)
                          (VP (VB do)))))))))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
neg(is-2, not-3)
det(anyone-6, a-4)
nn(anyone-6, life-5)
nsubj(want-8, anyone-6)
nsubj(aborting-12, anyone-6)
aux(want-8, would-7)
ccomp(is-2, want-8)
advmod(aborting-12, surely-11)
ccomp(is-2, aborting-12)
conj_and(want-8, aborting-12)
complm(thing-25, that-13)
nsubj(thing-25, baby-14)
poss(stages-18, its-16)
amod(stages-18, early-17)
prep_in(baby-14, stages-18)
prep_of(stages-18, development-20)
aux(thing-25, would-21)
cop(thing-25, be-22)
det(thing-25, the-23)
amod(thing-25, better-24)
ccomp(aborting-12, thing-25)
aux(do-27, to-26)
infmod(thing-25, do-27)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (VP (VBP think)
      (PP (IN of)
        (NP
          (NP (DT the) (NN number))
          (PP (IN of)
            (NP
              (NP (NNS children))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD would)
                    (VP (VB end)
                      (PRT (RP up))
                      (PP (IN in)
                        (NP (NN care))))))))))))
    (SBAR (IN if)
      (S
        (NP (NN abortion))
        (VP (VBD was)
          (VP (VBN banned)))))
    (. .)))

advmod(think-3, Also-1)
root(ROOT-0, think-3)
det(number-6, the-5)
prep_of(think-3, number-6)
prep_of(number-6, children-8)
nsubj(end-11, children-8)
aux(end-11, would-10)
rcmod(children-8, end-11)
prt(end-11, up-12)
prep_in(end-11, care-14)
mark(banned-18, if-15)
nsubjpass(banned-18, abortion-16)
auxpass(banned-18, was-17)
dep(think-3, banned-18)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP
          (NP (RB enough))
          (PP (IN of)
            (NP (PRP them))))
        (ADVP (RB already))))
    (, ,)
    (S
      (NP
        (NP (DT the) (NN banning))
        (PP (IN of)
          (NP (NN abortion))))
      (VP (MD would)
        (ADVP (RBS most))
        (VP
          (ADVP (RB definately))
          (VB increase)
          (NP (DT this) (NN number)))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP (DT the) (JJR more) (NNS children))
        (PP (IN in)
          (NP (NN care))))
      (, ,)
      (X (DT the)
        (ADJP (JJR lower)))
      (NP (DT the) (NN quality))
      (VP (MD would)
        (VP (VB become))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, enough-3)
prep_of(enough-3, them-5)
advmod(are-2, already-6)
det(banning-9, the-8)
nsubj(increase-15, banning-9)
prep_of(banning-9, abortion-11)
aux(increase-15, would-12)
advmod(increase-15, most-13)
advmod(increase-15, definately-14)
ccomp(are-2, increase-15)
conj_and(are-2, increase-15)
det(number-17, this-16)
dobj(increase-15, number-17)
det(children-22, the-20)
amod(children-22, more-21)
nsubj(become-31, children-22)
prep_in(children-22, care-24)
det(lower-27, the-26)
dep(become-31, lower-27)
det(quality-29, the-28)
nsubj(become-31, quality-29)
aux(become-31, would-30)
conj_and(are-2, become-31)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (MD would)
      (NP (PRP they))
      (VP (VB get)
        (NP (DT the) (NN money)
          (S
            (VP (TO to)
              (VP (VB look)
                (PP (IN after)
                  (NP
                    (ADJP (RB so) (JJ many))
                    (NNS children)))))))))
    (. ?)))

advmod(get-4, Where-1)
aux(get-4, would-2)
nsubj(get-4, they-3)
root(ROOT-0, get-4)
det(money-6, the-5)
dobj(get-4, money-6)
aux(look-8, to-7)
infmod(money-6, look-8)
advmod(many-11, so-10)
amod(children-12, many-11)
prep_after(look-8, children-12)

(ROOT
  (NP (PRP$ Our) (NNS taxes) (. ?)))

poss(taxes-2, Our-1)
root(ROOT-0, taxes-2)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD would)
        (VP (VB get)
          (NP (NNS rediculous)))))
    (, ,)
    (CC and)
    (S
      (NP (EX there))
      (VP (MD would)
        (VP (VB be)
          (NP
            (NP (DT a) (NN lot))
            (PP (IN of)
              (NP (NNS children))))
          (PP (IN out)
            (S
              (NP (EX there))
              (VP (VBG wishing)
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (VBD had)
                      (ADVP (RB never))
                      (VP (VBN been)
                        (VP (VBN born))))))))))))
    (. .)))

nsubj(get-3, It-1)
aux(get-3, would-2)
root(ROOT-0, get-3)
dobj(get-3, rediculous-4)
expl(lot-11, there-7)
aux(lot-11, would-8)
cop(lot-11, be-9)
det(lot-11, a-10)
conj_and(get-3, lot-11)
prep_of(lot-11, children-13)
expl(wishing-16, there-15)
prepc_out(lot-11, wishing-16)
nsubjpass(born-21, they-17)
aux(born-21, had-18)
neg(born-21, never-19)
auxpass(born-21, been-20)
ccomp(wishing-16, born-21)

