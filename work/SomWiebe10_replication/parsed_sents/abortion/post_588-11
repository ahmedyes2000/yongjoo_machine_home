(ROOT
  (S
    (PP (IN Except)
      (PP (IN for) (IN in)
        (NP
          (NP (NNS cases))
          (SBAR
            (WHPP (IN in)
              (WHNP (WDT which)))
            (S
              (NP
                (NP (DT the) (NN woman) (POS 's))
                (NN life))
              (VP (VBZ is)
                (PP (IN in)
                  (NP (NN danger)))))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are)
      (VP (VBG being)
        (VP (VBN killed)
          (PP (IN for)
            (NP (NN convenience)))
          (, ,)
          (SBAR (IN like)
            (S
              (NP
                (NP (DT a) (NN dog))
                (PP (IN than)
                  (NP (NN nobody))))
              (VP (VBZ wants)
                (ADVP (RB anymore))
                (, ,)
                (SBAR (IN except) (IN that)
                  (S
                    (NP (PRP they))
                    (VP (VBP require)
                      (S
                        (NP (NNS dogs))
                        (VP (VB be)
                          (VP (VBN put)
                            (PRT (RP down))
                            (ADVP (RB gently))))))))))))))
    (. .)))

prep(killed-18, Except-1)
dep(Except-1, for-2)
pcomp(Except-1, in-3)
prep_in(Except-1, cases-4)
rel(is-11, which-6)
det(woman-8, the-7)
poss(life-10, woman-8)
nsubj(is-11, life-10)
rcmod(cases-4, is-11)
prep_in(is-11, danger-13)
nsubjpass(killed-18, they-15)
aux(killed-18, are-16)
auxpass(killed-18, being-17)
root(ROOT-0, killed-18)
prep_for(killed-18, convenience-20)
mark(wants-27, like-22)
det(dog-24, a-23)
nsubj(wants-27, dog-24)
prep_than(dog-24, nobody-26)
advcl(killed-18, wants-27)
advmod(wants-27, anymore-28)
mark(require-33, except-30)
dep(require-33, that-31)
nsubj(require-33, they-32)
advcl(wants-27, require-33)
nsubjpass(put-36, dogs-34)
auxpass(put-36, be-35)
ccomp(require-33, put-36)
prt(put-36, down-37)
advmod(put-36, gently-38)

