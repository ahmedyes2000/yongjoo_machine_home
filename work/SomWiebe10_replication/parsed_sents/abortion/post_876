(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT a) (NN lack))
          (PP (IN of)
            (NP (DT an) (VBN informed) (NN conscious))))
        (VP (VBZ means)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD ca) (RB n't)
                (VP (VB make)
                  (NP
                    (NP (NNS decisions))
                    (PP (IN for)
                      (NP (PRP yourself)))))))))))
    (, ,)
    (ADVP (RB then))
    (NP
      (NP (NNP Terry) (NNP Schiavo) (POS 's))
      (NN husband))
    (VP (VBD was)
      (ADJP (JJ right)
        (PP (IN in)
          (S
            (VP (VBG starving)
              (NP (PRP her))
              (PP (TO to)
                (NP (NN death))))))))
    (. .)))

mark(means-8, If-1)
det(lack-3, a-2)
nsubj(means-8, lack-3)
det(conscious-7, an-5)
amod(conscious-7, informed-6)
prep_of(lack-3, conscious-7)
advcl(right-23, means-8)
nsubj(make-12, you-9)
aux(make-12, ca-10)
neg(make-12, n't-11)
ccomp(means-8, make-12)
dobj(make-12, decisions-13)
prep_for(decisions-13, yourself-15)
advmod(right-23, then-17)
nn(Schiavo-19, Terry-18)
poss(husband-21, Schiavo-19)
nsubj(right-23, husband-21)
cop(right-23, was-22)
root(ROOT-0, right-23)
prepc_in(right-23, starving-25)
dobj(starving-25, her-26)
prep_to(starving-25, death-28)

(ROOT
  (S
    (NP (PRP She))
    (ADVP (RB never))
    (VP (VBD made)
      (SBAR
        (S
          (NP (DT a) (JJ formal) (NN living))
          (VP (MD will)
            (SBAR (IN so)
              (S
                (NP (EX there))
                (VP (VBZ is)
                  (NP
                    (NP (DT no) (NN statement))
                    (PP (IN on)
                      (NP
                        (NP (NN file))
                        (PP (IN as) (TO to)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP$ her) (NNS wishes))
                              (VP (VBD were)))))))))))))))
    (. .)))

nsubj(made-3, She-1)
neg(made-3, never-2)
root(ROOT-0, made-3)
det(living-6, a-4)
amod(living-6, formal-5)
nsubj(will-7, living-6)
ccomp(made-3, will-7)
mark(is-10, so-8)
expl(is-10, there-9)
advcl(will-7, is-10)
det(statement-12, no-11)
nsubj(is-10, statement-12)
prep_on(statement-12, file-14)
dobj(were-20, what-17)
poss(wishes-19, her-18)
nsubj(were-20, wishes-19)
prepc_as_to(file-14, were-20)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (PRP$ your) (NN method))
          (PP (IN of)
            (NP (NN reasoning))))
        (VP (VBZ fails))))
    (, ,)
    (NP
      (NP (DT any) (NN person))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ falls)
            (PP (IN into)
              (NP (DT a) (NN coma)))))))
    (ADVP (RB unexpectedly))
    (VP (MD would)
      (VP (VB be)
        (PP (IN at)
          (NP
            (NP (DT the) (NN mercy))
            (PP (IN of)
              (SBAR
                (WHNP (WP whoever))
                (S
                  (VP (VBZ has)
                    (S
                      (VP (TO to)
                        (VP (VB take)
                          (NP
                            (NP (NN care))
                            (PP (IN of)
                              (NP (PRP them)))))))))))))))
    (. .)))

mark(fails-6, If-1)
poss(method-3, your-2)
nsubj(fails-6, method-3)
prep_of(method-3, reasoning-5)
advcl(be-17, fails-6)
det(person-9, any-8)
nsubj(falls-11, person-9)
nsubj(be-17, person-9)
rcmod(person-9, falls-11)
det(coma-14, a-13)
prep_into(falls-11, coma-14)
advmod(be-17, unexpectedly-15)
aux(be-17, would-16)
root(ROOT-0, be-17)
det(mercy-20, the-19)
prep_at(be-17, mercy-20)
nsubj(has-23, whoever-22)
prepc_of(mercy-20, has-23)
aux(take-25, to-24)
xcomp(has-23, take-25)
dobj(take-25, care-26)
prep_of(care-26, them-28)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB say)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (VP (VB live)))))))))))
    (, ,)
    (NP (NN anyone))
    (VP (MD can)
      (VP (VB kill)
        (NP (PRP you))))
    (. ?)))

mark(say-5, If-1)
nsubj(say-5, you-2)
aux(say-5, do-3)
neg(say-5, n't-4)
advcl(kill-13, say-5)
nsubj(want-7, you-6)
xsubj(live-9, you-6)
ccomp(say-5, want-7)
aux(live-9, to-8)
xcomp(want-7, live-9)
nsubj(kill-13, anyone-11)
aux(kill-13, can-12)
root(ROOT-0, kill-13)
dobj(kill-13, you-14)

(ROOT
  (S
    (S
      (PP (IN By)
        (NP (DT the) (NN way)))
      (, ,)
      (NP (DT the) (`` ``) (NN church) ('' '') (NN tax))
      (VP (VBZ breaks) (RB also)
        (VP (VB extend)
          (PP (TO to)
            (NP (JJ organized) (NNS atheists))))))
    (: ;)
    (S
      (PP (IN in)
        (NP (NN case)))
      (NP (PRP you))
      (VP (VBD wanted)
        (S
          (VP (TO to)
            (VP (VB file)
              (NP (DT an) (VBN amended) (NN return)))))))
    (. .)))

det(way-3, the-2)
prep_by(breaks-10, way-3)
det(tax-9, the-5)
nn(tax-9, church-7)
nsubj(breaks-10, tax-9)
root(ROOT-0, breaks-10)
advmod(breaks-10, also-11)
dep(breaks-10, extend-12)
amod(atheists-15, organized-14)
prep_to(extend-12, atheists-15)
prep_in(wanted-20, case-18)
nsubj(wanted-20, you-19)
xsubj(file-22, you-19)
parataxis(breaks-10, wanted-20)
aux(file-22, to-21)
xcomp(wanted-20, file-22)
det(return-25, an-23)
amod(return-25, amended-24)
dobj(file-22, return-25)

