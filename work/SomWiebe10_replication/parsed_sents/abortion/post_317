(ROOT
  (FRAG
    (NP (PRP$ My) (NN error))
    (. ?)))

poss(error-2, My-1)
root(ROOT-0, error-2)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP
      (VP (VBD said)
        (NP (NN anything))
        (PP (IN about)
          (NP (NNS chromosomes))))
      (, ,)
      (CC nor)
      (VP (VBD mentioned)
        (NP (NN anything))
        (PP (IN about)
          (NP
            (NP (DT a) (JJ whole) (NN fetus))
            (CC or)
            (NP (DT a) (JJ whole) (NN human))))
        (PP (IN as)
          (S
            (VP (VBG being)
              (NP (DT a) (NN body) (NN part)))))))
    (. .)))

nsubj(said-3, I-1)
nsubj(mentioned-9, I-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
dobj(said-3, anything-4)
prep_about(said-3, chromosomes-6)
conj_nor(said-3, mentioned-9)
dobj(mentioned-9, anything-10)
det(fetus-14, a-12)
amod(fetus-14, whole-13)
prep_about(mentioned-9, fetus-14)
det(human-18, a-16)
amod(human-18, whole-17)
prep_about(mentioned-9, human-18)
conj_or(fetus-14, human-18)
cop(part-23, being-20)
det(part-23, a-21)
nn(part-23, body-22)
prepc_as(mentioned-9, part-23)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ very) (NN point))
      (PP (IN of)
        (NP (NNP dependency))))
    (VP (VBZ IS)
      (NP (DT the) (JJ umbilical) (NN cord)))
    (. .)))

det(point-3, The-1)
amod(point-3, very-2)
nsubj(cord-9, point-3)
prep_of(point-3, dependency-5)
cop(cord-9, IS-6)
det(cord-9, the-7)
amod(cord-9, umbilical-8)
root(ROOT-0, cord-9)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD nor)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP are)
            (ADJP (JJ dependent)
              (PP (IN for)
                (NP (NN life))))
            (PP (IN upon)
              (NP (NN anyone) (RB else)))))))
    (. .)))

nsubj(nor-2, You-1)
root(ROOT-0, nor-2)
nsubj(dependent-5, I-3)
cop(dependent-5, are-4)
ccomp(nor-2, dependent-5)
prep_for(dependent-5, life-7)
prep_upon(dependent-5, anyone-9)
advmod(anyone-9, else-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (MD can) (RB not)
          (VP (VB survive)
            (SBAR (IN because)
              (S
                (NP (PRP we))
                (VP (VBP are)
                  (ADJP (RB too) (JJ stupid)
                    (S
                      (VP (TO to)
                        (VP (VB know)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (VP (TO to)
                                (VP (VB do)
                                  (NP (DT that)))))))))))))))))
    (VP (VBZ is)
      (NP (PRP$ our) (JJ own) (NN fault)))
    (. .)))

mark(survive-5, If-1)
nsubj(survive-5, we-2)
aux(survive-5, can-3)
neg(survive-5, not-4)
csubj(fault-20, survive-5)
mark(stupid-10, because-6)
nsubj(stupid-10, we-7)
cop(stupid-10, are-8)
advmod(stupid-10, too-9)
advcl(survive-5, stupid-10)
aux(know-12, to-11)
xcomp(stupid-10, know-12)
nsubj(do-15, what-13)
aux(do-15, to-14)
ccomp(know-12, do-15)
xcomp(know-12, do-15)
dobj(do-15, that-16)
cop(fault-20, is-17)
poss(fault-20, our-18)
amod(fault-20, own-19)
root(ROOT-0, fault-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB not)
      (VP (VB depend)
        (PP (IN upon)
          (NP (NN someone) (RB else)))
        (S
          (VP (TO to)
            (VP
              (VP (VB breathe)
                (PP (IN for)
                  (NP (PRP me))))
              (, ,)
              (VP (VB feed)
                (NP (PRP me)))
              (, ,)
              (VP (VB keep)
                (S
                  (NP (PRP me))
                  (ADJP (JJ warm))))
              (, ,)
              (VP (VB etc.)))))))
    (. .)))

nsubj(depend-4, I-1)
xsubj(breathe-9, I-1)
aux(depend-4, do-2)
neg(depend-4, not-3)
root(ROOT-0, depend-4)
prep_upon(depend-4, someone-6)
advmod(someone-6, else-7)
aux(breathe-9, to-8)
xcomp(depend-4, breathe-9)
prep_for(breathe-9, me-11)
dep(breathe-9, feed-13)
dobj(feed-13, me-14)
dep(breathe-9, keep-16)
nsubj(warm-18, me-17)
xcomp(keep-16, warm-18)
dep(breathe-9, etc.-20)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB not)
      (VP (VB depend)
        (PP (IN upon)
          (NP
            (NP (NN anyone) (RB else))
            (PP (IN for)
              (NP (DT the) (JJ same) (NNS things)))))))
    (. .)))

nsubj(depend-4, You-1)
aux(depend-4, do-2)
neg(depend-4, not-3)
root(ROOT-0, depend-4)
prep_upon(depend-4, anyone-6)
advmod(anyone-6, else-7)
det(things-11, the-9)
amod(things-11, same-10)
prep_for(anyone-6, things-11)

(ROOT
  (UCP
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP (VBD wanted)
          (S
            (VP (TO to)
              (VP (VB attach)
                (NP (PRP themselves))
                (PP (TO to)
                  (NP
                    (NP (PRP you))
                    (PP (IN for)
                      (NP (CD nine) (NNS months)))))
                (SBAR (IN in) (NN order)
                  (S
                    (VP (TO to)
                      (VP (VB live))))))))
          (, ,)
          (S
            (NP (PRP you))
            (VP (VB have)
              (S
                (NP (DT every) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB say))))))
              ('' '')
              (S
                (VP (VB Thank)
                  (NP (PRP you)))))))))
    (, ,)
    (CC but)
    (ADVP (RB no.))))

mark(wanted-3, If-1)
nsubj(wanted-3, someone-2)
xsubj(attach-5, someone-2)
root(ROOT-0, wanted-3)
aux(attach-5, to-4)
xcomp(wanted-3, attach-5)
dobj(attach-5, themselves-6)
prep_to(attach-5, you-8)
num(months-11, nine-10)
prep_for(you-8, months-11)
mark(live-15, in-12)
dep(live-15, order-13)
aux(live-15, to-14)
purpcl(attach-5, live-15)
nsubj(have-18, you-17)
ccomp(wanted-3, have-18)
det(right-20, every-19)
dep(have-18, right-20)
aux(say-22, to-21)
infmod(right-20, say-22)
ccomp(have-18, Thank-24)
dobj(Thank-24, you-25)
conj_but(wanted-3, no.-28)

(ROOT
  (S ('' '')
    (NP (DT The) (NNS rights))
    (ADVP (IN to))
    (NP
      (NP (PRP$ your) (NN body))
      (NP (NNS parts)))
    (VP (VBP are)
      (ADJP (JJ immutable)))
    (. .)))

det(rights-3, The-2)
nsubj(immutable-9, rights-3)
advmod(immutable-9, to-4)
poss(body-6, your-5)
nsubj(immutable-9, body-6)
dep(body-6, parts-7)
cop(immutable-9, are-8)
root(ROOT-0, immutable-9)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD can)
              (VP (VB do)
                (SBAR
                  (WHNP (WDT whatever))
                  (S
                    (NP (PRP you))
                    (VP (VBP want)
                      (PP (TO to))
                      (PP (IN with)
                        (NP (PRP$ your) (NNS hands))))))))))))
    (. .)))

nsubj(mean-4, This-1)
aux(mean-4, does-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
nsubj(do-7, you-5)
aux(do-7, can-6)
ccomp(mean-4, do-7)
dobj(want-10, whatever-8)
nsubj(want-10, you-9)
ccomp(do-7, want-10)
prep(want-10, to-11)
poss(hands-14, your-13)
prep_with(want-10, hands-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (DT no) (NN one))
          (VP (MD can)
            (VP (VB take)
              (NP (PRP it))
              (PRT (RP away))
              (PP (IN from)
                (NP (PRP you))))))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
det(one-4, no-3)
nsubj(take-6, one-4)
aux(take-6, can-5)
ccomp(means-2, take-6)
dobj(take-6, it-7)
prep_away_from(take-6, you-10)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ does) (RB n't)
        (VP (VB mean)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD can)
                (VP (VB spit)
                  (PP (IN on)
                    (NP
                      (NP (NN whomever))
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBP want)
                            (PP (TO to))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (DT no) (NN one))
          (VP (MD can)
            (VP (VB demand)
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (VBP give)
                    (NP (PRP them))
                    (NP (PRP$ your) (NN spit)
                      (CC or)
                      (NN face) (NN jail)
                      (CC and)
                      (NNS fines))))))))))
    (. .)))

nsubj(mean-4, It-1)
aux(mean-4, does-2)
neg(mean-4, n't-3)
ccomp(means-15, mean-4)
nsubj(spit-7, you-5)
aux(spit-7, can-6)
ccomp(mean-4, spit-7)
prep_on(spit-7, whomever-9)
dobj(want-11, whomever-9)
prep_to(want-11, whomever-9)
nsubj(want-11, you-10)
rcmod(whomever-9, want-11)
nsubj(means-15, it-14)
root(ROOT-0, means-15)
det(one-17, no-16)
nsubj(demand-19, one-17)
aux(demand-19, can-18)
ccomp(means-15, demand-19)
complm(give-22, that-20)
nsubj(give-22, you-21)
ccomp(demand-19, give-22)
iobj(give-22, them-23)
poss(spit-25, your-24)
dobj(give-22, spit-25)
nn(jail-28, face-27)
dobj(give-22, jail-28)
conj_or(spit-25, jail-28)
dobj(give-22, fines-30)
conj_and(spit-25, fines-30)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (DT no) (NN one))
          (VP (MD can)
            (VP (VB take)
              (NP (PRP$ your) (NN bone) (NN marrow))
              (PP (IN from)
                (NP (PRP you))))))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
det(one-4, no-3)
nsubj(take-6, one-4)
aux(take-6, can-5)
ccomp(means-2, take-6)
poss(marrow-9, your-7)
nn(marrow-9, bone-8)
dobj(take-6, marrow-9)
prep_from(take-6, you-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN government))
        (VP (VBZ has)
          (NP (DT a) (NN right)
            (S
              (VP (TO to)
                (VP (VB govern)
                  (NP
                    (NP
                      (NP (DT a) (NN woman) (POS 's))
                      (NN womb))
                    (PRN (-LRB- -LRB-)
                      (NP
                        (NP (DT a) (NN part))
                        (PP
                          (PP (IN of)
                            (NP (PRP$ her) (NN body)))
                          (: ...)
                          (PP (IN as)
                            (FRAG
                              (X (IN in))
                              (: ...)
                              (NP (NN body) (NN part))))))
                      (-RRB- -RRB-))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP do)
      (S
        (INTJ (UH no))
        (VP (VB retain)
          (NP (DT the) (NN right))
          (PP (TO to)
            (NP
              (NP (DT any))
              (PP (IN of)
                (NP (PRP$ your) (NN body) (NNS parts))))))))
    (. .)))

mark(has-4, If-1)
det(government-3, the-2)
nsubj(has-4, government-3)
advcl(do-28, has-4)
det(right-6, a-5)
dobj(has-4, right-6)
aux(govern-8, to-7)
infmod(right-6, govern-8)
det(woman-10, a-9)
poss(womb-12, woman-10)
dobj(govern-8, womb-12)
det(part-15, a-14)
dep(womb-12, part-15)
poss(body-18, her-17)
prep_of(part-15, body-18)
prep(part-15, as-20)
dep(part-24, in-21)
nn(part-24, body-23)
dep(as-20, part-24)
nsubj(do-28, you-27)
root(ROOT-0, do-28)
dep(retain-30, no-29)
ccomp(do-28, retain-30)
det(right-32, the-31)
dobj(retain-30, right-32)
prep_to(retain-30, any-34)
poss(parts-38, your-36)
nn(parts-38, body-37)
prep_of(any-34, parts-38)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP are) (RB not)
            (ADJP (JJ responsible)
              (PP (IN for)
                (S
                  (VP (VBG giving)
                    (NP (NN blood))))))))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
nsubj(responsible-6, you-3)
cop(responsible-6, are-4)
neg(responsible-6, not-5)
ccomp(means-2, responsible-6)
prepc_for(responsible-6, giving-8)
dobj(giving-8, blood-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ means)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP do) (RB not)
            (VP (VB HAVE)
              (S
                (VP (TO to)
                  (VP (VB give)
                    (NP (PRP$ your) (NNP Aunt) (NNP Judy))
                    (NP
                      (NP (DT a) (NN kidney))
                      (CC nor)
                      (NP
                        (NP (NN anyone) (RB else))
                        (PP (IN for)
                          (NP (DT that) (NN matter)))))))))))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
nsubj(HAVE-6, you-3)
xsubj(give-8, you-3)
aux(HAVE-6, do-4)
neg(HAVE-6, not-5)
ccomp(means-2, HAVE-6)
aux(give-8, to-7)
xcomp(HAVE-6, give-8)
poss(Judy-11, your-9)
nn(Judy-11, Aunt-10)
dep(give-8, Judy-11)
det(kidney-13, a-12)
dobj(give-8, kidney-13)
dobj(give-8, anyone-15)
conj_nor(kidney-13, anyone-15)
advmod(anyone-15, else-16)
det(matter-19, that-18)
prep_for(anyone-15, matter-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB n't)
      (VP (VB matter)
        (SBAR (IN if)
          (S
            (NP (NN someone) (RB else))
            (VP (MD will)
              (VP
                (VP (VB live))
                (CC or)
                (VP (VB die)
                  (PP (VBN based)
                    (PP (IN on)
                      (NP (PRP$ your) (NN choice)))))))))))
    (. .)))

nsubj(matter-4, It-1)
aux(matter-4, does-2)
neg(matter-4, n't-3)
root(ROOT-0, matter-4)
mark(live-9, if-5)
nsubj(live-9, someone-6)
nsubj(die-11, someone-6)
advmod(someone-6, else-7)
aux(live-9, will-8)
advcl(matter-4, live-9)
advcl(matter-4, die-11)
conj_or(live-9, die-11)
prepc_based_on(die-11, on-13)
poss(choice-15, your-14)
pobj(die-11, choice-15)

(ROOT
  (S
    (NP (PRP YOU))
    (VP (VBP have)
      (NP (DT the) (JJ immutable) (NN right))
      (PP (TO to)
        (NP (PRP$ your) (NN body))))
    (. .)))

nsubj(have-2, YOU-1)
root(ROOT-0, have-2)
det(right-5, the-3)
amod(right-5, immutable-4)
dobj(have-2, right-5)
poss(body-8, your-7)
prep_to(have-2, body-8)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD may)
        (VP (VB be)
          (ADJP (JJ crappy))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT a) (NN person))
                (-LRB- -LRB-)
                (CC or)
                (NP (DT a) (JJ potential) (NN person))
                (-RRB- -RRB-))
              (VP (MD will)
                (VP
                  (VP (`` ``) (VB die) ('' ''))
                  (CC or)
                  (VP
                    (ADVP (RB just) (RB not))
                    (VB live)
                    (SBAR (IN because)
                      (S
                        (NP (PRP you))
                        (VP (VBP choose)
                          (S
                            (VP (TO to)
                              (VP (VB retain)
                                (NP (PRP$ your) (NNS rights))))))))))))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB fortunately))
      (PP (IN for)
        (NP
          (NP (PRP you))
          (CC and)
          (NP (NN everyone) (RB else))))
      (NP (PRP you))
      (VP (VBP have)
        (NP (DT those) (NNS rights))))
    (. .)))

nsubj(crappy-4, It-1)
aux(crappy-4, may-2)
cop(crappy-4, be-3)
root(ROOT-0, crappy-4)
complm(die-16, that-5)
det(person-7, a-6)
nsubj(die-16, person-7)
nsubj(live-21, person-7)
det(person-12, a-10)
amod(person-12, potential-11)
conj_or(person-7, person-12)
nsubj(die-16, person-12)
aux(die-16, will-14)
ccomp(crappy-4, die-16)
advmod(not-20, just-19)
neg(live-21, not-20)
ccomp(crappy-4, live-21)
conj_or(die-16, live-21)
mark(choose-24, because-22)
nsubj(choose-24, you-23)
advcl(live-21, choose-24)
aux(retain-26, to-25)
xcomp(choose-24, retain-26)
poss(rights-28, your-27)
dobj(retain-26, rights-28)
advmod(have-38, fortunately-31)
prep_for(have-38, you-33)
conj_and(you-33, everyone-35)
prep_for(have-38, everyone-35)
advmod(everyone-35, else-36)
nsubj(have-38, you-37)
conj_but(crappy-4, have-38)
det(rights-40, those-39)
dobj(have-38, rights-40)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS rights))
      (PP (TO to)
        (NP (PRP$ my) (NN womb)
          (CC and)
          (NN vagina))))
    (VP (VBP are)
      (ADJP (JJ immutable)))
    (. .)))

det(rights-2, The-1)
nsubj(immutable-9, rights-2)
poss(womb-5, my-4)
prep_to(rights-2, womb-5)
prep_to(rights-2, vagina-7)
conj_and(womb-5, vagina-7)
cop(immutable-9, are-8)
root(ROOT-0, immutable-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS rights))
      (PP (TO to)
        (NP (PRP you))))
    (VP
      (VP (VBZ testicals))
      (CC and)
      (VP
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ goes)
              (PRT (RP on))
              (SBAR (IN in)
                (S
                  (NP (EX there))
                  (VP (VBP are)
                    (ADJP (JJ immutable))))))))))
    (. .)))

det(rights-2, The-1)
nsubj(testicals-5, rights-2)
prep_to(rights-2, you-4)
root(ROOT-0, testicals-5)
nsubj(goes-8, what-7)
conj_and(testicals-5, goes-8)
prt(goes-8, on-9)
mark(are-12, in-10)
expl(are-12, there-11)
advcl(goes-8, are-12)
acomp(are-12, immutable-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR (IN that) (IN because)
            (S
              (NP (DT a) (NN life))
              (VP (VBZ is)
                (PP (IN at)
                  (NP (NN stake)))
                (SBAR (IN that)
                  (S
                    (NP (DT a) (NN woman))
                    (VP (VBZ does) (RB not)
                      (VP (VB have)
                        (NP
                          (NP
                            (NP (DT the) (NN right))
                            (PP (TO to)
                              (NP (PRP$ her) (NN body))))
                          (CC or)
                          (NP
                            (NP (DT any))
                            (PP (IN of)
                              (NP (PRP$ its) (NNS parts)))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP say)
      (SBAR
        (S
          (NP (PRP$ our) (NNS bodies))
          (VP (VBP are) (RB not)
            (NP (PRP$ our) (JJ own))))))
    (. .)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(say-29, say-3)
complm(is-8, that-4)
dep(is-8, because-5)
det(life-7, a-6)
nsubj(is-8, life-7)
ccomp(say-3, is-8)
prep_at(is-8, stake-10)
complm(have-16, that-11)
det(woman-13, a-12)
nsubj(have-16, woman-13)
aux(have-16, does-14)
neg(have-16, not-15)
ccomp(is-8, have-16)
det(right-18, the-17)
dobj(have-16, right-18)
poss(body-21, her-20)
prep_to(right-18, body-21)
dobj(have-16, any-23)
conj_or(right-18, any-23)
poss(parts-26, its-25)
prep_of(any-23, parts-26)
nsubj(say-29, you-28)
root(ROOT-0, say-29)
poss(bodies-31, our-30)
nsubj(own-35, bodies-31)
cop(own-35, are-32)
neg(own-35, not-33)
poss(own-35, our-34)
ccomp(say-29, own-35)

(ROOT
  (S
    (PP (IN In)
      (NP (WDT which) (NN case)))
    (S
      (NP (PRP I)))
    (NP (PRP you))
    (VP (VBD had)
      (ADVP (RBR better))
      (VP (VB be)
        (VP (VBN registered)
          (CC and)
          (VBN prepared)
          (S
            (VP (TO to)
              (VP (VB donate)
                (NP
                  (NP (PRP$ your) (NN bone) (NN marrow))
                  (, ,)
                  (CC and)
                  (NP (PRP$ your) (NN kidney)))))))))
    (. .)))

dep(case-3, which-2)
prep_in(registered-9, case-3)
dep(registered-9, I-4)
nsubjpass(registered-9, you-5)
nsubjpass(prepared-11, you-5)
aux(registered-9, had-6)
advmod(registered-9, better-7)
auxpass(registered-9, be-8)
root(ROOT-0, registered-9)
conj_and(registered-9, prepared-11)
aux(donate-13, to-12)
xcomp(registered-9, donate-13)
poss(marrow-16, your-14)
nn(marrow-16, bone-15)
dobj(donate-13, marrow-16)
poss(kidney-20, your-19)
dobj(donate-13, kidney-20)
conj_and(marrow-16, kidney-20)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD should)
        (VP (VB have)
          (NP (DT a) (VBG living) (NN will))
          (SBAR
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ gives)
                  (PRT (RP away))
                  (NP
                    (NP (PRP$ your) (NNS eyes))
                    (, ,)
                    (CC and)
                    (NP (PRP$ your) (NN heart))))))
            (CC and)
            (SBAR
              (WHNP (WDT whatever))
              (S
                (ADVP (RB else))
                (VP (VBZ is)
                  (ADJP (JJ salvageable)
                    (PP (IN in)
                      (NP
                        (NP (DT the) (NN event))
                        (SBAR
                          (S
                            (NP (PRP you))
                            (VP (VBP 're)
                              (VP (VBN made)
                                (S
                                  (NP (NN brain))
                                  (ADJP (JJ dead)))))))))))))))))
    (, ,)
    (CC or)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADJP (JJ clear)
          (SBAR
            (S
              (NP (PRP you))
              (VP (MD wo) (RB n't)
                (VP (VB live))))))))
    (. .)))

nsubj(have-3, You-1)
aux(have-3, should-2)
root(ROOT-0, have-3)
det(will-6, a-4)
amod(will-6, living-5)
dobj(have-3, will-6)
nsubj(gives-8, that-7)
dep(have-3, gives-8)
prt(gives-8, away-9)
poss(eyes-11, your-10)
dobj(gives-8, eyes-11)
poss(heart-15, your-14)
dobj(gives-8, heart-15)
conj_and(eyes-11, heart-15)
nsubj(salvageable-20, whatever-17)
advmod(salvageable-20, else-18)
cop(salvageable-20, is-19)
dep(have-3, salvageable-20)
conj_and(gives-8, salvageable-20)
det(event-23, the-22)
prep_in(salvageable-20, event-23)
nsubjpass(made-26, you-24)
auxpass(made-26, 're-25)
rcmod(event-23, made-26)
nsubj(dead-28, brain-27)
xcomp(made-26, dead-28)
nsubj(clear-33, it-31)
cop(clear-33, 's-32)
conj_or(have-3, clear-33)
nsubj(live-37, you-34)
aux(live-37, wo-35)
neg(live-37, n't-36)
dep(clear-33, live-37)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP do) (RB not)
      (VP (VB retain)
        (NP
          (NP (DT the)
            (ADJP (JJ right)
              (PP (TO to)
                (NP (PRP you))))
            (NN bone) (NN marrow))
          (, ,)
          (CC nor)
          (NP
            (NP (PRP$ your)
              (NX (NN blood)))
            (, ,)
            (CC nor)
            (NP
              (NP (CD one))
              (PP (IN of)
                (NP (PRP$ your) (NNS kidneys))))))
        (, ,)
        (SBAR (IN as)
          (S
            (NP (DT those) (NNS things))
            (VP (VBP do) (RB n't)
              (VP (VB belong)
                (PP (TO to)
                  (NP (PRP you)))))))))
    (. .)))

nsubj(retain-4, You-1)
aux(retain-4, do-2)
neg(retain-4, not-3)
root(ROOT-0, retain-4)
det(marrow-10, the-5)
amod(marrow-10, right-6)
prep_to(right-6, you-8)
nn(marrow-10, bone-9)
dobj(retain-4, marrow-10)
poss(blood-14, your-13)
dobj(retain-4, blood-14)
conj_nor(marrow-10, blood-14)
conj_nor(marrow-10, one-17)
conj_nor(blood-14, one-17)
poss(kidneys-20, your-19)
prep_of(one-17, kidneys-20)
mark(belong-27, as-22)
det(things-24, those-23)
nsubj(belong-27, things-24)
aux(belong-27, do-25)
neg(belong-27, n't-26)
advcl(retain-4, belong-27)
prep_to(belong-27, you-29)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (PRP you))
        (VP (VBP seem)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP (RB so) (JJ big))
                (PP (IN on)
                  (NP
                    (NP (DT this) (`` ``) (NN life) ('' '') (NN thing))
                    (, ,)
                    (CC and)
                    (NP (DT the) (NN idea))))
                (SBAR (IN that)
                  (FRAG
                    (NP (PRP$ our) (NN body))))))))))
    (NP (NNS parts))
    (VP (VBP do) (RB not)
      (VP (VB belong)
        (PP (TO to)
          (NP (PRP$ our) (JJ own) (NNS selves)))))
    (. .)))

mark(seem-3, Since-1)
nsubj(seem-3, you-2)
xsubj(big-7, you-2)
advcl(belong-24, seem-3)
aux(big-7, to-4)
cop(big-7, be-5)
advmod(big-7, so-6)
xcomp(seem-3, big-7)
det(thing-13, this-9)
nn(thing-13, life-11)
prep_on(big-7, thing-13)
det(idea-17, the-16)
prep_on(big-7, idea-17)
conj_and(thing-13, idea-17)
complm(body-20, that-18)
poss(body-20, our-19)
dep(big-7, body-20)
nsubj(belong-24, parts-21)
aux(belong-24, do-22)
neg(belong-24, not-23)
root(ROOT-0, belong-24)
poss(selves-28, our-26)
amod(selves-28, own-27)
prep_to(belong-24, selves-28)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN taken)
          (PP (IN at)
            (NP (NN will)))
          (SBAR
            (WHADVP (WRB whenever))
            (S
              (NP (DT the) (NN need))
              (VP (VBZ arises)
                (SBAR (IN because)
                  (S
                    (NP (DT the) (NN use))
                    (VP (MD will)
                      (VP (VB save)
                        (NP (DT a) (NN life))))))))))))
    (. .)))

nsubjpass(taken-4, They-1)
aux(taken-4, can-2)
auxpass(taken-4, be-3)
root(ROOT-0, taken-4)
prep_at(taken-4, will-6)
advmod(arises-10, whenever-7)
det(need-9, the-8)
nsubj(arises-10, need-9)
advcl(taken-4, arises-10)
mark(save-15, because-11)
det(use-13, the-12)
nsubj(save-15, use-13)
aux(save-15, will-14)
advcl(arises-10, save-15)
det(life-17, a-16)
dobj(save-15, life-17)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB Where))
      (S
        (NP (PRP you))
        (VP (VBP get)
          (NP
            (NP (DT this)
              (ADJP (JJ retarded))
              (NN analogy))
            (PP (IN of)
              (S
                (VP (VBG shooting)
                  (NP (PRP me))
                  (PP (IN with)
                    (NP (PRP$ your) (NN hand))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm) (RB not)
      (ADJP (RB quite) (JJ sure)))
    (. .)))

advmod(get-3, Where-1)
nsubj(get-3, you-2)
advcl(sure-18, get-3)
det(analogy-6, this-4)
amod(analogy-6, retarded-5)
dobj(get-3, analogy-6)
prepc_of(analogy-6, shooting-8)
dobj(shooting-8, me-9)
poss(hand-12, your-11)
prep_with(shooting-8, hand-12)
nsubj(sure-18, I-14)
cop(sure-18, 'm-15)
neg(sure-18, not-16)
advmod(sure-18, quite-17)
root(ROOT-0, sure-18)

(ROOT
  (S (CC And)
    (NP (DT that))
    (VP (VBZ 's)
      (NP (DT a)
        (ADJP (RB very) (JJ good))
        (NN point)))
    (. .)))

cc(point-7, And-1)
nsubj(point-7, that-2)
cop(point-7, 's-3)
det(point-7, a-4)
advmod(good-6, very-5)
amod(point-7, good-6)
root(ROOT-0, point-7)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN government))
        (VP (VBZ has)
          (NP (DT the) (NN right)
            (S
              (VP (TO to)
                (VP (VB tell)
                  (NP
                    (NP (DT a) (NN woman))
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP she))
                        (VP (MD can)
                          (CC and)
                          (MD can) (RB not)
                          (VP (VB do)
                            (PP (IN with)
                              (NP (PRP$ her) (NN womb)))))))))))))))
    (, ,) (RB then)
    (NP (DT the) (NN government))
    (ADVP (RB also))
    (VP (VBZ has)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB tell)
              (NP
                (NP (DT a) (NN man))
                (SBAR
                  (WHNP (WP what))
                  (S
                    (NP (PRP he))
                    (VP (MD can)
                      (CC and)
                      (MD can) (RB not)
                      (VP (VB do)
                        (PP (IN with)
                          (NP (PRP$ his) (NN sperm)))))))))))))
    (. .)))

mark(has-4, If-1)
det(government-3, the-2)
nsubj(has-4, government-3)
advcl(has-26, has-4)
det(right-6, the-5)
dobj(has-4, right-6)
aux(tell-8, to-7)
infmod(right-6, tell-8)
det(woman-10, a-9)
dobj(tell-8, woman-10)
dobj(do-17, woman-10)
rel(do-17, what-11)
nsubj(do-17, she-12)
aux(do-17, can-13)
rcmod(woman-10, can-15)
aux(do-17, can-15)
conj_and(do-17, can-15)
neg(do-17, not-16)
rcmod(woman-10, do-17)
poss(womb-20, her-19)
prep_with(do-17, womb-20)
advmod(has-26, then-22)
det(government-24, the-23)
nsubj(has-26, government-24)
advmod(has-26, also-25)
root(ROOT-0, has-26)
det(right-28, the-27)
dobj(has-26, right-28)
aux(tell-30, to-29)
infmod(right-28, tell-30)
det(man-32, a-31)
dobj(tell-30, man-32)
dobj(do-39, man-32)
rel(do-39, what-33)
nsubj(do-39, he-34)
aux(do-39, can-35)
rcmod(man-32, can-37)
aux(do-39, can-37)
conj_and(do-39, can-37)
neg(do-39, not-38)
rcmod(man-32, do-39)
poss(sperm-42, his-41)
prep_with(do-39, sperm-42)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN government))
        (VP (VBZ wants)
          (NP (PRP it)))))
    (NP (PRP they))
    (VP (MD 'll)
      (VP (VB get)
        (NP (PRP it))
        (SBAR (IN because)
          (S
            (NP (PRP you))
            (ADVP (RB no) (RB longer))
            (VP (VBP retain)
              (NP
                (NP (DT the) (NNS rights))
                (SBAR
                  (WHPP (TO to)
                    (WHNP (WDT whatever)))
                  (S
                    (NP (PRP$ your) (NN body))
                    (VP
                      (VP (VBZ produces))
                      (, ,)
                      (CC or)
                      (VP (VBZ sustains)))))))))))
    (. .)))

mark(wants-4, If-1)
det(government-3, the-2)
nsubj(wants-4, government-3)
advcl(get-8, wants-4)
dobj(wants-4, it-5)
nsubj(get-8, they-6)
aux(get-8, 'll-7)
root(ROOT-0, get-8)
dobj(get-8, it-9)
mark(retain-14, because-10)
nsubj(retain-14, you-11)
advmod(longer-13, no-12)
advmod(retain-14, longer-13)
advcl(get-8, retain-14)
det(rights-16, the-15)
dobj(retain-14, rights-16)
rel(produces-21, whatever-18)
poss(body-20, your-19)
nsubj(produces-21, body-20)
nsubj(sustains-24, body-20)
rcmod(rights-16, produces-21)
rcmod(rights-16, sustains-24)
conj_or(produces-21, sustains-24)

(ROOT
  (NP
    (NP (DT The) (JJ same))
    (PP (IN for)
      (NP (DT the) (NNS eggs)))
    (PP (IN of)
      (NP (DT the) (JJ same) (NN woman)))
    (. .)))

det(same-2, The-1)
root(ROOT-0, same-2)
det(eggs-5, the-4)
prep_for(same-2, eggs-5)
det(woman-9, the-7)
amod(woman-9, same-8)
prep_of(same-2, woman-9)

