(ROOT
  (S
    (NP
      (NP (DT The) (NN taking))
      (PP (IN of)
        (NP
          (NP
            (NP (CD one) (NN being) (POS 's))
            (NN life))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ has)
                (VP (VBN done)
                  (NP (NN nothing))
                  (S
                    (VP
                      (VP (TO to)
                        (VP (VB warrant)
                          (NP (PRP$ its) (NN destruction))))
                      (IN except)
                      (VP
                        (PP (IN for)
                          (S
                            (VP (VBG being)
                              (VP (VBN formed)
                                (PP (IN as)
                                  (NP
                                    (NP (DT a) (NN side) (NN effect))
                                    (PP (IN of)
                                      (NP
                                        (NP (PRP it) (POS 's))
                                        (NN parents) ('' '') (NNS actions))))))))))))
                  (, ,)
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN sake))
                      (PP (IN of)
                        (NP (DT that) (JJ small) (NN liberty))))))))))))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP (JJ justified))))
    (. .)))

det(taking-2, The-1)
nsubj(justified-42, taking-2)
num(being-5, one-4)
poss(life-7, being-5)
prep_of(taking-2, life-7)
nsubj(done-11, life-7)
aux(done-11, has-10)
rcmod(life-7, done-11)
dobj(done-11, nothing-12)
aux(warrant-14, to-13)
dep(done-11, warrant-14)
poss(destruction-16, its-15)
dobj(warrant-14, destruction-16)
dep(warrant-14, except-17)
dep(warrant-14, for-18)
auxpass(formed-20, being-19)
pcomp(for-18, formed-20)
det(effect-24, a-22)
nn(effect-24, side-23)
prep_as(formed-20, effect-24)
poss(actions-30, it-26)
nn(actions-30, parents-28)
prep_of(effect-24, actions-30)
det(sake-34, the-33)
prep_for(done-11, sake-34)
det(liberty-38, that-36)
amod(liberty-38, small-37)
prep_of(sake-34, liberty-38)
aux(justified-42, can-39)
neg(justified-42, not-40)
cop(justified-42, be-41)
root(ROOT-0, justified-42)

