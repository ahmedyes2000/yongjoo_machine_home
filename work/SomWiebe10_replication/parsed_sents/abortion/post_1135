(ROOT
  (S (CC So)
    (S
      (NP
        (NP (DT the) (NN woman) (POS 's))
        (NN decision))
      (VP (VBZ means)
        (S
          (VP (VBG killing)
            (NP (DT a) (NN child))))))
    (, ,)
    (CC and)
    (S
      (NP (DT that))
      (VP (MD should)
        (VP (VB be)
          (VP (VBN ok)))))
    (. ?)))

det(woman-3, the-2)
poss(decision-5, woman-3)
nsubj(means-6, decision-5)
root(ROOT-0, means-6)
xcomp(means-6, killing-7)
det(child-9, a-8)
dobj(killing-7, child-9)
nsubjpass(ok-15, that-12)
aux(ok-15, should-13)
auxpass(ok-15, be-14)
conj_and(means-6, ok-15)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ is)
      (NP
        (NP (DT the) (NN fact))
        (SBAR (IN that)
          (S
            (NP (DT the) (NN child))
            (VP (VBD was)
              (VP (VBN conceived)
                (PP (IN through)
                  (NP
                    (NP (NN rape))
                    (, ,)
                    (NP (DT the) (JJ childs) (NN fault))))))))))
    (. ?)))

advmod(is-2, How-1)
root(ROOT-0, is-2)
det(fact-4, the-3)
nsubj(is-2, fact-4)
complm(conceived-9, that-5)
det(child-7, the-6)
nsubjpass(conceived-9, child-7)
auxpass(conceived-9, was-8)
dep(fact-4, conceived-9)
prep_through(conceived-9, rape-11)
det(fault-15, the-13)
amod(fault-15, childs-14)
appos(rape-11, fault-15)

(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB treat)
      (S
        (NP (DT this) (NN child))
        (ADJP (JJ different))
        (SBAR (IN after)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (VP (VBN born)))))))
    (. ?)))

aux(treat-3, Would-1)
nsubj(treat-3, you-2)
root(ROOT-0, treat-3)
det(child-5, this-4)
nsubjpass(born-10, child-5)
dep(born-10, different-6)
mark(born-10, after-7)
nsubjpass(born-10, it-8)
auxpass(born-10, was-9)
xcomp(treat-3, born-10)

(ROOT
  (FRAG
    (ADJP (IN So))
    (, ,)
    (SBAR
      (WHADVP (WRB why))
      (S
        (VP (VBP treat)
          (S
            (NP (PRP it))
            (ADJP (DT any) (JJ different))
            (ADVP (RB before))))))
    (. ?)))

root(ROOT-0, So-1)
advmod(treat-4, why-3)
dep(So-1, treat-4)
nsubj(different-7, it-5)
dep(different-7, any-6)
xcomp(treat-4, different-7)
advmod(different-7, before-8)

(ROOT
  (S
    (ADVP (RB Finally))
    (, ,)
    (NP (NN abortion))
    (VP (VBZ is)
      (ADVP (RB NOT))
      (NP (DT the) (JJ only) (NN way)
        (S
          (VP (TO to)
            (VP (VB escape)
              (S
                (VP (VBG raising)
                  (NP
                    (NP (DT a) (NN child))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (MD would)
                          (VP (VB remind)
                            (S
                              (NP
                                (NP (DT that) (NN person))
                                (PP (IN of)
                                  (NP (NN something))))
                              (ADJP (JJ horrible)))))))))))))))
    (. .)))

advmod(way-8, Finally-1)
nsubj(way-8, abortion-3)
cop(way-8, is-4)
neg(way-8, NOT-5)
det(way-8, the-6)
amod(way-8, only-7)
root(ROOT-0, way-8)
aux(escape-10, to-9)
infmod(way-8, escape-10)
xcomp(escape-10, raising-11)
det(child-13, a-12)
dobj(raising-11, child-13)
nsubj(remind-16, child-13)
aux(remind-16, would-15)
rcmod(child-13, remind-16)
det(person-18, that-17)
nsubj(horrible-21, person-18)
prep_of(person-18, something-20)
xcomp(remind-16, horrible-21)

(ROOT
  (S
    (NP (PRP They))
    (VP (MD can)
      (VP (VB put)
        (NP (DT the) (NN child))
        (PRT (RP up))
        (PP (IN for)
          (NP (NN adoption)))))
    (. .)))

nsubj(put-3, They-1)
aux(put-3, can-2)
root(ROOT-0, put-3)
det(child-5, the-4)
dobj(put-3, child-5)
prt(put-3, up-6)
prep_for(put-3, adoption-8)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS thousands))
        (PP (IN of)
          (NP
            (NP (NNS families))
            (VP (VBG waiting))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, thousands-3)
prep_of(thousands-3, families-5)
partmod(families-5, waiting-6)

