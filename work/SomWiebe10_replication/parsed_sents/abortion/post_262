(ROOT
  (S
    (NP (NNP Babies))
    (VP (VBP ARE)
      (NP
        (NP (NN part))
        (PP (IN of)
          (NP (DT the) (NN mother)))))
    (. .)))

nsubj(part-3, Babies-1)
cop(part-3, ARE-2)
root(ROOT-0, part-3)
det(mother-6, the-5)
prep_of(part-3, mother-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (NP
        (NP
          (NP (NN part))
          (PP (IN of) (`` ``)
            (NP (PRP her))
            ('' '')))
        (NN body)))
    (. .)))

nsubj(body-8, They-1)
cop(body-8, are-2)
nn(body-8, part-3)
prep_of(part-3, her-6)
root(ROOT-0, body-8)

(ROOT
  (SBARQ
    (SBAR (IN Unless)
      (S
        (NP
          (NP (DT the) (NN government))
          (SBAR
            (S
              (VP (VBZ says)
                (VP ('' '')
                  (NP (RB Here)))))))
        (VP (VBZ 's)
          (NP
            (NP
              (NP (JJ maternity) (NN pay))
              (PP (IN at)
                (NP
                  (NP (DT the) (NN rate))
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBD were)
                        (VP (VBG receiving)
                          (ADVP (RB prior)
                            (PP (TO to)
                              (NP (PRP$ your) (NN pregnancy)))))))))))
            (CONJP (RB as) (RB well) (IN as))
            (NP
              (NP (JJ free) (NN food))
              (PP (IN for)
                (NP (DT the) (NN baby))))))))
    (, ,) ('' '')
    (WHADVP (WRB why))
    (SQ (MD should)
      (NP (PRP she))
      (VP (VB pay)
        (PP (IN for)
          (NP (DT this)))))
    (. ?)))

mark(pay-9, Unless-1)
det(government-3, the-2)
nsubj(pay-9, government-3)
rcmod(government-3, says-4)
dep(says-4, Here-6)
cop(pay-9, 's-7)
amod(pay-9, maternity-8)
advcl(pay-33, pay-9)
det(rate-12, the-11)
prep_at(pay-9, rate-12)
dobj(receiving-15, rate-12)
nsubj(receiving-15, you-13)
aux(receiving-15, were-14)
rcmod(rate-12, receiving-15)
poss(pregnancy-19, your-18)
prep_prior_to(receiving-15, pregnancy-19)
amod(food-24, free-23)
conj_and(pay-9, food-24)
advcl(pay-33, food-24)
det(baby-27, the-26)
prep_for(food-24, baby-27)
advmod(pay-33, why-30)
aux(pay-33, should-31)
nsubj(pay-33, she-32)
root(ROOT-0, pay-33)
prep_for(pay-33, this-35)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD should)
      (VP (VB be)
        (ADVP (RB up)
          (PP (TO to)
            (NP (PRP her))))
        (S
          (VP (TO to)
            (VP (VB decide))))))
    (. .)))

nsubj(be-3, It-1)
aux(be-3, should-2)
root(ROOT-0, be-3)
advmod(be-3, up-4)
prep_to(up-4, her-6)
aux(decide-8, to-7)
xcomp(be-3, decide-8)

(ROOT
  (S
    (S
      (VP (VBG Saying)
        (ADVP (RB otherwise))))
    (VP (VBZ is)
      (ADJP (JJ ridiculous)))
    (. .)))

csubj(ridiculous-4, Saying-1)
advmod(Saying-1, otherwise-2)
cop(ridiculous-4, is-3)
root(ROOT-0, ridiculous-4)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBZ does)
      (NP (DT the) (NN baby))
      (VP (VB receive)
        (NP (NN life))))
    (. ?)))

advmod(receive-5, Where-1)
aux(receive-5, does-2)
det(baby-4, the-3)
nsubj(receive-5, baby-4)
root(ROOT-0, receive-5)
dobj(receive-5, life-6)

(ROOT
  (S
    (PP (IN From)
      (NP
        (NP (DT the) (NN mother))
        (VP (VBG giving)
          (NP (PRP it))
          (NP (NN life))
          (PP (IN by)
            (S
              (VP (VBG letting)))))))
    (NP (PRP it))
    (VP (VBP live)
      (PRT (RP off))
      (PP (IN of)
        (NP (PRP$ her) (NN food) (, ,) (NN water) (, ,) (NNS blood) (, ,) (FW etc.))))
    (. .)))

det(mother-3, the-2)
prep_from(live-10, mother-3)
partmod(mother-3, giving-4)
iobj(giving-4, it-5)
dobj(giving-4, life-6)
agent(giving-4, letting-8)
nsubj(live-10, it-9)
root(ROOT-0, live-10)
poss(blood-18, her-13)
nn(blood-18, food-14)
dep(blood-18, water-16)
prep_off_of(live-10, blood-18)
dep(blood-18, etc.-20)

(ROOT
  (SQ (NNP Does)
    (NP (NN everyone))
    (VP (VB make)
      (NP (JJ wrong) (NNS decisions)))
    (. ?)))

dep(make-3, Does-1)
nsubj(make-3, everyone-2)
root(ROOT-0, make-3)
amod(decisions-5, wrong-4)
dobj(make-3, decisions-5)

(ROOT
  (INTJ (UH Yes) (. .)))

root(ROOT-0, Yes-1)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (DT a) (NN man))
        (VP (VBZ decides)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (DT a) (JJ poor) (NN decision))
                (PP (IN by)
                  (S
                    (VP (VBG having)
                      (VP (VBN unprotected)
                        (NP (NN sex))
                        (PP (IN with)
                          (NP (DT a) (NN woman)))))))))))))
    (, ,)
    (NP (PRP he))
    (VP (MD can)
      (VP (VB leave)))
    (. .)))

cc(leave-21, But-1)
mark(decides-5, if-2)
det(man-4, a-3)
nsubj(decides-5, man-4)
xsubj(make-7, man-4)
advcl(leave-21, decides-5)
aux(make-7, to-6)
xcomp(decides-5, make-7)
det(decision-10, a-8)
amod(decision-10, poor-9)
dobj(make-7, decision-10)
aux(unprotected-13, having-12)
prepc_by(make-7, unprotected-13)
dobj(unprotected-13, sex-14)
det(woman-17, a-16)
prep_with(unprotected-13, woman-17)
nsubj(leave-21, he-19)
aux(leave-21, can-20)
root(ROOT-0, leave-21)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (DT this) (NN woman))
    (VP (VBZ has)
      (NP
        (NP
          (NP (NN part))
          (PP (IN of)
            (NP
              (NP (DT a) (NN man))
              (PP (IN in)
                (NP (PRP her)))))
          (SBAR (IN that)
            (S
              (NP (PRP she))
              (VP (VBZ does) (RB n't)
                (VP (VB want))))))
        (CONJP (RB as) (RB well) (IN as))
        (NP (DT no) (NN father)
          (S
            (VP (TO to)
              (VP (VB bring)
                (NP (PRP it))
                (PP (IN into)
                  (NP (DT this) (NN world)))))))))
    (. .)))

advmod(has-4, Now-1)
det(woman-3, this-2)
nsubj(has-4, woman-3)
root(ROOT-0, has-4)
dobj(has-4, part-5)
dobj(want-15, part-5)
det(man-8, a-7)
prep_of(part-5, man-8)
prep_in(man-8, her-10)
dep(want-15, that-11)
nsubj(want-15, she-12)
aux(want-15, does-13)
neg(want-15, n't-14)
dep(part-5, want-15)
det(father-20, no-19)
dobj(has-4, father-20)
conj_and(part-5, father-20)
dobj(want-15, father-20)
aux(bring-22, to-21)
infmod(father-20, bring-22)
dobj(bring-22, it-23)
det(world-26, this-25)
prep_into(bring-22, world-26)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ (VBZ does)
      (NP (PRP she))
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB suffer)
              (ADJP (JJ due)
                (PP (TO to)
                  (NP (NN someone) (RB else)))))))
        (S
          (VP (VBG being)
            (NP (DT a) (NN coward))))))
    (. ?)))

advmod(have-4, Why-1)
aux(have-4, does-2)
nsubj(have-4, she-3)
xsubj(suffer-6, she-3)
root(ROOT-0, have-4)
aux(suffer-6, to-5)
xcomp(have-4, suffer-6)
acomp(suffer-6, due-7)
prep_to(due-7, someone-9)
advmod(someone-9, else-10)
cop(coward-13, being-11)
det(coward-13, a-12)
xcomp(have-4, coward-13)

(ROOT
  (S
    (NP (DT The) (NN government))
    (VP (VBZ is) (RB not)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB pay)
              (NP (PRP$ her) (NN enough)
                (S
                  (VP (TO to)
                    (VP
                      (VP
                        (ADVP (RB properly))
                        (VB feed)
                        (NP (PRP herself)))
                      (CC and)
                      (VP (VB take)
                        (NP
                          (NP (NN care))
                          (PP (IN of)
                            (NP (DT the) (NN baby))))
                        (SBAR (IN before)
                          (S
                            (NP (PRP she))
                            (VP (MD can)
                              (VP (VB birth)
                                (S
                                  (NP (PRP it))
                                  (VP (TO to)
                                    (VP (VB give)
                                      (PP (TO to)
                                        (NP (NN adoption))))))))))))))))))))
    (. .)))

det(government-2, The-1)
nsubj(going-5, government-2)
xsubj(pay-7, government-2)
aux(going-5, is-3)
neg(going-5, not-4)
root(ROOT-0, going-5)
aux(pay-7, to-6)
xcomp(going-5, pay-7)
poss(enough-9, her-8)
dobj(pay-7, enough-9)
aux(feed-12, to-10)
advmod(feed-12, properly-11)
infmod(enough-9, feed-12)
dobj(feed-12, herself-13)
infmod(enough-9, take-15)
conj_and(feed-12, take-15)
dobj(take-15, care-16)
det(baby-19, the-18)
prep_of(care-16, baby-19)
mark(birth-23, before-20)
nsubj(birth-23, she-21)
aux(birth-23, can-22)
advcl(take-15, birth-23)
nsubj(give-26, it-24)
aux(give-26, to-25)
xcomp(birth-23, give-26)
prep_to(give-26, adoption-28)

