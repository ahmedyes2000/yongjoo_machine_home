(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD can)
        (VP (VB keep)
          (S
            (VP (VBG telling)
              (NP (PRP yourself))))
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is) (RB n't)))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)))
    (. .)))

nsubj(keep-3, You-1)
aux(keep-3, can-2)
root(ROOT-0, keep-3)
xcomp(keep-3, telling-4)
dobj(telling-4, yourself-5)
complm(is-8, that-6)
nsubj(is-8, it-7)
ccomp(keep-3, is-8)
neg(is-8, n't-9)
nsubj(is-13, it-12)
conj_but(keep-3, is-13)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (PP (IN against)
        (NP (DT the) (NN law) (RB just)))
      (S
        (VP (TO to)
          (VP (VB let)
            (S
              (NP (PRP you))
              (VP (VB know)))))))
    (. .)))

nsubj('s-2, That-1)
xsubj(let-8, That-1)
root(ROOT-0, 's-2)
det(law-5, the-4)
prep_against('s-2, law-5)
advmod(law-5, just-6)
aux(let-8, to-7)
xcomp('s-2, let-8)
nsubj(know-10, you-9)
ccomp(let-8, know-10)

