(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ (VBP are)
      (NP
        (NP
          (NP
            (NP (DT these) (NN corpse) (POS 's))
            (NNS stages))
          (PP (IN of)
            (NP (NN developmnent))))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP are)
              (VP (VBG talking) (IN about)))))))
    (. ?)))

attr(are-2, What-1)
root(ROOT-0, are-2)
det(corpse-4, these-3)
poss(stages-6, corpse-4)
nsubj(are-2, stages-6)
dobj(talking-11, stages-6)
prep_of(stages-6, developmnent-8)
nsubj(talking-11, you-9)
aux(talking-11, are-10)
rcmod(stages-6, talking-11)
dep(talking-11, about-12)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBP are)
      (NP (PRP they))
      (VP (VBN called)))
    (. ?)))

advmod(called-4, How-1)
auxpass(called-4, are-2)
nsubjpass(called-4, they-3)
root(ROOT-0, called-4)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP talk)
      (PP (IN about)
        (NP
          (NP
            (NP (JJ human) (NN life) (POS 's))
            (NN development))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP
                (VP (VBZ starts)
                  (PP (IN at)
                    (NP (NN conception))))
                (CC and)
                (VP (VBZ ends)
                  (PP (IN with)
                    (NP (NN death))))))))))
    (. .)))

nsubj(talk-2, I-1)
root(ROOT-0, talk-2)
amod(life-5, human-4)
poss(development-7, life-5)
prep_about(talk-2, development-7)
nsubj(starts-9, development-7)
nsubj(ends-13, development-7)
rcmod(development-7, starts-9)
prep_at(starts-9, conception-11)
rcmod(development-7, ends-13)
conj_and(starts-9, ends-13)
prep_with(ends-13, death-15)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (JJ much) (NN debate))
            (PP (IN on)
              (SBAR
                (WHADVP (WRB when))
                (S
                  (VP (VBZ does)
                    (NP
                      (NP (DT the) (NN life))
                      (PP (IN of)
                        (NP
                          (NP (DT a) (NN human))
                          (VP (VBG being)
                            (VP (VBZ begins))))))))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (DT no) (NN doubt))
        (PP (IN on)
          (SBAR
            (WHADVP (WRB when))
            (S
              (VP (VBZ does)
                (SBAR
                  (S
                    (NP (DT this) (NN life))
                    (VP (VBZ ends))))))))))
    (. .)))

mark(is-3, While-1)
expl(is-3, there-2)
advcl(is-18, is-3)
amod(debate-5, much-4)
nsubj(is-3, debate-5)
advmod(does-8, when-7)
prepc_on(debate-5, does-8)
det(life-10, the-9)
dobj(does-8, life-10)
det(human-13, a-12)
prep_of(life-10, human-13)
aux(begins-15, being-14)
partmod(human-13, begins-15)
expl(is-18, there-17)
root(ROOT-0, is-18)
det(doubt-20, no-19)
nsubj(is-18, doubt-20)
advmod(does-23, when-22)
prepc_on(doubt-20, does-23)
det(life-25, this-24)
nsubj(ends-26, life-25)
ccomp(does-23, ends-26)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBD said)))
    (: :)
    (S
      (NP (JJ Dead) (NN body))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN stage))
          (PP (IN of)
            (NP (DT a) (NN human) (VBG being))))))
    (. .)))

nsubj(said-2, You-1)
root(ROOT-0, said-2)
amod(body-5, Dead-4)
nsubj(stage-8, body-5)
cop(stage-8, is-6)
det(stage-8, a-7)
parataxis(said-2, stage-8)
det(human-11, a-10)
prep_of(stage-8, human-11)
amod(human-11, being-12)

(ROOT
  (NP
    (NP (DT A) (NN stage))
    (PP (IN of) (`` ``)
      (X (WP what))
      ('' ''))
    (. ?)))

det(stage-2, A-1)
root(ROOT-0, stage-2)
prep(stage-2, of-3)
dep(of-3, what-5)

(ROOT
  (FRAG
    (PP (IN of)
      (NP (DT a) (JJ human) (NN being))
      (. ?))
    (. .)))

root(ROOT-0, of-1)
det(being-4, a-2)
amod(being-4, human-3)
pobj(of-1, being-4)

(ROOT
  (FRAG
    (ADVP (RB Surely))
    (RB not)
    (PP (IN of)
      (S
        (NP
          (NP (DT the) (NN life))
          (PP (IN of)
            (NP (DT a) (NN human))))
        (VP (VBG being)
          (SBAR (IN because)
            (S
              (NP
                (NP (NN life))
                (, ,)
                (SBAR (IN as)
                  (S
                    (NP (NN everybody))
                    (VP (VBZ knows))))
                (, ,))
              (VP (VBZ ends)
                (PP (IN with)
                  (NP (NN death)))))))))
    (. .)))

dep(not-2, Surely-1)
root(ROOT-0, not-2)
dep(not-2, of-3)
det(life-5, the-4)
nsubj(being-9, life-5)
det(human-8, a-7)
prep_of(life-5, human-8)
pcomp(of-3, being-9)
mark(ends-17, because-10)
dobj(knows-15, life-11)
nsubj(ends-17, life-11)
mark(knows-15, as-13)
nsubj(knows-15, everybody-14)
dep(life-11, knows-15)
advcl(being-9, ends-17)
prep_with(ends-17, death-19)

(ROOT
  (S
    (NP (CC And))
    (: :)
    (NP (JJ Dead) (NNS bodies))
    (VP (VBP do) (RB not)
      (VP (VB have)
        (NP (NNS rights))))
    (. .)))

nsubj(have-7, And-1)
amod(bodies-4, Dead-3)
nsubj(have-7, bodies-4)
aux(have-7, do-5)
neg(have-7, not-6)
root(ROOT-0, have-7)
dobj(have-7, rights-8)

(ROOT
  (FRAG
    (SBAR
      (WHPP (TO To)
        (WHNP (WDT which)))
      (S
        (NP
          (NP (FW i))
          (VP (VBN answered) (`` ``)
            (ADVP (NN kind) (IN of))
            ('' '')
            (PP (IN in)
              (NP
                (NP (DT the) (NN sense))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (TO to)
                      (VP (VB kill)
                        (S
                          (VP (VBG doing)
                            (NP (JJ barbaric) (NNS acts))
                            (PP (IN on)
                              (NP (DT a) (NN corpse))))))))))))
          (PRN (-LRB- -LRB-)
            (NP (NNP whichever))
            (-RRB- -RRB-)))
        (VP (VBZ is)
          (ADJP
            (ADJP (JJR worse))
            (PP (IN than)
              (NP (RB just) (JJ plain) (NN murder)))))))
    (. .)))

dep(worse-25, To-1)
pobj(To-1, which-2)
nsubj(worse-25, i-3)
partmod(i-3, answered-4)
dep(of-7, kind-6)
advmod(answered-4, of-7)
det(sense-11, the-10)
prep_in(answered-4, sense-11)
nsubj(kill-14, sense-11)
aux(kill-14, to-13)
infmod(sense-11, kill-14)
rcmod(sense-11, kill-14)
xcomp(kill-14, doing-15)
amod(acts-17, barbaric-16)
dobj(doing-15, acts-17)
det(corpse-20, a-19)
prep_on(doing-15, corpse-20)
appos(i-3, whichever-22)
cop(worse-25, is-24)
root(ROOT-0, worse-25)
advmod(murder-29, just-27)
amod(murder-29, plain-28)
prep_than(worse-25, murder-29)

