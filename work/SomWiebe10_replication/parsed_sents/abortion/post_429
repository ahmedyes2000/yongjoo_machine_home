(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (S
          (VP (TO to)
            (VP (VB get)
              (ADJP (JJ emotional)
                (PP (IN on)
                  (NP (DT this) (NN issue))))
              (SBAR
                (WHADVP (WRB when))
                (S
                  (S
                    (VP (VBG arguing)
                      (PP (IN with)
                        (NP
                          (NP (NNS pragmatists))
                          (CC or)
                          (NP (RB just) (JJ plain) (NNS idiots))))
                      (, ,)
                      (S (RB so)
                        (VP (TO to)
                          (VP (VB spare)
                            (S
                              (NP (PRP myself))
                              (NP
                                (NP (DT the) (NN grief))
                                (PP (IN over)
                                  (NP (DT the) (VBN lost) (NNS lives))))))))))
                  (, ,)
                  (NP (PRP I))
                  (VP (MD will)
                    (VP
                      (VP (VB make)
                        (NP (CD one) (JJ LOGICAL) (NN argument)))
                      (CC and)
                      (VP (VB leave)
                        (NP (DT the) (NN rest))
                        (ADVP (RB alone))))))))))))
    (. .)))

nsubj(want-4, I-1)
xsubj(emotional-7, I-1)
aux(want-4, do-2)
neg(want-4, n't-3)
root(ROOT-0, want-4)
aux(emotional-7, to-5)
dep(emotional-7, get-6)
xcomp(want-4, emotional-7)
det(issue-10, this-9)
prep_on(emotional-7, issue-10)
advmod(make-33, when-11)
partmod(make-33, arguing-12)
prep_with(arguing-12, pragmatists-14)
advmod(idiots-18, just-16)
amod(idiots-18, plain-17)
prep_with(arguing-12, idiots-18)
conj_or(pragmatists-14, idiots-18)
advmod(spare-22, so-20)
aux(spare-22, to-21)
xcomp(arguing-12, spare-22)
nsubj(grief-25, myself-23)
det(grief-25, the-24)
xcomp(spare-22, grief-25)
det(lives-29, the-27)
amod(lives-29, lost-28)
prep_over(grief-25, lives-29)
nsubj(make-33, I-31)
nsubj(leave-38, I-31)
aux(make-33, will-32)
advcl(emotional-7, make-33)
num(argument-36, one-34)
amod(argument-36, LOGICAL-35)
dobj(make-33, argument-36)
advcl(emotional-7, leave-38)
conj_and(make-33, leave-38)
det(rest-40, the-39)
dobj(leave-38, rest-40)
advmod(leave-38, alone-41)

(ROOT
  (S
    (VP (VB Forget)
      (PP (IN about)
        (NP (NN religion)
          (CC or)
          (NNS morals)))
      (: ...)
      (S
        (NP (NNP let) (POS 's))
        (VP
          (VP (VB look)
            (PP (IN from)
              (NP (DT a) (JJ common) (NN sense) (NN perspective))))
          (CC and)
          (VP (VB leave)
            (NP (NN everything))
            (UCP
              (ADJP (RB else)))
            (ADVP (RB alone))
            (: ...)
            (PP (VBG including)
              (NP (DT that) (NN embryo)))))))
    (. .)))

root(ROOT-0, Forget-1)
prep_about(Forget-1, religion-3)
prep_about(Forget-1, morals-5)
conj_or(religion-3, morals-5)
nsubj(look-9, let-7)
nsubj(leave-16, let-7)
possessive(let-7, 's-8)
ccomp(Forget-1, look-9)
parataxis(Forget-1, look-9)
det(perspective-14, a-11)
amod(perspective-14, common-12)
nn(perspective-14, sense-13)
prep_from(look-9, perspective-14)
ccomp(Forget-1, leave-16)
parataxis(Forget-1, leave-16)
conj_and(look-9, leave-16)
dobj(leave-16, everything-17)
dep(leave-16, else-18)
advmod(leave-16, alone-19)
det(embryo-23, that-22)
prep_including(leave-16, embryo-23)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD should)))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(should-4, we-3)
ccomp(think-2, should-4)

(ROOT
  (S
    (VP (VB Think)
      (PP (IN on)
        (NP (DT that)))
      (ADVP (RB awhile)))
    (. .)))

root(ROOT-0, Think-1)
prep_on(Think-1, that-3)
advmod(Think-1, awhile-4)

(ROOT
  (S
    (S
      (NP (NNP Winston) (NNP Churchill))
      (ADVP (RB once))
      (VP (VBD said) (: :) (`` ``)
        (S
          (NP (DT All) (JJ great) (NNS things))
          (VP (VBP are)
            (ADJP (JJ simple))))))
    (, ,)
    (CC and)
    (S
      (NP (DT many))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN expressed)
            (PP (IN in)
              (NP
                (NP (JJ single) (NNS words))
                (: :)
                (NP (NN freedom) (, ,) (NN justice) (, ,) (NN honor) (, ,) (NN duty) (, ,) (NN mercy) (, ,) (NN hope))))))))
    (. .)))

nn(Churchill-2, Winston-1)
nsubj(said-4, Churchill-2)
advmod(said-4, once-3)
root(ROOT-0, said-4)
det(things-9, All-7)
amod(things-9, great-8)
nsubj(simple-11, things-9)
cop(simple-11, are-10)
ccomp(said-4, simple-11)
nsubjpass(expressed-17, many-14)
aux(expressed-17, can-15)
auxpass(expressed-17, be-16)
conj_and(said-4, expressed-17)
amod(words-20, single-19)
prep_in(expressed-17, words-20)
nn(hope-32, freedom-22)
dep(hope-32, justice-24)
dep(hope-32, honor-26)
dep(hope-32, duty-28)
dep(hope-32, mercy-30)
dep(words-20, hope-32)

(ROOT
  (FRAG ('' '')
    (NP (NNP Err))
    (PP (IN on)
      (NP
        (NP
          (NP (DT the) (NN side))
          (PP (IN of)
            (NP (NN justice) (, ,) (NN honor)
              (CC and)
              (NN mercy))))
        (, ,) (RB not) (IN on)
        (NP
          (NP (DT the) (NN side))
          (PP (IN of)
            (NP (JJ political) (NNS correctness))))))
    (. .)))

root(ROOT-0, Err-2)
dep(Err-2, on-3)
det(side-5, the-4)
pobj(on-3, side-5)
prep_of(side-5, justice-7)
prep_of(side-5, honor-9)
conj_and(justice-7, honor-9)
prep_of(side-5, mercy-11)
conj_and(justice-7, mercy-11)
neg(side-5, not-13)
amod(side-5, on-14)
det(side-16, the-15)
dep(side-5, side-16)
amod(correctness-19, political-18)
prep_of(side-16, correctness-19)

(ROOT
  (S
    (VP (VBG Using)
      (NP
        (NP (DT that) (NN logic))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (DT the) (NN embryo))
            (VP (VBD was)
              (VP (VBN left)
                (ADVP (RB alone))
                (SBAR
                  (SBARQ
                    (WHNP (WP what))
                    (SQ (MD would)
                      (NP (PRP it))
                      (VP (VB become)))
                    (. ?)))))))))))

root(ROOT-0, Using-1)
det(logic-3, that-2)
dobj(Using-1, logic-3)
mark(left-9, if-5)
det(embryo-7, the-6)
nsubjpass(left-9, embryo-7)
auxpass(left-9, was-8)
dep(logic-3, left-9)
advmod(left-9, alone-10)
dobj(become-14, what-11)
aux(become-14, would-12)
nsubj(become-14, it-13)
dep(left-9, become-14)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP
          (NP
            (NP (CD two) (NNS humans))
            (NP (NN mate)))
          (CC and)
          (NP
            (NP (DT a) (NN female) (POS 's))
            (NN egg)))
        (VP (VBZ is)
          (VP (VBN fertilized)))))
    (NP (WDT what))
    (VP (MD will)
      (VP (VB be)
        (NP
          (NP (DT the) (NN result))
          (PP (IN of)
            (NP (DT that) (NN fertilization))))))
    (. .)))

advmod(fertilized-11, When-1)
num(humans-3, two-2)
nsubjpass(fertilized-11, humans-3)
dep(humans-3, mate-4)
det(female-7, a-6)
poss(egg-9, female-7)
conj_and(humans-3, egg-9)
nsubjpass(fertilized-11, egg-9)
auxpass(fertilized-11, is-10)
advcl(result-16, fertilized-11)
nsubj(result-16, what-12)
aux(result-16, will-13)
cop(result-16, be-14)
det(result-16, the-15)
root(ROOT-0, result-16)
det(fertilization-19, that-18)
prep_of(result-16, fertilization-19)

(ROOT
  (S
    (NP
      (NP (DT All))
      (ADJP
        (ADJP (JJ physical))
        (CC and)
        (PRN (CC or)
          (NP
            (NP
              (NP (JJ mental) (NNS abnormalities))
              (ADVP (RB aside)))
            (, ,)
            (NP (DT those))))
        (ADJP
          (NP (CD two) (NNS cells))
          (JJ dividing))))
    (VP (MD will)
      (ADVP (RB NEVER))
      (VP (VB become)
        (NP (NN anything) (JJ other))
        (PP (IN than)
          (NP (DT a) (NNP HUMAN) (NN child)))))
    (. .)))

nsubj(anything-16, All-1)
amod(All-1, physical-2)
dep(abnormalities-6, or-4)
amod(abnormalities-6, mental-5)
dep(physical-2, abnormalities-6)
advmod(abnormalities-6, aside-7)
appos(abnormalities-6, those-9)
num(cells-11, two-10)
npadvmod(dividing-12, cells-11)
amod(All-1, dividing-12)
conj_and(physical-2, dividing-12)
aux(anything-16, will-13)
neg(anything-16, NEVER-14)
cop(anything-16, become-15)
root(ROOT-0, anything-16)
amod(anything-16, other-17)
det(child-21, a-19)
nn(child-21, HUMAN-20)
prep_than(anything-16, child-21)

(ROOT
  (S
    (S
      (NP (PRP They))
      (VP (MD will)
        (ADVP (RB never))
        (VP (VB become)
          (NP
            (NP (DT a) (NN rat))
            (CC or)
            (NP (DT a) (NN dog))
            (, ,)
            (CC or)
            (ADVP (RB even))
            (NP
              (NP (DT a) (NN primate))
              (SBAR
                (WHNP (WDT which))
                (S
                  (NP (DT any) (NN scientist))
                  (VP (MD will)
                    (VP (VB tell)
                      (NP (PRP you)))))))))))
    (NP (PRP we))
    (VP (VBP share)
      (NP
        (NP (CD 98) (NN %))
        (PP (IN of)
          (NP (PRP$ our) (NN DNA))))
      (PP (IN with)))
    (. .)))

nsubj(rat-6, They-1)
aux(rat-6, will-2)
neg(rat-6, never-3)
cop(rat-6, become-4)
det(rat-6, a-5)
dep(share-22, rat-6)
det(dog-9, a-8)
conj_or(rat-6, dog-9)
dep(share-22, dog-9)
advmod(rat-6, even-12)
conj_or(rat-6, even-12)
dep(share-22, even-12)
det(primate-14, a-13)
conj_or(rat-6, primate-14)
dobj(tell-19, primate-14)
dep(share-22, primate-14)
rel(tell-19, which-15)
det(scientist-17, any-16)
nsubj(tell-19, scientist-17)
aux(tell-19, will-18)
rcmod(primate-14, tell-19)
dobj(tell-19, you-20)
nsubj(share-22, we-21)
root(ROOT-0, share-22)
num(%-24, 98-23)
dobj(share-22, %-24)
poss(DNA-27, our-26)
prep_of(%-24, DNA-27)
prep(share-22, with-28)

(ROOT
  (SBARQ
    (PP (IN With)
      (NP
        (NP (DT that))
        (PP (IN in)
          (NP (NN mind)))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (MD can)
      (VP (VB make)
        (NP (NNS arguments))
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBZ is) (RB not)
              (NP (DT a) (NN person)))))))
    (. ?)))

prep_with(make-8, that-2)
prep_in(that-2, mind-4)
advmod(make-8, how-6)
aux(make-8, can-7)
root(ROOT-0, make-8)
dobj(make-8, arguments-9)
complm(person-15, that-10)
nsubj(person-15, it-11)
cop(person-15, is-12)
neg(person-15, not-13)
det(person-15, a-14)
ccomp(make-8, person-15)

(ROOT
  (SQ (MD Will)
    (NP (PRP it))
    (, ,)
    (VP
      (SBAR (IN if)
        (S
          (VP (VBD left)
            (ADVP (RB alone)))))
      (, ,)
      (VP (VB become)
        (NP (DT a) (NN person))))
    (. ?)))

aux(person-10, Will-1)
nsubj(person-10, it-2)
mark(left-5, if-4)
advcl(person-10, left-5)
advmod(left-5, alone-6)
cop(person-10, become-8)
det(person-10, a-9)
root(ROOT-0, person-10)

(ROOT
  (S
    (S
      (NP (DT The) (NN answer))
      (VP (VBZ is)
        (NP (UH yes))))
    (CC and)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (ADVP (RB no)
          (S
            (VP (VBG refuting)
              (NP (DT that)))))))
    (. .)))

det(answer-2, The-1)
nsubj(yes-4, answer-2)
nsubj(is-7, answer-2)
cop(yes-4, is-3)
root(ROOT-0, yes-4)
expl(is-7, there-6)
conj_and(yes-4, is-7)
advmod(is-7, no-8)
dep(no-8, refuting-9)
dobj(refuting-9, that-10)

(ROOT
  (SQ (MD Should)
    (NP (PRP we))
    (ADVP (RB not))
    (, ,)
    (ADVP (RB then))
    (, ,)
    (VP (VB bestow)
      (PP (IN on)
        (NP (DT that) (JJ future) (NN person)))
      (NP
        (NP (DT the) (JJ same) (NNS rights))
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD would)
              (VP
                (NP (DT any) (JJ other) (NN human))
                (PP (IN in)
                  (NP (DT this) (NN world)))))))))
    (. ?)))

aux(bestow-7, Should-1)
nsubj(bestow-7, we-2)
advmod(bestow-7, not-3)
advmod(bestow-7, then-5)
root(ROOT-0, bestow-7)
det(person-11, that-9)
amod(person-11, future-10)
prep_on(bestow-7, person-11)
det(rights-14, the-12)
amod(rights-14, same-13)
dobj(bestow-7, rights-14)
nsubj(human-19, we-15)
aux(human-19, would-16)
det(human-19, any-17)
amod(human-19, other-18)
rcmod(rights-14, human-19)
det(world-22, this-21)
prep_in(human-19, world-22)

