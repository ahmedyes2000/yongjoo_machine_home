(ROOT
  (NP (JJ Old) (NN age) (. ?)))

amod(age-2, Old-1)
root(ROOT-0, age-2)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (VBZ 's)
      (NP (DT that) (NN work)))
    (. ?)))

advmod('s-2, How-1)
root(ROOT-0, 's-2)
det(work-4, that-3)
nsubj('s-2, work-4)

(ROOT
  (S
    (NP (DT No) (`` ``) (JJ human) (NN being) ('' ''))
    (VP (VBZ is)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ dependent)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN womb))
                    (PP (IN of)
                      (NP
                        (NP (DT another))
                        (PP (IN for)
                          (NP
                            (QP (JJR more) (IN than) (RB about) (CD 10))
                            (NNS months)))))))))))))
    (. .)))

det(being-4, No-1)
amod(being-4, human-3)
nsubj(going-7, being-4)
xsubj(dependent-10, being-4)
aux(going-7, is-6)
root(ROOT-0, going-7)
aux(dependent-10, to-8)
cop(dependent-10, be-9)
xcomp(going-7, dependent-10)
det(womb-13, the-12)
prep_on(dependent-10, womb-13)
prep_of(womb-13, another-15)
quantmod(10-20, more-17)
quantmod(10-20, than-18)
quantmod(10-20, about-19)
num(months-21, 10-20)
prep_for(another-15, months-21)

(ROOT
  (S
    (SBAR (IN Once)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (ADVP (RB out))
          (PP (IN of)
            (NP (DT the) (NN womb))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (PP (IN by)
        (NP
          (NP (NN definition))
          (ADJP
            (ADVP (RB no) (RBR longer))
            (JJ dependent))))
      (PP (IN on)
        (NP
          (NP (VBN said) (NN womb))
          (PP (IN for)
            (NP (NN survival))))))
    (. .)))

mark('s-3, Once-1)
nsubj('s-3, it-2)
advcl(is-10, 's-3)
det(womb-7, the-6)
prep_out_of('s-3, womb-7)
nsubj(is-10, it-9)
root(ROOT-0, is-10)
prep_by(is-10, definition-12)
advmod(longer-14, no-13)
advmod(dependent-15, longer-14)
amod(definition-12, dependent-15)
amod(womb-18, said-17)
prep_on(is-10, womb-18)
prep_for(womb-18, survival-20)

(ROOT
  (S
    (NP (DT The) (NN standard))
    (VP (VBZ is)
      (ADJP (JJ flexible) (, ,) (RB not) (JJ arbitrary)))
    (. .)))

det(standard-2, The-1)
nsubj(arbitrary-7, standard-2)
cop(arbitrary-7, is-3)
amod(arbitrary-7, flexible-4)
neg(arbitrary-7, not-6)
root(ROOT-0, arbitrary-7)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ is)
        (ADJP (JJ flexible)
          (PP (TO to)
            (NP (DT a) (JJ certain) (JJ defined) (NN degree))))))
    (PRN (-LRB- -LRB-)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (MD should)
            (VP (VB be)))))
      (-RRB- -RRB-))
    (CC and)
    (S
      (NP (DT that) (NN degree))
      (VP (MD should) (, ,)
        (PP (TO to)
          (NP (PRP$ my) (NN thinking)))
        (, ,)
        (VP (VB correspond)
          (PP (TO to)
            (NP
              (NP (DT the) (NN level))
              (PP (IN of)
                (NP (JJ prenatal) (JJ physiological) (NN development))))))))
    (. .)))

nsubj(flexible-3, It-1)
cop(flexible-3, is-2)
root(ROOT-0, flexible-3)
det(degree-8, a-5)
amod(degree-8, certain-6)
amod(degree-8, defined-7)
prep_to(flexible-3, degree-8)
mark(be-13, as-10)
nsubj(be-13, it-11)
aux(be-13, should-12)
dep(flexible-3, be-13)
det(degree-17, that-16)
nsubj(correspond-24, degree-17)
aux(correspond-24, should-18)
poss(thinking-22, my-21)
prep_to(correspond-24, thinking-22)
conj_and(flexible-3, correspond-24)
det(level-27, the-26)
prep_to(correspond-24, level-27)
amod(development-31, prenatal-29)
amod(development-31, physiological-30)
prep_of(level-27, development-31)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ other) (NNS words)))
    (, ,)
    (NP (NNS rights))
    (VP (VBZ vest)
      (SBAR (IN as)
        (S
          (NP (DT the) (NN being))
          (VP
            (VP (VBZ grows))
            (CC and)
            (VP (VBZ matures))))))
    (. .)))

amod(words-3, other-2)
prep_in(vest-6, words-3)
nsubj(vest-6, rights-5)
root(ROOT-0, vest-6)
mark(grows-10, as-7)
det(being-9, the-8)
nsubj(grows-10, being-9)
nsubj(matures-12, being-9)
advcl(vest-6, grows-10)
advcl(vest-6, matures-12)
conj_and(grows-10, matures-12)

