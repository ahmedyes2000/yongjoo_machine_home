(ROOT
  (S (`` ``)
    (ADVP (RB Just))
    (VP (VB look)
      (PP (IN at)
        (NP
          (NP (NNS pictures))
          (PP (IN of)
            (NP (JJ aborted) (NNS fetuses)))))
      (PP (IN with)
        (NP
          (NP (PRP$ their) (NNS arms)
            (CC and)
            (NNS heads))
          (VP (VBN chopped)
            (PRT (RP off))))))
    (. .)))

advmod(look-3, Just-2)
root(ROOT-0, look-3)
prep_at(look-3, pictures-5)
amod(fetuses-8, aborted-7)
prep_of(pictures-5, fetuses-8)
poss(arms-11, their-10)
prep_with(look-3, arms-11)
prep_with(look-3, heads-13)
conj_and(arms-11, heads-13)
partmod(arms-11, chopped-14)
prt(chopped-14, off-15)

(ROOT
  (S ('' '')
    (ADVP (RB Okay))
    (, ,)
    (VP (VBP look)
      (PP (IN at)
        (NP
          (NP (NNS pictures))
          (PP (IN of)
            (NP (NNS fetuses))))))
    (. .)))

advmod(look-4, Okay-2)
root(ROOT-0, look-4)
prep_at(look-4, pictures-6)
prep_of(pictures-6, fetuses-8)

(ROOT
  (S ('' '')
    (PP (IN For)
      (NP
        (NP (DT all))
        (SBAR
          (S
            (NP (PRP you))
            (VP (VBP know)
              (NP (PRP you)))))))
    (VP (MD might)
      (VP (VB have)
        (VP
          (ADVP (RB just))
          (VBN aborted)
          (NP
            (NP (DT the) (NN person))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP foudn)
                  (NP
                    (NP (NN teh) (NN cure))
                    (PP (IN for)
                      (NP (NN cancer)
                        (CC or)
                        (NN diabetes)))))))))))
    (. .)))

prep_for(aborted-10, all-3)
nsubj(know-5, you-4)
rcmod(all-3, know-5)
dobj(know-5, you-6)
aux(aborted-10, might-7)
aux(aborted-10, have-8)
advmod(aborted-10, just-9)
root(ROOT-0, aborted-10)
det(person-12, the-11)
dobj(aborted-10, person-12)
nsubj(foudn-14, person-12)
rcmod(person-12, foudn-14)
nn(cure-16, teh-15)
dobj(foudn-14, cure-16)
prep_for(cure-16, cancer-18)
prep_for(cure-16, diabetes-20)
conj_or(cancer-18, diabetes-20)

(ROOT
  (S ('' '')
    (NP (NNS People))
    (VP (VBP are) (RB not)
      (VP (VBN aborted)))
    (. .)))

nsubjpass(aborted-5, People-2)
auxpass(aborted-5, are-3)
neg(aborted-5, not-4)
root(ROOT-0, aborted-5)

(ROOT
  (S
    (NP (NNS Fetuses))
    (VP (VBP get)
      (NP (JJ aborted)))
    (. .)))

nsubj(get-2, Fetuses-1)
root(ROOT-0, get-2)
dobj(get-2, aborted-3)

(ROOT
  (S
    (NP (NNS Fetuses))
    (VP (VBP are) (RB not)
      (NP (NNS people)))
    (. .)))

nsubj(people-4, Fetuses-1)
cop(people-4, are-2)
neg(people-4, not-3)
root(ROOT-0, people-4)

(ROOT
  (NP
    (NP (NNP ''))
    (: ...)
    (NP
      (NP (DT those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP perform)
            (SBAR
              (S
                (NP (PRP them))
                (VP (VBP are)
                  (NP (NNS murderers)))))))))
    (. .)))

dep(''-1, those-3)
nsubj(perform-5, those-3)
rcmod(those-3, perform-5)
nsubj(murderers-8, them-6)
cop(murderers-8, are-7)
ccomp(perform-5, murderers-8)

(ROOT
  (S ('' '')
    (NP (NN Murder))
    (VP (VBZ means)
      (S
        (VP (TO to)
          (VP
            (ADVP (RB deliberately))
            (VB kill)
            (NP (DT another) (JJ human) (JJ being) (NN justifiably))))))
    (. .)))

nsubj(means-3, Murder-2)
xsubj(kill-6, Murder-2)
root(ROOT-0, means-3)
aux(kill-6, to-4)
advmod(kill-6, deliberately-5)
xcomp(means-3, kill-6)
det(justifiably-10, another-7)
amod(justifiably-10, human-8)
amod(justifiably-10, being-9)
dobj(kill-6, justifiably-10)

(ROOT
  (S
    (NP (NNS Fetuses))
    (VP (VBP are) (RB not)
      (NP (JJ human) (NNS beings)))
    (. .)))

nsubj(beings-5, Fetuses-1)
cop(beings-5, are-2)
neg(beings-5, not-3)
amod(beings-5, human-4)
root(ROOT-0, beings-5)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP
      (NP (DT those))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBP perform)
            (NP (NNS abortions))))))
    (VP (VBP are) (RB not)
      (NP (NNS murderers)))
    (. .)))

advmod(murderers-9, Therefore-1)
nsubj(perform-5, those-3)
nsubj(murderers-9, those-3)
rcmod(those-3, perform-5)
dobj(perform-5, abortions-6)
cop(murderers-9, are-7)
neg(murderers-9, not-8)
root(ROOT-0, murderers-9)

(ROOT
  (SQ (VBP Do)
    (NP (PRP they))
    (VP (VB look)
      (PP (IN like)
        (NP (JJ actual) (NNS people))))
    (. ?)))

aux(look-3, Do-1)
nsubj(look-3, they-2)
root(ROOT-0, look-3)
amod(people-6, actual-5)
prep_like(look-3, people-6)

(ROOT
  (FRAG
    (INTJ (UH No))
    (, ,)
    (ADVP
      (NP (IN of) (NN course))
      (RB not))
    (. .)))

dep(not-5, No-1)
amod(course-4, of-3)
npadvmod(not-5, course-4)
root(ROOT-0, not-5)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP look)
      (PP (IN like)
        (NP (NNS fetuses))))
    (. .)))

nsubj(look-2, They-1)
root(ROOT-0, look-2)
prep_like(look-2, fetuses-4)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (NP
              (NP (NNS fetuses))
              (, ,) (RB not)
              (NP (JJ human) (NNS beings)))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
mark(fetuses-6, because-3)
nsubj(fetuses-6, they-4)
cop(fetuses-6, are-5)
advcl(is-2, fetuses-6)
neg(fetuses-6, not-8)
amod(beings-10, human-9)
dep(fetuses-6, beings-10)

(ROOT
  (NP
    (NP (NNP ''))
    (: ...)
    (NP (JJ unborn) (NN child))
    (. .)))

amod(child-4, unborn-3)
dep(''-1, child-4)

(ROOT
  (FRAG ('' '')
    (NP (NNP Contradiction))
    (PP (IN in)
      (NP (NNS terms)))
    (. .)))

root(ROOT-0, Contradiction-2)
dep(Contradiction-2, in-3)
pobj(in-3, terms-4)

(ROOT
  (S
    (NP (NNP Children))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBN born))))
    (. .)))

nsubjpass(born-4, Children-1)
aux(born-4, have-2)
auxpass(born-4, been-3)
root(ROOT-0, born-4)

(ROOT
  (S
    (NP (DT A) (NN fetus))
    (VP (VBZ is) (RB not)
      (NP (DT a) (NN child)))
    (. .)))

det(fetus-2, A-1)
nsubj(child-6, fetus-2)
cop(child-6, is-3)
neg(child-6, not-4)
det(child-6, a-5)
root(ROOT-0, child-6)

