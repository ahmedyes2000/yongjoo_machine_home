(ROOT
  (SINV
    (S
      (INTJ (UH Yes) (, ,) (UH yes))
      (NP (PRP you))
      (ADVP (RB apparently))
      (VP (VBP are) (, ,)
        (PP (IN for)
          (NP (PRP I)))
        (ADVP (CC but))))
    (VP (VBP mirror))
    (NP (PRP$ your) (NN argument))
    (. .)))

dep(are-6, Yes-1)
dep(Yes-1, yes-3)
nsubj(are-6, you-4)
advmod(are-6, apparently-5)
dep(mirror-11, are-6)
prep_for(are-6, I-9)
advmod(are-6, but-10)
root(ROOT-0, mirror-11)
poss(argument-13, your-12)
nsubj(mirror-11, argument-13)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR (IN since)
      (S
        (NP (PRP you))
        (VP (VBP bring)
          (NP (PRP it))
          (PRT (RP up)))))
    (, ,)
    (NP
      (NP (DT the)
        (ADJP (JJ first)
          (CC and)
          (JJ primary))
        (PRN (-LRB- -LRB-)
          (CC and)
          (ADJP
            (ADVP (RB therefore))
            (JJ legal))
          (-RRB- -RRB-))
        (NN definition))
      (PP (IN of)
        (NP (DT the) (NN word) (NN person))))
    (VP
      (VP (VBZ is)
        (VP ('' '')
          (NP (NNP Human) (CD Individual))))
      ('' '')
      (CC or)
      (VP (VBD humand)
        (S
          (VP (VBG being)
            (NP (NNP Webster) (POS 's))))))
    (. .)))

advmod(Human-25, Now-1)
mark(bring-5, since-3)
nsubj(bring-5, you-4)
advcl(Human-25, bring-5)
dobj(bring-5, it-6)
prt(bring-5, up-7)
det(definition-18, the-9)
amod(definition-18, first-10)
conj_and(first-10, primary-12)
amod(definition-18, primary-12)
dep(legal-16, and-14)
advmod(legal-16, therefore-15)
dep(definition-18, legal-16)
nsubj(Human-25, definition-18)
nsubj(humand-29, definition-18)
det(person-22, the-20)
nn(person-22, word-21)
prep_of(definition-18, person-22)
aux(Human-25, is-23)
root(ROOT-0, Human-25)
num(Human-25, Individual-26)
conj_or(Human-25, humand-29)
cop(Webster-31, being-30)
xcomp(humand-29, Webster-31)
possessive(Webster-31, 's-32)

(ROOT
  (SBARQ (RB So)
    (WHNP (WP what))
    (SQ
      (VP (VBZ makes)
        (NP (DT a) (JJ human) (NN being))))
    (. ?)))

advmod(makes-3, So-1)
nsubj(makes-3, what-2)
root(ROOT-0, makes-3)
det(being-6, a-4)
amod(being-6, human-5)
dobj(makes-3, being-6)

(ROOT
  (NP
    (NP (NNP DNA))
    (PP (IN for)
      (NP (CD one)))
    (. .)))

root(ROOT-0, DNA-1)
prep_for(DNA-1, one-3)

(ROOT
  (S
    (S
      (PP (IN Like)
        (S
          (NP (PRP you))
          (VP (VBD said))))
      (, ,)
      (NP (EX there))
      (VP (VBP are)
        (NP (JJ other) (NNS factors))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (NN development))
        (VP (VBZ is) (RB n't)
          (NP
            (NP (CD one))
            (PP (IN of)
              (NP (PRP them))))))
      (, ,)
      (CC and)
      (S
        (NP (NN niether))
        (VP (VBZ is)
          (NP (NN age)))))
    (. .)))

nsubj(said-3, you-2)
prepc_like(are-6, said-3)
expl(are-6, there-5)
root(ROOT-0, are-6)
amod(factors-8, other-7)
nsubj(are-6, factors-8)
nsubj(one-14, development-11)
cop(one-14, is-12)
neg(one-14, n't-13)
conj_but(are-6, one-14)
prep_of(one-14, them-16)
nsubj(age-21, niether-19)
cop(age-21, is-20)
conj_but(are-6, age-21)
conj_and(one-14, age-21)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is) (, ,)
      (ADVP (RB however))
      (, ,)
      (S
        (NP (DT another) (NN way)
          (S
            (VP (TO to)
              (VP (VB determine)
                (NP
                  (NP
                    (NP (CD one) (POS 's))
                    (NN humanity))
                  (: ;)
                  (SBAR
                    (WHADVP (WRB when))
                    (S
                      (NP
                        (NP (DT both) (NNS parents))
                        (PP (IN of)
                          (NP (DT the) (NN child))))
                      (VP (VBP are)
                        (ADJP (JJ human))))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(is-2, however-4)
det(way-7, another-6)
dep(is-2, way-7)
aux(determine-9, to-8)
infmod(way-7, determine-9)
poss(humanity-12, one-10)
dobj(determine-9, humanity-12)
advmod(human-21, when-14)
det(parents-16, both-15)
nsubj(human-21, parents-16)
det(child-19, the-18)
prep_of(parents-16, child-19)
cop(human-21, are-20)
dep(humanity-12, human-21)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (EX there))
        (VP (VBZ has)
          (ADVP (RB yet))
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN shown)
                  (PRN (-LRB- -LRB-)
                    (CC and)
                    (VP
                      (ADVP (RB never))
                      (MD can)
                      (VP (VB be)))
                    (-RRB- -RRB-)))))))))
    (NP (DT any))
    (VP (VBZ incident)
      (SBAR
        (WHADVP (WRB where))
        (S
          (NP
            (NP (CD two) (NNS organisms))
            (PP (IN of)
              (NP (DT the) (JJ same) (NN species))))
          (ADVP (RB successfully))
          (VP (VBD reproduced)
            (NP
              (NP (DT a) (NN member))
              (PP (IN of)
                (NP
                  (NP (DT a) (JJ different) (NN species))
                  (PRN (-LRB- -LRB-)
                    (ADVP (RB hence))
                    (NP
                      (NP (DT the) (`` ``) (NN re) ('' ''))
                      (PP (IN in)
                        (NP (`` ``) (NNP reproduce) ('' ''))))
                    (-RRB- -RRB-)))))))))
    (. .)))

mark(has-3, Since-1)
expl(has-3, there-2)
xsubj(shown-7, there-2)
advcl(incident-15, has-3)
advmod(has-3, yet-4)
aux(shown-7, to-5)
auxpass(shown-7, be-6)
xcomp(has-3, shown-7)
dep(be-12, and-9)
neg(be-12, never-10)
aux(be-12, can-11)
dep(shown-7, be-12)
nsubj(incident-15, any-14)
root(ROOT-0, incident-15)
advmod(reproduced-24, where-16)
num(organisms-18, two-17)
nsubj(reproduced-24, organisms-18)
det(species-22, the-20)
amod(species-22, same-21)
prep_of(organisms-18, species-22)
advmod(reproduced-24, successfully-23)
advcl(incident-15, reproduced-24)
det(member-26, a-25)
dobj(reproduced-24, member-26)
det(species-30, a-28)
amod(species-30, different-29)
prep_of(member-26, species-30)
dep(re-35, hence-32)
det(re-35, the-33)
dep(species-30, re-35)
prep_in(re-35, reproduce-39)

