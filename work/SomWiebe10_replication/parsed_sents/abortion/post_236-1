(ROOT
  (SQ (MD Would)
    (NP (PRP you))
    (VP (VB have)
      (VP (VBD said)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (DT the) (JJ southern) (NNS states))
              (VP (VBD were)
                (ADJP (JJ fine)
                  (S
                    (VP (TO to)
                      (VP (VB continue)
                        (NP (PRP it))
                        (ADVP
                          (ADVP (RB as) (RB long))
                          (SBAR (IN as)
                            (S
                              (NP (DT the) (JJ northern) (NNS states))
                              (VP (VBD were)
                                (VP (VBN allowed)
                                  (S
                                    (VP (TO to)
                                      (VP (VB abolish)
                                        (NP (PRP it)))))))))))))))))
          (, ,)
          (CC and)
          (FRAG
            (ADVP (RB vice) (RB versa))))))
    (. ?)))

aux(said-4, Would-1)
nsubj(said-4, you-2)
aux(said-4, have-3)
root(ROOT-0, said-4)
complm(fine-10, that-5)
det(states-8, the-6)
amod(states-8, southern-7)
nsubj(fine-10, states-8)
cop(fine-10, were-9)
ccomp(said-4, fine-10)
aux(continue-12, to-11)
xcomp(fine-10, continue-12)
dobj(continue-12, it-13)
advmod(long-15, as-14)
advmod(continue-12, long-15)
mark(allowed-21, as-16)
det(states-19, the-17)
amod(states-19, northern-18)
nsubjpass(allowed-21, states-19)
xsubj(abolish-23, states-19)
auxpass(allowed-21, were-20)
ccomp(long-15, allowed-21)
aux(abolish-23, to-22)
xcomp(allowed-21, abolish-23)
dobj(abolish-23, it-24)
advmod(versa-28, vice-27)
ccomp(said-4, versa-28)
conj_and(fine-10, versa-28)

