(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VB keep)
          (NP (NN abortion) (JJ legal))
          (PP (IN than)
            (NP (PRP you))))))
    (VP (MD should)
      (VP (VB make)
        (NP (NN murder) (JJ legal))))
    (. .)))

mark(keep-3, if-1)
nsubj(keep-3, you-2)
csubj(make-9, keep-3)
dobj(keep-3, abortion-4)
amod(abortion-4, legal-5)
prep_than(keep-3, you-7)
aux(make-9, should-8)
root(ROOT-0, make-9)
dobj(make-9, murder-10)
amod(murder-10, legal-11)

(ROOT
  (S
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (MD can))))
    (VP (VBD chose)
      (SBAR
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP (VB want)
              (S
                (NP (PRP you))
                (ADJP (RB baby) (JJ alive)))
              (SBAR (IN than)
                (S
                  (NP (PRP you))
                  (VP (MD should)
                    (VP (VBD chose)
                      (SBAR (IN that)
                        (S
                          (NP (PRP you))
                          (VP (VBP do) (RB n't)
                            (VP (VB want)
                              (S
                                (NP (NN someone) (RB else))
                                (VP (TO to)
                                  (VP
                                    (VP (VB be)
                                      (ADJP (JJ alive)))
                                    (CC and)
                                    (VP (VB kill)
                                      (NP (PRP them)))))))))))))))))))
    (. .)))

mark(can-3, if-1)
nsubj(can-3, you-2)
csubj(chose-4, can-3)
root(ROOT-0, chose-4)
nsubj(want-8, you-5)
aux(want-8, do-6)
neg(want-8, n't-7)
ccomp(chose-4, want-8)
nsubj(alive-11, you-9)
advmod(alive-11, baby-10)
xcomp(want-8, alive-11)
mark(chose-15, than-12)
nsubj(chose-15, you-13)
aux(chose-15, should-14)
advcl(want-8, chose-15)
complm(want-20, that-16)
nsubj(want-20, you-17)
aux(want-20, do-18)
neg(want-20, n't-19)
ccomp(chose-15, want-20)
nsubj(alive-25, someone-21)
nsubj(kill-27, someone-21)
advmod(someone-21, else-22)
aux(alive-25, to-23)
cop(alive-25, be-24)
xcomp(want-20, alive-25)
xcomp(want-20, kill-27)
conj_and(alive-25, kill-27)
dobj(kill-27, them-28)

(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (UCP
        (NP
          (NP (DT all))
          (NP (DT the) (JJ same)))
        (CC and)
        (SBAR
          (WHNP (WP what) (NN kind)
            (PP (IN of)
              (NP (NN world))))
          (SINV (MD would)
            (NP (DT this))
            (VP (VB be)
              (SBAR (IN if)
                (S
                  (NP (NN murder))
                  (VP (VBD was)
                    (ADJP (JJ legal))))))))))
    (. .)))

nsubj(all-3, it-1)
cop(all-3, is-2)
root(ROOT-0, all-3)
det(same-5, the-4)
dep(all-3, same-5)
det(kind-8, what-7)
dep(be-13, kind-8)
prep_of(kind-8, world-10)
aux(be-13, would-11)
nsubj(be-13, this-12)
conj_and(all-3, be-13)
rcmod(all-3, be-13)
mark(legal-17, if-14)
nsubj(legal-17, murder-15)
cop(legal-17, was-16)
advcl(be-13, legal-17)

