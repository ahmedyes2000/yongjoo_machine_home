(ROOT
  (S
    (ADVP (RB Betty))
    (, ,)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADVP (RB so) (RB badly))
        (VP (VBG twisting)
          (NP (DT the) (NN logic))
          (SBAR (IN that)
            (S
              (NP (PRP I))
              (VP (VBD needed)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB go)
                        (ADVP (RB back)))
                      (CC and)
                      (VP (VB read)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (NP (PRP you))
                            (VP (VBD wrote)
                              (NP (CD three) (NNS times)))))))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADVP (RB still))
        (RB not)
        (ADJP (JJ sure)
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP 'm)
                (VP (VBG following)
                  (PRT (RP along)))))))))
    (. .)))

advmod(twisting-7, Betty-1)
nsubj(twisting-7, you-3)
aux(twisting-7, are-4)
advmod(badly-6, so-5)
advmod(twisting-7, badly-6)
root(ROOT-0, twisting-7)
det(logic-9, the-8)
dobj(twisting-7, logic-9)
complm(needed-12, that-10)
nsubj(needed-12, I-11)
xsubj(go-14, I-11)
ccomp(twisting-7, needed-12)
aux(go-14, to-13)
xcomp(needed-12, go-14)
advmod(go-14, back-15)
xcomp(needed-12, read-17)
conj_and(go-14, read-17)
dobj(wrote-20, what-18)
nsubj(wrote-20, you-19)
ccomp(read-17, wrote-20)
num(times-22, three-21)
dobj(wrote-20, times-22)
nsubj(sure-28, I-24)
cop(sure-28, 'm-25)
advmod(sure-28, still-26)
neg(sure-28, not-27)
conj_and(twisting-7, sure-28)
nsubj(following-31, I-29)
aux(following-31, 'm-30)
dep(sure-28, following-31)
prt(following-31, along-32)

(ROOT
  (S
    (INTJ (UH No))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADJP (JJ incorrect)
        (PP (IN in)
          (NP
            (NP (PRP$ your) (NN interpretation))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP I))
                  (VP (VBP am)
                    (VP (VBG saying))))))))))
    (. .)))

dep(incorrect-5, No-1)
nsubj(incorrect-5, you-3)
cop(incorrect-5, are-4)
root(ROOT-0, incorrect-5)
poss(interpretation-8, your-7)
prep_in(incorrect-5, interpretation-8)
dobj(saying-13, what-10)
nsubj(saying-13, I-11)
aux(saying-13, am-12)
prepc_of(interpretation-8, saying-13)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP do)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB do))))))
    (. .)))

nsubj(do-2, We-1)
root(ROOT-0, do-2)
dobj(do-6, what-3)
nsubj(do-6, we-4)
aux(do-6, can-5)
ccomp(do-2, do-6)

(ROOT
  (S (CC But)
    (ADVP (RB now))
    (, ,)
    (VP (VBD let)
      (SBAR
        (S
          (NP (PRP me))
          (VP (VBP see)
            (SBAR (IN if)
              (S
                (NP (PRP I))
                (VP (VBP understand)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP you))
                      (VP (VBP are)
                        (VP (VBG saying))))))))))))
    (. .)))

cc(let-4, But-1)
advmod(let-4, now-2)
root(ROOT-0, let-4)
nsubj(see-6, me-5)
ccomp(let-4, see-6)
mark(understand-9, if-7)
nsubj(understand-9, I-8)
advcl(see-6, understand-9)
dobj(saying-13, what-10)
nsubj(saying-13, you-11)
aux(saying-13, are-12)
ccomp(understand-9, saying-13)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP (VBP have)
          (NP (DT this) (NN right)))))
    (, ,)
    (NP (PRP you))
    (VP (VBP 're)
      (VP (VBG saying)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT no) (NN difference))
                (PP (IN between)
                  (S
                    (VP
                      (VP (VBG failing)
                        (S
                          (VP (TO to)
                            (VP (VB donate)
                              (NP (DT a) (NN kidney))))))
                      (CC and)
                      (VP
                        (ADVP (RB deliberately))
                        (VBG killing)
                        (NP (NN someone))))))))))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, I-2)
advcl(saying-9, have-3)
det(right-5, this-4)
dobj(have-3, right-5)
nsubj(saying-9, you-7)
aux(saying-9, 're-8)
root(ROOT-0, saying-9)
expl(is-11, there-10)
ccomp(saying-9, is-11)
det(difference-13, no-12)
nsubj(is-11, difference-13)
prepc_between(difference-13, failing-15)
aux(donate-17, to-16)
xcomp(failing-15, donate-17)
det(kidney-19, a-18)
dobj(donate-17, kidney-19)
advmod(killing-22, deliberately-21)
prepc_between(difference-13, killing-22)
conj_and(failing-15, killing-22)
dobj(killing-22, someone-23)

(ROOT
  (S
    (NP (PRP They))
    (VP
      (VP (VBP are) (DT both)
        (ADJP (JJ immoral)))
      (CC and)
      (VP
        (ADVP (RB thus))
        (JJ equal)))
    (. .)))

nsubj(immoral-4, They-1)
nsubj(equal-7, They-1)
cop(immoral-4, are-2)
dep(immoral-4, both-3)
root(ROOT-0, immoral-4)
advmod(equal-7, thus-6)
conj_and(immoral-4, equal-7)

(ROOT
  (SQ (VBP Do)
    (NP (PRP I))
    (VP (VB have)
      (NP (DT this) (JJ correct)))
    (. ?)))

aux(have-3, Do-1)
nsubj(have-3, I-2)
root(ROOT-0, have-3)
det(correct-5, this-4)
dobj(have-3, correct-5)

(ROOT
  (S
    (S
      (NP (PRP You))
      (ADVP (RB also))
      (VP (VBD wrote)))
    (: ;)
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP 're)
            (VP (VBG going)
              (S
                (VP (TO to)
                  (VP (VB use)
                    (NP (DT the)
                      (S (`` ``)
                        (NP (PRP it))
                        (VP (VBZ is)
                          (NP (DT the) (NN process))))))))))))
      (VP (VBD decided)
        (PP (IN by)
          (NP (NN nature)))))
    (. .)))

nsubj(wrote-3, You-1)
advmod(wrote-3, also-2)
root(ROOT-0, wrote-3)
mark(going-8, If-5)
nsubj(going-8, you-6)
xsubj(use-10, you-6)
aux(going-8, 're-7)
csubj(decided-17, going-8)
aux(use-10, to-9)
xcomp(going-8, use-10)
dobj(use-10, the-11)
nsubj(process-16, it-13)
cop(process-16, is-14)
det(process-16, the-15)
dep(the-11, process-16)
parataxis(wrote-3, decided-17)
prep_by(decided-17, nature-19)

(ROOT
  (S ('' '')
    (S
      (NP (NN defense))
      (, ,)
      (ADVP (WRB how))
      (VP (VBP do)
        (S
          (NP (PRP we))
          (VP (VB respond)
            (PP (TO to)
              (NP (NN something)))))))
    (IN like)
    (S
      (NP (DT a) (NN heart))
      (VP (VBP attack)))
    (. .)))

nsubj(do-5, defense-2)
advmod(do-5, how-4)
root(ROOT-0, do-5)
nsubj(respond-7, we-6)
ccomp(do-5, respond-7)
prep_to(respond-7, something-9)
dep(do-5, like-10)
det(heart-12, a-11)
nsubj(attack-13, heart-12)
ccomp(do-5, attack-13)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (ADJP (JJ immoral))
    (S
      (VP (TO to)
        (VP (VB save)
          (NP
            (NP (DT a) (NN woman))
            (VP (VBG having)
              (NP (DT a) (NN heart) (NN attack)))))))
    (. ?)))

cop(immoral-3, Is-1)
nsubj(immoral-3, it-2)
root(ROOT-0, immoral-3)
aux(save-5, to-4)
dep(immoral-3, save-5)
det(woman-7, a-6)
dobj(save-5, woman-7)
partmod(woman-7, having-8)
det(attack-11, a-9)
nn(attack-11, heart-10)
dobj(having-8, attack-11)

(ROOT
  (S
    (PP (IN After)
      (NP (DT all)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB just))
      (NP
        (NP (NN nature))
        (VP (VBG taking)
          (NP (PRP$ its) (NN course)))))
    (. .)))

prep_after(nature-7, all-2)
nsubj(nature-7, it-4)
cop(nature-7, 's-5)
advmod(nature-7, just-6)
root(ROOT-0, nature-7)
partmod(nature-7, taking-8)
poss(course-10, its-9)
dobj(taking-8, course-10)

(ROOT
  (SQ (MD Should)
    (NP (PRP we))
    (ADVP (RB simply))
    (VP (VB watch)
      (CC and)
      (VB hope)
      (PP (IN for)
        (NP (DT the) (JJS best))))
    (. ?)))

aux(watch-4, Should-1)
nsubj(watch-4, we-2)
nsubj(hope-6, we-2)
advmod(watch-4, simply-3)
root(ROOT-0, watch-4)
conj_and(watch-4, hope-6)
det(best-9, the-8)
prep_for(watch-4, best-9)

(ROOT
  (S
    (NP (DT This) (CD one) (NN I))
    (VP
      (VP (VBD read)
        (NP (CD three) (NNS times)))
      (CC and)
      (VP (VBP am)
        (ADJP (RB completely) (VBN lost)
          (PP (IN with)
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (PRP you))
                (VP (VBP are)
                  (VP (VBG going)
                    (PP (IN with)
                      (NP (DT this)))))))))))
    (. .)))

det(I-3, This-1)
num(I-3, one-2)
nsubj(read-4, I-3)
nsubjpass(lost-10, I-3)
root(ROOT-0, read-4)
num(times-6, three-5)
dobj(read-4, times-6)
auxpass(lost-10, am-8)
advmod(lost-10, completely-9)
conj_and(read-4, lost-10)
advmod(going-15, where-12)
nsubj(going-15, you-13)
aux(going-15, are-14)
prepc_with(lost-10, going-15)
prep_with(going-15, this-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 'm)
      (VP (VBG suggesting)
        (SBAR (IN that)
          (S
            (NP (NN abortion))
            (VP (VBZ is)
              (VP (VBG taking)
                (NP
                  (NP (DT a) (NN life) (, ,)
                    (CC or)
                    (NN murder))
                  (SBAR (IN if)
                    (S
                      (NP (DT that))
                      (VP (VBZ helps)
                        (VP (VB frame)
                          (NP (DT the) (NN argument)))))))))))))
    (. .)))

nsubj(suggesting-3, I-1)
aux(suggesting-3, 'm-2)
root(ROOT-0, suggesting-3)
complm(taking-7, that-4)
nsubj(taking-7, abortion-5)
aux(taking-7, is-6)
ccomp(suggesting-3, taking-7)
det(life-9, a-8)
dobj(taking-7, life-9)
dobj(taking-7, murder-12)
conj_or(life-9, murder-12)
mark(helps-15, if-13)
nsubj(helps-15, that-14)
dep(life-9, helps-15)
xcomp(helps-15, frame-16)
det(argument-18, the-17)
dobj(frame-16, argument-18)

(ROOT
  (S
    (NP
      (NP (DT All))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBD was)
            (VP (VBG saying))))))
    (VP (VBZ is)
      (ADJP (JJ sorry))
      (SBAR
        (SBAR (IN that)
          (S
            (NP (DT this))
            (VP (VBZ is)
              (NP (DT a) (NN woman) (JJ only) (NN issue)))))
        (CC but)
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ s)
              (NP
                (NP (DT the) (NN way) (NN nature))
                (VP (VBN planned)
                  (NP (PRP it))))))
          (. .))))
    (. .)))

dobj(saying-4, All-1)
nsubj(sorry-6, All-1)
nsubj(saying-4, I-2)
aux(saying-4, was-3)
rcmod(All-1, saying-4)
cop(sorry-6, is-5)
root(ROOT-0, sorry-6)
complm(issue-13, that-7)
nsubj(issue-13, this-8)
cop(issue-13, is-9)
det(issue-13, a-10)
nn(issue-13, woman-11)
amod(issue-13, only-12)
ccomp(sorry-6, issue-13)
nsubj(nature-19, that-15)
cop(nature-19, s-16)
det(nature-19, the-17)
nn(nature-19, way-18)
ccomp(sorry-6, nature-19)
conj_but(issue-13, nature-19)
partmod(nature-19, planned-20)
dobj(planned-20, it-21)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB How))
      (S
        (NP (PRP you))
        (VP (VBD got)
          (PP (IN from)
            (NP
              (NP (DT that))
              (PP (TO to)
                (S
                  (VP (VBG letting)
                    (S
                      (NP (NN someone))
                      (VP (VB die)
                        (PP (IN from)
                          (NP (DT a) (NN heart) (NN attack)))))))))))))
    (NP (PRP I))
    (VP (VBP have)
      (NP (DT no) (NN idea)))
    (. .)))

advmod(got-3, How-1)
nsubj(got-3, you-2)
dep(have-15, got-3)
prep_from(got-3, that-5)
prepc_to(that-5, letting-7)
nsubj(die-9, someone-8)
ccomp(letting-7, die-9)
det(attack-13, a-11)
nn(attack-13, heart-12)
prep_from(die-9, attack-13)
nsubj(have-15, I-14)
root(ROOT-0, have-15)
det(idea-17, no-16)
dobj(have-15, idea-17)

(ROOT
  (S
    (NP
      (NP (DT The) (NN point))
      (VP (VBG being)
        (VP (, ,)
          (SBAR (IN if)
            (S
              (NP (NNS men))
              (VP (MD could)
                (ADVP (RB also))
                (VP (VB carry)
                  (NP (DT a) (NN fetus) (NN I) (NN wouldn) (NN t)))))))))
    (VP (VBP change)
      (NP
        (NP (DT a) (NN thing))
        (PP (IN in)
          (NP (PRP$ my) (NN argument)))))
    (. .)))

det(point-2, The-1)
nsubj(change-15, point-2)
aux(carry-9, being-3)
mark(carry-9, if-5)
nsubj(carry-9, men-6)
aux(carry-9, could-7)
advmod(carry-9, also-8)
partmod(point-2, carry-9)
det(t-14, a-10)
nn(t-14, fetus-11)
nn(t-14, I-12)
nn(t-14, wouldn-13)
dobj(carry-9, t-14)
root(ROOT-0, change-15)
det(thing-17, a-16)
dobj(change-15, thing-17)
poss(argument-20, my-19)
prep_in(thing-17, argument-20)

(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN fetus))
        (PP (IN in)
          (NP (DT the) (JJ third) (NN trimester))))
      (VP (VBZ is)
        (NP
          (NP (DT a) (VBG living) (JJ human) (NN being))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ has)
                (VP (VBN gone)
                  (PP (IN past)
                    (NP
                      (NP (DT the) (NN point))
                      (PP (IN of)
                        (S
                          (VP (VBG being)
                            (NP
                              (NP (DT a) (JJ mere) (NN organism))
                              (PP (TO to)
                                (NP (DT a) (JJ pre-born) (NN person))))))))))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP believe)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD should)
              (VP (VB have)
                (NP (DT a) (NN right))
                (PP (TO to)
                  (NP (NN life)))
                (ADVP (RB regardless)
                  (PP (IN of)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ is)
                          (VP (VBG carrying)
                            (NP (PRP it))))))))))))))
    (. .)))

det(fetus-2, A-1)
nsubj(being-11, fetus-2)
det(trimester-6, the-4)
amod(trimester-6, third-5)
prep_in(fetus-2, trimester-6)
cop(being-11, is-7)
det(being-11, a-8)
amod(being-11, living-9)
amod(being-11, human-10)
root(ROOT-0, being-11)
nsubj(gone-14, being-11)
aux(gone-14, has-13)
rcmod(being-11, gone-14)
det(point-17, the-16)
prep_past(gone-14, point-17)
cop(organism-22, being-19)
det(organism-22, a-20)
amod(organism-22, mere-21)
prepc_of(point-17, organism-22)
det(person-26, a-24)
amod(person-26, pre-born-25)
prep_to(organism-22, person-26)
nsubj(believe-29, I-28)
conj_and(being-11, believe-29)
nsubj(gone-14, believe-29)
nsubj(have-32, it-30)
aux(have-32, should-31)
ccomp(believe-29, have-32)
det(right-34, a-33)
dobj(have-32, right-34)
prep_to(have-32, life-36)
nsubj(carrying-41, who-39)
aux(carrying-41, is-40)
prepc_regardless_of(have-32, carrying-41)
dobj(carrying-41, it-42)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (ADJP (JJ illegal)))
    (. .)))

nsubj(illegal-3, That-1)
cop(illegal-3, is-2)
root(ROOT-0, illegal-3)

(ROOT
  (S
    (S
      (S (RB Not)
        (VP (VBG taking)
          (NP (NN action))
          (S
            (VP (TO to)
              (VP (VB save)
                (NP
                  (NP (DT the) (NN life))
                  (PP (IN of)
                    (NP (NN someone))))
                (, ,)
                (ADVP (RB as)
                  (PP (IN in)
                    (NP (DT any) (NN life)
                      (CC or)
                      (NN death) (NN situation))))
                (, ,)
                (ADVP (RB always)))))))
      (VP (VBZ has)
        (NP (JJ moral) (NNS implications))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ s) (RB not)
        (ADJP (RB nearly)
          (PP (IN as)
            (NP (NN cut)
              (CC and)
              (JJ dry))))
        (SBAR (IN as)
          (S
            (NP (PRP you))
            (VP (VBP re)
              (S
                (VP (VBG trying)
                  (S
                    (VP (TO to)
                      (VP (VB make)
                        (NP (PRP it))
                        (PRT (RP out))
                        (S
                          (VP (TO to)
                            (VP (VB be))))))))))))))
    (. .)))

neg(taking-2, Not-1)
csubj(has-20, taking-2)
dobj(taking-2, action-3)
aux(save-5, to-4)
xcomp(taking-2, save-5)
det(life-7, the-6)
dobj(save-5, life-7)
prep_of(life-7, someone-9)
advmod(save-5, as-11)
det(situation-17, any-13)
nn(situation-17, life-14)
conj_or(life-14, death-16)
nn(situation-17, death-16)
prep_in(as-11, situation-17)
advmod(save-5, always-19)
root(ROOT-0, has-20)
amod(implications-22, moral-21)
dobj(has-20, implications-22)
nsubj(nearly-28, it-25)
cop(nearly-28, s-26)
neg(nearly-28, not-27)
conj_but(has-20, nearly-28)
prep_as(nearly-28, cut-30)
prep_as(nearly-28, dry-32)
conj_and(cut-30, dry-32)
mark(re-35, as-33)
nsubj(re-35, you-34)
advcl(nearly-28, re-35)
xcomp(re-35, trying-36)
aux(make-38, to-37)
xcomp(trying-36, make-38)
dobj(make-38, it-39)
prt(make-38, out-40)
aux(be-42, to-41)
xcomp(make-38, be-42)

(ROOT
  (SQ (VBP Do)
    (NP (PRP I))
    (VP (VB risk)
      (NP (PRP$ my) (JJ own) (NN life))
      (PP (IN by)
        (S
          (VP (VBG undergoing)
            (NP (JJ major) (NN surgery))))))
    (. ?)))

aux(risk-3, Do-1)
nsubj(risk-3, I-2)
root(ROOT-0, risk-3)
poss(life-6, my-4)
amod(life-6, own-5)
dobj(risk-3, life-6)
prepc_by(risk-3, undergoing-8)
amod(surgery-10, major-9)
dobj(undergoing-8, surgery-10)

(ROOT
  (SQ
    (S
      (VP (VBG Am)
        (S
          (NP (PRP I))
          (ADJP (JJ willing)
            (S
              (VP (TO to)
                (VP (VB live)
                  (NP (PRP$ my) (NN life))
                  (PP (IN with)
                    (NP (RB only) (CD one) (NN kidney) (NNP and))))))))))
    (, ,) (MD should)
    (NP (DT the) (JJ other))
    (VP
      (VP (VB be)
        (VP (VBN damaged)
          (PP (IN by)
            (NP
              (NP (DT any) (NN number))
              (PP (IN of)
                (NP (NNS things)))))))
      (, ,)
      (ADVP (RB potentially))
      (VP (VB die)))
    (. ?)))

dep(damaged-18, Am-1)
nsubj(willing-3, I-2)
xcomp(Am-1, willing-3)
aux(live-5, to-4)
xcomp(willing-3, live-5)
poss(life-7, my-6)
dobj(live-5, life-7)
advmod(and-12, only-9)
num(and-12, one-10)
nn(and-12, kidney-11)
prep_with(live-5, and-12)
aux(damaged-18, should-14)
det(other-16, the-15)
nsubjpass(damaged-18, other-16)
auxpass(damaged-18, be-17)
root(ROOT-0, damaged-18)
det(number-21, any-20)
agent(damaged-18, number-21)
prep_of(number-21, things-23)
advmod(damaged-18, potentially-25)
dep(damaged-18, die-26)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (SBAR (IN if)
      (S
        (S
          (NP (PRP I))
          (VP (VBP give)
            (PRT (RP up))
            (NP (PRP$ my) (NN kidney))))
        (CC and)
        (ADVP (RB then))
        (S
          (NP
            (NP (DT a) (NN member))
            (PP (IN of)
              (NP (PRP$ my) (NN family))))
          (VP (VBZ needs)
            (NP (CD one))))))
    (. ?)))

dep(give-4, What-1)
mark(give-4, if-2)
nsubj(give-4, I-3)
root(ROOT-0, give-4)
prt(give-4, up-5)
poss(kidney-7, my-6)
dobj(give-4, kidney-7)
advmod(give-4, then-9)
conj_and(give-4, then-9)
det(member-11, a-10)
nsubj(needs-15, member-11)
poss(family-14, my-13)
prep_of(member-11, family-14)
conj_and(give-4, needs-15)
dobj(needs-15, one-16)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB never))
    (VP (VBD said)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADJP (RB perfectly) (JJ moral)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB sit)
                      (PP (IN by)))
                    (CC and)
                    (VP (VB do)
                      (NP (NN nothing))
                      (SBAR
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP I))
                            (VP (MD could)
                              (VP (VB be)
                                (VP (VBG saving)
                                  (NP (DT a) (NN life)))))))
                        (, ,)
                        (CC but)
                        (SBAR (IN that)
                          (S
                            (NP (NN doesn) (NN t))
                            (VP (VBP mean)
                              (S
                                (NP (PRP I))
                                (VP (VB m)
                                  (VP (VBN compelled)
                                    (S
                                      (VP (TO to)
                                        (VP (VB have)
                                          (NP (PDT all) (PRP$ my) (JJ spare) (NN body) (NNS parts))
                                          (ADVP (RB out)))))))))))))))))))))
    (. .)))

nsubj(said-3, I-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
nsubj(moral-7, it-4)
cop(moral-7, was-5)
advmod(moral-7, perfectly-6)
ccomp(said-3, moral-7)
aux(sit-9, to-8)
xcomp(moral-7, sit-9)
prep(sit-9, by-10)
xcomp(moral-7, do-12)
conj_and(sit-9, do-12)
dobj(do-12, nothing-13)
advmod(saving-18, when-14)
nsubj(saving-18, I-15)
aux(saving-18, could-16)
aux(saving-18, be-17)
ccomp(do-12, saving-18)
det(life-20, a-19)
dobj(saving-18, life-20)
complm(mean-26, that-23)
nn(t-25, doesn-24)
nsubj(mean-26, t-25)
ccomp(do-12, mean-26)
conj_but(saving-18, mean-26)
nsubj(m-28, I-27)
xsubj(have-31, I-27)
ccomp(mean-26, m-28)
dep(m-28, compelled-29)
aux(have-31, to-30)
xcomp(compelled-29, have-31)
predet(parts-36, all-32)
poss(parts-36, my-33)
amod(parts-36, spare-34)
nn(parts-36, body-35)
dobj(have-31, parts-36)
advmod(have-31, out-37)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP do)
        (VP (VB donate)
          (NP (NN blood))
          (NP (DT every) (CD six) (NNS months)))))
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ IS)
        (VP (VBG saving)
          (NP (NNS lives)))))
    (. .)))

nsubj(donate-3, I-1)
aux(donate-3, do-2)
root(ROOT-0, donate-3)
dobj(donate-3, blood-4)
det(months-7, every-5)
num(months-7, six-6)
tmod(donate-3, months-7)
nsubj(saving-11, that-9)
aux(saving-11, IS-10)
conj_and(donate-3, saving-11)
dobj(saving-11, lives-12)

