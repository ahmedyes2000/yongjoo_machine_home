(ROOT
  (S
    (S
      (PP (IN Oh)
        (NP (NN jeez)))
      (, ,)
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP
                (NP (PRP you))
                (CC and)
                (NP (DT that) (NNP J) (NNP whatever) (NN guy)))
              (VP (VBD came)
                (PP (IN from))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP$ your) (JJ critical) (NN thinking) (NNS skills))
      (VP (VBP are)
        (ADJP (RB absolutely) (JJ awful)
          (PP (IN on)
            (NP (DT this) (NN topic))))))
    (. .)))

prep_oh(know-7, jeez-2)
nsubj(know-7, I-4)
aux(know-7, do-5)
neg(know-7, n't-6)
root(ROOT-0, know-7)
advmod(came-15, where-8)
nsubj(came-15, you-9)
det(guy-14, that-11)
nn(guy-14, J-12)
nn(guy-14, whatever-13)
conj_and(you-9, guy-14)
nsubj(came-15, guy-14)
advcl(know-7, came-15)
prep(came-15, from-16)
poss(skills-22, your-19)
amod(skills-22, critical-20)
nn(skills-22, thinking-21)
nsubj(awful-25, skills-22)
cop(awful-25, are-23)
advmod(awful-25, absolutely-24)
conj_but(know-7, awful-25)
det(topic-28, this-27)
prep_on(awful-25, topic-28)

(ROOT
  (S
    (NP
      (NP (PRP$ My) (NN point))
      (PP (IN about)
        (NP
          (NP (DT the) (NNS thousands))
          (PP (IN of)
            (NP (NN potential))))))
    (VP (VBZ lives)
      (NP
        (NP (DT every) (NN time))
        (SBAR
          (S
            (NP (DT a) (NN guy) (NNS cums))
            (VP (VBP are)
              (ADJP (JJ accurate)))))))
    (. .)))

poss(point-2, My-1)
nsubj(lives-8, point-2)
det(thousands-5, the-4)
prep_about(point-2, thousands-5)
prep_of(thousands-5, potential-7)
root(ROOT-0, lives-8)
det(time-10, every-9)
dobj(lives-8, time-10)
det(cums-13, a-11)
nn(cums-13, guy-12)
nsubj(accurate-15, cums-13)
cop(accurate-15, are-14)
rcmod(time-10, accurate-15)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S
      (VP (VBN reread)
        (ADVP (DT this) (RB twice))
        (SBAR (IN if)
          (S
            (NP (PRP you))
            (VP (VBP feel)
              (S
                (NP (DT a) (NN need))
                (VP (TO to)
                  (VP (VB reply) (, ,)
                    (CC and)
                    (VB consult)
                    (NP (DT a) (NN dictionary))
                    (SBAR (IN if)
                      (S
                        (NP (PRP you))
                        (VP (VBP have)
                          (S
                            (VP (TO to))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP 'm)
      (ADJP (JJ tired)
        (PP (IN of)
          (S
            (VP (VBG having)
              (S
                (VP (TO to)
                  (VP (VB over-explain)
                    (NP (DT the) (JJS simplest) (NNS things))))))))))
    (. .)))

advmod(tired-25, Now-1)
partmod(tired-25, reread-3)
dep(twice-5, this-4)
advmod(reread-3, twice-5)
mark(feel-8, if-6)
nsubj(feel-8, you-7)
advcl(reread-3, feel-8)
det(need-10, a-9)
nsubj(reply-12, need-10)
nsubj(consult-15, need-10)
aux(reply-12, to-11)
xcomp(feel-8, reply-12)
xcomp(feel-8, consult-15)
conj_and(reply-12, consult-15)
det(dictionary-17, a-16)
dobj(reply-12, dictionary-17)
mark(have-20, if-18)
nsubj(have-20, you-19)
xsubj(to-21, you-19)
advcl(reply-12, have-20)
xcomp(have-20, to-21)
nsubj(tired-25, I-23)
cop(tired-25, 'm-24)
root(ROOT-0, tired-25)
prepc_of(tired-25, having-27)
aux(over-explain-29, to-28)
xcomp(having-27, over-explain-29)
det(things-32, the-30)
amod(things-32, simplest-31)
dobj(over-explain-29, things-32)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS thousands))
        (PP (IN of)
          (NP
            (NP (NN sperm))
            (, ,)
            (NP
              (NP (DT each) (`` ``) (NN potentially) ('' ''))
              (ADJP (JJ able)
                (S
                  (VP (TO to)
                    (VP (VB make)
                      (NP (DT a) (NN life))
                      (SBAR (IN if)
                        (S
                          (NP (PRP it))
                          (VP (VBZ finds)
                            (NP (DT an) (NN egg))))))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, thousands-3)
prep_of(thousands-3, sperm-5)
det(potentially-9, each-7)
appos(sperm-5, potentially-9)
amod(potentially-9, able-11)
aux(make-13, to-12)
xcomp(able-11, make-13)
det(life-15, a-14)
dobj(make-13, life-15)
mark(finds-18, if-16)
nsubj(finds-18, it-17)
advcl(make-13, finds-18)
det(egg-20, an-19)
dobj(finds-18, egg-20)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT every) (NN time))
        (SBAR
          (S
            (NP (DT a) (NN guy))
            (VP (VBZ cums))))))
    (. .)))

nsubj(time-4, This-1)
cop(time-4, is-2)
det(time-4, every-3)
root(ROOT-0, time-4)
dobj(cums-7, time-4)
det(guy-6, a-5)
nsubj(cums-7, guy-6)
rcmod(time-4, cums-7)

(ROOT
  (S
    (VP (VB Look)
      (NP (PRP it))
      (ADVP (RB up)))
    (. .)))

root(ROOT-0, Look-1)
dobj(Look-1, it-2)
advmod(Look-1, up-3)

(ROOT
  (S
    (NP (EX There))
    (VP (VBD stored)
      (PP (IN in)
        (NP (PRP you)))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP
              (VP (VB jack)
                (NP (PRP it)))
              (CC or)
              (VP
                (VP (VB screw)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBP 're)
                        (VP (VBN dissolved)
                          (PP (IN in)
                            (NP (DT the) (NN body))))))))
                (CC or)
                (VP (VB come)
                  (PRT (RP out))
                  (PP (IN in)
                    (NP (PRP$ your) (NN sleep))))))))))
    (. .)))

expl(stored-2, There-1)
root(ROOT-0, stored-2)
prep_in(stored-2, you-4)
mark(jack-10, if-6)
nsubj(jack-10, you-7)
nsubj(screw-13, you-7)
aux(jack-10, do-8)
neg(jack-10, n't-9)
advcl(stored-2, jack-10)
dobj(jack-10, it-11)
advcl(stored-2, screw-13)
conj_or(jack-10, screw-13)
nsubjpass(dissolved-16, they-14)
auxpass(dissolved-16, 're-15)
ccomp(screw-13, dissolved-16)
det(body-19, the-18)
prep_in(dissolved-16, body-19)
conj_or(jack-10, come-21)
conj_or(screw-13, come-21)
prt(come-21, out-22)
poss(sleep-25, your-24)
prep_in(come-21, sleep-25)

(ROOT
  (S (CC But)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (NN sperm) (NN holocaust))
        (VP
          (ADVP (RB literally))
          (VBN everyday)
          (PP (IN within)
            (NP (PRP$ our) (NNS bodies))))))
    (. .)))

cc(holocaust-6, But-1)
nsubj(holocaust-6, it-2)
cop(holocaust-6, 's-3)
det(holocaust-6, a-4)
nn(holocaust-6, sperm-5)
root(ROOT-0, holocaust-6)
advmod(everyday-8, literally-7)
partmod(holocaust-6, everyday-8)
poss(bodies-11, our-10)
prep_within(everyday-8, bodies-11)

(ROOT
  (S (CC And)
    (NP (PRP I))
    (VP (VBD used)
      (NP (DT that) (NN example)
        (S
          (VP (TO to)
            (VP (VB show)
              (NP
                (NP (NNP J) (NNP whatever))
                (SBAR
                  (WHNP (RB exactly) (WRB how) (JJ silly))
                  (S
                    (NP (DT the) (`` ``) (JJ potential) ('' '') (NN life) (NN argument))
                    (VP (VBZ is))))))))))
    (. .)))

cc(used-3, And-1)
nsubj(used-3, I-2)
root(ROOT-0, used-3)
det(example-5, that-4)
dobj(used-3, example-5)
aux(show-7, to-6)
infmod(example-5, show-7)
nn(whatever-9, J-8)
dobj(show-7, whatever-9)
advmod(silly-12, exactly-10)
advmod(silly-12, how-11)
advmod(is-19, silly-12)
rel(is-19, silly-12)
det(argument-18, the-13)
amod(argument-18, potential-15)
nn(argument-18, life-17)
nsubj(is-19, argument-18)
rcmod(whatever-9, is-19)

(ROOT
  (S
    (NP (JJ Potential) (NN life))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (JJ legitimate) (NN excuse))
        (PP (IN against)
          (NP (NN abortion)))))
    (. .)))

amod(life-2, Potential-1)
nsubj(excuse-7, life-2)
cop(excuse-7, is-3)
neg(excuse-7, not-4)
det(excuse-7, a-5)
amod(excuse-7, legitimate-6)
root(ROOT-0, excuse-7)
prep_against(excuse-7, abortion-9)

(ROOT
  (FRAG
    (FRAG
      (INTJ (UH Because))
      (, ,)
      (ADVP (RB exactly)))
    (: ...)
    (FRAG
      (ADJP (JJ like))
      (: ...))))

dep(exactly-3, Because-1)
root(ROOT-0, exactly-3)
dep(exactly-3, like-5)

(ROOT
  (FRAG
    (ADJP (FW I.) (. .))
    (. .)))

root(ROOT-0, I.-1)

(ROOT
  (S
    (S
      (VP (VBD said) (: ...)
        (S
          (NP (PRP we))
          (VP (VB destroy)
            (NP
              (NP (NNS thousands))
              (PP (IN of)
                (NP (JJ potential) (NNS lives))))
            (NP (DT every) (JJ single) (NN time))))))
    (NP (PRP we))
    (VP
      (VP (VBP masturbate))
      (, ,)
      (CC or)
      (VP (VBP do) (RB n't)
        (VP (VB masturbate)))
      (, ,)
      (CC or)
      (ADVP (RB even))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP we))
          (VP (VBP do)
            (VP (VB have)
              (NP (NN sex)))))))
    (. .)))

dep(masturbate-13, said-1)
nsubj(destroy-4, we-3)
ccomp(said-1, destroy-4)
parataxis(said-1, destroy-4)
iobj(destroy-4, thousands-5)
amod(lives-8, potential-7)
prep_of(thousands-5, lives-8)
det(time-11, every-9)
amod(time-11, single-10)
dobj(destroy-4, time-11)
nsubj(masturbate-13, we-12)
nsubj(masturbate-18, we-12)
root(ROOT-0, masturbate-13)
aux(masturbate-18, do-16)
neg(masturbate-18, n't-17)
conj_or(masturbate-13, masturbate-18)
advmod(masturbate-13, even-21)
conj_or(masturbate-13, even-21)
advmod(have-25, when-22)
nsubj(have-25, we-23)
aux(have-25, do-24)
advcl(masturbate-13, have-25)
conj_or(masturbate-13, have-25)
dobj(have-25, sex-26)

