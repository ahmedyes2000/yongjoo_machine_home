(ROOT
  (S
    (VP (VBZ is) (RB not)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB exist)
              (PP (IN under)
                (NP
                  (NP
                    (ADJP (DT any)
                      (CC and)
                      (DT all))
                    (NNS sets))
                  (PP (IN of)
                    (NP (NNS circumstances))))))))))
    (. .)))

cop(right-4, is-1)
neg(right-4, not-2)
det(right-4, the-3)
root(ROOT-0, right-4)
aux(exist-6, to-5)
infmod(right-4, exist-6)
amod(sets-11, any-8)
conj_and(any-8, all-10)
amod(sets-11, all-10)
prep_under(exist-6, sets-11)
prep_of(sets-11, circumstances-13)

(ROOT
  (S
    (NP (DT No) (JJ human) (NN being))
    (VP (VBZ has)
      (NP (DT that) (NN right)))
    (. .)))

det(being-3, No-1)
amod(being-3, human-2)
nsubj(has-4, being-3)
root(ROOT-0, has-4)
det(right-6, that-5)
dobj(has-4, right-6)

(ROOT
  (S (CC And)
    (NP
      (NP (DT the) (NN development))
      (PP (IN of)
        (NP
          (NP (DT the) (JJ distinctive) (NN characteristic))
          (PP (IN of)
            (NP
              (NP (JJ human))
              (VP (VBG being)
                (VP (VBZ 's)
                  (S
                    (VP (TO to)
                      (VP (VB reason)
                        (CC and)
                        (VB make)
                        (NP (NNS judgments))))))))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ operative) (NN context))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (NP (DT the) (NN law))
            (VP (VBZ defines)
              (NP
                (NP (DT the) (NNS ages))
                (SBAR
                  (WHPP (IN at)
                    (WHNP (WDT which)))
                  (S
                    (NP
                      (NP (DT the) (JJ full) (NN support))
                      (PP (IN of)
                        (NP
                          (NP (-LRB- -LRB-) (NN recognition) (-RRB- -RRB-))
                          (CC and)
                          (NP
                            (NP (NN weight))
                            (PP (IN of)
                              (PRN (-LRB- -LRB-)
                                (NP (NN punishment))
                                (-RRB- -RRB-))
                              (NP (DT the) (NN law)))))))
                    (VP (VBZ extends)
                      (PP (IN in)
                        (NP
                          (NP (DT any) (NN set))
                          (PP (IN of)
                            (NP (NNS circumstances))))))))))))))
    (. .)))

cc(context-20, And-1)
det(development-3, the-2)
nsubj(context-20, development-3)
det(characteristic-7, the-5)
amod(characteristic-7, distinctive-6)
prep_of(development-3, characteristic-7)
prep_of(characteristic-7, human-9)
xsubj(reason-13, human-9)
aux('s-11, being-10)
partmod(human-9, 's-11)
aux(reason-13, to-12)
xcomp('s-11, reason-13)
xcomp('s-11, make-15)
conj_and(reason-13, make-15)
dobj(reason-13, judgments-16)
cop(context-20, is-17)
det(context-20, the-18)
amod(context-20, operative-19)
root(ROOT-0, context-20)
rel(defines-25, which-22)
det(law-24, the-23)
nsubj(defines-25, law-24)
rcmod(context-20, defines-25)
det(ages-27, the-26)
dobj(defines-25, ages-27)
rel(extends-45, which-29)
det(support-32, the-30)
amod(support-32, full-31)
nsubj(extends-45, support-32)
prep_of(support-32, recognition-35)
prep_of(support-32, weight-38)
conj_and(recognition-35, weight-38)
dep(weight-38, punishment-41)
det(law-44, the-43)
prep_of(weight-38, law-44)
rcmod(ages-27, extends-45)
det(set-48, any-47)
prep_in(extends-45, set-48)
prep_of(set-48, circumstances-50)

(ROOT
  (S
    (NP
      (NP (NNP Children))
      (, ,)
      (PP (IN for)
        (NP (NN example)))
      (, ,))
    (VP (VBP do)
      (SBAR (RB not)
        (S (, ,)
          (PP (IN under)
            (NP (JJ normal) (NNS circumstances)))
          (, ,)
          (VP (VBP have)
            (NP (DT the) (NN right)
              (S
                (VP (TO to)
                  (VP (VB decide)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (NP (PRP they))
                        (VP (MD will)
                          (VP (VB be)
                            (VP (VBN raised))))))))))))))
    (. .)))

nsubj(do-6, Children-1)
prep_for(Children-1, example-4)
root(ROOT-0, do-6)
dep(have-13, not-7)
amod(circumstances-11, normal-10)
prep_under(have-13, circumstances-11)
ccomp(do-6, have-13)
det(right-15, the-14)
dobj(have-13, right-15)
aux(decide-17, to-16)
infmod(right-15, decide-17)
advmod(raised-22, how-18)
nsubjpass(raised-22, they-19)
aux(raised-22, will-20)
auxpass(raised-22, be-21)
ccomp(decide-17, raised-22)

(ROOT
  (S
    (PP (IN By)
      (NP (DT the) (JJ same) (NN token)))
    (, ,)
    (NP (NNS parents))
    (VP (VBP do) (RB not)
      (VP (VB have)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB beat)
                (NP (DT a) (NN child))
                (PP (IN into)
                  (NP (NN submission)))
                (, ,)
                (ADVP (RB either))))))))
    (. .)))

det(token-4, the-2)
amod(token-4, same-3)
prep_by(have-9, token-4)
nsubj(have-9, parents-6)
aux(have-9, do-7)
neg(have-9, not-8)
root(ROOT-0, have-9)
det(right-11, the-10)
dobj(have-9, right-11)
aux(beat-13, to-12)
infmod(right-11, beat-13)
det(child-15, a-14)
dobj(beat-13, child-15)
prep_into(beat-13, submission-17)
advmod(beat-13, either-19)

(ROOT
  (S
    (PP (IN In)
      (NP (DT both) (NNS cases)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NNS adults))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP are)
              (PP (IN in)
                (NP
                  (NP (NN judgment))
                  (, ,) (RB not)
                  (NP (DT the) (NNS children)))))))))
    (. .)))

det(cases-3, both-2)
prep_in(adults-8, cases-3)
nsubj(adults-8, it-5)
cop(adults-8, is-6)
det(adults-8, the-7)
root(ROOT-0, adults-8)
nsubj(are-10, adults-8)
rcmod(adults-8, are-10)
prep_in(are-10, judgment-12)
neg(judgment-12, not-14)
det(children-16, the-15)
dep(judgment-12, children-16)

(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NNS adults))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP are)
                  (VP (VBN considered)
                    (S
                      (VP (TO to)
                        (VP (VB be) (`` ``)
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN age))
                              (PP (IN of)
                                (NP (NN majority) ('' ''))))))))))))))))
    (NP (PRP it))
    (VP (VBZ is)
      (NP (PRP they))
      (PP (TO to)
        (NP
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBP have)
                (NP (DT the) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB raise)
                        (NP (PRP$ their) (NN child)))))))))
          (CC and)
          (NP
            (NP (PRP they))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP are)
                  (VP (VBN punished)
                    (PP (IN for)
                      (NP (DT the) (NN abuse)))))))))))
    (. .)))

mark(adults-5, Since-1)
nsubj(adults-5, it-2)
cop(adults-5, is-3)
det(adults-5, the-4)
nsubjpass(considered-8, adults-5)
advcl(they-20, adults-5)
auxpass(considered-8, are-7)
rcmod(adults-5, considered-8)
aux(be-10, to-9)
xcomp(considered-8, be-10)
det(age-14, the-13)
prep_of(be-10, age-14)
prep_of(age-14, majority-16)
nsubj(they-20, it-18)
cop(they-20, is-19)
root(ROOT-0, they-20)
nsubj(have-23, who-22)
prep_to(they-20, have-23)
det(right-25, the-24)
dobj(have-23, right-25)
aux(raise-27, to-26)
infmod(right-25, raise-27)
poss(child-29, their-28)
dobj(raise-27, child-29)
prep_to(they-20, they-31)
conj_and(have-23, they-31)
nsubjpass(punished-34, they-31)
auxpass(punished-34, are-33)
rcmod(they-31, punished-34)
det(abuse-37, the-36)
prep_for(punished-34, abuse-37)

