(ROOT
  (S (`` ``)
    (S
      (NP (DT That))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (NN abortion))
            (VP (MD would)
              (VP (VB be)))))
        (, ,)
        (SBAR (IN if)
          (S
            (NP (DT the) (NN fetus))
            (VP (VBD were)
              (NP (DT a) (NN person)))))))
    ('' '')
    (NP (PRP You))
    (VP (VBP assume)
      (NP (DT this))
      (PP (IN without)
        (NP
          (NP (DT any) (NNS arguments))
          (, ,)
          (SBAR
            (WHADVP (WRB when))
            (S
              (NP (DT this))
              (VP (VBZ is)
                (NP
                  (NP (DT the) (JJ very) (NN point))
                  (SBAR
                    (S
                      (NP (PRP we))
                      (VP (MD must)
                        (VP (VB discuss)
                          (S
                            (VP (TO to)
                              (VP (VB accept)
                                (NP
                                  (NP (DT any) (NN kind))
                                  (PP (IN of)
                                    (UCP
                                      (NP (NN abortion))
                                      (CC or)
                                      (RB not)
                                      (ADVP (IN at) (DT all)))))))))))))))))))
    (. .)))

nsubj('s-3, That-2)
ccomp(assume-17, 's-3)
dobj(be-7, what-4)
nsubj(be-7, abortion-5)
aux(be-7, would-6)
ccomp('s-3, be-7)
mark(person-14, if-9)
det(fetus-11, the-10)
nsubj(person-14, fetus-11)
cop(person-14, were-12)
det(person-14, a-13)
advcl('s-3, person-14)
nsubj(assume-17, You-16)
root(ROOT-0, assume-17)
dobj(assume-17, this-18)
det(arguments-21, any-20)
prep_without(assume-17, arguments-21)
advmod(point-28, when-23)
nsubj(point-28, this-24)
cop(point-28, is-25)
det(point-28, the-26)
amod(point-28, very-27)
dep(arguments-21, point-28)
dobj(discuss-31, point-28)
nsubj(discuss-31, we-29)
xsubj(accept-33, we-29)
aux(discuss-31, must-30)
rcmod(point-28, discuss-31)
aux(accept-33, to-32)
xcomp(discuss-31, accept-33)
det(kind-35, any-34)
dobj(accept-33, kind-35)
prep_of(kind-35, abortion-37)
neg(at-40, not-39)
prep_of(kind-35, at-40)
conj_or(abortion-37, at-40)
pobj(at-40, all-41)

(ROOT
  (S
    (NP (DT The) (JJ big) (NN question))
    (ADVP (RB here))
    (VP (VBZ is)
      (NP
        (NP (DT this))
        (: :)
        (SBARQ
          (SBAR (IN Since)
            (S
              (NP (NN science) (RB as))
              (VP (VBD proved)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT the) (NN life))
                      (PP (IN of)
                        (NP (DT every) (NN baby))))
                    (VP (VBZ begins)
                      (PP (IN at)
                        (NP
                          (NP (DT some) (NN point))
                          (PP (IN before)
                            (NP (NN birth)))
                          (PRN (-LRB- -LRB-)
                            (CC and)
                            (S
                              (ADVP (RB there))
                              (NP (PRP you))
                              (VP (VBP have)
                                (NP (DT the) (JJ countless) (JJ premature) (NNS babies)
                                  (S
                                    (VP (TO to)
                                      (VP (VB prove)
                                        (NP (PRP it))))))))
                            (-RRB- -RRB-))))))))))
          (, ,)
          (WHADVP (WRB when))
          (SQ (VBZ does)
            (NP (DT this) (JJ new) (JJ human) (NN life))
            (VP (VBZ begins)
              (S
                (VP (TO to)
                  (VP (VB exist)))))))))
    (. ?)))

det(question-3, The-1)
amod(question-3, big-2)
nsubj(this-6, question-3)
advmod(this-6, here-4)
cop(this-6, is-5)
root(ROOT-0, this-6)
mark(proved-11, Since-8)
nsubj(proved-11, science-9)
advmod(science-9, as-10)
advcl(begins-44, proved-11)
complm(begins-18, that-12)
det(life-14, the-13)
nsubj(begins-18, life-14)
det(baby-17, every-16)
prep_of(life-14, baby-17)
ccomp(proved-11, begins-18)
det(point-21, some-20)
prep_at(begins-18, point-21)
prep_before(point-21, birth-23)
dep(have-28, and-25)
advmod(have-28, there-26)
nsubj(have-28, you-27)
dep(point-21, have-28)
det(babies-32, the-29)
amod(babies-32, countless-30)
amod(babies-32, premature-31)
dobj(have-28, babies-32)
aux(prove-34, to-33)
infmod(babies-32, prove-34)
dobj(prove-34, it-35)
advmod(begins-44, when-38)
aux(begins-44, does-39)
det(life-43, this-40)
amod(life-43, new-41)
amod(life-43, human-42)
nsubj(begins-44, life-43)
xsubj(exist-46, life-43)
dep(this-6, begins-44)
aux(exist-46, to-45)
xcomp(begins-44, exist-46)

(ROOT
  (NP ('' '')
    (CC and)
    (NP
      (NP (DT the) (JJ other) (NN question))
      (: :)
      (SBAR
        (SBAR (IN Since)
          (S
            (NP (DT all) (JJ newborn) (NNS babies))
            (VP (VBP are)
              (ADJP (VBN entitled)
                (PP (TO to)
                  (NP (DT the)
                    (ADJP (JJ right)
                      (PP (TO to)
                        (NP
                          (NP (NN life))
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (VP (VBP are)
                                (NP
                                  (NP (DT the) (`` ``) (NNS properties) ('' ''))
                                  (SBAR
                                    (WHNP (WDT that))
                                    (S
                                      (VP (VBP make)
                                        (NP (PRP them))))))))))))
                    (JJ human) (NNS persons)))))))
        (CC and)
        (SBAR (IN that)
          (S
            (NP (NN fetus))
            (VP (VBP do) (RB n't))))))
    (. ?)))

cc(question-5, and-2)
det(question-5, the-3)
amod(question-5, other-4)
root(ROOT-0, question-5)
mark(entitled-12, Since-7)
det(babies-10, all-8)
amod(babies-10, newborn-9)
nsubjpass(entitled-12, babies-10)
auxpass(entitled-12, are-11)
dep(question-5, entitled-12)
det(persons-28, the-14)
amod(persons-28, right-15)
prep_to(right-15, life-17)
nsubj(properties-22, life-17)
cop(properties-22, are-19)
det(properties-22, the-20)
rcmod(life-17, properties-22)
nsubj(make-25, properties-22)
rcmod(properties-22, make-25)
dobj(make-25, them-26)
amod(persons-28, human-27)
prep_to(entitled-12, persons-28)
dep(do-32, that-30)
nsubj(do-32, fetus-31)
dep(question-5, do-32)
conj_and(entitled-12, do-32)
neg(do-32, n't-33)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ is)
          (ADJP (JJ necessary)))))
    (ADVP (RB here))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB use)
            (S
              (NP
                (NP (DT all) (JJ available) (NN knowledge))
                (PP (IN of)
                  (NP
                    (NP (NN science))
                    (, ,)
                    (NP (NN phylosophy))
                    (CC and)
                    (NP (DT any) (NN subject)))))
              (ADJP (JJ available)
                (S
                  (VP (TO to)
                    (VP (VB give)
                      (NP (DT an) (NN answer))
                      (PP (TO to)
                        (NP (DT those) (CD two) (NNS questions))))))))))))
    (. .)))

nsubj(necessary-3, What-1)
cop(necessary-3, is-2)
csubj(is-5, necessary-3)
advmod(is-5, here-4)
root(ROOT-0, is-5)
aux(use-7, to-6)
xcomp(is-5, use-7)
det(knowledge-10, all-8)
amod(knowledge-10, available-9)
nsubj(available-18, knowledge-10)
prep_of(knowledge-10, science-12)
prep_of(knowledge-10, phylosophy-14)
conj_and(science-12, phylosophy-14)
det(subject-17, any-16)
prep_of(knowledge-10, subject-17)
conj_and(science-12, subject-17)
xcomp(use-7, available-18)
aux(give-20, to-19)
xcomp(available-18, give-20)
det(answer-22, an-21)
dobj(give-20, answer-22)
det(questions-26, those-24)
num(questions-26, two-25)
prep_to(give-20, questions-26)

(ROOT
  (S (CC And)
    (PP (IN with)
      (NP
        (NP (DT the) (JJS best) (NNS answers))
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD can)
              (VP (VB obtain)
                (PP (IN with)
                  (NP (DT the) (NN knowledge)))))))))
    (NP (PRP we))
    (VP (VBP have)
      (ADVP (RB nowadays))
      (S
        (VP (TO to)
          (VP (VB decide)
            (SBAR
              (S
                (NP (JJ first) (NN weather) (NN abortion))
                (VP (MD should)
                  (VP (VB be)
                    (ADJP (RB morally) (JJ accepted)
                      (CC and)
                      (JJ seconddly)
                      (SBAR (IN if)
                        (S
                          (NP (NN abortion))
                          (VP (MD should)
                            (VP (VB be)
                              (ADJP (JJ legal)))))
                        (CC or)
                        (RB not)))))))))))
    (. .)))

cc(have-13, And-1)
det(answers-5, the-3)
amod(answers-5, best-4)
dobj(obtain-8, answers-5)
prep_with(have-13, answers-5)
nsubj(obtain-8, we-6)
aux(obtain-8, can-7)
rcmod(answers-5, obtain-8)
det(knowledge-11, the-10)
prep_with(obtain-8, knowledge-11)
nsubj(have-13, we-12)
xsubj(decide-16, we-12)
root(ROOT-0, have-13)
advmod(have-13, nowadays-14)
aux(decide-16, to-15)
xcomp(have-13, decide-16)
amod(abortion-19, first-17)
nn(abortion-19, weather-18)
nsubj(accepted-23, abortion-19)
nsubj(seconddly-25, abortion-19)
aux(accepted-23, should-20)
cop(accepted-23, be-21)
advmod(accepted-23, morally-22)
ccomp(decide-16, accepted-23)
ccomp(decide-16, seconddly-25)
conj_and(accepted-23, seconddly-25)
mark(legal-30, if-26)
nsubj(legal-30, abortion-27)
aux(legal-30, should-28)
cop(legal-30, be-29)
ccomp(accepted-23, legal-30)
ccomp(accepted-23, not-32)
conj_or(legal-30, not-32)

