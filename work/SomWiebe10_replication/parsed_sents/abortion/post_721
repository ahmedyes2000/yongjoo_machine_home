(ROOT
  (S
    (ADVP (RB sigh))
    (NP (PRP I))
    (VP (VBP want)
      (S
        (VP (TO to)
          (VP (VB say)
            (INTJ (UH yes))
            (PP (IN for)
              (NP (DT the) (JJS most) (NN part)))))))
    (. .)))

advmod(want-3, sigh-1)
nsubj(want-3, I-2)
xsubj(say-5, I-2)
root(ROOT-0, want-3)
aux(say-5, to-4)
xcomp(want-3, say-5)
dep(say-5, yes-6)
det(part-10, the-8)
amod(part-10, most-9)
prep_for(say-5, part-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR (IN if)
          (S
            (NP (NNS people))
            (VP (VBP are)
              (ADJP (JJ mature) (RB enough)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (NP
                        (NP (NN sex))
                        (PRN (-LRB- -LRB-)
                          (VP (VBG knowing)
                            (NP
                              (NP (DT the) (NNS consequences))
                              (PP (IN of)
                                (NP (PRP it)))))
                          (-RRB- -RRB-))))))))))))
    (, ,)
    (NP (PRP they))
    (VP (MD should)
      (VP (VB be)
        (ADJP (JJ mature) (RB enough)
          (S
            (VP (TO to)
              (VP (VB handle)
                (NP (DT the) (NN fallout))
                (PP (IN from)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(think-2, I-1)
ccomp(mature-22, think-2)
mark(mature-6, if-3)
nsubj(mature-6, people-4)
cop(mature-6, are-5)
advcl(think-2, mature-6)
advmod(mature-6, enough-7)
aux(have-9, to-8)
xcomp(mature-6, have-9)
dobj(have-9, sex-10)
dep(sex-10, knowing-12)
det(consequences-14, the-13)
dobj(knowing-12, consequences-14)
prep_of(consequences-14, it-16)
nsubj(mature-22, they-19)
aux(mature-22, should-20)
cop(mature-22, be-21)
root(ROOT-0, mature-22)
advmod(mature-22, enough-23)
aux(handle-25, to-24)
xcomp(mature-22, handle-25)
det(fallout-27, the-26)
dobj(handle-25, fallout-27)
prep_from(handle-25, it-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD should) (RB not)
      (VP (VB be)
        (VP (VBN used)
          (PP (IN as)
            (NP
              (NP (DT a) (NN form))
              (PP (IN of)
                (NP (NN birth) (NN control))))))))
    (. .)))

nsubjpass(used-5, It-1)
aux(used-5, should-2)
neg(used-5, not-3)
auxpass(used-5, be-4)
root(ROOT-0, used-5)
det(form-8, a-7)
prep_as(used-5, form-8)
nn(control-11, birth-10)
prep_of(form-8, control-11)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB want)
            (NP (DT a) (NN child))))))
    (, ,)
    (VP (VB do) (RB n't)
      (VP (VB have)
        (NP (NN sex))))
    (. .)))

mark(want-5, If-1)
nsubj(want-5, you-2)
aux(want-5, do-3)
neg(want-5, n't-4)
advcl(have-11, want-5)
det(child-7, a-6)
dobj(want-5, child-7)
aux(have-11, do-9)
neg(have-11, n't-10)
root(ROOT-0, have-11)
dobj(have-11, sex-12)

(ROOT
  (NP
    (NP (NN Simple))
    (PP (IN as)
      (NP (DT that)))
    (. .)))

root(ROOT-0, Simple-1)
prep_as(Simple-1, that-3)

(ROOT
  (S
    (NP (NNP BUT))
    (, ,)
    (ADVP (RB then))
    (NP
      (NP (DT the) (NN issue))
      (PP (IN of)
        (NP (NN rape))))
    (VP (VBZ comes)
      (PP (IN into)
        (NP (NN play))))
    (. .)))

nsubj(comes-8, BUT-1)
advmod(comes-8, then-3)
det(issue-5, the-4)
nsubj(comes-8, issue-5)
prep_of(issue-5, rape-7)
root(ROOT-0, comes-8)
prep_into(comes-8, play-10)

(ROOT
  (FRAG
    (PP (RB Along) (IN with)
      (NP
        (NP (DT the) (NN health))
        (PP (IN of)
          (NP
            (NP (DT the) (NN mother))
            (PP (IN at)
              (NP (NN risk)))))))
    (. .)))

advmod(with-2, Along-1)
root(ROOT-0, with-2)
det(health-4, the-3)
pobj(with-2, health-4)
det(mother-7, the-6)
prep_of(health-4, mother-7)
prep_at(mother-7, risk-9)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are)
      (NP
        (NP (CD two) (JJ major) (NNS issues))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP throw)
              (NP (DT a) (NN wrench))
              (PP (IN into)
                (NP
                  (NP (PRP$ my) (NNS thoughts))
                  (PP (IN on)
                    (NP (NN abortion))))))))))
    (. .)))

nsubj(issues-5, These-1)
cop(issues-5, are-2)
num(issues-5, two-3)
amod(issues-5, major-4)
root(ROOT-0, issues-5)
nsubj(throw-7, issues-5)
rcmod(issues-5, throw-7)
det(wrench-9, a-8)
dobj(throw-7, wrench-9)
poss(thoughts-12, my-11)
prep_into(throw-7, thoughts-12)
prep_on(thoughts-12, abortion-14)

(ROOT
  (S (CC But)
    (NP (DT those))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT the) (JJ only) (NNS reasons))
          (SBAR
            (S
              (NP (PRP I))
              (VP (VBP feel)
                (SBAR
                  (S
                    (NP (NN abortion))
                    (VP (MD would)
                      (VP (VB be)
                        (ADJP (`` ``) (JJ acceptable) ('' ''))))))))))))
    (. .)))

cc(reasons-7, But-1)
nsubj(reasons-7, those-2)
aux(reasons-7, would-3)
cop(reasons-7, be-4)
det(reasons-7, the-5)
amod(reasons-7, only-6)
root(ROOT-0, reasons-7)
nsubj(feel-9, I-8)
rcmod(reasons-7, feel-9)
nsubj(acceptable-14, abortion-10)
aux(acceptable-14, would-11)
cop(acceptable-14, be-12)
ccomp(feel-9, acceptable-14)

