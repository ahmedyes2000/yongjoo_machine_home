(ROOT
  (S
    (VP (VB Its)
      (NP (PRP me))
      (ADVP (RB again)))
    (. !)))

root(ROOT-0, Its-1)
dobj(Its-1, me-2)
advmod(Its-1, again-3)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ 's) (RB not)
          (ADJP (JJ self-aware)))))
    (NP (PRP it))
    (VP (VBZ 's) (RB not)
      (NP (DT a) (NN human))
      (ADVP (RB yet))
      (, ,)
      (SBAR
        (ADVP (DT no) (NN matter))
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ looks)
            (PP (IN like))
            ('' '')
            (SBAR
              (WHADVP
                (ADVP (RB Then))
                (WRB why))
              (S
                (VP (VBP are)
                  (S
                    (NP (PRP we))
                    (ADJP (RB so) (VBN worried)
                      (PP (IN about)
                        (NP (DT the) (NNS trees))))))))))))
    (. ?)))

mark(self-aware-5, If-1)
nsubj(self-aware-5, it-2)
cop(self-aware-5, 's-3)
neg(self-aware-5, not-4)
advcl(human-10, self-aware-5)
nsubj(human-10, it-6)
cop(human-10, 's-7)
neg(human-10, not-8)
det(human-10, a-9)
root(ROOT-0, human-10)
advmod(human-10, yet-11)
dep(matter-14, no-13)
advmod(looks-17, matter-14)
dep(looks-17, what-15)
nsubj(are-22, what-15)
nsubj(looks-17, it-16)
dep(human-10, looks-17)
prep(looks-17, like-18)
advmod(why-21, Then-20)
advmod(are-22, why-21)
advcl(looks-17, are-22)
nsubj(worried-25, we-23)
advmod(worried-25, so-24)
xcomp(are-22, worried-25)
det(trees-28, the-27)
prep_about(worried-25, trees-28)

(ROOT
  (S
    (ADVP (RB Are))
    (NP (PRP they))
    (VP (VBP are) (`` ``)
      (ADJP (RB self) (JJ aware))
      ('' ''))
    (. ?)))

advmod(aware-6, Are-1)
nsubj(aware-6, they-2)
cop(aware-6, are-3)
advmod(aware-6, self-5)
root(ROOT-0, aware-6)

(ROOT
  (S
    (ADVP (RB Actually))
    (, ,)
    (NP (JJ human) (NNS children))
    (VP (VBP are) (RB not)
      (ADJP (RB self) (JJ aware)
        (PP (IN for)
          (NP (DT some) (NN time) (NN AFTER) (NN birth)))))
    (. .)))

advmod(aware-8, Actually-1)
amod(children-4, human-3)
nsubj(aware-8, children-4)
cop(aware-8, are-5)
neg(aware-8, not-6)
advmod(aware-8, self-7)
root(ROOT-0, aware-8)
det(birth-13, some-10)
nn(birth-13, time-11)
nn(birth-13, AFTER-12)
prep_for(aware-8, birth-13)

(ROOT
  (SQ (NNP Does)
    (NP (DT that))
    (VP (VB mean)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD can)
            (VP (VB dump)
              (NP (PRP them))
              (SBAR (IN if)
                (S
                  (NP (PRP we))
                  (VP (VBP change)
                    (NP (PRP$ our) (NNS minds))))))))))
    (. ?)))

dep(mean-3, Does-1)
nsubj(mean-3, that-2)
root(ROOT-0, mean-3)
nsubj(dump-6, we-4)
aux(dump-6, can-5)
ccomp(mean-3, dump-6)
dobj(dump-6, them-7)
mark(change-10, if-8)
nsubj(change-10, we-9)
advcl(dump-6, change-10)
poss(minds-12, our-11)
dobj(change-10, minds-12)

(ROOT
  (S
    (NP (NNP Abortion))
    (VP (VBZ is)
      (ADJP (JJ illegal)
        (PP (IN after)
          (NP
            (NP (DT the) (JJ third) (NN trimester))
            (PP (IN except)
              (PP (IN in)
                (NP (JJ extreme) (NNS circumstances)))))))
      ('' '')
      (PP (RB Not)
        (ADJP (RB exactly) (JJ true))))
    (. .)))

nsubj(illegal-3, Abortion-1)
cop(illegal-3, is-2)
root(ROOT-0, illegal-3)
det(trimester-7, the-5)
amod(trimester-7, third-6)
prep_after(illegal-3, trimester-7)
prep(trimester-7, except-8)
pcomp(except-8, in-9)
amod(circumstances-11, extreme-10)
prep_in(except-8, circumstances-11)
prep(illegal-3, Not-13)
advmod(true-15, exactly-14)
pobj(Not-13, true-15)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP (NNS states))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VB forgive)
          (NP (PRP me))
          (PP (IN for)
            (S (RB not)
              (VP (VBG remembering)
                (NP
                  (NP
                    (ADVP (RB right) (RB off))
                    (DT the) (NN top))
                  (PP (IN of)
                    (NP (PRP$ my) (NN head)))
                  (SBAR
                    (WHNP (WDT which))))
                (NP
                  (NP (NNS ones))
                  (, ,)
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP allow)
                        (S
                          (NP (NN abortion))
                          (`` ``)
                          (ADJP (IN up)
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN moment))
                                (PP (IN of)
                                  (NP (NN birth))))))
                          ('' '')))))))))))
      (NP (PRP I))
      (VP (MD will)
        (VP (VB see)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (MD can)
                (VP (VB find)
                  (NP (DT that) (NN one)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, states-3)
dep(see-34, forgive-6)
dobj(forgive-6, me-7)
neg(remembering-10, not-9)
prepc_for(forgive-6, remembering-10)
advmod(off-12, right-11)
advmod(top-14, off-12)
det(top-14, the-13)
iobj(remembering-10, top-14)
poss(head-17, my-16)
prep_of(top-14, head-17)
rcmod(top-14, which-18)
dobj(remembering-10, ones-19)
nsubj(allow-22, ones-19)
rcmod(ones-19, allow-22)
dep(up-25, abortion-23)
dep(allow-22, up-25)
det(moment-28, the-27)
prep_to(up-25, moment-28)
prep_of(moment-28, birth-30)
nsubj(see-34, I-32)
aux(see-34, will-33)
conj_and(are-2, see-34)
mark(find-38, if-35)
nsubj(find-38, I-36)
aux(find-38, can-37)
advcl(see-34, find-38)
det(one-40, that-39)
dobj(find-38, one-40)

(ROOT
  (S ('' '')
    (S
      (NP
        (NP (: ...)
          (NP (DT no) (NN matter))
          (PP
            (NP (WRB how) (JJ many))
            (IN of)
            (NP
              (NP (PRP you))
              (VP
                (ADVP (RB right))
                (VBG wing)
                (NP (NNS nuts))))))
        (ADVP (JJ high)))
      (VP (VB jack)
        (NP (DT this) (NN site))))
    (CC and)
    (S
      (NP (NN serial))
      (ADVP (RB down))
      (VP (VB vote)
        (S
          (NP (PRP us))
          (NP
            (NP
              (ADJP (JJ sane)
                (CC and)
                (JJ logical))
              (NNS participants))
            (PP (IN on)
              (NP (DT the) (NN site)))))))
    (. .)))

det(matter-4, no-3)
nsubj(jack-13, matter-4)
advmod(many-6, how-5)
npadvmod(matter-4, many-6)
prep_of(matter-4, you-8)
advmod(wing-10, right-9)
partmod(you-8, wing-10)
dobj(wing-10, nuts-11)
advmod(matter-4, high-12)
root(ROOT-0, jack-13)
det(site-15, this-14)
dobj(jack-13, site-15)
nsubj(vote-19, serial-17)
advmod(vote-19, down-18)
conj_and(jack-13, vote-19)
nsubj(participants-24, us-20)
amod(participants-24, sane-21)
conj_and(sane-21, logical-23)
amod(participants-24, logical-23)
xcomp(vote-19, participants-24)
det(site-27, the-26)
prep_on(participants-24, site-27)

(ROOT
  (S ('' '')
    (NP (RB Now))
    (VP (VBZ thats)
      (ADJP (JJ disappointing)))
    (. .)))

nsubj(thats-3, Now-2)
root(ROOT-0, thats-3)
acomp(thats-3, disappointing-4)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB really))
    (VP (VBD thought)
      (PP (IN after)
        (S
          (VP (VBG reading)
            (NP
              (NP (DT some))
              (PP (IN of)
                (NP (PRP you) (NNS responses)))))))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBD were)
            (ADJP (RBR more) (JJ open)
              (CC and)
              (JJ intelligent))
            (PP (IN than)
              (NP (DT this)))))))
    (. .)))

nsubj(thought-3, I-1)
advmod(thought-3, really-2)
root(ROOT-0, thought-3)
prepc_after(thought-3, reading-5)
dobj(reading-5, some-6)
dep(responses-9, you-8)
prep_of(some-6, responses-9)
complm(open-14, that-10)
nsubj(open-14, you-11)
nsubj(intelligent-16, you-11)
cop(open-14, were-12)
advmod(open-14, more-13)
ccomp(thought-3, open-14)
ccomp(thought-3, intelligent-16)
conj_and(open-14, intelligent-16)
prep_than(open-14, this-18)

(ROOT
  (SQ (VBZ Is) (RB n't)
    (NP (PRP it))
    (ADJP (JJ cool))
    (S
      (VP (TO to)
        (VP (VB be)
          (ADJP (JJ tolerant))
          (ADVP (RB anymore)))))
    (. ?)))

cop(cool-4, Is-1)
neg(cool-4, n't-2)
nsubj(cool-4, it-3)
root(ROOT-0, cool-4)
aux(tolerant-7, to-5)
cop(tolerant-7, be-6)
dep(cool-4, tolerant-7)
advmod(tolerant-7, anymore-8)

