(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT both) (NNS numbers))
        (VP (VBP refer)
          (PP (TO to)
            (NP
              (NP (DT the) (JJ same) (NN kind))
              (PP (IN of)
                (NP (NN thing))))))))
    (, ,)
    (NP (CD 1))
    (VP (VBZ is) (RB not)
      (NP (CD 4)))
    (. .)))

mark(refer-4, If-1)
det(numbers-3, both-2)
nsubj(refer-4, numbers-3)
advcl(4-15, refer-4)
det(kind-8, the-6)
amod(kind-8, same-7)
prep_to(refer-4, kind-8)
prep_of(kind-8, thing-10)
nsubj(4-15, 1-12)
cop(4-15, is-13)
neg(4-15, not-14)
root(ROOT-0, 4-15)

(ROOT
  (S
    (NP (CD 1) (NN banana))
    (VP (VBZ is) (RB not)
      (NP (CD 4) (NNS bananas)))
    (. .)))

num(banana-2, 1-1)
nsubj(bananas-6, banana-2)
cop(bananas-6, is-3)
neg(bananas-6, not-4)
num(bananas-6, 4-5)
root(ROOT-0, bananas-6)

(ROOT
  (S
    (S
      (NP (PRP$ Your) (NNS arguments))
      (VP (VBP fail)
        (S
          (VP (TO to)
            (VP (VB debate)
              (NP (DT the) (NN proposition)))))))
    (, ,)
    (NP (CD 1))
    (VP
      (VP (VBZ is) (RB not)
        (NP (CD 4)))
      (, ,)
      (CC but)
      (VP
        (ADVP (RB yet))
        (VBZ argues)
        (NP
          (ADJP (RB distinctly) (JJ different))
          (NNS propositions))))
    (. .)))

poss(arguments-2, Your-1)
nsubj(fail-3, arguments-2)
xsubj(debate-5, arguments-2)
ccomp(4-12, fail-3)
aux(debate-5, to-4)
xcomp(fail-3, debate-5)
det(proposition-7, the-6)
dobj(debate-5, proposition-7)
nsubj(4-12, 1-9)
nsubj(argues-16, 1-9)
cop(4-12, is-10)
neg(4-12, not-11)
root(ROOT-0, 4-12)
advmod(argues-16, yet-15)
conj_but(4-12, argues-16)
advmod(different-18, distinctly-17)
amod(propositions-19, different-18)
dobj(argues-16, propositions-19)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD could)
      (VP (VB argue)
        (SBAR (IN that) (, ,)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP it))
                (VP (VBZ 's) (RB not)
                  (VP (VBN specified)))))
            (, ,)
            (NP (CD 1))
            (VP (MD could)
              (VP (VB be)
                (NP (CD 4))))))))
    (: ...)))

nsubj(argue-3, One-1)
aux(argue-3, could-2)
root(ROOT-0, argue-3)
complm(4-15, that-4)
mark(specified-10, if-6)
nsubjpass(specified-10, it-7)
auxpass(specified-10, 's-8)
neg(specified-10, not-9)
advcl(4-15, specified-10)
nsubj(4-15, 1-12)
aux(4-15, could-13)
cop(4-15, be-14)
ccomp(argue-3, 4-15)

(ROOT
  (S
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP (CD 1) (NN family))
    (VP (MD might)
      (VP (VB have)
        (NP
          (NP (RB exactly) (CD 4) (NNS people))
          (PP (IN in)
            (NP (PRP it))))))
    (. .)))

prep_for(have-7, example-2)
num(family-5, 1-4)
nsubj(have-7, family-5)
aux(have-7, might-6)
root(ROOT-0, have-7)
advmod(people-10, exactly-8)
num(people-10, 4-9)
dobj(have-7, people-10)
prep_in(people-10, it-12)

(ROOT
  (S
    (PP (IN In)
      (NP (DT this) (NN case)))
    (, ,)
    (NP
      (NP (CD 1))
      (PRN (-LRB- -LRB-)
        (NP (NN family))
        (-RRB- -RRB-)))
    (VP (VBZ is)
      (NP
        (NP (CD 4))
        (PRN (-LRB- -LRB-) (NNS people) (-RRB- -RRB-))))
    (. .)))

det(case-3, this-2)
prep_in(4-10, case-3)
nsubj(4-10, 1-5)
appos(1-5, family-7)
cop(4-10, is-9)
root(ROOT-0, 4-10)
dep(4-10, people-12)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP (DT the) (NNS numbers))
        (VP (VBP are)
          (ADVP (RB just))
          (VP (VBN shown)
            (PP (IN without) (`` ``)
              (NP (NNS units))
              ('' ''))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB usually))
      (ADJP (VBN implied)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP are)
              (ADVP (RB probably))
              (VP (VBG referring)
                (PP (TO to)
                  (NP (DT the) (JJ same) (NN thing)))))))))
    (. .)))

cc(implied-16, But-1)
mark(shown-7, if-2)
det(numbers-4, the-3)
nsubjpass(shown-7, numbers-4)
auxpass(shown-7, are-5)
advmod(shown-7, just-6)
advcl(implied-16, shown-7)
prep_without(shown-7, units-10)
nsubjpass(implied-16, it-13)
auxpass(implied-16, 's-14)
advmod(implied-16, usually-15)
root(ROOT-0, implied-16)
complm(referring-21, that-17)
nsubj(referring-21, they-18)
aux(referring-21, are-19)
advmod(referring-21, probably-20)
ccomp(implied-16, referring-21)
det(thing-25, the-23)
amod(thing-25, same-24)
prep_to(referring-21, thing-25)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (NP (CD 1))
    (VP (VBZ is) (RB not)
      (NP
        (NP (CD 4.1))
        (SBAR
          (S
            (VP (VBZ is) (RB not)
              (NP
                (NP (CD 4))
                (SBAR
                  (S
                    (VP (VBZ is)
                      (NP (DT a) (NN proposition)))))))))))
    (. .)))

advmod(4.1-6, Therefore-1)
nsubj(4.1-6, 1-3)
cop(4.1-6, is-4)
neg(4.1-6, not-5)
root(ROOT-0, 4.1-6)
cop(4-9, is-7)
neg(4-9, not-8)
rcmod(4.1-6, 4-9)
cop(proposition-12, is-10)
det(proposition-12, a-11)
rcmod(4-9, proposition-12)

(ROOT
  (S
    (NP (DT The) (NN proposition))
    (VP (VBZ is) (RB not)
      (NP (DT an) (NN accounting) (NN statement)))
    (. .)))

det(proposition-2, The-1)
nsubj(statement-7, proposition-2)
cop(statement-7, is-3)
neg(statement-7, not-4)
det(statement-7, an-5)
nn(statement-7, accounting-6)
root(ROOT-0, statement-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN proposition))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ asserts)
              (SBAR (IN that)
                (S
                  (NP (CD 1)
                    (CC and)
                    (CD 4))
                  (VP (VBP are) (RB not)
                    (ADJP (JJ predicable)
                      (PP (IN of)
                        (NP (DT each) (JJ other))))))))))))
    (. .)))

nsubj(proposition-4, It-1)
cop(proposition-4, is-2)
det(proposition-4, a-3)
root(ROOT-0, proposition-4)
nsubj(asserts-6, proposition-4)
rcmod(proposition-4, asserts-6)
complm(predicable-13, that-7)
nsubj(predicable-13, 1-8)
conj_and(1-8, 4-10)
nsubj(predicable-13, 4-10)
cop(predicable-13, are-11)
neg(predicable-13, not-12)
ccomp(asserts-6, predicable-13)
det(other-16, each-15)
prep_of(predicable-13, other-16)

(ROOT
  (S
    (PP (IN In)
      (NP (NN fact)))
    (SBAR (IN if)
      (S
        (NP (DT that) (NN proposition))
        (VP (VBZ is)
          (VP (VBG debatable)
            (ADVP (RB then))))))
    (NP
      (NP (DT the) (NN law))
      (PP (IN of)
        (NP (NNS mathematics))))
    (VP (VBZ is)
      (PP (IN without)
        (NP (DT a) (NN foundation))))
    (. .)))

prep_in(is-13, fact-2)
mark(debatable-7, if-3)
det(proposition-5, that-4)
nsubj(debatable-7, proposition-5)
aux(debatable-7, is-6)
dep(is-13, debatable-7)
advmod(debatable-7, then-8)
det(law-10, the-9)
nsubj(is-13, law-10)
prep_of(law-10, mathematics-12)
root(ROOT-0, is-13)
det(foundation-16, a-15)
prep_without(is-13, foundation-16)

