(ROOT
  (FRAG
    (SBAR (IN Because)
      (S
        (NP (PRP we))
        (VP (VBP 're) (RB not)
          (ADVP (RB really))
          (VP (RB all) (VBG working)
            (PP (IN from)
              (NP
                (NP (DT the) (JJ same) (NN definition))
                (PP (IN of)
                  (NP (`` ``) (NN life) ('' '')))))))))
    (. .)))

mark(working-7, Because-1)
nsubj(working-7, we-2)
aux(working-7, 're-3)
neg(working-7, not-4)
advmod(working-7, really-5)
advmod(working-7, all-6)
root(ROOT-0, working-7)
det(definition-11, the-9)
amod(definition-11, same-10)
prep_from(working-7, definition-11)
prep_of(definition-11, life-14)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP mean)))
    (, ,)
    (NP (PRP$ my) (NN finger))
    (VP (VBZ constitutes)
      (NP (NN life))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (VP (VBN got)
              (NP (JJ cellular) (NN activity)))))))
    (. .)))

nsubj(mean-2, I-1)
ccomp(constitutes-6, mean-2)
poss(finger-5, my-4)
nsubj(constitutes-6, finger-5)
root(ROOT-0, constitutes-6)
dobj(constitutes-6, life-7)
mark(got-11, because-8)
nsubjpass(got-11, it-9)
auxpass(got-11, 's-10)
advcl(constitutes-6, got-11)
amod(activity-13, cellular-12)
dobj(got-11, activity-13)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (NP
        (NP (NNS bacteria))
        (PP (IN in)
          (NP (PRP$ my) (NN stomach)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP constitute)
              (S
                (VP (VBG living)
                  (NP (NNS beings)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, bacteria-3)
nsubj(constitute-8, bacteria-3)
poss(stomach-6, my-5)
prep_in(bacteria-3, stomach-6)
rcmod(bacteria-3, constitute-8)
xcomp(constitute-8, living-9)
dobj(living-9, beings-10)

(ROOT
  (S
    (NP (WP What))
    (, ,)
    (ADVP (RB exactly))
    (, ,)
    (VP (VBP are)
      (NP
        (NP (PRP we))
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB preserve)))))))
    (. ?)))

nsubj(we-6, What-1)
advmod(we-6, exactly-3)
cop(we-6, are-5)
root(ROOT-0, we-6)
xsubj(preserve-9, we-6)
partmod(we-6, trying-7)
aux(preserve-9, to-8)
xcomp(trying-7, preserve-9)

