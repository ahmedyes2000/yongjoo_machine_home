(ROOT
  (S
    (S
      (PP (IN For)
        (NP (DT some) (NN reason)))
      (NP
        (NP (JJ pro-life) (NNS arguments))
        (PP (IN about)
          (NP
            (NP (DT the) (NNS rights))
            (PP (IN of)
              (NP (DT the) (JJ unborn) (NN child) (RB only))))))
      (VP (VBP seem)
        (S
          (VP (TO to)
            (VP (VB extend)
              (PP (TO to)
                (NP (PRP$ its) (NN right)))
              (PP (TO to)
                (NP (NN life))))))))
    (: ;)
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (ADVP (RB never))
        (VP (VBN heard)
          (SBAR
            (S
              (NP (NN anyone))
              (VP (VBP argue)
                (PP (IN for)
                  (NP
                    (NP (DT a) (NN child) (POS 's))
                    (NN right)
                    (S
                      (VP (TO to)
                        (VP (RB not) (VB be)
                          (VP (VBN born)
                            (ADJP (RB virtually) (VBN guaranteed)
                              (S
                                (VP (TO to)
                                  (VP (VB have)
                                    (NP
                                      (NP (DT a) (JJ short) (, ,) (JJ painful) (NN life))
                                      (PP (IN of)
                                        (NP (NN addiction))))))))))))))))))))
    (. .)))

det(reason-3, some-2)
prep_for(seem-14, reason-3)
amod(arguments-5, pro-life-4)
nsubj(seem-14, arguments-5)
xsubj(extend-16, arguments-5)
det(rights-8, the-7)
prep_about(arguments-5, rights-8)
det(child-12, the-10)
amod(child-12, unborn-11)
prep_of(rights-8, child-12)
advmod(child-12, only-13)
root(ROOT-0, seem-14)
aux(extend-16, to-15)
xcomp(seem-14, extend-16)
poss(right-19, its-18)
prep_to(extend-16, right-19)
prep_to(extend-16, life-21)
nsubj(heard-26, I-23)
aux(heard-26, 've-24)
neg(heard-26, never-25)
parataxis(seem-14, heard-26)
nsubj(argue-28, anyone-27)
ccomp(heard-26, argue-28)
det(child-31, a-30)
poss(right-33, child-31)
prep_for(argue-28, right-33)
aux(born-37, to-34)
neg(born-37, not-35)
auxpass(born-37, be-36)
infmod(right-33, born-37)
advmod(guaranteed-39, virtually-38)
acomp(born-37, guaranteed-39)
aux(have-41, to-40)
xcomp(guaranteed-39, have-41)
det(life-46, a-42)
amod(life-46, short-43)
amod(life-46, painful-45)
dobj(have-41, life-46)
prep_of(life-46, addiction-48)

