(ROOT
  (S
    (ADVP (RB Yes))
    (S (CC but)
      (NP (PRP we))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR (IN if)
            (S
              (NP (DT that) (JJ unborn) (NN life))
              (VP (MD could)
                (VP (VB become)
                  (NP (NN somebody))
                  (PP (IN like)
                    (NP (NNP Albert) (NNP Einstein) (NN etc))))))))))
    (CC but)
    (S
      (NP (PRP it))
      (ADVP (RB also))
      (VP (MD could)
        (VP (VB become)
          (NP
            (NP (DT a) (NNP Hitler))
            (, ,)
            (NP (NNP osama) (NNP bin) (NNP laden))
            (CC and)
            (NP (JJ countless) (NNS others))))))
    (. .)))

advmod(know-6, Yes-1)
nsubj(know-6, we-3)
aux(know-6, do-4)
neg(know-6, n't-5)
root(ROOT-0, know-6)
mark(somebody-13, if-7)
det(life-10, that-8)
amod(life-10, unborn-9)
nsubj(somebody-13, life-10)
aux(somebody-13, could-11)
cop(somebody-13, become-12)
advcl(know-6, somebody-13)
nn(etc-17, Albert-15)
nn(etc-17, Einstein-16)
prep_like(somebody-13, etc-17)
nsubj(Hitler-24, it-19)
advmod(Hitler-24, also-20)
aux(Hitler-24, could-21)
cop(Hitler-24, become-22)
det(Hitler-24, a-23)
conj_but(know-6, Hitler-24)
nn(laden-28, osama-26)
nn(laden-28, bin-27)
conj_but(know-6, laden-28)
conj_and(Hitler-24, laden-28)
amod(others-31, countless-30)
conj_but(know-6, others-31)
conj_and(Hitler-24, others-31)

