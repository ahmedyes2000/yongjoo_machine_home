(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP have)
        (VP (VBN tried)
          (CC and)
          (VBN tried))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD can) (RB not)
        (VP (VB come)
          (PP (TO to)
            (NP (DT the) (NN rationalization)))
          (SBAR (IN that)
            (S
              (NP (JJ many) (JJ pro) (NN abortion) (NNS supporters))
              (VP (VBP find)
                (ADJP (RB so) (JJ easy)
                  (SBAR
                    (WHNP (WDT that))
                    (PRN
                      (ADVP (RB somehow))
                      (, ,)
                      (SBAR
                        (NP (DT a) (NN thing))
                        (IN that)
                        (S (, ,)
                          (SBAR (IN if)
                            (S
                              (ADVP (RB left))
                              (ADJP (JJ un-aborted))))
                          (, ,)
                          (VP (MD will)
                            (VP (VB turn)
                              (PP (IN into)
                                (NP (DT a) (NN human))))))))
                    (S
                      (VP (VBG being)
                        (NP
                          (NP (CD 100) (NN %))
                          (PP (IN of)
                            (NP (DT the) (NN time))))))))))))))
    (. .)))

nsubj(tried-3, I-1)
nsubj(tried-5, I-1)
aux(tried-3, have-2)
root(ROOT-0, tried-3)
conj_and(tried-3, tried-5)
nsubj(come-10, I-7)
aux(come-10, can-8)
neg(come-10, not-9)
conj_and(tried-3, come-10)
det(rationalization-13, the-12)
prep_to(come-10, rationalization-13)
complm(find-19, that-14)
amod(supporters-18, many-15)
amod(supporters-18, pro-16)
nn(supporters-18, abortion-17)
nsubj(find-19, supporters-18)
ccomp(come-10, find-19)
advmod(easy-21, so-20)
acomp(find-19, easy-21)
nsubj(%-40, that-22)
dep(turn-34, somehow-23)
det(thing-26, a-25)
dep(turn-34, thing-26)
dep(turn-34, that-27)
mark(un-aborted-31, if-29)
advmod(un-aborted-31, left-30)
dep(turn-34, un-aborted-31)
aux(turn-34, will-33)
dep(%-40, turn-34)
det(human-37, a-36)
prep_into(turn-34, human-37)
cop(%-40, being-38)
num(%-40, 100-39)
dep(easy-21, %-40)
det(time-43, the-42)
prep_of(%-40, time-43)

(ROOT
  (S (-LRB- -LRB-)
    (NP
      (NP (RB not) (RB usually))
      (PRN (, ,)
        (ADVP (RB not) (RB almost))
        (ADVP (RB always))
        (, ,)))
    (VP (RB not)
      (VP (VBZ 99.9999999)))
    (: ...)))

neg(usually-3, not-2)
nsubj(99.9999999-10, usually-3)
dep(almost-6, not-5)
dep(usually-3, almost-6)
dep(almost-6, always-7)
neg(99.9999999-10, not-9)
root(ROOT-0, 99.9999999-10)

(ROOT
  (NP
    (NP (NNP %))
    (PP (IN of)
      (NP
        (NP (DT the) (NN time))
        (, ,)
        (SBAR
          (SBAR
            (S
              (S (CC but)
                (NP (NNP EVERY) (NN time))
                (-RRB- -RRB-)
                (VP (MD can)
                  (VP (VB be)
                    (VP (VBN killed)))))
              (CC and)
              (S
                (NP (PRP it))
                (ADVP (RB somehow))
                (VP (VBZ is) (RB n't)
                  (NP (NN murder))))))
          (, ,)
          (CC or)
          (SBAR (IN if)
            (S
              (NP (PRP it))
              (VP (VBZ is) (, ,)
                (SBAR (IN that)
                  (S
                    (NP (PRP it))
                    (VP (VBZ is)
                      (ADJP (JJ OK)))))
                (, ,)
                (SBAR (IN because)
                  (S
                    (NP (PRP it))
                    (VP (VBZ is) (RB n't)
                      (ADJP (JJ human)))))))))))
    (. .)))

root(ROOT-0, %-1)
det(time-4, the-3)
prep_of(%-1, time-4)
nn(time-8, EVERY-7)
nsubjpass(killed-12, time-8)
aux(killed-12, can-10)
auxpass(killed-12, be-11)
dep(time-4, killed-12)
nsubj(murder-18, it-14)
advmod(murder-18, somehow-15)
cop(murder-18, is-16)
neg(murder-18, n't-17)
dep(time-4, murder-18)
conj_and(killed-12, murder-18)
mark(is-23, if-21)
nsubj(is-23, it-22)
dep(time-4, is-23)
conj_or(killed-12, is-23)
complm(OK-28, that-25)
nsubj(OK-28, it-26)
cop(OK-28, is-27)
ccomp(is-23, OK-28)
mark(human-34, because-30)
nsubj(human-34, it-31)
cop(human-34, is-32)
neg(human-34, n't-33)
advcl(is-23, human-34)

(ROOT
  (SBARQ
    (WHADVP (WRB How))
    (SQ (MD can)
      (NP (PRP it))
      (ADVP (RB not))
      (VP (VB be)
        (NP (DT a) (JJ human) (NN being))))
    (. ?)))

advmod(being-8, How-1)
aux(being-8, can-2)
nsubj(being-8, it-3)
advmod(being-8, not-4)
cop(being-8, be-5)
det(being-8, a-6)
amod(being-8, human-7)
root(ROOT-0, being-8)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is) (RB n't)
      (NP
        (NP
          (NP (RB about) (NN religion)
            (CC or)
            (NN choice))
          (, ,)
          (CC but)
          (RB about)
          (NP
            (NP (NN science))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (DT the) (NN thing))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBZ becomes)
                      (NP
                        (NP (DT a) (NN human))
                        (, ,)
                        (PP (VBZ is)
                          (NP (DT a) (NN human))))))))
              (-RRB- -RRB-))))
        (CC and)
        (NP
          (NP (JJ basic) (NN right))
          (CC and)
          (NP (JJ wrong) (NN vs.) (NN convenience)))))
    (. .)))

nsubj(religion-5, This-1)
cop(religion-5, is-2)
neg(religion-5, n't-3)
advmod(religion-5, about-4)
root(ROOT-0, religion-5)
conj_or(religion-5, choice-7)
advmod(religion-5, about-10)
conj_but(religion-5, about-10)
dep(religion-5, science-11)
det(thing-14, the-13)
dep(science-11, thing-14)
nsubj(human-18, thing-14)
cop(human-18, becomes-16)
det(human-18, a-17)
rcmod(thing-14, human-18)
prep(human-18, is-20)
det(human-22, a-21)
dep(is-20, human-22)
amod(right-26, basic-25)
conj_and(religion-5, right-26)
amod(convenience-30, wrong-28)
nn(convenience-30, vs.-29)
conj_and(religion-5, convenience-30)
conj_and(right-26, convenience-30)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT a) (NN woman))
                (PRN (-LRB- -LRB-)
                  (S
                    (NP (PRP I))
                    (VP (VBP 'm) (RB not)))
                  (-RRB- -RRB-))
                (CC or)
                (NP
                  (NP (DT a) (JJ religious) (NN nutbag))
                  (PRN (-LRB- -LRB-)
                    (S
                      (NP (PRP I))
                      (VP (VBP 'm) (RB not)))
                    (-RRB- -RRB-)))))))
        (S
          (VP (TO to)
            (VP (VB understand)
              (NP
                (NP (DT either) (NN side))
                (PP (IN of)
                  (NP (DT this) (NN argument)))))))))
    (. .)))

nsubj(have-4, I-1)
xsubj(woman-8, I-1)
xsubj(understand-24, I-1)
aux(have-4, do-2)
neg(have-4, n't-3)
root(ROOT-0, have-4)
aux(woman-8, to-5)
cop(woman-8, be-6)
det(woman-8, a-7)
xcomp(have-4, woman-8)
nsubj('m-11, I-10)
dep(woman-8, 'm-11)
neg('m-11, not-12)
det(nutbag-17, a-15)
amod(nutbag-17, religious-16)
xcomp(have-4, nutbag-17)
conj_or(woman-8, nutbag-17)
nsubj('m-20, I-19)
dep(nutbag-17, 'm-20)
neg('m-20, not-21)
aux(understand-24, to-23)
xcomp(have-4, understand-24)
det(side-26, either-25)
dobj(understand-24, side-26)
det(argument-29, this-28)
prep_of(side-26, argument-29)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ
      (VP (VBP do)
        (SBAR (IN so)
          (S
            (NP (JJ many)
              (ADJP (RB otherwise) (JJ decent))
              (NNS people))
            (VP (VBP seem)
              (S
                (VP (TO to)
                  (VP (VB think)
                    (SBAR
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (ADJP (JJ OK)
                            (S
                              (VP (TO to)
                                (VP (VB kill)
                                  (NP (DT another) (NN human)))))))))))))))))
    (. ?)))

advmod(do-2, Why-1)
root(ROOT-0, do-2)
mark(seem-8, so-3)
amod(people-7, many-4)
advmod(decent-6, otherwise-5)
amod(people-7, decent-6)
nsubj(seem-8, people-7)
xsubj(think-10, people-7)
advcl(do-2, seem-8)
aux(think-10, to-9)
xcomp(seem-8, think-10)
nsubj(OK-13, it-11)
cop(OK-13, is-12)
ccomp(think-10, OK-13)
aux(kill-15, to-14)
xcomp(OK-13, kill-15)
det(human-17, another-16)
dobj(kill-15, human-17)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB also))
    (VP (VBZ sickens)
      (NP (PRP me))
      (SBAR (IN that)
        (S
          (NP
            (NP (JJ many))
            (PP (IN of)
              (NP
                (NP (DT the) (JJ same) (NNS folks))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP are)
                      (ADJP (JJ pro-abortion))))))))
          (VP (VBP are)
            (NP
              (NP (NN charter) (NNS members))
              (PP (IN of)
                (NP
                  (NP (NNP PETA))
                  (, ,)
                  (NP (NNP ASPCA))
                  (, ,) (FW etc.))))))))
    (. .)))

nsubj(sickens-3, It-1)
advmod(sickens-3, also-2)
root(ROOT-0, sickens-3)
dobj(sickens-3, me-4)
complm(members-16, that-5)
nsubj(members-16, many-6)
det(folks-10, the-8)
amod(folks-10, same-9)
prep_of(many-6, folks-10)
nsubj(pro-abortion-13, folks-10)
cop(pro-abortion-13, are-12)
rcmod(folks-10, pro-abortion-13)
cop(members-16, are-14)
nn(members-16, charter-15)
ccomp(sickens-3, members-16)
prep_of(members-16, PETA-18)
appos(PETA-18, ASPCA-20)
dep(PETA-18, etc.-22)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP we))
        (VP (VBD cared)
          (ADVP (NN half))
          (NP (PRP us))
          (ADVP (RB much)
            (PP (IN for)
              (NP (DT each) (JJ other))))
          (, ,)
          (SBAR (IN as)
            (S
              (NP (PRP we))
              (VP (VBD did)
                (PP (IN for)
                  (NP (NN food)
                    (CC and)
                    (NN companionship)))))))))
    (, ,)
    (NP (NN abortion))
    (VP (MD would) (RB n't)
      (VP (VB be)
        (NP (DT an) (NN issue))))
    (. .)))

mark(cared-3, If-1)
nsubj(cared-3, we-2)
advcl(issue-24, cared-3)
advmod(cared-3, half-4)
dobj(cared-3, us-5)
advmod(cared-3, much-6)
det(other-9, each-8)
prep_for(much-6, other-9)
mark(did-13, as-11)
nsubj(did-13, we-12)
advcl(cared-3, did-13)
prep_for(did-13, food-15)
prep_for(did-13, companionship-17)
conj_and(food-15, companionship-17)
nsubj(issue-24, abortion-19)
aux(issue-24, would-20)
neg(issue-24, n't-21)
cop(issue-24, be-22)
det(issue-24, an-23)
root(ROOT-0, issue-24)

