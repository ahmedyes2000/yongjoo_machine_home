(ROOT
  (S
    (NP (RB much))
    (VP
      (VP (VBP like)
        (SBAR
          (WHNP (WP what))
          (S
            (VP
              (VP (VBZ happens)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (NNS women))
                    (VP (VBP have)
                      (NP
                        (NP (NNS children))
                        (ADVP (RB now))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBP do) (RB n't)
                              (VP (VB want)
                                (NP (PRP them)))))))))))
              (, ,)
              (CC and)
              (VP (MD could) (RB n't)
                (VP (VB afford)
                  (NP (PRP them))
                  (ADVP (RB anyway))))))))
      (: ...)
      (CC but)
      (VP (VBD were)
        (ADVP (RB just)))
      (ADJP (`` ``) (JJ moral) ('' '') (RB enough)
        (S
          (VP (TO to)
            (VP (VB punish)
              (NP (PDT both)
                (NP (PRP$ our) (NN tax) (NN system))
                (CC and)
                (NP (DT the) (NN child)))
              (PP (IN by)
                (S
                  (VP
                    (VP (VBG giving)
                      (NP (NN birth)))
                    (CC and)
                    (VP (VBG keeping)
                      (NP (PRP it)))))))))))
    (. .)))

nsubj(like-2, much-1)
nsubj(were-24, much-1)
root(ROOT-0, like-2)
nsubj(happens-4, what-3)
nsubj(afford-19, what-3)
ccomp(like-2, happens-4)
advmod(have-7, when-5)
nsubj(have-7, women-6)
advcl(happens-4, have-7)
dobj(have-7, children-8)
advmod(children-8, now-9)
nsubj(want-13, who-10)
aux(want-13, do-11)
neg(want-13, n't-12)
rcmod(children-8, want-13)
dobj(want-13, them-14)
aux(afford-19, could-17)
neg(afford-19, n't-18)
ccomp(like-2, afford-19)
conj_and(happens-4, afford-19)
dobj(afford-19, them-20)
advmod(afford-19, anyway-21)
conj_but(like-2, were-24)
advmod(were-24, just-25)
acomp(like-2, moral-27)
advmod(moral-27, enough-29)
aux(punish-31, to-30)
xcomp(moral-27, punish-31)
preconj(system-35, both-32)
poss(system-35, our-33)
nn(system-35, tax-34)
dobj(punish-31, system-35)
det(child-38, the-37)
dobj(punish-31, child-38)
conj_and(system-35, child-38)
prepc_by(punish-31, giving-40)
dobj(giving-40, birth-41)
prepc_by(punish-31, keeping-43)
conj_and(giving-40, keeping-43)
dobj(keeping-43, it-44)

