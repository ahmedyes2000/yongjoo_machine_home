(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ seems)
      (PP (TO to)
        (NP (PRP me)))
      (SBAR (IN that)
        (S
          (NP
            (NP (DT both) (NNS sides))
            (PP (IN of)
              (NP (DT this) (NN topic))))
          (VP (VBP tend)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ unreasonable)))))))))
    (. .)))

nsubj(seems-2, It-1)
root(ROOT-0, seems-2)
prep_to(seems-2, me-4)
complm(tend-11, that-5)
det(sides-7, both-6)
nsubj(tend-11, sides-7)
xsubj(unreasonable-14, sides-7)
det(topic-10, this-9)
prep_of(sides-7, topic-10)
ccomp(seems-2, tend-11)
aux(unreasonable-14, to-12)
cop(unreasonable-14, be-13)
xcomp(tend-11, unreasonable-14)

(ROOT
  (S
    (NP (JJ Many) (NNS pro-lifers))
    (VP (VBP go)
      (ADVP (RB so) (RB far) (RB as))
      (S
        (VP (TO to)
          (VP (VB assert)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT the) (NN morning))
                  (PP (IN after)
                    (NP (NN pill))))
                (VP (VBZ is)
                  (NP
                    (NP (NN murder))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ is)
                          (ADJP (JJ ludicrous)))))))))))))
    (. .)))

amod(pro-lifers-2, Many-1)
nsubj(go-3, pro-lifers-2)
xsubj(assert-8, pro-lifers-2)
root(ROOT-0, go-3)
advmod(as-6, so-4)
advmod(as-6, far-5)
advmod(go-3, as-6)
aux(assert-8, to-7)
xcomp(go-3, assert-8)
complm(murder-15, that-9)
det(morning-11, the-10)
nsubj(murder-15, morning-11)
prep_after(morning-11, pill-13)
cop(murder-15, is-14)
ccomp(assert-8, murder-15)
nsubj(ludicrous-19, murder-15)
cop(ludicrous-19, is-18)
rcmod(murder-15, ludicrous-19)

(ROOT
  (S
    (PP (IN On)
      (NP (DT the) (JJ other) (NN hand)))
    (, ,)
    (NP (DT some) (JJ pro-choice) (NNS groups))
    (VP (VBP do) (RB n't)
      (VP (VB want)
        (NP (DT any) (NNS restrictions))
        (PP (IN on)
          (NP
            (NP (NN abortion))
            (, ,)
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (ADJP (RB equally) (JJ ludicrous)))))))))
    (. .)))

det(hand-4, the-2)
amod(hand-4, other-3)
prep_on(want-11, hand-4)
det(groups-8, some-6)
amod(groups-8, pro-choice-7)
nsubj(want-11, groups-8)
aux(want-11, do-9)
neg(want-11, n't-10)
root(ROOT-0, want-11)
det(restrictions-13, any-12)
dobj(want-11, restrictions-13)
prep_on(want-11, abortion-15)
nsubj(ludicrous-20, abortion-15)
cop(ludicrous-20, is-18)
advmod(ludicrous-20, equally-19)
rcmod(abortion-15, ludicrous-20)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP am)
        (VP (VBG trying)
          (S
            (VP (TO to)
              (VP (VB have)
                (NP (DT an) (JJ open) (NN mind))))))))
    (, ,) (IN so)
    (S
      (NP
        (NP (PRP$ my) (NN question))
        (PP (IN for)
          (NP (DT the) (JJ pro-choice) (NN group))))
      (VP (VBZ is) (, ,)
        (SQ (MD should)
          (NP (EX there))
          (VP (VB be)
            (NP
              (NP (DT any) (NNS restrictions))
              (PP (IN on)
                (NP
                  (NP (NN abortion))
                  (ADVP (IN at) (DT all)))))))))
    (. ?)))

nsubj(trying-3, I-1)
xsubj(have-5, I-1)
aux(trying-3, am-2)
root(ROOT-0, trying-3)
aux(have-5, to-4)
xcomp(trying-3, have-5)
det(mind-8, an-6)
amod(mind-8, open-7)
dobj(have-5, mind-8)
dep(trying-3, so-10)
poss(question-12, my-11)
nsubj(is-17, question-12)
det(group-16, the-14)
amod(group-16, pro-choice-15)
prep_for(question-12, group-16)
ccomp(trying-3, is-17)
aux(be-21, should-19)
expl(be-21, there-20)
dep(is-17, be-21)
det(restrictions-23, any-22)
dep(be-21, restrictions-23)
prep_on(restrictions-23, abortion-25)
advmod(abortion-25, at-26)
pobj(at-26, all-27)

(ROOT
  (SQ (NNP Should)
    (NP (PRP we))
    (VP
      (PRN (-LRB- -LRB-)
        (NP (DT the)
          (NX (NNS people)))
        (-RRB- -RRB-))
      (VB allow)
      (NP (DT a) (NN woman))
      (SBAR
        (PP (TO to))
        (S
          (VP (VBP decide)
            (SBAR
              (S
                (NP (PRP she))
                (VP (VBZ does) (RB n't)
                  (VP (VB want)
                    (NP (PRP$ her) (NN child))
                    (SBAR (IN as)
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (VP (VBG coming)
                            (PRT (RP down))
                            (NP
                              (NP (DT the) (NN birth) (NN canal))
                              (PP (IN at)
                                (NP (CD 9) (NNS months))))))))))))))))
    (. ?)))

dep(allow-7, Should-1)
nsubj(allow-7, we-2)
det(people-5, the-4)
dep(allow-7, people-5)
root(ROOT-0, allow-7)
det(woman-9, a-8)
dobj(allow-7, woman-9)
dep(decide-11, to-10)
dep(allow-7, decide-11)
nsubj(want-15, she-12)
aux(want-15, does-13)
neg(want-15, n't-14)
ccomp(decide-11, want-15)
poss(child-17, her-16)
dobj(want-15, child-17)
mark(coming-21, as-18)
nsubj(coming-21, it-19)
aux(coming-21, is-20)
advcl(want-15, coming-21)
prt(coming-21, down-22)
det(canal-25, the-23)
nn(canal-25, birth-24)
dobj(coming-21, canal-25)
num(months-28, 9-27)
prep_at(canal-25, months-28)

