(ROOT
  (FRAG (`` ``)
    (FRAG
      (VP (VBZ becomes)
        (ADJP (JJ human))))
    ('' '')
    (SBAR
      (WHNP (WP$ =)
        (NP (`` ``)
          (NP (JJ gets) (NNS rights))
          ('' '')
          (PRN (-LRB- -LRB-)
            (NP (NNP ?!?))
            (-RRB- -RRB-))))
      (S
        (VP (VBD Let)
          (SBAR
            (S
              (VP (VBZ 's)
                (VP (VB try)
                  (NP
                    (NP (DT an) (NN analogy))
                    (: :)
                    (SBARQ
                      (SBAR
                        (WHADVP (WRB Suppose))
                        (S
                          (NP (PRP I))
                          (VP (VBD asked))))
                      (, ,)
                      (WHADVP (WRB when))
                      (SQ (VBZ does)
                        (NP (NN life))
                        (VP (VB begin)))))
                  (: ...)
                  (PP (IN for)
                    (NP (NNS butterflies)
                      (CC and)
                      (NNS moths))))))))))
    (. ?)))

cop(human-3, becomes-2)
root(ROOT-0, human-3)
poss(rights-8, =-5)
amod(rights-8, gets-7)
nsubj(Let-13, rights-8)
nsubj(try-15, rights-8)
appos(rights-8, ?!?-11)
dep(human-3, Let-13)
aux(try-15, 's-14)
ccomp(Let-13, try-15)
det(analogy-17, an-16)
dobj(try-15, analogy-17)
advmod(asked-21, Suppose-19)
nsubj(asked-21, I-20)
dep(begin-26, asked-21)
advmod(begin-26, when-23)
aux(begin-26, does-24)
nsubj(begin-26, life-25)
dep(analogy-17, begin-26)
prep_for(try-15, butterflies-29)
prep_for(try-15, moths-31)
conj_and(butterflies-29, moths-31)

(ROOT
  (S
    (NP
      (NP
        (LST (LS 1) (-RRB- -RRB-))
        (NP (NNP Female) (NNP lays) (NNP egg2) (-RRB- -RRB-) (NNP Fertilization))
        (PP (IN of)
          (PRN
            (S
              (NP (DT the) (NN egg3) (-RRB- -RRB-) (NN Egg))
              (VP (VBZ hatches4)))
            (-RRB- -RRB-))
          (NP
            (NP (NNP Larva) (POS 's))
            (NP (JJ first))
            (NP
              (VP (VB moulting5) (-RRB- -RRB-)
                (NP (JJ Wing) (NNS disks) (NNS develop6))
                (-RRB- -RRB-))))))
      (NP (NNPS Chrysalis) (NNP forms7) (-RRB- -RRB-) (NNP Adult) (NNS emergesI)))
    (VP (MD ca) (RB n't)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB make)
                (NP (DT any) (NN sense)
                  (S
                    (VP (TO to)
                      (VP (VB argue)
                        (PP (IN for)
                          (NP
                            (NP (NN step))
                            (ADJP (# #) (CD 1))))))))))))))
    (. .)))

dep(Fertilization-7, 1-1)
nn(Fertilization-7, Female-3)
nn(Fertilization-7, lays-4)
nn(Fertilization-7, egg2-5)
nsubj(see-31, Fertilization-7)
det(Egg-12, the-9)
nn(Egg-12, egg3-10)
nsubj(hatches4-13, Egg-12)
dep(Fertilization-7, hatches4-13)
prep_of(Fertilization-7, Larva-15)
possessive(Larva-15, 's-16)
dep(Larva-15, first-17)
dep(Larva-15, moulting5-18)
amod(develop6-22, Wing-20)
nn(develop6-22, disks-21)
dobj(moulting5-18, develop6-22)
nn(emergesI-28, Chrysalis-24)
nn(emergesI-28, forms7-25)
nn(emergesI-28, Adult-27)
dep(Fertilization-7, emergesI-28)
aux(see-31, ca-29)
neg(see-31, n't-30)
root(ROOT-0, see-31)
advmod(make-35, where-32)
nsubj(make-35, it-33)
aux(make-35, would-34)
advcl(see-31, make-35)
det(sense-37, any-36)
dobj(make-35, sense-37)
aux(argue-39, to-38)
infmod(sense-37, argue-39)
prep_for(argue-39, step-41)
number(1-43, #-42)
amod(step-41, 1-43)

(ROOT
  (S
    (NP
      (NP (DT The) (NN cell))
      (SBAR
        (S
          (VP
            (VP (VBZ is)
              (VP (VBN haploid)))
            (CC and)
            (PRN (-LRB- -LRB-)
              (S
                (NP (PRP I))
                (VP (VBP believe)))
              (-RRB- -RRB-))
            (VP (MD can) (RB not)))))
      (PRN (-LRB- -LRB-)
        (PP (IN without)
          (NP (NN fertilization)))
        (-RRB- -RRB-)))
    (VP
      (VP (VBP grow))
      (CC or)
      (VP (VBZ metabolize)))
    (. .)))

det(cell-2, The-1)
nsubj(grow-16, cell-2)
nsubj(metabolize-18, cell-2)
auxpass(haploid-4, is-3)
rcmod(cell-2, haploid-4)
nsubj(believe-8, I-7)
parataxis(haploid-4, believe-8)
parataxis(can-10, believe-8)
rcmod(cell-2, can-10)
conj_and(haploid-4, can-10)
neg(can-10, not-11)
dep(cell-2, without-13)
pobj(without-13, fertilization-14)
root(ROOT-0, grow-16)
conj_or(grow-16, metabolize-18)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP have)
      (NP (DT every) (NN right)
        (S
          (VP (TO to)
            (VP (VB assess)
              (NP (NN value))))))
      (, ,)
      (PP
        (PP (IN as)
          (NP (JJ ordinary) (NNS people)))
        (, ,)
        (CC but)
        (RB not)
        (PP (IN from)
          (NP
            (NP (DT the) (NN standpoint))
            (PP (IN of) (`` ``)
              (S
                (VP (VBG doing)
                  (NP (NN science))))
              ('' ''))))))
    (. .)))

nsubj(have-2, They-1)
root(ROOT-0, have-2)
det(right-4, every-3)
dobj(have-2, right-4)
aux(assess-6, to-5)
infmod(right-4, assess-6)
dobj(assess-6, value-7)
prep(have-2, as-9)
amod(people-11, ordinary-10)
pobj(as-9, people-11)
prep(have-2, not-14)
conj_but(as-9, not-14)
neg(as-9, not-14)
dep(as-9, from-15)
det(standpoint-17, the-16)
pobj(from-15, standpoint-17)
prep(standpoint-17, of-18)
dep(of-18, doing-20)
dobj(doing-20, science-21)

(ROOT
  (S
    (NP
      (NP (NN Value)
        (CC and)
        (NN emphasis))
      (PRN (-LRB- -LRB-)
        (CC and)
        (ADVP (RB especially))
        (NP
          (NP (DT the) (NN attribution))
          (PP (IN of)
            (NP (NNS rights))))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (ADJP
        (ADJP (JJ normative))
        (CC and)
        (ADJP (RB arguably) (JJ subjective))))
    (. .)))

nsubj(normative-13, Value-1)
nsubj(subjective-16, Value-1)
conj_and(Value-1, emphasis-3)
nsubj(normative-13, emphasis-3)
dep(attribution-8, and-5)
dep(attribution-8, especially-6)
det(attribution-8, the-7)
dep(Value-1, attribution-8)
prep_of(attribution-8, rights-10)
cop(normative-13, are-12)
root(ROOT-0, normative-13)
advmod(subjective-16, arguably-15)
conj_and(normative-13, subjective-16)

(ROOT
  (S
    (NP (NNP Science))
    (VP (VBZ is)
      (VP (VBN supposed)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (NN empirical)
                (CC and)
                (NN objective)))))))
    (. .)))

nsubjpass(supposed-3, Science-1)
xsubj(empirical-6, Science-1)
auxpass(supposed-3, is-2)
root(ROOT-0, supposed-3)
aux(empirical-6, to-4)
cop(empirical-6, be-5)
xcomp(supposed-3, empirical-6)
xcomp(supposed-3, objective-8)
conj_and(empirical-6, objective-8)

(ROOT
  (S
    (NP
      (NP (DT This) (NN business))
      (PP (IN about)
        (NP
          (NP (JJ human) (NN life))
          (PP (IN with)
            (NP (DT the) (NN potential)
              (S
                (VP
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (RB fully) (JJ human))))
                  (CC or)
                  (VP (TO to)
                    (VP (VB be)
                      (NP (DT a) (JJ human) (NN being)))))))))))
    (VP (VBZ seems)
      (PP (IN from)
        (NP (PRP$ my) (NN POV)
          (S
            (VP (TO to)
              (VP (VB be)
                (ADJP
                  (ADVP (RB strictly))
                  (JJ applicable)
                  (PP (TO to)
                    (NP (CD one) (NNS species))))))))))
    (. .)))

det(business-2, This-1)
nsubj(seems-19, business-2)
amod(life-5, human-4)
prep_about(business-2, life-5)
det(potential-8, the-7)
prep_with(life-5, potential-8)
aux(human-12, to-9)
cop(human-12, be-10)
advmod(human-12, fully-11)
dep(potential-8, human-12)
aux(being-18, to-14)
cop(being-18, be-15)
det(being-18, a-16)
amod(being-18, human-17)
dep(potential-8, being-18)
conj_or(human-12, being-18)
root(ROOT-0, seems-19)
poss(POV-22, my-21)
prep_from(seems-19, POV-22)
aux(applicable-26, to-23)
cop(applicable-26, be-24)
advmod(applicable-26, strictly-25)
infmod(POV-22, applicable-26)
num(species-29, one-28)
prep_to(applicable-26, species-29)

(ROOT
  (SBAR (IN If)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (SBARQ
          (WHADVP
            (ADVP (RB so) (RB then))
            (WRB how))
          (SQ (VBZ is)
            (NP (PRP it))
            (VP (VBN justified)
              (PP (IN as)
                (S
                  (VP (VBG being)
                    (NP (NN something) (JJ other))
                    (PP (IN than)
                      (ADJP (JJ normative)
                        (CC and)
                        (JJ non-scientific))))))))
          (. ?))))))

mark(is-3, If-1)
nsubj(is-3, that-2)
root(ROOT-0, is-3)
advmod(then-5, so-4)
advmod(how-6, then-5)
advmod(justified-9, how-6)
auxpass(justified-9, is-7)
nsubjpass(justified-9, it-8)
dep(is-3, justified-9)
cop(something-12, being-11)
prepc_as(justified-9, something-12)
amod(something-12, other-13)
prep_than(something-12, normative-15)
prep_than(something-12, non-scientific-17)
conj_and(normative-15, non-scientific-17)

(ROOT
  (S
    (NP (PRP One))
    (VP (MD could)
      (VP (VB argue)
        (PP
          (PP (IN for)
            (NP
              (QP (# #) (CD ``) (CD s))
              (CD 3-7)))
          (PRN (, ,)
            (S
              (NP (PRP I))
              (VP (VBP suppose)))
            (, ,))
          (CC but)
          (PP (TO to)
            (NP (WDT what) (NN end))))))
    (. ?)))

nsubj(argue-3, One-1)
nsubj(argue-3', One-1)
aux(argue-3, could-2)
root(ROOT-0, argue-3)
conj_but(argue-3, argue-3')
number(s-7, #-5)
num(3-7-8, s-7)
prep_for(argue-3, 3-7-8)
nsubj(suppose-11, I-10)
dep(argue-3, suppose-11)
dep(end-16, what-15)
prep_to(argue-3', end-16)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP start)
          (S
            (VP (VBG talking)
              (PP (IN about)
                (S
                  (VP
                    (ADVP (RB gradually))
                    (VBG becoming)
                    (NP
                      (NP (DT a) (NN lepidopteran))
                      (PRN (-LRB- -LRB-)
                        (CC or)
                        (NP
                          (NP (`` ``) (JJ fully) (NN lepidopteran) ('' ''))
                          (CC or)
                          (NP (DT a) (`` ``) (NN lepidopteran) (NN being) ('' '')))
                        (-RRB- -RRB-)))
                    (PP (IN despite)
                      (S
                        (VP (VBG being)
                          (NP (NN lepidopteran) (NN life)))))))))))))
    (, ,) (RB then)
    (NP (PRP you))
    (ADVP (RB just))
    (VP (VBP seem)
      (ADVP (RB goofy)))
    (. .)))

mark(start-3, If-1)
nsubj(start-3, you-2)
advcl(seem-31, start-3)
xcomp(start-3, talking-4)
advmod(becoming-7, gradually-6)
prepc_about(talking-4, becoming-7)
det(lepidopteran-9, a-8)
attr(becoming-7, lepidopteran-9)
dep(lepidopteran-14, or-11)
amod(lepidopteran-14, fully-13)
dep(lepidopteran-9, lepidopteran-14)
det(being-20, a-17)
nn(being-20, lepidopteran-19)
dep(lepidopteran-9, being-20)
conj_or(lepidopteran-14, being-20)
cop(life-26, being-24)
nn(life-26, lepidopteran-25)
prepc_despite(becoming-7, life-26)
advmod(seem-31, then-28)
nsubj(seem-31, you-29)
advmod(seem-31, just-30)
root(ROOT-0, seem-31)
advmod(seem-31, goofy-32)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB argue)
        (SBAR
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (JJ ordinary) (NNS referents))
                (PP (TO to)
                  (NP (`` ``) (NN moth) ('' '')
                    (CC and)
                    (`` ``) (NN butterfly) ('' ''))))
              (VP (VBP are)
                (NP (DT the) (NNS adults)))))
          (, ,)
          (CC but)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ does) (RB n't)
                (VP (VB have)
                  (NP (NN anything))
                  (S
                    (VP (TO to)
                      (VP (VB do)
                        (PP (IN with)
                          (NP (DT the) (NN fact)))
                        (SBAR (IN that)
                          (S
                            (PP (IN from)
                              (NP
                                (NP (DT a) (JJ scientific) (NN point))
                                (PP (IN of)
                                  (NP (NN view)))))
                            (, ,)
                            (NP (DT the) (NN term))
                            (VP (MD should)
                              (VP (VB be)
                                (VP (VBN applied)
                                  (NP (RB not) (RB merely))
                                  (PP (TO to)
                                    (NP (DT the) (NNS adults))))))))))))))))))
    (. .)))

nsubj(argue-3, You-1)
aux(argue-3, can-2)
root(ROOT-0, argue-3)
complm(adults-18, that-4)
det(referents-7, the-5)
amod(referents-7, ordinary-6)
nsubj(adults-18, referents-7)
prep_to(referents-7, moth-10)
prep_to(referents-7, butterfly-14)
conj_and(moth-10, butterfly-14)
cop(adults-18, are-16)
det(adults-18, the-17)
ccomp(argue-3, adults-18)
nsubj(have-24, that-21)
aux(have-24, does-22)
neg(have-24, n't-23)
ccomp(argue-3, have-24)
conj_but(adults-18, have-24)
dobj(have-24, anything-25)
aux(do-27, to-26)
xcomp(have-24, do-27)
det(fact-30, the-29)
prep_with(do-27, fact-30)
complm(applied-43, that-31)
det(point-35, a-33)
amod(point-35, scientific-34)
prep_from(applied-43, point-35)
prep_of(point-35, view-37)
det(term-40, the-39)
nsubjpass(applied-43, term-40)
aux(applied-43, should-41)
auxpass(applied-43, be-42)
ccomp(do-27, applied-43)
neg(merely-45, not-44)
dobj(applied-43, merely-45)
det(adults-48, the-47)
prep_to(applied-43, adults-48)

(ROOT
  (S
    (ADVP (RB Maybe))
    (NP (PRP you))
    (VP
      (ADVP (RB already))
      (VBP disagree))
    (. .)))

advmod(disagree-4, Maybe-1)
nsubj(disagree-4, you-2)
advmod(disagree-4, already-3)
root(ROOT-0, disagree-4)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't))))
    (, ,)
    (ADVP (RB then))
    (VP (VB consider)
      (SBAR
        (WHNP (WDT that))
        (PRN (-LRB- -LRB-)
          (NP (NNP IMO))
          (-RRB- -RRB-))
        (S
          (NP
            (NP (DT the) (JJ only) (NN reason))
            (PP (TO to)
              (NP
                (NP (NN advocate))
                (PP (IN for)
                  (NP (NNP #))))))
          (`` ``)
          (VP (VBZ s)
            (NP
              (NP (CD 3-7))
              (PP (IN as)
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP (NN life))
                    (VP (VBZ begins)
                      (SBAR (IN for)
                        (S
                          (NP (DT a) (NN butterfly)
                            (CC or)
                            (NN moth))
                          (VP (VBZ is)
                            (SBAR (IN that)
                              (S
                                (NP (EX there))
                                (VP (VBZ is)
                                  (NP
                                    (NP (DT a) (NN concern))
                                    (PP (VBG regarding)
                                      (NP
                                        (NP (NN value)
                                          (CC or)
                                          (NN emphasis))
                                        (VP (VBG being)
                                          (VP (VBN given)
                                            (PP (TO to)
                                              (NP
                                                (NP (CD one) (NN portion))
                                                (PP (IN of)
                                                  (NP (DT the) (NN life) (NN cycle)))))))))))))))))))))))))
    (. .)))

mark(do-3, If-1)
nsubj(do-3, you-2)
advcl(consider-7, do-3)
neg(do-3, n't-4)
advmod(consider-7, then-6)
root(ROOT-0, consider-7)
dobj(3-7-21, that-8)
dep(3-7-21, IMO-10)
det(reason-14, the-12)
amod(reason-14, only-13)
nsubj(3-7-21, reason-14)
prep_to(reason-14, advocate-16)
prep_for(advocate-16, #-18)
cop(3-7-21, s-20)
ccomp(consider-7, 3-7-21)
advmod(begins-25, when-23)
nsubj(begins-25, life-24)
prepc_as(3-7-21, begins-25)
mark(is-31, for-26)
det(butterfly-28, a-27)
nsubj(is-31, butterfly-28)
conj_or(butterfly-28, moth-30)
nsubj(is-31, moth-30)
advcl(begins-25, is-31)
complm(is-34, that-32)
expl(is-34, there-33)
ccomp(is-31, is-34)
det(concern-36, a-35)
nsubj(is-34, concern-36)
prep_regarding(concern-36, value-38)
prep_regarding(concern-36, emphasis-40)
conj_or(value-38, emphasis-40)
auxpass(given-42, being-41)
partmod(value-38, given-42)
num(portion-45, one-44)
prep_to(given-42, portion-45)
det(cycle-49, the-47)
nn(cycle-49, life-48)
prep_of(portion-45, cycle-49)

(ROOT
  (S
    (PP (IN For)
      (NP (JJ obvious) (NNS reasons)))
    (NP (DT this))
    (VP (VBZ happens)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (NN question))
          (VP (VBZ is)
            (VP (VBN put)
              (PP (TO to)
                (NP
                  (NP (JJ ordinary) (NNS people))
                  (PP (IN about)
                    (NP (JJ human) (NN life))))))))))
    (. .)))

amod(reasons-3, obvious-2)
prep_for(happens-5, reasons-3)
nsubj(happens-5, this-4)
root(ROOT-0, happens-5)
advmod(put-10, when-6)
det(question-8, the-7)
nsubjpass(put-10, question-8)
auxpass(put-10, is-9)
advcl(happens-5, put-10)
amod(people-13, ordinary-12)
prep_to(put-10, people-13)
amod(life-16, human-15)
prep_about(people-13, life-16)

(ROOT
  (S
    (NP (JJ Ordinary) (NNS people))
    (VP (VBP are) (RB not)
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB limit)
              (NP (PRP themselves))
              (PP (TO to)
                (NP
                  (ADJP (RB empirically) (VBN based))
                  (NNS determinations))))))))
    (. .)))

amod(people-2, Ordinary-1)
nsubj(trying-5, people-2)
xsubj(limit-7, people-2)
aux(trying-5, are-3)
neg(trying-5, not-4)
root(ROOT-0, trying-5)
aux(limit-7, to-6)
xcomp(trying-5, limit-7)
dobj(limit-7, themselves-8)
advmod(based-11, empirically-10)
amod(determinations-12, based-11)
prep_to(limit-7, determinations-12)

(ROOT
  (S
    (NP
      (NP (NNS Scientists))
      (PRN (-LRB- -LRB-)
        (NP (NN qua) (NNS scientists))
        (-RRB- -RRB-)))
    (VP (VBP are)
      (VP (VBN required)
        (S
          (VP (TO to)
            (VP (VB do)
              (NP (RB just) (DT that)))))))
    (. .)))

nsubjpass(required-7, Scientists-1)
xsubj(do-9, Scientists-1)
nn(scientists-4, qua-3)
appos(Scientists-1, scientists-4)
auxpass(required-7, are-6)
root(ROOT-0, required-7)
aux(do-9, to-8)
xcomp(required-7, do-9)
advmod(that-11, just-10)
dobj(do-9, that-11)

