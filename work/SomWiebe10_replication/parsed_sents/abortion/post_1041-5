(ROOT
  (S
    (NP (PRP$ My) (NN point))
    (VP (VBZ is) (, ,)
      (SBAR
        (S
          (NP (PRP we))
          (VP (MD can)
            (CC and)
            (MD should)
            (VP (VB question)
              (CC and)
              (VB debate)
              (NP
                (NP (NN everything))
                (, ,)
                (NP
                  (NP (RB even) (DT the) (NNS foundations))
                  (PP (IN of)
                    (NP (NN something)))
                  (SBAR
                    (WHNP (WDT which))
                    (S
                      (VP (VBZ has)
                        (VP (VBN been)
                          (VP (VBG working)
                            (PP (IN for)
                              (NP (PRP us)))
                            (ADVP (DT all) (IN along))
                            (, ,)
                            (SBAR (IN because)
                              (S
                                (NP (PRP we))
                                (VP (MD can)
                                  (ADVP (RB never))
                                  (VP (VB know)
                                    (SBAR
                                      (WHADVP (WRB when))
                                      (S
                                        (NP (JJ old) (NNS explanations))
                                        (VP (MD might)
                                          (VP (VB fail)
                                            (NP (PRP us))))))))))))))))))))))
    (. .)))

poss(point-2, My-1)
nsubj(is-3, point-2)
root(ROOT-0, is-3)
nsubj(question-9, we-5)
nsubj(debate-11, we-5)
aux(question-9, can-6)
ccomp(is-3, should-8)
aux(question-9, should-8)
conj_and(question-9, should-8)
ccomp(is-3, question-9)
ccomp(is-3, debate-11)
conj_and(question-9, debate-11)
dobj(question-9, everything-12)
advmod(foundations-16, even-14)
det(foundations-16, the-15)
appos(everything-12, foundations-16)
nsubj(working-22, foundations-16)
prep_of(foundations-16, something-18)
aux(working-22, has-20)
aux(working-22, been-21)
rcmod(foundations-16, working-22)
prep_for(working-22, us-24)
dep(along-26, all-25)
advmod(working-22, along-26)
mark(know-32, because-28)
nsubj(know-32, we-29)
aux(know-32, can-30)
neg(know-32, never-31)
advcl(working-22, know-32)
advmod(fail-37, when-33)
amod(explanations-35, old-34)
nsubj(fail-37, explanations-35)
aux(fail-37, might-36)
advcl(know-32, fail-37)
dobj(fail-37, us-38)

