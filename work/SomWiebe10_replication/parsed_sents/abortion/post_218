(ROOT
  (S
    (NP (NN Everyone))
    (VP (VBZ knows)
      (SBAR (IN that)
        (S
          (NP (NNP God))
          (VP (VBZ has)
            (VP (VBN given)
              (NP (PRP us))
              (NP
                (NP (NN something))
                (SBAR
                  (S
                    (NP (PRP we))
                    (VP (VBP call)
                      (NP (JJ free) (NN will)))))))))))
    (. .)))

nsubj(knows-2, Everyone-1)
root(ROOT-0, knows-2)
complm(given-6, that-3)
nsubj(given-6, God-4)
aux(given-6, has-5)
ccomp(knows-2, given-6)
iobj(given-6, us-7)
dobj(given-6, something-8)
nsubj(call-10, we-9)
rcmod(something-8, call-10)
amod(will-12, free-11)
dobj(call-10, will-12)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB do)
                (SBAR
                  (WHNP (WDT whatever))
                  (S
                    (NP (PRP you))
                    (VP (VBP please))))))))))
    (, ,)
    (CC but)
    (S
      (PP (IN of)
        (NP (NN course)))
      (NP (EX there))
      (VP (VBP are)
        (ADJP (JJ consquences))))
    (. .)))

nsubj(able-3, You-1)
nsubj(are-14, You-1)
cop(able-3, are-2)
root(ROOT-0, able-3)
aux(do-5, to-4)
xcomp(able-3, do-5)
dobj(please-8, whatever-6)
nsubj(please-8, you-7)
ccomp(do-5, please-8)
prep_of(are-14, course-12)
expl(are-14, there-13)
conj_but(able-3, are-14)
acomp(are-14, consquences-15)

(ROOT
  (PP (IN From)
    (NP
      (NP (DT the) (NNP WOMB))
      (PP (TO to)
        (NP (DT the) (NNP TOMB))))))

root(ROOT-0, From-1)
det(WOMB-3, the-2)
pobj(From-1, WOMB-3)
det(TOMB-6, the-5)
prep_to(WOMB-3, TOMB-6)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (MD can) (RB not)
          (VP (VB make)
            (NP (PRP$ your) (JJ own) (NN choice))
            (PP (IN on)
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (TO to)
                    (VP (VB vote)
                      (PP (IN for)
                        (NP (RB then))))))))))))
    (NP (EX there))
    (ADVP (RB no) (RB longer))
    (VP (VBZ is)
      (ADJP (JJ free)
        (SBAR
          (S
            (VP (MD will))))))
    (. .)))

mark(make-5, If-1)
nsubj(make-5, you-2)
aux(make-5, can-3)
neg(make-5, not-4)
advcl(is-18, make-5)
poss(choice-8, your-6)
amod(choice-8, own-7)
dobj(make-5, choice-8)
nsubj(vote-12, who-10)
aux(vote-12, to-11)
prepc_on(make-5, vote-12)
prep(vote-12, for-13)
pobj(for-13, then-14)
expl(is-18, there-15)
advmod(longer-17, no-16)
advmod(is-18, longer-17)
root(ROOT-0, is-18)
acomp(is-18, free-19)
dep(free-19, will-20)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (RB only) (CD one) (NN ruler))
      (SBAR
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD must)
              (VP
                (VP (VB answer)
                  (PP (TO to)))
                (CC and)
                (VP (VB VOTE)
                  (PP (IN for)))))))
        (CC and)
        (SBAR (IN that)
          (S
            (VP (VBZ is)
              (NP (DT the) (NNP Jesus)))
            (NP (PRP himself))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(ruler-5, only-3)
num(ruler-5, one-4)
nsubj(is-2, ruler-5)
nsubj(answer-8, we-6)
nsubj(VOTE-11, we-6)
aux(answer-8, must-7)
ccomp(is-2, answer-8)
prep(answer-8, to-9)
ccomp(is-2, VOTE-11)
conj_and(answer-8, VOTE-11)
prep(VOTE-11, for-12)
complm(Jesus-17, that-14)
cop(Jesus-17, is-15)
det(Jesus-17, the-16)
ccomp(is-2, Jesus-17)
conj_and(answer-8, Jesus-17)
dep(Jesus-17, himself-18)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP have)
        (ADVP (RB always))
        (S
          (VP (VB be)
            (ADJP (JJ able)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (PRP$ our) (JJ own) (NNS decisions))))))))))
    (CC but)
    (S
      (NP (PRP$ your) (NN conscience))
      (VP (VBZ tells)
        (NP
          (NP (PRP you))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (ADJP (JJ right)
                  (CC and)
                  (JJ wrong))))))))
    (. .)))

nsubj(have-2, We-1)
root(ROOT-0, have-2)
advmod(have-2, always-3)
cop(able-5, be-4)
ccomp(have-2, able-5)
aux(make-7, to-6)
xcomp(able-5, make-7)
poss(decisions-10, our-8)
amod(decisions-10, own-9)
dobj(make-7, decisions-10)
poss(conscience-13, your-12)
nsubj(tells-14, conscience-13)
conj_but(have-2, tells-14)
dobj(tells-14, you-15)
nsubj(right-18, you-15)
nsubj(wrong-20, you-15)
cop(right-18, is-17)
rcmod(you-15, right-18)
rcmod(you-15, wrong-20)
conj_and(right-18, wrong-20)

(ROOT
  (S (RB So)
    (PP (IN in)
      (NP (NN election) (NN time)))
    (NP (EX there))
    (VP (MD will)
      (VP (VB be)
        (NP
          (NP (DT no) (JJ right) (NN man))
          (PP (IN in)
            (NP
              (NP (NNP God) (POS 's))
              (NNS eyes))))
        (SBAR (IN because)
          (S
            (NP (PRP he))
            (VP (VBZ is)
              (NP (DT the) (JJ only) (NN one)))))))
    (. .)))

advmod(man-10, So-1)
nn(time-4, election-3)
prep_in(man-10, time-4)
expl(man-10, there-5)
aux(man-10, will-6)
cop(man-10, be-7)
det(man-10, no-8)
amod(man-10, right-9)
root(ROOT-0, man-10)
poss(eyes-14, God-12)
prep_in(man-10, eyes-14)
mark(one-20, because-15)
nsubj(one-20, he-16)
cop(one-20, is-17)
det(one-20, the-18)
amod(one-20, only-19)
advcl(man-10, one-20)

(ROOT
  (S
    (NP (PRP$ Your) (NN choice))
    (VP (VBZ i)
      (NP (PRP$ your) (NN choice)))
    (. .)))

poss(choice-2, Your-1)
nsubj(i-3, choice-2)
root(ROOT-0, i-3)
poss(choice-5, your-4)
dobj(i-3, choice-5)

(ROOT
  (S
    (NP (DT The) (JJ only) (NN one))
    (NP (PRP you))
    (VP (VBP have)
      (S
        (VP (TO to)
          (VP (VB answer)
            (PP (TO to)
              (NP (PRP$ his)))
            (NP (PRP him))))))
    (. .)))

det(one-3, The-1)
amod(one-3, only-2)
nsubj(have-5, one-3)
xsubj(answer-7, one-3)
nsubj(have-5, you-4)
xsubj(answer-7, you-4)
root(ROOT-0, have-5)
aux(answer-7, to-6)
xcomp(have-5, answer-7)
prep_to(answer-7, his-9)
dobj(answer-7, him-10)

(ROOT
  (S
    (NP
      (NP (NNP Voting))
      (PP (IN for)
        (NP
          (NP (NN anyone))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ believes)
                (PP (IN in)
                  (NP (DT the) (NN death) (NN penalty)))))))))
    (VP (VBZ is)
      (ADVP (RB also))
      (ADJP (JJ wrong))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP want)
            (S
              (VP (TO to)
                (VP (VB put)
                  (NP (PRP it))
                  (PP (IN into)
                    (NP
                      (NP (NNS cases))
                      (PP (IN as)
                        (NP (DT this))))))))))))
    (. .)))

nsubj(wrong-12, Voting-1)
prep_for(Voting-1, anyone-3)
nsubj(believes-5, anyone-3)
rcmod(anyone-3, believes-5)
det(penalty-9, the-7)
nn(penalty-9, death-8)
prep_in(believes-5, penalty-9)
cop(wrong-12, is-10)
advmod(wrong-12, also-11)
root(ROOT-0, wrong-12)
mark(want-15, if-13)
nsubj(want-15, you-14)
xsubj(put-17, you-14)
advcl(wrong-12, want-15)
aux(put-17, to-16)
xcomp(want-15, put-17)
dobj(put-17, it-18)
prep_into(put-17, cases-20)
prep_as(cases-20, this-22)

(ROOT
  (S
    (PP (IN Like)
      (NP
        (NP (PRP$ my) (NN pastor))
        (VP (VBZ says))))
    (NP (NNP God))
    (VP (VBZ does) (RB n't)
      (VP (VB believe)
        (PP (IN in)
          (NP
            (NP (DT any) (NN type))
            (PP (IN of)
              (NP (NN death)))))))
    (. .)))

poss(pastor-3, my-2)
prep_like(believe-8, pastor-3)
dep(pastor-3, says-4)
nsubj(believe-8, God-5)
aux(believe-8, does-6)
neg(believe-8, n't-7)
root(ROOT-0, believe-8)
det(type-11, any-10)
prep_in(believe-8, type-11)
prep_of(type-11, death-13)

