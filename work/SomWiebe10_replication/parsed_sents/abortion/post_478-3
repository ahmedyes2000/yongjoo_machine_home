(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD may)
        (VP (VB be)
          (NP (JJ natural) (NN law)))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is) (RB n't)
        (NP
          (NP (DT a) (JJ natural) (NN law))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ states) (, ,)
                (PP (IN for)
                  (NP (NN example)))
                (, ,)
                (SBAR
                  (WHNP (WDT that))
                  (PRN (, ,)
                    (INTJ (UH oh))
                    (, ,))
                  (S
                    (NP (PRP you))
                    (VP (MD ca) (RB n't)
                      (VP (VB smoke)
                        (NP (NN marijuana))))))))))))
    (. .)))

expl(law-5, There-1)
aux(law-5, may-2)
cop(law-5, be-3)
amod(law-5, natural-4)
root(ROOT-0, law-5)
expl(is-9, there-8)
conj_but(law-5, is-9)
neg(is-9, n't-10)
det(law-13, a-11)
amod(law-13, natural-12)
nsubj(is-9, law-13)
nsubj(states-15, law-13)
rcmod(law-13, states-15)
prep_for(states-15, example-18)
dobj(smoke-27, that-20)
dep(smoke-27, oh-22)
nsubj(smoke-27, you-24)
aux(smoke-27, ca-25)
neg(smoke-27, n't-26)
ccomp(states-15, smoke-27)
dobj(smoke-27, marijuana-28)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP you))
          (VP (MD 'd)
            (VP (VB be)
              (VP (VBN hardpressed)
                (S
                  (VP (TO to)
                    (VP (VB find)
                      (NP
                        (NP (NN someone))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ believes)
                              (SBAR (IN that)
                                (S
                                  (VP (VBZ is)
                                    (NP (DT a) (JJ natural) (NN law))))))))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubjpass(hardpressed-6, you-3)
aux(hardpressed-6, 'd-4)
auxpass(hardpressed-6, be-5)
ccomp(think-2, hardpressed-6)
aux(find-8, to-7)
xcomp(hardpressed-6, find-8)
dobj(find-8, someone-9)
nsubj(believes-11, someone-9)
nsubj(law-16, someone-9)
rcmod(someone-9, believes-11)
complm(law-16, that-12)
cop(law-16, is-13)
det(law-16, a-14)
amod(law-16, natural-15)
ccomp(believes-11, law-16)

