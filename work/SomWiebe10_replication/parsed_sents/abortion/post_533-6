(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP are)
        (VP (VBN allowed)
          (S
            (VP (TO to)
              (VP (VB keep)
                (S
                  (NP (PRP you))
                  (VP (VBG dissenting)
                    (NP (NN position))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP are)
      (ADVP (RB just) (RB not))
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP
              (VP (VB lead)
                (NP (DT an) (JJ armed) (NN rebellion)))
              (CC or)
              (VP (VB attempt)
                (S
                  (VP (TO to)
                    (VP (VB undermine)
                      (NP (DT the) (NN system))
                      (SBAR (RB just) (IN because)
                        (S
                          (NP (PRP you))
                          (VP (VBD did) (RB not)
                            (VP (VB get)
                              (NP (PRP$ your) (NN way)))))))))))))))
    (. .)))

nsubjpass(allowed-3, You-1)
xsubj(keep-5, You-1)
auxpass(allowed-3, are-2)
ccomp(allowed-14, allowed-3)
aux(keep-5, to-4)
xcomp(allowed-3, keep-5)
nsubj(dissenting-7, you-6)
dep(keep-5, dissenting-7)
dobj(dissenting-7, position-8)
nsubjpass(allowed-14, you-10)
xsubj(lead-16, you-10)
auxpass(allowed-14, are-11)
advmod(not-13, just-12)
neg(allowed-14, not-13)
root(ROOT-0, allowed-14)
aux(lead-16, to-15)
xcomp(allowed-14, lead-16)
det(rebellion-19, an-17)
amod(rebellion-19, armed-18)
dobj(lead-16, rebellion-19)
xcomp(allowed-14, attempt-21)
conj_or(lead-16, attempt-21)
aux(undermine-23, to-22)
xcomp(attempt-21, undermine-23)
det(system-25, the-24)
dobj(undermine-23, system-25)
advmod(get-31, just-26)
dep(get-31, because-27)
nsubj(get-31, you-28)
aux(get-31, did-29)
neg(get-31, not-30)
dep(undermine-23, get-31)
poss(way-33, your-32)
dobj(get-31, way-33)

