(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP$ your) (NN mother))
        (VP (VBD had)
          (VP (VBN aborted)
            (NP (PRP you))
            (, ,)
            (SBAR (IN like)
              (S
                (NP (NN nature))
                (ADVP (RB probably))
                (VP (VBD did)
                  (PP (TO to)
                    (NP
                      (NP (DT a) (NN dozen))
                      (CC or)
                      (NP
                        (ADJP (RB so) (JJ other))
                        (VBN fertilized) (NNS eggs))))
                  (PP (IN before)
                    (NP (PRP you))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB have)
        (VP
          (ADVP (RB never))
          (VBN known))))
    (. .)))

mark(aborted-5, If-1)
poss(mother-3, your-2)
nsubj(aborted-5, mother-3)
aux(aborted-5, had-4)
advcl(known-27, aborted-5)
dobj(aborted-5, you-6)
mark(did-11, like-8)
nsubj(did-11, nature-9)
advmod(did-11, probably-10)
advcl(aborted-5, did-11)
det(dozen-14, a-13)
prep_to(did-11, dozen-14)
advmod(other-17, so-16)
amod(eggs-19, other-17)
amod(eggs-19, fertilized-18)
prep_to(did-11, eggs-19)
conj_or(dozen-14, eggs-19)
prep_before(did-11, you-21)
nsubj(known-27, you-23)
aux(known-27, would-24)
aux(known-27, have-25)
neg(known-27, never-26)
root(ROOT-0, known-27)

(ROOT
  (S
    (NP (DT The) (NNS states))
    (VP (VBP do) (RB n't)
      (VP (VB get)
        (S
          (VP (TO to)
            (VP (VB vote)
              (PP (IN on)
                (NP (DT every) (NN issue)))
              (, ,)
              (S
                (VP (VB get)
                  (PRT (RP over))
                  (NP (PRP it)))))))))
    (. .)))

det(states-2, The-1)
nsubj(get-5, states-2)
xsubj(vote-7, states-2)
aux(get-5, do-3)
neg(get-5, n't-4)
root(ROOT-0, get-5)
aux(vote-7, to-6)
xcomp(get-5, vote-7)
det(issue-10, every-9)
prep_on(vote-7, issue-10)
ccomp(vote-7, get-12)
prt(get-12, over-13)
dobj(get-12, it-14)

(ROOT
  (S
    (ADVP (RB Just))
    (VP (VB imagine)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (VBD left)
            (NP (NN slavery)
              (CC and)
              (NN jim) (NN crow) (NNS laws))
            (PRT (RP up))
            (PP (TO to)
              (NP (DT the) (NNS states)))))))
    (. !)))

advmod(imagine-2, Just-1)
root(ROOT-0, imagine-2)
complm(left-5, that-3)
nsubj(left-5, we-4)
ccomp(imagine-2, left-5)
nn(laws-10, slavery-6)
conj_and(slavery-6, jim-8)
nn(laws-10, jim-8)
nn(laws-10, crow-9)
dobj(left-5, laws-10)
prt(left-5, up-11)
det(states-14, the-13)
prep_to(left-5, states-14)

(ROOT
  (S (`` ``)
    (NP (NNP Life))
    (VP (VBZ is)
      (NP (NN life))
      (SBAR (IN whether)
        (S
          (NP (PRP we))
          (VP (VBP believe)
            (PP (IN in)
              (NP (PRP it)))))
        (CC or)
        (RB not)))
    (. .)))

nsubj(life-4, Life-2)
cop(life-4, is-3)
root(ROOT-0, life-4)
complm(believe-7, whether-5)
nsubj(believe-7, we-6)
ccomp(life-4, believe-7)
prep_in(believe-7, it-9)
ccomp(life-4, not-11)
conj_or(believe-7, not-11)

(ROOT
  (SBARQ (`` ``)
    (WHNP (WP what))
    (SQ (VBZ does)
      (NP (DT that))
      (VP (VB mean)))
    (. ?)))

dobj(mean-5, what-2)
aux(mean-5, does-3)
nsubj(mean-5, that-4)
root(ROOT-0, mean-5)

(ROOT
  (FRAG
    (SBAR (IN that)
      (S
        (NP
          (NP (DT no) (NN matter))
          (SBAR
            (WHNP (WP what))
            (S
              (NP (DT the) (NNS facts))
              (VP (VBP turn)
                (PRT (RP out))
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (NP (PRP you)))))))))
        (VP (MD will)
          (VP
            (VP (VB deny)
              (NP (NN reality)))
            (CC and)
            (VP (VB leave)
              (NP (PRP$ your) (NN opinion)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN guided)
                        (PP (IN by)
                          (NP (DT this) (`` ``) (NN belief) ('' '')))))))))))))
    (. ?)))

dep(deny-13, that-1)
det(matter-3, no-2)
nsubj(deny-13, matter-3)
nsubj(leave-16, matter-3)
rel(turn-7, what-4)
det(facts-6, the-5)
nsubj(turn-7, facts-6)
xsubj(you-11, facts-6)
rcmod(matter-3, turn-7)
prt(turn-7, out-8)
aux(you-11, to-9)
cop(you-11, be-10)
xcomp(turn-7, you-11)
aux(deny-13, will-12)
root(ROOT-0, deny-13)
dobj(deny-13, reality-14)
conj_and(deny-13, leave-16)
poss(opinion-18, your-17)
dobj(leave-16, opinion-18)
aux(guided-21, to-19)
auxpass(guided-21, be-20)
infmod(opinion-18, guided-21)
det(belief-25, this-23)
agent(guided-21, belief-25)

(ROOT
  (S (CC And)
    (SBAR
      (NP (WP what))
      (IN if)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (VP (VBN born)
            (PP (IN in)
              (NP
                (NP (DT a) (NN country))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBD had)
                      (NP
                        (NP (DT no) (NNS restrictions))
                        (PP (IN on)
                          (NP (NN abortion) (RB whatsoever)))))))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB believe)
        (NP (DT that) (NN way))))
    (. .)))

cc(believe-21, And-1)
dep(born-6, what-2)
dep(born-6, if-3)
nsubjpass(born-6, you-4)
auxpass(born-6, were-5)
dep(believe-21, born-6)
det(country-9, a-8)
prep_in(born-6, country-9)
nsubj(had-11, country-9)
rcmod(country-9, had-11)
det(restrictions-13, no-12)
dobj(had-11, restrictions-13)
prep_on(restrictions-13, abortion-15)
advmod(abortion-15, whatsoever-16)
advmod(believe-21, then-18)
nsubj(believe-21, you-19)
aux(believe-21, would-20)
root(ROOT-0, believe-21)
det(way-23, that-22)
dobj(believe-21, way-23)

(ROOT
  (FRAG
    (ADJP
      (WHADVP (WRB How))
      (JJ unfortunate))
    (SBAR (IN that)
      (S
        (NP
          (NP (NNS decisions))
          (PP (IN in)
            (NP (NN life))))
        (VP (VBP are)
          (VP (VBN made)
            (PP (RB because) (IN of)
              (NP
                (NP (DT the) (JJ geographical) (NN location))
                (SBAR
                  (WHADVP (WRB where))
                  (S
                    (NP (PRP one))
                    (VP (VBZ is)
                      (VP (VBN born)))))))))))
    (. .)))

advmod(unfortunate-2, How-1)
root(ROOT-0, unfortunate-2)
dep(made-8, that-3)
nsubjpass(made-8, decisions-4)
prep_in(decisions-4, life-6)
auxpass(made-8, are-7)
dep(unfortunate-2, made-8)
det(location-13, the-11)
amod(location-13, geographical-12)
prep_because_of(made-8, location-13)
advmod(born-17, where-14)
nsubjpass(born-17, one-15)
auxpass(born-17, is-16)
rcmod(location-13, born-17)

(ROOT
  (S
    (S
      (VP
        (VP (VBG Thinking))
        (, ,)
        (VP (VBG examining))
        (, ,)
        (CC and)
        (VP (VBG reflecting))))
    (VP (VBP are)
      (NP (JJ worthy) (NNS things)
        (S
          (VP (TO to)
            (VP (VB do)
              (PP (IN during)
                (NP
                  (NP (CD one) (POS 's))
                  (NN life))))))))
    (. .)))

csubj(things-9, Thinking-1)
conj_and(Thinking-1, examining-3)
csubj(things-9, examining-3)
conj_and(Thinking-1, reflecting-6)
csubj(things-9, reflecting-6)
cop(things-9, are-7)
amod(things-9, worthy-8)
root(ROOT-0, things-9)
aux(do-11, to-10)
infmod(things-9, do-11)
poss(life-15, one-13)
prep_during(do-11, life-15)

