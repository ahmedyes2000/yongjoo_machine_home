(ROOT
  (S
    (ADVP (RB However))
    (PP (TO to)
      (NP (PRP$ your) (NN point)))
    (, ,)
    (NP (PRP you))
    (VP (VBZ plain)
      (NP
        (NP (JJ old) (JJ sloppy) (NN thinker))
        (PRN
          (S
            (NP (PRP you))
            (, ,)
            (NP (PRP$ My) (NN qualification))
            (VP (VBD was))))
        (: :)
        (PP
          (PP (IN without)
            (NP (JJ proper) (NN justification)))
          (CC and)
          (PP (IN in)
            (NP
              (NP (DT this) (NN case))
              (SBAR
                (S
                  (NP (PRP it))
                  (VP (MD could)
                    (VP (VB be)
                      (VP (VBN argued)
                        (PP (IN as)
                          (NP (JJ proper) (NN justification)))))))))))))
    (. .)))

advmod(plain-7, However-1)
poss(point-4, your-3)
prep_to(plain-7, point-4)
nsubj(plain-7, you-6)
root(ROOT-0, plain-7)
amod(thinker-10, old-8)
amod(thinker-10, sloppy-9)
dobj(plain-7, thinker-10)
dobj(plain-7, thinker-10')
conj_and(thinker-10, thinker-10')
nsubj(was-15, you-11)
poss(qualification-14, My-13)
nsubj(was-15, qualification-14)
dep(thinker-10, was-15)
amod(justification-19, proper-18)
prep_without(thinker-10, justification-19)
det(case-23, this-22)
prep_in(thinker-10', case-23)
nsubjpass(argued-27, it-24)
aux(argued-27, could-25)
auxpass(argued-27, be-26)
rcmod(case-23, argued-27)
amod(justification-30, proper-29)
prep_as(argued-27, justification-30)

