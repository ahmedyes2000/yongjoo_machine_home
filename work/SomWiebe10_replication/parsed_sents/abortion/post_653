(ROOT
  (S
    (S
      (VP (VBG Hiding)
        (PP (IN behind)
          (NP
            (NP (DT the) (JJ various) (JJ religious) (NNS beliefs))
            (PP (VBG regarding)
              (NP
                (NP (DT the) (NN beginning))
                (PP (IN of)
                  (NP (NN life)))))))))
    (VP
      (ADVP (RB just))
      (VBZ evades)
      (NP (DT the) (NN question)))
    (. .)))

csubj(evades-13, Hiding-1)
det(beliefs-6, the-3)
amod(beliefs-6, various-4)
amod(beliefs-6, religious-5)
prep_behind(Hiding-1, beliefs-6)
det(beginning-9, the-8)
prep_regarding(beliefs-6, beginning-9)
prep_of(beginning-9, life-11)
advmod(evades-13, just-12)
root(ROOT-0, evades-13)
det(question-15, the-14)
dobj(evades-13, question-15)

(ROOT
  (S
    (PP (IN As)
      (NP (DT a) (JJ scientific) (NN fact)))
    (, ,)
    (PP (IN at)
      (NP (NN conception)))
    (NP (DT a) (JJ new) (JJ human) (NN life))
    (VP (VBZ is)
      (VP (VBN created)))
    (. .)))

det(fact-4, a-2)
amod(fact-4, scientific-3)
prep_as(created-13, fact-4)
prep_at(created-13, conception-7)
det(life-11, a-8)
amod(life-11, new-9)
amod(life-11, human-10)
nsubjpass(created-13, life-11)
auxpass(created-13, is-12)
root(ROOT-0, created-13)

(ROOT
  (SQ
    (VP (VB Are)
      (S
        (NP (PRP we))
        (VP (VBG going)
          (S
            (VP (TO to)
              (VP (VB permit)
                (NP (DT that) (NN life)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN destroyed))))))))))))
    (. ?)))

root(ROOT-0, Are-1)
nsubj(going-3, we-2)
xsubj(permit-5, we-2)
dep(Are-1, going-3)
aux(permit-5, to-4)
xcomp(going-3, permit-5)
det(life-7, that-6)
dobj(permit-5, life-7)
aux(destroyed-10, to-8)
auxpass(destroyed-10, be-9)
infmod(life-7, destroyed-10)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (FRAG
        (ADVP (RB so))))
    (, ,)
    (SQ (MD will)
      (NP (EX there))
      (VP (VB be)
        (NP
          (NP (DT a) (JJ certain) (NN point))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (PRP we))
              (VP (MD will)
                (ADVP (RB no) (RB longer))
                (VP (VB allow)
                  (S
                    (NP (PRP it))
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN destroyed))))))))))))
    (. ?)))

mark(so-2, If-1)
advcl(be-6, so-2)
aux(be-6, will-4)
expl(be-6, there-5)
root(ROOT-0, be-6)
det(point-9, a-7)
amod(point-9, certain-8)
dep(be-6, point-9)
advmod(allow-15, where-10)
nsubj(allow-15, we-11)
aux(allow-15, will-12)
advmod(longer-14, no-13)
advmod(allow-15, longer-14)
rcmod(point-9, allow-15)
nsubjpass(destroyed-19, it-16)
aux(destroyed-19, to-17)
auxpass(destroyed-19, be-18)
xcomp(allow-15, destroyed-19)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS answers))
      (PP (TO to)
        (NP (DT these) (NNS questions))))
    (VP (VBP determine)
      (SBAR
        (WHNP (WP what) (NN type)
          (PP (IN of)
            (NP (DT a) (NN society))))
        (S
          (NP (PRP we))
          (VP (MD will)
            (VP (VB be))))))
    (. .)))

det(answers-2, The-1)
nsubj(determine-6, answers-2)
det(questions-5, these-4)
prep_to(answers-2, questions-5)
root(ROOT-0, determine-6)
det(type-8, what-7)
dobj(be-14, type-8)
det(society-11, a-10)
prep_of(type-8, society-11)
nsubj(be-14, we-12)
aux(be-14, will-13)
ccomp(determine-6, be-14)

(ROOT
  (S
    (ADVP (RB Unfortunately))
    (, ,)
    (NP (DT the) (NNP United) (NNPS States) (NNP Supreme) (NNP Court))
    (VP
      (VP (VBD took)
        (NP (DT the) (NN issue))
        (PRT (RP away))
        (PP (IN from)
          (NP (NN society))))
      (CC and)
      (VP (VBD decided)
        (SBAR
          (S
            (NP (DT an) (JJ unborn) (NN human) (VBG being))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN terminated)
                  (PP (IN at)
                    (NP
                      (NP (DT any) (NN point))
                      (ADVP (RB prior)
                        (PP (TO to)
                          (NP (NN birth)))))))))))))
    (. .)))

advmod(took-8, Unfortunately-1)
det(Court-7, the-3)
nn(Court-7, United-4)
nn(Court-7, States-5)
nn(Court-7, Supreme-6)
nsubj(took-8, Court-7)
nsubj(decided-15, Court-7)
root(ROOT-0, took-8)
det(issue-10, the-9)
dobj(took-8, issue-10)
prep_away_from(took-8, society-13)
conj_and(took-8, decided-15)
det(human-18, an-16)
amod(human-18, unborn-17)
nsubjpass(terminated-22, human-18)
amod(human-18, being-19)
aux(terminated-22, can-20)
auxpass(terminated-22, be-21)
ccomp(decided-15, terminated-22)
det(point-25, any-24)
prep_at(terminated-22, point-25)
prep_prior_to(point-25, birth-28)

(ROOT
  (S
    (NP
      (NP (DT A) (JJ great) (NN deal))
      (PP (IN of)
        (NP
          (NP (DT the) (NN divisiveness))
          (PP (IN in)
            (NP (DT the) (NN abortion) (NN issue))))))
    (VP
      (VP (VBZ stems)
        (PP (IN from)
          (NP (DT the) (NN fact)))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT the) (NNS answers))
              (PP (TO to)
                (NP (DT those) (NNS questions))))
            (VP (VBD were)
              (VP (VBN mandated)
                (PP (IN by)
                  (NP (DT the) (NNP Court))))))))
      (, ,) (RB not)
      (VP (VBN resolved)
        (PP (IN through)
          (NP (DT the) (JJ political) (NN process)))))
    (. .)))

det(deal-3, A-1)
amod(deal-3, great-2)
nsubj(stems-11, deal-3)
det(divisiveness-6, the-5)
prep_of(deal-3, divisiveness-6)
det(issue-10, the-8)
nn(issue-10, abortion-9)
prep_in(divisiveness-6, issue-10)
root(ROOT-0, stems-11)
det(fact-14, the-13)
prep_from(stems-11, fact-14)
complm(mandated-22, that-15)
det(answers-17, the-16)
nsubjpass(mandated-22, answers-17)
det(questions-20, those-19)
prep_to(answers-17, questions-20)
auxpass(mandated-22, were-21)
ccomp(stems-11, mandated-22)
det(Court-25, the-24)
agent(mandated-22, Court-25)
neg(stems-11, not-27)
dep(stems-11, resolved-28)
det(process-32, the-30)
amod(process-32, political-31)
prep_through(resolved-28, process-32)

