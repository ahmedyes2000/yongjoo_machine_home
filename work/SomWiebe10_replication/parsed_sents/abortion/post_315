(ROOT
  (S
    (NP (PRP I))
    (VP (VBD posted)
      (ADVP (RB below)))
    (. .)))

nsubj(posted-2, I-1)
root(ROOT-0, posted-2)
advmod(posted-2, below-3)

(ROOT
  (S
    (ADVP (RB Perhaps))
    (NP (PRP you))
    (VP (VBD did) (RB n't)
      (VP (VB read)
        (NP (PRP it))))
    (. .)))

advmod(read-5, Perhaps-1)
nsubj(read-5, you-2)
aux(read-5, did-3)
neg(read-5, n't-4)
root(ROOT-0, read-5)
dobj(read-5, it-6)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can) (RB not)
      (VP (VB govern)
        (SBAR
          (S
            (NP (DT another))
            (VP (VBZ 's)
              (NP
                (NP (NN body) (NNS parts))
                (PP (VBN based)
                  (PP (IN on)
                    (NP (JJ emotional) (NNS appeals))))))))))
    (. .)))

nsubj(govern-4, We-1)
aux(govern-4, can-2)
neg(govern-4, not-3)
root(ROOT-0, govern-4)
nsubj(parts-8, another-5)
cop(parts-8, 's-6)
nn(parts-8, body-7)
ccomp(govern-4, parts-8)
prepc_based_on(parts-8, on-10)
amod(appeals-12, emotional-11)
pobj(parts-8, appeals-12)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD can) (RB not)
      (VP (VB govern)
        (NP
          (NP (PRP$ your) (NN kidney))
          (CC or)
          (NP (PRP$ my) (NN bone) (NN marrow)))
        (PP (VBN based)
          (PP (IN on)
            (NP
              (NP (JJ emotional) (NNS appeals))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBG doing)
                    (SBAR (IN so)
                      (S
                        (VP (MD will)
                          (VP (VB save)
                            (NP (NNS lives))))))))))))))
    (. .)))

nsubj(govern-4, We-1)
aux(govern-4, can-2)
neg(govern-4, not-3)
root(ROOT-0, govern-4)
poss(kidney-6, your-5)
dobj(govern-4, kidney-6)
poss(marrow-10, my-8)
nn(marrow-10, bone-9)
dobj(govern-4, marrow-10)
conj_or(kidney-6, marrow-10)
prepc_based_on(govern-4, on-12)
amod(appeals-14, emotional-13)
pobj(govern-4, appeals-14)
nsubj(doing-16, appeals-14)
nsubj(save-19, appeals-14)
rcmod(appeals-14, doing-16)
mark(save-19, so-17)
aux(save-19, will-18)
advcl(doing-16, save-19)
dobj(save-19, lives-20)

(ROOT
  (S
    (NP (PRP$ Our) (NNS bodies))
    (VP (VBP are)
      (NP (PRP ours))
      (ADVP (RB completely)))
    (. .)))

poss(bodies-2, Our-1)
nsubj(ours-4, bodies-2)
cop(ours-4, are-3)
root(ROOT-0, ours-4)
advmod(ours-4, completely-5)

(ROOT
  (S
    (NP
      (NP (DT A) (NN fetus))
      (, ,)
      (NP
        (NP (NN zygote))
        (, ,)
        (NP (NN baby))
        (, ,) (FW etc.)))
    (VP (VBZ depends)
      (PP (IN upon)
        (NP
          (NP (DT another) (NN human))
          (PP (IN for)
            (NP (NN life))))))
    (. .)))

det(fetus-2, A-1)
nsubj(depends-9, fetus-2)
appos(fetus-2, zygote-4)
appos(zygote-4, baby-6)
dep(zygote-4, etc.-8)
root(ROOT-0, depends-9)
det(human-12, another-11)
prep_upon(depends-9, human-12)
prep_for(human-12, life-14)

(ROOT
  (S
    (NP (DT That) (NN woman))
    (VP (VBZ has)
      (ADVP (RB right))
      (S
        (VP (TO to)
          (VP (VB govern)
            (NP (PRP$ her) (NN body))))))
    (. .)))

det(woman-2, That-1)
nsubj(has-3, woman-2)
xsubj(govern-6, woman-2)
root(ROOT-0, has-3)
advmod(has-3, right-4)
aux(govern-6, to-5)
xcomp(has-3, govern-6)
poss(body-8, her-7)
dobj(govern-6, body-8)

(ROOT
  (S
    (NP (DT The) (NN issue))
    (VP (VBZ is) (RB not)
      (SBAR
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NN life))
            (VP (VBZ begins))))
        (, ,)
        (CC or)
        (SBAR (IN if)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT a) (NN life))
                (PP (IN at)
                  (NP (DT all)))))))))
    (. .)))

det(issue-2, The-1)
nsubj(is-3, issue-2)
root(ROOT-0, is-3)
neg(is-3, not-4)
advmod(begins-7, when-5)
nsubj(begins-7, life-6)
dep(is-3, begins-7)
mark(is-12, if-10)
expl(is-12, there-11)
dep(is-3, is-12)
conj_or(begins-7, is-12)
det(life-14, a-13)
nsubj(is-12, life-14)
prep_at(life-14, all-16)

(ROOT
  (S
    (NP (DT The) (NN issue))
    (VP (VBZ has)
      (S
        (VP (TO to)
          (VP (VB do)
            (PP (IN with)
              (NP
                (NP (NN right))
                (PP (IN of)
                  (NP (DT the) (NN individual))))))))
      (S
        (VP (TO to)
          (VP (VB retain)
            (NP (DT the) (NN right))
            (PP (TO to)
              (NP (PRP$ her) (NN body)))))))
    (. .)))

det(issue-2, The-1)
nsubj(has-3, issue-2)
xsubj(do-5, issue-2)
xsubj(retain-12, issue-2)
root(ROOT-0, has-3)
aux(do-5, to-4)
xcomp(has-3, do-5)
prep_with(do-5, right-7)
det(individual-10, the-9)
prep_of(right-7, individual-10)
aux(retain-12, to-11)
xcomp(has-3, retain-12)
det(right-14, the-13)
dobj(retain-12, right-14)
poss(body-17, her-16)
prep_to(retain-12, body-17)

(ROOT
  (S
    (SBAR
      (ADVP (RB Simply))
      (IN because)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT another) (NN life))
            (VP (VBN involved))))))
    (VP (VBZ does) (RB n't)
      (VP (VB resolve)
        (NP (DT this) (NN issue))))
    (. .)))

advmod(is-4, Simply-1)
dep(is-4, because-2)
expl(is-4, there-3)
advcl(resolve-10, is-4)
csubj(resolve-10, is-4)
det(life-6, another-5)
nsubj(is-4, life-6)
partmod(life-6, involved-7)
aux(resolve-10, does-8)
neg(resolve-10, n't-9)
root(ROOT-0, resolve-10)
det(issue-12, this-11)
dobj(resolve-10, issue-12)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP (PDT such) (DT a) (NN poverty))
          (SBAR (IN that)
            (S
              (NP (DT a) (NN child))
              (VP (MD must)
                (VP (VB die)
                  (SBAR (RB so) (IN that)
                    (S
                      (NP (PRP you))
                      (VP (MD may)
                        (VP (VB live)
                          (SBAR (IN as)
                            (S
                              (NP (PRP you))
                              (VP (VBP wish)))))))))))))))
    (, ,)
    (NP (PRP I))
    (VP (MD would)
      (ADVP (RB just))
      (VP (VB be)
        (ADJP (JJ curious)
          (S
            (VP (TO to)
              (VP (VB know)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBD child)
                      (SBAR
                        (S
                          (NP (PRP you))
                          (VP (VBD donated)
                            (NP (PRP$ your) (NN kidney))
                            (PP (TO to))))))))))))))
    (. .)))

mark(poverty-6, If-1)
nsubj(poverty-6, it-2)
cop(poverty-6, is-3)
predet(poverty-6, such-4)
det(poverty-6, a-5)
advcl(curious-25, poverty-6)
complm(die-11, that-7)
det(child-9, a-8)
nsubj(die-11, child-9)
aux(die-11, must-10)
ccomp(poverty-6, die-11)
advmod(live-16, so-12)
dep(live-16, that-13)
nsubj(live-16, you-14)
aux(live-16, may-15)
advcl(die-11, live-16)
ccomp(die-11, live-16)
mark(wish-19, as-17)
nsubj(wish-19, you-18)
advcl(live-16, wish-19)
nsubj(curious-25, I-21)
aux(curious-25, would-22)
advmod(curious-25, just-23)
cop(curious-25, be-24)
root(ROOT-0, curious-25)
aux(know-27, to-26)
xcomp(curious-25, know-27)
nsubj(child-29, which-28)
ccomp(know-27, child-29)
nsubj(donated-31, you-30)
ccomp(child-29, donated-31)
poss(kidney-33, your-32)
dobj(donated-31, kidney-33)
prep(donated-31, to-34)

(ROOT
  (FRAG (CC Or)
    (SBAR
      (WHNP
        (WHADJP (WRB how) (JJ many))
        (NNS times))
      (S
        (NP (PRP you))
        (VP (VBP 've)
          (VP (VBN given)
            (NP (NN bone) (NN marrow))
            (SBAR (RB so) (IN that)
              (S
                (NP (DT a) (NN child))
                (VP (MD may)
                  (VP (VB live)
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (MD would)
                          (ADVP (RB otherwise))
                          (VP (VB die)))))))))))))
    (. .)))

dep(given-7, Or-1)
advmod(many-3, how-2)
amod(times-4, many-3)
dobj(given-7, times-4)
nsubj(given-7, you-5)
aux(given-7, 've-6)
root(ROOT-0, given-7)
nn(marrow-9, bone-8)
dobj(given-7, marrow-9)
advmod(live-15, so-10)
dep(live-15, that-11)
det(child-13, a-12)
nsubj(live-15, child-13)
aux(live-15, may-14)
advcl(given-7, live-15)
nsubj(die-19, who-16)
aux(die-19, would-17)
advmod(die-19, otherwise-18)
ccomp(live-15, die-19)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN government))
              (VP (VBZ has)
                (NP (DT the) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB decide)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (TO to)
                              (VP (VB do)
                                (PP (IN with)
                                  (NP (PRP$ your) (NN body) (NNS parts)))))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN forced)
          (PP (IN into)
            (S
              (VP (VBG giving)
                (ADVP (RB away)
                  (NP (DT a) (NN kidney)))
                (SBAR (RB so) (IN that)
                  (S
                    (NP (DT another))
                    (VP (MD might)
                      (VP (VB live)))))))))))
    (. .)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(forced-23, say-3)
complm(has-7, that-4)
det(government-6, the-5)
nsubj(has-7, government-6)
ccomp(say-3, has-7)
det(right-9, the-8)
dobj(has-7, right-9)
aux(decide-11, to-10)
infmod(right-9, decide-11)
nsubj(do-14, what-12)
aux(do-14, to-13)
ccomp(decide-11, do-14)
xcomp(decide-11, do-14)
poss(parts-18, your-16)
nn(parts-18, body-17)
prep_with(do-14, parts-18)
nsubjpass(forced-23, you-20)
aux(forced-23, would-21)
auxpass(forced-23, be-22)
root(ROOT-0, forced-23)
prepc_into(forced-23, giving-25)
advmod(giving-25, away-26)
det(kidney-28, a-27)
pobj(away-26, kidney-28)
advmod(live-33, so-29)
dep(live-33, that-30)
nsubj(live-33, another-31)
aux(live-33, might-32)
advcl(giving-25, live-33)
ccomp(giving-25, live-33)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR
            (S
              (NP (DT the) (NN government))
              (VP (VBZ has)
                (NP (DT a) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB decide)
                        (S
                          (NP (WDT what))
                          (NP (PRP you)))
                        (PP (IN with)
                          (NP (PRP$ your) (NN body) (NNS parts)))))))))))))
    (NP (PRP you))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN forced)
          (S
            (VP (TO to)
              (VP (VB endure)
                (NP
                  (NP (DT the) (JJ painful) (NN process))
                  (PP (IN of)
                    (NP (NN bone) (NN marrow) (NN transplant))))))))))
    (. .)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(forced-20, say-3)
det(government-5, the-4)
nsubj(has-6, government-5)
ccomp(say-3, has-6)
det(right-8, a-7)
dobj(has-6, right-8)
aux(decide-10, to-9)
infmod(right-8, decide-10)
nsubj(you-12, what-11)
xcomp(decide-10, you-12)
poss(parts-16, your-14)
nn(parts-16, body-15)
prep_with(decide-10, parts-16)
nsubjpass(forced-20, you-17)
aux(forced-20, would-18)
auxpass(forced-20, be-19)
root(ROOT-0, forced-20)
aux(endure-22, to-21)
xcomp(forced-20, endure-22)
det(process-25, the-23)
amod(process-25, painful-24)
dobj(endure-22, process-25)
nn(transplant-29, bone-27)
nn(transplant-29, marrow-28)
prep_of(process-25, transplant-29)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADVP (RB indeed))
          (NP (DT a) (JJ sad) (NN fact))
          (SBAR (IN that)
            (S
              (NP (NN abortion))
              (VP (VBZ occurs)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADVP (RB only))
      (ADJP (JJ logical)
        (S
          (VP (TO to)
            (VP (VB say)
              (SBAR
                (S
                  (NP (PRP we))
                  (VP (MD can) (RB not)
                    (VP (VB make)
                      (NP
                        (NP (DT the) (NN choice))
                        (PP (IN for)
                          (NP
                            (NP (DT a) (NN woman))
                            (PP (IN in)
                              (NP (NNP regards))))))
                      (PP (TO to)
                        (NP (PRP$ her) (NN womb))))))))))))
    (. .)))

mark(fact-7, While-1)
nsubj(fact-7, it-2)
cop(fact-7, is-3)
advmod(fact-7, indeed-4)
det(fact-7, a-5)
amod(fact-7, sad-6)
advcl(logical-15, fact-7)
complm(occurs-10, that-8)
nsubj(occurs-10, abortion-9)
ccomp(fact-7, occurs-10)
nsubj(logical-15, it-12)
cop(logical-15, 's-13)
advmod(logical-15, only-14)
root(ROOT-0, logical-15)
aux(say-17, to-16)
xcomp(logical-15, say-17)
nsubj(make-21, we-18)
aux(make-21, can-19)
neg(make-21, not-20)
ccomp(say-17, make-21)
det(choice-23, the-22)
dobj(make-21, choice-23)
det(woman-26, a-25)
prep_for(choice-23, woman-26)
prep_in(woman-26, regards-28)
poss(womb-31, her-30)
prep_to(make-21, womb-31)

