(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP find)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJ acceptable)
                  (S
                    (VP (TO to)
                      (VP (VB force)
                        (NP (DT a) (NN woman)
                          (S
                            (VP (TO to)
                              (VP (VB give)
                                (PRT (RP up))
                                (NP (PRP$ her) (NN freedom))
                                (PP (IN for)
                                  (ADVP (RB however)))
                                (SBAR (RB long) (IN because)
                                  (S
                                    (NP (PRP it))
                                    (VP (VBZ means)
                                      (SBAR (IN that)
                                        (S
                                          (NP (CD one) (NN life))
                                          (VP (MD might)
                                            (VP (VB live))))))))))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (ADJP (JJ acceptable)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR
                  (S
                    (NP
                      (NP (CD one) (NN person) (POS 's))
                      (NN life))
                    (VP (MD can) (RB not)
                      (VP (VB be)
                        (ADJP (JJ free))))))))))))
    (: ...)))

cc(find-31, And-1)
mark(find-4, if-2)
nsubj(find-4, you-3)
advcl(find-31, find-4)
complm(acceptable-8, that-5)
nsubj(acceptable-8, it-6)
cop(acceptable-8, is-7)
ccomp(find-4, acceptable-8)
aux(force-10, to-9)
xcomp(acceptable-8, force-10)
det(woman-12, a-11)
dobj(force-10, woman-12)
aux(give-14, to-13)
infmod(woman-12, give-14)
prt(give-14, up-15)
poss(freedom-17, her-16)
dobj(give-14, freedom-17)
prep(give-14, for-18)
pcomp(for-18, however-19)
advmod(means-23, long-20)
dep(means-23, because-21)
nsubj(means-23, it-22)
dep(give-14, means-23)
complm(live-28, that-24)
num(life-26, one-25)
nsubj(live-28, life-26)
aux(live-28, might-27)
ccomp(means-23, live-28)
nsubj(find-31, you-30)
root(ROOT-0, find-31)
nsubj(acceptable-33, it-32)
xcomp(find-31, acceptable-33)
aux(say-35, to-34)
xcomp(acceptable-33, say-35)
num(person-37, one-36)
poss(life-39, person-37)
nsubj(free-43, life-39)
aux(free-43, can-40)
neg(free-43, not-41)
cop(free-43, be-42)
ccomp(say-35, free-43)

