(ROOT
  (S
    (NP
      (NP (DT The) (RB only) (JJ real) (NN advocacy))
      (PP (IN for)
        (NP (JJ pro-life))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN thought))
        (PP (IN of)
          (S
            (VP (VBG killing)
              (NP (DT a) (NN child)))))))
    (. .)))

det(advocacy-4, The-1)
advmod(advocacy-4, only-2)
amod(advocacy-4, real-3)
nsubj(thought-9, advocacy-4)
prep_for(advocacy-4, pro-life-6)
cop(thought-9, is-7)
det(thought-9, the-8)
root(ROOT-0, thought-9)
prepc_of(thought-9, killing-11)
det(child-13, a-12)
dobj(killing-11, child-13)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (VP (VBG living)
          (NP
            (NP (NN tissue))
            (SBAR
              (S
                (NP (PRP I))
                (VP (MD 'll)
                  (VP (VB give)
                    (NP (PRP you))
                    (NP (DT that))))))))))
    (, ,)
    (CC but)
    (SQ (MD would)
      (NP (PRP you))
      (VP
        (VP (VB have)
          (NP
            (NP (DT a) (NN C-section))
            (PP (IN at)
              (NP (CD 2) (NNS months)))))
        (CC and)
        (VP (VB call)
          (NP (PRP it))
          (NP (DT a) (NN birth))))
      (. ?))))

nsubj(living-3, It-1)
aux(living-3, 's-2)
root(ROOT-0, living-3)
dobj(living-3, tissue-4)
nsubj(give-7, I-5)
aux(give-7, 'll-6)
rcmod(tissue-4, give-7)
iobj(give-7, you-8)
dobj(give-7, that-9)
aux(have-14, would-12)
nsubj(have-14, you-13)
nsubj(call-21, you-13)
conj_but(living-3, have-14)
det(C-section-16, a-15)
dobj(have-14, C-section-16)
num(months-19, 2-18)
prep_at(C-section-16, months-19)
conj_but(living-3, call-21)
conj_and(have-14, call-21)
iobj(call-21, it-22)
det(birth-24, a-23)
dobj(call-21, birth-24)

(ROOT
  (S
    (ADJP (VB No.))
    (. .)))

root(ROOT-0, No.-1)

(ROOT
  (SBARQ
    (SBAR (IN Because)
      (S
        (NP (PRP it))
        (VP (VBZ 's) (RB not)
          (NP (RB truly) (DT a))
          (S
            (VP (VBG being)
              (ADVP (RB yet)))))))
    (, ,)
    (SQ (VBZ is)
      (NP (PRP it)))
    (. ?)))

mark(a-6, Because-1)
nsubj(a-6, it-2)
cop(a-6, 's-3)
neg(a-6, not-4)
advmod(a-6, truly-5)
advcl(is-10, a-6)
xcomp(a-6, being-7)
advmod(being-7, yet-8)
root(ROOT-0, is-10)
nsubj(is-10, it-11)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (UCP
            (VP (VBG going)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (DT the) (NN argument))
                    (SBAR (IN that)
                      (S
                        (S
                          (VP (VBG stopping)
                            (NP (DT a) (NN child))
                            (PP (IN from)
                              (NP (VBG existing)))))
                        (VP (VBZ is)
                          (NP
                            (NP (NN murder))
                            (, ,)
                            (SBAR
                              (WHPP (IN in)
                                (WHNP (WDT that)))
                              (S
                                (NP
                                  (NP (NN case))
                                  (, ,)
                                  (NP
                                    (NP (NN sex))
                                    (PP (IN without)
                                      (NP (NN procreation)))))
                                (VP (VBZ is)
                                  (NP (NN murder)))))))))))))
            (, ,)
            (CC or)
            (PP (IN for)
              (NP (DT that) (NN matter)))))))
    (, ,)
    (S (RB not)
      (VP (VBG deciding)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT a) (NN child))
                (PP (IN at)
                  (NP (DT any) (NN point)))))))))
    (VP (VBZ is)
      (NP (NN murder)))
    (. .)))

cc(murder-44, And-1)
mark('re-4, if-2)
nsubj('re-4, you-3)
dep(murder-44, 're-4)
dep('re-4, going-5)
aux(make-7, to-6)
xcomp(going-5, make-7)
det(argument-9, the-8)
dobj(make-7, argument-9)
complm(murder-17, that-10)
csubj(murder-17, stopping-11)
det(child-13, a-12)
dobj(stopping-11, child-13)
prep_from(stopping-11, existing-15)
cop(murder-17, is-16)
ccomp(make-7, murder-17)
rel(murder-27, that-20)
nsubj(murder-27, case-21)
appos(case-21, sex-23)
prep_without(sex-23, procreation-25)
cop(murder-27, is-26)
rcmod(murder-17, murder-27)
dep('re-4, for-30)
conj_or(going-5, for-30)
det(matter-32, that-31)
pobj(for-30, matter-32)
neg(deciding-35, not-34)
csubj(murder-44, deciding-35)
aux(have-37, to-36)
xcomp(deciding-35, have-37)
det(child-39, a-38)
dobj(have-37, child-39)
det(point-42, any-41)
prep_at(child-39, point-42)
cop(murder-44, is-43)
root(ROOT-0, murder-44)

(ROOT
  (S
    (NP (DT The) (JJ only) (NN event) (NN horizon))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (NN life))
          (PP (IN at)
            (NP (NN conception))))))
    (. .)))

det(horizon-4, The-1)
amod(horizon-4, only-2)
nn(horizon-4, event-3)
nsubj(life-7, horizon-4)
aux(life-7, would-5)
cop(life-7, be-6)
root(ROOT-0, life-7)
prep_at(life-7, conception-9)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (NP (RB purely) (DT a) (JJ religious) (NN claim)))
    (. .)))

nsubj(claim-6, That-1)
cop(claim-6, 's-2)
advmod(claim-6, purely-3)
det(claim-6, a-4)
amod(claim-6, religious-5)
root(ROOT-0, claim-6)

(ROOT
  (S
    (NP (DT A) (JJ conscious) (NN human) (VBG being))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN contained)
          (PP (IN within)
            (NP (CD 2) (NNS cells))))))
    (. .)))

det(human-3, A-1)
amod(human-3, conscious-2)
nsubjpass(contained-8, human-3)
amod(human-3, being-4)
aux(contained-8, can-5)
neg(contained-8, not-6)
auxpass(contained-8, be-7)
root(ROOT-0, contained-8)
num(cells-11, 2-10)
prep_within(contained-8, cells-11)

