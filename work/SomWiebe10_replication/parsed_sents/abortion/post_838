(ROOT
  (S (`` ``)
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB carry)
          (NP (DT the) (JJ old) (NN man))
          (SBAR (IN while)
            (S
              (NP (DT the) (JJ old) (NN man))
              (VP (VBZ carries)
                (NP (DT the) (NN baby))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (MD 'll)
        (VP (VB die)
          (S
            (VP (VBG trying)
              (S
                (VP (VBG saving)
                  (NP (PRP them))
                  (NP (DT both)))))))))
    (. .)))

nsubj(carry-4, I-2)
aux(carry-4, would-3)
root(ROOT-0, carry-4)
det(man-7, the-5)
amod(man-7, old-6)
dobj(carry-4, man-7)
mark(carries-12, while-8)
det(man-11, the-9)
amod(man-11, old-10)
nsubj(carries-12, man-11)
advcl(carry-4, carries-12)
det(baby-14, the-13)
dobj(carries-12, baby-14)
nsubj(die-18, I-16)
aux(die-18, 'll-17)
conj_and(carry-4, die-18)
xcomp(die-18, trying-19)
xcomp(trying-19, saving-20)
iobj(saving-20, them-21)
dobj(saving-20, both-22)

(ROOT
  (S ('' '')
    (S
      (NP (PRP I))
      (VP (VBD did) (RB n't)
        (VP (VB say)
          (NP (NN baby)))))
    (, ,)
    (NP (PRP I))
    (VP (VBD said)
      (NP (NN child)))
    (. .)))

nsubj(say-5, I-2)
aux(say-5, did-3)
neg(say-5, n't-4)
ccomp(said-9, say-5)
dobj(say-5, baby-6)
nsubj(said-9, I-8)
root(ROOT-0, said-9)
dobj(said-9, child-10)

(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (JJS most))
        (PP (IN of)
          (NP (DT the) (NN pregnancy)))))
    (NP (DT the) (NN fetus))
    (VP (VBZ is) (RB not)
      (ADJP (RB even) (JJ sentient)))
    (. .)))

prep_for(sentient-11, most-2)
det(pregnancy-5, the-4)
prep_of(most-2, pregnancy-5)
det(fetus-7, the-6)
nsubj(sentient-11, fetus-7)
cop(sentient-11, is-8)
neg(sentient-11, not-9)
advmod(sentient-11, even-10)
root(ROOT-0, sentient-11)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB not)
      (ADVP (RB even))
      (VP (VB know)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ exists))))))
    (. .)))

nsubj(know-5, It-1)
aux(know-5, does-2)
neg(know-5, not-3)
advmod(know-5, even-4)
root(ROOT-0, know-5)
nsubj(exists-7, it-6)
ccomp(know-5, exists-7)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does) (RB not)
      (ADVP (RB even))
      (VP (VB have)
        (NP
          (NP (DT the) (NN capacity))
          (PP (IN for)
            (NP (NN suffering))))))
    (. .)))

nsubj(have-5, It-1)
aux(have-5, does-2)
neg(have-5, not-3)
advmod(have-5, even-4)
root(ROOT-0, have-5)
det(capacity-7, the-6)
dobj(have-5, capacity-7)
prep_for(capacity-7, suffering-9)

(ROOT
  (S
    (NP
      (NP (DT The) (NN mother) (POS 's))
      (NN right)
      (S
        (VP (TO to)
          (VP (VB choose)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ happens)
                  (PP (TO to)
                    (NP (PRP$ her) (NN body))))))))))
    (VP (VBZ is)
      (ADJP (RBR more) (JJ important)
        (PP (IN than)
          (NP
            (NP (DT the) (NN life))
            (PP (IN of)
              (NP
                (NP (DT a) (NN ball))
                (PP (IN of)
                  (NP
                    (NP (NNS cells))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ is) (RB not)
                          (ADJP (RB even) (JJ conscious)))))))))))))
    (. .)))

det(mother-2, The-1)
poss(right-4, mother-2)
nsubj(important-14, right-4)
aux(choose-6, to-5)
infmod(right-4, choose-6)
nsubj(happens-8, what-7)
ccomp(choose-6, happens-8)
poss(body-11, her-10)
prep_to(happens-8, body-11)
cop(important-14, is-12)
advmod(important-14, more-13)
root(ROOT-0, important-14)
det(life-17, the-16)
prep_than(important-14, life-17)
det(ball-20, a-19)
prep_of(life-17, ball-20)
prep_of(ball-20, cells-22)
nsubj(conscious-27, cells-22)
cop(conscious-27, is-24)
neg(conscious-27, not-25)
advmod(conscious-27, even-26)
rcmod(cells-22, conscious-27)

(ROOT
  (S
    (S (CC And)
      (NP (PRP I))
      (VP (VBD stipulated)
        (SBAR (IN that)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (ADVP (DT no) (NN way)
                (SBAR (IN that)
                  (S
                    (NP (PRP you))
                    (VP (MD can)
                      (VP (VB save)
                        (NP (DT both))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD can)
      (ADVP (RB only))
      (VP (VB save)
        (NP
          (NP (CD one))
          (CC or)
          (NP (DT neither)))))
    (. .)))

cc(stipulated-3, And-1)
nsubj(stipulated-3, I-2)
ccomp(save-18, stipulated-3)
complm(is-6, that-4)
expl(is-6, there-5)
ccomp(stipulated-3, is-6)
dep(way-8, no-7)
advmod(is-6, way-8)
complm(save-12, that-9)
nsubj(save-12, you-10)
aux(save-12, can-11)
ccomp(way-8, save-12)
dobj(save-12, both-13)
nsubj(save-18, you-15)
aux(save-18, can-16)
advmod(save-18, only-17)
root(ROOT-0, save-18)
dobj(save-18, one-19)
dobj(save-18, neither-21)
conj_or(one-19, neither-21)

(ROOT
  (S
    (S (`` ``)
      (NP (PRP you))
      (VP (VBP know)
        (NP (WP what)))
      (, ,))
    (: ...)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP
          (NP (DT that) (NN kind))
          (PP (IN of)
            (NP
              (NP (NN line))
              (PP (IN of)
                (NP (NN thinking)))))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBD brought)
                (PP (IN about)
                  (NP (DT the)
                    (NP (DT the) (NN Holocaust))
                    (CC and)
                    (NP
                      (NP (DT the) (NN killing))
                      (PP (IN of)
                        (NP
                          (NP
                            (NP (DT the)
                              (ADJP (JJ lame) (, ,) (JJ blind)
                                (CC and)
                                (JJ old)))
                            (PP (IN in)
                              (NP (NNP Uganda))))
                          (CC and)
                          (NP
                            (NP (JJ similar) (JJ shameful) (NNS acts))
                            (PP (IN around)
                              (NP
                                (NP (DT the) (NN world))
                                (PP (IN in)
                                  (NP (JJ different) (NNS countries)))))))))))
                (PP (IN at)
                  (NP
                    (NP (JJ different) (NNS times))
                    (PP (IN in)
                      (NP (NN history)))))
                (SBAR
                  (WHADVP (WRB when))
                  (S
                    (NP
                      (NP (DT all) (NN kind))
                      (PP (IN of)
                        (NP (JJ lunatic) (NNS tyrants))))
                    (VP (VBD arose))))))))))
    (. .)))

nsubj(know-3, you-2)
root(ROOT-0, know-3)
dobj(know-3, what-4)
nsubj(kind-10, it-7)
cop(kind-10, 's-8)
det(kind-10, that-9)
parataxis(know-3, kind-10)
nsubj(brought-16, kind-10)
prep_of(kind-10, line-12)
prep_of(line-12, thinking-14)
rcmod(kind-10, brought-16)
dep(Holocaust-20, the-18)
det(Holocaust-20, the-19)
prep_about(brought-16, Holocaust-20)
det(killing-23, the-22)
prep_about(brought-16, killing-23)
conj_and(Holocaust-20, killing-23)
det(lame-26, the-25)
prep_of(killing-23, lame-26)
prep_of(killing-23, blind-28)
conj_and(lame-26, blind-28)
prep_of(killing-23, old-30)
conj_and(lame-26, old-30)
prep_in(lame-26, Uganda-32)
amod(acts-36, similar-34)
amod(acts-36, shameful-35)
prep_of(killing-23, acts-36)
conj_and(lame-26, acts-36)
det(world-39, the-38)
prep_around(acts-36, world-39)
amod(countries-42, different-41)
prep_in(world-39, countries-42)
amod(times-45, different-44)
prep_at(brought-16, times-45)
prep_in(times-45, history-47)
advmod(arose-54, when-48)
det(kind-50, all-49)
nsubj(arose-54, kind-50)
amod(tyrants-53, lunatic-52)
prep_of(kind-50, tyrants-53)
advcl(brought-16, arose-54)

(ROOT
  (S ('' '')
    (NP (DT No) (PRP it))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT that) (NN line))
        (PP (IN of)
          (NP
            (NP (DT that) (NN thinking))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBZ leads)
                  (PP (TO to)
                    (NP (NNS genocides))))))))))
    (. .)))

det(it-3, No-2)
nsubj(line-7, it-3)
cop(line-7, is-4)
neg(line-7, not-5)
det(line-7, that-6)
root(ROOT-0, line-7)
det(thinking-10, that-9)
prep_of(line-7, thinking-10)
nsubj(leads-12, thinking-10)
rcmod(thinking-10, leads-12)
prep_to(leads-12, genocides-14)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP am) (RB not)
      (VP (VBG saying)
        (NP
          (NP (DT the) (JJ old) (NN man))
          (SBAR
            (S
              (VP (VBZ does) (RB not)
                (VP (VB deserve)
                  (S
                    (VP (TO to)
                      (VP (VB live)))))))))))
    (. .)))

nsubj(saying-4, I-1)
aux(saying-4, am-2)
neg(saying-4, not-3)
root(ROOT-0, saying-4)
det(man-7, the-5)
amod(man-7, old-6)
dobj(saying-4, man-7)
aux(deserve-10, does-8)
neg(deserve-10, not-9)
rcmod(man-7, deserve-10)
aux(live-12, to-11)
xcomp(deserve-10, live-12)

(ROOT
  (S (CC But)
    (SBAR (IN if)
      (S
        (NP
          (NP (RB only) (CD one))
          (PP (IN of)
            (NP (PRP$ their) (NNS lives))))
        (VP (MD can)
          (VP (VB be)
            (VP (VBN saved))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJR better))
      (S
        (VP (TO to)
          (VP (VB choose)
            (NP (DT the) (NN child))))))
    (. .)))

cc(better-14, But-1)
mark(saved-10, if-2)
advmod(one-4, only-3)
nsubjpass(saved-10, one-4)
poss(lives-7, their-6)
prep_of(one-4, lives-7)
aux(saved-10, can-8)
auxpass(saved-10, be-9)
advcl(better-14, saved-10)
nsubj(better-14, it-12)
xsubj(choose-16, it-12)
cop(better-14, is-13)
root(ROOT-0, better-14)
aux(choose-16, to-15)
xcomp(better-14, choose-16)
det(child-18, the-17)
dobj(choose-16, child-18)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (SBAR (RB just) (IN like)
        (S
          (SBAR (IN if)
            (S
              (S
                (NP (PRP you))
                (VP (VBD did) (RB not)
                  (VP (VB have)
                    (NP (JJ enough) (NN food)
                      (S
                        (VP (TO to)
                          (VP (VB feed)
                            (NP (PRP$ your) (CD two) (NNS kids)))))))))
              (CC and)
              (S
                (S
                  (NP
                    (NP (CD one))
                    (PP (IN of)
                      (NP (PRP them))))
                  (VP (VBD was)
                    (ADJP
                      (ADJP (JJ sickly))
                      (CC and)
                      (ADJP (RBS most) (JJ likely)))
                    (S
                      (VP (VBG going)
                        (S
                          (VP (TO to)
                            (VP (VB die))))))))
                (CC and)
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP (DT no) (NN way)))))))
          (NP (PRP you))
          (VP (MD can)
            (VP (VB get)
              (NP (JJR more) (NN food)))))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
advmod(get-36, just-3)
dep(get-36, like-4)
mark(have-9, if-5)
nsubj(have-9, you-6)
aux(have-9, did-7)
neg(have-9, not-8)
advcl(get-36, have-9)
amod(food-11, enough-10)
dobj(have-9, food-11)
aux(feed-13, to-12)
infmod(food-11, feed-13)
poss(kids-16, your-14)
num(kids-16, two-15)
dobj(feed-13, kids-16)
nsubj(sickly-22, one-18)
nsubj(likely-25, one-18)
prep_of(one-18, them-20)
cop(sickly-22, was-21)
conj_and(have-9, sickly-22)
advcl(get-36, sickly-22)
advmod(likely-25, most-24)
conj_and(have-9, likely-25)
conj_and(sickly-22, likely-25)
xcomp(sickly-22, going-26)
aux(die-28, to-27)
xcomp(going-26, die-28)
expl(is-31, there-30)
conj_and(have-9, is-31)
conj_and(sickly-22, is-31)
det(way-33, no-32)
nsubj(is-31, way-33)
nsubj(get-36, you-34)
aux(get-36, can-35)
ccomp('s-2, get-36)
amod(food-38, more-37)
dobj(get-36, food-38)

(ROOT
  (S
    (NP
      (NP (DT A) (NN ball))
      (PP (IN of)
        (NP (NNS cells))))
    (VP (VBZ is) (RB not)
      (NP (DT a) (NN human))
      (ADVP (IN at) (DT all)))
    (. .)))

det(ball-2, A-1)
nsubj(human-8, ball-2)
prep_of(ball-2, cells-4)
cop(human-8, is-5)
neg(human-8, not-6)
det(human-8, a-7)
root(ROOT-0, human-8)
advmod(human-8, at-9)
pobj(at-9, all-10)

(ROOT
  (S
    (NP (DT A) (NN rabbit))
    (VP (MD would)
      (VP (VB be)
        (ADJP
          (ADJP (JJR closer))
          (PP (TO to)
            (NP
              (NP (DT a) (NN human))
              (PP (IN than)
                (NP (DT a) (NN fetus))))))))
    (. .)))

det(rabbit-2, A-1)
nsubj(closer-5, rabbit-2)
aux(closer-5, would-3)
cop(closer-5, be-4)
root(ROOT-0, closer-5)
det(human-8, a-7)
prep_to(closer-5, human-8)
det(fetus-11, a-10)
prep_than(human-8, fetus-11)

