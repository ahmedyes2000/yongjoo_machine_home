(ROOT
  (SBARQ
    (SBAR (IN if)
      (S
        (NP (NN reality))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN foundation))
            (PP (IN of)
              (NP (NN logic)))))))
    (, ,)
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (NN logic))
      (VP (VB be)
        (VP (VBN used)
          (S
            (VP (TO to)
              (VP (VB discover)
                (NP (NN reality))))))))
    (. ?)))

mark(foundation-5, if-1)
nsubj(foundation-5, reality-2)
cop(foundation-5, is-3)
det(foundation-5, the-4)
advcl(used-13, foundation-5)
prep_of(foundation-5, logic-7)
advmod(used-13, how-9)
aux(used-13, can-10)
nsubjpass(used-13, logic-11)
auxpass(used-13, be-12)
root(ROOT-0, used-13)
aux(discover-15, to-14)
xcomp(used-13, discover-15)
dobj(discover-15, reality-16)

(ROOT
  (SBARQ (CC or)
    (SQ (VBP are)
      (NP (PRP you))
      (ADJP (JJ omniscient)))
    (. ?)))

cc(omniscient-4, or-1)
cop(omniscient-4, are-2)
nsubj(omniscient-4, you-3)
root(ROOT-0, omniscient-4)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD would)
      (VP (VB appear)
        (SBAR (IN that)
          (S
            (NP (PRP you))
            (VP (VBP are) (RB n't)
              (ADJP
                (ADJP (RB as) (RB philosophically) (JJ inclined))
                (SBAR (IN as)
                  (S
                    (NP (PRP you))
                    (VP (MD would)
                      (VP (VB have)
                        (S
                          (NP (PRP me))
                          (VP (VB believe)))))))))))))
    (. .)))

nsubj(appear-3, It-1)
aux(appear-3, would-2)
root(ROOT-0, appear-3)
complm(inclined-10, that-4)
nsubj(inclined-10, you-5)
cop(inclined-10, are-6)
neg(inclined-10, n't-7)
advmod(inclined-10, as-8)
advmod(inclined-10, philosophically-9)
ccomp(appear-3, inclined-10)
mark(have-14, as-11)
nsubj(have-14, you-12)
aux(have-14, would-13)
ccomp(inclined-10, have-14)
nsubj(believe-16, me-15)
ccomp(have-14, believe-16)

(ROOT
  (S
    (ADVP (RB Now))
    (NP (PRP I))
    (VP (VBZ tire)
      (PP (IN of)
        (NP (DT this))))
    (. .)))

advmod(tire-3, Now-1)
nsubj(tire-3, I-2)
root(ROOT-0, tire-3)
prep_of(tire-3, this-5)

(ROOT
  (S
    (S
      (S
        (INTJ (VB Please))
        (VP (VB note)))
      (, ,)
      (NP (PRP I))
      (VP (VBD did) (RB not)
        (VP (VB contradict)
          (NP (PRP myself))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (NP (PRP you))
              (VP (MD would)
                (VP (VB realize)
                  (SBAR (IN if)
                    (S
                      (NP (PRP you))
                      (VP (MD 'd)
                        (VP (VB read)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (PRP I))
                              (VP (VBD said)))))))))))))))
    (: ;)
    (S
      (NP (EX there))
      (VP (VBD was)
        (ADJP (JJ afterall)
          (NP
            (NP (DT a) (NN criterion)
              (CC and)
              (NN formula))
            (PP (IN for)
              (NP (JJ such) (NN occaision)))))))
    (. .)))

dep(note-2, Please-1)
ccomp(contradict-7, note-2)
nsubj(contradict-7, I-4)
aux(contradict-7, did-5)
neg(contradict-7, not-6)
root(ROOT-0, contradict-7)
dobj(contradict-7, myself-8)
dobj(realize-13, which-10)
nsubj(realize-13, you-11)
aux(realize-13, would-12)
dep(contradict-7, realize-13)
mark(read-17, if-14)
nsubj(read-17, you-15)
aux(read-17, 'd-16)
advcl(realize-13, read-17)
dobj(said-20, what-18)
nsubj(said-20, I-19)
ccomp(read-17, said-20)
expl(was-23, there-22)
parataxis(contradict-7, was-23)
acomp(was-23, afterall-24)
det(criterion-26, a-25)
dep(afterall-24, criterion-26)
dep(afterall-24, formula-28)
conj_and(criterion-26, formula-28)
amod(occaision-31, such-30)
prep_for(criterion-26, occaision-31)

(ROOT
  (S
    (S
      (NP (NNS Identities))
      (VP (VBP are) (RB n't)
        (ADJP (JJ axiomatic))))
    (: ;)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP$ your) (NN geometry) (NN teacher))
            (VP (VBZ makes)
              (SBAR
                (S
                  (NP (PRP you))
                  (VP (VBP do)
                    (NP (NNS proofs))))))))))
    (. .)))

nsubj(axiomatic-4, Identities-1)
cop(axiomatic-4, are-2)
neg(axiomatic-4, n't-3)
root(ROOT-0, axiomatic-4)
nsubj('s-7, that-6)
parataxis(axiomatic-4, 's-7)
advmod(makes-12, why-8)
poss(teacher-11, your-9)
nn(teacher-11, geometry-10)
nsubj(makes-12, teacher-11)
advcl('s-7, makes-12)
nsubj(do-14, you-13)
ccomp(makes-12, do-14)
dobj(do-14, proofs-15)

(ROOT
  (FRAG
    (SBAR (IN Since)
      (S
        (NP (PRP you))
        (VP (VBD asked)
          (NP (DT the) (NN guy))
          (PP (IN with)
            (NP
              (NP (DT the) (NN dictionary))
              (: ;)
              (NP (NN epistemology))
              (: :)
              (NP
                (NP (DT the) (NN study))
                (CC or)
                (NP
                  (NP (DT a) (NN theory))
                  (PP (IN of)
                    (NP (DT the) (NN nature)))))
              (CC and)
              (NP
                (NP (NNS grounds))
                (PP (IN of)
                  (NP (NN knowledge))))))
          (PP (RB especially) (IN with)
            (NP
              (NP (NN reference))
              (PP (TO to)
                (NP (PRP$ its) (NNS limits)
                  (CC and)
                  (NN valididy))))))))
    (. .)))

mark(asked-3, Since-1)
nsubj(asked-3, you-2)
root(ROOT-0, asked-3)
det(guy-5, the-4)
dobj(asked-3, guy-5)
det(dictionary-8, the-7)
prep_with(asked-3, dictionary-8)
prep_with(asked-3, epistemology-10)
conj_and(dictionary-8, epistemology-10)
det(study-13, the-12)
prep_with(asked-3, study-13)
conj_and(dictionary-8, study-13)
det(theory-16, a-15)
conj_and(dictionary-8, theory-16)
conj_or(study-13, theory-16)
det(nature-19, the-18)
prep_of(theory-16, nature-19)
prep_with(asked-3, grounds-21)
conj_and(dictionary-8, grounds-21)
prep_of(grounds-21, knowledge-23)
advmod(asked-3, especially-24)
prep_with(asked-3, reference-26)
poss(limits-29, its-28)
prep_to(reference-26, limits-29)
prep_to(reference-26, valididy-31)
conj_and(limits-29, valididy-31)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ means)
        (NP (NN nothing))
        (PRN (-LRB- -LRB-)
          (ADVP (RB almost))
          (-RRB- -RRB-))
        (PP (IN in)
          (NP (DT this) (NN debate)))))
    (: ;)
    (S
      (SBAR (IN for) (IN if)
        (S
          (NP (NN knowledge))
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN criterion))
              (PP (IN for)
                (NP (JJ human) (NN identification)))))))
      (, ,)
      (ADVP (RB then))
      (NP (DT the) (NN comatose))
      (VP (VBZ cease)
        (S
          (VP (TO to)
            (VP (VB be)
              (ADJP (JJ human))
              (, ,)
              (SBAR (IN while)
                (S
                  (NP
                    (NP (DT the) (NN nature))
                    (PP (IN of)
                      (NP (DT a) (JJ human) (NN fetus))))
                  (VP (VBZ is)
                    (ADVP (RB still))
                    (ADJP (JJ dubious))))))))))
    (: ;)
    (CC and)
    (S
      (NP (DT any) (JJ trainable) (NN animal))
      (VP (VBZ achieves)
        (NP (JJ legal) (NN equality))
        (PP (IN with)
          (NP (NN man)))))
    (. .)))

nsubj(means-2, It-1)
root(ROOT-0, means-2)
dobj(means-2, nothing-3)
dep(means-2, almost-5)
det(debate-9, this-8)
prep_in(means-2, debate-9)
mark(criterion-16, for-11)
dep(criterion-16, if-12)
nsubj(criterion-16, knowledge-13)
cop(criterion-16, is-14)
det(criterion-16, the-15)
advcl(cease-24, criterion-16)
amod(identification-19, human-18)
prep_for(criterion-16, identification-19)
advmod(cease-24, then-21)
det(comatose-23, the-22)
nsubj(cease-24, comatose-23)
xsubj(human-27, comatose-23)
conj_and(means-2, cease-24)
parataxis(means-2, cease-24)
aux(human-27, to-25)
cop(human-27, be-26)
xcomp(cease-24, human-27)
mark(dubious-38, while-29)
det(nature-31, the-30)
nsubj(dubious-38, nature-31)
det(fetus-35, a-33)
amod(fetus-35, human-34)
prep_of(nature-31, fetus-35)
cop(dubious-38, is-36)
advmod(dubious-38, still-37)
advcl(human-27, dubious-38)
det(animal-43, any-41)
amod(animal-43, trainable-42)
nsubj(achieves-44, animal-43)
conj_and(means-2, achieves-44)
amod(equality-46, legal-45)
dobj(achieves-44, equality-46)
prep_with(achieves-44, man-48)

(ROOT
  (S
    (S
      (S
        (ADVP (RB Obviously))
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB know)
            (SBAR
              (WHNP (WP what))
              (S
                (NP (DT an) (NN axiom))
                (VP (VBZ is))))
            (, ,)
            (ADVP (RB therefore)))))
      (: ;)
      (S
        (NP (DT an) (NN axiom))
        (VP (VBZ is)
          (SBAR (IN that)
            (S
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ self-evident)))))
              (, ,)
              (ADVP (RB simply))
              (VP (VBD put)))))))
    (: ;)
    (S
      (ADVP (RB authoritatively))
      (VP (VBN defined)
        (PP (IN as)
          (NP
            (NP (`` ``) (DT an) (JJ established) (NN rule)
              (CC or)
              (NN principle))
            (PP (IN of)
              (NP (JJ self-evident) (NN truth)))))))
    (. .)))

advmod(know-5, Obviously-1)
nsubj(know-5, you-2)
aux(know-5, do-3)
neg(know-5, n't-4)
root(ROOT-0, know-5)
dobj(is-9, what-6)
det(axiom-8, an-7)
nsubj(is-9, axiom-8)
ccomp(know-5, is-9)
advmod(know-5, therefore-11)
det(axiom-14, an-13)
nsubj(is-15, axiom-14)
parataxis(know-5, is-15)
complm(put-22, that-16)
nsubj(self-evident-19, which-17)
cop(self-evident-19, is-18)
dep(put-22, self-evident-19)
advmod(put-22, simply-21)
ccomp(is-15, put-22)
advmod(defined-25, authoritatively-24)
parataxis(know-5, defined-25)
det(rule-30, an-28)
amod(rule-30, established-29)
prep_as(defined-25, rule-30)
prep_as(defined-25, principle-32)
conj_or(rule-30, principle-32)
amod(truth-35, self-evident-34)
prep_of(rule-30, truth-35)

(ROOT
  (S
    (PP (IN By)
      (NP (DT the) (NN way)))
    (, ,)
    (SBAR (IN since)
      (S
        (NP (PRP it))
        (VP (VBZ 's)
          (PP (IN in)
            (NP
              (NP (JJ high) (NN school) (NN biology))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (PRP one))
                  (ADVP (RB definitely))
                  (VP (VBZ learns)
                    (NP
                      (NP
                        (NP (RB about) (DT the) (JJ basic) (NNS properties))
                        (PP (IN of)
                          (NP (DT the) (NN genome))))
                      (, ,)
                      (NP
                        (NP (DT the) (NN process))
                        (PP (IN of)
                          (NP (NN reproduction))))
                      (, ,)
                      (CC and)
                      (NP
                        (NP (DT the) (JJ fundamental) (NN unit))
                        (PP (IN of)
                          (NP (NN life)))))))))))))
    (: ;)
    (NP (PRP I))
    (VP (VBP am)
      (ADJP (JJ correct)
        (PP (IN in)
          (S
            (VP (VBG asserting)
              (SBAR (IN that)
                (S
                  (NP (DT any) (JJ attentive) (NN high-schooler))
                  (VP (VBZ knows)
                    (SBAR (IN that)
                      (S
                        (NP (JJ human) (NN life))
                        (VP (VBZ begins)
                          (PP (IN at)
                            (NP (NN conception))))))))))))))
    (. .)))

det(way-3, the-2)
prep_by(correct-38, way-3)
mark('s-7, since-5)
nsubj('s-7, it-6)
dep(correct-38, 's-7)
amod(biology-11, high-9)
nn(biology-11, school-10)
prep_in('s-7, biology-11)
advmod(learns-15, where-12)
nsubj(learns-15, one-13)
advmod(learns-15, definitely-14)
rcmod(biology-11, learns-15)
advmod(properties-19, about-16)
det(properties-19, the-17)
amod(properties-19, basic-18)
dobj(learns-15, properties-19)
det(genome-22, the-21)
prep_of(properties-19, genome-22)
det(process-25, the-24)
dobj(learns-15, process-25)
conj_and(properties-19, process-25)
prep_of(process-25, reproduction-27)
det(unit-32, the-30)
amod(unit-32, fundamental-31)
dobj(learns-15, unit-32)
conj_and(properties-19, unit-32)
prep_of(unit-32, life-34)
nsubj(correct-38, I-36)
cop(correct-38, am-37)
root(ROOT-0, correct-38)
prepc_in(correct-38, asserting-40)
complm(knows-45, that-41)
det(high-schooler-44, any-42)
amod(high-schooler-44, attentive-43)
nsubj(knows-45, high-schooler-44)
ccomp(asserting-40, knows-45)
complm(begins-49, that-46)
amod(life-48, human-47)
nsubj(begins-49, life-48)
ccomp(knows-45, begins-49)
prep_at(begins-49, conception-51)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (ADVP (RB never))
      (VBD said)
      (SBAR (IN that)
        (S
          (NP (NNS existents))
          (VP (VBP do) (RB n't)
            (VP (VB possess)
              (NP (NN identity))
              (PRN (-LRB- -LRB-)
                (S
                  (ADVP (RB maybe))
                  (NP (PRP I))
                  (VP (MD should)
                    (VP (VB stick)
                      (NP (NNS words))
                      (PP (IN in)
                        (NP (PRP$ your) (NN mouth))))))
                (. ?) (-RRB- -RRB-)))))))))

nsubj(said-3, I-1)
neg(said-3, never-2)
root(ROOT-0, said-3)
complm(possess-8, that-4)
nsubj(possess-8, existents-5)
aux(possess-8, do-6)
neg(possess-8, n't-7)
ccomp(said-3, possess-8)
dobj(possess-8, identity-9)
advmod(stick-14, maybe-11)
nsubj(stick-14, I-12)
aux(stick-14, should-13)
parataxis(possess-8, stick-14)
dobj(stick-14, words-15)
poss(mouth-18, your-17)
prep_in(stick-14, mouth-18)

(ROOT
  (S (: ;)
    (S
      (NP (PRP I))
      (ADVP (RB simply))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP do) (RB n't)
              (VP (VB identify)
                (NP (PRP themselves))))))))
    (: ;)
    (S
      (NP (RB hence) (DT the) (NN need))
      (PP (IN for)
        (NP (NNS proofs))))
    (. .)))

nsubj(said-4, I-2)
advmod(said-4, simply-3)
root(ROOT-0, said-4)
complm(identify-9, that-5)
nsubj(identify-9, they-6)
aux(identify-9, do-7)
neg(identify-9, n't-8)
ccomp(said-4, identify-9)
dobj(identify-9, themselves-10)
advmod(need-14, hence-12)
det(need-14, the-13)
parataxis(said-4, need-14)
dep(need-14, for-15)
pobj(for-15, proofs-16)

(ROOT
  (S
    (S
      (ADVP (RB Now))
      (S
        (VP (TO to)
          (VP (VB answer)
            (NP (PRP$ your) (NN question))
            (, ,)
            (SBAR (RB even) (IN as)
              (S
                (NP (PRP you)))))))
      (VP (VBD put)
        (NP (PRP it))))
    (: ;)
    (S
      (NP (NNP Truth)
        (CC and)
        (NNP Fact))
      (NP (PRP themselves)))
    (. .)))

advmod(put-10, Now-1)
aux(answer-3, to-2)
csubj(put-10, answer-3)
poss(question-5, your-4)
dobj(answer-3, question-5)
advmod(you-9, even-7)
dep(you-9, as-8)
dep(answer-3, you-9)
root(ROOT-0, put-10)
dobj(put-10, it-11)
dep(themselves-16, Truth-13)
conj_and(Truth-13, Fact-15)
dep(themselves-16, Fact-15)
parataxis(put-10, themselves-16)

(ROOT
  (S
    (S
      (S
        (VP (VB Remember)))
      (, ,)
      (SBAR (RB even) (IN for)
        (S
          (NP (DT the) (JJ absurdly) (NN doubting))
          (VP (VBZ Descartes))))
      (, ,)
      (NP (NN existence))
      (VP (VBD was) (RB n't)
        (ADJP (JJ axiomatic))))
    (: ;)
    (S
      (S
        (NP (PRP he))
        (VP (VBD had)
          (S
            (VP (TO to)
              (VP (VB prove)
                (NP (PRP it)))))))
      (, ,)
      (CC but)
      (S
        (NP (NNP Truth)
          (CC and)
          (NNP Fact))
        (VP (MD must)
          (VP (VB exist)
            (SBAR (IN for)
              (S
                (NP (DT the) (NN contrary))
                (VP (VBZ is)
                  (ADJP
                    (ADJP (JJ illogical))
                    (, ,)
                    (ADJP (JJ absurd))
                    (, ,)
                    (CC and)
                    (ADJP (JJ impossible))))))))))
    (. .)))

ccomp(axiomatic-13, Remember-1)
advmod(Descartes-8, even-3)
dep(Descartes-8, for-4)
det(doubting-7, the-5)
amod(doubting-7, absurdly-6)
nsubj(Descartes-8, doubting-7)
dep(axiomatic-13, Descartes-8)
nsubj(axiomatic-13, existence-10)
cop(axiomatic-13, was-11)
neg(axiomatic-13, n't-12)
root(ROOT-0, axiomatic-13)
nsubj(had-16, he-15)
xsubj(prove-18, he-15)
parataxis(axiomatic-13, had-16)
aux(prove-18, to-17)
xcomp(had-16, prove-18)
dobj(prove-18, it-19)
nsubj(exist-26, Truth-22)
conj_and(Truth-22, Fact-24)
nsubj(exist-26, Fact-24)
aux(exist-26, must-25)
parataxis(axiomatic-13, exist-26)
conj_but(had-16, exist-26)
mark(illogical-31, for-27)
det(contrary-29, the-28)
nsubj(illogical-31, contrary-29)
nsubj(absurd-33, contrary-29)
nsubj(impossible-36, contrary-29)
cop(illogical-31, is-30)
advcl(exist-26, illogical-31)
advcl(exist-26, absurd-33)
conj_and(illogical-31, absurd-33)
advcl(exist-26, impossible-36)
conj_and(illogical-31, impossible-36)

