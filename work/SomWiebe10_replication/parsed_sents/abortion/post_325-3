(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP believe)
          (SBAR (IN that)
            (S
              (NP (NN convenience))
              (VP (VBZ is)
                (NP
                  (NP (DT a) (JJ just) (NN criterion))
                  (PP (IN for)
                    (S
                      (VP (VBG taking)
                        (NP
                          (NP (NN someone) (POS 's))
                          (NN life))))))))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP you))
    (VP (MD must)
      (ADVP (RB consistently))
      (VP (VB support)
        (NP
          (NP (DT a) (JJ serial) (NN killer) (POS 's))
          (`` ``) (NN right))
        (S
          (VP (TO to)
            (VP (VB choose) ('' '')
              (PP (IN as)
                (ADVP (RB well))))))))
    (. .)))

mark(believe-3, If-1)
nsubj(believe-3, you-2)
advcl(support-20, believe-3)
complm(criterion-9, that-4)
nsubj(criterion-9, convenience-5)
cop(criterion-9, is-6)
det(criterion-9, a-7)
amod(criterion-9, just-8)
ccomp(believe-3, criterion-9)
prepc_for(criterion-9, taking-11)
poss(life-14, someone-12)
dobj(taking-11, life-14)
advmod(support-20, then-16)
nsubj(support-20, you-17)
aux(support-20, must-18)
advmod(support-20, consistently-19)
root(ROOT-0, support-20)
det(killer-23, a-21)
amod(killer-23, serial-22)
poss(right-26, killer-23)
dobj(support-20, right-26)
aux(choose-28, to-27)
xcomp(support-20, choose-28)
prep(choose-28, as-30)
pcomp(as-30, well-31)

