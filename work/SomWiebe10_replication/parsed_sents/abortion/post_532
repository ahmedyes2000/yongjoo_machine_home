(ROOT
  (S
    (NP
      (NP (JJS Most))
      (PP (IN of)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP you))
            (VP (VBD said))))))
    (VP (VBZ is)
      (ADJP (RB absolutely) (JJ correct)))
    (. .)))

nsubj(correct-8, Most-1)
dobj(said-5, what-3)
nsubj(said-5, you-4)
prepc_of(Most-1, said-5)
cop(correct-8, is-6)
advmod(correct-8, absolutely-7)
root(ROOT-0, correct-8)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN place))
          (PP (IN of)
            (NP (NN freedom))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG restricting)
          (NP
            (NP (NNS freedoms))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP do) (RB n't)
                  (VP (VB harm)
                    (S
                      (NP (NN anyone))
                      (ADJP (RB else))))))))))
      (VP (VBZ goes)
        (PP (IN against)
          (NP
            (NP (DT the) (NN grain))
            (PP (IN of)
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (DT this) (NN country))
                  (VP (VBD was)
                    (VP (VBN founded)
                      (PRT (RP on)))))))))))
    (. .)))

nsubj(place-4, This-1)
cop(place-4, is-2)
det(place-4, a-3)
root(ROOT-0, place-4)
prep_of(place-4, freedom-6)
csubj(goes-17, restricting-9)
dobj(restricting-9, freedoms-10)
nsubj(harm-14, freedoms-10)
aux(harm-14, do-12)
neg(harm-14, n't-13)
rcmod(freedoms-10, harm-14)
nsubj(else-16, anyone-15)
xcomp(harm-14, else-16)
conj_and(place-4, goes-17)
det(grain-20, the-19)
prep_against(goes-17, grain-20)
dobj(founded-26, what-22)
det(country-24, this-23)
nsubjpass(founded-26, country-24)
auxpass(founded-26, was-25)
prepc_of(grain-20, founded-26)
prt(founded-26, on-27)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBG being)
        (VP (VBD said))))
    (, ,)
    (NP (PRP it))
    (ADVP (RB also))
    (VP (MD should) (RB not)
      (VP (VB be)
        (VP (VBN banned))))
    (. .)))

nsubjpass(said-3, That-1)
auxpass(said-3, being-2)
partmod(banned-10, said-3)
nsubjpass(banned-10, it-5)
advmod(banned-10, also-6)
aux(banned-10, should-7)
neg(banned-10, not-8)
auxpass(banned-10, be-9)
root(ROOT-0, banned-10)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (MD would)
          (VP (VB recommend)
            (VP (VB happen))))))
    (, ,)
    (S
      (S
        (VP (VBZ is)
          (SBAR (IN that)
            (S
              (NP (NNP Congress))
              (VP (VBZ makes)
                (NP
                  (NP (DT a) (NNP Constitutional) (NNP Amendment) (NN defining))
                  (SBAR
                    (WHPP (IN at)
                      (WHNP (WDT what) (NN point)))
                    (S
                      (NP
                        (NP (DT a) (NN specimen))
                        (PP (IN of)
                          (NP (DT the) (JJ human) (NN race))))
                      (VP
                        (VP (VBZ becomes)
                          (NP (DT a) (NN person)))
                        (CC and)
                        (VP (VBZ achieves)))))))))))
      (VP (VBD citizenhood)))
    (, ,)
    (CC and)
    (S
      (PP (IN with)
        (NP (DT that) (JJ citizenhood) (NNP Constitutional) (NN protection)))
      (, ,)
      (ADVP (RB with))
      (VP (VBD said)
        (NP (NN point) (NN occuring))
        (PP (IN at)
          (NP
            (NP (DT some) (NN point))
            (PP (IN between)
              (NP (NN conception)
                (CC and)
                (NN birth)))))
        (, ,)
        (ADVP
          (ADVP (RB probably) (RB late))
          (PP (IN in)
            (NP (DT the) (NN pregnancy))))))
    (. .)))

dobj(recommend-4, What-1)
nsubj(recommend-4, I-2)
aux(recommend-4, would-3)
dep(citizenhood-29, recommend-4)
dep(recommend-4, happen-5)
csubj(citizenhood-29, is-7)
csubj(said-39, is-7)
complm(makes-10, that-8)
nsubj(makes-10, Congress-9)
ccomp(is-7, makes-10)
det(defining-14, a-11)
nn(defining-14, Constitutional-12)
nn(defining-14, Amendment-13)
dobj(makes-10, defining-14)
det(point-17, defining-14)
rel(person-26, point-17)
det(specimen-19, a-18)
nsubj(person-26, specimen-19)
nsubj(achieves-28, specimen-19)
det(race-23, the-21)
amod(race-23, human-22)
prep_of(specimen-19, race-23)
cop(person-26, becomes-24)
det(person-26, a-25)
rcmod(defining-14, person-26)
rcmod(defining-14, achieves-28)
conj_and(person-26, achieves-28)
root(ROOT-0, citizenhood-29)
det(protection-36, that-33)
amod(protection-36, citizenhood-34)
nn(protection-36, Constitutional-35)
prep_with(said-39, protection-36)
advmod(said-39, with-38)
conj_and(citizenhood-29, said-39)
nn(occuring-41, point-40)
dobj(said-39, occuring-41)
det(point-44, some-43)
prep_at(said-39, point-44)
prep_between(point-44, conception-46)
prep_between(point-44, birth-48)
conj_and(conception-46, birth-48)
advmod(late-51, probably-50)
advmod(said-39, late-51)
det(pregnancy-54, the-53)
prep_in(late-51, pregnancy-54)

(ROOT
  (S
    (PP (IN After)
      (NP (DT this) (NN point)))
    (, ,)
    (NP
      (NP (NN termination))
      (PP (IN of)
        (NP (DT the) (NN child)))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (MD would) (RB then)
            (VP (VB be)
              (VP (VBN defined))))))
      (, ,))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN classified)
          (PP (IN as)
            (NP
              (NP (NN murder))
              (, ,)
              (CC and)
              (RB not)
              (NP (NN abortion)))))))
    (. .)))

det(point-3, this-2)
prep_after(classified-19, point-3)
nsubjpass(classified-19, termination-5)
det(child-8, the-7)
prep_of(termination-5, child-8)
mark(defined-15, as-10)
nsubjpass(defined-15, it-11)
aux(defined-15, would-12)
advmod(defined-15, then-13)
auxpass(defined-15, be-14)
dep(termination-5, defined-15)
aux(classified-19, would-17)
auxpass(classified-19, be-18)
root(ROOT-0, classified-19)
prep_as(classified-19, murder-21)
prep_as(classified-19, not-24)
conj_and(murder-21, not-24)
neg(murder-21, not-24)
dep(murder-21, abortion-25)

(ROOT
  (S
    (SBAR (IN After)
      (S
        (NP (DT that) (NN amendment))
        (VP (VBZ is)
          (VP (VBN ratified)))))
    (, ,)
    (NP
      (NP (DT the) (NN policy))
      (PP (IN as) (TO to)
        (SBAR (IN whether)
          (S
            (NP
              (NP (NN termination))
              (PP (IN of)
                (NP
                  (NP (DT the) (JJ human) (NN specimen))
                  (ADVP (RB prior)
                    (PP (TO to)
                      (NP (DT that) (NN point)))))))
            (VP (VBZ is)
              (ADJP (JJ legal)
                (CC or)
                (RB not)))))))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN left)
          (PP (TO to)
            (NP (DT the) (NNS states))))))
    (. .)))

mark(ratified-5, After-1)
det(amendment-3, that-2)
nsubjpass(ratified-5, amendment-3)
auxpass(ratified-5, is-4)
advcl(left-27, ratified-5)
det(policy-8, the-7)
nsubjpass(left-27, policy-8)
complm(legal-22, whether-11)
nsubj(legal-22, termination-12)
det(specimen-16, the-14)
amod(specimen-16, human-15)
prep_of(termination-12, specimen-16)
det(point-20, that-19)
prep_prior_to(specimen-16, point-20)
cop(legal-22, is-21)
prepc_as_to(policy-8, legal-22)
prepc_as_to(policy-8, not-24)
conj_or(legal-22, not-24)
neg(legal-22, not-24)
aux(left-27, should-25)
auxpass(left-27, be-26)
root(ROOT-0, left-27)
det(states-30, the-29)
prep_to(left-27, states-30)

(ROOT
  (S
    (PP (IN In)
      (NP (DT an) (JJ ideal) (NN world)))
    (, ,)
    (NP
      (NP (NN abortion))
      (PP (IN of)
        (NP (DT all) (NN kind))))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ illegal))))
    (. .)))

det(world-4, an-2)
amod(world-4, ideal-3)
prep_in(illegal-12, world-4)
nsubj(illegal-12, abortion-6)
det(kind-9, all-8)
prep_of(abortion-6, kind-9)
aux(illegal-12, would-10)
cop(illegal-12, be-11)
root(ROOT-0, illegal-12)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (S
      (NP (DT this))
      (VP (VBZ is) (RB not)
        (NP (DT the) (NN case))))
    (, ,)
    (CC and)
    (S
      (NP (DT this))
      (VP (VBZ is)
        (NP
          (NP (DT the)
            (ADJP (RBS most) (JJ reasonable))
            (NN compromise))
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD can)
                (VP (VB come)
                  (PRT (RP up))
                  (PP (IN with)))))))))
    (. .)))

advmod(case-7, However-1)
nsubj(case-7, this-3)
cop(case-7, is-4)
neg(case-7, not-5)
det(case-7, the-6)
root(ROOT-0, case-7)
nsubj(compromise-15, this-10)
cop(compromise-15, is-11)
det(compromise-15, the-12)
advmod(reasonable-14, most-13)
amod(compromise-15, reasonable-14)
conj_and(case-7, compromise-15)
prep_with(come-18, compromise-15)
nsubj(come-18, I-16)
aux(come-18, can-17)
rcmod(compromise-15, come-18)
prt(come-18, up-19)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (UCP
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (PRP I))
            (VP (VBP am)
              (PP (IN for)
                (NP
                  (NP (NN legalization))
                  (PP (IN of)
                    (NP (NN marjuana)
                      (CC and)
                      (JJ other) (NNS drugs))))))))
        (, ,)
        (PP (IN for)
          (NP
            (NP (DT the) (NNS rights))
            (PP (IN of)
              (NP
                (NP (NNS homosexuals))
                (, ,)
                (PP (IN for)
                  (NP
                    (NP (DT the) (JJ unrestricted) (NN right))
                    (PP (IN of)
                      (NP (DT the) (NNS people)))
                    (S
                      (VP (TO to)
                        (VP (VB bear)
                          (NP (NNS arms)))))))
                (, ,)))))
        (CC and)
        (PP (IN against)
          (NP (DT all) (`` ``) (NN victimless) (NNS crimes)))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
advmod(am-5, why-3)
nsubj(am-5, I-4)
dep(is-2, am-5)
prep_for(am-5, legalization-7)
nn(drugs-12, marjuana-9)
conj_and(marjuana-9, other-11)
nn(drugs-12, other-11)
prep_of(legalization-7, drugs-12)
dep(is-2, for-14)
conj_and(am-5, for-14)
det(rights-16, the-15)
pobj(for-14, rights-16)
prep_of(rights-16, homosexuals-18)
det(right-23, the-21)
amod(right-23, unrestricted-22)
prep_for(homosexuals-18, right-23)
det(people-26, the-25)
prep_of(right-23, people-26)
aux(bear-28, to-27)
infmod(right-23, bear-28)
dobj(bear-28, arms-29)
dep(is-2, against-32)
conj_and(am-5, against-32)
det(crimes-36, all-33)
nn(crimes-36, victimless-35)
pobj(against-32, crimes-36)

(ROOT
  (S ('' '')
    (ADVP (RB Abortion))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBZ is) (RB not)
      (NP
        (NP (CD one))
        (PP (IN of)
          (NP (DT these) (NNS things)))))
    (. .)))

advmod(one-8, Abortion-2)
advmod(one-8, however-4)
cop(one-8, is-6)
neg(one-8, not-7)
root(ROOT-0, one-8)
det(things-11, these-10)
prep_of(one-8, things-11)

(ROOT
  (S
    (NP (DT An) (JJ innocent) (NN life))
    (VP (VBZ is)
      (VP (VBG being)
        (VP (VBN destroyed))))
    (. .)))

det(life-3, An-1)
amod(life-3, innocent-2)
nsubjpass(destroyed-6, life-3)
aux(destroyed-6, is-4)
auxpass(destroyed-6, being-5)
root(ROOT-0, destroyed-6)

(ROOT
  (S
    (SBAR (IN While)
      (S
        (S
          (NP (PRP you))
          (ADVP (RB certainly))
          (VP (MD can)
            (VP (VB make)
              (NP (DT a) (JJ good) (NN argument))
              (PP (IN for)
                (NP
                  (NP (NN abortion) (RB early))
                  (PP (IN in)
                    (NP (DT the) (NN pregnancy))))))))
        (, ,)
        (CC and)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT no) (NN reason)
              (S
                (VP (TO to)
                  (VP (VB restrict)
                    (NP (NN birth) (NN control))))))))))
    (, ,)
    (S
      (SBAR (IN once)
        (S
          (NP (DT a) (NNS feltus))
          (VP (VBZ begins)
            (S
              (VP (TO to)
                (VP (VB kick)
                  (CC and)
                  (VB play))))
            (, ,)
            (S
              (VP (TO to)
                (VP (VB respond)
                  (PP (TO to)
                    (NP (NNS voices)
                      (CC and)
                      (NNS sounds))))))
            (, ,)
            (S
              (VP (TO to)
                (VP (VB show)
                  (NP (NN emotion))))))))
      (, ,)
      (NP (PRP it))
      (VP (VBZ is)
        (NP (DT a) (NN person))))
    (, ,)
    (CC and)
    (S
      (NP
        (NP
          (NP (PRP it) (POS 's))
          (JJ inalienable) (NN right))
        (PP (TO to)
          (NP (NN life))))
      (VP (VBZ is)
        (VP (VBG being)
          (VP (VBN infringed)))))
    (. .)))

mark(make-5, While-1)
nsubj(make-5, you-2)
advmod(make-5, certainly-3)
aux(make-5, can-4)
advcl(person-49, make-5)
det(argument-8, a-6)
amod(argument-8, good-7)
dobj(make-5, argument-8)
prep_for(make-5, abortion-10)
advmod(abortion-10, early-11)
det(pregnancy-14, the-13)
prep_in(abortion-10, pregnancy-14)
expl(is-18, there-17)
conj_and(make-5, is-18)
advcl(person-49, is-18)
det(reason-20, no-19)
nsubj(is-18, reason-20)
aux(restrict-22, to-21)
infmod(reason-20, restrict-22)
nn(control-24, birth-23)
dobj(restrict-22, control-24)
mark(begins-29, once-26)
det(feltus-28, a-27)
nsubj(begins-29, feltus-28)
xsubj(kick-31, feltus-28)
xsubj(respond-36, feltus-28)
xsubj(show-43, feltus-28)
advcl(person-49, begins-29)
aux(kick-31, to-30)
xcomp(begins-29, kick-31)
xcomp(begins-29, play-33)
conj_and(kick-31, play-33)
aux(respond-36, to-35)
xcomp(begins-29, respond-36)
prep_to(respond-36, voices-38)
prep_to(respond-36, sounds-40)
conj_and(voices-38, sounds-40)
aux(show-43, to-42)
xcomp(begins-29, show-43)
dobj(show-43, emotion-44)
nsubj(person-49, it-46)
cop(person-49, is-47)
det(person-49, a-48)
root(ROOT-0, person-49)
poss(right-55, it-52)
amod(right-55, inalienable-54)
nsubjpass(infringed-60, right-55)
prep_to(right-55, life-57)
aux(infringed-60, is-58)
auxpass(infringed-60, being-59)
conj_and(person-49, infringed-60)

(ROOT
  (S
    (NP (NNPS Americans))
    (VP
      (CONJP (RB not) (JJ only))
      (VP (MD should))
      (CC but)
      (VP (MD must)
        (VP (VB insure)
          (SBAR (IN that)
            (S
              (SBAR (RB as) (RB long) (IN as)
                (S
                  (NP (NNS rights)
                    (CC and)
                    (NNS freedoms))
                  (VP (VBP do) (RB not)
                    (VP (VB infringe)
                      (PP (IN upon)
                        (NP
                          (NP (DT the) (NNS rights)
                            (CC and)
                            (NNS feedoms))
                          (PP (IN of)
                            (NP (NNS others)))))))))
              (NP (PRP they))
              (VP (VBP are)
                (VP (VBN protected))))))))
    (. .)))

nsubj(should-4, Americans-1)
nsubj(insure-7, Americans-1)
neg(only-3, not-2)
preconj(should-4, only-3)
root(ROOT-0, should-4)
aux(insure-7, must-6)
conj_but(should-4, insure-7)
complm(protected-27, that-8)
advmod(infringe-17, as-9)
advmod(infringe-17, long-10)
dep(infringe-17, as-11)
nsubj(infringe-17, rights-12)
conj_and(rights-12, freedoms-14)
nsubj(infringe-17, freedoms-14)
aux(infringe-17, do-15)
neg(infringe-17, not-16)
dep(protected-27, infringe-17)
det(rights-20, the-19)
prep_upon(infringe-17, rights-20)
prep_upon(infringe-17, feedoms-22)
conj_and(rights-20, feedoms-22)
prep_of(rights-20, others-24)
nsubjpass(protected-27, they-25)
auxpass(protected-27, are-26)
ccomp(insure-7, protected-27)

(ROOT
  (S
    (NP (NNP Abortion))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBZ is) (RB not)
      (PP (IN without)
        (NP (DT a) (NN victim))))
    (. .)))

nsubj(is-5, Abortion-1)
advmod(is-5, however-3)
root(ROOT-0, is-5)
neg(is-5, not-6)
det(victim-9, a-8)
prep_without(is-5, victim-9)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ does)
      (SBAR
        (S
          (NP (NNP infringe))
          (VP (VBZ upons)
            (NP
              (NP (DT the) (NNS rights)
                (CC and)
                (NNS freedoms))
              (PP (IN of)
                (NP (DT another))))))))
    (. .)))

nsubj(does-2, It-1)
root(ROOT-0, does-2)
nsubj(upons-4, infringe-3)
ccomp(does-2, upons-4)
det(rights-6, the-5)
dobj(upons-4, rights-6)
dobj(upons-4, freedoms-8)
conj_and(rights-6, freedoms-8)
prep_of(rights-6, another-10)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (SBAR
        (WHADVP (WRB why))
        (S
          (NP (PRP it))
          (VP (MD should) (RB not)
            (VP (VB be)
              (ADJP (JJ legal)))))))
    (. .)))

nsubj(is-2, This-1)
root(ROOT-0, is-2)
advmod(legal-8, why-3)
nsubj(legal-8, it-4)
aux(legal-8, should-5)
neg(legal-8, not-6)
cop(legal-8, be-7)
advcl(is-2, legal-8)

