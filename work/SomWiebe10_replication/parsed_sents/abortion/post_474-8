(ROOT
  (S
    (NP (NN Sperm)
      (CC or)
      (NN egg) (NNS donors))
    (VP (VBP do) (RB not)
      (VP (VB have)
        (S
          (NP (PRP$ their) (NNS rights))
          (VP (VBD violated)
            (SBAR (IN if)
              (S
                (NP (PRP they))
                (VP (VBP do) (RB n't)
                  (VP (VB get)
                    (S
                      (VP (TO to)
                        (VP (VB name)
                          (S
                            (NP (NNP \))
                            (VP (VB provide)
                              (SBAR
                                (S
                                  (NP (NNP \))
                                  (VP (VBP have)
                                    (NP
                                      (NP (DT a) (NN say))
                                      (PP (IN in)
                                        (NP
                                          (NP (PRP$ their) (NN offspring) (POS 's))
                                          (NN life))))))))))))))))))))
    (. .)))

nn(donors-4, Sperm-1)
conj_or(Sperm-1, egg-3)
nn(donors-4, egg-3)
nsubj(have-7, donors-4)
aux(have-7, do-5)
neg(have-7, not-6)
root(ROOT-0, have-7)
poss(rights-9, their-8)
nsubj(violated-10, rights-9)
ccomp(have-7, violated-10)
mark(get-15, if-11)
nsubj(get-15, they-12)
xsubj(name-17, they-12)
aux(get-15, do-13)
neg(get-15, n't-14)
advcl(violated-10, get-15)
aux(name-17, to-16)
xcomp(get-15, name-17)
nsubj(provide-19, \-18)
ccomp(name-17, provide-19)
nsubj(have-21, \-20)
ccomp(provide-19, have-21)
det(say-23, a-22)
dobj(have-21, say-23)
poss(offspring-26, their-25)
poss(life-28, offspring-26)
prep_in(say-23, life-28)

