(ROOT
  (S
    (LST (-LRB- -LRB-) (NN understated) (-RRB- -RRB-))
    (PP (IN For)
      (NP
        (SBAR (IN if)
          (S
            (NP
              (NP (CD one) (POS 's))
              (NN happiness))
            (VP (VBZ takes)
              (VP (VB precedence)
                (PRT (RP over))
                (NP (PRP$ your) (NN property))
                (PRN (, ,)
                  (ADVP (RB right)
                    (S
                      (VP (TO to)
                        (VP (VB speak)
                          (ADVP (RB freely))))))
                  (, ,))))))
        (CC or)
        (NP (RB even) (NN life))))
    (, ,)
    (NP (PRP I))
    (VP (MD can)
      (VP (VB see)
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (EX there))
            (VP (MD might)
              (VP
                (NP (PRP me))
                (PP
                  (ADVP
                    (NP (DT a) (JJ little) (NN mix))
                    (RB up))
                  (IN at)
                  (NP (DT the) (NN courthouse)))))))))
    (. .)))

dep(see-26, understated-2)
mark(takes-9, if-5)
poss(happiness-8, one-6)
nsubj(takes-9, happiness-8)
prep_for(see-26, takes-9)
xcomp(takes-9, precedence-10)
prt(precedence-10, over-11)
poss(property-13, your-12)
dobj(precedence-10, property-13)
dep(precedence-10, right-15)
aux(speak-17, to-16)
dep(right-15, speak-17)
advmod(speak-17, freely-18)
advmod(life-22, even-21)
conj_or(takes-9, life-22)
prep_for(see-26, life-22)
nsubj(see-26, I-24)
aux(see-26, can-25)
root(ROOT-0, see-26)
advmod(me-30, why-27)
expl(me-30, there-28)
aux(me-30, might-29)
advcl(see-26, me-30)
det(mix-33, a-31)
amod(mix-33, little-32)
npadvmod(up-34, mix-33)
advmod(me-30, up-34)
det(courthouse-37, the-36)
prep_at(me-30, courthouse-37)

