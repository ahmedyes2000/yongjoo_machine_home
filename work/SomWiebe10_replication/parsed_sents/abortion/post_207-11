(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (VP (VB vote)
        (PP (IN for)
          (NP
            (NP (DT the) (NN candidate))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (`` ``) (VBZ values)
                  (NP (NN life))
                  ('' '')
                  (NP
                    (NP (DT the) (JJS most))
                    (, ,)
                    (CC and)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (S
                          (VP (VBG comparing)
                            (NP
                              (NP (NN someone))
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (VP (VBZ endorses)
                                    (NP
                                      (NP
                                        (NP (NN murder))
                                        (PRN (-LRB- -LRB-)
                                          (NP (NN aka) (NN abortion))
                                          (-RRB- -RRB-)))
                                      (PP (IN on)
                                        (NP (NN demand))))))))))
                        (, ,)
                        (NP (DT the) (NN choice))
                        (VP (VBZ is)
                          (ADJP (RB fairly) (JJ easy)))))))))))))
    (. .)))

nsubj(vote-3, We-1)
aux(vote-3, must-2)
root(ROOT-0, vote-3)
det(candidate-6, the-5)
prep_for(vote-3, candidate-6)
nsubj(values-9, candidate-6)
rcmod(candidate-6, values-9)
dobj(values-9, life-10)
det(most-13, the-12)
dobj(values-9, most-13)
advmod(easy-33, when-16)
partmod(easy-33, comparing-17)
dobj(comparing-17, someone-18)
nsubj(endorses-20, someone-18)
rcmod(someone-18, endorses-20)
dobj(endorses-20, murder-21)
nn(abortion-24, aka-23)
appos(murder-21, abortion-24)
prep_on(murder-21, demand-27)
det(choice-30, the-29)
nsubj(easy-33, choice-30)
cop(easy-33, is-31)
advmod(easy-33, fairly-32)
dobj(values-9, easy-33)
conj_and(most-13, easy-33)

