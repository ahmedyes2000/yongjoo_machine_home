(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (VP (VBN lost)
          (NP
            (NP (DT any) (JJ principled) (NN argument))
            (SBAR
              (S
                (NP (PRP you))
                (VP (MD can)
                  (VP (VB make)
                    (PP (IN for)
                      (NP (DT these) (NNS practices)))))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP make)
            (NP (JJ pragmatic) (NNS arguments)))))
      (, ,)
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBZ confess)
        (PP (TO to)
          (S
            (VP (VBG being)
              (NP
                (NP (DT a) (NN murderer))
                (CONJP (RB as) (RB well) (IN as))
                (NP (DT a) (NN hypocrite))))))))
    (. .)))

nsubj(lost-3, You-1)
aux(lost-3, have-2)
root(ROOT-0, lost-3)
det(argument-6, any-4)
amod(argument-6, principled-5)
dobj(lost-3, argument-6)
dobj(make-9, argument-6)
nsubj(make-9, you-7)
aux(make-9, can-8)
rcmod(argument-6, make-9)
det(practices-12, these-11)
prep_for(make-9, practices-12)
mark(make-17, if-15)
nsubj(make-17, you-16)
advcl(confess-23, make-17)
amod(arguments-19, pragmatic-18)
dobj(make-17, arguments-19)
advmod(confess-23, then-21)
nsubj(confess-23, you-22)
conj_and(lost-3, confess-23)
cop(murderer-27, being-25)
det(murderer-27, a-26)
prepc_to(confess-23, murderer-27)
det(hypocrite-32, a-31)
prepc_to(confess-23, hypocrite-32)
conj_and(murderer-27, hypocrite-32)

