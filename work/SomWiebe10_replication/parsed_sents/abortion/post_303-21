(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP claim)
          (S
            (NP (NN something))
            (ADJP (RB as) (JJ obscure)
              (PP (IN as)
                (NP (NNP dependency))))))))
    (, ,)
    (S
      (ADVP (RB then))
      (NP (PRP you))
      (VP (VBP are)
        (ADJP
          (ADVP (RB no) (RBR more))
          (VBN protected)
          (SBAR (IN than)
            (S
              (NP (PRP they))
              (VP
                (VP (VBP are))
                (, ,)
                (SBAR (IN for)
                  (S
                    (NP (PRP you))
                    (VP (VBP are) (RB not)
                      (ADJP
                        (ADJP (JJ biologically)
                          (CC or)
                          (JJ ecologicaly))
                        (CC or)
                        (ADJP (RB socially) (JJ independent))))))))))))
    (, ,)
    (CC and)
    (ADVP (RB therefore))
    (S
      (NP
        (NP (PRP$ your) (NN reasoning))
        (PP (IN for)
          (NP (NN abortion))))
      (VP (MD could)
        (VP (VB be)
          (VP (VBN extended)
            (PP (TO to)
              (NP (PRP you)))))))
    (. .)))

mark(claim-3, If-1)
nsubj(claim-3, you-2)
advcl(protected-15, claim-3)
nsubj(obscure-6, something-4)
advmod(obscure-6, as-5)
xcomp(claim-3, obscure-6)
prep_as(obscure-6, dependency-8)
advmod(protected-15, then-10)
nsubjpass(protected-15, you-11)
auxpass(protected-15, are-12)
advmod(more-14, no-13)
advmod(protected-15, more-14)
root(ROOT-0, protected-15)
mark(are-18, than-16)
nsubj(are-18, they-17)
dep(protected-15, are-18)
mark(biologically-24, for-20)
nsubj(biologically-24, you-21)
nsubj(ecologicaly-26, you-21)
nsubj(independent-29, you-21)
cop(biologically-24, are-22)
neg(biologically-24, not-23)
advcl(are-18, biologically-24)
advcl(are-18, ecologicaly-26)
conj_or(biologically-24, ecologicaly-26)
advmod(independent-29, socially-28)
advcl(are-18, independent-29)
conj_or(biologically-24, independent-29)
advmod(protected-15, therefore-32)
conj_and(protected-15, therefore-32)
poss(reasoning-34, your-33)
nsubjpass(extended-39, reasoning-34)
prep_for(reasoning-34, abortion-36)
aux(extended-39, could-37)
auxpass(extended-39, be-38)
ccomp(protected-15, extended-39)
conj_and(protected-15, extended-39)
prep_to(extended-39, you-41)

