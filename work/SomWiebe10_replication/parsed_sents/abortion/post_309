(ROOT
  (S
    (NP (DT A) (NN fetus))
    (VP (VBZ is) (RB not)
      (ADJP (RB \*) (RB metaphysically) (NN \*) (JJ independent)))
    (. .)))

det(fetus-2, A-1)
nsubj(independent-8, fetus-2)
cop(independent-8, is-3)
neg(independent-8, not-4)
advmod(independent-8, \*-5)
advmod(independent-8, metaphysically-6)
dep(independent-8, \*-7)
root(ROOT-0, independent-8)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP (DT the) (JJ fundamental) (NN issue)))
    (. .)))

nsubj(issue-5, That-1)
cop(issue-5, is-2)
det(issue-5, the-3)
amod(issue-5, fundamental-4)
root(ROOT-0, issue-5)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ other) (NNS types))
        (PP (IN of)
          (NP (NN dependence))))
      (VP (VBP are)
        (ADJP
          (ADVP (RBR worse) (IN than))
          (JJ irrelevant))))
    (: :)
    (S
      (NP (DT Every) (VBG living) (NN thing))
      (VP (VBZ is)
        (ADJP (RB biologically) (JJ interdependent))))
    (. .)))

det(types-3, The-1)
amod(types-3, other-2)
nsubj(irrelevant-9, types-3)
prep_of(types-3, dependence-5)
cop(irrelevant-9, are-6)
advmod(than-8, worse-7)
advmod(irrelevant-9, than-8)
root(ROOT-0, irrelevant-9)
det(thing-13, Every-11)
amod(thing-13, living-12)
nsubj(interdependent-16, thing-13)
cop(interdependent-16, is-14)
advmod(interdependent-16, biologically-15)
parataxis(irrelevant-9, interdependent-16)

(ROOT
  (S
    (NP (DT An) (NN embryo)
      (CC or)
      (NN fetus))
    (VP (VBZ is)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ is)))))
    (. .)))

det(embryo-2, An-1)
nsubj(is-5, embryo-2)
conj_or(embryo-2, fetus-4)
nsubj(is-5, fetus-4)
root(ROOT-0, is-5)
dobj(is-8, what-6)
nsubj(is-8, it-7)
ccomp(is-5, is-8)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (VBZ denies)
      (NP (DT the) (NNS facts))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN stated)
              (PP (IN about)
                (NP (PRP$ their) (NN nature))))))))
    (. .)))

det(one-2, No-1)
nsubj(denies-3, one-2)
root(ROOT-0, denies-3)
det(facts-5, the-4)
dobj(denies-3, facts-5)
complm(stated-9, that-6)
nsubj(stated-9, I-7)
aux(stated-9, have-8)
ccomp(denies-3, stated-9)
poss(nature-12, their-11)
prep_about(stated-9, nature-12)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (VBZ is)
          (VP (VBN denied)))))
    (VP (VBZ is)
      (NP (PRP$ their) (NN significance))
      (, ,)
      (SBAR (IN in) (NN order)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (NN room))
              (PP (IN for)
                (NP (DT a) (JJ religious) (NN interpretation))))))))
    (. .)))

nsubjpass(denied-3, What-1)
auxpass(denied-3, is-2)
csubj(significance-6, denied-3)
cop(significance-6, is-4)
poss(significance-6, their-5)
root(ROOT-0, significance-6)
mark(make-11, in-8)
dep(make-11, order-9)
aux(make-11, to-10)
purpcl(significance-6, make-11)
dobj(make-11, room-12)
det(interpretation-16, a-14)
amod(interpretation-16, religious-15)
prep_for(make-11, interpretation-16)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADVP (RB no)
          (S
            (VP (VBG escaping)
              (NP (PRP it)))))))
    (: :)
    (S
      (NP (DT Either) (NN reason)
        (CC or)
        (NN religion))
      (VP (MD must)
        (VP (VB be)
          (VP (VBN used)
            (S
              (VP (TO to)
                (VP (VB answer)
                  (NP (DT this) (NN question)))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(is-2, no-3)
dep(no-3, escaping-4)
dobj(escaping-4, it-5)
det(reason-8, Either-7)
preconj(reason-8, Either-7)
nsubjpass(used-13, reason-8)
conj_or(reason-8, religion-10)
nsubjpass(used-13, religion-10)
aux(used-13, must-11)
auxpass(used-13, be-12)
parataxis(is-2, used-13)
aux(answer-15, to-14)
xcomp(used-13, answer-15)
det(question-17, this-16)
dobj(answer-15, question-17)

(ROOT
  (S (CC And)
    (NP (NN religion))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (JJ valid) (NN basis))
        (PP (IN for)
          (NP (NN government)))))
    (. .)))

cc(basis-7, And-1)
nsubj(basis-7, religion-2)
cop(basis-7, is-3)
neg(basis-7, not-4)
det(basis-7, a-5)
amod(basis-7, valid-6)
root(ROOT-0, basis-7)
prep_for(basis-7, government-9)

(ROOT
  (S (RBR Further) (, ,)
    (NP (NN reason))
    (ADVP (RB clearly))
    (VP (VBZ states)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (NN burden))
            (PP (IN of)
              (NP (NN proof))))
          (VP (VBZ is)
            (PP (IN on)
              (NP (PRP you)))
            (S
              (VP (TO to)
                (VP (VB establish)
                  (SBAR (IN that)
                    (S
                      (NP (DT a) (NN fetus))
                      (VP (VBZ is)
                        (NP
                          (NP (DT a) (NN person))
                          (VP (VBN entitled)
                            (PP
                              (PP (TO to)
                                (NP (JJ individual) (NNS rights)))
                              (, ,) (RB not)
                              (PP (IN on)
                                (NP (PRP me))))
                            (S
                              (VP (TO to)
                                (VP (VB disprove)
                                  (NP (PRP it)))))))))))))))))
    (. .)))

advmod(states-5, Further-1)
nsubj(states-5, reason-3)
advmod(states-5, clearly-4)
root(ROOT-0, states-5)
complm(is-11, that-6)
det(burden-8, the-7)
nsubj(is-11, burden-8)
xsubj(establish-15, burden-8)
prep_of(burden-8, proof-10)
ccomp(states-5, is-11)
prep_on(is-11, you-13)
aux(establish-15, to-14)
xcomp(is-11, establish-15)
complm(person-21, that-16)
det(fetus-18, a-17)
nsubj(person-21, fetus-18)
cop(person-21, is-19)
det(person-21, a-20)
ccomp(establish-15, person-21)
xsubj(disprove-31, person-21)
partmod(person-21, entitled-22)
amod(rights-25, individual-24)
prep_to(entitled-22, rights-25)
neg(entitled-22, not-27)
prep_on(entitled-22, me-29)
aux(disprove-31, to-30)
xcomp(entitled-22, disprove-31)
dobj(disprove-31, it-32)

