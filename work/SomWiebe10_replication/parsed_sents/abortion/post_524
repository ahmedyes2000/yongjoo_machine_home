(ROOT
  (S
    (SBAR (IN As)
      (S
        (NP (PRP I))
        (VP (VBD reread)
          (NP (PRP$ my) (JJ own) (NN comment)))))
    (, ,)
    (NP (PRP I))
    (VP (VBD did)
      (VP (VB realize)
        (SBAR (IN that)
          (S
            (NP (DT that))
            (VP (VBD seemed)
              (NP (DT a) (NN bit))
              (PRT (RP off))
              (, ,)
              (SBAR (RB even) (IN before)
                (S
                  (NP (PRP I))
                  (VP (VBD read)
                    (NP
                      (NP (NNP yours))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBD pointed)
                            (NP (PRP it))
                            (PRT (RP out))))))))))))))
    (. .)))

mark(reread-3, As-1)
nsubj(reread-3, I-2)
advcl(realize-10, reread-3)
poss(comment-6, my-4)
amod(comment-6, own-5)
dobj(reread-3, comment-6)
nsubj(realize-10, I-8)
aux(realize-10, did-9)
root(ROOT-0, realize-10)
complm(bit-15, that-11)
nsubj(bit-15, that-12)
cop(bit-15, seemed-13)
det(bit-15, a-14)
ccomp(realize-10, bit-15)
prt(bit-15, off-16)
advmod(read-21, even-18)
dep(read-21, before-19)
nsubj(read-21, I-20)
dep(bit-15, read-21)
dobj(read-21, yours-22)
nsubj(pointed-25, yours-22)
rcmod(yours-22, pointed-25)
dobj(pointed-25, it-26)
prt(pointed-25, out-27)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (DT the) (NN clarification))
          (VP (VBZ needs)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN made)
                    (PP (IN with)
                      (NP (NN consciousness)))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
det(clarification-4, the-3)
nsubj(needs-5, clarification-4)
xsubj(made-8, clarification-4)
ccomp(think-2, needs-5)
aux(made-8, to-6)
auxpass(made-8, be-7)
xcomp(needs-5, made-8)
prep_with(made-8, consciousness-10)

(ROOT
  (S
    (S
      (VP (VBG Bearing)
        (NP (DT a) (NN child))))
    (VP (VBZ requires)
      (S
        (VP (VBG giving)
          (PRT (RP up))
          (NP
            (NP (DT some))
            (PP (IN of)
              (NP (DT the) (NN freedom))))
          (PP (TO to)
            (NP
              (NP (CD one) (POS 's))
              (JJ own) (NN body)))
          (PP (IN for)
            (NP (DT a) (JJ mere) (CD nine) (NNS months))))))
    (. .)))

csubj(requires-4, Bearing-1)
det(child-3, a-2)
dobj(Bearing-1, child-3)
root(ROOT-0, requires-4)
xcomp(requires-4, giving-5)
prt(giving-5, up-6)
dobj(giving-5, some-7)
det(freedom-10, the-9)
prep_of(some-7, freedom-10)
poss(body-15, one-12)
amod(body-15, own-14)
prep_to(giving-5, body-15)
det(months-20, a-17)
amod(months-20, mere-18)
num(months-20, nine-19)
prep_for(giving-5, months-20)

(ROOT
  (S
    (NP
      (NP (DT The) (NN taking))
      (PP (IN of)
        (NP
          (NP
            (NP (CD one) (NN being) (POS 's))
            (NN life))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ has)
                (VP (VBN done)
                  (NP (NN nothing))
                  (S
                    (VP
                      (VP (TO to)
                        (VP (VB warrant)
                          (NP (PRP$ its) (NN destruction))))
                      (IN except)
                      (VP
                        (PP (IN for)
                          (S
                            (VP (VBG being)
                              (VP (VBN formed)
                                (PP (IN as)
                                  (NP
                                    (NP (DT a) (NN side) (NN effect))
                                    (PP (IN of)
                                      (NP
                                        (NP (PRP it) (POS 's))
                                        (NN parents) ('' '') (NNS actions))))))))))))
                  (, ,)
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN sake))
                      (PP (IN of)
                        (NP (DT that) (JJ small) (NN liberty))))))))))))
    (VP (MD can) (RB not)
      (VP (VB be)
        (ADJP (JJ justified))))
    (. .)))

det(taking-2, The-1)
nsubj(justified-42, taking-2)
num(being-5, one-4)
poss(life-7, being-5)
prep_of(taking-2, life-7)
nsubj(done-11, life-7)
aux(done-11, has-10)
rcmod(life-7, done-11)
dobj(done-11, nothing-12)
aux(warrant-14, to-13)
dep(done-11, warrant-14)
poss(destruction-16, its-15)
dobj(warrant-14, destruction-16)
dep(warrant-14, except-17)
dep(warrant-14, for-18)
auxpass(formed-20, being-19)
pcomp(for-18, formed-20)
det(effect-24, a-22)
nn(effect-24, side-23)
prep_as(formed-20, effect-24)
poss(actions-30, it-26)
nn(actions-30, parents-28)
prep_of(effect-24, actions-30)
det(sake-34, the-33)
prep_for(done-11, sake-34)
det(liberty-38, that-36)
amod(liberty-38, small-37)
prep_of(sake-34, liberty-38)
aux(justified-42, can-39)
neg(justified-42, not-40)
cop(justified-42, be-41)
root(ROOT-0, justified-42)

(ROOT
  (S
    (S
      (PP (IN Of)
        (NP
          (NP (NN course))
          (, ,)
          (SBAR
            (WHNP (WP what))
            (S
              (ADVP (RB immediately))
              (VP (VBZ comes)
                (S
                  (VP (TO to)
                    (VP (VB mind))))))))))
    (VP (VBZ is)
      (NP (NN collateral) (NN damage)))
    (. .)))

csubj(damage-11, Of-1)
pobj(Of-1, course-2)
nsubj(comes-6, course-2)
advmod(comes-6, immediately-5)
rcmod(course-2, comes-6)
aux(mind-8, to-7)
xcomp(comes-6, mind-8)
cop(damage-11, is-9)
nn(damage-11, collateral-10)
root(ROOT-0, damage-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NN loss))
      (PP (IN of)
        (NP
          (NP (JJ innocent) (NN life))
          (PP (IN as)
            (NP
              (NP (DT a) (NN result))
              (PP (IN of)
                (NP (NN war))))))))
    (VP
      (VP (VBZ is)
        (ADJP (JJ horrifying)))
      (, ,)
      (CC and)
      (VP (MD should)
        (VP (VB act)
          (S
            (VP (TO to)
              (VP (VB deter)
                (NP (NNS nations))
                (PP (IN from)
                  (NP (JJ unnecessary) (NN fighting)))))))))
    (. .)))

det(loss-2, The-1)
nsubj(horrifying-12, loss-2)
nsubj(act-16, loss-2)
xsubj(deter-18, loss-2)
amod(life-5, innocent-4)
prep_of(loss-2, life-5)
det(result-8, a-7)
prep_as(life-5, result-8)
prep_of(result-8, war-10)
cop(horrifying-12, is-11)
root(ROOT-0, horrifying-12)
aux(act-16, should-15)
conj_and(horrifying-12, act-16)
aux(deter-18, to-17)
xcomp(act-16, deter-18)
dobj(deter-18, nations-19)
amod(fighting-22, unnecessary-21)
prep_from(deter-18, fighting-22)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP
        (VP (VBZ is)
          (ADVP (RB however)))
        (, ,)
        (NP
          (NP (DT a) (NN fact))
          (PP (IN of)
            (NP (NN war))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (DT a) (NN war))
          (VP (MD must)
            (VP (VB be)
              (VP (VBN fought))))))
      (, ,)
      (NP (DT every) (NN step))
      (VP (MD should)
        (VP (VB be)
          (VP (VBN taken)
            (S
              (VP (TO to)
                (VP (VB minimize)
                  (NP (PRP it)))))))))
    (. .)))

nsubj(is-2, It-1)
root(ROOT-0, is-2)
advmod(is-2, however-3)
det(fact-6, a-5)
dobj(is-2, fact-6)
prep_of(fact-6, war-8)
mark(fought-16, if-11)
det(war-13, a-12)
nsubjpass(fought-16, war-13)
aux(fought-16, must-14)
auxpass(fought-16, be-15)
advcl(taken-22, fought-16)
det(step-19, every-18)
nsubjpass(taken-22, step-19)
aux(taken-22, should-20)
auxpass(taken-22, be-21)
conj_and(is-2, taken-22)
aux(minimize-24, to-23)
xcomp(taken-22, minimize-24)
dobj(minimize-24, it-25)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBG being)
        (VP (VBD said))))
    (, ,)
    (NP (PRP one))
    (VP (MD can) (RB not)
      (VP (VB fail)
        (S
          (VP (TO to)
            (VP (VB do)
              (SBAR
                (WHNP (WP what))
                (S
                  (VP (VBZ is)
                    (ADJP (JJ necessary)
                      (PP (IN for)
                        (NP
                          (NP (NN fear))
                          (PP (IN of)
                            (NP (DT the) (JJ negative) (NNS consequences))))))))))))))
    (. .)))

nsubjpass(said-3, That-1)
auxpass(said-3, being-2)
partmod(fail-8, said-3)
nsubj(fail-8, one-5)
xsubj(do-10, one-5)
aux(fail-8, can-6)
neg(fail-8, not-7)
root(ROOT-0, fail-8)
aux(do-10, to-9)
xcomp(fail-8, do-10)
nsubj(necessary-13, what-11)
cop(necessary-13, is-12)
ccomp(do-10, necessary-13)
prep_for(necessary-13, fear-15)
det(consequences-19, the-17)
amod(consequences-19, negative-18)
prep_of(fear-15, consequences-19)

(ROOT
  (S
    (S
      (NP (NNP Chemotherapy))
      (VP (VBZ is)
        (ADJP (JJ horrifying))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADJP
          (ADJP (JJR better))
          (PP (IN than)
            (NP (DT the) (NN alternative))))))
    (. .)))

nsubj(horrifying-3, Chemotherapy-1)
cop(horrifying-3, is-2)
root(ROOT-0, horrifying-3)
nsubj(better-8, it-6)
cop(better-8, is-7)
conj_but(horrifying-3, better-8)
det(alternative-11, the-10)
prep_than(better-8, alternative-11)

(ROOT
  (S
    (NP (JJ Collateral) (NN damage))
    (VP (VBZ differs)
      (PP (IN from)
        (NP
          (NP (NN abortion))
          (PP (IN in)
            (NP
              (NP (DT that) (NN abortion))
              (PP (IN in)
                (NP (JJ several) (NNS ways))))))))
    (. .)))

amod(damage-2, Collateral-1)
nsubj(differs-3, damage-2)
root(ROOT-0, differs-3)
prep_from(differs-3, abortion-5)
det(abortion-8, that-7)
prep_in(abortion-5, abortion-8)
amod(ways-11, several-10)
prep_in(abortion-8, ways-11)

(ROOT
  (S
    (NP (DT The) (JJ first))
    (VP (VBZ is)
      (PP (IN in)
        (NP
          (NP (DT the) (NN degree))
          (PP (IN of)
            (NP (DT the) (NNS freedoms)))))
      (PP (IN at)
        (NP
          (NP (NN stake))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBP have)
                (VP (VBN been)
                  (VP (VBN mentioned)
                    (PP (IN above))))))))))
    (. .)))

det(first-2, The-1)
nsubj(is-3, first-2)
root(ROOT-0, is-3)
det(degree-6, the-5)
prep_in(is-3, degree-6)
det(freedoms-9, the-8)
prep_of(degree-6, freedoms-9)
prep_at(is-3, stake-11)
nsubjpass(mentioned-16, stake-11)
aux(mentioned-16, have-14)
auxpass(mentioned-16, been-15)
rcmod(stake-11, mentioned-16)
prep(mentioned-16, above-17)

(ROOT
  (S
    (NP (DT The) (NN second))
    (VP (VBZ is)
      (ADJP (JJ intent)))
    (. .)))

det(second-2, The-1)
nsubj(intent-4, second-2)
cop(intent-4, is-3)
root(ROOT-0, intent-4)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone) (NN willingly))
        (VP
          (VP (VBZ risks)
            (NP (PRP$ their) (NN life))
            (PP (IN for)
              (NP (NN freedom))))
          (, ,)
          (CC and)
          (VP (VBZ does)
            (PP (IN in)
              (NP (NN fact)))
            (S
              (VP (VB lose)
                (NP (PRP it))))))))
    (, ,)
    (NP (PRP he)
      (CC or)
      (PRP she))
    (VP (VBZ has)
      (VP (VBN made)
        (NP (DT the) (NN choice)
          (S
            (VP (TO to)
              (VP (VB sacrifice)
                (NP (PRP$ their) (NN life))
                (PP (IN for)
                  (NP (NN freedom)))))))))
    (. .)))

mark(risks-4, If-1)
nn(willingly-3, someone-2)
nsubj(risks-4, willingly-3)
nsubj(does-11, willingly-3)
advcl(made-21, risks-4)
poss(life-6, their-5)
dobj(risks-4, life-6)
prep_for(risks-4, freedom-8)
conj_and(risks-4, does-11)
advcl(made-21, does-11)
prep_in(does-11, fact-13)
ccomp(does-11, lose-14)
dobj(lose-14, it-15)
nsubj(made-21, he-17)
conj_or(he-17, she-19)
nsubj(made-21, she-19)
aux(made-21, has-20)
root(ROOT-0, made-21)
det(choice-23, the-22)
dobj(made-21, choice-23)
aux(sacrifice-25, to-24)
infmod(choice-23, sacrifice-25)
poss(life-27, their-26)
dobj(sacrifice-25, life-27)
prep_for(sacrifice-25, freedom-29)

(ROOT
  (S
    (S
      (VP (VBG Killing)
        (NP (DT a) (NN fetus))
        (PP (IN in)
          (NP (JJ cold) (NN blood)))))
    (VP (VBZ is)
      (ADJP (JJ different)
        (PP (IN from)
          (S
            (VP (VBG killing)
              (NP (DT a) (JJ civilian))
              (PP (IN in)
                (NP
                  (NP (DT a) (NN warzone))
                  (PP (IN on)
                    (NP (NN accident))))))))))
    (. .)))

csubj(different-8, Killing-1)
det(fetus-3, a-2)
dobj(Killing-1, fetus-3)
amod(blood-6, cold-5)
prep_in(Killing-1, blood-6)
cop(different-8, is-7)
root(ROOT-0, different-8)
prepc_from(different-8, killing-10)
det(civilian-12, a-11)
dobj(killing-10, civilian-12)
det(warzone-15, a-14)
prep_in(killing-10, warzone-15)
prep_on(warzone-15, accident-17)

(ROOT
  (S
    (PP (IN In)
      (NP (JJ civilian) (NNS courts)))
    (PRN (, ,)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN diffence))
            (PP (IN between)
              (NP (NN murder)
                (CC and)
                (NN manslaughter))))
          (, ,)
          (PP (IN in)
            (NP (DT a) (JJ military) (NN court)))))
      (, ,))
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN difference))
        (PP (IN between)
          (NP
            (NP (DT an) (NN accident))
            (CC and)
            (NP (DT a) (NN war) (NN crime))))))
    (. .)))

amod(courts-3, civilian-2)
prep_in(difference-22, courts-3)
nsubj(diffence-8, it-5)
cop(diffence-8, is-6)
det(diffence-8, the-7)
parataxis(difference-22, diffence-8)
prep_between(diffence-8, murder-10)
prep_between(diffence-8, manslaughter-12)
conj_and(murder-10, manslaughter-12)
det(court-17, a-15)
amod(court-17, military-16)
prep_in(diffence-8, court-17)
nsubj(difference-22, it-19)
cop(difference-22, is-20)
det(difference-22, the-21)
root(ROOT-0, difference-22)
det(accident-25, an-24)
prep_between(difference-22, accident-25)
det(crime-29, a-27)
nn(crime-29, war-28)
prep_between(difference-22, crime-29)
conj_and(accident-25, crime-29)

(ROOT
  (S
    (NP (JJ Collateral) (NN damage) (NN wil))
    (VP (VBP happen)
      (ADVP
        (ADVP (RB so) (RB long))
        (SBAR (IN as)
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP (NN war)))))))
    (. .)))

amod(wil-3, Collateral-1)
nn(wil-3, damage-2)
nsubj(happen-4, wil-3)
root(ROOT-0, happen-4)
advmod(long-6, so-5)
advmod(happen-4, long-6)
mark(is-9, as-7)
expl(is-9, there-8)
ccomp(long-6, is-9)
nsubj(is-9, war-10)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (VBZ is)
        (NP (DT an) (JJ excellent) (NN reason)
          (S
            (VP (TO to)
              (VP (VB try)
                (PP (IN for)
                  (NP (NN peace)))))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB unfortunately))
      (NP (JJ violent) (NNS measures))
      (VP (MD must)
        (ADVP (RB sometimes))
        (VP (VB be)
          (VP (VBN employed)
            (PP (IN in)
              (NP
                (NP (DT the) (NN defense))
                (PP (IN of)
                  (NP (DT both) (NN life)
                    (CC and)
                    (NN liberty)))))))))
    (. .)))

nsubj(reason-5, That-1)
cop(reason-5, is-2)
det(reason-5, an-3)
amod(reason-5, excellent-4)
root(ROOT-0, reason-5)
aux(try-7, to-6)
infmod(reason-5, try-7)
prep_for(try-7, peace-9)
advmod(employed-18, unfortunately-12)
amod(measures-14, violent-13)
nsubjpass(employed-18, measures-14)
aux(employed-18, must-15)
advmod(employed-18, sometimes-16)
auxpass(employed-18, be-17)
conj_but(reason-5, employed-18)
det(defense-21, the-20)
prep_in(employed-18, defense-21)
preconj(life-24, both-23)
prep_of(defense-21, life-24)
prep_of(defense-21, liberty-26)
conj_and(life-24, liberty-26)

(ROOT
  (S
    (NP
      (NP (NNP Abortion))
      (, ,)
      (PP (IN on)
        (NP (DT the) (JJ other) (NN hand)))
      (, ,))
    (VP (VBZ is)
      (ADJP (JJ necessary) (RB only)
        (S
          (VP (TO to)
            (VP (VB preserve)
              (NP
                (NP (DT the) (NNS rights))
                (PP (IN of)
                  (NP (DT a) (NN woman))))
              (PP (TO to)
                (NP (PRP$ her) (NN body)))
              (PP (IN for)
                (NP
                  (NP (DT a)
                    (ADJP (RB very) (JJ short))
                    (NN period))
                  (PP (IN of)
                    (NP (NN time))))))))))
    (. .)))

nsubj(necessary-9, Abortion-1)
det(hand-6, the-4)
amod(hand-6, other-5)
prep_on(Abortion-1, hand-6)
cop(necessary-9, is-8)
root(ROOT-0, necessary-9)
advmod(necessary-9, only-10)
aux(preserve-12, to-11)
xcomp(necessary-9, preserve-12)
det(rights-14, the-13)
dobj(preserve-12, rights-14)
det(woman-17, a-16)
prep_of(rights-14, woman-17)
poss(body-20, her-19)
prep_to(preserve-12, body-20)
det(period-25, a-22)
advmod(short-24, very-23)
amod(period-25, short-24)
prep_for(preserve-12, period-25)
prep_of(period-25, time-27)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (CD two) (NNS people) (POS 's))
              (NNS rights))
            (VP (VBP collide))))))
    (, ,)
    (NP (PRP one))
    (VP (MD must)
      (VP (VB look)
        (PP (DT both) (IN at)
          (NP
            (NP (DT the) (NN difference))
            (PP
              (PP (IN in)
                (NP
                  (NP (NN severity))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NNS rights))
                      (PP (IN in)
                        (NP (NN question)))))))
              (, ,)
              (CC and)
              (PP (IN at)
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ has)
                      (NP (DT the) (JJR greater) (NN claim)))))))))))
    (. .)))

prep_in(look-12, cases-2)
advmod(collide-8, where-3)
num(people-5, two-4)
poss(rights-7, people-5)
nsubj(collide-8, rights-7)
rcmod(cases-2, collide-8)
nsubj(look-12, one-10)
aux(look-12, must-11)
root(ROOT-0, look-12)
dep(look-12, both-13)
det(difference-16, the-15)
prep_at(look-12, difference-16)
prep_at(look-12, difference-16')
conj_and(difference-16, difference-16')
prep_in(difference-16, severity-18)
det(rights-21, the-20)
prep_of(severity-18, rights-21)
prep_in(rights-21, question-23)
nsubj(has-28, who-27)
prepc_at(difference-16', has-28)
det(claim-31, the-29)
amod(claim-31, greater-30)
dobj(has-28, claim-31)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (MD would)
        (VP (VB argue)
          (SBAR (IN that)
            (S
              (NP (DT a) (NN fetus))
              (VP (VBZ has)
                (NP (JJR greater) (NN right))
                (PP (TO to)
                  (NP (NN life)))
                (SBAR (IN than)
                  (S
                    (NP (DT a) (NN woman))
                    (VP (VBZ has)
                      (VP
                        (PP (TO to)
                          (NP (PRP$ her) (NN body)))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT a) (NN nation))
      (VP (VBZ has)
        (NP
          (NP
            (NP (DT a) (JJR greater) (NN right))
            (PP (TO to)
              (NP (NN life))))
          (CC and)
          (NP
            (NP (DT all) (NN liberty))
            (PP (IN than)
              (NP
                (NP (DT the) (NNS soldiers))
                (, ,)
                (NP (NNS sailors))
                (, ,)
                (NP (NNPS Marines))
                (, ,)
                (CC and)
                (NP (NNS airmen))))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VB sacrifice)
                  (PP (DT both) (IN for)
                    (NP (PRP it)))
                  (, ,)
                  (PP (IN than)
                    (NP
                      (NP (DT the) (NN enemy) (NN combatant))
                      (SBAR
                        (WHNP (WP who))
                        (S
                          (VP (VBZ emperils)
                            (S
                              (VP (DT both) (TO to)
                                (VP (VB end)
                                  (NP (PRP it))))))))))))))
          (, ,)
          (CC and)
          (NP
            (NP (DT the) (JJ innocent) (NN civilian))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD was)
                  (ADVP (RB simply))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (JJ ewrong) (NN place))
                      (PP (IN at)
                        (NP (DT the) (JJ wrong) (NN time))))))))))))
    (. .)))

nsubj(argue-3, I-1)
aux(argue-3, would-2)
root(ROOT-0, argue-3)
complm(has-7, that-4)
det(fetus-6, a-5)
nsubj(has-7, fetus-6)
ccomp(argue-3, has-7)
amod(right-9, greater-8)
dobj(has-7, right-9)
prep_to(has-7, life-11)
mark(to-16, than-12)
det(woman-14, a-13)
nsubj(to-16, woman-14)
aux(to-16, has-15)
advcl(has-7, to-16)
poss(body-18, her-17)
pobj(to-16, body-18)
det(nation-22, a-21)
nsubj(has-23, nation-22)
conj_and(argue-3, has-23)
det(right-26, a-24)
amod(right-26, greater-25)
dobj(has-23, right-26)
prep_to(right-26, life-28)
det(liberty-31, all-30)
dobj(has-23, liberty-31)
conj_and(right-26, liberty-31)
nsubj(sacrifice-43, liberty-31)
det(soldiers-34, the-33)
prep_than(liberty-31, soldiers-34)
prep_than(liberty-31, sailors-36)
conj_and(soldiers-34, sailors-36)
prep_than(liberty-31, Marines-38)
conj_and(soldiers-34, Marines-38)
prep_than(liberty-31, airmen-41)
conj_and(soldiers-34, airmen-41)
rcmod(liberty-31, sacrifice-43)
dep(sacrifice-43, both-44)
prep_for(sacrifice-43, it-46)
det(combatant-51, the-49)
nn(combatant-51, enemy-50)
prep_than(sacrifice-43, combatant-51)
nsubj(emperils-53, combatant-51)
rcmod(combatant-51, emperils-53)
dep(end-56, both-54)
aux(end-56, to-55)
ccomp(emperils-53, end-56)
xcomp(emperils-53, end-56)
dobj(end-56, it-57)
det(civilian-62, the-60)
amod(civilian-62, innocent-61)
dobj(has-23, civilian-62)
conj_and(right-26, civilian-62)
nsubj(was-64, civilian-62)
rcmod(civilian-62, was-64)
advmod(was-64, simply-65)
det(place-69, the-67)
amod(place-69, ewrong-68)
prep_in(was-64, place-69)
det(time-73, the-71)
amod(time-73, wrong-72)
prep_at(place-69, time-73)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NN someone))
        (VP
          (VP (VBZ chooses)
            (S
              (VP (TO to)
                (VP (VB oppose)
                  (NP (NN freedom))))))
          (, ,)
          (CC and)
          (VP (VBZ strives)
            (S
              (VP (TO to)
                (VP (VB take)
                  (NP (PRP it))
                  (PP (IN from)
                    (NP (DT another))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (PP (IN within)
        (NP
          (NP (DT the) (NNS rights))
          (PP (IN of)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP$ whose) (NNS freedom))
                (S
                  (VP (VBZ is)
                    (VP (VBG being)
                      (VP (VBN taken)
                        (S
                          (VP (TO to)
                            (VP (VB take)
                              (NP (PRP$ his))
                              (PP (IN of)
                                (NP
                                  (NP (PRP$ her) (NN life))
                                  (PP (IN in)
                                    (NP
                                      (NP (NN defense))
                                      (PP (IN of)
                                        (NP (PRP$ their) (JJ own) (NN freedom))))))))))))))))))))
    (. .)))

mark(chooses-3, If-1)
nsubj(chooses-3, someone-2)
xsubj(oppose-5, someone-2)
nsubj(strives-9, someone-2)
xsubj(take-11, someone-2)
advcl(is-17, chooses-3)
aux(oppose-5, to-4)
xcomp(chooses-3, oppose-5)
dobj(oppose-5, freedom-6)
conj_and(chooses-3, strives-9)
advcl(is-17, strives-9)
aux(take-11, to-10)
xcomp(strives-9, take-11)
dobj(take-11, it-12)
prep_from(take-11, another-14)
nsubj(is-17, it-16)
root(ROOT-0, is-17)
det(rights-20, the-19)
prep_within(is-17, rights-20)
prep_of(rights-20, those-22)
poss(freedom-24, those-22)
nsubjpass(taken-27, freedom-24)
aux(taken-27, is-25)
auxpass(taken-27, being-26)
rcmod(those-22, taken-27)
aux(take-29, to-28)
xcomp(taken-27, take-29)
dobj(take-29, his-30)
poss(life-33, her-32)
prep_of(take-29, life-33)
prep_in(life-33, defense-35)
poss(freedom-39, their-37)
amod(freedom-39, own-38)
prep_of(defense-35, freedom-39)

(ROOT
  (S
    (NP (DT A) (NN fetus))
    (, ,)
    (ADVP (RB however))
    (, ,)
    (VP (VBZ is)
      (VP (VBN created) (, ,)
        (PP (IN in)
          (NP
            (NP (DT the) (JJ vast) (NN majority))
            (PP (IN of)
              (NP (NNS cases)))))
        (, ,)
        (PP (IN by)
          (NP
            (NP (DT the) (NNS actions))
            (PP (IN of)
              (NP (PRP$ its) (NNS parents)))))))
    (. .)))

det(fetus-2, A-1)
nsubjpass(created-7, fetus-2)
advmod(created-7, however-4)
auxpass(created-7, is-6)
root(ROOT-0, created-7)
det(majority-12, the-10)
amod(majority-12, vast-11)
prep_in(created-7, majority-12)
prep_of(majority-12, cases-14)
det(actions-18, the-17)
agent(created-7, actions-18)
poss(parents-21, its-20)
prep_of(actions-18, parents-21)

(ROOT
  (S
    (NP (NNP Nature))
    (VP (VBZ has)
      (VP (VBN chosen)
        (NP (DT the) (NN mother)
          (S
            (VP (TO to)
              (VP (VB bear)
                (NP
                  (NP (DT the) (JJ biological) (NN burden))
                  (PP (IN of)
                    (NP (NN childbearing))))))))))
    (. .)))

nsubj(chosen-3, Nature-1)
aux(chosen-3, has-2)
root(ROOT-0, chosen-3)
det(mother-5, the-4)
dobj(chosen-3, mother-5)
aux(bear-7, to-6)
infmod(mother-5, bear-7)
det(burden-10, the-8)
amod(burden-10, biological-9)
dobj(bear-7, burden-10)
prep_of(burden-10, childbearing-12)

(ROOT
  (S
    (SBAR
      (PRN (-LRB- -LRB-)
        (PP (IN except)
          (PP (IN in)
            (NP
              (NP (DT the) (NN case))
              (PP (IN of)
                (NP
                  (NP (NNS seahorses))
                  (, ,)
                  (CC but)
                  (NP (NN I) (NNS digress)))))))
        (-RRB- -RRB-))
      (S
        (NP (DT A) (NN fetus))
        (VP
          (VP (VBZ does) (RB not)
            (ADVP (RB intentionally))
            (VP (VB limit)
              (NP
                (NP (DT a) (NN woman) (POS 's))
                (NNS rights))))
          (, ,)
          (CC nor)
          (VP (VBZ does)))))
    (NP (PRP it))
    (VP (VBP seek)
      (S
        (VP (TO to)
          (VP (VB limit)
            (NP (PRP$ her) (NN freedom))))))
    (. .)))

dep(limit-18, except-2)
pcomp(except-2, in-3)
det(case-5, the-4)
prep_in(except-2, case-5)
prep_of(case-5, seahorses-7)
nn(digress-11, I-10)
prep_of(case-5, digress-11)
conj_but(seahorses-7, digress-11)
det(fetus-14, A-13)
nsubj(limit-18, fetus-14)
nsubj(does-25, fetus-14)
aux(limit-18, does-15)
neg(limit-18, not-16)
advmod(limit-18, intentionally-17)
dep(seek-27, limit-18)
det(woman-20, a-19)
poss(rights-22, woman-20)
dobj(limit-18, rights-22)
conj_nor(limit-18, does-25)
dep(seek-27, does-25)
nsubj(seek-27, it-26)
xsubj(limit-29, it-26)
root(ROOT-0, seek-27)
aux(limit-29, to-28)
xcomp(seek-27, limit-29)
poss(freedom-31, her-30)
dobj(limit-29, freedom-31)

(ROOT
  (S
    (ADVP (RB Unfortunately))
    (, ,)
    (NP (NN evolution))
    (VP (VBZ has)
      (VP (VBN made)
        (NP (DT the) (NN fetus) (NN dependant))
        (PP (IN on)
          (NP (DT the) (NN mother)))))
    (. .)))

advmod(made-5, Unfortunately-1)
nsubj(made-5, evolution-3)
aux(made-5, has-4)
root(ROOT-0, made-5)
det(dependant-8, the-6)
nn(dependant-8, fetus-7)
dobj(made-5, dependant-8)
det(mother-11, the-10)
prep_on(made-5, mother-11)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (VP (MD must)
          (ADVP (RB also))
          (VP (VB be)
            (VP (VBN taken)
              (PP (IN into)
                (NP (NN account))))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN amount))
        (PP (IN of)
          (NP
            (NP (NN liberty))
            (VP (VBG being)
              (VP (VBN taken)))))))
    (. .)))

nsubjpass(taken-5, What-1)
aux(taken-5, must-2)
advmod(taken-5, also-3)
auxpass(taken-5, be-4)
csubj(amount-10, taken-5)
prep_into(taken-5, account-7)
cop(amount-10, is-8)
det(amount-10, the-9)
root(ROOT-0, amount-10)
prep_of(amount-10, liberty-12)
auxpass(taken-14, being-13)
partmod(liberty-12, taken-14)

(ROOT
  (S
    (NP
      (NP (NNP Conquest))
      (PP (IN by)
        (NP (NNS fascists))))
    (VP (MD would)
      (VP (VB be)
        (NP
          (NP (DT an) (JJ incredible) (NN violation))
          (PP (IN of)
            (NP (NN freedom))))))
    (. .)))

nsubj(violation-8, Conquest-1)
prep_by(Conquest-1, fascists-3)
aux(violation-8, would-4)
cop(violation-8, be-5)
det(violation-8, an-6)
amod(violation-8, incredible-7)
root(ROOT-0, violation-8)
prep_of(violation-8, freedom-10)

(ROOT
  (S
    (S
      (VP (VBG Freedom)
        (S
          (VP (TO to)
            (VP
              (VP (VB work))
              (, ,)
              (VP (VB live))
              (, ,)
              (VP (VB move)
                (PP (IN about)
                  (ADVP (RB freely))))
              (, ,)
              (NP
                (NP (DT all))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN Bill))
                    (PP (IN of)
                      (NP
                        (NP (NNP Rights))
                        (, ,)
                        (NP (JJ national) (NN sovereignty))))))))))))
    (, ,)
    (NP (DT all))
    (VP (MD would)
      (VP (VB be)
        (VP
          (ADVP
            (ADVP (RB utterly))
            (CC and)
            (ADVP (RB permanently)))
          (VBN destroyed))))
    (. .)))

partmod(destroyed-27, Freedom-1)
aux(work-3, to-2)
xcomp(Freedom-1, work-3)
dep(work-3, live-5)
dep(work-3, move-7)
prep(move-7, about-8)
pcomp(about-8, freely-9)
dobj(work-3, all-11)
det(Bill-14, the-13)
prep_of(all-11, Bill-14)
prep_of(Bill-14, Rights-16)
amod(sovereignty-19, national-18)
appos(Rights-16, sovereignty-19)
nsubjpass(destroyed-27, all-21)
aux(destroyed-27, would-22)
auxpass(destroyed-27, be-23)
advmod(destroyed-27, utterly-24)
conj_and(utterly-24, permanently-26)
advmod(destroyed-27, permanently-26)
root(ROOT-0, destroyed-27)

