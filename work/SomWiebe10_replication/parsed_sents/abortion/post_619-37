(ROOT
  (FRAG
    (FRAG (RB Maybe)
      (PP (IN for)
        (NP (VBG counting) (NN purpose)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ 's)
                (NP (DT the) (NN practice))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP
          (NP (NN trouble))
          (VP (VBG believing)
            (SBAR (IN that)
              (S
                (NP (DT any) (NN biologist))
                (VP (MD would)
                  (VP (VB maintain)
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (DT an) (NN embryo))
                          (PRN (-LRB- -LRB-)
                            (NP (NN non-dormant))
                            (-RRB- -RRB-)))
                        (VP
                          (VP (VBZ is) (RB n't)
                            (ADJP (JJ alive)))
                          (CC and)
                          (VP (VBZ is) (RB n't)
                            (ADJP (RB completely) (JJ human)
                              (CC or)
                              (JJ feline)
                              (SBAR (IN as)
                                (S
                                  (NP (DT the) (NN case))
                                  (VP (MD may)
                                    (VP (VB be))))))))))))))))))
    (. .)))

root(ROOT-0, Maybe-1)
dep(Maybe-1, for-2)
amod(purpose-4, counting-3)
pobj(for-2, purpose-4)
nsubj(practice-8, that-5)
cop(practice-8, 's-6)
det(practice-8, the-7)
ccomp(purpose-4, practice-8)
dep(Maybe-1, but-10)
nsubj(have-12, I-11)
dep(Maybe-1, have-12)
dobj(have-12, trouble-13)
partmod(trouble-13, believing-14)
complm(maintain-19, that-15)
det(biologist-17, any-16)
nsubj(maintain-19, biologist-17)
aux(maintain-19, would-18)
ccomp(believing-14, maintain-19)
complm(alive-28, that-20)
det(embryo-22, an-21)
nsubj(alive-28, embryo-22)
nsubj(human-33, embryo-22)
appos(embryo-22, non-dormant-24)
cop(alive-28, is-26)
neg(alive-28, n't-27)
ccomp(maintain-19, alive-28)
cop(human-33, is-30)
neg(human-33, n't-31)
advmod(human-33, completely-32)
ccomp(maintain-19, human-33)
conj_and(alive-28, human-33)
conj_and(alive-28, feline-35)
conj_or(human-33, feline-35)
mark(be-40, as-36)
det(case-38, the-37)
nsubj(be-40, case-38)
aux(be-40, may-39)
ccomp(human-33, be-40)

