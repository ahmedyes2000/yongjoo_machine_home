(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (UCP
            (VP (VBG going)
              (S
                (VP (TO to)
                  (VP (VB make)
                    (NP (DT the) (NN argument))
                    (SBAR (IN that)
                      (S
                        (S
                          (VP (VBG stopping)
                            (NP (DT a) (NN child))
                            (PP (IN from)
                              (NP (VBG existing)))))
                        (VP (VBZ is)
                          (NP
                            (NP (NN murder))
                            (, ,)
                            (SBAR
                              (WHPP (IN in)
                                (WHNP (WDT that)))
                              (S
                                (NP
                                  (NP (NN case))
                                  (, ,)
                                  (NP
                                    (NP (NN sex))
                                    (PP (IN without)
                                      (NP (NN procreation)))))
                                (VP (VBZ is)
                                  (NP (NN murder)))))))))))))
            (, ,)
            (CC or)
            (PP (IN for)
              (NP (DT that) (NN matter)))))))
    (, ,)
    (S (RB not)
      (VP (VBG deciding)
        (S
          (VP (TO to)
            (VP (VB have)
              (NP
                (NP (DT a) (NN child))
                (PP (IN at)
                  (NP (DT any) (NN point)))))))))
    (VP (VBZ is)
      (NP (NN murder)))
    (. .)))

cc(murder-44, And-1)
mark('re-4, if-2)
nsubj('re-4, you-3)
dep(murder-44, 're-4)
dep('re-4, going-5)
aux(make-7, to-6)
xcomp(going-5, make-7)
det(argument-9, the-8)
dobj(make-7, argument-9)
complm(murder-17, that-10)
csubj(murder-17, stopping-11)
det(child-13, a-12)
dobj(stopping-11, child-13)
prep_from(stopping-11, existing-15)
cop(murder-17, is-16)
ccomp(make-7, murder-17)
rel(murder-27, that-20)
nsubj(murder-27, case-21)
appos(case-21, sex-23)
prep_without(sex-23, procreation-25)
cop(murder-27, is-26)
rcmod(murder-17, murder-27)
dep('re-4, for-30)
conj_or(going-5, for-30)
det(matter-32, that-31)
pobj(for-30, matter-32)
neg(deciding-35, not-34)
csubj(murder-44, deciding-35)
aux(have-37, to-36)
xcomp(deciding-35, have-37)
det(child-39, a-38)
dobj(have-37, child-39)
det(point-42, any-41)
prep_at(child-39, point-42)
cop(murder-44, is-43)
root(ROOT-0, murder-44)

