(ROOT
  (S
    (NP (PRP You))
    (VP (VBP 're)
      (NP
        (NP (NN argument) (NNS rests))
        (PP (IN on)
          (NP
            (NP (DT a) (JJ false) (NN interpretation))
            (PP (IN of)
              (NP
                (NP (DT the) (NN idea))
                (PP (IN of)
                  (NP (NN potential)))))))))
    (. .)))

nsubj(rests-4, You-1)
cop(rests-4, 're-2)
nn(rests-4, argument-3)
root(ROOT-0, rests-4)
det(interpretation-8, a-6)
amod(interpretation-8, false-7)
prep_on(rests-4, interpretation-8)
det(idea-11, the-10)
prep_of(interpretation-8, idea-11)
prep_of(idea-11, potential-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NN definition))
      (PP (IN of)
        (NP (NN potential))))
    (VP (VBZ is)
      (SBAR (, ,) (`` ``)
        (S
          (NP
            (NP (PDT all) (DT the) (NNS necessities))
            (PP (IN of)
              (NP (NN y))))
          (VP (VBP are)
            (VP (VBN contained)
              (ADVP (RB innately)
                (PP (IN within)
                  (NP
                    (NP
                      (QP
                        (NP (SYM x))
                        (CC and)
                        (NP (SYM x))))
                    (SBAR
                      (S
                        (VP (MD will)
                          (VP (VB become)
                            (NP (NN y))
                            (PP (IN without)
                              (NP (NN prevention)))
                            (PP (IN by)
                              (NP (DT an) (JJ outside) (NN source)))))))))))))))
    (. .)))

det(definition-2, The-1)
nsubj(is-5, definition-2)
prep_of(definition-2, potential-4)
root(ROOT-0, is-5)
predet(necessities-10, all-8)
det(necessities-10, the-9)
nsubjpass(contained-14, necessities-10)
prep_of(necessities-10, y-12)
auxpass(contained-14, are-13)
ccomp(is-5, contained-14)
advmod(contained-14, innately-15)
prep_within(innately-15, x-17)
prep_within(innately-15, x-19)
conj_and(x-17, x-19)
aux(y-22, will-20)
cop(y-22, become-21)
rcmod(x-17, y-22)
prep_without(y-22, prevention-24)
det(source-28, an-26)
amod(source-28, outside-27)
prep_by(y-22, source-28)

(ROOT
  (S ('' '')
    (PP (IN For)
      (NP (NN example)))
    (, ,)
    (NP
      (NP (DT a) (NN seed))
      (PP (IN in)
        (NP (DT the) (NN ground))))
    (VP
      (VP (VBZ has)
        (NP (DT the) (NN potential)
          (S
            (VP (TO to)
              (VP (VB become)
                (NP (DT a) (NN plant)))))))
      (CC and)
      (VP (MD will)
        (VP (VB become)
          (NP (DT a) (NN plant))
          (SBAR (IN unless)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (NP
                  (NP (NNP uprooted))
                  (, ,)
                  (VP (VBN eaten)
                    (PP (IN by)
                      (NP
                        (NP (NNS animals))
                        (, ,)
                        (NP (JJ refused) (NN water))
                        (, ,) (FW etc.)))))))))))
    (. .)))

prep_for(has-10, example-3)
det(seed-6, a-5)
nsubj(has-10, seed-6)
det(ground-9, the-8)
prep_in(seed-6, ground-9)
root(ROOT-0, has-10)
det(potential-12, the-11)
dobj(has-10, potential-12)
aux(plant-16, to-13)
cop(plant-16, become-14)
det(plant-16, a-15)
infmod(potential-12, plant-16)
aux(plant-21, will-18)
cop(plant-21, become-19)
det(plant-21, a-20)
conj_and(has-10, plant-21)
mark(uprooted-25, unless-22)
nsubj(uprooted-25, it-23)
cop(uprooted-25, is-24)
advcl(plant-21, uprooted-25)
partmod(uprooted-25, eaten-27)
agent(eaten-27, animals-29)
amod(water-32, refused-31)
appos(animals-29, water-32)
dep(animals-29, etc.-34)

(ROOT
  (S
    (S
      (NP (DT A) (JJ single) (JJ random) (NN cell))
      (VP (MD can) (RB not)
        (VP (VB replicate)
          (NP (PRP itself))
          (PP (IN into)
            (NP (DT a) (NN human))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ needs)
      (NP
        (NP (DT a) (JJ tremendous) (NN amount))
        (PP (IN of)
          (NP (JJ human) (NN intervention)))))
    (. .)))

det(cell-4, A-1)
amod(cell-4, single-2)
amod(cell-4, random-3)
nsubj(replicate-7, cell-4)
aux(replicate-7, can-5)
neg(replicate-7, not-6)
ccomp(needs-14, replicate-7)
dobj(replicate-7, itself-8)
det(human-11, a-10)
prep_into(replicate-7, human-11)
nsubj(needs-14, it-13)
root(ROOT-0, needs-14)
det(amount-17, a-15)
amod(amount-17, tremendous-16)
dobj(needs-14, amount-17)
amod(intervention-20, human-19)
prep_of(amount-17, intervention-20)

(ROOT
  (S
    (NP (DT A) (NN sperm))
    (VP (MD will)
      (ADVP (RB also))
      (VP (RB not)
        (VP
          (VP (VB become)
            (NP (DT a) (NN human)))
          (, ,)
          (CC but)
          (VP (MD must)
            (VP (VB be)
              (VP (VBN combined)
                (PP (IN with)
                  (NP (DT an) (NN egg)))
                (ADVP (RB first))))))
        (CC and)
        (VP (VB be)
          (PP (IN within)
            (NP (DT the) (NN uterus)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN classified)
                      (PP (IN as)
                        (NP (DT a)
                          (ADJP (RB potentially) (JJ human)))))))))))))
    (. .)))

det(sperm-2, A-1)
nsubj(human-8, sperm-2)
nsubjpass(combined-13, sperm-2)
nsubj(be-19, sperm-2)
aux(human-8, will-3)
advmod(human-8, also-4)
neg(human-8, not-5)
cop(human-8, become-6)
det(human-8, a-7)
root(ROOT-0, human-8)
aux(combined-13, must-11)
auxpass(combined-13, be-12)
conj_but(human-8, combined-13)
det(egg-16, an-15)
prep_with(combined-13, egg-16)
advmod(combined-13, first-17)
conj_and(human-8, be-19)
det(uterus-22, the-21)
prep_within(be-19, uterus-22)
aux(classified-25, to-23)
auxpass(classified-25, be-24)
infmod(uterus-22, classified-25)
det(human-29, a-27)
advmod(human-29, potentially-28)
prep_as(classified-25, human-29)

(ROOT
  (S
    (ADVP (RB Additionally))
    (, ,)
    (NP (PRP$ your) (NN appendix))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN part))
        (PP (IN of)
          (NP (PRP$ your) (JJ person-hood))))
      (, ,)
      (SBAR (IN as)
        (S
          (NP (PRP it))
          (VP (VBZ contains)
            (NP (PRP$ your) (NN DNA))))))
    (. .)))

advmod(part-7, Additionally-1)
poss(appendix-4, your-3)
nsubj(part-7, appendix-4)
cop(part-7, is-5)
det(part-7, a-6)
root(ROOT-0, part-7)
poss(person-hood-10, your-9)
prep_of(part-7, person-hood-10)
mark(contains-14, as-12)
nsubj(contains-14, it-13)
advcl(part-7, contains-14)
poss(DNA-16, your-15)
dobj(contains-14, DNA-16)

(ROOT
  (S
    (NP (DT A) (NN fetus))
    (VP
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ different) (NN entity))
          (PP (IN with)
            (NP (JJ distinct) (NN DNA)))))
      (CC and)
      (VP (MD will)
        (VP (VB be)
          (NP (DT a) (JJ distinct) (NN person)))))
    (. .)))

det(fetus-2, A-1)
nsubj(entity-6, fetus-2)
cop(entity-6, is-3)
det(entity-6, a-4)
amod(entity-6, different-5)
root(ROOT-0, entity-6)
amod(DNA-9, distinct-8)
prep_with(entity-6, DNA-9)
aux(person-15, will-11)
cop(person-15, be-12)
det(person-15, a-13)
amod(person-15, distinct-14)
conj_and(entity-6, person-15)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB kill)
              (NP (PRP$ your) (JJ own) (NN person-hood))))))
      (, ,)
      (PP (VBG including)
        (NP
          (NP (DT any) (JJ bodily) (NN organ))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (PP (IN of)
                  (NP (PRP$ your) (JJ own) (NN DNA)))))))))
    (. .)))

nsubj(have-2, You-1)
root(ROOT-0, have-2)
det(right-4, the-3)
dobj(have-2, right-4)
aux(kill-6, to-5)
infmod(right-4, kill-6)
poss(person-hood-9, your-7)
amod(person-hood-9, own-8)
dobj(kill-6, person-hood-9)
det(organ-14, any-12)
amod(organ-14, bodily-13)
prep_including(have-2, organ-14)
nsubj(is-16, organ-14)
rcmod(organ-14, is-16)
poss(DNA-20, your-18)
amod(DNA-20, own-19)
prep_of(is-16, DNA-20)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP it))
        (VP (VBD were)
          (VP
            (ADVP (RB actually))
            (VBN cloned)))))
    (, ,)
    (NP (PRP it))
    (VP (MD would)
      (VP (VB become)
        (NP (DT a) (JJ separate) (NN entity))
        (SBAR
          (SBAR (IN because)
            (S
              (NP (PRP$ your) (NN mind))
              (VP (VBZ is) (RB not)
                (VP (VBN split)
                  (PP (IN between)
                    (NP (CD two) (NNS entities)))))))
          (, ,)
          (CC but)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ is)
                (NP (DT an)
                  (ADJP (RB entirely) (JJ different))
                  (NN argument))))))))
    (. .)))

advmod(entity-14, Now-1)
mark(cloned-7, if-3)
nsubjpass(cloned-7, it-4)
auxpass(cloned-7, were-5)
advmod(cloned-7, actually-6)
advcl(entity-14, cloned-7)
nsubj(entity-14, it-9)
aux(entity-14, would-10)
cop(entity-14, become-11)
det(entity-14, a-12)
amod(entity-14, separate-13)
root(ROOT-0, entity-14)
mark(split-20, because-15)
poss(mind-17, your-16)
nsubjpass(split-20, mind-17)
auxpass(split-20, is-18)
neg(split-20, not-19)
dep(entity-14, split-20)
num(entities-23, two-22)
prep_between(split-20, entities-23)
nsubj(argument-31, that-26)
cop(argument-31, is-27)
det(argument-31, an-28)
advmod(different-30, entirely-29)
amod(argument-31, different-30)
dep(entity-14, argument-31)
conj_but(split-20, argument-31)

