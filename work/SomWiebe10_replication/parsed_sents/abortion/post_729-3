(ROOT
  (S
    (NP (PRP I))
    (VP (VBP know)
      (SBAR
        (S
          (S
            (NP (PRP she))
            (VP (VBZ 's)
              (VP (VBN killin)
                (NP (DT a) (NN life)))))
          (CC and)
          (S
            (S
              (NP (FW i))
              (VP (VBP do)
                (S
                  (NP (VB think) (NNS thats))
                  (ADJP (JJ wrong)))))
            (, ,)
            (CC but)
            (S
              (PP (IN in)
                (NP (DT the) (JJ same) (NN way)))
              (NP (PRP she))
              (VP (MD might)
                (VP (VB want)
                  (S
                    (VP (TO to)
                      (VP (VB protect)
                        (NP (DT that) (NN unborn))
                        (PP (IN from)
                          (S
                            (VP (VBG going)
                              (PP (IN through)
                                (NP (NN pain)
                                  (CC and)
                                  (NNS trials)))
                              (PP (IN in)
                                (NP (DT the) (NN future))))))))))))))))
    (: ...)))

nsubj(know-2, I-1)
root(ROOT-0, know-2)
nsubjpass(killin-5, she-3)
auxpass(killin-5, 's-4)
dep(know-2, killin-5)
det(life-7, a-6)
dobj(killin-5, life-7)
nsubj(do-10, i-9)
dep(know-2, do-10)
conj_and(killin-5, do-10)
dep(thats-12, think-11)
nsubj(wrong-13, thats-12)
xcomp(do-10, wrong-13)
det(way-19, the-17)
amod(way-19, same-18)
prep_in(want-22, way-19)
nsubj(want-22, she-20)
xsubj(protect-24, she-20)
aux(want-22, might-21)
conj_and(killin-5, want-22)
conj_but(do-10, want-22)
aux(protect-24, to-23)
xcomp(want-22, protect-24)
det(unborn-26, that-25)
dobj(protect-24, unborn-26)
prepc_from(protect-24, going-28)
prep_through(going-28, pain-30)
prep_through(going-28, trials-32)
conj_and(pain-30, trials-32)
det(future-35, the-34)
prep_in(going-28, future-35)

