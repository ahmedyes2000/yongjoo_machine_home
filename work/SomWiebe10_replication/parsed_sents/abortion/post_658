(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP quote)
        (NP
          (NP (NNP Genesis))
          (CC and)
          (NP
            (NP (DT the) (NN creation))
            (PP (IN of)
              (NP (NN man)))))
        (, ,)
        (S
          (VP (VBG using)
            (NP (DT the) (NNP Hebrew) (NN word))
            (PP (IN for) (`` ``)
              (NP (NN breath))
              ('' ''))
            (S
              (VP (TO to)
                (VP (VB prove)
                  (NP (PRP$ your) (NN point)))))))))
    (: ;)
    (S
      (ADVP (RB however))
      (, ,)
      (NP (PRP you))
      (VP (VB forget)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (DT the)
              (ADJP (RB truely) (JJ important))
              (NN part))
            (ADVP (RB here))
            (VP (VBD was))))))
    (: :)
    (S
      (NP (NNP Adam))
      (VP (VBD did)
        (SBAR
          (S
            (NP (NNP NOT))
            (VP (VBP take)
              (NP (DT the) (NN breath)))))))
    (, ,)
    (S
      (NP (NNP God))
      (VP (VBD did)
        (NP (PRP it))
        (PP (IN FOR)
          (NP (NNP Adam)))))
    (. .)))

nsubj(quote-2, You-1)
root(ROOT-0, quote-2)
dobj(quote-2, Genesis-3)
det(creation-6, the-5)
dobj(quote-2, creation-6)
conj_and(Genesis-3, creation-6)
prep_of(creation-6, man-8)
partmod(quote-2, using-10)
xcomp(quote-2, using-10)
det(word-13, the-11)
nn(word-13, Hebrew-12)
dobj(using-10, word-13)
prep_for(using-10, breath-16)
aux(prove-19, to-18)
xcomp(using-10, prove-19)
poss(point-21, your-20)
dobj(prove-19, point-21)
advmod(forget-26, however-23)
nsubj(forget-26, you-25)
parataxis(quote-2, forget-26)
dobj(was-33, what-27)
det(part-31, the-28)
advmod(important-30, truely-29)
amod(part-31, important-30)
nsubj(was-33, part-31)
advmod(was-33, here-32)
ccomp(forget-26, was-33)
nsubj(did-36, Adam-35)
parataxis(quote-2, did-36)
nsubj(take-38, NOT-37)
ccomp(did-36, take-38)
det(breath-40, the-39)
dobj(take-38, breath-40)
nsubj(did-43, God-42)
ccomp(quote-2, did-43)
dobj(did-43, it-44)
prep_for(did-43, Adam-46)

(ROOT
  (S
    (ADVP (RB Therefore))
    (, ,)
    (S
      (NP (NNP Adam))
      (VP (VBD did) (RB n't)
        (VP (VB cause)
          (NP (PRP himself))
          (PP (TO to)
            (NP (NN breath))))))
    (CC but)
    (S
      (NP (NNP God))
      (VP (VBD put)
        (NP
          (NP (DT that) (NN breath))
          (PP (IN of)
            (NP (NN life))))
        (PP (IN within)
          (NP (NNP Adam)))))
    (. .)))

advmod(cause-6, Therefore-1)
nsubj(cause-6, Adam-3)
aux(cause-6, did-4)
neg(cause-6, n't-5)
root(ROOT-0, cause-6)
dobj(cause-6, himself-7)
prep_to(cause-6, breath-9)
nsubj(put-12, God-11)
conj_but(cause-6, put-12)
det(breath-14, that-13)
dobj(put-12, breath-14)
prep_of(breath-14, life-16)
prep_within(put-12, Adam-18)

(ROOT
  (S
    (S
      (NP (JJ Same))
      (VP (VBZ goes)
        (PP (IN for)
          (NP (DT the) (NNS babies)))))
    (: :)
    (S
      (SBAR (IN while)
        (S
          (NP (PRP they))
          (VP (VBP 've)
            (ADVP (RB never))
            (VP (VBN taken)
              (NP (NN air))
              (PP (IN in)
                (PP (IN through)
                  (NP (PRP$ their) (NN lung))))))))
      (, ,)
      (SBAR (IN though)
        (S
          (NP (PRP they))
          (VP (VBP do)
            (VP (VB get)
              (NP
                (NP (NN oxygen))
                (PRN (-LRB- -LRB-)
                  (NP
                    (NP (DT the) (JJ main) (NN purpose))
                    (PP (IN of)
                      (NP (NN breathing))))
                  (-RRB- -RRB-)))
              (PP (IN through)
                (NP
                  (NP (PRP$ their) (NN mother))
                  (VP (VBG making)
                    (SBAR (IN that)
                      (S
                        (NP (DT a) (JJ flawed) (NN statement))
                        (ADVP (RB anyway)))))))))))
      (, ,)
      (NP (PRP they))
      (ADVP (RB still))
      (VP (VBP have)
        (NP
          (NP (DT the) (NN breath))
          (PP (IN of)
            (NP
              (NP (NN life))
              (PP (IN in)
                (NP (PRP them))))))))
    (. .)))

nsubj(goes-2, Same-1)
root(ROOT-0, goes-2)
det(babies-5, the-4)
prep_for(goes-2, babies-5)
mark(taken-11, while-7)
nsubj(taken-11, they-8)
aux(taken-11, 've-9)
neg(taken-11, never-10)
advcl(have-42, taken-11)
dobj(taken-11, air-12)
prep(taken-11, in-13)
pcomp(in-13, through-14)
poss(lung-16, their-15)
prep_through(in-13, lung-16)
mark(get-21, though-18)
nsubj(get-21, they-19)
aux(get-21, do-20)
advcl(have-42, get-21)
dobj(get-21, oxygen-22)
det(purpose-26, the-24)
amod(purpose-26, main-25)
dep(oxygen-22, purpose-26)
prep_of(purpose-26, breathing-28)
poss(mother-32, their-31)
prep_through(get-21, mother-32)
partmod(mother-32, making-33)
complm(statement-37, that-34)
det(statement-37, a-35)
amod(statement-37, flawed-36)
dep(making-33, statement-37)
advmod(statement-37, anyway-38)
nsubj(have-42, they-40)
advmod(have-42, still-41)
parataxis(goes-2, have-42)
det(breath-44, the-43)
dobj(have-42, breath-44)
prep_of(breath-44, life-46)
prep_in(life-46, them-48)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (SBAR
        (S
          (NP (NNP God) (POS 's))
          (VP (TO to)
            (VP (VB give)
              (S
                (NP (RB not) (PRP ours))
                (VP (TO to)
                  (VP (VB take)))))))))
    (. .)))

nsubj(is-2, That-1)
root(ROOT-0, is-2)
nsubj(give-6, God-3)
possessive(God-3, 's-4)
aux(give-6, to-5)
ccomp(is-2, give-6)
xcomp(is-2, give-6)
neg(ours-8, not-7)
nsubj(take-10, ours-8)
aux(take-10, to-9)
xcomp(give-6, take-10)

