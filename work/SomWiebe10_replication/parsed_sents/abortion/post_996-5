(ROOT
  (S
    (NP (EX There))
    (VP (VBD stored)
      (PP (IN in)
        (NP (PRP you)))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP do) (RB n't)
            (VP
              (VP (VB jack)
                (NP (PRP it)))
              (CC or)
              (VP
                (VP (VB screw)
                  (SBAR
                    (S
                      (NP (PRP they))
                      (VP (VBP 're)
                        (VP (VBN dissolved)
                          (PP (IN in)
                            (NP (DT the) (NN body))))))))
                (CC or)
                (VP (VB come)
                  (PRT (RP out))
                  (PP (IN in)
                    (NP (PRP$ your) (NN sleep))))))))))
    (. .)))

expl(stored-2, There-1)
root(ROOT-0, stored-2)
prep_in(stored-2, you-4)
mark(jack-10, if-6)
nsubj(jack-10, you-7)
nsubj(screw-13, you-7)
aux(jack-10, do-8)
neg(jack-10, n't-9)
advcl(stored-2, jack-10)
dobj(jack-10, it-11)
advcl(stored-2, screw-13)
conj_or(jack-10, screw-13)
nsubjpass(dissolved-16, they-14)
auxpass(dissolved-16, 're-15)
ccomp(screw-13, dissolved-16)
det(body-19, the-18)
prep_in(dissolved-16, body-19)
conj_or(jack-10, come-21)
conj_or(screw-13, come-21)
prt(come-21, out-22)
poss(sleep-25, your-24)
prep_in(come-21, sleep-25)

