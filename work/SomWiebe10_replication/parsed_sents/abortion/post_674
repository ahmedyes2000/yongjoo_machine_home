(ROOT
  (S
    (PP (IN Of)
      (NP (NN course)))
    (NP (NN conception))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ necessary) (NN condition))
        (PP (IN for)
          (NP (DT a) (JJ new) (JJ human) (NN life)))
        (S
          (VP (TO to)
            (VP
              (VP (VB argue)
                (ADVP (RB otherwise)))
              (CC or)
              (ADVP (RB even))
              (VP (VB bring)
                (NP (PRP it))
                (PP (IN into)
                  (NP
                    (NP (NN doubt))
                    (SBAR
                      (S
                        (VP (MD would)
                          (ADVP (RB simply))
                          (VP (VB be)
                            (NP
                              (NP (DT a) (NN waste))
                              (PP (IN of)
                                (NP (NN time))))))))))))))))
    (. .)))

prep_of(condition-7, course-2)
nsubj(condition-7, conception-3)
cop(condition-7, is-4)
det(condition-7, a-5)
amod(condition-7, necessary-6)
root(ROOT-0, condition-7)
det(life-12, a-9)
amod(life-12, new-10)
amod(life-12, human-11)
prep_for(condition-7, life-12)
aux(argue-14, to-13)
infmod(condition-7, argue-14)
advmod(argue-14, otherwise-15)
infmod(condition-7, even-17)
advmod(argue-14, even-17)
conj_or(argue-14, even-17)
infmod(condition-7, bring-18)
conj_or(argue-14, bring-18)
dobj(bring-18, it-19)
prep_into(bring-18, doubt-21)
aux(waste-26, would-22)
advmod(waste-26, simply-23)
cop(waste-26, be-24)
det(waste-26, a-25)
rcmod(doubt-21, waste-26)
prep_of(waste-26, time-28)

(ROOT
  (S
    (INTJ (DT That) (VBZ is))
    (, ,)
    (S
      (S
        (VP (VBG assuming)
          (NP (PRP we))))
      (VP (VBP have)
        (NP
          (NP (DT the) (JJ same) (NN definition))
          (PP (IN of)
            (NP (NN conception))))))
    (. .)))

dep(have-6, That-1)
dep(That-1, is-2)
csubj(have-6, assuming-4)
dobj(assuming-4, we-5)
root(ROOT-0, have-6)
det(definition-9, the-7)
amod(definition-9, same-8)
dobj(have-6, definition-9)
prep_of(definition-9, conception-11)

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (VP (VBG looking)
          (PP (IN at)
            (ADVP
              (NP (DT the) (NN issue))
              (RB logically))))))
    (, ,)
    (NP (PRP I))
    (VP (VBP have) (RB n't)
      (VP (VBN seen)
        (NP (DT a) (JJ single) (JJ convincing) (NN argument))
        (SBAR (IN that)
          (S
            (NP (DT the) (JJ new) (NN life))
            (VP (VBZ begins)
              (PP (IN at)
                (NP (NN conception))))))))
    (. .)))

advmod(looking-2, When-1)
advcl(seen-11, looking-2)
prep(looking-2, at-3)
det(issue-5, the-4)
npadvmod(logically-6, issue-5)
pcomp(at-3, logically-6)
nsubj(seen-11, I-8)
aux(seen-11, have-9)
neg(seen-11, n't-10)
root(ROOT-0, seen-11)
det(argument-15, a-12)
amod(argument-15, single-13)
amod(argument-15, convincing-14)
dobj(seen-11, argument-15)
complm(begins-20, that-16)
det(life-19, the-17)
amod(life-19, new-18)
nsubj(begins-20, life-19)
ccomp(seen-11, begins-20)
prep_at(begins-20, conception-22)

(ROOT
  (S
    (PP (IN With)
      (NP (JJ equal) (NN certainty)))
    (, ,)
    (NP (NN conception))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (JJ sufficient) (NN condition))
        (PP (IN for)
          (NP (JJ new) (NN life))))
      (ADVP (IN at) (JJS least))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VB define)
            (NP (NN life))
            (PP (IN as)
              (NP (JJ independent) (NN life)))))))
    (. .)))

amod(certainty-3, equal-2)
prep_with(condition-10, certainty-3)
nsubj(condition-10, conception-5)
cop(condition-10, is-6)
neg(condition-10, not-7)
det(condition-10, a-8)
amod(condition-10, sufficient-9)
root(ROOT-0, condition-10)
amod(life-13, new-12)
prep_for(condition-10, life-13)
advmod(condition-10, at-14)
pobj(at-14, least-15)
mark(define-19, if-17)
nsubj(define-19, you-18)
advcl(condition-10, define-19)
dobj(define-19, life-20)
amod(life-23, independent-22)
prep_as(define-19, life-23)

(ROOT
  (S
    (PP (IN Without)
      (NP (DT a) (NN mother)
        (S
          (VP (TO to)
            (VP (VB incubate)
              (NP (DT a) (NN zygote))
              (PP (IN into)
                (NP
                  (NP (DT a) (NN fetus))
                  (CC and)
                  (ADVP (RB eventually))
                  (NP (DT an) (NN infant)))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP (DT no) (JJ independent) (JJ new) (NN life)))
    (. .)))

det(mother-3, a-2)
prep_without(is-17, mother-3)
aux(incubate-5, to-4)
infmod(mother-3, incubate-5)
det(zygote-7, a-6)
dobj(incubate-5, zygote-7)
det(fetus-10, a-9)
prep_into(incubate-5, fetus-10)
prep_into(incubate-5, eventually-12)
advmod(fetus-10, eventually-12)
conj_and(fetus-10, eventually-12)
det(infant-14, an-13)
prep_into(incubate-5, infant-14)
conj_and(fetus-10, infant-14)
expl(is-17, there-16)
root(ROOT-0, is-17)
det(life-21, no-18)
amod(life-21, independent-19)
amod(life-21, new-20)
nsubj(is-17, life-21)

(ROOT
  (S
    (ADVP (RB Simply))
    (VP (VB remove)
      (NP
        (NP (DT the) (NN mother))
        (PP (IN from)
          (NP
            (NP (DT the) (NN equation))
            (PP (IN after)
              (NP (NN conception))))))
      (S
        (VP (TO to)
          (VP (VB deduce)
            (NP (DT that) (NN result))))))
    (. .)))

advmod(remove-2, Simply-1)
root(ROOT-0, remove-2)
det(mother-4, the-3)
dobj(remove-2, mother-4)
det(equation-7, the-6)
prep_from(mother-4, equation-7)
prep_after(equation-7, conception-9)
aux(deduce-11, to-10)
xcomp(remove-2, deduce-11)
det(result-13, that-12)
dobj(deduce-11, result-13)

(ROOT
  (S
    (PP (IN As) (IN for)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP think)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN zygote))
                  (VP (VBZ is)
                    (PP (RB already)
                      (NP (DT a) (JJ new) (NN life)))
                    (, ,)
                    (PRN (-LRB- -LRB-)
                      (S
                        (VP (RB not) (VBG requiring)
                          (SBAR (IN that)
                            (S
                              (NP (DT the) (NN life))
                              (VP (VBP be)
                                (ADJP (JJ independent))
                                (, ,)
                                (PP (IN in)
                                  (NP (JJ other) (NNS words))))))))
                      (-RRB- -RRB-))))))))))
    (, ,)
    (S
      (VP (VBG considering)
        (NP
          (NP (NNS things))
          (PP (IN like)
            (NP (NNS warts) (, ,) (NNS moles)
              (CC and)
              (NNS tumors))))
        (NP (DT each) (IN as) (JJ new) (NNS lives))))
    (VP (MD should)
      (VP (VB lend)
        (PP (TO to)
          (NP (DT a) (JJ different) (NN perspective)))))
    (. .)))

nsubj(think-5, those-3)
prep_as_for(lend-42, those-3)
rcmod(those-3, think-5)
complm(is-9, that-6)
det(zygote-8, the-7)
nsubj(is-9, zygote-8)
ccomp(think-5, is-9)
prep(is-9, already-10)
det(life-13, a-11)
amod(life-13, new-12)
pobj(already-10, life-13)
neg(requiring-17, not-16)
parataxis(is-9, requiring-17)
complm(independent-22, that-18)
det(life-20, the-19)
nsubj(independent-22, life-20)
cop(independent-22, be-21)
ccomp(requiring-17, independent-22)
amod(words-26, other-25)
prep_in(independent-22, words-26)
csubj(lend-42, considering-29)
iobj(considering-29, things-30)
prep_like(things-30, warts-32)
prep_like(things-30, moles-34)
conj_and(warts-32, moles-34)
prep_like(things-30, tumors-36)
conj_and(warts-32, tumors-36)
det(lives-40, each-37)
amod(lives-40, as-38)
amod(lives-40, new-39)
dobj(considering-29, lives-40)
aux(lend-42, should-41)
root(ROOT-0, lend-42)
det(perspective-46, a-44)
amod(perspective-46, different-45)
prep_to(lend-42, perspective-46)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is) (RB n't)
        (NP (DT a)
          (ADJP (RB completely) (JJ absurd))
          (NN position)
          (S
            (VP (TO to)
              (VP (VB hold)))))))
    (, ,)
    (CC but)
    (S
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (ADVP (RB certainly))
          (ADJP (JJ eccentric))))
      (CC and)
      (S
        (PP (RB not)
          (NP (CD one)))
        (NP (PRP I))
        (VP (VBP feel)
          (VP (VBN compelled)
            (PP (IN by))))))
    (. .)))

nsubj(position-7, This-1)
cop(position-7, is-2)
neg(position-7, n't-3)
det(position-7, a-4)
advmod(absurd-6, completely-5)
amod(position-7, absurd-6)
root(ROOT-0, position-7)
aux(hold-9, to-8)
infmod(position-7, hold-9)
nsubj(eccentric-15, it-12)
cop(eccentric-15, is-13)
advmod(eccentric-15, certainly-14)
conj_but(position-7, eccentric-15)
advcl(feel-20, not-17)
prep(feel-20, not-17)
pobj(not-17, one-18)
nsubj(feel-20, I-19)
conj_but(position-7, feel-20)
conj_and(eccentric-15, feel-20)
dep(feel-20, compelled-21)
prep(compelled-21, by-22)

(ROOT
  (S (RB Then)
    (NP (EX there))
    (VP (VBP are)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBP say)
              (SBAR (IN that)
                (S
                  (NP (DT the) (NN zygote))
                  (VP (VBZ is)
                    (NP (DT a) (JJ new) (NN life))
                    (SBAR (IN because)
                      (S
                        (NP (PRP it))
                        (VP (MD will)
                          (ADVP (RB eventually))
                          (VP (VB be)
                            (NP (DT an) (JJ independent) (NN life))))))))))))))
    (. .)))

advmod(are-3, Then-1)
expl(are-3, there-2)
root(ROOT-0, are-3)
nsubj(are-3, those-4)
nsubj(say-6, those-4)
rcmod(those-4, say-6)
complm(life-13, that-7)
det(zygote-9, the-8)
nsubj(life-13, zygote-9)
cop(life-13, is-10)
det(life-13, a-11)
amod(life-13, new-12)
ccomp(say-6, life-13)
mark(life-21, because-14)
nsubj(life-21, it-15)
aux(life-21, will-16)
advmod(life-21, eventually-17)
cop(life-21, be-18)
det(life-21, an-19)
amod(life-21, independent-20)
advcl(life-13, life-21)

(ROOT
  (S
    (PP (TO To)
      (NP (PRP me)))
    (NP (DT this))
    (VP (VBZ seems)
      (ADJP
        (ADJP (RB no) (RBR more) (JJ convincing)
          (PP (IN than)
            (S
              (VP (VBG arguing)
                (SBAR (IN that)
                  (S
                    (NP
                      (NP (DT a) (NN chunk))
                      (PP (IN of)
                        (NP (NN metal))))
                    (VP (VBZ is)
                      (NP (DT a) (JJ new) (NN car)))))))))
        (SBAR (IN because)
          (S
            (NP (PRP it))
            (VP (MD will)
              (ADVP (RB eventually))
              (VP (VB be)
                (VP (VBN used)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN manufacturing))
                      (PP (IN of)
                        (NP (DT a) (NN car))))))))))))
    (. .)))

prep_to(convincing-7, me-2)
nsubj(convincing-7, this-3)
cop(convincing-7, seems-4)
advmod(convincing-7, no-5)
advmod(convincing-7, more-6)
root(ROOT-0, convincing-7)
prepc_than(convincing-7, arguing-9)
complm(car-18, that-10)
det(chunk-12, a-11)
nsubj(car-18, chunk-12)
prep_of(chunk-12, metal-14)
cop(car-18, is-15)
det(car-18, a-16)
amod(car-18, new-17)
ccomp(arguing-9, car-18)
mark(used-24, because-19)
nsubjpass(used-24, it-20)
aux(used-24, will-21)
advmod(used-24, eventually-22)
auxpass(used-24, be-23)
ccomp(convincing-7, used-24)
det(manufacturing-27, the-26)
prep_in(used-24, manufacturing-27)
det(car-30, a-29)
prep_of(manufacturing-27, car-30)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT a) (JJ large) (JJ emotional) (NN component))
      (PP (TO to)
        (NP (JJ many) (NNS peoples) ('' '') (NNS positions)))
      (PP (IN on)
        (NP (DT this) (NN issue)))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP am)
            (ADJP (RBR less) (JJ affected)
              (PP (IN by)))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(component-6, a-3)
amod(component-6, large-4)
amod(component-6, emotional-5)
nsubj(is-2, component-6)
amod(positions-11, many-8)
nn(positions-11, peoples-9)
prep_to(is-2, positions-11)
det(issue-14, this-13)
prep_on(is-2, issue-14)
complm(affected-19, that-15)
nsubj(affected-19, I-16)
cop(affected-19, am-17)
advmod(affected-19, less-18)
ccomp(is-2, affected-19)
prep(affected-19, by-20)

