(ROOT
  (S (CC But)
    (S
      (VP (TO to)
        (VP (VB combine)
          (NP
            (NP (DT those) (NNS things))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP do)
                  (NP (NN work))
                  (PP (IN with)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (VP (VBZ Does)
                          (NP (NN work))
                          (PP (IN in)
                            (NP (NN capitalism)))
                          (: ...)
                          (S
                            (VP (TO to)
                              (VP (VB find)
                                (NP
                                  (NP (NNP the) ('' '') (NNP Golden) (NNP Mean))
                                  ('' '')
                                  (CC and)
                                  (NP
                                    (NP (NN untie))
                                    (NP (DT the) (JJ Gordian) (NN knot))))))))))))))))))
    (: ...)
    (S
      (S
        (NP (PRP it))
        (VP (MD may) (RB not)
          (VP (VB be)
            (ADJP (JJ possible)))))
      (, ,)
      (CC but)
      (S
        (NP
          (NP (PRP$ our) (NN love))
          (PP (IN of)
            (NP (NNS labels))))
        (ADVP (RB certainly))
        (VP (VBZ is) (RB n't)
          (VP (VBG helping)))))
    (. .)))

cc(combine-3, But-1)
aux(combine-3, to-2)
root(ROOT-0, combine-3)
det(things-5, those-4)
dobj(combine-3, things-5)
nsubj(do-7, things-5)
rcmod(things-5, do-7)
dobj(do-7, work-8)
nsubj(Does-11, what-10)
prepc_with(do-7, Does-11)
dobj(Does-11, work-12)
prep_in(Does-11, capitalism-14)
aux(find-17, to-16)
parataxis(Does-11, find-17)
xcomp(Does-11, find-17)
nn(Mean-21, the-18)
nn(Mean-21, Golden-20)
dobj(find-17, Mean-21)
dobj(find-17, untie-24)
conj_and(Mean-21, untie-24)
det(knot-27, the-25)
amod(knot-27, Gordian-26)
dep(untie-24, knot-27)
nsubj(possible-33, it-29)
aux(possible-33, may-30)
neg(possible-33, not-31)
cop(possible-33, be-32)
parataxis(combine-3, possible-33)
poss(love-37, our-36)
nsubj(helping-43, love-37)
prep_of(love-37, labels-39)
advmod(helping-43, certainly-40)
aux(helping-43, is-41)
neg(helping-43, n't-42)
parataxis(combine-3, helping-43)
conj_but(possible-33, helping-43)

