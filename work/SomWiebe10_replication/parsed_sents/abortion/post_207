(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (ADJP (JJ correct)
        (PP (IN in)
          (S
            (VP (VBG pointing)
              (PRT (RP out))
              (SBAR (IN that)
                (S
                  (NP (DT the) (JJ pro-life) (NN ethic))
                  (VP (MD must)
                    (VP (VB take)
                      (PP (IN into)
                        (NP
                          (NP (NN account))
                          (NP (DT the) (JJ full) (NN spectrum)))))))))))))
    (. .)))

nsubj(correct-3, You-1)
cop(correct-3, are-2)
root(ROOT-0, correct-3)
prepc_in(correct-3, pointing-5)
prt(pointing-5, out-6)
complm(take-12, that-7)
det(ethic-10, the-8)
amod(ethic-10, pro-life-9)
nsubj(take-12, ethic-10)
aux(take-12, must-11)
ccomp(pointing-5, take-12)
prep_into(take-12, account-14)
det(spectrum-17, the-15)
amod(spectrum-17, full-16)
dep(account-14, spectrum-17)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (PRP you))
    (VP (MD can) (RB not)
      (VP (VB equate)
        (NP
          (NP (NNS issues))
          (PP (IN of)
            (NP
              (NP (DT the) (NN quality))
              (PP (IN of)
                (NP
                  (NP (NN life))
                  (PRN (-LRB- -LRB-)
                    (NP (NN poverty) (, ,) (NN hunger) (, ,) (NN torture))
                    (-RRB- -RRB-)))))))
        (PP (IN with)
          (NP
            (NP
              (NP (NNS issues))
              (PP (IN of)
                (NP (NN life)))
              (ADVP (PRP itself)))
            (PRN (-LRB- -LRB-)
              (NP
                (NP (NN abortion))
                (, ,)
                (NP (NN euthanasia)))
              (-RRB- -RRB-))))))
    (. .)))

advmod(equate-6, However-1)
nsubj(equate-6, you-3)
aux(equate-6, can-4)
neg(equate-6, not-5)
root(ROOT-0, equate-6)
dobj(equate-6, issues-7)
det(quality-10, the-9)
prep_of(issues-7, quality-10)
prep_of(quality-10, life-12)
nn(torture-18, poverty-14)
dep(torture-18, hunger-16)
appos(life-12, torture-18)
prep_with(equate-6, issues-21)
prep_of(issues-21, life-23)
advmod(issues-21, itself-24)
dep(issues-21, abortion-26)
appos(abortion-26, euthanasia-28)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ does) (RB not)
        (VP (VB mean)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP are)
                (ADJP (JJ perfect))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP do) (RB n't)
        (VP (VB know)
          (SBAR (IN if)
            (S
              (NP (PDT such) (DT a) (NN candidate))
              (VP (VBZ has)
                (ADVP (RB ever))
                (VP (VBN existed))))))))
    (. .)))

nsubj(mean-4, This-1)
aux(mean-4, does-2)
neg(mean-4, not-3)
root(ROOT-0, mean-4)
nsubj(perfect-7, they-5)
cop(perfect-7, are-6)
ccomp(mean-4, perfect-7)
nsubj(know-13, I-10)
aux(know-13, do-11)
neg(know-13, n't-12)
conj_and(mean-4, know-13)
mark(existed-20, if-14)
predet(candidate-17, such-15)
det(candidate-17, a-16)
nsubj(existed-20, candidate-17)
aux(existed-20, has-18)
advmod(existed-20, ever-19)
advcl(know-13, existed-20)

(ROOT
  (S
    (NP (PRP We))
    (VP (MD must)
      (VP (VB vote)
        (PP (IN for)
          (NP
            (NP (DT the) (NN candidate))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (`` ``) (VBZ values)
                  (NP (NN life))
                  ('' '')
                  (NP
                    (NP (DT the) (JJS most))
                    (, ,)
                    (CC and)
                    (SBAR
                      (WHADVP (WRB when))
                      (S
                        (S
                          (VP (VBG comparing)
                            (NP
                              (NP (NN someone))
                              (SBAR
                                (WHNP (WP who))
                                (S
                                  (VP (VBZ endorses)
                                    (NP
                                      (NP
                                        (NP (NN murder))
                                        (PRN (-LRB- -LRB-)
                                          (NP (NN aka) (NN abortion))
                                          (-RRB- -RRB-)))
                                      (PP (IN on)
                                        (NP (NN demand))))))))))
                        (, ,)
                        (NP (DT the) (NN choice))
                        (VP (VBZ is)
                          (ADJP (RB fairly) (JJ easy)))))))))))))
    (. .)))

nsubj(vote-3, We-1)
aux(vote-3, must-2)
root(ROOT-0, vote-3)
det(candidate-6, the-5)
prep_for(vote-3, candidate-6)
nsubj(values-9, candidate-6)
rcmod(candidate-6, values-9)
dobj(values-9, life-10)
det(most-13, the-12)
dobj(values-9, most-13)
advmod(easy-33, when-16)
partmod(easy-33, comparing-17)
dobj(comparing-17, someone-18)
nsubj(endorses-20, someone-18)
rcmod(someone-18, endorses-20)
dobj(endorses-20, murder-21)
nn(abortion-24, aka-23)
appos(murder-21, abortion-24)
prep_on(murder-21, demand-27)
det(choice-30, the-29)
nsubj(easy-33, choice-30)
cop(easy-33, is-31)
advmod(easy-33, fairly-32)
dobj(values-9, easy-33)
conj_and(most-13, easy-33)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (PRP we))
    (VP (VBP do)
      (NP (NN fight))
      (PP (IN against)
        (NP (NNP torture)))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (ADJP (JJ bad))))))
    (. .)))

dep(do-4, Yes-1)
nsubj(do-4, we-3)
root(ROOT-0, do-4)
dobj(do-4, fight-5)
prep_against(do-4, torture-7)
mark(bad-11, because-8)
nsubj(bad-11, it-9)
cop(bad-11, is-10)
advcl(do-4, bad-11)

(ROOT
  (S (CC But)
    (NP (DT all) (NNS issues))
    (VP (VBP are) (RB not)
      (ADJP (JJ equal)))
    (. .)))

cc(equal-6, But-1)
det(issues-3, all-2)
nsubj(equal-6, issues-3)
cop(equal-6, are-4)
neg(equal-6, not-5)
root(ROOT-0, equal-6)

(ROOT
  (S
    (NP (DT Some) (NNS issues))
    (VP (VBP are)
      (NP (NN life)
        (CC and)
        (NN death) (NNS issues)))
    (. .)))

det(issues-2, Some-1)
nsubj(issues-7, issues-2)
cop(issues-7, are-3)
nn(issues-7, life-4)
conj_and(life-4, death-6)
nn(issues-7, death-6)
root(ROOT-0, issues-7)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP value)
      (NP
        (NP (DT the) (NN life))
        (PP (DT both) (IN of)
          (NP
            (NP (DT the) (NN born))
            (CC and)
            (NP (NN unborn))))))
    (. .)))

nsubj(value-2, We-1)
root(ROOT-0, value-2)
det(life-4, the-3)
dobj(value-2, life-4)
dep(life-4, both-5)
det(born-8, the-7)
prep_of(life-4, born-8)
prep_of(life-4, unborn-10)
conj_and(born-8, unborn-10)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR
      (WHADVP (WRB when))
      (S
        (VP (VBN given)
          (NP (DT a) (NN person))
          (NP
            (NP
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ is)
                    (VP (VBG being)
                      (ADJP (JJ tortured))))))
              (, ,)
              (NP
                (NP (DT a) (NN person))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ is)
                      (ADJP (JJ homeless)))))))
            (, ,)
            (CC and)
            (NP
              (NP (DT a) (NN person))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ is)
                    (VP (VBG going)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN killed))))))))))))))
    (NP
      (NP (PRP$ my) (NNS priorities))
      (, ,)
      (NP (PRP$ my) (JJS biggest) (NN fight))
      (, ,))
    (VP (VBZ is)
      (VP (VBG going)
        (S
          (VP (TO to)
            (VP (VB be)
              (PP (IN for)
                (NP
                  (NP (DT the) (NN person))
                  (VP (IN about)
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN killed)))))))))))))
    (. .)))

advmod(going-35, However-1)
advmod(given-4, when-3)
advcl(going-35, given-4)
det(person-6, a-5)
iobj(given-4, person-6)
nsubj(tortured-10, who-7)
aux(tortured-10, is-8)
cop(tortured-10, being-9)
dep(person-13, tortured-10)
det(person-13, a-12)
dobj(given-4, person-13)
nsubj(homeless-16, person-13)
cop(homeless-16, is-15)
rcmod(person-13, homeless-16)
det(person-20, a-19)
conj_and(person-13, person-20)
nsubj(going-23, person-20)
aux(going-23, is-22)
rcmod(person-20, going-23)
aux(killed-26, to-24)
auxpass(killed-26, be-25)
xcomp(going-23, killed-26)
poss(priorities-28, my-27)
nsubj(going-35, priorities-28)
xsubj(be-37, priorities-28)
poss(fight-32, my-30)
amod(fight-32, biggest-31)
appos(priorities-28, fight-32)
aux(going-35, is-34)
root(ROOT-0, going-35)
aux(be-37, to-36)
xcomp(going-35, be-37)
det(person-40, the-39)
prep_for(be-37, person-40)
dep(person-40, about-41)
aux(killed-44, to-42)
auxpass(killed-44, be-43)
xcomp(about-41, killed-44)

(ROOT
  (S
    (NP (DT This))
    (VP
      (VP (VBZ does) (RB not)
        (VP (VB mean)
          (SBAR
            (S
              (NP (DT the) (NNS others))
              (VP (VBP are)
                (VP (VBG going)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN ignored)))))))))))
      (, ,)
      (CC but)
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ basic) (NN understanding))
          (SBAR (IN that)
            (S
              (NP (RB not) (NN everything))
              (VP (VBZ is)
                (ADJP (JJ equal))))))))
    (. .)))

nsubj(mean-4, This-1)
aux(mean-4, does-2)
neg(mean-4, not-3)
root(ROOT-0, mean-4)
det(others-6, the-5)
nsubj(going-8, others-6)
xsubj(ignored-11, others-6)
aux(going-8, are-7)
ccomp(mean-4, going-8)
aux(ignored-11, to-9)
auxpass(ignored-11, be-10)
xcomp(going-8, ignored-11)
cop(understanding-17, is-14)
det(understanding-17, a-15)
amod(understanding-17, basic-16)
conj_but(mean-4, understanding-17)
complm(equal-22, that-18)
neg(everything-20, not-19)
nsubj(equal-22, everything-20)
cop(equal-22, is-21)
dep(understanding-17, equal-22)

(ROOT
  (S
    (NP
      (NP (NNP Voting))
      (PP (IN for)
        (NP (DT a) (NN candidate))))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (JJ full) (NN endorsement))
        (PP (IN of)
          (NP (PRP$ their) (JJ entire) (NN platform)))))
    (. .)))

nsubj(endorsement-9, Voting-1)
det(candidate-4, a-3)
prep_for(Voting-1, candidate-4)
cop(endorsement-9, is-5)
neg(endorsement-9, not-6)
det(endorsement-9, a-7)
amod(endorsement-9, full-8)
root(ROOT-0, endorsement-9)
poss(platform-13, their-11)
amod(platform-13, entire-12)
prep_of(endorsement-9, platform-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN vote))
        (PP (IN for)
          (NP (DT the) (JJS best) (NN candidate)))))
    (. .)))

nsubj(vote-4, It-1)
cop(vote-4, is-2)
det(vote-4, a-3)
root(ROOT-0, vote-4)
det(candidate-8, the-6)
amod(candidate-8, best-7)
prep_for(vote-4, candidate-8)

