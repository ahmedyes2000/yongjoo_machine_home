(ROOT
  (S
    (NP (NNP Abortion))
    (VP (MD might)
      (VP (VB forestall)
        (NP
          (NP (DT the) (JJ potential) (NN birth))
          (PP (IN of)
            (NP (DT another) (NNP Hitler))))))
    (. .)))

nsubj(forestall-3, Abortion-1)
aux(forestall-3, might-2)
root(ROOT-0, forestall-3)
det(birth-6, the-4)
amod(birth-6, potential-5)
dobj(forestall-3, birth-6)
det(Hitler-9, another-8)
prep_of(birth-6, Hitler-9)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT a) (NN counter-argument))
          (PP (TO to)
            (NP (DT the) (NN notion))))
        (SBAR (IN that)
          (S
            (NP (NN abortion))
            (VP (MD could)
              (VP (VB have)
                (VP (VBN wiped)
                  (PRT (RP out))
                  (NP
                    (NP (DT some))
                    (PP (IN of)
                      (NP (DT the) (JJS greatest) (JJ social) (NNS contributors))))
                  (PP (IN in)
                    (NP (NN history))))))))))
    (: ;)
    (S
      (NP (PRP it))
      (ADVP (RB also))
      (VP (MD could)
        (VP (VB have)
          (VP (VBN wiped)
            (PP (IN out)
              (NP
                (NP (DT some))
                (PP (IN of)
                  (NP
                    (NP (DT the) (JJS worst) (NNS individuals))
                    (PP (IN in)
                      (NP (NN history)))))))))))
    (. .)))

nsubj(counter-argument-4, This-1)
cop(counter-argument-4, is-2)
det(counter-argument-4, a-3)
root(ROOT-0, counter-argument-4)
det(notion-7, the-6)
prep_to(counter-argument-4, notion-7)
complm(wiped-12, that-8)
nsubj(wiped-12, abortion-9)
aux(wiped-12, could-10)
aux(wiped-12, have-11)
ccomp(counter-argument-4, wiped-12)
prt(wiped-12, out-13)
dobj(wiped-12, some-14)
det(contributors-19, the-16)
amod(contributors-19, greatest-17)
amod(contributors-19, social-18)
prep_of(some-14, contributors-19)
prep_in(wiped-12, history-21)
nsubj(wiped-27, it-23)
advmod(wiped-27, also-24)
aux(wiped-27, could-25)
aux(wiped-27, have-26)
parataxis(counter-argument-4, wiped-27)
prep_out(wiped-27, some-29)
det(individuals-33, the-31)
amod(individuals-33, worst-32)
prep_of(some-29, individuals-33)
prep_in(individuals-33, history-35)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN fetus))
        (VP (VBD was)
          (VP (VBN defined)
            (PP (IN as)
              (NP (DT a) (`` ``) (NN person) ('' '')))))))
    (, ,)
    (NP (DT the) (JJ legal) (NNS shifts))
    (VP (MD would)
      (VP (VB be)
        (ADJP (RB too) (JJ dramatic)
          (SBAR
            (S
              (NP (DT No) (NNS abortions))
              (VP (MD would)
                (VP (VB be)
                  (VP (VBN permitted)
                    (PP (IN for)
                      (NP
                        (NP (DT any) (NN reason))
                        (, ,)
                        (PP (VBG including)
                          (NP (NN rape)
                            (CC or)
                            (NN incest)))))))))))))
    (. .)))

mark(defined-5, If-1)
det(fetus-3, a-2)
nsubjpass(defined-5, fetus-3)
auxpass(defined-5, was-4)
advcl(dramatic-18, defined-5)
det(person-9, a-7)
prep_as(defined-5, person-9)
det(shifts-14, the-12)
amod(shifts-14, legal-13)
nsubj(dramatic-18, shifts-14)
aux(dramatic-18, would-15)
cop(dramatic-18, be-16)
advmod(dramatic-18, too-17)
root(ROOT-0, dramatic-18)
det(abortions-20, No-19)
nsubjpass(permitted-23, abortions-20)
aux(permitted-23, would-21)
auxpass(permitted-23, be-22)
dep(dramatic-18, permitted-23)
det(reason-26, any-25)
prep_for(permitted-23, reason-26)
prep_including(reason-26, rape-29)
prep_including(reason-26, incest-31)
conj_or(rape-29, incest-31)

(ROOT
  (S
    (NP (DT Each) (NN miscarriage))
    (VP (MD would)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN investigated)))))))
    (. .)))

det(miscarriage-2, Each-1)
nsubj(have-4, miscarriage-2)
xsubj(investigated-7, miscarriage-2)
aux(have-4, would-3)
root(ROOT-0, have-4)
aux(investigated-7, to-5)
auxpass(investigated-7, be-6)
xcomp(have-4, investigated-7)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ legal) (NNS consequences))
      (PP (IN of)
        (NP (PDT such) (DT an) (NN amendment))))
    (VP (MD would)
      (VP (VB be)
        (ADJP (JJ massive))))
    (. .)))

det(consequences-3, The-1)
amod(consequences-3, legal-2)
nsubj(massive-10, consequences-3)
predet(amendment-7, such-5)
det(amendment-7, an-6)
prep_of(consequences-3, amendment-7)
aux(massive-10, would-8)
cop(massive-10, be-9)
root(ROOT-0, massive-10)

(ROOT
  (S
    (S
      (NP (NNP Anti) (NN abortion) (NNS activists))
      (VP
        (VP (VBP love)
          (NP (NNS babies)))
        (CC but)
        (VP (VB deprive)
          (NP
            (NP (JJ poor) (NNS children))
            (SBAR
              (S
                (NP (NNP Abortion))
                (VP (VBZ is)
                  (ADJP (JJ important)
                    (PP (TO to)
                      (S
                        (VP (VBG reducing)
                          (NP (NN over-population))
                          (ADVP (RB globally)))))))))))))
    (NP (NNP Illegalizing) (NN abortion))
    (VP (MD will)
      (VP (VB lead)
        (PP (TO to)
          (NP
            (NP (JJR more) (NNS children))
            (VP (VBG having)
              (NP (NNS children)))))))
    (. .)))

nn(activists-3, Anti-1)
nn(activists-3, abortion-2)
nsubj(love-4, activists-3)
nsubj(deprive-7, activists-3)
dep(lead-20, love-4)
dobj(love-4, babies-5)
conj_but(love-4, deprive-7)
dep(lead-20, deprive-7)
amod(children-9, poor-8)
dobj(deprive-7, children-9)
nsubj(important-12, Abortion-10)
cop(important-12, is-11)
rcmod(children-9, important-12)
prepc_to(important-12, reducing-14)
dobj(reducing-14, over-population-15)
advmod(reducing-14, globally-16)
nn(abortion-18, Illegalizing-17)
nsubj(lead-20, abortion-18)
aux(lead-20, will-19)
root(ROOT-0, lead-20)
amod(children-23, more-22)
prep_to(lead-20, children-23)
partmod(children-23, having-24)
dobj(having-24, children-25)

(ROOT
  (S
    (NP (DT Every) (NN child))
    (VP (MD should)
      (VP (VB be)
        (NP (DT a) (JJ wanted) (NN child))))))

det(child-2, Every-1)
nsubj(child-7, child-2)
aux(child-7, should-3)
cop(child-7, be-4)
det(child-7, a-5)
amod(child-7, wanted-6)
root(ROOT-0, child-7)

