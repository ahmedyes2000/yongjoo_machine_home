(ROOT
  (S
    (SBAR (IN While)
      (S
        (NP
          (NP (JJS most))
          (PP (IN of)
            (NP (PRP$ your) (NN argument))))
        (VP (VBZ is)
          (ADJP (RB very) (JJ good)))))
    (, ,)
    (NP (PRP I))
    (VP (VBP do)
      (VP (VB have)
        (NP (DT a) (NN problem))
        (PP (IN with)
          (S
            (NP (PRP you))
            (VP (VBG denying)
              (SBAR (IN that)
                (S
                  (NP (NN abortion)
                    (S
                      (VP (TO to)
                        (VP (VB save)
                          (NP
                            (NP (DT the) (NN life))
                            (PP (IN of)
                              (NP (DT a) (NN mother))))))))
                  (VP (MD can) (RB not)
                    (VP (VB be)
                      (ADJP (JJ valid))
                      (SBAR (IN if)
                        (S
                          (NP (PRP you))
                          (VP (VBP believe)
                            (S
                              (NP (DT the) (NN fetus))
                              (VP (TO to)
                                (VP (VB be)
                                  (NP (DT a) (NN person)))))))))))))))))
    (. .)))

mark(good-8, While-1)
nsubj(good-8, most-2)
poss(argument-5, your-4)
prep_of(most-2, argument-5)
cop(good-8, is-6)
advmod(good-8, very-7)
advcl(have-12, good-8)
nsubj(have-12, I-10)
aux(have-12, do-11)
root(ROOT-0, have-12)
det(problem-14, a-13)
dobj(have-12, problem-14)
nsubj(denying-17, you-16)
prepc_with(have-12, denying-17)
complm(valid-30, that-18)
nsubj(valid-30, abortion-19)
aux(save-21, to-20)
infmod(abortion-19, save-21)
det(life-23, the-22)
dobj(save-21, life-23)
det(mother-26, a-25)
prep_of(life-23, mother-26)
aux(valid-30, can-27)
neg(valid-30, not-28)
cop(valid-30, be-29)
ccomp(denying-17, valid-30)
mark(believe-33, if-31)
nsubj(believe-33, you-32)
advcl(valid-30, believe-33)
det(fetus-35, the-34)
nsubj(person-39, fetus-35)
aux(person-39, to-36)
cop(person-39, be-37)
det(person-39, a-38)
xcomp(believe-33, person-39)

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (S
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT a) (NN car) (NN crash))))
            (, ,)
            (CC and)
            (S
              (NP (CD two) (NNS people))
              (VP (VBP are)
                (ADVP (RB somehow))
                (VP (VBN fused)
                  (ADVP (RB together))
                  (PP (IN in)
                    (NP (PDT such) (DT a) (NN way)))
                  (SBAR (IN that)
                    (S
                      (NP (PRP one))
                      (VP (MD will)
                        (VP (VB live)))))))))
          (CC and)
          (S
            (NP (DT the) (JJ other))
            (VP (MD will)
              (VP (VB die)
                (SBAR
                  (SBAR (IN if)
                    (S
                      (VP (VBD seperated))))
                  (, ,)
                  (CC but)
                  (SBAR (IN if)
                    (S
                      (VP (VBD left))))))))))
      (ADVP (RB together))
      (NP (DT both))
      (VP (MD will)
        (VP (VB die))))
    (, ,) (RB then)
    (S
      (NP (DT the) (NN doctor))
      (VP
        (VP (VBZ has)
          (NP (DT a) (JJ tough) (NN decision)
            (S
              (VP (TO to)
                (VP (VB make))))))
        (, ,)
        (CC but)
        (VP
          (ADVP (RB ultimately))
          (MD should)
          (VP (VB make)))))
    (. .)))

mark(is-3, If-1)
expl(is-3, there-2)
advcl(die-37, is-3)
det(crash-6, a-4)
nn(crash-6, car-5)
nsubj(is-3, crash-6)
num(people-10, two-9)
nsubjpass(fused-13, people-10)
auxpass(fused-13, are-11)
advmod(fused-13, somehow-12)
conj_and(is-3, fused-13)
advcl(die-37, fused-13)
advmod(fused-13, together-14)
predet(way-18, such-16)
det(way-18, a-17)
prep_in(fused-13, way-18)
complm(live-22, that-19)
nsubj(live-22, one-20)
aux(live-22, will-21)
ccomp(fused-13, live-22)
det(other-25, the-24)
nsubj(die-27, other-25)
aux(die-27, will-26)
conj_and(is-3, die-27)
advcl(die-37, die-27)
mark(seperated-29, if-28)
dep(die-27, seperated-29)
mark(left-33, if-32)
dep(die-27, left-33)
conj_but(seperated-29, left-33)
advmod(die-37, together-34)
nsubj(die-37, both-35)
aux(die-37, will-36)
root(ROOT-0, die-37)
advmod(die-37, then-39)
det(doctor-41, the-40)
nsubj(has-42, doctor-41)
nsubj(make-52, doctor-41)
ccomp(die-37, has-42)
det(decision-45, a-43)
amod(decision-45, tough-44)
dobj(has-42, decision-45)
aux(make-47, to-46)
infmod(decision-45, make-47)
advmod(make-52, ultimately-50)
aux(make-52, should-51)
ccomp(die-37, make-52)
conj_but(has-42, make-52)

(ROOT
  (S
    (S
      (NP (PRP One))
      (VP (MD must)
        (VP (VB be)
          (VP (VBN saved)))))
    (CC and)
    (S
      (NP (PRP one))
      (VP (MD must)
        (VP (VB die))))
    (. .)))

nsubjpass(saved-4, One-1)
aux(saved-4, must-2)
auxpass(saved-4, be-3)
root(ROOT-0, saved-4)
nsubj(die-8, one-6)
aux(die-8, must-7)
conj_and(saved-4, die-8)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP (DT the) (JJ same) (NN scenario))
      (SBAR (RB as) (IN if)
        (S
          (NP (DT an) (NN abortion))
          (VP (VBD occured)
            (S
              (VP (TO to)
                (VP (VB save)
                  (NP
                    (NP (DT the) (NN life))
                    (PP (IN of)
                      (NP (DT the) (NN mother)))))))))))
    (. .)))

nsubj(scenario-5, This-1)
cop(scenario-5, is-2)
det(scenario-5, the-3)
amod(scenario-5, same-4)
root(ROOT-0, scenario-5)
advmod(occured-10, as-6)
dep(occured-10, if-7)
det(abortion-9, an-8)
nsubj(occured-10, abortion-9)
xsubj(save-12, abortion-9)
dep(scenario-5, occured-10)
aux(save-12, to-11)
xcomp(occured-10, save-12)
det(life-14, the-13)
dobj(save-12, life-14)
det(mother-17, the-16)
prep_of(life-14, mother-17)

(ROOT
  (S
    (S
      (VP (VBG Being)
        (SBAR (IN as)
          (S
            (NP (DT the) (NN mother))
            (ADVP (RB usually))
            (VP (VBZ has)
              (NP
                (NP (DT a) (JJR higher) (NN chance))
                (PP (IN of)
                  (NP (NN survival)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB usually))
      (ADJP (JJ wise)
        (S
          (VP (TO to)
            (VP (VB save)
              (NP (PRP her))
              (PP (RB rather) (IN than)
                (NP (DT the) (NN baby))))))))
    (. .)))

partmod(wise-16, Being-1)
mark(has-6, as-2)
det(mother-4, the-3)
nsubj(has-6, mother-4)
advmod(has-6, usually-5)
advcl(Being-1, has-6)
det(chance-9, a-7)
amod(chance-9, higher-8)
dobj(has-6, chance-9)
prep_of(chance-9, survival-11)
nsubj(wise-16, it-13)
cop(wise-16, is-14)
advmod(wise-16, usually-15)
root(ROOT-0, wise-16)
aux(save-18, to-17)
xcomp(wise-16, save-18)
dobj(save-18, her-19)
advmod(save-18, rather-20)
det(baby-23, the-22)
prep_than(save-18, baby-23)

(ROOT
  (S
    (NP (NNP Granted))
    (, ,)
    (PP (IN at)
      (NP (DT that) (NN point)))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN doctor) (POS 's))
        (NN decision)))
    (. .)))

nsubj(decision-12, Granted-1)
det(point-5, that-4)
prep_at(decision-12, point-5)
nsubj(decision-12, it-7)
cop(decision-12, is-8)
det(doctor-10, the-9)
poss(decision-12, doctor-10)
root(ROOT-0, decision-12)

(ROOT
  (S
    (SBAR (IN As)
      (S
        (ADVP (RB far)
          (PP (IN as)
            (NP (DT the) (JJ other) (JJ extenuating) (NNS circumstances))))
        (, ,)
        (NP (PRP you))
        (VP (VBP are)
          (ADJP (JJ right)))))
    (, ,)
    (NP (PRP they))
    (VP (VBP have)
      (NP (DT no) (NN justification)))
    (. .)))

mark(right-11, As-1)
advmod(right-11, far-2)
det(circumstances-7, the-4)
amod(circumstances-7, other-5)
amod(circumstances-7, extenuating-6)
prep_as(far-2, circumstances-7)
nsubj(right-11, you-9)
cop(right-11, are-10)
advcl(have-14, right-11)
nsubj(have-14, they-13)
root(ROOT-0, have-14)
det(justification-16, no-15)
dobj(have-14, justification-16)

(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB also))
    (VP (VBP disagree)
      (PP (IN with)
        (NP (PRP$ your) (JJ apparent) (NN belief)))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (MD should)
            (VP (VB err)
              (PP (IN on)
                (NP
                  (NP (DT the) (NN side))
                  (PP (IN of)
                    (NP (NN liberty)))))
              (PP (IN over)
                (NP (NN life))))))))
    (. .)))

nsubj(disagree-3, I-1)
advmod(disagree-3, also-2)
root(ROOT-0, disagree-3)
poss(belief-7, your-5)
amod(belief-7, apparent-6)
prep_with(disagree-3, belief-7)
complm(err-11, that-8)
nsubj(err-11, we-9)
aux(err-11, should-10)
ccomp(disagree-3, err-11)
det(side-14, the-13)
prep_on(err-11, side-14)
prep_of(side-14, liberty-16)
prep_over(err-11, life-18)

(ROOT
  (S
    (NP (PRP I))
    (VP
      (VP (MD would)
        (VP (VB place)
          (NP (NN life))
          (PP (IN before)
            (NP (NN liberty)))))
      (, ,)
      (CC and)
      (VP (MD would) (RB rather)
        (VP (VB risk)
          (S
            (VP (VBG denying)
              (NP (NN someone))
              (NP
                (NP (DT a) (NN freedom))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (MD should)
                      (VP (VB have)
                        (VP (VBN had)
                          (S
                            (VP (TO to)
                              (VP (VB try)
                                (CC and)
                                (VB save)
                                (NP
                                  (NP (NN someone) (POS 's))
                                  (NN life)))))
                          (SBAR (IN than)
                            (S
                              (VP (VBP deny)
                                (NP (NN someone))
                                (NP
                                  (NP (DT a) (NN life))
                                  (SBAR
                                    (S
                                      (NP (PRP they))
                                      (VP (MD should)
                                        (VP (VB have)
                                          (VP (VBN had)
                                            (S
                                              (VP (TO to)
                                                (VP (VB try)
                                                  (CC and)
                                                  (VB save)
                                                  (NP
                                                    (NP (NN someone) (POS 's))
                                                    (NN freedom)))))))))))))))))))))))))
    (. .)))

nsubj(place-3, I-1)
nsubj(risk-11, I-1)
aux(place-3, would-2)
root(ROOT-0, place-3)
dobj(place-3, life-4)
prep_before(place-3, liberty-6)
aux(risk-11, would-9)
advmod(risk-11, rather-10)
conj_and(place-3, risk-11)
xcomp(risk-11, denying-12)
iobj(denying-12, someone-13)
det(freedom-15, a-14)
dobj(denying-12, freedom-15)
dobj(had-19, freedom-15)
nsubj(had-19, they-16)
xsubj(try-21, they-16)
aux(had-19, should-17)
aux(had-19, have-18)
rcmod(freedom-15, had-19)
aux(try-21, to-20)
xcomp(had-19, try-21)
xcomp(had-19, save-23)
conj_and(try-21, save-23)
poss(life-26, someone-24)
dobj(try-21, life-26)
mark(deny-28, than-27)
advcl(had-19, deny-28)
iobj(deny-28, someone-29)
det(life-31, a-30)
dobj(deny-28, life-31)
dobj(had-35, life-31)
nsubj(had-35, they-32)
xsubj(try-37, they-32)
aux(had-35, should-33)
aux(had-35, have-34)
rcmod(life-31, had-35)
aux(try-37, to-36)
xcomp(had-35, try-37)
xcomp(had-35, save-39)
conj_and(try-37, save-39)
poss(freedom-42, someone-40)
dobj(try-37, freedom-42)

