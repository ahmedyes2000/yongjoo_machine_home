(ROOT
  (S
    (NP
      (NP (NNS Animals))
      (, ,)
      (CC and)
      (NP (NNS fetuses))
      (, ,))
    (VP (VBP have)
      (NP (DT a) (NN right))
      (PP (TO to)
        (NP
          (NP (NN life))
          (PP (IN at)
            (NP (DT the) (RB very) (JJS least))))))
    (. .)))

nsubj(have-6, Animals-1)
conj_and(Animals-1, fetuses-4)
nsubj(have-6, fetuses-4)
root(ROOT-0, have-6)
det(right-8, a-7)
dobj(have-6, right-8)
prep_to(have-6, life-10)
det(least-14, the-12)
advmod(least-14, very-13)
prep_at(life-10, least-14)

(ROOT
  (SINV
    (S
      (SBAR (IN If)
        (S
          (NP (PRP they))
          (VP (VBD had)
            (NP (DT no) (NNS rights)))))
      (, ,) (RB then)
      (NP (NN animal) (NN cruelty))
      (VP (MD would) (RB n't)
        (VP (VB be)
          (NP (DT a) (NN problem)))))
    (, ,)
    (ADVP (RB now))
    (VP (MD would))
    (NP (PRP it))
    (. ?)))

mark(had-3, If-1)
nsubj(had-3, they-2)
advcl(problem-14, had-3)
det(rights-5, no-4)
dobj(had-3, rights-5)
advmod(problem-14, then-7)
nn(cruelty-9, animal-8)
nsubj(problem-14, cruelty-9)
aux(problem-14, would-10)
neg(problem-14, n't-11)
cop(problem-14, be-12)
det(problem-14, a-13)
ccomp(would-17, problem-14)
advmod(would-17, now-16)
root(ROOT-0, would-17)
nsubj(would-17, it-18)

(ROOT
  (SBARQ
    (WHADVP (WRB Where) (RB exactly))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB get)
        (NP (DT the) (NN notion))
        (SBAR (IN that)
          (S
            (NP (NNS animals)
              (CC and)
              (NNS fetuses))
            (VP (VBP have)
              (NP (NNS rights)))))))
    (. ?)))

advmod(exactly-2, Where-1)
advmod(get-5, exactly-2)
aux(get-5, do-3)
nsubj(get-5, you-4)
root(ROOT-0, get-5)
det(notion-7, the-6)
dobj(get-5, notion-7)
complm(have-12, that-8)
nsubj(have-12, animals-9)
conj_and(animals-9, fetuses-11)
nsubj(have-12, fetuses-11)
ccomp(get-5, have-12)
dobj(have-12, rights-13)

(ROOT
  (SBARQ
    (WHADVP (WRB Where))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB get)
        (NP (DT the) (NN notion))
        (SBAR (IN that)
          (S
            (NP (NNS humans))
            (VP (VBP have)
              (NP (NNS rights)))))))
    (. ?)))

advmod(get-4, Where-1)
aux(get-4, do-2)
nsubj(get-4, you-3)
root(ROOT-0, get-4)
det(notion-6, the-5)
dobj(get-4, notion-6)
complm(have-9, that-7)
nsubj(have-9, humans-8)
ccomp(get-4, have-9)
dobj(have-9, rights-10)

(ROOT
  (X
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP are)
          (ADVP (RB rationally))
          (VP (VBG making)
            (NP (DT the) (NN statement))
            (SBAR (IN that)
              (S
                (NP (DT a) (NN fetus))
                (VP (VBZ becomes)
                  (NP
                    (NP (DT a) (NN person))
                    (PP (IN at)
                      (NP
                        (NP (NN birth))
                        (PRN (-LRB- -LRB-)
                          (SBAR
                            (WHADVP (WRB wherever))
                            (S
                              (NP (PRP you))
                              (VP (VBP derive)
                                (NP (DT that) (NN standard))
                                (PP (IN from)))))
                          (-RRB- -RRB-))))))))))))
    (, ,)
    (X (WP what))
    (NP
      (NP (RB about) (DT that) (NN baby))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ is)
            (ADVP
              (NP (CD 3\/4))
              (IN out))))))
    (. ?)))

mark(making-5, If-1)
nsubj(making-5, you-2)
aux(making-5, are-3)
advmod(making-5, rationally-4)
dep(baby-28, making-5)
det(statement-7, the-6)
dobj(making-5, statement-7)
complm(person-13, that-8)
det(fetus-10, a-9)
nsubj(person-13, fetus-10)
cop(person-13, becomes-11)
det(person-13, a-12)
ccomp(making-5, person-13)
prep_at(person-13, birth-15)
advmod(derive-19, wherever-17)
nsubj(derive-19, you-18)
dep(birth-15, derive-19)
det(standard-21, that-20)
dobj(derive-19, standard-21)
prep(derive-19, from-22)
dep(baby-28, what-25)
advmod(baby-28, about-26)
det(baby-28, that-27)
root(ROOT-0, baby-28)
nsubj(is-30, baby-28)
rcmod(baby-28, is-30)
npadvmod(out-32, 3\/4-31)
advmod(is-30, out-32)

(ROOT
  (FRAG
    (WHNP (WDT What))
    (PP (IN about)
      (NP
        (NP (DT a) (NN baby))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB survive)
                (PP (IN on)
                  (NP (PRP$ its) (JJ own)))
                (PP (IN after)
                  (NP
                    (NP (CD 8) (NNS months))
                    (PP (IN in)
                      (NP (DT the) (NN womb))))))))))
      (. ?))))

root(ROOT-0, What-1)
dep(What-1, about-2)
det(baby-4, a-3)
pobj(about-2, baby-4)
nsubj(survive-7, baby-4)
aux(survive-7, can-6)
rcmod(baby-4, survive-7)
poss(own-10, its-9)
prep_on(survive-7, own-10)
num(months-13, 8-12)
prep_after(survive-7, months-13)
det(womb-16, the-15)
prep_in(months-13, womb-16)

(ROOT
  (SBARQ
    (WHNP (WP What))
    (SQ
      (VP (VBZ makes)
        (NP
          (NP (DT that) (JJ magical) (NN instant))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP
                (NP (DT every) (NN inch))
                (PP (IN of)
                  (NP (DT that) (NN baby))))
              (VP (VBZ is)
                (ADVP (IN outside)
                  (PP (IN of)
                    (NP (DT the) (NN mother))))
                (NP
                  (NP (DT the) (NN key))
                  (PP (TO to)
                    (NP (PRP$ its) (NN humanity))))))))))
    (. ?)))

nsubj(makes-2, What-1)
root(ROOT-0, makes-2)
det(instant-5, that-3)
amod(instant-5, magical-4)
dobj(makes-2, instant-5)
advmod(key-18, where-6)
det(inch-8, every-7)
nsubj(key-18, inch-8)
det(baby-11, that-10)
prep_of(inch-8, baby-11)
cop(key-18, is-12)
det(mother-16, the-15)
prep_outside_of(key-18, mother-16)
det(key-18, the-17)
rcmod(instant-5, key-18)
poss(humanity-21, its-20)
prep_to(key-18, humanity-21)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS coldness))
      (PP (IN of)
        (NP
          (NP (DT the) (NN argument))
          (ADJP
            (NP (PRP you))
            (JJ present)))))
    (, ,)
    (ADVP (IN along)
      (PP (IN with)
        (NP
          (NP (DT the)
            (ADJP (JJ arbitrary))
            (NN nature))
          (PP (IN of)
            (NP (PRP$ your) (NN declaration))))))
    (, ,)
    (VP (VBZ is)
      (ADJP
        (NP (DT a) (RB little))
        (JJ scary)))
    (. .)))

det(coldness-2, The-1)
nsubj(scary-21, coldness-2)
det(argument-5, the-4)
prep_of(coldness-2, argument-5)
npadvmod(present-7, you-6)
amod(argument-5, present-7)
det(nature-13, the-11)
amod(nature-13, arbitrary-12)
prep_along_with(scary-21, nature-13)
poss(declaration-16, your-15)
prep_of(nature-13, declaration-16)
cop(scary-21, is-18)
det(little-20, a-19)
npadvmod(scary-21, little-20)
root(ROOT-0, scary-21)

(ROOT
  (S
    (S
      (VP (VBG Denying)
        (SBAR
          (SBAR (IN that)
            (S
              (NP (NN abortion))
              (VP (VBZ is)
                (NP (DT a) (JJ moral) (NN choice)))))
          (, ,)
          (CC and)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (NN unborn))
                (CC and)
                (NP (NNS animals)))
              (VP (VBP have)
                (NP (DT any) (NNS rights))))))))
    (ADVP (RB whatsoever))
    (VP (VBZ is)
      (ADVP (RB also))
      (ADJP (JJ scary)))
    (. .)))

csubj(scary-21, Denying-1)
complm(choice-7, that-2)
nsubj(choice-7, abortion-3)
cop(choice-7, is-4)
det(choice-7, a-5)
amod(choice-7, moral-6)
ccomp(Denying-1, choice-7)
complm(have-15, that-10)
det(unborn-12, the-11)
nsubj(have-15, unborn-12)
conj_and(unborn-12, animals-14)
nsubj(have-15, animals-14)
ccomp(Denying-1, have-15)
conj_and(choice-7, have-15)
det(rights-17, any-16)
dobj(have-15, rights-17)
advmod(scary-21, whatsoever-18)
cop(scary-21, is-19)
advmod(scary-21, also-20)
root(ROOT-0, scary-21)

