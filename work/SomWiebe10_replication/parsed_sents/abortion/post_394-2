(ROOT
  (FRAG (CC and)
    (VP (VB consider)
      (NP (DT this))
      (-RRB- -RRB-)
      (ADVP (RB so))
      (SBAR (IN if)
        (S
          (NP (FW i))
          (VP (VBP do) (RB not)
            (VP (VB have)
              (NP (DT the) (NN right)
                (S
                  (VP (TO to)
                    (VP (VB take)
                      (NP
                        (NP (DT a) (NN life))
                        (PP (IN of)
                          (NP (DT a) (NN human) (VBG being))))))))
              (, ,)
              (SBAR
                (WHADVP (WRB why))
                (S
                  (VP (VBZ is)
                    (NP (PRP it))
                    (SBAR (IN that)
                      (S
                        (NP (NN im))
                        (VP (VBD allowed)
                          (S
                            (VP (TO to)
                              (VP (VB take)
                                (NP
                                  (NP (DT the) (NN life))
                                  (PP (IN of)
                                    (NP (DT a) (NN human) (VBG being)))))))
                          (ADVP (RB partly)))))))))))))
    (. ?)))

dep(consider-2, and-1)
root(ROOT-0, consider-2)
dobj(consider-2, this-3)
advmod(consider-2, so-5)
mark(have-10, if-6)
nsubj(have-10, i-7)
aux(have-10, do-8)
neg(have-10, not-9)
advcl(consider-2, have-10)
det(right-12, the-11)
dobj(have-10, right-12)
aux(take-14, to-13)
infmod(right-12, take-14)
det(life-16, a-15)
dobj(take-14, life-16)
det(human-19, a-18)
prep_of(life-16, human-19)
amod(human-19, being-20)
advmod(it-24, why-22)
cop(it-24, is-23)
advcl(have-10, it-24)
complm(allowed-27, that-25)
nsubj(allowed-27, im-26)
xsubj(take-29, im-26)
ccomp(it-24, allowed-27)
aux(take-29, to-28)
xcomp(allowed-27, take-29)
det(life-31, the-30)
dobj(take-29, life-31)
det(human-34, a-33)
prep_of(life-31, human-34)
amod(human-34, being-35)
advmod(allowed-27, partly-36)

