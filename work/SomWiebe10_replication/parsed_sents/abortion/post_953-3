(ROOT
  (S (CC So)
    (ADVP (RB even))
    (PP (IN in)
      (NP (DT this) (NN case)))
    (S
      (NP (PRP I))
      (VP (MD would)
        (ADVP (RB still))
        (VP (VB maintain)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (MD should) (RB not)
                (VP (VB be)
                  (NP (DT an) (NN option)))))))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (PRP it))
            (VP (MD would)
              (VP (VB be)
                (ADJP (JJ hard)
                  (S
                    (VP (TO to)
                      (VP (VB give)
                        (NP (DT an) (JJ adequate) (NN reason))
                        (SBAR
                          (WHADVP (WRB why))
                          (S
                            (NP
                              (NP (DT the) (NN child) (POS 's))
                              (NN life))
                            (VP (MD should)
                              (VP (VB be)
                                (VP
                                  (VP (VBN taken))
                                  (CC and)
                                  (VP (RB not)
                                    (NP (DT the) (NNS mothers))))))))))))))))))
    (. .)))

advmod(maintain-9, even-2)
det(case-5, this-4)
prep_in(maintain-9, case-5)
nsubj(maintain-9, I-6)
aux(maintain-9, would-7)
advmod(maintain-9, still-8)
root(ROOT-0, maintain-9)
complm(option-16, that-10)
nsubj(option-16, it-11)
aux(option-16, should-12)
neg(option-16, not-13)
cop(option-16, be-14)
det(option-16, an-15)
ccomp(maintain-9, option-16)
nsubj(think-19, I-18)
conj_and(maintain-9, think-19)
nsubj(hard-23, it-20)
aux(hard-23, would-21)
cop(hard-23, be-22)
ccomp(think-19, hard-23)
aux(give-25, to-24)
xcomp(hard-23, give-25)
det(reason-28, an-26)
amod(reason-28, adequate-27)
dobj(give-25, reason-28)
advmod(taken-36, why-29)
det(child-31, the-30)
poss(life-33, child-31)
nsubjpass(taken-36, life-33)
aux(taken-36, should-34)
auxpass(taken-36, be-35)
advcl(give-25, taken-36)
neg(mothers-40, not-38)
det(mothers-40, the-39)
advcl(give-25, mothers-40)
conj_and(taken-36, mothers-40)

