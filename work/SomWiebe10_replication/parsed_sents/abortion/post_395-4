(ROOT
  (S (CC And)
    (PP (IN with)
      (NP
        (NP (DT the) (JJS best) (NNS answers))
        (SBAR
          (S
            (NP (PRP we))
            (VP (MD can)
              (VP (VB obtain)
                (PP (IN with)
                  (NP (DT the) (NN knowledge)))))))))
    (NP (PRP we))
    (VP (VBP have)
      (ADVP (RB nowadays))
      (S
        (VP (TO to)
          (VP (VB decide)
            (SBAR
              (S
                (NP (JJ first) (NN weather) (NN abortion))
                (VP (MD should)
                  (VP (VB be)
                    (ADJP (RB morally) (JJ accepted)
                      (CC and)
                      (JJ seconddly)
                      (SBAR (IN if)
                        (S
                          (NP (NN abortion))
                          (VP (MD should)
                            (VP (VB be)
                              (ADJP (JJ legal)))))
                        (CC or)
                        (RB not)))))))))))
    (. .)))

cc(have-13, And-1)
det(answers-5, the-3)
amod(answers-5, best-4)
dobj(obtain-8, answers-5)
prep_with(have-13, answers-5)
nsubj(obtain-8, we-6)
aux(obtain-8, can-7)
rcmod(answers-5, obtain-8)
det(knowledge-11, the-10)
prep_with(obtain-8, knowledge-11)
nsubj(have-13, we-12)
xsubj(decide-16, we-12)
root(ROOT-0, have-13)
advmod(have-13, nowadays-14)
aux(decide-16, to-15)
xcomp(have-13, decide-16)
amod(abortion-19, first-17)
nn(abortion-19, weather-18)
nsubj(accepted-23, abortion-19)
nsubj(seconddly-25, abortion-19)
aux(accepted-23, should-20)
cop(accepted-23, be-21)
advmod(accepted-23, morally-22)
ccomp(decide-16, accepted-23)
ccomp(decide-16, seconddly-25)
conj_and(accepted-23, seconddly-25)
mark(legal-30, if-26)
nsubj(legal-30, abortion-27)
aux(legal-30, should-28)
cop(legal-30, be-29)
ccomp(accepted-23, legal-30)
ccomp(accepted-23, not-32)
conj_or(legal-30, not-32)

