(ROOT
  (S
    (ADVP (RB Unfortunately))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is) (RB not)
      (ADJP (JJ relevant))
      (ADVP (RB here)))
    (. .)))

advmod(relevant-6, Unfortunately-1)
nsubj(relevant-6, it-3)
cop(relevant-6, is-4)
neg(relevant-6, not-5)
root(ROOT-0, relevant-6)
advmod(relevant-6, here-7)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP have)
        (ADVP (RB already))
        (VP (VBN established)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJ immoral)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (NP (DT an) (NN abortion))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP I))
      (ADVP (RB never))
      (VP (VBD said)
        (SBAR (IN that)
          (S
            (NP (PRP it))
            (VP (VBD was)
              (ADJP (JJ moral)
                (S
                  (VP (TO to)
                    (VP (VB refuse)
                      (NP (DT a) (JJ dying) (NN person))
                      (NP (PRP$ your) (NN kidney)))))))))))
    (. .)))

nsubj(established-4, We-1)
aux(established-4, have-2)
advmod(established-4, already-3)
root(ROOT-0, established-4)
complm(immoral-8, that-5)
nsubj(immoral-8, it-6)
cop(immoral-8, is-7)
ccomp(established-4, immoral-8)
aux(have-10, to-9)
xcomp(immoral-8, have-10)
det(abortion-12, an-11)
dobj(have-10, abortion-12)
nsubj(said-17, I-15)
neg(said-17, never-16)
conj_and(established-4, said-17)
complm(moral-21, that-18)
nsubj(moral-21, it-19)
cop(moral-21, was-20)
ccomp(said-17, moral-21)
aux(refuse-23, to-22)
xcomp(moral-21, refuse-23)
det(person-26, a-24)
amod(person-26, dying-25)
iobj(refuse-23, person-26)
poss(kidney-28, your-27)
dobj(refuse-23, kidney-28)

(ROOT
  (S
    (NP
      (NP (NN Murder))
      (, ,)
      (NP
        (NP (DT the) (JJ active) (NN killing))
        (PP (IN of)
          (NP (DT another) (NN person)))
        (, ,)
        (PP (IN on)
          (NP (DT the) (JJ other) (NN hand))))
      (, ,))
    (VP (VBZ is)
      (ADJP (JJ illegal)))
    (. .)))

nsubj(illegal-16, Murder-1)
det(killing-5, the-3)
amod(killing-5, active-4)
appos(Murder-1, killing-5)
det(person-8, another-7)
prep_of(killing-5, person-8)
det(hand-13, the-11)
amod(hand-13, other-12)
prep_on(killing-5, hand-13)
cop(illegal-16, is-15)
root(ROOT-0, illegal-16)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (MD might) (RB not)
        (VP (VB be)
          (NP (DT a) (JJ moral) (NN difference)))))
    (, ,)
    (CC but)
    (S
      (NP (EX there))
      (VP (VBZ is)
        (NP (DT a) (JJ legal) (NN one))))
    (. .)))

expl(difference-7, There-1)
aux(difference-7, might-2)
neg(difference-7, not-3)
cop(difference-7, be-4)
det(difference-7, a-5)
amod(difference-7, moral-6)
root(ROOT-0, difference-7)
expl(is-11, there-10)
conj_but(difference-7, is-11)
det(one-14, a-12)
amod(one-14, legal-13)
nsubj(is-11, one-14)

(ROOT
  (S
    (NP
      (NP (NNP Morality))
      (CC and)
      (NP
        (NP (DT the) (NN amount))
        (PP (IN of)
          (NP
            (NP (NN damage))
            (VP (VBN done))))))
    (VP (VBP have)
      (ADVP (NN nothing))
      (S
        (VP (TO to)
          (VP (VB do)
            (PP (IN with)
              (NP (PRP it)))))))
    (. .)))

nsubj(have-8, Morality-1)
xsubj(do-11, Morality-1)
det(amount-4, the-3)
conj_and(Morality-1, amount-4)
nsubj(have-8, amount-4)
xsubj(do-11, amount-4)
prep_of(amount-4, damage-6)
partmod(damage-6, done-7)
root(ROOT-0, have-8)
advmod(have-8, nothing-9)
aux(do-11, to-10)
xcomp(have-8, do-11)
prep_with(do-11, it-13)

(ROOT
  (S
    (ADVP (RB Really))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (ADJP (RB pretty) (JJ cold)))
    (. .)))

advmod(cold-6, Really-1)
nsubj(cold-6, it-3)
cop(cold-6, 's-4)
advmod(cold-6, pretty-5)
root(ROOT-0, cold-6)

(ROOT
  (SINV (CC Nor)
    (VBD did)
    (NP (PRP I))
    (VP (VB say)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was) (RB not)
            (ADJP (RB as) (JJ harmful))))))
    (. .)))

cc(say-4, Nor-1)
aux(say-4, did-2)
nsubj(say-4, I-3)
root(ROOT-0, say-4)
complm(harmful-10, that-5)
nsubj(harmful-10, it-6)
cop(harmful-10, was-7)
neg(harmful-10, not-8)
advmod(harmful-10, as-9)
ccomp(say-4, harmful-10)

(ROOT
  (S
    (PP (IN In)
      (NP (DT both) (NNS situations)))
    (, ,)
    (NP (NN someone))
    (VP (VBZ ends)
      (ADJP (IN up) (JJ dead)))
    (. .)))

det(situations-3, both-2)
prep_in(ends-6, situations-3)
nsubj(ends-6, someone-5)
root(ROOT-0, ends-6)
dep(dead-8, up-7)
acomp(ends-6, dead-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN debate))
      (ADVP (RB however)))
    (, ,)
    (VP (VBD was) (RB not)
      (PP (IN about)
        (NP
          (NP (DT the) (NN morality))
          (CC or)
          (NP
            (NP (DT the) (NNS harmfulness))
            (PP (IN of)
              (NP (DT either)))))))
    (. .)))

det(debate-2, The-1)
nsubj(was-5, debate-2)
advmod(debate-2, however-3)
root(ROOT-0, was-5)
neg(was-5, not-6)
det(morality-9, the-8)
prep_about(was-5, morality-9)
det(harmfulness-12, the-11)
prep_about(was-5, harmfulness-12)
conj_or(morality-9, harmfulness-12)
prep_of(harmfulness-12, either-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (PP (IN about)
        (NP
          (NP (DT the) (NN government) (POS 's))
          (NN ability)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (NNS laws))))))))
    (. .)))

nsubj(was-2, It-1)
root(ROOT-0, was-2)
det(government-5, the-4)
poss(ability-7, government-5)
prep_about(was-2, ability-7)
aux(make-9, to-8)
infmod(ability-7, make-9)
dobj(make-9, laws-10)

(ROOT
  (S
    (NP (DT The) (NN government))
    (VP (MD can) (RB not)
      (VP (VB make)
        (NP (NNS laws))
        (S
          (VP (VBG requiring)
            (S
              (NP (PRP you))
              (VP (TO to)
                (VP
                  (VP (VB go)
                    (PRT (RP out)))
                  (CC and)
                  (VP
                    (ADVP (RB actively))
                    (VB save)
                    (NP (NNS lives))))))))))
    (. .)))

det(government-2, The-1)
nsubj(make-5, government-2)
aux(make-5, can-3)
neg(make-5, not-4)
root(ROOT-0, make-5)
dobj(make-5, laws-6)
xcomp(make-5, requiring-7)
nsubj(go-10, you-8)
nsubj(save-14, you-8)
aux(go-10, to-9)
xcomp(requiring-7, go-10)
prt(go-10, out-11)
advmod(save-14, actively-13)
xcomp(requiring-7, save-14)
conj_and(go-10, save-14)
dobj(save-14, lives-15)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADVP (RB no) ('' ''))
      (NP (JJ Good) (JJ Samaritan) ('' '') (NNS laws)))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
advmod(are-2, no-3)
amod(laws-8, Good-5)
amod(laws-8, Samaritan-6)
nsubj(are-2, laws-8)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBD were))))
    (, ,)
    (NP (NNP Ted) (NNP Kennedy))
    (VP (MD would)
      (VP (VB be)
        (PP (IN in)
          (NP
            (NP (NN prison))
            (, ,) (RB not)
            (NP (DT the) (NNP Senate))))))
    (. .)))

mark(were-3, If-1)
expl(were-3, there-2)
advcl(be-8, were-3)
nn(Kennedy-6, Ted-5)
nsubj(be-8, Kennedy-6)
aux(be-8, would-7)
root(ROOT-0, be-8)
prep_in(be-8, prison-10)
neg(prison-10, not-12)
det(Senate-14, the-13)
dep(prison-10, Senate-14)

