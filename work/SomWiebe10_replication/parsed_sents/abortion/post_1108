(ROOT
  (S
    (INTJ (UH Ah))
    (, ,)
    (ADVP (RB now))
    (NP (PRP we))
    (VP (VBP get)
      (PP (TO to)
        (NP
          (NP (DT the) (NN core))
          (PP (IN of)
            (NP (PRP$ your) (NN argument))))))
    (. .)))

dep(get-5, Ah-1)
advmod(get-5, now-3)
nsubj(get-5, we-4)
root(ROOT-0, get-5)
det(core-8, the-7)
prep_to(get-5, core-8)
poss(argument-11, your-10)
prep_of(core-8, argument-11)

(ROOT
  (S
    (NP (NN Sex))
    (VP (VBZ is)
      (NP (DT a) (NN deviation))
      (SBAR (IN if)
        (S
          (NP (PRP it))
          (VP (VBZ 's) (RB not)
            (PP (IN for)
              (NP
                (NP (DT the) (NN purpose))
                (PP (IN of)
                  (NP (NN child-making)))))))))
    (. ?)))

nsubj(deviation-4, Sex-1)
cop(deviation-4, is-2)
det(deviation-4, a-3)
root(ROOT-0, deviation-4)
mark('s-7, if-5)
nsubj('s-7, it-6)
advcl(deviation-4, 's-7)
neg('s-7, not-8)
det(purpose-11, the-10)
prep_for('s-7, purpose-11)
prep_of(purpose-11, child-making-13)

(ROOT
  (SBARQ
    (WHNP (WDT What) (NN effect))
    (SQ (VBP am)
      (NP (PRP I))
      (ADJP (JJ numb) (TO to)))
    (. ?)))

det(effect-2, What-1)
attr(numb-5, effect-2)
cop(numb-5, am-3)
nsubj(numb-5, I-4)
root(ROOT-0, numb-5)
dep(numb-5, to-6)

(ROOT
  (FRAG
    (ADVP (RB Orgasm))
    (. ?)))

root(ROOT-0, Orgasm-1)

(ROOT
  (ADVP (RB Hardly) (. .)))

root(ROOT-0, Hardly-1)

(ROOT
  (S ('' '')
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT a)
        (ADJP (JJ uniue)
          (CC and)
          (JJ separate))
        (JJ human) (NN being))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (VBP happen)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBG hosting) ('' '')
                    (PP (IN like)
                      (NP (DT a) (NN parasite)))))))))))
    (. ?)))

nsubj(being-9, It-2)
cop(being-9, is-3)
det(being-9, a-4)
amod(being-9, uniue-5)
conj_and(uniue-5, separate-7)
amod(being-9, separate-7)
amod(being-9, human-8)
root(ROOT-0, being-9)
complm(happen-12, that-10)
nsubj(happen-12, you-11)
xsubj(hosting-15, you-11)
ccomp(being-9, happen-12)
aux(hosting-15, to-13)
aux(hosting-15, be-14)
xcomp(happen-12, hosting-15)
det(parasite-19, a-18)
prep_like(hosting-15, parasite-19)

(ROOT
  (S (IN So)
    (NP (PRP you))
    (VP (MD should)
      (VP (VB be)
        (ADJP (JJ able)
          (S
            (VP (TO to)
              (VP (VB choose)
                (SBAR (IN whether)
                  (FRAG (CC or)
                    (ADVP (RB not)
                      (S
                        (VP (TO to)
                          (VP (VB play)
                            (NP (NN host))
                            (PP (IN for)
                              (NP (CD 9) (NNS months)))))))))))))))
    (. .)))

dep(able-5, So-1)
nsubj(able-5, you-2)
aux(able-5, should-3)
cop(able-5, be-4)
root(ROOT-0, able-5)
aux(choose-7, to-6)
xcomp(able-5, choose-7)
complm(not-10, whether-8)
dep(not-10, or-9)
dep(choose-7, not-10)
aux(play-12, to-11)
dep(not-10, play-12)
dobj(play-12, host-13)
num(months-16, 9-15)
prep_for(play-12, months-16)

(ROOT
  (S
    (VP (VB Stop)
      (VP (VBG trying)
        (S
          (VP (TO to)
            (VP (VB relate)
              (NP (PRP$ my) (NNS examples))
              (PP (TO to)
                (NP (NN murder))))))))
    (. .)))

root(ROOT-0, Stop-1)
dep(Stop-1, trying-2)
aux(relate-4, to-3)
xcomp(trying-2, relate-4)
poss(examples-6, my-5)
dobj(relate-4, examples-6)
prep_to(relate-4, murder-8)

(ROOT
  (S
    (NP (PRP You)
      (CC and)
      (PRP I))
    (DT both)
    (VP (VBP know)
      (NP
        (NP (DT the) (JJ distinct) (NNS differences))
        (PP (IN between)
          (S
            (VP
              (VP (VBG killing)
                (NP
                  (NP (DT a) (NN group))
                  (PP (IN of)
                    (NP (NNS cells))))
                (SBAR
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP live)
                        (PP (IN within)
                          (NP (PRP you))))))
                  (CC and)
                  (SBAR (IN that)
                    (S
                      (NP (PRP you))
                      (VP (VBP are)
                        (ADJP (RB ultimately) (JJ responsible)
                          (PP (IN for))))))))
              (CC and)
              (VP (VBG killing)
                (NP (DT an) (JJ independent) (NN person))))))))
    (. .)))

nsubj(know-5, You-1)
conj_and(You-1, I-3)
nsubj(know-5, I-3)
dep(know-5, both-4)
root(ROOT-0, know-5)
det(differences-8, the-6)
amod(differences-8, distinct-7)
dobj(know-5, differences-8)
prepc_between(differences-8, killing-10)
det(group-12, a-11)
dobj(killing-10, group-12)
prep_of(group-12, cells-14)
nsubj(live-16, that-15)
ccomp(killing-10, live-16)
prep_within(live-16, you-18)
complm(responsible-24, that-20)
nsubj(responsible-24, you-21)
cop(responsible-24, are-22)
advmod(responsible-24, ultimately-23)
ccomp(killing-10, responsible-24)
conj_and(live-16, responsible-24)
prep(responsible-24, for-25)
prepc_between(differences-8, killing-27)
conj_and(killing-10, killing-27)
det(person-30, an-28)
amod(person-30, independent-29)
dobj(killing-27, person-30)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP claim)
        (SBAR (IN that)
          (S
            (NP (NN adoption))
            (VP (VBZ is)
              (NP
                (NP (DT the) (`` ``) (JJ only) (JJ ethical) (NN choice) ('' ''))
                (PP (IN for)
                  (NP
                    (NP (NNS parents))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBP are)
                          (ADJP (JJ unable)
                            (S
                              (VP (TO to)
                                (VP (VB care)
                                  (PP (IN for)
                                    (NP (PRP$ their) (NNS children))))))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (DT this) (NN distinctly))
      (VP (VBZ ignores)
        (NP
          (NP (CD two))
          (PP (IN of)
            (NP
              (NP (DT the) (JJ possible) (NNS reasons))
              (SBAR
                (S
                  (NP (PRP I))
                  (VP (VBD gave)
                    (PP (IN for)
                      (NP (NN abortion)))))))))))
    (. .)))

nsubj(claim-2, You-1)
root(ROOT-0, claim-2)
complm(choice-10, that-3)
nsubj(choice-10, adoption-4)
cop(choice-10, is-5)
det(choice-10, the-6)
amod(choice-10, only-8)
amod(choice-10, ethical-9)
ccomp(claim-2, choice-10)
prep_for(choice-10, parents-13)
nsubj(unable-16, parents-13)
cop(unable-16, are-15)
rcmod(parents-13, unable-16)
aux(care-18, to-17)
xcomp(unable-16, care-18)
poss(children-21, their-20)
prep_for(care-18, children-21)
det(distinctly-25, this-24)
nsubj(ignores-26, distinctly-25)
conj_but(claim-2, ignores-26)
dobj(ignores-26, two-27)
det(reasons-31, the-29)
amod(reasons-31, possible-30)
prep_of(two-27, reasons-31)
dobj(gave-33, reasons-31)
nsubj(gave-33, I-32)
rcmod(reasons-31, gave-33)
prep_for(gave-33, abortion-35)

(ROOT
  (S
    (S
      (NP (JJ 1-Addicts))
      (VP (MD can) (RB not)
        (VP (VB bring)
          (NP (DT a) (JJ healthy) (NN child))
          (PP (TO to)
            (NP (NN term))))))
    (, ,)
    (NP (JJ 2-Abused) (NNS women))
    (VP
      (VP (MD can) (RB not)
        (VP (VB hide)
          (NP (DT a) (NN pregnancy))))
      (CC and)
      (VP
        (ADVP (RB then))
        (VBP give)
        (NP (DT a) (NN child))
        (PRT (RP up))
        (PP (IN for)
          (NP (NN adoption)))))
    (. .)))

nsubj(bring-4, 1-Addicts-1)
aux(bring-4, can-2)
neg(bring-4, not-3)
ccomp(hide-15, bring-4)
det(child-7, a-5)
amod(child-7, healthy-6)
dobj(bring-4, child-7)
prep_to(bring-4, term-9)
amod(women-12, 2-Abused-11)
nsubj(hide-15, women-12)
nsubj(give-20, women-12)
aux(hide-15, can-13)
neg(hide-15, not-14)
root(ROOT-0, hide-15)
det(pregnancy-17, a-16)
dobj(hide-15, pregnancy-17)
advmod(give-20, then-19)
conj_and(hide-15, give-20)
det(child-22, a-21)
dobj(give-20, child-22)
prt(give-20, up-23)
prep_for(give-20, adoption-25)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB also))
    (VP (VBZ assumes)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (MD would)
            (VP (VB be)
              (ADJP (JJ enough)
                (PP (IN of)
                  (NP
                    (NP (DT a) (`` ``) (NN market) ('' ''))
                    (PP (IN for)
                      (NP (JJ adopted) (NNS children))))))
              (SBAR (IN if)
                (S
                  (NP (NN abortion))
                  (VP (VBD were)
                    (VP
                      (ADVP (RB suddenly))
                      (VBN banned))))))))))
    (. .)))

nsubj(assumes-3, It-1)
advmod(assumes-3, also-2)
root(ROOT-0, assumes-3)
complm(enough-8, that-4)
expl(enough-8, there-5)
aux(enough-8, would-6)
cop(enough-8, be-7)
ccomp(assumes-3, enough-8)
det(market-12, a-10)
prep_of(enough-8, market-12)
amod(children-16, adopted-15)
prep_for(market-12, children-16)
mark(banned-21, if-17)
nsubjpass(banned-21, abortion-18)
auxpass(banned-21, were-19)
advmod(banned-21, suddenly-20)
advcl(enough-8, banned-21)

(ROOT
  (S (RB So)
    (ADVP (RB basically))
    (, ,)
    (NP (NN sex))
    (VP (VBZ is) (RB not)
      (PP
        (PP (IN for)
          (NP (NN pleasure)))
        (, ,) (RB only)
        (PP (IN for)
          (NP (NNS babies)))))
    (. ?)))

advmod(is-5, So-1)
advmod(is-5, basically-2)
nsubj(is-5, sex-4)
root(ROOT-0, is-5)
neg(is-5, not-6)
prep_for(is-5, pleasure-8)
advmod(is-5, only-10)
prep_for(is-5, babies-12)

(ROOT
  (S
    (S
      (NP
        (NP (NNS Rates))
        (PP (IN of)
          (NP
            (NP (NNS children))
            (VP (VBG being)
              (VP (VBN given)
                (PRT (RP up)))))))
      (VP (MD would)
        (VP (VB sky)
          (NP (NN rocket)))))
    (, ,)
    (CC but)
    (SINV (MD would)
      (NP
        (NP (NNS rates))
        (PP (IN of)
          (NP
            (NP (NNS parents))
            (VP (VBG wanting)
              (S
                (VP (TO to)
                  (VP (VB adopt)
                    (ADVP (RB also)))))))))
      (VP (VB rise)))
    (. ?)))

nsubj(sky-8, Rates-1)
prep_of(Rates-1, children-3)
auxpass(given-5, being-4)
partmod(children-3, given-5)
prt(given-5, up-6)
aux(sky-8, would-7)
root(ROOT-0, sky-8)
dobj(sky-8, rocket-9)
aux(rise-20, would-12)
nsubj(rise-20, rates-13)
prep_of(rates-13, parents-15)
xsubj(adopt-18, parents-15)
partmod(parents-15, wanting-16)
aux(adopt-18, to-17)
xcomp(wanting-16, adopt-18)
advmod(adopt-18, also-19)
conj_but(sky-8, rise-20)

(ROOT
  (S
    (NP (NNP Prohibition))
    (ADVP (RB never))
    (VP (VBZ works))
    (. .)))

nsubj(works-3, Prohibition-1)
neg(works-3, never-2)
root(ROOT-0, works-3)

(ROOT
  (S
    (NP
      (NP (NNP Prohibition))
      (PP (IN on)
        (NP (NN alcohol))))
    (VP (VBD did) (RB n't)
      (VP (VB work)))
    (. .)))

nsubj(work-6, Prohibition-1)
prep_on(Prohibition-1, alcohol-3)
aux(work-6, did-4)
neg(work-6, n't-5)
root(ROOT-0, work-6)

(ROOT
  (S
    (NP
      (NP (NNP Prohibition))
      (PP (IN on)
        (NP (NN marijuana))))
    (VP (VBZ is) (RB not)
      (VP (VBG working)))
    (. .)))

nsubj(working-6, Prohibition-1)
prep_on(Prohibition-1, marijuana-3)
aux(working-6, is-4)
neg(working-6, not-5)
root(ROOT-0, working-6)

(ROOT
  (S
    (NP
      (NP (NNP Prohibition))
      (PP (IN on)
        (NP
          (NP (NN sex))
          (PP (IN before)
            (NP (NN marriage))))))
    (VP
      (VP (MD can) (RB not))
      (CC and)
      (VP (MD will) (RB not)
        (VP (VB work))))
    (. .)))

nsubj(can-6, Prohibition-1)
nsubj(work-11, Prohibition-1)
prep_on(Prohibition-1, sex-3)
prep_before(sex-3, marriage-5)
root(ROOT-0, can-6)
neg(can-6, not-7)
aux(work-11, will-9)
neg(work-11, not-10)
conj_and(can-6, work-11)

(ROOT
  (S
    (NP (NNP Prohibition))
    (VP (VBZ fails))
    (. .)))

nsubj(fails-2, Prohibition-1)
root(ROOT-0, fails-2)

(ROOT
  (NP (FW Period) (. .)))

root(ROOT-0, Period-1)

(ROOT
  (S
    (NP (NN Nobody))
    (VP (VBZ is) (`` ``)
      (VP (VBG telling)
        (NP (NNS kids))
        (S
          (VP (TO to)
            (VP (VB have)
              (NP (NN sex) ('' '')))))))
    (. .)))

nsubj(telling-4, Nobody-1)
aux(telling-4, is-2)
root(ROOT-0, telling-4)
dobj(telling-4, kids-5)
aux(have-7, to-6)
xcomp(telling-4, have-7)
dobj(have-7, sex-8)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (VP (VBG providing)
        (NP (JJ sexual) (NN education))
        (SBAR (RB so) (IN that)
          (S
            (SBAR (IN if)
              (S
                (NP (PRP they))
                (VP (VBP make)
                  (NP (DT that) (NN choice)))))
            (, ,)
            (NP (PRP they))
            (VP (MD will)
              (VP (VB be)
                (VP (VBN informed)
                  (PP (IN on)
                    (SBAR
                      (WHADVP (WRB how))
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ healthy)
                              (CC and)
                              (JJ responsible))))))))))))))
    (. .)))

nsubj(providing-3, We-1)
aux(providing-3, 're-2)
root(ROOT-0, providing-3)
amod(education-5, sexual-4)
dobj(providing-3, education-5)
advmod(informed-17, so-6)
dep(informed-17, that-7)
mark(make-10, if-8)
nsubj(make-10, they-9)
advcl(informed-17, make-10)
det(choice-12, that-11)
dobj(make-10, choice-12)
nsubjpass(informed-17, they-14)
aux(informed-17, will-15)
auxpass(informed-17, be-16)
advcl(providing-3, informed-17)
advmod(healthy-22, how-19)
aux(healthy-22, to-20)
cop(healthy-22, be-21)
prepc_on(informed-17, healthy-22)
prepc_on(informed-17, responsible-24)
conj_and(healthy-22, responsible-24)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB believe)
        (SBAR
          (S
            (NP (PRP you))
            (VP (MD 'd) (RB rather)
              (VP (VB have)
                (S
                  (NP (PRP them))
                  (ADVP (RB NOT))
                  (VP (VB be)
                    (VP (VBN informed) (, ,)
                      (PP (IN on)
                        (NP (DT the) (NN logic))))))
                (SBAR (IN that) (IN if)
                  (S
                    (NP (PRP they))
                    (VP (VBP DO) (RB N'T)
                      (VP (VB know)
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (VP (TO to)
                              (VP (VB have)
                                (NP (JJ responsible) (NN sex))
                                (SBAR (IN that)
                                  (S
                                    (NP (PRP they))
                                    (VP (MD 'll)
                                      (ADVP (RB simply))
                                      (VP (VB choose)
                                        (S (RB not)
                                          (VP (TO to)
                                            (VP (VB have)
                                              (NP (PRP it)))))))))))))))))))))))
    (. .)))

nsubj(believe-4, I-1)
aux(believe-4, ca-2)
neg(believe-4, n't-3)
root(ROOT-0, believe-4)
nsubj(have-8, you-5)
aux(have-8, 'd-6)
advmod(have-8, rather-7)
ccomp(believe-4, have-8)
nsubjpass(informed-12, them-9)
neg(informed-12, NOT-10)
auxpass(informed-12, be-11)
ccomp(have-8, informed-12)
det(logic-16, the-15)
prep_on(informed-12, logic-16)
complm(know-22, that-17)
dep(know-22, if-18)
nsubj(know-22, they-19)
aux(know-22, DO-20)
neg(know-22, N'T-21)
ccomp(have-8, know-22)
advmod(have-25, how-23)
aux(have-25, to-24)
ccomp(know-22, have-25)
xcomp(know-22, have-25)
amod(sex-27, responsible-26)
dobj(have-25, sex-27)
complm(choose-32, that-28)
nsubj(choose-32, they-29)
xsubj(have-35, they-29)
aux(choose-32, 'll-30)
advmod(choose-32, simply-31)
ccomp(have-25, choose-32)
neg(have-35, not-33)
aux(have-35, to-34)
xcomp(choose-32, have-35)
dobj(have-35, it-36)

(ROOT
  (S
    (NP (JJ Gay) (NN sex))
    (VP (VBZ is)
      (ADJP (JJ wrong))
      (, ,)
      (ADVP (RB then)))
    (. ?)))

amod(sex-2, Gay-1)
nsubj(wrong-4, sex-2)
cop(wrong-4, is-3)
root(ROOT-0, wrong-4)
advmod(wrong-4, then-6)

(ROOT
  (SQ (VBD Did)
    (NP (PRP you))
    (VP (VB bother)
      (S
        (VP (VBG reading)
          (NP
            (NP (DT the) (NN study))
            (SBAR
              (S
                (NP (PRP I))
                (VP (VBD linked)
                  (PP (TO to)))))))))
    (. ?)))

aux(bother-3, Did-1)
nsubj(bother-3, you-2)
root(ROOT-0, bother-3)
xcomp(bother-3, reading-4)
det(study-6, the-5)
dobj(reading-4, study-6)
dobj(linked-8, study-6)
prep_to(linked-8, study-6)
nsubj(linked-8, I-7)
rcmod(study-6, linked-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'll)
      (VP (VB reiterate)
        (NP
          (NP (DT the) (JJ key) (NNS points))
          (PP (IN of)
            (NP (PRP$ their) (NNS findings))))))
    (. .)))

nsubj(reiterate-3, I-1)
aux(reiterate-3, 'll-2)
root(ROOT-0, reiterate-3)
det(points-6, the-4)
amod(points-6, key-5)
dobj(reiterate-3, points-6)
poss(findings-9, their-8)
prep_of(points-6, findings-9)

(ROOT
  (S
    (S
      (S
        (NP (JJ 1-Comprehensive) (NN sex) (NN education) (NNS DOES))
        (VP (VBP reduce)
          (NP
            (NP (NNS rates))
            (PP (IN of)
              (NP (NN pregnancy))))))
      (CC and)
      (S
        (S
          (NP (NNP STD) (POS 's)))
        (, ,)
        (NP (JJ 2-Comprehensive) (NN sex) (NN education))
        (VP (VBZ DOES)
          (NP
            (NP (NNP NOT) (NN increase) (NNS rates))
            (PP (IN of)
              (NP (JJ teenage) (JJ sexual) (NN activity)))))))
    (, ,)
    (NP (JJ 3-Abstinence) (JJ only) (NN education))
    (VP (VBZ DOES)
      (S
        (NP (NNP NOT))
        (VP (VB reduce)
          (NP
            (NP (NNS rates))
            (PP (IN of)
              (NP (JJ teenage) (JJ sexual) (NN activity)))))))
    (. .)))

amod(DOES-4, 1-Comprehensive-1)
nn(DOES-4, sex-2)
nn(DOES-4, education-3)
nsubj(reduce-5, DOES-4)
ccomp(DOES-28, reduce-5)
dobj(reduce-5, rates-6)
prep_of(rates-6, pregnancy-8)
ccomp(DOES-16, STD-10)
possessive(STD-10, 's-11)
amod(education-15, 2-Comprehensive-13)
nn(education-15, sex-14)
nsubj(DOES-16, education-15)
conj_and(reduce-5, DOES-16)
ccomp(DOES-28, DOES-16)
nn(rates-19, NOT-17)
nn(rates-19, increase-18)
dobj(DOES-16, rates-19)
amod(activity-23, teenage-21)
amod(activity-23, sexual-22)
prep_of(rates-19, activity-23)
amod(education-27, 3-Abstinence-25)
amod(education-27, only-26)
nsubj(DOES-28, education-27)
root(ROOT-0, DOES-28)
nsubj(reduce-30, NOT-29)
ccomp(DOES-28, reduce-30)
dobj(reduce-30, rates-31)
amod(activity-35, teenage-33)
amod(activity-35, sexual-34)
prep_of(rates-31, activity-35)

(ROOT
  (S
    (S
      (ADVP (RB So))
      (, ,)
      (ADVP (RB basically))
      (, ,)
      (NP (DT the) (NNS findings))
      (VP (VBD were)
        (SBAR (IN that)
          (S
            (NP (NNS people))
            (VP (VBP are)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB have)
                        (NP (NN sex)))
                      (, ,)
                      (CC and)
                      (VP (VB try)
                        (SBAR (IN as)
                          (S
                            (NP (PRP you))
                            (VP (MD might))))))))))))))
    (, ,)
    (NP (PRP we))
    (VP (MD ca) (RB n't)
      (VP (VB dictate)
        (NP (JJ YOUR) (NN morality))
        (PP (TO to)
          (NP (PRP them)))))
    (. .)))

advmod(were-7, So-1)
advmod(were-7, basically-3)
det(findings-6, the-5)
nsubj(were-7, findings-6)
ccomp(dictate-25, were-7)
complm(going-11, that-8)
nsubj(going-11, people-9)
xsubj(have-13, people-9)
aux(going-11, are-10)
ccomp(were-7, going-11)
aux(have-13, to-12)
xcomp(going-11, have-13)
dobj(have-13, sex-14)
xcomp(going-11, try-17)
conj_and(have-13, try-17)
mark(might-20, as-18)
nsubj(might-20, you-19)
advcl(try-17, might-20)
nsubj(dictate-25, we-22)
aux(dictate-25, ca-23)
neg(dictate-25, n't-24)
root(ROOT-0, dictate-25)
amod(morality-27, YOUR-26)
dobj(dictate-25, morality-27)
prep_to(dictate-25, them-29)

(ROOT
  (S
    (S
      (ADVP (RB Tricky))
      (NP
        (NP (NN thing))
        (PP (IN about)
          (NP (NNS morals)))))
    (, ,)
    (NP (PRP they))
    (VP (VBP 're) (RB all)
      (ADJP (JJ relative)))
    (. .)))

advmod(thing-2, Tricky-1)
ccomp(relative-9, thing-2)
prep_about(thing-2, morals-4)
nsubj(relative-9, they-6)
cop(relative-9, 're-7)
advmod(relative-9, all-8)
root(ROOT-0, relative-9)

(ROOT
  (SBARQ
    (SBAR
      (SBAR (IN If)
        (S
          (NP (NNS people))
          (VP (VBP are)
            (VP (VBG going)
              (S
                (VP (TO to)
                  (VP (VB have)
                    (NP (NN sex)))))))))
      (, ,)
      (CC and)
      (SBAR (IN IF)
        (S
          (NP (JJ abstinence) (JJ only) (NN education))
          (VP (VBZ has)
            (VP (VBN been)
              (VP (VBN proven)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ ineffective)
                        (PP (IN at)
                          (S
                            (VP (VBG reducing)
                              (NP
                                (NP
                                  (NP (NNS rates))
                                  (PP (IN of)
                                    (NP (NN sex))))
                                (CC or)
                                (NP
                                  (NP (NN pregnancy))
                                  (CC or)
                                  (NP (NNP STD) (POS 's)))))))))))))))))
    (, ,)
    (WHADVP
      (ADVP (RB then))
      (WRB why))
    (SQ (MD would)
      (NP (PRP we))
      (VP (VB continue)
        (S
          (VP (TO to)
            (VP (VB stick)
              (PP (TO to)
                (NP (PRP it))))))))
    (. ?)))

mark(going-4, If-1)
nsubj(going-4, people-2)
xsubj(have-6, people-2)
aux(going-4, are-3)
dep(continue-35, going-4)
aux(have-6, to-5)
xcomp(going-4, have-6)
dobj(have-6, sex-7)
mark(proven-16, IF-10)
amod(education-13, abstinence-11)
amod(education-13, only-12)
nsubjpass(proven-16, education-13)
xsubj(ineffective-19, education-13)
aux(proven-16, has-14)
auxpass(proven-16, been-15)
conj_and(going-4, proven-16)
dep(continue-35, proven-16)
aux(ineffective-19, to-17)
cop(ineffective-19, be-18)
xcomp(proven-16, ineffective-19)
prepc_at(ineffective-19, reducing-21)
dobj(reducing-21, rates-22)
prep_of(rates-22, sex-24)
dobj(reducing-21, pregnancy-26)
conj_or(rates-22, pregnancy-26)
poss(rates-22, pregnancy-26)
conj_or(rates-22, STD-28)
poss(rates-22, STD-28)
conj_or(pregnancy-26, STD-28)
advmod(why-32, then-31)
advmod(continue-35, why-32)
aux(continue-35, would-33)
nsubj(continue-35, we-34)
xsubj(stick-37, we-34)
root(ROOT-0, continue-35)
aux(stick-37, to-36)
xcomp(continue-35, stick-37)
prep_to(stick-37, it-39)

(ROOT
  (S
    (VP (TO To)
      (VP (VB appease)
        (NP (PRP$ your) (JJ moral) (NNS beliefs))))
    (. ?)))

aux(appease-2, To-1)
root(ROOT-0, appease-2)
poss(beliefs-5, your-3)
amod(beliefs-5, moral-4)
dobj(appease-2, beliefs-5)

(ROOT
  (S
    (ADVP (RB Again))
    (, ,)
    (NP (NNS laws))
    (VP (VBP are)
      (ADVP (RB not))
      (, ,)
      (ADVP (JJ contrary)
        (PP (TO to)
          (NP (PRP$ your) (NN belief))))
      (, ,)
      (PP (IN about)
        (NP (NNS morals))))
    (. .)))

advmod(are-4, Again-1)
nsubj(are-4, laws-3)
root(ROOT-0, are-4)
neg(are-4, not-5)
poss(belief-10, your-9)
prep_contrary_to(are-4, belief-10)
prep_about(are-4, morals-13)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBP are)
      (PP (IN about)
        (NP (NNS people))))
    (. .)))

nsubj(are-2, They-1)
root(ROOT-0, are-2)
prep_about(are-2, people-4)

(ROOT
  (S (CC And)
    (ADVP (RB so) (RB long)
      (SBAR (IN as)
        (S
          (NP (NN sex))
          (VP (VBZ is)
            (ADJP (JJ consensual))))))
    (, ,)
    (NP (NN nobody))
    (VP (VBZ needs)
      (S
        (VP (VBG protecting)
          (PP (IN from)
            (NP (PRP it))))))
    (. .)))

cc(needs-10, And-1)
advmod(long-3, so-2)
advmod(needs-10, long-3)
mark(consensual-7, as-4)
nsubj(consensual-7, sex-5)
cop(consensual-7, is-6)
ccomp(long-3, consensual-7)
nsubj(needs-10, nobody-9)
root(ROOT-0, needs-10)
xcomp(needs-10, protecting-11)
prep_from(protecting-11, it-13)

(ROOT
  (FRAG (CC Or)
    (NP
      (NP (NN sex))
      (PP (IN between)
        (NP (JJ infertile) (VBN married) (NNS couples))))
    (. ?)))

dep(sex-2, Or-1)
root(ROOT-0, sex-2)
amod(couples-6, infertile-4)
amod(couples-6, married-5)
prep_between(sex-2, couples-6)

(ROOT
  (S
    (PP (IN Except)
      (ADVP (RB perhaps)))
    (NP (PRP you))
    (, ,)
    (ADVP (RB since))
    (NP (PRP you))
    (VP
      (ADVP (RB so) (RB obviously))
      (VBP find)
      (NP (NN offense))
      (PP (IN in)
        (NP
          (NP (DT the) (NN act))
          (PP (IN of)
            (NP (NN love))))))
    (. .)))

prep(find-9, Except-1)
pcomp(Except-1, perhaps-2)
nsubj(find-9, you-3)
advmod(find-9, since-5)
nsubj(find-9, you-6)
advmod(obviously-8, so-7)
advmod(find-9, obviously-8)
root(ROOT-0, find-9)
dobj(find-9, offense-10)
det(act-13, the-12)
prep_in(find-9, act-13)
prep_of(act-13, love-15)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP suggest)
      (NP (DT this)))
    (. .)))

nsubj(suggest-2, I-1)
root(ROOT-0, suggest-2)
dobj(suggest-2, this-3)

(ROOT
  (S
    (VP (VB Teach)
      (S
        (NP (JJ YOUR) (NNS children))
        (NP
          (NP (PRP$ your) (JJ moral) (NNS beliefs))
          (PP (VBG regarding)
            (NP (NN sex))))))
    (. .)))

root(ROOT-0, Teach-1)
amod(children-3, YOUR-2)
nsubj(beliefs-6, children-3)
poss(beliefs-6, your-4)
amod(beliefs-6, moral-5)
xcomp(Teach-1, beliefs-6)
prep_regarding(beliefs-6, sex-8)

(ROOT
  (S (CC But)
    (PP (IN for)
      (NP
        (NP (DT the) (NN sake))
        (PP (IN of)
          (NP (NN society)))))
    (, ,)
    (NP (NNP let) (POS 's))
    (VP (VBP teach)
      (NP (DT all) (NNS children))
      (PRN (-LRB- -LRB-)
        (PP (VBG including)
          (NP (NNP yours)))
        (-RRB- -RRB-))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP it))
          (VP (VBZ means)
            (S
              (VP (TO to)
                (VP (VB be)
                  (ADJP (JJ responsible)
                    (PP (IN with)
                      (S
                        (VP (VBG regards)
                          (PP (TO to)
                            (NP (NN sex))))))))))))))
    (. .)))

cc(teach-10, But-1)
det(sake-4, the-3)
prep_for(teach-10, sake-4)
prep_of(sake-4, society-6)
nsubj(teach-10, let-8)
possessive(let-8, 's-9)
root(ROOT-0, teach-10)
det(children-12, all-11)
dobj(teach-10, children-12)
dep(teach-10, including-14)
pobj(including-14, yours-15)
dep(means-19, what-17)
nsubj(means-19, it-18)
xsubj(responsible-22, it-18)
dep(teach-10, means-19)
aux(responsible-22, to-20)
cop(responsible-22, be-21)
xcomp(means-19, responsible-22)
prepc_with(responsible-22, regards-24)
prep_to(regards-24, sex-26)

(ROOT
  (S
    (SBAR (RB Just) (IN in) (NN case)
      (S
        (NP (PRP they))
        (VP (VBP fall)
          (PRT (RP off))
          (NP (DT the) (JJ high) (NN bar)))))
    (NP (PRP you))
    (VP (VBP 've)
      (VP (VBN set)
        (PP (IN for)
          (NP (PRP them)))))
    (. .)))

advmod(fall-5, Just-1)
dep(fall-5, in-2)
dep(fall-5, case-3)
nsubj(fall-5, they-4)
advcl(set-12, fall-5)
prt(fall-5, off-6)
det(bar-9, the-7)
amod(bar-9, high-8)
dobj(fall-5, bar-9)
nsubj(set-12, you-10)
aux(set-12, 've-11)
root(ROOT-0, set-12)
prep_for(set-12, them-14)

(ROOT
  (SQ (MD Would) (RB n't)
    (NP (PRP you))
    (ADVP (RB rather))
    (VP
      (ADVP (PRP they))
      (VB fall)
      (PP (IN without)
        (NP (NN HIV))))
    (. ?)))

aux(fall-6, Would-1)
neg(fall-6, n't-2)
nsubj(fall-6, you-3)
advmod(fall-6, rather-4)
advmod(fall-6, they-5)
root(ROOT-0, fall-6)
prep_without(fall-6, HIV-8)

(ROOT
  (SQ
    (VP (VB Or)
      (NP (DT an) (JJ unwanted) (NN pregnancy)))
    (. ?)))

root(ROOT-0, Or-1)
det(pregnancy-4, an-2)
amod(pregnancy-4, unwanted-3)
dobj(Or-1, pregnancy-4)

(ROOT
  (S
    (NP (NNS Laws))
    (VP (MD should)
      (VP (VB be)
        (VP (VBN based)
          (PP (IN on)
            (S
              (VP (VBG protecting)
                (NP (JJ other) (NNS people))
                (, ,)
                (PP (RB not) (IN on)
                  (NP (NN morality)))))))))
    (. .)))

nsubjpass(based-4, Laws-1)
aux(based-4, should-2)
auxpass(based-4, be-3)
root(ROOT-0, based-4)
prepc_on(based-4, protecting-6)
amod(people-8, other-7)
dobj(protecting-6, people-8)
neg(protecting-6, not-10)
prep_on(protecting-6, morality-12)

(ROOT
  (S
    (NP (RB Just)
      (NP (JJ like) (NNS drugs))
      (, ,)
      (NP (NN gambling))
      (, ,)
      (CC and)
      (NP (NN prostitution)))
    (VP (MD ought)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ legal) (, ,) (RB so) (JJ long))
            (SBAR (IN as)
              (S
                (NP (DT those) (NNS activities))
                (VP (VBP do) (RB not)
                  (VP (VB hurt)
                    (NP (NNS others))))))))))
    (. .)))

advmod(drugs-3, Just-1)
amod(drugs-3, like-2)
nsubj(ought-9, drugs-3)
xsubj(long-15, drugs-3)
conj_and(drugs-3, gambling-5)
nsubj(ought-9, gambling-5)
xsubj(long-15, gambling-5)
conj_and(drugs-3, prostitution-8)
nsubj(ought-9, prostitution-8)
xsubj(long-15, prostitution-8)
root(ROOT-0, ought-9)
aux(long-15, to-10)
cop(long-15, be-11)
amod(long-15, legal-12)
advmod(long-15, so-14)
xcomp(ought-9, long-15)
mark(hurt-21, as-16)
det(activities-18, those-17)
nsubj(hurt-21, activities-18)
aux(hurt-21, do-19)
neg(hurt-21, not-20)
advcl(long-15, hurt-21)
dobj(hurt-21, others-22)

(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NN statement))
      (SBAR (IN that) (`` ``)
        (S
          (NP
            (NP (NN sex) (NN outside))
            (PP (IN of)
              (NP
                (NP (PRP it) (POS 's))
                (JJ proper) (NN context))))
          (VP (VBZ is)
            (ADVP (RB always))
            (, ,)
            (PP (IN in)
              (NP (DT every) (NN situation)))
            (, ,)
            (ADJP
              (ADJP (JJ damaging)
                (CC and)
                (JJ hurtful))
              (PP (TO to)
                (NP (DT both) (NNS parties))))
            ('' '')))))
    (VP (VBZ is)
      (ADJP (JJ laughable)))
    (. .)))

poss(statement-2, Your-1)
nsubj(laughable-27, statement-2)
complm(damaging-19, that-3)
nn(outside-6, sex-5)
nsubj(damaging-19, outside-6)
nsubj(hurtful-21, outside-6)
poss(context-11, it-8)
amod(context-11, proper-10)
prep_of(outside-6, context-11)
cop(damaging-19, is-12)
advmod(damaging-19, always-13)
det(situation-17, every-16)
prep_in(damaging-19, situation-17)
dep(statement-2, damaging-19)
dep(statement-2, hurtful-21)
conj_and(damaging-19, hurtful-21)
det(parties-24, both-23)
prep_to(damaging-19, parties-24)
cop(laughable-27, is-26)
root(ROOT-0, laughable-27)

(ROOT
  (S
    (NP (JJ Many) (NNS people))
    (VP
      (VP (VBP enjoy)
        (NP (NN sex))
        (PP (IN before)
          (NP (NN marriage))))
      (CC and)
      (VP (VB find)
        (S
          (NP (PRP it))
          (VP (TO to)
            (VP (VB be)
              (NP
                (NP (DT an) (JJ enriching) (NN part))
                (PP (IN of)
                  (NP (PRP$ their) (NNS relationships)))))))))
    (. .)))

amod(people-2, Many-1)
nsubj(enjoy-3, people-2)
nsubj(find-8, people-2)
root(ROOT-0, enjoy-3)
dobj(enjoy-3, sex-4)
prep_before(enjoy-3, marriage-6)
conj_and(enjoy-3, find-8)
nsubj(part-14, it-9)
aux(part-14, to-10)
cop(part-14, be-11)
det(part-14, an-12)
amod(part-14, enriching-13)
xcomp(find-8, part-14)
poss(relationships-17, their-16)
prep_of(part-14, relationships-17)

(ROOT
  (S
    (SBAR (RB Just) (IN because)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't))))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBP are)
              (ADJP (JJ wrong)))))))
    (. .)))

advmod(do-4, Just-1)
dep(do-4, because-2)
nsubj(do-4, you-3)
advcl(mean-8, do-4)
csubj(mean-8, do-4)
neg(do-4, n't-5)
aux(mean-8, does-6)
neg(mean-8, n't-7)
root(ROOT-0, mean-8)
nsubj(wrong-11, they-9)
cop(wrong-11, are-10)
ccomp(mean-8, wrong-11)

