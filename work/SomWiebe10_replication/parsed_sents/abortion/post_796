(ROOT
  (S
    (NP (NNP Friday))
    (, ,)
    (VP (VB post)
      (NP (PRP$ your) (NN argument))
      (PP (IN as)
        (NP
          (NP (DT an) (NN argument))
          (CONJP (RB rather) (IN than))
          (NP (DT the) (NN debate) (NN description))))
      (, ,)
      (SBAR (IN so)
        (S
          (NP (NNS people))
          (VP (MD can)
            (VP (VB Favor\/Opppose)
              (CC and)
              (VB Vote)
              (NP (NNP Up\/Down)))))))
    (. .)))

nsubj(post-3, Friday-1)
root(ROOT-0, post-3)
poss(argument-5, your-4)
dobj(post-3, argument-5)
det(argument-8, an-7)
prep_as(post-3, argument-8)
det(description-13, the-11)
nn(description-13, debate-12)
prep_as(post-3, description-13)
conj_negcc(argument-8, description-13)
mark(Favor\/Opppose-18, so-15)
nsubj(Favor\/Opppose-18, people-16)
nsubj(Vote-20, people-16)
aux(Favor\/Opppose-18, can-17)
advcl(post-3, Favor\/Opppose-18)
advcl(post-3, Vote-20)
conj_and(Favor\/Opppose-18, Vote-20)
dobj(Favor\/Opppose-18, Up\/Down-21)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP want)
          (S
            (VP (TO to)
              (VP (VB call)
                (NP (DT all) (NN abortion) (NN murder))
                (, ,)
                (FRAG (RB then)
                  (ADJP (JJ fine)))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (DT all) (NN murder)))
    (. .)))

mark(want-3, If-1)
nsubj(want-3, you-2)
xsubj(call-5, you-2)
advcl(murder-16, want-3)
aux(call-5, to-4)
xcomp(want-3, call-5)
det(murder-8, all-6)
nn(murder-8, abortion-7)
dobj(call-5, murder-8)
dep(call-5, then-10)
dep(then-10, fine-11)
nsubj(murder-16, it-13)
cop(murder-16, 's-14)
det(murder-16, all-15)
root(ROOT-0, murder-16)

(ROOT
  (SINV (RB So)
    (VP (VBP are))
    (NP
      (NP (NNS executions))
      (, ,)
      (NP (NN euthanasia))
      (, ,)
      (CC and)
      (NP
        (NP (JJ stepping))
        (PP (IN on)
          (NP (NNS snails)))))
    (. .)))

advmod(are-2, So-1)
root(ROOT-0, are-2)
nsubj(are-2, executions-3)
nsubj(are-2, euthanasia-5)
conj_and(executions-3, euthanasia-5)
nsubj(are-2, stepping-8)
conj_and(executions-3, stepping-8)
prep_on(stepping-8, snails-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN fetus))
        (VP (VBZ is)
          (ADJP (JJ undeveloped) (RB enough)
            (S
              (VP (TO to)
                (VP
                  (ADVP (RB not) (RB even))
                  (VB have)
                  (NP (NN consciousness)))))))))
    (, ,)
    (S
      (ADVP (RB then))
      (VP (VBG killing)
        (NP (PRP it))))
    (VP (VBZ is)
      (ADJP (RB just) (JJ fine)
        (PP (IN by)
          (NP (PRP me)))))
    (. .)))

mark(undeveloped-5, If-1)
det(fetus-3, a-2)
nsubj(undeveloped-5, fetus-3)
cop(undeveloped-5, is-4)
advcl(fine-18, undeveloped-5)
advmod(undeveloped-5, enough-6)
aux(have-10, to-7)
dep(even-9, not-8)
advmod(have-10, even-9)
xcomp(undeveloped-5, have-10)
dobj(have-10, consciousness-11)
advmod(killing-14, then-13)
csubj(fine-18, killing-14)
dobj(killing-14, it-15)
cop(fine-18, is-16)
advmod(fine-18, just-17)
root(ROOT-0, fine-18)
prep_by(fine-18, me-20)

(ROOT
  (S
    (NP (DT The) (NN world))
    (VP (VBZ 's)
      (ADJP (JJ overpopulated) (RB enough)
        (SBAR (IN as)
          (S
            (NP (PRP it))
            (VP (VBZ is))))))
    (. .)))

det(world-2, The-1)
nsubj(overpopulated-4, world-2)
cop(overpopulated-4, 's-3)
root(ROOT-0, overpopulated-4)
advmod(overpopulated-4, enough-5)
mark(is-8, as-6)
nsubj(is-8, it-7)
ccomp(overpopulated-4, is-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NNS people))
      (SBAR
        (WHNP (WP who))
        (S
          (VP
            (VP (VBP want)
              (S
                (VP (TO to)
                  (VP (VB abort)
                    (NP (PRP$ their) (NN child))))))
            (CC but)
            (VP (MD ca) (RB n't)
              (ADVP (WRB how))
              (VP
                (ADVP (RB well))
                (VB do)
                (NP (PRP you))))))))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP they))
          (VP (MD 'll)
            (VP (VB treat)
              (NP (PRP it))
              (SBAR (IN once)
                (S
                  (NP (PRP it))
                  (VP (VBZ 's)
                    (ADJP (JJ alive))))))))))
    (. ?)))

det(people-2, The-1)
nsubj(want-4, people-2)
nsubj(do-14, people-2)
nsubj(think-16, people-2)
rcmod(people-2, want-4)
aux(abort-6, to-5)
xcomp(want-4, abort-6)
poss(child-8, their-7)
dobj(abort-6, child-8)
aux(do-14, ca-10)
neg(do-14, n't-11)
advmod(do-14, how-12)
advmod(do-14, well-13)
rcmod(people-2, do-14)
conj_but(want-4, do-14)
dobj(do-14, you-15)
root(ROOT-0, think-16)
nsubj(treat-19, they-17)
aux(treat-19, 'll-18)
ccomp(think-16, treat-19)
dobj(treat-19, it-20)
mark(alive-24, once-21)
nsubj(alive-24, it-22)
cop(alive-24, 's-23)
advcl(treat-19, alive-24)

(ROOT
  (FRAG (RB Not)
    (VP (TO to)
      (VP (VB mention)
        (NP (DT the) (NN fact))
        (SBAR (IN that)
          (S
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP are)
                    (VP (VBN barred)
                      (PP (IN from)
                        (S
                          (VP (VBG getting)
                            (NP (DT an) (NN abortion))))))))))
            (VP (MD will)
              (ADVP (RB just))
              (VP (VB go)
                (CC and)
                (VB find)
                (NP (DT a) (NN place))
                (S
                  (VP (TO to)
                    (VP (VB get)
                      (NP (CD one))
                      (ADVP (RB anyway)))))))))))
    (. .)))

root(ROOT-0, Not-1)
aux(mention-3, to-2)
dep(Not-1, mention-3)
det(fact-5, the-4)
dobj(mention-3, fact-5)
complm(go-17, that-6)
nsubjpass(barred-10, those-7)
nsubj(go-17, those-7)
nsubj(find-19, those-7)
auxpass(barred-10, are-9)
rcmod(those-7, barred-10)
prepc_from(barred-10, getting-12)
det(abortion-14, an-13)
dobj(getting-12, abortion-14)
aux(go-17, will-15)
advmod(go-17, just-16)
ccomp(mention-3, go-17)
ccomp(mention-3, find-19)
conj_and(go-17, find-19)
det(place-21, a-20)
dobj(go-17, place-21)
aux(get-23, to-22)
xcomp(go-17, get-23)
dobj(get-23, one-24)
advmod(get-23, anyway-25)

(ROOT
  (S
    (VP (VBN Usually)
      (S
        (ADJP
          (ADVP (RB somewhere) (RB far))
          (RBR less) (JJ safe)))
      (PP (IN than)
        (NP (DT a) (NN hospital))))
    (. .)))

root(ROOT-0, Usually-1)
advmod(far-3, somewhere-2)
advmod(safe-5, far-3)
advmod(safe-5, less-4)
acomp(Usually-1, safe-5)
det(hospital-8, a-7)
prep_than(Usually-1, hospital-8)

(ROOT
  (S
    (NP
      (NP (DT The) (NN war))
      (PP (IN on)
        (NP (NN abortion))))
    (VP (VBZ is)
      (NP
        (NP (RB just) (RB as) (JJ misguided))
        (PP (IN as)
          (NP
            (NP (DT the) (NN war))
            (PP (IN on)
              (NP
                (NP (NNS drugs))
                (PP (IN for)
                  (NP (DT this) (NN reason)))))))))
    (. .)))

det(war-2, The-1)
nsubj(misguided-8, war-2)
prep_on(war-2, abortion-4)
cop(misguided-8, is-5)
advmod(misguided-8, just-6)
advmod(misguided-8, as-7)
root(ROOT-0, misguided-8)
det(war-11, the-10)
prep_as(misguided-8, war-11)
prep_on(war-11, drugs-13)
det(reason-16, this-15)
prep_for(drugs-13, reason-16)

