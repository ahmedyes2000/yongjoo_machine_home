(ROOT
  (S
    (S (`` ``)
      (S
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (NN sperm)
              (CC and)
              (NN egg))
            (VP (VBP come)
              (ADVP (RB together)))))
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (NN nothing) (RB else))
            (VP (VBN needed)
              (S
                (VP (TO to)
                  (VP (VB determine)
                    (SBAR (IN whether)
                      (S
                        (NP (PRP it))
                        (VP (MD will)
                          (VP (VB grow)
                            (S
                              (VP (TO to)
                                (VP (VB be)
                                  (NP (DT a) (NN human))))))))
                      (CC or)
                      (RB not)))))))))
      ('' '')
      (VP (VBP Are)
        (ADJP
          (NP (PRP you))
          (JJ sure))))
    (NP (PRP you))
    (VP (VBP 're) (RB not)
      (VP (VBG forgetting)
        (NP (NN something))))
    (. ?)))

advmod(come-6, when-2)
nsubj(come-6, sperm-3)
conj_and(sperm-3, egg-5)
nsubj(come-6, egg-5)
advcl(is-9, come-6)
advmod(come-6, together-7)
expl(is-9, there-8)
ccomp(Are-26, is-9)
csubj(Are-26, is-9)
nsubj(is-9, nothing-10)
xsubj(determine-14, nothing-10)
advmod(nothing-10, else-11)
partmod(nothing-10, needed-12)
aux(determine-14, to-13)
xcomp(needed-12, determine-14)
complm(grow-18, whether-15)
nsubj(grow-18, it-16)
xsubj(human-22, it-16)
aux(grow-18, will-17)
ccomp(determine-14, grow-18)
aux(human-22, to-19)
cop(human-22, be-20)
det(human-22, a-21)
xcomp(grow-18, human-22)
ccomp(determine-14, not-24)
conj_or(grow-18, not-24)
dep(forgetting-32, Are-26)
npadvmod(sure-28, you-27)
acomp(Are-26, sure-28)
nsubj(forgetting-32, you-29)
aux(forgetting-32, 're-30)
neg(forgetting-32, not-31)
root(ROOT-0, forgetting-32)
dobj(forgetting-32, something-33)

