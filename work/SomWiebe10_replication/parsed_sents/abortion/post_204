(ROOT
  (S
    (NP (NNP Pro-life))
    (VP (MD should)
      (VP (VB mean)
        (S
          (VP
            (CONJP (RB not) (JJ only))
            (VP (VBG preserving)
              (NP (DT the) (NN life)))
            (, ,)
            (CONJP (CC but)
              (RB also))
            (VP (VBG working)
              (S
                (VP (TO to)
                  (VP (VB improve)
                    (NP
                      (NP (DT the) (NN condition))
                      (SBAR
                        (S
                          (NP (DT the) (NN life))
                          (VP (VBZ exists)
                            (PRT (RP in))))))))))))))
    (. .)))

nsubj(mean-3, Pro-life-1)
aux(mean-3, should-2)
root(ROOT-0, mean-3)
neg(only-5, not-4)
preconj(preserving-6, only-5)
ccomp(mean-3, preserving-6)
det(life-8, the-7)
dobj(preserving-6, life-8)
ccomp(mean-3, working-12)
conj_and(preserving-6, working-12)
aux(improve-14, to-13)
xcomp(working-12, improve-14)
det(condition-16, the-15)
dobj(improve-14, condition-16)
dobj(exists-19, condition-16)
det(life-18, the-17)
nsubj(exists-19, life-18)
rcmod(condition-16, exists-19)
prt(exists-19, in-20)

(ROOT
  (S
    (PP (IN On)
      (NP
        (NP (DT both) (NNS ends))
        (PRN (-LRB- -LRB-)
          (NP (NN abortion)
            (CC and)
            (NNS euthanasia))
          (-RRB- -RRB-))))
    (NP (NN life))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB be)
            (VP (VBN protected))))))
    (. .)))

det(ends-3, both-2)
prep_on(needs-10, ends-3)
appos(ends-3, abortion-5)
appos(ends-3, euthanasia-7)
conj_and(abortion-5, euthanasia-7)
nsubj(needs-10, life-9)
xsubj(protected-13, life-9)
root(ROOT-0, needs-10)
aux(protected-13, to-11)
auxpass(protected-13, be-12)
xcomp(needs-10, protected-13)

(ROOT
  (SQ (NNP Does)
    (NP (NNP Iraq)
      (CC or)
      (NNP Afghanistan))
    (VP (VB qualify)
      (PP (IN as)
        (NP (DT a) (NN war))))
    (. ?)))

dep(qualify-5, Does-1)
nsubj(qualify-5, Iraq-2)
conj_or(Iraq-2, Afghanistan-4)
nsubj(qualify-5, Afghanistan-4)
root(ROOT-0, qualify-5)
det(war-8, a-7)
prep_as(qualify-5, war-8)

(ROOT
  (S
    (NP (DT Some) (NNP Police) (NNS forces))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBN accused)
          (PP (IN of)
            (S
              (VP (VBG using)
                (NP (NNS torture)))))
          (, ,)
          (SBAR
            (WHADVP (WRB how))
            (S
              (VP (VBP do)
                (VP (VB handle)
                  (NP (PRP them)))))))))
    (. ?)))

det(forces-3, Some-1)
nn(forces-3, Police-2)
nsubjpass(accused-6, forces-3)
aux(accused-6, have-4)
auxpass(accused-6, been-5)
root(ROOT-0, accused-6)
prepc_of(accused-6, using-8)
dobj(using-8, torture-9)
advmod(handle-13, how-11)
aux(handle-13, do-12)
ccomp(accused-6, handle-13)
dobj(handle-13, them-14)

(ROOT
  (S
    (NP (NNP Abortion))
    (VP (VBZ takes)
      (PP (IN over)
        (NP
          (QP (DT a) (CD million))
          (NNS lives)))
      (NP
        (NP (DT every) (NN year))
        (PRN (-LRB- -LRB-)
          (PP
            (ADVP (RB just))
            (IN in)
            (NP (DT the) (NNP USA)))
          (-RRB- -RRB-))
        (: ;)
        (SBAR
          (WHNP (WRB how) (JJ many))
          (S
            (VP (VBP have)
              (VP (VBN died)
                (PP (IN from)
                  (NP (NNP torture)))))))))
    (. ?)))

nsubj(takes-2, Abortion-1)
root(ROOT-0, takes-2)
quantmod(million-5, a-4)
num(lives-6, million-5)
prep_over(takes-2, lives-6)
det(year-8, every-7)
dobj(takes-2, year-8)
advmod(in-11, just-10)
dep(year-8, in-11)
det(USA-13, the-12)
pobj(in-11, USA-13)
advmod(many-17, how-16)
advmod(died-19, many-17)
nsubj(died-19, many-17)
aux(died-19, have-18)
rcmod(year-8, died-19)
prep_from(died-19, torture-21)

(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (`` ``) (NN war) ('' ''))
        (SBAR
          (S
            (VP (VBP do))))))
    (NP (PRP you))
    (ADVP (RB just))
    (VP (VBP look)
      (PP (IN at)
        (NP
          (NP
            (NP (DT the) (NN number))
            (PP (IN of)
              (NP (JJ American) (NNS soldiers)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP have)
                  (VP (VBN died))))))
          (, ,)
          (CC or)
          (NP
            (NP (DT the) (JJ total) (NN number))
            (PP (IN of)
              (NP
                (NP (NNS persons))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP have)
                      (VP (VBN died)))))))))))
    (. ?)))

det(war-4, the-2)
prep_in(look-9, war-4)
rcmod(war-4, do-6)
nsubj(look-9, you-7)
advmod(look-9, just-8)
root(ROOT-0, look-9)
det(number-12, the-11)
prep_at(look-9, number-12)
nsubj(died-18, number-12)
amod(soldiers-15, American-14)
prep_of(number-12, soldiers-15)
aux(died-18, have-17)
rcmod(number-12, died-18)
det(number-23, the-21)
amod(number-23, total-22)
prep_at(look-9, number-23)
conj_or(number-12, number-23)
nsubj(died-18, number-23)
prep_of(number-23, persons-25)
nsubj(died-28, persons-25)
aux(died-28, have-27)
rcmod(persons-25, died-28)

(ROOT
  (SQ (VBP Do)
    (NP (PRP we))
    (VP (VB weigh)
      (NP
        (NP (DT the) (NNS lives))
        (VP (VBN saved)
          (PP (IN against)
            (NP
              (NP (DT the) (NNS lives))
              (VP (VBN lost)))))))
    (. ?)))

aux(weigh-3, Do-1)
nsubj(weigh-3, we-2)
root(ROOT-0, weigh-3)
det(lives-5, the-4)
dobj(weigh-3, lives-5)
partmod(lives-5, saved-6)
det(lives-9, the-8)
prep_against(saved-6, lives-9)
partmod(lives-9, lost-10)

(ROOT
  (S
    (NP
      (NP (DT The) (NN number))
      (PP (IN of)
        (NP
          (NP (NNS bodies))
          (VP (VBN found)
            (PP (IN in)
              (NP
                (NP (DT the) (JJ mass) (NNS graves))
                (PP (IN in)
                  (NP (NNP Iraq)))))))))
    (VP (VBZ has)
      (VP (VBN exceeded)
        (NP
          (NP (DT the) (NNS estimates))
          (SBAR
            (WHPP (IN of)
              (WHNP
                (WHADJP (WRB how) (JJ many))
                (NNS people)))
            (S
              (NP (NNP Saddam) (NNP Hussein))
              (VP (VBD was)
                (VP (VBN thought)
                  (S
                    (VP (TO to)
                      (VP (VB have)
                        (VP (VBN executed))))))))))))
    (. .)))

det(number-2, The-1)
nsubj(exceeded-13, number-2)
prep_of(number-2, bodies-4)
partmod(bodies-4, found-5)
det(graves-9, the-7)
amod(graves-9, mass-8)
prep_in(found-5, graves-9)
prep_in(graves-9, Iraq-11)
aux(exceeded-13, has-12)
root(ROOT-0, exceeded-13)
det(estimates-15, the-14)
dobj(exceeded-13, estimates-15)
advmod(many-18, how-17)
amod(people-19, many-18)
rel(thought-23, people-19)
nn(Hussein-21, Saddam-20)
nsubjpass(thought-23, Hussein-21)
xsubj(executed-26, Hussein-21)
auxpass(thought-23, was-22)
rcmod(estimates-15, thought-23)
aux(executed-26, to-24)
aux(executed-26, have-25)
xcomp(thought-23, executed-26)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP use)
      (S
        (NP (DT the) (NN term))
        (`` ``)
        (NP (JJ full) (JJ fledged) (JJ human) (NN being))
        ('' '')))
    (. .)))

nsubj(use-2, You-1)
root(ROOT-0, use-2)
det(term-4, the-3)
dep(being-9, term-4)
amod(being-9, full-6)
amod(being-9, fledged-7)
amod(being-9, human-8)
dep(use-2, being-9)

(ROOT
  (S
    (INTJ (VB Please))
    (VP (VB define)
      (NP (DT this) (NN term)))
    (. .)))

dep(define-2, Please-1)
root(ROOT-0, define-2)
det(term-4, this-3)
dobj(define-2, term-4)

(ROOT
  (SBARQ
    (WHPP (IN At)
      (WHNP (WDT what) (NN point)))
    (SQ (VBZ does)
      (NP (DT a) (NN person))
      (VP
        (ADVP (RB no) (RB longer))
        (VBP rate)
        (NP (`` ``) (JJ full) (NN fledged) ('' ''))))
    (. ?)))

det(point-3, what-2)
prep_at(rate-9, point-3)
aux(rate-9, does-4)
det(person-6, a-5)
nsubj(rate-9, person-6)
advmod(longer-8, no-7)
advmod(rate-9, longer-8)
root(ROOT-0, rate-9)
amod(fledged-12, full-11)
dobj(rate-9, fledged-12)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP (PRP I))
        (VP
          (VP (VBP get)
            (PP (IN into)
              (NP (DT a) (NN car) (NN accident))))
          (CC and)
          (VP (MD can)
            (ADVP (RB no) (RB longer))
            (VP (VB take)
              (NP
                (NP (NN care))
                (PP (IN of)
                  (NP (PRP myself)))))))))
    (, ,) (MD would)
    (NP (PRP I))
    (ADVP (RB no) (RB longer))
    (VP (VB be)
      (NP (`` ``) (JJ full) (NN fledged) ('' '')))
    (. ?)))

mark(get-3, If-1)
nsubj(get-3, I-2)
nsubj(take-12, I-2)
advcl(fledged-24, get-3)
det(accident-7, a-5)
nn(accident-7, car-6)
prep_into(get-3, accident-7)
aux(take-12, can-9)
advmod(longer-11, no-10)
advmod(take-12, longer-11)
conj_and(get-3, take-12)
advcl(fledged-24, take-12)
dobj(take-12, care-13)
prep_of(care-13, myself-15)
aux(fledged-24, would-17)
nsubj(fledged-24, I-18)
advmod(longer-20, no-19)
advmod(fledged-24, longer-20)
cop(fledged-24, be-21)
amod(fledged-24, full-23)
root(ROOT-0, fledged-24)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBD did) (RB not)
      (VP (VB mention)
        (NP (DT the) (NN death) (NN penalty))))
    (. .)))

nsubj(mention-4, You-1)
aux(mention-4, did-2)
neg(mention-4, not-3)
root(ROOT-0, mention-4)
det(penalty-7, the-5)
nn(penalty-7, death-6)
dobj(mention-4, penalty-7)

(ROOT
  (S
    (NP (DT This))
    (VP (MD should)
      (ADVP (RB only))
      (VP (VB be)
        (VP (VBN allowed)
          (SBAR (IN if)
            (S
              (VP (VBD needed)
                (S
                  (VP (TO to)
                    (VP (VB protect)
                      (NP (NN society)))))))))))
    (. .)))

nsubjpass(allowed-5, This-1)
aux(allowed-5, should-2)
advmod(allowed-5, only-3)
auxpass(allowed-5, be-4)
root(ROOT-0, allowed-5)
mark(needed-7, if-6)
advcl(allowed-5, needed-7)
aux(protect-9, to-8)
xcomp(needed-7, protect-9)
dobj(protect-9, society-10)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT a) (NN person))
        (VP (MD can)
          (VP (VB be)
            (VP (VBN kept)
              (ADJP (JJ isolated))
              (PP (IN from)
                (NP (NN society))))))))
    (, ,)
    (NP
      (NP (RB then) (DT the) (NN value))
      (PP (IN of)
        (NP (PRP$ their) (NN life))))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB be)
            (ADJP (JJ respected))))))
    (. .)))

mark(kept-6, If-1)
det(person-3, a-2)
nsubjpass(kept-6, person-3)
aux(kept-6, can-4)
auxpass(kept-6, be-5)
advcl(needs-17, kept-6)
acomp(kept-6, isolated-7)
prep_from(kept-6, society-9)
advmod(value-13, then-11)
det(value-13, the-12)
nsubj(needs-17, value-13)
xsubj(respected-20, value-13)
poss(life-16, their-15)
prep_of(value-13, life-16)
root(ROOT-0, needs-17)
aux(respected-20, to-18)
cop(respected-20, be-19)
xcomp(needs-17, respected-20)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN middle)))
    (NP (PRP we))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB work)
            (S
              (VP (TO to)
                (VP (VB improve)
                  (NP (DT the) (NNS conditions))
                  (SBAR (IN that)
                    (S
                      (NP (NN everyone))
                      (VP (VBZ lives)
                        (PRT (RP in))))))))))))
    (. .)))

det(middle-3, the-2)
prep_in(need-5, middle-3)
nsubj(need-5, we-4)
xsubj(work-7, we-4)
root(ROOT-0, need-5)
aux(work-7, to-6)
xcomp(need-5, work-7)
aux(improve-9, to-8)
xcomp(work-7, improve-9)
det(conditions-11, the-10)
dobj(improve-9, conditions-11)
complm(lives-14, that-12)
nsubj(lives-14, everyone-13)
ccomp(improve-9, lives-14)
prt(lives-14, in-15)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN person))
        (VP (MD can) (RB not)
          (VP (VB be)
            (VP (VBN isolated)
              (PP (IN from)
                (NP (NN society))))))))
    (, ,)
    (NP
      (NP (RB then) (DT the) (NN value))
      (PP (IN of)
        (NP
          (NP (DT the) (JJ many) (NNS lives))
          (PP (IN in)
            (NP (NN society))))))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP (JJR greater) (NN weight))
            (SBAR (IN than)
              (S
                (NP (DT the) (CD one) (NN person))
                (VP (VBZ s)
                  (NP (NN life)))))))))
    (. .)))

mark(isolated-7, If-1)
det(person-3, the-2)
nsubjpass(isolated-7, person-3)
aux(isolated-7, can-4)
neg(isolated-7, not-5)
auxpass(isolated-7, be-6)
advcl(needs-20, isolated-7)
prep_from(isolated-7, society-9)
advmod(value-13, then-11)
det(value-13, the-12)
nsubj(needs-20, value-13)
xsubj(have-22, value-13)
det(lives-17, the-15)
amod(lives-17, many-16)
prep_of(value-13, lives-17)
prep_in(lives-17, society-19)
root(ROOT-0, needs-20)
aux(have-22, to-21)
xcomp(needs-20, have-22)
amod(weight-24, greater-23)
dobj(have-22, weight-24)
mark(life-30, than-25)
det(person-28, the-26)
num(person-28, one-27)
nsubj(life-30, person-28)
cop(life-30, s-29)
advcl(have-22, life-30)

(ROOT
  (S
    (NP (NNP Abortion))
    (VP (VBZ kills)
      (NP
        (NP (DT a) (JJ known) (NN number))
        (PP (IN of)
          (NP (NNS persons))))
      (, ,)
      (SBAR (IN while)
        (S
          (NP (NN torture)
            (CC and)
            (NN war) (NN death) (NNS tolls))
          (VP (VBP do) (RB not)
            (VP (VB come)
              (NP (NN close))
              (PP (IN in)
                (NP (NN quantity))))))))
    (. .)))

nsubj(kills-2, Abortion-1)
root(ROOT-0, kills-2)
det(number-5, a-3)
amod(number-5, known-4)
dobj(kills-2, number-5)
prep_of(number-5, persons-7)
mark(come-17, while-9)
nn(tolls-14, torture-10)
conj_and(torture-10, war-12)
nn(tolls-14, war-12)
nn(tolls-14, death-13)
nsubj(come-17, tolls-14)
aux(come-17, do-15)
neg(come-17, not-16)
advcl(kills-2, come-17)
dobj(come-17, close-18)
prep_in(come-17, quantity-20)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB provide)
            (NP
              (ADJP
                (ADVP (IN at) (JJS least))
                (JJ basic))
              (NN health) (NN care))))))
    (. .)))

nsubj(need-2, We-1)
xsubj(provide-4, We-1)
root(ROOT-0, need-2)
aux(provide-4, to-3)
xcomp(need-2, provide-4)
advmod(basic-7, at-5)
pobj(at-5, least-6)
amod(care-9, basic-7)
nn(care-9, health-8)
dobj(provide-4, care-9)

(ROOT
  (S
    (NP (DT All) (NNS people))
    (VP (MD should)
      (VP (VB have)
        (NP
          (NP (NNS roofs))
          (PP (IN over)
            (NP (RB there))))
        (ADVP (NN head))))
    (. .)))

det(people-2, All-1)
nsubj(have-4, people-2)
aux(have-4, should-3)
root(ROOT-0, have-4)
dobj(have-4, roofs-5)
prep(roofs-5, over-6)
pobj(over-6, there-7)
advmod(have-4, head-8)

(ROOT
  (S
    (NP (EX There))
    (VP (MD should)
      (VP (VB be)
        (NP (DT a) (JJ minimum) (NN standard))
        (SBAR (IN that)
          (S
            (NP (DT all) (NNS people))
            (VP (MD should)
              (VP (VB be)
                (VP (VBN provided))))))))
    (. .)))

expl(standard-6, There-1)
aux(standard-6, should-2)
cop(standard-6, be-3)
det(standard-6, a-4)
amod(standard-6, minimum-5)
root(ROOT-0, standard-6)
complm(provided-12, that-7)
det(people-9, all-8)
nsubjpass(provided-12, people-9)
aux(provided-12, should-10)
auxpass(provided-12, be-11)
ccomp(standard-6, provided-12)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (NNS people))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB give)
            (PRT (RP back))
            (PP (IN as)
              (S
                (NP (PRP they))
                (VP (MD can))))
            (PRN (-LRB- -LRB-)
              (FRAG (RB not)
                (NP (DT a) (NN welfare) (NN world)))
              (-RRB- -RRB-))))))
    (. .)))

advmod(need-4, However-1)
nsubj(need-4, people-3)
xsubj(give-6, people-3)
root(ROOT-0, need-4)
aux(give-6, to-5)
xcomp(need-4, give-6)
prt(give-6, back-7)
nsubj(can-10, they-9)
prepc_as(give-6, can-10)
dep(give-6, not-12)
det(world-15, a-13)
nn(world-15, welfare-14)
dep(not-12, world-15)

(ROOT
  (S
    (NP (NNP Torture))
    (VP (VBZ is)
      (NP
        (NP (NN part))
        (PP (IN of)
          (NP (DT the) (JJ middle) (NN ground)))))
    (. .)))

nsubj(part-3, Torture-1)
cop(part-3, is-2)
root(ROOT-0, part-3)
det(ground-7, the-5)
amod(ground-7, middle-6)
prep_of(part-3, ground-7)

(ROOT
  (S
    (NP (CD One) (NN thing)
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ needs)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN cleared)
                    (PRT (RP up))))))))))
    (VP (VBZ is)
      (PP (IN at)
        (NP
          (NP (NN point))
          (SBAR
            (S
              (VP (VBP do)
                (S
                  (NP (PRP you))
                  (VP
                    (VP (VB cross)
                      (NP
                        (NP (DT the) (NN line))
                        (PP (IN between)
                          (NP (NN interrogation)))))
                    (CC and)
                    (VP (VB torture))))))))))
    (. ?)))

num(thing-2, One-1)
nsubj(is-9, thing-2)
nsubj(needs-4, that-3)
ccomp(thing-2, needs-4)
aux(cleared-7, to-5)
auxpass(cleared-7, be-6)
xcomp(needs-4, cleared-7)
prt(cleared-7, up-8)
root(ROOT-0, is-9)
prep_at(is-9, point-11)
rcmod(point-11, do-12)
nsubj(cross-14, you-13)
nsubj(torture-20, you-13)
ccomp(do-12, cross-14)
det(line-16, the-15)
dobj(cross-14, line-16)
prep_between(line-16, interrogation-18)
ccomp(do-12, torture-20)
conj_and(cross-14, torture-20)

(ROOT
  (SQ (VBZ Is)
    (NP (NN interrogation))
    (VP (VBN allowed))
    (. ?)))

auxpass(allowed-3, Is-1)
nsubjpass(allowed-3, interrogation-2)
root(ROOT-0, allowed-3)

(ROOT
  (SQ (VBZ Is)
    (NP (DT the) (NN line))
    (NP
      (NP (JJ different))
      (PP (IN for)
        (NP
          (NP (NNS times))
          (PP (IN of)
            (NP (NN war)
              (CC and)
              (NN peace))))))
    (. ?)))

cop(different-4, Is-1)
det(line-3, the-2)
nsubj(different-4, line-3)
root(ROOT-0, different-4)
prep_for(different-4, times-6)
prep_of(times-6, war-8)
prep_of(times-6, peace-10)
conj_and(war-8, peace-10)

