(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have) (RB n't)
        (VP (VBN given)
          (NP (DT any) (NN reason)
            (S
              (VP (TO to)
                (VP (VB rule)
                  (PRT (RP out))
                  (NP (NN conception))
                  (PP (IN as)
                    (S
                      (VP (VBG being)
                        (ADJP (JJ sufficient))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP you))
      (VP (VBP have)
        (VP (VBN allowed)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJ necessary))))))))
    (. .)))

nsubj(given-4, You-1)
aux(given-4, have-2)
neg(given-4, n't-3)
root(ROOT-0, given-4)
det(reason-6, any-5)
dobj(given-4, reason-6)
aux(rule-8, to-7)
infmod(reason-6, rule-8)
prt(rule-8, out-9)
dobj(rule-8, conception-10)
cop(sufficient-13, being-12)
prepc_as(rule-8, sufficient-13)
nsubj(allowed-18, you-16)
aux(allowed-18, have-17)
conj_and(given-4, allowed-18)
complm(necessary-22, that-19)
nsubj(necessary-22, it-20)
cop(necessary-22, is-21)
ccomp(allowed-18, necessary-22)

(ROOT
  (S
    (NP
      (NP (NNP Miner) (POS 's))
      (NN point))
    (VP (VBD was)
      (SBAR (RB not) (IN that)
        (S
          (NP (PRP it))
          (VP (VBD was)
            (ADVP (RB logically))
            (ADJP (JJ necessary))
            (SBAR (IN that)
              (S
                (NP (NN conception))
                (VP (VB be)
                  (VP (VBN considered)
                    (NP (DT the) (JJ starting) (NN point))
                    (SBAR (RB rather) (IN that)
                      (S
                        (NP (PRP it))
                        (VP (VBZ is)
                          (ADJP (`` ``) (JJ logical) ('' '')
                            (PP (TO to)
                              (NP
                                (NP (NNP err))
                                (PP (IN on)
                                  (NP
                                    (NP (DT the) (NN side))
                                    (PP (IN of)
                                      (NP (NN caution))))))))
                          (SBAR
                            (WHADVP (WRB when))
                            (S
                              (ADVP (RB potentially))
                              (VP (VBG taking)
                                (NP (JJ human) (NN life))))))))))))))))
    (. .)))

poss(point-3, Miner-1)
nsubj(was-4, point-3)
root(ROOT-0, was-4)
dep(necessary-10, not-5)
dep(necessary-10, that-6)
nsubj(necessary-10, it-7)
cop(necessary-10, was-8)
advmod(necessary-10, logically-9)
ccomp(was-4, necessary-10)
complm(considered-14, that-11)
nsubjpass(considered-14, conception-12)
auxpass(considered-14, be-13)
ccomp(necessary-10, considered-14)
det(point-17, the-15)
amod(point-17, starting-16)
dobj(considered-14, point-17)
advmod(logical-23, rather-18)
dep(logical-23, that-19)
nsubj(logical-23, it-20)
cop(logical-23, is-21)
dep(considered-14, logical-23)
prep_to(logical-23, err-26)
det(side-29, the-28)
prep_on(err-26, side-29)
prep_of(side-29, caution-31)
advmod(taking-34, when-32)
advmod(taking-34, potentially-33)
advcl(logical-23, taking-34)
amod(life-36, human-35)
dobj(taking-34, life-36)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ non-technical) (NN use))
          (PP (IN of)
            (ADJP (`` ``) (JJ logical) ('' ''))))))
    (, ,)
    (CC and)
    (S
      (NP (PRP he))
      (VP (MD might)
        (VP (VB have)
          (VP (VBN been)
            (ADJP (JJR better) (RP off)
              (S
                (VP (TO to)
                  (VP (VB say) (`` ``)
                    (ADJP (JJ rational))
                    ('' '')))))))))
    (. .)))

nsubj(use-5, This-1)
cop(use-5, is-2)
det(use-5, a-3)
amod(use-5, non-technical-4)
root(ROOT-0, use-5)
prep_of(use-5, logical-8)
nsubj(better-16, he-12)
aux(better-16, might-13)
aux(better-16, have-14)
cop(better-16, been-15)
conj_and(use-5, better-16)
dep(better-16, off-17)
aux(say-19, to-18)
xcomp(better-16, say-19)
acomp(say-19, rational-21)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP get)
          (PP (IN past)
            (NP (DT that) (NN point))))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP he))
    (VP (VBZ is)
      (ADVP (RB certainly))
      (ADJP (JJ right))
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP wish)
                (S
                  (VP (TO to)
                    (VP (VB choose)
                      (NP (DT the) (JJS most)
                        (NP
                          (NP (`` ``) (JJ cautious) ('' '') (NN interpretation))
                          (, ,)
                          (ADVP (RB then))))))))))
          (NP (PRP it))
          (VP (MD would)
            (VP (VB mean)
              (SBAR (IN that)
                (S
                  (NP (PRP you))
                  (VP (MD 'd)
                    (VP (VB have)
                      (S
                        (VP (TO to)
                          (VP (VB pick)
                            (NP (NN conception))))))))))))))
    (. .)))

mark(get-3, If-1)
nsubj(get-3, you-2)
advcl(right-12, get-3)
det(point-6, that-5)
prep_past(get-3, point-6)
advmod(right-12, then-8)
nsubj(right-12, he-9)
cop(right-12, is-10)
advmod(right-12, certainly-11)
root(ROOT-0, right-12)
complm(mean-29, that-13)
mark(wish-16, if-14)
nsubj(wish-16, you-15)
xsubj(choose-18, you-15)
advcl(mean-29, wish-16)
aux(choose-18, to-17)
xcomp(wish-16, choose-18)
det(interpretation-24, the-19)
amod(interpretation-24, most-20)
amod(interpretation-24, cautious-22)
dobj(choose-18, interpretation-24)
advmod(interpretation-24, then-26)
nsubj(mean-29, it-27)
aux(mean-29, would-28)
ccomp(right-12, mean-29)
complm(have-33, that-30)
nsubj(have-33, you-31)
xsubj(pick-35, you-31)
aux(have-33, 'd-32)
ccomp(mean-29, have-33)
aux(pick-35, to-34)
xcomp(have-33, pick-35)
dobj(pick-35, conception-36)

(ROOT
  (S (-LRB- -LRB-)
    (NP
      (NP (PRP$ Your) (NN suggestion))
      (PP (IN of)
        (NP (JJ haploid) (NNS gametes))))
    (VP (VBZ is)
      (ADJP (RB just) (JJ silly)))
    (. .) (-RRB- -RRB-)))

poss(suggestion-3, Your-2)
nsubj(silly-9, suggestion-3)
amod(gametes-6, haploid-5)
prep_of(suggestion-3, gametes-6)
cop(silly-9, is-7)
advmod(silly-9, just-8)
root(ROOT-0, silly-9)

