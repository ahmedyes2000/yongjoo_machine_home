(ROOT
  (S
    (NP (PRP I))
    (VP (MD 'd)
      (VP (VB like)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP (DT the) (NN time)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB address)
                        (NP
                          (NP (JJ several) (NNS tings))
                          (SBAR
                            (WHNP (WDT that))
                            (S
                              (VP (VBP have)
                                (VP (VBN been)
                                  (VP (VBN raised)
                                    (PP (IN in)
                                      (NP (DT this) (NN debate))))))))))
                      (CC and)
                      (VP (VB clarify)
                        (NP (PRP$ my) (NN argument))
                        (PP (IN against)
                          (NP (NN abortion)))))))))))))
    (. .)))

nsubj(like-3, I-1)
xsubj(take-5, I-1)
aux(like-3, 'd-2)
root(ROOT-0, like-3)
aux(take-5, to-4)
xcomp(like-3, take-5)
det(time-7, the-6)
dobj(take-5, time-7)
aux(address-9, to-8)
infmod(time-7, address-9)
amod(tings-11, several-10)
dobj(address-9, tings-11)
nsubjpass(raised-15, tings-11)
aux(raised-15, have-13)
auxpass(raised-15, been-14)
rcmod(tings-11, raised-15)
det(debate-18, this-17)
prep_in(raised-15, debate-18)
infmod(time-7, clarify-20)
conj_and(address-9, clarify-20)
poss(argument-22, my-21)
dobj(clarify-20, argument-22)
prep_against(clarify-20, abortion-24)

(ROOT
  (S
    (ADVP (RB First))
    (, ,)
    (NP
      (NP (DT the) (NN affect))
      (NP (DT this) (NN debate)))
    (VP (VBZ has)
      (NP
        (PP (IN on)
          (NP
            (NP (NNS women))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP have)
                  (VP (VBN had)
                    (NP (NNS abortions))))))))))
    (. .)))

advmod(has-7, First-1)
det(affect-4, the-3)
nsubj(has-7, affect-4)
det(debate-6, this-5)
dep(affect-4, debate-6)
root(ROOT-0, has-7)
dobj(has-7, on-8)
pobj(on-8, women-9)
nsubj(had-12, women-9)
aux(had-12, have-11)
rcmod(women-9, had-12)
dobj(had-12, abortions-13)

(ROOT
  (S
    (S
      (S
        (SBAR
          (WHADVP (WRB When))
          (S
            (NP (PRP He))
            (VP (VBD died))))
        (, ,)
        (NP (PRP you))
        (VP (VBD died)))
      (CC and)
      (S
        (NP
          (NP (DT the) (NNS charges))
          (PP (IN against)
            (NP (PRP you))))
        (VP (VBP are)
          (VP (VBN paid)
            (PP (IN in)
              (ADJP (JJ full)))))))
    (, ,)
    (NP (DT the) (NN debt))
    (VP (VBZ is)
      (VP (VBN canceled)))
    (. .)))

advmod(died-3, When-1)
nsubj(died-3, He-2)
advcl(died-6, died-3)
nsubj(died-6, you-5)
ccomp(canceled-20, died-6)
det(charges-9, the-8)
nsubjpass(paid-13, charges-9)
prep_against(charges-9, you-11)
auxpass(paid-13, are-12)
conj_and(died-6, paid-13)
ccomp(canceled-20, paid-13)
prep_in(paid-13, full-15)
det(debt-18, the-17)
nsubjpass(canceled-20, debt-18)
auxpass(canceled-20, is-19)
root(ROOT-0, canceled-20)

(ROOT
  (S
    (S
      (ADVP (RB Then))
      (NP
        (NP (DT the) (NN life))
        (PP (IN of)
          (NP
            (NP (NN perfection))
            (SBAR
              (S
                (NP (PRP He))
                (VP (VBD lived)))))))
      (VP (VBZ becomes)
        (NP (PRP$ yours))))
    (: ;)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (VP (VBN laid)
          (PP (TO to)
            (NP (PRP$ your) (NN account))))))
    (. .)))

advmod(yours-9, Then-1)
det(life-3, the-2)
nsubj(yours-9, life-3)
prep_of(life-3, perfection-5)
dobj(lived-7, perfection-5)
nsubj(lived-7, He-6)
rcmod(perfection-5, lived-7)
cop(yours-9, becomes-8)
root(ROOT-0, yours-9)
nsubjpass(laid-13, it-11)
auxpass(laid-13, is-12)
parataxis(yours-9, laid-13)
poss(account-16, your-15)
prep_to(laid-13, account-16)

(ROOT
  (S (IN So)
    (NP (PRP you))
    (VP (VBP go)
      (PP (IN from)
        (NP (DT an) (JJ infinity) (JJ negative) (NN debt)))
      (PP (TO to)
        (NP (DT an)
          (ADJP (RB infinity) (JJ positive))
          (NNS righteousness))))
    (. .)))

dep(go-3, So-1)
nsubj(go-3, you-2)
root(ROOT-0, go-3)
det(debt-8, an-5)
amod(debt-8, infinity-6)
amod(debt-8, negative-7)
prep_from(go-3, debt-8)
det(righteousness-13, an-10)
advmod(positive-12, infinity-11)
amod(righteousness-13, positive-12)
prep_to(go-3, righteousness-13)

(ROOT
  (S (CC And)
    (PP (IN through)
      (NP (PRP$ His) (NN resurrection)))
    (NP (PRP you))
    (VP (VBP are)
      (VP (VBN raised)
        (PP (TO to)
          (NP
            (NP (NNS newness))
            (PP (IN of)
              (NP (NN life)))))))
    (. .)))

cc(raised-7, And-1)
poss(resurrection-4, His-3)
prep_through(raised-7, resurrection-4)
nsubjpass(raised-7, you-5)
auxpass(raised-7, are-6)
root(ROOT-0, raised-7)
prep_to(raised-7, newness-9)
prep_of(newness-9, life-11)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (ADJP (RB only) (JJ possible)
        (PP (IN through)
          (NP (NN repentance)
            (CC and)
            (NN faith)))))
    (. .)))

nsubj(possible-4, This-1)
cop(possible-4, is-2)
advmod(possible-4, only-3)
root(ROOT-0, possible-4)
prep_through(possible-4, repentance-6)
prep_through(possible-4, faith-8)
conj_and(repentance-6, faith-8)

(ROOT
  (S
    (VP
      (VP (VB Confess)
        (NP (PRP$ your) (NNS sins)))
      (CC and)
      (VP (VB trust)
        (S
          (NP (NNP God))
          (VP (TO to)
            (VP (VB do)
              (PP (IN for)
                (NP (PRP you)))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP he))
                  (VP (VBD said)
                    (SBAR
                      (S
                        (NP (PRP He))
                        (VP (MD would)
                          (PP (IN in)
                            (NP (NNP Christ))))))))))))))
    (. .)))

root(ROOT-0, Confess-1)
poss(sins-3, your-2)
dobj(Confess-1, sins-3)
conj_and(Confess-1, trust-5)
nsubj(do-8, God-6)
aux(do-8, to-7)
xcomp(trust-5, do-8)
prep_for(do-8, you-10)
dep(said-13, what-11)
dobj(would-15, what-11)
nsubj(said-13, he-12)
ccomp(do-8, said-13)
nsubj(would-15, He-14)
ccomp(said-13, would-15)
prep_in(would-15, Christ-17)

(ROOT
  (S
    (NP (DT This) (NN faith))
    (VP (VBZ is) (RB not)
      (NP
        (NP (DT a) (NN leap))
        (PP (IN in)
          (NP (DT the) (NN dark))))
      (, ,)
      (PP (IN like)
        (S
          (VP (VBG crossing)
            (NP (PRP$ your) (NNS fingers))))))
    (. .)))

det(faith-2, This-1)
nsubj(leap-6, faith-2)
cop(leap-6, is-3)
neg(leap-6, not-4)
det(leap-6, a-5)
root(ROOT-0, leap-6)
det(dark-9, the-8)
prep_in(leap-6, dark-9)
prepc_like(leap-6, crossing-12)
poss(fingers-14, your-13)
dobj(crossing-12, fingers-14)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP (DT an) (JJ active) (NN trust))
      (, ,)
      (PP (IN like)
        (S
          (VP (VBG standing)
            (PP (IN on)
              (NP
                (NP (JJ solid) (NN ground))
                (: ;)
                (NP
                  (NP (DT a)
                    (ADJP (JJ confident))
                    (NN expectation))
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NNS faithfulness))
                      (PP (IN of)
                        (NP (NNP God))))))))))))
    (. .)))

nsubj(trust-5, It-1)
cop(trust-5, is-2)
det(trust-5, an-3)
amod(trust-5, active-4)
root(ROOT-0, trust-5)
prepc_like(trust-5, standing-8)
amod(ground-11, solid-10)
prep_on(standing-8, ground-11)
det(expectation-15, a-13)
amod(expectation-15, confident-14)
dep(ground-11, expectation-15)
det(faithfulness-18, the-17)
prep_in(expectation-15, faithfulness-18)
prep_of(faithfulness-18, God-20)

(ROOT
  (S
    (SBAR (IN With)
      (S
        (NP (DT that))
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP I))
              (VP (MD would)
                (VP (VB like)
                  (S
                    (VP (TO to)
                      (VP
                        (VP (VB clarify)
                          (NP (PRP$ my) (NN argument))
                          (PP (IN against)
                            (NP (NN abortion)))
                          (ADVP (RBR further)))
                        (CC and)
                        (VP (VB answer)
                          (NP (DT the) (NN question)))))))))))))
    (VP (MD should)
      (NP (NN abortion))
      (S
        (VP (VB be)
          (VP (VBN banned)))))
    (. .)))

mark(said-3, With-1)
nsubj(said-3, that-2)
csubj(should-18, said-3)
nsubj(like-6, I-4)
xsubj(clarify-8, I-4)
aux(like-6, would-5)
ccomp(said-3, like-6)
aux(clarify-8, to-7)
xcomp(like-6, clarify-8)
poss(argument-10, my-9)
dobj(clarify-8, argument-10)
prep_against(clarify-8, abortion-12)
advmod(clarify-8, further-13)
xcomp(like-6, answer-15)
conj_and(clarify-8, answer-15)
det(question-17, the-16)
dobj(answer-15, question-17)
root(ROOT-0, should-18)
dobj(should-18, abortion-19)
auxpass(banned-21, be-20)
dep(should-18, banned-21)

(ROOT
  (S (CC But)
    (VP (VB let)
      (S
        (NP (PRP me))
        (VP (VBG preface)
          (NP (PRP$ my) (NN argument))
          (PP (IN with)
            (NP (DT a) (NN disclaimer))))))
    (. .)))

cc(let-2, But-1)
root(ROOT-0, let-2)
nsubj(preface-4, me-3)
dep(let-2, preface-4)
poss(argument-6, my-5)
dobj(preface-4, argument-6)
det(disclaimer-9, a-8)
prep_with(preface-4, disclaimer-9)

(ROOT
  (S
    (NP (DT This) (NN reality))
    (VP (VBZ has)
      (VP (VBN weighed)
        (ADVP (RB heavily))
        (PP (IN on)
          (NP (PRP$ my) (NN conscience)))))
    (. .)))

det(reality-2, This-1)
nsubj(weighed-4, reality-2)
aux(weighed-4, has-3)
root(ROOT-0, weighed-4)
advmod(weighed-4, heavily-5)
poss(conscience-8, my-7)
prep_on(weighed-4, conscience-8)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP realize)
      (SBAR
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP
              (NP (DT a) (NN difference))
              (PP (IN between)
                (NP (NN proof)
                  (CC and)
                  (NN persuasion))))))))
    (. .)))

nsubj(realize-2, I-1)
root(ROOT-0, realize-2)
expl(is-4, there-3)
ccomp(realize-2, is-4)
det(difference-6, a-5)
nsubj(is-4, difference-6)
prep_between(difference-6, proof-8)
prep_between(difference-6, persuasion-10)
conj_and(proof-8, persuasion-10)

(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP (DT no) (NN argument))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (MD can)
            (VP (VB put)
              (PRT (RP forth))
              (SBAR (IN that)
                (S
                  (VP (MD ca) (RB n't)
                    (VP (VB be)
                      (VP (VBN disputed)))))))))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
det(argument-4, no-3)
nsubj(is-2, argument-4)
complm(put-8, that-5)
nsubj(put-8, I-6)
aux(put-8, can-7)
ccomp(is-2, put-8)
prt(put-8, forth-9)
complm(disputed-14, that-10)
aux(disputed-14, ca-11)
neg(disputed-14, n't-12)
auxpass(disputed-14, be-13)
ccomp(put-8, disputed-14)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADVP (RB actually))
      (NP
        (NP (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (MD will)
              (VP (VB argue)
                (PP (IN for)
                  (NP
                    (NP (DT the) (NN reality))
                    (PP (IN of)
                      (NP (JJ square) (NNS circles)))))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
advmod(are-2, actually-3)
nsubj(are-2, people-4)
nsubj(argue-7, people-4)
aux(argue-7, will-6)
rcmod(people-4, argue-7)
det(reality-10, the-9)
prep_for(argue-7, reality-10)
amod(circles-13, square-12)
prep_of(reality-10, circles-13)

(ROOT
  (S
    (S (IN So)
      (NP (PRP I))
      (VP (VBD put)
        (ADVP
          (NP (DT this) (NN argument))
          (RB forth))
        (PP (IN for)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP are)
                  (ADJP (RB truly) (JJ open-minded)))))))))
    (: ;)
    (S
      (PP (IN in)
        (NP (NNS hopes)))
      (NP (PRP you))
      (VP (MD will)
        (VP (VB be)
          (VP (VBN persuaded)))))
    (. .)))

dep(put-3, So-1)
nsubj(put-3, I-2)
root(ROOT-0, put-3)
det(argument-5, this-4)
npadvmod(forth-6, argument-5)
advmod(put-3, forth-6)
prep_for(put-3, those-8)
nsubj(open-minded-12, those-8)
cop(open-minded-12, are-10)
advmod(open-minded-12, truly-11)
rcmod(those-8, open-minded-12)
prep_in(persuaded-19, hopes-15)
nsubjpass(persuaded-19, you-16)
aux(persuaded-19, will-17)
auxpass(persuaded-19, be-18)
parataxis(put-3, persuaded-19)

(ROOT
  (S
    (NP
      (NP (DT The) (NN taking))
      (PP (IN of)
        (NP
          (NP (DT the) (NN life))
          (PP (IN of)
            (NP
              (NP (DT an) (JJ innocent) (JJ human) (NN being))
              (PP (IN without)
                (NP (JJ proper) (NN justification))))))))
    (VP (VBZ is)
      (NP
        (NP (NN murder)
          (CC and)
          (NN murder))
        (SBAR
          (S
            (VP (VBZ is)
              (ADJP (JJ illegal)))))))
    (. .)))

det(taking-2, The-1)
nsubj(murder-15, taking-2)
det(life-5, the-4)
prep_of(taking-2, life-5)
det(being-10, an-7)
amod(being-10, innocent-8)
amod(being-10, human-9)
prep_of(life-5, being-10)
amod(justification-13, proper-12)
prep_without(being-10, justification-13)
cop(murder-15, is-14)
root(ROOT-0, murder-15)
conj_and(murder-15, murder-17)
cop(illegal-19, is-18)
rcmod(murder-15, illegal-19)

(ROOT
  (S
    (NP (NNP Abortion))
    (VP (VBZ takes)
      (NP
        (NP (DT the) (NN life))
        (PP (IN of)
          (NP (DT an) (JJ innocent) (JJ human) (NN being))))
      (PP (IN without)
        (NP (JJ proper) (NN justification))))
    (. .)))

nsubj(takes-2, Abortion-1)
root(ROOT-0, takes-2)
det(life-4, the-3)
dobj(takes-2, life-4)
det(being-9, an-6)
amod(being-9, innocent-7)
amod(being-9, human-8)
prep_of(life-4, being-9)
amod(justification-12, proper-11)
prep_without(takes-2, justification-12)

(ROOT
  (FRAG
    (ADVP (RB therefore))
    (NP
      (NP (PRP it))
      (SBAR
        (S
          (VP
            (VP (VBZ is)
              (NP (NN murder)))
            (CC and)
            (VP (MD should)
              (VP (VB be)
                (ADJP (JJ illegal))))))))))

dep(it-2, therefore-1)
root(ROOT-0, it-2)
cop(murder-4, is-3)
rcmod(it-2, murder-4)
aux(illegal-8, should-6)
cop(illegal-8, be-7)
rcmod(it-2, illegal-8)
conj_and(murder-4, illegal-8)

(ROOT
  (S (CC But)
    (S
      (NP (PRP I))
      (VP (VBP think)
        (SBAR
          (S
            (NP (DT a) (JJR greater) (NN issue))
            (VP (VBZ is)
              (PP (IN at)
                (NP (NN stake)))
              (ADVP (RB here)))))))
    (CC and)
    (S
      (ADVP (RB therefore))
      (NP (DT the) (NN cost))
      (VP (VBZ is)
        (ADJP (JJ worth)
          (NP (PRP it)))))
    (. .)))

nsubj(think-3, I-2)
root(ROOT-0, think-3)
det(issue-6, a-4)
amod(issue-6, greater-5)
nsubj(is-7, issue-6)
ccomp(think-3, is-7)
prep_at(is-7, stake-9)
advmod(is-7, here-10)
advmod(worth-16, therefore-12)
det(cost-14, the-13)
nsubj(worth-16, cost-14)
cop(worth-16, is-15)
conj_and(think-3, worth-16)
dep(worth-16, it-17)

(ROOT
  (S
    (NP
      (NP (DT The) (JJR greater) (NN good))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ is)
            (VP (VBG being)
              (VP (VBN served)
                (ADVP (RB here))))))))
    (VP (VBZ is)
      (NP
        (NP (DT the) (NN hope))
        (SBAR
          (SBAR (IN that)
            (S
              (NP
                (NP (NN abortion))
                (PP (IN on)
                  (NP (NN demand))))
              (VP (MD might)
                (ADVP (RB someday))
                (VP (VB be)
                  (VP (VBN ended))))))
          (CC and)
          (SBAR (IN that)
            (S
              (NP
                (NP (DT the) (JJ emotional) (NN trauma))
                (SBAR
                  (S
                    (NP (PRP it))
                    (VP (VBZ causes)
                      (PP (TO to)
                        (NP (NNS women)))))))
              (VP (MD will)
                (VP (VB be)
                  (VP (VBN ended)
                    (ADVP (RB also))))))))))
    (. .)))

det(good-3, The-1)
amod(good-3, greater-2)
nsubjpass(served-7, good-3)
nsubj(hope-11, good-3)
aux(served-7, is-5)
auxpass(served-7, being-6)
rcmod(good-3, served-7)
advmod(served-7, here-8)
cop(hope-11, is-9)
det(hope-11, the-10)
root(ROOT-0, hope-11)
dep(ended-19, that-12)
nsubjpass(ended-19, abortion-13)
prep_on(abortion-13, demand-15)
aux(ended-19, might-16)
advmod(ended-19, someday-17)
auxpass(ended-19, be-18)
dep(hope-11, ended-19)
dep(ended-31, that-21)
det(trauma-24, the-22)
amod(trauma-24, emotional-23)
dobj(causes-26, trauma-24)
nsubjpass(ended-31, trauma-24)
nsubj(causes-26, it-25)
rcmod(trauma-24, causes-26)
prep_to(causes-26, women-28)
aux(ended-31, will-29)
auxpass(ended-31, be-30)
dep(hope-11, ended-31)
conj_and(ended-19, ended-31)
advmod(ended-31, also-32)

(ROOT
  (S
    (NP
      (NP (DT The) (NN holocaust))
      (PP (IN of)
        (NP (NN abortion))))
    (VP (MD will) (RB not)
      (VP (VB be)
        (VP (VBN ended)
          (SBAR (IN until)
            (S
              (NP (NNS people))
              (VP (VBP see)
                (CC and)
                (VBP know)
                (NP
                  (NP (DT the) (NN reality))
                  (PP (IN of)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (PRP it))
                        (VP (VBZ is))))))))))))
    (. .)))

det(holocaust-2, The-1)
nsubjpass(ended-8, holocaust-2)
prep_of(holocaust-2, abortion-4)
aux(ended-8, will-5)
neg(ended-8, not-6)
auxpass(ended-8, be-7)
root(ROOT-0, ended-8)
mark(see-11, until-9)
nsubj(see-11, people-10)
nsubj(know-13, people-10)
advcl(ended-8, see-11)
advcl(ended-8, know-13)
conj_and(see-11, know-13)
det(reality-15, the-14)
dobj(see-11, reality-15)
dobj(is-19, what-17)
nsubj(is-19, it-18)
prepc_of(reality-15, is-19)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ has)
      (VP (VBN been)
        (ADJP (JJ stunning)
          (S
            (VP (TO to)
              (VP (VB see)
                (PP (IN through)
                  (NP
                    (NP (DT the) (NN course))
                    (PP (IN of)
                      (NP
                        (NP
                          (NP (DT this) (NN debate))
                          (SBAR
                            (S
                              (NP (DT the) (NNS lengths) (NNS people))
                              (VP (MD will)
                                (VP (VB go)
                                  (S
                                    (VP (TO to)
                                      (VP
                                        (VP
                                          (ADVP
                                            (ADVP (RB so) (RB as))
                                            (PP (TO to)
                                              (NP (NN sugar))))
                                          (VB coat)
                                          (NP (DT this) (NN issue)))
                                        (CC and)
                                        (VP (VB make)
                                          (S
                                            (NP (PRP it))
                                            (VP (VB appear)
                                              (ADJP (RB not) (RB so) (JJ bad)))))))))))))
                        (: ;)
                        (CC and)
                        (ADVP (RB actually))
                        (NP (NN justifiable))))))))))))
    (. .)))

nsubj(stunning-4, It-1)
aux(stunning-4, has-2)
cop(stunning-4, been-3)
root(ROOT-0, stunning-4)
aux(see-6, to-5)
xcomp(stunning-4, see-6)
det(course-9, the-8)
prep_through(see-6, course-9)
det(debate-12, this-11)
prep_of(course-9, debate-12)
dobj(go-17, debate-12)
det(people-15, the-13)
nn(people-15, lengths-14)
nsubj(go-17, people-15)
xsubj(coat-23, people-15)
aux(go-17, will-16)
rcmod(debate-12, go-17)
aux(coat-23, to-18)
advmod(coat-23, so-19)
prep_as_to(coat-23, sugar-22)
xcomp(go-17, coat-23)
det(issue-25, this-24)
dobj(coat-23, issue-25)
xcomp(go-17, make-27)
conj_and(coat-23, make-27)
nsubj(bad-32, it-28)
cop(bad-32, appear-29)
neg(bad-32, not-30)
advmod(bad-32, so-31)
ccomp(make-27, bad-32)
prep_of(course-9, actually-35)
advmod(debate-12, actually-35)
conj_and(debate-12, actually-35)
dobj(go-17, actually-35)
prep_of(course-9, justifiable-36)
conj_and(debate-12, justifiable-36)
dobj(go-17, justifiable-36)

(ROOT
  (S (IN So)
    (NP (PRP$ my) (NN effort))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB make)
            (SBAR (IN that)
              (S
                (VP (VBP know)
                  (SBAR (IN as)
                    (S
                      (ADVP (RB best))
                      (NP (PRP I))
                      (VP (MD can)))))))))))
    (. .)))

dep(is-4, So-1)
poss(effort-3, my-2)
nsubj(is-4, effort-3)
xsubj(make-6, effort-3)
root(ROOT-0, is-4)
aux(make-6, to-5)
xcomp(is-4, make-6)
complm(know-8, that-7)
ccomp(make-6, know-8)
mark(can-12, as-9)
advmod(can-12, best-10)
nsubj(can-12, I-11)
advcl(know-8, can-12)

(ROOT
  (S (CC But)
    (NP (DT the) (NN truth))
    (VP (VBZ is)
      (SBAR
        (SBAR (IN that)
          (S
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP
                  (NP (NNS women))
                  (, ,)
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP have)
                        (VP (VBN had)
                          (NP (NNS abortions))))))
                  (, ,))
                (VP (VBN come)
                  (PP (TO to)
                    (NP
                      (NP (DT a) (JJ correct) (NN understanding))
                      (PP (IN of)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (VBZ has)
                              (VP (VBN happened)))))))))))
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (JJ real) (NN pain))
                (CC and)
                (NP (JJ real) (NN quilt))))))
        (: ;)
        (CC and)
        (SBAR
          (WHNP (WDT that))
          (S
            (ADVP (RB certainly))
            (VP (VBZ is) (RB not)
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN dismissed))))))))))
    (. .)))

cc(is-4, But-1)
det(truth-3, the-2)
nsubj(is-4, truth-3)
root(ROOT-0, is-4)
complm(is-24, that-5)
advmod(come-14, when-6)
nsubj(had-11, women-7)
nsubj(come-14, women-7)
aux(had-11, have-10)
rcmod(women-7, had-11)
dobj(had-11, abortions-12)
advcl(is-24, come-14)
det(understanding-18, a-16)
amod(understanding-18, correct-17)
prep_to(come-14, understanding-18)
nsubj(happened-22, what-20)
aux(happened-22, has-21)
prepc_of(understanding-18, happened-22)
expl(is-24, there-23)
ccomp(is-4, is-24)
amod(pain-26, real-25)
nsubj(is-24, pain-26)
amod(quilt-29, real-28)
nsubj(is-24, quilt-29)
conj_and(pain-26, quilt-29)
nsubj(is-34, that-32)
advmod(is-34, certainly-33)
ccomp(is-4, is-34)
conj_and(is-24, is-34)
neg(is-34, not-35)
aux(dismissed-38, to-36)
auxpass(dismissed-38, be-37)
xcomp(is-34, dismissed-38)

(ROOT
  (S
    (S
      (ADVP (IN So)
        (PP (IN for)
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP have)
                  (VP (VBN had)
                    (NP (NNS abortions)))))))))
      (NP (PRP I))
      (VP (VBP say)
        (SBAR
          (S
            (NP (EX there))
            (VP (VBZ is)
              (NP
                (NP (DT a) (NN way))
                (PP (RB out) (IN of)
                  (NP (DT the) (NN pain)
                    (CC and)
                    (NN quilt)))))))))
    (: ;)
    (S
      (NP (JJ true) (NN forgiveness))
      (VP (VBZ is)
        (ADJP (JJ possible))))
    (. .)))

advmod(say-9, So-1)
prep_for(So-1, those-3)
nsubj(had-6, those-3)
aux(had-6, have-5)
rcmod(those-3, had-6)
dobj(had-6, abortions-7)
nsubj(say-9, I-8)
root(ROOT-0, say-9)
expl(is-11, there-10)
ccomp(say-9, is-11)
det(way-13, a-12)
nsubj(is-11, way-13)
det(pain-17, the-16)
prep_out_of(way-13, pain-17)
prep_out_of(way-13, quilt-19)
conj_and(pain-17, quilt-19)
amod(forgiveness-22, true-21)
nsubj(possible-24, forgiveness-22)
cop(possible-24, is-23)
parataxis(say-9, possible-24)

(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBZ is)
        (ADVP
          (NP (RB only) (CD one) (NN way))
          (IN out))))
    (CC and)
    (S
      (NP (DT that))
      (VP (VBZ is)
        (PP (IN through)
          (NP (DT the) (JJ great) (NN exchange)))))
    (: ;)
    (S
      (NP
        (NP (NNP God))
        (PP (IN in)
          (NP (NNP Christ))))
      (VP (VBZ takes)
        (NP (PRP$ your) (NN life))))
    (CC and)
    (S
      (NP (PRP He))
      (VP (VBZ gives)
        (NP (PRP you))
        (NP (PRP$ His))))
    (. .)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(way-5, only-3)
num(way-5, one-4)
npadvmod(out-6, way-5)
advmod(is-2, out-6)
nsubj(is-9, that-8)
conj_and(is-2, is-9)
det(exchange-13, the-11)
amod(exchange-13, great-12)
prep_through(is-9, exchange-13)
nsubj(takes-18, God-15)
prep_in(God-15, Christ-17)
conj_and(is-2, takes-18)
parataxis(is-2, takes-18)
poss(life-20, your-19)
dobj(takes-18, life-20)
nsubj(gives-23, He-22)
conj_and(is-2, gives-23)
iobj(gives-23, you-24)
dobj(gives-23, His-25)

