(ROOT
  (S
    (NP
      (NP (DT The) (JJ first) (NN question))
      (SBAR
        (WHNP (WDT that))
        (S
          (VP (VBZ needs)
            (S
              (VP (TO to)
                (VP (VB be))))))))
    (VP (VBD asked)
      (SBAR
        (S
          (VP (VBZ is))))
      ('' '')
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (NP (NN kind))
            (PP (IN of)
              (NP (NN life))))
          (VP (VBZ is)
            (NP (PRP it))))))
    (. ?)))

det(question-3, The-1)
amod(question-3, first-2)
nsubj(needs-5, question-3)
nsubj(asked-8, question-3)
rcmod(question-3, needs-5)
aux(be-7, to-6)
xcomp(needs-5, be-7)
root(ROOT-0, asked-8)
ccomp(asked-8, is-9)
dobj(it-16, what-11)
nsubj(it-16, kind-12)
prep_of(kind-12, life-14)
cop(it-16, is-15)
ccomp(asked-8, it-16)

(ROOT
  (S ('' '')
    (PP (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP (DT a) (JJ human) (NN life))
          (ADVP (RB then))
          (NP
            (NP (DT no) (NN reason))
            (PP (IN for)
              (NP (NN abortion)))))))
    (VP (VBZ is)
      (ADJP (JJ adequate)))
    (. .)))

nsubj(life-7, it-3)
cop(life-7, is-4)
det(life-7, a-5)
amod(life-7, human-6)
prepc_if(adequate-14, life-7)
advmod(life-7, then-8)
det(reason-10, no-9)
attr(life-7, reason-10)
prep_for(reason-10, abortion-12)
cop(adequate-14, is-13)
root(ROOT-0, adequate-14)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (DT no) (JJ further) (NNS questions))
    (VP (VBP are)
      (VP (VBN needed)))
    (. .)))

advmod(needed-6, Therefore-1)
det(questions-4, no-2)
amod(questions-4, further-3)
nsubjpass(needed-6, questions-4)
auxpass(needed-6, are-5)
root(ROOT-0, needed-6)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ is)
      (NP
        (NP (DT an) (NN example))
        (PP (IN of)
          (SBAR
            (WHNP (WP what))
            (S
              (VP (VBZ is)
                (VP (VBN called)
                  (S
                    (VP (VBG jumping)
                      (PP (TO to)
                        (NP (NNS conclusions))))))))))))
    (. .)))

nsubj(example-4, That-1)
cop(example-4, is-2)
det(example-4, an-3)
root(ROOT-0, example-4)
nsubjpass(called-8, what-6)
auxpass(called-8, is-7)
prepc_of(example-4, called-8)
xcomp(called-8, jumping-9)
prep_to(jumping-9, conclusions-11)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP have) (RB not)
      (VP (VBN established)
        (SBAR (IN that)
          (S
            (NP
              (NP (PRP it))
              (NP (NN abortion)))
            (VP (VBZ is)
              (ADVP (RB never))
              (ADJP (JJ justified)))))))
    (. .)))

nsubj(established-4, You-1)
aux(established-4, have-2)
neg(established-4, not-3)
root(ROOT-0, established-4)
complm(justified-10, that-5)
nsubj(justified-10, it-6)
dep(it-6, abortion-7)
cop(justified-10, is-8)
neg(justified-10, never-9)
ccomp(established-4, justified-10)

(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (PRP it))
        (VP (VBZ is))))
    (VP (VBD agreed)
      (PRN (-LRB- -LRB-)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP I))
            (VP (VBP do)
              (VP (VB agree)
                (PP (IN with)
                  (NP (PRP you)))))))
        (-RRB- -RRB-))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ is)
            (NP (DT a) (JJ human) (NN life))))))
    (. .)))

advmod(is-4, Even-1)
dep(is-4, if-2)
nsubj(is-4, it-3)
advcl(agreed-5, is-4)
csubj(agreed-5, is-4)
root(ROOT-0, agreed-5)
dobj(agree-10, which-7)
nsubj(agree-10, I-8)
aux(agree-10, do-9)
parataxis(agreed-5, agree-10)
prep_with(agree-10, you-12)
complm(life-19, that-14)
nsubj(life-19, it-15)
cop(life-19, is-16)
det(life-19, a-17)
amod(life-19, human-18)
ccomp(agreed-5, life-19)

