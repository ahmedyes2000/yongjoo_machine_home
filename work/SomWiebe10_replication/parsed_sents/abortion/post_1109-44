(ROOT
  (S
    (ADVP (RB Now))
    (VP (VB let)
      (S
        (NP (PRP me))
        (VP (VB show)
          (NP (PRP you))
          (SBAR
            (WHADVP (WRB how))
            (S
              (VP (TO to)
                (VP (VB make)
                  (NP
                    (NP (DT a)
                      (ADJP (RB really) (JJ cool))
                      (NN fire))
                    (VP (VBG using)
                      (NP (NN gasoline)))))))))))
    (. .)))

advmod(let-2, Now-1)
root(ROOT-0, let-2)
nsubj(show-4, me-3)
ccomp(let-2, show-4)
dobj(show-4, you-5)
advmod(make-8, how-6)
aux(make-8, to-7)
xcomp(show-4, make-8)
det(fire-12, a-9)
advmod(cool-11, really-10)
amod(fire-12, cool-11)
dobj(make-8, fire-12)
partmod(fire-12, using-13)
dobj(using-13, gasoline-14)

