(ROOT
  (S
    (S
      (NP (EX There))
      (VP (VBP are)
        (NP (NNS states))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VB forgive)
          (NP (PRP me))
          (PP (IN for)
            (S (RB not)
              (VP (VBG remembering)
                (NP
                  (NP
                    (ADVP (RB right) (RB off))
                    (DT the) (NN top))
                  (PP (IN of)
                    (NP (PRP$ my) (NN head)))
                  (SBAR
                    (WHNP (WDT which))))
                (NP
                  (NP (NNS ones))
                  (, ,)
                  (SBAR
                    (WHNP (WDT that))
                    (S
                      (VP (VBP allow)
                        (S
                          (NP (NN abortion))
                          (`` ``)
                          (ADJP (IN up)
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN moment))
                                (PP (IN of)
                                  (NP (NN birth))))))
                          ('' '')))))))))))
      (NP (PRP I))
      (VP (MD will)
        (VP (VB see)
          (SBAR (IN if)
            (S
              (NP (PRP I))
              (VP (MD can)
                (VP (VB find)
                  (NP (DT that) (NN one)))))))))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
nsubj(are-2, states-3)
dep(see-34, forgive-6)
dobj(forgive-6, me-7)
neg(remembering-10, not-9)
prepc_for(forgive-6, remembering-10)
advmod(off-12, right-11)
advmod(top-14, off-12)
det(top-14, the-13)
iobj(remembering-10, top-14)
poss(head-17, my-16)
prep_of(top-14, head-17)
rcmod(top-14, which-18)
dobj(remembering-10, ones-19)
nsubj(allow-22, ones-19)
rcmod(ones-19, allow-22)
dep(up-25, abortion-23)
dep(allow-22, up-25)
det(moment-28, the-27)
prep_to(up-25, moment-28)
prep_of(moment-28, birth-30)
nsubj(see-34, I-32)
aux(see-34, will-33)
conj_and(are-2, see-34)
mark(find-38, if-35)
nsubj(find-38, I-36)
aux(find-38, can-37)
advcl(see-34, find-38)
det(one-40, that-39)
dobj(find-38, one-40)

