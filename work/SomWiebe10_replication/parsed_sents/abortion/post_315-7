(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR (IN that)
            (S
              (NP (DT the) (NN government))
              (VP (VBZ has)
                (NP (DT the) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB decide)
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (TO to)
                              (VP (VB do)
                                (PP (IN with)
                                  (NP (PRP$ your) (NN body) (NNS parts)))))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (MD would)
      (VP (VB be)
        (VP (VBN forced)
          (PP (IN into)
            (S
              (VP (VBG giving)
                (ADVP (RB away)
                  (NP (DT a) (NN kidney)))
                (SBAR (RB so) (IN that)
                  (S
                    (NP (DT another))
                    (VP (MD might)
                      (VP (VB live)))))))))))
    (. .)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(forced-23, say-3)
complm(has-7, that-4)
det(government-6, the-5)
nsubj(has-7, government-6)
ccomp(say-3, has-7)
det(right-9, the-8)
dobj(has-7, right-9)
aux(decide-11, to-10)
infmod(right-9, decide-11)
nsubj(do-14, what-12)
aux(do-14, to-13)
ccomp(decide-11, do-14)
xcomp(decide-11, do-14)
poss(parts-18, your-16)
nn(parts-18, body-17)
prep_with(do-14, parts-18)
nsubjpass(forced-23, you-20)
aux(forced-23, would-21)
auxpass(forced-23, be-22)
root(ROOT-0, forced-23)
prepc_into(forced-23, giving-25)
advmod(giving-25, away-26)
det(kidney-28, a-27)
pobj(away-26, kidney-28)
advmod(live-33, so-29)
dep(live-33, that-30)
nsubj(live-33, another-31)
aux(live-33, might-32)
advcl(giving-25, live-33)
ccomp(giving-25, live-33)

