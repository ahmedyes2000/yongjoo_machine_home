(ROOT
  (S
    (NP (PRP I))
    (VP (VBP do) (RB n't)
      (VP (VB think)
        (S
          (VP (VBG asking)
            (NP (NN someone))
            (S
              (VP (TO to)
                (VP (VB assume)
                  (NP (NN responsibility))
                  (SBAR (IN for)
                    (S
                      (NP (PRP$ her) (NNS actions))
                      (VP (VBZ is)
                        (ADJP (RB too) (JJ much))
                        (S
                          (VP (TO to)
                            (VP (VB ask))))))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, do-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
xcomp(think-4, asking-5)
dobj(asking-5, someone-6)
aux(assume-8, to-7)
xcomp(asking-5, assume-8)
dobj(assume-8, responsibility-9)
mark(much-15, for-10)
poss(actions-12, her-11)
nsubj(much-15, actions-12)
xsubj(ask-17, actions-12)
cop(much-15, is-13)
advmod(much-15, too-14)
advcl(assume-8, much-15)
aux(ask-17, to-16)
xcomp(much-15, ask-17)

(ROOT
  (S
    (PP (IN In)
      (NP (DT the) (NN end)))
    (, ,)
    (NP (PRP it))
    (ADVP (RB only))
    (VP (VBZ takes)
      (NP (CD nine) (NNS months))
      (S
        (VP (TO to)
          (VP
            (VP (VB carry)
              (NP (DT a) (NN child)))
            (CC and)
            (VP (VB give)
              (NP (PRP it))
              (PRT (RP up))
              (PP (IN for)
                (NP (NN adoption))))))))
    (. .)))

det(end-3, the-2)
prep_in(takes-7, end-3)
nsubj(takes-7, it-5)
advmod(takes-7, only-6)
root(ROOT-0, takes-7)
num(months-9, nine-8)
tmod(takes-7, months-9)
aux(carry-11, to-10)
xcomp(takes-7, carry-11)
det(child-13, a-12)
dobj(carry-11, child-13)
xcomp(takes-7, give-15)
conj_and(carry-11, give-15)
dobj(give-15, it-16)
prt(give-15, up-17)
prep_for(give-15, adoption-19)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP are)
      (VP (VBG saying)
        (SBAR
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ OK)
                (S
                  (VP (TO to)
                    (VP (VB kill)
                      (NP (DT the) (NN child))
                      (SBAR (RB so) (IN that)
                        (S
                          (NP (DT the) (NN mothers) (`` ``) (NN life) ('' ''))
                          (VP (VBZ is) (RB n't)
                            (VP (VBN thrown)
                              (PRT (RP away)))))))))))))))
    (. ?)))

nsubj(saying-3, You-1)
aux(saying-3, are-2)
root(ROOT-0, saying-3)
nsubj(OK-6, it-4)
cop(OK-6, is-5)
ccomp(saying-3, OK-6)
aux(kill-8, to-7)
xcomp(OK-6, kill-8)
det(child-10, the-9)
dobj(kill-8, child-10)
advmod(thrown-20, so-11)
dep(thrown-20, that-12)
det(life-16, the-13)
nn(life-16, mothers-14)
nsubjpass(thrown-20, life-16)
auxpass(thrown-20, is-18)
neg(thrown-20, n't-19)
advcl(kill-8, thrown-20)
prt(thrown-20, away-21)

(ROOT
  (S
    (S
      (VP (VB Please)
        (NP
          (NP (CD Nine) (NNS months))
          (PP (IN of)
            (S
              (VP (VBG putting)
                (NP (DT a) (NN kink))
                (PP (IN in)
                  (NP (DT a) (JJ social) (NN life)))))))))
    (VP (VBZ is)
      (ADJP (RB hardly) (JJ comparable)
        (PP (TO to)
          (S
            (VP (VBG being)
              (VP (VBN put)
                (PP (TO to)
                  (NP (NN death)))
                (PP (IN by)
                  (NP (NN dismemberment)))))))))
    (. .)))

csubj(comparable-14, Please-1)
num(months-3, Nine-2)
dobj(Please-1, months-3)
prepc_of(months-3, putting-5)
det(kink-7, a-6)
dobj(putting-5, kink-7)
det(life-11, a-9)
amod(life-11, social-10)
prep_in(putting-5, life-11)
cop(comparable-14, is-12)
advmod(comparable-14, hardly-13)
root(ROOT-0, comparable-14)
auxpass(put-17, being-16)
prepc_to(comparable-14, put-17)
prep_to(put-17, death-19)
agent(put-17, dismemberment-21)

(ROOT
  (S
    (NP (NNP Abortion))
    (VP (VBZ is)
      (VP (VBG being)
        (VP (VBN used)
          (PP (IN by)
            (NP
              (NP (NNS people))
              (PP (IN as)
                (NP (DT a) (NN way)))))
          (S (RB not)
            (VP (TO to)
              (VP (VB pay)
                (NP (DT the) (NN piper))))))))
    (. .)))

nsubjpass(used-4, Abortion-1)
xsubj(pay-12, Abortion-1)
aux(used-4, is-2)
auxpass(used-4, being-3)
root(ROOT-0, used-4)
agent(used-4, people-6)
det(way-9, a-8)
prep_as(people-6, way-9)
neg(pay-12, not-10)
aux(pay-12, to-11)
xcomp(used-4, pay-12)
det(piper-14, the-13)
dobj(pay-12, piper-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP do) (RB n't)
          (VP (VB want)
            (NP (NNS children))
            (ADVP (RB now))))))
    (, ,)
    (VP (VB do) (RB n't)
      (VP (VB make)
        (NP (PRP them))))
    (. !)))

mark(want-5, If-1)
nsubj(want-5, you-2)
aux(want-5, do-3)
neg(want-5, n't-4)
advcl(make-11, want-5)
dobj(want-5, children-6)
advmod(want-5, now-7)
aux(make-11, do-9)
neg(make-11, n't-10)
root(ROOT-0, make-11)
dobj(make-11, them-12)

