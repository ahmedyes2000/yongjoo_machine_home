(ROOT
  (S
    (NP (PRP I))
    (VP (VBP 've)
      (ADVP (RB always))
      (VP (VBN been)
        (ADJP (RB as) (JJ specific)
          (PP (IN as)
            (ADJP (JJ necessary))))
        (SBAR
          (S
            (NP
              (NP (PRP you))
              (PP (IN on)
                (NP (DT the) (JJ other) (NN hand))))
            (, ,)
            (VP (VBP have)
              (NP (`` ``) (JJ spewed) (NNS generalities) ('' ''))
              (ADVP (RB indirectly))
              (, ,)
              (ADVP (IN at) (JJS least))
              (, ,)
              (PP (IN by)
                (S
                  (VP (VBG assuming)
                    (NP
                      (NP
                        (ADJP (JJ broad) (, ,) (JJ arbitrary))
                        (NNS conditions))
                      (PP (JJ such) (IN as)
                        (NP (`` ``) (NN survivability) ('' ''))))))))))))
    (. .)))

nsubj(specific-6, I-1)
aux(specific-6, 've-2)
advmod(specific-6, always-3)
cop(specific-6, been-4)
advmod(specific-6, as-5)
root(ROOT-0, specific-6)
prep_as(specific-6, necessary-8)
nsubj(have-15, you-9)
det(hand-13, the-11)
amod(hand-13, other-12)
prep_on(you-9, hand-13)
ccomp(specific-6, have-15)
amod(generalities-18, spewed-17)
dobj(have-15, generalities-18)
advmod(have-15, indirectly-20)
advmod(have-15, at-22)
pobj(at-22, least-23)
prepc_by(have-15, assuming-26)
amod(arbitrary-29, broad-27)
amod(conditions-30, arbitrary-29)
dobj(assuming-26, conditions-30)
prep_such_as(conditions-30, survivability-34)

(ROOT
  (S
    (S
      (NP (PRP$ My) (NN logic))
      (VP
        (VP (VBZ is)
          (VP (VBN based)
            (PP (IN on)
              (NP (JJ true) (NNS axioms)))))
        (, ,)
        (CC and)
        (ADVP (RB therefore))
        (VP (VBZ is)
          (ADVP (RB probably))
          (ADJP (RB tertiarily) (JJ axiomatic)))))
    (, ,)
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ 's) (RB not)
        (ADVP (RB even))
        (NP
          (NP (DT a) (JJ logical) (NN flaw))
          (, ,) (RB quite)
          (NP (DT the) (NN opposite))
          (ADVP (RB actually)))))
    (. .)))

poss(logic-2, My-1)
nsubjpass(based-4, logic-2)
nsubj(axiomatic-14, logic-2)
auxpass(based-4, is-3)
root(ROOT-0, based-4)
amod(axioms-7, true-6)
prep_on(based-4, axioms-7)
advmod(based-4, therefore-10)
conj_and(based-4, therefore-10)
cop(axiomatic-14, is-11)
advmod(axiomatic-14, probably-12)
advmod(axiomatic-14, tertiarily-13)
conj_and(based-4, axiomatic-14)
nsubj(flaw-23, that-17)
cop(flaw-23, 's-18)
neg(flaw-23, not-19)
advmod(flaw-23, even-20)
det(flaw-23, a-21)
amod(flaw-23, logical-22)
conj_but(based-4, flaw-23)
advmod(flaw-23, quite-25)
det(opposite-27, the-26)
dep(flaw-23, opposite-27)
advmod(flaw-23, actually-28)

