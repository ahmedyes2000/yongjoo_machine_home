(ROOT
  (S
    (NP (EX There))
    (VP (VBZ is)
      (NP
        (NP (RB only) (CD one) (NN question))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (PRP it))
            (VP (VBZ comes)
              (PP (TO to)
                (NP
                  (NP (NN abortion))
                  (, ,)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (NP (PRP it))))))))))))
    (. ?)))

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(question-5, only-3)
num(question-5, one-4)
nsubj(is-2, question-5)
tmod(comes-8, question-5)
advmod(comes-8, when-6)
nsubj(comes-8, it-7)
dep(question-5, comes-8)
prep_to(comes-8, abortion-10)
nsubj(it-14, abortion-10)
cop(it-14, is-13)
rcmod(abortion-10, it-14)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP it))
        (VP (VBZ is)
          (NP (DT a) (NN human)
            (S
              (VP (VBG being)
                (ADVP (RB then))))))))
    (NP (PRP it))
    (VP (VBZ requires)
      (NP
        (NP (DT a)
          (ADJP (RB very) (JJ high))
          (NN level))
        (PP (IN of)
          (NP (NN justification))))
      (S
        (VP (TO to)
          (VP (VB take)
            (NP
              (NP (PRP it) (POS 's))
              (NN life))))))
    (. .)))

mark(human-5, If-1)
nsubj(human-5, it-2)
cop(human-5, is-3)
det(human-5, a-4)
advcl(requires-9, human-5)
dep(human-5, being-6)
advmod(being-6, then-7)
nsubj(requires-9, it-8)
root(ROOT-0, requires-9)
det(level-13, a-10)
advmod(high-12, very-11)
amod(level-13, high-12)
dobj(requires-9, level-13)
prep_of(level-13, justification-15)
aux(take-17, to-16)
xcomp(requires-9, take-17)
poss(life-20, it-18)
dobj(take-17, life-20)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (ADVP (RB simply))
      (VP (VBN seen)
        (NP
          (NP (DT no) (NN argument))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ comes)
                (S
                  (ADJP (JJ close)
                    (PP (TO to)
                      (NP
                        (NP (JJ proper) (NN justification))
                        (PP (IN for)
                          (NP (DT the) (NN taking))))))
                  (NP
                    (NP (DT the) (NN life))
                    (PP (IN of)
                      (NP (DT a) (JJ innocent) (JJ human) (NN being)))))))))))
    (. .)))

nsubj(seen-4, I-1)
aux(seen-4, have-2)
advmod(seen-4, simply-3)
root(ROOT-0, seen-4)
det(argument-6, no-5)
dobj(seen-4, argument-6)
nsubj(comes-8, argument-6)
rcmod(argument-6, comes-8)
acomp(comes-8, close-9)
amod(justification-12, proper-11)
prep_to(close-9, justification-12)
det(taking-15, the-14)
prep_for(justification-12, taking-15)
det(life-17, the-16)
dep(close-9, life-17)
det(being-22, a-19)
amod(being-22, innocent-20)
amod(being-22, human-21)
prep_of(life-17, being-22)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NNS arguments))
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN seen))))))
    (VP (VBP are)
      (NP
        (NP (DT those))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBP try)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB take)
                      (PRT (RP away))
                      (NP
                        (NP (DT the) (NN embryo) (POS 's))
                        (NN humanity)))
                    (CC and)
                    (VP (VB make)
                      (S
                        (NP (PRP it))
                        (ADJP
                          (ADVP (RBR less) (IN than))
                          (JJ human))))))))))))
    (. .)))

det(arguments-3, The-1)
amod(arguments-3, only-2)
dobj(seen-6, arguments-3)
nsubj(those-8, arguments-3)
nsubj(seen-6, I-4)
aux(seen-6, have-5)
rcmod(arguments-3, seen-6)
cop(those-8, are-7)
root(ROOT-0, those-8)
nsubj(try-10, those-8)
rcmod(those-8, try-10)
aux(take-12, to-11)
xcomp(try-10, take-12)
prt(take-12, away-13)
det(embryo-15, the-14)
poss(humanity-17, embryo-15)
dobj(take-12, humanity-17)
xcomp(try-10, make-19)
conj_and(take-12, make-19)
nsubj(human-23, it-20)
advmod(than-22, less-21)
advmod(human-23, than-22)
xcomp(make-19, human-23)

(ROOT
  (S
    (NP (NNP Roe) (NNP vs) (NNP Wade))
    (VP (VBD was)
      (NP (DT a)
        (ADJP (RB very) (JJ poor))
        (NN decision))
      (PP (IN by)
        (NP (DT the) (NNP Supreme) (NNP Court)))
      (SBAR (IN because)
        (S
          (NP (PRP it))
          (VP (VB introduce)
            (NP (DT a) (JJ major) (NN contradiction))
            (PP (IN in)
              (NP (DT the) (NN law)))))))
    (. .)))

nn(Wade-3, Roe-1)
nn(Wade-3, vs-2)
nsubj(decision-8, Wade-3)
cop(decision-8, was-4)
det(decision-8, a-5)
advmod(poor-7, very-6)
amod(decision-8, poor-7)
root(ROOT-0, decision-8)
det(Court-12, the-10)
nn(Court-12, Supreme-11)
prep_by(decision-8, Court-12)
mark(introduce-15, because-13)
nsubj(introduce-15, it-14)
advcl(decision-8, introduce-15)
det(contradiction-18, a-16)
amod(contradiction-18, major-17)
dobj(introduce-15, contradiction-18)
det(law-21, the-20)
prep_in(introduce-15, law-21)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (JJ unjustified) (NN taking))
        (PP (IN of)
          (NP (DT a) (JJ human) (NN life))))
      (VP (VBZ is)
        (VP (VBN considered)
          (NP (NN murder))
          (PP (IN under)
            (NP (JJ current) (NN law))))))
    (CC and)
    (S
      (NP (PRP we))
      (VP (VBP have)
        (NP (JJ different) (NNS degrees)
          (S
            (VP (TO to)
              (VP
                (ADVP (RBR further))
                (VB define)
                (NP (PRP it))))))))
    (. .)))

det(taking-3, The-1)
amod(taking-3, unjustified-2)
nsubjpass(considered-9, taking-3)
det(life-7, a-5)
amod(life-7, human-6)
prep_of(taking-3, life-7)
auxpass(considered-9, is-8)
root(ROOT-0, considered-9)
dobj(considered-9, murder-10)
amod(law-13, current-12)
prep_under(considered-9, law-13)
nsubj(have-16, we-15)
conj_and(considered-9, have-16)
amod(degrees-18, different-17)
dobj(have-16, degrees-18)
aux(define-21, to-19)
advmod(define-21, further-20)
infmod(degrees-18, define-21)
dobj(define-21, it-22)

(ROOT
  (S
    (VP (VB Consider)
      (NP (DT the) (NN fact))
      (SBAR (IN that)
        (S
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP kill)
                (NP
                  (NP (DT a) (NN woman))
                  (PP (IN with)
                    (NP (NN child)))))))
          (: ;)
          (NP (PRP you))
          (VP (MD will)
            (VP (VB be)
              (VP (VBN charged)
                (PP (IN for)
                  (NP
                    (NP (CD two) (NNS counts))
                    (PP (IN of)
                      (NP (NN homicide)))))))))))
    (. .)))

root(ROOT-0, Consider-1)
det(fact-3, the-2)
dobj(Consider-1, fact-3)
complm(charged-16, that-4)
mark(kill-7, if-5)
nsubj(kill-7, you-6)
advcl(charged-16, kill-7)
det(woman-9, a-8)
dobj(kill-7, woman-9)
prep_with(woman-9, child-11)
nsubjpass(charged-16, you-13)
aux(charged-16, will-14)
auxpass(charged-16, be-15)
ccomp(Consider-1, charged-16)
num(counts-19, two-18)
prep_for(charged-16, counts-19)
prep_of(counts-19, homicide-21)

(ROOT
  (FRAG (CC But)
    (SBAR (IN if)
      (S
        (NP (DT a) (NN doctor))
        (VP (VBZ kills)
          (NP
            (NP
              (NP
                (QP (RB only) (CD one)))
              (PP (IN of)
                (NP (DT those) (NNS persons))))
            (: ;)
            (NP (DT no) (NN charge))))))
    (. .)))

dep(kills-5, But-1)
mark(kills-5, if-2)
det(doctor-4, a-3)
nsubj(kills-5, doctor-4)
root(ROOT-0, kills-5)
quantmod(one-7, only-6)
dobj(kills-5, one-7)
det(persons-10, those-9)
prep_of(one-7, persons-10)
det(charge-13, no-12)
dep(one-7, charge-13)

(ROOT
  (S
    (NP
      (NP (DT The) (NNP Supreme) (NNP Court))
      (PP (IN by)
        (NP (PRP$ their) (NN ruling))))
    (VP (VBD overturned)
      (NP
        (NP (DT the) (NN law))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD were)
              (VP (VBN supposed)
                (S
                  (VP (TO to)
                    (VP (VB uphold))))))))))
    (. .)))

det(Court-3, The-1)
nn(Court-3, Supreme-2)
nsubj(overturned-7, Court-3)
poss(ruling-6, their-5)
prep_by(Court-3, ruling-6)
root(ROOT-0, overturned-7)
det(law-9, the-8)
dobj(overturned-7, law-9)
nsubjpass(supposed-12, they-10)
xsubj(uphold-14, they-10)
auxpass(supposed-12, were-11)
rcmod(law-9, supposed-12)
aux(uphold-14, to-13)
xcomp(supposed-12, uphold-14)

(ROOT
  (S
    (NP (DT The) (JJ right) (NN thing)
      (S
        (VP (TO to)
          (VP (VB do)))))
    (VP (MD would)
      (VP (VB be)
        (S
          (VP (TO to)
            (VP
              (VP (VB overturn)
                (NP (DT this) (JJ erroneous) (NN ruling)))
              (CC and)
              (VP (VB restore)
                (NP
                  (NP (PRP$ our) (NN rule))
                  (PP (IN of)
                    (NP (NN law))))))))))
    (. .)))

det(thing-3, The-1)
amod(thing-3, right-2)
nsubj(be-7, thing-3)
aux(do-5, to-4)
infmod(thing-3, do-5)
aux(be-7, would-6)
root(ROOT-0, be-7)
aux(overturn-9, to-8)
xcomp(be-7, overturn-9)
det(ruling-12, this-10)
amod(ruling-12, erroneous-11)
dobj(overturn-9, ruling-12)
xcomp(be-7, restore-14)
conj_and(overturn-9, restore-14)
poss(rule-16, our-15)
dobj(restore-14, rule-16)
prep_of(rule-16, law-18)

