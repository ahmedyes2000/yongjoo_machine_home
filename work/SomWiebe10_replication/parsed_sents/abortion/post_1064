(ROOT
  (S
    (NP (PRP$ Your) (NN argument))
    (VP (VBZ fails)
      (PRT (RP in))
      (SBAR (IN that)
        (S
          (NP
            (NP
              (NP (DT a) (NN human))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ has)
                    (VP (VBN been)
                      (VP (VBN born)))))))
            (, ,) (IN whether)
            (ADJP (JJ freed)
              (CC or)
              (JJ enslaved))
            (, ,))
          (VP (VBZ is)
            (NP
              (NP
                (NP (DT a) (NN life))
                (PP (IN in)
                  (S
                    (VP (VBG being)
                      (ADJP (JJ i.e.))))))
              (, ,)
              (NP
                (NP (NN someone))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ is)
                      (NP
                        (NP (DT an)
                          (ADJP (JJ autonomous))
                          (NN life))
                        (VP
                          (ADVP (RB fully))
                          (VBN developed)
                          (PP (TO to)
                            (NP
                              (NP (DT the) (NN point))
                              (PP (IN of)
                                (S
                                  (VP (RB not) (VBG being)
                                    (ADJP (RB physiologically) (JJ dependent))
                                    (PP (IN on)
                                      (NP
                                        (NP (DT another) (NN being))
                                        (PP (IN for)
                                          (NP (JJ basic) (NN bodily) (NNS functions)))))))))))))))))))))
    (. .)))

poss(argument-2, Your-1)
nsubj(fails-3, argument-2)
root(ROOT-0, fails-3)
prt(fails-3, in-4)
complm(life-20, that-5)
det(human-7, a-6)
nsubjpass(born-11, human-7)
nsubj(life-20, human-7)
aux(born-11, has-9)
auxpass(born-11, been-10)
rcmod(human-7, born-11)
amod(human-7, whether-13)
amod(human-7, freed-14)
amod(human-7, enslaved-16)
conj_or(freed-14, enslaved-16)
cop(life-20, is-18)
det(life-20, a-19)
ccomp(fails-3, life-20)
cop(i.e.-23, being-22)
prepc_in(life-20, i.e.-23)
appos(life-20, someone-25)
nsubj(life-30, someone-25)
cop(life-30, is-27)
det(life-30, an-28)
amod(life-30, autonomous-29)
rcmod(someone-25, life-30)
advmod(developed-32, fully-31)
partmod(life-30, developed-32)
det(point-35, the-34)
prep_to(developed-32, point-35)
neg(dependent-40, not-37)
cop(dependent-40, being-38)
advmod(dependent-40, physiologically-39)
prepc_of(point-35, dependent-40)
det(being-43, another-42)
prep_on(dependent-40, being-43)
amod(functions-47, basic-45)
nn(functions-47, bodily-46)
prep_for(being-43, functions-47)

(ROOT
  (S
    (S
      (NP (PRP We))
      (VP (VBP recognize)
        (S
          (NP (DT that))
          (ADJP (JJ autonomous)))))
    (, ,)
    (NP (VBN born) (JJ human) (NNS beings))
    (VP (VBP share)
      (NP (JJ certain) (JJ basic) (NNS rights)))
    (. .)))

nsubj(recognize-2, We-1)
ccomp(share-9, recognize-2)
nsubj(autonomous-4, that-3)
xcomp(recognize-2, autonomous-4)
amod(beings-8, born-6)
amod(beings-8, human-7)
nsubj(share-9, beings-8)
root(ROOT-0, share-9)
amod(rights-12, certain-10)
amod(rights-12, basic-11)
dobj(share-9, rights-12)

(ROOT
  (S
    (NP (DT These) (NNS rights))
    (VP (VBP do) (RB not)
      (VP (VB extend)
        (PP (TO to)
          (NP
            (NP (NNS clumps))
            (PP (IN of)
              (NP
                (NP (NNS cells))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBP are)
                      (ADJP (RB wholly) (JJ dependent)
                        (PP (IN on)
                          (NP (DT another) (NN living) (VBG being)))))))))))
        (PP (IN for)
          (NP (PRP$ their) (NN existence)))))
    (. .)))

det(rights-2, These-1)
nsubj(extend-5, rights-2)
aux(extend-5, do-3)
neg(extend-5, not-4)
root(ROOT-0, extend-5)
prep_to(extend-5, clumps-7)
prep_of(clumps-7, cells-9)
nsubj(dependent-13, cells-9)
cop(dependent-13, are-11)
advmod(dependent-13, wholly-12)
rcmod(cells-9, dependent-13)
det(living-16, another-15)
prep_on(dependent-13, living-16)
amod(living-16, being-17)
poss(existence-20, their-19)
prep_for(extend-5, existence-20)

(ROOT
  (S
    (ADVP (RB Therefore))
    (NP (PRP$ your) (NN analogy))
    (VP (VBZ does) (RB not)
      (ADVP (RB actually))
      (VP (VB equate)
        (ADVP (IN at) (DT all))))
    (. .)))

advmod(equate-7, Therefore-1)
poss(analogy-3, your-2)
nsubj(equate-7, analogy-3)
aux(equate-7, does-4)
neg(equate-7, not-5)
advmod(equate-7, actually-6)
root(ROOT-0, equate-7)
advmod(equate-7, at-8)
pobj(at-8, all-9)

