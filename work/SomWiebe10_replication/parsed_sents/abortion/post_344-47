(ROOT
  (SBARQ
    (FRAG (CC But)
      (NP
        (NP (DT that))
        (ADVP (RB aside))))
    (, ,)
    (SBARQ
      (WHADVP (WRB why))
      (SQ (MD should)
        (NP (DT a) (NN woman))
        (VP (VB be)
          (VP (VBN compelled)
            (S
              (VP (TO to)
                (VP (VB use)
                  (NP (PRP$ her) (NN body) (NNS parts))
                  (S
                    (VP (TO to)
                      (VP (VB sustain)
                        (S
                          (NP
                            (NP (DT the) (NN life))
                            (PP (IN of)
                              (NP (NN someone))))
                          (ADJP (RB else))
                          (SBAR (IN if)
                            (S
                              (NP (PRP she))
                              (VP (VBZ does) (RB n't)
                                (VP (VB want)
                                  (PP (TO to)
                                    (ADVP (RB so))))))))))))))))))
    (. ?)))

dep(that-2, But-1)
dep(compelled-10, that-2)
advmod(that-2, aside-3)
advmod(compelled-10, why-5)
aux(compelled-10, should-6)
det(woman-8, a-7)
nsubjpass(compelled-10, woman-8)
auxpass(compelled-10, be-9)
root(ROOT-0, compelled-10)
aux(use-12, to-11)
xcomp(compelled-10, use-12)
poss(parts-15, her-13)
nn(parts-15, body-14)
dobj(use-12, parts-15)
aux(sustain-17, to-16)
xcomp(use-12, sustain-17)
det(life-19, the-18)
nsubj(want-27, life-19)
prep_of(life-19, someone-21)
dep(want-27, else-22)
mark(want-27, if-23)
nsubj(want-27, she-24)
aux(want-27, does-25)
neg(want-27, n't-26)
xcomp(sustain-17, want-27)
prep(want-27, to-28)
pcomp(to-28, so-29)

