(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB usually))
    (VP (VBP find)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (DT the) (JJ enforced) (NN pregnancy) (NN crowd))
            (VP (VBP are)
              (NP
                (NP (DT all))
                (PP (IN for)
                  (S
                    (VP (VBG protecting) (`` ``)
                      (NP (DT the) (JJ innocent) (NN fetus))
                      ('' ''))))))))
        (CC but)
        (SBAR (IN once)
          (S
            (NP (PRP it))
            (VP (VBZ 's)
              (VP (VBN born)
                (SBAR
                  (S
                    (NP (PRP it))
                    (ADVP (RB then))
                    (VP (VBZ becomes)
                      (NP
                        (NP (`` ``)
                          (NP (NN someone) (RB else) (POS 's))
                          (NN mistake) ('' ''))
                        (CC and)
                        (NP (`` ``) (RB not) (PRP$ my) (NN responsibility))))))))))))
    ('' '') (. .)))

nsubj(find-3, I-1)
advmod(find-3, usually-2)
root(ROOT-0, find-3)
complm(all-10, that-4)
det(crowd-8, the-5)
amod(crowd-8, enforced-6)
nn(crowd-8, pregnancy-7)
nsubj(all-10, crowd-8)
cop(all-10, are-9)
ccomp(find-3, all-10)
prepc_for(all-10, protecting-12)
det(fetus-16, the-14)
amod(fetus-16, innocent-15)
dobj(protecting-12, fetus-16)
mark(born-22, once-19)
nsubjpass(born-22, it-20)
auxpass(born-22, 's-21)
ccomp(find-3, born-22)
conj_but(all-10, born-22)
nsubj(mistake-30, it-23)
advmod(mistake-30, then-24)
cop(mistake-30, becomes-25)
poss(mistake-30, someone-27)
advmod(someone-27, else-28)
ccomp(born-22, mistake-30)
neg(responsibility-36, not-34)
poss(responsibility-36, my-35)
ccomp(born-22, responsibility-36)
conj_and(mistake-30, responsibility-36)

