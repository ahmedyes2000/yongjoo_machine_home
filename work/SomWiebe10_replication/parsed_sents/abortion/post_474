(ROOT
  (S
    (NP (RB Here))
    (VP (VBZ 's)
      (NP
        (NP (DT a) (JJ great) (NN example))
        (PP (IN of)
          (NP
            (NP (DT the) (NN difference))
            (PP (IN between)
              (NP
                (NP (DT a) (NN positive))
                (CC and)
                (NP (DT a) (JJ negative) (NN right))))))))
    (. .)))

nsubj(example-5, Here-1)
cop(example-5, 's-2)
det(example-5, a-3)
amod(example-5, great-4)
root(ROOT-0, example-5)
det(difference-8, the-7)
prep_of(example-5, difference-8)
det(positive-11, a-10)
prep_between(difference-8, positive-11)
det(right-15, a-13)
amod(right-15, negative-14)
prep_between(difference-8, right-15)
conj_and(positive-11, right-15)

(ROOT
  (S
    (S
      (S
        (VP (VBG Stating)
          (NP (DT this) (NN right))
          (PP (IN in)
            (NP (DT a) (JJ positive) (NN way)))))
      (VP (MD would)
        (VP (VB be)
          (VP (VBG saying)))))
    (: :)
    (S
      (NP (PRP I))
      (VP (VBP have)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB procreate)))))))
    (. .)))

csubj(saying-10, Stating-1)
det(right-3, this-2)
dobj(Stating-1, right-3)
det(way-7, a-5)
amod(way-7, positive-6)
prep_in(Stating-1, way-7)
aux(saying-10, would-8)
aux(saying-10, be-9)
root(ROOT-0, saying-10)
nsubj(have-13, I-12)
parataxis(saying-10, have-13)
det(right-15, the-14)
dobj(have-13, right-15)
aux(procreate-17, to-16)
infmod(right-15, procreate-17)

(ROOT
  (S
    (NP
      (QP (CC or)
        (JJR more))
      (NNS specificallyI))
    (VP (VBP have)
      (S
        (NP (DT a) (NN right))
        (, ,)
        (PP (IN as)
          (NP (DT a) (NN male)))
        (, ,)
        (VP (TO to)
          (VP (VB decide)
            (SBAR
              (WHNP (WP what))
              (S
                (VP (VBZ happens)
                  (PP (TO to)
                    (NP
                      (NP (DT any) (NN individual))
                      (VP (VBN created)
                        (S
                          (VP (VBG using)
                            (NP (PRP$ my) (NN sperm))))))))))))))
    (. .)))

cc(more-2, or-1)
num(specificallyI-3, more-2)
nsubj(have-4, specificallyI-3)
root(ROOT-0, have-4)
det(right-6, a-5)
nsubj(decide-13, right-6)
det(male-10, a-9)
prep_as(decide-13, male-10)
aux(decide-13, to-12)
ccomp(have-4, decide-13)
xcomp(have-4, decide-13)
nsubj(happens-15, what-14)
ccomp(decide-13, happens-15)
det(individual-18, any-17)
prep_to(happens-15, individual-18)
partmod(individual-18, created-19)
xcomp(created-19, using-20)
poss(sperm-22, my-21)
dobj(using-20, sperm-22)

(ROOT
  (S
    (NP (DT No) (NN one))
    (VP (MD should)
      (VP (VB have)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB impede)
                (S
                  (NP (PRP$ my) (NN procreationOR))
                  (ADJP (JJR MORE))
                  (SBAR
                    (S
                      (NP (NNP SPECIFICALLYNo) (CD one))
                      (VP (MD should)
                        (VP (VB have)
                          (NP (DT the) (NN right)
                            (S
                              (VP (TO to)
                                (VP (VB disallow)
                                  (NP (PRP$ my) (NN choosing)
                                    (S
                                      (VP (TO to)
                                        (VP (VB decide)
                                          (SBAR
                                            (WHNP (WP what))
                                            (S
                                              (VP (VBZ happens)
                                                (SBAR
                                                  (S
                                                    (NP (NN yadda) (NN yadda) (NNS yaddaThis))
                                                    (ADVP (RB right))
                                                    (VP (MD could)
                                                      (VP (VB be)
                                                        (VP (VBN applied)
                                                          (PP
                                                            (PP (TO to)
                                                              (NP (DT the) (NN government)))
                                                            (, ,)
                                                            (CC or)
                                                            (PP (TO to)
                                                              (NP (DT the) (JJ general) (NN populace)))))))))))))))))))))))))))))))
    (. .)))

det(one-2, No-1)
nsubj(have-4, one-2)
aux(have-4, should-3)
root(ROOT-0, have-4)
det(right-6, the-5)
dobj(have-4, right-6)
aux(impede-8, to-7)
infmod(right-6, impede-8)
poss(procreationOR-10, my-9)
nsubj(have-15, procreationOR-10)
dep(have-15, MORE-11)
nsubj(have-15, SPECIFICALLYNo-12)
num(SPECIFICALLYNo-12, one-13)
aux(have-15, should-14)
xcomp(impede-8, have-15)
det(right-17, the-16)
dobj(have-15, right-17)
aux(disallow-19, to-18)
infmod(right-17, disallow-19)
poss(choosing-21, my-20)
dobj(disallow-19, choosing-21)
aux(decide-23, to-22)
infmod(choosing-21, decide-23)
nsubj(happens-25, what-24)
ccomp(decide-23, happens-25)
nn(yaddaThis-28, yadda-26)
nn(yaddaThis-28, yadda-27)
nsubjpass(applied-32, yaddaThis-28)
advmod(applied-32, right-29)
aux(applied-32, could-30)
auxpass(applied-32, be-31)
ccomp(happens-25, applied-32)
det(government-35, the-34)
prep_to(applied-32, government-35)
det(populace-41, the-39)
amod(populace-41, general-40)
prep_to(applied-32, populace-41)
conj_or(government-35, populace-41)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (NP (PRP I))
    (VP (VBP agree)
      (SBAR (IN that)
        (S
          (NP (DT the) (NN government))
          (VP
            (VP (MD can) (RB not))
            (CC and)
            (VP (MD should) (RB not)
              (VP (VB mandate)
                (NP
                  (NP (NNS abortions))
                  (, ,)
                  (S
                    (S
                      (VP (VBN forced)
                        (NP (NNS sterilizations))))
                    (, ,) (FW etc) (, ,)
                    (S
                      (VP (VB like)
                        (SBAR
                          (S
                            (NP (JJ many) (NNS governments))
                            (VP (VBP have)
                              (VP (VBN done)
                                (PRN (-LRB- -LRB-)
                                  (PP (VBG including)
                                    (NP (DT the) (NNP US)))
                                  (-RRB- -RRB-))))))))))))))))
    (. .)))

advmod(agree-4, Now-1)
nsubj(agree-4, I-3)
root(ROOT-0, agree-4)
complm(can-8, that-5)
det(government-7, the-6)
nsubj(can-8, government-7)
nsubj(mandate-13, government-7)
ccomp(agree-4, can-8)
neg(can-8, not-9)
aux(mandate-13, should-11)
neg(mandate-13, not-12)
ccomp(agree-4, mandate-13)
conj_and(can-8, mandate-13)
dobj(mandate-13, abortions-14)
dep(abortions-14, forced-16)
dobj(forced-16, sterilizations-17)
dep(forced-16, etc-19)
dep(forced-16, like-21)
amod(governments-23, many-22)
nsubj(done-25, governments-23)
aux(done-25, have-24)
ccomp(like-21, done-25)
dep(done-25, including-27)
det(US-29, the-28)
pobj(including-27, US-29)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's) (RB not)
      (SBAR
        (WHNP (WP what))
        (S
          (VP (VBZ 's)
            (VP (VBG happening))))))
    (. .)))

advmod('s-4, However-1)
nsubj('s-4, that-3)
root(ROOT-0, 's-4)
neg('s-4, not-5)
nsubj(happening-8, what-6)
aux(happening-8, 's-7)
ccomp('s-4, happening-8)

(ROOT
  (S
    (NP (DT The) (NN government))
    (ADVP (RB simply))
    (VP (VBZ makes)
      (S
        (NP (DT the) (NN option))
        (ADJP (JJ available)))
      (, ,)
      (PP (IN like)
        (NP (DT any) (JJ other) (JJ medical) (NN procedure))))
    (. .)))

det(government-2, The-1)
nsubj(makes-4, government-2)
advmod(makes-4, simply-3)
root(ROOT-0, makes-4)
det(option-6, the-5)
nsubj(available-7, option-6)
xcomp(makes-4, available-7)
det(procedure-13, any-10)
amod(procedure-13, other-11)
amod(procedure-13, medical-12)
prep_like(makes-4, procedure-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ provides)
      (S
        (NP (PRP them))
        (NP (DT some) (NN funding)))
      (, ,)
      (SBAR (IN since)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (JJ difficult)
              (S
                (S
                  (VP (TO to)
                    (VP (VB train)
                      (NP (NNS doctors))
                      (PP (IN in)
                        (NP (PDT such) (DT a) (NN procedure)))
                      (SBAR (IN unless)
                        (S
                          (NP (PRP you))
                          (VP (VBP 're)
                            (VP (VBN dedicated)
                              (PP (TO to)
                                (NP (PRP it))))))))))
                (, ,)
                (CC and)
                (S
                  (VP (VBG operating)
                    (NP (DT an) (NN abortion) (NN clinic))
                    (SBAR (IN as)
                      (S
                        (S
                          (VP (VBN opposed)
                            (PP (TO to)
                              (NP (DT a) (JJ plastic) (NN surgery) (NN clinic)))))
                        (VP (VBZ is)
                          (ADJP
                            (NP
                              (QP (RB about) (CD six) (NNS times)))
                            (RB as) (JJ expensive))))))))))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB protect)
            (NP (PRP it))
            (PP (IN from)
              (NP (NN terrorism)))
            (PP (IN by)
              (NP (NNS extremists)))))))
    (. .)))

nsubj(provides-2, It-1)
xsubj(protect-45, It-1)
root(ROOT-0, provides-2)
nsubj(funding-5, them-3)
det(funding-5, some-4)
xcomp(provides-2, funding-5)
mark(difficult-10, since-7)
nsubj(difficult-10, it-8)
cop(difficult-10, 's-9)
advcl(provides-2, difficult-10)
aux(train-12, to-11)
dep(difficult-10, train-12)
dobj(train-12, doctors-13)
predet(procedure-17, such-15)
det(procedure-17, a-16)
prep_in(train-12, procedure-17)
mark(dedicated-21, unless-18)
nsubjpass(dedicated-21, you-19)
auxpass(dedicated-21, 're-20)
advcl(train-12, dedicated-21)
prep_to(dedicated-21, it-23)
dep(difficult-10, operating-26)
conj_and(train-12, operating-26)
det(clinic-29, an-27)
nn(clinic-29, abortion-28)
dobj(operating-26, clinic-29)
mark(expensive-42, as-30)
csubj(expensive-42, opposed-31)
det(clinic-36, a-33)
amod(clinic-36, plastic-34)
nn(clinic-36, surgery-35)
prep_to(opposed-31, clinic-36)
cop(expensive-42, is-37)
quantmod(times-40, about-38)
number(times-40, six-39)
dep(expensive-42, times-40)
advmod(expensive-42, as-41)
advcl(operating-26, expensive-42)
aux(protect-45, to-44)
xcomp(provides-2, protect-45)
dobj(protect-45, it-46)
prep_from(protect-45, terrorism-48)
prep_by(protect-45, extremists-50)

(ROOT
  (S (IN So)
    (ADVP (IN at) (JJ last))
    (NP (PRP we))
    (VP (VBP have)
      (NP
        (NP (DT the))
        ('' '')
        (SBAR
          (S
            (NP (DT No) (NN one))
            (VP (MD should)
              (VP (VB have)
                (NP (DT the) (NN right)
                  (S
                    (VP (TO to)
                      (VP (VB disallow)))))))))))
    (: ...)))

dep(have-5, So-1)
advmod(have-5, at-2)
advmod(at-2, last-3)
nsubj(have-5, we-4)
root(ROOT-0, have-5)
dobj(have-5, the-6)
det(one-9, No-8)
nsubj(have-11, one-9)
aux(have-11, should-10)
rcmod(the-6, have-11)
det(right-13, the-12)
dobj(have-11, right-13)
aux(disallow-15, to-14)
infmod(right-13, disallow-15)

(ROOT
  (S ('' '')
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (RB almost) (DT an) (JJ eerie) (NN return))
        (PP (TO to)
          (NP (JJ biblical) (NN morality)))))
    (. .)))

nsubj(return-7, This-2)
cop(return-7, is-3)
advmod(return-7, almost-4)
det(return-7, an-5)
amod(return-7, eerie-6)
root(ROOT-0, return-7)
amod(morality-10, biblical-9)
prep_to(return-7, morality-10)

(ROOT
  (FRAG
    (NP (RB Not) (DT the) (JJ good) (NN kind))
    (, ,)
    (SBAR
      (WHADVP (WRB where))
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP
            (NP
              (NP (NN love)
                (CC and)
                (NN feeding))
              (PP (IN of)
                (NP (DT the) (JJ poor))))
            (: --)
            (NP (DT the) (JJ scary) (NN kind))))))
    (. .)))

neg(kind-4, Not-1)
det(kind-4, the-2)
amod(kind-4, good-3)
root(ROOT-0, kind-4)
advmod('s-8, where-6)
expl('s-8, there-7)
dep(kind-4, 's-8)
nsubj('s-8, love-9)
nsubj('s-8, feeding-11)
conj_and(love-9, feeding-11)
det(poor-14, the-13)
prep_of(love-9, poor-14)
det(kind-18, the-16)
amod(kind-18, scary-17)
dep(love-9, kind-18)

(ROOT
  (S
    (NP (NNS Rapists))
    (VP (VBP are)
      (VP (VBN forced)
        (S
          (VP (TO to)
            (VP (VB marry)
              (NP (PRP$ their) (NNS victims) (NN kind)))))))
    (. .)))

nsubjpass(forced-3, Rapists-1)
xsubj(marry-5, Rapists-1)
auxpass(forced-3, are-2)
root(ROOT-0, forced-3)
aux(marry-5, to-4)
xcomp(forced-3, marry-5)
poss(kind-8, their-6)
nn(kind-8, victims-7)
dobj(marry-5, kind-8)

(ROOT
  (SQ (NNP Does)
    (NP (DT a) (NN rapist))
    (VP (VB have)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB impede)
              (NP
                (NP (DT the) (NN abortion))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN woman))
                    (SBAR
                      (S
                        (NP (PRP he))
                        (VP (VBZ 's)
                          (VP (VBN raped)))))))))))))
    (. ?)))

dep(have-4, Does-1)
det(rapist-3, a-2)
nsubj(have-4, rapist-3)
root(ROOT-0, have-4)
det(right-6, the-5)
dobj(have-4, right-6)
aux(impede-8, to-7)
infmod(right-6, impede-8)
det(abortion-10, the-9)
dobj(impede-8, abortion-10)
det(woman-13, the-12)
prep_of(abortion-10, woman-13)
nsubjpass(raped-16, he-14)
auxpass(raped-16, 's-15)
rcmod(woman-13, raped-16)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ is)
      (ADJP (DT a)
        (ADJP (JJ weird) (JJ right))
        (, ,)
        (CC but)
        (ADJP (JJ okay))))
    (. .)))

nsubj(right-5, Which-1)
nsubj(okay-8, Which-1)
cop(right-5, is-2)
dep(right-5, a-3)
amod(right-5, weird-4)
root(ROOT-0, right-5)
conj_but(right-5, okay-8)

(ROOT
  (SQ (MD Does)
    (NP
      (NP (DT a) (NN man))
      (CC or)
      (NP (DT a) (NN woman)))
    (VP (VB have)
      (NP (DT the) (NN right)
        (S
          (VP (TO to)
            (VP (VB force)
              (NP (PRP$ his) (NN involvement))
              (PP (IN on)
                (NP (PRP$ his) (NN child)))))))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (DT a) (NN court) (NN order))
          (VP (VBD prevented)
            (NP (PRP it))))))
    (. ?)))

aux(have-7, Does-1)
det(man-3, a-2)
nsubj(have-7, man-3)
det(woman-6, a-5)
conj_or(man-3, woman-6)
nsubj(have-7, woman-6)
root(ROOT-0, have-7)
det(right-9, the-8)
dobj(have-7, right-9)
aux(force-11, to-10)
infmod(right-9, force-11)
poss(involvement-13, his-12)
dobj(force-11, involvement-13)
poss(child-16, his-15)
prep_on(force-11, child-16)
mark(prevented-22, if-18)
det(order-21, a-19)
nn(order-21, court-20)
nsubj(prevented-22, order-21)
advcl(have-7, prevented-22)
dobj(prevented-22, it-23)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (VP (VBP go)
      (PP (IN with)
        (NP (DT that))))
    (. .)))

nsubj(go-3, Let-1)
possessive(Let-1, 's-2)
root(ROOT-0, go-3)
prep_with(go-3, that-5)

(ROOT
  (SQ
    (ADVP (RB Firstly))
    (, ,) (VBZ is)
    (NP (PRP it))
    (ADVP
      (NP (DT a) (NN codified))
      (RB right))
    (. ?)))

advmod(is-3, Firstly-1)
root(ROOT-0, is-3)
nsubj(is-3, it-4)
det(codified-6, a-5)
npadvmod(right-7, codified-6)
advmod(is-3, right-7)

(ROOT
  (S
    (NP (PRP I))
    (VP (MD ca) (RB n't)
      (VP (VB think)
        (PP (IN of)
          (NP (RB anywhere)))
        (SBAR (IN that)
          (S
            (NP (PDT such) (DT a) (NN right))
            (VP (VBZ is)
              (VP (VBN stated)
                (CC or)
                (VBN implied) (, ,)
                (SBAR (IN unless)
                  (S
                    (NP (PRP you))
                    (VP (VBP count)
                      (NP (PRP$ your) (JJ genetic) (NN offspring))
                      (PP (IN as)
                        (NP (NN property))))))))))))
    (. .)))

nsubj(think-4, I-1)
aux(think-4, ca-2)
neg(think-4, n't-3)
root(ROOT-0, think-4)
prep(think-4, of-5)
pobj(of-5, anywhere-6)
complm(stated-12, that-7)
predet(right-10, such-8)
det(right-10, a-9)
nsubjpass(stated-12, right-10)
nsubjpass(implied-14, right-10)
auxpass(stated-12, is-11)
ccomp(think-4, stated-12)
ccomp(think-4, implied-14)
conj_or(stated-12, implied-14)
mark(count-18, unless-16)
nsubj(count-18, you-17)
advcl(stated-12, count-18)
poss(offspring-21, your-19)
amod(offspring-21, genetic-20)
dobj(count-18, offspring-21)
prep_as(count-18, property-23)

(ROOT
  (SQ (VBZ Is)
    (NP (PRP it))
    (NP (DT a) (JJ natural) (NN right))
    (. ?)))

cop(right-5, Is-1)
nsubj(right-5, it-2)
det(right-5, a-3)
amod(right-5, natural-4)
root(ROOT-0, right-5)

(ROOT
  (S
    (NP
      (NP (NNP Unlikely))
      (: --)
      (NP
        (NP (NNS people))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VB give)
                (PRT (RP up))
                (NP (PRP$ their) (NNS children))
                (PP (IN for)
                  (NP (NN adoption))))
              (CC and)
              (VP
                (ADVP (RB later))
                (VB want)
                (NP (NN access))
                (PP (TO to)
                  (NP (PRP them))))
              (, ,)
              (CC and)
              (VP (VB have)
                (NP
                  (NP (DT that))
                  (VP (VBN refused))))))))
      (, ,))
    (VP (VBP do) (RB n't)
      (VP (VB have)
        (NP
          (NP (PRP$ their) (NNS rights))
          (VP (VBN violated)))))
    (. .)))

nsubj(have-25, Unlikely-1)
dep(Unlikely-1, people-3)
nsubj(give-5, people-3)
nsubj(want-13, people-3)
nsubj(have-19, people-3)
rcmod(people-3, give-5)
prt(give-5, up-6)
poss(children-8, their-7)
dobj(give-5, children-8)
prep_for(give-5, adoption-10)
advmod(want-13, later-12)
rcmod(people-3, want-13)
conj_and(give-5, want-13)
dobj(want-13, access-14)
prep_to(want-13, them-16)
rcmod(people-3, have-19)
conj_and(give-5, have-19)
dobj(have-19, that-20)
partmod(that-20, refused-21)
aux(have-25, do-23)
neg(have-25, n't-24)
root(ROOT-0, have-25)
poss(rights-27, their-26)
dobj(have-25, rights-27)
partmod(rights-27, violated-28)

(ROOT
  (S
    (NP (NN Sperm)
      (CC or)
      (NN egg) (NNS donors))
    (VP (VBP do) (RB not)
      (VP (VB have)
        (S
          (NP (PRP$ their) (NNS rights))
          (VP (VBD violated)
            (SBAR (IN if)
              (S
                (NP (PRP they))
                (VP (VBP do) (RB n't)
                  (VP (VB get)
                    (S
                      (VP (TO to)
                        (VP (VB name)
                          (S
                            (NP (NNP \))
                            (VP (VB provide)
                              (SBAR
                                (S
                                  (NP (NNP \))
                                  (VP (VBP have)
                                    (NP
                                      (NP (DT a) (NN say))
                                      (PP (IN in)
                                        (NP
                                          (NP (PRP$ their) (NN offspring) (POS 's))
                                          (NN life))))))))))))))))))))
    (. .)))

nn(donors-4, Sperm-1)
conj_or(Sperm-1, egg-3)
nn(donors-4, egg-3)
nsubj(have-7, donors-4)
aux(have-7, do-5)
neg(have-7, not-6)
root(ROOT-0, have-7)
poss(rights-9, their-8)
nsubj(violated-10, rights-9)
ccomp(have-7, violated-10)
mark(get-15, if-11)
nsubj(get-15, they-12)
xsubj(name-17, they-12)
aux(get-15, do-13)
neg(get-15, n't-14)
advcl(violated-10, get-15)
aux(name-17, to-16)
xcomp(get-15, name-17)
nsubj(provide-19, \-18)
ccomp(name-17, provide-19)
nsubj(have-21, \-20)
ccomp(provide-19, have-21)
det(say-23, a-22)
dobj(have-21, say-23)
poss(offspring-26, their-25)
poss(life-28, offspring-26)
prep_in(say-23, life-28)

(ROOT
  (S (RB So)
    (VP (VB let)
      (S
        (NP (POS 's))
        (VP (VB look)
          (PP (IN at)
            (NP
              (NP (DT the) (JJ negative) (NN right) (NN statement))
              (, ,)
              (NP (NN ie)))))))
    (. .)))

advmod(let-2, So-1)
root(ROOT-0, let-2)
nsubj(look-4, 's-3)
ccomp(let-2, look-4)
det(statement-9, the-6)
amod(statement-9, negative-7)
nn(statement-9, right-8)
prep_at(look-4, statement-9)
appos(statement-9, ie-11)

