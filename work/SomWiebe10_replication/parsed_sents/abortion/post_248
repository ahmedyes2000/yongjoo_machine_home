(ROOT
  (NP (JJ Bottom) (NN line) (: ...)))

amod(line-2, Bottom-1)
root(ROOT-0, line-2)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (NP (DT the) (JJ womans) (NN choice)))
    (. .)))

nsubj(choice-5, it-1)
cop(choice-5, is-2)
det(choice-5, the-3)
amod(choice-5, womans-4)
root(ROOT-0, choice-5)

(ROOT
  (S
    (NP (DT this))
    (VP (VBZ is)
      (NP
        (NP (NN something))
        (SBAR
          (S
            (NP (FW i))
            (VP (VBP am)
              (ADJP (JJ greatful)
                (S
                  (VP (TO to)
                    (VP (VB have)
                      (PP (IN as)
                        (NP (DT a) (JJ young) (NN woman))))))))))))
    (. .)))

nsubj(something-3, this-1)
cop(something-3, is-2)
root(ROOT-0, something-3)
nsubj(greatful-6, i-4)
cop(greatful-6, am-5)
rcmod(something-3, greatful-6)
aux(have-8, to-7)
xcomp(greatful-6, have-8)
det(woman-12, a-10)
amod(woman-12, young-11)
prep_as(have-8, woman-12)

(ROOT
  (SBARQ
    (WHNP (WP Who))
    (SQ (VBP are)
      (NP (NNP WE))
      (S
        (VP (TO to)
          (VP (VB tell)
            (NP
              (NP (DT another) (NN woman))
              (SBAR
                (WHNP (WP what))
                (S
                  (NP (PRP she))
                  (VP (MD can)
                    (CC and)
                    (MD can) (RB not)
                    (VP (VB do)
                      (PP (IN with)
                        (NP (PRP$ her) (JJ own) (NN body) (NN ???))))))))))))))

attr(are-2, Who-1)
root(ROOT-0, are-2)
nsubj(are-2, WE-3)
aux(tell-5, to-4)
dep(are-2, tell-5)
det(woman-7, another-6)
dobj(tell-5, woman-7)
dobj(do-14, woman-7)
rel(do-14, what-8)
nsubj(do-14, she-9)
aux(do-14, can-10)
rcmod(woman-7, can-12)
aux(do-14, can-12)
conj_and(do-14, can-12)
neg(do-14, not-13)
rcmod(woman-7, do-14)
poss(???-19, her-16)
amod(???-19, own-17)
nn(???-19, body-18)
prep_with(do-14, ???-19)

(ROOT
  (S
    (NP (PRP you))
    (VP (VBP dont)
      (VP (VB have)
        (S
          (VP (TO to)
            (VP (VB be)
              (PP
                (PP (IN for)
                  (NP (PRP it)))
                (: ...)
                (CC or)
                (PP (IN against)
                  (NP (PRP it)))))))))
    (: ...)))

nsubj(dont-2, you-1)
xsubj(be-5, you-1)
root(ROOT-0, dont-2)
dep(dont-2, have-3)
aux(be-5, to-4)
xcomp(have-3, be-5)
xcomp(have-3, be-5')
conj_or(be-5, be-5')
prep_for(be-5, it-7)
prep_against(be-5', it-11)

(ROOT
  (INTJ (UH .)))


(ROOT
  (PRN (CC but)
    (SBAR (IN if)
      (S
        (NP (PRP YOU))
        (VP (VBD were)
          (PP (IN in)
            (NP (NN predicament)))))
      (: ...))))

dep(were-4, but-1)
mark(were-4, if-2)
nsubj(were-4, YOU-3)
root(ROOT-0, were-4)
prep_in(were-4, predicament-6)

(ROOT
  (INTJ (UH .)))


(ROOT
  (SBARQ
    (WHADVP (WRB where))
    (S
      (PP (IN at)
        (NP
          (NP (DT a) (NN point))
          (PP (IN in)
            (NP (PRP$ your) (NN life)))))
      (NP (PRP you))
      (VP (VBD were) (RB not)
        (ADJP
          (ADJP (JJ prepared))
          (: ...)
          (ADJP (JJ wouldnt)
            (SBAR
              (S
                (NP (PRP you))
                (VP (VBP want)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ able)
                          (S
                            (VP (TO to)
                              (VP (VB decide)
                                (PP (IN for)
                                  (NP
                                    (NP (PRP yourself))
                                    (SBAR
                                      (WHNP (WP what))
                                      (S
                                        (VP (TO to)
                                          (VP (VB do)
                                            (NP (NNS ???))))))))))))))))))))))))

advmod(prepared-11, where-1)
det(point-4, a-3)
prep_at(prepared-11, point-4)
poss(life-7, your-6)
prep_in(point-4, life-7)
nsubj(prepared-11, you-8)
cop(prepared-11, were-9)
neg(prepared-11, not-10)
root(ROOT-0, prepared-11)
dep(prepared-11, wouldnt-13)
nsubj(want-15, you-14)
xsubj(able-18, you-14)
dep(wouldnt-13, want-15)
aux(able-18, to-16)
cop(able-18, be-17)
xcomp(want-15, able-18)
aux(decide-20, to-19)
xcomp(able-18, decide-20)
prep_for(decide-20, yourself-22)
nsubj(do-25, yourself-22)
aux(do-25, to-24)
infmod(yourself-22, do-25)
rcmod(yourself-22, do-25)
dobj(do-25, ???-26)

(ROOT
  (NP (NNP granted) (: ...)))

root(ROOT-0, granted-1)

(ROOT
  (INTJ (UH .)))


(ROOT
  (SINV
    (ADVP (RB perhaps))
    (VP
      (ADVP (RB there))
      (MD should)
      (VP (VB be)
        (NP
          (NP (DT a) (NN point))
          (PP (IN in)
            (NP (DT a) (NN pregnancy))))))
    (SBAR
      (WHADVP (WRB where))
      (S
        (UCP
          (SBAR (IN if)
            (S
              (VP (VBP youre)
                (S
                  (NP
                    (NP (DT a) (JJ certain) (NN amount))
                    (PP (IN of)
                      (NP
                        (NP (NN time))
                        (PP (IN along)
                          (NP (DT that) (NN abortion) (NN couldnt))))))
                  (VP (VB be)
                    (VP (VBN preformed)))))))
          (, ,)
          (CC but)
          (ADVP (RB again)))))
    (: ...)))

advmod(point-6, perhaps-1)
advmod(point-6, there-2)
aux(point-6, should-3)
cop(point-6, be-4)
det(point-6, a-5)
root(ROOT-0, point-6)
det(pregnancy-9, a-8)
prep_in(point-6, pregnancy-9)
advmod(youre-12, where-10)
mark(youre-12, if-11)
dep(point-6, youre-12)
det(amount-15, a-13)
amod(amount-15, certain-14)
nsubjpass(preformed-23, amount-15)
prep_of(amount-15, time-17)
det(couldnt-21, that-19)
nn(couldnt-21, abortion-20)
prep_along(time-17, couldnt-21)
auxpass(preformed-23, be-22)
ccomp(youre-12, preformed-23)
dep(point-6, again-26)
conj_but(youre-12, again-26)

(ROOT
  (INTJ (UH .)))


(ROOT
  (S
    (NP (JJ i) (NN wouldnt))
    (VP (MD dare)
      (VP (VB tell)
        (NP
          (NP (DT another) (NN woman))
          (SBAR
            (WHNP (WP what))
            (S
              (VP (TO to)
                (VP (VB do))))))))
    (. .)))

amod(wouldnt-2, i-1)
nsubj(dare-3, wouldnt-2)
root(ROOT-0, dare-3)
dep(dare-3, tell-4)
det(woman-6, another-5)
dobj(tell-4, woman-6)
nsubj(do-9, woman-6)
aux(do-9, to-8)
infmod(woman-6, do-9)
rcmod(woman-6, do-9)

(ROOT
  (S
    (S
      (NP (JJ i) (NN dont))
      (VP (VBP think)
        (SBAR
          (S
            (NP (JJ pro) (NN choice))
            (VP (VBZ is)
              (VP (VBG PROMTING)
                (NP (NN abortion))))))))
    (: ...)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ IS)
        (VP (VBG promoting)
          (NP (DT the) (NN right)
            (S
              (VP (TO to)
                (VP (VB choose))))))))
    (. .)))

amod(dont-2, i-1)
nsubj(think-3, dont-2)
root(ROOT-0, think-3)
amod(choice-5, pro-4)
nsubj(PROMTING-7, choice-5)
aux(PROMTING-7, is-6)
ccomp(think-3, PROMTING-7)
dobj(PROMTING-7, abortion-8)
nsubj(promoting-13, it-11)
aux(promoting-13, IS-12)
conj_but(think-3, promoting-13)
det(right-15, the-14)
dobj(promoting-13, right-15)
aux(choose-17, to-16)
infmod(right-15, choose-17)

