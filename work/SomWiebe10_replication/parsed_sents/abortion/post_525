(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ actual) (NN length))
        (PP (IN of)
          (NP (NN time))))
      (, ,)
      (ADVP (RB really)))
    (. .)))

nsubj(length-5, Which-1)
cop(length-5, is-2)
det(length-5, the-3)
amod(length-5, actual-4)
root(ROOT-0, length-5)
prep_of(length-5, time-7)
advmod(length-5, really-9)

(ROOT
  (NP
    (NP (CD 40))
    (NP (NNS weeks))
    (, ,)
    (PP (IN in)
      (NP (NN general)))
    (. .)))

root(ROOT-0, 40-1)
dep(40-1, weeks-2)
prep_in(40-1, general-5)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (CD one) (NN reason))
        (SBAR
          (WHADVP (WRB why))
          (S
            (NP (NNP Vietnam))
            (VP (VBD was)
              (ADJP (RB so) (VBN opposed)))))))
    (. .)))

nsubj(reason-4, This-1)
cop(reason-4, is-2)
num(reason-4, one-3)
root(ROOT-0, reason-4)
advmod(opposed-9, why-5)
nsubjpass(opposed-9, Vietnam-6)
auxpass(opposed-9, was-7)
advmod(opposed-9, so-8)
rcmod(reason-4, opposed-9)

(ROOT
  (SBARQ
    (SBAR (IN Because)
      (S
        (NP (PRP you))
        (VP (VBD had)
          (NP (NNS thousands))
          (, ,)
          (ADVP (RB literally)))))
    (, ,)
    (WHNP (WP who))
    (SQ (VBD were)
      (VP (VBN enslaved)
        (PP (IN by)
          (NP (DT the) (NN government)))))
    (. .)))

mark(had-3, Because-1)
nsubj(had-3, you-2)
advcl(enslaved-10, had-3)
dobj(had-3, thousands-4)
advmod(had-3, literally-6)
nsubjpass(enslaved-10, who-8)
auxpass(enslaved-10, were-9)
root(ROOT-0, enslaved-10)
det(government-13, the-12)
agent(enslaved-10, government-13)

(ROOT
  (S (CC And)
    (ADVP
      (ADVP (RBR further))
      (PP (TO to)
        (NP (DT that))))
    (, ,)
    (NP
      (NP
        (NP (NNS men))
        (PP (IN like)
          (NP (NNP Cheney)
            (CC and)
            (NNP Bush))))
      (CC and)
      (NP
        (NP (NNP Clinton))
        (CC and)
        (NP
          (NP (DT a) (NN host))
          (PP (IN of)
            (NP (NNS others))))))
    (VP (VBD were)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB buy)
              (NP (PRP$ their) (NN way))
              (PP (IN out)
                (NP (DT this) (NN enslavement))))))))
    (. .)))

cc(able-19, And-1)
advmod(able-19, further-2)
prep_to(further-2, that-4)
nsubj(able-19, men-6)
prep_like(men-6, Cheney-8)
prep_like(men-6, Bush-10)
conj_and(Cheney-8, Bush-10)
conj_and(men-6, Clinton-12)
nsubj(able-19, Clinton-12)
det(host-15, a-14)
conj_and(men-6, host-15)
conj_and(Clinton-12, host-15)
prep_of(host-15, others-17)
cop(able-19, were-18)
root(ROOT-0, able-19)
aux(buy-21, to-20)
xcomp(able-19, buy-21)
poss(way-23, their-22)
dobj(buy-21, way-23)
det(enslavement-26, this-25)
prep_out(buy-21, enslavement-26)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ speaks)
      (ADVP (RBR further))
      (PP (TO to)
        (NP (NN injustice))))
    (. .)))

nsubj(speaks-2, Which-1)
root(ROOT-0, speaks-2)
advmod(speaks-2, further-3)
prep_to(speaks-2, injustice-5)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP join)
      (NP (DT the) (NN military))
      (SBAR (IN because)
        (S
          (NP (PRP you))
          (VP (VBP want)
            (PP (TO to))))))
    (. .)))

nsubj(join-2, You-1)
root(ROOT-0, join-2)
det(military-4, the-3)
dobj(join-2, military-4)
mark(want-7, because-5)
nsubj(want-7, you-6)
advcl(join-2, want-7)
prep(want-7, to-8)

(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBD were)
          (VP (VBN forced)
            (PP (IN into)
              (NP (PRP it)))
            (PP (IN against)
              (NP
                (NP (PRP$ your) (NN will)
                  (CC and)
                  (NNS principles))
                (PP (IN of)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (NP (PRP you))
                      (VP (VBP believe)
                        (PRN (-LRB- -LRB-)
                          (SBAR (IN for)
                            (S
                              (SBAR (IN if)
                                (S
                                  (NP (PRP you))
                                  (VP (VBD believed)
                                    (PP (IN in)
                                      (NP (DT the) (NN war))))))
                              (, ,)
                              (NP (PRP you))
                              (VP (MD would)
                                (VP (VB have)
                                  (VP (VBD enlisted))))))
                          (-RRB- -RRB-))))))))))))
    (, ,) (MD would)
    (NP (PRP you))
    (ADVP (RB still))
    (VP (VB hold)
      (SBAR (IN that)
        (S
          (NP (PRP$ your) (NN life))
          (VP (VBD was)
            (ADJP (JJ worth)
              (PP (CC less)
                (PP (IN than)
                  (NP (NNS others)))))))))
    (. ?)))

mark(forced-4, If-1)
nsubjpass(forced-4, you-2)
auxpass(forced-4, were-3)
advcl(hold-34, forced-4)
prep_into(forced-4, it-6)
poss(will-9, your-8)
prep_against(forced-4, will-9)
prep_against(forced-4, principles-11)
conj_and(will-9, principles-11)
dobj(believe-15, what-13)
nsubj(believe-15, you-14)
prepc_of(will-9, believe-15)
mark(enlisted-28, for-17)
mark(believed-20, if-18)
nsubj(believed-20, you-19)
advcl(enlisted-28, believed-20)
det(war-23, the-22)
prep_in(believed-20, war-23)
nsubj(enlisted-28, you-25)
aux(enlisted-28, would-26)
aux(enlisted-28, have-27)
parataxis(believe-15, enlisted-28)
aux(hold-34, would-31)
nsubj(hold-34, you-32)
advmod(hold-34, still-33)
root(ROOT-0, hold-34)
complm(worth-39, that-35)
poss(life-37, your-36)
nsubj(worth-39, life-37)
cop(worth-39, was-38)
ccomp(hold-34, worth-39)
cc(worth-39, less-40)
prep_than(worth-39, others-42)

(ROOT
  (FRAG (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP hold)
          (SBAR (IN that)
            (S
              (NP (PRP$ your) (NN life))
              (VP (VBZ is)
                (ADJP
                  (ADJP (NN worth) (JJR less))
                  (SBAR (IN than)
                    (S
                      (NP (NNS others))
                      (VP (VBZ lives)))))
                (, ,)
                (SBAR
                  (WHADVP (WRB why))
                  (S
                    (NP (RB then))
                    (VP (MD should)
                      (NP (PRP you))
                      (S
                        (VP (VB try)
                          (CC and)
                          (VB force)
                          (NP (PRP$ your) (NN belief))
                          (PP (IN upon)
                            (NP (PRP me))))))))))))))
    (. ?)))

dep(hold-4, And-1)
mark(hold-4, if-2)
nsubj(hold-4, you-3)
root(ROOT-0, hold-4)
complm(worth-9, that-5)
poss(life-7, your-6)
nsubj(worth-9, life-7)
cop(worth-9, is-8)
ccomp(hold-4, worth-9)
dep(worth-9, less-10)
mark(lives-13, than-11)
nsubj(lives-13, others-12)
dep(worth-9, lives-13)
advmod(should-17, why-15)
nsubj(should-17, then-16)
advcl(worth-9, should-17)
dobj(should-17, you-18)
dep(should-17, try-19)
dep(should-17, force-21)
conj_and(try-19, force-21)
poss(belief-23, your-22)
dobj(try-19, belief-23)
prep_upon(try-19, me-25)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP owe)
      (NP (PRP$ my) (NN life))
      (PP (TO to)
        (NP (DT no) (NN one))))
    (. .)))

nsubj(owe-2, I-1)
root(ROOT-0, owe-2)
poss(life-4, my-3)
dobj(owe-2, life-4)
det(one-7, no-6)
prep_to(owe-2, one-7)

(ROOT
  (S
    (NP
      (S
        (VP (TO To)
          (VP (VB be)
            (VP (VBN forced)
              (S
                (VP (TO to)
                  (VP (VB owe)
                    (NP (PRP$ my) (NN life))
                    (PP (TO to)
                      (NP (NN someone))))))))))
      (, ,)
      (RRC
        (ADVP (RB even))
        (PP (IN for)
          (NP
            (NP (DT a) (JJ short) (NN period))
            (PP (IN of)
              (NP (NN time))))))
      (, ,))
    (VP (VBZ means)
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (VP (VBP have)
            (NP (DT no) (JJ individual) (NN right))))))
    (. .)))

aux(forced-3, To-1)
auxpass(forced-3, be-2)
dep(even-11, forced-3)
aux(owe-5, to-4)
xcomp(forced-3, owe-5)
poss(life-7, my-6)
dobj(owe-5, life-7)
prep_to(owe-5, someone-9)
nsubj(means-19, even-11)
dep(even-11, for-12)
det(period-15, a-13)
amod(period-15, short-14)
pobj(for-12, period-15)
prep_of(period-15, time-17)
root(ROOT-0, means-19)
complm(have-22, that-20)
nsubj(have-22, I-21)
ccomp(means-19, have-22)
det(right-25, no-23)
amod(right-25, individual-24)
dobj(have-22, right-25)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ is)
      (NP
        (NP (DT the) (JJ very) (NN foundation))
        (PP (IN of)
          (NP
            (NP (DT this) (NN country))
            (: ...)
            (SBAR (IN that)
              (S
                (NP (PRP I))
                (VP (VBP have)
                  (NP
                    (NP (DT the) (NN right))
                    (PP (IN of)
                      (NP (DT an) (NN individual)))))))))))
    (. .)))

nsubj(foundation-5, This-1)
cop(foundation-5, is-2)
det(foundation-5, the-3)
amod(foundation-5, very-4)
root(ROOT-0, foundation-5)
det(country-8, this-7)
prep_of(foundation-5, country-8)
dep(have-12, that-10)
nsubj(have-12, I-11)
dep(country-8, have-12)
det(right-14, the-13)
dobj(have-12, right-14)
det(individual-17, an-16)
prep_of(right-14, individual-17)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP think)
      (SBAR
        (S
          (NP (PRP I))
          (VP (VBP have)
            (VP (VBN said)
              (ADVP (RB though))
              (, ,)
              (SBAR (IN that)
                (S
                  (SBAR (IN if)
                    (S
                      (NP (PRP it))
                      (VP (VBD determined)
                        (SBAR
                          (SBAR (IN that)
                            (S
                              (NP (DT the) (NN fetus))
                              (VP (VBZ is)
                                (ADJP (JJ viable)))))
                          (CC or)
                          (SBAR (RB even) (IN if)
                            (S
                              (NP (DT the) (JJ medical) (NN community))
                              (VP (VBZ is)
                                (ADJP (JJ unsure))
                                (SBAR (CC but)
                                  (S
                                    (NP (EX there))
                                    (VP (VBZ is)
                                      (NP
                                        (NP (DT a) (NN possibility))
                                        (PP (IN of)
                                          (S
                                            (NP (PRP it))
                                            (VP (VBG being)
                                              (VP (VBN saved))))))))))))))))
                  (, ,)
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP
                      (NP (JJ little) (NN difference))
                      (PP (IN between)
                        (NP
                          (NP (DT an) (NN abortion))
                          (CC and)
                          (NP (DT a) (NN c-section)))))))))))))
    (. .)))

nsubj(think-2, I-1)
root(ROOT-0, think-2)
nsubj(said-5, I-3)
aux(said-5, have-4)
ccomp(think-2, said-5)
advmod(said-5, though-6)
complm(is-36, that-8)
mark(determined-11, if-9)
nsubj(determined-11, it-10)
advcl(is-36, determined-11)
complm(viable-16, that-12)
det(fetus-14, the-13)
nsubj(viable-16, fetus-14)
cop(viable-16, is-15)
ccomp(determined-11, viable-16)
advmod(unsure-24, even-18)
dep(unsure-24, if-19)
det(community-22, the-20)
amod(community-22, medical-21)
nsubj(unsure-24, community-22)
cop(unsure-24, is-23)
ccomp(determined-11, unsure-24)
conj_or(viable-16, unsure-24)
cc(is-27, but-25)
expl(is-27, there-26)
ccomp(unsure-24, is-27)
det(possibility-29, a-28)
nsubj(is-27, possibility-29)
nsubjpass(saved-33, it-31)
auxpass(saved-33, being-32)
prepc_of(possibility-29, saved-33)
expl(is-36, there-35)
ccomp(said-5, is-36)
amod(difference-38, little-37)
nsubj(is-36, difference-38)
det(abortion-41, an-40)
prep_between(difference-38, abortion-41)
det(c-section-44, a-43)
prep_between(difference-38, c-section-44)
conj_and(abortion-41, c-section-44)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBP make)
      (NP (DT the) (NN claim))
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (ADJP (JJ wrong)
            (S
              (VP (TO to)
                (VP (VB force)
                  (NP (DT a) (NN woman)
                    (PRN (-LRB- -LRB-)
                      (PP (IN by)
                        (NP
                          (NP (NNS means))
                          (PP (IN of)
                            (S
                              (VP (CC either)
                                (VBG allowing)
                                (CC or)
                                (VBG disallowing)
                                (NP (NN action)))))))
                      (-RRB- -RRB-))
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN imprisoned)
                            (PP (TO to)
                              (NP
                                (NP (PRP$ her) (NN body))
                                (PP (IN for)
                                  (NP (DT any) (NN reason)))))))))))))))))
    (. .)))

nsubj(make-2, I-1)
root(ROOT-0, make-2)
det(claim-4, the-3)
dobj(make-2, claim-4)
complm(wrong-7, that-5)
dep(wrong-7, it-6)
dep(make-2, wrong-7)
aux(force-9, to-8)
xcomp(wrong-7, force-9)
det(woman-11, a-10)
dobj(force-9, woman-11)
dep(woman-11, by-13)
pobj(by-13, means-14)
preconj(allowing-17, either-16)
prepc_of(means-14, allowing-17)
prepc_of(means-14, disallowing-19)
conj_or(allowing-17, disallowing-19)
dobj(allowing-17, action-20)
aux(imprisoned-24, to-22)
auxpass(imprisoned-24, be-23)
infmod(woman-11, imprisoned-24)
poss(body-27, her-26)
prep_to(imprisoned-24, body-27)
det(reason-30, any-29)
prep_for(body-27, reason-30)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN woman))
        (VP (VBZ does) (RB not)
          (VP (VB want)
            (S
              (VP (TO to)
                (VP
                  (VP (VB give)
                    (PRT (RP up))
                    (NP (PRP$ her) (NN freedom)))
                  (CC and)
                  (VP (VB owe)
                    (NP (PRP$ her) (NN life))
                    (PP (TO to)
                      (NP (DT a) (NN fetus)))))))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP
          (QP (JJR more) (IN than) (CD one))
          (NN option))
        (PP (IN of)
          (NP (NN abortion))))
      (, ,)
      (PP (IN at)
        (NP
          (NP (DT some) (NN point))
          (, ,)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ does) (RB n't)
                (VP (VB enslave)
                  (NP (DT the) (NN woman)))))))))
    (. .)))

mark(want-6, If-1)
det(woman-3, the-2)
nsubj(want-6, woman-3)
xsubj(give-8, woman-3)
aux(want-6, does-4)
neg(want-6, not-5)
advcl(is-21, want-6)
aux(give-8, to-7)
xcomp(want-6, give-8)
prt(give-8, up-9)
poss(freedom-11, her-10)
dobj(give-8, freedom-11)
xcomp(want-6, owe-13)
conj_and(give-8, owe-13)
poss(life-15, her-14)
dobj(owe-13, life-15)
det(fetus-18, a-17)
prep_to(owe-13, fetus-18)
expl(is-21, there-20)
root(ROOT-0, is-21)
mwe(than-23, more-22)
quantmod(one-24, than-23)
num(option-25, one-24)
nsubj(is-21, option-25)
prep_of(option-25, abortion-27)
det(point-31, some-30)
prep_at(is-21, point-31)
nsubj(enslave-36, point-31)
aux(enslave-36, does-34)
neg(enslave-36, n't-35)
rcmod(point-31, enslave-36)
det(woman-38, the-37)
dobj(enslave-36, woman-38)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT this))
        (VP (VBZ is)
          (NP (DT the) (NN case)))))
    (, ,)
    (ADVP (RB then))
    (NP (PRP it))
    (VP (VBZ becomes)
      (NP
        (NP (DT the) (NN responsibility))
        (PP (IN of)
          (NP (PRP us)))
        (S (RB all)
          (VP (TO to)
            (VP (VB ensure)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT the) (NN life))
                    (PP (IN of)
                      (NP (DT the) (NN fetus))))
                  (VP (VBZ IS)
                    (VP (VBN protected))))))))))
    (. .)))

mark(case-5, If-1)
nsubj(case-5, this-2)
cop(case-5, is-3)
det(case-5, the-4)
advcl(responsibility-11, case-5)
advmod(responsibility-11, then-7)
nsubj(responsibility-11, it-8)
cop(responsibility-11, becomes-9)
det(responsibility-11, the-10)
root(ROOT-0, responsibility-11)
prep_of(responsibility-11, us-13)
advmod(ensure-16, all-14)
aux(ensure-16, to-15)
infmod(responsibility-11, ensure-16)
complm(protected-24, that-17)
det(life-19, the-18)
nsubjpass(protected-24, life-19)
det(fetus-22, the-21)
prep_of(life-19, fetus-22)
auxpass(protected-24, IS-23)
ccomp(ensure-16, protected-24)

(ROOT
  (S
    (NP (DT This))
    (VP (VBZ does) (RB n't)
      (VP (VB mean)
        (SBAR
          (S
            (NP (DT the) (NN woman))
            (VP (MD must)
              (VP (VB remain)
                (ADJP (JJ pregnant))))))))
    (: ...)))

nsubj(mean-4, This-1)
aux(mean-4, does-2)
neg(mean-4, n't-3)
root(ROOT-0, mean-4)
det(woman-6, the-5)
nsubj(pregnant-9, woman-6)
aux(pregnant-9, must-7)
cop(pregnant-9, remain-8)
ccomp(mean-4, pregnant-9)

(ROOT
  (S
    (NP (PRP it))
    (ADVP (RB simply))
    (VP (VBZ means)
      (NP
        (NP (DT a) (NN change))
        (PP (IN in)
          (NP (NN procedure)))))
    (. .)))

nsubj(means-3, it-1)
advmod(means-3, simply-2)
root(ROOT-0, means-3)
det(change-5, a-4)
dobj(means-3, change-5)
prep_in(change-5, procedure-7)

(ROOT
  (S
    (ADVP (RB However))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT this))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN case))
            (SBAR
              (WHNP (WDT which))
              (S
                (NP (PRP I))
                (VP (VBP think))))))))
    (NP (PRP it))
    (VP (VBZ is))
    (. ...)))

advmod(is-12, However-1)
mark(case-7, if-3)
nsubj(case-7, this-4)
cop(case-7, is-5)
det(case-7, the-6)
dobj(think-10, case-7)
dep(is-12, case-7)
rel(think-10, which-8)
nsubj(think-10, I-9)
rcmod(case-7, think-10)
nsubj(is-12, it-11)
root(ROOT-0, is-12)

(ROOT
  (S
    (S
      (NP (PRP it))
      (VP (VBZ is) (RB not)
        (NP
          (NP (DT the) (NN woman))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ bears)
                (NP
                  (NP (DT the) (NN burden))
                  (PP (IN of)
                    (NP (DT this) (JJ extra) (NN cost))))))))))
    (, ,)
    (CC but)
    (S
      (NP
        (NP (DT the) (NN society))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ says)
              (NP (NN life))))))
      (VP (MD should)
        (VP (VB be)
          (VP (VBN protected)))))
    (. .)))

nsubj(woman-5, it-1)
cop(woman-5, is-2)
neg(woman-5, not-3)
det(woman-5, the-4)
root(ROOT-0, woman-5)
nsubj(bears-7, woman-5)
rcmod(woman-5, bears-7)
det(burden-9, the-8)
dobj(bears-7, burden-9)
det(cost-13, this-11)
amod(cost-13, extra-12)
prep_of(burden-9, cost-13)
det(society-17, the-16)
nsubj(says-19, society-17)
nsubjpass(protected-23, society-17)
rcmod(society-17, says-19)
dobj(says-19, life-20)
aux(protected-23, should-21)
auxpass(protected-23, be-22)
conj_but(woman-5, protected-23)
nsubj(bears-7, protected-23)

(ROOT
  (S
    (ADVP (RBR More) (RB over))
    (, ,)
    (NP (PRP I))
    (VP (VBP find)
      (NP (DT the) (NN claim))
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (MD must)
            (VP (VB allow)
              (NP
                (NP (RB only) (JJ medical) (NNS actions))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP agree)
                      (PP (IN with)
                        (NP (NN nature)))
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (ADJP (JJ preposterous))
                            (S
                              (VP (VBG considering)
                                (SBAR
                                  (S
                                    (NP
                                      (NP (DT the) (JJ whole) (NN point))
                                      (PP (IN of)
                                        (NP (JJ medical) (NN advancement))))
                                    (VP (VBZ has)
                                      (VP (VBN been)
                                        (S
                                          (VP (TO to)
                                            (VP (VB thwart)
                                              (NP (NN nature)))))))))))))))))))))))
    (. .)))

advmod(over-2, More-1)
advmod(find-5, over-2)
nsubj(find-5, I-4)
root(ROOT-0, find-5)
det(claim-7, the-6)
dobj(find-5, claim-7)
complm(allow-11, that-8)
nsubj(allow-11, we-9)
aux(allow-11, must-10)
ccomp(find-5, allow-11)
advmod(actions-14, only-12)
amod(actions-14, medical-13)
dobj(allow-11, actions-14)
nsubj(agree-16, actions-14)
rcmod(actions-14, agree-16)
prep_with(agree-16, nature-18)
aux(preposterous-21, to-19)
cop(preposterous-21, be-20)
xcomp(agree-16, preposterous-21)
xcomp(preposterous-21, considering-22)
det(point-25, the-23)
amod(point-25, whole-24)
nsubj(been-30, point-25)
amod(advancement-28, medical-27)
prep_of(point-25, advancement-28)
aux(been-30, has-29)
ccomp(considering-22, been-30)
aux(thwart-32, to-31)
xcomp(been-30, thwart-32)
dobj(thwart-32, nature-33)

(ROOT
  (S (CC And)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP find)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJ acceptable)
                  (S
                    (VP (TO to)
                      (VP (VB force)
                        (NP (DT a) (NN woman)
                          (S
                            (VP (TO to)
                              (VP (VB give)
                                (PRT (RP up))
                                (NP (PRP$ her) (NN freedom))
                                (PP (IN for)
                                  (ADVP (RB however)))
                                (SBAR (RB long) (IN because)
                                  (S
                                    (NP (PRP it))
                                    (VP (VBZ means)
                                      (SBAR (IN that)
                                        (S
                                          (NP (CD one) (NN life))
                                          (VP (MD might)
                                            (VP (VB live))))))))))))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP find)
      (S
        (NP (PRP it))
        (ADJP (JJ acceptable)
          (S
            (VP (TO to)
              (VP (VB say)
                (SBAR
                  (S
                    (NP
                      (NP (CD one) (NN person) (POS 's))
                      (NN life))
                    (VP (MD can) (RB not)
                      (VP (VB be)
                        (ADJP (JJ free))))))))))))
    (: ...)))

cc(find-31, And-1)
mark(find-4, if-2)
nsubj(find-4, you-3)
advcl(find-31, find-4)
complm(acceptable-8, that-5)
nsubj(acceptable-8, it-6)
cop(acceptable-8, is-7)
ccomp(find-4, acceptable-8)
aux(force-10, to-9)
xcomp(acceptable-8, force-10)
det(woman-12, a-11)
dobj(force-10, woman-12)
aux(give-14, to-13)
infmod(woman-12, give-14)
prt(give-14, up-15)
poss(freedom-17, her-16)
dobj(give-14, freedom-17)
prep(give-14, for-18)
pcomp(for-18, however-19)
advmod(means-23, long-20)
dep(means-23, because-21)
nsubj(means-23, it-22)
dep(give-14, means-23)
complm(live-28, that-24)
num(life-26, one-25)
nsubj(live-28, life-26)
aux(live-28, might-27)
ccomp(means-23, live-28)
nsubj(find-31, you-30)
root(ROOT-0, find-31)
nsubj(acceptable-33, it-32)
xcomp(find-31, acceptable-33)
aux(say-35, to-34)
xcomp(acceptable-33, say-35)
num(person-37, one-36)
poss(life-39, person-37)
nsubj(free-43, life-39)
aux(free-43, can-40)
neg(free-43, not-41)
cop(free-43, be-42)
ccomp(say-35, free-43)

(ROOT
  (S (CC and)
    (NP (DT this))
    (ADVP (RB then))
    (VP (VBZ applies)
      (PP (TO to)
        (NP
          (NP (DT all) (NNS people))
          (PP (VBG including)
            (NP
              (NP (DT the) (NN life))
              (SBAR (IN that)
                (S
                  (NP (NN freedom))
                  (VP (VBD was)
                    (VP (VBN tossed)
                      (PRT (RP aside))
                      (PP (IN for)))))))))))
    (. .)))

cc(applies-4, and-1)
nsubj(applies-4, this-2)
advmod(applies-4, then-3)
root(ROOT-0, applies-4)
det(people-7, all-6)
prep_to(applies-4, people-7)
det(life-10, the-9)
prep_including(people-7, life-10)
prep_for(tossed-14, life-10)
complm(tossed-14, that-11)
nsubjpass(tossed-14, freedom-12)
auxpass(tossed-14, was-13)
dep(life-10, tossed-14)
prt(tossed-14, aside-15)

(ROOT
  (S
    (NP (WDT Which))
    (VP (VBZ makes)
      (NP (JJ little) (NN sense)))
    (. .)))

nsubj(makes-2, Which-1)
root(ROOT-0, makes-2)
amod(sense-4, little-3)
dobj(makes-2, sense-4)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP say)
          (SBAR
            (S
              (NP (CD one) (NN person))
              (VP (VBZ has)
                (NP (DT no) (NN right))
                (PP (TO to)
                  (NP (NN freedom)))
                (SBAR (IN because)
                  (S
                    (NP (PRP it))
                    (VP (VBZ 's)
                      (ADVP (RB only))
                      (PP (IN for)
                        (NP (DT a) (JJ short) (NN time))))))))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP make)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBZ allowable)
            (PP (IN for)
              (NP (DT every) (NN person)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (VP (VBN enslaved)
                        (PP (TO to)
                          (NP
                            (NP (DT another))
                            (PP (IN for)
                              (NP
                                (NP (RB only) (DT a) (JJ short) (NN period))
                                (PP (IN of)
                                  (NP (NN time)))))))))))))))))
    (. .)))

mark(say-3, If-1)
nsubj(say-3, you-2)
advcl(make-21, say-3)
num(person-5, one-4)
nsubj(has-6, person-5)
ccomp(say-3, has-6)
det(right-8, no-7)
dobj(has-6, right-8)
prep_to(has-6, freedom-10)
mark('s-13, because-11)
nsubj('s-13, it-12)
advcl(has-6, 's-13)
advmod('s-13, only-14)
det(time-18, a-16)
amod(time-18, short-17)
prep_for('s-13, time-18)
nsubj(make-21, you-20)
root(ROOT-0, make-21)
nsubj(allowable-23, it-22)
ccomp(make-21, allowable-23)
det(person-26, every-25)
prep_for(allowable-23, person-26)
aux(enslaved-29, to-27)
auxpass(enslaved-29, be-28)
infmod(person-26, enslaved-29)
prep_to(enslaved-29, another-31)
advmod(period-36, only-33)
det(period-36, a-34)
amod(period-36, short-35)
prep_for(another-31, period-36)
prep_of(period-36, time-38)

(ROOT
  (S
    (NP (NNP Freedom))
    (VP (VBZ does) (RB n't)
      (VP (VB work)
        (NP (DT that) (NN way))))
    (. .)))

nsubj(work-4, Freedom-1)
aux(work-4, does-2)
neg(work-4, n't-3)
root(ROOT-0, work-4)
det(way-6, that-5)
dobj(work-4, way-6)

(ROOT
  (S (CC Either)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (JJ free))
        (PRN (-LRB- -LRB-)
          (ADVP (IN in)
            (ADVP (RB so) (RB far))
            (PP (IN as)
              (NP
                (NP (DT the) (NN use))
                (PP (IN of)
                  (NP
                    (NP (PRP$ your) (NN body))
                    (PP (IN by)
                      (NP (NNS others))))))))
          (-RRB- -RRB-))))
    (, ,)
    (CC or)
    (S
      (NP (PRP you))
      (VP (VBP are)
        (ADJP (JJ unfree))))
    (. .)))

preconj(free-4, Either-1)
nsubj(free-4, you-2)
cop(free-4, are-3)
root(ROOT-0, free-4)
dep(far-8, in-6)
advmod(far-8, so-7)
dep(free-4, far-8)
det(use-11, the-10)
prep_as(far-8, use-11)
poss(body-14, your-13)
prep_of(use-11, body-14)
prep_by(body-14, others-16)
nsubj(unfree-22, you-20)
cop(unfree-22, are-21)
conj_or(free-4, unfree-22)

