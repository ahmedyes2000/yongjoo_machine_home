(ROOT
  (S
    (NP (NNP Abstinence))
    (VP (VBZ means)
      (S
        (VP (TO to)
          (VP (VB abstain)))))
    (. .)))

nsubj(means-2, Abstinence-1)
xsubj(abstain-4, Abstinence-1)
root(ROOT-0, means-2)
aux(abstain-4, to-3)
xcomp(means-2, abstain-4)

(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't)
      (VP (VB get)
        (UCP
          (ADJP
            (ADJP (JJ pregnant))
            (SBAR (IN if)
              (S
                (NP (PRP you))
                (VP (VBP 're) (RB not)
                  (VP (VBG having)
                    (NP (NN sex)))))))
          (CC and)
          (NP
            (NP
              (NP (NNP STDs))
              (SBAR
                (S
                  (VP (VBP are)
                    (VP (VBN called)
                      (SBAR (IN that) (IN because)
                        (S
                          (NP (PRP they))
                          (VP (VBP are)
                            (ADVP (RB sexually))
                            (VP (VBN transmitted))))))))))
            (: ;)
            (NP
              (NP (DT no) (NN sex))
              (, ,)
              (NP (DT no) (NN transmission)))))))
    (. .)))

nsubj(pregnant-5, You-1)
aux(pregnant-5, ca-2)
neg(pregnant-5, n't-3)
dep(pregnant-5, get-4)
root(ROOT-0, pregnant-5)
mark(having-10, if-6)
nsubj(having-10, you-7)
aux(having-10, 're-8)
neg(having-10, not-9)
ccomp(pregnant-5, having-10)
dobj(having-10, sex-11)
conj_and(pregnant-5, STDs-13)
auxpass(called-15, are-14)
rcmod(STDs-13, called-15)
complm(transmitted-21, that-16)
dep(transmitted-21, because-17)
nsubjpass(transmitted-21, they-18)
auxpass(transmitted-21, are-19)
advmod(transmitted-21, sexually-20)
ccomp(called-15, transmitted-21)
det(sex-24, no-23)
dep(STDs-13, sex-24)
det(transmission-27, no-26)
appos(sex-24, transmission-27)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (MD may)
        (VP (VB be)
          (ADJP (RB self) (JJ deluded)))))
    (, ,)
    (CC but)
    (S
      (NP (DT the) (NNS kids))
      (VP (VBP get)
        (NP
          (NP (DT the) (NN message))
          (ADJP (JJ loud)
            (CC and)
            (JJ clear)))))
    (. .)))

nsubj(deluded-5, You-1)
aux(deluded-5, may-2)
cop(deluded-5, be-3)
advmod(deluded-5, self-4)
root(ROOT-0, deluded-5)
det(kids-9, the-8)
nsubj(get-10, kids-9)
conj_but(deluded-5, get-10)
det(message-12, the-11)
dobj(get-10, message-12)
amod(message-12, loud-13)
amod(message-12, clear-15)
conj_and(loud-13, clear-15)

(ROOT
  (S
    (NP
      (NP (NN Sex) (NN outside))
      (PP (IN of)
        (NP (NN marriage))))
    (VP
      (VP (VBZ goes)
        (PP (IN through)
          (NP
            (NP (DT the) (NN roof))
            (PP (IN with)
              (NP (DT this) (NN approach))))))
      (CC and)
      (VP
        (ADVP (RB so))
        (VBZ does)
        (NP
          (NP (PDT all) (DT the) (JJ other) (NNS problems))
          (VP (VBN associated)
            (PP (IN with)
              (NP (PRP it)))))))
    (. .)))

nn(outside-2, Sex-1)
nsubj(goes-5, outside-2)
nsubj(does-14, outside-2)
prep_of(outside-2, marriage-4)
root(ROOT-0, goes-5)
det(roof-8, the-7)
prep_through(goes-5, roof-8)
det(approach-11, this-10)
prep_with(roof-8, approach-11)
advmod(does-14, so-13)
conj_and(goes-5, does-14)
predet(problems-18, all-15)
det(problems-18, the-16)
amod(problems-18, other-17)
dobj(does-14, problems-18)
partmod(problems-18, associated-19)
prep_with(associated-19, it-21)

(ROOT
  (S
    (SBAR
      (WHNP (WP What))
      (S
        (NP (PRP I))
        (VP (VBP hear)
          (S
            (NP (PRP you))
            (VP (VBG saying))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP it))
          (VP (VBZ 's)
            (ADJP (JJS best))
            (S
              (VP (TO to)
                (VP (VB create)
                  (NP (CD 100) (NNS problems))
                  (S
                    (VP (TO to)
                      (VP (VB solve)
                        (NP (CD 1) (NN problem))))))))))))
    (. .)))

dobj(hear-3, What-1)
nsubj(hear-3, I-2)
csubj(is-6, hear-3)
nsubj(saying-5, you-4)
dep(hear-3, saying-5)
root(ROOT-0, is-6)
complm(best-10, that-7)
nsubj(best-10, it-8)
xsubj(create-12, it-8)
cop(best-10, 's-9)
ccomp(is-6, best-10)
aux(create-12, to-11)
xcomp(best-10, create-12)
num(problems-14, 100-13)
dobj(create-12, problems-14)
aux(solve-16, to-15)
xcomp(create-12, solve-16)
num(problem-18, 1-17)
dobj(solve-16, problem-18)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 'm)
        (ADJP (JJ sorry))))
    (CC but)
    (S
      (NP (DT that))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP what))
          (S
            (NP (PRP I))
            (VP (VBP call)
              (NP (JJ moral) (NN confusion)))))))
    (. .)))

nsubj(sorry-3, I-1)
cop(sorry-3, 'm-2)
root(ROOT-0, sorry-3)
nsubj('s-6, that-5)
conj_but(sorry-3, 's-6)
dobj(call-9, what-7)
nsubj(call-9, I-8)
ccomp('s-6, call-9)
amod(confusion-11, moral-10)
dobj(call-9, confusion-11)

(ROOT
  (S
    (S
      (NP (NNP Final))
      (VP (VBD thought)))
    (, ,)
    (NP (NNP Kids))
    (VP (VBP rise)
      (PP (TO to)
        (NP (DT the) (NN occasion)))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP you))
          (VP (VBP challenge)
            (NP (PRP them))))))
    (. .)))

nsubj(thought-2, Final-1)
ccomp(rise-5, thought-2)
nsubj(rise-5, Kids-4)
root(ROOT-0, rise-5)
det(occasion-8, the-7)
prep_to(rise-5, occasion-8)
advmod(challenge-11, when-9)
nsubj(challenge-11, you-10)
advcl(rise-5, challenge-11)
dobj(challenge-11, them-12)

(ROOT
  (S
    (INTJ (UH Yes))
    (, ,)
    (NP (DT some))
    (VP (MD will)
      (VP (VB fail)))
    (. .)))

dep(fail-5, Yes-1)
nsubj(fail-5, some-3)
aux(fail-5, will-4)
root(ROOT-0, fail-5)

(ROOT
  (FRAG (CC But)
    (ADVP (RB better))
    (PP (TO to)
      (ADJP (JJ loose)))
    (PP
      (NP
        (QP (DT a) (CD 100)))
      (IN than)
      (NP (CD 10000)))
    (. .)))

dep(better-2, But-1)
root(ROOT-0, better-2)
dep(better-2, to-3)
pobj(to-3, loose-4)
quantmod(100-6, a-5)
npadvmod(than-7, 100-6)
dep(better-2, than-7)
pobj(than-7, 10000-8)

(ROOT
  (S (CC And)
    (NP (DT the) (NN converse))
    (VP (VBZ is)
      (ADVP (RB also))
      (ADJP (JJ true)))
    (. .)))

cc(true-6, And-1)
det(converse-3, the-2)
nsubj(true-6, converse-3)
cop(true-6, is-4)
advmod(true-6, also-5)
root(ROOT-0, true-6)

(ROOT
  (S
    (VP (VB Set)
      (SBAR
        (S
          (NP
            (NP (DT a) (JJ low) (NN standard))
            (CC and)
            (NP (NNS kids)))
          (VP (MD will)
            (VP (VB meet)
              (NP (PRP it)))))))
    (. .)))

root(ROOT-0, Set-1)
det(standard-4, a-2)
amod(standard-4, low-3)
nsubj(meet-8, standard-4)
conj_and(standard-4, kids-6)
nsubj(meet-8, kids-6)
aux(meet-8, will-7)
ccomp(Set-1, meet-8)
dobj(meet-8, it-9)

(ROOT
  (S
    (NP (DT That))
    (VP (VBZ 's)
      (SBAR (IN because)
        (S
          (NP (PRP they))
          (VP (VBP are)
            (VP (VBG looking)
              (PP (TO to)
                (NP
                  (NP (NNS adults))
                  (PP (IN for)
                    (NP (NN guidance))))))))))
    (. .)))

nsubj('s-2, That-1)
root(ROOT-0, 's-2)
mark(looking-6, because-3)
nsubj(looking-6, they-4)
aux(looking-6, are-5)
advcl('s-2, looking-6)
prep_to(looking-6, adults-8)
prep_for(adults-8, guidance-10)

(ROOT
  (S
    (PP (IN About)
      (NP (NN desire)))
    (, ,)
    (NP (PRP we))
    (ADVP (DT all))
    (VP (VBD got)
      (SBAR
        (S
          (NP (PRP them)
            (CC and)
            (PRP we))
          (ADVP (DT all))
          (VP (VBP have)
            (NP
              (NP (DT an) (NN assortment))
              (PP (IN of)
                (NP (PRP them))))))))
    (. .)))

prep_about(got-6, desire-2)
nsubj(got-6, we-4)
advmod(got-6, all-5)
root(ROOT-0, got-6)
nsubj(have-11, them-7)
conj_and(them-7, we-9)
nsubj(have-11, we-9)
advmod(have-11, all-10)
ccomp(got-6, have-11)
det(assortment-13, an-12)
dobj(have-11, assortment-13)
prep_of(assortment-13, them-15)

(ROOT
  (S
    (ADVP (RB So))
    (, ,)
    (NP (NNP lets))
    (VP (VBP expect)
      (ADJP
        (ADJP (JJR more) (RP out)
          (PP (IN of)
            (NP (NNS kids))))
        (CC and)
        (ADJP (RB not) (JJR less))))
    (. .)))

advmod(expect-4, So-1)
nsubj(expect-4, lets-3)
root(ROOT-0, expect-4)
acomp(expect-4, more-5)
prep_out_of(more-5, kids-8)
neg(less-11, not-10)
acomp(expect-4, less-11)
conj_and(more-5, less-11)

(ROOT
  (S
    (NP
      (NP (DT The) (NN difference))
      (PP (IN between)
        (NP (NNS children)
          (CC and)
          (NNS adults))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (NNS adults))
          (VP (VBP learn)
            (S
              (VP (TO to)
                (VP (VB control)
                  (NP (PRP them)))))))))
    (. .)))

det(difference-2, The-1)
nsubj(is-7, difference-2)
prep_between(difference-2, children-4)
prep_between(difference-2, adults-6)
conj_and(children-4, adults-6)
root(ROOT-0, is-7)
complm(learn-10, that-8)
nsubj(learn-10, adults-9)
xsubj(control-12, adults-9)
ccomp(is-7, learn-10)
aux(control-12, to-11)
xcomp(learn-10, control-12)
dobj(control-12, them-13)

(ROOT
  (S
    (S
      (NP (NNP Children))
      (VP (VBP act)
        (PP (IN on)
          (NP (DT every) (NN desire)))))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (NNS adults))
          (VP (VBD did)
            (NP (DT that)))))
      (, ,)
      (NP (NN society))
      (VP (MD would) (RB not)
        (VP (VB be)
          (ADJP (JJ possible)))))
    (. .)))

nsubj(act-2, Children-1)
root(ROOT-0, act-2)
det(desire-5, every-4)
prep_on(act-2, desire-5)
mark(did-9, if-7)
nsubj(did-9, adults-8)
advcl(possible-16, did-9)
dobj(did-9, that-10)
nsubj(possible-16, society-12)
aux(possible-16, would-13)
neg(possible-16, not-14)
cop(possible-16, be-15)
parataxis(act-2, possible-16)

(ROOT
  (S (CC So)
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP I))
        (VP (VBP hear)
          (S
            (NP (PRP you))
            (VP (VBG saying))))))
    (VP (VBZ is)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP (MD should)
            (ADVP (RB never))
            (VP (VB grow)
              (PRT (RP up)))))))
    (. .)))

cc(is-7, So-1)
dobj(hear-4, what-2)
nsubj(hear-4, I-3)
csubj(is-7, hear-4)
nsubj(saying-6, you-5)
dep(hear-4, saying-6)
root(ROOT-0, is-7)
complm(grow-12, that-8)
nsubj(grow-12, we-9)
aux(grow-12, should-10)
neg(grow-12, never-11)
ccomp(is-7, grow-12)
prt(grow-12, up-13)

(ROOT
  (S
    (NP (JJ Hey) (NNS kids))
    (VP (MD will)
      (VP (VB be)
        (NP (NNS kids))
        (, ,)
        (ADVP (RB right))))
    (. ?)))

amod(kids-2, Hey-1)
nsubj(kids-5, kids-2)
aux(kids-5, will-3)
cop(kids-5, be-4)
root(ROOT-0, kids-5)
advmod(kids-5, right-7)

(ROOT
  (S
    (VP (VB Come)
      (PRT (RP on)))
    (. .)))

root(ROOT-0, Come-1)
prt(Come-1, on-2)

(ROOT
  (S
    (NP (NNP Let) (POS 's))
    (VP
      (VP (VBP raise)
        (NP (DT the) (NN bar)))
      (CC and)
      (VP
        (ADVP (RB actually))
        (VBP expect)
        (NP (NNS kids)
          (S
            (VP (TO to)
              (VP (VB grow)
                (PRT (RP up))))))))
    (. .)))

nsubj(raise-3, Let-1)
nsubj(expect-8, Let-1)
possessive(Let-1, 's-2)
root(ROOT-0, raise-3)
det(bar-5, the-4)
dobj(raise-3, bar-5)
advmod(expect-8, actually-7)
conj_and(raise-3, expect-8)
dobj(expect-8, kids-9)
aux(grow-11, to-10)
infmod(kids-9, grow-11)
prt(grow-11, up-12)

(ROOT
  (S
    (ADVP (RB Also))
    (, ,)
    (VP (VBG giving)
      (NP (NNS condoms)))
    (VP (VBZ is)
      (VP (VBG giving)
        (NP (NN permission))))
    (. .)))

advmod(giving-3, Also-1)
root(ROOT-0, giving-3)
dobj(giving-3, condoms-4)
aux(giving-6, is-5)
dep(giving-3, giving-6)
dobj(giving-6, permission-7)

