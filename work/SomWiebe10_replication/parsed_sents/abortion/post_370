(ROOT
  (S
    (NP (VBG Outlawing) (NN murder))
    (VP (VBZ does) (RB not)
      (ADVP (RB necessarily))
      (VP (VB reduce)
        (NP
          (NP
            (NP (DT the) (NN number))
            (PP (IN of)
              (NP (NNS murders))))
          (, ,)
          (CONJP (CC but)
            (RB rather))
          (NP
            (NP (NNS forces))
            (VP (VBN murderers)
              (S
                (VP (TO to)
                  (VP (VB jeopardize)
                    (NP (PRP$ their) (NNS lives)
                      (CC and)
                      (NN health))
                    (SBAR (IN in) (NN order)
                      (S
                        (VP (TO to)
                          (VP (VB terminate)
                            (NP (DT an) (JJ unwanted) (NN person))))))))))))))
    (. .)))

amod(murder-2, Outlawing-1)
nsubj(reduce-6, murder-2)
aux(reduce-6, does-3)
neg(reduce-6, not-4)
advmod(reduce-6, necessarily-5)
root(ROOT-0, reduce-6)
det(number-8, the-7)
dobj(reduce-6, number-8)
prep_of(number-8, murders-10)
dobj(reduce-6, forces-14)
conj_negcc(number-8, forces-14)
xsubj(jeopardize-17, forces-14)
partmod(forces-14, murderers-15)
aux(jeopardize-17, to-16)
xcomp(murderers-15, jeopardize-17)
poss(lives-19, their-18)
dobj(jeopardize-17, lives-19)
dobj(jeopardize-17, health-21)
conj_and(lives-19, health-21)
mark(terminate-25, in-22)
dep(terminate-25, order-23)
aux(terminate-25, to-24)
purpcl(jeopardize-17, terminate-25)
det(person-28, an-26)
amod(person-28, unwanted-27)
dobj(terminate-25, person-28)

(ROOT
  (S
    (ADVP (RB Now))
    (, ,)
    (S (RB not)
      (NP (DT all) (NN abortion))
      (VP (VBZ is)
        (NP (NN murder))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD should)
        (VP (VB be)
          (VP (VBN looked)
            (PP (IN at)
              (ADVP (RB just)))
            (PP (IN as)
              (NP (DT any) (JJ other) (NN killing)))))))
    (. .)))

advmod(murder-7, Now-1)
neg(murder-7, not-3)
det(abortion-5, all-4)
nsubj(murder-7, abortion-5)
cop(murder-7, is-6)
root(ROOT-0, murder-7)
nsubjpass(looked-13, it-10)
aux(looked-13, should-11)
auxpass(looked-13, be-12)
conj_but(murder-7, looked-13)
prep(looked-13, at-14)
pcomp(at-14, just-15)
det(killing-19, any-17)
amod(killing-19, other-18)
prep_as(looked-13, killing-19)

(ROOT
  (S
    (NP
      (NP (NNP Afterall))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (DT a) (JJ drunk) (NN driver))
          (VP (VBZ gets)
            (VP (VBN hurt)
              (PP (IN in)
                (NP (DT a) (NN car) (NN crash)))))))
      (, ,))
    (VP (VBZ does)
      (SBAR (IN that)
        (S
          (VP (VBP mean)
            (SBAR
              (S
                (NP (PRP we))
                (VP (MD should)
                  (VP (VB make)
                    (S
                      (NP (JJ drunk) (NN driving))
                      (ADJP (JJ legal)))))))))))
    (. ?)))

dobj(hurt-8, Afterall-1)
nsubj(does-14, Afterall-1)
mark(hurt-8, if-3)
det(driver-6, a-4)
amod(driver-6, drunk-5)
nsubjpass(hurt-8, driver-6)
auxpass(hurt-8, gets-7)
dep(Afterall-1, hurt-8)
det(crash-12, a-10)
nn(crash-12, car-11)
prep_in(hurt-8, crash-12)
root(ROOT-0, does-14)
complm(mean-16, that-15)
ccomp(does-14, mean-16)
nsubj(make-19, we-17)
aux(make-19, should-18)
ccomp(mean-16, make-19)
amod(driving-21, drunk-20)
nsubj(legal-22, driving-21)
xcomp(make-19, legal-22)

