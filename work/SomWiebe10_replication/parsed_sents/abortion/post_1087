(ROOT
  (S
    (NP (PRP It))
    (VP (MD should) (RB n't))
    (. .)))

nsubj(should-2, It-1)
root(ROOT-0, should-2)
neg(should-2, n't-3)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ 's)
      (NP (DT the) (NNS parents) (NN choice))
      (, ,)
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (MD ca) (RB n't)
            (VP (VB take)
              (NP
                (NP (NN care))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN child))
                    (SBAR
                      (S
                        (NP (PRP you))
                        (VP (MD should) (RB n't)
                          (VP (VB have)
                            (PP (IN on)
                              (PP (IN in)
                                (NP (DT the) (JJ first) (NN place))))))))))))))))
    (. .)))

nsubj(choice-5, It-1)
cop(choice-5, 's-2)
det(choice-5, the-3)
nn(choice-5, parents-4)
root(ROOT-0, choice-5)
mark(take-11, if-7)
nsubj(take-11, you-8)
aux(take-11, ca-9)
neg(take-11, n't-10)
advcl(choice-5, take-11)
dobj(take-11, care-12)
det(child-15, a-14)
prep_of(care-12, child-15)
dobj(have-19, child-15)
nsubj(have-19, you-16)
aux(have-19, should-17)
neg(have-19, n't-18)
rcmod(child-15, have-19)
prep(have-19, on-20)
pcomp(on-20, in-21)
det(place-24, the-22)
amod(place-24, first-23)
prep_in(on-20, place-24)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP (EX there))
        (VP (VBZ 's)
          (NP
            (NP (RB plenty))
            (PP (IN of)
              (NP (JJ other) (NNS choices)))
            (S
              (VP (TO to)
                (VP (VB do)
                  (PP (IN with)
                    (NP (PRP$ your) (NN kid)))
                  (SBAR (IN like)
                    (S
                      (S
                        (VP (VB give)
                          (PRT (RP up))
                          (PP (IN for)
                            (NP (NN adoption)))))
                      (VP (VBP sell)
                        (PP (IN for)
                          (S
                            (VP (VBG weed)
                              (NP (WP what))
                              (ADVP (RB ever)))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ 's)
      (NP (JJ nobodies) (NN choice)
        (S
          (VP (TO to)
            (VP (VB choose)
              (PP (IN for)
                (NP (DT the) (NNS parents))))))))
    (. .)))

mark('s-3, Although-1)
expl('s-3, there-2)
advcl('s-25, 's-3)
nsubj('s-3, plenty-4)
amod(choices-7, other-6)
prep_of(plenty-4, choices-7)
aux(do-9, to-8)
infmod(plenty-4, do-9)
poss(kid-12, your-11)
prep_with(do-9, kid-12)
mark(sell-18, like-13)
csubj(sell-18, give-14)
prt(give-14, up-15)
prep_for(give-14, adoption-17)
advcl(do-9, sell-18)
prepc_for(sell-18, weed-20)
dobj(weed-20, what-21)
advmod(weed-20, ever-22)
nsubj('s-25, it-24)
root(ROOT-0, 's-25)
amod(choice-27, nobodies-26)
attr('s-25, choice-27)
aux(choose-29, to-28)
infmod(choice-27, choose-29)
det(parents-32, the-31)
prep_for(choose-29, parents-32)

(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP have)
        (NP (PRP$ your) (JJ own) (NNS choices))))
    (, ,)
    (NP (NN abortion))
    (VP (MD can)
      (VP (VB be)
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (PRP them))))))
    (. .)))

nsubj(have-2, You-1)
ccomp(one-10, have-2)
poss(choices-5, your-3)
amod(choices-5, own-4)
dobj(have-2, choices-5)
nsubj(one-10, abortion-7)
aux(one-10, can-8)
cop(one-10, be-9)
root(ROOT-0, one-10)
prep_of(one-10, them-12)

(ROOT
  (UCP
    (PP
      (ADVP (RB Especially))
      (IN in)
      (NP (NN poverty)))
    (CC or)
    (SBAR (IN if)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (ADVP (RB simply))
          (NP (DT a) (NN druggy))))
      (. .))))

advmod(in-2, Especially-1)
root(ROOT-0, in-2)
pobj(in-2, poverty-3)
mark(druggy-10, if-5)
nsubj(druggy-10, you-6)
cop(druggy-10, 're-7)
advmod(druggy-10, simply-8)
det(druggy-10, a-9)
conj_or(in-2, druggy-10)

(ROOT
  (S (CC Plus)
    (, ,)
    (NP (PRP we))
    (VP (VBP do) (RB n't)
      (VP (VB need)
        (NP
          (NP (DT another) (NN GANGSTER)
            (CC or)
            (NN drug) (NN dealer))
          (PP (IN in)
            (NP (DT the) (NN world))))))
    (. .)))

cc(need-6, Plus-1)
nsubj(need-6, we-3)
aux(need-6, do-4)
neg(need-6, n't-5)
root(ROOT-0, need-6)
det(dealer-11, another-7)
nn(dealer-11, GANGSTER-8)
conj_or(GANGSTER-8, drug-10)
nn(dealer-11, drug-10)
dobj(need-6, dealer-11)
det(world-14, the-13)
prep_in(dealer-11, world-14)

(ROOT
  (FRAG
    (S
      (ADVP (RB Just))
      (VP (VBG saying)
        (NP (NNS !!!))))))

advmod(saying-2, Just-1)
root(ROOT-0, saying-2)
dobj(saying-2, !!!-3)

