(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (NN abortion))
          (PP (IN in)
            (NP (NN self-defense))))
        (VP (VBZ is)
          (ADJP (JJ OK)))))
    (, ,)
    (NP (DT a) (NN fetus))
    (VP (MD can) (RB not)
      (VP (VB have)
        (NP (DT a) (JJ general) (NN right))
        (PP (TO to)
          (NP
            (NP (NN life) (NNS Opponents))
            (PP (IN of)
              (NP (NN abortion)))))
        (ADVP (RB often)
          (S
            (VP (VBP argue)
              (SBAR (IN that)
                (S
                  (NP (DT a) (NN fetus))
                  (VP (VBZ has)
                    (NP
                      (NP (DT an) (JJ inviolable) (NN right))
                      (PP (TO to)
                        (NP (NN life))))))))))))
    (. .)))

mark(OK-6, If-1)
nsubj(OK-6, abortion-2)
prep_in(abortion-2, self-defense-4)
cop(OK-6, is-5)
advcl(have-12, OK-6)
det(fetus-9, a-8)
nsubj(have-12, fetus-9)
aux(have-12, can-10)
neg(have-12, not-11)
root(ROOT-0, have-12)
det(right-15, a-13)
amod(right-15, general-14)
dobj(have-12, right-15)
nn(Opponents-18, life-17)
prep_to(have-12, Opponents-18)
prep_of(Opponents-18, abortion-20)
advmod(have-12, often-21)
dep(often-21, argue-22)
complm(has-26, that-23)
det(fetus-25, a-24)
nsubj(has-26, fetus-25)
ccomp(argue-22, has-26)
det(right-29, an-27)
amod(right-29, inviolable-28)
dobj(has-26, right-29)
prep_to(right-29, life-31)

(ROOT
  (S
    (ADVP (RB Yet))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJ easy)
        (S
          (VP (TO to)
            (VP (VB demonstrate)
              (SBAR (IN that)
                (S
                  (NP (DT this))
                  (VP (VBZ is) (RB not)
                    (NP (DT the) (NN case))))))))))
    (. .)))

advmod(easy-5, Yet-1)
nsubj(easy-5, it-3)
cop(easy-5, is-4)
root(ROOT-0, easy-5)
aux(demonstrate-7, to-6)
xcomp(easy-5, demonstrate-7)
complm(case-13, that-8)
nsubj(case-13, this-9)
cop(case-13, is-10)
neg(case-13, not-11)
det(case-13, the-12)
ccomp(demonstrate-7, case-13)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (ADVP (RB always))
      (ADJP (JJ permissible)
        (S
          (VP (TO to)
            (VP (VB take)
              (NP
                (NP (DT a) (NN life))
                (PP (IN in)
                  (NP (NN self-defense)))))))))
    (. .)))

nsubj(permissible-4, It-1)
cop(permissible-4, is-2)
advmod(permissible-4, always-3)
root(ROOT-0, permissible-4)
aux(take-6, to-5)
xcomp(permissible-4, take-6)
det(life-8, a-7)
dobj(take-6, life-8)
prep_in(life-8, self-defense-10)

(ROOT
  (S
    (NP (DT This) (NN principle))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN applied)
          (PP (TO to)
            (NP (NN abortion))))))
    (. .)))

det(principle-2, This-1)
nsubjpass(applied-5, principle-2)
aux(applied-5, can-3)
auxpass(applied-5, be-4)
root(ROOT-0, applied-5)
prep_to(applied-5, abortion-7)

(ROOT
  (S (CC And)
    (, ,)
    (ADVP (RB importantly))
    (, ,)
    (NP (PRP it))
    (ADVP (RB also))
    (VP (VBZ demonstrates)
      (SBAR (IN that)
        (S
          (NP (EX there))
          (VP (VBZ is)
            (NP (DT no) (JJ such) (NN thing))
            (PP (IN as)
              (NP (DT an) (`` ``) (JJ inviolable) (NN right)))
            (PP (TO to)
              (NP (NN life)))
            ('' '')))))
    (. .)))

cc(demonstrates-7, And-1)
advmod(demonstrates-7, importantly-3)
nsubj(demonstrates-7, it-5)
advmod(demonstrates-7, also-6)
root(ROOT-0, demonstrates-7)
complm(is-10, that-8)
expl(is-10, there-9)
ccomp(demonstrates-7, is-10)
det(thing-13, no-11)
amod(thing-13, such-12)
nsubj(is-10, thing-13)
det(right-18, an-15)
amod(right-18, inviolable-17)
prep_as(is-10, right-18)
prep_to(is-10, life-20)

(ROOT
  (S
    (NP (EX There))
    (VP (VBP are)
      (ADVP (RB always))
      (NP (JJ conditional) (NNS exceptions)))
    (. .)))

expl(are-2, There-1)
root(ROOT-0, are-2)
advmod(are-2, always-3)
amod(exceptions-5, conditional-4)
nsubj(are-2, exceptions-5)

(ROOT
  (S (IN So) (, ,)
    (SBAR (IN if)
      (S
        (NP (PRP we))
        (VP (MD can)
          (VP (VB show)
            (SBAR (IN that)
              (S
                (NP (DT the) (NNS conditions))
                (VP (VBP are)
                  (ADJP (JJ appropriate))
                  (PRN (-LRB- -LRB-)
                    (PP
                      (ADVP (RB even))
                      (IN beyond)
                      (ADJP (JJ self-defense)))
                    (-RRB- -RRB-)))))))))
    (, ,)
    (NP (DT an) (NN abortion))
    (VP (MD can)
      (VP (VB be)
        (ADJP (JJ justified))
        (, ,)
        (SBAR (RB even) (IN if)
          (S
            (NP (PRP it))
            (VP (VBZ is) (`` ``)
              (NP (NN killing))
              ('' ''))))))
    (. .)))

dep(justified-22, So-1)
mark(show-6, if-3)
nsubj(show-6, we-4)
aux(show-6, can-5)
advcl(justified-22, show-6)
complm(appropriate-11, that-7)
det(conditions-9, the-8)
nsubj(appropriate-11, conditions-9)
cop(appropriate-11, are-10)
ccomp(show-6, appropriate-11)
advmod(beyond-14, even-13)
dep(appropriate-11, beyond-14)
pobj(beyond-14, self-defense-15)
det(abortion-19, an-18)
nsubj(justified-22, abortion-19)
aux(justified-22, can-20)
cop(justified-22, be-21)
root(ROOT-0, justified-22)
advmod(killing-29, even-24)
dep(killing-29, if-25)
nsubj(killing-29, it-26)
cop(killing-29, is-27)
ccomp(justified-22, killing-29)

