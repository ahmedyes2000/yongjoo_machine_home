(ROOT
  (S
    (NP (PRP it))
    (VP (VBZ is)
      (NP (DT the) (NN freedom)
        (S
          (VP (TO to)
            (VP (VB speak)
              (PP (IN without)
                (S
                  (VP (VBG being)
                    (VP (VBN told)
                      (SBAR
                        (SBAR
                          (WHNP (WP what))
                          (S
                            (VP (TO to)
                              (VP (VB say)))))
                        (CC or)
                        (SBAR
                          (WHADVP (WRB when)
                            (CC and)
                            (WRB how))
                          (S
                            (VP (TO to)
                              (VP (VB say)
                                (NP (PRP it))))))))))))))))
    (. .)))

nsubj(freedom-4, it-1)
cop(freedom-4, is-2)
det(freedom-4, the-3)
root(ROOT-0, freedom-4)
aux(speak-6, to-5)
infmod(freedom-4, speak-6)
auxpass(told-9, being-8)
prepc_without(speak-6, told-9)
nsubj(say-12, what-10)
nsubj(say-18, what-10)
aux(say-12, to-11)
dep(told-9, say-12)
advmod(say-18, when-14)
dep(when-14, and-15)
dep(when-14, how-16)
aux(say-18, to-17)
dep(told-9, say-18)
conj_or(say-12, say-18)
dobj(say-18, it-19)

