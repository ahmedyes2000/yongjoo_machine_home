(ROOT
  (SQ
    (SBAR (IN If)
      (S
        (ADVP (RB only))
        (VP (VBD became)
          (ADJP (JJ possible))
          (SBAR (IN for)
            (S
              (NP (PRP them))
              (VP (TO to)
                (VP (VB perform)
                  (NP
                    (NP (DT an) (NN abortion))
                    (PP (IN in)
                      (NP (DT the) (JJ second)
                        (CC or)
                        (JJ third) (NN term))))
                  (PP (IN with)
                    (NP (DT a) (JJ partial) (NN birth) (NN abortion))))))))))
    (, ,) (MD should)
    (NP (PRP they))
    (VP (VB be)
      (VP (VBN deprived)
        (NP (DT the) (NN right)
          (S
            (VP (TO to)
              (VP (VB do)
                (ADVP (RB so))))))))
    (. ?)))

mark(possible-4, If-1)
advmod(possible-4, only-2)
cop(possible-4, became-3)
advcl(deprived-26, possible-4)
mark(perform-8, for-5)
nsubj(perform-8, them-6)
aux(perform-8, to-7)
advcl(possible-4, perform-8)
xcomp(possible-4, perform-8)
det(abortion-10, an-9)
dobj(perform-8, abortion-10)
det(term-16, the-12)
amod(term-16, second-13)
conj_or(second-13, third-15)
amod(term-16, third-15)
prep_in(abortion-10, term-16)
det(abortion-21, a-18)
amod(abortion-21, partial-19)
nn(abortion-21, birth-20)
prep_with(perform-8, abortion-21)
aux(deprived-26, should-23)
nsubjpass(deprived-26, they-24)
auxpass(deprived-26, be-25)
root(ROOT-0, deprived-26)
det(right-28, the-27)
dobj(deprived-26, right-28)
aux(do-30, to-29)
infmod(right-28, do-30)
advmod(do-30, so-31)

