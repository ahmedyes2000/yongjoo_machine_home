(ROOT
  (S
    (NP (PRP I))
    (VP (VBP have)
      (NP
        (NP (NN respect))
        (PP (IN for)
          (NP (NNP ALL) (NN life) (NNS forms)))
        (, ,)
        (ADJP (JJ human)
          (CC and)
          (JJ non-human))))
    (. .)))

nsubj(have-2, I-1)
root(ROOT-0, have-2)
dobj(have-2, respect-3)
nn(forms-7, ALL-5)
nn(forms-7, life-6)
prep_for(respect-3, forms-7)
amod(respect-3, human-9)
amod(respect-3, non-human-11)
conj_and(human-9, non-human-11)

(ROOT
  (S
    (NP (PRP We))
    (PP (IN as)
      (NP (DT a) (JJ human) (NN race)))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB learn)
            (S
              (VP (TO to)
                (VP
                  (VP (VB respect)
                    (NP
                      (NP (NN life) (NNS forms))
                      (, ,)
                      (ADJP (JJ human)
                        (CC and)
                        (JJ non-human))
                      (, ,)))
                  (CC and)
                  (VP
                    (VP (VB treat)
                      (NP (PRP them))
                      (PP (IN with)
                        (NP (DT the) (NN dignity))))
                    (CC and)
                    (VP (VB respect)
                      (S
                        (NP (PRP they))
                        (VP (VB deserve))))))))))))
    (. .)))

nsubj(need-6, We-1)
xsubj(learn-8, We-1)
det(race-5, a-3)
amod(race-5, human-4)
prep_as(need-6, race-5)
root(ROOT-0, need-6)
aux(learn-8, to-7)
xcomp(need-6, learn-8)
aux(respect-10, to-9)
xcomp(learn-8, respect-10)
nn(forms-12, life-11)
dobj(respect-10, forms-12)
amod(forms-12, human-14)
amod(forms-12, non-human-16)
conj_and(human-14, non-human-16)
xcomp(learn-8, treat-19)
conj_and(respect-10, treat-19)
dobj(treat-19, them-20)
det(dignity-23, the-22)
prep_with(treat-19, dignity-23)
conj_and(respect-10, respect-25)
conj_and(treat-19, respect-25)
nsubj(deserve-27, they-26)
ccomp(respect-25, deserve-27)

(ROOT
  (S
    (NP
      (NP (NNP Continuing))
      (SBAR
        (S
          (VP (TO to)
            (VP (VB allow)
              (NP (DT this)
                (ADJP (RB morally) (JJ repulsive))
                (NN procedure))
              (S
                (VP (TO to)
                  (VP (VB take)
                    (NP (NN place))))))))))
    (VP (VBZ is)
      (ADVP (RB just))
      (NP
        (NP (DT an) (NN indication))
        (PP (IN of)
          (NP
            (NP (DT the) (NN state))
            (PP (IN of)
              (NP (JJ moral) (NN decay))))))
      (SBAR (IN that)
        (S
          (S
            (NP (DT the) (NNP USA))
            (VP (VBZ is)
              (PP (IN in))))
          (CC and)
          (S
            (NP (PRP it))
            (VP (VBZ 's) (RB not)
              (VP (VBG going)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB get)
                        (ADVP (DT any) (RBR better))
                        (SBAR (IN unless)
                          (S
                            (NP
                              (NP (NNS people))
                              (PP (IN with)
                                (NP (JJ good) (NNS consciences))))
                            (VP (VB step)
                              (PRT (RP up))))))
                      (CC and)
                      (VP (VB straighten)
                        (NP (NNS things))
                        (PRT (RP out))))))))))))
    (. .)))

nsubj(indication-14, Continuing-1)
aux(allow-3, to-2)
infmod(Continuing-1, allow-3)
det(procedure-7, this-4)
advmod(repulsive-6, morally-5)
amod(procedure-7, repulsive-6)
dobj(allow-3, procedure-7)
aux(take-9, to-8)
xcomp(allow-3, take-9)
dobj(take-9, place-10)
cop(indication-14, is-11)
advmod(indication-14, just-12)
det(indication-14, an-13)
root(ROOT-0, indication-14)
det(state-17, the-16)
prep_of(indication-14, state-17)
amod(decay-20, moral-19)
prep_of(state-17, decay-20)
complm(is-24, that-21)
det(USA-23, the-22)
nsubj(is-24, USA-23)
ccomp(indication-14, is-24)
prep(is-24, in-25)
nsubj(going-30, it-27)
xsubj(get-32, it-27)
aux(going-30, 's-28)
neg(going-30, not-29)
ccomp(indication-14, going-30)
conj_and(is-24, going-30)
aux(get-32, to-31)
xcomp(going-30, get-32)
dep(better-34, any-33)
advmod(get-32, better-34)
mark(step-40, unless-35)
nsubj(step-40, people-36)
amod(consciences-39, good-38)
prep_with(people-36, consciences-39)
advcl(get-32, step-40)
prt(step-40, up-41)
xcomp(going-30, straighten-43)
conj_and(get-32, straighten-43)
dobj(straighten-43, things-44)
prt(straighten-43, out-45)

(ROOT
  (S
    (NP (DT A) (NN blastocyst))
    (VP (VBZ is)
      (ADVP (RB indeed))
      (NP (NN life)))
    (. .)))

det(blastocyst-2, A-1)
nsubj(life-5, blastocyst-2)
cop(life-5, is-3)
advmod(life-5, indeed-4)
root(ROOT-0, life-5)

(ROOT
  (S
    (NP (PRP It))
    (VP (VBZ is)
      (NP
        (NP (DT a) (NN ball))
        (PP (IN of)
          (S
            (VP
              (ADVP (RB rapidly))
              (VBG dividing)
              (NP (NNS cells)))))))
    (. .)))

nsubj(ball-4, It-1)
cop(ball-4, is-2)
det(ball-4, a-3)
root(ROOT-0, ball-4)
advmod(dividing-7, rapidly-6)
prepc_of(ball-4, dividing-7)
dobj(dividing-7, cells-8)

(ROOT
  (S
    (NP (DT This) (NN action))
    (VP (VBZ causes)
      (NP (JJ significant) (NN energy)
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN spent)))))))
    (. .)))

det(action-2, This-1)
nsubj(causes-3, action-2)
root(ROOT-0, causes-3)
amod(energy-5, significant-4)
dobj(causes-3, energy-5)
aux(spent-8, to-6)
auxpass(spent-8, be-7)
infmod(energy-5, spent-8)

(ROOT
  (S
    (NP (DT These) (NNS cells))
    (ADVP (RB already))
    (VP (VBP produce)
      (SBAR
        (S
          (NP
            (NP
              (NP (NN adenosine-triphosphate))
              (PRN (-LRB- -LRB-)
                (NP (NNP ATP))
                (-RRB- -RRB-)))
            (, ,)
            (ADVP (RB thus))
            (, ,))
          (VP (VBP are)
            (ADJP (RB biologically) (JJ alive))))))
    (. .)))

det(cells-2, These-1)
nsubj(produce-4, cells-2)
advmod(produce-4, already-3)
root(ROOT-0, produce-4)
nsubj(alive-14, adenosine-triphosphate-5)
abbrev(adenosine-triphosphate-5, ATP-7)
advmod(adenosine-triphosphate-5, thus-10)
cop(alive-14, are-12)
advmod(alive-14, biologically-13)
ccomp(produce-4, alive-14)

(ROOT
  (S
    (NP (JJ Biological) (NN death))
    (VP (VBZ occurs)
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (NNS cells))
          (VP (MD can)
            (ADVP (RB no) (RB longer))
            (VP (VB produce)
              (NP (NNP ATP)))))))
    (. .)))

amod(death-2, Biological-1)
nsubj(occurs-3, death-2)
root(ROOT-0, occurs-3)
advmod(produce-9, when-4)
nsubj(produce-9, cells-5)
aux(produce-9, can-6)
advmod(longer-8, no-7)
advmod(produce-9, longer-8)
advcl(occurs-3, produce-9)
dobj(produce-9, ATP-10)

(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP 've)
        (VP (VBN known)
          (NP
            (NP (DT a) (NN couple))
            (PP (IN of)
              (NP
                (NP (NNS women))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBD had)
                      (S
                        (NP
                          (NP (NNP C-sections) (CD 3))
                          (CC and)
                          (NP (CD 4) (NNS months)))
                        (ADJP (JJ premature))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (DT the) (NN baby))
      (VP (VBD managed)
        (S
          (VP (TO to)
            (VP (VB survive))))))
    (. .)))

nsubj(known-3, I-1)
aux(known-3, 've-2)
root(ROOT-0, known-3)
det(couple-5, a-4)
dobj(known-3, couple-5)
prep_of(couple-5, women-7)
nsubj(had-9, women-7)
rcmod(women-7, had-9)
nsubj(premature-15, C-sections-10)
num(C-sections-10, 3-11)
num(months-14, 4-13)
conj_and(C-sections-10, months-14)
nsubj(premature-15, months-14)
xcomp(had-9, premature-15)
det(baby-19, the-18)
nsubj(managed-20, baby-19)
xsubj(survive-22, baby-19)
conj_and(known-3, managed-20)
aux(survive-22, to-21)
xcomp(managed-20, survive-22)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (ADJP (JJ possible))))
    (, ,)
    (CC yet)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (ADVP (RB still))
        (ADJP (JJ legal)
          (S
            (VP (TO to)
              (VP (VB abort)
                (PP (IN during)
                  (NP (DT this) (NN time)))))))))
    (. ?)))

nsubj(possible-3, It-1)
cop(possible-3, 's-2)
root(ROOT-0, possible-3)
nsubj(legal-9, it-6)
cop(legal-9, 's-7)
advmod(legal-9, still-8)
conj_yet(possible-3, legal-9)
aux(abort-11, to-10)
xcomp(legal-9, abort-11)
det(time-14, this-13)
prep_during(abort-11, time-14)

(ROOT
  (S
    (ADVP (UH OK))
    (: ...)
    (NP (EX there))
    (VP (VBZ 's)
      (S
        (NP (NN something) (NN SERIOUSLY))
        (ADJP (JJ wrong)
          (PP (IN with)
            (NP (DT this) (NN picture))))
        (SBAR (IN if)
          (S
            (NP (PRP I))
            (VP (VBP do)
              (VP (VB say)
                (ADVP (RB so))
                (NP (PRP myself))))))))
    (. .)))

advmod('s-4, OK-1)
expl('s-4, there-3)
root(ROOT-0, 's-4)
nn(SERIOUSLY-6, something-5)
nsubj(say-14, SERIOUSLY-6)
dep(say-14, wrong-7)
det(picture-10, this-9)
prep_with(wrong-7, picture-10)
mark(say-14, if-11)
nsubj(say-14, I-12)
aux(say-14, do-13)
xcomp('s-4, say-14)
advmod(say-14, so-15)
dobj(say-14, myself-16)

