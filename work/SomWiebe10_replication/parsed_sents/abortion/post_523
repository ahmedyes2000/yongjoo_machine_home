(ROOT
  (S (`` ``)
    (NP (PRP I))
    (VP
      (VP (MD would)
        (VP (VB place)
          (NP (NN life))
          (PP (IN before)
            (NP (NN liberty)))))
      (, ,)
      (CC and)
      (VP (MD would) (RB rather)
        (VP (VB risk)
          (S
            (VP (VBG denying)
              (NP (NN someone))
              (NP
                (NP (DT a) (NN freedom))
                (SBAR
                  (S
                    (NP (PRP they))
                    (VP (MD should)
                      (VP (VB have)
                        (VP (VBN had)
                          (S
                            (VP (TO to)
                              (VP (VB try)
                                (CC and)
                                (VB save)
                                (NP
                                  (NP (NN someone) (POS 's))
                                  (NN life)))))
                          (SBAR (IN than)
                            (S
                              (VP (VBP deny)
                                (NP (NN someone))
                                (NP
                                  (NP (DT a) (NN life))
                                  (SBAR
                                    (S
                                      (NP (PRP they))
                                      (VP (MD should)
                                        (VP (VB have)
                                          (VP (VBN had)
                                            (S
                                              (VP (TO to)
                                                (VP (VB try)
                                                  (CC and)
                                                  (VB save)
                                                  (NP
                                                    (NP (NN someone) (POS 's))
                                                    (NN freedom)))))))))))))))))))))))))
    (. .)))

nsubj(place-4, I-2)
nsubj(risk-12, I-2)
aux(place-4, would-3)
root(ROOT-0, place-4)
dobj(place-4, life-5)
prep_before(place-4, liberty-7)
aux(risk-12, would-10)
advmod(risk-12, rather-11)
conj_and(place-4, risk-12)
xcomp(risk-12, denying-13)
iobj(denying-13, someone-14)
det(freedom-16, a-15)
dobj(denying-13, freedom-16)
dobj(had-20, freedom-16)
nsubj(had-20, they-17)
xsubj(try-22, they-17)
aux(had-20, should-18)
aux(had-20, have-19)
rcmod(freedom-16, had-20)
aux(try-22, to-21)
xcomp(had-20, try-22)
xcomp(had-20, save-24)
conj_and(try-22, save-24)
poss(life-27, someone-25)
dobj(try-22, life-27)
mark(deny-29, than-28)
advcl(had-20, deny-29)
iobj(deny-29, someone-30)
det(life-32, a-31)
dobj(deny-29, life-32)
dobj(had-36, life-32)
nsubj(had-36, they-33)
xsubj(try-38, they-33)
aux(had-36, should-34)
aux(had-36, have-35)
rcmod(life-32, had-36)
aux(try-38, to-37)
xcomp(had-36, try-38)
xcomp(had-36, save-40)
conj_and(try-38, save-40)
poss(freedom-43, someone-41)
dobj(try-38, freedom-43)

(ROOT
  (S (`` ``)
    (SBAR
      (WHNP (WDT which))
      (S
        (VP (VBZ is)
          (ADJP (JJ odd)))))
    (, ,)
    (S
      (NP (PRP you))
      (VP (VBG being)
        (NP (DT a) (JJ military) (NN man))))
    (. .)))

nsubj(odd-4, which-2)
cop(odd-4, is-3)
dep(man-10, odd-4)
nsubj(man-10, you-6)
cop(man-10, being-7)
det(man-10, a-8)
amod(man-10, military-9)
root(ROOT-0, man-10)

(ROOT
  (S
    (S
      (NP (PRP we))
      (VP (VBP 've)
        (VP (VBN argued)
          (ADVP (DT this) (IN before))
          (: ...)
          (FRAG (CC but)
            (ADVP (RB now))
            (SBAR (IN that)
              (S
                (NP (FW i))
                (VP (VBP know)
                  (SBAR
                    (S
                      (NP (PRP you))
                      (VP (VBP 're)
                        (ADJP (JJ pre-military))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ has)
      (NP
        (NP (PDT all) (DT the) (JJR more))
        (VP (VBG meaning))))
    (. .)))

nsubj(argued-3, we-1)
aux(argued-3, 've-2)
ccomp(has-17, argued-3)
dep(before-5, this-4)
advmod(argued-3, before-5)
dep(now-8, but-7)
dep(argued-3, now-8)
dep(know-11, that-9)
nsubj(know-11, i-10)
dep(now-8, know-11)
nsubj(pre-military-14, you-12)
cop(pre-military-14, 're-13)
ccomp(know-11, pre-military-14)
nsubj(has-17, it-16)
root(ROOT-0, has-17)
predet(more-20, all-18)
det(more-20, the-19)
dobj(has-17, more-20)
partmod(more-20, meaning-21)

(ROOT
  (SBARQ
    (WHADVP (WRB how))
    (SQ (MD can)
      (NP (PRP you))
      (VP (VB be)
        (VP (VBG going)
          (PP (IN into)
            (NP
              (NP (PDT such) (DT a) (NN position))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (NN liberty))
                  (VP (VBZ is)
                    (VP (VBN extended)
                      (PP (IN over)
                        (NP (NN life))))))))))))
    (. ?)))

advmod(going-5, how-1)
aux(going-5, can-2)
nsubj(going-5, you-3)
aux(going-5, be-4)
root(ROOT-0, going-5)
predet(position-9, such-7)
det(position-9, a-8)
prep_into(going-5, position-9)
advmod(extended-13, where-10)
nsubjpass(extended-13, liberty-11)
auxpass(extended-13, is-12)
rcmod(position-9, extended-13)
prep_over(extended-13, life-15)

(ROOT
  (S
    (VP
      (VP (VB give)
        (NP (PRP me))
        (NP (NN liberty)))
      (CC or)
      (VP (VB give)
        (NP (PRP me))
        (NP (NN death))))
    (. .)))

root(ROOT-0, give-1)
iobj(give-1, me-2)
dobj(give-1, liberty-3)
conj_or(give-1, give-5)
iobj(give-5, me-6)
dobj(give-5, death-7)

(ROOT
  (S
    (NP (NN freedom))
    (VP (VBZ is) (RB n't)
      (ADJP (JJ free)))
    (. .)))

nsubj(free-4, freedom-1)
cop(free-4, is-2)
neg(free-4, n't-3)
root(ROOT-0, free-4)

(ROOT
  (NP
    (NP (DT a) (CD thousand) (JJ other) (NNS cliches))
    (: ...)))

det(cliches-4, a-1)
num(cliches-4, thousand-2)
amod(cliches-4, other-3)
root(ROOT-0, cliches-4)

(ROOT
  (S
    (NP
      (NP (NN life))
      (PP (IN without)
        (NP (NN liberty))))
    (VP (VBZ is)
      (NP (DT a) (JJ poor) (, ,) (JJ sad) (NN life)))
    (. .)))

nsubj(life-9, life-1)
prep_without(life-1, liberty-3)
cop(life-9, is-4)
det(life-9, a-5)
amod(life-9, poor-6)
amod(life-9, sad-8)
root(ROOT-0, life-9)

(ROOT
  (NP
    (NP (RB not) (RB much))
    (PP (IN of)
      (NP (DT a) (NN life)))
    (ADVP (IN at) (DT all))
    (. .)))

neg(much-2, not-1)
root(ROOT-0, much-2)
det(life-5, a-4)
prep_of(much-2, life-5)
advmod(much-2, at-6)
pobj(at-6, all-7)

