(ROOT
  (NP
    (NP
      (NP (NNP Notice))
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP you))
          (VP (VBP have)
            (VP (VBN done))))))
    (: ;)
    (S
      (S
        (NP (PRP You))
        (VP (VBP 've)
          (VP (VBN imposed)
            (NP
              (NP (DT an)
                (ADJP (JJ arbitrary))
                (NN standard))
              (PRN (-LRB- -LRB-)
                (ADJP (JJ dependent)
                  (PP (IN on)
                    (NP
                      (NP (DT the) (NN womb))
                      (PP (IN of)
                        (NP (DT another))))))
                (-RRB- -RRB-))))))
      (CC and)
      (S
        (NP (RB then))
        (VP (VBD said)
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ is)
                (ADJP (JJ OK)
                  (S
                    (VP (TO to)
                      (VP (VB kill)
                        (NP
                          (NP (DT any) (JJ human) (NN being))
                          (SBAR
                            (WHNP (WP who))
                            (S
                              (VP (VBZ does) (RB n't)
                                (VP (VB meet)
                                  (NP (DT this) (NN standard)))))))))))))))))
    (. .)))

root(ROOT-0, Notice-1)
dobj(done-5, Notice-1)
rel(done-5, what-2)
nsubj(done-5, you-3)
aux(done-5, have-4)
rcmod(Notice-1, done-5)
nsubj(imposed-9, You-7)
aux(imposed-9, 've-8)
dep(Notice-1, imposed-9)
det(standard-12, an-10)
amod(standard-12, arbitrary-11)
dobj(imposed-9, standard-12)
dep(standard-12, dependent-14)
det(womb-17, the-16)
prep_on(dependent-14, womb-17)
prep_of(womb-17, another-19)
nsubj(said-23, then-22)
dep(Notice-1, said-23)
conj_and(imposed-9, said-23)
nsubj(OK-26, it-24)
cop(OK-26, is-25)
ccomp(said-23, OK-26)
aux(kill-28, to-27)
xcomp(OK-26, kill-28)
det(being-31, any-29)
amod(being-31, human-30)
dobj(kill-28, being-31)
nsubj(meet-35, being-31)
aux(meet-35, does-33)
neg(meet-35, n't-34)
rcmod(being-31, meet-35)
det(standard-37, this-36)
dobj(meet-35, standard-37)

(ROOT
  (S
    (NP (DT That) (NN standard))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN slid)
          (ADVP (RB anywhere) (RB up)
            (CC or)
            (RB down))
          (, ,)
          (PP (IN from)
            (NP
              (NP (NN conception))
              (PP (TO to)
                (NP (JJ old) (NN age))))))))
    (. .)))

det(standard-2, That-1)
nsubjpass(slid-5, standard-2)
aux(slid-5, can-3)
auxpass(slid-5, be-4)
root(ROOT-0, slid-5)
dep(up-7, anywhere-6)
advmod(slid-5, up-7)
advmod(slid-5, down-9)
conj_or(up-7, down-9)
prep_from(slid-5, conception-12)
amod(age-15, old-14)
prep_to(conception-12, age-15)

(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (VBZ 's)
        (SBAR
          (WHNP (WP what))
          (S
            (VP (VBZ is)
              (VP (VB know)
                (PP (IN as)
                  (NP (JJ moral) (NN relativism)))))))))
    (CC and)
    (S
      (NP (PRP it))
      (VP (VBZ 's)
        (NP (DT a)
          (ADJP (RB morally) (JJ bankrupt))
          (NN ethic))))
    (. .)))

nsubj('s-2, It-1)
root(ROOT-0, 's-2)
nsubj(know-5, what-3)
aux(know-5, is-4)
ccomp('s-2, know-5)
amod(relativism-8, moral-7)
prep_as(know-5, relativism-8)
nsubj(ethic-15, it-10)
cop(ethic-15, 's-11)
det(ethic-15, a-12)
advmod(bankrupt-14, morally-13)
amod(ethic-15, bankrupt-14)
conj_and('s-2, ethic-15)

(ROOT
  (S
    (NP (DT The) (NN question))
    (VP (VBZ is)
      (NP
        (NP (RB not))
        (: ;)
        (SBARQ
          (WHPP (IN at)
            (WHNP (WDT what) (NN point)))
          (SQ (MD can)
            (NP (PRP we))
            (VP (VB kill)
              (UCP
                (NP (PRP it))
                (, ,)
                (CC but)
                (SBAR
                  (WHNP (WP what))
                  (S
                    (VP (VBZ is)
                      (NP (PRP it))))))))
          (. ?))))))

det(question-2, The-1)
nsubj(not-4, question-2)
cop(not-4, is-3)
root(ROOT-0, not-4)
det(point-8, what-7)
prep_at(kill-11, point-8)
aux(kill-11, can-9)
nsubj(kill-11, we-10)
dep(not-4, kill-11)
dobj(kill-11, it-12)
nsubj(it-17, what-15)
cop(it-17, is-16)
dobj(kill-11, it-17)
conj_but(it-12, it-17)
rcmod(it-12, it-17)

(ROOT
  (S
    (NP (PRP You))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP
            (ADVP (RB first))
            (VB establish)
            (SBAR (IN that)
              (S
                (NP
                  (NP (DT this) (NN standard))
                  (PP (IN of)
                    (NP (NNP yours))))
                (VP (VBZ is)
                  (ADJP (RB morally) (JJ justified))
                  (SBAR (IN because)
                    (S
                      (NP (PRP I))
                      (VP (VBP 'm) (RB not)
                        (VP (VBN persuaded)
                          (SBAR (IN that)
                            (S
                              (NP (PRP it))
                              (VP (VBZ is)))))))))))))))
    (. .)))

nsubj(need-2, You-1)
xsubj(establish-5, You-1)
root(ROOT-0, need-2)
aux(establish-5, to-3)
advmod(establish-5, first-4)
xcomp(need-2, establish-5)
complm(justified-13, that-6)
det(standard-8, this-7)
nsubj(justified-13, standard-8)
prep_of(standard-8, yours-10)
cop(justified-13, is-11)
advmod(justified-13, morally-12)
ccomp(establish-5, justified-13)
mark(persuaded-18, because-14)
nsubjpass(persuaded-18, I-15)
auxpass(persuaded-18, 'm-16)
neg(persuaded-18, not-17)
advcl(justified-13, persuaded-18)
complm(is-21, that-19)
nsubj(is-21, it-20)
ccomp(persuaded-18, is-21)

