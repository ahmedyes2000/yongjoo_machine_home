(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD may)
        (VP (VB be)
          (ADJP (JJ crappy))
          (SBAR (IN that)
            (S
              (NP
                (NP (DT a) (NN person))
                (-LRB- -LRB-)
                (CC or)
                (NP (DT a) (JJ potential) (NN person))
                (-RRB- -RRB-))
              (VP (MD will)
                (VP
                  (VP (`` ``) (VB die) ('' ''))
                  (CC or)
                  (VP
                    (ADVP (RB just) (RB not))
                    (VB live)
                    (SBAR (IN because)
                      (S
                        (NP (PRP you))
                        (VP (VBP choose)
                          (S
                            (VP (TO to)
                              (VP (VB retain)
                                (NP (PRP$ your) (NNS rights))))))))))))))))
    (, ,)
    (CC but)
    (S
      (ADVP (RB fortunately))
      (PP (IN for)
        (NP
          (NP (PRP you))
          (CC and)
          (NP (NN everyone) (RB else))))
      (NP (PRP you))
      (VP (VBP have)
        (NP (DT those) (NNS rights))))
    (. .)))

nsubj(crappy-4, It-1)
aux(crappy-4, may-2)
cop(crappy-4, be-3)
root(ROOT-0, crappy-4)
complm(die-16, that-5)
det(person-7, a-6)
nsubj(die-16, person-7)
nsubj(live-21, person-7)
det(person-12, a-10)
amod(person-12, potential-11)
conj_or(person-7, person-12)
nsubj(die-16, person-12)
aux(die-16, will-14)
ccomp(crappy-4, die-16)
advmod(not-20, just-19)
neg(live-21, not-20)
ccomp(crappy-4, live-21)
conj_or(die-16, live-21)
mark(choose-24, because-22)
nsubj(choose-24, you-23)
advcl(live-21, choose-24)
aux(retain-26, to-25)
xcomp(choose-24, retain-26)
poss(rights-28, your-27)
dobj(retain-26, rights-28)
advmod(have-38, fortunately-31)
prep_for(have-38, you-33)
conj_and(you-33, everyone-35)
prep_for(have-38, everyone-35)
advmod(everyone-35, else-36)
nsubj(have-38, you-37)
conj_but(crappy-4, have-38)
det(rights-40, those-39)
dobj(have-38, rights-40)

